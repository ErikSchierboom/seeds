{"Data":{" ":["Neat!","Cool!","nice",":)","Great!","Nice!","What","aaaand","interesting,","Thanks,","Also","I","Sure","Nice!","not","do","I","I","Neat!","Perhaps","-","-","If","This","Nice","One","hmm...","Hmm,","This","Nice","What","For","`(defn-","oh","i","Thanks","Would","Check","Hmm,","Nice!","One","yeah,","Nice!","Would","Would","Nice!","Would","Is","Good","Formatting","Oh","Oh,","Thanks!","I","Had","Thanks","Nice!","Yes,","Nice","looking","Nice!","Nice!","Rubysolo,","How","Would","Excellent","Can","Should","it","Thanks","Those","higher-order","Thanks,","Their",":D","You","Oh","yeah,","sounds","pardon","Yes,","Likewise!","Sorry","I","I","In","I'm","I","In","By","I","maybe.","I","using","Also,","Can","Would","Hmm,","In","Oh,","I","Aha,","Robustness","Yeah,","How","Also,","One","Thanks!","I","Checking","This","As","Nice,","Weird,","Aha,","`assert_equal","However,","Thanks","I","Nice.","your","-","-","Sure,","Thanks","Very","Cool,","I","They","Hi,","Would","Great!","Ok,","Would","This","I","Looks","I","That","I","moving","It's","Despite","This","-","-","-","Er,","It","Also,","I'm","Hmm,","Very","You","Apparently","This","would","I","I","I've","I","In","I","Looks","I've","As","According","Thanks","What","I","Hi","First","I","Second","Ok,","The","(also,","The","It's","(although,","You've","FWIW,","The","You","Other","So","In","`silent?`","@cordie","Thanks","I","\"you","I","I","(assert","I","Looks","Would","For","hmm,","very","That's","Wow,","I","In","or","sorry,","(or","chrome","nil","(defn-","(or","For","I","Maybe","Do","This","Ok","That's","Thanks!","HAHA,","Have","Awesome!","Ok","Good","I","Have","Looks","Looks","You've","I","Thanks,","Any","Have","Have","What","Looks","Thanks","PS:","I","sweet,","Great","Have","I","Good","The","Thanks!","What","Do","Great","Thanks!","yeah","Nice.","Yeah,","Thoughtful!","Very","This","Good","Ah,","yes,","Have","Good","Want","Yeah",":)","I","Nice!","Good","Nice!","Looks","Ok.","Nice!","One","Otherwise,","Ah,","Anyway,","Looks","Thanks","Thanks","I","It","Thanks","Note","This","Looks","Neat!","Have","I","turns","i","Neat!","Very","haha,","I","Have","Was","I","ha,","This","Is","Totally","Very","Nice!","Although","Looks","Looks","Thanks,","I","Is","hmm...","Looks","Good","Very","I","To","I","It","Cool,","To","Nope,","It","This","May","I","Hi,","The","I","Lastly,","Oh","Awesome!","Great!!","What","Instead","And","How","Also,","This","Did","Yay,","However,","This","I","String","Thanks","Looks","I","```clojure","(ns","```","However","Pretty","What","Thanks","```clojure","(ns","(:require","```","or","```clojure","(ns","(:require","```","Encoding","How","Otherwise","I","Looks","Only","I","```clojure","(replace","```","That","I","The","I","I've","This","About","More","My","That's","If","Ah,","Both","So,","(str/upper-case","...which","(-\u003e","Which","The","It","I'm","Did","I","Looks","I","Is","I","On","How","what","You","I","Have","Other","Can","Other","It's","Maybe","You","In","If","Have","Moving","Maybe","Maybe","Moving","That","I","I","Feel","If","It","Basically,","Then,","Since","Thank","In","This","Nice","You're","I","I","(And","I","Do","I","Nice","`:else","Yeah,","I","Looks","Regexes","I","Would","Check","This","Nice","Would","I","Thanks!","Hi","Thanks","I","Hi,","Nice","Why","I","Also","It's","Just","Ok,","This","what","Fair","Should","You","Hey,","Also,","I'm","Great","The","Well,","Great","Are","The","Have","Looks","Oh,","On","reusable","super","More","Because","In","TL;DR","On","*","*","More","Ah,","Hey","A","I'm","Alternatively,","```","(ns","(require","```","and","Here's","```","(ns","(require","```","Then,","Nice.","I","I","I","Hey","Good","1.","2.","3.","`(ns","(:use","...or","`(ns","(:require","I","Ok,","I've","In","I","Great","Why","Also,","I","I","Ha","I","The","Would","Looks","Why","An","(defn-","(clojure.string/blank?","which","Yeah,","I'm","Nope,","Great!","I'm","I","I","Thanks,","Nice,","Is","That's","Nice!","Very","About","LGTM","Awesome.","Looks","Check","Do","This","Have","Well,","Probably","It","This","This","This","Also,","Love","Very","Hi,","P.S.","Can","Looks","It","Good","A","Are","And","I","Would",":)","I","I","As","Hadn't","(Accidental","Thanks","This","Also,","Thank","I","Thanks","Nice!","Something","It","Ah,","A","-","-","-","This","Thanks","Would","Nice,","Does","Looking","The","I","Moving","Did","Also,","Any","Thank","I","Good","Great!","I","Agreed.","Try","Can","Looks","Good","Didn't","@zaria-ee,","The","Instead","Looks","I","Nice","You","Can","Why","Edit:","You","Submitted","ah,","Maybe","Have","Nothing","Very","Yes.","Done","Thanks!","I","If","Thanks!","Have","well,","Sweet!","Very","I","Thanks","Neat!","Thanks,","You","And","I","Please","Thanks","Cool!","So","Answering","Awesome.","I've","It's","Oh","Clojure","The","Accidental","Ok.","I","(=","Thanks","Nothing","Looking","Love","Ah,","Thanks!","Nope,","Looks","Good","Neat,","Thanks","Woops,","Great","What","Nice!","Excellent!","Nice!","Thanks,","But","Agreed","Thanks.","You","Looks","For","Alright,","Neat.","I","Looking","Sweet,","haha,","To","This","Nice!","Nice!","I","Whoops,","Nice!","What's","Yup,","This","Looks","Good","This","Thanks!","Your","You","Nice!","I","I","Possibly","Hmm,","I","My","This","Yeah","Nice","Sorry","This","I","Looks","I","For","A","I","Hard","That's","The","Oops.","Okay,","I","What","I","I","Otherwise,","Maybe","Hmm,","I","Otherwise,","Actually,","`blank?`","I","@ryann","@tia","This","For","It","Overall","In","As","````","(defn-","(=","````","Other","We've","I","Performed","Assuming","In","This","I","Everything","I","This","This","Typically","Hiya,","Here's","-","-","Sorry","I","```clj","(=","```","So","```clojure","(map","{:T","(map","(comp","\"GATTACA\"))",";","```","This","Would","Looks","The","Well,","The","Also,","Otherwise,","I've","```clojure","(defn","(=","```","looks","It","Thanks.","Nice","Do","Also","Looks","Very","I","I’m","I'm","The","Other","Agreed.","PS:","Maybe","Ah","In","If","Reads","Nice","It","Also","Great!","One","```","(def","```","I","Thanks,","I'll","It","A","Looks","Thanks","I","I","Interesting","I","You","Also,","Otherwise,","Great!","Hmm,","Ok,","&gt;","Putting","I","Fully","Thank","I","Also,","Otherwise,","Looking","Have","Oops,","That's","Cool!","This","That","Very","I","On","Thanks!","Pretty","I","But","Speaking","Pretty","Why","Shout","Haven’t","Very","So","```clj","(defn","(empty?","```","Thank","I'm","Looks","This","-","-","Nice.","\u003e","Yes,","Also,","Otherwise,","Thanks","For","I","Yes,","The","My","The","How","It","That's","I","Instead","Would","I've","I","One","Looks","`blank?`","Have","Are","Have","I'm","But","I","I","If","Would","I","Adding","I","I","I","Using","Thanks","I've","`let`","Otherwise","I","Hey,","You","Good","Nice","Does","*","*","Also,","I'm","It's","Getting:","I","Thank","Since","Also,","This","Ok,","This","Honestly","```clojure","(ns","(:use","```","instead","Looks","This","Do","Yup,","How","Neat,","There","This","Also,","```clojure","(defn-","```","It's","Nice.","Thanks","What","To","Thanks!","Interesting,","I","Nice!","Looks","Maybe","Looks","I","Thank","-","-","-","I'm","If","Sure,","I","Your","Looks","Great!","Great!","2","There","I","https://github.com/bbatsov/clojure-style-guide","Good","Clear","Finding","Great!","Yeah,","Let","Please","A","Nice","Neat!","Ouch,","Remember","Consider","Great!","I","I","Ah,","I","/me","Honestly,","Also,","Great","You","Did","You're","That's","Don't","I","There","I'm","Then","It","Very","Pretty","Great!","Looks","What","Could","Ah,","It's","Great!","Nice.","Looks","I","Good","Is","That's","Good","Hmm,","I'm","But","Decided","But","`(=","You","Looks","###","-","-","One","Great.","Thanks","Thanks,","I","Thanks,","Looks","@aniyah","@ransom","Ouch,","@caterina","Must","Looks","@modesta","Regarding","Hint:","I","Submitted","Spacing","Props","you're","Great!","I've","-","You're","Great","Good.","Have","Thanks","Good!","I","Is","Would","Are","Cool","valid","Thank","Looks","@oleta","Use","You","`\\w+`","Top","Try","It","Thanks!","One","Ok.","Ignore","Thanks.","My","Keep","Hard","Ok,","Thank","Ooh,","Thanks","frequencies,","It's","I'm","I","Very","Very","Forgot","@agustin","Looks","Thanks","I","Awesome","Nice!","Check","Nice","Actually","Much","No.","Have","The","Love","I","I'd","normalize","No","I'll","Aha!","No","Is","Thanks!","Not","Definitely","Damn.","Can","I","I'm","Good","It´s","You","good","With","Whoops...wrong","O_O","Looks","Only","Formatting","Also","Formatting","Hmm","Since","Counting","`letfn`","Sorry,","Indeed,","Having","Maybe","```","(apply","```","I","Ah,","The","Isn't","That","I'd","I","Regarding","I","Thank","What","Ok,","You","Take","Is","Thank","What","```clojure","(join","(for","(str","```","This","I","`range`","There's","I","My","I","I","Agreed","@quincy","Don't","Zoldar","Although","Hey,","Can't","What,","Hint:","Higher","Good","Looks","Updated","Updated","This","Man","Regarding","I'm","jgdavey","Hey,","Now","Doesn't","Not","How",":D","Wouldn't","Great","There","Use","I","Happens","This","Feel","*","*","*","I'm","That","`re-seq`","Right,","Interesting.","```","$","Testing","Ran","0","```","It's","\u003cpre\u003e","user=&gt;","#'user/add","user=&gt;","2","user=&gt;","nil","user=&gt;","#'user/silence?","user=&gt;","true","\u003c/pre\u003e","Either","```","(ns","(:require",":rename","```","This","This","Okay,","Moving","Nah","In","Very","Yeah","This","This","Thank","What","I","Very","I","From","Thanks","Why","Sure,","Basically","In","Would","That's","That","Now,","I","You","That","Looks","You","This","I","You","This","Looks","I","`bob/yelling?`","`(apply","It'd","So","How","That's","Of","I","Also,","Not","Would","Looks","oups","Thanks","Sorry","I","I","Felbit:","Etrepum:","That's","(defn-","(let","(fn","Then","Yeah","You","If","Can","Destructuring","Importing","I","You","Thanks!","Hi.","Good","I'm","Thank","Btw,","Would","I","Yeah.","Yeah,","I","Beautiful!","I'd","I","Looks","(I'm","I","Have","Hint:","Your","Also,","CamelCased","1.","2.","Yeah","You","Some","1.","2.","3.","If","**But**","Hey,","Besides","Oh,","Did","And","I","I","I","Sorry","Would","One","```","(def","(let",";","```","Aw","I'd","If","You're","@amely","That","I","Really","Agreed","I","While","Due","The","Duh,","http://clojuredocs.org/clojure_core/clojure.core/require","Thanks","@aniyah","Another","Well","As","The","Good","Joining","In","@emerald","Regex","@marjorie","Should","It's","`:use`","@margarete","You","Did","I","I","@mae","However,","The","@eleonore","`shouty?`","That","Is","There's","One","I","@winston","In","clojure.string/blank?","And","I","The","I","As","Added","Given","What","Otherwise,","If","I've","Looks","While","Is","I","_Note,","It's","You're","Do","I've","I","But","I've","-","-","-","what","Please","Please","Both","Have","FWIW,","```","(ns","(:use","(:refer-clojure","```","...","With","There","So","Ok,","I'm","So","I","(I","So","Hey,","Maybe","```clojure","(re-seq","```","over","```clojure","(str/split","```","I","IMO,","I","Now","How","1.","2.","I've","It's","Sure.","Thank","You","I've","Clojure","Again","@spencer","I've","Some","Instead","@rosemary","Last","I","I'm","Also,","I","Have","I","2","1)","2)","@tyrell","Interesting","Also,","Looks","LOL,","I","Looks","I","Very","Check","Also,","`cond`","I've","Cool.","You","Maybe","I","It's","I","Clean,","It's","I","```clojure","(defn","[dna-string]","(apply","```","but","It's","I","@destiny:","Something","```clojure","(ns","(:use","(defn","[s]","(=","(defn","[s]","(=","(defn","[s]","(cond","(empty?","(shouting?","(question?",":else","```","That's","Also","I'm","Nice","I","Shorthand","It","I","ooh","Perhaps","Or","That","`:use`","I","@michele","@michele","Oops","But","Are","Can","It","Are","@michel","@michel","Oh","Too","Can","Can","Are","Sorry,","I","`(def","I","(e.g.","I","IMO,","The","Do","I","For","I'd","You","But","You","@devon","1.","I","Maybe","Now","Also,","This","#\"\\W+\"","Yeah.","I","Have","Also,","I'd","Ah,","Might","I","Are","Is","Yay!","Unfortunately","Better","Good.","Good!","Using","Neat","What","Will","Alright,","Can","What","I","I","My","Btw:","Better?","Mainly","String","Looks","Ah,","Looks","Hard","Would","Noted,","`let`","Only","Another","Again,","Looks","Thanks","Yup.","You","Great!","remove","Thank","That's","Looks","That's","Thanks","do","You","`use`","Great!","How","I","Hopefully","Looks","Yes,","Ignore","Thanks","I","Parentheses","Ah,","Succint","Consider","Thanks!","`format`!!","Better,","Try","Very","Hmm,","Thanks,","Sweet.","I'm","Your","&gt;","So","Is","You","You","You","I'm","Please","A","Maintainability","Also,","Consider","I","It","You're","Smart","I","Also","I","I","This","Perhaps","I","Specifically","Or","While","Two","I","Attempt","`(update-in","Maybe","Version","*","*","*","*","I'd","Ah","I","My","Although","This","Here's","```clojure","(defn-","(=","```","That's","Remember","```clojure","({\\a",";;","({\\a",";;","```","Yeah,","Since","Would","Is","`random-string-range`","The","Good","(partial","It","Thanks","Also","Resubmitted.","Could","The","user=&gt;","(fn*","user=&gt;","(inc","As","Other","Formatting","You","Looking","I","```","(-&gt;","(range","(map","#(interleave","(apply","```","Are","Naming","You","You","Beyond","(ns","(:require","is","That's","About","Looks","There","Going","Thanks","Compiler","When","`ns`","No","```digest```","Smart","I","You","Changed","Making","We","Beyond","(ns","(:require","Actually","Looks","Even","Formatting","Optionally,","The","`clojure.string/join`","As","The","How","Or","That","There","I'm","Very","Have","It","Thank","Looks","Thank","You're","In","Ah,","I","Besides:","Is","Actually,","```clojure","let","(#{adenosine","```","it","Argh","And","Give","With","First,","EDIT:","Don't","It","As","I","With","Ah,","Alternatively,","Oh","I","Looks","`use`","(ns","(:require","I","Other","Based","1.","2.","Good","Thanks","&gt;","Silly","&gt;","Ah,","You","You","You're","Try","Code","Yeah,","Yeah,","Too","Do","Anyway,","Sorry!","```","(ns","(:require","```","Here's","The","Or","I'm","I'm","Hey,","Zipping","Dont","I'm","I","I","Remember","What","Oh,","There's","It's","Okay,","If","Count","I'm","Yeah,","One","Looks","Two","The","Edit:","I","I","Besides","Isn't","```clojure","(=","```","It's","What","I","Wow,","As","Howdy,","Instead","Observe","Looks","Enough","Would","Does","`get`","It","I'm","Sort","https://gist.github.com/zoldar/6425609","EDIT:","Good","It","Very","Looks","user=&gt;","#'user/word","user=&gt;","\"Elapsed","nil","user=&gt;","\"Elapsed","nil","user=&gt;","\"Elapsed","nil","user=&gt;","\"Elapsed","nil","user=&gt;","\"Elapsed","nil","user=&gt;","\"Elapsed","Any","Ah,","Good.","Why","`ref`","Aliasing","@katrina","@janae","I","What","@isabel","@edmund","Try","I","Yeah,","After","On","You","```","(defn","(update-in","```","This","Thanks","`and`","You","`ref`s","Ah,","I","Damn,","I","Could","Makes","You","Used","Yeah,","You","Improved","@jonas","Thanks","@art","@trinity","@trinity","Apparently","Thanks,","You","I","Agreed","I","Indeed","Thanks.","Yes,","A","You","Thanks","Tests","Regarding","EDIT:","@elwin,","Good","Thanks","Looks","`seq`","I","That's","What","The","Is","Seems","Thanks","This","Closing","You","That's","Think","I","Thanks",":use","You're","Thank","(","Wow,","It","You","For","https://github.com/bbatsov/clojure-style-guide","Shortest","@phoebe","is","also,","the","Simplify","`lower-case`","Give","Using","Saved","The","For","Good!","I'd","My","What","What","I","I'd","Two","1.","2.","Naming","Great","Thanks!","`merge-with`","Nothing","Oh,","A","Take","I","Wow!","Those","It","Ok,","(ns","(require","(def","(defmacro","`(do","(alter-var-root","(defn-","(-&gt;","(not","*checks*)","first","(defmulti","(defmacro","`(defmethod","(defcheck","(=","(defcheck","(and","(=","(defcheck","(and","(=","(defresponse","(defresponse","(defresponse","(defresponse","(defn","(bob","The","Moved","The","Remember","Perhaps","Also,","Would","One","Ouch,","Looks","Yeah,","Much","You","String","OK,","This","```clojure","(=","```","(and","How","Looks","There's","Yeah,","I'm","It",":)","This","You","You're","Yeah","Is","Also,","You're","Looking","I","```clojure","(def","(def","(def","```","Ah,","I","user=&gt;","\\a","user=&gt;","nil","Exploit","`seq`s","It's","Not","Definitely","`valid-nucleotide?`","Saw","That's","You","Ah","Just","I","I","Good.","@granville","Am","Remember","It","`if-let`!!","New","starting","Ok,","`when-not`","Maybe","Could","It's","Wasn't","Great","Great","Have","I've","BTW:","@pedro,","If","Nice","Thanks","While","Thanks","No","Great","It's","It","There's","user=&gt;","\\a","user=&gt;","nil","Consider","Formatting","While","Overall,","Oh","Thanks","I","I","user=&gt;","\\a","user=&gt;","nil","Think","Helper","Please","Helped","Consider","Consider","I","`merge-with`","No","Good.","@rosalee","They","Now","I","Remember","Good","Hi..thanks","When","You","Outstanding","I'm","Because","I'm","You","Nice","You","Great","I","I'm","(defn-","I","It","What's","Looks","While","That","Darn.","I","Tiny,","```dna_string```","You","Sure.","Is","I","Nicely","Neat","Would","Thank","Bravo,","```","(defn","[s]","(case","(\\m","(\\T","\\e","\"Fine.","```","The","Well","Clever","###","*","###","*","*","Good","Thanks","`invaild-number`","Clojure","You","I","This","Why","Check","There's","For","@violet","Any","command","Do","Convinced","Sorry","The","Does","Is","Oh","Frequencies","This","Accidental","While","Consider","Also","Nice","have","Thanks","Indeed","Which","-","or","-","One","How","For","Would","(basically,","Made","Think","I","You","[The","[worst]:","@jackie","Your","Thanks","No,","You","Fair","Thank","Also,","This","Quite","Thanks,","It","I","@donato","For","I","The","Have","Thank","Regarding","I'll","Memoize","Made","Looks","reduce-kv","I","A","1.","2.","3.","4.","Just","No,","If","Version","Where","Oh,","I'm","I","Yes,","I","I'm","Don't","```clojure","(:refer-clojure","```","to","Nice,","In","Personally","Looks","@clay","Clojure","I","```clojure","(defn-","(let","[word-lc","```","Is","Also,","```clj","(str/replace",";;=&gt;","```","One","Oops,","A","This","Sorry,","OMG,","@floy","If","OK","This","I","In","```clojure","(defn-","(let","(and","```","We","No","Not","Very","I","If","While","+1","Picked","Don't","Looks","```clojure","(re-seq","```","Ah,","I","```clojure","(cond","(silence?","(shouting?","(question?",":else","```","...but","Is","Can","Did","```clojure","(cond","(clojure.string/blank?","(=","...)","```","Like","```clojure","(defn","[greeting]","(=","```","Then","```clojure","(cond","(clojure.string/blank?","(shouting?","...)","```","Think","You","Looks","Well,","`(repeatedly","I'm","This","Check","I","I","This","Yes,","What","I","The","As","I","If","It","I","@ramon","I","Minor","This","Yep,","I","Interesting","I","Pretty","I'd","I","I'm","I","+1","If","Thanks","I'll","@kayley","I","There","Pretty","@jaime","Updated","Clojure's","I","You","There","I'm","I","Ah","Might","Thanks","I","Thanks!","I","This","\u003cpre\u003e","(defn","(frequencies","\u003c/pre\u003e","Much","Is","\u003cpre\u003e","(defn","[phrase]","(frequencies","\u003c/pre\u003e","@wilhelm","Accidental","Can","`q`","If","All","Great","Other","This","@bruce","Brilliant.","Would","Good","Thanks","Looks","A","```clojure","(ns","(:require","```","This","Generally","You","I","You","Small","I","Instead","I","However","I","@keagan","`char-to-rna`?","I","Why","I","I'm","Regarding","Also,","@vinnie:","Rename","Also,","I","However,","Whitespace","Thanks,","Finally,","`(not","I","You","```clojure","(=","```","will","It","Thanks","I","You","English-related,","`say`","Nice!","@hermann","I","Good","I","Looks","@samir","Please","As","An","The","-","Thanks","I've","http://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require","http://dev.clojure.org/jira/browse/CLJ-879","It's","You","It","`(first","I","I","Did","If","Looks","Coming","I'm","That's","@aiyana","Thank","\u003e","Done.","\u003e","Done.","\u003e","Done.","\u003e","Done.","\u003e","Done.","The","I","It","Clojure","You","You","```","(ns","(:require","```","Then","Can","You","Your","It","http://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require","http://dev.clojure.org/jira/browse/CLJ-879","Pretty","You","Thanks","1.","2:","You","thanks,","\u003e","Done.","6:","7:","8:","@fletcher","Thank","I","You","@april","Thank","Nice","Thanks","Can","I","Check","Most","I","You","ohh","This","Good","One","Also","Finally","What","two","1.","2.","I","I","@ulises","Thank","My","I","Nice","*","*","I","Also,","@marilie","@hilda","Agreed","Also","Consider","Take","Consider","I","`zip`","Nice","A","@rusty","The","Not","You","You","One","@ike,","You","There","You","Generally","This","I'd","My","Try","Interesting.","Although","Thanks!","It","Instead","You","The","You","In","`(blank?","I","Another","I'd","It's","This","sweet","@laurine","@kathryne","@kathryne","@kathryne","A","Thanks","I'm","The","And","three","1.","2.","3.","Does","If","One","\"we","Since","And","Two","I","One","The","No","This","I","@melvin","Is","EDIT:","Using","You","I","There's","You","If","Your","You","Instead","```clojure","(ns","(:require",";;","```","You","`response-for`","You","The","In","Also,","This","You","You","Great","clojure.string","The","From","Your","Your","`is-silent`","You","Your","This","You","Thanks","Now","Looking","You","Regarding","Thanks","Hi,","thank","messing","Will","Thanks,","1)","2)","3)","Aside","Ah,","It's","This",":)","Have","Yeah,",":)","Thanks","@isaac","Trying","@mariana","I'm","@samir","Yeah","Thanks","Being","You","@norma","You","This","Thanks","I","Good","Some","1)","2)","I","Looks","1.","2.","3.","4.","`#\"\\w+\"`","Re:","HOWEVER.","...there","It's","Looks","1.","2.","3.","1.","2.","3.","4.","5.","(ns","(:require","6.","`(map","@scottie","I'd","It's","You","It's","Wanted","I","Is","I","I","I","I","Yes","I","Thanks","@deshaun","That","Re:","Re:","I","Lowercasing","I","(defn-","\"Calculate","[lower-word]","(sort","(defn-","\"Given","that","[word]","(let","alpha","#(let","(and","(=","@karli","@kelley","The","Having","It","Great","I","The","Some","```clojure","(cond","predicate-1?","predicate-2?","predicate-3?",":else","```","(But","You","You","Why","Fixed.","According","I","1.","2.","3.","4.","After","1.","2.","Looks","Also","1.","2.","@cole","You","```:require","@holly","You","Thanks!","@keira:","What","`reduce-kv`","Transforming","\u003e","True","\u003eThere's","Good","Thanks","I","When","I","Inside","One","@adrain:","I'm","Instead","(defn","(let","(fn","Then,","One","Don't","The","With","EDIT:","Generally,","I","I","The","```","#\"[A-Z0-9\\s\\p{Punct}]+[\\!\\?]?$\"","```","instead","```","(?:[A-Z0-9\\s\\p{Punct}]+)(?:[\\!\\?]?)$","```","Yup.","One","Wow!","In","Only","There's","Thank","1.","Maybe","2.","This:","```",":else","))","```","should","```",":else","```","Apart","I","It","```clojure","({\\T","```","But","I","1.","2.","Don't","Woah,","But,","I","1.","2.","3.","4.","You","Thanks!","Lots","Sorry","1.","2.","The","If","Your","Please","(:require","`universe`","Also","Even","`(seq","Thanks!","But","I","`split`","Another","`left`","You","Thanks","Yes,","@daryl","Anyway...","@jeremy","1)","2)","Neat!","Edit:","Unfortunately,","You're","The","That's","Breaking","An","```","(and","(=","(not=","```","or","```","(and","(=","(not=","```","Where","Thanks","One","In","@alford","1)","2)","But","ad","ad","EDIT:","(or","Awesome.","That's","Yeah,","Thanks","You","`merge`","I","I'm","Nice,","`(def","Thanks","That","EDIT:","Well,","I","This","Any","Thanks!","You","There","I","`clojure.string`","There's","You","Looks","(str","Ok","Ha","Yes","Partial","EDIT:","The","(:require","or","(:require","When","These","The","`blank?`","Thanks","Feels","@skye","Just","As","That","You","There","It","Explicit","Consider","For","It","I","You","`frequencies`","`clojure.string`","Thanks","I'm","There's","I've","I'm","I","The","Full","Thanks","Predicates","There's","Solution","Alternatively,","just","you","Why","I","Argument","This","And","Nice!","I","It","*quietly","I","Thanks","I","I'm","Looks","It","You","Think","One","Alternative","Alternatively","In","You","I","Nice","Question:","I","Making","@nikki:","Equivalent","Ahh,","Valid","Define","(defn","Then","Of","You","Splitting","I","By","Yes,","I've","A","Nice.","Looks","Hi.","My","When","I'm","@oswald:","@oswald:","Another","Yes,","I","1.","2.","Wow,","This","(fn","You","You","How","`strand-compare`","Also,","Agreed","I'm","Looking","This","I","Err...","Yes,","Yeah,","What","Ok","@anjali","thanks","By","Ooo!","Well,","Also,","Well,","So","```clojure","(defn-","(case","0","(-","```","I","```clojure","(defmulti","(defmethod","(defmethod","```","I","I","One","Not","Ta","I'd","That's","Calling","Manually","You","I","I","On","Not","Unsure","You","The","And","There's","`reset!`","The","Nice","There","I","Maybe","You","I","This","I","Nice","What","Oops,","Here's","(ns","(defn","(let","[lowerA","(defn","(let","(and","(defn","(vec","Comparison","Heh.","`is-yelling?`","`(if","This","I","The","Used","Despite","Great","Does","Oh,","This","I'm","There","Nice","But","I","I","Eventually","After","I","It's","It","`(get","Another","`reduce-kv`","In","This","It's","The","Thanks","Still","@stuart","I'd","Thanks.","That's","A","You","The","Functions","```clojure","(defn","(apply","```","Notice","You","clojure.string/blank?","I'd","default-respnse","Other","Appreciate","like",";;","(defn","[x]","(bar","cond","(and","Would","Pretty","Try","One","I'm","@lennie","If","```","(ns","(:require","(def","(def","(defn","[dna]","(str/replace","```","The","Looks","There's","The","The","```","(defn","(cond","(=",";;",":else","```","Using","Pretty","The","\u003e","Do","@victor","I","@mathew,","@meghan:","@meghan:","It","On","Whoops!","The","You","And","Ohhh","Thanks!","Looks","Also,","I","I","I","This","Using","Simpler","Hey,","You're","Yeah","My","Have","I","I","Does","I","This","Why","The","You","On","I","Thanks","There's","Still","I","Still","I","To","Regarding","How","I","And","Thanks!","The","```clojure","(and","(some","(not-any?","```","but","```clojure","(and","(some","(=","```","Personally","\\*cough\\*","Looks","You","This","Much","Two","I","Had","Can","This","There","1.","2.","3.","This","You","One","Nice","Creating","You","For","The","Yeah,","```clojure","(def","(comp","string/lower-case))","```","but","I","Agreed.","I","Nice","Based","I","It's","You","I'd","@golden","-","-","-","And","Nice","Nice","It","It","1.","2.","Thanks","@milton","1.","2.","3.","Looks","I","I","Thank","*","*","I","+1","For","There","I","Hey","*","*","I","*","*","```","(ns","(:require","```","*","```","(defn","```","rather","```","(defn","```","Instead","Started","I","Seems","awesome","Woops,","The","There","The","The","Thelast","As","`(and","Not","Hi","Thanks!","Clean","Also,","(defn","(clojure.string/replace","I","Speaking","Style:","*","*","Thanks","Can","Took","@antone","EDIT:","The","Also,","Reduce","@marty","This","Hey","The","If","Thanks!","Looks","You","This","After","Any","This","First,","I","I","Naturally,","I","```","(def","(fn","(this)))","```","Speaking","For","Those","I","You","Use","In","The","-","-","Added","Thanks,","I","I","Done","I","Other","Good","Thanks,","I'm","Ordinarily","I","So","\u003e","You","@eda","[`defn-`](http://clojuredocs.org/clojure_core/1.2.0/clojure.core/defn-)","oh","Trying","Are","I","Okay,","Sorry,","All","Played","My","I've","I","I'd","Overall","Instead","`(rand-int","This","I'm","Have","Have","Joining","My","Ah","```clojure","dna\u003e","#'dna/dna-seq","dna\u003e","\"Elapsed","#'dna/r","dna\u003e","\"Elapsed","#'dna/r","dna\u003e","\"Elapsed","#'dna/r",";","user\u003e","#'user/dna-seq","user\u003e","\"Elapsed","#'user/r","user\u003e","\"Elapsed","#'user/r","user\u003e","\"Elapsed","#'user/r","```","The","You","**[Edit]","```clojure","dna\u003e","#'dna/dna-seq","dna\u003e","\"Elapsed","#'dna/r","dna\u003e","\"Elapsed","#'dna/r","dna\u003e","\"Elapsed","#'dna/r","dna\u003e",";","user\u003e","#'user/dna-seq","user\u003e","\"Elapsed","#'user/r","user\u003e","\"Elapsed","#'user/r","user\u003e","\"Elapsed","#'user/r","user\u003e","```","I","You","BTW,","```clojure","user\u003e","\"ACTG\"","```","Just","No","Have","For","```clojure","user\u003e","true","```","Have","I","Ok,","One","`defn`","```","user=\u003e","(def","```","And","@linwood","Looks","A","One","Rewrote","Sure","Also,","I've","This","Thanks","Here,","Great","About","Refs","Generate","That's","Ah,","This","think","I","your","Good","for","(=","I","I","You","Feel","Had","This","1.","2.","3.","Tried","No","I","Thanks","I","Much","That's","Very","I","```clojure","(ns","(:require","```","The","That's","```clojure","user\u003e","#'user/strand","user\u003e","\"Elapsed","true","user\u003e","\"Elapsed","```","I'm","@coy","The","`pretty-print`","much","`format`","think","I","First","Second,","```clojure","(ns","(:require","```","Third","Like","You've","Is","Java's","This","Thanks","I","Did","A","Thanks","Should","Is","Are","Fairly","As","\u003e","This","Take","Looks","Did","mlakewood,","Thanks","Great","Used","An","```","(defn-","(and","(apply","```","but","After","It","Will","Fair","Nice","This","Just","Did","This","Did","Also","Aha","Note","Putting","I","I","Bob","Experience","So","The","This","Interesting","However,","This","I'm","I'm","Interesting","Curious:","Initially","Realized","This","Literally","Hi,","So","I've","This","1.","2.",";;","({:a",";=",";;","({:a",";=","There","First,","({:a",";=","({:a",";=","Second,","@amina,","What","I","I","While","Try","\u003e","I've","http://exercism.io/submissions/3b18ee424306e0e82871a62e","Awesome.","You","You","Absolutely","Fixed","It","-","```clojure","(clojure.string/split","```","-","```clojure","(-\u003e","```","1.","2.","Looks","Also,","Have","@billie","and","This","Furthermore,","One","Thanks","Maybe","This","Super","line","I'm","I","You're","Some","line","line","line","line","line","line","line","line","```","(-\u003e\u003e","letters","(map","(map","(reduce","(apply","```","To","```","(-\u003e\u003e","letters","(map","(map","(reduce","(apply","```","line","line","line","You","Can","Thank","I","When","I","I","I","I","I'm","```clojure","(defn-","(and","(=","(not","```","This","Perhaps","Right","I","I","```clojure","(defn-","```","The","I","You","@terrill","Thank","But","Yes,","I've","I'm","I","@haylee","Indefinite","This","I've","I","```clojure","(cond","(silence?","...","```","Interesting.","```clojure","(=","```","But","Cool!","Have","I","Thanks","I","@kariane:","@kariane:","`(remove","`clojure.string/lower-case`","You","Looks","You","You","Most","Also,","I'm","Based","Looks","Based","Use","Use","Make","\"-\u003e\u003e\"","I'm","Failures:","```","Testing","FAIL","expected:","actual:","FAIL","expected:","actual:","Ran","2","```","Looks","Thanks","Thanks","This","Well","You","I'd","What","Looks","```clojure","(defn","{:pre","(clojure.string/replace","```","I","This","1.","2.","Looks","Maybe","But","This","Looks","I'm","First","You're","Still","While","Looks","Exercism","But...","I","`(defn","(if","Your","That's","It","This","As","Awesome,","Using","string/replace","Thanks","```clojure","(and","(=","(=","(subs","```","I've","Thanks","This","You","```clojure","(ns","(:use","(defn","(-\u003e","(lower-case)","(split","(frequencies)))","```","WHOA!","I","I","You","I","Line","Line","```clojure","(ns","(:use","```","Line","```clojure","(defn","(-\u003e","lower-case","(split","frequencies))","```","If","Great!","line","line","line","line","I","Line","Line","Line","It","```clojure","(defn","(defn","(and","(=","```","If","```clojure","(ns","(:use","```","Great","Your","```clojure","(defn","(=","...","(defn","(cond","...","```","Interesting","Could","As","Very","I'm","Line","Thanks","This","I've","Argh,","This","I've","###","-","Learned","You","```clojure","(ns","(:require","```","Where","```clojure","(str/capitalize","```","Nice","oops,","A","I","I","[1]:","This","I","Re-write","In","```clojure","(defn","{:pre",":post","function","```","If","The","Your","[1]:","There","It","And","[1]:","That","Awesome!","I","You're","However","Using","While","But","I","```clojure","(let","(assert","(apply","```","Still","```clojure","(defn",";","{:pre",";","(apply","(map","{\\A","message)))","```","What","[1]:","Than","It","[1]:","You","[1]:","Oh,","Ah,","I'd","Or","Concise","To","I","@emmalee,","@emmalee,","Thank","The","You","```clojure","(defn","(letfn","(anagram?","(not=","(filter","````","Neat,","Another","```clojure","(filter","```","And","You","There","Thank","While","The","```","(=","```","Thank","Curiously","Your","That","This","So,","I","Were","Made","This","*","*","*","The","The","silence?","Awesome.","\u003e","I","```","java.lang.RuntimeException:","```","Haha,","I","How","I","```","(ns","(:use",")","```","I","sweet!","One","Using","Quite","Alternatively,","but","Whenever","Also,","The","One","I","I","I","Right","I","This","I","I","`(ns","On","I","1.","2.","1.","That","2.","thanks","That's","Thank","I","Instead","I","As","Since","Relying","If","As","9:","Or","15:","Implementation","(some","It's","My","@eula","Is","@bart","(condp","shouting?","silence?","question?","\"Whatever.\")","One","I","Thanks!","Thank","`:use`","Can","PS:","@edwin","I","I","@kamille","I","@holden","Macros","Your","There","btw,","I","You","Looks","Overall,","```clojure","(defn","(letfn","(or","(and","(not","```","def","Example:","```","user=\u003e","#_=\u003e","#'user/scope-test","user=\u003e","#'user/my-value","user=\u003e","1","user=\u003e","#_=\u003e","#'user/scope-test","user=\u003e","nil","user=\u003e","CompilerException","```","The","Rather","I","I","The","I","You","This","I","While","Have","I","Ug.","Good","Another","Looks","This","I'm","@julio","I","Good","Using","Not","The","This","I","This","sort-by,","I","Thank","Rather","I","Ha!","Added","In","That","I","The","I","Fixed","This","Renamed","Thanks,","A","The","Converted","Another","(def","You","Took","1.","2.","4.","5.","6.","Items","Item","Thanks.","Addressed","You","In","In","my","next","TIL:","new","Personally,","(-\u003e","sanitize-number","drop-us-prefix","validate-length)","Returning","Regarding","(defn","\"Does","[x]","(some-body","Nice","Not","I","I","[1]","As","Incorporated","Simplified","By","Per","That's","Yep","Fixed","Per","For","Another","Your","You","Have","There's","You","I","The","Although","`defn-`","`let`","Right","Good","No","Clojure","user=\u003e","\"\"","\"xyz\"","\"\"","user=\u003e","(\"\"","You","In","Looks","This","I","bob=\u003e","false","In","clojure.string/blank?","Nice","Algorithm","(assoc","Using","using","clojure.string","You","Likewise,","Check","Also,","Check","Also,","```","user=\u003e",":yes","```","Take","Also,","```","user=\u003e",":true","```","Any","In","This","I'm","I'm","I","One","(defn-","(if-let","rchar","(throw","Just","As","Awesome!","blcooley's","```clojure","(defn-","(cond","(some","(=",":else","````","Also","Thank","I","i","Yeah,","I","Yes,","Still","Thanks","my","So","perhaps","You","There's","Fixed","Even","Thank","holy","Macro","Good","`interleave`","It's","Your","Tried","`zero?`","`cond`","Rather","Nice","The","The","It","I","Converted","One","e.g.","Since","The","Check","I","For","With","(-\u003eRobot","`total`","You","Overall","`(+","Multiple","e.g.:","`(doseq","Why","If","It","First","The","I","The","`join","There","Looks","I","`(not","Good","Looks","Map","You","`total`","Subtracting","Isn't","In","In","The","You","Other","I","Looks","I","You","It's","`(not","The","Overall","`(not","`(=","It's","Strings","You","When","When","Thanks","I","Overall","`re-find`","You","This","If","Keep","One","Characters","`join","When","Looks","You","Another","`(defn","A","`re-find`","There","This","I've","This","`(fn","You","This","You","There's","@leonora","Think","thanks","Thanks","I","changed","My","I","Good","It's","It","Overall","It","I","There","Strings","Interesting","Calling","There's","Uses","For","`matches","`[response","Those","Overall","Since","Calling","The","I'm","This","`if-not","might","only","I","TIL:","mine","I","In","For","`(defn","`(def","So","`(defn-","You","`(def","Hope","This","Style","Code","I'm","From:","\"Prefer","`:require","Looks","You","This","It's","Calling","Overall","`:require","I","You","Looks","`(range","The","Calling","Good","Looks","In","You","This","My","If","Geofflane,","Thank","It","I","In","is","This","You","It's","I'm","I","I","Thanks","cleaned","i'm","For","(defn","lower-case","(defn","(lower-case","I","After","Hope","@ottilie,","My","@donald","It's","The","@terrell,","@terrell,","nice.","Use","Thanks","The","And","Use","Agreed,","It's","Characters","You","Strings","`join","You","I","Thank","What","It","And","Cheers.","GregorianCalendar","But","I","nice","I","However,","By","And","Just","Nice","I","Could","It","Very","Rather","```","(defn","(def","(bar",";","@tracey","I","Questions:","*","*","It's","i","Thanks","Sorry","sgrimm,","twillis,","PS:","Nice","I've","Good","Strings","`doall`","If","While","@marina","Using","There","Overall","Looks","I","Your","Thx","Overall","Using","`range`","Thanks,","This","The","You","Great","If","`(defn-","I","In","It","Nested","`sorted`","That's","I","upper-case","There's","Thank","In","Now","I'd","@jacynthe","Thinking","I'd","@emilio","Thanks","`cond`","You","`(seq","Keep","You","(defn-","(or","This","Also,","(#{\\C","is","(some","Just","user\u003e","\"Elapsed","nil","user\u003e","\"Elapsed","nil","Obviously","Not","@brielle","Changed","Thanks","dont","`sort`","You","I","I'm","Minor","I","`(take","It","Thanks!","I","The","`(and","(not","I","And","I","Look","I","If","`(not","In","`question`","`silence`","If","With","changed","pretty","I","Thanks,","@camille","Ahh,","I","`if`","`(if","`(-","Pre-calculating","And","But","@raleigh","For","Clojure","My","In","Terminating","I","A","Characters","Strings","Maps","Another","Good","On","@joany,","@dylan","@jude-choi","Looks","You","`(def","If","When","e.g.","Similarly","Switched","Hate","3,","As","Overall","As","`if`","The","Overall","You","`pair-up`","There","Thanks","You","There","Wow,","Thank","I","#1:","#2:","so","@kyler,","Thank","I","Cheers","Below","-----","A","Characters","Strings","Maps","Another","----","Thank","I","One","Switched","not","I","Basically","Could","Way","`(-","`(=","using","though","the","The","As","It's","Next","Then","Hint","It","`(-","`(=","`nucleotide-counts`","I","If","One","Looks","One","Much","Take","`blank?`","`(re-find","I","@destini,","@zoey","Thanks,","removed","with","removed","replaced","moved","((frequencies","Looks","Extracting","good","I","It","At","Also,","I","It","I","That's","Didn't","Great","Your","I'm","To","I","My","I","As","It's","@celestine","Using","If","For","-","```clojure","(dna-to-rna-lut","```","-","`generate-name`","`swap!`","This","One","In","I","The","Thanks","Extracting","Putting","```clojure","(-\u003e\u003e","(remove","(reduce","```","Overall","I","First","It's","@eden","A","Overall,","You","I'm","I'm","Awesome!","Aye,","I","In","My","I","Though","yep","the","i","(join","how","Definitely","Cheers","much","I","I'd","The","Looks","You","I","It","You","\"I","It","Relying","I","Looks","That's","From","\u003e","`(some","The","`Sets`","Yeah,","@harley","I","@nickolas","Looks","I","The","You","While","`name`","That","Thanks!","I","@major","I","Is","Looks","You","Looks","`require`","There","`(-","`","Overall","You","The","You","Nil","You","In","Good","There","It's","`upper-cased-and-letter?`","It","You","Thank","I","You","You","In","@alejandra:","Yes,","```no-quiet?```","I'm","```clojure","FAIL","expected:","actual:","FAIL","expected:","actual:","FAIL","expected:","actual:","FAIL","expected:","actual:","FAIL","expected:","actual:","FAIL","expected:","actual:","FAIL","expected:","actual:","FAIL","expected:","actual:","```","I","The","shouting","You","In","Thanks","Intent","noise","I","Thanks","Once","I","You","Trimming","The","Hi","Revision","Overall","You","I","Your","The","```clojure","([\"apple\"","```","And","Yeah,","@clarabelle,","I","Take","The","You","It's","Some","I","String","You","Couple","````clojure","(-\u003e\u003e","reverse","...)","````","could","````clojure","(-\u003e\u003e","...)","`````","And","I","Strings","Your","I","As","Check","You","`(int","You","range","Your","@tina","I","@claudine,","I","Got","Thanks","I","@maryse","@terence","Can","Hi,","a","Hi,","looks","*","*","*","My","Hi,","You","(question?","I","@caterina","As","Cheers","@frank","Thank","I","there's","Ah,","made","Looks","Next","Great","I","I","And","yes","not","There","You","Also","Looks","Ah","look","This","I","I","Here's","Latest","Hi,","you're","(could","I","That","The","`(:require","then","`(str/trim`","You","http://clojuredocs.org/clojure_core/1.2.0/clojure.core/require","Your","The","I","The","```clojure","(-\u003e\u003e","(split","(split","(partition","...)","```","First,","```clojure","(-\u003e\u003e","(partition","...",")","```","Then","`matching?`","```clojure","(defn","(=","```","your","your","The","It","```clojure","(defn-","(-\u003e\u003e","```","This","```clojure","(defn","[raw_string]","(-\u003e\u003e","(drop_and_show","(defn","[phone_number]","(format","(drop_and_show","(drop_and_show","```","Oh,","For","Your","Hi","thanks","If","a","Cheers.","I","So","```","(deftest","(is","```","Very","Whoops...","Yes,","It"]," \"-\u003e\u003e\"":["might"]," \"Calculate":["the"]," \"Does":["bar"]," \"Elapsed":["time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:","time:"]," \"Fine.":["Be"]," \"Given":["a"]," \"I":["feel"]," \"Prefer":["using"]," \"we":["tend"]," \"you":["may"]," #\"\\W+\"":["might"]," ###":["Changes","Functional","Style","Changelog"]," #(interleave":["%"]," #(let":["[lower'"]," #1:":["not"]," #2:":["the"]," #_=\u003e":["(def","(let"]," $":["lein"]," &gt;":["I","He","You're","Try"]," (":["*hash*"]," (\"\"":["\"xyz\""]," (#{\\C":["\\G"]," (#{adenosine":["cytidine"]," ((frequencies":["val)"]," (-":["n"]," (-&gt;":["(drop-while"]," (-\u003e":["\"","args","string","(replace","digits"]," (-\u003e\u003e":["words","(range","(range","(interleave","(interleave","number","(convert_number"]," (-\u003eRobot":["coordinates"]," (:refer-clojure":[":exclude",":exclude"]," (:require":["[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string","[clojure.string"]," (:use":["[clojure.string","[clojure.string]","[clojure.string","[clojure.string","[clojure.string","[clojure.string]))","[clojure.string]))","[clojure.string"]," (=":["(last","(string/upper-case","\\?","(last","s","\\?","\\?","\"\"","input","input","(last","(nth","greeting","greeting","candidate-freq","alpha","(clojure.string/upper-case","(clojure.string/upper-case","rna-nucleotide","(str/upper-case","(last","(string/upper-case","(last","(count","(subs","phrase","(last","(last","char","char1"]," (Accidental":["Submission)"]," (And":["discussion"]," (But":["I"]," (I":["did"]," (I'm":["an"]," ([\"apple\"":["1]"]," (\\T":["\\A"]," (\\m":["\\t"]," (also,":["would"]," (alter-var-root":["(var"]," (although,":["the"]," (anagram?":["[candidate]"]," (and":["(not","(not","verified","(not=","(not=","(not","(=","(apply","(=","(divisible?"]," (apply":["hash-map","str","str))","str","not=","str))","str","str","str"]," (assert":["(=","(not"]," (assoc":["map"]," (bar":["x))","\"hello"]," (basically,":["what"]," (bob":["input))"]," (case":["(get","n"]," (clojure.string/blank?":["message))","greeting)","greeting)"]," (clojure.string/replace":["dna-sequence","dna"]," (clojure.string/split":["phrase"]," (comp":["keyword","(fn"]," (cond":["s","(=","(question?"]," (condp":["apply"]," (could":["also"]," (def":["^:private","point","^:private","from-zero","to-nine","NUMBERS","dna-to-rna-map","nucleotide-to-replace","words","so","foo","empty-count","bar"]," (defcheck":["silence?","yelling?","question?"]," (defmacro":["defcheck","defresponse"]," (defmethod":["next-count","next-count"]," (defmulti":["bob","next-count"]," (defn":["asking?","nothing?","to-rna","shouting?","question?","response-for","add","response-for","response-for","shouting?","word-count","word-count","constructor-fn","yelling?","lower-sorted","anagram-of?","anagrams-for","foo","foo","to-rna","dna-nucleotide","response-for","response-for","to-rna","to-rna","word-count","word-count","question?","yelling?","question?","response-for","function","to-rna","anagrams-for","leap-year?","foo","clean-string","clean-string","foo","matching?","area-code","pretty-print"]," (defn-":["silent?","silent?","shouting?","question?","anagram-checker-for","question?","classify-response","split","normalizations","anagram?","alphagram","anagram-finder","next-count","anagram-of?","shouting?","only-numbers","transcribe","transcribe","validate","drop_and_show"]," (defresponse":["silence?","yelling?","question?",":default"]," (deftest":["validates-nucleotides"]," (dna-to-rna-lut":["\\A)"]," (drop_and_show":["0","3","6"]," (e.g.":["`#(="]," (empty?":["str))","s)"]," (filter":["anagram?","#(case-insensitive-anagram-of?"]," (fn":["[assignment]","[p]","[ret","[like]"]," (fn*":["10"]," (for":[";"]," (format":["\"(%s)"]," (frequencies":["(tokenize","(tokenize"]," (if":["(="]," (if-let":["[rchar"]," (inc":["10)"]," (is":["(thrown?"]," (join":["\"\""]," (let":["[processed-word","[{horizontal","[word-lc","[[word1","[lower","[w-processed","[lowerA","[[lb","[converted"]," (letfn":["[(keify","[(divisible?"]," (lower-case":["(remove-non-word-chars"]," (map":["verse)","str)","convert)","str","convert"]," (not":["(check-fn","(=","(divisible?","(="]," (not-any?":["#(Character/isLowerCase"]," (not=":["(clojure.string/lower-case","(clojure.string/lower-case","word"]," (ns":["bob","bob","bob","bob","bob","bob","bob","foo","bob","beer","bob","phrase","bob","bob","bob","bob","bob","anagram","anagram","dna","bob","bob","etl","phrase","phrase","bob","beer","bob"]," (or":["(nil?","(nil?","(some-\u003e","(divisible?","(#{\\C"]," (partial":["not="]," (partition":["2)","2)"]," (question?":["s)","s)","more"]," (range":["hi"]," (re-seq":["#\"\\w+\"","#\"\\w+\""]," (reduce":["concat)","concat","(fn"]," (remove":["#(string/blank?"]," (replace":["necleotides"]," (require":["[clojure.string","[clojure.string","[clojure.string"]," (shouting?":["s)","s)","greeting)"]," (silence?":["s)","sentence)"]," (some":["#(Character/isUpperCase","#(Character/isUpperCase","#(Character/isLetter","#{char}","#{char}"]," (some-body":["...))"]," (sort":["lower-word))"]," (split":["#\"\\W+\")",",,,","string1","string2"]," (str":["(verse","(rand-letters"]," (str/capitalize":["...)"]," (str/replace":["(seq","dna"]," (str/split":["(str/lower-case"]," (str/upper-case":["(str/reverse"]," (subs":["digits"]," (throw":["(AssertionError."]," (update-in":["db"]," (vec":["(filter"]," ({:a":["0,","0,","1","1"]," ({\\T":["\\U}"]," ({\\a":["1","1"]," *":["reusable","super","You","Thanks.","`:use`","I","L9:","`defn-`","It","character","there","Might","What","Lastly,","You","Also","Not","Docstrings","I","You","You've","It","Why","I'd","If","It's","Predicate","It's","Is","A","the","is-xxx?","the"]," **But**":["since"]," **[Edit]":["I"]," *quietly":["gilds"]," +1":["to","to","to"]," -":["\"WHERE","\"I'm","This","There's","Would","Why","`str`","you","Would","`pronoun`","There","IMO","What","Is","I","That","I",":use","some","Removed","transcribe","seq-to-rna","to-rna","When","When","I","Prefer","Require","Extract","putting","moving","To","To","second","dna-to-rna-lut","i"]," ...":["probably"]," ...but":["I"]," ...or":["using"]," ...there":["are"]," ...which":["you"]," /me":["goes"]," 0":["failures,","99"]," 1)":["Indentation","Yep,","While","Good","it"]," 1.":["Even","CamelCased","`use`","The","Think","Finds","What","Your","seq:","use","you","You","A","Line","Even","is","I","Does","I","I","That's","I","The","`a`","Agree,","`verse-template`","There","Extracted","The","you","I","Casting"]," 15:":["(def"]," 2":["separate","things","failures,"]," 2)":["Can","Using","What","I","strip-us-prefix,"]," 2.":["There","There's","You","`use`","Uses","Give","\"normalize\"","you","you","A","Non-public","Regarding","Creating","I'm","That's","Small","Style:","Do","Regarding","Consider","I","Every","Re:","lots","One","Moved","'suffix'","you","Oops,","No"]," 2:":["into"]," 3)":["```words-in-phrase```"]," 3,":["5,"]," 3.":["It's","Your","Inside","you","I","To","Please","Naming","I","In","Also,","the"]," 4.":["I","Indentation","Generally,","Having","I","No"]," 5.":["`use`","You"]," 6.":["There","Lazy"]," 6:":["consider"]," 7:":["consider"]," 8:":["consider"]," 9:":["(def"]," :)":["that","either","Yeah...","yep"]," :D":["Thanks.","About"]," :else":["\"Whatever.\"))","\"whatever.\")","result-4)","\"Whatever.\"","\"Whatever.\"))","rna-nucleotide))","(throw"]," :post":["(expression"]," :rename":["{blank?"]," :use":["is"]," ;":["(:G","...","And","And","condition","actual","hello"]," ;;":["2","[]","str/method","good","some","If","If"]," ;;=&gt;":["\"(\\\\U"]," ;=":["0","123","1","3"]," \u003e":["Non-java","put","just","including","a","require","It","Transforming","Given","So","Fairly","\"Invalid","Line","One"]," \u003eThere's":["a"]," @adrain:":["Can"]," @agustin":["Cleaned"]," @alejandra:":["Thanks"]," @alford":["OK..."]," @amely":["-"]," @amina,":["sorry"]," @aniyah":["says","just"]," @anjali":["thanks!"]," @antone":["I"]," @art":["I"]," @bart":["That's"]," @billie":["oops,"]," @brielle":["If"]," @bruce":["why"]," @camille":["Thanks"]," @caterina":["You","@caterina"]," @celestine":["-"]," @clarabelle,":["could"]," @claudine,":["excellent"]," @clay":["-"]," @cole":["I"]," @coy":["Nah,"]," @daryl":["Hmmm..."]," @deshaun":["-"]," @destini,":["thanks!"]," @destiny:":["I'm"]," @devon":["Helper"]," @donald":["destructuring"]," @donato":["Aha!"]," @dylan":["Then"]," @eda":["what"]," @eden":["I"]," @edmund":["D'oh."]," @edwin":["That"]," @eleonore":["it"]," @elwin,":["thanks"]," @emerald":["the"]," @emilio":["i"]," @emmalee,":["can","that"]," @eula":["Thanks!"]," @floy":["great"]," @frank":["I"]," @golden":["There"]," @granville":["again"]," @harley":["alright,"]," @haylee":["Thanks"]," @hermann":["great"]," @hilda":["-"]," @holden":["Those"]," @holly":["-"]," @ike,":["Thanks,"]," @isaac":["good"]," @isabel":["Yeah,"]," @jackie":["thanks"]," @jacynthe":["thank"]," @jaime":["Ah,"]," @janae":["I"]," @jeremy":["I've"]," @joany,":["You're"]," @jonas":["I'm"]," @jude-choi":["Didn't"]," @julio":["Thanks,"]," @kamille":["Simply"]," @kariane:":["I","I"]," @karli":["re:"]," @kathryne":["Awesome","Why?","Mind"]," @katrina":["I"]," @kayley":["that's"]," @keagan":["something"]," @keira:":["By"]," @kelley":["gah!"]," @laurine":["thanks."]," @lennie":["I"]," @leonora":["thanks,"]," @linwood":["Thanks"]," @mae":["you’re"]," @major":["Thanks!"]," @margarete":["thanks"]," @mariana":["see"]," @marilie":["-"]," @marina":["this"]," @marjorie":["good"]," @marty":["Got"]," @maryse":["Second"]," @mathew,":["I"]," @meghan:":["I","Ah,"]," @melvin":["Thanks"]," @michel":["code","I"]," @michele":["-","-"]," @milton":["thanks"]," @modesta":["awesome"]," @nickolas":["nice."]," @nikki:":["Yes,"]," @norma":["how"]," @oleta":["thank"]," @oswald:":["it","Instead"]," @ottilie,":["thanks"]," @pedro,":["@pedro"]," @phoebe":["-"]," @quincy":["!"]," @raleigh":["Thanks!"]," @ramon":["--"]," @ransom":["that’s"]," @rosalee":["-"]," @rosemary":["right."]," @rusty":["thanks"]," @ryann":["It's"]," @samir":["Sorry","that"]," @scottie":["I"]," @skye":["Unless"]," @spencer":["Yes."]," @stuart":["It"]," @terence":["I"]," @terrell,":["thanks,","thanks,"]," @tia":["I'm"]," @tina":["great"]," @tracey":["Thanks"]," @trinity":["Thanks","Is"]," @tyrell":["Thanks"]," @victor":["That's"]," @vinnie:":["Did"]," @violet":["thanks"]," @wilhelm":["thanks,"]," @winston":["thanks"]," @zaria-ee,":["good"]," @zoey":["Good"]," A":["few","few","couple","common","slightly","new","good","true","couple","few","bit","lot","minor","couple","straight","better","common","hint","verbose","couple","couple","couple","couple","solution"]," About":["the","the","the","the"]," Absolutely":["right,"]," Accidental":["push?","submit,","submission!"]," According":["to","to"]," Actually":["the","the"]," Actually,":["you","if"]," Added":["`ifnil?`","docstrings,","a"]," Adding":["some"]," Addressed":["items"]," After":["a","sleeping","a","writing","fiddling","you"]," Again":["-"]," Again,":["thank"]," Agreed":["with","re:","that","with","-"]," Agreed,":["I"]," Agreed.":["Removed","Looks","You"]," Ah":["oops,","we","and","there","whoops,","yes,"]," Ah,":["I","sorry,","indeed,","great,","that's","sure,","this","I've","good","and","sure,","right.","got","interesting","didn't","and","gotcha.","and","`frequencies`...","`frequencies`!","that's","so","I"]," Aha":["..."]," Aha!":["Thanks"]," Aha,":["I","in"]," Ahh,":["nice","good"]," Algorithm":["looks"]," Aliasing":["seems"]," All":["those","the"]," Alright,":["who","I"]," Also":["for","I'm","maybe","consider","putting","I","there","nice","check","purists","consider","-","think","I","a","I"]," Also,":["what","I'd","do","while","you","don't","would","IMO","what","something","it's","I'd","you","now","some","what","you","how","instead","you","have","have","maybe","you","imagine","you","you","I","the","are","I","I","strings","`zip`","you","this","you","instead","not","I'm","should","`frequencies`","all-caps?","you","in","I","you"]," Alternative":["approach"]," Alternatively":["to"]," Alternatively,":["you","you","you","I"]," Although":["it","recursion","this","it","using"]," Am":["looking"]," An":["example","internal","example","alternate"]," And":["name","the","possibly","yes,","one","you","currently,","I","`re-seq`","the","once","I","one","you","is","yes,","since","I","yes,","love","macros","you're","should","do"]," Another":["inefficiency","thing","way","thing","good","way","way","option","possible","helpful","aside:","thing","thing"]," Answering":["to"]," Any":["reason","chance","reason","thoughts","comments","advice","reason"]," Anyway,":["that's","looks"]," Anyway...":["I"]," Apart":["from"]," Apparently":["not.","I"]," Appreciate":["the"]," Are":["you","not","you","you","you","you","you","the","function","the","you"]," Argh":["..."]," Argh,":["I"]," Argument":["names"]," As":["a","long","for","noted","for","for","you","far","I","an","an","always,","with","for","with","pointed","another","for","when","a","I","much","a","for","@afton","for","your"]," Aside":["from"]," Assuming":["you're"]," At":["first"]," Attempt":["to"]," Aw":["thanks!"]," Awesome":["--"]," Awesome!":["I","Thanks","This","I","Those"]," Awesome,":["thank"]," Awesome.":["Thanks","Thanks","Thanks"]," Aye,":["the"]," BTW,":["instead"]," BTW:":["totallly"]," Based":["on","on","on","on"]," Basically":["I","just"]," Basically,":["the"]," Because":["it’s","I"]," Being":["a"]," Below":["is"]," Besides":["that,","that"]," Besides:":["`count-nucleotides"]," Better":["formatting"]," Better,":["but"]," Better?":[";)"]," Beyond":["fiddling","fiddling"]," Bob":["lacksidaisically"]," Both":["`-\u003e\u003e`","are"]," Bravo,":["data-driven"]," Breaking":["the"]," Brilliant.":["Will"]," Btw,":["I"]," Btw:":["4"]," But":["I","hey,","I","of","if","as","I'll","looks","this","could","I","I","isn't","seeing","good","my","yes,","it"]," But,":["I'm"]," But...":[":)"]," By":["robust","the","the","partial","using"]," Calling":["`build-finder`","`first`","`use`","`require`","`use`"]," CamelCased":["names"]," Can":["you","you","you","you","you","you","someone","you","you","you","you","you","you","you","you","you","you","you","you","you","you"]," Can't":["see"]," Changed":["the","it"]," Characters":["can","can","in","in"]," Check":["out","out","out","out","out","out","out","out","out","out","out","out"]," Checking":["for"]," Clean":["code"]," Clean,":["concise,"]," Clear":["and"]," Clever":["to"]," Clojure":["is","doesn't,","variables","knows","keywords","doesn't","is"]," Clojure's":["string"]," Closing":["square"]," Code":["formatting","looks"]," Coming":["back"]," Comparison":["with"]," Compiler":["probably"]," CompilerException":["java.lang.RuntimeException:"]," Concise":["and"]," Consider":["more","either","exploiting","using","more","creating","extracting","using","using","extracting"]," Converted":["a","board-string"]," Convinced":["there"]," Cool":[":)"]," Cool!":["I"]," Cool,":["I","I"]," Could":["you","you","you","you","you","you","do"]," Count":["I"]," Counting":["frequencies"]," Couple":["of"]," Creating":["word"]," Curious:":["Is"]," Curiously":["enough"]," Damn,":["I"]," Darn.":["You're"]," Decided":["cond"]," Define":["predicates"]," Definitely":["not","agree","makes"]," Despite":["your","being"]," Destructuring":["may"]," Did":["you","you","you","you","you","you","you","you","you","you","you","you"]," Didn't":["know","quite"]," Do":["you","you","you","you","you","you","you","you","you","you","you"]," Does":["`T`","wrapping","this","this","the","its","clojure"]," Doesn't":["look"]," Don't":["see","tell","you","you","hit","leave","use"]," Done":["@minerva,"]," Dont":["know"]," Due":["to"]," Duh,":["`frequencies`"]," EDIT:":["Ok,","What's","Just","nevermind,","Oh,","Another","On","Fixed","I"]," Edit:":["oh,","scratch","Heh,"]," Either":["way,"]," Encoding":["the"]," English-related,":["it"]," Enough":["of"]," Equivalent":["to"]," Er,":["checking"]," Err...":["`(zip"]," Etrepum:":["Thanks"]," Even":["though","with","when"]," Eventually":["I"]," Everything":["here"]," Excellent":["use"]," Exercism":["is"]," Experience":["shows"]," Explicit":["loop/recur"]," Exploit":["that."]," Extracting":["the","out"]," FAIL":["in","in","in","in","in","in","in","in","in","in"]," FWIW,":["I","here's"]," Fair":["criticisms!","enough.","warning:"]," Fairly":["new"]," Feel":["free","free","like"]," Feels":["a"]," Felbit:":["Definitely"]," Finally":["I'd"]," Finally,":["someone"]," Finding":["a"]," First":["Comment:","of","pass.","solution","time"]," First,":["you","I","in","you"]," Fixed":["in","typo","spelling","spelling"]," Fixed.":["Thanks!"]," For":["example:","the","the","the","this","the","the","example","future","bigger","the","example,","some","the","`nucleotide-counts`,","rev","private","example,","future","`move`","example,","example.","example","this","my","fun,"]," Forgot":["about"]," Formatting":["got","is","is","`anagrams-for`","in","is"]," Frequencies":["doesn't"]," From":["what","the","[the"]," From:":["https://github.com/bbatsov/clojure-style-guide"]," Full":["disclosure."]," Fully":["agreed"]," Functions":["should"]," Furthermore,":["is"]," Generally":["a","I've"]," Generally,":["you"]," Generate":["functions"]," Getting:":["`Exception"]," Give":["me","variables"]," Given":["how"]," Going":["back"]," Good":["idea,","call.","point.","point,","call,","call.","point!","work,","first","idea,","point.","call!","call.","point.","points,","point.","one.","first","enough","points","catch,",":)","to","call,","point","enough","stuff:","catch!","work!","feedback,","to","catch.","use","readability.","call","catch","point,","use","calls","start.","use","use","call","overall"]," Good.":["In","But","One"]," Got":["carried"]," Great":["use","solution!","take!","solution!","approach.","point!","one.","point","one!","tip,","tip,",":)","point.","feedback","start!","start!","tips","tips","first","solution!","use","and","balance"]," Great!":["A","And","Only"]," Great!!":["A"]," GregorianCalendar":["inherits"]," HAHA,":["no,"]," HOWEVER.":["Most"]," Ha":["indeed,","ha"]," Ha!":["I"]," Had":["to","a","to"]," Hadn't":["seen"]," Haha,":["now"]," Happens":["all"]," Hard":["to","to","to"]," Hate":["to"]," Have":["you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","a","you","you","you","you","a","you","a","a","a","you","you","you","you","you","you","you","you","a"]," Haven’t":["you"]," Having":["both","both"]," Heh.":["I"]," Helped":["with"]," Helper":["functions"]," Here's":["one","a","an","[a","one","my"]," Here,":["I've"]," Hey":["good","driis,","Shane.",":)"]," Hey,":["this","it's","I","cool!","I","thank","good","now"]," Hi":[":)","camdez,","@zachery,","and","Andrean,"]," Hi,":["good","this","good","What"]," Hi.":["I","Yes,"]," Hi..thanks":["for"]," Higher":["order"]," Hint":["#1:"]," Hint:":["My","you","swapping"]," Hmm":["I"]," Hmm,":["it","this","I","yeah","I'm","full","I","fair","strip-leading-one?"]," Honestly":["it"]," Honestly,":["I"]," Hope":["that","that"]," Hopefully":["someone"]," How":["did","about","about","about","about","about","about","about","about","about","about","about","do","would","about","can","do"]," Howdy,":["Solo"]," However":["I","you","your"]," However,":["I","there’s","with","I'd","I","I"]," I":["like","see","see","really","see","think","thought","think","like","like","thought","admit","will","like","can","like","think","like","think","think","do","don't","agree","had","think","like","would","think","like","had","know","think","love","don't","have","like","saw","like","think","guess","don't","would","was","would","had","see","will","didn't","think","*love*","seem","do","think","don't","had","think","agree,","think","would","fixed","don't","will","bet","agree","disagree","did","hope","disagree","don't","think","don't","updated","originally","like","think","had't","think","would","think","wish","prefer","like","added","think","fixed","dig","would","think","like","didn't","agree","thought","think","feel","wonder","think","think","think","made","wonder","added","could,","don’t","wasn't","tried","have","think","don't","would","have","second","suggest","didn't","like","was","don't","think","disagree","went","could","tried","was","would","would","agree","like","also","know","wonder","think","don't","like","haven't","usually","think","like","think","think","was","got","guess","could","like","much","wonder","agree.","personally","think","had","can't","do","think","don't","like","would","agree","find","just","have,","just","am","look","really","think","agree","see.","think,","think","really","think","have.","don't","am","do","think","really","initially","like","think","keep","restrained","guess","agree","wonder","think","know","like","would","have","don´t","thought","wonder","would","find","did","feel","do","will","really","wonder","admire","find","got","would","tried","returned","think","extracted","got","don't","assume","guess","agree","think","think","will","agree","had","wouldn't","don't","don't","think","lurk","think","got","don't","would","was","worry","know","gave","got","don't","also","think","had","think","thing","agree","appreciate","think","found","was","like","like","find","think","considered","usually","think","think","think","also","like","would","think","like","like","think","like","like","like","not","think","agree","like","considered","am","haven't","love","always","assume","am","struggled","feel","would","like","have","found","like","wasn't","like","agree","can't","decided","think","chose","don't","like","don't","realize","think","also","also","like","don't","thought","don't","was","don't","think","think","might","was","kept","have","thought","submitted","don't","prefer","had","understand","guess","was","like","debated","actually","have","did","would","still","think","am","did:","was","definitely","can't","know!","really","think","like","like","initially","then","simplified","think","was","somehow","didn't","know","like","wasn't","am","could","could","actually","tried","actually","discovered","don't","am","haven't","decided","was","like","like","like","decided","also","think","think","didn't","still","think","added","agree","got","started","see","like","removed","haven't","see","like","only","don't","like","learned","don't","thought","really","like","didn't","like","seriously","don't","just","found","just","would","like","think","like","did","went","think","love","very","like","need","expanded","don't","would","actually","realize","like","went","couldn't","like","tried","was","have","went","may","decided","also","like","have","also","also","think","don't","had","always","like","found","used","realize","can","disagree","like","briefly","included","am","reconsidered","reused","noticed","think","think","find","think","moved","discovered","like","like","tried","think","find","think","did","like","never","wonder","think","understand","wonder","have","also","fixed","wouldn't","think","find","was","think","am","think","kind","think","think","like","wanted","love","am","think","guess","would","normally","don't","will","have","know","think","think","like","love","think","keep","think","started","think","was","do","like","think","coded","like","find","made","could","agree","like","think","find","could","think","think","like","think","explicitly","totally","wasn't","think","try","like","spot","considered","believe","also","like","think"]," I'd":["love","rather","personally","forgotten","probably","personally","like","rather","suggest","say","consider","also","expect","really","love","clear","personally","enjoy","appreciate","suggest","really","really","never"]," I'll":["factor","look","have","consider"]," I'm":["not","not","a","not","on","not","sure","always","going","finding","nominating","curious","not","struggling","hoping","sure","posting","a","not","somehow","always","getting","not","not","especially","working","very","not","not","definitely","playing","not","wondering","not","not","not","pretty","not","not","not","not","not","not","new","kind","aware","not","not","now","not","not","not","not","getting","finding","not","aware","definitely","still","unsure","having","still","curious","curious","not","using","not","not","going","not","also","not","not","also","a"]," I've":["split","also","updated","resubmitted.","been","never","been","submitted","changed","created","updated","split","imported","rewritten","moved","never","tried","also","used","tried","still","submitted","seen","made","added","never","only","had","had","also","mentioned"]," IMO,":["replacing","it"]," If":["I","you","I","you","you","I","you","I'm","you","this","you","you","feel","I","I","you","this","you","you'd","you'd","you","you","you","you","we","you","you","your","one","you","you","you","you","you","you","you","you're","you","you're","anyone","you're"]," Ignore":["this","this"]," Implementation":["of"]," Importing":["the"]," Improved":["clarity"]," In":["regards","the","your","general,","addition,","something","the","particular","this","what","the","your","other","that","your","`require`","answer","theory,","terms","terms","a","Clojure,","Clojure,","general,","this","`random-robot-name`","my","clojure","context","normalization","case","normalize-sentence,","(add),","the","`bottle-phrase`","`first-line`","terms","`line2`","general,","this","case","`anagrams-for`","either","terms","my","the","terms","my"]," Incorporated":["advice"]," Indeed":["using","the"]," Indeed,":["I"]," Indefinite":["articles"]," Initially":["did"]," Inside":["namespace"]," Instead":["of","of","of","of","of","of","of","of","of","of","of","of"]," Intent":["is"]," Interesting":["approach.","use","that","point","...","to","use"]," Interesting,":["I"]," Interesting.":["You","I","I"]," Is":["it","there","there","there","there","there","there","it","the","this","closing","there","there","there","must","there","it","there","the","`w12req`","there","not","there","this","there","the","there","this"]," Isn't":["a","there","`nucleotide-count`"]," It":["doesn't","does","doesn’t","may","might","is","works","might","took","might","also","might","feels","was","does","seems","would","might","rocks","feels","may","leads","looks","just","generates","is","seems","feels","doesn't","wasn't","came","would","might","might","looks","seems","turns","looks","also","would","would","looks","might","seemed","still","looks","works","seems","looks","was","might","would","is","should","would","might","looks","helped","helped","seems","might","might","might","feels","looks","can","might","looks","took","doesn't"]," It'd":["be"]," It's":["pretty","a","native","a","also","only","too","`frequencies`","probably","definitely","not","really","a","hard","almost","fine","a","actually","not","the","more","generally","a","always","the","also","possible","longer","not","typical","a","also","pretty","often","probably","great","also","not","recommended","worth","a","not","interesting,","idiomatic","common"]," Item":["5"]," Items":["1-4"]," It´s":["not"]," I’m":["not"]," Java's":["`Calendar`"]," Joining":["back","the"]," Just":["makes","don't","my","throwing","wanted","for","a","realized","doing"]," Keep":["them","it","going"]," LOL,":["didn't"]," Last":["nitpick"]," Lastly,":["have"]," Latest":["iteration"]," Learned":["some"]," Let":["me"]," Like":["you","how"]," Likewise,":["it's"]," Line":["2","5","5","2","12","20","4-"]," Literally":["the"]," Look":["Great"]," Looking":["good,","good!","good!","snazzy","good!","good!","good!","at"]," Looks":["good.","good","great!","good","good.","great!","good!","good!","great","good","good","like","great","good.","good","great!","good.","better.","good","like","nice!","good!","nice,","good","good!","great!","good,","quite","good.","good","pretty","good,","great!","good!","great!","great!","nice!","good.","like","good.","good.","great!","cool.","good","good,","good.","great","great!","good.","good.","very","great.","like","good","good.","good","good.","good.","so","good","good.","pretty","like","like","nice,","OK.","effective.","great!","better","good,","like","great,","good!","nice,","pretty","good.","great","nice.","good.","good.","like","good!","good","good.","good","pretty","pretty","nice","good,","generally","good.","good,","great","really","good.","good.","pretty","reasonable","good","good,","good.","good.","good","good","good.","good","good","great.","great!","really","clean","just","good","good","good.","good"]," Lots":["of"]," Love":["the","it","the"]," Lowercasing":["in"]," Macro":["mania!"]," Macros":["with"]," Made":["the","methods","the"]," Mainly":["readability"]," Maintainability":["would"]," Make":["char-counts"]," Makes":["sense!"]," Making":["it","the"]," Man":["I"]," Manually":["incrementing"]," Map":["lookups"]," Maps":["can","can"]," May":["I"]," Maybe":["align","scoping","there’s","`dna-to-rna`","you","you","use",":require/:refer","simpler","you","assign","\"normalizer\"","there","input","you","you","consider","the"]," Memoize":["the"]," Might":["be","be?"]," Minor":["nitpick","nit."]," More":["on","than","than"]," Most":["people","people"]," Moved":["to"]," Moving":["actual","`zipmap`","the","checks"]," Much":["better","appreciated","better!!","improved","happier","better"]," Multiple":["`doseq`"]," Must":["be"]," My":["only","take","Clojure","wrong.","take","only","problem","only,","use","solution","first","solution","very","above","first","approach","understanding","earlier","understanding","biggest","angry?","2"]," Nah":["..."]," Naming":["(cform","things"]," Naturally,":["I"]," Neat":["solution.","solution!"]," Neat!":["I","I"]," Neat,":["thanks!","thanks!","I've"]," Nested":["ifs"]," New":["version"]," Next":["work","I'd"]," Nice":["--","--","work!",":)","work","and","solution!",";)","that","solution!","conditions!","use","suggestions!","one!",":)","touch","solution!",",","to","!!","solution!","doc","idea.","solution!","short","work!","use","and","concise","use","work!","catch","use","solution.","tip","overall"]," Nice!":["Would","I","I","I","I've","`frequencies`"]," Nice,":["although","looking","I","readable","thanks!"]," Nice.":["Using","I","One","Would","Alternatively"]," Nicely":["done;"]," Nil":["and"]," No":["I'm","worries,","parentheses","need","need","I","idea","doubt","problem.","need"]," No,":["I","I"]," No.":["I"]," Nope,":["I","I","I"]," Not":["the","a","sure","sure","sure","sure","the","happy","that","sure","sure","nuts"]," Note":["that","that"]," Noted,":["thanks!"]," Nothing":["to","to","beyond"]," Notice":["the"]," Now":["how","only","I","that","that","it's"]," Now,":["in"]," OK":["thanks"]," OK,":["found"]," OMG,":["that"]," O_O":["more"]," Observe":["that"]," Obviously":["as"]," Of":["course","course"]," Oh":["good","right,","of","no,","hey,","beer","I","here's"]," Oh,":["I","and","just","perfect!","right!","just","I","wow!","thanks,","neat!"]," Ohhh":["I"]," Ok":["thanks","thanks","thanks"]," Ok,":["this","is","thanks.","I've","after","I'll","I","now","so","I've","I","so"]," Ok.":["Understood.","This"]," Okay,":["now","so","another","sounds"]," On":["a","moving","moving","the","the","one","the","another","a","the"]," Once":["the"]," One":["more","minor","(super","tiny","little","minor","of","of","other","last","thing","thing","explains","small","thing","more","last","thing","more","more","of","question","way","problem","function","other","possible","other","more","tiny","that","should","thing","thing","thing","tip","hint:","minor","thing"]," Only":["things","a","difference","`nil`"]," Ooh,":["thanks"]," Ooo!":["Thanks."]," Oops":["sorry"]," Oops,":["didn't","I","I"]," Oops.":["I"]," Optionally,":["to"]," Or":["again,","maybe","using","possibly","even","when"]," Ordinarily":["I"]," Other":["than","nitpickers","nitpickers","than","nitpickers","than","than","improvements","than","than","than"]," Otherwise":["looking","it’s"]," Otherwise,":["it's","looks","looks","looks","looks","looks","looks","you"]," Ouch,":["that","right,","and"]," Outstanding":["feedback"]," Overall":["everything","looks","looks","very","looks","looks","looks","looks","really","it","the","looks","looks","the","looks"]," Overall,":["this","the","clean"]," P.S.":["I"]," PS:":["nice","don't","Sorry","Sorry"]," Parentheses":["are"]," Partial":["application"]," Per":["advice,","advice,"]," Performed":["some"]," Perhaps":["you","wrapping","you","you","your"]," Personally":["I","I"]," Personally,":["I"]," Picked":["up"]," Played":["around"]," Please":["ignore","ignore","bear","pay","guide","put","check","use"]," Possibly":["`:require`"]," Pre-calculating":["the"]," Predicates":["can"]," Pretty":["terse,","nice,","clear","hard","happy","nice!!","minor,","much","much"]," Probably":["it’s"]," Props":["to"]," Putting":["constants","it","an"]," Question:":["Did"]," Quite":["possibly","like"]," Ran":["12","14"]," Rather":["than","brute-force","than","than"]," Re-write":["to"]," Re:":["parentheses,","the","lowercasing"]," Reads":["good"]," Realized":["I"]," Really":["minor"]," Reduce":["the"]," Refs":["are"]," Regarding":["code","the","the","randomness","4,","newlines,","the","the","spacing"]," Regex":["check"]," Regexes":["avoided"]," Relying":["a","just"]," Remember":["that","that","that","that","that","that"]," Rename":["`to-rna-1`"]," Renamed":["parameter"]," Returning":["invalid"]," Revision":["#2"]," Rewrote":["to"]," Right":["now","you","you"]," Right,":["I"]," Robustness":["principle"]," Saved":["one"]," Saw":["some"]," Second":["Question:"]," Second,":["this","check"]," Seems":["a","pretty"]," Shortest":["solution"]," Shorthand":["for"]," Should":["the","the","that","`random-string`"]," Shout":["detection"]," Silly":["me."]," Similarly":["you"]," Simpler":["than"]," Simplified":["normalize"]," Simplify":["the"]," Since":["I","you're","you","it","everything","this","you're","your"]," Small":["nitpick"]," Smart":["use","approach."]," So":["what","just","were","something","yeah,","there's","there's","there's","what","I","is","instead","```dec-each-value```","maybe,","if","I"]," So,":["for","response-for-basic"]," Solution":["with"]," Some":["things","may","things","formatting","things","of"]," Something":["else","like"]," Sorry":["guys","about","for","everyone,","for","about","for","twillis,"]," Sorry!":["I"]," Sorry,":["double","I've","my","I"]," Sort":["converts"]," Spacing":["of"]," Speaking":["of","of","of"]," Specifically":["the"]," Splitting":["on"]," Started":["out"]," Still":["need","pretty","pretty","learning","this","getting"]," String":["replace","replace","can","in"]," Strings":["act","in","can","can","can","can","can"]," Style":["wise,"]," Submitted":["test","in"]," Subtracting":["one"]," Succint":["and"]," Super":["readable."]," Sure":["--","enough."]," Sure,":["that's","you","but"]," Sure.":["You",":-)"]," Sweet,":["I"]," Sweet.":["I"]," Switched":["to","to"]," TIL:":["merge","\\W+"]," TL;DR":["when"]," Take":["advantage","a","a","a","a","a","a"]," Terminating":["the"]," Testing":["bob.test","bob.test"]," Tests":["for"]," Than":["you."]," Thank":["you","you.","you.","you,","you","you!","you!","you","you,","you.","you","you","you","you","you.","you","you,","you","You.","you","you!","you","you.","you.","you.","you","you","you.","you.","you.","you.","you","you,","you","you","you.","you","you","you","you","you","you","you!","you","you"]," Thanks":["for","rubysolo,",":)","for",":)","for","for","Mike.","for","for","for","n1k0","for","!","for","for","for","for","for","for","for","!","for","@amelie,","for","!","for","for","to","for","for","for","@marge!","for","for","again,","for","for","in","for","for","@terry!","for","for","for","for","for","that","@krista","@pierce.","@antoinette.","a","@leonie,","@delpha,","a","for","for","to","for","for","for","@hiram","again.","for","@haskell","@nicholas","for","again","for","for","to","for","for","for","@jerrold","for","@ed","@sherman!","@cristina,","again,","for","for","@martin.","@wilburn.","@adrain.","for","Geoff.","@aric!","for","about","sgrimm.","@rosella,","Geoff","for","for","for","for","for","for","@jayden","for"]," Thanks!":["I","The","I","Could","I","I","Those","BTW","I","It","I","I","I've","Should","I",":)","I","I","Using","geofflane."]," Thanks,":["that","I","that's","updating.","I","arr-ee,","I","didn't","you","good","I","that","@king.","I","@leon.","soapie.","soapie,","resubmitted","I'm","I","I"]," Thanks.":["I","I"]," That":["looks","said,","being","being","means","looks","really","may","being","said,","made","-1","aside","is","may","obviously","assert","said,","said,","does","being","was"]," That's":["interesting","very","a","not","a","an","almost","a","a","a","my","true.","actually","an","good.","very","a","quite","because","how","a","entirely","just","the","a","good","a","what","a","much","completely","a","great","a"]," The":["default","spec","\"other\"","more","first","`.endsWith`","difference","only","first","syntax","test","(seq","`input`","code","private","`defn`","parentheses","`last`","`allchars`","people","approach","example","guide","tests","Elixir","mapping","formatting","problem","exercism","string","`challenge`","operations","trailing","most","downside","trade","regexp","`let`","only","code","`rev-subs`","composition","```(if","placement","reason","very","README","README","term","README","commented","hardest","code","threading","way","only","tiny","word","downside","code","downside","solution","nice","logic","problem","customer","use","advantage","only","merge-with","only","first","second","pre","code","main","results","other","nested","silence?","\u003ccode\u003edefn-\u003c/code\u003e","test","use","question","shouting","Clojure","'frequencies'","string","code","tests","interesting","simulate","first","`can-attack`","`board-string`","actual","\"teenth\"","cond","string","recursive","nested","use","first","funny","use","code","short","other","`defn`","function","important","double-negative","solution","intent","else","for","tests","first","scalene","work","same"]," Their":["scientific"]," Thelast":["thing"]," Then":["`if-let`","you","your","you","all","look","you"]," Then,":["we","you","what"]," There":["is","is","is","are","isn't","handy","a","is","might","are","are","are","was","is","are","was","are","are","can't","are","is","is","are","are","is","are","are","are","are","is"]," There's":["a","also","a","a","really","a","a","a","a","`lower-case`","also","a","a","a","also","also","also","also","also"]," These":["create"]," They":["should","helped"]," Think":["this","about","if-let","about","about","about"]," Thinking":["there's"]," Third":["-"]," This":["makes","is","looks","is","is","works","looks","looks","looks","is","is","is","is","is","seems","is","is","looks","looks","is","looks","works","is","is","looks","is","looks","is","replacement","is","looks","looks","is","is","works,","looks","is","definitely","looks","looks","is","might","doesn't","looks","one","looks","is","is","looks","adheres","makes","was","was","doesn't","is","is","looks","definitely","is","looks","solution","would","one","is","is","looks","looks","looks","solution","is","is","is","looks","does","is","is","is","last","code","still","is","seems","is","exercise","is","code","looks","I","is","is","limits","is","one","one","is","revision","is","is","solution","I","is","code","looks","might","is","is","solution","looks","looks","cuts","particular","is","is","is","is","is","iteration","looks","looks","one","is","was","is","would","looks","looks","looks","looks","can","looks","is","is","looks","looks","is","has","submissions","will"]," Those":["were","are","right","look"]," Though":["I"]," Thoughtful!":["Thanks"]," Tiny,":["tiny"]," To":["me,","me,","me,","me,","be","make","keep","eliminate"]," Too":["bad","much"]," Took":["me","the"]," Top":["level"]," Totally":["personal"]," Transforming":["to"]," Tried":["with","out"]," Trimming":["is"]," True":["if"]," Try":["using","as","one","using","using","doing","use","factoring"]," Trying":["to","out"]," Two":["of","minor","small","very","ways"]," Typically":["I"]," Ug.":["This"]," Unfortunately":["I'm"]," Unfortunately,":["only"]," Unsure":["about"]," Updated":["`use`","`question?`","submission"]," Use":["`String#endsWith`.","hyphen","`defn-`","-\u003e\u003e","more","\"math\"","letfn"]," Used":["atom","a","a"]," Uses":["of"]," Using":["a","regex","`letfn`","a","defn","more","a","a","`letfn`","blank?","`let`","hash-set","`cond`","`GregorianCalendar`"]," Valid":["point."]," Version":["1","4"]," Very":["nice","nice.","valid","nice!","clean","nice.","nice.","nice!","nice","nice","concise!","nice.","cool!","nice.","nice","nice","cool.","creative","nice!","nice,","nice","tiny","nice.","clear","straight","minor","minor,"]," Want":["to"]," Wanted":["to"]," Was":["not"]," Wasn't":["aware"]," Way":["cleaner"]," We":["could","still"]," We've":["been"]," Weird,":["tests"]," Well":["i'll","done.","done,"]," Well,":["those","this","this","that's","yes","a","the"]," Were":["I"]," What":["would","would","do","about","do","about","about","about","do","if","if","do","about","is","do","happens","@electa","if","about","has","is","is","are","about","about","to","about","about","does","about","that","I"]," What's":["with","the"]," What,":["like"]," When":["building","you","I","using","I","you","there","you're","your","you're"]," Whenever":["I"]," Where":["do","there","```str```"]," Which":["is","explains"]," While":["it's","I","I","writing","I've","I","there","I","keeping","this","I","this","it","commas","`{name"]," Whitespace":["is"]," Whoops,":["accidentally"]," Whoops...":["didn't"]," Whoops...wrong":["submission!"]," Why":["introduce","using","do","isn't","not","shouldn't","don't","measure","require","name","not","did","the"]," Will":["do,","also","review"]," With":["a","`def`","regards","regards","regards","your","one"]," Woah,":["I"]," Woops,":["erroneously","no"]," Would":["it","it","it","it","it","it","it","there","it","it","it","it","it","it","it","be","it","it","you","defining","you","it","it","it","it","it","like","your","it","be"]," Wouldn't":["creating"]," Wow!":["That's","I"]," Wow,":["I","that","I","this","This"]," Yay!":[":D"]," Yay,":["much"]," Yeah":["I","indeed,","...","...","...","I",",","I"]," Yeah,":["I","I've","I've","I","I","matter","both","if","I","I'd","embarrassing","I","tend","it","the","right?","I","this'd","thanks.","I've","`Math/pow`"]," Yeah.":["[In","My"]," Yep":["..."]," Yep,":["I"]," Yes":[",",","]," Yes,":["that's","I","using","`(last","it's","of","that","I","that","I","I","a","indeed.","thank","the","all"]," You":["could","could","can","make","could","mean","could","should","can","probably","could","could","can","might","are","may","are","can","could","can","could","wrote:","don't","don't","could","could","could","could","could","mean","could","maybe","could","should","could","can","can","can","can","could","might","still","can","probably","don't","could","could","can","might","could","mean","can","maybe","could","can","may","might","can","could","import","should","can","can","don't","should","can","could","have","could","don't","could","could","could","could","might","might","could","are","solution","may","might","could","may","should","could","trim","may","have","could","could","may","repeat","might","might","could","can","could","can","could","still","can","could","can","could","could","might","could","can","could","can","could","taught","can","are","could","could","can","should","could","can","make","can","can","might","don't","could","might","are","might","can","could","can.","could","can","don't","could","might","are","can","got","could","could","could","can","can","could","can","could","could","could","don't","repeat","could","can","might","could","could","could","might","could","don't","could","might","could","might","don't","should","can","do","shouldn't","might","might","might","might","can","can","might","might","can","can","could","can","can","could","should","can","shouldn't","could","could","can","can"]," You're":["right.","right!","right.","right","still","right","right","using","welcome!","right","using","right,","welcome!","making","so","off"]," You've":["submitted","convinced","elegantly"]," Your":["helper","helper","loop/recur","implementation","point","usage","let","`is-*`","`is-shouting`","solution","solution","dispatch","condition","`seq-contains?`","regex","first","`zipvec`","`radiator`","codes","verse","`for`","`cond`","nitpicks","definition","use"]," Yup,":["I'll","sorry"]," Yup.":["I"]," Zipping":["the"]," Zoldar":["-"]," [1]":["I"]," [1]:":["http://en.wikipedia.org/wiki/Behaviorism","http://clojuredocs.org/clojure_core/clojure.core/contains_q","http://clojure.org/special_forms#toc9","http://clojure.org/special_forms#toc9","http://clojure.org/special_forms#toc9","http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/blank?"]," [The":["world's"]," [`defn-`](http://clojuredocs.org/clojure_core/1.2.0/clojure.core/defn-)":["is"]," [lowerA":["(sort"]," [word-lc":["(frequencies"]," [worst]:":["http://www.oreillynet.com/onlamp/blog/2004/03/the_worlds_two_worst_variable.html"]," \\e":["\"Sure.\""]," _Note,":["doing"]," `":["(="]," `#\"\\w+\"`":["is"]," `(+":["-6)`"]," `(-":["x","x","x","bottles_number"]," `(:require":["[clojure.string"]," `(=":["expression","(count","n","n"]," `(and":["(=","(="]," `(apply":["char"]," `(blank?":["message)`"]," `(def":["silence?","^:private","add-two","on-mercury","nothing?"]," `(defmethod":["bob"]," `(defn":["amount","name","add"]," `(defn-":["silent?","on-planet","shouting?)`"]," `(do":["(defn"]," `(doseq":["[day-name"]," `(first":["(reverse"]," `(fn":["[c]"]," `(get":["students"]," `(if":["x","boolean"]," `(int":["\\A)`"]," `(map":["…"]," `(not":["(some","(=","(=","(=","(="]," `(ns":["bob","bob","phrase"]," `(rand-int":["(-"]," `(range":["65"]," `(re-find":["#\"^\\d+\""]," `(remove":["#(="]," `(repeatedly":["(drop-while"]," `(seq":["sequence)`","dna)`"]," `(some":["#{:fred}"]," `(str/trim`":["instead"]," `(take":["10"]," `(update-in":["db"]," `:else":["(throw"]," `:require":["[clojure.string","[clojure.string"]," `:use`":["is","is","was"]," `Sets`":["implement"]," `[response":["_]"]," `\\w+`":["already"]," ```":["clojure","clojure","clojure","clojure","clojure","clojure"]," ```:require":["[clojure.string"]," ```digest```":["does"]," ```dna_string```":["should"]," ```no-quiet?```":["is"]," `and`":["formatting"]," `assert_equal":["'Fine."]," `blank?`":["is","is","would","checks"]," `bob/yelling?`":["that"]," `clojure.string/join`":["is"]," `clojure.string/lower-case`":["is"]," `clojure.string`":["namespace","namespace"]," `cond`":["instead","might","with"]," `defn-`":["prevents"]," `defn`":["is"]," `doall`":["isn't"]," `format`":["cleans"]," `format`!!":["That's"]," `frequencies`":["would"]," `generate-name`":["inside"]," `get`":["in"]," `if-let`!!":["Just"]," `if-not":["(seq"]," `if`":["when","with"]," `interleave`":["and"]," `invaild-number`":["isn't"]," `is-silent`":["has"]," `is-yelling?`":["needs"]," `join":["\"\"`","\"\"`","\"\"`"]," `left`":["and"]," `let`":["form","body","form"]," `letfn`":["form"]," `lower-case`":["and"]," `matches":["(fn"]," `matching?`":["can"]," `merge-with`":["is","is"]," `merge`":["would"]," `name`":["is"]," `ns`":["macro"]," `nucleotide-counts`":["where"]," `pair-up`":["could"]," `pretty-print`":["was"]," `q`":["is"]," `question`":["shouldn't"]," `random-string-range`":["in"]," `range`":["has","will"]," `re-find`":["might","could"]," `re-seq`":["might"]," `reduce-kv`":["is","is"]," `ref`":["is"]," `ref`s":["make"]," `require`":["as"]," `reset!`":["is"]," `response-for`":["has"]," `say`":["is"]," `seq`":["is"]," `seq`s":["are"]," `shouty?`":["asks"]," `silence`":["could"]," `silent?`":["could"]," `sort`":["would"]," `sorted`":["can"]," `split`":["and"]," `strand-compare`":["sounds"]," `swap!`":["is"]," `total`":["could","could"]," `universe`":["gave"]," `upper-cased-and-letter?`":["kind"]," `use`":["is","is"]," `valid-nucleotide?`":["seems"]," `when-not`":["could"]," `zero?`":["and"]," `zip`":["is"]," a":["minor","fantastic"]," aaaand":["I"]," actual:":["(not","(not","(not","(not","(not","(not","(not","(not","(not","(not"]," ad":["1.","2."]," ah,":["true!"]," alpha":["(alphagram"]," also,":["the"]," and":["then","point"]," awesome":["catch,"]," blcooley's":["post"]," bob=\u003e":["(includes-letters?"]," btw,":["in"]," but":["that's","the","personally","that","this"]," changed":[":require/:all","from"]," chrome":["is"]," cleaned":["up"]," clojure.string":["has","has"]," clojure.string/blank?":["might","=\u003e","already"]," command":["line"]," cond":["would"]," could":["be"]," def":["and"]," default-respnse":["-\u003e"]," dna\u003e":["(def","(time","(time","(time","(def","(time","(time","(time"]," do":["a","you"]," dont":["think"]," e.g.":["`#(not=","`#(vector"]," expected:":["(=","(=","(=","(=","(=","(=","(=","(=","(=","(="]," first":["first))"]," for":["(question?)"]," frequencies,":["but"]," function":["body)"]," good":["point,","points!"]," ha,":["thanks!"]," haha,":["markdown","nice."]," have":["you"]," higher-order":["functions"]," hmm,":["this"]," hmm...":["it","I"]," holy":["crap"]," how":["can"]," i":["also","can","think","have","want"]," i'm":["curious"]," instead":["of","of"]," interesting,":["yes,"]," is":["equivalent","it","using","around"]," it":["makes","throws"]," java.lang.RuntimeException:":["Unable"]," jgdavey":["suggested"]," just":["a"]," let":["[valid-nucleotide?"]," like":["this,"]," line":["9","2","3","5","6","6","7","7","8","8:","11","13","2","5","15","19"]," look":["good!"]," looking":["good!"]," looks":["much","good"]," lower-case":["(remove-non-word-chars"]," made":["use"]," maybe.":["I"]," messing":["up"]," might":["have"]," mine":["had"]," mlakewood,":["thanks"]," moved":["let"]," moving":["the"]," much":["easier","happier"]," my":["brain","first"]," new":["found"]," next":["rev,"]," nice":["'n","explanation."]," nice.":["thanks."]," nil":["behavior"]," noise":["might"]," normalize":["is"]," not":["a","sure","sure"]," oh":["yeah!","thank"]," ohh":["noes,"]," only":["characters"]," ooh":["deprecated?!"]," oops,":["submitted"]," or":["not!","import"]," oups":[":)"]," over":["my"]," pardon":["me,"]," perhaps":["I'll"]," predicate-1?":["result-1"]," predicate-2?":["result-2"]," predicate-3?":["result-3"]," pretty":["concise"]," question?":["\"Sure.\""]," range":["can"]," rather":["than"]," reduce-kv":["would"]," remove":["unused"]," removed":["partition","(or"]," replaced":["apply/merge/map"]," sgrimm,":["thank"]," should":["be"]," shouting":["could"]," shouting?":["\"Woah,"]," silence?":["could","\"Fine."]," so":["yeah,"]," sorry,":["that"]," sort-by,":["into"]," sounds":["good"]," starting":["to"]," string/replace":["is"]," super":["easy"]," sweet":["reviews..."]," sweet!":["I"]," sweet,":["who"]," thank":["you"]," thanks":["@shawna!","for","for","for"]," thanks,":["a"]," that":["checks"]," the":["(+","test-suite","`validate`"]," then":["you"]," there's":["probably"]," think":["my","I"]," though":["the"]," three":["minor"]," to":["the"]," turns":["out,"]," twillis,":["there"]," two":["little"]," upper-case":["will"]," user=&gt;":["(def","(add","(require","(def","(silence?","(macroexpand-1","(macroexpand-1","(def","(time","(time","(time","(time","(time","(time","(#{\\a","(#{\\a","(#{\\a","(#{\\a","(#{\\a","(#{\\a"]," user=\u003e":["(macroexpand","(defn","(scope-test)","my-value","(defn","(scope-test)","my-other-value","\"\"\"xyz\"\"\"","(list","(if","(if"]," user\u003e":["(def","(time","(time","(time","(def","(time","(time","(time","(apply","(silence?","(def","(time","(time","(time","(time"]," using":["the","`string`","grade"]," valid":["point"]," very":["nice!"]," well,":["_that_"]," what":["about","about","do"]," which":["you"]," will":["save"]," with":["shorthand"]," would":["this"]," yeah":["good"]," yeah,":["what","either"]," yep":["-"]," yes":["you"]," yes,":["but"]," you":["might"]," you're":["right,","right."]," your":["approach","silence","implementation","let"]," {:T":[":U"]," {:pre":["[(every?","(expresion","[(SOME"]," {\\A":["\\A,"],"! Awesome":["solution."],"! I":["am","just","didn't"],"! as":["shouting."],"!! ,":["only"],"!! Thanks":["@frieda"],"\" (bottles":["99)"],"\" foo":["bar\")))","bar\""],"\" n-bottles":["\"","\""],"\" of":["beer","beer.\")`.","beer","beer\""],"\" on":["the"],"\"!@#!@\" doesn't":["count"],"\"\" %)":["(str/split"],"\"\" (map":["(validate"],"\"\" input)`":["check."],"\"\" m)`,":["will"],"\"\" nil)":[";"],"\"\"\" syntax":["for"],"\"\"\"xyz\"\"\" will":["actually"],"\"\")), which":["is"],"\"\")` and":["`(str/split"],"\"\")` which":["would"],"\"\")` with":["a"],"\"\"` can":["be"],"\"\"` is":["equivalent","often"],"\"#w+\"` for":["extract"],"\"%\" is":["more"],"\"%1\" in":["anonymous"],"\"%1\" isn't":["incorrect,"],"\"(%s) %s-%s\"":["(drop_and_show"],"\"(\\\\U \\\\A":["\\\\G)\""],"\"-\u003e\u003e\" might":["be"],"\".\" in":["the"],"\".\" makes":["Bob"],"\"...\"} {:matcher":["...}]`."],"\".add\" method.":["Previously"],"\".add\", I":["could"],"\".endsWith\" with":["\"last\""],"\".roll\" method":["which"],"\"0000000000\" if":["the"],"\"1\" (subs":["sanitized-number"],"\"1, 2,":["3\").","3\"))"],"\"2\")`. Although":["if"],"\"42\")` and":["`(shouty?","`(shouty?"],"\"4?\" comment.":["The"],"\"4?\") and":["(response-for"],"\"4?\". Perhaps":["you"],"\"5\" to":["be"],"\"99 bottles\"":["clause"],"\"99 bottles...\"":["after"],"\":\" \\T)))":["Didn't"],"\"?\" as":["a"],"\"?\" or":["\".\""],"\"?\"'* in":["just"],"\"?\") and":["performance"],"\"?\") returns":["false"],"\"?\") without":["using"],"\"?\")` scans":["as"],"\"?\")``` for":["```is-question?```"],"\"?\", and":["I"],"\"?\"] ..":["might"],"\"A sullen":["teenager\""],"\"ACTG\" was":["a"],"\"AEIOULNRST\" #\"\")`":["(which"],"\"AssertionError\" is":["vague."],"\"AssertionError\")` would":["replace"],"\"BOB YOU":["ARE"],"\"Be conservative":["in"],"\"Bob\" is":["his"],"\"C\" \"T\"":["\"G\"])"],"\"CGAT\")` into":["named"],"\"Calculate the":["alphagram"],"\"DRY\" up":["the"],"\"DUDE!\", he":["should"],"\"Do you":["talk","like"],"\"Does bar":["baz"],"\"Elapsed time:":["99.122541","96.896736","95.14145","208.046098","208.561108","201.423851","7031.555459","8488.025604","7884.769994","393.312562","524.314041","387.761321","19087.936434","11479.189682","11788.19571","14057.544615","0.110068","0.097038","63.334609","26.054067","16.048","1.17"],"\"Enterprisey\". Breaking":["them"],"\"Fine, be":["that","that","that","that","that"],"\"Fine. Be":["that","that","that","that","that","that"],"\"Given a":["word,"],"\"Go to":["the","the"],"\"H.G. Wells":["was"],"\"Have a":["look"],"\"Hello\" vs":["\"hello\"?","\"hello\"?","\"hello\"?"],"\"Help little":["boys"],"\"I feel":["that\""],"\"I'm Batman.\"":["(a"],"\"I'm just":["a"],"\"I...\" would":["be"],"\"Invalid DNA:":["input"],"\"It's raining":["out!\""],"\"Lets play":["scrabble.\"?"],"\"Looks great!\"":["button"],"\"OK.\" etc.":["to"],"\"Prefer using":[":require"],"\"Say that":["again..."],"\"Sure\")` in":["the"],"\"T\" and":["\"U\".","\"U\"?","\"U\"","\"U\"","\"U\"","\"U\"","\"U\"","\"U\""],"\"T\" expressive":["names"],"\"T\" to":["\"U\""],"\"T\". In":["other"],"\"TAG\") \"T\"":["\"U\")"],"\"The British":["are"],"\"The Joy":["of"],"\"The question":["mark"],"\"There's a":["better"],"\"U\" \"A\"":["\"X\"})"],"\"U\" and":["\"T\""],"\"U\" are":["so","meaninful"],"\"U\" characters":["some"],"\"U\" into":["constants,"],"\"U\" then":["seeing"],"\"U\" to":["that"],"\"U\") into":["to-rna"],"\"Unexpected input\"))`":["added"],"\"Use :use":["in"],"\"WHAT DID":["YOU"],"\"WHAT THE":["HELL"],"\"WHERE IS":["SHE?\""],"\"Whatever\" should":["be"],"\"Whatever\", I'm":["adding"],"\"Whatever.\" \"Woah,":["chill"],"\"Whatever.\" (bob/response-for":["\"The","\"1,"],"\"Whatever.\" It":["doesn't"],"\"Whatever.\" and":["didn't"],"\"Whatever.\" should":["be","be"],"\"Whatever.\" the":["value"],"\"Whatever.\")` which":["would"],"\"Whatever.\"` can":["just"],"\"Woah, chill":["out!\"","out!\"","out!\")","out!\"","out!\"","out!\"","out!\"","out!\"","out!\"","out!\"","out!\"","out!\",","out!\")`.","out!\"","out!\"","out!\"))","out!\"","out!\""],"\"X\" from":["the"],"\"\\n\" in":["there."],"\"\\n\" on":["at"],"\"a\" (hey,":["we're"],"\"abcd\" :true":[":false)"],"\"abcd\" :yes":[":no)"],"\"account balance\"":["examples"],"\"alias\" a":["method"],"\"alphagram\" for":["your"],"\"alphagrams\" for":["a"],"\"an invalid":["nucleotide\"."],"\"approved\" submission.":["Try"],"\"are\": `question?`.":["It"],"\"banana\" an":["anagram"],"\"base case\"":["I"],"\"blah?\")` would":["return"],"\"bob\" again":["for"],"\"bob\" by":["mistake."],"\"bob\" solution,":["must"],"\"bob\" solutions":["in"],"\"boolean\" in":["nature"],"\"breaks\" the":["simmetry"],"\"caching\" the":["sort/lower-case"],"\"case\" statement":["in"],"\"code is":["data\""],"\"combine\" logic,":["IMHO."],"\"comparable\" value.":["If"],"\"compute the":["frequencies"],"\"cond\" is":["my"],"\"constants\" above":["all"],"\"constructor\" function":["would"],"\"count\" is":["implemented"],"\"count\" more":["explicit."],"\"dead\" comments":["will"],"\"declarative\" assertions":["in"],"\"def\" here":["to"],"\"default value\"":["feature"],"\"default\" instead.":["Even"],"\"default\" via":["an"],"\"default\" when":["Paul"],"\"default\". You":["don't"],"\"divisible\" doesn't":["have"],"\"dna\", \"rna\",":["and"],"\"does this":["string"],"\"dow\" (day-of-week),":["\"pim\""],"\"drop 0":["then"],"\"drop 3":["then"],"\"drop 6":["then"],"\"equality partition\".":["Short"],"\"everything in":["a"],"\"execute this":["method\","],"\"feel\" like":["idiomatic"],"\"feels better\".":["Time"],"\"feels\" like":["\"normal\"","\"normal\""],"\"foo\") \"foo\")":["true)."],"\"foo\") true).":["You"],"\"format\"! I":["was"],"\"frequencies of":["the"],"\"frequencies\" function":["in","in"],"\"frequencies\" function.":["For"],"\"frequencies\" function;":["it"],"\"frequencies\" that":["may"],"\"frequencies\" was":["what"],"\"funny\" with":["them"],"\"get the":["phrase's"],"\"globals\" and":["well,"],"\"good duplication\"":["indeed,"],"\"grouped\" together":["a"],"\"hasher\" because":["it"],"\"hasher\" doesn't":["really"],"\"heard\", since":["it"],"\"histogram\" is":["right"],"\"horizontal\" and":["\"vertical\""],"\"if it's":["not","not"],"\"if nucleotide":["is","is"],"\"if only":["this"],"\"if you":["tell"],"\"imperative\" feel.":["In"],"\"includes-letters?\" function":["name"],"\"input\" as":["well."],"\"insane\" route,":["and"],"\"into []\"":["and"],"\"invalid\" begins":["with"],"\"is\" or":["\"are\":"],"\"is\" prefix,":["e.g.,"],"\"is_\" is":["superfluous"],"\"it's more":["readable"],"\"javascript!!&@$%&z\" it":["would"],"\"javascript\". Perhaps":["I"],"\"javascriptz\" instead":["of"],"\"last\" if":["you"],"\"less code\"":["part."],"\"let\" accomplishes":["encapsulation"],"\"let\" rather":["than"],"\"letterness\" of":["a"],"\"letters\" from":["a"],"\"lingua franca\"":["for"],"\"living\" code.":["They"],"\"local\" functions":["in"],"\"magic letter\".":["While"],"\"magic letters\".":["I"],"\"magic numbers\"":["but"],"\"main\" java.lang.Exception:":["Unsupported"],"\"make use":["of"],"\"map map-to-rna\",":["like"],"\"map\", you":["could"],"\"matches\" and":["\"patterns\""],"\"math\" And":["suddenly"],"\"math\" he":["says."],"\"mod\" to":["make"],"\"more obvious":["way"],"\"most constant\"":["parameter"],"\"native\" clojure":["functionality"],"\"nonsense\" has":["a"],"\"normal\" Clojure,":["both","both"],"\"normalize\" is":["misspelled"],"\"normalizer\" would":["be"],"\"not found\"":["values."],"\"not lowercase\"":["part"],"\"not working\"":["at"],"\"nucleotide-counts\" is":["the"],"\"nucleotides\" should":["quickly"],"\"one\" or":["\"it\"."],"\"order of":["constants\"","constants\""],"\"other\" behavior":["is"],"\"parse\" logic":["separate"],"\"patterns\" from":["this"],"\"pim\" (position-in-month\"":["etc.?"],"\"piping the":["phrase"],"\"plop?\") →":["\\?`"],"\"positive\" (what":["constitutes"],"\"program\". I'm":["only"],"\"proper\" syntax":["when"],"\"query\" or":["\"request\""],"\"question\" and":["\"shouting\","],"\"questioning\". You":["have"],"\"rainbow parentheses\")":["makes"],"\"rainbow\" parens":["too."],"\"re-\" should":["be"],"\"recognizes acronyms\"":["test,"],"\"replace sort":["by"],"\"replace thymidine":["with"],"\"request\" or":["\"string\""],"\"respond\" function,":["which"],"\"response for\"":["gives"],"\"response\" and":["\"matches\""],"\"response\". I":["think"],"\"rna\", and":["\"nucleotides\""],"\"rna-transcription\" by":["mistake?"],"\"robust\" -":["but"],"\"root bound":["constant\"?"],"\"s\" as":["a","the"],"\"s\"? Similarly,":["you"],"\"sentence\". Some":["of"],"\"sequence\" is":["a"],"\"shouting\", but":["these","this"],"\"shouting\". It":["actually"],"\"simple\" `lower-case`":["instead"],"\"slow\" version":["reads"],"\"some\" was":["doing"],"\"step\" which":["could"],"\"step\", so":["you"],"\"strand\" instead":["of"],"\"string\" or":["anything"],"\"teenth\" days":["could"],"\"templating\" really.":["Shoot"],"\"thread first\"":["that","macro"],"\"thread last\"":["macro"],"\"threaded\" version":["would"],"\"thymidine\", not":["\"thymine\"?"],"\"thymine\"? It":["probably"],"\"to focus":["on"],"\"transaction\" so":["`@gaetano`","`@colten`"],"\"unbalanced\" to":["me."],"\"universe\"; I":["rather"],"\"unknown\" for":["your"],"\"unnecessary function":["wrapping\""],"\"use\" statement":["by"],"\"we tend":["to"],"\"why\" of":["`response-for`"],"\"why\" we":["failed"],"\"wildcard match\"":["in"],"\"word\" (aka":["a"],"\"yelling\" and":["\"questioning\"."],"\"yelling\") into":["your"],"\"you may":["get"],"# created":["a"],"# function":["takes"],"# notation":["that"],"#\" +\")`":["into"],"#\"\")` (which":["includes"],"#\"T\" \"U\")":["into"],"#\"[a-zA-Z]\" to":["detect"],"#\"\\W\")))` -":["I"],"#\"\\W+\" might":["be"],"#\"\\W+\" string))`,":["right?"],"#\"\\W+\")``` instead":["of"],"#\"\\w+\" (lower-case":["phrase)```"],"#\"\\w+\" (str/lower-case":["phrase))"],"#\"^\\d+\" message)`":["and"],"#\"^\\s*$\" s)`.":["`question`"],"### Functional":["nits:"],"### Style":["nits:"],"#((nucleotide-counts dna-string)":["nucleotide)`"],"#() form":["for"],"#() notation":["to"],"#(= \"\"":["%)"],"#(= %":["%2)"],"#(Character/isLetter %)":["...)`.","text)"],"#(Character/isLowerCase %)":["prompt)`.","s))"],"#(Character/isUpperCase %)":["s)","s)"],"#(case-insensitive-anagram-of? word":["%)"],"#(if (=":["%"],"#(interleave %":["(repeat"],"#(let [lower'":["(lower-case"],"#(or (Character/isUpperCase":["%)"],"#(…) special":["form"],"#1: not":["very"],"#1: range":["takes"],"#2 takes":["your"],"#2 vs.":["the"],"#2: the":["range-from-args"],"#_=\u003e (def":["my-value"],"#_=\u003e (let":["[my-other-value"],"#{1 2":["3})`,"],"#{\\A \\C":["\\G","\\G"],"#{\\A \\G":["\\C"],"#{\\A} #{\\C":["\\G"],"#{\\C \\G":["\\A})","\\A","\\T"],"#{\\T \\U":["\\A"],"#{a b":["c}"],"#{a b})":["will"],"#{char} #{\\C":["\\G","\\G"],"#{silence?}} [phrase]":["...)"],"$ lein":["exec"],"% \"\")`":["with"],"% %)`":["would"],"% %2)":["looks"],"% (repeat":["\"\\n\"))"],"% \\T)":["\\U"],"% gets":["the"],"% sorted-word)`":["does"],"% word)`,":["even"],"%) (not":["(Character/isLetter"],"%) (str/split":["string"],"%) \\U":["%)`."],"%)(sort-word word))`":["looks"],"%)) sentence))```":["expresses"],"%))` from":["`anagrams-for`"],"%))` where":["%"],"%)` just":["so"],"%)` would":["also"],"%)`. maps":["are"],"%1 %2":["0))","0))"],"%1 %2)`":["calls","is"],"%1,%2 shorthand.":["Might"],"%2 0))":["construction","construction"],"%2) looks":["\"unbalanced\""],"%2)` calls":["`not=`"],"%2)` is":["the"],"%^*@#$(*^ ZOMBIES":["ARE"],"%s-%s\" (drop_and_show":["0"],"& 13":["are"],"& 19.":["Lisp"],"& blank?":["function"],"& frequency":["map"],"& get":["rid"],"& line":["11"],"& more":["declarative"],"&amp; Clojure":["chats"],"&amp; Javascript":["ones"],"&amp; require,":["guys."],"&amp; usage":[":)"],"&amp; useful":["enhancement"],"&gt; He":["answers"],"&gt; I":["don't"],"&gt; Try":["using"],"&gt; You're":["using"],"&gt;= 1.4,":["consider"],"'!' and":["many"],"'%'. But":["I"],"'(-&gt; 10":["#(inc","inc))"],"'(1 2":["3))`,","3)"],"'(defn foo":["[]"],"')' on":["line","lines"],"'.' be":["at"],"'?' character":["for"],"'?' is":["a"],"'?' or":["'.'"],"'?'. Also":["your"],"'?'. Something":["like"],"'Fine. Be":["that"],"'Looks great!'":["at"],"'Whatever.' to":["anything"],"'[clojure.string :refer":["[blank?]])"],"'clojure-string)` instead":["of"],"'cond' to":["determine"],"'coordinated' while":["agents"],"'done'? I'm":["excited"],"'exchange' and":["'subscriber'"],"'frequencies' function":["is"],"'is' when":["ending"],"'opaque data":["structure'"],"'or' statement":["and"],"'prefix' and":["'suffix'"],"'private' to":["the"],"'pure Clojure'":["without"],"'safe', they":["just"],"'second 'third":["'fourth"],"'signature' for":["a"],"'story' of":["what's"],"'suffix' are":["the"],"'suffix' isn't":["the"],"'suggest' that":["you","you"],"'t' and":["'u'"],"'t-to-u'. I":["think"],"'thinking out":["loud'"],"'third 'fourth":["'last]]`"],"'true' in":["the"],"'u' are":["lowercase"],"'uncoordinated'. This":["means"],"'~check [_#]":["~response))"],"( *hash*":["*key*"],"( ...":[")"],"( ...)`":["it"],"( `(seq":["s)`)"],"(!) macro-frenzy":["here,"],"(\"\" \"xyz\"":["\"\")"],"(\"upper case\").":["It's"],"(\"yelling\"), not":["as"],"(#{\\C \\G":["\\A","\\A","\\T"],"(#{\\a \\b":["\\c}","\\c}","\\c}","\\c}","\\c}","\\c}"],"(#{adenosine cytidine":["guanosine"],"((anagram-of? \"foo\")":["\"foo\")"],"((frequencies val)":["nucleotide),"],"() or":["not."],"(+ 1":["(get","(get","(or","vs))"],"(+ a":["b))`"],"(+ length":["1))"],"(- 800":["700))`"],"(- n":["1)))","1))"],"(-&gt; (drop-while":["(fn"],"(-&gt;&gt; …)":["but"],"(-\u003e \"":["foo"],"(-\u003e (replace":["msg"],"(-\u003e args":["f"],"(-\u003e\u003e (convert_number":["raw_string)"],"(-\u003e\u003e (interleave":["string1"],"(-\u003e\u003e (range":["ve","ve"],"(-\u003e\u003e number":["(drop"],"(-\u003eRobot coordinates":["(turn-left"],"(... pre-condition":["...)}`."],"(...) true":["false```"],"(....))`, but":["I'm"],"(.endsWith message":["\"?\")"],"(.endsWith) call":["and"],"(.trim s)":["2)"],"(120 characters":["is"],"(:G :A":[":U"],"(:refer-clojure :exclude":["[replace]))","[count])"],"(:require ...))`":["(proper"],"(:require [clojure.string":[":refer",":as",":as",":as",":refer",":refer","refer",":refer",":refer",":refer",":as",":as",":refer",":refer",":as",":refer",":refer",":as",":refer",":refer",":refer",":as",":as"],"(:require [library":[":refer"],"(:use [clojure.string":[":only",":only",":only",":only",":only",":only"],"(:use [clojure.string]":[":only"],"(:use [clojure.string]),":["your"],"(= \"\"":["input)))","input)))","nil)"],"(= \"Whatever.\"":["(bob/response-for","(bob/response-for","\"Woah,"],"(= \"Woah,":["chill","chill"],"(= %":["\\T)"],"(= ((anagram-of?":["\"foo\")"],"(= (clojure.string/upper-case":["s)","s)"],"(= (count":["digits)"],"(= (frequencies":["word1)"],"(= (keify":["word)"],"(= (last":["(seq","message)","input)","msg)","query)","phrase)","input)","sentence)","input)"],"(= (nth":["(reverse"],"(= (str/upper-case":["s)"],"(= (string/lower-case":["input)"],"(= (string/upper-case":["content)","statement)","input)"],"(= (subs":["digits"],"(= (upper-case":["msg)","phrase)"],"(= 0":["(compare","n)"],"(= 1":["(grains/square","1.0))"],"(= 18446744073709551615N":["(grains/total))","1.8446744073709552E19))"],"(= 2":["(grains/square","2.0))"],"(= 2147483648":["(grains/square","2.147483648E9))"],"(= 32768":["(grains/square","32768.0))"],"(= 4":["(grains/square","4.0))"],"(= 42":["x),"],"(= 8":["(grains/square","8.0))"],"(= 9223372036854775808N":["(grains/square","9.223372036854776E18))"],"(= \\?":["(last","(last","(last","(last","(last"],"(= \\T":["c)","%)"],"(= alpha":["(alphagram"],"(= bottle_number":["0)`"],"(= candidate-freq":["word-freq)"],"(= char":["\\T)"],"(= char1":["char2))"],"(= greeting":["(clojure.string/upper-case","(clojure.string/upper-case"],"(= input":["\"\"))","(str/upper-case"],"(= la":["lb))"],"(= message":["(upper-case","(lower-case"],"(= msg":["(upper-case"],"(= phrase":["(clojure.string/upper-case","(clojure.string/lower-case"],"(= rna-nucleotide":["\"T\")","\"A\")"],"(= s":["(upper-case"],"(= sa":["sb))))"],"(= word":["poss))`"],"(= x":["42)","0).","y)","y))`","y))`","y),"],"(= xx":["yy))`"],"(And did":["this"],"(And discussion":["on"],"(AssertionError. \"Invalid":["input!\"))))","input!\"))))","input!\"))))"],"(BTW if":["you"],"(But I":["don't","don't"],"(Character/isLetter %))":["sentence))```"],"(Character/isUpperCase %)":["(not"],"(Counter from":["collections"],"(Exception. \"Unexpected":["input\"))`"],"(Hint: higher-order":["functions"],"(Hint: try":["splitting"],"(I did":["mark"],"(I didn't":["test"],"(I don't":["even"],"(I think!)":["the"],"(I think).":["Decided"],"(I use":["vim"],"(I'm an":["admin"],"(I'm on":["vacation,"],"(Incidentally, one":["**is**"],"(It also":["looks"],"(It makes":["clear"],"(It would":["also"],"(LISP taboo);":["most"],"(List, Vector,":["Sets,"],"(Maybe code":["in"],"(Most) teenagers":["probably"],"(My solution":["using"],"(Not trying":["to"],"(Note that":["functions"],"(O(n) instead":["of","of","of"],"(The implementation":["of"],"(The mappings":["are"],"(The weird":["alignment"],"(US) phone":["number.","number."],"(Whoops -":["just"],"([\"apple\" 1]":["[\"artichoke\""],"([x] …)":["are"],"(\\T \\A":["\\M"],"(\\m \\t":["\\'"],"(`\"4?\"` is":["not"],"(`%`) to":["be"],"(`(clojure.string/blank? x)`).":["You"],"(`-\u003e`) and":["when"],"(`.charAt`, `.length`,":["etc.)."],"(`?`, '!'":["and"],"(`count-string` usage":["in"],"(`defn-`) instead":["of"],"(`defn-`) with":["descriptive"],"(`identical?` is":["sort"],"(`let` does":["not"],"(`name` is":["applied"],"(`nucleotide`, for":["example)."],"(`shout-response` etc...)":["I"],"(`sing`, `verse`)":["-"],"(a dynamic":["var"],"(a predicate).":["In"],"(a teenager's":["brain),"],"(a terrifying":["statement)"],"(according to":["[wikipedia](http://en.wikipedia.org/wiki/Longest_word_in_English))","the"],"(add 1":["1)"],"(add), you":["could"],"(additional) arguments":["in"],"(after **since":["1.1**"],"(after the":["`[dna]`)."],"(aka `seq`).":["There"],"(aka a":["string)."],"(aliasing the":["namespace"],"(all in":["all"],"(all three":["sides"],"(also, it":["would"],"(also, would":["it"],"(alter-var-root (var":["*checks*)"],"(although compiler":["may"],"(although representing":["a"],"(although the":["tests"],"(although your":["previous"],"(although, the":["`nil`"],"(anagram? [candidate]":["(and"],"(and (=":["(upper-case","phrase","(keify"],"(and (apply":["="],"(and (divisible?":["4)"],"(and (not":["(silence?","(yelling?","(="],"(and (not=":["word1","lower"],"(and `defn-`":["for"],"(and a":["pretty"],"(and also":["look"],"(and any":["other","Lisp-like"],"(and eliminate":["redundant"],"(and feel":["free"],"(and his":["other"],"(and it":["makes"],"(and maps)":["as"],"(and my":["own"],"(and not":["`use`)"],"(and only":["do"],"(and please":["remember,"],"(and possibly":["other"],"(and post)":["conditions,"],"(and similarly":["for"],"(and some":["other"],"(and this":["is"],"(and verified":["that"],"(and we're":["really"],"(and you":["don't"],"(and yours":["is),"],"(and, I":["feel,"],"(and, on":["second"],"(apply =":["(map"],"(apply hash-map":["(interleave"],"(apply not=":["(map"],"(apply str":["(map","(map","(take","(take","[\"A\"","(take",",,,))","converted))"],"(as Clojure":["allows"],"(as implied":["by"],"(as you've":["written"],"(assert (=":["\"Whatever.\""],"(assert (not":["(some"],"(assoc map":["key"],"(assuming memory":["is"],"(at least":["for"],"(atom (make-a-name))}`":["works,"],"(bar \"hello":["world\")"],"(based on":["the","the","the"],"(basically, what":["zoldar"],"(because, like":["sort,","sort,","sort,"],"(below) vs.":["your"],"(blank? lower-case":["upper-case)]`"],"(bob/response-for \"1,":["2,"],"(bob/response-for \"The":["question"],"(bob/response-for \"WHAT":["THE"],"(boolean, thats":["why"],"(bottles 99)":["\""],"(built-in or":["available"],"(but admittedly":["I'm"],"(but hey,":["we're"],"(but might":["be"],"(by the":["way,"],"(calculating `lowerA`":["and"],"(capitalize n-bottles)":["\""],"(case (get":["(.trim"],"(cform vs":["[word1"],"(clean statement))`.":["I"],"(clojure.core/fn ([]":["5)))"],"(clojure.string/blank? greeting)":["\"Fine.","\"Fine."],"(clojure.string/lower-case s)":["s))","s))"],"(clojure.string/replace dna":["\\T"],"(clojure.string/replace dna-seq":["\"T\"","\"T\"","\"T\"","\"T\"","\"T\"","\"T\""],"(clojure.string/replace dna-sequence":["\"T\""],"(clojure.string/split phrase":["#\"\\W+\""],"(clojure.string/trim msg))":["0)`"],"(clojure.string/upper-case greeting))":["\"Woah,"],"(clojure.string/upper-case message)":["message)`","message)`"],"(clojure.string/upper-case s)":["s)","s)"],"(comp (fn":["[text]"],"(comp keyword":["str)"],"(comp not":["blank?)."],"(comp vec":["conj)"],"(compare msg":["\"\")),"],"(cond (=":["rna-nucleotide"],"(cond (question?":["sentence)"],"(cond) --":["usually"],"(condp apply":["[text]"],"(conj lst":["name)))))"],"(conj map":["{key"],"(conj...` really":["the"],"(could also":["have"],"(count (clojure.string/trim":["msg))"],"(count (map":["yell?"],"(count digits)":["(+"],"(count x)":["(count"],"(count y))`":["isn't"],"(day-of-week), \"pim\"":["(position-in-month\""],"(dec lo)":["-1)"],"(declare) is":["pretty"],"(declare) rather":["than"],"(def NUMBERS":["(map"],"(def ^:private":["silence?","^:dynamic"],"(def add":["+)"],"(def bar":["foo)"],"(def dna-seq":["(apply","(apply","(take","(take"],"(def dna-to-rna-map":["{\"T\""],"(def empty-count":["(zipmap"],"(def foo":["(clojure.core/fn"],"(def from-zero":["(int"],"(def my-value":["1))"],"(def nucleotide-to-replace":["#\"[AT]\")"],"(def point":["{:x"],"(def r":["(to-rna","(to-rna","(to-rna","(clojure.string/replace","(clojure.string/replace","(clojure.string/replace","(to-rna","(to-rna","(to-rna","(clojure.string/replace","(clojure.string/replace","(clojure.string/replace"],"(def shouting?":["(every-pred"],"(def silence?":["blank?)","s/blank?)"],"(def sth":["(fn"],"(def strand":["(apply"],"(def to-nine":["(int"],"(def word":["\"sadfasdfagrregwfagfregawgfresafafewrf\")"],"(defcheck question?":["[input]"],"(defcheck silence?":["[input]"],"(defcheck yelling?":["[input]"],"(defmacro defcheck":["[name"],"(defmacro defresponse":["[check"],"(defmethod next-count":["0",":default"],"(defmulti bob":["classify-response)"],"(defmulti next-count":["identity)"],"(defn add":["[db"],"(defn anagram-of?":["[[la"],"(defn anagrams-for":["[word","[word"],"(defn asking?":["[message]"],"(defn clean-string":["[s]","[s]"],"(defn constructor-fn":["[w]"],"(defn dna-nucleotide":["[rna-nucleotide]"],"(defn foo":["[]","[x]"],"(defn function":["[args]"],"(defn leap-year?":["[year]"],"(defn lower-sorted":["[a]"],"(defn matching?":["[[char1"],"(defn nothing?":["[str]"],"(defn question?":["[phrase]","[sentence]"],"(defn response-for":["[input]","([msg]...))","[msg]","[sentence]"],"(defn scope-test":["[]","[]"],"(defn to-rna":["[dna-sequence]","[dna]","[message]"],"(defn word-count":["[phrase]","[string]","[msg]"],"(defn yelling?":["{:after","[phrase]"],"(defn ~name":["~args"],"(defn- anagram-checker-for":["[word]"],"(defn- anagram-of?":["[comparable"],"(defn- anagram?":["[word1"],"(defn- classify-response":["[remark]"],"(defn- drop_and_show":["[begin"],"(defn- next-count":["[n]"],"(defn- normalizations":["[word]"],"(defn- only-numbers":["...)"],"(defn- question?":["...","[utterance]"],"(defn- shouting?":["[content]","[input]"],"(defn- silent?":["[input]","[input]","[message]"],"(defn- split":["[string]"],"(defn- transcribe":["[char]","[char]"],"(defn- validate":["[char]"],"(defresponse :default":["\"Whatever.\")"],"(defresponse question?":["\"Sure.\")"],"(defresponse silence?":["\"Fine,"],"(defresponse yelling?":["\"Woah,"],"(diminishing readability)":["and"],"(dna-\u003erna %))`":["where"],"(dna-\u003erna X))":["dna_sequence)"],"(dna-\u003erna c))`.":["There"],"(dna-to-rna-lut \\A)":[";"],"(dna/count-one-nucleotide \\X":["\"GACT\"))))"],"(doall (sort":["word))))","word))))","word))))"],"(don't put":["everything"],"(done using":["the"],"(dotimes [_":["10000]","10000]"],"(dotimes [i":["10000]","10000]","10000]","10000]","10000]","10000]"],"(drop begin)":["(take"],"(drop-while (fn":["[[_"],"(drop-while ...":["(first`"],"(drop_and_show 0":["3)))","3"],"(drop_and_show 3":["3"],"(drop_and_show 6":["4"],"(e.g. DNA).":["Apply"],"(e.g. `#(=":["(last"],"(e.g. `?`)":["are"],"(e.g. as":["private"],"(easier to":["see"],"(either external":["or"],"(either in":["`let`","a"],"(empty? ))":["which"],"(empty? bits)`":["which"],"(empty? letters-in-prompt))`":["because"],"(empty? s)":["\"Fine,"],"(empty? sentence))`":["or"],"(er, functions,":["here,"],"(especially any":["non"],"(especially the":["big"],"(even if":["it","they","it's"],"(even same":["length),"],"(even under":["lexical"],"(every-pred upcase?":["includes-letters?))"],"(every? #{\\A":["\\C"],"(expresion that":["must"],"(expression that":["must"],"(external specification,":["docstring"],"(filter #(case-insensitive-anagram-of?":["word"],"(filter (partial":["anagram-of?"],"(filter ...":["responses)))`"],"(filter anagram?":["candidates)))"],"(filter false?)":["count)`...?"],"(filter matches":["patterns))`"],"(filter teenth?":["...`."],"(finding what":["functions"],"(first (filter":["...","matches"],"(first one":["versus"],"(first request))`":["makes"],"(first` is":["a"],"(fn [[]])":["idea"],"(fn [[_":["check-fn]]","regex]"],"(fn [acc":["word]"],"(fn [args]))`.":["In"],"(fn [argument]":["...`."],"(fn [assignment]":["...)))"],"(fn [lst]":["(vec"],"(fn [p]":["(body-of-anagrams?-follows))))"],"(fn [ret":["word]"],"(fn [text]":["(string/split"],"(fn …)":["in"],"(fn* 10":["[p1__4587#]"],"(for ;":["..."],"(for declaring":["functions"],"(for example":["surrounding"],"(format \"(%s)":["%s-%s\""],"(frequencies (tokenize":["phrase)))","phrase)))"],"(frequencies word1)":["(frequencies"],"(from Java)":["can"],"(from his":["Elixir"],"(gene, genome,":["etc...)."],"(get %1":["%2","%2"],"(get (.trim":["s)"],"(get *hash*":["*key*"],"(get db":["grade"],"(get students":["number)"],"(gigasquid), I":["was"],"(grade) instead":["of"],"(hey, we're":["supposed"],"(honest question,":["I'm"],"(hope that's":["enough"],"(how Bob":["would"],"(how a":["teenager"],"(however I":["tend"],"(http://clojure.org/cheatsheet) very":["useful."],"(http://clojuredocs.org/clojure_core/clojure.string/blank_q), ```clojure.string/blank```":["is"],"(i.e. (=":["((anagram-of?"],"(i.e. a":["vector"],"(i.e. homoiconicity":["of"],"(i.e. replace,":["in"],"(i.e. the":["content"],"(ie only-numbers?,":["question?,"],"(ie. `%1`":["`%2`)."],"(if \"abcd\"":[":yes",":true"],"(if (=":["0","\\T"],"(if 42":["=="],"(if the":["need"],"(if there's":["a"],"(if x":["=="],"(if-let [rchar":["({\\C"],"(in surrouding":["`(let"],"(in the":["extremely"],"(in this":["case"],"(in time,":["space,"],"(in which":["case"],"(inc (int":["\\Z)))`."],"(inc vs)":["-1)"],"(input key)]":["...`"],"(int \\A)":["(inc"],"(int \\Z)))`.":["That"],"(intended) nitpick":["--"],"(interleave keys":["(repeat"],"(interleave string1":["string2)"],"(is (thrown?":["AssertionError"],"(is that":["where"],"(it can":["be"],"(it extends":["the"],"(it helpfully":["returns"],"(it returns":["a"],"(it seems":["to"],"(it's a":["`char[]`)"],"(it's more":["portable"],"(join \"\"":["(map"],"(join)]` to":["have"],"(keify word)":["(keify"],"(keys day-map)":["range-name"],"(keys input)":["val"],"(keyword (str":["\":\""],"(last %1)":["\\?)`)"],"(last (seq":["x))","x))"],"(last ...```,":["I"],"(last content))`":["is"],"(last convo)":["\\?)```"],"(last input)":["\\?)))","\\?)","\\?)"],"(last input))`":["would"],"(last message)":["\\?)`","\\?))"],"(last message))`":["is"],"(last msg)":["\\?)"],"(last msg))":["or"],"(last phrase)":["\\?)"],"(last query)":["\\?)"],"(last s))`":["instead"],"(last sentence)":["\\?))"],"(last statement))```":["is"],"(last string))`":["over"],"(last utterance)":["\\?)```.","\\?)```"],"(last x)":["directly."],"(let [[lb":["sb]"],"(let [[word1":["word2]"],"(let [a":["1"],"(let [converted":["(map"],"(let [lower":["(lower-case"],"(let [lowerA":["(lower-case"],"(let [my-other-value":["1]))"],"(let [processed-word":["(process"],"(let [w-processed":["(process"],"(let [word-lc":["(s/lower-case"],"(let [{horizontal":[":x"],"(let's leave":["the"],"(letfn [(divisible?":["[divisor]"],"(letfn [(keify":["[a-word]"],"(like \"yelling\")":["into"],"(like Haskell,":["as"],"(like I":["did"],"(like hash-map)":["-"],"(like my":["example),"],"(like you":["might"],"(like your":["`build-finder`)"],"(lines 15,":["18,"],"(literal), of":["java.something-something.Character"],"(locally mutable":["copies"],"(logical tests)":["I"],"(looks more":["like"],"(lower-case (remove-non-word-chars":["s)))"],"(lower-case msg)":["msg)"],"(lower-case phrase)```":["and"],"(lower-case split":["replace)]`"],"(lower-case word))`":["-","twice."],"(lower-sorted word))":["candidates)))"],"(macroexpand '(defn":["foo"],"(macroexpand-1 '(-&gt;":["10","10"],"(make-a-name))}` works,":["it"],"(map #(if":["(="],"(map (validate":["(dna-\u003erna"],"(map ...`.":["And"],"(map =":["strand2)","gene1"],"(map base-word":["[comparable"],"(map char":["(range","[98"],"(map convert":[",,,)"],"(map normalized-word":["[comparable"],"(map s/lower-case":["[word1"],"(map str":[",,,)"],"(map yell?":["some-string-sequence))"],"(map {\\A":["\\A"],"(map …))`":["instead"],"(map …))`.":["Another"],"(maybe name":["it"],"(maybe private)":["vars"],"(maybe) at":["IO"],"(meaning that":["I've"],"(merge ret":["{word"],"(minor) point":["--"],"(modulo better":["naming):"],"(more clearly)":["shows"],"(more weasel":["words)"],"(mostly defined":["by"],"(my main":["gist"],"(naming aside,)":["more"],"(necessarily) trivial,":["so"],"(need to":["weed"],"(nesting levels":["can"],"(new to":["Clojure"],"(new-predicate? query))`":["to"],"(nil? input)":["(=","(="],"(nil? x))`":["is"],"(nil? x))```":["vs."],"(nil?...` which":["I"],"(nlogn vs":["n)","n)","n).","n)","n).","n).","n).","n)","n)","n).","n)."],"(no access":["to"],"(no conversion":["needed)","needed)"],"(non-public part":["is"],"(non-public?) helper":["functions."],"(not (=":["la","(string/lower-case","\"Woah,","\"Whatever.\"","message","8","2","32768","9223372036854775808N","4","1","18446744073709551615N","2147483648"],"(not (Character/isLetter":["%))"],"(not (check-fn":["remark)))"],"(not (divisible?":["100))))))"],"(not (empty?":["))"],"(not (silence?":["input))"],"(not (some":["nil?"],"(not (yell?":["query)))`"],"(not (yelling?":["input))"],"(not any-lcase-chars))`":["would"],"(not molecules,":["of"],"(not necessarily":["better)"],"(not such":["a"],"(not sure":["how)."],"(not-any? #(Character/isLowerCase":["%)","%)"],"(not-any? is":["actually"],"(not= (clojure.string/lower-case":["s)","s)"],"(not= (lower-case":["msg)"],"(not= lower":["lower')"],"(not= word":["candidate)))]"],"(not= word1":["word2)"],"(ns anagram":["(:require"],"(ns bob":["(:require","\"A"],"(ns) rather":["than"],"(ns) wasn't":["appropriate."],"(nth (reverse":["str)"],"(nucleotide-counts strand)":["molecule"],"(of course":["mindful"],"(on a":["very"],"(on-earth s)":["x)`."],"(once for":["digits"],"(once in":["the","strip-us-prefix"],"(one fewer":["expression)."],"(optional) arguments,":["so"],"(optional) map":["after"],"(or (#{\\C":["\\G"],"(or (divisible?":["400)"],"(or (nil?":["input)","input)"],"(or (ret":["word)"],"(or (some-\u003e":["input"],"(or ...)":["based"],"(or `letfn`,":["whatever"],"(or any":["lisp"],"(or at":["least","least"],"(or atoms)":["for"],"(or its'":["Clojure"],"(or just":["test)"],"(or perhaps":["the"],"(or rather":["second"],"(or some":["other"],"(or the":["other","inverse)."],"(otherwise I":["agreed"],"(partial add":["2))`"],"(partial anagram-of?":["(lower-sorted"],"(partial not=":["word)"],"(partial on-planet":["(planet-periods"],"(perfectly good,":["I'm"],"(perhaps there":["is"],"(pesky) requirement":["that"],"(plus it's":["not"],"(position-in-month\" etc.?":["I'm"],"(possibly enforced":["by"],"(primitive evaluates":["to"],"(private) functions":["that"],"(probably in":["order"],"(probably) related":["to"],"(process word))`":["where"],"(proper code":["layout"],"(providing the":["default"],"(question? more":["idiomatic"],"(question? s)":["\"Sure.\"","\"Sure.\""],"(question? sentence)":["\"Woah,"],"(question?) you":["could"],"(quite varied)":["structure"],"(rand-chars \\0":["\\9))`."],"(rand-chars \\A":["\\Z))`"],"(rand-letters 2)":["(rand-digits"],"(range from-zero":["to-nine)))"],"(range hi":["(dec"],"(range ve":["(+","(inc"],"(re an":["Elixir"],"(re-find #\"[a-zA-Z]\"":["statement)))`"],"(re-find #\"\\?$\"":["s))```"],"(re-matches #\"[ACGT]*\"":["strand))"],"(re-matches regex":["input))`"],"(re-seq #\"\\w+\"":["(str/lower-case","string))","phrase)"],"(read commented":["lines"],"(reduce (fn":["[acc"],"(reduce concat":[",,,)"],"(regarding readability),":["does"],"(rem year":["divisor)))]"],"(remember that":["range"],"(remove #(string/blank?":["%))"],"(repeat \\0))`":["is"],"(replace dna-string":["#\"T\""],"(replace msg":["#\"[:!&@$%^,]\""],"(replace necleotides":["thymidine"],"(require '[clojure.string":[":refer"],"(require [clojure.string":[":refer",":as",":as",":refer"],"(require) but":["the"],"(require), so":["that"],"(response-for \"1,":["2,"],"(response-for \"4?\")":["and"],"(ret word)":["0))}))"],"(reverse str)":["1)"],"(reverse xs))`":["is"],"(s/split #\"\\W+\"":["string))`,"],"(see [this":["blog"],"(see my":["first"],"(see the":["docs"],"(seemingly random)":["closing"],"(seq \"TAG\")":["\"T\""],"(seq bits)`":["can"],"(seq x)":["is"],"(seq x))":["\"?\")","returns"],"(shouting? greeting)":["\"Woah,"],"(shouting? s)":["\"Woah,","\"Woah,"],"(sic!) function":["notation"],"(sic!) would":["be"],"(signature %))`":["from"],"(silence is":["a"],"(silence, for":["example)."],"(silence? s)":["\"Fine."],"(silence? sentence)":["\"Fine."],"(since I":["use"],"(since it's":["undefined)"],"(since my":["eyes"],"(since they":["are"],"(single file":["solution"],"(so I":["can"],"(so called":["dynamic","\"rainbow"],"(so, defining":["`question?`"],"(some #(Character/isLetter":["%)"],"(some #(Character/isUpperCase":["%)","%)"],"(some #{\\A}":["#{\\C"],"(some #{char}":["#{\\C","#{\\C"],"(some deem":["the"],"(some nil?":["converted)))"],"(some pred":["coll))`"],"(some-\u003e input":["process-fn1"],"(something that":["I"],"(sort (lower-case":["a-word)))"],"(sort ...))`":["would"],"(sort word)":["so"],"(sort-by identity":["...))`,"],"(sort-of) currying":["with"],"(sorted) since":["the"],"(sorted-map) db-names-sorted)`.":["Not"],"(sorted-map) db-names-sorted:":["nice"],"(split ,,,":["#\""],"(split string1":["#\"\")"],"(split string2":["#\"\"))"],"(square brackets)":["too"],"(str \":\"":["\\T)))"],"(str (rand-letters":["2)"],"(str (verse":["verse-number)"],"(str nucleotides":["s)```"],"(str/lower-case phrase)":["#\"\\W+\")"],"(str/lower-case s))`":["is"],"(str/lower-case word))`":["for"],"(str/replace (seq":["\"TAG\")"],"(str/replace dna":["nucleotide-to-replace"],"(str/reverse (str/trim":["\""],"(str/split (str/lower-case":["phrase)"],"(str/split string":["#\"\\W\")))`"],"(str/trim \"":["foo"],"(str/upper-case (str/reverse":["(str/trim"],"(str/upper-case s)":["s)))"],"(string/lower-case input)":["input))))"],"(string/reverse s))`":["to"],"(string/split text":["#\"[^\\w]+\"))"],"(string/upper-case content)":["content))"],"(string/upper-case input)":["input)"],"(string/upper-case instead":["of"],"(string/upper-case statement)":["statement)"],"(sub)intentions of":["each"],"(subs digits":["0","1)"],"(subs sanitized-number":["0","1"],"(super nitpicky)":["consideration"],"(take 1000000":["(cycle"],"(take 10000000":["(cycle","(cycle","(cycle","(cycle"],"(take end)":["str/join))"],"(takes varying":["number"],"(test suite":["probably"],"(text in":["double"],"(that's a":["guess)."],"(that's not":["been"],"(that's why":["a"],"(the `not=`":["has"],"(the body":["of"],"(the form":["from"],"(the last":["one)"],"(the original":["word"],"(the same":["stands"],"(there's a":["hyphen"],"(these can":["be"],"(think surrounding":["lexical"],"(though I":["have"],"(though, of":["course,"],"(throw (AssertionError.":["\"Invalid","\"Invalid","\"Invalid"],"(throw (Exception.":["\"Unexpected"],"(thrown? AssertionError":["(dna/count-one-nucleotide"],"(time (def":["r","r","r","r","r","r","r","r","r","r","r","r"],"(time (dotimes":["[i","[i","[i","[i","[i","[i","[_","[_"],"(time (every?":["#{\\A"],"(time (re-matches":["#\"[ACGT]*\""],"(to me)":["seems"],"(to use":["a"],"(transcribe dna))`":["to"],"(transform1 input))).":["Then"],"(transform2 (transform1":["input)))."],"(transform3 (transform2":["(transform1"],"(two spaces":["are"],"(unless Clojure":["has"],"(update-in acc":["[word]"],"(update-in db":["[score]"],"(upper-case blank?)]`":["is"],"(upper-case msg)":["msg)"],"(upper-case phrase)":["phrase)`"],"(upper-case sentence))```":["a"],"(upper-case)]])``` since":["it"],"(use `set`,":["`keys`"],"(using `:require`":["I"],"(using `defn-`)":["and"],"(valid-nucleotide?)` was":["the"],"(validate (dna-\u003erna":["X))","c))`."],"(var *checks*)":["assoc"],"(vec (conj":["lst"],"(vec (filter":["(partial"],"(verse verse-number)":["\"\\n\")))"],"(via `anagram?`)":["for"],"(we still":["would"],"(weed out":["identical"],"(well, almost":["all)"],"(well, except":["when"],"(what constitutes":["a"],"(when function":["a"],"(when you":["may"],"(which -":["given"],"(which I":["renamed"],"(which I'd":["definitely"],"(which I'm":["not"],"(which currently":["isn't"],"(which does":["cover"],"(which fits":["on"],"(which includes":["an"],"(which is":["not","clearer","legal","what"],"(which is,":["conveniently,"],"(which obviously":["doesn't"],"(which takes":["a"],"(which would":["be"],"(with either":[":refer"],"(with no":["extra"],"(with non-descriptive":["names)"],"(with related":["triggering"],"(with the":["first","question"],"(with top-down,":["mock-heavy"],"(without having":["to"],"(woo, _Joy":["of"],"(words input))`":["is"],"(yell? query)))`":["is"],"(yet). I":["could"],"(you can":["tell","use"],"(you'll have":["to"],"(your first":["example),"],"(zero? (rem":["year"],"(zero? nil)":["throws"],"(zero? x)":["rather"],"(zerop?...` in":["some"],"(zipmap valid-dna-nucleotides":["(repeat"],"({:a 0,":[":b",":b"],"({:a 1":[":b",":b"],"({\\C \\C,":["\\G"],"({\\T \\U}":["x"],"({\\a 1":["\\b","\\b"],") ==&gt;":["(get"],") this":["exercise"],")) which":["IMHO"],"), could":["you"],")` with":["`[]"],"* A":["friend"],"* Also":["take"],"* Docstrings":["are"],"* I":["think","believe"],"* I'd":["import"],"* If":["I"],"* Is":["there"],"* It":["is","is"],"* It's":["generally","probably"],"* L9:":["Do"],"* Lastly,":["why"],"* Might":["be"],"* Not":["so"],"* Predicate":["names"],"* Thanks.":["I"],"* What":["about"],"* Why":["have"],"* You":["are","could","might"],"* You've":["used"],"* `:use`":["is"],"* `defn-`":["makes"],"* character":["literals"],"* is-xxx?":["I"],"* log":["n))","n))","n))","n)`,"],"* log(n))":["but"],"* super":["easy"],"* the":["3","regexps"],"* there":["is"],"*\"a question":["ends"],"*\"contains upper-case":["characters"],"*\"does not":["contain"],"*\"unfinished\"* if":["you"],"**#\"...\"** macro":["for"],"**:post**, the":["former"],"**:pre** and":["**:post**,"],"**AND** replacing":["all"],"**But** since":["this"],"**C** with":["a"],"**Refactor Conditionals":["to"],"**[Edit] I":["failed"],"**\\T \\U**":["pair,"],"**is** mapping":["a"],"**since 1.1**":["subheader)."],"**to-rna**. While":["having"],"*ALL CAPS*.":["Some"],"*Do this":["sequence"],"*Lisp*. The":["function"],"*While you":["are"],"*admin validation":["workflow*"],"*anagram* (boolean,":["thats"],"*assigned* word":["out"],"*below* \u003ccode\u003eto-rna\u003c/code\u003e":["since"],"*checks*) assoc":["'~name"],"*content* that":["is"],"*content*, just":["not"],"*could* change":["`silence?`,"],"*dna-to-rna* {\\A":["\\A"],"*does this":["message"],"*endsWith \"?\"'*":["in"],"*feels* better":["to"],"*hash* *key*":[")",")"],"*how* the":["value"],"*how* you":["are"],"*inside* the":["`response-for`"],"*intent* of":["the"],"*interesting* customer":["if"],"*is it":["the"],"*is* called":["nitpicking,"],"*is*? I":["personally"],"*keep* in":["the"],"*key* )":["==&gt;"],"*last* character":["of"],"*love* the":["```replace-thyamine-with-uracil```"],"*nitpick* but":["I'm"],"*no* lower":["case"],"*official* best":["practice,"],"*one* function":["call"],"*only* when":["the"],"*pluralize*?), because":["it"],"*quietly gilds":["lily*"],"*real world":["code*"],"*real* upper":["case"],"*rules* per":["se,"],"*shouting* with":["\"Woah,"],"*some* of":["the"],"*step*. Using":["that"],"*to the":["point*?"],"*too* ugly.":["Certainly"],"*types* of":["inputs"],"*what* it":["is"],"*what* you":["are"],"*what*, but":["not"],"*why* from":["the"],"*why* it":["was"],"*why* of":["the"],"*why* you":["are"],"*why* you're":["interested"],"*why*. You":["can"],"*without* the":["use"],"*without* using":["string"],"*word* and":["a"],"*words*. And":["I"],"+ clojure":["docs."],"+ conditions":["become","become"],"+\")` into":["private"],"+1 for":["`taciturn?`."],"+1 to":["@gretchen's","@bryana","dyba"],", \u003ccode\u003eshouting?":["\u003c/code\u003e,"],", I":["don't","try","will","have"],", Is":["not"],", because":["it"],", but":["you"],", it":["will","does"],", maybe":["it"],", one":["point"],", only":["a"],", sorry":["."],", thanks":["@gregg."],", the":["only"],", you":["could"],",,, #\"":["+\")"],",,,)` already":["combines"],",,,)` since":["`(apply"],"- \"I'm":["Batman.\""],"- \"WHERE":["IS"],"- \"replace":["thymidine"],"- **:pre**":["and"],"- :use":["replaced"],"- Convert":["is"],"- Could":["you"],"- Counter":["being"],"- Extract":["functions"],"- I":["was","do","think","thought","am","know","forgot","like","feel","keep","have","didn't","wanted","actually","feel","consider","did","wasn't","agree","didn't","was","didn't","think","think","don't","think"],"- I'd":["be"],"- I'll":["let","try"],"- I'm":["pretty","finding","personally","enjoying","now","currently"],"- I've":["personally","overdone"],"- IMO":["the"],"- If":["you"],"- Instead":["of"],"- Is":["there"],"- Prefer":["`defn`"],"- Removed":["redudant"],"- Removing":["this"],"- Require":["the"],"- Since":["you","you"],"- Thanks":["for"],"- That":["said,"],"- The":["argument","message","message"],"- There":["is"],"- There's":["a"],"- This":["is","test"],"- To":["get","chain"],"- Try":["`:require`"],"- What":["about"],"- When":["the","I"],"- Why":["are"],"- Would":["it","it"],"- Yah,":["I'm"],"- You":["might","have"],"- `(-\u003e":["input"],"- `(AssertError.":["\"AssertionError\")`"],"- `:require`.":["From"],"- `=`":["should"],"- `Character/isDigit`":["-"],"- `atom`":["would"],"- `declare`":["can"],"- `defn`/`fn`":["has"],"- `pronoun`":["is"],"- `range`":["has"],"- `reset!`":["returns"],"- `sort-word`":["is"],"- `str`":["is"],"- a":["pretty","set","simple","factory","simple","regex","string"],"- about":["its"],"- accepts":["the"],"- all":["closing"],"- although":["Clojure","plain"],"- and":["probably","one","it's","what's"],"- anyone":["know"],"- anyway,":["it"],"- are":["the"],"- as":["for","@elian","was"],"- at":["least","least","least","least","least"],"- being":["permissive"],"- bind":["just"],"- both":["about"],"- but":["it","the","then","it","that","that","in","I","not","I","this","doesn't","all","are"],"- clj-time).":["The"],"- closing":["brackets"],"- consider":["reducing"],"- could":["you"],"- deep":["nesting"],"- dna-to-rna-lut":["can"],"- does":["not"],"- don't":["leave","know"],"- either":["way,","the"],"- ending":["with"],"- even":["for"],"- for":["example,","me"],"- forgot":["about"],"- found":["it"],"- frequencies":["and"],"- generally":["two"],"- generates":["its'"],"- give":["it","the"],"- given":["the"],"- helped":["me"],"- hence":["the"],"- how":["would"],"- however":["as","that's","it","this"],"- i":["am","don't","meant","would"],"- if":["-"],"- if.":["Quite"],"- inside":["out"],"- intiated":["with"],"- into":["a"],"- is":["that"],"- it":["would","reads","really","would","should","will","doesn't","will","will","maps","just","isn't","can","stops"],"- it's":["not","less","hard","already"],"- just":["give","a","realised"],"- keyword":["does,"],"- lets":["see"],"- like":["`(ns","in","in","`zero?`,","`question?`,","this:"],"- lists":["and"],"- look":["for"],"- looking":["at"],"- lowercase,":["hyphen"],"- made":["some"],"- make":["use"],"- makes":["the"],"- map":["datatype"],"- maybe":["something","it","I'm","instead","`candidates`","`some`","a"],"- moving":["the"],"- much":["easier"],"- name":["it"],"- necessity":["to"],"- no":["need","need"],"- not":["to"],"- now":["looking"],"- nowhere":["have"],"- of":["course","course"],"- one":["for","with","level"],"- opening":["square","brace"],"- or":["maybe"],"- passing":["all"],"- perhaps":["returning"],"- please":["keep","add","don't"],"- probably":["became"],"- putting":["the"],"- remember":["that"],"- say":["you"],"- second":["iteration"],"- see":["clojure.string."],"- separating":["words"],"- seq-to-rna":["which"],"- set":["for"],"- snug":["them"],"- so":["`normalize`","if","just","you","that"],"- some":["helper"],"- still,":["it"],"- string":["can","extends"],"- strings":["are","are","are"],"- such":["discussions"],"- thanks":["for","for","for"],"- that":["meaning","can","way","makes","way","ought","is,"],"- that's":["unnecessary","a","rather"],"- the":["only","`word`","line","two","only","set"],"- there's":["nothing","`not=`","also"],"- think":["about","about"],"- this":["is","and","allows"],"- those":["are"],"- to-rna":["which"],"- transcribe":["which"],"- tuck":["them"],"- use":["`require`","`require`"],"- using":["the"],"- valid-nucleotides":["indeed"],"- well,":["maybe"],"- what":["I","would","do","it","is"],"- when":["it","swapped"],"- where":["a"],"- which":["is","leads","means"],"- while":["doing","that's"],"- will":["be"],"- without":["any"],"- would":["they","love"],"- wrongly":["so."],"- you":["have","are","can","would","can","can","could","are","have","don't","work","get","map","don't"],"-&gt; `silence?`,":["you"],"-&gt; char":["and"],"-&gt; macro":["in"],"-&gt; to":["bust"],"-&gt;&gt; for":["the"],"-&gt;&gt; in":["```word-count```"],"-&gt;&gt; is":["new"],"-&gt;&gt; you":["could"],"-&gt;&gt;. I":["didn't"],"-- \"response\"":["and"],"-- I":["was","definitely","think","did","think","might","think","might","like","think"],"-- I've":["updated"],"-- Language":["barrier!"],"-- Thanks":["for"],"-- `split`":["isn't"],"-- `yelling?`":["and"],"-- if":["you're"],"-- it":["will","doesn't","will","might","can"],"-- it'd":["make"],"-- it's":["better","a"],"-- just":["be"],"-- love":["the"],"-- really":["can't"],"-- that":["is","feels"],"-- that's":["a"],"-- there":["are"],"-- this":["is"],"-- those":["particular"],"-- too":["picky?"],"-- usually":["the"],"-- very":["nifty!","clever!"],"-- what":["would","happens","do","would","would"],"-- worth":["it"],"-- would":["it"],"-1 bottles":["--"],"-1 case":["in"],"-1)` to":["count"],"-6)` is":["a"],"-\u003e but":["couldn't"],"-\u003e rather":["than"],"-\u003e sanitize-number`":["(by"],"-\u003e strip-us-prefix":["-\u003e"],"-\u003e to":["many"],"-\u003e\u003e instead":["of"],"-\u003e\u003e macro":["in."],". Anyway":["`response-for`"],". He's":["also"],". I":["used","wouldn't"],". Is":["just"],". Predicates":["return"],".. might":["be"],".. much":["better!"],"..)` for":["example)."],"..)` in":["its"],"... (first`":["is"],"... )":["0`."],"... )`":["with"],"... I":["hate"],"... The":["lazy"],"... Yes,":["agreed."],"... and":["the"],"... do":["stuff"],"... erm":["..."],"... example.":["Anyway,"],"... it's":["somewhat"],"... just":["experimenting"],"... maybe":["we"],"... no.":["Sorry."],"... or":["if"],"... pretty.":[":)"],"... probably":["not"],"... responses)))`":["to"],"... someone":["changed"],"... spelling":["failure"],"... the":["last","`(apply"],"... this":["is"],"... we":["have"],"... why":["can't"],"... with":["itself."],"... your":["check"],"...) based":["on"],"...))` (proper":["code"],"...))` would":["suffice."],"...))`, a":["simple"],"...)` !":["Awesome"],"...)` -":["that's"],"...)` but":["that's"],"...)` in":["`clean-number`,"],"...)` instead":["of"],"...)` is":["enough"],"...)` it":["wouldn't"],"...)` on":["a"],"...)` or":["`(str/split","`(clojure.string/join"],"...)` should":["be"],"...)` term":["in"],"...)` without":["surrounding"],"...)`. I":["guess"],"...)`. In":["practice"],"...)`. Other":["than"],"...)``` on":["the"],"...)}`. While":["it"],"...\u003c/code\u003e trick":["before."],"...` bit":["--"],"...` instead":["of"],"...` part":["is"],"...` to":["a"],"...`. And":["that's"],"...`. But":["that's"],"...```, I":["believe"],"...but I":["didn't"],"...or using":["`:require`,"],"...perhaps \u003cstrong\u003emessage\u003c/strong\u003e":["will"],"...there are":["few"],"...which you":["basically"],"...}]`. Note":["that"],"...}` could":["make"],".clj files":["downloaded"],".endsWith gets":["the"],".endsWith. A":["useful"],".get functions":["on"],".get stuff":["from"],".isEmpty, and":["the"],".set stuff.":["doto"],".toLowerCase (it's":["more"],".toUpperCase java":["method,"],".toUpperCase? I":["can"],"/ `assoc`":["/"],"/ `inc`":["work"],"/ `merge-with`":["call."],"/ hash":["literal"],"/ highest":["abstraction"],"/ namespace":["clash"],"/ non-public":["last"],"/ specification":["requested."],"/ validate":["nucleotides"],"/me goes":["googling"],"/non-whitespace/ character":["being"],"0 (compare":["msg"],"0 1)":["\"1\"))"],"0 1)))":["(subs"],"0 3":["(convert_number"],"0 [_]":["99)"],"0 failures,":["0"],"0 n)":["\"bottle\""],"0 something)`":["would"],"0 then":["take"],"0 x)`.":["If"],"0)) construction":["seems","seems"],"0). And":["\"divisible\""],"0)` is":["more","more","often"],"0)` line:":["am"],"0)`, so":["I'll"],"0, :b":["1}","1}"],"0, but":["I"],"0, too)":["Also"],"0...` in":["other"],"0` and":["`not="],"0})`? It":["just"],"1 (get":["%1","%1"],"1 (grains/square":["1))"],"1 (or":["(ret"],"1 11)```":["with"],"1 11)```.":["If"],"1 :b":["2})`","2}","2}","2}"],"1 \\b":["2}","2}"],"1 and":["this"],"1 b":["1]"],"1 is":["my"],"1 million":["cycles"],"1 or":["0."],"1 to":["`range`.("],"1) Good":["point,"],"1) Indentation":["can"],"1) While":["you"],"1) Yep,":["```defn-```"],"1) it":["was"],"1))) (subs":["sanitized-number"],"1)` instead":["of"],"1)` is":["more","more","often"],"1)` might":["be"],"1, 2,":["x"],"1, there":["is"],"1-4 ...":["Yes,"],"1-4 in":["previous"],"1-4 to":["just"],"1-to-1 mapping":["from"],"1. A":["keyword"],"1. Agree,":["I"],"1. CamelCased":["names"],"1. Casting":["string"],"1. Does":["your"],"1. Even":["though","a"],"1. Extracted":["`alphagram`"],"1. Finds":["words"],"1. I":["can't","would","switched","think","can't"],"1. I'm":["not"],"1. Line":["6"],"1. That's":["rather"],"1. The":["preferred","namespace","trailing"],"1. There":["are"],"1. Think":["about"],"1. What":["is"],"1. You":["could"],"1. Your":["`on`"],"1. `a`":["is"],"1. `use`":["is"],"1. `verse-template`":["probably"],"1. is":["`(vec"],"1. seq:":["My"],"1. use":["```:require```"],"1. you":["could","write"],"1.3 so":["maybe"],"1.4, consider":["using"],"1/2 are":["obvious"],"10 #(inc":["%)))"],"10 &":["19."],"10 (repeat":["\\0))`"],"10 [p1__4587#]":["(inc"],"10 \\0)`":["which"],"10 as":["well."],"10 million":["```replace```"],"10. In":["fact,"],"100 if":["it's"],"100 iterations":["..."],"100% clear.":["I"],"100% sure":["what"],"100)` couldn't":["it?"],"1000 times":["to"],"1000000 (cycle":["\"ACGT\"))))"],"10000000 (cycle":["\"ACTG\"))))","\"ACTG\"))))","\"ACTG\")))","\"ACTG\")))"],"10000] (#{\\C":["\\G"],"10000] (doall":["(sort","(sort","(sort"],"10000] (frequencies":["word)))","word)))","word)))"],"10000] (some":["#{\\A}"],"11 &":["13"],"11 -":["using","You"],"11)``` with":["```(subs"],"11)```. If":["you"],"11. Not":["a"],"12 -":["strings"],"12 tests":["containing"],"12 wasn't":["obviously"],"12-14 at":["the"],"13 -":["I"],"13 are":["operating"],"13 into":["a"],"14 -":["there's"],"14 should":["be"],"14 tests":["containing"],"14, the":["comparison"],"14, you":["can"],"15 -":["The"],"15 has":["a"],"15, 18,":["20)."],"15: (def":["silence?"],"17 to":["line","line"],"18, 20).":["Is"],"19 -":["strings"],"19 is":["very"],"19. Lisp":["style"],"19. Otherwise,":["you"],"1986 Scheme":["and"],"1] #{a":["b})"],"1] [\"artichoke\"":["1]"],"1] [\"boat\"":["2]"],"1` without":["a"],"1`. You":["can"],"1st solution.":["I"],"1} :a":["123)"],"1} :c":["123)"],"2 (grains/square":["2))"],"2 (rand-chars":["\\A"],"2 -":["Removing","I","you","Since","Since"],"2 ...":["just"],"2 3)":["equal."],"2 3))`,":["however"],"2 3]":["'(1","#{1","and"],"2 3}":["2)","4)"],"2 3})`,":["where"],"2 I":["decided"],"2 and":["3"],"2 arguments,":["but"],"2 collections":["it"],"2 conditions":["so","is"],"2 conditions,":["you"],"2 conditions.":["It"],"2 different":["names"],"2 failures,":["0"],"2 filters":["will"],"2 is":["after"],"2 lines,":["but"],"2 macros.":["One"],"2 map":["functions"],"2 minutes":["to","to"],"2 points":["could"],"2 separate":["ides:","expressions"],"2 should":["be"],"2 spaces":["-","(not","is","is","on"],"2 things":["-"],"2) (rand-digits":["3))"],"2) =&gt;":["2`"],"2) Can":["you"],"2) I":["agree,"],"2) Using":["```(\\w+)```"],"2) What":["about"],"2) strip-us-prefix,":["at"],"2))` #":["created"],"2)` or":["`2N`"],"2)` with":["`:else`"],"2, 3\").":["Scala,"],"2, x":["cases,"],"2-D vector":["(i.e."],"2-space indents":["instead"],"2. \"normalize\"":["is"],"2. 'suffix'":["isn't"],"2. A":["bit"],"2. Consider":["refactoring"],"2. Creating":["an"],"2. Do":["you"],"2. Either":["it"],"2. Every":["time"],"2. Give":["names"],"2. I":["would","tried"],"2. I'm":["not"],"2. Moved":["equality"],"2. No":["need"],"2. Non-public":["functions,"],"2. One":["of"],"2. Oops,":["I"],"2. Re:":["alphagrams,"],"2. Regarding":["line","the"],"2. Small":["coding"],"2. Style:":["your"],"2. That's":["a"],"2. There":["are"],"2. There's":["more"],"2. Uses":["frequencies"],"2. You":["definition"],"2. `use`":["is"],"2. lots":["of"],"2. you":["could","are","can"],"20 -":["Instead"],"20). Is":["there"],"2147483648 (grains/square":["32))"],"24. In":["addition,"],"2: into":["(sorted-map)"],"2] [\"ballerina\"":["2])"],"2` and":["`interleave`"],"2` could":["be"],"2` function":["using"],"2` or":["`(#{1"],"2} :a":["3)"],"2} :a)":["=&gt;"],"2} :c":["3)"],"2} \\b":["[])"],"2} \\x":["[])"],"2})` to":["directly"],"3 (convert_number":["phone_number))","phone_number))"],"3 (rand-chars":["\\0"],"3 -":["are","Convert"],"3 3":["(convert_number"],"3 4":["5"],"3 \\0":["\\9)`"],"3 before,":["but"],"3 characters\"":["and"],"3 characters\".":["Same"],"3 conditions":["are"],"3 days":["ago,"],"3 is":["the"],"3 that":["are"],"3 then":["take"],"3\"). Scala,":["you"],"3) ```words-in-phrase```":["doesn't"],"3) equal.":["That"],"3))`, however":["`(not="],"3, 5,":["and"],"3. Also,":["I"],"3. I":["generally","named"],"3. In":["fact,"],"3. Inside":["of"],"3. It's":["best"],"3. Naming":["variable/docs"],"3. Please":["stay"],"3. To":["keep"],"3. Your":["`response-for`"],"3. the":["`loop`..`recur`"],"3. you":["could"],"3/4. -&gt;&gt;":["is"],"30 days.":["Oh"],"31557600 and":["earth-ratio"],"32768 (grains/square":["16))"],"39, if":["you"],"3] #{1":["2"],"3] '(1":["2"],"3] and":["'(1"],"3rd argument":["to","which","which"],"3rd optional":["parameter"],"3} 2)":["=&gt;"],"3} 4)":["=&gt;"],"3})`, where":["`#{...}`"],"4 (convert_number":["phone_number))))"],"4 (grains/square":["3))"],"4 5":["triangle"],"4 and":["then"],"4 better.":["Maybe"],"4 characters\".":["But"],"4 digits":["of"],"4 expressions":["of"],"4 is":["how","certainly"],"4 lines":["of"],"4 spaces,":["will"],"4 tests":["at"],"4) =&gt;":["nil`."],"4, the":["tests"],"4- You":["could"],"4. 2":["spaces"],"4. Generally,":["indent"],"4. Having":["said"],"4. I":["think","was"],"4. Indentation":["inside"],"4. No":["need"],"40 million":["character"],"40 nearly-identical":["functions,"],"42 ==":["x)."],"42 x),":["or"],"42) be":["better"],"42), and":["can"],"45 and":["53."],"45 letters":["long.","by"],"4clojure I":["would"],"4th submission":["(I"],"4th unit":["test"],"5 &":["line"],"5 -":["The","If","You"],"5 ...":["The"],"5 :y":["7})"],"5 arguments":["(with"],"5 triangle":["that"],"5, and":["7"],"5. You":["could"],"5. `use`":["is"],"53. The":["`ns-resolve`"],"6 -":["This","you"],"6 4":["(convert_number"],"6 and":["8"],"6 can":["be"],"6 iterations.":["Someone"],"6 then":["take"],"6. Lazy":["initialization"],"6. There":["are"],"65 91)`":["you","might"],"65 instead":["of"],"6: consider":["using"],"7 -":["`(AssertError.","The"],"7 and":["8"],"7 are":["known"],"7 as":["a"],"7 days":["of"],"7, which":["allows"],"700 and":["799."],"700))` could":["be"],"799. Is":["that"],"7: consider":["using"],"8 (grains/square":["4))"],"8 -":["deep"],"8 into":["a","one"],"8 should":["be"],"8 time":["APIs"],"80 characters":["limit."],"800 700))`":["could"],"8: I":["think"],"8: consider":["using"],"9 -":["Could"],"9 a":["bit."],"9 to":["`sentence`"],"9! It":["looks"],"9. You":["might"],"90 degree":["angle."],"91)` might":["be"],"91)` you":["can"],"9223372036854775808N (grains/square":["64))"],"99) \"":["on"],"9: (def":["shouting?"],": the":["use"],":( Probably":["because"],":) )":["this"],":) .":["I"],":) A":["couple"],":) At":["first"],":) But":["this"],":) Does":["that"],":) Excellent":["use"],":) For":["an","future"],":) I":["lifted","wouldn't","think","am"],":) I'll":["have"],":) It":["was"],":) It's":["not"],":) Maybe":["it's"],":) Move":["on."],":) My":["Python","only"],":) Some":["previous"],":) Thank":["you!"],":) Thanks":["for","for"],":) That":["does"],":) The":["body","function"],":) This":["way","looks"],":) What":["you"],":) Will":["push"],":) Yeah...":["I"],":) `hamming-distance`":["being"],":) consider":["approach"],":) either":["way,"],":) thanks":["for"],":) that":["behavior"],":) yep":["it"],":)) will":["fix"],":). I":["have"],":-) I'd":["say"],":-) Thanks":["for"],":/ I":["feel"],":: restricts":["the"],":A :A":[":C"],":A :A})":["→"],":A :C":[":C",":A)"],":A :U":[":U"],":A}) →":[":U`"],":C :C":[":G"],":C :G":[":G}",":G"],":D About":["the"],":D I":["was"],":D Naming":["could"],":G :G":[":T"],":G :T":[":U"],":T :U":[":A"],":T. (keyword":["(str"],":U :A":[":A",":C",":A})"],":U :U":[":A"],":\\ Should":["this"],":a) =&gt;":["1`."],":all instead":["http://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require"],":all over":[":use\""],":all would":["probably"],":all]` form":["if"],":all]` is":["equivalent"],":all]`). It's":["better"],":all`. I":["usually"],":as option?":["clojure.string"],":as str":[":only"],":as str])`":["or"],":as str]`":["form."],":as) in":["the"],":as` feature.":["This"],":b 1}":[":a",":c"],":b 2}":[":a)",":a",":c"],":b 2})`":["to"],":default [n]":["(-"],":default dispatch":["value"],":else \"Whatever.\"`":["can"],":else (throw":["(AssertionError."],":else and":["resubmit."],":else clause":["in"],":exchange XXX":["...}`"],":exclude [...])`":["in"],":fred if":[":fred"],":fred is":["in"],":only [blank?":["upper-case]])`"],":only [lower-case":["split]]))`"],":only [split":["lower-case]]))"],":only [upper-case":["lower-case"],":only in":["your"],":only, and":[":require"],":only` when":["I"],":only``` on":["that"],":p Good":["to"],":post (expression":["that"],":post conditions":["in"],":post` thanks":["to"],":pre and":[":post"],":pre assertion":["is"],":pre condition":["in"],":refer (blank?":["upper-case)])`","lower-case"],":refer (join)]`":["to"],":refer (lower-case":["split"],":refer (upper-case":["blank?)])`.","trim)]))","blank?)]`"],":refer (upper-case)]])```":["since"],":refer :all":["instead","would","over"],":refer :all]`":["form","is"],":refer :all]`).":["It's"],":refer [blank?":["upper-case]","upper-case]])"],":refer [function]])":["pattern"],":refer [join":["lower-case]]))"],":refer [split]]```":["might"],":refer [upper-case":["trim]]))","lower-case"],":refer in":["your"],":refer or":[":as)"],":refer specific":["functions"],":refer-clojure clause":["in"],":rename {blank?":["silence?}]))"],":rename {list":["core-list}]"],":require (with":["either"],":require :refer":[":all"],":require and":["other","changed"],":require inside":["the"],":require is":["preferred"],":require should":["be"],":require will":["make"],":require with":[":refer"],":require. The":["blind"],":require/:all to":[":use/:only"],":require/:refer in":["ns"],":require/:refer instead":["of"],":require/:refer is":["preferred"],":response \"...\"}":["{:matcher"],":use and":["googling","considered","it's"],":use by":["many"],":use clojure.string,":["which"],":use in":["the","the"],":use is":["being"],":use option":["of"],":use replaced":["with"],":use to":[":require"],":use will":["load"],":use. It":["can"],":use/:only as":["suggested"],":use/:only? I":["don't"],":user/:only. See":["these"],":x vertical":[":y}"],"; (:G":[":A"],"; ...":["do"],"; =\u003e":["\"A\""],"; =›":["false"],"; And":["then","then"],"; actual":["function"],"; condition":["map"],"; hello":["world"],";) ),":["could"],";) Binding":["names"],";) Didn't":["know"],";) Good":["point."],";) I'll":["look"],";). I":["think"],";-)) and":["tried"],";; If":["key","key"],";; some":["more"],";;=&gt; \"(\\\\U":["\\\\A"],"\u003ccode\u003e#\u003c/code\u003e shorthand":["for"],"\u003ccode\u003e#pattern\u003c/code\u003e macro":["after"],"\u003ccode\u003e(declare ...\u003c/code\u003e":["trick"],"\u003ccode\u003e-&gt;&gt;\u003c/code\u003e in":["any"],"\u003ccode\u003e:require\u003c/code\u003e in":["the"],"\u003ccode\u003e:use\u003c/code\u003e or":["\u003ccode\u003e:require\u003c/code\u003e"],"\u003ccode\u003e?\u003c/code\u003e in":["the"],"\u003ccode\u003ebob/response-for\u003c/code\u003e? I":["thought"],"\u003ccode\u003econd\u003c/code\u003e in":["the"],"\u003ccode\u003econdp\u003c/code\u003e by":["just"],"\u003ccode\u003edef\u003c/code\u003e and":["\u003ccode\u003edefn\u003c/code\u003e"],"\u003ccode\u003edefn-\u003c/code\u003e basically":["makes"],"\u003ccode\u003edefn-\u003c/code\u003e from":["reading"],"\u003ccode\u003edefn\u003c/code\u003e inside":["functions"],"\u003ccode\u003eempty?\u003c/code\u003e like":["a"],"\u003ccode\u003eendsWith\u003c/code\u003e describes":["the"],"\u003ccode\u003efrequencies\u003c/code\u003e ,":["it"],"\u003ccode\u003eis-\u003c/code\u003e beacuse":["is"],"\u003ccode\u003eletfn\u003c/code\u003e functions":[","],"\u003ccode\u003enothing?\u003c/code\u003e doesn't":["seem"],"\u003ccode\u003equestion?\u003c/code\u003e, but":["the"],"\u003ccode\u003erequest-type\u003c/code\u003e and":["\u003ccode\u003eresponse\u003c/code\u003e?"],"\u003ccode\u003eresponse-for\u003c/code\u003e and":["it"],"\u003ccode\u003eresponse-for\u003c/code\u003e method":["instead"],"\u003ccode\u003es\u003c/code\u003e doesn´t":["say"],"\u003ccode\u003es\u003c/code\u003e of":["the"],"\u003ccode\u003eshouting? \u003c/code\u003e,":["etc"],"\u003ccode\u003eshouting?\u003c/code\u003e but":["it"],"\u003ccode\u003esilence?\u003c/code\u003e ,":["\u003ccode\u003eshouting?"],"\u003ccode\u003estr\u003c/code\u003e or":["\u003ccode\u003es\u003c/code\u003e?"],"\u003ccode\u003eto-rna\u003c/code\u003e since":["that"],"\u003ccode\u003etokenize\u003c/code\u003e and":["it"],"\u003ccode\u003everify-dna\u003c/code\u003e *below*":["\u003ccode\u003eto-rna\u003c/code\u003e"],"\u003ccode\u003eyell?\u003c/code\u003e and":["\u003ccode\u003equestion?\u003c/code\u003e,"],"\u003cstrong\u003emessage\u003c/strong\u003e will":["be"],"= (map":["normalized-word"],"= a":["mutation?","b)`"],"= and":["not=,"],"= gene1":["gene2))`"],"= strand2)":["(filter"],"= var`.":["You"],"= won":["out"],"=&gt; 1`.":["You"],"=&gt; 2`":["or"],"=&gt; nil`.":["Consider"],"=)`. However,":["seeing"],"== 42),":["and"],"== B":["if"],"== hash(A)":["but"],"== hash(B).":["Additionally"],"== value.uppercase":["could"],"== var`,":["for"],"== x).":["So"],"==&gt; (get":["*hash*"],"=\u003e reads":["better?"],"\u003e \"Invalid":["DNA:"],"\u003e Fairly":["new"],"\u003e Given":["a"],"\u003e It":["looks"],"\u003e Line":["2"],"\u003e Non-java":["way"],"\u003e One":["common"],"\u003e So":["is"],"\u003e Transforming":["to"],"\u003e a":["better"],"\u003e including":["the"],"\u003e just":["compare"],"\u003e put":["the"],"\u003e require":[":as"],"\u003e11 digits,":["which"],"\u003eThere's a":["redundant"],"? Am":["I"],"? Coming":["mostly"],"? and":["value"],"? as":["suggested"],"? but":["I"],"? in":["clojure.","place."],"? more":["idiomatic"],"?. I":["am"],"@adrain. I've":["updated"],"@adrain: Can":["you"],"@afton says,":["using"],"@agnes's personal":["style"],"@agustin Cleaned":["it"],"@alda for":["the"],"@alejandra: Thanks":["for"],"@alford OK...":["I"],"@amani. Fixed":["commas"],"@amelie, enjoy":["the"],"@amely -":["I"],"@amina, sorry":["for"],"@aniyah just":["got"],"@aniyah says":["that"],"@anjali thanks!":["however,"],"@antoinette. I'll":["think"],"@antone I":["meant"],"@aric! My":["next"],"@armani on":["the"],"@armani's last":["suggestion."],"@art I":["know"],"@ayana's (intended)":["nitpick"],"@bart That's":["a"],"@belle. This":["is"],"@billie oops,":["i've"],"@brielle If":["I"],"@bruce why":["is"],"@bryana for":["the"],"@camille Thanks":["again"],"@caterina @caterina":["I"],"@caterina I":["will"],"@caterina You":["could"],"@celestine -":["Yah,"],"@chase in":["previous"],"@cheyanne. Can":["I"],"@clara just":["submitted"],"@clarabelle, could":["you"],"@claudine, excellent":["explanation,"],"@clay -":["Thanks"],"@cole I":["did"],"@corene! It":["just"],"@corine. At":["the"],"@coy Nah,":["I'm"],"@cristina, I":["didn't","figured"],"@daryl Hmmm...":["I"],"@delpha, I":["like"],"@deshaun -":["I"],"@destiny: I'm":["getting"],"@devon Helper":["function"],"@dexter! I":["haven't"],"@donald destructuring":["is"],"@donato Aha!":["I"],"@drake's suggestion":["on"],"@dylan Then":["it"],"@ed I":["had"],"@eda what":["is"],"@eden I":["came"],"@edmund D'oh.":["Should've"],"@edwin That":["doesn't"],"@eleonore it":["passes"],"@elian pointed":["out"],"@elwin, thanks":["for"],"@emerald the":["additional"],"@emilio i":["definitely"],"@emmalee, can":["you"],"@emmalee, that":["is"],"@emmie. Introduced":["`cond`"],"@ernestine in":["that"],"@eula Thanks!":["I"],"@eulah I":["managed"],"@evie. I've":["changed"],"@floy great":["point."],"@frank I":["agree"],"@frankie in":["here?"],"@gerald! I've":["submitted"],"@golden There":["are"],"@granville again":["with"],"@gretchen's suggestion.":["This"],"@gunnar's watch":[";)"],"@harley alright,":["thanks!"],"@haskell ,":["I"],"@haylee Thanks":["for"],"@haylee and":["it"],"@hermann great":["point."],"@hilda -":["I","a"],"@holden Those":["are"],"@holly -":["you"],"@ike, Thanks,":["I"],"@isaac good":["catch!"],"@isabel Yeah,":["good"],"@jackie thanks":["for"],"@jacynthe thank":["you!"],"@jaime Ah,":["nice"],"@janae I":["already"],"@jayden this":["is"],"@jeremy I've":["seen"],"@joany, You're":["correct"],"@jonas I'm":["sorry,"],"@jude-choi Didn't":["know"],"@julio Thanks,":["good"],"@kamille Simply":["because"],"@kariane: I":["ran.","was"],"@karli re:":["lowercasing"],"@kathryne Awesome":["suggestions."],"@kathryne Mind":["looking"],"@kathryne Why?":["If"],"@katrina I":["did"],"@kayley that's":["good"],"@keagan something":["like"],"@keira: By":["the"],"@kelley gah!":["If"],"@kenyatta's solution":["in"],"@kiara here":["on"],"@king. I'm":["aware"],"@laurine thanks.":["First"],"@lennie I":["will"],"@leonie, I've":["updated"],"@leonora thanks,":["i'm"],"@linwood Thanks":["so"],"@loma, your":["feedback"],"@lupe and":["@lupe."],"@luz for":["the"],"@mabel. I've":["tried"],"@madelyn! I'm":["still"],"@mae you’re":["right"],"@major Thanks!":["Should"],"@margarete thanks":["for"],"@marge! I'm":["still"],"@mariana see":["my"],"@marilie -":["I"],"@marina this":["I"],"@marjorie good":["to"],"@martin. I'll":["rewrite"],"@marty Got":["it."],"@marty can":["elucidate"],"@maryse Second":["iteration"],"@mathew, I":["forgot"],"@maxie's points,":["but"],"@mazie is":["suggesting"],"@meghan: Ah,":["good"],"@meghan: I":["rather"],"@melvin Thanks":["for"],"@micah; helper":["methods"],"@michel I":["thinka"],"@michel code":["formatting"],"@michele -":["i","I'll"],"@milton thanks":["for"],"@minerva, thank":["you"],"@modesta awesome":["tips,"],"@nickolas nice.":["`blank`"],"@nikki: Yes,":["the"],"@norma how":["does"],"@oleta thank":["you!"],"@oswald: Instead":["of"],"@oswald: it":["looks"],"@ottilie, thanks":["for"],"@pedro and":["@pedro"],"@pedro totally":["helped"],"@pedro, @pedro":["and"],"@phoebe -":["thanks"],"@quincy !":["I"],"@raleigh Thanks!":["I"],"@ramon --":["Thanks"],"@ransom that’s":["a"],"@reanna for":["the"],"@rosalee -":["thanks"],"@rosella, excellent":["suggestion."],"@rosemary right.":["It"],"@rusty thanks":["for"],"@ryann It's":["not"],"@samir Sorry":["for"],"@samir that":["approach"],"@scottie I":["am"],"@sherman! I'd":["forgotten"],"@skye Unless":["you"],"@spencer Yes.":["I"],"@stuart It":["definitely"],"@stuart and":["I"],"@terence I":["tried"],"@terrell, thanks,":["I'm","I"],"@tia I'm":["am"],"@tina great":["catch"],"@torrey! The":["pointer"],"@tracey Thanks":["for"],"@trent. While":["\"T\""],"@trinity Is":["this"],"@trinity Thanks":["for"],"@tyrell Thanks":[":)."],"@victor That's":["an"],"@vinnie: Did":["anyone"],"@violet thanks":["for"],"@wilburn's point":["about"],"@wilburn. I":["have"],"@wilhelm thanks,":["`frequencies`"],"@winston thanks":["for"],"@zachery, I":["did"],"@zaria-ee, good":["point,"],"@zoey Good":["to"],"A ==":["B"],"A better":["abstraction"],"A bit":["more","too","dated"],"A character.":["That"],"A common":["implementation","idiom","naming"],"A couple":["of","of","observations:","of","of","questions","of","things","of","of","of"],"A deterministic":["way"],"A few":["points:","minor","comments","points,","style"],"A friend":["mentioned"],"A generic":["robot"],"A good":["start."],"A hash":["function"],"A hint":["on"],"A keyword":["`:require`"],"A little":["more"],"A lot":["of"],"A map":["is"],"A minor":["point"],"A new":["approach"],"A question":["that's"],"A riddle!":["I'll"],"A set":["works","can"],"A slightly":["improved"],"A small":["benchmark"],"A solution":["with"],"A straight":["translation"],"A true":["serial"],"A useful":["trick"],"A verbose":["version"],"A word":["matches","with"],"ACGT would":["all"],"ACGU, DNA,":["or"],"AFAIK Ruby":["doesn't"],"AND `nil`":["are"],"AND compute":["their"],"AND easy":["to"],"AND with":["first"],"ANOTHER attempt":["at"],"ANOTHER version":["of"],"API /":["highest"],"API again,":["I"],"API at":["top","the","the"],"API boundaries":["(possibly"],"API has":["a"],"API is":["laid","quite"],"API that":["is"],"API that's":["all"],"API to":["check"],"API with":["over"],"API, I":["wonder"],"API, why":["not"],"API. Also,":["generally"],"API. It":["obfuscates"],"API. When":["importing,"],"APIs and":["the"],"APIs are":["terrible..."],"APIs, this":["looks"],"APIs. I":["updated"],"ARE COMING!!11!!1!\"`":["or"],"ARE ONE":["CRAZY"],"ASCII value":["of"],"ASCII values":["from"],"ASCII) I":["lean"],"ASCII, it's":["probably"],"About the":["only","only","only","`verse`.","parentheses","only","problem","last"],"Absolutely right,":["that"],"Accidental submission!":["Please"],"Accidental submit,":["please"],"According to":["the","\"shouting\"."],"Actually I":["can"],"Actually the":["README.md","`vec`"],"Actually, if":["I"],"Actually, you":["got"],"Added `ifnil?`":["function,"],"Added a":["char-range"],"Added docstrings,":["changed"],"Adding some":["private"],"Additionally a":["hash"],"Additionally, by":["swapping"],"Addressed items":["1-4"],"Admittedly the":["Java"],"After a":["few","couple"],"After all":["`=`"],"After fiddling":["a"],"After realizing":["this,"],"After sleeping":["on"],"After writing":["the"],"After you":["refactored"],"Again -":["string"],"Again, I":["don't"],"Again, looks":["good"],"Again, not":["a"],"Again, thank":["you"],"Again, thanks":["for"],"Again, that's":["just"],"Agents instead":["which"],"Agree I":["could"],"Agree, I":["will"],"Agreed -":["such"],"Agreed re:":["strings"],"Agreed that":["the"],"Agreed with":["@ayana's","@hilda"],"Agreed, I":["was"],"Agreed. Looks":["great"],"Agreed. Removed":["it."],"Agreed. You":["could"],"Ah and":["instead"],"Ah oops,":["commented"],"Ah there":["was,"],"Ah we":["are"],"Ah whoops,":["I've"],"Ah yes,":["that's"],"Ah, I":["like","see!"],"Ah, I've":["used"],"Ah, `frequencies`!":["I"],"Ah, `frequencies`...":["I"],"Ah, and":["probably","`use`","you","one"],"Ah, didn't":["know"],"Ah, good":["point.","point"],"Ah, got":["it."],"Ah, gotcha.":["Good"],"Ah, great,":["thanks"],"Ah, indeed,":["much"],"Ah, interesting":["one,"],"Ah, nice":["catch!"],"Ah, so":["Clojure"],"Ah, sorry,":["I"],"Ah, sure,":["since","indeed!"],"Ah, that's":["a","a","how"],"Ah, this":["feels"],"Aha ...":["someone"],"Aha! I":["assumed"],"Aha! Thanks":[":)"],"Aha, I":["didn't"],"Aha, in":["the"],"Ahh, good":["call"],"Ahh, nice":["catch."],"Algorithm looks":["good."],"Aliasing seems":["better"],"All I":["am"],"All in":["all,"],"All of":["them"],"All the":["Java"],"All those":["ifs"],"Alright, I":["give"],"Alright, who":["let"],"Also -":["as","what"],"Also I":["just","like","would"],"Also I'm":["no"],"Also `let`":["bindings"],"Also `silence?`":["could"],"Also `word-chars`":["does"],"Also a":["small"],"Also added":["solution"],"Also check":["out"],"Also consider":["replacing","if","switching"],"Also fixed":["subtle"],"Also for":["completely"],"Also maps":["in"],"Also maybe":["predicates"],"Also nice":["tip"],"Also note":["that"],"Also purists":["would"],"Also putting":["`(:require"],"Also remember":["that"],"Also simplified":["`advance`"],"Also since":["silence?"],"Also switched":["to"],"Also take":["a"],"Also the":["prefix"],"Also there":["is"],"Also think":["about"],"Also tried":["`(last"],"Also your":["test"],"Also, I":["would","found","would","have","don't","don't","agree","should"],"Also, I'd":["probably","make","have"],"Also, I'm":["not"],"Also, IMO":["the"],"Also, Uracil":["is"],"Also, `\\s`":["is"],"Also, `frequencies`":["can"],"Also, `swap!`":["returns"],"Also, `zip`":["may"],"Also, all-caps?":["potentially"],"Also, are":["you"],"Also, by":["swapping"],"Also, condp":["can"],"Also, do":["the","you"],"Also, don't":["you"],"Also, for":["the"],"Also, frequencies":["might"],"Also, generally":["the","it's"],"Also, have":["you","a","you","you"],"Also, how":["about"],"Also, imagine":["another"],"Also, in":["`pretty-print`","Clojure,"],"Also, instead":["of","of"],"Also, it":["would"],"Also, it's":["a","often","more"],"Also, links":["to"],"Also, made":["the"],"Also, maybe":["using"],"Also, not":["that"],"Also, now":["that"],"Also, please":["keep"],"Also, should":["I"],"Also, some":["food"],"Also, someone":["mentioned"],"Also, something":["about"],"Also, strings":["can"],"Also, take":["a"],"Also, the":["argument"],"Also, there":["is"],"Also, there's":["a"],"Also, this":["isn't"],"Also, use":["docstrings"],"Also, what":["should","would","happens","do"],"Also, what's":["the"],"Also, while":["a"],"Also, would":["it"],"Also, you":["can","are","might","could","may","could","can","should","can","might","might","may","can","can","can","can","don't"],"Alternately, you":["could"],"Alternative approach":["to","would","would","to"],"Alternative to":["`merge-with`"],"Alternatively there's":["`frequencies`."],"Alternatively to":["using"],"Alternatively, I":["suggest"],"Alternatively, try":["to"],"Alternatively, you":["could","could","could","may","can","can"],"Although I":["grok","will"],"Although at":["10"],"Although if":["you"],"Although it":["is","feels","isn't"],"Although on":["4clojure"],"Although recursion":["is"],"Although shouting":["questions"],"Although the":["video"],"Although this":["is","can"],"Although using":["java","Java","native"],"Although your":["map"],"Am I":["missing","missing","missing","missing"],"Am looking":["at"],"An alternate":["`anagram-of?`"],"An atom":["is"],"An example":["might","might","would"],"An internal":["representation"],"Anagrams are":["created"],"And \"divisible\"":["doesn't"],"And I":["check,","agree","can","prefer"],"And `re-seq`":["is"],"And currently,":["there's"],"And do":["you"],"And for":["some"],"And if":["you"],"And is":["there"],"And love":["your"],"And macros":["are"],"And name":["of"],"And of":["course,"],"And once":["you"],"And one":["question","other"],"And possibly":["try"],"And should":["have"],"And since":["it"],"And sorry":["for"],"And suddenly":["the","the"],"And that":["makes"],"And that's":["what"],"And the":["name","name"],"And then":["for","for"],"And there's":["a"],"And this":["if"],"And when":["`reset-name`"],"And wikipedia":["backs"],"And yes":["it"],"And yes,":["I","that's","the"],"And you":["could","are","can"],"And you're":["using","already"],"And your's":["has"],"And, well,":["vertical"],"Annoying, isn't":["it"],"Another alternative":["solution"],"Another approach,":["which"],"Another comment":["that"],"Another good":["observation."],"Another helpful":["function"],"Another inefficiency":["-"],"Another option":["would","would"],"Another possible":["approach"],"Another problem":["is"],"Another simplification":["would"],"Another thing":["is","to","-","you","you"],"Another way":["would","you","to","to"],"Answering to":["myself"],"Any advice":["would"],"Any chance":["to"],"Any comments":["welcome,"],"Any hint":["?"],"Any reason":["not","why","you're"],"Any thoughts":["on"],"Any way":["to","to","to"],"Anyone have":["any"],"Anyone willing":["to"],"Anyway `response-for`":["could"],"Anyway `use`":["is"],"Anyway no":["need"],"Anyway, I":["would"],"Anyway, as":["I've"],"Anyway, looks":["very"],"Anyway, that":["looks"],"Anyway, that's":["solid."],"Anyway, the":["split","function"],"Anyway... I":["took"],"Apart from":["that,"],"Apparently I":["forgot"],"Apparently not.":[":)"],"Applied to":["my"],"Apply should":["work"],"Appreciate the":["call"],"Are function":["literals"],"Are not":["redundant"],"Are the":["`seq`s","tests"],"Are there":["simple"],"Are you":["sure","aware","familiar","thinking","familiar","familiar","familiar","using","saying"],"Argh ...":["we"],"Argh, I":["botched"],"Argument names":["like"],"As @afton":["says,"],"As I":["stated","understand","was"],"As I've":["written"],"As a":["general","result","long-time","next","newcomer,"],"As always,":["I"],"As an":["example,","afterthought,","aside,"],"As another":["suggestion,"],"As developers":["we"],"As ever":["though,"],"As far":["as","as"],"As for":["evaluating","a","this","`yelling?`","```count-words```,","`range-verses`","testing","word-count","modifying","the"],"As it":["stands,"],"As long":["as"],"As much":["as"],"As noted":["previously,"],"As pointed":["out"],"As soon":["as"],"As there":["was"],"As when":["composing"],"As with":["another","iteration","all"],"As you":["see,","use","can"],"As your":["opinion"],"Aside from":["that,"],"Aside: is":["there"],"AssertionError (dna/count-one-nucleotide":["\\X"],"AssertionError but":["that"],"AssertionError if":["validation"],"AssertionError or":["add"],"AssertionError will":["be"],"AssertionError. It":["could"],"Assuming you're":["using"],"At first":["I","blush,"],"At it":["stands"],"At least":["`#()`","I"],"At the":["moment,","moment","cost","time","time"],"Atoms (or":["Refs)."],"Atoms are":["each"],"Atoms don't":["participate"],"Atoms for":["both."],"Atoms is":["fine","fine"],"Atoms, or":["Agents"],"Attempt to":["public"],"Aw thanks!":["I"],"Awaiting your":["thoughts"],"Awesome --":["love"],"Awesome suggestions.":["This"],"Awesome! I":["was","should"],"Awesome! Thanks":["for"],"Awesome! This":["is"],"Awesome! Those":["are"],"Awesome, thank":["you!"],"Awesome. Thanks":["for","for","for"],"Aye, the":["java"],"B if":["hash(A)"],"BAM BAM":["BAM","of"],"BAM of":["closing"],"BTW Nice":["to"],"BTW all":["the"],"BTW, instead":["of"],"BTW: totallly":["drunk"],"Back from":["vacation"],"Based on":["the","the","previous","previous"],"Basically I":["see"],"Basically instead":["of:"],"Basically just":["a"],"Basically, it's":["any"],"Basically, the":["only"],"Basically, you":["are"],"Batman.\" (a":["terrifying"],"Be gentle.":[":)"],"Be that":["way.',","way!\"))","way!\"","way!\"","way!\"","way.\"","way!\""],"Beautifully expressive.":["Does"],"Because I":["basically"],"Because it’s":["native"],"Because of":["that,"],"Because this":["example"],"Been trying":["to"],"Being a":["private"],"Below is":["the"],"Besides a":["keyword"],"Besides that":["I","looks"],"Besides that,":["have"],"Besides, a":["verb"],"Besides, code":["formatting"],"Besides: `count-nucleotides":["#((nucleotide-counts"],"Better formatting":["FTW"],"Better, but":["you"],"Beyond fiddling":["in","in","directly"],"Binding names":["could"],"Bindings should":["begin"],"Bless Rich":["Hickey's"],"Bob a":["different"],"Bob already":["do"],"Bob answers":["to."],"Bob can":["get"],"Bob doesn't":["think"],"Bob is":["blasé","limited.","responding"],"Bob it's":["about"],"Bob lacksidaisically":["stepped"],"Bob receives":["something"],"Bob respond":["with"],"Bob responds":["to"],"Bob so":["I"],"Bob that":["his/her"],"Bob the":["message"],"Bob using":["[behaviorist][1]"],"Bob was":["significantly"],"Bob would":["say","describe"],"Bob's I":["saw"],"Bob's default":["response."],"Bob's feelings":["and"],"Bob, \"Do":["you"],"Body of":["let"],"Both `-\u003e\u003e`":["and"],"Both are":["valid,","great"],"Bravo, data-driven":["MVP."],"Breaking the":["string"],"Breaking them":["out"],"Brian Marick":["http://vimeo.com/19404746"],"Brian Marick's":["FPfOOP"],"BrianHicks is":["getting"],"Brilliant. Will":["do."],"British are":["coming!\"."],"Btw, I":["didn't"],"Btw: 4":["lines"],"But I":["also","kinda","will","personally","won't","can't","would","couldn't","have","may","guess","question","also","do","think"],"But I'll":["already"],"But I'm":["not"],"But If":["you"],"But again":["I"],"But as":["I"],"But case":["is"],"But could":["you"],"But good":["names"],"But hey,":["it’s","you"],"But if":["there","I"],"But instead":["from"],"But is":["it"],"But isn't":["`defn-`"],"But it":["passes","definitely","seems"],"But it's":["stuff"],"But looks":["ok"],"But maybe":["you","that's","there's"],"But my":["general"],"But now":["we"],"But of":["course,"],"But once":["again"],"But seeing":["the"],"But since":["leaving","all","you","you","it's"],"But that":["is","might","could"],"But that's":["nothing","clearly","just"],"But the":["specification"],"But this":["is","reduces","nit","ordering"],"But what":["happens"],"But would":["that"],"But yes,":["the"],"But, I'm":["torn"],"But, since":["all"],"But, sometimes,":["threading"],"By partial":["I"],"By robust":["I"],"By swapping":["`sort`","`sort`"],"By the":["way,","way,","way,"],"By using":["an","\".add\","],"C G":["T}`."],"C implementation":["under"],"C-&gt;C etc.":["is"],"C-\u003eG, T-\u003eA,":["etc."],"C-ish language,":["we"],"CAPS*. Some":["characters"],"COMING!!11!!1!\"` or":["am"],"CSS regression":["that"],"Calendar API":["is"],"Calendar APIs":["are"],"Calendar APIs,":["this"],"Calendar and":["GregorianCalendar."],"Calendar class":["do"],"Calendar documentation":["and"],"Calendar instance":["to"],"Calendar is":["terrible."],"Calendar object,":["I"],"Calendar objects.":["So"],"Calendar, so":["you"],"Calling `build-finder`":["manually"],"Calling `first`":["on"],"Calling `require`":["as"],"Calling `use`":["and","and"],"CamelCased names":["are","are"],"Camelcased names":["are"],"Can I":["delete","ask"],"Can someone":["help","else"],"Can this":["revision"],"Can you":["find","come","think","think","think","think","think","think","clarify?","clarify?","use","offer","please","find","think","think","think","think","optimize","find","make","clarify?","think","suggest","give","clarify","give","make","get","please","avoid","just","check","do"],"Can't imagine":["this"],"Can't see":["much"],"Can't seem":["to"],"Care to":["comment"],"Carin Meier":["(gigasquid),"],"Casting string":["to"],"Certainly I":["don't"],"Certainly this":["would"],"Change your":["namespace"],"Changed it":["fifth"],"Changed the":["functions"],"CharSequence Interface":["and"],"Character functions":["for"],"Character literals":["begin"],"Characters can":["be","be"],"Characters in":["Clojure","Clojure"],"Characters work":["just"],"Cheatsheet (http://clojure.org/cheatsheet)":["very"],"Check out":["`cond`","`last`","the","`frequencies`","`frequencies`","the","http://clojuredocs.org/clojure_core/clojure.core/atom","`blank?`","`frequencies`.","`frequencies`.","\"alphagrams\"","my","clojure.string/blank?","clojure.string/blank?","the","the","the"],"Check the":["last"],"Checking for":["nil"],"Clean code":["is"],"Clean, concise,":["explicit"],"Cleaned it":[":)"],"Clear and":["to"],"Clearly an":["improvement"],"Clever to":["do"],"Clojure (or":["any"],"Clojure (though":["I"],"Clojure -":["I'm"],"Clojure ...":["and"],"Clojure ;-))":["and"],"Clojure API":["that's"],"Clojure APIs.":["I"],"Clojure Cheatsheet":["(http://clojure.org/cheatsheet)"],"Clojure I":["frown","wrote","guess"],"Clojure I've":["written.","written,"],"Clojure Programming":["from"],"Clojure _and_":["functional"],"Clojure a":["bit"],"Clojure allows":["for","you"],"Clojure also":[";)"],"Clojure and":["just","so","functional","this","it","that"],"Clojure are":["also"],"Clojure as":["of","lists,"],"Clojure before":["so"],"Clojure beginner":["like"],"Clojure beginner,":["so"],"Clojure builtin":["`(bigint"],"Clojure but":["I'll","i've"],"Clojure by":["the"],"Clojure can":["do","be","be","be","be"],"Clojure chats":["w/"],"Clojure cheatsheet":["that"],"Clojure cheatsheet:":["http://clojure.org/cheatsheet"],"Clojure code":["style","I've","on","looks","I've","I've"],"Clojure code,":["so","so"],"Clojure code.":["^_^","https://github.com/kytrinyx/exercism.io/issues/821","Feedback","Feedback"],"Clojure community":["-","prefer"],"Clojure community,":["or"],"Clojure community.":["Maybe"],"Clojure compared":["to"],"Clojure compiler":["is"],"Clojure considerably":["difficult"],"Clojure considers":["[1"],"Clojure dialects":["that"],"Clojure docs":["have"],"Clojure does":["have"],"Clojure doesn't":["use"],"Clojure doesn't,":["but"],"Clojure during":["the"],"Clojure exercises.":["While"],"Clojure experience":["I"],"Clojure experience.":["Your"],"Clojure experiment":["to"],"Clojure fits":["that"],"Clojure fns":["that"],"Clojure for":["re-defining","functions"],"Clojure function":["to","to","`frequencies`?","like"],"Clojure functions":["if"],"Clojure functions,":["rather","please","the"],"Clojure gets":["its"],"Clojure had":["its"],"Clojure has":["a","some","also","a"],"Clojure in":["particular."],"Clojure instead":["of"],"Clojure is":["confusing.","not","normally","that","definitely"],"Clojure isn't":["all"],"Clojure just":["isn't"],"Clojure keywords":["tend"],"Clojure knows":["how"],"Clojure led":["me"],"Clojure like.":["Could"],"Clojure list":["on"],"Clojure macros":["and"],"Clojure method":["that","that"],"Clojure module,":["and"],"Clojure myself,":["but"],"Clojure prefer":["using"],"Clojure program":[":)"],"Clojure program,":["mainly"],"Clojure program.":["So"],"Clojure so":["your","all","is","not","this"],"Clojure solutions":["for"],"Clojure still":["feels"],"Clojure string":["library","functions."],"Clojure style":["pundit,","says","(my","guide"],"Clojure term,":["so"],"Clojure that":["look","I'm","is"],"Clojure thing,":["but"],"Clojure thus":["far"],"Clojure to":["Java","do","end","use","use","name","end"],"Clojure too":["is"],"Clojure tricks":["that"],"Clojure uses":["hyphens"],"Clojure usually":["omit"],"Clojure variables":["typically"],"Clojure version":["of"],"Clojure versions":["for"],"Clojure way":["of"],"Clojure way.":["What"],"Clojure which":["might","should"],"Clojure with":["its"],"Clojure wrapper":["-"],"Clojure you":["have"],"Clojure\" and":["I"],"Clojure' without":["using"],"Clojure's [`blank?`](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/blank?)":["function"],"Clojure's `=`":["function"],"Clojure's `frequencies`":["function;"],"Clojure's built-in":["functions"],"Clojure's bulit-in":["comparison"],"Clojure's lazy":["evaluation"],"Clojure's reducers":["to"],"Clojure's so":["rusty!"],"Clojure's string":["handling"],"Clojure's syntax":["isn't"],"Clojure) and":["lost"],"Clojure, I":["can't"],"Clojure, I'd":["love"],"Clojure, and":["since","I","AFAIK"],"Clojure, as":["I'm"],"Clojure, both":["in","in"],"Clojure, but":["wouldn't","in","I'm","I"],"Clojure, do":["you"],"Clojure, it":["didn't"],"Clojure, it's":["customary"],"Clojure, so":["just","I","`map`","that's","I","`(not","I'd","I'd","there"],"Clojure, strings":["always"],"Clojure, these":["methods"],"Clojure, this":["is"],"Clojure, where":["currying","it's"],"Clojure, would":["(="],"Clojure, you":["can"],"Clojure-ish approach":["to"],"Clojure-ish property":["that"],"Clojure. Be":["brutal."],"Clojure. Do":["you"],"Clojure. Have":["you"],"Clojure. Is":["it","this"],"Clojure. Leiningen":["is"],"Clojure. Macros":["might"],"Clojure. Makes":["sense"],"Clojure. So":["you"],"Clojure. Thanks":["to"],"Clojure. The":["`reset-name`"],"Clojure. There":["are"],"Clojure. There's":["good"],"Clojure. Think":["about"],"Clojure....\" -":["thanks"],"Clojure/Lisp style":["to"],"Clojuresque it":["all"],"Clojure’s indentation":["rules!"],"Clojurists are":["leaning"],"Clojurists reserve":["them"],"Closing square":["bracket"],"Code Golf":["the"],"Code formatting":["in","is"],"Code looks":["good."],"Coding Standards](http://dev.clojure.org/display/community/Library+Coding+Standards)":["the"],"Coffee &amp;":["Clojure"],"Collection functions.":["(not-any?"],"Collections (List,":["Vector,"],"Collections, so":["you"],"Coming back":["to"],"Coming from":["ruby,","Ruby"],"Coming mostly":["from"],"Command line":["history"],"Common Lisp":["so"],"Compare `amount`":["as"],"Comparison with":["uppercased"],"Compiler probably":["compensates"],"CompilerException java.lang.RuntimeException:":["Unable"],"Conceivably something":["could"],"Concise and":["readable,"],"Conditionals to":["Strategy"],"Consider breaking":["stuff"],"Consider creating":["bindings"],"Consider either":["adding"],"Consider eliminating":["overhead","overhead"],"Consider exploiting":["two"],"Consider extracting":["the","predicates"],"Consider if":["the"],"Consider making":["code","functions","`anagram-of?`"],"Consider more":["DRY","DRY"],"Consider refactoring":["your"],"Consider this":["for"],"Consider using":["`frequencies`","[the","the"],"Convert is":["a"],"Converted a":["couple"],"Converted board-string":["to"],"Convinced there":["is"],"Cool! I":["hadn't"],"Cool, I":["think","really"],"Cool, I'll":["try"],"Cool. Do":["you"],"Could be":["just"],"Could do":["this"],"Could it":["be"],"Could you":["mark","please","maybe","use","please","combine","think","think","clarify","put","put","name","elaborate?","only","use"],"Couldn't find":["anything"],"Couldn't get":["the"],"Couldn't it":["just"],"Couldn't that":["just"],"Couldn't the":["program"],"Count I":["could"],"Counter being":["implemented"],"Counting frequencies":["was"],"Couple of":["my"],"Creating an":["alphagram"],"Creating word":["maps"],"Curious: Is":["it"],"Curiously enough":["I"],"Currently ignores":["malformatted"],"D'oh. Should've":["really"],"DID YOU":["DO?\""],"DNA acids":["should"],"DNA and":["RNA","writing","its"],"DNA atoms":["to"],"DNA before":["this"],"DNA into":["RNA?"],"DNA literal":["into"],"DNA literals":["into","into","and"],"DNA nucleotides":["to","characters","not","to"],"DNA problems":["both"],"DNA sequence,":["C-\u003eG,"],"DNA sequences":["(not"],"DNA strand,":["its"],"DNA string":["is"],"DNA to":["this"],"DNA was":["invalid."],"DNA). Apply":["should"],"DNA, or":["ACGT"],"DNA. So":["I'm"],"DNA/RNA. I":["mean,"],"DNA: input":["string"],"DNAs, but":["I"],"DO?\" seems":["more"],"DRY and":["simple"],"DRY approach":["to","to"],"DRY at":["all"],"DRY causes":["chafing"],"DRY it":["up"],"DRY requirement":["on"],"DRY that":["up?","without"],"DRY this":["up"],"DRY up":["the","the"],"DRY. The":["`str`"],"DRY. You":["could"],"DRYer in":["this"],"DRYer. It":["also"],"Daily reminder":["that"],"Damn, I":["thought"],"Darn. You're":["right,"],"Date because":["you"],"Date object":["and"],"Date, not":["Calendar"],"Dealing with":["java"],"Decided cond":["was"],"Decided that":["the"],"Define predicates":["separately,"],"Define variable":["instead"],"Definitely agree":["with","on"],"Definitely helps":["you"],"Definitely makes":["the"],"Definitely not":["too"],"Definitely pleased":["to"],"Despite being":["faster"],"Despite your":["comment,"],"Destructuring may":["be"],"Dick](http://www.gutenberg.org/cache/epub/2701/pg2701.txt) about":["1000"],"Did I":["miss"],"Did anyone":["write"],"Did you":["consider","consider","consider","consider","consider","consider","consider","consider","consider","consider","know","consider","intentionally","know","feel","know","try","check","know","mean"],"Didn't come":["up"],"Didn't know":["there","about","about"],"Didn't quite":["understand"],"Didn't really":["excite"],"Distance I've":["seen."],"Do I":["have"],"Do you":["think","think","think","think","think","think","think","know","feel","think","need","really","think","think","know","mean","think","have","think","know","have","have","accept","find"],"Docstrings are":["hard."],"Does Clojure's":["lazy"],"Does `T`":["have"],"Does anyone":["know"],"Does clojure":["usually"],"Does it":["read","just"],"Does its":["job"],"Does not":["seem"],"Does that":["just"],"Does the":["runtime","check"],"Does this":["pass","pass"],"Does wrapping":["`frequencies`"],"Does your":["solution"],"Doesn't count":["`\\U`,"],"Doesn't look":["like"],"Doesn't make":["much"],"Don't hit":["me,"],"Don't know":["enough"],"Don't leave":["closing"],"Don't see":["much"],"Don't tell":["me"],"Don't use":["`def`,"],"Don't you":["think,","get"],"Done @minerva,":["thank"],"Done and":["resubmitted."],"Dont know":["if"],"Dot special":["form-(Classname."],"Due to":["the"],"Duh, `frequencies`":["is"],"Dunno how":["to"],"Duplication in":["that"],"EDIT: Another":["alternative"],"EDIT: Fixed":["typos"],"EDIT: I":["was"],"EDIT: Just":["to"],"EDIT: Oh,":["and"],"EDIT: Ok,":["I've"],"EDIT: On":["another"],"EDIT: What's":["more"],"EDIT: nevermind,":["it"],"EXPRESSION WITH":["message"],"Earmuffs are":["not"],"Edit: Heh,":["I"],"Edit: oh,":["it's"],"Edit: scratch":["that,"],"Editor are":["you"],"Either it":["could"],"Either way,":["there's","no","there's","there"],"Elixir and":["knowing"],"Elixir example.":["Right"],"Elixir first":["and"],"Elixir solution":["and"],"Elixir submission)":["and"],"Elixir version":["of"],"Elixir's `Enum.count/2`":["built"],"Emacs with":["λ"],"Emacs-Lisp and":["Scheme"],"Emmerson and":["Hobgoblins"],"Encoding the":["statement"],"English are":["pretty"],"English is":["not"],"English-related, it":["would"],"Enough of":["that"],"Equivalent to":["a"],"Er, checking":["```drivel```"],"Err... `(zip":["x"],"Especially in":["the"],"Especially the":["part"],"Especially when":["that"],"Etrepum: Thanks":["for"],"Even a":["private"],"Even better":["is"],"Even if":["you","you"],"Even in":["ruby,"],"Even then,":["the","a"],"Even though":["I","`true`","the"],"Even when":["there"],"Even with":["reduce"],"Eventually I":["figured"],"Eventually I've":["decided"],"Eventually you":["could"],"Every time":["you"],"Everything else":["is"],"Everything here":["looks"],"Everything looks":["good"],"Everytime something":["looks"],"Example of":["how"],"Excellent use":["of","of"],"Exercism is":["all"],"Experience shows":["that"],"Explicit loop/recur":["is"],"Explicit recursion":["is"],"Extract functions":["for"],"Extracted `alphagram`":["into"],"Extracting out":["a"],"Extracting the":["predicates","conditions"],"F's in":["your"],"FAIL in":["(responds-to-forceful-questions)","(responds-to-only-numbers)","(square-4)","(square-2)","(square-16)","(square-64)","(square-3)","(square-1)","(total-grains)","(square-32)"],"FP and":["especially"],"FP in":["general"],"FP langs)":["because"],"FPfOOP book":["on"],"FTW :)":["My"],"FWIW, I":["think","prefer"],"FWIW, here's":["how"],"Fair criticisms!":["Honestly"],"Fair warning:":["this"],"Fairly new":["to","to"],"Feedback and":["suggestions","suggestions"],"Feedback on":["my"],"Feel free":["to","to"],"Feel like":["I"],"Feels a":["little"],"Felbit: Definitely":["agree"],"Figured refactoring":["that"],"Filter, while":["lazy,"],"Final touch":["might"],"Finally I'd":["rename"],"Finally, someone":["else"],"Finally, there's":["more"],"Finally, you":["can"],"Finding a":["style"],"Finds words":["instead"],"First Clojure":["ever."],"First of":["all,"],"First pass.":["I'm"],"First solution":["I've"],"First time":["I","I've"],"First, I":["was"],"First, in":["reduce-fn,"],"First, you":["can't","don't","can"],"Fixed commas":["(new"],"Fixed in":["the"],"Fixed spelling":["of","error"],"Fixed typo":["in"],"Fixed typos":["made"],"For `move`":["you"],"For `nucleotide-counts`,":["have"],"For amusing":["reading,"],"For an":["example"],"For bigger":["tasks,"],"For clarification,":["look"],"For conditional":["with"],"For direct":["import"],"For each":["of"],"For example":["you","you","-","`:\u003e"],"For example,":["you","I","you","the","```silence?```","in","these"],"For example:":["\"H.G."],"For fun,":["try"],"For functions":["with"],"For future":["reference,","reference:","reference"],"For instance":["[my"],"For instance,":["a","`question?`"],"For local":["bindings,"],"For me":["your"],"For me,":["they're"],"For more":["info","on"],"For my":["taste"],"For private":["functions","variables"],"For rev":["2"],"For silence,":["there"],"For some":["reason","reason,"],"For the":["purposes","bracket,","`cond`,","purposes","`.endsWith`","most","second","trivial"],"For this":["kind","problem,"],"Foray crowd":[":)"],"Forgot about":["that"],"Formatting `anagrams-for`":["is"],"Formatting got":["lost,"],"Formatting in":["`anagram-for?`"],"Formatting is":["still","still","a"],"Forms--(fn name?":["[params*"],"Fortunately each":["atom"],"Frequencies doesn't":["even"],"Frequencies, even":["though"],"From [the":["clojure"],"From a":["technical","functional"],"From my":["perspective,"],"From the":["name,","docs,"],"From what":["I","I"],"Full disclosure.":["I"],"Fully agreed":["with"],"Functions built":["on"],"Functions should":["look"],"Further, it":["allows"],"Furthermore, is":["```char-counts```"],"Furthermore, minimal":["use"],"G T}`.":["I"],"Generally I've":["seen"],"Generally a":["very"],"Generally looks":["great!"],"Generally transients":["are"],"Generally, besides":["protocols,"],"Generally, indent":["of"],"Generally, two":["spaces"],"Generally, you":["should"],"Generate functions":["from"],"Geoff for":["the"],"Geoff. That":["is"],"Getting: `Exception":["in"],"Give me":["a"],"Give names":["to"],"Give variables":["names."],"Given a":["DNA"],"Given how":["good","the"],"Glad to":["know"],"Going back":["to"],"Going to":["revert."],"Golf the":["thing"],"Gonna have":["another"],"Good :)":["For"],"Good call":["using","on"],"Good call,":["thanks","it"],"Good call.":["That","I've","I've"],"Good calls":["all"],"Good catch":["on"],"Good catch,":["although"],"Good enough":["to","for"],"Good feedback,":["dumben."],"Good first":["attempt!","attempt!!"],"Good idea,":["I","thanks!"],"Good looking":["piece"],"Good overall":["structure."],"Good point":["on"],"Good point,":["done.","it's","re-submitted."],"Good point.":["Updated.","Done","Also,","Resubmitted","It"],"Good points":["re:"],"Good points,":["thanks"],"Good practice":["for"],"Good start.":["It's"],"Good stuff:":["clean"],"Good to":["go","know","see","know.","know"],"Good use":["of","of","of","of"],"Good work!":["Writing"],"Good work,":["but"],"Good. But":["once"],"Good. In":["future,"],"Good. One":["more"],"Googling for":["RNA,"],"Got carried":["away"],"Got rid":["of"],"Great :)":["`hamming-distance`"],"Great and":["concise!"],"Great balance":["of"],"Great feedback":["on"],"Great first":["attempt!."],"Great for":["me!"],"Great point":["I've"],"Great point!":["Not"],"Great point.":["I"],"Great solution!":["Very"],"Great start!":["I'm"],"Great take!":["Nice"],"Great tip,":["made","thanks!"],"Great tips":["@jerrold",","],"Great use":["of","of"],"Great! A":["common"],"Great! And":["sorry"],"Great! Only":["a"],"Great! You":["could"],"Great!! A":["few"],"GregorianCalendar and":["Date,"],"GregorianCalendar inherits":["from"],"GregorianCalendar. I":["was"],"Guess it":["takes"],"Guide](https://github.com/bbatsov/clojure-style-guide) if":["you"],"HAHA, no,":["I"],"HELL WERE":["YOU"],"HOWEVER. Most":["editors"],"Ha ha":[","],"Ha indeed,":["how"],"Ha! I":["guess","discovered"],"Had a":["google"],"Had to":["look","ask"],"Hadn't seen":["this"],"Haha, now":["I"],"Hamming Distance":["I've"],"Happens all":["the"],"Hard to":["implement","get","improve"],"Haskell I":["guess."],"Haskell exercises":["for"],"Haskell is":["by"],"Haskell it":["certainly"],"Haskell's `where`":["clause,"],"Haskell, I'm":["still"],"Haskell, Python":["and"],"Haskell, as":["somebody"],"Haskell, but":["this"],"Haskell, with":["the"],"Hate to":["rain"],"Have a":["look","look","look","look","look","google","google","look"],"Have reversed":["my"],"Have you":["considered","considered","looked","considered","considered","considered","looked","considered","thought","considered","considered","considered","considered","considered","tried","considered","considered","considered","looked","seen","investigated","considered","considered","considered","considered","thought","considered","considered","tried","considered","considered","looked","thought","thought","looked","considered","considered","decided","considered","seen","run","considered","run"],"Haven't I":["done"],"Haven’t you":["thought"],"Having a":["separate"],"Having both":["sets","`anagram?`"],"Having multiple":["nested"],"Having said":["that,"],"Having the":["declaration"],"He answers":["'Whatever.'"],"He'd probably":["treat"],"He's also":["the"],"Heh, I":["have"],"Heh. I":["think"],"Help would":["be"],"Helped with":["getting"],"Helper function":["are"],"Helper functions":["would"],"Here are":["a","two"],"Here is":["another"],"Here's [a":["good"],"Here's a":["failing","few","hint:","hint:","hint:","version"],"Here's an":["example:"],"Here's my":["version"],"Here's one":["way","way"],"Here's what":["it"],"Here, I've":["added"],"Hey :)":["Thanks"],"Hey Shane.":["I"],"Hey good":["to"],"Hey, I":["love","didn't"],"Hey, cool!":["I"],"Hey, good":["to"],"Hey, it's":["been"],"Hey, now":["it"],"Hey, thank":["you"],"Hey, this":["is"],"Hi @zachery,":["I"],"Hi and":["thanks"],"Hi, What":["do"],"Hi, good":["to","to"],"Hi, this":["is"],"Hi. I":["had"],"Hi. Yes,":["this"],"Hi..thanks for":["the"],"Hickey's heart":["for"],"Higher order":["functions","functions"],"Hint #1:":["range"],"Hint: My":["approved"],"Hint: `contains?`":["is"],"Hint: a":["string"],"Hint: swapping":["`sort`"],"Hint: you":["have","have"],"Hmm I":["just"],"Hmm, I":["might","had"],"Hmm, I'm":["not"],"Hmm, fair":["enough"],"Hmm, full":["regex-based"],"Hmm, it":["almost"],"Hmm, strip-leading-one?":["was"],"Hmm, this":["got"],"Hmm, yeah":["-"],"Hmmm... I":["was"],"Hmmph. Maybe":["I"],"Hobgoblins at":["this"],"Honestly it":["looks"],"Honestly this":["one"],"Honestly, I":["had"],"Hope that":["helps.","helps."],"Hopefully my":["next"],"Hopefully someone":["more"],"How about":["`silent?`","extracting","making","making","making","now?","doing","making","extracting","extracting","visibility","precomputing","extracting","when","reducing","using"],"How can":["i"],"How come":["you"],"How could":["you","you"],"How did":["you"],"How do":["we","I","we","you"],"How does":["this"],"How else":["could"],"How much":["of"],"How would":["this"],"However I":["do","understand","disagree"],"However it":["may"],"However one":["hint:"],"However that's":["a"],"However you":["should"],"However your":["`response-for`"],"However, I":["like","suggest","always","think","went"],"However, I'd":["suggest"],"However, as":["you"],"However, did":["you"],"However, does":["this"],"However, if":["you","there"],"However, in":["Clojure"],"However, nothing":["stands"],"However, robustness":["principle!"],"However, seeing":["you"],"However, some":["may"],"However, somebody":["recently"],"However, symbols":["are"],"However, that":["may","expression"],"However, the":["shorthand"],"However, there’s":["more:"],"However, with":["`shouty?`"],"However, you":["can"],"However, your":["methods"],"Hyphen instead":["of"],"I *love*":["the"],"I _know_":["is"],"I _love_":["to"],"I accept,":["yes?"],"I accidentally":["submitted"],"I actually":["didn't","don't","meant","like","cancel","removed","was","thought","like","wouldn't","learned"],"I added":["require,","a","helper","it"],"I admire":["your"],"I admit":["I","`beer-song`","that"],"I agree":["that","--","with","it","with","that","with","with","with","it","that","with","with","with","with","with","with","with","that","that","on","that","that","to","that","with","with"],"I agree,":["actually.","that","the","it"],"I agree.":["Thanks!","It","```blank?```","However,"],"I agreed":["with.","with"],"I aim":["to"],"I align":["the"],"I already":["noticed"],"I also":["like","happen","removed","did","wonder","see","played","wonder","took","did","normally","expected","try","changed","had","noticed","separated","like","decided","got","assigned","like","extracted","managed","realized","added","changed"],"I always":["find","used","assume","vote"],"I am":["bad","completely","no","new","happy","a","not","a","learning","not","new","sure","absolutely","at","myself","still","almost","saying","new","less","familiar","glad","using,","new","going","not","not","sure","waiting","not","brand","still","not","trying","not","particularly","a","learning","lest","undecided"],"I applied":["your"],"I appreciate":["your","the","that","you","the","your","that","the"],"I ask":["why","for"],"I asked":["Bob","Bob,"],"I assume":["`str`","the","`=`","that","that"],"I assumed":["that","the","the"],"I attempted":["to"],"I avoided":["this"],"I barely":["know"],"I basically":["have"],"I began":["researching"],"I believe":["we","it's","the","the","it","using","my","the","that","is","that","`join`"],"I believe).":["Otherwise"],"I belive":["that"],"I bet":["you","you","you"],"I blame":["my"],"I botched":["the"],"I briefly":["experimented"],"I broke":["out","the"],"I buried":["it"],"I came":["up","up","up","across","across","across","up","up"],"I can":["see","see","make","see","think","certainly","do","improve","do","tell,","see","then","follow","see","only","point","try","find.","think","think","figure","think","tell","see","dig","avoid","pass","say","totally","do","dynamically","rework","make","think","get","kind","recommend","make","learn","find","break","appreciate","see"],"I can't":["find","remember","figure","reason","find","interpret","figure","quite","figure","really","help","image","check","justify","work","think","see","figure","say","comment","quite","believe"],"I cannot":["find","compare","say"],"I care":["is"],"I carried":["out"],"I caught":["all","that"],"I changed":["the","the","the"],"I cheated":["on","on"],"I check,":["if"],"I checked":["that"],"I choose":["to"],"I chose":["not","to","not"],"I code":["something"],"I coded":["this"],"I completed":["this"],"I comprehend":["of"],"I concede:":["I"],"I concluded":["that"],"I consider":["it"],"I considered":["using","that,","for","de-composing","extending"],"I could":["add","change","use","suggest","check","see","replace","go","use","add","create","wrap","have","delete","inline","suggest","write","improve","not","really","`filter`","go","get","introduce","have","have","implement","apply","not","get","have","have","immediately","use","do.","contain","Code","try","try","use","return","(it","look","figure","have","do","have","use","define","learn","guess","guess","learn","have","simply","ditch","help.","use","get","certainly","have","use"],"I could've":["swore"],"I could,":["but"],"I couldn't":["find","figure","find","get","figure","find","figure","get"],"I dare":["you,"],"I debated":["whether"],"I decided":["to","that","to","I'd","not","to","to","not","to","to","to","to"],"I defaulted":["it"],"I definitely":["like","agree.","think"],"I delete":["iterations?!","this"],"I did":["it,","not","the","not","see","not","something","first","use","it","have","a","the","a","the","that","some","consider","this","everything","for","two","not","not","notice,","the","it.","it","that","this","but","this",":)","some","consider","this","forget","combine","not","the"],"I didn'":["t"],"I didn't":["know","see","go","read","consider","make","know","get","know","knew","know","really","even","get","have","quite","know","know","mean","know","find","do","think","really","consider","really","think","like","go","know","know","notice","notice","know","want","need","know","know","know","know","mean","know","think","explain","mean","know","even","know","go","make","notice","know.","know","recognize","do"],"I didnt'":["think"],"I dig":["it!"],"I disagree":["on","that","about","with","with","with"],"I discovered":["the","[:refer-clojure","`frequencies`"],"I dislike":["making"],"I do":["like","think","think","want","think","not","not","see","have","prefer","know","think","not","not","consider","have","agree","use","take"],"I do!":["Sigh..."],"I don't":["understand","agree","know","think","think","know","actually","see","know","see","think","like","worry","have","see","think","see","exactly","exactly","feel","think","believe","actually","really","think","see","think","really","know","personally","much","get","know","really","know","know).","see","feel","know","really","really","really","know","know","think","fully","know","know","think","know","get","think","have","like","need","see","see","use","really","think","like","always","know","need","like","know","feel","like","fully","believe","agree","believe","have","see","exactly","see","mind","think","feel","like,","like.","really","know","really","like","know","think","think.","like","really","see","think","need","think","think","like","really","use","think","think.","think","think","like","really","like"],"I don't,":["really."],"I done":["this"],"I don´t":["think"],"I don’t":["really"],"I double":["dare"],"I doubt":["that"],"I dropped":["it."],"I drowned":["the"],"I encountered":["was","before"],"I end":["up"],"I ended":["up","up"],"I enter":["a"],"I essentially":["implemented"],"I even":["submitted"],"I expanded":["on"],"I expect":["it's"],"I expected":["to","the"],"I experimented":["with"],"I explicitly":["convert","don't"],"I extracted":["valid-nucleotides"],"I failed":["to"],"I feel":["like","like","the","reluctant","like","like","like","dirty","\"nonsense\"","like","there's","like","the","about"],"I feel,":["still"],"I felt":["its","it","that","that","it"],"I figured":["that","for","someone","out","the","there"],"I finally":["found","understood.","need","settled","figured"],"I find":["that","it","it","it","the","it","that","the","the","perusing","it","namespace-qualified","this","it","sentences","it","the","it","it","the","the","the","the","the","```(=","the"],"I first":["saw"],"I fixed":["the","the","up"],"I flipped":["through"],"I follow.":["strip-chars"],"I force":["the"],"I forgot":["to","here","that","to","to","to","to","that","that."],"I found":["out","no","it","these","the","this","one","[NimbleText](http://nimbletext.com/Live)","`clojure.string`","it","that","this","odd.","is","that","on","a","it","that"],"I found:":["https://github.com/iancw/exercism/blob/master/clojure/bob/bob.clj"],"I frame":["my"],"I frown":["hard"],"I frustratingly":["ended"],"I gave":["up","the"],"I generally":["prefer","find"],"I get":["for","for","your","back","the","(or","it...","for"],"I give":["up."],"I gladly":["trade"],"I googled":["and"],"I got":["rid","rid","rid","similar","nitpicked","when","rid","a","caught","to","some","the","everything"],"I gotta":["try"],"I grok":["Clojure"],"I guarantee":["you"],"I guess":["I","it","leaving","it’s","I","I","it's","I","one","I","it’s","there's","I","I","I","using","all-caps?","I"],"I guess)":["to"],"I guess,":["in","I'm"],"I guess.":["I've","This","Thanks","Maybe"],"I guess.)":["However,"],"I had":["not","done","used","any","considered","never","to","smoother","in","thought","destructuring","on","some","a","my","when","to","no","trouble","been","stopped","```cond```","to","to","to","to","never","it","to","committed","screwed","forgotten","a","accidentally","to","only","all"],"I had't":["actually"],"I hadn't":["thought","been","realized","done","worked"],"I hadn’t":["considered"],"I hand":["a"],"I hate":["Java","you.","falling","the"],"I have":["fixed","two","though.","no","seen","seen","significantly","some","seen","I","to","to","my","trouble","is","ever","absolutely","not.","an","to","yet","to","no","to","a","to","used","no","had","a","to","overdone","just","no","to","some","said.","noticed","a","no","found","a","to","some","tried","seen","no","to","any","programmed","added","updated","also","to","this","a","done",":pre","to","to","updated","two","is","is","just","updated","a","addressed","a","just","learned","ignored","found","found","here.","some"],"I have,":["I","barring","but"],"I have.":["But"],"I haven't":["seen","seen","thought","heard","seen","done","finished","yet","seen","seen"],"I hear":["shouting,"],"I hope":["that's","is","`gene`"],"I improve":["here?"],"I improved":["according"],"I included":["the"],"I incorporated":["that"],"I initially":["did","tried","had","went"],"I input":["something"],"I instead":["ended"],"I intentionally":["used"],"I introduced":["a"],"I just":["recalled","had","started","didn't","started","did","tried","wanted","saw","noticed","end","learned","use","forgot","managed","got","wanted","learned","ran","read","wanted","used","cheated","did","learned","learned","learned","learned","learned","wouldn't"],"I keep":["submitting","wondering","track","forgetting","forgetting","forgetting","forgetting"],"I kept":["trying","calling"],"I kind":["of","of"],"I kinda":["like"],"I knew":["I","that"],"I know":["there",":)","I","that","what","it","that","it's","I","it.","I","the","this","you'll"],"I know!":["Annoying,"],"I know,":["the"],"I lean":["on"],"I learned":["that","which","about","something!","it","sort-by","about"],"I learnt":["a"],"I leave":["it"],"I left":["`,,,`"],"I lifted":["the"],"I like":["that","the","that.","that","it.","that","this.","it.","how","it","the","your","the","the","what","that.","that","the","them","it!","to","my","your","the","the","the","how","this.","that","the","that","the","it.","where","the","the","the","the","the","it.","it.","the","that","that","this","it.","in","that","this","it","the","version","your","your","that","the","the","that","the","the","the","how","what","how","how","having","to","that","the","this","that","it","how","the","how","`trim-stuff`,","the","how","your","the","it!","how","the","the","your","your","the","it!","how","it.","the","that","the","the","the","the","it","the","the","it.","that","practicing","the","it!","the","how","the","the","your","to","the","the","the","the","the","the","the","the","your","the","phrase.","your","the","that"],"I liked":["until","the","the"],"I limit":["the"],"I look":["at","forward","up.","forward"],"I look,":["I"],"I looked":["at","at"],"I love":["the","the","trimming","the","the","how","the","this","deleting","the"],"I lurk":["on"],"I made":["the","a","a","all","the"],"I managed":["to"],"I may":["have","probably","be"],"I maybe":["would"],"I mean":["accepting","just","would"],"I mean,":["yes,"],"I meant":["functions.","to","that","to","creating"],"I mentioned":["above."],"I mentioned.":["The"],"I messed":["up"],"I might":["have","have","tweak","be","have","get","to","be","inline","have","have","have","rewrite","have","like","have"],"I miss":["that?","something?"],"I missed":["that.","the","that","that!"],"I missing":["something","something","here?","something?","something","something","the"],"I modified":["the"],"I move":["parts"],"I moved":["them","it","it"],"I much":["enjoyed"],"I must":["be","say,","admit"],"I named":["my","the"],"I need":["to","to","to","the","to"],"I needed":["the","to","to"],"I needed,":["thanks."],"I never":["ran","quite"],"I normally":["wouldn't"],"I not":["finished"],"I noted":["it"],"I notice":["is"],"I noticed":["that"],"I often":["define","overlook"],"I only":["learn","use","have"],"I opted":["for"],"I originally":["had","had","read"],"I overlooked":["the"],"I personally":["like","prefer","prefer","think,","think","would","don't"],"I picked":["up"],"I played":["around"],"I prefer":["to","to","native","to","the","statements","the","putting","the","to","your","the","the","to"],"I preferred":["your"],"I probably":["should","should","have","would"],"I promise":[";)"],"I provide":["with"],"I pushed":["an","a","the"],"I question":["the"],"I quite":["enjoyed"],"I ran":["the"],"I ran.":["Maybe"],"I rather":["liked","agree","like","like"],"I read":["the","the"],"I realize":["there's","that","that"],"I realized":["what","I","the","that"],"I really":["like","like","like","like","like","appreciate","like","like","think,","like","like","like","wanted","would","like","like","want","like","don't","like","wish","don't","wish","like"],"I recalled":["the"],"I received,":["this"],"I reckon":["like"],"I reconsidered":["the"],"I refactored":["to","transform-char"],"I relied":["mostly"],"I remember":["needing","reading"],"I removed":["`*-response`","the"],"I renamed":["to"],"I respond.":["That"],"I restrained":["from"],"I returned":["the"],"I reused":["the"],"I right":["in"],"I run":["the"],"I sacrificed":["some"],"I said":["it.","before:"],"I saw":["'true'","in","so","some"],"I second":["@drake's"],"I see":["now","now","and","it","something","the","people","the","this","I","your","that","that","also","you","that","I"],"I see!":["Ok,"],"I see.":["I"],"I seem":["to"],"I sent":["Bob"],"I seriously":["appreciate"],"I settled":["on","on"],"I shall":["just"],"I should":["stick","do","be","have","really","have","have","have","have","be","be","revisit","export","be","use","be","have","be","have"],"I should've":["used."],"I shouldn't":["have"],"I simplified":["this"],"I skip":["a"],"I so":["often"],"I solved":["this."],"I somehow":["missed"],"I sometimes":["feel"],"I sort":["of"],"I specifically":["were"],"I spot":["some"],"I start":["throwing"],"I started":["with.","out","out","out","splitting","separate","looking","by"],"I stated":["earlier,"],"I still":["have","kind","don't","believe","like","like","think","need","thinks"],"I struggled":["for","with"],"I stumbled":["upon"],"I submitted":["a","instead","a","a","this!","a","a"],"I submitted.":["There"],"I suggest":["extracting","you","taking"],"I suggested":["something","such"],"I suppose":["that","that","that","I","that","you","that","that","if"],"I suppose.":["Generally"],"I suspect":["that"],"I swapped":["the"],"I switched":["it","to","the","the","from"],"I take":["your","your"],"I talk":["to"],"I tend":["to","to","to","to","to"],"I then":["decided"],"I therefore":["thought"],"I thing":["[`letfn`](http://clojuredocs.org/clojure_core/clojure.core/letfn)"],"I think":["it","I","what","what","this","this","this","your","that","this","you're","what","I","question?","this","for","this","about","the","it's","it's","there","this","it","it’s","the","it's","it's","`screaming?`","you're","it","comments","I'm","you","this","it's","it","you","you","it's","you","I'd","I","something","the","assigning","`split`ting","you","it's","this","it","about","it","the","of","the","this","your","this","this","that","we","private","I","that","I","the","it's","I","it","it","only","requiring","your","it's","it's","my","only","you're","we're","`long-word-count`","it","that","they","it's","it","about","the","you","transcribing","makes","the","they","that","I","it","`defn-`","the","in","not.","this","that","its","I","I","using","I","it","I'll","this","I","a","it's","you've","it","it","there","that's","this","that's","it","for","`defn-`","I'll","it's","depending","that's","knowing","the","I","it's","you","the","it","we're","this","of","I","this","I'll","implementing","I'd","I","such","`:refer`ring","you","you","`anagram-of?`","your","I","it's","the","there","there's","it's","that","in","I","the","there","you","it","using","that's","the","you","the","the","the","it","I","this","it's","the","is","you","letter","the","the","there","you","I","this","you","that","the","things","that","that","the","it","you","your","putting","that","that","this","there's","there","`sorted-chars`","it's","it's","use","you","pre-calculating","that","I","most","with","`require`","it","taking","`:require","is","it's","that's","`count`","you're","your","there","this","with","the","the","you're","I","does","you","trying","the","if","that","a","you've","you're","the","is-","this","this","using"],"I think,":["is","this","you"],"I think.":[";)","As"],"I thinka":["that"],"I thought":["of","of","that","```.endsWith```","a","it","about","about","I’d","of","of","clojure","it","I","about","it","that","the","about","I'd","it","clojure","I","submitting","about","of","that","that","of","it","I","about"],"I tired":["again"],"I to":["continue"],"I took":["the","the","was","a","a","advice","it","a"],"I totally":["missed","would","would","missed","didn't","forgot","whiffed","missed"],"I treated":["`let`"],"I tried":["```use","yesterday","`last`","that","to","it","to","not","it","to","writing","the","that,","to","to","to","to","out"],"I try":["to","that","to","to","to","to","to"],"I turned":["it"],"I typically":["turn"],"I understand":["what","it","the","correctly,","there","that","that","why","what","correctly,","the"],"I understand,":["the"],"I updated":["to","the","code"],"I use":["textmate","last.","that","`partial`","emacs'","it","```clojure.string/replace```.","\"math\"","`:only`),"],"I used":["clojure.string/upper-case.","`last`","it?","it","`clojure.string.blank?`","a","this","it","`sort`,","the","this","```(=","to","`let","sort-by"],"I usually":["see","omit","use"],"I validate":["that"],"I very":["much"],"I violated":["the"],"I want":["to","to","to","to","to"],"I wanted":["to","to","to","to","to","to","to","to","to","to","to"],"I was":["unsure","thinking","not","not","in","trying","going","reading","searching","wondering","actually","thinking","actually","going","just","thinking","hiding","very","using","looking","mostly","looking","trying","thinking","sleepy.","not","trying","getting","blinded","having","trying","getting","surprised","wrong.","thinking","creating","originally","also","wondering","trying","going","understanding","pleasantly","consciously","wondering","missing","seeing","so","thinking","divided","just","pleasantly","bewildered","working","interested","surprised","using","hoping","reading","able","going","mapping","inconsistent","typing","wrong","actually","using","pushed","supprized","separating","introducing","on"],"I wasn't":["sure","sure","able","aware","sure","aware","aware","sure","familiar","aware","aware","aware","sure","as"],"I wasn’t":["aware"],"I went":["with","back","about","with","the","and","with","ahead","back","to"],"I were":["concerned","at","to","running"],"I will":["approve","stick","mark","nominate.","fix","submit","take","add","think","happily","take","go","look","review","be","probably","clarify","consider","organize","fix","fix","try","move","stay","probably","grant","change","probably","revise","be"],"I wish":["this","I'd"],"I won't":["grill","hold","hit","argue","be","comment"],"I wonder":["if","how","if","what","if","if","if","if","how","if","if","if","if","about","if","if"],"I worked":["out"],"I worry":["that"],"I would":["argue","argue","suspect","argue","at","drop","probably","add","name","highly","also","say","mention","probably","be","be","suggest","have","personally","argue","suggest","love","not","probably","think","probably","probably","say","replace","be","consider","be","get","prefer","be","probably","treat","probably","probably","remove","argue","be","prefer","change","add","rather","suggest","change","prefer","rather","try","just","expect","use","have","end","need","like","suggest","rename","describe","have","just","call","try","recommend","need","comment","just","consider","mutate","just","be","usually","expect","still","say","just","prefer","leverage","prefer","also","append","like","suggest","however","make","consider","call","just","expect","definitely","prefer","expect","totally","not"],"I would,":["however,"],"I wouldn't":["be","be","go","call","be","write","know","use","be","be","say"],"I write":["a"],"I wrote":["just","the",":)","it","above"],"I you":["will"],"I'd also":["love","argue"],"I'd appreciate":["hearing","any"],"I'd avoid":["it."],"I'd be":["happy","happy","tempted","willing","delighted","open"],"I'd change":["is"],"I'd clear":["up"],"I'd consider":["pulling","using"],"I'd definitely":["recommend!).","factorize"],"I'd either":["need"],"I'd end":["it"],"I'd enjoy":["learning"],"I'd especially":["like","like"],"I'd expect":["to","to"],"I'd extract":["it"],"I'd forgotten":["about","about"],"I'd generate":["words"],"I'd go":["with","first"],"I'd hate":["to"],"I'd have":["declared"],"I'd import":["clojure.string/lower-case:"],"I'd inline":["```no-quit?```"],"I'd just":["have"],"I'd like":["to","to","to","to"],"I'd love":["to","to","to","a","your","to"],"I'd make":["the","the"],"I'd never":["seen"],"I'd personally":["have","love","return","leave","go"],"I'd prefer":["using","not"],"I'd probably":["make","go","put","use","just","use"],"I'd rather":["avoid","communicate","suggest","use","stick"],"I'd really":["like","appreciate","appreciate"],"I'd recommend":["trying"],"I'd remove":["any"],"I'd rename":["the"],"I'd say":["it's","go"],"I'd still":["support"],"I'd suggest":["considering","adding","you","breaking","here","indenting","would"],"I'd take":["a","a"],"I'd thought":["to"],"I'd try":["to"],"I'd use":["predicate"],"I'd wager":["that"],"I'll add":["the","`sts=2`"],"I'll already":["take"],"I'll attempt":["it"],"I'll be":["working"],"I'll certainly":["watch"],"I'll clean":["that"],"I'll come":["back"],"I'll consider":["an"],"I'll definitely":["look"],"I'll dig":["into"],"I'll do":["that.","that."],"I'll factor":["out"],"I'll give":["it","them"],"I'll go":["with"],"I'll have":["a","to","to","a","a","to","a"],"I'll iterate":["on"],"I'll keep":["that","an"],"I'll leave":["it","my","that"],"I'll let":["you"],"I'll look":["into","that","into","into","into"],"I'll make":["that","that","it"],"I'll move":["them."],"I'll need":["to"],"I'll not":["hold"],"I'll probably":["switch","submit","revise","do"],"I'll refactor.":["Hopefully"],"I'll rewrite":["the"],"I'll see":["what"],"I'll take":["the","the"],"I'll tell":["you"],"I'll think":["about","about"],"I'll try":["that.","what","your","it.","a"],"I'll unlock":["the"],"I'll update":["my"],"I'll upload":["the"],"I'll use":["this"],"I'm a":["bit","noob","clojure","little","clojure","bit"],"I'm adding":["another"],"I'm almost":["certain"],"I'm also":["not","not","wondering"],"I'm always":["finding","finding"],"I'm am":["not"],"I'm asking":["if"],"I'm avoiding":["using"],"I'm aware":["of)","of","of","that","of"],"I'm barking":["up"],"I'm barred":["from"],"I'm beginning":["to"],"I'm coming":["up"],"I'm confused":["because","to"],"I'm curious":["to","how","why","about"],"I'm currently":["trying"],"I'm definitely":["not","a"],"I'm doing":["in","one","in"],"I'm doing.":["First"],"I'm enjoying":["it!"],"I'm especially":["thinking"],"I'm excited":["to"],"I'm explaining":["this"],"I'm fairly":["new","inexperienced"],"I'm finding":["it","this","Clojure"],"I'm following":["Clojure-style."],"I'm getting":["a","a","a"],"I'm glad":["I"],"I'm going":["to","to","to","to","to","to","to","to","to"],"I'm happy":["to","with"],"I'm having":["fun","a","the","trouble"],"I'm hoping":["that"],"I'm interested":["in"],"I'm kind":["of","of"],"I'm learning":["tons","Clojure"],"I'm leaving":["the"],"I'm liberal":["in"],"I'm missing":["something","out"],"I'm more":["concerned"],"I'm never":["sure"],"I'm new":["to","at","to","to","to","to","to","to"],"I'm no":["Clojure"],"I'm nominating":["this"],"I'm not":["sure","too","sure","sure","sure","particularly","sure","sure","sure","sure","sure","sure","really","too","sure","sure","a","sure","sure","worthy","100%","sure","aware","really","aware","sure","sure","familiar","in","sure","overly","sure","too","seeing","a","going","happy","quite","sure","sure","sure","completely","excited","sure","sure","sure","a","entirely","convinced","sure","certain","sure","a","much","sure","sure","very","sure","sure.","sure.","really","sure","sure","far","sure","crazy","seeing","sure","sure","sure","sure","sure","sure"],"I'm not.":["TBH,"],"I'm now":["somewhat","more"],"I'm on":["the","the","the","the","a"],"I'm only":["just","defining"],"I'm personally":["not","not"],"I'm playing":["around"],"I'm posting":["a"],"I'm prepared":["to"],"I'm pretty":["happy","sure","new"],"I'm probably":["missing"],"I'm proud":["of"],"I'm put":["off"],"I'm quite":["new"],"I'm rather":["enamored"],"I'm really":["finding","bad","not"],"I'm resubmitted":["a"],"I'm returning":["something"],"I'm shouting,":["but"],"I'm so":["horribly","confused."],"I'm somehow":["missing"],"I'm sorry,":["but"],"I'm still":["sorting","learning","fairly","pretty","pretty","working","unsure","very","fairly","going","somewhat","getting","mulling","adapting","digesting","a","getting","learning","new","not"],"I'm struggling":["with","to"],"I'm submitting":["a"],"I'm sure":["your","others","this","@marty"],"I'm sure)":["split"],"I'm surprised":["the"],"I'm thankful":["for"],"I'm torn":["with"],"I'm unaware":["of?"],"I'm unsure":["about","about"],"I'm updated":["all-caps?"],"I'm using":["paredit","`declare`"],"I'm very":["much","grateful","open"],"I'm weird,":["but"],"I'm wondering":["if","if"],"I'm working":["through"],"I'm your":["Nemesis..."],"I've added":["a","defined","an"],"I've already":["used","used!"],"I've also":["seen","gotten","seen","seen","updated","seen","seen"],"I've always":["avoided."],"I've been":["doing","a","doing.","the","spending","dabbling","taught","trying","following"],"I've certainly":["not"],"I've changed":["that","the"],"I've cleaned":["things"],"I've created":["`def`s"],"I've decided":["I"],"I've done":["enough"],"I've even":["used"],"I've ever":["tried","written.","written,"],"I've experimented":["with"],"I've forgot":["that"],"I've forgotten":["about"],"I've found":["`defn-`!","one"],"I've gone":["a"],"I've got":["just"],"I've gotten":["this","a"],"I've had":["so","decent","decent"],"I've heard":["you"],"I've imported":["blank?"],"I've incorporated":["those"],"I've just":["learned","started","realized"],"I've kept":["my"],"I've learned":["while"],"I've looked":["through"],"I've made":["myself","no","a","some"],"I've mentioned":["the"],"I've moved":["the"],"I've never":["seen","written","seen"],"I've not":["started","seen","used","seen","measured)"],"I've only":["seen","briefly","recently"],"I've overdone":["this","it","it,"],"I've personally":["used"],"I've picked":["up."],"I've played":["with"],"I've posted":["a"],"I've put":["`apply"],"I've reached":["my"],"I've read":["it","a"],"I've read,":["but"],"I've recently":["updated"],"I've refactored":["to"],"I've removed":["it"],"I've replaced":["my"],"I've rewritten":["question?"],"I've said":["that"],"I've seen":["both,","is","doc-strings","use","the","a","recently","in","in","in","in","that","map"],"I've seen,":["but"],"I've shown":["in"],"I've split":["the","the"],"I've stated":["in"],"I've still":["only"],"I've submitted":["a","another","a","a","a","this"],"I've tested":["that"],"I've tossed":["in"],"I've tried":["to","to","to","with"],"I've updated":["my","the","the","the","the","my","to","the"],"I've used":["that","it","a","\"s\"","`frequencies`","\"code"],"I've written":["previously,","after"],"I've written,":["you","I","so"],"I've written.":["Be"],"I've wrongly":["suggested"],"I've yet":["to"],"I.e. (let":["[a"],"I18n translations":["etc"],"IFn protocol":["-"],"IFn protocol,":["so"],"IFn, and":["passing"],"IM?\", he":["would"],"IMHO is":["not"],"IMHO, especially":["for"],"IMO Bob":["is"],"IMO it":["is"],"IMO the":["default","conditions"],"IMO), another":["use"],"IMO, `frequencies`":["is"],"IMO, it":["depends"],"IMO, it's":["mostly"],"IMO, replacing":["characters"],"IMO, the":["literals"],"IMO. I":["guess"],"IMO. What":["do"],"IO boundary,":["not"],"IS SHE?\"":["(which"],"Ideally you":["would"],"Idiomatic stuff":["like"],"If I":["sent","were","keep","hadn't","just","try","understand","had","am","wanted","understand"],"If I'm":["barred"],"If `\\U`":["is"],"If anyone":["has","has"],"If feel":["like"],"If it":["weren't"],"If key":["is","is"],"If one":["of","of"],"If that's":["not"],"If the":["nucleotides","representation","functions","message","second"],"If there":["was"],"If these":["fairly"],"If this":["would","were"],"If we":["omitted","did"],"If you":["do","don't","wanted","name","`(require","used","mean","want","re-ordered","are","were","think","change","go","want","would","can,","still","get","use","want","want","have","have","change","use","shamelessly","do","use","don't","treat","wanted","inlined","just","separate","want","assume","want","want","capture","define","lowercase","want","swap","use","lower-case"],"If you'd":["rather","like"],"If you're":["ready","willing","going","trying","interested"],"If your":["namespace","`anagram-of?`"],"If, in":["the"],"Ignore Version3":[":)"],"Ignore this":["one.","...","one."],"Ignoring the":["fact"],"IllegalArgumentException rather":["than"],"Implementation of":["includes-letters?"],"Importing the":["`clojure.string`"],"Improved clarity":["of"],"In (add),":["you"],"In Clojure":["that","is"],"In Clojure,":["it's","these","you"],"In `anagrams-for`":["you"],"In `bottle-phrase`":["and"],"In `first-line`":["you"],"In `line2`":["you've"],"In `random-robot-name`":["you"],"In `require`":["you"],"In `sort-grade`":["you"],"In a":["more","conditional,","C-ish","similar","small","few"],"In addition,":["consider","number_length"],"In answer":["to"],"In case":["of","of","of","of"],"In clojure":["you"],"In clojure,":["trailing"],"In code":["it's"],"In context":["of"],"In either":["case,"],"In fact":["it"],"In fact,":["I","that"],"In future":["you","consider"],"In future,":["please"],"In general,":["I","I'd","I","metadata","using"],"In hindsight,":["though,"],"In lisp":["we"],"In my":["new","solution","eyes","view"],"In normalization":["step,"],"In normalize-sentence,":["you"],"In order":["to"],"In other":["languages","words:","words,","words,","words,"],"In particular":["there"],"In particular,":["look","look"],"In practice":["you"],"In regards":["to"],"In return":["you"],"In some":["context"],"In something":["with"],"In terms":["of","of","of","of","of"],"In that":["particular","case,","case"],"In the":["previous","context","silence","end,","context","Clojure","spirit","end","case"],"In theory,":["`count-nucleotides`"],"In this":["case,","particular","simple","case,","iteration","case,","problem,","case,","case","case,","case","iteration","case,"],"In what":["scenario"],"In your":["first","predicate","opninion,"],"Incorporated advice":["on"],"Indeed the":["reader"],"Indeed using":["the"],"Indeed, I":["have"],"Indefinite articles":["in"],"Indentation can":["be"],"Indentation doesn't":["look"],"Indentation inside":["the"],"Initially did":["this"],"Initially, I":["thought"],"Inlining the":["period"],"Input bit?":["Without"],"Inside namespace":["definition,"],"Inside of":["`noralize`,"],"Inspired by":["@kenyatta's"],"Instead I":["attempted"],"Instead of":["\"Whatever\",","\u003ccode\u003eletfn\u003c/code\u003e","using","resorting","nested","weeding","splitting","```(.trim","using","`question?","writing","passing","lifting","`(into","`(range","nested","replacing"],"Instead we":["pass"],"Instead, you":["go"],"Integer conversion.":["I've"],"Intent is":["clear,"],"Interesting ...":["the"],"Interesting approach.":["I'm"],"Interesting point":["on"],"Interesting that":["you've"],"Interesting to":["map"],"Interesting use":["of","of"],"Interesting! I":["started"],"Interesting, I":["was"],"Interesting. I":["took","thought"],"Interesting. You":["might"],"Interface and":["seq-able."],"Interop-The Dot":["special"],"Introduced `cond`":["which"],"Introducing string":["operations"],"Is ?":["more"],"Is `dont-know?`":["the"],"Is `w12req`":["a"],"Is closing":["parens"],"Is it":["necessary","common","too","worthwhile","a","worth","possible"],"Is just":["to"],"Is must":["be"],"Is not":["more","necessary"],"Is that":["intentional.","enough","you","the"],"Is the":["`nucleotides`","style","`let`","functionality"],"Is there":["a","a","a","a","something","a","something","an","any","an","another","a","a","a","any","a","a","any","something","a","nothing","a","a","any","a","a","a","a","a","some","something","some","a","possibly","a","a","a","a","a","a","an","any"],"Is this":["something","passing","not","a","is","still","an","an","about","what"],"Isn't `(=":["(clojure.string/upper-case"],"Isn't `nucleotide-count`":["supposed"],"Isn't a":["string"],"Isn't it":["better","possible"],"Isn't there":["a"],"It \"breaks\"":["the"],"It actually":["was"],"It addresses":["the"],"It allows":["the"],"It almost":["seems"],"It also":["means","matches","seems","brings","didn't","works"],"It came":["down"],"It can":["be","go.","also","be"],"It could":["benefit","be"],"It definitely":["is"],"It describes":["in"],"It didn't":["really","make"],"It does":["seem","keep"],"It doesn't":["appear","seem","look","tell","look","look"],"It doesn’t":["account"],"It feels":["less","a","cleaner","odd","more","a"],"It generates":["a"],"It helped":["me","me","me"],"It helps":["to","that"],"It implies":["that"],"It is":["complex,","just","a","inconsistent.","a","a","kind","a","idiomatic","distracting","too","clearer","also","preferable","possible","needed","possible"],"It just":["reads","takes","looks","goes","doesn't"],"It leads":["to"],"It looks":["good.","like","like","like","like","like","like","like","great","like:","good.","good","like","good."],"It made":["me","my"],"It makes":["the","sense","it"],"It may":["be","be","simplify","help","take","manifest"],"It means":["```lower-case```"],"It might":["be","seem","be","also","make","be","simplify","also","make","be","be","be","be","be","be","make","be","be","be","read","be","be","be","be"],"It obfuscates":["the"],"It probably":["is..."],"It really":["makes"],"It rocks":["indeed"],"It seemed":["simple","so"],"It seems":["like","a","like","a","I","to","like","that","ugly","like","like","like"],"It should":["also","return","also"],"It still":["feels"],"It took":["me","less","me","me"],"It turns":["out"],"It was":["a","suggested","something","a","just","pointed","suggested","a"],"It wasn't":["actually"],"It will":["be","make","make","be"],"It works":["great","but...","roughly","and"],"It would":["be","help","also","be","be","be","be","be","be","be","simplify","be","be","look","also","be","be","scale","make","look","be","probably"],"It'd be":["clearer"],"It'll make":["the"],"It's a":["little","character","little","pleasure","small","lot","bit","very","good","logical","test","good"],"It's actually":["`let`"],"It's almost":["like","exactly"],"It's also":["worth","not","idiomatic","common","common","useful","the"],"It's always":["nice","worthwhile"],"It's arguments":["are"],"It's based":["on"],"It's basically":["imperative"],"It's been":["somewhat"],"It's best":["not"],"It's better":["to"],"It's certainly":["more","a"],"It's clear":["what","the"],"It's common":["in","in"],"It's definitely":["possible"],"It's especially":["nice"],"It's fine":["either"],"It's generally":["considered","preferred"],"It's good":["you","functional"],"It's great":["to","for","to"],"It's hard":["to","to"],"It's idiomatic":["to","to"],"It's interesting":["that"],"It's interesting,":["but"],"It's just":["a","that"],"It's longer":["than"],"It's making":["decisions"],"It's more":["idiomatic"],"It's much":["closer"],"It's native":["Clojure,"],"It's nice":["to"],"It's not":["specific","really","more","really","clear","about","necessarily","really","covering","about","uncommon"],"It's often":["more","good"],"It's only":["a"],"It's optional":["though"],"It's possible":["to"],"It's pretty":["clear","simple,","common"],"It's primary":["purpose"],"It's probably":["more","a","not","fine","a"],"It's really":["matter"],"It's recommended":["that"],"It's slightly":["more"],"It's something":["I've"],"It's sometimes":["nice"],"It's syntactically":["idiomatic"],"It's the":["function","little"],"It's too":["nit-picky"],"It's typical":["Clojure/Lisp"],"It's unspecified,":["but"],"It's worth":["trying","mentioning"],"Item 5":["..."],"Items 1-4":["..."],"Iteration 3":["is"],"It´s not":["more"],"I’d apply":["them"],"I’d be":["proven"],"I’m brand":["new"],"I’m not":["saying"],"I’m still":["confused"],"I’ve developed":["writing"],"I’ve dropped":["the"],"I’ve started":["with"],"JVM doesn't":["support","support"],"JVM instances?":["&gt;:)"],"JVM, such":["as"],"JVM. I've":["been"],"Java .toLowerCase":["(it's"],"Java 8":["time"],"Java API":["to","here"],"Java API,":["I","why"],"Java Calendar":["objects.","is","APIs,","APIs"],"Java String":["`.toUpperCase`"],"Java [strings](http://clojuredocs.org/clojure_core/clojure.core/fn)":["implement"],"Java and":["try"],"Java anyway":["so"],"Java but":["i"],"Java calendar":["interface"],"Java documentation":["for"],"Java does.":["And"],"Java for":["that"],"Java habits":["die"],"Java integration":["is"],"Java interop":["for","(`.charAt`,","in","form","is","calls","as"],"Java interop,":["but","but"],"Java interop.":["Lowercase"],"Java method":["calls.","is"],"Java method,":["endsWith"],"Java method?":["The"],"Java methods":["are","on","obviously"],"Java methods)?":["Also,"],"Java methods.":["I","Here"],"Java number":["classes"],"Java professionally":["for"],"Java programmer":["and"],"Java standard":["library"],"Java string":["API","methods"],"Java stuff":["for"],"Java underlying.":["It"],"Java well":["unless"],"Java's `.equals`":["when"],"Java's `Calendar`":["class"],"Java's reference":["equality"],"Java) can":["be"],"Java. Learned":["quite"],"Java. Whenever":["possible,"],"Java? I":["don't,"],"JavaScript and":["Ruby"],"Javascript ones":["I've"],"Javascript trail":["that"],"Javascript](http://exercism.io/submissions/2f68013a2d8cecc8ac177907), while":["technically"],"Joda Time":["(or"],"Joining back":["to"],"Joining the":["empty"],"Joy of":["Clojure\""],"Just a":["personal"],"Just doing":["a"],"Just don't":["get"],"Just figured":["out"],"Just for":["fun,"],"Just keep":["trying"],"Just make":["`hamming-value`"],"Just makes":["code"],"Just my":["opinions!"],"Just realized":["I"],"Just the":["kind"],"Just throwing":["this"],"Just to":["make"],"Just use":["`(str"],"Just wanted":["to"],"Just what":["I"],"Katrina got":["mad"],"Keep going":["in"],"Keep in":["mind,"],"Keep it":["simple."],"Keep them":["coming."],"L9 as":["descriptive"],"L9 to":["use"],"L9: Do":["you"],"LISP so":["you"],"LOL, didn't":["mean"],"Last nitpick":["and"],"Lastly, have":["you"],"Lastly, look":["at"],"Lastly, why":["the"],"Later, I":["moved"],"Latest iteration":["took"],"Lazy initialization":["of"],"Learned quite":["a"],"Learned some":["more"],"Leiningen is":["de"],"Let it":["help"],"Let me":["try"],"Let's see":["what"],"Like \"Hello\"":["vs"],"Like `(:require":["[clojure.string"],"Like how":["you"],"Like you":["say,"],"Likewise, it's":["slightly"],"Line 11":["&"],"Line 12":["-"],"Line 2":["-","-","-"],"Line 20":["-"],"Line 4-":["You"],"Line 5":["-","-"],"Line 6":["can"],"Lisp I":["have"],"Lisp language,":["but"],"Lisp reading":["ability."],"Lisp so":["it"],"Lisp style":["is","says"],"Lisp-like languages":["the"],"Lisp-like languages,":["really)_."],"Lists and":["vectors"],"Literally the":["first"],"Look Great":["for"],"Look at":["`frequencies`"],"Looking at":["the","it,"],"Looking good!":["About","(I'm","What","Here"],"Looking good,":["but"],"Looking snazzy":[":)"],"Looks better":["but"],"Looks clean":["and"],"Looks cool.":["Can"],"Looks effective.":["I"],"Looks generally":["good."],"Looks good":["to","to","to","to","to","--","to","to","to","to","enough",":)","enough","enough","to","overall.","overall.","overall.","overall.","overall.","overall.","overall.","overall.","-"],"Looks good!":["One","Not"],"Looks good,":["the","the","though","but","but","but","just"],"Looks good.":["Did","Maybe","What","One","Have","Generally,","In","Some","However,","I'm","Is","There's","I","I've"],"Looks great":["--",":)",":)",":)","anyway.","though.","-","-"],"Looks great!":["I","My","The"],"Looks great,":["and"],"Looks great.":["The"],"Looks just":["about"],"Looks like":["I","you","we're","the","the","you","I'm","you"],"Looks nice":["and"],"Looks nice!":["Cheers","I"],"Looks nice,":["thank","however","however"],"Looks nice.":["To"],"Looks pretty":["good","good!","good.","good","good","good,","good"],"Looks quite":["readable."],"Looks really":["good.","nice"],"Looks reasonable":["other"],"Looks so":["much"],"Looks solid":["otherwise."],"Looks very":["nice."],"Lots of":["stuff"],"Love it":["when"],"Love the":["use","succinctness"],"Lowercase hyphenated":["names"],"Lowercase, hyphenated":["names"],"Lowercasing in":["`alphagram`"],"Lowercasing the":["entire"],"MUST BE":["TRUE)]}"],"MVP. Worth":["nothing"],"Macros might":["be"],"Macros with":["complete"],"Made methods":["non-public."],"Made the":["regex","cond"],"Magic constants":["are"],"Mainly readability":["changes"],"Maintainability would":["be"],"Make char-counts":["a"],"Make the":["logic"],"Makes it":["easier"],"Makes sense":["indeed"],"Makes sense!":["The"],"Makes the":["transformation"],"Making it":["DRYer"],"Making sure":["you've"],"Making the":["intent"],"Making your":["methods"],"Man I":["totally"],"Manually incrementing":["`s`"],"Many thanks":["for"],"Many things":["surprised"],"Map itself":["can"],"Map lookup":["can"],"Map lookups":["can"],"Map. The":["code"],"Maps are":["also"],"Maps can":["be","be"],"Maps section":["of"],"Maps) are":["not."],"Marick http://vimeo.com/19404746":["."],"Marick's FPfOOP":["book"],"Matter of":["taste"],"May I":["ask"],"May end":["up"],"Maybe \"normalizer\"":["would"],"Maybe :require/:refer":["in"],"Maybe I":["was"],"Maybe I'll":["come"],"Maybe I'm":["missing"],"Maybe `dna-to-rna`":["is"],"Maybe a":["better","bit","style"],"Maybe add":["additional"],"Maybe align":["the"],"Maybe assign":["nucleotide"],"Maybe assigning":["nucleotide"],"Maybe binding":["inflections"],"Maybe consider":["the"],"Maybe in":["the"],"Maybe indeed":["I"],"Maybe input":["validation"],"Maybe it":["would"],"Maybe it's":["just","worth"],"Maybe my":["test"],"Maybe put":["some"],"Maybe scoping":["these"],"Maybe simpler":["implementation"],"Maybe some":["generalized","universal","type"],"Maybe something":["like","like:"],"Maybe that":["would"],"Maybe that's":["what","a"],"Maybe the":["reason"],"Maybe there":["is"],"Maybe there's":["a"],"Maybe there’s":["a","a"],"Maybe they'd":["be"],"Maybe use":["something"],"Maybe with":["`String#toUpperCase`?"],"Maybe you":["could","check","take","could","could","could","could","can"],"Meier (gigasquid),":["I"],"Memoize the":["`letters`"],"Mercury function":["like:"],"Might be":["better","nice","cool","useful"],"Might decrease":["readability,"],"Might it":["be","be"],"Might look":["nicer"],"Might that":["be"],"Mind looking":["at"],"Minor nit.":["It's"],"Minor nitpick":["but"],"More about":["Clojure"],"More importantly,":["an"],"More of":["it"],"More on":["NS","formatting"],"More optimal":["structure"],"More than":["that,","that,"],"More that":["if"],"Most editors":["(I"],"Most examples":["I've"],"Most of":["this","the","the"],"Most people":["recommend","have","I"],"Moved equality":["check"],"Moved to":["a"],"Moving `zipmap`":["into"],"Moving actual":["`map`"],"Moving checks":["to"],"Moving my":["comment"],"Moving the":["conditional"],"Mr. Rogers?\",":["for"],"Much appreciated":["[zoldar](/zoldar)"],"Much better":["!!","after"],"Much clearer":["in"],"Much happier":["with"],"Much improved":["from"],"Multimethods would":["probably"],"Multiple `doseq`":["can"],"Must be":["a"],"Must have":["had"],"Must learn":["more."],"My 2":["cents."],"My Clojure":["isn't"],"My Python":["track"],"My `shouting?`":["predicate"],"My above":["points"],"My angry?":["function"],"My approach":["was"],"My approved":["version"],"My biggest":["problem"],"My earlier":["revision"],"My experience":["leads"],"My first":["try","take","draft","ever"],"My gut":["reaction","says"],"My initial":["reaction"],"My next":["iteration","iteration"],"My only":["comment","suggestion","nitpick","nitpick","intent","excuse","suggestion","nit,","complaint","nitpick","suggestion"],"My only,":["small,"],"My problem":["with"],"My solution":["(which","is","wasn't"],"My take":["is","on"],"My test":["cases"],"My understanding":["is","is"],"My use":["of"],"My very":["first","first"],"My wrong.":["Again,"],"NLP based":["solution"],"NOT defining":["these"],"NS and":["some"],"NS declaration":["with"],"NUMBERS (map":["char"],"NUMBERS and":["UC"],"Nah ...":["the"],"Nah, I'm":["going"],"Names help":["clarify"],"Naming (cform":["vs"],"Naming could":["be"],"Naming is":["hard."],"Naming them":["might"],"Naming things":["with"],"Naming variable/docs":["could"],"Naturally, I":["cheated"],"Neat solution!":["Thank"],"Neat solution.":["Slight"],"Neat! I":["like","like"],"Neat, I've":["forgotten"],"Nemesis... You":["could"],"Nested ifs":["like"],"Never knew":["you"],"New iteration":["coming"],"New submission":["on"],"New version":["with"],"Next I'd":["recommend"],"Next submission":["looks"],"Next work":["on"],"Nice !!":[","],"Nice --":["I","this"],"Nice and":["straightforward.","compact.","clean"],"Nice catch":["on"],"Nice concise":["solution,"],"Nice doc":["strings"],"Nice overall":["solution."],"Nice short":["functions."],"Nice small":["functions"],"Nice solution!":["I","."],"Nice solution.":["I"],"Nice structure":["and"],"Nice suggestions!":["Thanks"],"Nice that":["you"],"Nice tip":["on"],"Nice to":["see","be"],"Nice touch":["with","with"],"Nice use":["of","of","of","of","of"],"Nice work":["with"],"Nice! I":["like","like","really"],"Nice! I've":["also"],"Nice! Would":["it"],"Nice! `frequencies`":["is"],"Nice, I":["like"],"Nice, although":["(and"],"Nice, looking":["good."],"Nice, readable":["code."],"Nice. Alternatively":["there's"],"Nice. I":["actually"],"Nice. One":["(minor)"],"Nice. Using":["`clojure.string/blank?`"],"Nice. Would":["be"],"Nicely done":[":thumbsup:"],"Nicely done;":["I"],"Nil and":["non-nil"],"No I":["won't"],"No I'm":["not."],"No doubt":["the"],"No idea":["why"],"No need":["to","of","for","to","for","to","to","to","for"],"No parentheses":["needed"],"No problem.":["Since"],"No reason":["to"],"No sense":["exposing","exposing"],"No test":["is"],"No worries,":["I"],"No, I":["agree,","just"],"No, no":["idea"],"No. I":["have"],"Nobody decried":["me"],"Non-java way":["to"],"Non-public functions,":["although"],"Nope, I":["didn’t.","just","wasn’t"],"Normally, methods":["named"],"Not a":["fan","big"],"Not anymore,":["though."],"Not happy":["with"],"Not need":["to"],"Not nuts":["about"],"Not part":["of"],"Not so":["the","important","sure"],"Not sure":["how","what","if","how","why","how","if","if","why","what's","if","about","what"],"Not that":["that","it's","yours"],"Not the":["shortest","best"],"Note also":["that"],"Note that":["your","you","you"],"Nothing beyond":["code"],"Nothing says":["\"does"],"Nothing to":["declare.","declare,"],"Notice the":["argument"],"Now I":["think"],"Now I'm":["so"],"Now how":["about"],"Now it's":["faster,"],"Now only":["response-for"],"Now that":["I","I","all","you","you"],"Now, if":["you're"],"Now, in":["`response-for`"],"Nucleotides are":["validated"],"NullPointerException. May":["end"],"O(n *":["log","log","log","log(n))"],"O(n log":["n).","n)."],"O(n) instead":["of"],"O(n) way":["to"],"O(n) where":["this"],"OF the":["phrase's"],"OK here,":["but"],"OK just":["to"],"OK thanks":["@stacy"],"OK, and":["even"],"OK, found":["the"],"OK... I":["did"],"OMG, that":["format"],"ONE CRAZY":["CHARACTER!\""],"OO code,":["on"],"OO code.":["It's"],"O_O more":["easy"],"Observe that":["a","map"],"Obviously as":["the"],"Obviously in":["this"],"Obviously that":["won't"],"Obviously this":["is"],"Of course":["if","this","it","there","what","that's"],"Of course,":["in","the"],"Oh I":["get"],"Oh beer":["song,"],"Oh good":["catch"],"Oh here's":["one,"],"Oh hey,":["for"],"Oh no,":["I"],"Oh of":["course,"],"Oh right,":["might"],"Oh, I":["think","know"],"Oh, and":["you","for"],"Oh, just":["noticed","noticed"],"Oh, neat!":["That"],"Oh, perfect!":["I"],"Oh, right!":["It"],"Oh, thanks,":["you're"],"Oh, wow!":["I"],"Ohhh I":["didn't"],"Ok thanks":["@zoie","@treva"],"Ok, I":["think","wanted"],"Ok, I'll":["make"],"Ok, I've":["refactored","read","gone"],"Ok, after":["looking"],"Ok, is":["done"],"Ok, new":["version"],"Ok, now":["without"],"Ok, so":["on","is"],"Ok, thanks.":["What's"],"Ok, this":["is"],"Ok. This":["now"],"Ok. Understood.":["Thanks."],"Okay, another":["day,"],"Okay, now":["this"],"Okay, so":["nitpicking"],"Okay, sounds":["good."],"On a":["related","more"],"On another":["note,","point,"],"On first":["go"],"On moving":["classification","classification"],"On one":["hand,"],"On the":["other","other","other","other","other","first","other","first","`clean-phrase`","#{a"],"Once again,":["as"],"Once the":["not="],"Once you":["find"],"One (minor)":["point"],"One (super":["nitpicky)"],"One common":["idiom"],"One covers":["silence,"],"One explains":["the"],"One for":["all"],"One function":["to"],"One has":["to"],"One hint:":["`map`"],"One idea":["is"],"One last":["thing:","suggestion"],"One little":["thing","pick,"],"One minor":["consideration","thing","thing:","thing:","thing,"],"One more":["minor","thing","really","thing","little","thing.","nit.","thing:"],"One nitpick:":["map"],"One of":["my","my","the","the","the","your","those"],"One other":["thing","small","thing"],"One possible":["improvement"],"One problem":["with"],"One question":[","],"One should":["always"],"One small":["aesthetic","issue:","nit","nitpick"],"One style":["nit:"],"One that":["note,"],"One thing":["I","I","I'd","I","about","I","to","to","I"],"One tiny":["pick:","nit-pick","imperfection"],"One tip":["for","I"],"One to":["build"],"One way":["to"],"Only `nil`":["and"],"Only a":["single","few"],"Only difference":["between"],"Only things":["I"],"Ooh, thanks":["for"],"Oops sorry":["I"],"Oops, I":["don't","didn't","had"],"Oops, didn't":["realize"],"Oops. I":["submitted"],"Optionally, check":["for"],"Optionally, to":["avoid"],"Optionally, you":["can","could"],"Or `reduce`":["maybe?"],"Or again,":["perhaps"],"Or am":["I"],"Or at":["least"],"Or binding":["them"],"Or could":["you"],"Or did":["you"],"Or do":["you","you","you?"],"Or even":["better"],"Or is":["there"],"Or maybe":["just","it's"],"Or possibly":["`(-&gt;&gt;"],"Or using":["`letfn`"],"Or when":["simply"],"Or you":["could","could"],"Ordinarily I":["would"],"Originally, I":["switched"],"Other improvements":["could"],"Other nitpickers":["may","may","may"],"Other than":["that,","those","that,","that,","that","that,","that,","that,","that,","that","that,","that,","that,","that,","that","that","that,","that,","that,","that","that,","that","that,","that,"],"Otherwise `to-rna`":["becomes"],"Otherwise it":["looks"],"Otherwise it’s":["a"],"Otherwise looking":["really"],"Otherwise they":["might"],"Otherwise this":["looks","is","looks"],"Otherwise, it":["looks"],"Otherwise, it's":["great."],"Otherwise, looks":["great.","neat","nice!","great!","nice!","nice,","pretty","great","good."],"Otherwise, you":["should","may","can"],"Ouch and":["another"],"Ouch, and":["no"],"Ouch, right,":["the"],"Ouch, that":["was"],"Outermost `vec`":["is"],"Outstanding feedback":["from"],"Overall everything":["else"],"Overall it":["looks"],"Overall looks":["pretty","good.","good.","good","real","good.","real","nice.","really","great."],"Overall really":["good"],"Overall the":["solution","solution"],"Overall very":["clear"],"Overall, clean":["and"],"Overall, the":["solution"],"Overall, this":["is"],"O’Reilly and":["extensive"],"P.S. I":["am"],"PITA kind":["of"],"PITA, but":["code"],"PS: Sorry":["about","about"],"PS: don't":["tell"],"PS: nice":["to"],"Parentheses are":["unnecessary"],"Partial application":["does"],"Particularly since":["you"],"Pattern** bonus":["credit"],"Paul Revere":["comes"],"Per advice,":["I","simplified"],"Per your":["other"],"Performance hint:":["by"],"Performed some":["of"],"Perhaps I":["shouldn't"],"Perhaps `(and":["any-ucase-chars"],"Perhaps `all-caps?`":["should"],"Perhaps another":["nitpicker"],"Perhaps instead":["you"],"Perhaps something":["related"],"Perhaps throwing":["an"],"Perhaps wrapping":["the"],"Perhaps you":["should","could","could","could","could","could","could"],"Perhaps your":["predicates"],"Personally I":["find","like","prefer"],"Personally I'd":["prefer"],"Personally, I":["would"],"Picked up":["on"],"Played around":["with"],"Please advise":["on"],"Please also":["consider"],"Please approve":["it?"],"Please bear":["in"],"Please break":["the"],"Please check":["out","now","http://exercism.io/submissions/523f09786fd32d416c00001f"],"Please don't":["leave"],"Please guide":["me"],"Please ignore":["use","...","this"],"Please pay":["also"],"Please pick":["on"],"Please put":["`require`"],"Please stay":["consistent"],"Please take":["a"],"Please tell":["me"],"Please use":["`require`","`require`","lowercase,","`:require`"],"Plus it":["cleans"],"Plus the":["supplied"],"Plus your":["code"],"Point them":["out"],"Possibly `:require`":["the"],"Possibly `dosync`":["or"],"Possibly a":["pre"],"Possibly using":["partial"],"Pre-calculating the":["possible"],"Precedence is":["now"],"Predicate names":["in"],"Predicates can":["be"],"Predicates return":["booleans"],"Prefer `defn`":["to"],"Pretty clear":["solution!"],"Pretty happy":["with"],"Pretty hard":["to"],"Pretty minor,":["but,"],"Pretty much":["my","my"],"Pretty nice,":["actually."],"Pretty sweet":["usage"],"Pretty terse,":["but"],"Pretty useful!":["And"],"Previously I":["had"],"Probably because":["I","Clojure"],"Probably it’s":["because"],"Probably misunderstood":["your"],"Probably not":["a"],"Probably something":["that"],"Programming from":["O’Reilly"],"Props to":["@reanna"],"Protocol. The":["turn"],"Putting an":["if"],"Putting constants":["first"],"Putting it":["into"],"Python (Counter":["from"],"Python and":["other"],"Python as":["an"],"Python case,":["but"],"Python here,":["you"],"Python implementation,":["taking"],"Python rather":["than"],"Python track":["is"],"Python's \"\"\"":["syntax"],"Queens are":["on"],"Question: Did":["you"],"Questions certainly":["are"],"Quite like":["the"],"Quite possibly":["just"],"Quite scary":["in"],"RE and":["the"],"RE sounds":["good"],"README (\"yelling\"),":["not"],"README /":["specification"],"README again.":["It"],"README and":["in"],"README describes":["things"],"README file,":["ha."],"README has":["terms"],"README refers":["to"],"README so":["I"],"README. It's":["interesting"],"README. Plus":["the"],"README. The":["intent"],"README... perhaps":["I"],"README.md could":["be"],"README.md file":["does"],"REPL I":["sort"],"REPL and":["see"],"REPL it's":["good"],"REPL session":["below:","excerpt:"],"REPL session,":["is"],"REPL still":["had"],"REPL with":["no"],"REPL, it's":["good"],"REPL, please":["put"],"RNA acid":["where"],"RNA and":["DNA"],"RNA atoms,":["which"],"RNA literals":["into"],"RNA nucleotide":["and"],"RNA nucleotides":["is"],"RNA nucleotides,":["then"],"RNA strand":["is"],"RNA transcription":["assignment."],"RNA, ACGU,":["DNA,"],"Racket :)":["Maybe"],"Racket, which":["is"],"Ran 12":["tests"],"Ran 14":["tests"],"Rather brute-force":["and"],"Rather than":["code","individually","defining"],"Re-write to":["use"],"Re-wrote to":["take"],"Re: alphagrams,":["I"],"Re: lowercasing":["in"],"Re: parentheses,":["I"],"Re: the":["word"],"Read the":["functions"],"Reader--Macro characters).":["You"],"Readme talks":["about"],"Readme. Now":["I'm"],"Reads good":["to"],"Reads like":["the"],"Realized I":["could"],"Realized problems":["were"],"Really minor":["point,"],"Reduce the":["list"],"Refs and":["access"],"Refs are":["'coordinated'"],"Refs can":["be"],"Refs do.":["Atoms"],"Refs which":["have","have"],"Refs, Atoms,":["or"],"RegEx functions.":["I"],"RegEx straight":["from"],"RegEx there,":["rather"],"RegEx's are":["core"],"Regarding 4,":["the"],"Regarding code":["clarity:"],"Regarding line":["14"],"Regarding newlines,":["I'd"],"Regarding randomness":["-"],"Regarding spacing":["in"],"Regarding the":["second","naming,","\"more","api","first"],"Regardless solution":["looks"],"Regex check":["in"],"Regex instead":["of"],"Regex is":["a"],"Regex would":["allow"],"Regex, I":["played"],"Regexes avoided":["in"],"Regular expressions":["to"],"Relying a":["little"],"Relying just":["on"],"Remember that":["a","you","strings","you","Clojure","you","commas"],"Removed redudant":["call"],"Removed the":["parenthesis"],"Removing this":["doesn't"],"Rename `to-rna-1`":["to"],"Renamed parameter":["to"],"Repl. The":["preferred"],"Require the":["`clojure.string`"],"Resubmitted with":["```defn-```"],"Returning invalid":["number"],"Revere comes":["through"],"Revision #2":["takes"],"Rewrote to":["use"],"Rich Hickey's":["heart"],"Right now":["it's","the","I"],"Right now,":["the"],"Right you":["are!","are"],"Right, I":["will"],"Robot record,":["you"],"Robustness principle":["as"],"Rogers?\", for":["example,"],"Ruby &amp;":["Javascript"],"Ruby but":["in"],"Ruby doesn't":["have"],"Ruby i":["like"],"Ruby solution":["for","but"],"Ruby versions,":["numbers"],"Ruby. And":["yes"],"Ruby: public":["methods"],"Rubyist; perhaps":["it"],"Runnig it":["gives"],"SHE?\" (which":["would"],"SHOUTING taking":["precedence."],"SO that":["I"],"Sadly it":["looks"],"Same with":["the"],"Saved one":["line,"],"Saw some":["errors"],"Scala and":["in"],"Scala as":["well"],"Scala, Clojure":["also"],"Scala, you":["say?"],"Scheme and":["Java."],"Scheme years":["ago)."],"Second iteration":["addresses"],"Second, I":["don't","was"],"Second, a":["cleaner"],"Second, check":["out"],"Second, this":["is"],"See discussion":["on"],"See http://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require":["and"],"See if":["you"],"See my":["code","next","follow-up"],"See these":["links"],"Seems a":["bit"],"Seems exercism":["handles"],"Seems more":["complex"],"Seems pretty":["verbose"],"Seems to":["be"],"Seems weird":["because"],"Sets implement":["IFn,"],"Sets work":["also"],"Sets, and":["Maps)"],"Shane. I":["like"],"Shoot me":["if"],"Short but":["good"],"Shortest solution":["I"],"Shorthand for":["first"],"Should I":["align"],"Should `random-string`":["and"],"Should be":["something"],"Should have":["looked","followed"],"Should that":["be"],"Should the":["input","logic"],"Should this":["have"],"Should've really":["thought"],"Shout detection":["can"],"Silly me,":["this"],"Similarly `q?`":["is"],"Similarly there":["is"],"Similarly you":["could"],"Similarly, you":["could"],"Simpler than":["the"],"Simplified normalize":["function."],"Simplify the":["cleanup"],"Simply because":["I"],"Since \"invalid\"":["begins"],"Since I":["know"],"Since everything":["is"],"Since in":["this"],"Since it":["is"],"Since map":["is"],"Since the":["silent"],"Since this":["whole","asked"],"Since you":["seem","raised","`(:use","(:use","control","have"],"Since you're":["using","only","always"],"Since your":["tests"],"Slight overkill":["but"],"Small coding":["style"],"Small helper":["predicate"],"Small nitpick":["but"],"Smart approach.":["Alternatively,"],"Smart use":["of"],"So I":["can","began","think","did","think","made","use","changed"],"So I'm":["going"],"So IMO":["it"],"So ```dec-each-value```":["decrements"],"So `letters-all-caps?`":["while"],"So everything":["stating"],"So far,":["it's"],"So feel":["free"],"So for":["example,"],"So here's":["the"],"So if":["you","you"],"So ifnil?":["is"],"So in":["Clojure,","this","that"],"So instead":["of"],"So is":["there","there"],"So it":["really","should"],"So just":["a"],"So maybe":["a"],"So maybe,":["I"],"So one":["day"],"So props":["on"],"So something":["like:"],"So that":["could"],"So the":["function","ideal","running"],"So there's":["actually","actually","actually"],"So this":["process"],"So to":["keep"],"So were":["you"],"So what":["happens","happens","you"],"So yeah,":["I","you"],"So yes,":["I"],"So you":["could","can"],"So you're":["using"],"So your":["cond"],"So, I":["think"],"So, for":["instance,","example,"],"So, response-for-basic":["is"],"Solution with":["reduce"],"Some argue":["that"],"Some better":["options"],"Some characters":["(e.g."],"Some even":["do"],"Some formatting":["issues."],"Some may":["argue"],"Some minor":["nits:"],"Some of":["the","your"],"Some prefer":["for"],"Some previous":["code"],"Some things":["I","to","to"],"Somehow Clojure":["with"],"Someone actually":["suggested"],"Something else":["I"],"Something like":["`foo?`","this?","`(def","`(fn"],"Something of":["a"],"Something that":["has"],"Sometimes less":["code"],"Sometimes the":["value"],"Soon I":["hope!"],"Sorry about":["that.","that,","that,","some","my"],"Sorry everyone,":["I"],"Sorry for":["the","stupid","that.","being","so","not"],"Sorry guys":["--"],"Sorry twillis,":["i"],"Sorry! I":["should"],"Sorry, I":["had"],"Sorry, I've":["been"],"Sorry, double":["post"],"Sorry, my":["bad,"],"Sorry. I":["actually"],"Sort converts":["a"],"Sorting is":["O(n"],"Sot that":["the"],"Spacing of":["one"],"Speaking of":["tutorials,","performance:","which"],"Specifically the":["clojure.string"],"Spelling out":["the"],"Splitting on":["whitespace"],"Standards](http://dev.clojure.org/display/community/Library+Coding+Standards) the":["other"],"Started out":["with"],"Still getting":["used"],"Still learning":["clojure,"],"Still need":["to"],"Still pretty":["much","much"],"Still this":["doesn't"],"Still wish":["I","I"],"Still, `nucleotide-counts`":["doesn't"],"Strategy Pattern**":["bonus"],"String as":["a"],"String can":["be"],"String import":["which"],"String in":["Clojure"],"String interop.":["Also"],"String is":["perfectly","treated"],"String method":["calls"],"String replace":["seems","seems"],"String#endsWith method":["(from"],"String's `.endsWith`":["method."],"Strings (e.g.":["DNA)."],"Strings act":["as"],"Strings are":["`seq`-able","CharSequences."],"Strings as":["a"],"Strings can":["be","be","be","be","be","be","already"],"Strings extend":["sequence"],"Strings in":["`(upper-case","Clojure"],"Strings though.":["`(apply"],"Strings work":["with"],"Style Guide](https://github.com/bbatsov/clojure-style-guide)":["if"],"Style wise,":["I"],"Style, formatting,":["and"],"Style: your":["indentation"],"Submitted in":["error"],"Submitted test":["file"],"Subsequent calls":["to"],"Subtracting one":["can"],"Succint and":["to"],"Super readable.":["Nice"],"Sure --":["I"],"Sure enough.":["The"],"Sure it":["works"],"Sure, but":["I'm"],"Sure, that's":["a"],"Sure, this":["isn't"],"Sure, you":["could"],"Sure. You":["can"],"Surely possible":["in"],"Suspect you":["mean"],"Sweet, I":["love"],"Sweet. I":["think"],"Switched to":["your","a","Java"],"T and":["U?","U?","U","U?","U?","U","U."],"T is":["not"],"T with":["a"],"T's with":["U's."],"T-\u003eA, etc.":["Have"],"TBH, I":["actually"],"TDD fashion":["(with"],"THAT MUST":["BE"],"THE %^*@#$(*^":["ZOMBIES"],"THE HELL":["WERE"],"TIL: merge":["and"],"TL;DR when":["writing"],"Take a":["look","look","look","look","look","look","closer"],"Take advantage":["of"],"Take for":["example"],"Takes a":["bit"],"Taking in":["the"],"Tell me,":["what"],"Terminating the":["search"],"Test data":["is"],"Tests for":["constructor"],"Thank You.":["My"],"Thank you":["for","for","for","again","for","for","for","for","for","for","for","for","-",";)","for","for","@clara","for","for","for","@loma,","for","for","for","for","for","for","for"],"Thank you!":["1/2"],"Thank you,":["`last`","I","zoldar!","I"],"Thank you.":[":)","Does","I'll"],"Thanks !":["I","I"],"Thanks :).":["I"],"Thanks @adrain.":["I've"],"Thanks @amelie,":["enjoy"],"Thanks @antoinette.":["I'll"],"Thanks @aric!":["My"],"Thanks @cristina,":["I"],"Thanks @delpha,":["I"],"Thanks @ed":["I"],"Thanks @haskell":[","],"Thanks @jayden":["this"],"Thanks @leonie,":["I've"],"Thanks @marge!":["I'm"],"Thanks @martin.":["I'll"],"Thanks @nicholas":["."],"Thanks @rosella,":["excellent"],"Thanks @sherman!":["I'd"],"Thanks @wilburn.":["I"],"Thanks Geoff":["for"],"Thanks Geoff.":["That"],"Thanks a":["lot.","lot"],"Thanks about":["the"],"Thanks again":["-","for",":)"],"Thanks again,":["I","@cheyanne.","@torrey!"],"Thanks dude,":["all"],"Thanks for":["the","pointing","the","the","the","the","the","the","clarifying,","the","the","the","the","letting","the","the","the","the","letting","the","all","feedback.","the","the","the","the","the","the","the","the","the","the","the","taking","the","your","nitpicking!","the","actually","the","the","the","feedback.","the","the","the","all","the","taking","the","the","that,","the","the","looking","feedback,","the","the","comments","the","feedback","the","the","the","the","the","bringing","your","the","the","the","asking.","the","the","the","the","the","the","taking","the","the","your","the","the","nitpicking!","the","calling","the","the","brining"],"Thanks in":["advance","advance."],"Thanks n1k0":[":)"],"Thanks rubysolo,":["good"],"Thanks sgrimm.":["I'm"],"Thanks so":["much","much"],"Thanks that":["looks"],"Thanks to":["your","@eulah","@alda","zoldar"],"Thanks! BTW":["Nice"],"Thanks! Could":["you"],"Thanks! I":["wasn't","pushed","was","appreciate","will","can","might","didn't","didn't","improved","could've","treated"],"Thanks! I've":["gotten"],"Thanks! It":["just"],"Thanks! Should":["I","have"],"Thanks! The":["fact"],"Thanks! Those":["are"],"Thanks! Using":["`count`"],"Thanks, @king.":["I'm"],"Thanks, I":["didn't","meant","submitted","wasn't","had","had","would","will."],"Thanks, I'm":["glad"],"Thanks, arr-ee,":["I'll"],"Thanks, didn't":["know"],"Thanks, good":["idea.","point!"],"Thanks, resubmitted":["with"],"Thanks, soapie,":["for"],"Thanks, soapie.":["I"],"Thanks, that":["looks","makes"],"Thanks, that's":["really"],"Thanks, you":["helped"],"Thanks. I":["didn't","didn't","overlooked"],"That \"constructor\"":["function"],"That -1":["case"],"That aside":["(and"],"That assert":["could"],"That being":["said,","said,","said","said","said","said,"],"That can":["simplify"],"That cond":["switch"],"That could":["possibly","possibly"],"That does":["read","seem"],"That doesn't":["look"],"That function":["would"],"That is":["the","a","definitely"],"That is,":["can"],"That looks":["more","like"],"That made":["it"],"That makes":["your","the"],"That may":["be","be"],"That means":["I'll"],"That might":["make","be","be","be","make"],"That obviously":["can't"],"That part":["is"],"That really":["comes"],"That said":["all"],"That said,":["would","I","I","the","overloading","if","I","I'm","I"],"That threads":["the"],"That threw":["me"],"That was":["fun"],"That way":["(I","the"],"That way,":["you"],"That will":["allow","give"],"That would":["definitely","make","allow","seem","allow","allow","collapse"],"That'd satisfy":["the"],"That'd take":["away"],"That'll simplify":["things."],"That's a":["good","good","great","good","PITA","matter","lot","whole","part","sign","good","neat","good","place","question","bit","nice","bit"],"That's actually":["what"],"That's almost":["exactly"],"That's an":["excellent","excellent","*interesting*"],"That's because":["the"],"That's called":["exactly"],"That's completely":["tangential"],"That's entirely":["personal","a"],"That's even":["idiomatic"],"That's good":["idea."],"That's good.":["Earmuffs"],"That's great":["thanks."],"That's how":["it"],"That's interesting":["-"],"That's just":["a","a"],"That's maybe":["a"],"That's much":["better,"],"That's my":["suggestion,"],"That's not":["the"],"That's pretty":["wild"],"That's quite":["interesting"],"That's rather":["language"],"That's something":["simple","to"],"That's the":["place","one"],"That's true.":["However,"],"That's up":["to"],"That's very":["awesome.","very"],"That's what":["I","I","I","I","I"],"The \"other\"":["behavior"],"The \"teenth\"":["days"],"The 'frequencies'":["function"],"The (seq":["x)"],"The \u003ccode\u003edefn-\u003c/code\u003e":["basically"],"The Clojure":["code"],"The Elixir":["version"],"The README":["describes","refers","has"],"The [https://github.com/bbatsov/clojure-style-guide#syntax](clojure-style-guide)":["encourages"],"The `.endsWith`":["bit"],"The `=`":["will"],"The ```(if":["(...)"],"The ```frequencies```":["function"],"The `allchars`":["function"],"The `anagram?`":["function"],"The `board-string`":["let"],"The `can-attack`":["function"],"The `challenge`":["function"],"The `db`":["parameter"],"The `defn`":["form","nested"],"The `input`":["variable"],"The `last`":["function"],"The `let`":["in"],"The `ns-resolve`":["is"],"The `ns`":["macro"],"The `reset-name`":["function"],"The `rev-subs`":["function"],"The `str`":["forms"],"The `swap!`":["function"],"The `trim`":["in"],"The absence":["or"],"The actual":["set","code"],"The added":["benefit"],"The advantage":["of"],"The anon":["function"],"The approach":["I"],"The argument":["name"],"The arguments":["vector"],"The best":["sorting","way"],"The blind":["leading"],"The body":["of","of","of"],"The book":["I've"],"The can-attack":["does"],"The character":["U"],"The code":["looks","does","also","doesn't","is","could","is","lives","is","now","ended","for","becomes"],"The colons":["and"],"The commented":["code"],"The comments":["were"],"The comparison":["of"],"The composition":["of"],"The cond":["looks","with"],"The conversion":["between"],"The customer":["has"],"The default":["condition"],"The difference":["between","in"],"The double-negative":["of"],"The downside":["is","of","of"],"The else":["case"],"The equivalent":["form"],"The example":["in"],"The exercism":["assignments"],"The fact":["that","that"],"The final":["sanitizing","result"],"The first":["thing","version","one","`or`","one","thing"],"The for":["returns"],"The formatting":["bug"],"The fourth":["one"],"The function":["that","is","passed"],"The functions":["whose","with"],"The funny":["thing"],"The gist":["of"],"The good":["news"],"The guide":["I"],"The hardest":["part"],"The high":["level"],"The idea":["is"],"The important":["thing"],"The indentation":["in"],"The intent":["in","is"],"The interesting":["thing"],"The keyword":["duplication"],"The keywords":["make"],"The lazy":["initialization"],"The link":["is"],"The logic":["to"],"The main":["tweaks"],"The map":["can"],"The mapping":["to"],"The merge-with":["is"],"The message":["\"AssertionError\"","could"],"The more":["I","correct"],"The most":["readable"],"The motivation":["is"],"The namespace":["macro","issue"],"The nested":["conditions","ifs"],"The new":["version"],"The nice":["part"],"The non-public":["constant"],"The one":["exception"],"The only":["thing","other","function","thing","check","tiny","caveat","things","thing","thing","reason","thing","confusing","thing","suggestion","thing"],"The operations":["in"],"The ordering":["of"],"The other":["way","thing"],"The page":["should"],"The parentheses":["around"],"The people":["with"],"The perils":["of"],"The placement":["of"],"The pointer":["to"],"The pre":["and"],"The predicate":["expressions"],"The preferred":["way","way","way","way","way"],"The private":["functions"],"The problem":["is","I","I","with"],"The question":["of","check","mark"],"The reader":["has"],"The reason":["you","I'd","I","for"],"The recursion":["broke"],"The recursive":["solution"],"The regexp":["for"],"The remark":["about"],"The requirements":["state"],"The resulting":["sequence"],"The results":["are"],"The same":["for","goes","principle"],"The scalene":["test"],"The second":["version","one","`or`","expression","macro"],"The set":["of","it"],"The short":["variable"],"The shouting":["check"],"The shouty?":["function"],"The silence?":["method"],"The simulate":["function"],"The solution":["itself","is"],"The spec":["\"if"],"The standard":["one"],"The string":["concatenation","operation","accumulator"],"The syntax":["is"],"The term":["for"],"The test":["really","suite","expects"],"The tests":["would","don’t","show","show","require","might"],"The thing":["with"],"The threading":["macro"],"The tiny":["bit"],"The trade":["off","off"],"The tradeoff":["would"],"The trailing":["bracket","')'"],"The turn":["functions"],"The usage":["of"],"The use":["of","of","of","of"],"The very":["first"],"The way":["you've","you"],"The word":["sorted"],"The work":["your"],"Their scientific":["names"],"Thelast thing":["is"],"Then I":["can","tried"],"Then I'd":["remove"],"Then `if-let`":["is"],"Then `last`":["should"],"Then a":["concrete"],"Then all":["references"],"Then discovered":["that"],"Then first":["strophe"],"Then going":["to"],"Then it":["must"],"Then look":["into"],"Then the":["process","whole"],"Then went":["the"],"Then you":["can","can","can","only","can","call"],"Then your":["conditional"],"Then, we":["just"],"Then, what":["you"],"Then, you":["can","can"],"There a":["lot"],"There are":["possible","significantly","still","simpler","some","many","a","other","extra","a","a","a","some","a","functions","a","some","some","string","some","ways","also","some","also","some","some","also"],"There can't":["be"],"There handy":["functions"],"There is":["no","a","a","a","a","`declare`","a","no","a","one","also","a","also","a"],"There isn't":["much","so","much"],"There might":["be"],"There seems":["to"],"There was":["no","no"],"There were":["too","a"],"There's `lower-case`":["in"],"There's a":["function","bit","little","static","really","subtle","simpler","core","blank","redundant","less","lot","missing","fair","lot","name","function","lot"],"There's also":["more","still","`if-let`","`if-not`/`when-not`","`clojure.string/lower-case`","a","`letfn`","a","a","a","the"],"There's an":["example"],"There's another":["core"],"There's good":["docs"],"There's more":["effective"],"There's no":["doubting","need"],"There's probably":["a"],"There's really":["nothing"],"There's some":["excessive"],"There's still":["duplication,","overhead"],"There's wide":["range"],"These can":["then"],"These create":["bindings"],"These general":["conditions"],"These should":["be"],"These were":["failing"],"They are":["really","treated","'exchange'","implemented","a"],"They called":["each"],"They could":["also"],"They don't":["really"],"They helped":["with"],"They seem":["like"],"They should":["be","be","only"],"They will":["still"],"They're cool":["and"],"They're currently":["unused."],"They're pure":["functions,"],"They're three":["points."],"Things I":["learned:"],"Things snowballed":["from"],"Think about":["reducing","moving","creating","reducing","reducing","reducing","making","making"],"Think if-let":["is"],"Think this":["improves"],"Thinking it's":["easy"],"Thinking there's":["a"],"Third -":["I"],"This I":["believe","think"],"This adheres":["the"],"This allows":["you"],"This also":["decouples"],"This can":["also"],"This code":["does","reads","doesn't","is","feels","is"],"This codes":["looks"],"This could":["be"],"This cuts":["down"],"This definitely":["works.","falls"],"This does":["call"],"This doesn't":["seem","work:"],"This example":["is"],"This exercise":["was"],"This form":["of"],"This had":["the"],"This has":["the","a"],"This is":["cool.","word-count,","a","nice","very","a","great!","great!","great!","even","admittedly","pretty","the","pretty","annoyingly","weird","really","called","fantastic,","literally","nice.","actually","super","very","a","a","too","based","what","the","a","very","much","pretty","_not_","perfectly","my","some","a","small,","a","my","probably","one","my","my","by","also","short","already","sort","definitely","a","my","my","very","described","great","looking","a","a","more","a","a","a","shorter"],"This iteration":["fixes"],"This last":["version,"],"This leaves":["open","the"],"This limits":["the"],"This looks":["good.","good.","very","good","good,","great!","really","great,","great,","great,","great,","good.","nice.","wrong","very","nice,","good","good","good","good","great,","good.","pretty","good.","good.","pretty","good.","good.","clean.","generally","good","good.","good.","good.","great.","good","nice"],"This made":["me"],"This makes":["the","it","the","it"],"This means":["that"],"This might":["look","lead","just"],"This now":["is"],"This one":["is","is","is","is","takes","was","and"],"This particular":["exercise"],"This problem":["was"],"This produces":["a"],"This program":["only"],"This replacement":["could"],"This revision":["swapped"],"This seemed":["like"],"This seems":["awfully","a"],"This should":["be","cut","give"],"This solution":["is","is","sacrifices","is","feels","uses"],"This still":["doesn't"],"This submissions":["differs"],"This test":["only"],"This time,":["however,"],"This version":["also","was"],"This was":["my","the","a","a"],"This way":["is","the","it","you","you","if","the","it"],"This whole":["exercism"],"This will":["get","drive"],"This won't":["be","happen"],"This works":["pretty","pretty","as"],"This works,":["but"],"This would":["read","allow","allow","be","avoid","flip","allow","perhaps"],"Those are":["both","all","always","great"],"Those look":["cleaner"],"Those right":["marching"],"Those were":["the"],"Though I":["totally","do"],"Though I'd":["be"],"Though `-›`":["is"],"Though in":["a"],"Though the":["public"],"Thoughtful! Thanks":["for"],"Threading macro":["`-&gt;`"],"Thursday of":["the"],"Time (or":["its'"],"Time to":["woodshed..."],"Tiny, tiny":["nit,"],"To add":["a"],"To avoid":["tripping"],"To be":["honest"],"To chain":["functions,"],"To eliminate":["your"],"To execute":["the"],"To get":["all"],"To go":["further,"],"To keep":["the","it","it"],"To maintain":["readability,"],"To make":["it","this","it","it"],"To me,":["`blank?`","`empty?`","`blank?`","`blank?`"],"To reduce":["the"],"Too bad":["foray"],"Too much":["\"globals\"","programming"],"Too used":["to"],"Took a":["bit"],"Took me":["a"],"Took the":["advice"],"Top level":["constant"],"Totally personal":["preference,"],"Transforming to":["vector","vector"],"Transients will":["explicitly"],"Tried out":["a"],"Tried to":["improve"],"Tried with":["`Math.pow`"],"Trimming is":["not"],"True if":["you"],"Try `(clojure.string/blank?":["nil)`"],"Try `:require`":["with"],"Try as":["I"],"Try changing":["`(def"],"Try checking":["for","to"],"Try doing":["this"],"Try factoring":["your"],"Try implementing":["it"],"Try it":["in"],"Try one":["more"],"Try submitting":["\"bob\""],"Try use":["defn"],"Try using":["`:require`","`cone`","`cond`","`let`"],"Trying out":["`ref`"],"Trying to":["make"],"Ts with":["Us"],"Two minor":["picks,"],"Two of":["the"],"Two small":["suggestions"],"Two very":["good"],"Two ways":["to"],"Typically I":["would"],"T}`. I":["suspect"],"U instead":["of"],"U is":["just"],"U like":["var."],"U to":["give"],"U's. This":["way"],"U/T as":["well,"],"U? Have":["you"],"UC definitions":["per"],"URL to":["share)."],"US prefix":["pattern."],"Ug. This":["problem"],"Unable to":["resolve","resolve"],"Undoubtedly this":["works,"],"Unexpected Input":["bit?"],"Unfortunately I'm":["not"],"Unfortunately that":["doesn't"],"Unfortunately, \"sequence\"":["is"],"Unfortunately, in":["the"],"Unfortunately, only":["standard"],"Unhandled cases":["weren't"],"Unicode aware.":["It's"],"Unicode character":["classes"],"Unicode, I":["guess.)"],"Unless you":["can"],"Unlike other":["solutions"],"Unsupported option(s)":["supplied:"],"Unsure about":["usage"],"Unsure if":["I"],"Updated `question?`":["to"],"Updated `use`":["to"],"Updated submission":["forthcoming."],"Updating the":["code"],"Uracil is":["going"],"Uracil isn't":["counted"],"Uracil, will":["use"],"Us makes":["DNA"],"Use \"math\"":["he"],"Use -\u003e\u003e":["instead"],"Use `defn-`":["rather"],"Use `require`.":["Beyond"],"Use a":["let"],"Use hyphen":["instead"],"Use letfn":["to"],"Use more":["idiomatic"],"Used a":["couple","vector"],"Used atom":["instead"],"Uses frequencies":["instead"],"Uses of":["`first`"],"Using \"\"\"xyz\"\"\"":["will"],"Using `GregorianCalendar`":["might"],"Using ```(\\w+)```":["was"],"Using `clojure.string/blank?`":["allows"],"Using `cond`":["where"],"Using `count`":["is"],"Using `let`":["blocks"],"Using `letfn`":["instead","does"],"Using `require`":["as"],"Using `subs`":["is"],"Using a":["regexp","sort","set","consistent"],"Using blank?":["instead"],"Using defn":["instead"],"Using frequencies":["would"],"Using hash-set":["to"],"Using intention-revealing":["names"],"Using more":["higher"],"Using regex":["literal","for"],"Using seq":["to"],"Using that":["would"],"Using this":["feature"],"Using well-named":["helper"],"Usually I":["aim"],"Usually I've":["seen"],"Valid point.":["Another"],"Var that":["references"],"Var to":["a"],"Var with":["a"],"Var...it's like...this":["random"],"Variable naming":["is"],"Vars bound":["to"],"Vector, Sets,":["and"],"Version 1":["is"],"Version 4":["is"],"Very clean":["--"],"Very clear":["and"],"Very clear,":["terse"],"Very creative":["solution"],"Very minor":["nit:"],"Very minor,":["guessing"],"Very nice":[":)",":)",":)",":)",":)",":)"],"Very nice!":["About"],"Very nice,":["love"],"Very nice.":["I","I","I","Have","Final"],"Very straight":["forward"],"Very tiny":["I"],"Very valid":["point,"],"Vim isn't":["that"],"WERE YOU":["THINKING?\"))"],"WIP for":["you"],"WITH message":["THAT"],"Waiting for":["the"],"Want to":["submit"],"Wanted to":["try"],"Was a":["real"],"Was just":["delighted"],"Was not":["aware"],"Was toying":["with"],"Wasn't aware":["of"],"Way cleaner":["after"],"Way more":["succinct"],"We can":["always"],"We could":["create","even"],"We still":["have"],"We've been":["blinded","through"],"Wednesday or":["second"],"Weird, tests":["are"],"Well done,":["one"],"Well i'll":["be!"],"Well, a":["good"],"Well, that's":["true,"],"Well, the":["name"],"Well, this":["is","*is*"],"Well, those":["are"],"Well, yes":["and"],"Wells was":["a"],"Were I":["to"],"Were you":["thinking"],"What @electa":["says."],"What Editor":["are"],"What I":["had","have"],"What about":["giving","name","dropping","using","differently","the","performance","some","using","giving","breaking","`sort`?","using","the"],"What am":["I"],"What are":["```T```","they","you","we"],"What can":["I"],"What do":["you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","nucleotides","you","you","you","you","you","you","you"],"What does":["Bob","the"],"What happens":["if"],"What has":["surprised"],"What if":["you","you","you","you","`*name-tracker*`","I"],"What is":["wrong","the","```x```?","```x```","```x```","the"],"What it":["should"],"What other":["regexp"],"What really":["matters,"],"What that":["`{:pre"],"What things":["can"],"What to":["do"],"What would":["happen","you","you","a"],"What you":["have","want","said"],"What you're":["saying"],"What's more":["interesting,"],"What's the":["difference?","matter","better"],"What's with":["all"],"What's your":["pick"],"What, like":["`frequencies`?"],"When I":["run","think","hear","did","realized","read","removed"],"When It":["was"],"When and":["if"],"When building":["strings,"],"When importing,":["you"],"When it's":["just"],"When the":["message","number"],"When there":["is"],"When there's":["many"],"When using":["def"],"When you":["submit","suggested","define","see"],"When you're":["declaring","using"],"When your":["only"],"Whenever I":["have"],"Whenever possible,":["I"],"Where ```str```":["can"],"Where do":["you"],"Where there":["are"],"Whereas atoms":["and"],"Which I":["think"],"Which do":["you"],"Which explains":["the"],"Which is":["a"],"Which one":["will"],"While \"T\"":["and"],"While I":["agree","think","was","agree","used"],"While I've":["been","read"],"While `{name":["(atom"],"While beyond":["the"],"While commas":["are"],"While having":["the"],"While in":["the"],"While it":["means","does"],"While it's":["true","true"],"While keeping":["the"],"While seeming":["to"],"While there":["is","are"],"While this":["passes","is"],"While writing":["functions"],"While you":["are","can"],"Whitespace is":["free."],"Whoops, accidentally":["submitted"],"Whoops... didn't":["see"],"Whoops...wrong submission!":["Can"],"Why are":["you","we"],"Why check":["a"],"Why did":["you"],"Why didn't":["you"],"Why do":["you","you"],"Why don't":["you"],"Why have":["you"],"Why introduce":["`telling?`"],"Why isn't":["`silence?`"],"Why measure":["the"],"Why name":["it"],"Why not":["using","`:require`","simply;","inline","\"strand\""],"Why require":["when"],"Why shouldn't":["I"],"Why the":["map"],"Why using":["Java"],"Why would":["you"],"Why? If":["I"],"Will also":["abstract"],"Will definitely":["keep"],"Will do,":["thanks."],"Will have":["to"],"Will look":["into"],"Will push":["it"],"Will remove":["that"],"Will review":["it"],"Will think":["about"],"Will try":["to"],"With `def`":["you"],"With a":["different"],"With nice":["names"],"With one":["input"],"With regards":["of","to","to"],"With simply":["swapping"],"With that":["tool"],"With that,":["you"],"With the":["macro"],"With your":["Robot"],"Without a":["test"],"Without it":["just"],"Without the":["nesting"],"Woah, I":["really"],"Woops, erroneously":["submitted"],"Woops, no":["I"],"Words will":["be"],"Worse yet,":["the"],"Worth comparing":["against"],"Worth nothing":["that"],"Would a":["threading"],"Would another":["order"],"Would be":["possibly","great","a"],"Would defining":["another"],"Would it":["be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be"],"Would like":["this"],"Would shouting":["work"],"Would that":["be","be"],"Would there":["be"],"Would very":["much"],"Would you":["care","consider","at","be","rather","recommend"],"Would your":["implementation"],"Wouldn't creating":["meaningful"],"Wouldn't it":["be"],"Wouldn't that":["give"],"Wow! I":["really"],"Wow! That's":["pretty"],"Wow, I":["think","really"],"Wow, This":["codes"],"Wow, that":["will"],"Wow, this":["was"],"Writing `count-occurences`":["this"],"XUnit test":["frameworks"],"XXX ...}`":["could"],"XXX :exchange":["XXX"],"XYZ true":["false)`."],"XYZ)` instead":["of"],"YAGNI should":["apply."],"YET ANOTHER":["version"],"YMMV. My":["only"],"YOU ARE":["ONE"],"YOU DO?\"":["seems"],"Yah, I'm":["still"],"Yay! :D":["Naming"],"Yay, much":["more"],"Yeah ,":["I"],"Yeah ...":["I","no.","this"],"Yeah I":["guess,","also","think"],"Yeah indeed,":["it"],"Yeah, I":["would","guess","thought","tried","don't","thought"],"Yeah, I'd":["definitely"],"Yeah, I've":["removed","gotten","experimented"],"Yeah, `Math/pow`":["returns"],"Yeah, both":["suggestions"],"Yeah, embarrassing":["to"],"Yeah, good":["point,"],"Yeah, if":["you"],"Yeah, it":["reads"],"Yeah, matter":["of"],"Yeah, right?":["I"],"Yeah, tend":["for"],"Yeah, the":["private"],"Yeah, this'd":["work:"],"Yeah, typically":["I"],"Yeah. My":["only"],"Yeah. [In":["my"],"Yeah... I":["sometimes"],"Yep ...":["spelling"],"Yep, I":["think"],"Yep, ```defn-```":["would"],"Yes ,":["it","I"],"Yes, I":["agree.","know,","think","thought","meant"],"Yes, `(last":["\"blah?\")`"],"Yes, a":["good"],"Yes, agreed.":["Thanks."],"Yes, all":["tests"],"Yes, indeed.":["It"],"Yes, it":["seems"],"Yes, it's":["more"],"Yes, of":["course,"],"Yes, thank":["you."],"Yes, that":["would","makes"],"Yes, that's":["why"],"Yes, the":["predicates","question"],"Yes, this":["was"],"Yes, using":["`last`,"],"Yes, you're":["probably"],"Yes. I":["prefer"],"You also":["could","might","have","don't"],"You are":["right.","totally","absolutely","right!","right,","right!","writing"],"You aren't":["coding"],"You can":["simplify","even","now","eliminate","just","map","often","try","create","do","use","refer","use","find","make","find","probably","just","take","put","use","use","achieve","use","use","use","use","probably","make","make","simplify","see","use","get","eliminate","simplify","streamline","see","save","maintain","drop","use","reduce","optimise","also","also","avoid","reference","replace","perform","see","treat","use","also","use","even","limit","either","just","also","always","also","still","also","also","also","shorten","also","name","re-arrange","also","use","use","replace","write","also","get"],"You can.":["There"],"You could":["also","define","consider","probably","probably","probably","make","probably","use","require","spare","actually","use","also","put","spare","write","use","make","use","improve","blend","make","drop","create","also","create","make","create","split","get","also","do","also","make","declare","consider","consider","probably","make","also","also","just","reduce","consider","reduce","make","also","probably","clear","maintain","reuse","consider","extract","consider","make","use","just","imagine","group","make","check","also","try","extract","make","extract","use","think","eliminate","also","consider","also","also","simplify","eliminate","use","also","also","use","spare","use","actually","use","avoid","use","`reduce`","use","also","also","create","also","also","also","also","also","do","look","just","then","also","try","look","get"],"You definition":["of"],"You did":["overdo"],"You didn't":["want","run"],"You do":["the"],"You don't":["get","need","try","have","need","need","need","need","have","need","need","have","actually","actually"],"You got":["rid"],"You have":["a","one","a","an","already"],"You import":["`split`,"],"You make":["a","sure","very"],"You may":["want","want","consider","want","want","want","want","have"],"You maybe":["wants","wants"],"You mean":["like","using","line"],"You might":["be","even","want","double-check","compare","also","consider","be","consider","also","consider","want","be","think","consider","want","want","want","use","look","want","want","consider","find","consider","consider","want","try","want","be","be","want","want","want","also","also","want","want","look"],"You probably":["shouldn't","could","want","intended"],"You put":["a"],"You repeat":["`(sort","the"],"You should":["consider","consider","miss","also","always","use","refer","use","be","be","be","be"],"You shouldn't":["need","need"],"You solution":["works"],"You still":["repeatedly","haven't"],"You taught":["me"],"You tend":["to"],"You trim":["the"],"You would":["have","need"],"You write":["that"],"You wrote:":["*While"],"You'd need":["to"],"You'll find":["an"],"You're calling":["`silence?`"],"You're correct":["that"],"You're just":["missing"],"You're making":["great"],"You're off":["to"],"You're passing":["a"],"You're right":["that","about","about","with","-"],"You're right!":["Thanks"],"You're right,":["I","I've"],"You're right.":["I","Updated"],"You're so":["close"],"You're still":["using"],"You're using":["require/refer","require/refer","`(apply"],"You're welcome!":["I"],"You've convinced":["me"],"You've elegantly":["recreated"],"You've submitted":["the"],"You've used":["blank?"],"You. My":["very"],"Your `cond`":["is"],"Your `for`":["macro"],"Your `is-*`":["methods"],"Your `is-shouting`":["method"],"Your `on`":["function"],"Your `radiator`":["solution,"],"Your `response-for`":["function"],"Your `seq-contains?`":["seems"],"Your `transcribe-rna`":["can"],"Your `zipvec`":["could"],"Your codes":["looks"],"Your condition":["predicates"],"Your definition":["of"],"Your dispatch":["is"],"Your first":["and"],"Your function":["definitions"],"Your helper":["functions","functions"],"Your implementation":["of","has"],"Your let":["variable"],"Your line":["breaking"],"Your loop/recur":["construct"],"Your method":["names"],"Your nitpicks":["all"],"Your point":["about"],"Your regex":["suggests","looks"],"Your solution":["works,","is"],"Your usage":["of"],"Your use":["of"],"Your verse":["uses"],"Yup, I'll":["move"],"Yup, sorry":["about"],"Yup. I":["just"],"ZOMBIES ARE":["COMING!!11!!1!\"`"],"Zipping the":["strands"],"Zoldar -":["I"],"[\".\" \"?\"]":[".."],"[\"A\" \"C\"":["\"T\""],"[\"artichoke\" 1]":["[\"boat\""],"[\"boat\" 2]":["[\"ballerina\""],"[\"condition map\"](http://clojure.org/special_forms#toc9)":["`{:pre"],"[\"improved\" version":["here](http://exercism.io/submissions/5210f57c20a0109339000318)."],"[#4](http://exercism.io/submissions/52365b5d658d2387560000a1), but":["maybe"],"['first 'second":["'third"],"[(SOME EXPRESSION":["WITH"],"[(divisible? [divisor]":["(zero?"],"[(every? #{\\A":["\\C"],"[(keify [a-word]":["(sort"],"[-&gt;&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E%3E) and":["see"],"[-&gt;&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E%3E) might":["make"],"[-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E) and/or":["[-&gt;&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E%3E)"],"[-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E) or":["[-&gt;&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E%3E).","[-&gt;&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E%3E)"],"[...])` in":["the"],"[...]...)``` so":["that"],"[...]}` thing":["does"],"[1 2":["3]","3]","3]"],"[1] I":["feel"],"[98 97":["114])))"],"[:refer-clojure :rename":["{list"],"[:require [clojure.string":[":refer"],"[A-Z] and/or":["is"],"[Alphagram](http://en.wikipedia.org/wiki/Alphagram); maybe":["creating"],"[Alphagram](http://en.wikipedia.org/wiki/Alphagram); perhaps":["that"],"[Clojure Style":["Guide](https://github.com/bbatsov/clojure-style-guide)"],"[Clojure style":["guide](https://github.com/bbatsov/clojure-style-guide)."],"[DFA](http://en.wikipedia.org/wiki/Deterministic_finite_automaton) where":["there"],"[I did](http://exercism.io/myfreeweb/clojure/bob)":[":-)"],"[In my":["case](http://exercism.io/n1k0/clojure/word-count)"],"[Let Over":["Lambda](http://letoverlambda.com/index.cl/guest/chap2.html#sec_5)."],"[Library Coding":["Standards](http://dev.clojure.org/display/community/Library+Coding+Standards)"],"[Marginalia](http://gdeer81.github.io/marginalia/) to":["generate"],"[Moby Dick](http://www.gutenberg.org/cache/epub/2701/pg2701.txt)":["about"],"[NimbleText](http://nimbletext.com/Live) very":["useful"],"[The world's":["two"],"[[]]) idea":["is"],"[[_ regex]":["(re-matches"],"[[la sa]":["b]"],"[[lb sb]":["(lower-sorted"],"[[re response]]":["...`"],"[[word1 word2]":["(map"],"[] (sort-by":["identity"],"[]\" and":["\"sort-by\"."],"[]) calls":["and"],"[])` for":["the"],"[])` is":["equivalent"],"[])` should":["do"],"[])`. You":["can"],"[_ 10000]":["(some","(#{\\C"],"[`(every? som-set":["some-collection)`](http://clojuredocs.org/clojure_core/clojure.core/every_q)"],"[`(map list":["origin"],"[`-\u003e\u003e`](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E), if":["you're"],"[`-\u003e\u003e`](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E). It":["would"],"[`Classname.` special":["form](http://clojure.org/java_interop#Java"],"[`Threading macro`](http://clojuredocs.org/clojure_core/clojure.core/-%3E).":["That"],"[`anonymous function`](http://clojuredocs.org/clojure_core/clojure.core/fn)":["to"],"[`assert`](http://clojuredocs.org/clojure_core/clojure.core/assert) to":["throw"],"[`blank?`](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/blank?) function":["to"],"[`case`](http://clojuredocs.org/clojure_core/clojure.core/case). When":["It"],"[`cl-format`](http://clojuredocs.org/clojure_core/clojure.pprint/cl-format) was":["doing,"],"[`clojure.string/blank?`][1] to":["simplify"],"[`condp`](http://clojuredocs.org/clojure_core/clojure.core/condp) before,":["so"],"[`defn-`](http://clojuredocs.org/clojure_core/1.2.0/clojure.core/defn-) is":["for"],"[`defn-`](http://clojuredocs.org/clojure_core/clojure.core/defn-) for":["scope"],"[`defn`](http://clojuredocs.org/clojure_core/clojure.core/defn#example_137) to":["clear"],"[`every?`](http://clojuredocs.org/clojure_core/clojure.core/every_q) as":["it"],"[`let`](http://clojuredocs.org/clojure_core/clojure.core/let) to":["reduce"],"[`letfn`](http://clojuredocs.org/clojure_core/clojure.core/letfn) might":["better"],"[`letfn`](http://clojuredocs.org/clojure_core/clojure.core/letfn) which":["is"],"[`map`](http://clojuredocs.org/clojure_core/clojure.core/map) combined":["with"],"[`map`](http://clojuredocs.org/clojure_core/clojure.core/map). In":["particular,"],"[`range`](http://clojuredocs.org/clojure_core/clojure.core/range). I":["did"],"[`re-seq`](http://clojuredocs.org/clojure_core/clojure.core/re-seq). Pretty":["useful!"],"[`upper-case`](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/upper-case) function":["to","to"],"[`zero?`](http://clojuredocs.org/clojure_core/clojure.core/zero_q) or":["`(="],"[a 1":["b"],"[a b":["c])`"],"[a b]":["[a","(+"],"[a b])`":["can"],"[a good":["guide](http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html)"],"[a month":["ago](https://github.com/kytrinyx/exercism.io/issues/448)"],"[a-word] (sort":["(lower-case"],"[acc word]":["(update-in"],"[an issue](https://github.com/kytrinyx/exercism.io/issues/504)":["about"],"[anonymous function":["literal](http://clojure.org/reader#The"],"[args]))`. In":["the"],"[args])` is":["just"],"[argument] ...`":["instead"],"[begin end":["number]"],"[c] (if":["(="],"[c] (validate":["(dna-\u003erna"],"[candidate] (and":["(="],"[candidiate]` part":["to"],"[clojure.string :as":["str]))","str","str]))","str])`","str])`","str]))","str]))","str]))","str])","str]))","str]))`?","str]))","str]`","str])`"],"[clojure.string :only":["[blank?","[blank?]]`.","[replace]])","[upper-case]]))","[split","[upper-case","[lower-case"],"[clojure.string :refer":["[upper-case]))","[upper-case]]))","[blank?","(blank?",":all]`).","(capitalize)]))","[lower-case]))","[upper-case","(upper-case","(upper-case","[join","[split]]```","(lower-case)])","(replace)])","[lower-case]]))","[blank?","[lower-case]]))`","[upper-case","[lower-case]]))","(upper-case)]])```",":all]`","(upper-case",":all]`","(blank?","(join)]`","(lower-case"],"[clojure.string refer":["(trim"],"[clojure.string] :only":["[blank?]))"],"[clojure.string](http://clojure.github.io/clojure/clojure.string-api.html) to":["see","clean"],"[clojure.string]), your":["calls"],"[clojure.string])` since":["you're"],"[clojure.string])`, your":["calls"],"[coding standard](http://dev.clojure.org/display/community/Library+Coding+Standards))":["."],"[condition map":["special"],"[condition map][1]":["of","to","feature"],"[converted (map":["{\\A"],"[day-name (keys":["day-map)"],"[db name":["score]"],"[defn-](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/defn-) so":["that"],"[divisor] (zero?":["(rem"],"[frequencies](http://clojuredocs.org/clojure_core/clojure.core/frequencies), it'll":["let"],"[function]]) pattern":["is"],"[https://github.com/bbatsov/clojure-style-guide#syntax](clojure-style-guide) encourages":["the"],"[i 10000]":["(doall","(doall","(doall","(frequencies","(frequencies","(frequencies"],"[key (keys":["input)"],"[library :refer":["[function]])"],"[lower (lower-case":["word)"],"[lower' (lower-case":["%)]"],"[lowerA (lower-case":["a)]"],"[lowerA (sort":["lowerA)]))"],"[lst] (vec":["(conj"],"[my solution":["in"],"[n] (-":["n"],"[name args":["&amp;"],"[p1__4587#] (inc":["p1__4587#))"],"[params* ]":["exprs*))"],"[phrase] (=":["\\?"],"[planet-period seconds]":["...)`"],"[processed-word (process":["word)]"],"[rchar ({\\C":["\\C,"],"[ret word]":["(merge"],"[score] (comp":["vec"],"[score] (fn":["[lst]"],"[split]]``` might":["be"],"[str] ...":["your"],"[string] (re-seq":["#\"\\w+\""],"[string] (s/split":["#\"\\W+\""],"[string]; but":["that"],"[strings](http://clojuredocs.org/clojure_core/clojure.core/fn) implement":["the"],"[text] (string/split":["text"],"[text] inside":["a"],"[the clojure":["docs](http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/some):"],"[the test":["file](https://github.com/kytrinyx/exercism.io/blob/master/assignments/clojure/bob/bob_test.clj#L1)"],"[the thread-first":["macro](http://clojuredocs.org/clojure_core/clojure.core/-%3E)"],"[this SO":["question](http://stackoverflow.com/questions/11854392/clojure-not-nil-check)."],"[this blog":["post](http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html)"],"[this seciton](http://clojure.org/special_forms#Special":["Forms--(fn"],"[thread-last macro](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E)":["to"],"[to suggest](https://github.com/kytrinyx/exercism.io/issues)":[":)"],"[upper-case lower-case":["blank?]]))","blank?]])"],"[w-processed (process":["w)]"],"[wikipedia](http://en.wikipedia.org/wiki/Longest_word_in_English)) is":["45"],"[word-lc (frequencies":["word-lc)]))"],"[word-lc (s/lower-case":["word)]"],"[word1 word2]":["in"],"[x 1`":["without"],"[x] (println":["x))"],"[x] ...)`":["!"],"[x] …x)`":["written"],"[{horizontal :x":["vertical"],"\\' \\d)":["\"Whatever.\""],"\\0 \\9)`":["for"],"\\0 \\9,":["for"],"\\0))` is":["the"],"\\0)` instead":["of"],"\\0)` which":["is"],"\\4 (first":["request))`"],"\\9)` for":["the"],"\\9, for":["its'"],"\\? (last":["statement))```","str))","input))`","\"blah?\"))`","content))`","s)))","utterance)))","q))`.","string))`","msg))","s))`","phrase)))","s))`"],"\\? literal.":["Anyway,"],"\\? message)`":["though?"],"\\?) (not":["(yell?"],"\\?)` better":["than"],"\\?)``` doesn't":["scan"],"\\?)``` rather":["than"],"\\?, possibly":["followed"],"\\A \\A,":["\\T"],"\\A \\C":["\\C","\\G}"],"\\A \\M":["\\space"],"\\A \\T":["\\U"],"\\A \\T}":["char)","char)"],"\\A \\Z":["\\0"],"\\A \\Z))`":["and"],"\\A) (inc":["(int"],"\\A) ;":["=\u003e"],"\\A)` and":["the"],"\\A)` can":["be"],"\\A)`, for":["example,"],"\\A, \\C,":["\\G,"],"\\A, \\G,":["etc."],"\\A, \\T":["\\U,","\\U}"],"\\C \\C":["\\G","\\G"],"\\C \\C,":["\\G"],"\\C \\G":["\\G","\\T}","\\T}","\\G}"],"\\C \\G}":["dna)`."],"\\C \\T":["\\G"],"\\C \\T}":["dna)`."],"\\C, \\G":["\\G}","\\G,"],"\\C, \\G,":["and"],"\\G \\A":["\\T}","\\T}","\\T})"],"\\G \\A})":["char"],"\\G \\C":["\\T}"],"\\G \\G":["\\T"],"\\G \\G,":["\\A"],"\\G \\G}":["message)]"],"\\G \\T":["\\U})`?","\\A})))","\\A}"],"\\G \\T}":["(set","dna)]}"],"\\G \\U}`.":["The"],"\\G, \\A":["\\A,"],"\\G, and":["\\T.\""],"\\G} dna)`.":["This"],"\\H) \"Woah,":["chill"],"\\M \\space":["\\H)"],"\\T %)":["\\U"],"\\T \\A}":["\\A)))"],"\\T \\G":["\\U}`."],"\\T \\U":["\\C"],"\\T \\U,":["\\C"],"\\T \\U}":["char)]"],"\\T \\U})`?":["What"],"\\T and":["\\U?","\\U"],"\\T c)":["\\U"],"\\T interpreted":["as"],"\\T) \\U":["%)"],"\\T))) Didn't":["really"],"\\T} (set":["strand)))"],"\\T} char)":["(throw"],"\\T} dna)`.":["Also,"],"\\U %)":["dna-string)))"],"\\U %)`.":["maps"],"\\U \\A":["\\C"],"\\U \\C":["\\C"],"\\U c))`":["can"],"\\U in":["dna"],"\\U to":["someone"],"\\U what":["do"],"\\U** pair,":["not"],"\\U, \\C":["\\C,"],"\\U} %":["%)`"],"\\U} x":["x)"],"\\U})`? What":["is"],"\\U}` and":["`(set"],"\\U}`. The":["set"],"\\W+ which":["takes"],"\\X, it's":["invalid\"."],"\\Z \\0":["\\9,"],"\\Z)))`. That":["might"],"\\Z))` and":["`(take"],"\\b 2}":["\\b","\\x"],"\\b \\c}":["\\a)","\\d)","\\a)","\\d)","\\a)","\\d)"],"\\p in":["regexes."],"\\p is,":["as"],"\\s+ \\W+":["which"],"\\space \\H)":["\"Woah,"],"\\t \\'":["\\d)"],"\\w already":["checks"],"] exprs*))":["(after"],"^:dynamic *checks*":["{})"],"^:private ^:dynamic":["*checks*"],"^:private name":["...)`"],"^:private shout-response":["\"Woah,"],"^:private silence?":["str/blank?)"],"^:private` for":["vars.","data"],"_Joy of":["Clojure_!)."],"_Note, doing":["these"],"_] (first":["(filter"],"_and_ functional":["programming"],"_and_ it":["with"],"_if_ they're":["needed"],"_know_ is":["idiomatic"],"_love_ to":["over-engineer"],"_not_ pretty":["but"],"_that_ was":["easy."],"_what_ do":["they"],"` (=":["(upper-case","bottle_number"],"` but":["I"],"` peeking":["ahead"],"`!`, `&gt;`":["and"],"`\"42\"` or":["`\"\"`."],"`\"?\"` but":["`\\?`."],"`\"AGC\"` is":["`\\A"],"`\"T\"` and":["`\"U\"`","`\"U\"`"],"`\"U\"` for":["consistency."],"`\"U\"` names.":["Makes"],"`\"U\"` to":["variables"],"`\"ZOMG THE":["%^*@#$(*^"],"`\"\\?$\"`? I":["think"],"`\"\\w+\"` is":["a"],"`\"default`. I":["think"],"`#\"T\"` just":["distracts"],"`#\"T\"` needs":["to"],"`#\"[A-Z]` because":["you've"],"`#\"\\W\"` in":["conjunction"],"`#\"\\w+\"` is":["a"],"`#\"\\w+\"` to":["split"],"`#\"\\w+\"`, and":["we"],"`#( ...":[")`"],"`#()` anonymous":["function"],"`#(= %":["\"\")`"],"`#(= (last":["%1)"],"`#(=(sort-word %)(sort-word":["word))`"],"`#(Integer. %)`":["just"],"`#(if (=":["\\T"],"`#(not-same? %":["sorted-word)`"],"`#(not= %":["word)`,"],"`#(not= %1":["%2)`"],"`#(validate (dna-\u003erna":["%))`"],"`#(vector %1":["%2)`"],"`#({\\T \\U}":["%"],"`#(…%)` but":["otherwise"],"`#(…)` special":["form"],"`#` from":["the"],"`#{...}` is":["literal"],"`#{A C":["G"],"`#{\\A \\C":["\\T"],"`#{a b":["c}`"],"`$` and":["`\\z`"],"`%1` `%2`).":["Although"],"`%1` as":["just"],"`%1` for":["the"],"`%1` if":["you"],"`%2`). Although":["on"],"`%` as":["well."],"`%` for":["first"],"`%` instead":["of"],"`&gt;` and":["many"],"`(#{1 2":["3}","3}"],"`()` for":["empty"],"`()`s in":["`response-for`"],"`(+ -6)`":["is"],"`(- bottles_number":["1)`"],"`(- x":["1)`","1)`","1)`"],"`(-&gt;&gt; strand1":["(map"],"`(-\u003e input":["transform1"],"`(-\u003e statement":["clean"],"`(-›› phrase":["normalize-words"],"`(.endsWith message":["\"?\")`"],"`(.endsWith prompt":["\"?\")`"],"`(/ (on-earth":["s)"],"`(:T {:C":[":C"],"`(:a {:a":["1"],"`(:refer-clojure :exclude":["[...])`"],"`(:require ..)`":["in"],"`(:require ...)`":["on"],"`(:require [clojure.string":[":as",":refer",":refer",":as"],"`(:require` on":["the"],"`(:use [clojure.string])`":["since"],"`(:use [clojure.string])`,":["your"],"`(= \"\"":["input)`","m)`,"],"`(= (clojure.string/upper-case":["message)","message)"],"`(= (count":["x)"],"`(= (last":["message)"],"`(= 0":["something)`","foo)`","x)`."],"`(= [1":["2"],"`(= \\4":["(first"],"`(= \\?":["(last","(last","(last","(last","(last","(last","(last"],"`(= expression":["assignment)`"],"`(= first":["1)`","\\1)`."],"`(= n":["0)`","0)`"],"`(= question":["(upper-case"],"`(= test-char":["(last"],"`(= true":["…)`"],"`(= word-signature":["(signature"],"`(\u003e (count":["(clojure.string/trim"],"`(\u003e x":["2)`"],"`(AssertError. \"AssertionError\")`":["would"],"`(BigInteger. \"2\")`.":["Although"],"`(\\w+)`, then":["you"],"`(anagram-checker-for word)`":["to"],"`(and (=":["(last","(string/upper-case","message"],"`(and ...)`":["in"],"`(and any-ucase-chars":["(not"],"`(and contains-ucase-chars":["without-lcase-chars)`"],"`(apply ...)`":["term"],"`(apply char":["nucleotide)`"],"`(apply str":["(map","...)`","...)`","...)`.","collection)`","...)`.",",,,)`","...)`","...)`","(map","some-str)`"],"`(bigint 2)`":["or"],"`(blank? message)`":["would"],"`(boolean XYZ)`":["instead"],"`(case n":["0...`"],"`(clojure.string/\u003cmethod\u003e` that":["is"],"`(clojure.string/blank? message)`":["and"],"`(clojure.string/blank? nil)`":["in"],"`(clojure.string/join (transcribe":["dna))`"],"`(clojure.string/split \"AEIOULNRST\"":["#\"\")`"],"`(comp frequencies":["clojure.string/lower-case)`"],"`(comp vec":["conj)`."],"`(condp apply":["[x]"],"`(count (distinct":["word))`."],"`(count word)`":["or"],"`(db grade":["[])`"],"`(db level":["[])`"],"`(def *dna-to-rna*":["{\\A"],"`(def ^:private":["name","shout-response"],"`(def add-two":["(partial"],"`(def answer-to-question":["\"Sure\")`"],"`(def function-name":["(fn"],"`(def name":["(fn"],"`(def nothing?":["str/blank?)`"],"`(def on-mercury":["(partial"],"`(def pair-up":["vector)`"],"`(def silence?":["blank?)`","blank?)`"],"`(def slience?":["...`"],"`(defmethod bob":["'~check"],"`(defn add":["[a"],"`(defn amount":["[n]"],"`(defn function-name":["[argument]"],"`(defn name":["[args])`"],"`(defn venus-year-on-mars":["...`"],"`(defn- on-planet":["[planet-period"],"`(defn- shouted?":["[message]"],"`(defn- silent?":["[str]"],"`(defn- split":["[string]"],"`(do (defn":["~name"],"`(doseq [day-name":["(keys"],"`(empty? (trim":["message))`"],"`(ends-with? \\?":["message)`"],"`(every? #{\\A":["\\G"],"`(every? #{\\T":["\\U"],"`(filter not":["(map"],"`(first (filter":["teenth?"],"`(first (reverse":["xs))`"],"`(first (string/reverse":["s))`"],"`(first nucleotide)`?":["I'm"],"`(first sentence)`":["line"],"`(fn [[re":["response]]"],"`(fn [a":["b]"],"`(fn [c]":["(if","(validate"],"`(fn [candidiate]`":["part"],"`(fn [x]":["…x)`"],"`(frequencies (words":["input))`"],"`(frequencies text)`":["(via"],"`(frequencies word)`":["makes"],"`(get (nucleotide-counts":["strand)"],"`(get students":["number"],"`(if (zerop?...`":["in"],"`(if XYZ":["true"],"`(if boolean":["x"],"`(if x":["true)`"],"`(int \\0)`":["instead"],"`(int \\A)`":["and","can"],"`(int \\A)`,":["for"],"`(into (sorted-map)":["db-names-sorted)`."],"`(into []":["(sort-by"],"`(into {}":["...`"],"`(key hash)`":["syntax"],"`(last \"blah?\")`":["would"],"`(last \"plop?\")":["→"],"`(last (....))`,":["but"],"`(last (first":["(filter"],"`(last str)`":["which"],"`(let ..)`":["for"],"`(lower-case s)`":["once,"],"`(map =":["a"],"`(map keyword)`":["which"],"`(map not=":["strand","s1"],"`(map vector":["x","s1","a"],"`(map …":["gene1"],"`(merge)` is":["`nil`."],"`(not (=":["word","x","x","xx"],"`(not (empty?":["sentence))`","letters-in-prompt))`"],"`(not (new-predicate?":["query))`"],"`(not (nil?":["x))`"],"`(not (some":["pred"],"`(not any-...)`.":["I'm"],"`(not x)`":["if"],"`(not-any? pred":["coll)`"],"`(not= [1":["2"],"`(not= word":["potential-anagram)`","poss)`"],"`(not= x":["y)`","y)`."],"`(ns anagram":["(require","(:require"],"`(ns bob":["(:require"],"`(ns phrase":["(:use"],"`(ns …)`,":["check"],"`(or (":["..."],"`(or (get":["students"],"`(or response":["\"Whatever.\")`"],"`(partial ...)`":["-"],"`(partial anagram?":["(process"],"`(partial apply":["=)`."],"`(rand-int (-":["800"],"`(rand-int 100)`":["couldn't"],"`(random-string-range 3":["\\0"],"`(range (int":["\\A)"],"`(range 65":["91)`","91)`"],"`(range start":["end"],"`(re-find #\"^\\d+\"":["message)`"],"`(re-find #\"^\\s*$\"":["s)`."],"`(re-seq #\"\\w\"":["\"AEIOULNRST\")`."],"`(reduce accumulate-counts":["{}"],"`(reduce concat":[",,,)`"],"`(remove #(=":["\"\""],"`(remove blank?)`":["line."],"`(remove identity":["coll)`"],"`(remove-non-word-chars s)`":["which","value"],"`(repeat 10":["\\0)`"],"`(repeatedly (drop-while":["..."],"`(require clojure.string))`,":["you're"],"`(reverse...` logic":["into"],"`(sentiment (clean":["statement))`."],"`(seq dna)`":["call","is"],"`(seq letters-in-prompt)`":["for"],"`(seq s)`)":["rather"],"`(seq sequence)`":["is"],"`(set \"CGAT\")`":["into"],"`(set [a":["b"],"`(set strand)`":["is"],"`(shouty? \"\")`":["which"],"`(shouty? \"42\")`":["and","and"],"`(some #(Character/isLetter":["%)"],"`(some #{:fred}":["coll)`"],"`(some ...":["prompt)`."],"`(sort (lower-case":["word))`","word))`"],"`(sort (str/lower-case":["word))`","s))`"],"`(sort source)`":["only"],"`(sort word)`,":["or"],"`(split ...)`":["or"],"`(str \"Go":["to"],"`(str (capitalize":["n-bottles)"],"`(str ...)`":["without"],"`(str letter)`":["with"],"`(str n-bottles":["\""],"`(str/replace dna":["\\T"],"`(str/replace strip-chars":["\"\")`"],"`(str/split #\"":["+\")`"],"`(str/split ...)`.":["In"],"`(str/trim` instead":["of"],"`(string/join (map":["…))`."],"`(students number":["[])`."],"`(take 10":["(repeat"],"`(take 2":["(rand-chars"],"`(take 3":["(rand-chars"],"`(update-in db":["[score]"],"`(upper-case (str":["c))`."],"`(use 'clojure-string)`":["instead"],"`(vec (conj...`":["really"],"`(vec (sort":["...))`"],"`(when boolean":["x)`"],"`(zero? foo)`":["instead"],"`(zip x":["y)`"],"`({:a 1":[":b"],"`)` on":["its"],"`* 2`":["function"],"`*-from-pair` functions":["can"],"`*-response` vars,":["although","and"],"`*name-tracker*` had":["to"],"`+` quantifier":["outside."],"`+` sign.":["But"],"`,,,` in":["the"],"`-&gt;&gt;` in":["the"],"`-&gt;&gt;` instead":["of"],"`-&gt;&gt;` to":["maintain"],"`-&gt;` may":["improve"],"`-&gt;` now,":["and"],"`-&gt;` to":["avoid"],"`-&gt;`. I":["did"],"`-\u003e\u003e` and":["the"],"`-\u003e\u003e` instead":["of"],"`-\u003e\u003e` macros":["for"],"`-\u003e\u003e` might":["be"],"`-\u003e\u003e` operator":["in"],"`-\u003e\u003e` was":["and"],"`-\u003e` in":["my"],"`-\u003e` instead":["of"],"`-\u003e` is":["used"],"`-\u003e` macro":["allow","is"],"`-\u003e` or":["`-\u003e\u003e`"],"`-\u003e` to":["build"],"`-\u003e` used":["more)."],"`-` as":["in"],"`-` instead":["of"],"`-check` methods":["as"],"`-›` again":["(and"],"`-›` here.":["Have"],"`-›` is":["a"],"`-›` or":["`-››`","`-››`"],"`-›`or `-››`":["macros"],"`-››` macros":["here?","for","instead?"],"`-››` which":["to"],"`-≥≥` statements":["on"],"`.*` in":["the"],"`...teenth` functions":["in"],"`.` chaining":["in"],"`.endsWith` I":["tried"],"`.endsWith` bit":["sticks"],"`.endsWith` method.":["However"],"`.endsWith` there":["is"],"`.endsWith`, that":["is"],"`.endsWith`. It's":["sometimes"],"`.equals` when":["necessary."],"`.length`, etc.).":["For"],"`.pow` as":["well."],"`.toLowerCase`, but":["that's"],"`.trim`! I":["didn't"],"`.trim`, `clojure.string/trim`":["exists."],"`0` and":["`1`"],"`0` values":["for","returned."],"`1` in":["`%1`"],"`1` were":["both"],"`2N` instead":["of"],"`42 =":["var`."],"`42 ==":["var`,"],"`48` so":["that"],"`9`. I":["just"],"`:\u003e :else":["\"Whatever.\"`"],"`:^private` between":["`def`"],"`:all-caps` or":["`:ends-in-question`,"],"`:as str`":["instead","-"],"`:as string`,":["since"],"`:as` and":["`:only`"],"`:as` option":["for"],"`:as` options":["to"],"`:as` to":["alias"],"`:default` from":["`tone-for`;"],"`:else (throw":["(Exception."],"`:else value`":["to"],"`:else` are":["redundant"],"`:else` branch":["in"],"`:else` clause":["is"],"`:else` clause.":["Then"],"`:else` covers":["everything"],"`:else` even":["though"],"`:else` for":["the","the"],"`:else` here":["actually"],"`:else` instead":["of","of"],"`:else` is":["a","more","used"],"`:else` return":["\"Whatever.\""],"`:else` to":["start"],"`:else`, since":["it's"],"`:ends-in-question`, but":["found"],"`:exclude` to":["avoid"],"`:guard`, ultimately":["felt"],"`:ignored` check":["and"],"`:keywords` instead":["of"],"`:leap-year` and":["`:not-leap-year`"],"`:name` attribute,":["it's"],"`:not-leap-year` terminal":["states"],"`:only ...`":["part"],"`:only` bit.":["I"],"`:only` on":["the"],"`:only` to":["pull"],"`:only`), but":["it's"],"`:only`, and":["it's"],"`:pre and":[":post`"],"`:pre` condition":["metadata.","to"],"`:pre` conditions":["is"],"`:question` vs":["`::question`"],"`:refer :all`.":["I"],"`:refer-clojure` in":["`ns`"],"`:refer` `upper-case`":["and"],"`:refer` but":["got"],"`:refer` to":["simply","`use`","import"],"`:refer`, and":["changed"],"`:refer`ring `blank?`":["and"],"`:rename` I'd":["rather"],"`:rename` argument":["with"],"`:require [clojure.string":[":refer",":refer",":refer",":as",":refer",":refer",":refer"],"`:require/:refer` is":["thanks"],"`:require` I":["believe)."],"`:require` `:refer`":["http://dev.clojure.org/jira/browse/CLJ-879"],"`:require` `clojure.string`":["and"],"`:require` and":["`:refer`,"],"`:require` because:":["where"],"`:require` form":["for","instead."],"`:require` helper":["form."],"`:require` in":["the","the","the","`ns`","the","the","general."],"`:require` inside":["`ns`"],"`:require` instead":["of","of"],"`:require` is":["more","not"],"`:require` namespace":["form."],"`:require` so":["I'm"],"`:require` the":["string"],"`:require` to":["import"],"`:require` with":["`:refer`","`:refer`"],"`:require`, and":["then"],"`:require`, but":["there's"],"`:require`. From":["a"],"`:required [clojure.string":[":refer"],"`:required` is":["generally"],"`:required`. `:required`":["is"],"`:scalene` and":["be"],"`:scalene` matches":["the"],"`:unknown` or":["`:unclassified`."],"`:use [clojure.string":[":only"],"`:use` and":["`:required`."],"`:use` construct":["you"],"`:use` in":["`ns`"],"`:use` is":["being","deprecated/discouraged","currently"],"`:use` so":["that"],"`:use` was":["new"],"`:use` which":["is"],"`:use` will":["load"],"`= 0`":["and"],"`=` (or":["`not=`)?"],"`=` and":["`not=`","`last`"],"`=` function":["directly?","wherever"],"`=` is":["variadic,"],"`=` should":["be"],"`=` so":["the"],"`=` to":["make"],"`=` will":["evaluate","compare"],"`?` I":["don't"],"`?` at":["*last*"],"`?` idiom":["on"],"`?` indluded.":["Ah,"],"`?` rather":["than"],"`?`) are":["not"],"`?`, `!`,":["`&gt;`"],"`?`. Making":["your"],"`@colten` and":["`swap!`"],"`@gaetano` and":["`reset!`"],"`AssertionError` throw":["is"],"`AssertionError` when":["it"],"`AssertionError`, and":["we"],"`AssertionException`, but":["`AssertionError`,"],"`Calendar` and":["`Date`"],"`Calendar` class":["is"],"`Calendar` is":["the"],"`Character/isDigit` -":["so"],"`Character/isLowerCase` just":["like"],"`Character/isUpperCase` so":["an"],"`Character/isUpperCase`, `Character/isLetter`":["etc."],"`Date` but":["given"],"`Enum.count/2` built":["in,"],"`Exception in":["thread"],"`GregorianCalendar` might":["simplify"],"`IFn` by":["returning","returning","returning"],"`IFn` while":["`Lists`"],"`Lists` don't.":["You"],"`Make liberal":["use"],"`Maps` implement":["`IFn`","`IFn`"],"`Math.pow` but":["ran"],"`Math/pow` -":["is"],"`Math/pow` returns":["a"],"`O(n *":["log"],"`O(n)`. The":["tradeoff"],"`Sets` implement":["`IFn`"],"`Sets`, `Vectors`,":["and"],"`TO-RNA` onto":["the"],"`T` and":["`U`"],"`T` have":["to"],"`U` with":["a"],"`Vectors` implement":["`IFn`"],"`Vectors`, and":["`Maps`"],"`[&amp; words]`,":["and"],"`[\\W]+` you":["shouldn't"],"`[\\w]` are":["unnecessary,"],"`[] (":["...)`"],"`[^\\w]+` or":["`[\\W]+`"],"`[^\\w]`! I've":["updated"],"`[^a-z]` to":["identify"],"`[` and":["move"],"`[a-z]` and":["`[A-Z]`."],"`[dna]`). Also,":["have"],"`[from to]`":["version"],"`[msg]` up":["onto"],"`[response _]":["(first"],"`[word candidates]`":["instead"],"`[word1 word2]`":["and"],"`[{:matcher silence?":[":response"],"`\\?` is":["exactly?"],"`\\?` rather":["than"],"`\\?` so":["you"],"`\\?`. Then":["`last`"],"`\\A \\G":["\\C`?"],"`\\A`, `\\G`,":["etc."],"`\\A`, for":["example."],"`\\T` and":["`\\U`","`\\U`","`\\U`","`\\U`.","`\\U`","`\\U`","`\\U`"],"`\\T` to":["better","`\\U`."],"`\\U 0})`?":["It"],"`\\U` actually":["means?"],"`\\U` and":["`\\T`"],"`\\U` as":["vars"],"`\\U` characters":["so"],"`\\U` descriptive":["names?"],"`\\U` in":["your","Clojure"],"`\\U` instead":["of"],"`\\U` is":["a"],"`\\U`, because":["Uracil"],"`\\U`. `#\"T\"`":["just"],"`\\W+` you":["could"],"`\\W+`, couldn't":["you"],"`\\W` was":["equivalent"],"`\\W`, so":["your"],"`\\a`. So":["what"],"`\\n` at":["the"],"`\\n` in":["between"],"`\\p{L}`, nice.":["(My"],"`\\p{javaLowerCase}` and":["`\\p{javaUpperCase}`"],"`\\p{javaUpperCase}` instead":["of"],"`\\s` is":["a"],"`\\w+` already":["includes"],"`\\w+` does":["not"],"`\\w+` instead":["of"],"`\\w+`. Look":["at"],"`\\z` in":["this"],"`]` after":["the"],"`^:const`, so":["thanks!"],"`^:private` between":["`def`"],"``Character/isLetter``` to":["test"],"``` (re-find":["#\"\\?$\""],"``` (str":["nucleotides"],"```#'``` from":["Common"],"```#()``` in":["my"],"```((complement nil?)":["x)```."],"```(.endsWith convo":["\"?\")```"],"```(.trim what-bob-heard)```":["in"],"```(:require ...)```":["on"],"```(= \"1\"":["(subs"],"```(= (last":["...```,","utterance)","utterance)","convo)"],"```(= \\?":["(last"],"```(= sentence":["(upper-case"],"```(\\w+)``` was":["a"],"```(every? #(or":["(Character/isUpperCase"],"```(if (...)":["true"],"```(not (nil?":["x))```"],"```(re-seq #\"\\w+\"":["(lower-case"],"```(split #\"\\W+\")```":["instead"],"```(string/replace nucleotides```":["reads."],"```(subs sanitized-number":["1","1)```"],"```(to-rna \"I'm":["just"],"```-&gt;&gt;``` operator":["reads."],"```-\u003e\u003e``` operator":["accomplish?"],"```.endsWith``` method.":["Have"],"```.endsWith``` scanned":["better"],"```.endsWith``` vs.":["```(="],"```.endsWith```, by":["necessity,"],"```.endsWith```. ```(=":["(last"],"```:as``` versus":["```:refer```?"],"```:refer``` on":["the"],"```:refer```? I'm":["new"],"```:require [clojure.string":[":refer"],"```:require``` instead":["of"],"```:use```. See":["http://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require"],"```Java.String```, it":["would"],"```T``` and":["```U```?"],"```U```? They":["could"],"```[]``` screws":["up"],"```\\T``` and":["```\\U```","```\\U```"],"```\\U``` such":["as"],"````(fn [...]...)```":["so"],"````last```` function":["in"],"```anagram.anagrams-for```'s stack":["to"],"```anagram?``` and":["```anagrams_for```"],"```anagrams_for``` would":["be"],"```blank?``` and":["```upper-case```"],"```blank?``` function":["in"],"```blank?``` isn't":["as"],"```char-counts``` a":["function"],"```clojure.core/filter```? Might":["be"],"```clojure.core/frequencies```? It":["may","might"],"```clojure.string/blank?``` in":["the"],"```clojure.string/blank``` is":["truthy"],"```clojure.string/replace``` is":["a"],"```clojure.string/replace```. Have":["you"],"```clojure.string/replace```. I":["have"],"```clojure.string``` since":["you"],"```clojure.string``` so":["you"],"```clojure.string```. In":["particular,"],"```cond``` available.":["I"],"```cond``` into":["some"],"```cond``` special":["form."],"```count-words``` is":["implemented."],"```count-words```, taking":["```words```,"],"```dec-each-value``` decrements":["each"],"```default?``` isn't":["needed"],"```defn-``` to":["create"],"```defn-``` used":["where"],"```defn-``` would":["be"],"```defn```, you":["could"],"```digest``` does":["not"],"```dna-nucleotide``` function":["for"],"```dna/to-rna``` is":["accomplishing.","very"],"```dna_string``` should":["be"],"```downcase-and-split``` as":["privately"],"```drivel``` against":["an"],"```ends-with?``` function":["but"],"```exec-pattern```, couldn't":["you"],"```first`` and":["```rest```"],"```frequencies``` and":["can"],"```frequencies``` function":["looks"],"```frequencies``` function!":[":D"],"```frequencies``` function?":["http://clojuredocs.org/clojure_core/clojure.core/frequencies"],"```frequencies``` here...":["it"],"```frequencies``` instead":["of"],"```frequencies```, it":["does"],"```if``` statements":["before"],"```is-empty?``` and":["```is-shout?```"],"```is-question?``` because":["it"],"```is-shout?``` functions,":["the"],"```join``` are":["inverses"],"```join``` so":["you"],"```last``` on":["a"],"```let``` block,":["I"],"```lower-case s```":["on"],"```lower-case``` when":["you"],"```lower-case``` will":["only"],"```map-to-rna```? It":["seems"],"```map``` operation":["inside"],"```merge``` which":["is"],"```no-quiet?``` is":["kind"],"```no-quit?``` and":["```some-loud?```"],"```question?``` from":["the"],"```question?``` function":["a"],"```re-matches``` is":["faster:"],"```re-seq``` instead":["of"],"```replace-thyamine-with-uracil``` function.":["Beautifully"],"```replace``` does":["exactly"],"```replace``` is":["clearly"],"```replace```? I":["can't"],"```require```, which":["ruffled"],"```response-for``` better":["tell"],"```rest``` instead":["of"],"```s``` against":["```lower-case"],"```seq``` instead":["of"],"```shout?``` to":["systematically"],"```shouting?``` method":["will"],"```shouty?``` why":["are"],"```silence?``` doesn't":["really"],"```silence?``` functions":["which"],"```sorted-word``` -":["while"],"```split-words``` when":["I"],"```split``` and":["```downcase-and-split```","```join```"],"```str/bank?``` instead":["of"],"```str/replace``` sexp":["is"],"```str``` can":["be"],"```str``` function":["is"],"```str```. I":["think"],"```string``` makes":["it"],"```subs``` functions":["in"],"```subs``` you":["could"],"```to-rna-1``` as":["lacking"],"```to-rna-1```, and":["maybe"],"```to-rna``` function":["through"],"```to-rna``` function.":["I"],"```to-rna```. Is":["there"],"```upper-case s```":["should"],"```upper-case``` function":["but"],"```use :only```":["on"],"```use``` clause":["in"],"```use``` rather":["than"],"```word-count``` but":["it"],"```words-in-phrase``` doesn't":["really"],"```words```, I'm":["not"],"```x``` -":["name","give"],"```x```? Is":["it"],"```yelling?``` and":["```silence?```"],"``case``, but":["I'm"],"``cond``, all":["becomes"],"``frequencies``` cannot":["do?"],"``has-match?``` by":["```re-matches```"],"`a-\u003eb` to":["name"],"`a` is":["an"],"`add-frequency` function?":["On"],"`add-frequency` when":["I"],"`add-name-to-grade` behave":["differently"],"`add` instead":["of"],"`add` is":["not"],"`add` necessary?":["I"],"`advance` using":["`update-in`"],"`all-caps?` and":["`shouting?`"],"`all-caps?` are":["language"],"`all-caps?` should":["take"],"`all-caps?` the":["best"],"`all-caps` really":["belong"],"`all-nucleotides` and":["the"],"`all-upper?` predicate.":["But"],"`all?` by":["using"],"`all?` is":["cleaner"],"`all` function":["is"],"`allchars` function":["doesn't"],"`alpha` and":["`lower`"],"`alphabetizes-to?` with":["the"],"`alphagram-from-lower-case` to":["avoid"],"`alphagram` for":["word."],"`alphagram` in":["a"],"`alphagram` into":["a"],"`alphagram` is":["not"],"`alphagram` method":["is"],"`alphagram` shouldn't":["worry"],"`alphagram`, I":["wasn't"],"`amount` as":["a"],"`anagram-checker-for` or":["the"],"`anagram-for?` is":["a"],"`anagram-match?` `let`":["variable!"],"`anagram-match?` to":["its"],"`anagram-matcher` to":["generate"],"`anagram-of?` it":["would"],"`anagram-of?` just":["as","took"],"`anagram-of?` might":["use"],"`anagram-of?` naturally":["works"],"`anagram-of?` take":["one"],"`anagram-of?` was":["much"],"`anagram-of?` work":["in"],"`anagram?` and":["`is-anagram?`"],"`anagram?` could":["be"],"`anagram?` function":["and","then"],"`anagram?` function,":["I"],"`anagram?` into":["it's"],"`anagram?` out":["of"],"`anagram?` rather":["than"],"`anagram?` was":["renamed"],"`anagram?`) for":["each"],"`anagram` since":["it"],"`anagrams-for` along":["with"],"`anagrams-for` and":["adding"],"`anagrams-for` as":["a"],"`anagrams-for` function":["is,"],"`anagrams-for` is":["a","a"],"`anagrams-for` you":["might"],"`anagrams-for`. But":["that's"],"`anagrams-for`. Tell":["me,"],"`anagrams` or":["`not-same?`"],"`anagrams`, `#(=(sort-word":["%)(sort-word"],"`anagrams`. This":["way"],"`and` -":["the"],"`and` although":["there"],"`and` formatting":["looks"],"`and` into":["two"],"`and` one":["which"],"`and`) and":["putting"],"`and`-ed predicate":["under","a"],"`angry?` is":["perhaps"],"`angry?`, `question?`,":["etc."],"`any-lcase-chars` helped":["the"],"`any-ucase-chars` because":["when"],"`any-word-pattern` binding":["adds"],"`any` names?":["You"],"`apply str`":["behind","which"],"`apply` doesn't":["work"],"`apply` in":["line"],"`apply` on":["line"],"`apply` to":["understand"],"`apply` usage,":["but"],"`apply` would":["not"],"`apply`, as":["`apply`"],"`apply`. I":["think"],"`area-code`, `prefix`,":["`line-no`."],"`asking-politely?` conditions":["mutually"],"`asking-politely?` for":["the"],"`asking-politely?`) That":["way"],"`asking?`, etc.":["which"],"`assert_equal 'Fine.":["Be"],"`assert` (not":["sure"],"`assert` function":["instead","instead","instead","which","to"],"`assert` function.":["You"],"`assert` is":["a"],"`assingment` word":["here"],"`assoc` /":["`inc`"],"`atom` and":["`reset!`-"],"`atom` would":["suffice."],"`b` only":["if"],"`base-word` and":["`normalized-word`"],"`base` and":["`mutation`"],"`beer-song` is":["my"],"`beer/sing` and":["big"],"`beer/verse` still":["leaves"],"`beer` and":["`on-the-wall`"],"`bigint` and":["`Math/pow`"],"`binary-number` string":["without"],"`blank?` -&gt;":["`silence?`,"],"`blank?` and":["`all-caps?`","`upper-case`","`upper-case`","`replace`"],"`blank?` checks":["for"],"`blank?` directly.":["Again,"],"`blank?` doesn't":["match","seem","seem"],"`blank?` in":["string"],"`blank?` instead":["of","of"],"`blank?` is":["fine,","fine."],"`blank?` it":["wouldn't"],"`blank?` predicate":["which"],"`blank?` returns":["true"],"`blank?` to":["save","a"],"`blank?` would":["simplify"],"`blank?`, `asking?`,":["`shouting?`"],"`blank?`, `shout?`,":["etc."],"`blank?`. How":["about"],"`blank?`. Overall":["looks"],"`blank` in":["the"],"`blank` looks":["like"],"`board-string` let":["values"],"`bob/is-silence` can":["just"],"`bob/yelling?` that":["returns"],"`body` part":["of"],"`bottle-phrase` and":["`second-line`"],"`bottle` or":["`one-or-it`"],"`bottles` instead":["of"],"`bottles` is":["a"],"`bottles` to":["generate"],"`bottles`, `case`":["(sic!)"],"`build-finder` function.":["It"],"`build-finder` manually":["multiple"],"`build-finder`) and":["second"],"`c` represent":["in"],"`c` should":["be"],"`c`. Can":["you"],"`calm?` condition.":["Could"],"`can-attack` function":["might"],"`candidate` or":["something"],"`candidates` it":["will"],"`candidates` would":["be"],"`candidates`. Can":["you"],"`canonicalA` just":["the"],"`canonicalA` will":["be"],"`case` (or":["some"],"`case` (sic!)":["would"],"`case` for":["`so-many`"],"`case` might":["imply","be"],"`case` statement":["since"],"`case` to":["clean"],"`case` with":["only"],"`case`. Doesn't":["make"],"`case`. One":["of"],"`challenge` function":["shows"],"`char-array`. Java":["[strings](http://clojuredocs.org/clojure_core/clojure.core/fn)"],"`char[]`) so":["the"],"`character-frequencies` to":["`word`."],"`characters` to":["return"],"`check-match` used.":["Is"],"`cl-format` could":["be"],"`classify-dna` function.":["(The"],"`clean-number`, since":["I"],"`clean-phrase` function,":["I"],"`clean-phrase` like":["you"],"`clean-phrase`, in":["that"],"`clean` function":["to"],"`cleanup` function":["as"],"`clj-time` here":["if"],"`clj-time` to":["provide"],"`clojure-mode` and":["`clojure-test-mode`,"],"`clojure-test-mode`, and":["I"],"`clojure.core.frequencies` already":["exists."],"`clojure.core/count` explicitly":["using,"],"`clojure.core/count` if":["you"],"`clojure.core/count`, but":["I"],"`clojure.core/filter` and":["function"],"`clojure.core` function":["over"],"`clojure.core` namespace,":["and"],"`clojure.core` or":["one"],"`clojure.core` to":["get"],"`clojure.core`. I":["have"],"`clojure.string namespace`":["to"],"`clojure.string.blank?` can":["be"],"`clojure.string.blank?` in":["the"],"`clojure.string/*` usage":["if"],"`clojure.string/` in":["your"],"`clojure.string/` parts":["of"],"`clojure.string/blank?` allows":["for"],"`clojure.string/blank?` and":["I"],"`clojure.string/blank?` function":["that"],"`clojure.string/blank?` tells":["you"],"`clojure.string/blank?` which":["can"],"`clojure.string/blank`. That'd":["satisfy"],"`clojure.string/join` is":["fine"],"`clojure.string/join` you":["could"],"`clojure.string/lower-case` acts":["on"],"`clojure.string/lower-case` calls":["out"],"`clojure.string/lower-case` instead":["of"],"`clojure.string/lower-case` is":["you","also"],"`clojure.string/lower-case`. There's":["no"],"`clojure.string/method`, you":["can"],"`clojure.string/replace` called":["on"],"`clojure.string/replace` can":["take"],"`clojure.string/replace` coerces":["its"],"`clojure.string/replace` might":["be"],"`clojure.string/replace` or":["using"],"`clojure.string/replace` shadow":["`replace`"],"`clojure.string/replace` with":["convenient"],"`clojure.string/replace`, but":["your"],"`clojure.string/replace`? The":["reason"],"`clojure.string/split`. I":["think"],"`clojure.string/trim` rather":["than"],"`clojure.string/upper-case` and":["`clojure.string/trim`"],"`clojure.string/upper-case` instead":["of"],"`clojure.string/upper-case` rather":["than"],"`clojure.string/upper-case`, but":["I"],"`clojure.string` and":["`:refer`","found"],"`clojure.string` as":["`str`;"],"`clojure.string` does":["with"],"`clojure.string` for":["that"],"`clojure.string` functions":["to","in"],"`clojure.string` has":["a"],"`clojure.string` i":["see"],"`clojure.string` in":["your","your"],"`clojure.string` is":["full"],"`clojure.string` namespace":["into","refering","is","as","in","to","has","contains"],"`clojure.string` namespace,":["`:require`"],"`clojure.string` or":["regular"],"`clojure.string` prefix":["for"],"`clojure.string` repetition.":["Something"],"`clojure.string` that":["could"],"`clojure.string` to":["`replace`"],"`clojure.string` when":["only"],"`clojure.string` which":["can"],"`clojure.string` with":["a"],"`clojure.string`, and":["since"],"`clojure.string`, as":["it"],"`clojure.string`. I've":["yet"],"`clojure.string`. You":["could"],"`clojure.test` required":["into"],"`clojure/string` with":["`str`"],"`cloud9` or":["`i18n`"],"`coll`. `Sets`,":["`Vectors`,"],"`combine-map-with` function":["in"],"`comp` but":["unfortunately"],"`comp`. Besides,":["a"],"`comp`. But":["instead"],"`compare-and-set!` is":["also"],"`concat` and":["use"],"`concat` in":["your"],"`concat` is":["completely"],"`cond` (especially":["the"],"`cond` --":["I"],"`cond` I":["think"],"`cond` and":["`match`"],"`cond` are":["(="],"`cond` before.":["I"],"`cond` branches,":["which"],"`cond` clauses":["don't"],"`cond` couldn't":["be"],"`cond` don't":["speak"],"`cond` form":["of"],"`cond` form,":["so"],"`cond` form.":["Alternative"],"`cond` function":["instead"],"`cond` function,":["since"],"`cond` having":["only"],"`cond` in":["`second-couplet`","`number`."],"`cond` instead":["of","of","of","of","of"],"`cond` into":["named"],"`cond` is":["to","going","structured,","a"],"`cond` might":["not","be"],"`cond` on":["it's"],"`cond` only":["has"],"`cond` predicates":["into"],"`cond` rather":["than","than"],"`cond` responses":["align"],"`cond` statement":["somehow"],"`cond` statement.":["On"],"`cond` tests":["in","better"],"`cond` there":["instead?"],"`cond` to":["non-public"],"`cond` very":["expressive."],"`cond` vs":["`condp`"],"`cond` where":["you"],"`cond` which":["I"],"`cond` with":["the","only","only"],"`cond` without":["an"],"`cond`, but":["that's","I","it","in"],"`cond`, it's":["a"],"`cond`, so":["you"],"`cond`, the":["reason"],"`cond`, you":["can"],"`cond`. It":["would"],"`cond`. Without":["the"],"`cond`? An":["example"],"`condp` and":["`apply`"],"`condp` could":["be"],"`condp` in":["this"],"`condp` interesting":["because"],"`condp` is":["a"],"`condp` or":["`case`","`case`"],"`condp` version":["is"],"`condp`, which":["would"],"`condp`. When":["it's"],"`cone` instead":["of"],"`conj-anagrams` can":["be"],"`conj` -":["either"],"`conj` in":["the"],"`conj`) containing":["a"],"`consider` is":["doing"],"`contains-char?`, but":["why"],"`contains-lcase-chars` was":["a"],"`contains-lcase-chars`. This":["has"],"`contains-ucase-chars` and":["`contains-lcase-chars`."],"`contains?` is":["not"],"`contains?` which":["led"],"`contains` and":["`any`"],"`convert_number` and":["use"],"`convert_number`. I'd":["just"],"`convert` to":["be"],"`core.frequencies` to":["see"],"`core.match`? Because":["this"],"`core` functions":["dealing"],"`core` here":[":)"],"`count-falsey` function.":["I"],"`count-nucleotides #((nucleotide-counts":["dna-string)"],"`count-nucleotides` (and":["possibly"],"`count-nucleotides` -":["think"],"`count-nucleotides` can":["be"],"`count-nucleotides` could":["be"],"`count-nucleotides` which":["accepts"],"`count-occurences` this":["way"],"`count-with` and":["`zip`,"],"`count-with` in":["clojure.core,"],"`count-words` doesn't":["really"],"`count` --":["it's"],"`count` could":["definitely"],"`count` is":["definitely"],"`count` itself":["took"],"`count` method.":["You"],"`count` or":["with"],"`count` return":["its"],"`count` than":["in"],"`count` when":["compiling"],"`count`, `filter`,":["and"],"`count`, `first`,":["`last`,"],"`count`, `last`":["etc."],"`count`. I":["thought"],"`count`. Thanks":["for"],"`count`. There's":["probably"],"`count`. You":["can"],"`count`. Your":["implementation"],"`count`; getting":["the"],"`count`? You":["can"],"`countable-nucleotides` and":["`default-nucleotide-counts`?"],"`db` parameter":["of"],"`dec-each-value` does":["here,"],"`dec` and":["`inc`"],"`dec` as":["well"],"`dec` but":["I"],"`dec`... my":["Clojure's"],"`declare` and":["`defn-`"],"`declare` can":["help","help"],"`declare` in":["order"],"`declare` just":["because"],"`declare` may":["help","help"],"`declare` to":["get"],"`declare` will":["help","help","help","help"],"`declare`, and":["I"],"`decompose` still":["feels"],"`def ^:private`":["for","for"],"`def` +":["`fn`."],"`def` and":["binding","binding","`defn`"],"`def` for":["the"],"`def` in":["functions."],"`def` or":["`let`,"],"`def` the":["two"],"`def` you":["are"],"`def`, `defn`":["etc."],"`def`s for":["the"],"`def`s, just":["so"],"`def`s, which":["are"],"`default-nucleotide-counts` and":["add"],"`default?` function":["is"],"`default?` in":["cond"],"`defmethod` were":["used"],"`defmulti` and":["`defmethod`"],"`defn-` and":["`last`."],"`defn-` body":["style."],"`defn-` defines":["a"],"`defn-` for":["your","functions","your","those","scoping."],"`defn-` instead":["of"],"`defn-` is":["preferred"],"`defn-` macro.":["When"],"`defn-` makes":["a","not"],"`defn-` over":["`defn`."],"`defn-` prevents":["it"],"`defn-` rather":["than","than"],"`defn-` to":["declare","define"],"`defn-`! New":["submission"],"`defn-`) and":["possibly"],"`defn-`, as":["I"],"`defn-`, the":["resulting"],"`defn-`. For":["private"],"`defn-`. I":["think."],"`defn-`. The":["`trim`"],"`defn-`. Will":["definitely"],"`defn` and":["how"],"`defn` before,":["it's"],"`defn` closed":["within"],"`defn` etc.":["inside"],"`defn` for":["top"],"`defn` form":["exposes"],"`defn` function":["binding."],"`defn` instead":["of"],"`defn` is":["on","just"],"`defn` nested":["in"],"`defn` or":["`defn-`"],"`defn` to":["define","`def`"],"`defn`, both":["styles"],"`defn`/`fn` has":["implicit"],"`defn`? Also,":["generally"],"`defn`s are":["at"],"`defn`s for":["the"],"`defn`s is":["important"],"`defn`s with":["a"],"`defrecord` is":["preferred."],"`dissoc` to":["take"],"`dist`. Or":["you"],"`dna-\u003erna` (which":["is"],"`dna-\u003erna` and":["the"],"`dna-\u003erna` is":["a"],"`dna-seq` or":["`dna-sequence`"],"`dna-seq`, since":["`clojure.string/replace`"],"`dna-sequence` might":["be"],"`dna-to-rna` is":["a"],"`dna-to-rna` or":["even"],"`dna/count` without":["clashing"],"`dna/dna-to-rna` and":["`dna/to-rna`."],"`dna/to-rna`. Daily":["reminder"],"`dna` after":["it"],"`do` for":["the"],"`do` in":["`set-name`"],"`doall` isn't":["necessary"],"`dont-know?` the":["right"],"`doseq` as":["well,"],"`doseq` can":["be"],"`doseq` to":["build"],"`doseq`, for":["example?"],"`doseq`s and":["use"],"`dosync` or":["something"],"`dosync` transactions":["like"],"`dow` are":["hard"],"`downcased-phrase` which":["basically"],"`drop-while`. Ouch":["and"],"`drop_and_show`. I":["expected"],"`drop` and":["`take`"],"`else` condition":["since"],"`empty-dna-frequencies` (use":["`set`,"],"`empty?` and":["`all-caps?`","`trim`"],"`empty?` describes":["the"],"`empty?` doesn't":["match"],"`empty?` instead":["of"],"`empty?` when":["checking"],"`empty?`, `last`,":["`some`,"],"`empty` uses":["`?`."],"`ends-with-a-question-mark?` and":["`question?`,"],"`ends-with-question-mark?` `silence?`":["`shouting?`"],"`ends-with?`, for":["example."],"`endsWith` case.":["You"],"`endsWith`.) This":["way"],"`equal-length`, as":["it's"],"`eval` or":["macros"],"`every-pred` and":["aliasing"],"`every?` and":["`not-every?`."],"`every?` will":["work"],"`example.clj` still":["passes."],"`except-self` even":["though"],"`exec-pattern` instead":["of"],"`exercism f`":["to"],"`extract-numbers -\u003e":["strip-us-prefix"],"`extract-words` where":["I"],"`false` AND":["`nil`"],"`false` are":["the","falsey"],"`false` but":["if"],"`false` if":["not"],"`ffirst` for":["exactly"],"`filter` (without":["having"],"`filter` already":["dictates"],"`filter` and":["`count`.","`count`","one"],"`filter` in":["a"],"`filter` is":["the"],"`filter` the":["lists"],"`filter`, `map`":["and"],"`filter`, and":["[`map`](http://clojuredocs.org/clojure_core/clojure.core/map)."],"`filter`. `concat`":["is"],"`first-line` you":["generate"],"`first-part`. Might":["that"],"`first` and":["`second`"],"`first` on":["response"],"`first`, `last`,":["`get`."],"`first`. Explicit":["recursion"],"`first`/`second`. `sorted-map`":["is"],"`firsts`, etc":["functions"],"`flip` function":["or"],"`fn` be":["on"],"`fn` in":["the"],"`fn` with":["indent"],"`fn`, but":["this"],"`fn`. Second,":["I"],"`fnil` and":["`update-in`."],"`foo-&gt;bar` (there's":["a"],"`foo?` for":["predicate"],"`foo?` is":["the","more"],"`foo?`. Also,":["it's"],"`for [key":["(keys"],"`for` comprehension":["which"],"`for` comprehension,":["but"],"`for` comprehension.":["The"],"`for` form.":["I"],"`for` macro":["use"],"`forceful-question?` should":["not"],"`format` cleans":["up"],"`format` for":["generating"],"`format` function":["from"],"`format` style":["functions","fns"],"`format` to":["make"],"`format` wouldn't":["help"],"`format`!! That's":["what"],"`fourth` try":["out"],"`freqs` is":["only"],"`frequencies` -":["it","it"],"`frequencies` --":["I","it","it"],"`frequencies` also":["in"],"`frequencies` and":["I've","using"],"`frequencies` before,":["too."],"`frequencies` being":["more"],"`frequencies` by":["checking"],"`frequencies` can":["be"],"`frequencies` does":["exactly"],"`frequencies` evaluates":["to"],"`frequencies` function":["and","to","which","for"],"`frequencies` function,":["which"],"`frequencies` function.":["Also,"],"`frequencies` function;":["recommend"],"`frequencies` here":[":)"],"`frequencies` here?":["Or"],"`frequencies` if":["you","it's"],"`frequencies` in":["`letter-count`","the","a"],"`frequencies` instead":["of","of","directly","of"],"`frequencies` is":["more","a","just","even"],"`frequencies` like":["Clojure....\""],"`frequencies` line":["should"],"`frequencies` merged":["with"],"`frequencies` on":["`word`"],"`frequencies` rather":["than"],"`frequencies` that":["also"],"`frequencies` this":["time."],"`frequencies` to":["make"],"`frequencies` together":["-"],"`frequencies` when":["I"],"`frequencies` which":["looked"],"`frequencies` would":["simplify"],"`frequencies`! I":["totally"],"`frequencies`, I":["think"],"`frequencies`, as":["it's"],"`frequencies`, can":["you"],"`frequencies`, which":["might","I"],"`frequencies`. I":["think","used","didn't"],"`frequencies`... I":["used"],"`frequencies`? Interesting!":["I"],"`g` to":["`pred`,"],"`gene` makes":["sense!"],"`generate-name` inside":["the"],"`generate-words` would":["be"],"`get` from":["a"],"`get` in":["`count-nucleotides`","`grade`","`grade`,"],"`get` is":["unnecessary,","unnecessary"],"`get` modulo":["map"],"`get` twice.":["So"],"`get` with":["a"],"`get`. However":["that's"],"`get`. I":["still"],"`grade` function.":["Map"],"`grade` is":["not"],"`grade`, using":["the"],"`grouping` quite":["a"],"`ham-compare` accept":["arguments"],"`hamming-distance` being":["general"],"`hamming-distance` unambiguously":["states"],"`hamming-value` accept":["two"],"`i18n` into":["multiple"],"`identity` or":["`true?`"],"`if (nil?...`":["which"],"`if (valid-nucleotide?)`":["was"],"`if-let` and":["`when-let`"],"`if-let` at":["your"],"`if-let` is":["what"],"`if-let`!! Just":["what"],"`if-let`, `when-let`":["etc."],"`if-not (empty?":["bits)`"],"`if-not (seq":["bits)`"],"`if-not` and":["`when-not`"],"`if-not`/`when-not` to":["spare"],"`if` I'll":["have"],"`if` for":["checking"],"`if` in":["the","that"],"`if` inside":["the"],"`if` into":["the"],"`if` might":["function"],"`if` on":["line"],"`if` returns":["a"],"`if` semantics":["would"],"`if` statement":["on"],"`if` statements":[":)","I've"],"`if` that":["does"],"`if` when":["there's"],"`if` will":["implicitly"],"`if` with":["one"],"`if` would":["be","probably","have"],"`if`, even":["though"],"`if`? If":["you"],"`if`s in":["`response-for`","`response-for`"],"`if`s will":["help"],"`ifnil?` function,":["that"],"`ifnil?`. `false`":["AND"],"`in-range` function":["and"],"`in?` function.":["I"],"`inc` and":["`dec`","`dec`","`dec`.","`dec`..."],"`inc` when":["you're"],"`inc` work":["for"],"`increment-word` do.":["Check"],"`inflect` version,":["very"],"`input` variable":["could"],"`int` and":["that"],"`interleave` and":["`partition"],"`interleave` can":["be"],"`interleave`. `str`":["still"],"`intern` that":["would"],"`intern` to":["generate"],"`intern` was":["very"],"`into {}`,":["so"],"`into` and":["its"],"`into` fairly":["clean."],"`into` is":["implemented"],"`intro/outro` split":["here"],"`invaild-number` isn't":["spelled"],"`invalid?` test":["does"],"`is-*` methods":["are"],"`is-` naming":["and"],"`is-` prefix":["on"],"`is-` while":["the"],"`is-all-uppercase?` says":["too"],"`is-anagram? `":["but"],"`is-anagram?` and":["use"],"`is-anagram?` instead":["of"],"`is-anagram?` is":["unfortunate;"],"`is-anagram` with":["a"],"`is-question` et.":["al."],"`is-questions` using":["`last`."],"`is-shouting` method":["has"],"`is-silent` has":["a"],"`is-x?` functions":["should"],"`is-yelling?` case.":["\"!@#!@\""],"`is-yelling?` needs":["at"],"`is_foo` with":["`foo?`."],"`is` looks":["redundant"],"`java.lang.Character` static":["predicate"],"`java.lang.Character`'s static":["predicate"],"`java.lang.Math`. It":["helped"],"`java.lang.NullPointerException`. Somebody":["help?"],"`java.util.Calendar` a":["bit"],"`join \"\"`":["is","is","can"],"`join` and":["stopped","`seq`"],"`join` but":["can"],"`join` will":["convert"],"`join`. Consider":["eliminating"],"`join`. `get`":["is"],"`keys` and":["`conj`)"],"`last-letter` binding":["for"],"`last_char`. Also,":["I'd"],"`last` --":["I"],"`last` and":["I","`=`","the"],"`last` but":["it"],"`last` etc.":["apply."],"`last` function":["in","returns"],"`last` in":["your"],"`last` instead":["of","of","of"],"`last` is":["part"],"`last` over":["a"],"`last` rather":["than"],"`last` should":["work"],"`last` thanks":["to"],"`last` thing":["you'll"],"`last` to":["check","check","chec","check","check","grab"],"`last` was":["the"],"`last`, I":["didn't"],"`last`, `some`,":["and"],"`last`, but":["that"],"`last`, which":["treats"],"`last`. Also":["`silence?`"],"`last`. That's":["maybe"],"`lc`. In":["a"],"`leap-year?` in":["a"],"`left` and":["`right`"],"`leiningen` happier.":["I'm"],"`let [x":["1`"],"`let statement`.":["I"],"`let` (or":["`letfn`,"],"`let` and":["not","`cond`.","accepts"],"`let` around":["a"],"`let` binding":["would"],"`let` bindings":["are"],"`let` block":["in","there's"],"`let` blocks":["for"],"`let` body":["should"],"`let` clause":["(is"],"`let` closure":["and"],"`let` destructuring":["instead"],"`let` feels":["very"],"`let` form":["or","is","example","only","would"],"`let` here,":["since"],"`let` in":["`verse`","`add`","`add`","`pairs`"],"`let` instead":["of"],"`let` is":["meant"],"`let` isn't":["the"],"`let` like":["Haskell's"],"`let` or":["define"],"`let` over":["your"],"`let` statements,":["like:"],"`let` to":["`defn`","bind"],"`let` with":["anonymous","[`letfn`](http://clojuredocs.org/clojure_core/clojure.core/letfn)"],"`let`, `letfn`,":["`if-let`,"],"`let`, for":["clarifying"],"`let`, since":["they"],"`let`, to":["make"],"`let`, where":["the"],"`let`. Other":["than"],"`let`? My":["gut"],"`let`s to":["cache"],"`letfn` AND":["with"],"`letfn` because":["I"],"`letfn` block":["inside"],"`letfn` do":["define"],"`letfn` does":["makes"],"`letfn` for":["those?","defining"],"`letfn` form":["formatting","should"],"`letfn` instead":["of"],"`letfn` is":["particularly"],"`letfn` just":["seemed"],"`letfn` preferred":["to"],"`letfn` that":["might","can"],"`letfn` to":["capture"],"`letfn` usage":["closing"],"`letfn` was":["probably"],"`letfn`, `if-let`,":["`when-let`"],"`letfn`, `let`":["and"],"`letfn`, whatever":["is"],"`letfn`, would":["it?"],"`letfn`; however,":["this"],"`letfn`s and":["see"],"`letter-count` really":["buy"],"`letter-count` tells":["me"],"`letter-generator` a":["bit"],"`letters-all-caps?` while":["literally"],"`letters` function":["from"],"`letters`). I'm":["struggling"],"`line2` you've":["got"],"`list` and":["`vector`"],"`load-file` on":["the"],"`long-word-count` and":["pals"],"`loop`..`recur` structure":["in"],"`lower-case` and":["`replace`","`frequencies`","`frequencies`"],"`lower-case` call":["belongs"],"`lower-case` in":["`clojure.string`."],"`lower-case` instead":["of"],"`lower-case` is":["performed","an"],"`lower-case` may":["ease"],"`lower-case` the":["phrase"],"`lower-case` to":["every"],"`lower-case` twice":["on"],"`lowerA` and":["`canonicalA`","`canonicalA`"],"`lower` given":["the"],"`lowercase-word`. There's":["a"],"`make-comparable` returning":["a"],"`map not=`,":["you"],"`map-to-rna` would":["result"],"`map-to` function":["that,"],"`map` -":["just","it"],"`map` acts":["as"],"`map` and":["friends","`count`.","`every?`"],"`map` but":["that's"],"`map` can":["be","take"],"`map` for":["it's"],"`map` form":["and"],"`map` function":["call.","instead"],"`map` here":["a"],"`map` in":["clojure"],"`map` instead":["of"],"`map` into":["`map-to-rna`"],"`map`, `remove`,":["and"],"`map`, as":["you"],"`map`, or":["anything"],"`map`. Am":["I"],"`mapv` and":["removed"],"`mapv` instead":["of","of"],"`mapv`. `anagram?`":["was"],"`match` with":["`:guard`,"],"`matches (fn":["[[_"],"`matches` is":["invisible"],"`matching?` can":["use"],"`memoize` I":["end"],"`memoize` to":["wrap"],"`merge-with` could":["be"],"`merge-with` in":["the"],"`merge-with` is":["unnecessary","unnecessary"],"`merge-with`. The":["only"],"`merge` and":["`frequencies`"],"`merge` call":["(and,"],"`merge` to":["combine"],"`merge` will":["do."],"`merge` would":["suffice.","be"],"`merge`, `reduce-kv`,":["`repeat`"],"`message` explicitly,":["which"],"`move` you":["might"],"`msg` instead":["of"],"`mutation` directly":["to"],"`n-bottles` to":["generate"],"`n-bottles`. Then":["first"],"`n` to":["every"],"`name-seed` atom":["so"],"`name` at":["the"],"`name` is":["a"],"`new-robot-name` but":["it"],"`new` operator":["with"],"`nil-to-zero` -":["remember"],"`nil-to-zero`-function. Seems":["to"],"`nil` (which":["obviously"],"`nil` and":["other","other","`false`","`false`"],"`nil` are":["the"],"`nil` being":["silence?"],"`nil` for":["the"],"`nil` in":["the"],"`nil` instead":["of"],"`nil` rather":["than","than"],"`nil` to":["`response-for`?"],"`no-non-caps?` can":["also"],"`noralize`, `freqs`":["is"],"`normalizations` function;":["the"],"`normalize-digits` a":["process"],"`normalize` could":["be"],"`normalized-word` functions":["entirely."],"`not contains-x`":["pretty"],"`not silence?`":["in"],"`not-any?` -":["I'm"],"`not-any?` are":["Collection"],"`not-any?` function":["may"],"`not-any?` makes":["that"],"`not-any?` predicate,":["which"],"`not-any?`. Cool":["stuff!"],"`not-every?`. They":["are"],"`not-found` argument":["is"],"`not-found` argument.":["I"],"`not-same?` I":["expected"],"`not-same?` and":["`is-anagram?`"],"`not= 0`":["respectively."],"`not= nil`":["in"],"`not=` and":["count","again"],"`not=` are":["just"],"`not=` for":["this"],"`not=` has":["to"],"`not=` is":["just"],"`not=` on":["its"],"`not=` operator?":[":)"],"`not=` that":["can","I"],"`not=` which":["spares"],"`not=` with":["2"],"`not=`, which":["seems"],"`not=`. Although":["using"],"`not` and":["thereby"],"`nothing-said?` you":["use"],"`nothing-said?`. Then":["I"],"`nothing?` inside":["`shouting?`"],"`nothing?` would":["be."],"`ns-resolve` is":["being"],"`ns-resolve`. I":["found"],"`ns` (and":["not"],"`ns` declaration":["to"],"`ns` expression":["at"],"`ns` for":["would"],"`ns` form":["is"],"`ns` form.":["The"],"`ns` is":["to","considered"],"`ns` macro":["for","would","can","-","formatting","to"],"`ns` macro,":["there","like","because","there"],"`ns` macro.":["Like","Anyway","You","In","That's"],"`ns` should":["be"],"`ns` so":["I'm"],"`ns` special":["form"],"`ns` to":["use"],"`ns`, the":["correct"],"`ns`. You":["could","don't"],"`nucelotide-counts` using":["by"],"`nucleotide-count` supposed":["to"],"`nucleotide-counts-string` are":["very"],"`nucleotide-counts` and":["`nucleotide-counts-string`"],"`nucleotide-counts` but":["maybe"],"`nucleotide-counts` doesn't":["count"],"`nucleotide-counts` function":["here.","would"],"`nucleotide-counts` function.":["`invalid?`"],"`nucleotide-counts` is":["constant,"],"`nucleotide-counts` to":["implement"],"`nucleotide-counts` using":["your"],"`nucleotide-counts` where":["you"],"`nucleotide-counts` with":["a"],"`nucleotide-counts`, have":["you"],"`nucleotide-counts`. Any":["way"],"`nucleotide-counts`. Is":["there"],"`nucleotide-counts`. `frequencies`":["does"],"`nucleotide-counts`...idk. Or":["maybe"],"`nucleotide-counts`? There":["seems"],"`nucleotides` Var...it's":["like...this"],"`nucleotides` function":["instead","necessary?"],"`nucleotides` string":["with"],"`number` function.":["You"],"`number` into":["a"],"`number` is":["nothing"],"`number` prevented":["me"],"`numbers-only?` condition":["and"],"`on-planet` function.":["Couldn't"],"`on-the-wall` etc":["into"],"`on` function":["is"],"`on` function.":["One"],"`one-or-it` as":["the"],"`one-or-it` inside":["string"],"`or` gave":["me"],"`or` in":["the","`robot-name`,"],"`or` is":["unnecessary"],"`or` when":["you"],"`or`. To":["avoid"],"`p` don´t":["say"],"`pair-elements` at":["all."],"`pair-up` could":["just"],"`paired-elements` and":["`position-values`"],"`pairs-equal`; I'd":["love"],"`pairs` by":["having"],"`parse` is":["a"],"`parse` was":["a"],"`partial` and":["`comp`"],"`partial` anyway?":["I"],"`partial` but":["that's"],"`partial` for":["the"],"`partial` function":["out","which","there?"],"`partial` idiom,":["can"],"`partial` in":["`anagrams-for`."],"`partial` is":["unnecessary."],"`partial` to":["generate"],"`partial`, why":["not"],"`partial`. Re-wrote":["to"],"`partial`. The":["idea"],"`partition 2`":["and","could"],"`phrase` but":["line"],"`phrase` since":["only"],"`phrase`, so":["I"],"`pim` and":["`dow`"],"`pim` are":["the"],"`plural` function":["(maybe"],"`pluralize` function":["was","to","in"],"`pos?` can":["be"],"`pos` and":["`pim`"],"`pos`, `pim`":["and"],"`position-values` into":["a"],"`potential-anagrams` is":["a"],"`pow` function":["using"],"`pred`, which":["you"],"`present?` check":["in"],"`present?`. I":["needed"],"`pretty-print` function":["a"],"`pretty-print` more":["..."],"`pretty-print` was":["another"],"`pretty-print` you":["could"],"`pretty-print`. Use":["a"],"`private` equivalent":["in"],"`process` is":["either"],"`pronoun` is":["a"],"`put-name`. Possibly":["`dosync`"],"`q?` is":["probably"],"`q` is":["not"],"`query-type` as":["private."],"`question2?` to":["`question?`."],"`question? `":["peeking"],"`question?` (which":["I"],"`question?` (with":["the"],"`question?` I":["would"],"`question?` `shout?`":["and"],"`question?` `yelling?`":["and"],"`question?` and":["`yell?`","`silence?`","`silence?`"],"`question?` as":["`(and","a"],"`question?` could":["have"],"`question?` don't.":["If"],"`question?` feels":["like"],"`question?` function":["instead?","and"],"`question?` function?":["A"],"`question?` in":["terms"],"`question?` is":["unnecessary"],"`question?` methods":["private"],"`question?` more":["honest,"],"`question?` private":["since","methods"],"`question?` s":["or"],"`question?` seem":["to"],"`question?` should":["be"],"`question?` to":["use","[defn-](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/defn-)"],"`question?` with":["that."],"`question?` would":["return"],"`question?` you":["still"],"`question?`, `all-caps?`":["and"],"`question?`, `silence?`":["etc."],"`question?`, etc.":["right?"],"`question?`, for":["example.","example,"],"`question?`. As":["there"],"`question?`. It":["will","is"],"`question?`. Maybe":["there’s"],"`question?`. Otherwise":["it"],"`question?`. Strings":["can"],"`question?`. Then":["the"],"`question` could":["be"],"`question` shouldn't":["need"],"`radiator` solution,":["while"],"`rand-char` function":["at"],"`random-integer` be":["public"],"`random-integer` too":["specific"],"`random-letter` and":["`random-digit`"],"`random-robot-name` you":["could"],"`random-string-range` in":["my"],"`random-string` and":["`random-integer`","`random-integer`"],"`range-verses` -":["`range`"],"`range` by":["specifying"],"`range` call.":["The"],"`range` has":["third","3rd"],"`range` stil":["stands."],"`range` will":["take"],"`range`.( Is":["that"],"`re-find` and":["works","`re-match`"],"`re-find` could":["be"],"`re-find` might":["be"],"`re-find` that":["might"],"`re-find`. I":["can't"],"`re-match` that":["you"],"`re-matches`? Don't":["know"],"`re-seq \"#w+\"`":["for"],"`re-seq` and":["`frequencies`.","the"],"`re-seq` as":["the","another"],"`re-seq` but":["since"],"`re-seq` directly":["to"],"`re-seq` here":[":)"],"`re-seq` if":["you"],"`re-seq` in":["my"],"`re-seq` instead":["of","of"],"`re-seq` inward,":["perhaps?)"],"`re-seq` is":["lazy"],"`re-seq` might":["read"],"`re-seq` reflects":["a"],"`re-seq` so":["you'd"],"`re-seq` to":["select","filter","grab"],"`re-seq` which":["has"],"`re-seq` with":["`#\"\\w+\"`"],"`re-seq`? I":["find","find"],"`recur` call":["in"],"`recur` special":["form"],"`recur` when":["possible"],"`recur`. Can":["someone"],"`reduce-kv` and":["`into`"],"`reduce-kv` instead,":["this"],"`reduce-kv` is":["a","probably","much","probably"],"`reduce-kv` would":["feel"],"`reduce-kv`, `repeat`":["and"],"`reduce-kv`, pretty":["cool!"],"`reduce` /":["`assoc`","`merge-with`"],"`reduce` across":["the"],"`reduce` and":["your","`increment-word`","getting"],"`reduce` by":["using"],"`reduce` function":["which"],"`reduce` function.":["That"],"`reduce` instead":["of","of"],"`reduce` operation":["which"],"`reduce`. Have":["you"],"`reduce`able, but":["with"],"`reductions` is":["clever,"],"`ref` for":["mutable"],"`ref` is":["a"],"`ref`s make":["sense"],"`remaining` is":["less"],"`remove empty?`.":["Other"],"`remove-blanks` are":["entirely","unnecessary."],"`remove-consecutive-space`, `remove-special-char`,":["and"],"`remove-special-char`, and":["`split-by-space`"],"`remove`, and":["`first`."],"`remove`. I":["like"],"`repeat` and":["`zipmap`."],"`repeat` which":["repeats"],"`repeat`. Maybe":["add"],"`repeatedly` calls":["the"],"`repeatedly` in":["the"],"`replace-thymidine-with-uracil` indicates":["intent"],"`replace` a":["good"],"`replace` by":["using"],"`replace` could":["be"],"`replace` in":["your"],"`replace` method.":["I"],"`replace` on":["the"],"`replace` symbol.":["I"],"`replace` thymine":["with"],"`replace` was":["a"],"`replace`, but":["I"],"`require :as`":["feature."],"`require` -":["`:require`."],"`require` and":["`:refer`","`:as`"],"`require` as":["functions","a","functions","a","a"],"`require` can":["work"],"`require` in":["`ns`"],"`require` inside":["`ns`"],"`require` instead.":["For","You"],"`require` into":["the"],"`require` is":["preferred"],"`require` or":["`use`","`use`"],"`require` statement":["here."],"`require` thanks":["to"],"`require` the":["way"],"`require` usage":["here:"],"`require` without":["a"],"`require` you":["are"],"`require`, that":["way"],"`require`. Beyond":["fiddling"],"`require`/`refer` like":["this:"],"`require`s in":["the"],"`reset!` are":["called"],"`reset!` is":["suitable"],"`reset!` returns":["the"],"`reset!`- is":["it"],"`reset-name` function":["assumes"],"`reset-name` is":["called","called"],"`respond` and":["in"],"`response-for` `str/blank?`":["is"],"`response-for` a":["bit"],"`response-for` and":["giving","declare"],"`response-for` around":["the"],"`response-for` became":["pretty"],"`response-for` clearer":["(or"],"`response-for` could":["benefit"],"`response-for` doc":["string"],"`response-for` doesn't":["matter."],"`response-for` down":["to"],"`response-for` functinon,":["which"],"`response-for` function":["very","in","does","-","mixes"],"`response-for` function:":["it's"],"`response-for` has":["a"],"`response-for` is":["much","currently"],"`response-for` less":["cluttered"],"`response-for` look":["a"],"`response-for` method":["you"],"`response-for` method,":["it"],"`response-for` method.":["I"],"`response-for` on":["any"],"`response-for` or":["inline"],"`response-for` read":["as"],"`response-for` return":["the"],"`response-for` should":["be","be"],"`response-for` that":["is"],"`response-for` with":["a"],"`response-for`. It":["would"],"`response-for`. You":["could","could"],"`response-for`: comments":["are"],"`response-for`? Glad":["to"],"`response-for`? It's":["unspecified,"],"`responseLookup` is":["a"],"`responseLookup`. More":["optimal"],"`response` instead":["of"],"`response`. If":["anyone"],"`rest` be":["better"],"`rest` is":["doing"],"`rev-subs` function":["results"],"`rev-subs` wouldn't":["be"],"`reverse`, you":["might"],"`right` suggest":["that"],"`robot-name-generator`. Since":["you're"],"`robot-name` is":["called","called."],"`robot-name` might":["not"],"`robot-name` should":["one"],"`robot-name` will":["return"],"`robot-name`, however":["that"],"`robot` is":["called"],"`s/lower-case` and":["`frequencies`."],"`s/split` if":["it's"],"`s` a":["better"],"`s` as":["an"],"`s` but":["comparing"],"`s` in":["`letfn`","each"],"`s` is":["idiomatic","a"],"`s` or":["`c`"],"`s` seems":["too"],"`s` variables":["in"],"`s`, which":["I'm"],"`s`. Do":["you"],"`sanatize` really":["a"],"`sanitize-string` really":["reveal"],"`sanitize` regex.":["You"],"`say-nothing?` has":["already"],"`say` is":["a"],"`screaming?` could":["be"],"`second-couplet` function":["is"],"`second-line` if":["you"],"`second-line`. Might":["decrease"],"`second-part` but":["not"],"`second-part`. Yes,":["you're"],"`second` are":["often"],"`sentence` every":["time."],"`sentence` or":["`phrase`"],"`sentiment` from":["the"],"`seq-able` so":["the"],"`seq-contains?` seems":["to"],"`seq-to-dna` because":["it's"],"`seq` -":["strings"],"`seq` are":["unnecessary?"],"`seq` based":["thinking"],"`seq` call":["on"],"`seq` in":["your"],"`seq` is":["redundant.","optional...","unnecessary.","a"],"`seq` on":["line","line"],"`seq` with":["`re-find`."],"`seq`). There":["are"],"`seq`, it's":["common"],"`seq`-able in":["Clojure,"],"`seq`s are":["unnecessary.","the"],"`seq`s in":["`anagram`"],"`sequence`, but":["surely"],"`set-name` -":["`defn`/`fn`","`reset!`"],"`set` is":["just"],"`set` of":["all"],"`set`, `keys`":["and"],"`set`s can":["be"],"`shout?` and":["`question?`","`question?`","`nothing-said?`."],"`shout?` is":["somewhat"],"`shout?` until":["you"],"`shout?`, but":["your"],"`shouted` but":["that's"],"`shouting?` and":["`question?`","`question?`","`asking-politely?`"],"`shouting?` can":["be"],"`shouting?` condition,":["you"],"`shouting?` etc.":["So","so"],"`shouting?` for":["your"],"`shouting?` predicate":["depend","is"],"`shouting?` rather":["than"],"`shouting?` to":["make"],"`shouting?` using":["it","it"],"`shouting?`, etc.":["That's"],"`shouting?`. However,":["your"],"`shouty?` asks":["*does"],"`shouty?` is":["unnecessary."],"`shouty?` the":["problem"],"`shouty?` —":["it’s"],"`silence?` `shout?`":["and"],"`silence?` `shouting?`":["and"],"`silence?` check":["within"],"`silence?` could":["use"],"`silence?` declared":["as"],"`silence?` functions?":["They're"],"`silence?` isn't":["necessary"],"`silence?` methods.":["I'd"],"`silence?` private":["methods"],"`silence?` to":["2","`blank?`."],"`silence?` was":["consistent"],"`silence?` —":["that"],"`silence?`, `shouting?`":["and","etc."],"`silence?`, `shouting?`,":["etc."],"`silence?`, `yelling?`":["and"],"`silence?`, you":["can"],"`silence?`. The":["usage"],"`silence?`. You're":["calling"],"`silence` could":["also"],"`silence` function.":["I'll"],"`silence`: `(re-find":["#\"^\\s*$\""],"`silent?` could":["definitely"],"`silent?` function":["a"],"`silent?` is":["an"],"`silent?` or":["`shouting?`"],"`silent?` s.":["Instead,"],"`silent?` that":["did"],"`silent?` to":["match"],"`silent?` twice,":["I"],"`silent?`, `shouting?`":["and"],"`sing` function.":["Consider"],"`sing` is":["interesting.","great,"],"`sing` like":["below,"],"`sing` over":["the"],"`sing` seems":["like"],"`sing` to":["join"],"`sing`, and":["thanks!"],"`slient?` twice":["per"],"`so-many` in":["order"],"`some ...":["prompt`."],"`some-\u003e` macro":["can"],"`some-\u003e` macro.":["It"],"`some` and":["`not-any?`","`not-any?`","`not-any?`"],"`some` if":["your"],"`some` is":["not","more"],"`some` to":["detect"],"`some`, and":["`not-any?`."],"`sort upper-case`":["is"],"`sort-by` is":["really"],"`sort-chars`. There's":["also"],"`sort-grade` you":["could"],"`sort-phrase` does":["not"],"`sort-word` is":["more"],"`sort` -":["makes"],"`sort` for":["another","other","other","another","other","another","other"],"`sort` have":["a"],"`sort` in":["that"],"`sort` initially":["but"],"`sort` or":["anything"],"`sort` was":["what"],"`sort` will":["work"],"`sort` with":["another","other","another","another"],"`sort` would":["be"],"`sort`, since":["it"],"`sort`, totally":["missed"],"`sort`, which":["should"],"`sort`. Also":["fixed"],"`sorted-chars` can":["be"],"`sorted-lowered s`":["multiple"],"`sorted-lowered` back":["to"],"`sorted-map` is":["not"],"`sorted-school` test?":["I"],"`sorted-word` as":["the"],"`sorted` can":["be"],"`sorted` function":["does"],"`sorted` is":["definitely"],"`sorted`, instead":["of"],"`sorted`, using":["`reduce-kv`"],"`sorted`. Good":["looking"],"`split-by-space` in":["one"],"`split` and":["`remove-blanks`","`remove-blanks`"],"`split` behind":["a"],"`split` for":["this"],"`split` harder":["to"],"`split` isn't":["necessary."],"`split` method":["too"],"`split` on":["that"],"`split`, but":["don't"],"`split`. So":["the"],"`split`ting a":["string"],"`square` from":["inside"],"`square` function":["a"],"`statement?` function":["and"],"`statement` for":["the"],"`str/` prefix":["to"],"`str/blank?` is":["at"],"`str/join`. Just":["use"],"`str/lower-case`. I've":["also"],"`str` -":["those"],"`str` and":["compare","create","directly"],"`str` casts":["to"],"`str` feels":["really"],"`str` forms":["could"],"`str` forms.":["Maybe"],"`str` function.":["(Note"],"`str` is":["a"],"`str` still":["will"],"`str` the":["first"],"`str` vs":["`string`"],"`str` when":["you"],"`str`. Other":["than"],"`str`; as":["this"],"`strand-compare` sounds":["a"],"`string-&gt;words` would":["be"],"`string-\u003esorted-chars`, see":["https://github.com/bbatsov/clojure-style-guide/blob/master/README.md#naming."],"`string/blank?`, and":["would"],"`string/join` on":["a"],"`string/replace` not":["being"],"`string/replace` sometime":["soon."],"`string/replace` to":["`replace`"],"`string/replace` versus":["a"],"`string/replace` won’t":["work,"],"`string/replace` would":["have"],"`string/replace`, I":["don't"],"`string/replace`, I'll":["iterate"],"`string/split` bit,":["but"],"`string/split` so":["that"],"`string` as":["an"],"`string` is":["very"],"`stringify-keys` a":["bit"],"`sts=2` in":["my"],"`subject-char-freq` without":["any"],"`subs` function":["that"],"`subs` function,":["I"],"`subs` is":["probably"],"`subs` version.":["Can"],"`swap!` are":["called"],"`swap!` calls":["to"],"`swap!` function":["gets"],"`swap!` in":["order"],"`swap!` is":["run"],"`swap!` returns":["the"],"`swap!` with":["a","a"],"`swap!`. Fortunately":["each"],"`swap` or":["`flip`"],"`take-down-or-store` more":["readable."],"`take` to":["be"],"`target` along":["with"],"`teenth?` method":["from"],"`teenths`, `firsts`,":["etc"],"`telling?` statement.":["That"],"`telling?` when":["you"],"`text` explicitly":["three"],"`third` and":["`fourth`"],"`this` as":["a"],"`thyidine?` private":["are"],"`thymidine` and":["`uracil`."],"`thymine` and":["`uracil`"],"`to-rna-1` to":["what?"],"`to-rna` (either":["in"],"`to-rna` becomes":["an"],"`to-rna` out":["of"],"`to-rna`, I":["suppose."],"`to-rna`, which":["is"],"`toLowerCase` method":["if"],"`toUpperCase` and":["importing"],"`tokenize` is":["useful"],"`tone-for`; it":["doesn't"],"`total` by":["calling"],"`total` could":["be","be"],"`transcribe-rna` can":["be"],"`transcribe` function,":["and"],"`transcribe` method":["much"],"`transcribe` or":["`to-rna`."],"`transform-row` using":["`partial`"],"`transient` by":["looking"],"`translate`, you":["might"],"`trim-stuff`, but":["I"],"`trim` as":["`blank?`."],"`trim` in":["`silence?`"],"`true-anagram?` with":["a"],"`true?` for":["filtering."],"`true?` function":["that"],"`true` branch":["of"],"`true` for":["the","catch-all","inputs"],"`true` works":["fine,"],"`true`. Obviously":["that"],"`type-responses` map.":["It"],"`universe` gave":["me"],"`update-in` along":["with"],"`update-in` but":["then"],"`update-in` function.":["It"],"`update-in` instead":["of"],"`update-in`. Am":["I"],"`upper-case` and":["`trim-string`?"],"`upper-case` from":["clojure.string...","`clojure.string`"],"`upper-case` function":["in","calls"],"`upper-case` instead":["of"],"`upper-case` without":["any"],"`upper-case`, `lower-case`,":["etc."],"`upper-case`, and":["you"],"`upper-case`? I'll":["make"],"`upper-cased-and-letter?` kind":["of"],"`upper` in":["`clojure.string`,"],"`uppercase?` further":["by"],"`uppercase?`. There":["is"],"`uracil` makes":["it"],"`uracil`. Certainly":["this"],"`use` `:only`,":["and"],"`use` all":["of"],"`use` and":["`require`","`require`"],"`use` block,":["you"],"`use` functions":["in"],"`use` is":["considered","deprecated.","deprecated.","deprecated","generally","deprecated.","generally","used"],"`use` or":["`require`"],"`use` the":["`clojure.string","`clojure.string`"],"`use` to":["`require`"],"`use`/`:use` is":["deprecated."],"`valid-nucleotide?` could":["just"],"`valid-nucleotide?` function":["based"],"`valid-nucleotide?` is":["executed"],"`valid-nucleotide?` seems":["a"],"`valid-nucleotide?` to":["argument-less"],"`valid-nucleotides` var":["and"],"`valid-triangle?` function":["to"],"`validate` method":["(to"],"`vec` and":["`conj`"],"`vec` is":["necessary,","unnecessary"],"`vec` isn't":["needed.","needed."],"`vec` or":["`set`."],"`vec` shouldn't":["be","be"],"`vec` was":["not"],"`vec`. Lists":["and"],"`vector` and":["couldn't"],"`vector` which":["is"],"`vector` with":["the"],"`verse-template` probably":["just"],"`verse` and":["`take-down-or-store`"],"`verse` ends":["up"],"`verse` function.":["Personally"],"`verse` method,":["but","I"],"`verse` to":["more"],"`verse` with":["a"],"`verse`) -":["it"],"`verse`. I":["think"],"`w12req` a":["typo?"],"`w` represent,":["maybe"],"`when-let` which":["can"],"`when-not` could":["spare"],"`when-not` if":["you"],"`when-not` instead":["of"],"`when` -":["it"],"`when` functions.":["There"],"`when` instead":["of"],"`when` which":["seems"],"`when`. There's":["also"],"`where` clause,":["but"],"`without-lcase-chars (not-any?":["#(Character/isLowerCase"],"`word-chars` does":["not"],"`word-count` -":["I'd"],"`word-count` a":["bit"],"`word-count` as":["I"],"`word-count` but":["that"],"`word-count` capture":["more"],"`word-count` contract,":["not"],"`word-count` function.":["I"],"`word-count`, since":["this"],"`word-count`. Figured":["refactoring"],"`word-freq` and":["`candidate-freq`?"],"`word` and":["`candidate`"],"`word` argument":["does","would"],"`word` being":["calculated"],"`word` for":["each"],"`word` once":["and","for"],"`word` once,":["as-is"],"`word` over":["and"],"`word` repeatedly.":["But"],"`word` to":["compare","avoid"],"`word` value":["separately"],"`word` with":["every","every","every"],"`words-count`, but":["I"],"`words-from-phrase` is":["misleading"],"`words` a":["more"],"`words` function?":["Perhaps"],"`words` in":["`words-from-phrase`"],"`words` into":["its"],"`words` or":["`words-count`,"],"`words` than":["it"],"`words`, it's":["something"],"`ws` and":["`w`"],"`x` is":["definitely"],"`x` stands":["for."],"`x` variable":["to"],"`x`, and":["you"],"`xs` and":["`ys`"],"`yell?` doesn't":["work","sit"],"`yell?` private":["with"],"`yell?` when":["`say-nothing?`"],"`yell` and":["`blank`"],"`yelling?` and":["`question?`","`question?`.","`silence?`","`silence?`","`question?`.","`question?`","`question?`","`question?`,"],"`yelling?` or":["something"],"`yelling?` s,":["that's"],"`yelling?` the":["only"],"`yelling?` to":["`#\"[A-Z]`"],"`yelling?`, `asking?`,":["etc."],"`ys` is":["justified."],"`zero?` and":["`pos?`"],"`zero?` is":["a"],"`zero?`, `not=`.":["Although"],"`zip` is":["unnecessary"],"`zip` may":["be"],"`zip`, but":["apparently"],"`zipmap` into":["`to-rna`,","`to-rna`"],"`zipmap`. Is":["that"],"`zipvec` could":["be"],"`zipvec` function,":["but"],"`{:area code":["XXX"],"`{:pre (...":["pre-condition"],"`{:pre [...]}`":["thing"],"`{\\T \\U}`":["and"],"`{name (atom":["(make-a-name))}`"],"`{}` is":["closely"],"`…` is":["a"],"a \"T\".":["In"],"a \"bob\"":["solution,"],"a \"magic":["letter\"."],"a \"simple\"":["`lower-case`"],"a \"word\"":["(aka"],"a '?'.":["Something"],"a 'signature'":["for"],"a (US)":["phone","phone"],"a (not":["(empty?"],"a *Lisp*.":["The"],"a *word*":["and"],"a 2-D":["vector"],"a 3rd":["argument"],"a 40":["million"],"a 90":["degree"],"a ?\"*":["does."],"a C-ish":["language,"],"a CSS":["regression"],"a Calendar":["instance"],"a Clojure":["beginner","beginner,","thing,","term,","and","function"],"a DNA":["strand,"],"a Java":["method,","method?"],"a Map.":["The"],"a NullPointerException.":["May"],"a PITA":["kind"],"a PITA,":["but"],"a RE":["sounds"],"a REPL":["and","session"],"a RNA":["acid"],"a RegEx":["straight","there,"],"a String":["as","is"],"a TDD":["fashion"],"a U":["instead"],"a URL":["to"],"a Var":["that","to","with"],"a [DFA](http://en.wikipedia.org/wiki/Deterministic_finite_automaton)":["where"],"a [declare":["function](http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/declare)."],"a `(defn":["...`"],"a `9`.":["I"],"a `:pre`":["condition"],"a `:rename`":["argument"],"a `?`":["at"],"a ````last````":["function"],"a ```ends-with?```":["function"],"a ```let```":["block,"],"a ```use```":["clause"],"a `anagram?`":["function"],"a `blank?`":["in"],"a `case`":["might","with","statement"],"a `char[]`)":["so"],"a `cleanup`":["function"],"a `clojure.core`":["function"],"a `clojure.string/blank?`":["function"],"a `clojure.string`":["namespace","function?"],"a `cond`":["without","is","function","having","with","and","block.","function,","are","with"],"a `def`":["or"],"a `defn`":["before,"],"a `doseq`":["to"],"a `for`":["comprehension,","comprehension.","comprehension"],"a `frequencies`":["instead"],"a `let`":["or","here,","isn't","with","feels","clause","block","(or","block"],"a `let`,":["since"],"a `letfn`":["block","for"],"a `map`,":["or"],"a `not-any?`":["predicate,"],"a `ns`":["so"],"a `ns`.":["You"],"a `partial`":["function"],"a `present?`":["check"],"a `private`":["equivalent"],"a `question?`":["s"],"a `reduce`":["operation","function.","function"],"a `seq`":["in"],"a `set`":["of"],"a `silent?`":["s."],"a `split`":["method"],"a `string/join`":["on"],"a `string/replace`,":["I"],"a `swap`":["or"],"a `teenth?`":["method"],"a `telling?`":["statement."],"a `true?`":["function"],"a `use`":["block,"],"a `words`":["function."],"a `yelling?`":["s,"],"a already":["sorted"],"a and":["b"],"a anonymous":["function"],"a b))`":["#"],"a b)`":["does"],"a b)`.":["The"],"a bad":["idea.","joke)","thing,","idea,","thing","hint,"],"a ball,":["so"],"a base":["map;"],"a beginner":["and"],"a benefit":["like"],"a best":["practice."],"a better":["implementation","way","solution.\"","solution.","name","naming,","name,","or","choice","solution.","way.","solution.","choice","algorithm","algorithm","algorithm","chance","algorithm","name?","regex","normalization","way","name,","way","conceptual","way","way","way","name","name.","use","alternative,","function","name","name?","name","direction.","name","name,","way","understanding","one!","solution","name?","way","way","comprehension.","way","choice","way.","name","term","name?","name?","choice","idea."],"a big":["issue?","deal,","improvement.","deal"],"a bigger":["system,","program,"],"a bigint.":["You'd"],"a bikeshed":["moment,"],"a binary":["is"],"a binding":["for","with"],"a biology":["background,","background,"],"a bit":["with","limiting.","more","more","confusing","of","unclear","faster","misleading.","more","inconsistent","excessive","of","surprised","unsure","nicer","more",":)","more","more","of","off.","about","of","too.","here?","misleading.","weird","quirky...","of","which","more","desperate","easier","more","on","dated,","better","off.","confusing","too","noisy","crazy.","off","of","of","cleaner.","simple.","of","(!)","better","wonky,","off","simpler.","off.","with","obscured.","more","baroque,","from","terse.","awkward","more","shorter","easier","to","that","ugly.","strangely","I","hard","complex","messy.","non-standard,","shorter","more","better","busy","non-standard","more","more","of","misleading.","off","verb-y","by","nicer:","is","more,","when","prettier","more","more","overkill.","more","too","over","ugly,","to","out","like","more","more.","in","new","clearer.","slow","more","because","more","to","of","more","procedural.","mysterious","shorter","shorter","over","understanding","to","misleading:","of","more","more","as","more","clearer.","simpler.","more","awkward.","simpler?","awkward.","more","more","less","more","simpler.","hard","odd","by","of","more","tricky.","(and","too","more","to","hard","more","to","more","though,","more","lost","more","differently.","too","clearer.","simpler.","simpler."],"a bit,":["though","most","in"],"a bit.":["For","I","Since"],"a bit:":["Change"],"a blank":["line"],"a blunder.":["dna-seq"],"a boolean":["which","end","result.","value","result.","with"],"a boolean,":["so"],"a bounded":["problem,","problem,"],"a broader":["response"],"a bug":["has","here.","in"],"a bug.":["I've","Looks","I"],"a built":["function,","in","in","in"],"a built-in":["function","way"],"a bunch":["of","of","of","of","of"],"a call":["to","to","to","to"],"a calls":["function"],"a candidate":["argument"],"a case":["statement","mapping","like","insensitive","normalized","normalized","in","statement).","where","function"],"a case-insensitive":["comparison)."],"a certain":["amount","zen"],"a chain.":["I"],"a chance":["to"],"a char":["then","`\\U`"],"a char-range":["function"],"a character":["(literal),","class","or","is","case","array","array"],"a check":["but","for","to"],"a chromosome?":["any"],"a clean":["way"],"a cleaned":["string,"],"a cleaner":["way","way","way","overall","overall"],"a clear":["gain","separation"],"a clever":["solution"],"a clojure":["beautifier,","n00b,","code","newbie"],"a clojure.core":["function"],"a closer":["look"],"a closure":["to"],"a code":["change."],"a coder...":["the"],"a collection":["of","of","independent","which","of","of","of","is"],"a collision.":["Sure,"],"a comma.":["I'll"],"a comment":["or","explaining"],"a common":["pattern","function","method"],"a comparable":["word"],"a comparison":["function?"],"a compile":["time"],"a complete":["sentence"],"a composition":["of","of"],"a concise":["way"],"a concrete":["implementation","implementation","collection"],"a concurrent":["situation."],"a cond":["is","will"],"a conditional":["every","with"],"a conditional,":["it's"],"a connotation":["of"],"a consistent":["level"],"a constant":["string","in","for","-","(and"],"a constructor":["call."],"a contract,":["you"],"a convenience":["method"],"a conversation":["or"],"a conversion":["function"],"a core":["function","clojure","function","clojure","clojure","namespace","Clojure","Clojure"],"a cost":["but"],"a count":["of","to"],"a count,":["but"],"a counter":["argument"],"a counting":["process,"],"a couple":["minor","of","things:","of","of","fewer","of","of","keystrokes.","of","useful","of","lets","refactorings","of","of","of","things","of","final","of","of","of","of"],"a crazy":["amount"],"a current":["namespace.","namespace,"],"a custom":["to","comparison."],"a day":["that's"],"a deal,":["and"],"a decision":["between"],"a declarative":["mini-language"],"a default":["case","response","response,","value","value","value,","value","condition","value","expression"],"a definition":["of"],"a deterministic":["way"],"a dialog":["for"],"a dictionary.":["I"],"a difference":["in","though,"],"a different":["question,","regex","function","way.","line?","definition","level","one","approach","way","abstraction,","order","approach.","email","regex","function","conditional","way","regex","choice"],"a dig":["through"],"a digit,":["it"],"a discussion":["on"],"a distinct":["piece"],"a docstring":["or","but","or"],"a docstring.":["I","Things"],"a documented":["standard."],"a domain":["construct.","concept,"],"a double":["call","instead"],"a dynamic":["root","binding"],"a exercism":["submit"],"a fact":["that"],"a factor":["in","of"],"a factory":["of"],"a failing":["test:"],"a fair":["bit","amount"],"a fairly":["common"],"a fan":["of","of","of","of","of"],"a fantastic":["book"],"a favour":["at"],"a feather":["due"],"a feature":["of"],"a feel":["was"],"a feeling":["there"],"a few":["things","tweaks","options","arguments","functions.","nits","iterations,","of","implementation","chars","points","options","examples","big","of","observations:","weeks","suggestions","`doseq`s","characters","minor","saved","times","more","ways","things","of"],"a filtering":["function,"],"a first":["argument","clojure","step","step."],"a fn),":["so"],"a fn.":["One"],"a for":["loop,"],"a form":["like","of","that"],"a four-character":["map"],"a fraction":["faster"],"a frequencies":["implementation"],"a frequency":["map","map","map"],"a friend":["what"],"a full":["on"],"a full-on":["[`anonymous"],"a full-time":["Rubyist;"],"a function":["in","named","declaration,","that","would","from","that","which","that","that","like","that","too","that","that","that","or","(as","for","in","working","for","accepting","works","for","that","for","accepting","like","in","on","like","with","that","like","that","with","that","with","returning","with","to","for","like","to","that","named","in","for","that","than","you'd","that","precondition","to","with","call.","can","(either","call","is","for","that","when","that","name.","so","`clojure.string/join`.","that","is","to","even","is","that"],"a function's":["docstring"],"a function)":["that","so"],"a function,":["like","however,","so","but"],"a function.":["Hint:","They","e.g.","The","You"],"a function/idiom":["that"],"a functional":["way.","point","language"],"a functions.":["`count-nucleotides`"],"a general":["rule,","rand-chars","purpose"],"a generalization":["of","of"],"a generated":["string?"],"a generic":["term."],"a given":["statement),","statement","string.","language","pattern","statement.","program","API.","word","predicates","set.","number","sentiment,"],"a glance":["what","and"],"a global":["var"],"a go":[":)","at","at","at"],"a go.":["I"],"a good":["idea","idea.","compromise.)","compromise.","idea","question,","solution","argument,","idea","point","practice.","fit","point,","idea.","plan","idea","way","trick.","way","one.","thing","chunk","editor","idea.","practice","idea","job","thing.","learning","idea","idea.","reason","practice","case","docstring","name.","thing","call;","learning","sort","experiment.","start","alternative","practice","question.","idea?","opportunity.","time","indicator","idea","case","reason","time","sign","time","start!","Clojure","example","time"],"a google":["search","for","for","to"],"a great":["catch-all.","nit!","solution.","&amp;","Lisp","construct","learning","tool","case","learning","exercise","deal"],"a great-named":["parameter,"],"a guess).":["`into`"],"a guiding":["pattern"],"a handful":["of"],"a handy":["alias"],"a hardcoded":["value"],"a harder":["problem","time"],"a hash":["function","does","function.","and","bothers","would","and"],"a hash-map":["to","as"],"a hash-map.":["Though"],"a headache!":["There's"],"a helper":["function?\u003cbr\u003e","private","function","function.","function?","function","function"],"a helpful":["error"],"a high":["order"],"a higher":["level"],"a hint":["that","of","without"],"a hint:":["look","look","look"],"a hint?":[":)"],"a huge":["eye-opener","chance","regex","difference?"],"a hyphen":["and"],"a hypothetical":["requirement"],"a iteration":["(that's"],"a justified":["case"],"a key":["lookup.","lookup."],"a keyword":["-","form","for"],"a kind":["of"],"a lamba":["and"],"a lambda":["function"],"a language":["called","barrier","head-first","that"],"a large":["problem","number"],"a larger":["codebase.","refactoring"],"a last":["resort"],"a later":["date.","exercise,"],"a lazy":["sequence","sequence.","sequence.","`seq`,"],"a lazy-sequence":["so"],"a left":["over"],"a less":["complicated/expensive"],"a let":["binding","inside","statement","to"],"a let,":["you"],"a let.":["Then"],"a letfn":["or"],"a letter.":["However"],"a level":["and"],"a lexical":["binding","sort"],"a library":["to","function"],"a line":["of","by","-"],"a linear":["array."],"a list":["comprehension","of","of","of","zipper","-","back","of","of","requires"],"a literal":["-","set"],"a little":["work.","too","unclear","harder","awkward","slow,","nicer","simpler","while,","DRYer.","perplexed","shorter","by","duplication","too","bit","confused","more","more","overkill","shorter","clearer","recursion","bit","more","bit","undecided","bit","while","smaller.","clumsy,","nonsensical,","heavy-handed.","less","clearer","bit","bit","bit","more","cleaner.","funny.","bit","cleaner?","simpler.","bit","nicer","more","cleaner","more","bit","janky,","more","more","weird","bit","simpler","unclear,","convoluted"],"a little.":["(It"],"a local":["version","function","alias"],"a logical":["false.","evaluation"],"a long":["list.","strand","doc.","one,"],"a long-time":["lisper,"],"a longer":["file"],"a look":["at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","`format`","at","at","at","into","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at"],"a look!":["Will"],"a loop":["but","over","for"],"a loop/recur":["or"],"a lot":["more","clearer.","of","more","more.","going","of","easier.","of","of","to","by","cleaner.","--","of","though.","of","of","better","of","of","shorter","@freeman!","of","of","of","of","more","more","more","of","in","about","of","I","simpler","harder","nicer.","and","with","to","to","easier","of","clearer...","of","of","simpler","simpler"],"a lot.":["Is","No,","I'd"],"a low-level":["tool"],"a lower":["level"],"a macro":["to","instead","and"],"a mad":["scientist."],"a magic":["letter."],"a maintainer":["could"],"a major":["dictionary"],"a map":["of","(which","or","of","full","using","of","that","of","of","in","lookup.","are","because","function","and","literal","for","instead","at","is"],"a map,":["but"],"a map-destructuring":["let"],"a map.":["(Incidentally,","It","That","An"],"a mapping":["function"],"a mapping,":["and"],"a matter":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"],"a maybe":["monad."],"a meaningful":["name,"],"a measurable":["difference"],"a memory":["overhead"],"a message":["telling"],"a metadata":["to"],"a method":["in","with","name","to"],"a minimum":["number"],"a minor":["detail,","observation"],"a minute":["to","to"],"a missing":["whitespace"],"a misspelling":["cause"],"a mistake":["with","like"],"a moderator.":["So"],"a module":["that","that"],"a moment":["to","of"],"a more":["descriptive","descriptive","descriptive","concise","minimal,","succint","DRY","structured","real-world","proper","Clojure-ish","general","descriptive","obvious","sane","general","accessible","concise","complex","efficient","specific","idiomatic","lispy","readable","of","descriptive","fitting","outside-in","compact","idiomatic","concise","robust","general","functional"],"a much":["more","better","wider","simpler","better","cleaner","nicer","more","simpler","shorter"],"a multi-method":["implementation."],"a multi-threaded":["environment,"],"a multimethod":["and"],"a multiple":["of","of"],"a mutable":["value"],"a mystery":["as","to"],"a name":["you","from","as","that","like","for","to","change","that","to","that","that","for","by","and","at"],"a name!":["Have"],"a named":["concept?","function,","function"],"a namespace":["in","var","name.","(YMMV.)","called"],"a namespace,":["like","e.g."],"a namespace.":["In","Probably"],"a namespace;":["I"],"a namespace?":["Or"],"a narrow":["scope"],"a native":["Clojure","Clojure","C"],"a neat":["way"],"a need":["to","to"],"a negative":["step"],"a nested":["form","forms"],"a new":["version.","version","version","version","version","statement","version","version","version.","version","way","name.","line","version","context","version","revision","approach","set","nucleotide","version","word,","version","version","line","line.","one","iteration","line).","function","function","function","name","string","robot"],"a newbie":["with"],"a newcomer,":["reading"],"a newline":["between","it","and"],"a newline,":["instead"],"a next":["exercise,"],"a nice":["shorthand","pattern.","screencast","symmetry","pattern","trick","functional","consistent","symmetry","touch","choice.","solution.","tip"],"a nit,":["just"],"a nitckpick":["saying"],"a nitpick":["to"],"a nitpick.":["The"],"a no":["brainer,"],"a non-concurrent":["environment,","environment,"],"a non-deterministic":["way"],"a non-insanely-trivial":["example"],"a non-public":["def"],"a non-sensing":["experience"],"a non-test":["namespace."],"a noob":["to"],"a ns":["like"],"a nucleotide":["strand","namespace","\"X\""],"a number":["of","of","of","of"],"a number?":["What"],"a one":["liner"],"a one-liner":["that"],"a pain":["in","that"],"a pair":["of","of","of","of"],"a part":["of","of","of"],"a partial":["application"],"a partially":["realized"],"a particular":["substring","learning","day."],"a particularly":["useful"],"a pause":["to","-"],"a perennial":["problem"],"a perfectly":["good"],"a performance":["boost","difference","regression"],"a person":["reading"],"a personal":["preference","preference","mission"],"a phase,":["you"],"a phrase":["(silence,"],"a piece":["of"],"a pipeline":["of","like:"],"a pipeline,":["there's"],"a place":["that"],"a plain":["statement\".","statement\".","Exception."],"a pleasure":["to"],"a point:":["the"],"a poor":["choice","fit"],"a pore":["over"],"a positive":["assertion","assertion","comment"],"a possibility":["of"],"a possible":["substitute","alternative."],"a pre":["condition.","condition","condition"],"a pre-calculated":["canonical"],"a predicate":["and","function.","function","and","like","to"],"a preference.":["(It"],"a preferred":["choice,"],"a pretty":["clean","good","nice","short","good","good","nifty","generic","small","good"],"a previous":["exercise."],"a private":["function","function.","helpers","`question?`","function","function","helper","function,","function","method.","method","function","function,","function."],"a problem":[":)","that","with","for","if","with","that"],"a problem,":["and"],"a process":["where"],"a processed":["version"],"a project":["that"],"a project.clj":["file"],"a proper":["lein"],"a property":["````(fn"],"a protocol":["to","and"],"a public":["interface.","API.","API.","interface.","method","definition.","definition."],"a pull":["request","request","request","request"],"a pull-request":["to"],"a question":["of","already.","mark?","mark","mark.","-","mark","can","be","mark","mark","mark","mark.","of","mark","mark."],"a question,":["or","or","but"],"a question.":["What"],"a question?,":["so"],"a random":["name"],"a range":["instead","instead","and"],"a range.":["Could"],"a range?":["That"],"a raw":["histogram,"],"a re-implementation":["of"],"a reader":["and","can"],"a real":["motivation","brain-teaser","system,","program","sequence","world"],"a really":["interesting","great","descriptive","nice","convenient","good","mysterious","good"],"a reason":["you",";)","to"],"a reasonable":["algorithm","thing"],"a reasonably":["clean"],"a recalcitrant":["teenager)"],"a record.":["I"],"a recourse":["if"],"a recursive":["way"],"a reduce":["function","function","fairly"],"a redundant":["`nil`","space","space"],"a reference":["to"],"a regex":["works,","to","here","for","as","too,","is","for","just","match?","to"],"a regex,":["`clojure.string/replace`"],"a regex-based":["solution"],"a regex.":["Nicely","Did"],"a regex?":["Or"],"a regexp":["may","that","for","search-replace"],"a regular":["expression","expression,","expression","expression","hammer.","string\")```","\u003ccode\u003econd\u003c/code\u003e","expression","expression.","expression"],"a related":["note,"],"a rename":["of"],"a replace":["function","for"],"a replace.":["If"],"a replacement":["function"],"a representation":["of"],"a require":["at"],"a required":["feature"],"a requirement":["?"],"a responder":["function"],"a result":["they"],"a riddle":["for"],"a right":["triangle,"],"a rna":["sequence"],"a robot":["name,","name."],"a rogue":["paren","paren"],"a role":["that"],"a rough":["port","benchmark"],"a rubyist":["and"],"a rush":["to"],"a sample":["solution"],"a sane":["thing"],"a say-nothing?":["and"],"a science":["fiction"],"a second":["one","argument","argument!"],"a seldom":["used"],"a sensible":["answer.","way"],"a sentence":["about","can"],"a separate":["line","line","function","var","lines.","function.","val","clause","function","hash-map?","helper","line,","function"],"a separate,":["independent"],"a seq":["and","of"],"a seq.":["The"],"a sequence":["of","of","of","of","of","of","of","of","of","(it","to","of","of","of","of","of","(aka","of","back","for","that","of","of","of","into","and","since"],"a sequences":["of"],"a serial":["number","number,"],"a series":["of","of","of","of","of","of"],"a set":["to","of","literal","of","that","takes","of","of","as","as","as"],"a set.":["Sets"],"a several":["useful"],"a short":["alias"],"a shortcut":["for"],"a shorter":["regex","name.","name"],"a shorter,":["anonymous"],"a shorthand":["for","function"],"a shout.":["This"],"a shouting":["statement,"],"a shrinking":["collection"],"a sign":["that"],"a significant":["difference,"],"a silent":["req?"],"a similar":["vein,","nitpick","approach,","level"],"a simple":["exercise,","`string/replace`","map","keyword.","context","`(sort","problem,","problem","`merge`","alias.","`merge`","core","exercise","operation","`(vec","conditional","`(map","`map`","`if`","`if`","one"],"a simpler":["way","way","way","version","way","solution"],"a simplification":["of"],"a single":["builtin","clause.","character.","character.","blank","let","DNA","function","`cond`.","line).","function.","pass","`filter`.","line)","line;","`filter`","function","space","branch,","argument","one","`clojure.string/replace`","regex,","regex","`map`.","map","one.","line.","expression"],"a sledge":["hammer"],"a slight":["overkill","change"],"a slightly":["nicer","different","different"],"a slip":["submission."],"a small":["bit","thing,","random","one,","nitpick","self-contained","amount.","\"program\".","codebase","nit","nitpick","bit","change"],"a smaller":["arity"],"a smidge,":["look"],"a so":["called"],"a solution":["using","I","with","using","that","using","using"],"a somewhat":["complex","complex"],"a sort":["is","of"],"a sorted,":["lower-cased"],"a space":["from","on","before"],"a special":["reason","form"],"a specific":["term","meaning","function"],"a square":["peg"],"a stark":["difference"],"a static":["method"],"a step":["of"],"a strand.":["If"],"a string":["out","ends","from","function","is","is","can","a","to","(/sequence)?","of","instead","can","is","directly","using","being","or","on","literal","in","is","is","and","replace","when","here,","(or","replace","replace","and","into","based","like","which"],"a string).":["This"],"a string,":["but","leading"],"a string.":["Also,","Most","You","The","Functions"],"a string...\"":["I"],"a string?":["Also,","Hint:",":)"],"a style":["guide","guide,","nitpick.","preference,","thing?"],"a subset":["of","of"],"a substantial":["amount"],"a subtle":["bug.","bug","bug"],"a suggestion":["by","for","on"],"a super-DRY":["implementation."],"a symbol":["in","like"],"a syntactic":["sugar."],"a tad":["smaller"],"a tail":["recursive"],"a technical":["standpoint"],"a teenager":["thinks"],"a test":["that","case","case,","case","in","where","for","should","should","inconsistency."],"a textbook":["reason"],"a thing":["as","or","that"],"a third":["covers","way!","strategy","argument"],"a thought":[":)"],"a threading":["arrow","macro","`-\u003e`"],"a time.":["Whereas"],"a tiny":["bit","inefficiency"],"a ton":["of","for"],"a tone":["of"],"a tone.":["I'd"],"a top":["level","level","level"],"a topological":["sort"],"a total":["function"],"a totally":["valid"],"a toy":["example,"],"a trailing":["\"?\","],"a transaction":["which"],"a transient":["instead","data"],"a tricky":["statement"],"a tried":["and"],"a true":["predicate.","guarantee"],"a truthy":["value"],"a tutorial":["on"],"a two-line":["function"],"a typo?":["Suspect"],"a used":["it"],"a useful":["character.\")))"],"a user":["of","calls"],"a vacation":["and"],"a valid":["nucleotide,","dna?","dna","rna","dna","name."],"a value":["at","to","which","so","in","is"],"a value,":["not"],"a value?":["Thanks!"],"a var":["for","(your","for","for"],"a variable":["name.","so"],"a variadic":["function"],"a variety":["of"],"a vector":["of","to","to","of","of"],"a vector,":["not","as","in"],"a vector/list":["of"],"a vector?":["`list`"],"a verb":["form"],"a verse-components":["function"],"a version":["2.","where","with","that","with","without","with"],"a very":["good","good","nice","wide","important","interesting"],"a visual":["help,","style"],"a visually":["better"],"a vowel":["sound,"],"a warning":["that","about","when","about","about"],"a waste":["(in"],"a way":["to","to","to","to","you","to","you","to","to","you","to","that","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","of","to","to","that","to","with","of","to","to","of","to","to"],"a welcome":["symmetry"],"a well-structured":["solution."],"a while":["before","with","to","longer","to"],"a whitespace.":["Then"],"a whole":["lot","lot","lot","lot","on","lot"],"a word":["list","may","is","with","for","was","can","that"],"a word,":["and","returns"],"a word-count":["implementation!"],"a word?":["Your","Can't"],"a word?)":["instead"],"a work":["in"],"a workaround,":["where"],"a working":["solution"],"a wrapper":["function,"],"a wrong":["copy-paste"],"a year":["down","from"],"a yell?":["or","and"],"a yelled":["question."],"a zero":["entry."],"a) documents":["what"],"a) it":["felt"],"a) not":["very"],"a) the":["analysis"],"a, both":["defined"],"a/b directly":["in"],"aaaand I":["did"],"abbreviations for":["nucleotides"],"ability to":["think","use","name","add"],"able to":["simplify","see","review","get","use","understand","get","guess","use","better","find","find","understand","understand","easily","if","say","understand","use","solve","reduce","split","remove","use","do","get","just","access","make","roll","combine"],"about (private)":["functions"],"about (require)":["but"],"about (so,":["defining"],"about *why*":["you"],"about -\u003e":["but"],"about 1000":["times"],"about 3":["days"],"about 3rd":["argument"],"about \u003ccode\u003edefn-\u003c/code\u003e":["from"],"about Clojure":["code","compared","is"],"about Clojure.":[":)"],"about Java's":["`endsWith`."],"about SHOUTING":["taking"],"about Unicode":["character"],"about [`re-seq`](http://clojuredocs.org/clojure_core/clojure.core/re-seq).":["Pretty"],"about [a":["month"],"about `\\p{L}`,":["nice."],"about ```(not":["(nil?"],"about ```:pre```":["condition"],"about ```defn```,":["you"],"about ```replace```?":["I"],"about `any-ucase-chars`":["because"],"about `declare`,":["and"],"about `defn-`.":["Will"],"about `empty?`,":["`last`,"],"about `frequencies`":["when","being"],"about `get`.":["I"],"about `not=`,":["which"],"about `second-part`.":["Yes,"],"about `seq`":["is"],"about `silence?`":["—"],"about `silent?`":["to"],"about `sort`,":["totally"],"about `transient`":["by"],"about a":["problem","solution","library","recursive","second"],"about adding":["descriptive"],"about any":["suggestions"],"about anything":["to"],"about attributes":["in"],"about being":["modular"],"about breaking":["the"],"about caching/memoize":["-"],"about calling":["it"],"about case":["normalization"],"about checking":["that"],"about clojure.string/blank?,":["awesome."],"about clojure:":["why"],"about closures":["and"],"about code":["that"],"about copy-paste":["today."],"about creating":["a","more"],"about defining":["what"],"about design":["patterns"],"about diactrics.":["Either"],"about differently":["cased"],"about dna":["and"],"about doing":["the"],"about dropping":["regexes?"],"about equality,":["just"],"about every":["detail."],"about expanding":["this"],"about experimentation,":["so"],"about exporting":["\"local\""],"about extracting":["some","them","the","test","`count-nucleotides`","the","question?"],"about frequencies":["method!"],"about frequencies,":["thanks"],"about frequencies.":["It's"],"about function's":["arguments,"],"about functional":["programming."],"about giving":["some","those","a","some"],"about hiding":["function"],"about how":["lines","to","I"],"about implementation":["-"],"about improving":["the"],"about inline":["constants"],"about input/output":["right"],"about interpreting":["results"],"about it":["looks","and","this","at","since","when","anyway.","being"],"about it!":["It"],"about it,":["since","the","but","still","I","and"],"about it.":["Thanks","Good","Do","Other","Next"],"about its":["use","input","input.","return"],"about joining":["the"],"about lazy":["execution?","execution."],"about letting":["a"],"about lists":["but"],"about macros":["and"],"about making":["the","them","`shout?`","things","the","your","code","the"],"about moving":["the","checks"],"about my":["new","`zipvec`","english"],"about name":["also"],"about naming":["in","natural"],"about needing":["the"],"about not":["using","having"],"about number":["being"],"about one":["relatively"],"about only":["allowing"],"about overriding":["an","the"],"about perfect":["to"],"about performance":["of"],"about pre-creating":["the"],"about precomputing":["the"],"about pulling":["out","it"],"about putting":["`cond`","the"],"about re-seq":["when"],"about readability,":["isn't","I"],"about redefining":["`count`.","core"],"about reducing":["overhead","the","the","the","the","the"],"about regex.":["Nothing"],"about result":["afterwards)}"],"about returning":["the","the"],"about reusing":["`nucleotide-counts`"],"about robot":["starting"],"about shadowing":["`count`"],"about shared,":["mutable"],"about shortness,":["remember"],"about shouting":["than"],"about some":["destructuring","hidden","possible"],"about something":["someone","along"],"about sort,":["so"],"about testing":["my"],"about that":["function","consideration,","but","n1k0","it","function.","function.","little","naming"],"about that,":["it's","as","I","or","thanks!"],"about that.":["My","But","Everything"],"about the":["edge","\"base","`frequencies`","\"magic","clojure","guard","variable","naming","nested","namespace","various","strange","readability.","existence","constants,","extra",":require","?","`verse`","`not=`","language.","use","special-case","function","thing","fact","if","implementation","whitespace","way","name","right","choice","order","naming","language,","language.","difference","idiomatic","\u003ccode\u003e#\u003c/code\u003e","`transcribe`","names","let","use","\u003ccode\u003e#pattern\u003c/code\u003e","input","\"4?\"","reminder","\"?\"","`for`"],"about these":["conventions"],"about things":["in","people"],"about this":["one.","one)","feature","is","exercise","solution:","technique.","yet."],"about those":["strings"],"about thymidine":["and"],"about turning":["conditions"],"about twice":["as"],"about two":["different"],"about unusually":["cased"],"about usage":["of"],"about use":["&amp;"],"about using":["private","separate","`:require`","`letfn`","the","nucleotide-count","the","vector","```if```","`reduce`","the","`re-seq`","the","```seq```","external","a","a"],"about value":["and"],"about variable":["naming,"],"about visibility":["of","of"],"about what":["happens","transforming","it"],"about when":["the","an","i"],"about which":["one","of"],"about why":["the"],"about wrapping":["it"],"about your":["submission:","code"],"about, but":["it's","it's"],"about, so":["I"],"above all":["functions,"],"above and":["would"],"above is":["enough"],"above points":["aside,"],"above so":["as"],"above their":["first"],"above. Good":["work!"],"above. I":["would"],"absence of":["any","any"],"absence or":["presence"],"absolutely necessary":["here?",":)"],"absolutely not":["sure"],"absolutely nothing":["to"],"absolutely right":[":)"],"abstract U/T":["as"],"abstract in":["OO"],"abstracted for":["external"],"abstracted into":["a"],"abstracting out":["each"],"abstraction and":["test","the"],"abstraction inside":["public"],"abstraction is":["at","as","probably"],"abstraction level":["(first"],"abstraction of":["a"],"abstraction pretty":["clear."],"abstraction provided":["by"],"abstraction putting":["the"],"abstraction right":["into"],"abstraction than":["the"],"abstraction that":["you"],"abstraction they":["care"],"abstraction which":["simplifies"],"abstraction would":["help"],"abstraction, consider":["having"],"abstraction. It's":["making"],"abstractions in":["a"],"abstractions, naming":["and"],"acc [word]":["inc-nil))))"],"accented characters":["and"],"accept `not-found`":["argument."],"accept arguments":["directly,"],"accept character":["literals,"],"accept from":["others\"?"],"accept the":["challenge?"],"accept two":["arguments."],"accepted input":["more"],"accepted practice":["in"],"accepted someday.":["So"],"accepted style":["in","to"],"accepted would":["submit"],"accepting `s`":["but"],"accepting a":["candidate"],"accepting lower":["and"],"accepting of":["values"],"accepting two":["arguments"],"accepts a":["single","RNA","second"],"accepts the":["same"],"accepts third,":["`not-found`"],"accepts. Do":["you"],"access an":["atom","atom"],"access mapped":["nucleobases?"],"access the":["last","correct","current"],"access them":["in"],"access to":["all","anything","best"],"accessed from":["multiple"],"accessible via":["```defn-```"],"accessible way":["to"],"accessing collections":["from"],"accessors for":["this"],"accessors? That":["part"],"accident, but":["you"],"accidental assignment":["`42"],"accidentally left":["`question?`"],"accidentally submitted":["a","when"],"accompany the":["function"],"accomplish or":["model."],"accomplish that":["of"],"accomplish this":["*without*"],"accomplished by":["attaching"],"accomplishes encapsulation":["through"],"accomplishes the":["same"],"accomplishing. If":["we"],"according to":["your","your"],"account and":["added","taking"],"account for":["different","strings","cases","the"],"account that":["dna-seq"],"account the":["fact"],"account your":["feedback:"],"accumulate-counts {}":["(generate-words"],"accumulator with":["recursion"],"accuracy -":["like"],"accurate but":["I'm"],"achieve both":["elegance"],"achieve even":["more"],"achieve the":["same","same"],"achieve this,":["could"],"achieved the":["same"],"achieved with":["for"],"achieving such":["order"],"achieving the":["same"],"acid where":["only"],"acids should":["be."],"acids that":["stay"],"acid’s name,":["produces"],"acronyms is":["to"],"acronyms\" test,":["since"],"acronyms, too,":["until"],"across a":["sample"],"across all":["of"],"across multiple":["lines."],"across my":["to-rna"],"across the":["```blank?```","```upper-case```","Clojure","`binary-number`","individual"],"across when":["implementing"],"across would":["improve"],"act as":["collections,"],"action of":["function"],"action to":["do"],"actions while":["`silent?`"],"acts as":["a"],"acts on":["strings,"],"actual `:pre`":["conditions"],"actual ```map```":["operation"],"actual `map`":["into"],"actual code":["looks"],"actual constants,":["I"],"actual expressions":["on"],"actual function":["body"],"actual need":["to"],"actual set":["comparison"],"actual translation":["simpler"],"actual usage":["of"],"actual: (not":["(=","(=","(=","(=","(=","(=","(=","(=","(=","(="],"actually 2":["separate"],"actually [`zero?`](http://clojuredocs.org/clojure_core/clojure.core/zero_q)":["or"],"actually `:use":["[clojure.string"],"actually `let`":["and"],"actually a":["better","better","better","matter"],"actually attempt":["to"],"actually cancel":["my"],"actually change":["the"],"actually check":["for.","to"],"actually checks":["for"],"actually clarify":["the"],"actually come":["in"],"actually contains":["letters."],"actually converting":["between"],"actually didn't":["know"],"actually discard":["invalid"],"actually doing":["in"],"actually don't":["know","need"],"actually even":["think"],"actually give":["it","you"],"actually have":["to"],"actually implement":["with"],"actually introduced":["a"],"actually invoking":["a"],"actually is":["more"],"actually isn't":["a"],"actually know":["the","which"],"actually learned":["about"],"actually like":["this","writing"],"actually looks":["like"],"actually make":["it"],"actually meant":["your"],"actually moving":["`zipmap`"],"actually much":["more"],"actually need":["to","to","the"],"actually pretty":["powerful;"],"actually properly":["learn"],"actually read":["the"],"actually realized":["currying"],"actually redundant,":["you"],"actually removed":["the"],"actually satisfies":["the"],"actually seen":["alanpeabody's"],"actually slightly":["otherwise:"],"actually solving":["the"],"actually suggested":["3"],"actually the":["first","same,"],"actually thinking":["of"],"actually thought":["that"],"actually was":["in","sure"],"actually what":["I"],"actually wondering":["about"],"actually wouldn't":["mind"],"actually wrong":["with"],"actually, it":["tends"],"actually. It's":["much"],"actually. See":["discussion"],"ad 1.":["I'm"],"ad 2.":["Either"],"adapting the":["existing"],"adapting to":["the"],"add \"U\"":["to"],"add 2))`":["#"],"add [a":["b]"],"add [db":["name"],"add `(not":["(new-predicate?"],"add `if":["(nil?...`"],"add `sts=2`":["in"],"add a":["new","pre","bit","bit"],"add additional":["parameter"],"add after":["the"],"add an":[":else","extra"],"add another":["teenager","predicate?","stage"],"add any":["clarity"],"add bindings":["with"],"add docstrings":["to"],"add indirection":["to"],"add is":["that"],"add line":["break"],"add messages":["to"],"add more":["complexity","clarity?"],"add newlines":["and"],"add seconds":["to"],"add some":["processing","newlines"],"add the":["whitespace"],"add was":["not"],"add would":["be"],"add-two (partial":["add"],"add: how":["I"],"added -":["at"],"added a":["default","third","project.clj"],"added an":["explanatory"],"added benefit":["of","of","is"],"added defined":["values"],"added for":["this."],"added helper":["methods"],"added in":["latest"],"added it":["because"],"added require,":["not"],"added solution":["using"],"added some":["quoting."],"added the":["third"],"added to":["show","another.","ensure"],"added, and":["only"],"adding a":["line","```use```"],"adding another":["response"],"adding anything":["else."],"adding descriptive":["private"],"adding extra":["code"],"adding inline":["comments"],"adding newlines":["when"],"adding noise":["they"],"adding or":["subtracting"],"adding such":["a"],"adding that":["check"],"adding those":["terms"],"addition of":["the"],"addition to":["the"],"addition, can":["it?"],"addition, consider":["breaking"],"addition, number_length":["calls"],"additional `not-found`":["argument"],"additional burden":["of"],"additional complexity":["here,"],"additional context":["-","so"],"additional feedback?":["I"],"additional functions":["so"],"additional language":["track"],"additional level":["of"],"additional overhead":["when"],"additional parameter":["for"],"additional regex":["is"],"additional requires":["and"],"additional scenario":["you"],"additional test":["cases."],"additionally by":["level"],"address than":["the"],"address that":["problem?"],"address the":["problem"],"addressed both":["nitpicks"],"addressed that":["in"],"addresses all":["of"],"addresses the":["additional"],"addressing an":["implementation"],"adds a":["lot."],"adds more":["code"],"adds much":["value."],"adheres the":["letter"],"adjective. It":["would"],"adjusted the":["regex"],"admin expectations":[":)"],"admin here":["too,"],"admirably concise,":["but"],"admire your":["chutzpah."],"admit I":["didn't","struggled"],"admit `beer-song`":["is"],"admit it":["looks"],"admit that":["it"],"admit to":["not"],"admit, but":["my"],"admittedly I'm":["new"],"admittedly picky,":["but"],"admittedly subtle":["name"],"adopt that":["when","when"],"advantage of":["`str`","using","being","going","niceties","\\p","```defn-```","the","this.","the","that","the"],"advantage to":["using","avoiding","using"],"advantage with":["rerunning"],"advice @gerald!":["I've"],"advice about":["-\u003e"],"advice and":["play"],"advice are":["welcome!"],"advice as":["to"],"advice from":["@haylee"],"advice on":["my","zipmap.","merging"],"advice to":["investigate"],"advice would":["be"],"advice, I":["actually","broke"],"advice, but":["also"],"advice, it's":["better"],"advice, simplified":["the"],"advice. Clearly":["an"],"advice. I":["updated"],"advice. I'm":["happy"],"advice. This":["is"],"advise on":["style"],"aesthetic thing":["to"],"affect global":["scope"],"affect here":["but"],"after 6":["iterations."],"after I":["looked","got"],"after `=`":["so"],"after `if`":["on"],"after being":["up"],"after doing":["a"],"after each":["`defn`."],"after it":["being"],"after looking":["at","at"],"after posting":["this"],"after reading":["the"],"after refactoring.":["I"],"after seeing":["the"],"after several":["iterations"],"after some":["back"],"after submission":["I"],"after submitting":["this."],"after that":["feeling"],"after the":["opening","last","\"Go","opening","more","test","function","`cond`,","definition","arguments","parameter;","use","new","fact"],"after you":["broke"],"afternoon, but":["it's"],"afterthought, my":["only"],"afterwards). The":["[https://github.com/bbatsov/clojure-style-guide#syntax](clojure-style-guide)"],"afterwards. I":["also"],"again (and":["also"],"again -":["closing","I"],"again :)":["At"],"again I":["might"],"again and":["I"],"again at":["some"],"again for":["this","all","each","```clojure.string```","every"],"again in":["`letters`)."],"again later":["-"],"again on":["line"],"again with":["the","your","the"],"again, @cheyanne.":["Can"],"again, @torrey!":["The"],"again, I":["submitted","see"],"again, as":["a"],"again, for":["example"],"again, it":["does"],"again, perhaps":["not."],"again. Having":["multiple"],"again. If,":["in"],"again. It":["implies"],"again... I":["dare"],"again: Anagrams":["are"],"against -":["generates"],"against ```lower-case":["s```"],"against `x`,":["and"],"against along":["with","with"],"against an":["upper-cased"],"against it":["as","because"],"against normal":["word"],"against one":["of"],"against over":["and","and"],"against readability":["though."],"against s/split":["maybe?"],"against the":["input","input","uppercased","string","uppercased","uppercased"],"against this":["than"],"against with":["every"],"against. That":["function"],"agents and":["atoms"],"agents queue":["up"],"agnostic remark,":["but"],"agnostic with":["regards"],"ago proved":["actually"],"ago). This":["is"],"ago, and":["I"],"ago](https://github.com/kytrinyx/exercism.io/issues/448) to":["all"],"agonizing over":["it."],"agree --":["those"],"agree it":["could","is"],"agree on":["the","\"universe\";"],"agree that":["question?","adding","predicate","the","reversing","this","`empty?`","shout?","using","the","the"],"agree to":["all"],"agree with":["it","you,","you","using","@ernestine","you","the","@trent.","@armani","zoldar","@maxie's","@wilburn's","both","@belle.","@micah;","you","the","your"],"agree, actually.":["See"],"agree, it":["is"],"agree, that":["would"],"agree, the":["api"],"agree. However,":["I"],"agree. It":["also"],"agree. Usually":["I"],"agree. ```blank?```":["isn't"],"agree.. I":["must"],"agreed on":["the"],"agreed that":["editors"],"agreed to":["be"],"agreed with":["regards","the"],"ah, true!":["thanks"],"ahead and":["bump","also"],"ahead of":["your"],"ahead to":["the"],"aim to":["code"],"aiming for":["readability"],"al. to":["be"],"alanpeabody's latest":["suggestion"],"alanpeabody's suggestion":["on"],"algorithm (O(n)":["instead","instead","instead"],"algorithm (nlogn":["vs"],"algorithm -":["which"],"algorithm and":["the"],"algorithm for":["comparable","generating"],"algorithm from":["over"],"algorithm, so":["normalize"],"algorithms and":["Haskell"],"algorithms are":["`O(n"],"alias a":["`clojure.string`"],"alias explicitly":["using"],"alias for":["imported"],"alias nucleotide":["characters"],"alias so":["`:only"],"alias the":["namespace","namespace"],"alias to":["the","`clojure.string`"],"alias. I":["like"],"aliased namespace,":["so"],"aliasing `silence?`":["to"],"aliasing a":["function"],"aliasing you":["can"],"align but":["maybe"],"align next":["expressions"],"align the":["end","opening"],"aligned to":["that","the"],"alignment issues":["with"],"alignment looks":["fine"],"all 4":["tests"],"all Clojure":["functions,"],"all I":["could"],"all I'm":["going"],"all `=`":["and"],"all about":["experimentation,"],"all alphabetic":["characters"],"all alphanumerical":["characters?"],"all ambiguity,":["which"],"all and":["could"],"all around.":["Thanks!"],"all at":["once"],"all be":["visible"],"all becomes":["clear,"],"all built-ins,":["so"],"all but":["they"],"all by":["hand.","hand.","hand."],"all calls":["and"],"all capital":["letters"],"all caps":["is"],"all caps,":["respond"],"all closing":["parens","parentheses"],"all comments":["and"],"all conditionals":["into"],"all costs":["and"],"all counts":["just"],"all credit":["to"],"all do":["to"],"all fair":["game—not"],"all forms":["that"],"all functions":["from","should","operating"],"all functions,":["if"],"all functions.":["Even"],"all good":["suggestions"],"all in":["word-count","a"],"all include":["a"],"all is,":["given"],"all it":["would"],"all it's":["matter"],"all language":["tracks,"],"all lead":["to"],"all lisps":["I"],"all my":["exercism","`defn`s","doc"],"all names":["should"],"all nitpicks":["are"],"all non":["character"],"all nucleotides":["in"],"all nucleotides,":["and"],"all occurrences":["of","of","of"],"all of":["`clojure.string`","indentation","this","them,","the","the","the","the","the","the","them","those","that","your"],"all on":["one"],"all other":["expressions"],"all over":["the","the"],"all passing.":["But"],"all point":["you"],"all possible":["border"],"all private":["functions,"],"all references":["could"],"all seem":["reasonable"],"all sentences":["that"],"all sequence":["related","related"],"all sequences":["of"],"all sorts":["of"],"all tests":["pass."],"all that":["strong"],"all the":["elements","string","feedback","strings,","help.","parenthesis?","Java","closing","work","time","tests,","tests?","nucleotides,","functions","`ns`","commas","bindings","test","non-numeric","great","tests","time","other","pieces","checks","tests.","other","other","results","manual","possible","conditions","closing","non-word","defns","string","functions","sentiment","tests","regexes,","functions"],"all their":["parentheses"],"all these":["different"],"all those":["cases"],"all three":["lengths"],"all time":["as"],"all times":["when"],"all to":["think"],"all trololos,":["if"],"all upper":["case","case"],"all vars/functions":["in"],"all we":["need."],"all with":["regexps"],"all words":["the","in"],"all you":["know"],"all you're":["gaining"],"all your":["work","parens","input!"],"all! But":["what"],"all) in":["revision"],"all, and":["only"],"all, looks":["great"],"all, you":["can"],"all-caps input":["as"],"all-caps sentences":["rather"],"all-caps? can":["be"],"all-caps? potentially":["does"],"all-caps? to":["use"],"all. :/":["I"],"all. Good":["practice"],"all. I":["could","saw"],"all. I've":["played"],"all. It's":["a"],"all. Just":["make"],"all. Maybe":["I'm"],"all? `(filter":["not"],"allocating atoms,":["the"],"allow a":["visually"],"allow for":["self"],"allow further":["composition/reuse…"],"allow it":["we"],"allow me":["to"],"allow perfectly":["arbitrary"],"allow re-ordering":["of"],"allow something":["like"],"allow you":["write","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"],"allowed characters":["is"],"allowed in":["-&gt;"],"allowed me":["to"],"allowed to":["use"],"allowing one":["function"],"allowing the":["results"],"allowing you":["to"],"allows `str/lower-case`.":["I've"],"allows def":["to"],"allows for":["passing","\"?\")","parallelism","a"],"allows me":["to"],"allows the":["statement","response-for"],"allows you":["to","to","to","(or","to","to"],"almost all":["your"],"almost all)":["in"],"almost always":["able"],"almost anal":["about"],"almost be":["max."],"almost certain":["I've"],"almost exactly":["what","implemented"],"almost feels":["like"],"almost indistinguishable.":["I"],"almost like":["cheating","they"],"almost never":["used)."],"almost seems":["redundant"],"alone (comp":["not"],"alone an":["elegant"],"alone can":["do."],"alone idiomatic":["clojure,"],"alone would":["satisfy"],"along these":["lines","lines?"],"along with":["`conj-anagrams`","every","optional","every","hasn't","movement","every"],"along yet).":["Very"],"aloud ;)":[")"],"alpha (alphagram":["lower)]","lower'))))))"],"alpha -":["but"],"alphabetic characters":["with","are"],"alphabetical order":["is"],"alphabetically is":["an"],"alphabets for":["valid"],"alphagram ,":["maybe"],"alphagram -":["I"],"alphagram feels":["like"],"alphagram for":["a"],"alphagram is":["case-insensitive","an"],"alphagram not":["being"],"alphagram of":["the","the"],"alphagram, its":["a"],"alphagram, unfortunately":["this"],"alphagrams and":["one"],"alphagrams, I":["didn't"],"alphagrams, and":["you"],"alphanumeric characters":["are"],"alphanumeric sequences.":["Other"],"already (nlogn":["vs"],"already `seq-able`":["so"],"already a":["string.","function","multiple","string","big"],"already approved":["assignment."],"already approved,":["so"],"already be":["available.","in","in","used","treated"],"already been":["found"],"already checked":["that"],"already checks":["for"],"already combines":["strings"],"already dictates":["what"],"already disregards":["whitespace,","whitespace,"],"already do":["for"],"already existing":["concept"],"already generated":["names"],"already had":["should"],"already have":["them"],"already in":["past","the"],"already includes":["numbers"],"already lowercased,":["as"],"already noticed":[";)"],"already processed":["list."],"already sanitized":["the"],"already seq-able":["(it's"],"already small":["enough"],"already sorted":["expression"],"already take":["your"],"already treated":["as"],"already used":["in","in","in","in","in","in","it"],"already used!":["A"],"already using":["`blank?`","`into"],"already very":["expressive!"],"already, you":["can"],"already. You":["could","don't"],"alright, thanks!":["I'll"],"also \"alias\"":["a"],"also 'suggest'":["that","that"],"also \u003ccode\u003eempty?\u003c/code\u003e":["like"],"also Collections,":["so"],"also `clojure.string/lower-case`":["is"],"also `clojure.string`":["which"],"also `if-let`":["and"],"also `if-not`":["and"],"also `if-not`/`when-not`":["to"],"also `letfn`":["that"],"also a":["problem","great","function","shorthand","pretty","string","string","specific","built","shorter,"],"also abstract":["U/T"],"also added":["a"],"also allow":["you"],"also an":["unspecified"],"also append":["the"],"also apply":["that"],"also argue":["that"],"also as":["a","a","functions"],"also assigned":["the"],"also attention":["to"],"also available":["but"],"also be":["desirable","simplified.","clearer","given","helpful.","better","more","used","functions,","possible","written","used","done","expressed","nice","done","written","written","written","written","a","scalene."],"also bring":["those"],"also brings":["a"],"also calls":["```lower-case```"],"also changed":["the","```shout?```"],"also checking":["if"],"also cleaner":["this"],"also clojure":["string"],"also common":["to","in"],"also consider":["reducing","using","making"],"also could":["shorten"],"also cover":["any"],"also create":["`*"],"also decided":["to"],"also decouples":["```question?```"],"also did":["a","this"],"also didn't":["occur"],"also do":["`(range","somthing","a","`=`"],"also don't":["have"],"also ensured":["that"],"also expected":["to"],"also experiment":["with"],"also extracted":["the","the"],"also fold":["the"],"also for":["the"],"also function":["composition"],"also functions":["makes","and"],"also get":["around"],"also give":["\"U\""],"also going":["to"],"also good":["if","in","in"],"also got":["to"],"also gotten":["in"],"also had":["to","to"],"also happen":["to"],"also have":["`if-let`","a","been"],"also help":["but"],"also holds":["onto"],"also idiomatic":["to"],"also in":["`count`."],"also investigate":["the"],"also just":["use"],"also like":["your","the","how"],"also look":["at","to","into","into"],"also looks":["like"],"also love":["opinions"],"also lower-cased":["input"],"also make":["the"],"also makes":["`question?`"],"also managed":["to"],"also matches":["the"],"also means":["that"],"also might":["want"],"also more":["effective"],"also need":["to"],"also normally":["expect"],"also not":["conventional","work","sure","sure"],"also noticed":["that"],"also obscures":["the"],"also played":["around"],"also pointed":["out."],"also preferable":["to"],"also probably":["want"],"also realized":["that"],"also rearrange":["function"],"also reduce":["some"],"also remove":["the"],"also removed":["the","the"],"also reorder":["the"],"also replace":["\".endsWith\""],"also requires":["the"],"also responsible":["for"],"also reverse":["order"],"also see":["now,","in"],"also seems":["a"],"also seen":["people","some","people","nice","good"],"also separated":["out"],"also serve":["as"],"also sets":[":)"],"also split":["like"],"also still":["an"],"also string":["and"],"also suggest":["you"],"also take":["a","advantage","an","an"],"also that":["if","according"],"also the":["way","author","`subs`","only"],"also then":["remove"],"also think":["of"],"also to":["indent"],"also took":["the"],"also totally":["right"],"also treat":["the","strings"],"also treated":["as"],"also try":["to","the","using","using"],"also undefined,":["I"],"also updated":["it"],"also use":["defn-","destructuring","clojure.string/blank?","`refer`.","`frequencies`.","the","`(students","`clojure.string/upper-case`","string","the","the","Refs","`case`.","Refs"],"also used":["`inc`"],"also useful":["in"],"also using":["`blank?`"],"also usual":["to"],"also very":["pretty"],"also want":["to"],"also wonder":["that!","that."],"also wondering":["if"],"also work":["as","if"],"also works":["for","without"],"also worth":["mentioning"],"also write":["`(set"],"also, `lower-case`":["is"],"also, the":["(+"],"also. All":["I"],"alter and":["conj"],"alter the":["root"],"alternate `anagram-of?`":["might"],"alternate example.":[":)"],"alternative `some-\u003e`":["macro"],"alternative approach.":["More"],"alternative for":["`\"default`."],"alternative solution":["in"],"alternative to":["resorting","the"],"alternative, but":["right","`clojure.string`"],"alternatively be":["done"],"alternatively realized":["with"],"alternatives for":["the"],"alternatives to":["the","the"],"although (and":["we're"],"although Clojure":["(or"],"although I":["think","could","can","wonder"],"although I'm":["still"],"although a":["bit"],"although arguably":["less"],"although as":["you've"],"although for":["the"],"although going":["further,"],"although interestingly":["enough"],"although longer,":["doesn't"],"although looking":["compact"],"although plain":["symbol"],"although the":["choice"],"although there":["is"],"although they":["do"],"although you":["may"],"altogether. Alternatively,":["try"],"always able":["to"],"always affect":["global"],"always assume":["that"],"always avoided.":["One"],"always count":["as"],"always create":["separate"],"always either":["1"],"always find":["negative"],"always finding":["extracting","functions"],"always go":["back"],"always good":["reasons."],"always just":["getting"],"always know":["what"],"always leave":["it"],"always makes":["me"],"always nice":["to"],"always put":["the"],"always remove":["extra"],"always search":["forward"],"always starting":["from"],"always subjective.":["I'm"],"always the":["`-\u003e`","clearest"],"always trimming":["leads"],"always used":["to"],"always vote":["for"],"always weigh":["conciseness"],"always worked":["on"],"always worthwhile":["to"],"always write":["a"],"always, I":["appreciate"],"am I":["missing","missing","right","missing"],"am a":["full-time","bit","rubyist"],"am absolutely":["not"],"am almost":["anal"],"am at":["submitting"],"am bad":["at"],"am brand":["new"],"am completely":["new"],"am familiar":["with"],"am glad":["to"],"am going":["to"],"am happy":["with"],"am learning":["Clojure","Scala"],"am less":["than"],"am lest":["happy"],"am myself":["a"],"am new":["to","to","to","to"],"am no":["Java"],"am not":["aware","sure","sure","sure","sure","particularly","mistaken,","sure"],"am particularly":["happy"],"am saying":["here"],"am still":["pretty","a"],"am sure":["they","there"],"am trying":["to"],"am undecided":["on"],"am updating":["the"],"am using,":["avoiding"],"am waiting":["for"],"ambiguity, which":["would"],"ambiguous as":["you"],"among multiple":["lines","lines"],"amount from":["your"],"amount is":["subtracted"],"amount of":["precious","handcrafted","code","code","code","code.","repetition","exposure","exposure"],"an \"Enterprisey\"!":[":-)"],"an \"a\"":["(hey,"],"an 'opaque":["data"],"an (optional)":["map"],"an *anagram*":["(boolean,"],"an *interesting*":["customer"],"an :else":["clause.","clause"],"an API":["with"],"an AssertionError":["but","or"],"an Elixir":["submission)"],"an [Alphagram](http://en.wikipedia.org/wiki/Alphagram);":["perhaps","maybe"],"an `:else`":["even"],"an `AssertionError`":["when"],"an `AssertionException`,":["but"],"an `if`":["would","in","would"],"an abstraction":["of"],"an addition,":["can"],"an adjective.":["It"],"an admin":["here"],"an advantage":["to","to"],"an advantageous":["direction?"],"an afterthought,":["my"],"an alias":["to"],"an alias,":["sorry."],"an alphagram":["is","feels"],"an alphagram,":["its"],"an already":["approved","existing"],"an alternative":["approach.","to","for","`some-\u003e`"],"an alternative,":["but"],"an anagram":["or","of","of","of","(test","of","is.","of","is"],"an anagram.":["It"],"an analog":["of"],"an anonymous":["function","function","function","function","function","function","function","function"],"an approach":["or"],"an appropriate":["boolean","function"],"an argument":["to","to","to","that"],"an argument.":["You"],"an arity":["of"],"an aside,":["I'm"],"an atom":["is","is","directly","containing"],"an atom.":["ref"],"an authority":["on"],"an earlier":["version"],"an easier":["way","way","problem"],"an easy":["O(n)","fix."],"an effectively":["empty"],"an effort":["to"],"an elegant":["solution."],"an else":["clause."],"an empty":["vector.","string.","map)","input","string","string","`AssertionError`"],"an end":["with"],"an equality":["comparison,"],"an equivalent":["of"],"an error":["would","message."],"an evaluated":["expression"],"an example":["that","of","?","in","of"],"an example,":["if"],"an excellent":["suggestion.","idea.","idea."],"an exception":["rather"],"an exception.":["You"],"an exclamation":["actually"],"an executable":["documentation"],"an exercise":["with"],"an exercise,":["I'm"],"an existing":["`replace`","function"],"an experienced":["Clojurian?"],"an experiment":["to"],"an explanation":["of","of"],"an explanatory":["message"],"an explicit":["loop."],"an expression":["something","that"],"an expressive":["variable"],"an extensible":["approach."],"an extra":["line","test","trailing"],"an eye":["out"],"an eye-opening":["experience,"],"an good":["use"],"an idea":["to"],"an idiomatic":["way"],"an if":["statement","in","statement"],"an if-let":["and"],"an impatient":["person."],"an implementation":["that","detail","detail.)","detail,"],"an implicit":["return"],"an improvement":["over","over"],"an improvement,":["or","or"],"an inconsistency":["in"],"an inconsistent":["use"],"an incredibly":["difficult"],"an indicator":["that"],"an initialized":["map"],"an inline":["comment"],"an input":["didn't"],"an instance":["without"],"an intent":["behind"],"an intention-revealing":["name"],"an intentional":["choice."],"an interesting":["point,"],"an intermediate":["sequence"],"an interned":["one."],"an invalid":["strand,"],"an isolated,":["self-documenting"],"an item.":["Also"],"an obfuscation,":["too."],"an object,":["sort"],"an obvious":["reason","overkill","fit"],"an odd":["`valid-nucleotide?`"],"an opinion":["on"],"an opportunity":["to","to"],"an optimized":["version,"],"an optional":["predicate,","default","third","argument"],"an options":["3rd"],"an order":["of"],"an ordered":["map","map"],"an overkill":["here","in"],"an own":["`default?`"],"an unbound":["var"],"an unequal":["pair"],"an unequivocal":["win."],"an unhandled":["case,"],"an unnecessary":["layer"],"an unrecognised":["sentence"],"an unspecified":["and"],"an update,":["it"],"an upper":["case"],"an upper-cased":["version"],"an uppercased":["version","version"],"anagram (:require":["[clojure.string","[clojure.string"],"anagram (require":["[clojure.string"],"anagram (test":["suite"],"anagram assignments":["were"],"anagram checking":["method"],"anagram is":["exactly!"],"anagram of":["itself.","itself","\"Banana\"?","another.","`b`"],"anagram or":["not,"],"anagram solutions":["in"],"anagram to":["avoid"],"anagram with":["help"],"anagram-of? (lower-sorted":["word))"],"anagram-of? [[la":["sa]"],"anagram-of? [comparable":["other]"],"anagram. Also,":["please"],"anagram. It":["would"],"anagram. That's":["a"],"anagram? (process":["word))`"],"anagram? [word1":["word1]"],"anagrams -":["a"],"anagrams are":["being"],"anagrams could":["probably"],"anagrams if":["their"],"anagrams it":["wins"],"anagrams of":["that"],"anagrams per":["definition."],"anagrams using":["a"],"anagrams with":["a"],"anagrams) and":["the"],"anagrams-for [word":["candidates]","candidates]"],"anal about":["testing"],"analog of":["my"],"analysis and":["I"],"analysis conditions":["and"],"analyze statements":["in"],"anchors to":["match"],"and \"T\"":["expressive"],"and \"U\"":["are","characters?","then","characters","are","into"],"and \"count\"":["is"],"and \"drop":["6"],"and \"make":["use"],"and \"matches\"":["and"],"and \"nucleotides\"":["should"],"and \"patterns\"":["from"],"and \"questioning\".":["You"],"and \"shouting\",":["but"],"and \"sort-by\".":["Thanks."],"and \"vertical\"":["here."],"and '(1":["2"],"and 'subscriber'":["respectively."],"and 'suffix'":["are"],"and 'u'":["are"],"and (response-for":["\"1,"],"and **:post**,":["the"],"and *is":["it"],"and *no*":["lower"],"and 3":["that"],"and 53.":["The"],"and 7":["are"],"and 799.":["Is"],"and 8":["into","into"],"and :post":["conditions"],"and :post`":["thanks"],"and :require":["will"],"and \u003ccode\u003edefn\u003c/code\u003e":["inside"],"and \u003ccode\u003equestion?\u003c/code\u003e,":["but"],"and =":["won"],"and @pedro":["totally"],"and AFAIK":["Ruby"],"and Clojure":["considers"],"and DNA":["sequences"],"and Date,":["not"],"and GregorianCalendar.":["I"],"and Haskell":["I"],"and Hobgoblins":["at"],"and I":["understand","assumed","need","think","believe","like","have","should","like","will","guess","think","would","totally","wouldn't","figured","originally","think","wanted","think","like","suppose","dislike","have","don't","do","couldn't","do","think","specifically","should","haven't","don't","can't","left","therefore","also","might","noted","had","refactored","don't","considered"],"and I'm":["not","still","not","not"],"and I've":["used","even"],"and Java":["interop."],"and Java.":[";)"],"and Katrina":["got"],"and Maps)":["are"],"and RNA":["nucleotides,"],"and Ruby":["versions,"],"and Scheme":["syntax."],"and U":["to","like"],"and U?":["Have"],"and UC":["definitions"],"and Vim":["isn't"],"and YAGNI":["should"],"and [`map`](http://clojuredocs.org/clojure_core/clojure.core/map).":["In"],"and \\U":["what"],"and `\"U\"`":["to","names."],"and `(set":["\"CGAT\")`"],"and `(shouty?":["\"\")`","\"\")`."],"and `(str/split":["#\""],"and `(take":["3"],"and `-≥≥`":["statements"],"and `.trim`!":["I"],"and `1`":["were"],"and `:as`":["options"],"and `:else`":["are"],"and `:not-leap-year`":["terminal"],"and `:only`":["on"],"and `:refer`":["`upper-case`","to"],"and `:refer`,":["and"],"and `:required`.":["`:required`"],"and `=`":["to"],"and `Date`":["but"],"and `Maps`":["implement"],"and `Math/pow`":["-"],"and `U`":["with"],"and `\\T`":["to"],"and `\\U`":["as","descriptive","signify?","actually","characters","in"],"and `\\p{javaUpperCase}`":["instead"],"and `\\z`":["in"],"and ```U```?":["They"],"and ```\\U```":["such"],"and ```anagrams_for```":["would"],"and ```downcase-and-split```":["as"],"and ```is-shout?```":["functions,"],"and ```join```":["are"],"and ```rest```":["instead"],"and ```silence?```":["functions"],"and ```some-loud?```":["anyways."],"and `all-caps?`":["the","are"],"and `anagram-of?`":["naturally"],"and `any`":["names?"],"and `apply`":["to"],"and `asking-politely?`":["conditions"],"and `blank`":["in"],"and `candidate`":["or"],"and `canonicalA`":["will","just"],"and `clojure-test-mode`,":["and"],"and `clojure.string/trim`":["rather"],"and `comp`":["but"],"and `conj`":["-"],"and `conj`)":["containing"],"and `contains-lcase-chars`.":["This"],"and `count`":["or"],"and `count`.":["Your"],"and `dec`":["but","respectively."],"and `dec`...":["my"],"and `def":["^:private`","^:private`"],"and `defmethod`":["were"],"and `defn-`":["to"],"and `defn`":["and"],"and `dna/to-rna`.":["Daily"],"and `dow`":["are"],"and `every?`":["will"],"and `false`":["are","are"],"and `first`.":["Explicit"],"and `fourth`":["try"],"and `frequencies`":["together","on","which"],"and `frequencies`.":["I"],"and `inc`":["when"],"and `increment-word`":["do."],"and `interleave`":["can"],"and `into`":["fairly"],"and `is-anagram?`":["and","is"],"and `last`":["instead"],"and `last`.":["Also"],"and `lower`":["given"],"and `map`":["and"],"and `match`":["with"],"and `mutation`":["directly"],"and `normalized-word`":["functions"],"and `not-any?`":["makes","-","are"],"and `not-any?`.":["Cool"],"and `not-every?`.":["They"],"and `not=":["0`"],"and `not=`":["are"],"and `nothing-said?`.":["Then"],"and `nucleotide-counts-string`":["are"],"and `on-the-wall`":["etc"],"and `partition":["2`"],"and `pim`":["are"],"and `pos?`":["can"],"and `position-values`":["into"],"and `question?`":["private","seem","to","private","methods","(with","don't."],"and `question?`,":["`all-caps?`","for"],"and `question?`.":["It"],"and `random-digit`":["calls?"],"and `random-integer`":["be","too"],"and `re-match`":["that"],"and `remove-blanks`":["are","are"],"and `replace`":["could","was"],"and `require`":["as","as"],"and `reset!`":["are"],"and `reset!`-":["is"],"and `right`":["suggest"],"and `second-line`":["if"],"and `second`":["are"],"and `seq`":["are"],"and `shouting?`":["etc."],"and `silence?`":["methods.","private","to","functions?"],"and `split-by-space`":["in"],"and `string/replace`":["won’t"],"and `swap!`":["are"],"and `take-down-or-store`":["more"],"and `take`":["to"],"and `trim`":["as"],"and `upper-case`":["function","from"],"and `uracil`":["makes"],"and `uracil`.":["Certainly"],"and `use`":["is"],"and `vector`":["with"],"and `w`":["represent,"],"and `when-let`":["which"],"and `when-not`":["if"],"and `yell?`":["private"],"and `ys`":["is"],"and `zip`,":["but"],"and `zipmap`.":["Is"],"and a":["seq","bit","collection","second","bit","yell?","question?,","list","high","rna","question.","map:","sequence","keyword","reference"],"and accepted":["practice"],"and accepts":["a"],"and access":["them"],"and accessors":["for"],"and achieved":["the"],"and add":["\"U\"","`(not"],"and added":["to","some"],"and adding":["that"],"and additional":["complexity"],"and advice":["are"],"and again":["in"],"and agents":["queue"],"and agree.":["Usually"],"and aliasing":["`silence?`"],"and all":["nitpicks","but"],"and allow":["you"],"and allows":["me"],"and alpha":["-"],"and also":["checking","http://dev.clojure.org/jira/browse/CLJ-879","function","to","ensured","extracted"],"and an":["unnecessary","if"],"and anonymous":["functions?"],"and another":["thing"],"and any":["non-public"],"and append":["a","another"],"and applied":["it"],"and applies":["here"],"and appropriate":["in"],"and are":["not"],"and arg":["list,"],"and args":["and"],"and argument":["list)."],"and as":["such"],"and assert":["positive."],"and assume":["there"],"and atoms":["are"],"and auto-generate":["the"],"and automatically":["throw"],"and away":["my"],"and b":["directly"],"and b)":["the","it","not","asserts"],"and be":["done!"],"and being":["able"],"and big":["shout"],"and bikesheds":["with"],"and binding":["name.","name."],"and building":["up"],"and bump":["`question?`"],"and buried":["in"],"and buy":["some"],"and by":["not"],"and call":["that","the"],"and came":["across"],"and can":["be","most","now","specify"],"and can-attack":["functions"],"and canonicalized":["strings"],"and case":["are"],"and changed":["the","L9","the"],"and checking":["`not"],"and clean":[",","and"],"and clean.":["Can"],"and cleaning":["up"],"and clear":["the"],"and clear.":["I"],"and clojure.string":["in"],"and closing":["one","brackets."],"and code":["size)."],"and collection":["predicates"],"and combine":["the"],"and combining":["31557600"],"and come":["up","to"],"and comments":["can"],"and common":["patterns"],"and compact.":["My"],"and compare":["against","to","to"],"and concise":["calls...","code."],"and concise!":["It's"],"and concise,":["using"],"and concise.":["As"],"and conj":["are"],"and consider":["\"OK.\""],"and considered":["more"],"and context":["one"],"and convert":["resulting"],"and correct":["the"],"and could":["just","be","be","just"],"and couldn't":["work"],"and count":["how","truthy","that","but"],"and cover":["more"],"and create":["bindings","a"],"and crisp,":["I"],"and criticizing":["my"],"and currently":["makes"],"and currying":["in"],"and dealing":["with"],"and declare":["them"],"and decrementing":["values"],"and defn":["you","always"],"and defrecord.":["Also"],"and destructuring":["arguments"],"and determine":["how"],"and did":["not"],"and didn't":["try","realize","even"],"and digits.":["So"],"and directly":["import"],"and discovered":["the"],"and dna/count":["in"],"and do":["some","that","a"],"and does":["the"],"and doesn't":["have"],"and doing":["so"],"and don't":["think","find","push","use"],"and doseq":["returns"],"and earth-ratio":["at"],"and easier":["to","to"],"and easy":["to","to","to"],"and eliminate":["calls"],"and end":["the","with"],"and ending":["in"],"and error":["right"],"and especially":["Clojure..."],"and even":["if","beneficial,"],"and eventually":["decided","I"],"and everything":["works."],"and everything,":["it's"],"and explanation":["of"],"and expressiveness.":["My"],"and extensive":["usage"],"and extra":["characters"],"and extract":["your","your"],"and fair":["critique."],"and feel":["of"],"and figuring":["out"],"and filter":["handled"],"and fits":["well"],"and flows":["more"],"and focused.":["The"],"and for":["future"],"and forms":["inside"],"and forth":["with"],"and forth,":["and"],"and found":["that","that"],"and friends":["should"],"and function":["body,","literals"],"and functional":["programming"],"and gave":["me","me"],"and general":["java"],"and generally":["leads"],"and generate":["code"],"and get":["then","back"],"and getting":["away","rid"],"and give":["them"],"and given":["the"],"and giving":["them","them"],"and glue":["code?"],"and go":["from","for"],"and googling":["a"],"and got":["rid"],"and guessing":["at"],"and handle":["the"],"and handling":["the"],"and hard":["to"],"and has":["less","too"],"and hash":["map"],"and have":["to","it"],"and having":["to"],"and helper":["would"],"and higher":["order"],"and hope":["that"],"and how":["Clojure","you","it"],"and hyphen":["delimited."],"and identify":["it's"],"and idiomatic":["for"],"and idioms":["are"],"and if":["you","you"],"and importing":["`upper-case`","some"],"and imports":["and"],"and improve":["clarity","maintainability"],"and in":["question?","that","my","the","`response-for`.","list","fact,","turn,"],"and indent":["before"],"and instead":["of","`:rename`","loops"],"and intent":["will"],"and interleave":["stuff"],"and is":["almost","shorter","shorter","treated","only","often"],"and it":["went","is","was","was","can","doesn't","reminds","may","will","would","took","works","even","doesn't","doesn't","your","will","would","seems","was","would","didn't"],"and it's":["clear","quite","nice","much","written","really","preferred","in"],"and its":["count.","name","all"],"and jar":["extras."],"and java":["interop.","interop.","in","in"],"and just":["make","use","start","use","getting","check","passing","use"],"and keep":["methods/functions"],"and keeps":["the"],"and keyword)":["but"],"and kind":["reviewing"],"and know":["what"],"and knowing":["how"],"and last.":["This"],"and latest":["iteration's"],"and leave":["it","the"],"and leaving":["it"],"and less":["expressive.","expressive"],"and let":["assignments","me"],"and letting":["the"],"and likely":["wrong.","more"],"and likewise":["they"],"and limit":["the"],"and line":["length"],"and lines,":["what"],"and list":["belong","belong"],"and looked":["them"],"and looks":["good."],"and lost":["sight"],"and lower":["case","case;","case,"],"and lower-case?":["What"],"and lowercase":["them"],"and lowercasing":["the","the","the"],"and made":["my"],"and maintainer":["of"],"and make":["things","that","you","those","everything","the","valid","`ham-compare`","the","your"],"and makes":["a","the","the","the"],"and making":["them","the","a"],"and manipulate":["collections"],"and many":["others).","others)."],"and map":["over"],"and mapping":["over"],"and may":["mislead"],"and maybe":["share","add","give"],"and merging":["with"],"and messy":["to"],"and might":["be"],"and mixing":["that"],"and more":["*to","uniform,","on","maintainable","generic","efficient"],"and mostly":["it","used"],"and move":["back","`]`","the"],"and name":["a"],"and namespaces":["do"],"and naming":["conventions","conventions","the"],"and need":["to"],"and nice":["functional"],"and nil":["is","if"],"and no":["use","lower-case"],"and no.":["I've"],"and non-nil":["are"],"and non-public":["parts."],"and non-recursively.":["In"],"and not":["using","you.","vice","vice","`letfn`","polluting","only","the","necessarily","pulling","type.","too","shared"],"and not.":["I'd"],"and not=,":["and"],"and of":["course"],"and often":["come"],"and once":["it's","in","for"],"and one":["for","that","more","for","with","intermediary","of","is"],"and only":["have","then","have","retrieve","when"],"and opted":["for"],"and optionally":["using"],"and other":["empty","behavior","constructs","languages."],"and otherwise":["returns"],"and output":["are","as"],"and over":["for","in","with","with","again."],"and over.":["You","There's"],"and pals":["are"],"and passed":["the"],"and passing":["the"],"and patterns.":["Could"],"and perfectly":["legal,"],"and performance":["should","here."],"and pieces":["of"],"and play":["with"],"and point":["taken"],"and positional":["accessors?"],"and possibility":["in"],"and possibly":["`require`","a"],"and post":["condition","conditions,","conditions","conditions","conditions","conditions.","conditions","conditions"],"and post-":["assertions","conditions`,"],"and pre-":["and"],"and preference.":["The"],"and preserve":["proper"],"and probably":["not","not","you"],"and processed":["word"],"and promoted":["to"],"and provenance,":["but"],"and provide":["feedback."],"and provides":["little"],"and punctuation":["are"],"and putting":["the"],"and question?":["predicates."],"and rambled":["on"],"and rather":["a"],"and read":["some"],"and readability":["camps."],"and readable":["than"],"and readable,":["I","I"],"and readable.":["How"],"and reading":["and"],"and realized":["that","that"],"and record":["features"],"and redundant":["call"],"and regex":["functions"],"and related":["conversions"],"and removed":["it","`seq-to-dna`"],"and removing":["seq"],"and rename":["`question2?`"],"and repetition":["in"],"and replaced":["with"],"and reply":["here"],"and required":["functions"],"and requirements,":["much"],"and reset-name":["function"],"and responses.":["They"],"and resubmitted":[":)"],"and resubmitted.":["Seems"],"and return":["nil.","the","it,","the","the","values."],"and returning":["the"],"and returns":["a"],"and reuse":["it?"],"and reused":["many"],"and reversed":["it."],"and reviewed":["the"],"and right":["arrow"],"and rna":["sequences","sequences."],"and runtime":["values."],"and second":["macro"],"and see":["what","if","if","which","what","if","if","what","how","what","how"],"and sentiment":["after"],"and short":["form"],"and shouting":["conditions."],"and simple":["hardcoded","function,","I'd"],"and simplicity":["of"],"and simplifications":["of"],"and simplify":["the"],"and since":["we're","you"],"and sincerely":["hope"],"and slightly":["more"],"and so":["on.","can","I'm","on","on."],"and some":["examples","rearranging","constants","would"],"and sometimes":["pairs"],"and somewhat":["uncluttered"],"and sort":["it"],"and sorting":["of"],"and spacing":["ommitted)."],"and split":["as"],"and split-words":["seem"],"and splitting":["the","on"],"and statement?":["have","both"],"and still":["give","do"],"and stop":["with"],"and stopped":["sorting"],"and straightforward":["that"],"and straightforward.":["Would"],"and string":["replacement"],"and stuff,":["hence"],"and style.":["Thanks"],"and submitted":["another"],"and succint,":["it's"],"and such":["simple"],"and suggestions":["very","very"],"and surely":["more"],"and switched":["to"],"and syntax.":["Also,"],"and take":["a"],"and takes":["this","the"],"and taking":["it"],"and target,":["but"],"and tell":["me"],"and test":["if"],"and thanks":["for","for"],"and that":["`(str","it","it","the","the","the","behavior:","threading","will"],"and the":["reader","string/replace","contained","related","last","`thyidine?`","only","responses","statement-types:","validation","base","helpers","other","character","previous","comparison","keys","data","processed","fact","program","latter","use","plural","arguments","sorted","test","call","nucleotide","`.*`","value","args","set","reader","require/use/import","individual","result","result","value","names","value","transcription.","structure.","replace.","whole","fact","`else`"],"and their":["counts"],"and then":["you","count","you","referring","just","just","use","comparing","constructed","a","you","additionally","let","convert","use","scanning","reversing","recreating","the","it","wait","merge","will","the"],"and there":["isn't"],"and there's":["nothing"],"and there.":["Dunno"],"and thereby":["the"],"and therefore":["not"],"and they":["have","say"],"and think":["for"],"and this":["one","style","one,","time","was","seemed","passes","is"],"and thoroughly":["tested"],"and thought":["about","`cl-format`","more"],"and thread":["input"],"and threw":["a"],"and thus":["conform"],"and tidy":["up"],"and tied":["them"],"and to":["the","allow","the","the","str.","determine"],"and took":["lower/upper"],"and trailing":["parentheses"],"and transform":["to"],"and transforms":["a"],"and tried":["to","a"],"and trim":["works,"],"and true":["ugly"],"and try":["to","to","to","to"],"and two":["words"],"and typing":["in"],"and understand":["than","for","the"],"and understandability":["of"],"and understanding":["can","the"],"and unify":["some"],"and unimprotant,":["but"],"and untested":["case,"],"and upper":["bound"],"and upper-case":["from"],"and uracil":["to","public.","are"],"and use":["`(apply","standard","\\?","these","explicit","a","only","`intern`","it","that"],"and used":["that"],"and uses":["native"],"and using":["`merge`","indentation"],"and validate-length":["could"],"and validating":["functions"],"and value":["=="],"and values":["altogether.","have","are"],"and vastly":["prefer"],"and vectors":["with","with"],"and verses":["together","are"],"and vice":["versa..."],"and wanted":["to"],"and warn":["in"],"and was":["holding"],"and wasn't":["able"],"and we":["want","can't"],"and well,":["I"],"and were":["unfamiliar"],"and what":["arguments"],"and what's":["worse,"],"and whatever":["reduction"],"and whatnot,":["so"],"and when":["working","you","to","I","to"],"and where":["they","that"],"and whether":["or"],"and which":["makes"],"and will":["make","trying"],"and words":["will"],"and works":["simply","perfectly."],"and would":["much","like","be"],"and wow,":["is"],"and write":["these"],"and writing":["tests"],"and yes":["would"],"and yet":["the"],"and you":["could","can't","will","can","also","want","can","can","can","don't","wouldn't","could"],"and you'll":["not"],"and you're":["right."],"and your":["opinions","incrementer","team."],"and ∈":[":)"],"and, even":["in"],"and, hopefully,":["readable"],"and/or [-&gt;&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E%3E)":["might"],"and/or easier":["to"],"and/or is":["it"],"and/or level":["of"],"and/or personal":["preference."],"and/or preference":["-"],"and/or test":["about"],"angle. But,":["since"],"angry? function":["I"],"annoying in":["case"],"annoying that":["one"],"annoyingly minor,":["but"],"anon function":["could"],"anonymous `fn`":["be"],"anonymous form":["`#(validate"],"anonymous function":["would","literal","literals","which","you","with","slightly","literals.","wasn't","that","you","syntax","or","you","syntax","for"],"anonymous function,":["that","and"],"anonymous function:":["either"],"anonymous functions":["instead","seemed","with"],"anonymous functions.":["I"],"another \"mod\"":["to"],"another `\\n`":["at"],"another class":["I"],"another core":["clojure","clojure","clojure","clojure","clojure","clojure","clojure"],"another day,":["ANOTHER"],"another example":["of"],"another exercise!":["Guess"],"another exercise,":["I"],"another function":["with"],"another function's":["name?"],"another function,":["you"],"another function.":["The"],"another go":["at","at"],"another iteration":["of"],"another layer":["of"],"another look":["I","there."],"another map":["to"],"another mapping":["to"],"another mapping?":["Or"],"another name":["be","like:"],"another named":["function."],"another new":["response"],"another nitpicker":["will"],"another nitpicks":["to"],"another note,":["I"],"another one":["better.","at"],"another option":["that"],"another order":["make"],"another perspective":["to"],"another point,":["I"],"another predicate?":["Do"],"another response":["as"],"another revision":["at"],"another stage":["easily."],"another suggestion,":["have"],"another teenager":["with"],"another thing":["-"],"another use":["of"],"another way":["of"],"another, this":["implementation"],"another, which":["has"],"another. Definitely":["pleased"],"another. The":["fact"],"answer here":["is"],"answer is.":["I've"],"answer than":["simply"],"answer to":["this","your","the","[this"],"answer-to-question \"Sure\")`":["in"],"answers 'Whatever.'":["to"],"answers in":["a"],"answers the":["*what*,","why"],"any *rules*":["per"],"any Lisp-like":["languages,"],"any `:require`":["because:"],"any additional":["feedback?","context"],"any admin":["expectations"],"any advantage":["to"],"any advice":["as"],"any all-caps":["input"],"any and":["all"],"any better":["solution?","when","way?"],"any cache":["eviction"],"any case":["of"],"any clarity":["for"],"any clashes":["when"],"any corner":["case."],"any deep":["Clojure"],"any difference":["(`name`"],"any difference,":["but"],"any domain":["knowledge."],"any elegant":["way"],"any experience":["of"],"any explicit":["recursion."],"any favour":["switching"],"any feedback":["on"],"any function":["that"],"any functions":["returns"],"any further":["iterations"],"any guidelines":["on"],"any harm":["in"],"any hesitation":["(the"],"any hints":["that"],"any ideas":["for","what"],"any input":["string."],"any language.":["It","Observe","Bob"],"any lisp":["in"],"any logic":["in"],"any longer":["(the"],"any lower-case":["letters,"],"any more":["complex","concise","expressive,"],"any need":["to"],"any needless":["abstractions."],"any non":["software"],"any non-public":["helpers"],"any notes":["on"],"any nudges":["in"],"any of":["your","your","the","your","the","the","the","the"],"any other":["nitpicks/comments","kind","potential","way"],"any particular":["order"],"any performance":["benefits."],"any point":["in"],"any problem":["with"],"any problems.":["Obviously"],"any reason":["not","you're"],"any references":["for"],"any regular":["expressions?"],"any sentence":["and","that"],"any sequence":["type,"],"any simple":["way"],"any simpler":["than"],"any sort":["of"],"any string?":["a"],"any suggestions":["on"],"any tension":["about"],"any triangle":["that"],"any unexpected":["conditions."],"any unwanted":["characters"],"any upper-case":["text,"],"any way":["you","to","to","to","to","you"],"any). `declare`":["may"],"any-...)`. I'm":["on"],"any-lcase-chars))` would":["suffice"],"any-ucase-chars (not":["any-lcase-chars))`"],"anymore :)":["A"],"anymore so":["you"],"anymore. You":["tend"],"anyone else's":["here).","solutions"],"anyone has":["further","some","a"],"anyone know":["of","of"],"anyone really":["cares."],"anyone reviewing":["Clojure"],"anyone write":["more"],"anyone, but":["I'm"],"anything about":["Clojure.","that."],"anything at":["all."],"anything but":["standard"],"anything changed":["with"],"anything else.":["That","On"],"anything ending":["with"],"anything jumps":["out"],"anything like":["that"],"anything more":["fancy"],"anything of":["that"],"anything other":["than"],"anything that":["doesn't","needs"],"anything thrown":["at"],"anything to":["strings.","do"],"anything with":["spaces."],"anything work,":["let"],"anything you":["want."],"anything, it's":["not"],"anything, you":["just","just"],"anything. Is":["there"],"anything. Thanks":["for"],"anything? IMO,":["`frequencies`"],"anyway so":["I","looking"],"anyway, as":["I"],"anyway, it":["can"],"anyway. `(fn":["[a"],"anyway? I":["think"],"anywhere —":["not"],"apart the":["functions.","verses.","verse","partition"],"apart. I":["flipped"],"api at":["the"],"api generation":["-","was"],"api is":["on"],"api near":["the"],"api so":["you"],"api to":["helpers","the"],"apparent to":["me"],"apparent until":["after"],"apparently some":["assembly"],"appear almost":["like"],"appear in":["a","a"],"appear reasonably":["correct,"],"appear that":["your","there's"],"appearing in":["the"],"appears in":["the"],"appears to":["be","do","be"],"append a":["newline,","question"],"append another":["`\\n`","one"],"append the":["newline"],"applicable response.":["Could"],"applicable to":["Clojure,"],"application does":["not"],"application for":["this"],"application of":["function,"],"application problem":["is"],"application to":["a"],"application which":["would"],"application without":["the"],"application would":["work"],"application. Perhaps":["instead"],"applied a":["character"],"applied in":["the"],"applied inside":["the"],"applied it":["here."],"applied to":["functions"],"applied your":["suggestions"],"applied. So":["it"],"applies here":["is"],"applies to":["`pretty-print`."],"apply =)`.":["However,"],"apply [x]":["...)`"],"apply `character-frequencies`":["to"],"apply arguments":["that"],"apply by":["writing"],"apply for":["everything,"],"apply is":["a"],"apply lower-case":["before"],"apply that":["to"],"apply them":["here"],"apply to":["improve","list"],"apply, but":["that's"],"apply/merge/map with":["reduce/conj/{}"],"appreciate any":["hints","feedback"],"appreciate feedback":["on","on"],"appreciate hearing":["more"],"appreciate how":["concise"],"appreciate some":["comments."],"appreciate that":["much.","it","you"],"appreciate the":["feedback.","input.","guidelines","help!"],"appreciate you":["taking","pointing"],"appreciate your":["approach.","input,"],"appreciation for":["those"],"approach -":["it"],"approach I":["took","can"],"approach as":["it"],"approach at":["reading"],"approach because":["it"],"approach but,":["as"],"approach here":["works,"],"approach if":["you"],"approach of":["this","response-for-basic","just"],"approach or":["point"],"approach sounds":["awesome,"],"approach that":["would","cuts"],"approach the":["problem"],"approach though":["is"],"approach to":["building","splitting","keep","building","date","test","reviewing","the","building","finding"],"approach was":["very","to"],"approach with":["`frequencies`","macros"],"approach without":["recursion"],"approach would":["be","be"],"approach), there's":["a"],"approach, but":["used"],"approach, which":["would"],"approach. Alternatively,":["you"],"approach. Another":["way"],"approach. I'm":["personally"],"approach. Just":["figured"],"approach. More":["of"],"approach. Never":["knew"],"approach. The":["way"],"approach. What":["I","if"],"approach: \"if":["it's","it's"],"approached this":["differently"],"appropriate behavior":["defined"],"appropriate boolean":["given"],"appropriate for":["a"],"appropriate function":["in","private."],"appropriate here.":["Extracting"],"appropriate higher-order":["function"],"appropriate in":["clojure"],"appropriate inside":["`ns`"],"appropriate it":["is"],"appropriate one":["to"],"appropriate response,":["but"],"appropriate string.":["You"],"appropriate use":["of"],"appropriate). Then":["I"],"appropriately, makes":["it"],"approval. Sorry":["about"],"approve here":["are"],"approve this,":["and"],"approve your":["latest"],"approved assignment.":["Please"],"approved quickly":["enough"],"approved version":["of"],"approved, so":["you'll"],"approved, submit":["this"],"approved, you'll":["be"],"approved. But":["now"],"approved? :)":["My"],"aptly named":["methods","methods"],"arbitrary input":["and","that"],"arbitrary strings":["for"],"are \"grouped\"":["together"],"are 'coordinated'":["while"],"are 'exchange'":["and"],"are 'private'":["to"],"are 'safe',":["they"],"are 'uncoordinated'.":["This"],"are (=":["x"],"are *very*":["welcome..."],"are 2":["different"],"are Collection":["functions."],"are `:leap-year`":["and"],"are `O(n":["*"],"are ```T```":["and"],"are `empty?`":["and"],"are `seq`-able":["in"],"are a":["couple","couple","bit","bit","couple","lot","lot","couple","few","number","couple","bit","number","concise"],"are about":["naming."],"are absolutely":["necessary","right"],"are actions":["while"],"are added":["-"],"are all":["passing.","capital","fair","good","private","the"],"are almost":["always"],"are already":["using","seq-able","`seq-able`"],"are also":["functions","totally","a","functions","Collections,","`if-not`","string","clojure"],"are always":["subjective.","good"],"are ambiguous":["as"],"are an":["excellent"],"are anagrams":["if"],"are any":["lower-case"],"are any).":["`declare`"],"are arranged":["in"],"are asking":["perhaps"],"are at":["using","using","the"],"are available":["and"],"are being":["found"],"are better,":["more"],"are both":["game","this","`(some"],"are bound":["to"],"are called":["and","separately","separately"],"are calling":["str"],"are checking":["for"],"are cleaner":["solutions."],"are coming!\".":["IMO"],"are compared":["to"],"are comparing":["against"],"are computed,":["it's"],"are confusing":["to"],"are considered":["whitespace"],"are contexts":["where"],"are core":["objects."],"are correct":["the"],"are correct.":["The"],"are correct..":["thanks."],"are counting":["twice"],"are created":["by"],"are creating":["a"],"are defined":["here"],"are designed":["and"],"are different":["lengths)."],"are different,":["it"],"are doing":["or","it.","it","two"],"are domain-related,":["while"],"are duplicate":["values."],"are duplicated":["between"],"are each":["independent,"],"are entirely":["unnecessary."],"are equal.":["While","`seq`","Threading"],"are equally":["valid"],"are equivalent":["to"],"are evaluated":["in","on"],"are expanded":["at"],"are explicitly":["about"],"are expressed":["in"],"are expressive":["(as"],"are extra":["spaces","`()`s"],"are falsey":["in"],"are fantastic,":["though."],"are few":["more"],"are functions":["in","in"],"are generally":["reserved","used","frowned"],"are great":["tips.","points."],"are great,":["but","but"],"are green,":["I'll"],"are hard":["to","so"],"are hard.":["What"],"are ignored,":["but"],"are implemented":["by"],"are in":["pure","fact","a"],"are integral":["part"],"are interleaved":["with"],"are inverses":["of"],"are just":["as","functions.","a","whitespace:","whitespace"],"are kind":["of"],"are known":["to"],"are language":["from"],"are leaning":["toward"],"are left":["with,"],"are leveraging":["`frequencies`,"],"are like":["comments."],"are literals.":["It"],"are looking":["for"],"are lowercase":["while"],"are made?":["Would"],"are mainly":["transforming"],"are making":["that"],"are many":["useful","different"],"are meaninful":["to"],"are modified":["in"],"are more":["clear?","idiomatic.","than","complex"],"are much":["more"],"are mutually":["exclusive"],"are necessary":["-"],"are new":["to"],"are no":["ordering","more","matches"],"are not":["needed.","directly","explicitly","methods,","statements,","strings,","obligatory","anagrams","present","necessarily","part","considered","the","in","quite","at"],"are not.":["`some`"],"are now":["public.","totally"],"are numbers,":["no"],"are obvious":["mistakes,"],"are often":["an"],"are on":["the"],"are one":["technique"],"are only":["matching"],"are operating":["upon"],"are optional.":["Please"],"are order":["dependent."],"are other":["facilities"],"are passed":["to","around"],"are passed,":["and"],"are possible":["inputs"],"are predicates":["(based","and"],"are preferred":["in"],"are pretty":["simple","mysterious","strange"],"are private":["in"],"are probably":["more","a","a"],"are processing":["`word`"],"are proper":["functions)"],"are providing":["a"],"are put":["together.","on","between"],"are quite":["a","a"],"are really":["helpful","helpful","helpful.","just"],"are recommended":["for"],"are reducing":["on."],"are redundant":["since"],"are referring":["to,"],"are reinventing":["`map`"],"are removed":["in"],"are represented":["by"],"are reserved":["for"],"are right!":["Too","I"],"are right,":["it","and"],"are right.":["they","It"],"are separate":["functions."],"are separated":["by"],"are sequences":["in","too."],"are significantly":["more"],"are simpler":["ways"],"are so":["well","common","well","well"],"are some":["type","characters","small","redundant","things","quite","other","benefits","other","built-in","more","other"],"are sorted.":[":-)"],"are sorting":["and"],"are standard":["indent","-"],"are still":["many"],"are string":["replace"],"are stylistic":["ones"],"are superfluous,":["take"],"are supposed":["to"],"are talking":["about...","about","about"],"are the":["same","square","only","only","same","only","same","whole","whole","benefits","strings","proper","three","only"],"are then":["turned"],"are they":["for,"],"are things":["one"],"are tightly":["coupled"],"are too":["much,"],"are totally":["right","right"],"are treated":["as","as","as"],"are truthy":["in"],"are two":["things","(get","arguments?"],"are unlikely":["to"],"are unnecessary":["for"],"are unnecessary,":["since"],"are unnecessary.":["Alternatively,","My"],"are up":["to"],"are uracil":["and"],"are used":["in","for"],"are used.":["Other"],"are using":["`is-`","mutable","directly."],"are usually":["placed","not"],"are valid":["in","dna"],"are valid,":["though"],"are valid.":["This"],"are validated":["but"],"are vectors,":["not"],"are very":["specific.","minor","readable","slow,","similar."],"are ways":["to","to"],"are we":["asserting?","asserting?"],"are welcome.":["Style,"],"are whitespace":["and"],"are working":["as"],"are worlds":["apart."],"are writing":["your"],"are written":["as"],"are yelling":["then"],"are you":["mapping","testing","checking","suggesting","familiar","using?","using"],"are. The":["character"],"are..[oddly not":["more"],"area code":["looks"],"area-code). It":["might"],"area. `correspondence-to-rna`?":["Ugh."],"aren't ASCII":["alphanumeric."],"aren't always":["the"],"aren't any":["unexpected"],"aren't coding":["Python"],"aren't super":["promising."],"aren't supposed":["to"],"aren't visible":["to"],"arg list,":["like:"],"args &amp;":["body]"],"args and":["just"],"args f":["g"],"args on":["the","the"],"args should":["be"],"args vector":["in"],"args when":["there"],"args*)) and":["redundant"],"arguably less":["expressive"],"argue either":["way."],"argue that":["\"Whatever\"","\"Whatever.\"","one","based","splitting","the","nucleotides","it"],"argue, I":["really"],"argument (like":["my"],"argument (or":["rather"],"argument (the":["original"],"argument `[[value":["key]]`"],"argument `g`":["to"],"argument and":["in","reused","that","have"],"argument being":["candidate"],"argument does":["not"],"argument don´t":["say"],"argument for":["both","keeping","doing","the","\"not"],"argument functions":["in"],"argument functions.":["However"],"argument has":["the"],"argument in":["the"],"argument is":["re-seq.","not"],"argument list":["of"],"argument list,":["to"],"argument list.":["Not"],"argument lists":["`[msg]`"],"argument name":["/","but","letters","letter"],"argument name?":["The"],"argument or":["the"],"argument passed":["to","to"],"argument returned":["when"],"argument shouldn't":["be"],"argument that":["without","is","could","is"],"argument there":["it's"],"argument through":["the"],"argument to":["the","a","them","them","make","`range`","the","`vector`","leap-year?","an","each"],"argument twice,":["is"],"argument vector":["comes","dropped"],"argument when":["using"],"argument which":["is","is"],"argument with":["a"],"argument would":["save"],"argument, so":["I","it","you"],"argument-less function":["does"],"argument. Everytime":["something"],"argument. I":["suppose"],"argument. My":["experience"],"argument. The":["only"],"argument. You":["can","should"],"argument? Must":["learn"],"arguments (":["`(seq"],"arguments (in":["which"],"arguments (it":["can"],"arguments (with":["non-descriptive"],"arguments against":["it"],"arguments are":["in"],"arguments as":["`get`","`[word1"],"arguments but":["couldn't"],"arguments could":["make"],"arguments directly,":["without"],"arguments either":["way."],"arguments expected":["on"],"arguments for":["both","having"],"arguments in":["threading"],"arguments is":["still"],"arguments list":["on","in"],"arguments on":["a"],"arguments that":["don't"],"arguments they":["are"],"arguments through":["to"],"arguments to":["forms"],"arguments vector":["is","in"],"arguments vector.":["It"],"arguments was":["that"],"arguments, but":["the"],"arguments, so":["I"],"arguments, the":["latter"],"arguments, you":["can"],"arguments. I":["actually"],"arguments. Of":["course"],"arguments. This":["produces"],"arguments? #(=":["%"],"arithmetic with":["raw"],"arity 1,":["there"],"arity needed.":["When"],"arity of":["1"],"arity than":["the"],"around \"root":["bound"],"around ([x]":["…)"],"around `[\\w]`":["are"],"around a":["`defn`"],"around an":["order"],"around but":["wanted"],"around finding":["that"],"around functions":["with"],"around it.":["Not"],"around now,":["and"],"around than":["a"],"around the":["argument","way"],"around this":["by"],"around using":["\u003ccode\u003econdp\u003c/code\u003e"],"around with":["`comp`.","frequencies","Racket","intern","a"],"around). But":["I'm"],"around, don't":["pay"],"around, for":["fun"],"around, you":["wanted"],"arr-ee, I'll":["look"],"arrange it":["as"],"arrange some":["late"],"arranged in":["continuous"],"arranging the":["process"],"array and":["uses","then","a"],"array. And":["suddenly"],"arrow and":["some"],"arrow macro":["invocation"],"arrow that":["is"],"articles in":["English"],"articles recommending":[":require/:refer"],"articles that":["may"],"as \"4?\".":["Perhaps"],"as \"question\"":["and"],"as \"shouty-question?\"":["\"number-question?\"."],"as 'done'?":["I'm"],"as :T.":["(keyword"],"as \u003ccode\u003ebob/response-for\u003c/code\u003e?":["I"],"as @elian":["pointed"],"as Haskell":["is"],"as I":["didn't","might","started","said","didn't","think","thought","was","would","have","hate","was"],"as I'm":["new","not","pretty"],"as I've":["written,","stated"],"as Strings":["though."],"as [\"condition":["map\"](http://clojure.org/special_forms#toc9)"],"as [condition":["map][1]"],"as \\A,":["\\G,"],"as \\U":["to"],"as `\"42\"`":["or"],"as `#(…%)`":["but"],"as `(and":["(="],"as `(boolean":["x)`."],"as `(dec":["x)`","x)`.","x)`.","bottles_number)`"],"as `(def":["pair-up"],"as `(ends-with?":["\\?"],"as `(not":["x)`"],"as `(not=":["word","x"],"as `(repeat":["10"],"as `(sort":["(lower-case"],"as `(when":["boolean"],"as `(zero?":["n)`","n)`","bottle_number)`"],"as `[word1":["word2]`"],"as `\\A`,":["for","`\\G`,"],"as `apply":["str`","str`."],"as `apply`":["would"],"as `assertEqual(expected,":["actual)`."],"as `clojure.string`":["does"],"as `get`":["modulo"],"as `get`.":["However"],"as `if-not":["(empty?"],"as `if`":["will"],"as `last`,":["I"],"as `nil`":["(which"],"as `nothing?`":["would"],"as `question?`.":["Then"],"as `silence?`,":["`yelling?`"],"as `silence?`.":["The"],"as `split`":["behind"],"as `str`":["and"],"as `str`;":["as"],"as `true`":["for"],"as `when`":["which"],"as `yelling?`":["or"],"as a":["statement.","word?","rna-transcription.","question","var","\"magic","pipeline","sequence.","variable","recalcitrant","list","sequence","string.","sequence","possible","list","sequence","last","sequence","first","function.","functions.","boolean","list","function,","function","function","function","sequence","function","function","logical","sequence","REPL","function","coder...","transient","sequence","sequence","shrinking","sequence","series","metadata","sequences","visual","low-level","sequence","whole","function","possibility.","sequence","vector,","`let`,","fuction","variable","warning","first","first","literal","first","case","simple","function","public","fn.","function,","way","seq","sequence","map","`reduce`","function","function","group.","method","simple","collection","reduce","key","key","loop/recur","`reduce`","function","function:","reader.","function","hint","`reduce`","result."],"as all":["other"],"as an":["alternative","ordered","object,","exercise,","argument","argument","(optional)","executable","opportunity","alias","argument."],"as anagrams)":["and"],"as another":["way"],"as any":["functions"],"as anyone":["else's"],"as anything":["that"],"as arguments":["vector","to"],"as before":["it"],"as blank?":["is"],"as building":["the"],"as business":["rules"],"as class":["path"],"as clear":["as"],"as clearly":["that"],"as close":["the"],"as collections":["in","of","and","of"],"as collections,":["so","so","so","so"],"as common,":["but"],"as defn":["isn't"],"as descriptive":["as"],"as dna-&gt;rna,":["but"],"as done,":["but"],"as easy":["to","to"],"as effective":["if"],"as efficient,":["but"],"as expected.":["But"],"as explaining":["*\"a"],"as expressed":["here"],"as extension)":["capability"],"as far":["as"],"as first-class,":["you"],"as focused":["on"],"as follows:":["have"],"as for":["the"],"as functions":["in","for","is","is","is","in","which"],"as functions,":["or","which","where","where"],"as functions.":["e.g."],"as functions?":["Maybe"],"as good":["a","to","at"],"as great":["as"],"as hell...":["but"],"as helpful":["as"],"as how":["it's","it's"],"as if":["it"],"as in":["\"Be","`subject-char-freq`"],"as inner":["variables"],"as input":["the","I","but"],"as is":["declared"],"as it":["removes","should","can","is","is","calls","would","would","does","stands.","is","really","would","gives","hurts","will","has","very"],"as it's":["clearly","mostly","implied","the"],"as iteration":["2"],"as just":["a","`%`","`join`","`%`"],"as lacking":["in"],"as lazy":["as"],"as lists":["of","as"],"as lists,":["which"],"as little":["as"],"as logical":["false."],"as long":["as"],"as many":["lines,"],"as meaning":["the"],"as much":["of","like","code","intent","as","like","as"],"as nested":["function"],"as nice":["as","in"],"as nicely":["for"],"as nil":["might"],"as no":["hanging"],"as none":["of"],"as not":["to","to"],"as numbers":["go."],"as of":["about"],"as one":["function,","with","of"],"as one-liners":["-"],"as one-liners,":["would"],"as opening":["square"],"as opposed":["to","to","to","to","to","to"],"as original":["collection"],"as other":["dna-namespaced","functions"],"as outlined":["in"],"as part":["of"],"as passing":["something"],"as portable":["as"],"as possible":["I","with","to","but","when","through"],"as possible,":["you","allowing"],"as possible.":["That","Would"],"as pred,":["for"],"as private":["like","(using","using","vars)."],"as privately":["accessible"],"as read":["that"],"as readable":["as"],"as replacing":["`nucleotides`"],"as seban":["suggested."],"as seqs":["of"],"as sequences":["of","of","of"],"as shouting":["(and","and"],"as shouting.":["Maybe"],"as silence,":["I"],"as simple":["as","and"],"as slow":["as"],"as somebody":["mentioned),"],"as something":["like"],"as soon":["as","as"],"as strings.":["How"],"as strongly":["as"],"as such":["I'm"],"as suggested":["earlier","by"],"as that":["are","is","makes"],"as the":["default.","default","start","other","other","first","other","end","others","private","function","input?","last","argument","regular","descriptions","return","new","technical","question","first","repeated","top","predicates","input","previous","previous","option","function","ns","alphagram","word","assumption","`and`)","function","filter","length","let.","results,","last"],"as they":["have","stick"],"as this":["opinion","allows","is"],"as to":["give","when","what","whether","whether"],"as too":["complex"],"as true":["in"],"as true,":["which"],"as truthy.":["Not"],"as two":["words"],"as using":["a","functions"],"as valid":["as"],"as vars":["with","so"],"as wanting":["to"],"as was":["the"],"as well":["as","as","—","without","as","IMO.","since","as","in","as","as","as","as","though","by","which","and"],"as well)":["to","which"],"as well,":["and","the","and","thank","but","so","but","so","but"],"as well.":["Otherwise,","Unhandled","But","For",":-)","Were","Is","Which"],"as what":["you"],"as with":["everything","use"],"as words.":["Not"],"as yelling":["in"],"as you":["have","try","say","said,","suggest,","can","suggest,","suggested.","suggested.","also"],"as you've":["observed,"],"as your":["use."],"as yours,":["but"],"as yours.":["You"],"as-is it":["will"],"ascii range":["a"],"aside (and":["feel"],"aside, I'm":["fairly"],"aside, the":["Clojure"],"aside,) more":["eloquently."],"ask a":["friend"],"ask collection":["to"],"ask for":["a","some","its"],"ask me":[":)"],"ask why":["you"],"asked Bob":["a"],"asked Bob,":["\"Do"],"asked for":["an"],"asking if":["there"],"asking perhaps":["better"],"asking. If":["you"],"asks *does":["this"],"ass, but":["check"],"assemble it":["back"],"assembly is":["required."],"assert accepts":["a"],"assert and":["to","pre-"],"assert could":["be"],"assert in":["clojure"],"assert is":["a"],"assert. That":["threw"],"asserted to":["be"],"assertion about":["the"],"assertion in":["the"],"assertion is":["by"],"assertion to":["check"],"assertions (which":["does"],"assertions about":["input/output"],"assertions in":["clojure"],"asserts that":["the"],"assigments you":["can"],"assign descriptive":["names"],"assign nucleotide":["characters","characters"],"assign the":["characters"],"assign vars":["with"],"assigned the":["return"],"assignemnts, you":["can","can"],"assigning nucleotide":["chars","chars"],"assigning nucleotides":["chars"],"assigning the":["constants"],"assignment `42":["="],"assignment a":["proper"],"assignment for":["this"],"assignment is":["to"],"assignment myself":["-","and"],"assignment was":["roughly"],"assignment)` will":["fail"],"assignment. Camelcased":["names"],"assignment. How":["do"],"assignment. Maybe":["indeed"],"assignment. Please":["ignore"],"assignments -":["but"],"assignments are":["the"],"assignments could":["help"],"assignments is":["optimized"],"assignments was":["better"],"assignments were":["extended"],"assignments, the":["computation"],"assignments, you'll":["make"],"assignments. It":["is"],"assignments. Please":["also"],"assoc '~name":["~name)))"],"associative data":["structures"],"assume A":["=="],"assume `=`":["will"],"assume `str`":["casts"],"assume that":["the","this","you","main","it's"],"assume the":["implementation"],"assume there":["is"],"assume they're":["getting"],"assumed that":["you","the"],"assumed the":["tests","`pluralize`"],"assumed you're":["familiar"],"assumes mutable":["state."],"assuming that":["silence"],"assumption the":["function"],"assumptions about":["its","the"],"assumptions and":["generate"],"assumptions like":["that"],"assure that":["the"],"astronomical how":["do"],"asymetric with":["```split-words```"],"at \"javascript\".":["Perhaps"],"at (finding":["what"],"at *last*":["character"],"at 10":["million"],"at 6":["AM."],"at \u003ccode\u003econd\u003c/code\u003e":["in"],"at Bob's":["feelings"],"at Clojure,":["it"],"at Clojure.":["Be"],"at IO":["boundaries."],"at [-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E)":["or"],"at [`assert`](http://clojuredocs.org/clojure_core/clojure.core/assert)":["to"],"at [`case`](http://clojuredocs.org/clojure_core/clojure.core/case).":["When"],"at [`every?`](http://clojuredocs.org/clojure_core/clojure.core/every_q)":["as"],"at [clojure.string](http://clojure.github.io/clojure/clojure.string-api.html)":["to"],"at `-››`":["which"],"at `GregorianCalendar`,":["thanks!"],"at ```blank?```":["and"],"at `clj-time`":["to"],"at `clojure.string/blank?`":["which"],"at `cond`,":["it's"],"at `core.frequencies`":["to"],"at `frequencies`":["function.","here","-"],"at `frequencies`,":["I"],"at `let`":["form"],"at `not=`":["for"],"at `re-seq`":["here","as"],"at a":["different","super-DRY","version","glance","number","glance","later","time.","higher"],"at all":["of",":)","costs","here.","times",":)","and"],"at all!":[":)"],"at all,":["and"],"at all.":["I've","Just","Maybe",":/","I","It's","I"],"at all?":["`(filter"],"at any":["of"],"at as":["a"],"at clojure.string/blank?":["for"],"at clojure.typed.":["It"],"at compile":["time,","time,"],"at creating":["the"],"at doing":["it"],"at example":["REPL"],"at expressing":["*why*"],"at first":["glance","even","glance","sight."],"at hand":["and"],"at hand,":["e.g."],"at how":["sets","much"],"at http://clojuredocs.org/clojure_core/clojure.core/defn":["for"],"at http://ryanverner.com/post/49884705761/clojure-require-vs-use":["for"],"at https://github.com/vim-scripts/VimClojure":["if"],"at if":["you'd"],"at is":["that","not"],"at it":["I","after","to","know","now,"],"at it,":["I"],"at it.":["Thanks","Thanks","This"],"at iteration":["#10?"],"at its":["intent."],"at least":["based","you","define","less","so","explicit","tell","the","one","original","to","not","this","per","one","one","what","give","as","about","not","one","one","in","one","there's","a"],"at least!":["I'm"],"at line":["14"],"at making":["use"],"at me":["though"],"at me.":["I"],"at much":["better"],"at my":["new","latest"],"at naming":["variables."],"at once":["and","-"],"at one":["point","level","point"],"at other":["solutions"],"at others'":["solutions"],"at play":["in"],"at reading":["in"],"at reasonable":["level"],"at regex":["and"],"at renaming":["you"],"at replacing":["the"],"at rereading":["the"],"at runtime,":["no"],"at serious":["lisp"],"at sets":["and"],"at some":["point.","point.","of","clojure","level.","point.","point."],"at submitting":["code"],"at that":["point."],"at that,":["like"],"at the":["end","names","same","last","end","API","same","moment","IO","functions","functions","functions","`clojure.string`","example.","key","same","end.","[format](http://clojuredocs.org/clojure_core/clojure.core/format)","Clojure","top","same","top","top.","[frequencies](http://clojuredocs.org/clojure_core/clojure.core/frequencies)","top","very","top","top","beginning.","same","top.","sequences","```frequencies```","top","top","`frequencies`","tests","top","same","`core`","end","top","end","end","`frequencies`","[`Threading","multi-collection","end","multiple","time.","end","length","rest","end.","`update-in`","same","square","`:require`","given","last","README.","`assert`","same","same","top"],"at this":["problem.","problem","a","point.","point.","point.","was","point"],"at this,":["and"],"at top":["and"],"at using":["`:require`","partial,","`partial`,","`:refer`","`:require`","Refs,"],"at whitespace.":["But"],"at work.":["Thanks"],"at you":["about"],"at your":["submission","disposal."],"at yours.":["Eventually"],"at. Cool,":["I'll"],"at. In":["clojure,"],"at; I":["know"],"atom as":["an"],"atom being":["a","a","a"],"atom containing":["a"],"atom directly":["though,"],"atom inside":["a"],"atom instead":["of"],"atom is":["run","run","intended"],"atom might":["have"],"atom so":["no"],"atom to":["contain"],"atom type":["is"],"atom usage.":["Will"],"atom when":["`robot`"],"atom. Although":["your"],"atom. ref":["is"],"atomic transactions":["with"],"atomic, you":["can","can"],"atomically. All":["of"],"atomicity of":["operation"],"atoms and":["agents","that"],"atoms are":["'uncoordinated'."],"atoms enhance":["readability"],"atoms in":["Erlang.","the"],"atoms rather":["than"],"atoms to":["RNA"],"atoms) for":["describing"],"atoms, and":["a"],"atoms, the":["let"],"atoms, which":["I"],"attached as":["a"],"attaching metadata":["to"],"attempt at":["a","this","any"],"attempt it":["anyway:"],"attempt this":["in"],"attempt to":["address","DRY"],"attempt whatsoever":["to"],"attempt without":["cheating,"],"attempt!! ,":["one"],"attempt!. How":["about"],"attempt, but":["my"],"attempt, though":["I'm"],"attempted to":["solve","be"],"attempting `doseq`":["as"],"attempting to":["test"],"attempts to":["do"],"attention for":["the"],"attention to":["proper","things","the"],"attribute, it's":["better"],"attributes in":["a"],"authenticated encryption":["to"],"author and":["maintainer"],"author.\" would":["match"],"authoritative style":["guide"],"authority on":["what's"],"auto-generate the":["function"],"auto-memoization feature":["I'm"],"automate the":["validation"],"automatically throw":["the"],"automatically, like":["Haskell."],"automatically. To":["keep"],"auxiliary fns.":["The"],"auxiliary function":["like"],"available and":["appropriate"],"available as":["extension)"],"available at":["hand."],"available but":["only"],"available in":["the","order","the"],"available is":["one"],"available outside":["the"],"available to":["outside","me,","your"],"available, but":["you"],"available. (Not":["trying"],"available. I":["was","can't"],"available. What":["you're"],"avoid Java":["interop"],"avoid a":["bit"],"avoid accessing":["collections"],"avoid additional":["overhead"],"avoid all":["ambiguity,","the"],"avoid calling":["out"],"avoid consuming":["stack","stack"],"avoid converting":["the","to"],"avoid doing":["the","a","that"],"avoid having":["to"],"avoid implementing":["exponentiation"],"avoid importing":["it"],"avoid it":["altogether.","whenever"],"avoid nested":["`if`s."],"avoid performing":["that"],"avoid problems":["with"],"avoid processing":["it"],"avoid regexes":["and"],"avoid regexp":["in"],"avoid repeating":["tasks","`random-letter`","those.","the"],"avoid the":["wrapping","warning","map-inside-a-map,","ugliness","alphagram","need","map","need","conditional"],"avoid too":["much"],"avoid tripping":["up"],"avoid using":["type-specific","`first`/`second`.","one","`ns-resolve`."],"avoided in":["newest"],"avoided this":["problem"],"avoided. One":["of"],"avoiding clashes":["with"],"avoiding processing":["the"],"avoiding re-evaluation.":["I"],"avoiding the":["\"wildcard","accidental"],"avoiding to":["repeat"],"avoiding using":["any"],"avoids creating":["a"],"avoids the":["duplication,"],"aware I":["could"],"aware of":["the","it.","any","the","defn-","`reduce-kv`,","`frequencies`","it","this","clojure.core/frequencies,","condp!","for","that","`letfn`;"],"aware of)":["but"],"aware of,":["and"],"aware that":["there","this"],"aware was":["in"],"aware you":["can"],"aware. It's":["something"],"away -":["I'm"],"away by":["the"],"away entirely.":[":)"],"away from":["working"],"away my":["least"],"away the":["need"],"away with":["combining","that","leaving"],"away, instead":["of"],"awesome and":["gave"],"awesome catch,":["thanks!"],"awesome tips,":["thanks."],"awesome! Thank":["you."],"awesome, gonna":["give"],"awesome. Sure":["it"],"awesome. Thank":["you"],"awfully complex.":["I'm"],"awkward and":["might"],"awkward if,":["e.g.,"],"awkward looking":["here."],"awkward to":["read","me,","me,"],"awkward. I":["would","find"],"awkward. This":["form"],"b 1]":["#{a"],"b and":["in"],"b c])`":["though"],"b calls":["function"],"b c}":["set,"],"b directly":["in"],"b) asserts":["that"],"b) it":["could"],"b) not":["very"],"b) the":["responses."],"b))` #":["function"],"b)` does":["the"],"b)`. The":["resulting"],"b] (+":["a"],"b] [a":["b])`"],"b])` can":["be"],"back and":["forth","forth,","do","tidy","reviewed"],"back anymore":[":)"],"back for":["equality"],"back from":["@emmie."],"back into":["a","a","string.","persistent"],"back myself":["from"],"back of":["my"],"back on":["this"],"back the":["last","first"],"back to":["plain","`toUpperCase`","improving","doing","string","this","normal.","naming","my","regexes","you","myself","Java's","this","`string/replace`","string","update","a","Strings","a","the"],"back with":["the"],"back! Silly":["me,"],"back, hoping":["it"],"back. I":["can"],"background, even":["with"],"background, you":["wouldn't"],"backs up":["that"],"backslash, like":["`\\a`."],"backwards on":["the"],"backwards to":["understand...the"],"bad and":["it"],"bad at":["regex","naming"],"bad code,":["but"],"bad for":["performance?"],"bad foray":["kinda"],"bad form,":["and"],"bad guy":["here."],"bad hint,":["but"],"bad idea,":["but"],"bad idea.":["That'd"],"bad in":["clojure"],"bad joke)":["more"],"bad number":["to"],"bad practice":["to"],"bad style":["in"],"bad thing":["to"],"bad thing,":["but"],"bad to":["use","me"],"bad we":["can't"],"bad, I":["assumed"],"bad, however":["I"],"bad. That":["said"],"badly with":["my"],"balance I":["agree."],"balance my":["parens).","parens"],"balance of":["concision"],"balance readability":["with"],"balance\" examples":["-"],"ball, so":["at"],"bar baz":["with"],"bar\" str/trim":["str/reverse"],"bare Java":["methods"],"bare characters":["might"],"barely know":["what"],"barking up":["the"],"baroque, but":["it's"],"barred from":["continuing"],"barrier there.":["I"],"barring the":["String"],"base ...":["with"],"base `word`":["value"],"base hash":["in"],"base map;":["but"],"base map?":[":)"],"base word":["once?","once?","only"],"base-word [comparable":["other]))))"],"based algorithm,":["so"],"based on":["the","the","the","the","my","zoldar's","`empty-dna-frequencies`","the","etrepum's","spoken","your","your","`equal-length`,","value,","type.","length.","feedback","simple"],"based solution":["because","with"],"based thinking":["in"],"based upon,":["at"],"bash the":["hell"],"basic I":["used"],"basic collection":["functions"],"basic components":["to"],"basic regular":["expressions"],"basically \"lingua":["franca\""],"basically become":["duplicate"],"basically have":["to","the","no"],"basically imperative":["code,"],"basically instill":["bad"],"basically makes":["them"],"basically the":["same"],"basically want":["Clojure"],"basics would":["be"],"basis function":["and"],"batch of":["tests"],"baz with":["x\""],"be \"an":["invalid"],"be (:require":["...."],"be (`nucleotide`,":["for"],"be (defn-":["silent?"],"be *real":["world"],"be Bob's":["default"],"be \\U":["in"],"be `#{\\A":["\\C"],"be `(-":["6)`?"],"be `(=":["\\?"],"be `(clojure.string/blank?":["message)`"],"be `(defn-":["shouted?"],"be `\\U":["0})`?"],"be `update-in`":["but"],"be a":["good","way","better","regular","plain","little","bit","plain","third","good","clear","workaround,","bit","good","hint","regex?","bit","good","little","whole","bit","nitpick.","bug.","word-count","top","great","better","matter","vector","better","better","better","bit","non-public","pain","more","say-nothing?","matter","bit","better","problem","good","case-insensitive","method","bug.","good","little","little","sledge","little","feature","better","better","matter","comment","preference.","lot","particularly","regex,","one-liner","good","lazy","better","bit","good","good","public","more","little","matter","docstring","matter","little","bit","little","little","nice","bit","bit","need","little","need","little","good","simpler","lot","little","bit","good","much","bit","little","bit","bit","more","lot","bit","right","matter"],"be able":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"],"be abstracted":["for"],"be accomplished":["by"],"be accurate":["but"],"be achieved":["with"],"be added":["for","to"],"be added,":["and"],"be additional":["requires"],"be aligned":["to"],"be allowed":["to"],"be already":["treated"],"be also":["good","treated"],"be alternatively":["realized"],"be an":["equivalent","impatient","improvement.","anagram","anagram","easier"],"be any":["advantage","clashes"],"be anything":["you"],"be as":["simple","much","effective","common,"],"be assumed":["that"],"be at":["the"],"be available":["to"],"be aware":["of"],"be bad":["for"],"be bad.":["That"],"be based":["upon,"],"be beneficial":["for"],"be beta":["reduced"],"be better":["room","to","\"default\"","to","to","than","to","in","for","off","to","for","than","to","to","like:","in","to","off","to","to","to","to","with","written"],"be better,":["or","or","just"],"be better.":["In"],"be both":["yelled"],"be breaking":["these"],"be calculated":["again"],"be called":["once,","something","with","just","with","anything"],"be careful":["for"],"be cases":["when"],"be caught":["by"],"be changed":["-"],"be changing":["behind"],"be checked,":["but"],"be cleaned":["up."],"be cleaner":["without"],"be cleaner,":["though."],"be cleaner.":["I'll"],"be clear":["to","in"],"be clearer":["to","to","to","in","for","for","still","than","to","to","if","than","and","by","to","to"],"be clearer.":["I","Using"],"be combined":["into","like"],"be comparable":["to"],"be compared":["live"],"be completely":["the"],"be composed":["from"],"be computed":["for"],"be concerned":["by"],"be confusing":["to"],"be confusing,":["but"],"be considered":["a","a","shouting.","yelling,"],"be consistent":["with","with"],"be cool":["to"],"be copying":["the"],"be correct.":["Thanks"],"be counted":["as"],"be dangerous.":["So"],"be dealing":["badly"],"be default,":["not"],"be defined":["in"],"be delighted":["if"],"be derived":["from"],"be desirable":["to"],"be desired,":["but"],"be different":["than"],"be doing":["it","`(count"],"be doing,":["so"],"be done":["with","in","via","without","at","in","with","with:","(naming","with","by","with","as","like","as","shorter/better,","in","with"],"be easier":["to","only","if","to","to","just"],"be easily":["missed/ignored.","cast"],"be either":["defined"],"be eliminated":["by"],"be empty":["I"],"be enough":["to","in","(we"],"be evaluated":["whether","either"],"be even":["simpler"],"be exactly":["what","reverse"],"be expanded":["to"],"be expected":["to"],"be explanation":["of"],"be explicit":["about","in"],"be explicitly":["handled"],"be exported":["is","in"],"be exposed":["to"],"be expressed":["clearly","more","as","in"],"be extracted":["as","out,","into"],"be familiar":["with"],"be faster":["than","than"],"be faster,":["especially"],"be first":["-"],"be fixed,":["but"],"be for":["an","public."],"be formatted":["as"],"be formed":["based"],"be found":["here:","in","here:","here:"],"be fully":["qualified."],"be fun":["to"],"be functions,":["but"],"be fused":["together."],"be generally":["desirable"],"be generated":["in"],"be generated.":["And"],"be given":["names","to","names","names?"],"be good":["for","if","for","for","if","to","to","to","if","if","to","for","to","for"],"be great":["to"],"be handed":["just"],"be handled":["in","by"],"be handy":["(aliasing"],"be happy":["to","about"],"be helpful":["in","as"],"be here.":["I"],"be hidden":["behind"],"be highly":["appreciated."],"be his":["default"],"be holding":["you"],"be honest":["I","I"],"be idiomatic":["in","for"],"be idiomatic,":["not"],"be if":["all"],"be immediately":["obvious"],"be implemented":["without"],"be improved":["is","for","by"],"be improved.":["You"],"be in":["it's","scope.","the","terms","the","`transcribe`","the","its"],"be increased":["if"],"be indented":["by","by","more"],"be independent.":["Instead"],"be inlined":["anonymous).","(and,"],"be insanely":["helpful"],"be interested":["to","to","in"],"be interesting":["to"],"be interpreted":["as","as"],"be invalid.":["Here"],"be just":["`\\w+`.","'%'.","`%`.","as","put","due","a","the"],"be laid":["out"],"be language":["from"],"be lazy.":[":)"],"be less":["cluttered","clutter.","expressive","performant"],"be liberal":["in"],"be little":["point"],"be looking":["at?"],"be lower":["cased"],"be lower-case":["to"],"be lowercase":["and"],"be made":["in","more","order","order-independent"],"be max.":["Furthermore,"],"be missing":["something.","out","something"],"be modified":["to"],"be more":["strict?)","explicit","readable.","descriptively","convenient.","small-screen/mobile","effective","idomatic.","idiomatic","clear.","explicit,","readable","readable","reasonable","evident","efficient","idiomatic","idiomatic","readable,","descriptive,","self-documenting.","composable","clear","readable","straightforward.","idiomatic","accepted","appropriate?","clear","idiomatic","readable","fitting","idiomatic.","appropriate.","idiomatic","efficient.","specific","complex?)."],"be moved":["to","up"],"be moving":["predicates"],"be much":["more","better","easier","difference.","easier","faster","quicker","concise"],"be my":["lack","fault."],"be named":["`celsius-&gt;fahrenheit`.","`dna-seq`,","and","ending"],"be neat":["to"],"be necessary":["but","because","because","at"],"be needed":["at","to"],"be negative":["so"],"be nice":["demonstrations","if","to","to","to","to"],"be nice.":["Couldn't","Although"],"be nicely":["abstracted"],"be nicer":["to"],"be nil":["if"],"be no":["lines"],"be normally":["be"],"be obvious":["as","at"],"be of":["interest"],"be ommitted":["with"],"be on":["to","the","the","the","the","the","the","the","its'","one","a","its"],"be one":["of","way"],"be one-liners.":["But"],"be open":["to"],"be opened":["with"],"be out":["of"],"be overdoing":["it"],"be overkill":["here,",",","for"],"be overkill,":["given"],"be overkill.":["They"],"be overshadowed":["by"],"be part":["of","of","of","of","of"],"be particularly":["useful."],"be passed":["onto","to"],"be persistent":["between"],"be personal":["preference."],"be possible":["to","to"],"be possibly":["nice","more"],"be practive":["reflected"],"be preferable":["to","to"],"be pretty":["gobsmacked","bad","dense","useful."],"be prime":["numbers"],"be private":["if","functions?"],"be private,":["there's","don’t"],"be private.":["No","No","So,","One"],"be processed":["once."],"be proven":["wrong"],"be public":["or","if","is","or"],"be public,":["tag"],"be publicly":["used?"],"be pulled":["out"],"be quite":["confusing"],"be raised.":["This"],"be random":["(not"],"be read":["many"],"be read.":["`declare`"],"be reading":["code"],"be really":["legible","hard"],"be reasonably":["asserted"],"be reduced":["to","to","with","to","to"],"be remedying":["that"],"be replaced":["with","with","with","by"],"be reserved":["for","for"],"be returned,":["but"],"be reused":["if","and"],"be run":["again."],"be seen":["by"],"be separated":["into"],"be sequential":["(as"],"be set":["again."],"be setup":["to"],"be shortened":["to","to","using"],"be shortenedup.":["Maybe"],"be shouting":["even"],"be shown":["the"],"be simple":["to","to"],"be simpler":["if","with","with"],"be simpler.":["One"],"be simplifed":["a","to"],"be simplified":["to","with","somewhat","further.","somewhat","by","a","to:"],"be simplified.":["`clojure.string/upper-case`,","`clojure.string/lower-case`","I"],"be simply":["rewritten"],"be slightly":["more","more"],"be slimmed":["down"],"be slower":["to"],"be smart":["enough"],"be solved":["much","in"],"be some":["degree","for","better","wasted","dogmatic"],"be something":["else","list-y","I","like:","to"],"be sometimes":["quite"],"be space":["delimited,"],"be sped":["up"],"be split":["off"],"be splitting":["at"],"be stacked":["up"],"be still":["a"],"be substituted":["for"],"be supposed":["grow"],"be surprised":["if"],"be swapped":["for"],"be switched.":["Check"],"be tempted":["to"],"be that":["way.\"","way.\"","way.\"","a","way.\"","protocol","way.\")","simple"],"be the":["default","same","\"default\"","same","same","most","responsible","wrong","use","one","one","way","idiomatic","first","more","style","period","better","most","same","best"],"be then":["renamed"],"be thought":["of"],"be thread":["safe"],"be tightened":["up."],"be to":["define","match","support","just","re-use","automate","use","just","read","rename","use","define","introduce","give","use","pull","use","include","use","solve"],"be too":["bad","\"noisy\")","DRY"],"be toplevel":["functions?"],"be transactional":["as"],"be transformed":["in"],"be treated":["as","as","as","as","as","as","as","as","as","as","as","as","as","as"],"be treated.":["Words"],"be true":["in","up","about","about"],"be true.":["It's"],"be truthy":["in"],"be trying":["to"],"be unexpected.":["If"],"be unnecessarily":["be"],"be upper":["bounded"],"be used":["independently","instead","as","in","in","on","here.","on","without","elsewhere.","by","once.","for","as","here.","instead","to","-","for","as","that","to","with","in","as","as","as","as","as","to"],"be used.":["You"],"be useful":["to","...","for"],"be useless":["under"],"be using":["`:only`","`re-seq`","one","`frequencies`.","partial"],"be very":["minimal","hesitant","strict","well"],"be visible":["globally."],"be what":["you"],"be whether":["you"],"be willing":["to","to"],"be with":["`recur`."],"be working":["on","good"],"be worth":["it.","it","it","using","making","the","making","the","the","a","the","checking","looking"],"be worthwhile":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"],"be written":["more","as","as","like","as","as","with","like","as","as","as","as","as","like","`\"Whatever.\"`"],"be yelled.":["Conceivably"],"be yelling,":["IMO)"],"be! you":["are"],"be), you":["just"],"be, mainly":["because"],"be. Maybe":["it's"],"be? What":["does"],"beacuse is":["redundant."],"bear in":["mind"],"bearings from":["the"],"became more":["complicated"],"became pretty":["loaded"],"became superfluous":["during"],"becase as":["it"],"because (zero?":["nil)"],"because Clojure":["has","still"],"because I":["think","have","just","haven't","felt:","felt","kept","had","didn't","felt","missed","just","don't","went","find","thought","like","sacrificed","like","didn't"],"because I'm":["quite","still"],"because I've":["just"],"because Uracil":["isn't"],"because `(merge)`":["is"],"because `filter`":["already"],"because `use`/`:use`":["is"],"because a)":["it"],"because clearly":["that's"],"because comments":["+","+"],"because falling":["off"],"because for":["example"],"because i":["thougt"],"because it":["makes","works","would","returns","makes","demonstrates","seemed","may","violates","normally","concise.","seemed","avoids"],"because it's":["obsolet","relatively","in"],"because map":["itself"],"because no":["lowercase"],"because of":["the","the","the","that.","the","the","the","the","the"],"because often":["I"],"because strings":["can"],"because that":["function"],"because the":["Clojure","first","test","solution"],"because there":["can"],"because there's":["more","no"],"because these":["don't"],"because they":["logically"],"because they'd":["help"],"because thymidine":["and"],"because vector":["and","and"],"because when":["read"],"because you":["already","could"],"because you've":["already"],"because: where":["do"],"become \"living\"":["code."],"become a":["map","function's"],"become duplicate":["functions:"],"become implementation":["detail."],"become just":["method","method"],"become much":["more"],"become very":["important."],"becomes a":["problem,"],"becomes an":["effectively"],"becomes clear":["fast","that"],"becomes clear,":["please"],"becomes decidedly":["non-trivial"],"becomes easier,":["but"],"becomes higher":["order"],"becomes much":["more"],"becomes null":["again."],"becomes something":["like:"],"becomes too":["long"],"becomes very":["clear"],"becoming disconnected":["or"],"been a":["bit","bit"],"been able":["to"],"been an":["eye-opening"],"been bikeshedded":["enough,"],"been blinded":["by"],"been calculated,":["but"],"been called":["and"],"been changed":["in"],"been dabbling":["a"],"been doing":["Java","ruby/javascript"],"been doing.":["It"],"been following":["along"],"been found":["true."],"been hectic":["at"],"been helpful.":["I"],"been introduced":["into"],"been made":["with"],"been more":["concise","clear.","readable."],"been nominated":["for"],"been noted":["before"],"been obvious.":["Thanks"],"been passed":["to"],"been picked":["on)."],"been posted":["to"],"been somewhat":["surprising"],"been spending":["a"],"been taught":["that"],"been the":["bottleneck","first"],"been through":["this"],"been trying":["to","to"],"been wondering":["how"],"been written":["```"],"beer on":["the","the"],"beer permutations":["into"],"beer song,":["how"],"beer\" ...)`.":["Other"],"beer-line-2, but":["I'm"],"beer-song the":["same"],"beer.\")`. Of":["course,"],"before I":["start","get","submitted","realized","stumbled","learned"],"before `(:require...`":[":)"],"before `string/replace`,":["I'll"],"before agonizing":["over"],"before and":["dealing"],"before but":["in"],"before fetching":["rna-transcription"],"before form":["with"],"before in":["the"],"before it":["was","would"],"before it's":["really"],"before moving":["on?"],"before putting":["them"],"before questions.":["Try"],"before re-seq,":["which"],"before so":["I'd"],"before splitting":["it?","it;"],"before submitting.":["Rookie"],"before the":["let","defn","args","argument","argument","reduction?"],"before their":["use,"],"before this":["point"],"before you":["separate","do"],"before, I":["find"],"before, but":["I"],"before, it's":["interesting"],"before, so":["I","I"],"before. I":["find"],"before. I'll":["try"],"before. Is":["there"],"before. It's":["nice"],"before. Must":["have"],"before... You":["might"],"before: I":["am"],"began researching":["and"],"begin in":["the"],"begin on":["its"],"begin with":["backslash,"],"begin with.":["What"],"begin) (take":["end)"],"beginner and":["I"],"beginner like":["myself."],"beginner, so":["any"],"beginning to":["learn"],"beginning, `rev-subs`":["wouldn't"],"begins with":["a"],"behave differently":["depending"],"behaves this":["way"],"behavior defined":["to"],"behavior here":["isn't"],"behavior implied":["in"],"behavior is":["\"Whatever.\"","also","not"],"behavior isn't":["defined"],"behavior really":["be?"],"behavior would":["be"],"behaviour defined":["in"],"behaviour should":["be"],"behaviour, I":["move"],"behind `shout?`":["is"],"behind a":["`cleanup`","`words`","function,"],"behind bindings":["with"],"behind having":["arguments"],"behind my":["back!"],"behind symbols":["with"],"behind that":["which"],"being OK,":["and"],"being a":["PITA,","couple","native","part","value","map","value?","value"],"being able":["to","to","to"],"being accepted":["would"],"being applicable":["to"],"being calculated":["again"],"being candidate":["word."],"being difficult":["in"],"being discouraged":["in"],"being easily":["composable…"],"being evaluated":["on"],"being expanded":["and"],"being faster":["I"],"being found":["for."],"being general":["purpose,"],"being hard":["to"],"being implemented":["in"],"being imported":["from"],"being less":["coupled","expressive"],"being made":["private?"],"being modular":["in"],"being more":["readable;","efficient"],"being nearly":["as"],"being necessary":["-"],"being noisy,":["that"],"being part":["of"],"being passed":["in"],"being permissive":["in"],"being public":["with"],"being reviewed":["faster"],"being said":["I'll","there","ends"],"being said,":["I","I'm","I"],"being serial.":["In"],"being shouted,":["but"],"being silence?":["This"],"being slower":["than"],"being slowly":["deprecated"],"being so":["short."],"being that":["\"T\""],"being the":["\\?,"],"being up":["for"],"being used":["in","in"],"being weird":["about"],"being yelled":["at"],"being. I":["think"],"believe I":["missed"],"believe `join`":["and"],"believe is":["a"],"believe it":["reads","is"],"believe it's":["more"],"believe my":["logic"],"believe that":["the","if","that"],"believe the":["empty","standard","Clojure","(:require"],"believe there's":["much"],"believe this":["is"],"believe using":["`:require`"],"believe we":["don't"],"believe). Otherwise":["they"],"belive that":["clojure.contrib"],"belong in":["the"],"belong to":["the","the"],"belongs in":["`words`"],"below it.":["See"],"below the":["main"],"below, but":["failed:"],"benchmark I":["did"],"benchmark using":["the"],"bend Regular":["expressions"],"beneficial for":["`is-question`"],"beneficial, when":["it"],"benefit by":["moving"],"benefit from":["having","`drop-while`.","giving"],"benefit in":["the"],"benefit is":["to","that"],"benefit like":["performance?"],"benefit of":["scrubbing","explicitly","returning","meaning","consistency,","reuse"],"benefit than":["the"],"benefits including":["being"],"benefits of":["reducing"],"benefits were":["small"],"benefits. It":["is"],"besides protocols,":["records"],"besides strings":["as"],"best I":["could"],"best answer":["to"],"best choice":["between"],"best choice,":["as"],"best express":["*ALL"],"best idea":["--"],"best link":["I"],"best names?":["`question?`"],"best not":["to"],"best parameter":["name."],"best practice,":["so"],"best solution":["I"],"best sorting":["algorithms"],"best to":["simplify"],"best tools":["for"],"best way":["to","to","to","I"],"best with":["Regex,"],"bet you":["can","can","can"],"beta reduced":["to"],"better \"default\"":["instead."],"better &":["more"],"better (don't":["put"],"better -":["give"],"better abstraction":["is"],"better after":["the"],"better algorithm":["(O(n)","(O(n)","(O(n)","for"],"better alternative,":["but"],"better and":["allows","why."],"better as":["dna-&gt;rna,"],"better be":["formatted"],"better but":["you've"],"better chance":["of"],"better choice":["for","here.","although","too,","here."],"better clarify":["the"],"better conceptual":["match."],"better control":["structure"],"better define":["what"],"better explain":["what"],"better express":["why.","what"],"better fit":["the"],"better for":["readability","readability","the"],"better form":["to"],"better function":["in"],"better given":["the"],"better here":["in"],"better here.":["But"],"better here:":["although"],"better if":["you","function","you","we"],"better implementation":["of"],"better in":["this","that","my","a"],"better indeed!":["Thanks"],"better is":["to"],"better method":["it"],"better name":["would","than","than","that","will","for","for"],"better name,":["but","since","one"],"better name.":["I"],"better name?":["At"],"better naming":["of"],"better naming,":["but"],"better normalization":["than"],"better now,":["since"],"better off":["not","scanning"],"better options":["would"],"better or":["worse"],"better overall":["as"],"better pace.":["Is"],"better readability":["but"],"better readability.":["That"],"better reflect":["what"],"better regex":["to"],"better reveal":["their"],"better room":["for"],"better signal":["to"],"better since":["\u003ccode\u003eendsWith\u003c/code\u003e"],"better so":["far."],"better solution":["to","when"],"better solution.":["I","The","I"],"better spelled":["out"],"better tell":["the"],"better term":["for"],"better than":["what","`(.endsWith","what","`drop","```(=","/[a-z]/.","making","(=","Haskell,","\u003ccode\u003elast\u003c/code\u003e.","being"],"better this":["way"],"better to":["make","check","`lower-case`","just","use","me.","either","format","use","align","use","leave","inflect","use","use","use","use","explicitly","declare","reference","separate","break","clean","use"],"better understanding":["of","of"],"better use":["of"],"better way":["to","to","of","in","in","to","to","of","to","to","to"],"better way.":["Been"],"better when":["you","moved","using","they"],"better with":["some"],"better written":["as","as","as"],"better\". Time":["permitting..."],"better) way":["to"],"better, but":["the"],"better, just":["don't"],"better, more":["readable,","naturally"],"better, or":["more","more"],"better, thanks":["Ball"],"better. Did":["you"],"better. Ignore":["Version3"],"better. In":["this"],"better. Is":["this"],"better. Lowercasing":["the"],"better. Maybe":["you"],"better. With":["simply"],"better. You":["could"],"better. `(frequencies":["word)`"],"better? I":["am"],"better? Or":["is"],"between \"one\"":["or"],"between 700":["and"],"between GregorianCalendar":["and"],"between JVM":["instances?"],"between `$`":["and"],"between `Calendar`":["and"],"between `countable-nucleotides`":["and"],"between `def`":["and","and","and"],"between `word-freq`":["and"],"between a":["hash"],"between and":["append"],"between both":["branches"],"between calling":["`frequencies`"],"between character":["literals"],"between concise":["and"],"between defs":["would"],"between each":["function."],"between falling":["back"],"between filter":["and"],"between function":["name"],"between functions":["would"],"between pipelining":["the"],"between questions":["and"],"between sorting":["&"],"between string":["functions"],"between symbols":["in"],"between the":["two","two.","declarations","names","`valid-nucleotides`","strings.","set","RNA","function","planets"],"between them.":["Perhaps"],"between these":["two:"],"between this":["version"],"between those":["calls.","calls."],"between top-level":["forms."],"between using":["a"],"between validation":["and"],"between verses":["where"],"between version":["1"],"between word":["and"],"between words":["out"],"between your":["`teenths`,"],"beverage in":["one"],"beverage type,":["but"],"bewildered by":["the"],"beyond code":["\"templating\""],"beyond the":["scope","first","context"],"big `and`":["one)."],"big advantage":["with"],"big deal":["there.","but"],"big deal,":["but"],"big difference":["in"],"big enough.":["Basically,"],"big function":["and"],"big issue?":["(Maybe"],"big of":["a"],"big shout":["out"],"big wins":["you"],"bigger and":["you"],"bigger program,":["but"],"bigger system,":["how"],"bigger tasks,":["one"],"biggest issues":["with"],"biggest problem":["was"],"bigint. You'd":["need"],"bikeshed moment,":["but"],"bikeshedded enough,":["I"],"bikeshedding :)":["Move"],"bikesheds with":["me"],"bill perfectly,":["and"],"bin-digit inside":["the"],"binary is":["not"],"bind `blank?`":["to"],"bind a":["value,"],"bind an":["unbound"],"bind inflection":["of"],"bind just":["value"],"bind the":["paramater","response"],"bind to":["value,"],"binding -":["no"],"binding `valid-nucleotide?`":["to"],"binding adds":["much"],"binding as":["close"],"binding expression.":["The"],"binding expression;":["the"],"binding for":["(sort","`last`,","`(get"],"binding form).":["It's"],"binding functions":["and"],"binding in":["the"],"binding inflections":["to"],"binding name).":["Good"],"binding name.":["You"],"binding names":["and"],"binding of":["the","`response`"],"binding so":["that"],"binding them":["within","using"],"binding which":["exists","you"],"binding with":["already"],"binding would":["really"],"binding. A":["bit"],"bindings and":["do"],"bindings are":["evaluated"],"bindings could":["be"],"bindings for":["parts","forms","target","all"],"bindings from":["current"],"bindings in":["the","enclosing"],"bindings interleaved":["with"],"bindings list":["(square","on"],"bindings non-public":["too"],"bindings of":["nucleotides"],"bindings or":["even"],"bindings that":["are"],"bindings to":["good"],"bindings with":["names","even","meaningful","names","meaningful","meaningful","meaningful","meaningful"],"bindings' values":["are"],"bindings) with":["names"],"bindings, they're":["very"],"bindings, use":["`let`,"],"biology background,":["you","even"],"biology, and":["given"],"bit (!)":["macro-frenzy"],"bit (and":["only"],"bit --":["it's"],"bit I":["found"],"bit about":["clojure:","use","the","robot"],"bit as":["`(not="],"bit asymetric":["with"],"bit awkward":["looking"],"bit awkward.":["This","I"],"bit baroque,":["but"],"bit because":["it"],"bit better":["readability","so","than"],"bit busy":["lately"],"bit by":["removing","allowing"],"bit cleaner":["if"],"bit complex":["to"],"bit confusing":["but","-"],"bit crazy.":["I'm"],"bit dated":["but"],"bit dated,":["it"],"bit desperate":["to"],"bit differently.":["I"],"bit easier":["to","to"],"bit excessive":["to"],"bit faster":[":)","and"],"bit from":["looking"],"bit hard":["to","to","to"],"bit harder":["to"],"bit in":["the"],"bit inconsistent":["to"],"bit is":["the"],"bit less":["concise","verbose"],"bit like":["Python"],"bit limiting.":["If"],"bit lost":["here,"],"bit me":["now"],"bit misleading.":["Questions","It","Even"],"bit more":["code","readable.","idiomatic","direct","in","idiomatic.","verbose,","the","specific,","specific?","meaningful","forgiving","data-driven","whitespace","DRY.","DRY.","explicit","readable","with","effort","comfortable.","clear.","easy","readable","verbose","idiomatic.","clear.","complex","natural","efficient.","idiomatic.","intentional","generic","complex","clojure","literate.","efficient","idiomatic","compact."],"bit more,":["but"],"bit mysterious":["to"],"bit new":["to"],"bit nicer":["than"],"bit noisy":["function"],"bit non-standard":["to"],"bit non-standard,":["but"],"bit obscured.":["Once"],"bit odd":["to"],"bit of":["a","an","coupling","duplication","duplication","getting","premature","an","inconsistency","experimenting","a","cleverness","noise","code","simplification","math.","math.","an","clojure"],"bit off":["-","-","-"],"bit off.":["Anyway,","Bindings","Please"],"bit on":["your","my"],"bit out":["of"],"bit over":["kill","2"],"bit overkill.":["Though"],"bit prettier":["by"],"bit procedural.":["What"],"bit shorter":["pattern","for","and"],"bit simple.":["Am"],"bit slow":["going."],"bit sticks":["out"],"bit strangely":["worded,"],"bit surprised":["to"],"bit terse.":["Something"],"bit that":["you're"],"bit though,":["especially"],"bit to":["figure","see","find","figure","it:","simplify"],"bit too":["spread","much","clever","clever","literal"],"bit tricky.":[":)"],"bit ugly,":["perhaps"],"bit ugly.":["Please"],"bit unclear":["what"],"bit understanding":["the"],"bit unsure":["about"],"bit verb-y":["to"],"bit weird":["for"],"bit when":["I"],"bit which":["would"],"bit with":["a","Clojure"],"bit wonky,":["in"],"bit, but":["since"],"bit, in":["that"],"bit, most":["people"],"bit, though":["as"],"bit. For":["conditional"],"bit. I":["was","really"],"bit. Since":["you"],"bit: Change":["your"],"bit? Without":["a"],"bits and":["pieces"],"bits of":["knowledge"],"bits)` can":["also"],"bits)` which":["might"],"blame my":["frequent"],"blank check":["to"],"blank line":["between","between","at"],"blank lines":["between"],"blank lines.":["Of"],"blank until":["I"],"blank will":["return"],"blank? There's":["a"],"blank? and":["upper-case"],"blank? function":["by"],"blank? in":["screaming"],"blank? instead":["of"],"blank? is":["different","wrapped"],"blank? method.":["I"],"blank?). But":["I"],"blank?)]` is":["functionally"],"blank?)` taking":["advantage"],"blank?, you":["could"],"blasé enough":["that"],"blcooley's post":["is"],"blcooley. To":["add"],"bleed over":["in"],"blend `paired-elements`":["and"],"blind leading":["the"],"blinded by":["them","my"],"block doesn't":["matter."],"block in":["the"],"block inside":["the"],"block makes":["it"],"block of":["your"],"block there's":["a"],"block) so":["you"],"block, I":["think."],"block, you":["can"],"blocks for":["storing"],"blog post](http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html)":["for"],"blows right":["into"],"bludgeoning this":["problem"],"blunder. dna-seq":["is"],"blush, it":["looks"],"board representation":["at"],"board with":["the","the"],"board-string and":["can-attack"],"board-string to":["use"],"bob \"A":["sullen"],"bob '~check":["[_#]"],"bob (:require":["[clojure.string","...))`"],"bob (and":["his"],"bob [:require":["[clojure.string"],"bob exercise":["so","but"],"bob for":["`nil`"],"bob knows":["what"],"bob namespace":["you","since"],"bob solution":["before"],"bob to":["make","say"],"bob's being":["yelled"],"bob's responses":["and"],"bob, then":["can"],"bob.clj again":["with"],"bob.clj file,":["it"],"bob=\u003e (includes-letters?":["\"abc\")"],"bob_test.clj? Runnig":["it"],"bodies --":["that"],"bodies and":["`-≥≥`"],"bodies with":["blank"],"bodies; generally":["speaking,"],"body at":["the"],"body in":["`defn`"],"body inline.":["Looks"],"body of":["```dna/to-rna```","this","`fn`","the","your","the","the","the","`let`"],"body on":["the","their"],"body or":["make"],"body should":["be"],"body style.":["I've"],"body to":["see"],"body which":["-"],"body, if":["you"],"bonus credit":["using"],"book \"The":["Joy"],"book I've":["been"],"book on":["using"],"books I":["picked"],"boolean end":["in"],"boolean given":["two"],"boolean methods.":["Per"],"boolean value":["(a"],"boolean values":["like","`blank?`,"],"boolean which":["can't"],"boolean with":["a"],"boolean x":["nil)`"],"boolean, so":["probably"],"boolean. And":["you"],"booleans but":["`yelling?`"],"booleans so":["that"],"booleans to":["symbols,","numbers,","be"],"booleans with":["a"],"booleans, then":["you"],"boost to":["use"],"bootstrap a":["counting"],"border cases":["of","in"],"borderline for":["me"],"boredom threshold":["with"],"botched the":["formatting."],"both @lupe":["and"],"both DRY":["and"],"both Refs":["and"],"both `(some":["..."],"both `:as`":["and"],"both `anagram?`":["and"],"both a":["two-line"],"both about":["naming."],"both adding":["such"],"both against":["normal"],"both applied":["a"],"both branches":["of"],"both cases":["and"],"both consistency":["and"],"both create":["Vars"],"both defined":["in"],"both elegance":["and"],"both functions":["do"],"both game":["changers."],"both getting":["drunk"],"both have":["a"],"both in":["that","terms","terms","the"],"both lisps":["and","and"],"both nitpicks":["from"],"both of":["those","them.","those"],"both positions":["of"],"both sets":["sounds"],"both shorter":["and"],"both special":["cases"],"both styles":["are"],"both suggestions":["would"],"both the":["lower-cased","robot"],"both this":["low."],"both those":["methods."],"both turned":["out"],"both yelled":["and"],"both, but":["in"],"both, made":["the"],"both. If":["you"],"bother -":["wrongly"],"bother to":["check"],"bothers me":["too.","is","a"],"bothers me.":["Any"],"bottle phrase":["twice."],"bottle_number 0)`":["is"],"bottleneck has":["much"],"bottleneck here.":["Back"],"bottles (`count-string`":["usage"],"bottles --":["very"],"bottles and":["then"],"bottles of":["beer"],"bottles\" clause":["in"],"bottles...\" after":["the"],"bottles_number 1)`":["is"],"bottom. If":["you"],"bound characters.":["It"],"bound constant\"?":["Something"],"bound expr":["as"],"bound the":["execution"],"bound to":["the","the","functions."],"boundaries (possibly":["enforced"],"boundaries and":["would"],"boundary, not":["in"],"bounded by":["a","the","a"],"bounded problem,":["so","so"],"bounds, so":["you"],"box, however":["it"],"boys respond":["to"],"brace should":["be"],"braces are":["put"],"bracket and":["end"],"bracket at":["line"],"bracket for":["response-for"],"bracket should":["be","be"],"bracket shouldn't":["be"],"bracket with":["same"],"bracket, my":["understanding"],"bracket. Body":["of"],"brackets around":["`[\\w]`"],"brackets even":["if"],"brackets here":[":/"],"brackets in":["nucleotide"],"brackets onto":["the"],"brackets put":["in"],"brackets) too":["early,"],"brackets. There's":["an"],"brackets/parentheses in":["their"],"brackets? Why":["do"],"brain was":["not"],"brain), but":["the"],"brain-teaser for":["a"],"brain. There":["are"],"brainer, your":["eyes"],"branch beyond":["the"],"branch in":["`cond`?"],"branch of":["a"],"branch there's":["`when`"],"branch, it's":["better"],"branches from":["the"],"branches more":["similar?"],"branches of":["the"],"branches, which":["might"],"branching if/else":["layout."],"branching in":["your"],"brand new":["to","to"],"break apart":["the"],"break before":["`(:require...`"],"break it":["out","with","down"],"break on":["those"],"break out":["the"],"break the":["functions","problem"],"break them":["up."],"break things":["down?"],"break this":["out"],"break up":["the"],"break with":["consistency."],"breaking `(str/replace":["strip-chars"],"breaking apart":["the"],"breaking each":["condition"],"breaking even":["led"],"breaking it":["down"],"breaking stuff":["out"],"breaking the":["predicates","```cond```"],"breaking these":["out"],"breaking up":["each","the"],"breaks more":["confusing"],"breaks this":["separation"],"briefly experimented":["with"],"briefly played":["with"],"bring it":["in:"],"bring the":["one"],"bring this":["in"],"bring those":["trailing"],"bringing this":["up"],"brings a":["welcome"],"brining my":["attention"],"broader response":["category"],"broader than":["in"],"broke apart":["the"],"broke my":["brain."],"broke out":["a"],"broke the":["normalize"],"broken out":["in"],"browsing through":["it."],"brute-force and":["not"],"brute-force approach":["of"],"btw, in":["`question?`"],"bug has":["been"],"bug here.":["the"],"bug in":["`(not=","previous","that"],"bug regarding":["the"],"bug was":["fixed"],"bug. I":["have","prefer"],"bug. I've":["not"],"bug. Looks":["great"],"bugs me":["a"],"build a":["filtering"],"build it":["up"],"build the":["literal","histogram,","word","individual"],"build these":["sorts"],"build this":["out"],"build those":["strings"],"build up":["the","`transform-row`"],"build upon":["it."],"build-finder inside":["of"],"building a":["frequency"],"building of":["the"],"building strings,":["you"],"building the":["verse.","hash","sentences","verse.","name,","full","full"],"building up":["from"],"built function,":["so"],"built in":["functions.","functions","function","function","function"],"built in,":["but"],"built on":["top"],"built-in `frequencies`":["function"],"built-in `last`":["function"],"built-in `str`":["function."],"built-in count":["function"],"built-in function":["`frequencies`,"],"built-in functions":["for","to","that","in"],"built-in last":["function?"],"built-in way":["to"],"built-ins, so":["less"],"builtin `(bigint":["2)`"],"builtin that":["does"],"bulit-in comparison":["of"],"bulk of":["the","your"],"bump `question?`":["and"],"bunch of":["stuff","calls","different","helper","code"],"burden of":["maintenance"],"buried in":["function"],"buried it":["further"],"business requirements":[":-)"],"business rules":["of"],"bust out":["of"],"busy lately":["but"],"but \"%\"":["is"],"but English":["is"],"but I":["would","don't","think","guess","like","couldn't","rather","personally","don't","can't","think","really","wasn't","agree","assume","don't","thought","don't","am","had","would","feel","do","would","won't","found","think","prefer","didn't","don't","am","like","find","can","figured","figured","prefer","was","could","would","don't","suppose","thought","will","have","think","don't","can't","wonder","actually","can't","expect","chose","forgot","decided","don't","preferred","was","have","believe","don't","think","don't","will","made","would","couldn't","limit","believe","didn'","won't","thought","can","found","think","couldn't","couldn't","would","can","can't","think","didn't","thought","think","agree","also","think","couldn't","really","tend","should","think","settled","have","like","don't","would","realized","can","can","don't","will","really","think","feel","suppose","didn't","think","think","think","keep","haven't","know","first","think"],"but I'd":["wager","rather","hate","prefer","use","rather"],"but I'll":["definitely","see","have","dig","attempt","use"],"but I'm":["not","sure","curious","not","learning","going","still","confused","not","interested","confused","not","not","not","coming","sure","having","more","thankful","leaving","wondering"],"but I've":["found","made","got"],"but Java":["does."],"but `(=":["true"],"but `(case":["n"],"but `AssertionError`,":["and"],"but `\\?`.":["Then"],"but `clojure.string`":["has"],"but `response-for`":["became"],"but `robot-name`":["might"],"but `vec`":["shouldn't"],"but `yelling?`":["and"],"but a":["couple","couple","list","call"],"but all":["the"],"but also":["for","the"],"but apparently":["some"],"but are":["`empty?`","then","all"],"but as":["the"],"but at":["least","least","least"],"but became":["more"],"but binding":["`valid-nucleotide?`"],"but can":["also"],"but can't":["remember"],"but check":["for","out"],"but clojure.string/blank?":["might"],"but code":["formatting","formatting"],"but comparing":["against"],"but could":["use","you","be","make"],"but couldn't":["figure","-","quite","find","find"],"but decided":["against","not","the"],"but defining":["`question?`"],"but didn't":["really"],"but different":["mixtures"],"but do":["you","plan"],"but doesn't":["help","it","match"],"but don't":["use"],"but each":["predicate"],"but expanded":["the"],"but for":["some","something","the","such","some"],"but found":["that"],"but fulfilling":["the"],"but future":["readers"],"but general":["sequence/collection"],"but generally":["`:else`","it's"],"but getting":["a"],"but given":["the","the"],"but good":["explanation"],"but got":["a","a"],"but had":["to","troubles"],"but has":["a"],"but have":["less"],"but here":["a"],"but here's":["alternative"],"but hey,":["maybe"],"but how":["is","about:"],"but i":["haven't","couldn't"],"but i'm":["not","not"],"but i've":["been"],"but if":["you","it","you","it","you","you","one"],"but in":["an","my","this","general,","Clojure","this","lisp","such","my","this","Haskell","the","this","my","particular","natural","all","this","the"],"but indeed,":["when"],"but instead":["of"],"but is":["the","there","it","`sanatize`"],"but it":["won't","still","would","can","usually","sounds","is","looks","didn't","didn't","all","looks","would","has","would","would","would","looked","reads","would","looked","might","made","just","works.","still","looks","never","did","looked","certainly","was","ended","gets","is","seems","actually","works.","could","is","may","would","works","seemed","seems","is"],"but it'll":["get"],"but it's":["probably","also","still","usually","(to","really","faster","pretty","less","very","also","not","kind","a","hard","generally","very","a","not","overkill","way","a","a)","not","the","fine","usually","also","also","more"],"but its":["similar"],"but just":["some"],"but keeps":["the"],"but knew":["it"],"but let":["me"],"but line":["12"],"but looking":["at"],"but looks":["like","good","ugly."],"but macros":["are"],"but making":["the"],"but maybe":["having","it","there","harder","the","that's","that's","that's"],"but more":["duplicative","difficult"],"but much":["more"],"but my":["regex-foo","REPL","re-fu"],"but neither":["is"],"but never":["underestimate","got"],"but not":["sure","`first-part`.","all.","its","the","the","*logic*.","the","pretty.","sure","fun","sure","a"],"but now":["I","I'm","I","returns"],"but obviously":["not"],"but on":["balance"],"but one":["imagines","of","learning"],"but only":["*what*","returns"],"but other":["than","than"],"but otherwise":["this"],"but parsing":["the"],"but people":["suggested"],"but personally":["I"],"but picking":["out"],"but please,":["don't"],"but possibly":["clearer"],"but probably":["mostly"],"but ran":["into"],"but readability":["would"],"but realized":["that"],"but really":["appreciate"],"but regex":["is"],"but remember":["that"],"but right":["now"],"but should":["probably"],"but since":["we’re","I","the","I"],"but so":["far"],"but some":["small"],"but something":["in","to"],"but specifies":["a"],"but standard":["library),"],"but still":["not","relevant"],"but store":["them"],"but surely":["this"],"but tests":["use"],"but that":["language","is","may","may","is","makes","did","may","may","would","seemed","is","seems"],"but that's":["nothing","mainly","probably","entirely","fine","pretty","it,","probably","just","not","minor.","possibly","what","just","an","a"],"but the":["regex","checks","others","layer","symmetry","naming","idea","process","exercise","shouting?","default","latter","cost","regular","first","`not-any?`","tests","answer","name","result","same","thing","string","thing","test"],"but then":["we’d","my","saw","I","you","the","get","is"],"but there":["could","is","is","are","is","should","is"],"but there's":["nothing"],"but there’s":["a"],"but these":["concepts"],"but they":["are","are","might"],"but they're":["so"],"but think":["there's"],"but this":["is","looks","code","looks","shows","exercise","won't"],"but those":["are"],"but to":["me,","be"],"but ultimately":["feel"],"but unfortunately":["needed"],"but used":["`letfn`"],"but using":["a"],"but variable":["names"],"but want":["to"],"but wanted":["to"],"but wasn't":["sure","quite"],"but what":["I","do","if","the"],"but whether":["you"],"but why":["are","have","have","didn't"],"but will":["fall"],"but with":["this","many","no","the","my"],"but worth":["considering"],"but would":["it","it","`rest`","be","separating"],"but wouldn't":["this"],"but yeah":["that"],"but yes":["I","I"],"but you":["can","could","have","could","should","actually","then","could","could","could","might","don't","calculate","can","could","define"],"but you're":["evaluating","repeating"],"but you've":["addressed","ordered"],"but your":["solution","first","alignment","way","assert"],"but, as":["you"],"but, for":["`third`"],"but, you":["don't"],"button here":[":("],"buy some":["more,"],"buy you":["anything?"],"by 30":["days."],"by @kenyatta's":["solution"],"by Bob":["answers"],"by Brian":["Marick"],"by Clojure’s":["indentation"],"by [clojure.string](http://clojure.github.io/clojure/clojure.string-api.html)":["to"],"by [condition":["map][1]"],"by `(=":["\"\"","question"],"by `Character/isUpperCase`":["so"],"by ```re-matches```":["directly"],"by `or`.":["To"],"by `vector`":["which"],"by a":["space","small","single","constant","constant"],"by accident,":["but"],"by adding":["a"],"by all":["functions"],"by allowing":["you"],"by another":["\"mod\""],"by attaching":["metadata"],"by attempting":["`doseq`"],"by avoiding":["processing"],"by being":["a"],"by blank":["lines."],"by calling":["`square`"],"by casting":["of"],"by changing":["the"],"by chars,":["but"],"by checking":["for","the","alphagrams,","that"],"by choosing":["a"],"by combined":["with"],"by community:":["https://github.com/bbatsov/clojure-style-guide","https://github.com/bbatsov/clojure-style-guide"],"by composing":["vec"],"by convention":["functions"],"by converting":["the"],"by creating":["bindings","bindings","a"],"by defining":["a"],"by doing":["```:refer```"],"by element":["won't"],"by escaping)":["for"],"by explicitely":["defining"],"by exploring":["the"],"by exporting":["of"],"by extracting":["the"],"by far":["and"],"by frequencies\"":["tip,"],"by googling":["for"],"by hand.":["Feedback"],"by having":["it"],"by importing":["`clojure.string/lower-case`."],"by including":["it"],"by interleaving":["the"],"by introducing":["another"],"by itself":["but"],"by just":["returning","using"],"by level":["of"],"by looking":["at","at"],"by making":["them","the","use"],"by manually":["manipulating"],"by many":["people"],"by mapping":["the"],"by me.":["In","Thanks!"],"by mistake.":["I'm"],"by most.":["What"],"by moving":["functionality","checks"],"by my":["knowledge","anagram"],"by name":["but"],"by named":["functions"],"by necessity,":["must"],"by not":["having"],"by now?":[";)"],"by one:":["`inc`"],"by porting":["my"],"by pre-applying":["one"],"by putting":["`^:private`","a"],"by reading":["in"],"by removing":["`#`","`(=","the","unused"],"by reordering":["the"],"by replacing":["all"],"by returning":["the","the","the"],"by separating":["the"],"by sequence":["related"],"by short-circuitring":["the"],"by shuffling":["letters,"],"by simplifying":["the","its"],"by simply":["swapping"],"by something":["besides","like"],"by spaces:":["nicely"],"by specifying":["a"],"by splitting":["the","the","on"],"by swapping":["`sort`","`sort`","`sort`","`sort`","`sort`","`sort`"],"by taking":["into"],"by the":["tests.","tests.","whole","tests,","keywords","trial-and-error","usage","community:","name).","tests:","tests","later","set","`put-name`.","time","given","user,","double","`response-for`","given","partial","score-word","cost","tests"],"by them":["to"],"by thinking":["about"],"by this":["peculiar"],"by tools":["like"],"by trying":["it"],"by two":["spaces,","spaces."],"by upper-case":["characters."],"by using":["`defn-`","`:refer-clojure`","`(map","`re-seq`","`(:refer-clojure","`:refer`.","translation","inline","`map`","a","Clojure's","the","the","the","less","`cond`","a","a","`replace`","a","a","`-\u003e`","`letfn`","destructuring.","it's","the"],"by with":["just","calculating"],"by without":["any"],"by writing":["it","transpose"],"by zoldar,":["`clojure.string.blank?`"],"b}) will":["throw"],"c) \\U":["c))`"],"c))` can":["be"],"c))`. There":["is"],"c])` though":["without"],"cache eviction":["strategy."],"cache the":["calls","normalized"],"cache, but":["that"],"cache. Again,":["not"],"caching all":["calls"],"caching/memoize -":["the"],"calculate `(frequencies":["text)`"],"calculate `(lower-case":["s)`"],"calculate the":["first","prime"],"calculated again":["for","for"],"calculated every":["time."],"calculated, but":["wasn't"],"calculating it":["only"],"calculating the":["frequency","alphagram"],"calendar creation":["multiple"],"calendar interface":["is"],"call (although":["compiler"],"call (and,":["on"],"call (grade)":["instead"],"call I":["appreciate"],"call `(join":["...)`"],"call ```last```":["on"],"call `get`":["twice."],"call `robot-name`":["should"],"call `seq`":["here?"],"call `str`":["when"],"call `to-rna`,":["which"],"call and":["have","go"],"call belongs":["in"],"call dna-rna":["though…"],"call easier":["to"],"call in":["the","favor"],"call is":["definitely"],"call it":["without","wouldn't","with","from","again"],"call its":["functions"],"call lower-case":["more"],"call of":["`str`","the","`bottle`"],"call on":["the","line","the","sort.","the"],"call per":["response."],"call silence":["\"nonsense\"."],"call something":["like"],"call stack":[":)","with"],"call str/blank?":["directly"],"call than":["I"],"call that":["the"],"call the":["function","function","functions","`clojure.string`",".get","`build-finder`"],"call them":["both"],"call them.":["The"],"call to":["`seq`","```str```.","```str```?","`seq`","`str`","`vec`","`vec`","[`(map","some","throw","`apply`","`swap!`.","`update-in`.","`merge`.","`convert_number`.","only_digit."],"call using":["the"],"call will":["be","return"],"call with":["()"],"call, it":["seems"],"call, thanks":["Brian."],"call. I":["pushed"],"call. I've":["submitted","submitted"],"call. That":["would"],"call. The":["indentation"],"call. To":["execute"],"call; I":["forgot"],"callable accepts":["a"],"called \"frequencies\"":["that"],"called \"rainbow":["parentheses\")"],"called alphagram":[","],"called and":["I","what","then"],"called anything":["else!"],"called clojure":["didn't"],"called dynamic":["scoping)"],"called each":["function,"],"called exactly":["the"],"called itself":["to"],"called just":["`count`."],"called lexical":["binding"],"called mornine":["**M**."],"called nitpicking":["for"],"called nitpicking,":["so:"],"called on":["`sequence`,"],"called once,":["rather"],"called separately":["and","and"],"called something":["like"],"called then":["name"],"called to":["generate"],"called when":["it"],"called with":["the","`is-silence`"],"called. Subsequent":["calls"],"called? Does":["it"],"caller if":["you"],"caller is":["giving"],"calling (require),":["so"],"calling Java":["methods"],"calling [`use`]":["directly`"],"calling `frequencies`":["and"],"calling `load-file`":["on"],"calling `lower-case`":["twice","and"],"calling `silence?`":["twice."],"calling `square`":["from"],"calling and":["where"],"calling directly":["into"],"calling it":["repeatedly","`dna-seq`"],"calling out":["to","the"],"calling str":["on"],"calling the":["function","java"],"calling—either as":["the"],"calls (string/upper-case":["instead"],"calls ```lower-case```":["when"],"calls `not=`":["with"],"calls all":["around."],"calls and":["not","getting","you"],"calls behind":["bindings"],"calls can":["be","be"],"calls function":["b","a,"],"calls into":["using"],"calls like":["in"],"calls makes":["sense."],"calls only_digit.":["You"],"calls out":["to"],"calls seq":["on"],"calls shorter":["and"],"calls the":["other.","functions","same"],"calls to":["`sort`","`s/lower-case`","`lower-case`","```canonicalize```?","`declare`","Java","attention","access","access","[`range`](http://clojuredocs.org/clojure_core/clojure.core/range).","modify","`robot-name`","[`map`](http://clojuredocs.org/clojure_core/clojure.core/map)","`drop_and_show`","`char-array`."],"calls with":["`memoize`."],"calls work":["too,"],"calls, I":["do"],"calls, it":["gets"],"calls. I":["think"],"calls. Nice":["touch"],"calls. To":["make","make"],"calls... not":["sure."],"came across":["the","when","the","a"],"came down":["to"],"came up":["with!","with","already","with","with","with"],"can I":["improve"],"can `filter`":["and"],"can achieve":["the"],"can actually":["change"],"can add":["a"],"can already":["be","be"],"can also":["be","use","serve","work","be","treat","rearrange","use","use","do","be","see","replace","append","be","be","use","be","be","be","be","use","be","write","be","\"alias\"","take","be","do","treat","take","remove"],"can always":["leave","remove","create","go"],"can apply":["for"],"can appreciate":["how"],"can avoid":["regexes","the","it.","the","the"],"can be":["handled","used","used","done","done","used","treated","assumed","insanely","written","treated","ommitted","used","named","handy","sometimes","used","already","solved","found","treated","improved.","achieved","treated","done","used","nicely","alternatively","handled","a","given","inlined","treated","just","treated","found","made","sped","replaced","treated","simply","easily","found","negative.","found","thought","abstracted","negative","easily","used","substituted","made","done","transformed","replaced","used","reasonably","eliminated","opened","used","simplified","used","shortened","anything","replaced","shortened","a","simplified","used","used","a","expressed","used","passed","combined","simplified.","simplifed","done","written","shortened","transactional","written","treated","written","treated","formed","expressed","done","written","treated","used","treated","written","treated","used","better,","done","used","written","treated","used","used","simplified.","composed","tightened"],"can break":["it"],"can by":["combined"],"can call":["it","```last```"],"can certainly":["add"],"can check":["for"],"can collapse":["the"],"can combine":["`re-seq`"],"can come":["up"],"can consider":["if"],"can count":["down"],"can create":["lexical","with","bindings","a"],"can define":["top-level,","other","them","two"],"can definitely":["be"],"can describe":["function"],"can dig":["it,"],"can directly":["write"],"can do":["to","with","for","with","`(partial","about","better","that.","`(range","some","is"],"can drop":["the","parentheses","the"],"can dynamically":[".get"],"can easily":["refactor","distinguish","see"],"can either":["use","move"],"can eliminate":["parentheses","one","the"],"can elucidate":["us."],"can encode":["those"],"can even":["use","do","exploit"],"can examine":["arbitrary"],"can extract":["cond"],"can figure":["out"],"can find":["some","all","alternatives","right"],"can follow":["you"],"can generalise":["the"],"can generally":["just"],"can get":["much","much","it","rid","around","rid","away","without","some","any","moody","away","more"],"can give":["them","more","a","them"],"can go.":["No"],"can have":["aptly","aptly","multiple"],"can help":["with","with","with","here.","you.","simplify"],"can highlight":["parenthesis"],"can i":["use","pass","do"],"can improve":["the"],"can in":["Scala"],"can indifferently":["handle"],"can it":["be"],"can just":["`(last","have","use","be","do:","use","pick","pass","replace","call","call","replace","put","be","be","make","replace"],"can keep":["the"],"can kind":["of"],"can learn":["that."],"can leave":["commas"],"can leverage":["that"],"can limit":["the"],"can maintain":["the"],"can make":["it","that","private","it","the","your","use","word-count","it","use","the","your","program","use","this","a","program","your","sense","people","a","your","them"],"can map":["`TO-RNA`"],"can modify":["the","it."],"can most":["often"],"can name":["it"],"can never":["be"],"can not":["require?"],"can now":["remove","simplify"],"can often":["bend"],"can omit":["`1`","the"],"can only":["sort","mark"],"can optimise":["`total`"],"can overflow":["the"],"can partly":["help"],"can pass":["in","it"],"can perform":["some"],"can pick":["out"],"can pipeline":["functions"],"can point":["it"],"can post":["to"],"can probably":["infer","do"],"can produce.":["As"],"can provide":["a"],"can put":["those"],"can re-arrange":["your"],"can read":["`not"],"can recommend":["-"],"can reduce":["the","nesting","the"],"can refer":["to","to"],"can reference":["`clojure.core/count`"],"can remove":["line","the"],"can reorder":["function"],"can replace":["`clojure.string/replace`","the","the","some","``has-match?```","your"],"can resolve":["it"],"can resubmit":["if"],"can rework":["it,"],"can safely":["get"],"can save":["some"],"can say":["some"],"can see":["arguments","how","the","arguments","arguments","the","that","that","where","that","that","the","jumping"],"can see,":["i"],"can shorten":["lines","this","up"],"can simplify":["`uppercase?`","the","this","this","the","this","things"],"can simply":["use"],"can spare":["you","the","the"],"can specify":["things","a"],"can still":["reference"],"can streamline":["your"],"can take":["a","a","just","advantage","advantage","an","advantage","multiple","care","a","a"],"can tell":["clojure","I","it","me","you"],"can tell,":["It's"],"can test":["for"],"can then":["convert","also"],"can think":["of","of","of.","off.","to","of"],"can totally":["see"],"can treat":["Strings","string","strings"],"can try":["to","to","here"],"can understand":["at"],"can use":["that","`upper-case`","`str/upper-case`.","(last","`:else`","a","`-`","`last`.","them","threading","most","clojure's","`map`","`update-in`","simply","`(:require","wider","wide","`require`","the","`str/blank?`.","the","```Java.String```,","it","a","pre","`repeat`.","`:refer`","Clojure's","`defn-`","`(defn","`defn-`.","`cond`","more","a","either","`(boolean","`when`","something","to","`swap!`","the","that","the","condp","sets","``Character/isLetter```","to","a","it","destructuring"],"can whittle":["this"],"can work":["as","as","as","inside"],"can write":["it","`%1`","`nucleotide-counts`"],"can you":["believe","think","make","check","give","be"],"can your":["resubmit"],"can't I":["delete"],"can't add":["messages"],"can't assume":["A"],"can't be":["reduced","that","\\U"],"can't believe":["I"],"can't check":["that"],"can't comment":["on"],"can't do":["much"],"can't figure":["out","out","out","how"],"can't find":["other","much","much"],"can't get":["some"],"can't go":["wrong"],"can't help":["but"],"can't image":["that"],"can't interpret":["remarks"],"can't justify":["this"],"can't nest":["function"],"can't quite":["get","place"],"can't really":["think"],"can't reason":["why"],"can't reduce":["boolean"],"can't remember":["if","now"],"can't say":["I'm"],"can't see":["how"],"can't tell":["exactly"],"can't think":["of"],"can't use":["```frequencies```"],"can't work":["out"],"can, the":["\"dead\""],"can-attack does":["not"],"can-attack functions":["are"],"can. There":["is"],"cancel my":["remark"],"candidate argument":["that"],"candidate for":["anagram.","anagram.","anagram.","refactor!"],"candidate word.":["The"],"candidate, so":["it's"],"candidate. Finally,":["you"],"candidate. I":["found"],"candidates have":["to"],"candidates when":["you"],"candidates which":["are"],"candidates]` instead":["of"],"cannot compare":["equality,"],"cannot delete":["a"],"cannot find":["an"],"cannot say":["the"],"canonical version":["of"],"canonicalize and":["when"],"canonicalized strings":["-"],"capability to":["highlight"],"capability. Frequencies,":["even"],"capital letter*":["and"],"capital letters":["in","like","and","to","would"],"capital letters,":["which"],"capitalization should":["be"],"caps is":["still"],"caps, respond":["with"],"capture all":["of"],"capture more":["of"],"capture that":["correctly,"],"capture the":["parameter","*intent*","requirements."],"captures the":["forceful"],"care about":["(so,"],"care is":["because"],"care of":["making","the","some","all","that.(TIL)"],"care to":["elucidate","make"],"careful for":["other"],"carefully to":["figure"],"carefully, as":["far"],"carried away":["by"],"carried out":["in"],"carries the":["context"],"cascade of":["values"],"case (logical":["tests)"],"case (since":["I"],"case -":["this"],"case I":["would","tend","think","felt","could"],"case I've":["heard"],"case a":["simple"],"case and":["I'm"],"case are":["the"],"case as":["well,"],"case by":["`Character/isUpperCase`"],"case captures":["the"],"case character?":["Isn't"],"case characters,":["but"],"case down":["there."],"case for":["the","-1","using","taking","the"],"case function":["which"],"case if":["I"],"case in":["which","`bottles`","`count`.","which","general."],"case insensitive":["and","comparison"],"case insensitive.":["But"],"case insensitivity":["is"],"case is":["justified","a","one"],"case it":["would","makes","doesn't"],"case it.":["This"],"case it’s":["not"],"case letter":["(`\"4?\"`"],"case letters.":["I"],"case like":["\"It's","this?"],"case mapping":["to"],"case must":["have"],"case normalization":["at"],"case normalized":["comparison","version"],"case of":["Clojure.","threading","Python","sets,","threading","the","this","changes.","where","contracts","a","one","`bottles`,","nested","`sorted`,","a"],"case on":["my"],"case or":["if"],"case pass,":["but"],"case perfectly":["happily."],"case predicate":["using"],"case so":["that"],"case statement":["but","to","in"],"case string":["should"],"case that":["you'd"],"case the":["input","name","`(remove-non-word-chars"],"case though,":["you"],"case using":["\"map\","],"case where":["there","the","the"],"case won't":["deplete"],"case worth":["the"],"case would":["require"],"case you":["wanted","could","don't"],"case you'd":["get"],"case you're":["just","totally"],"case\" I":["switched"],"case\"). It's":["worth"],"case) -":["which","that"],"case) and":["*no*"],"case) if":["it"],"case) to":["a"],"case). `Vectors`":["implement"],"case, I":["think","really"],"case, but":["it's","I","doesn't"],"case, it's":["not"],"case, maybe":["some"],"case, so":["I"],"case, the":["fact","length","exception","worst"],"case, though":["the"],"case, what":["would"],"case, you":["want","should","immediately"],"case, you'd":["be","just"],"case-insensitive by":["including"],"case. \"!@#!@\"":["doesn't"],"case. As":["you"],"case. Code":["formatting"],"case. Compare":["`amount`"],"case. For":["example"],"case. However,":["if"],"case. I":["think"],"case. I'd":["personally"],"case. I'll":["add"],"case. It's":["primary"],"case. Maybe":["a"],"case. No":["test"],"case. Of":["course","course"],"case. Other":["than"],"case. The":["second"],"case. You":["don't","should","can"],"case. `sort-by`":["is"],"case. e.g.":["`(="],"case; the":["String"],"case? Or":["am"],"case](http://exercism.io/n1k0/clojure/word-count) the":["flow"],"cased and":["words"],"cased words?":["\"Hello\"","\"Hello\""],"cased? Like":["\"Hello\""],"cases I":["believe"],"cases and":["letting"],"cases are":["probably"],"cases don't":["currently"],"cases in":["mind.","my"],"cases into":["their"],"cases is":["because"],"cases last":["night."],"cases like":["`(shouty?","`(shouty?","`if-let`?"],"cases must":["be"],"cases of":["daylight","course.","mutual"],"cases receives":["as"],"cases such":["as"],"cases that":["you","you"],"cases weren't":["tested"],"cases when":["it"],"cases where":["the","atomic"],"cases would":["probably"],"cases). More":["about"],"cases, I":["guess,"],"cases, but":["people"],"cases, they":["share"],"cases, three":["of"],"cases. Can":["you"],"cases. In":["the"],"cases. Most":["of"],"cases. So,":["I"],"cases. Your":["function"],"cases... When":["there's"],"cases—one of":["them's"],"cassical \"account":["balance\""],"cast it":["to"],"cast to":["ints","`seq`"],"casting of":["the"],"casts to":["a"],"catch on":["the","putting","removing"],"catch! Another":["comment"],"catch, although":["going"],"catch, thanks!":["I"],"catch-all condition":["in"],"catch-all in":["a","`cond`."],"catch. I":["didn't"],"category of":["a"],"category than":["the"],"caters to":["something"],"caught all":["those"],"caught by":["`(=","the","the"],"caught that":["I"],"caught up":["in"],"cause me":["to"],"cause now":["it"],"caused me":["to"],"caused unnecessary":["complexity."],"causes chafing":[":-)"],"causing so":["much"],"caveat is":["the"],"certain *types*":["of"],"certain I've":["used"],"certain about":["some"],"certain amount":["is"],"certain characteristics,":["using"],"certain zen":["quality"],"certainly a":["performance"],"certainly add":["indirection"],"certainly are":["not"],"certainly feels":["like"],"certainly improves":["readability"],"certainly more":["expressive","succinct,"],"certainly no":["worse."],"certainly not":["got","an"],"certainly subjective,":["and"],"certainly watch":["out"],"certainly write":["a"],"chacacter of":["a"],"chain functions,":["you"],"chain of":["processing"],"chain returns":["`nil`."],"chain. I":["tried"],"chaining every":["operation"],"chaining from":["`question?`."],"chaining in":["Ruby.","`question?`"],"chaining operations":["everywhere"],"chaining your":["operations"],"challenge? How":["much"],"challenging as":["a"],"chance it":["would"],"chance of":["still","becoming"],"chance to":["get","work"],"change `silence?`,":["`shouting?`"],"change any":["logic"],"change as":["well,"],"change but":["I'm"],"change functions":["to"],"change in":["the","the"],"change is":["to","that"],"change more":["than","than"],"change my":["code.Thank"],"change so":["it"],"change that":["much"],"change the":["implementation","true","order","way","structure","tests,","underlying","value,"],"change to":["`any-lcase-chars`","your"],"change with":["the"],"change would":["be"],"change your":["namespace","regex"],"change, but":["I"],"change. Is":["there"],"change. Not":["so"],"change/update very":["often."],"change? How":["could"],"changed -":["hence"],"changed :require/:all":["to"],"changed L9":["to"],"changed ```shout?```":["to"],"changed and":["I"],"changed from":["a",":use"],"changed in":["the","between","between"],"changed that":["too"],"changed the":["shouting","the","function","parameter","`ns`","test","code.","`valid-triangle?`","regex","test"],"changed with":["it."],"changes for":["it"],"changes from":["all"],"changes occur":["atomically."],"changes such":["that"],"changes taking":["into"],"changes to":["your"],"changing `(def":["slience?"],"changing behind":["my"],"changing the":["regexp","`pluralize`","indentation","representation"],"changing was":["\"T\""],"char (range":["from-zero"],"char (which":["-"],"char -&gt;":["char"],"char [98":["97"],"char \\T)":["\\U"],"char `\\U`":["instead"],"char and":["use"],"char bounds,":["so"],"char in":["a"],"char is":["in"],"char literal":["syntax"],"char nucleotide)`":["as"],"char then":["I"],"char to":["the"],"char) (throw":["(AssertionError."],"char-counts a":["private"],"char-range function":["for"],"character (literal),":["of"],"character -":["that"],"character U":["is"],"character array":["and","and"],"character being":["the"],"character case":["predicate"],"character class":["to","`\\W+`"],"character class?":["The"],"character classes":["in","in","like"],"character code":["points"],"character for":["predicate"],"character from":["a"],"character in":["the"],"character instead":["of"],"character is":["a","lower"],"character literals":["are","instead","and","can","rather","provides"],"character literals,":["like"],"character long":["string"],"character looking":["for"],"character of":["a","a","a","a","a","a","a","a","a"],"character or":["a"],"character range":["generation."],"character representation,":["here"],"character string":["`\"?\"`."],"character things(i":["think)"],"character to":["a","digit"],"character would":["be"],"character. Coming":["from"],"character. From":["my"],"character. In":["Clojure"],"character. Is":["there"],"character. Thanks":["for"],"character. That":["might"],"character: `(=":["\\?"],"character? Isn't":["`(="],"characteristics, using":["'cond'"],"characters (I":["don't"],"characters (e.g.":["`?`)"],"characters (no":["conversion","conversion"],"characters --":["I've"],"characters T":["and"],"characters \\T":["and"],"characters already.":["You"],"characters and":["no","internationalization."],"characters are":["not","arranged","uppercase.","passed"],"characters as":["strings."],"characters back":["to"],"characters by":["Clojure.","sequence","explicitely"],"characters can":["be"],"characters from":["the","the"],"characters in":["words","the","the","the","names,","names,","symbols","a","a","the","the"],"characters instead":["of","of"],"characters is":["much","my"],"characters limit.":["I"],"characters long?":["I'm"],"characters mean.":["Which"],"characters might":["make"],"characters of":["the"],"characters or":["strings,"],"characters out":["of"],"characters rather":["than"],"characters so":["that","that","that"],"characters some":["descriptive"],"characters that":["are"],"characters to":["variables","vars,","atoms,","more","represent","more","a"],"characters until":["a"],"characters where":["sequence","all"],"characters while":["one"],"characters with":["the","a","`re-seq`.","spaces"],"characters you":["want","can"],"characters\" and":["\"drop"],"characters\"*. I":["felt"],"characters\". But":["this"],"characters\". Same":["with"],"characters). You":["may"],"characters, I":["could"],"characters, but":["it"],"characters, so":["there"],"characters. Also,":["you"],"characters. Character":["literals"],"characters. Consider":["making"],"characters. It":["is","would"],"characters. New":["iteration"],"characters. You":["can"],"characters. `*-from-pair`":["functions"],"characters; eg.":["`(="],"characters? It":["seems"],"characters?\" better":["than"],"chars like":["`(int"],"chars on":["line"],"chars rather":["than"],"chars so":["that"],"chars spread":["inside"],"chars to":["ore","meaningful","more"],"chars, but":["it"],"chars. yours":["is"],"chats w/":["Carin"],"cheated on":["the","this"],"cheated using":["`clojure.string`'s"],"cheating to":["me."],"cheating with":["clojure.string/replace"],"cheating, version":["2"],"cheatsheet that":["you"],"chec for":["the"],"check I":["would"],"check a":["multiple","new"],"check actually":["checks"],"check against":["this"],"check and":["make","correct","making"],"check but":["that's"],"check could":["be:","be"],"check explicitly":["if"],"check followed":["by"],"check for":["silence","questions.","it,","something","the","an","the","the","the","anagram","anagrams","one","a","the","the","`(=","identical","`yell?`","duplicates.","that,","`all-caps`","`question?`","the","all","questions","at","a","that","an","good","a","you","letters","if","`?`","uppercase"],"check functions":["private.","matched"],"check how":["you"],"check if":["it","string","i","i","we","a"],"check in":["a","`shouty?`","`shouty?`","the","predicate","`shout?`,","one"],"check into":["its"],"check invariants":["all"],"check it":["out."],"check more":["idiomatic."],"check out":["the","the","`inc`","[frequencies](http://clojuredocs.org/clojure_core/clojure.core/frequencies),","http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/ns","`frequencies`","the","the","using"],"check per":["word"],"check than":["sorting"],"check that":["now","the"],"check the":["value"],"check their":["length."],"check to":["be","see","another","`anagram?`","see","see","see","`anagram?`"],"check what":["exactly"],"check with":["```str/bank?```"],"check within":["`shout?`"],"check, and":["is"],"check, if":["the"],"check, swapping":["the"],"check. It":["might"],"checked both":["against"],"checked that":["the","all"],"checked, but":["I"],"checking ```drivel```":["against"],"checking ```s```":["against"],"checking `not":["silence?`"],"checking against":["along"],"checking alphagrams,":["and"],"checking anagrams":["-"],"checking containment,":["like:"],"checking for":["equality","silence.","a","prolonged","that","anagrams","capital","containment,","-","valid","shouting","all-caps"],"checking functions":["be","should","private."],"checking if":["the"],"checking its":["`last`character."],"checking method":["close"],"checking out":["`frequencies`"],"checking seems":["redundant,"],"checking some":["things"],"checking that":["an","an","a","input","`(set"],"checking the":["length"],"checking to":["make"],"checking whether":["a"],"checking, and":["it"],"checkout \u003ccode\u003efrequencies\u003c/code\u003e":[","],"checkout new":["sequence-based"],"checks against":["the","the"],"checks and":["I'm"],"checks are":["made?"],"checks be":["private"],"checks for":["or","alphanumeric.","anagrams","empty"],"checks in":["the","the","response-for"],"checks inside":["the"],"checks into":["private","methods","private","private","private","private","private","private","private","private","private"],"checks more":["generic","order"],"checks or":["by"],"checks order":["independent."],"checks out":["into","into"],"checks that":["it's"],"checks then":["it"],"checks to":["non-public","non-public","(non-public?)","response,","response,"],"checks with":["a"],"checks would":["be"],"checks), an":["alternative"],"checks, but":["maybe"],"checks, such":["as"],"checks. I":["didn't"],"checks? I":["would"],"chill out!\"":["since","because","if","(bob/response-for","\"Sure.\"))"],"chill out!\")`.":["There"],"chill out!\",":["other"],"choice I've":["seen"],"choice although":["interestingly"],"choice between":["`Calendar`","sorting"],"choice for":["mapping"],"choice here.":["I'm"],"choice of":["variable","names.","one","predicates","regex."],"choice that":["needs"],"choice too,":["I'm"],"choice, as":["other"],"choice, but":["I"],"choice. All":["in"],"choice. As":["I've"],"choose `contains`":["and"],"choose from":["?"],"choose to":["do","`(use","use","do"],"choosing a":["different"],"choosing between":["\"one\""],"chose not":["to","to"],"chose to":["go","go"],"chosen is":["a"],"chrome is":["being"],"chromosome? any":["string?"],"chunk of":["this"],"chunk? It":["seems"],"chunks *feels*":["better"],"chunks and":["compare"],"chunks, you":["could"],"circuit the":["call"],"claimed to":["test"],"clarification around":["\"root"],"clarification on":["an"],"clarification, look":["at"],"clarifies the":["code,"],"clarify a":["bit"],"clarify my":["stance."],"clarify the":["distinction","keyword","unicode","intent","intent"],"clarify their":["intent?"],"clarify what":["the"],"clarify your":["comment"],"clarifying subfunctions":["with"],"clarifying, that's":["very"],"clarity -":["for"],"clarity and":["simplicity"],"clarity by":["using","using"],"clarity for":["me.","a"],"clarity of":["NUMBERS","the"],"clarity than":["efficiency"],"clarity —":["sorting"],"clarity. Alternative":["to"],"clarity: I":["think"],"clash could":["be"],"clashes when":["using"],"clashes with":["potentially"],"clashing with":["`clojure.core/count`,"],"class I":["should"],"class `\\W+`":["you"],"class but":["specifies"],"class do":["most"],"class is":["actually"],"class path":["and"],"class to":["simplify"],"class? The":["tests"],"classes in":["the","Java."],"classes like":["`#\"\\W\"`"],"classes to":["avoid"],"classification from":["picking"],"classification logic":["out","out"],"classification, they're":["similar"],"classify-response to":["bob"],"classifying [string];":["but"],"clause (is":["that"],"clause comes":["first,"],"clause for":["`forceful-question?`"],"clause in":["the","`second-line`.","the","the"],"clause is":["actually"],"clause of":["a"],"clause on":["its"],"clause per":["response"],"clause with":["`:scalene`"],"clause, but":["now"],"clause. Then":["you"],"clauses don't":["feel"],"clauses of":["your"],"clauses with":["new"],"clauses, the":["variables"],"clauses? (And":["did"],"clean ,":["but"],"clean --":["I"],"clean and":["nice!","readable.","easy","nice","concise.","looks"],"clean code,":["since"],"clean enough":["to"],"clean it":["up"],"clean sentiment)`":["vs."],"clean structure":["of"],"clean stuff":["up."],"clean that":["an","up."],"clean the":["string"],"clean things":["up"],"clean this":["up"],"clean up":["a","your","that","some"],"clean way":["to","to","that"],"clean. Can":["you"],"clean. Maybe":["binding"],"clean. My":["only"],"clean. The":["only"],"cleaned itself":["up."],"cleaned string,":["would"],"cleaned things":["up","up"],"cleaned up":["the"],"cleaned up.":["I"],"cleaner :)":["But"],"cleaner `response-for`":["that"],"cleaner after":["you"],"cleaner and":["I"],"cleaner if":["you"],"cleaner in":["the"],"cleaner overall":["solution.","solution."],"cleaner response-for":["that"],"cleaner solutions.":["I"],"cleaner than":["what","take/drop"],"cleaner there":["since"],"cleaner this":["way."],"cleaner to":["me","my"],"cleaner way":["to","to","to"],"cleaner without":["this"],"cleaner. I'll":["do"],"cleaner. Thanks":["@flo!"],"cleaner. The":["comments"],"cleaner; less":["redundant."],"cleaner? It's":["also"],"cleanest way":["to"],"cleaning up":["seems"],"cleans up":["the","the","the"],"cleanse-phone is":["a"],"clear _what_":["do"],"clear about":["what"],"clear and":["concise,","readable,","easy"],"clear as":["possible"],"clear but":["you"],"clear enough":["that","since"],"clear fast":["once"],"clear from":["the","the"],"clear gain":["in"],"clear if":["you","it","they"],"clear in":["my","my"],"clear it":["up","gets","up"],"clear meanings.":["The"],"clear reading":["the"],"clear separation":["between"],"clear than":["this","[version"],"clear that":["case","such","this"],"clear the":["only","word","`anagrams-for`"],"clear to":["said","check","the","me.","understand"],"clear up":["what","shout?"],"clear what":["operation","that","happens.","you","each","they","`ws`"],"clear what's":["happening","going"],"clear, and":["YAGNI"],"clear, but":["has","binding","it"],"clear, please":["take"],"clear, see":["your"],"clear, terse":["and"],"clear, you":["can"],"clear. I":["like","like"],"clear. If":["you"],"clear. The":["namespace"],"clear. What":["are"],"clearer (or":["at"],"clearer I":["suspect?"],"clearer IMO),":["another"],"clearer about":["why"],"clearer and":["improve","more"],"clearer at":["the"],"clearer by":["simplifying","casting"],"clearer especially":["since"],"clearer for":["future","someone"],"clearer if":["you","you"],"clearer in":["`sing`","my"],"clearer over":["`(empty?"],"clearer still":["to"],"clearer than":["using","using","\"let\""],"clearer to":["use","use","have","use","declare","understand","use","me.","filter"],"clearer what":["exchange","the"],"clearer, though":["it's"],"clearer, though.":["I'll"],"clearer. I":["think","was"],"clearer. I'm":["not"],"clearer. Using":["seq"],"clearer. `(frequencies":["(words"],"clearer... you":["could"],"clearest to":["read.","me."],"clearly a":["matter","language"],"clearly enough.":["If"],"clearly faster":["and"],"clearly named":["functions."],"clearly that":["there"],"clearly that's":["what"],"clearly understandable,":["we're"],"clearly with":["the"],"clearly) shows":["that"],"clearly, like":["`anagram-checker-for`"],"clearly, so":["good"],"clever and":["hard","it"],"clever solution":["(and"],"clever there.":["On"],"clever, but":["doesn't"],"cleverness here":["is"],"cleverness, I":["opted"],"clj-time). The":["only"],"cljstr, str,":["or"],"clojure (and":["any","some"],"clojure (like":["you"],"clojure -":["opening"],"clojure I've":["ever","written"],"clojure Maps":["are"],"clojure `defn`s":["with"],"clojure allows":["def"],"clojure and":["provide","didn't"],"clojure as":["it","well,"],"clojure because":["there's"],"clojure built-in":["functions"],"clojure code":["golf,","in","I've"],"clojure contrib":["has"],"clojure core,":["you"],"clojure could":["use"],"clojure day":["to"],"clojure didn't":["support"],"clojure docs":["now"],"clojure documentation":["does"],"clojure exercises":["and"],"clojure function":["which","which","that","you","will","which","which","which","which","which","which","which","which","which"],"clojure function,":["which"],"clojure functionality":["rather"],"clojure functions.":["They"],"clojure generally":["should"],"clojure good":["enough"],"clojure had":["`count-with`","a"],"clojure idiomatic.":["Many"],"clojure is":["quite","with","to"],"clojure it":["looks"],"clojure itself":["does"],"clojure koans":["before","so"],"clojure like":["`:pre"],"clojure lines":["in"],"clojure missing":["a"],"clojure n00b,":["but..."],"clojure newbie":["myself"],"clojure platforms,":["anyway)."],"clojure program,":["I","I"],"clojure sequence":["related"],"clojure since":["it's"],"clojure so":["that’s","that","I","every"],"clojure string":["functions"],"clojure style":["is","guide","guide","guide:","guide","to"],"clojure style,":["but"],"clojure supported":["currying"],"clojure that":["you"],"clojure to":["use"],"clojure usually":["not"],"clojure version":["&gt;="],"clojure was":["you"],"clojure which":["you"],"clojure with":["that"],"clojure works":["now."],"clojure would":["fare"],"clojure yet.":["In"],"clojure you":["can"],"clojure\" was":["from"],"clojure's `upper-case`":["instead"],"clojure's built":["in"],"clojure's libraries":["in"],"clojure) in":["the"],"clojure, and":["I"],"clojure, but":["it","getting","in"],"clojure, let":["alone"],"clojure, so":["this","this","a"],"clojure, the":["other"],"clojure, trailing":["braces"],"clojure, will":["check"],"clojure-y or":["lisp-y"],"clojure. But":["it's"],"clojure. Even":["in"],"clojure. Gonna":["have"],"clojure. I":["was","came","learned"],"clojure. Isn't":["it"],"clojure. It":["helps"],"clojure. Outermost":["`vec`"],"clojure. What":["if"],"clojure. Will":["fix."],"clojure.contrib is":["not"],"clojure.core and":["see"],"clojure.core called":["\"frequencies\""],"clojure.core function":["to"],"clojure.core if":["i'm"],"clojure.core that":["can"],"clojure.core to":["count"],"clojure.core which":["can"],"clojure.core). Here's":["a","a","a"],"clojure.core, check":["out"],"clojure.core, or":["that"],"clojure.core, so":["I'd"],"clojure.core/count and":["dna/count"],"clojure.core/count inside":["dna/count."],"clojure.core/frequencies, I":["just"],"clojure.core/replace so":["I"],"clojure.core; it":["will","should"],"clojure.string -":["I'll"],"clojure.string available,":["but"],"clojure.string can":["be"],"clojure.string for":["things"],"clojure.string has":["a","the","functions"],"clojure.string in":["next"],"clojure.string instead":["of","of"],"clojure.string into":["your"],"clojure.string module":["(it"],"clojure.string namespace":["has","available."],"clojure.string prefixes":[":-)"],"clojure.string require.":["It"],"clojure.string so":["that"],"clojure.string without":["an"],"clojure.string))`, you're":["no"],"clojure.string, it":["is"],"clojure.string, which":["can"],"clojure.string. This":["is"],"clojure.string/ part":["when"],"clojure.string/blank? --":["it","it"],"clojure.string/blank? =\u003e":["str/blank?"],"clojure.string/blank? already":["disregards"],"clojure.string/blank? for":["a"],"clojure.string/blank? instead":["of","of"],"clojure.string/blank? might":["be","be"],"clojure.string/blank? rather":["than"],"clojure.string/blank? when":["checking"],"clojure.string/blank?. I":["also"],"clojure.string/lower-case to":["the"],"clojure.string/lower-case)` into":["a"],"clojure.string/lower-case: `(ns":["anagram"],"clojure.string/split function.":["Will"],"clojure.string/upper-case be":["preferable"],"clojure.string/upper-case, I'm":["not"],"clojure.string/upper-case. I":["don't"],"clojure.typed. It":["might"],"clojure: why":["is"],"clojure; what":["does"],"clojure? Take":["a"],"clojureans and,":["even"],"clojuredocs is":["rather"],"clojuresque. Unfortunately":["that"],"clojury though":[":)"],"close all":["your"],"close for":["context)."],"close it":["so"],"close on":["this."],"close out":["your"],"close over":["a"],"close the":["the","comparable","original"],"closed the":["bindings"],"closed within":["a"],"closely coupled":["with"],"closely match":["the"],"closer look":["at"],"closer to":["the","the"],"closes over":["year"],"closing `)`":["on"],"closing bracket":["should"],"closing brackets":["in","onto","even"],"closing brackets.":["There's"],"closing brackets/parentheses":["in"],"closing one":["on"],"closing out":["all","parentheses"],"closing over":["the"],"closing over,":["whereas"],"closing parens":["together.","together.","on","inline,","on","there.","on","on"],"closing parentheses":["all","should","in","in","until","on","formatting."],"closing parenthesis":["confusing","immediately"],"closing parenthesis!":[":-D"],"closing parenthesis,":["closing","closing"],"closing square":["bracket."],"closing the":["problems?"],"closure and":["returns","makes"],"closure to":["construct"],"closure) would":["result"],"closure, I":["need"],"closures and":["higher"],"closures replace":["works,"],"clumsiness of":["`comp`."],"clumsy, but":["it"],"clunky. Why":["not"],"clutter in":["string","places"],"clutter inside":["`str`."],"clutter the":["things","repl"],"cluttered and":["intent","make"],"code \"templating\"":["really."],"code (because,":["like","like","like"],"code (diminishing":["readability)"],"code -":["that","you","you","inside"],"code 100%":["clear."],"code I":["started","can","had","wrote","found:"],"code I've":["ever","seen","read,","just","seen"],"code XXX":[":exchange"],"code a":["tad","little","bit.","little","bit","bit","bit.","tiny","smidge,","great","bit","lot"],"code also":["calls"],"code and":["manipulate","it","bikesheds","know","you'll"],"code are":["unlikely"],"code as":["a","is.","well"],"code at":["this"],"code back":["to"],"code becomes":["much"],"code behaves":["this"],"code better":["currently..."],"code block":["makes"],"code but":["the","not"],"code can":["make","be"],"code clarity":["than"],"code clarity:":["I"],"code clearer.":["I'm"],"code cleverness,":["I"],"code copy/pasted":["that"],"code could":["be"],"code crystal":["clear"],"code determine":["precedence."],"code developed":["in"],"code does":["what","too","the"],"code doesn't":["have","format","use","even","work","break"],"code dropped":["as"],"code ended":["up"],"code every":["day."],"code explain":["what"],"code extremely":["understandable."],"code feels":["verbose."],"code for":["a","all","`verse`"],"code formatting":["before.","in","is","-","is","is"],"code formatting:":["so"],"code from":["it.","the"],"code golf,":["keep"],"code golfing":["here),"],"code greatly":["just"],"code greatly?":["I"],"code harder":["to"],"code have":["to"],"code here":[":)","is"],"code in":["clojure","the","the","iteration","the","it","Clojure"],"code into":["account"],"code is":["going","so","good","formatting","putting","starting","doing.","\"not","pretty","doing.","admirably","very","a","hellish,","clear,","very","just"],"code it's":["preferred"],"code later":["-"],"code layout":["and"],"code less":["human","lines"],"code like":["this.","`question?`","`"],"code lives":["here"],"code look":["*\"unfinished\"*","like"],"code looks":["good,","quite","good","like"],"code maintenance.":["I"],"code melts":["away!"],"code might":["fulfill","fulfill"],"code more":["self","efficient","self-documenting","self-documenting","readable.","expressive","readable!","precise","clear."],"code much":["shorter!","shorter","easier"],"code needed.":["And"],"code now":["using","(more"],"code on":["a","Clojure.","here?"],"code once.":["It"],"code or":["from"],"code outside":["the"],"code points":["to"],"code points.":["So"],"code reads":["\"compute","using"],"code seems":["to"],"code short":["but"],"code should":["look.","be","follow."],"code shouldn't":["be"],"code size":["even"],"code small":["does"],"code snippets":["-"],"code so":["that","that"],"code something":["in"],"code structure":["(which"],"code structure.":["Strings"],"code style":["guidelines"],"code tends":["to"],"code terribly":["inflexible."],"code that":["obviously","is","explains","doesn't","you"],"code that's":["expressive"],"code the":["minute"],"code to":["name","an","use","read.","about","use","include","use","a","know","programmatically"],"code until":["you"],"code using":["`cond`."],"code warrants":["optimization"],"code when":["it's","I"],"code will":["be","need","be"],"code would":["be","be","be"],"code written.":["Did"],"code you":["need","have"],"code\" part.":["I"],"code's readability":[":)"],"code* I":["totally"],"code, and":["guessing"],"code, as":["opposed"],"code, but":["it","I"],"code, have":["a"],"code, however,":["and"],"code, making":["it"],"code, on":["the"],"code, rather":["than"],"code, since":["most"],"code, so":["let's","thanks!","there"],"code, thanks":["for"],"code, that's":["all."],"code, to":["my"],"code, when":["it"],"code, which":["is"],"code, you":["don't"],"code. Also,":["there","you"],"code. Feedback":["and","and"],"code. Filter,":["while"],"code. Have":["a"],"code. I":["maybe","initially","admit"],"code. I've":["tested"],"code. If":["you're","you"],"code. In":["Clojure"],"code. It's":["hard"],"code. Particularly":["since"],"code. Small":["helper"],"code. So":["for"],"code. Thanks":["for","for"],"code. The":["arguments"],"code. There's":["a"],"code. They":["will"],"code. This":["one"],"code. What":["are"],"code... I'll":["give"],"code; but":["still"],"code? Have":["you"],"code? If":["you"],"code? Right":["now,"],"codebase and":["context"],"codebase. I":["also"],"coded this":["to"],"coder... the":["documentation"],"codes due":["to"],"codes looks":["good","awesome"],"codes much":["better"],"codes to":["reflect"],"coding Python":["here,"],"coding at":["6"],"coding guidelines,":["I"],"coding style":["remark:"],"coerces its":["argument"],"coll))` can":["be"],"coll)` and":["then"],"collapse the":["require","first"],"collection examples":["of"],"collection functions":["justifies"],"collection independent":["way"],"collection is":["an","one"],"collection isn't":["a"],"collection it":["can"],"collection of":["*words*.","functions","the","characters","strings","characters"],"collection passed":["to"],"collection predicates":["like"],"collection to":["reduce"],"collection transformer.":["So"],"collection type":["as"],"collection using":["`vec`"],"collection which":["would"],"collection)` a":["lot"],"collection. This":["should"],"collection. You":["can"],"collections and":["`map`","then"],"collections at":["once"],"collections based":["on"],"collections from":["the"],"collections in":["Clojure,","Clojure"],"collections it":["will"],"collections of":["Characters.","Characters."],"collections to":["the"],"collections vs":["sort"],"collections, so":["`sort`","there","you","you"],"collections. This":["will"],"collision. Sure,":["this"],"collisions between":["symbols"],"collisions. What":["if"],"colon: `:question`":["vs"],"colons and":["extra"],"colors for":["every"],"colors while":["editing"],"column, or":["diagonal"],"columnar style":["for"],"combination of":["`empty?`"],"combine `re-seq`":["and"],"combine it":["with"],"combine lines":["6"],"combine the":["mapping","two","2","two","`numbers-only?`","tests"],"combined into":["a"],"combined like":["`let`"],"combined with":[":as","[`vector`](http://clojuredocs.org/clojure_core/clojure.core/map#example_67)."],"combining 31557600":["and"],"combining sanitizing":["and"],"come across":["the"],"come after":["the","the"],"come back":["to","and","and","to","with"],"come before":["the"],"come down":["to","to","only"],"come from":["where."],"come from.":["(It"],"come from?":["I've"],"come handy":["when"],"come in":["handy."],"come to":["the"],"come up":["with","with","with","with","with","with","with"],"come you":["are"],"comes down":["to","to"],"comes first,":["do"],"comes from":["the","the"],"comes immediately":["after"],"comes through":["with"],"comes to":["closing","readability.","Clojure","convention"],"comfortable. I":["really"],"coming up":["empty"],"coming!\". IMO":["Bob"],"coming. I'm":["still"],"comma. I'll":["clean"],"command line":["mistake"],"commandline as":["class"],"commas (new":["to"],"commas (since":["they"],"commas are":["optional.","whitespace","considered"],"commas because":["clearly"],"commas in":["your"],"commas when":["you"],"commas, I'd":["expect"],"comment (all":["in"],"comment ,":["sorry"],"comment -":["I"],"comment ;)":["Didn't"],"comment I":["have"],"comment a":["public"],"comment about":["this"],"comment as":["well"],"comment because":["I"],"comment did":["cause"],"comment explaining":["the"],"comment is":["that","efficiency."],"comment on":["why","sets","previous","your","how","the"],"comment or":["a"],"comment shouldn't":["become"],"comment that":["was"],"comment to":["clarify"],"comment too":["much"],"comment, I":["think"],"comment, a":["docstring"],"comment, but":["on","yes"],"comment. I'm":["not"],"comment. The":["tests"],"commented code":["doesn't"],"commented lines":["in"],"commented on":["your"],"commented out":["section."],"comments (lines":["15,"],"comments +":["conditions","conditions"],"comments :":["\u003c/br\u003e"],"comments and":["advice"],"comments are":["great,","great,","probably"],"comments by":["named"],"comments can":["help"],"comments describing":["the"],"comments elsewhere":["to"],"comments for":["the"],"comments into":["the"],"comments so":["that"],"comments was":["\"There's"],"comments welcome,":["but"],"comments were":["added"],"comments what":["every"],"comments will":["become"],"comments —":["I’m"],"comments, @madelyn!":["I'm"],"comments, to":["some"],"comments. I":["believe"],"comments. I'm":["beginning"],"comments. I’m":["still"],"comments. They":["are"],"committed with":["a"],"common and":["accepted"],"common clojure":["style"],"common function":["or"],"common idiom":["in","is"],"common implementation":["choice"],"common in":["Clojure","Clojure","Clojure","Clojure"],"common method":["to"],"common naming":["convention"],"common pattern":["where"],"common patterns":["that"],"common practice":["to","for"],"common regex":["understood"],"common than":["\"%1\""],"common that":["the"],"common to":["either","import","put","use","have","give","convert","start"],"common, but":["it"],"communicate as":["much"],"communicate intent":["in"],"communicate the":["higher"],"communicate your":["intent,"],"communicated about":["*why*"],"communicated to":["future"],"communicating intent,":["but"],"community -":["however"],"community [Clojure":["Style"],"community in":["general"],"community maintained":["clojure"],"community prefer":["`require`"],"community standard":["..."],"community, as":["I'm"],"community, or":["is"],"community, so":["making"],"community. Maybe":["you"],"compact (not":["necessarily"],"compact as":["one-liners,"],"compact but":["you're","you"],"compact with":["`re-seq`."],"compact, although":["arguably"],"compact. My":["only"],"comparable here?":["Sorting"],"comparable to":["the"],"comparable value":["of"],"comparable word":["and","is"],"comparable word)":["it"],"comparatively to":["previous"],"compare a":["case"],"compare against":["the","-","over","over","along"],"compare characters?":["It"],"compare equality,":["can"],"compare lists":["as"],"compare maps":["for"],"compare performance-wise":["to"],"compare the":["last","last","variable","variable","string","string","longest","two."],"compare to":["character","original"],"compare your":["`let`"],"compare-and-set fashion":["where"],"compared live":["together."],"compared to":["the","Racket,","other"],"comparing against":["`x`,","s/split","with"],"comparing could":["probably"],"comparing two":["values?"],"comparison between":["word"],"comparison for":["`#(not="],"comparison inside":["the","the"],"comparison into":["one"],"comparison is":["far"],"comparison of":["maps:","the"],"comparison over":["and"],"comparison used":["in"],"comparison with":["```upper-case"],"comparison)`](http://clojuredocs.org/clojure_core/clojure.core/map) with":["multiple"],"comparison, you":["can"],"comparison. `sort-phrase`":["does"],"comparison? Performance":["hint:"],"comparisons in":["a"],"compensate for":["that,"],"compensates for":["that"],"compile time":["or","and"],"compile time,":["so","but"],"compile, though;":["don't"],"compiled by":["community:"],"compiler is":["smart"],"compiler may":["compensate"],"compiler) to":["easily"],"compiling -":["you"],"complain about":["here!"],"complain about,":["so"],"complain at":["you"],"complaint is":["really"],"complected with":["response-for."],"complement of":["the"],"complete expansion.":["Realized"],"complete sentence":["or"],"completed this":["exercise"],"completely avoids":["the"],"completely happy":["with"],"completely inlined.":["To"],"completely missing":["the"],"completely new":["in"],"completely orthogonal":["problem"],"completely tangential":["and"],"completely the":["case."],"completely unbenchmarked":["and"],"completely understood":["what"],"completely unnecessary":["in","because"],"completing the":["writing"],"complex and":["cover"],"complex behaviour,":["I"],"complex enough":["to"],"complex filter":["predicate,"],"complex in":["this"],"complex on":["the"],"complex solutions,":["but"],"complex solutions?":[":D"],"complex task.":["Clojure"],"complex than":["the","it","plain"],"complex to":["be"],"complex, I":["probably"],"complex, hope":["you’ll"],"complex. I":["think"],"complex. I'm":["fairly"],"complex. So":["I"],"complexity and":["glue"],"complexity before":["it's"],"complexity does":["not"],"complexity here,":["but"],"complexity of":["the","the"],"complexity than":["it"],"complicated than":["that.","just","that","it"],"complicated the":["macro."],"complicated to":["do"],"complicated when":["I"],"complicated. I'm":["still"],"complicated/expensive way":["to"],"complication (unless":["Clojure"],"comply to":["with"],"components of":["such"],"components to":["make"],"composability of":["the"],"composability). In":["that"],"composable with":["other"],"composable… Did":["I"],"compose `not-same?`":["and"],"compose later":["on"],"compose. This":["is"],"composed from":["core"],"composing vec":["with"],"composition more":["often,"],"composition not":["feeling"],"composition of":["`vec`","empty?","split"],"composition with":["`comp`."],"comprehend of":["it."],"comprehension --":["what"],"comprehension to":["possibly"],"comprehension which":["would"],"comprehension, but":["for"],"comprehension. The":["second"],"comprehensions in":["Haskell,"],"comprehensions; not":["sure"],"computation over":["and"],"computation will":["become"],"computations that":["you"],"compute the":["sorted"],"compute their":["frequencies\"."],"computed for":["each"],"computed, it's":["always"],"computes the":["length"],"concat ,,,)`":["since"],"concatenating a":["bunch"],"concatenation does":["drive"],"concatenation going":["on"],"concede that":["the","maybe"],"concede: I":["was"],"conceit? I":["could"],"concept like":["*why*."],"concept used":["with"],"concept, nucleotide":["pairs."],"concepts -":["frequencies"],"concepts are":["not"],"concepts as":["\"question\""],"concepts while":["still"],"concerned by":["this"],"concerned with":["writing","code"],"concerns here.":["\"response"],"concerns of":["response"],"concerns to":["me."],"concise and":["communicative.","readable."],"concise and,":["hopefully,"],"concise but":["maybe"],"concise calls...":["not"],"concise enough":["to"],"concise implementation":["for"],"concise nature":["of"],"concise now":["I"],"concise so":["I'm"],"concise solution,":["especially"],"concise than":["this."],"concise the":["Clojure"],"concise this":["is,"],"concise way":["to","expressing"],"concise you":["made"],"concise! It's":["clear"],"concise, but":["the"],"concise, explicit":["(imho"],"concise, not":["\"Enterprisey\"."],"concise, using":["just"],"concise. As":["a"],"conciseness against":["readability"],"concision and":["expressiveness."],"conclude after":["the"],"concluded that":["I've"],"conclusion that":["the"],"concrete collection":["using"],"concrete implementation":["of","of","of"],"concurrency-safety to":["protect"],"cond and":["return"],"cond becomes":["very"],"cond block":["doesn't"],"cond but":["if"],"cond clearer":["by"],"cond could":["contain"],"cond expression":["is"],"cond http://clojuredocs.org/clojure_core/clojure.core/cond":["can"],"cond in":["both","second-couplet,","is-anagram"],"cond into":["intention"],"cond is":["to","really"],"cond is.":["But"],"cond looks":["good."],"cond or":["case"],"cond order":["is"],"cond ordering":["to"],"cond section":["in"],"cond so,":["as"],"cond switch":["statement"],"cond take":["care"],"cond tests.":["That"],"cond to":["have"],"cond was":["actually","an"],"cond will":["just"],"cond with":["case.","`:else","an","(="],"cond would":["definitely","just"],"cond you":["can"],"cond). Perhaps":["`all-caps?`"],"cond, but":["each"],"cond-part on":["L9"],"cond. Clojure":["just"],"cond. I":["thought"],"condition I":["think."],"condition and":["don't","a","the","the","the"],"condition as":["well.","I"],"condition here":["might"],"condition hooks":["in"],"condition in":["`cond`.","that","either"],"condition into":["a"],"condition map":["form","with","right?"],"condition metadata.":["I've"],"condition or":["using"],"condition out":["into"],"condition predicates":["were","might"],"condition regex.":["When"],"condition since":["they"],"condition statements":["below"],"condition to":["a","validate"],"condition, you":["should"],"condition. Could":["you"],"conditional (below)":["vs."],"conditional and":["the"],"conditional approach":["but,"],"conditional becomes":["something"],"conditional every":["time"],"conditional function":["like"],"conditional in":["clojure.","`to-rna`."],"conditional logic":["to","into","into","into","to"],"conditional logic?":["Using"],"conditional methods":["need"],"conditional with":["only","a"],"conditional, it's":["better"],"conditional. But":["case"],"conditionals at":["all."],"conditionals better":["reveal"],"conditionals into":["private","separate","something","small"],"conditionals is":["obvious,"],"conditionals spans":["multiple"],"conditionals. Inspired":["by"],"conditions I've":["also"],"conditions and":["b)","is"],"conditions are":["expressed","working","not"],"conditions at":["all."],"conditions become":["just","just"],"conditions checks,":["such"],"conditions for":["`cond`"],"conditions in":["nicely","functions,","one","my","`number`","`count`?"],"conditions inside":["the"],"conditions into":["intention-revealing","intention-revealing","separate","finely-named","extra","functions","standalone","their","their"],"conditions is":["normally","more"],"conditions mutually":["exclusive"],"conditions need":["pulling"],"conditions off":["into"],"conditions out":["to"],"conditions perform":["validation"],"conditions so":["specialized","an"],"conditions some":["names"],"conditions stronger":["names"],"conditions that":["you're"],"conditions to":["reduce","predicates.","functions","not","be","make","contain"],"conditions you":["could"],"conditions, I":["should"],"conditions, I'm":["not"],"conditions, attached":["as"],"conditions, you":["could"],"conditions. It":["might"],"conditions. The":["problem"],"conditions. These":["general"],"conditions. What":["do","are"],"conditions`, but":["I"],"condp can":["take"],"condp with":["apply","apply"],"conds in":["response-for."],"confess I'm":["not"],"confident there":["won't"],"configuration from":["the"],"confine that":["logic"],"confirm that":["I'm"],"conform to":["conventions","the"],"confused after":["6"],"confused because":["the"],"confused by":["Clojure’s"],"confused to":["do"],"confuses the":["problem?"],"confusing (if":["42"],"confusing -":["at"],"confusing and":["opted"],"confusing but":["it"],"confusing here.":["It"],"confusing part":["for"],"confusing than":["helpful."],"confusing to":["me.","someone"],"confusing, but":["you've"],"confusing, though,":["and"],"confusing. Most":["of"],"conj are":["pretty"],"conj)`. Map":["itself"],"conj, lik":["`(comp"],"conjunction with":["something"],"connection to":["use"],"connotation of":["a"],"conscious choice.":["As","All"],"consciously trying":["to"],"consequent clause":["on"],"conservative in":["what"],"consider \"OK.\"":["etc."],"consider [`let`](http://clojuredocs.org/clojure_core/clojure.core/let)":["to"],"consider `format`":["to"],"consider abstracting":["out"],"consider an":["alternative"],"consider approach":["that"],"consider breaking":["each","up"],"consider defining":["vars"],"consider extracting":["some"],"consider factoring":["the"],"consider giving":["names","your"],"consider having":["helper","`anagram-of?`"],"consider hiding":["the"],"consider if":["all","all","those"],"consider is":["making","replacing","to","using","using"],"consider it":["a","worthwhile.","to","worth","shouting"],"consider it,":["no."],"consider it.":["At"],"consider letting":["their"],"consider making":["the","the","the","`silence?`","`question?`","the","part","a","functions"],"consider moving":["the"],"consider pulling":["out"],"consider rearranging":["the"],"consider reducing":["processing","the"],"consider refactoring":["those"],"consider replacing":["comments","your"],"consider some":["cases"],"consider switching":["out"],"consider the":["option","case","visibility","use"],"consider this":["good"],"consider this,":["I"],"consider using":["clojure.string/replace?","`:require`","`silent?`","a","a","upcase","`cond`","the","`cond`","`dec`","the","`:require`","`re-seq`","list","`cond`","`last`","str.blank?","(=","(last)","```clojure.string/blank?```","higher","the","2-space","`when-not`","the","a","the"],"consider using```(ns":["bob"],"consider would":["be"],"consider writing":["functions"],"consider, rather":["than"],"consider: `:as":["str`"],"considerably difficult":["to"],"consideration --":["what","what"],"consideration, however":["that's"],"considered a":["factor","shout."],"considered alternatives":["to","to"],"considered bad":["practice"],"considered breaking":["`(str/replace"],"considered de-composing":["even"],"considered defining":["private","vars","a","vars","a","a"],"considered deprecated":["in"],"considered dropping":["the"],"considered extending":["the"],"considered for":["doing"],"considered good":["practice"],"considered letting":["descriptively"],"considered looking":["for"],"considered more":["idiomatic.","idiomatic."],"considered moving":["the","the"],"considered normalizing":["before","prior"],"considered other":["control"],"considered private":["functions"],"considered requiring":["`clojure.string`","the"],"considered shouting.":["For"],"considered simply":["upper-casing"],"considered that":["the","option"],"considered that,":["but"],"considered the":["[condition"],"considered to":["be"],"considered transliteration":["at"],"considered upper":["case","case)"],"considered using":["upper-case","one","`re-seq`","the","`last`","the","the","descriptive","`cond`","```clojure.string/blank?```"],"considered whitespace":["and"],"considered yelling,":["let's"],"considering would":["be"],"considers [1":["2"],"consist of":["unicode"],"consistency and":["readability"],"consistency stems":["from"],"consistency, as":["they"],"consistent for":["me","some"],"consistent here.":["Otherwise,"],"consistent in":["formatting"],"consistent level":["of"],"consistent regarding":["the"],"consistent tie-in":["with"],"consistent with":["the","naming","your","treating","the","what's"],"consistent, it":["would"],"consistent. Second,":["a"],"consolidate beverage":["type,"],"constant (and":["a"],"constant -":["that"],"constant definition":["looks","only"],"constant even":["in"],"constant factor":["stuff"],"constant first":["makes"],"constant for":["this","bad"],"constant in":["this"],"constant is":["the","in"],"constant or":["something?"],"constant string":["or"],"constant strings":["adds"],"constant valid-nucleotides":["introduced."],"constant\" parameter":["first"],"constant\"? Something":["like"],"constant, and":["is"],"constants `\"T\"`":["and"],"constants `\\T`":["and"],"constants ```\\T```":["and"],"constants and":["see"],"constants are":["removed"],"constants first":["makes"],"constants for":["sets"],"constants in":["front"],"constants instead":["of"],"constants is":["recommended"],"constants should":["go"],"constants thymine":["and"],"constants to":["make","make"],"constants use":["in"],"constants with":["domain"],"constants\" means":["in","in"],"constants, I":["would"],"constants, literals":["would"],"constants, so":["it's"],"constitutes a":["word?)"],"constraints `Calendar`":["is"],"construct :)":["This"],"construct an":["instance"],"construct in":["`anagrams-for`"],"construct the":["frequencies/alphagram"],"construct you":["have"],"construct. Is":["there","there"],"construct. Probably":["misunderstood"],"construct. There's":["wide"],"constructed a":["string"],"constructing the":["strings"],"construction seems":["kind","kind"],"constructor function":["and"],"constructor invocation,":["not"],"constructors and":["accessors"],"constructs in":["their"],"consult the":["docs,","clojure"],"consumer of":["code"],"consuming stack":["space","space"],"contain `silence?`,":["`shouting?`,"],"contain a":["`set`","map"],"contain at":["least"],"contain only":["\\A,"],"contain references":["to"],"contain the":["characters","values","details."],"contain x\"*.":["In"],"contained within":["the"],"containing 12":["assertions."],"containing 14":["assertions."],"containing a":["set","string."],"containing the":["constant"],"contains `:name`":["attribute,"],"contains `blank?`":["predicate"],"contains changes":["from"],"contains correct":["characters?"],"contains only":["whitespace.","whitespace."],"contains other":["information"],"contains was":["redundant."],"contains-ucase-chars without-lcase-chars)`":["where"],"contains-x` pretty":["intuitively,"],"contains? since":["the"],"content of":["the"],"content))` is":["probably"],"contents are":["equal.","equal.","equal."],"context (external":["specification,"],"context (no":["access"],"context (single":["file"],"context -":["does"],"context and":["it"],"context and/or":["personal"],"context here":["of"],"context if":["you"],"context is":["something"],"context it":["could"],"context of":["this","biology,","surrounding","surrounding","surrounding","the","fiddling","timezones.","a","exercism.io","hearing","threading,"],"context one":["can"],"context right,":["but"],"context so":["that"],"context specific,":["that"],"context where":["you"],"context). It":["will"],"context, but":["I"],"context, like":["message"],"context. Can":["you","you"],"context? I":["don't"],"contexts where":["it"],"continue this":["path,"],"continuing over":["this,"],"continuous ranges.":["This"],"contract, not":["an"],"contract, you":["can"],"contracts utlizing":["pre"],"contrib has":["a"],"contribute much":["to"],"contributing either":["way."],"control flow;":["maybe"],"control structure":["than"],"control structure)":["instead"],"control structures":["besides"],"control the":["ordering"],"control. I":["often"],"control. It":["was"],"convencience reasons":["when"],"convenience method":["for"],"convenient function":["in"],"convenient to":["deal"],"convenient utilities":["from"],"conveniently, a":["function)"],"convention and":["style."],"convention for":["the"],"convention functions":["that"],"convention in":["the"],"convention is":["to"],"convention on":["this"],"convention to":["end"],"convention, but":["generally"],"conventional `cond`":["form,"],"conventional in":["Clojure."],"conventional to":["have"],"conventions :)":["Thanks!"],"conventions can":["be"],"conventions for":["bob's"],"conventions please":["refer"],"conventions, old":["Java"],"conversation or":["dialogue?"],"conversion between":["a"],"conversion function":["that"],"conversion in":["two"],"conversion into":["a"],"conversion is":["needed"],"conversion methods,":["so"],"conversion needed)":["so","and"],"conversion to":["the"],"conversion. I've":["put"],"conversions and":["simplify"],"convert DNA":["nucleotides"],"convert a":["sequence","sequence"],"convert back":["to"],"convert booleans":["to"],"convert each":["character","character."],"convert is":["to"],"convert it":["to","to","to"],"convert nil":["into"],"convert result":["back"],"convert resulting":["list"],"convert strings":["to"],"convert the":["strings","`sorted-lowered`"],"convert to":["characters","uppercase"],"convert without":["using"],"converting between":["GregorianCalendar"],"converting matched":["pairs"],"converting the":["bin-digit","individual","string."],"converting to":["upper","upper","a"],"converts a":["sequence"],"conveys meaning":["and"],"convince them,":["my"],"convinced about":["`any-ucase-chars`"],"convinced me":[":)"],"convinced that":["`(.endsWith"],"convo \"?\")```":["for"],"convo) \\?)```":["rather"],"convoluted to":["me."],"convoluted validity":["check"],"cool and":["all"],"cool as":["is."],"cool since,":["well,"],"cool to":["explore"],"cool! I":["like"],"cool. Can":["you"],"cool. However,":["did"],"cool. I":["went"],"coordinates (turn-left":["bearing)))"],"coordinates or":["bearings"],"coped with":["more"],"copied out":["of"],"copies of":["data"],"copy-and-pasting them":["all"],"copy-paste effect":[":)"],"copy/pasted that":["I"],"copying the":["logic"],"core Clojure":["functions","method","method"],"core abstraction":["which"],"core bindings":["from"],"core clojure":["function","function","function","function","function","function","which","function","function","function","function","function","function","function","function","function,"],"core function":["I've","I've","count."],"core functions":["to","alone"],"core functions.":["I"],"core library":["is","and"],"core namespace":["for"],"core objects.":["Second,"],"core predicates":["like"],"core that":["can"],"core to":["do"],"core, you":["can"],"core-list}] as":["a"],"correct (even":["if"],"correct `ns`":["for"],"correct form":["inside"],"correct format?":["This"],"correct given":["an"],"correct nucleotides.":["This"],"correct on":["this?"],"correct response":["for"],"correct that":["they're"],"correct the":["formatting","`vec`"],"correct, come":["back"],"correct. Is":["there"],"correct. Thanks":["for"],"correct. The":["reason"],"correct.. thanks.":["re-submitted"],"correct? I":["am"],"correcting me":["-"],"correctly that":["would"],"correctly to":["any"],"correctly, :use":["will"],"correctly, there's":["no"],"correctly, you":["could"],"corresponding RNA":["nucleotide"],"cost at":["runtime."],"cost but":["the"],"cost is":["not"],"cost of":["a","what"],"costs and":["it"],"could (it":["helpfully"],"could Code":["Golf"],"could I":["miss"],"could `(remove":["identity"],"could `def`":["the"],"could `filter`":["the"],"could `reduce`":["across"],"could accept":["character"],"could actually":["even","make"],"could add":["an","some","another"],"could also":["use","help","think","be","reverse","reduce","use","use","give","reorder","use","take","try","do","use","get","apply","use","use","just","fold","use","look","try","use","try","look","then","use","be","create","be","look"],"could alternatively":["be"],"could always":["write"],"could apply":["to"],"could argue":["bout."],"could arrange":["it"],"could avoid":["using","having"],"could be":["simpler.","interpreted","a","reused","shortenedup.","cases","simpler?","extracted","more","a","done","a","even","improved","a","improved","reduced","confusing,","a","used","still","moved","`update-in`","hidden","processed","given","a","inlined","done","expressed","made","swapped","laid","useful","extracted","then","moving","accomplished","just","to","reused","solved","beta","used","slimmed","simplified","both","used","expanded","improved.","pulled","simplified","written","split","just","simplified","replaced","done","reduced","combined","used","simpler","derived","simpler","simplifed","named","used","done","implemented","significant.","negative.","just","simplified.","`(=","done","simpler.","simplified"],"could be.":["Maybe"],"could benefit":["from","readability.","from"],"could bind":["inflection"],"could blend":["`paired-elements`"],"could break":["this","it"],"could build":["it"],"could call":["(grade)"],"could certainly":["write"],"could change":["to","your"],"could check":["how","out"],"could clear":["it"],"could combine":["lines"],"could compose":["`not-same?`"],"could confirm":["that"],"could consider":["making","using","hiding","using","making","making","making","rearranging","using"],"could consider,":["rather"],"could contain":["a","`silence?`,"],"could create":["two","groupings","functions","bindings","a","a","a","a","your"],"could declare":["T","var"],"could define":["`\\T`","a","\u003ccode\u003everify-dna\u003c/code\u003e"],"could definitely":["use","be"],"could delete":["failing"],"could directly":["map"],"could ditch":["the"],"could do":["a","this","just","`(map","the","as","to","something","if","the","that"],"could drop":["`str`","the"],"could e.g.":["define"],"could easily":["be","add"],"could either":["alias"],"could eliminate":["the","the"],"could enhance":["legibility","readability"],"could even":["arrange","get"],"could explain":["the"],"could express":["the"],"could extract":["the","the","a"],"could figure":["out"],"could filter":["the"],"could fix":["the"],"could get":["rid","with","rid","working","the","used","the","different","rid","rid","rid"],"could go":["either","either","either"],"could greatly":["reduce"],"could group":["the"],"could guess":["my","my"],"could happen":["is"],"could have":["used","just","approached","even","adjusted","been","used","renamed","used","changed","been","solved"],"could help":["you","simplify","with"],"could help,":["but"],"could imagine":["that"],"could immediately":["handle"],"could implement":["frequencies","some","this"],"could import":["some"],"could improve":["on","your"],"could include":["using"],"could inline":["everything"],"could introduce":["some"],"could join":["the"],"could just":["use","use","bind","settle","use","make","combine","make","use","use","name","make","be","user","make","inline"],"could lead":["to"],"could learn":["how","more"],"could look":["at","like","at","into","at"],"could maintain":["the"],"could make":["a","the","this","use","the","use","use","the","the","inspect-phrase","this","it","the","this","a","the","it","it","use","them","it","`word-count`","use","use","use","a","the"],"could more":["directly"],"could move":["into"],"could not":["think","use"],"could omit":["\u003ccode\u003eis-\u003c/code\u003e"],"could only":["calculate","compute"],"could optionally":["use"],"could possibly":["make","allow"],"could potentially":["drastically","return"],"could probably":["assign","use","use","declare","use","be","get","vastly","be","just"],"could put":["\u003ccode\u003e?\u003c/code\u003e"],"could really":["get","just"],"could reduce":["the","the","the","the","repetition"],"could refactor":["it","the"],"could refactorize":["it"],"could rename":["that"],"could replace":["cond","`empty-message?`."],"could require":["`blank?`","in"],"could return":["the"],"could reuse":["`nothing?`"],"could rewrite":["```(subs"],"could search":["for"],"could see":["that.","that","how"],"could shorten":["`string/replace`"],"could simplify":["`shouted`","this"],"could simply":["map"],"could spare":["the","yourself","you","the"],"could specify":["`(take"],"could split":["operations"],"could suggest":["is","would"],"could then":["use","pull"],"could think":["about"],"could to":["be"],"could try":["`(-››","to","having","having","a"],"could turn":["`{\\T"],"could use":["?","some","`last`","`empty?`","the","`n-bottles`","`-&gt;&gt;`","get","`:require`","symbols.","`memoize`?","```first``","`clojure.string/lower-case`.","isLetterOrDigit","a","here","Java","`partial`","reduce","threading","```(split","[`clojure.string/blank?`][1]","clojure.string/blank?","`clojure.string/blank?`","short-circuitring","`case`","clojure.string/blank?","that","a","`(int","with","destructuring",":refer","'?'","names","an","re-match","the","`nucleotide-counts`"],"could verify":["assumptions"],"could we":["eliminate"],"could work":["here"],"could wrap":["in"],"could write":["something","functions","`(str/replace"],"could you":["elaborate","get","minimize","bit","make","consider","please","go","please"],"could've swore":["there"],"could, but":["I"],"couldn't -":["a"],"couldn't be":["possibly"],"couldn't create":["another"],"couldn't extract":["parts"],"couldn't figure":["out","one","out","it"],"couldn't find":["it,","any","it.","anything.","the"],"couldn't get":["down","this"],"couldn't quite":["figure","get"],"couldn't use":["something","map"],"couldn't work":["out"],"couldn't you":["get","possibly","use"],"count Uracil,":["will"],"count `\\U`,":["because"],"count as":["words.","yelling","true","true,"],"count but":["could"],"count down":["in"],"count down.":["That"],"count from":["the"],"count function":["by"],"count function.":["Also"],"count how":["many"],"count is":["case"],"count map":["and"],"count numbers":["of"],"count of":["one","zero?"],"count should":["use"],"count something":["like"],"count that":["I"],"count the":["distinct"],"count to":["generate","be"],"count truthy":["values"],"count which":["is"],"count, and":["not","assert"],"count, but":["at"],"counted as":["a"],"counted in":["`nucleotide-counts`."],"counter argument":["that"],"counter. However,":["if"],"counting occurrences":["by"],"counting process,":["yet"],"counting twice":["the"],"counting. I":["finally"],"counting. Neat":["idea!"],"counts for":["missing"],"counts into":["a"],"counts just":["to"],"counts map":["is"],"counts returned":["include"],"counts there.":["I"],"counts, frequencies":["can"],"couple fewer":["keystrokes"],"couple final":["nits:"],"couple keystrokes.":["You"],"couple lets":["and"],"couple minor":["gripes:"],"couple of":["minor","minor","features","extras","reasons","styling","minor","people","functions.","observations","small","key","things","suggestions,","suggestions:","\"declarative\"","calls","nested","things","other","things","things","them"],"couple questions":["to"],"couple refactorings":["and"],"couple things":["you","of"],"couple useful":["functions"],"coupled in":["the"],"coupled to":["the"],"coupled with":["it."],"coupling between":["the"],"course does":["not"],"course have":["to"],"course if":["the","you","you"],"course it":["comes"],"course mindful":["organization"],"course of":["the"],"course that's":["seems"],"course there":["are"],"course this":["would"],"course what":["you've"],"course) would":["help"],"course, I":["needed"],"course, ```default?```":["isn't"],"course, any":["other"],"course, but":["I","parsing","it's"],"course, in":["the"],"course, thank":["you"],"course, the":["style"],"cover 1.3":["so"],"cover any":["corner"],"cover everything":["else."],"cover more":["of"],"cover that":["condition"],"cover the":["basics","intended","else"],"covered already,":["you"],"covered by":["Bob"],"covering all":["of"],"covers everything":["else"],"covers questions.":["The"],"covers shouting,":["a"],"covers silence,":["one"],"covers the":["special"],"crammed into":["a","`number`","the"],"crap I":["can't"],"crap that's":["ugly."],"craw. Or":["you"],"crazy about":["my"],"crazy amount":["from"],"crazy. I'm":["still"],"create Vars":["bound"],"create `*":["2`"],"create a":["private","helper","so","module","really","separate","private","more","lazy","function","general","set","new","new","Var","function","separate"],"create another":["map"],"create bindings":["with","for","for","with","that"],"create defines":["for"],"create functions":["that"],"create groupings":["so"],"create lexical":["bindings"],"create private":["version"],"create separate":["functions"],"create similar":["methods"],"create two":["mappings,"],"create valid":["strings"],"create with":["the"],"create your":["Mercury"],"created `def`s":["for"],"created a":["new"],"created by":["shuffling"],"created the":["first"],"creates a":["map."],"creating a":["simple","global","method","frequency","function.","partial","new"],"creating an":["intermediate"],"creating bindings":["for","in","with"],"creating meaningful":["names"],"creating more":["meaningful"],"creating my":["pairs,"],"creating the":["functions"],"creation (see":["my"],"creation multiple":["times."],"creative solution":[":)"],"creatively think":["of"],"credit to":["you"],"credit using":["multimethods."],"crisp, I":["like"],"critical and":["rather"],"criticisms! Honestly":["this"],"criticizing my":["code!"],"critique. I":["will"],"crowded to":["me."],"cruft after":["refactoring."],"crystal clear":["about"],"curious about":["the","when"],"curious how":["well"],"curious to":["what"],"curious why":["you"],"curly-brace languages,":["putting"],"current `question?`":["function"],"current code":["or"],"current context":["(no"],"current count/re-seq":["solution."],"current implementation":["has"],"current namespace":["(if","so"],"current namespace,":["not"],"current namespace.":["What"],"current problem.":["Can"],"current set":["of"],"current solution":["depends"],"current solution.":["I"],"current value":["stored","of"],"current values":["if"],"currently *assigned*":["word"],"currently dependent":["on"],"currently deprecated":["and"],"currently deprecated.":["The"],"currently isn't":["the"],"currently makes":["perfect"],"currently require":["this"],"currently the":["`response-for`"],"currently this":["would"],"currently trying":["that"],"currently you're":["unable"],"currently, there's":["nothing"],"currying (like":["Haskell,"],"currying happens":["automatically,"],"currying in":["particular"],"currying is":["explicit"],"currying was":["explicit"],"currying with":["`partial`."],"currying... it":["would"],"custom to":["place"],"customary to":["name"],"customer has":["just"],"customer if":["they"],"customer is":["a"],"cut my":["teeth","teeth"],"cut the":["code"],"cuts down":["significantly","on"],"cycles of":["\"ACTG\""],"cytidine guanosine":["thymidine"],"cytosine **C**":["with"],"c} set,":["I"],"dabbling a":["bit"],"dangerous. So":["far,"],"dare you,":["I"],"dashes for":["variables:"],"data and":["call"],"data are":["tightly"],"data flowing":["from"],"data flows":["through"],"data in":["more"],"data is":["used","only"],"data representation":["from"],"data structure":["is","expands."],"data structure'":["to"],"data structure.":["This"],"data structure?":["Generally"],"data structures":["in",":P","(like","when"],"data structures\".":["Thank"],"data structures),":["may"],"data structures.":["Other"],"data transforming":["operations"],"data using":["a"],"data we're":["dealing"],"data\" (i.e.":["homoiconicity"],"data-driven MVP.":["Worth"],"data-driven approach":["with"],"data-driven than":["[#4](http://exercism.io/submissions/52365b5d658d2387560000a1),"],"data. Still":["wish"],"data. Test":["data"],"database in":["place"],"datatype extends":["IFn"],"date handling":["is"],"date manipulation":["than"],"date ranges":["makes"],"date support":["in"],"date. If":["you"],"date/time arithmetic":["with"],"dated but":["still"],"dated, it":["still"],"dates is":["horrendous,"],"day I":["tried"],"day and":["as","they"],"day of":["the"],"day that's":["in"],"day to":["day"],"day, ANOTHER":["attempt"],"day-job which":["is"],"day-map) range-name":["['first"],"day. And":["your's"],"daylight saving":["time"],"days ago,":["and"],"days could":["be"],"days of":["the"],"days. Oh":["well?"],"db [score]":["(comp","(fn"],"db grade":["[])"],"db-names-sorted)`. Not":["that"],"db-names-sorted: nice":["trick!"],"de facto":["standard"],"de-composing even":["more"],"deal but":["if"],"deal by":["using"],"deal with":["strands"],"deal, and":["I"],"deal, but":["something"],"dealing badly":["with"],"dealing with":["that","letters","the","a"],"dealing with,":["but"],"debatable but":["as"],"debated whether":["it"],"debug the":["literally"],"debug this":["for"],"decent amount":["of","of"],"decide to":["live"],"decided I":["won't"],"decided I'd":["generate"],"decided against":["it"],"decided not":["to,","to","to","to"],"decided that":["the","I","I"],"decided the":["benefits"],"decided to":["use","do","pull","use","separate","stick","use","remove","invert","use"],"decidedly non-trivial":["with"],"decides what":["the"],"deciding on":["the"],"decipher at":["first"],"decipher it":["without"],"decipher the":["meaning."],"decipher why":["each"],"deciphering code":["in"],"decision between":["calling"],"decisions about":["how"],"declaration (see":["the"],"declaration directly":["in"],"declaration may":["be"],"declaration so":["something"],"declaration to":["shorten"],"declaration with":["your"],"declaration you":["have."],"declaration, just":["an"],"declaration, you":["can"],"declarations in":["the"],"declarations inside":["`ns`"],"declarations so":["that"],"declarations to":["keep"],"declarative indeed":[":)"],"declarative mini-language":["and"],"declarative nature":["of"],"declare T":["and"],"declare `query-type`":["as"],"declare a":["function"],"declare helper":["functions"],"declare on":["the"],"declare the":["function"],"declare them":["as","with"],"declare var":["for"],"declare your":["helper"],"declare, it's":["great."],"declare. Looks":["great"],"declared as":["private"],"declared before":["their"],"declared in":["it's"],"declared in.":["In"],"declared these":["helpers"],"declared your":["namespace"],"declaring a":["regex."],"declaring functions":["etc).","in"],"declaring public":["and"],"declation form.":["The"],"declutter the":["code..."],"decode a)":["the"],"decomposed this":["problem."],"decomposition which":["makes"],"decomposition. For":["each"],"decouple the":["string"],"decouples ```question?```":["from"],"decoupling of":["the"],"decrease readability,":["but"],"decrease the":["length"],"decrementing values":["by"],"decrements each":["value"],"decried as":["too"],"decried me":["for"],"dedicated functions":["in"],"deem it":["optional."],"deem the":["#()"],"deep Clojure":["experience"],"deep domain":["renaming"],"deep into":["Clojure.","```anagram.anagrams-for```'s"],"deep nesting":["where"],"deep thought.":["It's"],"deeply nested":["code","function"],"def and":["defn","defn"],"def as":["seban"],"def rather":["than"],"def to":["be"],"def/defn forms":["alter"],"default argument":["for"],"default behavior":["really","is","would"],"default but":["got"],"default case":["or"],"default condition":["here","in"],"default expression":["(the"],"default is":["last)."],"default map":["creation"],"default response":["of"],"default response,":["at","based","but"],"default should":["be"],"default value":["for","instead","`{}`","for","is","is","so"],"default value,":["but"],"default, not":["the"],"default-respnse -\u003e":["default-respOnse"],"defaulted it":["to"],"defcheck [name":["args"],"define \"magic":["numbers\""],"define (maybe":["private)"],"define \u003ccode\u003everify-dna\u003c/code\u003e":["*below*"],"define `\\T`":["and"],"define `count`":["than"],"define `dna/count`":["without"],"define a":["function","regex","constant","local"],"define dna-re-pattern":["and"],"define every":["function"],"define everything":["except"],"define function":["scoped"],"define functions":["that"],"define it":["as"],"define local":["names"],"define other":["functions"],"define some":["vars"],"define the":["functions","values","main"],"define them":["as","*inside*","like"],"define things":["at"],"define top-level,":["non-public"],"define two":["expressions"],"define variables":["for"],"define vars":["to","to","to","and"],"define verses;":["couldn't"],"define what":["the"],"define your":["method"],"define, but":["the"],"defined (The":["weird"],"defined a":["`statement?`?"],"defined as":["a"],"defined by":["the"],"defined for":["sequences."],"defined here":["in"],"defined in":["the","the","a","terms","the"],"defined or":["declared"],"defined to":["help"],"defined values":["to"],"defined what":["an"],"defined your":["own"],"defined, so":["this"],"defined. Then":["a"],"defined. e.g.":["`bob/is-silence`"],"defines a":["private"],"defines for":["`\\U`"],"defining ```split```":["and"],"defining `dist`.":["Or"],"defining `question?`":["as","in"],"defining `thymine`":["and"],"defining a":["var","var","var","function","top","function"],"defining all":["the"],"defining another":["mapping"],"defining functions":["that"],"defining functions.":["For"],"defining in":["that"],"defining named":["functions"],"defining one":["function,"],"defining private":["vars"],"defining some":["special"],"defining the":["helper","step","alphabets"],"defining them":["one"],"defining these":["functions"],"defining vars":["with","with","with"],"defining what":["`\\T`"],"defining your":["own"],"definitely a":["Clojure","better"],"definitely be":["cleaned","simplified."],"definitely factorize":["things"],"definitely falls":["under"],"definitely getting":["more"],"definitely going":["in"],"definitely help":["with"],"definitely idiomatic":["in"],"definitely in":["the"],"definitely increases":["the"],"definitely is":["more"],"definitely keep":["that"],"definitely like":["the"],"definitely look":["into"],"definitely missing":["a"],"definitely more":["readable!"],"definitely not":["necessary","surprised","a","as"],"definitely possible":["to"],"definitely prefer":["it."],"definitely preferred":["though."],"definitely should":["use"],"definitely simpler":["then."],"definitely think":["the"],"definitely tidy":["things"],"definitely use":["`clojure.string/blank`."],"definitely works.":["You"],"definition `anagrams-for`.":["Tell"],"definition for":["split,"],"definition in":["clojure"],"definition looks":["ugly"],"definition of":["an","the","what","each","`to-rna`","(yelling?).","Hamming","`:scalene`"],"definition only":["in"],"definition, it's":["better"],"definition. Basically,":["it's"],"definition. But":["the"],"definition. Define":["variable"],"definition. I":["like"],"definitions (and":["`defn-`"],"definitions are":["order"],"definitions but":["not"],"definitions for":["later."],"definitions in":["a"],"definitions look":["\"funny\""],"definitions of":["thymidine"],"definitions per":["recommendations"],"definitions rather":["than"],"definitions so":["that"],"definitions that":["you"],"definitions with":["public","the"],"definitions, so":["that"],"definitions. This":["should"],"definitive accepted":["style"],"defmacro here":["would"],"defmethod understands":["the"],"defn always":["affect"],"defn for":["`response-for`?"],"defn instead":["of","of"],"defn isn't":["a"],"defn on":["a"],"defn to":["define"],"defn you":["are"],"defn's –":["this"],"defn- can":["be"],"defn- for":["the"],"defn- form":["instead"],"defn- which":["is"],"defn-. They're":["pure"],"defn. So":["I"],"defrecord. Also":["simplified"],"defresponse [check":["response]"],"defs as":["well."],"defs to":["give"],"defs would":["be"],"degree angle.":["But,"],"degree of":["uniqueness","uniqueness."],"deign to":["bind"],"delay. Thanks":["for"],"delegating to":["a"],"delete a":["iteration"],"delete failing":["submissions"],"delete this":["somehow?"],"delighted if":["you'd"],"delighted to":["finally","find"],"delimited names":["are"],"delimited, a":["much"],"delimited. As":["for"],"delimiter) which":["you"],"delimiters, how":["many"],"delivered it.":["Agree"],"demonstrates the":["composability"],"demonstrations of":["logic"],"denied it":["later)"],"denote the":["conditions?"],"dense with":["lots"],"depend on":["count","the","`silence?`.","Clojure's","the"],"dependant on":["the"],"dependent on":["the","the"],"depending on":["the","the"],"depends on":["how"],"depends on.":["Would"],"depends what":["functions"],"deplete the":["call"],"deprecated -":["use","use"],"deprecated and":["generally"],"deprecated at":["this"],"deprecated in":["the"],"deprecated so":["you"],"deprecated. Besides":["a"],"deprecated. For":["direct"],"deprecated. Please":["use","use"],"deprecated. The":["equivalent"],"deprecated. Use":["`require`."],"deprecated/discouraged http://dev.clojure.org/jira/browse/CLJ-879":["-"],"deprecated?! ok.":["I'm"],"deprecation. I":["concede:"],"depth and":["line"],"depth here,":["but"],"dereferencing r":["again."],"derived from":["your"],"describe a":["given"],"describe function":["assumptions"],"describe having":["usefully"],"describe it":["would"],"describe the":["part","real"],"describe what":["your","it's"],"described in":["a","more"],"describes in":["domain"],"describes the":["intent","intent","question"],"describes things":["like"],"describes what":["the"],"describing exactly":["what"],"describing the":["replacement","intent"],"description. It":["doesn't"],"descriptions in":["iteration2"],"descriptions of":["Hamming"],"descriptive after":["looking"],"descriptive argument":["name?"],"descriptive as":["possible."],"descriptive code.":["If"],"descriptive name.":["`parse`"],"descriptive names":["so","(remember","to","it","that","like","for"],"descriptive names.":["What","Take"],"descriptive private":["functions?"],"descriptive var":["name"],"descriptive variable":["name,","name,"],"descriptive variables":["for"],"descriptive, I":["like"],"descriptive, like":["`word`"],"descriptively named":["functions"],"design issues":["(although"],"design model,":["declaring"],"design more":["extensible"],"design patterns":["and"],"designed and":["thoroughly"],"desirable to":["explicitly","put","use"],"desirable. You":["could"],"desired, but":["it's"],"desperate to":["have"],"destructuring arguments":["(in"],"destructuring for":["my","maps."],"destructuring in":["argument","`exec-pattern`","your"],"destructuring instead":["of"],"destructuring is":["awesome!","super"],"destructuring to":["pick"],"destructuring. See:":["http://clojure.org/special_forms"],"destructuring: http://blog.jayfields.com/2010/07/clojure-destructuring.html":["."],"detail at":["the"],"detail into":["account."],"detail rather":["than"],"detail, but":["I"],"detail, not":["a","the"],"detail. I":["really"],"details (\"upper":["case\")."],"details bottom.":["If"],"details if":["they"],"details, and":["leave"],"details. This":["makes"],"detect a":["digit,","`9`."],"detect the":["first","presence"],"detecting this":["case"],"detection can":["also"],"determine how":["to"],"determine if":["a"],"determine patterns":["in"],"determine the":["type","response."],"determine what":["to"],"determine whether":["one"],"determined by":["the"],"determines whether":["a"],"determining whether":["one","a"],"deterministic way":["to","of"],"dev environment":["of"],"developed in":["a"],"developed writing":["Ruby:"],"developers we":["can"],"development -":["however"],"development environment,":["it's"],"diactrics. Either":["way,"],"diagonal from":["each"],"dialects that":["do"],"dialog for":["example."],"dictates what":["kind"],"dictionary (according":["to"],"dictionary. I":["suppose"],"did :)":[")"],"did a":["google","frequencies","bit","solution"],"did but":["it"],"did cause":["me"],"did combine":["the"],"did consider":["making","using"],"did everything":["except"],"did first":["but"],"did for":["the"],"did forget":["to"],"did have":["a"],"did in":["fact"],"did it":["in","automatically.","this","right?"],"did it,":["and"],"did mark":["it"],"did not":["know","know","know","write","\"feel\"","rearrange","pay","add","have","know","reflect","test","think"],"did notice,":["previously,"],"did overdo":["it"],"did see":["your"],"did some":["time","more"],"did something":["wrong"],"did that":["for","in","mainly"],"did that,":["but"],"did the":["same","exercise","javascript","**Refactor","same"],"did this":["pass","with","problem,","in","exercise,","with","exercise"],"did two":["transforms"],"did use":["the"],"did want":["to"],"did you":["find","know","just","choose","mean"],"did your":["`(="],"did. I":["would"],"didn' t":["see"],"didn't bother":["-"],"didn't consider":["it,","the"],"didn't do":["so","it"],"didn't even":["notice","know","consider"],"didn't explain":["this"],"didn't find":["it"],"didn't get":["approved.","how","a","it).","back"],"didn't go":["further","this","with"],"didn't have":["a","`defn-`."],"didn't knew":["that"],"didn't know":["about","about","about","about","about","about","that","that","about","about","about","about","about","about","that","about","what","it","about","about","better."],"didn't know.":["Thank"],"didn't like":["the"],"didn't make":["the","the","it","it"],"didn't match":["any","any","any"],"didn't mean":["to","to","to","to"],"didn't need":["to"],"didn't notice":["that.","that","it!"],"didn't occur":["to"],"didn't quite":["understand"],"didn't read":["the"],"didn't realize":["that","that"],"didn't really":["specify","like","like","care","think","make"],"didn't recognize":["is"],"didn't require":["defining"],"didn't run":["into"],"didn't see":["that","that.","that."],"didn't seem":["to","any"],"didn't start":["from"],"didn't support":["closures."],"didn't test":["that,"],"didn't think":["about","of","to"],"didn't try":["to"],"didn't want":["me","it"],"didn't work":["before."],"didn't work.":["Seems","I"],"didn't you":["follow","choose"],"didn't, I":["experimented"],"didnt' think":["of"],"difference (`name`":["is"],"difference between":["the","pipelining","this","string","version","`def`","the","these","your","`$`"],"difference for":["the"],"difference here,":["does"],"difference in":["spelling","this","performance"],"difference is":["that"],"difference though,":["since"],"difference, but":["it's","I","you"],"difference. Awesome":["stuff!"],"difference? For":["silence,"],"difference? I":["assume"],"differences between":["the"],"differences were":[":)"],"different abstraction,":["consider"],"different approach":["with"],"different because":["it"],"different choice":["of"],"different colors":["for","while"],"different conditional":["function"],"different definition":["for"],"different email":["address"],"different exercises":["and"],"different formatting":["because"],"different function":["seems"],"different ideas":["on"],"different languages":["-"],"different lengths).":["Since"],"different level":["of"],"different levels":["of","of"],"different mixtures":["of"],"different names":["for"],"different number":["of"],"different one":["and"],"different opinions":["of"],"different order":["to"],"different parts":["of"],"different pieces":["of"],"different place":["is"],"different places,":["I've"],"different question,":["or"],"different regex":["to","or","you","to"],"different response":["strings."],"different rules":["at"],"different strategies":["to"],"different than":["11.","the"],"different use":["of"],"different way":["to","to"],"different way.":["Now"],"different ways":["(although"],"different, it":["happens"],"differentiate different":["pieces"],"differentiate, say,":["the"],"differently -":["for"],"differently and":["achieved"],"differently cased":["words?"],"differently depending":["on"],"differently. I":["think"],"differs from":["the"],"difficult case":["in"],"difficult in":["any"],"difficult to":["guess","make","understand."],"difficult!), but":["I've"],"dig into":["it"],"dig it,":["and"],"dig pretty":["deep"],"dig through":["your","the"],"digestible pieces":["there?"],"digesting but":["really"],"digit into":["a"],"digit, it":["shouldn't"],"digits 0":["1)"],"digits and":["once"],"digits into":["a"],"digits makes":["the"],"digits of":["a"],"digits that":["could"],"digits) (+":["length"],"digits, which":["would"],"digits. I":["would"],"digits. So":["everything"],"dip into":["the"],"direct context":["of"],"direct import":["of"],"direct recursion":["to","to"],"direct than":["`split`."],"direct to":["do:"],"direction counts":[":)"],"directive to":["suppress"],"directly access":["mapped"],"directly as":["a"],"directly bring":["the"],"directly import":["symbol"],"directly in":["REPL","REPL,","`ns`","REPL.","the","the","the"],"directly into":["Java."],"directly map":["the","the"],"directly maps":["with"],"directly or":["make"],"directly rather":["than"],"directly relevant":["to"],"directly though,":["you"],"directly to":["something","the","`if`,"],"directly using":["`last`"],"directly with":["`(or","```(re-seq"],"directly without":["turning"],"directly write":["`(db"],"directly, like":["`(:a"],"directly, without":["deconstructing."],"directly, you":["can"],"directly. Again,":["that's"],"directly. I'll":["probably"],"directly. Otherwise":["this"],"dirty after":["submitting"],"dirty reaching":["into"],"disagree about":["regex."],"disagree on":["the","this"],"disagree that":["using"],"disagree with":["@armani's","the","using","@kiara"],"discard invalid":["nucleotides,"],"disclosure. I":["completed"],"disconnected or":["incorrect."],"discouraged in":["favor"],"discover `frequencies`":["in"],"discovered [:refer-clojure":[":rename"],"discovered `frequencies`":["in"],"discovered that":["defmethod"],"discovered the":["`frequencies`","\".add\""],"discuss is":["\"unnecessary"],"discussion on":["http://exercism.io/submissions/51fd9cf6df1d8bf5630000e1","http://exercism.io/submissions/51febc6b3f8cb9ba45000108","the","this"],"discussions and":["not."],"discussions are":["the","the"],"discussions at":["all."],"dislike making":["assumptions"],"dispatch is":["really"],"dispatch value":["so"],"dispatch, I":["could"],"dispatching on":["the"],"display of":["Clojure"],"disregards whitespace,":["so","so"],"distinct piece":["of"],"distinct sides":["is"],"distinction between":["questions"],"distinction might":["actually"],"distinguish between":["them."],"distracting noise":["in"],"distracts the":["reader"],"ditch the":["Date"],"dive deep":["into"],"dive into":["the"],"diverse code":["to"],"divided between":["using"],"diving into":["a"],"diving tour.":["Why"],"dna \\T":["\\U))","\\U)`."],"dna and":["rna","rna"],"dna grows,":["this"],"dna markers":["and"],"dna nucleotide-to-replace":["dna-to-rna-map))"],"dna sequence":["and","even"],"dna sequence.":["I've"],"dna strand":["are"],"dna strand.":["I've"],"dna strands":["with"],"dna string":["into"],"dna strings":["to"],"dna to":["rna"],"dna without":["the"],"dna))` to":["stitch"],"dna)` is":["not"],"dna)`. Also,":["you"],"dna)`. This":["would"],"dna-&gt;rna, but":["fulfilling"],"dna-namespaced functions":["might"],"dna-re-pattern and":["don't"],"dna-rna though…":["Naming"],"dna-rna-map which":["is"],"dna-seq \"T\"":["\"U\")))","\"U\")))","\"U\")))","\"U\")))","\"U\")))","\"U\")))"],"dna-seq (apply":["str","str"],"dna-seq (take":["10000000","10000000"],"dna-seq is":["a"],"dna-seq would":["be"],"dna-sequence \"T\"":["\"U\"))"],"dna-string #\"T\"":["\"U\")"],"dna-string) nucleotide)`":["Doesn't"],"dna-to-rna-lut and":["to-rna."],"dna-to-rna-lut can":["already"],"dna-to-rna-map {\"T\"":["\"U\""],"dna/count in":["the"],"dna\u003e (def":["dna-seq","dna-seq"],"dna\u003e (time":["(def","(def","(def","(def","(def","(def"],"do \"rainbow\"":["parens"],"do (.endsWith":["message"],"do (frequencies":["words)"],"do -":["but"],"do I":["get"],"do `#(=":["%"],"do `(map":["keyword)`"],"do `(partial":["anagram?"],"do `(range":["(int","start"],"do `=`":["and"],"do `[^\\w]+`":["or"],"do `remove-consecutive-space`,":["`remove-special-char`,"],"do a":["exercism","\"simple\"","case","string","`cond`","check","`present?`","(not","replace.","literal"],"do about":["it"],"do accomplish":["this"],"do agree":["with"],"do almost":["all"],"do and":["b)"],"do another":["iteration"],"do anything":["about"],"do as":["you"],"do assert":["in"],"do at":["the","some"],"do better":["here:"],"do conditional":["in"],"do consider":["it"],"do date/time":["arithmetic"],"do decouple":["the"],"do define":["a","a"],"do dynamically":[".set"],"do efficiently":["in"],"do everything":["with"],"do for":["input","me"],"do forward":["declarations!"],"do have":["some","a"],"do if":["the","you"],"do in":["a","your","Clojure"],"do into.":["e.g."],"do is":["reverse","trading","replace","`(apply","just"],"do it":["in","in","this","in","properly,","?","all","this","with","in","once.","right","all!","as","myself.","with","that"],"do it,":["I","but"],"do it.":["I"],"do just":["about","with"],"do know":["about"],"do like":["`contains-char?`,","you've"],"do most":["of","of"],"do much":["about"],"do not":["run","need","think","want","use","use","clash.)","look","find","really"],"do nothing":["more"],"do nucleotides":["have"],"do on":["this"],"do once,":["not"],"do one":["thing","regex)."],"do or":["is"],"do other":["nitpickers"],"do people":["think"],"do plan":["to"],"do prefer":["the"],"do readability":["any"],"do regex,":["count,"],"do see":["the"],"do simple":["string"],"do since":["the"],"do so":["led","for","as"],"do so.":["I"],"do some":["clojure","of","sort","of"],"do something":["about","like","useful","about","like","like","else"],"do somthing":["like"],"do split-words":["without"],"do stick":["with"],"do stuff":["with"],"do take":["your"],"do that":["given","at","refactoring","sort","but","-","instead"],"do that,":["defining","you"],"do that.":["I"],"do the":["conditional","transformation,","trim","same","work.","conversion","same","same","work","job?","same","last","bulk","validation","validation","transformation.","split","split,","number"],"do they":["do,","represent?"],"do things":["like","in","in"],"do think":["a","it","using","that"],"do this":["in","would","all","using","that's","with","long","with","for","as","without"],"do this.":["I","But","Some","I"],"do to":["that","convert","make","avoid"],"do use":["a"],"do want":["to","to"],"do we":["fix?","address"],"do what":["`consider`","you"],"do when":["I'm"],"do with":["that.","quality.","this","this","that","my","the","clojure."],"do without":["any"],"do you":["think?","think","think","think","think","think?","think","think","prefer","mean","think","think","feel?","have","think","think","think?","think","think?","think?","think?","think","mean","think?","think?","think","mean","put","put","think","mean","think","think","have","organize","think?","think?","think?","think","need","feel","still","think?","think,","need"],"do, be":["liberal"],"do, but":["I'd","that's"],"do, especially":["in"],"do, not":["how?"],"do, so":["it"],"do, thanks.":["Please"],"do, you":["can"],"do. (plus":["it's"],"do. Atoms":["are"],"do. Check":["out"],"do. Making":["sure"],"do. You":["could"],"doc string":["or","after"],"doc string,":["it"],"doc strings":["and","for","on"],"doc-strings before":["the"],"docs (http://clojuredocs.org/clojure_core/clojure.string/blank_q),":["```clojure.string/blank```"],"docs and":["everything,","thought"],"docs for":["the"],"docs have":["an"],"docs now":["=)"],"docs on":["that."],"docs, \"Use":[":use"],"docs, I":["guess."],"docs. Characters":["work"],"docstring (text":["in"],"docstring but":["expanded"],"docstring etc.)":["you"],"docstring for":["this"],"docstring or":["auxiliary","metadata"],"docstring to":["accompany"],"docstring, these":["abbreviations"],"docstring. I":["went"],"docstring. It's":["optional"],"docstring. Things":["snowballed"],"docstrings from":["the"],"docstrings rather":["than"],"docstrings to":["your"],"docstrings, changed":["the"],"documentation and":["discovered"],"documentation does":["it."],"documentation for":["how","regular","you.","the"],"documentation of":["the"],"documentation would":["suffice."],"documentation, puts":["the"],"documenting functions,":["and"],"documenting, either":["by"],"documents what":["the"],"does Bob":["already"],"does `sanitize-string`":["really"],"does a":["ton","good"],"does actually":["check"],"does basically":["the"],"does call":["lower-case"],"does clojure":["provide?"],"does cover":["1.3"],"does drive":["me"],"does exactly":["what","what's","what"],"does have":["(sort-of)"],"does help":["readability,"],"does here,":["though."],"does in":["Haskell,","`word-count`"],"does is":["a)"],"does it,":["but"],"does keep":["things"],"does look":["slightly","nice."],"does make":["the"],"does makes":["more"],"does more":["work"],"does not":["affect","use","include","tell","have","have","really","make","depend","reflect","work","change","describe","really","make","solve","make","handle","use","allow","make"],"does not.":["However,"],"does only":["that,"],"does read":["nicely."],"does readability":["a"],"does say":["thymine."],"does seem":["clearer.","to"],"does than":["re-seq."],"does the":["```-\u003e\u003e```","right","right","right","factor","symbol","job","comparison","comparison"],"does this":["compile,","code","look","style"],"does to":["a","the"],"does too":["much.","much"],"does what":["it's","your","you"],"does with":["the"],"does without":["thinking"],"does work,":["did"],"does your":["blank"],"does —":["why"],"does, however":["it"],"does, it":["doesn't"],"does, string/character":["does"],"does. And":["you're"],"does. Though":["`-›`"],"doesn't `count`":["return"],"doesn't accept":["`not-found`"],"doesn't actually":["discard"],"doesn't appear":["that","that"],"doesn't break":["on"],"doesn't capture":["the"],"doesn't check":["for"],"doesn't comply":["to"],"doesn't consolidate":["beverage"],"doesn't contribute":["much"],"doesn't count":["Uracil,","as"],"doesn't end":["up"],"doesn't even":["require","try"],"doesn't express":["the"],"doesn't feel":["right,","\"refined\".","as"],"doesn't format":["properly,"],"doesn't have":["`endsWith`.)","any","a","to","either","to","any","to","it.","an"],"doesn't help":["readability.","the"],"doesn't hold":["when"],"doesn't impact":["the"],"doesn't improve":["readability"],"doesn't it":["hamper"],"doesn't look":["entirely","that","like","so","like"],"doesn't make":["any","much","sense"],"doesn't match":["any","the","the","the","any","the"],"doesn't matter":["which","much","much"],"doesn't produce":["an"],"doesn't really":["sit","express","take","need","return","describe"],"doesn't scan":["as"],"doesn't seem":["explicit","to","like","to","as","to","quite","that","necessary,","to","that","to"],"doesn't sit":["right"],"doesn't support":["tail-call","tail-call"],"doesn't tell":["you"],"doesn't test":["for","for"],"doesn't think":["about"],"doesn't use":["a","those.","this","Python's","Java","Java"],"doesn't violate":["OCP."],"doesn't work":["for","as","and","just"],"doesn't, but":["Java"],"doesn't. Can":["you"],"doesn´t say":["much.."],"doesn’t account":["for"],"dogmatic mistakes.":["Point"],"doing Java":["professionally"],"doing `(count":["word)`"],"doing ```:refer```":["on"],"doing a":["check","range","rough","few"],"doing and":["were"],"doing at":["all."],"doing could":["be"],"doing fancy":["things"],"doing here?":["`apply`"],"doing in":["clojure,","reset-name,","a"],"doing is":["to"],"doing it":["in","--","only","only","all","this","this","as"],"doing it.":["There"],"doing one":["more"],"doing or":["*how*"],"doing ruby/javascript":["for"],"doing so":["(since","confuses"],"doing that":["assignment","multiple"],"doing the":["same","extra","same","exercises","ruby","exercise","re-match",":pre"],"doing there)":["-"],"doing these":["exercises","after"],"doing this":["with","-","in"],"doing to":["the"],"doing two":["things"],"doing with":["the"],"doing, but":["there","not","it"],"doing, my":["jaw"],"doing, so":["naming"],"doing. But":["that"],"doing. First":["Clojure"],"doing. From":["the"],"doing. However,":["does"],"doing. I":["think"],"doing. It":["helps"],"domain (a":["teenager's"],"domain (how":["Bob","a"],"domain (which":["I'm"],"domain and":["leave"],"domain are":["important."],"domain concept,":["nucleotide"],"domain construct.":["Is","Is"],"domain helps":["with"],"domain in":["the","code,"],"domain is":["the"],"domain knowledge.":["Also"],"domain language":["exactly","as","as","the"],"domain of":["the"],"domain renaming":["of"],"domain terminology":["you"],"domain terms":["(like","into"],"domain that":["vars","there","strings","they"],"domain to":["make"],"domain which":["naming"],"domain word":["wrong!"],"domain's relation":["to"],"domain, would":["it"],"domain-related, while":["the"],"domain-specific (gene,":["genome,"],"domain-specific term":["was"],"domain. (Most)":["teenagers"],"domain. Bob":["doesn't"],"domain. Would":["you"],"don't actually":["know","know","check","need","need","need","have"],"don't agree":["that","that"],"don't always":["know"],"don't believe":["there's","the","it"],"don't change.":["Not"],"don't check":["to"],"don't consider":["this,"],"don't currently":["require"],"don't do":["date/time","that","things"],"don't drive":["the"],"don't end":["up"],"don't even":["consider","get","need"],"don't exactly":["get","get","understand"],"don't expect":["`false`."],"don't expose":["more"],"don't feel":["strongly","like","that","that","too"],"don't find":["a"],"don't fully":["understand","grok","follow"],"don't gain":["much"],"don't get":["many","it.","DRY","out"],"don't have":["to","a","a","the","to","problems","to","to","to","to","to","to","a","to","to","to","any","access","to","to","to","to","to","a","a","to","to"],"don't immediately":["see"],"don't intend":["for"],"don't know":["why","if","of","anything","if","if","if","if","much","that","at","if","if","if","what's","why","of","what","how","why"],"don't know).":["`valid-nucleotide?`"],"don't know,":["commas"],"don't leave":["closing","opening/closing","closing"],"don't like":["`clojure.string/upper-case`,","here","adding","is","my","how","about","this","that","this","the"],"don't like,":["none"],"don't like.":["`response-for`"],"don't mind":["it"],"don't much":["like"],"don't necessarily":["need"],"don't need":["to","`vec`.","both","to","the","to","the","the","all","`pair-elements`","`clojure.string`","a","to","the","line","the","them","parens","the","to","to","to","to","the","the","to","to","to","to"],"don't participate":["in"],"don't pass":["`n`"],"don't pay":["attention."],"don't personally":["see"],"don't push":["that"],"don't qualify":["as"],"don't really":["need","think","see","follow","like","like","understand","know","tell","ever","like","know","know","understand","like"],"don't see":["a","an","any","it","the","the","the","what","any.","a","any"],"don't seem":["to"],"don't speak":["to","the"],"don't tell":["anyone,"],"don't test":["for"],"don't the":["`defn`s"],"don't think":["it's","this","that","it","it's","there's","the","that","this","it's","the","you","you're","it's","`#\"T\"`","`use`","you'll","this","you","`question?`","laziness","that"],"don't think.":["I'm"],"don't try":["to"],"don't understand":["what"],"don't use":["clojure","it.","the","it","the","it."],"don't want":["other","to","to","to","to","exposed","to","an","to"],"don't wish":["to"],"don't worry":["so"],"don't yet":["see"],"don't you":["think","wait"],"don't. If":["the"],"don't. In":["this"],"don't. You":["would"],"done (naming":["aside,)"],"done as":["a","`apply"],"done at":["the"],"done by":["short-circuitring"],"done enough":["extra"],"done in":["the","O(n)","the","a","the"],"done is":["a"],"done like":["`:required"],"done locally":[":)"],"done me":["in."],"done shorter/better,":["otherwise"],"done that":["initially","assignment"],"done the":["exercise"],"done this":["exercise"],"done via":["`defn-`"],"done with":["characters","this","`apply`","`case`.","this","`dec`","`last`."],"done with:":["`(some"],"done without":["`clojure.string`"],"done! I'll":["have"],"done, but":["you"],"done, one":["minor"],"done. I":["learnt"],"done. Will":["try"],"done; I":["keep"],"dont think":["it"],"don´t say":["much","much..."],"don´t think":["it"],"don’t really":["like"],"don’t specify":["those"],"don’t you":["think?","think?"],"doseq returns":["nil"],"dosync, alter":["and"],"dot notation":["like"],"doto forces":["you"],"double call":["to","to","to"],"double dare":["you\"."],"double instead":["of"],"double negation":["and"],"double negation,":["it","I"],"double negation.":["I'd"],"double post":["..."],"double quote.":["No"],"double quotes":["between"],"double-check :)":[":"],"double-negative of":["`no-non-caps?`"],"doubt that":["that"],"doubt the":["tests"],"doubting it's":["a"],"doubts on":["this"],"down in":["my","`range`"],"down into":["smaller","a"],"down more":["but"],"down on":["code"],"down only":["to"],"down significantly":["on"],"down the":["road"],"down this":["route"],"down to":["just","the","context","a","an","see","a","doing","personal","~1","`#\"\\W\"`.","a","one"],"down. Ha!":["I"],"down. That":["would"],"down. `declare`":["can"],"down? It":["would"],"downloaded from":["exercism"],"downside is":["another","the"],"downside of":["doing","doing","this"],"draft used":["`contains-ucase-chars`"],"draft, there's":["a"],"drastically reduce":["the"],"driis. Magic":["constants"],"drill. I":["only"],"drive changes":["to"],"drive me":["a"],"drive the":["behavior"],"drop `str`":["and"],"drop factories":["and"],"drop parentheses":["in"],"drop the":["`statement?`","`get`","intermediate","`let`","splits,"],"drop_and_show [begin":["end"],"dropped as":["well."],"dropped the":["negation."],"dropped to":["the"],"dropping regexes?":["I"],"dropping the":["is-"],"dropping unnecessary":["cast."],"drowned the":["horse,"],"drunk and":["the"],"drunk or":["with"],"drunk while":["doing"],"dry approach.":["What"],"dude, all":["credit"],"due to":["its","my","readability."],"dumben. I've":["incorporated"],"duplicate functions:":["`ends-with-a-question-mark?`"],"duplicate the":["calls"],"duplicate values.":["I.e."],"duplicated (i.e.":["the"],"duplicated between":["them."],"duplicates. Is":["there"],"duplicating its":["body"],"duplicating the":["`map`."],"duplication (need":["to"],"duplication being":["OK,"],"duplication between":["the","the","the","verses"],"duplication in":["the","this","the"],"duplication is":["a"],"duplication of":["passing","nucleotides","`(/"],"duplication\" indeed,":["I'll"],"duplication, IMO.":["What"],"duplication, but":["it's","how"],"duplication. I":["feel"],"duplicative version":["of"],"during a":["code"],"during the":["monthly"],"during this":["exercise"],"dyba for":["the"],"dynamic binding":["in"],"dynamic root":["binding"],"dynamic scoping)":["which"],"dynamic var":["even"],"dynamically .get":["stuff"],"dynamically .set":["stuff."],"dynamically, or":["maybe"],"e.g. If":["you"],"e.g. The":["`db`"],"e.g. `#(not=":["%1"],"e.g. `#(vector":["%1"],"e.g. `#{a":["b"],"e.g. `(=":["\\4"],"e.g. `blank?`,":["`asking?`,"],"e.g. `bob/is-silence`":["can"],"e.g. `let":["[x"],"e.g. `sort":["upper-case`"],"e.g. a":["separate"],"e.g. define":["everything"],"e.g. in":["the"],"e.g. moving":["all"],"e.g. robot/robot-name":["instead"],"e.g. upper-case":["?"],"e.g., by":["using"],"e.g., core":["predicates"],"e.g., the":["problem"],"each atom":["type"],"each but":["then"],"each call":["and"],"each candidate,":["so"],"each character":["to","looking"],"each character.":["Thanks"],"each choice":["that"],"each chunk?":["It"],"each condition":["out","into","and"],"each entry":["in"],"each expression":["of"],"each function,":["returning","which"],"each function.":["It","Does"],"each helper":["function"],"each independent,":["where"],"each invokes":["the"],"each letter":["is"],"each line":["is","of"],"each marker":["in"],"each nucleotide":["appears"],"each of":["them","the","the","`c`.","the","those","the","the","the","the","those","them."],"each other":["(with"],"each other.":["In"],"each phrase":["of"],"each predicate":["into","into","carefully","line"],"each property":["individually."],"each string,":["maybe"],"each type":["of","of","of"],"each value":["of"],"each word":["(once","in","to"],"eager. As":["an"],"earlier and":["changed"],"earlier revision":["thought"],"earlier version":["of"],"earlier, I":["am"],"early termination":["either."],"early, before":["form"],"early, but":["some"],"earth-ratio at":["compile"],"ease reading":["the"],"easier for":["me"],"easier if":["`parse`","they"],"easier just":["to"],"easier on":["the"],"easier only":["with"],"easier problem":["to"],"easier to":["specify","understand","compose.","read","read","see","compose","read","read","read.","read","read,","handle.","read","read.","read.","read","read.","read,","do","understand,","drop","read","decode","understand","understand.","understand","understand.","read?","see","read","lean","follow.","read","follow.","read","follow.","read"],"easier way":["to","of"],"easier when":["you"],"easier, but":["other"],"easier. With":["that"],"easily add":["seconds"],"easily be":["fused"],"easily cast":["to"],"easily composable…":["Did"],"easily distinguish":["between"],"easily partially":["apply"],"easily refactor":["with"],"easily refer":["to"],"easily see":["which"],"easily. eg:":["explicit-filter"],"easy !!":["Thanks"],"easy -":["you"],"easy O(n)":["way"],"easy auto-memoization":["feature"],"easy enough":["to"],"easy in":["Clojure!"],"easy to":["verify","read","read","follow","avoid","create","understand","read.","do","follow.","follow,","make","understand","understand.","understand.","understand.","understand","read."],"easy. Thanks":["for"],"edge-cases, then":["I'd"],"editing LISP":["so"],"editor might":["be"],"editor will":["highlight"],"editor window":["(nesting"],"editors (I":["use"],"editors can":["highlight"],"editors with":["(built-in"],"effect as":["with","your"],"effect of":["greatly"],"effect the":["semantics"],"effect, it":["would"],"effective (nlogn":["vs","vs","vs","vs","vs","vs","vs"],"effective by":["swapping"],"effective if":["not"],"effective than":["sort.","current"],"effective to":["process"],"effective way":["of","to","to"],"effective. I":["quite"],"effectively empty":["function."],"effectively would":["be"],"efficiency at":["this"],"efficiency for":["clarity"],"efficiency, it":["bugs"],"efficiency, you":["perform"],"efficiency. I":["have"],"efficient (nlogn":["vs","vs"],"efficient (that's":["a"],"efficient -":["but"],"efficient algorithm":["(nlogn"],"efficient and":["readable","you"],"efficient by":["avoiding"],"efficient method":["for"],"efficient than":["it","`sort`","frequencies","a","(conj"],"efficient to":["run"],"efficient way":["to"],"efficient with":["transient"],"efficient, but":["that"],"efficient, so":["it's"],"efficient. Ideally":["you"],"efficient. Not":["that"],"efficiently in":["Clojure."],"effort here":["-"],"effort in":["detecting"],"effort into":["working"],"effort to":["be","try"],"eg. `(:T":["{:C"],"eg. `(=":["\\?"],"either (two":["spaces"],"either 1":["or"],"either :refer":["or"],"either `(apply":["str"],"either `(split":["...)`"],"either `condp`":["or"],"either `identity`":["or"],"either `sort`":["or"],"either a":["character","different"],"either adding":["inline"],"either alias":["the"],"either an":["anonymous"],"either by":["using"],"either case,":["you"],"either cond":["or"],"either defined":["or"],"either explicitly":["throw"],"either inline":["comment,"],"either is":["an"],"either move":["it"],"either need":["to"],"either of":["these"],"either pick":["out"],"either require":["it"],"either ten":["or"],"either the":["value"],"either until":["someone"],"either use":["simply"],"either way":["works.","still.","(and","--","so","with","and"],"either way,":["your","that"],"either way.":["Another",":-)"],"either well":["named"],"either with":["`filter`"],"either. Why":["check"],"elaborate bodies":["with"],"elaborate on":["that?","what","why"],"elegance and":["performance"],"elegant Bob's":["I"],"elegant implementation":["&amp;"],"elegant pattern":["matching"],"elegant way":["to"],"elegant ways":["to"],"elegantly recreated":["Clojure's"],"element at":["the"],"element by":["element"],"element if":["it"],"element in":["list","`candidates`."],"element like":["that."],"element of":["a","a"],"element won't":["be"],"element. That":["might"],"elements -":["accepts"],"elements and":["lowercase"],"elements in":["your"],"elements satisfy":["that"],"elements to":["get"],"eleven digits.":["I"],"eliminate calls":["to"],"eliminate one":["line"],"eliminate parentheses":["around"],"eliminate redundant":["checks),"],"eliminate the":["double","use","`(reduce","use"],"eliminate your":["use"],"eliminated by":["using"],"eliminated the":["need"],"eliminating noisy":["Java"],"eliminating overhead":["of","of"],"eliminating special":["characters"],"eliminating that":["would"],"elixir exercises,":["and"],"eloquently. Time":["to"],"else I":["really"],"else I'm":["missing?"],"else about":["it"],"else can":["modify"],"else case":["captures"],"else case.":["As","For"],"else clause":["of","with"],"else could":["confirm","we"],"else has":["change"],"else in":["the"],"else instead":["of"],"else is":["kept","can"],"else not":["covered","previously"],"else please":["vote"],"else private,":["per"],"else to":["call"],"else used":["`Character/isLowerCase`"],"else would":["be"],"else wrote,":["your"],"else's here).":["I'd"],"else's solutions":["so"],"else. On":["the"],"else. That":["way,"],"else. There":["isn't"],"else. What":["do"],"elsewhere it":["may"],"elsewhere to":["use"],"elsewhere, nil":["is"],"elucidate us.":[";)"],"elucidate your":["approach?"],"emacs' `clojure-mode`":["and"],"email address":["than"],"embarrassing to":["admit,"],"embedded code":["block"],"emphasize as":["clearly"],"empty I":["don't"],"empty [\".\"":["\"?\"]"],"empty `AssertionError`":["throw"],"empty case":["is"],"empty check":["followed"],"empty count":["map"],"empty input":["because"],"empty map)":["is"],"empty match":["sets)."],"empty on":["line"],"empty or":["blank","contains","only"],"empty sequences,":["however"],"empty string":["would","feels","the","in","key."],"empty string.":["This"],"empty strings":["in"],"empty values":["-","it","in"],"empty vector.":["Will"],"empty with":["alternative"],"empty, or":["contains","contains"],"empty-count (zipmap":["valid-dna-nucleotides"],"empty/nil atom":["when"],"empty? and":["last.","trim","trim."],"empty?, nil?,":["pos?,"],"empty?`. Other":["than"],"enable a":["more"],"enables 1-to-1":["mapping"],"enamored of":["the"],"encapsulate the":["`name-seed`"],"encapsulated the":["repeatedly"],"encapsulated. Thinking":["it's"],"encapsulation through":["lexical"],"encapsulation worth":["it."],"enclosed the":["params"],"enclosing lexical":["scope","scope"],"enclosing scope":["-"],"encode those":["comments"],"encoding of":["a"],"encolsing, lexical":["one."],"encounter first":["the"],"encountered before":["it"],"encountered was":["that"],"encourage further":["exploration"],"encourage you":["to","to","to"],"encouraged and":["trailing"],"encourages the":["use"],"encrypt the":["true"],"encryption to":["encrypt"],"end -1)`":["to"],"end all":["trololos,"],"end bracket":["with"],"end decided":["not"],"end functions":["that"],"end in":["'?'."],"end it":["with"],"end like":["that!"],"end methods":["that"],"end of":["the","the","the","a","a","`map`","the","the","the","line","the","the","[this","`set-name`"],"end predicates":["like"],"end predicates'":["names"],"end seems":["a"],"end the":["cond"],"end they":["both"],"end up":["with","calculating","using","in","rethinking","caching","with","using","with","on"],"end with":["a","in","closing","a"],"end your":["functions"],"end, agreed":["on"],"end, but":["my"],"end, it":["goes"],"end, it's":["best"],"end. So":["this"],"ended up":["with...!","with","using","being","using","being"],"ending in":["question"],"ending parens":["on"],"ending with":["a","!","*endsWith","question"],"ends of":["the"],"ends up":["being","being"],"ends with":["a","question","?","a"],"endsWith seemed":["like"],"enforce proper":["ordering."],"enforce some":["sort"],"enforced by":["the"],"engineers), I":["guarantee"],"enhance legibility":["here.","here."],"enhance readability":["though.","a","here?"],"enhancement [to":["suggest](https://github.com/kytrinyx/exercism.io/issues)"],"enhancements in":["Emacs"],"enjoy learning":["about"],"enjoy the":["vacation"],"enjoyed the":["`assingment`"],"enjoyed using":["-&gt;"],"enlightment, I":["saw"],"enough (and":["yours"],"enough (we":["still"],"enough -":["no"],"enough I":["found","was"],"enough a":["problem"],"enough along":["yet)."],"enough and":["that"],"enough at":["least"],"enough by":["now?"],"enough diverse":["code"],"enough extra":["work"],"enough for":["the","me.","the"],"enough in":["this","`nucleotide-counts`"],"enough information":["to"],"enough knowledge":["to"],"enough of":["a"],"enough since":["it"],"enough that":["it","```(="],"enough the":["way"],"enough to":["pass","move","me,","leave","be","make","me.","show,","me.","me.","me.","make","do","be","indicate","pre-calculate","justify","merit","pass","say.","make","make","me","extract"],"enough, I":["think"],"enough. Basically,":["you"],"enough. If":["the"],"enough. No":["need"],"enough. The":["actual"],"enough; whether":["it"],"enough” and":["sincerely"],"ensure all":["nucleotides"],"ensure that":["it","values","the","input","the","each"],"ensure you":["considered"],"ensured that":["what"],"ensures that":["only"],"enter a":["newline"],"entire `clojure.string`":["namespace"],"entire clojure.string":["namespace"],"entire input":["string"],"entire library":["into"],"entire namespace":["(when"],"entire string":["instead","is","and"],"entirely Clojure":["style"],"entirely a":["matter"],"entirely convinced":["that"],"entirely personal":["preference"],"entirely right":["either"],"entirely unnecessary.":["Strings"],"entirely. Sorry":["for"],"entries rather":["than"],"entries with":["zero"],"entry in":["the"],"environment of":["a"],"environment, but":["the","the"],"environment, it's":["generally"],"environment, refs":["are"],"equal or":["unequal"],"equal. That":["would"],"equal. Threading":["macro"],"equal. While":["you"],"equal. `seq`":["is"],"equality against":["one"],"equality between":["`word-freq`"],"equality check":["to","to"],"equality check,":["and"],"equality comparison,":["you"],"equality of":["an"],"equality, can":["I?"],"equality, just":["simply"],"equality. I":["knew"],"equality: why":["not"],"equally valid":["implementations."],"equilateral or":["isosceles"],"equivalent (woo,":["_Joy"],"equivalent form":["would"],"equivalent in":["Clojure."],"equivalent of":["Elixir's","you"],"equivalent to":["`(last","`(or","`[^\\w]`!","`apply","using","the","the"],"equivalent. I":["think"],"equivalent. Looks":["good"],"erm ...":["example."],"err on,":["though,"],"erroneously submitted":["while"],"error -":["sorry!"],"error and":["switched"],"error message":["with"],"error message.":["This"],"error right":["from"],"error would":["be"],"error. That's":["a"],"errors that":["were"],"errors. It":["may"],"escaped from":["using"],"escaping) for":["transforming/converting"],"especially for":["newbies."],"especially in":["Clojure)"],"especially like":["feedback","feedback"],"especially nice":["in"],"especially on":["large"],"especially since":["'t'"],"especially that":["the"],"especially the":["`and`","use","`silence`"],"especially thinking":["about"],"especially when":["`pos`"],"especially with":["such"],"essential for":["composability)."],"essential in":["any"],"essentially a":["rename"],"essentially implemented":["it"],"et. al.":["to"],"etc etc),":["but"],"etc functions":["is"],"etc into":["their"],"etc might":["make"],"etc) you":["can"],"etc), but":["not"],"etc). For":["local"],"etc. Have":["you"],"etc. I":["would"],"etc. So":["that"],"etc. That's":["just"],"etc. are":["defined"],"etc. inside":["a"],"etc. is":["unnecessary"],"etc. right?":["Wouldn't"],"etc. so":["that"],"etc. to":["be"],"etc. which":["communicate"],"etc.) you":["can't"],"etc.). For":["instance,"],"etc...) I":["think"],"etc...). Unfortunately,":["\"sequence\""],"etc.? I'm":["really"],"etrepum was":["getting"],"etrepum's advice.":["Clearly"],"evaluate as":["truthy.","`true`","a"],"evaluate booleans":["to"],"evaluate the":["predicates"],"evaluated because":["it's"],"evaluated either":["way"],"evaluated expression":["is"],"evaluated in":["the","the"],"evaluated is":["the"],"evaluated on":["every","every"],"evaluated to":["true."],"evaluated whether":["nucleotide"],"evaluated. For":["clarification,"],"evaluates to":["itself)","and"],"evaluating `silent?`":["twice,"],"evaluating `slient?`":["twice"],"evaluating previous":["expression"],"evaluating what":["kind"],"evaluation of":["the","lazy","a"],"evaluation the":["expressions."],"evaluation where":["true"],"evaluation work":["in"],"even `dna-\u003erna`":["(which"],"even a":["phrase","simple"],"even arrange":["some"],"even ask":["for"],"even be":["able"],"even beneficial,":["when"],"even better":["-"],"even by":["a"],"even consider":["the","this."],"even do":["that,","\"rainbow\""],"even exploit":["that"],"even for":["somebody","an","something"],"even get":["what","by"],"even go":["without"],"even has":["a"],"even idiomatic":["way"],"even if":["that","it's","they","morally","test"],"even in":["the","short"],"even inline":["in"],"even know":["`-&gt;`."],"even led":["you"],"even more":["true","shorter","specific","effective","glaring","concise","so.","expressive","functions"],"even need":["to"],"even non-public":["functions,"],"even notice":["that"],"even official":["clojure"],"even reduced":["the"],"even require":["that"],"even shorter.":["Thanks!"],"even simpler":["with"],"even simpler.":["Thanks!"],"even submitted":["[an"],"even the":["simplest"],"even think":["of"],"even though":["we","(last","making","the","you've","I","it"],"even try":["to"],"even use":["`:as`"],"even used":["it"],"even when":["the"],"even with":["the"],"evening hangout":["-"],"eventually I":["was"],"eventually decided":["that"],"eventually run":["into"],"ever Clojure":["program","module,","code,"],"ever exposure":["to"],"ever need":["them)."],"ever operation":["you're"],"ever though,":["these"],"ever tried":["to"],"ever want":["to"],"ever written":["in"],"ever written,":["so"],"ever written.":[":)"],"every call":["of","of"],"every call.":["To"],"every candidate":["for","for","for"],"every candidate.":["Finally,","I"],"every check":["in","and","actually"],"every day.":["And"],"every detail.":["I"],"every element":["in"],"every function":["call","explicitly.","in"],"every function,":["even"],"every function.":["Worse"],"every item":["in"],"every line":["will"],"every nucleotide":["from","we"],"every operation":["using"],"every other":["case.","base"],"every pair":["of"],"every piece":["that"],"every possible":["statement"],"every potential":["anagram.","candidate?"],"every push":["in"],"every single":["candidate."],"every string":["in"],"every time":["we","to","a"],"every time.":["Also,","I"],"every usage.":["If"],"every word":["is"],"every?, although":["you"],"everyone doing":["the"],"everyone to":["learn","adopt","adopt"],"everyone! I":["tired"],"everyone, I":["took"],"everything always":["worked"],"everything at":["once."],"everything else":["about","private,","not"],"everything else.":["There"],"everything except":["changing","response-for"],"everything in":["one","a","a"],"everything into":["a"],"everything is":["immutable","in"],"everything it's":["not"],"everything or":["just"],"everything stating":["how"],"everything with":["elegant"],"everything working.":["and"],"everything works.":["Still,"],"everything, it's":["just"],"everything, so":["I"],"everywhere to":["keep"],"evident once":["there"],"ex: one*two.":["At"],"exact implementation.":["It's"],"exact opposite":["of"],"exactly `frequencies`":["evaluates"],"exactly get":["what","what"],"exactly implemented":["the"],"exactly it's":["trying"],"exactly opposite":["to"],"exactly reverse":["to"],"exactly the":["same,","same","same","same"],"exactly this":["case"],"exactly understand":["what"],"exactly using":["\u003ccode\u003edef\u003c/code\u003e"],"exactly what":["is","```dna/to-rna```","you","I","I","I","is","you","you","exactly","i","the"],"exactly what's":["needed."],"exactly, but":["I","I"],"exactly. More":["that"],"examine arbitrary":["input"],"example -":["what"],"example ?":["Thanks."],"example I":["have"],"example REPL":["session"],"example `(defn":["venus-year-on-mars"],"example `:\u003e":[":else"],"example `:require":["[clojure.string"],"example a":["conversion"],"example and":["the","reply","explanation","the"],"example breaking":["up"],"example but":["what"],"example by":["using"],"example doesn't":["accept"],"example here:":["https://github.com/bbatsov/clojure-style-guide"],"example in":["clojuredocs","case","my","the","`anagrams`","the","the","the"],"example is":["(necessarily)","good"],"example might":["be","be:","be"],"example of":["code","string","what","a"],"example solution":["for"],"example surrounding":["`let`)."],"example that":["appears"],"example this":["will"],"example will":["all"],"example would":["have"],"example you":["would","could"],"example), or":["sometimes"],"example), the":["first"],"example). More":["importantly,"],"example, I":["would"],"example, `(reduce":["accumulate-counts"],"example, ```silence?```":["doesn't"],"example, but":["if","it's"],"example, if":["I"],"example, in":["`nothing-said?`"],"example, interpreting":["anything"],"example, it":["should"],"example, it's":["probably"],"example, some":["border"],"example, the":["tests"],"example, these":["are"],"example, to":["make"],"example, which":["makes"],"example, would":["be"],"example, you":["might","can"],"example. Although":["I"],"example. Anyway,":["as"],"example. In":["other"],"example. Right":["now"],"example. Thanks":["for"],"example. That":["would"],"example. Things":["I"],"example: \"H.G.":["Wells"],"examples -":["where"],"examples I've":["seen"],"examples given":["and"],"examples here:":["http://clojuredocs.org/clojure_core/clojure.core/ns"],"examples just":["basically"],"examples like":["this"],"examples of":["how","map","`require`"],"examples that":["attempt"],"excellent advice,":["but"],"excellent explanation,":["thank"],"excellent suggestion.":["Thanks!","I've"],"except changing":["the"],"except for":["(maybe)"],"except response-for":["with"],"except that":["it's"],"except the":["superfluous","name"],"except when":["I"],"exception is":["nucleotide-count,","a"],"exception or":["a"],"exception rather":["than"],"exception with":["the"],"exception. You":["can"],"exceptions if":["they're"],"excessive at":["this"],"excessive nested":["let"],"excessive to":["specify"],"excessive whitespace":["inside"],"exchange is":["happening."],"excite me.":["Spelling"],"excited about":["the"],"excited to":["get"],"exclamation actually":["implied."],"excluded core":["bindings"],"excludes candidates":["which"],"exclusive so":["that","that"],"excuse is":["that"],"executable and":["so"],"executable documentation":["of"],"execute in":["linear"],"execute the":["`let`"],"executed as":["a"],"executed either":["way"],"executed, and":["then"],"executes, but":["it's"],"execution to":["\"response\"."],"exercices this":["way."],"exercise I":["would"],"exercise and":["it"],"exercise as":["well,"],"exercise but":["I","knew"],"exercise didn't":["seem"],"exercise doesn't":["have","use"],"exercise enough":["by"],"exercise for":["that","this"],"exercise in":["Ruby.","a"],"exercise is":["about","and","a"],"exercise is...":["overkill."],"exercise isn't":["bad."],"exercise it":["does"],"exercise just":["now,"],"exercise made":["me"],"exercise really":["required"],"exercise so":["I","I"],"exercise specifies":["that"],"exercise the":["only","only"],"exercise to":["specify","\"Bob\"","either","explore"],"exercise uses":["strings"],"exercise was":["underwhelming."],"exercise when":["I"],"exercise with":["validations"],"exercise you":["won't"],"exercise! Guess":["it"],"exercise, I":["modified"],"exercise, I'm":["asking"],"exercise, as":["none"],"exercise, but":["the","check","I","the"],"exercise, it's":["overkill"],"exercise, just":["didn't"],"exercise, though":["I"],"exercise, you":["might"],"exercise. Instead":["I"],"exercises and":["there","requirements,"],"exercises but":["I"],"exercises for":["a"],"exercises in":["all"],"exercises is":["my"],"exercises up":["to"],"exercises where":["I"],"exercises, and":["also"],"exercises. While":["I've"],"exercism assignments":["are"],"exercism code":["the"],"exercism goes":["given"],"exercism handles":["this"],"exercism has":["any"],"exercism is":["\"to"],"exercism puts":["`(:require`"],"exercism seems":["to"],"exercism submit":["bob.clj"],"exercism thing":["needs"],"exercism! Thanks":["dude,"],"exercism, I":["would"],"exercism... will":["have"],"exercism.io I":["don't"],"exercism.io thing":["is"],"exercism.io, rather":["than"],"existed in":["bob_test.clj."],"existence of":["`inc`"],"existing `let`,":["where"],"existing `replace`":["symbol."],"existing concept":["used"],"existing function":["by"],"existing functions":["arguments."],"existing predicates.":["Maybe"],"exists (which":["is"],"exists only":["in"],"expand beyond":["ASCII."],"expand into":["the"],"expand the":["data"],"expanded and":["promoted"],"expanded at":["compile"],"expanded on":["Bob"],"expanded the":["text"],"expanded to":["help"],"expanding this":["with"],"expansion to":["work"],"expansion. Realized":["problems"],"expect \"5\"":["to"],"expect a":["mapping"],"expect bob":["to"],"expect defined":["in"],"expect it":["to"],"expect it's":["a"],"expect the":["rest","atom"],"expect to":["see","see","see","see"],"expected from":["your"],"expected input":["actually"],"expected on":["one"],"expected result":["is"],"expected the":["`drop`"],"expected to":["pass","see","see"],"expected. But":["would"],"expected: (=":["\"Woah,","\"Whatever.\"","8","2","32768","9223372036854775808N","4","1","18446744073709551615N","2147483648"],"expects and":["b)"],"expects that":["you're"],"expects the":["input"],"experience I":["wouldn't"],"experience leads":["me"],"experience of":["playing"],"experience sometimes.)":["That"],"experience, to":["say"],"experience. Thank":["you"],"experience. Your":["`transcribe-rna`","method"],"experienced than":["I"],"experienced with":["this"],"experiences deciphering":["code"],"experiment to":["see","practice."],"experiment with":["the","breaking","extracting"],"experimentation, so":["this"],"experimented with":["making","changing","breaking"],"experimenting during":["this"],"experimenting with":["a"],"explain the":["advantage"],"explain this":["very"],"explain what":["it","it","a","is","they"],"explain why":["exactly"],"explained *how*":["the"],"explained what":["they"],"explaining *\"a":["question"],"explaining the":["regex"],"explaining this":["correctly"],"explaining what":["it"],"explains that":["Bob"],"explains the":["domain","mechanics","intent."],"explains what":["it"],"explanation of":["that","the","the","the","atoms"],"explanation, thank":["you!"],"explanation. We":["could"],"explanatory message":["to"],"explicit (imho":[";)"],"explicit (of":["course"],"explicit `fn`.":["Second,"],"explicit about":["the","the","what"],"explicit comparatively":["to"],"explicit control":["flow:"],"explicit enough":["to","and"],"explicit going":["element"],"explicit in":["Clojure.","my"],"explicit is":["useful"],"explicit loop.":["I"],"explicit recursion,":["consider"],"explicit recursion.":["Try"],"explicit that":["an"],"explicit transaction":["boundaries.","boundaries"],"explicit use":["of"],"explicit what":["transcription"],"explicit, for":["example"],"explicit, like":["`(not"],"explicit. Also,":["use"],"explicitely defining":["a"],"explicitly :use":["clojure.string,"],"explicitly about":["shared,"],"explicitly calling":["(require),"],"explicitly check":["for"],"explicitly communicate":["your"],"explicitly convert":["it"],"explicitly don't":["want"],"explicitly handled":["for"],"explicitly have":["to"],"explicitly if":["each"],"explicitly list":["the"],"explicitly mark":["it"],"explicitly name":["them"],"explicitly naming":["each"],"explicitly require":["or"],"explicitly return":["`name`"],"explicitly three":["times?"],"explicitly throw":["an","an","exceptions"],"explicitly throwing":["an"],"explicitly turn":["a","the","them"],"explicitly using":["def"],"explicitly using,":["well,"],"explicitly, which":["is"],"exploding out":["the"],"exploit that":["further"],"exploiting two":["facts:"],"exploration in":["the"],"explore how":["to"],"explore list-based":["metaprogramming"],"explore much":["outside"],"explore the":["data"],"exploring the":["multi-collection"],"export (`shout-response`":["etc...)"],"export i.e.":["any"],"export the":["functions"],"export, you":["can"],"exported in":["a"],"exported is":["response-for."],"exporting \"local\"":["functions"],"exporting of":["function?"],"expose more":["than"],"expose only":["public"],"expose the":["helper"],"exposed from":["your"],"exposed in":["the"],"exposed to":["performance"],"exposes a":["public"],"exposing more":["than","than"],"exposure to":["clojure","both","both"],"expr as":["the"],"express *\"contains":["upper-case"],"express *ALL":["CAPS*."],"express a":["tone."],"express purpose":["of"],"express the":["intent","intent.","(quite"],"express what":["you're"],"express your":["domain"],"expressed as":["`if-not"],"expressed clearly":["with"],"expressed here":["what"],"expressed in":["the","the","terms"],"expressed more":["simply"],"expresses the":["intention"],"expressing *why*":["it"],"expressing it":["like"],"expressing the":["idea"],"expressing what":["a"],"expression (primitive":["evaluates"],"expression (the":["last"],"expression and":["closing","it"],"expression are":["unnecessary."],"expression assignment)`":["will"],"expression at":["the"],"expression checking":["seems"],"expression come":["after"],"expression doesn't":["hold"],"expression evaluated":["is"],"expression for":["the","the","the","validation."],"expression goes,":["I"],"expression in":["your"],"expression inside":["`reduce`"],"expression is":["checking","thrown","`(remove-non-word-chars"],"expression of":["intent","the"],"expression over":["to"],"expression simpler.":["Sadly"],"expression something":["like:"],"expression that":["is"],"expression to":["work?","test","this:"],"expression version":["as"],"expression which":["might"],"expression will":["split"],"expression, so":["that"],"expression. I":["had","think"],"expression. Instead":["of"],"expression. One":["of"],"expression. Otherwise":["this"],"expression. The":["body"],"expression. `require`":["in"],"expression; the":["closing"],"expression? (otherwise":["I"],"expressions -":["**:pre**"],"expressions I":["think"],"expressions `lower-case`":["is"],"expressions also.":["All"],"expressions and":["more"],"expressions as":["the"],"expressions but":["a"],"expressions could":["be"],"expressions don't":["really"],"expressions for":["the","validation"],"expressions in":["cond","next"],"expressions is":["more"],"expressions makes":["it"],"expressions of":["the"],"expressions on":["it,"],"expressions passed,":["is"],"expressions return":["true"],"expressions right":["away?"],"expressions since":["they"],"expressions to":["match","do","do","the","minimize"],"expressions were":["given"],"expressions, I":["think"],"expressions, keeping":["the"],"expressions. Most":["of"],"expressions. Originally,":["I"],"expressions. They're":["cool"],"expressions? For":["instance,"],"expressions? That":["is,"],"expressive (as":["Clojure"],"expressive AND":["easy"],"expressive and":["also","concise"],"expressive as":["a"],"expressive code,":["have"],"expressive enough":["for"],"expressive if":["you"],"expressive names":["to"],"expressive of":["its"],"expressive than":["the","what"],"expressive then":["splitting"],"expressive variable":["name."],"expressive, and":["it"],"expressive, readable":["code\"."],"expressive. A":["couple"],"expressive. Does":["the"],"expressiveness of":["single-character","anonymous"],"expressiveness without":["a"],"expressiveness. My":["only"],"exprs*)) (after":["**since"],"extend IFn":["protocol"],"extend sequence":["related"],"extended about":["[a"],"extending that":["protocol"],"extending the":["`true-anagram?`"],"extends IFn":["protocol,"],"extends sequence":["protocol"],"extends the":["sequence"],"extensible approach.":["What"],"extensible so":["you"],"extension) capability":["to"],"extensive usage":["of"],"extensive use":["of"],"external libraries":["as"],"external or":["in"],"external spec.":["Other"],"external use":["in"],"externally). You":["might"],"extra `()`s":["in"],"extra `in-range`":["function"],"extra argument":["(the"],"extra brackets":["here"],"extra characters":["in"],"extra check":["in"],"extra checks":["in","then"],"extra code":["to"],"extra complexity":["and"],"extra function,":["and"],"extra functions":["so"],"extra glue":["code"],"extra line":["of"],"extra spaces":["after"],"extra test":["to"],"extra tests":["later"],"extra trailing":["parenthesis"],"extra whitespace)":["on"],"extra work":["on"],"extra-clarity of":["the"],"extract `(comp":["frequencies"],"extract `anagram?`":["into"],"extract a":["`teenth?`","function"],"extract cond":["section"],"extract it":["into"],"extract numeric":["characters"],"extract only":["words."],"extract parts":["of"],"extract repeated":["ideas"],"extract some":["of"],"extract the":["logic","checks","phrase","checks","logic","string","individual","individual","conditional","conditional","conditional","expressions","string","logic","logic","logic","string","logic","logic","steps","function","conditions","functions"],"extract to":["functions"],"extract your":["phrase","conditions","conditions"],"extracted `anagram-match?`":["to"],"extracted as":["well?"],"extracted from":["response-for"],"extracted into":["non-public"],"extracted out,":["so"],"extracted the":["question","condition"],"extracted to":["dedicated"],"extracted valid-nucleotides":["since"],"extracted your":["`cond`"],"extracting `count-nucleotides`":["(and"],"extracting conditions":["to"],"extracting functions":["for"],"extracting it":["into"],"extracting logic":["checks"],"extracting predicates":["used"],"extracting question?":["to"],"extracting some":["private","helper","helper"],"extracting test":["functions"],"extracting tests":["to"],"extracting the":["test","`(reverse...`","tests","predicate","character","shouting"],"extracting them":["into"],"extracting those":["cases"],"extras for":["cases"],"extras. Probably":["not"],"extremely generic":["methods."],"extremely hard-coded":["to"],"extremely important,":["so"],"extremely ugly":["so"],"extremely unlikely":["case"],"eye out":["when"],"eye-opener for":["me"],"eye-opening experience,":["to"],"eye. Further,":["it"],"eyes a":["bit"],"eyes don't":["have"],"eyes there":["are"],"eyes went":["straight"],"eyes, but":["maybe"],"f g":["h)"],"f` to":["get"],"face. What":["am"],"facilities to":["limit"],"fact (based":["on"],"fact I":["want"],"fact count":["as"],"fact it":["is"],"fact might":["allow"],"fact not":["independent:"],"fact that":["clojure","the","characters","functions","symbols","`map`","`cond`","string","I","you","character","`if`","the","maps","strings","`join`","you","it's","you","it's"],"fact to":["combine"],"fact, I":["have"],"fact, if":["you"],"fact, that":["whole"],"facto standard":["in"],"factor in":["if"],"factor of":["the"],"factor out":["the"],"factor stuff":["since"],"factories and":["move"],"factoring the":["predicates"],"factoring your":["RE"],"factorization exercise":["for"],"factorize parts":["of"],"factorize things":["out"],"factors at":["the"],"factors of":["a"],"factory of":["sorts"],"facts: `map`":["can"],"fail and":["therefore"],"fail as":["the"],"fail if":["preconditions"],"failed to":["take"],"failing submissions":["when"],"failing which":["caused"],"failures but":["I"],"failures, 0":["errors.","errors."],"fair amount":["of"],"fair bit":["of"],"fair critique.":["I"],"fair enough":[":)"],"fair game—not":["to"],"fairly basic":["regular"],"fairly common":["regex"],"fairly inexperienced":["with"],"fairly new":["to","to","to"],"fall back":["to"],"fall over":["once"],"fall through":["cond"],"falling back":["to","to"],"falling off":["a"],"falls under":["the"],"false even":["though"],"false if":["there"],"false trail":["though!"],"false. Anyway,":["the"],"false``` is":["unnecessary"],"falsey in":["Clojure,"],"familiar python":["data"],"familiar with":["Clojure","`^:const`,","lisp.","`re-seq`?","the","the","the","the","`replace`,","```clojure.string/replace```?","\\p","it."],"familiar with)":["and"],"familiarity and":["preference."],"familiarity and/or":["preference"],"familiarity. Higher":["order"],"familiarizing you":["with"],"fan of":["`format`","returning","generating","the","the"],"fancy than":["a"],"fancy things":["like"],"fantastic book":["IMHO."],"fantastic, I":["didn't"],"far -":["I'm"],"far I've":["only"],"far and":["away"],"far as":["numbers","the","building"],"far clearer":["what"],"far enough":["along"],"far faster,":["of"],"far is":["that"],"far more":["complicated"],"far my":["results"],"far with":["this"],"far would":["depend"],"far, it's":["been"],"fare better":["given"],"fashion (with":["top-down,"],"fashion where":["the"],"fast once":["you"],"fast. Takes":["a"],"faster I":["like"],"faster and":["a","you","makes"],"faster for":["long"],"faster on":["small"],"faster than":["uppercasing/comparing","using","using"],"faster with":["your"],"faster, and":["being"],"faster, but":["looks"],"faster, especially":["on"],"faster, of":["course,"],"fault. @cristina,":["I"],"favor of":["`mapv`.","`:require`"],"favorite assignment.":["Maybe"],"favorite. it":["reminds"],"favour at":["all."],"favour switching":["to"],"faze him.":["He'd"],"feather due":["to"],"feature (according":["to"],"feature I'm":["not"],"feature can":["be"],"feature helps":["the"],"feature in":["range."],"feature of":["Bob","map","the"],"feature. This":["would"],"features later,":["and"],"features of":["Clojure","Atoms"],"feed back":["from"],"feedback @amani.":["Fixed"],"feedback @dexter!":["I"],"feedback @evie.":["I've"],"feedback I":["received,"],"feedback I've":["had"],"feedback about":["naming"],"feedback allowed":["me"],"feedback as":["to","to"],"feedback everyone!":["I"],"feedback from":["@corene!","previous"],"feedback geoff.":["I'll"],"feedback if":["this"],"feedback into":["account"],"feedback is":["valuable,","very","very"],"feedback on":["whether","using","my","performance","anything.","your","this.","frequencies.","my","my"],"feedback that":["checking","checking","I","will"],"feedback! I":["will"],"feedback, I":["used"],"feedback, can":["you"],"feedback, dumben.":["I've"],"feedback, in":["particular"],"feedback, thank":["you!"],"feedback. Both":["are"],"feedback. I":["hadn't","cannot","didn't","do","found"],"feedback. I'm":["still","probably"],"feedback. I've":["certainly"],"feedback. It's":["certainly"],"feedback. Just":["the"],"feedback. Much":["appreciated."],"feedback. My":["`shouting?`"],"feedback. This":["was"],"feedback. Very":["helpful."],"feedback. What's":["the"],"feedback. When":["you"],"feedback: Make":["the"],"feedback? I":["was"],"feel \"nonsense\"":["has"],"feel \"refined\".":[":)"],"feel about":["pulling","this"],"feel any":["tension"],"feel as":["easy"],"feel clearer":["to"],"feel dirty":["after","reaching"],"feel free":["to","to","to"],"feel in":["the"],"feel like":["`:else`","there","lining","I'm","the","the","I've","there","I'm","I"],"feel more":["consistent"],"feel of":["`response`."],"feel reluctant":["to"],"feel right,":["as"],"feel strongly":["about","about"],"feel that":["either","it's","these"],"feel that\"":["(meaning"],"feel the":["name","need"],"feel there's":["a"],"feel too":["strongly"],"feel was":["to"],"feel, still":["be"],"feel. In":["lisp"],"feeling like":["quite"],"feeling quite":["as"],"feeling that":["this"],"feeling there":["was"],"feelings and":["see"],"feels a":["bit","whole","bit","little","bit","bit"],"feels about":["it."],"feels cleaner":["to"],"feels foreign.":["Instead"],"feels less":["direct"],"feels like":["overkill","it's","it","a","the","this","a","you're"],"feels more":["like"],"feels odd":["to"],"feels odd.":["Wouldn't"],"feels oh-so-right":[":)"],"feels really":["strange"],"feels verbose.":["I"],"feels very":["Clojure"],"feels weird":["to"],"felt it":["provided","made"],"felt its":["legible"],"felt like":["a"],"felt premature":["given"],"felt that":["`contains-lcase-chars`","the"],"felt this":["was"],"felt wrong.":["There"],"fence about":["this"],"fence between":["falling"],"fence here.":["Perhaps"],"fence. What":["do"],"fetching rna-transcription":["and"],"few `doseq`s":["and"],"few and":["such"],"few arguments":["against"],"few big":["wins"],"few characters":["by"],"few chars":["on"],"few comments":[":"],"few examples":["that"],"few implementation":["comments"],"few iterations,":["`decompose`"],"few minor":["things,","consistency"],"few more":["satisfying","of"],"few nits":["I"],"few of":["them","the","the"],"few options":["in","in"],"few points":[":"],"few points,":["some"],"few points:":["\u003cbr\u003e"],"few saved":["keystrokes."],"few style":["nits:"],"few suggestions":["on"],"few things":["from","you've"],"few times":["just"],"few tweaks":["and"],"few ways":["to"],"few weeks":["or"],"fewer keystrokes":[";)"],"fiction author.\"":["would"],"fiddling a":["bit"],"fiddling directly":["in","in"],"fiddling in":["the","REPL"],"field. Or":["at"],"fight over":["that."],"figure how":["to"],"figure it":["out.","out,"],"figure one":["out."],"figure out":["what","how","a","how","a","how","how","`[^a-z]`","how","how","`(apply","how","how","exactly","what","a"],"figure what":["that"],"figured for":["one"],"figured out":["how","that"],"figured someone":["would"],"figured that":["was"],"figured the":["best"],"figured there":["would"],"figured this":["out"],"figuring out":["how"],"file (but":["hey,"],"file because":["it"],"file before":["submitting."],"file but":["decided"],"file by":["mistake"],"file does":["say"],"file for":["what's"],"file is":["out"],"file solution":["that"],"file starting":["from"],"file, but":["with"],"file, it":["overwrites"],"file. It's":["just"],"file. Makes":["it"],"files downloaded":["from"],"filter and":["an"],"filter equal":["words."],"filter function":["--","-"],"filter handled":["that"],"filter if":["it"],"filter into":["two"],"filter non-numeric":["characters"],"filter predicate,":["which"],"filter the":["input","word"],"filter-words &":["blank?"],"filtering function,":["without"],"filtering out":["acronyms,"],"filtering the":["entire"],"filters were":["pretty"],"filters will":["be"],"filters. I":["agree,"],"final line":["of"],"final result":["could"],"final sanitizing":["step"],"final statement":["is"],"finally figured":["this"],"finally found":["that"],"finally need":["to"],"finally settled":["on"],"finally stumble":["on"],"finally understood.":["You"],"find ```(=":["sentence"],"find `string/replace`":["not"],"find a":["way","minute","clojure","````last````","function","better","way","way","way","`cond`"],"find all":["sorts"],"find alternatives":["for"],"find an":["end","appropriate","invalid"],"find any":["other"],"find anything":["like"],"find anything.":["Is"],"find dna":["strands"],"find documentation":["for"],"find functions":["that"],"find helps":["you"],"find it":["easier","a","to","much","when","straight","easier","extremely","more","nicer","very","descriptive,","easier","in","more"],"find it,":["something"],"find much":["to","to"],"find my":["solution?","[\"improved\""],"find myself":["waiting"],"find namespace-qualified":["vars"],"find negative":["character"],"find other":["solutions"],"find out":["my"],"find perusing":["the"],"find right":["now."],"find sentences":["that"],"find some":["guidelines"],"find something":["that","for"],"find that":["using","it","awesome.","RegEx's"],"find the":["first","closing","line","use","example,","function.","\"includes-letters?\"","`make-comparable`","score-letter","solutions","`cond`","version"],"find this":["code"],"finding Clojure":["considerably"],"finding any":["elegant"],"finding extracting":["tests"],"finding functions":["having"],"finding if":["the"],"finding it":["really","looks"],"finding that":["there"],"finding this":["one","more"],"finds the":["complement"],"fine (on":["a"],"fine actually,":["it"],"fine but":["the"],"fine by":["me."],"fine either":["way"],"fine for":["this"],"fine in":["a","a"],"fine like":["this"],"fine to":["me.","just"],"fine where":["it"],"fine without":["that.","the"],"fine, but":["in","making","I'd","there","I"],"fine, idiomatic":["Clojure"],"fine, please":["keep"],"fine, there's":["also"],"fine. I":["took","took","just"],"fine. It's":["just"],"fine. Without":["it"],"fine. You":["could"],"fine. You're":["right"],"finely-named predicates?":["It"],"finish going":["through"],"finished reading":["a"],"finished the":["example"],"first -":["it's"],"first /":["non-public"],"first 1)`":["instead"],"first 4":["expressions"],"first Clojure":["program,","functions,","I've","code...","code.","code,","(though","code.","code.","I've","program."],"first I":["wanted"],"first Lisp":["language,"],"first `or`":["gave"],"first and":["they","latest","second:"],"first applicable":["response."],"first approach.":["Just"],"first argument":["or","(or","when","to","to","there"],"first argument,":["so"],"first argument.":["My"],"first attempt":["at"],"first attempt!!":[","],"first attempt!.":["How"],"first attempt,":["but"],"first batch":["of"],"first before":["agonizing"],"first binding":["expression;"],"first bit":["of"],"first blush,":["it"],"first but":["I"],"first candidate":["for"],"first check":["if"],"first clojure":["lines","program...","program,","program,"],"first code":["on"],"first draft":["used"],"first draft,":["there's"],"first even":["for"],"first ever":["exposure","Clojure","Clojure"],"first example":["might","I","in"],"first example),":["or"],"first expression":["and"],"first for":["real"],"first form":["in"],"first glance":["here,","-"],"first go":["you"],"first in":["functional","indentation"],"first item":["from"],"first iteration":["more,"],"first iteration,":["you"],"first makes":["things","partial"],"first match":["means"],"first nit":["you"],"first non-nil":["response"],"first on":["the"],"first one":["often","that","are","is","isn't","rather","is"],"first one.":["For"],"first option,":["but"],"first or":["last"],"first pair":["after"],"first parameter":["in"],"first parameter.":["This"],"first part":["of"],"first passing":["tests"],"first piece":["of"],"first position":["and"],"first program?":["Can't"],"first regular":["expression."],"first rule":["you","expand"],"first saw":["it"],"first solution":["and"],"first solutions":["I"],"first stab":["at"],"first stabs":["at"],"first step":["to"],"first strophe":["would"],"first submission":["wasn't"],"first submission,":["I"],"first submission.":["Now"],"first take":["on"],"first test,":["you're"],"first that":["matches.","matches."],"first the":["principal"],"first thing":["I","I've","I","that","that"],"first time":["around","working","and","`robot-name`"],"first times":["I"],"first tries":["to"],"first try":["(well,","was"],"first two":["predicates","forms"],"first uppercase":["letter"],"first use?":["In"],"first value":["in"],"first value,":["you"],"first version":["makes"],"first word":["once,","only"],"first write":["the"],"first\" macro":["in"],"first\" that":["you"],"first, because":["it"],"first, do":["you"],"first, scratch":["it."],"first-class, you":["may"],"first. Later,":["I"],"first. So":["the"],"fit as":["well."],"fit for":["Clojure","this"],"fit here":["-"],"fit on":["one"],"fit the":["purpose","language"],"fit to":["the"],"fits on":["a"],"fits that":["style"],"fits the":["use","bill"],"fits well":["in"],"fitting here":["instead"],"fitting in":["with"],"fitting name,":["like"],"fix in":["next"],"fix it":["since"],"fix respOnse":["typo"],"fix that":["one."],"fix the":["redundant","lower-casing"],"fix this":["but"],"fixed it":["by"],"fixed length":["output."],"fixed subtle":["bug"],"fixed the":["`defn-`","indentation,"],"fixed today!":[":)"],"fixed up":["the"],"fixed, but":["I"],"fixes the":["problem"],"fizzled out":["..."],"flatter code":["structure."],"flawed. Having":["a"],"fledgling ability":["to"],"flexible. (But":["I"],"flip the":["logic"],"flipped through":["them"],"flow from":["inside"],"flow in":["`word-list`."],"flow like":["`(str"],"flow more":["naturally","naturally"],"flow naturally":["with"],"flow of":["things."],"flow was":["probably"],"flow; maybe":["it's"],"flowing from":["the"],"flows from":["left","the"],"flows more":["naturally"],"flows through":["a"],"fluent in":["clojure."],"fn accepting":["lower"],"fn body":["to"],"fn literal,":["like:"],"fn reader":["macro."],"fn shorthand":["and"],"fn), so":["I'll"],"fn. One":["nitpick:"],"fns -":["maybe"],"fns and":["bindings."],"fns exactly":["opposite"],"fns in":["core"],"fns order":["independent."],"fns that":["explicitly"],"fns. The":["final"],"focus on":["the","expressive,"],"focused on":["the"],"focused private":["functions?"],"focused version.":["And"],"focused. The":["high"],"fold the":["entire"],"folding each":["word"],"follow -":["nowhere"],"follow a":["style"],"follow and":["less"],"follow easier":["to"],"follow the":["flow"],"follow you":["here"],"follow your":["advice","own","reasoning"],"follow, although":["a"],"follow, and":["then"],"follow, especially":["when"],"follow-up comment":["below**"],"follow. I":["can"],"follow. Not":["sure"],"follow. strip-chars":["and"],"followed by":["spaces:","the"],"followed the":["`?`"],"following NS":["declaration"],"following along":["with"],"following discussion":["on"],"following line.":["If"],"following name":["space"],"following snippet":["can"],"following the":["tests"],"following you":["on"],"follows: have":["the"],"fond of":["my","relying","the"],"foo (clojure.core/fn":["([]"],"foo []":["5))"],"foo [x]":["(println"],"foo bar\"":["str/trim"],"foo)` instead":["of"],"food for":["thought:"],"for \"?\")":["and"],"for \"T\"":["and","and"],"for \"dow\"":["(day-of-week),"],"for \"format\"!":["I"],"for \"letterness\"":["of"],"for \"not":["found\""],"for (cond)":["--"],"for (maybe)":["at"],"for (question?)":["you"],"for (sort":["word)"],"for **(re-pattern":["\"...\")**?"],"for -":["could"],"for -1":["bottles"],"for \u003ccode\u003eshouting?\u003c/code\u003e":["but"],"for \u003ccode\u003eyell?\u003c/code\u003e":["and"],"for Bob":["it's"],"for Clojure":["that","..."],"for Clojure.":["Think"],"for DNA":["nucleotides"],"for RNA,":["ACGU,"],"for T":["and","is","and"],"for \\T":["and"],"for `\"default`.":["I"],"for `#(not=":["%"],"for `(=":["\\?","0"],"for `(def":["name"],"for `(first":["nucleotide)`?"],"for `(get":["(nucleotide-counts"],"for `(not":["(empty?"],"for `(partial":["...)`"],"for `=":["0`"],"for `?`":["functions.","I"],"for `?`,":["`!`,"],"for `\\U`":["and"],"for ```clojure.string```":["so","since"],"for ```count-words```,":["taking"],"for ```is-question?```":["because"],"for `all-caps`":["really"],"for `angry?`":["is"],"for `area-code`,":["`prefix`,"],"for `cond`":["into"],"for `do`":["in"],"for `exercism":["f`"],"for `forceful-question?`":["should"],"for `frequencies`":["this"],"for `ifnil?`.":["`false`"],"for `is-question`":["et."],"for `last`,":["but"],"for `nil`":["being"],"for `ns`":["is"],"for `question?`":["could","I"],"for `range-verses`":["-"],"for `require`":["can"],"for `response-for`?":["Glad"],"for `so-many`":["in"],"for `sort`":["-"],"for `third`":["and"],"for `verse`":["ends"],"for `yell?`":["when"],"for `yelling?`":["the"],"for a":["reason","question...","check","silent","little","more","while","Clojure","while","core","core","`?`","somewhat","bit","given","much","namespace","function","much","given","way","word\"","word","word","more","given","moment.","better","`cond`","sorted,","valid","possible","yelled","while","long","little","robot","map","question","bit","nice","few","little","function","functional","regex","concurrent","function","nice","lambda.","lambda","cleaner","cleaner"],"for actually":["measuring!"],"for aesthetic":["reasons."],"for all":["the","the","nucleotides,","the","forms","time","occurrences","screens.","upper","your","the","the"],"for all-caps":["sentences"],"for alphagrams":["and"],"for alphanumeric":["sequences."],"for an":["`:else`.","unrecognised","alternative","experienced","explanation","AssertionError","extra","API"],"for anagram":["with"],"for anagram.":["Also,"],"for anagrams":["using","with","of"],"for anonymous":["function","function."],"for another":["core","core","core","function."],"for any":["input","of","guidelines","feedback!"],"for approval.":["Sorry"],"for approval?":[":)"],"for area-code).":["It"],"for asking.":["If"],"for at":["least"],"for bad":["number"],"for being":["a"],"for binding":["functions"],"for bindings":["interleaved"],"for bob's":["responses"],"for both":["positions","of","adding"],"for both.":["If"],"for bringing":["this"],"for brining":["my"],"for building":["the","the"],"for calling":["out"],"for capital":["letters"],"for cases":["like","like"],"for catch-all":["in","condition"],"for causing":["so"],"for chaining":["your"],"for characters":["in"],"for checking":["its","for","for","anagrams","containment,","whether","for"],"for choosing":["between"],"for clarifying":["subfunctions"],"for clarifying,":["that's"],"for clarity":["—"],"for clarity.":["Alternative",";)"],"for clojure":["was.","-","(and"],"for clojure.":["Gonna"],"for clojure.string.":["This"],"for code":["snippets","that's","clarity."],"for comments":["@willa"],"for comparable":["here?"],"for comparison":["over"],"for comparison.":["`sort-phrase`"],"for comparison?":["Performance"],"for completely":["missing"],"for composability).":["In"],"for concise,":["not"],"for conditions":["checks,","so"],"for consistency":["sake."],"for constructor":["function"],"for containment,":["like:"],"for context).":["It"],"for convencience":["reasons"],"for converting":["to"],"for correcting":["me"],"for data":["structures."],"for date":["handling"],"for declaring":["a"],"for defining":["a","functions.","the","`dist`."],"for defn":["^:private"],"for describing":["the"],"for determining":["whether"],"for different":["number"],"for digits":["and"],"for directives":[":/"],"for doing":["it","the","these"],"for duplicates.":["Is"],"for each":["of","chunk?","entry","candidate?","type","choice","string,","word","candidate,","of","of","of","marker"],"for either":["a"],"for empty":["values","sequences,","match","or"],"for equality":["against","between","test."],"for equality:":["why"],"for evaluating":["`silent?`"],"for every":["pair","check","potential","element","single","nucleotide","candidate."],"for everyone":["to"],"for everything":[":-)"],"for everything,":["so"],"for exactly":["this"],"for example":["a","`:require","in","by","doesn't","in","`(defn","this"],"for example).":["More"],"for example,":["would","interpreting","it","some","`anagram-checker-for`.","`(reduce","to","which"],"for example.":["Thanks","That"],"for external":["use"],"for extract":["only"],"for extremely":["generic"],"for feedback,":["I"],"for filter-words":["&"],"for first":["parameter","argument"],"for forget":["that"],"for forms":["interleaved","that"],"for frequency":["counting."],"for fun":["(read"],"for fun,":["I'd"],"for functions":["in","and","taking","and","that"],"for future":["readers","implementers.","readers","changes.","nitpicking,","reference,"],"for generating":["templated","a"],"for good":["nucleotides?"],"for growth":["too."],"for hash":["maps"],"for having":["them"],"for helping":["me"],"for how":["to"],"for identical":["word","words."],"for if":["something"],"for imported":["namespace,"],"for improvement":["with","with"],"for improvement!":["FWIW,"],"for improvement...":[":)"],"for improvements":["of"],"for in":["to"],"for incrementing":["and"],"for input":["that","validation"],"for inputs":["such"],"for instance,":["if"],"for instance.":[";)"],"for invalid":["input"],"for is":["not","put"],"for it":["=)","to"],"for it's":["unordered"],"for it,":["thanks.","though","but","but"],"for it...":["yet."],"for iteration":["1."],"for its":["length?"],"for its'":["range"],"for just":["one."],"for keeping":["it,"],"for kicks,":["but"],"for large":["strings.."],"for later.":["Any"],"for length":["of"],"for letters":["without"],"for letting":["me","me"],"for loading":["libraries."],"for local":["mutation"],"for long":["string."],"for longer":["pipelines"],"for looking":["and","at"],"for loop,":["as"],"for lower-case":["and"],"for making":["your","functions"],"for many":["other"],"for mapping":["statements"],"for matching":["anagrams"],"for me":["too.","when","to","here?","but","really","to","at","anyway,","was","to","putting","where"],"for me.":["Perhaps","I","However","Eventually"],"for me...":["The"],"for methods":["you"],"for minimal":["clarity"],"for missing":["nucleotides."],"for modifying":["the"],"for more":["inputs","information:"],"for most":["of"],"for mutable":["state"],"for my":["other","next","first","benefit","first"],"for namespacing":["the"],"for naming":["purposes."],"for newbies.":["I"],"for nice":["words"],"for nil":["values"],"for not":["getting"],"for not-blank?,":["this"],"for now,":["but","appreciate"],"for nucleotides":["are","enhance"],"for numbers,":["since"],"for one":["upper","function","line","of"],"for or":["move"],"for other":["core","core","core","core","functions.","people"],"for parallelism":["with"],"for parts":["of","of"],"for passing":["`nil`"],"for people":["unfamiliar"],"for performance":["reasons.","reasons,"],"for picking":["up"],"for pointers":["if"],"for pointing":["both","out","out","me","them"],"for predicate":["functions.","var"],"for predicates":["passed"],"for predicates.":["Is"],"for prime":["factors"],"for prolonged":["silence."],"for proposing":["new"],"for protocols,":["types"],"for protocols/types":["and","and"],"for putting":["arguments"],"for questions":["should"],"for re-defining":["`count`?"],"for re-factoring":["that"],"for readability":["here,","to","purpose","to","to","to","if"],"for readability.":["But"],"for readers":["to"],"for reading":["them","them"],"for real":["life"],"for regular":["expressions"],"for replacements":["that"],"for replacing":["the"],"for response-for":["and"],"for retrieving":["elements","value"],"for returns":["stuff"],"for robot":["names."],"for routing":["responses."],"for scope":["control."],"for second":["regex."],"for self":["reference"],"for sequences.":["You"],"for set":["membership,"],"for sets":["of"],"for setting":["up"],"for shorter":["chains."],"for shouting":["could","before"],"for shouting,":["and"],"for showing":["me"],"for significantly":["more"],"for silence":["...)`"],"for silly":["meta-commentary)."],"for simplifying":["the"],"for single":["argument"],"for situations":["where","like"],"for so":["late.","long"],"for some":["reason","definitions","examples","clarification","nitpicking","measly","consistency","reason","feedback.","to","reason"],"for somebody":["moderately"],"for someone":["who","who","in"],"for something":["more","that","this","simple"],"for sorting":["out"],"for special":["syntax"],"for specific":["cases"],"for split,":["there's"],"for splitting":["the","words."],"for storing":["`sanitized-message`"],"for stretches":["of"],"for string":["or"],"for strings":["without","such"],"for strings.":["I","Using"],"for strip":["at"],"for stupid":["questions"],"for submitting":["this"],"for such":["a","a","a"],"for symbol":["and"],"for taking":["the","this","a","the","the"],"for target":["values"],"for testing":["your","if"],"for that":["exercise","writeup","function.","but","but","use","-","instead","if","in","in","one.","to","statement."],"for that).":["There's"],"for that,":["I","I","would","but"],"for that.":["This","You"],"for the":["comments,","other","feedback!","win!","feedback.","input!","reminder","feedback.","case","tip","approval!","tip.","tips,","conditional","`true`","example...","T","`:else`","feedback.","heads","advice,","general/default","ns","else","catch-all","shouting","awesome","feedback.","feedback.","feedback.","tip!","tip","latest","tip,","feedback.","final","intent","last","purposes","other","misleading","last","advice.","feedback!","last","feedback!","last","feedback.","feedback.","responses.","hints","function","tip.","pointer!","advice","T","hint","sake","\"replace","nucleotides","drill.","language,","tip","pointer","nitpick,","one","silent/shouting/question","sake","feedback.","sake","feedback.","constants","hint.","review","question?","clojure.string","whole","T?","next","future","anonymous","last","last","excellent","feedback.","same","responses.","first","pointers!","hint!","feedback!","long","suggestions,","digits.","feedback.","bit","process","feedback","first","tip,","info","enlightment,","reminder!","predicates","feedback.","T","points.","anagram","feedback.","first","size","help.","data","feedback.","`:require`","feedback!","question,","first","feedback.","last","advice.","conditions","express","other","else","suggestion","feedback!","reminder!","tips","greater","gentle","cond","two","string","response-for","job","job,","length","advice.","hint","pointers;","trees","tips","feedback,","eyes,","prompt","lcase","time","feedback","delimiter)","awesome","feedback!","`string/split`","predicates","pointers.","`frequencies`","feedback","moment:","top","regular","link","sequences.","first","above","feedback","assertion?","help","`words`","comments,","\"frequencies\"","delay.","tip.","parameter","insight.","tip.","function","caller","split.","validation,","last","responses","feedback.","make-anagram-checker","counting.","suggestion,","feedback!","char","style","version","argument","information","`body`","first","tip","case","actual","feedback","`cond`","unwanted","map","nitpick.","tip.","hint.","feedback.","performance","split","kind","translation.","question","feedback.","feedback","feedback!","`verse`","equality","\"thread","`verse`","golf","given","3"],"for these":["short","problems","types","cases","predicates,","sort"],"for things":["like"],"for this":["somehow.","and","to","kind","namespace.","problem","data","submission","that","that","that","submission","assignment","exercise.","kind","purpose,","exercise","exercise","purpose","problem.","to","function","specific","exercise,","problem.","one.","example.","problem.","simple","task.","solution."],"for this).":["It"],"for this,":["or","or"],"for this.":[":)","Is","I'm","You","You"],"for those":["that","familiar"],"for those,":["it'd"],"for those—these":["were"],"for thought:":["is"],"for tip,":["but"],"for too":["long","long"],"for top":["level"],"for transforming/converting":["functions."],"for two":["very"],"for typical":["string"],"for uppercase":["letters"],"for use":["in"],"for using":["java"],"for valid":["nucleotides","characters."],"for validating":["the"],"for validation":["and"],"for validity":["too..."],"for variables:":["`last-index`."],"for very":["large","specific"],"for what":["you're","you","that's"],"for what's":["going","in"],"for when":["a"],"for where":["things"],"for word-count":["I"],"for working":["out","with","with"],"for would":["look"],"for wrapping":["that"],"for you":[":)","to",";-)","(like",":)","and"],"for you're":["conditions?"],"for you),":["and"],"for you,":["but"],"for you.":["Is","Check"],"for you?":["When"],"for your":["predicate","predicates?","suggestion.","conditions?","comments","review!","comments.","first","feedback","`divides`","classification,","placeholder.","helper","feedback.","comments.","suggestions,","tips.","private","time","submission","frequency","tips.","helper","time","map","prompt","feedback!","condp","advice.","great","insightful","comments!","review.","kind"],"for ~2,5":["years."],"for\" gives":["the"],"for, create":["a"],"for. A":["word"],"for. I":["submitted"],"for. I'm":["almost"],"for. Such":["as:"],"for. While":["there"],"for? Also,":["what"],"foray kinda":["fizzled"],"force evaluation":["of","of"],"force everyone":["doing"],"force of":["will"],"force the":["lazy"],"force this":["approach"],"force you":["to"],"forced to":["call"],"forceful case":["as"],"forces you":["to"],"forcing everyone":["to","to"],"foreign. Instead":["we"],"forest for":["the"],"forget that":["-"],"forget to":["remove"],"forgetting about":["the"],"forgetting frequencies,":["so"],"forgetting that":["strings"],"forgetting to":["use"],"forgiving of":["different"],"forgot about":["it.","it"],"forgot here":[":("],"forgot that":["shorthand","existed.","`=`"],"forgot to":["save","balance","save","clean","use","mention"],"forgotten about":["the","that","that","`partial`"],"forgotten to":["hook"],"form (and":["eliminate"],"form (transform3":["(transform2"],"form `#(validate":["(dna-\u003erna"],"form `.trim`,":["`clojure.string/trim`"],"form `letfn`":["that"],"form allows":["you"],"form and":["make","threw"],"form example":["here:"],"form exposes":["a"],"form for":["defn","binding","functions.","that).","making","anonymous"],"form formatting":["is"],"form from":["`re-seq`"],"form if":["you"],"form in":["expression.","the","case","arrow","robot"],"form inside":["the"],"form instead":["of","of","of"],"form is":["typically","slightly","closing","more","a","still","more"],"form like":["`{:area"],"form of":["`require`","higher","[`map`](http://clojuredocs.org/clojure_core/clojure.core/map)?","`map`,","nesting","conditionals"],"form only":["once"],"form or":["in"],"form out":["a"],"form should":["begin"],"form that":["tests","you"],"form to":["explicitly","just"],"form using":["`:use`"],"form with":["`word-description`.","the"],"form would":["look","be"],"form). It's":["also"],"form, and":["I"],"form, so":["I"],"form-(Classname. args*))":["and"],"form. :require":["is"],"form. Alternative":["approach"],"form. I":["went"],"form. It":["is"],"form. The":["more","map"],"form. This":["makes"],"form. Took":["a"],"form. Using":["`require`"],"form. `:use`":["will"],"form/expression. I":["would"],"form; that":["way"],"form](http://clojure.org/java_interop#Java Interop-The":["Dot"],"form](http://clojure.org/special_forms#toc10) for":["the"],"format expressions":["in"],"format properly,":["every"],"format string":["is","is","could"],"format than":["existed"],"format that":["code?"],"format would":["be"],"format? This":["code"],"formatted as":["other"],"formatting -":["all"],"formatting and":["naming","naming"],"formatting because":["I"],"formatting before.":["Is"],"formatting bug":["was"],"formatting code":["dropped"],"formatting in":["`anagrams-for`","`responseLookup`","your"],"formatting is":["non-standard","not","not","a","a"],"formatting issues.":["Usually"],"formatting looks":["good."],"formatting so":["oddly"],"formatting to":["be"],"formatting with":["the"],"formatting, and":["idioms"],"formatting. It":["doesn't"],"formatting/templating at":["all."],"formatting: so":["far"],"formed based":["on"],"formed by":["replacing"],"former one":["must"],"former readers":["better,"],"forms `:use`":["and"],"forms alter":["the"],"forms and":["just"],"forms as":["arguments","much"],"forms could":["be"],"forms in":["clojure?","the"],"forms inside":["`str`"],"forms interleaved":["with"],"forms is":["that"],"forms of":["the","`filter`,"],"forms that":["interleave","are"],"forms to":["explicit"],"forms with":["strings"],"forms. Maybe":["it"],"forms. More":["on"],"forms. Now,":["if"],"forms? See":["if"],"forth with":["@chase"],"forth, and":["eventually"],"forthcoming. Thanks":["for"],"forward and":["clear."],"forward from":["a"],"forward to":["learn","seeing"],"found [NimbleText](http://nimbletext.com/Live)":["very"],"found `clojure.string`":["and"],"found `defn-`!":["New"],"found a":["solution"],"found appreciation":["for"],"found for.":["While"],"found here:":["https://github.com/bbatsov/clojure-style-guide","http://stackoverflow.com/a/11006759/477048","http://blog.fogus.me/2009/12/21/clojures-pre-and-post/"],"found in":["community","a"],"found is":["to","that"],"found it":["in","a","hard","more"],"found no":["better"],"found on":["the"],"found one":["approach","thing"],"found out":["about"],"found that":["handling","would","I","it","1","relying","it"],"found the":["`clojure.string`","`ns`","suggestion","```frequencies```"],"found there":["is"],"found these":["articles"],"found this":["helpful","great"],"found\" values.":["You"],"found, default":["value"],"four separate":["times,"],"four test":["cases,"],"four-character map":["rather"],"fourth one":["is"],"fraction faster":["with"],"frame my":["functions"],"frameworks as":["`assertEqual(expected,"],"franca\" for":["someone"],"free to":["push","ask","suggest","prove","bash"],"free. Let":["it"],"frequencies OF":["the"],"frequencies and":["merging","canonicalized"],"frequencies can":["be"],"frequencies clojure.string/lower-case)`":["into"],"frequencies for":["this","this"],"frequencies implementation":["in"],"frequencies instead":["of"],"frequencies is":["less"],"frequencies might":["be"],"frequencies now":["but"],"frequencies was":["decried"],"frequencies with":["reduce."],"frequencies would":["omit"],"frequencies\" tip,":["it's"],"frequencies)` to":["see"],"frequencies, but":["you"],"frequencies, so":["thanks"],"frequencies, thanks":["for"],"frequencies. By":["using"],"frequencies. Great!":["You"],"frequencies. It":["took"],"frequencies. It's":["almost"],"frequencies. Undoubtedly":["this"],"frequencies/alphagram of":["the"],"frequency counting.":["Neat"],"frequency map":["would","-","function","should",":))"],"frequency map,":["as"],"frequency of":["the"],"frequency to":["evaluation"],"frequent usage":["of"],"friend mentioned":["to"],"friend what":["`-\u003e\u003e`"],"friends on":["IM?\","],"friends should":["work"],"friends) can":["indifferently"],"from 0,":["too)"],"from :use":["to"],"from @corene!":["It"],"from @emmie.":["Introduced"],"from @haylee":["and"],"from Calendar,":["so"],"from Clojure":["for"],"from Common":["Lisp"],"from DNA":["nucleotides"],"from O’Reilly":["and"],"from Ruby":["i"],"from \\s+":["\\W+"],"from `anagrams-for`":["and"],"from `clojure.core`":["to"],"from `clojure.string`":["in"],"from `core`":["here"],"from `drop-while`.":["Ouch"],"from `question?`.":["As"],"from `re-seq`":["inward,"],"from `tone-for`;":["it"],"from a":["`cond`","function","verse-components","string","single","namespace","map","poor","collection","particular","table."],"from all":["the"],"from an":["existing"],"from another.":["The"],"from being":["public","imported"],"from blcooley.":["To"],"from chars":["like"],"from clojure.string":["available,","so","into"],"from clojure.string,":["it"],"from collections":["vs"],"from continuing":["over"],"from core":["clojure","functions"],"from curly-brace":["languages,"],"from current":["namespace"],"from data.":["Still"],"from each":["but","other."],"from either":["ten"],"from exercism":["puts"],"from giving":["them"],"from having":["a"],"from highest":["level"],"from inside":["out","`reduce`","out."],"from java,":["the"],"from left":["to","to"],"from line":["17","17","39,"],"from looking":["at","at"],"from map":["in"],"from multiple":["threads."],"from my":["phone","behalf."],"from now":["you"],"from one":["account"],"from other":["namespaces,"],"from others\"?":["I'm"],"from our":["DNA"],"from over":["2"],"from over-engineering,":["defining"],"from picking":["response."],"from previous":["nitpickers"],"from reading":["your"],"from regex's":["to"],"from ruby,":["I"],"from rubysolo":[";)"],"from scratch,":["but"],"from simplicity":["of"],"from string":["or","so"],"from strings":["of"],"from target":["domain"],"from that":["namespace","set","perspective."],"from that,":["I'm","you"],"from the":["strand.","other","beginning..","docs.","function","language","domain","domain.","site","domain","Foray","implementation,","same","inside","string","conditionals","same","responses,","front","hash","string","problem","domain","public","outside.","logic/algorithm.","memoize","candidates.","if","response","best","list.","phrase","word","code.","current","Calendar","meaning","function","```yelling?```","test","domain","`clojure.string`","problem","phrase.","previous","habit","prime","readme","`this`","conversion.","\"combine\"","transcription","transformation.","map.","transcription","comparable","`response-for`.","perspective","first"],"from there,":["and"],"from there.":["I"],"from thinking":["about"],"from this":["code","example"],"from those":["methods"],"from understanding":["your"],"from using":["clojure.core/count","either"],"from vacation":["now,"],"from version":["4"],"from what":["@mazie"],"from within":["the","the"],"from working":["on"],"from your":["code!","data","previous","single","proposal;","first","namespace","`day-names`"],"from-zero (int":["\\0))"],"from. (It":["also"],"from? I've":["only"],"front :)":["This"],"front for":["readability."],"front in":["this","languages"],"frown hard":["when"],"frowned upon":["in","in"],"frustrated when":["you're"],"frustratingly ended":["up"],"fulfill all":["the","the"],"fulfill such":["requirement?"],"fulfilling the":["test"],"full implications":["of","of"],"full meta-data":["map"],"full of":["goodies,","zero"],"full on":["`cond`,"],"full regex-based":["solution,"],"full string":["prior","scans"],"full string,":["like"],"full-on [`anonymous":["function`](http://clojuredocs.org/clojure_core/clojure.core/fn)"],"full-time Rubyist;":["perhaps"],"fully follow":["your"],"fully grok":["your"],"fully idiomatic.":["Please"],"fully qualified":["name","namespace,"],"fully understand":["when"],"fully-qualified name":["`clojure.core/count`"],"fun (read":["commented"],"fun and":["in"],"fun at":["all"],"fun of":["naming"],"fun to":["word"],"fun with":["it."],"fun, I'd":["try"],"fun, so":["I've"],"fun, try":["this"],"functinon, which":["would"],"function (`-\u003e`)":["and"],"function (as":["you've"],"function (either":["external","in"],"function (if":["there's"],"function (it":["returns"],"function (like":["your"],"function (maybe":["name"],"function (once":["for"],"function **to-rna**.":["While"],"function -":["that's","that"],"function --":["very","that's"],"function .":["Is"],"function I":["was","am"],"function I've":["already","already"],"function `anagram?`":["out"],"function `ffirst`":["for"],"function `frequencies`,":["which"],"function `not=`":["which","on"],"function `re-find`":["that"],"function `response-for`.":["It"],"function `string-\u003esorted-chars`,":["see"],"function a":["question","bit,","little","bit","bit","calls","bit"],"function a,":["both"],"function accepting":["two","a"],"function and":["just","rename","somewhat","I","tried","then","reset-name","call","used","\"count\"","realized","see"],"function application":["would"],"function are":["equally","an"],"function arguments":["as"],"function as":["I've","well","a"],"function assumes":["mutable"],"function assumptions":["about"],"function at":["the"],"function b":["and","calls"],"function based":["on"],"function binding.":["A"],"function bodies":["--","and"],"function bodies;":["generally"],"function body":["on","in","or"],"function body,":["if"],"function but":["I","it","it","given"],"function by":["making","using","pre-applying","choosing"],"function call":["in","it","than","(although","I","on","is","will","per"],"function calls":["makes","the","shorter","like","behind","(string/upper-case"],"function calls,":["it"],"function calls.":["I"],"function can":["be","be","be"],"function checks.":["I"],"function closer":["to"],"function composition":["not","with","more"],"function contains":["other"],"function could":["also","get","optionally"],"function decides":["what"],"function declaration,":["just"],"function declarations":["so"],"function declation":["form."],"function definition":["`anagrams-for`."],"function definition,":["and..."],"function definitions":["are","with","with","that","(and","rather","look"],"function definitions,":["so"],"function descriptions":["in"],"function does":["—","without","not","a","a"],"function does,":["it"],"function doesn't":["seem","seem"],"function domain":["and"],"function down":["to"],"function even":["for"],"function except":["that"],"function executed,":["and"],"function expects":["the","and"],"function first":["tries"],"function for":["any","naming","splitting","it","every","choosing","retrieving","retrieval.","checking","checking","retrieving","determining","every","splitting","the","defining","working","performance","the","not-blank?,"],"function from":["string","`core`","core","your","version","a","an"],"function gets":["passed"],"function given":["to"],"function guarantees":["that"],"function here":["that"],"function here.":["Again,"],"function implementation":["itself"],"function in":["clojure.core","this","the","place","the","question","very","you","the","`bottles`","core","the","core.","a","a","the","the","`clojure.string`","a","addition","clojure.core;","clojure.core;","Clojure.","clojure.core"],"function inside":["`filter`"],"function instead":["of","of","of","of","of","of","of","of","of"],"function is":["somewhat","not","never","*for*?","a","still","so","really","but","more","bounded","your","the","generally","recursive","usually","a","normally","redundant"],"function is,":["and"],"function is.":["There"],"function just":["as"],"function like":["`blank?`","`(#{1","this.","`clojure.string/replace`?","```frequencies```","`is-anagram?`","`has-us-prefix?`.","`count-with`","`filter`.","`cond`","the"],"function line,":["so"],"function literal":["directly,"],"function literal,":["as","you"],"function literal](http://clojure.org/reader#The":["Reader--Macro"],"function literals":["not","could","really"],"function literals.":["\"%1\""],"function looks":["to"],"function made":["the"],"function makes":["about"],"function may":["be"],"function might":["be"],"function mixes":["programmer-lingo"],"function more":["efficient"],"function much":["more"],"function multiple":["times.","times"],"function must":["have"],"function name":["to","and","as","which","and","a"],"function name,":["or"],"function named":["`silent?`","yelling?"],"function names":["is","do.","are","(from","are"],"function necessary?":["Strings"],"function notation":["may","for"],"function numerous":["times"],"function of":["digits","some"],"function on":["`clojure.string`"],"function or":["inlined","similar","two.","a","similar?","anonymous"],"function out":["of","into"],"function over":["a","a"],"function passed":["to"],"function passed.":["`compare-and-set!`","Also,"],"function precondition":["for","to"],"function question2":["it"],"function read":["really"],"function reader":["macro.","macros"],"function responsible":["for"],"function results":["from"],"function returning":["a"],"function returns":["a","a"],"function scoped":["helper"],"function seems":["good"],"function should":["be"],"function shows":["my"],"function since":["one"],"function slightly":["clearer."],"function small":["and"],"function so":["that","that","function","I"],"function suggest":["that"],"function syntax":["`#(if","which"],"function takes":["2"],"function than":["to"],"function that":["does","needs","is","needs","you","does","can","you've","already","can","came","would","you're","returns","you","encapsulated","you","returns","returns","returns","closes","could","you","isn't","saves","can","just","tests","could","would","takes","does","does","allows","handles","takes","uses","I","returns"],"function that,":["given"],"function then":["becomes"],"function through":["using"],"function to":["clarify","get","do","use","get","be","better","take","do","determine","convert","implement","simplify","simplify","sort","do","break","build","do","use","normalize","be","compare","simplify","map","reduce","simplify"],"function too":["after"],"function until":["now."],"function using":["partial","`reduce`"],"function variables":["vis."],"function very":["expressive."],"function vs":["in"],"function was":["taking","a","originally"],"function wasn't":["needed"],"function when":["you"],"function where":["I","I","they're","`set`"],"function wherever":["possible."],"function which":["you","you","you","you","you","works","you","you","you","you","you","you","wraps","creates","might","might","would","wouldn't"],"function will":["work","make","return"],"function with":["a","`[&amp;","the","the","pre-calculated","the","#","a","the","a"],"function within":["clojure.core"],"function working":["the"],"function works":["the"],"function would":["be","be","be","return","then","look","be"],"function wrapping\"":["in"],"function you":["mean....","can","can","describe","use","can","can"],"function you'd":["want"],"function! :D":["I"],"function's arguments":["is"],"function's arguments,":["the"],"function's assumptions":["about"],"function's docstring":["(text"],"function's docstring,":["these"],"function) so":["`partial`"],"function) that":["enables"],"function, I":["think","cannot","think"],"function, and":["the","naming","whether","I"],"function, as":["the","it"],"function, because":["a)"],"function, but":["I","it","I"],"function, can":["do."],"function, even":["a"],"function, for":["readability"],"function, hence":["`matches`"],"function, however,":["I"],"function, including":["moving"],"function, just":["seemed"],"function, like":["`({:a","this"],"function, makes":["for"],"function, returning":["the"],"function, since":["maps","I","the","splitting"],"function, so":["you","I","loading"],"function, that":["looks","lead"],"function, which":["-","is","are","is"],"function, without":["partial."],"function, you":["do","can"],"function-name (fn":["[argument]"],"function-name [argument]":["...`"],"function. (Note":["that"],"function. (The":["mappings"],"function. Also":["-"],"function. Also,":["Uracil","someone","`\\s`"],"function. Although":["at"],"function. Beautifully":["expressive."],"function. But":["I"],"function. Consider":["breaking"],"function. Couldn't":["it"],"function. Does":["Clojure's"],"function. For":["the"],"function. Hint:":["`contains?`"],"function. I":["feel","prefer","am","love"],"function. I'll":["leave"],"function. In":["my","this"],"function. It":["is","seems","might","was"],"function. It'll":["make"],"function. Looking":["at"],"function. Map":["lookup"],"function. One":["tiny"],"function. Other":["than"],"function. Personally":["I"],"function. So":["if"],"function. That":["might"],"function. That's":["called"],"function. The":["reader","second"],"function. They":["should"],"function. This":["is"],"function. Well":["done!"],"function. Will":["remove"],"function. Worse":["yet,"],"function. Worth":["comparing"],"function. You":["could","could","probably","could"],"function. `invalid?`":["test"],"function. e.g.":["`sort"],"function/idiom that":["is"],"function/map, obtaining":["corresponding"],"function: either":["with"],"function: it's":["super"],"function; it":["should"],"function; it's":["likely"],"function; recommend":["you"],"function; the":["use"],"function? (honest":["question,"],"function? A":["question"],"function? Maybe":["something"],"function? On":["the"],"function? Perhaps":["something"],"function`](http://clojuredocs.org/clojure_core/clojure.core/fn) to":["support"],"functional construct.":["There's"],"functional decomposition":["which"],"functional decomposition.":["For"],"functional language":["exactly."],"functional language?,":["which"],"functional paradigm":["in"],"functional paradigms":["apply,"],"functional point":["of"],"functional programming":["and","and","languages,","and","novice"],"functional stuff,":["like:"],"functional style":["if"],"functional style.":["But"],"functional use":["of"],"functional way":["do"],"functional way.":["I'm"],"functionality is":["available"],"functionality of":["`random-string`"],"functionality out":["into"],"functionality rather":["than"],"functionality such":["as"],"functionality that":["could"],"functionality with":["reduce"],"functionally deprecated":["at"],"functionally equivalent":["to"],"functions (`defn-`)":["instead","with"],"functions (done":["using"],"functions (even":["under"],"functions (mostly":["defined"],"functions ,":["Is"],"functions FTW":[":)"],"functions I":["have","look","provide"],"functions _if_":["they're"],"functions `dna-to-rna`":["or"],"functions above":["their"],"functions adds":["more"],"functions allows":["you"],"functions alone":["(comp"],"functions among":["multiple"],"functions an":["\"Enterprisey\"!"],"functions and":["giving","`def","values","responses.","namespaces","`def","regex's?","make","can","the","then","see"],"functions applied.":["So"],"functions are":["needed?","probably","integral","available","a","called","predicates","now"],"functions arguments.":["This"],"functions around":["it."],"functions as":["private","opposed","well","first-class,","just","well?","opposed","well,"],"functions at":["the"],"functions available":["to"],"functions be":["public","external."],"functions before":["and"],"functions being":["made","a"],"functions body":["which"],"functions but":["I'll","not"],"functions by":["using","introducing:"],"functions can":["be","be"],"functions clearer,":["though"],"functions come":["from","from.","from."],"functions could":["make"],"functions dealing":["with"],"functions defined":["for","as"],"functions do":["the","the"],"functions does":["clojure"],"functions don't":["necessarily"],"functions e.g.":["in"],"functions etc).":["For"],"functions extracted":["from"],"functions for":["the","the","many","conditions","the","incrementing","checking","working","this.","the","these","replacing","converting","your","what"],"functions from":["clojure.string","inside","clojure.string","string","data.","the","clojure.string,"],"functions get":["bigger"],"functions gets":["astronomical"],"functions having":["their"],"functions hiding":["them"],"functions if":["it"],"functions implemented":["before"],"functions in":["the","order","Clojure.","clojure.","clojure","threading","this","a","such","one","a","the","the","clojure.core","Clojure.","haskell/erlang/etc","a","clojure.string","a","another","Clojure.","a","Clojure","some"],"functions inside":["another"],"functions instead":["of","to","of","of","of"],"functions into":["a"],"functions is":["bad?","the","defined.","generally","generally","definitely","the"],"functions it":["was"],"functions justifies":["it"],"functions like":["`count`,","`count`,","string","`re-find`","`beer`"],"functions local/private":["and"],"functions make":["sense."],"functions makes":["this"],"functions matched":["the"],"functions may":["be","return"],"functions might":["also"],"functions need":["to"],"functions non-public":["but"],"functions not":["being"],"functions on":["it."],"functions once":["inside"],"functions only":["take","be"],"functions operating":["on"],"functions or":["`letfn`s","seq"],"functions out":["of","of"],"functions private":["and","would","so","with","would"],"functions private,":["using"],"functions provided":["by"],"functions putting":["the"],"functions returns":["nil,"],"functions seemed":["more"],"functions seems":["to"],"functions should":["be","probably","probably","assume","be","be","be","return"],"functions shouldn't":["be"],"functions so":["that","that","that","that","that"],"functions sounds":["fine."],"functions such":["that","as"],"functions taking":["single"],"functions that":["would","can","do","would","return","were","are","are","build","you","can","explained","each","might","return","should","can","might","return","you","return"],"functions the":["sentence"],"functions things":["like"],"functions to":["denote","give","be","avoid","replace","be","get","make","make","gain","a","ensure","reduce","perform"],"functions until":["you"],"functions using":["the","the"],"functions when":["we","possible."],"functions which":["it","would"],"functions whose":["names","names"],"functions will":["make","be"],"functions with":["descriptive","descriptive","intention-revealing","intention-revealing","intention-revealing","intention","an","intention-revealing","intention-revealing","names","intention-revealing","intention-revealing","no","intention-revealing","arity","intention-revealing","name","descriptive","intention-revealing","intention-revealing","intention-revealing","multiple","intention-revealing","more","the","meaningful","meaningful","names","great","5","multiple"],"functions within":["the"],"functions work:":["`count`,"],"functions would":["make","make","suffice.","be"],"functions you're":["calling—either","calling"],"functions you've":["defined","used","used","used"],"functions). This":["leaves"],"functions, I":["took"],"functions, although":["I","looking"],"functions, and":["tied","doseq","destructuring"],"functions, but":["it","I'm"],"functions, can":["you"],"functions, create":["bindings"],"functions, eg.":["`(:T"],"functions, etc.,":["ends."],"functions, expressing":["what"],"functions, here,":["I"],"functions, if":["there"],"functions, instead":["of"],"functions, is":["to"],"functions, it":["might"],"functions, maybe":["`yelling?`"],"functions, or":["link"],"functions, please":["let"],"functions, rather":["than"],"functions, so":["it"],"functions, thanks":["for"],"functions, the":["inner","value"],"functions, there":["is"],"functions, where":["the","the"],"functions, which":["made"],"functions, you":["could"],"functions. (not-any?":["is"],"functions. (the":["form"],"functions. Any":["suggestions?"],"functions. As":["far"],"functions. But":["that's"],"functions. Even":["better"],"functions. For":["example:","some"],"functions. However":["it"],"functions. I":["would","would","think","still","finally","could","tried","took"],"functions. I'm":["new"],"functions. It":["would","addresses","allows"],"functions. Maybe":["you"],"functions. Not":["need"],"functions. Thanks":["for"],"functions. The":["motivation"],"functions. There":["are"],"functions. These":["can"],"functions. They":["are","are"],"functions. This":["version"],"functions. Unsure":["if"],"functions. What":["do"],"functions. You":["could"],"functions. `count-nucleotides`":["can"],"functions. e.g.":["The"],"functions/strategies to":["reduce"],"functions: `:refer":["(lower-case)`."],"functions: `ends-with-a-question-mark?`":["and"],"functions? Also,":["it's"],"functions? How":["about"],"functions? It":["almost"],"functions? Maybe":["they'd","some"],"functions? Or":["binding"],"functions? That":["could"],"functions? They're":["currently"],"functions? [-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E)":["and/or"],"functor `all?`":["is"],"funny thing":["is"],"funny to":["read"],"funny. Couldn't":["that"],"further and":["limit"],"further by":["checking"],"further down.":["`declare`","Ha!"],"further exploration":["in"],"further into":["why."],"further iterations":["to"],"further nits":["to"],"further refactoring":[":)"],"further since":["I"],"further, it":["would"],"further, one":["would"],"further. What":["other"],"fuss. I":["have"],"future --":["if"],"future consider":["if"],"future nitpicking,":["thanks."],"future readers":["if","know","by","of","with","understand","of"],"future readers,":["I"],"future reference":["-"],"future reference,":["if","when"],"future self":["will"],"future you":["can"],"future, please":["put"],"future, this":["implementation"],"gah! If":["I"],"gain an":["isolated,"],"gain in":["readability.","leaving"],"gain much":["with"],"gain with":["the"],"gaining is":["being"],"game—not to":["mention"],"gave `\"T\"`":["and"],"gave `\\T`":["and"],"gave me":["a","a","some","lots"],"gave names":["to"],"gave the":["example"],"gave up":["on"],"gene1 gene2))`":["looks"],"gene1 gene2)`":["where"],"gene2))` looks":["perfectly"],"gene2)` where":["`…`"],"general `coll`.":["`Sets`,"],"general and":["often"],"general but":["I"],"general cases.":["Can"],"general conditions":["are"],"general conditions.":["These"],"general expression":["come"],"general feels":["about"],"general java":["interop,"],"general nitpick":["about"],"general purpose":["would","random","function"],"general purpose,":["I"],"general rand-chars":["function"],"general random":["string"],"general rule,":["it's"],"general sequence/collection":["operators"],"general set":["of"],"general solution":["to"],"general than":["the"],"general) is":["generally"],"general, I":["think","prefer","agree."],"general, I'd":["like"],"general, I'm":["having"],"general, metadata":["can"],"general, so":["that"],"general, using":["constants"],"general. I":["look"],"generalise the":["conditions"],"generalization of":["```if```.","`if`"],"generalized inflection":["function"],"generally `:else`":["is"],"generally agnostic":["with"],"generally agreed":["to","that"],"generally because":["there"],"generally better":["to"],"generally considered":["to","good"],"generally deprecated":["-"],"generally deprecated.":["Besides"],"generally desirable":["to","to"],"generally encouraged":["and"],"generally find":["it"],"generally frowned":["upon","upon"],"generally good.":["It","I"],"generally harder":["to"],"generally it's":["better","more"],"generally just":["use"],"generally leads":["to"],"generally only":["recommended","recommended","recommended"],"generally prefer":["putting"],"generally preferred":["to","and"],"generally reserved":["for"],"generally should":["be"],"generally speaking,":["using"],"generally the":["convention"],"generally two":["spaces"],"generally used":["only"],"generally, 2":["points"],"generate a":["compile","random"],"generate all":["of","of"],"generate code":["like"],"generate documentation":["for"],"generate good,":["useful"],"generate it":["once"],"generate it.":["Haven't"],"generate the":["filter","hash","filter","empty","\"99","\"99","word","functions","bottle","methods","functions","name."],"generate words":["by"],"generated in":["a"],"generated names":["to"],"generated string?":["Sot"],"generated. And":["when"],"generates a":["warning"],"generates its'":["processed"],"generating a":["serial","bunch"],"generating functions":["in"],"generating it":["randomly"],"generating my":["new"],"generating names":["with"],"generating templated":["strings."],"generating your":["constants"],"generation -":["I'm"],"generation fn":["accepting"],"generation is":["less"],"generation scheme":["if"],"generation was":["a"],"generation. Also,":["I"],"generator which":["could"],"generators as":["I"],"generators in":["a"],"generic Collections":["(List,"],"generic for":["each"],"generic functions":["before"],"generic functor":["`all?`"],"generic manner,":["and"],"generic methods.":["I"],"generic name":["that"],"generic robot":["protocol"],"generic term.":["would"],"generic to":["avoid"],"generic with":["the"],"genome, etc...).":["Unfortunately,"],"gentle kick.":[":-)"],"geoff. I'll":["probably"],"get (or":["just"],"get DRY":["at"],"get `false`":["but"],"get a":["chance","nice","'signature'","feel","really"],"get all":["words"],"get any":["better","more"],"get approved.":["But"],"get approved?":[":)"],"get around":["this","order-dependence.","using"],"get at":["the","first"],"get away":["with","with","with"],"get awkward":["if,"],"get back":["to","the","the","to"],"get bigger":["and"],"get by":["with","without","using","with"],"get cleaner":["response-for","`response-for`"],"get different":["response"],"get down":["to"],"get even":["the"],"get feedback":["that","that"],"get for":["reading","reading","a","doing"],"get frustrated":["when"],"get how":["the"],"get it":["going"],"get it.":["With"],"get it...":["you"],"get many":["people"],"get me":["to"],"get moody":["sometimes..."],"get more":["examples"],"get much":["better.","out","more","good"],"get my":["head"],"get on":["to","exercism."],"get out":["of"],"get overly":["picky..."],"get people":["to"],"get quite":["concise"],"get regexes":["to"],"get rid":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"],"get shorter":["or"],"get some":["convenient","feedback.","feedback"],"get something":["out"],"get the":["last","last","last","second","count","last","`partial`","context","words","tests","new","coordinates","`response-for`","right","ASCII"],"get then":["the"],"get things":["back"],"get this":["to","to","same"],"get to":["a","the","something","really"],"get too":["much"],"get towards.":["This"],"get used":["to,","to","to","inappropriately","to"],"get warning":["about"],"get warnings":["from"],"get what":["\"order","\"order","`rest`"],"get with":["`update-in`."],"get without":["too"],"get working":[":-)"],"get you":["the"],"get your":["point."],"gets a":["string"],"gets astronomical":["how"],"gets impossible":["to"],"gets its":["name?)"],"gets passed":["the"],"gets put":["in"],"gets sorted":["once?"],"gets the":["character","job","argument."],"getter functions,":["eg."],"getters directly,":["like"],"getting a":["ClassNotFoundException.","bit","warning","little","bit","bit"],"getting at":["is","(finding"],"getting at.":["Cool,"],"getting away":["from"],"getting back":["to"],"getting drunk":["or","and"],"getting into":["clojure"],"getting it":["to","in"],"getting more":["compact..."],"getting nitpicky":["now)"],"getting rid":["of","of","of"],"getting the":["right","macro","list","appropriate","first","benefit"],"getting two":["failures"],"getting used":["to","to","to"],"getting validated":["input."],"getting you":["anything."],"gist are":["the"],"gist of":["the"],"give \"U\"":["and"],"give `s`":["a"],"give a":["sensible","function","pause"],"give an":["example"],"give is":["to"],"give it":["a","a","a","a","2"],"give me":["an","a","a","the"],"give meaning":["to"],"give meaningful":["names"],"give more":["meaning."],"give names":["to"],"give some":["intermediate","domain","context,","indication","visual"],"give specific":["instances"],"give the":["\"T\"","`and`-ed"],"give them":["descriptive","intention-revealing","a","a","some","interesting"],"give up.":["Here's"],"give you":["another","enough","three","a","another"],"give your":["characters"],"given API.":["When"],"given `word`":["once,"],"given a":["non-insanely-trivial"],"given algorithm":["-"],"given an":["empty"],"given and":["has"],"given as":["a"],"given by":["`glojure.string`."],"given descriptive":["names"],"given function.":["So"],"given index.":["`Maps`"],"given language":["but"],"given my":["own"],"given names":["(e.g.","in"],"given number":["to"],"given parameter":["`msg`"],"given pattern":["here"],"given predicates":["does"],"given program":["should"],"given sentiment,":["the"],"given some":["arbitrary"],"given statement":["was"],"given statement),":["but"],"given string.":["Optionally,"],"given target":["acid’s"],"given tests)":["are"],"given tests,":["it"],"given that":["the"],"given the":["other","\"let\"","simplicity","JVM.","nature","partial","constraints","regex","first","problem","set"],"given to":["```to-rna```?","is"],"given two":["arguments"],"given unit":["tests."],"given word":["you"],"given you":["a"],"gives me":["an","4"],"gives quite":["good"],"gives the":["response"],"gives you":["is"],"giving a":["name"],"giving it":["deep","away"],"giving me":["a"],"giving names":["to","to"],"giving some":["of","additional"],"giving the":["right","predicates"],"giving them":["useful","meaningful","names."],"giving those":["conditions"],"giving your":["lines"],"glad I":["could"],"glad to":["see","have"],"gladly trade":["typing"],"glance -":["even"],"glance and":["only"],"glance here,":["but"],"glance what":["each"],"global scope":["--"],"global var":["in"],"globally. You":["probably"],"glue code":["you"],"glue parts":["together"],"go ahead":["and"],"go and":["read"],"go at":["using","rereading","a","it","the"],"go back":["to"],"go backwards":["on"],"go down":["this"],"go either":["way","way","way"],"go first":["for"],"go first,":["because"],"go for":["me.","concise,","a"],"go from":["there."],"go further":["since"],"go further,":["it"],"go into":["why"],"go so":["over"],"go that":["route"],"go the":["\"insane\""],"go this":["route?","route"],"go through":["all"],"go to":["a"],"go with":["something","more","the","`clojure.string/lower-case`","`is-shouting?`.","the","the","that.","that."],"go without":["the"],"go wrong":[":D"],"go you":["could"],"go, nice":["one!"],"go. I":["just","just"],"go. Most":["people"],"go. No":["need"],"go: what":["would"],"goal in":["O(n)"],"goal is":["for"],"goal of":["exercism"],"gobsmacked if":["a"],"goes for":["`question?`"],"goes given":["a"],"goes googling":["private"],"goes into":["the"],"goes through":["all"],"goes to":["show"],"goes, I":["think"],"goes, you":["may"],"going about":["it,"],"going again":["at"],"going directly":["to"],"going element":["by"],"going for":["something"],"going further,":["one"],"going in":["general","my","terms"],"going on":["here.","in","in","in","with","here:"],"going on,":["but","but"],"going on.":["That","I"],"going though":["and"],"going through":["it,"],"going to":["approve","do.","work,","be","be","take","just","keep","suggest","focus","evaluate","try","spoil","be","understand","have","write","make","a","revise","submit","do","try","slightly","inline"],"going with":["a"],"going. I'm":["not"],"golf qualities.":["`letfn`"],"golf this,":["then"],"golf, keep":["in"],"golfing here),":["but"],"gone a":["bit"],"gone looking":["for"],"gone there":["didn't"],"gone too":["far"],"gonna give":["it"],"good -":["but"],"good --":["I","I"],"good Clojure":["experiment"],"good I":["am"],"good a":["name"],"good abstractions,":["naming"],"good alternative":["to"],"good and":["gave"],"good argument,":["so"],"good at":["first","all...","expressing"],"good call":["on"],"good call.":["I"],"good call;":["I"],"good case":["for","for"],"good catch":[":)"],"good chunk":["of"],"good code":["that"],"good docs":["and"],"good docstring":["for"],"good editor":["will"],"good enough":["for","to","to","to","to"],"good example":["of"],"good except":["the"],"good exercise":["for"],"good experiment.":[":)"],"good explanation":["of"],"good feedback":["on"],"good fit":["here"],"good for":["readability.","readability","readability","your","readability","a"],"good from":["that"],"good function":["names."],"good functional":["style.","decomposition"],"good guide](http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html)":["to"],"good idea":["to","to","to","to","to","for","to"],"good idea.":["I","I'll"],"good if":["`silence?`","you","there","program","you"],"good in":["Clojure","Clojure"],"good indicator":["that"],"good job":[":)","to","on"],"good learning":["experience.","resource?"],"good locks!":["Way"],"good most":["of"],"good name":["for"],"good name.":["In"],"good names":["from"],"good news":["is"],"good nucleotides?":["You"],"good observation.":["Yeah,"],"good one.":["It"],"good opportunity":["to"],"good opportunity.":["A"],"good other":["than"],"good picture":["of"],"good plan":[":)"],"good point":["about","about","—","about","on"],"good point!":["Tried"],"good point,":["checkout","I","pushed","done."],"good point.":["I've"],"good points!":["changed"],"good points.":["In"],"good practice":["anyway.","in","to","to","to","for","to","or"],"good question,":["if"],"good question.":["The"],"good readable":["special"],"good readable.":["What's"],"good reason":["to","for"],"good reasons.":["Probably"],"good sequence":["library."],"good sign":["that","that"],"good solution":["to","that"],"good sort":["of"],"good start":["I"],"good stuff":["from"],"good suggestions":["I'm"],"good suggestions,":["thanks."],"good thing":["to","in"],"good time":["to","to","to","to"],"good to":["me.","see","me.","me.","me.","me!","me!","me.","me.","see","see","me.","me.","me.","me.","me","me.","go,","me.","me.","know.","go:","know.","go.","spread","put","put","keep","see","me,","me.","me,","know.","me.","use","me,","me.","me.","me!","me.","me.","bind","me.","extract","me."],"good too.":["I'm"],"good use":["of"],"good way":["of","to","to"],"good with":["minor"],"good you":["thought"],"good! (I'm":["on"],"good! About":["the"],"good! Here":["are"],"good! Not":["sure"],"good! One":["style","small"],"good! What":["would"],"good, I'm":["sure)"],"good, a":["few"],"good, although":["the","I"],"good, but":["it","it","just","could","you"],"good, however":["I"],"good, just":["a"],"good, the":["only","only"],"good, these":["are"],"good, though":["I'd"],"good, useful":["discussions"],"good. +1":["for"],"good. A":["couple"],"good. Additionally,":["by"],"good. Ah,":["that's"],"good. Are":["you"],"good. Did":["you","you"],"good. Do":["you"],"good. Earmuffs":["are"],"good. Generally,":["two"],"good. Have":["you"],"good. How":["come"],"good. However,":["somebody"],"good. I":["like","have","would,","think"],"good. I'm":["not"],"good. I've":["submitted","also"],"good. In":["future","`sort-grade`"],"good. Is":["there"],"good. It":["might"],"good. It's":["slightly"],"good. Maybe":["assigning"],"good. Nice":["use"],"good. One":["little","minor","small"],"good. Optionally,":["you"],"good. Personally":["I'd"],"good. Reads":["like"],"good. Regex":["is"],"good. Some":["minor"],"good. The":["only","only","only"],"good. There's":["some"],"good. What":["do"],"goodies, use":["them"],"google +":["clojure"],"google for":["'alphagram'.","\"alphagram\"."],"google groups.":["It's"],"google search":["and"],"google to":["see"],"googled and":["found"],"googling a":["bit"],"googling for":["code"],"googling private":["functions"],"got a":["nitckpick","point:","warning","bit","little","`case`"],"got caught":["up"],"got everything":["working."],"got it":["working."],"got it.":["`if"],"got just":["enough"],"got lost,":["sorry"],"got mad":["at"],"got my":["wires"],"got myself":["a"],"got nitpicked":["on"],"got rid":["of","of","of","of","of","of"],"got similar":["feedback"],"got some":["help"],"got submitted":["to","early,"],"got the":["hang","domain","following"],"got to":["the","learn"],"got valid":["DNA"],"got when":["I"],"gotcha. Good":["idea."],"goto conditional.":["But"],"gotta try":["that"],"gotten a":["bit"],"gotten in":["the"],"gotten this":["response"],"grab the":["words","last"],"graceful ways":["to"],"grade [])":["calls"],"grade [])`":["for"],"grade in":["add"],"grammar is":["valid"],"grant the":["readme"],"grasped the":["`partial`"],"grateful for":["your"],"great &amp;":["useful"],"great -":["the","but","the"],"great --":["really"],"great Lisp":["editor."],"great as":["this"],"great case":["of"],"great catch":["on"],"great construct":[":)"],"great deal":["by"],"great exercise":["to"],"great feedback,":["thank"],"great feedback.":["Just"],"great for":["picking"],"great generally,":["2"],"great in":["Ruby"],"great learning":["exercise,","experience."],"great names.":["I've"],"great nit!":["It"],"great of":["a"],"great point.":["I","I"],"great points.":["I"],"great post":["about"],"great thanks.":["Too"],"great tips.":["Applied"],"great to":["see","keep","me.","try","me."],"great tool":["but"],"great use":["of","of"],"great! I":["have"],"great! My":["only"],"great! The":["only"],"great!\" button":["here"],"great!' at":["the"],"great, I":["think"],"great, although":["for"],"great, and":["it's"],"great, but":["why","why","`(=","I'm","I","one"],"great, except":["the"],"great, my":["only"],"great, thanks":[":)"],"great-named parameter,":["I"],"great. But":["maybe"],"great. I":["gotta"],"great. My":["only"],"great. The":["only"],"greater clarity":["and"],"greatly just":["by"],"greatly once":["you"],"greatly reduce":["the"],"greatly simplifying":["the"],"greatly? I":["think"],"green, I'll":["refactor."],"greeting (clojure.string/upper-case":["greeting))","greeting))"],"greeting) \"Fine.":["Be","Be"],"greeting) \"Woah,":["chill"],"greeting)) \"Woah,":["chill"],"grill you":["on"],"grok Clojure":["a"],"grok your":["second"],"gross, its":["literally"],"group all":["closing"],"group the":["number/letter"],"group-by but":["I"],"groupings so":["that"],"groups of":["non-word"],"groups. It's":["great"],"grows, this":["may"],"grumbling \"if":["only"],"guanosine thymidine":["uracil}"],"guarantee that":["the"],"guarantee you":["that"],"guarantees that":["hash(A)"],"guaranties for":["hash"],"guard against":["the"],"guard before":["`string/replace`,"],"guess I":["could","could","could","could","could","missed","see","like","don't"],"guess all-caps?":["can"],"guess it":["would"],"guess it's":["also"],"guess it’s":["done.","safe"],"guess leaving":["function"],"guess my":["way","way"],"guess one":["minor"],"guess there's":["not"],"guess using":["`clojure.string/replace`"],"guess what":["some"],"guess which":["one."],"guess would":["be"],"guess) to":["end"],"guess). `into`":["is"],"guess, I'm":["not"],"guess, in":["which"],"guess. I've":["updated"],"guess. Maybe":["a"],"guess. Thanks":["for"],"guess. This":["code"],"guess.) However,":["that"],"guessing at":["its"],"guessing you":["left"],"guide I":["have"],"guide at":["https://github.com/bbatsov/clojure-style-guide","https://github.com/bbatsov/clojure-style-guide"],"guide compiled":["by"],"guide maintained":["by","by"],"guide me":["towards"],"guide was":["an"],"guide you":["link"],"guide, I":["do"],"guide. I":["still"],"guide. I've":["posted"],"guide](http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html) to":["all"],"guideline for":["proposing"],"guidelines and":["common"],"guidelines can":["be"],"guidelines here":["https://github.com/bbatsov/clojure-style-guide"],"guidelines on":["indentation,","style,"],"guidelines, I":["typically"],"guiding pattern":["in"],"gut feeling":["that"],"gut reaction":["is"],"gut says":["building"],"guts of":["it"],"guy here.":["Removed"],"guys --":["Language"],"guys. I":["had"],"ha ,":["I"],"habit I’ve":["developed"],"habit of":["reading","typing","documenting"],"habits die":["hard."],"hack ```":["(str"],"hack around":["condp:"],"hacky to":["me."],"had `:else`":["return"],"had ```cond```":["available."],"had `count-with`":["and"],"had `frequencies`":["like"],"had a":["misspelling","collection","feeling","`swap`","similar","replace"],"had accidentally":["left"],"had all":["the","my"],"had an":["inline"],"had any":["deep"],"had been":["nominated","wondering","calculated,"],"had certain":["characteristics,"],"had clearly":["a"],"had committed":["with"],"had considered":["that"],"had decent":["amount","amount"],"had destructuring":["for"],"had done":["that"],"had forgotten":["about"],"had in":["mind,"],"had it":["all","return"],"had its":["currying..."],"had large":["strings"],"had little":["knowledge"],"had my":["doubts"],"had names":["like"],"had never":["actually","used"],"had no":["idea","idea"],"had not":["thought"],"had on":["my"],"had only":["seen"],"had sanitize":["and"],"had screwed":["up"],"had should":["be"],"had smoother":["experiences"],"had so":["far"],"had some":["trouble"],"had stopped":["to"],"had the":["predicates","previous","side"],"had thought":["about"],"had to":["read","add","come","add","work","process","duplicate","be","write","dig","modify","resort","inline","close","use","be"],"had trouble":["making"],"had troubles":["with"],"had used":["`:else`"],"had when":["using"],"had't actually":["seen"],"hadn't been":["able"],"hadn't done":["the"],"hadn't realized":["replace"],"hadn't responded":["yet."],"hadn't thought":["to"],"hadn't worked":["out"],"hadn’t considered":["transliteration"],"haha, markdown":["fail!"],"hammer when":["you"],"hamper a":["bit"],"hand a":["already"],"hand and":["a"],"hand it":["reads"],"hand, I":["could","hate"],"hand, bludgeoning":["this"],"hand, e.g.":["moving"],"hand, relies":["on"],"hand, you":["could","could"],"hand, your":["comment"],"hand. Feedback":["on"],"handcrafted code":["here"],"handed just":["the"],"handful of":["functions"],"handle Unicode,":["I"],"handle anything":["thrown"],"handle arbitrary":["inputs?"],"handle but":["it"],"handle more":["general"],"handle punctuation":["as"],"handle that),":["the"],"handle the":["null","implementation","partial"],"handle this":["instead"],"handled by":["composing"],"handled for":["this"],"handled in":["respective"],"handled that":["nicely"],"handles just":["that"],"handles this":["as"],"handling is":["kind"],"handling large":["input."],"handling library":["clojure.string"],"handling str":["mapping"],"handling the":["counts","problem"],"handling unicode.":["Consider"],"handy (aliasing":["the"],"handy alias":["for"],"handy functions":["for"],"handy hsortcut":["cljstr,"],"handy when":["writing"],"hang at":["all"],"hanging paren,":["but"],"hanging parenthesis":["(LISP"],"hangout -":["just"],"happen here":["since"],"happen if":["I","the","none","the","an"],"happen is":["I"],"happen to":["think"],"happening here,":["defining"],"happening in":["the"],"happening to":["the"],"happens automatically,":["like"],"happens for":["more"],"happens if":["the","you","none","a","your","we","you"],"happens in":["case"],"happens once":["without"],"happens to":["be","be","also"],"happens. It":["took"],"happier with":["the","this"],"happier. I'm":["not"],"happily fight":["over"],"happy about":["any"],"happy to":["see","see"],"happy with":["it.","this","this","this.","lines","how","having","`new-robot-name`","my","this.","the","it.","as"],"happy, and":["filter"],"hard coded":["inputs."],"hard for":["you?"],"hard so":["I"],"hard to":["figure","find","improve","understand.","read.","be","decipher","get","read.","follow.","read","tell","argue","read","follow,","justify","read","follow.","parse","follow"],"hard when":["I"],"hard with":["the"],"hard would":["be"],"hard-coded to":["the"],"hard. What":["would"],"hardcoded value":["into"],"hardcoded zipmap":["(also,"],"harder for":["readers"],"harder problem":["would"],"harder than":["it"],"harder time":["reading"],"harder to":["tell","read.","read","understand","read.","follow","understand.","get","read?","read?","read","refactor","understand.","understand."],"hardest part":["was"],"harm in":["spelling"],"has 3rd":["optional"],"has a":["more","fair","lot","pretty","better","simple","replace","certain","great-named","redundant","name!","couple","function","`split`","function","specific","form","connotation","`use`","suggestion","bit","meaningful","call"],"has already":["been"],"has also":["sets"],"has any":["*rules*"],"has anything":["to"],"has been":["bikeshedded","called","passed","introduced"],"has change":["the"],"has code":["that"],"has functions":["for"],"has further":["nits"],"has implicit":["`do`"],"has improved":["readability"],"has just":["given"],"has less":["parens"],"has letters).":["So"],"has more":["than"],"has much":["to"],"has one":["line","function"],"has only":["correct"],"has possibility":["for"],"has some":["interesting","tips","things","easy","undying"],"has surprised":["me"],"has terms":["like"],"has the":["added","very","benefit","advantage","advantage","combination","benefit","property"],"has third":["argument."],"has to":["be","offer.","be","dig","wrap","be"],"has too":["much"],"hash and":["a","just"],"hash bothers":["me."],"hash does":["not"],"hash function":["guarantees","must"],"hash in":["`nucleotide-counts`.","`nucleotide-counts`.","`count`"],"hash literal":["syntax?"],"hash map":["ordering."],"hash maps":["-"],"hash of":["labelled","all"],"hash would":["do","be"],"hash(A) ==":["hash(A)","hash(B)."],"hash(A) but":["that's"],"hash(B). Additionally":["a"],"hash)` syntax":["does"],"hash-map (interleave":["keys"],"hash-map as":["a"],"hash-map to":["resolve"],"hash-map) -":["`reduce-kv`"],"hash-map. Though":["I"],"hash-set to":["count"],"hasher, this":["is"],"haskell/erlang/etc rather":["than"],"hasn't mentioned":["pre-"],"hate Java":["and"],"hate falling":["back"],"hate the":["Java"],"hate to":["be"],"have (sort-of)":["currying"],"have 2":["conditions"],"have :pre":["and"],"have I":["agree","suggested"],"have \\T":["interpreted"],"have `clojure.string/replace`":["shadow"],"have `defn-`.":["I"],"have `endsWith`.)":["This"],"have `if-let`":["at"],"have `second-part`":["but"],"have a":["subtle","subtle","biology","test","pore","kind","look","convenience","helper","solution","perennial","look","look","regexp","value","look","list","lot","go","go","dig","problem","look","whole","few","better","go","string","really","conditional","suggestion","look","harder","couple","few","function","couple","common","newline","default","lot","lot","look","name","look"],"have absolutely":["nothing"],"have access":["to","to"],"have added":["the"],"have addressed":["both"],"have adjusted":["the"],"have all":["the"],"have already":["used","used","used","used","lowercased.","sanitized"],"have also":["removed","used"],"have an":["earlier","example","opinion","inconsistent","\"a\"","extra"],"have and":["is"],"have another":["go","look"],"have any":["domain","additional","ideas","cache","ideas","references","advice","experience","suggestions?"],"have approached":["this"],"have aptly":["named","named"],"have at":["least"],"have been":["posted","more","obvious.","made","helpful.","a","the","trying","changed","more","written"],"have better":["signal"],"have both":["applied"],"have changed":["in"],"have closed":["the"],"have closing":["parentheses"],"have commas,":["I'd"],"have constants":["for"],"have declared":["these"],"have do":["define"],"have doc":["strings"],"have done":["here."],"have either":["of"],"have eliminated":["the"],"have escaped":["from"],"have even":["reduced"],"have ever":["written"],"have explicit":["transaction","transaction"],"have extracted":["`anagram-match?`"],"have fixed":["it","length"],"have followed":["the"],"have forgotten":["to"],"have found":["the","the","there","is"],"have functions":["with","with"],"have gone":["too"],"have had":["a","clearly","all"],"have having":["trailing"],"have here,":["it"],"have here.":["I"],"have ignored":["the"],"have introduced":["a"],"have invalid":["triangles"],"have is":["readable,","that","that","the"],"have it":["be","return","inside,"],"have it's":["value"],"have it.":["Grrrr!"],"have just":["used","used","(re)learned","used","realized","one"],"have learned":["with"],"have less":["chance","pure"],"have looked":["again.","like:","for"],"have lowercase":["characters?\""],"have made":["these"],"have mentioned":["that"],"have misunderstood":["you"],"have modified":["and"],"have more":["thoughts","meaningful","meaningful","descriptive"],"have more/clearer":["meaning"],"have moved":["predicates"],"have multiple":["generators"],"have my":["reservations."],"have no":["idea","idea","idea","nit","idea","idea","\"Looks"],"have not":["bound","completely"],"have not.":["I"],"have noticed":["-","most"],"have now.":["`declare`"],"have nucleobases":["stored"],"have observed,":["the"],"have occurred":["to"],"have on":["your"],"have one":["colon:","predicate","suggestion:"],"have overdone":["that"],"have paid":["off."],"have picked":["up"],"have pointed":["out"],"have probably":["been"],"have problems":["with"],"have programmed":["in"],"have question":["marks"],"have read":["too"],"have renamed":["it"],"have required":["it."],"have said.":["Is"],"have sanitized/normalized":["the"],"have score-letter":["that's"],"have seen":["that","quite","using","in","seems"],"have separate":["functions"],"have significantly":["swayed"],"have solved":["this","`nucelotide-counts`"],"have some":["problems","issues","questions","extra","questions","other","nits"],"have something":["like"],"have specific":["outputs."],"have suggested":["assigning"],"have taken":["the"],"have the":["following...","`cond`","time","closing","trailing","original","knowledge","participant","very","problem","added","same","lowercased,","same","`and`","doc","public","functions","condition","same","same","boolean","same","same","atom","one"],"have them":["when","when","do","assume","available","available","on"],"have this":["one","only","gut"],"have those":["helper"],"have though.":["What"],"have to":["be","steal","reference","read","use","steal^H^H^H^H^H","define","be","use","use","confess","be","say","stop","convert","do","check","get","admit","squint","be","take","referred","think","do","seek","resort","wrap","change?","little","resort","try","swap","convert","assure","be","concede","compare","call","balance","worry","maintain","decipher","wonder","pass","dive","pass","use","say","respectfully","be","build","write","check","admit","do","make","do","resort","go","do","change","add","change","switch","be","play","use","check","declare","remove","link","get","read","map","convert","mention","read","append","repeat","do","recheck","prefix","pass","be","calculate","map","check","rewrite"],"have trampled":["all"],"have tried":["an"],"have trouble":["to"],"have two":["ways","small"],"have uncovered":["edge-cases,"],"have unintended":["consequences."],"have updated":["the","to","accordingly."],"have used":["the","in","in","in","it","in","`-&gt;&gt;`","in","in","in","in","in","in","something","`condp`","that"],"have very":["clear"],"have what":["basically"],"have written":["so"],"have yet":["to"],"have you":["considered","tried","considered","considered","used","considered","considered","come","enclosed","looked"],"have, I":["think,"],"have, barring":["the"],"have, but":["I'm"],"have, e.g.":["a"],"have. But":["I"],"have. Maybe":["a"],"haven't changed":["the"],"haven't done":["that"],"haven't finished":["reading"],"haven't found":["it..."],"haven't heard":["of"],"haven't made":["any"],"haven't seen":["that","anyone","any","the","enough"],"haven't thought":["about"],"haven't yet":["gone"],"having `add-name-to-grade`":["behave"],"having `anagram-of?`":["work"],"having a":["test","\"T\".","tone","map","map","full","ball,"],"having an":["intention-revealing"],"having arguments":["on"],"having fun":["with"],"having hard":["coded"],"having helper":["functions"],"having it":["take"],"having only":["two"],"having redundancy":["and"],"having some":["issues"],"having such":["discussions"],"having the":["mapping","functions","name","following","same"],"having their":["body"],"having them":["trailing","at"],"having to":["map","bother","scroll","tack","depend","create","map","make","work","read","go","convert","do","also","write"],"having trailing":["closing"],"having trouble":["making"],"having used":["metadata"],"having usefully":["named"],"he can't":["understand?"],"he doesn't.":["Can"],"he said.":[";)"],"he says.":["So"],"he should":["respond"],"he would":["interpret"],"head (that's":["why"],"head around":["than","the"],"head is":["saying"],"head-first through":["exercism.io,"],"headache! There's":["no"],"heads up,":["resubmitting."],"hear feedback":["on"],"hear feedback.":["I'm"],"hear if":["you"],"hear shouting,":["respond"],"hear them.":["Thanks"],"hear your":["thoughts."],"heard of":["the"],"heard you":["should"],"hearing more":["elegant"],"hearing nothing?":["Something"],"heart for":["that"],"heavy-handed. Are":["there"],"heavy. that":["is,"],"heck it":["was"],"hectic at":["work."],"heed. Thanks":["again!"],"hell out":["this"],"hell... but":["I"],"hellish, there":["has"],"help ```response-for```":["better"],"help a":["bit"],"help but":["that's","think"],"help clarify":["this.","the"],"help differentiate":["different"],"help differentiate,":["say,"],"help explain":["what","what"],"help from":["this"],"help further":["refactoring"],"help here":["-","too?"],"help here.":["Also,"],"help if":["there"],"help improving":["legibility"],"help it,":["like"],"help maintainability":["inside"],"help me,":["transform"],"help of":["a","`let`","declare.","`declare`.","a","`defn-`","external","`java.lang.Character`'s"],"help others":["to"],"help readability,":["it"],"help readability.":["Why","It"],"help reduce":["the"],"help simplify":["the","your"],"help the":["readability","discussions","user"],"help to":["separate"],"help understand":["the"],"help with":["communicating","readability.","readability","that.","simplifying","that.","that","eliminating","the","that."],"help you":["get","in","preserve",":)","with","with","with","with","simplify","simplify","simplify"],"help, but":["it's"],"help, not":["actual"],"help. Also":["consider"],"help. Updating":["the"],"helped (even":["if"],"helped here":[";)"],"helped me":["out","passing","simplify","to","a","a"],"helped the":["readability"],"helped with":["both"],"helper for":["words."],"helper form.":["`:use`"],"helper forms.":["Now,"],"helper from":["another."],"helper function":["bodies;","for","for","so","small","or"],"helper function,":["just"],"helper function?":["(honest"],"helper functions":["private?","should","private","as","private","private?","should","extracted","for","private,","private","an","allows","in","to","defined","need","can","to"],"helper functions.":["It","I"],"helper method":["\u003ccode\u003etokenize\u003c/code\u003e"],"helper methods":["for","might","that","are","that","that"],"helper predicate":["methods"],"helper private":["methods"],"helper would":["be"],"helper. However,":["that"],"helpers (non-public":["part"],"helpers -":["`declare`"],"helpers as":["private.","well)"],"helpers below":["the"],"helpers could":["be"],"helpers from":["being"],"helpers functions":["?\u003cbr\u003e"],"helpers further":["down."],"helpers private.":["I"],"helpers should":["probably","be"],"helpful -":["as"],"helpful as":["one","well."],"helpful error":["message"],"helpful for":["sorting"],"helpful function":["for"],"helpful in":["some","uncluttering"],"helpful to":["learn!","learn!"],"helpful! Happy":["hacking!"],"helpful. Especially":["the"],"helpful. I":["mean","applied"],"helpful. I'm":["still"],"helpful. You":["aren't"],"helpfully named":["function?"],"helpfully returns":["`nil`"],"helping me":["explore"],"helps making":["this"],"helps me":["identify"],"helps that":["Clojure"],"helps the":["reader"],"helps to":["create"],"helps with":["maintenance."],"helps you":["here","to","express"],"hence `matches`":["is"],"hence it":["would"],"hence the":["dna-rna-map"],"here -":["forgot","`atom`","but","this","the"],"here :(":["Probably"],"here a":["bit","couple"],"here actually":["is"],"here and":["there."],"here are":["very","just"],"here at":["all."],"here because":["of"],"here but":["if"],"here entirely.":["Sorry"],"here for":["the","another"],"here if":["you","it"],"here imho,":["though"],"here in":["Clojure?","the","clojure","`words`"],"here instead":["of","of"],"here is":["to","that","the","shorter","the","that","in","off","perfectly"],"here isn't":["defined,"],"here looks":["great,"],"here might":["work"],"here of":["exercism.io?"],"here on":["use."],"here pointed":["it"],"here since":["I","that"],"here that":["has"],"here to":["simplify","define"],"here too,":["can"],"here what":["an"],"here with":["any"],"here works,":["but"],"here would":["be"],"here's alternative":["approach:"],"here's how":["you"],"here's one,":["by"],"here's the":["previous"],"here), but":["I"],"here). I'd":["love"],"here, @mabel.":["I've"],"here, I":["guess)"],"here, `(=":["\\?"],"here, and":["come"],"here, as":["I'm"],"here, but":["would","is","it's","here's","it's","that's","`robot-name`"],"here, defining":["`thymine`"],"here, does":["it?"],"here, is":["a"],"here, it":["seems","will"],"here, looks":["very"],"here, since":["those"],"here, so":["we"],"here, though.":["Is"],"here, when":["it"],"here, you":["don't"],"here. \"response":["for\""],"here. Again,":["I"],"here. Also,":["in"],"here. Back":["from"],"here. But":["that"],"here. Extracting":["the"],"here. Have":["you"],"here. I":["would","didn't","wonder"],"here. I'm":["a"],"here. If":["you're"],"here. It":["may","makes"],"here. My":["solution"],"here. Otherwise,":["looks"],"here. Perhaps":["`(and"],"here. Removed":["the"],"here. Would":["you"],"here. You":["should","could","also"],"here. the":["`alphagram`"],"here... it":["is"],"here: although":["I"],"here: http://blog.fogus.me/2009/12/21/clojures-pre-and-post/":["."],"here: http://stackoverflow.com/a/11006759/477048":["."],"here? I":["bet"],"here? Or":["`reduce`"],"here? Sorting":["is"],"here? The":["code"],"here? `apply`":["doesn't"],"hesitant to":["do"],"hesitation (the":["same"],"hey, for":["sure!"],"hey, it’s":["very"],"hey, maybe":["it"],"hey, we're":["not"],"hey, you":["can"],"hi (dec":["lo)"],"hidden behind":["a"],"hidden solution":["for"],"hide that":["fact."],"hiding clojure.core/replace":["so"],"hiding function":["calls"],"hiding the":["nucleotides"],"hiding them":["in"],"high level":["definitions","public"],"high order":["function"],"higher level":["functionality","of","logic."],"higher order":["functions.","function","functions","functions"],"higher up":["the"],"higher-level concept":["like"],"higher-order functions":["for","may"],"highest abstraction":["is"],"highest level":["of","of"],"highlight matching":["parentheses","parens"],"highlight parenthesis":["in"],"highlight the":["matching"],"highly recommend":["doing"],"him something\"":["in"],"him. He'd":["probably"],"hindsight, though,":["I"],"hint above,":["there!)"],"hint at":["Bob's"],"hint of":["the"],"hint on":["code"],"hint that":["that"],"hint with":["range's","multi-arity,"],"hint without":["giving"],"hint, but":["I'll"],"hint: `map`":["can"],"hint: by":["simply"],"hint: look":["at","at","at"],"hint: you":["could"],"hints that":["would"],"his Elixir":["version)."],"his default":["response,"],"his nitpick":["on"],"his other":["monosylabic"],"his specific":["responses."],"his/her response":["to","to"],"histogram, but":["I'm","decided"],"history done":["me"],"hit me,":["but"],"hit the":["table."],"hit you":[";)"],"hits the":["terminating"],"hmm, this":["is"],"hmm... I":["don't"],"hmm... it":["doesn't"],"hold shared,":["mutable"],"hold the":["set"],"hold when":["it"],"hold you":["up","off"],"holding back":["myself"],"holding you":["back"],"holds onto":["a"],"holy crap":["I","that's"],"homoiconicity of":["clojure"],"honest I":["didn't","like"],"honest, as":["before"],"hook up":["your"],"hooks in":["function"],"hope I’d":["be"],"hope `gene`":["makes"],"hope is":["a"],"hope that":["I","I"],"hope that's":["helpful!"],"hope you’ll":["find"],"hopefully makes":["the"],"hopefully will":["get"],"hoping it":["will"],"hoping that":["using"],"hoping to":["get"],"horrendous, this":["code"],"horribly irked":["that"],"horse, but":["something"],"how Clojure":["fits"],"how Clojuresque":["it"],"how I":["missed","can","did","respond.","hate","could","was","caught"],"how ```count-words```":["is"],"how `map`":["in"],"how about":["extracting","using","putting"],"how appropriate":["it"],"how assigning":["nucleotides"],"how can":["i"],"how clear":["reading"],"how closures":["replace"],"how code":["should"],"how complicated":["the"],"how concise":["the","you","this"],"how could":["I"],"how do":["you"],"how does":["this"],"how for":["now,"],"how good":["I"],"how hard":["would"],"how is":["`(="],"how it":["reads.","worked.","is","works","felt.","works.","works.","looks.","would"],"how it's":["implemented,","laid","implemented,","laid"],"how lines":["and"],"how many":["elements","etc."],"how much":["of","less"],"how multimethods":["could"],"how readable":["the","the"],"how repetitive":["it"],"how sets":["might"],"how simple":["this","and"],"how succinct":["this"],"how that":["would","looks"],"how the":["*admin","process","code","community","API","code","\"slow\""],"how they're":["applied"],"how this":["special","could","works:"],"how threading":["macro"],"how to":["import/use","use","get","do","do","improve","do","do","respond.","find","get","make","compare","do","do","think","respond,","name","do","avoid","write","achieve","simplify","do","do","best","do","turn","make","do","do","not","put"],"how using":["`:else`"],"how well":["exercism","the"],"how words":["will","will"],"how would":["your","you","it"],"how you":["might","require","solve","meant","can","look","do","can","would","decomposed","defined","used","like"],"how you're":["using"],"how you've":["split"],"how). And":["for"],"how. Anyone":["have"],"how. I":["switched"],"however I":["believe","would","would"],"however `(not=":["[1"],"however as":["with"],"however consider":["using```(ns"],"however it":["got","doesn't","caused"],"however it's":["still"],"however that":["may"],"however that's":["a","not"],"however this":["is","may"],"however you":["could"],"however, I":["don't","choose"],"however, and":["of"],"however, it":["doesn't"],"however, prefer":["the"],"however, that":["it's"],"however, this":["one"],"hsortcut cljstr,":["str,"],"http://blog.jayfields.com/2010/07/clojure-destructuring.html .":["Anyway"],"http://clojuredocs.org/clojure_core/clojure.core/cond can":["help"],"http://clojuredocs.org/clojure_core/clojure.core/defn for":["some"],"http://dev.clojure.org/jira/browse/CLJ-879 -":["Try"],"http://exercism.io/submissions/51fd9cf6df1d8bf5630000e1 as":["well"],"http://exercism.io/submissions/51febc6b3f8cb9ba45000108 —":["it's"],"http://ryanverner.com/post/49884705761/clojure-require-vs-use for":["an"],"http://stackoverflow.com/a/11006759/477048 .":["I"],"http://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require and":["also"],"http://vimeo.com/19404746 .":["He's"],"https://github.com/bbatsov/clojure-style-guide#source-code-layout--organization that":["they"],"https://github.com/vim-scripts/VimClojure if":["you"],"huge chance":["it"],"huge difference?":["For"],"huge eye-opener":["for"],"huge regex":["feels"],"hung up":["on"],"hunts most":["clojureans"],"hurt much":["to"],"hurts my":["eyes"],"hyphen and":["right"],"hyphen delimited":["names"],"hyphen delimited.":["As"],"hyphen instead":["of"],"hyphenated names":["are","are"],"hyphens instead":["of"],"hypothetical requirement":["(let's"],"i also":["probably"],"i am":["updating"],"i can":["extract"],"i couldn't":["quite"],"i definitely":["should"],"i did":["it"],"i didn't":["see"],"i do":["that?"],"i don't":["yet"],"i got":["the"],"i have":["been"],"i haven't":["found"],"i like":["that"],"i love":["that"],"i meant":["require."],"i misunderstood":["your"],"i need.":["In"],"i pass":["a"],"i see":["```()```.","is"],"i should":["wrap","be"],"i think":["the"],"i thougt":["it"],"i use":["assertion"],"i used":["condition","the"],"i want":["it"],"i wonder":["why"],"i would":["only"],"i'll be!":["you"],"i'm curious":["about"],"i'm defining":["in"],"i'm going":["to"],"i'm just":["getting"],"i'm not":["using","sure","sure"],"i've actually":["introduced"],"i've been":["doing"],"i, m,":["etc"],"i.e `O(n)`.":["The"],"i.e. `(every?":["#{\\A"],"i.e. any":["function"],"idea --":["it"],"idea about":["this","that","functional"],"idea again":["though."],"idea for":["readability."],"idea how":["it"],"idea is":["to","great.","to","to"],"idea of":["a","using","lifting","\"everything"],"idea to":["actually","`use`","make","communicate","use","encourage","start"],"idea we":["should"],"idea what":["I'm","the","you","the"],"idea why":["the","it"],"idea, I":["like"],"idea, but":["it's"],"idea. I":["will"],"idea. I'll":["update"],"idea. Instead":["of"],"idea. It":["feels"],"idea. That'd":["take"],"ideal order":["in"],"ideal to":["have"],"ideas for":["improvements"],"ideas into":["a"],"ideas on":["these"],"ideas what":["patterns/functions/idioms"],"ideia, make":["it"],"identical word":["should"],"identical words":["because"],"identifiers, otherwise":["looks"],"identifiers. When":["I"],"identify it's":["parts."],"identify where":["the"],"identifying scope":["when"],"identity ...))`,":["a"],"identity and":["end"],"identity coll)`":["and"],"idiom in":["naming"],"idiom is":["to"],"idiom made":["its"],"idiom on":["the"],"idiom would":["be"],"idiom, can":["you"],"idiomatic Clojure":["style"],"idiomatic Clojure.":["Is","There"],"idiomatic `s`.":["Do"],"idiomatic and":["slightly","that"],"idiomatic as":["`(dec"],"idiomatic clojure":["to","since"],"idiomatic clojure,":["so"],"idiomatic closing":["parentheses"],"idiomatic code":["tends"],"idiomatic for":["Clojure.","Clojure.","shorter"],"idiomatic in":["the","Clojure","clojure?","Clojure.","Clojure."],"idiomatic lisp":["-"],"idiomatic naming":["style."],"idiomatic or":["whether"],"idiomatic part":["because"],"idiomatic predicate":["method"],"idiomatic sense":["of,"],"idiomatic style":["to"],"idiomatic style.":["I"],"idiomatic than":["treating","isQuestion)"],"idiomatic thing":["I"],"idiomatic to":["use","have","indent","put","use","put","use","use","not","put","use","use","me,","call","write","use","use","leave","leave","use","start","use","end"],"idiomatic use":["of"],"idiomatic way":["of","of","to","to"],"idiomatic ways":["to"],"idiomatic with":["?"],"idiomatic, but":["whether"],"idiomatic, not":["to"],"idiomatic. I":["remember"],"idiomatic. Many":["thanks"],"idiomatic. Please":["take"],"idiomatic. Regardless":["solution"],"idiomatic/personal preference":["or"],"idiomatically Clojure":["way"],"idiomatically written":["as","as","as","as"],"idioms are":["all"],"idioms copied":["out"],"idomatic. Somehow":["Clojure"],"if -":["if","if."],"if :fred":["is"],"if I":["asked","should","like","asked","have","had","could","hand","could","do","get","could","input","were","can","were","want","just","could","were"],"if I've":["made"],"if `*name-tracker*`":["had"],"if `format`":["wouldn't"],"if `parse`":["was"],"if `potential-anagrams`":["is"],"if `s`":["is"],"if `silence?`":["was"],"if a":["string","language","tricky","string","word","used"],"if all":["you","the","functions","vars/functions","of"],"if an":["input"],"if any":["difference,"],"if anyone":["has","really"],"if anything":["jumps"],"if bob's":["being"],"if check":["for"],"if clojure":["had"],"if each":["letter"],"if function":["body"],"if grammar":["is"],"if hash(A)":["=="],"if i":["got","did","used"],"if i'm":["not"],"if in":["the"],"if is":["doing,"],"if it":["should","did","helps","ends","is","enhance","improves","had","were","makes","has","is","is","doesn't","were","a","is","turns","used","matches","is","is","was","exists"],"if it's":["silence","sad","more","missing.","default","longer)","clearer.","different","not","being","a"],"if line":["4"],"if mine":["is"],"if morally":["it"],"if my":["solution"],"if none":["of","of"],"if not":["even","`true`."],"if one":["were"],"if people":["would"],"if preconditions":["were"],"if program":["coped"],"if s":["is"],"if someone":["else","had","takes","shouts"],"if something":["is","is"],"if statement":["to","instead","should"],"if statement.":["It's"],"if string":["has"],"if test":["suite"],"if that":["isn't","\"feels","logic","makes","is","is","is"],"if that's":["the"],"if the":["statement","input","message","strands","functions","currently","upper-case","string","`sorted`","DNA","input","inline","number","string","`any-word-pattern`","name","return","condition","Queens","requirements","data"],"if their":["representation"],"if there":["really","is","would","was","was","are","are","is","was","was","is","are","is","was","are","are","are"],"if there's":["a","a","a","anything","a","a","a","room"],"if they":["denied","were","really","can","are","weren't","had","are"],"if they're":["accessed"],"if things":["like"],"if this":["specific","was","is","code","would","is"],"if those":["helpers"],"if using":["`cond`","two"],"if validation":["fails:"],"if value":["was"],"if vars":["aren't"],"if we":["have","need","wanted","had","were"],"if word":["is"],"if you":["use","defined","send","couldn't","couldn't","lowercased","ask","just","think","prefer.","port","gave","create","couldn't","use","used","don't","couldn't","put","really","can","can","can't","know,","gave","could","stick","need","extracted","think","`map","map","just","will","have","imagine","used","have","are","wanted","will","re-order","made","ignore","did","had","actually","use","koved","extract","inlined","extract","feel","will","call","make","just","don't","consider","will","have","moved","pulled","want","basically","made","wanted.","wanted","know","search","can","want","wanted","wrap","wanted","throw","used","like.","are","refactored","incorporated","like.","see","don't","separated","need","reorder","like.","go","want","had:","extract","can","can","extract","want","tried","keep","do","give","want","want.","implement","were"],"if you'd":["like.","submit","like","check"],"if you're":["in","aliasing","not","not","overusing"],"if your":["Bob","collection"],"if you’re":["finding"],"if, e.g.,":["the"],"if-else clauses,":["the"],"if-let and":["a"],"if-let is":["the"],"if-soup. I":["think"],"if. Quite":["scary"],"ifnil? is":["really"],"ifs are":["a"],"ifs do":["not"],"ifs is":["a"],"ifs like":["that"],"ifs, try":["[`cond`](http://clojuredocs.org/clojure_core/clojure.core/cond)."],"ignore it":["and","if"],"ignore the":["ugly"],"ignore this":[":)"],"ignore use":["6."],"ignored the":["frequency"],"ignored, but":["maybe"],"ignores malformatted":["DNAs."],"ignores the":["argument?"],"image that":["contributing"],"imagine another":["new"],"imagine it's":["part"],"imagine that":["`generate-words`"],"imagine this":["being"],"imagines Bob":["would"],"imho, though":["this"],"immediately after":["the","the"],"immediately apparent":["to","until"],"immediately clear":["the"],"immediately handle":["punctuation"],"immediately obvious":["to"],"immediately see":["what's"],"immediately use":["the"],"immutability with":["a"],"immutable and":["mixing"],"immutable in":["Clojure,"],"imo. I":["guess"],"impact the":["code."],"imperative code,":["which"],"imperative language":["style,"],"imperfection is":["that"],"impetus to":["put"],"implement IFn,":["and"],"implement `IFn`":["while","by","by","by"],"implement `classify-dna`":["function."],"implement `count`;":["getting"],"implement `sorted`,":["instead"],"implement a":["macro"],"implement any":["simpler"],"implement each":["of"],"implement frequencies":["with"],"implement from":["scratch,"],"implement it":["such","with"],"implement some":["simple"],"implement the":["`is-question`","CharSequence"],"implement this":["with","more"],"implement with":["some,"],"implement your":["suggestions","`yelling?`"],"implementation &amp;":["usage"],"implementation -":["one"],"implementation I":["have"],"implementation a":["bit","bit."],"implementation and":["not"],"implementation choice":["I've"],"implementation code":["from"],"implementation comments":["(lines"],"implementation could":["be"],"implementation detail":["rather"],"implementation detail,":["not","not"],"implementation details":["bottom.","if"],"implementation down":["to"],"implementation for":["this"],"implementation has":["the","a","the"],"implementation he":["doesn't."],"implementation in":["js","the"],"implementation is":["going","in","in","in","naive","the","that","that","pretty"],"implementation itself":["is"],"implementation makes":["that"],"implementation of":["`response-for`","the","DNA/RNA.","`default-hash-map`:","Bob","`sorted`.","`sorted`","`clojure.string/lower-case`","`silence?`","`word-count`","`add`","`combine-map-with`","the","the","blank?","`number`"],"implementation so":["that"],"implementation that":["will"],"implementation under":["the"],"implementation which":["in"],"implementation with":["mapv"],"implementation work":["in"],"implementation would":["you"],"implementation! In":["fact"],"implementation) that":["ordering"],"implementation, not":["the"],"implementation, since":["there"],"implementation, taking":["advantage"],"implementation. Even":["if"],"implementation. I":["don't"],"implementation. It's":["great"],"implementation. The":["only"],"implementation. Using":["`subs`"],"implementation. Was":["toying"],"implementations of":["this"],"implementations. This":["one"],"implemented as":["a"],"implemented before":["in"],"implemented by":["[condition"],"implemented in":["Python","terms"],"implemented it":["makes","in"],"implemented the":["way"],"implemented without":["scanning"],"implemented, as":["well","well"],"implemented. The":["conversion"],"implementing a":["topological"],"implementing exponentiation":["yourself?"],"implementing it":["with"],"implementing the":["solution"],"implements an":["'opaque"],"implications of":["what","ref."],"implicit `do`":["for"],"implicit currying":["(like"],"implicit equality.":["I"],"implicit return":["for"],"implicit set":["is"],"implicitly return":["nil"],"implied by":["the","the"],"implied in":["the"],"implies that":["the","a"],"imply that":["the"],"import `split`,":["but"],"import and":["just"],"import clojure.string/lower-case:":["`(ns"],"import everything":["or"],"import functions":["from"],"import modules":["in"],"import of":["symbols"],"import particular":["symbols"],"import some":["stuff"],"import symbol":["`split`."],"import symbols":["outside"],"import the":["`string`"],"import which":["I"],"import/use a":["namespace"],"important (which":["currently"],"important because":["I"],"important in":["Clojure,"],"important part":["of"],"important thing":["that"],"important thing,":["but"],"important to":["follow","me.","note"],"important, so":["if"],"important. You":["may"],"importantly, an":["empty"],"imported blank?":["and"],"imported from":["other"],"imported namespace,":["like"],"importing `upper-case`":["from"],"importing it":["altogether."],"importing some":["more"],"importing, you":["can"],"imports and":["so"],"imports into":["the"],"impossible to":["follow,"],"improve `question?`":["with"],"improve clarity":["by"],"improve maintainability":["(in"],"improve on":["this!","this,","the","that"],"improve readability":["a","enough"],"improve the":["readability","readability"],"improve things":["(regarding"],"improve this":["code"],"improve your":["name"],"improved according":["to"],"improved by":["extracting"],"improved for":["future"],"improved from":["your"],"improved is":["that"],"improved readability":["and"],"improved version.":["Awaiting"],"improved. You":["can"],"improvement might":["be"],"improvement over":["the","the"],"improvement with":["this","regard"],"improvement! FWIW,":["I"],"improvement, or":["harder","harder"],"improvements could":["include"],"improvements of":["this,"],"improvements to":["my"],"improves on":["what"],"improves readability":["-"],"improves readability,":["you"],"improving legibility":["in"],"improving the":["specs.","`:ignored`"],"in \"Be":["conservative"],"in \"count\"":["more"],"in '?'.":["Also"],"in 'pure":["Clojure'"],"in (-&gt;&gt;":["…)"],"in (responds-to-forceful-questions)":["(bob_test.clj:20)"],"in (responds-to-only-numbers)":["(bob_test.clj:41)"],"in (sorted)":["since"],"in (square-1)":["(grains_test.clj:5)"],"in (square-16)":["(grains_test.clj:17)"],"in (square-2)":["(grains_test.clj:8)"],"in (square-3)":["(grains_test.clj:11)"],"in (square-32)":["(grains_test.clj:20)"],"in (square-4)":["(grains_test.clj:14)"],"in (square-64)":["(grains_test.clj:23)"],"in (total-grains)":["(grains_test.clj:26)"],"in *content*,":["just"],"in -":["I"],"in -&gt;":["macro?"],"in 2":["steps."],"in Brian":["Marick's"],"in Clojure":[":)","you","-","in","too",":)","led","I","codebase.","usually","to","which","are","to","to","to","but","and","and","can","can","to","as","which","for","can","can"],"in Clojure!":[":)"],"in Clojure)":["and"],"in Clojure,":["do","so","as","would","I","but","where","so","but","I'd","strings","so"],"in Clojure.":["Macros","Makes","Thanks","Do","So"],"in Elixir":["and","first"],"in Emacs":["myself.","with"],"in English":["are"],"in Haskell":["it"],"in Haskell,":["with","Python"],"in Java":["for"],"in Java.":["Learned"],"in Javascript](http://exercism.io/submissions/2f68013a2d8cecc8ac177907),":["while"],"in O(n)":["where","instead"],"in OO":["code."],"in Python":["as"],"in README.md":["could"],"in REPL":["it's","with"],"in REPL,":["it's"],"in Ruby":["but"],"in Ruby.":["And"],"in Scala":["and"],"in Scala,":["Clojure"],"in Scheme":["years"],"in [Let":["Over"],"in [the":["test"],"in `\"ZOMG":["THE"],"in `%1`":["for"],"in `(not=":["word"],"in `(upper-case":["(str"],"in ```exec-pattern```,":["couldn't"],"in ```shouty?```":["why"],"in ```word-count```":["but"],"in `add`":["is","necessary?"],"in `alphagram`":["is"],"in `anagram-for?`":["is"],"in `anagram?`":["rather"],"in `anagram`":["necessary?"],"in `anagrams-for`":["is","along"],"in `anagrams-for`.":["But"],"in `anagrams`":["or"],"in `anagrams`,":["`#(=(sort-word"],"in `beer/sing`":["and"],"in `bottles`":["is","instead"],"in `candidates`":["it"],"in `candidates`.":["Can"],"in `clean-number`,":["since"],"in `clojure.string`":["to","for"],"in `clojure.string`,":["and"],"in `clojure.string`.":["You"],"in `cond`":["to","(especially"],"in `cond`.":["It"],"in `count-nucleotides`":["which"],"in `count`":["--"],"in `count`.":["I"],"in `defn`":["is"],"in `defn`,":["both"],"in `exec-pattern`":["instead"],"in `extract-words`":["where"],"in `grade`":["is"],"in `grade`,":["using"],"in `let`":["form"],"in `letfn`":["was"],"in `letter-count`":["really"],"in `letters`).":["I'm"],"in `nothing-said?`":["you"],"in `ns`":["should","macro.","macro.","macro,","is","form"],"in `nucleotide-counts`":["and","but","is"],"in `nucleotide-counts`.":["Any","Is","`frequencies`"],"in `number`":["into","prevented"],"in `pairs`":["by"],"in `pretty-print`":["you"],"in `question?`":["is","you"],"in `question?`.":["Maybe","Strings"],"in `range`":["by"],"in `respond`":["and"],"in `response-for`":["`str/blank?`","around","doc","look","with","doesn't"],"in `response-for`.":["You"],"in `responseLookup`":["is"],"in `responseLookup`.":["More"],"in `robot-name`,":["however"],"in `s`":["as"],"in `second-couplet`":["function"],"in `second-line`.":["Might"],"in `set-name`":["-"],"in `shout?`":["function."],"in `shout?`,":["but"],"in `shouty?`":["is","—"],"in `silence?`":["isn't"],"in `sing`":["to","over","seems","is"],"in `sing`,":["and"],"in `sort-chars`.":["There's"],"in `str`":["-"],"in `string/replace`":["versus"],"in `subject-char-freq`":["without"],"in `transcribe`":["or"],"in `verse`":["to","with"],"in `word-count`":["-"],"in `words-from-phrase`":["is"],"in `words`":["than","or"],"in `yelling?`":["to"],"in a":["much","dialog","bit","private","rush","single","cond","top","REPL:","```ends-with?```","function","real","sequence","REPL","current","previous","TDD","harder","single","single","given","function.","more","non-deterministic","separate","case","bigger","small","`let`","bunch","ns","better","`letfn`","string.","string...\"","new","collection","way","several","functional","form","collection","private","function","different","real","namespace?","much","let","`let`","bunch","loop","multi-threaded","transaction","namespace","single","for","`let`","major","phase,","good","more","hash","function","new","namespace.","dictionary.","given","later","`let`","record.","`cond`","closure.","non-concurrent","non-concurrent","set.","let,","namespace.","more","letfn","collection","real","let."],"in actually":["moving"],"in add":["was"],"in addition":["to"],"in advance":[":)"],"in all":["caps","it's","these","lisps","of"],"in all,":["looks"],"in alphabetical":["order"],"in alphagram,":["unfortunately"],"in an":["effort","advantageous","anonymous","empty","anonymous"],"in anonymous":["function"],"in another":["nitpicks"],"in any":["particular","language.","language.","language.","case","language."],"in anything":["else.","other"],"in argument":["list,"],"in arrow":["macro"],"in as":["well."],"in auxiliary":["fns."],"in beer-line-2,":["but"],"in between":["and","those","those"],"in bob":["for"],"in bob_test.clj?":["Runnig"],"in boolean":["contexts:"],"in both":["those","cases"],"in by":["accident,"],"in calculating":["the"],"in candidates":["when"],"in case":["of","of","of","of","of","you","of"],"in cases":["where","of"],"in cassical":["\"account"],"in characters":["until"],"in clarity":["of"],"in clojure":["generally","and","yet.","(like","was","with","is","core,","could","because","works","as","it","is","functions.","like"],"in clojure)":["in"],"in clojure,":["so","let","the"],"in clojure.":["Will","It","Outermost","What","I","I"],"in clojure.core":["called","if","that","to"],"in clojure.core).":["Here's","Here's","Here's"],"in clojure.core,":["so","or"],"in clojure.core;":["it","it"],"in clojure.string":["-","for"],"in clojure?":["Take"],"in clojuredocs":["is"],"in closure)":["would"],"in code,":["making"],"in community":["maintained"],"in compare-and-set":["fashion"],"in cond":["into","you"],"in conjunction":["with"],"in constant":["or"],"in continuous":["ranges."],"in core":["to","that"],"in defining":["functions"],"in description.":["It"],"in detecting":["this"],"in different":["colors"],"in direct":["context"],"in dna":["sequence"],"in domain":["language"],"in double":["quotes"],"in each":["expression."],"in editor":["window"],"in either":["cond"],"in enclosing":["lexical","lexical","scope"],"in equal":["or"],"in error":["-"],"in every":["other","function."],"in expression.":["`require`"],"in expressive":["code,"],"in fact":["count","I","not"],"in fact,":["if"],"in favor":["of","of"],"in fn":["reader"],"in forcing":["everyone","everyone"],"in formatting":["with"],"in fourth":["iteration."],"in front":["in","in","for"],"in function":["implementation","bodies","definitions.","definitions.","`re-find`","in","within"],"in functional":["programming","programming","language?,"],"in functions":["like"],"in functions,":["thanks"],"in functions.":["Unsure","What"],"in general":["but","and","feels"],"in general)":["is"],"in general,":["I","though.","I'm"],"in general.":["I","Right?"],"in handy":["hsortcut"],"in haskell/erlang/etc":["rather"],"in having":["to"],"in here?":[":)"],"in his":["nitpick"],"in holding":["off."],"in how":["threading"],"in https://github.com/bbatsov/clojure-style-guide#source-code-layout--organization":["that"],"in identifiers.":["When"],"in idiomatic":["Clojure."],"in if":["something"],"in imperative":["language"],"in indentation":["(untabify)."],"in into":["`nucleotide-counts`...idk.","`let`."],"in is-anagram":["(although","looks"],"in is-anagram?)":["is"],"in isQuestion":["by"],"in it":["is"],"in it's":["own","documentation,","lexical","own","own","own"],"in iteration":["5."],"in its":["own","output)","current"],"in it’s":["recomputation"],"in javascript;":["I"],"in js":["and"],"in just":["the","the"],"in keeping":["the"],"in languages":["where","with"],"in latest":["submission"],"in leaving":["it"],"in life":["than"],"in line":["9."],"in linear":["time"],"in lisp":["it's","for"],"in lisps.":["And,"],"in list":["in","comprehensions"],"in loading":["required"],"in logic,":["if"],"in love":["with"],"in many":["other","cases."],"in meaningful":["variables"],"in mind":["that","that","that","that","of","that"],"in mind,":["but","that","it"],"in mind.":["Unfortunately,","I"],"in more":["detail","than"],"in most":["cases).","places,"],"in my":["submission,","next","intent,","opinion.","next","own","opinion","opinion.","previous","`.vimrc`","head.","first","opinion","nitpick","ruby","opinion.","previous","solution,","craw.","Ruby","next","opinion","function","life...","local","opinion","toolbox!","implementation.","original","code,","opinion","`question?`","solution.","function","own","next","muscle","verse","opinion.","opinion,"],"in names":["is","-"],"in names,":["`?`","like","like"],"in names.":["You"],"in naming":["is"],"in narrowest":["scope"],"in natural":["language"],"in nature":["as"],"in nested":["if-else"],"in newest":["submission."],"in next":["lines","iteration.","iteration."],"in nicely":["named"],"in no":["way"],"in ns":["macro"],"in nucleotide":["map!"],"in one":["of","of","of","of","line.","place.","of","of","recursive","of","of","of","of","of","of","of","function.","of","place","go.","step","place","or","place","of","step"],"in only":["`upper-case`,"],"in or":["convert"],"in order":["to","and","to","to","for","to","to","to","to","to","to"],"in other":["FP","versions","pieces","languages.","languages.","languages,","languages","solutions","places."],"in parenthesis.":["As"],"in part":["because"],"in particular":[":)","any","for"],"in particular:":["in"],"in past":["exercises.","exercises.","exercises.","assignments."],"in performance":["between"],"in place":["of",";)"],"in places":["where"],"in predicate":["function","for"],"in preference":["to"],"in previous":["iterations.","assignments.","exercises","version","nit."],"in problem":["specification"],"in processing":["the"],"in progress":["test"],"in pure":["punctuation.","clojure."],"in putting":["the"],"in question":["marks","in"],"in question?":["the"],"in range.":["I'll"],"in real":["world"],"in reduce-fn,":["you"],"in regexes.":["Cool."],"in regular":["string"],"in reset-name,":["but"],"in respective":["source-to-target-collation."],"in response":["to"],"in response-for":["might","is"],"in revision":["2."],"in robot":["makes"],"in ruby":["but"],"in ruby,":["`foo?`"],"in sanitize-number;":["process-number"],"in scope":["to"],"in screaming":["but"],"in second-couplet,":["with"],"in separating":["out"],"in sequence,":["it"],"in several":["functions,"],"in short":["examples","codes"],"in shorthand":["(sic!)"],"in shout?":["the"],"in silence?":["definition."],"in simplifying":["`word-count`."],"in some":["cases.","past","of","places","earlier","cases?"],"in someone":["else's"],"in source":["and"],"in specific":["functions"],"in spelling":["it","out"],"in standard":["Java."],"in stone.":["About"],"in str":["namespace."],"in string":["if","templates"],"in string.":["You"],"in strip-us-prefix":["and"],"in such":["cases...","small","way,"],"in symbols":["(`?`,"],"in terms":["of","of","of","of","of","of","of","of","of","of","of","of"],"in tests":["but",":)"],"in tests.":["What"],"in that":["area.","case","case","particular","field.","particular","case.","case.","case)","case.","regard","particular","particular","case.","it","direction.","it's","case?","it","re-find","they're","manner.","case.","instance?","case","way.","line?","might"],"in that.":["Some"],"in the":["absence","absence","simplest","cond","ruby","JavaScript","4th","sequence","middle","string.","instructions;","cond","`ns`","ns","ns","limited","domain","ns","first","body","argument","clojure.string","function's","type","`bob`","two","regex.","ruby","code","`let`","provided","`ns`","repl,","ns","previous","let","string","list.","REPL.","realm","function?","functional","word-count","past","`format`","new","code","next","`ns`","scope","namespace","shape","body","same","way","Clojure","Clojure","bob","Clojure","string","future,","next","community,","private","`ns`","bob","Javascript","ns","`sing`","Javascript","same","REPL,","context","narrowest","end,","cond","code.","function","Python","`ns`","ass,","namespace","cond","specification","yell?","problem","list","way","domain.","domain","namespace","code.","closure","README.","problem","back","Maps","`assoc`.","string","decompose","input","public","tests.","shortness","`not=`","terms","README","code.","README","names","regular","process.","Maps","feedback","order","last","Clojure","`ns`.","cond","habit","`(ns","beginning,","ns","`ns`","ns","```is-empty?```","```is-empty?```","wild,","code","code","`question?`","new","code.","ns","Clojure","`filter`","habit","elixir","phrase\"","end","function.","correct","same","```clojure.string```","regular","context","current","scope","whole","REPL.","core","word;","cond","end,","method.","atom.","same","`is-yelling?`","implicit","various","implementation","style","```to-rna```","```to-rna```","second","second","```dna-nucleotide```","next","threading","system.","namespace,","point-free","`*-response`","`ns`","namespace","pre","future.","most","pre","return","community","context","example","repl","future.","cond","same","hope","style","function","REPL","map","use","longest","conditions","next","dna","post","places","bob","README.","category","main","regex.","list.","regular","split","function","map-index?","past,","past,","Readme.","wild","cond.","commented","same","second","difference.","case","`question?`","ns","requirements","next","middle","chain","next","defn.","clojure","scope","given","wild,","file.","community,","90's","same","record","last","let","right","ns","let","`response-for`","other","repl.","empty","cond","repl.","namespace","repl.","repl.","`dosync`","project.clj","namespace.","signature","repl.","reduce","wrong","same","test","set","set,","defn.","pretty-print","repl.","meantime","`let`","future.","reduction","spirit","sentiment","1,","verses.","end.","sequence,","map.","Repl.","match","functional","second","process","`robot-name-generator`.","README...","string,","string.","next","second","regexes"],"in their":["own","own","own","own","own"],"in there":["as"],"in there.":["Help"],"in thinking":["that's"],"in this":["file,","case","case?","case","case.","context.","context.","case.","example.","case.","case","case,","case","case","case)?","situation","line","context","submission","mess","exercise","case.","case.","instance","case","case","case","case,","context?","case:","case.","function.","context,","case","case.","context,","format.","case.","case)","case","case","case.","case","case","case).","case","case?"],"in those":["terms."],"in thread":["\"main\""],"in threading":["macros,","macro."],"in to":["a","the","small","me.","the"],"in turn,":["function"],"in two":["different","places","ways:","others","places","different","simple"],"in uncluttering":["the"],"in very":["hard"],"in vim":["and"],"in ways":["to"],"in what":["you","you","I","empty","I"],"in which":["case","nil","the","new","case"],"in whichever":["language"],"in wider":["scope."],"in with":["the"],"in word-count":["without","too,"],"in words":["(hope"],"in words.":["See"],"in wrapping":["it"],"in you":["public"],"in your":["`cond`.","`cond`?","question","helper","`calm?`","namespace","`ns`","namespace:","namespace","alternate","case)","previous","code.","character","`cond`,","head","predicate","\"respond\"","two","public","code.","conversion.","alphabet?","function","silence?","ns","bindings","ns","`letter-count`","calls","first","calls"],"in, but":["I"],"in, for":["example,"],"in. I'm":["rather"],"in. In":["general,"],"in? (=":["\\?"],"inappropriately from":["within"],"inattention from":["my"],"inbuilt blank?":["function."],"incidentally will":["still"],"include `0`":["values"],"include a":["test","namespace;","question","separate","`:pre`"],"include all":["functions."],"include its":["batteries."],"include the":["`upper-case`","robot"],"include to":["just"],"include two":["F's","F's"],"include using":["letfn"],"include your":["libraries"],"included a":["helpful"],"included the":["characters",":refer-clojure"],"includes an":["empty"],"includes numbers":["so"],"includes-letters? looks":["wrong."],"including being":["able"],"including it":["in"],"including moving":["the"],"including the":["domain","domain","`...teenth`"],"incoming number":["sped"],"inconsistency in":["that","the"],"inconsistency. The":["test"],"inconsistent in":["putting"],"inconsistent style":["of"],"inconsistent to":["have"],"inconsistent use":["`defn-`"],"incorporate that":["into"],"incorporated that":["change"],"incorporated the":["`frequencies`"],"incorporated those":["suggestions"],"incorrect output":["if"],"increase legibility":["a"],"increase readability":["here"],"increased if":["you"],"increases the":["code"],"incredibly difficult":["case"],"incredibly simpler,":["thank"],"incremental counter.":["However,"],"incrementer function":["--"],"incrementing `s`":["seems"],"incrementing and":["decrementing"],"incur a":["memory"],"incur the":["overhead"],"indeed :)":["Thanks","For"],"indeed I":["should"],"indeed could":["be"],"indeed! Thanks":[":)"],"indeed, I'll":["be"],"indeed, how":["could"],"indeed, it":["was"],"indeed, much":["better"],"indeed, when":["there's"],"indeed. I'd":["probably"],"indeed. It":["makes"],"indent 2":["spaces"],"indent before":["the"],"indent condition":["statements"],"indent for":["clojure"],"indent of":["2","2"],"indent with":["2"],"indentation and":["maybe"],"indentation as":["the","arguments"],"indentation consistent":["here."],"indentation for":["the"],"indentation in":["clojure","`ns`"],"indentation like":["you"],"indentation looks":["a"],"indentation, I":["use"],"indentation, as":["this"],"indentation. Another":["thing"],"indented by":["two","two"],"indented more":["than"],"indented two":["spaces"],"indenting each":["expression"],"indents instead":["of"],"independence at":["all"],"independent \"transaction\"":["so","so"],"independent function,":["as"],"independent way":["because"],"independent, where":["Refs"],"independent. Either":["way,"],"independent. Instead":["of"],"independent. Looks":["good."],"independent. Optionally,":["check"],"independent. The":["can-attack"],"independent: the":["check"],"independently of":["`response-for`"],"index. `Maps`":["implement"],"indexOf ..":["much"],"indicate that's":["what"],"indicates intent":["clearly"],"indicates that":["it's"],"indicating it":["returns"],"indication of":["its"],"indicator that":["a","you"],"indifferently handle":["anything"],"indirection really":["necessary"],"indirection to":["my"],"indirection. But":["maybe"],"indistinguishable. I":["made"],"individual characters":["of","back"],"individual checks":["out"],"individual conditions":["to"],"individual function":["(like"],"individual logic":["checks"],"individual nucleotides":["bindings,"],"individual nucleotides,":["which"],"individual words":["to"],"individually folding":["each"],"individually. Admittedly":["the"],"indluded. Ah,":["and"],"inefficiency -":["you"],"inefficiency by":["checking"],"inefficiency in":["calculating"],"inefficient... starting":["to"],"inevitably make":["the"],"inexperienced with":["Clojure"],"infer the":["*why*"],"inference on":["the"],"infinite prime":["number"],"inflect whole":["words,"],"inflection function":["could"],"inflection of":["bottles"],"inflections to":["more"],"influence the":["results."],"info in":["the"],"info on":["naming"],"info please":["consult"],"information @corine.":["At"],"information available":["in"],"information in":["one"],"information regarding":["how"],"information to":["make"],"informative for":["the"],"inherits from":["Calendar,"],"initial data":["structure"],"initial implementation.":["The"],"initial reaction":["is"],"initial string":["and"],"initial word":["once,","anagram","for"],"initialization of":["robot's"],"initialization was":["my"],"initialized map":["with"],"initially and":["reversed"],"initially but":["one"],"initially did":["that,"],"initially had":["an"],"initially tried":["pulling"],"initially went":["towards"],"inline (replace":["dna-string"],"inline ```no-quit?```":["and"],"inline ```sorted-word```":["-"],"inline a":["namespace,"],"inline comment":["shouldn't","(all","to"],"inline comment,":["a"],"inline comments":["what","describing"],"inline computations":["that"],"inline conditions":["in"],"inline constants":["strings."],"inline everything":["into"],"inline in":["into"],"inline it":["into"],"inline it.":["Also"],"inline string":["in"],"inline the":["`same-characthers?`","string"],"inline these":["in"],"inline those":["values."],"inline with":["with"],"inline, but":["I"],"inline, though":["this"],"inline. Looks":["pretty"],"inlined (and,":["I"],"inlined for":["performance"],"inlined the":["calls","periods,"],"inlined. To":["go"],"inner function":["will"],"inner variables":["to"],"innovative. I":["ended"],"input (str/upper-case":["input))))"],"input I":["explicitly"],"input `word`":["for"],"input actually":["isn't","satisfies"],"input and":["determine","return","output","output"],"input as":["shouting"],"input because":["`(merge)`"],"input before":["you"],"input big":["enough."],"input but":["it's"],"input by":["`or`."],"input checking":["functions","functions"],"input didn't":["match"],"input domain":["is"],"input for":["is"],"input format":["would"],"input in":["an"],"input into":["private"],"input is":["mostly","piped","valid","a","validated."],"input message":["doesn't","into"],"input more":["robust?"],"input prior":["to"],"input process-fn1":["process-fn2"],"input something":["like"],"input string":["itself?","into","may","looking","before","four"],"input string.":["There"],"input text":["into"],"input that":["he","meets"],"input the":["empty"],"input through":["them."],"input to":["ensure","only","the","get"],"input transform1":["transform2"],"input twice":["(once"],"input type)":["-"],"input validation":["better?","in","would","from","from","from"],"input validity":["test"],"input was":["\u003e11"],"input with":["help"],"input word":["over","only","for"],"input\"))` added":["in"],"input) (=":["\"\"","\"\""],"input) val":["(input"],"input))). Then":["going"],"input))` is":["pretty"],"input))` would":["work."],"input, you":["should","don't","don't"],"input, you'll":["have"],"input. Also,":["take"],"input. At":["least"],"input. It's":["not"],"input. Would":["shouting"],"input. You":["could"],"input/output right":["away,"],"input? the":["regular"],"inputs have":["specific"],"inputs into":["private"],"inputs it's":["no"],"inputs such":["as"],"inputs than":["just"],"inputs that":["will"],"inputs, as":["it"],"inputted, the":["expected"],"insanely helpful":["in"],"insensitive and":["takes"],"insensitive comparison":["between"],"insensitive. But":["I"],"insensitivity is":["part"],"insert spaces":["between"],"inserted in":["the"],"inside ```map-to-rna```?":["It"],"inside `doseq`,":["for"],"inside `filter`":["in"],"inside `ns`":["macro","macro.","macro.","macro,","macro.","form.","form."],"inside `ns`,":["the"],"inside `reduce`":["by","and"],"inside `shouting?`":["to"],"inside `str`":["forms."],"inside `str`.":["Other"],"inside `word-count`.":["Figured"],"inside a":["larger","function.","vector,","function","map."],"inside another":["named"],"inside another,":["which"],"inside each":["of"],"inside functions":["is"],"inside of":["`count`.","`let`.","`all-upper?`?","a"],"inside out":["to","it","-"],"inside parantheses?":["ie."],"inside public":["and"],"inside response-for,":["but"],"inside string":["building"],"inside the":["`cond`","namespace.","macro","`response-for`","`cond`","macro","`cond`","`case`","reduce","function","function","let"],"inside, or":["to"],"insight like":["using"],"insight, I'd":["be"],"insight. `clojure.core/filter`":["and"],"insightful and":["made"],"insightful idea":["about"],"insightful nitpick.":["I"],"inspect-phrase a":["lot"],"inspection. It's":["probably"],"inspire you":["and"],"instance [my":["solution"],"instance is":["much"],"instance to":["call"],"instance without":["setting"],"instance, `question?`":["would"],"instance, a":["number"],"instance, if":["we"],"instances of":["general"],"instead -":["but"],"instead `:rename`":["I'd"],"instead directly":["with"],"instead ended":["up"],"instead from":["your"],"instead get":["back"],"instead loops":["through"],"instead of":["splitting","lower-casing","`(anything?","binding","the","using",".endsWith.","letters?","responding","a","Java.","empty?","`defn`?","a","the","splitting","nested","`true`","Java's","`(string/join","running","defn","testing,","function","direct","`.endsWith`.","negative.","mapping","the","`_`.",":use/:only?","regular","nested","`sort`","underscore","duplicating","processing","underscore","`def`","resorting","`clojure.string/split`?","`default?`","a","using","having","`map`","O(n","O(n","O(n","indexOf","mapping","nested","`-&gt;`","a","(fn","`.toLowerCase`,","`sort`?","```sort```?","exploding","fn","an","eliminating","recreating","nesting","the","the","nesting","`or`","`for`.","the","`merge-with`.","ref","`join`.","anonymous","`trim`.","`clojure.string/join`","`(=","`48`","functions,","underscores","the","just","`(int","`:as","`(last","the","ints.","`:use`","java","```split```",":use","strings","(compare)","empty?","```:use```.","using","upper-case).","```subs```","`(\\w+)`,","\"is\"","calling","`[word,","`anagrams`.","this:","the","`apply`,","what","`:use`","`cond`","two","simply","repeat","multiple","stopping","a","using","matching","get-then-add-or-update.","having","(def","def","`re-seq`","`--\u003e`.","using","`last`","4.","`string/split`","counting","`sort`,","O(n","strings.","adding","using","`(def","`def`","having","'t-to-u'.","splitting","joining","`cond`","defining","tackling","\"s\"?","`if`","nesting","using","`endsWith`.","the","a","conditionals.","```(split","a",".isEmpty,","just","mixing","map.","having","square","defn.","`(if","`(=","`if`","mapping","a","these","duplicating","the","the","the","`%1`","the","`(BigInteger.","`.pow`","mapping","recursion","direct","recursion","direct","explicitly","dereferencing","needing","functions","passing","repeating","the","the","`.endsWith`.","needing","a","anchors","```empty?```","a","the","loop/recur.","the"],"instead to":["be"],"instead which":["are"],"instead you":["could"],"instead, this":["isn't"],"instead. Even":["though"],"instead. For":["example:"],"instead. You":["can"],"instead: `shouting?`.":["However,"],"instead? That":["could"],"instill bad":["habits."],"instructions; if":["it"],"intact if":["it"],"integers between":["700"],"integral part":["of"],"integration is":["OK"],"intend for":["other","that"],"intended :)":["What"],"intended by":["the","the"],"intended character":["class?"],"intended to":["use","hold"],"intended? -":["but"],"intent a":["little"],"intent as":["possible"],"intent behind":["having"],"intent better.":["You"],"intent clearly":["enough."],"intent here":["is","imho,"],"intent in":["general,","the","response-for"],"intent is":["that","to"],"intent is.":[":)"],"intent less":["clear"],"intent more":["clear.","clearly,","clear.","clear."],"intent of":["the","the","particular","the","particular","the","the","my","the","the","this","the"],"intent revealing":["names?"],"intent the":["exercise"],"intent to":["reuse"],"intent will":["be"],"intent would":["also"],"intent, but":["I","I"],"intent, so":["readers","I"],"intent. As":["it"],"intent. Besides":["that"],"intent. This":["code"],"intent. Using":["well-named"],"intent. Which":["one"],"intention is":["obvious."],"intention of":["the","each","\u003ccode\u003eresponse-for\u003c/code\u003e."],"intention revealing":["names?","names","names","private","named"],"intention revealing:":["you"],"intention-revealing name":["for"],"intention-revealing named":["functions.","functions."],"intention-revealing names":["might","to","to"],"intention-revealing names.":["What"],"intention-revealing names?":["For","Also,"],"intention. I'd":["go"],"intentional that":["you"],"intentionally choose":["`contains`"],"intentionally used":["```use```"],"intentions as":["clear"],"interest for":["this"],"interest. As":["developers"],"interest. Maybe":[":normal?"],"interested in":["the","ways","equal","expressive"],"interested to":["learn","hear"],"interested too":["as"],"interesting -":["it"],"interesting :)":["I"],"interesting approach.":["Another"],"interesting because":["the","I"],"interesting implementation!":["In"],"interesting one,":["very"],"interesting ones":["-"],"interesting point,":["because"],"interesting that":["the"],"interesting thing":["is"],"interesting to":["try"],"interesting, but":["I'd","I'm"],"interesting, is":["quite"],"interesting, the":["same"],"interesting, yes,":["I'll"],"interesting. However,":["robustness"],"interesting. You":["might"],"interestingly enough":["I"],"interface is":["stupid."],"interface. However,":["in"],"interface. Is":["there"],"interface. Remember":["that"],"interferes with":["the"],"interleave forms":["with"],"interleave stuff":["since"],"interleave with":["string"],"interleaved map":["in"],"interleaved with":["string","strings.","string"],"interleaving the":["string"],"interleaving those":["with"],"intermediary state":["for"],"intermediate `let`":["statements,"],"intermediate bindings":["with"],"intermediate sequence":["as"],"intern to":["generate"],"internal helper":["predicates."],"internal representation":["like","of"],"interned one.":["Try"],"interop (`.charAt`,":["`.length`,"],"interop as":["much"],"interop calls":["and"],"interop calls.":["Nice"],"interop for":["everything"],"interop form":["`.trim`,"],"interop in":["`question?`.","that"],"interop is":["fine,","perfectly"],"interop when":["possible."],"interop, all":["names"],"interop, but":["probably","I"],"interop. Also":["switched"],"interop. Lowercase":["hyphenated"],"interop. Lowercase,":["hyphenated"],"interop. Please":["use"],"interpolation that":["feels"],"interpret it":["as"],"interpret remarks":["differently"],"interpret what":["you"],"interpreted as":["a","anything",":T."],"interpreting anything":["ending"],"interpreting results":["when"],"intiated with":["the"],"into (sorted-map)":["db-names-sorted:"],"into 0,":["but"],"into Java.":["Whenever"],"into ```anagram.anagrams-for```'s":["stack"],"into ```clojure.core/frequencies```?":["It"],"into `eval`":["or"],"into `map-to-rna`":["would"],"into `memoize`":["now."],"into `nucleotide-counts`...idk.":["Or"],"into `number`":["function."],"into `to-rna`":["(either"],"into `to-rna`,":["I"],"into a":["different","private","tail","`let`?","word","sequence","sequence","string.","single","helper","count,","language","single","separate","series","`anagram?`","lot","named","hash","single","function?","couple","string","separate,","`letfn`?","module","named","string:","set","single","named","helper","separate","reduce","sequence","simple","string.","character","single","function.","seq.","`seq`","single","non-test","sequence","few","Map.","sequence."],"into account":["for","and","that","your","the"],"into chunks":["and"],"into clearly":["named"],"into clojure":["so"],"into constants,":["so"],"into digestible":["pieces"],"into edible":["nibbles."],"into exercism!":["Thanks"],"into existing":["`let`,"],"into extra":["functions"],"into finely-named":["predicates?"],"into function":["as"],"into functions":["whose","with"],"into helper":["functions?"],"into intention":["revealing"],"into intention-revealing":["named","named"],"into issues":["with"],"into it":["so"],"into it's":["own","own","own","own"],"into it.":["The"],"into its":["own","own","own","own","own","own"],"into little":["pieces,"],"into methods":["and"],"into more":["functions","functions."],"into multiple":["words."],"into my":["face.","namespace,"],"into named":["functions","constants","constants","functions"],"into new":["functions."],"into non-public":["functions"],"into one":["step?","&","method"],"into partial":["application"],"into persistent":["data"],"into private":["functions","methods","functions","methods","functions","functions.","methods","functions","functions","functions","functions","functions","functions","functions","methods","function","functions","functions","functions","functions","functions","functions"],"into separate":["methods.","expressions,","functions.","tests","functions"],"into separate,":["private"],"into set":["and"],"into simple":["defs"],"into situations":["that"],"into small":["methods,","predicate"],"into smaller":["subfunctions."],"into some":["of","predicate"],"into something":["you"],"into splitting":["the"],"into standalone":["functions,"],"into templates":["would"],"into that,":["thanks"],"into that.":["I"],"into the":["example...","Java","terriority","threading","macro","`require","namespace","code?","implementation","functions","ns","`merge`","details.","map","same","namespace","tests","`on-planet`","`assert`","`assert`","`:require`","response-for","map?","`assert`","`assert`","`map`"],"into their":["own","own","own","own","own","own"],"into this":["as","kind"],"into three":["functions:"],"into to-rna":["function."],"into trouble":["with"],"into two":["functions,","parts","sequence"],"into using":["a","the"],"into why":["it"],"into words":["into","code"],"into working":["out"],"into your":["namespace","project","code?","code?","namespace."],"into. e.g.":["`#{a"],"introduce `telling?`":["when"],"introduce a":["lot"],"introduce actual":["constants,"],"introduce an":["abstraction"],"introduce either":["inline"],"introduce some":["sort","unintended"],"introduced a":["bug.","bug","bug"],"introduced into":["the"],"introducing another":["mapping?"],"introducing complexity":["before"],"introduction of":["the"],"ints with":["`int`"],"ints. It":["would"],"ints/longs. While":["seeming"],"intuitive (looks":["more"],"intuitive if":["all"],"intuitive, but":["it"],"intuitively, but":["in"],"invalid higher":["up"],"invalid input":["by"],"invalid nucleotides":["from"],"invalid nucleotides,":["it"],"invalid nucleotides.":["Once"],"invalid number":["could"],"invalid strand,":["take"],"invalid triangles":["covered"],"invalid\". The":["set"],"invalid\". What":["it"],"invalid. Here":["is"],"invalids string":["and"],"invariants all":["over"],"inverses of":["each"],"invert the":["way"],"investigate `java.util.Calendar`":["a"],"investigate the":["```cond```"],"investigated ```clojure.core/frequencies```?":["It"],"invisible from":["outside?"],"invocation by":["putting"],"invocation, not":["the"],"invoke Emmerson":["and"],"invokes the":["other."],"invoking a":["chain."],"involve one":["pass"],"involved more":["than"],"irked that":["typing"],"irks me":["about"],"is \"Fine,":["be"],"is \"Whatever.\"":["It"],"is \"banana\"":["an"],"is \"if":["nucleotide","nucleotide"],"is \"not":["working\""],"is \"to":["focus"],"is \"unnecessary":["function"],"is (and":["this"],"is (necessarily)":["trivial,"],"is *content*":["that"],"is 45":["letters"],"is I":["skip"],"is I'm":["so"],"is O(n":["*"],"is OK":["here,"],"is \\X,":["it's"],"is _not_":["pretty"],"is `(=":["(last"],"is `(apply":["str"],"is `(remove-non-word-chars":["s)`"],"is `(vec":["(conj...`"],"is `-\u003e\u003e`":["instead"],"is `\\A":["\\G"],"is ```char-counts```":["a"],"is ```x```":["-","-"],"is ```x```?":["Is"],"is `declare`":["to"],"is `letfn`":["preferred"],"is `map-to`":["function"],"is `present?`.":["I"],"is `sanatize`":["really"],"is `upper`":["in"],"is a":["test","lot","lot","built","good","better","useful","better","\"bob\"","Java","really","bit","better","broader","pretty","bit","good","nice","native","bit","matter","built-in","really","better","bit","`blank?`","riddle","much","great","*word*","bit","pretty","justified","good","bit","left","bit","better","set","waste","small","really","lexical","generalization","bit","better","simple","bit","bit","bit","pretty","bit","much","vector,","bit","slight","matter","character.","more","matter","bit","bit","keyword","bit","better","lot","good","valid","long","great","pretty","bit","way","reasonable","bit","non-sensing","little","CSS","core","simpler","more","Clojure","bit","bit","function","cost","good","great","protocol","little","performance","matter","bit","great","rough","bit","great","letter.","nice","`not-any?`","better","predicate","stark","mad","lexical","fairly","longer","subset","very","`yelling?`","shouting","lot","valid","valid","case","lazy-sequence","better","subset","better","little","generic","lot","simpler","[declare","totally","tried","well-structured","required","built-in","lot","nice","better","case","`true?`","little","little","thing","good","bounded","bounded","discussion","really","more","bit","function.","factor","function.","function","little","re-implementation","valid","bit","function.","declarative","`clojure.string/blank?`","good","good","built","built"],"is a)":["documents"],"is about":["readability,","code","readability,","implementation"],"is accomplishing.":["If"],"is actually":["redundant,","the","the","pretty","2","implement","[`zero?`](http://clojuredocs.org/clojure_core/clojure.core/zero_q)"],"is admirably":["concise,"],"is admittedly":["picky,"],"is after":["I"],"is all":["we","caps,","about"],"is almost":["never"],"is already":["used","lowercased,","very","a","a","small"],"is also":["undefined,","usual","a","a","very","a","available","a"],"is an":["anagram","*anagram*","easy","adjective.","unequivocal","analog","interesting","implicit","[Alphagram](http://en.wikipedia.org/wiki/Alphagram);","[Alphagram](http://en.wikipedia.org/wiki/Alphagram);","anagram","anagram","already","expression"],"is and":["did"],"is annoyingly":["minor,"],"is another":["layer","go"],"is any":["way"],"is anyone":["reviewing"],"is applied":["inside","to"],"is approved,":["you'll"],"is around":["an"],"is arranging":["the"],"is as":["readable","the"],"is at":["the","a","the"],"is attempted":["to"],"is available":["is","at"],"is awesome!":["Thank"],"is bad":["style","and","in"],"is based":["on","on","on"],"is because":["it's","that","I"],"is being":["weird","discouraged","slowly","able","done.","tested.","evaluated"],"is better":["this","naming","than","and","to","than"],"is better?":["Or"],"is blank?":["There's"],"is blasé":["enough"],"is bounded":["by"],"is but":["I"],"is by":["far","checking","default."],"is called":["for.","nitpicking","alphagram","and","to","when","then"],"is called.":["Subsequent"],"is can":["also"],"is case":["insensitive","insensitive."],"is case-insensitive":["by"],"is certainly":["no","subjective,","more","not"],"is checked":["both"],"is checking":["for","for"],"is cleaner":[":)","in"],"is clear":["enough","but"],"is clear,":["but","great!"],"is clearer":["about","IMO),"],"is clearer,":["though."],"is clearly":["faster"],"is clever,":["but"],"is clojure":["missing"],"is closely":["coupled"],"is closing":["over,"],"is common":["to"],"is complected":["with"],"is completely":["unbenchmarked","unnecessary","unnecessary"],"is complex":["enough"],"is complex,":["I"],"is confident":["there"],"is confusing":["(if"],"is confusing.":["Most"],"is considered":["deprecated","more"],"is constant,":["and"],"is contained":["within"],"is conventional":["in"],"is cool.":["I"],"is correct.":["Is"],"is csharp,":["eh?)."],"is currently":["deprecated","deprecated.","dependent"],"is data\"":["(i.e."],"is de":["facto"],"is debatable":["but"],"is declared":["in"],"is defined.":["Then"],"is definitely":["more","getting","missing","going","not","in","preferred","a","not","idiomatic","simpler"],"is deprecated":["-"],"is deprecated.":["Please","Please","Use","For"],"is deprecated/discouraged":["http://dev.clojure.org/jira/browse/CLJ-879"],"is described":["in","in"],"is desirable.":["You"],"is different":["because"],"is distracting":["noise"],"is doing":["there)","here?","to"],"is doing,":["but","but","but"],"is doing.":["However,","But","I"],"is done":["locally"],"is duplicated":["(i.e."],"is easier":["to","to","to"],"is easy":["to"],"is efficiency.":["I"],"is either":["`sort`"],"is empty":["or","or"],"is enough":["to","-","to"],"is enough.":["No"],"is equivalent":["of","to","to","to","to"],"is essential":["in"],"is essentially":["a"],"is evaluated":["because"],"is even":["more","simpler."],"is exactly":["what","the"],"is executed":["either"],"is explicit":["(of","enough"],"is extremely":["hard-coded","important,"],"is fantastic,":["I"],"is far":["clearer","more","faster,"],"is fine":["but","for","in","in"],"is fine,":["but","there's","but"],"is fine.":["I","I","It's"],"is flawed.":["Having"],"is for":["everyone","convencience","defining","the"],"is formatting":["so"],"is formed":["by"],"is found,":["default"],"is free.":["Let"],"is full":["of"],"is fun":["and"],"is functionally":["deprecated","equivalent"],"is generally":["encouraged","agreed","agnostic","deprecated","considered","deprecated.","frowned","because","only","only","only","preferred"],"is getting":["at"],"is given":["as"],"is giving":["the","me"],"is going":["to","to","to","to","on,","to"],"is good":["enough","to","exercise","from"],"is good.":["In"],"is great":[":)","feedback."],"is great,":["but"],"is great.":["I","But"],"is happening":["to"],"is has":["to"],"is having":["to"],"is hellish,":["there"],"is his":["specific"],"is horrendous,":["this"],"is how":["I","I","you"],"is idiomatic":["clojure","to","in","or"],"is idioms":["copied"],"is immutable":["in","and"],"is implemented":["in","as"],"is implemented.":["The"],"is important":["to","(which","because"],"is in":["the","no","clojure.core).","clojure.core).","clojure.core).","how","lisps.","`extract-words`","the","the","the","the","your"],"is indented":["two"],"is inputted,":["the"],"is inserted":["in"],"is intended":["by","by","to"],"is interesting.":["You"],"is invalid":["higher"],"is invisible":["from"],"is it":["possible","necessary","really","considered","preferred","idiomatic?","Unicode-aware?","a","as","possible"],"is it?":["The"],"is java.util.Calendar":["which"],"is just":["a","a","what's","fine","the","a","a","overkill...","one","a","as","easier","`(or","a","a","return","fine."],"is justified":["in"],"is kept":["private."],"is keyed":["by"],"is kind":["of","of","of","of","of","of"],"is laid":["out,"],"is last).":["It"],"is lazy":["you","which"],"is left":["to","is"],"is legal":["as"],"is less":["efficient","code","code","code","efficient","magic.","than"],"is likely":["O(n"],"is limited":["to"],"is limited.":["The"],"is literal":["for"],"is literally":["the"],"is looking":["good,","pretty","pretty","good"],"is lower":["case"],"is making":["the","use","me"],"is mapping":["a"],"is maybe":["a"],"is meant":["to","to"],"is misleading":["-"],"is misspelled":[":)"],"is more":["descriptive","idiomatic","idiomatic.","descriptive.","or","widely","readable","verbose,","idiomatic","force","expressive","code.","appropriate","idiomatic.","standard","general","clear","complex","idiomatic:","readable/expresses","interesting,","intention","subjective","appropriate).","a","common","idiomatic","idiomatic:","concise.","compact,","appropriate","idiomatically","idiomatically","idiomatically","idiomatically","idiomatic","often","idiomatic","clojuresque."],"is mostly":["empty","matter"],"is moving":["at"],"is much":["clearer","more","broader","easier","easier","cleaner","more","nicer","simpler:","easier","cleaner"],"is my":["second","first","very","limit","attempt","own","least","initial","first","first","first","first","first","goto","first"],"is naive":["and"],"is naming":["the"],"is necessary":["as"],"is necessary,":["but","otherwise"],"is needed":["to","because"],"is never":["used."],"is new":["for"],"is nice":["and","to","-","at"],"is nice.":["Have"],"is nifty.":["If"],"is nil,":["empty,","empty,"],"is no":["way","need","docstring","difference","real","docstring.","need","`def-`.","else"],"is non-standard":["-"],"is normally":["encounter","better","reserved"],"is not":["my","cool","specified","approval","necessary","exported.","a","Ruby).","as","semantically","fully","so","tail-recursive,","as","too","entirely","necessary.","communicated","evaluated.","needed","necessary,","necessary","required","present","a","`\"?\"`","clear","necessary,","an","great.","necessary","in","worth","needed.","within","quite","dependent","part","necessary.","considered","a","what","my","hard","present,","as","really","have","yelling","my","matched.","what","very","necessary","necessary"],"is not.":["Since"],"is nothing":["to","but"],"is now":["determined"],"is now,":["it"],"is nucleotide-count,":["which"],"is nulled":["out."],"is obscured":["by"],"is obvious,":["but"],"is obviously":["bad"],"is off":["by"],"is often":["a","written","preferred","a","written","written"],"is on":["its","its","the","one"],"is one":["of","of","that","of","thing","of","of\""],"is only":["used","really","used","swapped","created"],"is optimized":["for"],"is optional":["of"],"is or":["what"],"is out":["of","of"],"is part":["of","of"],"is particularly":["useful"],"is partly":["speculation,"],"is perfect":["to","for"],"is perfectly":["fine,","sensible","valid","fine,"],"is performed":["twice"],"is perhaps":["a"],"is piped":["through"],"is plentiful).":["Isn't"],"is possible":["to","to","to"],"is preferable":["to"],"is preference,":["but"],"is preferred":["for","over","over","over","over"],"is pretty":["descriptive!","snazzy","neat.","cool.","compact","clean.","much","hard","much","compact","easy","low","much","much","long.","rubbish.","much","rare"],"is private":["functions."],"is private),":["and"],"is private,":["the"],"is probably":["what","fine.","faster","a","more","better","a","to","a","overkill","much","the","not","up","overkill","a","on","where","overkill.","better"],"is programming.":[":p"],"is provided":["(based"],"is public.":["Everything"],"is put":["through?"],"is putting":["together"],"is questionable":["because"],"is quite":["difficult!),","long,","useful","complex.","pants"],"is rather":["for"],"is read,":["the"],"is readable,":["but"],"is really":["a","clean.","great","clean","bikeshedding.","nicely","a","the","smelly.","about","when","good","simple.","clear,"],"is recommended":["rather"],"is recursive":["(`let`"],"is redundant":["with"],"is regexp":["in"],"is relatively":["minor,"],"is replace":["lines"],"is replacing":["the"],"is represented":["by"],"is responding":["to?"],"is response-for":["function"],"is response-for.":["defn-","It"],"is returned.":["The","There's"],"is reverse":["it"],"is right":["either."],"is run":["in","in","in"],"is saying":["\"it's"],"is short":["and"],"is shorter":["and","than","written","and"],"is shorter,":["I'll"],"is significantly":["more"],"is simple":["enough"],"is simpler":["with","and"],"is slightly":["misaligned","better"],"is small,":["but,"],"is smart":["and","enough"],"is so":["short,","context","useful!","verbose","simple","un-Clojure-like."],"is solved":["in"],"is some":["of"],"is something":["wrong","that","like"],"is somewhat":["redundant","redundant","weird;"],"is sort":["of","of"],"is spelled":["`(map"],"is standard":["in"],"is starting":["to"],"is stated":["in"],"is still":["essential","pretty","off","a","not","a","executed","a"],"is structured,":["I"],"is subtracted":["from"],"is succinct":[":)"],"is succint":["and"],"is such":["a","a","a"],"is sufficient?":["I've"],"is suggesting":["*why*"],"is suitable":["for"],"is super":["picky,","clear."],"is super-short.":["Sometimes"],"is superfluous":["on"],"is supposed":["to"],"is taking":["some"],"is terrible.":[":)"],"is tested":["prior","and"],"is testing":["for"],"is thanks":["to"],"is that":["out","normal","it","for","in","this","you","it","you","the","it's","they","you","you","it","the","I","it's","I","you","\"is_\"","the","when","`is-all-uppercase?`","reversed.","currently","my","`lowerA`","you","if","requiring","I","your","it's","'prefix'","the","you","now","a","each","Atoms","the","each","it's","`seq`s","there","maps","the","what","the","you"],"is the":["short","additional","only","second","first","trailing/hanging","idiomatic","result","result","choice","same","rule","same.","response.","response","idiomatic","necessity","real","necessity","answer","use","more","example:","most","best","\"proper\"","side","result","same","usual","better","case.","intent","only","main","structural","function","first","different","main","put","trailing","only","ideia,","use","ability","only","basis","community","last","difference","return","\"step\",","same","same","advice","\"step\"","range.","general","first","*step*."],"is then":["assuming"],"is there":["any","a","others","any","a","any","a","value","value","on","a","any","a"],"is this":["pattern,","usual","cheating?"],"is thousands":["or"],"is threaded":["through"],"is thrown":["in?"],"is to":["swap","stack","tweak","use","look","place","vertically","use","try","use","using","use","group","account","possibly","transcribe","put","name","write","make","simply","put","upcase","reduce","use","suggest","squash","ignore","see","wrap","use","use","hack","return","separate","use","refer","create","use","use","force","use","use","convert","use","simplify"],"is too":["picky,","bad","easy","precious","far"],"is trading":["`#("],"is treated":["as","as","by","as"],"is tricky.":["Here's"],"is true":["of"],"is truthy":["for"],"is trying":["to"],"is twice":["as"],"is typically":["used"],"is ugly":["and","as"],"is unfortunate;":["I"],"is unique…":["if"],"is unlike":["the"],"is unnecessary":["and","-","because","-","-","-","in","and","-","-"],"is unnecessary,":["`(db"],"is unnecessary.":["Either","Anyway,","Other","You","`anagram?`"],"is unusually":["cased?"],"is upper":["bounded"],"is uppercase":["(as"],"is used":["to","elsewhere","only","for","very","as","as"],"is useful":["imho.","enough"],"is using":["question",":require","such","the","raw","the","the"],"is usually":["separated","only"],"is vague":["and"],"is vague.":["Why"],"is valid":["or","domain","DNA","characters."],"is validated.":["The"],"is valuable,":["as"],"is variadic":["(takes"],"is variadic,":["so"],"is very":["well","expressive","good!","helpful.","first","gross,","much","clear,","much","useful,","nice,","straight-forward","readable","jarring.","clear","straightforward","helpful.","clean","good","clean","welcome."],"is way":["more"],"is we":["don't"],"is weird":["Ruby"],"is what":["you","I","indicates","you"],"is what's":["needed"],"is where":["the"],"is with":["the"],"is word-count,":["would"],"is working":["to","in"],"is wrapped":["inside"],"is wrong":["with"],"is wrong,":["but"],"is you":["would"],"is your":["conscious","friend!"],"is), there":["is"],"is, and":["Vim","I"],"is, as":["you"],"is, but":["I"],"is, can":["it"],"is, conveniently,":["a"],"is, given":["my"],"is, is":["there"],"is, it":["makes"],"is, the":["number"],"is, you":["are"],"is- is":["superfluous"],"is- prefix":["on"],"is-anagram (although":["the"],"is-anagram looks":["a"],"is-anagram?) is":["a"],"is-xxx? I":["think"],"is. But":["it"],"is. I":["hadn't"],"is. I've":["tossed"],"is. Otherwise":["`to-rna`"],"is. That's":["something"],"is. The":["keyword"],"is. There":["are"],"is: Read":["the"],"isLetterOrDigit but":["I"],"isQuestion by":["reordering"],"isYelling test":["in"],"isn't `defn-`":["defines"],"isn't `silence?`":["declared"],"isn't a":["best","complete","single","`Set`."],"isn't all":["that"],"isn't as":["it","good"],"isn't caught":["by"],"isn't correct":["given"],"isn't counted":["in"],"isn't defined":["in"],"isn't defined,":["so"],"isn't equilateral":["or"],"isn't found":["in"],"isn't getting":["you"],"isn't incorrect,":["though."],"isn't it":[":-)"],"isn't just":["identity"],"isn't line-oriented":["like"],"isn't much":["communicated","to"],"isn't my":["job"],"isn't necessary":["since","in"],"isn't necessary.":["Also,"],"isn't needed":["anymore."],"isn't one":["of"],"isn't possible":["to"],"isn't really":["a","necessary"],"isn't so":["much"],"isn't spelled":["correctly"],"isn't substantially":["longer"],"isn't that":["great"],"isn't the":["best","case","case)","right"],"isn't very":["practical,"],"isn't where":["I"],"isn't words,":["it's"],"isolated, self-documenting":["step"],"isosceles (all":["three"],"issue just":["yet"],"issue of":["a","multiple"],"issue with":["`count`."],"issue: the":["`frequencies`"],"issue? (Maybe":["code"],"issue](https://github.com/kytrinyx/exercism.io/issues/504) about":["it,"],"issues (although":["representing"],"issues with":["the","code","learning","my","overflows"],"issues. I":["don't"],"issues. Usually":["I've"],"it (i.e.":["replace,"],"it (silence":["is"],"it (think":["surrounding"],"it *pluralize*?),":["because"],"it -":["it"],"it --":["that"],"it 2":["collections"],"it ;)":["),"],"it \u003ccode\u003eresponse-for\u003c/code\u003e":["and"],"it ?":["Am"],"it DRYer":["in"],"it I":["definitely","suppose."],"it N":["times."],"it `dna-seq`":["or"],"it `lowercase-word`.":["There's"],"it `question?`,":["for"],"it a":["little","different","try.","bit","little.","chromosome?","name","lot","bit","seq:","bit,","good","little","go.","bit","bit","bit","`question?`","whole","little","function","bit"],"it accepts.":["Do"],"it accomplishes":["the"],"it actually":["does.","looks"],"it after":["submission"],"it afterwards).":["The"],"it again":["later","on"],"it all":["lead","with","in","the","on","is,"],"it all!":["But"],"it allows":["the"],"it almost":["feels"],"it also":["obscures"],"it altogether.":["Alternatively,"],"it always":["makes"],"it an":["easier"],"it and":["replaced","try","consider"],"it any":["longer","more","shorter."],"it appear":["almost"],"it as":["a","shouting","a","a","well,","great","a","nested","a","read","you","\u003ccode\u003ebob/response-for\u003c/code\u003e?","the","an","just","readable?","a"],"it at":["that,","all.","all?","one"],"it atomic,":["you","you"],"it automatically.":["To"],"it avoids":["creating"],"it away":["entirely."],"it back":["for","to","into"],"it back.":["I"],"it be":["worthwhile","worthwhile","worthwhile","worthwhile","worthwhile","worthwhile","clearer","worthwhile","worth","clear","clearer","the","beneficial","worthwhile","worthwhile","worth","worthwhile","worthwhile","worthwhile","a","clearer","better","worthwhile","worthwhile","done","clearer","worthwhile","worthwhile","worthwhile","worthwhile","worthwhile","worth","better","separated","worthwhile","better","better","better","clearer"],"it because":["I","it"],"it becomes":["clear","null"],"it being":["applicable","accepted","noisy,"],"it better":["now,","to"],"it bit":["me"],"it bugs":["me"],"it but":["it's"],"it by":["changing","using","doing"],"it calls":["the"],"it can":["be","be","be","be","be","work","be","produce.","be","be","replace","get","be"],"it caused":["unnecessary"],"it certainly":["matters.","improves"],"it clean":["that"],"it cleans":["up","up"],"it clear":["_what_","what","it"],"it clearer":["what","especially"],"it close":["over"],"it comes":["to","to","to","down","to","from"],"it common":["to"],"it compare":["performance-wise"],"it considered":["bad"],"it consistent":["with"],"it conveys":["meaning"],"it could":["help","be","help","be","be","matter.","greatly","be.","be","do","be","make","make","be"],"it deep":["thought."],"it definitely":["increases"],"it demonstrates":["the"],"it depends":["on"],"it descriptive,":["I"],"it did":["that","not"],"it didn't":["work.","work","have","start","work.","make"],"it didn't,":["I"],"it does":["not","make","to","not","not","in","in","the","than","work,","look"],"it does,":["however"],"it doesn't":["actually","matter","consolidate","contribute","end","matter","really","comply","improve","seem","make","have","appear","help","work","really","make","match?","matter","capture"],"it down":["in","into","more"],"it easier":["to","to","to","to","to","to","to","to","to"],"it easy":["to"],"it either":["until"],"it ended":["up"],"it ends":["with"],"it enhance":["legibility"],"it even":["more","has"],"it exists":["(which"],"it explicit":["what","that"],"it extremely":["ugly"],"it feels":["weird","foreign."],"it felt":["premature","like"],"it fifth":["iteration."],"it fits":["the"],"it flows":["from","from"],"it for":["real.","approval?","me.","comparison?*","comparison?","each","me.","clarity.","this","some","clarity.","the","silence?"],"it from":["the","being","within","java,"],"it further":["down."],"it gets":["impossible","the","a"],"it gives":["me","me","you"],"it goes":["into"],"it going":["again"],"it got":["a"],"it had":["to"],"it hamper":["a"],"it happens":["to"],"it hard":["to"],"it harder":["to","to","to","for"],"it has":["only","the","improved","possibility","some","a"],"it help":["you"],"it helps":["making","you."],"it here":["-","because"],"it here.":["If"],"it hits":["the"],"it hurts":["my"],"it if":["you"],"it immediately":["clear"],"it improves":["readability,"],"it in":["a","the","his","wider","a","Clojure","a","other","this","the","Clojure,","a","a","someone","one","previous","word-count","your","the","2","your","this","my","the","this","a","one","into","one","by"],"it incredibly":["simpler,"],"it inside":["`doseq`,"],"it inside,":["or"],"it into":["a","two","a","a","existing","a","its","it's","a"],"it is":["approved,","a","the","common","preference,","easy","better","certainly","clear","more","not","private),","less","a","important","not","now,","such","this","somewhat","so","in","stated","doing,","used","contained","or","a","doing.","possible","far","*content*","too","because","making","more","quite","a","simple","a","doing","upper","to","trying","already","more","the","much","slightly","in","not.","used","used","solved","better","more","probably"],"it is,":["you","it"],"it is.":["I","That's","Otherwise"],"it isn't":["words,","where",":)"],"it just":["blows","depend","happens","felt","be"],"it know":["you're"],"it last":["night"],"it less":["inefficient..."],"it like":["that,","this:","this","\"Have","this:","such:"],"it limited":["what"],"it look":["better","a"],"it looked":["messy.","a","like"],"it looks":["good","much","nice.","like","good","better","good,","good","like","good.","wrong","like","like","like","good.","great","like","like","great.","like","really","really","like","good.","nice.","like","cleaner"],"it looks.":["It"],"it lowers":["readability."],"it made":["the","the"],"it make":["it","sense"],"it makes":["sense","a","things","more","the","it","very","sense","sense","me","more","your","the","it","it","the"],"it maps":["over","over"],"it matches":["the","the"],"it may":["be","be","be","take","not","not","feel"],"it maybe":["be"],"it means":["exactly"],"it meant":["so"],"it might":["be","be","not","be","have","be","make","be","be","simplify","be","not","introduce","make"],"it more":["trouble","readable","idiomatic/personal","efficient","compact","readable.","generic?","useful,","readable","readable","readable.","obscure.","readable.","consistent,","readable(i","readable","readable","litterate.","encapsulated."],"it much":["more","more"],"it must":["be","be","be"],"it necessary":["to","to"],"it needs":["more","to,","to"],"it never":["occurred"],"it nicer":["to"],"it non-public":["with"],"it normally":["just"],"it not":["stick"],"it now":["depends"],"it now,":["i"],"it obfuscates":["the"],"it obvious":["to"],"it off":["as"],"it often":["(but"],"it on":["the"],"it once":["and"],"it once.":["Consider"],"it only":["once","once","with","once?"],"it or":["overkill?"],"it out":["is",";)","into","with","and","(even","to","the","anyway.","into","of","like"],"it out,":["but","I","but"],"it out.":["But",":)"],"it overall,":["but"],"it overwrites":["this"],"it passes":["all","the"],"it possible":["to","to","to","to"],"it preferred":["to"],"it prettier":["by"],"it private":["you"],"it probably":["doesn't"],"it probably.":["I"],"it properly,":["so"],"it provided":["clarification"],"it puts":["additional"],"it randomly":["at"],"it read":["hard"],"it reading":["the"],"it reads":["really","better.","better.","rather","pretty","better,","quite"],"it really":["just","hard","makes","the","should","needs"],"it reduces":["the"],"it reduces.":["Going"],"it regarding":["the"],"it reminds":["me","me"],"it removes":["the"],"it repeatedly":["with"],"it represents.":["I"],"it responded":["with"],"it return":["a","the"],"it returns":["false","a","a"],"it revolves":["around"],"it right":["away"],"it says":["is"],"it seemed":["to","like","to"],"it seems":["it","natural","that","to","to","to","like","like","like"],"it self":["works"],"it should":["be","be","be","have","be","look","be","return","say","be","be.","be","AssertionError","be,","come","be","help"],"it shouldn't":["really"],"it shouting":["if"],"it simple":["to"],"it simple.":["Multimethods"],"it simpler":["and"],"it since":["I","function"],"it sits":["out"],"it so":["nucleotide-counts","you","I"],"it something":["meaningful"],"it sort":["of"],"it sounds":["funny"],"it stands":["now,"],"it stands,":["a"],"it stands.":["There"],"it starts":["to"],"it still":["might","gives","is","can"],"it stops":["processing"],"it straight":["to"],"it such":["that"],"it tail-recursive.":["Other"],"it take":["the"],"it takes":["to","a"],"it tends":["to"],"it that":["way?","way.","way","often.","way,"],"it the":["language","same"],"it this":["way.","way.","way),","way","way:","way."],"it throws":["`java.lang.NullPointerException`."],"it to":["create","work","define","be","the","be","heed.","you...","make","make","use","see","look","vector.","vectors","be","a","compare","compare","get","just","implement","assert","just","a","a","a","read","be"],"it together":["with"],"it too":["similar","weak","much.","but"],"it took":["me"],"it tough":["for"],"it turns":["out"],"it twice.":["With"],"it under":["aliased"],"it until":["it's"],"it up":["a","dynamically,","by","I","a"],"it used":["-\u003e","in"],"it uses":["the"],"it usually":["becomes"],"it very":["clear","intuitive","specific"],"it violates":["the"],"it warps":["my"],"it was":["my","doing.","quite","generally","outside","too","too","worth","almost","noisy","the","much","of","`:all-caps`","because","possible","not","the","a","used","fun.","really","testing,","real"],"it wasn't":["*too*","actually"],"it we":["rewritten"],"it went":["to"],"it were":["really","in"],"it weren't":["making"],"it what":["the"],"it when":["code","I","doing"],"it whenever":["possible."],"it where":["it","it"],"it which":["means"],"it will":["work.","make","make","suit","be","return","be","be","make","look","read","spare","make","lower-case","only","expand","return","take","lower-case","be","expect","be","make"],"it wins":["a","for"],"it with":["a","a","the","a","just","recursion.","proper","the","`or`).","`re-seq","anymore","`count))`","a","that"],"it without":["a","resorting","anonymous"],"it won't":["handle","get"],"it work":["without"],"it working.":["I"],"it works":["on","in","like","perfectly","with","but","just","now."],"it works.":["I","Thanks!","Pretty","I'd"],"it worth":["mapping","the"],"it worthwhile":["to"],"it would":["just","be","result","be","be","be","be","be","help","be","probably","be","become","give","be","be","be","evaluate","be","make","be","be","be","be","be","be","be","be","do","be","be","be","be","respond","be","reduce","be","already","be","already","be","have","be","be","better","generate","also","make","look","already","never","have","use","first","be","fail","be","simplify","be","be","make","look","be","be","not"],"it wouldn't":["faze","be","be","be","do","hurt","be"],"it wrong":["-"],"it you":["might"],"it your":["code"],"it yourself":["now,"],"it! It":["would"],"it! Nice":["and"],"it! One":["small"],"it' would":["be"],"it'd be":["much"],"it'd make":["the"],"it'll get":["awkward"],"it'll let":["you"],"it's \"thymidine\",":["not"],"it's (probably)":["related"],"it's (to":["use"],"it's a":["question","big","good","name","matter","truthy","single","no","better","matter","clever","documented","good","bit","bit","different","generalization","day","bit","bit"],"it's a)":["not"],"it's about":["not"],"it's actually":["`:use","doing?"],"it's already":["a"],"it's also":["an","cleaner","preferable","responsible","good","good"],"it's always":["starting","either"],"it's an":["unhandled","improvement"],"it's any":["triangle"],"it's appropriate":["there."],"it's approved,":["submit"],"it's assumed":["you're"],"it's basic":["components"],"it's beautiful":[":)"],"it's been":["noted","an"],"it's being":["used"],"it's best":["to"],"it's better":["than","&","if","to","for","to","to","to","to"],"it's clear":["what's","to"],"it's clearer":["to"],"it's clearer.":["I"],"it's clearly":["understandable,"],"it's clever":[";)"],"it's common":["practice","to","to","to"],"it's customary":["to"],"it's declared":["in."],"it's default":["behavior"],"it's defined.":["e.g."],"it's definitely":["not"],"it's different":["than"],"it's documentation,":["puts"],"it's easier":["to"],"it's easy":["to","to","enough"],"it's faster":["than"],"it's faster,":["but"],"it's fine":["where","like"],"it's fully-qualified":["name"],"it's generally":["agreed","better","desirable"],"it's going":["though"],"it's good":["to","practice"],"it's hard":["to","to","to"],"it's idiomatic":["to"],"it's implemented,":["as","as"],"it's implied":["by"],"it's important":["to"],"it's in":["parenthesis.","my"],"it's interesting":[":)"],"it's invalid\".":["What","The"],"it's just":["constant","me.","that","the","an","a","more"],"it's kind":["of"],"it's laid":["out.","out."],"it's less":["expensive.","efficient."],"it's lexical":["scope."],"it's likely":["to"],"it's lined":["up"],"it's longer":["for"],"it's longer)":["will"],"it's matter":["of"],"it's more":["that","readable","idiomatic","idiomatic","idiomatic.","readable","of","idiomatic","clear","common","idiomatic"],"it's mostly":["preference","matter"],"it's much":["cleaner!","more"],"it's necessary":["in"],"it's nice":["to"],"it's no":["big"],"it's not":["silence,","silence,","super","going","a","something","perfect)","that","calculated","reflected","clear,","an","technically","executable","the","possible","already","clear","straightforward.","totally","immediately","being","necessarily"],"it's obsolet":["when"],"it's often":["idiomatic","a"],"it's one":["method"],"it's only":["a"],"it's outside":["of"],"it's overkill":["and","for"],"it's own":["private","line.","line","line.","function.","define,","line?","line","independent","independent","function"],"it's part":["of"],"it's parts.":["Initially,"],"it's preferred":["to","to","to"],"it's pretty":["good","easy"],"it's probably":["good","fine,","straightforward","better","about","OK"],"it's quite":["hard"],"it's rather":["redundant."],"it's really":["a","annoying","easy","needed."],"it's relatively":["rare"],"it's responding":["the"],"it's sad":["to"],"it's silence":["as"],"it's silly":["that"],"it's single":["threaded,"],"it's slightly":["more"],"it's some":["sort"],"it's something":["like:","more"],"it's somewhat":["annoying"],"it's still":["fairly","fine.","a"],"it's stuff":["like"],"it's super":["clear."],"it's supposed":["to"],"it's testing":["whether"],"it's that":["much","much"],"it's the":["primary","only","type","best","perfect","only"],"it's true":["that","to"],"it's trying":["to","to"],"it's undefined)":["but"],"it's unordered":["nature,"],"it's used.":["I've"],"it's usually":["good","preferred"],"it's value":["evaluated"],"it's very":["expressive.","hard"],"it's way":["more"],"it's weird":["to"],"it's worth":["to","to","the","the","giving","putting","doing","it","additional","it"],"it's written":["very"],"it's your":["conscious"],"it, I":["think","do","would","did","essentially"],"it, and":["it","I","also","only"],"it, but":["it","you","I","in","I","I","couldn't"],"it, could":["potentially"],"it, especially":["that"],"it, like":["`count-differences`?"],"it, maybe":["in"],"it, no.":["My"],"it, since":["the"],"it, so":["will"],"it, something":["which"],"it, still":["waiting"],"it, thanks":["again."],"it, the":["more","same"],"it, though":["I"],"it, with":["a"],"it, you":["can't"],"it. :)":["I"],"it. Agree":["I"],"it. Also":["`let`"],"it. At":["the"],"it. Do":["you","you"],"it. Good":["job."],"it. Haven't":["I"],"it. I":["like","am","think","still","think"],"it. If":["one"],"it. In":["return"],"it. It":["describes","seemed","didn't"],"it. It's":["certainly","also"],"it. Keep":["in"],"it. Let's":["see"],"it. Many":["things"],"it. Might":["be"],"it. Next":["submission"],"it. Not":["sure"],"it. Of":["course"],"it. One":["tip"],"it. Other":["than"],"it. See":["my"],"it. Since":["this"],"it. Thanks":["for","for",":)"],"it. That":["would"],"it. The":["problem"],"it. There":["isn't"],"it. This":["example","way"],"it. With":["the"],"it. You":["might","did"],"it. You're":["just"],"it. `if":["(valid-nucleotide?)`"],"it. `last`":["is"],"it... yet.":["The"],"it... you":["know"],"it; it":["has"],"it; that'd":["be"],"it? The":["comparison"],"item from":["the"],"item in":["the"],"item. Also":["maps"],"items 1-4":["in"],"iterate on":["this"],"iteration (that's":["not"],"iteration 2":["..."],"iteration I":["decided","changed"],"iteration addresses":["all"],"iteration also":["holds"],"iteration because":["i"],"iteration changing":["that."],"iteration coming":["up."],"iteration fixes":["formatting","the"],"iteration if":["you","you"],"iteration it":["responded"],"iteration more,":["but"],"iteration of":["this"],"iteration took":["made"],"iteration uses":["the"],"iteration where":["I"],"iteration's are":["worlds"],"iteration, but":["became"],"iteration, namely":["extracting"],"iteration, thank":["you."],"iteration, you":["can"],"iteration. Also":["remember"],"iteration. As":["you"],"iteration. I":["like","agree","liked"],"iteration. Moving":["my"],"iteration. Please":["tell"],"iterations and":["eventually"],"iterations on":["this"],"iterations to":["your"],"iterations with":["multiple"],"iterations, `decompose`":["still"],"iterations. Comments":["welcome!"],"iterations. Someone":["actually"],"its \"imperative\"":["feel."],"its ```[]```":["screws"],"its a":["frequency"],"its all":["done!"],"its argument":["to","has"],"its argument,":["so"],"its body":["inline."],"its current":["namespace"],"its currying...":["it"],"its deprecation.":["I"],"its functionality":["with"],"its functions":["using"],"its implementation":["is","is","is"],"its input":["and"],"its intent.":["Using"],"its job":["-"],"its legible":["enough"],"its literally":["the"],"its meaning.":["It's"],"its name":["isn't"],"its name?)":["and"],"its only":["a"],"its output)":["with"],"its own":["line","line","line.","private","line","line.","helpfully","line","method","function,","function.","line.","function,","function"],"its own,":["it"],"its own.":["Similarly"],"its return":["value."],"its similar":["to"],"its transcribed":["RNA"],"its use":["in"],"its way":["into"],"its' Clojure":["wrapper"],"its' own":["line."],"its' processed":["form"],"its' range":["boundaries."],"itself (i.e.":["(="],"itself but":["what"],"itself can":["work","work"],"itself does":["not"],"itself in,":["for"],"itself is":["much"],"itself to":["work"],"itself took":["an"],"itself well":["to"],"itself which":["will"],"itself works,":["but"],"itself) as":["a"],"itself, so":["I"],"itself. However,":["some"],"itself. I":["didn't"],"it’s a":["pretty"],"it’s because":["of"],"it’s native":["=\u003e"],"it’s not":["that"],"it’s recomputation":["every"],"it’s safe":["enough"],"it’s string":["for"],"it’s to":["account"],"it’s very":["nice"],"it’s way":["too"],"it’s “good":["enough”"],"janky, will":["probably"],"jar extras.":["Probably"],"jarring. Line":["11"],"jarring. Lisp":["style"],"java Calendar":["API"],"java String":["interop."],"java `toLowerCase`":["method"],"java array":["and"],"java dates":["is"],"java function.":["You"],"java in":["the","the"],"java interop":["in","is"],"java interop,":["all"],"java interop.":["Lowercase,","Please"],"java method":["here."],"java method,":["I"],"java version":["I"],"java, the":["info"],"java.lang.Exception: Unsupported":["option(s)"],"java.lang.RuntimeException: Unable":["to","to"],"java.util.Calendar to":["do"],"java.util.Calendar which":["allows"],"javascript beer-song":["the"],"javascript track;":["but"],"javascript; I":["must"],"jaw hit":["the"],"jgdavey suggested":["that"],"job -":["but"],"job as":["a","well."],"job done.":["Will"],"job on":["that."],"job to":["explaining"],"job which":["are"],"job, like":["Joda"],"join at":["one"],"join it":["back"],"join the":["verses","sequences"],"joining on":["an"],"joining the":["verses"],"joke) more":["natural"],"js and":["it"],"judgment :-)":["Thanks"],"jump to":["letters."],"jumping off":["the"],"jumps out":["at"],"just '%'.":["But"],"just (re)learned":["that:"],"just `%`":["instead","as"],"just `(last":["text)`."],"just `(ns":["anagram"],"just `(or":["response"],"just `count`.":["You"],"just `defn`":["closed"],"just `join`":["but"],"just `map`,":["`remove`,"],"just a":["string?","four-character","bit","matter","matter","function","thought","matter","name","couple","syntactic","matter","style","string.","regular","shorthand","subset?","matter","map","couple","shortcut","Var","Var","constructor","map,","tutorial","visual"],"just about":["anything","perfect"],"just an":["alias,","idea","alternative,","equality"],"just as":["well.","valid","well","readable).","simple","well","easy"],"just basically":["instill"],"just be":["`(clojure.string/blank?","aware","a","something","`(-","the","called","written","written"],"just because":["I","of","I'm","I","I"],"just bind":["to"],"just blows":["right"],"just by":["being","using","googling"],"just call":["the","`(join","str/blank?"],"just change":["the"],"just cheated":["using"],"just check":["if","that"],"just checking,":["and"],"just cleaned":["itself"],"just clever":["and"],"just combine":["the"],"just come":["up"],"just compare":["the","the"],"just computes":["the"],"just concatenating":["a"],"just constant":["factor"],"just constructing":["the"],"just cut":["my"],"just delighted":["to"],"just depend":["on"],"just depends":["what"],"just describe":["the"],"just did":["a","it"],"just didn't":["bother","get"],"just directly":["bring"],"just distracts":["the"],"just do":["(frequencies"],"just does":["too"],"just doesn't":["feel"],"just don't":["know"],"just due":["to"],"just easier":["to"],"just end":["up"],"just enough":["to","knowledge"],"just experimenting":["with"],"just extract":["`(comp"],"just felt":["wrong."],"just fine":["actually,","without"],"just fine.":["I"],"just forgot":["to"],"just getting":["it","the","into","the"],"just give":["a"],"just given":["you"],"just goes":["to"],"just going":["to"],"just got":["myself","my"],"just had":["`:else`","it"],"just hadn't":["responded"],"just happens":["to"],"just have":["all","the","the"],"just identity":["and"],"just in":["the"],"just include":["the"],"just inline":["those","it.","them.","the"],"just isn't":["one"],"just learned":["a","a","about","that","about","today","enough","enough"],"just learning":["clojure"],"just leave":["that"],"just like":["[I"],"just looking":["for"],"just looks":["so"],"just make":["\"Whatever.\"","a","a","the","those","an","it"],"just making":["the"],"just managed":["to"],"just map":["over","over"],"just mapped":["the"],"just method":["names","names"],"just minor,":["subjective"],"just missing":["one"],"just more":["idiomatic"],"just my":["preference."],"just name":["it","it"],"just not":["in"],"just noticed":["this","that","line"],"just now,":["I"],"just now.":["Please"],"just on":["regex"],"just one":["class","function","argument","question"],"just one.":["Is"],"just pass":["every","it","it","`base`"],"just passes":["through"],"just passing":["this","the"],"just pick":["out"],"just preference,":["you"],"just put":["the","in","the","newlines"],"just ran":["the"],"just read":["the"],"just reads":["better"],"just realised":["I"],"just realized":["that","that"],"just recalled":["that"],"just refer":["exactly","to"],"just remove":["the"],"just replace":["them","`(str","`\\T`","the"],"just return":["nil","the","the"],"just returning":["the"],"just returns":["nil,","the"],"just saw":["the"],"just say":["`(str/blank?","Bob"],"just says":["you"],"just seemed":["neater.","like"],"just settle":["on"],"just simply":["observe"],"just skip":["that?"],"just so":["that","you","all"],"just some":["other"],"just start":["my"],"just started":["with","clojure,","learning"],"just store":["the"],"just strings.":["Introducing"],"just submitted":["a","a"],"just suffixes?":["The"],"just take":["a"],"just takes":["me"],"just taking":["in"],"just test":["that"],"just test)":["the"],"just that":["I","the","case."],"just the":["test","symbols","functions","lowercased","encoding","word","core","same","once).","API?","straight","first","call"],"just to":["make","get","test","do","check","use","manipulate"],"just took":["one"],"just tried":["to"],"just trying":["to"],"just understood":["your"],"just use":["`:else`","`blank?`","a","`clojure.string/replace`.","`(apply","`frequencies`","`%`","`(apply","`if`","`re-seq`","a","one.","the","different","`:exclude`","the","`(def","the","`str`."],"just used":["`blank?`.","a","a","`re-seq`"],"just user":["your"],"just using":["the","logic,","a"],"just value":["by"],"just want":["tests"],"just wanted":["to","to","to"],"just what":["the","you"],"just what's":["needed!"],"just whitespace":["and","in"],"just with":["an"],"just wouldn't":["have"],"just yet":[":)"],"just yourself":["(especially"],"justified case":["for"],"justified in":["my"],"justifies it":["for"],"justify adding":["anything"],"justify the":["break"],"justify this":["kind"],"kata that":["uses"],"keep a":["clear"],"keep an":["eye"],"keep binding":["as"],"keep consistent":["regarding","here?"],"keep dna-to-rna-lut":["and"],"keep each":["helper"],"keep forgetting":["to","frequencies,","that","about"],"keep functions":["local/private"],"keep in":["mind","mind","mind","mind.","mind"],"keep indentation":["consistent"],"keep it":["consistent","simpler"],"keep methods/functions":["small,"],"keep name":["in"],"keep public":["API"],"keep reading":["until"],"keep submitting":["instead"],"keep that":["the","in"],"keep the":["conditions","helpers","context","public","\"constants\"","results","level","style"],"keep things":["even","a"],"keep this":["one"],"keep track":["of"],"keep trying":["new"],"keep what":["needs"],"keep wondering":["how"],"keep working":["without"],"keep your":["code"],"keeping a":["simple"],"keeping everything":["in"],"keeping it":["in"],"keeping it,":["maybe"],"keeping state,":["and"],"keeping the":["clarity?","response-for","code","match"],"keeps me":["from"],"keeps the":["benefit","knowledge"],"kept calling":["`load-file`"],"kept my":["`nucleotides`"],"kept trying":["to"],"key bits":["of"],"key is":["a","found,","not","not"],"key value)":["is"],"key you":["are"],"key. (Hint:":["try"],"keyed by":["chars,"],"keys (repeat":["default)))"],"keys of":["the","the"],"keystrokes. One":["has"],"keystrokes. You":["write"],"keyword -":["`:require`"],"keyword `:else`":["for"],"keyword `:else`,":["since"],"keyword `:require`":["is"],"keyword does,":["string/character"],"keyword duplication":["is"],"keyword for":["your"],"keyword form":["is","of"],"keyword to":["namespace"],"keyword usage":["though."],"keyword) but":["it's"],"keyword)` which":["made"],"keyword. The":["standard"],"keywords \"dna\",":["\"rna\","],"keywords are":["duplicated"],"keywords clarifies":["the"],"keywords make":["it"],"keywords tend":["to"],"keywords that":["have"],"kicks, but":["it"],"kill for":["this"],"kind feedback":["allowed"],"kind of":["statement?","transformation","parallelism","situation.","feedback","problem","nitpicking,","confusing,","sort","message","convenient","want","delimiters,","awkward","awkward","message","use","thing","collection","an","problems","shortcuts,","happy","leaning","gross.","see","lost","idiomatic","awkward.","like","awkward","odd","heavy.","stands","double"],"kind reviewing":["my"],"kind words,":["tried"],"kinda fizzled":["out"],"kinda like":["it"],"knew I":["was"],"knew it":["was"],"knew something":["like"],"knew that":[":)",":refer"],"knew the":["general"],"knew you":["could"],"know :)":["It"],"know I":["_love_","was","could","can"],"know Java?":["I"],"know `-&gt;`.":["I"],"know about":["re-seq","that","`clojure.string/upper-case`","thymidine","the","`frequencies`","frequencies,","the","re-seq","clojure.string/blank?,","it!","the","the","`cond`.","the","Java's","it.","`declare`,","`\\p{L}`,","[`re-seq`](http://clojuredocs.org/clojure_core/clojure.core/re-seq).","frequencies.","`defn-`.","```defn```,","that","frequencies","the","the","that,"],"know already":["(nlogn"],"know anything":["about"],"know at":["present."],"know clojure":["good"],"know enough":["to"],"know for":["future"],"know how":["I","for"],"know if":["there","mine","I've","I","grammar","there's","it's","you","using","there","you'd","that"],"know is":["the"],"know it":["is","was"],"know it's":["only","a"],"know it.":[":)"],"know much":["about"],"know nothing":["about"],"know of":["a","something","a","a"],"know quite":["a"],"know that":["function!","the","sort","you","organization","method","you","`\\W`","require","`set`s"],"know that.":["Thanks!"],"know the":["answer","sequences"],"know there":["are","were"],"know this":["code"],"know what":["the","I'm","function","`\\T`","you","\"some\"","is","to","is","it","`x`","the","else"],"know what's":["going"],"know which":["is","one"],"know why":["those","I","I"],"know you":["can"],"know you'll":["run"],"know you're":["on","right"],"know! Annoying,":["isn't"],"know). `valid-nucleotide?`":["is"],"know, commas":["are"],"know, the":["format"],"know, what":["I"],"know. Do":["you"],"know. Thank":["you!"],"knowing how":["to"],"knowing the":["core"],"knowing what":["functionality"],"knowledge I":["learned"],"knowledge of":["the","1986","the","the","idiomatic","Emacs-Lisp","Clojure"],"knowledge to":["be"],"knowledge. Also":["note"],"known in":["the","the"],"known to":["be"],"knows how":["to"],"knows what":["responses"],"knows where":["specific"],"koans before":["I"],"koans so":["the"],"koved public":["api"],"la lb))":["(="],"labelled number":["parts."],"lack of":["Lisp","sugar","Clojure"],"lacking in":["description."],"lacks this":["particular"],"lacksidaisically stepped":["into"],"laid out":["like"],"laid out,":["there's"],"lamba and":["just"],"lambda and":["args"],"lambda function":["or"],"lambda with":["named"],"lambdas and":["let"],"langs) because":["falling"],"language I've":["been"],"language agnostic":["remark,"],"language anagrams":["are"],"language as":["well","well"],"language barrier":["there."],"language but":["it's"],"language called":["clojure"],"language does":["not"],"language exactly":["what"],"language exactly.":["More"],"language from":["the","the","the"],"language goes":["through"],"language had":["`frequencies`"],"language head-first":["through"],"language implementation":["of"],"language itself,":["so"],"language of":["the","the"],"language responses":["as"],"language style,":["that's"],"language that":["works"],"language the":["same"],"language track":["for"],"language tracks,":["so"],"language we":["would"],"language where":["everything"],"language, I":["figured"],"language, but":["I"],"language, so":["I"],"language, that's":["really"],"language, we":["tend"],"language. Bob":["was"],"language. It":["would"],"language. Observe":["that"],"language. This":["solution"],"language?, which":["make"],"languages -":["you"],"languages I":["don't"],"languages on":["here,"],"languages the":["first"],"languages where":["currying","you"],"languages with":["implicit"],"languages) 2.":["I"],"languages, for":["example"],"languages, is":["clojure"],"languages, putting":["the"],"languages, spent":["time"],"languages. Since":["\"invalid\""],"languages. So":["you"],"languages. Thank":["you."],"large DNAs,":["but"],"large Strings":["(e.g."],"large input.":["At"],"large number":["of"],"large problem":["so"],"large strings":["(assuming"],"larger codebase.":["I"],"larger refactoring":["of"],"last /non-whitespace/":["character"],"last 4":["digits"],"last 7":["days"],"last and":["removing","then"],"last argument":["to","to"],"last argument.":["The"],"last binding":["expression."],"last chacacter":["of"],"last character":["instead","of","of","of","of","of","of","of","from","-"],"last character.":["From"],"last character:":["`(="],"last comment":[","],"last day":["of"],"last element":["like","of","of"],"last element.":["That"],"last expression":["evaluated"],"last form":["in"],"last function":["line,"],"last instead":["of"],"last line":["with","of","of","of","of","with","of","with","with"],"last line.":["I'm"],"last macro":["`-\u003e\u003e`","which"],"last night":["-"],"last night.":["Should"],"last nitpick":["regarding"],"last one)":["without"],"last parenthesis":["inline,","is"],"last point":[":"],"last position":["are"],"last resort":["in"],"last submission.":["I"],"last suggestion":["-"],"last suggestion.":["I"],"last ten":["from"],"last thing:":["Try"],"last time":["I","I"],"last two":["outcomes.","test"],"last value":["passed"],"last version,":["although","I"],"last week,":["been"],"last whereas":[".endsWith"],"last\" macro":["which"],"last). It":["also"],"last. No":["need"],"last. This":["seemed"],"last. When":["I"],"late evening":["hangout"],"late. Please":["check"],"lately but":["do"],"lately studying":["algorithms"],"later -":["would","would"],"later `anagram?`":["test."],"later exercise,":["just"],"later if":["it"],"later on":[":)","today."],"later on,":["but"],"later, and":["`string/replace`"],"later. Any":["way"],"later. The":["code"],"latest bob,":["then"],"latest character":["of"],"latest iteration's":["are"],"latest submission":["first,","and"],"latest suggestion":["until"],"latter -":["about"],"latter comes":["from"],"latter form":["allows"],"latter returns":["the"],"latter seemed":["cleaner;"],"latter, too.":["I"],"law but":["not"],"layer of":["indirection.","indirection.","abstraction"],"layout and":["spacing"],"laziness would":["help"],"lazy `seq`,":["it's"],"lazy as":["Haskell"],"lazy collections":["in"],"lazy evaluation":["work"],"lazy initialization":["was"],"lazy or":["side-effect"],"lazy sequence":["instead","into"],"lazy sequence.":["See"],"lazy sequences":[":)"],"lazy which":["is"],"lazy you":["could"],"lazy, will":["have"],"lazy-sequence so":["all"],"lb)) (=":["sa"],"lead me":["to"],"lead to":["very","more"],"lead us":["to"],"leading the":["blind."],"leading to":["incorrect"],"leads me":["to"],"leads to":["polluting","invalid","something","a"],"lean more":["on"],"lean on":["the"],"leaning toward":["using"],"leaning towards":["duplication"],"leap-year? --":["it'd"],"learn Clojure":["and"],"learn Clojure.":[":)"],"learn about":["the","Unicode","`transient`"],"learn and":["your"],"learn from":["you."],"learn how":["you","to"],"learn if":["someone"],"learn is:":["Read"],"learn it":["for"],"learn more":["about","about"],"learn something":["through"],"learned a":["lot","crazy"],"learned about":["it.","`empty?`,","\u003ccode\u003edefn-\u003c/code\u003e","the","sort,"],"learned enough":["to","to"],"learned it":["reading"],"learned sort-by":["before"],"learned that":["`(key","they're"],"learned today":["that"],"learned which":["makes"],"learned while":["doing"],"learned with":["your"],"learning Clojure":["so","too.","by"],"learning Clojure.":["There's"],"learning Scala":["as"],"learning about":["the"],"learning clojure":["so"],"learning clojure,":["so","but","but"],"learning exercise,":["but"],"learning experience.":["Your","Thank"],"learning it":["in"],"learning possibility":["might"],"learning resource":["I"],"learning tons":["of"],"learnt a":["few"],"least I":["don't"],"least `#()`":["anonymous"],"least a":["sequence"],"least about":["giving"],"least as":["I"],"least based":["on"],"least define":["them"],"least explicit":["going"],"least favorite":["assignment."],"least favourite":["exercise."],"least for":["a"],"least give":["some"],"least in":["that"],"least less":["noisy)"],"least not":["through","without"],"least one":["capital","blank","line-break","uppercase","upper-case","*real*"],"least original":[":)"],"least per":["tests"],"least so":["I"],"least surprise.":["I"],"least tell":["me,"],"least the":["keywords"],"least there's":["that!"],"least this":["code"],"least to":["me."],"least what":["I"],"least you":["know"],"least! I'm":["kind"],"leave a":["single","zero"],"leave closing":["brackets/parentheses","parentheses","parentheses","parentheses"],"leave commas":["(since"],"leave it":["to","out","at","for","under"],"leave it,":["but"],"leave my":["previous"],"leave off":["the"],"leave opening/closing":["parentheses/brackets"],"leave out":["the"],"leave parens":["on"],"leave that":["as","one"],"leave the":["question","body","number","most"],"leave them":["out"],"leaves `words`":["a"],"leaves open":["the"],"leaves something":["to"],"leaves the":["\"parse\""],"leaving 'Looks":["great!'"],"leaving function":["body"],"leaving it":["out.","out","as"],"leaving out":["the"],"leaving the":["-\u003e\u003e"],"leaving valid-nucleotides":["public"],"led me":["to"],"led to":["much","the"],"led you":["to"],"left `,,,`":["in"],"left `question?`":["as"],"left is":["better","not"],"left it":["in"],"left over":["as"],"left to":["inference","right,","right"],"left with,":["is"],"left/right/advance functions":["is"],"legal as":["well)"],"legal, it's":["idiomatic"],"legibility a":["bit,"],"legibility here.":["You"],"legibility in":["`challenge`?"],"legible enough":["the"],"lein exec":["bob_test.clj"],"lein projects":["would"],"lends itself":["well"],"length are":["both"],"length as":["yours,"],"length if":["it's"],"length of":["shortest","string,","the","the","the","a","input","the","dna"],"length output.":["The"],"length twice":["in"],"length twice?":["trim-leading-1"],"length), so":["which"],"length. But":["hey,"],"lengths are":["different,"],"lengths). Since":["you"],"less chance":["of"],"less clear":["than","in"],"less cluttered":["and","and"],"less code":["(because,","(because,","(because,","maintenance.","is"],"less complicated/expensive":["way"],"less concise":["but"],"less coupled":["to"],"less direct":["to"],"less efficient":["-","than","than"],"less efficient.":["Not"],"less expressive":["if","of","than","as"],"less human":["readable."],"less inefficient...":["starting"],"less lines":["but"],"less magic.":["Maybe"],"less nesting.":["Have"],"less on":["regular"],"less parens":["than"],"less performant":["for"],"less pure":["clojure"],"less sense":["to"],"less than":["one","two","3","3"],"less verbose":["and"],"less was":["in"],"lest happy":["with"],"let @frankie":["in"],"let `response-for`":["return"],"let alone":["idiomatic","an"],"let and":["the","see"],"let assignments":["-"],"let binding":["for","so"],"let bindings)":["with"],"let block)":["so"],"let but":["I"],"let for":["the"],"let form":["for","is","in","out"],"let forms":["and"],"let inside":["`word-count`."],"let is":["kind"],"let makes":["the"],"let me":["know","know","know"],"let on":["line"],"let one":["use"],"let should":["be"],"let statement":["to"],"let the":["Calendar"],"let to":["name","store"],"let up.":["Soon"],"let value":["on"],"let values":["have"],"let variable":["`words`"],"let you":["guess","avoid","move","tighten"],"let's just":["say"],"let's try":["that..."],"let, you":["could"],"let. Then":["you"],"let. e.g.":["`let"],"let/letfn forms":["is"],"letfn or":["externally)."],"letfn rather":["than"],"letfn to":["make"],"lets and":["a"],"lets containing":["the"],"lets see":["what"],"letter (`\"4?\"`":["is"],"letter (`%`)":["to"],"letter frequencies.":["Undoubtedly"],"letter is":["uppercase","already"],"letter of":["the","the"],"letter puts":["us"],"letter regex,":["because"],"letter that":["the"],"letter to":["be"],"letter\". While":["in"],"letter)` with":["`letter`"],"letter* and":["*is"],"letter. However":["I"],"letters and":["also","digits."],"letters are":["in","upper-case."],"letters becomes":["decidedly"],"letters but":["different"],"letters by":["the"],"letters feels":["like"],"letters in":["a","alphabetical","the","the"],"letters like":["`(shouty?"],"letters long.":["So"],"letters sorted":["alphabetically"],"letters to":["something"],"letters without":["using"],"letters would":["be"],"letters\". I":["often"],"letters). So":["IMO"],"letters, and":["if"],"letters, so":["you"],"letters, which":["might"],"letters-in-prompt))` because":["I"],"letters-in-prompt)` for":["`(not"],"letters. I":["thought"],"letters. It":["looks"],"letters. Much":["clearer"],"letters. This":["would"],"letting a":["question"],"letting descriptively":["named"],"letting me":["know.","know."],"letting the":["ordering"],"letting their":["order"],"level (first":["one"],"level (for":["declaring"],"level [])`":["should"],"level and":["got"],"level constant":["valid-nucleotides","for"],"level definitions":["for"],"level first.":["So"],"level function":["definitions","definitions","that"],"level functional":["construct."],"level functionality":["such"],"level of":["indirection","abstraction","abstraction","abstraction","abstraction.","abstraction","indentation","abstraction","abstraction","the","abstraction","abstraction","abstraction","abstraction","readability","accuracy","abstraction?"],"level public":["functions"],"level turn-left/turn-right/move":["functions)."],"level while":["reducing"],"level without":["exporting"],"level, defining":["the"],"levels -":["like"],"levels can":["be"],"levels of":["abstraction.","abstraction","abstraction"],"leverage that":["by"],"leverage the":["fact"],"leveraging `frequencies`,":["can"],"lexical binding":["which","which"],"lexical bindings":["with"],"lexical let":["bindings)"],"lexical one.":["You"],"lexical scope":["to","to"],"lexical scope.":["That"],"lexical scoping":["and"],"lexical sort":["on"],"liberal in":["what","what"],"liberal use":["of"],"libraries as":["part"],"libraries in":["my","the"],"libraries. It":["should"],"library `core.match`?":["Because"],"library and":["not"],"library clojure.string":["has"],"library for":["checking"],"library function":["like"],"library functions":["I"],"library has":["a"],"library imports":["into"],"library into":["my"],"library is":["essential","available"],"library to":["analyze"],"library version":["uses"],"library), we":["don't"],"life a":["lot"],"life easier.":[":)",";)"],"life string":["pattern"],"life than":["completing"],"lifted the":["use"],"lifting it":["up"],"lifting the":["lower-casing"],"lightweight database":["in"],"lik `(comp":["vec"],"like \"BOB":["YOU"],"like \"Have":["a"],"like \"I...\"":["would"],"like \"It's":["raining"],"like \"Lets":["play"],"like \"drop":["0"],"like \"good":["duplication\""],"like \"normal\"":["Clojure,","Clojure,"],"like \"shouting\",":["but"],"like \"yelling\"":["and"],"like (count":["(map"],"like \u003ccode\u003esilence?\u003c/code\u003e":[","],"like Clojure....\"":["-"],"like Haskell's":["`where`"],"like I":["forgot","did","was","could","cheated","was"],"like I'm":["doing","your","missing","barking"],"like I've":["done"],"like Joda":["Time"],"like Mr.":["Rogers?\","],"like Python":["rather"],"like Refs":["do."],"like [I":["did](http://exercism.io/myfreeweb/clojure/bob)"],"like [Marginalia](http://gdeer81.github.io/marginalia/)":["to"],"like [Moby":["Dick](http://www.gutenberg.org/cache/epub/2701/pg2701.txt)"],"like \\A":["\\Z"],"like `":["(="],"like `#\"\\W\"`":["in"],"like `#({\\T":["\\U}"],"like `(#{1":["2"],"like `(.upper-case":["msg)`?"],"like `(:a":["{:a"],"like `(=":["\\?","test-char"],"like `(and":["contains-ucase-chars"],"like `(clojure.string/split":["\"AEIOULNRST\""],"like `(def":["*dna-to-rna*","silence?"],"like `(every?":["#{\\T"],"like `(first":["(filter"],"like `(fn":["[[re","[c]"],"like `(int":["\\A)`."],"like `(last":["\"plop?\")"],"like `(map":["vector"],"like `(not":["(empty?"],"like `(ns":["bob"],"like `(shouty?":["\"42\")`","\"42\")`.","\"42\")`"],"like `(str":["(capitalize","n-bottles"],"like `({:a":["1"],"like `:else`":["is"],"like `:name`":["instead."],"like `:pre":["and"],"like `:required":["[clojure.string"],"like `:unknown`":["or"],"like `Character/isUpperCase`,":["`Character/isLetter`"],"like `[{:matcher":["silence?"],"like `\\?`":["rather"],"like `\\T`":["and"],"like `\\a`.":["So"],"like ```#()```":["in"],"like ```(every?":["#(or"],"like ```(to-rna":["\"I'm"],"like ```frequencies```":["and"],"like `alphagram-from-lower-case`":["to"],"like `anagram-checker-for`":["or"],"like `angry?`,":["`question?`,"],"like `asking-politely?`)":["That"],"like `beer`":["and"],"like `blank?`":["-&gt;"],"like `clojure.string/replace`?":["The"],"like `clojure.string/upper-case`,":["but"],"like `cloud9`":["or"],"like `cond`":["might"],"like `contains-char?`,":["but"],"like `count-with`":["in"],"like `count`,":["`last`","`filter`,"],"like `defrecord`":["is"],"like `every?`":["and"],"like `foo?`":["is"],"like `for":["[key"],"like `frequencies`?":["Interesting!"],"like `is-anagram?`":["instead"],"like `is-anagram`":["with"],"like `lc`.":["In"],"like `let`":["bindings"],"like `letfn`,":["`let`"],"like `n-bottles`.":["Then"],"like `phrase`,":["so"],"like `pos`,":["`pim`"],"like `question?`":[":)"],"like `question?`,":["`silence?`"],"like `re-find`":["and"],"like `s`":["or"],"like `silence?`,":["`shouting?`"],"like `split`":["harder"],"like `str`":["vs"],"like `string-&gt;words`":["would"],"like `string/blank?`,":["and"],"like `trim-stuff`,":["but"],"like `word-frequencies`?":["`word-occurrences`?"],"like `word`":["and"],"like `yelling?`":["and"],"like `yelling?`,":["`asking?`,"],"like `zero?`,":["`not=`."],"like `{:area":["code"],"like a":["helper","pretty","string","lot","good","hash","good","rogue","rogue","raw","pipeline,","maybe","[DFA](http://en.wikipedia.org/wiki/Deterministic_finite_automaton)","distinct","square","bug","pipeline","reasonable","good","pair","good","textbook"],"like about":["this"],"like adding":["newlines"],"like all":["you're"],"like an":["obvious","good"],"like any":["sentence"],"like anything":["changed"],"like as":["a"],"like below,":["but"],"like both":["functions"],"like cheating":["with","to"],"like clojure":["itself","contrib"],"like comments.":["I"],"like converting":["to"],"like domain":["language"],"like empty?,":["nil?,"],"like even":["official"],"like feedback":["as","as"],"like functions":["does"],"like functions,":["instead"],"like having":["the","them"],"like here":["in","is"],"like how":["you're","you","concise","the","concise","you've","simple","the","readable","repetitive","clear","you","closures","you","it"],"like i":["should"],"like idiomatic":["Clojure."],"like in":["`word-count`.","short","cassical","case"],"like is":["having"],"like it":["better","like","should","was","more.","where","where","fits","might"],"like it!":[":)","Nice","One"],"like it's":["a"],"like it.":["You","It","Do","Let's","One"],"like language":["from"],"like lining":["up."],"like map":["of"],"like message":["of"],"like most":["Clojurists"],"like multimethods,":["dispatching"],"like my":["predicate","method"],"like myself.":["I"],"like not":["putting"],"like nucleotide-counts":["could"],"like off-by-one":["errors."],"like one":["is"],"like overkill":["for"],"like pattern":["matched"],"like practicing":["regex)."],"like put":["the"],"like quite":["a"],"like replacing":["every"],"like resorting":["to"],"like separate":["concerns"],"like solving":["a"],"like sort,":["its","its","its"],"like string":["replacement"],"like string/ends-with":["for"],"like syntactic":["sugar"],"like that":["idea.","could","this","the","was","better","on","a","you","very","in","using","you","the","which","you","you","if","you've","would","you","you","better","the","you","means","you","are","be","every"],"like that!":[";)"],"like that,":["but","having","and"],"like that.":["We've","Thanks!","Similarly"],"like the":["function","intention-revealing","`anagram-match?`","use","`(into","responses","way","most","most","idea","declarative","use","use","`cond`","names","other","`is-`","way","use","idea","`condp`!","special","use","`intro/outro`","use","Elixir","`seq`","re-find","`plural`","consumer","solutions","new","complexity","default","use","repetition","use","shortness","separation","approach.","way","use","kind","`type-responses`","underlying","idea","good","`response-for`","way","code.","decoupling","appropriate","clean","idea.","pre","long,","simplicity","third","convention","use","names","use","precondition","definition","deep","use","solutions","brute-force","usage","usage","name","use","building","`letfn`","use","requirements","use","overall","multiple","name","ability","way","`endsWith`","name","fact","expressiveness","predicate"],"like them":["both,"],"like there":["must","must"],"like they":["would"],"like this":["as","approach!","one","to","one.","approach","version","better","if",":(","in","is",":)","approach","(modulo","can","at",":)","`(partial","triangle","at","finds"],"like this).":["Good"],"like this,":["with"],"like this.":["The","And"],"like this:":["`#(#{"],"like this?":["How"],"like to":["name","do","encourage","figure","hear","reserve","shorten","find","know","be","get","clean","move","point","have","clean"],"like tying":["yourself"],"like uppercase":["more"],"like using":["`declare`"],"like version":["4"],"like we're":["good"],"like what":["you","you've"],"like where":["you're","it's"],"like whether":["it"],"like words":["could"],"like writing":["code"],"like you":["submitted","may","have","do","do","lost","repeat","did.","suggested,","have"],"like you're":["checking","addressing"],"like you've":["done"],"like your":["use","way","use","introduction","`on`","solution!","first","use","definition","```re-matches```","use","`all`","`:else`","use","attempt"],"like, none":["of"],"like. Could":["it"],"like. The":["cond"],"like. `response-for`":["is"],"like...this random":["thing"],"like: `extract-numbers":["-\u003e"],"like: glue":["parts"],"liked one":["submitter's"],"liked the":["simplicity","shape"],"liked until":["just"],"likely O(n":["log"],"likely more":["performant"],"likely to":["be","be"],"likewise they":["don't"],"limit the":["possible","scope","visibility","whole","regex"],"limit there).":["Your"],"limit. I":["try"],"limited context":["of"],"limited to":["the"],"limited what":["was"],"limited. The":["requirements"],"limiting. If":["you"],"limits the":["range"],"line #2":["vs."],"line (after":["the"],"line -":["so","tuck"],"line 10":["as"],"line 10.":["In"],"line 11":["-","-"],"line 12":["wasn't"],"line 13":["into","-"],"line 14":["should","-"],"line 14,":["you","the"],"line 15":["-","has"],"line 17":["to","to"],"line 18.":[":-)",":-)"],"line 19":["is","-"],"line 19.":["Otherwise,"],"line 2":["should","-","-"],"line 24.":["In"],"line 3":["-"],"line 39,":["if"],"line 4":["is"],"line 5":["-","&"],"line 6":["-","-"],"line 7":["as","-","-"],"line 7,":["which"],"line 8":["should","-"],"line 8:":["I"],"line 9":["a","to","-"],"line 9!":["It"],"line 9.":["You"],"line ```(=":["\"1\""],"line a":["requirement"],"line after":["each"],"line and":["preserve","using","the"],"line as":["defn","the","the","opening","the","the","the","the","`let`.","the"],"line at":["the"],"line before":["the"],"line between":["defs","functions","top-level"],"line break":["before"],"line breaking":["even"],"line breaks":["more"],"line by":["just","itself"],"line for":["some"],"line helps":["me"],"line history":["done"],"line in":["the","the"],"line is":["important.","generally","cleaner"],"line length":["are"],"line mistake":["(Syntax"],"line numbers":["they"],"line of":["code,","the","code","whitespace","real","the","form/expression.","logic","whatever"],"line or":["on"],"line per":["possible"],"line referred":["to."],"line seems":["to"],"line should":["be","be"],"line to":["enhance","show"],"line up":["all"],"line which":["is"],"line will":["have"],"line with":["code.","`letfn`","first","the","first","`(into","actual","an","the"],"line) uses":["`merge`,"],"line). By":["swapping"],"line). You":["can"],"line, also":["using"],"line, not":["afterwards."],"line, or":["the"],"line, so":["I'd"],"line, where":["does"],"line-break would":["help."],"line-oriented like":["Python's."],"line. Although":["using"],"line. Hyphen":["instead"],"line. I":["messed"],"line. I'm":["new","going"],"line. If":["that's","you"],"line. In":["case"],"line. Indentation":["doesn't"],"line. Maybe":["put"],"line. You":["can"],"line: am":["I"],"line; you":["could"],"line? can":["i"],"linear array.":["And"],"linear time":["as"],"lined up":["like"],"liner mentioning":["what"],"lines -":["it's"],"lines 1-4":["to"],"lines 10":["&"],"lines 12-14":["at"],"lines 45":["and"],"lines 6":["and"],"lines 7":["and"],"lines aligned":["to"],"lines and":["verses","verses?","verses"],"lines being":["more"],"lines between":["them."],"lines but":["more"],"lines can":["be"],"lines if":["there"],"lines in":["the","order","my"],"lines like":["`(clojure.string/split"],"lines more":["space"],"lines of":["code","code,"],"lines up":["with"],"lines with":["just"],"lines would":["increase","help"],"lines, but":["much","they're"],"lines, it's":["common"],"lines, what":["it"],"lines. Although":["I"],"lines. Of":["course,"],"lines. These":["should"],"lines. You":["could"],"lines? Do":["you"],"link I":["can"],"link is":["there"],"link new":["submissions."],"link to":["the","an","the"],"links for":["more"],"links to":["tutorials"],"links? I":["am"],"lisp -":["i"],"lisp for":["predicates."],"lisp in":["general)"],"lisp it's":["weird"],"lisp usage,":["though."],"lisp we":["mostly"],"lisp-case, the":["underscores"],"lisp-y way":["of"],"lisper, \"cond\"":["is"],"lisps I":["encountered"],"lisps and":["java","java"],"lisps that":["I'm"],"lisps), but":["I"],"lisps. And,":["well,"],"lispy idiom":["would"],"list (square":["brackets)"],"list -":["I've"],"list back":["into"],"list before":["the"],"list belong":["to","to"],"list comprehension":["--","to"],"list comprehensions":["in"],"list comprehensions;":["not"],"list in":["my","that","it's"],"list into":["the"],"list must":["extend"],"list of":["the","characters","chars","booleans,","45","anonymous","pairs","words"],"list on":["google","the","the"],"list origin":["comparison)`](http://clojuredocs.org/clojure_core/clojure.core/map)"],"list requires":["a"],"list the":["arguments."],"list through":["predicate"],"list to":["string."],"list zipper":["is"],"list, and":["then"],"list, to":["avoid"],"list-based metaprogramming":["(perhaps"],"list-y I":["could"],"list. Can":["you"],"list. Not":["sure"],"list. There's":["still"],"listed first.":["Later,"],"lists -":["that"],"lists `[msg]`":["up"],"lists and":["vectors","return"],"lists as":["well,","well."],"lists but":["tests"],"lists of":["characters;","names,"],"lists which":["are"],"lists, and":["Clojure"],"lists, which":["have"],"literal (if":["x"],"literal -":["it's","but"],"literal /":["hash"],"literal directly,":["you"],"literal for":["set.","T"],"literal into":["RNA"],"literal nested":["in"],"literal on":["a"],"literal set":["instead"],"literal syntax":["to","throwing","will"],"literal syntax?":["IMO,"],"literal to":["the"],"literal with":["every"],"literal\" is":["an"],"literal, as":["all"],"literal, you":["can"],"literal. Anyway,":["that"],"literal](http://clojure.org/reader#The Reader--Macro":["characters)."],"literally *one*":["function"],"literally in":["the","the"],"literally the":["first","first"],"literally true,":["might"],"literals (these":["can"],"literals I":["don't"],"literals and":["transforms","forms","the"],"literals are":["written"],"literals begin":["with"],"literals can":["be"],"literals could":["be"],"literals have":["better"],"literals instead":["of"],"literals into":["a","a","a"],"literals not":["allowed"],"literals provides":["a"],"literals rather":["than"],"literals really":["made"],"literals with":["well"],"literals would":["be"],"literals, like":["\\A"],"literals, there":["will"],"literals. \"%1\"":["isn't"],"literals. Also,":["it"],"literals. For":["example"],"literals. It":["would","would"],"literals. You":["can"],"litterate. This":["time,"],"little DRYer.":["It"],"little additional":["value."],"little as":["possible."],"little awkward":["to"],"little bit":["asymetric","on","less","about","faster","of","more","of","more","harder","more"],"little boys":["respond"],"little by":["using"],"little cleaner":["than"],"little cleaner?":["It's"],"little clearer":["over","if"],"little clumsy,":["but"],"little confused":["after"],"little convoluted":["to"],"little duplication":["between"],"little funny.":["Couldn't"],"little harder":["to"],"little heavy-handed.":["Are"],"little idiom":["made"],"little janky,":["will"],"little knowledge":["of"],"little less":["on"],"little more":["persistence","common","straightforward.","insight,","efficient.","clear.","efficient","verbose,","clear"],"little nicer":["to","for"],"little nit":["which"],"little nonsensical,":["but"],"little of":["clojure's"],"little overkill":["when"],"little perplexed":["on"],"little pick,":["though:"],"little pieces,":["where"],"little point":["in"],"little recursion":["happy,"],"little shorter":["to","by"],"little simpler":["(one","than"],"little slow,":["sorry!)"],"little smaller.":["Also,"],"little syntax":["sugar."],"little thing":["to"],"little too":["eager.","much"],"little unclear":["why"],"little unclear,":["something"],"little undecided":["on"],"little while":["this"],"little while,":["while"],"little work.":["The"],"little. (It":["would"],"live with":["the"],"lives here":["for"],"load the":["entire","entire"],"loaded as":["it"],"loading in":["two"],"loading required":["code"],"local alias":["explicitly"],"local bindings,":["use"],"local function":["with"],"local mutation":["inside"],"local names":["that"],"local version":["(using"],"local/private and":["not"],"localized runtime":["error."],"locally :)":["Will"],"locally for":["`exercism"],"locks! Way":["more"],"log n))":["for","for","for"],"log n).":["Also,"],"log n)`,":["whereas"],"log(n)) but":["there"],"logic a":["bit"],"logic and":["make"],"logic behind":["`shout?`"],"logic checks":["into","into","be","into","into","into","into","into"],"logic could":["be"],"logic for":["testing"],"logic from":["the"],"logic in":["functions.","the","the","auxiliary"],"logic into":["private","private","private","edible","a"],"logic is":["complected","complex"],"logic multiple":["times."],"logic of":["the","cond","the","the"],"logic on":["lines"],"logic or":["anything,","anything,"],"logic out":["of","of"],"logic separate":["from"],"logic to":["private","functions","response-for.","convert","a"],"logic with":["very"],"logic without":["comments."],"logic, and":["it"],"logic, if":["that"],"logic. @stuart":["and"],"logic/algorithm. I'm":["surprised"],"logic? Using":["intention-revealing"],"logical evaluation":["where"],"logical false.":["Anyway,"],"logically belong":["there."],"long `(and":["...)`"],"long `(clojure.string/\u003cmethod\u003e`":["that"],"long and":["it's"],"long as":["it's","the"],"long for":["one"],"long list.":["Can"],"long made-up":["words,"],"long one,":["generating"],"long strand":["like"],"long string":[":)"],"long strings":["across"],"long time,":["but"],"long to":["fit"],"long way":["around,"],"long, branching":["if/else"],"long, but":["it"],"long-time lisper,":["\"cond\""],"long. So":["the"],"long. With":["nice"],"long? I'm":["also"],"longer (the":["body"],"longer file":["(but"],"longer for":["minimal"],"longer pipelines":["of"],"longer than":["more","doing","the"],"longer yet":["without"],"longer) will":["tell"],"longer, doesn't":["violate"],"longest one":["to"],"longest side":["to"],"longest word":["in"],"look \"funny\"":["with"],"look *\"unfinished\"*":["if"],"look I":["concluded"],"look `format`":["for"],"look a":["lot","bit","bit","bit","little"],"look and":["how","feel"],"look at":["using","clojure.typed.","it","http://clojuredocs.org/clojure_core/clojure.core/defn","renaming","iteration","`frequencies`","`re-seq`","it.","`require`?","`let`","`frequencies`","`-››`","the","the","the","`frequencies`,","[-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E)","it.","the","example","https://github.com/vim-scripts/VimClojure","the","if","the","`frequencies`.","my","`frequencies`","this","using","the","[clojure.string](http://clojure.github.io/clojure/clojure.string-api.html)","some","some","`clojure.string/blank?`","`frequencies`.","```blank?```","`core.frequencies`","`not=`","http://ryanverner.com/post/49884705761/clojure-require-vs-use","[clojure.string/replace](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/replace)","`clj-time`","`cond`,","`clojure.string/blank?`","the","[`every?`](http://clojuredocs.org/clojure_core/clojure.core/every_q)","[`assert`](http://clojuredocs.org/clojure_core/clojure.core/assert)","\u003ccode\u003econd\u003c/code\u003e","the","the","replacing","the","`re-seq`","`frequencies`.","the","clojure.string/blank?","the","creating","using","the","[`case`](http://clojuredocs.org/clojure_core/clojure.core/case).","`GregorianCalendar`,","sets","the","doing","the","http://www.amazon.com/Implementation-Patterns-Kent-Beck/dp/0321413091"],"look at.":["In"],"look at;":["I"],"look better":["if","when","overall"],"look cleaner":["to"],"look entirely":["right"],"look fine":[":)"],"look for":["\"format\"!","a"],"look for.":["I'm"],"look forward":["to","to"],"look further":["into"],"look good":["at"],"look great,":["except"],"look interesting.":["However,"],"look into":["splitting","using","those!","that.","that.","the","this","`memoize`","that,","it.","the","some","the","the","`eval`","the","partial","the","the","the"],"look like":["you're","this","this:","this","off-by-one","this:","this:","this:","a","this:","this"],"look more":["like"],"look nicer":["as","using"],"look prettier":["than"],"look slightly":["over-engineered","more"],"look so":["bad"],"look that":["up,","bad,"],"look to":["you?","validate"],"look up":["the","the"],"look up.":["Definitely"],"look very":["nice?"],"look! Will":["think"],"look, I":["would"],"look. I":["feel"],"looked a":["little"],"looked again.":["Thanks."],"looked at":["```clojure.core/frequencies```?","Clojure,","the","the","making","the"],"looked for":["those—these"],"looked into":["```clojure.core/frequencies```?","```clojure.core/frequencies```?"],"looked like":["I"],"looked messy.":["Then"],"looked really":["undesirable"],"looked them":["up"],"looked through":["the"],"looking and":["criticizing"],"looking at":["it.","it.","your","it","how","others'","my","yours.","the","as","other","it","it","the"],"looking at?":["Thanks!"],"looking compact":["as"],"looking for":["functions","is","`declare`.","a","the","any","some","the","a","blanks.)","the","the"],"looking for.":["A"],"looking good":["locks!"],"looking good,":["a"],"looking good.":["Are"],"looking piece":["of"],"looking pretty":["good.","good."],"looking really":["good"],"looks \"unbalanced\"":["to"],"looks a":["bit","little"],"looks awesome":["and"],"looks better":["and"],"looks clean":["enough"],"looks clean.":["The"],"looks cleaner":["there"],"looks fine":["to","(on"],"looks fine.":["You"],"looks for":["stretches"],"looks generally":["good."],"looks good":["to","--","to","other","to","except","to","to","to","to","otherwise.","too.","to","to","overall.","though.","overall.","overall.","and","with"],"looks good,":["however","although","these"],"looks good.":["A","Do","+1","Additionally,","The","The","Ah,","Personally","Optionally,","I","The","I","One","It's",":)","Regex"],"looks great":[":)","-","to","generally,","to"],"looks great,":["my","but","but","I","although","but"],"looks great.":["My"],"looks like":["you","you","a","clojure","it","here","a","a","this","this","even","you","the","I","clojure","words","your","a","any","you","your","your","it","\"drop"],"looks more":["intuitive,"],"looks much":["better","more","better.","cleaner!","better."],"looks neat":[":)"],"looks nice":["too.","overall."],"looks nice,":["good","quite"],"looks nice.":["That's","However,","Alternative"],"looks ok":["already"],"looks perfectly":["readable"],"looks pretty":["neat","nice!","clean.","good.","good,","good","good."],"looks quite":["idiomatic"],"looks real":["good.","good.","good"],"looks really":["good.","crowded","better.","wordy","good."],"looks redundant":["when"],"looks so":["much","wrong"],"looks stupid":["I"],"looks to":["be"],"looks ugly":["(a"],"looks ugly.":["Is"],"looks very":["nice","good.","cool.","cool"],"looks wrong":["to","then"],"looks wrong.":["Should"],"looks. It":["\"breaks\""],"lookup can":["also"],"lookup the":["planet"],"lookup. Example":["of"],"lookups can":["take"],"loop but":["I"],"loop for":["a"],"loop over":["data."],"loop to":["make"],"loop, as":["you"],"loop. I":["turned"],"loop. You":["might"],"loop/recur construct":["in"],"loop/recur is":["pretty"],"loop/recur or":["a"],"loop/recur. That":["will"],"loops through":["each"],"losing too":["much"],"loss of":["clarity"],"lost a":["space"],"lost here,":["@mabel."],"lost sight":["of"],"lost some":["clarity"],"lost track":["of"],"lot --":["would"],"lot I":["don't"],"lot about":["variable"],"lot and":["allow"],"lot better":[":)","if"],"lot by":["trying"],"lot cleaner.":["Thanks"],"lot clearer.":["`(frequencies"],"lot clearer...":["you"],"lot easier":["to"],"lot easier.":["With"],"lot going":["on"],"lot harder":["than"],"lot in":["clarity"],"lot more":["readable.","readable.","complicated","clear","happening","readable"],"lot of":["it","room","value","string","duplication","effort","unnecessary","people","syntactic","typing.","whitespace,","XUnit","stuff","closing","nice","benefit","unnecessary","overlap","threading","structure"],"lot shorter":["without"],"lot simpler":["using","for","from","-"],"lot to":["learn","do,","worry","worry"],"lot with":["a"],"lot. I'd":["probably"],"lot. Is":["there"],"lot. No,":["no"],"lots of":["inline","conditional","insightful"],"loud' note:":["I"],"love a":["better"],"love deleting":["code!"],"love how":["succinct"],"love more":["feedback"],"love opinions":["on"],"love reading":["stuff"],"love that":["`dna-\u003erna`"],"love the":["way","individual","way","use","new","use","`:pre`","`clean`"],"love this":["statement"],"love to":["hear","hear","hear","hear","know"],"love trimming":["redundant"],"love with":["your"],"love your":["feedback","naming"],"low level":["functional","turn-left/turn-right/move"],"low-level tool":["which"],"lower and":["upper"],"lower case":["down","it.","the","letters.","you","using"],"lower case,":["though"],"lower case;":["the"],"lower cased":["and"],"lower level":["of"],"lower-case (remove-non-word-chars":["s))"],"lower-case and":["sort","alpha"],"lower-case before":["re-seq,"],"lower-case characters\"*.":["I"],"lower-case clean":["this"],"lower-case letters,":["so"],"lower-case more":["times"],"lower-case over":["the"],"lower-case the":["entire","input,"],"lower-case them.":["That's"],"lower-case to":["check"],"lower-case upper-case)]`":["form."],"lower-case? What":["do"],"lower-cased and":["the"],"lower-cased input":["to"],"lower-cased word":["in"],"lower-casing and":["sorting"],"lower-casing into":["word-count."],"lower-casing the":["input"],"lower-casing up":["to"],"lower/upper char":["bounds,"],"lowercase and":["hyphen"],"lowercase characters?\"":["better"],"lowercase letters":["are"],"lowercase the":["input"],"lowercase them":["individually."],"lowercase while":["the"],"lowercase, hyphen":["delimited"],"lowercase, hyphenated":["names."],"lowercased string.":["In"],"lowercased the":["phrase"],"lowercased, as":["soon"],"lowercased, tokenized":["string,"],"lowercasing alphagram":["not"],"lowercasing in":["alphagram,"],"lowercasing the":["chunks,","input","input"],"lowers readability.":["I"],"lurk on":["the"],"m)`, will":["it?"],"m, etc":["might"],"macro -":["like"],"macro [`-\u003e\u003e`](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E).":["It"],"macro `-&gt;&gt;`":["to"],"macro `-&gt;`":["may"],"macro `-\u003e\u003e`":["might"],"macro ```-\u003e```,":["like:"],"macro after":["posting"],"macro allow":["you"],"macro and":["combining"],"macro can":["take","be"],"macro could":["verify"],"macro down":["into"],"macro expansion":["to"],"macro for":["loading","**(re-pattern"],"macro formatting":["in"],"macro in":["the","preference","this","the"],"macro in.":["I'm"],"macro instead":["of","of","of"],"macro invocation":["by"],"macro is":["tricky.","a","just","pretty"],"macro it":["works"],"macro just":["because"],"macro like":["this."],"macro manipulates":["the"],"macro over":["the"],"macro recursively":["called"],"macro so":["you"],"macro then":["you"],"macro to":["improve","be","simplify","do","expand"],"macro use":["is"],"macro which":["yields","reads","is"],"macro would":["look","clutter","put"],"macro you":["use"],"macro). On":["first"],"macro, I":["got"],"macro, [`-\u003e\u003e`](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E),":["if"],"macro, as":["is"],"macro, because":["`use`/`:use`"],"macro, but":["they","they"],"macro, there":["are","are"],"macro-frenzy here,":["but"],"macro. Also,":["by"],"macro. Anyway":["`use`","no"],"macro. In":["case","order"],"macro. It":["works"],"macro. Like":["`(:require"],"macro. That's":["the"],"macro. When":["and"],"macro. You":["can"],"macro](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E) to":["avoid"],"macro](http://clojuredocs.org/clojure_core/clojure.core/-%3E) in":["```extract-words```."],"macro`](http://clojuredocs.org/clojure_core/clojure.core/-%3E). That":["makes"],"macros -":["you"],"macros :)":["I"],"macros allow":["it"],"macros and":["rambled","anonymous","auto-generate"],"macros are":["expanded","hard"],"macros but":["I'll"],"macros for":["chaining","that."],"macros here?":[":)"],"macros instead?":["That"],"macros is":["where"],"macros it's":["generally"],"macros or":["`intern`"],"macros to":["generate"],"macros, but":["that's","had"],"macros, it's":["better"],"macros, this":["is"],"macros. One":["to"],"macros? I":["think"],"macros? `(-\u003e":["statement"],"mad at":["me."],"mad scientist.":[";)"],"made (re":["an"],"made `str`":["the"],"made a":["general","mistake","separate","binding","blunder."],"made all":["the"],"made any":["further"],"made as":["one-liners"],"made in":["enclosing"],"made it":["incredibly","a","tough","by"],"made its":["way"],"made me":["think","look","think","realize","wish"],"made more":["readable"],"made my":["day.","codes"],"made myself":["clear,"],"made no":["attempt"],"made order":["independent."],"made order-independent":["but"],"made perfect":["sense,"],"made some":["small","changes"],"made the":["suggestions","change","tests","anagram","code","code","perfect","changes","method","appropriate"],"made these":["functions"],"made use":["of"],"made while":["typing"],"made with":["String's"],"made-up words,":["the"],"made? Would":["another"],"magic spell,":["I"],"magic. Maybe":["something"],"magical that":["Clojure"],"magnitude faster":["than"],"main block":["of"],"main expression":["of"],"main function":["closer"],"main gist":["are"],"main method":["you"],"main point":["of"],"main response-for":["method"],"main thing":["I"],"main tweaks":["I'd"],"mainly based":["on"],"mainly because":["I","of"],"mainly mater":["of"],"mainly transforming":["functions"],"maintain order":["independence"],"maintain readability":["while"],"maintain readability,":["you"],"maintain that":["code."],"maintain the":["conditional","readability","readability"],"maintainability (in":["the"],"maintainability inside":["a"],"maintainable if":["you"],"maintained by":["the","community:"],"maintained clojure":["style"],"maintainer could":["see"],"maintainer of":["the"],"maintenance -":["necessity"],"maintenance. I":["don't"],"major dictionary":["(according"],"make \"Whatever.\"":["the"],"make `anagram-of?`":["just"],"make `grouping`":["quite"],"make `ham-compare`":["accept"],"make `hamming-value`":["accept"],"make `leiningen`":["happier."],"make `letter-generator`":["a"],"make `normalize-digits`":["a"],"make `question?`":["and"],"make `response-for`":["clearer","cleaner?","less","read"],"make `verse`":["and"],"make `word-count`":["a"],"make a":["function","good","counter","pull-request!","short","handy","simple","function","binding","case","function","nested","few","mistake","local","measurable"],"make additional":["functions"],"make all":["the","words"],"make an":["implementation","atom"],"make any":["difference"],"make checks":["order","more"],"make code":["a","short"],"make everything":["else"],"make for":["significantly","a","a","a"],"make helper":["function"],"make idiomatic":["sense"],"make inspect-phrase":["a"],"make it":["clear","work","more","clearer","more","more","tail-recursive.","non-public","more","even","more","not","public.","easier","a","less","explicit","a","a","close","more","look","a","prettier","easier","harder","easier","clearer","an","more","more","work.","work.","simple","clear","more","in","a","more","atomic,","atomic,","private","more","more","a","any","any"],"make less":["sense"],"make me":["happy!"],"make more":["sense","sense.","sense"],"make much":["of","sense.","difference","if"],"make my":["code"],"make out":["what"],"make people":["aware"],"make private":["functions"],"make program":["much","more"],"make response-for":["more"],"make sense":["to","to","-","in","to","to","-","of","if","to","to"],"make sense.":["I"],"make sense?":["Naming"],"make sure":["there's","if","bob","the","to","that","the"],"make that":["change,","equivalent.","change","change.","change.","more","work","useful","look"],"make the":["accepted","intent","code","predicates","conditionals","predicate","input","jump","code","transform","code","regex","function","code","`blank?`","check","intent","operation","method","code","program","program","code","program","code","code","helpers","first","checks","code","solution","helper","namespace","encapsulation","code","bulk","intent","branches","root","more","code","intent","`silent?`,","implementation","tests","intent","purpose","connection","anonymous","implementation","tests","ascii","validation","actual","reduce","whole","cond-part","intent","code"],"make their":["purposes"],"make them":["the","all","a","more","both","as"],"make things":["clearer","significantly","even","readable.","easier","simpler?","look","a"],"make this":["as","cleaner.","shorter","simpler","design","a","simpler","much","more","tidier.","both","more","clearer."],"make those":["private?","predicate","non-public.","response","values","a"],"make use":["of","of","of","of","of","of","of","of","of","of","of","of","of","of"],"make valid":["serial"],"make very":["good"],"make word-count":["a","easier"],"make you":["creatively"],"make your":["`response-for`","life","solution","life","program","code","`pretty-print`","life","solution","code","code","`silent?`","code"],"make-anagram-checker function":["(if"],"makes Bob":["respond"],"makes DNA":["into"],"makes `question?`":["more"],"makes a":["great","significant","private","much"],"makes about":["its"],"makes all":["functions"],"makes clear":["that"],"makes code":["a"],"makes each":["of"],"makes for":["a","a","a"],"makes it":["explicit","a","more","obvious","easier","harder","much","very","easy","clear","immediately","clean","harder","more","more","appear","harder"],"makes life":["a"],"makes me":["have","smile","think"],"makes more":["sense","sense","sense"],"makes not":["much"],"makes partial":["application"],"makes perfect":["sense"],"makes sense":["to","for","to","for","because"],"makes sense.":["If","But","Thank"],"makes that":["easy:","very"],"makes the":["tests","whole","input","code","`transcribe`","tests","code","program","intent","program","definitions","logic","intent","function","intent","code","`response-for`","one","code","code","`cond`"],"makes their":["meaning"],"makes them":["private."],"makes things":["easier","a","easier","quite","a","a","a"],"makes this":["pretty","solution","much"],"makes very":["clear"],"makes your":["solution","code"],"making `anagram-of?`":["take"],"making `question?`":["`yelling?`"],"making `shout?`":["and"],"making `silence?`":["`shout?`"],"making a":["string","true","helper","function","bunch"],"making an":["anonymous"],"making anything":["work,"],"making assignment":["a"],"making assumptions":["like"],"making code":["more","more"],"making decisions":["about"],"making extensive":["use"],"making fns":["order"],"making functions":["not","that","available"],"making great":["use"],"making helpers":["private."],"making it":["easier","a"],"making me":["sad..."],"making part":["of"],"making response-for":["a"],"making space-age":["a"],"making sure":["that","that"],"making that":["for","judgment"],"making the":["predicate","helper","vars","helper","helper","helper","reader","`shouting?`","helper","`ends-with-question-mark?`","question","function","string"],"making them":["private","private?","separate"],"making things":["like"],"making this":["one","simpler."],"making two":["maps"],"making use":["of","of","of"],"making your":["var","intentions"],"manage the":["map,"],"managed to":["get","interpret","do","generate","shorten"],"manifest itself":["in,"],"manipulate collections":["based"],"manipulate most":["of"],"manipulates the":["lists"],"manipulating the":["namespace"],"manipulation than":["the"],"manner, and":["makes"],"manner. The":["absence"],"manual definitions.":["This"],"manually -":["DRY."],"manually manipulating":["the"],"manually multiple":["times"],"many cases.":["Your"],"many different":["rules"],"many elements":["satisfy"],"many etc.":["I"],"many function":["calls,"],"many lines,":["but"],"many nested":["calls,"],"many one-offs":["to"],"many other":["functions","languages)"],"many others).":["That's"],"many people":["saying","as"],"many phrase":["here"],"many private":["functions"],"many string":["repetitions"],"many thousands":["of"],"many times":["throughout."],"many times.":["I"],"many types":["of"],"many useful":["functions"],"many way":["to"],"map (which":["is,"],"map -":["I"],"map :))":["will"],"map `TO-RNA`":["onto"],"map across":["all","the"],"map after":["the"],"map and":["the","building","having","then"],"map are":["also"],"map as":["a","a","suggested"],"map at":["all"],"map because":["you"],"map by":["making"],"map calls":["seq"],"map can":["also","define","take"],"map creation":["(see"],"map datatype":["extends"],"map for":["it,","the"],"map form":["that"],"map full":["of"],"map function":["is","so","over"],"map functions":["into"],"map getter":["functions,"],"map getters":["directly,"],"map in":["that","that","`beer/sing`","to"],"map instead":["of"],"map is":["keyed","lazy","better","immutable"],"map itself":["can"],"map itself.":["However,"],"map key":["value)"],"map like":["`(map"],"map literal":["on"],"map lookup.":["Example"],"map of":["regexes","sorts,","rebindings:","a","character","regexp","regexp","the"],"map or":["vector","filter"],"map out":["all"],"map over":["a","the","the","strands","a","it."],"map rather":["than"],"map reduce":["for"],"map representing":["robot"],"map should":["come"],"map special":["form](http://clojure.org/special_forms#toc10)"],"map that":["included"],"map the":["regexes","predicates","\"letters\"","dna","\"=\""],"map to":["have","lookup","me.","calendar"],"map using":["a"],"map which":["i'm"],"map with":["`some`","a","only","zero"],"map would":["involve"],"map {key":["value})."],"map\"](http://clojure.org/special_forms#toc9) `{:pre":["(..."],"map) is":["the"],"map, as":["the"],"map, but":["that","I","then"],"map-destructuring let":["and"],"map-index? Names":["help"],"map-inside-a-map, which":["the"],"map-reduce solution.":["I"],"map-to-rna\", like":["one"],"map. (Incidentally,":["one"],"map. An":["atom"],"map. As":["a"],"map. If":["you"],"map. It":["really","is"],"map. That":["can","would"],"map; but":["didn't"],"map? It":["seems"],"map][1] feature":["of"],"map][1] of":["the"],"map][1] to":["describe"],"mapped the":["`=`"],"mapping `lower-case`":["to"],"mapping a":["map.","map"],"mapping and":["error"],"mapping from":["DNA"],"mapping function":["that"],"mapping functions,":["but"],"mapping lower-case":["over"],"mapping over":["the","the","the","the","the"],"mapping shortcuts,":["those"],"mapping statements":["to"],"mapping super":["explicit"],"mapping the":["DNA","strings","valid"],"mapping to":["alias","vectors","vectors","end"],"mapping under":["root"],"mapping, and":["leaving"],"mapping? Or":["do"],"mappings are":["not"],"mappings change/update":["very"],"mappings, one":["mapping"],"maps -":["as"],"maps are":["functions","also"],"maps as":["functions"],"maps can":["be","be"],"maps for":["equality:"],"maps in":["Clojure"],"maps is":["not"],"maps like":["`[{:matcher"],"maps over":["the","the"],"maps the":["DNA"],"maps with":["map","letter"],"maps) as":["functions"],"marching `if`s":["in"],"mark '?'":["is"],"mark (e.g.":["`silent?`)."],"mark as":["that"],"mark at":["the"],"mark e.g.":["`blank?`,"],"mark indicating":["it"],"mark is":["enough","what"],"mark it":["as","off","as"],"mark me":["as"],"mark or":["not."],"mark this":["as"],"mark to":["_is-dna-nucleotid_'s"],"mark) implies":["that"],"mark. Also,":["do"],"mark. So":["your"],"mark. e.g.":["`is-silence?`"],"markdown on":["the"],"marker in":["`nucleotide-counts`."],"markers and":["their"],"marks in":["predicate","ruby","identifiers."],"marks instead":["of"],"marks instead:":["`shouting?`."],"match a":["sequence"],"match all":["sentences"],"match and":["move"],"match any":["of","of","of","of","of"],"match anything":["with"],"match every":["possible"],"match function":["so"],"match if":["you"],"match means":["that"],"match sets).":["This"],"match that":["regex."],"match the":["other","other","domain","domain","domain","scenario.","whole","mathematical"],"match\" in":["clojure"],"matched functions":["in"],"matched pairs":["into"],"matched the":["input?","wrong"],"matched. You":["could"],"matcher might":["be"],"matches `#\"\\w+\"`,":["and"],"matches all":["alphanumerical"],"matches in":["`candidates`"],"matches just":["one"],"matches the":["original","original","tests","readme,","arity","test"],"matches you":["need"],"matches. The":["same"],"matches. Would":["that","that"],"matching `[a-z]`":["and"],"matching anagrams":["could"],"matching opening":["parenthesis"],"matching parens":["for"],"matching parentheses":["and","(so"],"matching the":["given"],"matching two":["constants."],"matching with":["clojure"],"matching. The":["functions"],"matching. Using":["regex"],"matching? It's":["pretty"],"matching? [[char1":["char2]]"],"mater of":["taste."],"mathematical approach":["to"],"mathematical definition.":["Basically,"],"mathematical version":["of"],"matter how":["complicated"],"matter much":["in","but"],"matter of":["personal","preference,","taste,","preference)","context.","familiarity","taste","taste.","taste,","taste","a","preference.","preference.","preference,","personal","preference,","preference.","preference.","preference,","personal","taste","taste...","preference","preference","preference","preference.","convention,","familiarity","implementation)","style","preference.","preference.","taste,","opinion."],"matter regarding":["`uppercase?`."],"matter that":["much"],"matter which":["macro"],"matter with":["what","your"],"matters but":["it"],"matters for":["the"],"matters, are":["numbers,"],"max. Furthermore,":["minimal"],"may achieve":["even"],"may also":["'suggest'","'suggest'"],"may argue":["that"],"may be":["useful)","faster,","a","generally","overkill","interested","a","a","just","worth","personal","taste.","a","overdoing","a","a","a","worth","confusing","my","done","a","a","also","better","a"],"may become":["very"],"may come":["down","down"],"may compensate":["for"],"may consider":["using"],"may contain":["only"],"may ease":["reading"],"may feel":["more"],"may find":["helps"],"may get":["feedback","feedback"],"may have":["forgotten","not","to","less"],"may help":["you","```response-for```","understand","you","you","with"],"may improve":["readability"],"may just":["be"],"may look":["and","like"],"may manifest":["itself"],"may mislead":["the"],"may not":["be","be","be"],"may only":["need"],"may possibly":["reduce"],"may prefer":["to"],"may probably":["also"],"may return":["functions:"],"may simplify":["much"],"may still":["fall"],"may suggest":["that"],"may take":["some","some"],"may want":["to","to","to","to","to","to","to","to","`characters`"],"may well":["want"],"maybe I":["have"],"maybe I'm":["weird,","not"],"maybe `alphagram`":["shouldn't"],"maybe `candidates`":["would"],"maybe `some`":["is"],"maybe `yelling?`":["and"],"maybe a":["name","hash","little","little"],"maybe add":["some"],"maybe be":["clearer"],"maybe creating":["a"],"maybe even":["inline"],"maybe give":["some"],"maybe harder":["to"],"maybe having":["an"],"maybe in":["that"],"maybe instead":["of"],"maybe it":["makes","would","is","doesn't","helps"],"maybe it's":["just","worth"],"maybe just":["use"],"maybe monad.":["As"],"maybe predicates":["should"],"maybe reshuffle":["your"],"maybe share":["links?"],"maybe should":["be"],"maybe some":["sort"],"maybe something":["like"],"maybe that's":["just","a","just","just"],"maybe the":["way","perceived"],"maybe there":["are"],"maybe there's":["some","a"],"maybe using":["`last`"],"maybe wants":["to","to"],"maybe we":["can"],"maybe would":["even"],"maybe you":["have","can"],"maybe, I":["should"],"maybe. I":["know","prefer"],"maybe... I":["keep"],"me (though,":["of"],"me -":["i"],"me ...":["it's"],"me 4":["failures."],"me :)":["That"],"me a":["moment","bit","minute.","while","bit","headache!","bit","bit","little","bit","hint?","minute","thing","loop","moment","lot.","lot.","while"],"me about":["every","Clojure","the"],"me an":["approach","opportunity"],"me anyway,":["as"],"me as":["'done'?","well."],"me at":["least!"],"me but":["its","looks"],"me explore":["the"],"me for":["it..."],"me from":["understanding","using"],"me have":["to"],"me identify":["where"],"me if":["there's"],"me in":["a","general,"],"me is":["regexp","news)."],"me know":["how","what","if"],"me look":["up"],"me lots":["of"],"me most":["with"],"me now":["I'll"],"me of":["```#'```","the"],"me out":["here"],"me passing":["@gunnar's"],"me putting":["the"],"me realize":["the"],"me sad...":["but"],"me simplify":["this"],"me smile":["that"],"me some":["time","insight"],"me something":["with"],"me specifically":["what's"],"me that":["following","you","you","`clojure.core.frequencies`"],"me the":["magic","impetus"],"me think":["it","that","too"],"me though":[":)"],"me to":["chill","learn","believe","just","realize","solve.","dive","move","bind","the","read.","think","do","be","useful","`clojure.string`.","resolve","scan","look","read.","use"],"me toward":["or"],"me towards":["the"],"me try":["to"],"me was":["how"],"me what":["you"],"me when":["I","I"],"me where":["I'd"],"me wish":["Clojure"],"me wrong":[":)"],"me yet!":["I"],"me your":["solution"],"me) seems":["kind"],"me, I":["knew","was"],"me, `blank?`":["doesn't","doesn't","doesn't","and"],"me, `empty?`":["doesn't"],"me, because":["I'm"],"me, but":["I","I","i'm","i'm","I"],"me, for":["instance."],"me, great":["use"],"me, if":["you"],"me, requiring":["me"],"me, that's":["`clojure.string/blank?`"],"me, they're":["not"],"me, this":["is"],"me, transform":["this"],"me, well":["at","done."],"me, what":["you","better"],"me, would":["it"],"me. A":["hash","couple"],"me. Alternative":["approach"],"me. Alternatively,":["you"],"me. Any":["ideas?"],"me. But":["that"],"me. By":["swapping"],"me. Could":["you"],"me. Eventually":["you"],"me. However":["one"],"me. I":["leave","cannot","think"],"me. If":["you"],"me. In":["some","future"],"me. It":["didn't"],"me. Normally,":["methods"],"me. One":["more","more"],"me. Perhaps":["another"],"me. Spelling":["out"],"me. The":["added","`swap!`"],"me. What":["do","Editor"],"me. While":["it's"],"me. You":["could"],"me. `zero?`":["is"],"me... The":["recursion"],"mean ```frequencies```":["instead"],"mean a":["sentence"],"mean accepting":["of"],"mean by":["exporting","introducing","`(=","simplifying","the"],"mean changing":["the"],"mean just":["to"],"mean like":["multimethods,","put"],"mean line":["8"],"mean that":["I"],"mean to":["force","submit","include","mislead","include","use"],"mean using":["`frequencies`"],"mean with":["robust."],"mean would":["it"],"mean, but":["your"],"mean, could":["you"],"mean, yes,":["it’s"],"mean. Which":["do"],"mean.... wait":["for"],"meaninful to":["you"],"meaning and":["provenance,"],"meaning in":["the"],"meaning it":["represents."],"meaning more":["obvious"],"meaning regular":["expressions"],"meaning related":["to"],"meaning the":["exact"],"meaning to":["the"],"meaning you":["wouldn't"],"meaning. I":["would"],"meaning. It's":["not"],"meaning. You":["also"],"meaningful -":["maybe"],"meaningful atoms":["enhance"],"meaningful binding":["names"],"meaningful for":["the"],"meaningful in":["the"],"meaningful name,":["describing"],"meaningful names":["to","for","for","for","in","in","to","for","to","like"],"meaningful names.":["However,","However,"],"meaningful than":["\"s\""],"meaningful to":["the"],"meaningful variable":["names"],"meaningful variables":["could","could",":)","to","(or"],"meanings are":["more"],"meanings. The":["keywords"],"means \"execute":["this"],"means I'll":["have"],"means ```lower-case```":["will"],"means exactly":["the"],"means in":["this","this"],"means it":["is"],"means that":["`shouting?`","you'll","in"],"means you":["wouldn't"],"means. Something":["of"],"meant creating":["a"],"meant so":["I"],"meant that":["I","the"],"meant to":["make","be","define","use","encapsulate"],"meant was":["one","to"],"meant your":["third","second"],"meantime something":["else"],"measly parens":[";)"],"measurable difference":["for"],"measure the":["length"],"measured) The":["difference"],"mechanics of":["the","the"],"mechanism like":["that,"],"meet you":["this"],"meets one":["of"],"members -":["will"],"membership, like":["`(every?"],"memoize ```\\T```":["and"],"memoize but":["remember"],"memoize cache.":["Again,"],"memory is":["plentiful)."],"memory overhead":["from"],"memory that":["a"],"memory used.":["It"],"mention **\\T":["\\U**"],"mention even":["more"],"mention is":["using"],"mention more":["flexible."],"mention my":["usage"],"mention the":["customer"],"mentioned `let`.":["Other"],"mentioned above.":["Good"],"mentioned having":["to"],"mentioned pre-":["and"],"mentioned the":["use"],"mentioned to":["avoid"],"mentioned), but":["I"],"mentioned. The":["only"],"mentioning that":["you","`letfn`"],"mentioning what":["this"],"merge (but":["might"],"merge and":["disj"],"merge could":["also"],"merge-with is":["probably"],"merged into":["exercism!"],"merged with":["some"],"merging the":["first"],"merging with":["a"],"merit having":["a"],"mess it":["was"],"message \"?\")":["without"],"message \"AssertionError\"":["is"],"message \"DUDE!\",":["he"],"message (lower-case":["message))`"],"message (upper-case":["message))"],"message Bob":["is"],"message THAT":["MUST"],"message as":["an"],"message contain":["at"],"message could":["to"],"message didn't":["match"],"message doesn't":["match"],"message has":["been"],"message into":["private","chunks"],"message is":["all","not"],"message matched":["the"],"message of":["exception"],"message telling":["us"],"message to":["the"],"message was":["all"],"message wasn't":["shouted"],"message with":["your"],"message's response":["is."],"message) \\?)`":["better"],"message) message)`":["enough","is"],"message))` is":["just"],"message)` and":["handle","`:else`"],"message)` enough":["to"],"message)` is":["that"],"message)` though?":["Sometimes"],"message)` would":["be"],"message-type and":["responses."],"message. This":["would"],"messages to":["preconditions."],"messed up":["with"],"messes things":["up"],"messing up":["`clojure/string`"],"messy to":["me"],"messy. Then":["discovered"],"meta-data map":["in"],"metadata before,":["I"],"metadata can":["be"],"metadata that":["are"],"metadata to":["the","predicate"],"metadata. I've":["not"],"metaprogramming (perhaps":["there"],"method (from":["Java)"],"method (to":["me)"],"method -":["that"],"method \u003ccode\u003etokenize\u003c/code\u003e":["and"],"method ```to-rna-1```,":["and"],"method `empty`":["uses"],"method and":["yet"],"method being":["used"],"method but":["i"],"method calls":["work"],"method close":["the"],"method definition":["in"],"method do":["you"],"method for":["frequency","checking","a","these"],"method from":["line"],"method has":["code"],"method if":["you"],"method in":["Java","`clojure.string`"],"method instead":["of","of","of"],"method is":["doing,","good.","limited","then","explicit","essentially","not"],"method it":["is,"],"method more":["complicated"],"method much":["harder"],"method name":["`is-anagram?","character."],"method names":["—","—","uniform.","are"],"method of":["checking"],"method outside":["of"],"method that":["will","does","uses"],"method to":["fulfill","another","share"],"method too":["(which"],"method which":["is"],"method will":["match"],"method with":["that","slightly"],"method you":["will","might"],"method\", right?":["Is"],"method, I":["used","chose"],"method, but":["in"],"method, endsWith":["seemed"],"method, it":["would"],"method, so":["suggestions"],"method. Have":["you"],"method. However":["I"],"method. I":["initially","will","wonder","could"],"method. Previously":["I"],"method. You":["might"],"method? The":["reason"],"methods (er,":["functions,"],"methods (so":["I"],"methods \u003ccode\u003erequest-type\u003c/code\u003e":["and"],"methods and":["give"],"methods are":["using","absolutely","public?","one","confusing","now"],"methods as":["`if`","opposed"],"methods can":["apply"],"methods for":["conditions","your","you,","the"],"methods from":["the"],"methods in":["clojure.string"],"methods instead":["of"],"methods like":["`Character/isUpperCase`,"],"methods might":["be"],"methods named":["like"],"methods need":["to"],"methods non-public.":["Thanks"],"methods obviously":["also"],"methods of":["String"],"methods on":["top,","the"],"methods private":["as","via"],"methods provided":["in"],"methods return":["a"],"methods that":["are","are","express","returns","you","you","return"],"methods uniform":["across"],"methods use":["question"],"methods via":["`defn-`.","`defn-`."],"methods which":["might"],"methods with":["descriptive","descriptive","intention-revealing","intent","a"],"methods would":["be"],"methods you":["don't"],"methods)? Also,":["have"],"methods, and":["then"],"methods, as":["the"],"methods, but":["since","it"],"methods, so":["it"],"methods. Here":["are"],"methods. I":["don't","don't"],"methods. I'd":["take"],"methods. It's":["common"],"methods. Per":["your"],"methods. That's":["a"],"methods. You":["also"],"methods/functions small,":["you"],"methods? I":["think","think"],"metrics for":["a"],"middle of":["the","threading"],"might actually":["come"],"might allow":["you","you"],"might also":["need","be","be","consider","consider","want","experiment"],"might be":["better","a","able","a","a","the","that","a","missing","overkill,","to","nicer","correct.","a","better","doing","helpful.","missing","helpful.","useful","setup","overkill.","a","a","able","to","to","clearer","a","a","a","a","misleading.","able","my","a","improved","worth","nice.","a","neat","to","more","faster","bad.","worth","easier","slightly","clearer","easier","more","some","simplified","a","useful?","easier","better","used","better.","nice","possible","a","clearer.","clearer","clearer","a","a","more","interesting","easier","more","a","nice","better","more","to","able","able","fun","better","something","helpful","more","a"],"might benefit":["by"],"might better":["express"],"might bleed":["over"],"might check":["out"],"might choose":["to"],"might clean":["things"],"might compare":["your"],"might consider":["is","giving","using","`format`","making","making","moving","extracting","using","replacing","using","using"],"might do":["this"],"might double-check":[":)"],"might even":["be"],"might expect":["defined"],"might find":["it","it"],"might fulfill":["all","all"],"might function":["just"],"might get":["this"],"might have":["misunderstood","to","to","trampled","a","another","to","been","read","gone","unintended"],"might help":["you","you","here"],"might implement":["your"],"might imply":["that"],"might in":["other"],"might inline":["```sorted-word```"],"might introduce":["some"],"might just":["be"],"might lead":["us"],"might like":["to","that"],"might look":["slightly","at","better","at"],"might make":["a","the","sense","word-count","the","the","sense","it","it","more","that","things","it","the","things","for","`letter-generator`"],"might makes":["things"],"might not":["until","be","be","have","be","need","be","capture"],"might read":["better?","nicer"],"might rewrite":["sing"],"might seem":["a"],"might simplify":["the","your","a","things","things"],"might think":["of"],"might to":["convince"],"might try":["separating"],"might tweak":["is"],"might use":["more","[`(every?"],"might useful":["if"],"might wanna":["rename"],"might want":["to","to","to","in","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"],"might work":["(since"],"million ```replace```":["is"],"million character":["long"],"million cycles":["of"],"millions of":["characters"],"mind it":["in","too"],"mind of":["the"],"mind that":["there","seq-to-rna","you","if","string"],"mind when":["speaking"],"mind, but":["this"],"mind, it":["might"],"mind, that":["function"],"mind. I":["see"],"mind. Unfortunately,":["in"],"mindful organization":["of"],"mine -":["thanks!"],"mine had":["a"],"mine is":["a"],"mini-language and":["fits"],"minimal clarity":["gain."],"minimal in":["what"],"minimal use":["of"],"minimal, focused":["version."],"minimize that":["possible"],"minimize the":["code","complexity"],"minimum number":["of"],"minor consideration":["--"],"minor consistency":["nits."],"minor detail,":["but"],"minor nit:":["string/blank?"],"minor observation":[":"],"minor picks,":["though:"],"minor point":[","],"minor point,":["but"],"minor points:":["Is","you"],"minor thing":["--","--","--"],"minor thing,":["I","is"],"minor thing:":["You","Perhaps"],"minor things,":["probably"],"minor, but":["would","I"],"minor, but,":["you"],"minor, guessing":["you"],"minor, subjective":["nit."],"minute things":["let"],"minute to":["peek","figure"],"minutes to":["run","less"],"misaligned —":["you"],"mislead the":["reader"],"mislead you":["with"],"misleading -":["it"],"misleading comment":["-"],"misleading. Even":["then,"],"misleading. It":["would"],"misleading. Questions":["certainly"],"miss that?":["Thanks"],"miss the":["punctiation"],"missed `clojure.string/split`.":["I"],"missed a":["function"],"missed that":["I","bit"],"missed that!":["That's"],"missed that,":["thanks"],"missed that.":["Plus"],"missed the":["missing","forest"],"missing `+`":["sign."],"missing a":["step.","test"],"missing nucleotides.":["Using"],"missing one":["thing:"],"missing out":["on","on","on"],"missing some":["much"],"missing something":["magical","obvious","here?","here?","obvious","that","here,"],"missing the":["README","point?"],"missing whitespace":["after"],"mission to":["get"],"misspelling cause":["now"],"mistake (Syntax":["error)..."],"mistake like":["not"],"mistake with":["the"],"mistake. I'm":["going"],"mistaken, one-letter":["variable"],"mistakes, I":["think"],"mistakes. Point":["them"],"misunderstood you":["from"],"misunderstood your":["remark","nitpick."],"mixes programmer-lingo":["with"],"mixing compile":["time"],"mixing string":["checks"],"mixing styles":["here,"],"mixing that":["immutability"],"mixtures of":["case"],"mlakewood, thanks":["for"],"mock-heavy approach),":["there's"],"model, declaring":["public"],"moderately fluent":["in"],"moderator. So":["I"],"modifications to":["your"],"modified and":["resubmitted"],"modified in":["a"],"modified the":["test"],"modified to":["include"],"modify different":["parts"],"modify it.":["It's"],"modify the":["test","value"],"modifying the":["test..."],"modular in":["Clojure."],"modular, doesn't":["feel"],"module (it":["seems"],"module that":["implements","takes"],"module, and":["I"],"modules in":["the"],"modulo map":["itself."],"molecule 0)`,":["so"],"molecules, of":["course)."],"moment -":["say"],"moment I":["have"],"moment of":["pause"],"moment to":["understand"],"moment, but":["I'd"],"moment, the":["algorithm"],"monad. As":["soon"],"monosylabic friends)":["can"],"month ago](https://github.com/kytrinyx/exercism.io/issues/448)":["to"],"month and":["it"],"month by":["taking"],"month. That":["would"],"monthly Coffee":["&amp;"],"months you'll":["come"],"morally it":["isn't"],"more \"boolean\"":["in"],"more \"robust\"":["-"],"more (optional)":["arguments,"],"more *to":["the"],"more ...":["pretty."],"more Clojure-ish":["approach"],"more DRY":["approach","approach.","approach"],"more DRY.":["The","You"],"more I":["think","like"],"more a":["style"],"more about":["shouting","these","clojure."],"more accepted":["style"],"more accessible":["way"],"more appropriate":["here.","one","inside","higher-order","for"],"more appropriate).":["Then"],"more but":["ultimately"],"more challenging":["as"],"more characters":["that"],"more clear":["than","to","if","if","what","if","to"],"more clear,":["you"],"more clear.":["The","If","What"],"more clearer":["here."],"more clearly,":["like"],"more clojure":["idiomatic."],"more clojure-y":["or"],"more clojure.":["Isn't"],"more clojuresque.":["Unfortunately"],"more closely":["match"],"more code":["but","(diminishing","at","and"],"more comfortable.":["I"],"more common":["to","than","to"],"more compact":["with","(not"],"more compact,":["although"],"more complex":["solutions,","solutions?","than","than","filter","in","and","than"],"more complexity":["than"],"more complicated":["to","than","when","than","than","than"],"more complicated.":["I'm"],"more complication":["(unless"],"more composable":["with"],"more concerned":["with"],"more concise":["way","now","and,","way.","implementation","than","solution."],"more concise.":["awesome"],"more confusing":["than"],"more consistent":["for","for"],"more consistent,":["it"],"more conventional":["`cond`"],"more correct":["`ns`"],"more data-driven":["than"],"more declarative":["indeed"],"more descriptive":["after","variable","variable","argument","code.","names","name.","names","names","names?","var"],"more descriptive,":["like"],"more descriptively":["named."],"more detail":["at"],"more difficult":["to"],"more direct":["than"],"more directly":["map"],"more domain-specific":["term","(gene,"],"more duplicative":["version"],"more easy":["!!","to","to"],"more effective":["than","(nlogn","way","way","to","way","(nlogn","(nlogn","(nlogn","(nlogn","than","(nlogn","by","(nlogn"],"more efficient":["to","(nlogn","(nlogn","algorithm.","algorithm","method","than","than","with","way","than","by","(that's","and","and"],"more efficient.":["Ideally"],"more effort":["into"],"more elaborate":["bodies"],"more elegant":["Bob's","ways"],"more eloquently.":["Time"],"more encapsulated.":["Thinking"],"more evident":["once"],"more examples":["of"],"more experienced":["than"],"more explicit":["about","comparatively","about"],"more explicit,":["like","for"],"more explicit.":["Also,"],"more expressive":["than","then","and","and"],"more expressive,":["and"],"more extensible":["so"],"more fancy":["than"],"more feedback":["if"],"more fitting":["name,","here"],"more flexible.":["(But"],"more focused":["private"],"more for":["my"],"more force":["of"],"more forced":["to"],"more forgiving":["of"],"more function":["call"],"more functional":["stuff,","way"],"more functions":["would","by","such"],"more functions.":["Any"],"more general":["cases.","set","random","than","expression","purpose","solution"],"more general,":["so"],"more generic":["manner,","for","with","functions","to"],"more glaring":["problems!"],"more graceful":["ways"],"more happening":["in"],"more higher":["order"],"more honest,":["as"],"more idiomatic":["to","to","to","clojure","to","to","in","in","with","to","to","to","style","to","Clojure.","than","to","closing","way","to","to","and","to","way","to","as","to","and","style.","for","ways","Clojure.","than"],"more idiomatic.":["Regardless","I"],"more idiomatic/personal":["preference"],"more idiomatically":["Clojure","written","written","written","written"],"more idomatic.":["Somehow"],"more in":["the"],"more info":["please"],"more informative":["for"],"more inline":["with"],"more inputs":["than"],"more insight,":["I'd"],"more intention":["revealing:"],"more intentional":["that"],"more interesting,":["the","but"],"more into":["Scala."],"more intuitive,":["but"],"more like":["this?","a","a","a","as","pattern"],"more likely":["to"],"more lispy":["idiom"],"more litterate.":["This"],"more little":["nit"],"more logic":["and"],"more maintainable":["if"],"more meaning.":["You"],"more meaningful":["than","variables","atoms","variables","variables","names","names.","-"],"more minimal,":["focused"],"more minor":["thing"],"more modular,":["doesn't"],"more natural":["to","duplication,","I"],"more naturally":["in","with","to","with"],"more necessary":["here"],"more nit.":["Consider"],"more obscure.":["I"],"more obvious":["to","way"],"more of":["a","the","Clojure's","'thinking","the","the","these","the"],"more often":["used","reserved"],"more often,":["thanks"],"more on":["formatting","clojure's","Clojure"],"more or":["less"],"more order":["independent."],"more outside-in":["design"],"more overhead":["than"],"more people":["like"],"more performant":["with"],"more persistence":["seems"],"more places.":["Inlining"],"more portable":["to"],"more proper":["method"],"more readable":["a","to","on","if","and","in","if","that","if","if","than","by","code.","by","and","than","this","than","format","in","if","in","to","this"],"more readable!":["Obviously"],"more readable(i":["hope)"],"more readable,":["ways","don’t","I","but"],"more readable.":["One","*Do","Is","I"],"more readable/expresses":["intent"],"more readable;":["it's"],"more real-world":["case,"],"more really":["tiny"],"more reasonable":["to"],"more refactoring":["on"],"more robust":["solution."],"more sane":["approach"],"more satisfying":["pleasures"],"more self":["documenting,"],"more self-documenting":["-","or"],"more sense":["from","in","to","for","given"],"more shorter":[":)"],"more significant":["this"],"more simple":["to"],"more simply":["by"],"more small-screen/mobile":["friendly..."],"more so.":["I"],"more space":["(120"],"more specific":["names","one.","name","about"],"more specific,":["but"],"more specific?":["I'm"],"more standard":["when"],"more structured":["way..."],"more stylistic":["than"],"more subjective":["so"],"more submissions":["I've"],"more succinct":["than"],"more succinct,":["but"],"more succint":["names","method"],"more succintly":["with"],"more than":["you","you","you","wrap","twice","3/4.","one","one","just","the","this","one","one","one","one","once.","one"],"more that":["the"],"more the":["intent"],"more thing":["you","-"],"more thing,":["if"],"more thing.":["Think"],"more thing:":["it"],"more thoughts":["that'd"],"more time":["to"],"more times":["than","than"],"more trouble":["than","than"],"more true":["in"],"more uniform,":["you"],"more useful,":["you"],"more verbose":["and"],"more verbose,":["but","but","since"],"more vertical":["whitespace"],"more white":["spaces"],"more whitespace":["in"],"more widely":["used"],"more with":["it."],"more work":["than"],"more, \"":["(bottles"],"more, but":["I","this"],"more-readable but":["more"],"more. I":["don't"],"more/clearer meaning":["in"],"more: what":["about"],"most Clojurists":["reserve","are"],"most cases).":["More"],"most clojureans":["and,"],"most common":["approach.","and"],"most expressive":["choice."],"most idiomatic":["approach.","code"],"most important":["thing,"],"most of":["the","the","the","the","the","this"],"most often":["agree"],"most part":["I"],"most people":["decide"],"most places,":["but"],"most preferred.":["There's"],"most readable":["approach","based","high"],"most special":["characters"],"most standard":["way"],"most straight":["forward"],"most straightforward(and":["I"],"most text":["editors"],"most with":["Clojure"],"most. What":["do"],"mostly don't":["do"],"mostly empty":["[\".\""],"mostly for":["aesthetic"],"mostly from":["curly-brace"],"mostly it":["revolves"],"mostly matter":["of","of"],"mostly on":["the"],"mostly preference":["on"],"mostly tripped":["up"],"mostly used":["for"],"motivation for":["an"],"motivation is":["that"],"move `(fn":["[candidiate]`"],"move `]`":["after"],"move back":["to"],"move forward":["on.)"],"move into":["its"],"move it":["out"],"move on,":["I'll","though."],"move parts":["of"],"move the":["set","`+`","equality"],"move those":["to"],"move your":["library"],"moved conditions":["to"],"moved it":["to","in"],"moved let":["form"],"moved predicates":["to"],"moved the":["logic","lower-casing"],"moved them":["to"],"moved to":["a","separate"],"moved up":["to"],"moving `zipmap`":["into"],"moving all":["conditionals","the"],"moving at":["much"],"moving checks":["to","to"],"moving classification":["logic","logic"],"moving functionality":["out"],"moving inline":["conditions"],"moving on?":["It"],"moving predicates":["to"],"moving the":["conversion","logic","conditionals","conditional","lower","require","argument"],"msg \"\")),":["which"],"msg #\"[:!&@$%^,]\"":["\"\")"],"msg (upper-case":["msg))"],"msg is":["empty"],"msg) (not=":["(lower-case"],"msg) msg)":["(not="],"msg)) 0)`":["line:"],"msg)) or":["(="],"much \"globals\"":["and"],"much -":["maybe","at"],"much ...perhaps":["\u003cstrong\u003emessage\u003c/strong\u003e"],"much a":["Clojure"],"much about":["making","being","the","the","it","the"],"much appreciate":["any"],"much as":["possible,","possible.","I"],"much better":["now.","indeed!","pace.","to","name","solution."],"much better,":["thanks"],"much better.":["Ignore"],"much broader":["than"],"much but":["would"],"much cleaner":["solution.","than","and","indeed."],"much clearer":["now."],"much closer":["to"],"much code":["to"],"much communicated":["about"],"much concise":["and"],"much difference":["here,"],"much difference,":["but"],"much easier":["to","to","to","to","to","on","when","to"],"much enjoyed":["the"],"much exactly":["what","the"],"much faster":["for"],"much faster,":["and"],"much for":["your","the"],"much going":["on"],"much good":["feedback"],"much happier":["with"],"much harder":["to","to"],"much if":["any"],"much in":["that"],"much intent":["as"],"much into":["that."],"much less":["efficient","was"],"much like":["language","the","the","the"],"much more":["generic","obvious.","readable,","cleaner.","natural","readable.","efficient","code","efficient","effective","people","efficient","readable.","simply.","effective","effective","effective","effective","complication","effective","idiomatic","clear.","readable,","complicated.","concise","significant","clojure-y","readable"],"much my":["first","first","first"],"much nicer":["in","regex",":)"],"much of":["a","an","the","a","your","an","the","a"],"much on":["them."],"much out":["of"],"much outside":["of"],"much programming":["in"],"much quicker":["and"],"much rather":["have"],"much room":["for","for"],"much royal":["pain."],"much sense":["here"],"much sense.":["The"],"much shorter":["and","solution"],"much shorter,":["but"],"much simpler":["solution","than","mathematical"],"much simpler.":["You'll"],"much simpler/clearer":["in"],"much simplify":["the"],"much the":["same","same","same","only"],"much things":["crammed"],"much time":["lately"],"much to":["complain","do","complain","say","the","have"],"much too":["complex."],"much type":["juggling."],"much value.":["`\"\\w+\"`"],"much we":["can"],"much what":["I"],"much wider":["range"],"much with":["regards"],"much work":["that'll"],"much, too":["similar"],"much. Couldn't":["the"],"mulling over":["how"],"multi-arity [`defn`](http://clojuredocs.org/clojure_core/clojure.core/defn#example_137)":["to"],"multi-arity, I've":["just"],"multi-collection calls":["to"],"multi-collection form":["of","of"],"multi-method implementation.":["Was"],"multi-threaded environment,":["refs"],"multimethod and":["some"],"multimethod approach":["though"],"multimethods are":["more"],"multimethods could":["lead"],"multimethods instead":["of"],"multimethods more":["like"],"multimethods, dispatching":["on"],"multimethods. Basically":["instead"],"multimethods. Besides,":["code"],"multiple \u003ccode\u003eif\u003c/code\u003e":["calls."],"multiple `0`":["values"],"multiple arguments":["("],"multiple collection":["examples"],"multiple collections":["at","and"],"multiple collections.":["This"],"multiple dispatch,":["I"],"multiple filters":["were"],"multiple full":["string"],"multiple generators":["in"],"multiple lines":["-","would"],"multiple lines.":["Although"],"multiple nested":["`swap!`"],"multiple of":["100","4?"],"multiple parameters":["(ie."],"multiple refs":["are"],"multiple times":["seems","on"],"multiple times,":["but"],"multiple times.":["It","Possibly"],"multiple words.":["Not"],"muscle memory":["that"],"must admit":["it"],"must be":["missing","a","a","an","out","a","something","some","made","some","some","true","true","true","better"],"must execute":["in"],"must extend":["IFn"],"must have":["been","fixed","the"],"must say,":["BTW"],"must start":["with"],"mutable copies":["of"],"mutable state":["for"],"mutable state,":["which"],"mutable value":["seem"],"mutable value.":["A"],"mutate over":["the"],"mutated object.":["Anyone"],"mutation inside":["a"],"mutual recursion":["(when"],"mutually exclusive":["so","so"],"my 'or'":["statement"],"my Clojure's":["so"],"my Elixir":["solution"],"my Python":["implementation,"],"my REPL":["still"],"my Ruby":["solution","solution"],"my [\"improved\"":["version"],"my `cond`":["clauses"],"my `condp`":["version"],"my `count-falsey`":["function."],"my `defn`s":["are"],"my `nucleotides`":["function"],"my `question?`":["(which"],"my `zipvec`":["function,"],"my anagram":["solutions"],"my approach":["to"],"my attempt":["without","at"],"my attempts":["to"],"my attention":["to"],"my back!":["Silly"],"my bad,":["I"],"my benefit":["than"],"my biggest":["issues"],"my bob":["solution"],"my boredom":["threshold"],"my brain":["was"],"my brain.":["There"],"my case](http://exercism.io/n1k0/clojure/word-count)":["the"],"my code":["and","in","asap.","more"],"my code,":["thanks","but"],"my code.":["If"],"my code.Thank":["you."],"my codes":["to","much"],"my collection":["is"],"my comment":["here:","on","on"],"my conds":["as"],"my craw.":["Or"],"my current":["implementation","solution."],"my day-job":["which"],"my day.":[":)"],"my depth":["here,"],"my diving":["tour."],"my doc":["strings"],"my doubts":["on"],"my editor":["might"],"my english":["mistakes."],"my example),":["the"],"my exercism":["code"],"my eye.":["Further,"],"my eyes":["went","a","there"],"my face.":["What"],"my fault.":["@cristina,"],"my favorite.":["it"],"my first":["stabs","submission...","solution","ever","submission","submission).","attempt,","approach.","Clojure","Clojure","Clojure","Clojure","Lisp","attempt","ever","time","clojure","clojure","iteration.","stab","Clojure","submission."],"my fledgling":["ability"],"my follow-up":["comment"],"my frequent":["usage"],"my function":["by","calls","variables","where"],"my functions":["such"],"my general":["nitpick"],"my github":["account."],"my goto":["conditional."],"my haskell":["implementation..."],"my head":["is","around"],"my helpers":["could"],"my implementation.":["Using"],"my initial":["solution.","implementation."],"my intent,":["but"],"my jaw":["hit"],"my job":["as"],"my knowledge":["of","of","of"],"my lack":["of"],"my latest":["submission","version."],"my least":["favorite","favourite"],"my limit":["there)."],"my local":["editor."],"my logic":["with"],"my method":["name"],"my mind":["when"],"my muscle":["memory"],"my namespace,":["but"],"my naming":["conventions"],"my naming?":["It"],"my native":["language,"],"my new":["version?","submission,","submission.","solution"],"my next":["iteration.","submit.","revision.","submission","submission.","submission.","iteration.","submission."],"my nitpick":["to","side,"],"my non-public":["methods"],"my only":["nitpick","nitpick"],"my opinion":["not","this","would","it",";)."],"my opinion,":["and"],"my opinion.":["Is","`declare`"],"my opinions!":["Happy"],"my original":["advice,","iteration,","submission"],"my other":["language"],"my own":["time","refactorings.","implementation","words","opinion","lack","solution.","code.","nits!"],"my pairs,":["that"],"my parens":["with"],"my perspective,":["your"],"my phone":["and","wasn't"],"my predicate":["methods"],"my predicates":["with"],"my previous":["attempt,","nitpick.","nitpick","comment","submission,"],"my re-fu":["is"],"my regex-foo":["it"],"my regular":["expression"],"my remark":["about"],"my reservations.":["Ignoring"],"my results":["aren't"],"my ruby":["submission"],"my ruby/bob":["solution."],"my second":["ever"],"my short":["knowledge"],"my shouty?":["implementation"],"my solution":["now","I","is","is"],"my solution,":["but"],"my solution.":["But"],"my solution?":["I"],"my stance.":["I"],"my strongest":["point"],"my stuff":["so"],"my submission,":["I"],"my suggestion,":["yes"],"my syntax":["trying"],"my take-away":["from"],"my taste":["this"],"my teeth":["with","on"],"my test":["file"],"my third":["iteration","iteration"],"my thoughts":["on"],"my to-rna":["function"],"my translator":["conceit?"],"my understanding":["is"],"my unfamiliarity":["with"],"my usage":["of","of"],"my use":["of"],"my verse":["function."],"my version":["avoiding"],"my very":["first","first","first"],"my view":["though,"],"my way":["through","through"],"my wires":["crossed."],"my word":["on"],"my-other-value in":["this"],"myself -":["found"],"myself a":["pull","beginner"],"myself and":["was"],"myself but":["here"],"myself clear,":["but"],"myself from":["looking"],"myself in":["most"],"myself though,":["I"],"myself to":["see"],"myself waiting":["plus"],"myself, but":["I"],"myself. I":["started"],"mysterious runtime":["error."],"mysterious to":["me","me"],"mystery as":["\\U"],"mystery constants":["```\\T```"],"mystery to":["me,"],"n 0)`":["is","is"],"n 0...`":["in"],"n instead":["of"],"n) \"bottle\"":["\"bottles\"))`"],"n) by":["swapping","swapping","swapping"],"n)) for":["this","this","this"],"n). Also,":["made"],"n). Hint:":["you"],"n)`, whereas":["building"],"n, i,":["m,"],"n-bottles \"":["of","of","of"],"n-bottles) \"":["of"],"n00bish when":["it"],"n1k0 but":["I"],"n; the":["latter"],"naive and":["doesn't"],"name \"alphagram\"":["for"],"name \"hasher\"":["doesn't"],"name \"sentence\".":["Some"],"name (fn":["[args]))`."],"name ...)`":["is"],"name /":["namespace"],"name \u003ccode\u003enothing?\u003c/code\u003e":["doesn't"],"name \u003ccode\u003es\u003c/code\u003e":["of"],"name [args])`":["is"],"name ```string```":["makes"],"name ```to-rna-1```":["as"],"name `alphagram`,":["I"],"name `asking-politely?`":["for"],"name `clojure.core/count`":["if"],"name `dna-\u003erna`":["and"],"name `hamming-distance`":["unambiguously"],"name `is-anagram?":["`"],"name `p`":["don´t"],"name `pairs-equal`;":["I'd"],"name `question?`":["does."],"name `replace-thymidine-with-uracil`":["indicates"],"name a":["domain","bit","helper"],"name also":["\u003ccode\u003eempty?\u003c/code\u003e"],"name and":["assume","the","argument","the","arg","a","one"],"name as":["the","well"],"name at":["all,"],"name be":["clearer?"],"name being":["so"],"name but":["also","do"],"name by":["creating"],"name change":["would","to"],"name character.":["Coming"],"name conversion":["methods,"],"name for":["each","what","that","a","`q`","a","the","the"],"name from":["the"],"name functions":["that"],"name generation":["scheme"],"name in":["the"],"name is":["a","unique…","a","nulled"],"name isn't":["substantially"],"name it":["*pluralize*?),","something","at","`lowercase-word`.","could","\u003ccode\u003eresponse-for\u003c/code\u003e","`question?`,"],"name letter":["puts"],"name letters":["feels"],"name like":["\u003ccode\u003esilence?\u003c/code\u003e","`n-bottles`."],"name my":["predicates"],"name of":["the","the","the","your"],"name predicates":["with"],"name prefixed":["(`(clojure.string/blank?"],"name should":["conform","be"],"name some":["of"],"name space":["declaration,"],"name than":["hasher,","\"input\"","\u003ccode\u003estr\u003c/code\u003e"],"name that":["makes","doesn't","would","(even","well","makes"],"name the":["function","predicate","two","idea.","anonymous"],"name them":["using"],"name these":["function","functions"],"name things":["well"],"name to":["something","explain","the","include"],"name which":["makes"],"name will":["be"],"name would":["help","probably","add"],"name you":["can"],"name! Have":["a"],"name! So":["yes,"],"name). A":["deterministic"],"name). Good":["job."],"name, I":["thought"],"name, and":["extract","extract"],"name, but":["then"],"name, describing":["exactly"],"name, like":["`silence?`."],"name, one":["that"],"name, or":["placed","just"],"name, produces":["a"],"name, since":["it"],"name, you":["can"],"name. I":["find","hope","can't","think","like"],"name. I'll":["keep"],"name. I've":["cleaned"],"name. In":["a"],"name. Is":["there"],"name. It":["is"],"name. Why":["not"],"name. You":["could"],"name. `parse`":["is"],"name? At":["least"],"name? The":["same"],"name? [params*":["]"],"name?) and":["wow,"],"named `dna-seq`,":["since"],"named `silent?`":["that"],"named and":["reused?"],"named bindings":["or"],"named constants":["to","to"],"named ending":["with"],"named function,":["as"],"named function.":["It"],"named functions":["would","adds","clearer,","for","inside","do","could"],"named functions,":["although"],"named helper":["functions"],"named like":["that"],"named methods":["that","that"],"named my":["function"],"named parameters":["reads"],"named the":["string"],"namely extracting":["the"],"names (e.g.":["as"],"names (from":["his"],"names (remember":["that"],"names -":["it"],"names I":["was"],"names and":["thread"],"names are":["uracil","very","generally","preferred","generally","more","actions","reserved","so","standard","generally","fantastic,"],"names at":["the"],"names before":["putting"],"names between":["`countable-nucleotides`"],"names by":["making"],"names clarify":["their"],"names could":["be"],"names don't":["speak"],"names for":["\"T\"","nucleotides","the","bindings","two","forms","those,","those?","\u003ccode\u003eyell?\u003c/code\u003e"],"names from":["the","the","others.","the"],"names in":["the","direct","enclosing","Clojure"],"names instead":["of","of","of"],"names is":["generally","more"],"names it":["would"],"names like":["`s`","`silence?`,","`pos`,","`yelling?`","\u003ccode\u003eyelling?\u003c/code\u003e","`yelling?`,"],"names meaningful":["to"],"names might":["make"],"names n,":["i,"],"names of":["these","the","the","the","your","the"],"names should":["be","be","be"],"names so":["that"],"names start":["with"],"names that":["would","flow","match","would","hint","aren't"],"names to":["make","the","make","`T`","maintain","get","the","things","the","the","avoid","the","make","make","make"],"names uniform.":["Other"],"names with":["some","a"],"names within":["each"],"names would":["increase"],"names —":["no","no"],"names) makes":["things"],"names, `?`":["indluded."],"names, as":["it"],"names, like":["`?`.","`lc`."],"names, makes":["the"],"names, not":["specific"],"names, since":["they're"],"names. But,":["sometimes,"],"names. However,":["symbols","the"],"names. I've":["not"],"names. If":["these"],"names. Makes":["the"],"names. On":["the"],"names. Take":["for"],"names. That's":["entirely"],"names. What":["do","you"],"names. You":["can"],"names? Also,":["I"],"names? For":["example,"],"names? You":["could"],"names? `question?`":["feels"],"namespace (BTW":["if"],"namespace (ie":["only-numbers?,"],"namespace (if":["the"],"namespace (so":["called"],"namespace (when":["you"],"namespace I":["am"],"namespace `:require":["[clojure.string","[clojure.string","[clojure.string"],"namespace `:require`":["form"],"namespace again":["for"],"namespace aliasing":["you"],"namespace and":["are","importing","handling"],"namespace anyway.":["`(fn"],"namespace as":["`str`","opposed"],"namespace at":["a","the"],"namespace available":["to"],"namespace available.":["(Not"],"namespace called":["'dna'."],"namespace clash":["could"],"namespace contains":["`blank?`"],"namespace declaration":["(see","to:","so"],"namespace declaration,":["so:"],"namespace definition,":["it's"],"namespace for":["typical","```clojure.string```","a","all"],"namespace form.":["Using"],"namespace forms":["`:use`"],"namespace has":["some","a","a"],"namespace in":["Clojure","response-for.","your","the"],"namespace into":["your"],"namespace is":["a"],"namespace issue":["with"],"namespace it's":["declared"],"namespace macro":["is"],"namespace name":["prefixed","to"],"namespace of":["that"],"namespace refering":["only"],"namespace since":["you"],"namespace so":["(ns)"],"namespace symbol":["table."],"namespace to":["make","remove","see","refer","remove"],"namespace using":["`:require`"],"namespace var":["to"],"namespace where":["it's"],"namespace with":["a"],"namespace you":["don't"],"namespace, `:require`":["is"],"namespace, and":["works","when","`defn-`"],"namespace, as":["`clojure.string`"],"namespace, but":["to","I","I"],"namespace, e.g.":["robot/robot-name"],"namespace, like":["`str`.","`clojure.core/replace`.","I"],"namespace, not":["the"],"namespace, so":["there"],"namespace, which":["you"],"namespace-qualified vars":["clunky."],"namespace. Alternately,":["you"],"namespace. For":["example,"],"namespace. I":["also"],"namespace. I'll":["need"],"namespace. If":["the"],"namespace. In":["this"],"namespace. Otherwise,":["looks"],"namespace. Probably":["something"],"namespace. What":["do","you"],"namespace. You":["can"],"namespace; I":["also"],"namespace? Or":["did"],"namespace` to":["keep"],"namespaces do":["not"],"namespaces, however":["it's"],"namespaces. Some":["better"],"namespacing the":["calls."],"naming -":["what","lowercase,"],"naming and":["I","typing"],"naming convention":["is","in"],"naming conventions":["can","please","for"],"naming conventions,":["old"],"naming each":["category."],"naming in":["my"],"naming is":["to","extremely","a","a"],"naming like":["yelling?"],"naming made":["me"],"naming methods":["for"],"naming natural":["to"],"naming of":["`yell?`","fns","x"],"naming scheme":["in","should"],"naming style.":["Generally,"],"naming the":["variable","variable/docs","components","variable"],"naming things":["is","in"],"naming, I":["blame"],"naming, `x`":["is"],"naming, but":["English"],"naming. `yelling?`":["and"],"naming? It":["is"],"narrow scope":["and"],"narrow the":["scope"],"narrowest scope":["possible","possible"],"native =\u003e":["reads"],"native C":["implementation"],"native Clojure":["function","versions","function","functions,","to"],"native Clojure,":["and"],"native functions":["when"],"native language,":["so"],"native methods":["of"],"native solutions":["over"],"native sort":["capability."],"natural I":["guess."],"natural duplication,":["IMO."],"natural language":["we"],"natural to":["prefer","me.","the"],"naturally in":["the"],"naturally to":["me."],"naturally with":["the","the","how"],"naturally works":["on"],"nature as":["opposed"],"nature of":["this","the","the"],"nature would":["help"],"nature, that's":["a"],"near the":["top,"],"nearly as":["long"],"nearly-identical functions,":["I"],"neat to":["figure"],"neat way":["to"],"neat! That":["is"],"neat. I":["love"],"necessarily a":["Clojure","bad"],"necessarily aware":["of"],"necessarily better)":["way"],"necessarily clear":["from"],"necessarily need":["to"],"necessary -":["map","like","while"],"necessary \u003ccode\u003e-&gt;&gt;\u003c/code\u003e":["in"],"necessary as":["two"],"necessary at":["all."],"necessary because":["vector","vector"],"necessary but":["at"],"necessary for":["checking","this"],"necessary given":["that"],"necessary here":[":)"],"necessary here?":["I"],"necessary if":["you","you'd"],"necessary in":["this","this"],"necessary is":["it?"],"necessary since":["`blank?`","a"],"necessary to":["split","understand","check","name"],"necessary, but":["hey,"],"necessary, just":["a"],"necessary, otherwise":["if"],"necessary, sets":["work"],"necessary, specifically":["the"],"necessary. (`identical?`":["is"],"necessary. Also,":["for"],"necessary. And":["this"],"necessary. The":["ordering"],"necessary? I":["can","think"],"necessary? Strings":["are"],"necessity for":["namespacing"],"necessity to":["ensure","make","realign"],"necessity, must":["execute"],"necleotides thymidine":["uracil)"],"need `clojure.string`":["anymore."],"need `pair-elements`":["at"],"need `vec`.":["Lists"],"need a":["few","vector?","partially","name","year","regexp","conditional","```let```","single","map"],"need all":["the","the"],"need be),":["you"],"need both":["in"],"need either":["a"],"need for":["the","strip","it,","wrapping","`ifnil?`.","some","a","comments.","such","the","`do`","special","a","second","filter-words"],"need it,":["the"],"need line":["10."],"need merge":["(but"],"need of":["separate"],"need or":["make"],"need parens":["round","round"],"need pulling":["out"],"need the":["Unexpected","test","`clojure.string`","`clojure.string`","`concat`","last","`seq`","entire","not-silent","pre","`add-frequency`","`(seq","trim.","call","call"],"need their":["arguments."],"need them":["(and"],"need to":["learn","be","know","have","be","use","find","do","prefix","guard","call","pass","resort","refer","change","get","stay","build","use","come","read","call","take","do","join","use","play","convert","use","bring","do","check","trim","fix","replace","do.","be","use","finish","require","be","define","repeat","be","use","`(:use","use","write","pass","return","explicitly","assemble","invoke","cast","look","get","turn","convert","explicitly","convert","trim","explicitly","cast","return","be","turn","trim","convert","use","write","explicitly","turn","use","reapply"],"need to.":["Lastly,","Plus"],"need. In":["hindsight,"],"need. They":["should"],"need. You":["could"],"needed -":["you"],"needed a":["regular"],"needed anymore.":["Resubmitting."],"needed at":["all","all."],"needed because":["of"],"needed for":["single"],"needed in":["this"],"needed somewhere":["else."],"needed that":["temporary"],"needed the":["join","letter"],"needed to":["do","make","read","do","be"],"needed) and":["use"],"needed) so":["all"],"needed. (The":["implementation"],"needed. And":["there's"],"needed. For":["instance"],"needed. I":["remember"],"needed. To":["make"],"needed. When":["you"],"needing a":["wrapper."],"needing it":["at"],"needing strip-chars":["at"],"needing the":["data"],"needing to":["do"],"needs a":["little"],"needs at":["least"],"needs explanation.":["We"],"needs in":["the"],"needs more":["white"],"needs much":["more"],"needs to":["be","be","change","be","be","be"],"needs to,":["but"],"needs to.":["It"],"negate the":["logical"],"negation and":["just"],"negation, I":["introduced"],"negation, it":["always"],"negation. I'd":["inline"],"negative character":["class","classes"],"negative so":["that"],"negative step":["in"],"negative. I'll":["give"],"neither is":["using"],"nest function":["reader"],"nested ``if``":["instead."],"nested `if`":["statements","statements"],"nested `if`?":["If"],"nested `if`s":["will"],"nested `swap!`":["calls"],"nested branching":["in"],"nested calls":["into"],"nested calls,":["I"],"nested code":["as"],"nested conditions":["in"],"nested form":["(transform3"],"nested forms":["of"],"nested function":["calls","calls.","calls."],"nested if-else":["clauses,"],"nested ifs":["are"],"nested ifs,":["try"],"nested in":["fn","the"],"nested let":["forms"],"nested parentheses":["in"],"nested. They're":["three"],"nesting and":["improve"],"nesting ifs":["is"],"nesting it's":["much"],"nesting levels":["-"],"nesting multiple":["\u003ccode\u003eif\u003c/code\u003e"],"nesting where":["everything"],"nesting. Have":["you"],"never actually":["realized"],"never be":["yelled."],"never check":["for"],"never got":["it"],"never have":["occurred"],"never occurred":["to"],"never quite":["grasped"],"never ran":["the"],"never seen":["this","that","the"],"never sure":["which"],"never underestimate":["people!"],"never used":["it"],"never written":["Clojure"],"nevermind, it":["looks"],"new `inflect`":["version,"],"new approach":["without","at"],"new at":["serious","this,"],"new context":["where"],"new for":["me","me."],"new found":["appreciation"],"new function":["from","with","that"],"new functions.":["(the"],"new in":["clojure,"],"new iteration":["changing"],"new line":["(after","before"],"new line).":["You"],"new lines":["if"],"new methods.":["It's"],"new name":["would","and"],"new name.":["I"],"new nucleotide":["called"],"new nucleotide-counts":["is"],"new one":["doesn't","because"],"new other":["ways"],"new predicates":["are"],"new response":["(with"],"new revision":["based"],"new robot":["shouldn't"],"new sequence-based":["version."],"new set":["of"],"new solution":["I"],"new statement":["pattern,"],"new string":["and"],"new submission,":["and"],"new submission.":["The"],"new submissions.":["The"],"new tests":["should"],"new tests,":["but"],"new things":["till"],"new to":["Clojure,","Clojure.","Clojure,","Clojure","FP","clojure","Lisp-like","Clojure","Clojure,","Clojure,","Clojure","Clojure,","Clojure,","me","clojure","Clojure","Clojure","Clojure","functional","Clojure","Clojure,","Clojure,","clojure","clojure.","lisps),"],"new value":["anyway."],"new value,":["so"],"new version":["with","without","of","which","taking","now.","based","is","tomorrow.","what","with","looks","submitted."],"new version.":["As"],"new way":["to"],"new when":["it"],"new word,":["you're"],"newbie myself":["but"],"newbie with":["clojure;"],"newbies. I":["use"],"newcomer, reading":["condp"],"newest submission.":["I"],"newline and":["you"],"newline between":["the"],"newline it":["seems"],"newline onto":["those"],"newline, instead":["of"],"newlines and":["indent"],"newlines in":["regular"],"newlines throughout":["the"],"newlines when":["the"],"newlines, I'd":["still"],"news is":["that"],"next exercise":["and"],"next exercise,":["you"],"next expressions":["to"],"next form.":["Took"],"next iteration":["also","uses"],"next iteration,":["thank"],"next iteration.":["I","As"],"next line":["should","and","in","seems"],"next lines":["aligned"],"next one":[";)"],"next one.":[":)","The","This"],"next rev,":["i'm"],"next revision,":["and"],"next step":["to"],"next submission":["will"],"next submission.":["Also"],"next unless":["the"],"next-count 0":["[_]"],"next-count :default":["[n]"],"nice 'n":["clear!"],"nice -":["maybe"],"nice :)":["The","Excellent"],"nice and":["concise!","clean."],"nice as":["using"],"nice at":["some"],"nice catch!":["Another"],"nice catch.":["I"],"nice clojure":["built-in"],"nice consistent":["tie-in"],"nice demonstrations":["of"],"nice explanation.":["thanks"],"nice functional":["use","decomposition."],"nice if":["I"],"nice in":["clojure","Clojure,"],"nice names":["for"],"nice part":["about"],"nice pattern":["in"],"nice pattern.":["IMO,"],"nice screencast":["by"],"nice shortcut":["and"],"nice shorthand":["for"],"nice solution":["overall."],"nice solution!":["Did"],"nice solutions":["using"],"nice symmetry":["with","in"],"nice tip":["about","from"],"nice to":["meet","have","me.","use","see","realize","see","extract",":refer","figure","extract"],"nice too.":["If"],"nice touch":["-"],"nice trick":["but"],"nice with":["the"],"nice words":["but"],"nice! About":["the"],"nice! Cheers":[":)"],"nice! I":["like","prefer"],"nice, but":["I"],"nice, good":["job"],"nice, however":["I","you"],"nice, love":["the"],"nice, quite":["easy"],"nice, thank":["you!"],"nice. (My":["solution"],"nice. Alternative":["approach"],"nice. Although":["shouting"],"nice. Couldn't":["find"],"nice. Do":["you"],"nice. Final":["touch"],"nice. Have":["you","you"],"nice. However,":["I"],"nice. I":["hadn't","find","did"],"nice. That's":["up"],"nice. To":["reduce"],"nice. `blank`":["looks"],"nice. thanks.":["I"],"nicely -":["ending"],"nicely abstracted":["into"],"nicely for":["me.","the"],"nicely named":["functions"],"nicely succinct,":["even"],"nicely to":["say"],"nicer as":["something"],"nicer datetime":["library?"],"nicer for":["you're"],"nicer if":["you"],"nicer in":["Emacs"],"nicer regex":["than"],"nicer than":["`split`"],"nicer to":["use","apply","work"],"nicer using":["`defn`"],"niceties like":["`letfn`,"],"nifty trick":["but"],"nifty. If":["you"],"night -":["and"],"night. Should":["have"],"nil behavior":["isn't"],"nil condition":["as"],"nil for":["else."],"nil if":["it","for"],"nil in":["the"],"nil into":["0,"],"nil is":["inputted,","sufficient?","an","returned.","returned."],"nil might":["be"],"nil not":["the"],"nil rather":["than"],"nil values":["bothers"],"nil) ;":["=›"],"nil) throws":["a"],"nil)` in":["a"],"nil)` should":["be"],"nil, empty,":["or","or"],"nil, the":["processing"],"nil, which":["I"],"nil. If":["it"],"nil?) x)```.":["I"],"nil?, pos?,":["and"],"nil` in":["the"],"nil`. Consider":["this"],"nit I":["have"],"nit I've":["found"],"nit history.":["Awesome!"],"nit is":["more"],"nit to":["pick,","pick,"],"nit which":["may"],"nit you":["mention"],"nit! It":["is"],"nit, Clojure":["uses"],"nit, a":["small"],"nit, just":["an"],"nit-pick might":["be"],"nit-picky a":["nitpick"],"nit-picky if":["i"],"nit. Consider":["making"],"nit. It's":["idiomatic"],"nit: I":["find"],"nit: string/blank?":["already"],"nitckpick saying":["it"],"nitpick -":["please","however"],"nitpick --":["`split`"],"nitpick I":["have,","have"],"nitpick about":["your"],"nitpick and":["I"],"nitpick but":["I","the"],"nitpick is":["the","that","to","that","that","to"],"nitpick left":["is"],"nitpick on":["my","another"],"nitpick regarding":["naming"],"nitpick side,":["but"],"nitpick to":["say","your"],"nitpick while":["leaving"],"nitpick would":["be"],"nitpick, I":["will"],"nitpick. Are":["you"],"nitpick. I":["will","did"],"nitpick. Thank":["you!"],"nitpick. The":["page"],"nitpick: map":["calls"],"nitpick: you":["might"],"nitpicked on":["style"],"nitpicker will":["be"],"nitpickers don't":["seem"],"nitpickers may":["also","also","suggest"],"nitpickers think":["of"],"nitpicking before":["moving"],"nitpicking for":["a"],"nitpicking from":["my"],"nitpicking of":["the"],"nitpicking, but":["code"],"nitpicks above":["and"],"nitpicks all":["seem"],"nitpicks are":["stylistic","welcome."],"nitpicks from":["the"],"nitpicks to":["you,"],"nitpicks/comments on":["this"],"nitpicky now)":["the"],"nitpicky) consideration":["--"],"nits -":["nice.)"],"nits I":["want"],"nits are":["about"],"nits to":["pick.","pick"],"nits, looks":["good!"],"no \"Looks":["great!\""],"no (additional)":["arguments"],"no *official*":["best"],"no Clojure":["style"],"no I":["didn't"],"no Java":["programmer"],"no actual":["need"],"no attempt":["whatsoever"],"no behaviour":["defined"],"no better":["solution"],"no big":["deal","difference"],"no brainer,":["your"],"no difference":["between"],"no docstring":["to"],"no docstring.":["It's"],"no doubting":["it's"],"no else":["expression.","is"],"no extra":["whitespace)"],"no gain":["in"],"no hanging":["parenthesis"],"no idea":["what","what","what","why","what","about","about","how"],"no lines":["with"],"no logic":["or","or"],"no lower-case":["characters\"*."],"no lowercase":["letters"],"no matches":["in"],"no matter":["how","with"],"no more":["forced","necessary"],"no need":["to","for","for","to","to","to","for","for","to","to"],"no nit":["to"],"no one":["else"],"no ordering":["guaranties"],"no performance":["penalty"],"no point":["in"],"no real":["reason","need"],"no reason":["why"],"no room":["for"],"no tail-call":["optimization"],"no use":["for"],"no way":["to","intuitive"],"no, I":["did","pushed"],"no-op transcriptions,":["but"],"no. I've":["said"],"no. My":["initial"],"no. Sorry.":["I"],"noes, newline":["fail"],"noise and":["lines,"],"noise in":["the"],"noise might":["not"],"noise they":["actually"],"noisy Java":["interop"],"noisy function":["literal,"],"noisy to":["have"],"noisy, that":["may"],"nominate. While":["beyond"],"nominated for":["approval."],"nominating this":["for"],"non character":["things(i"],"non software":["engineers),"],"non-abbreviated words":["-"],"non-concurrent environment,":["but","but"],"non-descriptive names)":["makes"],"non-deterministic way":["-"],"non-insanely-trivial example":["and"],"non-nil are":["truthy"],"non-nil response":["but"],"non-numeric characters":["out"],"non-public but":["other"],"non-public constant":["definition"],"non-public def":["too..."],"non-public functions":["with","with","(`defn-`)","with","with"],"non-public functions,":["expressing"],"non-public helper.":["However,"],"non-public helpers":["(non-public","further"],"non-public last":["and"],"non-public methods":["are"],"non-public parts.":["`declare`"],"non-public too":["by"],"non-public with":["`^:private`."],"non-public. Thanks":["@jaeden."],"non-recursively. In":["this"],"non-sensing experience":["sometimes.)"],"non-standard -":["opening"],"non-standard to":["me."],"non-standard, but":["that's"],"non-trivial with":["UTF-8"],"non-word characters":["with"],"non-word characters,":["I"],"non-word characters.":["It"],"non-working code":["-"],"none of":["your","these","them","the"],"nonsensical, but":["I'm"],"noob to":["Clojure,"],"normal clojure":["style"],"normal word":["(weed"],"normalization at":["all?"],"normalization step,":["`(sort"],"normalization than":["sort"],"normalize digits":["into"],"normalize is":["a"],"normalize still":["works"],"normalize words":["multiple"],"normalize works":["with"],"normalize-sentence, you":["have"],"normalize-words frequencies)`":["to"],"normalized characters.":["Also,"],"normalized comparison":["for"],"normalized form":["and"],"normalized value":["and"],"normalized version":["rather"],"normalized-word [comparable":["other]))"],"normalizing before":["you"],"normalizing prior":["to"],"normally be":["on","a"],"normally better":["written"],"normally encounter":["first"],"normally expect":["to"],"normally just":["returns"],"normally reserved":["for"],"normally wouldn't":["expect"],"not \"Enterprisey\".":["Breaking"],"not \"feel\"":["like"],"not \"strand\"":["instead"],"not \"thymine\"?":["It"],"not (map":["="],"not 100%":["sure"],"not Calendar":["and"],"not `\"?\"`":["but"],"not `:require`":["`clojure.string`"],"not `first-part`.":["Might"],"not `letfn`":["because"],"not `true`.":["Obviously"],"not `use`)":["http://stackoverflow.com/questions/10358149/in-clojure-1-4-what-is-the-use-of-refer-within-require"],"not a":["bad","function","true","moderator.","large","function","list","collision.","problem","fan","fan","fan","fan","bad","good","domain","big","huge"],"not about":["caching/memoize","lazy"],"not actual":["usage"],"not add":["any"],"not affect":["here"],"not afterwards.":["I"],"not allow":["for"],"not allowed":["in"],"not already":["a"],"not an":["anagram.","expressive","extensible","implementation"],"not anagrams":["per"],"not appearing":["in"],"not approval":["worthy!"],"not as":["efficient,","nice","the","helpful","lazy"],"not at":["the"],"not aware":["I","of","of","of.","of)."],"not be":["changing","an","necessary.","as","thread","obvious","necessary","lower-cased.","what","the","calculated"],"not been":["picked"],"not being":["easily","necessary","part","shouted,"],"not blank?).":["But"],"not both":["a"],"not bound":["the"],"not branch":["beyond"],"not calculated":["every"],"not call":["the"],"not capture":["all"],"not certain":["about"],"not change":["so"],"not clear":["from","enough","that"],"not clear,":["see","and"],"not code":["golfing"],"not communicated":["to"],"not completely":["happy","understood"],"not considered":["upper","upper"],"not contain":["x\"*."],"not conventional":["to"],"not convinced":["about"],"not cool":["since,"],"not covered":["by"],"not covering":["all"],"not crazy":["about"],"not create":["a"],"not depend":["on"],"not dependent":["on"],"not describe":["the"],"not directly":["relevant"],"not effect":["the"],"not entirely":["Clojure","convinced"],"not evaluated.":["For"],"not even":["more"],"not every":["time"],"not excited":["about"],"not executable":["and"],"not experienced":["with"],"not explicitly":["tested?"],"not exposed":["in"],"not extensible":["enough?"],"not familiar":["with","with)"],"not far":["enough"],"not feeling":["quite"],"not filter":["equal"],"not find":["that"],"not finished":["the"],"not fully":["idiomatic."],"not fun":["at"],"not generating":["it"],"not getting":["back"],"not going":["to","to"],"not good":["functional"],"not got":["the"],"not handle":["Unicode,"],"not happy":["with","about:"],"not hard":["with"],"not have":["something","a","to","having","to"],"not having":["a","the","to","a","used"],"not hold":["you"],"not ideal":["to"],"not immediately":["apparent","apparent"],"not in":["every","love","the","logic,","words.)"],"not include":["its"],"not independent:":["the"],"not inline":["(replace"],"not its":["spirit."],"not just":["strings.","suffixes?"],"not know":["that","about","about","about","what"],"not leave":["closing"],"not let":["you"],"not lists":["-"],"not look":["good"],"not made":["as"],"not make":["sense","much","sense","a"],"not matched.":["You"],"not measured)":["The"],"not methods,":["but"],"not mistaken,":["one-letter"],"not more":["readable","trouble","readable","complicated"],"not much":["sense","we","of"],"not my":["native","strongest","favorite."],"not necessarily":["a","aware","clear","a"],"not necessary":["for","for","given","-","\u003ccode\u003e-&gt;&gt;\u003c/code\u003e","if","to","since","if"],"not necessary,":["sets","just"],"not necessary.":["And"],"not need":["to","a"],"not needed":["-"],"not needed.":["I","To"],"not obligatory":["though."],"not on":["their"],"not only":["for","the"],"not overly":["fond"],"not part":["of","of"],"not particularly":["fond","happy"],"not pay":["attention"],"not perfect)":["and"],"not polluting":["the"],"not possible":["to"],"not present":["-","in"],"not present,":["default"],"not previously":["aware","checked."],"not process":["the","the"],"not processing":["the"],"not pulling":["in","their"],"not putting":["[text]"],"not quite":["sure","expressive","right"],"not really":["following","relevant","that","decrease","up","matter","understand","common","happy","an"],"not rearrange":["anything,"],"not redundant":["the"],"not reflect":["the","the"],"not reflected":["in"],"not removing":["cruft"],"not require?":[";-)"],"not required":["-"],"not right":["for"],"not run":["on"],"not saying":["this"],"not seeing":["`check-match`","that."],"not seem":["to"],"not seen":["[`condp`](http://clojuredocs.org/clojure_core/clojure.core/condp)","it"],"not semantically":["correct"],"not shared":["that"],"not silence,":["a","a"],"not simply":["test"],"not so":["efficient,"],"not solve":["the"],"not something":["set"],"not specific":["to","types"],"not specified":["by"],"not started":["this"],"not statements,":["for"],"not stick":["in"],"not strings,":["and"],"not super":["clear"],"not sure":["what","it","why.","I","what","that","if","it","what","how","I","about","why","it","I","I","about","I","how","it's","if","if","about","if","what's","you","about","how","I","how","\"histogram\"","`#(not-same?","if","if","about","how","that","I","how).","if","stands","that","if","how","about","why","when","what's","that","that","how","how","why","what","you","I","that's","if"],"not sure.":["Would"],"not surprised":["in"],"not tail-recursive,":["so"],"not technically":["an"],"not tell":["much"],"not test":["what"],"not that":["hard","critical","terribly","exercism"],"not the":["string","`last`","domain.","only","*why*.","higher-level","intention.","function","best","public","mutated","same","domain","`(apply","acids","encolsing,","best"],"not think":["this","of","string"],"not this":["\"feels\"","\"feels\""],"not thought":["of"],"not through":["the"],"not to":["use","pull","make","the","use","do","pass","influence","clutter","mention","so","do","\"DRY\"","use"],"not to,":["as"],"not tonight":["either."],"not too":["familiar","hung","fond","happy","nit-picky","unfamiliar","sure","fast."],"not totally":["clear"],"not type.":["So"],"not typing":["the"],"not uncommon":["to"],"not until":["I"],"not use":["string/replace.","a","them","```join```","`.endsWith`","directly","the"],"not used":["elsewhere.","that."],"not using":["strings","Java","them","`empty?`","`last`","conditionals","it"],"not very":["sure","proficient","easy","fun,","pleasing","pleased"],"not vice":["versa?","versa,"],"not want":["them"],"not what":["you","you're","I"],"not with":["every"],"not within":["set"],"not without":["adapting"],"not work":["when","for","if"],"not worry":["about"],"not worth":["it","the"],"not worthy":["of"],"not write":["this"],"not yelling":["then"],"not yet":["familiar"],"not your":["real"],"not! exercism":["seems"],"not, my":["current"],"not-blank?, this":["can"],"not-silent check":["in"],"not. :)":["I"],"not. However,":["nothing"],"not. I":["will"],"not. I'd":["be"],"not. It":["seems"],"not. Precedence":["is"],"not. Since":["in"],"not. Some":["argue"],"not. TBH,":["I"],"not. Though":["I'd"],"not. `some`":["and"],"not= (map":["base-word"],"not= s1":["s2)`."],"not= strand":["other)`"],"not= was":["gone"],"not=, and":["="],"not=`, you":["have"],"notation for":["the","your"],"notation like":["`(.upper-case"],"notation may":["be"],"notation that":["ignores"],"notation to":["be"],"note on":["this"],"note that":["Googling","in"],"note, I":["finally"],"note, do":["you"],"note, you're":["mixing"],"note: I":["am"],"noted before":["but"],"noted it":["was"],"noted previously,":["it"],"notes on":["how"],"nothing about":["dna"],"nothing actually":["wrong"],"nothing but":["a"],"nothing in":["the","the"],"nothing more":["than"],"nothing obligatory.":["Nice."],"nothing stands":["in"],"nothing that":["``frequencies```","the"],"nothing to":["nitpick.","_and_"],"nothing wrong":["with","with"],"nothing? Something":["that"],"nothing? str/blank?)`":["which"],"notice is":["that"],"notice that":["this","the"],"notice that.":["I"],"notice, previously,":["that"],"noticed -":["I"],"noticed line":["2"],"noticed most":["idiomatic"],"noticed that":["I've","I","I"],"noticed this":["iteration.","I"],"noun and":["returning"],"novice so":["I"],"now \"nucleotide-counts\"":["is"],"now (more":["clearly)"],"now I":["have","think","have","understand","found"],"now I'll":["certainly"],"now I'm":["on"],"now `one-or-it`":["as"],"now as":["that"],"now but":["I","`vec`"],"now depends":["on."],"now determined":["by"],"now is":["the"],"now it":["works...","looks"],"now it's":["not"],"now looking":["at"],"now more":["into"],"now public.":[":("],"now remove":["unused"],"now returns":["a"],"now simplify":["your"],"now somewhat":["surprised"],"now that":["I"],"now the":["examples"],"now this":["is"],"now totally":["independent."],"now using":["last"],"now we":["seem"],"now what":["is","is"],"now where.":["Although"],"now without":["the"],"now would":["make"],"now you":["don't"],"now) the":["regex"],"now, I":["wouldn't","reckon"],"now, all":["I'm"],"now, and":["I","I"],"now, appreciate":["some"],"now, but":["there’s"],"now, i":["wonder"],"now, it":["looks"],"now, since":["it's"],"now, so":["hopefully"],"now, that":["I"],"now, the":["implementation"],"now, without":["the"],"now. Please":["check"],"now. That'll":["simplify"],"now. `declare`":["will"],"nowhere have":["I"],"ns declaration":["may"],"ns directive":["to"],"ns form":["is","to"],"ns form;":["that"],"ns like":["`phrase`,"],"ns macro":["so","instead","instead","here.","in"],"ns macro,":["but","but"],"ns special":["form."],"nth of":["each"],"nucleobases of":["DNA."],"nucleobases stored":["in"],"nucleotide \"X\"":["from"],"nucleotide and":["convert"],"nucleotide appears":["in"],"nucleotide called":["mornine"],"nucleotide characters":["to","to","to"],"nucleotide chars":["to","to"],"nucleotide count":["from"],"nucleotide from":["our"],"nucleotide is":["valid","\\X,","not"],"nucleotide names":["between","instead"],"nucleotide namespace":["and"],"nucleotide strand":["as"],"nucleotide symbols":["into"],"nucleotide to":["count"],"nucleotide we":["want"],"nucleotide with":["another,"],"nucleotide), the":["contains"],"nucleotide)` Doesn't":["count"],"nucleotide)` as":["a"],"nucleotide)`? I'm":["still"],"nucleotide, then":["why"],"nucleotide, we":["would"],"nucleotide-count, which":["incidentally"],"nucleotide-counts and":["count"],"nucleotide-counts could":["be"],"nucleotide-counts is":["really"],"nucleotide-counts just":["so"],"nucleotide-counts uses":["count,"],"nucleotide-counts, and":["not"],"nucleotide? How":["do"],"nucleotides --":["I"],"nucleotides are":["so","represented"],"nucleotides behind":["symbols"],"nucleotides bindings,":["they're"],"nucleotides characters":["to"],"nucleotides chars":["to"],"nucleotides enhance":["readability"],"nucleotides from":["the"],"nucleotides have":["to"],"nucleotides in":["source","two","there","the","the"],"nucleotides is":["far"],"nucleotides it":["could"],"nucleotides not":["appearing"],"nucleotides seemed":["a"],"nucleotides should":["have"],"nucleotides so":["that"],"nucleotides to":["target's","RNA","keep"],"nucleotides were":["anything"],"nucleotides would":["be"],"nucleotides, and":["one"],"nucleotides, but":["now"],"nucleotides, doing":["fancy"],"nucleotides, it":["would"],"nucleotides, it's":["invalid\"."],"nucleotides, then":["use"],"nucleotides, which":["is"],"nucleotides. A":["set"],"nucleotides. Once":["you"],"nucleotides. This":["should"],"nucleotides. Using":["frequencies"],"nucleotides? You":["might"],"nudges in":["an"],"null case":["perfectly"],"nulled out.":["I"],"number (drop":["begin)"],"number [])`":["is"],"number and":["make","use"],"number being":["serial.","tested."],"number classes":["to"],"number could":["be"],"number in":["the"],"number intact":["if"],"number is":["invalid"],"number may":["be"],"number of":["nucleotides","the","elements","inputs.","different","functions","things","letters","steps","arguments).","capital","exercises"],"number predicates":["would"],"number sequence":["however."],"number sped":["up"],"number to":["improve","determine"],"number validation/cleaning":["twice"],"number would":["be"],"number) [])`.":["You"],"number, but":["the"],"number. At":["it"],"number. They":["are"],"number/letter match":["and"],"number? What":["things"],"number_length calls":["only_digit."],"numbers already.":["You"],"numbers did":["in"],"numbers difficult":["to"],"numbers go.":["I"],"numbers of":["things"],"numbers so":["it's"],"numbers they":["are..[oddly"],"numbers\" but":["for"],"numbers, no":["matter"],"numbers, since":["\\w"],"numbers, so":["it"],"numeric characters":["from"],"numerous times":["which"],"nuts about":["(require)"],"obfuscate a":["serial"],"obfuscates the":["code","code,"],"obfuscation, too.":["This"],"object and":["related"],"object, I":["can't"],"object, sort":["being"],"object. Anyone":["willing"],"objects. Second,":["I"],"objects. So":["props"],"obligatory though.":["You"],"obscure. I":["think"],"obscured by":["escaping)"],"obscured. Once":["again,"],"obscures the":["purpose"],"observation :":["the"],"observation. Yeah,":["typically"],"observations about":["your"],"observe that":["`(="],"observed, the":["order"],"observed, you":["don't"],"obsolet when":["using"],"obtained by":["a"],"obtaining corresponding":["RNA"],"obvious as":["expressed"],"obvious at":["first"],"obvious fit":["for"],"obvious mistakes,":["I"],"obvious overkill":["and"],"obvious reason":["to"],"obvious since":["I"],"obvious to":["see","the","a"],"obvious way":["of","of"],"obvious, but":["not"],"obvious. Thanks":["for"],"obviously also":["work."],"obviously bad":["code,"],"obviously can't":["go"],"obviously doesn't":["have"],"obviously doing":["so"],"obviously not":["anymore."],"obviously works,":["I"],"occur atomically.":["All"],"occur to":["me"],"occurred to":["me","me"],"occurrences by":["hand!"],"occurrences of":["`\\w+`","thymidine","cytosine"],"odd `valid-nucleotide?`":["function"],"odd to":["me","conclude","me."],"odd. Wouldn't":["it"],"of \"ACTG\"":["was"],"of \"Say":["that"],"of \"Whatever\",":["I'm"],"of \"declarative\"":["assertions"],"of \"everything":["in"],"of \"hasher\"":["because"],"of \"heard\",":["since"],"of \"is\"":["or"],"of \"s\"?":["Similarly,"],"of 't-to-u'.":["I"],"of 'thinking":["out"],"of (def":["sth"],"of (fn":["…)"],"of (ns)":["rather"],"of *nitpick*":["but"],"of *words*.":["And"],"of -&gt;&gt;":["in"],"of ...":["erm"],"of .endsWith.":["A"],"of .isEmpty,":["and"],"of 1":["themselves?"],"of 100":["if"],"of 1986":["Scheme"],"of 2":["spaces","spaces"],"of 4.":["2"],"of 45":["letters"],"of 65":["instead"],"of :use":["and"],"of :use/:only?":["I"],"of \u003ccode\u003eletfn\u003c/code\u003e":["functions"],"of Atoms":["(or"],"of Bob":["is","that","using"],"of Clojure":["I","code","code.","API","experience.","and"],"of Clojure\"":["and"],"of Clojure's":["built-in"],"of Clojure.":["Leiningen"],"of DNA":["and","literals","literals","literals"],"of DNA.":["So"],"of DNA/RNA.":["I"],"of Elixir's":["`Enum.count/2`"],"of Emacs-Lisp":["and"],"of FP":["in"],"of Hamming":["Distance","distance."],"of Java's":["`endsWith`","reference"],"of Lisp":["reading"],"of NLP":["based"],"of NUMBERS":["and"],"of O(n":["*","*","*","log"],"of Python":["(Counter"],"of RNA":["literals","literals",";-)"],"of RegEx":["functions."],"of String":["is"],"of XUnit":["test"],"of [`defn-`](http://clojuredocs.org/clojure_core/clojure.core/defn-)":["for"],"of [this":["seciton](http://clojure.org/special_forms#Special"],"of \\p":["is,"],"of `#{A":["C"],"of `%1`":["if"],"of `(/":["(on-earth"],"of `(=":["first","0"],"of `(BigInteger.":["\"2\")`."],"of `(\\w+)`,":["then"],"of `(anything?":["saying)`?"],"of `(def":["function-name"],"of `(if":["XYZ"],"of `(int":["\\A)`"],"of `(into":["[]"],"of `(last":["(first"],"of `(range":["65"],"of `(string/join":["(map"],"of `(zero?":["foo)`"],"of `-&gt;`":["to"],"of `-›`":["here."],"of `.endsWith`.":["It's"],"of `.pow`":["as"],"of `.toLowerCase`,":["but"],"of `48`":["so"],"of `:as":["string`,"],"of `:require/:refer`":["is"],"of `:require`":["`:refer`"],"of `:scalene`":["matches"],"of `:use`":["in","which"],"of `[word,":["candidates]`."],"of `\\U`":["in"],"of `\\W`,":["so"],"of `\\w+`":["by:"],"of ```#'```":["from"],"of ```(.trim":["what-bob-heard)```"],"of ```(split":["#\"[\\W]+\")```"],"of ```:use```.":["See"],"of ```defn-```":["to"],"of ```dna/to-rna```":["is"],"of ```str```":["instead?"],"of ```subs```":["functions"],"of `add`":["instead"],"of `all-nucleotides`":["and"],"of `all?`":["by"],"of `alphabetizes-to?`":["with"],"of `anagrams-for`":["as"],"of `anagrams`.":["This"],"of `apply`,":["as"],"of `apply`.":["I"],"of `atom`":["and"],"of `b`":["only"],"of `base-word`":["and"],"of `bottle`":["or"],"of `bottles`,":["`case`"],"of `c`.":["Can"],"of `clojure.core`.":["I"],"of `clojure.string/blank?`":["and"],"of `clojure.string/join`":["you"],"of `clojure.string/lower-case`":["calls"],"of `clojure.string`":["when"],"of `combine-map-with`":["function"],"of `cond`":[".","in","vs"],"of `condp`":["could","interesting"],"of `count-nucleotides`":["-"],"of `def`":["in","for"],"of `default?`":["in"],"of `defn-`":["macro."],"of `defn`?":["Also,"],"of `defn`s":["is"],"of `dna`":["after"],"of `downcased-phrase`":["which"],"of `empty?`":["and","instead."],"of `ends-with?`,":["for"],"of `every-pred`":["and"],"of `except-self`":["even"],"of `filter`,":["`map`"],"of `first`":["and"],"of `fn`":["in"],"of `fnil`":["and"],"of `format`":["style"],"of `frequencies`":["--","here?","here!","also","and","by"],"of `frequencies`,":["as"],"of `frequencies`.":["I","I"],"of `get`":["in"],"of `if`":["that","for","in"],"of `inc`":["and"],"of `is-questions`":["using"],"of `java.lang.Character`":["static"],"of `java.lang.Character`'s":["static"],"of `join`":["and"],"of `join`.":["`get`"],"of `last`":["to"],"of `let`":["form.","and","with"],"of `let`,":["for"],"of `letfn`;":["however,"],"of `map`":["but","-","form"],"of `map`,":["as"],"of `mapv`":["instead"],"of `mapv`.":["`anagram?`"],"of `memoize`":["to"],"of `merge-with`.":["The"],"of `merge`":["and"],"of `no-non-caps?`":["can"],"of `noralize`,":["`freqs`"],"of `ns`":["(and"],"of `nucleotide-counts`?":["There"],"of `number`":["is"],"of `or`":["when"],"of `partial`":["to","in"],"of `partial`.":["The"],"of `partition":["2`"],"of `question?":["`"],"of `random-string`":["and"],"of `re-seq`":["if","directly"],"of `reduce-kv`,":["pretty"],"of `reduce`":["and"],"of `reduce`.":["Have"],"of `reductions`":["is"],"of `require`":["-","usage"],"of `response-for`":["is","on","and","and","or","method,"],"of `response-for`:":["comments"],"of `response`":["instead"],"of `response`.":["If"],"of `reverse`,":["you"],"of `seq`":["based"],"of `set-name`":["-"],"of `shouting?`":["rather"],"of `silence?`":["accordingly."],"of `sing`":["like","is"],"of `some`":["and","is"],"of `sort`":["was"],"of `sort`,":["since"],"of `sorted`,":["using"],"of `sorted`.":["Good"],"of `str`":["and","here?"],"of `string/split`":["so"],"of `to-rna`":["out"],"of `translate`,":["you"],"of `true`":["for"],"of `use`":["functions"],"of `vec`":["and"],"of `word-count`":["capture"],"of `word`":["to"],"of `yell?`":["doesn't"],"of a":["different","seq.","way","RegEx","`cond`.","mystery","newbie","magic","simpler","`cond`","single","regular","`cond`.","set","regular","more","string?","way","string?","way","string?","string?","string?","string.","string?","way","clojure.core","string","given","fact","core","hash-map.","string.","strand.","fn),","regex","given","better","personal","way","shorter","word,","string","string","way","better","function","public","way","public","way","way","bigger","public","great","better","form","function,","way","difference","sequence.","hint?","deal,","concept.","function","threading","contract,","pause","tiny","generated","private","better","piece","hash-map","good","particular","map.","nucleotide","conversation","small","more","regular","(US)","(US)","set","RE","current","role","comparable","lazy","given","`doseq`","double","`cond`","`for`","character.","bigint.","good","full-on"],"of about":["3"],"of abstraction":["provided","than","is","putting","inside","that","and","right","would","lower.","they","pretty","and"],"of abstraction.":["It's"],"of abstractions":["in"],"of accuracy":["-"],"of adding":["those","noise"],"of alanpeabody's":["suggestion"],"of all":["counts","the","the","non"],"of all,":["you"],"of allowed":["characters"],"of alphabetic":["characters"],"of already":["generated"],"of an":["advantage","obfuscation,","own","empty","overkill","experiment","overkill","authority","argument","explanation","item."],"of anchors":["to"],"of anonymous":["functions.","functions","functions"],"of any":["explication.","explication.","performance"],"of apply":["by"],"of argument":["for"],"of arguments":["but"],"of as":["a"],"of assert":["and"],"of atoms":["and"],"of avoiding":["the","to"],"of awkward":["to","to","and"],"of awkward.":["I"],"of becoming":["disconnected"],"of beer":["on","on","permutations"],"of beer\"":["...)`."],"of beer.\")`.":["Of"],"of being":["less"],"of benefit":["in"],"of beverage":["in"],"of binding":["them"],"of biology,":["and"],"of blank?":["is"],"of blank?,":["you"],"of booleans,":["then"],"of bottles":["(`count-string`"],"of cache,":["but"],"of calling":["directly","the"],"of calls":["to","to"],"of capital":["letters","letters,"],"of case":["must"],"of chaining":["operations","every","in"],"of character":["literals"],"of characters":["by","(no","(no","with","can","(I","in","in","by","where","long?","to","instead","where","already.","already."],"of characters,":["so"],"of characters.":["`*-from-pair`","You","Character","Consider"],"of characters;":["eg."],"of chars":["so","rather"],"of checking":["that"],"of clarity":["-"],"of classification":["from"],"of cleverness":["here"],"of clojure":[":)","I've"],"of clojure\"":["was"],"of clojure's":["libraries"],"of clojure.core/frequencies,":["I"],"of clojure.string":["without"],"of clojure.string/blank?.":["I"],"of closing":["brackets.","parenthesis,","parens","brackets"],"of code":["shouldn't","on","for","developed","you","should","a","I","seriously...","nonetheless!","needed.","into","are","here.","to"],"of code,":["rather","so"],"of code.":["Thanks","I","So"],"of code;":["but"],"of coding":["guidelines,"],"of collection":["it"],"of collisions":["between"],"of concision":["and"],"of cond":["in","in"],"of conditional":["logic"],"of conditionals":["instead."],"of conditionals.":["Inspired"],"of conditions":["to"],"of confusing,":["though,"],"of consistency,":["as"],"of constants":["use"],"of constants\"":["means","means"],"of contracts":["utlizing"],"of control.":["It"],"of convenient":["to"],"of convention,":["but"],"of converting":["matched"],"of counting":["occurrences"],"of coupling":["between"],"of course":["have","if","if","does"],"of course)":["would"],"of course,":["thank","```default?```","any","but","but","I","but"],"of creating":["globals."],"of cytosine":["**C**"],"of data":["structures),","transforming"],"of daylight":["saving"],"of deeply":["nested"],"of def":["as"],"of defining":["```split```","them"],"of definitions":["so"],"of defmacro":["here"],"of defn":["to"],"of delimiters,":["how"],"of dereferencing":["r"],"of destructuring":["in"],"of determining":["whether"],"of development":["-"],"of different":["lengths.","inputs.","levels","exercises"],"of digits":["makes"],"of direct":["comparison.","recursion","recursion"],"of diving":["into"],"of dna":["grows,"],"of documenting":["functions,"],"of doing":["a","that.","the","it","this.","this"],"of double":["negation."],"of duplicating":["the","its"],"of duplication":["between","between","in"],"of each":["condition","phrase","other.","function,","other.","of"],"of early":["termination"],"of efficiency,":["you","it"],"of effort":["in"],"of elements":["in"],"of eliminating":["special"],"of empty?":["and","and","and"],"of encoding":["that."],"of evaluating":["previous","what"],"of every?,":["although"],"of exception":["or"],"of excessive":["nested"],"of exercises":["where"],"of exercism":["is"],"of exercism,":["I"],"of exercism...":["will"],"of exercism.io":["I"],"of experimenting":["during"],"of explicitly":["naming","throwing"],"of exploding":["out"],"of exposure":["to","to"],"of expressing":["it"],"of extending":["that"],"of external":["specification."],"of extras":["for"],"of familiarity":["and/or","and"],"of familiarity.":["Higher"],"of familiarizing":["you"],"of features":["later,"],"of feedback":["is"],"of fiddling":["directly"],"of filtering":["out"],"of filters.":["I"],"of fn":["literal,"],"of fns":["and"],"of for":["iteration"],"of form/expression.":["I"],"of frequencies.":["Great!","It"],"of function":["will","declarations","e.g.","composition"],"of function's":["arguments"],"of function,":["like"],"of functionality":["that"],"of functions":["and","gets","around","that","from","and"],"of functions,":["etc.,","create"],"of functions.":["Maybe"],"of future":["readers,"],"of general":["conditions."],"of generating":["names","functions"],"of getting":["used","rid","the","the"],"of going":["directly"],"of goodies,":["use"],"of google":["+"],"of greatly":["simplifying"],"of handcrafted":["code"],"of handling":["the"],"of happy":["with"],"of having":["to","`add-name-to-grade`","to","to","to"],"of hearing":["nothing?"],"of heavy.":["that"],"of helper":["functions."],"of higher":["order"],"of how":["this","the","code","`map`","it's","it's","this","they're"],"of idiomatic":["lisp","thing"],"of implementation":["is"],"of implementation)":["that"],"of includes-letters?":["looks"],"of including":["the"],"of inconsistency":["in"],"of incremental":["counter."],"of indentation":["in","as"],"of indexOf":[".."],"of indirection":["really"],"of indirection.":["But"],"of inline":["computations"],"of input":["to"],"of inputs":["have"],"of inputs,":["as"],"of insightful":["idea"],"of intent":["in"],"of intention-revealing":["names.","names"],"of interest":["for"],"of interest.":["Maybe","As"],"of interesting":["because"],"of interop":["calls."],"of ints.":["It"],"of is":["Regexp.","something"],"of it":["could","is","into","by","either","only","as:","afterwards)."],"of it,":["I"],"of it.":["You","Many"],"of its":["meaning.","parameters.","intent."],"of itself":["(i.e."],"of itself.":["I"],"of java":["String"],"of joining":["on"],"of just":["using","`map`?","making","cleaned"],"of keeping":["it","state,"],"of key":["bits"],"of knowledge":["I"],"of labelled":["number"],"of lazy":["or"],"of leaning":["towards"],"of least":["surprise.","surprise."],"of let":["should","to"],"of letters":["in"],"of letters.":["This"],"of libraries.":["It"],"of lifting":["the","it"],"of like":["this"],"of line":["4.","7","11."],"of lines":["can"],"of lists,":["and"],"of logic":["without","in"],"of loop/recur.":["That"],"of lost":["track"],"of lower-case":["clean"],"of lower-casing":["the"],"of magnitude":["faster"],"of maintenance":["-"],"of making":["fns"],"of many":["thousands"],"of map":["lookups:","like"],"of map.":["As"],"of mapping":["over","over","over","over"],"of maps":["like"],"of matching":["parentheses","`[a-z]`"],"of meaning":["you"],"of memory":["used."],"of message":["Bob","has"],"of message's":["response"],"of message-type":["and"],"of methods?":["I"],"of minor":["points:","points:","improvements:"],"of mixing":["string"],"of more":["of"],"of moving":["all"],"of multiple":["`if`s.","full","scans."],"of mutual":["recursion"],"of my":["`count-falsey`","own","very","first","collection","code.","code.","ruby/bob","day-job","head","biggest","first","Python","haskell","depth","code.","helpers","own"],"of names,":["not"],"of names.":["That's"],"of naming":["things","methods","is"],"of native":["Clojure."],"of needing":["to","a"],"of negative.":["I'll"],"of nested":["`if`","`if`s?","`if`","`if`s","ifs,","calls","lists."],"of nesting":["`if`s.","`if`s.","multiple","ifs"],"of new":["things!","other"],"of nice":["clojure"],"of niceties":["like"],"of nitpicking,":["but"],"of noise":["and"],"of non-word":["characters."],"of normalize":["works"],"of normalized":["characters."],"of not":["removing","having"],"of note":["on"],"of nucleotide-counts":["just","and"],"of nucleotides":["in","in","in","it"],"of observations":["about"],"of odd":["to"],"of one":["line","thing","name!","argument","function"],"of one-way":["hash"],"of operation":["even"],"of opportunity":["for"],"of other":["robotic","things"],"of overlap":["in"],"of pairs":["you're"],"of parallelism":["that"],"of parens":["instead"],"of parentheses":["-"],"of parentheses.":["There's"],"of partial":["instead"],"of particular":["checks","checks"],"of passing":["the","an","sequences","the"],"of pause":["-"],"of people":["have","in"],"of performance":["is","versus"],"of performance:":["You"],"of personal":["preference,","preference","preference.","preference."],"of phrase":["should"],"of phrase,":["then"],"of playing":["with."],"of pre-filtering":["based"],"of precious":["vertical"],"of preconditions":["should"],"of predicates":["-","and"],"of preference":["-","-"],"of preference)":["you"],"of preference,":["I","but","because","but"],"of preference.":["For","I"],"of premature":["optimization?"],"of pretty":["much"],"of preventing":["the"],"of private":["functions"],"of problem":["as"],"of problem-specific":["predicates"],"of problems":["here,"],"of processing":["`word`","everything","the","word","the","the","`word`","`word`","the","the","the","functions,","the"],"of public":["API."],"of python":[";)"],"of random":["collisions."],"of re-seq.":["Would","I"],"of readability":["have","-","with"],"of reader":["macros"],"of reading":["the"],"of real":["code."],"of reasons":["that"],"of recreating":["its"],"of recursion":["here.","for","for"],"of reduce.":["From"],"of reducing":["duplication"],"of ref":["per"],"of ref.":["Was"],"of regex":["#\"[a-zA-Z]\"","to","you"],"of regexes":["will"],"of regexp":["checks","checks"],"of regular":["expressions?","expressions","expressions.","expressions"],"of relying":["on"],"of repeat":["n;"],"of repeatedly":["processing"],"of repeating":["a"],"of repetition":["in"],"of replacing":["characters","characters","all"],"of resorting":["to","to"],"of responding":["with"],"of response":["and"],"of response-for":["are"],"of response-for,":["because"],"of response-for-basic":["and"],"of response-for:":["comments"],"of responses?":["At"],"of returning":["a","`:default`"],"of reuse":["without"],"of robot's":["name"],"of room":["for"],"of running":["the"],"of sanitizing":["and"],"of scrubbing":["invalid"],"of searches.":["Please"],"of see":["the"],"of selecting":["the"],"of separate":["function"],"of separating":["the"],"of sets,":["additional"],"of shortcuts,":["when"],"of shortest":["collection."],"of simplification":["here."],"of simply":["robot-name."],"of single-character":["strings."],"of small":["sugar"],"of some":["code.","other","of","sort"],"of something":["like","like"],"of sort":["is"],"of sorting":["a"],"of sorts":["which"],"of sorts,":["but"],"of split":["and"],"of splitting":["on","up","on","each","the"],"of square":["brackets."],"of stack":["trace"],"of stands":["out"],"of state":["machine."],"of statement?":["I"],"of steps":["and"],"of steps,":["which"],"of still":["working."],"of stopping":["at"],"of str/trim":["here."],"of string":["concatenation","won't","interpolation"],"of string,":["but"],"of strings":["for","twice.","from"],"of structure":["in"],"of stuff":["together","at","crammed","crammed"],"of stumbled":["upon"],"of style":["guidelines","and"],"of style,":["but"],"of styling":["points"],"of submitting":["code"],"of such":["praise","a"],"of sugar":["for"],"of suggestions,":["though:"],"of surrounding":["strings.","string","string"],"of symbols":["without","outside"],"of syntactic":["overhead"],"of tackling":["this"],"of taste":["I","and","though.","to"],"of taste,":["but","there's","and"],"of taste.":["Looks",";-)"],"of test,":["as"],"of testability...)":["that"],"of testing":["`s`"],"of testing,":["I"],"of tests":["is","did"],"of that":["nature","function.","ugly","process?","bikeshedding","convoluted","word.\"","can","constructor","assignment","call","but","to","exactly,"],"of that!":["Now"],"of that,":["I"],"of that.":["Looks","Also,","Thanks"],"of the":["four","options","responses","test","latter,","tests?","specs","domain,","conditions","string?","other","methods","string.","string","\"?\"","string","last","characters","parameter",".toUpperCase","functions","two","scope","exercise.","domain","reader.","sequence","risk","code,","habit","implementation.","argument","check?","same","conditions.","predicates.","module's","Seq","current","last","differences","transformation","`recur`","expected","domain.","`clojure.core`","work","initial","code.","`(remove","`require`,","primary","problem.","type-responses","conditional.","submission...","function?","nucleobases","symbol","last","`letfn`","test","`default-nucleotide-counts`","exception","nucleotide","clutter","set","processing","code","function","anonymous","type","previous","same","filter","tests","bob","code","processing","tradeoff","defn","assignments","empty","regex","clojure.string","testing","law","function","no-op","more","response","verse","way","forms","`contains?`","java","fully","result","starting","raw","name","deprecation.","number","input.","Java","string","function,","function","shortest","nested","trimmed","last","fn","solution,","conventions?","name.","(pesky)","problem","special","phrase","`normalizations`","solution","expressiveness","`(remove","duplicate","problem.","tests","output.","comments","Clojure","solution","source","string","logic.","library","number","phrase","duplication","problem.","functions","very","cond","include","other,","code.","sing","`reduce`","functions","initial","code.","file","function","words","name","code","two","public","conditionals","same","public","last","regular","regular","problems","regular","conditions.","expressions","`get`","time,","public","feature","public","problem","input","song,","declarations","things","namespace","other","fact","function","if","intent.","function.","`word-count`","`not`","(sub)intentions","site.","box","other","checks.","many","whitespace","input","cases","double","implementation","previous","input","definition","problem.","java.util.Calendar","work","first","phrase","map-reduce","`cond`","Clojure","helper","`word`","books","`word-count`","word,","differences.","options,","method","time","tests","function","DNA","Clojure","specification?","specification?","time","above.","string.","correct","`let`","namespace,","interleaved","values","month","work","functions","standard","blank?","file","hack","\"default","work","required","program.","code","original","`other-words`?","`if`","`new`","implementation","file?","string?","function","file.","split","Java","input","letters","closing","previous","characters.","domain's","transformation.","expression","function.","function","function","`and`-ed","responses","first","code","threading","function.","README.","explicit","DNA","poor","robot","form.","code?","forms","-\u003e\u003e","shortest","other","regular","string.","fact","string","visual","thread","board","fact","simpler","Protocol.","month","month.","level","Character","levels","sorted/upper-cased","thought","`if`","string","partial","test","test","existing","ASCII","Atoms","calls","last","code","formatting","Java","previous","(.endsWith)","binding","time,","thread","Atoms","calls","macro!","functions","fact","invalids","map","box,","incoming","number","values","same","conditions","`grade`","`or`.","contains?","translation)","good","atom","same","macros,","text","atom","thrush","function","function","`cond`,","clojure","`reduce`","`remove","\"thread","features","A","`reverse`.","isYelling","recur","reference","long","DNA"],"of them":["they","would","are","and","this","are","fits","has","are","is","more"],"of them's":["an"],"of them,":["including"],"of these":["bases.","things","match?","string","design","`def`s,","if"],"of thing":["that"],"of things":["that","I","I","that","that","that"],"of things.":["I"],"of thinking":["about"],"of this":["for","exercise","function.","exercise","solution","function?","using","is","exercise","exercise","has","helps.","exercise,","exercise","function","implementation.","code.","code","function","prerequisite","site","sort","piece","over","kata","later","example","problem","without","as","code"],"of this,":["I'd"],"of those":["things","conditions","methods?","extra","languages","predicates","Clojure","might","conditions","is","collections","into","options."],"of threading":["macros","macros,","macro).","form","macros"],"of threading,":["you"],"of thymidine":["with","and"],"of timezones.":["You"],"of to":["nitpick"],"of transcribing":["a"],"of transformation":["I"],"of transformations":["that"],"of transforming":["functions."],"of transforms.":["This"],"of transients":["(locally"],"of tutorials,":["I’ve"],"of two":["because"],"of types":["or"],"of typing":["the"],"of underscore":["in","in"],"of underscores":["so"],"of unicode":["letters"],"of uniqueness":["required"],"of unnecessary":["processing","noise."],"of upper-case).":["I'm"],"of use":["case."],"of useful":["built"],"of using":["`last`","clojure.string/upper-case.","the","the","an","set","`clojure.string/replace`","explicit","`fn`,","`frequencies`.","`java.lang.Math`.","the","the","`condp`."],"of valid":["nucleotides,","nucleotides","nucleotides.","nucleotides,","nucleotides"],"of value":["in"],"of values":["such","inside","when"],"of variable":["name"],"of vectors":["in"],"of vectors)":["rather"],"of view,":["I'd"],"of want":["to"],"of weeding":["out"],"of what":["I'm","you","appears","an","you","ever","you"],"of what's":["going","going","going"],"of whatever":["wraps"],"of where":["trying"],"of which":["you"],"of whitespace":["between"],"of whitespace,":["how"],"of why":["it's"],"of will":["than"],"of words":["from"],"of words.":["Finally,","This"],"of writing":["out","clean","I","that"],"of wrong":["characters"],"of x":["and"],"of you":["past","current"],"of your":["checks?","tests?","check","checks?","\"approved\"","`last_char`.","function","past","past","past","past","past","past","past","code","past","past","past","past","past","past","work","`and`","checks","implementation","internal","random","solutions?","```to-rna```","helper","functions","\u003ccode\u003eresponse-for\u003c/code\u003e","parameters?","wrapper.","function","checks","cases","feedback."],"of zero":["values,"],"of\" (or":["the"],"of) but":["that's"],"of, and":["which"],"of, just":["by"],"of. Currently":["ignores"],"off -":["don't","please","generally"],"off a":["cond"],"off as":["good"],"off but":["I"],"off by":["30","the"],"off if":["you"],"off into":["private","a"],"off is":["a"],"off just":["because"],"off not":["generating"],"off scanning":["the"],"off the":["`silence?`","page"],"off to":["a"],"off with":["this"],"off-by-one errors.":["It"],"off. Anyway,":["I"],"off. Bindings":["should"],"off. Please":["don't"],"off. Unlike":["other"],"offer a":["different"],"offer any":["nudges"],"offer. You":["could"],"official clojure":["documentation"],"often (but":["admittedly"],"often (probably":["in"],"often I":["try"],"often a":["good","good","good"],"often agree":["that"],"often an":["indicator"],"often anymore.":["You"],"often bend":["Regular"],"often come":["handy"],"often define":["\"magic"],"often easier":["to"],"often good":["to"],"often idiomatic":["to"],"often makes":["things"],"often more":["idiomatic"],"often overlook":["that"],"often preferred":["over"],"often reserved":["for"],"often see":["for"],"often use":["regexes"],"often used":["symbols"],"often written":["as","as","as"],"often, thanks":[":)"],"oh thank":["you"],"oh yeah!":["whoops."],"oh, it's":["not"],"ohh noes,":["newline"],"ok already":["anyway."],"ok. I'm":["only"],"old Java":["habits"],"old java.util.Date":["class."],"omit \u003ccode\u003eis-\u003c/code\u003e":["beacuse"],"omit `1`":["in"],"omit the":["new","`is-`","\"is\"","lambda"],"omit those":["entries"],"omitted the":["extra"],"ommitted with":["proper"],"on \"universe\";":["I"],"on -&gt;&gt;.":["I"],"on 4clojure":["I"],"on :)":["It's"],"on Bob":["so"],"on Clojure":["macros","string"],"on Clojure's":["reducers"],"on IM?\",":["he"],"on L9":["as"],"on NS":["and"],"on SO":["that"],"on ```:as```":["versus"],"on ```frequencies```,":["it"],"on `clojure.string`":["that"],"on `cond`,":["but"],"on `condp`":["and"],"on `defn-`":["and"],"on `empty-dna-frequencies`":["(use"],"on `equal-length`,":["as"],"on `nil`":["in"],"on `re-seq`":["as"],"on `sequence`,":["but"],"on `silence?`.":["You're"],"on `word-count`,":["since"],"on `word`":["once"],"on a":["different","function.","separate","separate","new","deterministic","predicate","single","string","line","different","new","new","`map`,","seldom","line","separate","\"word\"","single","personal"],"on an":["empty","implementation","empty"],"on another":["look","exercise!"],"on any":["sentence","sequence"],"on at":["the"],"on balance":["I"],"on built-in":["functions"],"on character":["level."],"on clojure's":["built"],"on code":["formatting:","considerably."],"on comments":["elsewhere"],"on completely":["orthogonal"],"on count":["function."],"on each":["word"],"on etrepum's":["advice."],"on every":["call.","call.","usage."],"on everyone":[":)"],"on everything":["else?"],"on expressive,":["readable"],"on formatting":["and","and"],"on frequencies.":["By"],"on functional":["decomposition."],"on good":["abstractions,"],"on google":["groups."],"on groups":["of"],"on here":["pointed"],"on here!":[":)"],"on here,":["and"],"on here.":["Would"],"on here:":["http://exercism.io/submissions/509c816d8a4ccaa34e254025"],"on how":["this","to","you","I","to","Clojuresque","to"],"on http://exercism.io/submissions/51fd9cf6df1d8bf5630000e1":["as"],"on http://exercism.io/submissions/51febc6b3f8cb9ba45000108":["—"],"on in":["one","the","several"],"on indentation,":["as"],"on it":["any","last","until","too"],"on it's":["own","own"],"on it,":["and"],"on it.":[":)","I"],"on its":["own","own","own","own","own","own,","\"imperative\"","own","argument,","own."],"on its'":["own"],"on large":["DNAs,"],"on last":["submission."],"on length.":["But"],"on line":["14,","7,","11.","6.","9","14,","10","13","14.","9!","19","19.","15","24."],"on lines":["of","7","12-14","10"],"on merging":["the"],"on multiple":["collections"],"on my":["phone","knowledge","first","mind","nitpick","Elixir","original","github","use","laptop.","third","third"],"on naming":["conventions,"],"on new":["lines"],"on non-word":["characters,"],"on one":["line.","line:","line.","line","line.","or"],"on performance":["testing!"],"on phone":["and"],"on previous":["submission!","feedback:","feedback"],"on putting":["a/b"],"on regex":["may"],"on regexps":["where"],"on regular":["expressions","expressions.","expressions","expressions"],"on remembering":["`assert`"],"on removing":["the"],"on response":["twice"],"on same":["line"],"on second":["thought,"],"on separate":["lines,"],"on separating":["the"],"on sequences":["as"],"on sets":["working"],"on simple":["rules."],"on simplified":["submission!"],"on small":["strings"],"on some":["of","more"],"on something":["that"],"on sort.":["I"],"on sorting":["being"],"on spoken":["language"],"on strewn":["throughout"],"on strings":["which"],"on strings,":["so"],"on style":["and","-"],"on style,":["because"],"on that":["might","path.","function","one.","false","in"],"on that)":["but"],"on that,":["I"],"on that.":["Yes,","I","It"],"on the":["readme.","readme.","idea","exact","end","last","last","following","same","kind","return","fence","value","part","last","predicate","readme","JVM,","line","`:require`,","references","way.","javascript","same","same","fence.","Haskell","same","`.endsWith`,","same","same","`:only`","same","\"less","wall.\")`","naming","wall,","order","same","feedback","wall,","matter","same","first","style","Clojure","last","fence","name","feed","negative","other","size","`String`","cond","right","eyes.","string","next","input,","same","top","end","assignment","business","fence","current","test","input","[Clojure","hanging","implicit","way","last","line","`(\u003e","word.","subject,","full","input","order,","\"recognizes","same","same","comment,","empty","individual","same","support","top","page.","final","last","control","use","same","next","namespace","same","[coding","unused","low","tests.","same","next","last","interwebs...","last","same","last","same","commandline","mapping","right-hand","same","same","literal","result","borderline","boolean","Strings.","generators","atom"],"on their":["own","site,","own","own","own","own"],"on them":["directly"],"on them.":["Is",":)"],"on these":["problems."],"on things":["like"],"on this":["(and","site;","with","site.","way","one:","I","for","one","one.","exercise,","project.","example","topic"],"on this!":[":)"],"on this,":["imo."],"on this.":["Try"],"on those":["issues."],"on to":["the","the"],"on top":["level","of"],"on top,":["implementation"],"on two":["lines."],"on type.":["Because"],"on use.":["I"],"on using":["defn-.","`let`","clojure.string","the"],"on vacation,":["so"],"on value,":["but"],"on what":["was","you"],"on what's":["clojury"],"on whether":["this","the","it"],"on which":["function"],"on whitespace":["but","and"],"on why":["you","atom"],"on with":["the"],"on you":["code"],"on your":["predicate","last","latest","code.","last","predicate","comments.","comments.","`cond`","previous","code","parade..."],"on zipmap.":["Good"],"on zoldar's":["feedback."],"on, I'll":["unlock"],"on, and":["it"],"on, but":["I","have","you"],"on, though,":["so"],"on, though.":["Looks"],"on-mercury (partial":["on-planet"],"on-planet (planet-periods":["\"mercury\")))`"],"on-planet [planet-period":["seconds]"],"on. I":["would"],"on. That":["said,"],"on. The":["question"],"on. Would":["very"],"on? It":["may"],"once -":["passing"],"once I":["swapped"],"once again":["-"],"once and":["then","then","that","could","reuse"],"once for":["every","a","area-code)."],"once in":["sanitize-number;","a"],"once inside":["of"],"once is":["nice"],"once it's":["approved,"],"once next":["time."],"once the":["rules"],"once there":["is"],"once without":["sacrificing","sacrificing"],"once you":["try","are","have"],"once). I":["can't"],"once, and":["non-recursively."],"once, as-is":["it"],"once, but":["you"],"once, not":["with","every"],"once, rather":["than","than"],"once, while":["still"],"once, without":["sacrificing"],"once. Consider":["making"],"once. I":["also"],"once. It":["will"],"once. You":["can"],"one &":["get"],"one **is**":["mapping"],"one *real*":["upper"],"one :\\":["Should"],"one `apply":["str`"],"one accepted":["someday."],"one account":["and"],"one and":["it","one"],"one approach":["that"],"one are":["the"],"one argument":["(like","is","and","functions.","to"],"one at":["the"],"one be":["generated."],"one because":["I","I"],"one being":["reviewed"],"one better.":["Lowercasing"],"one big":["function"],"one blank":["line"],"one branch":["there's"],"one by":["one."],"one can":["get","be"],"one cannot":["delete"],"one capital":["letter*"],"one character":["would"],"one class":["but"],"one clause":["per"],"one colon:":["`:question`"],"one concise":["enough"],"one concrete":["implementation"],"one could":["argue","refactor"],"one covers":["shouting,"],"one day":["I"],"one doesn't":["have"],"one downside":["of"],"one else":["can"],"one exception":["is"],"one extra":["argument"],"one for":["just","the","alphagrams","identical"],"one from":["clojure.string"],"one function":["call.","call","to","call","is","call"],"one function,":["but","so","since"],"one go.":["Most"],"one hand,":["you"],"one has":["been"],"one helper":["from"],"one hint:":["you"],"one imagines":["Bob"],"one in":["`responseLookup`."],"one input":["in"],"one intermediary":["state"],"one is":["described","mapping","correct.","`:else`.","more","private","better?","much","ugly","better","simpler","very","definitely","easier","naming","about","private,","actually","more","only"],"one isn't":["found"],"one learning":["possibility"],"one level":["of","of"],"one line":["per","between","-","by","and"],"one line,":["also"],"one line-break":["would"],"one line.":["Maybe","I"],"one liner":["mentioning"],"one looks":["clean"],"one mapping":["the"],"one method":["but","and"],"one might":["expect"],"one minor":["thing","thing,"],"one more":["function","time","thing,"],"one must":["be"],"one name!":["So"],"one nucleotide":["with"],"one nucleotide,":["we"],"one nucleotide?":["How"],"one of":["the","the","the","the","the","the","the","the","you","your","your","your","your","your","your","your","your","your","your","your","the","your","your","the","the","my","the","them","those","the","the","the","them.","the","the","those","the","the","those","the"],"one of\"":["(or"],"one often":["easier"],"one on":["the","my"],"one or":["more","more","more"],"one other":["small"],"one out.":["Also,"],"one over":["the"],"one pair":["of","of"],"one pass":["over"],"one place":["to","and","possibly.","and"],"one place.":["What"],"one point":[":","(you'll","-"],"one predicate":["method"],"one question":["in","about"],"one rather":["than"],"one recursive":["function"],"one related":["function"],"one relatively":["simple"],"one second":["to"],"one set":["of"],"one step":["with","without"],"one step.":["After"],"one step?":["`not=`"],"one submitter's":["use"],"one such":["as"],"one suggestion:":["you"],"one takes":["the"],"one technique":["that"],"one test":["case"],"one that":["maps","could","evaluated","excludes","explains","I","tests"],"one thing":["is","at","jarring.","that"],"one thread":["can"],"one to":["have","use.","use.","appear"],"one too).":["So"],"one upper":["case"],"one upper-case":["character"],"one uppercase":["letter"],"one usage;":["it"],"one use":["the"],"one uses":["another."],"one versus":["2"],"one was":["so","tough"],"one way":["to","of","to"],"one were":["dealing"],"one which":["is"],"one while":["solving"],"one will":["you"],"one with":["`partial`","`filter`","`remove`.","an","a"],"one word":["is"],"one would":["have","be"],"one you":["like"],"one's head":["around"],"one) without":["a"],"one*two. At":["the"],"one, and":["mostly"],"one, by":["convention"],"one, feel":["free"],"one, generating":["a"],"one, is":["a"],"one, very":["nice"],"one, which":["lends"],"one-character names,":["since"],"one-letter variable":["names"],"one-liner that":["would"],"one-liners -":["at"],"one-liners, would":["better"],"one-liners. But":["I"],"one-offs to":["make"],"one-way hash":["would"],"one. (Whoops":["-"],"one. :)":["Resubmitting."],"one. Command":["line"],"one. For":["more"],"one. Great":["stuff."],"one. I":["have"],"one. In":["that"],"one. Is":["there"],"one. It":["made"],"one. Right":["now"],"one. The":["anon"],"one. This":["is"],"one. Though":["the"],"one. Try":["it"],"one. Was":["a"],"one. You":["can"],"one. ```replace```":["does"],"one: `inc`":["and"],"ones -":["and"],"ones I've":["been"],"ones which":["could"],"oneself a":["pair"],"only *what*":["you"],"only 2":["conditions.","conditions","conditions,"],"only :pre":["condtion"],"only DNA":["acids"],"only \\A,":["\\C,"],"only `lower-case`":["may"],"only `response-for`":["should","should"],"only `upper-case`,":["and"],"only a":["matter","toy","difference","few"],"only alias":["so"],"only allowing":["one"],"only as":["a"],"only be":["used","used","used"],"only briefly":["played"],"only calculate":["the","`(lower-case"],"only caveat":["is"],"only characters":["are"],"only check":["I"],"only clojure":["I've"],"only code.":["Filter,"],"only comment":["is","I"],"only comparisons":["in"],"only complaint":["is"],"only compute":["the"],"only confusing":["part"],"only consider":["it"],"only contain":["the","the"],"only contains":["correct"],"only core":["functions"],"only correct":["nucleotides."],"only covers":["the"],"only created":["the"],"only defining":["one"],"only difference":["between","between"],"only do":["one"],"only done":["in"],"only excuse":["is"],"only for":["protocols/types","the"],"only function":["that","that","here","that"],"only generate":["it"],"only gets":["sorted"],"only happens":["once"],"only has":["one"],"only have":["to","one","to","one","to","2","to"],"only if":["they"],"only implementation":["I"],"only in":["the","the"],"only intent":["here"],"only just":["learning","cut"],"only keep":["dna-to-rna-lut"],"only language":["where"],"only lazy":["collections"],"only learn":["if"],"only look":["at"],"only mark":["it"],"only matching":["two"],"only method":["being"],"only need":["a","a","to"],"only needed":["a"],"only needs":["to"],"only nit,":["a"],"only nitpick":["is","I","left","is","would","is"],"only once":["next","is","without","for"],"only once,":["not"],"only once.":["I"],"only one":["body.","branch","usage;","function","`apply","thread"],"only other":["thing","Lisp"],"only pieces":["of"],"only place":["it's"],"only public":["constructors","functions"],"only real":["difference"],"only really":["used"],"only reason":["that"],"only recently":["started"],"only recommended":["in","in","in"],"only remaining":["nitpicks"],"only response-for":["is"],"only retrieve":["the"],"only returns":["a"],"only seen":["clojure","the"],"only some":["of"],"only sort":["the","the"],"only standard":["library"],"only suggestion":["is","is","I","is"],"only swapped":["once,"],"only take":["one"],"only task":["is"],"only that,":["and"],"only the":["one"],"only then":["the"],"only thing":["to","I","that","that","I","I","I","I","I'd","I","I","we","these","that","I","unique","changing","I'd"],"only things":["I"],"only this":["language"],"only tiny":["nitpick"],"only to":["which"],"only transform":["the"],"only two":["functions","branches."],"only use":["the"],"only used":["in","once","in"],"only using":["a"],"only values":["that","treated"],"only want":["to"],"only way":["to","to","to"],"only when":["you"],"only whitespace,":["so"],"only whitespace.":["Looks"],"only with":["one","help"],"only work":["with"],"only, small,":["nits"],"only-numbers?, question?,":["etc)"],"only_digit. Then":["you"],"only_digit. You":["have"],"onto a":["processed"],"onto the":["dna","next","same"],"onto those":["values"],"ooh deprecated?!":["ok."],"oops, commented":["on"],"oops, i've":["actually"],"oops, submitted":["by"],"open the":["possibility"],"open to":["trying","feedback"],"opened on":["the"],"opened with":["the"],"opening `[`":["and"],"opening brace":["should"],"opening one,":["which"],"opening paren":["lines","below"],"opening parenthesis":["when"],"opening square":["bracket","bracket"],"opening/closing parentheses/brackets":["in"],"operating on":["sequences"],"operating upon":["`phrase`"],"operation doesn't":["seem"],"operation even":["when"],"operation in":["the","`verse`"],"operation inside":["```map-to-rna```?"],"operation is":["happening","being"],"operation more":["self-describing?"],"operation using":["this"],"operation which":["might"],"operation you're":["doing","actually"],"operations -":["see","one"],"operations a":["bit"],"operations everywhere":["to"],"operations in":["`nucleotide-counts`","`number`"],"operations removes":["that"],"operations with":["meaningful"],"operator in":["`sing`"],"operator reads.":["I"],"operator reduces":["readability"],"operator with":["the"],"opinion ;).":["I"],"opinion and":["not","will"],"opinion is":["certainly"],"opinion it":["reduces","will"],"opinion not":["good"],"opinion on":["this?"],"opinion since":["I"],"opinion this":["is"],"opinion would":["be"],"opinion, and":["making"],"opinion. Is":["there"],"opinion. `declare`":["will"],"opinions are":["just"],"opinions of":["how"],"opinions on":["using"],"opinions! Happy":["hacking!"],"opninion, should":["the"],"opportunity for":["re-factoring"],"opportunity to":["use","pass","solicit","cut"],"opportunity. A":["generic"],"opposed to":["the","```.endsWith```.","having","as","just","having"],"opposite of":["what"],"opposite relationship":["of"],"opposite to":["what"],"opposite: `42":["=="],"opted for":["the","code"],"optimal structure":["could"],"optimise `total`":["by"],"optimise performance":["(calculating"],"optimization (yet).":["I"],"optimization (you":["can"],"optimized for":["people"],"optimized version,":["there"],"option for":["require:"],"option of":["(ns)"],"option that":["would","might"],"option to":["access"],"option would":["be","be"],"option(s) supplied:":[":only`"],"option, but":["I"],"option? clojure.string":["can"],"optional argument":["for"],"optional default":["argument"],"optional of":["course)"],"optional parameter":["defining"],"optional predicate,":["but"],"optional sets":["which"],"optional third":["argument"],"optional though":["https://github.com/bbatsov/clojure-style-guide"],"optional. Please":["break"],"optionally use":["`partial`"],"optionally using":["different"],"options 3rd":["argument"],"options for":["looking"],"options in":["the","the"],"options to":["bring"],"options would":["be"],"options you":["already","might"],"options, but":["maybe"],"options. I":["don't"],"or \".\"":["in"],"or \"are\":":["`question?`."],"or \"request\"":["or"],"or \"string\"":["or"],"or '.'":["be"],"or (=":["(last"],"or *how*":["you"],"or :as)":["in"],"or \u003ccode\u003e:require\u003c/code\u003e":["in"],"or ACGT":["would"],"or Agents":["instead"],"or [-&gt;&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E%3E)":["and"],"or `(#{1":["2"],"or `(:require":["[clojure.string"],"or `(=":["0"],"or `(clojure.string/join":["(transcribe"],"or `(count":["(distinct"],"or `(map":["not="],"or `(str/split":["...)`."],"or `-\u003e\u003e`":["macros"],"or `-››`":["macros","macros"],"or `2N`":["instead"],"or `:ends-in-question`,":["but"],"or `[\\W]+`":["you"],"or `c`":["should"],"or `case`":["to","(or"],"or `defn-`":["for"],"or `dna-sequence`":["might"],"or `flip`":["function"],"or `i18n`":["into"],"or `intern`":["that"],"or `let`,":["to"],"or `letfn`s":["and"],"or `not-same?`":["I"],"or `one-or-it`":["inside"],"or `phrase`":["since"],"or `require`":["into"],"or `shouting?`":["for"],"or `true?`":["for"],"or `use`":["the","the"],"or `words-count`,":["but"],"or a":["string","yell?","part","docstring.","`silent?`","different","`partial`","reduce"],"or add":["a"],"or am":["I"],"or anonymous":["function."],"or any":["question?"],"or anything":["of","else.","similar."],"or anything,":["you","you"],"or are":["you"],"or at":["least"],"or auxiliary":["function"],"or available":["as"],"or bearings":["from"],"or blank":["until"],"or by":["moving"],"or case":["so"],"or comments":["so"],"or completely":["inlined."],"or contains":["only","only","whitespace."],"or convert":["the"],"or debug":["the"],"or declared":["before"],"or define":["vars"],"or diagonal":["from"],"or eleven":["digits."],"or even":["a","ask","non-public","`dna-\u003erna`"],"or externally).":["You"],"or filter":["if"],"or frequency":["map"],"or from":["what"],"or harder":["to","to"],"or if":["I","I","anyone"],"or import":["modules","particular"],"or in":["closure)","the"],"or inline":["comment","it"],"or inlined":["for"],"or is":["there","there","that","there","this","it"],"or isosceles":["(all"],"or just":["what","a","clever"],"or last":["argument."],"or leave":["the"],"or less":["clear"],"or link":["to"],"or lisp-y":["way"],"or localized":["runtime"],"or macros":["to"],"or make":["a","a","use"],"or maybe":["there's","even"],"or metadata":["that"],"or millions":["of"],"or months":["you'll"],"or more":["clear","clojury?","clojury?","places.","of","characters"],"or move":["those"],"or nil":["is"],"or not":["this","this","the"],"or not!":["exercism"],"or not,":["my"],"or not.":["Precedence","It"],"or on":["a"],"or one":["of"],"or only":["whitespace,"],"or placed":["on"],"or point":["me"],"or presence":["of"],"or provide":["feedback."],"or punctuation":["in"],"or records":["or"],"or regular":["expressions?","expressions?"],"or remove":["all","the"],"or second":["Thursday"],"or sentence.":["Variable"],"or seq":["functions"],"or shouting,":["then","then"],"or side-effect":["only"],"or similar":["to"],"or single":["character."],"or someone":["else"],"or something":["like","similar.","would","like"],"or sometimes":["to"],"or specified.":["Perhaps"],"or starting":["with"],"or statement":["or"],"or strings,":["so"],"or subtracting":["1."],"or that":["`count`"],"or the":["last","like.","next"],"or to":["define","wrap"],"or two.":["I"],"or unequal":["pairs."],"or using":["a","the"],"or vector":["a"],"or what":["it"],"or whatever":["makes"],"or whatever.":["I"],"or whether":["use"],"or with":["you-know-which-function","the"],"or worse":["approach."],"or yelled":["a"],"order (providing":["the"],"order -":["of"],"order and":["stop"],"order for":["silly"],"order function":["definitions","(it","to"],"order functions":["FTW","are","that","to"],"order functions.":["I"],"order in":["the","my","the","the","which","`response-for`"],"order independence":["at"],"order independent.":["Looks","Optionally,","Either"],"order is":["better","an","important"],"order make":["things"],"order of":["the","constants","definitions","function","the","the","`defn`s","arguments","its","magnitude"],"order they're":["called?"],"order to":["possibly","use","be","define","minimize","make","spare","preserve","`re-seq`","avoid","make","enable"],"order wasn't":["relevant"],"order, and":["I"],"order-independent but":["defining"],"ordered fns":["exactly"],"ordered map":["of","with"],"ordering guaranties":["for"],"ordering in":["the"],"ordering may":["be"],"ordering of":["the","how","your"],"ordering to":["avoid"],"ordering. This":["could"],"ore meaningful":["variable"],"organization of":["function's","the"],"organize the":["code"],"organize them?":["Or"],"origin comparison)`](http://clojuredocs.org/clojure_core/clojure.core/map)":["with"],"original `word`":["being"],"original advice,":["I"],"original and":["processed"],"original collection":["passed"],"original function.":["That's"],"original iteration,":["but"],"original pull":["request"],"original string":["is","is"],"original submission":["(#1)."],"original which":["I"],"original word":["separated"],"originally had":["sanitize","the"],"originally read":["it"],"originally thinking":["about"],"originally written":["using"],"orthogonal problem":[":)"],"other \"bob\"":["solutions"],"other (with":["the"],"other FP":["langs)"],"other Lisp":["I"],"other base":["..."],"other behavior":["here"],"other case.":["Code"],"other cases,":["I"],"other cases.":["So,"],"other clojure":["platforms,"],"other comment":[";)"],"other constructs":["in"],"other control":["structures","structure)"],"other core":["clojure","clojure","clojure","clojure","clojure"],"other day":["and"],"other dna-namespaced":["functions"],"other empty":["values"],"other end":["like"],"other exercices":["this"],"other exercises":["up"],"other explains":["the"],"other expressions":["passed,"],"other facilities":["to"],"other feedback,":["can"],"other function":["names?"],"other functions":["hiding","should","with","in","as"],"other hand":["it"],"other hand,":["your","bludgeoning","I","relies","I","you"],"other helpers":["as"],"other helpers?":[":)"],"other implementations":["of"],"other information":["available","regarding"],"other kind":["of"],"other language":["responses"],"other languages":["I","on"],"other languages)":["2."],"other languages,":["spent","is"],"other languages.":["Thank","So","Since"],"other lisps":["that"],"other monosylabic":["friends)"],"other namespaces,":["however"],"other nitpickers":["think?","think"],"other nitpicks/comments":["on"],"other nits":["-"],"other one.":[":)"],"other options":["you","for"],"other people":["to","use."],"other piece":["of"],"other pieces":["I've"],"other potential":["context"],"other predicates":["and"],"other reasoning":["behind"],"other regex":["functions"],"other regexp":["like"],"other requirements":["of","of"],"other robotic":["implementations."],"other sides,":["which"],"other small":["nitpick:","thing,"],"other solutions":["to","it","to","the","and"],"other statement":["types,"],"other string":["functions"],"other test":["in"],"other than":["what","reading","that,","the","that","that."],"other thing":["is","I","is","you"],"other things":["if","to"],"other two":["checks?","fn","fn","function","functions","function"],"other versions":["of"],"other way":["I","around).","to","I"],"other way,":["you're"],"other ways":["to"],"other words,":["I","without","that's"],"other words:":["please"],"other, but":["I"],"other, especially":["with"],"other. After":["realizing"],"other. In":["this"],"other. My":["gut"],"others and":["the"],"others doesn't":["seem"],"others feel":["differently."],"others to":["choose","understand"],"others\"? I'm":["liberal"],"others' solutions":["to"],"others). That's":["even"],"otherwise cond":["was"],"otherwise evaluate":["as"],"otherwise if":["there"],"otherwise looks":["pretty"],"otherwise returns":["false."],"otherwise this":["looks"],"ought to":["be"],"oups :)":["Some"],"our DNA":["to"],"out \"alphagrams\"":["for"],"out (even":["same"],"out (which":["I'd"],"out -":["`(-\u003e"],"out ...":["maybe"],"out I":["got"],"out [frequencies](http://clojuredocs.org/clojure_core/clojure.core/frequencies),":["it'll"],"out `(apply":["str"],"out `[^a-z]`":["to"],"out `blank?`":["to"],"out `clojure.string/method`,":["you"],"out `cond`":["--"],"out `frequencies`":["--","--","here.","if"],"out `inc`":["and"],"out `last`":["--"],"out `ref`":["for"],"out `words`":["into"],"out a":["clean","solution","private","way","function","protocol","way","level","common"],"out about":["`not=`,"],"out acronyms,":["too,"],"out after":["several"],"out all":["their","of"],"out and":["figuring","name"],"out any":["of"],"out as":["`question?`."],"out at":["me"],"out before...":["You"],"out both":["of"],"out by":["porting","zoldar,"],"out clojure.string/blank?":["--","--"],"out different":["ideas"],"out each":["predicate"],"out exactly":["what","what"],"out for":["that"],"out from":["a"],"out here":[":)"],"out how":["to","to","to","it","to","to","to","to","to","to","to","to","to"],"out how.":["Anyone"],"out identical":["words"],"out idiomatic":["use"],"out if":["it"],"out in":["the","to","many"],"out into":["new","it's","private","functions","separate","more","more","it's","clearly","separate","a"],"out is":["shorter,","fine,","that"],"out it":["flows"],"out just":["by"],"out like":["that:","that"],"out loud'":["note:"],"out my":["latest","naming"],"out nice":["with"],"out of":["them","the","it,","response-for:","`response-for`:","searches.","date.","`response-for`","my","the","the","response-for,","`response-for`","the","the","my","the","control.","the","my","the","date.","`response-for`","the","the"],"out on":["some","the","some"],"out parentheses":[";)"],"out section.":["I"],"out sequences":["of"],"out something":["with"],"out special":["characters"],"out that":["it’s","using","the","it"],"out the":["regular","preferred","conditions","`subs`","checks","conditions","three","tests","next","sorting","\u003ccode\u003e:use\u003c/code\u003e","implementation","Clojure","same","possibility","[nth](http://clojuredocs.org/clojure_core/clojure.core/nth)","splitting","conditions","documentation","solution","namespace","\"frequencies\"","\"frequencies\"","input","commas","empty","issue","`sentiment`","`not=","README","following.","area"],"out there":["for","first","to"],"out these":["visual"],"out this":["explanation,","code."],"out to":["private","me.","Java-land?","understand,","make","me!","Java","generate","@luz","me","me."],"out tonight":["maybe..."],"out too,":["don't"],"out uracil)":["but"],"out use":["for"],"out using":["a"],"out what":["line","you","kind","it","happens","it"],"out when":["using"],"out with":["everything","=","a","my"],"out words":["using"],"out would":["make"],"out your":["conditionals","parentheses"],"out! The":["```frequencies```"],"out!\" (bob/response-for":["\"WHAT"],"out!\" because":["no"],"out!\" if":["I"],"out!\" since":["I'm"],"out!\" with":["the"],"out!\")`. There":["is"],"out!\", other":["than"],"out, I":["suppose"],"out, but":["now","I"],"out, it":["is."],"out, so":["I'm"],"out, that":["it's"],"out, there's":["no"],"out. Also,":["condp"],"out. But":["since"],"out. I":["think"],"out. We":["can"],"outlined in":["the"],"output are":["valid"],"output as":["an"],"output if":["you"],"output of":["`re-seq`"],"output) with":["`(re-seq"],"output. The":["code"],"outside of":["the","`clojure.core`.","`response-for`"],"outside plain":["REPL"],"outside the":["namespace","mentioned","namespace,"],"outside their":["namespace."],"outside world.":["What"],"outside-in design":["model,"],"outside. Sets":["work"],"over 2":["minutes","minutes"],"over 40":["nearly-identical"],"over :use":["and","by"],"over :use.":["It"],"over :user/:only.":["See"],"over `(empty?":["(trim"],"over `use`":["generally."],"over a":["regexp?","collection.","`clojure.string`","anonymous","string","range?"],"over and":["over.","over","over.","over.","over.","over","over","over","over"],"over as":["I"],"over clojure.core":["and"],"over for":["comparison."],"over his/her":["response"],"over how":["to"],"over in":["the","the"],"over kill":["for"],"over my":["usage"],"over once":["the"],"over strands":["with"],"over the":["function","words.","place,","characters","chunks","length","board","strings","strands","other,","length","subtle","cascade","train","course","word,","last","string","list.","year","characters","first"],"over them.":["That's"],"over this,":["then"],"over to":["the"],"over using":["`.endsWith`."],"over with":["every","every"],"over year":["and"],"over your":["functions"],"over “foreign”":["interop"],"over, whereas":["def/defn"],"over-engineer things,":["I"],"over-engineered regarding":["the"],"over-engineering, defining":["all"],"over. There's":["another"],"over. You":["can"],"overall as":["well."],"overall separation":["of"],"overall, but":["I"],"overdo it":["a"],"overdoing it":["probably."],"overdone it":["with"],"overdone it,":["especially"],"overdone that":["and"],"overdone this":["and"],"overflow the":["call"],"overflows and":["whatnot,"],"overhead from":["the"],"overhead in":["processing"],"overhead of":["processing","the","processing","processing","processing","processing","processing","processing","processing","repeatedly","processing","processing","multiple"],"overhead than":["you"],"overhead to":["parse"],"overhead when":["testing"],"overkill ,":["because"],"overkill and":["an","additional"],"overkill but":["at","I"],"overkill for":["these","that","this","this."],"overkill here":["-"],"overkill here,":["`(="],"overkill in":["this"],"overkill when":["looking"],"overkill, given":["the"],"overkill. They":["seem"],"overkill. Though":["in"],"overlap in":["loading"],"overloading the":["variable"],"overlook that":["in"],"overlooked the":["extra"],"overly fond":["of"],"overriding an":["existing"],"overriding the":["core"],"overshadowed by":["the"],"overusing the":["thrush"],"overwrites this":["one."],"own (perfectly":["good,"],"own `default?`":["function"],"own `square`":["function"],"own define,":["but"],"own example":["breaking"],"own function":["(either","and"],"own function,":["because","makes"],"own functions":["to","defns.","and"],"own functions.":["It"],"own helpfully":["named"],"own implementation":["with"],"own independent":["\"transaction\"","\"transaction\""],"own lack":["of"],"own line":["for","in","and","to","is"],"own line.":["You","Hyphen","Indentation","Although","In"],"own lines":["would","being","in"],"own lines.":["These"],"own loop.":["You"],"own method":["-"],"own opinion":["and"],"own power":["function"],"own private":["function","function,","functions?"],"own refactorings.":["Got"],"own time":["as"],"own version":["of"],"own well-named":["functions."],"own words":["but"],"own, it":["doesn't"],"own. Similarly":["there"],"p naming":["scheme"],"pace. Is":["there"],"page is":["that"],"page should":["be"],"pain in":["the"],"pain that":["slipped"],"pair =":["a"],"pair after":["the"],"pair of":["matching","parentheses.","parentheses.","parentheses.","parentheses.","parentheses","functions"],"pair, not":["the"],"pair-up vector)`":["since"],"pairs into":["a"],"pairs of":["predicates"],"pairs you're":["looking"],"pairs, that":["would"],"pairs. So":["maybe"],"pals are":["no"],"pants indeed.":["I'd"],"paradigm in":["my"],"paradigms apply,":["but"],"paragraph yet":["-"],"parallelism that":["should"],"parallelism with":["the"],"paramater and":["use"],"parameter 1":["to"],"parameter \u003ccode\u003es\u003c/code\u003e":["doesn´t"],"parameter `msg`":["instead"],"parameter `statement`":["for"],"parameter defining":["the"],"parameter first":["in"],"parameter for":["length"],"parameter in":["front","shorthand"],"parameter name.":["Why","I"],"parameter of":["the"],"parameter on":["line"],"parameter to":["dna-strand.","spaced-groups-of","`leap-year?`"],"parameter, I":["think"],"parameter. This":["allows"],"parameter; it":["should"],"parameters (ie.":["`%1`"],"parameters reads":["better"],"parameters vector":["on"],"parameters? Is":["there"],"params inside":["parantheses?"],"pardon me,":["that's"],"paredit in":["vim"],"paren below":["it."],"paren lines":["up"],"paren on":["a","a"],"paren slipped":["from","from"],"paren, but":["the"],"paren. I'm":["using"],"parens (with":["no"],"parens for":["you),"],"parens inline,":["but"],"parens instead":["of"],"parens on":["the","their","same","the","lines","the","a","the"],"parens round":["`frequencies`","`s/lower-case`"],"parens than":["the"],"parens together.":["Otherwise"],"parens too.":["So"],"parens using":["`not=`"],"parens with":["the","whitespace,"],"parentheses (so":["called"],"parentheses -":["although","however"],"parentheses all":["together."],"parentheses and":["optionally"],"parentheses are":["usually"],"parentheses around":["([x]","functions"],"parentheses in":["their","a","my","your","case"],"parentheses needed":["for"],"parentheses on":["the","their","the"],"parentheses should":["be"],"parentheses until":["I"],"parentheses would":["be"],"parentheses\") makes":["life"],"parentheses, I":["always"],"parentheses. There's":["also"],"parentheses/brackets in":["their"],"parenthesis (LISP":["taboo);"],"parenthesis after":["the"],"parenthesis and":["everything"],"parenthesis are":["usually"],"parenthesis confusing":["here."],"parenthesis immediately":["after"],"parenthesis in":["different"],"parenthesis inline,":["though"],"parenthesis is":["strange!"],"parenthesis mentioned":["above."],"parenthesis on":["the"],"parenthesis up.":["It's"],"parenthesis when":["you"],"parenthesis, closing":["parenthesis,","parenthesis!"],"parenthesis. As":["with"],"parenthesis? This":["is"],"parse a":["`telling?`"],"parse parentheses":["in"],"parse the":["intent"],"parsing the":["strand"],"part I":["see"],"part about":["not","this","extracting"],"part because":["(zero?","I've"],"part for":["me"],"part is":["optional","unnecessary.","a"],"part of":["the","the","the","the","FP","the","public","`sing`","a","a","a","a","the","the","the","stack","the","the","the","the","writing","your","the"],"part on":["the"],"part to":["it's"],"part was":["writing"],"part when":["using"],"part. I":["could"],"partial I":["meant"],"partial application":["easier.","for","problem","of","without","to","which"],"partial application.":["Perhaps"],"partial becomes":["easier,"],"partial comment.":["I'm"],"partial functions.":["I"],"partial here":["somewhere"],"partial instead":["of"],"partial, why":["not"],"partially apply":["arguments"],"partially realized":["function"],"participant create":["a"],"participant to":["validate"],"participate in":["the"],"particular any":["notes"],"particular case":["it’s","(logical","won't"],"particular case.":["Of"],"particular checks":["or","inside"],"particular context,":["but"],"particular exercise":["didn't"],"particular for":["pointing"],"particular learning":["resource"],"particular names":["don't"],"particular order":["(providing"],"particular substring":["is"],"particular symbols":["from"],"particular there":["is"],"particular use.":["A"],"particular, look":["at","at"],"particular: in":["```shouty?```"],"particularly fond":["of"],"particularly happy":["with","with"],"particularly useful":["thing","when"],"partition and":["interleave"],"partition making":["it"],"partition\". Short":["but"],"partly help":["here"],"partly speculation,":["but"],"parts -":["one"],"parts into":["digestible"],"parts of":["the","these","the","the","a","your","the","the"],"parts together":["with"],"parts with":["vector."],"parts. Initially,":["I"],"parts. `declare`":["may"],"pass `base`":["and"],"pass `message`":["explicitly,"],"pass `n`":["to"],"pass `text`":["explicitly"],"pass a":["function"],"pass all":["the"],"pass and":["still"],"pass every":["nucleotide"],"pass forms":["as"],"pass in":["an","`s`"],"pass it":["for","for","to"],"pass message":["as"],"pass of":["`map`"],"pass over":["the"],"pass the":["same","test","test","`sorted-school`","the","output","test","test,","argument","nth","for"],"pass those":["tests."],"pass, I":["settled"],"pass, but":["it","the","should"],"pass. I'm":["still"],"pass. Readme":["talks"],"pass. which":["it"],"passed around":["now,"],"passed collection.":["You"],"passed in":["-"],"passed onto":["sanitize-number."],"passed the":["tests","base","current"],"passed to":["it.","higher-order","it.","it.","the","the","map","it","it","`reduce-kv`"],"passed, and":["it's"],"passed, is":["not"],"passed. Also,":["`swap!`"],"passed. `compare-and-set!`":["is"],"passes all":["the"],"passes the":["tests.","given","tests."],"passes through":["the"],"passing @gunnar's":["watch"],"passing `nil`":["and"],"passing a":["hardcoded"],"passing all":["4"],"passing an":["anonymous"],"passing classify-response":["to"],"passing sequences":["through"],"passing something":["else"],"passing tests":["were"],"passing the":["parameter.","char","same","arguments"],"passing this":["on"],"passing through":["all"],"passing. But":["if"],"past assigments":["you"],"past assignemnts,":["you","you"],"past assignments":["could"],"past assignments,":["the","you'll"],"past assignments.":["Please"],"past, so":["I","I"],"path and":["jar"],"path, I":["probably"],"path. A":["little"],"pattern for":["alphanumeric"],"pattern here":["is"],"pattern in":["clojure","the"],"pattern is":["preferred"],"pattern matched":["functions"],"pattern matching":["with",":)"],"pattern matching.":["Using"],"pattern where":["the"],"pattern, it":["wouldn't"],"pattern, this":["is"],"pattern. IMO,":["it's"],"pattern. The":["final"],"patterns and":["\"make","the"],"patterns as":["an"],"patterns in":["the","a"],"patterns that":["is"],"patterns. Could":["you"],"patterns/functions/idioms I":["could"],"pause -":["maybe","I"],"pause to":["decipher"],"pay also":["attention"],"pay attention":["to"],"peek on":["simplified"],"peeking ahead":["to"],"peg for":["clojure."],"penalty at":["runtime,"],"people I":["talk"],"people achieving":["the"],"people as":["well."],"people aware":["of"],"people closing":["out"],"people decide":["to"],"people have":["suggested","to"],"people in":["the"],"people like":["you."],"people recommend":["extracting"],"people refer":["to"],"people say":["in"],"people saying":["\"default\""],"people suggested":["them"],"people think":["about"],"people to":["use.","stop"],"people unfamiliar":["with"],"people using":["a","`:as`"],"people with":["permission"],"people would":["want"],"per input.":["Would"],"per possible":["return"],"per recommendations":["from"],"per response":["instead"],"per response.":["I"],"per se,":["but"],"per suggestion":["on"],"per tests":["but"],"per word":["by"],"perceived need":["for"],"perennial problem":["of"],"perfect for":["setting"],"perfect method":["for"],"perfect reducer":["once"],"perfect sense":["where"],"perfect sense,":["I"],"perfect to":["pass","me."],"perfect! I":["worked"],"perfect) and":["can"],"perfectly arbitrary":["strings"],"perfectly fine":["without"],"perfectly fine,":["but","please"],"perfectly fine.":["Without"],"perfectly good":["opportunity"],"perfectly legal,":["it's"],"perfectly readable":["to"],"perfectly sensible":["thing"],"perfectly valid":["too,"],"perfectly, and":["more"],"perform `(sort":["(str/lower-case"],"perform some":["timing"],"perform the":["cond"],"perform validation":["on"],"performance (calculating":["`lowerA`"],"performance benefits.":["It"],"performance between":["filter"],"performance boost":["to"],"performance difference":["between"],"performance differences":["were"],"performance is":["probably"],"performance issue":["of"],"performance metrics":["for"],"performance of":["reader"],"performance penalty":["at"],"performance reasons,":["but"],"performance reasons.":["Other"],"performance regression":["in"],"performance should":["almost"],"performance testing!":["I'm"],"performance versus":["input"],"performance-wise to":["regex"],"performance: You":["make"],"performance? (Hint:":["higher-order"],"performant for":["large"],"performant with":["`frequencies`"],"performed twice":["for"],"performing that":["computation"],"perhaps I":["have"],"perhaps I'll":["try"],"perhaps a":["bit","better"],"perhaps be":["a"],"perhaps better":["than"],"perhaps it":["warps"],"perhaps returning":["nil"],"perhaps that":["will"],"perhaps the":["compiler)"],"perhaps you":["can","can"],"perils of":["diving"],"period values":["is"],"period? You're":["passing"],"periods, then":["you"],"permission to":["approve"],"permissive in":["what"],"permit that":["aren't"],"permutations into":["small"],"perplexed on":["the"],"persistence seems":["to"],"persistent between":["JVM"],"persistent data":["structures"],"person reading":["the","doesn't"],"personal mission":["to"],"personal preference":["this,","(some","but","but","really."],"personal preference,":["but","but"],"personal preference.":["At"],"personal preference:":["Coming"],"personal style":["guidelines."],"personally I":["find"],"personally don't":["do"],"personally go":["with","ahead"],"personally have":["extracted"],"personally leave":["off"],"personally like":["```strand```."],"personally love":["reading"],"personally not":["too","a"],"personally prefer":["more","to"],"personally return":["atoms"],"personally see":["a"],"personally think":["that"],"personally think,":["this"],"personally used":["a"],"personally would":["define"],"perspective of":["what"],"perspective to":["look"],"perspective, your":["approach"],"perusing the":["Clojure"],"pervlayer-style lightweight":["database"],"phase, you":["could"],"phone and":["didn't","added"],"phone length":["if"],"phone number.":["They"],"phone wasn't":["the"],"phrase #\"\\W+\"":[")"],"phrase (:use":["[clojure.string"],"phrase (clojure.string/lower-case":["phrase))))"],"phrase (clojure.string/upper-case":["phrase))"],"phrase (silence,":["for"],"phrase -":["into"],"phrase before":["splitting"],"phrase checks":["into","into"],"phrase from":["the"],"phrase here":["and"],"phrase instead":["of"],"phrase is":["more"],"phrase normalize-words":["frequencies)`"],"phrase of":["code."],"phrase should":["receive,"],"phrase string":["from"],"phrase through":["words"],"phrase twice.":["Could"],"phrase\" rather":["than"],"phrase's words":["AND"],"phrase's words\",":["while"],"phrase) phrase)`":["could"],"phrase)` could":["move"],"phrase)``` and":["get"],"phrase, then":["uses"],"pick apart":["the"],"pick on":["that?","it"],"pick out":["what","words","sequences"],"pick with":["the"],"pick, but":["using"],"pick, in":["fact"],"pick, though:":["perhaps"],"pick: you":["could"],"picked up":["on","on"],"picked up.":[":-)"],"picking out":["the"],"picking response.":["I'm"],"picking up":["on"],"picks, though:":["First,"],"picky, and":["that"],"picky, but":["are","to"],"picture of":["how"],"piece of":["Clojure","code","code;","code.","code","code","code","functionality"],"piece that":["is"],"pieces I've":["written,"],"pieces of":["Clojure","code","the"],"pieces the":["sentence"],"pieces, where":["I"],"pile of":["code"],"piped through":["a"],"pipeline functions":["in"],"pipeline functions?":["[-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E)"],"pipeline of":["steps,"],"pipeline special":["forms?","forms"],"pipeline, there's":["always"],"pipelines of":["operations."],"pipelining the":["first"],"piping after":["that"],"place and":["use","not"],"place for":["input"],"place is":["kind"],"place it's":["used."],"place of":["your"],"place possibly.":["There"],"place that":["I'd"],"place the":["right","arguments","reason"],"place to":["put","bootstrap"],"place trailing":["parenthesis"],"place, and":["it"],"place. Corrected":["now."],"place. What":["do"],"placed on":["the","it's"],"placeholder. Since":["map"],"placement of":["the"],"places and":["buried"],"places but":["`(case"],"places where":["you","the"],"places you":["gain"],"places, I've":["kept"],"places, but":["if"],"places. Inlining":["the"],"plain REPL":["session,"],"plain and":["simple"],"plain cond,":["but"],"plain symbol":["for"],"plan to":["come"],"planet period?":["You're"],"planets would":["help"],"play a":["bit"],"play around":["with"],"play in":["the"],"play with":["`-›`","extracting"],"played around":["with","with"],"played with":["some","Haskell,"],"playing a":["clojure"],"playing around":["with"],"plays. I":["suppose"],"pleasantly surprised":["to","to"],"please add":["line"],"please consult":["the"],"please don't":["leave"],"please elaborate":["on","on"],"please explain":["why"],"please ignore":[":)"],"please keep":["in","in","in"],"please let":["me"],"please make":["sure"],"please name":["some"],"please put":[":require","use/require"],"please refer":["to"],"please remember,":["Clojure"],"please specify,":["how"],"please take":["a","a"],"please vote":["for"],"please, don't":["do"],"please? Maybe":["that's"],"pleased to":["have"],"pleased with":["the"],"pleasing to":["look"],"pleasure to":["learn"],"pleasures in":["life"],"plentiful). Isn't":["it"],"plenty of":["opportunity"],"plural should":["look"],"plural. Perhaps":["you"],"plus I'm":["learning"],"plus a":["couple"],"point (you'll":["have"],"point ,":["you"],"point -":["probably"],"point --":["`yelling?`"],"point :":["\u003cbr\u003e"],"point I":["guess."],"point I've":["replaced"],"point about":["`second-part`.","the","`seq`","shortness,","the"],"point and":["is"],"point in":["holding","wrapping","that.","a","that","keeping"],"point is":["the"],"point it":["out.","out.","out,"],"point me":["to"],"point of":["keeping","that","this","view,","the"],"point on":["using","the","sorting"],"point regarding":["your"],"point taken":["about"],"point that":["it"],"point you":["at","to:"],"point {:x":["5"],"point —":["I"],"point! Not":["sure"],"point! Tried":["to"],"point, I":["added","would"],"point, I'm":["still"],"point, because":["often"],"point, but":["in","you","it's"],"point, checkout":["new"],"point, it's":["not"],"point, pushed":["a"],"point-free style,":["but"],"point. Also,":["I"],"point. Another":["approach,"],"point. Done":["and"],"point. However,":["as"],"point. I":["use","got","think"],"point. I've":["recently"],"point. It":["was"],"point. Matter":["of"],"point. Resubmitted":["with"],"point: the":["other"],"pointed it":["out,","out"],"pointed out":["before...","I","to","by"],"pointed out,":["that"],"pointer on":["-&gt;&gt;."],"pointer to":["`intern`"],"pointers if":["you're"],"pointers; very":["helpful."],"pointing both":["of"],"pointing me":["to"],"pointing out":["that","the"],"pointing that":["out!"],"pointing them":["out."],"points aside,":["the"],"points could":["be"],"points re:":["responseLookup"],"points to":["look","support"],"points! changed":["accordingly."],"points, but":["it's"],"points, some":["more"],"points, thanks":["for"],"points. I":["totally"],"points. Idiomatic":["stuff"],"points. In":["the"],"points. So":["I"],"points: Is":["`dont-know?`"],"points: you":["should"],"polluting the":["namespace","namespace."],"polymorphically based":["on"],"polymorphism with":["multimethods"],"poor choice":["of"],"poor code,":["when"],"poor date":["support"],"poor fit":["for"],"poor names,":["as"],"populate that":["map."],"pore over":["clojure.core"],"port of":["my"],"port your":["work"],"portable as":["possible,"],"portable to":["other"],"porting my":["Ruby"],"pos?, and":["so"],"position and":["the"],"position are":["the"],"position can":["be"],"position of":["the"],"position so":["it"],"positional accessors?":["That"],"positions of":["`alphabetizes-to?`"],"positive assertion":["in","about"],"positive comment":["about"],"poss))` can":["be"],"possibility for":["future"],"possibility in":["is-anagram"],"possibility might":["be"],"possibility of":["random","transcribing","other"],"possibility to":["use"],"possible (for":["example"],"possible (in":["surrouding"],"possible I":["rather"],"possible approach":["to"],"possible because":["Clojure"],"possible border":["cases"],"possible but":["`response-for`"],"possible date":["ranges"],"possible digits":["that"],"possible english":["mistakes."],"possible improvement":["might"],"possible in":["a"],"possible inputs":["that"],"possible instead":["of","of"],"possible return":["value."],"possible statement":["might"],"possible substitute":["for"],"possible through":["the"],"possible to":["do","solve","bind","be","make","write","maintain","do","set","remove","write","use","simplify","simplify","rely"],"possible variances":["for"],"possible when":["you"],"possible with":["future"],"possible, I":["try"],"possible, allowing":["the"],"possible, you":["might"],"possible. It's":["based"],"possible. No":["reason"],"possible. That":["said,"],"possible. Would":["you"],"possible. You":["can"],"possibly `(-&gt;&gt;":["strand1"],"possibly `require`":["or"],"possibly a":["more","little"],"possibly allow":["a"],"possibly clearer":["I"],"possibly down":["to"],"possibly followed":["by"],"possibly help":["further"],"possibly inspire":["you"],"possibly just":["a"],"possibly make":["`response-for`"],"possibly more":["clearer"],"possibly nice":["to"],"possibly other":["helpers"],"possibly reduce":["the"],"possibly simplify":["the"],"possibly think":["of"],"possibly try":["to"],"possibly. There":["are"],"post a":["new"],"post about":["```:pre```"],"post condition":["hooks"],"post conditions":["I've","and","at","perform","are"],"post conditions,":["I"],"post conditions.":["What"],"post is":["nifty."],"post position":["can"],"post to":["a"],"post) conditions,":["attached"],"post- assertions":["(which"],"post- conditions`,":["but"],"post](http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html) for":["pointers"],"posted a":["new"],"posted to":["\"rna-transcription\""],"posting a":["new"],"posting this":["code"],"potential anagram.":["That's"],"potential context":["and"],"potential-anagram)` that":["isn't"],"potentially does":["more"],"potentially drastically":["reduce"],"potentially might":["want"],"potentially other":["namespaces."],"potentially return":["\"0000000000\""],"power function":["instead"],"powerful; you":["can"],"practical, but":["neither"],"practice anyway.":[":)"],"practice for":["`ns`","me","`?`"],"practice in":["functional","the"],"practice is":["to"],"practice or":["just"],"practice to":["use","put","replace","explicitly","order","expose"],"practice you":["use"],"practice, so":["YMMV."],"practive reflected":["in"],"praise :)":["I'll"],"pre (and":["post)"],"pre and":["post","post","post","post","post","post","post","post"],"pre condition":["and","as","regex.","or"],"pre- and":["post-","post-"],"pre-applying one":["or"],"pre-calculate `alpha`":["and"],"pre-calculated canonical":["version"],"pre-calculated values":["for"],"pre-calculating the":["comparable"],"pre-calculations? also,":["`lower-case`"],"pre-condition ...)}`.":["While"],"pre-creating the":["`alphagram`"],"pre-filtering based":["on"],"precedence over":["his/her"],"precedence. \"WHAT":["DID"],"precious to":["waste"],"precious vertical":["space"],"precomputing the":["initial"],"precondition for":["validating"],"precondition to":["do"],"preconditions should":["not"],"preconditions were":["ever"],"pred coll))`":["can"],"pred, for":["example"],"predicate a":["name"],"predicate and":["a","takes"],"predicate carefully":["to"],"predicate depend":["on"],"predicate expressions":["could"],"predicate for":["shouting"],"predicate function":["names"],"predicate function.":["Also,"],"predicate functions":["private","being","are","instead","as"],"predicate functions,":["there"],"predicate functions.":["I"],"predicate functions?":["How","It"],"predicate into":["its","a"],"predicate is":["flawed.","on","super-short.","not"],"predicate like":["functions,","`yelling?`."],"predicate line":["is"],"predicate method":["name.","that"],"predicate methods":["private","with","(er,","private?","too.","would","like"],"predicate methods,":["as","and"],"predicate names,":["makes"],"predicate on":["line"],"predicate that":["I've"],"predicate to":["test"],"predicate under":["each"],"predicate using":["`some"],"predicate var":["or"],"predicate vars.":["Care"],"predicate which":["does"],"predicate). In":["Clojure,"],"predicate, but":["I"],"predicate, which":["seems","hopefully"],"predicate. But":["since"],"predicate. Does":["anyone"],"predicate? Do":["I"],"predicates (based":["on"],"predicates -":["maybe"],"predicates `question?`":["`shout?`"],"predicates and":["add","warn","values","thus"],"predicates are":["in","added","mutually","domain-related,"],"predicates could":["be"],"predicates does":["actually"],"predicates in":["order","terms"],"predicates into":["named","helper"],"predicates like":["empty?,","`is-anagram`","`every?`"],"predicates listed":["first."],"predicates might":["be"],"predicates must":["be"],"predicates names":["that"],"predicates need":["to"],"predicates out":["into","is"],"predicates passed":["to"],"predicates private":["but"],"predicates separately,":["but"],"predicates should":["be"],"predicates that":["enforce"],"predicates to":["their","do","non-public","either"],"predicates used":["in"],"predicates were":["broken"],"predicates with":["a","question"],"predicates would":["hide","be"],"predicates you're":["using"],"predicates' names":["with"],"predicates, especially":["the"],"predicates. Is":["?"],"predicates. It's":["not"],"predicates. Maybe":["in"],"predicates. Might":["it"],"predicates? It":["could"],"preemptively removed":["the"],"prefer `(=":["\\?"],"prefer `convert`":["to"],"prefer `get`":["with"],"prefer `let`":["to"],"prefer `require`":["and"],"prefer a":["`clojure.core`"],"prefer for":["the"],"prefer more":["descriptive"],"prefer native":["solutions","Clojure"],"prefer not":["to."],"prefer putting":["bindings","the"],"prefer something":["meaningful"],"prefer statements":["on"],"prefer the":["vertical","closing","p","look","regular","concise","first","more","use"],"prefer to":["have","scope","put","give","use","leave","see","make","have","using","be"],"prefer using":["Clojure","the"],"prefer your":["previous"],"preferable to":["use",".toUpperCase?","use","include"],"preference (some":["deem"],"preference -":["anyway,","I","I"],"preference but":["in","in"],"preference on":["which"],"preference or":["is"],"preference this,":["but"],"preference to":["calling"],"preference) you":["could"],"preference, I":["find"],"preference, because":["for"],"preference, but":["I","your","I","it","instead","\"%\""],"preference, you":["may"],"preference. (It":["makes"],"preference. At":["the"],"preference. For":["me"],"preference. I":["personally"],"preference. The":["non-public"],"preference: Coming":["from"],"preferred and":["could"],"preferred choice,":["but"],"preferred for":["functions"],"preferred in":["every"],"preferred over":[":user/:only.",":use",":use.",":use","`use`"],"preferred to":["just","use","use","use","use","use","use"],"preferred way":["to","is","is","is","is"],"preferred your":["1st"],"preferred. There's":["a"],"prefix `is`":["looks"],"prefix for":["all"],"prefix on":["your","your"],"prefix pattern.":["The"],"prefix the":["namespace"],"prefix to":["call"],"prefix with":["'is'"],"prefix, e.g.,":["core"],"prefixed (`(clojure.string/blank?":["x)`)."],"premature given":["the"],"prepared to":["concede"],"prerequisite on":["the"],"presence of":["letters.","preconditions"],"present -":["that's"],"present implementation,":["since"],"present in":["the"],"present, default":["value"],"preserve atomicity":["of"],"preserve flatter":["code"],"preserve proper":["indentation."],"preserve that":["feel"],"prettier by":["defining","thinking"],"prettier than":["now,"],"pretty bad":[":)"],"pretty but":["it"],"pretty clean":["way"],"pretty clean.":["Maybe","My"],"pretty clear":["what's"],"pretty common":["in"],"pretty compact":["but","but"],"pretty concise":["so"],"pretty cool.":["However,"],"pretty deep":["into"],"pretty dense":["with"],"pretty easy":["-","to"],"pretty generic":["name"],"pretty gobsmacked":["if"],"pretty good":["name","to","readable.","sign","sequence","for","to","to","to","otherwise.","idea."],"pretty good!":["One"],"pretty good,":["although","but"],"pretty good.":["How","Nice"],"pretty happy":["with"],"pretty hard":["to"],"pretty intuitively,":["but"],"pretty loaded":["as"],"pretty long.":["With"],"pretty low":["level"],"pretty much":["anything.","the","exactly","my","what","exactly","the","the","the"],"pretty mysterious":["to"],"pretty neat":[":)"],"pretty neat.":["I"],"pretty new":["when","to","to"],"pretty nice":["solution."],"pretty nifty":["trick"],"pretty powerful;":["you"],"pretty rare":["and"],"pretty rubbish.":["Surely"],"pretty short":["solution"],"pretty simple":["and"],"pretty simple,":["but"],"pretty small":["one"],"pretty snazzy":["to"],"pretty strange":["compared"],"pretty sure":["there","I"],"pretty terrible":["in"],"pretty to":["look"],"pretty vague":["in"],"pretty verbose":["having"],"pretty well":["indeed."],"pretty well,":["and","but"],"pretty well.":["It's"],"pretty wild":["stuff."],"pretty-print function":["(once"],"prevented me":["from"],"preventing the":["warning"],"prevents it":["from"],"previous assignment.":["Camelcased"],"previous assignments":["was"],"previous assignments.":["It"],"previous attempt,":["though"],"previous code":["copy/pasted"],"previous comment":["as","on"],"previous exercises":["but"],"previous expression":["(primitive"],"previous feedback":["(thanks!)"],"previous feedback:":["Make"],"previous iteration":["it","where"],"previous iteration,":["namely"],"previous iteration.":["I","Please"],"previous iterations":["with","and"],"previous iterations.":["Comments"],"previous line":["to","with"],"previous nitpick":["-"],"previous one":["is"],"previous submission,":["it","there's"],"previous value,":["as"],"previous version":["back,","that"],"previous version,":["though"],"previous version.":["Is","Is","Still"],"previously aware":["was"],"previously, `valid-nucleotide?`":["could"],"previously, it":["is"],"previously, that":["it"],"primary argument":["and"],"primary being":["that"],"primary library":["authors."],"primary purpose":["is"],"prime factorization":["exercise"],"prime factors":["at","of"],"prime number":["sequence"],"prime numbers":["already."],"principal action":["of"],"principle applies":["to"],"principle as":["in"],"principle of":["least","least"],"principles and":["patterns."],"prior in":["the"],"prior to":["splitting?","splitting","converting"],"private (using":["`defn-`)"],"private `question?`":["function"],"private and":["ending"],"private are":["unnecessary."],"private as":["well."],"private but":["I"],"private defn's":["–"],"private function":["that","to","useful","`anagram?`","for","could","to"],"private function,":["for","and","hence"],"private function.":["It'll"],"private functions":["with","with","with","to","with","with","with","with",":)","(`defn-`)","and","for","with","with","with","by","or","make","sounds","in","with","with","with","with","with","with","at","are","but","that","above"],"private functions,":["it"],"private functions.":["Thanks","I'm"],"private functions?":["That","Or","Also,"],"private helper":["methods","methods","method"],"private helpers":["functions"],"private if":["this"],"private in":["scope"],"private is":["to"],"private like":["the"],"private method":["for"],"private method.":["I"],"private methods":["with","with","with","with","though.","that","for","via","via"],"private since":["they"],"private so":["you"],"private using":["`defn-`?"],"private variables":["that"],"private vars":["for"],"private version":["of"],"private via":["`defn-`."],"private with":["`defn-`?","`defn-`"],"private would":["be","be"],"private you":["can"],"private) vars":["that"],"private), and":["by"],"private, don’t":["you"],"private, per":["suggestion."],"private, the":["visual"],"private, there's":["no"],"private, using":["the"],"private. I":["just"],"private. No":["sense","sense"],"private. One":["thing"],"private. So,":["for"],"private? They":["don't"],"privately accessible":["via"],"probably (more":["weasel"],"probably OK":["just"],"probably a":["better","good","bikeshed","cleaner","better","way","good","bad","bit","more"],"probably about":["twice"],"probably also":["bring","split"],"probably assign":["nucleotide"],"probably bad":["form,"],"probably be":["the","private.","extracted","private.","private.","the","reduced","simplified","overkill","the","a","a"],"probably became":["superfluous"],"probably been":["more"],"probably better":["to","written","spelled"],"probably compensates":["for"],"probably could":["do"],"probably declare":["helper","`query-type`"],"probably define":["vars"],"probably do":["something","another","at"],"probably doesn't":["make"],"probably don't":["need","have","have"],"probably easier":["to"],"probably fall":["over"],"probably faster":["and"],"probably fine":["to"],"probably fine,":["but"],"probably fine.":["You're"],"probably get":["rid"],"probably go":["with","with","with"],"probably good":["practice"],"probably have":["some"],"probably help":["to"],"probably in":["the"],"probably infer":["the"],"probably intended":["to"],"probably just":["a","does","inline","leave"],"probably lacks":["this"],"probably look":["at"],"probably make":["all","more","those","this"],"probably missing":["some"],"probably more":["appropriate","idiomatic","idiomatic"],"probably mostly":["for"],"probably much":["less"],"probably not":["tonight","worth","used","ideal","what","right"],"probably on":["the"],"probably overkill":["but"],"probably personal":["preference:"],"probably put":["the"],"probably revise":["this"],"probably right":["about"],"probably should":["stop","drop"],"probably shouldn't":["expose"],"probably simplify":["things"],"probably still":["be"],"probably straightforward":["to"],"probably submit":["another"],"probably switch":["back"],"probably the":["better"],"probably think":["about"],"probably to":["implement"],"probably treat":["it"],"probably try":["to"],"probably up":["to"],"probably use":["`last`","`last`","`last`","the","something","`clj-time`"],"probably vastly":["improve"],"probably want":["to","to"],"probably what":["hunts"],"probably where":["I'd"],"probably work.":["But"],"probably would":["want"],"probably you":["get"],"probably. I":["don't"],"problem I":["had","encountered"],"problem are":["checking"],"problem as":["follows:","outlined"],"problem at":["hand,"],"problem before":["I"],"problem by":["splitting","using"],"problem definition.":["But"],"problem didn't":["really"],"problem domain":["that","that"],"problem for":["the"],"problem if":["you"],"problem in":["other","javascript;"],"problem into":["little"],"problem is":["all","in","working","arranging","using","the"],"problem of":["not","readability"],"problem several":["different"],"problem simply":["isn't"],"problem so":["why"],"problem specification":["whether","in","changes","just"],"problem that":["this","you're","it"],"problem there":["is"],"problem to":["Clojure,","tackle."],"problem was":["a","the"],"problem we're":["dealing"],"problem with":["it","`(=","that","a","it,","the","this","poor","the"],"problem within":["one"],"problem would":["inevitably"],"problem, I":["think","avoided","wanted"],"problem, and":["even"],"problem, so":["you","you"],"problem, we":["end"],"problem, which":["is"],"problem-specific predicates":["`question?`"],"problem. But":["since"],"problem. Can":["this"],"problem. Check":["out"],"problem. It":["made"],"problem. Since":["you"],"problem. The":["tests","body","code"],"problem. `clojure.string/blank?`":["tells"],"problems I":["came"],"problems are":["compared"],"problems both":["turned"],"problems here,":["but"],"problems in":["that"],"problems were":["related"],"problems with":["identifying","that"],"problems. Just":["keep"],"problems. Obviously":["this"],"procedural. What":["do"],"process I":["think"],"process a":["large"],"process can":["be"],"process could":["be"],"process into":["a"],"process may":["look"],"process the":["word","`word`","subject"],"process to":["put","be"],"process where":["input","data"],"process, yet":["it"],"process-fn1 process-fn2":["...)"],"process-fn2 ...)":["bad-number)"],"process-number just":["computes"],"process. Maybe":["some"],"processed form":["in"],"processed list.":["There's"],"processed once.":["You"],"processed version":["of"],"processed word":["in"],"processing `word`":["with","with","with","over"],"processing as":["soon"],"processing everything":["at"],"processing functions,":["is"],"processing if":["`potential-anagrams`"],"processing it":["for"],"processing operation":["in"],"processing overhead":["of"],"processing stops":["and"],"processing the":["same","same","word","word","word","word","number.","word","`target`","README","word"],"processing to":["reduce"],"processing when":["number"],"processing word":["over"],"process… I":["even"],"produce an":["`AssertionException`,"],"produce the":["same"],"produce what":["effectively"],"produce. As":["I"],"produces a":["map","new"],"professionally for":["~2,5"],"proficient with":["clojure,"],"program I":["may"],"program coped":["with"],"program even":["shorter."],"program executes,":["but"],"program is":["supposed"],"program just":["test"],"program more":["effective","effective"],"program much":["more","more","more","more","more"],"program only":["needs"],"program should":["be"],"program simpler":["I"],"program, I":["just","just"],"program, but":["I"],"program, mainly":["based"],"program. I":["wouldn't","would"],"program. So":["feel"],"program? ;)":["Binding"],"program? Can't":["imagine"],"programmatically build":["those"],"programmed in":["Scheme"],"programmer and":["when"],"programmer-lingo with":["words"],"programming and":["currying","wanted","don't"],"programming in":["other"],"programming languages,":["for"],"programming novice":["so"],"programming. :p":["Good"],"progress test":["to"],"project because":["of"],"project that":["involved"],"project. I":["wanted"],"project.clj file":["because"],"project.clj would":["end"],"projects would":["make"],"promising. I'll":["upload"],"promoted to":["a"],"prompt \"?\")`":["scans"],"prompt to":["be"],"proper code":["formatting"],"proper destructuring:":["http://blog.jayfields.com/2010/07/clojure-destructuring.html"],"proper indentation":["and"],"proper indentation.":["Another"],"proper lein":["projects"],"proper method":["to"],"proper ordering.":["This"],"proper terms":["for"],"proper tools":["for"],"properly learn":["Clojure."],"properly, every":["word"],"properly, so":["I"],"property ````(fn":["[...]...)```"],"property in":["question."],"property individually.":["Admittedly"],"property that":["it"],"proposal; sorry":["if"],"proposed, although":["I"],"proposing new":["tests,"],"props on":["that."],"protect both":["the"],"protocol -":["keyword"],"protocol and":["record","is","defrecord."],"protocol for":["these"],"protocol is":["provided"],"protocol name":["should"],"protocol to":["ask"],"protocol using":["left/right/advance"],"protocol, so":["it"],"protocols so":["you"],"protocols) -":["make"],"protocols, records":["and"],"protocols, types":["and"],"protocols/types and":["java","Java"],"proud of":["it."],"prove me":["wrong"],"proved actually":["slightly"],"proven wrong":[":)"],"provenance, but":["it's"],"provide a":["default","slightly","custom"],"provide better":["readability."],"provide feedback.":["When"],"provide this":["'safety'."],"provide with":[":only,"],"provided (based":["on"],"provided by":["the","[clojure.string](http://clojure.github.io/clojure/clojure.string-api.html)"],"provided clarification":["on"],"provided in":["string."],"provided tests":["I'm"],"provides a":["nice"],"provides little":["additional"],"providing a":["string"],"public \"API\"":["non-public."],"public API":["at","that","at","non-public.","at","/"],"public API.":["Also,","It"],"public and":["non-public","more"],"public api":["to","to","at","near","so","is"],"public constructors":["and"],"public definition.":["I","Fixed."],"public first":["/"],"public functions":["in","(mostly","implemented"],"public if":["this"],"public interface":["anyway."],"public interface.":["Is","Remember","However,"],"public is":["response-for.","your"],"public method":["instead"],"public methods":["on"],"public one":["is"],"public one.":["Though"],"public or":["private?","private?"],"public with":["`defn-`"],"public, tag":["them"],"public. Everything":["else"],"public. It":["makes"],"publicly used?":["It's"],"pull \"T\"":["and"],"pull in":["just"],"pull out":["a","the"],"pull request":["that","merged","with","for","and"],"pull that":["function"],"pull the":["entire","validation"],"pull-request to":["fix"],"pulled out":["into"],"pulled some":["of"],"pulling in":["anything"],"pulling it":["out"],"pulling out":["too,","the","your"],"pulling the":["bottles"],"pulling their":["weight."],"pulls in":["only"],"punctiation in":["`\"ZOMG"],"punctuation are":["ignored,"],"punctuation as":["well."],"punctuation in":["anything"],"pundit, but":["I"],"pure clojure":["style,"],"pure functions,":["so"],"purists would":["prefer"],"purpose and":["to"],"purpose function":["that"],"purpose is":["to"],"purpose of":["this","avoiding","the","the","that"],"purpose random":["string"],"purpose would":["be"],"purpose, I":["think"],"purpose, and":["it"],"purposes clearer":["and"],"purposes of":["exercism,","this","this"],"pursue your":["advice"],"push back":["on"],"push in":["the"],"push it":["together"],"push me":["toward"],"push that":["idea","DRY"],"push the":["`if`"],"pushed a":["new","new"],"pushed an":["update,"],"pushed the":["test"],"pushed to":["do"],"put (seemingly":["random)"],"put :require":["and"],"put \u003ccode\u003e?\u003c/code\u003e":["in"],"put `apply":["str`"],"put `require`":["inside"],"put a":["newline","small","lot","bit","message"],"put all":["the"],"put between":["the"],"put constants":["in"],"put declarations":["inside"],"put everything":["in"],"put first":["pair"],"put in":["their","a","to"],"put it":["inside"],"put lines":["and"],"put mapping":["under"],"put newlines":["in"],"put off":["by"],"put on":["the"],"put parens":["with"],"put public":["API"],"put require":["directly"],"put some":["of"],"put the":["actual","parameter","last","body","`if`","responses","`conj`","`use`","`require`s","requires","helpers","parens","previous","args","build-finder"],"put them":["in"],"put these":["beyond"],"put those":["bindings"],"put through?":["Then"],"put together":["a"],"put use/require":["inside","inside"],"puts `(:require`":["on"],"puts additional":["burden"],"puts the":["result"],"puts us":["in"],"putting [text]":["inside"],"putting `(:require":["..)`"],"putting `^:private`":["between"],"putting `cond`":["on"],"putting a":["and"],"putting a/b":["directly"],"putting args":["on"],"putting arguments":["list"],"putting bindings":["with"],"putting in":["a"],"putting it":["on"],"putting the":["paren","set","top","public","`(:require","consequent","answers","parens.","logic","args","private"],"putting them":["in","into"],"putting together":["lines"],"python data":["structures"],"python's all":["to"],"qualified namespace,":["like"],"qualify as":["anagrams)"],"qualities. `letfn`":["just"],"quality to":["it"],"query) \\?)":["(not"],"query)))` is":["certainly"],"query))` to":["the"],"question (upper-case":["question))`"],"question ,":["the"],"question -":["it"],"question I":["was"],"question about":["the","inline"],"question be":["true"],"question can":["never"],"question check":["could","more","into"],"question could":["be"],"question ends":["with"],"question in":["one","particular:"],"question mark":["'?'","(e.g.","or","is","as","at","to","is","indicating","e.g."],"question mark)":["implies"],"question mark.":["Also,","e.g.","So"],"question marks":["in","in","instead","instead:","in"],"question of":["performance","performance","familiarity.","testability...)","style,"],"question test":["is"],"question that's":["in"],"question the":["usefulness"],"question you":["are"],"question, I'm":["on"],"question, but":["yes"],"question, if":["I"],"question, just":["compare"],"question, or":["yelled","shouting,","shouting,"],"question. The":["best"],"question. This":["also"],"question. What":["do"],"question2 it":["returns"],"question: would":["it"],"question? [phrase]":["(="],"question? and":["statement?","statement?"],"question? predicates.":["It's"],"question? should":["return"],"question? the":["constant"],"question? to":["use","make"],"question?, etc)":["you"],"question?, so":["I"],"questionable because":["of"],"questioning to":["me,"],"questions -":["I"],"questions and":["exclamations."],"questions for":["this.","nitpickers:"],"questions should":["come"],"questions to":["begin"],"questions would":["need"],"questions. The":["fourth"],"questions. Try":["checking"],"queue up":["change"],"quicker and":["easier"],"quickly enough":["at"],"quickly yield":["something"],"quite a":["few","few","bit","bit","few","nice","bit.","bit.","bit.","bit"],"quite as":["nice","good"],"quite complex.":["I"],"quite concise":["now..."],"quite confusing":["and"],"quite deep)":[":)"],"quite difficult!),":["but"],"quite easy":["to"],"quite enjoyed":["using"],"quite expressive":["enough"],"quite figure":["out"],"quite get":["it.","it."],"quite good":["picture"],"quite grasped":["the"],"quite hard":["to"],"quite idiomatic":["to"],"quite interesting":["approach."],"quite long":["made-up"],"quite long,":["but"],"quite more":["easy"],"quite new":["to"],"quite pants":["indeed."],"quite place":["the"],"quite readable.":["`condp`"],"quite right":["here.","there"],"quite short":["and"],"quite sure":["why"],"quite understand":["the","the"],"quite useful":["when"],"quite well":["and"],"quote. No":["need"],"quotes between":["function"],"r (clojure.string/replace":["dna-seq","dna-seq","dna-seq","dna-seq","dna-seq","dna-seq"],"r (to-rna":["dna-seq)))","dna-seq)))","dna-seq)))","dna-seq)))","dna-seq)))","dna-seq)))"],"r so":["as"],"rain on":["your"],"raining out!\"":["with"],"raised the":["question"],"raised. This":["works"],"rambled on":["completely"],"ran into":["issues"],"ran the":["test","same","tests"],"ran. Maybe":["my"],"rand-chars function":["that"],"random (not":["such"],"random at":["all"],"random collisions.":["What"],"random integers":["between"],"random name":["and"],"random string":["generation","generator"],"random thing":["that's"],"random) closing":["brackets"],"randomly at":["all!"],"randomness -":["well,"],"range a":["bit"],"range and":["then"],"range can":["also"],"range generation":["is"],"range generation.":["Also,"],"range instead":["of","of"],"range of":["characters","allowed","characters","characters","abstractions","your"],"range takes":["an"],"range's third":["argument."],"range-from-args holy":["crap"],"range-name ['first":["'second"],"range. Could":["be"],"range. I'll":["try"],"range. You":["might"],"range? That":["might"],"ranges makes":["for"],"ranges. This":["way"],"rare and":["mostly"],"rare in":["real"],"rather I":["used"],"rather a":["matter"],"rather agree":["with"],"rather avoid":["too"],"rather communicate":["as"],"rather enamored":["of"],"rather extract":["numeric"],"rather for":["the"],"rather have":["just"],"rather language":["agnostic"],"rather like":["```#()```","solving"],"rather liked":["one"],"rather nicely":["to"],"rather not":["using","use"],"rather personal":["preference"],"rather redundant.":["Other"],"rather second":["element"],"rather stick":["with"],"rather suggest":["`:require`"],"rather than":["character","on","Java","`toUpperCase`.","resorting","my","generate","strings,","for","calling","the","the","characters","a","string","the","learning","use","`sort`.","`condp`,","the","the","let","calling","\"unknown\"","the","using","using","\"piping","a","the","a","```require```,","`defn`","`anagrams-for`.","`()`","`defn`","use","Clojure.","loop","comments","a","really","explicitly","delegating","a","copy-and-pasting","just","\"def\"","```(.endsWith","leave","a","(=","filtering","putting","nested","inline","a","defn,","what"],"rather use":["the","`:exclude`"],"raw characters":["so"],"raw histogram,":["but"],"raw ints/longs.":["While"],"raw string":["recommended"],"raw strings":["here.","are"],"re-arrange your":["operations"],"re-defining `count`?":["You"],"re-evaluation much":["clearer."],"re-evaluation. I":["find"],"re-factoring that":["I'll"],"re-find was":["the"],"re-fu is":["bad"],"re-implement [`contains?`][1],":["no?"],"re-implementation of":["[`every?`](http://clojuredocs.org/clojure_core/clojure.core/every_q)."],"re-match (at":["least"],"re-match instead":["of"],"re-order the":["tests"],"re-ordered splitting":["the"],"re-ordering of":["the"],"re-seq when":["I"],"re-seq, which":["would"],"re-seq. Again,":["thanks"],"re-seq. I":["think"],"re-seq. Would":["a"],"re-use `bottles`":["to"],"re: lowercasing":["alphagram"],"re: private":["functions."],"re: responseLookup":["and"],"re: strings":["vs."],"reached my":["boredom"],"reaching into":["Java."],"reaction is":["that","that"],"read \"get":["the"],"read \"map":["map-to-rna\","],"read `not":["contains-x`"],"read a":["little","bit"],"read aloud":[";)"],"read and":["understand","understand","I","will","understand","understand."],"read as":["much"],"read backwards":["to"],"read because":["comments","comments","of"],"read becomes":["a"],"read better":["in"],"read each":["call","predicate"],"read easier":["if"],"read hard":["for"],"read if":["you","the","you"],"read in":["this"],"read is":["probably"],"read it":["wrong","you"],"read many":["times."],"read more":["like"],"read nicer":["if"],"read on":["its"],"read or":["provide"],"read really":["nicely."],"read some":["clojure"],"read that":["the"],"read the":["README.","spec","fn","code","code,","same","code","code","docs","code"],"read too":["much"],"read until":["you"],"read up":["on","on"],"read using":["`-››`","[-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E)"],"read very":["nicely"],"read, and":["I"],"read, but":["indeed,","I"],"read, if":["you"],"read, the":["function"],"read. Also":["`word-chars`"],"read. Can":["you"],"read. Consider":["eliminating"],"read. I":["think"],"read. I'm":["a"],"read. If":["I"],"read. Maybe":["there's"],"read. Note":["also"],"read. There's":["a"],"read. `declare`":["will"],"readability -":["think","still,"],"readability IMHO,":["especially"],"readability a":["favour","bit","bit."],"readability and":["understandability"],"readability any":["favour"],"readability at":["reasonable"],"readability but":["that"],"readability by":["interleaving"],"readability enough":["to"],"readability have":["you"],"readability here":["at",":)"],"readability here,":["it"],"readability if":["you"],"readability of":["your","my","`word-count`?","deeply","the"],"readability purpose":["and"],"readability to":["move","make","put","use"],"readability while":["at"],"readability with":["fitting","less"],"readability would":["suffer."],"readability) and":["provides"],"readability), does":["it?"],"readability, I":["want"],"readability, but":["keeps"],"readability, isn't":["it?"],"readability, it":["also"],"readability, you":["should","can"],"readability. But":["maybe"],"readability. I":["broke","also"],"readability. It":["would"],"readability. Java":["string"],"readability. That":["being"],"readability. Why":["not"],"readable a":["private"],"readable and":["idiomatic","clean","testable."],"readable approach":["I"],"readable as":["possible"],"readable based":["on"],"readable by":["creating","removing"],"readable code.":["There's","This"],"readable format":["than"],"readable high":["level"],"readable if":["you","you","they","you","it"],"readable in":["response","that","the"],"readable including":["`empty?`"],"readable on":["two"],"readable special":["because"],"readable than":["an","[A-Z]","the","a"],"readable that":["way..."],"readable the":["recur","cond"],"readable this":["way.","way."],"readable to":["put","me.","have"],"readable! Obviously":["in"],"readable, I":["see","like","like"],"readable, but":["only","I"],"readable, don’t":["you"],"readable, ways":["to"],"readable. *Do":["this"],"readable. As":["ever"],"readable. How":["does"],"readable. I":["did"],"readable. Is":["there"],"readable. Nice":["small"],"readable. One":["minor"],"readable. What's":["your"],"readable. `condp`":["is"],"readable/expresses intent":["better."],"readable; it's":["a"],"reader and":["its"],"reader can":["easily"],"reader for":["a"],"reader from":["simplicity"],"reader had":["little"],"reader has":["to"],"reader is":["confident"],"reader knows":["where"],"reader macro.":["Also,","Anyway"],"reader macros":["-","and"],"reader of":["the"],"reader recognize":["assertions"],"reader scan":["the"],"reader should":["be"],"reader where":["the"],"reader why":["swapping"],"reader will":["keep"],"reader's: I":["am"],"reader. In":["this"],"readers better,":["but"],"readers by":["adding"],"readers can":["understand"],"readers if":["you"],"readers know":["what"],"readers of":["my","this"],"readers to":["parse"],"readers understand":["what"],"readers with":["this"],"readers, I":["would"],"readily available":["in"],"reading [Library":["Coding"],"reading a":["*Lisp*.","few"],"reading and":["understanding","understanding"],"reading code":["that"],"reading condp":["with"],"reading doesn't":["have"],"reading in":["characters","words."],"reading stuff":["from"],"reading that":["code"],"reading the":["nitpicking","flow","source","code","response-for","book"],"reading them":["literally","literally"],"reading this":["on","somewhere"],"reading until":["it"],"reading your":["nit"],"readme (and":["my"],"readme for":["this"],"readme was":["pretty"],"reads \"compute":["the"],"reads a":["lot"],"reads better":["when","here."],"reads better,":["more"],"reads better.":["Is","With"],"reads better?":["I"],"reads more":["than"],"reads perfectly":["fine"],"reads pretty":["well"],"reads quite":["well"],"reads rather":["nicely"],"reads really":["nicely:"],"reads using":["```re-seq```"],"reads. I":["love"],"ready to":["move"],"real brain-teaser":["for"],"real code":["but"],"real code.":["Also,"],"real difference":["is"],"real good":["to"],"real intent":["of"],"real life":["string"],"real motivation":["for"],"real need":["to"],"real performance":["problem."],"real program":["I"],"real reason":["to"],"real sequence":["of"],"real system,":["we're"],"real world":["code","example."],"real-world case,":["maybe"],"realign the":["form"],"realised I":["might"],"realize that":["the","submitting","the","you","the"],"realize the":["only"],"realize there's":["some"],"realize you":["missed"],"realized I":["had","had"],"realized currying":["was"],"realized function":["you"],"realized replace":["would"],"realized that":["by","what","the","I","the","I've","an"],"realized the":["cleanest"],"realized what":["[`cl-format`](http://clojuredocs.org/clojure_core/clojure.pprint/cl-format)"],"realized with":["`frequencies`"],"realizing this,":["I"],"really a":["preferred","matter","way","nit,","word?"],"really about":["value"],"really an":["alphagram,"],"really annoying":["in"],"really appreciate":["you","the","feedback","feedback"],"really bad":["at"],"really be":["slower"],"really be?":["What"],"really belong":["in"],"really better.":["Did"],"really bothers":["me"],"really buy":["you"],"really can't":["find"],"really care":["to"],"really clean":["and"],"really clear":["and"],"really clear,":["great!"],"really comes":["down"],"really common":["clojure"],"really consult":["the"],"really convenient":["function"],"really could":["benefit"],"really crowded":["to"],"really decrease":["the"],"really describe":["what"],"really descriptive":["names."],"really do":["want"],"really don't":["like","know"],"really easy":["to"],"really ever":["need"],"really excite":["me."],"really express":["a"],"really finding":["this"],"really follow":["-"],"really following":["you"],"really get":["to"],"really getting":["nitpicky"],"really good":["to","point","idea.","though.","way"],"really good.":["Did","Reads"],"really great":["feedback,","tool!"],"really happy":["with"],"really hard":["to","to"],"really have":["to"],"really helped":["me"],"really helpful":["to","to"],"really helpful.":["I'm"],"really insightful":["and"],"really interesting":["implementation!"],"really irks":["me"],"really is":["something"],"really just":["depends","use","maps."],"really know":["clojure","what","about"],"really legible":[":)"],"really like":["the","this","the","to","tying","`string/blank?`,","the","this","how","that","the","where","resorting","this","the","your","the","to","the","the","the","the","how","the"],"really made":["the"],"really make":["sense","things"],"really makes":["it","it"],"really matter":["of","that"],"really matters":["for"],"really matters,":["are"],"really mysterious":["runtime"],"really necessary":["to","is"],"really need":["to","a","it,","to.","a","it."],"really needed.":["For"],"really needs":["to."],"really nice":["shortcut","overall."],"really nicely":["succinct,"],"really not":["happy"],"really nothing":["wrong"],"really only":["need"],"really relevant":["here,"],"really required":["making"],"really return":["true"],"really reveal":["the"],"really say":["*\"does"],"really see":["the"],"really should":["be","be."],"really sit":["right"],"really smelly.":["It's"],"really specify":["whether"],"really strange":["to"],"really take":["`words`,"],"really tell":["the"],"really that":["much"],"really the":["responsibility","case,","fact","right"],"really think":["that","of","this"],"really think,":["it"],"really thought":["of"],"really tiny":["nitpick"],"really understand":["the","why.","the"],"really undesirable":["to"],"really up":["to","to"],"really used":["in"],"really using":["them"],"really want":["to","to"],"really wanted":["to"],"really when":["you"],"really wish":["clojure","I"],"really wordy":["and"],"really would":["like"],"really. Shoot":["me"],"realm of":["taste."],"reapply so":["often."],"rearrange anything,":["it's"],"rearrange function":["definitions,"],"rearranging of":["lower-case"],"rearranging the":["order"],"reason I":["didn't","didn't","used","care","liked"],"reason I'd":["suggest"],"reason for":["it,","putting","the"],"reason in":["separating"],"reason it":["didn't"],"reason not":["to","to"],"reason that":["clojure"],"reason this":["exercise"],"reason through,":["but"],"reason to":["do","not","avoid","break","name","use"],"reason why":["some","`yell?`","your"],"reason you":["went","might","don't"],"reason you're":["generating","using"],"reason, I":["don't"],"reasonable algorithm":["for"],"reasonable enough;":["whether"],"reasonable level":["while"],"reasonable other":["than"],"reasonable thing":["to"],"reasonable to":["say","me"],"reasonably asserted":["to"],"reasonably clean":["way"],"reasonably correct,":["come"],"reasoning about":["using"],"reasoning behind":["that"],"reasons for":["the"],"reasons that":["I"],"reasons when":["working"],"reasons, but":["are"],"reasons. Other":["than"],"reasons. Probably":["because"],"recalcitrant teenager)":["\"Whatever.\""],"recalled that":["in"],"recalled the":["section"],"receive, which":["is"],"received, this":["version:"],"receives as":["input"],"receives something":["like"],"recently is":["making"],"recently pointed":["out,"],"recently started":["learning"],"recently updated":["the"],"recheck `yell`":["and"],"reclaim a":["substantial"],"recognize any":["all-caps"],"recognize assertions":["about"],"recognize is":["that","that","the"],"recognized in":["the"],"recognizing acronyms":["is"],"recommend -":["but"],"recommend doing":["is"],"recommend extracting":["the"],"recommend getting":["rid"],"recommend refactoring":["your"],"recommend trying":["to"],"recommend you":["check"],"recommendation is,":["and"],"recommendations from":["rubysolo"],"recommended for":["a"],"recommended in":["the","the","the","functional"],"recommended rather":["than"],"recommended that":["use"],"recommending :require/:refer":["instead"],"recomputation every":["time"],"recomputes `sorted-lowered":["s`"],"reconsidered the":["feedback"],"record features":["of"],"record itself.":["e.g."],"record the":["information"],"record, you":["don't"],"record. I":["incorporated"],"records and":["general"],"records or":["whatever"],"recourse if":["it's"],"recreated Clojure's":["`frequencies`"],"recreating its":["functionality"],"recreating the":["string?"],"recur function":["is."],"recur when":["possible"],"recursion (when":["function"],"recursion broke":["my"],"recursion for":["building","building"],"recursion happy,":["and"],"recursion in":["`sing`"],"recursion is":["fun","bad"],"recursion isn't":["as"],"recursion this":["time."],"recursion to":["avoid","avoid"],"recursion, consider":["using"],"recursion. Try":["implementing"],"recursive (`let`":["does"],"recursive function":["and"],"recursive solution":["for"],"recursive way":["of"],"recursively called":["itself"],"redefining `count`.":["Thanks"],"redefining core":["functions."],"reduce boolean":["values"],"reduce call":["easier"],"reduce clutter":["inside"],"reduce code":["size"],"reduce duplication":["(need","between"],"reduce fairly":["easily."],"reduce for":["this"],"reduce function":["and","to","where"],"reduce itself":["which"],"reduce looks":["nice."],"reduce nesting":["levels"],"reduce rather":["than"],"reduce repetition":["slightly"],"reduce some":["typing"],"reduce the":["number","processing","amount","amount","amount","time","overhead","amount","overhead","clutter","repetition.","repetition","nesting","number","duplication","repetition."],"reduce this":["overhead"],"reduce you":["would"],"reduce-fn, you":["can"],"reduce-kv would":["probably"],"reduce. From":["a"],"reduce. It's":["a"],"reduce/conj/{} and":["short"],"reduced the":["complexity"],"reduced to":["a","one","produce","a","a"],"reduced with":["an"],"reducer once":["I"],"reducers to":["do"],"reduces readability":["of","IMHO,"],"reduces the":["clutter."],"reduces. Going":["to"],"reducing duplication":["in"],"reducing overhead":["of"],"reducing processing":["overhead"],"reducing the":["overhead","overhead","overhead","overhead","overhead","repetition,","overhead"],"reduction could":["be"],"reduction feels":["odd."],"reduction is":["left"],"reduction? That":["way"],"redudant call":["to"],"redundancy and":["repetition"],"redundant `nil`":["for"],"redundant call":["to"],"redundant calls":["with"],"redundant checks),":["an"],"redundant functions":[":)"],"redundant if":["you"],"redundant processing":["when"],"redundant since":["`:else`"],"redundant space":["before","before"],"redundant the":["methods"],"redundant to":["use"],"redundant when":["Clojure"],"redundant whitespace":["chars"],"redundant with":["the","a"],"redundant, you":["can"],"redundant. Other":["than"],"redundant. this":["cleaned"],"ref is":["a"],"ref per":["suggestion"],"ref, dosync,":["alter"],"ref. Was":["just"],"refactor in":["the"],"refactor it":["to"],"refactor the":["variables"],"refactor with":["little"],"refactor, and":["currently"],"refactor. Hopefully":["my"],"refactored to":["split","optimise","use"],"refactored transform-char":["to"],"refactored your":["conditions"],"refactoring at":["all."],"refactoring of":["the"],"refactoring on":["the"],"refactoring that":["out"],"refactoring those":["into"],"refactoring your":["code","tests"],"refactoring. I":["needed"],"refactorings and":["simplifications"],"refactorings. Got":["rid"],"refactorize it":["with"],"refer (trim":["upper-case)]))"],"refer exactly":["what"],"refer in":["specific"],"refer to":["them","the","clojure","it","them","the","it","clojure","`clojure.string`","specific","`clojure.string`"],"reference -":["there's"],"reference `clojure.core/count`":["explicitly"],"reference equality":["check,"],"reference on":["the"],"reference so":["that"],"reference the":["strings","built-in"],"reference to":["the"],"reference upper-case":["by"],"reference what":["you"],"reference, if":["you"],"reference, when":["saying"],"referenced, but":["I'll"],"references a":["function."],"references could":["be"],"references for":["that)."],"references to":["principles","predicates"],"refering only":["`lower-case`"],"referred to.":["Since"],"referred you":["to"],"referring to":["the"],"referring to,":["please?"],"refers to":["such"],"reflect that":["domain"],"reflect the":["real-world","intent"],"reflect what":["it's"],"reflect your":["opinion"],"reflected in":["[the","tests"],"reflects a":["bit"],"refs are":["necessary","modified"],"regard -":["or"],"regard to":["handling"],"regarding `uppercase?`.":["There"],"regarding how":["words"],"regarding naming":[":-)"],"regarding the":["position","default","order","simple"],"regarding your":["naming."],"regards of":["`count-nucleotides`"],"regards to":["```.endsWith```","making","development","`nil-to-zero`","you","the"],"regex \"positive\"":["(what"],"regex #\"[a-zA-Z]\"":["to"],"regex `\"\\?$\"`?":["I"],"regex a":["bit"],"regex and":["I"],"regex approach.":["The"],"regex as":["a"],"regex based":["solution"],"regex checks":["and"],"regex clauses?":["(And"],"regex could":["be"],"regex feels":["oh-so-right"],"regex for":["the","the","the","the"],"regex functions":["like","that"],"regex here":["in"],"regex in":["`yelling?`"],"regex is":["to","a","not"],"regex just":["to"],"regex literal":["for"],"regex looks":["for"],"regex matches":["just"],"regex matches.":["The"],"regex matching?":["It's"],"regex may":["have"],"regex needs":["a"],"regex or":["a"],"regex suggests":["it"],"regex than":["mine"],"regex that":["would"],"regex to":["`split`","replace","cover","split","do","solve","solve","split"],"regex too,":["so"],"regex understood":["by"],"regex with":["`re-find`"],"regex works,":["I"],"regex would":["make"],"regex you":["can","could","can"],"regex's to":["string"],"regex, `clojure.string/replace`":["can"],"regex, because":["it"],"regex, but":["regex","not"],"regex, count,":["and"],"regex, you":["could"],"regex-based solution":["could"],"regex-based solution,":["why"],"regex-foo it":["too"],"regex. Couldn't":["get"],"regex. Did":["you"],"regex. If":["you"],"regex. Nicely":["done"],"regex. Nothing":["says"],"regex. When":["I"],"regex. You":["might"],"regex? Or":["could"],"regex] (re-matches":["regex"],"regexes and":["make"],"regexes for":["replacements"],"regexes just":["to"],"regexes though.":["Also,"],"regexes to":["work","the"],"regexes will":["probably"],"regexes, or":["is"],"regexes. Cool.":["Do"],"regexes? I":["bet"],"regexp check,":["swapping"],"regexp checks":["to","to"],"regexp for":["`angry?`","the"],"regexp in":["`question?`.","`question?`?"],"regexp like":["functions"],"regexp may":["be"],"regexp search-replace":["(`string/replace`)."],"regexp that":["matches"],"regexp to":["require"],"regexps and":["`.trim`!"],"regexps can":["be"],"regexps where":["traditional"],"regression in":["`string/replace`"],"regression that":["interferes"],"regular \u003ccode\u003econd\u003c/code\u003e":["like:"],"regular expression":["to","to","for","checking","goes,","version","to","and","version.","for","for","are","in","for"],"regular expression,":["so"],"regular expression.":["Instead","I","I","Otherwise"],"regular expression?":["(otherwise"],"regular expressions":["right","to","to","also.","I","were","to","for","don't","since","but","and","makes","for"],"regular expressions,":["I"],"regular expressions.":["They're","Originally,","Most"],"regular expressions?":["That","For"],"regular string":["literals"],"regular string\")```":["without"],"reinventing `map`":["here"],"related `-\u003e`":["macro"],"related conversions":["and"],"related function":["in","apply."],"related functions":["apply.","like"],"related functions.":["Not","They"],"related note,":["you're"],"related protocols":["so"],"related protocols)":["-"],"related to":["```to-rna```.","what","the","mixing"],"related triggering":["input"],"relation to":["the"],"relationship of":["nucleotide-counts"],"relative clumsiness":["of"],"relatively minor,":["but"],"relatively rare":["in"],"relatively simple":["function."],"relevant example":["and"],"relevant here,":["but"],"relevant here.":["It"],"relevant to":["code"],"relied mostly":["on"],"relies on":["good"],"reluctant to":["dip"],"rely on":["regular","a","built-in"],"relying on":["regular","regexps"],"relying solely":["on"],"remain in":["the"],"remaining nitpicks":["are"],"remark about":["macros","`frequencies`","3rd"],"remark into":["account."],"remark, but":["please,"],"remarks differently":["-"],"remedying that":["soon."],"remember if":["it"],"remember is":["that"],"remember needing":["it"],"remember now":["where."],"remember reading":["this"],"remember that":["`nil`","this","the","```split```"],"remember, Clojure":["is"],"remembering `assert`":["(not"],"reminder about":["attributes"],"reminder re:":["private"],"reminder that":["naming"],"reminds me":["of","of"],"remove `add-frequency`":["when"],"remove all":["the"],"remove any":["unwanted"],"remove duplication":["of"],"remove extra":["tests"],"remove it;":["it"],"remove line":["2."],"remove some":["of"],"remove that":["one."],"remove the":["undocumented","necessity","docstrings","test","`clojure.string/`","`clojure.string/`","double","`clojure.string`","`dissoc`","validate","need"],"remove unused":["code","import"],"removed (or":["...)"],"removed `*-response`":["vars,"],"removed `seq-to-dna`":["because"],"removed in":["the"],"removed it":["and","to"],"removed partition":["and"],"removed the":["second","word","require","chaining","double"],"removes that":["generality."],"removes the":["need"],"removing `#`":["from"],"removing `(=":["word-signature"],"removing cruft":["after"],"removing the":["implementation","`seq`"],"removing unused":["\"strip\""],"rename `question2?`":["to"],"rename it":["for"],"rename of":["the"],"rename that":["function"],"rename the":["argument","method","parameter"],"rename your":["argument."],"renamed it":["in"],"renamed to":["`anagram`","something"],"renamed to,":["for"],"renaming of":["the"],"renaming you":["`x`"],"reorder function":["definitions"],"reorder the":["code","conditions"],"reordering the":["conds"],"repeat `(sort":["(lower-case"],"repeat `sentence`":["every"],"repeat n;":["the"],"repeat that":["logic","here."],"repeat the":["zero","function"],"repeat use":["of"],"repeated ideas":["into"],"repeated text,":["and"],"repeated, staccato,":["BAM"],"repeatedly and":["took"],"repeatedly apply":["`character-frequencies`"],"repeatedly n":["instead"],"repeatedly processing":["the"],"repeatedly with":["the"],"repeatedly. But":["I"],"repeating `random-letter`":["and"],"repeating a":["couple"],"repeating strings":["a"],"repeating tasks":["-"],"repeating the":["map"],"repeats the":["value."],"repetition in":["*content*,","beer-line-2,"],"repetition of":["the","testing"],"repetition slightly":["--"],"repetition when":["building"],"repetition, although":["as"],"repetition. Especially":["in"],"repetition. My":["first"],"repetition. Something":["like:"],"repetitions in":["the"],"repetitive it":["is."],"repl I":["never"],"repl with":["a"],"repl, you":["will"],"repl. Having":["the"],"repl. In":["code"],"repl. Learned":["something."],"repl. The":["preferred","preferred","preferred"],"replace \".endsWith\"":["with"],"replace *some*":["of"],"replace `(str":["letter)`"],"replace `\\T`":["to"],"replace ``has-match?```":["by"],"replace `clojure.string/replace`":["with"],"replace `is_foo`":["with"],"replace a":["constant"],"replace cond":["with"],"replace for":["the"],"replace function":["that","that","in","instead","that"],"replace functions":["that"],"replace instead":["of"],"replace is":["clearer,"],"replace it":["with"],"replace lines":["like"],"replace more":["than"],"replace seems":["like","like"],"replace some":["code"],"replace something":["in"],"replace the":["`if`s","use","java","else"],"replace them":["with"],"replace to":["solve"],"replace works,":["and"],"replace would":["just"],"replace your":["count"],"replace)]` would":["be"],"replace, in":["this"],"replace. If":["you"],"replace. also":["lower-cased"],"replaced apply/merge/map":["with"],"replaced by":["another"],"replaced my":["own"],"replaced use":["with"],"replaced with":["string",":require","`(not-any?","the","a"],"replacement could":["be"],"replacement for":["the"],"replacement function":["are"],"replacement functions":["as"],"replacement or":["regular"],"replacement to":["do"],"replacements that":["I"],"replacing `nucleotides`":["string"],"replacing all":["occurrences","occurrences","the"],"replacing characters":["in","in","in"],"replacing comments":["by"],"replacing every":["other"],"replacing means.":["Something"],"replacing the":["T's","T","cond"],"replacing your":["use"],"repls for":["the"],"reply here":["with"],"represent in":["this"],"represent individual":["nucleotides,"],"represent the":["raw","characters"],"represent, maybe":["you"],"representation at":["all."],"representation changed":["in"],"representation from":["the","strings"],"representation is":["the"],"representation like":["map"],"representation of":["a","a","the"],"representation to":["a"],"representation will":["become"],"representation, here":["`\\?`."],"represented by":["something","something","upper-case"],"representing a":["nucleotide"],"representing robot":["contains"],"represents. I":["also"],"request and":["create"],"request for":["an"],"request merged":["into"],"request that":["makes"],"request with":["the"],"request))` makes":["the"],"require `blank?`":["and"],"require `clojure.string`,":["as"],"require at":["the"],"require can":["by"],"require defining":["some"],"require directly":["in"],"require entries":["with"],"require in":["that"],"require into":["your","the"],"require it":["as"],"require more":["logic"],"require or":["import"],"require since":["there's"],"require that":["the","your"],"require this":["to"],"require when":["you"],"require, guys.":["I"],"require, not":["sure"],"require. It":["works"],"require/refer over":["use/only?"],"require/refer so":["you","you"],"require/use/import in":["the"],"required -":["at"],"required code":["in"],"required feature":["(according"],"required functions":["only"],"required input":["format"],"required into":["a"],"required is":["to"],"required it.":["You're"],"required making":["a"],"required to":["read"],"requirement (let's":["leave"],"requirement ?":["Coming"],"requirement for":["clojure.string."],"requirement on":["everyone"],"requirement that":["the"],"requirements and":["I"],"requirements as":["possible"],"requirements changed":["and"],"requirements of":["this","the","the"],"requirements severely":["limit"],"requirements state":["that"],"requirements, much":["of"],"requires a":["comma."],"requires and":["imports"],"requires in":["the"],"requires the":["ugly"],"requiring `clojure.string`":["in"],"requiring me":["to"],"requiring the":["`clojure.string`","`clojure.string`","`if`"],"rereading the":["literature..."],"rerunning the":["function"],"researching and":["came"],"reservations. Ignoring":["the"],"reserve the":["ability"],"reserve them":["for"],"reserved for":["protocols/types","protocols,","extremely","specific","longer","use"],"reset-name function":["suggest"],"reset-name, but":["I"],"reshuffle your":["conditions"],"resolve it":["without"],"resolve mapped":["nucoleotides."],"resolve symbol:":["upper-case","my-other-value"],"resolve this":["issue."],"resort in":["any"],"resort to":["java","Java","`str/join`.","repeatedly","specification"],"resorting to":["Java.","the","the","the","clojure.core/count","some"],"resource I":["can"],"respOnse typo":["and"],"respectfully disagree":["on"],"respond correctly":["to"],"respond to":["people\"."],"respond with":["\"Woah,","\"Woah,","\"Woah,","\"Woah,"],"respond, but":["it's"],"respond. That":["being"],"responded with":["\"Fine,"],"responder function":["as"],"responding the":["way"],"responding with":["nil."],"responds to":["*shouting*"],"response \"Whatever.\")`":["which"],"response (with":["related"],"response and":["sentiment"],"response answers":["the","the"],"response as":["the"],"response but":["with"],"response category":["than"],"response each":["type"],"response for":["my","the","a"],"response instead":["of"],"response is":["not"],"response is.":["The"],"response of":["\"Say"],"response strings":["themselves","private"],"response strings,":["it"],"response to":["some","shouting","a","a"],"response twice":["in"],"response, and":["return","return"],"response, at":["least"],"response, based":["on"],"response, but":["with","that"],"response-for [msg]":["...)"],"response-for a":["total"],"response-for and":["the"],"response-for are":["clearer."],"response-for breaks":["this"],"response-for expression":["simpler."],"response-for function":["first","is"],"response-for is":["public.","really"],"response-for logic":["in"],"response-for method":["instead","do"],"response-for might":["help"],"response-for more":["readable"],"response-for that":["is"],"response-for to":["stay"],"response-for with":["defn-"],"response-for, because":["they"],"response-for, but":["I"],"response-for-basic and":["I"],"response-for-basic is":["a"],"response-for. In":["general,","this"],"response-for. It":["might"],"response-for. defn-":["can"],"response-for: comments":["are"],"response. Could":["you"],"response. I":["think"],"response. I'm":["not"],"responseLookup and":["hash"],"responses -":["maybe"],"responses align":["but"],"responses and":["to"],"responses as":["well."],"responses becomes":["too"],"responses should":["probably"],"responses string":["in"],"responses to":["change","handle"],"responses)))` to":["access"],"responses, but":["the","I'd"],"responses. For":["me,"],"responses. It":["might"],"responses. They":["called"],"responses? At":["the"],"responsibility of":["this"],"responsible for":["working","routing"],"responsible way":["to"],"rest of":["functions.","the","the","the"],"rest, \"drop":["3"],"restrained from":["over-engineering,"],"restricts the":["keyword"],"resubmit if":["I"],"resubmitted a":["version"],"resubmitted with":["standalone"],"resubmitted. Seems":["exercism"],"result are":["\"grouped\""],"result back":["to"],"result but":["in"],"result could":["look"],"result for":["symbol"],"result in":["a","actually","it’s","having"],"result is":["\"Fine,","so","much"],"result of":["the","thinking","submitting","evaluating","that","one","the"],"result on":["the"],"result they":["don't"],"result works":["better"],"result would":["be"],"result. If":["the"],"resulting functions":["will"],"resulting list":["to"],"resulting sequence":["will"],"results are":["much"],"results aren't":["super"],"results from":["thinking"],"results in":["the"],"results of":["all","those."],"results to":["flow"],"results when":["working"],"results will":["be"],"results, though":["they"],"results. I":["also"],"ret {word":["(+"],"retrieve the":["nucleotide","word"],"retrieving elements":["-"],"retrieving value":["from"],"return \"0000000000\"":["if"],"return \"Whatever.\"":["and"],"return :fred":["if"],"return `\\?`":["so"],"return `false`":["if"],"return `name`":["at"],"return `nil`":["instead"],"return a":["boolean","boolean","boolean","string.","function.","char","value","boolean"],"return atoms":["rather"],"return booleans":["but","so","with","to"],"return both":["the"],"return collection":["of"],"return false":["if"],"return for":["else."],"return it,":["with"],"return its":["occurrences?"],"return lists":["of"],"return nil":["rather","for","in"],"return the":["bottles","action","length","appropriate","first","first","strings","right","normalized","\"comparable\"","char","empty/nil","same"],"return to":["r"],"return true":["if","on","*only*","for","for","and"],"return value":["is","instead"],"return value(s)":["of"],"return value.":["Using","So"],"return values.":["For"],"return vectors":["of"],"return you":["reclaim"],"returned from":["map"],"returned include":["`0`"],"returned the":["parts"],"returned when":["the"],"returned, but":["the"],"returned. It":["just"],"returned. The":["code"],"returned. There's":["a"],"returned. Transients":["will"],"returning `:default`":["from"],"returning a":["lazy","function","vector"],"returning nil":["is"],"returning something":["like"],"returning the":["response","robot","plural.","value","\"frequencies","element","element","value"],"returns ?.":["I"],"returns `nil`":["rather"],"returns a":["single","representation","function","function","function","function","predicate","function)","value","boolean","boolean,","vector","string.","double","string"],"returns an":["appropriate"],"returns boolean.":["And"],"returns false":["even"],"returns if":["bob's"],"returns nil":["not"],"returns nil,":["the","which"],"returns stuff":["like:"],"returns the":["same","new","new","some-str."],"returns true":["if"],"reuse `nothing?`":["inside"],"reuse the":["given"],"reuse them,":["they"],"reuse without":["the"],"reused and":["b)"],"reused if":["the"],"reused many":["times"],"reused the":["code"],"reusing `nucleotide-counts`":["function"],"rev 2":["I"],"rev, i'm":["going"],"reveal intention":["of"],"reveal the":["intent"],"reveal their":["intent?"],"revealing named":["functions,"],"revealing names":["instead","instead","for"],"revealing private":["methods"],"revealing: you":["explicitly"],"reverse it":["so"],"reverse order":["of"],"reverse to":["what"],"reversed `subs`":["version."],"reversed it.":["It"],"reversed my":["thoughts"],"reversed. How":["about"],"reversing it.":["That"],"reversing the":["whole"],"reversing them":["is"],"review it":["again"],"review some":["code"],"review submissions":["for"],"review! Aside:":["is"],"reviewed faster":[":p"],"reviewed the":["Calendar"],"reviewing Clojure":["code"],"reviewing and":["don't"],"reviewing my":["codes."],"reviews... refactoring":["now"],"revise it":["back"],"revise my":["codes"],"revise this":["later"],"revision at":["some"],"revision based":["on"],"revision be":["deleted?"],"revision swapped":["`(seq"],"revision thought":["of"],"revision, and":["comments"],"revisit my":["approach"],"revolves around":["finding"],"rework it,":["so"],"rewrite ```(subs":["sanitized-number"],"rewrite `word-count`":["as"],"rewrite sing":["to"],"rewrite the":["splitting"],"rewrite to":["capture"],"rewritten as":["`(sort"],"rewritten like":["this:"],"rewritten question?":["to"],"rid of":["some","the","the","the","excessive","that","the","`downcased-phrase`","it","the","the","the","`join`","`sort`.","the","that","`all?`","those","interop","`map`.","line","this","the","`base-word`","the","the","the","the","the","the","the"],"riddle for":["me"],"riddle! I'll":["investigate."],"right -":["which","I've"],"right :)":["Thank"],"right about":["SHOUTING","joining","the","the","`silence?`","`get`.","using"],"right again,":["it"],"right answer":["than","is."],"right arrow":["that"],"right away":["-"],"right away,":["instead"],"right bob.clj":["file,"],"right date.":["If"],"right direction":["counts"],"right either":["(two"],"right for":["me.","this."],"right from":["a"],"right here.":["You"],"right in":["thinking"],"right into":["my","the"],"right marching":["`if`s"],"right name":["for"],"right now":["`one-or-it`","would"],"right paren":["on"],"right paren.":["I'm"],"right solution":["to"],"right that":["it's","it's"],"right there":["either)"],"right thing":["for","to","to"],"right thing.(The":["tests"],"right triangle,":["one"],"right types":["at"],"right with":["me.","that."],"right word":["for"],"right! I":["think"],"right! It":["will"],"right! Thanks":["again,"],"right! Too":["much"],"right, I":["should","forgot"],"right, I've":["wrongly"],"right, an":["`if`"],"right, and":["I"],"right, as":["what"],"right, but":["macros"],"right, driis.":["Magic"],"right, it":["looks"],"right, might":["be"],"right, that":["was"],"right, the":["title"],"right, though":["this"],"right-hand of":["the"],"right. I":["will"],"right. It":["seems","can"],"right. Updated":[":)"],"right. they":["really"],"right? I":["just"],"right? Is":["this"],"right? Wouldn't":["that"],"risk of":["collisions"],"rna sequence":["to"],"rna sequence.":["In"],"rna sequences":["you"],"rna sequences.":["These"],"rna transcription":["assignment"],"rna-nucleotide \"A\")":["\"X\""],"rna-nucleotide \"T\")":["\"U\""],"rna-transcription and":["resubmitted."],"road to":["understand"],"robot and":["the"],"robot as":["a"],"robot contains":["`:name`"],"robot data":["structure"],"robot makes":["things"],"robot name,":["or"],"robot name.":["I'll"],"robot names.":["On"],"robot namespace":["for"],"robot protocol":["using","is"],"robot shouldn't":["have"],"robot starting":["without"],"robot starts":["without"],"robot's name":["is"],"robot-name. I":["did"],"robot/robot-name instead":["of"],"robust I":["mean"],"rock the":["anonymous"],"rocks indeed":[":)"],"rogue paren":["slipped","slipped"],"role that":["plays."],"roll that":["into"],"roll this":["whole"],"room for":["growth","improvement...","improvement","improvement!","improvement"],"room here":["for"],"root binding":["of","-"],"root bindings":["non-public"],"root bound":["constant"],"root of":["the"],"rough benchmark":["using"],"rough port":["of"],"roughly like":["a"],"roughly the":["same"],"round `frequencies`":["if"],"round `s/lower-case`":["either."],"route of":["filtering"],"route was":["more"],"route you":["might"],"route you'll":["have"],"route, and":["try"],"route? Did":["you"],"routing responses.":["For"],"row, column,":["or"],"rubbish. Surely":["possible"],"ruby but":["wasn't"],"ruby language":["implementation"],"ruby submission":["-"],"ruby version":["of","of"],"ruby, I":["like"],"ruby, `foo?`":["is"],"ruby/javascript for":["too"],"rubyist and":["this"],"rubysolo meant":["was"],"rubysolo, good":["idea."],"ruffled a":["feather"],"rule I":["mentioned"],"rule expand":["beyond"],"rule you":["learn"],"rule, it's":["easier"],"rules at":["play"],"rules better":["clarify"],"rules of":["some"],"rules. I":["think"],"run again.":["Having"],"run in":["it's","it's","compare-and-set"],"run into":["situations","this","a"],"run on":["the"],"run the":["function","test","tests","test","tests"],"run through":["the"],"running it":["from"],"running the":["tests."],"running time":["of"],"runtime complain":["at"],"runtime performance?":["(Hint:"],"runtime, no":["matter"],"rush to":["get"],"s (upper-case":["s)))"],"s is":["nil,"],"s or":["a"],"s variable.":["Yes,"],"s) \"Fine,":["be"],"s) \"Fine.":["Be"],"s) \"Woah,":["chill","chill"],"s) x)`.":["You"],"s))` instead":["of"],"s))` is":["enough."],"s))` to":["`(last"],"s)` once,":["but"],"s)` value":["would"],"s)` which":["is"],"s)`) rather":["than"],"s)`. `question`":["could"],"s, that's":["fine,"],"s-exp depth":["and"],"s. Instead,":["you"],"s/lower-case [word1":["word2])]"],"s1 s2)`":["or"],"s2)` or":["`(map"],"s` multiple":["times,"],"s``` on":["line"],"s``` should":["be"],"sacrifice in":["readability."],"sacrificed some":["clarity"],"sacrifices efficiency":["for"],"sacrificing too":["much","much","much"],"sad to":["waste"],"sad... but":["I"],"safe enough":["in"],"safe with":["the"],"safely get":["rid"],"said I'll":["probably"],"said all":["comments"],"said as":["meaning"],"said before:":["I"],"said ends":["with"],"said made":["perfect"],"said my":["solution"],"said reader":["why"],"said that":["there's"],"said that,":["naming"],"said that...":["is"],"said there":["are"],"said) as":["the"],"said, I":["have","think","appreciate","would","think","think"],"said, I'm":["a","put"],"said, Unicode":["aware."],"said, if":["you’re"],"said, overloading":["the"],"said, the":["downside"],"said, would":["there"],"said. Is":["that"],"sake of":["future","...","readability"],"same \"equality":["partition\".","partition\"."],"same `letfn`":["form)."],"same about":["the"],"same abstraction":["level"],"same and":["you"],"same approach:":["\"if","\"if"],"same argument":["twice,"],"same arguments":["as"],"same as":["passing","silence?","silence,","iteration","the","the","the","`(not","yours.","`(repeat","`(when","`nothing?`","`vector`"],"same atom":["might"],"same can":["be"],"same case.":["No"],"same collection":["type"],"same comparison":["used"],"same contents":["are","are","are"],"same effect":["as","as"],"same effect,":["it"],"same expressiveness":["without"],"same for":["\\T"],"same function":["of","numerous"],"same goal":["in"],"same goes":["for"],"same happens":["in"],"same in":["pure"],"same indentation":["as"],"same is":["true"],"same length":["as"],"same length),":["so"],"same letters":["but"],"same level":["of","of"],"same line":["as","with","as","or","with","with","a","as","as","with",":)","as","as","as","as","as","as"],"same line,":["not","or"],"same line.":["If"],"same map":["function"],"same method":["with"],"same piece":["of"],"same point.":["Matter"],"same position":["so"],"same principle":["applies"],"same problem":["in"],"same repl.":["Learned"],"same result":["for"],"same row,":["column,"],"same runtime":["performance?"],"same semantics":["as"],"same since":["they"],"same sort":["of"],"same stands":["for"],"same structure":["as","as"],"same tests":["across"],"same thing":["I'm","as","using","for"],"same thing,":["currently","right?.","it"],"same things.":["I"],"same time":["keeping"],"same time,":["you"],"same time.":["Eh.."],"same time:":["alias"],"same type":["as","as"],"same value":["n","to","until"],"same way":["the","of","i","as","you","as"],"same way.":["If"],"same when":["transformed"],"same with":["`upper-case`?"],"same word":["over","-","over","for"],"same word,":["so"],"same, it's":["something","not"],"sample solution":["to"],"sane approach":["to"],"sane thing":["to"],"sanitize and":["split"],"sanitize-number; process-number":["just"],"sanitize-number` (by":["the"],"sanitized the":["input,"],"sanitized-number 0":["1)))"],"sanitized-number 1":["11)```.","11)```"],"sanitized/normalized the":["number"],"sanitizing and":["splitting...","validating"],"sanitizing step":["would"],"satisfies the":["expectation."],"satisfy @agnes's":["personal"],"satisfy both":["consistency"],"satisfy that":["predicate."],"satisfy the":["nil"],"satisfying pleasures":["in"],"save a":["few"],"save before":["I"],"save some":["parens","time."],"save the":["file"],"save you":["a"],"save you,":["are"],"saved keystrokes.":["One"],"saves you":["the"],"saving time":["shifts."],"saw 'true'":["in"],"saw a":["warning"],"saw in":["the"],"saw it":["used"],"saw so":["many"],"saw some":["supposed"],"saw the":["requirement"],"say \"Fine,":["be"],"say \"Help":["little"],"say \"Woah,":["chill"],"say *\"does":["not"],"say -":["when"],"say Bob":["can"],"say I":["have","still"],"say I'm":["proud"],"say `(=":["first"],"say `(str/blank?":["statement)`."],"say `Make":["liberal"],"say for":["a"],"say go":["with"],"say here,":["looks"],"say idiomatic,":["but"],"say in":["those"],"say is":["that","\"if"],"say it":["is"],"say it's":["\"thymidine\",","more"],"say much":["...perhaps"],"say or":["leave"],"say some":["things"],"say that":["yes,","raw"],"say the":["same","least."],"say thymine.":["And"],"say you":["had"],"say, BTW":["all"],"say, the":["branches"],"say, you":["could"],"say-nothing? and":["a"],"say? I":["am"],"saying \"default\"":["when"],"saying \"it's":["more"],"saying about":["needing"],"saying appears":["to"],"saying here":["is"],"saying it":["would"],"saying that":["code","this"],"saying this":["is"],"says \"does":["this"],"says building":["the"],"says is":["\"if"],"says not":["to"],"says that":["this"],"says to":["use"],"says too":["much"],"says you":["need"],"says, using":["maps"],"says. So":["I"],"sb] (lower-sorted":["b)]"],"scale better":["if"],"scalene test":["is"],"scan as":["well"],"scan the":["source"],"scan whole":["sentences."],"scan with":["your"],"scanned better":["than"],"scanning the":["input","result.","input"],"scans as":["nicely"],"scans for":["each"],"scary in":["my"],"scenario would":["clojure.string/upper-case"],"scenario you":["proposed,"],"scenario. So":["`letters-all-caps?`"],"scheme if":["you"],"scheme in":["lisp"],"scheme should":["be"],"science fiction":["author.\""],"scientific names":["are"],"scientist. ;)":["Good"],"scope -":["so"],"scope --":["\"response\""],"scope and":["simple"],"scope as":["strongly"],"scope control.":["I"],"scope of":["this","the","functions,","the","the","a"],"scope possible":["(for","(in"],"scope things":["tightly"],"scope to":["keep","stay","`bob`."],"scope when":["browsing"],"scope which":["let"],"scope. Does":["it"],"scope. That":["\"constructor\""],"scoped helper":["functions."],"scoping and":["keeps"],"scoping in":["clojure."],"scoping these":["with"],"scoping) which":["caters"],"score-letter function":["a"],"score-letter that's":["used"],"score-word in":["the"],"scratch it.":["`last`"],"scratch that,":["just"],"scratch, but":["there"],"screaming but":["why"],"screencast by":["Brian"],"screwed up":["the"],"screws up":["my"],"script. Would":["it"],"scroll down":["to"],"scrubbing invalid":["nucleotides"],"se, but":["what"],"search and":["wasn't"],"search for":["all","'trailing'.","prime"],"search forward":["from"],"searches. Please":["advise"],"searching for.":["I"],"seciton](http://clojure.org/special_forms#Special Forms--(fn":["name?"],"second \"\\n\"":["in"],"second @drake's":["suggestion"],"second Thursday":["of"],"second `or`":["is"],"second argument":["and","returned"],"second character":["is"],"second check":["in"],"second element":["in"],"second ever":["Clojure"],"second expression":["is"],"second iteration":["fixes","because"],"second iteration.":["Also","I"],"second macro":["to","recursively"],"second one":["that","is","is","is"],"second paragraph":["yet"],"second regex.":["Couldn't"],"second regexp":["check,"],"second sentence?":["I"],"second thought,":["replace"],"second to":["understand"],"second version":["pulls"],"second-couplet, with":["which"],"seconds to":["it."],"section in":["functions","Brian"],"section of":["the"],"section. I":["like"],"see I":["was","understand"],"see `(fn":["[x]"],"see `(int":["\\0)`"],"see `-\u003e`":["used"],"see `[word":["candidates]`"],"see `clojure.test`":["required"],"see `sorted-word`":["as"],"see a":["variety","real","lot","bit","function","lot"],"see also":["that"],"see an":["obvious"],"see and":["agree."],"see another":["one"],"see any":["problem","harm"],"see arguments":["either","for","for"],"see for":["predicates"],"see functions":["`dna-to-rna`"],"see how":["using","well","you","multimethods","to","that","it","you"],"see if":["a","it","I","anything","anyone","it","you","you","it's","that","it's","there's","clojure","the","the","you","value"],"see in":["https://github.com/bbatsov/clojure-style-guide#source-code-layout--organization"],"see is":["to"],"see it":["as","being","twice."],"see jumping":["off"],"see much":["room","room"],"see my":["comment","previous"],"see next":["iteration."],"see now":["what","what"],"see now,":["that"],"see other":["\"bob\""],"see people":["closing","using","achieving"],"see somebody":["from"],"see something":["in"],"see that":["the","certain","you","the","this","`split`","there","this","```clojure.string/replace```","since","might"],"see that.":["i","Thanks"],"see the":["patterns","argument","tests","intention","point","right","mileage.","need","end","point","authoritative","point","public","separation","name","\"most","big","argument","main"],"see them":["the"],"see this":["function."],"see what":["you","the","it","I","other","happens.","it","you","is","that","you"],"see what's":["available.","important."],"see where":["you're"],"see whether":["the"],"see which":["one","functions"],"see you":["on","too!!","on","on","here.","haven't"],"see your":["line","next","point"],"see yourself":["making"],"see! Ok,":["new"],"see, i":["used"],"see, the":["macro,"],"see. I":["totally"],"seeing `check-match`":["used."],"seeing how":["it","it"],"seeing other":["solutions"],"seeing that.":["Could"],"seeing the":["java","final"],"seeing you":["updated"],"seek for":["where"],"seem a":["bit"],"seem any":["point"],"seem as":["much"],"seem explicit":["enough"],"seem like":["domain","separate","a","a","it"],"seem necessary,":["specifically"],"seem quite":["right"],"seem reasonable":["to"],"seem that":["big","important"],"seem the":["clearest"],"seem to":["agree..","be","see","like","be","be","know","improve","work.","emphasize","fit","prefer","be","be","find"],"seemed a":["bit"],"seemed cleaner;":["less"],"seemed harder":["to"],"seemed like":["the","a","a","a","syntactic"],"seemed more":["likely"],"seemed silly":["and"],"seemed simple":["enough"],"seemed so":["simple"],"seemed to":["work.","read","make"],"seeming to":["be"],"seems I":["have"],"seems a":["little","bit","minor","bit","lot","little"],"seems awfully":["complex."],"seems better":["in"],"seems consistent":["with"],"seems excessive":["at"],"seems good":["at"],"seems it":["would!"],"seems kind":["of","of","of"],"seems less":["sophisticated..."],"seems like":["that","the","both","cheating","all","an","I'm","that","nucleotide-counts","most","an","a","i"],"seems more":["about"],"seems natural":["to"],"seems reasonable":["enough;"],"seems redundant":["with"],"seems redundant,":["no?"],"seems straightforward,":["but"],"seems that":["frequencies",":require/:refer"],"seems to":["be","have","be","be","be","add","place","better","allow","introduce","work","be","be","re-implement","be","be","be","be"],"seems too":["hacky"],"seems ugly":["to"],"seems weird":["to"],"seen [`condp`](http://clojuredocs.org/clojure_core/clojure.core/condp)":["before,"],"seen ```clojure.core/filter```?":["Might"],"seen `re-seq`?":["I"],"seen a":["few"],"seen alanpeabody's":["latest"],"seen any":["more"],"seen anyone":["else's"],"seen both,":["but"],"seen by":["the"],"seen clojure":["`defn`s"],"seen doc-strings":["before"],"seen enough":["diverse"],"seen good":["solution"],"seen in":["tests.","other","the","the","the"],"seen is":["to"],"seen it":["often"],"seen map":["reduce"],"seen nice":["solutions"],"seen people":["using","refer"],"seen quite":["a"],"seen recently":["is"],"seen seems":["consistent"],"seen some":["articles"],"seen that":["does","this","\u003ccode\u003e(declare","doesn't"],"seen the":["closing","`let`","\".roll\"","`apply`"],"seen this":["comment,","code"],"seen use":["predicate"],"seen using":["declare"],"seen, but":["I"],"seldom used":["feature."],"select the":["words,"],"selecting the":["first"],"self documenting,":["either"],"self reference":["on"],"self will":["thank"],"self works":["as"],"self-contained function":["like"],"self-documenting -":["like"],"self-documenting or":["at"],"self-documenting step":["of"],"semantically correct":["(even"],"semantics as":["`str/lower-case`?"],"semantics of":["response-for","the"],"semantics would":["be"],"send `nil`":["to"],"sense -":["bind","what"],"sense because":["thymidine"],"sense exposing":["more","more"],"sense for":["the","a","defining"],"sense from":["target"],"sense given":["the"],"sense here":["since"],"sense if":["the"],"sense in":["clojure?","cases"],"sense indeed":[":)"],"sense of":["it"],"sense of,":["just"],"sense to":["use","make","use","confine","do","break","have","talk","compare","introduce"],"sense where":["it"],"sense! The":["perils"],"sense, I":["just"],"sense. But":["If"],"sense. I":["can't"],"sense. If":["there"],"sense. Thank":["you"],"sense. The":["predicate"],"sense? Naming":["them"],"sensible thing":["to"],"sensible way":["to"],"sent Bob":["the"],"sentence (upper-case":["sentence))```"],"sentence -":["perhaps"],"sentence about":["equality,"],"sentence and":["still","identify"],"sentence can":["be"],"sentence is":["threaded"],"sentence or":["even"],"sentence that":["starts"],"sentence was,":["like"],"sentence) \"Fine.":["Be"],"sentence) \"Woah,":["chill"],"sentence))` or":["something"],"sentence))``` a":["little"],"sentence))``` expresses":["the"],"sentence)` line":["referred"],"sentence. I":["just"],"sentence. Variable":["naming"],"sentence? I":["am"],"sentences goes,":["you"],"sentences rather":["than"],"sentences that":["are","had"],"sentiment after":["seeing"],"sentiment analysis":["and"],"sentiment function":["decides"],"sentiment functions":["things"],"sentiment statements":["into"],"sentiment)` vs.":["`(sentiment"],"sentiment, the":["sentiment"],"separate clause":["for"],"separate concerns":["to"],"separate configuration":["from"],"separate expressions":["`lower-case`"],"separate expressions,":["keeping"],"separate from":["the"],"separate function":["for","for","for","for"],"separate functions":["for","so","for","in"],"separate functions.":["As","For"],"separate helper":["function,"],"separate line":["?","helps"],"separate line,":["where"],"separate lines,":["it's"],"separate lines.":["You"],"separate non-public":["helper."],"separate out":["and"],"separate repls":["for"],"separate tests":["with"],"separate the":["words?","evaluation","response","input","input"],"separate them":["as"],"separate things":["by"],"separate times,":["e.g.,"],"separate val":["for"],"separate var":["based"],"separate with":["whitespace"],"separate, independent":["function,"],"separate, private":["functions?"],"separated by":["a","blank"],"separated from":["the"],"separated into":["functions?"],"separated out":["the","the"],"separately and":["the","the"],"separately to":["`anagram-of?`"],"separately, but":["store"],"separating it":["out"],"separating out":["the"],"separating the":["clauses","validation","validation","concerns","concerns"],"separating words":["from"],"separation and":["yes"],"separation between":["validation"],"separation in":["an"],"separation of":["classification","message-type","the"],"seq and":["count"],"seq functions":["as","that"],"seq last":["instead"],"seq of":["characters."],"seq on":["its"],"seq returned":["from"],"seq to":["return"],"seq, but":["I"],"seq-able (it's":["a"],"seq-to-rna is":["not"],"seq-to-rna which":["transforms"],"seq. The":["question"],"seq: My":["first"],"seqs of":["characters."],"sequence (aka":["`seq`)."],"sequence (it":["extends"],"sequence and":["likewise","map"],"sequence as":["well"],"sequence back":["into"],"sequence even":["if"],"sequence for":["`area-code`,"],"sequence functions":["work:"],"sequence instead":["of","of"],"sequence into":["a","a"],"sequence is":["unnecessary."],"sequence of":["these","characters","chars","characters","words.","DNA","RNA","DNA","RNA","characters.","characters.","characters.","words.","characters,","characters","characters","characters).","filters.","characters","many"],"sequence operations":["-"],"sequence protocol":["and"],"sequence related":["functions","functions.","protocols","protocols)","functions.","functions.","functions","function"],"sequence since":["Strings"],"sequence that":["is"],"sequence to":["java","only"],"sequence type,":["not"],"sequence will":["terminate"],"sequence)` is":["the"],"sequence, C-\u003eG,":["T-\u003eA,"],"sequence, it":["feels"],"sequence, otherwise":["nil:"],"sequence. I've":["looked"],"sequence. In":["other"],"sequence. See":["my"],"sequence/collection operators":["would."],"sequences (not":["molecules,"],"sequences API":["again,"],"sequences as":["a"],"sequences can":["also"],"sequences in":["clojure."],"sequences of":["characters.","characters","characters.","alphabetic","closing","characters"],"sequences through":["a"],"sequences with":["`concat`"],"sequences you":["can"],"sequences, but":["now"],"sequences, however":["this"],"sequences. Nucleotides":["are"],"sequences. Other":["than"],"sequences. These":["were"],"sequences. You":["could"],"sequential (as":["implied"],"serial number":["would","and"],"serial number,":["but"],"serial numbers":["difficult"],"serial. In":["a"],"series of":["data","transformations","transforming","sanitizing","transforms.","lines"],"serious lisp":["usage,"],"seriously appreciate":["that"],"serve as":["a"],"session, is":["to"],"set (or":["the"],"set -":["either"],"set a":["value"],"set again.":["If,"],"set and":["case","nil"],"set around,":["you"],"set as":["a","a","pred,"],"set callable":["accepts"],"set can":["also"],"set comparison":["is"],"set for":["example","that."],"set function":["call"],"set in":["stone."],"set instead":["of"],"set into":["the"],"set is":["a"],"set it":["self"],"set literal":["/","nested"],"set members":["-"],"set membership,":["like"],"set of":["valid","valid","style","`all-nucleotides`","responses?","valid","inputs,","valid","valid","requirements:","RegEx","functions","test,","characters","tests"],"set takes":["longer"],"set that":["I"],"set to":["store"],"set up":["a"],"set works":["also"],"set, I":["don't"],"set, you":["can"],"set. Sets":["implement"],"set. There's":["still"],"sets (and":["maps)"],"sets :)":["The"],"sets and":["collection"],"sets might":["make"],"sets of":["DNA"],"sets sounds":["like"],"sets which":["would"],"sets work":["also"],"sets working":["as"],"sets). This":["way"],"sets, additional":["`not-found`"],"setting each":["property"],"setting up":["a"],"settle on":["a"],"settled on":["this","`word-count`,","`re-seq`"],"setup to":["4"],"several different":["ways"],"several functions,":["can"],"several iterations":["on"],"several useful":["ways"],"severely limit":["the"],"sexp is":["working"],"sgrimm, thank":["you."],"sgrimm. I'm":["still"],"shadow `replace`":["in"],"shadow stuff":["in"],"shadowing `count`":["when"],"shadowing core":["Clojure"],"shall just":["come"],"shamelessly let":["the"],"shape of":["creating","the"],"share a":["lot"],"share between":["the"],"share links?":["I"],"share). So":["yeah,"],"shared that":["it's"],"shared, mutable":["state.","value."],"shifts. Another":["problem"],"short I":["don't"],"short alias":["to"],"short and":["surely","crisp,"],"short but":["not"],"short checks,":["but"],"short circuit":["the"],"short codes":["due"],"short examples":["like"],"short form":["for","for"],"short knowledge":["of"],"short solution":["I"],"short that":["I"],"short variable":["names"],"short, that":["it"],"short-circuitring `or`":["in"],"short-circuitring the":["threading"],"shortcut and":["I've"],"shortcut for":["`(def"],"shortcuts in":["names,"],"shortcuts, those":["are"],"shortcuts, when":["the"],"shorten `clean-phrase`":["like"],"shorten `clojure.string`":["with"],"shorten `string/replace`":["to"],"shorten it":["a"],"shorten lines":["1-4"],"shorten this":["would","to"],"shorten up":["your"],"shorten your":["code"],"shortened to":["simply","simply"],"shortened using":["the"],"shortenedup. Maybe":["with"],"shorter and":["more","succint.","nicer!","clearer.","easier","some"],"shorter and/or":["easier"],"shorter by":["using"],"shorter for":["one"],"shorter form":["below:"],"shorter name":["like:"],"shorter name.":["It"],"shorter or":["more"],"shorter pattern":["for"],"shorter regex":["`\"\\?$\"`?","to"],"shorter solution":["which"],"shorter than":["the"],"shorter to":["read,"],"shorter without":["any"],"shorter written":["directly"],"shorter, I'll":["leave"],"shorter, anonymous":["form"],"shorter, but":["for"],"shorter, like":["so:"],"shorter/better, otherwise":["cond"],"shortest collection.":["This"],"shortest passed":["collection."],"shortest solution":["I"],"shorthand (sic!)":["function"],"shorthand and":["it","positional"],"shorthand for":["a","what","declaring","anonymous"],"shorthand function":["notation","`not=`"],"shorthand names":["are"],"shorthand notation":["for"],"shorthand. Might":["it"],"shortness of":["the","the"],"shortness, remember":["that"],"should AssertionError":["will"],"should I":["write"],"should all":["do"],"should allow":["you"],"should almost":["be"],"should also":["investigate","cover","be"],"should always":["put","weigh"],"should assume":["they're"],"should be":["the","his","default,","more","able","private","public","(defn-","the","private?","able","one","Bob's","for","private,","looking","considered","private.","more","with","aligned","on","on","a","for","on","done","on","in","available","indented","part","able","given","indented","part","on","part","as","based","first","generated","moved","(:require","`\\U","part","```dna-string```","private.","`(defn-","able","breaking","random","indented","adequate.","using","reserved","stacked","on","lowercase","more","explanation","a","doing,","obvious.","an","remedying","less","added,","no","on","added","added","using","empty","particularly","in","\"an","in","a","of","a","reserved","able","the","fixed,","able","able","able","overshadowed","able"],"should be,":["mainly"],"should begin":["on","in"],"should check":["for"],"should come":["after","down","before."],"should conform":["to"],"should consider":["using","making","using","giving","letting"],"should create":["similar"],"should cut":["the"],"should do":["something","the"],"should drop":["factories"],"should export":["the"],"should follow.":["Not"],"should give":["me"],"should go":["first,"],"should have":["just","a","pointed","them","them","to.","been","more","not","at","looked","mentioned","also"],"should help":["you"],"should indent":["with"],"should leave":["the"],"should look":["like:","like?","into","like"],"should look.":["I"],"should make":["`grouping`"],"should miss":["the"],"should not":["be","effect"],"should one":["be"],"should only":["be"],"should prefer":["to"],"should probably":["be","be","be","be","be","be"],"should put":["first","the"],"should quickly":["yield"],"should really":["consult"],"should receive,":["which"],"should refer":["to"],"should respond":["with"],"should return":["collection","`false`","true","false"],"should revisit":["my"],"should say":["is"],"should stick":["strictly"],"should stop":["coding"],"should take":["an"],"should the":["default","body"],"should think":["about"],"should try":["a","to"],"should use":["nucleotide-counts,",":require","`:keywords`","it.","Clojure's","those","function"],"should work":["on","without","slightly"],"should wrap":["the"],"should've used.":["I"],"shouldn't I":["use"],"shouldn't be":["private,","allowed","on","named","needed","necessary","necessary","a"],"shouldn't become":["a"],"shouldn't end":["up"],"shouldn't expose":["the"],"shouldn't have":["taken","a"],"shouldn't need":["to","to","to","to","to","to"],"shouldn't normally":["be"],"shouldn't really":["be"],"shouldn't worry":["about"],"shout matcher":["might"],"shout out":["to"],"shout predicate":["that"],"shout-response \"Woah,":["chill"],"shout. This":["made"],"shout? -\u003e":["to"],"shout? is":["quite"],"shout? predicate":["is"],"shout? the":["constant"],"shouted in":["my"],"shouted text":["actually"],"shouted, but":["it's"],"shouted? [message]":["...`"],"shouting (and":["similarly"],"shouting and":["tell"],"shouting before":["questions."],"shouting check":["could","and"],"shouting could":["alternatively","be"],"shouting even":["if"],"shouting if":["all"],"shouting questions":["would"],"shouting statement,":["I"],"shouting takes":["precedence"],"shouting than":["questioning"],"shouting to":["see"],"shouting work":["just"],"shouting, a":["third"],"shouting, and":["splitting"],"shouting, but":["with"],"shouting, respond":["with"],"shouting, then":["it","it"],"shouting. For":["example:"],"shouting. Maybe":["that's"],"shouting? \"Woah,":["chill"],"shouting? (every-pred":["upcase?"],"shouting? function":["would"],"shouting? method":["is"],"shouty? function":["doesn't"],"shouty? implementation":["is"],"show intent,":["so"],"show intent.":["This"],"show that":["whitespace","it","question?"],"show where":["the"],"show you":["knowing"],"show, that":["the"],"showing me":["a"],"shown in":["my"],"shown the":["intention"],"shows a":["way"],"shows my":["attempt"],"shows that":["dealing","the"],"shrinking collection":["transformer."],"shuffling letters,":["and"],"side I":["tend"],"side effect":["of"],"side to":["the"],"side, but":["it's"],"side-effect only":["code."],"sides are":["different"],"sides is":["a"],"sides, which":["is"],"sight for":["a"],"sight of":["the"],"sign that":["I","you","using"],"sign. But":["is"],"signal to":["noise"],"signature of":["`anagram-of?`."],"significant difference,":["but"],"significant this":["time."],"significantly by":["separating","using"],"significantly easier":["to","to"],"significantly more":["graceful","efficient","readable","challenging"],"significantly on":["lines"],"significantly swayed":["you."],"silence and":["shouting"],"silence as":["well"],"silence function":["can"],"silence function,":["you"],"silence has":["been"],"silence, I":["could"],"silence, a":["question,","question,"],"silence, one":["covers"],"silence, there":["is"],"silence? \"Fine,":["be"],"silence? \"Fine.":["Be"],"silence? :response":["\"...\"}"],"silence? This":["won't"],"silence? blank?)`":["taking"],"silence? could":["use"],"silence? definition.":["Define"],"silence? etc.":["are"],"silence? function;":["it's"],"silence? method":["is"],"silence?` in":["`shout?`"],"silent clause":["comes"],"silent? [str]":["..."],"silly and":["makes"],"silly that":["we"],"similar approach,":["but"],"similar concepts":["-"],"similar feedback":["about"],"similar level":["of"],"similar methods":["for"],"similar nitpick":["on"],"similar to":["another","`.`","atoms","switch"],"similar vein,":["`count-words`"],"similar. Could":["you"],"similarly for":["the"],"simmetry with":["`clean-phrase`,"],"simple I'd":["love"],"simple `(map":["vector"],"simple `(sort":["word)`,"],"simple `(vec":["(sort"],"simple `if`":["might"],"simple `map`":["function"],"simple `merge`":["will","would"],"simple `string/replace`":["would"],"simple alias.":["I"],"simple and":["probably","clear","clear.","straightforward"],"simple as":["replacing"],"simple conditional":["(below)","approach"],"simple conditions,":["I'm"],"simple context":["(single"],"simple core":["abstraction"],"simple defs":["as"],"simple enough":["to","(and"],"simple example":["but"],"simple example,":["it's"],"simple exercise":["it"],"simple exercise,":["it's"],"simple function,":["can"],"simple functions":["like"],"simple hardcoded":["zipmap"],"simple however,":["that"],"simple if":["there's"],"simple keyword.":["The"],"simple like":["the"],"simple logic.":["@stuart"],"simple map":["for"],"simple one":["such"],"simple operation":["doesn't"],"simple pervlayer-style":["lightweight"],"simple problem":["there"],"simple problem,":["I"],"simple purpose":["of"],"simple rules.":["I"],"simple string":["inspection.","functions","replacement"],"simple that":["I"],"simple this":["exercise"],"simple to":["refactor,","check","do","understand.","just"],"simple way":["to"],"simple, but":["it"],"simple. Am":["I"],"simple. Multimethods":["would"],"simpler (one":["fewer"],"simpler -":["don't"],"simpler I":["think."],"simpler and":["likely","more","cleaner."],"simpler approach":["of"],"simpler as":["well."],"simpler by":["using"],"simpler for":["me"],"simpler from":["the"],"simpler function":["`not=`"],"simpler if":["you"],"simpler implementation":["of"],"simpler mathematical":["approach"],"simpler regular":["expression"],"simpler solution":["given","in"],"simpler than":["this!","my","regex,"],"simpler then.":[":)"],"simpler using":["map"],"simpler version":["of"],"simpler way":["to","to","to","to"],"simpler ways":["to"],"simpler with":["a","something","a","a"],"simpler, thank":["you!"],"simpler. One":["idea"],"simpler. Sadly":["it"],"simpler. You'll":["find"],"simpler/clearer in":["my"],"simplest cases":["I"],"simplest things":["done!"],"simplicity of":["the","the","the","your","what's"],"simplifed a":["bit"],"simplifed to":["`(not="],"simplification of":["the"],"simplification would":["be"],"simplifications of":["the"],"simplified `advance`":["using"],"simplified a":["lot"],"simplified by":["using"],"simplified further.":["What"],"simplified somewhat":["by","by"],"simplified the":["\"into"],"simplified this":["a"],"simplified to":["`(rand-int"],"simplified with":["a"],"simplified. I":["guess"],"simplified. `clojure.string/lower-case`":["acts"],"simplified. `clojure.string/upper-case`,":["maybe."],"simplifies things":["greatly","a"],"simplify `(first":["(string/reverse"],"simplify `cond`,":["so"],"simplify `shouted`":["but"],"simplify `shouting?`":["using","using"],"simplify `stringify-keys`":["a"],"simplify `uppercase?`":["further"],"simplify `valid-dna?`":["some."],"simplify a":["bit"],"simplify and":["unify"],"simplify matters":["but"],"simplify much":["of"],"simplify or":["remove"],"simplify predicates":["and"],"simplify that":["function"],"simplify the":["whole","check","expression","implementation","solution","solution.","various","code","solution.","silence","implementation","code.","`all-upper?`","validation"],"simplify them":["a"],"simplify things":["a","sometimes.","quite","quite","a","a","a"],"simplify things.":["e.g."],"simplify this":["with","one.","significantly","a","quite","code"],"simplify your":["`sanitize`","work","code.","`silence?`","`nucleotide-counts`","string","solution:","solution:","solution."],"simplifying its":["conditions."],"simplifying the":["code.","code","code","anonymous"],"simply `(apply":["str"],"simply `(last":["(....))`,"],"simply `not=`":["and"],"simply `or`":["in"],"simply `upper-case`,":["`lower-case`,"],"simply by":["`vector`"],"simply generate":["a"],"simply isn't":["possible"],"simply like":["`(last"],"simply map":["the"],"simply observe":["that"],"simply rewritten":["as"],"simply robot-name.":["I"],"simply swapping":["`sort`","`sort`"],"simply test":["for"],"simply upper-case,":["lower-case,"],"simply upper-casing":["the"],"simply use":["`(anagram-checker-for","`blank?`"],"simulate function":["was"],"since 't'":["and"],"since \u003ccode\u003eendsWith\u003c/code\u003e":["describes"],"since Clojure's":["syntax"],"since I":["wrote","am","have","have","only","thought","think","did","was","did","believe"],"since I'm":["shouting,"],"since I’ve":["dropped"],"since Strings":["can","are"],"since \\w":["already"],"since `(apply":["str"],"since `:else`":["covers"],"since `blank?`":["returns"],"since `clojure.string/replace`":["coerces"],"since a":["String"],"since all":["it","three"],"since blank":["will"],"since function":["definitions"],"since it":["conveys","is","works","was","does","uses","accomplishes","bit","will","is","didn't,"],"since it's":["longer","a","a","the","the","always","the"],"since leaving":["it"],"since map":["can"],"since maps":["can"],"since most":["of"],"since one":["of"],"since only":["some"],"since silence?":["etc."],"since splitting":["them"],"since that":["is","is"],"since the":["submission","word","stuff","text","purpose","problem","JVM","JVM","result"],"since there":["doesn't"],"since there's":["only"],"since they":["are","are","are","aren't","have","have"],"since they're":["basically"],"since this":["whole","leaves"],"since those":["two"],"since we're":["aiming","allocating"],"since we’re":["not"],"since you":["are","do","then","are","point","noticed","declared","have","don't"],"since you're":["accepting","using","just"],"since, well,":["I"],"sincerely hope":["I’d"],"sing function.":["But"],"sing to":["use"],"single DNA":["literal"],"single `clojure.string/replace`":["called"],"single `cond`.":["Without"],"single `filter`":["(without"],"single argument":["functions","being"],"single blank":["line"],"single branch,":["it's"],"single builtin":["that"],"single character":["string"],"single character.":["Is","In"],"single expression":["which"],"single function":["but","from"],"single let":["form"],"single line)":["uses"],"single line).":["By"],"single line;":["you"],"single map":["by"],"single nitpick.":["Thank"],"single one":["that"],"single one.":["In"],"single pass":["of"],"single regex":["would"],"single regex,":["but"],"single space":["between"],"single threaded,":["it's"],"singular and":["the"],"singular noun":["and"],"sit right":["for","with"],"site and":["not"],"site, I":["think"],"site. It":["is"],"site. Thanks":["for"],"site; the":["goal"],"sits out":["there"],"situation because":["they'd"],"situations like":["a"],"situations that":["may"],"situations where":["you"],"size even":["by"],"size of":["the","the","the","the"],"skip a":["robot"],"skip the":["clojure.string/"],"sledge hammer":["when"],"sleeping on":["this"],"slience? ...`":["to"],"slight change":["in"],"slight modifications":["to"],"slight overkill":["for"],"slightly --":["there"],"slightly better":["form"],"slightly different":["formatting","regex","use"],"slightly disagree":["with"],"slightly faster":["on"],"slightly improved":["version."],"slightly misaligned":["—"],"slightly more":["readable","informative","consistent","idiomatic","efficient","idiomatic"],"slightly nicer":["datetime"],"slightly otherwise:":["https://gist.github.com/zoldar/6425609"],"slightly over-engineered":["regarding"],"slightly shorter":["form"],"slightly simpler":["regular"],"slimmed down":["to"],"slip submission.":["Iteration"],"slipped by":["me."],"slipped from":["line","line"],"slow as":["it"],"slow going.":["I'm"],"slow, I":["don't"],"slower than":["creating"],"slower to":["detect"],"slowly deprecated":["so"],"small \"program\".":["I'm"],"small aesthetic":["thing"],"small and":["concise","focused."],"small benchmark":["I"],"small bit":["of","of"],"small change":["to"],"small codebase":["and"],"small does":["help"],"small enough":["a"],"small functions":["with","that"],"small improvements":["to"],"small issue:":["the"],"small methods,":["but"],"small nit":["to","I"],"small nitpick":["while","is","is"],"small nitpick:":["you"],"small nits":["anyway..."],"small nits,":["looks"],"small one":["too)."],"small one,":["is"],"small predicate":["like"],"small random":["number."],"small self-contained":["function"],"small strings":["(I"],"small sugar":["fns"],"small suggestions":["-"],"small thing,":["but","on"],"small things":["I've"],"small w.r.t":["the"],"small, but,":["for"],"small, nits":["are"],"small, you":["are"],"smaller arity":["than"],"smaller dropping":["unnecessary"],"smaller subfunctions.":["Although"],"smaller. Also,":["you"],"smart and":["succint,"],"smart enough":["to","to"],"smelly. It's":["basically"],"smidge, look":["into"],"smile that":["you"],"smoother experiences":["deciphering"],"snazzy to":["me!"],"snippet can":["be"],"snippet directly":["in"],"snippets -":["anyone"],"snowballed from":["there."],"snug them":["up"],"so (ns)":["wasn't"],"so (since":["my"],"so Clojure":["does"],"so I":["gave","will","have","might","don't","shall","could","don't","have","don't","thought","didn't","don't","have","don't","think","wonder","decided","can","would","will","think","would","might","defaulted","think","used","think","googled","wouldn't","learned","wouldn't","decided","could","could","could","can","relied","tried","could","won't","dropped"],"so I'd":["be","avoid","especially","especially","end"],"so I'll":["not","look"],"so I'm":["resubmitted","avoiding","very","very","happy","on"],"so I've":["always","reached"],"so YMMV.":["My"],"so `(map":["="],"so `(not":["(nil?"],"so `:only":["...`"],"so `@colten`":["and"],"so `@gaetano`":["and"],"so `map`":["and"],"so `normalize`":["could"],"so `partial`":["is"],"so `sort`":["will"],"so a":["little","hint","bit","string"],"so all":["sequence","of","the","my"],"so an":["upper","`if`"],"so any":["and"],"so as":["well.","not","not"],"so at":["least"],"so bad":["to"],"so bob":["(and"],"so called":["lexical"],"so calling":["it"],"so can":["be"],"so close":["on"],"so common":["that"],"so confuses":["the"],"so context":["specific,"],"so could":["do"],"so efficient,":["so"],"so every":["push"],"so far":["-","my","I've"],"so few":["and"],"so for":["consistency"],"so function":["application"],"so glad":["to"],"so good":["job"],"so helper":["methods"],"so hopefully":["will"],"so horribly":["irked"],"so if":["someone","you","I","you"],"so ignore":["it"],"so important":["in"],"so is":["there","this"],"so it":["doesn't","is","can","wouldn't","can","could","may","might","might","matches","is"],"so it's":["rather","not","not","probably","more"],"so just":["getting","passing"],"so late.":["Please"],"so led":["to"],"so less":["code"],"so let's":["try"],"so loading":["in"],"so long":["time,"],"so looking":["for"],"so making":["assignment"],"so many":["way"],"so maybe":["I'm"],"so much":["simpler!","about","of","royal","nicer","for","simpler","about","for"],"so naming":["the"],"so nitpicking":["from"],"so no":["need","one"],"so normalize":["still"],"so not":["sure"],"so nucleotide-counts":["uses"],"so oddly":[":(."],"so often":["use"],"so on":["another","strewn"],"so on.":["The"],"so over":["the"],"so pass":["the"],"so probably":["not"],"so readers":["can"],"so rusty!":[":D"],"so short":["that"],"so short,":["that"],"so simple":["that","however,","and"],"so something":["like","like"],"so specialized":["would"],"so suggestions":["such"],"so sure":["about"],"so thanks":["for"],"so thanks!":["I"],"so that":["their","the","at","you","would","you","the","`\"AGC\"`","representation","future","is","a","I","future","they","it","the","the","the","when","they're","it","you","the","reversing","the","code","it","the","their","the","their","code","you","they","I","can","the","the","every","there","the","your","the","it's","they","your","it"],"so that's":["very"],"so that’s":["very"],"so the":["Clojure","opening","call","call","feedback"],"so there":["won't","is","might","shouldn't","shouldn't","are"],"so there's":["no","no","no"],"so they":["have","can","would"],"so this":["could","is","is","is","is","is"],"so took":["this"],"so useful!":["Actually"],"so verbose":["so"],"so we":["avoid","can"],"so well":["recognized","known","known"],"so which":["one"],"so why":["indeed?"],"so will":["have"],"so won't":["repeat"],"so wrong":["to"],"so yeah,":["plenty"],"so you":["might","don't","can","don't","can","don't","don't","don't","can","could","should","can","could","don't","could","can","can't","can","could","can","wouldn't","might","don't","probably","may","don't","can","probably","probably","don't","don't","can","can","shouldn't","could","shouldn't","shouldn't"],"so you'd":["have"],"so you'll":["find"],"so your":["kind","regex"],"so, as":["an"],"so. I":["recalled","suppose"],"soapie, for":["the"],"soapie. I":["appreciate"],"software does.":["Though"],"software engineers),":["I"],"solely on":["regular"],"solicit names":["from"],"solid. Waiting":["for"],"solution (and":["it"],"solution (something":["that"],"solution (which":["fits"],"solution I":["had","liked","came","can","came","moved","checked"],"solution I've":["seen"],"solution `last`.":["Thanks!"],"solution a":["lot"],"solution all":["at"],"solution also":["work"],"solution and":["removed","applied"],"solution because":["I"],"solution before":["fetching"],"solution but":["I"],"solution could":["be","be"],"solution depends":["on."],"solution feels":["a"],"solution for":["this.","this","this,","matching"],"solution given":["by"],"solution has":["the"],"solution in":["order","Ruby.","this","Javascript](http://exercism.io/submissions/2f68013a2d8cecc8ac177907),"],"solution is":["pretty","pretty","smart","more","succint","extremely","based","clear","pretty","a","succinct","very","very","very"],"solution itself":["works,"],"solution looks":["good.","nice."],"solution more":["general,","\"robust\""],"solution much":["more"],"solution now":["as"],"solution really":["clear"],"solution right":["now"],"solution sacrifices":["efficiency"],"solution seems":["straightforward,"],"solution so":["much"],"solution that":["you","completely","make"],"solution this":["far..."],"solution to":["this","get","this","help","this","recognizing","the"],"solution uses":["polymorphism"],"solution using":["`interleave`.","`frequencies`","list","`re-seq`.","`\\w+`","`cond`.","`reduce-kv`"],"solution was":["the"],"solution wasn't":["as"],"solution when":["you"],"solution which":["doesn't"],"solution with":["`-&gt;`","classifying","conditionals"],"solution works":["well,"],"solution works,":["but","but"],"solution would":["benefit"],"solution! Did":["you"],"solution! I":["like","came"],"solution! Thank":["you"],"solution! Very":["clear,"],"solution, but":["I"],"solution, especially":["the"],"solution, must":["have"],"solution, the":["other"],"solution, while":["interesting,"],"solution, why":["not."],"solution. A":["few"],"solution. But":["I"],"solution. I":["like","am","think","submitted","think","really","used","like"],"solution. Slight":["overkill"],"solution. The":["`ns`"],"solution? I":["can't"],"solutions I":["found"],"solutions and":["realized"],"solutions for":["these"],"solutions in":["clojure","other"],"solutions it":["doesn't"],"solutions on":["SO"],"solutions over":["“foreign”"],"solutions so":["I"],"solutions that":["have,","use","have"],"solutions the":["```merge```"],"solutions to":["read","this;","that"],"solutions using":["Regex"],"solutions, but":["never"],"solutions. I":["found"],"solutions? So":["in"],"solve `silence`:":["`(re-find"],"solve the":["next","problem.","problem","problem.","exercise.","exercise","problem."],"solve this":["*without*","exercise,","without"],"solved `nucelotide-counts`":["using"],"solved in":["a","two"],"solved much":["more"],"solved this":["problem"],"solved this.":["My"],"solving a":["problem"],"solving the":["problem."],"solving this":["problem"],"som-set some-collection)`](http://clojuredocs.org/clojure_core/clojure.core/every_q)":["to"],"some additional":["context"],"some arbitrary":["input"],"some articles":["recommending"],"some assembly":["is"],"some back":["and"],"some base":["map?"],"some benefits":["including"],"some better":["control"],"some border":["cases"],"some built-in":["functions"],"some cases":["where"],"some cases.":["In"],"some changes":["taking"],"some characters":["you"],"some clarification":["around"],"some clarity":["by","for"],"some clojure":["koans","docs","code"],"some code":["every","here."],"some consistency":["stems"],"some constants":["and"],"some context":["it"],"some context,":["like"],"some convenient":["utilities"],"some definitions":["but"],"some defs":["to"],"some degree":["of"],"some descriptive":["names."],"some destructuring":["in"],"some dogmatic":["mistakes."],"some domain":["terminology"],"some domain-specific":["context."],"some duplication":["in"],"some duplication.":["I"],"some earlier":["exercises."],"some easy":["auto-memoization"],"some errors":["that"],"some examples":["here:","of"],"some excessive":["whitespace"],"some external":["spec."],"some extra":["brackets"],"some feedback":["that","that"],"some feedback.":["My"],"some food":["for"],"some for":["the"],"some generalized":["inflection"],"some guidelines":["here"],"some help":["from"],"some helper":["functions","functions","functions"],"some hidden":["solution"],"some indication":["of"],"some inefficiency":["in"],"some insight":["like"],"some interesting":["ones"],"some intermediate":["bindings"],"some issues":["with","with"],"some lambdas":["and"],"some late":["evening"],"some level.":["Cool."],"some may":["prefer"],"some measly":["parens"],"some mechanism":["like"],"some more":["often","stylistic","logic","appropriate","refactoring","clojure.","idiomatic"],"some more,":["\""],"some much":["more"],"some names":["to"],"some newlines":["throughout"],"some nitpicking":["before"],"some nits":["to"],"some of":["those","this","what's","my","them","it","the","that","the","the","them","the","my","the","your","the","those","the"],"some or":["to"],"some other":["piece","lisps","reasoning","test","control","options","exercices","regex","string","options"],"some parens":["using"],"some past":["assignments"],"some piping":["after"],"some places":["but"],"some possible":["english"],"some predicate":["methods?"],"some private":["functions","functions"],"some problems":["in"],"some processing":["to"],"some questions":["for","for"],"some quite":["long"],"some readability":["love!"],"some rearranging":["of"],"some reason":["I","this","it","I"],"some reason,":["I"],"some redundant":["whitespace"],"some simple":["pervlayer-style","conditionals?"],"some small":["improvements","nits","things"],"some sort":["of","of","of","of","of","of"],"some special":["function"],"some stuff":["on"],"some supposed":["solutions"],"some things":["one","that","I","like"],"some time":["to","and","ago","to"],"some time,":["but"],"some timing":["tests:"],"some tips":["on"],"some to":["leave"],"some trouble":["deciding"],"some type":["systems","conversion"],"some typing":["by"],"some undying":["meaning..."],"some unintended":["consequences."],"some universal":["internal"],"some vars":["to"],"some visual":["separate"],"some wasted":["effort"],"some way":["that","of"],"some would":["say"],"some “internal”":["function"],"some-collection)`](http://clojuredocs.org/clojure_core/clojure.core/every_q) to":["ensure"],"some-str)` just":["returns"],"some-str. There's":["also"],"some-string-sequence)) and":["I"],"somebody from":["the"],"somebody mentioned),":["but"],"somebody moderately":["fluent"],"somebody recently":["pointed"],"someday. So":["here's"],"somehow as":["it"],"somehow missed":["`clojure.string/split`."],"somehow missing":["out"],"somehow. I":["did"],"someone changed":["the"],"someone else":["could","please","used","wrote,"],"someone else's":[":)"],"someone had":["to"],"someone help":["me,"],"someone in":["that"],"someone mentioned":["having"],"someone more":["experienced"],"someone not":["experienced"],"someone on":["here"],"someone said)":["as"],"someone shouts":["\"ÄÜÖ\"?"],"someone takes":["my"],"someone that":["doesn't"],"someone who":["did","had","knew"],"someone would":["point"],"something I":["did","have"],"something I'm":["missing?"],"something I've":["learned"],"something `reduce`able,":["but"],"something a":["bit"],"something about":["it,","the","it."],"something along":["these","these"],"something besides":["strings"],"something could":["be"],"something else":["not","would","I'm","in","instead","has"],"something for":["`.endsWith`"],"something from":["`clojure.core`"],"something here,":["as"],"something in":["Java.","the","clojure.core","the","clojure"],"something is":["an","`present?`."],"something like":["that","that?","a","that?","`\\?`","`string-&gt;words`","`word-frequencies`?","that","string/ends-with","that:","\"Lets","this:","`(str","\"BOB","`:unknown`","`str/blank?`.","this?","`split`","`alphagram-from-lower-case`","`for","`(and","`(first","```(to-rna","`asking-politely?`)","`defrecord`","`(=","`#({\\T","[Moby","that.","```(every?"],"something like:":["glue"],"something list-y":["I"],"something looks":["stupid"],"something magical":["that"],"something meaningful":["in","for"],"something more":["meaningful","explicit,","like","simple","descriptive.","complicated","domain-specific","substantial)."],"something obvious":["since","?"],"something of":["an"],"something out":["there"],"something related":["to"],"something set":["in"],"something shorter,":["like"],"something simple":["to","like"],"something someone":["said)"],"something specific":["to"],"something that":["determines","seemed","would","worked.","should","should"],"something that's":["both"],"something there":["beside"],"something this":["short"],"something through":["the"],"something to":["be","keep","be","experiment"],"something unusual":["about"],"something useful":["in","w/"],"something which":["would"],"something with":["so","multimethods.","`(condp"],"something would":["fix"],"something wrong":["I'll","and"],"something you":["can","can"],"something\" in":["README.md"],"something)` would":["be"],"sometime soon.":["I"],"sometimes I":["just"],"sometimes feel":["dirty"],"sometimes nice":["to"],"sometimes pairs":["of"],"sometimes quite":["deep)"],"sometimes to":["just"],"sometimes, threading":["makes"],"sometimes. For":["example,"],"sometimes.) That":["said,"],"somewhat annoying":["that"],"somewhat by":["using","using"],"somewhat complex":["task.","behaviour,"],"somewhat n00bish":["when"],"somewhat redundant":["if","to"],"somewhat surprised":["to"],"somewhat surprising":["which"],"somewhat uncluttered":["templates."],"somewhat weird;":["first"],"somewhere but":["can't"],"somewhere else.":["What"],"song, I18n":["translations"],"song, how":["I"],"soon as":["you","any","one"],"soon. I":["kind"],"sorry I":["didn't"],"sorry about":["that."],"sorry for":["causing","the"],"sorry if":["that"],"sorry, I":["meant"],"sorry, but":["could"],"sorry, that":["should"],"sort -":["Counter"],"sort a":["list"],"sort also":["works"],"sort and":["transform"],"sort as":["it"],"sort being":["a"],"sort by":["frequencies\""],"sort capability.":["Frequencies,"],"sort for":["this"],"sort is":["likely","going","just"],"sort it":["N"],"sort of":["argument","one-way","incremental","cache,","fusion)","a","early","implementation","state","the","stumbled","interesting","way).","artifact.","NLP","thing.","thing.","just"],"sort on":["the"],"sort or":["frequency"],"sort out":["a","something"],"sort the":["base","base","first"],"sort, its":["implementation","implementation","implementation"],"sort, so":["there"],"sort-by because":["I"],"sort-by before":["I"],"sort-by, into":["set"],"sort. I":["learned"],"sort. Nobody":["decried"],"sort/lower-case work":["and"],"sorted alphabetically":["is"],"sorted expression":["over"],"sorted is":["called"],"sorted value":["of"],"sorted version":["as"],"sorted, lower-cased":["word"],"sorted-word)` does":["the"],"sorted/upper-cased values":["would"],"sorting &":["frequency"],"sorting -":["look"],"sorting `word`":["repeatedly."],"sorting a":["word"],"sorting algorithms":["are"],"sorting and":["lowercasing","lowercasing"],"sorting being":["slower"],"sorting of":["characters","the"],"sorting out":["the","idiomatic"],"sorting the":["names"],"sorts as":["little"],"sorts of":["useful","maps."],"sorts which":["-"],"sorts, but":["it"],"sound, it":["should"],"sounds a":["bit"],"sounds awesome,":["gonna"],"sounds funny":["to"],"sounds good":["to","to"],"sounds good.":["I've"],"sounds like":["\"good"],"source and":["target,"],"source file":["for"],"source for":["most"],"source text":["must"],"source)` only":["happens"],"space (120":["characters"],"space before":["`:requrie`.",":requrie.","the"],"space between":["character"],"space declaration,":["you"],"space delimited,":["a"],"space from":["the"],"space in":["editor"],"space is":["too"],"space on":["line"],"space since":["the","the"],"space, and":["code"],"space-age a":["macro"],"spaced-groups-of to":["make"],"spaces (not":["tabs)."],"spaces -":["not"],"spaces after":["`=`"],"spaces and":["sometimes","splitting"],"spaces are":["used","standard","used."],"spaces between":["words"],"spaces is":["standard","conventional"],"spaces on":["the"],"spaces, becase":["as"],"spaces, will":["look"],"spaces. For":["more"],"spaces. Have":["you"],"spaces: nicely":["caught."],"spacing in":["`defn`,"],"spans multiple":["lines."],"spare oneself":["a"],"spare redundant":["processing"],"spare the":["conversion","first","time.","time."],"spare you":["a","one","a"],"spare yourself":["the"],"spares one":["pair"],"speak the":["language"],"speak to":["me,"],"speaking about":["naming"],"speaking, using":["the"],"spec \"if":["you"],"spec very":["carefully,"],"spec. Other":["than"],"special because":["of"],"special case":["for","in","of"],"special cases":["in"],"special characters":["in","you"],"special form":["is","using","instead","for","instead","`letfn`"],"special form-(Classname.":["args*))"],"special form.":["This","It"],"special form](http://clojure.org/java_interop#Java":["Interop-The"],"special form](http://clojure.org/special_forms#toc10)":["for"],"special forms":["in"],"special forms?":["See"],"special reason":["you"],"special syntax":["since"],"special-case of":["`\\U`"],"specialized would":["be"],"specific about":["which"],"specific case.":["Maybe"],"specific cases":["like","such"],"specific fit":["to"],"specific function":["`ffirst`"],"specific functions":["so","come","so"],"specific functions:":["`:refer"],"specific instances":["of"],"specific meaning":["related"],"specific name":["than"],"specific names":["to"],"specific problem":["is"],"specific responses.":["It"],"specific term":["for"],"specific to":["clojure.","Clojure","be"],"specific types":["of"],"specific, but":["for"],"specific, that":["I"],"specific. One":["covers"],"specific? I'm":["new"],"specifically the":["\"not"],"specifically were":["working"],"specifically what's":["going"],"specification and/or":["test"],"specification changes":["such"],"specification in":["the"],"specification is":["vague"],"specification just":["says"],"specification to":["make"],"specification whether":["a"],"specification, docstring":["etc.)"],"specification? I'm":["not","not"],"specified by":["the"],"specified. Perhaps":["throwing"],"specifies a":["range."],"specifies that":["the"],"specify `(take":["2"],"specify a":["namespace,","default"],"specify both":["`:as`"],"specify the":["functions,"],"specify things":["like"],"specify those":["cases,"],"specify what":["you"],"specify whether":["capitalization"],"specify, how":["you"],"specifying a":["step"],"specs there":["is"],"speculation, but":["I"],"sped up":["significantly","this"],"speed with":["macros"],"speed. OO":["code,"],"spell, I":["had"],"spelled `(map":["vector"],"spelled correctly":[":)"],"spelled out":["as"],"spelling error":["and"],"spelling it":["out"],"spelling of":["sanitize."],"spelling out":["exactly"],"spending a":["little"],"spent time":["grumbling"],"spirit of":["familiarizing","exercism..."],"split [string]":["(re-seq","(s/split"],"split and":["lower-case?"],"split as":["one"],"split elements":["and"],"split from":["\\s+"],"split function.":["Worth"],"split here":[":)"],"split is":["completely"],"split it":["into"],"split like":["you"],"split off":["into"],"split on,":["and"],"split operations":["in"],"split out":["the","the","`words`"],"split replace)]`":["would"],"split the":["message","response-for","logic","task","clauses","phrase."],"split things":["like"],"split to":["show"],"split without":["having"],"split, there's":["no"],"split, you":["can"],"split-words seem":["like"],"split-words without":["needing"],"splits, since":["Strings"],"splitting a":["string"],"splitting at":["whitespace."],"splitting each":["predicate"],"splitting function":["bodies"],"splitting into":["words"],"splitting it":["which"],"splitting it;":["that'd"],"splitting of":["the"],"splitting on":["everything","the","non-word","that,","one"],"splitting the":["conditions","input","initial","filter","process","string","predicates","string"],"splitting them":["isn't"],"splitting up":["the"],"splitting words.":["The"],"splitting would":["be"],"splitting? I":["would"],"spoil the":["fun"],"spoken language":["idioms."],"spot some":["duplication"],"spread inside":["forms."],"spread long":["strings"],"spread verically":["-"],"square bracket":["should","and","shouldn't"],"square bracket.":["Body"],"square brackets":["around","put"],"square peg":["for"],"square root":["of"],"squash all":["sequences"],"squint sometimes.":[":)"],"stab at":["this"],"stabs at":["Clojure."],"staccato, BAM":["BAM"],"stack :)":["consider"],"stack space":["since","since"],"stack the":["ending"],"stack to":["figure"],"stack trace":[":)"],"stack with":["input"],"stacked up":["on"],"stage easily.":["eg:"],"stance. I":["see"],"standalone functions,":["maybe"],"standard -":["`sort-word`"],"standard ...":["or"],"standard clojure":["sequence"],"standard dev":["environment"],"standard in":["the","Clojure"],"standard indent":["for"],"standard library":["is","for"],"standard library),":["we"],"standard one":["is"],"standard practice":["is"],"standard way":["to"],"standard when":["used"],"standard](http://dev.clojure.org/display/community/Library+Coding+Standards)) .":["Predicates"],"standpoint it":["probably"],"stands for":["`?`,","string"],"stands in":["the"],"stands now,":["without"],"stands out":["to"],"stands, a":["person"],"stands. There":["are"],"stark difference":["between"],"start I":["think."],"start bindings":["list"],"start bracket":["for"],"start but":["in"],"start end":["-1)`"],"start extracting":["some"],"start from":["0,"],"start my":["diving"],"start the":["let"],"start throwing":["more"],"start with":["\"re-\"","details,"],"start! I'm":["new"],"start. It's":["not"],"started by":["attempting"],"started clojure,":["and"],"started learning":["Clojure.)","clojure,"],"started looking":["at"],"started out":["by","the","with"],"started separate":["repls"],"started splitting":["the"],"started this":["issue"],"started with":["clojure,","Clojure"],"starting from":["the","highest"],"starting hash":["in"],"starting to":["get","clean","look"],"starting with":["the"],"starting without":["a"],"starts to":["make"],"starts with":["capital"],"starts without":["a"],"state for":["each","the"],"state, and":["thought"],"state, which":["is"],"stated earlier,":["I"],"stated in":["my","problem"],"statement and":["I'm"],"statement but":["I'm"],"statement by":["removing"],"statement clean":["sentiment)`"],"statement didn't":["match"],"statement doesn't":["match"],"statement in":["this","the"],"statement instead":["of"],"statement is":["much","just"],"statement might":["be"],"statement on":["its"],"statement or":["sentence."],"statement pattern,":["it"],"statement patterns":["as","and"],"statement should":["be"],"statement since":["you're"],"statement somehow":["as"],"statement to":["determine","be","make"],"statement types,":["too)?"],"statement was":["a"],"statement will":["give"],"statement) (re-find":["#\"[a-zA-Z]\""],"statement) statement)":["(re-find"],"statement))`. I":["think"],"statement))``` is":["testing"],"statement), but":["I'm"],"statement, I":["did"],"statement-types: the":["keywords"],"statement. It's":["a"],"statement. On":["the"],"statement. That":["said,"],"statement? I":["thought"],"statement? both":["have"],"statement? have":["a"],"statement`. I":["admit"],"statements I've":["used"],"statements before":["I"],"statements below":["`cond`."],"statements in":["a"],"statements into":["the"],"statements on":["new","their"],"statements to":["types;"],"statements, for":["example."],"states and":["one"],"states what":["the"],"static method":["in"],"static predicate":["methods","methods."],"stating how":["words"],"stay at":["a"],"stay close":["for"],"stay consistent":["with"],"stay the":["same."],"stay with":["the","my"],"staying in":["the"],"steal some":["of"],"steal^H^H^H^H^H incorporate":["that"],"steer me":["in"],"stems from":["a"],"step -":["it"],"step function":["made"],"step in":["your"],"step of":["-1?","processing"],"step to":["make","making"],"step with":["a"],"step without":["loosing"],"step would":["weed"],"step, `(sort":["(str/lower-case"],"step. After":["all"],"step? `not=`":["is"],"stepped into":["trouble"],"steps and":["eliminate"],"steps like:":["`extract-numbers"],"steps, which":["often"],"steps. It's":["especially"],"sth (fn":["..."],"stick in":["my"],"stick strictly":["to"],"stick to":["ASCII)"],"stick with":["them,","the","regular","using","the","convention"],"sticks out":["to"],"still a":["bit","function","question","little","bit","dynamic","mystery"],"still adapting":["to"],"still allow":["perfectly"],"still an":["easier"],"still be":["there.","an","just"],"still believe":["this"],"still can":["give"],"still confused":["by"],"still correct?":["I"],"still digesting":["but"],"still do":["something"],"still doesn't":["check"],"still don't":["fully"],"still duplication,":["but"],"still essential":["for"],"still executed":["as"],"still fairly":["new","concise.","new"],"still fall":["behind."],"still feels":["wrong.","like","a"],"still fine.":[":)"],"still getting":["used","two"],"still give":["a","is"],"still gives":["quite"],"still going":["to"],"still had":["the"],"still have":["access","to","the","the"],"still haven't":["changed"],"still help":["explain"],"still is":["a"],"still keeping":["the","a"],"still kind":["of"],"still learning":["Clojure","clojure,"],"still leaves":["something"],"still like":["having","the"],"still make":["sense?","me"],"still many":["string"],"still might":["benefit"],"still mulling":["over"],"still need":["to","the"],"still new":["at"],"still not":["very","a","the"],"still off":["but"],"still only":["just"],"still overhead":["in"],"still pretty":["good","new","sure","new"],"still reference":["the"],"still relevant":["example"],"still repeatedly":["apply"],"still somewhat":["n00bish"],"still sorting":["out"],"still support":["them"],"still think":["it"],"still thinks":["my"],"still to":["use"],"still unsure":["about"],"still using":["`mapv`"],"still very":["new"],"still waiting":["for"],"still want":["to"],"still will":["be"],"still working":["through"],"still works":["with"],"still would":["need"],"still, it":["puts"],"still. Do":["you"],"stitch together":["the"],"stone. About":["the"],"stop and":["think"],"stop coding":["at"],"stop using":["`use`."],"stop with":["the"],"stopped sorting":["`word`"],"stopped to":["think"],"stopping at":["\"javascript\"."],"stops and":["nil"],"stops processing":["as"],"store /":["validate"],"store and":["buy"],"store the":["results","`convert_number`"],"store them":["along"],"store...\". What":["do"],"stored in":["meaningful","the"],"story of":["why"],"str (map":["…))`","#(if","char","...`."],"str (take":["10000000","10000000","1000000"],"str ,,,)`":["already"],"str ...)`":["but","instead","should","or"],"str ...)`.":["I"],"str :only":["[:upper-case]]))"],"str [\"A\"":["\"C\""],"str collection)`":["a"],"str mapping":["and"],"str on":["the"],"str some-str)`":["just"],"str) 1)":["\"?\")"],"str)` which":["also"],"str, or":["whatever."],"str, which":["seems"],"str. Even":["then,"],"str.blank? instead":["of"],"str/blank? directly":["rather"],"str/blank?)` which":["will"],"str/trim here.":["My"],"str/trim str/reverse":["str/upper-case)"],"str])` or":["`(:require"],"str` -":["this"],"str` behind":["a"],"str` instead":["of"],"str` which":["seems"],"straight `cond`":["though..."],"straight forward":["way.","and"],"straight from":["the"],"straight to":["keep","the"],"straight translation":["of"],"straight-forward to":["read."],"straightforward and":["easy"],"straightforward that":["I"],"straightforward to":["reason"],"straightforward(and I":["like"],"straightforward, but":["the"],"straightforward. Would":["it"],"strand (apply":["str"],"strand are":["valid."],"strand as":["a"],"strand into":["a"],"strand is":["formed"],"strand like":["this)."],"strand) molecule":["0)`,"],"strand)` is":["a"],"strand, its":["transcribed"],"strand, take":["a"],"strand. I've":["tried"],"strand. If":["the"],"strand1 (map":["="],"strand2) (filter":["false?)"],"strands of":["different"],"strands together":["certainly"],"strands were":["represented"],"strands with":["`=`","simply","invalid"],"strange call":["of"],"strange compared":["to"],"strange to":["me"],"strangely worded,":["perhaps"],"strangeness in":["the"],"strategies to":["provide"],"strategy to":["this"],"streamline your":["`-check`"],"stretches of":["wrong"],"strewn throughout":["the"],"strict about":["only"],"strictly to":["the"],"string \"default\".":["You"],"string #\"\\W\")))`":["-"],"string (or":["at"],"string *is*?":["I"],"string -":["\"replace"],"string API":["has"],"string `\"U\"`":["for"],"string a":["sequence"],"string accumulator":["with"],"string after":["the"],"string against":["the","the"],"string among":["multiple"],"string and":["lowercasing","mapping","use","compare","get","only","then","a","the","regex","instead"],"string as":["a","a","a"],"string based":["algorithm,"],"string before":["splitting"],"string being":["passed"],"string building":["form."],"string can":["be","be","be","be"],"string cases":["would"],"string check":["functions"],"string checking":["functions"],"string checks":["into","with"],"string concatenation":["does","going"],"string could":["express"],"string directly":["using"],"string ends":["with"],"string extends":["sequence"],"string feels":["a"],"string for":["now,"],"string formatting/templating":["at"],"string four":["separate"],"string from":["a","the"],"string function":["to","instead"],"string functions":["to","and","or","for","that","that"],"string functions.":["It","This"],"string generation":["fn"],"string generator":["which"],"string handling":["library"],"string has":["letters)."],"string have":["lowercase"],"string here,":["so"],"string identifiers,":["otherwise"],"string if":["you"],"string in":["`str`","constant","your","`respond`","its","imperative","that"],"string inside":["of"],"string inspection.":["It's"],"string instead":["of","of"],"string interpolation":["that"],"string into":["words","a","a","a"],"string is":["a","a","not","treated","unnecessary.","more","giving","out","nil,","treated","already","not","empty","blank?","valid"],"string key.":["(Hint:"],"string library":["has"],"string like":["\"I...\""],"string literal":["-"],"string literals":["(these","I","with","and"],"string literals,":["there"],"string literals.":["You","For","It","Also,"],"string looking":["for"],"string matches":["the","the","you"],"string matching.":["The"],"string may":["contain","be"],"string methods":["instead"],"string methods.":["That's"],"string namespace":["to"],"string namespace,":["and"],"string namespace.":["Otherwise,","I"],"string not":["having"],"string of":["DNA"],"string on":["groups","whitespace","the"],"string once,":["rather"],"string only":["contains"],"string operation":["you're"],"string operations":["removes","-"],"string or":["not.","single","remove","even","inline","statement"],"string out":["of"],"string parameter":["`statement`"],"string pattern":["matching."],"string prior":["to"],"string rather":["than"],"string recommended":["in"],"string repetitions":["in"],"string replace":["to","function","function","functions","function","function","is"],"string replacement":["or","to","for","functions"],"string representation":["of","from"],"string scans":["for"],"string should":["have"],"string so":["they"],"string templates":["like"],"string tests":["into","into"],"string the":["```str```"],"string to":["be","vector"],"string unnecessarily,":["since"],"string using":["them;"],"string versions":["as"],"string when":["normalizing."],"string which":["simplifies"],"string with":["a"],"string without":["creating"],"string won't":["be"],"string would":["be","not"],"string\")``` without":["any"],"string's replace":["instead"],"string))` over":["using"],"string). This":["version"],"string, but":["not","I"],"string, it":["may","might"],"string, leading":["to"],"string, like":["so:"],"string, maybe":["`alphagram`"],"string, rather":["than"],"string, would":["it"],"string-specific functions":["instead"],"string. Also,":["you"],"string. Functions":["built"],"string. Given":["how"],"string. Here's":["a"],"string. In":["a"],"string. Most":["examples"],"string. Optionally,":["you"],"string. Possibly":["a"],"string. The":["`=`"],"string. There":["are"],"string. This":["won't"],"string. You":["might","also","might","can"],"string...\" I":["assume"],"string/blank? already":["disregards"],"string/character does":["not."],"string/ends-with for":["the"],"string/replace is":["probably"],"string? \"Do":["you"],"string? Also,":["you"],"string? Hint:":["a"],"string? Sot":["that"],"string? a":["number?"],"string`, since":["you"],"strings \"T\"":["and"],"strings (I":["didn't"],"strings (assuming":["memory"],"strings -":["and"],"strings a":["lot."],"strings across":["multiple"],"strings adds":["a"],"strings after":["the"],"strings alone":["can"],"strings always":["count"],"strings and":["comments."],"strings are":["sequences","already","already","sequences","treated","recommended"],"strings as":["well.","lists","seqs","lists"],"strings by":["creating"],"strings can":["be","be"],"strings count":["as"],"strings except":["for"],"strings for":["your","your","the","the"],"strings from":["those"],"strings here.":["You"],"strings in":["the","the","Clojure"],"strings of":["capital"],"strings on":["this"],"strings private":["is"],"strings rather":["than"],"strings seemed":["silly"],"strings such":["as"],"strings than":["using"],"strings themselves":["as"],"strings themselves.":["I"],"strings through":["`#(Integer."],"strings to":["code","a"],"strings twice.":["consider"],"strings using":["a"],"strings vs.":["characters"],"strings which":["will","may"],"strings with":["a"],"strings without":["capital"],"strings you":["add"],"strings, and":["vice","I"],"strings, but":["I"],"strings, it":["cleans"],"strings, just":["because"],"strings, so":["there's","no"],"strings, which":["is"],"strings, you":["don't"],"strings. Any":["way"],"strings. How":["else"],"strings. I":["appreciate"],"strings. Introducing":["string"],"strings. Maybe":["some"],"strings. Using":["\"\"\"xyz\"\"\""],"strings. `0`":["and"],"strip at":["all."],"strip-chars \"\")`":["and"],"strip-chars and":["split-words"],"strip-chars at":["all?"],"strip-leading-one? was":["meant"],"strip-us-prefix -\u003e":["sanitize-number`"],"strip-us-prefix and":["once"],"strip-us-prefix, at":["least"],"strong so":["if"],"stronger names":["by"],"strongly about":["it,","it?","that."],"strongly as":["possible"],"strophe would":["flow"],"structural where":["every"],"structure (which":["is"],"structure and":["naming."],"structure as":["the","the"],"structure could":["be"],"structure in":["`sing`","the"],"structure is":["a"],"structure of":["the","RNA","the"],"structure than":["just"],"structure' to":["solve"],"structure) instead":["of"],"structure. Strings":["extend"],"structure. This":["way"],"structure? Generally":["transients"],"structured it":["overall,"],"structured way...":["sometimes"],"structured, I":["suppose"],"structures (like":["hash-map)"],"structures besides":["`if`?"],"structures in":["Clojure."],"structures when":["they're"],"structures\". Thank":["you"],"structures), may":["still"],"structures. Other":["than"],"struggled for":["a"],"struggled with":["line"],"struggling to":["come"],"struggling with":["the"],"students number":["[])`"],"students number)":["[])`."],"studying algorithms":["and"],"stuff about":["design"],"stuff at":["a"],"stuff crammed":["into","into"],"stuff for":["date"],"stuff from":["left","each","the"],"stuff in":["clojure.core,"],"stuff inside":["each"],"stuff is":["so"],"stuff like":["that","`str`"],"stuff on":["the"],"stuff out":["to"],"stuff since":["the","map"],"stuff so":["this"],"stuff together":["with"],"stuff with":["\"horizontal\""],"stuff, hence":["`declare`"],"stuff. I'm":["not"],"stuff. doto":["forces"],"stuff: clean":["and"],"stumble on":["something"],"stumbled upon":["```frequencies```.","this"],"stupid I":["should"],"stupid questions":["-"],"style (my":["main"],"style -":["so"],"style I've":["seen"],"style also":["requires"],"style and":["syntax.","preference."],"style come":["from?"],"style consistent":["with"],"style fns":["-"],"style for":["the","you?","(cond)"],"style functions":["but"],"style good":["looks"],"style guide":["was","you","maintained","compiled","at","maintained","at"],"style guide,":["I"],"style guide.":["I","I've"],"style guide:":["https://github.com/bbatsov/clojure-style-guide"],"style guidelines":["and","can"],"style here":["is"],"style if":["you"],"style in":["any","the","clojure"],"style is":["to","not"],"style nit:":["I"],"style of":["development","closing"],"style preference,":["but"],"style pundit,":["but"],"style recommendation":["is,"],"style says":["to","not"],"style surely":["later."],"style that":["you"],"style to":["omit","use","close","close"],"style, because":["the"],"style, but":["I","generally","it"],"style, so":["I"],"style, that's":["why"],"style. But":["I"],"style. Generally,":["besides"],"style. I":["like"],"style. I've":["seen"],"style. Thanks":["so"],"styles are":["correct."],"styles here,":["when"],"styling points":["to"],"stylistic ones":["which"],"stylistic than":["functional:"],"subfunctions with":["names."],"subfunctions. Although":["this"],"subject only":["once,"],"subject, but":["I've"],"subjective so":["ignore"],"subjective, and":["there's"],"subjective. I'm":["prepared"],"submission (I":["think)."],"submission -":["now","lets","I"],"submission I":["get","might"],"submission after":["some"],"submission and":["see"],"submission but":["in"],"submission contains":["changes"],"submission didn't":["get"],"submission first,":["scratch"],"submission forthcoming.":["Thanks"],"submission had":["been"],"submission in":["Scala,"],"submission looks":["much"],"submission on":["the"],"submission wasn't":["random"],"submission will":["be"],"submission! Can":["I"],"submission! Please":["ignore."],"submission) and":["applies"],"submission, I":["just","intentionally"],"submission, and":["let"],"submission, it":["is"],"submission, there's":["a"],"submission. Also":["added"],"submission. Have":["reversed"],"submission. I":["feel","still"],"submission. Iteration":["3"],"submission. Now":["that"],"submission. The":["new"],"submission. Try":["submitting"],"submissions I've":["seen,"],"submissions differs":["from"],"submissions for":["that"],"submissions when":["I"],"submissions. The":["link"],"submit a":["version","pull","pull-request"],"submit ahead":["of"],"submit another":["revision"],"submit bob.clj":["again"],"submit it":["for","to"],"submit the":["next"],"submit this":["again.","assignment."],"submit, please":["ignore."],"submit. Sorry":["for"],"submitted [an":["issue](https://github.com/kytrinyx/exercism.io/issues/504)"],"submitted a":["version","new","work","new","new","new","new","new","new","new","new","pull"],"submitted another":["revision.","version."],"submitted by":["mistake"],"submitted early,":["but"],"submitted instead":["of"],"submitted the":["rna","tests"],"submitted this":["even"],"submitted this!":["Please"],"submitted to":["\"bob\""],"submitted when":["I"],"submitted while":["toying"],"submitted. There":["were"],"submitter's use":["of"],"submitting \"bob\"":["again"],"submitting a":["new","new","working"],"submitting code":["to","when"],"submitting instead":["of"],"submitting this":["one"],"submitting this.":["I"],"submitting. Rookie":["error."],"subset of":["`\\W`,","`#{A"],"substantial amount":["of"],"substantially longer":["than"],"substitute for":["`(first"],"substituted for":["`map`."],"substring is":["at"],"substring. Maybe":["that"],"subtle bug":["regarding","in","in"],"subtle bug.":["I"],"subtle hint":["above,"],"subtle name":["change"],"subtracted from":["one"],"succinct than":["my"],"succinct this":["solution"],"succinct, but":["it's"],"succinct, even":["if"],"succinctness of":["Clojure."],"succint and":["to"],"succint method":["of"],"succint names":["before"],"succint, it's":["hard"],"succintly with":["`filter`."],"such I'm":["never"],"such a":["simple","mapping,","narrow","thing","simple","small","sane","small","simple","simple","long"],"such as":["`nil`","ClojureScript.","`silence?`,","that","`\"42\"`","to","`filter`.","\"4?\".","wanting","\"shouty-question?\"","blank?"],"such cases...":["When"],"such code,":["you"],"such concepts":["as"],"such construct.":["Probably"],"such discussions":["are","are"],"such having":["such"],"such order":["-"],"such praise":[":)"],"such simple":["conditions,"],"such small":["and"],"such that":["one","the","one"],"such way,":["by"],"such would":["be"],"suddenly the":["size","size"],"suffer. Duplication":["in"],"suffice to":["satisfy"],"suffice. A":["set"],"suffice. Hmmph.":["Maybe"],"suffice. Otherwise,":["looks"],"suffice. `:else`":["is"],"sufficient? I've":["added"],"suffix `?`":["rather"],"suffixes? The":["remark"],"sugar fns":["in"],"sugar for":["these"],"sugar to":["me."],"sugar. Bless":["Rich"],"sugar. The":["gist"],"suggest :use":["and"],"suggest `:require`":["inside"],"suggest a":["good","better"],"suggest adding":["a"],"suggest breaking":["the"],"suggest considering":["would"],"suggest extracting":["conditions","functions"],"suggest going":["with"],"suggest here":["are"],"suggest indenting":["each"],"suggest is":["to","to","to"],"suggest making":["response-for","sure"],"suggest taking":["a"],"suggest that":["you","there","they","the"],"suggest would":["be","be"],"suggest you":["use","rename","memoize","look"],"suggest, just":["submitted"],"suggest, this":["was"],"suggested 3":["before,"],"suggested `repeat`":["which"],"suggested assigning":["the"],"suggested by":["@edgar"],"suggested earlier":["and"],"suggested regex":["with"],"suggested something":["I"],"suggested such":["construct."],"suggested that":["I","I"],"suggested them":["in"],"suggested to":["use","me,"],"suggested, see":["next"],"suggested. This":["had"],"suggesting *why*":["you're"],"suggesting a":["larger"],"suggestion -":["you"],"suggestion I":["would"],"suggestion about":["the"],"suggestion by":["@ulises."],"suggestion for":["\"dow\""],"suggestion is":["that","to","to"],"suggestion of":["using","moving"],"suggestion on":["your","`defn-`","last","how"],"suggestion to":["keep"],"suggestion until":["you"],"suggestion, I":["have"],"suggestion, have":["you"],"suggestion, yes":[":)"],"suggestion. I":["find"],"suggestion. I've":["updated"],"suggestion. This":["solution"],"suggestion: you":["might"],"suggestions (well,":["almost"],"suggestions -":["both"],"suggestions I'm":["submitting"],"suggestions and":["resubmitted"],"suggestions in":["clojure.","my","the"],"suggestions on":["how","you"],"suggestions such":["as"],"suggestions very":["welcomed!","welcomed!"],"suggestions would":["provide"],"suggestions! Thanks":["much."],"suggestions, I":["don't"],"suggestions, thanks.":["I"],"suggestions, they":["very"],"suggestions. This":["is"],"suggests it":["is."],"suit any":["admin"],"suitable for":["situations"],"suite but":["let"],"suite doesn't":["test","test"],"suite for":["this"],"suite probably":["lacks"],"suite to":["include"],"suite, I":["have"],"suite, so":["a"],"suite. `sorted`":["is"],"suite? Check":["the"],"suited to":["Clojure."],"super clear":["what"],"super easy":["to","to"],"super explicit":["is"],"super picky,":["but"],"super promising.":["I'll"],"super-DRY implementation.":["I"],"super-short. Sometimes":["the"],"superfluous during":["a"],"superfluous on":["a"],"superfluous parenthesis":["mentioned"],"superfluous, take":["a"],"supplied expressions":["as"],"supplied tests":["did"],"supplied: :only`":["when"],"support Clojure":["dialects"],"support destructuring":["is"],"support in":["standard"],"support more":["than"],"support of":["the"],"support tail-call":["optimization.","optimization."],"support them":["in"],"support unicode":["letters."],"supported currying":[":("],"suppose I":["violated"],"suppose if":["I"],"suppose that":["leaving","it's","`tokenize`","the","it's","you've"],"suppose you":["don't"],"suppose. Generally":["looks"],"supposed grow":["considerably:"],"supposed solutions":["on"],"supposed to":["do","be","be","do,","validate","be","nitpick!)","be"],"suppress the":["warning"],"supprized at":["how"],"sure \"histogram\"":["is"],"sure @marty":["can"],"sure I":["like","follow.","can","agree","understand","should","would","like","see"],"sure `#(not-same?":["%"],"sure about":["the","this","the","the","```(not","it","the","the","the","the"],"sure bob":["knows"],"sure count":["should"],"sure doing":["it"],"sure how":["to","I","to","that","the","to","to","readable","appropriate","to","much"],"sure how).":["And"],"sure how.":["I"],"sure if":["there","you","there's","there's","this","line","the","it","that","this","the","there's","this","you"],"sure it":["makes","is","makes"],"sure it's":["worth"],"sure others":["feel"],"sure stands":["for"],"sure that":["`empty?`","you","eliminating","the","a","they","the","it'"],"sure that's":["in"],"sure the":["string","shouted"],"sure there":["is","must","was","is"],"sure there's":["something"],"sure they":["should"],"sure this":["is"],"sure to":["only"],"sure what":["you","to","the","`\\?`","the","you","you're","to","you","I"],"sure what's":["the","the","the"],"sure when":["it's"],"sure which":["is"],"sure why":["you're","I","you","I","you"],"sure you":["need","need"],"sure you've":["got"],"sure your":["solution"],"sure) split":["function."],"sure, since":["I’ve"],"sure. Would":["you"],"surely later.":["The"],"surely more":["effective"],"surely this":["can't"],"surprise. I":["gladly"],"surprised if":["my"],"surprised in":["the"],"surprised me":["most","about"],"surprised the":["result"],"surprised to":["find","discover","have","find"],"surprised with":["how"],"surprised you":["needed"],"surprising which":["things"],"surrouding `(let":["..)`"],"surrounding context":["is"],"surrounding lexical":["scope)."],"surrounding parts":["with"],"surrounding string":["literals.","literals."],"surrounding strings.":["Maybe"],"suspect that":["```.endsWith```,","might"],"swap one":["of"],"swap the":["`(\u003e"],"swap those":["characters."],"swapped `(seq":["letters-in-prompt)`"],"swapped for":["`sort`","`(partial"],"swapped once,":["and"],"swapped the":["order"],"swapping Ts":["with"],"swapping `sort`":["for","for","for","with","with","for","with","with","for","for","for"],"swapping the":["order"],"swayed you.":[":)"],"sweet reviews...":["refactoring"],"sweet usage":["there"],"sweet! I":["thought"],"sweet, who":["knew"],"switch back":["to"],"switch statement":["is"],"switch the":["order"],"switch to":["`defn-`,","using"],"switched from":["regex's"],"switched it":["back."],"switched the":["order","order"],"switched to":["using","#()","using"],"switched. Check":["out"],"switching out":["use"],"switching to":["`letfn`,"],"swore there":["was"],"symbol `:else`":["for"],"symbol `c`":["represent"],"symbol `split`.":["So"],"symbol and":["keyword)"],"symbol for":["`require`"],"symbol in":["the","the"],"symbol like":["`:name`"],"symbol table.":["Especially"],"symbol. I":["guess"],"symbol: my-other-value":["in"],"symbol: upper-case":["in"],"symbols (`?`,":["'!'"],"symbols and":["values"],"symbols are":["so"],"symbols directly":["or"],"symbols from":["the","that"],"symbols in":["the"],"symbols into":["named"],"symbols outside":["plain","their"],"symbols with":["the","meaningful"],"symbols without":["namespace"],"symbols you":["want..."],"symbols, that's":["why"],"symmetry between":["both"],"symmetry in":["the"],"symmetry is":["nice"],"symmetry with":["the"],"syntactic overhead":["to"],"syntactic sugar":["to"],"syntactic sugar.":["The"],"syntactically idiomatic":["to"],"syntax `#(if":["(="],"syntax does":["not"],"syntax for":["strings."],"syntax is":["taking"],"syntax isn't":["line-oriented"],"syntax since":["Clojure's"],"syntax sugar.":["Bless"],"syntax throwing":["an"],"syntax to":["sink"],"syntax trying":["to"],"syntax when":["comparing"],"syntax which":["would"],"syntax will":["work"],"syntax. Also,":["links"],"syntax? IMO,":["the"],"system and":["not"],"system, how":["would"],"system, we're":["trying"],"systematically use":["regular"],"systems for":["Clojure"],"t see":["another"],"table. Especially":["when"],"taboo); most":["text"],"tack the":["\"\\n\""],"tackle. Dealing":["with"],"tackling this":["(which"],"tad smaller":["dropping"],"tag them":["with"],"tail recursive":["function?"],"tail-call optimization":["(you"],"tail-recursive, so":["you"],"tail-recursive. Other":["than"],"take 3":["characters\".","characters\""],"take 4":["characters\"."],"take `words`,":["it's"],"take a":["look","predicate","string.","look","look","look","`:rename`","look","look","look","look","look","look","look","look","look","new","look","look","look","3rd","look","default"],"take advantage":["of","of","of","of","of"],"take an":["argument","optional","optional","options"],"take away":["the"],"take care":["of","of","of"],"take into":["account"],"take is":["to"],"take just":["a"],"take multiple":["collections"],"take my":["word"],"take on":["how","the"],"take one":["argument","argument"],"take out":["the"],"take some":["time","time,","time."],"take the":["time","first","opportunity","argument"],"take two":["more","arguments."],"take your":["point,","advice","feedback","advice","point.","point"],"take! Nice":["structure"],"take-away from":["the"],"take/drop and":["then"],"taken about":["pre-creating"],"taken the":["solution"],"takes 1":["argument"],"takes 2":["arguments","arguments."],"takes a":["regex","responder","couple"],"takes an":["optional"],"takes care":["of"],"takes longer":["than"],"takes me":["a"],"takes my":["code"],"takes precedence":["over"],"takes the":["implementation","words","definition"],"takes this":["detail"],"takes to":["sort"],"takes your":["remark"],"taking ```words```,":["I'm"],"taking a":["look!","look"],"taking advantage":["of","of"],"taking in":["the"],"taking into":["account","account"],"taking it":["to","as"],"taking precedence.":["\"WHAT"],"taking single":["argument."],"taking singular":["noun"],"taking some":["time"],"taking the":["time","context","time!","simpler"],"taking this":["pile"],"taking time":["for"],"talk about":["returning"],"talk to":["your","them","seem"],"talking about":["two","a"],"talks about":["lists"],"tangential and":["unimprotant,"],"target acid’s":["name,"],"target domain":["point.)"],"target values":["so"],"target's acid":["nucleotides."],"target, but":["it"],"task first":["time"],"task into":["three"],"task is":["to"],"task. Clojure":["rocks."],"tasks -":["helped"],"tasks, one":["could"],"taste I":["guess."],"taste and":["this"],"taste this":["are"],"taste to":["me,"],"taste, and":["in"],"taste, but":["I"],"taste, there's":["no"],"taste. Looks":["great."],"taught me":["something"],"taught that":["I'll"],"teach concepts":["while"],"technical details":["(\"upper"],"technical standpoint":["it"],"technically an":["anagram"],"technically more":["modular,"],"technique that":["helps"],"teenager thinks":["about"],"teenager with":["different"],"teenager's brain),":["but"],"teenager) \"Whatever.\"":["should"],"teenagers probably":["think"],"teenth? ...`.":["But"],"teeth on":["Clojure"],"teeth with":["Clojure,"],"tell I":["don't"],"tell anyone,":["but"],"tell at":["a"],"tell clojure":["that"],"tell exactly":["what"],"tell him":["something\""],"tell it":["what"],"tell just":["what"],"tell me":["to","yet!","what","the"],"tell me,":["what"],"tell much":["-"],"tell the":["story","'story'"],"tell you":["much","what","whats","that"],"tell, It's":["often"],"telling us":["\"why\""],"tells me":["specifically"],"tells you":["*what*"],"template as":["possible"],"templates like":["`n-bottles`."],"templates would":["help"],"temporary variable":["so"],"tempted to":["rewrite"],"ten from":["either"],"ten or":["eleven"],"tend for":["forget"],"tend to":["see","do,","only","compare","compare","err","keep","have","see"],"tends to":["be","be"],"tension about":["that,"],"term for":["this.","a","this)."],"term in":["`nucleotide-counts`"],"term was":["better."],"term, so":["calling"],"term. would":["another"],"terminal states":["and"],"terminate at":["the"],"terminating double":["quote."],"termination either.":["Why"],"terminology you":["can"],"terminology; I":["think"],"terms (like":["\"yelling\")"],"terms back":["in?"],"terms expressed":["in"],"terms for":["parts"],"terms into":["your"],"terms like":["\"shouting\","],"terms of":["`shouting?`","efficiency,","efficiency,","normalized","memory","how","how","`nucleotide-counts`?","each","it.","the","`ends-with?`,","`partial`.","function","separating","the","`translate`,"],"terrible in":["a"],"terribly important.":["You"],"terriority of":["personal"],"terse and":["well-named."],"terse, but":["could"],"terse. Something":["like"],"test .clj":["files"],"test about":["number"],"test again":["with"],"test against.":["That"],"test and":["that"],"test case":["for","like","on","pass,"],"test case,":["I","but"],"test case.":["e.g."],"test cases":["provide:","receives","must","don't","of"],"test cases,":["three"],"test cases.":["Most"],"test cases—one":["of"],"test code":["doesn't"],"test data.":["Test"],"test does":["not"],"test expects":["that"],"test file":["by","is"],"test file](https://github.com/kytrinyx/exercism.io/blob/master/assignments/clojure/bob/bob_test.clj#L1)":["too?"],"test for":["`(=","numbers,","equality","`:ignored`.","empty","shouting,","that?","\u003ccode\u003eshouting?\u003c/code\u003e","that,","it.","what's","validity","\"letterness\""],"test for,":["create"],"test frameworks":["as"],"test functions":["out","out","should"],"test if":["it"],"test in":["bob","the","\"count\"","isQuestion"],"test inconsistency.":["The"],"test inputs":["it's"],"test is":["checking","probably","for"],"test it":["-"],"test locally":["for"],"test methods":["are"],"test only":["covers"],"test really":["could"],"test script.":["Would"],"test should":["be","be"],"test so":["it"],"test suite":["for","to","but","doesn't","doesn't"],"test suite,":["I","so"],"test suite.":["`sorted`"],"test suite?":["Check"],"test that":["provides","the","the"],"test that,":["though)."],"test them":["themselves,"],"test to":["see","validate"],"test wanted":["this"],"test what":["they"],"test where":["a"],"test while":["staying"],"test would":["be"],"test) the":["last"],"test, as":["they"],"test, since":["I"],"test, to":["test"],"test, you're":["testing"],"test-char (last":["message))`"],"test-suite also":["had"],"test... It's":["a"],"test/example for":["future"],"test? I":["don't"],"testability...) that":["names"],"tested and":["where"],"tested or":["specified."],"tested prior":["in"],"tested that":["snippet"],"tested with":["all"],"testing `s`":["in"],"testing for":["characters","a"],"testing for.":["Such"],"testing for?":["Also,"],"testing if":["`s`","it"],"testing my":["stuff"],"testing tool":["used"],"testing whether":["its"],"testing your":["inputs"],"testing! I'm":["still"],"testing, I":["might"],"testing, that":["was"],"tests (the":["`not=`"],"tests I'm":["unsure"],"tests across":["my"],"tests against":["it?"],"tests and":["making","this"],"tests are":["all","pretty","green,","all"],"tests at":["the"],"tests better":["when"],"tests but":["worth","I","those"],"tests containing":["12","14"],"tests correct":["on"],"tests did":["not","not"],"tests don't":["consider","actually","test","drive"],"tests don’t":["specify"],"tests extracted":["to"],"tests fail":["as"],"tests for":["the","set"],"tests force":["you"],"tests in":["any","the","Clojure","bob_test.clj?"],"tests instead":["of"],"tests into":["private","private","their","their"],"tests is":["that"],"tests later":["if"],"tests might":["not"],"tests over":["them."],"tests pass,":["but","but","I"],"tests pass.":["which"],"tests require":["entries"],"tests should":["be"],"tests show":["that","that"],"tests since":["I"],"tests so":["that","that"],"tests that":["are"],"tests the":["truth"],"tests to":["named","pass.","that","keep","pass","ensure"],"tests use":["vectors."],"tests were":["obtained"],"tests with":["more"],"tests without":["actually"],"tests would":["use","not","have"],"tests you":["could"],"tests) I":["personally"],"tests) are":["mainly"],"tests), hence":["it"],"tests, but":["I'm"],"tests, it":["looks"],"tests, please":["make"],"tests, plus":["a"],"tests, so":["I"],"tests. I":["guess"],"tests. If":["`\\U`"],"tests. Ignore":["this"],"tests. Not":["sure"],"tests. That":["will"],"tests. That's":["what","what"],"tests. What":["really"],"tests: is":["\"banana\""],"tests? I":["would"],"tests? The":["shouty?"],"text actually":["contains"],"text editors":["can"],"text into":["a"],"text is":["the","based"],"text must":["start"],"text so":["that"],"text)` (via":["`anagram?`)"],"text, and":["whatever"],"text, or":["any"],"textbook reason":["to"],"textmate and":["need"],"than \"%1\"":["in"],"than \"def\"":["here"],"than \"input\"":["as"],"than \"let\"":["here."],"than \"piping":["the"],"than \"s\"":["as"],"than \"unknown\"":["for"],"than (=":["42","x"],"than (conj":["map"],"than 11.":["Not"],"than 3":["-","seconds."],"than 3/4.":["-&gt;&gt;"],"than \u003ccode\u003estr\u003c/code\u003e":["or"],"than Clojure.":["Have"],"than Haskell,":["I'm"],"than I":["should","can"],"than Java":["methods)?"],"than [#4](http://exercism.io/submissions/52365b5d658d2387560000a1),":["but"],"than [A-Z]":["and/or"],"than [version":["1](http://exercism.io/submissions/520dbaaed908bda87300003d)."],"than `()`":["for"],"than `(.endsWith":["message"],"than ```(.endsWith":["convo"],"than ```(=":["(last"],"than ```require```,":["which"],"than `condp`,":["which"],"than `defn`":["to","for"],"than `drop":["1`?"],"than `sort`":["in"],"than `sort`.":["Also"],"than `split`":["for"],"than `true`":["for"],"than a":["char","binary","positive","definition","map","loop","plain","regular","minimum","linear","regex."],"than an":["optimized"],"than anything.":["Thanks"],"than being":["a"],"than calling":["the","Java"],"than character":["primitives?"],"than characters":["to"],"than code":["cleverness,"],"than comments":["for"],"than completing":["the"],"than copy-and-pasting":["them"],"than creating":["a"],"than current":["count/re-seq"],"than defining":["your"],"than defn,":["e.g.,"],"than delegating":["to"],"than doing":["the"],"than efficiency":["at"],"than existed":["in"],"than explicitly":["calling"],"than filtering":["the"],"than for":["each"],"than frequencies":["for"],"than generate":["a"],"than hasher,":["this"],"than helpful.":["You"],"than in":["many","terms"],"than individually":["folding"],"than inline":["string"],"than it":["could","reduces.","needs","does","should","should","really","needs"],"than it's":["worth","worth"],"than just":["the","yourself","using","the","concise."],"than learning":["it"],"than leave":["a"],"than let":["."],"than loop":["to"],"than making":["the"],"than mine":["-"],"than more":["submissions"],"than my":["translator","initial","first"],"than necessary.":["The"],"than nested":["function"],"than now,":["I"],"than on":["the"],"than one":["argument","second","set","nucleotide?","nucleotide","nucleotide,","place","character"],"than plain":["cond,"],"than putting":["the"],"than questioning":["to"],"than re-seq.":["Again,"],"than reading":["and"],"than really":["using"],"than regex,":["but"],"than resorting":["to"],"than simply":["`(last"],"than sort":["as"],"than sort.":["Nobody"],"than sorting":["-"],"than string":["identifiers,"],"than strings,":["but"],"than take/drop":["and"],"than that":["it","-","it","it","I","which","I","it"],"than that,":["consider","you","you","does","your","looks","this","looks","looks","it","there's","looks","looks","looks","looks","looks","looks","I","this","looks"],"than the":["README","code","single","Java","one","other","prefix","single","nested","previous","regular","reader's:","other.","old","`is-blank`","simple","exact","4th","word","solution","string","one","previous","name","original."],"than this":[":)","one."],"than this!":["I'd"],"than those":["small"],"than to":["break","rely"],"than treating":["the"],"than twice":["as"],"than two":["weeks"],"than uppercasing/comparing":["strings,"],"than use":["`format`","a"],"than using":["Java","-&gt;&gt;?","regular","private","frequencies","`declare`.","`re-matches`?"],"than what":["you","I","I","I","you","I","you"],"than wrap":["another"],"than you":["need","need","need","need."],"thank you":[":)","for","not","for","for","@lindsey"],"thank you!":["I","replaced","The","`reduce-kv`"],"thank you.":["I"],"thankful for":["any"],"thanks :)":["Does"],"thanks Ball":[":)"],"thanks a":["ton"],"thanks for":["the","the","the","the","all","the","the","the","the","your","the","correcting","taking","the","the","the","the","the","the","the","the","showing","tip,","the","the","the","pointing","the","your"],"thanks to":["@rodolfo","@rodolfo","a","your"],"thanks! I":["have","was","so"],"thanks! I'll":["think"],"thanks! however,":["it"],"thanks, I":["didn't"],"thanks, I'm":["aware"],"thanks, `frequencies`":["is"],"thanks, a":["wrong"],"thanks, i'm":["just"],"thanks, you're":["right,"],"thanks. First":["time"],"thanks. I":["was","wasn't"],"thanks. Please":["approve"],"thanks. Switched":["to"],"thanks. Too":["used"],"thanks. What's":["the"],"that \"T\"":["and"],"that \"Whatever\"":["should"],"that \"Whatever.\"":["should"],"that \"feels":["better\"."],"that \"is_\"":["is"],"that 'prefix'":["and"],"that (even":["if"],"that (you":["can"],"that -":["valid-nucleotides","set","`Character/isDigit`","of","snug"],"that 1":["million"],"that 2":["filters"],"that :)":["."],"that :refer":[":all"],"that :require/:refer":["is"],"that \u003ccode\u003e(declare":["...\u003c/code\u003e"],"that Atoms":["don't"],"that Bob":["responds"],"that Clojure":["can","has","has"],"that DRY":["requirement"],"that Googling":["for"],"that I":["should","have","look","was","use","look,","frame","don't","could","forgot","have","agreed","could","was","like","went","can","disagree","can't","got","wanted","tend","had","don't","need","could","you","_know_","wanted","would","didn't","found","like","used","might","take","don't","just","wasn't","had","had","ran","can","would","could","was","would","was","could","will","didn't","think","can"],"that I'd":["like"],"that I'll":["take","probably"],"that I'm":["unaware","explaining","aware","really"],"that I've":["overdone","used","picked","seen","forgot","not"],"that Java":["method"],"that RegEx's":["are"],"that `\"AGC\"`":["is"],"that `(.endsWith":["prompt"],"that `(=":["[1"],"that `(key":["hash)`"],"that `(set":["strand)`"],"that `(str":["\"Go"],"that `=`":["is"],"that `\\W`":["was"],"that ```(=":["\\?"],"that ```.endsWith```,":["by"],"that ```clojure.string/replace```":["is"],"that ```split```":["and"],"that ``frequencies```":["cannot"],"that `clojure.core.frequencies`":["already"],"that `cond`":["is","statement"],"that `contains-lcase-chars`":["was"],"that `count`":["itself"],"that `dna-\u003erna`":["is"],"that `empty?`":["is.","describes"],"that `fn`":["with"],"that `generate-words`":["would"],"that `if`":["returns","would"],"that `is-all-uppercase?`":["says"],"that `join`":["will"],"that `letfn`":["is"],"that `lowerA`":["and"],"that `map`":["acts"],"that `nil`":["and"],"that `seq`s":["are"],"that `set`s":["can"],"that `shouting?`":["can"],"that `split`":["and"],"that `tokenize`":["is"],"that `{:pre":["[...]}`"],"that a":["good","lot","string","particular","string","maintainer","test","function","`case`","list","new"],"that according":["to"],"that adding":["extra"],"that again...":["I"],"that all":["the","alphabetic"],"that allows":["you"],"that already":["exists?"],"that also":["works."],"that an":["uppercased","uppercased","alphagram","unequal","anonymous"],"that and":["could"],"that appears":["to"],"that approach":["sounds"],"that are":["all","*very*","treated","interleaved","not","valid","private","put","not","kind","ambiguous","proper"],"that area.":["`correspondence-to-rna`?"],"that aren't":["ASCII","visible"],"that as":["a"],"that assignment":["myself","yet.","is"],"that at":["least","some"],"that attempt":["this"],"that awesome.":["Sure"],"that bad,":["however"],"that bare":["Java"],"that based":["on"],"that be":["a","practive","better,","better,","a","bad"],"that before.":["I'll"],"that behavior":["is"],"that behavior:":["http://clojure.org/atoms"],"that better":["than","since"],"that big":["of"],"that bikeshedding":[":)"],"that bit":["about"],"that bothers":["me"],"that build":["upon"],"that but":["it","then","I","it","it","it","looking"],"that by":["splitting","exploring"],"that call":["will"],"that came":["up"],"that can":["be","just","improve","examine","be","spare","be","reduce","help","tell","replace","definitely","also","do"],"that carries":["the"],"that case":["it","is","insensitivity","a","the"],"that case)":["-"],"that case,":["what"],"that case.":["Of","You","However,","Other","The","You"],"that case?":["Or"],"that certain":["*types*"],"that change":["as","with"],"that change,":["but"],"that changed":["from"],"that character":["literals"],"that characters":["are"],"that check":["to"],"that checking":["that","that"],"that checks":["for","that"],"that clojure":["Maps","allows"],"that clojure.contrib":["is"],"that closes":["over"],"that code":["is","is","once.","will","later.","like"],"that commas":["are"],"that completely":["avoids"],"that computation":["over"],"that cond":["http://clojuredocs.org/clojure_core/clojure.core/cond"],"that cond.":["Clojure"],"that condition":["I"],"that consideration,":["however"],"that constructor":["invocation,"],"that contributing":["either"],"that convoluted":["validity"],"that correctly,":["you"],"that could":["be","reduce","potentially","replace","be","be","be","be","be","work","be","happen"],"that cover":["the"],"that critical":["and"],"that currently":["the"],"that cuts":["down"],"that dealing":["with"],"that defmethod":["understands"],"that describes":["what","the"],"that determines":["whether"],"that did":["your","not"],"that didn't":["require"],"that dna-seq":["would"],"that do":["not","nothing"],"that does":["your","not","it,","only","what","what","to","the","the","look"],"that doesn't":["match","have","express","seem","use","produce"],"that domain":["in"],"that don't":["change."],"that each":["nucleotide","invokes","of","of"],"that editors":["with"],"that either":["is"],"that eliminating":["that"],"that enables":["1-to-1"],"that encapsulated":["the"],"that enforce":["proper"],"that enough":["of"],"that equivalent.":["Looks"],"that evaluated":["to"],"that every":["line","function,"],"that exactly,":["but"],"that excludes":["candidates"],"that exercise":["as"],"that exercism":["has"],"that explained":["what"],"that explains":["what","that"],"that explicitly":["list"],"that express":["the"],"that expression":["will"],"that extracting":["logic"],"that fact":["to","might"],"that false":["trail"],"that feel":["in"],"that feeling":["like"],"that feels":["like","like"],"that field.":["Or"],"that flow":["more"],"that following":["the"],"that for":["such","me","kicks,","methods"],"that format":["string"],"that frequencies":["is"],"that function":["until","from","literal,","to","out","contains","down"],"that function.":["Well","Looking"],"that functions":["may","and"],"that further":["and"],"that future":["readers","readers"],"that give":["meaningful","you"],"that given":["the"],"that great":["of"],"that had":["a","certain"],"that handles":["just"],"that handling":["str"],"that happens":["to"],"that hard":["to"],"that has":["more","a"],"that hash(A)":["=="],"that have":["very","score-letter"],"that have,":["e.g."],"that he":["can't"],"that helps":["you"],"that hint":["at"],"that his/her":["response"],"that idea":["again"],"that idea.":["Instead"],"that if":["you","I","word","you","we","so.","the","the"],"that ignores":["the"],"that immutability":["with"],"that implements":["an"],"that important":["to"],"that in":["the","shout?","Elixir","your","my","mind.","`anagram?`","the","a","this","my","this","fourth","some","order","mind,"],"that included":["the"],"that initially":["and"],"that input":["is","is"],"that instead":["of","of","of"],"that interferes":["with"],"that interleave":["with"],"that into":["the","function","the"],"that involved":["more"],"that is":["easier","easier","left","not","case","represented","a","obscured","completely","a","as","generally","less","less","less","too","good","how","the","already","a","checked","tested","better","applied","the","duplicated","one","desirable.","tested","thousands","the","the","just","the","just","the","a","in"],"that is,":["the","is"],"that isn't":["just","the","caught","`response-for`.","equilateral"],"that it":["wouldn't","would","is","might","works","limited","looks","would","has","makes","maps","reads","will","flows","didn't","would","looks","is","looks","would","can","would","wasn't","would","makes","is","doesn't","makes","comes","looks","would","doesn't","can","would","is","would","obfuscates"],"that it'":["would"],"that it's":["a","more","more","not","your","the","(probably)","that","worth","easy","not","a","not","some","testing","not","better","clear","single","not","a","just","one"],"that it’s":["way"],"that judgment":[":-)"],"that just":["include","passes","be"],"that language":["does"],"that lead":["me"],"that leaving":["valid-nucleotides"],"that let":["statement."],"that line.":["I'm"],"that line?":["can"],"that little":["syntax"],"that logic":["could","to","is","multiple"],"that look":["interesting.","a"],"that looks":["so","much","good.","nice","much","good."],"that main":["point"],"that mainly":["because"],"that make":["use"],"that makes":["the","their","for","it","it","sense.","sense.","it","the","a"],"that manner.":["The"],"that map":["can"],"that mappings":["change/update"],"that maps":["the","are","can"],"that match":["the"],"that matches":["all"],"that matches.":["Would","Would"],"that may":["help","be","be","be","be","help","look","come","just","be"],"that maybe":["it","the","should"],"that meaning":["regular"],"that means":["\"execute"],"that meets":["one"],"that messes":["things"],"that method":["definition"],"that might":["simplify","be","be","be","be","useful","be","makes","make","be","help","help","simplify","be","be"],"that more":["generic"],"that much":["faster,","shorter,","cleaner","here.","-"],"that multimethods":["are"],"that multiple":["times."],"that must":["be","be"],"that my":["non-public"],"that myself":["in"],"that n1k0":["but"],"that name":["would"],"that names":["should"],"that namespace":["directly:"],"that naming":["things","the","convention"],"that nature":["would"],"that needs":["to","to","explanation.","to"],"that nicely":["for"],"that normal":["clojure"],"that note,":["do"],"that now":["but","\"nucleotide-counts\""],"that nucleotides":["should"],"that obviously":["works,"],"that of":["a","course."],"that on":["their"],"that one":["of","uses","cannot","of","out."],"that only":["one"],"that option":[":)"],"that ordering":["matters?"],"that organization":["of"],"that ought":["to"],"that out":["of","tonight","would","with"],"that out!":[":)"],"that particular":["case","case","case.","context,","use.","test."],"that path.":["A"],"that plays.":["I"],"that point,":["but"],"that possible":["change?"],"that predicate":["functions"],"that predicate.":["Does"],"that protocol":["name","for"],"that provides":["`nil`:"],"that question?":["and","should"],"that range":["of"],"that raw":["strings"],"that re-find":["was"],"that really":["matters","irks","bothers"],"that refactoring":["at"],"that references":["a"],"that regard":["-"],"that relying":["on","solely"],"that representation":["will"],"that require":["can"],"that requiring":["the"],"that return":["a","booleans","value","booleans","a","booleans"],"that returns":["if","boolean.","a","an","a","a","a"],"that reversed.":["How"],"that reversing":["them","the"],"that route":["you'll"],"that saves":["you"],"that seemed":["to","harder"],"that seems":["excessive"],"that seq-to-rna":["is"],"that set":["(or","-"],"that shorthand":["and"],"that should":["be","probably","be","make","be"],"that shout?":["is"],"that silence":["has"],"that simple":["if"],"that since":["it"],"that slipped":["by"],"that snippet":["directly"],"that someone":["who"],"that sort":["also","of","of"],"that splitting":["function"],"that starts":["with"],"that stay":["the"],"that string":["can","may"],"that strings":["are","alone","are","count"],"that strong":["so"],"that style":["of"],"that submitting":["a"],"that such":["would"],"that symbols":["and"],"that takes":["a","1","2"],"that temporary":["variable"],"that terribly":["important."],"that tests":["to","for","the"],"that that":["mappings","logic","really","would"],"that the":["latter","`(sort","submission","code","'?'","constants","intention","first","stuff","problem","two","square","more","recursion","counts","caller","input","message","argument","tests","last","base","response","new","initial","code","name","whole","range","function","bindings","highest","third","counts","goal","requirements","from","name","only","library","public","message","input","order","extra","lack","alphanumeric","public","usage","same.","person","admittedly","order","`let`","requirements","fact","candidates","partial","logic","code","code","`example.clj`","message",":require","pre","intent?","input","changes","source","input","tests","whole","reader","semantics","names","whole","entire","functions","regex","only","step","final","lets","condition","board-string","function","string","logic","generic","literal","DNA","only","robot","tests"],"that their":["meanings","order","order"],"that there":["are","must","seems",":)","was","must","is","are","aren't","is"],"that there's":["a","any"],"that these":["methods"],"that they":["create","don't","return","apply","have","deem","are","end"],"that they're":["not","equivalent","not","equivalent."],"that this":["sorts","code","does","could","was","was","stuff","would","very","method","implementation","got","little","is","could","function","recomputes","is","is"],"that threading":["is"],"that thymine":["is"],"that to":["be","the","simplify"],"that too":["now."],"that tool":["at"],"that typing":["\".\""],"that ugly":["`re-seq`"],"that up,":["thanks!"],"that use":["case.","string's","and"],"that useful":["here."],"that uses":["this","the","a"],"that using":["the","more","`frequencies`","them","`xs`","`re-seq`","sort","a","a"],"that value":["in"],"that values":["are"],"that vars":["are"],"that very":["much.","readable."],"that was":["in","supposed","not","made","my","inattention","a"],"that wasn't":["caught"],"that way":["you","you","of","because","a"],"that way,":["but"],"that way.":["It"],"that way.\"":["as","as"],"that way.',":["teenager.hey(nil)`"],"that way...":["maybe."],"that we":["are"],"that well":["explained"],"that were":["new","readily"],"that what":["was","they","you"],"that when":["interleaving","you","their","their"],"that where":["Clojure"],"that which":["I'm","isn't","I"],"that whitespace":["and"],"that whole":["function"],"that will":["recognize","fall","make","do","still","give","make","cover","make"],"that without":["a","sacrificing"],"that won't":["change"],"that work":["with"],"that worked.":["I'll"],"that works":["the"],"that would":["be","reveal","be","flow","let","flow","return","return","be","work,","work?","help","steer","suggest","have","make","be","result","work","allow","force","allow","make","allow","be","be","allow"],"that writeup":[":)"],"that yes,":["a"],"that you":["meant","can","use","to","can","don't","took","don't","moved","extract","can","can","can","have","can","have","can","can","can","really","thought","don't","can","have","can","can","have","can","*could*","managed","wanted","would","used","gave","may","preemptively","can","can","rely","don't","don't","are","are","don't","potentially","can","can","want","want","mean?)","managed","are","could","have","know","or","have","don't","don't","don't","don't","don't","can","have","included","could","have","referenced,","needed","only","could","know","could","could","can","don't","used","might","could","used.","can","can"],"that you'd":["talk","ever"],"that you'll":["never"],"that you're":["trying","calling","calling","NOT","attempting"],"that you've":["already","defined","split","meant"],"that your":["```shouting?```","methods","words","helper","reader","`cond`"],"that yours":["is"],"that! Now":["that"],"that! That's":["what"],"that\" (meaning":["that"],"that'd be":["a"],"that'd convince":["me?"],"that'll make":["this"],"that's a":["good","very","matter","nice","matter","bit","bad","matter","good","good","matter","lot"],"that's all":["I"],"that's all.":["Good"],"that's an":["option.","incredibly"],"that's both":["DRY"],"that's clearer":["than"],"that's clearly":["a"],"that's enough":["to"],"that's entirely":["optional."],"that's expressive":["AND"],"that's fine":["by"],"that's fine,":["but"],"that's good":["to"],"that's helpful!":["Happy"],"that's how":["it"],"that's in":["all","the","the"],"that's it,":["you"],"that's just":["me.","preference,","a","minor,","because","my","the"],"that's mainly":["mater"],"that's more":["inline"],"that's necessary?":["I"],"that's not":["clear,","the","that"],"that's nothing":["obligatory.","obligatory."],"that's only":["used"],"that's possible":["because"],"that's possibly":["down"],"that's pretty":["pointless.","much"],"that's probably":["in","just","(more"],"that's rather":["personal"],"that's really":["helpful.","up"],"that's seems":["like"],"that's solid.":["Waiting"],"that's the":["intent)","usual","way"],"that's true":["in"],"that's true,":["I've"],"that's trying":["to"],"that's unnecessary":["overhead."],"that's used":["by"],"that's very":["useful","helpful."],"that's what":["keeps","the","they","you","you"],"that's why":["I","I","I"],"that) but":["obviously"],"that), the":["(fn"],"that). There's":["a"],"that, I":["don't","accidentally","don't","think","don't","decided"],"that, I'm":["not"],"that, and":["the","I"],"that, as":["I"],"that, but":["I'm","then","then","your","it"],"that, consider":["breaking"],"that, defining":["named"],"that, does":["`sanitize-string`"],"that, given":["target"],"that, have":["you"],"that, having":["the"],"that, it":["would"],"that, it's":["actually"],"that, just":["understood"],"that, like":["the"],"that, looks":["good.","good.","good.","good.","good.","ok.","good.","fine.","fine","great"],"that, naming":["is"],"that, or":["is"],"that, thanks":["for","for"],"that, there's":["also"],"that, this":["looks","looks"],"that, would":["I"],"that, you":["get","get","Clojure","can","don't"],"that, your":["solution"],"that. Also,":["there's"],"that. But":["since"],"that. Could":["you"],"that. Didn't":["come"],"that. Everything":["looks"],"that. I":["am","haven't","like","did","do"],"that. It":["looks"],"that. Looks":["good"],"that. My":["test"],"that. Other":["than"],"that. Plus":["it"],"that. Similarly":["`q?`"],"that. Some":["prefer"],"that. Thank":["you."],"that. Thanks":["for"],"that. This":["whole"],"that. We've":["been"],"that. Yes,":["it"],"that. You":["could"],"that. `beer/verse`":["still"],"that. i":["love"],"that... is":["I'm"],"that? Thanks":[":)"],"thats why":["the"],"that’s a":["very"],"that’s very":["helpful"],"the \".add\"":["method."],"the \".roll\"":["method"],"the \"4?\"":["comment."],"the \"99":["bottles\"","bottles...\""],"the \"=\"":["function."],"the \"?\"":["or","as"],"the \"Go":["to"],"the \"T\"":["and","and"],"the \"\\n\"":["on"],"the \"base":["case\""],"the \"case\"":["statement"],"the \"combine\"":["logic,"],"the \"comparable\"":["value."],"the \"constants\"":["above"],"the \"dead\"":["comments"],"the \"default":["value\""],"the \"default\"":["via"],"the \"frequencies":["of"],"the \"frequencies\"":["function","function;","function","function."],"the \"includes-letters?\"":["function"],"the \"insane\"":["route,"],"the \"into":["[]\""],"the \"is\"":["prefix,"],"the \"less":["code\""],"the \"let\"":["accomplishes"],"the \"letters\"":["from"],"the \"magic":["letters\"."],"the \"more":["obvious"],"the \"most":["constant\""],"the \"not":["lowercase\""],"the \"parse\"":["logic"],"the \"proper\"":["syntax"],"the \"recognizes":["acronyms\""],"the \"replace":["sort"],"the \"slow\"":["version"],"the \"step\"":["which"],"the \"step\",":["so"],"the \"thread":["last\"","first\"","first\""],"the \"threaded\"":["version"],"the \"use\"":["statement"],"the \"why\"":["of"],"the \"wildcard":["match\""],"the #()":["notation"],"the #(…)":["special"],"the #{a":["b"],"the %1,%2":["shorthand."],"the '?'":["or"],"the 'story'":["of"],"the (+":["1","1"],"the (.endsWith)":["call"],"the (:require":["[library"],"the (fn":["[[]])"],"the (pesky)":["requirement"],"the (quite":["varied)"],"the (sub)intentions":["of"],"the **#\"...\"**":["macro"],"the **Refactor":["Conditionals"],"the *admin":["validation"],"the *intent*":["of"],"the *step*.":["Using"],"the *what*,":["but"],"the *why*":["from","of"],"the *why*.":["You"],"the -&gt;":["macro"],"the -\u003e":["macro."],"the -\u003e\u003e":["macro).","macro.","macro.","macro"],"the .get":["functions"],"the .toUpperCase":["java"],"the 1,":["2,"],"the 2":["map"],"the 3":["conditions","4"],"the 4th":["unit","submission"],"the 80":["characters"],"the ::":["restricts"],"the :default":["dispatch"],"the :pre":["assertion","condition"],"the :refer-clojure":["clause"],"the :require":["inside","should"],"the :use":["in","option"],"the \u003ccode\u003e#\u003c/code\u003e":["shorthand"],"the \u003ccode\u003e#pattern\u003c/code\u003e":["macro"],"the \u003ccode\u003e:use\u003c/code\u003e":["or"],"the ?":["in","but"],"the A":["character."],"the API":["boundaries","is"],"the ASCII":["values","value"],"the AssertionError":["if"],"the Atoms":["is","is"],"the Calendar":["object,","class","documentation"],"the CharSequence":["Interface"],"the Character":["functions"],"the Clojure":["version.","community.","docs","community","solutions","community,","way.","Cheatsheet","list","style","cheatsheet:","ecosystem.","cheatsheet","community","APIs.","compiler","function","version","exercises.","string","code","builtin"],"the DNA":["nucleotides","atoms","string","and","problems","was","sequence,"],"the Date":["object"],"the Elixir":["example."],"the Foray":["crowd"],"the Haskell":["exercises"],"the IO":["boundary,"],"the Integer":["conversion."],"the JVM":["doesn't","doesn't"],"the JVM,":["such"],"the JVM.":["I've"],"the Java":["integration","API,","API","underlying.","API.","API,","methods.","well","API",".toLowerCase","interop,","interop","documentation","standard","stuff","String","methods","Calendar","calendar","number","Calendar","Calendar"],"the JavaScript":["and"],"the Javascript":["trail.","trail"],"the Maps":["section.","section"],"the Protocol.":["The"],"the Python":["case,"],"the Queens":["are"],"the README":["file,","/","(\"yelling\"),","and","so","again."],"the README.":["Plus","The","It's"],"the README...":["perhaps"],"the README.md":["file"],"the REPL":["I"],"the REPL,":["please"],"the RNA":["transcription","and"],"the Readme.":["Now"],"the Repl.":["The"],"the Ruby":["&amp;"],"the Seq":["functions?"],"the String":["import","method"],"the String#endsWith":["method"],"the T":["and","and","and","with"],"the T's":["with"],"the Unexpected":["Input"],"the WIP":["for"],"the [Clojure":["style"],"the [`Classname.`":["special"],"the [`Threading":["macro`](http://clojuredocs.org/clojure_core/clojure.core/-%3E)."],"the [`upper-case`](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/upper-case)":["function","function"],"the [anonymous":["function"],"the [coding":["standard](http://dev.clojure.org/display/community/Library+Coding+Standards))"],"the [condition":["map"],"the [format](http://clojuredocs.org/clojure_core/clojure.core/format)":["function."],"the [frequencies](http://clojuredocs.org/clojure_core/clojure.core/frequencies)":["function."],"the [nth](http://clojuredocs.org/clojure_core/clojure.core/nth)":["function."],"the [thread-last":["macro](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E)"],"the \\?,":["possibly"],"the `#(…)`":["special"],"the `(:require":["...)`"],"the `(\u003e":["(count","x"],"the `(apply":["...)`","str"],"the `(first":["sentence)`"],"the `(into":["{}"],"the `(not":["any-...)`."],"the `(ns":["…)`,"],"the `(reduce":["concat"],"the `(remove":["str/blank?)`?","blank?)`"],"the `(remove-non-word-chars":["s)`"],"the `(reverse...`":["logic"],"the `(seq":["dna)`"],"the `(sort":["source)`"],"the `*-response`":["vars,"],"the `+`":["quantifier"],"the `-\u003e\u003e`":["operator"],"the `-\u003e`":["or"],"the `-›`":["or","or"],"the `-›`or":["`-››`"],"the `.*`":["in"],"the `...teenth`":["functions"],"the `.endsWith`":["I"],"the `.endsWith`,":["that"],"the `:as`":["option"],"the `:else`":["tip."],"the `:ignored`":["check"],"the `:only`":["bit."],"the `:pre`":["condition"],"the `:require`":["helper","form","namespace"],"the `:require`,":["but"],"the `:use`":["construct"],"the `=`":["function"],"the `?`":["idiom"],"the `String`":["objects."],"the `[dna]`).":["Also,"],"the `\\T`":["and"],"the `^:private`":["annotation."],"the ```(:require":["...)```"],"the ```-&gt;&gt;```":["operator"],"the ```-\u003e\u003e```":["operator"],"the ```.endsWith```":["method."],"the ```blank?```":["function"],"the ```clojure.string```":["library."],"the ```cond```":["special","into"],"the ```defn-```":["function."],"the ```dna-nucleotide```":["function"],"the ```frequencies```":["function!","function?"],"the ```is-empty?```":["and","function."],"the ```merge```":["which"],"the ```replace-thyamine-with-uracil```":["function."],"the ```statement```":["instead?"],"the ```str/replace```":["sexp"],"the ```str```":["function"],"the ```to-rna```":["function.","function."],"the ```upper-case```":["function"],"the ```yelling?```":["and"],"the `add-frequency`":["function?"],"the `all-upper?`":["predicate."],"the `alphagram`":["method","for"],"the `anagram-match?`":["`let`"],"the `anagram?`":["function,"],"the `anagrams-for`":["function"],"the `and`":["one","although"],"the `and`)":["and"],"the `and`-ed":["predicate","predicate"],"the `any-word-pattern`":["binding"],"the `apply`":["usage,"],"the `assert`":["function","function","function?","function","function.","is","function.","function","function"],"the `assingment`":["word"],"the `binary-number`":["string"],"the `blank?`":["and"],"the `bob`":["namespace?"],"the `body`":["part"],"the `build-finder`":["function."],"the `case`":["might"],"the `clean-phrase`":["function,"],"the `clean`":["function"],"the `clojure.core`":["namespace,"],"the `clojure.string":["namespace`"],"the `clojure.string/`":["in","parts"],"the `clojure.string`":["namespace.","namespace","namespace","namespace","namespace","prefixes","prefixes","functions","functions","namespace","repetition.","prefix"],"the `concat`":["in"],"the `cond`":["tests","responses","don't","in","form.","branches,","form","I","tests","very"],"the `cond`,":["you","the","but"],"the `conj`":["in"],"the `contains?`":["which"],"the `convert_number`":["and"],"the `core`":["functions"],"the `default-nucleotide-counts`":["and"],"the `defn-`":["body"],"the `defn`":["function"],"the `defn`s":["for"],"the `dissoc`":["to"],"the `dosync`":["transactions"],"the `drop`":["and"],"the `else`":["condition"],"the `ends-with-question-mark?`":["`silence?`"],"the `endsWith`":["case."],"the `example.clj`":["still"],"the `filter`":["phase.","is"],"the `for`":["form."],"the `format`":["function"],"the `frequencies`":["function?","line","function","function.","implementation.","function","function","function,"],"the `get`":["is","in","from"],"the `grade`":["function."],"the `if`":["statement","into","inside","conditional.","semantics","form","conditional?"],"the `if`s":["in"],"the `in?`":["function."],"the `into`":["and"],"the `intro/outro`":["split"],"the `is-`":["naming","prefix"],"the `is-blank`":["check."],"the `is-question`":["check?"],"the `is-yelling?`":["case."],"the `last-letter`":["binding"],"the `last`":["thing"],"the `let`":["form?","in","in","form","binding","closure","around","is"],"the `letfn`":["form","usage"],"the `letters`":["function"],"the `loop`..`recur`":["structure"],"the `lower-case`":["call"],"the `make-comparable`":["returning"],"the `map`":["function"],"the `map`.":["Am"],"the `merge`":["call"],"the `name-seed`":["atom"],"the `new`":["operator"],"the `nil-to-zero`-function.":["Seems"],"the `nil`":["and"],"the `normalizations`":["function;"],"the `not-any?`":["function"],"the `not=":["nil`"],"the `not=`":["operator?","and"],"the `not`":["and"],"the `ns`":["macro,","macro","macro","macro.","options.","macro.","declaration.","macro","macro,","expression","to"],"the `ns`.":["You"],"the `nucleotides`":["function"],"the `numbers-only?`":["condition"],"the `on-planet`":["function."],"the `partial`":["function","function","idiom,"],"the `plural`":["function"],"the `pluralize`":["function","function"],"the `pow`":["function"],"the `pretty-print`":["function"],"the `put-name`.":["Possibly"],"the `question?`":["function?","and"],"the `range`":["call."],"the `recur`":["call","special"],"the `reduce`":["/","/"],"the `remove":["empty?`."],"the `replace`":["method."],"the `require":[":as`"],"the `require`":["statement","and"],"the `require`,":["that"],"the `require`s":["in"],"the `response-for`":["functinon,","function","function","function:","method.","function.","method","down","a"],"the `response-for`.":["You"],"the `robot-name-generator`.":["Since"],"the `s`":["variables"],"the `same-characthers?`":["method."],"the `sentiment`":["from"],"the `seq`":["is","on","call"],"the `seq`s":["in"],"the `shouting?`":["predicate","condition,"],"the `silence?`":["check"],"the `silence`":["function."],"the `silent?`,":["`shouting?`"],"the `sing`":["function."],"the `sorted-lowered`":["back"],"the `sorted-school`":["test?"],"the `sorted`":["function"],"the `statement?`":["function"],"the `str/`":["prefix"],"the `string/split`":["bit,"],"the `string`":["namespace?"],"the `subs`":["function,","function"],"the `swap!`":["with"],"the `target`":["along"],"the `this`":["as"],"the `thyidine?`":["private"],"the `transcribe`":["method","function,"],"the `true-anagram?`":["with"],"the `true`":["branch"],"the `type-responses`":["map."],"the `update-in`":["function."],"the `upper-case`":["function"],"the `use`":["or"],"the `valid-nucleotides`":["var"],"the `valid-triangle?`":["function"],"the `validate`":["method"],"the `vec`":["is","was"],"the `verse`":["function.","method,","method,"],"the `verse`.":["I"],"the `when`":["functions."],"the `word-count`":["contract,","function."],"the `word`":["once","argument","to","argument"],"the `words`":["function?"],"the ability":["to","to","to"],"the above":["so"],"the above.":["I"],"the absence":["of","of"],"the accepted":["input"],"the accidental":["assignment"],"the acids":["that"],"the action":["to"],"the actual":["```map```","translation","translation."],"the added":["benefit","benefit"],"the addition":["of"],"the additional":["level","regex","scenario","test"],"the admittedly":["subtle"],"the advantage":["of","of","of"],"the advice":["@gerald!","to","on","from"],"the advice,":["it's"],"the advice.":["This","I'm"],"the algorithm":["and"],"the alphabets":["for"],"the alphagram":["of","for","is","of"],"the alphanumeric":["characters"],"the amount":["of","of","of","of","of"],"the anagram":["assignments","checking"],"the analysis":["conditions"],"the anonymous":["`fn`","functions.","function,","function","function,","function","function","function","function"],"the answer":["to","to","here"],"the answers":["in"],"the api":["generation","generation"],"the approach":["of"],"the approach.":["Never"],"the appropriate":["behavior","string.","use","response,","function"],"the area":["code"],"the args":["when","vector","should","on"],"the argument":["list","don´t","for","name","name","shouldn't","`g`","list.","`[[value","array.","vector","vector","lists","for","vector.","name","to","in","passed","passed","through"],"the argument?":["Must"],"the arguments":["expected","vector.","list","through"],"the arguments,":["you"],"the arguments.":["I"],"the arity":["needed."],"the ascii":["range"],"the ass,":["but"],"the assert":["error.","is"],"the assignment":["was"],"the assignments":["is"],"the assumption":["the"],"the atom":["as","to","being","being","inside","usage."],"the atom.":["Although"],"the author":["and"],"the authoritative":["style"],"the awesome":["feedback!","advice!"],"the back":["of"],"the bad":["guy"],"the bare":["characters"],"the base":["word","word","hash","word","`word`"],"the basics":["would"],"the basis":["function"],"the beginning,":["`rev-subs`"],"the beginning..":[":P"],"the behavior":["implied"],"the behaviour":["should"],"the benefit":["of","is","of","of","of"],"the benefits":["of","were"],"the best":["choice,","names?","idea","I","answer","way","choice","solution","way","way","link","with","parameter"],"the better":["choice.","choice","way","solution."],"the big":["`and`","advantage"],"the bill":["perfectly,"],"the bin-digit":["inside"],"the binding":["name).","of","form)."],"the bindings":["of","could","list"],"the bindings'":["values"],"the bit":["about"],"the blank?":["method."],"the board":["with","with","representation"],"the board-string":["and"],"the bob":["exercise","namespace","exercise","namespace"],"the body":["of","of","of","of","at","of"],"the book":["\"The"],"the books":["I"],"the boolean":["values","methods."],"the borderline":["for"],"the bottle":["phrase"],"the bottleneck":["has","here."],"the bottles":["and","of"],"the bound":["expr"],"the box":[":)"],"the box,":["however"],"the bracket,":["my"],"the branches":["from","more"],"the break":["with"],"the brute-force":["approach"],"the build-finder":["inside"],"the building":["of"],"the built-in":["last","`last`","`str`","`frequencies`","count"],"the bulk":["of","of"],"the business":["requirements"],"the call":["stack","stack","on","to","to","to","with","to","to","to","to"],"the caller":["is","if"],"the calls":["to","to","to","to","to","to"],"the candidates":["have"],"the cascade":["of"],"the case":["in","-","of","statement","statement","where","where","of"],"the case)":["-"],"the case,":["you'd"],"the case.":["I'd"],"the cases":["that","that"],"the catch-all":["in"],"the category":["of"],"the chain":["of","returns"],"the chaining":["from"],"the challenge?":["How"],"the change":["but","in"],"the changes":["occur","for"],"the char":["literal","to","(which","is"],"the character":["quicker?","representation,","to","code","literals"],"the characters":["so","mean.","\\T","to","with","as","in","instead","in","though?"],"the check":["for","than","for","for"],"the checks":["against","against","would","into","more","in","are"],"the choice":["of","of","of","between"],"the chunks":["*feels*"],"the chunks,":["you"],"the clauses":["with","of","nicely."],"the clean":["structure"],"the cleanest":["way"],"the cleanse-phone":["is"],"the cleanup":["process."],"the clearest":["to","to"],"the clojure":["idioms.","style","exercises","code","koans"],"the clojure's":["convention."],"the clojure.string":["module","require.","prefixes","namespace"],"the clojure.string/":["part"],"the clojure.string/split":["function."],"the closing":["`)`","parens","bracket","parens","parenthesis","parenthesis","parentheses","parens","parens","parens."],"the closure":["and"],"the closure,":["I"],"the clutter":["in","in"],"the code":["behaves","clearer.","I","when","clearer.","now","a","accordingly","as","as","doesn't","much","?","to","is","carefully.","look","to","-","harder","less","is","here","a","crystal","better","a","is","a","and","reads","determine","that","extremely","accordingly.","would","so","I","-","-","is","would","more","for","can","back","written.","in","greatly","greatly?","I","should","more","small","100%","concise.","first.","to","from","drops.","less","more","terribly","more"],"the code's":["readability"],"the code,":["as","to","that's","and","however,"],"the code.":["Also,","I've","I","Small","What","Thanks"],"the code...":["I'll"],"the code?":["If"],"the combination":["of"],"the commandline":["as"],"the commas":["in","because"],"the comment,":["but"],"the commented":["out"],"the comments":["was"],"the comments,":["to","@madelyn!"],"the common":["practice"],"the community":["in","[Clojure","standard"],"the community,":["so","as"],"the community:":["https://github.com/bbatsov/clojure-style-guide"],"the comparable":["value","word","word)"],"the comparison":["into","with","inside","inside"],"the compiler)":["to"],"the complement":["of"],"the complexity":["does","of","of"],"the components":["of"],"the composability":["of"],"the computation":["will"],"the concerns":["here.","of"],"the concise":["nature"],"the conclusion":["that"],"the cond":["form.","docs","with","before.","so,","ordering","order","but","expression","in","block","is.","take","clearer","with","tests.","to","would","is"],"the cond).":["Perhaps"],"the cond-part":["on"],"the cond.":["I"],"the condition":["predicates","map","to","and","and"],"the conditional":["methods","logic?","logic","logic","logic","logic","logic","logic?","and","in"],"the conditionals":["into","better","into","spans"],"the conditions":["off","out","into","to","need","inside","in","in","to","into","into","in","you","into","that","for"],"the conditions.":["What","The"],"the conds":["in"],"the connection":["to"],"the consequent":["clause"],"the constant":["is","is","first","strings"],"the constants":["should","thymine","`\"T\"`"],"the constants,":["literals"],"the constraints":["`Calendar`"],"the consumer":["of"],"the contained":["cond."],"the contains":["was"],"the contains?":["since"],"the content":["of"],"the context":["of","of","of","of","right,","of","close.","of","(external","of","here","of","of"],"the control":["flow;"],"the convention":["for","to"],"the conversion":["into","in","to"],"the coordinates":["or"],"the core":["library","library","library.","function"],"the correct":["form","element.","format?","response"],"the cost":["at","is","of","of"],"the count":["of"],"the counting.":["I"],"the counts":["map","returned","there."],"the course":["of"],"the current":["`question?`","problem.","solution","context","code","value","set","value","values"],"the currently":["*assigned*"],"the customer":["is"],"the data":["are","we're","structures","in","is","using","and"],"the data-driven":["approach"],"the declaration":["directly"],"the declarations":["in","to"],"the declarative":["nature"],"the decompose":["function"],"the decoupling":["of"],"the deep":["domain"],"the default":["response,","but","behavior","behavior","response.","is","should","map","value"],"the definition":["of","of","of","of"],"the definitions":["of"],"the definitive":["accepted"],"the defn":["on","for"],"the defn.":["So"],"the defns":["consistent.[1]"],"the degree":["of"],"the delay.":["Thanks"],"the delimiter)":["which"],"the dependencies":["are."],"the descriptions":["of"],"the details.":["This"],"the difference":["between","between","between"],"the difference.":["Awesome"],"the difference?":["I"],"the differences":["between"],"the different":["levels"],"the discussions":["at"],"the display":["of"],"the distinct":["sides"],"the distinction":["between"],"the dna":["without","strand.","strand","strings","string"],"the dna-rna-map":["which"],"the doc":["string,","string"],"the docs":["on","(http://clojuredocs.org/clojure_core/clojure.string/blank_q),","for","and"],"the docs,":["I","\"Use"],"the docs.":["Characters"],"the docstrings":["from"],"the documentation":["would","for"],"the domain":["language","language","that","(a","(how","(how","word","to","helps","better:","(which","of","terms","terms","that","construct.","are"],"the domain's":["relation"],"the domain,":["would"],"the domain.":["(Most)","Would","Bob"],"the dot":["notation"],"the double":["call","call","negation,","negation","negation,"],"the downside":["is"],"the drill.":["I"],"the dry":["approach."],"the duplicate":["`if`."],"the duplication":["of","of"],"the duplication,":["but"],"the edge":["case."],"the effort":["to"],"the element":["if","at"],"the elements":["to"],"the elixir":["exercises,"],"the else":["clause","case.","case.","clause"],"the embedded":["code"],"the empty":["string","string.","count","string.","check","regex?","string","case","string"],"the empty/nil":["atom"],"the encapsulation":["worth"],"the encoding":["of"],"the encolsing,":["lexical"],"the end":["of","of","bracket","of","of","of","of","of","decided","of","of","seems","of","of","of","of","they"],"the end,":["agreed","it","but","it's"],"the end.":["So"],"the ending":["parens"],"the ends":["of"],"the enlightment,":["I"],"the entire":["message?","`clojure.string`","namespace","string","library","clojure.string","string","string.","string","input"],"the equality":["check","of"],"the evaluation":["of"],"the exact":["implementation.","opposite","words."],"the example":["solution","in","in","and"],"the example,":["but"],"the example.":["Things"],"the examples":["just","given"],"the excellent":["advice,"],"the exception":["with","is"],"the excluded":["core"],"the execution":["to"],"the exercise":["has.","just","uses","really","in","specifies","is).","in","to"],"the exercise.":["Instead"],"the exercises":["in"],"the existence":["of"],"the existing":["predicates.","functions"],"the expected":["result","input"],"the explicit":["use"],"the express":["purpose"],"the expression":["inside","doesn't"],"the expressions":["in","is"],"the expressiveness":["of","of"],"the extra":["function,","line.","`in-range`","check","checks","glue","complexity"],"the extra-clarity":["of"],"the extremely":["unlikely"],"the eyes,":["but"],"the fact":["that","that","that","that","that","that","that","that","that","that","that","that","that","that","that","that","(based","that"],"the factor":["check"],"the feature":["can"],"the features":["of"],"the feed":["back"],"the feedback":["I've","I","@dexter!","from","@amani.","@evie.","on","on","geoff.","anyway!","is"],"the feedback!":["I"],"the feedback,":["in"],"the feedback.":["Much","I'm","I've","I","I","This","Very","I","It's","I","I","What's","Both"],"the fence":["between","about","here."],"the fence.":["What"],"the file":["before","starting","but"],"the file.":["Makes","It's"],"the filter":["function","function!","function","into","predicate."],"the final":["condition.","line","statement","result."],"the first":["word","argument.","argument","position","time","example","thing","level?","thing","applicable","Clojure","one","rule","or","word","one","part","expression.","try","value","match","argument,","one.","rule","word...","thing","item","parameter.","regular","non-nil","example","submission,","argument","that","that","iteration,","option,","times","argument","argument","test,","draft,","time.","batch","program?","Clojure","on","two","one","uppercase","form","two","one","one","solutions","rev...","4","bit","time","value,","in"],"the flow":["of","in","was"],"the fn":["body","shorthand"],"the following":["line.","discussion","name","NS","results:","snippet"],"the for":["comprehension.","in"],"the forceful":["case"],"the forest":["for"],"the form":["in"],"the format":["string","string"],"the formatting":["to","issues.","code"],"the formatting.":["It"],"the former":["readers","one"],"the forms":["to","in"],"the four":["test"],"the frequencies":["OF"],"the frequencies/alphagram":["of"],"the frequency":["of","to"],"the from":["a"],"the front":[":)"],"the full":["implications","implications","string,","string","song.","song."],"the fully":["qualified"],"the fun":["of"],"the function":["generator.","since","name,",".","`response-for`.","I","multiple","question2","names","names","much","in","definition","domain","can","names","is","body","given","from","anymore.","arguments","except","is","definition,","you","itself.","in","is","name","does.","should","inside","name","of","responsible","in","name.","was","multiple","`string-\u003esorted-chars`,","where","precondition","descriptions.","call","**to-rna**.","makes","expects","declation","name","definitions","name","read","to","more","passed.","descriptions","returns","passed.","itself.","executed,","does,","like","checks."],"the function's":["docstring,"],"the function,":["though."],"the function.":["In","This","In"],"the function?":["Maybe"],"the functional":["style","paradigm"],"the functionality":["of"],"the functions":["you're","applied.","only","within","from","you've","you've","you've","should","to","once","from","get","among","with","e.g.","provided","I","non-public","body","to","instead","instead","from","are","in","be","using","come","like","and","as","it","the"],"the functions,":["and"],"the fuss.":["I"],"the future":["--"],"the future,":["this"],"the general":["purpose","`coll`."],"the general/default":["case.)"],"the generators":["as"],"the generic":["Collections"],"the gentle":["kick."],"the given":["`word`","algorithm","tests,","tests)","order.","parameter","function.","index.","key.","unit"],"the goal":["is","of"],"the golf":["qualities."],"the good":["stuff","function"],"the great":["tips!"],"the greater":["clarity"],"the guard":["before"],"the guideline":["for"],"the guidelines":["on"],"the guts":["of"],"the habit":["I’ve","of","of","of"],"the hack":["```"],"the hang":["at"],"the hanging":["paren,"],"the hash":["of","of","in"],"the heads":["up,"],"the heck":["it"],"the hell":["out"],"the help":["of","of","of","of","with"],"the help.":["Updating"],"the helper":["functions","functions.","functions","forms.","functions","functions","functions","functions","functions","for"],"the helpers":["should","from","public.","below"],"the higher":["level"],"the higher-level":["concept"],"the highest":["level"],"the hint":["with","with"],"the hints":[":)"],"the histogram,":["but"],"the hope":["that"],"the horse,":["but"],"the idea":["we","of","of","is","of","of"],"the idea.":["It"],"the ideal":["order"],"the ideia,":["make"],"the idiomatic":["predicate","Closure?","`s`.","part"],"the if":["statement.","statement","is","check"],"the if-soup.":["I"],"the impetus":["to"],"the implementation":["so","down","is","which","of","of","is","and","details","of","of","of","in","code","detail,","a","a","of"],"the implementation,":["not"],"the implicit":["set","equality."],"the import":["and"],"the inbuilt":["blank?"],"the include":["to"],"the incoming":["number"],"the indentation":["for"],"the indentation,":["I"],"the individual":["logic","checks","nucleotides","characters","characters","conditions","function","words"],"the infinite":["prime"],"the info":["on","in"],"the information":["@corine.","in"],"the initial":["word","string","word","data","word"],"the inline":["comment"],"the inner":["function"],"the input":["is","message","message","into","checking","string","checking","text","validation","domain","to","string.","word","for","twice","was","with","word","types.","`word`","word","string","and","is","to","and","validity","are:","actually","string","validation","validation","validation","prior","string","before"],"the input,":["you'll","you","you"],"the input.":["Also,","You"],"the input?":["the"],"the inside":["out"],"the insight.":["`clojure.core/filter`"],"the instructions;":["if"],"the intended":["character"],"the intent":["is.","clearer.","of","the","of","here","less","of","more","more","better.","of","more","more","clearer.","would","of","explicit.","of","of","of","of","clearer.","a","of","of","is"],"the intent.":["Which","Besides","As"],"the intention":["is","of","of","better."],"the intention-revealing":["names."],"the intention.":["I'd"],"the interleaved":["map"],"the intermediate":["`let`"],"the interwebs...":["thanks!"],"the invalids":["string"],"the is-":["prefix"],"the isYelling":["test"],"the issue":["of"],"the java":["method","`toLowerCase`","version","function.","Calendar"],"the java.util.Calendar":["to"],"the javascript":["track;","beer-song"],"the job":["which","done.","as"],"the job,":["like"],"the join":["at"],"the jump":["to"],"the key":["you","is","is"],"the keys":["of","of"],"the keyword":["`:else`","`:else`,","usage","to"],"the keywords":["clarifies","are","\"dna\","],"the kind":["of","of","of","words,"],"the knowledge":["of","of"],"the lack":["of"],"the lambda":["with","and"],"the language":["goes","of","of","I've","itself,"],"the language,":["that's","I"],"the language.":["This"],"the last":["element","whereas","line.","line","argument","position","line","character","line","character","character","two","character","chacacter","character","character","pair.","line","parenthesis","binding","element","time","form","character","time","character","two","line","character","/non-whitespace/","comment","character:","ten","character","line","element","line","character.","character","line","point","week,","line","4","version,","function","value","day","7","expression","element.","argument"],"the last.":["No"],"the later":["`anagram?`"],"the latest":["character"],"the latter":["form","seemed","comes","returns","-"],"the latter,":["too."],"the law":["but"],"the layer":["of"],"the lazy":["sequence"],"the lcase":["condition."],"the length":["of","of","of","of","twice?","of","once.","twice","of","of","of"],"the let":["and","but","for","block)","binding","value","form","makes","is"],"the let.":["e.g."],"the lets":["containing"],"the letter":["of","(`%`)"],"the letters":["sorted","are"],"the level":["of","of"],"the levels":["of"],"the library":["functions","version","`core.match`?"],"the limited":["context"],"the line":["after.","above.","breaks","which","after"],"the link":["to"],"the list":["must","into","of","of"],"the lists":["which","and"],"the literal":["with","(if","syntax","syntax"],"the literal\"":["is"],"the literally":["*one*"],"the literals":["have"],"the little":["things."],"the logic":["for","checks","of","checks","into","from","checks","checks","checks","of","on","checks","is","of","of","a","in","behind"],"the logic/algorithm.":["I'm"],"the logical":["condition."],"the long":["`(and","`(clojure.string/\u003cmethod\u003e`"],"the long,":["branching"],"the longest":["word","one","side"],"the look":["and"],"the loss":["of"],"the low":["level"],"the lower":["case"],"the lower-cased":["and"],"the lower-casing":["into","up","and"],"the lowercased":["string."],"the lowercased,":["tokenized"],"the macro":["could","over","it","would","is","which","then","expansion"],"the macro,":["as"],"the macros,":["this"],"the magic":["spell,"],"the main":["expression","method","thing","response-for","block","function"],"the make-anagram-checker":["function"],"the manual":["definitions."],"the many":["types"],"the map":["as","of","with","as","to","to","altogether.","as","to"],"the map,":["but"],"the map-index?":["Names"],"the map-inside-a-map,":["which"],"the map-reduce":["solution."],"the map.":["That","If"],"the map?":["It"],"the mapping":["super","to","shortcuts,"],"the markdown":["on"],"the match":["if","function"],"the matching":["opening"],"the mathematical":["version","definition."],"the matter":["regarding","with"],"the meaning":["it"],"the meaning.":["I"],"the meantime":["something"],"the mechanics":["of","of"],"the memoize":["cache."],"the mentioned":["`let`."],"the message":["\"DUDE!\",","into","didn't","was","is","matched","wasn't","is"],"the method":["`empty`","names","```to-rna-1```,","`str`.","is","more"],"the methods":["in","\u003ccode\u003erequest-type\u003c/code\u003e","provided","from"],"the middle":["of","of"],"the minute":["things"],"the misleading":["comment"],"the missing":["`+`"],"the module's":["interface."],"the moment":["-","I"],"the moment,":["the"],"the moment:":["https://github.com/exercism/exercism.io/tree/master/assignments/clojure/rna-transcription"],"the month":["and","by"],"the month.":["That"],"the monthly":["Coffee"],"the more":["I","domain-specific","elegant","appropriate","general","specific","conventional","idiomatically","idiomatic"],"the more-readable":["but"],"the most":["expressive","straight","common","part","idiomatic","important","readable","cases..","standard","readable","straightforward(and","common","preferred."],"the msg":["is"],"the multi-arity":["[`defn`](http://clojuredocs.org/clojure_core/clojure.core/defn#example_137)"],"the multi-collection":["form","form","calls"],"the multimethod":["approach"],"the multiple":["collection","`0`"],"the mutated":["object."],"the mystery":["constants"],"the name":["```string```","\u003ccode\u003es\u003c/code\u003e","`replace-thymidine-with-uracil`","\"hasher\"","is","being","of","should","```to-rna-1```","and","`pairs-equal`;","`alphagram`,","`hamming-distance`","`p`","of","\"alphagram\"","\u003ccode\u003enothing?\u003c/code\u003e","of","and","`asking-politely?`","`dna-\u003erna`","`question?`"],"the name).":["A"],"the name,":["I","you"],"the name.":["I","I"],"the names":["I","of","of","of","within","of","should","for","of","of","at"],"the namespace":["and","name","name","of","(so","and","(BTW","to","for","declaration:","available","at","symbol","it's","with","declaration,","declaration","in","again","to","anyway.","`:require","as","`:require","`:require","for","where","forms","`:require`"],"the namespace,":["but","as","but"],"the namespace.":["I'll","If"],"the naming":["of","made","too.","of"],"the naming,":["I"],"the narrowest":["scope"],"the native":["Clojure"],"the nature":["of"],"the necessity":["for","to","to"],"the need":["for","to","for","be),","for","for","to","for","for","for"],"the negative":["character"],"the nested":["branching","parentheses","`if`?"],"the nesting":["it's","and"],"the new":["version.","`inflect`","nucleotide-counts","one","name","line","version.","version","version.","value","value,","methods."],"the newline":["onto"],"the next":["exercise","problem!","one.","one.","exercise.","one","line","revision!","submission.","assignment.","line?","line","line:","iterations.","step","iteration,","unless","one.","form.","line","line","one.","iteration."],"the nil":["condition"],"the nitpick,":["I"],"the nitpick.":["Are"],"the nitpicking":["of"],"the no-op":["transcriptions,"],"the non-numeric":["ones."],"the non-word":["characters"],"the normalize":["digits"],"the normalized":["form","value"],"the not-silent":["check"],"the not=":["was"],"the ns":["macro,","macro","macro","form).","special","macro","macro,","macro","form,","declaration","directive","form"],"the nth":["of"],"the nucleobases":["of"],"the nucleotide":["to","names","count","names","symbols"],"the nucleotides":["were","so","behind","are"],"the nucleotides,":["doing"],"the null":["case"],"the number":["of","and","may","in","intact","predicates","of","of","of","being","validation/cleaning"],"the number.":["At"],"the number/letter":["match"],"the old":["java.util.Date"],"the once).":["I"],"the one":["with","in","that","for","to","downside","on","from","test","function,"],"the one-character":["names,"],"the only":["thing","implementation","thing","thing","thing","thing","function","function","nitpick","thing","remaining","thing","way","pieces","values","thing","language","values","real","way","thing","way","other","thing","clojure","comment","difference","method","thing","lazy","function","difference","place"],"the opening":["`[`","one,","parens?","paren","paren"],"the operation":["in","more","is"],"the opportunity":["to"],"the opposite":["relationship"],"the opposite:":["`42"],"the option":["to","that"],"the options":["you"],"the options,":["but"],"the order":["of","wasn't","of","in","of","they're","of","to","is","of","of","of","in","of"],"the order,":["and"],"the ordering":["of","in","of"],"the original":["string","string","test.","and","pull","`word`","function.","function."],"the other":["statement","end","function","two","comment","cases,","two","two","information","helpers?","way","two","two","functions.","hand,","two","way","cases.","functions","way,","hand,","explains","hand,","hand,","nits","cases.","methods.","hand,","exercises","predicates","hand,","languages,","hand","requirements","requirements","day","implementations","places?","one."],"the other,":["but","especially"],"the other.":["My","After"],"the others":["don't.","and"],"the output":["of"],"the outside.":["Sets"],"the overall":["separation"],"the overhead":["of","of","of","of","of","of","of","of","of"],"the p":["naming"],"the page":["is"],"the paramater":["and"],"the parameter":["\u003ccode\u003es\u003c/code\u003e","in","on","to","name.","to"],"the parameter;":["it"],"the parameters":["vector"],"the params":["inside"],"the paren":["on"],"the parens":["on"],"the parentheses":["-"],"the parenthesis":["and"],"the parenthesis?":["This"],"the part":["about","of","of","about"],"the partial":["application.","becomes","application","application","comment.","functions."],"the participant":["create","to"],"the partition":["making"],"the parts":["into","of"],"the past":[";)"],"the past,":["so","so"],"the patterns":["in"],"the perceived":["need"],"the perfect":["method","reducer"],"the performance":["differences","tip!","issue"],"the period":["itself?","values"],"the periods,":["then"],"the person":["reading"],"the perspective":["of"],"the phone":["length"],"the phrase":["checks","before","instead","is","from","-","through","string"],"the phrase\"":["rather"],"the phrase's":["words\",","words"],"the pieces":["the"],"the pipeline":["special","special","functions?"],"the place":["to"],"the place,":["and"],"the places":["where"],"the planet":["period?"],"the planets":["would"],"the plural":["should"],"the plural.":["Perhaps"],"the point":["of","in","in"],"the point-free":["style,"],"the pointer":["on"],"the pointers;":["very"],"the points.":["Idiomatic"],"the poor":["date"],"the position":["of"],"the possibility":["of","to","of"],"the possible":["variances","digits","date"],"the post":["position"],"the pre":["and","and","and","and","and","condition","and","condition"],"the pre-calculations?":["also,"],"the precondition":["too."],"the predicate":["methods","methods","vars.","methods","on","is","is","names,"],"the predicates":["into","private","out","to","to","in","listed","need","names","out","are","would","must","you're"],"the predicates.":["Might"],"the preferred":["style."],"the prefix":["`is-`","`is`"],"the presence":["of"],"the present":["implementation,"],"the pretty-print":["function"],"the previous":["iteration","iteration.","iteration.","version","one","definitions!","line","iteration.","version.","version.","version.","value,","line","line.","iteration,","comment","iterations"],"the primary":["being","argument","library"],"the prime":["factorization","factors"],"the principal":["action"],"the principle":["of","of"],"the private":["function","helper","functions","functions"],"the problem":["didn't","within","with","domain.","of","specification","domain","domain","we're","that","is","into","by","before","as","domain.","at","specification","is","with","specification","definition."],"the problem.":["The","`clojure.string/blank?`","It","But","The","The"],"the problems":["I"],"the process":["may","to","to","into","could","where","I"],"the process.":["Maybe"],"the processed":["one."],"the processing":["operation","overhead.","flow.","stops"],"the program":["is","much","much","more",";)","much","even","just"],"the program.":["I"],"the program?":[";)"],"the project.clj":["would"],"the prompt":["to"],"the proper":["tools","terms"],"the property":["in"],"the protocol":["and"],"the provided":["tests"],"the public":["api","interface.","interface.","api","api","api","api","\"API\"","API.","API","API","one.","one","functions"],"the punctiation":["in"],"the purpose":["better.","of","of","of"],"the purposes":["of","of","of"],"the put":["all"],"the question":["of","of","mark","I","you","check","check","mark)","test","could"],"the question,":["just"],"the question?":["expression."],"the range":["generation","of"],"the range-from-args":["holy"],"the range.":["You"],"the raw":["characters","strings"],"the re-find":["call."],"the re-match":["(at"],"the readability":["here","of","of","by","at","of"],"the readability.":["I"],"the reader":["had","scan","of","should","for","recognize","is","from","will","where"],"the reader's:":["I"],"the reader.":["In"],"the readme":["(and","for","was"],"the readme,":["thanks!"],"the real":["one.","intent"],"the real-world":["performance:"],"the realm":["of"],"the reason":["I","I","for","in"],"the reasons":["for"],"the record":["itself."],"the recur":["function","macro."],"the recursion":["isn't"],"the reduce":["pattern.","function.","call","function"],"the reduce.":["It's"],"the reduction":["feels","could"],"the reduction?":["That"],"the redundant":["calls"],"the reference":["so"],"the references":["to"],"the regex":["matches","needs","\"positive\"","clauses?","a","approach.","to","matching?","based","pattern.","matches.","in","for"],"the regex.":["If"],"the regexes":["to","though."],"the regexes,":["or"],"the regexp":["to"],"the regexps":["can"],"the regular":["expressions","expression","expression","expression.","expression?","expression","expression.","expression","expression","expressions.","expressions","expressions","expressions?","expression","expressions?","expression"],"the related":["`-\u003e`"],"the relative":["clumsiness"],"the reminder":["re:","about"],"the repeated":["text,"],"the repeated,":["staccato,"],"the repeatedly":["and"],"the repetition":["of","of","when"],"the repetition,":["although"],"the repetition.":["My","Especially"],"the repl":["with","I"],"the repl,":["you"],"the repl.":["The","Having","The","The","In"],"the replace.":["also"],"the replacement":["mapping?"],"the representation":["changed","to"],"the require":["into","since","into","form."],"the require/use/import":["in"],"the required":["input"],"the requirement":["for"],"the requirements":["severely","of","and","as","changed"],"the requirements.":[":)"],"the requires":["in"],"the response":["for","answers","answers","is","each","strings","strings,","to"],"the response-for":["logic","expression","method","function","to","breaks"],"the responses":["should","map!","to","string","-","becomes"],"the responses,":["but","but"],"the responsibility":["of"],"the responsible":["way"],"the rest":["of","of","of","of"],"the rest,":["\"drop"],"the result":["of","of","of","of","but","is","works","of","is","of","on","are","would","of"],"the result.":["If"],"the resulting":["functions"],"the results":["in","of","of","will","to"],"the results,":["though"],"the results.":["I"],"the return":["value(s)","value?","value","value.","to","value.","a"],"the reversed":["`subs`"],"the review":[":)"],"the right":["bob.clj","name","thing","solution","types","thing","track.","thing.","thing.(The","thing","paren.","paren","answer","answer","date.","word","direction","incantation."],"the right-hand":["of"],"the risk":["of"],"the rna":["transcription"],"the road":["to"],"the robot":["as","data","protocol","and","namespace","starts"],"the root":["binding","bindings"],"the route":["of"],"the ruby":["version","language","version"],"the rule":["I"],"the rules":["better"],"the running":["time"],"the runtime":["complain"],"the s-exp":["depth"],"the sacrifice":["in"],"the sake":["of","of","of"],"the same":["as","sort","runtime","approach:","approach:","as","thing,","as","thing.","position","time.","line","problem!","way","with","thing?","line","line","piece","line","way","contents","word","line","line","as","case.","as","namespace).","thing","time:","when","as","contents","line","point.","can","way","thing,","result.","about","line","time","effect","contents","line","arguments","word","happens","line","way","function","as","way.","time.","result.","word","word","way.","inputs.","in","problem","letters","alphagram.","line,","\"equality","\"equality","type","type","collection","result","level","as","function","way","as","argument","value","thing","thing.","way","since","repl.","length","structure","structure","word,","goal","line:","line","construct.","line","data.","tests","thing.","way.","thing","time.","effect,","thing,","method","line","line","list.","line,","row,","map","is","line.","time,","effect","`letfn`","comparison","line","line","as","and","as","value","as","as","arguments.","things.","thing","atom","value.","value","abstraction","level"],"the same,":["it's","it's"],"the scenario.":["So"],"the scope":["of","of","which","of","of","of","as","of"],"the score-letter":["function"],"the score-word":["in"],"the search":["for"],"the second":["argument","regexp","question:","\"\\n\"","check","iteration.","iteration.","one","iteration.","character","one","part.","iteration"],"the section":["in"],"the semantics":["of","of"],"the sentence":["and","was,","is"],"the sentences":["goes,"],"the sentiment":["function","statements","analysis"],"the separation":["of","of"],"the seq":["returned"],"the sequence":["instead","functions","related"],"the sequence,":["otherwise"],"the sequences":["API","with","can"],"the sequences.":["Nucleotides"],"the set":["of","of","around,","into","of","for","of","of","callable","function","members","and"],"the set,":["you"],"the shape":["of","of"],"the short":["form"],"the shorter":["regex"],"the shortest":["solution","collection.","passed"],"the shorthand":["notation","names","function"],"the shortness":["of","of"],"the shout":["predicate"],"the shout?":["predicate"],"the shouted":["text"],"the shouting":["test?","to","check"],"the shouting?":["function","method"],"the side":["I","effect"],"the signature":["of"],"the silence":["function,","predicate."],"the silent":["clause"],"the silent/shouting/question":["cases?"],"the simmetry":["with"],"the simple":["purpose","logic.","conditional"],"the simpler":["function","approach"],"the simplest":["cases","things"],"the simplicity":["of","of","of"],"the sing":["function."],"the single":["character","string."],"the singular":["and"],"the site":["and"],"the site.":["Thanks"],"the size":["of","of","of","of"],"the slightly":["simpler","shorter"],"the software":["does."],"the solution":["is","a","(something","more","to","was","this","using","seems","`last`.","could","is","looks"],"the solution,":["the"],"the solution.":["I"],"the solutions":["that","that","that"],"the some-str.":["There's"],"the song,":["I18n"],"the sort":["or"],"the sort/lower-case":["work"],"the sorted":["value","version","letters."],"the sorted/upper-cased":["values"],"the sorting":["of"],"the source":["file","file/system?","for","text","file."],"the spec":["very"],"the spec.":[":)"],"the special":["case","case","case"],"the special-case":["of"],"the specification":["and/or","is"],"the specification?":["I'm","I'm"],"the specs":["there"],"the spirit":["of","of"],"the split":["is","elements","to","without","from"],"the split,":["you"],"the splits,":["since"],"the splitting":["of","into"],"the square":["brackets","brackets","root"],"the standard":["practice","library."],"the start":["bracket"],"the starting":["hash"],"the statement":["didn't","patterns","patterns"],"the statement-types:":["the"],"the step":["-","function"],"the steps":["like:"],"the store":["and"],"the store...\".":["What"],"the story":["of"],"the straight":["`cond`"],"the strand":["into"],"the strands":["were","together","with"],"the strange":["call"],"the strangeness":["in"],"the string":["\"default\".","tests","check","-","matches","matches","*is*?","checking","namespace.","namespace.","once,","not","tests","and","representation","namespace","and","or","checks","rather","literals","functions","functions.","literals?","is","and","in","is","namespace,","parameter","literals","among","as","on","as","against","against","representation","is","versions","on","unnecessarily,","`\"U\"`","replace","replace","methods.","would","replace","into","cases","formatting/templating","inside","function"],"the string,":["rather"],"the string.":["Here's","You","Possibly"],"the string/replace":["forms."],"the string?":["\"Do"],"the strings":["\"T\"","with","through","using","after","you","themselves.","for"],"the strings,":["just"],"the strings.":["Any","`0`"],"the structural":["where"],"the structure":["of"],"the stuff":["about","inside"],"the style":["guide","for","good","guide.","consistent","guide.","here","guide.","I've"],"the subject":["only"],"the subject,":["but"],"the submission":["didn't","had"],"the subtle":["hint"],"the succinctness":["of"],"the suffix":["`?`"],"the suggestion":["about","of","of","to"],"the suggestion,":["I"],"the suggestions":["and"],"the suggestions,":["I"],"the superfluous":["parenthesis"],"the supplied":["tests","expressions"],"the support":["of"],"the surrounding":["context"],"the symbol":["`:else`","in","`c`"],"the symbols":["you","with","directly"],"the symmetry":["is"],"the system.":["GIGO"],"the table.":["WOW!"],"the task":["into","first"],"the technical":["details"],"the template":["as"],"the terminating":["double"],"the terms":["expressed"],"the terriority":["of"],"the test":["cases","cases","instead.","suite.","functions","suite?)","for","suite?",".clj","contract.","suite.","data.","cases","again","suite","suite","for","while","code","suite","so","locally","script.","suite,","case","cases","cases.","cases.","wanted","suite,","case.","case,","to:"],"the test,":["to"],"the test-suite":["also"],"the test...":["It's"],"the test/example":["for"],"the testing":["tool"],"the tests":["pass,","instead","in","extracted","and","so","but","are","pass,","in","are","you","would","for","themselves.","(the","without","don't","into","pass.","pass,","to","don't","to","force","correct","and","would","over","since","in","don't","pass.","fail","so","that","don't","against"],"the tests),":["hence"],"the tests,":["so","plus","please"],"the tests.":["That's","That's","Ignore","If","Not"],"the tests:":["is"],"the tests?":["The"],"the text":["so","is","is"],"the the":["template","`filter`","`range`"],"the thing":["we're","a","to","to"],"the things":["up?","that"],"the third":["letter","parameter","Wednesday","one"],"the thought":["of"],"the thread":["operator.","last","last","last","macro"],"the thread-first":["macro"],"the thread-last":["macro","macro"],"the threaded":["function"],"the threading":["macro.","functions","macro,","macro","macro","macro","form","macro,"],"the threading.":["Resubmitting!"],"the three":["untouched","predicates","workhorses"],"the thrush":["macros?","methods"],"the time":["to","to","to","to","to","required","when","I","being.","you'll","without","it","of","macro,"],"the time,":["you","I"],"the tip":[":)",";)","on","about"],"the tip!":["Will"],"the tip,":["@arnulfo.","I"],"the tip.":["I'm","I","That","Check"],"the tips":["@alverta.","@tiffany"],"the tips,":["have"],"the title":["of","of"],"the top":["and","(`sing`,","with","level","level,","rather","of","(however","and","level","(see","level","level","of","of","of","such"],"the top,":["you"],"the top.":["`declare`"],"the tradeoff":["between"],"the tradeoff,":["just"],"the trailing":["parens","')'"],"the trailing/hanging":["parentheses"],"the train":["wreck"],"the transcription":["you","which"],"the transcription.":[":)"],"the transform":["char"],"the transformation":["that","more"],"the transformation,":["which"],"the transformation.":["There"],"the translate-nucleotide":["function,"],"the translation)":["that"],"the trees":["there."],"the trial-and-error":["method,"],"the trim":["since"],"the trimmed":["statement"],"the trivial":["test"],"the trouble":["of"],"the true":["to","serial"],"the truth":["of"],"the two":["macros","functions","namespaces.","calls","nitpicks","characters","constants","methods.","steps.","conditions.","functions","mapping","other"],"the type":["system","of","of","used"],"the type-responses":["and"],"the ugliness":["of"],"the ugly":["`rand-char`","use"],"the underlying":["implementation","data"],"the underscores":["are"],"the undocumented":["constants"],"the unicode":["letter"],"the unused":["s"],"the unwanted":["chars."],"the update-in":["suggestion."],"the upper-case":["version"],"the uppercased":["version","version","version"],"the uracil.":["But"],"the usage":["of","would","of","of"],"the use":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","case,","of","of","part","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","call)","declaration","of","of"],"the usefulness":["of","of"],"the user":["create"],"the user,":["so"],"the usual":["style","approach","style?","style","solution"],"the vacation":["and"],"the valid":["dna"],"the validate":["method)."],"the validation":["set.","process…","check","is","function","from","and","out","function."],"the validation,":["i.e."],"the validation.":["Even"],"the value":["for","you're","of","and","of","or","had","at","gets","on","is","for","could","of","could","is","is","matching"],"the value,":["it"],"the value.":["`repeatedly`"],"the values":["in","with","should","as"],"the variable":["\"query\"","name","`s`","`s`","to","to","you","`s`,"],"the variable/docs":["appropriately,"],"the variables":["are","to"],"the various":["predicate","bindings","regex"],"the vars":["private."],"the verification":["as"],"the verse":["that","function"],"the verse.":["To"],"the verses":["in","and"],"the verses.":["The"],"the version":["that","with"],"the vertical":["spacing"],"the very":["Clojure-ish","same","last","end"],"the video":["is"],"the visibility":["of","of"],"the visual":["distinction","basic"],"the wall,":["\"","\""],"the wall.\")`":["is"],"the warning":["by","about","about"],"the way":["```(string/replace","you","it","the","you","you","I've","you've","the","it","of","you","I","to","it","you","you","this","I","your","to","I","functions","you","not"],"the way,":["thanks","`-\u003e`","you","do"],"the whitespace":["and","you","or"],"the whole":["thing?","namespace?","thing","namespace","thing.","program.","thing","string.","sequence","namespace,","`and`","point","point","string","string","logic","program","thing","cond","string."],"the why":["and"],"the wild":["doesn't"],"the wild,":["and","(declare)"],"the word":["is","once","separation","is","with","from","alphagram","you","to","you're","you","and","\"javascriptz\"","count","you","is","has","list,","characters.","you","list"],"the word,":["i.e","so"],"the word-count":["function,"],"the word.":["The"],"the word;":["ex:"],"the words":["out","directly","in","as","you"],"the words,":["instead"],"the words?":["It"],"the work":["for","you","of","for","for","you're"],"the work.":["One"],"the worst":["that"],"the wrapping":["of"],"the writing":["of"],"the wrong":["place","expression.","tree","function","place.","type"],"the year":["bound","value."],"the yell?":["and"],"the yelling":["case."],"the zero":["map","manually"],"their arguments.":["Of"],"their body":["on"],"their code":["might","might"],"their counts":["into"],"their definitions":["in"],"their first":["use?"],"their meaning":["more"],"their meanings":["are"],"their namespace":["in"],"their namespace.":["For"],"their order":["in","in","in"],"their own":["line.","line.","lines","lines","lines).","lines","private","line.","line.","line.","well-named","lines.","functions","functions.","functions?","functions","functions"],"their parentheses":["on"],"their purposes":["clearer"],"their representation":["is"],"their site,":["I"],"their use,":["so"],"them (and":["you"],"them *inside*":["the"],"them a":["go","name","few","bit","bit."],"them again,":["for"],"them all":["by","by","by"],"them along":["with"],"them and":["maybe"],"them anywhere":["—"],"them are":["very","questions.","'safe',"],"them as":["vars","private","it","it","inner","you"],"them assume":["that"],"them at":["the"],"them available":["outside","in"],"them both":["in","Refs"],"them both,":["made"],"them coming.":["I'm"],"them consistent.":["Second,"],"them descriptive":["names?"],"them directly":["without"],"them do":["it"],"them fits":["the"],"them for":["very"],"them has":["anything"],"them here":["too."],"them in":["function","front","other","narrowest","the","this","`dosync`.","to"],"them intention-revealing":["names."],"them interesting":["names?"],"them into":["templates","separate,","lists.","sequences."],"them is":["confusing","often"],"them isn't":["getting"],"them like":["this:"],"them literally":["in","in"],"them meaningful":["names?"],"them might":["be"],"them more":["\"boolean\"","than"],"them names.":["If"],"them on":["separate"],"them one":["by"],"them out":["(which","of","is","bravely!","in"],"them polymorphically":["based"],"them private":["functions?"],"them separate":["functions."],"them some":["domain-specific"],"them the":["same","same"],"them themselves,":["you"],"them they":["would"],"them this":["time."],"them through":["fully"],"them to":["avoid","make","the"],"them together":["with"],"them trailing":["(easier"],"them up":["when","with"],"them up.":["In"],"them upon":["the"],"them useful":["names?"],"them using":["`let`?",":only"],"them when":["you","you"],"them will":["declutter"],"them with":["nil.","their","`:^private`","`(declare"],"them within":["the"],"them would":["be"],"them you":["could"],"them! `clojure.string`":["is"],"them's an":["easy"],"them, I":["would"],"them, including":["the"],"them, my":["`cond`"],"them, they":["wouldn't"],"them. Is":["there"],"them. Perhaps":["you"],"them. Thanks":["in"],"them. That's":["something","a"],"them. The":["second"],"them. You":["could"],"them; it":["wasn't"],"them? Or":["do"],"themselves as":["functions,"],"themselves, you":["can"],"themselves. I":["think"],"then I":["take","can","probably","would"],"then I'd":["be"],"then I'll":["tell"],"then a":["function"],"then additionally":["by"],"then also":["be"],"then assuming":["that"],"then be":["handed","unnecessarily"],"then becomes":["higher"],"then can":["your"],"then comparing":["could"],"then constructed":["a"],"then convert":["to","each"],"then count":["that."],"then decided":["that"],"then for":["clojure.string/replace","clojure.string/replace"],"then get":["a","frustrated"],"then incur":["a"],"then is":["there"],"then it":["must","must","starts","sort"],"then just":["pass","pass"],"then let":["`response-for`"],"then merge":["could"],"then my":["attempts"],"then name":["is"],"then pull":["the"],"then putting":["it"],"then recreating":["the"],"then referring":["to"],"then remove":["the"],"then renamed":["to,"],"then reversing":["it."],"then saw":["a"],"then scanning":["the"],"then seeing":["how"],"then splitting":["a"],"then take":["3","3","4"],"then the":["shouting?","frequencies.","code","cond","value"],"then turned":["back"],"then use":["in","those","the","the"],"then uses":["the"],"then wait":["until"],"then we’d":["end"],"then why":["doesn't"],"then will":["pass"],"then you":["should","can","can","have","don't","won't","wouldn't","will","will","could","can"],"then, a":["more"],"then, the":["names"],"theory, `count-nucleotides`":["could"],"there :)":["thanks"],"there a":["simpler","way","name","reason","way","benefit","way","way","way","way","reason","way","way","function","way","test","way","function","way","better","name","function/idiom","better","better","better","word","more","more","special","way","way"],"there an":["advantage","intent","idiomatic"],"there another":["class"],"there any":["way","reason","way","reason","way","way","better","better","simple"],"there are":["some","quite","better,","no","contexts","more","some","a","no","2","quite","some","any).","extra","a","`:leap-year`","some","two","any","two","cleaner","a","duplicate","many","ways"],"there aren't":["any"],"there as":["well."],"there be":["a","a"],"there beside":["punctuation."],"there can":["be"],"there could":["be"],"there didn't":["seem"],"there doesn't":["seem"],"there first":["before"],"there for":["all"],"there has":["to","to"],"there is":["a","really","`upper`","no","no","a","no","an","very","a","such","no","any","not","anyone","a","a","no","a","more","a","a","a","a","a","a","a","a","probably","no","a","a","nothing","no","a","just","a","really","a","a","a"],"there isn't":["a"],"there it's":["not"],"there might":["be"],"there must":["be","be","be","be","be"],"there nothing":["that"],"there on":["the"],"there others":["to"],"there possibly":["a"],"there really":["is"],"there seems":["to"],"there should":["be","be","be"],"there shouldn't":["normally","be"],"there simple":["string"],"there since":["you"],"there some":["way","way"],"there something":["you","I'm","else","unusual"],"there to":["get"],"there value":["in","in"],"there was":["intent","a","a","a","some","at","a","already","only","a","a"],"there was,":["good"],"there were":["private"],"there will":["be"],"there won't":["be","be"],"there would":["be","be"],"there's `not=`":["that"],"there's `when`":["-"],"there's a":["better","core","nice","cleaner","better","better","better","way","better","function","reasonably","third","good","lot","possibility","performance","way","more","more","positive","much","special","more"],"there's actually":["a","a","a"],"there's also":["a","`clojure.string`","`condp`."],"there's always":["the"],"there's any":["need","way","sort"],"there's anything":["that"],"there's many":["nested"],"there's more":["efficient","effective","than"],"there's much":["difference,"],"there's no":["reason","need","*official*","gain","performance","tail-call","real","room","need","big","else"],"there's not":["much"],"there's nothing":["wrong","actually","in","in"],"there's only":["one","one"],"there's probably":["a"],"there's room":["here"],"there's some":["other","inefficiency"],"there's something":["there"],"there's too":["many"],"there) -":["so"],"there). Your":["line"],"there, and":["the"],"there, rather":["than"],"there. Although":["the"],"there. Dunno":["how"],"there. Help":["would"],"there. I":["finally","did","think"],"there. It":["was"],"there. On":["the"],"thereby the":["whole"],"therefore not":["filter"],"therefore thought":["it"],"there’s a":["better","way","huge"],"there’s more:":["what"],"these `def`s,":["which"],"these abbreviations":["for"],"these after":["being"],"these are":["very","equivalent"],"these articles":["that"],"these as":["business"],"these beyond":["the"],"these cases":["is"],"these concepts":["are"],"these conventions":[":)"],"these design":["issues"],"these different":["languages"],"these don't":["qualify"],"these exercises":["is"],"these fairly":["basic"],"these function":["calls"],"these functions":["private","and","in"],"these helpers":["as"],"these if":["you"],"these in":["a"],"these lines":["(untested):"],"these lines?":["Do"],"these links":["for"],"these methods":["use","can"],"these out":["into"],"these predicates,":["especially"],"these problems":["are"],"these problems.":["Just"],"these save":["you,"],"these short":["checks,"],"these sort":["of"],"these sorts":["of"],"these string":["generations?"],"these things":["things","are"],"these to":["reduce"],"these types":[":)"],"these visual":["enhancements"],"these with":["a"],"they actually":["clarify"],"they appear":["reasonably"],"they apply":["in."],"they are":["really","not","really","both","'private'","not","just","separate","passed,","predicates"],"they are.":["The"],"they are..[oddly":["not"],"they aren't":["always"],"they both":["create"],"they can":["help","be","actually"],"they care":["about"],"they claimed":["to"],"they create":["a"],"they deem":["it"],"they denied":["it"],"they do":["decouple"],"they do,":["not"],"they don't":["have","check","have"],"they end":["with"],"they for,":["then?"],"they had":["names"],"they have":["more/clearer","both","the","more","the","the"],"they just":["use"],"they logically":["belong"],"they meant":["was"],"they might":["be","bleed"],"they more":["closely"],"they need":["their"],"they really":["should","need"],"they return":["a"],"they say":["`Make"],"they share":["a"],"they should":["do.","be"],"they stick":["to"],"they still":["make"],"they very":["much"],"they were":["not","testing"],"they weren't":["opened"],"they would":["still","appear","have"],"they wouldn't":["be"],"they'd be":["better"],"they'd help":["differentiate,"],"they're accessed":["from"],"they're applied":["in"],"they're basically":["\"lingua"],"they're called?":["Does"],"they're equivalent":["(woo,"],"they're equivalent.":["I"],"they're getting":["validated"],"they're needed":["somewhere"],"they're not":["exposed","pulling","both"],"they're returned.":["Transients"],"they're similar":["to"],"they're so":["short"],"they're very":["expressive"],"thing -":["please","although","consider"],"thing --":["what","what","I"],"thing I":["would","might","could","would","have","would","should","could","still","would","would","can","don't","can","am","was","would","notice"],"thing I'd":["suggest","change","suggest"],"thing I'm":["doing."],"thing I've":["ever"],"thing [`letfn`](http://clojuredocs.org/clojure_core/clojure.core/letfn)":["might"],"thing a":["bit"],"thing about":["Clojure"],"thing as":["`last`,","`silence?`."],"thing at":["one"],"thing changing":["was"],"thing does":["is"],"thing for":["clojure","my"],"thing in":["the"],"thing into":["one"],"thing is":["(and","not","the","about","questionable","the","that","that","that","simpler"],"thing jarring.":["Line"],"thing needs":["much"],"thing or":["three!"],"thing significantly":["easier"],"thing that":["messes","bothers","I","you","really","I","could","I","I"],"thing that's":["only"],"thing these":["save"],"thing to":["do","discuss","solve","consider","consider:","do","do,","do","do,","do.","do","remember","consider","recognize","just","recognize"],"thing unique":["about"],"thing using":["`require`/`refer`"],"thing we":["are"],"thing we're":["looking"],"thing with":["let/letfn"],"thing you":["might","might","might","can"],"thing you'll":["use,"],"thing, I":["think"],"thing, but":["I","I","future","variable"],"thing, currently":["you're"],"thing, if":["vars"],"thing, is":["that"],"thing, it":["is"],"thing, on":["the"],"thing. For":["functions"],"thing. Think":["about"],"thing.(The tests":["pass)"],"thing: Perhaps":["you"],"thing: Try":["`(clojure.string/blank?"],"thing: You":["can"],"thing: it":["seems"],"things (regarding":["readability),"],"things I":["would","want","don't","don't","don't","see"],"things I've":["been"],"things a":["lot","little","lot","bit","little","little","bit","bit","bit","bit","little."],"things are":["computed,","always"],"things at":["the","the"],"things back":["to"],"things by":["name"],"things can":["be","be"],"things clearer":["at"],"things crammed":["into"],"things done!":["I'll"],"things down?":["It"],"things easier":["to","to","for"],"things even":["more","messier."],"things from":["your"],"things greatly":["once"],"things if":["you"],"things in":["terms","clojure.","clojure.","sequence,"],"things is":["_hard_."],"things let":["up."],"things like":["the","replacing","the","(count","this","\"yelling\"","this","`cloud9`","the","converting","`(=","uppercase","`angry?`,"],"things look":["very"],"things of":["note"],"things one":["could","might"],"things out":["if"],"things out!":["The"],"things people":["say"],"things quite":["more","a","a"],"things readable.":["As"],"things significantly":["easier"],"things sometimes.":["For"],"things surprised":["me"],"things that":["I've","really","I'm","might","might","might","you"],"things things":["to"],"things tightly":["when"],"things till":["you"],"things to":["that","think","consider:","consider:"],"things turn":["out"],"things up":["is","and","a"],"things well":["and"],"things with":["names"],"things you":["can"],"things you've":["got:"],"things(i think)":["so"],"things, I":["probably"],"things, probably":["personal"],"things. I":["wish","wonder"],"things. e.g.":["If"],"think --":["worth","too"],"think I":["understand","will","was","know","like","like","don't","like","drowned","would","got","could","prefer","could","would","could","can","would","should","might","agree","would"],"think I'd":["make","either"],"think I'll":["look","make","keep"],"think I'm":["following"],"think `#\"T\"`":["needs"],"think `:refer`ring":["`blank?`"],"think `:require":["[clojure.string"],"think ```anagram?```":["and"],"think `anagram-of?`":["was"],"think `count`":["could"],"think `defn-`":["makes","is"],"think `long-word-count`":["and"],"think `question?`":["should"],"think `require`":["is"],"think `screaming?`":["could"],"think `sorted-chars`":["can"],"think `split`ting":["a"],"think `use`":["is"],"think a":["lot","regex-based","word","small"],"think about":["what","adding","moving","it,","using","wrapping","things","it.","the","those","my","things","using","it.","visibility","it","diactrics.","(private)","a","it,","hiding","reusing","it","a","improving","which","how","extracting","reducing","using","letting","using","it"],"think again:":["Anagrams"],"think assigning":["nucleotide"],"think comments":["are"],"think depending":["on"],"think does":["exactly"],"think for":["the","a","Bob"],"think giving":["names"],"think if":["you"],"think implementing":["a"],"think in":["idiomatic","this","that"],"think is":["better?","debatable","a"],"think is-":["is"],"think it":["could","would","would","would","reads","would","could","looks","is","could","more","would","would","should","could","would","would","would","would","might","will","is","won't","would","would","still","makes","wins","would","might","would","can","will"],"think it's":["a","a","common","fine","that","probably","outside","really","assumed","common","necessary","still","equivalent.","silly","worth","also","worth","worth","more","appropriate","worth","clearer","a","important","pretty","an","just"],"think its":["only"],"think it’s":["“good"],"think knowing":["what"],"think laziness":["would"],"think letter":["is"],"think makes":["the"],"think most":["Clojurists"],"think moving":["inline"],"think my":["editor","shouty?"],"think not.":["Some"],"think of":["a","a","a","a","alanpeabody's","a","a","is","the","coding","a","a","it.","new","getting","chaining","a","a","a","using","a","a","a","a","a","a","doing","a","defining","`anagrams-for`","a","to","that!"],"think of.":["Currently"],"think off.":["Unlike"],"think only":["`response-for`","`response-for`"],"think pre-calculating":["the"],"think private":["helper"],"think putting":["args"],"think question?":["and"],"think requiring":["the"],"think something":["else"],"think string":["in"],"think such":["having"],"think taking":["the"],"think that":["relying","naming","bare","is","this","you","extracting","this","this","is","it","using","using","maybe","cond","multimethods","it","in","in","`if`","fact","the","it","will"],"think that's":["necessary?","possible","pretty","the","an","more"],"think the":["\"why\"","approach","string","conditions","conditional","function","bottleneck","common","`get`","*why*","exercise","degree","former","result","case","intent","second","usual","usual","```(:require","new","choice","most","String#endsWith","problem","lambda","shout?","second","suggestion","atom","intent","way"],"think there":["are","are","is","should","is","are","has"],"think there's":["any","any","a","a","a","a"],"think they":["can","should"],"think things":["can"],"think this":["is","works","is","is","is","looks","can","is","submission","reads","alone","is","is","is","has","looks","one","makes","solution","one","exercise","is","can","would","looks","solution","would","function"],"think to":["add","find"],"think too":["much."],"think transcribing":["C-&gt;C"],"think trying":["that"],"think use":["is"],"think using":["the","\"frequencies\"","the","actual"],"think we":["see"],"think we're":["good","just"],"think what":["BrianHicks","rubysolo","you've"],"think with":["a","a"],"think you":["need","could","might","can","should","are","can","for","need","could","should","can","should","should","have","can","could","could","need","could","could","could"],"think you'll":["get"],"think you're":["right","right","done","sorting","checking","looking","looking"],"think you've":["lost","made"],"think your":["shout","code","implementation","`is-x?`","`nucleotide-counts`","`[from"],"think!) the":["three"],"think) so":["I"],"think). Decided":["that"],"think, is":["that","it"],"think, it":["lowers"],"think, putting":["the"],"think, this":["is","is"],"think, you":["should"],"think. As":["for"],"think. I'm":["going"],"think? It":["can"],"thinka that":["it's"],"thinking about":["pulling","closures","how","the","something","using","a","the"],"thinking in":["your"],"thinking of":["using","`frequencies`"],"thinking of!":[":)"],"thinking something":["more","along"],"thinking that":["it"],"thinking that's":["trying"],"thinking through":["it."],"thinking what":["you"],"thinks about":["something"],"thinks my":["`condp`"],"third Wednesday":["or"],"third argument":["and","that"],"third argument.":["Everytime","You"],"third covers":["questions."],"third iteration":["if","if"],"third letter":["of"],"third one":["is"],"third parameter":["1"],"third sentence.":["I"],"third strategy":["to"],"third way!":[":)"],"third, `not-found`":["argument."],"this \"feels\"":["like","like"],"this (and":["any"],"this (modulo":["better"],"this (which":["is"],"this *is*":["called"],"this *without*":["using","the"],"this -":["and"],"this ...":["why"],"this I":["have","thought","didn't"],"this `(partial":["apply"],"this a":["sensible","bit","year","bit","bit"],"this about":["lazy"],"this afternoon,":["but"],"this algorithm":["from"],"this all":["in"],"this allows":["for","`str/lower-case`."],"this alone":["would"],"this alternative":["also:"],"this an":["improvement,","improvement,"],"this and":["once","helper","the"],"this approach":["as","if","-","because"],"this are":["too"],"this as":["a","an","done,","portable","well.","Strings","a"],"this asked":["for"],"this assignment":["myself"],"this assignment.":[":)"],"this at":["all.","all."],"this be":["really"],"this being":["difficult"],"this better":["as"],"this both":["shorter"],"this but":["so","if","what"],"this by":["adding"],"this can":["get","be","be","add","be"],"this can't":["be"],"this case":["I","I","I","would","though?","it","and","worth","if","I","the","you","though,","of","you're","(since","either?","it","you're"],"this case)":["if"],"this case).":["`Vectors`"],"this case,":["you","the","it's","I","the","you'd","the","the"],"this case.":["I'll","Compare","It's","`sort-by`"],"this case:":["http://stackoverflow.com/questions/21033770/how-should-i-pass-a-string-argument-to-clojure-core-apply/21038833?noredirect=1#21038833"],"this cleaned":["things"],"this cleaner.":["The"],"this code":["is","formatting","later",":)","is","warrants","explain","much","will","doesn't","and","I","is","a","so","can","a"],"this code.":["In",":)"],"this columnar":["style"],"this comment,":["but"],"this compile,":["though;"],"this context":["if"],"this context,":["compiling:(/home/burke/exercism/clojure/bob/bob.clj:7:19)","compiling:(NO_SOURCE_PATH:0:0)"],"this context.":["Can","Can"],"this context?":["I"],"this correctly":["that"],"this could":["be","be","be","be"],"this data":["structure."],"this design":["more"],"this detail":["into"],"this differently":["and"],"this does":["readability"],"this doesn't":["impact","feel"],"this down":["to"],"this even":["though"],"this example":["is","will","in"],"this example.":[";-)","Although"],"this exercise":["you","I","the","the","doesn't","enough","when","doesn't","is","so","is","to","but","is...","to","isn't",":)","made"],"this exercise,":["though","but","but","as","but"],"this exercise?":[":p"],"this explanation,":["though?])"],"this feature":["in","helps"],"this feels":["a"],"this file,":["but"],"this finds":["the"],"this for":["the","approval.","simplifying","any","the","a"],"this function":["does.","to","would","in","say?","expects","is"],"this function.":["Also,"],"this function/map,":["obtaining"],"this good":["practice"],"this got":["submitted","submitted"],"this great":["post"],"this gut":["feeling"],"this has":["one","a"],"this have":["been"],"this helpful":["for"],"this if":["I","-"],"this implementation":["he","has","is","makes","is"],"this implementation.":["Even"],"this improves":["on"],"this in":["'pure","the","my","other","or","Elixir","Clojure,"],"this instance":["is"],"this instead":["of"],"this into":["a","a"],"this is":["definitely","a","great","fine.","fine.","my","a","very","looking","really","very","really","looking","very","idioms","not","definitely","necessary,","looking","a","better.","still","the","more","a","about","very","very","mostly","pretty","pretty","really","my","exactly","still","a","how","much","a","that","an","programming.","partly","oversight?","such","a","necessary","significantly","a","we","my","not","relatively","idiomatic","pretty","great.","good","the","perfect","already","my","probably","the"],"this is,":["but"],"this isn't":["very","correct","really"],"this issue":["just"],"this iteration":["I","I"],"this iteration.":["Moving"],"this kata":["that"],"this kind":["of","of","of","of","of","of","of"],"this language":["had"],"this later":["on,","on"],"this leaves":["`words`"],"this line":["```(="],"this little":["idiom"],"this long":["way"],"this look":["to"],"this looks":["good.","great.","great!","good!","great.","great.","good","good","pretty","pretty","good.","real"],"this macro":[":)"],"this makes":["sense."],"this may":["be","become"],"this mess":["it"],"this message":["contain"],"this method":["is"],"this method\",":["right?"],"this more":["explicit","efficient.","like","clear,"],"this much":["simpler.","simpler"],"this namespace.":["What"],"this nit":["is"],"this not":["extensible"],"this on":["my",":-)"],"this one":["was","being","concise","has","better.","accepted","because","is","lean.","is",":\\",":)","looks","while"],"this one,":["and","feel"],"this one.":["Great","Was","Next!","Command","I","(Whoops"],"this only":["work"],"this opinion":["is"],"this ordering":["may"],"this out":["into","there","after","from"],"this over":["the"],"this overhead":["?"],"this particular":["case","test)."],"this pass":["the","the","the"],"this passes":["the","the"],"this passing":["through"],"this path,":["I"],"this pattern,":["this"],"this peculiar":["detail?"],"this piece":["of","of"],"this pile":["of"],"this point":["is","and"],"this prerequisite":["on"],"this pretty":["convenient."],"this problem":["simply","to",";)","with","by","several","are","in"],"this problem,":["I","which","we","I"],"this problem.":["Check"],"this process":["can"],"this program":["executes,"],"this project.":["I"],"this purpose":[":-)"],"this purpose,":["and"],"this question:":["would"],"this quite":["a"],"this reads":["perfectly"],"this really":["have"],"this recomputes":["`sorted-lowered"],"this reduces":["readability"],"this replacing":["means."],"this response":["for"],"this revision":["be"],"this route":["you","was","instead."],"this route?":["Did"],"this same":["expressiveness"],"this seemed":["like"],"this separation":["and"],"this sequence":["of"],"this short":["I"],"this shorter":["and/or"],"this shows":["a"],"this significantly":["by"],"this simple":["example,","example"],"this simpler":["by","and"],"this site":[":-)"],"this site.":["It"],"this site;":["the"],"this situation":["because"],"this solution":["is","would","is.","so","all","is"],"this solution.":[":)"],"this somehow.":["I"],"this something":["specific"],"this somewhere":["but"],"this sort":["of"],"this sorts":["as"],"this special":["form"],"this specific":["problem","case."],"this statement":[":)"],"this still":["correct?"],"this string":["have"],"this stuff":["is"],"this style":["also","come","surely"],"this style,":["so"],"this submission":["contains","after","-","-","but"],"this submission.":["Have"],"this terminology;":["I"],"this than":["to"],"this that":["is","is","is"],"this that's":["clearer"],"this time":["I"],"this time.":["Dang","I'll"],"this to":["look","100","say","pass.","be","find","work.","the","be","the"],"this topic":["going"],"this triangle":["validation"],"this up":["at","without","as"],"this using":["the","a"],"this usual":["style"],"this version":["and","a"],"this very":["operator","well,"],"this was":["a","approved","already","supposed","an","weirdly","prettier.","my","a","to"],"this way":["for","but","of","was","is"],"this way),":["but"],"this way.":["Otherwise,","=/"],"this were":["a"],"this what":["you"],"this whole":["exercise","exercism.io","thing"],"this will":["return"],"this with":["your","group-by","reduce-kv","a","`sort`","`reduce-kv`","list","clojure.string","regular"],"this without":["having","\"caching\"","if/case","the"],"this won't":["pass"],"this work":["given"],"this works":["pretty"],"this works,":["but"],"this would":["return","be","bit","be","probably","be","be","make","be","be"],"this yet.":["the"],"this! I'd":["probably"],"this! Please":["ignore."],"this). Good":["to"],"this). It":["is"],"this, I":["think","switched"],"this, I'd":["like"],"this, and":["then","the"],"this, but":["I"],"this, could":["be"],"this, imo.":["I"],"this, or":["nitpick?","if"],"this, then":["I","I'll"],"this, with":["the"],"this. And":["if"],"this. But":["it"],"this. I":["haven't","had","also"],"this. I'm":["having"],"this. Is":["the"],"this. My":["only"],"this. Seems":["more"],"this. Some":["even"],"this. Taking":["in"],"this. The":["good"],"this. Try":["checking"],"this. You":["would","could"],"this: `#(#{":[";...`."],"this; thanks":["all."],"this? How":["could"],"thoroughly tested":["with"],"those Clojure":["tricks"],"those a":["bit"],"those are":["not","literals.","not","cool!"],"those bindings":["in"],"those calls.":["To","To"],"those cases":["last","into"],"those cases,":["but"],"those collections":["to"],"those comments":["into"],"those conditions":["stronger","some","into"],"those entries":["rather"],"those extra":["checks"],"those familiar":["python"],"those helper":["functions"],"those helpers":["should"],"those ifs":["do"],"those into":["separate","simple"],"those is":["a"],"those issues.":["I"],"those languages":["where"],"those methods":["as"],"those methods?":["I"],"those might":["be"],"those more.":["I"],"those nested.":["They're"],"those options.":["I"],"those particular":["names"],"those predicate":["functions"],"those predicates":["in"],"those private?":["They"],"those response":["strings"],"those small":["nits,"],"those strings":["in","seemed"],"those suggestions":["in"],"those terms":["back"],"those tests.":["I"],"those that":["you"],"those things":["out!"],"those to":["generate","functions"],"those trailing":["parenthesis"],"those two":["are"],"those values":["in","instead"],"those with":["string"],"those, it'd":["be"],"those. Is":["there"],"those—these were":["just"],"though (last":["(seq"],"though I":["believe","finally","think","could"],"though I'd":["personally"],"though I'm":["really"],"though `re-seq`":["reflects"],"though `true`":["works"],"though a":["simple"],"though and":["vastly"],"though as":["it's"],"though is":["that"],"though it":["doesn't"],"though it's":["definitely"],"though making":["extensive"],"though since":["it's"],"though the":["solution","test","Java","let"],"though they":["appear"],"though this":["looks","is","is"],"though we":["don't"],"though without":["error."],"though you've":["made"],"though, I":["felt","could"],"though, always":["trimming"],"though, and":["in"],"though, especially":["the"],"though, since":["you"],"though, so":["I"],"though, these":["things"],"though, you":["only","might"],"though. Also,":["what's"],"though. From":["what"],"though. I'll":["go"],"though. Is":["there"],"though. Looks":["great."],"though. What":["do"],"though. You":["can"],"though. `(apply":["str"],"though: First,":["you"],"though: perhaps":["you"],"though; don't":["the"],"though? Sometimes":["less"],"thought I":["caught","could","tried"],"thought I'd":["take"],"thought I’d":["apply"],"thought ```.endsWith```":["scanned"],"thought `cl-format`":["could"],"thought a":["guiding"],"thought about":["the","using","turning","creating","that","that","making","defining","that","returning","expanding","using","checking","using","using","putting"],"thought clojure":["would","had"],"thought it":["might","was","was","might","was","was"],"thought more":["than"],"thought of":["using","the","that!","\"hasher\"","is","that.","as","expressing","it","passing","this"],"thought submitting":["a"],"thought that":["might","2","I","I","you"],"thought the":["extra-clarity"],"thought to":["use","look"],"thought, replace":["it"],"thought. It's":["been"],"thought: is":["it"],"thoughts on":["that.","```:as```","separating"],"thoughts that'd":["convince"],"though… Naming":["is"],"thougt it":["makes"],"thousands of":["nucleotides"],"thousands or":["millions"],"thread \"main\"":["java.lang.Exception:"],"thread can":["modify"],"thread input":["through"],"thread last":["macro.","macro","macro"],"thread macro":["down"],"thread safe":["with"],"thread-first macro":["just"],"thread-first macro](http://clojuredocs.org/clojure_core/clojure.core/-%3E)":["in"],"thread-last macro":["[`-\u003e\u003e`](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E).","would"],"threaded function":["(`-\u003e`)"],"threaded through":["at"],"threaded, it's":["probably"],"threading `-\u003e`":["macro."],"threading arrow":["and"],"threading form":["with","(and"],"threading functions":["until"],"threading is":["inserted","more"],"threading macro":["to","manipulates","`-&gt;&gt;`","to","is","like","```-\u003e```,","in"],"threading macro).":["On"],"threading macro,":["though.","[`-\u003e\u003e`](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E),"],"threading macro.":["In"],"threading macros":["allow","it's",":)"],"threading macros,":["but","it's"],"threading macros?":["I"],"threading makes":["things"],"threading, you":["can"],"threads the":["argument"],"three lengths":["are"],"three minor":["comments:"],"three of":["them"],"three predicates":["are"],"three sides":["are"],"three strings,":["which"],"three untouched":["nucleotides"],"three workhorses":["of"],"threshold with":["it."],"threw a":["set"],"threw me":["a"],"through `#(Integer.":["%)`"],"through a":["series","series","series"],"through all":["the","the","the"],"through at":["the"],"through cond":["and"],"through each":["character"],"through exercism.io,":["rather"],"through fully":["qualified"],"through it,":["but"],"through it.":["In","Since"],"through lexical":["scoping"],"through predicate":["functions"],"through the":["string","backlog!","nitpicking.","whole","Java","clojure","exercise.","exercise.","arguments,","use","data","supplied"],"through them":["a"],"through them.":["You"],"through this":["in","but"],"through to":["another"],"through using":["```clojure.string/replace```."],"through with":["\"The"],"through words":["then"],"through your":["example"],"through, but":["in"],"through? Then":["the"],"throughout the":["solution","source"],"throughout. When":["I"],"throw IllegalArgumentException":["rather"],"throw an":["AssertionError","exception","`AssertionError`","IllegalArgumentException."],"throw exceptions":["if"],"throw is":["not"],"throw the":["error.","AssertionError"],"throw when":["the"],"throwing an":["error","AssertionError.","exception."],"throwing more":["code"],"throwing this":["out"],"thrown at":["them."],"thrown in?":["(="],"throws `java.lang.NullPointerException`.":["Somebody"],"throws a":["NullPointerException."],"thrush macros?":["`(-\u003e"],"thrush methods":["which"],"thus conform":["to"],"thus far":["is"],"thymidine and":["uracil?","uracil","uracil"],"thymidine uracil}":["nucleotide)]"],"thymidine with":["uracil","uracil"],"thymine and":["uracil"],"thymine is":["one"],"thymine with":["uracil?"],"thymine. And":["wikipedia"],"tidy things":["up."],"tidy up":["all"],"tie-in with":["the"],"tied them":["together"],"tighten things":["up."],"tightly coupled":["in"],"tightly when":["I"],"till you":["like"],"time -":["I'm"],"time APIs":["and"],"time I":["suggested","looked","see","decided","force"],"time I've":["seen"],"time `robot-name`":["is"],"time a":["user"],"time ago":["proved"],"time and":["do","runtime","kind","thought"],"time around":["but"],"time as":["well.","a","if"],"time being.":["I"],"time for":["that."],"time grumbling":["\"if"],"time it":["takes"],"time keeping":["everything"],"time lately":["studying"],"time macro,":["I"],"time of":["sorting","writing"],"time or":["localized"],"time reading":["that"],"time required":["to"],"time shifts.":["Another"],"time to":["fix","get","find","me","clarify","get","switch","check","understand","use","use","use","use"],"time we":["call"],"time when":["code-golfing"],"time without":["giving"],"time working":["with"],"time you":["check"],"time you'll":["be"],"time, I":["think,"],"time, but":["I","I","decided"],"time, however,":["I"],"time, so":["there's"],"time, space,":["and"],"time, you":["will","can"],"time. Also,":["frequencies"],"time. Dang":["it!"],"time. I":["find"],"time. I'll":["leave"],"time. Whereas":["atoms"],"time: 0.097038":["msecs\""],"time: 0.110068":["msecs\""],"time: 1.17":["msecs\""],"time: 11479.189682":["msecs\""],"time: 11788.19571":["msecs\""],"time: 14057.544615":["msecs\""],"time: 16.048":["msecs\""],"time: 19087.936434":["msecs\""],"time: 201.423851":["msecs\""],"time: 208.046098":["msecs\""],"time: 208.561108":["msecs\""],"time: 26.054067":["msecs\""],"time: 387.761321":["msecs\""],"time: 393.312562":["msecs\""],"time: 524.314041":["msecs\""],"time: 63.334609":["msecs\""],"time: 7031.555459":["msecs\""],"time: 7884.769994":["msecs\""],"time: 8488.025604":["msecs\""],"time: 95.14145":["msecs\""],"time: 96.896736":["msecs\""],"time: 99.122541":["msecs\""],"time: alias":["a"],"times I":["code"],"times just":["taking"],"times on":["the"],"times seems":["weird"],"times than":["it","necessary."],"times throughout.":["When"],"times to":["compare"],"times when":["new"],"times which":["is"],"times, but":["I'm"],"times, e.g.,":["by"],"times. I":["personally"],"times. It":["might"],"times. Possibly":["using"],"timezones. You":["didn't"],"tiny I":["must"],"tiny bit":["cleaner","of"],"tiny imperfection":["is"],"tiny inefficiency":["by"],"tiny nit,":["Clojure"],"tiny nit-pick":["might"],"tiny nitpick":["I","-"],"tiny pick:":["you"],"tip I":["have"],"tip about":["`sort`,","a"],"tip for":["the"],"tip from":["blcooley."],"tip on":["```frequencies```,","the"],"tip! Will":["refactor."],"tip, I":["was"],"tip, but":["I"],"tip, it's":["clever"],"tip, made":["it"],"tip. Check":["out"],"tip. I":["am"],"tip. I'm":["updated"],"tip. That":["cond"],"tips ,":["thanks"],"tips @jerrold":["thanks!"],"tips on":["how"],"tips, have":["modified"],"tips, thanks.":["Switched"],"tips. Applied":["to"],"tired again":["and"],"title of":["the","*nitpick*"],"to \"Bob\"":["is"],"to \"DRY\"":["up"],"to \"bob\"":["by"],"to \"response\".":["I"],"to \"rna-transcription\"":["by"],"to \"shouting\".":["It"],"to #()":["form"],"to (non-public?)":["helper"],"to *keep*":["in"],"to *shouting*":["with"],"to .toUpperCase?":["I"],"to 100":["iterations"],"to 2":["lines,"],"to 4":["spaces,"],"to :else":["and"],"to :refer":["specific"],"to :require":["and"],"to :use/:only":["as"],"to @alda":["for"],"to @bryana":["for"],"to @eulah":["I"],"to @gretchen's":["suggestion."],"to @luz":["for"],"to @reanna":["for"],"to ASCII)":["I"],"to Clojure":[":)","that","so","and","so","so","_and_","myself,",";-))","as"],"to Clojure,":["so","so","where","and","and","so","this","but","so","so","so"],"to Clojure.":["Is","The"],"to DRY":["up","that","this","that","it","up"],"to FP":["and"],"to Java":["interop,","interop","anyway","methods.","8"],"to Java's":["`.equals`"],"to Lisp-like":["languages"],"to RNA":["atoms,","nucleotides"],"to Racket,":["which"],"to Strategy":["Pattern**"],"to Strings":["in"],"to [`(map":["list"],"to [`map`](http://clojuredocs.org/clojure_core/clojure.core/map)":["combined"],"to [`map`](http://clojuredocs.org/clojure_core/clojure.core/map),":["instead."],"to [`range`](http://clojuredocs.org/clojure_core/clojure.core/range).":["I"],"to [defn-](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/defn-)":["so"],"to [this":["SO"],"to [wikipedia](http://en.wikipedia.org/wiki/Longest_word_in_English))":["is"],"to _and_":["it"],"to _is-dna-nucleotid_'s":["name."],"to `#\"[A-Z]`":["because"],"to `(:use":["[clojure.string])`"],"to `(last":["xs)`","s)`."],"to `(not=":["x"],"to `(or":["(get"],"to `(rand-int":["100)`"],"to `(use":["'clojure-string)`"],"to `.`":["chaining"],"to `T`":["and"],"to `[^\\w]`!":["I've"],"to `\\U`.":["`#\"T\"`"],"to ```.endsWith```":["vs."],"to ```.endsWith```.":["```(="],"to ```str```.":["I"],"to ```to-rna```.":["Is"],"to `anagram-of?`":["it"],"to `anagram`":["since"],"to `any-lcase-chars`":["helped"],"to `apply":["str`"],"to `apply`":["in"],"to `blank?`.":["Overall"],"to `char-array`.":["Java"],"to `clojure.core`":["or"],"to `clojure.string`":["as","namespace,"],"to `clojure.string`.":["I've"],"to `convert_number`.":["I'd"],"to `declare`":["in"],"to `def`":["+"],"to `defn-`,":["as"],"to `defn`":["or"],"to `if`,":["even"],"to `intern`":["was"],"to `leap-year?`":["in"],"to `letfn`,":["would"],"to `lower-case`":["the","and"],"to `merge-with`":["could"],"to `nil-to-zero`":["-"],"to `pred`,":["which"],"to `pretty-print`.":["Use"],"to `question?`.":["Otherwise"],"to `range`":["stil"],"to `range`.(":["Is"],"to `re-seq`":["so"],"to `reduce-kv`":["is"],"to `replace`":["by","a"],"to `require`":["or","thanks"],"to `response-for`?":["It's"],"to `robot-name`":["will"],"to `s/lower-case`":["and"],"to `sentence`":["or"],"to `seq`":["with","-"],"to `sort`":["have"],"to `split`":["on"],"to `str/join`.":["Just"],"to `string/replace`":["sometime"],"to `swap!`.":["Fortunately"],"to `toUpperCase`":["and"],"to `use`":["all","`:only`,","it?"],"to `vec`":["isn't","isn't"],"to `vector`":["and"],"to `word-count`":["but"],"to a":["better","string,","string","`(defn","URL","simple","name","given","dynamic","multi-method","decision","string,","solution","suggestion","matter","question.","version","docstring","regexp","docstring.","local","composition","lower","collection","string.","count","good","wrapper","reader","`let`","separate","simple","nested","more","single","string.","string.","2-D","string","Calendar","concrete","`str`.","function","string","common","given","more"],"to about":["one"],"to access":["the","the","an","an","the"],"to accompany":["the"],"to accomplish":["that","or"],"to account":["for","for"],"to achieve":["the","this,","both"],"to actual":["functions."],"to actually":["read","properly"],"to add":["a","`if","is","more","another","an","docstrings","another"],"to add:":["how"],"to address":["that.","the"],"to admit":["I","to"],"to admit,":["but"],"to adopt":["that","that"],"to agree..":["I"],"to alias":["the","nucleotide"],"to align":["next"],"to all":["the","the","include","of"],"to allow":["further","re-ordering"],"to also":["do","be"],"to always":["search"],"to an":["already","interned","example","inconsistency","anonymous"],"to analyze":["statements"],"to and":["take"],"to another":["function's","function.","name","function,"],"to any":["upper-case"],"to anything":["else","but"],"to appear":["in"],"to append":["another"],"to apply":["lower-case"],"to approach":["the"],"to approve":["your","here"],"to argue":["either"],"to argue,":["I"],"to argument-less":["function"],"to as":["a"],"to ask":["for","collection","a"],"to assemble":["it"],"to assert":["and"],"to assign":["the","vars","descriptive"],"to assure":["that"],"to at":["that"],"to atoms":["in"],"to atoms,":["and"],"to attention":["for"],"to automate":["the"],"to avoid":["accessing","using","it?","regexp","it","calling","the","processing","a","using","repeating","repeating","repeating","doing","this?","the","nesting.","problems","all","using","additional","all","importing","nested","converting","consuming","consuming","converting","implementing","Java","doing","doing","the","repeating","the"],"to avoiding":["the"],"to balance":["my","my","readability"],"to bash":["the"],"to be":["exactly","counted","consistent","public?","a","private?)","a","dealing","more","as","preferable","language","part","DRYer?","a","very","really","smart","exported","public","called","used.","a","explicit","clear","a","a","comparable","space","accurate","idiomatic","an","more","too","a","more","concerned","cleaner,","able","fully","honest","little","more","to","public,","an","the","a","persistent","pretty","expressive.","exported","able","quite","able","pretty","more","independent.","explicit","very","careful","a","faster","one-liners.","checked,","in","called","the","working","consistent","too","worth","called","considered","true.","different","the","much","explicitly","completely","dangerous.","a","shouting","either","a","desired,","toplevel","upper","idiomatic,","(`nucleotide`,","publicly","more","some","defined","very","a","reduced.","the","the","a","a","more","called","unexpected.","a","lazy.","in","lower-case","just","a","evaluated","prime","modified","changed","a","set","a","named","to","a","switched."],"to begin":["with."],"to believe":["that"],"to best":["tools","express"],"to better":["express","reflect","explain","fit"],"to bind":["an","a","the","the","`blank?`"],"to bob":["to"],"to bootstrap":["a"],"to both":["lisps","lisps"],"to bother":["to"],"to break":["out","it","them","the","up","things","apart"],"to bring":["it","this"],"to build":["a","the","up","up","the","the","these","this","the"],"to building":["the","the","`empty-count`:"],"to bust":["out"],"to cache":["the","the"],"to calculate":["the"],"to calendar":["creation"],"to call":["them.","its","`seq`","`get`","something","`str`","the","dna-rna","the"],"to calling":["[`use`]"],"to capture":["the","the"],"to cast":["to","it"],"to change":["the","T.","independently.","that.","more","any","more","now?","that","the"],"to change.":["Is"],"to change?":["How"],"to character":["`\\?`"],"to characters":["again?"],"to chec":["for"],"to check":["against","to","for","for","for","if","for","for","invariants","for","for","for","for","out","their","for","the","for","for","if","explicitly","for","for","for","for","for","for","for"],"to check.":["It"],"to checkout":["\u003ccode\u003efrequencies\u003c/code\u003e"],"to chill":["out."],"to choose":["from"],"to clarify":["what","a","the"],"to clean":["it","up","up","up","up","stuff","the"],"to clear":["up","it"],"to clojure":["so","(and","style","so","style","and","as"],"to clojure.":["Even","I"],"to clojure.core/count":["inside"],"to close":["all","the","out"],"to closing":["out"],"to clutter":["the"],"to code":["and","outside","points."],"to combine":["it","the","the"],"to come":["up","back","before","up","back"],"to comment":["on"],"to communicate":["intent"],"to compare":["characters?","against","maps","the","the","the","the","a","the","the"],"to complain":["about","about,"],"to compose":["later"],"to compose.":["This"],"to concede":["that","that"],"to conclude":["after"],"to confess":["I'm"],"to confine":["that"],"to consider":["some","would","the","is","is","is"],"to consider:":["`:as"],"to construct":["the","an"],"to contain":["the","a"],"to context":["and/or"],"to continue":["this"],"to convention":["and"],"to conventions":["(CamelCased)."],"to convert":["is","each","nil","a","strings","DNA","result","the","without","back","it","it","booleans","to"],"to converting":["the"],"to convince":["them,"],"to count":["which","the","down.","numbers"],"to cover":["everything","the"],"to create":["a","a","defines","a","a","private","a"],"to cut":["my"],"to date":["manipulation"],"to day":["and"],"to deal":["with"],"to debug":["this"],"to decipher":["at","it","why","the"],"to declare":["the","your","them","a"],"to declare,":["it's"],"to declare.":["Looks"],"to decode":["a)"],"to dedicated":["functions"],"to define":["vars","(maybe","vars","a","some","variables","the","them","functions","things","`dna/count`","the","it","`count`","function","local"],"to denote":["the"],"to depend":["on"],"to describe":["what"],"to detect":["the","a","a","the"],"to determine":["the","the","if","what","patterns","whether"],"to development":["environment,"],"to dig":["through","pretty"],"to digit":["into"],"to dip":["into"],"to directly":["access"],"to discover":["`frequencies`"],"to discuss":["is"],"to dive":["deep","into"],"to do":["to","it,","efficiently","this","it.","without","it.","when","split-words","(.endsWith","the","the","this?","just","accomplish","that","the","with","the","so","something","it","this.","it","the","with","this","`#(=","it","that.","some","this","-","is","things","conditional","it","it","it","this","with","it","in","what","something","the","a","this.","this","forward","that.","this","one","it","that","this.","that","or","since","if","this","simple","so","it","so.","this","once,","a","it","anything","with","what","it","it","it","this.","almost","dynamically","most","it.","that.","with","it","and","a","is","it.","it","the","that","the","is","some","like","it,","at","the","something","regex,","a","a","this.","a","into.","assert","it"],"to do,":["but","especially","but","so","you"],"to do.":["(plus","Making"],"to doing":["it","that"],"to drop":["the","it."],"to duplicate":["the"],"to dyba":["for"],"to each":["function.","of"],"to easily":["refer","partially"],"to either":["require","pick","well","explicitly"],"to elucidate":["your"],"to emphasize":["as"],"to enable":["a"],"to encapsulate":["the"],"to encourage":["you","you","you","further"],"to encrypt":["the"],"to end":["with","all","predicates'","your","predicates","methods","functions"],"to enforce":["some"],"to enhance":["legibility","legibility."],"to ensure":["you","that","that","that","that","that","that","all"],"to err":["on,"],"to evaluate":["the","booleans"],"to evaluation":["the"],"to every":["item","call"],"to expand":["the"],"to experiment":["with","with","with?"],"to explain":["what"],"to explaining":["what"],"to explicit":["`fn`."],"to explicitly":[":use","require","communicate","throw","check","return","name","turn","turn","turn"],"to explore":["how","much","list-based"],"to export":["(`shout-response`","i.e."],"to export,":["you"],"to expose":["only"],"to express":["*\"contains"],"to extract":["the","the","the","the","the","the","your","the","the","the","the","the","the","the","the","the","the","the","repeated","the","a","to"],"to factorize":["parts","them?"],"to feedback":["on"],"to figure":["out","what","out","out","out","out","out","out","it","out"],"to filter":["non-numeric","the"],"to finally":["stumble"],"to find":["a","myself","documentation","a","anything.","documentation.","`string/replace`","something","something","a","a","functions","that","a","dna","the","out","it"],"to finding":["if"],"to finish":["going"],"to fit":["as","on"],"to fix":["it","the","this","that?"],"to flow":["from"],"to focus":["on"],"to follow":["your","the","a","easier","and"],"to follow,":["and","especially","although"],"to follow.":["I"],"to force":["this","evaluation","evaluation"],"to format":["expressions","that"],"to forms":["as"],"to fulfill":["such"],"to functional":["programming"],"to functions":["will","that","(even","being","_if_"],"to future":["readers"],"to gain":["readability."],"to generate":["the","the","the","the","the","it.","all","documentation","good,","the","all","the","the","the"],"to get":["the","regexes","the","on","to","used","away","at","approved?","the","even","shorter","the","rid","the","the","the","overly","rid","me","at","quite","rid","around","my","something","used","a","by","some","rid","towards.","too","a","the","used","on","the","rid","rid","people","the","this","rid","the","rid"],"to give":["meaning","the","your","them","names","specific","them","me","some","me","some"],"to go":["this","for","for","with","through","the","backwards"],"to go,":["nice"],"to go:":["what"],"to golf":["this,"],"to good":["effect."],"to grab":["the","the"],"to group":["all"],"to guard":["against"],"to guess":["what","would"],"to hack":["around"],"to handle":["arbitrary","this","but","that),","the","the"],"to handling":["large"],"to have":["it","paid","functions","the","closing","the","\\T","nucleobases","the","a","constants","escaped","a","`clojure.string/replace`","this","more","a","a","them","to","what","commas,","question","to","to","written","a","this","found","a","it","the","the","a","the","them","the","separate"],"to having":["to","to"],"to hear":["your","if","feedback","them.","them.","feedback."],"to heed.":["Thanks"],"to help":["clarify","differentiate","the"],"to helpers":["-"],"to higher-order":["functions."],"to highlight":["matching"],"to hold":["the","shared,"],"to hook":["up"],"to identify":["caps."],"to if":["that"],"to ignore":["it"],"to implement":["the","any","it","your","`nothing?`","`sorted`,","this","a","each","`classify-dna`","`count`;","from"],"to import":["everything","the","symbols","functions"],"to import/use":["a"],"to improve":["on","things","the","this","on","this?","readability.","on"],"to improving":["the"],"to in":["Clojure,"],"to include":["a","a","a","your","two","two","a","all","the"],"to inconsistent":["style"],"to incorrect":["output"],"to increase":["readability?"],"to incur":["the"],"to indent":["condition","2"],"to indicate":["that's"],"to inference":["on"],"to inflect":["whole"],"to influence":["the"],"to inline":["a","the","these"],"to insert":["spaces"],"to interpret":["what"],"to introduce":["either","a","actual","an"],"to ints":["with"],"to invalid":["construct."],"to invert":["the"],"to investigate":["`java.util.Calendar`"],"to invoke":["Emmerson"],"to is":["a","not"],"to it":["(think","with","but","(silence","is","is"],"to it's":["own","basic"],"to it.":["Keep","I","I"],"to its":["own","deprecation."],"to itself)":["as"],"to java":["interop","array"],"to join":["the","it"],"to just":["refer","say","describe","one","do","change","`defn`","map","the","use","`(ns","call","make","inline","inline","return","directly","constructing","use"],"to justify":["the","adding"],"to keep":["things","consistent","indentation","name","consistent","binding","the","functions","the","working","this","the","the","public","the","the","in","a","each","your","what"],"to know":["about","quite","what","about","for","you're","what","it).","if","that."],"to know.":["Do"],"to lean":["more"],"to leap-year?":["--"],"to learn":["it","more","how","and","something","from","about","about","Clojure","about"],"to leave":["it,","it","a","them.","parens","out","them"],"to less":["than"],"to let":["one"],"to letters.":["Much"],"to like":["the"],"to limit":["the"],"to line":["13.","18.","18."],"to link":["new"],"to lisps),":["but"],"to list":["through"],"to little":["of"],"to live":["with"],"to look":["up","into","from.","great,","for","at.","for.","at","a","more","at","further","at","at","at;","at","at","at","at","at.","into","into","at","into","into"],"to lookup":["the"],"to lower":["case","case"],"to lower-case":["them."],"to maintain":["the","readability","that","order"],"to make":["an","sure","the","it","a","this","the","the","the","your","those","it","that","it","`question?`","it","response-for","the","all","the","helper","this","it","use","sure","the","checks","sure","your","a","code","the","a","the","the","it","less","the","the","it","the","this","it","the","the","checks","things","it","`response-for`","out","the","things","your","the","`anagram-of?`","it","the","that","those","them","the","that","idiomatic","that","this","their","the","sure","it","it","a","this","it","it","`response-for`","the","the","them","it","`leiningen`","the","the","them","it","those","it","it"],"to making":["helpers","this"],"to manage":["the"],"to manipulate":["most"],"to many":["phrase"],"to map":["over","out","over","across","the","or","which","across"],"to match":["the","every","all","a","the"],"to me":[":)","...","is","still...","personally.","when",":)","that","to","but","that","that","what...","that","to","(though,","in",":)","as"],"to me,":["would","for","but","but","`blank?`","but","but","because","if","well","requiring","well","great","I","I"],"to me.":["What","One","`zero?`","One","Alternatively,","Alternative","But","By","In","A","Normally,","If","What","Could","You","I","The","The",":)","While","It"],"to meaningful":["variables"],"to meet":["you"],"to mention":["even","the","more","**\\T"],"to merit":["having"],"to minimize":["the","the"],"to mislead":["you"],"to mixing":["compile"],"to modify":["the","different"],"to more":["meaningful","focused","succint","meaningful","meaningful","readable"],"to move":["forward","on,","`(fn","the","your"],"to much":["more"],"to my":["bob","function","eye.","original","unfamiliarity","eye.","next"],"to myself":["to","though,"],"to name":["the","these","my","the","predicates","the","it","conversion","a","it.","these","functions"],"to named":["functions"],"to namespace":["I"],"to naming":["-"],"to narrow":["the"],"to negate":["the"],"to nitpick":["is"],"to noise":["ratio."],"to non-public":["helpers","functions","functions","functions"],"to normal.":[":)"],"to normalize":["words"],"to not":["branch","let","leave","having","call"],"to note":["that"],"to numbers,":["so"],"to obfuscate":["a"],"to offer.":["You"],"to omit":["the"],"to one":["concrete","step.","clause"],"to only":["sort","have","calculate","contain","contain","consider"],"to only_digit.":["Then"],"to optimise":["performance"],"to order":["function"],"to ore":["meaningful"],"to original":["which"],"to other":["clojure","languages."],"to outside":["world.","code."],"to over-engineer":["things,"],"to parse":["a","parentheses","the","mentally."],"to pass":["the","those","`message`","in?","in","message","along.","all","and","the","the","`text`","the"],"to pass.":["Readme"],"to peek":["on"],"to perform":["the"],"to performance":["metrics"],"to permit":["that"],"to personal":["preference."],"to pick":["with","apart"],"to pick,":["in","but"],"to place":["trailing","the","the"],"to plain":["and"],"to play":["around","a","with"],"to point":["you","regarding"],"to polluting":["the"],"to populate":["that"],"to possibly":["help","inspire","simplify"],"to post":["a"],"to pre-calculate":["`alpha`"],"to predicate":["definitions:"],"to predicates":["that"],"to prefer":["native","the"],"to prefix":["with","the"],"to preserve":["atomicity","that"],"to previous":["version,"],"to principles":["and"],"to private":["functions?","methods"],"to process":["the","a"],"to produce":["what"],"to programmatically":["build"],"to proper":["code"],"to protect":["both"],"to prove":["me"],"to provide":["a","this","a"],"to public":["API"],"to pull":["the","in","that","out","\"T\"","out"],"to pursue":["your"],"to push":["back","that","me","the"],"to put":["the","a","constants","the","parens","the","together","declarations","mapping","them","use/require","lines","require","public","a","these","the","the","a","the"],"to python's":["all"],"to r":["so"],"to rain":["on"],"to re-implement":["[`contains?`][1],"],"to re-use":["`bottles`"],"to read":["or","backwards","\"map","aloud","because","because","the","because","and","and","using","using","becomes","the","the","if","until","the","each","and","very","up","and","each","if","and","a","up","in","and","is","if","more"],"to read,":["but","and","if"],"to read.":["Can","Also","If","Note","Maybe","Consider","There's","I'm","I"],"to reading":["a"],"to realign":["the"],"to realize":["that","you"],"to really":["like"],"to reapply":["so"],"to reason":["through,"],"to recheck":["`yell`"],"to recognize":["is","is"],"to recognizing":["acronyms"],"to record":["the"],"to reduce":["the","duplication","clutter","code","itself","this","the","duplication","the","repetition","the"],"to refactor":["in"],"to refactor,":["and"],"to refer":["to","to","to","in"],"to reference":["the","upper-case","what"],"to referred":["you"],"to reflect":["that","your"],"to regex":["search."],"to regexes":["just"],"to rely":["on","on"],"to remain":["in"],"to remember":["is"],"to remove":["the","the","some","the","duplication","the","the","the","`add-frequency`"],"to rename":["the"],"to repeat":["the","`sentence`","that"],"to repeatedly":["n"],"to replace":["a","something","*some*","more"],"to represent":["the","the","individual"],"to require":["that","`clojure.string`,"],"to reserve":["the"],"to resolve":["mapped","this?","this","symbol:","symbol:"],"to resort":["to","to","to","to","to"],"to resorting":["to"],"to respectfully":["disagree"],"to respond,":["but"],"to response,":["and","and"],"to response-for.":["In"],"to return":["both","lists","a","nil","vectors"],"to reuse":["them,","the"],"to review":["submissions"],"to reviewing":["and"],"to revise":["it"],"to rewrite":["`word-count`","to"],"to right":["-"],"to right,":["though"],"to rna":["means."],"to roll":["that","this"],"to run":["through","the","the"],"to said":["reader"],"to satisfy":["both"],"to save":["the","before","a"],"to say":["I","it's","here,","for","-","`(=","\"Woah,","\"Help","I","the"],"to scan":["whole"],"to scope":["things"],"to scoping":["in"],"to scroll":["down"],"to see":["other","you","a","`-\u003e`","people","if","you","you","the","if","if","the","what","what","somebody","the","if","if","if","you","if","`(int","how","the","the","that","what","you","how","a","`[word","the","`sorted-word`","a","if","that","if","if","whether","if","if","it","people","if","the","what's","`clojure.test`","functions"],"to seeing":["other"],"to seek":["for"],"to seem":["to"],"to select":["the"],"to separate":["them?","non-public","configuration","things","the","the","out","the","them"],"to set":["up"],"to share":["between"],"to share).":["So"],"to short":["circuit"],"to shorten":["it","your","this","`clean-phrase`","`clojure.string`"],"to shouting":["takes"],"to show":["intent.","you","that","where","intent,"],"to show,":["that"],"to simplify":["`stringify-keys`","your","and","this","matters","predicates","`shouting?`","`shouting?`","the","the","the","`cond`,","that","things","them","things","the","things.","or","`valid-dna?`","the","`(first","your"],"to simply":["use","generate","`upper-case`,","upper-case,"],"to sink":["in."],"to skip":["the"],"to slightly":["disagree","improve."],"to small":["functions"],"to so":["that"],"to solicit":["names"],"to solve":["this","the","the","this","this","the","the","this.","`silence`:","the"],"to some":["extent.","feedback","external","or"],"to someone":["that","not"],"to something":["shorter,","more","in","like","`reduce`able,","that's","like","more"],"to sort":["out","the","out","and","a"],"to spaced-groups-of":["to"],"to spare":["redundant","oneself"],"to specific":["functions:"],"to specification":["to"],"to specify":["what","both","a","the"],"to speed":["with"],"to speed.":["OO"],"to split":["the","out","out","the","on,","the","the","on."],"to splitting":["would","it"],"to splitting?":["I"],"to spoil":["the"],"to spread":["long"],"to squash":["all"],"to squint":["sometimes."],"to stack":["the"],"to start":["but","extracting","bindings","the"],"to stay":["with","close","at"],"to steal":["some"],"to steal^H^H^H^H^H":["incorporate"],"to stick":["with","with"],"to stitch":["together"],"to stop":["and","using"],"to store":["/","the"],"to str.":["Even"],"to string":["is","functions.","and"],"to submit":["ahead","it","this","a"],"to submit.":["Sorry"],"to substring.":["Maybe"],"to such":["concepts"],"to suggest":["going","a","extracting",":use"],"to support":["Clojure","unicode","destructuring"],"to suppress":["the"],"to swap":["those","one"],"to switch":["to","to","the"],"to symbols,":["that's"],"to systematically":["use"],"to tack":["the"],"to tackle.":["Dealing"],"to take":["some","my","a","two","the","a","your","a","into","two","advantage","out"],"to talk":["about"],"to target's":["acid"],"to teach":["concepts"],"to tell":["just","at"],"to test":["all-caps?","it","them","for","against.","for","for","that","either.","for","for,","for","and"],"to that":["of","value*.","`fn`","set","point,","particular"],"to the":["RNA","spec.","string","docs","next","functions","characters?","next","next","symbols","line","Java","\"T\"","current","Java","responses,","point.","`anagram?`","binding","nucleotide","implementor).","question","Java","fact","Ruby","reader","definitive","code's","string","symbols","whole","string","store","store...\".","Java","bare","point.","problem","reasons","first","`nil-to-zero`-function.","surrounding","`\\T`","cases","functions","point.","mystery","opposite","first","end,","strangeness","`ns`","test","top","string","end","`shouting?`","literal","literal\"","end","cond).","same","same","`defn`","conclusion","amount","shout","conditionals?","next","macro","`response-for`","validation.","style","function","regular","language","words","code.","sort","sorted","assert","top","full","pipeline.","mechanics","reduce.","standard.","parameter:","regular","tests),","namespace","next","use","`:use`","reader","mathematical","other","two","set","slightly","original","given","examples","test","`into`","test","problem.","README."],"to their":["responses?","own"],"to them":["with","through","in","as","as"],"to then":["putting"],"to things":["like","like"],"to think":["it","in","about","about","about","you","I","about","about:","about","that","the"],"to this":["problem","question:","function/map,","submission","kind","code","point.","problem,","code"],"to this;":["thanks"],"to throw":["the","when","an"],"to to":["submit"],"to transcribe":["a"],"to trim":["out","its","as"],"to true.":["Maybe"],"to try":["it","all","out","and","to","some","writing","it","to","out","for","either","to","and"],"to trying":["an"],"to turn":["this","it","the","it"],"to tutorials":["that"],"to tweak":["your"],"to type":["out"],"to types;":["if"],"to understand":["the","and","or","what","what","because","it","the","what","why","and","it","either","every","this","what","the","it","rather","as","as","`drop_and_show`."],"to understand,":["what","and"],"to understand.":["Why","I'd","Then","Thoughts?","I","It's"],"to understand...the":["threading"],"to upcase":["the"],"to update":["this"],"to upper":["and","and"],"to uppercase":["once"],"to use":["a","a","`last`","`re-seq`","the","`:else`","upper-case.","the","basic","\"native\"","a","pure","the","the","character","the","`clojure.string/upper-case`","the","use","`seq`","`last`","a","them.","the","`(require","defn-","`seq`","clojure.string/blank?","instead","`foo?`","`-`","`foo-&gt;bar`","`last`","`let`","non-abbreviated","some","`mapv`","seq","clojure.string/lower-case","-&gt;&gt;","the","a","the","the","count","the","the","vars","one","authenticated","the","the","it","a","`map`","`join`.","nested","``cond``,","that","a","it","it,","`memoize`","your","`frequencies`","character","require/refer","`clojure.string/upper-case`","`nil`","```subs```","`clojure.string`","`defn-`","`defn-`","it","dashes","the","only","```clojure.string```.","a","`alphagram`","`:refer","the","keyword","the","idiomatic","pattern","`some-\u003e`","`when`.","full","constant","the","the","`swap!`","`\\p{javaLowerCase}`","`merge-with`","commas","it","a","a","multiple","it","`(def","`:require`","`not=`","`a-\u003eb`","macros,","the","your","it.","`-\u003e`","the","that","the","`defn-`","`frequencies`,","let,","a","condition","it","the","given","the","the","\"let\"","the","it.","(zero?","native","the","the","`case`","very","them","the","the","recur","the","the","an","`recur`","Atoms","the",":require.","the","simple","`condp`.","`:require`","`:require`","the","the","[`case`](http://clojuredocs.org/clojure_core/clojure.core/case).","the","a","`some`","a","the","a","more","`repeatedly`","the","`cond`"],"to use.":["Also"],"to useful":["functions/strategies"],"to using":["string-specific","clojure.string/upper-case,","the","a","regex,","`-\u003e`","zero?.","first","constant"],"to validate":["input,","the","the","the","the"],"to value,":["there's"],"to variables":["to","`thymidine`"],"to vars,":["so"],"to vector":["with","with","is"],"to vectors":["and","and","since"],"to verify":["by"],"to vertically":["line"],"to very":["poor"],"to waste":["a","it"],"to weed":["out"],"to what":["the","I","you","the","it","the"],"to what?":["Can"],"to when":["to"],"to whether":["or","or"],"to which":["is"],"to with":["US"],"to wonder":["what"],"to word":["count"],"to work":["is","before,","with","on","for","with","just","on","in","through"],"to work,":["since"],"to work.":["Try","ref,"],"to working":["with"],"to worry":["about","about,","about,"],"to wrap":["`sanitize`.","every","their","one's","char"],"to write":["in","it","a","the","the","my","the","this","a","from","ends","more","your","that","an","out","the","in","a","them","a","your","the"],"to you":["though.","on","at","non-working","for","and","the"],"to you,":["so"],"to you.":["Also"],"to your":["friends","nit","suggested","question","latest","functions.","```question?```","code?","suggestions","advantage","regex","code.","namespace.","Regex","other"],"to zoldar":["for"],"to ~1":["check"],"to, as":["I"],"to, but":["I","looks"],"to, for":["example,"],"to, please?":["Maybe"],"to, so":["there's"],"to-nine (int":["\\9))"],"to-rna function":["where"],"to-rna function.":["Although"],"to-rna which":["transforms"],"to. It":["should"],"to. Lastly,":["look"],"to. Might":["look"],"to. Plus":["your"],"to. Since":["the"],"to]` version":["of"],"today that":["for"],"together -":["I"],"together a":["pull","bit."],"together certainly":["feels"],"together is":["actually"],"together lines":["and"],"together the":["seq"],"together with":["the","str,","`\\n`","keywords"],"together. Otherwise":["this"],"tokenized string,":["it"],"ton for":["your"],"ton of":["stuff"],"tone of":["interest."],"tone. I'd":["probably"],"tonight maybe...":["I"],"tons of":["new"],"too (which":["takes"],"too DRY":["causes"],"too after":["all..."],"too as":["to"],"too bad":["to","we"],"too but":["since"],"too by":["putting"],"too clever":["there.","and"],"too complex":["on"],"too complex,":["hope"],"too complex.":["So"],"too dependant":["on"],"too eager.":["As"],"too early,":["before"],"too easy":["in"],"too familiar":["with"],"too far":["would","with"],"too fast.":["Takes"],"too fond":["of"],"too hacky":["to"],"too happy":["with"],"too hung":["up"],"too is":["probably"],"too literal":["to"],"too long":["for","to",":(","and"],"too many":["function","one-offs"],"too much":["readability?","type","readability?","readability?","clarity?","time","about","things","more","work","into","on","reg-ex=fu."],"too much,":["too"],"too much.":[":)","Couldn't"],"too nit-picky":["a","if"],"too picky,":["and"],"too precious":["to"],"too similar":["to","functions."],"too specific":["to"],"too spread":["verically"],"too strongly":["about"],"too sure":["doing"],"too unfamiliar":["to"],"too weak":["to"],"too!! I":["barely"],"too) Also":["tried"],"too). So":["I"],"too, I'm":["not"],"too, but":["I","it'll"],"too, can":["you"],"too, don't":["think"],"too, of":["course,"],"too, so":["I"],"too, until":["I"],"too. I":["didn't"],"too. I'm":["not"],"too. If":["you"],"too. So":["one"],"too. This":["program"],"took a":["vacation","look","similar"],"took advice":["on"],"took an":["optional"],"took care":["of"],"took it":["as"],"took less":["than"],"took lower/upper":["char"],"took made":["the"],"took me":["a","a","some","a"],"took one":["extra"],"took the":["same","same","time"],"took this":["route"],"took was":["to"],"tool at":["hand"],"tool but":["I"],"tool used":["there."],"tool which":["can"],"tools for":["the","the"],"tools like":["[Marginalia](http://gdeer81.github.io/marginalia/)"],"top (`sing`,":["`verse`)"],"top (however":["I"],"top (see":["[this"],"top and":["make","any","flows"],"top level":["def?","constant","first.","(for","without","function","function","function","of"],"top level,":["defining"],"top of":["the","the","the","the","normalize"],"top rather":["than"],"top such":["as:"],"top with":["help"],"top, implementation":["details"],"top, you":["can"],"top-down, mock-heavy":["approach),"],"top-level forms.":["More"],"top-level, non-public":["functions"],"top. `declare`":["will"],"topic going":["on"],"toplevel functions?":["Maybe"],"topological sort":["for"],"torn with":["the"],"tossed in":["a"],"total function":["for"],"totallly drunk":["while"],"totally clear":["what"],"totally didn't":["get"],"totally forgot":["about"],"totally helped":["(even"],"totally independent.":["The"],"totally missed":["that,","the","that.","that"],"totally right":["about",":)","about"],"totally right,":["an"],"totally rock":["the"],"totally see":["how"],"totally valid":["and"],"totally whiffed":["on"],"totally would":["understand","agree"],"touch -":["but"],"touch might":["be"],"touch with":["memoize","handling"],"tough for":["me","me..."],"tour. Why":["would"],"toward or":["are"],"toward using":["the"],"towards duplication":["being"],"towards the":["Clojure"],"towards trying":["to"],"towards. This":["would"],"toy example,":["but"],"toying around,":["don't"],"toying with":["passing"],"track for":["exercism.io?"],"track is":["moving"],"track of":["already","this"],"track; but":["that"],"tracks, so":["I"],"trade off":["if","with","is"],"trade typing":["a"],"tradeoff between":["concise"],"tradeoff would":["be"],"tradeoff, just":["hadn't"],"trading `#(":["..."],"traditional functional":["paradigms"],"trail that":["had"],"trailing \"?\",":["and"],"trailing ')'":["on","on"],"trailing (easier":["to"],"trailing braces":["are"],"trailing bracket":["at"],"trailing closing":["parens"],"trailing parens":["on"],"trailing parentheses":["are"],"trailing parenthesis":["are","on","up.","after"],"trailing/hanging parentheses":["would"],"train wreck":["that"],"trampled all":["over"],"transaction boundaries":["and"],"transaction which":["ensures"],"transactional as":["a"],"transactions like":["Refs"],"transactions with":["multiple"],"transcribe a":["single"],"transcribe which":["only"],"transcribed RNA":["strand"],"transcribing C-&gt;C":["etc."],"transcribing a":["sequence"],"transcription assignment":["for"],"transcription assignment.":["How"],"transcription is":["happening."],"transcription which":["would"],"transcription you":["could"],"transcriptions, but":["had"],"transform char":["-&gt;"],"transform the":["given"],"transform this":["into"],"transform to":["lower"],"transform-char to":["it's"],"transform1 transform2":["transform3)`."],"transformation I":["think"],"transformation more":["descriptive."],"transformation that":["isn't"],"transformation, which":["takes"],"transformation. There":["are"],"transformations that":["the"],"transformed in":["handy"],"transformed to":["upper-case?*"],"transformer. So":["it"],"transforming dna":["to"],"transforming functions":["(done"],"transforming functions.":["You"],"transforming operations":["with"],"transforming/converting functions.":["But"],"transforms a":["sequence","string","sequence"],"transforms instead":["of"],"transforms. This":["leaves"],"transient data":["structures\".","structure?"],"transient instead":["-"],"transients (locally":["mutable"],"transients are":["used"],"translate-nucleotide function,":["since"],"translation map,":["but"],"translation of":["my"],"translation simpler":["as"],"translation) that":["the"],"translations etc":["etc),"],"translator conceit?":["I"],"transliteration at":["all."],"transpose to":["take"],"treat Strings":["as"],"treat a":["regex"],"treat functions":["as"],"treat it":["as"],"treat string":["as"],"treat strings":["as","in"],"treat the":["string"],"treated `let`":["like"],"treated as":["a","a","sequences","sequences","a","a","logical","a","a","a","a","a","a","a","sequences","collections","collections,","a","collections","collections","collections","collections,","collections,"],"treated by":["all"],"treated. Words":["will"],"treating strings":["as"],"treating the":["string"],"treats strings":["as"],"tree anyway":["so"],"trees there.":["It"],"trial-and-error method,":["so"],"triangle that":["isn't","happens"],"triangle validation":["actually."],"triangle, one":["with"],"triangles covered":["already,"],"trick before.":["It's"],"trick but":["is","it's"],"trick is":["that"],"tricks that":["maybe"],"tricky statement":["doesn't"],"tricky. Here's":["what"],"tried `(last":["str)`"],"tried ```use":[":only```"],"tried `last`":["but"],"tried a":["different"],"tried an":["if"],"tried and":["true"],"tried considered":["using"],"tried it":["with","out","that"],"tried not":["typing"],"tried out":["both"],"tried pulling":["the"],"tried that":["but"],"tried that,":["but"],"tried the":["following"],"tried to":["write","write","split","write","make","simplify","make","build","keep","keep","make","implement","make","slightly"],"tried using":["the"],"tried with":["`bigint`"],"tried writing":["`nucleotide-counts`"],"tried yesterday":["but"],"tries to":["determine"],"triggering input":["type)"],"trim as":["well."],"trim its":["input."],"trim out":["any"],"trim since":["blank"],"trim the":["string"],"trim works,":["but"],"trim-leading-1 and":["validate-length"],"trimmed statement":["will"],"trimming leads":["to"],"trimming redundant":["functions"],"tripped up":["by"],"tripping up":["on"],"trivial test":["inputs"],"trivial, so":["helper"],"trololos, if":["you"],"trouble deciding":["on"],"trouble making":["anything","that"],"trouble of":["having"],"trouble than":["it's","it's"],"trouble to":["find"],"trouble with":["accented"],"troubles with":["getting"],"true *only*":["when"],"true about":["result","function's"],"true and":["otherwise"],"true expressions":["return"],"true false```":["is"],"true for":["strings","that"],"true guarantee":["that"],"true if":["s","the"],"true in":["languages","this","both","boolean"],"true of":["the"],"true on":["an"],"true serial":["number","number."],"true that":["this"],"true to":[":else","what"],"true ugly":["solution."],"true up":["front)"],"true …)`":["is"],"true! thanks":["for"],"true). You":["put"],"true)` is":["probably"],"true, I've":["overdone"],"true, might":["be"],"true, which":["you"],"true. However,":["you"],"true. It's":["probably"],"true. Maybe":["I'll"],"truth of":["an"],"truthy for":["```nil```."],"truthy in":["this","Clojure."],"truthy value":["it"],"truthy values":["using"],"truthy. Not":["part"],"try (well,":["except"],"try `(-››":["phrase"],"try a":["version","multimethod","`letfn`"],"try all":["language"],"try and":["come","combine"],"try either":["an"],"try for":["your"],"try having":["a","a"],"try here":["to"],"try it":["a","yourself"],"try out":["these","the","what","different"],"try separating":["the"],"try some":["piping"],"try splitting":["on"],"try that":["myself","out"],"try the":["`assert`"],"try them":["out"],"try this":["without"],"try to":["parse","follow","`require`","keep","push","sort","make","avoid","come","solve","use","sort","balance","find","use","write","remain","use","write","address","get","do","write","DRY","make","post","pull","do","clear","avoid","you"],"try using":["a","a"],"try was":["without"],"try what":["I"],"try writing":["it"],"try your":["way"],"trying ``case``,":["but"],"trying an":["exercise"],"trying do":["with"],"trying it":["out"],"trying new":["things"],"trying that":["out","is"],"trying to":["be","teach","push","run","reflect","evaluate","argue,","go","find","take","be","make","get","break","see","debug","accomplish.","implement.","check.","accomplish","preserve","leave","short","golf","use","think","write","implement"],"tuck them":["upon"],"turn `{\\T":["\\U}`"],"turn a":["string"],"turn all":["of"],"turn functions":["as"],"turn it":["into","into"],"turn out":["to"],"turn the":["string","dna"],"turn them":["into"],"turn this":["into"],"turn to":["`clojure.core`"],"turn, function":["b"],"turn-left/turn-right/move functions).":["This"],"turned back":["into"],"turned it":["into"],"turned out":["nice"],"turning conditions":["into"],"turning them":["into"],"turns out":["that","that"],"turns out,":["it"],"tutorial on":["Refs..."],"tutorials that":["cover"],"tutorials, I’ve":["started"],"tweak is":["using"],"tweak your":["whitespace;"],"tweaks I'd":["suggest"],"tweaks and":["you"],"twice (once":["in"],"twice as":["much","many","slow"],"twice for":["each"],"twice in":["two","two","the"],"twice on":["each"],"twice per":["input."],"twice the":["phone"],"twice, I":["am"],"twice, is":["for"],"twice. A":["word"],"twice. Could":["you"],"twice. So":["ifnil?"],"twice. With":["that,"],"twice. consider":["[`let`](http://clojuredocs.org/clojure_core/clojure.core/let)"],"twice? trim-leading-1":["and"],"twillis, i":["misunderstood"],"twillis, there":["is"],"two (get":["db"],"two F's":["in"],"two are":["private."],"two arguments":["(it","was","could"],"two arguments?":["#(="],"two because":["I"],"two calls":["to"],"two characters":["T"],"two constants":["with"],"two different":["places,","opinions","place"],"two expressions":["-"],"two facts:":["`map`"],"two failures":["but"],"two fn":["names.","names."],"two forms":["of"],"two function":["names","names."],"two functions":["are","you've","shouldn't","when","don't"],"two functions,":["and"],"two little":["things:"],"two macros":["is"],"two mapping":["functions,"],"two mappings,":["one"],"two maps":["with"],"two methods":["(so"],"two methods.":["You"],"two more":["(optional)"],"two namespaces.":["Some"],"two nitpicks":["above"],"two other":["sides,"],"two others":["doesn't"],"two parts":["-"],"two places":["and","you"],"two predicates":["are"],"two sequence":["operations"],"two simple":["operations."],"two small":["nits:"],"two spaces":["are","are","and"],"two spaces,":["becase"],"two spaces.":["For"],"two steps.":["It's"],"two test":["cases—one"],"two things":["at","that"],"two transforms":["instead"],"two values?":["In"],"two very":["similar"],"two ways":["to"],"two ways:":["either"],"two weeks":["to"],"two words":["are","with"],"two worst":["variable"],"two-line function":["but"],"two. I":["think"],"tying yourself":["to"],"type and/or":["level"],"type as":["input","original","input"],"type conversion":["is"],"type is":["only"],"type of":["beverage","statement?","phrase","phrase,","message's"],"type out":["this"],"type system":["and"],"type systems":["for"],"type used":["in"],"type) -":["how"],"type, but":["I"],"type, not":["just"],"type-responses and":["the"],"type-specific functions.":["I"],"type. Because":["of"],"type. So":["you're"],"types and":["java"],"types at":["the"],"types of":["conditions","lists,"],"types or":["records"],"types; if":["someone"],"typical Clojure/Lisp":["style"],"typical string":["operations"],"typically I":["would"],"typically turn":["to"],"typically use":["lisp-case,"],"typically used":["when"],"typing \".\"":["makes"],"typing a":["few"],"typing by":["using"],"typing in":["order"],"typing on":["phone"],"typing the":["closing","closing","previous"],"typo and":["clojure.string"],"typo in":["comment."],"typo? Suspect":["you"],"typos made":["while"],"ugliness of":["calling"],"ugly (a":["dynamic"],"ugly `rand-char`":["function"],"ugly `re-seq`":["but"],"ugly and":["less"],"ugly as":["hell..."],"ugly so":["I've"],"ugly solution.":["I"],"ugly to":["me."],"ugly use":["of"],"ugly, perhaps":["you"],"ugly. Certainly":["I"],"ugly. Is":["there"],"ugly. Please":["pick"],"ultimately feel":["like"],"ultimately felt":["this"],"unable to":["to"],"unambiguously states":["what"],"unbenchmarked and":["likely"],"unbound var":["to"],"unclear what":["this"],"unclear why":["the"],"unclear, something":["like"],"uncluttering the":["code."],"uncommon to":["see"],"uncovered edge-cases,":["then"],"undecided on":["whether","whether"],"undefined) but":["would"],"undefined, I":["think"],"under aliased":["namespace,"],"under any":["other"],"under each":["other"],"under lexical":["let"],"under root":["bound"],"under the":["hood).","title"],"underlying data":["representation"],"underlying implementation":["of"],"underlying. It":["feels"],"underscore in":["names","names"],"underscores are":["a"],"understand `drop_and_show`.":["I"],"understand and":["follow.","maintain."],"understand as":["`(ends-with?","a"],"understand at":["a"],"understand because":["there's"],"understand correctly,":[":use","there's"],"understand either":["way."],"understand every":["piece"],"understand for":["someone"],"understand it":["does","for","like",";)"],"understand or":["debug"],"understand rather":["than"],"understand than":["the"],"understand that":["you","you"],"understand the":["function?","threading","full","code","full","difference.","condition","problem","code","task","reason"],"understand there":["is"],"understand this":["function."],"understand what":["you're","you","the","your","they","the","you","`dec-each-value`","you're"],"understand when":["to"],"understand why":["you","you"],"understand why.":["Any"],"understand you":["rather"],"understand, and":["I"],"understand, the":["::"],"understand, what":["the"],"understand. I":["would"],"understand. I'd":["also"],"understand. It's":["good"],"understand. Then":["went"],"understand. Why":["didn't"],"understand...the threading":["macros"],"understandability of":["code."],"understandable, we're":["not"],"understanding can":["be"],"understanding is":["that","that","that"],"understanding it,":["could"],"understanding of":["the","how"],"understanding the":["code,","intent"],"understanding your":["approach."],"understands the":[":default"],"understood by":["most."],"understood what":["you"],"understood your":["comment."],"understood. You":["didn't"],"underwhelming. I":["thought"],"undesirable to":["me."],"undocumented constants":["`\\T`"],"unequal pair":["="],"unequal pairs.":["So"],"unexpected. If":["you"],"unfamiliar to":["me."],"unfamiliar with":["standard","clojure."],"unfamiliarity with":["clojure"],"unfortunate; I":["wouldn't"],"unfortunately needed":["the"],"unfortunately this":["is"],"unhandled case,":["but"],"unicode letter":["regex,"],"unicode letters":["and"],"unicode letters.":["It"],"unicode. Consider":["if"],"uniform across":["would"],"uniform, you":["could"],"uniform. Other":["than"],"unify some":["of"],"unimprotant, but":["is"],"unique about":["this"],"uniqueness required":["is"],"unique… if":["it"],"unit test":["would"],"universal internal":["representation"],"unless absolutely":["necessary"],"unless the":["predicate"],"unlike the":["other"],"unlikely case":["that"],"unlikely to":["change"],"unlock the":["next"],"unnecessarily be":["passed"],"unnecessarily, since":["it"],"unnecessary -":["lists","a","a","you","string","the"],"unnecessary and":["I","may"],"unnecessary because":["strings","map"],"unnecessary for":["functions"],"unnecessary in":["`sort-chars`.","the"],"unnecessary layer":["of"],"unnecessary processing":["if"],"unnecessary, `(db":["level"],"unnecessary, since":["it's"],"unnecessary. Alternatively,":["you"],"unnecessary. Anyway,":["the"],"unnecessary. Either":["way,"],"unnecessary. My":["next"],"unnecessary. Other":["than"],"unnecessary. Strings":["work"],"unnecessary. You":["can"],"unnecessary. `anagram?`":["could"],"unordered nature,":["that's"],"unrecognised sentence":["-"],"unspecified and":["untested"],"unspecified, but":["one"],"unsure about":["it.","the","its","the"],"unsure if":["people"],"untested case,":["so"],"until I":["read","got","came","started"],"until `reset-name`":["is"],"until `robot-name`":["is"],"until a":["whitespace."],"until after":["I"],"until it":["hits"],"until it's":["beautiful"],"until just":["now."],"until now.":["That'll"],"until someone":["on"],"until you":["pointed","helped","get","really","actually"],"untouched nucleotides":["seemed"],"unused code":["like"],"unused s":["variable."],"unusual about":["the"],"unusually cased":["words?"],"unusually cased?":["Like"],"unwanted characters":["from"],"unwanted chars.":["yours"],"up I":["buried"],"up `clojure/string`":["with"],"up `transform-row`":["using"],"up a":["bit:","few","smidge.","few","little.","simplification"],"up all":["the","my"],"up already":["in"],"up and":["submitted"],"up as":["a"],"up at":["all?"],"up being":["nearly","expanded","less","hard"],"up by":["my","splitting"],"up caching":["all"],"up calculating":["the"],"up change":["functions"],"up dynamically,":["or"],"up each":["condition"],"up empty":["with"],"up for":["that.","too"],"up from":["there,"],"up in":["nested","the"],"up is":["`map-to`"],"up like":["that,"],"up my":["knowledge"],"up on":["the","that","things","comments","the","the","the","it","`condp`","`nil`","the"],"up onto":["the"],"up rethinking":["this."],"up seems":["reasonable"],"up shout?":["-\u003e"],"up significantly":["by"],"up some":["duplication."],"up that":["thymine","`cond`"],"up the":["docs","operation","threading.","repetition","parts","domain","whole","chain","sentence","first","`pretty-print`","wrong","clauses","function","\"use\"","strings","strings."],"up this":["algorithm"],"up to":["you","the","line","speed","speed.","this","`word-count`","you"],"up to,":["so"],"up using":["whatever","regular","two","2"],"up what":["the"],"up when":["I"],"up with":["a","`dna/dna-to-rna`","a","native","after","a","YET","it","this","a","`(defn-","(=","the","that","the","empty","the","this"],"up without":["losing"],"up your":["new","silence","`clojure.string/*`"],"up. Definitely":["helps"],"up. Here's":["a"],"up. I":["don't"],"up. In":["this"],"up. It's":["syntactically"],"up. Soon":["I"],"upcase instead":["of"],"upcase the":["string"],"update my":["code"],"update this":["one"],"update, it":["looks"],"update-in suggestion.":["Thanks."],"updated all-caps?":["to"],"updated code":["I've","using"],"updated it":["to"],"updated my":["code,","solution"],"updated the":["code","tests","test/example","code","formatting","code","implementation","submission."],"updated to":["use","use","use"],"updating the":["formatting"],"upload the":["WIP"],"upon `phrase`":["but"],"upon in":["Clojure.","the"],"upon it.":["If"],"upon the":["previous"],"upon this":["solution"],"upon, at":["least"],"upper and":["lower","lower"],"upper bound":["characters."],"upper bounded":["by","by"],"upper case":["character?","before?","characters,","by","string","letter"],"upper case)":["and"],"upper-case by":["the"],"upper-case character":["in"],"upper-case characters":["and"],"upper-case from":["the"],"upper-case in":["this"],"upper-case instead":["of"],"upper-case text,":["or"],"upper-case version":["the"],"upper-case will":["work"],"upper-case). I'm":["not"],"upper-case)]` form.":[":require"],"upper-case, lower-case,":["etc."],"upper-case` is":["a"],"upper-cased version":["of"],"upper-casing the":["entire"],"uppercase (as":["now)."],"uppercase letter":["to","that"],"uppercase letters":["in"],"uppercase more":["times"],"uppercase once":["in"],"uppercased version":["for","of","of","of","of","of"],"uppercasing/comparing strings,":["and"],"uracil **AND**":["replacing"],"uracil and":["thymidine."],"uracil are":["things"],"uracil in":["dna-string\"."],"uracil public.":["It"],"uracil to":["remove"],"uracil) but":["readability"],"uracil. But":["again"],"us \"why\"":["we"],"us in":["mind"],"us to":["a"],"usage closing":["over"],"usage if":["you"],"usage in":["your"],"usage of":["`clojure.string/blank?`","google","python","types","`condp`","threading","chaining","`atom`","`frequencies`,","`let`,"],"usage there":[":)"],"usage though.":["From"],"usage would":["look"],"usage, but":["yeah"],"usage, though.":[":)"],"usage. If":["I"],"usage. Will":["have"],"usage; it":["felt"],"use \"let\"":["rather"],"use \"math\"":["And"],"use \"native\"":["clojure"],"use &amp;":["require,"],"use '?'":["character"],"use (in":["this"],"use (last":["x)"],"use (zero?":["x)"],"use -&gt;&gt;":["for"],"use :refer":["in"],"use :require":["with"],"use :require.":["The"],"use ?":["in"],"use Atoms":["for"],"use Clojure's":["[`blank?`](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/blank?)","`=`"],"use Java":["string","Calendar","but"],"use Python's":["\"\"\""],"use Refs":["which","which"],"use [`(every?":["som-set"],"use [`clojure.string/blank?`][1]":["to"],"use \\?":["literal."],"use `%`":["for"],"use `(:require":["[clojure.string"],"use `(anagram-checker-for":["word)`"],"use `(apply":["str","str","str"],"use `(boolean":["XYZ)`"],"use `(def":["^:private","answer-to-question"],"use `(defn":["function-name"],"use `(int":["\\A)`,"],"use `(require":["...)`"],"use `(str":["...)`"],"use `(students":["number"],"use `-&gt;&gt;`":["instead"],"use `-\u003e`":["in"],"use `-`":["instead","as"],"use `.endsWith`":["there"],"use `:as":["str`"],"use `:as`":["to"],"use `:else`":["instead","branch","instead"],"use `:exclude`":["now.","to"],"use `:keywords`":["instead"],"use `:only`),":["but"],"use `:refer":[":all`."],"use `:refer`":["to"],"use `:require`":["with","instead","and","in","so"],"use `\\p{javaLowerCase}`":["and"],"use `\\w+`":["instead"],"use ``Character/isLetter```":["to"],"use ```(split":["#\"\\W+\")```"],"use ```:require```":["instead"],"use ```Java.String```,":["it"],"use ```clojure.string/replace```.":["I"],"use ```clojure.string```.":["In"],"use ```first``":["and"],"use ```frequencies```":["here..."],"use ```join```":["so"],"use ```subs```":["you"],"use ``cond``,":["all"],"use `a-\u003eb`":["to"],"use `alphagram`":["in"],"use `blank?`":["directly.","instead"],"use `case`":["for","instead."],"use `case`.":["One"],"use `clj-time`":["here"],"use `clojure.string/blank?`":["instead."],"use `clojure.string/blank`.":["That'd"],"use `clojure.string/lower-case`.":["There's"],"use `clojure.string/upper-case`":["rather","and","instead"],"use `clojure.string`":["i"],"use `cond`":["there"],"use `condp`.":["When"],"use `def`,":["`defn`"],"use `defn-`":["for","to","rather","for","more."],"use `defn-`,":["the"],"use `defn-`.":["For"],"use `empty?`":["instead"],"use `foo-&gt;bar`":["(there's"],"use `foo?`":["for"],"use `format`":["style"],"use `frequencies`":["merged","instead","rather"],"use `frequencies`,":["which"],"use `if`":["I'll"],"use `intern`":["to"],"use `join`.":["Consider"],"use `last`":["and","to","in","instead","to","thanks","instead"],"use `let`":["instead"],"use `let`,":["`letfn`,"],"use `map`":["instead","for"],"use `mapv`":["and"],"use `memoize`":["I"],"use `merge-with`":["in"],"use `n-bottles`":["to"],"use `nil`":["rather"],"use `not=`":["that"],"use `ns`":["special"],"use `nucleotide-counts`":["to"],"use `partial`":["anyway?","for","but"],"use `re-seq`":["to","with"],"use `recur`":["when"],"use `repeat`.":["Maybe"],"use `repeatedly`":["in"],"use `require`":["the","instead.","instead.","instead.","without"],"use `s/split`":["if"],"use `seq`":["there.","on"],"use `some-\u003e`":["macro."],"use `some`":["if"],"use `swap!`":["in","with"],"use `update-in`":["instead"],"use `upper-case`":["without"],"use `when`":["instead"],"use `when`.":["There's"],"use a":["`let`","`let`","more","more","string","regex","single","bad","simple","`cond`","let","property","better","`ns`","positive","case","single","String","language","different","map","`frequencies`","pre","function","couple","case","lot","set","symbol","`case`","require"],"use an":["`if`","atom","`if`."],"use and":["required"],"use assertion":["to"],"use authenticated":["encryption"],"use basic":["collection"],"use by":["writing"],"use case,":["you"],"use character":["classes","literals"],"use clojure":["day"],"use clojure's":["`upper-case`"],"use clojure.string/blank?":["when","instead","rather","instead"],"use clojure.string/lower-case":["to"],"use commas":["when"],"use condition":["map."],"use condp":["with"],"use constant":["definition"],"use count":["to"],"use dashes":["for"],"use declaration":["you"],"use defn":["instead"],"use defn-":["which","for"],"use destructuring":["for","in","to"],"use different":["strategies"],"use directly":["maps"],"use docstrings":["rather"],"use either":["`(apply"],"use elsewhere,":["nil"],"use emacs'":["`clojure-mode`"],"use explicit":["control"],"use for":["`frequencies`","require"],"use full":["meta-data"],"use function":["composition"],"use get":["for"],"use given":["the"],"use here":["instead"],"use idiomatic":["naming"],"use in":["your","your","such","a","the","the"],"use instead":["of"],"use is":["functionally","perfect"],"use isLetterOrDigit":["but"],"use it":["the","here","here","in","that","all","in","for","in","that","in","like"],"use it,":["thanks"],"use it.":["Of","I"],"use keyword":["form"],"use last.":["When"],"use let,":["like"],"use lisp-case,":["the"],"use lowercase,":["hyphenated"],"use macros,":["but"],"use map":["getters"],"use more":["descriptive","functional","of"],"use most":["special"],"use multiple":["dispatch,"],"use names":["like"],"use native":["functions"],"use nested":["``if``"],"use non-abbreviated":["words"],"use nucleotide-counts,":["and"],"use of":["`frequencies`","a","clojure.string/blank?.","every?,","private","\"heard\",","a","`memoize`","`partial`","intention-revealing","clojure\"","`partial`!","regular","re-seq.","`frequencies`","`reduce`","`-›`","a","`reduce`.","that.","recursion","frequencies.","partial","a","`partial`","native","`get`","`zero?`.","destructuring","destructuring.","transients","libraries.","`frequencies`","-&gt;&gt;","the","65","clojure.string","`merge`","`reductions`","`apply`.","`some`.","`ns`","`:require/:refer`","the","the","`java.lang.Character`","reduce.","`except-self`","`some`","the","clojure.string.","a","the","`frequencies`","`frequencies`.","`frequencies`.","`atom`.","```str```","something","frequencies.","more","regex","[`defn-`](http://clojuredocs.org/clojure_core/clojure.core/defn-)","`seq`","the","the","`condp`","`cond`","let","`mapv`","apply","`partition","`let`","assert","parens","defmacro","the","`(zero?","vectors","a","regular","`declare`.","`some`","the","the","the","problem-specific","the","regular","the","`empty?`","regex","the","`every-pred`","`use`","`fnil`","the","the","them.","`reverse`,","regex","str/trim","cond","the","a"],"use one":["over","of"],"use one.":["```replace```"],"use only":["public","alias","core","one"],"use part":["on"],"use pattern":["matching"],"use pre":["(and"],"use predicate":["functions","methods,","functions"],"use pure":["Clojure."],"use question":["marks"],"use re-match":["instead"],"use recur":["when"],"use reduce":["rather"],"use regexes":["for"],"use regular":["expressions."],"use require/refer":["over"],"use seq":["last"],"use sets":["(and"],"use short-circuitring":["`or`"],"use shortcuts":["in"],"use simple":["string"],"use simply":["`or`","`(apply"],"use some":["readability","defs"],"use something":["from","more","like","a"],"use standard":["clojure"],"use string":["functions"],"use string's":["replace"],"use textmate":["and"],"use that":["describes","line.","(you","method.","fact","return","value"],"use the":["```.endsWith```","symbol","`str/`","keyword","keyword","built-in","helper","native","other?","keys","thread","#(…)",":use","suffix","reduce","`last-letter`","functions","excluded","cond","predicates","set","`defn-`method.","```statement```","`recur`","`require`","Java","multi-arity","proper","Java","character","[`upper-case`](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/upper-case)","characters","name","slightly","built-in","`:gen-class`","following","clojure's","**#\"...\"**",":use","threaded","thread-first","`s`","functions","thread","original","`assert`","Clojure","namespace","data-driven","namespace","namespace","`cond`","board","namespace","`swap!`","return","`^:private`","function","`when`","`in?`","threading","more","namespace","anonymous","suggestion"],"use them":["wise.","to","consistent.","again,"],"use these":["to"],"use this":["columnar","style"],"use those":["to","more."],"use those.":["Is"],"use threading":["macro","macro"],"use to":["your","simplify"],"use use":["yet."],"use vars":["instead"],"use vectors.":["So"],"use very":["simple"],"use vim":["with"],"use wide":["range"],"use wider":["range"],"use with":[":require","slight"],"use your":["`pluralize`","suggestions."],"use zero?":["and"],"use, I":["promise"],"use, so":["if"],"use. A":["small"],"use. Also":["the"],"use. I":["think"],"use/require inside":["`ns`","`ns`"],"use? In":["the"],"used \"code":["is"],"used \"s\"":["as"],"used -":["it"],"used -&gt;&gt;":["you"],"used -\u003e":["rather"],"used [condition":["map][1]"],"used `(if":["(zerop?...`"],"used `(random-string-range":["3"],"used `-&gt;&gt;`":["in"],"used `:else`":["to"],"used `Character/isLowerCase`":["just"],"used `\\W+`,":["couldn't"],"used ```(=":["(last"],"used ```use```":["rather"],"used `blank?`.":["How"],"used `clojure.string.blank?`":["in"],"used `condp`":["or"],"used `contains-ucase-chars`":["and"],"used `frequencies`":["before,"],"used `inc`":["and"],"used `last`":["to"],"used `let":["statement`."],"used `let`":["to"],"used `letfn`":["to"],"used `re-seq`":["in"],"used `sort`,":["which"],"used a":["`let`","single","composition","case","map","map"],"used as":["functions","functions?","the","functions,","a","functions,","a","functions.","a","functions"],"used blank?":["in"],"used by":["tools","the"],"used clojure.string/upper-case.":["I"],"used condition":["map"],"used elsewhere":["it"],"used for":["catch-all","a","situations","`=","local"],"used here.":["I"],"used here?":["The"],"used in":["previous","one","one","one","one","one","names.","one","two","one","most","past","past","past","a","one","one","one","one","one","clojure","some","one","word-count\"","tests","`cond`","the","str","the","one","the","all","[Let"],"used inappropriately":["from"],"used independently":["of"],"used inside":["`ns`"],"used instead":["of","of"],"used it":["to","in","in","in","in","was","before.","right?"],"used metadata":["before,"],"used on":["multiple","top"],"used once":["and"],"used only":["for","as"],"used something":["more"],"used sort-by":["because"],"used symbols":["from"],"used than":["`true`"],"used that":["before.","instead","in","might"],"used the":["function","same","\"thread"],"used there.":["Although"],"used this":["option:","to"],"used threading":["macros?"],"used to":["working","give","it","them.","be","reading","in","populate","write","scoping","make","python's","get"],"used to,":["but"],"used used":["here?"],"used very":["often","often"],"used when":["there's"],"used where":["appropriate."],"used with":["anagrams","a"],"used without":["namespace,"],"used! A":["riddle!"],"used. I":["like"],"used. I've":["not"],"used. Is":["this"],"used. It":["would"],"used. Other":["than"],"used. That":["threads"],"used. You":["should"],"used? It's":["always"],"useful built":["in"],"useful discussions":["and"],"useful enhancement":["[to"],"useful enough":["to"],"useful for":["you"],"useful functions":["defined","for"],"useful functions/strategies":["to"],"useful generating":["my"],"useful generic":["functor"],"useful if":["you"],"useful in":["Google.","cases"],"useful thing":["to"],"useful to":["know.","you."],"useful trick":["is"],"useful w/":["`clojure.core/frequencies`."],"useful ways":["-"],"useful when":["(response-for","function"],"useful! Actually":["I"],"useful! And":["that"],"useful, although":["I'm"],"useful, you":["could"],"useful. You":["can"],"usefully named":["helper"],"usefulness of":["splitting","pre-filtering"],"useless under":["any"],"user calls":["`classify`."],"user create":["valid"],"user of":["this"],"user your":["sentiment"],"user, so":["a"],"user=&gt; (#{\\a":["\\b","\\b","\\b","\\b","\\b","\\b"],"user=&gt; (add":["1"],"user=&gt; (def":["add","silence?","word"],"user=&gt; (macroexpand-1":["'(-&gt;","'(-&gt;"],"user=&gt; (require":["'[clojure.string"],"user=&gt; (silence?":["\"\")"],"user=&gt; (time":["(dotimes","(dotimes","(dotimes","(dotimes","(dotimes","(dotimes"],"user=\u003e (defn":["scope-test","scope-test"],"user=\u003e (if":["\"abcd\"","\"abcd\""],"user=\u003e (list":["\"\"\"xyz\"\"\")"],"user=\u003e (macroexpand":["'(defn"],"user\u003e (apply":["str"],"user\u003e (def":["dna-seq","dna-seq","strand"],"user\u003e (silence?":["\"4?\")"],"user\u003e (time":["(def","(def","(def","(def","(def","(def","(every?","(re-matches","(dotimes","(dotimes"],"uses `?`.":["Making"],"uses `cond`,":["but"],"uses `merge`,":["`reduce-kv`,"],"uses a":["cleaned"],"uses another.":["Definitely"],"uses count,":["and"],"uses hyphens":["instead"],"uses native":["sort"],"uses polymorphism":["with"],"uses strings":["rather"],"uses the":["%1,%2","case","simple","multi-collection"],"uses this":["terminology;"],"using \".add\",":["I"],"using \"frequencies\"":["was"],"using \"map\",":["you"],"using 'cond'":["to"],"using (=":["msg"],"using (declare)":["rather"],"using -&gt;":["to"],"using 2":["macros."],"using 2-space":["indents"],"using :only":["in"],"using :require":["(with",":refer"],"using \u003ccode\u003econdp\u003c/code\u003e":["by"],"using \u003ccode\u003edef\u003c/code\u003e":["and"],"using Clojure":["instead"],"using Clojure's":["bulit-in"],"using Date":["because"],"using Java":["method","interop","interop","functions?","interop"],"using Refs,":["Atoms,"],"using Regex":["instead"],"using [-&gt;](http://clojuredocs.org/clojure_core/1.3.0/clojure.core/-%3E)":["or"],"using [behaviorist][1]":["jargon."],"using [the":["thread-first"],"using `#lastIndexOf`":["anyway."],"using `(:refer-clojure":[":exclude"],"using `(apply":["str"],"using `(map":["not="],"using `-\u003e`":["instead","to"],"using `-››`":[":)"],"using `:else`":["here"],"using `:only`":["to"],"using `:refer-clojure`":["in"],"using `:refer`":["but"],"using `:require`":["in","in","in","to","in","in","instead","in"],"using `:require`,":["and"],"using `:use`":["so"],"using `\\w+`":["does"],"using `\\w+`.":["Look"],"using ```clojure.string/blank?```":["in","instead?"],"using ```clojure.string/replace```.":["Have"],"using ```if```":["statements"],"using ```re-seq```":["instead"],"using ```seq```":["instead"],"using `anagram-matcher`":["to"],"using `blank?`":["it","instead"],"using `clojure.string/replace`":["or","might"],"using `clojure.string`'s":["`replace`."],"using `cond`":["instead","instead","couldn't","instead","rather","rather","instead","before."],"using `cone`":["instead"],"using `dec`":["and"],"using `declare`":["just","and"],"using `defn-`":["instead"],"using `defn`":["instead"],"using `empty?`":["when"],"using `first`/`second`.":["`sorted-map`"],"using `fn`,":["but"],"using `frequencies`":["instead",":D","instead","to"],"using `interleave`.":["`str`"],"using `into":["{}`,"],"using `is-`":["while"],"using `java.lang.Math`.":["It"],"using `last`":["and","to","over","to","and","rather"],"using `last`,":["which"],"using `let`":["over","destructuring"],"using `let`?":["My"],"using `let`s":["to"],"using `letfn`":["for","maybe?","do"],"using `map`":["-"],"using `mapv`":["instead"],"using `merge`":["to"],"using `not=`":[":-)."],"using `ns-resolve`.":["I"],"using `partial`":["and"],"using `partial`,":["why"],"using `re-matches`?":["Don't"],"using `re-seq`":["which","instead","and","to","to","instead"],"using `reduce-kv`":["and","would"],"using `reduce`":["instead","instead"],"using `replace`":["on"],"using `require`/`refer`":["like"],"using `silent?`":["or"],"using `some":["..."],"using `string`":["as"],"using `update-in`":["along"],"using `use`.":[":)"],"using `vec`":["or"],"using `when-not`":["instead"],"using `xs`":["and"],"using a":["regular","native","more","character","Java","regex","`string/replace`,","function","threading","constant","function","hash-map","variadic","default","character","different","sort","closure.","closure","`cond`","private","default","regex","regular","set","regex.","handful","map","map","range","transient","range","different","lamba","negative","`for`"],"using actual":["`:pre`"],"using all":["built-ins,","the"],"using an":["ordered","initialized","explicit"],"using any":["`:require`"],"using atoms":["in"],"using by":["mapping"],"using clojure":["version"],"using clojure.core/count":["and"],"using clojure.string":["instead"],"using clojure.string/upper-case,":["I'm"],"using conditionals":["at"],"using constant":["even"],"using constants":["is"],"using declare":["on"],"using def":["and","rather"],"using defn-.":["They're"],"using descriptive":["variables"],"using destructuring.":["See:"],"using different":["colors"],"using directly.":["I'll"],"using e.g.":["upper-case"],"using either":["`identity`","`condp`"],"using explicit":["recursion,"],"using external":["libraries"],"using first":["and"],"using frequencies":["and","for"],"using function":["reader"],"using functions":["seems"],"using grade":["in"],"using higher":["level"],"using in":["`cond`"],"using indentation":["like"],"using inline":["comments"],"using it":["(i.e.","from","to","to","for?"],"using it's":["fully-qualified"],"using java":["interop.","interop"],"using just":["the"],"using last":["and"],"using left/right/advance":["functions"],"using less":["nesting."],"using letfn":["rather"],"using list":["comprehensions.","comprehension"],"using logic,":["and"],"using map":["getter"],"using maps":["as"],"using more":["functions"],"using multimethods":["more"],"using multimethods.":["Basically"],"using mutable":["state,"],"using native":["methods"],"using nucleotide-count":["here."],"using one":["of","helper","of"],"using paredit":["in"],"using partial":["here","application","application"],"using partial,":["why"],"using private":["functions","functions"],"using question":["marks"],"using raw":["string"],"using regex,":["you"],"using regular":["expressions?","expressions","expressions"],"using require/refer":["so","so"],"using separate":["functions"],"using seq":["functions"],"using set":["literal"],"using sort":["is"],"using str.blank?":["instead"],"using string":["replacement"],"using string-specific":["functions"],"using strings":["except"],"using such":["a"],"using the":["Java","name","built-in","threading","Java","namespace","macro","`:require`","constant","-&gt;","variable","same","`-›`or","shorter","`-›`","`-›`","same","map","bound","shorthand","`:as`","`-\u003e\u003e`","[thread-last","```defn-```","methods","`#(…)`","threading","fact","[`upper-case`](http://clojure.github.io/clojure/clojure.string-api.html#clojure.string/upper-case)","dot","character","`if`","nucleotide","argument","`frequencies`","namespace","[anonymous",":pre","map","-\u003e\u003e","-\u003e\u003e","`partial`","anonymous","string","`assert`","\"frequencies\"","time","require","`assert`","assert"],"using them":["anywhere","will","polymorphically"],"using them;":["it"],"using this":["macro"],"using translation":["map,"],"using two":["arguments","methods","functions"],"using type-specific":["functions."],"using upcase":["instead"],"using upper-case":["instead"],"using vector":["but"],"using whatever":["bits"],"using your":["`count`"],"using, avoiding":["clashes"],"using, well,":["`clojure.core/count`"],"using```(ns bob":["[:require"],"usual approach":["to"],"usual solution":["to"],"usual style":["recommendation","for","in"],"usual to":["use"],"usually abstract":["in"],"usually becomes":["clear"],"usually good":["practice"],"usually have":["those"],"usually not":["on","worry"],"usually omit":["the","the"],"usually only":["want","done"],"usually placed":["on"],"usually preferred":["to"],"usually see":["`(fn"],"usually separated":["by"],"usually the":["predicate"],"usually use":["`:as"],"utilities from":["there."],"utlizing pre":["and"],"utterance) \\?)```":["doesn't"],"vacation and":["thanks","I'm"],"vacation now,":["so"],"vacation, so":["a"],"vague and":["this"],"vague in":["the"],"vague. Why":["are"],"val (input":["key)]"],"val for":["it"],"val) nucleotide),":["the"],"valid DNA":["and","before"],"valid and":["fair"],"valid as":["anyone"],"valid characters.":["New"],"valid dna":["sequence","sequence.","and","markers"],"valid domain":["which"],"valid implementations.":["This"],"valid in":["the"],"valid name.":["I've"],"valid nucleotide,":["then"],"valid nucleotides":["in","would","to"],"valid nucleotides,":["but","it's"],"valid nucleotides.":["A"],"valid or":["not."],"valid point":["I"],"valid point,":["I'm"],"valid rna":["sequence."],"valid serial":["numbers"],"valid strings":["like:"],"valid too,":["but"],"valid, though":["`re-seq`"],"valid-dna-nucleotides (repeat":["0))"],"valid-nucleotides indeed":["could"],"valid-nucleotides public":["is"],"valid-nucleotides since":["it"],"valid. This":["would"],"validate input,":["you"],"validate nucleotides":["--"],"validate that":["the"],"validate the":["input","dna","input.","input"],"validate-length could":["easily"],"validated but":["the"],"validated input.":["It's"],"validated. The":["one"],"validating functions":["putting"],"validating the":["input."],"validation actually.":["It's"],"validation and":["function","string","the"],"validation check":["for"],"validation from":["the","the","the","the"],"validation function":["a"],"validation function.":["Other"],"validation in":["a"],"validation is":["also"],"validation on":["the"],"validation out":["of"],"validation process…":["I"],"validation set.":["There's"],"validation workflow*":["works"],"validation would":["look"],"validation, i.e.":["`(every?"],"validation. Even":["if"],"validation/cleaning twice":["in"],"validations out.":["We"],"validity check":["in"],"validity test":["in"],"valuable, as":["always."],"value (a":["predicate)."],"value ==":["value.uppercase"],"value `{}`":["is"],"value and":["return","not","passed"],"value at":["the","a"],"value by":["removing"],"value could":["have","have"],"value evaluated":["in"],"value for":["`:else`.","when","a","invalid"],"value from":["that"],"value gets":["put"],"value had":["been"],"value in":["defining","the","forcing","forcing","the","your"],"value instead":["of","of"],"value into":["the"],"value is":["a","ignored","returned","indented","read,","attempted","just"],"value it":["will"],"value matching":["the"],"value n":["times."],"value of":["intention-revealing","the","line","the","a","the","the","the"],"value on":["the","the"],"value or":["nil"],"value passed":["to"],"value seem":["like"],"value separately":["to"],"value so":["bob","something","they"],"value stored":["in"],"value to":["push","each"],"value until":["`reset-name`"],"value was":["empty"],"value which":["is"],"value would":["be"],"value you're":["threading"],"value\" feature":["of"],"value(s) of":["this"],"value) is":["more"],"value, as":["in:"],"value, but":["it","will"],"value, it":["will"],"value, not":["a"],"value, so":["you"],"value, there's":["no"],"value, you":["can"],"value. A":["map"],"value. If":["your"],"value. So":["in"],"value. That":["makes"],"value. Using":["this"],"value. `\"\\w+\"`":["is"],"value. `repeatedly`":["calls"],"value.uppercase could":["be"],"value` to":["cover"],"values -":["being"],"values `blank?`,":["`shout?`,"],"values are":["vectors,","separated","evaluated"],"values as":["nil"],"values bothers":["me"],"values by":["one:"],"values for":["DNA","lower-case"],"values from":["chars"],"values have":["to","a"],"values if":["you"],"values in":["as","the","the"],"values inside":["of"],"values instead":["of"],"values is":["fine"],"values it":["accepts."],"values like":["that)"],"values returned.":["It"],"values should":["be"],"values so":["that"],"values such":["as"],"values that":["are"],"values to":["make"],"values treated":["as"],"values using":["either"],"values when":["I"],"values with":["`def`s,"],"values would":["cover"],"values, or":["starting"],"values. For":["example,"],"values. I.e.":["(let"],"values. You":["could"],"values? In":["a"],"var (your":["first"],"var and":["the"],"var based":["on"],"var definition":["private."],"var even":["more"],"var for":["the","the","the","T"],"var in":["a"],"var name":["for"],"var or":["method."],"var to":["hold","an"],"var`, for":["the"],"var`. You":["can"],"variable \"query\"":["or"],"variable `s`":["is","in"],"variable `s`,":["which"],"variable `words`":["in"],"variable could":["be"],"variable instead":["of"],"variable name":["is","\"sentence\"."],"variable name,":["and","and"],"variable name.":["Is"],"variable names":["would","like","are","n,"],"variable naming,":["`x`"],"variable so":["you","you"],"variable to":["something","the","the"],"variable you":["have"],"variable. Yes,":["I"],"variable/docs appropriately,":["makes"],"variable/docs could":["help,"],"variables (or":["atoms)"],"variables `thymidine`":["and"],"variables are":["expressive"],"variables could":["enhance","enhance"],"variables for":["the","T"],"variables in":["the"],"variables that":["you"],"variables to":["enhance","increase","actual","reuse"],"variables typically":["use"],"variables vis.":["the"],"variadic (takes":["varying"],"variadic function":["with"],"variadic, so":["`(map"],"variances for":["robot"],"varied) structure":["of"],"variety of":["solutions."],"various bindings":["and"],"various predicate":["functions"],"various regex":["checks"],"vars and":["stuff,"],"vars are":["not"],"vars aren't":["supposed"],"vars clunky.":["Why"],"vars for":["\"T\""],"vars instead":["of"],"vars so":["that"],"vars that":["give"],"vars to":["represent","represent","reference","give"],"vars with":["descriptive","intention","intention","revealing","more"],"vars, although":["they"],"vars, and":["checking"],"vars, so":["they"],"vars. Care":["to"],"vars/functions in":["a"],"varying number":["of"],"vastly improve":["`question?`"],"vastly prefer":["the"],"ve (+":["1"],"ve (inc":["vs)"],"vec conj)":["name)`"],"vec conj)`.":["Map"],"vec shouldn't":["be"],"vec with":["conj,"],"vector (i.e.":["a"],"vector a":["couple","b)`."],"vector and":["list","list"],"vector but":["I"],"vector comes":["immediately"],"vector dropped":["to"],"vector in":["function","a"],"vector is":["usually","unnecessary"],"vector of":["maps","vectors)","values"],"vector on":["a"],"vector s1":["s2)`"],"vector to":["cache","be"],"vector with":["`vec`","vec"],"vector x":["y)`"],"vector)` since":["they"],"vector, as":["it"],"vector, in":["which"],"vector, not":["a"],"vector. It":["looks"],"vector. Think":["about"],"vector. Will":["look"],"vector/list of":["pretty"],"vector? `list`":["and"],"vectors and":["then","the"],"vectors in":["(sorted)"],"vectors of":["strings"],"vectors since":["it's"],"vectors with":["the","the"],"vectors) rather":["than"],"vectors, not":["lists"],"vectors. So":["to"],"vein, `count-words`":["doesn't"],"verb form":["is"],"verb-y to":["me."],"verbose and":["write","possibly"],"verbose having":["to"],"verbose so":["I"],"verbose version":["of"],"verbose, but":["possibly","it"],"verbose, since":["we're"],"verbose. I":["have"],"verically -":["`=`"],"verification as":["[condition"],"verified that":["it"],"verify assumptions":["and"],"verify by":["looking"],"versa, to":["see"],"verse function":["to"],"verse that":["changed"],"verse uses":["`cond`,"],"verse-components function":["and"],"verse. To":["maintain"],"verses and":["append"],"verses are":["put"],"verses in":["`sing`,"],"verses together":["is"],"verses where":["`remaining`"],"verses. The":["functions"],"verses; couldn't":["you"],"version &gt;=":["1.4,"],"version (using":["`:require`"],"version 1":["and"],"version 2":["is"],"version 4":["and","better."],"version I":["think"],"version a":["bit"],"version also":["makes"],"version and":["the"],"version as":["using","a"],"version avoiding":["re-evaluation."],"version back,":["hoping"],"version based":["on"],"version for":["each"],"version is":["twice","more"],"version looks":["good."],"version makes":["all"],"version of":["the","itself.","the","the","`dna`","this","the","this","nucleotide-counts","the","`is-questions`","`word`","itself.","itself.","string","the","your","Java's","Bob","blank?,","determining","`sing`","the"],"version pulls":["in"],"version rather":["than"],"version reads":["more"],"version taking":["it"],"version that":["is","wasn't","checks"],"version the":["same"],"version uses":["`transient`."],"version was":["trying"],"version what":["do"],"version where":["I"],"version which":["I"],"version with":["this","private","a","bindings","`-\u003e`","your","re-evaluation"],"version without":["the","regular"],"version would":["read"],"version, I":["realized"],"version, although":["longer,"],"version, there":["is"],"version, though":["a"],"version, very":["elegant"],"version. And":["of"],"version. As":["for"],"version. Awaiting":["your"],"version. Can":["you"],"version. Is":["this","this"],"version. Still":["wish"],"versions as":["well."],"versions for":["both"],"versions of":["the"],"versions, numbers":["did"],"versus 2":["and"],"versus ```:refer```?":["I'm"],"versus a":["`string/join`"],"versus input":["acceptance."],"vertical :y}":["point]"],"vertical space":["in","is"],"vertical spacing":["here."],"vertical whitespace":["in"],"vertically line":["up"],"very Clojure":["like."],"very Clojure-ish":["property"],"very awesome.":["Thank"],"very carefully,":["as"],"very clean":["looking.","and"],"very clear":["what","meanings.","what","code.","and","to"],"very clear,":["but"],"very clearly,":["so"],"very cool":["as"],"very delighted":["to"],"very easy":["to"],"very elegant":["implementation"],"very end":["of"],"very expressive":[":)",":)"],"very expressive.":["A"],"very first":["piece","Clojure","Clojure","code","Clojure","clojure","passing"],"very fun,":["so"],"very good":["point","point","suggestions,","points.","readable"],"very good.":["One"],"very grateful":["for"],"very gross,":["its"],"very hard":["to","to"],"very helpful":["knowledge.","-"],"very helpful.":["Especially","I"],"very hesitant":["to"],"very important":["part"],"very innovative.":["I"],"very interesting":["function."],"very intuitive":["(looks"],"very jarring.":["Lisp"],"very large":["Strings"],"very last":["parenthesis"],"very minimal":["in"],"very minor":["nits."],"very much":["harder","going","a","appreciate","simplify","like"],"very new":["to"],"very nice":[":)","solution",":)","solution!"],"very nice!":["I"],"very nice,":["but"],"very nice.":["Do"],"very nicely":["-"],"very often":["anymore.","(probably"],"very open":["to"],"very operator":["reduces"],"very pleased":["with"],"very pleasing":["to"],"very poor":["code,"],"very practical,":["but"],"very pretty":["to"],"very proficient":["with"],"very readable":["including","and"],"very readable.":["Nice!"],"very same":["semantics"],"very similar":["concepts"],"very similar.":["Could"],"very simple":["functions"],"very slow,":["I"],"very specific":["cases","fit"],"very specific.":["One"],"very straight-forward":["to"],"very straightforward":["and"],"very strict":["about"],"very sure":["count"],"very useful":["to","generic","generating"],"very useful!":["Thanks!"],"very useful,":["although"],"very useful.":["You"],"very very":["very","useful!"],"very well":["done.","suited"],"very well,":["but"],"very wide":["screen)."],"via `defn-`":["for"],"via `defn-`.":["The"],"via an":[":else"],"vice versa,":["to"],"video is":["a"],"view though,":["always"],"view, I'd":["consider"],"vim and":["when"],"vim with":["vim-clojure)"],"vim-clojure) will":["highlight"],"violated the":["principle"],"violates the":["principle"],"vis. the":["domain"],"visibility of":["those","methods?","symbols","your"],"visible globally.":["You"],"visible to":["outside"],"visual basic":["I"],"visual distinction":["might"],"visual enhancements":["in"],"visual help,":["not"],"visual separate":["with"],"visual style":["that"],"visually better":["understanding"],"vote for":["this,","code"],"vowel sound,":["it"],"vs [word1":["word2]"],"vs `condp`":["in"],"vs `string`":["is"],"vs in":["a"],"vs n)":["by","by","by"],"vs n).":["Hint:"],"vs sort":["-"],"vs. `(sentiment":["(clean"],"vs. ```((complement":["nil?)"],"vs. ```(=":["(last"],"vs. characters":["--"],"vs. the":["ends"],"vs. your":["multimethod"],"w.r.t the":["complexity."],"w/ Carin":["Meier"],"wager that":["someone"],"wait for":["my","some"],"wait until":["`robot-name`"],"waiting for":["directives","your"],"waiting plus":["I'm"],"wall, \"":["n-bottles","n-bottles"],"wall.\")` is":["not"],"wanna rename":["your"],"want Clojure":["to"],"want `characters`":["to"],"want a":["default"],"want an":["else"],"want by":["importing"],"want characters":["in"],"want concurrency-safety":["to"],"want exposed":["from"],"want here,":["is"],"want in":["your","this"],"want it":["to","to","to"],"want me":["to"],"want other":["people"],"want out":["of"],"want tests":["to"],"want than":["what"],"want the":["participant"],"want them":["out"],"want to":["consider","make","pick:","be","define","have","point","encourage","have","have","permit","refer","have","do","encourage","think","test","stick","match","look","use","use","use","take","create","do","use","enforce","be","narrow","do","add","express","have","read","change","change.","take","add","export,","export","export.","export","look","put","look","change","be","look","look","do","go","drop","use","have","look","include","have","look","force","look","provide","try","consider","make","look","negate","consider","at","try","play","experiment","look","shorten","look","look","incur","*keep*","remove."],"want. On":["the"],"want. Then,":["you"],"wanted me":["to"],"wanted this":["to"],"wanted to":["make","try","ensure","put","know","learn","keep","do","separate","pull","separate","get","use","try","break","change","use","add:","try","experiment","keep","introduce","show","insert","make"],"wanted to.":["Might"],"wanted. It's":["arguments"],"wanting to":["write"],"wants to":["check","checkout"],"warn in":["`response-for`"],"warning about":["shadowing","overriding","redefining","interpreting","overriding","redefining"],"warning by":["using"],"warning that":["I"],"warning when":["you"],"warning: this":["is"],"warnings from":["Clojure"],"warps my":["fledgling"],"warrants optimization":["(yet)."],"was \"T\"":["to"],"was \"There's":["a"],"was \"javascript!!&@$%&z\"":["it"],"was \u003e11":["digits,"],"was `:all-caps`":["or"],"was a":["library","huge","question,","one","`private`","hypothetical","slip","more","great","pain","specific","nice","good","symbol","name","good","valid","fraction","science","good","custom","way","poor","long","little","bit"],"was able":["to"],"was actually":["wondering","thinking","much","converting"],"was all":["upper"],"was almost":["indistinguishable."],"was already":["approved,","a"],"was also":["going"],"was an":["ordeal.","odd","intentional","obvious"],"was and":["how"],"was another":["example"],"was approved":["quickly"],"was at":["least"],"was available.":["What"],"was because":["I"],"was better":["(don't"],"was better.":["`(frequencies"],"was bewildered":["by"],"was blinded":["by"],"was consciously":["trying"],"was consistent":["in"],"was creating":["my"],"was decried":["as"],"was divided":["between"],"was doing":["and"],"was doing,":["my"],"was doing.":["From"],"was easy.":["Thanks"],"was empty":["on"],"was equivalent":["to"],"was explicit":["in"],"was fixed":["today!"],"was from":["the"],"was fun":["XD"],"was generally":["harder"],"was getting":["it","a","a"],"was going":["for","to","to","about"],"was gone":["there"],"was having":["some"],"was hiding":["clojure.core/replace"],"was holding":["back"],"was hoping":["to"],"was how":["to"],"was in":["core?","a","clojure.","this","my"],"was inattention":["from"],"was inconsistent":["in"],"was intent":["to"],"was interested":["too"],"was introducing":["complexity"],"was just":["concatenating","an","checking,"],"was looking":["for","for"],"was made":["(re"],"was mapping":["lower-case"],"was meant":["to"],"was missing":["something"],"was more":["for"],"was mostly":["tripped"],"was much":["too","simpler/clearer"],"was my":["previous","very","first","first","take-away"],"was new":["for"],"was no":["need","actual"],"was noisy":["to"],"was not":["familiar","aware","necessary","previously","needed.","necessary","processing","immediately"],"was of":["interest."],"was on":["the"],"was one":["of"],"was only":["one"],"was originally":["thinking","written"],"was outside":["the"],"was passed":["to"],"was pleasantly":["surprised","surprised"],"was pointed":["out"],"was possible":["to"],"was pretty":["vague"],"was probably":["bad","easier"],"was pushed":["to"],"was quite":["short"],"was reading":["this","[Library"],"was real":["code"],"was really":["insightful"],"was redundant.":["this"],"was renamed":["to"],"was roughly":["the"],"was searching":["for."],"was seeing":["how"],"was separating":["the"],"was significantly":["more"],"was so":["simple","glad"],"was some":["mechanism"],"was something":["of"],"was suggested":["that","to"],"was supposed":["to","to"],"was supprized":["at"],"was sure":["there"],"was surprised":["with","you"],"was taking":["singular"],"was testing,":["that"],"was that":["I","the"],"was the":["function","bad","best","ordering","best","advice","most","wrong","yelling"],"was thinking":["of!","about","that","what","about","about"],"was to":["have","try.","only","just","record"],"was too":["dependant","long"],"was tough":["for"],"was trying":["to","``case``,","to","to","to","to"],"was typing":["the"],"was understanding":["it,"],"was underwhelming.":["I"],"was unsure":["if"],"was used":["very"],"was using":["frequencies","`cond`","Date"],"was very":["delighted","innovative.","helpful"],"was weirdly":["easy."],"was what":["etrepum","really"],"was without":["seq,"],"was wondering":["yesterday","about","what"],"was working":["in"],"was worth":["it"],"was writing":["the"],"was wrong":["to"],"was you":["still"],"was, good":["tip."],"was, like":["whether"],"wasn't *too*":["ugly."],"wasn't able":["to","to"],"wasn't actually":["a","invoking"],"wasn't as":["concise.","focused"],"wasn't aware":["of","that","of","of","of,","of"],"wasn't caught":["by"],"wasn't familiar":["with"],"wasn't needed":["at"],"wasn't obviously":["doing"],"wasn't quite":["as"],"wasn't random":["at"],"wasn't relevant":["here."],"wasn't shouted":["in"],"wasn't sure":["what","what","how.","about","what","about"],"wasn't the":["best"],"wasn’t aware":["of"],"waste (in":["time,"],"waste a":["perfectly"],"waste it":["for"],"wasted effort":["here"],"watch out":["for"],"way (I":["think!)"],"way (and":["please"],"way -":["I","what"],"way --":["just"],"way I":["can","named","did","considered","was","found"],"way I've":["shown"],"way ```(string/replace":["nucleotides```"],"way a":["reader"],"way and":["I"],"way around).":["But"],"way around,":["for"],"way as":["`get`.","explaining"],"way because":["`filter`","it"],"way but":["it"],"way do":["this"],"way expressing":["the"],"way for":["empty"],"way functions":["are"],"way i":["see"],"way if":["a"],"way in":["clojure.","clojure."],"way into":["a"],"way intuitive":["if"],"way is":["probably","that","to","to","to","to"],"way it":["is.","does","will","is,","becomes"],"way more":["overhead","elegant!"],"way not":["to"],"way of":["chaining","doing","naming","not","converting","generating","extending","keeping","including","encoding","replacing","replacing","adding","naming","selecting","handling","getting","doing","avoiding","doing","getting","preventing","writing"],"way seems":["to"],"way so":["I"],"way still.":["Do"],"way that":["you","you","will","describes"],"way the":["other","```-&gt;&gt;```","code","code","`if`","reduction"],"way this":["program"],"way through":["the","the"],"way to":["make","handle","pass","change","check","implement","check","handle","avoid","avoid","clean","do","get","do","do","have","do","do","only","let","DRY","DRY","factorize","DRY","check","submit.","do","make","check","import","skip","do","do","sort","implement","accomplish","do","have","do","simplify","DRY","check","factorize","avoid","separate","obfuscate","use","check","use","do","handle","do","keep","make","handle","avoid","resolve","do","test","avoid","manage","do","do","use","go.","do","get","use","achieve","detect","write","make","shorten","implement","approach","do","define","get","make","ensure","end","test","define","check","format","fix","handle","use","simplify","do","build","check","test","do","throw","avoid","do","roll","implement"],"way too":["complex,"],"way was":["a"],"way with":["-","`some`"],"way works.":["It's"],"way would":["be"],"way you":["generate","could","can","could","can","could","can","define","can","passed","could","wouldn't","could","read","could","refer","want","structured","can"],"way you've":["delivered","implemented"],"way your":["`cond`"],"way), but":["I'd"],"way, `-\u003e`":["is"],"way, but":["I'll"],"way, by":["manually"],"way, do":["you"],"way, no":["point"],"way, thanks":["a"],"way, that":["looks"],"way, there":["should"],"way, there's":["a","more"],"way, you":["can","have"],"way, you're":["using"],"way, your":["method"],"way. :-)":["I'd"],"way. Another":["option"],"way. Been":["trying"],"way. I'm":["not"],"way. If":["you"],"way. It":["also"],"way. Now":["that"],"way. Otherwise,":["you"],"way. What":["can"],"way.\" as":["the","well."],"way... maybe.":["I"],"way... sometimes":["I"],"ways (although":["your"],"ways -":["like"],"ways to":["do","achieve","work","think","separate","implement","do","map","use","try","write","get"],"ways: either":["`(split"],"we address":["that"],"we are":["supposed","talking","left"],"we avoid":["performing"],"we call":["`to-rna`,"],"we can":["get","do","read","just"],"we can't":["use","add"],"we could":["really"],"we did":["want"],"we don't":["even","have","have","have"],"we eliminate":["the"],"we end":["up"],"we failed":["transcription?"],"we had":["large"],"we have":["the","had"],"we just":["pass"],"we mostly":["don't"],"we need":["to"],"we need.":["They"],"we omitted":["the"],"we pass":["forms"],"we rewritten":["like"],"we see":["the"],"we seem":["to"],"we should":["all"],"we tend":["to"],"we want":["to","to"],"we wanted":["to"],"we were":["yelling"],"we would":["really","have"],"we're aiming":["for"],"we're allocating":["atoms,"],"we're dealing":["with.","with,"],"we're good":["to","to"],"we're just":["going"],"we're looking":["for."],"we're not":["too","code"],"we're really":["getting"],"we're supposed":["to"],"we're trying":["to"],"weak to":["decipher"],"weasel words)":["not"],"weed it":["out"],"weed out":["uracil)"],"weeding out":["special"],"week, been":["hectic"],"weeks or":["months"],"weeks to":["clojure"],"weigh conciseness":["against"],"weird Ruby":["code..."],"weird about":["copy-paste"],"weird alignment":["issues"],"weird because":["it"],"weird for":["clojure"],"weird to":["have","me","me."],"weird, but":["it"],"weird; first":["candidate"],"welcome symmetry":["between"],"welcome! I":["did"],"welcome, but":["in"],"welcome. Style,":["formatting,"],"well IMO.":["I"],"well and":["keep","has","hope"],"well as":["the","the","the","`split`","no","a","how","how"],"well at":["least"],"well by":["converting"],"well done.":["I"],"well exercism":["goes"],"well explained":["*how*"],"well in":["this","the"],"well known":["in","in"],"well named":["bindings.","bindings"],"well recognized":["in"],"well since":["it"],"well suited":["to"],"well the":["format"],"well though":["since"],"well to":["then"],"well unless":["absolutely"],"well want":["to"],"well which":["seems"],"well without":["it?"],"well —":["nitpickers"],"well) to":["their"],"well) which":["are"],"well, I":["doubt","don't"],"well, _that_":["was"],"well, `clojure.core/count`":[";-)"],"well, and":["so","it's","see"],"well, but":["you're","there","there","I","never","picking"],"well, maybe":["I"],"well, so":["could","you"],"well, thank":["you."],"well, the":["primary"],"well, vertical":["space"],"well-named functions.":["The"],"well-named helper":["functions"],"well-structured solution.":["A"],"well. But":["since"],"well. For":["amusing"],"well. Is":["there"],"well. It's":["clear"],"well. Otherwise,":["it"],"well. Unhandled":["cases"],"well. Were":["you"],"well. Which":["I"],"went about":["it"],"went ahead":["and"],"went and":["looked"],"went back":["and","and"],"went straight":["to"],"went the":["next","route"],"went to":["the","[`map`](http://clojuredocs.org/clojure_core/clojure.core/map),"],"went towards":["trying"],"went with":["`clojure.string/replace`,","a","comment","the"],"were a":["project","couple"],"were added":["to"],"were anything":["more"],"were at":["work."],"were both":["special"],"were broken":["out"],"were concerned":["with"],"were dealing":["with"],"were ever":["disabled."],"were extended":["about"],"were failing":["which"],"were given":["descriptive"],"were hinting":["at?"],"were in":["a"],"were just":["the"],"were new":["to"],"were not":["made"],"were obtained":["by"],"were playing":["a"],"were pretty":["terrible"],"were private":["defn's"],"were readily":["available"],"were really":["the"],"were related":["to"],"were represented":["by"],"were running":["it"],"were small":["w.r.t"],"were testing":["for."],"were the":["names"],"were to":["write"],"were too":["many"],"were trying":["to"],"were unfamiliar":["with"],"were used":["for!"],"were working":["on"],"were yelling":["or"],"were you":["thinking"],"weren't making":["a"],"weren't opened":["on"],"weren't tested":["or"],"we’d end":["up"],"we’re not":["using"],"what \"order":["of","of"],"what \"some\"":["was"],"what @mazie":["is"],"what BrianHicks":["is"],"what I":["get","get","accept,","came","have","required.","have,","mentioned.","can","can","can","did","mean.","wanted.","need","thought","needed,","have","wanted","comprehend","ended","understand,","have","submitted.","did","get","wanted.","feel","have"],"what I'm":["doing.","doing","doing"],"what [`cl-format`](http://clojuredocs.org/clojure_core/clojure.pprint/cl-format)":["was"],"what `-\u003e\u003e`":["was"],"what `\\?`":["is"],"what `\\T`":["and","and"],"what ```dna/to-rna```":["is"],"what `consider`":["is"],"what `dec-each-value`":["does"],"what `defmulti`":["and"],"what `rest`":["is"],"what `ws`":["and"],"what `x`":["stands"],"what a":["user","given"],"what about":["giving","unusually","when"],"what an":["exclamation","anagram","anagram"],"what appears":["to"],"what arguments":["they"],"what basically":["become"],"what better":["method"],"what do":["you","they","you","other","you","you","you","people"],"what does":["the"],"what each":["line","type"],"what effectively":["would"],"what else":["to"],"what empty":["values"],"what etrepum":["was"],"what ever":["operation"],"what every":["check"],"what exactly":["`frequencies`","it's"],"what exchange":["is"],"what function":["you"],"what functionality":["is"],"what functions":["you're","are"],"what happens":["for","if","if","if","if","if","if"],"what happens.":["It"],"what he":["said."],"what hunts":["most"],"what i":["need."],"what if":["the"],"what indicates":["that"],"what is":["intended","intended","called","being","going","has","better)","the","```defn-```?","the"],"what it":["was","looks","should","is.","*means*?","is","represents?","is","says","actually","does","meant","is","is","gives"],"what it's":["supposed","actually","trying"],"what keeps":["me"],"what kind":["of","of","of","of"],"what line":["numbers"],"what needs":["in"],"what operation":["is"],"what other":["nitpickers"],"what patterns/functions/idioms":["I"],"what really":["helped"],"what responses":["to"],"what rubysolo":["meant"],"what scenario":["would"],"what should":["the"],"what some":["“internal”"],"what that":["code","Java","does"],"what that's":["worth."],"what the":["characters","intent","```str/replace```","string","right","`(first","behaviour","dependencies","benefit","program","software","usual","code","singular","exercise","function","if","code","function","function","right","performance","function","heck","intent","implementation","function"],"what they":["mean?","are.","are.","represent.","meant","were","claimed"],"what this":["replacing","function"],"what to":["name","look","do","return."],"what transcription":["is"],"what transforming":["dna"],"what was":["available.","an","passed"],"what would":["happen","happen","happen","happen","you","you","be"],"what you":["mean","do,","accept","want","don't.","mean,","have.","need:","need?","think","need.","think.","think","mean","are","need","are","think.","said","said","intended","gain","have.","mean","have","are","pass","mean,","expected","want.","need","mean","want.","have","want","intend","really","could","mean","are","mean?","do","think.","want","intend.","were","intended?","want","want"],"what you're":["getting","testing","getting","trying","trying","saying"],"what you've":["chosen","done","done"],"what your":["function","`reduce`","function's"],"what zoldar":["said,"],"what's already":["in"],"what's available.":["I"],"what's clojury":["though"],"what's going":["on!","on","on.","on,","on","on.","on."],"what's happening":["here,"],"what's in":["the"],"what's needed":["in"],"what's needed.":["(The"],"what's the":["most","guideline","most","difference"],"what's worse,":["when"],"what-bob-heard)``` in":["```exec-pattern```,"],"what? Can":["you"],"whatever bits":["and"],"whatever is":["more"],"whatever makes":["sense"],"whatever reduction":["is"],"whatever wraps":["them"],"whatever. I":["belive"],"whatnot, so":["took"],"whats at":["the"],"whatsoever to":["reduce"],"when (response-for":["\"4?\")"],"when Clojure":["allows"],"when I":["tried","see","wrote","can.","solved","use","mean","do!","searched","forgot","learned","tried","did","wrote","was","enter","refactored","found","did","changed","would"],"when I'm":["returning"],"when Paul":["Revere"],"when `pos`":["and"],"when `reset-name`":["is"],"when `robot`":["is"],"when `say-nothing?`":["has"],"when a":["hash"],"when an":["evaluated"],"when browsing":["through"],"when building":["the"],"when checking":["for","for"],"when code":["melts"],"when code-golfing":[":-)."],"when comparing":["two"],"when compiling":["-"],"when composing":["predicates:"],"when doing":["this","the"],"when ending":["with"],"when function":["is"],"when i":["should"],"when implementing":["the"],"when interleaving":["those"],"when it":["comes","is.","comes","comes","is","comes","is","should","doesn't","becomes"],"when it's":["lined","preferred"],"when looking":["for"],"when moved":["to"],"when necessary.":["(`identical?`"],"when new":["predicates"],"when number":["is"],"when only":["two"],"when possible":["instead","instead"],"when possible.":["You"],"when read":["on"],"when saying":["that"],"when simply":["aliasing:"],"when speaking":["about"],"when swapped":["for"],"when testing":["candidates."],"when that":["is"],"when the":["word","key","s-exp","only","robot","msg","first","char"],"when their":["code","code"],"when there":["is","are"],"when there's":["only","too","no"],"when they":["more"],"when they're":["returned."],"when to":["use","inline","`use`","do"],"when transformed":["to"],"when used":["inside"],"when using":["`mapv`.","e.g.","function","it","`let`s","two","atoms"],"when we":["could"],"when working":["with","in","with"],"when writing":["Clojure","in"],"when you":["could","can","can","retrieve","scan","shadow","canonicalize","check","can","are","look","only","close","only","really","don't","first","know","call","want","call"],"when you're":["adding","using"],"whenever possible.":["No"],"where %":["gets"],"where Clojure":["gets"],"where I":["try","started","find","originally","had","use","validate","used"],"where I'd":["extract","go"],"where Refs":["can"],"where `#{...}`":["is"],"where `process`":["is"],"where `remaining`":["is"],"where `set`":["is"],"where `without-lcase-chars":["(not-any?"],"where `…`":["is"],"where a":["certain","word"],"where all":["sequence"],"where atomic":["transactions"],"where currying":["happens","is"],"where data":["flows"],"where do":["you"],"where does":["this"],"where every":["function"],"where everything":["always","is"],"where input":["is"],"where it":["is.","is.","can","is","is."],"where it's":["going","easy","defined."],"where only":["DNA"],"where sequence":["related"],"where specific":["functions"],"where that":["fits."],"where the":["input","macro","value","scope","thread-last","value","bindings'","result","thread","key","functions","argument","argument","value"],"where there":["are","is"],"where they":["need"],"where they're":["used?"],"where things":["are"],"where this":["kind"],"where traditional":["functional"],"where true":["expressions"],"where trying":["to"],"where you":["interleave","are","do","set","have","map"],"where you're":["going","up"],"where. Although":["it"],"whereas .endsWith":["gets"],"whereas building":["a"],"whereas def/defn":["forms"],"wherever possible.":["It's"],"whether a":["given","sentence","character","series"],"whether capitalization":["should"],"whether it":["should","is","was","is"],"whether its":["argument"],"whether nucleotide":["is"],"whether one":["word","of"],"whether or":["not","not","not"],"whether the":["`lower-case`","input"],"whether this":["is"],"whether use":["of"],"whether you":["think","consider"],"which -":["intiated","when","without"],"which I":["should've","hope","can","think","was","do","wasn't","carried","found","wasn't"],"which I'm":["not","not"],"which IMHO":["is"],"which accepts":["third,"],"which allows":["you","for"],"which also":["fails."],"which are":["passed","the","designed","like","bound","explicitly","really"],"which basically":["have"],"which can":["be","partly","also","be","make","replace"],"which can't":["be"],"which case":["I","I've","you'd"],"which caters":["to"],"which caused":["me"],"which communicate":["the"],"which could":["go","accept","be"],"which creates":["a"],"which does":["basically"],"which doesn't":["use"],"which ensures":["that"],"which exists":["only"],"which function":["calls"],"which functions":["come"],"which has":["the","a"],"which have":["explicit","explicit","some"],"which hopefully":["makes"],"which i'm":["defining"],"which in":["a"],"which incidentally":["will"],"which is":["the","not","prefered.","given","ugly","a","in","csharp,","the","response-for","obviously","unlike","currently","what's","the","generally","pretty","nice","the","not","so","pretty","more","way","meant","a","variadic","probably","a","evaluated","not","the","more","maybe","probably","`-\u003e\u003e`","the"],"which isn't":["my"],"which it":["now","does,"],"which leads":["to"],"which led":["to"],"which lends":["itself"],"which let":["form"],"which looked":["really"],"which macro":["you"],"which made":["it","me"],"which make":["code"],"which makes":["this","this","it","each","the"],"which may":["come","help"],"which means":["it","you"],"which might":["be","be","make","make","make","allow","be","be","look","clean"],"which naming":["scheme"],"which new":["tests"],"which nil":["is"],"which of":["my"],"which often":["makes"],"which one":["you","is","is","to"],"which one.":["Right"],"which only":["task"],"which reads":["a"],"which repeats":["the"],"which ruffled":["a"],"which seems":["better.","less","to","to","to","to"],"which should":["be","allow"],"which simplifies":["things","things"],"which spares":["one"],"which takes":["the","care"],"which the":["current","checks"],"which things":["turn"],"which to":["me"],"which transforms":["a","a"],"which treats":["strings"],"which will":["`replace`","produce","create"],"which works":["on"],"which would":["take","make","otherwise","fit","have","have","be","then","make","contain","be","seem","allow","turn","allow","probably","be","offer"],"which wouldn't":["need"],"which wraps":["the"],"which yields":["the"],"which you":["could","have","have","have","have","have","have","can","have","have","have","have","have","know","often","usually","could","can","can"],"whichever language":["anagrams"],"whiffed on":["remembering"],"while `Lists`":["don't."],"while `letter-count`":["tells"],"while `silent?`":["is"],"while a":["regex"],"while agents":["and"],"while at":["the"],"while before":["I"],"while doing":["it","this...oof.","the"],"while editing":["LISP"],"while interesting,":["is"],"while lazy,":["will"],"while leaving":["'Looks"],"while literally":["true,"],"while longer":["yet"],"while one":["would"],"while reducing":["the"],"while solving":["this"],"while staying":["in"],"while still":["keeping","keeping"],"while technically":["more"],"while that's":["true"],"while the":["method","\"threaded\"","nucleotides","third"],"while this":["afternoon,"],"while to":["read","understand"],"while toying":["around,"],"while typing":["on"],"while with":["finding"],"while, while":["`letter-count`"],"white spaces":["there."],"whitespace after":["`if`"],"whitespace and":["make","punctuation","cleaning","closing","I","perfectly"],"whitespace between":["each"],"whitespace but":["realized"],"whitespace chars":["spread"],"whitespace in":["(-&gt;&gt;","`anagrams`,","clojure)"],"whitespace inside":["response-for,"],"whitespace or":["punctuation","comments"],"whitespace you":["used"],"whitespace) on":["the"],"whitespace, I":["just"],"whitespace, how":["about"],"whitespace, so":["you","you","you"],"whitespace. But":["I"],"whitespace. Looks":["solid"],"whitespace. Then":["I'd"],"whitespace; trailing":["parenthesis"],"whittle this":["down"],"who did":["not"],"who had":["no"],"who knew":["something","the"],"who let":["@frankie"],"whole `and`":["-"],"whole cond":["becomes"],"whole exercise":["is"],"whole exercism":["thing"],"whole exercism.io":["thing"],"whole function":["is"],"whole logic":["to"],"whole lot":["simpler","better","to","of","more"],"whole namespace":["using"],"whole namespace,":["which"],"whole on":["every"],"whole point":["of","of"],"whole program":["simpler"],"whole program.":["I"],"whole sequence":["is"],"whole string":["only","matches"],"whole string.":["Given"],"whole thing":["significantly","is","is","into"],"whole thing.":["For"],"whole words,":["not"],"whoops, I've":["made"],"whoops. currently":["this"],"whose names":["clarify","start"],"why I":["said","frustratingly","should","didn't","didn't","used","didnt'"],"why `yell?`":["doesn't"],"why a":["good"],"why and":["instead"],"why are":["you","you"],"why atom":["being"],"why can't":["I"],"why didn't":["you"],"why doesn't":["`count`"],"why each":["line"],"why exactly":["using"],"why have":["them","them"],"why i":["didn't"],"why is":["`letfn`","it"],"why it":["looks","wouldn't"],"why it's":["responding"],"why not":["using","process","process","simply"],"why not.":["Though"],"why putting":["them"],"why some":["other"],"why swapping":["Ts"],"why the":["default","`?`).","code","binding","operation"],"why those":["nested."],"why you":["chose","wrote","wrote","need","used","said","need"],"why you're":["checking"],"why your":["test"],"why. Any":["hint"],"wide range":["of","of"],"widely used":["than"],"wider range":["of","of"],"wider scope.":["Does"],"wikipedia backs":["up"],"wild doesn't":["use"],"wild stuff.":["I'm"],"wild, (declare)":["is"],"wild, and":["you're"],"will `replace`":["thymine"],"will actually":["give"],"will add":["bindings"],"will all":["be"],"will allow":["you"],"will approve":["this,"],"will be":["on","more","able","nice","necessary","worth","evaluated","less","more","a","less","nicer.","cleaner","more","more","read","more","treated.","lower","compared","computed","invalid.","private.","raised.","immediately","truthy","a","run","trying"],"will become":["much","implementation","\"living\""],"will change":["my"],"will check":["for"],"will clarify":["my"],"will compare":["lists"],"will consider":["it.","it"],"will consist":["of"],"will convert":["a"],"will cover":["the"],"will create":["a"],"will declutter":["the"],"will deign":["to"],"will do":["the","that,"],"will do.":["You"],"will drive":["changes"],"will evaluate":["as"],"will eventually":["run"],"will expand":["into"],"will expect":["a"],"will explicitly":["throw"],"will fail":["and"],"will fall":["through","back"],"will fix":["that","respOnse","that.","in"],"will get":["things","you","`false`"],"will give":["you","some","you"],"will go":["and"],"will grant":["the"],"will happily":["fight"],"will have":["to","to","a","it's","a"],"will help":["you","with","you","with","you"],"will highlight":["matching","the"],"will implicitly":["return"],"will instead":["get"],"will just":["return"],"will keep":["reading"],"will load":["the","the"],"will look":["into","into","fine"],"will lower-case":["and","the"],"will make":["the","your","for","your","it","for","your","`verse`","your","the","it","it","for","my"],"will mark":["this"],"will match":["anything"],"will move":["the"],"will need":["a","to"],"will nominate.":["While"],"will of":["course"],"will only":["have","be"],"will organize":["the"],"will pass":["the"],"will probably":["fall","use","do","try","re-visit"],"will produce":["the"],"will read":["better"],"will recognize":["any"],"will return":["true","`nil`","a","the","the",":fred","the"],"will review":["some"],"will revise":["my"],"will save":["you"],"will spare":["you"],"will split":["things"],"will stay":["with"],"will stick":["with"],"will still":["help","make","allow"],"will submit":["a"],"will suit":["any"],"will take":["a","your","care","a"],"will tell":["you"],"will terminate":["at"],"will than":["anything."],"will thank":["you"],"will think":["about"],"will throw":["an"],"will try":["to"],"will trying":["to"],"will use":["`frequencies`"],"will want":["to"],"will work":["to","on","with","if","with"],"will you":["need"],"willing to":["put","give","pursue","give"],"window (nesting":["levels"],"wins a":["lot"],"wins for":["me."],"wins you":["can"],"wise, I":["generally"],"wish Clojure":["had"],"wish I":["could","could","could"],"wish I'd":["thought"],"wish clojure":["supported"],"wish this":["was"],"wish to":["export)!"],"with !":["as"],"with \"Fine,":["be"],"with \"The":["British"],"with \"Woah,":["chill","chill","chill","chill","chill"],"with \"horizontal\"":["and"],"with \"last\"":["if"],"with \"re-\"":["should"],"with #":["notation"],"with 'is'":["when"],"with ()":["or"],"with (=":["0","x"],"with (built-in":["or"],"with *endsWith":["\"?\"'*"],"with -":["I"],"with 2":["spaces","arguments,"],"with 5":["arguments"],"with :as":["option?"],"with :only,":["and"],"with :refer":[":all"],"with =":["and"],"with ?":["and","as"],"with @armani":["on"],"with @armani's":["last"],"with @ayana's":["(intended)"],"with @belle.":["This"],"with @chase":["in"],"with @ernestine":["in"],"with @hilda":["-"],"with @kiara":["here"],"with @maxie's":["points,"],"with @micah;":["helper"],"with @trent.":["While"],"with @wilburn's":["point"],"with ASCII,":["it's"],"with Clojure":["but","I","Programming","thus","during","so","fns"],"with Clojure,":["but"],"with Haskell,":["but"],"with Racket":[":)"],"with Regex,":["I"],"with String's":["`.endsWith`"],"with U's.":["This"],"with US":["prefix"],"with UTF-8":["characters."],"with Us":["makes"],"with YET":["ANOTHER"],"with [`letfn`](http://clojuredocs.org/clojure_core/clojure.core/letfn)":["which"],"with \\p":["in"],"with `#\"\\w+\"`":["to"],"with `(=":["(clojure.string/upper-case"],"with `(condp":["apply"],"with `(declare":["some-function)`."],"with `(defn-":["split"],"with `(into":["(sorted-map)"],"with `(not-any?":["pred"],"with `(or":["("],"with `(re-seq":["#\"\\w\""],"with `-&gt;`":["now,"],"with `-\u003e`":["macro"],"with `-›`":["again"],"with `:^private`":["between"],"with `:else":["value`"],"with `:else`":["clause."],"with `:guard`,":["ultimately"],"with `:refer`":["to"],"with `:scalene`":["and"],"with `=`":["(or"],"with `Math.pow`":["but"],"with `[&amp;":["words]`,"],"with `[]":["("],"with `\\n`":["in"],"with `^:const`,":["so"],"with ```(re-seq":["#\"\\w+\""],"with ```(subs":["sanitized-number"],"with ```defn-```":["used"],"with ```split-words```":["when"],"with ```str/bank?```":["instead"],"with ```upper-case":["s```"],"with `apply`":["on"],"with `bigint`":["and"],"with `case`.":["Doesn't"],"with `clean-phrase`,":["in"],"with `clojure.core/count`,":["but"],"with `clojure.string/lower-case`":["instead"],"with `clojure.string/replace`,":["but"],"with `comp`.":["But","Besides,"],"with `concat`":["and"],"with `conj-anagrams`":["can"],"with `count`.":["There's"],"with `dec`":["as"],"with `def`s,":["just"],"with `defn-`":["over"],"with `dna/dna-to-rna`":["and"],"with `filter`":["and","and"],"with `filter`.":["`concat`"],"with `foo?`.":["Also,"],"with `frequencies`":["-","that"],"with `int`":["and"],"with `last`.":["That's"],"with `letfn`":["AND"],"with `new-robot-name`":["but"],"with `partial`":["was."],"with `partial`.":["Re-wrote"],"with `re-find`":["and"],"with `re-find`.":["I"],"with `re-seq":["\"#w+\"`"],"with `re-seq`?":["I"],"with `recur`.":["Can"],"with `reduce-kv`":["instead,"],"with `remove`.":["I"],"with `replace`,":["but"],"with `shouty?`":["the"],"with `some`":["to","and"],"with `sort`":["initially"],"with `str`":["feels"],"with `update-in`.":["Am"],"with `upper-case`?":["I'll"],"with `vec`":["shouldn't"],"with a":["way","list","trailing","vector/list","RegEx","question","`let`","question","question","default","`def`","'?'.","core","namespace","map","better","new","map-destructuring","core","new","replacement","string","function","more","comparison","default","huge","shorter","base","recourse","map","nucleotide","solution","single","shorter","?\"*","new","`for`","concrete","`cond`","different","40","defmacro.","space","count","`?`.","vowel","slight","predicate","call","somewhat","U","single","small","little","question","Clojure","regular","smaller","function","question","real","slightly","function","new","question","few","slightly","`:require`.","question","let","mutable","different","pre-calculated","90"],"with accented":["characters"],"with achieving":["such"],"with actual":["expressions"],"with after":["reading"],"with all":["the","possible","Clojure"],"with already":["processed"],"with alternative":["ideas."],"with an":["arity","addition,","atom.","error","expression","if-let"],"with anagrams":["it"],"with anonymous":["functions"],"with another":["core","core","core","exercise,"],"with another,":["this"],"with any":["questions."],"with anymore":["so"],"with apply":["to","is"],"with arity":["1,"],"with as":["it"],"with assert.":["That"],"with associative":["data"],"with backslash,":["like"],"with bindings":["for"],"with blank":["lines"],"with both":["getting","@lupe"],"with breaking":["apart","it"],"with calculating":["it"],"with capital":["letters"],"with changing":["the"],"with characters":["rather","or"],"with classifying":["[string];"],"with clojure":["is","core."],"with clojure,":["will","but"],"with clojure.":["But"],"with clojure.core,":["check"],"with clojure.string":["instead"],"with clojure.string/replace":[":)"],"with clojure;":["what"],"with closing":["square"],"with code":["clarity.","clarity"],"with code.":["The"],"with combining":["sanitizing"],"with comment":["because"],"with communicating":["intent,"],"with complete":["expansion."],"with conditionals":["is"],"with conj,":["lik"],"with convenient":["`replace`"],"with convention":["on"],"with defn-":["form"],"with descriptive":["names?","names?","names?","names?","names.","names","names"],"with details,":["and"],"with different":["responses?"],"with domain":["names."],"with elegant":["pattern"],"with eliminating":["noisy"],"with empty":["strings"],"with even":["more"],"with every":["candidate.","call","check","function","candidate.","candidate","candidate.","candidate.","candidate","potential","candidate.","candidate"],"with everything":["in","it's"],"with extracting":["it","those"],"with finding":["any"],"with first":["binding","expression","expression."],"with fitting":["in"],"with for":["example"],"with frequencies":["now"],"with future":["readers"],"with getting":["drunk","the"],"with great":["names."],"with group-by":["but"],"with handling":["unicode."],"with hasn't":["mentioned"],"with having":["redundancy"],"with help":["of","of","of","of"],"with how":["simple","```count-words```","the"],"with identifying":["scope"],"with implicit":["currying"],"with in":["clojure,"],"with indent":["of"],"with input":["big"],"with intent":["revealing"],"with intention":["revealing","revealing","revealing","revealing"],"with intention-revealing":["names?","names?","names?","names?","names?","names?","names?","names","names?","names?","names?","names?","names?","names?"],"with intern":["to"],"with invalid":["nucleotides."],"with it":["regarding","as-is.","I","for","already."],"with it,":["I"],"with it.":["It's","It",":)"],"with iteration":["1:"],"with its":["```[]```"],"with java":["dates"],"with just":["a","`map`,","whitespace"],"with keywords":["that"],"with lazy":["sequences"],"with learning":["Clojure."],"with leaving":["out"],"with less":["code?"],"with let/letfn":["forms"],"with letter":["frequencies."],"with letters":["in","becomes"],"with line":["9"],"with lines":["45"],"with list":["comprehensions;"],"with little":["rewrites."],"with lots":["of"],"with macros":["but","or"],"with making":["space-age"],"with many":["private"],"with map":["function."],"with mapv":[":)"],"with me":["about"],"with me.":["A"],"with meaningful":["names","names","names","names.","binding","names","names","names","names"],"with memoize":["but"],"with minor":["remarks:"],"with more":["vertical","descriptive","general","elaborate","descriptive"],"with movement":["data."],"with multi-arity,":["I've"],"with multimethods":["instead"],"with multimethods.":["Besides,"],"with multiple":["refs","arguments","filters","collections.","parameters"],"with my":["'or'","naming?","first","syntax","short","current","comment","regular","own"],"with name":["like"],"with named":["parameters"],"with names":["from","that","meaningful","that","from","that"],"with names.":["But,"],"with naming":["-"],"with native":["Clojure"],"with new":["lines."],"with nil.":["If"],"with no":["behaviour","(additional)","problems."],"with one":["related","of"],"with only":["one",":pre","2","2","2"],"with optional":["sets"],"with other":["core","things"],"with over":["40"],"with overflows":["and"],"with passing":["classify-response"],"with permission":["to"],"with poor":["names,"],"with potentially":["other"],"with pre-calculated":["values"],"with private":["functions"],"with proper":["destructuring:","indentation"],"with public":["first"],"with question":["mark","marks","marks."],"with range's":["third"],"with raw":["ints/longs."],"with re-evaluation":["much"],"with readability":["of"],"with readability.":["Java"],"with recursion":["in"],"with reduce":["you","looks"],"with reduce/conj/{}":["and"],"with regard":["to"],"with regards":["to","to","to"],"with regexps":["and"],"with regular":["expressions,","expressions"],"with rerunning":["the"],"with response-for.":["In"],"with revealing":["names"],"with same":["indentation"],"with sequence":["related"],"with sequences,":["but"],"with shadowing":["core"],"with shorthand":["for"],"with simplifying":["the"],"with simply":["`not=`"],"with slight":["modifications"],"with slightly":["different"],"with so":["few"],"with some":["lambdas","base","sort","simple"],"with some,":["too.)"],"with something":["more","like","like"],"with spaces":["and"],"with spaces.":["Have"],"with standalone":["functions."],"with standard":["dev"],"with str,":["which"],"with strands":["of"],"with string":["last.","literals.","literals,","literals","literals."],"with strings":["than","by","which"],"with such":["code,","a"],"with that":["is","change.","let","there","approach.","if","name","I","but","-","didn't","type?","in"],"with that.":["Thank","I","Other","`beer/verse`","Thanks!"],"with the":["right","same","other","result","present","embedded","doc","namespace","?","appropriate","last","fact","rest","uracil.","context","one-character","same","last.","two","clojure.string/split","same","help","pipeline","pipeline","pipeline","shorthand","80","context","same","other","dry","first","Integer","`word`","program?","Clojure","zero","same","built-in","reversed","possibility","other","anonymous","most","more-readable","formatting.","display","method","repeated,","help","relative","pre-calculations?","same","variable","letters","original","change","regex","help","opening","library","help","same","usefulness","`(not","multimethod","results","argument","if-soup.","`replace`","partial","characters","pre","additional","markdown","empty","inbuilt","```join```?","addition","current","[`Classname.`","thread-last","rest","end","regex","pre","year","-\u003e","infinite","protocol","value","guts","for","update-in","string","README.","part","wrong","tests...","following","rest,"],"with their":["namespace"],"with them":["in"],"with them,":["I"],"with this":["implementation","approach","change.","yet.","one.","later.","exercise?","code.)","one.","implementation.","is","alternative","implementation","style,","one,","but","one","submission."],"with this.":["Taking","Seems"],"with transient":["data"],"with treating":["strings"],"with uppercased":["version"],"with uracil":["in","**AND**"],"with uracil?":[":)"],"with use":["by"],"with using":["seq","regular","the"],"with validations":["out."],"with vec":["shouldn't"],"with vector.":["Think"],"with very":["useful"],"with vim-clojure)":["will"],"with well":["named"],"with what":["kind"],"with what's":["already"],"with which":["I"],"with whitespace":["or"],"with whitespace,":["I"],"with with":["the"],"with words":["from"],"with writing":["good"],"with you":["about","on","that"],"with you,":["code"],"with you-know-which-function":[":D"],"with your":["feedback.","sight","riddles!","brackets?","`nucleotides`","advise.","suggestions.","to-rna","AssertionError.","code:","comment","opinion"],"with zero":["counts","counts,"],"with zoldar":["but"],"with λ":["and"],"with) and":["try"],"with, but":["would"],"with, is":["java.util.Calendar"],"with. What":["is"],"with: `(some":["#(Character/isLetter"],"within `shout?`":["until"],"within a":["function?"],"within clojure.core":["which"],"within each":["grade."],"within one":["big"],"within set":["of"],"within the":["function?","closure,","`let`.","namespace","namespace"],"without \"caching\"":["the"],"without `clojure.string`":["or"],"without a":["biology","prefix.","`ns`.","newline.","predicate","call","name","name."],"without actually":["solving"],"without adapting":["the"],"without an":["`:else`","import."],"without anonymous":["function:"],"without any":["prefix.","needless","hesitation","problems.","explicit","regular","additional","problems."],"without capital":["letters"],"without cheating,":["version"],"without clashing":["with"],"without closing":["the"],"without creating":["an"],"without error.":["That's"],"without exporting":["them."],"without giving":["it","it"],"without having":["hard","to"],"without loosing":["meaning?"],"without losing":["too"],"without namespace":["aliasing"],"without namespace,":["and"],"without needing":["strip-chars"],"without recursion":["this"],"without regular":["expressions."],"without resorting":["to"],"without sacrificing":["too","clarity?","too","too"],"without scanning":["the"],"without seq,":["but"],"without setting":["each"],"without surrounding":["parts"],"without the":["Java","translate-nucleotide","extra","`require`","get:","context","pre","need","performance","calls"],"without them":["you"],"without them!":["`clojure.string`"],"without thinking":["through"],"without this":["check."],"without too":["much"],"without turning":["them"],"without using":["Java","a","a","a"],"without wrapping":["anything"],"without your":["help."],"without-lcase-chars)` where":["`without-lcase-chars"],"won out":["just"],"won't argue":[":)"],"won't be":["necessary.","caught","any","holding","enough","additional"],"won't change":["the"],"won't comment":["too"],"won't deplete":["the"],"won't get":["much","any"],"won't grill":["you"],"won't handle":["more"],"won't happen":["here"],"won't hit":["you"],"won't hold":["you"],"won't need":["to"],"won't pass":["the"],"won't repeat":["that"],"wonder about":["using"],"wonder how":["assigning","would"],"wonder if":["you","you","you","you","using","`format`","I","that's","there's","things","you","there"],"wonder that.":["Didn't"],"wonder what":["do","you"],"wonder why":["i"],"wondering about":["that,","the"],"wondering how":["hard","to"],"wondering if":["there","it's","you're"],"wondering what":["`defmulti`"],"wondering yesterday":["if"],"wonky, in":["part"],"won’t work,":["but"],"word \"javascriptz\"":["instead"],"word %)":["potential-matches)"],"word (once":["in"],"word (weed":["out"],"word -":["it's"],"word alphagram":["-"],"word anagram":["to"],"word and":["possibility","lower","doing"],"word by":["using"],"word can":["be"],"word count":["is","something"],"word for":["comparison","each","this","every","the"],"word from":["the"],"word has":["a"],"word here":[":)"],"word in":["it's","candidates","case","whichever"],"word is":["unusually","small.","generally","exactly","on","an","not","fine."],"word list":["in","before"],"word list,":["and"],"word maps":["is"],"word matches":["`#\"\\w+\"`,"],"word may":["not"],"word on":["that)"],"word once":["and"],"word once,":["while","without"],"word only":["once","gets","once."],"word out":["of"],"word over":["and","and","and","and"],"word poss))`":["can"],"word potential-anagram)`":["that"],"word separated":["from"],"word separation":["in"],"word should":["be"],"word sorted":["is"],"word that":["carries"],"word to":["test","lower"],"word was":["\"javascript!!&@$%&z\""],"word with":["every","letters","the"],"word you":["compare","are","have","compare","compare"],"word you're":["checking"],"word) (keify":["candidate))"],"word) it":["would"],"word) so":["it's"],"word))` -":["a"],"word))` for":["every"],"word))` looks":["really"],"word))` twice.":["A"],"word))` where":["`process`"],"word)` makes":["me"],"word)` or":["`(count"],"word)` to":["build"],"word)`, even":["though"],"word)`, or":["completely"],"word, and":["two"],"word, i.e":["`O(n)`."],"word, returns":["a"],"word, so":["I","we"],"word, you're":["making"],"word-count I":["decided"],"word-count a":["bit"],"word-count easier":["to"],"word-count function,":["including"],"word-count implementation!":[":)"],"word-count too,":["but"],"word-count without":["wrapping"],"word-count, would":["you"],"word-signature (signature":["%))`"],"word. The":["`anagram?`","best"],"word1 word2)":["(="],"word1) (frequencies":["word2)))))"],"word2) (=":["(frequencies"],"word2] (map":["s/lower-case"],"word2] in":["is-anagram?)"],"word2]` and":["go"],"word; ex:":["one*two."],"word? Can't":["seem"],"word? Your":["regex"],"word?) instead":["of"],"word] (merge":["ret"],"word] (update-in":["acc"],"worded, perhaps":["a"],"words (hope":["that's"],"words -":["it"],"words AND":["compute"],"words are":["anagrams","sorted."],"words as":["the"],"words because":["these"],"words but":["couldn't","I'm"],"words by":["reading"],"words code":["to"],"words could":["be"],"words directly":["with"],"words from":["the","the","the"],"words in":["the","a"],"words instead":["of"],"words into":["its"],"words multiple":["times."],"words out":["of","of"],"words the":["same"],"words then":["frequencies\"."],"words to":["lower-case"],"words using":["`\\w+`."],"words will":["be","consist","be"],"words with":["the"],"words you":["pass"],"words\", while":["the"],"words) not":["your"],"words, I":["think"],"words, instead":["of"],"words, it's":["just"],"words, not":["just"],"words, that's":["probably"],"words, the":["longest"],"words, tried":["to"],"words, without":["them"],"words. Finally,":["there's"],"words. Not":["so","sure"],"words. See":["my"],"words. The":["trade"],"words. This":["might"],"words: please":["ignore"],"words? \"Hello\"":["vs","vs"],"words? It":["means"],"words]`, and":["this"],"wordy and":["messy"],"work (since":["it's"],"work -":["separating"],"work a":["bit"],"work also":["as","as"],"work and":["I","`anagram-of?`"],"work as":["a","a","a","a","it"],"work before,":["so"],"work before.":["Must"],"work for":["you.","you","either","you.","very","you","you.","you"],"work given":["some"],"work here":["if"],"work if":["someone","there","there"],"work in":["progress","a","terms","a","this"],"work inside":["`ns`,"],"work is":["pretty"],"work it":["out"],"work just":["as","as","fine","in"],"work of":["evaluating"],"work on":["them.","it","that","the","them","functional"],"work out":["how.","how"],"work slightly":["faster"],"work than":["it"],"work that'll":["make"],"work the":["same"],"work through":["the"],"work to":["clojurescript?"],"work too,":["of"],"work when":["the"],"work with":["intention","strings","sequence","ASCII,","Clojure","a","characters","it"],"work without":["them!","any"],"work you":["do"],"work you're":["doing"],"work your":["doing"],"work! Writing":["`count-occurences`"],"work, but":["a","general","you"],"work, did":["you"],"work, let":["alone"],"work, since":["you're"],"work. But":["I"],"work. I":["really"],"work. One":["for"],"work. Seems":["weird"],"work. Thanks":["again"],"work. The":["colons"],"work. Try":["changing"],"work. ref,":["dosync,"],"work: `count`,":["`first`,"],"work? Or":["do"],"workaround, where":["the"],"worked on":["the"],"worked out":["how","the"],"worked. I'll":["have"],"workflow* works":["exactly,"],"workhorses of":["this"],"working as":["functions,","expected."],"working good":["most"],"working in":["the","the","the"],"working on":["it.","character","a"],"working out":["what","how"],"working solution":["right"],"working the":["same"],"working through":["the","this"],"working to":["change."],"working with":["Clojure","such","strings","lazy","assert.","associative"],"working without":["closing"],"working\" at":["least"],"working. I":["instead"],"working. and":["then"],"works also":["as"],"works and":["it's"],"works as":["a","an"],"works better":["here"],"works but":["I"],"works but...":["meh."],"works exactly,":["but"],"works fine,":["idiomatic"],"works for":["strings."],"works great":["in"],"works in":["the"],"works just":["fine."],"works like":["a"],"works on":["any","strings","a"],"works perfectly":["fine."],"works pretty":["well.","well,","well,"],"works roughly":["like"],"works simply":["like"],"works the":["same","way"],"works well,":["but"],"works with":["that","sequences,","substrings."],"works without":["the"],"works, I":["think","would"],"works, and":["this"],"works, but":["the","is","a","clojure.string/blank?","there","you","it's"],"works, it":["might"],"works. I":["just"],"works. I'd":["appreciate"],"works. It's":["good"],"works. Pretty":["sweet"],"works. Still,":["`nucleotide-counts`"],"works. You":["can"],"world code":["to"],"world code*":["I"],"world example.":["In"],"world's two":["worst"],"world. What":["do"],"worlds apart.":["I"],"worries, I":["didn't"],"worry about":["calling","case","exporting"],"worry about,":["but","but"],"worry so":["much"],"worry that":["the"],"worse, when":["doing"],"worst that":["could"],"worst variable":["names][worst]."],"worth a":["look."],"worth additional":["language"],"worth checking":["out"],"worth considering":["nonetheless."],"worth doing":["at"],"worth giving":["the"],"worth it":["to","or","to","in","to","for","to"],"worth it.":["Might"],"worth looking":["at"],"worth making":["sure","a"],"worth mapping":["the"],"worth mentioning":["that","that"],"worth putting":["in"],"worth the":["tradeoff,","fuss.","effort","cost","loss","fuss.","fuss.","sacrifice","extra"],"worth to":["figure","type"],"worth trying":["to"],"worth using":["a"],"worthwhile to":["extract","extract","extract","extract","extract","use","extract","extract","extract","extract","extract","extract","extract","split","define","assign","extract","assign","extract","extract","extract","assign","extract","extract","consider"],"worthy of":["such"],"would (=":["x"],"would I":["not?"],"would `rest`":["be"],"would a":["good"],"would add":["newlines","would","more"],"would agree":["with"],"would all":["point"],"would allow":["you","something","me","you","you","you","you","you","you","you","you","you","you"],"would already":["be","be","be"],"would also":["take","make","be","not","be","suggest","work.","allow"],"would another":["name"],"would appear":["in"],"would append":["a"],"would argue":["that","that","that","that","that"],"would at":["least"],"would avoid":["the"],"would be":["yelling,","worth","better","the","accepted.","to","a","interpreted","much","worthwhile","worthwhile","cleaner.","easier","as","easier","interested","doing","the","using","any","better","to","nice.","normally","much","to","clearer.","a","great.","simpler","interested","very","more","good","better?","overkill.","good","appreciated.","using","much","good","familiar","pretty","*real","better","more","nice","useless","worth","to","good","to","clearer","slightly","clearer","worthwhile","overkill","shown","a","whether","if","increased","good","good","better","good","copying","good","the","that","the","sequential","to","a","to","pretty","good","more","good","more","a","enough","a","a","clearer","better","also","much","less","splitting","expected","more","exactly","a","to","more","one","the","more","worth","rubbish!","good","a","better","to","enough","read.","simple","good","`#{\\A","using","more","supposed","reduced","`response-for`.","worth","to","more","a","in","appreciated!","more","a","something","seen","useful.","more","considered","idiomatic","more","on","to","enough.","highly","a","clearer","to","a","helpful","good","more","more","verbose.","precise.","simple","returned,","good","a","a","the","much","nil","called","needed","better","considered","a","a"],"would become":["a"],"would benefit":["from"],"would better":["be","define"],"would bit":["more"],"would call":["the","them"],"would change":["is","the"],"would clojure.string/upper-case":["be"],"would clutter":["the"],"would collapse":["the"],"would comment":["a"],"would consider":["defining","refactoring","is"],"would contain":["references"],"would cover":["that"],"would define":["every"],"would definitely":["tidy","help","prefer"],"would depend":["on"],"would describe":["a","having"],"would do":["is","the"],"would drop":["the"],"would end":["up","up"],"would evaluate":["as"],"would even":["go"],"would expect":["bob","the","it","the"],"would fail":["if"],"would fare":["better"],"would feel":["clearer"],"would first":["check"],"would fit":["the"],"would fix":["that?"],"would flip":["the"],"would flow":["naturally","more","like"],"would force":["everyone"],"would generate":["the"],"would get":["rid"],"would give":["you"],"would happen":["if","if","if","if","if"],"would have":["made","probably","to","functions","to","looked","do","sanitized/normalized","the","used","been","to","to","been","to","to","picked","eliminated","to","been"],"would help":["it,","maintainability","the","if","a","with","explain","readability.","others","here.","reduce"],"would help.":["Also"],"would hide":["that"],"would highly":["recommend"],"would however":["consider"],"would improve":["readability."],"would increase":["readability","legibility"],"would inevitably":["make"],"would interpret":["it"],"would involve":["one"],"would it":["be","be","maybe","be","look","make","make","compare","be","be","be"],"would just":["replace","take","put","name","remove","store","extract","use","have"],"would let":["you"],"would leverage":["the"],"would like":["to","to","to","to","to"],"would look":["better.","better","a","like","like","like","like","nicer","like:","prettier"],"would love":["more","to"],"would make":["this","`response-for`","the","the","things","the","sense","more","sense","much","it","additional","it","it","the","`normalize-digits`","them","the","the"],"would match":["that"],"would mention":["is"],"would much":["rather"],"would mutate":["over"],"would name":["the"],"would need":["a","to","to","to","to"],"would never":["have"],"would not":["use","be","work","be","create","be"],"would offer":["a"],"would omit":["those"],"would only":["transform","keep"],"would otherwise":["evaluate"],"would perhaps":["be"],"would personally":["go"],"would point":["it"],"would prefer":["to","`get`","to","`(=","to","something","`convert`"],"would probably":["define","look","make","try","also","make","be","go","declare","go","still","make","help","be","be","work.","simplify","be"],"would provide":["better"],"would put":["the"],"would rather":["extract","use"],"would read":["\"get","easier"],"would really":["say","make"],"would recommend":["refactoring"],"would reduce":["the"],"would remove":["it;"],"would rename":["it"],"would replace":["`is_foo`","the"],"would require":["more"],"would respond":["correctly"],"would result":["in","in","in","in"],"would return":["nil.","`\\?`","the","the","true","true"],"would reveal":["intention"],"would satisfy":["@agnes's"],"would save":["some"],"would say":["\"Fine,","it","is","that","idiomatic,"],"would scale":["better"],"would seem":["the","like"],"would separating":["it"],"would simplify":["the","your","your","things"],"would steer":["me"],"would still":["be","give"],"would submit":["it"],"would suffer.":["Duplication"],"would suffice":["to"],"would suffice.":["`:else`","Otherwise,","A","Hmmph."],"would suggest":["making","is","is","you","that","making"],"would suspect":["that"],"would take":["a"],"would that":["be"],"would then":["be","be"],"would there":["be"],"would they":["still"],"would think":["it"],"would this":["really","work"],"would totally":["rock"],"would treat":["a"],"would try":["to","to"],"would turn":["all"],"would understand":["you"],"would use":["only","`s/split`","the"],"would usually":["abstract","have"],"would want":["a","to"],"would weed":["it"],"would work":["too.","the"],"would work,":["but"],"would work?":["Or"],"would you":["think","expect","think","prefer","think","trade","support","have"],"would your":["code"],"would, however,":["prefer"],"wouldn't be":["private.","here.","able","too","obvious","able","much","able","necessary.","exposed","surprised","a"],"wouldn't call":["silence"],"wouldn't do":["readability"],"wouldn't expect":["to"],"wouldn't explicitly":["have"],"wouldn't faze":["him."],"wouldn't go":["so"],"wouldn't have":["to","to","to","the"],"wouldn't help":["improving"],"wouldn't hurt":["much"],"wouldn't know":["which"],"wouldn't mind":["it"],"wouldn't need":["parens","to","merge"],"wouldn't say":["that"],"wouldn't this":["be"],"wouldn't use":["shortcuts"],"wouldn't write":["it"],"wow! I":["didn't"],"wow, is":["it"],"wrap all":["the"],"wrap another":["function"],"wrap char":["in"],"wrap every":["string"],"wrap in":["a"],"wrap one's":["head"],"wrap the":["call"],"wrap their":["definitions"],"wrapped inside":["another,"],"wrapper -":["clj-time)."],"wrapper function,":["since"],"wrapper. But":["this"],"wrapping `frequencies`":["in"],"wrapping anything":["at"],"wrapping it":["in","in"],"wrapping of":["re-seq."],"wrapping that":["into"],"wrapping the":["word"],"wrapping\" in":["silence?"],"wraps the":["body"],"wraps them":["up."],"wreck that":["was"],"write `%1`":["as"],"write `(db":["grade"],"write `(set":["[a"],"write `(str/replace":["dna"],"write `nucleotide-counts`":["using"],"write a":["function","function","macro","comment","map","regex","few"],"write an":["anonymous"],"write deeply":["nested"],"write ends":["up"],"write from":["scratch."],"write functions":["to"],"write in":["Clojure","the"],"write it":["down","like","as"],"write more":["complex","idiomatic"],"write my":["conds"],"write out":["the"],"write something":["like"],"write that":["code","cond."],"write the":["first","opposite:","function","code.","verification","parameters","`pow`"],"write them":["all"],"write these":["as"],"write this":["piece","function"],"write your":["own","own"],"writing Clojure":["prefer"],"writing I":["wasn't"],"writing Ruby:":["public"],"writing `nucleotide-counts`":["with"],"writing clean":["code,"],"writing code":["in"],"writing functions":["with","I"],"writing good":["code"],"writing in":["Clojure"],"writing it":["like","myself."],"writing of":["a"],"writing out":["`clojure.string/method`,"],"writing tests":["to"],"writing that":["sort"],"writing the":["first","first"],"writing transpose":["to"],"writing your":["own"],"written Clojure":["before"],"written ```":["(re-find"],"written after":["doing"],"written and":["I"],"written as":["`#(…%)`","`\\x`","`(boolean","[\"condition","`(not=","`apply","`\\A`,","just","a","`when`","`\\A`,","`(def","\\A,","`(dec","`(zero?","`(dec","`(zero?","a","`yelling?`","`(dec","`(zero?"],"written directly":["as"],"written in":["Clojure,"],"written like":["`\\T`","`(def","`(fn"],"written more":["succintly"],"written previously,":["`valid-nucleotide?`"],"written so":["much"],"written using":["an"],"written very":["clearly,"],"written with":["`not=`"],"written, I":["really"],"written, so":["it","I'm"],"written, you":["don't"],"written. Be":["gentle."],"written. Did":["you"],"wrong -":["a"],"wrong I'll":["take"],"wrong and":["Katrina"],"wrong characters":["while"],"wrong copy-paste":["effect"],"wrong expression.":["One"],"wrong function":["to"],"wrong place":["for"],"wrong place.":["Corrected"],"wrong then":["I"],"wrong to":["me,","me","suggest"],"wrong tree":["anyway"],"wrong type":["and/or"],"wrong with":["it","my","this","shadowing"],"wrong, but":["it's"],"wrong. Again,":["looks"],"wrong. Should":["be"],"wrong. There":["were"],"wrongly suggested":["`repeat`"],"wrote above":["is"],"wrote it":["that","as"],"wrote just":["enough"],"wrote the":["example"],"wrote this":["code?"],"wrote, your":["future"],"wrote: *While":["you"],"x 0).":["And"],"x 1)`":["might","is","is"],"x 2)`":["with"],"x 42)":["be"],"x ==":["42),"],"x and":["alphax."],"x cases,":["they"],"x nil)`":["should"],"x true)`":["is"],"x y)":["is"],"x y))`":["can","could"],"x y),":["it's"],"x y)`":["is","in","which"],"x\"*. In":["this"],"x) (count":["y))`"],"x) directly.":["Otherwise"],"x) is":["actually"],"x) rather":["than"],"x)) \"?\")":["returns"],"x)) returns":["?."],"x))` is":["the"],"x))``` vs.":["```((complement"],"x), or":["is"],"x). So":["in"],"x)` if":["you"],"x)`). You":["can"],"x)`. If":["you"],"x)`. You":["could"],"x)```. I":["think"],"xs))` is":["equivalent"],"xx yy))`":["can"],"y) is":["often"],"y))` can":["also"],"y))` could":["be"],"y))` isn't":["really"],"y), it's":["often"],"y)` in":["clojure."],"y)` is":["spelled"],"y)` which":["is"],"yeah -":["made"],"yeah good":["call."],"yeah that":["does"],"yeah! whoops.":["currently"],"yeah, I":["can"],"yeah, either":["way"],"yeah, plenty":["of"],"yeah, what":["he"],"yeah, you":["have"],"year and":["does"],"year bound":["to"],"year down":["the"],"year from":["now"],"year value.":["That"],"years ago).":["This"],"years. Not":["anymore,"],"yell? and":["question?","a"],"yell? or":["a"],"yell? some-string-sequence))":["and"],"yelled a":["statement?"],"yelled and":["a"],"yelled at":["is"],"yelled question.":["This"],"yelled. Conceivably":["something"],"yelling case.":["I"],"yelling in":["some"],"yelling or":["not."],"yelling then":["you","you"],"yelling, let's":["just"],"yelling? \"Woah,":["chill"],"yelling? {:after":["#{silence?}}"],"yep -":["looking"],"yep it":["needs"],"yes I":["think","agree"],"yes and":["no."],"yes it":["has"],"yes would":["make"],"yes you":["are"],"yes, I":["also","was"],"yes, I'll":["do"],"yes, a":["test"],"yes, but":["how"],"yes, it’s":["string"],"yes, that's":["the","a"],"yes, the":["Java","Java"],"yesterday but":["couldn't"],"yesterday if":["there"],"yet -":["there's"],"yet familiar":["with"],"yet gone":["looking"],"yet it":["sits"],"yet see":["them"],"yet the":["cond"],"yet to":["actually","explore"],"yet without":["your"],"yet! I":["think"],"yet). Very":["cool."],"yet, the":["exercise"],"yet. In":["other"],"yet. The":["thing"],"yet. the":["cleanse-phone"],"yield something":["useful"],"yields the":["same"],"you (:use":["[clojure.string]),"],"you (like":["I"],"you (or":["perhaps"],"you *could*":["change"],"you *what*":["it"],"you -":["much"],"you ;)":["I'll"],"you @clara":["just"],"you @loma,":["your"],"you Clojure":["code"],"you `(:use":["[clojure.string])`,"],"you `(require":["clojure.string))`,"],"you `map":["not=`,"],"you `x`":["variable"],"you a":["pair","lot","pair","new","similar"],"you about":["```replace```?","the"],"you accept":["from","the"],"you actually":["don't","give","attempt"],"you add":["after"],"you again":[":)"],"you already":["had","have"],"you also":["have","pointed"],"you and":["make","automatically","your"],"you another":["perspective","option"],"you anything?":["IMO,"],"you are":["already","calling","doing","doing","doing","almost","totally","right,","referring","talking","at","at","processing","right.","doing","new","reinventing","creating","accessing:","also","looking","making","up","providing","only","counting","reducing","leveraging","talking","not","correct","comparing","using","sorting","asking","yelling","using","correct.."],"you ask":["me"],"you assume":["that"],"you at":["the","least","the"],"you avoid":["it","the"],"you aware":["you"],"you back":["anymore"],"you basically":["have","want"],"you be":["willing","more"],"you believe":["that?)"],"you bit":["more"],"you broke":["apart"],"you calculate":["`(frequencies"],"you call":["it","it","`robot-name`","it"],"you can":["give","use","make","resubmit","treat","avoid","collapse","call","have","have","use","use","generalise","make","do","use","safely","use","just","come","pipeline","test","just","only","make","replace","make","make","think","treat","reduce","make","simply","get","use","also","even","post","overflow","tell","create","make","use","just","check","get","directly","provide","make","make","make","make","consider","make","either","`filter`","just","avoid","remove","make","easily","use","refer","use","keep","omit","resolve","always","use","create","get","count","not","use","encode","just","give","use","use","see","reorder","make","use.","create","use","call","use","use","also","define","also","use","tell","pick","use","simplify","easily","use","get","whittle","simplify","see","use","use","use","find","also","see","define","use","have","in","specify","shorten","combine","give","try","take","leave","eliminate","define","use","just","just","remove","write:","describe","pass","just","use","use","drop","take","use","generally","write","take","use","make","do","also","do","use","use","always","spare","spare","shorten","avoid","write","use","omit","do","take","simplify","use","get","just","see,","use","use","use","just","drop","leverage"],"you can't":["reduce","assume","get","nest","do","tell"],"you can,":["the"],"you canonicalize":["and"],"you capture":["that"],"you care":["to"],"you change":["your","the"],"you check":["for","for","a","it","what","if","if"],"you checking":["for"],"you choose":["to","to"],"you chose":["to"],"you clarify":["your","the"],"you close":["it"],"you code":["here:"],"you combine":["the"],"you come":["up","across"],"you compare":["against","against","against"],"you consider":["using","using","using","using","using","writing","factoring","using","having","using","using","using","abstracting","it","this"],"you considered":["simply","private","moving","defining","breaking","defining","moving","defining","looking","defining","using","dropping","```clojure.core/re-seq```?","normalizing","normalizing","defining","using","that","using","requiring","using","using","using","requiring","using","letting","defining","other","alternatives","using","the","alternatives"],"you control":["the"],"you could":["consider","drop","only","`(remove","just","change","then","get","refactor","use","only","probably","use","directly","more","implement","just","do","`def`","do","explain","try","omit","create","make","bind","make","make","make","add","avoid","create","just","just","consider","simplify","specify","build","use","fix","rename","search","break","do","make","reduce","get","declare","make","use","rewrite","define","consider,","implement","break","compose","make","even","arrange","make","make","just","create","either","filter","always","just","refactorize","join","use","use","also","get","get","also","combine","turn","also","use","just","also","use","do","write","import","e.g.","use","reduce","get","call","also","look","use","make","use","use","see","easily","use","make","do","also","just","also","use","just","use","require","use","probably","use"],"you couldn't":["use","use","extract","create"],"you create":["a"],"you creatively":["think"],"you current":["`use`."],"you decided":["to"],"you declared":["your"],"you decomposed":["this"],"you define":["verses;","the","your","dna-re-pattern"],"you defined":["a","what"],"you describe":["it"],"you did":["not"],"you did.":["I"],"you do":["stick","not","on","not","not","things","in","everything","`[^\\w]+`","in","the","that.","`remove-consecutive-space`,"],"you do,":["be"],"you don't":["have","have","need","have","expose","need","have","need","think","have","end","need","have","need","need","need","have","have","need","have","want","intend","pass","expect","immediately","gain","need","really","need","need","want","want","want","wish","want","need","want","know,","need","use","need","even","want","have","actually","have","actually","need","want","use","need","have","need"],"you don't.":["In"],"you elaborate":["on"],"you elaborate?":["Thanks."],"you enclosed":["the"],"you enough":["information"],"you expect":["\"5\""],"you expected":["from"],"you explicitly":["mark"],"you express":["your"],"you extract":["the","the","`anagram?`","some","the"],"you extracted":["your"],"you familiar":["with","with","with","with","with"],"you feel":["strongly","that","any","about"],"you find":["a","my","a","a","it","an"],"you first":["write"],"you follow":["your"],"you for":["that","pointing","your","the","the","the","the","your","nice","this","submitting","sharing.","your","feedback.","your","so","helping","making","the","your","the","your","your","your","your","your","your","your"],"you from":["the"],"you gain":["with","an"],"you gave":["`\\T`","names","`\"T\"`"],"you generate":["the","the"],"you get":["to","cleaner","cleaner","by","rid","warning","warnings","used","rid","to","by"],"you give":["`s`","me","an","it"],"you go":["down","to","into","that"],"you got":["a"],"you guess":["which"],"you had":["to","to"],"you have":["more","to","is","to","`second-part`","observed,","any","already","the","the","used","used","used","used","already","to","already","used","used","used","used","used","used","a","to","seen","any","noticed","used","already","any","now.","already","closed","any","an","to","a","to","moved","doc","a","to","the","on","uncovered","to","here,","to","solved","required","the","an","and","the","invalid"],"you have.":["Maybe"],"you haven't":["made"],"you helped":["here","me"],"you here":["entirely."],"you ignore":["the"],"you imagine":["it's"],"you immediately":["use"],"you implement":["it"],"you in":["simplifying"],"you included":["a"],"you incorporated":["the"],"you inlined":["the","the"],"you intend":["for"],"you intended":[":)"],"you intended?":["-"],"you intentionally":["choose"],"you interleave":["forms"],"you investigated":["```clojure.core/frequencies```?"],"you is":["the"],"you just":["read.","read.","mapped","map","refer","want","skip","check","had"],"you keep":["going."],"you know":["what","about","Java?","is","about","I","already","that","if","that","about","nothing","about","you","that","it's"],"you know,":["what"],"you knowing":["the"],"you koved":["public"],"you learn":["is:"],"you left":["it"],"you like":["Mr.","better.","it!","that?"],"you like.":["The"],"you link":["to"],"you look":["at","at","at"],"you looked":["into","at","into","at","at","at"],"you lost":["a"],"you lower-case":["the"],"you lowercase":["the"],"you lowercased":["the"],"you made":["a","it","`str`"],"you make":["it","your","the","sure","it"],"you managed":["to","to"],"you map":["over","the","and"],"you mapping":["`lower-case`"],"you mark":["me"],"you may":["get","have","only","well","be","want","want","possibly","find","want","achieve","be"],"you maybe":["reshuffle"],"you mean":["with","by","by","that","a","```frequencies```","like","`w2freq`.","changing","by","by","to","to","by"],"you mean,":["could","but"],"you mean....":["wait"],"you meant":["that","your"],"you memoize":["```\\T```"],"you mention":["my"],"you might":["wanna","make","consider","implement","choose","consider","be","do","in","consider","find","consider","want","want","consider","want","like","like:","want","want","not","want","want","want","want","check","not","like.","want"],"you minimize":["that"],"you missed":["a"],"you move":["on,"],"you moved":["conditions","the"],"you much":["about"],"you name":["things","the"],"you need":["the","to.","to.","to.","to","or","dramatically.","a","the","a","to.","to","the","to","to","either","to","it.","to","the","all"],"you need.":["You"],"you needed":["to","that"],"you non-working":["code"],"you not":["only"],"you noticed":["this"],"you off":["just"],"you offer":["any"],"you often":["see"],"you on":["here!","here!","the","it","your","that","here!"],"you one":["pair"],"you only":["needed","need","look","generate","have","have"],"you optimize":["this?"],"you or":["someone"],"you organize":["them?"],"you pass":["the","in?"],"you passed":["the"],"you past":["assignments."],"you perform":["`(sort"],"you please":["name","take","specify,","explain","elaborate","elaborate"],"you point":["it"],"you pointed":["it"],"you pointing":["that"],"you port":["your"],"you possibly":["think"],"you potentially":["might"],"you preemptively":["removed"],"you prefer":["`let`","a"],"you preserve":["flatter"],"you probably":["don't","don't","don't"],"you proposed,":["although"],"you public":["API"],"you pulled":["some"],"you put":["the","(seemingly","it?","it","a"],"you raised":["the"],"you rather":["I","not"],"you re-order":["the"],"you re-ordered":["splitting"],"you read":["the"],"you really":["need","do","need","only","need","want"],"you reclaim":["a"],"you recommend":["getting"],"you refactored":["your","to"],"you refer":["to"],"you referenced,":["but"],"you rely":["on"],"you rename":["the"],"you reorder":["the"],"you repeat":["use"],"you require":["`replace`."],"you retrieve":["the"],"you run":["the","the"],"you said":["that...","as","made","my"],"you said,":["Unicode"],"you say":["or"],"you say,":["you"],"you say?":["I"],"you saying":["that"],"you scan":["with"],"you search":["for"],"you see":["my","yourself"],"you see,":["the"],"you seem":["to"],"you seen":["`re-seq`?","```clojure.core/filter```?"],"you send":["`nil`"],"you separate":["the","the"],"you separated":["out"],"you set":["a"],"you shadow":["stuff"],"you shamelessly":["let"],"you should":["think","be","be","try","put","have","have","consider","consider","use","indent","look","consider","create","leave","use","try","check","put","prefer"],"you shouldn't":["end","need","need","need"],"you simplify":["the","your","your"],"you solve":["the"],"you stick":["with"],"you still":["have","want","need","have"],"you structured":["it"],"you submit":["the"],"you submitted":["the"],"you suggest":["a"],"you suggest,":["just","this"],"you suggested":["to"],"you suggested,":["see"],"you suggested.":["This","Thanks!"],"you suggesting":["a"],"you support":["more"],"you sure":["there"],"you swap":["the"],"you take":["a"],"you taking":["time"],"you talk":["to"],"you tell":["him"],"you testing":["for"],"you that":["you'd","it's","it"],"you the":["trouble","list","\"case\""],"you then":["incur","get"],"you think":["about","of","of","it's","is","--","about","it","it","about","it's","about","of","you","the","moving","a","of","of","that's","of","of","of","that","there's","about","that","about","about","about","about","about","of","it","--","of","of","of","it","of","giving","it","of","of","of","there's","again:","you","```anagram?```","it's","of","about","about"],"you think,":["putting","is"],"you think?":["It"],"you thinking":["something","of","something"],"you this":["weekend!"],"you thought":["about","about","about","about","about","about","about"],"you three":["strings,"],"you throw":["IllegalArgumentException"],"you tighten":["things"],"you to":["avoid","use","use","is","think","inconsistent","take","use","call","know","remove","explicitly","have","specify","explicitly","find","always","get","avoid","convert","make","generate","avoid","use","simplify","avoid","substring.","construct","simplify","simplify","avoid","get","get"],"you too!!":["I"],"you took":["care"],"you trade":["off"],"you treat":["functions"],"you tried":["using","considered","it","those?"],"you try":["them","to","out"],"you up":["for"],"you updated":["code"],"you use":["it","(in","a","the","predicate","`ns`","a","only","a","the","`\\w+`","elsewhere,","`defn-`,","the","in","zero?","one","an"],"you used":["`\\W+`,","-&gt;&gt;","threading","`(random-string-range","in","used","`(if","[condition","`let`","a"],"you used.":["That"],"you using":["all","it"],"you usually":["only"],"you wait":["for"],"you want":["than","characters","the","here,","to","to","to","it","to","to","to","out","by","to","here.","to","to","concurrency-safety","to","to","to","to","to","in","to","to"],"you want.":["On","Then,"],"you wanted":["to","me","to","to","to","to.","to","to.","to"],"you wanted.":["It's"],"you went":["with"],"you were":["playing","hinting","trying"],"you what":["the"],"you whats":["at"],"you will":["be","of","need","deign","want","consider","eventually","do","have","get","instead"],"you with":["achieving","that","that","that.","my","clojure.core,"],"you won't":["get","need"],"you work":["it"],"you would":["have","have","usually","have","only","have","like","make"],"you wouldn't":["be","have","have","need","have","need","explicitly"],"you wrap":["all"],"you write":["deeply","the"],"you wrote":["it","this"],"you! 1/2":["are"],"you! I":["would"],"you! The":["book"],"you! `reduce-kv`":["is"],"you! replaced":["use"],"you'd be":["better"],"you'd check":["with"],"you'd ever":["want"],"you'd get":["a"],"you'd have":["to"],"you'd just":["put"],"you'd like":["to","anything"],"you'd rather":["not"],"you'd submit":["a"],"you'd talk":["to"],"you'd want":["to"],"you'll be":["able","reading"],"you'll come":["back"],"you'll find":["my"],"you'll get":["much"],"you'll have":["introduced","to"],"you'll make":["the"],"you'll never":["check"],"you'll not":["know"],"you'll run":["into"],"you'll use,":["I"],"you're NOT":["defining"],"you're accepting":["`s`"],"you're actually":["doing"],"you're adding":["or"],"you're addressing":["an"],"you're aliasing":["a"],"you're already":["using"],"you're always":["just"],"you're attempting":["to"],"you're calling":["and","`lower-case`","`lower-case`"],"you're calling—either":["as"],"you're checking":["for","```s```","against","some"],"you're declaring":["functions"],"you're doing":["here.","could"],"you're done":["with"],"you're evaluating":["`slient?`"],"you're familiar":["with"],"you're gaining":["is"],"you're generating":["your"],"you're getting":["at.","at"],"you're going":["in","to"],"you're in":["the"],"you're interested":["in","in"],"you're just":["trying","looking"],"you're looking":["for.","for","for"],"you're making":["two"],"you're mixing":["styles"],"you're no":["more"],"you're not":["sure","yet"],"you're on":["the"],"you're only":["using"],"you're overusing":["the"],"you're probably":["right"],"you're ready":["to"],"you're repeating":["strings"],"you're right":["about","that","again,"],"you're right,":["driis.","I"],"you're saying":["appears","about"],"you're sorting":["the"],"you're testing":["for?","if"],"you're threading":["is"],"you're totally":["right,"],"you're trying":["to","do","for.","to"],"you're unable":["to"],"you're up":["to,"],"you're using":["`anagram-matcher`","clojure","a","`#lastIndexOf`","all","a","in","multimethods","the","(declare)","a"],"you're willing":["to"],"you've addressed":["that"],"you've already":["used","checked"],"you've chosen":["is"],"you've defined":["(The","your"],"you've delivered":["it."],"you've done":["with","is","in"],"you've got":["valid","a"],"you've implemented":["it"],"you've lost":["some"],"you've made":["a","the"],"you've meant":["`sanitize`?"],"you've observed,":["you"],"you've ordered":["fns"],"you've split":["it","out"],"you've used":["in","in","in"],"you've written":["and"],"you), and":["reading"],"you, I":["double","appreciate","did"],"you, `last`":["was"],"you, are":["just"],"you, but":["I"],"you, code":["is"],"you, so":["won't"],"you, zoldar!":["It's"],"you. Also":["since"],"you. Check":["out"],"you. Does":["not"],"you. I":["was"],"you. I'll":["add"],"you. Is":["it"],"you? When":["the"],"your \"approved\"":["submission."],"your \"respond\"":["function,"],"your 1st":["solution."],"your \u003ccode\u003eresponse-for\u003c/code\u003e":["method"],"your AssertionError.":["It"],"your Bob":["receives"],"your Mercury":["function"],"your Nemesis...":["You"],"your RE":["and"],"your Regex":["would"],"your Robot":["record,"],"your `(=":["\"\""],"your `-check`":["methods"],"your `:else`":["clause"],"your `[from":["to]`"],"your ```question?```":["function"],"your ```re-matches```":["is"],"your ```shouting?```":["method"],"your ```to-rna```":["function"],"your `all`":["function"],"your `anagram-of?`":["just"],"your `and`":["into"],"your `build-finder`)":["and"],"your `calm?`":["condition."],"your `clojure.string/*`":["usage"],"your `cond`":["predicates","is","statement.","only"],"your `cond`,":["but"],"your `cond`?":["An"],"your `count`":["method."],"your `day-names`":["data."],"your `divides`":["implementation?"],"your `is-x?`":["functions"],"your `last_char`.":["Also,"],"your `let`":["in"],"your `letter-count`":["functions."],"your `ns`":["declaration"],"your `nucleotide-counts`":["function.","function"],"your `nucleotides`":["Var...it's"],"your `on`":["function."],"your `pluralize`":["function"],"your `pretty-print`":["more"],"your `reduce`":["and"],"your `response-for`":["function","function"],"your `sanitize`":["regex."],"your `silence?`":["predicate."],"your `silent?`":["function"],"your `teenths`,":["`firsts`,"],"your `yelling?`":["and"],"your advantage":["here."],"your advice":[":-)","and","about","further."],"your advice.":["I"],"your alignment":["looks"],"your alternate":["example."],"your approach":["here","was"],"your assert":["accepts"],"your attempt":["to"],"your bindings":["to"],"your blank":["check"],"your brackets?":["Why"],"your calls":["can","can","to","to"],"your case)":["to"],"your cases":["are"],"your character":["range"],"your characters":["names."],"your check":["for","functions"],"your checks":["out","in"],"your checks?":["I"],"your classification,":["they're"],"your code":["does","a","have","much","will","a","more","to","more","seems","until","look","would","a","structure"],"your code.":["I","Particularly","Have"],"your code?":["Right","Have"],"your collection":["isn't"],"your comment":["did","on","is"],"your comment,":["I"],"your comments":["—"],"your comments.":["I’m","They","I'm"],"your cond":["could"],"your conditional":["becomes"],"your conditionals":["into"],"your conditions":["into","into","to","into"],"your condp":["predicate."],"your conscious":["choice.","choice."],"your constants":["instead"],"your count":["function."],"your data":["flowing"],"your definition":["of"],"your doing":["with"],"your domain":["in"],"your example":["and"],"your eyes":["don't"],"your feedback":["into","everyone!","on","is"],"your feedback.":[":)"],"your first":["nit","example","Clojure","iteration","submission.","try."],"your frequency":["map,"],"your friend!":[":)"],"your friends":["on"],"your function":["vs","does","calls.","calls."],"your function's":["assumptions"],"your functions":["to",":)","is"],"your functions.":["These"],"your future":["self"],"your great":["code!"],"your head":["(that's"],"your helper":["function","methods","methods","functions","functions","functions."],"your implementation":["could","work","would","of"],"your incrementer":["function"],"your indentation":["looks"],"your input,":["@lexie."],"your inputs":["into"],"your insightful":["nitpick."],"your intent,":["so"],"your intentions":["as"],"your internal":["helper"],"your introduction":["of"],"your kind":["feedback","words."],"your last":["submission?","nitpick"],"your latest":["bob,","submission","submission."],"your let":["on"],"your libraries":["in"],"your library":["imports"],"your life":["easier.","easier.","easier."],"your line":["#2"],"your lines":["more"],"your map":["representing","lookup."],"your method":["is","outside"],"your methods":["are","uniform","return"],"your multimethod":["implementation."],"your name":["generation"],"your namespace":["declaration","to:","declaration","to","declaration?","at","(ie","has"],"your namespace.":["Alternately,","You"],"your naming":["like"],"your naming.":["`yelling?`"],"your new":["methods."],"your next":["revision,"],"your nit":["I've","history."],"your nitpick.":["I"],"your ns":["form;","form"],"your only":["comparisons"],"your operations":["here?","a"],"your opinion":["since","it","and"],"your opinions":["are"],"your opninion,":["should"],"your other":["feedback,","functions"],"your own":["example","(perfectly","power","loop.","version","`square`"],"your parade...":["\u003crimshot\u003e"],"your parameters?":["Is"],"your parens":["(with"],"your parentheses":["on"],"your past":["assignments.","assignments.","assignments,","assignments.","assignments.","assignments.","assignments.","assignemnts,","assignemnts,","assigments","assignments,","assignments.","assignments."],"your phrase":["checks"],"your pick":["on"],"your placeholder.":["Since"],"your point":["in","that"],"your point,":["but"],"your point.":["However,"],"your predicate":["functions?","functions?","functions,","methods,","methods"],"your predicates":["could"],"your previous":["assignments","assignment.","submission,","iteration","iterations"],"your private":["functions"],"your program":["much"],"your project":["because"],"your prompt":["reply."],"your proposal;":["sorry"],"your public":["interface"],"your question":["check.","about"],"your random":["integers"],"your reader":["knows"],"your real":["performance"],"your reasoning":["about"],"your regex":["you","could","that"],"your remark":["about","into"],"your resubmit":["this?"],"your review!":["Aside:"],"your riddles!":[":)"],"your second":["sentence?","paragraph"],"your sentiment":["functions"],"your shout":["matcher"],"your sight":["for"],"your silence":["and","function"],"your silence?":["function;"],"your single":["nitpick."],"your solution":["has","works,","is","much","is","more","also","really"],"your solution!":["I"],"your solutions?":["So"],"your string":["matching."],"your submission":["I","in"],"your suggested":["regex"],"your suggestions":["in","(well,","in"],"your suggestions,":["they"],"your test":["methods","functions"],"your tests":["into","are"],"your tests?":["I"],"your third":["sentence."],"your thoughts":["on"],"your time":["-","and"],"your to-rna":["function."],"your two":["`defn`s."],"your use":["of","of","of","of","of","of","of"],"your var":["definition"],"your way":["better.","-","seems"],"your whitespace;":["trailing"],"your words":["are"],"your work":["a","to","-","for"],"your wrapper.":["But"],"your's has":["some"],"yours is":["wrong,","more"],"yours is),":["there"],"yours, but":["I've"],"yours. Eventually":["I've"],"yours. You":["can"],"yourself (especially":["any"],"yourself making":["an"],"yourself now,":["all"],"yourself the":["import"],"yourself to":["one"],"you’ll find":["a"],"you’re finding":["it"],"you’re right":["about"],"yy))` can":["also"],"zen quality":["to"],"zero counts":["for"],"zero counts,":["frequencies"],"zero manually":["-"],"zero map":["and"],"zero values,":["or"],"zero? and":["count"],"zipmap (also,":["it"],"zipmap. Good":["call."],"zipper is":["kind"],"zoldar but":["want"],"zoldar for":["pointing"],"zoldar said,":["restated.)"],"zoldar! It's":["a"],"zoldar, `clojure.string.blank?`":["can"],"{\"T\" \"U\"":["\"A\""],"{:C :C":[":G"],"{:T :U":[":A"],"{:a 1":[":b"],"{:after #{silence?}}":["[phrase]"],"{:matcher ...}]`.":["Note"],"{:pre (expresion":["that"],"{:pre [(SOME":["EXPRESSION"],"{:pre [(every?":["#{\\A"],"{:x 5":[":y"],"{\\A \\A":["\\C","\\T"],"{\\A \\A,":["\\T"],"{list core-list}]":["as"],"{word (+":["1"],"{} (generate-words":["...))`."],"{} ...`":["bit"],"{}`, so":["pass"],"~1 check":["per"],"~2,5 years.":["Not"],"~name ~args":["~@lavinia)"],"λ and":["∈"],"– this":["is"],"— I":["hadn’t"],"— I’m":["brand"],"— it's":["an"],"— it’s":["to"],"— nitpickers":["don't"],"— no":["logic","logic"],"— not":["bad!"],"— sorting":["and"],"— that":["can"],"— why":["putting"],"— you":["should"],"“foreign” interop":["when"],"“good enough”":["and"],"“internal” function":["does"],"… gene1":["gene2)`"],"…) are":["superfluous,"],"…) but":["for"],"…) in":["anagram-matcher."],"…))` instead":["of"],"…))`. Another":["simplification"],"…)` is":["bad"],"…)`, check":["out"],"…x)` written":["as"]},"prefix_len":2}