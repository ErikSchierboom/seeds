{"Data":{" ":["Well,","Some","#####","I","#####","My","Using","-","-","#####","Well,","`let...and`.","Personally","Strings","Yes,","I","I","Well","I","Batteries","Personally","For","For","Other","Looks","I'm","No,","However,","Yes,","I'm","When","```","Warning","```","Any","Congratulations","From","```","val","is_suffix","```","The","The","That","I","Makes","Minor","Can","Ah,","Re:","Err,","The","Uhm,","I","This","I'd","You","Oh,","I've","The","```ocaml","let","let","|","|","go","```","Hmm,","`let","let","|","|","go","Er...","The","And","Good","```ocaml","let","let","|","|","go","```","Certainly","val","is","val","You're","Let's","I'll","Ah,","A","I","Is","I'm","Oh,","It","Removed","Let","I","*","*"]," #####":["About","About","About"]," *":["Why","Why"]," -":["Differentiate","Help"]," A":["bit"]," Ah,":["good","wait,"]," And":["what"]," Any":["idea"]," Batteries":["on"]," Can":["you"]," Certainly":["feels"]," Congratulations":["on"]," Er...":["not"]," Err,":["yes,"]," For":["`describe_nothing`","`describe_question`"]," From":["the"]," Good":["point,"]," Hmm,":["that"]," However,":["you"]," I":["see","didn't","never","do","think","have","just","can't"]," I'd":["just"]," I'll":["take"]," I'm":["a","not","not"]," I've":["used"]," Is":["there"]," It":["should"]," Let":["me"]," Let's":["see,"]," Looks":["great."]," Makes":["sense."]," Minor":["style"]," My":["point"]," No,":["I"]," Oh,":["I","I"]," Other":["than"]," Personally":["I","I"]," Re:":["the"]," Removed":["the"]," Some":["answers:"]," Strings":["being"]," That":["does"]," The":["warning","Core","~f","rest","long"]," This":["looks"]," Uhm,":["yup,"]," Using":["let...and"]," Warning":["6:"]," Well":["I"]," Well,":["I","string"]," When":["this"]," Yes,":["the","the"]," You":["could"]," You're":["not"]," `let":["length"]," `let...and`.":["Good"]," go":["0","0","0"]," is":["not"]," is_suffix":["s"]," let":["length","go","rec","length","go"]," val":["is_suffix","length","length"]," |":["[]","_","[]","_","[]","_"],"\"?\"`, because":["you"],"\"labels omitted\"":["warning"],"##### About":["complexity","let...and","describe_yielding"],"'_a list":["-\u003e"],"'_a means":["something"],"'a list":["-\u003e","-\u003e"],"'a list)":["if"],"'in' after":["every"],"(EDIT: Might":["be"],"(I usually":["only"],"(acc +":["1)","1)","1)"],"(by explicit":["type"],"(less module":["madness),"],"(mostly building":["this"],"(polymorphic) and":["'_a"],"(sometimes, wrongly,":["known"],"(such as":["non-tail-recursive"],"(there are":["some"],"(type int,":["but"],"* Why":["let","the"],"*no* idea":["what"],"*pratical* experience,":["that's"],"+ 1)":["t","t","t"],"- Differentiate":["the"],"- Help":["to"],"- I":["think"],"-\u003e 'a":["list"],"-\u003e go":["(acc","(acc","(acc"],"-\u003e int',":["if"],"-\u003e int`.":["I","So"],"-\u003e into":["="],"-\u003e suffix:t":["-\u003e"],".. and":["..","instead",".."],"... and":["..."],"... and`":["for"],"... in":["let"],"... in`":["is"],"...` makes":["refactoring"],"...` may":["make"],"0 n`":["or"],"1) t":["in","in","in"],"6: labels":["were"],": '_a":["list"],": 'a":["list"],": int":["-\u003e"],": t":["-\u003e"],":: t":["-\u003e","-\u003e","-\u003e"],"? Furthermore,":["I"],"? What's":["your"],"A bit":["briefer"],"After a":["little"],"Ah, good":["point."],"Ah, wait,":["this"],"And the":["standard"],"And this":["one"],"And what":["about"],"Any idea":["what"],"Async. Core's":["documentation"],"Batteries and":["Core"],"Batteries are":["the"],"Batteries better":["simply"],"Batteries is":["easier","quite","almost"],"Batteries mainly":["for"],"Batteries on":["the"],"Batteries. I":["used"],"Batteries` at":["the"],"Batteries` won't":["lose"],"Bazaar thing":["again."],"Both Batteries":["and"],"But the":["standard"],"Can you":["write"],"Cathedral and":["the"],"Certainly feels":["like"],"Comparable and":["such."],"Congratulations on":["being"],"Container.Make functor":["works."],"Core (mostly":["building"],"Core and":["Batteries","that"],"Core convention":["is"],"Core extend":["the"],"Core feels":["more"],"Core for":["the"],"Core is":["well"],"Core's documentation":["often"],"Core. Those":["don't"],"Core_extended has":["some"],"Corelib, only":["Extlib"],"Counter arguments":["are"],"Did you":["consider"],"Differentiate the":["different"],"Elixir and":["also"],"Elixir submission":["and"],"Enum in":["Elixir"],"Er... not":["sure"],"Err, yes,":["my"],"Extlib then":["Batteries"],"Extlib, only":["a"],"FLOSS dev.":["What"],"For `describe_nothing`":["I'd"],"For `describe_question`":["`BatString.ends_with`"],"From the":["OCaml"],"Furthermore, I":["don't"],"Furthermore, the":["lack"],"Galium team":["at"],"Good answer,":["you"],"Good point,":["you"],"Haskell. Sad":["face."],"Have I":["done"],"Having said":["that"],"Help to":["think"],"Hmm, that":["doesn't"],"However, I":["have"],"However, you":["are"],"I add":["the"],"I am":["eager","emulating","a"],"I believe":["lower_case_with_underscores"],"I can't":["say","check","help"],"I did":["not"],"I didn't":["thought"],"I do":["still","have"],"I don't":["see","have","really","quite","know","have"],"I done":["something"],"I get":["the","a","in"],"I guess":["these"],"I guess.":["Batteries"],"I have":["no","no","*no*"],"I just":["took"],"I leave":["it"],"I like":["the","Batteries","the"],"I need":["to"],"I never":["used"],"I prefer":["`open"],"I rarely":["see"],"I see":["now"],"I separate":["let's"],"I started":["with","to"],"I think":["I","`String.is_empty","this"],"I totally":["didn't"],"I try":["to","to"],"I used":["Core"],"I was":["looking","having","just"],"I'd go":["with"],"I'd just":["use"],"I'll take":["a"],"I'm a":["bit"],"I'm missing":["something?"],"I'm not":["sure","sure","behind"],"I've got":["an"],"I've used":["your"],"IO, for":["a"],"If you":["write"],"In this":["aspect"],"Is it":["about"],"Is there":["any"],"Isn't a":["functional"],"It should":["be"],"It takes":["a"],"It's something":["called"],"It's the":["same"],"Labels are":["one"],"Let me":["guess,"],"Let's see,":["`'a`"],"Looks great.":["No"],"ML language":["as-fast-as-C"],"Making an":["ML"],"Might be":["a"],"Minor style":["point:"],"My point":["of"],"No tail":["call"],"No, I":["did"],"OCaml [Core.String":["docs](https://ocaml.janestreet.com/ocaml-core/latest/doc/core_kernel/Core_string.html):"],"OCaml btw":["as"],"OCaml code":["looks"],"OCaml constructions.":["What"],"OCaml for":["functions)."],"OCaml is":["a"],"OCaml to":["cooperate"],"OCaml unit":["tests"],"OCaml used":["it"],"OCaml. Partial":["application"],"Ocaml are":["imperative"],"Oh, I":["was","totally"],"Or maybe":["something"],"Other than":["that,"],"Partial application":["(sometimes,"],"Perhaps I've":["got"],"Personally I":["think","prefer"],"Re: the":["recomputing"],"Real World":["OCaml"],"Removed the":["warning"],"See for":["example"],"See http://caml.inria.fr/resources/doc/faq/core.en.html#eta-expansion":["(EDIT:"],"So the":["added"],"String module":["to"],"String module!":["`String.is_suffix`"],"String.is_suffix ~suffix:\"?\"`":["without"],"String.strip` is":["more"],"Strings are":["mutable"],"Strings being":["imperative:"],"Submitted a":["new"],"Text strings.":["The"],"Thanks for":["the"],"That does":["look"],"That's essentially":["how"],"The Core":["convention"],"The documentation":["of"],"The long":["time"],"The rest":["looks"],"The warning":["here"],"The ~f":["is"],"This looks":["pretty"],"Those don't":["work"],"UTF-8 Text":["strings."],"Uhm, yup,":["forgot"],"Using let...and":["explicitly:"],"Usually stuff":["like"],"Warning 6:":["labels"],"Well I":["don't"],"Well, I":["can't"],"Well, string":["in"],"What are":["your"],"What arguments":["weigh"],"What is":["the"],"What's your":["preference"],"When this":["first"],"Why did":["you"],"Why let":[".."],"Why the":["imperative"],"Will change":["that"],"Will switch":["to"],"Without the":["`rec`"],"World OCaml":["used"],"Yes, the":["non-tail-recursive","compose"],"You could":["use"],"You're not":["the"],"[Batteries](http://batteries.forge.ocamlcore.org/) or":["[Core](https://ocaml.janestreet.com/ocaml-core/latest/doc/)"],"[Core](https://ocaml.janestreet.com/ocaml-core/latest/doc/) or":["gradually"],"[] -\u003e":["acc","acc","acc"],"_ ::":["t","t","t"],"`\"?\"` using":["the"],"`'_a list":["-\u003e"],"`'_a` shows":["up"],"`'a list":["-\u003e"],"`'a` means":["anything"],"`BatString.ends_with` might":["come"],"`BatString.fold_left` but":["that's"],"`Fn.compose` works":["as"],"`String.fold_left` instead":["of"],"`String.for_all ~f:Char.is_whitespace`":["for"],"`String.is_empty s":["|\u003e"],"`String.is_suffix s":["\"?\"`,","~suffix:\"?\"`"],"`String.is_suffix` for":["`is_question`."],"`String.is_suffix` improves":["matters"],"`String.is_suffix` to":["be"],"`Values do":["not"],"`and ...`":["may"],"`describe_nothing` I'd":["go"],"`describe_question` `BatString.ends_with`":["might"],"`filter`. Why":["did"],"`fold_left` for":["strings."],"`fold` which":["gives"],"`fold`... I":["was"],"`foldl`? Did":["you"],"`go 0":["n`"],"`is_silence` just":["to"],"`is_silence` points-free":["using"],"`is_silence`, though":["I'm"],"`let ...":["in","and"],"`let ...`":["makes"],"`let length":["n"],"`let rec":["go"],"`let...and`. Good":["answer,"],"`map` and":["`filter`."],"`n` parameter":["is"],"`n` variable":["the"],"`open Batteries`":["at","won't"],"`rec` the":["function"],"`s |\u003e":["String.is_suffix"],"`word` for":["every","every"],"a FLOSS":["dev."],"a bit":["with","more","curious","clunky","getting","of","of","difficult"],"a computer":["at"],"a few":["tricks","questions:"],"a full":["reaction"],"a function":["and"],"a functional":["algorithm"],"a good":["thing..."],"a higher":["order"],"a keyword":["argument."],"a known":["problem"],"a label":["in"],"a label,":["basically"],"a large":["enough"],"a let":["rec"],"a list":["of"],"a little":["meddling"],"a look":["at","using"],"a matter":["of","of"],"a new":["version"],"a particular":["order."],"a really":["strong"],"a reason":["I"],"a rec":["there."],"a set":["of"],"a similar":["but"],"a string":["is"],"a very":["functional"],"a well":["designed"],"about labels":["as"],"about scopes":["and"],"about scoping,":["what's"],"about the":["implementation","last"],"about them":["?"],"about type":["annotations"],"about using":["Battery/Corelib."],"acc :":["int"],"acc =":["function","function","function"],"add the":["`n`"],"added `n`":["parameter"],"adding stuff":["to"],"advise on":["style!"],"after a":["bit"],"after every":["variable"],"again. I":["like"],"ahead in":["the"],"ahem, limited":["with"],"algorithm for":["checking"],"algorithm shorter":["here?"],"all about":["scopes"],"all that":["well"],"allow strings":["to"],"almost fully":["compatible"],"already prevents":["this,"],"also how":["the"],"also looks":["like"],"alternative standard":["library"],"always forcing":["the"],"always using":["`let"],"am a":["FLOSS"],"am eager":["for"],"am emulating":["the"],"amendment for":["`is_silence`"],"an ML":["language"],"an OCaml":["exercise."],"an error":["(type"],"an infinite":["loop"],"and '_a":["means"],"and ..":["and","and)?"],"and ...":["and`"],"and Batteries":["are"],"and Batteries.":["I"],"and Comparable":["and"],"and Core":["extend"],"and `String.fold_left`":["instead"],"and `filter`.":["Why"],"and a":["very"],"and also":["how"],"and because":["it"],"and concat":["I"],"and in":["the"],"and instead":["of"],"and it":["felt"],"and lifespan.":["Furthermore,"],"and many":["people"],"and map":["would"],"and more":["imperative"],"and no.":["Strings"],"and occasionally":["refactoring"],"and optional":["arguments"],"and such.":["Core_extended"],"and that":["`let","it"],"and that's":["exactly"],"and the":["Bazaar","functions"],"and then":["ran"],"and things":["should"],"and` for":["values"],"annotations on":["the"],"annotations or":["whatever),"],"answer, you":["clearly"],"any experience":["with"],"any functionality":["that's"],"any nice":["functions"],"any simple":["way"],"any way":["of","of"],"anything (polymorphic)":["and"],"apart from":["`fold`"],"appear that":["something"],"append and":["concat"],"application (sometimes,":["wrongly,"],"application of":["this","a"],"approach by":["using"],"are a":["good"],"are imperative":["per"],"are implemented":["in"],"are mutable":["though"],"are one":["of"],"are right":["filter"],"are some":["overrides"],"are that":["always"],"are the":["whole"],"are used.":["Thanks"],"are your":["thought"],"argument. See":["http://ocaml.org/learn/tutorials/labels.html#Labelledarguments"],"arguments are":["that"],"arguments in":["Core."],"arguments of":["`String.is_suffix`"],"arguments weigh":["strongest"],"around this":["(by"],"around, but":["I"],"as I":["am"],"as [Batteries](http://batteries.forge.ocamlcore.org/)":["or"],"as `fold_left`":["for"],"as currying)":["can"],"as foldr":["and"],"as here:":["http://exercism.io/submissions/1ca0fd0a7cd273c45228d39d"],"as it":["makes"],"as non-tail-recursive":["list"],"as they":["let"],"as-fast-as-C was":["a"],"ask a":["few"],"aspect Core":["and"],"at least":["one"],"at the":["bottom.","module","top","wrong","moment"],"at this":["time..."],"at this,":["it's"],"at try.ocamlpro.com,":["apart"],"basic data":["structures"],"basically a":["keyword"],"be `go":["0"],"be a":["similar"],"be explicit":["about"],"be in":["a"],"be nicer":["as"],"be possible":["to"],"be possible.":["That's"],"be seen":["under"],"be used":["functionally."],"be. I":["don't"],"because I":["was"],"because Real":["World"],"because it":["means"],"because you":["don't"],"behind a":["computer"],"being defined":["is"],"being imperative:":["yes"],"being the":["first"],"being used":["that"],"believe lower_case_with_underscores":["is"],"better simply":["on"],"binding if":["it"],"bindings (I":["usually"],"bit briefer":["than"],"bit clunky":["unlike"],"bit curious":["about"],"bit difficult":["to"],"bit getting":["used"],"bit more":["like"],"bit of":["getting","trial"],"bit with":["Core"],"briefer than":["last"],"btw as":["they"],"build a":["set"],"building this":["exercism"],"but I":["like","like","get","guess"],"but `Fn.compose`":["works"],"but different":["issue)"],"but expecting":["type"],"but feel":["this"],"but from":["the"],"but it":["does","also"],"but let":["me"],"but that's":["a"],"but this":["is"],"but what":["it"],"but with":["a"],"but you":["could"],"by not":["labelling"],"by ocaml":["veterans."],"by people":["adding"],"by saying":["`String.is_suffix"],"by using":["a","partial"],"call recursion":["problems"],"called the":["value"],"can cause":["this"],"can indeed":["do"],"can look":["better:"],"can't check":["this"],"can't help":["but"],"can't say":["I"],"cancelling that":["n"],"candidate -":["I"],"cause this":["problem."],"change that":["and"],"channels) so":["`open"],"check the":["string"],"check this":["but"],"checking if":["a"],"chose to":["implement"],"clearer. Labels":["are"],"clearly understand":["what's"],"close to":["my"],"clunky unlike":["in"],"code easier":["to"],"code like":["`s"],"code looks":["like"],"code much":["clearer."],"come in":["handy.","quite"],"compatible with":["the"],"compiles I":["get"],"complicated and":["more"],"compose function":["feels"],"compose is":["so"],"composition I":["fear."],"computer at":["the"],"computing the":["sorted"],"concat I":["started"],"concat. After":["a"],"concat. It's":["the"],"concerning the":["running"],"consider to":["implement"],"consistent. In":["this"],"constructions. What":["is"],"convention is":["to"],"coolest features":["of"],"cooperate with":["such"],"could try":["`let"],"could use":["something"],"curious about":["the"],"currying) can":["cause"],"data structures":["and"],"debatable design":["decisions"],"decisions (such":["as"],"defined is":["not"],"design decisions":["(such"],"designed but":["I"],"dev. What":["are"],"did not":["consider"],"did you":["chose"],"didn't notice":["the"],"didn't thought":["about"],"difference for":["the"],"different levels":["of"],"different variations":["of"],"difficult to":["wrap"],"do advise":["on"],"do have":["some"],"do not":["match:"],"do still":["think"],"do that":["by"],"do to":["get"],"doc page":["for"],"documentation of":["Batteries"],"documentation often":["feels"],"does after":["a"],"does it":["need"],"does look":["like"],"does make":["the"],"doesn't really":["have"],"doesn't seem":["to"],"doing IO,":["for"],"doing by":["saying"],"don't have":["to","time"],"don't know":["if"],"don't pass":["`\"?\"`"],"don't quite":["understand."],"don't really":["have"],"don't see":["any"],"don't work":["all"],"done something":["glaringly"],"due to":["concat."],"eager for":["feedback"],"easier to":["learn","read."],"easier, that":["`and"],"effectively compulsory,":["then?"],"either use":["one"],"emulating the":["guard"],"ends with":["suffix."],"enough list)":["and"],"error (type":["int,"],"error message":["it's"],"essentially how":["these"],"every candidate":["-"],"every function":["seems"],"every variable":["binding."],"exactly what":["you're"],"example [this":["styleguide](http://caml.inria.fr/resources/doc/guides/guidelines.en.html)."],"exercism OCaml":["unit"],"exercism track)":["and"],"expecting type":["'a"],"experience in":["OCaml."],"experience with":["Extlib,"],"experience, that's":["why"],"experience. However,":["I"],"explicit about":["labels"],"explicit type":["annotations"],"extend the":["String"],"extra stuff":["but"],"fact that":["Batteries"],"fail if":["you"],"features of":["OCaml"],"feedback by":["ocaml"],"feel this":["is"],"feeling. Core":["feels"],"feels a":["bit","bit"],"feels incomplete,":["which"],"feels like":["it"],"feels more":["limited"],"felt like":["a"],"few tricks":["it"],"file while":["the"],"filter and":["map"],"first compiles":["I"],"first to":["try"],"foldl and":["then"],"foldr and":["in"],"foldr for":["them;"],"foldr, since":["I"],"for `is_silence`":["just"],"for `is_silence`,":["though"],"for a":["reason","full"],"for checking":["if"],"for every":["candidate?","candidate"],"for example":["[this"],"for feedback":["by"],"for functions).":["See"],"for me,":["though"],"for political":["reasons"],"for strings.":["But"],"for the":["reasons","exercism","remarks.","String","type","tests"],"for them;":["see"],"for values":["inside"],"force us":["to"],"forcing the":["arguments"],"forgot a":["rec"],"form of":["`word`"],"from `fold`":["which"],"from the":["error"],"full reaction":["right"],"fully compatible":["with"],"function and":["that's"],"function being":["defined"],"function feels":["a"],"function is":["`'a"],"function seems":["to"],"function to":["implement"],"functional algorithm":["shorter"],"functional approach":["by"],"functional programming":["is"],"functionality that's":["in"],"functions ahead":["in"],"functions are":["implemented"],"functions doing":["IO,"],"functions for":["the"],"functions in":["terms"],"functions of":["the"],"functions over":["time."],"functions such":["as"],"functions that":["will"],"functions work":["at"],"functions). See":["for"],"generated by":["not"],"get a":["warning:"],"get in":["practice:"],"get rid":["of"],"get the":["impression"],"getting OCaml":["to"],"getting around":["this"],"getting used":["to","to..."],"given the":["heavy"],"gives an":["error"],"go (acc":["+","+","+"],"go 0":["n`"],"go acc":["=","=","=",":"],"go with":["`BatString.is_empty`."],"goal of":["the"],"going on.":["Counter"],"good but":["with"],"good point.":["Will"],"good, every":["function"],"got an":["infinite"],"gradually build":["a"],"grateful for":["the"],"great. No":["tail"],"grown by":["people"],"guard system":["with"],"guess these":["labels"],"guess, you":["have"],"guess. Batteries":["is"],"gut feeling.":["Core"],"hand feels":["a"],"handy. Submitted":["a"],"hangs up!":["Perhaps"],"hard to":["learn","tell"],"has grown":["by"],"has some":["extra"],"has stuff":["like"],"has to":["be"],"have *no*":["idea"],"have any":["nice","experience"],"have at":["least"],"have experience":["in"],"have no":["experience.","*pratical*"],"have some":["trouble"],"have time":["for"],"have to":["type"],"having some":["trouble"],"head around,":["but"],"heavy use":["of"],"help but":["feel"],"helper functions":["over"],"here is":["just"],"here says":["you're"],"higher order":["function"],"history. Making":["an"],"how the":["Container.Make"],"how these":["functions"],"http://caml.inria.fr/resources/doc/faq/core.en.html#eta-expansion (EDIT:":["Might"],"idea of":["`let"],"idea what":["I","nice"],"idiomatic, but":["`Fn.compose`"],"if I":["try","add","leave"],"if a":["string"],"if it":["is","would"],"if it's":["that"],"if s":["ends"],"if this":["is"],"if you":["pass"],"imperative algorithm":["for"],"imperative per":["se,"],"imperative than":["it"],"imperative: yes":["and"],"implement it":["using"],"implement most":["others."],"implement them":["in"],"implementation of":["`map`"],"implemented in":["Enum"],"implementing concat.":["After"],"impression it":["mostly"],"improves matters":["a"],"in Core.":["Those"],"in Elixir":["and"],"in Enum":["in"],"in Haskell.":["Sad"],"in OCaml":["for"],"in OCaml.":[";)"],"in Ocaml":["are"],"in a":["particular"],"in functions":["doing"],"in let":["..."],"in practice:":["`Values"],"in quite":["handy."],"in scope":["inside"],"in scope,":["more"],"in terms":["of","of"],"in the":["file","standard","last","application","application"],"in` is":["more"],"incomplete, which":["makes"],"indeed do":["that"],"infinite loop":["somewhere?"],"inside functions":["for"],"inside its":["own"],"instead of":["`BatString.fold_left`","several"],"int -\u003e":["'a"],"int', if":["I"],"int, but":["expecting"],"int`. I":["do"],"int`. So":["the"],"integers. Have":["I"],"intermediate functions":["ahead"],"into =":["function`."],"into massive":["problems"],"is `'a":["list"],"is a":["matter","label,","known","bit"],"is all":["about"],"is almost":["fully"],"is at":["the"],"is due":["to"],"is easier":["to"],"is is":["unknown."],"is just":["too"],"is more":["regular.","idiomatic,"],"is not":["in","included"],"is out":["of"],"is part":["of"],"is particularly":["bad."],"is passing":["the"],"is pretty":["close"],"is quite":["good,"],"is rather,":["ahem,"],"is shouting?":["Isn't"],"is so":["useful"],"is somewhat":["more"],"is that":["functional"],"is the":["preferred","meaning","n"],"is there":["any"],"is to":["be"],"is unknown.":["Usually"],"is well":["designed"],"is what":["I","makes"],"is_suffix :":["t"],"is_suffix s":["~suffix"],"isn't it":["?"],"issue as":["here:"],"it ?":["Furthermore,"],"it about":["type"],"it also":["looks"],"it and":["it","occasionally"],"it appear":["that"],"it can":["look"],"it does":["make"],"it felt":["like"],"it hard":["to"],"it has":["grown","stuff"],"it is":["out","is"],"it it":["just"],"it it's":["`'_a"],"it just":["hangs"],"it makes":["code"],"it means":["I"],"it might":["come"],"it mostly":["serves"],"it need":["to"],"it needs":["to"],"it should":["work,"],"it using":["foldr,"],"it will":["take"],"it would":["be"],"it's `'_a":["list"],"it's hard":["to"],"it's own":["world"],"it's probably":["something"],"it's that":["much"],"iteration they":["are"],"its own":["definition."],"just ask":["a"],"just hangs":["up!"],"just so":["grateful"],"just to":["try"],"just too":["slow?"],"just took":["a"],"just use":["`String.is_suffix`"],"keep things":["somewhat"],"keyword argument.":["See"],"know if":["it"],"known as":["currying)"],"known problem":["with"],"label in":["the"],"label, basically":["a"],"label. If":["you"],"labelling the":["suffix."],"labels and":["optional"],"labels are":["a"],"labels as":["it"],"labels were":["omitted"],"lack of":["prototypes"],"language as-fast-as-C":["was"],"large enough":["list)"],"last iteration":["they"],"last line,":["does"],"last published":["version"],"last time.":["I"],"learn (less":["module"],"least one":["line"],"leave it":["it's"],"length :":["'_a","'a"],"length n":["=","="],"less of":["it's"],"let ..":["and"],"let ...":["in`"],"let bindings":["(I"],"let go":["acc","acc"],"let length":["n","="],"let me":["just"],"let rec":["binding","go",".."],"let you":["write"],"let's at":["the"],"level and":["`String.fold_left`"],"level but":["I"],"levels of":["forward"],"lib (there":["are"],"library doesn't":["really"],"library is":["rather,"],"library wrappers":["such"],"lifespan. Furthermore,":["the"],"like Batteries":["better"],"like UTF-8":["Text"],"like `'_a`":["shows"],"like `String.for_all":["~f:Char.is_whitespace`"],"like `s":["|\u003e"],"like a":["well"],"like it":["has","will","might","should"],"like so":["please"],"like the":["idea","fact"],"limited in":["scope,"],"limited with":["some"],"line that":["says"],"line, does":["it"],"list -\u003e":["int","int`.","int',","int`.","into"],"list functions":["that"],"list of":["integers."],"list) and":["many"],"list) if":["I"],"little meddling":["with"],"logic is":["pretty"],"long time":["is"],"look at":["this,"],"look like":["it"],"look using":["utop,"],"looking at":["the"],"looks good":["but"],"looks like":["it","so"],"looks pretty":["good."],"loop somewhere?":["Or"],"lose any":["functionality"],"lower_case_with_underscores is":["the"],"lowercased form":["of"],"madness), less":["of"],"mainly for":["political"],"make it":["appear"],"make the":["meaning"],"makes `is_silence`":["points-free"],"makes code":["easier"],"makes it":["hard"],"makes refactoring":["somewhat"],"makes the":["difference"],"many people":["either"],"map would":["be"],"massive problems":["concerning"],"matter of":["personal","preference"],"matters a":["lot."],"matters is":["at"],"may make":["it"],"maybe something":["here"],"me guess,":["you"],"me just":["ask"],"me, though":["this"],"meaning of":["code","the"],"means I":["don't"],"means anything":["(polymorphic)"],"means something":["but"],"meddling with":["different"],"mentioned and":["because"],"message it's":["hard"],"might come":["in","in"],"mismatch error":["messages..."],"module level":["but"],"module madness),":["less"],"module to":["allow"],"module! `String.is_suffix`":["improves"],"moment so":["I"],"more OCaml":["constructions."],"more basic":["data"],"more complicated":["and"],"more idiomatic,":["but"],"more imperative":["than"],"more like":["it"],"more limited":["in"],"more regular.":["What"],"mostly serves":["to"],"much clearer.":["Labels"],"much of":["an"],"mutable though":["I"],"my Elixir":["submission"],"my head":["around,"],"my solution,":["probably"],"my typesum.":["Will"],"n parameter":["effectively"],"n` or":["is"],"need to":["do","be"],"needs to":["be."],"never used":["Corelib,"],"new version":["that"],"nice OCaml":["code"],"nice functions":["such"],"nicer as":["foldr"],"no *pratical*":["experience,"],"no experience.":["However,"],"no. Strings":["are"],"non-tail-recursive functions":["of"],"non-tail-recursive list":["functions"],"not behind":["a"],"not consider":["to"],"not in":["scope"],"not included":["in"],"not labelling":["the"],"not sure":["compose","if","if"],"not the":["only"],"notice the":["\"labels"],"now but":["let"],"now that":["I"],"occasionally refactoring":["to"],"of Batteries":["is"],"of OCaml":["btw"],"of `BatString.fold_left`":["but"],"of `String.is_suffix`":["to"],"of `fold`...":["I"],"of `foldl`?":["Did"],"of `let":["..."],"of `map`":["and"],"of `word`":["for","for"],"of a":["let","function"],"of an":["improvement."],"of append":["and"],"of cancelling":["that"],"of code":["much"],"of forward":["declarations"],"of getting":["used","around"],"of history.":["Making"],"of integers.":["Have"],"of it's":["own"],"of labels":["and"],"of personal":["style."],"of preference":["I"],"of prototypes":["force"],"of scope":["and"],"of several":["let"],"of the":["alternative","stdlib","Galium","coolest","`~f:`","function"],"of their":["own"],"of these":["functions"],"of this":["exercise.","function."],"of this?":["Is"],"of trial":["and"],"of view":["is"],"often feels":["incomplete,"],"omitted in":["the"],"omitted\" warning":["on"],"omitting a":["label"],"on being":["the"],"on gut":["feeling."],"on my":["solution,"],"on the":["other","helper"],"on. Counter":["arguments"],"one is":["particularly"],"one line":["that"],"one of":["the","the"],"one that":["really"],"one. And":["this"],"only Extlib":["then"],"only a":["bit"],"only one.":["And"],"only see":["let"],"optional arguments":["in"],"or [Core](https://ocaml.janestreet.com/ocaml-core/latest/doc/)":["or"],"or gradually":["build"],"or is":["there","the"],"or whatever),":["or"],"order function":["to"],"other hand":["feels"],"out more":["OCaml"],"out of":["scope"],"over time.":["Both"],"overrides related":["to"],"own helper":["functions"],"own world":["than"],"page for":["the"],"parameter effectively":["compulsory,"],"parameter is":["what"],"parsing the":["type"],"part of":["a"],"pass `\"?\"`":["using"],"pass a":["large"],"passing the":["tests"],"passing! OCaml":["is"],"people adding":["stuff"],"people either":["use"],"per se,":["isn't"],"please do":["advise"],"point of":["view"],"point, you":["can"],"point. Will":["switch"],"point: I":["believe"],"points-free using":["a"],"political reasons":["as"],"possible to":["redefine"],"possible. That's":["essentially"],"practice: `Values":["do"],"prefer `open":["Batteries`"],"preference I":["guess."],"preferred way":["in"],"pretty close":["to"],"prevents this,":["unless"],"probably because":["I"],"probably something":["simple,"],"problem with":["OCaml."],"problem. It's":["something"],"problems and":["a"],"problems concerning":["the"],"programming is":["all"],"prototypes force":["us"],"published version":["of"],"push intermediate":["functions"],"quite good,":["every"],"quite handy.":["Submitted"],"ran into":["massive"],"rarely see":["them"],"rather, ahem,":["limited"],"reaction right":["now"],"read. It":["takes"],"really have":["any","any"],"really matters":["is"],"really strong":["goal"],"reason I":["don't"],"reasons as":["I"],"reasons you":["mentioned"],"rec ..":["and"],"rec binding":["if"],"rec go":["acc","acc"],"rec there.":["Without"],"recomputing of":["`word`"],"recursion problems":["and"],"redefine some":["of"],"refactoring somewhat":["easier,"],"refactoring to":["keep"],"regular. What":["arguments"],"related to":["channels)"],"rest looks":["good"],"restriction. See":["http://caml.inria.fr/resources/doc/faq/core.en.html#eta-expansion"],"returns true":["if"],"rid of":["this?"],"right filter":["and"],"right now":["but"],"running time":["when"],"s \"?\"`,":["because"],"s ends":["with"],"s |\u003e":["String.strip`"],"s ~suffix":["returns"],"s ~suffix:\"?\"`":["the"],"said that":["the"],"same issue":["as"],"say I":["have"],"saying `String.is_suffix":["s"],"says what":["it"],"says you're":["omitting"],"scope and":["that"],"scope inside":["its"],"scope, more":["basic"],"scopes and":["lifespan."],"scoping, what's":["inside"],"se, isn't":["it"],"see any":["simple"],"see let":["rec"],"see now":["that"],"see the":["last"],"see them":["being"],"see, `'a`":["means"],"seem to":["work"],"seems to":["have"],"seen under":["the"],"separate let's":["at"],"serves to":["support"],"set of":["their"],"several let":["bindings"],"should be":["possible."],"should get":["simpler."],"should work,":["but"],"shouting? Isn't":["a"],"shows up":["in"],"sieve of":["history."],"similar but":["different"],"simple way":["to"],"simple, but":["from"],"simply on":["gut"],"since I":["started"],"slow? Having":["said"],"so I":["can't"],"so `open":["Batteries`"],"so grateful":["for"],"so please":["do"],"so useful":["given"],"solution already":["prevents"],"solution, probably":["because"],"some debatable":["design"],"some extra":["stuff"],"some of":["these"],"some overrides":["related"],"some trouble":["parsing","getting"],"something but":["what"],"something called":["the"],"something glaringly":["wrong?"],"something here":["is"],"something is":["part"],"something like":["`String.for_all"],"something simple,":["but"],"somewhat consistent.":["In"],"somewhat easier,":["that"],"somewhat more":["complicated"],"somewhere? Or":["maybe"],"sorted lowercased":["form"],"standard lib":["(there"],"standard library":["doesn't","is","wrappers"],"started to":["use"],"started with":["foldl"],"stdlib has":["to"],"still think":["Core"],"string in":["Ocaml"],"string is":["shouting?"],"string without":["iterating"],"strings to":["be"],"strings. But":["the"],"strings. The":["documentation"],"strong goal":["of"],"strongest is":["a"],"structures and":["Comparable"],"stuff but":["I"],"stuff like":["UTF-8","`'_a`"],"stuff to":["it"],"style point:":["I"],"submission and":["the"],"such an":["approach."],"such as":["`fold_left`","[Batteries](http://batteries.forge.ocamlcore.org/)"],"such. Core_extended":["has"],"suffix:t -\u003e":["bool"],"suggested amendment":["for"],"sum a":["list"],"support Async.":["Core's"],"sure compose":["is"],"sure if":["it's","this"],"switch to":["snakecase."],"system with":["my"],"t -\u003e":["suffix:t","go","go","go"],"tail call":["recursion"],"take a":["bit","look"],"takes a":["bit"],"team at":["this"],"tell what":["is"],"terms of":["`foldl`?","`fold`..."],"test it":["it"],"tests because":["Real"],"tests passing!":["OCaml"],"tests yet:":["when"],"than Core":["and"],"than it":["needs"],"than last":["time."],"than that,":["looks"],"that Batteries":["is"],"that I":["am"],"that `and":["...`"],"that `let":["..."],"that always":["using"],"that and":["things"],"that by":["using"],"that doesn't":["seem"],"that functional":["programming"],"that it":["has"],"that makes":["`is_silence`"],"that much":["of"],"that n":["out?"],"that really":["matters"],"that says":["what"],"that something":["is"],"that the":["logic"],"that way.":["And"],"that well":["with"],"that will":["fail"],"that's a":["matter"],"that's exactly":["what"],"that's in":["the"],"that's why":["I"],"that, looks":["good."],"the \"labels":["omitted\""],"the Bazaar":["thing"],"the Container.Make":["functor"],"the Galium":["team"],"the OCaml":["[Core.String"],"the String":["module","module!"],"the `n`":["variable"],"the `rec`":["the"],"the `~f:`":["part?"],"the added":["`n`"],"the alternative":["standard"],"the application":["of","of"],"the arguments":["of"],"the compose":["function"],"the coolest":["features"],"the difference":["for"],"the different":["levels"],"the error":["message"],"the exercism":["OCaml"],"the fact":["that"],"the file":["while"],"the first":["to"],"the foldr":["for"],"the function":["being","is"],"the functions":["work"],"the guard":["system"],"the heavy":["use"],"the helper":["functions?"],"the idea":["of"],"the imperative":["algorithm"],"the implementation":["of"],"the impression":["it"],"the label.":["If"],"the lack":["of"],"the last":["published","iteration","line,"],"the logic":["is"],"the meaning":["of","of"],"the module":["level"],"the moment":["so"],"the n":["parameter"],"the non-tail-recursive":["functions"],"the one":["that"],"the only":["one."],"the other":["hand"],"the preferred":["way"],"the reasons":["you"],"the recomputing":["of"],"the running":["time"],"the same":["issue"],"the sieve":["of"],"the sorted":["lowercased"],"the standard":["library","library","lib","lib."],"the stdlib":["has"],"the string":["without"],"the tests":["yet:","passing!"],"the top":["level"],"the type":["mismatch","of","checker."],"the value":["restriction."],"the warning":["goes","generated"],"the whole":["Cathedral"],"the wrong":["doc"],"their own":["helper"],"them ?":["What's"],"them being":["used"],"them in":["terms"],"them; see":["the"],"then Batteries":["mainly"],"then ran":["into"],"there any":["way","way"],"there. Without":["the"],"these functions":["in","are"],"these labels":["are"],"they are":["used."],"they let":["you"],"thing again.":["I"],"things should":["get"],"things somewhat":["consistent."],"think Core":["is"],"think I":["separate"],"think `String.is_empty":["s"],"think about":["scoping,"],"think this":["solution"],"this (by":["explicit"],"this aspect":["Core"],"this but":["you"],"this does":["after"],"this exercism":["track)"],"this first":["compiles"],"this is":["passing","what","a","somewhat"],"this one":["is"],"this problem.":["It's"],"this solution":["already"],"this without":["computing"],"this, it's":["probably"],"this, unless":["I'm"],"this? Is":["it"],"though I":["rarely"],"though I'm":["not"],"though this":["does"],"thought about":["using","them"],"time for":["a"],"time is":["due"],"time when":["implementing"],"time. Both":["Batteries"],"time. I":["don't"],"to allow":["strings"],"to be":["used","seen","explicit","in","`go"],"to be.":["I"],"to but":["it"],"to channels)":["so"],"to check":["the"],"to concat.":["It's"],"to cooperate":["with"],"to do":["to"],"to get":["rid"],"to have":["at"],"to implement":["most","them","it"],"to it":["and"],"to keep":["things"],"to learn":["it.","(less"],"to my":["Elixir"],"to push":["intermediate"],"to read.":["It"],"to redefine":["some"],"to sum":["a"],"to support":["Async."],"to tell":["what"],"to test":["it"],"to think":["about"],"to try":["an","out"],"to type":["'in'"],"to use":["the"],"to work":["for"],"to wrap":["my"],"to... but":["it"],"too slow?":["Having"],"took a":["look"],"top level":["and"],"totally didn't":["notice"],"track) and":["Batteries."],"trial and":["error:"],"tricks it":["can"],"trouble getting":["OCaml"],"trouble parsing":["the"],"true if":["s"],"try `let":["rec"],"try an":["OCaml"],"try out":["more"],"try to":["test","sum"],"try.ocamlpro.com, apart":["from"],"type 'a":["list)"],"type 'in'":["after"],"type annotations":["on","or"],"type mismatch":["error"],"type of":["the"],"typesum. Will":["change"],"under the":["sieve"],"understand what's":["going"],"unit tests":["because"],"unknown. Usually":["stuff"],"unless I'm":["missing"],"unlike in":["Haskell."],"up in":["functions"],"up! Perhaps":["I've"],"us to":["push"],"use `String.is_suffix`":["for"],"use of":["labels"],"use one":["of"],"use something":["like"],"use the":["foldr"],"used Core":["for"],"used Corelib,":["only"],"used it":["and"],"used that":["way."],"used to":["but"],"used to...":["but"],"used your":["suggested"],"used. Thanks":["for"],"useful given":["the"],"using `let":["...`"],"using a":["higher","label."],"using foldr,":["since"],"using partial":["application:"],"using the":["label."],"using utop,":["if"],"usually only":["see"],"utop, if":["I"],"val is_suffix":[":"],"val length":[":",":"],"value restriction.":["See"],"values inside":["functions"],"variable the":["type"],"variations of":["append"],"version of":["this"],"version that":["makes"],"very functional":["approach"],"view is":["that"],"wait, this":["is"],"warning generated":["by"],"warning goes":["away."],"warning here":["says"],"warning on":["my"],"was a":["really"],"was having":["some"],"was just":["so"],"was looking":["at"],"way in":["OCaml"],"way of":["cancelling","getting"],"way to":["check"],"way. And":["the"],"weigh strongest":["is"],"well designed":["lib.","but"],"well with":["composition"],"were omitted":["in"],"what I":["need","get"],"what about":["the"],"what is":["wrong."],"what it":["does.","is"],"what makes":["the"],"what nice":["OCaml"],"what you're":["doing"],"what's going":["on."],"what's inside":["what."],"whatever), or":["is"],"when I":["try"],"when implementing":["concat."],"which gives":["an"],"which makes":["it"],"while the":["one"],"whole Cathedral":["and"],"why I":["am"],"will fail":["if"],"will take":["a"],"with Core":["(mostly"],"with Extlib,":["only"],"with OCaml.":["Partial"],"with a":["few"],"with composition":["I"],"with different":["variations"],"with foldl":["and"],"with my":["typesum."],"with some":["debatable"],"with such":["an"],"with the":["standard"],"without always":["forcing"],"without computing":["the"],"without iterating":["twice."],"won't lose":["any"],"work all":["that"],"work at":["try.ocamlpro.com,"],"work for":["me,"],"work, but":["this"],"works as":["well."],"world than":["Core"],"would be":["nicer","possible"],"wrap my":["head"],"wrappers such":["as"],"write `String.is_suffix":["s"],"write code":["like"],"write this":["without"],"wrong doc":["page"],"wrongly, known":["as"],"yes and":["no."],"yes, my":["bad."],"yet: when":["I"],"you are":["right"],"you can":["indeed"],"you chose":["to"],"you clearly":["understand"],"you consider":["`foldr`?"],"you could":["try"],"you don't":["pass"],"you have":["experience"],"you mentioned":["and"],"you pass":["a"],"you write":["`String.is_suffix","code","this"],"you're doing":["by"],"you're omitting":["a"],"your preference":["?"],"your suggested":["amendment"],"your thought":["about"],"yup, forgot":["a"],"| []":["-\u003e","-\u003e","-\u003e"],"| _":["::","::","::"],"|\u003e String.is_suffix":["~suffix:\"?\"`"],"|\u003e String.strip`":["is"],"~f is":["a"],"~f:Char.is_whitespace` for":["`is_silence`,"],"~suffix returns":["true"],"~suffix:\"?\"` the":["warning"],"~suffix:\"?\"` without":["always"]},"prefix_len":2}