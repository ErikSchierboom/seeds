{"Nodes":[{"Key":" ","Fragments":["There","@triston","..","Good,","1.","2.","3.","Good","I'd","If","Looks","Habit","If","After","I","(!oneHundCheck","Your","Also","bool","bool","bool","Thought","Ah!","Readibility","Also,","```csharp","if","return","else","return","```","You","I","I","I","I","I","I'd","The","The","Incorrect","I","Other","The","@lucienne","Yes","Since","if","return","if","return","I","Keep","Added","Very","I","To","@sonia","...the","OK.","i","The","I","OK,","Nice,","For","There","This","oh,","Should","Honestly,","This","Straightforward","Experimenting","I","I","This","Awesome.","Adding","I","You","Another","Pulled","I","It","Yes,","Looking","Messy","Pretty","Possibly","Thanks","Looking","1.","2.","3.","I'm","Actually,","Cool,","Just","Tried","I","Maybe","Be","IMO","The","Initially","Yeah,","Here","1.","2.","3.","4.","Good","1.","2.","3.","@jena","Ok,","Looks","There","It's","The","```200.IsDivisibleBy(2)```","Thank","I","If","Nice","This","I","I","Knock","Using","Good","Regular","Thanks","fine","ah,","I","I","It","```isEmpty```","You","I","I","Ah,","=)","I","This","PS","PS","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","The","I","I'm","That","Happy","To","`exercism","I","Uncle","To","`exercism","It's","I","I","The","It","I","Now","Maybe","Also","To","`exercism","I","I","I","The","A","@jack","Would","To","`exercism","Pretty","I","I","I","Just","````","public","````","Then","````","Year.IsLeap(1234);","````","Not","The","Having","Do","If","Submitting","To","`exercism","I","To","`exercism","Feels","Sorry","1.","2.","To","`exercism","Sorry","You","You","\u003ccode\u003ereturn","Somehow","Sorry","1.","2.","Sorry","I","First","This","I","In","```C#","return","```","Simply","```C#","\"Is","```","This","I","Similar","To","`exercism","-","The","Or","````","var","if","{","isLeapYear","}","else","{","isLeapYear","}","else","{","isLeapYear","}","return","````","@genoveva","Commenting","Better","````","if(IsDivisibleByOneHundred(year)","````","is","@niko","Hardcoding","...","on","except","unless","...","And","I","I","Also","Can","IMHO","Consider","\u0026\u0026","\u0026\u0026","More","This","Show","Will","perhaps","IMHO","For","I","Rather","More","```c#","internal","```","You","seems","try","btw","First","You","The","More","your","Does","indeed","The","I","I","Wow","Thanks","Good","I","Got","I","@omari","Thanks!","Thanks,","Surely","I","Unless","I","I","Good","I","I","To","Not","I'm","yeah","again","Roster","Good","I","```","foreach(KeyValuePair\u003cint,","{","```","the","you","```","foreach(var","{","```","Oh,","Didn't","This","Not","Looks","1.","2.","@angus","Sorry","Couple","1.","2.","Sorry","This","1.","2.","I","or","Maybe","```c#","var","var","return","```","I","Sorry","This","Looks","Looks","Looks","I","@mack","BCE","CE","I","@justyn","You're","Thanks!","I","I","Not","It","FAR","It","Certainly","I","I","Is","Do","Why","You","Why","I'm","I","This","Great","I","As","Maybe","Hope","I'll","Yeah,","Can","It","It","Your","You","`","Doing","I","In","I","I","While","Ah,","I","Consider","```c#","if","{","return","}","if","{","if","{","return","}","return","}","return","}","```","and","```","...","if","{","return","}","...","private","{","return","}","```","1.","2.","3.","Thanks","So,","For","AnyLetters","Also","Ah","Mmm","Thanks","Your","If","Of","So,","A","I","```","but","You","Readable,","One","Can","A","Having","Thanks","I","My","Your","(I","If","Thanks","Thanks,","The","Would","When","Generally","Refactoring","Thanks","Looks","Though","and","Another","I","I","What","Going","```","if","```","You","```","return","```","(I","Otherwise,","@adriana","By","'else's","IsDivisibleBy","Not","My","I","1.","**Lovely","2.http://exercism.io/submissions/3e64cb511521d02a4ee4f081","**Elegant","Currently,","The","The","I","The","Changed","I","As","Deeply","Try","First","The","I","Method","I","if","return","This","Your","As","Here","You","Not","@dexter-Inferno","In","If","This","As","Also","Put","Looks","Line","The","The","While","Debugging","Thanks","The","What","The","I","Yes,","Ok,","Didn't","Agreed","Regexs","Trying","Could","Looks","Looks","Math.Min","Your","Or","This","Nested","First","I","Line","return","To","I","I","Used","I'm","You","I","The","Clearly","This","For","Same","Hey,","C#","LINQ","Neat","I","In","IsSlience","You","I","That's","I","Definetely","I","I","Also","Added","Can","That's","Absolutely!","Does","Nesting","nice","I","Static","Clear","The","@britney","Nesting","Thank","too","I","\"DateTime.IsLeapYear(int","I","I","One","This","Separation","There","Consider","I","if","{","return","}","return","This","return","I","Yes,","The","Simple","At","Is","I","Looks","LowerAndSort","I,","Line","At","Everything","I","I","I","Thanks","Yeah,","It","`if","It","I","Looks","In","The","@gail,Thank","just","Removed","That's","return","is","Thanks","I","In","Performance","As","```return","I","Ooo,","I","The","I","As","1.","2.","3.","Oh,","1.","1.","1.","1.","1.","1.","Good","Good","1.","2.","3.","I","Additionally,","```","return","```","...whereas","```","return","```","...which","```","return","```","could","```","return","```","I","Well","It's","Moved","I","Hey","Except","It's","Welcome","a","And","this","Those","Solved","I","The","It","The","The","This","That","In","Beyond","I","I","The","Ooh,","There","if","to","if","and","This","I","```csharp","return","```","I'm","Very","```","public","{","if","if","if","return","}","```","You","I","I","A","Hey",".NET","Otherwise,","Thanks","Agreed.","The","This","A","A","Yeah","Regarding","To","Apply","Remember,","A","This","I","I","When","I","Finally,","As","I","Along","I","There","`string.IsNullOrWhiteSpace(message)`","and","`message.EndsWith(\"?\")`","also","`return","which","Combined","Maybe","I","Your","when","you","I","You","The","You","`return","I","I","I've","I","Indeed","Not","You","return","There's","`ToList`","This","What","I","This","If","Returning","While","The","This","This","So","For","\"Woah,","Wow,","In","Otherwise,","Looks","If","1.","2.","3.","This","```","Forceful_questions","Shouting","Shouting_numbers","Shouting_with_no_exclamation_mark","Shouting_with_special_characters","```","Oh","Nice","First","When","This","Hey,","buildStrand","Hey,","I","It","I'll","Fails,","Fails:","Shouting_with_special_characters","Shouting_with_no_exclamation_mark","Shouting_numbers","Shouting","Forceful_questions","I","The","One","Hey,","Good","The","This","After","Thank","Usually","If","Hey,","The","It's","I","Looks","Initially","@erick","I'm","I","@mack","I","I","I","I","The","The","The","Otherwise,","Went","Instead","Literally","I'm","Thanks!","Quite","There","There","Fixing","+1","Calling","`isAllCaps","Yeah,","But","In","In","good","Good","Can","When","All","SaidNothing","IsYelling","IsQuestions","Nicely","@karlie","Made","Uploaded","@granville","That","You","and","maybe","I","```","s[s.Length","```","Have","String","You","Also","so","Using","Thanks","I","But","Nicely","at","good","btw","Some","@penelope","https://github.com/exercism/xcsharp/commit/2902b940a07be8e0b7ab0d75f2d7c59fec78072b#diff-5787dd4586fa81d24ab21dcdc4160ee4","Expected:","But","------------^","```","return","```","Doesn't","```","return","````","I","Could","I","Instead","http://msdn.microsoft.com/en-us/library/system.string%28v=vs.110%29.aspx","That","You","I'm","I","Went","I","Really","Line","Can","all","`return","and","I","1.","2.","3.","4.","I","Seriously","That","Technically","The","1.","2.","3.","Can","I","I","Thank","Agree","Also","Variable","It","Line","Would","The","This","Also","I","Also","After","I","Main","It","On","I","I'm","Boy,","Looks","1.","2.","3.","4.","Looks","1.","2.","3.","4.","The","Pull","Your","```c#","﻿using","using","public","{","public","void","{","print(Year.IsLeap(givenYear));","}","}","public","{","public","{","bool","if","{","//","isLeap","}","else","{","isLeap","}","return","}","}","```","Clarity","To","`exercism","To","`exercism","While","Personally,","It","You","```c#","if","if","return","```","but","To","I","I","Much","To","`exercism","This","I","///","///","Who","To","`exercism","This","1.","1.","1.","To","`exercism","To","`exercism","Looks","The","I","You've","Also,","The","You","```c#","var","```","```c#","foreach","```","also","I","you","Yeah,","Ah,","Is","Do","There","I","I","Makes","On","You","variables","Actually,","I","Also","So,","Removing","I'm","Reviewed","I","I","Very","If","I","I'm","That","Unless,","I","1)","2)","SortedSet\u003c\u003e","I'm","I","Very","That's","I","@celestine","@celestine","How","The","fyi","To","naming","I","You","eg","```c#","public","﻿","﻿","﻿","﻿","﻿","﻿","﻿","﻿","﻿","﻿","﻿","```","Used","I","Yea","But","Technically","Ok,","I","Wonder","It's","I","Also","I","I","Hehe,","Yes","@keshaun","I","@gertrude,","Well,","Returning","I","```","return","```","should","I","We","\"this\"","IsLeap","Use","It","I'm","the","if","I'm","Standard","Yeah,","We","Why","Amazing","Looks","Agree","Ended","Why","I","First","Included","Previous","By","Included","Looks","I","```csharp","using","[TestClass]","public","{","[TestMethod]","public","{","Assert.IsTrue(Year.IsLeap(1996));","}","[TestMethod]","public","{","Assert.IsFalse(Year.IsLeap(1997));","}","[TestMethod]","public","{","Assert.IsFalse(Year.IsLeap(1900));","}","[TestMethod]","public","{","Assert.IsTrue(Year.IsLeap(2400));","}","}","```","why","Cant","Nice","Yeap","Looking",".Split",".Select",".Where","I","The","I'm","I","I","I","switched","All","The","Yeah,","I","I","```csharp","using","[TestClass]","public","{","[TestMethod]","public","{","Assert.IsTrue(Year.IsLeap(1996));","}","[TestMethod]","public","{","Assert.IsFalse(Year.IsLeap(1997));","}","[TestMethod]","public","{","Assert.IsFalse(Year.IsLeap(1900));","}","[TestMethod]","public","{","Assert.IsTrue(Year.IsLeap(2400));","}","}","```","Doing","Well,","Ok","Also","Your","It","Was","Relatively","Was","Anything","Thanks","I've","If","It","Why","I","This","This","Well,","return","I","At","yah,","I","Honestly","Probably","I","I'm","Yet","This","I","Good","Using","Pretty","I","But","I","Your","Another","I","Perhaps","A","I","I","There","IMHO","list\u003cint\u003e[i]","Removed","I","Why","Now","I","Because","```","if","{","return","}","```","And","Otherwise","In","Okay!","In","Try","Try","Think","To","`exercism","Looks","My","I","This","Remember","Why","Love","That's","edit-","```(year","In","To","`exercism","It","To","`exercism","To","`exercism","It","To","`exercism","Looks","The","Reversing","To","`exercism","To","`exercism","Not","Don't","To","`exercism","To","`exercism","To","`exercism","Protected","If","To","`exercism","I","I","You","Clarity","Try","To","`exercism","The","No","To","`exercism","If","1.","2.","3.","4.","5.","6.","7.","8.","9.","It","Sounds","I","Added","Removed","Neat,","Thank","if","Dropped","Made","Looks","What","To","I","Very","A","Making","Thumbs","I","It","Some","I","Simplify","Bonus","Randomizer","Good","I","I","Sure,","If","Uncle","I","Instead","If","Looks","You","Why","It","If","Well,","Combining","It","If","Help","Boy,","Also","There","http://help.exercism.io/getting-started-with-csharp.html","The","In","Also","You","I","\"int","@fanny","The","```","if(A)","else","```","with","```","return","```","Try","Im","I","and","My","My","@ryann-FredrikE","I","@ryann","I","The","One","Thanks,","I","if","...","Removed","Had","I","Because","It","But","On","-","-","-","-","-","I","Now","A","Type","My","Next,","For","Lastly,","This","I","I","I","In","The","It's","This","I","String.IsNullOrWhiteSpace()","http://msdn.microsoft.com/en-us/library/system.string.isnullorwhitespace(v=vs.110).aspx","array.Any()","http://www.dotnetperls.com/any","char.IsLetter","http://msdn.microsoft.com/en-us/library/system.char.isletter(v=vs.110).aspx","This","It's","If","```","return","```","and","The","@era","Could","Also","I","It","Tried","Written","Mostly","\u003eIn","That's","Meh,","Looking","This","My","Making","Also,","You","It","What","I","```c#","public","{","phrase","||","||","||","_phrase","}","```","The","@zita","First","I'm","I'm","Very","I","Tried","Used","I'm","Kept","Working","Thinking","I","In","Lots","The","I","The","Thanks","Is","I'm","This","My","There","The","After","@mozelle","I","IsSilence","IsYelling","IsQuestion","This","It","For","http://stackoverflow.com/questions/36707/should-a-function-have-only-one-return-statement","It","Read","Added","@stanley","\u003ccode\u003e","if","\u003c/code\u003e","vs.","\u003ccode\u003e","if","{","//","}","return","\u003c/code\u003e","Started","Overall","The","If","The","Yeah,","Pretty","Came","The","I","But","Right","No","I","Your","The","I","But","I","The","public","{","bool","bool","bool","return","}","That's","@","The","It","Your","I","Good","I","The","I'm","Great","One","public","{","if","return","if","return","if","return","return","}","I","public","{","return","||","\u0026\u0026","}","You","You","This","I","Just","I","To","I","Finally,","I","I","I","At","Single","Thanks","I","In","In","Thank","I","I","Valid","Fixed","fixed","This","I","I","Thanks","```[TestClass]","public","{","[TestMethod]","public","{","Assert.IsTrue(4.IsDivisibleBy(2));","}","[TestMethod]","public","{","Assert.IsTrue(4.IsNotDivisibleBy(3));","}","[TestMethod]","public","{","Assert.IsTrue(4.IsNotDivisibleBy(0));","}","}","```","I","You're","Thanks","You","Keep","Not","One","I","I","I'm","I'm","The","What","What","Not","Your","You","Other","I","Thanks","From","@ryann,","@erich","Oh","I","I'm","I","That","You","This","This","Why","Excellent","I've","Thanks,","David","Not","Not","Any","Having","I","@franz","@donald,","I","Hmm,","Do","posted","I","@rosina,","You","Look","I","Thank","@durward","I","I'd","I","This","1.","2.","3.","Not","In","My","I","One","I","Yeah","I","@brisa","Thoughts","@columbus","After","I","Using","```",".EndsWith(\"?\")","```","instead","```",".LastOrDefault()","```","method","Ack,","Yes","Probably","Try","This","If","Try","As","@braxton","Looks","I","For","```","if","{","return","}","return","```","The","Very","As","I","I","Good","One","So","//fail","if","return","//fail","if","return","//order","var","//","I","That's","You're","Yeah,","This","Second","Good","One","on","if","and","I","I","I","Very","ie","I","year","I","You","The","Doing","This","Thanks","Since","In","The","```c#","bool","```","Oh","```","if","```","Using","Good","if(expr1)","is","isShouted","Like","@theresa","The","I","For","This","First","Regarding","The","I","Also,","```","private","private","```","would","I","Moved","I'm","If","I'd","I","If","Good","Well","I","Use","The","```","var","foreach","...","}","```","What's","Why","I","The","`year%100","Ah,","You've","if","return","else","return","This","return","Also,","@modesto","This","Your","I","For","Thanks.","This","Exactly","Consider","I","Forgot","@sylvia","Your","Lines","https://nakedsecurity.sophos.com/2014/02/24/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch/","Looks","Your","Technically","I","I","You","You","You","Great","This","Specific","You","Lastly,","@deshaun","Same","I","I","To","The","The","The","```C#","if","```","You","Okay!","Your","1.","2.","3.","I","Trade-off","I've","Your","1.","2.","3.","I","I","Agreed","One","And","Yeah","was","So,","@stephania","It's","You","I","@chadrick","You","\u003e\u003e","The","\u003e\u003e","If","\u003e\u003e","Lastly,","In","Sure,","For","Saved","Too","Also,","Hello","Nah,","Passes","Another","Any","It","Have","public","{","get","set","}","I","Thanks","Second","Have","Nevertheless","Thank","I","Thanks","Only","Why","Use","If","Another","Beyond","I","It","http://en.wikipedia.org/wiki/Principle_of_least_astonishment","Also","True","Yes,","In","Looks","You","Looks","`stringthing`","I","Changed","After","Nested","Is","Your","There","Consider","I","There","Really","Usually","One","From","I'm","Looks","What","I","_new.Add(old[key][i].ToLower(),","i","Looks","word.Length","instead","word.Length","Wouldn't","Personally","Thank","There","1.","2.","3.","4.","\u003ccode\u003e","public","{","//","//","return","}","\u003c/code\u003e","The","Also,","So,","The","Perhaps","1)","2)","3)","Putting","@olaf","My","You","It","I","Year.IsLeap(x)","which","The","Same","I","Here,","```","from","from","select","```","Some","1.","2.","3.","@dorcas","I","Nice,","in","As","IsYearEvenlyDivisibleBy","@jace","The","return","can","return","Give","This","@hyman","Is","However,","Valid","Either","Thanks","There","Code","Eurgh.","Thank","Good","One","I","Yep,","This","For","How","I","Thing","I","I","Any","Two","Second,","I","I'm","@walton","You","While","I","Your","One","I","I","I","Im","Wonderful!","Still","@ansel","Separated","The","For","For","Your","I","What","Your","On","One","I","OK,","Possibly","```c#","return","(nucleotideFromStrandA,","=\u003e","```","a","I","Nice","True,","It","Is","Try","For","You","This","Single","This","internal","{","return","}","I","After","The","Also,","Yeah,","I","Right,","Thanks","If","Happy","It","You","Also,","Another","Minor","Nested","Consider","The","stuck","Extracted","I","Great","I","Perhaps","Also","I","I","@jo,","Nearly","The","Very","Also,","I","An","It","Honestly,","You","According","I","Zip","Very","I","Thanks!","So","Good","Can","1.","2.","3.","Any","Thanks","1.","2.","3.","@bill","Good","I","Also,","You","Thank","Is","I","Visual","The","EDIT:","I","If","@joan","So","Lazy","I","There","**Hello","I","Also","It","My","This","I","Wow,","You're","Cleaned","This","I","I","To","```if","Another","In","I","Not","A","http://www.hackerchick.com/2009/02/religious-war-48293-single-vs-multiple.html","On","I'm","The","You","if","{","return","}","return","to","return","@vella","It","I","One","Change","foreach","To","foreach","Looks","Even","@roselyn","@roselyn","I'm","After","I'm","You","Also,","In","```csharp","private","```","The","Other","Good","I","I","_phrase","Neat.","When","I'm","One","I","At","I","```C#","(x,","```","Like","```csharp","public","{","var","var","for","{","if","{","count++;","}","}","return","}","```","Your","I","http://msdn.microsoft.com/en-us/library/ff926074.aspx","http://msdn.microsoft.com/en-us/library/ms229043(v=vs.110).aspx","This","@sandra","i.e.","change","\u003ccode\u003e","if","\u003c/code\u003e","to","\u003ccode\u003e","if","{","//","}","\u003c/code\u003e","@francesco","@timothy,","You","@guadalupe,","Personally","```C#","Dictionary\u003cstring,","//","var","```","@mathilde","This","Heh,","@ryley","Thank","A","return","@wyatt","I","I","Your","One","```csharp","string","foreach(","Console.WriteLine","```","You","I","@angus:","Because","Guard","I","@garnet","\u003ccode\u003e","if","CallSomeMethod(x);","\u003c/code\u003e","Otherwise,","I","@makayla","When","So","Now,","You","Might","Might","This","Hey","year","Looks","@gillian","@arlie","I","I","Tah","only","Thanks!","Not","Hi,","Since","Something","That","Cheers","Ah","Are","For","To","```C#","[Test]","public","{","Assert.That(()","}","[Test]","public","{","school.Add(\"Jennifer\",","Assert.That(()","Assert.That(school.Roster[4].Count,","Assert.That(school.Grade(4).Count,","}","[Test]","public","{","school.Add(\"Jennifer\",","Assert.That(()","Assert.That(school.Roster[4].Count,","Assert.That(school.Grade(4).Count,","}","```","This","You","That","Cheers","You're","For","There","http://help.exercism.io/getting-started-with-csharp.html","Your","For","This","While","Fields","The","I","How's","Hint:","Line","You","You","```","using","using","```","Investigate","I","It","In","Very","This","I","I","The","I","I","(see","Resorted","@maiya","No","This","I","As","I","I","Good","You","```csharp","public","{","var","foreach","{","//","if","{","//","if","{","ret.Add(word);","}","}","}","//","ret.Sort();","//","return","}","```","I'm","```C#","private","```","Showing","I","I","I","@tatum,","It","I'd","Kinda","Ideas?","I","The","You","Why","One","Consider","Base","nice","I","In","Went","Logic","You","although","@","I","Fixed","I","Take","Wow,","Looks","Good,","Should","What","\"var","On","PS","Sure.","PS","Sure.","PS","Whoa,","PS","Fine.","PS","Whatever.","Oh,","@alexandro,","Good,","1.","2.","Good,","Should","What","Looping","Also,","Getting","Looping","Also,","Should","What","Updates:","Removed","Good,","Should","What","While","Good,","Should","What","You","I","@tabitha","Good,","Should","What","This","Thanks!","You","Checking","that","Thanks","I","@pearl","As","Thanks","First","Optimization","So","Much","I","Refactored","The","For","Also,","```else","I","Clever","Consider","One","I","Typeo","```private","Sorting","main","You're","http://www.timeanddate.com/calendar/julian-gregorian-switch.html","small","-","-","even","You","Looks","What","Also,","Well","One","The","*","*","Thinks","*","*","*","Added","This","@theodora","@agnes","@bernhard","@reid","Thanks,","Yes,","@celestino,","As","Good","This","One","Oh,","I","For","The","I","You","Just","1.","2.","3.","Encide/EncodeChar",":-)","I","I","Just","1.","2.","I","Interesting","Just","1.","2.","Zip","I","OK,","Try","This","```csharp","if","return","```","rather","```csharp","return","```","This","Good","If","Thanks","How","I","As","Why","It's","If","Our","I","I'm","Fair","Evaluate()","Thi","No","I","Your","Also",":)","Why","Using","You","Whenever","1.","2.","3.","I","The","The","For","Good","I","@buddy,","```C#","[Test]","public","{","var","{","{","{","};","var","Assert.That(ETL.Transform(old),","}","```","BTW,","Good","Okay,","I","```C#","[Test]","public","{","var","var","{","};","Assert.That(phrase.WordCount(),","}","[Test]","public","{","var","var","{","{","{","{","{","{","{","};","Assert.That(phrase.WordCount(),","}","```","I","I","You","if","return","else","return","This","return","thank","@merritt,","she","said","hello","world","'hello","I","You","You","Instead","Wanted","Looks","But","Both","Great","A","1)","2)","Clever","````else","Just","Hey","@bill","she","said","'hello","world'","Which","I","In","isLeapYear","small","If","from","The","I","You","Thanks","Cool","Dangit,","Try","```csharp","Match","```","This","1.","2.","I","I'm","Anyone","Good","I","This","One","```csharp","Match","```","I","What","I'm","var","I","http://msdn.microsoft.com/en-us/library/bb383973.aspx","@veda","For","1.","2.","The","My","The","This","Are","_Roster","Roster","When","Looking","The","```",".Where(x","```","Yes","I","The","I","school.Add(\"Blair\",","school.Add(\"James\",","school.Add(\"Paul\",","school.Roster[2][1]","Changes","@kirsten","Initially","The","Limiting","The","For","`return","I","Limiting","The","For","`return","1.","2.","I","I","In","You","You","```C#","var","for","{","numberOfPlaces","}","```","I","Hurray,","I","You","In","1.","2.","3.","That","Could","Thank","You","Just","Excellent","Whoah,","I","Rather","Your","@arvid","1)","2)","Nice.","@jordan","Weird,","I","Following","There","Keep","Look","In","Other","By","I","Yes,","Or","Then","Save","Me","Skipped","Instead","In","Thanks","You","I","bool","bool","bool","bool","if","{","isLeapYear","}","if","{","isLeapYear","}","return","Once","My","I","Saw","Got","I","You","You","Looks","Here's","Replace","```csharp","IsAlpha(phrase))","```","with","```csharp","phrase.Any(char.IsLetter)","```","and","I","should","perfect.","Good","Could","It's","It's","Thanks","Looks","Doing","Naming","Deeply","There","You","year","tldr","Hmm","The","the","Looks","Unnecessary","This","After","Look","With","I","Also,","Kind","```csharp","public","{","//","if","{","if","return","}","return","}","```","Also,","I","clean","Okay,","You","sorry,","I","I","if","Here","Like","public","{","bool","return","}","You","Good","Rather","And","Try","My","And","Hi,","You","I","I","Slight","Thank","Thanks!","IMO","return","(not","Also","@hayden","As","@hayden.","Linq","Hi","```int","really","I","Next,","Finally","I'm","Having","I","Removed","I","You","To","A","Made","I","I","i","Another","I","The","Looks","Good","Looks","Also,","I","very","you","Trying","@marlen","@al","People","Like","I","Otherwise,","Code","It","That's","I","`theYear`-variable","Also,","isDivisibleByFour","I","It's","As","`IsLeap`","When","I","However,","I","That","I","if","{","return","}","It's","http://nakedsecurity.sophos.com/2014/02/24/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch/","Didn't","rprouse,","Great!","Now","Cleaned","Created","I","Great!","Now","Also","SortLetters()","IMHO","*","*","*","*","Good","Looks","you","!comment.Any(char.IsLower)","I","@winona","Should","While","I","Regarding","Changed","I","I","When","If","```","Sieve","foreach","{","Console.Write(t","}","Console.Read();","```","Your","I","You","You","But","I","You","```csharp","if","throw","```","Just","I","I","It","I","I'm","You","Other","I","@bernita,","Re-ordering","Looks","In","Thanks!","Thanks","@lionel,","Wow","Doesn't","while","I","My","While","In","In","The","This","It's","When","@haylee","I","For","Thank","Linq","For","In","Just","In","Also,","I","Those","For","I","I","```if(statement.ToUpper()","{","answer","}```","Out","That","```string","I","Lastly,","There","I","1)","2)","3)","-","-","`return","-","I","The","Well,","I","```get","int","foreach","return","}```","which","While","thinking","The","This","While","int","This","int","if","{","//","}","else","{","//","}","In","You","Thank","Also,","This","Is","Could","Yeah,","It","You've","I","Your","It's","I","Second","This","I","I","This","In","Good,","It","The","Nice","I've","Whether","I'm","First","I","I","```","RobotRepository.Robots.Clear();","```","in","I","Oh,","As","Regarding","I","The","You","Ah,","Thanks","Second","You","I","Is","You","\u003ccode\u003eif","Overall,","I've","In","May","Thanks!","Visual","That's","Actually","Not","Yes!","For","\u003ccode\u003eif","{","if","{","...","\u003c/code\u003e","you","\u003ccode\u003eif","\u003ccode\u003e\u0026\u0026\u003c/code\u003e","Try","I","I'm","Thanks","This","I","Thank","1.","2.","3.","4.","So,","Ok,","If","Also,","Other","One,","Two,","@dejah","Should","If","It","Also,","Other","Looks","1.","2.","3.","I","I","Looks","1.","2.","3.","That's","1.","2.","3.","Thanks:","Looks","1.","2.","3.","That's","Just","1.","2.","3.","4.","5.","6.","That's","Looks","1.","2.","3.","That's","Looks","1.","2.","3.","4.","As","That's","Looks","1.","2.","3.","4.","5.","That's","Looks","1.","2.","3.","That's","Looks","1.","2.","3.","4.","That's","Looks","1.","2.","3.","4.","That's","Looks","1.","2.","3.","4.","5.","That's","Looks","1.","2.","3.","4.","That's","Looks","1.","2.","3.","That's","Looks","1.","2.","3.","I","That's","I","Thanks,","That","Gonna","I","OTOH","While","@merritt","Some","I","I","I","Interesting","For","example","if","return","if","return","Very","Still","Nitpick","Lots","and","That","Problems","The","\u003ccode\u003e","To","In","This","First","Secondly,","Thirdly,","Well,","Company","Also,","A","Looking","Thank","I","What","Related:","You","The","IsAMute:","http://stackoverflow.com/questions/6976597/string-isnulloremptystring-vs-string-isnullorwhitespacestring","Okey,","The","On","@orpha","Very","````String.Concat(GetRandomLetters(2))","You","Thanks","@lauryn:","Requirement","Always","During","1.","2.This","Given","Whoops","I","Thanks","Thanks","Yeah","I'll","This","With","public","{","if","{","throw","}","...","```","@della","I","Also,","I","Any","Changes","1)","2)","Pushback:","I","OK,","The","What","When","'hammingArray'","Thanks","Thank","I","Also,","Okey,","Well","This","The","return","I","Here","1.","2.","3.","4.","5.","6.","7.","8.","(Note:","\u003ccode\u003e","Action(string)","{","string","newData.Add(letterLower,","};","\u003c/code\u003e","That's","This","That","\u003ccode\u003e","string","if","expected.Add(lowerLetter,","\u003c/code\u003e","While","@daniela","Of","You","I","While","Just","Wow,","I'll","Essentially,","{","{","Looks","1.","2.","3.","That's","Looks","1.","2.","3.","4.","That's","Iteration","At","I","It","What","The","Also,","All","I","Yeah,","I","Also,","I","I","With","As","Also,","@zakary,","@zakary,","You","Also,","Note:","I","Also,","Don't","````","var","return","strInt.Select((c,i)=\u003enew",".Select(a=\u003eString.Format(a.Template,",").ToString();","````","Add","Also,","`return","You're","Ok","Thanks,","Functionally","I","Technically,","If","Changed","I","As","LINQ-ified","Efficiently","Very","I","I","```","!(year","year","```","So","hehe,","Other","I'm","I","My","Say","Three","Five","Sum","While","I","1.","2.","3.","Thanks","Is","I","Out","This","The","The","Actually,","Short","1.","2.","Cool","However,","You","I'm","This","@esteban","I","`IsNullOrWhitespace()`","@wiley","The","Absolutely,","Here","1)","2)","3)","else","BobsResponse","[What","Looking","Edit:","Interesting,","If","As","You","Hmm","Now","Anyone","Thank","Thanks","@edward:","1.","2.","3.","EDIT:","4.","5.","The","Comments","The","I","May","Your","Comments","It","Version","If","I","IsLeap","I'm","Hope","The","\u003ccode\u003ereturn","This","Also,","this","Lines","`bool","Recall","`if","Consider","Sometimes","Yep!","very","return",":",":",":","People","I","You're","There's","I","REALLY","I've","Incorporated","Thanks","Ah,","Good","Regarding","While","That's","Thanks!","A","1)","2)","3)","Okay,","I","Looks","First,","Next,","```csharp","if","```","with","```csharp","if","```","This","1.","2.","3.","while","Let","```csharp","public","{","Func\u003cint,","if","{","if","return","}","return","}","```","I","And","When","Thanks","This","The","This","Also","```csharp","return","```","I've","Although","As","```C#","public","```","The","The","It","FYI:","Ahh,","\u003ccode\u003e","foreach","{","while","{","result.Append(ArabicToRomanConversions[number]);","value","}","}","\u003c/code\u003e","\u003cb\u003eMinor:\u003c/b\u003e","You","There","```C#","public","```","Other","At","There","```C#","private","private","var","```","I","Minor","Whoa!","Please","\u003cb\u003eMinor","The","\u003cb\u003eOther","The","Although","My","I","A","```c#","private","private","var","```","gives","Now","I","You","Also,","I'm","I","I'm","I'm","```","if(year","return","return","```","One","```C#","return",".GroupBy(m",".ToDictionary(g=\u003eg.Key,","```","Clean,","Although","if","I","I","@drew","Thanks!","OK.","I","I","It","Well,","**From","OK.","I","I","It","0","It","```C#","for(var","if","numOff++;","}","}","```","The","In","Looking","Technically,","I","Using","Since","if","{","currentWord.Append(c);","}","else","{","addWordToWordCounts(currentWord.ToString());","currentWord.Clear();","}","Also,","I","One","After","I","The","If","I","Thanks!","I","You","If","Looking","It","I","My","So","If","Parameter","I","Options:","```C#","private","public","get","}","```","a","Your","I","I","My","I","I","```C#","public",":","```","Why","If","I","I","I","This","Also,","Otherwise","If","For","This","This","After","((year","{","if","{","if","return","else","return","}","else","return","}","return","And","I've","Thanks.","Your","```Roster```","I'm","I","After","It","@zella,","I","1)","2)","3)","(","Very","return","or","return","The","Too","I","Yep.","Look","Thanks","I","I","```","bool","bool","bool","return","```","but","You","I","Is","Would","@sterling","I","I","I","I","Encapsulating","Thats","@alayna,","I","Like","Nit:","-","AND","-","Not","This","I","This","I","One","Yeah,","I","This","Personally","The","I","Aah,","I","Minor","I","Nice.","My","I","Good","OK,","OK,","Seems","Wow,","This","1.","public","{","return","}","2.","IMHO","I","Out","First","Take","Small","In","There","Both","One","What","Really?","Thank","I","I","Comments","No","Performance","```C#","var","var","for","if","result","}","mult","}","```","Thank","First","Then","And","FInally,","return","I","I","Comments","-","-","-","You","Yeah,","I'll","It's","```","var","var","foreach(var","sum+=","}","```","is","```C#","var","var","for(var","sum+=","}","```","In","For","```C#","var","```","Good","And","Interesting","But","-","-","-","-","I","Technically","@tristian","There","Good","Any","We","Hamming","Thank","Not","Rather","```C#","for","if","diff++;","}","}","```","I","```C#","//","if","Dox();","DoY();","```","Can","An","```C#","if","```","which","@randy,","This","[Test]","public","{","Assert.That(Hamming.Compute(\"AAACTAGGGG\",\"AGGCTAGCGGTAGGAC\"),","}","[Test]","public","{","Assert.That(Hamming.Compute(\"GACTACGGACAGGGTAGGGAAT\",\"GACATCGCACACC\"),","}","I","The","I've","I","OT:","Couple","While","Though,","Instead","Another","This","Wow","I","Thanks","Not","```foreach","for","if","}","multiplesUsed.Add(m);","}```","and","```for","if","}```","In","with","the","Off","I","That","You","I","I","What","If","```var","(currentlyTesting.Length","(String.Equals(currentlyTesting,",").ToList();","```","Then","```foreach","{...```","Linq","I","1)","2)","3)","Sorry,","How","edit:","Agree,","I","The","Not","```C#","if","```","saves","\u003cb\u003estring.Equals()\u003c/b\u003e","It","Logic","`public","then","I","Since","Good","Firstly,","It","Do","It","\u003cb\u003e[\\w]+(['|-][\\w]+)?\u003c/b\u003e","would","As","Just","Don't","Don't","I","I","I","Hey","That","```","//check","if","year","return","return","```","...pretend","Again,","I","Thanks","I","Regarding","A","I","It's","Clever","think","I'm","Doing","I","Rather","I","Dictionary\u003cString,","A","public","var","//","}","If","Finally,","I","if","{","return","}","and","You","Also,","EDIT:","You","That","@reese","This","I","Totally","Not","This","good","Yes,","@josianne,","I","Of","I","For","*","[Test]","public","{","long","string","HashSet\u003cstring\u003e","for","{","robot","name","Assert.IsFalse(roboNames.Contains(name));","roboNames.Add(name);","}","}","*","[SetUp]","public","{","RobotFactory.ResetNames();","robot","}","Thanks","I","This","Both","Also,","Personally","Can","You","Also,","In","In","And","How","Why","Another","What","Your","I","I","There","You","If","While","If","The","return","Actually,","I","public","{","Number","AreaCode","}","private","{","return","}","private","{","string","if","{","number","}","else","{","number","}","return","}","This","N0","I","As","I","Spelling","var","The","Here,","While","You","year","year","So","I","@darrion,","For","I","At","Here","Breaking","No.","I","Ah,","The","You","Sure,","Can","For","Good","You're","I","I","Of","Heh,","I","I","You","[Test]","public","{","long","string","HashSet\u003cstring\u003e","for","{","robot","name","Assert.IsFalse(roboNames.Contains(name));","roboNames.Add(name);","}","}","Try","I","Also,","You","While","Good","I","One","var",".Values",".TakeWhile((verse,",".Select((verse.",".Reverse()",".ToList();","Note:","Any","This","The","Good","@allen","Very","One","sb.Append(Things[i","sb.Append(\",","you","sb.Append(Things[i","In","You","The","Ah,","While","But","Good","Alright,","I","-","-","-","It","You","```C#","foreach","{","totalPoints","}","```","and","```C#","var","```","There","```C#","for","{","if","{","hammingDistance++;","}","}","```","\u003cb\u003eAreEqual","For","By","Behind","Using","@lorna","Good","\u003cb\u003eLetters","It","-","-","-","\u003cb\u003eAside\u003c/b\u003e","Strings","\u003cb\u003eWe","Once","```C#","var","return","```","The","We","\u003cb\u003eOther\u003c/b\u003e","I","A","```C#","private","{","return","}","```","As","The","It's","We","In","As","You","Commented","Also","Thanks","Also,","Looks","When","All","My","Please","As","```C#","if","{","throw","}","for","...","```","We","Just","We","```C#","public","public","_givenNumbers","}","```","We","I'm","for","for","if","Add","another","\u003cb\u003ee.g.\u003cb\u003e","1","1","2","3","4","5","6","7","@beatrice","Good","Why","Is","Good","Re","I","I","Thanks--why","It","If","Alternative","I","However,","Just","\u003ccode\u003es1(i)","Thanks","Good","@roman","I","```C#","if","```","square","Makes","Better.","There","Actually,","Let","I","My","I","Looping","If","Wow,","I'm","I'm","In","I","I","Adding","Adding","Originally","This","The","If","This","@garret","```csharp","public","{","var","for","{","numberOfPlaces","}","return","}","```","While","```csharp","public","{","var","return","}","```","I","One","In","if((year","{...}","Thanks","Could","Regarding","Regarding","Regarding","This","As","Does","Ah,","Now","But","```","school.Roster[1]","```","What","@ebba","I","```csharp","foreach","{","if","{","isMultiple","break;","}","}","if","sum","```","or","```csharp","foreach","{","if","{","sum","break;","}","}","```","Created","The","Thank","If","At","for","matches","matches","matches","for","matches","matches","swap","for","1","2","3","4","5","6","7","The","```","public",":","public","numbersList","}","```","and","I","Did","I","It","\u003cb\u003eLinq\u003c/b\u003e","```","var","var","```","as","Better,","I","I","Good","Why","Other","After","I","I","Nice.","@sedrick","Looks","The","Assuming","public","{","if","Grade(grade).Add(name);","}","I","I","public","{","List\u003cstring\u003e","try","{","result","}","catch","{","result","roster[grade]","}","return","}","For","Something","Instead","Other","Would","public","{","try","{","return","}","catch(KeyNotFoundException","{","return","}","}","Interesting","Secondly,","Third,","Finally,","Alright,","That","1)","2)","3)","Otherwise","Good","You","The","returnDate.Date","Do","It","Does","I","Great","If","Good","I","DNA","dna1.Count('X');","DNA","dna2.Count('X');","I","Can","This","@daija","That's","Sounds","(Note:","I","While","Take","Yes.","public","{","List\u003cstring\u003e","try","{","studentsInGrade","}","catch(KeyNotFoundException","{","studentsInGrade=","Roster[grade]","}","return","}","Now","Great.","1)","2)","3)","My","Why","Once","Good","1)","2)","Your","Really","Interesting.","Do","I","Finally,","Hello","I","Now","Three","1)","2)","3)","This","My","You've","I","I","Simple","@broderick","That","Yes,","There","I","One","That","What","If","As","Good","What","What","I","Why",":-)","I","I","The","I'm","I","1.","2.","Sure,","1)","2)","Since","If","This","Why","Is","One","@triston,","Nope,","Thanks","Works.","`Where(char.IsLetter)`","`Where`","There","Not","Can","Good","The","\u003cb\u003e[\u0026#94;'-][\\w-']*[\u0026#94;'-]\u003c/b\u003e","As","Much","DifferenceOfSquares()","@kaitlyn","t","In","http://msdn.microsoft.com/en-us/library/ms229060(v=vs.110).aspx","The","One","have","Looking","`IsLeap()`","Programming","With","You","It","Good","This","Also","if(something)","{","//some","}","else","{","//some","}","There","Maybe","I","While","Constants","I","ahh,","The","```","if","{","return","}","return","```","Can","```","return","```","A","I'm","how","int.Parse(x)","Changed","You","The","Thanks,","I","You've","This","If","_The","RX837","Try","Defaulting","I'm","@anya-FredrikE","Random","Included","Nested","The","In","If","I","using","Nope.","To","Also,","It","While","Well","Wow,","Fairly","Ah,","Yeah.","That","Can","Sorry,","To","I","private","Int32","if","return","}","char","Contract.Assert(p","Int32","while","if","return","}","n","if","n","}","}","if","n","if","return","}","}","else","if","return","}","}","value","return","}","The","```csharp","bool","if","return","```","is","```csharp","if","return","```","I","Sure,","Okay.","The","Heh,","I","I'm","Sure,","Instead","Just","I'm","From","```","For","KeyValuePair\u003cTKey,","The","```","I","Can","I","Also,","Finally,","I","My","Wow!","Could","Note:","The","Interesting!","I","Okay.","The","Good","I","Nice","If","```return","Ooo.","I","If","```return","Why","That's","Having","I","Also,","I","There","For","If","```return","Why","Is","Could","I","Had","Yeah,","As","Wish","@jamal","I'm","Ultimately,","@emery","I","I","(Please","@lesley","@carlos","@claude","Given","Using","Sounds","Start","Start","During","Thans","I","I","But,","I've","You","Looks","I","First,","Then,","```csharp","public","{","Equilateral=1,","Isosceles=2,","Scalene=3","}","```","Then","```csharp","kind","```","I","I","Item[Int32]","Item[Object]","So,","I'd","I'm","@libby","The","Oh,","Not","It","Great","As","StringBuilder","if","{","output.Append(\"Pling\");","}","if","{","output.Append(\"Plang\");","}","if","{","output.Append(\"Plong\");","}","if","{","output.Append(number.ToString());","}","return","Or","Tuple\u003cint,","{","new","new","new","};","StringBuilder","foreach","{","if","{","output.Append(tuple.Item2);","}","}","if","{","output.Append(number.ToString());","}","return","Again,","What","I'm","Since","Intriguing.","You","private","{","_allergies","foreach","{","if","{","_allergies.Add(((AllergyEnum)index).ToString());","}","}","}","I","Good","It","It","This","@verla","Thanks","-Joseph","I","Found","You","Good","Why","If","First,","Second,","If","Like","Creative!","I'd","I","Good","Also","Turns","```oldScoreSet.ToList().ForEach(","and","@sibyl","Your","The","Your","You","Doesn't","Also,","If","I","I'm","It","To","From","Your","Good","You","for","if","{","matches.Add(i);","}","}","Since","If","Just","string","foreach","{","while","{","roman","number","}","}","return","Technically","string","foreach","{","int","roman","number","}","return","Or","Can","You","Also","Other","This","Why","What","Since","You","A","I","I","For","After","I","This","Hi,","On","Thanks!","Thanks","Yeah,","Thanks","If","Instead","It's","Thanks,","The","Partly","Ahh,","Yeah,","I","I","Making","That's","I'm","Thanks","That","`anagrams`","More","Def","Your","The","Good","Another","class","{","public","public","public","public","public","{","foreach","{","switch","{","case","case","case","case","default:","throw","//","}","}","}","public","{","switch","{","case","case","case","case","default:","}","}","}","That","Actually,","count_array[lookup[(int)","At","I","Yes,","If","I'll","Good","You","private","{","double","try","{","age","}","catch","{","age","age","spaceAge.Add(conversion,","}","return","}","I","This","And","The","I","I","This","I","If","You're","Wow!","Was","I","This","Thanks!","It's","I","Good","Here's","1)","2)","3)","4)","4)","using","Good","A","You","You","Good","Why","There's","Number","For","number","number","Return","No","Great","A","1)","2)","3)","Interesting.","I'd","Thank","I","I","Dropped","@lesly","One","More","I","It","Getting","Looks","There","Number","For","Number","Number","Return","Looks","Is","If","There","Number","For","Number","Number","Return","Cool,","Good","There","For","verses","Could","verses","Why","To","Good","One","A","I","I'd","I","Good","You","return","to","return","If","try","{","return","}","catch","{","return","}","This","Excellent!","I","1)","2)","Looks","Can","1)","2)","private","{","List\u003cchar\u003e","int","foreach","{","if","{","withSpaces.Add('","count","}","withSpaces.Add(c);","count++;","}","return","}","3)","foreach","{","if","{","yield","}","else","{","yield","}","}","Maybe","1)","2)","3)","4)","5)","Yes,","I","Ok,","Nothing","Wow,","1.","2.","Thank","I","It","Thanks","The","Could","Not","Tried","@allie-walsh","Best","Strings","I","I","Seems","Still","So","1.","2.","1.","2.","1.","2.","3.","My","First","Looks","There","Number","For","Number","Number","Return","Why","You","You","Cool,","Looks","Put","You","There","Why","int","int","int","int","String","Sure,","at","I","public","{","var","switch","{","case","case","case","case","case","case","}","//","//","while","{","date","}","return","}","Give","If","Good","On","Good","Can","Same","I","This","Thanks","My","After","Can","Thanks!","Good","You","You","There","Number","For","Number","Number","Return","I","Thanks--I","Good","You","C#","if","_word","else","_word","to","_word","Nice!","Excellent.","One","There","Okay,","I'm","Great","There","Second,","This","Is","I","@anabelle","Your","Same","Interesting","As","@jed","I've","After","@roberto","Using","Used","\u003cb\u003eIsNullOfWhiteSpace()\u003c/b\u003e","```C#","private","return","}","```","That","You","Your","If","Additionally,","Feel","Ah","Agreed,","I","I","As","Using","```csharp","public","{","int","if","{","word","foreach","{","result",".Where(a",".Select(a",".FirstOrDefault();","}","}","return","}","```","My","@kyla","But","```csharp","public","{","DateTime","switch","{","case","case","case","case","meetup","return","case","meetup","return","case","meetup","return","}","throw","}","```","I","Yeah,","Also","meetup","return","Added","Looks","```csharp","if(value","```","I","While","I","Your","If","I'm","`_word`","I","If","I","I","You","```csharp","public","{","if","{","throw","}","return","lookup",".Where(info",".Select(info",");","}","```","As","A","The","Very","Latter","Good","On","Good","Personally","Generally","if","It'd","return","Personally","Another","I","Why","string","foreach","{","if","{","containsInvalids","}","}","The","For","for","{","if","{","toReturn","}","else","{","toReturn","break;","}","Look","There","Number","For","Number","Number","Return","It","I","Instead","if","return","}","Just","return","It","Good","However","Granted","Good","This","One","Unfortunately","There","Number","For","Number","Number","Return","Can","I","Is","If","The","This","\"on","except","unless","But","-","-","It's","LOL!","@malvina","I","Then","Here's","```csharp","private","private","public","{","if","Sieve(num);","List\u003cint\u003e","foreach","{","while","{","factors.Add(i);","num","}","if","break;","}","return","}","private","{","primes.Clear();","//true","BitArray","array[0]","array[1]","for","{","if","continue;","primes.Add(i);","for","array[j]","}","lastMax","}","```","I","There","@donnell","@kavon","The","The","That's","I","If","Thanks","@chandler","```csharp","public","{","if","{","throw","}","return","lookup",".Where(info",".Select(info",");","}","```","outputs:","```","checking:","checking:","checking:","checking:","checking:","checking:","checking:","checking:","checking:","checking:","checking:","checking:","checking:","```","It","@laurianne","My","While","I","Along","`public","Your","`","First","Second","Third","Fourth","Last","Teenth","}","`","Line","Line","Line","While","Your","I'm","But","@vanessa","Much","Inside","That","You","This","The","I","This","I've","\"on","except","unless","A","@evelyn","```csharp","Stopwatch","IEnumerable\u003clong\u003e","foreach","result","stopwatch.Stop();","Console.WriteLine(\"Result:","Console.WriteLine(\"Elapsed:","```","and","Can","I'm","@casimir","I'm","I'm","I","Good","The","Good","For","Hmmm.","When","Kind","check","Just","Predicate\u003cT\u003e","Just","Predicate\u003ct\u003e","Can","That's","Also","Yours","There","Well","Use","You","Your","What","I","I","Yes","Creative!","Didn't","Thanks","Great","Looks","The","I","I","Quick","Didn't","Previous","Is","20%","Ugh,","Ooo,","Nah,","Thanks,","1.","2.","That","Why","And","All","Comments","Hmm,","```int","if","numerals.Append(string.Concat(Enumerable.Repeat(value2numeral.Value,","value","}```","would","Well","I","Furthermore","I'd","I","Yes","Thank","The","Important","@eric","I","@delia","I","Added","@rosalind","The","About","About","Check","http://msdn.microsoft.com/en-us/library/cc165449.aspx","Thanks","I","@shany","Edit:","Edit:","Hugh","The","You","Ternary","Otherwise","Why","You","The","Yeah,","Nice!","Just","Looks","@olga","My","I","Good","You","At","Good","You","You","I","It","Another","Everything","My","Okay.","A","You","Well,","Sure,","A","@bud","Good","Reverse()","Number","For","Number","Number","Return","You","Reversing","There","Number","For","Number","Number","Return","I","Since,","At","Thanks","Haha.","You","Hint:","The","What","You","return","@tressie","My","It","What","In","Why","You","public","{","return","}","Do","I","Constants","On","An","```","public","{","return","}","```","vs","```","public","{","var","var","var","return","}","```","I","Here","```","var","sw.Start();","for","{","ExercismCSharp.leap.Year.IsLeap(1800);","ExercismCSharp.leap.Year.IsLeap(2000);","ExercismCSharp.leap.Year.IsLeap(2400);","}","sw.Stop();","var","sw.Reset();","sw.Start();","for","{","ExercismCSharp.leap.Year.IsLeap2(1800);","ExercismCSharp.leap.Year.IsLeap2(2000);","ExercismCSharp.leap.Year.IsLeap2(2400);","}","sw.Stop();","var","Console.WriteLine(String.Format(\"Run","Console.WriteLine(String.Format(\"Run","```","Run","I","The","Changed","@gust,","While","Moved","Done.","This","Try","You","Hacia","Good","You","Boo!","Check","2nd","Too","Just","It","Boolean","*","*","*","Additional","Prevented","Hi","I","Apart","Best,","Bilal","You","Think","A","So","Then,","I","Compares","What","Can","Lol!","Yea...the","yea...like","I","Getting","I","I","I","To","I'd","There's","Number","For","Number","Number","Return","Oh","I","Much","I","I","I","Thanks","In","I","TryParse","Maybe","You","Also,","This","Looks","Why","If","return","Nice.","@aniyah","Probably","I","@charlotte,","@denis,","Thanks","@tavares,","@javier,","@flo","@mathias,","Man,","Not","Hi","The","Lastly,","Other","Thanks","@era","You","Also","Currently","Things","*","*","*","Nice","I","That","In","I","Quite","Basically,","I","I","@justyn:","First","My","Your","Also,","```c#","public","{","public","{","return","}","}","```","@margarette","*","*","*","*","*","...get","After","I","I","The","```csharp","(year","```","is","The","The","```csharp","(year","```","is","The","A","```plain","on","except","unless","```","be","```csharp","(year","```","Cheers","@kaden,","Seems","Se","First","I","I","thanks.","Hard","Diao","Nice","How","Hard","He","En","Looks","\u003cb\u003e\u003cem\u003eVery\u003c/em\u003e","Remove","I","\u003cb\u003eMinor\u003c/b\u003e","Throw","It","No","It's","\u003cb\u003eExtra","Linq","You","Consider","I","The","Also","Invert","This","@lucious","ReSharper","This","And","@sigmund,","\u003ccode\u003eif","return","you","\u003ccode\u003ereturn","Also,","If","Main","I","Looks","*","*","*","Wow!","Reversing","I","I","If","Created","I","How","`word`","I","Instead","`sort`","Anyone?","Comparing","I","Thanks.","I","Somebody","Awesome!","Good","On","I","That","public","{","if","if","return","}","static","{","return","}","static","{","return","}","static","{","return","}","Thank","Why","String","The","I","Since","Regardless","Doing","For","Instead","Your","if","{","foreach","{","block","if","{","continue;","}","foreach","{","Why","Modifying","Relying","Why","Why","I","Right","Try","@tavares","You'll","Sorry","No","You","public","public","return","}","}","And","You","Your","@pansy,","Because","For","That","Yes,","Hi","I","The","So","Thanks","Maybe","```InvalidNucleotideException```","Todo:","Got","LGTM","Would","The","I","Maybe","You're","The","Also,","Interesting","Nice!","I","Tip:","Creative","Did","var","I","You","1.","2.","~~~","public","{","var","var","return","}","~~~","I","I","But","~~~","if","return","else","return","else","return","~~~","@desiree,","I","Fixed","Thanks","Thanks","And","Not","But","While","Currently","I","I","Thank","Modified","For","This","Here's","foreach","{","decimalValue","if","{","decimalValue++;","}","else","{","decimalValue","break;","}","}","Good","I'm","That","As","I'd","This","Didn't","First","Thanks","Indeed","I","Really","According","This","Why","Thanks","I've","The","You","I","At","Not","Simple","Your","Since","Fixed","Looks","The","Actually,","This","None","That","You","I","Did","I'm","This","Need","Per","-","-","In","Apply","Check","I","Changed","Thank","Removed","while","@russell","Possible....?","Mate...","Added","Bask","You're","Next","I","```NameAttribute```","Deeply","Thanks","Hi","Hi,","Can","Best,","Bilal","Thanks!","Nice!","Hi","Using","```","return","```","@blanche","You","Is","OK","I","Also,","`int","Did","Why","I","The","I've","Thank","Actually","I","1E9","I","For","Looks","I","In","This","I","My","Re-used","LOL,","I","I","Better.","for","{","romanText.Append(\u003csomething\u003e);","}","and","if","{","romanText.Append(\u003csomething\u003e);","x","}","cleaned","@rossie","Hi","I","I","And,","That","This","Ugh.","-","-","I","Also,","1.","2.","For","I","I'm","one","I'd","I","DateTime","Implement","Just","And","Or,","\u003ccode\u003e","return","\u003c/code\u003e","I","I","Moreover,","```csharp","foreach","{","if","{","throw","}","}","```","And","4","CountDown","Rules","In","\u003ca","I","I","\u003ccode\u003e","[Test]","public","{","school.Add(\"Kareem\",","school.Roster[6][0]","Assert.That(school.Roster[6],","}","\u003c/code\u003e","I","Lol,","Ah,","I","This","Combinding","```GetTextFor(new","I","http://exercism.io/submissions/1183ac6791034e62aaa350a32b570873","Skipping","It's","If","If","great","This","Definitely","Looks","trying","Just","Increase","I'm","Thanks","Fabulous!","After","This","I","My","well,","My","I","Thanks","OK.","I","In","You","\u003ccode\u003e","[Test]","public","{","Assert.Throws\u003cDNA.InvalidNucleotideException\u003e(","}","\u003c/code\u003e","Hi","Try","Once","Add","Comment","Build","Once","Once","Hope","The","It","Also,","You","Here","-","-","-","public","-","-","-","-","-","-","else","_just_","On","I","The","Alright,","Wow","I","If","foreach","{","while","{","romanText.Append(ruleNumber.Value);","value","}","}","```","402","I","foreach","{","while","{","romanText.Append(ruleNumber.Value);","value","}","}","```","575","I","while","I","@sonia,","Using","New","I","foreach","{","int","if","{","romanText.Append(String.Concat(Enumerable.Repeat(ruleNumber.Value,","value","if","break;","}","}","This","Switched","Added","Thanks","That's","I","I'll","Switched","Switched","Logic","It","You","I","Finally,","Sorry","Onto","I'd","The","Finally","Please","No","Much","Also","Could","Ignore_non_allergen_score_parts()","The","private","{","if","throw","if","throw","if","throw","}","Or","Also,","In","I","Ok","AddWords","Who","Are","@blaze","Not","Roster","you","Cleaner","I","Typical","-","You","You","You","Whoops.","Consider","Thanks","Don't","Also,","It","Lol,","Another","For","Remember","Any","The","Very","Enumerable.Range(divisors.Min(),","The","The","You","Also","Nice","Updated","You've","Small","On","Line","Agreed.","Separated","Had","In","I","Avoid","RegEx","To","Why","In","Push","Why","isMatch","Why","Why","Great","Looks","Look","Interesting","Still","Looks","Looks","A","Looks","Looks","Ummm,","Good","_Notes:_","I","The","The","Yeah,","I","What","Having","Duh!","This","I","This","I","Frustration.","I'm","PLEASE","Nice","Based","This","So","Furthermore,","Very","Thanks.","This","I'm","I","Alright,","That","I","I","I","Sorry","Simplified","Refactored","the","using","Very","Dividible","Also","Should","complicated","Can","If","Well,","I","Why","I","I","It","The","Hi","It","I'd","Can","I","Oh,","What","Oh","Yeah.","Odd.","Am","A","Though","The","I","The","Your","This","You","I","The","I","Not","You","Thanks","Thanks","Thanks","Hash","This","I","I","I","I","Again,","Edit:","Thanks,","-","first","then","Random","Too","xD","Do","I","```","for","{","var","var","int","if","{","romanText.Append(string.Concat(Enumerable.Repeat(ruleNumber,","value","}","}","```","I","Thanks","This","C:\\code\\exercism\\csharp\u003eexercism","p/LeapTest.cs","2014/10/28","Looks","Oh,","Thanks,","Looks","It's","Intriguing.","Thanks","Agree","Ok","Anybody","First","Starting","This","First","Run","Format","For","Thanks","Thanks","Ok","lol.","much","I","You","```","if","return","}","else","return","}","```","when","```","return","(year","```","Which,","Looks","One","Also,","Good","tried","Looking","I","The","It","1.","2.","3.","Good","Simple","Because","You","Then","Using","Why","Surely","Why","Sorry","Hmm","My","A","The","The","The","The","I","Realised","Loop","If","No","That's","I","A","In","Towards","Finally,","My","Thanks.","This","I'm","I'm","Small","I","Inverting","First","Just","I","I","I","That","After","*I","*Validation","*Initialisation","#Consider","Moved","Used","I","No,","Why","Is","Try","My","If","Case","*Method","This","I","Simplified","I'm","If","Again","Maybe","Looks","Good","I","Im","I'm","In","I","I","I","I","But","@cora","Main","Base","Calculated","I","The","Verses","Since","Been","Yep,","Learned","First","inequality).","The","The","If","If","I","\u003cb\u003eMinor","The","```","readonly","```","There","```","public","{","return","}","public","{","return",".GroupBy(c",".Select(g",".Sum(a","}","```","\u003cb\u003eOther","The","```","var","var","```","The","I","As","```","return","```","There","We","```","private","static","scores","AddLetterValues(\"aeioulnrst\",","AddLetterValues(\"dg\",","AddLetterValues(\"bcmp\",","AddLetterValues(\"fhvwy\",","AddLetterValues(\"k\",","AddLetterValues(\"jx\",","AddLetterValues(\"qz\",","}","private","foreach","scores.Add(letter,","}","}","public","return","}","A","This","The","I","Sweet!","kudos","from","I","I","I","You","```return","The","If","Removed","@elvis","Using","In","The","I","If","```c#","if","{","return","}","if","{","return","}","if","{","return","}","return","```","Variable","The","I","Clean,","The","Roster's","Quite","That","For","How","Much","A","I","I","I'm","Is","In","I","Use","Can","To()","why","Try","I","Minor","Could","why","Nice","Date","I","I'd","I","Exception","Try","\"divisors\"","Try","To()","Good","Poor","I","To()","You","Still","Quite","Why","Why","IsDivisibleByValues","why","IsDivisibleBy","I","Fine","Can","Quite","This","I","Much","Actually","OK","I","That","```","foreach(var","{","if(predicate(item))","}","```","and","CheckForValidInput()","CheckForValidLengthss()","TwoSidesAreEqual","AllThrreSidesAreEqual()","_vertices","I","Exception","Oh!","However,","Much","Very","I","Try","On","`char","And","Could","DRY","Hint:","Getting","However","Still","However,","The","For","I","Some","This","I","I","I","Also","Doesn't","What","1.","2.","3.","4.","5.","I'm","There's","Looks","1.","2.","3.","4.","Done.","You're","I","First","There's","There","Good","I","You","Thanks,","I","can","Can","Good","That's","This","Trying","Still","Indeed!","You","@damian","Um","Fair","Why","Try","The","you","This","Why","String.Concat","Why","You're","That","The","Short,","Why","I","Then",":-)","Far","List","The","I","Why","Why","Why","Looking","Everyone","Can","Can","There","This","Why","`year","if","return","else","return","Is","The","I","On","I","Since","Yes","I","I","I","This","Since","`return","@tabitha,","This","@bulah,","I","I","Thanks","The","return","you","If","I","I","Edit:","This","This","There","Otherwise","I","It","Why","Try","Hard","A","Dictionaries","Thanks","Efficient","Try","Point","Still","509","Far","They","How","Andreas","Try","This","Maybe","This","Instead","The","why","Dictionaries","I","I'm","Interesting","Update","As","There","```","public","{","public","//","}","public","return","}","}","```","Minor","```","return","```","Brilliant","I","Don't","Core","I","Required","I","Not","I","Lastly,","Use","Good","Forgot","This","Didn't","String.EndsWith()","Sure,","This","Thanks","I","OTOH","This","The","I","Aha..","This","Look","Given","Your","Thanks.","Try","Try","Handles","I","However","Extensions","Good","Try","Contains()","Good","Try","DRY","I","I","ok","I","(after","Thanks","CalculateAddEnds","I'm","Just","Thanks!","Flagged","yes","Yes","Great","Found","I","Try","Then","This","I","Aha","Wow","Just","Looks","Few","I","Like","Good","Out","Thats","Will","I","The","I","\u003eProbably","Actually.","I'm","Seconds","works","Seconds","fails.","Edit:","I","Hello","I","I","Overall,","Looks","return","Old","I","Programming","Definitely","IMHO","You","I","Can","Try","Similarly","The","I","Thought","Good","Making","Refactor","Nice,","It's","The","The","http://c2.com/cgi/wiki?PrematureOptimization","I","Love","However","As","Hey","thx","I","But","Is","foreach","payload.Add(ele.ToLower(),","Works","I","I","I","I","I","I","I'm","-","Same","~~~","var","n","~~~","I","I","Added","for","What","A","Nice","You","@kari,","The","The","The","Thanks","After","I","Edit:","Normally","While","Take","Hopefully","Code",":)","We've","Good","Ok,","I","Note:","I","Ok,","Should","UPDATE:","Like","Tough","Other","When","@elmore",":)","used","Not","I","From","Aside","Removed","Yeah,","@jerad","No","Could","Still","a)","b)","Good","And","Short","Of","IMHO","The","Every","The","Dont","You","Generally","Math.Pow()","Constructor","You","I","yup","Two","1","for(int","for(Int","for(in","{","...","}","That","or","Revision","You","Response","Got","Why","New","Eliminated","If","Try","Still","Make","Yeah,","Can","Interesting","One","Not","@delbert","I","I","and","Not","int","if","to","I've","New","One","i","plus","you","I","@janie","Removed","Better","Still","The","Using","```csharp","static","{","IEnumerable\u003cTriplet\u003e","Stopwatch","for","{","triplets","}","sw.Stop();","triplets.ToList().ForEach(","t","{","Console.WriteLine(\"a:{0}","}",");","Console.WriteLine(\"Elapsed","Console.ReadKey();","}","```","The","That","You","(year","Good","I","Instead","That","As","I","Rereading","Same","I'm","The","Also","`year","if","return","is","The","Simple","I","The","The","My","```","if","{","if","return","return","}","if","return","```","but","Also...","The","You","You","Yup!","You","Neat","I","I","Cheers!","I","Good,","This","While","This","```csharp","class","{","static","{","IEnumerable\u003cint\u003e","Stopwatch","stopwatch.Start();","for(int","primes","stopwatch.Stop();","Console.WriteLine(\"[{0}]\",","Console.WriteLine(\"Elapsed","Console.ReadKey();","}","}","```","You","I","see","...","let","where","...","or","var","if","Choosing","In","````Dictionary\u003cstring,","and","````Stack\u003cstring\u003e()````","Wow!","Abstract","```","Added","Enhanced","````","i=0,","i=1,","i=2,","i=3,","i=4,","i=5,","````","where","````","0:","1:","2:","3:","4:","5:for","````","So","It","Yes,","**Still","This","Residue","change","```csharp","list","```","I've","This","Great","Interesting,","I'm","Ran","````i=0,","i=1,","i=2,","i=3,","i=4,","i=5,","so","foreach","I","I","Done","Removing","Very","Yup!","Thanks","You","```csharp","private","{","return","}","```","You","```csharp","private","{","return","}","```","Can","Good","Good","My","I","Do","Good","That","However","I","I","Done","The","I","Well,","```csharp","private","{","return","}","```","I","Still","I","The","If","You","Learned","Implemented","This","You","This","(I","Jamie,","I","I","The","List-based","Resharper","Can","Why","This","Program","Can","To()","Works","Still","and","Good","Common","I","I","Then","Resharper","And","GroupBy","ValidateTriangleInequality()","Look","Very","Replace","I","I","That",":-)","Looks","1.","2.","3.","Try","Tuple.Create","Use","No","Interesting","I","I","This","I","No,","```csharp","while(deque.Size","{","int","//","}","```","And","The","static","You","Great","DivisibleBy()","Added","foreach","0","````","1","````","var","foreach","{","sumOfSquares","sum","}","return","2","````","{","a[0]","a[1]","return","});","return","and","````version=","version=","version=","The","and","Looks","The","The","Nice!","The","This","This","You","*","This","Great","Found","Version","---------","v=2Query","v=2Linq","v=2Foreach","v=2For","v=3Query","v=3Linq","v=3Foreach","v=3For","v=FastQuery","v=FastLinq","v=FastForeach","First","Second","Anyway","You're","I","Iterating","Ooh,","Could","I","It's","Cool,","I","I","Remember","I","@ezequiel","How","Inner","Just","As","The","Unless","At","@krista","a%b","At","Very","I","@nash","Ooh,","You","Edited:","I","It","I","One","Not","Or","One","```csharp","private","private","//","if","{","throw","}","//","foreach","{","if","{","//","```","This","Perhaps","OK,","As","I","Nice","Do","If","OK,","As","All","My","I","@chyna","In","Credit","Looks","Thanks","FYI","True","You","line","Suggestion","if","return","That","@joyce","This","Alternately,","You","put","Added","Considered","good","if","Aha..","P4r4d0x42,","This","Awesome","I","I","This","I","Hi","In","If","Therefore","Just","Obviously","Good","Hi","First","With","Good","I","Good","Good","Implementation","Three","Straight","Looks","you","return","Maybe","Ok,","On","I","What","Well,","On","Thanks!","Ok,","```","var","return","```","I","Suggestions?","Try","some","Can","Thanks,","Fields","Nice","And","Try","Too","Can","Should","Try","I","In","Seems","Use","Try","You","You","Hint","Look","or","````var","return","This","````","public","{","school.Add(\"Jennifer\",","school.Roster[4].Add(\"Christopher\");","Assert.That(school.Roster[4],","}````","Long","Hard","Only","Thank","Like","Get",".First().Equals('\\'')","StartsWith","It","Hint","```","public","{","this.multiples","}","public",":","{","}","```","To","Wasn't","Did","```","a.Equals(b)","```","The","Quite","Pretty","This","Yes!","You","Try","You","Although","Dont","I","This","This","removePunctuation","Why","Ooh,","Thanks","for","Just","...still","You","Foreach/GroupBy","If","I","This","I","I","What","You","Then","I","The","Also,","You","You","This","http://stackoverflow.com/questions/1433307/speed-of-c-sharp-lists","Check","Math()","Added","version=","version=","version=","*version=","**This","(and","This","I","Failing","Why","DifferenceOfSquares","You","I","I","You","Too","A","Two","Second","Truly","I","**It","```","[Test]","public","{","var","var","{","{","{","{","{","{","{","};","Assert.That(phrase.WordCount(),","}","```","Is","What","Have","It","Your","You","If","This","3","There","Thx","Like","I","Refactor","Final","Roster","TrimEnd()","@norbert","Followed","You","It","I","Can","Whilst","Verse()","However","Too","Think","Took","Hashing","I'm","I","2","Nice","I","Should","public","{","if","return","}","Looks","Thanks!","@berneice","Can","Why","FYI","Use","Hard","Lots","can","Looks","This","Move","Adding","So,","But","Yours","I","for","You","Fascinating","CheckSum","Create","(then","Don't","I","FizzBuzz","Sorry","A","This","method()","new","...","List.Add()","...","return","end","This","if","The","@sierra","Thanks.","Actually,","For","Thanks!","Like","I","Really?","Yeah,","Dividing","I","something","Aggregate","Not","And","In","I","I","input.Replace(\"","it","Is","Oh!","See","I'd","\u003eWhy","Do","You","Yeah,","1)","2)","Alternatively,","```for","Which,","I","I","I","Nice","You","I","Still","Why","Dont","Agree","My","Playing","Readability","You","_counts",".GroupBy(x",".Select(group",".ToDictionary(x","or:","_counts",".GroupBy(x",".ToDictionary(g","I","So","if(!NucleotideCounts.ContainsKey(nucleotide))","{","return","}","or","if(!NucleotideCounts.ContainsKey(nucleotide))","over","if(!NucleotideCounts.ContainsKey(nucleotide))","return","Short","That","+1","Surely","I","Of","To","The","The","Very","They","See","I","http://msdn.microsoft.com/en-us/library/ms132151(v=vs.110).aspx","One","RandomChar","It","IMHO","Anyway","Actually","Did","Then","I'm","One","Heh,","Any","foreach","Anyway","Uses","Given","Anyway","You","Actually","String.Concat","Zip","There","In","Good","You","Further","Finally","There","Could","Refactored","Just","This","The","String.Concat","Did","Do","You","That","for","Dont","Be","ToUpper","Custom","There","Fixes","Wow","Still","````","public","{","return","}","This","Also","Dunno","On","looks","You","you","return","One","Very","Check","In","Would","Tidied","Unequal","I","Added","Not","You","This","@alfred:","Now",":-)","Can","So,","...","Probably","You","Well","It","So","And","once","mmm,","The","Still","I","In","````","return","````","not","you","If","or","@palma,","@ericka,","Zip","Still","In","Use","This","Déjà","That","Actually,","I","In","Generate","I","*","*","Does","Enumerable.Range(1,","You","Furthermore,","Refactored","Anyway,","The","In","Thank","Definitely","Uses","Getting","I","```csharp","number.where(c","```","No,","No","Are","Were","The","Here","For","Does","This","Why","TriangleException","Although","Somehow","You","Could","Thanks","Adding","You","````","public","{","school.Add(\"Jennifer\",","school.Roster[4].Add(\"Christopher\");","Assert.That(school.Roster[4],","}","````","And","Now","This","Further","I","Keep","Just","````Array\u003cint\u003e,","**None**","*This","can","Roster","Thanks","```csharp","public","int","int",")","```","Renamed","Thought","Looks","Nice","This","Nice","This","Note","```","(year","```","returns","Thanks","A","1)","2)","Hamming","If","```csharp","var","if","{","Missile.Launch();","}","```","I","The","I","I","My","Nice","Thanks.","[Test]","public","{","Assert.That(Hamming.Compute(\"coding","}","The","Removed","You","Good","Following","All","could","A","Your","There's","Your","Ultimately,","Nice","Resharper","1.","2.","3.","I","So","Nice","You","You","You","Nice","Nice","Went","If"]},{"Key":" There","Fragments":["are","is","is","are","is","are","is","is","is","you","is","is","is","is","are","are","may","is","are","is","are","is","are","is","is","is","is","still","is","is","is","is","is","is","is","is","is","is","might","are","is","is","are","is","is","is","are","are","only","is","is","was","are","is","is"]},{"Key":"There are","Fragments":["interfaces","unnecessary","some","ways","few","arguments","no","4","a","much","a","a","solutions","only","two","other","only","more","also","no"]},{"Key":"are interfaces","Fragments":["for"]},{"Key":"interfaces for","Fragments":["both"]},{"Key":"for both","Fragments":["now","word"]},{"Key":"both now","Fragments":["I"]},{"Key":"now I","Fragments":["think!","see.","just","have","ahve","know"]},{"Key":" @triston","Fragments":["If"]},{"Key":"@triston If","Fragments":["you"]},{"Key":"If you","Fragments":["look","are","REALLY","came","make","really","invert","remove","want","are","use","look","were","just","used","make","pull","are","are","combine","break","want","need","want","don't","are","combine","check","waited","want","return","want","want","set","need","don't","put","remove","condensed","follow","are","are","haven't","have","have","do","do","were","do","do","do","do","do","do","do","do","do","return","do","do","do","do","do","do","return","haven't","don't","don't","change","have","just","want","feel","checked","decide","get","are","wrote","later","expect","expect","had","were","switch","just","only","put","move","were","figure","peek","are","instead","are","are","use","get","would","look","put","change","don't","are","ever","make","assume","expect","use","do","reverse","use","make","can","leave","need","need","had","need","compare","used","can't","leave","did","are","looked","don't","call","got","plan","incorporate","insist","want","name"]},{"Key":"you look","Fragments":["at","at","at","at","at","at"]},{"Key":"look at","Fragments":["DateTime.Now.Year,","though:","concerning","better","LINQ","how","it","the","your","Git","the","other","DateTime.Now.Year,","how","properties","the","getting","the","is","it.","`string.IsNullOrWhitespace()`","the","the","it","your","the","other","it","other","other","someone","it","\u003cb\u003eLinq\u003c/b\u003e.","it,","this","\u003cb\u003elinq\u003c/b\u003e.","it.","the","your","other","what","that.","mine:","Linq","that.","all","the","some","but","introducing","my","some","other","the","other","the","other","some","other","\"FormatWord\".","some","C#","the","other","[my","this","if","mine?","odd"]},{"Key":"at DateTime.Now.Year,","Fragments":["there","it"]},{"Key":"DateTime.Now.Year, there","Fragments":["is"]},{"Key":"there is","Fragments":["a","of","a","a","no","probably","a","at","a","no","a","no","a","something","a","duplicate","code","no","a","a","no","no","a","a","no","enough","no","a","a","a","no","no","at","excess","no","no","a","to","absolutely","a","a","but","at","no","a","a","a","no","a","an","one","no","a","a","only","any","a","no","no","a","no","only","a","no","nothing","a","a","a","the","an","invalid","no","no","a","yours,","a","a","some","no","a","a","a","a","a","a","too","far","a","a","a","really","no","a","the","no","no","no","zero","no","any","trailing"]},{"Key":"is a","Fragments":["comment","big","negative","separate","chance","number","bit","tell-tale","good","LOT","method","static","bit","fairly","leap","leap","leap","leap","leap","leap","leap","leap","good","century","bit","submission","good","reasonable","special","century","century","special","normal","Century.","good","cost","Boolean.","bit","`\u003cremarks\u003e`","good","remainder","typo!","leap","static","trivial","bit","bad","fun","fun","subtle","discussion","shorthand","shame...","great","separate","leap","\"no-no\"","little","little","pretty","character","little","bit","good","chance","Test","good","small","negative","leap","bad","*very*","bit","cleaned","rule","perfectly","clear","number","leap","cleaner","very","nice","leap","simpler","letter","nitpick.","good","one","more","few","naming","question.","little","big,","fine","good","bit","break","little","personal","standard","\"bit","character","Linq","very","little","very","multiple","leap","real","global","lot","valid","bit","hidden","good","good","method","perfect","bit","letter","struct.","struct","performance","performance","big","many","perfect","inner","null","high","bit","unicode","leap","good","good","bug","nucleotide.","?","little","bit","good","fine","really","good","design","easier","leap","leap","leap","lot","reduction","bad","fairly","very","style","matter","much","more","relatively","massive","bad","literal","not","lack","lack","consideration,","new","nice","bold","lot","good","lot","concept","bit","bit","bit","very","long","good","List","fairly","Tuesday","lot","fairly","cut","bit","built","multiple","simple","leap","subclass","better","fine","lot","certain","pretty","very","negative","simple","\"school","trick","lot","bit","simple","dictionary.","bit","faster,","definite","method","method","possible","faster","more","more","good","nice","FirstOrValue","feature,","'divisor'","faster","fine","pretty","faster","very","leap","lot","way","safe","function","single","priority","static","Tuple","part","more","clear","common","leap","really","much","leap","clever","learning","leap","bit","leap","bit","method","trade","lot","multiple","little","tool","space","space","really","low","very","leap","leap","powerful","function","bit","way","way","trade","potential","constructor,","function.","public","better","bit","leap","leap","bit","better","much","better","good","completely","simpler","basic","simple","part","variant","very","bit","mutual","javascript","simple","whole","way","trick","bit","foreach","common","foreach","foreach","foreach","static","C#","good","good","better","guard","lot","rather","cost...","very","useful","such","generator","leap","very","trick","better","lot"]},{"Key":"a comment","Fragments":["that","explaining","summary","about","at","than","phobic...","becomes","above","describing","David.","on","right","by"]},{"Key":"comment that","Fragments":["it","would","on"]},{"Key":"that it","Fragments":["must","will","parsed","seems","was","is","works","reads","works","is","could","was","is","is","shows.","passes","could","will","would","is","is","would","used","is","isn't","does.","is","is","was","would","gives","assumes","maintains","has","passes","is","looks","looks","could","overflowed","doesn't","doesn't","would","provides","wouldn't","makes","is","could","makes","would","was","should","should","is","is","matters","is","can","catches","returns","would"]},{"Key":"it must","Fragments":["be","be","be","be","be","be"]},{"Key":"must be","Fragments":["between","accurate)","divisible","cleaner","great","of","the","made","bigger.","a","larger","larger","prime.","a","a","modified"]},{"Key":"be between","Fragments":["1","the"]},{"Key":"between 1","Fragments":["and"]},{"Key":"1 and","Fragments":["9999.","0","2.","incrementing","invoking","then","2."]},{"Key":"and 9999.","Fragments":[":)"]},{"Key":" ..","Fragments":["and"]},{"Key":".. and","Fragments":["still"]},{"Key":"and still","Fragments":["keep","keep","preserve","satisfy","no"]},{"Key":"still keep","Fragments":["it","some"]},{"Key":"keep it","Fragments":["in","I","simple,","simple","as","as","DRY.","as","multiple"]},{"Key":"it in","Fragments":["the","32bit","the","the","a","future","the","1","place","place","the","1","a","the","the","a","a","a","every","my","its","my","Number.","the","my","there.","a","the","IsEquilateral.","the","this","a","a","your","pseudo-code","InsertSpaceEveryFiveCharacters","the","school\u003c/em\u003e","`Match()`","\u003ccode\u003elist","your","as","static","the","the","the","context.","one?","500","a","a","one","a","your","your","a","1","line","verify.","this","writeRoster?"]},{"Key":"in the","Fragments":["relevant","if","class","code.","following","Julian","foreach","foreach","\"old\"","method","same","logic","same","example","README.md","wild.","summary","readme,","simplest","comment","next","same","code,","same","one","```Grade```","if","case","scope.","Unity","test","dictionary,","IsDivisible","Roster","way","end","string","interest","constructor.","one","future,","roster","front","current","other,","current","past","tests.","paramter,","XML","framework","top","code","test","habit","code","end,","real","code.","forefront","sentence.","sentence","signature","first","later","IsNumeric","list","candidate","reverse","previous","current","project","direction","foreach","terms","same","requirements.","class,","future.","constructor.","future.","future","string.","constructor,","first","comments.","long","foreach","code?","test","order","if-clause","single","use","logic","way","loop","same","for","main","old","future.","Linq","if","worst","where","int","NUnit","production","future.","constructor,","ReadOnlyDictionary","int","string","IList\u003c\u003e","IList","API.","Gregorian","class","provided","provided","inner","line.","unit","outer","future).","real","algorithm.","string","code!","OR","future.","future,","private","number","To","default","exercise.","first","two","constructor","or","test","private","input,","if","code","future.","previous","if","foreach","Match","string","string","return","future.","future","string,","if","Grade","blanks.","condition.","methods.","methods","test","Setup,","call.","IList","parameter","past","right","input","data.\",","future.","allowed","variable","constructor.","same","DivisibleBy","case","counting","multiple-value","year","IsLeap","conditional.","Hey()","new","assignment,","habit,","tests","tests","way","regular","readme","string","DNA","input","worst","DNA","Gregorian","spec.","proper","end,","loop.","code.","C#","way","code","block","constructor,","long","same","next","opposite","order","song,","order","dictionary,","RobotTest.cs","previous","enumeration","constructor.","classes","next","least","dictionary","Dictionary","code.","Dictionary","method.","RandomGenerator","name","case","test","constructor","places","Dictionary.","dictionary","construction","creation","Count()","catch","constructor","constructor,","constructor,","numbers","constructor","constructor","dictionary","same","order","order","correct","real","original","new","ctor,","ctor","function","ctor","other","if-statement","LeapTest.cs","future","string,","constructor","dictionary","methods","constructor,","`Kind()`","current","test","past","first","conversion","long","OrderedDictionary,",".NET","format",".ForEach()","first","collection","test","constructor","dictionary.","next","next","match","array","list","habit","starting","Schedule","following","test.","c#","3rd","case","readme","constructor","non-static","static","instance","7","method","dictionary.","copy","enumerable,","habit","order","test","spirit","test","for","instance","wrong","Select","enum.","inner","'for'","bitmap","spec","comparison","suit","end","static","'I,","enumeration,","right","exact","list","IsLeap","\"else\"","if","static","foreach","future","array,","requirements","flying","number","function","right","spec","loop","other","future?","conditional","test","special","unit","foreach","readme","README.","description",".md","first","case","lyrics","simplest","air","else","test","string","test","main","exercise","statement,","string.","Hey()","if/else","string,","statement","works","list,","test","LeapYear","MainClass","tests","last","calling","ReadMe.","loop","restrictions","ReadMe","current","responseMap","current","past","Check","Main","Year","debugger.","new","newValues","question","Year.IsLeap()","event","constructor","past","constructor?","second","static","Score","usage","To","test","Linq","constructor","constructor,","test","readme","method","problem","Roman","Atbash","new","first","test","conditional","method","constructor.","`Sum`,","readme","setter.","task.","first","comments","future,","future","future.","future","output","comments.","foreach","foreach","GIt","past.","test","words.","constructor","constructor?","next","readme","array","tests","list.","nitpicking","right","future","`Regex`","class","same","same","test","WordCount","direction.","future","readme.","exercise.","future","c#","c#","c#","rest","c#","future,","Math.Pow()","last","eye","test","second","tests","constructor.","exercism","description","problem","Zip","following","collection","next","next","string,"]},{"Key":"the relevant","Fragments":["code","`IsLeap(int)`","if","one"]},{"Key":"relevant code","Fragments":["block"]},{"Key":"code block","Fragments":["wihtout","read"]},{"Key":"block wihtout","Fragments":["any"]},{"Key":"wihtout any","Fragments":["recalcs,"]},{"Key":"any recalcs,","Fragments":["like"]},{"Key":"recalcs, like","Fragments":["it"]},{"Key":" Good,","Fragments":["but","just","just","just","just","just","just","but","now"]},{"Key":"Good, but","Fragments":["a","why"]},{"Key":"but a","Fragments":["few","lot","minor","little","StringBuilder","better"]},{"Key":"a few","Fragments":["things.","things","weeks)","lines,","extra","in","extra","true","places","observations:","comments","less","extra","dozen","more","more","more","embedded","things","modifications","years,","keystrokes","exception).","things:","things","things","things","things","things","things","things","lines","other","things","ways","others","constants","thought-process/procedural/style","comments.","things","things","things","things","things","things","things","things","things","things","things","things","things","suggestions.","things","other","things","things","statements.","parentheses","alternate","parentheses","years","years","areas","people","other","things","minor","problems.","years","more","more","of","milliseconds","conditionals","things:","optimizations","more","ways","more","more","sparse","minor","lines","helper","tricks","more","days"]},{"Key":"few things.","Fragments":[":)"]},{"Key":" 1.","Fragments":["IsAllCaps()","```IsLeap```","There","I","Missing","The","For","The","In","I","http://exercism.io/submissions/553b39c5d88702e59e13586d","I","Use","Click","The","If","If","When","```phrase```","```Roster```","LINQ","I","```Number```","Absolutely","Using","Click","If","Create","bool","Using","Expanding","Other","Private,","What","I","Should","Should","Should","Should","new","I","The","Never","Never","You","It","Should","Probably,","Should","Should","Should","Should","Should","Should","Should","Should","Should","Should","Should","Should","It","Should","What","Should","what's","By","I","Oh","No","There's","Depends","In","Let's","Yeah,","Interesting.","Determine","Of","Empty","Oops,","```ContaintsOnlyUpperCharacters```","All","I"]},{"Key":"1. IsAllCaps()","Fragments":["method"]},{"Key":"IsAllCaps() method","Fragments":["is","would"]},{"Key":"method is","Fragments":["probably","simply","a","doing","well-documented","unnecessary","templated","quite","currently","a","called","easily","just","bad","a","IEnumerable\u003cstring\u003e","faster","passed","an","5","not","any","any","way","much","really","matching","not","the","called","now","now","not","doing"]},{"Key":"is probably","Fragments":["not","a","the","overkill","not","the","in","the","one","only","the","as","a","worth","why","more","not","less","a","worth","an","as","a","other","slow","to","better"]},{"Key":"probably not","Fragments":["the","very","create","nearly","be","necessary."]},{"Key":"not the","Fragments":["best","turn","code","other","absolute","algorithm.","same","correct","challenge","most","most","other","same","same.","same","value","test","way","following?","\"expected\""]},{"Key":"the best","Fragments":["name.","solution","verbose","way","way","way","code?","I","case","practice","after","answer","solution,","of","way","of","algorithm","specs","way","implementation;","solution","way","implementation,","way","way","I","approach."]},{"Key":"best name.","Fragments":["It"]},{"Key":"name. It","Fragments":["is","makes"]},{"Key":"It is","Fragments":["really","generally","more","certainly","outside","more","pretty","a","pretty","generally","almost","a","a","impossible","a","definitely","probably","supposed","supposed","better","a","a","nice","kindof","shorter,","completely","cleaner","a","a","personal","usually","possible","pretty","way","obvious","possible","easier","concerning","concerning","nice","a","very","possible","frequently","possible","possible","based","the","not","not","directly","cleaner","as","more","easier","not","better","a","really","indeed","not","already","weird","only","a","a","a","a","easy","a","great","tremendously","also","too","a"]},{"Key":"is really","Fragments":["\"IsAllCapsWithAtLeastOneLetter()\".","a","hard","clean,","readable.","equal","going","awesome.","clever,","tough","justDigits.","better.","not","a","picky.","valuable.","picky)","about","splitting","the","just","1234","123","nice","concerned","correct","an","nothing","what","about","about","about","in","no"]},{"Key":" 2.","Fragments":["It","There","```Regex```","Totally","Imagine","Not","The","Can","Can","I","The","The","If","The","Intermediate","There's","I","Right","Why","Compressing","Compressing","Making","Constructor","Not","I","What","What","What","What","foreach","I","The","I","Could","I","IsNullOrWhiteSpace","What","I","What","I've","What","What","I","What","What","What","I'm","What","What","What","What","If","What","It","Well,","And","```ToDecimal```","The","I","Good","Two","In","The","Probably","Returning","string.Format","Ends","Good","A","The","for"]},{"Key":"2. It","Fragments":["is","will"]},{"Key":"is generally","Fragments":["a","considered","slower","not"]},{"Key":"generally a","Fragments":["bad","good","sign"]},{"Key":"a bad","Fragments":["idea","practice.","habit.","idea.","name","idea","idea","name.","name","naming","habit","idea.","habit","choice","coder"]},{"Key":"bad idea","Fragments":["to","to","to"]},{"Key":"idea to","Fragments":["add","attempt","have","use","try/catch","check","follow","explicitly","slim","cast","catch","separate"]},{"Key":"to add","Fragments":["extension","a","it","a","readability","much.","an","ToLower()","an","1","duplicate-letter","to","in","a","the","more","some","clarity.","the","a","any","complexity","things","to","additional","so","them","more","a","code","items","a","the","a","a","another","the"]},{"Key":"add extension","Fragments":["methods"]},{"Key":"extension methods","Fragments":["to","are","a","to","violate","\"breaking\"","to","on","for","--","is","on","in","that","for","and","and","for","carefully.","was","on","here","are","and","for","overkill"]},{"Key":"methods to","Fragments":["built-in","string","check","make","figure","built","my","a","try","determine","prevent","verify","two.","a","separate"]},{"Key":"to built-in","Fragments":["types"]},{"Key":"built-in types","Fragments":["unless","are","if"]},{"Key":"types unless","Fragments":["it"]},{"Key":"unless it","Fragments":["is","doesn't.","returns"]},{"Key":"it is","Fragments":["something","done","a","a","successful","checked","checked","a","the","only","correct?","probably","so","acceptable","divided","never","divisible","more","amazing","great","to","needed.","clear","going","part","customary","inconsistent.","very","not","small.","an","just","a","more","simpler","that's","divisible","fewer","clear","clear","now","divisible","automatically","less","trivial","probably","possible","defined","small.","less","now,","not","written","kind","doing","doing","okay","okay","one","going","needed","then","divisible","false","easier","false","simple","more","the","evenly","less","one","one","okay.","pretty","much","not","certainly","less","given","difficult","a","very","a","doing","a","not","not","different","Microsoft's","possible","better.","going","definitely","the","too","copied","the","fine.","missing","a","just","the","less","an","in","very","easy","a","used?","just","more","a","short","as","good","to","really","not","a","not","not","not","a","divisible","a","not","true","a","better","right","pretty","again:","divisible","divisible","extremely","doing.","easier","compounded","something","actually","possible","easier","what","cool:","intentional","already","really","that","up","invalid?","an","possible","going","more","nice","always","easier","not","to","possible","found","not","a","when","quite","exactly","used","less","not","probably","in","an","possibly","the","not","a","not","usually","quite","good","amazing","-1","too","kind","much","easier","the","one","somewhat","rare","called.","the","still","used.","a","always","not","a","not","precious","usually","now.","pretty","not","worth","just","overkill","just","already","pretty","still","still","cleaner","unneeded.","only","all","a","a","simpler","bad","business","not).","due","definitely","false,","a","a","to","yelling.","to","equivalent","NOT","going","possible","possible","requested.","also","a","called","not","not","always","to","found","possibility,","not","the","readable","a","leap","\"or\"","overkill","more","more","a","not,","not","not","a","an","obstantiated","out","the","just","better","overkill","other","passing","a","automatically","a","already","readable","probably","far","plain","perfect."]},{"Key":"is something","Fragments":["very","I'd","wrong","I","to","that","like"]},{"Key":"something very","Fragments":["universal","similar),"]},{"Key":"very universal","Fragments":["which"]},{"Key":"universal which","Fragments":["this"]},{"Key":"which this","Fragments":["is","function"]},{"Key":"this is","Fragments":["not.","an","concise,","with","a","overcommented","a","an","the","trivial","an","a","very","the","a","not","small,","we","a","from","concise","ran","a","small,","one","in","easier","going","what","important:","it.","to","that","a","my","going","a","really","one","not","the","hard","wrong","what","a","about","not","probably","the","a","a","not","very","a","just","not","so","being","the","clear","just","the","the","necessary!","what","C#,","more","the","common","a","not","the","a","a","usually","helpful.","great!","the","a","very","as","the","only","a","much","somewhat","a","leftover","what","sufficient.","after","clear","Linq.","being","almost","a","an","a","too","my","self-explanatory","a","purely","a","slightly","a","that","an","exactly","a","a","neater,","what","overly","by","wrong.","just","the","also","set","what","about","really","a","far","clearly","called","your","c#.","so","c#","syntactic","syntactic","syntactic","syntactic","probably","a","the","the","one","what","my","the","Linq.","Linq.","Linq.","not","relying","such"]},{"Key":" 3.","Fragments":["The","For","All","There's","I","Since","This","You","```_input```","```IsAnAnagram```","The","Yep!","Delete","That","Creating","Creating","AllCaps","You","This","I","While","return","int","I","While","If","I","Most","I'm","If","If","What","If","If","\"letter\"","What","If","If","If","If","This","If","Yup","'foreach'","There's","Anything","Checking","The","It's","I'm","I"]},{"Key":"3. The","Fragments":["last","last","tests"]},{"Key":"The last","Fragments":["check","return","thing","part","substring","test","test","problem"]},{"Key":"last check","Fragments":["could"]},{"Key":"check could","Fragments":["be"]},{"Key":"could be","Fragments":["string.IsNullOrWhiteSpace(str).","increased","replaced","a","more","a","static,","condensed","improved","a","written","removed","used","made","called","as","right","an","moved","made","wrong.","done,","running","the","confusing","handled","private","done","you","static","much","non-static.","easily","20","null,","a","to","done","exercises","optimised","one","sorted","case,","used","a","changed","made","done","more","a","leap","adjusted.","called","satisfied","improved","interesting","modified","const?","passed","but","reorganized","stored","preserved","expensive.","a","done,","more","used","enumerated","another","simplified","remedied","more","made","2","cleaner...","extracted.","used","IEnumerable","in","dodgy,","condensed","replaced","tidied","a","done","replaced","replced","moved"]},{"Key":"be string.IsNullOrWhiteSpace(str).","Fragments":["If"]},{"Key":"string.IsNullOrWhiteSpace(str). If","Fragments":["str"]},{"Key":"If str","Fragments":["is"]},{"Key":"str is","Fragments":["null,","null?","null"]},{"Key":"is null,","Fragments":["your","that","since","kvPair.Value","kvp.Value","old.Value","an","entry.Value","legacyScore.Value","kvp.Value","and","o.Value","and","scoreToLetters.Value","and","item.Value","or","oldPointValues.Value","or","letters","or","pair.Value","or","p_Pair.Value","or","kvp.Value","or","dictonaryItemToTransform.Value","or","kp.Value","or","letters","or","pair.Value","or","row.Value","or","kvp.Value","or","oldData[value]","or","entry.Value","or","point.Value","or","oldData.ElementAt(z).Value","or","pair.Value","or","item.Value","or","empty"]},{"Key":"null, your","Fragments":["str.Trim()"]},{"Key":"your str.Trim()","Fragments":["will"]},{"Key":"str.Trim() will","Fragments":["crash."]},{"Key":" Good","Fragments":["job!","stuff.","point","you","job!","catch","luck","first","on","to","example","point!","catch","job,","job,","job,","clean","job!","stuff!","job","point,","job,","point","You","point.","morning.","job","job","job!","use","call","call,","call","point,","work!","call!","job","job.","job.","points.","point.","point","point","idea","job.","job.","job.","job.","job.","spot,","points.","solution,","job,","job.","job.","job.","questions.","job.","job.","job.","job.","job.","job.","job!","call","job.","job.","job.","ideas.","job!","job","job.","god,","job!","job.","job.","job.","job","job","job.","catch.","job!","point!","luck","but","luck","job!","luck","but","but","luck","luck","but","work","point","job!","trick","but","luck","use","use","luck","start.","point,"]},{"Key":" I'd","Fragments":["considered","say","appreciate","recommend","recommend","go","like","like","recommend","like","recommend","probably","recommend","also","look","like","consider"]},{"Key":"I'd considered","Fragments":["using"]},{"Key":"considered using","Fragments":["linq","an","a","just","the"]},{"Key":"using linq","Fragments":["to","orderby.","just"]},{"Key":"linq to","Fragments":["do","sort","get"]},{"Key":"to do","Fragments":["this,","it","!divisibleBy100","this","this","any","that","any","this","this.","it,","my","with","that.","here","just","that?","all","the","it","this.","any","that,","that.","something.","the","this","even","it.","it.","it.","it","this.","the","ToLower()","that","that","it","this","something","it.","is","some","the","with","the","relatively","it","that.","it","in","this.","the","it","originally","that,","that.","more","the","the","things.","this.","something","this","and","anagram","extra","this","it","the","this:","the","a","much","one","it,","the","it","any",":),","that","anything.","the","things","everything","my","something,","it","is","a","the","this","some","the","the","all","this.","as","more","as","thousands","is","everything","it","number","the","it.","a","for","a","\u003ccode\u003ereturn","as","hexadecimal","\u003ccode\u003e!word.Equals(this.incomingWord,","the","so.","it","this.","millions","if","the","comparisons","extra....","this","this,","that,","pretty","with","it",";)","with","the","that","it.","a","with","that,","about","this","this","the","this,","this","operations","with","this","all","the","and","this","this.","it.","originally","the","that","something","this","that.","so","the","this...","the","the","it","that)","things.","this!","it","this","it","it","it","about","with","the"]},{"Key":"do this,","Fragments":["but","but","but","but"]},{"Key":"this, but","Fragments":["ultimately","it","it","having","given","aren't","I","the","after","in","I","what","there"]},{"Key":"but ultimately","Fragments":["decided"]},{"Key":"ultimately decided","Fragments":["against"]},{"Key":"decided against","Fragments":["it","it"]},{"Key":"against it","Fragments":["as","for"]},{"Key":"it as","Fragments":["many","compact","`isLeap`","long","a","it","simple","sort","a","well,","a","long","they","a","a","an","a","necessary","a","it","is","a"]},{"Key":"as many","Fragments":["of","of","times","items","as"]},{"Key":"many of","Fragments":["my","the"]},{"Key":"of my","Fragments":["coworkers","code,","method.","studies","work","code,","code,","coding","first","weaker","implementation.","if","own","tests","head)","white","exercises","comfort","C#","C#"]},{"Key":"my coworkers","Fragments":["aren't"]},{"Key":"coworkers aren't","Fragments":["familiar"]},{"Key":"aren't familiar","Fragments":["with"]},{"Key":"familiar with","Fragments":["it","how","c#.","Linq,","Xamarin","the","the","the","the"]},{"Key":"with it","Fragments":["and","removed","as","in",":)","due","if","unfortunately.","here","-","as","on","please.","as"]},{"Key":"it and","Fragments":["coding","have","b)","still","am","check","resubmit.","after","unlikely","only","extracted","only","only","rejected","storing","just","not","see","try","the","then","navigate","so","getting","see","that'd"]},{"Key":"and coding","Fragments":["in","that."]},{"Key":"coding in","Fragments":["a"]},{"Key":"in a","Fragments":["style","measurable","project.","few","few","large","private","separate","real","stack","bit.","comment.","return","debugger.","string...","single","few","question","year","multithreaded","class","production","function","small","local","variable","method","way","DNA","scope","function","project,","single","nitpick...","month","single","method","single","single","system","IDE","return","single","return.","larger","routine","real-life","method:","class","more","variable","delegates.","better","real-world","defined","readable","list...","dictionary.","dictionary","loop,","readonly","property","public","list.","variable","lot","week.","ReadOnlyDictionary","very","loop","list","variable","list,","new","real","minute.","null","collection.","while","valid","few","SortedDictionary\u003c\u003e,","complicated","single","TDD","TDD","single","particular","method","method?","different","single","method","return","pear","Pear","larger","larger","lot","local","more","loop","form","few","place","functional","functional","functional","second.","named","one-liner,","long","method,","previous","single","controlled","similar","32-bit","hexadecimal","decimal","data","different","second","loop.","job","helper","dictionary","couple","DateTime","separate","shared","particular","small","loop?","single","Service.","method","particular","non","little","single","while.","Pear","specific","constructor","strongly","mixed","way","valid","task","field.","single","separate","more","main","foreach","second","loop).","foreach","readable"]},{"Key":"a style","Fragments":["your","thing","preference","and","preference,","I","thing,"]},{"Key":"style your","Fragments":["workspace"]},{"Key":"your workspace","Fragments":["is"]},{"Key":"workspace is","Fragments":["unfamiliar"]},{"Key":"is unfamiliar","Fragments":["with","with"]},{"Key":"unfamiliar with","Fragments":["is","it:","some"]},{"Key":"with is","Fragments":["a","line","the"]},{"Key":"a big","Fragments":["no-no.","deal,","deal","item","if/else","deal","fan","list","nitpick.","switch","impact","difference.","deal","fan","negative","deal.","issue,"]},{"Key":" If","Fragments":["your","you","the","you","the","I","you","you","you're","I'm","I","I","you","you're","you","there","there","you","you","you","I","there","I","the","you","it","you","youa","you","you","works","you","you","you","there","there","the","performance","performance","you","the","you","you","that","you","you","I","your","you","I","you","you","anyone","you","you'd","you'd","you'd","have","there","you","this","you're","we","you","it","you","anyone","you","`first`","this","you","I","you","you","the","one","using","I","I","true","i","I","that","this","the","the","you","you're","minutesPerDay","so,","you","using","your","you","I","being"]},{"Key":"If your","Fragments":["workplace","project","methods","plaintext","only"]},{"Key":"your workplace","Fragments":["is"]},{"Key":"workplace is","Fragments":["ok"]},{"Key":"is ok","Fragments":["with","to","-"]},{"Key":"ok with","Fragments":["it,","that"]},{"Key":"with it,","Fragments":["this","I","then","invalidating","but","but"]},{"Key":"it, this","Fragments":["is","will"]},{"Key":"is an","Fragments":["awesome","unnecessary","int","excuse!","issue","argument","example","index,","alias","exclusive","exclusive","int","exclusive","acronym.","instance","alias","indication","improvement","embedded","\"int\"","invalid","equilateral","optimization","invalid","awful","awesome","expensive","odd","advantage","indication","overload","older","interesting","expensive","exception","expensive","integer","error.","error.","impressively","implementation","anagram","obvious"]},{"Key":"an awesome","Fragments":["solution.","idea."]},{"Key":"awesome solution.","Fragments":[":-)"]},{"Key":" Looks","Fragments":["pretty","pretty","good","good","good","very","good","great,","good.","good.","great!","good.","good.","great.","good.","good","good","like","like","good.","good,","okay.","great","good!","good.","okay.","great!","great.","good.","pretty","great,","good,","solid!","great!","good,","okay.","good.","good,","good,","good","good.","pretty","good,","good,","good,","good,","good,","good,","good,","good,","good,","good,","good,","good,","good","good,","good!","good.","good.","good,","good.","good.","good.","good.","great!","good.","good,","great!","like","good.","good,","pretty","good.","good","good,","good,","good,","good,","good,","pretty","pretty","great!","good","good","like","great.","good.","good,","great.","good.","good,","weird","good,"]},{"Key":"Looks pretty","Fragments":["good.","good.","good.","good.","good.","good","good!"]},{"Key":"pretty good.","Fragments":["I","Interesting","I","It","I","AreaCode","However"]},{"Key":"good. I","Fragments":["like","liked","won't","like","have","don't","like","would","think","like"]},{"Key":"I like","Fragments":["how","how","it","the","the","your","your","the","the","the","the","your","this","the","your","your","the","well","your","the","these","how","it!","```ReadOnlyDictionary```","this","how","making","the","it!","the","the","that","the","how","it.","it","how","that","how","the","how","how","where","your","for","the","single","the","if","to","your","to","that","the","the","that","simple,","your","keeping","having","the","my","the","it!","Regex","the","what","your","your","the","your","it.","the","the","to","the","the","your","how","the","this.","to","that","the","the","the","to","the","this","that","how","the","the","the","the","your","this.","the","the","the","it.","your","this","better...","injecting","it.","how","this","this","some","the","to","it.","to","the","the","the","to","it","your","the","to","the","the","this","it","your","how","to","the","the","a","to","your","the","it","the","having","how","the","your","combining","loops.","how","the","mine,","implementing","the","best","wrapping","comparing","this.","the","how","way","parts","this","the","the","it.","it!","to","the","the","your","this","your","breaking","it","that","the","the","this","conditionals","the","especially","the","this","that","your","the","the","the","to","to","the","storing","the","how","it.","how","it.","your","it.","the","your","your","how","LinqBit","how","the","to"]},{"Key":"like how","Fragments":["you've","minimal","this","they","you","you","you","you","readable","throwing","few","condensed","you","you","OrderBy","you","you","it","you","readable","short","all","you","you","```Action\u003cT\u003e```","you","you","you","you","succinct"]},{"Key":"how you've","Fragments":["put"]},{"Key":"you've put","Fragments":["the"]},{"Key":"put the","Fragments":["most","calculations","BCE","statement","unit","old[key]","statement","400","same","(year%4","conditionals","candidates","\"%4\"","conditionals","if","'and'","results","output","values","new","original","Main","toupper","class's"]},{"Key":"the most","Fragments":["likely","concise","efficient","impactful","simple","succinct","succinct","strict/exceptions","readable","straightforward","interesting","efficient","common","logical","common","straightforward","compact","sensible","sensible","straight","recent","\u003cem\u003e'modern'\u003c/em\u003e","expensive","likely","part","straight-forward","readable,","of","straightforward","simple","specific","efficient","optimized","important"]},{"Key":"most likely","Fragments":["case","but","failing","delete"]},{"Key":"likely case","Fragments":["first."]},{"Key":"case first.","Fragments":["The"]},{"Key":"first. The","Fragments":["last","Sieve"]},{"Key":"last return","Fragments":["true"]},{"Key":"return true","Fragments":["should","doesn't","for","than","for","or","else","or","and","assuming","would","for","for","regardless","and"]},{"Key":"true should","Fragments":["probably"]},{"Key":"should probably","Fragments":["be","add","be","be","be","delete","be","return","capture","be","switch","be","just","use","use","comment","just","just","be","be","not","get","try","cover","get"]},{"Key":"probably be","Fragments":["moved","a","a","removed","called","on","wise","\"int","int","consolidated","improved,","better","useful","in","more","correct,","more","cleaner","clearer.","moved","removed","similar"]},{"Key":"be moved","Fragments":["inside","into","into","into","into","to"]},{"Key":"moved inside","Fragments":["the"]},{"Key":"inside the","Fragments":["else","if","foreach","if","'if'","constructor.","inner","parenthesis,","check.","constructor.","loop","GenerateName"]},{"Key":"the else","Fragments":["block.","being","contains","statements","clause,","clauses.","clause","clauses.","clause","clauses","statements","clause.","clause.","if","clause","keyword.","word","part","is","statement","part","statements","and","ifs","at","ifs","given"]},{"Key":"else block.","Fragments":["It"]},{"Key":"block. It","Fragments":["works","is"]},{"Key":"It works","Fragments":["the","the","just","until","on"]},{"Key":"works the","Fragments":["same","way","way","way"]},{"Key":"the same","Fragments":["in","thing!","time","structure","thing","clarity?","as","result.","direction","class.","line?","line.","file","line","place.","if.","form.","where","calculation.","veins,","idea,","class","as","it","in","way","time.","namespace.","solution.","time.","line","stopwatch","byte","mistake","if,","line","thing,","as","line","line,","exercise","as","thing","pattern","pattern","thing","line.","block,","characters?","namespace","as","pattern.","check?","line.","result.","decision","set","line","key","as","variable.","logic","lists","approach","thing","way.","routine","mistake","thing","expression","line","source,","in","thing.","as","line.","length","key","characters","line?","purpose.","effect.","we","time.","thing","length","length","result.","sorted","way","as","result)","functionality.","thing,","length","length.","as","character","as","thing","grade","order","problem.","approach","as","work","order","as","as","as","length","as","concept.","as","method","time","character","work","thing","types","way","reasons","thing","pattern","day","thing","reason","kind","optimized","result,","writing:","length,","word","in","exercise.","conclusion.","line,","letter","string.","thing.","inline","pointers","shortcut","thought","numbering","approach","thing","type","type","type","type","type","when","time","new","\"level\"","result","result","variable","but","as","problem","methods","thing.","pitfalls","technique","logic","case.","name,","thing","exact","way.","condition","time","outcome.","as","line","skill","resizings","number","information","level","sorted"]},{"Key":"same in","Fragments":["either","performance.","Windows,","alphabetical"]},{"Key":"in either","Fragments":["case,","constructor.","writing","Keep"]},{"Key":"either case,","Fragments":["but"]},{"Key":"case, but","Fragments":["makes","it","if","in","learning"]},{"Key":"but makes","Fragments":["more"]},{"Key":"makes more","Fragments":["logical","sense.","sense","sense"]},{"Key":"more logical","Fragments":["sense"]},{"Key":"logical sense","Fragments":["that"]},{"Key":"sense that","Fragments":["way."]},{"Key":" Habit","Fragments":["is"]},{"Key":"Habit is","Fragments":["the"]},{"Key":"is the","Fragments":["only","simplest","best","kind","IsLeap","object","naming","two","only","language","rationale","purpose","fact","same!","most","year","first","customer","best","issue","simplest","same","quick","point...!","only","same","same","testing","`divByFour`","difference","distribution","case,","rule","equivalent)","code","most","```String.Trim()```","only","first","opaqueness","sorting,","correct","same","conventional","case","the","internal,","only","same","one","only","first","perfect","c#","\"default\"","kind","corner","field","best","built-in","final","CleanString","same","must","same","first","first","best","fad","case","best","standard","key?","case","best","point","same","c.ToString()","typical","key","value.","same","same","standard","Dictionary","more","same","basic","separation","reasoning","if(conversationPart.Is????)","advantage","*correct*","way","first","exact","test","one-line","'brute","same","updated","natural","Null","best","case","end","method","reason","functional","use","best","c#","else","correct","whole","key","key,","code","correct","challenge","First","way","overload","point","begin","begin","running","most","same","\"arrow\"","best","only","same","most","case","problem"]},{"Key":"the only","Fragments":["reason.","one","one","one","one","way","version","way","way","hurdle","method","sensible","difference","way","way","criticism","item","other","way","optimization","one","one","way","way","test","kind"]},{"Key":"only reason.","Fragments":["That's"]},{"Key":"reason. That's","Fragments":["a"]},{"Key":"That's a","Fragments":["great","good","really","good","much","really","shame","thorny"]},{"Key":"a great","Fragments":["point","structure.","library!","tool","way","way","movie.\"","assumption","addition","suggestion","idea"]},{"Key":"great point","Fragments":["-"]},{"Key":"point -","Fragments":["thanks!","especially"]},{"Key":"you are","Fragments":["going","going","dividing","correct.","not","trying","doing","formatting","performing","asking","looking","simply","going","allowed","gonna","referring","about","doing","breaking","going","doing","using","going","just","using","trying","returning","unfamiliar","old-school).","doing","referring","right,","comparing","only","preparing","returning","sending","adding","nesting","supposed","using","looping","not","better","quite","right.","trying","interested.","not","evaluating,","relying","calculating","saying","memory","cycle","right!","adding","looping","parsing","using","making","the","looping","double","right","processing","interested","only","converting","right","also","doing","essentially","creating","creating","expecting","new","scanning","trying","looking","given","then","gaining.","doing","doing.","calculating","just","working","in","using","currently","going","having","thinking","enumerating","coming","targeting.","making","correct","determining","using","ignoring","all","repeatedly","scanning","not","generating","not","checking","doing,","trusting","figuring","doing","not","doing","really","making","kind","trying","assuming","assuming","assuming","assuming","assuming","writing","building","checking","doing","correct.","doing.","using","using","quite","returning","supposed","counting","done!","contributing","here","not","generating","right"]},{"Key":"are going","Fragments":["to","down","to","to","with","to","to","'i'"]},{"Key":"going to","Fragments":["you","stick","maintain","be","do.","take","do","go","know","keep","add","fix","change","execute","pass","be","be","crash","work","execute","use","say","resubmit","disagree","comment","get","think","return","let","matter","have","stand","be","read/use","run","do","matter,","put","push","worry","be","do","get","be","lie","steal","leave","worry","require","be","resubmit.","pass","provide","remove","do","have","have","get","agree","take","break","expand","look","attempt","write","steal","have","have","```Trim()```"]},{"Key":"to you","Fragments":["indexing","or","in","to","could","in"]},{"Key":"you indexing","Fragments":["then"]},{"Key":"indexing then","Fragments":["use"]},{"Key":"then use","Fragments":["indexing","the","the","it","Remove's","that"]},{"Key":"use indexing","Fragments":["(and","consistently."]},{"Key":"indexing (and","Fragments":["this"]},{"Key":"(and this","Fragments":["problem"]},{"Key":"this problem","Fragments":["most","is","is","is","is","as","last","for","is","is","is","is","is",":smile:","is","where"]},{"Key":"problem most","Fragments":["certainly"]},{"Key":"most certainly","Fragments":["does)."]},{"Key":"certainly does).","Fragments":["I"]},{"Key":"does). I","Fragments":["think"]},{"Key":"I think","Fragments":["that","you","you","I'll","this","the","it's","that","I'm","you","throwing","there","the","it","of","of","the","I'd","it","this","that","there","you","that","IsYelling","that","the","using","doing","it","that","that","it's","it'd","new","this","this","there","I","I","I","the","you","putting","my","the","I'm","your","your","(year","that's","people","this","it","that's","that","I","i","about","it","this","I","it's","\"we\"","LINQ","it's","I","you","you","that","the","it","this","you","of","the","it","it","that","you","that","the","it's","this","there","I'll","this","it","your","this","they're","I","the","you","you","though","it","of","this","this","I","you","I","negative","I","this","I've","the","I","you","my","it","this","the","your","that","what","this","the","the","you","a","the","a","it","the","this","increasing","this","I","it","my","you","I","this","the","this","I","I","the","this","that's","this","it","it's","it","the","you","this","your","it's","it","there","you","is","it","this","it's","it","I","that's","the","in","I'm","it","the","it's","is","the","that's","committing","what","the","I","it","it","this","is","this","my","`IsMultiple`","I","\u003cb\u003estring.IsNullOrWhitespace()\u003c/b\u003e","that","it","the","it","you","about","it","I'm","that's","I","the","that","the","you","it's","it","that","you","it","this","it","you","that","is","pre-allocating","you","that","this","they","this","there","it","it","it","it","that","I","you","the","that","it","its","it's","it's","it","the","the","there","the","this","it's","`Enumerable.Where`","it","`return","this","that","you","instead","the","they","a","a","generally","this","the","makes","that","I","it","the","single","you're","you","addWords","this","@mazie","that","creating","it","enumeration","it","it's","it","you've","you","what","this","makes","the","it","this","that","you","I'll","that","LunhTransform","I","Readme","Readme","Readme","it","the","this","the","there","this","you're","I","Readme","Readme","this.h","Readme","Readme","String.Concat()","Readme","Readme","this","using","using","you'll","using","using","it","it","this","this","its","the","this","the","this","this","it","you","I","-","the","it's","this","what","it","you'll","`year.NotDivisibleBy(100)`"]},{"Key":"think that","Fragments":["composite.Contains()","the","Hundred","having","is","unless","sacrifices","for","would","this","if","reads","in","checking","the","you","was","it'd","we","having","is","violates","would","if","enumerable.Func1().Func2()","using","is","would","you","works","it","is","I'll","\"int\""]},{"Key":"that composite.Contains()","Fragments":["is"]},{"Key":"composite.Contains() is","Fragments":["an"]},{"Key":"an unnecessary","Fragments":["cost","additional","variable","if","test"]},{"Key":"unnecessary cost","Fragments":["(with"]},{"Key":"cost (with","Fragments":["all"]},{"Key":"(with all","Fragments":["those"]},{"Key":"all those","Fragments":["adds","int.Parse","return","into","other","checks","variable"]},{"Key":"those adds","Fragments":["generating"]},{"Key":"adds generating","Fragments":["array"]},{"Key":"generating array","Fragments":["resizes"]},{"Key":"array resizes","Fragments":["as"]},{"Key":"resizes as","Fragments":["well)."]},{"Key":"as well).","Fragments":["The"]},{"Key":"well). The","Fragments":["problem"]},{"Key":"The problem","Fragments":["is","with","statement","with","with","is","with","wasn't","was","with"]},{"Key":"problem is","Fragments":["creating","to","to","to","easy,","that","that","the","to","to","to","to","tailor"]},{"Key":"is creating","Fragments":["an"]},{"Key":"creating an","Fragments":["list/array","instance","unnecessary","empty","anonymous","exception."]},{"Key":"an list/array","Fragments":["the"]},{"Key":"list/array the","Fragments":["way"]},{"Key":"the way","Fragments":["it","you","I","I","just","that","this","you",".NET","you","you've","you","my","\u0026\u0026","it","he","with","I","I","it","the","you","to","I","that","I","we","we","you","you","you","I","a","you","you","you","home","up","it's","it's","there","the","your","I","you","to","we","I","you"]},{"Key":"way it","Fragments":["is","will","is","is,","is","is","is","is"]},{"Key":"is done","Fragments":["here","the","to"]},{"Key":"done here","Fragments":["is,","in","but"]},{"Key":"here is,","Fragments":["whilst"]},{"Key":"is, whilst","Fragments":["more"]},{"Key":"whilst more","Fragments":["spacing"]},{"Key":"more spacing","Fragments":["saving"]},{"Key":"spacing saving","Fragments":["than"]},{"Key":"saving than","Fragments":["producing"]},{"Key":"than producing","Fragments":["all"]},{"Key":"producing all","Fragments":["the"]},{"Key":"all the","Fragments":["composites,","cases","logic.","calculations","time","other","checks","Console","logic","`else`'s","tests.","tests","different","logic","tests,","anagram","correct","logic","code","special","tests,","conditions","maths","calculations","tests","calculations","other","terms","calculations","time","class","bad","work","edge","logic","checks","methods","students;","students","data","scans","tests,","sums","schedulers?","calculations","console","using","thinking","nulls","unit","characters","other","other","code","uses","words","exercises","exercises","individual","different","multiples","math","work,","way,","prime","letters","letters","letters","code","bool","chosen","work","other","work","work","work","work","time","other","things","tests.","answers","logic","even","(1)characters","time","tests","if","primes","string","big","multiples","multiples","counts","smaller","tests.","tests,","even","prime","time,","remaining","rest","prime","duplication?","test","primes","numbers","bits","way","primes","elements.```","comments,","indenting","ingredients?","tests","characters","pointers","existing","trouble","comments","interactions","leap","ToCharArray()s","submissions","necessary","nesting","console","feedback!","conditions.","calculation","advise,","key","items","other","ingredients.","same","tests.","help","number/special","time.","numbers","names","else","verses","for","punctuation","comments","tests?","tests","reasonable"]},{"Key":"the composites,","Fragments":["also"]},{"Key":"composites, also","Fragments":["makes"]},{"Key":"also makes","Fragments":["it","it","change","it"]},{"Key":"makes it","Fragments":["impossible","very","more","declarative","easyer","a","difficult","more","less","a","more","more","very","harder","hard","more","easier","less","more","faster","easyer","a","a","a","a","less","possible","harder","hardly","the","tougher","more","harder","a","difficult","much","all","easier","unable","more","easier","difficult","easier","more","an","easier","slightly","very","makes","harder","easier","harder","easier","clear","read","appears","easier","less","clearer"]},{"Key":"it impossible","Fragments":["to"]},{"Key":"impossible to","Fragments":["use","test"]},{"Key":"to use","Fragments":["indexing","the","this","a","flagged","flagged","flagged","linq","DateTime.IsLeapYear","it","a","unit","\"XML","the","ReadOnlyCollection","the","{}","NUnit","Visual","Visual","the","the","a","more","brackets","a","Linq","\"var\"","VS","with",".ElementAt()","var","the","the","an","a","IsSilence","else-if.","the","nice,","letter.ToLowerInvariant(),","Math.Min","a","the","these","`Math.Min(inA.Length,","string.IsNullOrWhiteSpace(text)","it.","\"else\"","it","constants","the","it.","IsNullOrWhiteSpace(str)","mutation","`var`?","it","generators.","a","a","some","a","lists","it!","linq","an","\"ToList\"","functionality","a","the","a","variables,","IDictionary\u003c\u003e","the","a","the","CollectionAssert.AreEqual,","`short`?","'ii'","Regex.Match","test","test","Regex","your","a","if/else","the","toBob.EndsWith()","the","variables","nested","the","TakeWhile","a","a","a","a","a","the","extension","1,000,000","a","a","it","here.","\u003ccode\u003eint.Parse(c.ToString())\u003c/code\u003e","\"new","Math.Pow().","LINQ","it.","\"var\"","the","different","the","the","\u003ccode\u003e1E9\u003c/code\u003e","NucleotideCounts.ContainsKey(nucleotide),","a","a","the","any","some","a","Array.Sort","it","it,","a","a","them","the","Where!","an","the","`var`","them","extension","it.","a","recursion","NUnit.","it","a","the","that","a","the","the","the","`Enumerable.Range()`.","`Where\u003cT\u003e`,","a","your","HN","flagged","flagged","flagged","flagged","a","them","the","binary","for","double","```.Equals```","```==```","one","Linq.","Linq.","Linq.","Linq.","Regex","TrimStart","recursivity","split","`dynamic`,","Wikipedia","regex,","a","String.Join(\"\",...)),","a","StringBuilder","Aggregate","generics","LINQ"]},{"Key":" After","Fragments":["looking","reviewing","looking","all","see","some","seeing","looking","reading","lots","I","being","much","thinking","I","doing","receiving","reviewing","looking","viewing"]},{"Key":"After looking","Fragments":["at","at","at","at","back","through"]},{"Key":"looking at","Fragments":["some","a","your","others'","the","code","other","this","other","other","other","the","some","is","it","the","when","this","it","this","the","but","the","the","your","this.","your","the","some","it"]},{"Key":"at some","Fragments":["of","nitpicks","of","point).","point,","point","point","of","other","other","of","of","point."]},{"Key":"some of","Fragments":["the","the","the","the","the","your","the","the","the","the","its","these","the","those","the","the","my","the","the","the","the","the","the","the","this,","the","your","the","the","the","the","the","the","the","its","the","the","the"]},{"Key":"of the","Fragments":["other","things","`\u0026\u0026`","select.","type","statements,","'Year'","century","code","form","rest","ToList/Foreach,","else","`isDivisible`","rules","method.","Ternary","application.","rules.","Message","thing","other","function.","code","\"else\"","basic","opinion","Year","class","comments","magic","null","method.","\"database\"","tests","modulus","method","method","function","loop.","duplication.","one","`using`","basic","program.","box.","extension","more","function.","solution.","other","using","form","left/right","OR.","comparisons","unit","check.","if","classes","classes","year?","ToList()","box.","way","evaluation","else","combining","amount","inline","isLeapYear","tests.","exercise.","logic.","LeapTest.cs","Tests","code","form","statement.The","Year","definition","Hamming","if/else","if","boolean","code.","method","function","string","more","boolean","time,","Utility","code,","time,","form","expression.","if","if","check,","tests","assignment.","master","clunky","nesting.","method.","function","anonymous","query,","call","code","functions.","same","outer","`yr","Any","method,","standard","if-statements","usage.","standard","directory,","website","list","type","two","\u0026\u0026","check.","tests","exercise...","other","Math.Min","ternary","code","process","variables","enumerable.","Zip","Sum","Ternary","var","process","switch","IList\u003cstring\u003e?","remaining","method,","characters,","provided","variable,","block","condition","collections","class.","actual","Framework","regex","`NucleotideCounts`","IsLeap","fact","code.","static","IList\u003c\u003e","strings","dictionary","dictionary.","given","KeyValuePair\u003c\u003e","apostrophes.","xercises","most","class","if","function.","above","if-then-else","double","AND","String.Any()","repository","lists.","enumerations","tests?","if","three","various","random","word)","else","program.","xml-documentation","conditions","character","exercise.","verses","statement.","4","algorithm.","simple","tests,","code","first","API","tests,","parens","if","fact","Unit","expressions","dictionary","input","abundance","tests,","silliest","free","algorithm","givenNumbers.","test","code.","entries","most","erroneous","string","\"if\"","string","mental","function,","entire","work","heavy","idea","requirements","tests.","readme.","idea","requirements","tests.","readme.","phrase","beginning","same","string.","nucleotides)","linq","\"every","method,","foreach","conditional","other","things","2","calendar","anonymous","selectMany.","same","\u003cb\u003eProleptic","Gregorian","dna","simpler","challenges","dictionary.","month","entire","name","Count","HashSet","exercise.","names,","empty","benefits","file","first","week.","week.","logic","strings","general","need","routine.","shape","verses","last","Roster","week","`DayOfWeek`",".NET","IsLeap","loops","original","Dictionary.","local","GroupBy","second","string,","time","DNA","code","work","sides","sides","code","axis","work","exclamation","benefits","score.","while","sign","month","last","month","month","trade-offs","three","code","next","site.","(proposed)","other","code","various","exercises,","ideas","practice/habit","original","exercise","month.","month,","robot","fun","next","Lambda","lambda","switch,",".ForEach()","month.","two","'On...'","IsValid","dictionary","syntax,","number","if","input","five","queue,","most","same","Trim()","possible","week.","numbers","values,","tests","items","enumeration,","items","tests","`_privatefield`","month.","Math.Pow","entries.","examples.","enumeration","week","week).","primes","month.","framework.","week","nested","checks","code","ternary","inner","extension","characters","already","loop.","number","week.","specified","original","multiplication","prime","factors.","output.","submission.","dictionary","box\"","large","condition","anonymous","code","three","syntax,","scope","unit","letter,","class","exercises","method","entered","page","nesting.","if","tenets","songLyrics","IF","if.","question","code.","lambda","sentence","tally","nucleotide","custom","tests","logic","properties","special","condition","time","constants","inside","arguments","names","variable","solution","advice","three","input","keys","lambda","results","results","exercise...","original","Response","results,","supporting","`StringBuilder`","algorithm","project.","ternary","class.","way","dictionaries,","test","if","loop.","later","answers,","ValidNucleotides","correctness","DNA","method,","readability","string.","input","other","types","full","predicate","Where","code","method.","words","source","exercises","`IEnumerable`.","DLL.","points","exercises","Scrabble","regex","other","class.","decimal","numbers","main","variables.","square","square","square.","source!","other","regex","commands","other","standard","List","\u0026\u0026","\u0026\u0026.","boolean","Linq","underscores","exercise.","point","other,","other","Readme","list","size,","Readme","Readme","Readme","test","class.","line","line","filter","query","Regex","comments","Regex","tests","constructor,","Match()","code.","guard","punctuation","for","for","other","algorithm.","items...","Aggregate","loop.","exercise","few","cahllenge","word.","beholder.","isLeap","variable","method","syntax","intervening","exercises","Readme.mds","use","cases","Hamming","function","BCL.","years","few","object.","private","logic","characters","strings"]},{"Key":"the other","Fragments":["solutions,","two","assignments","calculations","comments,","tests.","leap","in","direction.","two","style","two","on","%","two","way","submissions","types","hand,","strand","iterations,","tests,","hand,","things","letters","two","submissions","leap","way","way","letters.","possibilities.","one","problems","exercises.","property","submissions,","test","submission","should","way","not.","constants,","hand,","hand","solutions.","Linq","string.","options.","and","tests","and","hand,","code","use","requirement","I","hand,","two","methods.","(decent)","trivial","submissions","examples","solutions","with","way","methods","way","is","tests","tests","options","method"]},{"Key":"other solutions,","Fragments":["I"]},{"Key":"solutions, I","Fragments":["realized","realize"]},{"Key":"I realized","Fragments":["I","I","that","how","I'm","that","the","I","I","it","that","that","I","that","how","this"]},{"Key":"realized I","Fragments":["was","was","messed","could","should","wasn't","made","had"]},{"Key":"I was","Fragments":["making","thinking","watching","doing","over","thinking","only","actually","unsure","doing","running","considering","not","not","doing","trying","just","thinking","stuck","going","thinking","able","thinking","starting","trying","a","only","wondering","just","wrong","able","bummed","wondering","`.ToList()`ing","converting","just","thinking","not","going","able","reluctant","able","looking","adding","no","going","already","told","able","over","counting","more","doing","returning","under","supposed","suppose","pretty","cycling","getting","thinking","pretty","just","considering","going","going","hoping","trying","trying","thinking","thinking.","thinking","doing","having","to","about","not","trying","thinking","looking","using","thinking:","using","too","running","thinking","going","able","incorrect","having","returning","tempted","worried","curious","fairly","trying","able","missing.","trying","initially","not","wrong.","going","just","wondering","impressed.","very","just","considering","using","just","misled","just"]},{"Key":"was making","Fragments":["it"]},{"Key":"making it","Fragments":["too","private","difficult","a","easier","better","too","type","more"]},{"Key":"it too","Fragments":["complicated.","soon","negatively,","specific"]},{"Key":" I","Fragments":["did","believe","was","believe","fine","too,","like","chose","like","wanted","like","doubt","will","am","am","would","used","just","like","just","was","should","love","started","am","simply","haven't","like","try","like","don't","would","find","think","thought","really","like","personally","am","think","removed","know!","removed","like","almost","think","agree","disagree","really","suspect","think","would","would","reversed","like","like","would","think","need","believe","think","haven't","like","decided","find","could","think","struggled","think","like","first","tried","also","have","think","think","agree","do","try","liked","think","agree","definitely","don't","personally","did","don't","like","see","kind","don't","did","could","welcome","personally","would","can't","learned","don't","agree","don't","personally","think","have","think","really","think","discovered","do","like","don't","would","would","am","like","had","feel","had","really","liked","love","used","think","personally","personally","also","did","would","personally","am","take","think","could","think","LOVE","think","agree,","made","also","should","like","haven't","think","thought","would","like","prefer","tend","used","have","like","have","personally","started","would","put","will","could","could","also","also","think","read","thought","don't","am","wonder","would","would","almost","don't","think","expanded","totally","like","have","went","like","believe","like","love","really","personally","think","try","saw","agree,","was","prefer","like","was","try","highly","agree","thought","personally","dislike","thought","just","would","got","also","suppose","found","have","cannot","am","realized","would","broke","personally","cleaned","personally","didn't","have","wasn't","ran","also","made","looked","guess","would","ended","think","went","like","am","feel","wasn't","think","would","definitely","try","like","understand","added","don't","don't","like","personally","did","like","just","ditched","would","like","also","included","like","chose","could","do","like","decided","don't","like","like","like","like","liked","haven't","like","think","didn't","like","personally","personally","minimized","really","like","wish","would","left","would","forgot","believe","really","also","didn't","was","have","may","agree","like","do","tried","also","agree","also","think","just","find","used","particularly","also","tried","saw","like","took","will","really","see","also","have","know","sure","thought","felt","prefer","agree,","like","like","changed","would","might","like","like","think","always","would","object-ified","always","decided","think","went","noticed","tried","think","know","forgot","had","like","really","tried","understand","saw","like","think","struggled","added","try","like","was","added","agree","also","originally","like","do","like","totally","see","wanted","am","chose","would","think","tend","love","don't","feel","feel","would","think","assume","found","know","like","like","was","like","often","like","started","like","don't","realize","agree","made","suppose","think","think","agree","originally","tried","don't","see","dunno","disagree","had","would","have","like","haven't","would","think","like","feel","guess","missed","feel","have","agree","am","decided","see","decided","added","agree","would","would","would","would","do","would","chose","don't","think","like","don't","noticed","had","am","like","am","don't","disagree","grouped","originally","like","like","agree","have","find","removed","can","checked","think","like","actually","believe","see","don't","know","would","feel","don't","still","wrote","really","agree","like","really","agree","really","didn't","would","could","tried","like","think","tried","like","would","would","tried","definitely","like","considered","have","made","have","made","agree.","agree","think","have","like","did","like","noticed","didn't","did","would","don't","chose","think","don't","only","like","can","like","am","initially","also","like","reviewed","like","realize","don't","like","didn't","used","really","like","like","thought","have","have","probably","know","would","like","thought","generally","like","see","first","apologize","attempted","quite","really","wonder,","agree","wasn't","agree","totally","like","appreciate","will","didn't","went","created","had","would","have","find","don't","don't","think","like","disagree.","didn't","think","took","didn't","agree","assumed","don't","would","agree","wonder","think","checked","skipped","struggled","was","was","agree","would","added","think","like","really","implemented","didn't","see","think","would","see","will","can","can","have","agree","focused","used","agree","generally","can't","think","thought","kind","have","think","suspect","wouldn't","like","have","decided","think","guess","saw","was","agree","like","didn't","like","really","don't","think","like","had","haven't","would","think","feel","don't","couldn't","had","made","used","wonder,","think","really","liked","did","thought","agree","could","tried","could","tried","made","made","have","think","reduced","believe","decided","was","was","knocked","didn't","personally","would","think","missed","would","thought","can't","love","like","agree","don't","originally","like","think","can","guess","added","am","like","agree","do","can","did","have","used","agree","will","didn't","like","don't","wanted","wanted","think","decided","never","basically","probably","do","don't","think","looked","understand","am","am","like","feel","stumbled","was","added","took","feel","totally","tend","think","can't","also","changed","had","haven't","didn't","should","would","didn't","suggest","had","would","would","would","would","think","didn't","not","found","wrote","do","believe","would","like","like","like","guess","agree!","like","don't","don't","agree","am","think","think","recommend","agree","personally","don't","think","added","don't","actually","added","like","think","decided","realize","was","have","guess","guess","guess","do","thought","think","simplified","like","use","am","think","didn't","do","also","suspect","do","would","am","am","didn't","don't","considered","could","am","am","had","am","tried","added","chose","like","know","think","like","did","think","like","just","think","haven't","am","really","like","agree.","replaced","agree","am","was","like","like","did....","agree","let","forget","updated","like","like","generally","would","would","like","agree","like","like","like","was","initially","think","was","agree,","said","learned","seem","found","typically","combined","would","added","also","didn't","use","made","put","meant","started","completely","was","see","can","disagree.","did","learnt","setup","dropped","assure","have","like","think","wasn't","suppose","went","opted","suppose","did","agree,","think","think","am","think","removed","use","removed","think","know","encourage","wasn't","can't","got","liked","like","think","would","had","had","did","changed","considering","have","was","cached","have","split","think","think","agree","like","avoid","like","disagree.","know","think","think","think","think","think","think","think","think","also","don't","decided","noticed","agree","read","blatantly","like","just","had","saw","was","have","like","think","would","first","thought","did","tried","hope","think","did.","think","think","like","used","like","did","would","know,","believe","looked","know","did","will","think,","tried","like","would","see","could","know","don't","do","agree","would","would","agree","like","think","also","am"]},{"Key":"I did","Fragments":["the","not","it","not","actually","not","some","this","it","test,","have","forget","some","learn","see","99999999","it","add","the","not","something","end","it","consider","I","mine","and","not","as","-","this","not","this","this","not","this","not","this","look","mine","mine.","_not_","get","it.","mine,","learn","not","\u003ccode\u003ereturn","mine","opt","not","for","try","that","some","this","the","that","not","mine!","it","not","this","this","learn","this","it","something","that","the","a","retract","that","not"]},{"Key":"did the","Fragments":["same","assignment","same","mods","first","same","same","same"]},{"Key":"same thing!","Fragments":[":-D"]},{"Key":" (!oneHundCheck","Fragments":["\u0026\u0026"]},{"Key":"(!oneHundCheck \u0026\u0026","Fragments":["fourCheck"]},{"Key":"\u0026\u0026 fourCheck","Fragments":["||"]},{"Key":"fourCheck ||","Fragments":["fourHundCheck)"]},{"Key":" Your","Fragments":["order","use","else","`IsEvenlyDivisible`","IntelliSense","xml","comments","final","order","absolutely","condition","code","code","code","blocks","logic","solution","solution","final","code","code","code","`isAnagram`","code","tests","regular","algorithm","code","class","argument","Count","solution","public","first","problem","algorithm","algorithm","and","code","code","code","\"bit","unreachable","solution","code","method","code","check","comment","code","comments","check","IsInt()"]},{"Key":"Your order","Fragments":["of","of"]},{"Key":"order of","Fragments":["operations","commands,","the","the","operations","elements","the","0","operations","your","operations","conditions.","which","\"d\"","the","the","nanoseconds.","your","a","the","the","the","the","the","the","the","the","the","items","magnitude","operation,","operation","operation.","your","magnitude"]},{"Key":"of operations","Fragments":["here","if","a","here..","to"]},{"Key":"operations here","Fragments":["is"]},{"Key":"here is","Fragments":["pretty","that","the","what","to","great.","to","redundant.","the","on","a","what","I'm","probably","the","surely","that","is","often","that","inefficient","a"]},{"Key":"is pretty","Fragments":["confusing","personal","rare","dense!","clever.","easy","obvious,","useless.","cool","clear","different","clear","clear","standard","localized","long,","nitpicking.","clear:","dangerous.","easy","clear","dense."]},{"Key":"pretty confusing","Fragments":["to","to"]},{"Key":"confusing to","Fragments":["follow","me","read,","follow"]},{"Key":"to follow","Fragments":["at","what","with","than","when","the","a","at","it,","consistent","along.","for","this","the","the","what","with","CalculateAddends,"]},{"Key":"follow at","Fragments":["first","first."]},{"Key":"at first","Fragments":["glance.","I","glance,","sight","because","without","I","that","blush..."]},{"Key":" Also","Fragments":["you","the","the","I","I'm","`IsShouted`","I","only","added","added","you","as","I","what","your","where","doing","in","I","you've","you","you","you","I","there","\u003ccode\u003erandom.Next(0,","your","the","I","is","the","implemented","on","this","cleaned","a","some"]},{"Key":"Also you","Fragments":["can","used","can","could","can"]},{"Key":"you can","Fragments":["convert","get","make","get","do","do","eliminate","make","linq","get","replace","include","really","do","think","do","remember","just","bail","single-step","do","consider","do","get,","end","then","see","end","do","use","know","simplify","add","add","remove","get","simplify","make","do","get","use","just","just","already","end","remove.","use","always","eliminate","return","solve","use","easily","make","use","get","check","write","cut","just","split","keep","roll","add","see,","refactor","simplify","still","save","replace","get","manage","clear","just","turn","easily","avoid","avoid","prevent.","avoid","avoid","flatten","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","always","do","avoid","delete","just","use","avoid","avoid","do","check","see","find","replace","put","achieve","reference","quickly","put","use","use","just","just","return","just","use","chain","replace","replace","truly","avoid","store","us","store","just","drop","treat","save","simply","get","simply","then","do","avoid","see","call","be","simply","do","even","do","recalculate","pass","start","refer","replace","create","get","combine","omit","do","just","save","do","do","just","remove","make","simplify","do","exit","see","then","also","get","use","use","guess","leave","test","and,","technically","write","replace","rewrite","make","also","avoid","use","run","run","still","do","refactor","get","do","do","tidy","do","use","strip","actually","use","look","see","download","do","avoid","gain","avoid","see","do","get","do","do","move","do","simplify","make","find","convey","see"]},{"Key":"can convert","Fragments":["your","it"]},{"Key":"convert your","Fragments":["variable"]},{"Key":"your variable","Fragments":["creation","names.","naming"]},{"Key":"variable creation","Fragments":["and"]},{"Key":"creation and","Fragments":["if"]},{"Key":"and if","Fragments":["statements","true","that","removed","I","you","you","you've","it","it","it","not,","it","we","I","all"]},{"Key":"if statements","Fragments":["into","only","quite","makes","instead.","to","can","makes","and","even","from","are","because","and","in","is","can","to","into","down","are","directly,","are","under","together","with","if","for","as","is","all","but","would"]},{"Key":"statements into","Fragments":["one","a","methods","one","variable","one"]},{"Key":"into one","Fragments":["line:","function","function.","long","line","statement.","compound","compound","if/else.","statement.","or","boolean","line","simple","method","method","method"]},{"Key":" bool","Fragments":["fourCheck","fourHundCheck","oneHundCheck","isLeap;","isDivisibleBy4","isNotDivisibleBy100","isDivisibleBy400","isLeap","isLeapYear","isDivisibleBy4","isDivisibleBy100","isDivisbleBy400","personIsYelling","isDivisibleBy4","isDivisibleBy100","isDivisibleBy400","isYelling"]},{"Key":"bool fourCheck","Fragments":["="]},{"Key":"fourCheck =","Fragments":["input"]},{"Key":"= input","Fragments":["%","%","%"]},{"Key":"input %","Fragments":["4","400","100"]},{"Key":"% 4","Fragments":["==","==","==","==","==","==","==","==","==","!=","==","==","==","==","==","==","==","==","==","==","==","result","==","==","check","check.","=","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","=="]},{"Key":"4 ==","Fragments":["0;","0","0","0","0","0);","0","0","0);","0)","0","0","0.","0","0)```","0","0;","0","0`","0","0","0","0","0);\u003c/code\u003e,","0;\u003c/code\u003e,","0;","0)\u003c/code\u003e.","0)","0","0","0`.","0","0","0","0","0)","0","0;","0)","0;","0;","0","0","0","0","0)","0);","0","0","0","0)","0\u003c/code\u003e.","0)))\"","0)","0","0`","0;","0","0`","0","0.","0","0);","0"]},{"Key":"bool fourHundCheck","Fragments":["="]},{"Key":"fourHundCheck =","Fragments":["input"]},{"Key":"% 400","Fragments":["==","only","only","==","==","==","==","==","should","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","==","=","==","==","==","==","==","==","==","==","==","==","==","==","=","==","==","==","==","==","==","!=","==","==","==","==","==","==","==","==","==","==","==","==","=="]},{"Key":"400 ==","Fragments":["0;","0;\u003c/code\u003e","0)","0);","0);","0","0);","0","0)","0```","0","0));","0;","0","0`","0.","0);","0`","0`","0`","0","0;\"","0)","0,","0","0","0","0","0","0);`","0));\u003c/code\u003e","0))`","0));","0)","0;","0","0)","0)","0);","0","0);","0));","0)","0)","0)","0);","0`","0","0)","0`","0)","0))","0)","0)"]},{"Key":"bool oneHundCheck","Fragments":["="]},{"Key":"oneHundCheck =","Fragments":["input"]},{"Key":"% 100","Fragments":["==","!=","!=","!=","==","\u003e","\u003e","\u003e=","!=","!=","!=","!+","!=","!=","!=","!=","!=","!=","!=","!=","!=","check","on","!=","!=","!=","!=","!=","==","!=","==","==","==","==","!=","!=","==","!=","!=","==","!=","!=","!=","!=","==","!=","!=","!=","!=","!=","!=","==","!=","!=","!=","==","!=","==","!=","!=","!=","!=","!=","!=","\u003e","!=","!=","=="]},{"Key":"100 ==","Fragments":["0;","0)","0","0","0","0)","0","0)","0","0;","0","0`","0```","0)\"."]},{"Key":" Thought","Fragments":["I","of","using"]},{"Key":"Thought I","Fragments":["got"]},{"Key":"I got","Fragments":["it","IsExclamation","it.","a","stuck","2.1","some","a","bogged","to","help","rid","to","rid","used","so","was","back","frustrated","really","rid"]},{"Key":"got it","Fragments":["figured","working","for","in","to","to"]},{"Key":"it figured","Fragments":["out,"]},{"Key":"figured out,","Fragments":["then"]},{"Key":"out, then","Fragments":["discovered"]},{"Key":"then discovered","Fragments":["that"]},{"Key":"discovered that","Fragments":["it","I"]},{"Key":"it will","Fragments":["take","work","be","give","also","allow","allow","be","still","cast","turn","terminate","allow","be","enumerate","do","return","be","crash.","automatically","simply","get","only","allow","create","create","still","get","result","by","return","have","redo","be","be","be","be","find","return","automatically","return","soon","throw","work,","simply","be","generate","eventually","pass.","work","return","not","go","be","work","exit","throw,","fail","be","return","be","loop","only","fail"]},{"Key":"will take","Fragments":["any","a","a","that","note","a","a","a","a"]},{"Key":"take any","Fragments":["start"]},{"Key":"any start","Fragments":["of"]},{"Key":"start of","Fragments":["a"]},{"Key":"of a","Fragments":["century","not","number.","style","way","preference.","leap","leap","domain","Regex","difference","functional","single","leap","leap","sentence","plain","List\u003c\u003e","lambda","null","null","ternary","nice","leap","bigger","terribly","method","check","mental","'no-no'","Hungarian","string?","good","black","\"leap_year_calc\"","method.","leap","project,","string","string.","dictionary...","shallow","situation","for","string","number.","bodge","personal","trade","bad","difference","generic","particular","space","word","foreach","scenario","preference","List","snippet","List\u0026lt;int\u0026gt;.","DateTime","letter","Dictionary","direct","List","multiplier","string","letter?","function","parameter.","Dictionary)","random","Dictionary","'Scrabble'","key,","bunch","hack\"","newbie","long","math","noob","pain","row","string","cheat","primary","aigasecond.","single","giga","better","more","StackOverflow","property","zipper.","space;","\"cheat","`string`.","list"]},{"Key":"a century","Fragments":["(1900,","then","then","so","but","that"]},{"Key":"century (1900,","Fragments":["2000,"]},{"Key":"(1900, 2000,","Fragments":["1700,"]},{"Key":"2000, 1700,","Fragments":["etc)."]},{"Key":"1700, etc).","Fragments":["Help"]},{"Key":" Ah!","Fragments":["Yes,"]},{"Key":"Ah! Yes,","Fragments":["Zip"]},{"Key":"Yes, Zip","Fragments":["returns"]},{"Key":"Zip returns","Fragments":["a"]},{"Key":"returns a","Fragments":["list","`bool`.","`bool`.","List\u003cstring\u003e.","bool","bool,","DateTime","function","date","double","boolean","bool,","bool,","bool","bool.","boolean","boolean"]},{"Key":"a list","Fragments":["of","initializer","with","of","class","of","of","require","of","of","of","(It","to","have","of","of","of","--","of","of","of","of","and","of","of","of","of","of","of","of","of","of","of","of","under","of","especially","because","here"]},{"Key":"list of","Fragments":["whatever","applied","dates.","valid","characters","matches","the","numbers","lists.","those","characters","letters\u003e","things","numbers","gifts,","strings","used","three","primes","primes.","matches","all","chars","numbers","possible","tuples","primes","primes","lists","gifts","ints","strings","ints","strings","ints","strings","ints","strings","ints","strings","current","allergens","DayOfWeek"]},{"Key":"of whatever","Fragments":["you"]},{"Key":"whatever you","Fragments":["say,","call"]},{"Key":"you say,","Fragments":["not","it"]},{"Key":"say, not","Fragments":["necessary"]},{"Key":"not necessary","Fragments":["a","to","but","as","to","but"]},{"Key":"necessary a","Fragments":["tuple."]},{"Key":"a tuple.","Fragments":["I","It"]},{"Key":"tuple. I","Fragments":["was"]},{"Key":"was thinking","Fragments":["to","of","along","about","of","about","that","how","Day","that","of"]},{"Key":"thinking to","Fragments":["much"]},{"Key":"to much","Fragments":["Haskell.","space"]},{"Key":"much Haskell.","Fragments":["Clever"]},{"Key":"Haskell. Clever","Fragments":["use"]},{"Key":"Clever use","Fragments":["of"]},{"Key":"use of","Fragments":["Zip!","a","[extension","Linq","language...","`IEEERemainder`","the","\"Is\"","divisibility","consolidating","```SortedSet```,","a","the","Aggregate","an","Linq.","the","Linq","the","SortedSet.","ElementAt.","the","the","something","the","methods","Linq.","assignment","Any","IsNullOrEmpty","`IDictionary`","`ToDictionary`.","the","your","StatementEvalulators,","the","Math.Min()","char.IsLetter()","templating","marking","Regex","Linq","the","ternary","UInt32","the","the","'var',","the","variables","the","the","utilizing","LINQ","the","Math.Pow.","a","'c'","putting","var.","`int.TryParse`","classes","enum","recursion.","the","Math.Min","the","Regex","Math.Pow(),","appending","the","static","a","Hungarian","Linq","the","SelectMany()","bitwise","h","Aggregate()","EndsWith,","commenting.","Regex","a","the","enums","sorting.","TrimWord(),","String.Concat","unit","comments.","the"]},{"Key":" Readibility","Fragments":["could"]},{"Key":"Readibility could","Fragments":["be"]},{"Key":"be increased","Fragments":["by"]},{"Key":"increased by","Fragments":["naming"]},{"Key":"by naming","Fragments":["the","the"]},{"Key":"naming the","Fragments":["parameter","steps","key","class"]},{"Key":"the parameter","Fragments":["`year`","(which","and","into","means","be"]},{"Key":"parameter `year`","Fragments":["rather"]},{"Key":"`year` rather","Fragments":["than"]},{"Key":"rather than","Fragments":["`yr`.","creating","just","just","ints","`IsLeap`)","keeping","a","the","last?","helping","spell","the","have","longer?","if","rolling","attempting","just","my","making","malloc","a","conciseness.","String.EndsWith()?","a","using","creating","a","re-Substring-ing","storing","methods","\u003cb\u003eDictionary\u003c/b\u003e","trying","using","making","from","new","storing","the","generating","this","intercepting,","placing","List\u0026lt;int\u0026gt;","multiple","\u003cb\u003eHello\u003c/b\u003e.","doing","simply","have","each","a","null,","on","calculations","a","relying","your","defining","just","adding","two","returning","its","a","c#.","my","using","just","a","one","foreach","the","using","go","3...","calculating","assigning","doing","two?","being","debug","using","manually","linq(foreach","used","KeyValuePair()","List","sum"]},{"Key":" Also,","Fragments":["your","you","(and","I'm","you","it","lots","you","your","I","something","use","while","\"_\"","in","you","you","check","if","a","some","thank","what","what","since","the","it's","to","the","make","this","I","if","I","what","I","mark","I","your","you","wouldn't","I","do","I","You","if","I","if","and","the","nice","in","you've","there","logically,","in","the"]},{"Key":"Also, your","Fragments":["code","variable","one","outside"]},{"Key":"your code","Fragments":["reads","example","is","(even","too","that","doesn't","wouldn't","much","looks","more","may",":)","should","6","6","to","more","is","is","by","and","as","to","a","be","could","style.","reads","works","later.","does","is","but","as","is","review,","will","should","still","is","-","it","more","more","could","to","can","so","and","ran","is","will","is","would","they","with","like","to","will","counts","would","breaks.","throws","until","how","to","doesn't","to","reads","as","for","is","in","that","will","and","and","as"]},{"Key":"code reads","Fragments":["like","(in","easily.","more","in","the"]},{"Key":"reads like","Fragments":["this;","your"]},{"Key":" if","Fragments":["(true)","(IsYearDivisibleBy(year,400))","(IsYearDivisibleBy(year,100))","(divisableByFourHundered)","(year%4","(year%100","(year%400","(isNotALeapYear(year))","(year%400","(address.EndsWith(\"?\"))","(/*","(year","(year","(!YearIsDivisibleBy(year,","(YearIsDivisibleBy(year,","(YearIsDivisibleBy(year,","((givenYear%4","(year%4","(year%100","it's","(year","the","(year","(x","(x","(IsShouting(phrase))","(IsQuestion(phrase))","(string.IsNullOrWhiteSpace(phrase))","(Year.IsDivisibleBy4(year)","(matchWord.Length","(matchWord.ToLower().SequenceEqual(word.ToLower()))","is","(input.EndsWith(\"?\"))","(/*","(year","(foo)","(a[i]","(x","(x","(x","(word.ToLower()","(_Anagram.OrderBy(c","(year","(/*","(isDivisibleBy4","(isDivisibleBy100","(","(input[input.Length","(inputStr.ToUpper()","(something)","(!NucleotideCounts.ContainsKey(nucleotide))","(Int32.TryParse(Console.ReadLine(),","(year","(DivisibleBy(year,","(DivisibleBy(year,","(dnaone.Length","(expected.ContainsKey(lowerLetter))","(StrContainsLowercase(str))","(str.Any(char.IsLower))","(DivisibleBy(4))","(!DivisibleBy(100)","the","(char.ToUpper(strand1[index])","(_wordCharacters.Contains(c))","((year","((year","(list[index]","(a[i]","(Something)","(Something)","(!multiplesUsed.Any(u","(multiples.Any(u","(sample1.Equals(sample2))","(year","(oldData","(number.Length","(strand1[i]","(s1.Length","\u003cb\u003enumber\u003c/b\u003e","(s1","(i","(isMultiple)","(i","(name","(input","(i","((UInt32)n","(*p","(number.sign)","(n","(n","(isYelling)","(IsYELLING(comment))","(number","(number","(number","(output.Length","(number","(output.Length","((number","(!matches.Contains(i))","(count","(char.IsDigit(character))","(input","(word","(number","(x)","(!validDigits.Contains(c))","(binaryString[i]","(condition)","(num","(num","(array[i])","(number","(fits","(IsDivisibleByFourHundred(year))","(IsDivisibleByOneHundred(year))","(_word...)","(!...)","(","(given[i]","(x","(!char.IsDigit(c))","(count","(value","(triangleSides[0]","(triangleSides[1]","(triangleSides[2]","(count","(true)","(string.IsNullOrWhiteSpace(message))","(message.Equals(message.ToUpper())","(message.EndsWith(\"?\"))","(the","(c_double","condition","(IsQuestion(wahWahWah))","(IsYelling(wahWahWah))","(IsYelling(wahWahWah))","(","(!QuestionRegex.IsMatch(problem))","(IsIntegerRegex.IsMatch(token))","(message","you","(year","(number","(distance"]},{"Key":" return","Fragments":["true;","false;","true;","false;","IsEveryFourYears(year)","isLeapYear;","isLeapYear;","false;","true;","false;","true;","false;","year%4","year%400","\"Sure.\";","year","true;","false;","/*","year","(year%400","year","Year","(Year","YearIsDivisibleBy(year,","true;","(year","(year%400","year","isLeap;","year%400","possibleAnagrams.Where(IsAnagram).ToArray();","year","true;","A","(year","whatever;","(","\"Whoa,","\"Sure.\";","\"Fine.","\"Whatever.\";","year","true;","false;","false;","false;","true;","false;","/*","input.Trim()","message.ToUpper()","message.ToUpper()","strandAtrimmedToLength.Zip(strandBTrimmedToLength,","strand1.Zip(strand2,","true;","false;","foo;","count;","(year","ret.ToArray();","true;","(year","true;","false;","/*","isLeapYear;","true;","false;","personIsYelling;","(year%4","0;","count;","true;","false;","(year","String.Concat(","Bob.heardYelling(message)","true;","false;","(year","true;","false;","WordRegex.Matches(_phrase).Cast\u003cMatch\u003e()","true;","false;","true;","false;","isDivisibleBy4","year","(isDivisibleBy4)","year","(year%4","true;","false;","transformed;","(year","Number.Substring(0,","number;","letters.Any()","LettersAreAllUpper(statement))","_random.Next(numberOfPlaces+1).ToString(new","_random.Next(int.Parse(numberOfPlaces)+1).ToString(new","result;","Roster[grade];","Roster[grade]","studentsInGrade;","true;","false;","(input","false;","false;","false;","false;","true;","\"Whoa,","\"Whoa,","output.ToString();","output.ToString();","roman;","roman;","age;","(score","(score","(score","false;","withSpaces;","date;","string.IsNullOrWhiteSpace(statement);","result;","meetup.AddDays((dayOfWeek","meetup.AddDays((dayOfWeek","meetup.AddDays((dayOfWeek","meetup.AddDays((dayOfWeek","String.Concat(","x;","true;","condition;","factors;","String.Concat(","String.IsNullOrWhiteSpace(input)","(char)","yr","isDivisibleByFourHundred","\"Sure.\"","(year","false;\u003c/code\u003e,","IsDivisibleByFour(year);","year%100","year%4","year%400","values.OrderBy(t","text;","\"Whoa,","\"Sure.\";","\"Fine.","(word","Roster.ContainsKey(grade)","true;","false;","((year","Score(Word);","this.Word","this.Word.Sum(c","word.ToLower().Where(Char.IsLetter).Sum(c","\"Fine.","\"Whoa,","\"Sure.\";","\"Whatever.\";","true;","false;","(condition1","Score(_word);","word","year","true","\"Whoa,","\"Sure.\";","\"Whoa,","(minutes","(m","((m","(sum*sum)","a;","pair[1]*pair[1]","\"Whoa,","(year","q.Length;","q.Length;````","(year","List()","0;","0;","String.Concat(seq);","truelogic1","new"]},{"Key":" You","Fragments":["might","can","could","mean","mean","know,","have","can","can","can","can","seem","definetely","can","will","could","are","could","can","could","have","could","could","can","could","need","can","can","could","code","code","win","can","could","mentioned","should","have","could","should","should","shouldn't","might","should","can","should","can","code","don't","should","have","can","really","are","could","usually","could","need","can","can","kept","can","are","should","can","are","can","frequently","still","might","could","should","could","should","could","can","were","were","can","can","can","could","could","code","seem","already","can","could","should","could","could","can","can","are","will","can","did","are","could","can","can","have","probably","can","are","are","can't","don't","would","can","can","aren't","are","could","have","really","should","could","could","could","can","have","shouldn't","are","could","can","don't","could","can","might","might","could","don't","might","probably","can","don't","are","could","can","can","can","are","could","could","can","added","might","can","can","are","could","are","might","inspired","should","have","could","are","could","_may_","could","could","took","could","should","could","mean","just","are","don't","can","can","can","don't","can","have","can","have","will","could","can","can","recalculate","can","can","can","reused","are","read","i,j,k","might","could","can","Have","can","need","really","have","can","can","dont","can","should","seem","are","are","have","can","could","can","can","should","don't","can","don't","should","only","did","are","can","could","don't"]},{"Key":"You might","Fragments":["as","think","also","consider","also","want","want","want","want","want","want","want","want","have","consider","want","consider"]},{"Key":"might as","Fragments":["well","well","well","well","well","well"]},{"Key":"as well","Fragments":["just","remove","that",":-D.","cut","as","go","used","to","write","as","as","make","try","use","be",";)","as","so","with",":)",",","as","and","i.e.","and","as","because","as","as","as"]},{"Key":"well just","Fragments":["return"]},{"Key":"just return","Fragments":["the","a","the","the","the","string.IsNullOrWhitespace(statement).","the","statement?","the","the","gigasec","that","`IEnumerable\u003cchar\u003e`","the","the","a","\"((year","DateTime.IsLeapYear(year)?","the","NucleotideCounts[inputNucleotide]","false","that","that","that"]},{"Key":"return the","Fragments":["original","result","value","result","proper","result","result","result","appropriate","if","hard-coded","non-zero","value","Sum(),","conditional,","entire","results.","most","most","list.","reply","List","expression","original","date","number","List?","List?","0","wrong","required","bools","results","result","whole","result","Enumerable","Length","good"]},{"Key":"the original","Fragments":["conditional.","Dictionary","word","data","input","way","string","string","word.","but","word","string","order","string.","input.","word","word,","amount","as","for","tests","test","test"]},{"Key":"I believe","Fragments":["that","we","it's","it","all","that","your","it's","that","this","that","the","that","it's","they","StringBuilder","this","there","you",".NET","in","it","your","(although","it","the","that","that","exceptions"]},{"Key":"believe that","Fragments":["the","all","only","always","my","this","it","is","this","looks"]},{"Key":"that the","Fragments":["naming","right","method","public","if","two","method","definition","```Year```","tests","year","year","if","input","first","way","Regex.Split","order","private","2nd","input","input","message","performance","else","comments","phrase","logic","logic","function","else","single","Zip","end","input","tests","conditions","collection","string","numbers","read","Where","logic","name","NucleotideCounts","previous","calculations","most","new","sequential","output","value","code","compact","code","rabbit","compiler","inputs","strands","code","system","below","regex","enumeration","second","elements","enumeration","entire","only","set","Dictionary","constructor","Zip","two","seed","enumeration","file","IsScreaming","performance","key","same","allergies","union","order","Reverse","condition","compiler","results","first","Return_entire_song","tests","Dictionary","loop","goal","order","class","one","user","most","if","validation","extension","count","order","additional","code","integer","algorithm","list","value","single","input","second","text","line","only"]},{"Key":"the naming","Fragments":["convention","of","and","of","policy","conventions"]},{"Key":"naming convention","Fragments":["of","that's","point"]},{"Key":"convention of","Fragments":["prefixing"]},{"Key":"of prefixing","Fragments":["b"]},{"Key":"prefixing b","Fragments":["for"]},{"Key":"b for","Fragments":["bool,"]},{"Key":"for bool,","Fragments":["i"]},{"Key":"bool, i","Fragments":["for"]},{"Key":"i for","Fragments":["int,","your"]},{"Key":"for int,","Fragments":["s","so"]},{"Key":"int, s","Fragments":["for"]},{"Key":"s for","Fragments":["string"]},{"Key":"for string","Fragments":["isn't","manipulation","was","builder","extensions"]},{"Key":"string isn't","Fragments":["common"]},{"Key":"isn't common","Fragments":["practice"]},{"Key":"common practice","Fragments":["anymore"]},{"Key":"practice anymore","Fragments":["at"]},{"Key":"anymore at","Fragments":["least"]},{"Key":"at least","Fragments":["for","instead.","one","in","one","two","gotten","as","2","1","catch","we","declare","one","one","two","doesn't","with","once","have","skip","the","one","it","took","for","double","in","converted","for","2","get"]},{"Key":"least for","Fragments":["C#.","the","key"]},{"Key":"was watching","Fragments":["videos"]},{"Key":"watching videos","Fragments":["over"]},{"Key":"videos over","Fragments":["at"]},{"Key":"over at","Fragments":["Microsoft","stack"]},{"Key":"at Microsoft","Fragments":["Virtual"]},{"Key":"Microsoft Virtual","Fragments":["Academy"]},{"Key":"Virtual Academy","Fragments":["and"]},{"Key":"Academy and","Fragments":["that"]},{"Key":"and that","Fragments":["was","is","could","you've","takes","really","the","code","you","is","multiple","gave","would","code","is","can"]},{"Key":"that was","Fragments":["one","not","a","a","provided.","looking","the","sent","just","provided","my","a","not","working,","more","silly","dumb.","not","the","your","initialized","beyond","256","the","contained","from","educational.","included","just","assuming","old."]},{"Key":"was one","Fragments":["of","of","of"]},{"Key":"one of","Fragments":["the","these","the","the","my","the","the","the","the","it's","the","the","my","the","the","the","the","the","the","those","the","the","the","the","the","the","my","the","the","the","the","the","these","the","them.","the","three","the"]},{"Key":"the things","Fragments":["the","you","that","found"]},{"Key":"things the","Fragments":["instructor"]},{"Key":"the instructor","Fragments":["said."]},{"Key":"believe we","Fragments":["are"]},{"Key":"we are","Fragments":["missing","in","using","working","trying","(in","doing","throwing","going","using/re-using","working","using","using","going","looking","on","generating.","talking","concerned","grouping","all","only","only"]},{"Key":"are missing","Fragments":["an","out"]},{"Key":"missing an","Fragments":["additional"]},{"Key":"an additional","Fragments":["test.","statement","enumerator"]},{"Key":"additional test.","Fragments":["What"]},{"Key":"test. What","Fragments":["if"]},{"Key":"What if","Fragments":["the","you","someone","the","this","strand1","There","the","you","a","the","the","the","the","the","none"]},{"Key":"if the","Fragments":["integer","values","output","calculators","year","right","logic","first","year","calculations","year","\"if\"","summary","code's","string","input","result","methods","test","char","year","string","right","extension","method","calculation","method","string","message","part","definition","first","input","result","%","if","lengths","logic","year","phrase","phrase","requirement","condition","`%100`","variable","input","letters","logic","tradeoff","years","string","there","condition","profiler","string","test","repository","number","/100","supplied","maths","reader","if","string","word","program","tests","first","if","nucleotide","users","old","tests","string","input","if","if","statement","lengths","class","length","year","bool",".clear","strings","caller","string","input","name","user","'Bonus","remainder","caller","code","scheduleDay","condition","the","same","input","value","\"else","Where","test","key","previous","possible","caller","num","same","current","returnString","input","text","program","message","sequences","year","word","input","parse","last","statement","character","comparisons","user","user","user","user","user","```char[]```","input","foreach","input","key","string","definition","user","'if'","predicate","next","input","input","char","strings","string","string","year","item"]},{"Key":"the integer","Fragments":["is","to"]},{"Key":"integer is","Fragments":["a"]},{"Key":"a negative","Fragments":["number","number","year","year,","number.","number","number","boundary","number","year","number?"]},{"Key":"negative number","Fragments":["or","and","that","because","should","to"]},{"Key":"number or","Fragments":["zero?","out"]},{"Key":"or zero?","Fragments":["Also"]},{"Key":"zero? Also","Fragments":["for"]},{"Key":"Also for","Fragments":["any"]},{"Key":"for any","Fragments":["public","but","letters","type","criticism","single","constructive","invalid","number","other","base.","additional","response.","grade","letters"]},{"Key":"any public","Fragments":["method"]},{"Key":"public method","Fragments":["xml","-","to"]},{"Key":"method xml","Fragments":["comments"]},{"Key":"xml comments","Fragments":["would","`///`"]},{"Key":"comments would","Fragments":["be","be","be"]},{"Key":"would be","Fragments":["preferred.","the","to","more","much","better","a","more","confused","more","simpler","better,","more","no","the","that","to","to","the","a","worth","clearer?","something","more","better.","valuable.","overkill","less","a","FOUR","nice","shorter","any","a","in","to","working","between","funny","more","a","a","easier","more","the","something","more","easier","to","easier","a","something","much","optimized","done","a","better.","easy","easier","better.","curious","updated","fun","my","a","more","using","easier","interpreted","able","interesting","nice","to","good","bool,","fine.","better.","able","faster,","greatly","to","the","better","fairly","easily","relatively","a","objectively","to","easier","nice","limited","a","moving","easy","considered","a","cleaner.","clearer","a","more","to","in","less","more","good.","faster.","a","faster","to","better","more","to","more","violating","important.","worth","more","nice","more","just","to","a","smaller","using","helpful.","cleaner","good","impossible","to","possible","4","0,","1,","2,","3.","the","to","to","greatly","\u003ccode\u003eif","\u003ccode\u003eif","to","slightly","worth","very","nice","interesting","worth","faster.","easier","quite","clearer","more","easier","to","that","enough,","easiest","subclassed","clearer?","much","to","to","better","unnecessary","a","Leap.IsLeap(x);","cleaner.","easier","able","quite","correct","to","`null`,","thrown.","`null`,","thrown.","to","returned.","clearer?","needed.","as","lazy,","a","ready","as","the","(","(","more","handy","to","shorter","clearer","the","the","much","a","something","a","a","better","the"]},{"Key":"I fine","Fragments":["no"]},{"Key":"fine no","Fragments":["fault"]},{"Key":"no fault","Fragments":["in"]},{"Key":"fault in","Fragments":["your"]},{"Key":"in your","Fragments":["code,","comment","return","editor.","code","system","cmd","current","implied","code","conditional","Hey","\"if-statements\"","example","second","code","expression.","return","Count","foreach","system","Add","initial","list.","code.","constructor?","code.","current","switch","for","for","list,","class?","class?","code","iterator.","code?","use","code.","comparisons.","already","program.","implementation.","`List()`","algorithm","namespace","GetNucleotideCounts","dictionary,","answer.","solution","implementation.","programs.","code","third","solution","solution.","way","```foreach```","solution"]},{"Key":"your code,","Fragments":["it","good.","if","the","but","it","someone","but","why","then"]},{"Key":"code, it","Fragments":["works","could","is"]},{"Key":"it works","Fragments":["and","-","unless","the","like","great","for","(there","is","like","more","with","great","even"]},{"Key":"works and","Fragments":["it's","is","is"]},{"Key":"and it's","Fragments":["fairly","likely","logic","value","amazing","the","pretty","not","returning","method"]},{"Key":"it's fairly","Fragments":["readable."]},{"Key":"I too,","Fragments":["have"]},{"Key":"too, have","Fragments":["struggled"]},{"Key":"have struggled","Fragments":["with"]},{"Key":"struggled with","Fragments":["multiple","the","this","that"]},{"Key":"with multiple","Fragments":["returns","return","conditions","return","return","returns"]},{"Key":"multiple returns","Fragments":["vs","in","in","in","in","are","in","in","in","in","when","in","in","are"]},{"Key":"returns vs","Fragments":["storing"]},{"Key":"vs storing","Fragments":["the"]},{"Key":"storing the","Fragments":["return","result","student"]},{"Key":"the return","Fragments":["value.","true","variable","strings","part)","value","statement","statement.","statements","statements.","value","result.","states","to","should","to","value?)","value","by","type","value","statement","year%4==0","statement.","values","leaves","statement","statement","type","type","value","type","line","type"]},{"Key":"return value.","Fragments":["I","Here"]},{"Key":"value. I","Fragments":["agree,","should","wanted","considered"]},{"Key":"I agree,","Fragments":["it","adding","I'm","I","I","it","but"]},{"Key":"agree, it","Fragments":["really","had"]},{"Key":"it really","Fragments":["makes","is","does","isn't","barely","isn't","matter?","helps","is","makes"]},{"Key":"really makes","Fragments":["no","good","it","things"]},{"Key":"makes no","Fragments":["difference","sense","sense"]},{"Key":"no difference","Fragments":["as"]},{"Key":"difference as","Fragments":["long"]},{"Key":"as long","Fragments":["as","as","as","as","readability","as","as","as","as","as","as","given","as"]},{"Key":"long as","Fragments":["you're","you","it's","there","it","I","you","they","that","in","there","all","it's","should","the","the"]},{"Key":"as you're","Fragments":["consistent","returning"]},{"Key":"you're consistent","Fragments":["and"]},{"Key":"consistent and","Fragments":["the"]},{"Key":"and the","Fragments":["code","solution","text","author","poor","syntax","separation","name","text","tests","tests","fact","type","IsLetter","final","use","Lambda","use","switch","one","only","logic","implementation","loop","like.","full","single","poor","poor","\"return","check","caller","transformation","yield","current","parameters","enum.","case","other","resulting","repeats","apostrophes","general","score","where","code","verse","Add()","sum","Add","calculated","Pow()","other","return","results","code","Grade","constructor","tests","deep","\"out","fact","method","year.","worst","examples","string","elses","end","`string.IsNullOrWhiteSpace`","Sort()","expression","rest","other","regular","implicit","web","results","unit","names","whole","method","Trim()","fact","lack","lookup"]},{"Key":"the code","Fragments":["is","got","is","be","methods","so","requires","such","more","more","more","more","so","to","easier","and","so","you're","that","and","read","to","as","explicit.","in","shorter","\"somewhat\"","easier","much","noisy.","where","(deciding","that","here.","does.","than","below","out","up","much","less","more","I","on","(no","would","but","more","is","is","can","don't","as","for","a","a","standard","to","would","longer","needed","is","a","cluster,","is","for","formatting","and","does","easier","would","in","for","I","much","add","as","starts","significantly.","later,","I've","following","a","needed","that","too","doesn't","difficult","is","by","is","easy","a","easier","is","would","a","into","comments),","processing","to","to","is","in","becomes","hard","that","almost","below","more","in","(at","was","continues","calling","had","down","is","for","since","would","to","easier","easy","much","to","in","that","crashed.","easier","I","clearly","to","more","or","(imagine","was","and","consistent.","to",":)","harder","to","a","itself","much","comparing","(hopefully)","reads","more","easier","a","what","is","you","to","they","misunderstanding","overall","as","does,","simple","I","to","compact.","as","look","longer","easier","small","more"]},{"Key":"code is","Fragments":["readable.","readable","doing.","still","missing","not","selecting","doing.","and","not","doing","actually","fine.","readability","structured,","readable","too","easier","easier","very","bad...","succinct","so","your","very","being","simple","inefficient).","more","doing","good,","simpler","a","a","highly","actually","so","concise","dependent","playing","doing","that","very","called,","far","anyway","IMHO","a"]},{"Key":"I'd say","Fragments":["this"]},{"Key":"say this","Fragments":["is"]},{"Key":"is concise,","Fragments":["but"]},{"Key":"concise, but","Fragments":["does","a"]},{"Key":"but does","Fragments":["lack","not","the","pass"]},{"Key":"does lack","Fragments":["intuitive"]},{"Key":"lack intuitive","Fragments":["readability."]},{"Key":" The","Fragments":["testing","Main","comment","only","help","method","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","year","Main","'using'","logic","challenge","else","straightforward","`this`","main","reason","last","```using","Year","code","///","last","reasoning","logic","Bob.IsSilence(input)","comments","biggest","good","bad","ugly...","code","parenthesis","`else`s","only","function","parentheses","IsShouting","NucleotideCounts","ternary","fact","algorithm","`else`'s","problem","entire","IsShouting","empty","only","name","advantage","code","logic","main","boolean","extra","logic","comma","order","second","advantage","tests","tests","code","code","best","most","code","use","conditional","use","comments","comments","\"Sure.\"","inner","documentation","`year%4","compound","logic","next","function","only","logic","Any","breakdown","only","use","only","only","way","guard","only","return","additional","logic","section","one","first","following","operation","first","thing","dictionary","only","biggest","max","max","intent","biggest","same","extension","only","one","one","code:","isYelling","second","only","first","only","intention","weights","`Regex`","assignment","code","code","deep","explicit","\u003cb\u003eIDictionary\u003c/b\u003e","standard","check","only","Split","lambda","reason","approach","one","expression","only","FindDayInWeek","first","loop","first","code","\"boolean","brackets","constructors","speed","DateTime","decision","problem","order","nested","result","one","bool","only","order","test","readme","??","number","unit","only","third","solution","Where","problem","use","problem","proof","Sieve","Sieve","thing","main","intention","whole","problem","use","additional","variable","first","next","first","above","`.ToString`","variable","next","details","program","trouble","\u003ccode\u003eint.Parse(x.ToString())\u003c/code\u003e","only","trouble","use","doNotEnd","\u003ccode\u003eCheckInequality\u003c/code\u003e","documentation","problem","test","specification","behavior","\"public","dictionary","2d","ternary","`input.Length","most","next","next","most","entire","kind","more","standard","empty","calculation","code","`phrase.LastIndexOf('?')==phrase.Length`","nested","exercise","call","two","challenge","challenge","challenge","example","user","tests","c#","ToDecimal","tests","program","fixed","last","maintainers","exercises","really","cipher","reason","reason","use","parentheses","ternary","use","unit","`Readme`","'%'","`Cast\u003cMatch\u003e()`","way","way","way","way","readme","inner","first","`IsAllUpperCase()`","one","leap","logic","tests","whole","C#","comments","two","next"]},{"Key":"The testing","Fragments":["frame"]},{"Key":"testing frame","Fragments":["is"]},{"Key":"frame is","Fragments":["not"]},{"Key":"is not","Fragments":["present","my","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","readable","required...","required.","a","a","behaving","likely","needed","visible","caught","any","at","too","idiomatic","a","required.","that","dividable","simple","null,","null,","required","B'","really","recommended","a","so","needed","needed.","clear","a","needed","4","everyones","a","required","leap...","measurable.","needed.","an","0?","adding","null,","a","a","what","a","taken","really","tested","a","a","evaluated,","the","easily","really","static.","a","divisible","divisible","a","divisible","a","descriptive","used","my","already","a","one","a","going","divisible","divisible","an","why","'A',","very","a","found","an","a","necessary.","necessary.","easy,for","a","bigger","going","in","a","bad","really","needed.","guaranteed","guaranteed.","helpful","a","prime,","always","allowed.","_guaranteed_","a","a","in","having","defined","always","found.","easily","a","public.","met.","the","true","worth","only","necessary.","very","very","very","thrown","readable","needed","guaranteed.","all","needed","evenly","evenly","to","just","a","familiar","a","needed","a","a","quite","a","shown","a","a","normally","complex.","null","easy","good","good.","a","pretty,","linq","linq,","in","actually","evenly","a"]},{"Key":"not present","Fragments":["as"]},{"Key":"present as","Fragments":["it","little"]},{"Key":"as it","Fragments":["is","seems","has","won't","is","gets.","is","could","is.","could","evolves.","is","provides","is","never","could","limits","seems","would","will","makes","does","is","is","renders","is","is,","is","\"tells","might","receives.","receives.","receives.","receives.","receives.","was","doesn't","changes,","is","cannot","is","keeps","gets","tends","seemed","is","is"]},{"Key":"a separate","Fragments":[".cs","assembly)","`IsDivisibleBy`","if/else","file","function","class?","class","method","method","function","char","function","'if'","method","value.","variable","heading,","and","class","class","type","ensureSchoolHasGrade.","class","process."]},{"Key":"separate .cs","Fragments":["file"]},{"Key":".cs file","Fragments":["within","you"]},{"Key":"file within","Fragments":["Xamarin"]},{"Key":"within Xamarin","Fragments":["Studio"]},{"Key":"Xamarin Studio","Fragments":["running","won't"]},{"Key":"Studio running","Fragments":["with"]},{"Key":"running with","Fragments":["NUnit","NUnit","the"]},{"Key":"with NUnit","Fragments":["framework.","or","and","and"]},{"Key":"The Main","Fragments":["method","method"]},{"Key":"Main method","Fragments":["was","could","might","removed,","in"]},{"Key":"method was","Fragments":["included","trying","specific","overkill","much","100","drilled","intended","called.","called."]},{"Key":"was included","Fragments":["for","in"]},{"Key":"included for","Fragments":["completeness,","completeness."]},{"Key":"for completeness,","Fragments":["and","and"]},{"Key":"completeness, and","Fragments":["because","I"]},{"Key":"and because","Fragments":["Xamarin","I","you","you","I"]},{"Key":"because Xamarin","Fragments":["Studio"]},{"Key":"Studio won't","Fragments":["compile","auto"]},{"Key":"won't compile","Fragments":["without"]},{"Key":"compile without","Fragments":["it."]},{"Key":" Incorrect","Fragments":["file"]},{"Key":"Incorrect file","Fragments":["submitted,"]},{"Key":"file submitted,","Fragments":["ignore."]},{"Key":"how minimal","Fragments":["your"]},{"Key":"minimal your","Fragments":["solution"]},{"Key":"your solution","Fragments":["is,","while","as","isn't","would","and","2","class","is","is!"]},{"Key":"solution is,","Fragments":["and"]},{"Key":"is, and","Fragments":["I"]},{"Key":"and I","Fragments":["also","realized","do","like","find","see","see","think","didn't","want","don't","was","tried","had","can","don't","knew","often","think","like","really","prefer","am","just","are","have","didn't","have","think","was","cannot","don't","think","learned","don't","didn't","really","decided","feel","think","personally","used","got","didn't","had","changed","took","the","simply","never","definitely","forgot","know","feel","believe","curious","wondered","never","keep","can't","prefer","think","like","think","didn't","wanted","can't","would,","think"]},{"Key":"I also","Fragments":["like","think","submitted","assumed","tested","discovered","don't","made","think","should","do","believe","like","decided","agree","thought","thought","agree","always","created","missed","think","agree","like","modified","took","like","think","took","think","decided","threw","added","tried","had","discovered","took","hate","[used","took","like"]},{"Key":"also like","Fragments":["your","returning","how","reading","to","the"]},{"Key":"like your","Fragments":["use","use","code","solution.","Linq","IsDivisible","way","suggestions","evaluating","approach,","elegant","method","use","submission.","use","use","code","use","suggestions,","commitment","approach.","point","UniqueSides","sorting","implementation","structure","Linq","method","solution,","getFiftList()"]},{"Key":"your use","Fragments":["of","of","of","of","of","of","of","of","of","of"]},{"Key":"a not","Fragments":["so","operator","divisible","a","a","operator"]},{"Key":"not so","Fragments":["common","efficient,","it","much","easily","sure","much"]},{"Key":"so common","Fragments":["operator."]},{"Key":"common operator.","Fragments":["However"]},{"Key":"operator. However","Fragments":["you"]},{"Key":"However you","Fragments":["did","could","alogorithm"]},{"Key":"you did","Fragments":["not","it","the","the","a","an","something","on","in","not","in","for","it","that,","a","and","you","this"]},{"Key":"did not","Fragments":["need","want","bother","need","use","know","realize","appear","fully","understand","have","return","return","change","have","because","consider","realize","get","enjoy","want","realize","get","write","look"]},{"Key":"not need","Fragments":["to","to","to","a","the","2","to","to","this","to","to","to","to","terniary","to"]},{"Key":"need to","Fragments":["use","provide","think","fix","test","do","be","explain","be","have","think","lower","create.","qualify","include","know","call","be","check","create","put","create","measure","have","explicitly","instantiate","sort","add","define","put","re-name","check","change.","convert","comment","convert","do","create","be","be","be","update","have","line","be","check","add","provide","be","reuse","create","loop","call","rewrite","check","check","be","do","pick","start?","decide","get","escape","change","be","protect","fix","create","use","set","convert","worry","do","go","know.","call","use","test","convert","worry","have","create","change","be","worry","check","be","get","check","reverse","be","have","store","be","check","catch","convert","do","do","check","test","take","go","calculate","calculate","call","lowercase","check","as","call","create","convert","foreach","handle","compute","change","calculate","return","be","fuss","set","create","be","use","check","do","compare","ToCharArray()","change","sort","deallocate","declare","be.","check","add","be","do","introduce","find","change","be","be","create","place","be","convert","comment,","convert","have","create","be","make","submit","have","be","strip","say","check","make","clarify","handle","use","regenerate","be","be","convert","sort","look","create","get","be","be","stop","include","call","go","check","include"]},{"Key":"use the","Fragments":["ternary","same","static","same","return","Ternary","Sort","`if`s","```Regex```","`String`","ReadOnly*","build","NUnit","file","Key","!=","Any","square","same","helper","int","name","`string.ToUpper()`","Zip","capital","+","IsNullOrWhitespace()","count","StyleCop","int","`year`-parameter","enum","Modulo","`readonly`","string.IsNullOrWhiteSpace","testing","if-then-else","ToUpper()","language","condition","property","dictionary","Number","StringBuilder,","yield","modulus","local","Sum()","Lambda","Dictionary.","switch","'double'","dictionary","next","bits","`.ToString()`","```var```","test","static","Select","Select","`ToUpperInvariant()`","```Dictionary.add(key,","try/catch","GroupBy","numbers","operator","cli","shorter","property","`Split()`","`Split()`","`Enumerable.Range`","`string.Format()`","same"]},{"Key":"the ternary","Fragments":["operator","operator,","into","for","operator.","operator","operator","on","operator","operator","operator","operator.","operator","operator.","operator.","operator.","operators","operator"]},{"Key":"ternary operator","Fragments":["so","at","could","at","even","to","it","and","is","to","is","because"]},{"Key":"operator so","Fragments":["many"]},{"Key":"so many","Fragments":["times.","comments","ifs","braces!","nested","people","Keep/Discard"]},{"Key":"many times.","Fragments":["You","This"]},{"Key":"times. You","Fragments":["could"]},{"Key":"You could","Fragments":["of","probably","reduce","easily","try","type","use","reduce","use","think","remove","use","break","also","use","get","chain","think","optimise","look","use","maybe","use","use","also","simplify","reduce","also","try","pull","also","probably","have","also","use","use","simplify","have","even","just","figure","pass","simplify","have","use","solve","use","save","save","probably","loop","include","possibly","simplify","use","make","remove","also","declare","make","end","also","also","eliminate","simplify","just","use","have","use","also","also","use","use","call","avoid"]},{"Key":"could of","Fragments":["used","used"]},{"Key":"of used","Fragments":["it","a","names"]},{"Key":"used it","Fragments":["just","otherwise.","because","made","will","in"]},{"Key":"it just","Fragments":["once","assigns","wanted","to","adds","makes","replaces","be","me,","so"]},{"Key":"just once","Fragments":["and","and"]},{"Key":"once and","Fragments":["linked","my","assigning","detect","store","not"]},{"Key":"and linked","Fragments":["your"]},{"Key":"linked your","Fragments":["conditional"]},{"Key":"your conditional","Fragments":["statements","says","is","in","statements","logic"]},{"Key":"conditional statements","Fragments":["with","are","for","here.","with"]},{"Key":"statements with","Fragments":["||","\u0026\u0026","one","this"]},{"Key":"with ||","Fragments":["and"]},{"Key":"|| and","Fragments":["\u0026\u0026","\u0026\u0026."]},{"Key":"and \u0026\u0026","Fragments":["by"]},{"Key":"\u0026\u0026 by","Fragments":["checking","comparing"]},{"Key":"by checking","Fragments":["if","shouting","for","if","if"]},{"Key":"checking if","Fragments":["the","they","strings","the","a","the","the","they","it","all","=","a","a","they","there","the","phrase","the","the","the","shouting","the","the"]},{"Key":"the values","Fragments":["are","just","for","embedded.","for","being","into","in","at","A,","in"]},{"Key":"values are","Fragments":["not","different.","more"]},{"Key":"are not","Fragments":["equal","tested.","required","represented","writing","too","valid.","necessary,","rationed","actually","very","years","the","consistent.","calling","returning","on","immediately","best","valid","the","obvious","really","the","really","necessary","equal.","too","formatting","saving","needed.","meant","very","taking","dealt","comprehensive","specific"]},{"Key":"not equal","Fragments":["to","to"]},{"Key":"equal to","Fragments":["0.","0?","1582\"?","'limit')","\"Yes\".","\"Y\"","inputPhrase.ToUpper()","inputPhrase.ToLower()"]},{"Key":" Other","Fragments":["then","than","than","than","than","than","than","than","than","than","than","than","than","than"]},{"Key":"Other then","Fragments":["that"]},{"Key":"then that","Fragments":["there","just","work","would","would","is"]},{"Key":"that there","Fragments":["is","are","is","is","aren't","is","might","weren't","should","was","is","should","are","isn't","was","had"]},{"Key":"is of","Fragments":["course","course","the","the"]},{"Key":"of course","Fragments":["the","the","for","this","leads","your","drastically","had","just"]},{"Key":"course the","Fragments":["obvious","requirement"]},{"Key":"the obvious","Fragments":["readability","-","crash.","choice."]},{"Key":"obvious readability","Fragments":["problems"]},{"Key":"readability problems","Fragments":["but"]},{"Key":"problems but","Fragments":["given"]},{"Key":"but given","Fragments":["that","the","your"]},{"Key":"given that","Fragments":["you","the","that","enumerating"]},{"Key":"that you","Fragments":["commented,","may","did","use","leap","don't","need","don't","should","took?","don't","eliminated","sorted","aren't","can","recognize","desire.","do","are","have","have","are","did","unused","generate","assigned","used","can","might","will","store","should","are","should","absolutely","are","could","forgot","included","are","have","have","could","first","check","feel","are","are","only","ordered","know","robot","save","might","store","are","would","inserted","would","wanted","are","could","Dequeue()","have","already","want","don't","want.","anticipated","only","tried","are","wouldn't","use","are","made","don't","know","could","can","submitted","make","wouldn't","expect","already","know","are","are","are","are","are","are","only","don't","throw","focus","see","don't","can","can","can","can","could","are.","have","don't"]},{"Key":"you commented,","Fragments":["and"]},{"Key":"commented, and","Fragments":["the"]},{"Key":"the solution","Fragments":["is","to","and","easyer","down","more","longer","I'm","for","so","for","file","hence","since","needs"]},{"Key":"solution is","Fragments":["sort","key.","probably","clearer.","basically:","to","elegant.","totally","not","succinct","superflous","5"]},{"Key":"is sort","Fragments":["I","of"]},{"Key":"sort I","Fragments":["like"]},{"Key":"like it","Fragments":["much","could","that","works,","passes","would","works,","just","satisfies","could","returns","scans","when","you","wasn't","as","can","does)?","says","is",":smile:","will","will","will","makes","but","would","would","would"]},{"Key":"it much","Fragments":["better","harder","more"]},{"Key":"much better","Fragments":["then","and","experience","way","this","-","than","than","here.","variable","challenge","one"]},{"Key":"better then","Fragments":["using"]},{"Key":"then using","Fragments":["if","Regex.Match.","linq"]},{"Key":"using if","Fragments":["statements.","statements"]},{"Key":"The comment","Fragments":["blocks"]},{"Key":"comment blocks","Fragments":["make"]},{"Key":"blocks make","Fragments":["it"]},{"Key":"make it","Fragments":["a","private.","as","read","read","easier","easy","more","usable.","easier","shorter?","a","smaller.","clear","better.","clearer.","more","a","clearer","as","run","easier","easyer","lowercase.","more","more","slightly","more","easy","easy","so","\"easier","worth","ternary.","more","easier","more","only","a","less","more","through","a","easier","run","harder","short,","a","more","better","harder","more","more","easy","slightly","more","more","work?","work?","work?","work?","work?","one?","a","a","easy","more","work","more","work","worse.","easier","work","more","even"]},{"Key":"it a","Fragments":["little","bit","little","bit","bit","specific","one-liner.","lot.","try,","bit","bit","bit","bit","bit","bit","bit","bit","bit","bit","bit","little","bit","little","static","single","step","second","thousand","lot.","little","little","bit","bit","proper","second","second"]},{"Key":"a little","Fragments":["hard","over-engineered","paranoid","bit","too","more","overboard","confusing","funky","-","bit","odd","clearer/better.","bit.","more","unsure","heavy","more","more","on","unreadable.","bit","less","bit","bit","hard","silly","application","complex","neater,","easier","confusing","hard","pedantic.","hard","thing","easier","more","hard","and","bit","help","against","work","on","work","more","more","clever","wordier","simpler.","unwieldy","more","hint","cryptic","cryptic.","verbose.","slower","bit","problem","more","more","verbose.","ugly","more","shorter","bit,","convoluted/complex","bugger!"]},{"Key":"little hard","Fragments":["to","to","to","to","to"]},{"Key":"hard to","Fragments":["read","read","read","read","read","read","debug","follow","read","read.","read.","follow","implement","read","see","read,","read,","tell","follow","understand,","understand.","read","parse:","understand","understand.","spot.","read","follow.","follow","read","know","find.","follow","read.","track","parse"]},{"Key":"to read","Fragments":["through","but","(especially","all","(which","and","the","the","and","well","so","without","code.","and","only","now","at","etc...?","now","all","and","at","and","and","and","what","even","and","that","and","putting","or","only.",":)","when","the","the","in","otherwise.","than","line:","though.","if","and","'if(AskingAQuestion(question))'","the","functions.","sometimes.","ifology.","in","but","(understand).","when","and","for","and","the","and","as","if","(and","and","but","better.","my","in","by","that","through.","by"]},{"Key":"read through","Fragments":["this","the","other's"]},{"Key":"through this","Fragments":["web","some"]},{"Key":"this web","Fragments":["interface."]},{"Key":" @lucienne","Fragments":["I"]},{"Key":"@lucienne I","Fragments":["know,"]},{"Key":"I know,","Fragments":["I","but"]},{"Key":"know, I","Fragments":["decided","was","haven't"]},{"Key":"I decided","Fragments":["to","to","to","to","was","against","to","to","to","to","terseness","to","to","that","to","to","to","to","to","to","to","to","to","I","that","to","I","to","to","not","to","the","I","to","that","to","I","that","to","this"]},{"Key":"decided to","Fragments":["do","try","wrap","consolidate","make","just","using","enforce","not","make","opt","go","just","use","check","change","wrap","try","use","try","add","put","use","leave","start","store","use","use","follow","calculate","keep","use"]},{"Key":"do it","Fragments":["after","is","this","like","once.","with","in","with","right","properly","that","without","this","that","all","yourself,","in","in","all","right","with","in","without","for","without","without","with","ok?","all","one","in","a","in","for","in","that","without","using","all","directly"]},{"Key":"it after","Fragments":["seeing"]},{"Key":"after seeing","Fragments":["your"]},{"Key":"seeing your","Fragments":["UInt16"]},{"Key":"your UInt16","Fragments":["question"]},{"Key":"UInt16 question","Fragments":[":)"]},{"Key":"question :)","Fragments":["I"]},{"Key":":) I","Fragments":["was","did","felt","also","guess","would","REALLY","think","personally","also","don't","didn't","came","tried"]},{"Key":"was doing","Fragments":["it","the","in","wrong,","the","SelectMany","the"]},{"Key":"doing it","Fragments":["less","with","quite","in","every","once","probably","when","through","mathematically","has","this","past","using","differently","this","with","this","on","on","in","with"]},{"Key":"it less","Fragments":["for","efficient.","ambiguous,","readable.","readable","readable.","error","readable"]},{"Key":"less for","Fragments":["memory"]},{"Key":"for memory","Fragments":["performance,"]},{"Key":"memory performance,","Fragments":["and"]},{"Key":"performance, and","Fragments":["rather"]},{"Key":"and rather","Fragments":["more"]},{"Key":"rather more","Fragments":["to"]},{"Key":"more to","Fragments":["help","the","it"]},{"Key":"to help","Fragments":["describe","polish","out","out","future","me","each","people.","each","you"]},{"Key":"help describe","Fragments":["the"]},{"Key":"describe the","Fragments":["expected","calculations"]},{"Key":"the expected","Fragments":["parameter's","List\u003cstring\u003e","formatting","syntax","values","state"]},{"Key":"expected parameter's","Fragments":["value."]},{"Key":" Yes","Fragments":["that's","thank","now","that's","-","the","the","I"]},{"Key":"Yes that's","Fragments":["true.","better,"]},{"Key":"that's true.","Fragments":["I","I"]},{"Key":"true. I","Fragments":["left","started","like","guess","guess"]},{"Key":"I left","Fragments":["it","them","some","the"]},{"Key":"left it","Fragments":["at","up","in"]},{"Key":"it at","Fragments":["VS2013's","first,","home.","the","around"]},{"Key":"at VS2013's","Fragments":["default"]},{"Key":"VS2013's default","Fragments":["template"]},{"Key":"default template","Fragments":["without"]},{"Key":"template without","Fragments":["considering"]},{"Key":"without considering","Fragments":["it."]},{"Key":"considering it.","Fragments":["I"]},{"Key":"it. I","Fragments":["typically","think","have","might","stuck","would","would","created","hadn't","think","have","find","didn't","had","think","know","don't","am"]},{"Key":"I typically","Fragments":["work","like","use","like"]},{"Key":"typically work","Fragments":["with"]},{"Key":"work with","Fragments":["MVC","the","Verses(11,","NUnit."]},{"Key":"with MVC","Fragments":["and"]},{"Key":"MVC and","Fragments":["only"]},{"Key":"and only","Fragments":["include","covers","use","if","practice","practice","comment","called","creating","have","one"]},{"Key":"only include","Fragments":["the"]},{"Key":"include the","Fragments":["necessary","NUnit","NUnit","NUnit","curly","original","bonus","namespace.","punctuation","Transforms_a_full_dataset()","bool"]},{"Key":"the necessary","Fragments":["references.","safety","leap"]},{"Key":" Since","Fragments":["both","your","your","performance","in","you","static","you","multiplication","you","you","tests","you've","the"]},{"Key":"Since both","Fragments":["of"]},{"Key":"both of","Fragments":["your","those","the","your","which","the","them","our","these"]},{"Key":"of your","Fragments":["if","'if'","code?","conditional","conditional","function,","\"Hey\"","fluency","comments","else","tests.","Add","conditionals","brain...","\"old\"","member","logic","code","Where","lengths","statements.","three","Hey","comments","Hey","three","code.","linq","last","tests","code","solution","current","particular","constants","class","code.","class.","ranges","values","most","comment","comment,","class","code?","code?","ExercismCSharp.leap","comparison","code.","if","code","if","conditional","if","methods.","implementation,","if"]},{"Key":"your if","Fragments":["statements","statements","statements.","statements","statements","statements,","constructs","condition?","statement."]},{"Key":"statements only","Fragments":["have"]},{"Key":"only have","Fragments":["one","to","one","one","the","one","the","a","to","one.","one","to","to","to","three","to","the","to","to","1","1"]},{"Key":"have one","Fragments":["child","more","return","return","return","too","exit","return","in"]},{"Key":"one child","Fragments":["line"]},{"Key":"child line","Fragments":["you"]},{"Key":"line you","Fragments":["could","use"]},{"Key":"you could","Fragments":["remove","have","move","even","link","eliminate?","think","have","use","also","create","use","replace","break","just","just","be","use","have","take","take","remove","use","have","do","do","have","probably","examine","actually","do","say","change","do","write","initialize","use","drop","add","add","optimize","use","do","use","pick","use","explicitly","put","also","use","also","eliminate","use","use","remove","get","make","just","also","use","write","look","just","pop","utilize","compare","get","tighten","change","do","index","improve","do","have","have","do","do","store","still","put","probably","calculate","remove","simplify","write","have","check","implement","implement","implement","generate","have","have","sort","do.","break","do","both","simplify","make","do","save","specify","have","replace","do","exit","keep","store","change","boil","have","replace","`break;`","have","just","write","probably","have","also","simplify","go","keep","change","var","do","divide","alternatively","just","just","probably","just","do","just","look","just","output","remove","just","build","build","also","delete","get","have","have","just","have","get","invert","effectively","just","try","have","find","simplify","replace","use","expose"]},{"Key":"could remove","Fragments":["the","all","the","noLetters","several","those","a","one","the"]},{"Key":"remove the","Fragments":["brackets:","duplication","WriteLine","requirement","list","constructor","sentence.HasNumbers()","main","static","comments","need","inner","\u003ccode\u003e.Sort()\u003c/code\u003e","'A'","superfluous","else","name","\"for\"","ternary","second","items"]},{"Key":"I chose","Fragments":["to","a","to","to","NOT","not","to","the","to","students,","this","to","to","this","this"]},{"Key":"chose to","Fragments":["instantiate","be","use.","go","go","use","return","do","use","use","calculate","do","implement","use"]},{"Key":"to instantiate","Fragments":["as","is","it"]},{"Key":"instantiate as","Fragments":["few"]},{"Key":"as few","Fragments":["variables","lines","lines"]},{"Key":"few variables","Fragments":["as"]},{"Key":"variables as","Fragments":["possible","the"]},{"Key":"as possible","Fragments":["just","that",":)","so","so","to","and","in","in","in"]},{"Key":"possible just","Fragments":["in-case"]},{"Key":"just in-case","Fragments":["this"]},{"Key":"in-case this","Fragments":["function"]},{"Key":"this function","Fragments":["is","built","is,","\"Do","in","uses","fulfills.","can","figure","with"]},{"Key":"function is","Fragments":["called","very","asking,","very","there,","not","too","necessary","designed","just","_way_","2"]},{"Key":"is called","Fragments":["many","mainly","on","multiple","a","and","only","multiple","the","you","and","it","twice","should","more","then","Ignore_non_allergen_score_parts.","a"]},{"Key":"called many","Fragments":["times."]},{"Key":"times. This","Fragments":["performance","would"]},{"Key":"This performance","Fragments":["boost"]},{"Key":"performance boost","Fragments":["lowers"]},{"Key":"boost lowers","Fragments":["the"]},{"Key":"lowers the","Fragments":["readability"]},{"Key":"the readability","Fragments":["of","though,","of","a","of","aspect","while","and","of","of","that's","by","of"]},{"Key":"readability of","Fragments":["my","your","my","code)","your","this","your","this"]},{"Key":"my code,","Fragments":["as","I","even","but","the"]},{"Key":"code, as","Fragments":["I"]},{"Key":"as I","Fragments":["could","thought","am","could","am","would","have","am","thought","don't","feel","was","have","don't","see.","feel","have","did.","have","work","was","read","did","see","can,","can.","went","said,","am","could.","can","can","came","saw","don't","go.","spend","can","want","expect","go.","finished","can't","have","said","understand"]},{"Key":"I could","Fragments":["have","have","be","think","because","have","have","get","have","take","see","end","have","see","definitely","improve","be","see","do","simply","not","think","streamline","remove","do","find","have","upvote","construct","of","skip","have","accomplish","think","have","think","think","do","make","make","minimize","make","have","have","not","have","get","remove","see","see","figure","throw","suggest","maybe","have","just","have","break","do","have","name","do","cut","use","document","always","create","use","create","have","change","work","try","use","check","do","easily","calculate","clear","add","have","do","have","do","using","combine","just","expand","drop","output","have","sit","not","not","do","have","get","make","use","submit","change","simplify","also"]},{"Key":"could have","Fragments":["variables","just","both","written:","all","done","created","been","Googled","as","a","used","done","the","returned","left","done","just","done","cut","condensed","been","been","just","been","made","also","made","looped","a","used","simplified","avoided","added","removed","used","a","simply","used","just","placed","the","been","just","used","demonsrtated","done","done","been","done","used","created","created"]},{"Key":"have variables","Fragments":["explaining"]},{"Key":"variables explaining","Fragments":["what"]},{"Key":"explaining what","Fragments":["each","that"]},{"Key":"what each","Fragments":["condition","exact"]},{"Key":"each condition","Fragments":["in","from"]},{"Key":"condition in","Fragments":["the","a"]},{"Key":"the if","Fragments":["is","statement","else","statements","tests","blocks","with","statement","that","statement","statements","logic","statements","test.","test","statements.","statement","statement","part","-","block","statement","statement","and","statements","line...","check","value","statements.","statement.","...else","to","statements","statements","check","statements","statements","the","statement","checks,","checks,","statements","statements","condition","condition","condition","statement","statement","()","else","and","nesting...","statement","statements.","statement","statements","statement","statement","statements","statement","condition.","condition","statement","statement.","statement,","statements.","statement","statement","statement","clause"]},{"Key":"if is","Fragments":["for.","not","redundant.","not"]},{"Key":" Keep","Fragments":["it","trying,","in","learning"]},{"Key":"Keep it","Fragments":["simple"]},{"Key":"it simple","Fragments":["stupid.","for"]},{"Key":" Added","Fragments":["curly","a","```char.IsLetter()```","check","guard","early","\"protection\"","check","exception","some","tests","two","check","Euler","StringBuilder"]},{"Key":"Added curly","Fragments":["braces."]},{"Key":"curly braces.","Fragments":["I","\"without","This","In"]},{"Key":"braces. I","Fragments":["usally"]},{"Key":"I usally","Fragments":["not"]},{"Key":"usally not","Fragments":["mix"]},{"Key":"not mix","Fragments":["with"]},{"Key":"mix with","Fragments":["and"]},{"Key":"with and","Fragments":["without."]},{"Key":"and without.","Fragments":["In"]},{"Key":"without. In","Fragments":["this"]},{"Key":"In this","Fragments":["sample","case...","case","case","case","exercise","scenario,","scenario,","case,","case,","scenario,","iteration,","iteration","iteration,","iteration","iteration,","iteration","case","context,","case,","case,","iteration,","case","case","case","case","method","example,","iteration","instance","case","case","particular","case,"]},{"Key":"this sample","Fragments":["only"]},{"Key":"sample only","Fragments":["one"]},{"Key":"only one","Fragments":["line","return","method.","I","or","that","seek.","that","you","method,","possible","possible","exit,","correct","parameter","line","design","place","dictionary","function","line","who","instance","to","apart","\"true\"","GetDay()","2"]},{"Key":"one line","Fragments":["was","of","of","and","without","solution.","option,","like","at","of","using","of","of","of","up,","if.","utility","function","solution","like","I","ternary","complex","and","return","says","and","of",":)","using","of","in","but","inside","though.","in","instead","(via","in","which"]},{"Key":"line was","Fragments":["needed"]},{"Key":"was needed","Fragments":["for"]},{"Key":"needed for","Fragments":["all","this","IsEquilateral()","this","optimisation."]},{"Key":"for all","Fragments":["allocations.","of","input.","the","the","the","testing","of","dates","of","verses?","the","leap","exercises,","cases,","the","leap","the","cases","the","of","words","types."]},{"Key":" Very","Fragments":["terse.","clean","nice!","clever,","nitpicking!","nice!","nice,","concise","minor","straightforward,","minor","interesting","close,","Clean","readable,","long","elegant!","nice,","clever","elegant","long","slick.","good","good","short","nice"]},{"Key":"like the","Fragments":["order","OrderBy","descriptive","minus","line","elegant","expressive","method","early-return","implied","use","public","comments","logic","usage","way","terse-ness","methods","other","modulus","\"does","extension","terseness","below,","use","side","idea","single","fact","use","clear","brevity","clever","Apple-incident:","readability","encapsulation","double","overuse","\u0026\u0026","use","changes","following","use","possibilities","ide","natural","PadRight","inner","use","use","expression","expression","way","IsQuestion","separate","`IsDivisibleByValue`","idea","readability","suggestion","name","\"cool\"","idea","use","try/catch","for","separation","concise","one","single","use","compactness","one-liner,","problem","approach","most","2nd","1","longer","ternary","use","way","idea","savings","'used","explicit","FIRST_GIFT","use","readability","\u003cb\u003estring.IsNullOrEmpty()\u003c/b\u003e","dictionary","use","Dictionary","Zip","lambda","way","right","Dictionary","concept","linq","creativity","app","use","approach","way","use","semantics","Year","naming","isInt","IsLeap","clever","way","mvc","constructor","use","simplicity","lambda","validation","binary","implementation.","right","command","simplest","joining","added","ref","way","use","names"]},{"Key":"the order","Fragments":["of","of","of","of","of","is","of","of","the","of","be","of","of","right,","they","they","or","of","(using","by","you","that","I","of","of","of","won't","switches","of","in","of","of","of","that","of","of","will","will","of","of","and","of","of","of","of","of"]},{"Key":"of commands,","Fragments":["means"]},{"Key":"commands, means","Fragments":["that"]},{"Key":"means that","Fragments":["the","\"return","errors","they","anything","each","Func1","if","the"]},{"Key":"the right","Fragments":["half","hand","hand","hand","way.","of","side","call","idea:","place.","thing","answer,","day.","thing","tool","amount","order","direction.","side","now,"]},{"Key":"right half","Fragments":["of"]},{"Key":"half of","Fragments":["the","this","line"]},{"Key":"the `\u0026\u0026`","Fragments":["is"]},{"Key":"`\u0026\u0026` is","Fragments":["only"]},{"Key":"is only","Fragments":["calculated","'chance'","going","that","supposed","complicating","valid","one","valid","the","one","2","whitespace?","made","an","32-bits","true","defined","defined","used","after"]},{"Key":"only calculated","Fragments":["if"]},{"Key":"calculated if","Fragments":["there"]},{"Key":"if there","Fragments":["is","are","is","is","might","are","was","was","is","are","is","were","are","is","is","is","was","is","are","is","is","is","is","are","are","are"]},{"Key":"a chance","Fragments":["for","of"]},{"Key":"chance for","Fragments":["the"]},{"Key":"for the","Fragments":["year","nitpick.","nitpick.","year","class.","wait.","variable","mod","tip.","program,","assignment","```Extensions```","comments?","obvious","variable...","code","feedback","divisor","```IsLeap()```","\"question\"","other","reply.","reminder!","feedback!","average","comment.","user","bonus","Year","reminder!","function","different","NucleotideCounts","sake","apostrophe.","most","readonly","if","last","input!","nitpick.","string","suggestion.","fewest","feedback.","insight.","feedback.","params,","what.","feedback","feedback.","Only_numbers","only_numbers","problem","\"compressed","year","actual","divisibility","test","simple","suggestion","next","code","help","comments.","entire","later","year?","first","input.","comment!","input.","feedback","link","feedback.","tip,","author","suggestion!","feedback!","nested","suggestions.","least","REGEX_PUNCTUATION.","acceptable","name","next","next","next","advice.","bonus","responses","feedback.","next","exercise","pointer!","feed","year","whole","majority","level","uppercase:","feedback","way","response","extra","int","letters.","int","letters.","NUnit","help","foreach","question","exercises","input!","last","X","feedback","bonus","tip!","off","yelling","cases","function","feedback!","two","rest","feedback!","feedback,","comments.","existence","string,","suggestions!","rest...yeah","exercise.","\"Sure\"","correct","feedback","compact","example,","loop","new","situation.","current","Reset","public","grades","overly","eye","user","job","harder","feedback!","lack","question.","outer","feedback!","feedback!","feedback.","bonus","uniqueness","input","outside","same","count","first","starting","first","summation","pointers","feedback.","specified","tip","enum,","explanation.","enumeration","unique","advice","ctor","grade,","phoneNumber","Add","sort.","score","input?","future","test","comment","class,","scenarios.","days,","logic","first","comment!","future.","key.","dictionary.","comments!","input!","original","numbers","hint.","hint","special","other","pointers","responds,","input.","repetition.","feedback!","suggestion!","user","position","tip!","size","suggestions.","zero-arg","'Math.Pow'","comments.","planet","solution","feedback!","tip","optimized","temporary","last","most","year","tips!","sake","feedback","food","feedback","user","result","regex","information.","given","AreAllCharactersTheSame","feedback","feedback.","clue","fun","responses.","feedback.","comment,","existence","unit","type","more","link!","feedback","millennia","first","```_baseWord```","helper","heads","sake","other","scale","new","first","feedback!","omission,","hint.","review.","Shouting_with_special_characters,","Cast()","new","Match","benefit","Nodes.","order","1-line","sieve","feedback.","return.","group","`else`","test"]},{"Key":"the year","Fragments":["to","a","%","%","is","is","falls","does","is","format","isn't","a","is","is","%","been","is","zero","divisible","validator?","in","value?","is","so","parameter","in","1582AD,","divisible","divisible","is","is","the","and","is","for","is","1337","is","is","can't","was","without","is","is","is","is","doesn't","is"]},{"Key":"year to","Fragments":["be","denote","be"]},{"Key":"to be","Fragments":["leap.","public,","hardcore,","in","explicit","a","bold","wrong.","aware","reused","a","a","grouped","notified","explained","more","transformed","your","in","used","performant.","unnecessary","a","\"Whoa,","one","more","already","considered","a","used?","composed.","evaluated.","more","a","classified","too","different?","converted","easily","checked","friendly.","able","able","used","removed","left","much","tested","a","considered.","static.","for","for","for","readable.","debate","done","a","of","a","as","Pascal","instantiated)","converted.","a","descriptive","more","an","a","done","used","a","careful","consistent","less.","explicit,","a","a","escaped.","able","null","run","the","this:","a","updated,","a","more","different.","the","run","more","a","really","overshooting","tested?","straight-forward","working","reactive","thorough.","more","more","more","more","more","the","more","more","more","more","more","more","more","more","bad","broken.","a","more","one","more","in","Year","duplicate","fiddled","doing.","treated","a","explicit","important","able","an","much","checked","made","indicating","counted.","easily","fancy","used","a","honest.","consistent","taking","anyway","very","Roster[grade].","unique","upper","made","made","generated","directly","minor","like","reusable,","static.","too","the","repeated","scalene.","\u003ccode\u003eWhere(ch","on","those","slower","instantiated.","cryptic.","clear","able","different","a","that","more","used","an","Scalene.","a","prime.","less","smaller","larger","only","proud","private.","able","prime.","Enumerable.Range(1,","changed","cleaner.","a","re-calculated.","made","fast.","less","correct.","100","reordered,","a","had","readable","quite","considered","sorted","straightforward","a","a","in","identical","able","in","more","able","the","using","necessary","named","more","checked","changed","a","upper","initialised","weighed","created","like","clever","1","readable,","properly","treated","expanded","used","much","able","expanded","safe.","accessible","accessed","eliminated.","mindful","more","good.","a","able","shown","loaded","under","more","the","necessary","\"Year\"","a","declared","and","correct","done.","empty","that"]},{"Key":" To","Fragments":["get","get","get","get","get","get","get","get","get","get","save","help","get","get","pick","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","keep","make","pass","this:","test,","keep","me,","me,","process","do","be","make","maintain","avoid","get"]},{"Key":"To get","Fragments":["the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the","the"]},{"Key":"get the","Fragments":["next","next","next","next","next","next","next","next","next","same","full","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","tests","job","max","same","program","leading","leading","CLI","tool","numeric","expression","same","order","test","hang","current","total","digit","side","idea","ending","thousands,","best","last","desired","urge","correct","same","test","correct","tests","NUnit","idea.","tests","same","modulo","test"]},{"Key":"the next","Fragments":["puzzle","iteration.","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","iteration.","coding","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle","puzzle.","person","object,","object,","object,","go.","line","line","iteration.","line.","character","100","odd","iteration.","iteration","might","function","element.","bit","requested","iteration","test","iteration","exercism.","exercise.","exercise","test","method","exercise.","site","iteration","iteration","iteration","line.","iteration.","submission."]},{"Key":"next puzzle","Fragments":["type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type","type"]},{"Key":"puzzle type","Fragments":["`exercism","`exercism","`exercism"]},{"Key":"type `exercism","Fragments":["fetch","fetch","fetch","fetch"]},{"Key":"`exercism fetch","Fragments":["csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`","csharp`"]},{"Key":"fetch csharp`","Fragments":["into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into"]},{"Key":"csharp` into","Fragments":["your","your","your","your","your","your","your","your","your","my","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your","your"]},{"Key":"into your","Fragments":["cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","cmd","function.","project","function","Grade"]},{"Key":"your cmd","Fragments":["window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window.","window"]},{"Key":" @sonia","Fragments":["if"]},{"Key":"@sonia if","Fragments":["you"]},{"Key":"if you","Fragments":["put","want","find","really","like","want.","are","came","broke","add","feel","really","use","pull","look","only","just","dropped","know","reverse","think","look","wanted","were","want","must","can","put","can","had","want","reverse","know","decide","care.","made","transformed","want","feel","are","break","approach","wanna","know","are","compile","don't","look","want","broke","have","leave","did","don't","actually","leave","are","can","are","re-arranged","inlined","reduced","were","initialize","didn't","really","really","can","have","have","can","evaluated","need","are","pass","can","break","were","need","make","could","did","put","need","are","wanted","had","are","need","just","are","assign","would","were","are","could","do","were","really","skipped","have","take","are","ciphertext","encode","eliminate","can't","need.","have","were","take","reword","explicitly","already","check","call","needed","don't","can","insist","don't","follow","used","can","don't","want.","want","hover","have","were","used","like.","wanted,","are","go","go","use","will.","try","carry","call","insist?","can.","interesting","have","go","reversed","still","consider","choose","did","did"]},{"Key":"you put","Fragments":["an","this","all","a","the","your","the","the","the","```using","the","there"]},{"Key":"put an","Fragments":["`@`","indication"]},{"Key":"an `@`","Fragments":["before"]},{"Key":"`@` before","Fragments":["my"]},{"Key":"before my","Fragments":["name"]},{"Key":"my name","Fragments":["in","and"]},{"Key":"name in","Fragments":["your","a","two"]},{"Key":"your comment","Fragments":["then",":)","more","was","to","about"]},{"Key":"comment then","Fragments":["it"]},{"Key":"then it","Fragments":["turns","would","is","could","is","can't","would","is","probably","obviously","is","would","would","_must_","must","dawned","made","should","would","means","is","is","is"]},{"Key":"it turns","Fragments":["into","out"]},{"Key":"turns into","Fragments":["a"]},{"Key":"into a","Fragments":["clicky","well","single","separate","separate","single","single","separate","private","`Year`","variable","new","class","generic","single","single","readonly","function","static","parse","dictionary","method",".dll","generator","linq","single","method","lambda","new","single","separate","single","single","single-line","package","separate","function,","single","list","sorted","single","local","local","static","flipped","single","key-val,","SortedDictionary?","reusable","single","string","new","DLL","normal","generator","bit-wise","1","generator","private","single"]},{"Key":"a clicky","Fragments":["link...."]},{"Key":" ...the","Fragments":["more"]},{"Key":"...the more","Fragments":["you"]},{"Key":"more you","Fragments":["know!"]},{"Key":" OK.","Fragments":["Check","I","I","In"]},{"Key":"OK. Check","Fragments":["out"]},{"Key":"Check out","Fragments":["the","the","the","my","this","Char.IsLetterOrDigit();","AddRange"]},{"Key":"out the","Fragments":["next","type","requirements","two","superfluous","min","whole","String","class","guy","guy","logic","string.isNullOrEmpty","second","closing","sort","functionality","class.","two","window","bool","\"string\".EndsWith(\"\")","key","ternary","string","2nd","prior","kind","kind","strings","help","data","score","best","trues","check","breaks","test","calculation","curly","whole","'else'","if","if","default","code","lines","SortedString"]},{"Key":" i","Fragments":["agree","feel","like","and"]},{"Key":"i agree","Fragments":["with"]},{"Key":"agree with","Fragments":["@marisol,","aidanw,","this.","the","@ezequiel","@mandy","him.","that","what","@amparo","@christian","you.","@jordon","pretty","you,","@jaycee","your","@malachi","@dorothea","you","@ashly","the","the","you","rprouse.","@ellie.","SamKablam's","@zechariah","@roman","@leda","@mike","@peter,","what","@ryder.","jaguilar.","@raymond,","you,","you","the","the","@willy","@raquel","@jadon","@donnell","your","strong","@jackson.","@lyric,"]},{"Key":"with @marisol,","Fragments":["```int"]},{"Key":"@marisol, ```int","Fragments":["key"]},{"Key":"```int key","Fragments":["="]},{"Key":"key =","Fragments":["entry.Key;```","3,","Numbers.Keys.ElementAt(i);"]},{"Key":"= entry.Key;```","Fragments":["is"]},{"Key":"entry.Key;``` is","Fragments":["redundant."]},{"Key":"The only","Fragments":["issue","thing","time","nitpick","odd","way","thing","thing","thing","solution","gotcha","thing","part","thing","thing","thing","difference","time","thing","thing","real","thing","thing","portion","way","difference","reason","thing","caveat","time","quibbling","solution","thing","issue","other","problem","thing","tweaks","other","thing","major","improvement","thing","comment","nitpicks","issue"]},{"Key":"only issue","Fragments":["here","I","I"]},{"Key":"issue here","Fragments":["is","but"]},{"Key":"is that","Fragments":["people","it","the","happy","comments","if","right?","these","%","I","you","you","someone","business","you","the","going","the","the","if","it","a","tests","enclosing","some","a","you","each","for","you","order","this","you","this","it","the","string.Equals","you","I","you","you","it","people","we","you","if","I","you","if","it","you","it","both","the","you","it","you've","you","you","you","you","you","I","you","if","you","I","var","you","I","what","I","I","the","these","your","you","you","those","it","you","I"]},{"Key":"that people","Fragments":["would","need"]},{"Key":"people would","Fragments":["probably","prefer","say","expect"]},{"Key":"would probably","Fragments":["send","make","break","want","move","be","describe","not","have","do","add","be","be","use","run","help.","use","have","use","be","be","enhance","use"]},{"Key":"probably send","Fragments":["in"]},{"Key":"send in","Fragments":["DateTime.Now.Year,","a","a","a"]},{"Key":"in DateTime.Now.Year,","Fragments":["which"]},{"Key":"DateTime.Now.Year, which","Fragments":["is"]},{"Key":"which is","Fragments":["defined","just","why","nice.","available","clearerer","illustrative","little","not","the","pretty","based","a","why","more","beautifully","expensive,","a","the","what","much","not","\"better\"","where","also","why","faster,","best.","bad","non-descript,","a","something","a","simply","hardly","not","expected","two","more","getting","only","more","unfortunate","then","a","just","good.","a","put","that","almost","a","why","perhaps","acceptable","shorter","not","clearer...","functionally","generally","far","an","more","the","not","a","not","an","better","more","invalid.","now"]},{"Key":"is defined","Fragments":["as","as","by"]},{"Key":"defined as","Fragments":["an","an"]},{"Key":"as an","Fragments":["int","int","int.","IEnumerable","extension","or","answer.","index","enum","argument","enum.","if/else","array.","attempt","enumeration","enumeration","example.","empty","integer/long.","int,","array","alternative","error","argument","array","extra","equivalent"]},{"Key":"an int","Fragments":["(even","so","version","instead","doesn't","key","via","(hint)","on","and"]},{"Key":"int (even","Fragments":["though"]},{"Key":"(even though","Fragments":["it","internally","it"]},{"Key":"though it","Fragments":["is","passes","was","isn't","means","is","is","was"]},{"Key":"a number","Fragments":["1","feels","of","of","of","of","below","would","is","in","of","(not","that","of","format"]},{"Key":"number 1","Fragments":["to"]},{"Key":"1 to","Fragments":["9999)...","3,","the","each","the","`to`\".","13","the","7","\"to\"","6","6"]},{"Key":"I wanted","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"wanted to","Fragments":["try","know","make","do","keep","call","use","take","express","learn","show","do","include","shift","you","use","optimize","see","do","calculate","make","use","make","do","do.","see","include","do","come","do.","keep","initialize","do","expand","return","add","see","discuss","use","have"]},{"Key":"to try","Fragments":["to","an","out","and","the","and","and","go","to","all","the","something","and","the","returning","to","and","to","and","to","to","to","out","only","to"]},{"Key":"try to","Fragments":["take","explain","figure","avoid","directly","make","keep","avoid","avoid","strike","strike","compile","avoid","avoid","avoid","read","implement","do","rethink","normalize","avoid","keep","devide","make","implement","be","remove","re-open","add","avoid","make","stay","use","do","avoid","keep","avoid","adapt","make","remember","do","come","internalize","compare","understand","assign","roll","use","refine"]},{"Key":"to take","Fragments":["the","another","care","the","the","a","a","another","a","a","your","it","a","a"]},{"Key":"take the","Fragments":["most","exercise","string","time","tests","one","one","time"]},{"Key":"most concise","Fragments":["method"]},{"Key":"concise method","Fragments":["to"]},{"Key":"method to","Fragments":["doing","remove","share","have","Int32","make","some","get","begin","check","run","sort","do","return","get","set","say","handle","catch","change","compute","keep","my","use","validate","compare","populate","form","ensure","avoid","blow","translate","translate","replace","create/update","retrieve","make","just","perform"]},{"Key":"to doing","Fragments":["this","lots"]},{"Key":"doing this","Fragments":["project.","without","again.","in","is","wrong?","exercise**"]},{"Key":"this project.","Fragments":["At","I"]},{"Key":"project. At","Fragments":["first"]},{"Key":"At first","Fragments":["I","I","I","I","I","I"]},{"Key":"first I","Fragments":["tried","had","thought","check","did","had","started","had"]},{"Key":"I tried","Fragments":["to","to","to","to","making","to","to","to","to","to","using","with","it","with","to","to","what","using","to","using","to","to","writing","it","to","and","that,","a","this","to","to","the","to","to","to","for","the"]},{"Key":"tried to","Fragments":["figure","do","compile","allow","do","resubmit","keep","strike","express","prevent","disambiguate","fail","use","keep","create","get","guarantee","compile","look","find","pass","calculate","do....","arrive","make","limit","split","make","cut","write","avoid","circumvent"]},{"Key":"to figure","Fragments":["out","out","this","out","out","out","out","the","that","out","out","out","out","out","out","out","out","out","out","out"]},{"Key":"figure out","Fragments":["away","how,","how","the","if","where","enough","why","what","the","is","how","how","why.","what","not","if","what","a","that","the","the","the","where","the","what","how","that","NUnit,","what","what","that","that","why","why","how","how","a"]},{"Key":"out away","Fragments":["of"]},{"Key":"away of","Fragments":["determining"]},{"Key":"of determining","Fragments":["if"]},{"Key":"determining if","Fragments":["the"]},{"Key":"the output","Fragments":["of","of","should","from","is","to","as","rather"]},{"Key":"output of","Fragments":["(yearEntered/4),","the","them"]},{"Key":"of (yearEntered/4),","Fragments":["/100),"]},{"Key":"(yearEntered/4), /100),","Fragments":["and"]},{"Key":"/100), and","Fragments":["/400)"]},{"Key":"and /400)","Fragments":["was"]},{"Key":"/400) was","Fragments":["an"]},{"Key":"was an","Fragments":["integer,","interface","expensive","ideal","EndsWith","exercise","input","automatically","attempt","error","error","order"]},{"Key":"an integer,","Fragments":["but"]},{"Key":"integer, but","Fragments":["I"]},{"Key":"but I","Fragments":["couldn't","usually","think","really","guess","am","_am_","prefer","myself","think","generally","initially","personally","think","think","think","felt","respectfully","think","like","think","think","have","feel","didn't","don't","decided","cannot","feel","know","prefer","don't","wasn't","am","think","don't","don't","have","felt","really","always","decided","wouldn't","work","can","don't","wasn't","feel","still","believe","would","think","just","can","think","usually","think","don't","find","prefer","didn't","would","think","got","later","like","wanted","really","am","realize","don't","thought","realized","stored","feel","found","again","think","think","have","always","don't","suppose","suppose","sort","couldn't","just","remember","think","don't","believe","would","would","think","feel","can't","think","don't","dont","suspect","think","stayed","keep","try","didn't","think","would","think","think","feel","guess","feel","just","believe","typically","would","feel","don't","think","figured","agree","don't","think","don't","won't","feel","didn't","absolutely","may","did","would","like","like","wonder","think","guess","couldn't","can","wanted","prefer","am","haven't","would","thought","don't","feel","always","see","used","think","don't","read","need","was","was","still","went","didn't","went","think","don't","really","think","did","like","am","tend","guess","don't","think","would","think","don't","haven't","liked","agree","would","would","think","know","will","had","ended","don't","find","wasn't","added","like","couldn't","see","tend","would","think","agree","think","question","wasn't","can't","was","think","can't"]},{"Key":"I couldn't","Fragments":["figure","think","come","find","be","find","wait","really","figure","find","resist","care"]},{"Key":"couldn't figure","Fragments":["out","out","out"]},{"Key":"out how,","Fragments":["and"]},{"Key":"how, and","Fragments":["I"]},{"Key":"was over","Fragments":["thinking","engineering"]},{"Key":"over thinking","Fragments":["it"]},{"Key":"thinking it","Fragments":["when","would"]},{"Key":"it when","Fragments":["I","you","I'm","the","Intellisense","it's","you","I","asked"]},{"Key":"when I","Fragments":["could","think","wrote","rush.","ran","advanced","read","switched","tried","saw","look","should","remove","submitted","read","wrote","switched","was","'Nitpick'.","enter","test","see","would","read","come","can.","added","looked","looked","didn't","have","see","read","have"]},{"Key":"have just","Fragments":["been","one","moved","as","switched","traversed","done","touched","used","used","included","discovered"]},{"Key":"just been","Fragments":["using","using"]},{"Key":"been using","Fragments":["modulus","it","C#"]},{"Key":"using modulus","Fragments":["because","(%)","on"]},{"Key":"modulus because","Fragments":["it"]},{"Key":"because it","Fragments":["does","reads","looks","makes","seemed","is","feels","is","becomes","will","will","required","stops","can","seemed","has","will","overloads","was","is","simplifies","returns","only","reduces","hadn't","does","is"]},{"Key":"it does","Fragments":["pretty","late","take","not","not","look","make","break","not","crash","and","not","not","exist,","more","what","not","the","with","make","-","not","close","look","not","provide","not","use","not"]},{"Key":"does pretty","Fragments":["much"]},{"Key":"pretty much","Fragments":["that.","an","a","explains","the","everything","waiting","trimming","because","what","never.","nailed"]},{"Key":"much that.","Fragments":["It"]},{"Key":"that. It","Fragments":["returns","self"]},{"Key":"It returns","Fragments":["0","a","the"]},{"Key":"returns 0","Fragments":["if"]},{"Key":"0 if","Fragments":["its","no"]},{"Key":"if its","Fragments":["an","length","an"]},{"Key":"its an","Fragments":["even","even","anagram.","anagram,"]},{"Key":"an even","Fragments":["division,","division."]},{"Key":"even division,","Fragments":["otherwise"]},{"Key":"division, otherwise","Fragments":["it"]},{"Key":"otherwise it","Fragments":["returns","would","is"]},{"Key":"it returns","Fragments":["the","true","false,","true,","true,","false,","true","a","incorrect","a","a","for","true"]},{"Key":"returns the","Fragments":["remainder,","conditional","result","modified","values","correct"]},{"Key":"the remainder,","Fragments":["so"]},{"Key":"remainder, so","Fragments":["if"]},{"Key":"so if","Fragments":["it","we","you","I","it","you","you","Kind","you","other","somebody"]},{"Key":"if it","Fragments":["==","is","turned","will","is","was","is","is","is","is","would","is","passes","is","were","means","is,","isn't","divisible","is","is","is","is","was","is","is","could","is","already","were.","makes","worked.","matches","does.","were","is","contains","is","is","does","does","doesn't","worked","is","was","contains","is","happens","isn't","exists","exists,","is","isn't","is","is","was","wasn't","was","is","does).","is","were","wins","has","is","is","is","is","matches","was","is","is","is","is","is","is","would","goes","evenly","goes","matched","did"]},{"Key":"it ==","Fragments":["0"]},{"Key":"== 0","Fragments":["then","fails,","fails,","\u0026\u0026","`","on","\u0026\u0026","?","\u0026\u0026","||","\u0026\u0026","||","\u0026\u0026","\u0026\u0026","to","||","\u0026\u0026","//","//","fails,","better","\u0026\u0026","\u0026\u0026","\u0026\u0026","is","(year","||","\u0026\u0026","\u0026\u0026","?","?","?","\u0026\u0026","\u0026\u0026","||","?",":","\u0026\u0026","||","\u0026\u0026","...)\u003c/code\u003e","will","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","?","?","\u0026\u0026","\u0026\u0026","||","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","\u0026\u0026","||","))","))\"","\u0026\u0026","\u0026\u0026"]},{"Key":"0 then","Fragments":["its","1,"]},{"Key":"then its","Fragments":["an","an"]},{"Key":" OK,","Fragments":["OK,","OK,","instead","so","so","I'll","I","this"]},{"Key":"OK, OK,","Fragments":["I","@abel,"]},{"Key":"OK, I","Fragments":["relent.","made","got"]},{"Key":"I relent.","Fragments":["It'll"]},{"Key":"relent. It'll","Fragments":["look"]},{"Key":"It'll look","Fragments":["ugly"]},{"Key":"look ugly","Fragments":["though"]},{"Key":"ugly though","Fragments":[";-)."]},{"Key":" Nice,","Fragments":["didn't","straightforward","if"]},{"Key":"Nice, didn't","Fragments":["know"]},{"Key":"didn't know","Fragments":["that","that.","I","about","you","or","about","what","this","you","about","about","about","about","how","there","about","that"]},{"Key":"know that","Fragments":["1E9","someone","a","\"i\"","I","nothing","any","and","the","DNA","_technically_","I","it's","thanks!","`char`","because","about","extension","existed!"]},{"Key":"that 1E9","Fragments":["syntax"]},{"Key":"1E9 syntax","Fragments":["existed"]},{"Key":"syntax existed","Fragments":["in"]},{"Key":"existed in","Fragments":["C#."]},{"Key":"in C#.","Fragments":[":)","See:","2nd","Visual","It","I"]},{"Key":" For","Fragments":["a","the","example:","nit-picks,","nitpicks,","the","example","the","readability,","the","the","the","checking","checking","IsSilence,","my","these","example","starters:","example,","a","this","the","the","the","this","this","example,","your","the","the","readability","something","me","something","the","purposes","example:","the","each","each","each","example","each","each","that","each","each","extra","each","each","each","the","this","some","my","discussions","consistency","ToString","completeness","example,","some","an"]},{"Key":"For a","Fragments":["console","while","bonus","general","simple","generator"]},{"Key":"a console","Fragments":["app","app.","application.","app","library.","app"]},{"Key":"console app","Fragments":["I'd","talk","is","is","for","piece","which,"]},{"Key":"app I'd","Fragments":["put"]},{"Key":"I'd put","Fragments":["a"]},{"Key":"put a","Fragments":["readkey","comment","space","method","break","few","try-catch"]},{"Key":"a readkey","Fragments":["at"]},{"Key":"readkey at","Fragments":["the"]},{"Key":"at the","Fragments":["end.","top.","top","top","bottom.","\"main\"","moment","end.","end","end","expense","same","Readme","time.","same","code,","top","very","top","bottom","top","top.","cost","end","end,","assignment","end","instructions","tests.","bottom.","pattern","original","first","end","wrong","ways","expense","possible","moment.","end","beginning","end,","first","end","code","end.","conversation","end","end.","top","bottom,","end.","poor","poor","same","code,","top.","moment)","end,","time","time","top","top,","top,","first","sequence","end","source","top","specified","top","time","same","time","other","correct","bottom","time!","end","current","current","minute","top","end.","moment","solution?","end,","testing","minute","other","number","logic","end","values","same","thing","text","inconsistent","end.","code","inner","implementation.","end","end","end,","end,","same","same","beginning","MSDN","end","end","end","top","same","top","end"]},{"Key":"There is","Fragments":["also","some","a","a","a","value","a","a","no","some","no","no","also","no","help","also","no","a","no","some","no","no","a","a","currently","little","no","no","an","a","no","no","access","a","no","a","a","no","a","quite","a","a","a","a","a","an","no","no","a","no","no","actually","still","a","one","really"]},{"Key":"is also","Fragments":["a","evenly","evenly","a","visible","no","unnecessary","indented.","a","a","covered.","an","called","evenly","evenly","true","evenly","evenly","divisible","not","divisible","much"]},{"Key":"also a","Fragments":["TryParse","Boolean","bit","cost","valid","lot","few"]},{"Key":"a TryParse","Fragments":["that","within"]},{"Key":"TryParse that","Fragments":["will"]},{"Key":"that will","Fragments":["return","shrink","eliminate","take","do","evaluate","pass","tell","burn","use","have","take","take","return","take"]},{"Key":"will return","Fragments":["a","`true`","you","cats.","0,","true,","string.Empty,","true","true","a","whether","false"]},{"Key":"return a","Fragments":["bool","deep","new","boolean","boolean,","boolean","bool","different","true/false.","deep","boolean","decimal...","boolean,","string","boolean","number","List","bool","boolean","bool)","tuple"]},{"Key":"a bool","Fragments":["true","as","anyway.","to","you"]},{"Key":"bool true","Fragments":["or"]},{"Key":"true or","Fragments":["false","false","false","false","false.","false","false,","false","false."]},{"Key":"or false","Fragments":["if","if","(irrespective","because","on","so","as"]},{"Key":"false if","Fragments":["it","year","not.","not."]},{"Key":"is successful","Fragments":["and"]},{"Key":"successful and","Fragments":["if"]},{"Key":"if true","Fragments":["output","return"]},{"Key":"true output","Fragments":["to"]},{"Key":"output to","Fragments":["a","match"]},{"Key":"to a","Fragments":["variable.","traditional","resource?","method","programmer","simple","return","number.","32bit","collection","point.","bunch","single","true","previous","more","single-entry","function","simple","variable,","Decimal...","decimal?","simple","switch","Portable","variable...","strongly","huge","linq","DLL.","semantic","method","private","char","character","string.","new","base-10","false,","useful","dictionary","single","private","List","public","2-line","character","decimal","dictionary","Robot.","particular","boolean:","song","list","very","SortedSet,","majority","variable,","dictionary.","single","string","YES","private","static","```TriangleException```","string","previous","dictionary","string","for","magic","suggested","single","single","functionally","possible","lot","Dictionary\u0026lt;Func\u0026lt;string,","one-liner.","youtube","flags","specific","more","variable","boolean","method","boolean","3","string,","tuple.","general","double","BitArray","solution","generic","list"]},{"Key":" This","Fragments":["will","is","looks","is","is","is","truly","code","looks","looks","looks","was","is","method","doesn't","looks","code","can","is","would","is","reads","is","will","is","is","does","is","looks","style","is","might","could've","is","solution","is","is","now","was","took","looks","passes","change","is","works.","is","technically","is","is","is","is","can","exercise","passes","codes","wasn't","is","is","is","is","solution","got","looks","is","looks","looks","isn't","is","would","passes","looks","looks","isn't","can","is","works,","excersize","is","looks","seems","will","seems","is","solution","iteration","looks","exercis","looks","has","code","is","way","works","one","will","looks","is","is","seemed","code","code","solution","is","is","is","was","code","just","code","exercise","works,","iteration","seemed","will","method","is","exercise","is","appears","required","is","seemed","seemed","avoids","was","also","is","is","one","looks","is","code","was","can't","works","could","was","was","obviously","exercise","looks","is","is","change","still","first","looks","exercise","method","is","is","is","candidates","is","is","looks","problem","looks","is","is","is","code","would","is","seemed","is","source","seemed","is","is","is","is","version","is","is","way","is","is","is","is","is","is","is","makes","isn't","is","exercise","solves","problem","is","really","exercise","is","iteration","is","was","is","also","does","is","does","exercise","algorithm","did","looks","is"]},{"Key":"This will","Fragments":["let","certainly","crash","not","throw","do","be","cause"]},{"Key":"will let","Fragments":["you","you"]},{"Key":"let you","Fragments":["verify","\"flatten\"","turn","know","capture"]},{"Key":"you verify","Fragments":["that"]},{"Key":"verify that","Fragments":["it","my","the"]},{"Key":"it parsed","Fragments":["successfully"]},{"Key":"parsed successfully","Fragments":["before"]},{"Key":"successfully before","Fragments":["proceeding."]},{"Key":" oh,","Fragments":["extension,"]},{"Key":"oh, extension,","Fragments":["ok."]},{"Key":" Should","Fragments":["I","the","the","the","the","the","the","probably","really","be","I","not","be"]},{"Key":"Should I","Fragments":["have","be"]},{"Key":"I have","Fragments":["done","to","seen.","to","a","divided","never","no","it","one","broken","to","started","seen","NUnit.","attempted","spent","slimmed","performed","`\"Whoa,","focused","two","no","the","no","never","seen.","to","always","worked","to","a","seen","done","just","seen","no","to","to","now","been","choose","one","to","never","no","a","to","exposed","is","to","to","to","simplified","to","worked","had","the","come","a","time","a","unless","only","seen","never","the","done","no","incorporated","more","the","never","enjoyed","never","enjoyed","found","a","made","to","to","a","a","just","taken","no","it","is","pondered","seen)","used","to","updated","to","a","an","no","a","seen","a","gotten","much","tests","seen","to","an","in","seen","a","a","updated","taken","added","one","that","it","it","simplified","already","learned","made","fixed","to","seen","seen,","seen","been","time","to","submitted","learnt","done","only","added","done?","to.","not","used","just","seen.","revised","issues","time","to","since"]},{"Key":"have done","Fragments":["the","this","a","that.","that","`if-then-else`","too!).","it","all","to","mine.","something","it.","the","the","this","it","it","here","with","this","it","that."]},{"Key":"done the","Fragments":["notDivisibleBy100","prime-factors","same","work","following?","latter,"]},{"Key":"the notDivisibleBy100","Fragments":["in"]},{"Key":"notDivisibleBy100 in","Fragments":["line"]},{"Key":"in line","Fragments":["8","11?","17.","if","18","18.","18","with","19","9","10","22-26","21","27"]},{"Key":"line 8","Fragments":["so"]},{"Key":"8 so","Fragments":["I"]},{"Key":"so I","Fragments":["don't","often","didn't","choose","also","have","went","feel","introduced","chose","was","have","don't","could","like","don't","can","would","appreciate","just","had","wasn't","made","got","probably","have","drew","decided","think","can't","think","would","guess","could","split","FINALLY","removed","got","totally","changed","wanted","have","went","can't","simplified","can't","didn't","decided","didn't","will","simply","(begrudgingly)","just","switched","inferred","ended","added","end","was","suspect","would","could","feel","was","could","didn't","tried","can","didn't","know","didn't","uploaded","could","thought","forget","knew","had","put","covered","just","don't","wrote","had","added","wasn't","needed","convert.","would","chose","guess","assume","trimmed","worry","could","didn't","don't","think","went","find","had","was","calculate","just","currently","updated","didn't","felt","see","wouldn't","wouldnt","went","guess","had","casted","didn't","could","prefer","adjusted","simplified"]},{"Key":"I don't","Fragments":["have","like","have","think","know.","quite","thin","think","know","feel","like","like","think","know","necessarily","think","think","know.","understand","think","like","see","feel","like","know","know","actually","have","use","have","think","think","just","know","like","like","think","even","think","know","like","use","have","have","have","think","understand","particularly","actually","like","bother","know","think","think","even","remember","think","have","know","care","know","think","find","really","think","think","think","like","have","know","know","know","think","know","need","think","think","remember","blame","think","think","know","know","like","like","share","think","want","think","think","see","expect","need","find","really","like","like","know","see","feel","know","use","know","have","know","know","think","know","know...","think","think","like","like","have","quite","like.","\"prefer","think","know,","see","think","know","think","think","like","know","like","want","know","suppose","exactly","see","know","know","have","use","think","think","use","really","really","think","think","mind","know)","know..","think","need","think","see","think","much","know","know","know","understand...","think","think","think","think","know","know","need","recall","think"]},{"Key":"don't have","Fragments":["to","that","NUnit","NUnit","to.","to.","to","to","to","to","to","to","to","to","a","the","to","to","to","to","to","an","an","to","to","to","to","to","the","to","a","to","the","to","to","to","to","to","to","a","one.","any","enough","to","the","to","to","to","to"]},{"Key":"have to","Fragments":["do","steal","learn","make","give","think","agree","read","nested","remove","include","look.","study","add","change","consider","start","start","admit,","think","check","worry","wrap","refactor","try","maintain","maintain","describe","change","give","instantiate","think","work","realise","think","say","be","go","be","examine","keep","use","not","check","check","remember","reverse","make","call","update","look","start","maintain","be","perform","dig","clone","figure","create","keep","call","really","maintain","take","be","read","go","disagree","read","admit,","update","use","trim","remember","spend","go","iterate","work","know","modify","go","do","change","do","change","cast","do","do","do","spend","compile","store","access","say","change","have","check","include","create","create","check","change","compare","keep","do","change","lookup","do","check","check","do","save","do.","loop","repeat","calculate","create","specify","spend","reverse","ever","say,","do","implement","go","call","check","remember","process","keep","fully","check","reference","repeat","use","revisit","do","keep","initialize","scan","check","check","be","loop","initialize","run","run","cast.","manually","look","include","keep","be","add","revisit","remember","change","check","process","repeat","create","calculate","check","worry","do","name","call","take","remember","take","admit","iterate","run","include","match","sort","trace","push","call","write"]},{"Key":"do !divisibleBy100","Fragments":["in"]},{"Key":"!divisibleBy100 in","Fragments":["line"]},{"Key":" Honestly,","Fragments":["skipping","I"]},{"Key":"Honestly, skipping","Fragments":["any"]},{"Key":"skipping any","Fragments":["of"]},{"Key":"any of","Fragments":["these","those","the","that,","the","the","the","the","the","the","them","the","those","the","the","the","the","the","the","your","the","the"]},{"Key":"of these","Fragments":["calculations","read-only","instructions.","characters","exercises","I","work.","exercises.","(or","here..."]},{"Key":"these calculations","Fragments":["would"]},{"Key":"calculations would","Fragments":["be","only","return"]},{"Key":"be the","Fragments":["microest","same.","same","most","first","2nd","knowledge","first","desired","fallback","case","first","most","same","most","unused","fastest","fastest","one","number","catch","first","max","logical","opposite","underlying","shorter","longest","unnecessary"]},{"Key":"the microest","Fragments":["of"]},{"Key":"microest of","Fragments":["optimizations."]},{"Key":"of optimizations.","Fragments":["That"]},{"Key":"optimizations. That","Fragments":["said,"]},{"Key":"That said,","Fragments":["you","that's","it's","I","if","if","this","could","I","I","I","beyond"]},{"Key":"said, you","Fragments":["could"]},{"Key":"have both","Fragments":["readability"]},{"Key":"both readability","Fragments":["and"]},{"Key":"readability and","Fragments":["optimization","brings","clarity","extendability.","sticking","dryness.","maintainability","clarity,","I","sophisticated","is","keep"]},{"Key":"and optimization","Fragments":["by"]},{"Key":"optimization by","Fragments":["using"]},{"Key":"by using","Fragments":["another","UInt16","built","else-if","a","this","the","a","a","an","a","bit","[Unicode","firstDayOfRightWeek.AddDays(days)","the","the","null","ContainsKey","LINQ","the","16bit","a","a","name","something","a"]},{"Key":"using another","Fragments":["well-named"]},{"Key":"another well-named","Fragments":["method."]},{"Key":"This is","Fragments":["just","my","the","a","because","of","pretty","about","my","probably","my","a","just","A","the","my","definitely","the","because","incomplete.","a","a","nested","perhaps","the","the","very","how","probably","greatly","a","a","a","because","the","the","really","known","massively","readable","kind","my","highly","much","a","what","not","particularly","_REAL_","the","what","just","really","terribly","really","a","what","a","a","my","better,","definitely","a","a","a","also","pretty","the","likely","interesting","actually","much","the","great,","because","just","incorrect","very","an","nowhere","micomanaging","what","my","not","very","a","the","what","my","a","a","getting","another","the","the","great","why","not","not","really","not","not","not","the","very","a","a","becuase","the","more","clean"]},{"Key":"is just","Fragments":["a","longer","a","not","more","slightly","a","a","being","my","a","a","a","nitpicking","my","a","fine.","make","a","semantics,","how","as","about","what","an","to","my","show","as","an"]},{"Key":"just a","Fragments":["personal","stylistic","class","field?","start.","few","hobbyist","FYI.","few","few","few","few","few","few","stylistic","bit","tiny","simple","pile","matter","style","few","few","few","few","few","few","few","few","few","few","few","few","few","few","suggestion","poke","habit.","thought.","waste","second","comment:","simple","few","bit","question","return"]},{"Key":"a personal","Fragments":["preference,","thing,","preference","thing","thing.","preference?","preference"]},{"Key":"personal preference,","Fragments":["but","though.","but","but","though."]},{"Key":"preference, but","Fragments":["I","I","I","you","I"]},{"Key":"I usually","Fragments":["like","only","forgo","avoid","do,","don't","stick","do","try"]},{"Key":"usually like","Fragments":["typing"]},{"Key":"like typing","Fragments":["out"]},{"Key":"typing out","Fragments":["the"]},{"Key":"the type","Fragments":["name","is,","so","can","of","can","within","of","out.","used","to","you","of","parameter.","in"]},{"Key":"type name","Fragments":["over"]},{"Key":"name over","Fragments":["using"]},{"Key":"over using","Fragments":["var","prebuilt"]},{"Key":"using var","Fragments":["in","all","doesn't"]},{"Key":"var in","Fragments":["most","situations","the"]},{"Key":"in most","Fragments":["situations.","IDE's","cases","real"]},{"Key":"most situations.","Fragments":["It's"]},{"Key":"situations. It's","Fragments":["more"]},{"Key":"It's more","Fragments":["typing","a","of","readable","symmetric"]},{"Key":"more typing","Fragments":["and"]},{"Key":"typing and","Fragments":["reading,","use"]},{"Key":"and reading,","Fragments":["but"]},{"Key":"reading, but","Fragments":["in"]},{"Key":"but in","Fragments":["my","idiomatic","any","the","larger","GenerateRandomName.","a","this","this","PhoneNumber,","this","some","the","this","production","cases","Verses()","a","this","the","program","production","this","the","my","general","case","one","Kind()","this","this","this","this"]},{"Key":"in my","Fragments":["experience,","first","opinion.","opinion.","submission","2nd","submission...","eyes","final","functions.","submission.","first","opinion.","first","last","null","version.","first","opinion.","current","C#","opinion.","head","ToUpper","testing.","next","O()s","comments.","solution.","head","opinion,","own","solution","life.","next","previous","enum","array.","line","mind","testing","Parse","head,","toolkit)","private","implementation,","research.","code,","code.","solution","opinion)"]},{"Key":"my experience,","Fragments":["it"]},{"Key":"experience, it","Fragments":["makes"]},{"Key":"it makes","Fragments":["understand","sense","no","the","me","the","things","it","it","the","little","it","sense.","the","for","them","the","way","the","your","for","it","the","the","it","it","it","the","it","it","the","for","the","sense.","the"]},{"Key":"makes understand","Fragments":["which"]},{"Key":"understand which","Fragments":["variable"]},{"Key":"which variable","Fragments":["is"]},{"Key":"variable is","Fragments":["what","a","an","actually","kind","not","unnecessary,","somewhat","actually"]},{"Key":"is what","Fragments":["easier.","I","I","the","people","happens","it's","you","I","if","I","I","my","I","I","I","was","is","I've","the","I","I","the","you","I","you","a","I"]},{"Key":"what easier.","Fragments":["I"]},{"Key":"easier. I","Fragments":["usually"]},{"Key":"usually only","Fragments":["use"]},{"Key":"only use","Fragments":["var","them","it","strings"]},{"Key":"use var","Fragments":["in","on","when","there.","wherever"]},{"Key":"in situations","Fragments":["like"]},{"Key":"situations like","Fragments":["line"]},{"Key":"like line","Fragments":["9,"]},{"Key":"line 9,","Fragments":["when"]},{"Key":"9, when","Fragments":["the"]},{"Key":"when the","Fragments":["constructor","build","logic","message","sequencing","actual","other","condition","individual","language","year","compiler","if","caller","class","year","code","else","strings","DNAString","supplied","supplied","expressions","maximum","dinosaurs","other","two","difference","dictionaries","year","method","return","input","Deque"]},{"Key":"the constructor","Fragments":["very","...","does","call.","chain.","could","assign","is","and","and","and","then","you","and","is","should","you","and","should","isn't","are","that","and","if","make","now","overload.","but","and","and","will"]},{"Key":"constructor very","Fragments":["clearly"]},{"Key":"very clearly","Fragments":["outlines"]},{"Key":"clearly outlines","Fragments":["what"]},{"Key":"outlines what","Fragments":["the"]},{"Key":"what the","Fragments":["type","```Silence```","method","rules","extension","purpose","problem","function","if","deal","expectation","string","method","code","method","old","code","code","`if`","value","variables","business","??","logic","operator","tests","style","syntax","specs","expected","unittests","tests","tests","test","submit","method","4","underlying","numbers","numbers","code","third","third","`this`","expression","method","individual"]},{"Key":"type is,","Fragments":["or"]},{"Key":"is, or","Fragments":["when"]},{"Key":"or when","Fragments":["type"]},{"Key":"when type","Fragments":["is"]},{"Key":"type is","Fragments":["obvious","zero.","`int`;","interesting-","very","defined","```IEnumerable\u003cT\u003e```,"]},{"Key":"is obvious","Fragments":["or","what"]},{"Key":"obvious or","Fragments":["irrelevant."]},{"Key":" Straightforward","Fragments":["exercise."]},{"Key":"Straightforward exercise.","Fragments":["Not"]},{"Key":"exercise. Not","Fragments":["much"]},{"Key":"Not much","Fragments":["to","interesting","interesting","sugar","point"]},{"Key":"much to","Fragments":["say","how","learn","puzzle"]},{"Key":"to say","Fragments":["about","that","that","the","I","there","that","is","mostly","the","the","that","\"Math.Pow(10,9)\"","here","something","anything","`if"]},{"Key":"say about","Fragments":["this."]},{"Key":" Experimenting","Fragments":["with"]},{"Key":"Experimenting with","Fragments":["a"]},{"Key":"with a","Fragments":["fluent","split","terse","significantly","straightforward","normal","lowercase","domain","return","great","Message","`DivisibleBy`","different","good,","LINQ","Ternary","ternary,","Ternary","```var```","good","foreach","static","static","traditional","dictionary","binary","guard","full","grain","self-evident","\"?\"","for","Linq","null","indexer","simple","string","variable","Dictionary","switch","where","console","recursive","bunch","single","variable","proper","new","function","question","question","string","simple","comment.","HashSet.","Join()","string","check","language","signature","SongVerse","lookup","1:1","lot","list","Dictionary","jagged","conditional","valid","Queue","List,","Tuple","solution","Dictionary","string","decent","generic","single","single","fresh","void","question","null","valid","less","'*'","new","fallthrough","nice","list","more","main()","mod.","new","loop","captured","getter","public","private","dictionary"]},{"Key":"a fluent","Fragments":["interface."]},{"Key":"fluent interface.","Fragments":["Does"]},{"Key":"interface. Does","Fragments":["it"]},{"Key":"Does it","Fragments":["add"]},{"Key":"it add","Fragments":["anything?"]},{"Key":"the OrderBy","Fragments":["call,"]},{"Key":"OrderBy call,","Fragments":["I"]},{"Key":"call, I","Fragments":["might"]},{"Key":"I might","Fragments":["have","have","also","expect","rename","suggest","return","have","even","change.","code","as","change","use","have","add","rewrite","be","improve"]},{"Key":"might have","Fragments":["to","moved","to","to","overcomplicated","missed","to","a","made","made","a","unintended","helped","complicated"]},{"Key":"to steal","Fragments":["that!","it","this","that."]},{"Key":"steal that!","Fragments":[":-)"]},{"Key":"I doubt","Fragments":["that"]},{"Key":"doubt that","Fragments":["variable"]},{"Key":"that variable","Fragments":["declaration","at","(although,","instead"]},{"Key":"variable declaration","Fragments":["slows"]},{"Key":"declaration slows","Fragments":["down"]},{"Key":"slows down","Fragments":["code"]},{"Key":"down code","Fragments":["in"]},{"Key":"code in","Fragments":["a","a","the","```Hey()```","the","a","else-blocks","one","there","that","an","twelve","Add()?","both","any","half.","the","the","the","earnest,"]},{"Key":"a measurable","Fragments":["way."]},{"Key":"measurable way.","Fragments":["Do"]},{"Key":"way. Do","Fragments":["you"]},{"Key":"Do you","Fragments":["have","know","think","disagree","find","feel","think","find","know","agree?","have","it","think","think","see","think","have","think","really","understand?","mean","have"]},{"Key":"you have","Fragments":["any","is","`\"Woah,","is","the","the","to","multiple","to","a","a","solved","just","to","a","learned","to","this","to","a","duplicate","to","to","to","tests.","to","to","pointed","not","not","nesting","to","to","more","to","made","shown).","some","to","a","just","seen/written","a","any","that","created.","done","a","to","already","to","to","the","to","to","to","to","to","to","if-else","in","to","ever","to","a","a","a","a","to.","to","tried","a","Main","is","created","to","autocompletion","the","an","a","in","to","to","declared,","a","multiple","not","it","towards","to","to","three","to","a","another","to","a","done","several","no","4","pointed","numbers","mixed","here"]},{"Key":"have any","Fragments":["reference","nesting","arguments","thoughts","way","idea","sort","thoughts","data","instance","benefit","joy","issues","input"]},{"Key":"any reference","Fragments":["or"]},{"Key":"reference or","Fragments":["benchmarks"]},{"Key":"or benchmarks","Fragments":["that"]},{"Key":"benchmarks that","Fragments":["would"]},{"Key":"that would","Fragments":["shed","probably","render","make","make","make","make","eliminate","complete","explain","make","reduce","be","be","be","cause","be","be","be","cause","ignore","be","make","have","be","be","have","be","cause","allow","make","take","be","return","tell","be","generate","mean","be","benefit","work....","have","have","be","again","be","be","mean","lead","become"]},{"Key":"would shed","Fragments":["some"]},{"Key":"shed some","Fragments":["light?"]},{"Key":"This looks","Fragments":["good","great.","pretty","pretty","great.","great.","like","ugly","way","like","cleaner,","good,","like","very","like","like","good!","good.","like","very","good","good."]},{"Key":"looks good","Fragments":["but","overall.","and","now","but"]},{"Key":"good but","Fragments":["the","i","it","Add","you"]},{"Key":"but the","Fragments":["methods","if","algorithm","conditional","word","solution","test","point","way","IsShout","final","lists","performance","syntax","assignment's","end","only","the","last","structure","Gregorian","requirements","requirements","problem","specs","same","system","TransformScore","code","point","variable","code","evidence","delay","example","only","later","whole","methods","source","use","anonymous","compiler","whole","last","readme","other","additional","apostrophes","point"]},{"Key":"the methods","Fragments":["are","and","with","to","are","as","that","separated","is","in","themselves.","says","anyway."]},{"Key":"methods are","Fragments":["really","not","Pascal","sufficiently","Pascal","working","long,","not","doing.","executables.","all","written","often","Pascal-cased"]},{"Key":"are really","Fragments":["specific","helping","important,","the","pronounced.","helpful."]},{"Key":"really specific","Fragments":["and"]},{"Key":"specific and","Fragments":["are","needs"]},{"Key":"and are","Fragments":["doing","more"]},{"Key":"are doing","Fragments":["very","in","here.","something,","by","it","later","work","less","it","all","all","almost","an","in","more"]},{"Key":"doing very","Fragments":["similar"]},{"Key":"very similar","Fragments":["things.","to","to","to","to"]},{"Key":"similar things.","Fragments":["I"]},{"Key":"things. I","Fragments":["think"]},{"Key":"think you","Fragments":["can","can","need","can","are","will","could","could","can","should","could","will","have","were","understood","should","really","can","are","have","have","need","need","missed","should","should","are","really","need","will","could","need","could","have","can","may","could","can","can"]},{"Key":"can get","Fragments":["some","some","rid","too!","it","rid","a","difficult","caught","rid","a","the","a","rid","rid","rid","away","rid",":smile:","the","rid","rid"]},{"Key":"get some","Fragments":["code","really","of","use","input","refactoring","sort","sort","of"]},{"Key":"some code","Fragments":["reuse","duplication","duplication","and","duplication"]},{"Key":"code reuse","Fragments":["and","as"]},{"Key":"reuse and","Fragments":["still"]},{"Key":"keep some","Fragments":["great"]},{"Key":"some great","Fragments":["readability"]},{"Key":"great readability","Fragments":["by"]},{"Key":"readability by","Fragments":["looking","having","extracting","clarify","removing","using"]},{"Key":"by looking","Fragments":["into","up"]},{"Key":"looking into","Fragments":["[extension","the"]},{"Key":"into [extension","Fragments":["methods](http://www.dotnetperls.com/extension)."]},{"Key":" Awesome.","Fragments":["Already"]},{"Key":"Awesome. Already","Fragments":["learning."]},{"Key":"Already learning.","Fragments":["Thanks!"]},{"Key":" Adding","Fragments":["an","a","**three**","to","to"]},{"Key":"Adding an","Fragments":["extension"]},{"Key":"an extension","Fragments":["method.","method","method","method","method,","method","method","adds","method","method","field","method","method","method","method","methods","to","function","method."]},{"Key":"extension method.","Fragments":["The","It's","It","The","I","If","It"]},{"Key":"method. The","Fragments":["only","list","extension,"]},{"Key":"only thing","Fragments":["I","I","I","I","to","it","I","I","left","I'm","I","I","that","you","I","I","I","I'm"]},{"Key":"thing I","Fragments":["don't","could","would","decided","would","can","question","do","don't","don't","would","could","just","kept","can","would","think","don't","noticed","would","like","would","can","can","was","did"]},{"Key":"don't like","Fragments":["is","that","single","those","the","breaking","breaking","loop","putting","shorthand","the","the","using","requirements","requirements","to","is","that","creating","using","using","run","seeing","generic","and"]},{"Key":"like is","Fragments":["that","descriptive","that"]},{"Key":"it seems","Fragments":["that","odd","to","to","more","like","like","to","sufficient","like","like","if","easier","to","ironic.","odd.","necessary.","like","to"]},{"Key":"seems that","Fragments":["the","you"]},{"Key":"the method","Fragments":["has","was","names","you've","more","returns","names","offers","an","is","are","and","makes","is.","does,","was","-","returns","was","has","and","name","was","body","being","multiple","confusing","should","was","name","in","name","take","take","take","take","take","take","take","and","of","comments.","and","names","names)","TwoToThePowerOf()","could","to","if","there.","names","with","less","call","every","while","return","group","calls","as","and","does","Count","calls","for","(well,","that","of","described","is","has","bool.","\"IsDivisible\""]},{"Key":"method has","Fragments":["to","a","always","to"]},{"Key":"has to","Fragments":["be","keep","be","be","look","come","go","assume","change.","be","be","allocate","process","traverse","scan","generate","do","assume","do","be","correspond","evaluate","be","be","be","be","be","come","be","be","be","be."]},{"Key":"be public,","Fragments":["so"]},{"Key":"public, so","Fragments":["it"]},{"Key":"so it","Fragments":["should","is","is","could","is","is","was","returns","must","is","looks","only","is","makes","reads","must","is","doesn't","all","could","reads","probably","shouldn't","was","is","really","would","seems","passes","passes","will","is","doesn't","was","would","can","must","not","works","requires","is","will","is","is","displays","reads"]},{"Key":"it should","Fragments":["be","be","read","be","be....but","be","use","be","never","just","compile...):","be","be","be","be","be","compile","go","solve","be","be,","on"]},{"Key":"should be","Fragments":["covered","able","a","OneHundred","capitalised","happy","contained","documented","in","replaced","public","`private`.","declared","the","able","able","good","the","valid","updated.","able","limit-1","false.","easy","done","a","simpler","separated","Public","bool","named","consistent","\"allCaps\"","empty","self","static.","calulated","strictly","thought","in","on","a","counted","something","readable,","able","one","private","consciously","sorted,","called","handled","adapted","constants","long","a","`year","\u003cb\u003eif","able","able","private","directly","a","3","used","chained","as","fine,","done,","simpler.","for","to","public?","able","strings","getting","more","able","doubled","a","covered","highlighted","declared","accessible","declared","declared","what","unnecessary","fast","a","cautious","private.","private","iterating","FirstOrDefault","epxosed","a","_edges!","in","removing","part","using","a","split","split","avoided","mostly","listed","replaced","readable","private","a","no","getting","closer","used,","part"]},{"Key":"be covered","Fragments":["in","or"]},{"Key":"covered in","Fragments":["tests,"]},{"Key":"in tests,","Fragments":["but","so"]},{"Key":"tests, but","Fragments":["*shrug*.","the","might","you're","consider","is","I","it's","checking"]},{"Key":"I will","Fragments":["check","work,","optimize","have","create","break","try","rework","say","iterate","have","stay","implement","make","rename","critque","be","still","point","look","get","correct","edit","take","only","implement","work","probably","look","need","probably","take","check"]},{"Key":"will check","Fragments":["that","that"]},{"Key":"check that","Fragments":["out,","an","twice.","result.","they","the","15","an","the","throws","the","uses","out"]},{"Key":"that out,","Fragments":["thanks"]},{"Key":"out, thanks","Fragments":["for"]},{"Key":"thanks for","Fragments":["commenting!","catching","letting","reminding","the","the","your","catching","that!","picking","the","pointing","the","taking","mentioning","the","looking","such","the","bringing"]},{"Key":"You can","Fragments":["make","use","refactor","just","move","do","put","also","take","use","use","simplify","use","see","simply","always","tighten","instead","use","do","reverse","do","mark","also","use","remove","do","use","clean","refactor","concatenate","evaluate","replace","do","use","use","combine","use","skip","do","look","replace","assume","save","then","write","pretty","do","get","replace","process","actually","break","probably","use","just","avoid","replace","change","fix","actually","transform","strip","also","simplify","replace","avoid","see","still","use","also","extend","double","look","express","use","compact","fix","read","simplify","just","convert","also","Linqyfy","get","chain","connect","probably","break","simplify","shorten","look","remove","use","remove","use","refactor","refactor","use","replace","do","refactor","try"]},{"Key":"can make","Fragments":["private","things","this","the","it","the","that","your","the","it","internals","things","your","your","it"]},{"Key":"make private","Fragments":["extension"]},{"Key":"private extension","Fragments":["methods.","method"]},{"Key":"extension methods.","Fragments":["Make","It's","Do","I"]},{"Key":"methods. Make","Fragments":["the"]},{"Key":"Make the","Fragments":["```Year```"]},{"Key":"the ```Year```","Fragments":["class","class.","class","class"]},{"Key":"```Year``` class","Fragments":["static","static,","would"]},{"Key":"class static","Fragments":["and","and","and","as","too.","so","to","because","to","and"]},{"Key":"static and","Fragments":["add","remove","removed","the","change","class","it's","accept"]},{"Key":"and add","Fragments":["the","additional","another","associated","it","more","an","the","the","all","it","2","2"]},{"Key":"add the","Fragments":["extension","year","random","random","same","'and'","value","number","associated","character","code","braces.","braces."]},{"Key":"the extension","Fragments":["method","methods.","methods","is","method","was","method","method.","method","method","method.","method","method.","methods","method"]},{"Key":"extension method","Fragments":["as","is","is","in","that's","was","version","feels","instead,","to","way","as","makes","and","to","was","so","on","on","for","`IsDivisibleBy`","only","to","for","on","would","for","for","from","from","available","makes","instead,","for"]},{"Key":"method as","Fragments":["a","it's","the","one","well","at","you","can"]},{"Key":"as a","Fragments":["private","series","single","statement","matter","double","method","regular","character","name!","variable","dependency.","note,","ternary","null","character","character","sieve.","matter","static","IEnumberable","cmd","single","slight","gotcha,","parameter","parameter,","variable","variable","learning","friendly","general","developers","hobby.","general","char","string.","word","general","proper","single-line","single","double?","logic","single","double.","special","generator,","standalone","function,","`string`","defensive","single-line","helper","result.","parameter.","stylistic","T2.","private","porperty","facade","single","result.","stub","Linq","method","class","function","choice","returnMessage","local","separate","second","generator","method"]},{"Key":"a private","Fragments":["method","method","property","extension","instance","setter","function","one,","static","method,","or","setter","variable","'set'?","variable.","or","method","setter."]},{"Key":"private method","Fragments":["within","will","that","names","with","would","adds","generator"]},{"Key":"method within","Fragments":["the"]},{"Key":"within the","Fragments":["```Year```","same","method?","method","context","function.","if","phrase","IsLeap","IsAllCaps()","'isAnagram'","Select","constructor","Main"]},{"Key":"```Year``` class.","Fragments":["Everything"]},{"Key":"class. Everything","Fragments":["in"]},{"Key":"Everything in","Fragments":["the"]},{"Key":"the class","Fragments":["is","name","though.","and","name.","in","as","methods,","static","=\u003e","so","Roster,","with","as","name","static,","static","static,","only","is","via","a","to","also","public","static","might","static","to","as","with","static","Leap.","static.","to","is","or","be","do","it"]},{"Key":"class is","Fragments":["already","clever","just","instantiated","minimal,","not","expecting.","ok","a"]},{"Key":"is already","Fragments":["static","implied","an","the","a","readable.","in","sorted.","returning","a","in","in","merged","built"]},{"Key":"already static","Fragments":["so"]},{"Key":"static so","Fragments":["this","it","the"]},{"Key":"so this","Fragments":["shouldn't","passes","should","is","is","iteration","is"]},{"Key":"this shouldn't","Fragments":["cause"]},{"Key":"shouldn't cause","Fragments":["any","that"]},{"Key":"cause any","Fragments":["problems."]},{"Key":" Another","Fragments":["minor","final","example","LinQ","thing,","thing,","thing","is","thought","concern","thing","comment.","question.","dictionary"]},{"Key":"Another minor","Fragments":["gripe;"]},{"Key":"minor gripe;","Fragments":["parameters"]},{"Key":"gripe; parameters","Fragments":["are"]},{"Key":"parameters are","Fragments":["camelCase"]},{"Key":"are camelCase","Fragments":["by"]},{"Key":"camelCase by","Fragments":["convention"]},{"Key":"by convention","Fragments":["in"]},{"Key":"convention in","Fragments":["C#"]},{"Key":"in C#","Fragments":["(you","and","since","is","(camel","before,","that","there","regular","because","until","to","is","much","but","so","so"]},{"Key":"C# (you","Fragments":["had"]},{"Key":"(you had","Fragments":["this"]},{"Key":"had this","Fragments":["right"]},{"Key":"this right","Fragments":["in"]},{"Key":"right in","Fragments":["iteration","the","that","that","that","the"]},{"Key":"in iteration","Fragments":["1).","1."]},{"Key":" Pulled","Fragments":["some"]},{"Key":"Pulled some","Fragments":["static"]},{"Key":"some static","Fragments":["calculations"]},{"Key":"static calculations","Fragments":["out"]},{"Key":"calculations out","Fragments":["of"]},{"Key":"out of","Fragments":["the","range).","this","it.","date.","these","your","the","the","the","the","range","dev","sync","favor?","hand","a","sync","16","synch","bounds","the","the","the","the","sync","such","order","hand!","the","range","work.","work","bounds","sync.","place","place","scope"]},{"Key":"the select.","Fragments":["I"]},{"Key":"select. I","Fragments":["am"]},{"Key":"I am","Fragments":["not","not","curious","known","pretty","with","a","pretty","trying","using","doing","doing,","done","a","reading","envious","just","not","not","kinda","not","not","not","a","guessing","not","envious","not","getting","working","not","unable","with","not","returning","also","not","really","note","going","not","a","new","also","nearly","sure","wondering","starting","using","pretty","not","not","not","pretty","here","very","trying","constructing","being","curious","writing","parsing","not","going","used","sure","open","confused.","not","seeing","sure","agree","agree","outtahere","happy","not","concerned","surprised","not","doing","fairly","fairly","having","also","submitting","going","still","sure","in","not","outtahere","reading","not","sure","confident","writing","undecided","looking","not"]},{"Key":"am not","Fragments":["sure","sure","even","sure","sure","that","convinced","a","sure","doing","a","very","going","completely","sure","proficient","sure","100%","sure","***overly***","too","a","in","quite"]},{"Key":"not sure","Fragments":["if","about","how","why","it's","if","what","that","I'm","about","if","if","about","how","about","what","I","if","if","I","what","whether","this","what","if","if","which","why","the","the","I","of","your","it's","which","!=","about","if","if","how","why","I","if","exactly","how","if","if","I","of","why","but","about","I","about","which","about","about","why:","if","which"]},{"Key":"sure if","Fragments":["maybe","the","that","this","the","there's","that","I","there's","this","you","those","System.Collections.Generic","it's","there","you","you","there's","this","the","it","it","it's","I'm","one","serves","that's","that's"]},{"Key":"if maybe","Fragments":["the"]},{"Key":"maybe the","Fragments":["compiler","casing","best"]},{"Key":"the compiler","Fragments":["is","is","will","does","because","to","builds","wasn't","to","error,","optimize","was","optimizes","yelled","complaints.","could"]},{"Key":"compiler is","Fragments":["smart","concerned","smart"]},{"Key":"is smart","Fragments":["enough","enough"]},{"Key":"smart enough","Fragments":["to","to","to"]},{"Key":"enough to","Fragments":["do","exclude","eliminate","fit","be","analyze.","fit","solve","be","optimize","shove","me.","do","stand","inline","know","just","justify."]},{"Key":"do this","Fragments":["for","example.","with",":)","than","in","much","exact","in","on","instead","with","should","for","very","-","out","all","so","without","check","without","without","as","with","within","within","too!","using","without","using","without","without"]},{"Key":"this for","Fragments":["me.","class","Python","the"]},{"Key":"sure about","Fragments":["casting","the","the","the","the","the","the","the","other","is","the","checkdigit","the"]},{"Key":"about casting","Fragments":["the"]},{"Key":"casting the","Fragments":["input"]},{"Key":"the input","Fragments":["`.ToUpper`in","actually","and","is","string","string","out","matches","and","is","validation","validation","strings","and","stream","silence","to","in","before","strings","string(s),","is","string","before","string","string.","re:","string","CheckNum()","string","as","sequence","sequence","is","value,a","validation?","is","type","string","string","is","data","word","argument","parameter","is","phrase","phrase","was","was","is","string,","and","to","as","at","into"]},{"Key":"input `.ToUpper`in","Fragments":["the"]},{"Key":"`.ToUpper`in the","Fragments":["constructor."]},{"Key":" It","Fragments":["took","looks","seems","is","is","is","is","still","think","has","was","is","is","is","is","reads","should","is","is","should","means","is","is","never","can","seems","is","is","seems","all","is","took","turns","works,","works,","works,","works,","works,","looks","would","passes","looks","seems","is","seemed","is","can","is","is","looks","looks","is","can","may","is","works,","is","all","looks","wouldn't","may","took","used","wasn't","is","wouldn't","didn't","takes","fails","makes","didn't","probably","would","wasn't","is","looks","feels","doesn't","is","feels","is","would","is","came","is","passes","is","might","could"]},{"Key":"It took","Fragments":["me","me","three","me","me","me","me"]},{"Key":"took me","Fragments":["a","a","a","a","awhile","much","10","a","forever","forever"]},{"Key":"me a","Fragments":["second","minute,","while","favor","minute","hint?","bit","chair,","throne.","headache,"]},{"Key":"a second","Fragments":["to","revision","thought","class)","parameter","time","iteration.","iteration","generic","iteration.","shot","iteration","time?","iteration.","iteration.","parameter."]},{"Key":"second to","Fragments":["get"]},{"Key":"to get","Fragments":["what","it","only","the","to","some","reminder","it","an","rid","unexpected","an","in","the","past","everything","everything","it","it","a","it","code","the","out","this","them","everything","rid","the","the","punctuation","around","it","the","that","access","your","one","the","the","an","more","the","all","the","distance.\");","myself","that","around","this","all","the","the","the","the","into","the","past","tedious.","out","to","\"\"","one","the","the","rid","the","the","the","rid","the","the","right,","rid","them","into","_all_","the","the","us","new","any","this","rid","it","rid","anything","the","to","difficult?","this.","an","rid","these","rid","nunit","something"]},{"Key":"get what","Fragments":["you","i"]},{"Key":"what you","Fragments":["were","may","mean","expect","want","are","care","are","are","are","should","were","saying","mean.","think","did","said","have.","suggested","mean","keep","think","were","miss","were","mean.","suggest","want","are","mean.","test","find.","are","want","want,","meant,","don't","mean.","use","had","meant.","have","have"]},{"Key":"you were","Fragments":["saying,","posting.","going","using","after.","trying","going","given","really","writing","processing","doing","to","to","to","doing.","doing,","given","explicit","to","just","allergic"]},{"Key":"were saying,","Fragments":["but"]},{"Key":"saying, but","Fragments":["now"]},{"Key":"but now","Fragments":["I","it","that","you","I","looking"]},{"Key":"I see.","Fragments":["So"]},{"Key":"see. So","Fragments":["an"]},{"Key":"So an","Fragments":["extension","optimized"]},{"Key":"is simply","Fragments":["one","a","unnest"]},{"Key":"simply one","Fragments":["that"]},{"Key":"one that","Fragments":["has","simply","is","didn't","built","is","way."]},{"Key":"that has","Fragments":["a","some","`finally`","a","good","Collection","proper","no","the"]},{"Key":"has a","Fragments":["'this'","99/100","1/400","99/100","1/400","\"return\"","space","wonderful","1/400","few","|","built-in","flaw","```decimal```","nice","character","better","number","function","better","reference","bonus","method","property","single","few"]},{"Key":"a 'this'","Fragments":["marking"]},{"Key":"'this' marking","Fragments":["a"]},{"Key":"marking a","Fragments":["param.","whole","variable"]},{"Key":"a param.","Fragments":["Got"]},{"Key":"param. Got","Fragments":["it."]},{"Key":"Got it.","Fragments":["I'll"]},{"Key":"it. I'll","Fragments":["clean"]},{"Key":"I'll clean","Fragments":["that"]},{"Key":"clean that","Fragments":["up","up."]},{"Key":"that up","Fragments":["now.","to","to"]},{"Key":" Yes,","Fragments":["that","that","it","I","that","either","I","it","good","a","you","as"]},{"Key":"Yes, that","Fragments":["looks","is","was"]},{"Key":"that looks","Fragments":["great.","like","good,","ok...it's"]},{"Key":" Looking","Fragments":["good","better.","great","up","over","for","at","at","for","through","at","for"]},{"Key":"Looking good","Fragments":["so"]},{"Key":"good so","Fragments":["far,","far.","far,","far.","far.","far.","far.","far.","far.","far,","far."]},{"Key":"so far,","Fragments":["but","couple","but","I","so","got"]},{"Key":"far, but","Fragments":["I","thought"]},{"Key":"make things","Fragments":["more","more","easier","clear","simpler.","clearer."]},{"Key":"things more","Fragments":["readable","terse."]},{"Key":"more readable","Fragments":["and","if","and","to","in","without","to","in","and","and","**foreach**","and","and","in","without?","to","or","and","and","than","than","too.","by","in","than",":)","to","to","to","than","-","or","as","than","and","in","solution.","by","if","in","IMHO.","using","to","or","and","or","IMHO","or","to","IMHO","this","as","using"]},{"Key":"readable and","Fragments":["terse.","optimized","prevents","the","compiler","expressive","expressive","clear.","far","match","there","not","understandable?","expressive","true","not","isn't","efficient","concise?","it","less","faster"]},{"Key":" Messy","Fragments":["first"]},{"Key":"Messy first","Fragments":["stab."]},{"Key":"first stab.","Fragments":["Gets","Keep"]},{"Key":"stab. Gets","Fragments":["the"]},{"Key":"Gets the","Fragments":["tests"]},{"Key":"the tests","Fragments":["passing,","run","for","to","anyway).","out","not",":)","in","are","properly.","are","and",":(","still",":)","exactly","have","pass.","since","to","in","succeed","even","they","have","pass,","for","are","are","yourself","but","to","forced","had","as","by","aren't","passes,","should","pass","some","every","themselves.","pass,","to","only","while","and","without","passed.","while","and","without","passed.","so","pass","are","and","are","regularly.","supplied","is","were","failed.","I","as","any","wouldn't","would","included","are,","require","are","through","included","was","but","would","incorrectly","be","are","are","but","but","so","were","to","I","when","check","which","must","themselves.","only","(too","and","if","expect","and,"]},{"Key":"tests passing,","Fragments":["but"]},{"Key":"passing, but","Fragments":["indented"]},{"Key":"but indented","Fragments":["`if`s"]},{"Key":"indented `if`s","Fragments":["are"]},{"Key":"`if`s are","Fragments":["ugly!"]},{"Key":" Pretty","Fragments":["clear!","clear!","sure","straightforward,","good,"]},{"Key":" Possibly","Fragments":["the","naming"]},{"Key":"Possibly the","Fragments":["`Order`"]},{"Key":"the `Order`","Fragments":["extension"]},{"Key":"`Order` extension","Fragments":["method"]},{"Key":"a bit","Fragments":["opaque","arbitrarily","difficult","the","the","more","\"messy\"","odd","cryptic,","of","confusing.","premature.","better,","more","harder","to","more","from","opaque","so","better","more","long","off","more","easier","with","annoying","overboard.","verbose","of","of","harder","difficult","stumped","confusing","of","harder","more","noobish","too","silly...","wasteful,","clearer","(initially","faster.","disappointing","anyway...","more","redundant","with","inefficient","inefficient,","more","when","too","untidy","of","hard","more","more","more","cumbersome","awkward","more","more","more","more","of","more","difficult","more","of","more","faster","contrived.","contrived.","weird,","messy.","more,","unreadable","over-engineered","tricky","crazy","for","torn","more","messy.","overkill","more","more","odd","picky","less","disheartening","strange","odd.","hard","hard","easier","cryptic.","misleading.","inefficient.","from","strange,","more","of","messy?","more","brute","more","more","of","of","and","inconsistent).","with","more,","of","more","more","more","counter-intuitive","longer","clearer.","more","so","off","brutish.","of","overcomplicated.","hard","(instead","dodgy.","rubbish.","hard","on","here","by","more","over","heavy","more","more","shorter","faster.","of","over","more"]},{"Key":"bit opaque","Fragments":["and"]},{"Key":"opaque and","Fragments":["would"]},{"Key":"and would","Fragments":["give","then","just","make","not"]},{"Key":"would give","Fragments":["people"]},{"Key":"give people","Fragments":["surprises"]},{"Key":"people surprises","Fragments":["if"]},{"Key":"surprises if","Fragments":["it"]},{"Key":"it turned","Fragments":["up"]},{"Key":"turned up","Fragments":["in"]},{"Key":"up in","Fragments":["their","the","a","line","a","the","constructor"]},{"Key":"in their","Fragments":["intellisense","own","logical","name.","head:","string."]},{"Key":"their intellisense","Fragments":["elsewhere"]},{"Key":"intellisense elsewhere","Fragments":["in"]},{"Key":"elsewhere in","Fragments":["a"]},{"Key":" Thanks","Fragments":["for","for","for","@wava","for","for","again","for","for","for","for","for","for","for","for","@gregg",":)","for","for","for","for","for","for","for","for","for","for","for","for","for","so","for","@marielle.","for","to","for","for","for","for","for","for","very","for","for","for","for","for","for","for","again","for","for","@israel,","for","again!","for","for","for","for","for","for","for","-","for","for","@moriah","for","so","for","for","so","for","for","Tyler1986,","for","a","for","@mariah","!","for","@kali","for","for"]},{"Key":"Thanks for","Fragments":["the","letting","the","your","your","the","the","the","the","the","the","the","the","the","the","the","the","your","spotting","the","the","the","the","the","the","the","your","the","your","the","reviewing","the","the","your","your","the","your","expanding","the","the","the","that","the","the","the","the","a","taking","the","the","the","the","the","the","your","you","your","the","the","the","the","that","the","the","all","the","the","the","the","the","the","the","the","the","the","the","the","helping","the","your","all","the","the","looking","fixing","your","not","that,","your"]},{"Key":"the nitpick.","Fragments":["I'll"]},{"Key":"nitpick. I'll","Fragments":["have"]},{"Key":"I'll have","Fragments":["to","to","to","a","to","to","another","to","a","to","a","to","to"]},{"Key":"to learn","Fragments":["about","some","on","C#","about","C#","about","the"]},{"Key":"learn about","Fragments":["2","it.","LINQ!","extension","'\u003c\u003c'"]},{"Key":"about 2","Fragments":["and"]},{"Key":"2 and","Fragments":["3","add"]},{"Key":"and 3","Fragments":["some","for"]},{"Key":"3 some","Fragments":["more."]},{"Key":"Looking better.","Fragments":["Couple"]},{"Key":"better. Couple","Fragments":["things"]},{"Key":"Couple things","Fragments":["to","of"]},{"Key":"things to","Fragments":["look","look","improve","think","think","think","think","think","think","think","think","think","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","consider.","throw","my"]},{"Key":"to look","Fragments":["at","at","up","at","at","into","at","into.","at","at","into","at","at","it","at","and","into","for","for","at","at","at","for","at","at","at","at","for"]},{"Key":"1. ```IsLeap```","Fragments":["can"]},{"Key":"```IsLeap``` can","Fragments":["be"]},{"Key":"can be","Fragments":["one","moved","over-used.","explained","hard","updated","removed.","eliminated?","named","more","reduced","really","ran","more","simple,","less","modified.","done","removed.","simplified","useful","simplified","shrunk","done","replaced","chained","replaced","more","deleted,","written","refactored","coded","compiled","simplified?","more","captured","a","removed.","changed","inferred","shortened","made","more","altered","condensed","a","static","written","treated","changed","treated","shortened","used","confusing","treated","written","made","replaced","refactored","turned","done","refactored","reduced","more","improved?","costly","pretty","used","refactored","made","used","combined?","simply","a","thrown","written","improved","tough","factored","written","combined","simplified,","treated","passed","argued,","argued","effected","used","improved.","made","solved","done","simplified","all","hard","argued,","called","simpler","treated","passed","considered","argued","condensed","international-friendly","huge","read","used","iterated","no","difficult","an","expensive.","written","useful","really","a","argued,","used","readonly","readonly","really","universally","\u003cb\u003ereally\u003c/b\u003e","still","your","refactored","done","simplied","replaced","done","made","made","made","made","hard","made","more","100%","made","refactored","reused.","considerably","replaced","replaced","erplaced","replaced","done","replaced","a","shorter","simplified","replaced","included","used","used","refactored","refactored"]},{"Key":"be one","Fragments":["line","line","line","line","regex","of","of","return,"]},{"Key":"line of","Fragments":["code","code.","code.","code","code.","code.","code","comparisons.","numbers","code,","code,","code","code","conditions.","work","code,","code"]},{"Key":"of code","Fragments":["if","to","(line","reviews","blocks.","and","as","within","at","for","clearly,","this","but","with","easier","to","into","for","and","brackets","for","and","it","and","is","and","and","(ignoring"]},{"Key":"code if","Fragments":["you"]},{"Key":"you want","Fragments":["(having","it","(words","something","to","to","a","to","to","to","to","me","to","to","to","to","to","to","a","a","the","Enumerable(13,","others","to","to","a","to","to","to","to"]},{"Key":"want (having","Fragments":["an"]},{"Key":"(having an","Fragments":["```if```/```else```"]},{"Key":"an ```if```/```else```","Fragments":["block"]},{"Key":"```if```/```else``` block","Fragments":["that"]},{"Key":"block that","Fragments":["just","they"]},{"Key":"that just","Fragments":["returns","returns","describe","means","wraps","makes","means","be","means","counted"]},{"Key":"just returns","Fragments":["```true```/```false```","the"]},{"Key":"returns ```true```/```false```","Fragments":["is"]},{"Key":"```true```/```false``` is","Fragments":["a"]},{"Key":"a tell-tale","Fragments":["sign)."]},{"Key":"2. There","Fragments":["is"]},{"Key":"is some","Fragments":["code","help","cases","funky","fancy","sort","memory"]},{"Key":"code duplication","Fragments":["that","into","you","that","(what","in","going"]},{"Key":"duplication that","Fragments":["can","can"]},{"Key":"that can","Fragments":["be","be","make","be","be","be","be","be","bypass","mess","only","just","then","be","get","be","be"]},{"Key":"moved into","Fragments":["another","another","private","a","Grade()","Main"]},{"Key":"into another","Fragments":["method.","method.","function.","(or","method","method."]},{"Key":"3. For","Fragments":["bonus"]},{"Key":"For bonus","Fragments":["points"]},{"Key":"bonus points","Fragments":["(if","and"]},{"Key":"points (if","Fragments":["it"]},{"Key":"(if it","Fragments":["makes"]},{"Key":"makes sense","Fragments":["for","in","for","in"]},{"Key":"sense for","Fragments":["what","when","future"]},{"Key":"for what","Fragments":["you","is","the","it","it","is","they","it","I","is"]},{"Key":"you may","Fragments":["do),","be","have","also","also","very","add","want","not","or","prefer","need","have","want"]},{"Key":"may do),","Fragments":["you"]},{"Key":"do), you","Fragments":["can"]},{"Key":"some really","Fragments":["neat","good"]},{"Key":"really neat","Fragments":["readability"]},{"Key":"neat readability","Fragments":["through"]},{"Key":"readability through","Fragments":["the"]},{"Key":"through the","Fragments":["use","complete","order","instructions,","course","array","arrays","strings.","words","Values","KeyValuePair\u003c\u003e","Keys","characters","class","multiples","already","old","process.","multiples","numbers","method","whole","input","two","entries.","numbers","loop","loop","nested","effort","every","number,","loop","List\u003cstring\u003e","if","IDE.","numbers","`Split()`","string","IDE.","rest"]},{"Key":"the use","Fragments":["of","of","of","of","of","for","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"of [extension","Fragments":["methods](http://www.dotnetperls.com/extension)."]},{"Key":" I'm","Fragments":["curious","not","aware","not","not","not","kind","not","sad","aiming","undecided","not","not","not","couldn't","using","curious","not","new","confused","not","interested","unhappy","using","sure","not","not","quite","wondering","a","not","curious","not","not","also","going","not","not","not","also","not","converting","not","not","not","okay","you","not","not","guessing","curious","not","gonna","not","not","surprised","curious","not","not","pretty","pretty","not","not","quite","sure","not","now","not","undecided","up","nitpicking","getting","still","not","looking","not","having","so","going","not","starting","not","not","not","curious","not","curious"]},{"Key":"I'm curious","Fragments":["too.","about","why","to","if","now,","in","why","to","why","why","why"]},{"Key":"curious too.","Fragments":["The"]},{"Key":"too. The","Fragments":["only","first"]},{"Key":"only time","Fragments":["I","I","you"]},{"Key":"time I","Fragments":["know","should","skip","use","have","came","wrote","processed","ever","think","did","used"]},{"Key":"I know","Fragments":["to","is","is","what","of","they're","the","it","some","of,","what","this","I've","that","very","having","it's","this","about","there","it","I","I","guys","I","there","trying","it","but","how","where","it","the","that","that","of.","why","other","it","that","it","if","character","there","it","it's","this","this","what"]},{"Key":"know to","Fragments":["use","be"]},{"Key":"use this","Fragments":["is","but","list","at","pattern.","same","trick","and"]},{"Key":"is with","Fragments":["instanced","System.Diagnostics.Stopwatch.","the"]},{"Key":"with instanced","Fragments":["objects."]},{"Key":"instanced objects.","Fragments":["Though"]},{"Key":"objects. Though","Fragments":["I"]},{"Key":"Though I","Fragments":["don't"]},{"Key":"have that","Fragments":["good","method","name","much","the","passed","(in","method"]},{"Key":"that good","Fragments":["a"]},{"Key":"good a","Fragments":["grasp"]},{"Key":"a grasp","Fragments":["on"]},{"Key":"grasp on","Fragments":["the"]},{"Key":"on the","Fragments":["subject.","modulus","requirements","duplicate","extra","same","code","same","function","first","trade-offs.","scenario)","name","rest","solutions","algorithm.","wonderful","internet..","three","left","data.","same","dictionary.","result","Bob","left","program.","art","out","person,","complexity","same","same","same","scenario","string","character.","Int","side","IsLeapYear","same","site","method","string","code,","brain","string,","var","var","numbers.","IEnumerable\u003cint\u003e","site.","same","parameters","word","input","same","existence","return","blank","same","stack","next","[Word","Roster","fly.","whole","link","parameter","eyes","help","value","same","other","camel","separation","value.","business","business","same","next","business","sample","expression","parens.","input.","resultant","internet,","internet","2nd","number","test","fence","end?","Grade","constructor","area","Valid_leap_year","no-arguments","Verses()","tin,","longer","ordering","subject","bonus","list","assumption","string","DayOfWeek","constructor","Triangles","order","words","class","enumeration","logic","comment","business","'Verse'","speed","strings","List","List","dictionary","order","last","left-hand","cost","business","order","correct","\u003ccode\u003e.Date\u003c/code\u003e.","Last","rest","order","order","order","other","values","way","Internet","debugger.","tests)","last","wall","same",".ToString","keys","command","oceans","second","length","correct","code","string","string","other","incorrect","same","split","generic","inner","first","unique","quality","inner","exercises","Double","left","surface","site,","side","GitHub","enum","next","nested","result","same","next","stack","final","whitespace"]},{"Key":" Actually,","Fragments":["HashSet","it","I","I","even","that","you","in","there"]},{"Key":"Actually, HashSet","Fragments":["is"]},{"Key":"HashSet is","Fragments":["a","a"]},{"Key":"a good","Fragments":["idea.","practice,","practice","practice","name...","idea","comment","way","trade.","place","general","point","habit","thing!","candidate).","variable","mixture","point","idea","point","idea","summary","habit","idea","thing","variable","idea?","way","idea,","way","start.","way","idea.","argument","point","rule","thing.","idea?","idea","job","IDE.","explanation","idea.","point,","exercise","idea.","choice","idea","reason","reason","idea.","sign","thing","programmer.","id","idea","optimization.","thing.","way","reason","choice.","reason","idea.","thing","place"]},{"Key":"good idea.","Fragments":["Nice","The","You","I'm"]},{"Key":"idea. Nice","Fragments":["one."]},{"Key":" Cool,","Fragments":["I","thanks!","I","thanks!"]},{"Key":"Cool, I","Fragments":["hadn't","appreciate"]},{"Key":"I hadn't","Fragments":["thought","seen","done","considered.","heard","thought","heard","thought","used","wanted","considered.","spotted"]},{"Key":"hadn't thought","Fragments":["to","of","to","of"]},{"Key":"thought to","Fragments":["roll","the","do","do.","how","explicitly"]},{"Key":"to roll","Fragments":["my","my"]},{"Key":"roll my","Fragments":["own","own"]},{"Key":"my own","Fragments":["generators.","work.","magic","algorithm","good","nitpick,","code","code","code.","thoughts","if","enumeration","enumeration.","thought","and","Count","source","source","class","`IsLetter`","code.","and","parser","parser","parser."]},{"Key":"own generators.","Fragments":[":-)"]},{"Key":" Just","Fragments":["curious","a","curious,","a","a","a","in","because","cleaned","a","a","a","realized","checking.","to","to","so","say:","so","so","wondering","a","do","compare","add","had","evolving","a","something","realized","realized","to"]},{"Key":"Just curious","Fragments":["why","why"]},{"Key":"curious why","Fragments":["you","you","you","you","you","you","you"]},{"Key":"why you","Fragments":["would","went","use","extended","put","are","decided","haven't","are","think","are","have","wrapped","insisted","store","used","need","chose","have","use","go","need","do","think","made","replace"]},{"Key":"you would","Fragments":["return","want","need","have","have","not","prefer","never","initialize","get","want","a","prefer","need","calculate","need","have","need","get","do","want","need","need","see"]},{"Key":"would return","Fragments":["false","true","true","the","true.","the"]},{"Key":"return false","Fragments":["if","anyway.","which","by","clause","in","already."]},{"Key":"if year","Fragments":["falls","is","is","is"]},{"Key":"year falls","Fragments":["before","on"]},{"Key":"falls before","Fragments":["0AD."]},{"Key":"before 0AD.","Fragments":["4BC"]},{"Key":"0AD. 4BC","Fragments":["would"]},{"Key":"4BC would","Fragments":["have"]},{"Key":"would have","Fragments":["still","thought","considered","been.","gone","done.","definitely","been","to","refactored","to","a","to","to","been","taken","checked","been","to","been","just","failed","cleaned","trouble","thought","done","gone","to","to","thrown","to","kept","to","write","dictated","been","size","been","used","been","1","a","been","been","to","been","been","by","probably","liked","been","removed","gone","stored","felt"]},{"Key":"have still","Fragments":["been"]},{"Key":"still been","Fragments":["a"]},{"Key":"been a","Fragments":["leap","pet","couple","pet","pet","List","fan","while","much","unit","unit"]},{"Key":"a leap","Fragments":["year,","year.","year.","year.","year.","year!","year.","year.","year.","year!","year.","year.","year.","year!","year.","year.","year.","year!","year.","year.","year.","year!","year.","year.","year.","year!","year.","year.","year.","year!","year.","year.","year.","year","year.","year","year...\"","year.","year.","year","year","year","year)","year.","year","year?\"","year?\",","year?\"","year.","year","year,","year","year!)?","year,","year.","year","year","year)","year,","year","year,","year,","year.","year.","one","year.","year.","year.","year.","year","year","year.","year,","year.","year","year.\"","year.","year.","year.","year\"","year.","year","year","year","year","year","year.","year","year","year.","year.","year.","year","year","year","year","year","year","year.\"","year.\"","year","year","year.","year","year.\"","year","year.","year","year.","year.","year,"]},{"Key":"leap year,","Fragments":["no?","FirstOrDefault","but","no","if","because","the","it"]},{"Key":" Tried","Fragments":["to","to","to","to"]},{"Key":"Tried to","Fragments":["remember","condense","use","get"]},{"Key":"to remember","Fragments":["(with","to","(and","the","that","to","that","changing","to","to"]},{"Key":"remember (with","Fragments":["no"]},{"Key":"(with no","Fragments":["success)"]},{"Key":"no success)","Fragments":["this"]},{"Key":"success) this","Fragments":["notation!"]},{"Key":"am curious","Fragments":["to","what"]},{"Key":"curious to","Fragments":["hear","know","get","compare"]},{"Key":"to hear","Fragments":["if","that","why","about","from","about","from"]},{"Key":"hear if","Fragments":["you"]},{"Key":"you find","Fragments":["this","the","it","the","a"]},{"Key":"find this","Fragments":["code","particular","kind","a"]},{"Key":"this code","Fragments":["readable","written","(or","works.","is","it","and","looks","cannot","cannot","and","is","and","to","would","is","for","so","against","works,","for","is","is","so","so","is","than","in","to","is","a","to","with","will","would","should","is","pass","and","has"]},{"Key":"code readable","Fragments":["as","is","is"]},{"Key":"readable as","Fragments":["opposed","putting","I","possible.","a","a","a","there","is.","well"]},{"Key":"as opposed","Fragments":["to","to","to","to","to","to","to"]},{"Key":"opposed to","Fragments":["a","brevity),","many","using","what?","just","'private'","`.Item2`.","recognising","my"]},{"Key":"a traditional","Fragments":["if-else","nested"]},{"Key":"traditional if-else","Fragments":["structure."]},{"Key":" Maybe","Fragments":["now","divide","like","IsEvenlyDivisible(int,","I","the","I","clean","using","consider","use","I","the"]},{"Key":"Maybe now","Fragments":["that"]},{"Key":"now that","Fragments":["I","I","the","I","I","I","any","you"]},{"Key":"that I","Fragments":["found","needed","probably","capitalise","currently","refactored","find","look","can","don't","think","didn't","can","personally","was","know","removed","probably","want","need","used","could","didn't","found","do","thought","added","stored","somehow","use","should","could","am","was","thought","could","can","can","think","don't","wanted","only","had","always","wouldn't","can","didn't","could","can","rewrote","could","really","kept","know","forgot","agree","just","could","*don't*","can","hadn't","missed.","think","do","was","specified","was","have","can","am","would","avoided","can","don't","missed?","can","don't","was","caught","process","have","generally"]},{"Key":"I found","Fragments":["a","your","alphaCount","that","handy","there","it","to","that","my","this","quite","on","the","it","on","interesting"]},{"Key":"found a","Fragments":["hammer","lot","multiple.","small"]},{"Key":"a hammer","Fragments":["(extension"]},{"Key":"hammer (extension","Fragments":["methods)"]},{"Key":"(extension methods)","Fragments":["everything"]},{"Key":"methods) everything","Fragments":["looks"]},{"Key":"everything looks","Fragments":["like"]},{"Key":"looks like","Fragments":["a","a","you","a","you're","it","that's","it'll","it","in","you're","it","i","just","it","\u003cb\u003eToUpper()\u003c/b\u003e","the","it","we","the","it","you","it","\"if(...)","you","the","constant","you've","it","C","the","you","overkill","the","I","better"]},{"Key":"like a","Fragments":["nail,","year","straightforward","novel!","good","clarifying","hack","hack","waste","character","lot","hack.","lot","silly","silly","lot","single","single","map/reduce","PITA.","ReadLine","group","phone","phone","`First()`.","singleton","pretty","similar","extension"]},{"Key":"a nail,","Fragments":["but"]},{"Key":"nail, but","Fragments":["this"]},{"Key":"but this","Fragments":["seems","one","seemed","is","is","complicated","lets","is","is","time","is","is","made","submission","seemed","time","is","is","is","sure","seemed","should","does","ruined","is","exercise","is","is"]},{"Key":"this seems","Fragments":["like","to","unnecessarily","readable"]},{"Key":"seems like","Fragments":["an","a","genius.","a","it","it","a","a","a","there","unnecessary","readability","it","it","it","you","an","it's","I","overkill.","way","it's","it","you","it"]},{"Key":"like an","Fragments":["expressive","answer","English","else","hour","awful","idiot.","empty"]},{"Key":"an expressive","Fragments":["way"]},{"Key":"expressive way","Fragments":["to"]},{"Key":"way to","Fragments":["do","write","read","avoid","refactor","play","sanitize","submit","get","return","avoid","check","measure","more","describe","do","do","do","allow","partially","learn.","do","put","remove","know","be","eliminate","do","do","get","defend","look","go.","release","make","use","do","do","generate","go","determine","solve","achieve","do","get","do","do","confirm","do","check","accomplish","improving","unwieldy","do","define","get","'round'","code,","simply","avoid","this","ensure","do","have","do","do","save","accomplish","put","have","get","directly","tell","do","use","get","handle","write","write","AND","do","do","check","handle","ensure","do","do","make","run","do","set","do","deal","do","actually","provide","go.","do","go","add","go","use","express"]},{"Key":"this example.","Fragments":["One","I"]},{"Key":"example. One","Fragments":["problem"]},{"Key":"One problem","Fragments":["I","though,"]},{"Key":"problem I","Fragments":["see","have"]},{"Key":"I see","Fragments":["is","what","an","this","nitpicks","this","the","now","(in","your","your","the","an","what","your","it","that","that","you","the","a","now","other","your","these","one","a","where","is","what","it","you're","a","what","that","the","you"]},{"Key":"see is","Fragments":["that","stuff","that"]},{"Key":"the public","Fragments":["extension","methods","method","Roster","modifier.","For()."]},{"Key":"public extension","Fragments":["methods"]},{"Key":" Be","Fragments":["consistent","aware"]},{"Key":"Be consistent","Fragments":["with"]},{"Key":"consistent with","Fragments":["method","how","your","what","your","RandomInt"]},{"Key":"with method","Fragments":["name"]},{"Key":"method name","Fragments":["conventions.","that","is","to","has"]},{"Key":"name conventions.","Fragments":["\"isDivisibleByFour\""]},{"Key":"conventions. \"isDivisibleByFour\"","Fragments":["uses"]},{"Key":"\"isDivisibleByFour\" uses","Fragments":["camel"]},{"Key":"uses camel","Fragments":["casing"]},{"Key":"camel casing","Fragments":["where","for"]},{"Key":"casing where","Fragments":["the"]},{"Key":"where the","Fragments":["other","method","user","message","main","words","query","apostrophe","year","uppercase","strands","entry","character","letter","problem","order","score","a","confusion","last"]},{"Key":"other two","Fragments":["methods","though.","calculations","conditions","to","only."]},{"Key":"two methods","Fragments":["use","or"]},{"Key":"methods use","Fragments":["Pascal"]},{"Key":"use Pascal","Fragments":["casing."]},{"Key":"Pascal casing.","Fragments":["Pick"]},{"Key":"casing. Pick","Fragments":["one."]},{"Key":" IMO","Fragments":["I","the"]},{"Key":"IMO I","Fragments":["don't"]},{"Key":"don't think","Fragments":["you","this","it's","code","there's","anything","the","anything","negative","a","it","HasNumbers()","one","there","it's","you","hard-coding","it","putting","you","will","you","the","they","that","'x.Key'","you","this","the","the","you","you're","so,","you","it","Main","you","recursion","I'd","it","you","this","it's","that","it","anyone","removing","there","cleaning"]},{"Key":"you need","Fragments":["separate","to","to","to","to","to","more","is","to","to","to","to","{","to","to","to","conditionals","to","to","to,","to","to","three","the","a","the","to","wordFromList","both","to","to","to","to","to","any","help","to","now.","a","the","to","it?"]},{"Key":"need separate","Fragments":["methods"]},{"Key":"separate methods","Fragments":["for","so","for"]},{"Key":"methods for","Fragments":["logic","checking","checking","an","any","each","that:","'isDivisibleBy...'.","performing","the","case","DNA","To()","each","OrderBy()","sake"]},{"Key":"for logic","Fragments":["that"]},{"Key":"logic that","Fragments":["is","is","the","determines","leads"]},{"Key":"that is","Fragments":["so","unnecessary.","straight","^_^.","actually","evenly","evenly","actually","not","you!)","what","divisible","a","even","the","cool.","clearer","also","very","initialized,","wanted","about","calculated)","being","a","trimmer","what","to","the","my","apparently","divisible","easier","a","required","never","of","okay","all","the","my",":)","just","where","a","not","8","needed","a","doing\".","readable!","fully","supposed","still","getting","not","just","IEnumerable\u003cint\u003e","currently","a","the","in","your","fine,","98,259.","my","trivial.","true","probably","fine.","highly","going","evenly","evenly","better","evenly","evenly","divisible","the","the","worth","roughly","unnecessary.","the","any","good","just","evenly","evenly","evenly","fast","playing","the","pretty","intressting","not","trivial,","a","familiar","any","no","one","taking","a","divisible","still","what","the","the","equally","ideally","the","can","causing","easy:","all","not"]},{"Key":"is so","Fragments":["straightforward.","simple","simple,","easy","short","much","easy"]},{"Key":"The help","Fragments":["file"]},{"Key":"help file","Fragments":["http://help.exercism.io/getting-started-with-csharp.html"]},{"Key":"file http://help.exercism.io/getting-started-with-csharp.html","Fragments":["says"]},{"Key":"http://help.exercism.io/getting-started-with-csharp.html says","Fragments":["just"]},{"Key":"says just","Fragments":["to"]},{"Key":"just to","Fragments":["supply","be","eliminate","return","make","clean","see","index","get","supplement","see","do","_nitpick_:","write"]},{"Key":"to supply","Fragments":["a","a","a"]},{"Key":"supply a","Fragments":["Class","class","class"]},{"Key":"a Class","Fragments":["library,","Library"]},{"Key":"Class library,","Fragments":["no"]},{"Key":"library, no","Fragments":["need"]},{"Key":"no need","Fragments":["or","to","for","for","to","to","to","at","to","to","for","to","to","to","for","for","to","to","to","to","to","to","for","for","to","to","to","to","use","for","to","to","for","to","for","for","to","to"]},{"Key":"need or","Fragments":["requirement"]},{"Key":"or requirement","Fragments":["for"]},{"Key":"requirement for","Fragments":["a","a","the","returning"]},{"Key":"for a","Fragments":["console","simple","configurable","leap","single","simple","few","North","readability","client","while,","machine","human","Library","function","leap","ton","few","straightforward","single","speed","much","working","first","lot","long","generator.","new","tutorial!","\"parameter\".","given","good","valid","pattern","`Count`","`Count`","comment","simple","bit,","grade","grade.","simple","value","custom","valid","more","method,","`Func\u003cchar,","more","null","bit.","character","planet","curve","generic","few","given","day","character","null","phone","leap","single","more","more","leap","key","multi-line","more","user","while.","single","second","way","week","class","size","pretty","second","separate","KeyNotFoundException","while","problem"]},{"Key":"console app.","Fragments":["Let"]},{"Key":"app. Let","Fragments":["the"]},{"Key":"Let the","Fragments":["tests"]},{"Key":"tests run","Fragments":["the","successfully"]},{"Key":"run the","Fragments":["logic!","tests,","test","tests,","unit","code.","test","unit","inner","tests.","unit","tests","project.","unit","testsuite"]},{"Key":" Initially","Fragments":["I","tried","I"]},{"Key":"Initially I","Fragments":["thought","tried","used","just"]},{"Key":"I thought","Fragments":["this","the","I'd","of","of","of","about","they","regex","of","about","about","it","it","it","about","it","it","`School.Add`","he","a","it","would","it","literals","that","it","about","about","an","I'd","about","about","it","it","it","about","I'd","about","I","the","that","you'd","was","of","about","I","it","about","about","the","about","of","from","it","the"]},{"Key":"thought this","Fragments":["looked","was","was"]},{"Key":"this looked","Fragments":["over-engineered"]},{"Key":"looked over-engineered","Fragments":["but"]},{"Key":"over-engineered but","Fragments":["I","if"]},{"Key":"I really","Fragments":["like","like","didn't","like","liked","like","miss","didn't","like","like","like","like","like","like","like","don't","like","like","like","appreciate","like","like","like","like,","like","like","don't","like","hate","like","learned","should","appreciate","liked","think","like","appreciate","like","like","like","wish","like","should"]},{"Key":"really like","Fragments":["the","the","some","this","the","the","using","the","how","the","LINQ","your","how","this.","how","this.","the","this","the","the","how","the","this","it.","the","this","some","this"]},{"Key":"the descriptive","Fragments":["naming."]},{"Key":"descriptive naming.","Fragments":["If"]},{"Key":"naming. If","Fragments":["you"]},{"Key":"you REALLY","Fragments":["want"]},{"Key":"REALLY want","Fragments":["to"]},{"Key":"want to","Fragments":["be","do","do","write","use","in","do","rename","try","leak","make","do.","use","continue","count","detect","break","return","mention.","check","use","do","see,","use","have","look","allow","negate","put","check","make","do","consider","stay","take","pass","use","just","disable","have","make","store","try","do","put","do","produce","keep","sum","implement","use","look","spend","consider","add","go","use","be","offer","help","go","move","change","mask","dial","use","loop.","flatten","have","avoid","store","go","do","make","use","make","allow","change","have","add","add","make","mark","change","do","generate","think","avoid","project","consider","keep","look","add.","validate","check","check.","make","see","Trim","have","make","do","stick","tack","compare","return","have.","replace","keep","test"]},{"Key":"be hardcore,","Fragments":["you"]},{"Key":"hardcore, you","Fragments":["could"]},{"Key":"could move","Fragments":["some"]},{"Key":"move some","Fragments":["code"]},{"Key":"duplication into","Fragments":["another"]},{"Key":"another method.","Fragments":["But","If"]},{"Key":"method. But","Fragments":["only","I"]},{"Key":"But only","Fragments":["if"]},{"Key":"only if","Fragments":["you're","it's","the"]},{"Key":"if you're","Fragments":["feeling","interested.","not","interested:","going","not","in","just","using","curious:","new","adding","going","interested."]},{"Key":"you're feeling","Fragments":["HARDCORE."]},{"Key":"feeling HARDCORE.","Fragments":["Otherwise,"]},{"Key":"HARDCORE. Otherwise,","Fragments":["looks"]},{"Key":"Otherwise, looks","Fragments":["great."]},{"Key":" Yeah,","Fragments":["there","I","i","still","I","I","I","Visual","you're","for","probably","the","I","I","I","I","it","that","but","you're","I","if","I","I'm"]},{"Key":"Yeah, there","Fragments":["is"]},{"Key":"a LOT","Fragments":["of"]},{"Key":"LOT of","Fragments":["syntactic"]},{"Key":"of syntactic","Fragments":["sugar"]},{"Key":"syntactic sugar","Fragments":["in","or","and","and","and","and"]},{"Key":"sugar in","Fragments":["C#"]},{"Key":"C# and","Fragments":["often","I'm","Visual","some","am","most"]},{"Key":"and often","Fragments":["they"]},{"Key":"often they","Fragments":["can"]},{"Key":"they can","Fragments":["be","be","be","be","be","be","help.","be.","be","use","get","be"]},{"Key":"be over-used.","Fragments":["In"]},{"Key":"over-used. In","Fragments":["this"]},{"Key":"this case...","Fragments":["I"]},{"Key":"case... I","Fragments":["can"]},{"Key":"I can","Fragments":["see","possibly","think","have","get","read","think","see","under","think","remove","still","what","condense","run","log","see","see","do","totally","with","access","see","see","to","see","see","get","explain","see","agree","find","name","deal","remove","see","see,","sure","understand","see","use","sleep","think","respect","do","do","see.","use","provide","see","follow","find","envision","think","write","make","see","only","think","see","think","see,","see","see","see","return","see","learn","regex","see","figure","issue","be","see","give","return","use","see","solve","not","take","read","reduce"]},{"Key":"can see","Fragments":["your","would","in","why","that","how","that","wrong","how","that","how","both","in","it","it,","that","my","the","a","in","from","you","(and","why","how","where","the","that","moer","elsewhere.","below,"]},{"Key":"see your","Fragments":["point","method","point.","point","point,","point,"]},{"Key":"your point","Fragments":["about","about","about"]},{"Key":"point about","Fragments":["the","comments","the","the","documentation:","only"]},{"Key":"about the","Fragments":["expressiveness","extension","wait.","wait.","wait.","wait.","wait.","wait.","private","variable","other","problem","2nd","modulus","whole","way","statement","rest","exception","brackets,","nesting,","delegate,","best","performance","exclamations,","Linq","quality","operators,","format","index","braces","+=1--I","known","code","Select(word","StringBuilder","first","name,","Any","leap","potential","caching","static","cost","whitespace.","user","comment;","1999","keyValue","breaks,","Zip","intent.","response","use","string","best","constructor","best","foreach","lambda."]},{"Key":"the expressiveness","Fragments":["but"]},{"Key":"expressiveness but","Fragments":["it"]},{"Key":"but it","Fragments":["seems","sure","does","does","really","passes","makes","makes","feels","gets","is","does","doesn't","really","is","definitely","gets","is","has","adds","is","is","made","makes","sure","would","is","is","can","becomes","meant","looks","isn't","is","made","is","is","could","would","is","is","breaks","should","seemed","will","seems","may","looks","makes","should","not","didn't","was","doesn't","won't","is","is","can","seems","wasn't.","is","would","can","seems","definitely","works","doesn't","is","did","would","is","seems","wouldn't","required","does.","occurred","is","is","reenforces","seemed","looks","loops","could","attempts","doesn't","is","would","wasted","is","wasted","did","seems","makes","sure","works!","doesn't","would","doesn't"]},{"Key":"seems odd","Fragments":["to"]},{"Key":"odd to","Fragments":["have","most","use","me."]},{"Key":"to have","Fragments":["logic","an","the","(note","the","virtually","managed","the","to","comments","multiple","links","separate","to","a","a","multiple","the","an","all","them","the","to","worked,","something","more","several","a","a","a","it","to","3","a","some","all","only","the","the","private","a","a","an","a","to","the","four","a","the","the","so","it","my","a","made","an","a","someone","all","meaningful","done","been","the","the","them","only","to","an","with","to","single","a"]},{"Key":"have logic","Fragments":["split"]},{"Key":"logic split","Fragments":["into"]},{"Key":"split into","Fragments":["two","5,","the","5","the"]},{"Key":"into two","Fragments":["classes","pieces","methods","calling","regexs"]},{"Key":"two classes","Fragments":["that"]},{"Key":"classes that","Fragments":["would"]},{"Key":"probably make","Fragments":["more","them"]},{"Key":"make more","Fragments":["sense","sense.","sense","use","readable?","sense"]},{"Key":"more sense","Fragments":["to","to","than","to","to","but","in"]},{"Key":"sense to","Fragments":["be","construct","me.","me.","break","use","only","return","have","check","call"]},{"Key":"be in","Fragments":["one.","this","the","a","here.","the","line","the","its","released","a","a","uppercase.","the","either"]},{"Key":"in one.","Fragments":["I"]},{"Key":"one. I","Fragments":["guess","did","don't","coded","had","find","solved"]},{"Key":"I guess","Fragments":["you'll","I","it","with","I've","that's","it","I'll","you","my","I","but:","it","it","that","I","there's","that","I","I","I","that","I","that's","it","what","people","there's","the","that","there","it","that","that's","it","I'll","I"]},{"Key":"guess you'll","Fragments":["have"]},{"Key":"you'll have","Fragments":["to","to"]},{"Key":"to make","Fragments":["the","my","the","what's","the","it","the","a","the","the","it","the","it","it","the","the","the","it","it","upper","the","it","sense","a","the","sure","custom","it","the","sure","it","a","it","an","sure","your","sure","this","a","my","it","an","a","the","that","set","sure","code","the","mistakes","code","the","it","those","the","one","it","tests","the","it","the","it","this","Split's","it","sense","it","sure.","sure","the","the","a","it","the","sure","the","it","a","sure","the","it","your","the","num.","it","it","it","this","it","a","sure","sure","more","my","sure","the","the","it.","sure","one","more","this","sure","sure","it","it","sure","so","use","all","it","that","calling","all","it","things","TriangleException","the"]},{"Key":"make the","Fragments":["call","code","code","```Year```","code","code","code","code","LINQ","leap","algorithm","code","class","code","code","purpose","stored","test","code","fourCheck","code","tests","Year","code","assumption","method","code","implementation","variable","test","code","returned","class","class","code",".Any","tests","code","inputs","code","name","class","intent","'set'","change","class","caching","algorithm","decision","tests","intention","class","code","class","intent","intent","Input","code","functionality","argument","code","return","code","code","code"]},{"Key":"the call","Fragments":["here.","to","for","stack","out","stack","to","to"]},{"Key":" Here","Fragments":["are","is","we","are","are","I","is","you","you"]},{"Key":"Here are","Fragments":["a","some","a","some"]},{"Key":"are a","Fragments":["few","mix","\"pet","few","leap","few","personal","good","bit","good","bit","number","few","lot","few","million","lot","few","single","few","couple","separate","little","little","big"]},{"Key":"few things","Fragments":["to","you","here","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","you","I"]},{"Key":"at concerning","Fragments":["idiomatic"]},{"Key":"concerning idiomatic","Fragments":["C#:"]},{"Key":"1. There","Fragments":["is"]},{"Key":"a method","Fragments":["on","with","that","or","off","and","that","`IsLeap(int)`","`IsLeap(int)`","was","(for","called","for","has","early?","that","only","that","as","to","were","for","to","that","to","off","call","that","that","than","and","will","to","is","group,","which","in","for","group."]},{"Key":"method on","Fragments":["```string```","`int`","the","the","the","the","integers?","School.","the","the","the","the","`Year`?"]},{"Key":"on ```string```","Fragments":["called"]},{"Key":"```string``` called","Fragments":["```IsNullOrWhiteSpace```"]},{"Key":"called ```IsNullOrWhiteSpace```","Fragments":["that"]},{"Key":"```IsNullOrWhiteSpace``` that","Fragments":["you"]},{"Key":"may be","Fragments":["interested","help","a","accurate","worth","a","nice.","short,","a","true","helpful:","too","with","that","great,","that","some","a","a","wrong.","wrong","less","worth","a","a"]},{"Key":"be interested","Fragments":["in."]},{"Key":"2. ```Regex```","Fragments":["has"]},{"Key":"```Regex``` has","Fragments":["an"]},{"Key":"has an","Fragments":["```IsMatch```","implicit","inbuilt","invalid","operator","`IsNumber`?"]},{"Key":"an ```IsMatch```","Fragments":["method"]},{"Key":"```IsMatch``` method","Fragments":["that"]},{"Key":"method that","Fragments":["may","can","does","could","calls","follows","will","returned","throw","would","doesn't","describes","I'm","works","reversed","could","just","is"]},{"Key":"that may","Fragments":["be","not","not","not"]},{"Key":"be help","Fragments":["you"]},{"Key":"help you","Fragments":["make","arrive","through","understand"]},{"Key":"you make","Fragments":["things","the","the","methods","`number`","your","those","them","a","Count","the","primeFactors","your","a","two","it","it","it","it","it","CheckMultiple()"]},{"Key":"3. All","Fragments":["C#"]},{"Key":"All C#","Fragments":["methods"]},{"Key":"C# methods","Fragments":["are"]},{"Key":"are Pascal","Fragments":["case","case","cased."]},{"Key":"Pascal case","Fragments":["by","so","in"]},{"Key":"case by","Fragments":["convention.","case"]},{"Key":"by convention.","Fragments":["CamelCase"]},{"Key":"convention. CamelCase","Fragments":["won't"]},{"Key":"CamelCase won't","Fragments":["break"]},{"Key":"won't break","Fragments":["anything,"]},{"Key":"break anything,","Fragments":["just"]},{"Key":"anything, just","Fragments":["isn't","shorten"]},{"Key":"just isn't","Fragments":["idiomatic","what"]},{"Key":"isn't idiomatic","Fragments":["C#."]},{"Key":" 4.","Fragments":["Purely","You","There's","Yeah,","Right","I","Again,","What","I'm","\"s\"","Might","If","If","I","\"x\"","\"s\"","Agreed","Yep.","```\u003crantynitpick\u003e```I'll"]},{"Key":"4. Purely","Fragments":["a"]},{"Key":"Purely a","Fragments":["style"]},{"Key":"style thing","Fragments":["(chalk","but"]},{"Key":"thing (chalk","Fragments":["it"]},{"Key":"(chalk it","Fragments":["up"]},{"Key":"it up","Fragments":["to","a","to","with","in","a","a","into","to","on","based"]},{"Key":"up to","Fragments":["my","how","make","but","the","much","62","the","20.","you","the","date.","personal","seven","whatever","but","Sqrt(number)","the","the","billions,","93819012551.","sqrt(93819012551)","31","max,","20,","given","you)","someone","max_sqrt..."]},{"Key":"to my","Fragments":["OCD),","first","program,","previous","attention.","inexperience.","class","love","if","method?","senses","Day()","understanding","implementation","implementation,","array","second","version.","test","mind","first.","solution","eyes","inner"]},{"Key":"my OCD),","Fragments":["but"]},{"Key":"OCD), but","Fragments":["you"]},{"Key":"but you","Fragments":["don't","can","can","probably","never","don't","switched","will","might","could","could","have","can","are","can't","don't","forgot","never","can","should","should","forgot","avoided","end","were","can","could","get","have","could","still","have","can","know","can","are","left","dont","pick","are","can"]},{"Key":"you don't","Fragments":["need","get","need","need","need","need","need","know","need","need","need","need","need","want","have","have","notice","need","need","have","need","like","need","need","have","have","force","have","need","sort","want","really","have","have","need","need","have","need","have","need","need","need","need","have","have","have","need","have","have","have","have","need","have","use","stop.","need","even","have","even","have","know","actually","need","need","need","need","need","have","have","need","have","have","have","have","include","really","have","change","need","modify","know","copy","need","have","use","have","need","use","need","need","run","mind","need","like","get","need","have","need","need"]},{"Key":"don't need","Fragments":["the","the","the","any","to","the","a","the","the","the","the","the","any","the","the","to","the","to","the","the","the","else","SrtingBuilder","to","to","to","that","the","else","else","the","the","the","the","that","to","strings\u003c/b\u003e","to","Dictionary","the","else","that","to","the","to.","to","it.","to","to","the","software","this","nested","the","the","special","to","the","both","to","a","customisation","the","the","to"]},{"Key":"need the","Fragments":["extra","nested","`else`","?","else","else","else","overhead","**else**.","main","second","else","else","else","-1.","`IsNullOrEmpty()`","else","comment.","if","console","{1,2}","Clear()","'if'","check.","Ordinal","inner","IsNullOrEmpty","Math.Pow","Pow","`ToArray()`?","curly","variable","member","keyValue","if","Discard","Size","if","else","select","terniary","var","```else```"]},{"Key":"the extra","Fragments":["parens","loop","credit.","static","credit.","credit","bool","challenge","challenge","functionality","using","mile","List\u003cstring\u003e","char","indirection","'I's","times","check","credit","using","constants"]},{"Key":"extra parens","Fragments":["in"]},{"Key":"parens in","Fragments":["```isShouting```"]},{"Key":"in ```isShouting```","Fragments":["or"]},{"Key":"```isShouting``` or","Fragments":["```isQuestion```."]},{"Key":"Good stuff.","Fragments":["Actually"]},{"Key":"stuff. Actually","Fragments":["found"]},{"Key":"Actually found","Fragments":["some"]},{"Key":"found some","Fragments":["things"]},{"Key":"some things","Fragments":["to","you"]},{"Key":"to improve","Fragments":["my","readability.","readability.","my","my","code","my","it?","the","my"]},{"Key":"improve my","Fragments":["solution","coding","implementation.","program","skills","methods"]},{"Key":"my solution","Fragments":["with.","will","does","will","took","if","to","could","the","to","to","for","but",":-)","for","ended","does","for","http://exercism.io/submissions/39fd1ab5d90549a5a84f754f91a9d152","that"]},{"Key":"solution with.","Fragments":["Couple"]},{"Key":"with. Couple","Fragments":["things"]},{"Key":"things of","Fragments":["note:"]},{"Key":"1. I","Fragments":["like","changed","could","don't","completely","chose","wanted","don't","just"]},{"Key":"of Linq","Fragments":["in","but","syntax","to","and","decides","is","in"]},{"Key":"Linq in","Fragments":["```IsShouting```.","WordCount","Create..","IsYelling()","Generate."]},{"Key":"2. Totally","Fragments":["forgot"]},{"Key":"Totally forgot","Fragments":["about","about"]},{"Key":"forgot about","Fragments":["```EndsWith```,","%.","Ternary",".Date!","that.","them.","that."]},{"Key":"about ```EndsWith```,","Fragments":["nice."]},{"Key":"3. There's","Fragments":["a","already"]},{"Key":"There's a","Fragments":["static","lot","neat","part","method","better"]},{"Key":"a static","Fragments":["method","method","method","readonly","method","class","class","method","`IsLeap`","method","class?","Phrase","method,","method","function","class.","variable","variable","method","function,","object","method","method","method"]},{"Key":"static method","Fragments":["off","off","(or","and","`IsLeap`","`IsLeap`","in","and","in","we","create","on","called","called"]},{"Key":"method off","Fragments":["of","of","of","of"]},{"Key":"off of","Fragments":["```string```","```string```","```Regex```.","```Dictionary```","trying","trying","char"]},{"Key":"of ```string```","Fragments":["that","that"]},{"Key":"```string``` that","Fragments":["does","does"]},{"Key":"that does","Fragments":["everything","what","that.","input","not","yet","many","not"]},{"Key":"does everything","Fragments":["that"]},{"Key":"everything that","Fragments":["you're","can"]},{"Key":"that you're","Fragments":["doing","doing"]},{"Key":"you're doing","Fragments":["in","what","(that","with","double","the"]},{"Key":"doing in","Fragments":["```IsSilent```","each","the","the","the"]},{"Key":" @jena","Fragments":["I"]},{"Key":"@jena I","Fragments":["agree."]},{"Key":"I agree.","Fragments":["It","But","Listing","I"]},{"Key":"agree. It","Fragments":["does"]},{"Key":"It does","Fragments":["feel","passes","make","\"bloat\"","depend","not"]},{"Key":"does feel","Fragments":["a"]},{"Key":"feel a","Fragments":["little","little"]},{"Key":"little over-engineered","Fragments":["to"]},{"Key":"over-engineered to","Fragments":["me","you?"]},{"Key":"to me","Fragments":["for","it","in",":)","but","first","it's","(and","so","anyway.","at","that","it","personally.","and","it","in","it","that","if","that","-","that","from","getting","make","now","previously.","but","it's"]},{"Key":"me for","Fragments":["what","some","stating","writing"]},{"Key":"what is","Fragments":["essentially","entered","going","being","going","occurring,","happening","going","more","really","a","considered","going","going","a","most","happening","causing","the","going","occurring.","a","the","the","happening.","essentially","basically","wrong.","important","passed","important.","wrong"]},{"Key":"is essentially","Fragments":["a","what","what","a","a","saying"]},{"Key":"essentially a","Fragments":["basic","shortcut","random"]},{"Key":"a basic","Fragments":["mathematical","version"]},{"Key":"basic mathematical","Fragments":["problem."]},{"Key":"mathematical problem.","Fragments":["I"]},{"Key":"problem. I","Fragments":["guess","could","would","tend"]},{"Key":"guess I","Fragments":["felt","need","can","can","should","didn't","could","was"]},{"Key":"I felt","Fragments":["that,","it","a","that","it","it","that","the","that","that","this","that","compelled","that","free"]},{"Key":"felt that,","Fragments":["given"]},{"Key":"that, given","Fragments":["the"]},{"Key":"given the","Fragments":["problematic","above","year","extra","nature","test","word","task.","instructions","requirements","unit","list","spirit","spirit","spirit","spirit"]},{"Key":"the problematic","Fragments":["nature"]},{"Key":"problematic nature","Fragments":["or"]},{"Key":"nature or","Fragments":["leap"]},{"Key":"or leap","Fragments":["years,"]},{"Key":"leap years,","Fragments":["it","if","etc.","but","but"]},{"Key":"years, it","Fragments":["was"]},{"Key":"it was","Fragments":["better","centuries","definitely","in","nice","inserted","compact","pretty","to","a","used","a","habit","more","a","the","ASCII,","so","to","not","easy","duplicating","more","actually","still","a","odd","responding.","just","optimized.","really","the","a","an","fun","in","already","the","worth","called","you","nicer","not","interesting","faster","for","a","the","horribly","a","much","unusual","automatically","called,","originally","already","because","the","a","a"]},{"Key":"was better","Fragments":["to","and"]},{"Key":"better to","Fragments":["be","do","use","only","break","start","use","use","break","put","read","just","use","use","use","just","change","use","have","have","return","separate","catch","use","use","throw","have"]},{"Key":"be explicit","Fragments":["and","about"]},{"Key":"explicit and","Fragments":["really","readable."]},{"Key":"and really","Fragments":["try","liked","shouldn't"]},{"Key":"really try","Fragments":["to"]},{"Key":"to explain","Fragments":["the","WHY","what's","what","what's"]},{"Key":"explain the","Fragments":["domain","what","logic","use","last"]},{"Key":"the domain","Fragments":["through"]},{"Key":"domain through","Fragments":["method"]},{"Key":"through method","Fragments":["names."]},{"Key":" Ok,","Fragments":["I","got","so","so","this","learned","took","this","so"]},{"Key":"Ok, I","Fragments":["agree"]},{"Key":"I agree","Fragments":["about","with","that","about","with","with","with","with","that","with","with","that","on","that","with","that","with","on","with","with","with","with","that","that","that","that","with","with","with","with","about","with","with","with","with","with","that","with","with","with","-","with","with","with","with","with","about","about","that","that","that","with","I","with","with","with","with","with","with","that"]},{"Key":"agree about","Fragments":["the","the","learning","the","the","removing","the"]},{"Key":"methods. It's","Fragments":["not"]},{"Key":"It's not","Fragments":["a","necessary","as","required","even","that","clear","that","obvious","in"]},{"Key":"not a","Fragments":["huge","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","leap","century","good","good","leap","whole","leap","fan","proper","fan","static","fan","leap","function","fan","leap","\"yell\",","good","fan","very","standard","big","fan","special","word","fan","leap","widely","fan","verse)","big","recognized","leap","leap","\"!,","big","number?","good","valid","leap","problem","requirement","whole","performance","big","solitary","dictionary","fan","good","sensible","bug...","fan","fan","prime","C#","class","requirement.","very","mathematical","number.","good","procedure","leap","field?","leap","given","big","big","huge","\"wrong\"","for","for","for","for","big","innder","sensible","leap","big"]},{"Key":"a huge","Fragments":["gain","deal,","size.","potential","prime","overhead","fan"]},{"Key":"huge gain","Fragments":["to"]},{"Key":"gain to","Fragments":["have"]},{"Key":"have an","Fragments":["extra","equal","IsSilence","object","memory","extra","exception","idea","existing","excellent","excellent","efficient","int","if-else","extra","array","index","IDE","```.IsAnagram(string,","processing","empty"]},{"Key":"an extra","Fragments":["class","LINQ","class","2","whitespace","lookup.","arithmetic","semicolon","step","class?","constructor."]},{"Key":"extra class","Fragments":["with","which"]},{"Key":"class with","Fragments":["untested","the","the","a","only","an","a","the","specific","the","public"]},{"Key":"with untested","Fragments":["public"]},{"Key":"untested public","Fragments":["methods."]},{"Key":"public methods.","Fragments":["I"]},{"Key":"methods. I","Fragments":["cleaned","guess","am","chose","feel","included","didn't","think"]},{"Key":"I cleaned","Fragments":["all","it","it"]},{"Key":"cleaned all","Fragments":["these"]},{"Key":"all these","Fragments":["other","functions","if's","comments.","emthods","exercises"]},{"Key":"these other","Fragments":["things"]},{"Key":"other things","Fragments":["up,","to","going","you","(e.g.,"]},{"Key":"things up,","Fragments":["too."]},{"Key":"up, too.","Fragments":["My"]},{"Key":"too. My","Fragments":["brain"]},{"Key":"My brain","Fragments":["rebels"]},{"Key":"brain rebels","Fragments":["against"]},{"Key":"rebels against","Fragments":["Pascal"]},{"Key":"against Pascal","Fragments":["case,"]},{"Key":"Pascal case,","Fragments":["so"]},{"Key":"case, so","Fragments":["I"]},{"Key":"I often","Fragments":["forget.","like","add","go","even","work","use"]},{"Key":"good. Interesting","Fragments":["way"]},{"Key":"Interesting way","Fragments":["of","of","of"]},{"Key":"way of","Fragments":["solving","stopping","dividing","figuring","doing","overcoming","breaking","checking","validating","calculating","doing","saying","passing","doing","handling","solving","looping","solving","solving","setting","doing","coding","implementing","doing"]},{"Key":"of solving","Fragments":["the","this","the","the"]},{"Key":"solving the","Fragments":["```Yelling```","basic","basic","problem,","problem","same"]},{"Key":"the ```Yelling```","Fragments":["part"]},{"Key":"```Yelling``` part","Fragments":["(most"]},{"Key":"part (most","Fragments":["do"]},{"Key":"(most do","Fragments":["a"]},{"Key":"do a","Fragments":["regex).","ContainsKey","divide","lot","try/catch","dictionary","lookup","bunch","special","local","lot","'_head.HasValue'","conditional","conditional"]},{"Key":"does what","Fragments":["the","it"]},{"Key":"the ```Silence```","Fragments":["method"]},{"Key":"```Silence``` method","Fragments":["is"]},{"Key":"is doing","Fragments":["if","more","in","\"X\"","\"Z\",","to","more","three","here,","without","with"]},{"Key":"doing if","Fragments":["you're"]},{"Key":" It's","Fragments":["an","my","probably","not","possible","a","elegant,","been","good","not","unusual","very","nothing","just","nice","very","more","technically","a","easy","more","a","a","a","a","because","called"]},{"Key":"It's an","Fragments":["extension"]},{"Key":"method in","Fragments":["C#.","intellytype","your","the","a","it","the","the","the","the","as","your","your","Add"]},{"Key":"C#. See:","Fragments":["http://msdn.microsoft.com/en-us/library/bb383977.aspx"]},{"Key":"The method","Fragments":["gets","will","in","is"]},{"Key":"method gets","Fragments":["added","tested."]},{"Key":"gets added","Fragments":["onto","later.","to"]},{"Key":"added onto","Fragments":["all"]},{"Key":"onto all","Fragments":["values"]},{"Key":"all values","Fragments":["of","in","from"]},{"Key":"values of","Fragments":["the","'divisor'","First,","the"]},{"Key":"type so","Fragments":["you"]},{"Key":"so you","Fragments":["could","don't","don't","can","should","can't","can","can","don't","don't","can","can","just","can","can","should","should","don't","can","could","only","don't","don't","can","can","are","don't","can","can","can","won't","can","can","can","could","don't","(named","don't","could","made","only","don't","know:","know:","should","had","wouldn't","don't","no"]},{"Key":"could even","Fragments":["call","create","be"]},{"Key":"even call","Fragments":["something"]},{"Key":"call something","Fragments":["like:"]},{"Key":" ```200.IsDivisibleBy(2)```","Fragments":["if"]},{"Key":"```200.IsDivisibleBy(2)``` if","Fragments":["you"]},{"Key":"you really","Fragments":["wanted","want","need","want","want","need","need","need","need","want","covered","mean","need","need","want"]},{"Key":"really wanted","Fragments":["to."]},{"Key":" Thank","Fragments":["you","you","you!","you","you","you,","you.","you","you","for","you","you","you!","you.","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you."]},{"Key":"Thank you","Fragments":["for","for","for",":)","for","both","@garrick,","for","@laverne","for","for","@carol","MetalKid!","@robert","for","for","AlanTolan!","for","AlanTolan!","for","for","for","for","gyphie","all,","for","very","for","again","for","again.","so","for"]},{"Key":"you for","Fragments":["the","your","figuring","the","the","the","the","the","the","using","putting","a","the","your","the","taking","the","your","the","your","the","your","the"]},{"Key":"I would","Fragments":["move","pull","do","have","question","say","also","go","still","also","be","like.","probably","have","code","see","be","for","actually","think.","change","look","clean","suggest","replace","suggest","invite","start","change","make","also","add","name","never","name","end","add","take","argue","have","worry","move","move","not","think","represent","reserve","think","call","have","rename:","skip","expect","use","pull","have","assume","appreciate","also","probably","flame","refactor","personally","have","also","not","council","think","find","recommend","have","prefer","mention","just","change","think","have","ask","consider","guess","move","be","advise","not","not","create","however","say!","prefer","break","rename","also","prefer","rather","end","go","do","like","like","just","eliminate","probably","mention","replace","be","prefer","recommend","expect","expect","suggest","think","have","have","use","push","add","say","take","expect","probably","apply","probably","submit","have","push","have","also","suggest","say","have","like","push","add","leave","personally","never","also","agree.","probably","only","probably","push","create","suggest","just","take","wonder","suggest","have","do","be","need","totally","say","change","want","assume","recommend","want","strongly","suggest","do.","expect","find","check.","maybe","appreciate","probably","not","suggest","suggest","also","think","suggest","also","make","probably","have","change","say","like","check","say","say","probably","rename","extract","split","extract","go","use","include","typically","replace","personally","like","not","have","make","have","have","move","not","move","prefer","argue","do","want","have","consider","think","probably","humbly","have","like","like","turn","consider","have","suggest","use","also","switch","recommend,","change","advise","think","get"]},{"Key":"would move","Fragments":["the","the","the","the","that","the","helper"]},{"Key":"move the","Fragments":["length","check","check","IsSilence()","HasNoContent()","sortedInputString","default","predicate","creation","work","`string.IsNullOrWhiteSpace`","if","private,"]},{"Key":"the length","Fragments":["check","check/bounding","comparison","is","to","of","comparison."]},{"Key":"length check","Fragments":["into","should","(this"]},{"Key":"check into","Fragments":["the","its","IsLeap"]},{"Key":"into the","Fragments":["`areWordsSame`","rest","solution.","source","way","return","return.","over","regular","test","'old'","foreach","IsLeap","isDivisible","transformedValues","method.","dictionary?","two","fold","Dictionary.","strings","catch","method","framework.","constructor","control","habit","max","primes","kind","```yield```","execution","script","responseMap","test.","pool","Allergen","size","size","terniary"]},{"Key":"the `areWordsSame`","Fragments":["method."]},{"Key":"`areWordsSame` method.","Fragments":["That"]},{"Key":"method. That","Fragments":["really","would","would","saves"]},{"Key":"That really","Fragments":["is"]},{"Key":"really is","Fragments":["the","is","a","only","no","no","no","no","about"]},{"Key":"the simplest","Fragments":["check","math","and","way.","approach"]},{"Key":"simplest check","Fragments":["to"]},{"Key":"check to","Fragments":["see","see","know","pass","see","see","throw","see","see","see","make","see","the","account"]},{"Key":"to see","Fragments":["if","if","what","the","the","some","what","some","if","if","if","if","it","if","someone","if","if","a","if","the","this","what","if","if","if","a","if","that","if","where","what","the","if","if","other","if","how","how","a","something","if","someone","is","the","if","if","the","a","if","if","this","if","if","if","a","if","if","how","if","how","if","if","in","an","how","the","whether","whether","the","how","if","if","if","if","var","what","names","if","someone","what","if","how","if","them"]},{"Key":"see if","Fragments":["anagrams","it","you","you","a","those","the","they","there's","the","anything","anything","it","I","it","it","the","it","something","it","I","the","the","the","I","you","they","they","I","any","I","I","the","primeFactors","the","ToUpper()","we","its","I","the","it","the","the","I","there","it"]},{"Key":"if anagrams","Fragments":["are"]},{"Key":"anagrams are","Fragments":["likely."]},{"Key":"If the","Fragments":["inputs","else","return","test","test","method","above","tests","tests","language","deep","caller","inner","dna","enumeration","mod","grade","original","database","dictionary","Planet","year","TryParse","year","year","input","string"]},{"Key":"the inputs","Fragments":["are","are","to","and"]},{"Key":"inputs are","Fragments":["megabytes","non-null"]},{"Key":"are megabytes","Fragments":["of"]},{"Key":"megabytes of","Fragments":["text"]},{"Key":"of text","Fragments":["then","in"]},{"Key":"text then","Fragments":["we"]},{"Key":"then we","Fragments":["want","don't","don't","must","simply","have","return","call","call","would"]},{"Key":"we want","Fragments":["a","the","up","to","the","them","to"]},{"Key":"want a","Fragments":["simple","challenge","character,","Friday,","derived","scrabble"]},{"Key":"a simple","Fragments":["way","liner","as","return","expession","tutorial.","problem,","solution","constructor","rule","type","problem.","if(wordCounts.ContainsKey(word))","one","for","exercise","Linq","result.","expression","double","and","CharacterRequest","task","prime","cut","solution.","test","exercise","string","LINQ","approach.","method","exercise","exercise"]},{"Key":"simple way","Fragments":["of","to","to"]},{"Key":"of stopping","Fragments":["processing"]},{"Key":"stopping processing","Fragments":["before"]},{"Key":"processing before","Fragments":["doing"]},{"Key":"before doing","Fragments":["any"]},{"Key":"doing any","Fragments":["sort","intermediate","further"]},{"Key":"any sort","Fragments":["of","of","of","of"]},{"Key":"sort of","Fragments":["character","the","Console.ReadLine","a","looping","do","thing","check","looping","enumerable","fatal","function?","error.","Dependency","null","a"]},{"Key":"of character","Fragments":["comparison"]},{"Key":"character comparison","Fragments":["between"]},{"Key":"comparison between","Fragments":["the"]},{"Key":"between the","Fragments":["strings.","last","last","lines","check","Roster"]},{"Key":" Nice","Fragments":["job.","use","single","solution!","use","and","one!","comment","use","use","but","to","one.","make","use","that","work","work.","work.","code!","Code!!!!","Code!!!","Code!!"]},{"Key":"Nice job.","Fragments":["I'm"]},{"Key":"job. I'm","Fragments":["a"]},{"Key":"I'm a","Fragments":["fan","newbie","novice,","noob.","fairly","bit","doofus","bad"]},{"Key":"a fan","Fragments":["of","of","of","of","of","of","of","of.","of","of","of","of","of","of","of","of","of"]},{"Key":"fan of","Fragments":["extension","returning","the","nesting","TTD.","using","Linq","methods","the","really","the","using","the","needing","them","the","either","reflection","stringing"]},{"Key":"of extension","Fragments":["methods.","methods"]},{"Key":"methods. Do","Fragments":["you"]},{"Key":"you know","Fragments":["if","what","why","what","`x","what","that","what","how","how","they","that","the","to","what","that","all","you","if","it's","what","the","how","you"]},{"Key":"know if","Fragments":["there","it","I","performance","it","I","it's","someone","I","these","that","that","there","you","it's","it","that","a","there","you've","the","you'd","you","somethings"]},{"Key":"there are","Fragments":["any","valid","things","some","more","too","some","multiple","a","lots","exceptions","a","multiple","a","multiple","none","an","a","two","three","as","no","limited","other","a","only","loops...","more","a","the","equal","other","other","without","a","improvements.","only","some","no","likely","no","proper","quite","many","no","different","any","no","only","no","better","only","no","ints"]},{"Key":"are any","Fragments":["performance","requests"]},{"Key":"any performance","Fragments":["implications"]},{"Key":"performance implications","Fragments":["with"]},{"Key":"implications with","Fragments":["using"]},{"Key":"with using","Fragments":["an","the","NUnit.","GroupBy"]},{"Key":"using an","Fragments":["extension?","array","Integer","inline","if","input.","array","if","array","enum","array","enum.","inherently","if","if","instance","additional"]},{"Key":"is my","Fragments":["first","explanation.","initial,","initial","first","first","personal","C","first","job.","new","first","first","first","initial","first"]},{"Key":"my first","Fragments":["C#","time","iteration,","version","night","attempt.","submit.","iteration.","stab","pass.","pass.","attempt","pass","pass,","solution)","language","iteration","iteration","response","iteration,","attempt.","iteration.","day","attempt,","attempt...","solution","pass,","if","try","exercism!","pass,","iteration","submission","fetched"]},{"Key":"first C#","Fragments":["code"]},{"Key":"C# code","Fragments":["ever,","seems"]},{"Key":"code ever,","Fragments":["so"]},{"Key":"ever, so","Fragments":["probably"]},{"Key":"so probably","Fragments":["terrible."]},{"Key":"probably terrible.","Fragments":["Nitpick"]},{"Key":"terrible. Nitpick","Fragments":["away!"]},{"Key":"I used","Fragments":["ulong","UInt16.","the","a","clarifying","this","the","a","LinQ","to","Resharper","`var`","is","Microsoft's","var","nested","on","an","a","before.","regular","and","Regex","Regex","a","two","an","it","a","the","'_hasKind'","a","AsReadOnly()","a","a","an","doubles,","a","in","in","to","an","generators","a","the","it"]},{"Key":"used ulong","Fragments":["for"]},{"Key":"ulong for","Fragments":["the"]},{"Key":"year a","Fragments":["bit","multiple","leap","leap","leap"]},{"Key":"bit arbitrarily","Fragments":["except"]},{"Key":"arbitrarily except","Fragments":["that"]},{"Key":"except that","Fragments":["a","if","they"]},{"Key":"that a","Fragments":["year","normal","single","failing","year","\u0026\u0026","good","five","bit","lot","better","Triangle","\"","multiple","word","ordered","given","formatted","number","not","year"]},{"Key":"a year","Fragments":["cannot","(in","is","is","cannot","2000","is","is","is","is","is","is","for","from","and","0","isn't","was","submitted","number","and","and","and","a","a","that"]},{"Key":"year cannot","Fragments":["be","possibly"]},{"Key":"cannot be","Fragments":["negative.","ran","called","called","modified.","leap","indexed","null","smaller"]},{"Key":"be negative.","Fragments":["I"]},{"Key":"negative. I","Fragments":["also"]},{"Key":"also think","Fragments":["that","that","that","that","\"if"]},{"Key":"if statement","Fragments":["is","and","is","and","something","becomes","directly?","is","failed,","might","for","(see","as","without","as","uses","and","though.","but","by","for","right","a","```year","to","over","and","and","in"]},{"Key":"statement is","Fragments":["a","also","checking.","of","automatically","only","automatically","logically","highly","short","that","true)","short,"]},{"Key":"bit difficult","Fragments":["to","to","to"]},{"Key":"difficult to","Fragments":["read","read.","maintain.","figure","follow/debug","read","read","follow/debug","debug/maintain","follow.","see","maintain","read.","read","debug/maintain.","read","read.","read","see","read","follow.","check,","read.","see","ready.","understand","read.","read","read.","read","unit","test.","tell","maintain","read","read","read","follow"]},{"Key":"read but","Fragments":["not","not","this"]},{"Key":"but not","Fragments":["sure","100.","by","the","by","if","including","on","in","lines","for","so","a","\u003cb\u003ecast--iron\u003c/b\u003e","all","in","\"'Twas","including","another?","change","during","sure","as","400.","privates?","by","that","on","IMHO","in","reposting","as","for","impressed..","really"]},{"Key":"sure how","Fragments":["to","to","you","to","one","I","to","starting","that"]},{"Key":"how to","Fragments":["clean","do","use","rewrite","use","perform","add","pipe","connect","do","make","use","use","use","self","write","fancy","get","get","use","strip","easily","cover","actually","add","compile","do","initialize","handle","use","open","implement","get","define","use","prevent","handle","set","use","use","use","code.","recalculate","manage","encode","implement","improve","format","put","improve","do","avoid","do","iterate","refactor","perform"]},{"Key":"to clean","Fragments":["it","up","the","up","up?","it","the","each"]},{"Key":"clean it","Fragments":["up.","up."]},{"Key":"I just","Fragments":["realized","realized","wanted","realized","coded","misunderstood","made","didn't","like","found","learned","changed","went","called","feel","wanted","went","went","made","noticed.","submitted","take","fill","could","wanted","think","wrote","went","wanted","wanted","couldn't","did","looked","added","realized","looped","wanted","need","don't","used","did","manually","realized","did","approached","gave","wrote,","consider","wanted","realized","realised","wanted"]},{"Key":"just realized","Fragments":["that","that","I","there","why","that"]},{"Key":"realized that","Fragments":["if","if","adding","it's","the","even","mistake","my","that","the","this","mine","if/else","IsNullOrWhiteSpace","right","it","none","I"]},{"Key":"that if","Fragments":["%","%","the","you","I","fourCheck","it's","I","check","you","there's","it","the","the","x","the","its","possible.","all","a","there","it","I","the","the","I","it","the","it","you","the","DNA()","you","someone"]},{"Key":"if %","Fragments":["4","4","4"]},{"Key":"0 fails,","Fragments":["then","then","it"]},{"Key":"fails, then","Fragments":["we","we","400"]},{"Key":"we don't","Fragments":["want","want","expect","go","need","know","need"]},{"Key":"don't want","Fragments":["to","to","to","to","to","to","something","to"]},{"Key":"do any","Fragments":["more","more","sort","difference","updates","more","more"]},{"Key":"any more","Fragments":["checks","checks","descriptive","elegant","efficient.","control","iterations","because","work.","work","efficient,","efficient,","semantic"]},{"Key":"more checks","Fragments":["because","because","within"]},{"Key":"checks because","Fragments":["nothing","nothing"]},{"Key":"because nothing","Fragments":["can","can"]},{"Key":"nothing can","Fragments":["work.","work."]},{"Key":"can work.","Fragments":["Thus,","Thus,"]},{"Key":"work. Thus,","Fragments":["I","I"]},{"Key":"Thus, I","Fragments":["rearranged","rearranged"]},{"Key":"I rearranged","Fragments":["the","the"]},{"Key":"rearranged the","Fragments":["checks","checks"]},{"Key":"the checks","Fragments":["a","a","use","could","into","that","it","in"]},{"Key":"checks a","Fragments":["bit","bit"]},{"Key":"bit the","Fragments":["year","year"]},{"Key":"year %","Fragments":["100","400","100","400","100","400","4","100","4","400","100","400","100","100","4,","4","4","400","400","100","4","4)\"","400","4","100","400","400","100","4","4","400","100","400","400","400","400","100","400","100","400","400","100","4","100","400","4","4","400","4","100","400","4","400","100","100","400","400","4","400","4","100","400","4","4","100","400","4","100","400","100","400","400","400","100","100","4","400","400","100","4","4","4","100"]},{"Key":"100 !=","Fragments":["0","0","0)","0\"","0;","0","0","0;","0)","0","0","0","0;","0);","0","0","0","0","0","||","0","0","0","0","0)","0)","0`","0","0","0","0","0","0)","0));","0);","0","0)","0)","0)","0))","0","0","0)","0)","0","0)","0\""]},{"Key":"!= 0","Fragments":["has","has","||","||","||","||","\u0026\u0026","||","||","||","||","||","||","is","||","\u0026\u0026","||","||","||","||","||","||","\u0026\u0026","||","||","||","\u0026\u0026",")"]},{"Key":"0 has","Fragments":["a","a","to"]},{"Key":"a 99/100","Fragments":["chance","chance"]},{"Key":"99/100 chance","Fragments":["of","of"]},{"Key":"chance of","Fragments":["being","returning","being","returning","being","been","ever","a"]},{"Key":"of being","Fragments":["true,","true,","more","called.","easy","able","more","a","more"]},{"Key":"being true,","Fragments":["so","so"]},{"Key":"true, so","Fragments":["it","it"]},{"Key":"is checked","Fragments":["first...","first...","if"]},{"Key":"checked first...","Fragments":["While","While"]},{"Key":"first... While","Fragments":["year","year"]},{"Key":"While year","Fragments":["%","%"]},{"Key":"400 only","Fragments":["has","has"]},{"Key":"only has","Fragments":["a","a","one","static"]},{"Key":"a 1/400","Fragments":["chance","chance","chance"]},{"Key":"1/400 chance","Fragments":["of","of","of"]},{"Key":"of returning","Fragments":["true.","true.","a","a"]},{"Key":" Knock","Fragments":["knock,"]},{"Key":"Knock knock,","Fragments":["is"]},{"Key":"knock, is","Fragments":["this"]},{"Key":"is this","Fragments":["thing","important?","line","stupidly","premature"]},{"Key":"this thing","Fragments":["on?"]},{"Key":"thing on?","Fragments":[":)"]},{"Key":" Using","Fragments":["the","`s`","hash","the","as","advice","the","Unique","extension","FirstOrDefault()","Regex","contains","the","`var`","the"]},{"Key":"Using the","Fragments":["built-in","NuGet","powerful","square","short-circuit","\u003cb\u003eAreEqual()\u003c/b\u003e","```Dictionary[key]","below"]},{"Key":"the built-in","Fragments":["functions","methods","calendar"]},{"Key":"built-in functions","Fragments":["seems"]},{"Key":"functions seems","Fragments":["more"]},{"Key":"seems more","Fragments":["reliable","functional","intuitive"]},{"Key":"more reliable","Fragments":["than"]},{"Key":"reliable than","Fragments":["trying"]},{"Key":"than trying","Fragments":["to","to"]},{"Key":"trying to","Fragments":["calculate","refactor","do?","do.","say","do","extract","be","make","go","learn","get","get","get","use","break","do.","understand","get","handle","put","opt","accomplish","say","copy,","troubleshoot","insert","avoid","split","match","think","do","do","get","sort","trying","be","think","remove","see","brag","say","implement","parse,","brainstorm","prevent","be","make","compute","make","add","parse,","enforce","run","compile","do","figure","do","justify","remove"]},{"Key":"to calculate","Fragments":["the","the","wordsAreDifferent,","B.C.","it","the","number","the","the","the","the","the","date","all","the","the","some","it"]},{"Key":"calculate the","Fragments":["value","value","score","beginning","score","score","list","age","ending","ending","primes,","prime","primes","date","date","score","score"]},{"Key":"the value","Fragments":["directly.","4,","directly,","directly.","of","by","and","of","of","to","of","stored","rather","of","to","somehow.","would","\u003e","of","I","of","of","at","with","already","stored","had","you","checks","was","being","in","0","and","to","if","is","of","of","from"]},{"Key":"Good point","Fragments":["--","on","didn't","re","@mae"]},{"Key":"point --","Fragments":["that"]},{"Key":"-- that","Fragments":["is","seems"]},{"Key":" Regular","Fragments":["expressions"]},{"Key":"Regular expressions","Fragments":["is"]},{"Key":"expressions is","Fragments":["not","they","that"]},{"Key":"not my","Fragments":["strong","style","idea,"]},{"Key":"my strong","Fragments":["suit","suit"]},{"Key":"strong suit","Fragments":["so","either"]},{"Key":"suit so","Fragments":["went"]},{"Key":"so went","Fragments":["with"]},{"Key":"went with","Fragments":["a","the","a","a","Linq,","it!","the","manually","a","the","what","this","this","this"]},{"Key":"a split","Fragments":["instead."]},{"Key":"for letting","Fragments":["me","me"]},{"Key":"letting me","Fragments":["know.","know"]},{"Key":" fine","Fragments":["back"]},{"Key":"fine back","Fragments":["to"]},{"Key":"back to","Fragments":["the","this","it","an","studying","refactor","strings.","before","code","a","look","AA001.","it,","read","pure","a","this","answer,","strings","an"]},{"Key":"to the","Fragments":["if","point.","Gregorian","right","same","`==","intent","code","begining","```Hey()```","same","Match(...)","syntax!","roster","calling","test","top","top","test","size","top","resources","rule,","right","left","person","most","most","second","same","point","first","point","point","above","exercism","if","string","spec,","individual.","way","call","foreach","code,","provided","method,","goal","IsLeap()","old","result.","following","good","operation","problem","_Roster","default","number","data.","second","isYear","year,","tests","order","top.","problem,","\"return","expected","dictionary,","relevant","Map","code","opposite,","input","smaller","dictionary.","dictionary,","boolean","original.","enumerations","point?","second","point.","reader","string","dictionary.","dictionary.","name","caller;","simple","local","definition","result.","adoption","where","upper","end","test","dictionary","variable.","correct","correct","routine","\u003cb\u003einput\u003c/b\u003e","DateTime","examples.","random","sum-list,","constructor","local","second","caller","class","\"ones\"","other","first","enum.","enum!","enum","list","following","list.","code.","following.","supporting","dictionary.","next.","next","first","last","next","square","List","end","dictionary--there's","formatting","dictionary","usefulness","other.","current","following.","user","first","return","README","bottom","code","list","same","spirit","existing","data","existing","logic","valueCharacters","dictionary",".dll","divisible","end","fewest","reader?","explanation","project.","List","next","dictionary,","return","next","top","top,","top,","top","conditional","others.","exercises.","base","actions.","end.","other","same","foreach","constructor","comprehensibility","point","class.","Zip","test","rule","challenge","source","spirit","block","tests","```Compute```","lower","top."]},{"Key":"if else","Fragments":["ifs","statements,","statement.","statements."]},{"Key":" ah,","Fragments":["I'm"]},{"Key":"ah, I'm","Fragments":["still"]},{"Key":"I'm still","Fragments":["new","not","pretty","trying","unconvinced","new","relatively","not"]},{"Key":"still new","Fragments":["at","to"]},{"Key":"new at","Fragments":["this."]},{"Key":"at this.","Fragments":["I've","I'm"]},{"Key":"this. I've","Fragments":["never"]},{"Key":"I've never","Fragments":["used","seen","worked","actually","seen","used","written","utilized","been","seen","used"]},{"Key":"never used","Fragments":["NUnit","it","HashSet","Enums"]},{"Key":"used NUnit","Fragments":["framework","before,"]},{"Key":"NUnit framework","Fragments":["before","does"]},{"Key":"framework before","Fragments":["so"]},{"Key":"before so","Fragments":["I"]},{"Key":"I didn't","Fragments":["know","really","know","make","create","(and","think","have","focus","use","know","submit,","realize","consider","really","think","see","choose","even","know","think","realize","feel","know","even","like","want","actually","know","either.","know","had","quite","understand","want","think","realize","realize","want","bother","spend","really","know","have","like","run","really","notice","really","really","figure","think","have","want","know","realize","think","mean","elaborate","have","bother","want","want","want","want","think","think","really","do","think","write","know","need","realize","know","even","see","see","know","know","notice","know","realize","know","end","think","see","realize","find","find","have","copy","initialize","look","use","cheat","adjust","bother","like","bother"]},{"Key":"know that.","Fragments":["I"]},{"Key":"that. I","Fragments":["think","wasn't","appreciate","believe"]},{"Key":"think I'll","Fragments":["go","make","refactor"]},{"Key":"I'll go","Fragments":["back","do","for"]},{"Key":"go back","Fragments":["and","to","and","and","and","and","and","and","into","and"]},{"Key":"back and","Fragments":["try","which","looked","forth","refactor","look","add","use","noticed","redo","forth","forth","do"]},{"Key":"and try","Fragments":["to","a","to","again,","to","that","the","to"]},{"Key":"out how","Fragments":["to","to","to","to","this","to","many","to","to","to","I"]},{"Key":"do that","Fragments":["and","next","for","or","in","calculation","if","as","once","work","already.","for","here!","once","with","within","using","using","in","at","for","for"]},{"Key":"that and","Fragments":["then","calling","thought","shouldn't","create","did"]},{"Key":"and then","Fragments":["resubmit","iterating","a","call","have","make","make","nest","back","simply","bring","we","it","the","return","remove","never","providing","running","the","I","another","I","returning","return","you","compare","String.Concat","converting","ported","split","using","we","indexing","grabbing","scan","reference","call","the","add","generate","compare","immediately","use","have","to","return","return","assign","working","I","click","after","one","stopped.","stopped.","checking","for","becomes","23","383","6141","checking","in","do","initializing","simply","when","converting","just","simply","call","create","Func2","took","start","it","mucking","it","you","returns","converts","returned?","just","check","`Sum`","use","rethrowing","return","splitting","there","arranging","check","make","adding","assign","summing","do","calculate","other","built","find","call","check","removing","submitting","test","return","use","there","one"]},{"Key":"code example","Fragments":["better,"]},{"Key":"example better,","Fragments":["Spin!"]},{"Key":"It looks","Fragments":["good","clever","like","good.","good.","like","like","like","like","like","like","like","like","fine"]},{"Key":" ```isEmpty```","Fragments":["could"]},{"Key":"```isEmpty``` could","Fragments":["be"]},{"Key":"be replaced","Fragments":["by","with","simply","with","by","with","with","with","by","by","by","by","with","by","by","with"]},{"Key":"replaced by","Fragments":["```string.IsNullOrWhiteSpace```","a","*divisibleBy400*.","a","a","a",".StartsWith('\\'')","a","a","foreach"]},{"Key":"could probably","Fragments":["rename","be","make","be","lose","get","slightly","condense","start","be","be","convert"]},{"Key":"probably rename","Fragments":["the"]},{"Key":"rename the","Fragments":["```isCustomUpper```","enum","`int"]},{"Key":"the ```isCustomUpper```","Fragments":["function"]},{"Key":"```isCustomUpper``` function","Fragments":["to"]},{"Key":"function to","Fragments":["better","get","do","do","handle","remove","capture","aid","make","make","test","strip","replace","know.","pass","check","take","determine"]},{"Key":"to better","Fragments":["indicate","communicate"]},{"Key":"better indicate","Fragments":["what"]},{"Key":"indicate what","Fragments":["it's"]},{"Key":"what it's","Fragments":["doing","doing?","doing.","supposed","there","designed","divisible","doing.","checking."]},{"Key":"thinking of","Fragments":["doing","using","it..","getting"]},{"Key":"of doing","Fragments":["it","this","it.","all","that,","a","it","it","things","the","the","it!","this","it."]},{"Key":"it with","Fragments":["the","its","the","anonymous","3","a","the","immutable","the","this:","a","a","no","a","one","your","out","multi-loops","a","functional","letters"]},{"Key":"with the","Fragments":["interpreter","ternary","underscore?","methods","same","way","method","comments","naming","test","extension","check","100","default","help","predicate","proper","class","relevant","same","remaining","operational","safety","message","mid-function","string","result,","usual","coding.","most","if/else","test","LeapTest.cs,","logic.","\"p_\"","guard","list.","method-syntax","AutoCompletion.","Decimal,","trick","'recommended'","FilterPhrase","recommendation","Valid_leap_year()","first(and","sort","loop",".NET","unit","`phrase`","change","minimal","above","if","supplied","for","state","method","code,","larger","approved","results,","class","result,","modulo","code","string","Express","compiled","string","strings","\"extra","generic","previous","DateTime","extra","one-liner","same","selects","number","exception.","latter","former.","fact","string","name","way","constructor.","correct","supplied","ordinal","caps","specified","syntax","test","following","comparison","next","ternary","test","calculation.","Sieve","other","performance","primes","best","readability,","easier","perfect","readability!","modulus","int","if-statement","explanation.","basic","libraries.","comments","variable","ToLowerInvariiant","exercism","',","empty","return","expected","LeapYear","Console","method.","Console.","test.","same","normal","idea","readability","introductory","nitpicks","incorrect","next","\"Ignore_non_allergen_score_parts\"","following","two","char","tests","next","next","for","modulo","same","different","run-once","method","index","NUnit.Framework","idea","readability","way","FlagAttribute,","length","two"]},{"Key":"the interpreter","Fragments":["design"]},{"Key":"interpreter design","Fragments":["pattern(I"]},{"Key":"design pattern(I","Fragments":["don't"]},{"Key":"pattern(I don't","Fragments":["even"]},{"Key":"don't even","Fragments":["know","notice","notice.","cross","really","need"]},{"Key":"even know","Fragments":["if","there"]},{"Key":"will work","Fragments":["but","just","with","just","-","out","you","on"]},{"Key":"work but","Fragments":["I","with"]},{"Key":"guess it","Fragments":["will)","shows","would","is","would","doesn't","might"]},{"Key":"it will)","Fragments":["but"]},{"Key":"will) but","Fragments":["I"]},{"Key":"am known","Fragments":["to"]},{"Key":"known to","Fragments":["be","be","be"]},{"Key":"be a","Fragments":["retard","bit","fair","good","default","leap","happy","simpler","good","static","bit","single,","private","leap","betaCount","negative","property","problem","few","lot","bit","single","question","bit","leap","leap","big","great","little","leap","short","little","little","way","question,","great","good","part","leap","rule","useful","\"business","better","`ReadOnlyDictionary`.","better","business","requirement","single","lot","lot","copy!","great","huge","fan","good","way","taxing","easier","better","failed","property.","class.","static","problem.","better","sinch","better","problem","difference","lot","good","single","bit","of","problem","problem...","pointless","Math","dead","few","long.","composite","little","derived","bit","foreach","problem,","positive","uint?","bug,","waste.","more","good","function","nice","Gregorian","program?","little","way","better","really","better","pain","lot","simpler/shorter","static","leap","leap","generator","good"]},{"Key":"a retard","Fragments":["at"]},{"Key":"retard at","Fragments":["making"]},{"Key":"at making","Fragments":["complex"]},{"Key":"making complex","Fragments":["solutions"]},{"Key":"complex solutions","Fragments":["with"]},{"Key":"solutions with","Fragments":["less"]},{"Key":"with less","Fragments":["complex","lines","comments"]},{"Key":"less complex","Fragments":["problems"]},{"Key":"complex problems","Fragments":["so"]},{"Key":"problems so","Fragments":["I","I"]},{"Key":"I choose","Fragments":["not"]},{"Key":"choose not","Fragments":["to"]},{"Key":"not to","Fragments":["be","post","nest","go","extract","fall","short","see","pass","happy","say","use","see","what","use","use","use","use","change","use","throw","use","use","use","worry","include","use","use"]},{"Key":"be bold","Fragments":["and"]},{"Key":"bold and","Fragments":["settle"]},{"Key":"and settle","Fragments":["for"]},{"Key":"settle for","Fragments":["a"]},{"Key":"simple liner","Fragments":["with"]},{"Key":"liner with","Fragments":["conditional","tertiary"]},{"Key":"with conditional","Fragments":["operators."]},{"Key":"conditional operators.","Fragments":["I","I"]},{"Key":"operators. I","Fragments":["think","think"]},{"Key":"think this","Fragments":["is","code","code","is","extension","is","is","looks","would","is","is","is","is","would","is","is","algorithm","is","is","makes","is","can","made","is","is","can","would","is","is","iteration","exercise","looks","type","is","finally","is","is","is","code","simplifies","might","exercise","solution","solution","exercise","exercise","exercise","was","version"]},{"Key":"a fairly","Fragments":["readable","trivial","new","simple","standard","safe"]},{"Key":"fairly readable","Fragments":["and"]},{"Key":"and optimized","Fragments":["approach."]},{"Key":"I should","Fragments":["probably","have","still","comment.","modify","not","not","have?","read","be","be","just","do","use","be","remember","have,","go","go","test","use","have","just","have","certainly","have","probably","have","have","have","check","handle","do","do","have","have","be","probably","have","be","have","have","have","have","have","probably","just","probably","have","have","take","have","have","have","probably"]},{"Key":"probably add","Fragments":["a","Asserts"]},{"Key":"add a","Fragments":["comment","reference","special","project","project","few","couple","descriptive","key","switch-case","single","comment","Console.ReadLine()","Console.Readline()","new","new","duplicate","binary","conditional"]},{"Key":"comment explaining","Fragments":["how"]},{"Key":"explaining how","Fragments":["the"]},{"Key":"how the","Fragments":["calculations","leap","usage","IsShout()","%","meaning","tests","from"]},{"Key":"the calculations","Fragments":["are","in","up","were","up","would","up","up","would","up","as","and","so,"]},{"Key":"calculations are","Fragments":["lined"]},{"Key":"are lined","Fragments":["up."]},{"Key":" Ah,","Fragments":["I","I","didn't","very","yes.","riiiiight,","I","good","of","true.","ReSharper..."]},{"Key":"Ah, I","Fragments":["like","wasn't","get"]},{"Key":"the minus","Fragments":["6"]},{"Key":"minus 6","Fragments":["days"]},{"Key":"6 days","Fragments":["thing"]},{"Key":"days thing","Fragments":["better"]},{"Key":"thing better","Fragments":[":-)."]},{"Key":"I love","Fragments":["the","that","seeing","how","the","it:)","the","Linq.","your","you","Linq","this","finishing"]},{"Key":"love the","Fragments":["way","use","use"]},{"Key":"way you","Fragments":["used","can","expect.","use","could","make","used","could","setup","can","returned","want","have","can","are","would","check","would","don't","structured","can","can","think","made"]},{"Key":"you used","Fragments":["the","`.ToLowerInvariant`...","powershell","your","private","pascal","the","a","string","a","the","the","at","a","a","a"]},{"Key":"used the","Fragments":["conditionals","char.IsLetter","\"var\"","`^`","three","simple","\"AddMonth\"","Sieve","Pow()","index","break","StringComparison.InvariantCultureIgnoreCase","same","size","return","current","trick"]},{"Key":"the conditionals","Fragments":["with","could","so","in","into","all","into","`year"]},{"Key":"conditionals with","Fragments":["out"]},{"Key":"with out","Fragments":["a","an","an","parsing","the","the"]},{"Key":"out a","Fragments":["ternary","leap","little","way","score.","way"]},{"Key":"a ternary","Fragments":["operator","operation,","operation!","operation","operator:","expression?"]},{"Key":"operator at","Fragments":["all","the","all"]},{"Key":"at all","Fragments":["yet","of","clear","are","so","and","clear.","costs!","your","related","with","here."]},{"Key":"all yet","Fragments":["managed"]},{"Key":"yet managed","Fragments":["to"]},{"Key":"managed to","Fragments":["get","post","compact","fix","fix"]},{"Key":"get it","Fragments":["down","to","working","to","to","to","to","past","to","to","to","first"]},{"Key":"it down","Fragments":["to","to","to","(and","to","into","to","to"]},{"Key":"down to","Fragments":["one","personal","`isAllCaps`","the","the","its","a","one","habit","something","one","a","characters?","one","verse","simpler","19ms).","one","a","a","the","a","the","get","about"]},{"Key":"to one","Fragments":["line","line,","of","line","of","method","logical","style","the","line","line","statement","reference"]},{"Key":"of code.","Fragments":["In","But","You","In","Even"]},{"Key":"code. In","Fragments":["fact","those","this"]},{"Key":"In fact","Fragments":["I","for","it"]},{"Key":"fact I","Fragments":["have","had","am"]},{"Key":"to give","Fragments":["this","the","a","an","you","you","the","it","it"]},{"Key":"give this","Fragments":["5"]},{"Key":"this 5","Fragments":["stars"]},{"Key":"5 stars","Fragments":["for"]},{"Key":"stars for","Fragments":["being"]},{"Key":"for being","Fragments":["both","explicit."]},{"Key":"being both","Fragments":["extremely"]},{"Key":"both extremely","Fragments":["readable"]},{"Key":"extremely readable","Fragments":["yet"]},{"Key":"readable yet","Fragments":["very"]},{"Key":"yet very","Fragments":["minimal."]},{"Key":"best solution","Fragments":["I","is","I"]},{"Key":"solution I","Fragments":["have","came","could","came","have"]},{"Key":" PS","Fragments":["C:\\\u003e","C:\\\u003e","C:\\\u003e","C:\\\u003e","C:\\\u003e","C:\\\u003e","C:\\\u003e"]},{"Key":"PS C:\\\u003e","Fragments":["$leapYearArr","$leapYearArr",".\\exercism.bob.exe",".\\exercism.bob.exe",".\\exercism.bob.exe",".\\exercism.bob.exe",".\\exercism.bob.exe"]},{"Key":"C:\\\u003e $leapYearArr","Fragments":["=","|"]},{"Key":"$leapYearArr =","Fragments":["1800..1830"]},{"Key":"$leapYearArr |","Fragments":["%"]},{"Key":"| %","Fragments":["{.\\LeapYear.exe"]},{"Key":"% {.\\LeapYear.exe","Fragments":["$_}"]},{"Key":"The year","Fragments":["1800","1801","1802","1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","must","going","is","isn't"]},{"Key":"year 1800","Fragments":["is"]},{"Key":"1800 is","Fragments":["not"]},{"Key":"year 1801","Fragments":["is"]},{"Key":"1801 is","Fragments":["not"]},{"Key":"year 1802","Fragments":["is"]},{"Key":"1802 is","Fragments":["not"]},{"Key":"year 1803","Fragments":["is"]},{"Key":"1803 is","Fragments":["not"]},{"Key":"year 1804","Fragments":["is"]},{"Key":"1804 is","Fragments":["a"]},{"Key":"year 1805","Fragments":["is"]},{"Key":"1805 is","Fragments":["not"]},{"Key":"year 1806","Fragments":["is"]},{"Key":"1806 is","Fragments":["not"]},{"Key":"year 1807","Fragments":["is"]},{"Key":"1807 is","Fragments":["not"]},{"Key":"year 1808","Fragments":["is"]},{"Key":"1808 is","Fragments":["a"]},{"Key":"year 1809","Fragments":["is"]},{"Key":"1809 is","Fragments":["not"]},{"Key":"year 1810","Fragments":["is"]},{"Key":"1810 is","Fragments":["not"]},{"Key":"year 1811","Fragments":["is"]},{"Key":"1811 is","Fragments":["not"]},{"Key":"year 1812","Fragments":["is"]},{"Key":"1812 is","Fragments":["a"]},{"Key":"year 1813","Fragments":["is"]},{"Key":"1813 is","Fragments":["not"]},{"Key":"year 1814","Fragments":["is"]},{"Key":"1814 is","Fragments":["not"]},{"Key":"year 1815","Fragments":["is"]},{"Key":"1815 is","Fragments":["not"]},{"Key":"year 1816","Fragments":["is"]},{"Key":"1816 is","Fragments":["a"]},{"Key":"year 1817","Fragments":["is"]},{"Key":"1817 is","Fragments":["not"]},{"Key":"year 1818","Fragments":["is"]},{"Key":"1818 is","Fragments":["not"]},{"Key":"year 1819","Fragments":["is"]},{"Key":"1819 is","Fragments":["not"]},{"Key":"year 1820","Fragments":["is"]},{"Key":"1820 is","Fragments":["a"]},{"Key":"year 1821","Fragments":["is"]},{"Key":"1821 is","Fragments":["not"]},{"Key":"year 1822","Fragments":["is"]},{"Key":"1822 is","Fragments":["not"]},{"Key":"year 1823","Fragments":["is"]},{"Key":"1823 is","Fragments":["not"]},{"Key":"year 1824","Fragments":["is"]},{"Key":"1824 is","Fragments":["a"]},{"Key":"year 1825","Fragments":["is"]},{"Key":"1825 is","Fragments":["not"]},{"Key":"year 1826","Fragments":["is"]},{"Key":"1826 is","Fragments":["not"]},{"Key":"year 1827","Fragments":["is"]},{"Key":"1827 is","Fragments":["not"]},{"Key":"year 1828","Fragments":["is"]},{"Key":"1828 is","Fragments":["a"]},{"Key":"year 1829","Fragments":["is"]},{"Key":"1829 is","Fragments":["not"]},{"Key":"year 1830","Fragments":["is"]},{"Key":"1830 is","Fragments":["not"]},{"Key":"I started","Fragments":["by","with","of","out","learning","off","refactoring","to","appending","writing","off","with.","with","out","to"]},{"Key":"started by","Fragments":["just"]},{"Key":"by just","Fragments":["adding","checking","adding","returning","about","specifying"]},{"Key":"just adding","Fragments":["if","the"]},{"Key":"adding if","Fragments":["statements."]},{"Key":"if statements.","Fragments":["After","Good","Having","What","I","x","Not","I"]},{"Key":"statements. After","Fragments":["the","that"]},{"Key":"After the","Fragments":["400","first","second","third"]},{"Key":"the 400","Fragments":["division","in","one","year"]},{"Key":"400 division","Fragments":["case,"]},{"Key":"division case,","Fragments":["the"]},{"Key":"case, the","Fragments":["code","following"]},{"Key":"code got","Fragments":["pushed"]},{"Key":"got pushed","Fragments":["too"]},{"Key":"pushed too","Fragments":["right"]},{"Key":"too right","Fragments":["into"]},{"Key":"right into","Fragments":["special","the"]},{"Key":"into special","Fragments":["cases"]},{"Key":"special cases","Fragments":["and","neatly.","to","within","should"]},{"Key":"cases and","Fragments":["was","might"]},{"Key":"and was","Fragments":["unreadable.","able","able","able","throwing"]},{"Key":"was unreadable.","Fragments":["So"]},{"Key":"unreadable. So","Fragments":["I"]},{"Key":"So I","Fragments":["reversed","updated","could","tried","created","read","am","tried","started","modified","guess","guess","introduced","did","guess","moved","look"]},{"Key":"I reversed","Fragments":["the","the"]},{"Key":"reversed the","Fragments":["order","order","binary","order"]},{"Key":"the statements,","Fragments":["and"]},{"Key":"statements, and","Fragments":["it","see","make","possibly","that","the"]},{"Key":"and it","Fragments":["went","was","recommended","eliminates","will","will","performed","would","should","is","is","requires","isn't","makes","makes","was","feels","passed","will","ended","does","shows","is","is","catches","is","does","won't","isn't","uses","looked","will","gave","wasn't","stared","returns","never","was","is","would","will","did","was","appears","would","looks","passed.","works","would"]},{"Key":"it went","Fragments":["very"]},{"Key":"went very","Fragments":["clear."]},{"Key":"I'm not","Fragments":["totally","familiar","quite","sure","mistaken,","convinced","seeing?","completely","sure","digging","seeing","sure","a","sure","sure","seeing","convinved","entirely","sure","all","all","entirely","sure","aware","a","very","sure","a","really","committed","familiar","sure","sure","too","sure","sure","sure","sure","sure","familiar","a","an","sure","sure","sure","too","sure","sure","100%","going","sure","going","trying","a","familiar","worried.","going","worried","sure","a","a","seeing?","a","really","recommending","clear","sure","sure","sure","going","sure","happy","sure","sure","sure","entirely","sure","entirely","entirely","sure","looking","seeing","sure","saying","an","sure","sure","seeing","sure","sure","a","going","familiar","pleased"]},{"Key":"not totally","Fragments":["convinced"]},{"Key":"totally convinced","Fragments":["that"]},{"Key":"convinced that","Fragments":["I"]},{"Key":"I needed","Fragments":["to","to","in","to","to","the","to","to"]},{"Key":"needed to","Fragments":["create","begin","change","be","sort","keep","use","let","change","do","be.","check","build","Trim","accomplish"]},{"Key":"to create","Fragments":["four","an","an","a","the","a","my","a","a","a","a","that","variables","the","a","the","a","that","a","9990","lists","your","a","a","the","your","some","a","the","classes","counts.","my","a","a","an","the","a","a","new","a","a","a","methods"]},{"Key":"create four","Fragments":["functions"]},{"Key":"four functions","Fragments":["to"]},{"Key":"functions to","Fragments":["perform","comments","make"]},{"Key":"to perform","Fragments":["this","the","and","the","that","the"]},{"Key":"perform this","Fragments":["operation."]},{"Key":"this operation.","Fragments":["While"]},{"Key":"operation. While","Fragments":["the"]},{"Key":"While the","Fragments":["code","separate","syntax","ReadOnlyDictionary","Math"]},{"Key":"is readable","Fragments":["without","and","to","as"]},{"Key":"readable without","Fragments":["comments","having"]},{"Key":"without comments","Fragments":["here,"]},{"Key":"comments here,","Fragments":["I"]},{"Key":"here, I","Fragments":["feel"]},{"Key":"I feel","Fragments":["anyone","like","that","happy","as","more","that","it's","like","it","like","so","it's","like","like","that","comfortable.","it","it","like","stupid","like","like","that","like","like","that","like","it","IsNotValidBinary()","like","like","(personally)","like","like","is","like","it","it'll","like","confident","that","like","OK","like","like","safer","makes","about","makes","it","like","like","is","like","that","like","like"]},{"Key":"feel anyone","Fragments":["who"]},{"Key":"anyone who","Fragments":["understands","is"]},{"Key":"who understands","Fragments":["the"]},{"Key":"understands the","Fragments":["modulo"]},{"Key":"the modulo","Fragments":["operator","expression","operation","operator","expression","inside","operator","operator","aspect,"]},{"Key":"modulo operator","Fragments":["should","in","is","%.","but"]},{"Key":"operator should","Fragments":["be"]},{"Key":"be able","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","discuss","discuss","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"able to","Fragments":["figure","get","understand","call","do","implement","determine","call","call","run","figure","work","start","distinguish","get","see","suffice","follow","simplify","put","modify","edit","test","keep","eliminate","do","solve","do","pass","construct","convert","run","decode","read","call","get","look","get","access","jump","ditch","describe","find","get","get","be","simply","check","use","treat","do","actually","do","improve"]},{"Key":"figure this","Fragments":["out"]},{"Key":"this out","Fragments":["in","there."]},{"Key":"out in","Fragments":["almost","a","the","a","the"]},{"Key":"in almost","Fragments":["the","all"]},{"Key":"almost the","Fragments":["same","same","exact","same"]},{"Key":"same time","Fragments":["with","-","I","as"]},{"Key":"time with","Fragments":["a","ugly"]},{"Key":"a terse","Fragments":["one"]},{"Key":"terse one","Fragments":["liner."]},{"Key":" That","Fragments":["being","is","is","particular","or","said,","said,","way","will","would","may","aside,","case","cant","is","said,","said,","is","looks","is","is","is","is","is","is","was","test","is","said,","aside,","said,","looks","was","was","`p_string`","is","is","reminds","would","is","depends","is","doesn't","is","first","is","should"]},{"Key":"That being","Fragments":["said","said,","said,"]},{"Key":"being said","Fragments":["this"]},{"Key":"said this","Fragments":["way"]},{"Key":"this way","Fragments":["I","now","because","it","of","is","rather","or","thinking","more","instead."]},{"Key":"way I","Fragments":["didn't","did","have","thought","would","could","could","could","could","wrote","approached","could","was","could","understand","did","did","would","didn't","did","thought","read","read","read","read","could","implemented","can"]},{"Key":"didn't really","Fragments":["need","think","take","consider","address","think","want"]},{"Key":"really need","Fragments":["to","those","to","a","a","is","a","charWordToCheck","it","to","a","to","to","to","a","nunit"]},{"Key":"to provide","Fragments":["any","any","extra","comments","comments","references","feedback"]},{"Key":"provide any","Fragments":["comments","output"]},{"Key":"any comments","Fragments":["-","since"]},{"Key":"comments -","Fragments":["as"]},{"Key":"- as","Fragments":["everything","long","soon","there"]},{"Key":"as everything","Fragments":["that"]},{"Key":"be explained","Fragments":["in","*why*"]},{"Key":"explained in","Fragments":["comments","the"]},{"Key":"in comments","Fragments":["is","at","my"]},{"Key":"comments is","Fragments":["explained","easier"]},{"Key":"is explained","Fragments":["in"]},{"Key":" Happy","Fragments":["to","to"]},{"Key":"Happy to","Fragments":["help!","help!"]},{"Key":" `exercism","Fragments":["fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch"]},{"Key":"am pretty","Fragments":["sure","sure","satisfied","new"]},{"Key":"pretty sure","Fragments":["not","you","a","that","that's","there","my"]},{"Key":"sure not","Fragments":["every","getting"]},{"Key":"not every","Fragments":["year","100"]},{"Key":"every year","Fragments":["is","that","that","that","that","that","that","that","that","that","that"]},{"Key":"year is","Fragments":["a","a","also","one","a","one","also","a","above","a","not","not","divisible","a","leap)","a","divisible","divisible","not","not","a","divisible","divisible","not","not","(every","kind","also","also","also","also","a","gregorian,","divisible","divisible","divisible","normally","divisible","a","evenly","not","not","divisible"]},{"Key":"leap year.","Fragments":["Try","If","And","Hence","I","Everything","If","Your","Negative","And","If","If","If","The","You","Here","Here"]},{"Key":"year. Try","Fragments":["to"]},{"Key":"Try to","Fragments":["get","only","only","avoid","avoid","separate","avoid","make","make","modify"]},{"Key":"get only","Fragments":["years"]},{"Key":"only years","Fragments":["that"]},{"Key":"years that","Fragments":["are","are","are","are"]},{"Key":"that are","Fragments":["dividable","part","divisible","divisible","evenly","different.","returned.","described","accessed","not","anagrams","part","cleared","multiples","different","never","evenly","used","divisible"]},{"Key":"are dividable","Fragments":["by"]},{"Key":"dividable by","Fragments":["4","4."]},{"Key":"by 4","Fragments":["or","but","but","and","and","requirement","in","and","so","then","if","and","the","and","is","except","but","but","and","is"]},{"Key":"4 or","Fragments":["400"]},{"Key":"or 400","Fragments":["and"]},{"Key":"400 and","Fragments":["not"]},{"Key":"and not","Fragments":["100","the","that","very","just","century","always","both","require","fix","LeapYear","100),","just","just","less","conducive","a","when","worry","as","divisible","have","at","equal?)","do","need","very","return","using","readable","going","so","readability","need","very","readable.","`Math.pow`.","Linq","unit"]},{"Key":"not 100","Fragments":["to"]},{"Key":"100 to","Fragments":["return"]},{"Key":"to return","Fragments":["true.","simple","the","true","the","at","the","either","an","a","it","a","the","a","in","to","a","rather","NucleotideCounts[nucleotide]","my","that","true","true.","boolean","a","the","multiple","the","an","an","the","false,","the","it","primes.","count","TRUE"]},{"Key":" Uncle","Fragments":["Bob","Bob"]},{"Key":"Uncle Bob","Fragments":["allows","is","says)","says,"]},{"Key":"Bob allows","Fragments":["multiple"]},{"Key":"allows multiple","Fragments":["return"]},{"Key":"multiple return","Fragments":["statement","statements,","statements","statements.","statements,","statements.","statements","statements?","issue.","statements","statements","statements","statements","statements","methods"]},{"Key":"return statement","Fragments":["I'd","a","of","would","earlier.","early,","or","goes","per","closer","easier","return","using","in","directly","per","is","but","are","to","a","in"]},{"Key":"statement I'd","Fragments":["methods"]},{"Key":"I'd methods","Fragments":["are"]},{"Key":"are sufficiently","Fragments":["short."]},{"Key":"sufficiently short.","Fragments":["Read"]},{"Key":"short. Read","Fragments":["`Clean"]},{"Key":"Read `Clean","Fragments":["Code`"]},{"Key":"`Clean Code`","Fragments":["for"]},{"Key":"Code` for","Fragments":["more!"]},{"Key":"It's my","Fragments":["first"]},{"Key":"first time","Fragments":["using","I've","doing","I","in","through","through","you","I","using","either)","to","I"]},{"Key":"time using","Fragments":["exercism,","something","a"]},{"Key":"using exercism,","Fragments":["and","so"]},{"Key":"exercism, and","Fragments":["I'm"]},{"Key":"and I'm","Fragments":["a","not","sacrificing","pretty","not","kinda","curious.","glad"]},{"Key":"a newbie","Fragments":["to","(which","programmer,"]},{"Key":"newbie to","Fragments":["programming"]},{"Key":"to programming","Fragments":["and"]},{"Key":"programming and","Fragments":["C#."]},{"Key":"I simply","Fragments":["wrote","assigned","didn't","needed"]},{"Key":"simply wrote","Fragments":["what"]},{"Key":"wrote what","Fragments":["seemed"]},{"Key":"what seemed","Fragments":["obvious"]},{"Key":"seemed obvious","Fragments":["to"]},{"Key":"obvious to","Fragments":["pass","me","someone","you"]},{"Key":"to pass","Fragments":["the","the","and","the","a","a","all","the","specific","the","the","the","`0`","2","grade","as","the","the","my","the","the","the","the","the","if","on","where","to","the","the"]},{"Key":"pass the","Fragments":["tests.","tests","Asking_a_question_with_a_trailing_space","tests","unit","tests.","Prolonged_silence","tests,","test","%","unit","```Only_numbers","tests,","\"1,","unit","tests","test","tests","tests","tests.","input","tests","tests","included","tests","test","method","tests.","tests","first","tests","tests","tests.","\"original\"","tests","tests?"]},{"Key":"I haven't","Fragments":["used","put","figured","formally","ever","played","seen","used","been","tested","tried","tried","encountered","tried","updated","ever","tested","really","seen","replied","used","used","tested"]},{"Key":"haven't used","Fragments":["commenting,","the","the","\u003ccode\u003eyield"]},{"Key":"used commenting,","Fragments":["as"]},{"Key":"commenting, as","Fragments":["I"]},{"Key":"thought the","Fragments":["program","compiler","clarity","other"]},{"Key":"the program","Fragments":["was","runs","for","to","incorrectly","were","to","to","passes","and","would"]},{"Key":"program was","Fragments":["simple"]},{"Key":"was simple","Fragments":["enough","enough"]},{"Key":"simple enough","Fragments":["to","and","to","to","to","to"]},{"Key":"to exclude","Fragments":["it."]},{"Key":"method could","Fragments":["be","be","just","be"]},{"Key":"bit more","Fragments":["user","fluently.","terse","expressive,","expressive,","before","readable.","readable.","readable.","messy","difficult.","flexible.","flexible.","flexible.","flexible.","flexible.","flexible.","flexible.","flexible.","flexible.","flexible.","difficult","by","terse","time","expensive","robust.","concise","obvious.","readable","descriptive","obvious.","obvious.","readable","meaningful.","verbose"]},{"Key":"more user","Fragments":["friendly"]},{"Key":"user friendly","Fragments":["with"]},{"Key":"friendly with","Fragments":["information"]},{"Key":"with information","Fragments":["about"]},{"Key":"information about","Fragments":["what","what"]},{"Key":"about what","Fragments":["will","the","any"]},{"Key":"what will","Fragments":["happen","happen!"]},{"Key":"will happen","Fragments":["upon"]},{"Key":"happen upon","Fragments":["entry"]},{"Key":"upon entry","Fragments":["of"]},{"Key":"entry of","Fragments":["a"]},{"Key":"a number.","Fragments":["It","Instead","Here"]},{"Key":"number. It","Fragments":["could","would"]},{"Key":"It could","Fragments":["also","just","save","definitely","be","even","change","be","be","be"]},{"Key":"could also","Fragments":["test","combine","be","add","skip","combine","just","reduce","reduce","store","use","use","add","go","add","make","consider","do","do","have"]},{"Key":"also test","Fragments":["whether"]},{"Key":"test whether","Fragments":["what"]},{"Key":"whether what","Fragments":["is"]},{"Key":"is entered","Fragments":["looks","as"]},{"Key":"entered looks","Fragments":["like"]},{"Key":"year (in","Fragments":["digits)"]},{"Key":"(in digits)","Fragments":["or"]},{"Key":"digits) or","Fragments":["not."]},{"Key":"It seems","Fragments":["to","like","a","likely","like","only","like","too","to","HashSet","more","like","very","that","just"]},{"Key":"seems to","Fragments":["serve","me","be","live","be","simplify","be","not","be","all","have","be","be","be","be","be","do","me","be","do","be","pass.","me","be","have","check","be","work","be"]},{"Key":"to serve","Fragments":["no"]},{"Key":"serve no","Fragments":["purpose"]},{"Key":"no purpose","Fragments":["to"]},{"Key":"purpose to","Fragments":["include"]},{"Key":"to include","Fragments":["an","xmldoc","the","the","the","all","this","a","\"!Char.IsNumber(input[i])\"","\"and\"","2","the","that","the","```System```","a","a","main().","the","the"]},{"Key":"include an","Fragments":["empty","`OrderBy`"]},{"Key":"an empty","Fragments":["`Main()`.","list,","collection","list","string","list.","list","grade","string.","string","string","string?","string","string.","list","list","list","string","deque?","roster,"]},{"Key":"empty `Main()`.","Fragments":["You"]},{"Key":"`Main()`. You","Fragments":["may"]},{"Key":"You may","Fragments":["as","prefer","want"]},{"Key":"may as","Fragments":["well","well"]},{"Key":"well remove","Fragments":["it."]},{"Key":"the line","Fragments":["12.","15.","are","or","or"]},{"Key":"line 12.","Fragments":["Safeguarding"]},{"Key":"12. Safeguarding","Fragments":["your"]},{"Key":"Safeguarding your","Fragments":["code,"]},{"Key":" Now","Fragments":["the","try","with","in","why","can","that","with","that","that","you","avoids"]},{"Key":"Now the","Fragments":["whole"]},{"Key":"the whole","Fragments":["solution","expression","exercism","word","generic","`Math`","string,","\"You","program","class","string,","of","lot","string","string","thing","list","Nunit","thing.","problem","point","string","solution","process","conversation"]},{"Key":"whole solution","Fragments":["in","is"]},{"Key":"solution in","Fragments":["just","one","terms","terms","favor"]},{"Key":"in just","Fragments":["two","one","the"]},{"Key":"just two","Fragments":["lines"]},{"Key":"two lines","Fragments":["and","later","is","which"]},{"Key":"lines and","Fragments":["single","the"]},{"Key":"and single","Fragments":["evaluation?","quotes"]},{"Key":"single evaluation?","Fragments":["I"]},{"Key":"evaluation? I","Fragments":["don't"]},{"Key":"don't know.","Fragments":["I"]},{"Key":"know. I","Fragments":["will","don't","thought"]},{"Key":"will work,","Fragments":["but","but","but"]},{"Key":"work, but","Fragments":["it","when","I'd","I"]},{"Key":"it sure","Fragments":["is","is","make"]},{"Key":"sure is","Fragments":["not","terse."]},{"Key":"not readable","Fragments":["to","can"]},{"Key":"readable to","Fragments":["me.","me","use","someone","me","me.","boot!)","me,","readers.","say","use","me,","boot","me"]},{"Key":"Maybe divide","Fragments":["each"]},{"Key":"divide each","Fragments":["case"]},{"Key":"each case","Fragments":["in","could"]},{"Key":"case in","Fragments":["single","particular,","C#",".NET).","your","the","this"]},{"Key":"in single","Fragments":["if","return","verses?"]},{"Key":"single if","Fragments":["statement","statement,"]},{"Key":"statement and","Fragments":["return","return","add","exit","sticks","just","stop","just"]},{"Key":"and return","Fragments":["appropriate","the","that","false.","that.","immediately,","on","in","true","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","ReponseTo.Nothing","the","the","on","the","false","the","the"]},{"Key":"return appropriate","Fragments":["value?"]},{"Key":"appropriate value?","Fragments":["That"]},{"Key":"value? That","Fragments":["way"]},{"Key":"That way","Fragments":["it","I","it's","you","if,","there","multiple","you","you","only","you","term.Equals()"]},{"Key":"will be","Fragments":["more","that","updated.","able","in","very","iterating","the","primes.","considered","wasting","set","people","using","fully","returned","scanned","honest","checking","more","doing","faster.","fine","1","2","5","10","good","important","more","the","the","spent","false,","clearer","difficult","0","used,","any","returned","live","both","more","called","maintained","simpler","the","the"]},{"Key":"be more","Fragments":["verbose,","expressive?","brief.","explanatory.","future-proof","easily","performant","expressive","clearly","expressive.","coherent,","clearly","readable","performant.","verbose.","typy.","clear","clearly","efficient,","readable","common","expressive.","international.","succinctly","clear.","efficient,","OO","efficient.","maintainable","readable.","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","flexible?","concise","straightforward","clear.","efficient","efficient","readable.","efficient?","correct.","fun.","efficient","readable","readable","readable.","efficient?","efficient.","readable.","efficient","readable.","descriptive","or","concise.","easily","expensive","appropriate?","readable","explicit,","readable","efficient.","efficient","limited","efficient","obvious","\"self-explanatory\".","to","consistent"]},{"Key":"more verbose,","Fragments":["but"]},{"Key":"verbose, but","Fragments":["a"]},{"Key":"a lot","Fragments":["more","of","better","of","of","of","with","of","going","more","and","of","of","more","of","of","of","more","more","more","to","of","of","of","about","of","of","of","(in","of","of","of","of","of","of","less","of","simpler","of","more","more","of","longer.","of","going","of","of","of","of","of","of","of","of","cleaner","of","cleaner","of","more","of","of","clearer.","more","more","cleaner","of","of","of","neater.","of","of","of","as","with","of","of","of","harder","better,","of","of","of","of","of","for","easier","on","probably","more","of","of","easier,","cleaner","more","of","longer"]},{"Key":"lot more","Fragments":["readable?","efficient","than","sense","if","complicated","resources","sense","readable","time","than","defensive","like"]},{"Key":"Also the","Fragments":["constants","result","case","local"]},{"Key":"the constants","Fragments":["for","bare,","and","is"]},{"Key":"constants for","Fragments":["integers,","the","readability,","performance,","the","each"]},{"Key":"for integers,","Fragments":["it"]},{"Key":"integers, it","Fragments":["is"]},{"Key":"good practice,","Fragments":["but"]},{"Key":"practice, but","Fragments":["for","also"]},{"Key":"but for","Fragments":["a","more","other","production","the","just","you","the","this","the","starts","an","a"]},{"Key":"a configurable","Fragments":["variables."]},{"Key":"configurable variables.","Fragments":["Aren't","As"]},{"Key":"variables. Aren't","Fragments":["these"]},{"Key":"Aren't these","Fragments":["very"]},{"Key":"these very","Fragments":["specific"]},{"Key":"very specific","Fragments":["values"]},{"Key":"specific values","Fragments":["where"]},{"Key":"values where","Fragments":["you"]},{"Key":"where you","Fragments":["can't","exit","think","are","put","then","could","put","bring","could","create","can","need","could","are","had","create","declare","have","think"]},{"Key":"you can't","Fragments":["ever","always","get","really","change","rely","use","understand","win,"]},{"Key":"can't ever","Fragments":["change"]},{"Key":"ever change","Fragments":["them?"]},{"Key":"change them?","Fragments":["So"]},{"Key":"them? So","Fragments":["it"]},{"Key":"So it","Fragments":["just","can","would","is","should","would","really"]},{"Key":"just assigns","Fragments":["a"]},{"Key":"assigns a","Fragments":["name"]},{"Key":"a name","Fragments":["'Four'","like","twice","that"]},{"Key":"name 'Four'","Fragments":["to"]},{"Key":"'Four' to","Fragments":["value"]},{"Key":"to value","Fragments":["4"]},{"Key":"value 4","Fragments":["and"]},{"Key":"4 and","Fragments":["can","100","not","breaks","100).","not","not","9","100"]},{"Key":"and can","Fragments":["never","be","be","save","be","be","deal","return","make"]},{"Key":"can never","Fragments":["change"]},{"Key":"never change","Fragments":["the","so","and","something"]},{"Key":"change the","Fragments":["value","code","spelling","database","type","`x`","name","ToString","name","data","phone","unit","naming","generator","SortedSet","name","definition","code","name","code","way","\"rtn\"","List","Test","enum","expressions","inner","triangle","loop","enumeration","string,","rules","type","typing,"]},{"Key":"value 4,","Fragments":["which"]},{"Key":"4, which","Fragments":["is","is","returns"]},{"Key":"just longer","Fragments":["name"]},{"Key":"longer name","Fragments":["for"]},{"Key":"name for","Fragments":["4.","the","a"]},{"Key":"I try","Fragments":["most","and","to","to","to","to","not","to","too","it","to","to","to","to"]},{"Key":"try most","Fragments":["often"]},{"Key":"most often","Fragments":["to"]},{"Key":"often to","Fragments":["make","take"]},{"Key":"make my","Fragments":["code","logic","class","NucleotideCounts","brain"]},{"Key":"my code","Fragments":["a","achieve?","to","with","and","and","isn't","to","or","and","to","to","review","is","or","passes","in",":-(.","based","I","and","to","pass","pass","I","doesn't"]},{"Key":"code a","Fragments":["simple","little","little","bit.","bit","little","bit.","bit.","bit","bit","bit"]},{"Key":"simple as","Fragments":["possible","I","possible.","is","doing","is"]},{"Key":"possible that","Fragments":["is","you","\"","a","\u003cb\u003eElementAt()\u003c/b\u003e"]},{"Key":"is straight","Fragments":["to"]},{"Key":"straight to","Fragments":["the"]},{"Key":"the point.","Fragments":["I","It","Cdroulers"]},{"Key":"point. I","Fragments":["placed","went","worry","think","suppose","didn't"]},{"Key":"I placed","Fragments":["they"]},{"Key":"placed they","Fragments":["try"]},{"Key":"they try","Fragments":["and"]},{"Key":"try and","Fragments":["catch","live","understand.","see","figure","see","fit","stick","catch","run","help","tease","make","puzzle","use","eliminaet","make"]},{"Key":"and catch","Fragments":["there","blocks"]},{"Key":"catch there","Fragments":["to"]},{"Key":"there to","Fragments":["handle","be","be","prevent","avoid","be","make"]},{"Key":"to handle","Fragments":["Exceptions.","the","the","all","mismatched","acronyms","a","the","null","removing","all","this","N","the","large","very","the","the","that","the","errors","possibly","h"]},{"Key":"handle Exceptions.","Fragments":["i"]},{"Key":"Exceptions. i","Fragments":["did"]},{"Key":"i did","Fragments":["not","a","not"]},{"Key":"not want","Fragments":["to","to","to","to","Enum"]},{"Key":"to write","Fragments":["any","the","console","efficient","than","just","code","longer,","more","code","this","the","shorter","to","your","indent","to","a","a","a","the","the","the","a","this","a","out","the","something","cases","a"]},{"Key":"write any","Fragments":["input"]},{"Key":"any input","Fragments":["validation","testing."]},{"Key":"input validation","Fragments":["code.","(negative","as","was"]},{"Key":"validation code.","Fragments":["The"]},{"Key":"code. The","Fragments":["reference","better","ambiguous"]},{"Key":"The reference","Fragments":["are"]},{"Key":"reference are","Fragments":["the"]},{"Key":"are the","Fragments":["default","standard,","functions","nested","first","same:","same","JIT-compiler,","same,","same.","same","same,","Gifts","most","_updated_","changes"]},{"Key":"the default","Fragments":["vs","'using'","Resharper","test","response","0","constructor","value.","constructor","**using**","return"]},{"Key":"default vs","Fragments":["2012"]},{"Key":"vs 2012","Fragments":["default"]},{"Key":"2012 default","Fragments":["reference."]},{"Key":"default reference.","Fragments":["I"]},{"Key":"reference. I","Fragments":["did"]},{"Key":"not bother","Fragments":["to","storing"]},{"Key":"bother to","Fragments":["remove","check","convert"]},{"Key":"to remove","Fragments":["them.","unnecessary","the","apostrophes","those","entries","so","invalid","earlier","them!","the","unneeded","the","duplicates","that","(multiples","the","it.","redundant","the","the","the","special","Contains","the","it","for"]},{"Key":"remove them.","Fragments":["i",":-D"]},{"Key":"them. i","Fragments":["will"]},{"Key":"i will","Fragments":["do","keep"]},{"Key":"will do","Fragments":["that","add","all","boxing","the","that"]},{"Key":"that next","Fragments":["time."]},{"Key":"the elegant","Fragments":["simplicity"]},{"Key":"elegant simplicity","Fragments":["of"]},{"Key":"simplicity of","Fragments":["your"]},{"Key":"your 'if'","Fragments":["line,"]},{"Key":"'if' line,","Fragments":["although"]},{"Key":"line, although","Fragments":["something"]},{"Key":"although something","Fragments":["more"]},{"Key":"something more","Fragments":["verbose","like:","simple.","concise,","descriptive.","human","complex","performant","expressive","descriptive.","specific.","complex"]},{"Key":"more verbose","Fragments":["might","than","so","than","than","it","but","than"]},{"Key":"verbose might","Fragments":["be"]},{"Key":"might be","Fragments":["more","nice?","a","able","present","more","using","the","off.","debugging","debugging","overcomplicating","a","slightly","a","a","useful","a","useful,","useful,","a","work","reinventing","useful.","more","better.","served","a","slightly","some","easier","overkill","to","faster","more","more","a","redundant.","hard","fun,","worth","easier","more","that","more","my","slow,","mistaken,"]},{"Key":"more expressive?","Fragments":["(I'd"]},{"Key":"expressive? (I'd","Fragments":["like"]},{"Key":"(I'd like","Fragments":["an"]},{"Key":"an answer","Fragments":["on","in"]},{"Key":"answer on","Fragments":["that"]},{"Key":"on that","Fragments":["from","nasty","now.","can","line.","one.","to","number","one.","one.","claim?"]},{"Key":"that from","Fragments":["someone"]},{"Key":"from someone","Fragments":["who"]},{"Key":"someone who","Fragments":["knows","is"]},{"Key":"who knows","Fragments":["what","what"]},{"Key":"knows what","Fragments":["they're","it"]},{"Key":"what they're","Fragments":["on"]},{"Key":"they're on","Fragments":["about"]},{"Key":"on about","Fragments":["though"]},{"Key":"about though","Fragments":[":D)"]},{"Key":"don't quite","Fragments":["understand","understand"]},{"Key":"quite understand","Fragments":["why","why"]},{"Key":"understand why","Fragments":["you've","you","you","you","you"]},{"Key":"why you've","Fragments":["used","gone"]},{"Key":"you've used","Fragments":["try-catch-throw,","Visual","throughout."]},{"Key":"used try-catch-throw,","Fragments":["but"]},{"Key":"try-catch-throw, but","Fragments":["I"]},{"Key":"I _am_","Fragments":["a"]},{"Key":"_am_ a","Fragments":["noob"]},{"Key":"a noob","Fragments":["at","and","so"]},{"Key":"noob at","Fragments":["C#"]},{"Key":"at C#","Fragments":["and","and"]},{"Key":"not familiar","Fragments":["with","with","with","with","with","with","nor","at"]},{"Key":"with how","Fragments":["it","you","clunky","the","I","I"]},{"Key":"how it","Fragments":["works","manages","reads","works","can","works."]},{"Key":"works -","Fragments":["maybe"]},{"Key":"- maybe","Fragments":["you"]},{"Key":"maybe you","Fragments":["could","should","tab"]},{"Key":"could link","Fragments":["me"]},{"Key":"link me","Fragments":["to"]},{"Key":"me to","Fragments":["a","realize","understand.","believe","type","make","read","make","read.","post","model","either","have","use","use","extend","favor","introduce","improve","an","an","improve","see","expose","not","do","easily","give","remember","the"]},{"Key":"a resource?","Fragments":["You"]},{"Key":"resource? You","Fragments":["code"]},{"Key":"You code","Fragments":["works","works,","does","works,","works,"]},{"Key":"code works","Fragments":["with","and","and","perfectly,","good","well","regardless","now"]},{"Key":"works with","Fragments":["it","the","binary","enumerable,","ints","ints."]},{"Key":"it removed","Fragments":["entirely"]},{"Key":"removed entirely","Fragments":["anyway."]},{"Key":"The 'using'","Fragments":["references"]},{"Key":"'using' references","Fragments":["don't"]},{"Key":"references don't","Fragments":["appear"]},{"Key":"don't appear","Fragments":["necessary"]},{"Key":"appear necessary","Fragments":["as","and"]},{"Key":"necessary as","Fragments":["they're","you"]},{"Key":"as they're","Fragments":["not"]},{"Key":"they're not","Fragments":["used","required,","required,"]},{"Key":"not used","Fragments":["in","at","anywhere","for","so"]},{"Key":"used in","Fragments":["the","certain","a","the","method","an","the","a","test","Nucleotide","different","loops.","C#","the","the","several"]},{"Key":"the following","Fragments":["code.","statements","redundant","code","new","and","from","would","checks","check","you","change.","loop.","line","algorithm.","pseudo-code","which","checks","LINQ","structure","Regex:","Regex:","foreach"]},{"Key":" A","Fragments":["Main","bad","good,","good","one","single","little","great","style","pretty","nice","coworker","few","reference","very","couple","possibility","little","simple","matter","lot","slight","couple","couple","faster","little","year","simple","very","possibly","real","minor","more","leap","leap","small","`yield","lot","bit","list","generator","couple","couple"]},{"Key":"A Main","Fragments":["method"]},{"Key":"method might","Fragments":["be"]},{"Key":" @jack","Fragments":["As"]},{"Key":"@jack As","Fragments":["for"]},{"Key":"As for","Fragments":["line","the","the","the","ToLowerInvariant(),","the","3,","pair.Value","super","IDictionary,","skipping"]},{"Key":"for line","Fragments":["12,","7)"]},{"Key":"line 12,","Fragments":["we","but","why"]},{"Key":"12, we","Fragments":["can"]},{"Key":"we can","Fragments":["still","do","use","find","write","do","solve","index","replace","do","do","try","simple","decide","revisit"]},{"Key":"can still","Fragments":["imagine","refine","have","modify","do","be","remove","improve","be","be"]},{"Key":"still imagine","Fragments":["there"]},{"Key":"imagine there","Fragments":["being"]},{"Key":"there being","Fragments":["leap"]},{"Key":"being leap","Fragments":["years"]},{"Key":"leap years","Fragments":["BCE","that","that","first.","are","when","first,","or","should","next","is","by","by","and","and","starting","passed"]},{"Key":"years BCE","Fragments":["-"]},{"Key":"BCE -","Fragments":["according"]},{"Key":"- according","Fragments":["to"]},{"Key":"according to","Fragments":["the","Bob,","the","suggestion","suggestion","the"]},{"Key":"the Gregorian","Fragments":["calendar,","Calendar.","definition","Calendar","calendar","calendar","calendar,","rules","calendar"]},{"Key":"Gregorian calendar,","Fragments":["that","and"]},{"Key":"calendar, that","Fragments":["is"]},{"Key":"is ^_^.","Fragments":["However,"]},{"Key":"^_^. However,","Fragments":["the"]},{"Key":"However, the","Fragments":["first","end"]},{"Key":"the first","Fragments":["leap","time","check","sentence","instance","conditional","way","check.","thing","test","modulo)","conditional","thing","result.","gatekeeper","test.","approach","character","conditions.","block","time.","pass","foreach,","check","test","two","iteration.","if","usage","is","time","iteration,","exercises.","check","person","time!","foreach","occurrence.","iteration","3","to","time","gift","day","of","verse","day","one","letter","time","iteration.","time","digit,","character","thing","check","two","enum","verse?","conditional","gift.","foreach(","day,","time","day","version","day","place","`return`,","part","two","result","thing","place!","one.","condition.","person","test.","test.","instance","if","check.","time","Add","place.","step.","one,","iteration","iteration","test","\"if\".","two","time","branch"]},{"Key":"first leap","Fragments":["year"]},{"Key":"leap year","Fragments":["was","until","test","(what","check","is","is","so","rules","tests","are.","check","clear.","definition","than","or","to","is","works,","being","on","(line","in","rule","test","so","makes","or","rules.","in","in","algorithm.","requirements.","was","is","for","and","is","when","if","when","or","or","functionality","before","in","but","is","but","has","or","and","if","even"]},{"Key":"year was","Fragments":["established","a","a","any","divisible"]},{"Key":"was established","Fragments":["by"]},{"Key":"established by","Fragments":["Julius"]},{"Key":"by Julius","Fragments":["Caesar"]},{"Key":"Julius Caesar","Fragments":["in"]},{"Key":"Caesar in","Fragments":["46"]},{"Key":"in 46","Fragments":["BCE,"]},{"Key":"46 BCE,","Fragments":["with"]},{"Key":"BCE, with","Fragments":["every"]},{"Key":"with every","Fragments":["fourth"]},{"Key":"every fourth","Fragments":["year"]},{"Key":"fourth year","Fragments":["in"]},{"Key":"year in","Fragments":["the","the","AD.","the","the","c","all"]},{"Key":"the Julian","Fragments":["Calendar","calendar's"]},{"Key":"Julian Calendar","Fragments":["being"]},{"Key":"Calendar being","Fragments":["a"]},{"Key":"being a","Fragments":["leap","conversation","noob","newbie","little","part","learning","lambda"]},{"Key":"year until","Fragments":["Pope"]},{"Key":"until Pope","Fragments":["Gregory"]},{"Key":"Pope Gregory","Fragments":["re-synced"]},{"Key":"Gregory re-synced","Fragments":["the"]},{"Key":"re-synced the","Fragments":["calendar"]},{"Key":"the calendar","Fragments":["in","started."]},{"Key":"calendar in","Fragments":["1582."]},{"Key":"in 1582.","Fragments":["The","Any"]},{"Key":"1582. The","Fragments":["Pope"]},{"Key":"The Pope","Fragments":["implemented"]},{"Key":"Pope implemented","Fragments":["the"]},{"Key":"implemented the","Fragments":["new","suggestion","Nucleotides"]},{"Key":"the new","Fragments":["Gregorian","List\u003c\u003e","test","List\u003cchar\u003e(word)","iteration,","robots","iteration.","dictionary.","test","List","one","list","List\u003cstring\u003e()","values.","data","DateTime","version","revision.","tests.","code"]},{"Key":"new Gregorian","Fragments":["Calendar"]},{"Key":"Gregorian Calendar","Fragments":["and","was"]},{"Key":"Calendar and","Fragments":["henceforth"]},{"Key":"and henceforth","Fragments":["skipped"]},{"Key":"henceforth skipped","Fragments":["10"]},{"Key":"skipped 10","Fragments":["days"]},{"Key":"10 days","Fragments":["starting"]},{"Key":"days starting","Fragments":["October"]},{"Key":"starting October","Fragments":["15th"]},{"Key":"October 15th","Fragments":["the"]},{"Key":"15th the","Fragments":["day"]},{"Key":"the day","Fragments":["after","down,"]},{"Key":"day after","Fragments":["October"]},{"Key":"after October","Fragments":["4th."]},{"Key":"October 4th.","Fragments":["Ten"]},{"Key":"4th. Ten","Fragments":["points"]},{"Key":"Ten points","Fragments":["to"]},{"Key":"points to","Fragments":["Gryffindor","remember,","the","consider."]},{"Key":"to Gryffindor","Fragments":["for"]},{"Key":"Gryffindor for","Fragments":["coding"]},{"Key":"for coding","Fragments":["that."]},{"Key":" Would","Fragments":["you","definitely","a","you","this","be","this"]},{"Key":"Would you","Fragments":["use","mind","mind","suggest","care","create","also"]},{"Key":"you use","Fragments":["the","these","the","it","IList","a","`int`","a","this","brackets","here,","will","here).","it","int","between","\"var","braces.","better","Convert.ToChar(\"A\")","it","them,","Pow","foreach","a","a","a","\u0026\u0026","a","```NucleotideCounts.ContainsKey```","the","a","LastIndexOf()).","a","it","them","Any()","the","separate","the","the","VS","here","the"]},{"Key":"same structure","Fragments":["if"]},{"Key":"structure if","Fragments":["the"]},{"Key":"the calculators","Fragments":["where"]},{"Key":"calculators where","Fragments":["very"]},{"Key":"where very","Fragments":["slow"]},{"Key":"very slow","Fragments":["or","calculation?","way"]},{"Key":"slow or","Fragments":["expensive"]},{"Key":"or expensive","Fragments":["in"]},{"Key":"expensive in","Fragments":["some","some"]},{"Key":"in some","Fragments":["way?","way.","fashion.","classes","sense.","cases","other","database","other","invalid","way.","of"]},{"Key":"would pull","Fragments":["the","the"]},{"Key":"pull the","Fragments":["\"canDividexxx\"","letter","list","empty","calculation"]},{"Key":"the \"canDividexxx\"","Fragments":["variables"]},{"Key":"\"canDividexxx\" variables","Fragments":["into"]},{"Key":"variables into","Fragments":["private"]},{"Key":"into private","Fragments":["methods.","methods."]},{"Key":"I find","Fragments":["that","the","this","that","when","it","that","the","that","it","it","lines","code","complex","that","the","the","the","your","the","it","it","it","the","it","the","that"]},{"Key":"find that","Fragments":["short","a","more","implementation","a","comments","code"]},{"Key":"that short","Fragments":["methods"]},{"Key":"short methods","Fragments":["like","like"]},{"Key":"methods like","Fragments":["this","this","IsYelling","this","`School.Add`","`NotDivisibleBy`as"]},{"Key":"like this","Fragments":["are","(I","better","-","implementation,","needs","less","it","is","should","in","I","should","might","are","however,","is","instead:","better","but","to","function,","version","too:","solution.","solution",":","should","solution.....I","(assuming","you","short","it","submission.","is","approach","simple","as","compact,","with"]},{"Key":"this are","Fragments":["okay","quite","wrong."]},{"Key":"are okay","Fragments":["with","for"]},{"Key":"okay with","Fragments":["multiple","this,","having"]},{"Key":"return statements,","Fragments":["but","but","but","no"]},{"Key":"statements, but","Fragments":["generally","that's","here","having"]},{"Key":"but generally","Fragments":["work","concerned"]},{"Key":"generally work","Fragments":["towards"]},{"Key":"work towards","Fragments":["only"]},{"Key":"towards only","Fragments":["having"]},{"Key":"only having","Fragments":["one"]},{"Key":"having one","Fragments":["point","for","return","call"]},{"Key":"one point","Fragments":["of","of","of"]},{"Key":"point of","Fragments":["exit","the","what's","the","view.","the","view","PrimesFor().makes","exit","the","exit,","view,","this","this","view,","Enumerable,Range","the","HashSet"]},{"Key":"of exit","Fragments":["from","for"]},{"Key":"exit from","Fragments":["a"]},{"Key":"from a","Fragments":["method...","set","strong","variable","'normal'","method","readability","routine","double","function.","string","previous","date","readability"]},{"Key":"a method...","Fragments":["what"]},{"Key":"method... what","Fragments":["about"]},{"Key":"what about","Fragments":["you?","nesting","HashSet"]},{"Key":"think the","Fragments":["test","leap","question","logic","modulo","extension","SortedList\u003cTKey,","Database","other","problem","reason","second","rules","method","added","results","goal","query","code","point","theory","first","string","method","Match","Query","code","meaning","code","point","following","Dictionary","tests","extra","code","\u0026\u0026","modulus","form","writing","intention","2","big","code","first","exercises","for","exercise","previous","real","trick","two"]},{"Key":"the test","Fragments":["file","for","runner","code","code","file","what","suite","suite","runner","selects","suite","suite","unit","class","pass,","class","when","results.","suit","file","out","cases","procedure(I","suite","suite'","requirements","writer","driven","file?","file","wanted.","suite,","results","method","returns","system.","from","to","file.","though,","specifies","was","really","string","\"Turn_of_the_20th_century_is_not_a_leap_year\"","should","might","cases","cases","suite.","class","cases","case","spec.","cases","only","cases","cases?","just","case)?","slightly,","writers","didn't","was","didn't","or","uses","doesn't","to","file.","case","and","cases.","requirements.","conditions,","protocol,","Different_robots_have_different_names","to","set","to","provided","stuff","code","cases,","file","manager","class","cases","to","class","class","file.","cases","cases","where","cases","case","file..","file,","question.","cases","suite","passed","suite.","inputs","update","suite","laid","suite.","file"]},{"Key":"test file","Fragments":["(when","changed","separately,","but","to","and","was"]},{"Key":"file (when","Fragments":["I"]},{"Key":"(when I","Fragments":["grabbed"]},{"Key":"I grabbed","Fragments":["it"]},{"Key":"grabbed it","Fragments":["anyway)"]},{"Key":"it anyway)","Fragments":["wanted"]},{"Key":"anyway) wanted","Fragments":["you"]},{"Key":"wanted you","Fragments":["to"]},{"Key":"you to","Fragments":["use","work","simplify,","rely","clearly","supply","exercism.io","supply","test","work","miss","change.","try:","decide","save","calculate","turn","directly","solve","solve","prevent","solve","calculate","think","be","manually","build","try","match","match","focus","do","do","change","let"]},{"Key":"use a","Fragments":["static","negative","```Regex```","list","single","SortedSet\u003c\u003e","\u0026\u0026","ternary","foreach","dictionary","number","whitelist","return","public","local","better","string","generator","stack.","`string.IsNullOrWhiteSpace()`","lookup","`string.Format(\"{0:000},","`string.Format(\"{0:000},","sorted","SortedSet\u003cstring\u003e","Dictionary,","for","linq","name","lambda","named","result","Dictionary","hard-coded","`GIFTS.Skip(12","HashSet\u003c\u003e","StringBuilder","StringBuilder","Dictionary","StringBuilder","switch","lookup","SortedSet","dictionary,","loop","loop","regular","Queue,","Setter","Dictionary","better","more","Dictionary,","pretty","function.","for","SortedDictionary","boolean","`.Replace(\"x\",","manually","regex","switch","SortedDictionary.","for","few","regular","TryCatch","collection","Dictionary","lamba","lookup","for","linq","map","Tuple","Enum","dictionary....","custom","StringBuilder.","single"]},{"Key":"method (or","Fragments":["static"]},{"Key":"(or static","Fragments":["class)"]},{"Key":"static class)","Fragments":["rather"]},{"Key":"class) rather","Fragments":["than"]},{"Key":"than creating","Fragments":["an","a","a","a","a"]},{"Key":"an instance","Fragments":["of","of","method,","member,","of","of","of","or"]},{"Key":"instance of","Fragments":["the","one","a","a","Scrabble.","the","Scrabble()","Scrabble","scrabble","the"]},{"Key":"the 'Year'","Fragments":["class."]},{"Key":"Just a","Fragments":["matter","couple","few","few","few","little","few","note...","little","few","nitpick"]},{"Key":"a matter","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"matter of","Fragments":["changing","preference.","what","habit,","preference.","style","preference","my","taste.","personal","appropriate","the","style","personal","personal"]},{"Key":"of changing","Fragments":["to"]},{"Key":" public","Fragments":["static","static","class","int","class","static","static","class","void","void","void","void","class","void","void","void","void","Phrase(string","bool","string","bool","class","void","void","void","int","static","static","void","void","void","string[]","void","void","void","static","bool","static","static","IDictionary\u003cstring,","static","string","SumOfMultiples()","static","void","void","void","void","void","PhoneNumber(string","void","SumOfMultiples()","SumOfMultiples(IEnumerable\u003cint\u003e","string","string","SumOfMultiples()","SumOfMultiples(IEnumerable\u003cint\u003e","void","List\u003cstring\u003e","List\u003cstring\u003e","List\u003cstring\u003e","enum","int","int","int","int","DNA(string","int","DateTime","static","DateTime","static","static","static","static","static","static","static","static","static","static","static","string","void","void","bool","int","static","static","class","static","int","void","SumOfMultiples(List\u003cint\u003e","SumOfMultiples()","void","static","static","void","static","void"]},{"Key":"public static","Fragments":["bool","bool","bool","bool","bool","int","bool","int","bool","IDictionary\u003cstring,","bool","int","string","IEnumerable\u003cint\u003e","string","char","bool","bool","class","bool","bool","class","IEnumerable\u003cT\u003e","bool;","int","int","int","bool","string","IEnumerable\u003cint\u003e"]},{"Key":"static bool","Fragments":["IsLeap(int","IsLeap(int","IsLeap(int","IsLeap(int","IsLeap(int","IsAMute","IsUracil(char","methods","IsQuestion","IsLeap(int","IsLeap","IsLeap(int","IsLeap(int","IsLeap2(int","IsLeap(int","IsLeap3(int","IsDivisibleByOneHundred(int","IsDivisibleByFour(int","IsDivisibleByFourHundred(int","IsLeap(int"]},{"Key":"bool IsLeap(int","Fragments":["year){","year)","year)","givenYear)","year)","year)","year)`","yr)","year)","year)"]},{"Key":" Then","Fragments":["you","Under","there","if","change","I","as","I","use","turn","you","again,"]},{"Key":"Then you","Fragments":["can","loop","can","can","get","can","can"]},{"Key":" Not","Fragments":["everyone","sure","a","silly","a","a","bad","much","that","necessarily","sure","sure","sure","entirely","too","exactly","super","quite.","an","sure","sure","needed","really","very","sure","sure","completed","tested","sure","quite","bad","a","sure","using","sure","sure"]},{"Key":"Not everyone","Fragments":["is","agrees"]},{"Key":"everyone is","Fragments":["that","at"]},{"Key":"that happy","Fragments":["with"]},{"Key":"happy with","Fragments":["the","it","this","here","is","the","the","this","this","the","this","my","it,"]},{"Key":"ternary operator,","Fragments":["but"]},{"Key":"operator, but","Fragments":["with","it"]},{"Key":"but with","Fragments":["use","indentations","the","only","error","a","**StringBuilder**"]},{"Key":"with use","Fragments":["it"]},{"Key":"use it","Fragments":["becomes","anyway?","to","a","consistently.","all","better","when","depends","do","for","mostly","is","in","in","in","instead.","in","on","on","wherever","*once*.","all","in","in"]},{"Key":"it becomes","Fragments":["as","much","more","harder","a"]},{"Key":"becomes as","Fragments":["clear"]},{"Key":"as clear","Fragments":["as","without"]},{"Key":"clear as","Fragments":["a","hwo"]},{"Key":"a series","Fragments":["of","of","of"]},{"Key":"series of","Fragments":["if","if","private"]},{"Key":"of if","Fragments":["statements.","statements.","statements.","statements.","statements","statements"]},{"Key":"The logic","Fragments":["is,","itself","of","looks","is","is","seems","behind"]},{"Key":"logic is,","Fragments":["if"]},{"Key":"is, if","Fragments":["the","the"]},{"Key":"century then","Fragments":["we","do"]},{"Key":"we must","Fragments":["test"]},{"Key":"must test","Fragments":["to"]},{"Key":"test to","Fragments":["see","pass.","pass","populate","fail","pass","verify","see","validate","get","include","include"]},{"Key":"the kind","Fragments":["of","of","of","in","to","of"]},{"Key":"kind of","Fragments":["century","overkill.","disagree.","micro-optimisation","sad","make","what","like:","redundant.","string","goes","painful.","indexed","why","says","went","a","a","covers","use","thing","statement,","duplicate.","triangle","logic","like","silly","change.","feel","what","loop.","confusing:","thing","space","Set","thing","complicated.","weird","learning","a","hacking","hacking","triangle","thing","acceptable"]},{"Key":"of century","Fragments":["that"]},{"Key":"century that","Fragments":["is","divides"]},{"Key":"is actually","Fragments":["a","the","doing.","saying","wasting","on","unneeded).","the","reachable","about","needed.","uppercase","a"]},{"Key":"actually a","Fragments":["leap","long"]},{"Key":"year. If","Fragments":["not","it","you","you","you"]},{"Key":"If not","Fragments":["a"]},{"Key":"then do","Fragments":["the","the","it","foreach"]},{"Key":"do the","Fragments":["normal","by","thing,","trick.","same","leap","if","calculation","sort","comparison,","same.","assignment.","division","calculation","full","check","job.","whole","splitting","same,","same",".Select()","loop","count","dictionary","work","following:","Dictionary","lookup","conversion,","(ch","same.","work","division.","Distinct().Count()","modulo","project","value","validating","same.","ToUpper","same","check","same","work","same","inversion","tertiary","calculation.","IsPythogrean","string","ToList()?","actual","nothingSaid","job","shouting","whole","\"prefix"]},{"Key":"the normal","Fragments":["div","`0`...","string.","string"]},{"Key":"normal div","Fragments":["by"]},{"Key":"div by","Fragments":["four"]},{"Key":"by four","Fragments":["test.","it","to","it"]},{"Key":" Having","Fragments":["multiple","said","been","said","the","static"]},{"Key":"Having multiple","Fragments":["return","nested"]},{"Key":"return statements","Fragments":["can","are","and","in","in","into","cluttering","(some","in","in","in","in"]},{"Key":"statements can","Fragments":["be","sometimes","be","get","be","be"]},{"Key":"be hard","Fragments":["to","to","to","to"]},{"Key":"read (especially","Fragments":["in"]},{"Key":"(especially in","Fragments":["long"]},{"Key":"in long","Fragments":["methods)"]},{"Key":" Do","Fragments":["you","you","you","you","we","you","you","you","you","you","you","you","not"]},{"Key":"you think","Fragments":["it","of","of","of","of","of","of","about","of","it","of","the","this","the","defining","it","that","about","about","that","it","of","there","that","it","it's","might","it","so?","it"]},{"Key":"think it","Fragments":["worth","is","is","actually","reads","is","would","would","is","is","is","compiles","makes","would","would","makes","would","is","worth","actually","is","would","would","would","definitely","could","takes","could","needs","would","wouldn't","adds","adds","makes","needs","would","is","is.)","requires","should","makes","was","would","is","will).","makes","would","is","is?","is","could","was","might","would","does","was","can","will","good","should","communicates","will","is","is","would","makes"]},{"Key":"it worth","Fragments":["trying","re-writing","reusing."]},{"Key":"worth trying","Fragments":["to","to"]},{"Key":"to refactor","Fragments":["to","it.","and","the","those","this","the","and"]},{"Key":"refactor to","Fragments":["a","nice"]},{"Key":"method with","Fragments":["only","an","additional","a","the","an","differing"]},{"Key":"with only","Fragments":["one","one","static","grades","one","four,","one","1","the"]},{"Key":"one return","Fragments":["statement?","with","statement","statement","statement?","statement,","value","statement","statement","statement","would"]},{"Key":"you came","Fragments":["across","across"]},{"Key":"came across","Fragments":["this","the","the","error"]},{"Key":"across this","Fragments":["code"]},{"Key":"code written","Fragments":["by"]},{"Key":"written by","Fragments":["another"]},{"Key":"by another","Fragments":["(or","word","number"]},{"Key":"another (or","Fragments":["yourself","more)"]},{"Key":"(or yourself","Fragments":["in"]},{"Key":"yourself in","Fragments":["a"]},{"Key":"few weeks)","Fragments":["would"]},{"Key":"weeks) would","Fragments":["you"]},{"Key":"would you","Fragments":["instantly","name","say","change","use","limit","say?","go","use","handle","add","also","catch","do"]},{"Key":"you instantly","Fragments":["know"]},{"Key":"instantly know","Fragments":["what"]},{"Key":"know what","Fragments":["the","to","it","the","they","I","is","others","the","you're","type","I'd","happens","`mod`","code","the","will","you're","kind","I'm","type","it","you","you","it"]},{"Key":"was trying","Fragments":["to","to","to","to","to","to","to","to"]},{"Key":" Submitting","Fragments":["a"]},{"Key":"Submitting a","Fragments":["whole"]},{"Key":"a whole","Fragments":["app","app","lot","class","one-line","bunch","word","other","integer","array"]},{"Key":"whole app","Fragments":["is","not"]},{"Key":"app is","Fragments":["not","required!","not"]},{"Key":"not required...","Fragments":["Just"]},{"Key":"required... Just","Fragments":["the"]},{"Key":"Just the","Fragments":["logic"]},{"Key":"the logic","Fragments":["please!","means","line","that","of","that","implemented","described","flow","in","down","more(some","of","right,","right,","of","without","into","can","out","out","in","to","inside","easier.","in?","in","will","is","were","into","was","to","out","is","into","is","required","into","separate","that","in","in","flow","because","in","pertaining","within","behind","of","and","to","if",":)"]},{"Key":"thought I'd","Fragments":["give","point","just","try"]},{"Key":"I'd give","Fragments":["extension"]},{"Key":"give extension","Fragments":["methods"]},{"Key":"methods a","Fragments":["go"]},{"Key":"a go","Fragments":["for","at","at","without"]},{"Key":"go for","Fragments":["this","the","the","minimalist","less","it;","some","a","that","a","a","a","another","a"]},{"Key":"for this","Fragments":["one.","simple","little","site.)","reason","first","solution,","project,","site","simple","that","problem,","is","excercise,","noddy","is,","exercise.","data,","task","kind","pattern","only","type","solution","second","exercise,","assignment","tip.","example","method","to","assignment,","-","exercise","exercise,","purpose.","and","but","and","problem,","example.","exercise).","test,","one","kind","simple","test,","test,","test,","test","example","second","one.","condition","case","little","effect","simple","exercise,","exercise).","problem.","simple","but","exercise.","exercise.","are","kind","instance,","assignment.","problem","e.g.","feedback.","little"]},{"Key":"this one.","Fragments":["Seemed","I'll","I'm","Not","Can","I","I'll","I","Being"]},{"Key":"one. Seemed","Fragments":["a"]},{"Key":"Seemed a","Fragments":["neater"]},{"Key":"a neater","Fragments":["way"]},{"Key":"neater way","Fragments":["to"]},{"Key":"write the","Fragments":["utility","condition","tests","check","AreAllLettersUpperCase","Contains()","class","cipher","functionality","ToString(),"]},{"Key":"the utility","Fragments":["methods"]},{"Key":"utility methods","Fragments":["required"]},{"Key":"methods required","Fragments":["for"]},{"Key":"required for","Fragments":["string","every","this"]},{"Key":"string manipulation","Fragments":["and"]},{"Key":"manipulation and","Fragments":["comparison."]},{"Key":" Feels","Fragments":["a"]},{"Key":"Feels a","Fragments":["bit"]},{"Key":"bit \"messy\"","Fragments":["but"]},{"Key":"\"messy\" but","Fragments":["passes"]},{"Key":"but passes","Fragments":["the"]},{"Key":"passes the","Fragments":["tests.","unit","tests","tests.","tests,","tests.","unit","tests","tests,","good","tests","test","test.","test","unit","tests","tests","tests,","extra"]},{"Key":" Sorry","Fragments":["about","for","about","about","about","about","about","about","you","I","I","I"]},{"Key":"Sorry about","Fragments":["the","the","the","the","the","the","that.","the","that..."]},{"Key":"the wait.","Fragments":["Couple","Very","Couple"]},{"Key":"wait. Couple","Fragments":["things:","things:"]},{"Key":"1. Missing","Fragments":["a"]},{"Key":"Missing a","Fragments":["curly"]},{"Key":"a curly","Fragments":["brace"]},{"Key":"curly brace","Fragments":["for"]},{"Key":"brace for","Fragments":["the"]},{"Key":"2. Imagine","Fragments":["that"]},{"Key":"Imagine that","Fragments":["comments"]},{"Key":"that comments","Fragments":["aren't","are","lie.","that","weren't"]},{"Key":"comments aren't","Fragments":["allowed"]},{"Key":"aren't allowed","Fragments":["at"]},{"Key":"allowed at","Fragments":["all."]},{"Key":"at all.","Fragments":["Is","It","Nothing","I"]},{"Key":"all. Is","Fragments":["there"]},{"Key":"Is there","Fragments":["anything","a","anything","any","anything","any","a","a","anything","any","any","a","a","somewhere","an","a","a","a","a","a","a","an","a","a","really","a","any","a","a","a","any","any","an","any","a","a"]},{"Key":"there anything","Fragments":["you","you","you","you"]},{"Key":"anything you","Fragments":["can","can","can","can","can"]},{"Key":"can do","Fragments":["to","to","to","this:","to","to","to","1996.IsLeap();","it!","it","this","this","some","similar","with","a","Boolean","the","birthday.AddSeconds(gigaSecond).Date","our","with","\u003ccode\u003evar","for","for","to","to","to","the","SKI","something","it","that","a","a","that","this","this","that","the","this","it","it"]},{"Key":"do to","Fragments":["further","make","make","make","tighten","eliminate","clarity","make","prevent","avoid","tighten","make","solve"]},{"Key":"to further","Fragments":["express"]},{"Key":"further express","Fragments":["the"]},{"Key":"express the","Fragments":["code's","IsLeap()"]},{"Key":"the code's","Fragments":["intent?","intent"]},{"Key":"code's intent?","Fragments":["Can"]},{"Key":"intent? Can","Fragments":["the"]},{"Key":"Can the","Fragments":["code"]},{"Key":"code be","Fragments":["made","more"]},{"Key":"be made","Fragments":["more","in","into","more","to","static","more","a","it","in","(removing","in","up","wisely.","more","a","more","shorter","far","a","a","into"]},{"Key":"made more","Fragments":["readable?","succinct","efficient,","than","readable","efficient"]},{"Key":"Sorry for","Fragments":["the"]},{"Key":"wait. Very","Fragments":["good"]},{"Key":"Very good","Fragments":["so","observation.","but","but"]},{"Key":"so far.","Fragments":["Truly","Couple","Is","Can","Is","Can","I","It","A"]},{"Key":"far. Truly","Fragments":["a"]},{"Key":"Truly a","Fragments":["nitpick,","nitpick,"]},{"Key":"a nitpick,","Fragments":["but","just","but","but"]},{"Key":"nitpick, but","Fragments":["in","I","you","I","an","your"]},{"Key":"in idiomatic","Fragments":["C#,","C#,"]},{"Key":"idiomatic C#,","Fragments":["all","all","even"]},{"Key":"C#, all","Fragments":["methods","methods"]},{"Key":"all methods","Fragments":["are","regardless"]},{"Key":"case so","Fragments":["the"]},{"Key":"so the","Fragments":["underscore","cast","Array.Sort","entire","params","others","yelling","use","more","name","reader","else","will","else","ordinal","syntax","foresight","end","bound","list","Compute","test"]},{"Key":"the underscore","Fragments":["would"]},{"Key":"underscore would","Fragments":["look"]},{"Key":"would look","Fragments":["a","like:","at","like:","over-engineered","like","better","cleaner,"]},{"Key":"look a","Fragments":["bit","bit"]},{"Key":"bit odd","Fragments":["to","as"]},{"Key":"to most","Fragments":["C#","solutions"]},{"Key":"most C#","Fragments":["developers.","devs."]},{"Key":"C# developers.","Fragments":["Is"]},{"Key":"developers. Is","Fragments":["there"]},{"Key":"there a","Fragments":["particular","benefit","difference?","problem","benefit","more","cast","side","reason","reason","reason","reason","way","reason","way","reasoning","particular","way","good","better","thougt","reason","better","case","performance","way","performance","way"]},{"Key":"a particular","Fragments":["reason","variable","grade","reason","exception","grade,","order","order"]},{"Key":"particular reason","Fragments":["why","you","you"]},{"Key":"reason why","Fragments":["you","the","my","you"]},{"Key":"you went","Fragments":["with","the","with"]},{"Key":"You mean","Fragments":["to","something","a"]},{"Key":"mean to","Fragments":["put","be","expose"]},{"Key":"to put","Fragments":["all","your","a","them","in","that","an","it","it","{","it","the","the","in","the","it","that","into","the","everything","results","them","extension","\"using","the","it","it","the"]},{"Key":"put all","Fragments":["the","of","the","that","three"]},{"Key":"the cases","Fragments":["in","on","(e.g.,","you","with"]},{"Key":"cases in","Fragments":["single","mind.","english?"]},{"Key":"single return","Fragments":["clause?","statements,","statement,","statement","line","statement,","from","from","statement."]},{"Key":"return clause?","Fragments":["Won't"]},{"Key":"clause? Won't","Fragments":["that"]},{"Key":"Won't that","Fragments":["make"]},{"Key":"that make","Fragments":["that","sense?","a","it","both"]},{"Key":"make that","Fragments":["clause","will","happen.","change.","work"]},{"Key":"that clause","Fragments":["unreadable?"]},{"Key":"mean something","Fragments":["like","like"]},{"Key":"something like","Fragments":["this:","this","the","the","CuttingEdge","`_sortedSourceLetters`","school.Roster[5].Clear()","\"Hey!!!\",","this,","this","this:","\u003ccode\u003eif","this","bool","this:","that.","isDiv4,","a","that.","SECONDS_PER_EARTH_YEAR)","\"invalid","this:","the","that...).","a","this)","this:","grade","`HasOneLetter`.","String.Concat(input.Select(nb=\u003eToDna[nt])))","```/(\\b')?([a-z])('\\b)?/```","```words"]},{"Key":" \u003ccode\u003ereturn","Fragments":["(year","((year","year"]},{"Key":"\u003ccode\u003ereturn (year","Fragments":["%","%"]},{"Key":"(year %","Fragments":["4","100","400","4","100","4","4","4","100","400","4","100","400","4","100","4","100","400)","4)","100)","400)","4","4)","100)","400)","100","100","100","x)","100","4","100","4","4","100","100","100","n","4","100","100","4","4","100","400","100","4","100","4","100","400","4","400","4","4","4","100","400","100","400","4","400","4","4","400","400","100","4","400"]},{"Key":"0 \u0026\u0026","Fragments":["year","(year","(year","year","(year%400)","(year","year","(year","(year","year%400","year%100","(year","year","(year%100","year","year","year","year","(year","(year","year","year","aYear","(year","(year","year%100","year","(year","year","day","year","year","(year","year","year","i","(year","year","((year","year","year"]},{"Key":"\u0026\u0026 year","Fragments":["%","%","%","%","%100","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%"]},{"Key":"!= 0)","Fragments":["||","return","isn't","return","return","||","||","||","||","\u0026\u0026","\u0026\u0026","\u0026\u0026","||"]},{"Key":"0) ||","Fragments":["year","(year","(aYear","year%400","year","(year","((year","((year","((year","(year"]},{"Key":"|| year","Fragments":["%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%"]},{"Key":" Somehow","Fragments":["I","just"]},{"Key":"Somehow I","Fragments":["dislike"]},{"Key":"I dislike","Fragments":["complex","having","TDD.","\"magic","using"]},{"Key":"dislike complex","Fragments":["if"]},{"Key":"complex if","Fragments":["expressions."]},{"Key":"if expressions.","Fragments":["They"]},{"Key":"expressions. They","Fragments":["contain"]},{"Key":"They contain","Fragments":["lots"]},{"Key":"contain lots","Fragments":["of"]},{"Key":"lots of","Fragments":["logic","people","submissions","submissions","comments.","comments.","philosophies","people","refactors","tests","false","computations.","computations.","copies","repeats"]},{"Key":"of logic","Fragments":["without","to","using","other","crammed"]},{"Key":"logic without","Fragments":["easy","running"]},{"Key":"without easy","Fragments":["way"]},{"Key":"easy way","Fragments":["to"]},{"Key":"read all","Fragments":["the","the","the"]},{"Key":"the logic.","Fragments":["Ideas","You're","I","It","I","This","I","The"]},{"Key":"logic. Ideas","Fragments":["about"]},{"Key":"Ideas about","Fragments":["this?"]},{"Key":"1. The","Fragments":["```lBy#```","```Main```","test","comment/response"]},{"Key":"The ```lBy#```","Fragments":["format"]},{"Key":"```lBy#``` format","Fragments":["for"]},{"Key":"format for","Fragments":["the","a"]},{"Key":"the variable","Fragments":["names","`isDivisible`","names.","everywhere.","naming","is","name.","anagramCharacters","and","private","names","like","names","names...","for","names","e.g.","assignments","value"]},{"Key":"variable names","Fragments":["is","are","and","(like","are","are","and","```SpecialConsonants```","are","when","in"]},{"Key":"names is","Fragments":["a","taken,"]},{"Key":"bit cryptic,","Fragments":["can"]},{"Key":"cryptic, can","Fragments":["you"]},{"Key":"can you","Fragments":["think","change","not","explain","bring","do","protect","make","figure","call","implement","please","give","do","do","give"]},{"Key":"think of","Fragments":["any","is","configurable","a","anything","anything","that","anything","anything","when","a","that","the","sorting","is","solution","is","anything","an","others","a","to","that!","that","this","a","to","a","a","it","mine.","all","is","any","any","are","those","is","is","what","a","any"]},{"Key":"of any","Fragments":["more","dataset","other","List\u003c\u003e.","kind","value","entry","trade-offs","simpler","negative","other","type,","so","right","element"]},{"Key":"more descriptive","Fragments":["names?","so","name","about"]},{"Key":"2. Not","Fragments":["a","sure"]},{"Key":"Not a","Fragments":["problem,","nitpick,","huge","good","lot","readable","lot","huge","nitpick,"]},{"Key":"a problem,","Fragments":["just","though,","but"]},{"Key":"problem, just","Fragments":["a"]},{"Key":"a stylistic","Fragments":["FYI:","decision.","choice,"]},{"Key":"stylistic FYI:","Fragments":["you"]},{"Key":"FYI: you","Fragments":["can"]},{"Key":"can eliminate","Fragments":["the","the"]},{"Key":"eliminate the","Fragments":["```else```","need","need","need","outer","loop.","nesting.","if/else","last","```LastCharIsQuestionMark```","superfluous","switch","foreach"]},{"Key":"the ```else```","Fragments":["block","on"]},{"Key":"```else``` block","Fragments":["and"]},{"Key":"block and","Fragments":["just","just","feel","change"]},{"Key":"and just","Fragments":["```return","let","put","do","write","returning","put","skip","put","return","use","use","use","doing","returning","kept","write","add","passed","fell","entered","update","return","presses","returning","used","returned","return","return","update","started"]},{"Key":"just ```return","Fragments":["true```"]},{"Key":"```return true```","Fragments":["if"]},{"Key":"true``` if","Fragments":["you"]},{"Key":"you like","Fragments":["terseness.","better?"]},{"Key":"the expressive","Fragments":["method"]},{"Key":"expressive method","Fragments":["names,"]},{"Key":"method names,","Fragments":["well"]},{"Key":"names, well","Fragments":["done."]},{"Key":"well done.","Fragments":["The","I","I"]},{"Key":"done. The","Fragments":["only","hardest"]},{"Key":"only nitpick","Fragments":["I","is","is","on"]},{"Key":"nitpick I","Fragments":["can"]},{"Key":"can possibly","Fragments":["think"]},{"Key":"possibly think","Fragments":["of"]},{"Key":"of is","Fragments":["you","to","maybe","stylistic","a","to","handling"]},{"Key":"is you","Fragments":["can","can","wanna"]},{"Key":"make this","Fragments":["a","more","feel","solution","more","loopable","interesting","more","more","code","much","simpler,","change","more","regex","test"]},{"Key":"this a","Fragments":["one-liner","leap","leap","pet","bit","pet","lot","bit","lot.","fairly","common","common","bit.","bit.","bit","lot"]},{"Key":"a one-liner","Fragments":["if","over"]},{"Key":"one-liner if","Fragments":["you"]},{"Key":"you want.","Fragments":["That","Second,"]},{"Key":"want. That","Fragments":["said,"]},{"Key":"said, that's","Fragments":["more"]},{"Key":"that's more","Fragments":["of","expressive,","readable,"]},{"Key":"more of","Fragments":["a","an","a","a","a","a","a","a","the"]},{"Key":"style preference","Fragments":["so"]},{"Key":"preference so","Fragments":["it's"]},{"Key":"so it's","Fragments":["truly","easier","not","always","safe","first","not","good","easier","easier","lopsided.","cool."]},{"Key":"it's truly","Fragments":["up"]},{"Key":"truly up","Fragments":["to"]},{"Key":"to how","Fragments":["you","I","to","you","that","hard"]},{"Key":"how you","Fragments":["want","feel","are","handle","overcame","pull","used","stuck","placed","got","opened","did","generate","handed","pass","used","pulled","made","might","used","defined","didn't","arrived","made","use","use","avoid"]},{"Key":"want it","Fragments":["to"]},{"Key":"it to","Fragments":["look.","Decimal.Zero","be","solve","VS2010","only","use","work?","use","make","check","pass","work","pass","work","false.","an","the","use","an","the","a","not","case-insensitive","be","the","make","finally","one","only","crash.","output","null","this.Number?","its","a","be","work,","the","group","the","scan","use","be","return","pass","an","mine","the","anyone?","the","the","use","an","be","\u003ccode\u003epublic","repeat","the","a","both","the","a","get","compile","write","an","this","a","your","give","a","compile","any","be","an","work!","become","the","the","on","binary.","be","the"]},{"Key":" First","Fragments":["iteration","some","stab","iteration","off,","of","off","exercise","iteration.","off:","of","handling","of","I","=","iteration","of","go","all","clean","calculate","of","thing","fluent","thing"]},{"Key":"First iteration","Fragments":["was","with","had"]},{"Key":"iteration was","Fragments":["just","a"]},{"Key":"was just","Fragments":["solving","shooting","proving","preventing","over","a","instinctively","the","me,","starting","ONE","keen","fighting","focused"]},{"Key":"just solving","Fragments":["the"]},{"Key":"the basic","Fragments":["problem.","problem","functionality.",".NET","functionality","requirements.","logic.","case","principles"]},{"Key":"basic problem.","Fragments":["Iteration"]},{"Key":"problem. Iteration","Fragments":["2"]},{"Key":"Iteration 2","Fragments":["was"]},{"Key":"2 was","Fragments":["solving"]},{"Key":"was solving","Fragments":["the"]},{"Key":"basic problem","Fragments":["while"]},{"Key":"problem while","Fragments":["making"]},{"Key":"while making","Fragments":["the"]},{"Key":"making the","Fragments":["database","leap","years","code","order","returned","code","*","separate","robot","roster","code","flow","dictionary","`string.IsNullOrWhiteSpace(call)`","regex","regex","default","existing"]},{"Key":"the database","Fragments":["immutable","with","from","needs","came","that"]},{"Key":"database immutable","Fragments":["to"]},{"Key":"immutable to","Fragments":["outside"]},{"Key":"to outside","Fragments":["consumers."]},{"Key":"outside consumers.","Fragments":["Iteration"]},{"Key":"consumers. Iteration","Fragments":["3"]},{"Key":"Iteration 3","Fragments":["was"]},{"Key":"3 was","Fragments":["doing","I"]},{"Key":"doing the","Fragments":["same","read-only","work","minimum","code","check","calculation","look","following:","following.","following.","write-up","lookup","validation","counting.","validation","calculations;"]},{"Key":"same thing","Fragments":["again","and","as","as","as","I","in","happened","under-the-covers","applies","really.","over","as","4","so"]},{"Key":"thing again","Fragments":["but"]},{"Key":"again but","Fragments":["using"]},{"Key":"but using","Fragments":["more","`ToArray()`"]},{"Key":"using more","Fragments":["built-in","memory.","memory"]},{"Key":"more built-in","Fragments":[".NET"]},{"Key":"built-in .NET","Fragments":["types."]},{"Key":"a submission","Fragments":["I'd"]},{"Key":"submission I'd","Fragments":["really"]},{"Key":"I'd really","Fragments":["like"]},{"Key":"like some","Fragments":["feedback","of","advice"]},{"Key":"some feedback","Fragments":["on.","and","for"]},{"Key":"feedback on.","Fragments":["It's"]},{"Key":"on. It's","Fragments":["the"]},{"Key":"It's the","Fragments":["first"]},{"Key":"time I've","Fragments":["used"]},{"Key":"I've used","Fragments":["a"]},{"Key":"used a","Fragments":["lot","small","linq","dictionary","char","switch","ternary","switch","testing","StringBuilder","cipher","Dictionary","dictionary","Tuple\u003c\u003e","List\u003cTupple\u003c\u003e\u003e","switch","Tuple","struct","strict","Tuple","positive","more","bitwise","series","class","dictionary","modified","similar"]},{"Key":"lot of","Fragments":["these","code","times","developers","people","people","time","time.","extra","crap","extra,","capital","uses","use","phrases.","these","nested","directions","gray","people","solutions","what","validation","extra","returns.","stuff","mental","comments","logic.","steps","the","Linq.","space,","readability.","looking","if","code","ways","is",".Contains()","situations.","code","your","division.","rework.","explicit","trouble","solutions","looping","lines","unseen","trouble","extra","us","strings,","debugging","time","logic","work","strings","nested","layers","mental"]},{"Key":"these read-only","Fragments":["types."]},{"Key":"method names","Fragments":["explaining","on","(which","do,","and"]},{"Key":"names explaining","Fragments":["the"]},{"Key":"explaining the","Fragments":["mod","business","comments"]},{"Key":"the mod","Fragments":["functions,","values.","=","operator","operation.","was"]},{"Key":"mod functions,","Fragments":["makes"]},{"Key":"functions, makes","Fragments":["it"]},{"Key":"it very","Fragments":["clear","easy","similar","helpful","well.","difficult","tricky;","readable,"]},{"Key":"very clear","Fragments":["what","what's","and","what"]},{"Key":"clear what","Fragments":["your","is","the","it's","that","is","you"]},{"Key":"what your","Fragments":["code","intention","helper","doing"]},{"Key":" In","Fragments":["the","this","the","IsYelling,","C#","addition","the","the","the","the","your","this","a","fact","line","each","75%","more","addition","a","total,","this","hindsight,","short,","your","my","this","`GenerateNumbers`,","the","your","Grade,","this","my","this","this","the","your","this","this","the","the","terms","a","a","Add,","Grade,","Verse()","something","GetNewName(),","my","the","a","Encode()","my","the","WordIsAnagram","my","my","your","\u003ccode\u003eKind\u003c/code\u003e,","a","the","the","my","the","the","this","my","the","retrospect","TrimWord,","next","the","my","particular","your","your"]},{"Key":"In the","Fragments":["IsLeap","worst","interest","interest","Add","interest","interest","search","previous","case","end","tests","end,","RobotFactory.GenerateNewRobotName()","case","current","CleanString","implementation","third","comment","current","example","future","\u003ccode\u003eGrade\u003c/code\u003e","ctor","future","IsGregorian","`IsExclamation`","To()","second","containsLetters"]},{"Key":"the IsLeap","Fragments":["function,","method","method.","method.","function.","function","function.","method","and","method","you"]},{"Key":"IsLeap function,","Fragments":["It's"]},{"Key":"function, It's","Fragments":["probably"]},{"Key":"It's probably","Fragments":["a","more","personal","slightly"]},{"Key":"probably a","Fragments":["personal","better","holdover","bad","little","bit","bad"]},{"Key":"personal thing,","Fragments":["but"]},{"Key":"thing, but","Fragments":["I","most","wasn't","I"]},{"Key":"I prefer","Fragments":["something","this","more","the","to","to","the","the","the","clear","Regex","a","the","looping","one","your","to","including","to","for","my","on"]},{"Key":"prefer something","Fragments":["more"]},{"Key":"return IsEveryFourYears(year)","Fragments":["\u0026\u0026"]},{"Key":"IsEveryFourYears(year) \u0026\u0026","Fragments":["!(IsTurnOfCentury(year)"]},{"Key":"\u0026\u0026 !(IsTurnOfCentury(year)","Fragments":["\u0026\u0026"]},{"Key":"!(IsTurnOfCentury(year) \u0026\u0026","Fragments":["IsTurnOfEveryFourCenturies(year))"]},{"Key":" Simply","Fragments":["because"]},{"Key":"Simply because","Fragments":["it"]},{"Key":"it reads","Fragments":["more","better.","entirely","nicer?","a",":D","easier)","just","better."]},{"Key":"reads more","Fragments":["like","like"]},{"Key":"more like","Fragments":["an","the","human","IsDivisibleBy4(yearNum).","true","c","coding"]},{"Key":"an English","Fragments":["sentence","sentence."]},{"Key":"English sentence","Fragments":["to"]},{"Key":"sentence to","Fragments":["me:"]},{"Key":" \"Is","Fragments":["every"]},{"Key":"\"Is every","Fragments":["four"]},{"Key":"every four","Fragments":["years","centuries\""]},{"Key":"four years","Fragments":["and"]},{"Key":"years and","Fragments":["not","have","nested","then"]},{"Key":"the turn","Fragments":["of","of"]},{"Key":"turn of","Fragments":["the","every"]},{"Key":"the century","Fragments":["or","logic.","special"]},{"Key":"century or","Fragments":["the"]},{"Key":"or the","Fragments":["turn","other","quality","code","other,","Name.","values","last","tests","junior","Forceful_questions","other."]},{"Key":"of every","Fragments":["four","letter,","single"]},{"Key":"This truly","Fragments":["is"]},{"Key":"truly is","Fragments":["nitpicking","a"]},{"Key":"is nitpicking","Fragments":["though,"]},{"Key":"nitpicking though,","Fragments":["I"]},{"Key":"though, I","Fragments":["quite","don't","should","commented"]},{"Key":"I quite","Fragments":["like","like"]},{"Key":"quite like","Fragments":["your","this","the"]},{"Key":"I personally","Fragments":["feel","prefer","like","don't","didn't","prefer","used","don't","like","use","find","prefer","prefer","try","try","try","dont","prefer","favor","chose","chose","think","prefer","prefer","favor","like","try","did","would","don't","prefer"]},{"Key":"personally feel","Fragments":["like"]},{"Key":"feel like","Fragments":["the","I","the","I","there","I","in","looking","there","the","the","this","such","something","these","it","my","you","it","it","I","this","cheating","I","I","an","it","there","there","that's","there"]},{"Key":"the early-return","Fragments":["makes"]},{"Key":"early-return makes","Fragments":["it"]},{"Key":"it more","Fragments":["understandable.","expressive","carefully.","concise,","difficult","complicated","legible","difficult","readable.","readable.","difficult","readable","efficient","readable)","of","difficult","readable","readable.","simple.","readable","efficient","understandable.","and","readable,","readable,","readable.","difficult","eradable","readable","explicit","readable?","generally"]},{"Key":" Similar","Fragments":["to"]},{"Key":"Similar to","Fragments":["my"]},{"Key":"first iteration,","Fragments":["logically","except","@imani"]},{"Key":"iteration, logically","Fragments":["writing"]},{"Key":"logically writing","Fragments":["out"]},{"Key":"writing out","Fragments":["the","an","the","the"]},{"Key":"the requirements","Fragments":["in","for","documents","docs","documents","docs","without","and","of"]},{"Key":"requirements in","Fragments":["if"]},{"Key":"in if","Fragments":["statements."]},{"Key":"statements. Good","Fragments":["Job!"]},{"Key":" -","Fragments":["You","`verseNumber`","`verseLyrics`","`_toOrdinal`","`_daysGifts`","`GiftDelimeter`","///","Since","Test","Considered","not","(Year","then","Variables","Comments","Comments","If","It's","No","It's","I","Use","I","Grab","Create","Compare","Always","Or","Implemented","Sort","Use","Use","Properties","If","A","You","Also,","It's","When","Your","Your","first","Generate","If"]},{"Key":"- You","Fragments":["can","have"]},{"Key":"can use","Fragments":["`sentence.EndsWith(\"?\")`","array","a","within","`var`","a","the","`char.IsLetter`","Linq","on","a","Linq","`string.IsNullOrWhitespace()`","two","\u0026\u0026",".Concat()","ForEach,","Linq","```dna1[i]```","Linq","simple","hexadecimal","\u003ccode\u003e1E9\u003c/code\u003e","it.","\u003ccode\u003e1E9\u003c/code\u003e","the","`cleanedInput[0].Equals('1')`","foreach","the","all","a","for","just","only","this","some","TrimFirst()"]},{"Key":"use `sentence.EndsWith(\"?\")`","Fragments":["instead"]},{"Key":"`sentence.EndsWith(\"?\")` instead","Fragments":["creating"]},{"Key":"instead creating","Fragments":["your"]},{"Key":"creating your","Fragments":["own"]},{"Key":"your own","Fragments":["function","method.","logic...","with","that's","code","code.","projects,","Split","code.","Dictionary","class","class,"]},{"Key":"The challenge","Fragments":["in","in","in","in","in","in"]},{"Key":"challenge in","Fragments":["this","this","this","this","this","this","this","this","these","making"]},{"Key":"in this","Fragments":["problem","problem","problem","case.","problem.","order.","program,","exercise","and","code.","case","question.","little","case","\"this","case","way)","instance.","exercise","case!)","case","case.","exercise.","particular","problem.","scenario,","case","exercise)","one","iteration","case.","one","exercise,","small","exercise.","instance).","exercise.","case,","case","case","case","code","assignment,","case,","-","case","exercise!","case,","case","code","case,","mix","case.","case","case.","case","case","small","case","way.","case,","particular","variable.","case","case)","community.","case.","situation.","case","(non","approach:","attempt,","exercise.","scenario","situation,","case?","code.","[General","challenge.","problem","problem","problem","problem","problem","excercise)","case","implementation.","case","instance","case","instance","instance,","exercise","case","manner","case","exercise.","exercise","exercise","exercise","exercise","iteration","release","exercise","case","solution","exercise)","context"]},{"Key":"is to","Fragments":["use","use","use","read.","just","avoid","replace","start","write","be","keep","use","it,","count","document","move","extract","get","make","return","stand","match","use","write","set","create","make","convert","handle","generate","remove","run","create","start","read,","return.","check","make","satisfy","use","use","use","use","have","fork","prefix"]},{"Key":"use flagged","Fragments":["enums","enums","enums","enums","enums","enums","enums"]},{"Key":" Or","Fragments":["something","in","right","even","something","better","avoid"]},{"Key":"Or something","Fragments":["like","like"]},{"Key":"this (I","Fragments":["have"]},{"Key":"(I have","Fragments":["not","not","been"]},{"Key":"have not","Fragments":["put","succeeded","returned","returned","died.","other","done"]},{"Key":"not put","Fragments":["the"]},{"Key":"calculations in","Fragments":["for","your"]},{"Key":"in for","Fragments":["clarity)","all"]},{"Key":" var","Fragments":["isLeapYear","isDivisibleByFour","isLeapYear","newScores","sortedWord","letters","shortestStrandLength","count=0;","output","ret","old","expected","phrase","counts","phrase","counts","compiles","numberOfPlaces","strInt","matches","matches","result","mult","values","sum","values","sum","numOff","temp","FivePlusOne","gifts","totalPoints","letters","numberOfPlaces","numberOfPlaces","alphabetCharactersOnly","isShouting","date","isDivisibleByFourHundred","isNotDivisibleByOneHundred","isDivisibleByFour","sw","run1","run2","isNumeric","response","text","key","ruleNumber","scrabble","score","n","k","sum","q","phrase","counts","distance"]},{"Key":"var isLeapYear","Fragments":["=","="]},{"Key":"isLeapYear =","Fragments":["false;","true;","false;","true;","isDivisibleByFour","false;","true;","true;"]},{"Key":" isLeapYear","Fragments":["=","=","=","should","=","="]},{"Key":" else","Fragments":["if","if","return","if","if","if","{","if","if","if","if","if","if","{"]},{"Key":"else if","Fragments":["(divisableByHundred)","(divisableByFour)","(hey.EndsWith(\"?\"))`","with","with","to","(Regex.IsMatch(input,","(currentWord.Length","(number.Length","(char.IsLetter(character))","binaryString[i]","(","(","(given[i]","condition","(String.IsNullOrWhitespace(statement))"]},{"Key":" @genoveva","Fragments":["Sorry"]},{"Key":"@genoveva Sorry","Fragments":["I"]},{"Key":"Sorry I","Fragments":["should","didn't","haven't","misread"]},{"Key":"should have","Fragments":["made","significant","brackets.","read","a","been","done","an","3","failed.","_","cleaned","only","done","created","a","been","been","written","added","a","thought","been","filtered","braces.","pointed","a","just","used","been","noticed","written:","cleaned","SKI","done:","done","caught","spotted","tried","included","done?","cleaned","been"]},{"Key":"have made","Fragments":["myself","it","the","a","it","it","this","a","by","a"]},{"Key":"made myself","Fragments":["more"]},{"Key":"myself more","Fragments":["clear"]},{"Key":"more clear","Fragments":["on","when","and"]},{"Key":"clear on","Fragments":["what","the","that","what's"]},{"Key":"on what","Fragments":["method","requested","the","you","the","are","is"]},{"Key":"what method","Fragments":["gets"]},{"Key":"gets tested.","Fragments":["What"]},{"Key":"tested. What","Fragments":["I"]},{"Key":"What I","Fragments":["mean","really","found"]},{"Key":"I mean","Fragments":["is","the"]},{"Key":"mean is","Fragments":["the","divisible"]},{"Key":"IsLeap method","Fragments":["being","you","from","looks","this","and","which","should"]},{"Key":"method being","Fragments":["tested","called."]},{"Key":"being tested","Fragments":["against"]},{"Key":"tested against","Fragments":["a","a"]},{"Key":"against a","Fragments":["negative","property"]},{"Key":"number and","Fragments":["zero","got","then","include","using"]},{"Key":"and zero","Fragments":["-"]},{"Key":"zero -","Fragments":["ISO"]},{"Key":"- ISO","Fragments":["8601's"]},{"Key":"ISO 8601's","Fragments":["definition"]},{"Key":"8601's definition","Fragments":["about"]},{"Key":"definition about","Fragments":["year"]},{"Key":"about year","Fragments":["zero"]},{"Key":"year zero","Fragments":["being","or","so"]},{"Key":"zero being","Fragments":["1BC."]},{"Key":"being 1BC.","Fragments":["Still,"]},{"Key":"1BC. Still,","Fragments":["I"]},{"Key":"Still, I","Fragments":["appreciate"]},{"Key":"I appreciate","Fragments":["your","the","what","that","all","the","your","your","it","your"]},{"Key":"appreciate your","Fragments":["effort","feedback.","help","help!","feedback."]},{"Key":"your effort","Fragments":["putting"]},{"Key":"effort putting","Fragments":["the"]},{"Key":"putting the","Fragments":["tests","two","cases","body","`.Substring()`","logic","logic","old"]},{"Key":"tests for","Fragments":["IsDivisibleBy/IsNotDivisibleBy","proving","that","this","null","the","\"doesn't","numbers,","the","future","future","this","timings","Argument"]},{"Key":"for IsDivisibleBy/IsNotDivisibleBy","Fragments":["methods."]},{"Key":"IsDivisibleBy/IsNotDivisibleBy methods.","Fragments":["You"]},{"Key":"methods. You","Fragments":["rock!"]},{"Key":" Commenting","Fragments":["so"]},{"Key":"Commenting so","Fragments":["heavily"]},{"Key":"so heavily","Fragments":["is"]},{"Key":"heavily is","Fragments":["really"]},{"Key":"really a","Fragments":["bit","shouted","char","test","reference","nitpicy","Nitpick,","possibility"]},{"Key":"bit of","Fragments":["an","exta","difficulty.","nesting","nesting","an","the","memory","testing,","repeated","code","a","overkill","time","the","a","duplication"]},{"Key":"of an","Fragments":["anti-pattern.","FYI.","external","API.","investment","extension","overkill","if","enum","entire","if","\"Any\"","anonymous","OR.","enum,","array?","invalid","array.","ArgumentOutOfRangeException(),","integer","executable.","int.","allergy","array"]},{"Key":" Better","Fragments":["to","filtering"]},{"Key":"Better to","Fragments":["make"]},{"Key":"code methods","Fragments":["and"]},{"Key":"methods and","Fragments":["variables","it","variables,","pass","if","variables","use","the","do","integrate","whatever"]},{"Key":"and variables","Fragments":["self","with","by"]},{"Key":"variables self","Fragments":["explanatory"]},{"Key":"self explanatory","Fragments":["so","in"]},{"Key":"explanatory so","Fragments":["such"]},{"Key":"so such","Fragments":["verbiage"]},{"Key":"such verbiage","Fragments":["is"]},{"Key":"verbiage is","Fragments":["not"]},{"Key":" if(IsDivisibleByOneHundred(year)","Fragments":["\u0026\u0026"]},{"Key":"if(IsDivisibleByOneHundred(year) \u0026\u0026","Fragments":["IsDivisibleByFourHundred(year)){"]},{"Key":" is","Fragments":["clear","clear,","the","a","the","a","basically","redundant."]},{"Key":"is clear","Fragments":["in","(and","what","and","and","and","enough","(one","but"]},{"Key":"clear in","Fragments":["and"]},{"Key":"in and","Fragments":["off","return","return","return","return","return","return","return","out","out","out","text","now"]},{"Key":"and off","Fragments":["itself."]},{"Key":" @niko","Fragments":["Thanks,"]},{"Key":"@niko Thanks,","Fragments":["Here"]},{"Key":"Thanks, Here","Fragments":["is"]},{"Key":"Here is","Fragments":["my","a","what","the"]},{"Key":"my explanation.","Fragments":["Two"]},{"Key":"explanation. Two","Fragments":["conditional"]},{"Key":"Two conditional","Fragments":["statements"]},{"Key":"statements are","Fragments":["quite","giving","...","unnecessary","a","followed","a","significant,","single","hard","technically","possibly"]},{"Key":"are quite","Fragments":["easy","hard","right,","a","missing"]},{"Key":"quite easy","Fragments":["to","to","to"]},{"Key":"easy to","Fragments":["understand.","read.","step","read.","read.","read","read.","read","understand","follow.","read.","read","read,","reuse","fix","close","quickly","miss","read.","put","make","follow.","read","understand","understand","read.","follow","calculate","focus","understand,","read","understand.","read","maintain.","parse","edit","update","understand.","add"]},{"Key":"to understand.","Fragments":["Together","I",":)","I","Since","Since"]},{"Key":"understand. Together","Fragments":["with"]},{"Key":"Together with","Fragments":["a"]},{"Key":"a significantly","Fragments":["named"]},{"Key":"significantly named","Fragments":["constant,"]},{"Key":"named constant,","Fragments":["equality"]},{"Key":"constant, equality","Fragments":["ops"]},{"Key":"equality ops","Fragments":["and"]},{"Key":"ops and","Fragments":["modulo"]},{"Key":"and modulo","Fragments":["ops"]},{"Key":"modulo ops","Fragments":["in"]},{"Key":"ops in","Fragments":["a"]},{"Key":"few lines,","Fragments":["should"]},{"Key":"lines, should","Fragments":["be"]},{"Key":"a fair","Fragments":["few"]},{"Key":"fair few","Fragments":["seconds"]},{"Key":"few seconds","Fragments":["of"]},{"Key":"seconds of","Fragments":["analysis"]},{"Key":"of analysis","Fragments":["to"]},{"Key":"analysis to","Fragments":["a"]},{"Key":"a programmer","Fragments":["who","can","error"]},{"Key":"programmer who","Fragments":["understand"]},{"Key":"who understand","Fragments":["the"]},{"Key":"understand the","Fragments":["basics","point","rule.","%","changing","problem","code.","```readonly```","code","use","use","opinion","bit","concern","internal","problem","benefits","difference"]},{"Key":"the basics","Fragments":["of","of"]},{"Key":"basics of","Fragments":["conditional","Boolean","how"]},{"Key":"of conditional","Fragments":["operators.","tests"]},{"Key":"think it's","Fragments":["clean","clear","necessary","easier","neater","safe","a","a","pretty","slightly","super","way","too","highly","clearer","just","just","too","better","maybe"]},{"Key":"it's clean","Fragments":["and"]},{"Key":"clean and","Fragments":["straightforward.","easy","easy","readable,"]},{"Key":"and straightforward.","Fragments":["Like","I"]},{"Key":"straightforward. Like","Fragments":["reading"]},{"Key":"Like reading","Fragments":["an"]},{"Key":"reading an","Fragments":["English"]},{"Key":" Hardcoding","Fragments":["numeric"]},{"Key":"Hardcoding numeric","Fragments":["values"]},{"Key":"numeric values","Fragments":["is","into"]},{"Key":"values is","Fragments":["something","disconnected"]},{"Key":"something I'd","Fragments":["consider"]},{"Key":"I'd consider","Fragments":["a","writing","making","using","adding","extracting","breaking"]},{"Key":"consider a","Fragments":["bad","single","`null`"]},{"Key":"bad practice.","Fragments":["Though","It"]},{"Key":"practice. Though","Fragments":["developers"]},{"Key":"Though developers","Fragments":["have"]},{"Key":"developers have","Fragments":["mixed"]},{"Key":"have mixed","Fragments":["opinions","levels"]},{"Key":"mixed opinions","Fragments":["on"]},{"Key":"opinions on","Fragments":["it","my","\"var\","]},{"Key":"on it","Fragments":["but","and","at","when","in","in","and"]},{"Key":"it but","Fragments":["I","fairly","C#","other","on"]},{"Key":"I myself","Fragments":["am"]},{"Key":"myself am","Fragments":["firm"]},{"Key":"am firm","Fragments":["that"]},{"Key":"firm that","Fragments":["it's"]},{"Key":"that it's","Fragments":["not","self-documented","simpler","cool.","checking","clear","referring","not","easy","better","good","a","not.","not","complex,","hurting","able","most","maybe","a","good","harder","a","invoked","a"]},{"Key":"it's not","Fragments":["a","something","really","super","working.","an","faster","a","a","that","that","so","a","actually","the","part","a","strictly","inline","a","going","checking","what","overkill","in","being","divisible","used","set","a","okay,","used","as","doing","a"]},{"Key":"good practice","Fragments":["that's","when","to","to","to","to","to","to","to","either."]},{"Key":"practice that's","Fragments":["why"]},{"Key":"that's why","Fragments":["I","@victor","it"]},{"Key":"why I","Fragments":["use","have","don't","am","use","never","dislike","only","like","wrote","was","added","used","suggested","love","chose"]},{"Key":"I use","Fragments":["constants.","this","them","GroupBy","`Decimal.Zero`.","in","LINQ","to","just","a","var","a","this","my","it","the","`ToArray()`","the","a","boolean"]},{"Key":"use constants.","Fragments":["Constants"]},{"Key":"constants. Constants","Fragments":["should"]},{"Key":"Constants should","Fragments":["have"]},{"Key":"have significant","Fragments":["names"]},{"Key":"significant names","Fragments":["and"]},{"Key":"names and","Fragments":["is","the","logic","then","creating","bodies.","you","whatnot).","remove"]},{"Key":"and is","Fragments":["a","less","thus","testable.","very","very","easier","less","affective","easy","absolutly","never","a","the","twice","easily","against","anyway","not","standard"]},{"Key":"practice when","Fragments":["dealing"]},{"Key":"when dealing","Fragments":["with","with"]},{"Key":"dealing with","Fragments":["a","whitespace,","strings","Unicode","trying","different","the"]},{"Key":"a straightforward","Fragments":["specs","return","comparison","answer"]},{"Key":"straightforward specs","Fragments":["like"]},{"Key":"specs like","Fragments":["below:"]},{"Key":" on","Fragments":["every","typography:","every"]},{"Key":"on every","Fragments":["year","method","access","single","number","call","year"]},{"Key":"year that","Fragments":["is","is","is","passes","is","is","is","is","is","is","is","is","is"]},{"Key":"is evenly","Fragments":["divisible","divisible","divisible.","divisible","divisible","divisible","divisible","divisible","divisible","divisible","divisible","divisible","divisible"]},{"Key":"evenly divisible","Fragments":["by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by"]},{"Key":"divisible by","Fragments":["4","100","400","300","400","4,","100,","400.\"","400","400","400,","4","100,","the","400,","4","4","400","400,","400","4","400","100","400","4,","400,","100,","100","4,","another:","4","4,","400","four","400,","4","400","4","400,","100,","4)","400","4","400,","100","4","4.","100).","4","100","400","four","100","400","4","100","4","both","400","100.","without","4.","4.","4","4","100","400\"","400.","4","100.","4","100","400\"","4","400","4.","400\"","4","100\"","4","100","400","four,","both","four'","four'","100","400","4","4","400,","4,","100.","100","4","4.","400","400,","400,","100(by","4.","400","4","all","4"]},{"Key":" except","Fragments":["every","every","every","every"]},{"Key":"except every","Fragments":["year","year","year","year","year"]},{"Key":" unless","Fragments":["the","the","the","the"]},{"Key":"unless the","Fragments":["year","year","extension","first","if","point","year","year","year"]},{"Key":"also evenly","Fragments":["divisible","divisible","divisible","divisible","divisible","divisible"]},{"Key":" And","Fragments":["of","that","then","don't","is","at","the","I","yes,","making","finally,","I","why","you","then","indeed,","put","resharper","for","you","I","then","you","note","you","surely"]},{"Key":"And of","Fragments":["course"]},{"Key":"the requirement","Fragments":["values","to","ever","of","but"]},{"Key":"requirement values","Fragments":["for"]},{"Key":"values for","Fragments":["a","this","the","the","5000s,"]},{"Key":"year test","Fragments":["will","in"]},{"Key":"test will","Fragments":["never","fail","pass"]},{"Key":"will never","Fragments":["change","change","have","fail,","contain","be"]},{"Key":"change so","Fragments":["there","I'm"]},{"Key":"so there","Fragments":["is","maybe","is","has","are","is"]},{"Key":"is no","Fragments":["need","point","hard","test","need","different).","real","data","test","particular","need","way","benefit","year","requirement","more","point","right","need","documentation","strong","year","code","effective","need","need","point","need","problem","harm","program","need","reason","need","big","appreciable","need","need","need","'A',","need","need","GetEnumerator,","point","point","point","point","longer","rule","else.","top","need"]},{"Key":"to think","Fragments":["of","twice","about","through","about","too","about","about!","about!","about!","about!","about!","about!","about.","about.","about.","comments","everything","about!","of","of","about","that","about.","about","about"]},{"Key":"of configurable","Fragments":["variables."]},{"Key":"variables. As","Fragments":["an"]},{"Key":"As an","Fragments":["addition,"]},{"Key":"an addition,","Fragments":["significant"]},{"Key":"addition, significant","Fragments":["naming"]},{"Key":"significant naming","Fragments":["adds"]},{"Key":"naming adds","Fragments":["to"]},{"Key":"adds to","Fragments":["readability.","enumerator"]},{"Key":"am with","Fragments":["@summer","you"]},{"Key":"with @summer","Fragments":["finding"]},{"Key":"@summer finding","Fragments":["your"]},{"Key":"finding your","Fragments":["return"]},{"Key":"your return","Fragments":["statement","(you","value","statement","value","value,","type"]},{"Key":"statement a","Fragments":["bit","little","certain"]},{"Key":"that Hundred","Fragments":["is"]},{"Key":"Hundred is","Fragments":["not"]},{"Key":"good name...","Fragments":["it"]},{"Key":"name... it","Fragments":["should"]},{"Key":"be OneHundred","Fragments":["if"]},{"Key":"OneHundred if","Fragments":["you"]},{"Key":"going down","Fragments":["this"]},{"Key":"down this","Fragments":["path."]},{"Key":"this path.","Fragments":["The"]},{"Key":"path. The","Fragments":["Four"]},{"Key":"The Four","Fragments":["*"]},{"Key":"Four *","Fragments":["Hundred"]},{"Key":"* Hundred","Fragments":["calculation"]},{"Key":"Hundred calculation","Fragments":["is"]},{"Key":"calculation is","Fragments":["surprising,","only","probably","earth"]},{"Key":"is surprising,","Fragments":["as"]},{"Key":"surprising, as","Fragments":["it"]},{"Key":"me it","Fragments":["is","it","doesn't","seems"]},{"Key":"only 'chance'","Fragments":["that"]},{"Key":"'chance' that","Fragments":["400"]},{"Key":"that 400","Fragments":["is"]},{"Key":"400 is","Fragments":["required","a","inherently","always","divisible","divisible","also"]},{"Key":"is required","Fragments":["to","is","in","if"]},{"Key":"required to","Fragments":["generate","get","fix"]},{"Key":"to generate","Fragments":["a","the","the","a","the","the","the","all","a","a","a","a","a"]},{"Key":"generate a","Fragments":["true","name","non-matching-previous","list","random","list","list","TriangleException"]},{"Key":"a true","Fragments":["leap","nitpick:","or","from","boolean"]},{"Key":"true leap","Fragments":["year"]},{"Key":"year (what","Fragments":["if"]},{"Key":"(what if","Fragments":["it"]},{"Key":"was centuries","Fragments":["divisible"]},{"Key":"centuries divisible","Fragments":["by"]},{"Key":"by 300","Fragments":["instead?"]},{"Key":"the result","Fragments":["of","directly.","is","object.","of","in","of","was","should","of","of","of","of","of","of","of","of","to","of","from","was","from","to","list.","as","list.","from","of","string.","be","(in","to","in"]},{"Key":"result of","Fragments":["int","the","the","the","the","that","the","it.","it.","it","the","the","calling","\"whatever\"","your","your"]},{"Key":"of int","Fragments":["%","as"]},{"Key":"int %","Fragments":["int"]},{"Key":"% int","Fragments":["is"]},{"Key":"int is","Fragments":["an"]},{"Key":"int so","Fragments":["comparing"]},{"Key":"so comparing","Fragments":["it"]},{"Key":"comparing it","Fragments":["to"]},{"Key":"to Decimal.Zero","Fragments":["is"]},{"Key":"Decimal.Zero is","Fragments":["possibly","not"]},{"Key":"is possibly","Fragments":["not","not","less"]},{"Key":"possibly not","Fragments":["sensible.","the"]},{"Key":" Can","Fragments":["you","you","make","someone","you","you","you","only","happen","you","you","you","all","just","you","you","you","I","you","you","you","you","you","I","you","compact","make","use","use","still","make","make","simplify","turn","combine","combine","combine","make","be","use","halve","simplify"]},{"Key":"Can you","Fragments":["make","think","think","think","think","elaborate","explain","try","explain","think","get","rework","change","fix","elaborate","use","rewrite","detect","find","rearrange","come","combine","fix","at","change","rework","use","change","combine","validate","show","rework","elaborate?","use","avoid","also","modify","do","give","explain?","write","combine","make","make","make","make","make","do"]},{"Key":"code so","Fragments":["expressive","it","it's","I","I'm","I","it","it","I'm","that"]},{"Key":"so expressive","Fragments":["that"]},{"Key":"expressive that","Fragments":["comments"]},{"Key":"comments are","Fragments":["not","a","appreciated,","probably","too","really","welcome!","contributing","helpful,"]},{"Key":"not required","Fragments":["to","at","as","by"]},{"Key":" IMHO","Fragments":["The","The","your","the","-","I","it","I"]},{"Key":"IMHO The","Fragments":["challenge","challenge"]},{"Key":" Consider","Fragments":["using","reversing","adding","using","using","revising","naming","this","returning","using","removing"]},{"Key":" \u0026\u0026","Fragments":["rather","is","year"]},{"Key":"\u0026\u0026 rather","Fragments":["than"]},{"Key":"than just","Fragments":["\u0026","a","checking","returning?","looping","single","saying","saying","providing","non-letter"]},{"Key":"\u0026\u0026 is","Fragments":["short-circuiting,","less"]},{"Key":"is short-circuiting,","Fragments":["so"]},{"Key":"short-circuiting, so","Fragments":["only"]},{"Key":"so only","Fragments":["the","one"]},{"Key":"only the","Fragments":["left","first","specified","match","1st","array","constructors","single","constructor","letters"]},{"Key":"the left","Fragments":["side","side.","side,","is","over","side"]},{"Key":"left side","Fragments":["is","of"]},{"Key":"side is","Fragments":["evaluated","larger"]},{"Key":"is evaluated","Fragments":["if"]},{"Key":"evaluated if","Fragments":["that","the","expr2"]},{"Key":"if that","Fragments":["would","was","is","is","can","can","would","doesn't","is","is","kind","is"]},{"Key":"would render","Fragments":["the"]},{"Key":"render the","Fragments":["whole"]},{"Key":"whole expression","Fragments":["false"]},{"Key":"expression false","Fragments":["without"]},{"Key":"false without","Fragments":["recourse"]},{"Key":"without recourse","Fragments":["to"]},{"Key":"recourse to","Fragments":["the"]},{"Key":"right hand","Fragments":["side.","side","side"]},{"Key":"hand side.","Fragments":["Useful"]},{"Key":"side. Useful","Fragments":["if"]},{"Key":"Useful if","Fragments":["the"]},{"Key":"hand side","Fragments":["may","should"]},{"Key":"side may","Fragments":["have"]},{"Key":"may have","Fragments":["a","already","unintended","made","to","changed","impact.","to","taken"]},{"Key":"have a","Fragments":["null","method","mathematical","look","better","point.","list","proper","space","look","few","name","'Person'","If-Return","bunch","go","static","console?","much","_hidden_","hamming","problem.","{","lot","number","habit","feature","9","big","single","functional","single","few","side","few","nit","namespace","really","LINQ","small","boolean","if-return","few","few","feeling","small","function","hard","decent","hard-coded","small","separate","reminder","poorer","look","go","compiler","little","comment","property","class","question:","look.","foreach","small","private","count","List","couple","big","local","few","public","'check","preference","`default`","constructor","guaranteed","go","longer","look","look","reasonable","digit","look","TryParse","really","logical","problem","look","different","default","good","Element","dictionary","link","nice","small"]},{"Key":"a null","Fragments":["or","reference","reference","check","item","or","check","string","value","reference","parameter.","as","input,","string","string,","character","check","Word.","when"]},{"Key":"null or","Fragments":["be","empty","all","white","a","thrown","empty","if","transformedKey","letter","letter","a","str","letter","empty","ciphertext","contains","empty","whitespace.","whitespace"]},{"Key":"or be","Fragments":["expensive","less"]},{"Key":"be expensive","Fragments":["in"]},{"Key":" More","Fragments":["here:","standard","seriously...","code","readable,"]},{"Key":"More here:","Fragments":["http://stackoverflow.com/questions/7331686/why-and-not"]},{"Key":"This code","Fragments":["does","cannot","was","does","runs","does","works","does","does"]},{"Key":"code does","Fragments":["not","a","not","at","2","throw","allow","NOT","not","1"]},{"Key":"does not","Fragments":["cause","divide","explain","seem","handle","exist","alter","exist","mean","have","appear","ship","cover","look","ask","know","help","validate","work.","implement","exist","change","apply","prevent","specify","already","exist)","really","lend","address","guarantee","exist","match","need","get","need","work","guarantee","match","change","belong","need","need","even","compile.","use","compile","pass"]},{"Key":"not cause","Fragments":["the","issue"]},{"Key":"cause the","Fragments":["tests","other","test","%100","same"]},{"Key":"tests to","Fragments":["pass.","get","pass","verify","the","Microsoft's","this,","verify","run","make","pass,"]},{"Key":"to pass.","Fragments":["How","Then","In","I"]},{"Key":"pass. How","Fragments":["do"]},{"Key":"How do","Fragments":["we","you","you","you","you","we","we","we"]},{"Key":"do we","Fragments":["know","find","exclude","provide"]},{"Key":"we know","Fragments":["it","that","that","there"]},{"Key":"know it","Fragments":["is","just","works,","works","is","is","requires","could","doesn't"]},{"Key":" Show","Fragments":["off"]},{"Key":"Show off","Fragments":["submitting"]},{"Key":"off submitting","Fragments":["a"]},{"Key":"submitting a","Fragments":["whole"]},{"Key":"app not","Fragments":["just"]},{"Key":"not just","Fragments":["a","the","return","return","using","a","the","fans","fans","use","an","\"1000000000\"?","something","use","check","do","the","return","return","return?","the","return?","run","for","c#/bcl's","c#/bcl's"]},{"Key":"a class","Fragments":[";)","file","file.","named","named","called","called","called","`Year`","called","variable","with","that","level","library.","called","that","variable","(or,","do","variable","to","(or","representing","being","wasnt"]},{"Key":" Will","Fragments":["you","leave"]},{"Key":"Will you","Fragments":["immediately"]},{"Key":"you immediately","Fragments":["understand"]},{"Key":"immediately understand","Fragments":["line"]},{"Key":"understand line","Fragments":["7"]},{"Key":"line 7","Fragments":["when"]},{"Key":"7 when","Fragments":["you"]},{"Key":"when you","Fragments":["come","read","say","come","construct","code","could","are","come","don't","don't","need","do","check","are","do","have","might","do","could","specifically","read","create","come","assign","can","call","call","detect","saw","knew","return","use","have","can.","test","are","are","don't","need","know","create","think","build","could","could","can","could","can","assign","can.","reset","don't","map","don't","do"]},{"Key":"you come","Fragments":["back","from","back","back","to","back","up","to"]},{"Key":"come back","Fragments":["to","to","later,","and","to","to","with"]},{"Key":"to this","Fragments":["code","one","task","one","code.","method,","calculating","class,","problem.","I","myself.","function","problem","extreme","problem","that","LINQ","code","but","exercises,","problem,"]},{"Key":"code (or","Fragments":["someone"]},{"Key":"(or someone","Fragments":["else","else)"]},{"Key":"someone else","Fragments":["tries","in","figure","on","pointed","use","what","to","doesn't","to","using"]},{"Key":"else tries","Fragments":["to"]},{"Key":"tries to","Fragments":["maintain","use"]},{"Key":"to maintain","Fragments":["it)?","your","the","the","your","your","Linq","and","all","due"]},{"Key":" perhaps","Fragments":["naming"]},{"Key":"perhaps naming","Fragments":["the"]},{"Key":"the steps","Fragments":["would"]},{"Key":"steps would","Fragments":["help"]},{"Key":"would help","Fragments":["clear","a","readability.","so","make","readability."]},{"Key":"help clear","Fragments":["up"]},{"Key":"clear up","Fragments":["what","your"]},{"Key":"up what","Fragments":["is"]},{"Key":"is going","Fragments":["on.","to","to","on.","to","on","to","to","to","to","on.","on.","to","to","a","to","to","to","to","on","to","through,","to"]},{"Key":"For the","Fragments":["purposes","\"Sure.\"","\"question\"","if","IsSilence","readability,","IsSilent","letters,","letters,","XOR,","sake","most","case","case","record","sake","same","exercise","words"]},{"Key":"the purposes","Fragments":["of"]},{"Key":"purposes of","Fragments":["this","enumeration,"]},{"Key":"of this","Fragments":["exercise,","(they'd","number?\"","exercise.","exercise","@keshaun","class,","http://help.exercism.io/getting-started-with-csharp.html.","port","in","problem","(or","as","to","code,","call.","code,","problem.","code.","object","website.","optimization.","test,","exercise","challenge","challenge","exercise","site","example","either,","pattern","style","\"!(year"]},{"Key":"this exercise,","Fragments":["this","but","I","just","this","I","i","I","per"]},{"Key":"exercise, this","Fragments":["is","is"]},{"Key":"is overcommented","Fragments":["and"]},{"Key":"overcommented and","Fragments":["more"]},{"Key":"and more","Fragments":["verbose","idiomatic","readable","to","readable.","readable.","indented.","efficient.","flexible.","efficient.","easily","readable.","or","readable","readable","readable.","efficient","readable","readable."]},{"Key":"verbose than","Fragments":["I","it","needed","it"]},{"Key":"than I","Fragments":["would","to","don't","did.","expected.","normally","have","intended"]},{"Key":"would do","Fragments":["in","the","something","something","this,","a","this:","as"]},{"Key":"do in","Fragments":["\"real","this"]},{"Key":"in \"real","Fragments":["life\"."]},{"Key":"I removed","Fragments":["the","the","the","the","it.","the","the","a","the","the","the"]},{"Key":"removed the","Fragments":[".ToCharArray()",".ToCharArray()","useless","dependency","extra","constructor.","superfluous","extra","IsUpper","theYear","need","namespace","nesting.","repeated","magic",".ToCharArray()",".ToCharArray()","unnecessary"]},{"Key":"the .ToCharArray()","Fragments":["in","in","in","in"]},{"Key":".ToCharArray() in","Fragments":["the","the","the","the"]},{"Key":"the foreach","Fragments":["loop.","loop.","statement.","bits","loop,","because","loop.","loops","loop","isn't","statement","loop","once","statement","loop.","in","loop","rather","loop.","loop.","enumerating","since","-","being","that"]},{"Key":" Rather","Fragments":["bad","than","than","than","than"]},{"Key":"Rather bad","Fragments":["practice"]},{"Key":"bad practice","Fragments":["to"]},{"Key":"practice to","Fragments":["have","get","limit","only","have","remove","use","phrase","just","let","use"]},{"Key":"have the","Fragments":["class","default","main","code","same","entire","test","logic","logic","tools","logic","ifs","corner","regex","compiled","methods","Dictionary","nagging","ability","values","same","last","constructor","files","correct","check","loop.","keys","local","work","year","value","'_startDate'","elements","method","```Contains```","parameter","same","string","following","luxury","if","instance","exact"]},{"Key":"class name","Fragments":["the","and","as"]},{"Key":"name the","Fragments":["same","steps?","method","method","variable"]},{"Key":"same as","Fragments":["the","my","```Dictionary\u003cstring,","my","the","the","now,","I","the","\u003cb\u003e[\\w]\u003c/b\u003e","\u003cb\u003estring.IsNullOrEmpty(input.Trim())\u003c/b\u003e.","my","you","\u003ccode\u003eword","\u003ccode\u003erandom.Next(x)\u003c/code\u003e","the","the"]},{"Key":"as the","Fragments":["variable.","where","branch","exercise","evaluations","branch","number","way","newly","if","compiler","if.","readme","negation","argument,","variable","this","tests","foreach.","```Int```","\"Exceptional\"","truth","if:","first","XML-documentation,","rules","method","test","key","primary","formula","extra","consensus","parameter","methodology","best","name","return","first","statement","Enumerable.Range(0,","statement","key","empty","prime","first","local","order","specs","preferred","value","Release-version","results","tests,","dictionary","string","List","list","test","calling","readme","method","code","foreach","regex","new","first","contained","conditional;","type","distance,"]},{"Key":"More standard","Fragments":["would"]},{"Key":"standard would","Fragments":["be"]},{"Key":"be to","Fragments":["have","combine","create","make","use","look","devide","mark","do","look","debug","have","create","do","leverage","use","have","do","generate","use","use","exit","use","rename","change","set"]},{"Key":"have (note","Fragments":["case!)"]},{"Key":" internal","Fragments":["static","static"]},{"Key":"internal static","Fragments":["bool","int"]},{"Key":"You know,","Fragments":["I"]},{"Key":"was only","Fragments":["messing","numbers","thinking"]},{"Key":"only messing","Fragments":["around"]},{"Key":"messing around","Fragments":["to"]},{"Key":"around to","Fragments":["see"]},{"Key":"see what","Fragments":["exercism.io","you","the","operation","happens.","I","types","you","occurs","we","others","your","others","people","they","others","works","you","others"]},{"Key":"what exercism.io","Fragments":["was"]},{"Key":"exercism.io was","Fragments":["all"]},{"Key":"was all","Fragments":["about.","numbers,"]},{"Key":"all about.","Fragments":["I"]},{"Key":"about. I","Fragments":["really"]},{"Key":"really didn't","Fragments":["take","need"]},{"Key":"didn't take","Fragments":["the"]},{"Key":"the exercise","Fragments":["seriously.","hints",":)","states","but","here.","and","of","download","was","re"]},{"Key":"exercise seriously.","Fragments":["But"]},{"Key":"seriously. But","Fragments":["after"]},{"Key":"But after","Fragments":["the"]},{"Key":"after the","Fragments":["feedback","\"if\"","other","fourCheck","if","if","smoke","||","statement","declaration","first","'else'","first","second","third","last","last","largest","required","last","fact.","sum","%"]},{"Key":"the feedback","Fragments":["I","and","the","though!","everyone!","Patel!","guys.","on","RussellKent.","guys.","on","though!","@bria,"]},{"Key":"feedback I","Fragments":["received"]},{"Key":"I received","Fragments":["from"]},{"Key":"received from","Fragments":["@tony,"]},{"Key":"from @tony,","Fragments":["I"]},{"Key":"@tony, I","Fragments":["think"]},{"Key":"think I'm","Fragments":["going","going","going","going"]},{"Key":"I'm going","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"to stick","Fragments":["around","with","with"]},{"Key":"stick around","Fragments":["and"]},{"Key":"around and","Fragments":["continue","came"]},{"Key":"and continue","Fragments":["to","="]},{"Key":"continue to","Fragments":["complete","submit","use","try"]},{"Key":"to complete","Fragments":["future","it.","-"]},{"Key":"complete future","Fragments":["exercises."]},{"Key":" seems","Fragments":["very"]},{"Key":"seems very","Fragments":["prone","practical"]},{"Key":"very prone","Fragments":["to","to"]},{"Key":"prone to","Fragments":["exception,","use","error","mistakes"]},{"Key":"to exception,","Fragments":["inputing"]},{"Key":"exception, inputing","Fragments":["anything"]},{"Key":"inputing anything","Fragments":["other"]},{"Key":"anything other","Fragments":["then","than"]},{"Key":"other then","Fragments":["year"]},{"Key":"then year","Fragments":["would"]},{"Key":"year would","Fragments":["crash"]},{"Key":"would crash","Fragments":["it","at","(so","if"]},{"Key":" try","Fragments":["using"]},{"Key":"try using","Fragments":["[TryParse](http://msdn.microsoft.com/en-us/library/f02979c7(v=vs.110).aspx)","methods","Math.Min(x.Length,","the"]},{"Key":"using [TryParse](http://msdn.microsoft.com/en-us/library/f02979c7(v=vs.110).aspx)","Fragments":["at"]},{"Key":"[TryParse](http://msdn.microsoft.com/en-us/library/f02979c7(v=vs.110).aspx) at","Fragments":["least"]},{"Key":" btw","Fragments":["I","I"]},{"Key":"btw I","Fragments":["don't","was"]},{"Key":"don't thin","Fragments":["we"]},{"Key":"thin we","Fragments":["were"]},{"Key":"we were","Fragments":["supposed","returning","to","not","not","not","not"]},{"Key":"were supposed","Fragments":["to","to"]},{"Key":"supposed to","Fragments":["write","be","do.","do...","be","be","code","be","write","create","compile","be","be","bring","comment","be","chain","tell","compile","use","use","use","use","use","use"]},{"Key":"write console","Fragments":["apps"]},{"Key":"console apps","Fragments":[":)"]},{"Key":"First some","Fragments":["very"]},{"Key":"some very","Fragments":["nitpicky"]},{"Key":"very nitpicky","Fragments":["things!"]},{"Key":"You have","Fragments":["the","a","pretty","redundant","an","already","good","a","a","eight","a","a","an","four","a","already","business","3","a","a"]},{"Key":"default 'using'","Fragments":["statements"]},{"Key":"'using' statements","Fragments":["at"]},{"Key":"statements at","Fragments":["the"]},{"Key":"the top.","Fragments":["None","You","I","It","There's"]},{"Key":"top. None","Fragments":["of"]},{"Key":"None of","Fragments":["the","the","pop,push,shift,unshift"]},{"Key":"code requires","Fragments":["them"]},{"Key":"requires them","Fragments":["so"]},{"Key":"them so","Fragments":["it"]},{"Key":"it could","Fragments":["all","be","be","benefit","be","be","be","potentially","be","be","be.","be","be","be","be","be.","be","be","have","confuse","have","be.","just","be.","count","be","do","be","be","happen.","be","help"]},{"Key":"could all","Fragments":["be"]},{"Key":"all be","Fragments":["removed.","removed.","grouped","done","put"]},{"Key":"The else","Fragments":["is"]},{"Key":"else is","Fragments":["redundant...","unnecessary","not","kinda"]},{"Key":"is redundant...","Fragments":["if"]},{"Key":"redundant... if","Fragments":["the"]},{"Key":"logic means","Fragments":["that"]},{"Key":"that \"return","Fragments":["true\""]},{"Key":"\"return true\"","Fragments":["will","instructions."]},{"Key":"true\" will","Fragments":["not"]},{"Key":"will not","Fragments":["be","pass","perform","do","add","be","pass","enter","cause"]},{"Key":"not be","Fragments":["called","able","able","dependent","\"yelling\"","a","sure...","a","modified","static,","best.","a","common.","necessary.","valid.","very","the","able","so","in","entirely","ignored.","as","needed","part","there.","sufficient.","public","a"]},{"Key":"be called","Fragments":["then","```USPhoneNumber```.","with","by","by","romanChars?","with","again","by","knowing","repeatedly,","by"]},{"Key":"called then","Fragments":["we","okay."]},{"Key":"we simply","Fragments":["should","disagree","take"]},{"Key":"simply should","Fragments":["return"]},{"Key":"should return","Fragments":["false.","\"Whatever.\"","\"decimal\"","\"\",","0,","whether"]},{"Key":"More seriously...","Fragments":["if"]},{"Key":"seriously... if","Fragments":["you"]},{"Key":"across the","Fragments":["blob","SelectMany"]},{"Key":"the blob","Fragments":["of"]},{"Key":"blob of","Fragments":["mod"]},{"Key":"of mod","Fragments":["code"]},{"Key":"mod code","Fragments":["in"]},{"Key":"a large","Fragments":["codebase","scale,","code,","performance","enough"]},{"Key":"large codebase","Fragments":["how"]},{"Key":"codebase how","Fragments":["long"]},{"Key":"how long","Fragments":["would","you"]},{"Key":"long would","Fragments":["it"]},{"Key":"would it","Fragments":["take","be","be","fit?","have","be","be","be","be","take","work?"]},{"Key":"it take","Fragments":["you","to","to"]},{"Key":"take you","Fragments":["to","more"]},{"Key":"to work","Fragments":["out","with","out","without","without","on","out","out","without","I'd",";)","without","for","on,","without","out","right.","with","well.","correctly.","on","well.","nicely"]},{"Key":"work out","Fragments":["what","what,","why","what","a","if"]},{"Key":"out what","Fragments":["was","I","you","was","that","made","the","was","is","the","I"]},{"Key":"what was","Fragments":["going","expected","going","there","going","said?","expected"]},{"Key":"was going","Fragments":["on?","for","to","on","for","to","for","on.","for","for"]},{"Key":"going on?","Fragments":["Breaking","How","How","How","Is"]},{"Key":"on? Breaking","Fragments":["out"]},{"Key":"Breaking out","Fragments":["each"]},{"Key":"out each","Fragments":["'step'","section"]},{"Key":"each 'step'","Fragments":["into"]},{"Key":"'step' into","Fragments":["a"]},{"Key":"a well","Fragments":["named"]},{"Key":"well named","Fragments":["private","variables","private","functions.","methods."]},{"Key":"named private","Fragments":["method","methods"]},{"Key":"method will","Fragments":["help","only","not","not","be","not","through"]},{"Key":"will help","Fragments":["future","them","readability"]},{"Key":"help future","Fragments":["code","maintainers"]},{"Key":"future code","Fragments":["maintainers."]},{"Key":" your","Fragments":["current"]},{"Key":"your current","Fragments":["code","code","project","method","implementation","value","digit.","architecture","prime","prime,","names,","code","implementation"]},{"Key":"current code","Fragments":["reads","to","will","generates"]},{"Key":"reads (in","Fragments":["short)"]},{"Key":"(in short)","Fragments":["\"If"]},{"Key":"short) \"If","Fragments":["(istrue)"]},{"Key":"\"If (istrue)","Fragments":["return"]},{"Key":"(istrue) return","Fragments":["true,"]},{"Key":"return true,","Fragments":["else","else","but"]},{"Key":"true, else","Fragments":["return","false.","false.","return"]},{"Key":"else return","Fragments":["false\".","false\".","false","false?","false;`)"]},{"Key":"return false\".","Fragments":["You"]},{"Key":"false\". You","Fragments":["could"]},{"Key":"could reduce","Fragments":["this","it","your"]},{"Key":"reduce this","Fragments":["to"]},{"Key":"this to","Fragments":["a","something","get","be","the","work.","my","check","avoid","simply","be","hopefully","hopefully","be","work-","compile.","mean","actually"]},{"Key":"simple return","Fragments":["statement"]},{"Key":"statement of","Fragments":["the"]},{"Key":"the form","Fragments":["\"return","`something","\"if","`Year.IsLeap(year)`.","of"]},{"Key":"form \"return","Fragments":["istrue\"."]},{"Key":" Does","Fragments":["that","this","anyone","\"Math.Pow(10,9)\"","this","this"]},{"Key":"Does that","Fragments":["make","sound","say"]},{"Key":" indeed","Fragments":["how"]},{"Key":"indeed how","Fragments":["did"]},{"Key":"how did","Fragments":["I","I","you"]},{"Key":"did I","Fragments":["missed","miss","could","miss","do"]},{"Key":"I missed","Fragments":["that","the","that","any","just","something?","the","this","the","those","a","anything"]},{"Key":"The straightforward","Fragments":["thing"]},{"Key":"straightforward thing","Fragments":["for","I"]},{"Key":"thing for","Fragments":["clarity","`Sum`is"]},{"Key":"for clarity","Fragments":["seemed","purposes.","and"]},{"Key":"clarity seemed","Fragments":["to"]},{"Key":"seemed to","Fragments":["simply","be","be","reduce","be","work"]},{"Key":"to simply","Fragments":["test","test","remove","add","your","the","the"]},{"Key":"simply test","Fragments":["for","if","for"]},{"Key":"test for","Fragments":["the","question","your","isquestion","that","\"even","that","different","less","uniqueness","3","uniqueness,","Not","most","it","this","in","this","a","them","it?","encoding","performance","year","this"]},{"Key":"mod values.","Fragments":["I"]},{"Key":"values. I","Fragments":["feel","was","feel"]},{"Key":"like I","Fragments":["could","said,","should","should","had","have","created","said","have","traded","should","should","might","bungled","said","did"]},{"Key":"I know!","Fragments":["I"]},{"Key":"know! I","Fragments":["can't"]},{"Key":"I can't","Fragments":["think","spot","really","believe","figure","figure","figure","just","really","count","speak","speak","figure","tell","decide.","say","see","believe","believe","get","believe","install","figure","get","imagine","get","post","think","figure","decide"]},{"Key":"can't think","Fragments":["of","of","of"]},{"Key":"a way","Fragments":["to","on","to","that","to","to","to","to","to","to","you","to","to","to","you","more","to","to","to","to","to","so","to","to","to","you","that","to","for","to","for"]},{"Key":"to avoid","Fragments":["two","meaningless","multiple","multiple","accidental","returns","having","this","that?","going","using","using","\"spaghetti","multiple","multiple","odd","errors.","calling","a","them","that","that","calling","all","declaring","multiple","an","the","collisions.","having","pre-optimizing","nesting","creating","collisions.","recalculating","using","generics.","the","it","all","that,","multiple","using","the","its","that","reflection","using"]},{"Key":"avoid two","Fragments":["checks"]},{"Key":"two checks","Fragments":["without"]},{"Key":"checks without","Fragments":["a"]},{"Key":"without a","Fragments":["more","good","lookup"]},{"Key":"a more","Fragments":["complex","expressive","efficient","efficient","readable","efficient","smart","real-life","general","controlled","simple","controlled","efficient","efficient","descriptive","elegant","efficient","compact","compact","appropriate","complex","thought","straightforward","meaningful","meaningful","efficient","careful","simple","complex","functional"]},{"Key":"more complex","Fragments":["first","operations","it","and","(validation,","could","data","program."]},{"Key":"complex first","Fragments":["check."]},{"Key":"first check.","Fragments":["Thinking...","This","In"]},{"Key":" Wow","Fragments":["thats","your","-","thanks","loong,","well"]},{"Key":"Wow thats","Fragments":["really"]},{"Key":"thats really","Fragments":["smart.."]},{"Key":"really smart..","Fragments":["just"]},{"Key":"smart.. just","Fragments":["resorting"]},{"Key":"just resorting","Fragments":["the"]},{"Key":"resorting the","Fragments":["chars"]},{"Key":"the chars","Fragments":["in","to"]},{"Key":"chars in","Fragments":["order","word.ToLower()","linq"]},{"Key":"in order","Fragments":["and","to","to","to","to","to","to","to","whereas","to","to","to","to","to"]},{"Key":"order and","Fragments":["checking","even","the","your","this","apparently"]},{"Key":"and checking","Fragments":["if","if","if","if","because"]},{"Key":"if they","Fragments":["match..","are","are","are","know","are","are","were","are","contain","are","later","are","are","are","are","are","are","caller","are","had","can","don't","didn't"]},{"Key":"they match..","Fragments":["genius"]},{"Key":"match.. genius","Fragments":[":D"]},{"Key":"the tip.","Fragments":["Updated"]},{"Key":"tip. Updated","Fragments":["my"]},{"Key":"Updated my","Fragments":["answer"]},{"Key":"my answer","Fragments":[":)","to"]},{"Key":"Good you","Fragments":["noted"]},{"Key":"you noted","Fragments":["how"]},{"Key":"noted how","Fragments":["to"]},{"Key":"use linq","Fragments":["to","to","where","for"]},{"Key":"to sort","Fragments":["the","the","them","the","the","if","that","out"]},{"Key":"sort the","Fragments":["sort","list","string","characters","characters,","grade","return","anagramList","```char[]```","Match"]},{"Key":"the sort","Fragments":["columns","algorithm,","algorithm","algorithm","until","on","form"]},{"Key":"sort columns","Fragments":["in"]},{"Key":"columns in","Fragments":["your"]},{"Key":"return (you","Fragments":["and"]},{"Key":"(you and","Fragments":["me"]},{"Key":"and me","Fragments":["only"]},{"Key":"me only","Fragments":["so","have"]},{"Key":"only so","Fragments":["far),","it"]},{"Key":"so far),","Fragments":["but,"]},{"Key":"far), but,","Fragments":["given"]},{"Key":"but, given","Fragments":["that,"]},{"Key":"given that,","Fragments":["surely"]},{"Key":"that, surely","Fragments":["you"]},{"Key":"surely you","Fragments":["can"]},{"Key":"can linq","Fragments":["most"]},{"Key":"linq most","Fragments":["of"]},{"Key":"most of","Fragments":["the","my","the","the","them","my","any","the","this"]},{"Key":"the rest","Fragments":["of","of","of","(which","to","and","of","-","in","of","of","of","shares","you","before","of"]},{"Key":"rest of","Fragments":["your","the","the","the","this","the","the","the","the"]},{"Key":"your Linq","Fragments":["in","and","statement","Select"]},{"Key":"in WordCount","Fragments":["but"]},{"Key":"WordCount but","Fragments":["I"]},{"Key":"get rid","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"rid of","Fragments":["the","count","the","the","the","the","an","the","my","you","the","the","the","the","the","lookup,","a","more","three","the","all","the","any","all","the","the","else","the","the","GetNextPrimeFactor","it?","that","Char.GetNumericValue(c)","the","a","the","the","that","the","the","the","some"]},{"Key":"the ToList/Foreach,","Fragments":["if"]},{"Key":"ToList/Foreach, if","Fragments":["not"]},{"Key":"if not","Fragments":["better","the","obiding","round","equal.","gregorian","tested","and","all"]},{"Key":"not better","Fragments":["to"]},{"Key":"this with","Fragments":["a","standard","pretty","out","a","Linq,","much"]},{"Key":"a normal","Fragments":["foreach(","leap","year","method"]},{"Key":"normal foreach(","Fragments":["approach"]},{"Key":" Got","Fragments":["rid","it","some","rid"]},{"Key":"Got rid","Fragments":["of","of"]},{"Key":"of count","Fragments":["and"]},{"Key":"count and","Fragments":["_last,","i.","it"]},{"Key":"and _last,","Fragments":["now"]},{"Key":"_last, now","Fragments":["fully"]},{"Key":"now fully","Fragments":["circular"]},{"Key":"fully circular","Fragments":["list"]},{"Key":"I almost","Fragments":["like","used","always"]},{"Key":"almost like","Fragments":["this","I","you're"]},{"Key":"this better","Fragments":["than","than"]},{"Key":"better than","Fragments":["mine.","uppercasing","the","IsDivisibleByX(year).","if()","year%4==0","the","the","my","using","comments.","a","brute","lazy","nothing.","using","bad","the","having","adding","using","my","any","..","3)","an","try/catch"]},{"Key":"than mine.","Fragments":["The","Looks"]},{"Key":"mine. The","Fragments":["only"]},{"Key":"only odd","Fragments":["thing"]},{"Key":"odd thing","Fragments":["will"]},{"Key":"thing will","Fragments":["be"]},{"Key":"be that","Fragments":["if","the","is","negating","comparison","there","way\"","the"]},{"Key":"first check","Fragments":["is","really","is","if","(to","will"]},{"Key":"check is","Fragments":["false,","more","order","functionally","unnecessary,","very","done"]},{"Key":"is false,","Fragments":["you","which","then","y","throw"]},{"Key":"false, you","Fragments":["will"]},{"Key":"you will","Fragments":["still","come","see","see","get","be","have","have","have","be","see","need","be","try","return","throw","avoid","see","get","get","get","get","get","not","want"]},{"Key":"will still","Fragments":["be","check","use","work","start","not","have","have"]},{"Key":"still be","Fragments":["making","the","as","computed","able","streamlined.","appreciated.","externally","made"]},{"Key":"be making","Fragments":["that","those"]},{"Key":"making that","Fragments":["second","same","call"]},{"Key":"that second","Fragments":["if","check","Dictionary"]},{"Key":"second if","Fragments":["check.","is","statement"]},{"Key":" @omari","Fragments":["Thanks."]},{"Key":"@omari Thanks.","Fragments":["Missed"]},{"Key":"Thanks. Missed","Fragments":["the"]},{"Key":"Missed the","Fragments":["region"]},{"Key":"the region","Fragments":["rename,"]},{"Key":"region rename,","Fragments":["and"]},{"Key":"rename, and","Fragments":["good"]},{"Key":"and good","Fragments":["call"]},{"Key":"good call","Fragments":["on","on"]},{"Key":"call on","Fragments":["the","these.","using","the","`FindDayInWeek`.","each","the"]},{"Key":"the modulus","Fragments":["checking.","operator,","operators","operator,","operator,","operator","expressions","operator.","operation","operator","(%)","operator","not"]},{"Key":" Thanks,","Fragments":["very","I","I","thomaseyde.","SamKablam!","Foof.","yeah","I","delve.","really","@ned","I"]},{"Key":"Thanks, very","Fragments":["useful"]},{"Key":"very useful","Fragments":[":)",":P","quick"]},{"Key":" Surely","Fragments":["the","NucleotideCount","there's"]},{"Key":"Surely the","Fragments":["readme"]},{"Key":"the readme","Fragments":["implies","into","and","files?","says","when","it","about","properly","stating","but","shows","about","showed","showed","used","is","and","does,"]},{"Key":"readme implies","Fragments":["not"]},{"Key":"implies not","Fragments":["using"]},{"Key":"not using","Fragments":["foreach","it),","DateTime.IsLeapYear()","Reverse()?","just","a","the","pronouns","either,"]},{"Key":"think throwing","Fragments":["an"]},{"Key":"throwing an","Fragments":["exception","exception","exception","exception","error."]},{"Key":"an exception","Fragments":["is","looks","when","when","for","if","or","either","or","can","if","for","for","is","if","if","if","but","when","at","needs","on","for","even","if","the","on","if","because","in","then","if","then","if","thrown,","when","if","to","thrown"]},{"Key":"exception is","Fragments":["a","not","thrown","thrown.","not"]},{"Key":"a reasonable","Fragments":["response","grasp","requirement."]},{"Key":"reasonable response","Fragments":["to"]},{"Key":"response to","Fragments":["bad","inside","an","\"Sure.\"]"]},{"Key":"to bad","Fragments":["input."]},{"Key":"bad input.","Fragments":["I"]},{"Key":"input. I","Fragments":["wasn't","originally","didn't","was"]},{"Key":"I wasn't","Fragments":["exactly","thinking","sure","even","sure","sure","using","sure","looking","really","exactly","profiling","sure","aware","really","exactly","really","going","sure","able"]},{"Key":"wasn't exactly","Fragments":["clear","sure","sure"]},{"Key":"exactly clear","Fragments":["on"]},{"Key":"requirements for","Fragments":["the","this"]},{"Key":"the program,","Fragments":["so","so"]},{"Key":"program, so","Fragments":["I","I"]},{"Key":"also submitted","Fragments":["a"]},{"Key":"submitted a","Fragments":["console","new","new","PR.","second"]},{"Key":"console application.","Fragments":["But"]},{"Key":"application. But","Fragments":["mine"]},{"Key":"But mine","Fragments":["also"]},{"Key":"mine also","Fragments":["passes"]},{"Key":"also passes","Fragments":["the"]},{"Key":"the unit","Fragments":["tests.","testing.","tests.","test","test","tests.","tests,","tests.","tests","tests.","tests","tests","tests,","tests,","tests","test","tests,","tests","tests","test","test","tests,","tests","test","tests?","tests","test"]},{"Key":" Unless","Fragments":["I'm","there's"]},{"Key":"Unless I'm","Fragments":["mistaken,"]},{"Key":"I'm mistaken,","Fragments":["I"]},{"Key":"mistaken, I","Fragments":["don't"]},{"Key":"code works.","Fragments":["Given","Good","Good"]},{"Key":"works. Given","Fragments":["an"]},{"Key":"Given an","Fragments":["input"]},{"Key":"an input","Fragments":["of","with","statement"]},{"Key":"input of","Fragments":["1996,"]},{"Key":"of 1996,","Fragments":["it"]},{"Key":"1996, it","Fragments":["would"]},{"Key":"it would","Fragments":["output","mean","be","be","also","be","have","look","also","be","not","be","be","be","compile","help","be","have","be","be","it","be","probably","tell","have","read","be","be","be","work.","save","clean","crash","be","have","be","be","be","fail.","be","be","depend","depend","crash","help","be","make","actually","be","be","be","save","not","be","make","probably","be","be","only","redo","be","likely","work","really","take","be","start","best","be","be","probably","probably","be","be","be","halve","be","be","be","matter","be","be","save","be","probably","be","crash","make","mean","be","go","be","result","work","be","account","have","then","also","compile,","pass","be"]},{"Key":"would output","Fragments":["\"1996"]},{"Key":"output \"1996","Fragments":["is"]},{"Key":"\"1996 is","Fragments":["not"]},{"Key":"leap year...\"","Fragments":["on"]},{"Key":"year...\" on","Fragments":["line"]},{"Key":"on line","Fragments":["30.","14.","44","8","24","18.","12.","16/17.","24?","21","23?","7,","15","12.","11.","28","55","20","25","25","15","32","30?","11","13"]},{"Key":"line 30.","Fragments":["That"]},{"Key":"30. That","Fragments":["seems"]},{"Key":"That seems","Fragments":["to","redundant,","like"]},{"Key":"with aidanw,","Fragments":["try","as"]},{"Key":"aidanw, try","Fragments":["to"]},{"Key":"avoid meaningless","Fragments":["variable"]},{"Key":"meaningless variable","Fragments":["names."]},{"Key":"I disagree","Fragments":["with","with","on","that"]},{"Key":"disagree with","Fragments":["aidanw,","the","the","@olga-FredrikE","the","me"]},{"Key":"aidanw, as","Fragments":["the"]},{"Key":"the where","Fragments":["clause","clause.","clause","clause","condition,","clause,"]},{"Key":"where clause","Fragments":["is","only","and","and"]},{"Key":"clause is","Fragments":["needed","superfluous","not"]},{"Key":"is needed","Fragments":["so","in","and","because"]},{"Key":"needed so","Fragments":["you"]},{"Key":"don't get","Fragments":["a","why","that","the","despondent","what","any"]},{"Key":"get a","Fragments":["ArgumentException","little","`Possible","different","specific","very","bit","standard","bit","bit","little","bit","KeyNotFoundException","KeyNotFoundException","KeyNotFoundException","new","version","value","dictionary","compiler","```0```"]},{"Key":"a ArgumentException","Fragments":["on"]},{"Key":"ArgumentException on","Fragments":["the","the"]},{"Key":"the duplicate","Fragments":["key."]},{"Key":"this -","Fragments":["it's","add","there","where"]},{"Key":"- it's","Fragments":["not"]},{"Key":"not something","Fragments":["I"]},{"Key":"something I","Fragments":["would","would","realize","deal","could","hope!"]},{"Key":"have thought","Fragments":["of.","of","through","to","of"]},{"Key":"I suspect","Fragments":["you'd","in","it","that","it","you","there","it's"]},{"Key":"suspect you'd","Fragments":["agree"]},{"Key":"you'd agree","Fragments":["that"]},{"Key":"agree that","Fragments":["in","extension","extension","the","would","better","the","too","the","you","If","the","for","the","it's","the","String.Concat"]},{"Key":"that in","Fragments":["production","the","these","stead","the","that","a","this","mind","mine)","there","my","rather","my","theory","the","my","other","your","mind","a","the","some","mind.","the","the","the","the","a"]},{"Key":"in production","Fragments":["code","code.","code","code","code","code)?","code"]},{"Key":"production code","Fragments":["you","I","itself","I","you","for","and"]},{"Key":"code you","Fragments":["would","wrote","posted","forgot","would","want","are"]},{"Key":"would want","Fragments":["to","to","to","to","to","to","to"]},{"Key":"use DateTime.IsLeapYear","Fragments":["primarily"]},{"Key":"DateTime.IsLeapYear primarily","Fragments":["and"]},{"Key":"primarily and","Fragments":["if"]},{"Key":"was not","Fragments":["available","enough","putting","using","a","asked","the","aware","a","just","a","zero","in","prime","happy","enough,","going","to"]},{"Key":"not available","Fragments":["then"]},{"Key":"available then","Fragments":["the"]},{"Key":"then the","Fragments":["method","100's","code","other","others","calculations","code","return","calculation","enumeration","if","meaning","tests","factory","first","Compare","compiler"]},{"Key":"method you've","Fragments":["submitted."]},{"Key":"the full","Fragments":["benefit","expression","dataset","type","input"]},{"Key":"full benefit","Fragments":["from"]},{"Key":"benefit from","Fragments":["this","using","what","short","short"]},{"Key":"from this","Fragments":["exercise","that","submission.","site."]},{"Key":"this exercise","Fragments":["though,","and","you","was","5","most","when","I","on","preclude","proves","by","is","from","was","I","your","implies","given","is","given","given","given","with","is","is","is","otherwise.","it"]},{"Key":"exercise though,","Fragments":["it"]},{"Key":"though, it","Fragments":["might","is"]},{"Key":"it might","Fragments":["be","be","be).","be","fail.","not","be","be","be","be","be","be","have","be","have"]},{"Key":"good idea","Fragments":["to","be","from","to","as","to","to"]},{"Key":"to attempt","Fragments":["to","to","to","natural"]},{"Key":"attempt to","Fragments":["calculate","find","access","distill","find","get","clean"]},{"Key":"value directly,","Fragments":["because"]},{"Key":"directly, because","Fragments":["unfortunately"]},{"Key":"because unfortunately","Fragments":["otherwise"]},{"Key":"unfortunately otherwise","Fragments":["there's"]},{"Key":"otherwise there's","Fragments":["not"]},{"Key":"there's not","Fragments":["a","really"]},{"Key":"whole lot","Fragments":["of","in"]},{"Key":"code to","Fragments":["nitpick","both","be","know","pass","get","get","reduce","eliminate","GetPhraseType","break","see","reflect","pass","prevent","work","include","me.","read,","pass","pass","be","save","handle","fail","handle","me.","use","avoid","get","test","\u003ccode\u003eif","eliminate","remove","be","expand","use","filter","use","reduce","both","examine.","do","be"]},{"Key":"to nitpick","Fragments":["and","about","about","in"]},{"Key":"nitpick and","Fragments":["learn"]},{"Key":"and learn","Fragments":["from.","a"]},{"Key":"Not sure","Fragments":["how","if","how","if","if","if","if","if","that","how","what","what","really","what","about","I","if","which"]},{"Key":"to rewrite","Fragments":["this","it.","it"]},{"Key":"rewrite this","Fragments":["as","and"]},{"Key":"this as","Fragments":["a","simple","shouted.","an","it's","the","an","a","soon"]},{"Key":"a single","Fragments":["LINQ","line","`return`","one.)","tab","method","line.","`if`","line:","function","if","line","place","candidate.","modulus,","if.","line.","line.","line","parametrized","line,","step","exit","line","end","string.","return","return","combined","call","line.","return","return.","class","math","entry","line.","boolean","letter","(pretty)","\u003cb\u003eIsValidCharacter()\u003c/b\u003e","line","static","pass","pass","\u003cb\u003eSelect\u003c/b\u003e","line","function","check","statement","return","function","return","pass","line","ms","'I'","line,","boolean","boolean","boolean","function,","function","run.","return","boolean","Regex.replace.","boolean","method.","method.","line","line,","method()","method)","pass.","line.","constructor","purpose,","Linq","pass.","call","letter."]},{"Key":"single LINQ","Fragments":["expression,"]},{"Key":"LINQ expression,","Fragments":["any","but"]},{"Key":"expression, any","Fragments":["ideas?"]},{"Key":"I'm aware","Fragments":["of","it's"]},{"Key":"aware of","Fragments":["the","an","the","this."]},{"Key":"else being","Fragments":["redundant"]},{"Key":"being redundant","Fragments":["but"]},{"Key":"redundant but","Fragments":["isn't"]},{"Key":"but isn't","Fragments":["it","stored,","particularily"]},{"Key":"isn't it","Fragments":["still"]},{"Key":"it still","Fragments":["better","be","has"]},{"Key":"still better","Fragments":["to"]},{"Key":"it anyway?","Fragments":["or"]},{"Key":"anyway? or","Fragments":["am"]},{"Key":"or am","Fragments":["I","I"]},{"Key":"am I","Fragments":["being","again","missing?","looking","doing","to"]},{"Key":"I being","Fragments":["paranoid/stupid"]},{"Key":"being paranoid/stupid","Fragments":["?"]},{"Key":" yeah","Fragments":["I"]},{"Key":"yeah I","Fragments":["really"]},{"Key":"really liked","Fragments":["your","the","the"]},{"Key":"liked your","Fragments":["submission","linq"]},{"Key":"your submission","Fragments":["with"]},{"Key":"submission with","Fragments":["the"]},{"Key":"was definitely","Fragments":["better"]},{"Key":"definitely better","Fragments":[":)"]},{"Key":" again","Fragments":["I"]},{"Key":"again I","Fragments":["see"]},{"Key":"you mean","Fragments":["but","move","re","by","something","splitting","a"]},{"Key":"mean but","Fragments":["I"]},{"Key":"I generally","Fragments":["prefer","don't","forget","agree","try","don't","like"]},{"Key":"generally prefer","Fragments":["to"]},{"Key":"prefer to","Fragments":["return","see","leave","use","always","always","break","see","be","have","get","use","always","use","save","stick"]},{"Key":"return simple","Fragments":["value/variable"]},{"Key":"simple value/variable","Fragments":["instead"]},{"Key":"value/variable instead","Fragments":["of"]},{"Key":"instead of","Fragments":["expression","in","this:","a","breaking","only","creating","IsNot","at","declaring","`message.All(Char.IsWhiteSpace)","`message.Substring(message.Length","rebuilding","just","\"Woah,","a","a","using","\"y\".","you","having","implementing","using","any","requiring","Linq","!(","being","KeyValuePair","the","string[]","readability.","the","KeyValuePair","working","regex","Trim\u0026Length","building","double?","the","the","an","a","rolling","a","double","nesting","trying","implementing","Dictionary?","just","the","return","```String```","using","one.","4","List\u003cstring\u003e","an","foreach","using","**Boolean**.","making","a","a","manually","```string.IsNullOrEmpty```","simply","a","having","that","Substring-ing","\u003ccode\u003eif","something","year.cs).","object.","doing","1,","a","NUnit.","a","an","just","1.","seeing","creating","a","using","adding","any","a","just","\u003cb\u003eValue/Text\u003c/b\u003e.","throwing","having","\u003cb\u003eArray.Sort()\u003c/b\u003e","the","\"1000000000\"","eight.","Roster[grade].","1","\u003ccode\u003eWhere(char.IsLetter)\u003c/code\u003e.","an","a","\u003ccode\u003e(int)(c","just","a","an","0.2408467","\u003ccode\u003ereturn","\u003ccode\u003e1000000000\u003c/code\u003e","starting","`[a-z]`","null","if-statement.","by","ForEach()","doing","using","rolling","int","validating","storing","\u003ccode\u003e10000000000\u003c/code\u003e.","the","adding","creating","checking","Add","creating","strings","`Dictionary\u003cstring,","the","easily","an","the","an","filling","\u003ccode\u003eint.Parse(@jamison.ToString())\u003c/code\u003e.","\u003ccode\u003eif","previous","returning","declaring","using","using","a","chopping","references","hard","the","the","a","necleotideCounts[character]++;","\"YES\"","i","the","with","implementation.","the","three.","an","the","traversing","using","the","Concat(),","StartsWith()/EndsWith()","List,","accessing","using","`bool[]`.","if-clauses","this"]},{"Key":"of expression","Fragments":["directly,"]},{"Key":"expression directly,","Fragments":["am","eliminating"]},{"Key":"directly, am","Fragments":["I"]},{"Key":"I again","Fragments":["being","found"]},{"Key":"again being","Fragments":["silly?"]},{"Key":" Roster","Fragments":["can","is","is","Values","is"]},{"Key":"Roster can","Fragments":["be"]},{"Key":"be updated","Fragments":["outside","by"]},{"Key":"updated outside","Fragments":["this"]},{"Key":"outside this","Fragments":["class","class"]},{"Key":"Good catch","Fragments":["on","on"]},{"Key":"catch on","Fragments":["the","the","the"]},{"Key":"extra loop","Fragments":["will"]},{"Key":"loop will","Fragments":["try","do"]},{"Key":"will try","Fragments":["another","to","to","to"]},{"Key":"try another","Fragments":["iteration"]},{"Key":"think there","Fragments":["is","is","are","may","is","are","are","is","are","is","is"]},{"Key":"a better","Fragments":["name","performance","interface.","reading","solution.","solution","way","variable","way","name.","way","way.","way","solution","option?","solution","memory","sequence","way","way","algorithm","name","way.","algorithm","way","solution","tutorial","approach","way,","way","way","way","shape","way","solution","way","solution.","alternative.","way","separation"]},{"Key":"better name","Fragments":["than","than"]},{"Key":"name than","Fragments":["`isDivisible`","\"s\".","'d'","'d'?","\"multiples\""]},{"Key":"than `isDivisible`","Fragments":["for"]},{"Key":"`isDivisible` for","Fragments":["the"]},{"Key":"the assignment","Fragments":["on","personally","to"]},{"Key":"assignment on","Fragments":["line"]},{"Key":"line 14.","Fragments":["In"]},{"Key":"14. In","Fragments":["fact,"]},{"Key":"In fact,","Fragments":["the","this"]},{"Key":"fact, the","Fragments":["expression"]},{"Key":"the expression","Fragments":["includes","`something","in","is","to","itself","starting","to","it","from","apart","speak","directly,","without","you","evaluates","would"]},{"Key":"expression includes","Fragments":["an"]},{"Key":"includes an","Fragments":["explicit"]},{"Key":"an explicit","Fragments":["check","array","type"]},{"Key":"explicit check","Fragments":["for","and"]},{"Key":"check for","Fragments":["*non*","divisible","\"-999\"?","the","uppercase","an","modulo","the","divisible","it","equality.","\"question\"","\"yell\".","bad","that","the","shouting,","*silence*.","if","a","upper","to","the","\"?\"","numbers","the","more","t1.Equals(t2)","ones","int,","the","empty.","the","a","'","it,","\"?\"","duplicates.","yelling","the","the","a","isSilence","isNullOrWhiteSpace?","word","existence","sentences","2,","invalid","appropriate","invalid","invalid","a","not","this","IsNullOrEmpty","each","uneven","strings","null","negative","the","valid","word","unequal","valid","each","the","if","less","order","null,"]},{"Key":"for *non*","Fragments":["divisibility."]},{"Key":"*non* divisibility.","Fragments":["(of"]},{"Key":"divisibility. (of","Fragments":["100)"]},{"Key":"(of 100)","Fragments":["Perhaps"]},{"Key":"100) Perhaps","Fragments":["a"]},{"Key":"Perhaps a","Fragments":["variable"]},{"Key":"a variable","Fragments":["called","name","`hey`","and","or","name.","and","instead","to","only","for","and","and","as","name","name","set","during","to","named","'predicate'","you","that's","to","and","starting"]},{"Key":"variable called","Fragments":["`isLeapYear`"]},{"Key":"called `isLeapYear`","Fragments":["would"]},{"Key":"`isLeapYear` would","Fragments":["be"]},{"Key":" foreach(KeyValuePair\u003cint,","Fragments":["IList\u003cstring\u003e\u003e"]},{"Key":"foreach(KeyValuePair\u003cint, IList\u003cstring\u003e\u003e","Fragments":["kvp"]},{"Key":"IList\u003cstring\u003e\u003e kvp","Fragments":["in"]},{"Key":"kvp in","Fragments":["old)","old)","letterScores"]},{"Key":" the","Fragments":["key","first","fact","result","loop"]},{"Key":"the key","Fragments":["value","value","later.","of","to","from","in","more","and","value","had","is","and","exists","values","insight","to"]},{"Key":"key value","Fragments":["pair","pairs","for"]},{"Key":"value pair","Fragments":["is"]},{"Key":"pair is","Fragments":["the"]},{"Key":"the object","Fragments":["in","automatically.","and"]},{"Key":"object in","Fragments":["the"]},{"Key":"the \"old\"","Fragments":["dictionary"]},{"Key":"\"old\" dictionary","Fragments":["object."]},{"Key":" you","Fragments":["can","use","can","should","should","could","could","could","can","don't","don't","can","could","can","dont"]},{"Key":"can replace","Fragments":["with","your","\u003ccode\u003eMath.Pow(10,","this","the","\u003cb\u003eAll(char.IsUpper)\u003c/b\u003e","number.Substring(1,10)","Number.Substring(6,4)","that","\u003ccode\u003eMath.Pow(10.0,","\u003ccode\u003e500000000\u003c/code\u003e","\u003ccode\u003e1000000000\u003c/code\u003e","the","the"]},{"Key":" foreach(var","Fragments":["kvp","value","item"]},{"Key":"foreach(var kvp","Fragments":["in"]},{"Key":" Oh,","Fragments":["ok.","no","cool,","now","and","good","I","forgot"]},{"Key":"Oh, ok.","Fragments":["Thanks!"]},{"Key":" Didn't","Fragments":["know","like","know","know","know","realise","realise"]},{"Key":"Didn't know","Fragments":["it","that.","you","that,","that"]},{"Key":"just wanted","Fragments":["the","to","to","the","to","a","to","to","to"]},{"Key":"wanted the","Fragments":["basic","program","container"]},{"Key":"nitpick, just","Fragments":["more"]},{"Key":"just more","Fragments":["of","explicit"]},{"Key":"an FYI.","Fragments":["If"]},{"Key":"FYI. If","Fragments":["you"]},{"Key":"class static,","Fragments":["you","since","as"]},{"Key":"static, you","Fragments":["can"]},{"Key":"can include","Fragments":["```IsDivisibleBy```"]},{"Key":"include ```IsDivisibleBy```","Fragments":["into"]},{"Key":"```IsDivisibleBy``` into","Fragments":["```Year```"]},{"Key":"into ```Year```","Fragments":["and"]},{"Key":"```Year``` and","Fragments":["make"]},{"Key":"and make","Fragments":["it","sure","it","```Compute```","your","it","things","it","it","the","it","some","sure","the","it","the","your","it"]},{"Key":"it private.","Fragments":["This"]},{"Key":"private. This","Fragments":["eliminates"]},{"Key":"This eliminates","Fragments":["the"]},{"Key":"eliminates the","Fragments":["need","need"]},{"Key":"the need","Fragments":["for","for","to","for","for","to","to","to","for","for","for","to","to","for","for","for"]},{"Key":"need for","Fragments":["the","the","the","3","my","further","one.","this","another","the","an","the","\u003cb\u003ep1!=p2\u003c/b\u003e","DNA","that","loops.","doubles","string","string","manual","a","indexing,","an","StringBuilder","the"]},{"Key":"the ```Extensions```","Fragments":["class"]},{"Key":"```Extensions``` class","Fragments":["with"]},{"Key":"same result.","Fragments":["That"]},{"Key":"result. That","Fragments":["said,"]},{"Key":"said, it's","Fragments":["more","a","kinda"]},{"Key":"it's more","Fragments":["of","general","readable","readable,","readable","straightforward"]},{"Key":"Looks good","Fragments":["so","so","so","(to","so","so","otherwise!","otherwise","overall,","otherwise.","otherwise.","otherwise.","to","to","so"]},{"Key":"far, couple","Fragments":["minor"]},{"Key":"couple minor","Fragments":["things."]},{"Key":"1. For","Fragments":["the","the"]},{"Key":"the \"Sure.\"","Fragments":["statement,"]},{"Key":"\"Sure.\" statement,","Fragments":["the"]},{"Key":"statement, the","Fragments":["```TrimEnd```","else"]},{"Key":"the ```TrimEnd```","Fragments":["isn't"]},{"Key":"```TrimEnd``` isn't","Fragments":["needed"]},{"Key":"isn't needed","Fragments":["(to","for","(SequenceEqual"]},{"Key":"needed (to","Fragments":["pass"]},{"Key":"(to pass","Fragments":["the"]},{"Key":"2. The","Fragments":["```Hey```","```Database```","```Regex```","```Distinct()```","question","boolean","spec","```==```"]},{"Key":"The ```Hey```","Fragments":["method"]},{"Key":"```Hey``` method","Fragments":["is"]},{"Key":"is well-documented","Fragments":["but"]},{"Key":"well-documented but","Fragments":["can"]},{"Key":"but can","Fragments":["you","be","become","be"]},{"Key":"you change","Fragments":["the","having","this:","the","to","the","it","IsValid","the","'kind'","the","'i'"]},{"Key":"code such","Fragments":["that"]},{"Key":"such that","Fragments":["it's","it","this","no"]},{"Key":"it's self-documented","Fragments":["enough"]},{"Key":"self-documented enough","Fragments":["to"]},{"Key":"to eliminate","Fragments":["the","any","more","the","the","the","special","multiples","duplicates"]},{"Key":" @angus","Fragments":["The"]},{"Key":"@angus The","Fragments":["only"]},{"Key":"only way","Fragments":["you","I","I","I","it","I","to","for","left","I"]},{"Key":"can really","Fragments":["do","hurt"]},{"Key":"really do","Fragments":["it"]},{"Key":"probably the","Fragments":["way","only","short-circuiting","fastest","ones"]},{"Key":"did it","Fragments":["and","needs","correctly.","manually","very","two","take","correctly","my","again,","originally."]},{"Key":"and have","Fragments":["it","a","less","to","a","fun!","found","confidence","only","also","never","`IsEqualToZero(value","the","no","it","that","two","no"]},{"Key":"have it","Fragments":["all","as","marked","print","all","now.","do","return","like","like","here"]},{"Key":"it all","Fragments":["on","on","instead","the","in","on","boils","in","very","buttoned","again","down","down","in","on","in","the","in"]},{"Key":"all on","Fragments":["one","one","one","one","a","one","one","one","the","one","one"]},{"Key":"on one","Fragments":["line","line","line.","line.","line","line.","line.","line,","line,","line","line:","line","line,","line.","line","line","line","line."]},{"Key":"line and","Fragments":["return","have","break","break","phrase","just","return","more","then"]},{"Key":" Couple","Fragments":["things:","of"]},{"Key":"The ```Main```","Fragments":["method"]},{"Key":"```Main``` method","Fragments":["is"]},{"Key":"is unnecessary","Fragments":["and","(redundant)","here,","if"]},{"Key":"unnecessary and","Fragments":["can","makes","replaced"]},{"Key":"2. Can","Fragments":["you","you","you","put"]},{"Key":"of anything","Fragments":["you","that","that","that","that"]},{"Key":"make what's","Fragments":["going","happening"]},{"Key":"what's going","Fragments":["on","on?","on?","on?","on?","on","on","on","on:","on","on.","on.","on."]},{"Key":"going on","Fragments":["in","in","in","and","in","here.","and","at","that","and","in","in","there?","to","now.","in"]},{"Key":"on in","Fragments":["the","it?","the","the","IsAllUpper","line","the"]},{"Key":"method more","Fragments":["expressive"]},{"Key":"more expressive","Fragments":["to","as","as","as","as","job","and","and","other","and","like"]},{"Key":"expressive to","Fragments":["what's"]},{"Key":"to what's","Fragments":["going","going","going","going","going"]},{"Key":"on? How","Fragments":["about","about","about"]},{"Key":"How about","Fragments":["eliminating","eliminating","eliminating","readability?","readability?","the","not"]},{"Key":"about eliminating","Fragments":["code","any","any"]},{"Key":"eliminating code","Fragments":["duplication?"]},{"Key":"looks pretty","Fragments":["good","good","good."]},{"Key":"pretty good","Fragments":["so","so","readability","names","and"]},{"Key":"far. Couple","Fragments":["minor"]},{"Key":"Couple minor","Fragments":["things"]},{"Key":"minor things","Fragments":["I","you","-"]},{"Key":"things I","Fragments":["can","might","noticed:"]},{"Key":"can think","Fragments":["of:","of","of","of","of","of","of","of"]},{"Key":"1. In","Fragments":["idiomatic","a"]},{"Key":"In idiomatic","Fragments":["C#,"]},{"Key":"methods regardless","Fragments":["of"]},{"Key":"regardless of","Fragments":["privacy","which"]},{"Key":"of privacy","Fragments":["are"]},{"Key":"privacy are","Fragments":["Pascal"]},{"Key":"Pascal cased.","Fragments":["Not"]},{"Key":"cased. Not","Fragments":["a"]},{"Key":"huge deal,","Fragments":["just"]},{"Key":"deal, just","Fragments":["something"]},{"Key":"just something","Fragments":["to","you"]},{"Key":"something to","Fragments":["be","pay","a","be"]},{"Key":"be aware","Fragments":["of."]},{"Key":"anything that","Fragments":["would","would","would","would","appears","is","is","could","represents","doesn't","could"]},{"Key":"would make","Fragments":["the","the","the","a","your","`DividesByHundred`","your","this","them","debugging/maintaining","a","this","things","it","the","sense.","it","for","sense","your","more","sense","my","For","the","it","more","it"]},{"Key":"code more","Fragments":["expressive","expressive","expressive","expressive","pretty","readable","readable,","self-documenting,","readable.","readable","readable","readable?","readable.","readable.","readable."]},{"Key":"expressive as","Fragments":["to","to","to","to","you","you"]},{"Key":"as to","Fragments":["what's","what's","what's","what's","what","what","why","where","create","why","things","what","where","how","why","throw","whether","what"]},{"Key":"eliminating any","Fragments":["code","code"]},{"Key":"any code","Fragments":["duplication?","duplication?","duplication","duplication","duplication?","in","in"]},{"Key":"would question","Fragments":["the"]},{"Key":"question the","Fragments":["naming","need"]},{"Key":"naming of","Fragments":["the","the","my"]},{"Key":"the `isDivisible`","Fragments":["variable."]},{"Key":"`isDivisible` variable.","Fragments":["All"]},{"Key":"variable. All","Fragments":["numbers"]},{"Key":"All numbers","Fragments":["are"]},{"Key":"numbers are","Fragments":["divisible!","and"]},{"Key":"are divisible!","Fragments":["I"]},{"Key":"divisible! I","Fragments":["would"]},{"Key":"would say","Fragments":["what","my","it's","that","that","that","that","all"]},{"Key":"say what","Fragments":["it"]},{"Key":"what it","Fragments":["really","does","is","does.","gains","looks","was","actually","does.","was","does...","is","inlines","says","is","was","does,","does?","is","is","is.","means?"]},{"Key":"is is","Fragments":["`isLeapYear`","just"]},{"Key":"is `isLeapYear`","Fragments":["or"]},{"Key":"`isLeapYear` or","Fragments":["somthing"]},{"Key":"or somthing","Fragments":["like"]},{"Key":"somthing like","Fragments":["that."]},{"Key":" or","Fragments":["possibly","this:",",","non-Linq","this:","try"]},{"Key":"or possibly","Fragments":["have"]},{"Key":"possibly have","Fragments":["two"]},{"Key":"have two","Fragments":["variables,","thoughts","very","integers"]},{"Key":"two variables,","Fragments":["one"]},{"Key":"variables, one","Fragments":["`isDivisibleByFour`"]},{"Key":"one `isDivisibleByFour`","Fragments":["and"]},{"Key":"`isDivisibleByFour` and","Fragments":["one"]},{"Key":"and one","Fragments":["`isLeapYear`","'Any'","could","called","thing","using","misconception"]},{"Key":"one `isLeapYear`","Fragments":["to"]},{"Key":"`isLeapYear` to","Fragments":["show"]},{"Key":"to show","Fragments":["that","the","how","what","another","it's","a","all"]},{"Key":"show that","Fragments":["the","it"]},{"Key":"the two","Fragments":["calculated","rules","return","alternative","sequences.","words","if","sub","char","conditions","tests","strings","strings","strings","easiest","tests","strands","strings","test","foreach","for","strands","helper"]},{"Key":"two calculated","Fragments":["values"]},{"Key":"calculated values","Fragments":["are"]},{"Key":"Maybe like","Fragments":["this"]},{"Key":"var isDivisibleByFour","Fragments":["=","="]},{"Key":"isDivisibleByFour =","Fragments":["year%4","year","(year"]},{"Key":"= year%4","Fragments":["==","=="]},{"Key":"year%4 ==","Fragments":["0;","0","0;"]},{"Key":"= isDivisibleByFour","Fragments":["\u0026\u0026"]},{"Key":"isDivisibleByFour \u0026\u0026","Fragments":["year%100"]},{"Key":"\u0026\u0026 year%100","Fragments":["!=","==","!="]},{"Key":"year%100 !=","Fragments":["0","0)"]},{"Key":"0 ||","Fragments":["year%400","year","year","(year","givenYear%100","year","year","year","year","(year","year","(year","year","year","year%400","year","year%400`","year","year%400","year","year","year","year","number","number","((yr","year","year","year"]},{"Key":"|| year%400","Fragments":["==","==","==","=="]},{"Key":"year%400 ==","Fragments":["0;","0;","0;","0`","0","0));","0));","0;","0;"]},{"Key":"would also","Fragments":["prefer","do","be","be","be","look","go","suggest","introduce","allow","push","pass","cause","suggest","have","suggest","need","evaluate","either","\"clean","allow"]},{"Key":"also prefer","Fragments":["to"]},{"Key":"see the","Fragments":["logic","intent.","following:","value","tests","implication","use","exercise","pattern",".dll.","point",".ToList\u003c\u003e()","```DynamicInvoke```","nits","value","point","constraints","difference","same","call","result","note","need","compiler","need","instance","value","pattern"]},{"Key":"logic line","Fragments":["cleaned"]},{"Key":"line cleaned","Fragments":["up"]},{"Key":"cleaned up","Fragments":["with","version","the","wrong","my","the","my","the","\"using\""]},{"Key":"up with","Fragments":["well","the","a","the","better","some","the","\u003c20","the","something","the","a","any?","the","was","a","it","the","a","the","the","some","were","the"]},{"Key":"with well","Fragments":["named"]},{"Key":"named variables","Fragments":["or"]},{"Key":"variables or","Fragments":["private"]},{"Key":"or private","Fragments":["methods."]},{"Key":"far. Is","Fragments":["there","there"]},{"Key":"of that","Fragments":["can","solved","sort.","could","before!","if","myself.","method,","convoluted","the","statement","class.","foreach","first","array."]},{"Key":"far. Can","Fragments":["you","you"]},{"Key":"on? Is","Fragments":["there"]},{"Key":"there any","Fragments":["code","code","way","other","other","sense","pros","major","advantage","reason","reason","reason","potential"]},{"Key":"duplication you","Fragments":["could"]},{"Key":"in it?","Fragments":["Is","It"]},{"Key":"it? Is","Fragments":["there"]},{"Key":"Looks very","Fragments":["good"]},{"Key":"very good","Fragments":["so","point!","points","suggestion.","with","variable","point"]},{"Key":"the LINQ","Fragments":["statement","expression","version","in"]},{"Key":"LINQ statement","Fragments":["in","that"]},{"Key":"statement in","Fragments":["```Match```","the","an","the","the","a","Add","the","Add().","the"]},{"Key":"in ```Match```","Fragments":["easier"]},{"Key":"```Match``` easier","Fragments":["to"]},{"Key":"easier to","Fragments":["understand","follow.","write","understand.","read","understand","read?","read!","only","see","read,","read","read","follow.","read.","follow","read","follow","understand.","read.","read","read","find","read.","see","scan.","find","read","read.","find.","implement","initialize","read","read","have","read,","understand","see.","read.","see","read","debug","read","understand","understand","read","understand","make","read.","read","read.","read.","follow.","have","extend):","read.","read.","follow","read","read.","read.","read.","read.","read.","read","understand","read","read","debug","understand.","follow.","do","read,","read","comprehend.","grok","read,","read","understand.","solve","modify","understand?","understand,","evaluate","write","understand.","read","read","read","read","read.","read","scan"]},{"Key":"to understand","Fragments":["at","but","the","it!","it","for","your","where","than","the","it.","in","relative","at","(deMorgan's","when","upon","is","what","--","for","if","it.","the","the"]},{"Key":"understand at","Fragments":["a","a"]},{"Key":"at a","Fragments":["higher","divided","glance","regular","glance.","glance.","time.","time.","time","time.","beginner","couple","maximum","glance.","high"]},{"Key":"a higher","Fragments":["level","chance","priority"]},{"Key":"higher level","Fragments":["as","brackets"]},{"Key":"level as","Fragments":["to"]},{"Key":"to what","Fragments":["it's","is","MetalKid","I","it","constitutes","they","the"]},{"Key":"the rules","Fragments":["which","for","that","for","of","still","and","are","right?"]},{"Key":"rules which","Fragments":["makes"]},{"Key":"which makes","Fragments":["it","it","`last","your","things","it","other","the"]},{"Key":"it declarative","Fragments":["instead"]},{"Key":"declarative instead","Fragments":["of"]},{"Key":"of in","Fragments":["terms","the","a"]},{"Key":"in terms","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"terms of","Fragments":["exceptions","code-constancy","\"IsYelling\"","readability","logic","efficiency.","condensing","characters)","style","time.","readability"]},{"Key":"of exceptions","Fragments":["as","and"]},{"Key":"exceptions as","Fragments":["it's"]},{"Key":"as it's","Fragments":["normally","only","probably","own","values.","used","not","not","only","not"]},{"Key":"it's normally","Fragments":["expressed."]},{"Key":"normally expressed.","Fragments":["Also"]},{"Key":"expressed. Also","Fragments":["wrapped"]},{"Key":"Also wrapped","Fragments":["the"]},{"Key":"wrapped the","Fragments":["mod","modulus"]},{"Key":"mod =","Fragments":["0"]},{"Key":"= 0","Fragments":["in","or","is","is","Add","Add","has"]},{"Key":"0 in","Fragments":["\"divisibleBy\".","newer","the","this"]},{"Key":" @mack","Fragments":["+1","says"]},{"Key":"@mack +1","Fragments":["for"]},{"Key":"+1 for","Fragments":["providing","thinking","using"]},{"Key":"for providing","Fragments":["the","suggestions"]},{"Key":"providing the","Fragments":["info"]},{"Key":"the info","Fragments":["to"]},{"Key":"info to","Fragments":["back"]},{"Key":"to back","Fragments":["it"]},{"Key":"back it","Fragments":["up."]},{"Key":"it up.","Fragments":["BCE's","Could","It","It"]},{"Key":"up. BCE's","Fragments":["are"]},{"Key":"BCE's are","Fragments":["not"]},{"Key":"not represented","Fragments":["with"]},{"Key":"represented with","Fragments":["negative"]},{"Key":"with negative","Fragments":["numbers"]},{"Key":"negative numbers","Fragments":["so"]},{"Key":"numbers so","Fragments":["if","you"]},{"Key":"if we","Fragments":["put","don't:","start","decide","needed","were","checked","replace","assuming","are","want"]},{"Key":"we put","Fragments":["the"]},{"Key":"the BCE","Fragments":["timeline"]},{"Key":"BCE timeline","Fragments":["in"]},{"Key":"timeline in","Fragments":["parallel"]},{"Key":"in parallel","Fragments":["with"]},{"Key":"parallel with","Fragments":["CE"]},{"Key":"with CE","Fragments":["and"]},{"Key":"CE and","Fragments":["just"]},{"Key":"just let","Fragments":["it","me","boolean"]},{"Key":"let it","Fragments":["point"]},{"Key":"it point","Fragments":["to"]},{"Key":"point to","Fragments":["the","avoid","consider","a","a"]},{"Key":"same direction","Fragments":["for"]},{"Key":"direction for","Fragments":["simplicity's"]},{"Key":"for simplicity's","Fragments":["sake"]},{"Key":"simplicity's sake","Fragments":["I"]},{"Key":"sake I","Fragments":["think"]},{"Key":"the leap","Fragments":["year","year","year","year","year","year.","status","year","years","year"]},{"Key":"year check","Fragments":["would","a","first"]},{"Key":"check would","Fragments":["still","only","crash.","be","be"]},{"Key":"would still","Fragments":["be","consider","function","only","pass.","be"]},{"Key":" BCE","Fragments":["0BCE"]},{"Key":"BCE 0BCE","Fragments":["---"]},{"Key":"0BCE ---","Fragments":["500BCE"]},{"Key":"--- 500BCE","Fragments":["---"]},{"Key":"500BCE ---","Fragments":["1000BCE-\u003e"]},{"Key":" CE","Fragments":["0CE"]},{"Key":"CE 0CE","Fragments":["---"]},{"Key":"0CE ---","Fragments":["500CE"]},{"Key":"--- 500CE","Fragments":["---"]},{"Key":"500CE ---","Fragments":["1000CE-\u003e"]},{"Key":"this implementation,","Fragments":["re-usable.","but"]},{"Key":"implementation, re-usable.","Fragments":["I"]},{"Key":"re-usable. I","Fragments":["like"]},{"Key":"the implied","Fragments":["logic;"]},{"Key":"implied logic;","Fragments":["two"]},{"Key":"logic; two","Fragments":["cases"]},{"Key":"two cases","Fragments":["where","in"]},{"Key":"cases where","Fragments":["the","new","we're","that"]},{"Key":"method returns","Fragments":["true","control","a"]},{"Key":"returns true","Fragments":["((case","is","for","is","or","and","so","even","if"]},{"Key":"true ((case","Fragments":["1)"]},{"Key":"((case 1)","Fragments":["||"]},{"Key":"1) ||","Fragments":["(case2))"]},{"Key":" @justyn","Fragments":["Thanks,"]},{"Key":"@justyn Thanks,","Fragments":["I"]},{"Key":"Thanks, I","Fragments":["didn't","compeltely","couldn't","didn't","sometimes","read"]},{"Key":"know I","Fragments":["can","want","like","could","could","love"]},{"Key":"can have","Fragments":["extension"]},{"Key":"have extension","Fragments":["method"]},{"Key":"method that's","Fragments":["private."]},{"Key":" You're","Fragments":["right,","right,","right,","right,","completely","not","forcing","right.","right","missing","correct.","right","absolutely","right.","right,"]},{"Key":"You're right,","Fragments":["that's","though,","the","I","their","just","looks"]},{"Key":"right, that's","Fragments":["a"]},{"Key":"that's a","Fragments":["matter","matter","very","word)?","matter","personal","fantastic","lot","clever","good","nice"]},{"Key":"of preference.","Fragments":["If"]},{"Key":"preference. If","Fragments":["this"]},{"Key":"If this","Fragments":["extension","were","is","class","is"]},{"Key":"this extension","Fragments":["method","method"]},{"Key":"was specific","Fragments":["to"]},{"Key":"specific to","Fragments":["this","the","some","Year,"]},{"Key":"this one","Fragments":["usage,","and","is","boolean","when","makes","is!","after","from","that","due","and","now.","for","out","with","of","out","handles","clocks","for"]},{"Key":"one usage,","Fragments":["I"]},{"Key":"usage, I","Fragments":["would"]},{"Key":"would go","Fragments":["with","ahead","a","south","further:","pop."]},{"Key":"go with","Fragments":["making","a","you","#3","#3","a","the","it,"]},{"Key":"with making","Fragments":["it"]},{"Key":"it private","Fragments":["and"]},{"Key":"private and","Fragments":["include","wrap","get/set","public,","not"]},{"Key":"and include","Fragments":["in","zero"]},{"Key":"include in","Fragments":["the"]},{"Key":"same class.","Fragments":["In"]},{"Key":"class. In","Fragments":["this"]},{"Key":"this case","Fragments":["it's","I","it","or","in","--","was","it","might","but","I","you","I","it's","the","what","but","you","s","\u003cb\u003e'Twas\u003c/b\u003e","I","it","I","and","you","you","you","I","being","a","but","it","I"]},{"Key":"case it's","Fragments":["more","probably"]},{"Key":"more general","Fragments":["and","semantic"]},{"Key":"general and","Fragments":["it's"]},{"Key":"it's likely","Fragments":["to"]},{"Key":"likely to","Fragments":["be","change","illicit","return","be","always","change","matter.","be"]},{"Key":"be reused","Fragments":["(but","by"]},{"Key":"reused (but","Fragments":["I"]},{"Key":"(but I","Fragments":["made"]},{"Key":"I made","Fragments":["the","this","the","a","all","an","a","the","the","this","this","a","to","the","IsValid","the","a","that","a","that","this"]},{"Key":"made the","Fragments":["correction","code","anagram","same","`divBy.....`","character","same","minor","whole","algorithm","class","test","code","list","changes","calculate","Transform","code.","single","code"]},{"Key":"the correction","Fragments":["anyway,"]},{"Key":"correction anyway,","Fragments":["because"]},{"Key":"anyway, because","Fragments":["it"]},{"Key":"it looks","Fragments":["better).","very","great!","good","like","like","pretty","like","right","like","great!","like","great.","like","good.","good.","good.","good!","like","like","like","like","like"]},{"Key":"your IsDivisible","Fragments":["method."]},{"Key":"IsDivisible method.","Fragments":["Remove"]},{"Key":"method. Remove","Fragments":["horrible"]},{"Key":"Remove horrible","Fragments":["duplication!"]},{"Key":"still consider","Fragments":["wrapping"]},{"Key":"consider wrapping","Fragments":["each"]},{"Key":"wrapping each","Fragments":["call"]},{"Key":"each call","Fragments":["in","(or"]},{"Key":"call in","Fragments":["a","\u003cb\u003eRemoveNonAlphabetCharacters\u003c/b\u003e"]},{"Key":"be named","Fragments":["something","DivisibleBy...","'expected'."]},{"Key":"named something","Fragments":["sensible"]},{"Key":"something sensible","Fragments":["to"]},{"Key":"sensible to","Fragments":["explain","me!"]},{"Key":"explain WHY","Fragments":["you","you"]},{"Key":"WHY you","Fragments":["are","care"]},{"Key":"are dividing","Fragments":["by"]},{"Key":"dividing by","Fragments":["100,400"]},{"Key":"by 100,400","Fragments":["or"]},{"Key":"100,400 or","Fragments":["4."]},{"Key":"Not silly","Fragments":["as"]},{"Key":"silly as","Fragments":["such"]},{"Key":"as such","Fragments":[":)"]},{"Key":"is more","Fragments":["a","common","readable","elegant","readable.","C#!","likely","descriptive?","important","convoluted","readable","CPU","commonly","of","robust","likely","along","human","readable","readable.","but","useful.","idiomatic","and","your","than","efficient,","discoverable","readable","important","understandable","performant,","readable","complicated","readable.","concise.","efficient","common","performant","complicated","visual","efficient.","generally","readable....please","readable","difficult","readable","verbose","readable","readable.","performant"]},{"Key":"more a","Fragments":["matter","question","matter"]},{"Key":"of what","Fragments":["you","the","it's","else","`!prompt.Any(char.IsLower)`","the","```Roster.Count```","an","it","I","@euna","is","this","made","_should_","the","was"]},{"Key":"you expect","Fragments":["to","to","to","many","to"]},{"Key":"expect to","Fragments":["see...","be","reuse","not","find","see,","refactor"]},{"Key":"to see...","Fragments":["if"]},{"Key":"see... if","Fragments":["I"]},{"Key":"if I","Fragments":["see","agree","did","type","execute","am","use","should","should","hadn't","remove","were","were","did","thought","try","missed","had","pulled","went","could","leave","can","can","inline","believe","should","call","knew","put","could","have","could.","can","said","was","mistakenly","send","have","convert","were","actually","get","missed","gave","wanted","had","decide","did","fetch","use:"]},{"Key":"see an","Fragments":["`else`","opportunity","ArgumentException","implementation"]},{"Key":"an `else`","Fragments":["then","at","is"]},{"Key":"`else` then","Fragments":["I"]},{"Key":"then I","Fragments":["expect","have","should","should","could","probably","just","kind","got","would","don't","felt","figured","should","could","had","might","can","got","tried","failed","would","call","had"]},{"Key":"I expect","Fragments":["there","the","some","the"]},{"Key":"expect there","Fragments":["to"]},{"Key":"a default","Fragments":["or","constructor.","initialization,","constructor."]},{"Key":"default or","Fragments":["other"]},{"Key":"or other","Fragments":["`elses`"]},{"Key":"other `elses`","Fragments":["afterwards."]},{"Key":"`elses` afterwards.","Fragments":["If"]},{"Key":"afterwards. If","Fragments":["the"]},{"Key":"else contains","Fragments":["the"]},{"Key":"contains the","Fragments":["default/final","same","given","same","grade,","expected"]},{"Key":"the default/final","Fragments":["then"]},{"Key":"default/final then","Fragments":["I"]},{"Key":"think twice","Fragments":["about"]},{"Key":"twice about","Fragments":["if"]},{"Key":"about if","Fragments":["that"]},{"Key":"actually the","Fragments":["end","year"]},{"Key":"the end","Fragments":["of","though","of","with","(http://msdn.microsoft.com/en-us/library/vstudio/dd267698(v=vs.100).aspx).","of","I","for","of","you","of","of","user","of","game","yet.","of","of","of","of","of","it","of","of","thinking","user","of","of","of","result","show","of","of","of","of","character","of","of","of","of",";)","of","of"]},{"Key":"end of","Fragments":["the","a","the","one","the","a","your","input,","line","your","the","the","those","the","a","Add","Main","Main","the","the","the","the","the","the","each","the","the","your"]},{"Key":" FAR","Fragments":["more"]},{"Key":"FAR more","Fragments":["important"]},{"Key":"more important","Fragments":["is","than","than"]},{"Key":"important is","Fragments":["the","that"]},{"Key":"naming and","Fragments":["breaking","putting"]},{"Key":"and breaking","Fragments":["down","this"]},{"Key":"breaking down","Fragments":["any","the","the"]},{"Key":"down any","Fragments":["complex"]},{"Key":"any complex","Fragments":["chunk"]},{"Key":"complex chunk","Fragments":["of"]},{"Key":"chunk of","Fragments":["code"]},{"Key":"code (line","Fragments":["13)"]},{"Key":"(line 13)","Fragments":["so"]},{"Key":"13) so","Fragments":["it"]},{"Key":"so simple","Fragments":["you"]},{"Key":"simple you","Fragments":["can","have"]},{"Key":"can remember","Fragments":["what"]},{"Key":"remember what","Fragments":["it"]},{"Key":"does late","Fragments":["on"]},{"Key":"late on","Fragments":["a"]},{"Key":"on a","Fragments":["Friday","century","single","team,","large","line","parameter.","bit","bit","class","non-year","centuary","way","variant","one","second,","single","base","single","single","sanitized","null","computer,","test","regular","List,","fail","case","triangle.","boolean","very","Year","call","solution","second","negative.","comment","new","whole","var,","LIst","word-by-word","word-by-word","generator","side"]},{"Key":"a Friday","Fragments":["when"]},{"Key":"Friday when","Fragments":["the"]},{"Key":"the build","Fragments":["is","in"]},{"Key":"build is","Fragments":["broken"]},{"Key":"is broken","Fragments":["and"]},{"Key":"broken and","Fragments":["you"]},{"Key":"and you","Fragments":["need","could","could","don't","don't","will","can","get","only","really","don't","want","get","wouldn't","have","want","showed","come","don't","don't","want","were","want","could","are","can","don't","needed","can","can","don't","can","don't","are","can","could","then","just","need","only"]},{"Key":"to fix","Fragments":["SOMETHING","that","the","it...","by","my","some","my","it.","this.","the"]},{"Key":"fix SOMETHING","Fragments":["in"]},{"Key":"SOMETHING in","Fragments":["the"]},{"Key":"not behaving","Fragments":["as"]},{"Key":"behaving as","Fragments":["you"]},{"Key":"as you","Fragments":["expect.","are","read.","can.","can","see","can","can","assume,","were","are","use","go.","can","suggested.","find","ar","ahve","note","said.","use","however","suggested","pointed","can","type,","could","do,","go?","have","don't","can","would","pointed","know","are","have","could","can","can.\"","know","describe","did","can"]},{"Key":"you expect.","Fragments":["Pity"]},{"Key":"expect. Pity","Fragments":["the"]},{"Key":"Pity the","Fragments":["person"]},{"Key":"the person","Fragments":["who","maintaining"]},{"Key":"person who","Fragments":["is"]},{"Key":"who is","Fragments":["going","going","reading"]},{"Key":"maintain your","Fragments":["code","code","code"]},{"Key":"code (even","Fragments":["if"]},{"Key":"(even if","Fragments":["that","there"]},{"Key":"is certainly","Fragments":["quite","a","an"]},{"Key":"certainly quite","Fragments":["a"]},{"Key":"quite a","Fragments":["discursive","bit","bit.","few...","lot","bit","bit","few","few","few"]},{"Key":"a discursive","Fragments":["use"]},{"Key":"discursive use","Fragments":["of"]},{"Key":"of language...","Fragments":["and"]},{"Key":"language... and","Fragments":["I"]},{"Key":"I do","Fragments":["find","not","like","like","all","like","think","however","like","like","agree","feel","not","I","no","not","everything","tend","have","like","admire","like","another","to","the","like","like","with","like","like","it","think","not","like","not","the","like"]},{"Key":"do find","Fragments":["naming"]},{"Key":"find naming","Fragments":["things"]},{"Key":"naming things","Fragments":["amongst"]},{"Key":"things amongst","Fragments":["the"]},{"Key":"amongst the","Fragments":["hardest"]},{"Key":"the hardest","Fragments":["of"]},{"Key":"hardest of","Fragments":["programing"]},{"Key":"of programing","Fragments":["tasks."]},{"Key":" Certainly","Fragments":["you"]},{"Key":"Certainly you","Fragments":["won't"]},{"Key":"you won't","Fragments":["find","be","need","have","have","have","have"]},{"Key":"won't find","Fragments":["these"]},{"Key":"find these","Fragments":["names"]},{"Key":"these names","Fragments":["outside","and"]},{"Key":"names outside","Fragments":["the"]},{"Key":"outside the","Fragments":["logic","matching","foreach","class","loop","bounds","matching"]},{"Key":"logic of","Fragments":["my","why","a","line","the","the","the"]},{"Key":"is acceptable","Fragments":["to","here"]},{"Key":"acceptable to","Fragments":["say","me."]},{"Key":"say that","Fragments":["a","the","they","writing","we're","it","is","there","\u003cb\u003ehamDist++\u003c/b\u003e","I","the","area","doesn't","is","unless"]},{"Key":"normal leap","Fragments":["year"]},{"Key":"is one","Fragments":["that","that","line","line","of","of","case","test","line","more","of","of","of","way","pass","refactor","of"]},{"Key":"that simply","Fragments":["divides"]},{"Key":"simply divides","Fragments":["by"]},{"Key":"divides by","Fragments":["four...","400..."]},{"Key":"by four...","Fragments":["that"]},{"Key":"four... that","Fragments":["is"]},{"Key":"what I","Fragments":["think","am","noticed:","was","would","am","did.","needed","mean,","came","think","did","had","wanted","did","have","should","have","used","came","want","did.","was","did,","was","have.","needed,","found","did","wanted","did.","needed.","was","did.","should","did,","can","was","get","put","am","thought","was","wanted","thought","should","have.","understand,","would","came"]},{"Key":"of when","Fragments":["I","to","you've"]},{"Key":"I need","Fragments":["to","to","to","to","to","to","to","to","to","clarification","that","to","to","would"]},{"Key":"to test","Fragments":["if","and","the","that","their","it,","if","for","for","it","code.","IsNullOrEmpty?","my","so","with","one's","it:","for","and"]},{"Key":"test if","Fragments":["the","the","two"]},{"Key":"falls on","Fragments":["a"]},{"Key":"century so","Fragments":["I"]},{"Key":"does that.","Fragments":["But"]},{"Key":"that. But","Fragments":["there"]},{"Key":"But there","Fragments":["is"]},{"Key":"a special","Fragments":["case","century.","one.","case","character","check","case"]},{"Key":"special case","Fragments":["where","for","where","and"]},{"Key":"case where","Fragments":["a","a","there's","the","the","the","same","we","we're","entries","the"]},{"Key":"where a","Fragments":["year","year","swift","return","property,"]},{"Key":"century but","Fragments":["additionally"]},{"Key":"but additionally","Fragments":["is"]},{"Key":"additionally is","Fragments":["a"]},{"Key":"that divides","Fragments":["by"]},{"Key":"by 400...","Fragments":["this"]},{"Key":"400... this","Fragments":["is"]},{"Key":" Is","Fragments":["is","there","there","there","there","it","doing","there","doing","it","there","there","there","there","\u003ccode\u003e!text.All(char.IsWhiteSpace)\u003c/code\u003e","there","there","there","increasing","there","there","there","there","there","throwing","that"]},{"Key":"Is is","Fragments":["possible"]},{"Key":"is possible","Fragments":["I","to","but","some","that","a","to","to","to","to","convert","that","but","candidate","in"]},{"Key":"possible I","Fragments":["see"]},{"Key":"see this","Fragments":["as","pattern","code","expanding.","in"]},{"Key":"as simple","Fragments":["as","logic","and","as","as","as","as"]},{"Key":"am a","Fragments":["native","comment","novice","fan"]},{"Key":"a native","Fragments":["English"]},{"Key":"native English","Fragments":["speaker?"]},{"Key":"English speaker?","Fragments":["Not"]},{"Key":"speaker? Not","Fragments":["that"]},{"Key":"Not that","Fragments":["this","I"]},{"Key":"that this","Fragments":["is","is","is","method","could","can","is","existed....","is","was","way","works","code","method","actually","is","algorithm","is","is","works,","functionality","might","class","class","code","is","is","format","is","is"]},{"Key":"you disagree","Fragments":["with"]},{"Key":"have divided","Fragments":["the"]},{"Key":"divided the","Fragments":["code?"]},{"Key":"the code?","Fragments":["What","And"]},{"Key":"code? What","Fragments":["would"]},{"Key":"What would","Fragments":["you","you","a","you","happen"]},{"Key":"you name","Fragments":["the","your"]},{"Key":" Why","Fragments":["is","are","return","not","map","is","not","does","not","use","are","not","did","LowerFirstLetter","did","on","not,","do","do","did","reverse","not","is","don't","do","did","do","did","did","did","do","would","do","you","'protected","why","bother","use","re","AddSeconds","all","pipe","use","repeat","make","not","use","is","_hasKind","List\u003c\u003e","hasPl*ng","a","so","create","ICollection","function.Invoke?","create","Contains","String.Join(\"\",","have","not","addWords()?Just","use","not","not","call"]},{"Key":"Why is","Fragments":["\"word\"","Sequence","this","this?","SetScore","a","it"]},{"Key":"is \"word\"","Fragments":["a"]},{"Key":"\"word\" a","Fragments":["private"]},{"Key":"private property","Fragments":["rather"]},{"Key":"property rather","Fragments":["than","than"]},{"Key":"can refactor","Fragments":["the","GetRandomNumber","the","this","exception","Enumerable.Range","out"]},{"Key":"refactor the","Fragments":["\"word\"","foreach","three","conditionals","code.","Where()"]},{"Key":"the \"word\"","Fragments":["and"]},{"Key":"\"word\" and","Fragments":["\"theOther\""]},{"Key":"and \"theOther\"","Fragments":["sorts"]},{"Key":"\"theOther\" sorts","Fragments":["into"]},{"Key":"sorts into","Fragments":["one","a"]},{"Key":"one function","Fragments":["or","method","because","do","method","method"]},{"Key":"function or","Fragments":["method"]},{"Key":"Why are","Fragments":["you","you","you"]},{"Key":"are you","Fragments":["calling","raising","saying","checking","validating","seeing?"]},{"Key":"you calling","Fragments":[".ToLower()"]},{"Key":"calling .ToLower()","Fragments":["twice","twice","when"]},{"Key":".ToLower() twice","Fragments":["on","on"]},{"Key":"twice on","Fragments":["\"another\"?","the"]},{"Key":"not quite","Fragments":["convinced","correct","sure,"]},{"Key":"quite convinced","Fragments":["with","not"]},{"Key":"convinced with","Fragments":["the"]},{"Key":"names on","Fragments":["Line"]},{"Key":"on Line","Fragments":["8"]},{"Key":"Line 8","Fragments":["and"]},{"Key":"8 and","Fragments":["13,"]},{"Key":"and 13,","Fragments":["IsNormalLeapYear"]},{"Key":"13, IsNormalLeapYear","Fragments":["and"]},{"Key":"IsNormalLeapYear and","Fragments":["IsSpecialCentury."]},{"Key":"and IsSpecialCentury.","Fragments":["Can"]},{"Key":"IsSpecialCentury. Can","Fragments":["you"]},{"Key":"you elaborate","Fragments":["on","please?"]},{"Key":"elaborate on","Fragments":["why"]},{"Key":"on why","Fragments":["you","it's","you"]},{"Key":"use these","Fragments":["names","inbuilt"]},{"Key":"the text","Fragments":["reference","as","into","from","manipulation","to","being","at","argument"]},{"Key":"text reference","Fragments":["which"]},{"Key":"reference which","Fragments":["defines"]},{"Key":"which defines","Fragments":["these"]},{"Key":"defines these","Fragments":["names?"]},{"Key":"these names?","Fragments":["This"]},{"Key":"names? This","Fragments":["is"]},{"Key":"is because","Fragments":["I","you're","once","I","the"]},{"Key":"because I","Fragments":["have","like","felt","find","believed","don't","already","thought","thought","did","don't","thought","thought","try","have","have","*usually*","made","failed","solved","kept","hadn't","decided","often","think","wanted","think","changed","believe","was","was","don't","feel","didn't","honestly","thought","can't","had","ordered"]},{"Key":"have never","Fragments":["encountered","seen","used","touched","seen","seen","worked","worked"]},{"Key":"never encountered","Fragments":["a"]},{"Key":"encountered a","Fragments":["Normal"]},{"Key":"a Normal","Fragments":["Leap"]},{"Key":"Normal Leap","Fragments":["Year."]},{"Key":"Leap Year.","Fragments":["All"]},{"Key":"Year. All","Fragments":["I"]},{"Key":"All I","Fragments":["know"]},{"Key":"know is","Fragments":["a","a"]},{"Key":"normal year","Fragments":["and"]},{"Key":"year and","Fragments":["a","return","centennial","month","everything","report","report","input","report","we"]},{"Key":"and a","Fragments":["leap","lot","LINQ","bit","method","string","```Dictionary```","few","few","test","tertiary","2","loop","_count_,","simple","new","call","more","list","setter."]},{"Key":"year. And","Fragments":["for","the"]},{"Key":"And for","Fragments":["Special","your"]},{"Key":"for Special","Fragments":["Century,"]},{"Key":"Special Century,","Fragments":["all"]},{"Key":"Century, all","Fragments":["I"]},{"Key":"all I","Fragments":["know","am"]},{"Key":"believe it's","Fragments":["pretty","the","good"]},{"Key":"it's pretty","Fragments":["self","straightforward.","readable.","good.","easy"]},{"Key":"pretty self","Fragments":["documenting."]},{"Key":"self documenting.","Fragments":["The"]},{"Key":"documenting. The","Fragments":["definition"]},{"Key":"The definition","Fragments":["of"]},{"Key":"definition of","Fragments":["a","\"leap","the","each","a","leap","`temp`"]},{"Key":"is divisible","Fragments":["by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by","by"]},{"Key":"by 400","Fragments":["*or*","calculation)","up","up?","first","to","it's","is","is","are","are","is","then","it","is,","are","year","it","is"]},{"Key":"400 *or*","Fragments":["divisible"]},{"Key":"*or* divisible","Fragments":["by"]},{"Key":"by 4,","Fragments":["but","the","which","then","which"]},{"Key":"4, but","Fragments":["not"]},{"Key":"not 100.","Fragments":["I"]},{"Key":"100. I","Fragments":["suppose"]},{"Key":"I suppose","Fragments":["that","I","at","it","this","all","for","that","it","it","I'll","that","you","it","this","being"]},{"Key":"suppose that","Fragments":["would","sounds","could"]},{"Key":"make a","Fragments":["good","comment:","leap","couple","mistake,","suggestion","lot","more","\"testInt\"","'fluent'","private","class","ton","boolean","test","single","class","general-case","delegate","difference,","list","separate","change"]},{"Key":"good comment","Fragments":["just"]},{"Key":"comment just","Fragments":["as"]},{"Key":"just as","Fragments":["I've","you","well","performant","easily","well;","fast","easily","well","fast,","easily","well","easily","readable","it"]},{"Key":"as I've","Fragments":["stated","seen"]},{"Key":"I've stated","Fragments":["it"]},{"Key":"stated it","Fragments":["though."]},{"Key":"This was","Fragments":["the","my","the","really","a","partially","exactly","a","pretty","the","fun","certainly","my","a"]},{"Key":"was the","Fragments":["fastest","if","only","only","problem","other","biggest","point","right","reason","point.","other","\"modern\"","number","first","age","first","most","first","input.","only"]},{"Key":"the fastest","Fragments":["thing","without","that","I"]},{"Key":"fastest thing","Fragments":["I"]},{"Key":"could think","Fragments":["of","about","about","of","of.","of...","of","about,"]},{"Key":"that solved","Fragments":["the","that"]},{"Key":"solved the","Fragments":["problem","null","PrimesFactor","problem."]},{"Key":" Great","Fragments":["code","job,","advice,","job!","commenting","job!","job!","job!","job!","job!","but","minds","use","but","but"]},{"Key":"Great code","Fragments":["commenting"]},{"Key":"the question","Fragments":["to","mark.","becomes","first","and","`if`-statement,"]},{"Key":"question to","Fragments":["yourself"]},{"Key":"to yourself","Fragments":["is,"]},{"Key":"yourself is,","Fragments":["what"]},{"Key":"is, what","Fragments":["would"]},{"Key":"what would","Fragments":["dividing","be","be","it","be"]},{"Key":"would dividing","Fragments":["my"]},{"Key":"dividing my","Fragments":["code"]},{"Key":"code achieve?","Fragments":["Would"]},{"Key":"achieve? Would","Fragments":["it"]},{"Key":"Would it","Fragments":["still","be"]},{"Key":"be as","Fragments":["readable","you","unsurprising","general","simple","fast...","clear"]},{"Key":"as readable","Fragments":["as","as","and"]},{"Key":"as putting","Fragments":["it"]},{"Key":"putting it","Fragments":["on","on","all","all","in"]},{"Key":"it on","Fragments":["the","a","one","that","my","the","line","a","a"]},{"Key":"same line?","Fragments":["Sometimes"]},{"Key":"line? Sometimes","Fragments":["we"]},{"Key":"Sometimes we","Fragments":["strongly"]},{"Key":"we strongly","Fragments":["feel"]},{"Key":"strongly feel","Fragments":["our"]},{"Key":"feel our","Fragments":["codes"]},{"Key":"our codes","Fragments":["are"]},{"Key":"codes are","Fragments":["better"]},{"Key":"are better","Fragments":["divided","off","ways"]},{"Key":"better divided","Fragments":["and"]},{"Key":"divided and","Fragments":["sometimes"]},{"Key":"and sometimes","Fragments":["not.","they","I","error"]},{"Key":"sometimes not.","Fragments":["For"]},{"Key":"not. For","Fragments":["me"]},{"Key":"For me","Fragments":["I","```IsDivisibleBy```"]},{"Key":"me I","Fragments":["have"]},{"Key":"have no","Fragments":["problems","idea","idea","idea","idea","logging","experience","concept","problem","use","problem","public","idea","idea","basis"]},{"Key":"no problems","Fragments":["looking"]},{"Key":"problems looking","Fragments":["at"]},{"Key":"a divided","Fragments":["code"]},{"Key":"divided code","Fragments":["myself"]},{"Key":"code myself","Fragments":["though"]},{"Key":"myself though","Fragments":["I'd"]},{"Key":"though I'd","Fragments":["prefer","probably"]},{"Key":"I'd prefer","Fragments":["putting","if","to"]},{"Key":"prefer putting","Fragments":["it"]},{"Key":"single line","Fragments":["if","\"if\"","if","statements,","using","if-blocks.","of","using","comment","check","of","block.","you","return","of","multi-part","evaluation","solution"]},{"Key":"line if","Fragments":["breaking","statements,","statements"]},{"Key":"if breaking","Fragments":["it"]},{"Key":"breaking it","Fragments":["would","is","down"]},{"Key":"would mean","Fragments":["more","the","swapping","that","that","only","the","that"]},{"Key":"mean more","Fragments":["methods"]},{"Key":"more methods","Fragments":["with"]},{"Key":"methods with","Fragments":["single","ClarifyingVariables.","semantics"]},{"Key":"with single","Fragments":["lines"]},{"Key":"single lines","Fragments":["of"]},{"Key":"lines of","Fragments":["code.","code","code.","memory","code","code","code","code","code","the","this","code","code,","code","code,","@abel","code","mine.","text","code","code","code...","code","code.","code","code,"]},{"Key":"code. But","Fragments":["if"]},{"Key":"But if","Fragments":["it","your","the","you've","I","you","I"]},{"Key":"is divided","Fragments":["into"]},{"Key":"divided into","Fragments":["smaller"]},{"Key":"into smaller","Fragments":["methods","sequences"]},{"Key":"smaller methods","Fragments":["I'd"]},{"Key":"methods I'd","Fragments":["usually"]},{"Key":"I'd usually","Fragments":["expect"]},{"Key":"usually expect","Fragments":["a"]},{"Key":"expect a","Fragments":["comment","ToDecimal()","static"]},{"Key":"comment summary","Fragments":["of"]},{"Key":"summary of","Fragments":["what,","the"]},{"Key":"of what,","Fragments":["when,"]},{"Key":"what, when,","Fragments":["how"]},{"Key":"when, how","Fragments":["and"]},{"Key":"how and","Fragments":["why"]},{"Key":"and why","Fragments":["we","of","a","every","so","not"]},{"Key":"why we","Fragments":["have","are"]},{"Key":"we have","Fragments":["it.","increased","existing","arrayA","shortestStrandLength,","to","Grade()","to","to","to","to","\"true\"(because","available"]},{"Key":" As","Fragments":["to","you","for","a","far","far","for","for","you","for","far","for","for","a","for","a","I","far","someone","far","long","a","a","far","more","I","a","I","far","I","opposed","opposed","far","a","a","per","far","a","I","you","@salvatore","I","I"]},{"Key":"As to","Fragments":["naming","using"]},{"Key":"to naming","Fragments":["methods,"]},{"Key":"naming methods,","Fragments":["I"]},{"Key":"methods, I","Fragments":["think","get","thought"]},{"Key":"think I'd","Fragments":["go","generally"]},{"Key":"I'd go","Fragments":["for","for"]},{"Key":"obvious -","Fragments":["the"]},{"Key":"- the","Fragments":["logic","wrong","statements","new","StringBuider.Append()","following","performance","ternary","same","different"]},{"Key":"method offers","Fragments":["in"]},{"Key":"offers in","Fragments":["affirmative"]},{"Key":"in affirmative","Fragments":["form."]},{"Key":"Maybe IsEvenlyDivisible(int,","Fragments":["int)"]},{"Key":"IsEvenlyDivisible(int, int)","Fragments":["or"]},{"Key":"int) or","Fragments":["something"]},{"Key":"or something","Fragments":["-","more","more","similar.","and","like","else.","similar.","so","like","like"]},{"Key":"something -","Fragments":["yes,"]},{"Key":"- yes,","Fragments":["only"]},{"Key":"yes, only","Fragments":["one"]},{"Key":"one method.","Fragments":["eg","It"]},{"Key":"method. eg","Fragments":["IsEvenlyDivisible(4,"]},{"Key":"eg IsEvenlyDivisible(4,","Fragments":["year),"]},{"Key":"IsEvenlyDivisible(4, year),","Fragments":["IsEvenlyDivisible(400,year),"]},{"Key":"year), IsEvenlyDivisible(400,year),","Fragments":["IsEvenlyDivisible(100,year)"]},{"Key":" Hope","Fragments":["that","this","that"]},{"Key":"Hope that","Fragments":["helps.","helps."]},{"Key":" I'll","Fragments":["second","probably","have","see","fetch","try","play"]},{"Key":"I'll second","Fragments":["@aleen,"]},{"Key":"second @aleen,","Fragments":["it"]},{"Key":"@aleen, it","Fragments":["would"]},{"Key":"be much","Fragments":["more","overlapping","better.","since","faster","better","fun","more"]},{"Key":"much more","Fragments":["readable","readable","concise.","difficult","succinct.","readable","intuitively","concise.","concise.","concisely.","readable","readable\".","readable","readable","efficient..","readable","concisely.","compact","concise.","efficient","natural","readable.","leaner.","concise,","readable"]},{"Key":"readable if","Fragments":["you","the"]},{"Key":"you broke","Fragments":["that","that"]},{"Key":"broke that","Fragments":["up.","first"]},{"Key":"Yeah, I","Fragments":["actually","picked","can't","mentioned","never","had","just","never","noticed","know","know","remembered","thought","know."]},{"Key":"I actually","Fragments":["already","added","omitted","like","did","recently","knew"]},{"Key":"actually already","Fragments":["saw"]},{"Key":"already saw","Fragments":["your"]},{"Key":"saw your","Fragments":["solution"]},{"Key":"solution while","Fragments":["checking"]},{"Key":"while checking","Fragments":["out"]},{"Key":"checking out","Fragments":["this"]},{"Key":"out this","Fragments":["page","a","page,"]},{"Key":"this page","Fragments":["and"]},{"Key":"page and","Fragments":["I","recommended"]},{"Key":"your way","Fragments":["of","of"]},{"Key":"of dividing","Fragments":["the"]},{"Key":"dividing the","Fragments":["task"]},{"Key":"the task","Fragments":["into","DON'T","at"]},{"Key":"task into","Fragments":["multiple"]},{"Key":"into multiple","Fragments":["methods.","lines,"]},{"Key":"multiple methods.","Fragments":["I'll"]},{"Key":"methods. I'll","Fragments":["stick"]},{"Key":"I'll stick","Fragments":["with"]},{"Key":"stick with","Fragments":["the","one.","it.","it","Method-Linq","just","the","what","one"]},{"Key":"the comments","Fragments":["for","within","won't","and","are","get","and","I","for","the","I","by","to","before"]},{"Key":"comments for","Fragments":["this","this","my","anyone","VS"]},{"Key":"this simple","Fragments":["program,","problem.","test,","example","version.","example"]},{"Key":"simple program,","Fragments":["but"]},{"Key":"program, but","Fragments":["for"]},{"Key":"for more","Fragments":["complex","details.","flexibility.","than","than","than","advanced"]},{"Key":"complex operations","Fragments":["that"]},{"Key":"operations that","Fragments":["is"]},{"Key":"good way","Fragments":["to","to","to","to","to"]},{"Key":"you explain","Fragments":["your","the","the"]},{"Key":"explain your","Fragments":["use"]},{"Key":"of `IEEERemainder`","Fragments":["over"]},{"Key":"`IEEERemainder` over","Fragments":["the"]},{"Key":"over the","Fragments":["more","normal","place.","key","place,","place.","string","Dictionary","object","gifts","other.","thresholds","storage","Dictionary","entire","keys","input,","other?","lifetime","even","string","phrase"]},{"Key":"the more","Fragments":["common","complicated","narrow","expensive","interesting","recent"]},{"Key":"more common","Fragments":["`%`","in","in","now?"]},{"Key":"common `%`","Fragments":["operator?"]},{"Key":"is outside","Fragments":["my","the"]},{"Key":"outside my","Fragments":["knowledge"]},{"Key":"my knowledge","Fragments":["but"]},{"Key":"knowledge but","Fragments":["it"]},{"Key":"does take","Fragments":["doubles"]},{"Key":"take doubles","Fragments":["rather"]},{"Key":"doubles rather","Fragments":["than"]},{"Key":"than ints","Fragments":["so"]},{"Key":"ints so","Fragments":["there","no"]},{"Key":"there maybe","Fragments":["rounding"]},{"Key":"maybe rounding","Fragments":["problems"]},{"Key":"rounding problems","Fragments":["when"]},{"Key":"problems when","Fragments":["it","mixed"]},{"Key":"when it","Fragments":["comes","is","is","makes","improves","came","did","doesn't","comes","hits","doesn't","flips","is","is"]},{"Key":"it comes","Fragments":["to","to"]},{"Key":"comes to","Fragments":["the","dictionaries"]},{"Key":"the `==","Fragments":["0.0f`"]},{"Key":"`== 0.0f`","Fragments":["test."]},{"Key":"common in","Fragments":["`C#`","csharp","VB"]},{"Key":"in `C#`","Fragments":["to"]},{"Key":"`C#` to","Fragments":["name"]},{"Key":"to name","Fragments":["variables","my","objects"]},{"Key":"name variables","Fragments":["with"]},{"Key":"variables with","Fragments":["a","meaningful","meaningful","better","good","methods,","the","'_'"]},{"Key":"a lowercase","Fragments":["letter"]},{"Key":"lowercase letter","Fragments":["(so"]},{"Key":"letter (so","Fragments":["`isLeap`"]},{"Key":"(so `isLeap`","Fragments":["rather"]},{"Key":"`isLeap` rather","Fragments":["than"]},{"Key":"Your use","Fragments":["of"]},{"Key":"the Ternary","Fragments":["operator","operator","operator."]},{"Key":"Ternary operator","Fragments":["is","at","just"]},{"Key":"operator is","Fragments":["redundant.","a","novel.","not","basically","you","relatively","simple","understood","unnecessary."]},{"Key":"can just","Fragments":["say","`return","check","do","do","use","stop","put","as","multiply","sort","hover","use","return","do","return","do","use"]},{"Key":" `","Fragments":["var","public"]},{"Key":"` var","Fragments":["DivisibleByFour"]},{"Key":"var DivisibleByFour","Fragments":["="]},{"Key":"DivisibleByFour =","Fragments":["year"]},{"Key":"= year","Fragments":["%","%","%","%","%","%","%","%","%","%"]},{"Key":" Doing","Fragments":["all","so","the","all","it","`if"]},{"Key":"Doing all","Fragments":["the","the"]},{"Key":"calculations up","Fragments":["front","front.","front.","front","front","front"]},{"Key":"up front","Fragments":["is","is","a","a","and"]},{"Key":"front is","Fragments":["fine","also"]},{"Key":"is fine","Fragments":["for","and","as","--","as","but","AFAICS."]},{"Key":"fine for","Fragments":["this","me."]},{"Key":"this little","Fragments":["test,","class","exercise,","example."]},{"Key":"little test,","Fragments":["but"]},{"Key":"test, but","Fragments":["if","could","getting","a","it","if"]},{"Key":"but if","Fragments":["the","it","you","something","you","you","I","you","anyone","the","I","I","you","you","it","\"ggc\"","they","you","it","you","the","you","early","you","that","you","those","MS","we","someone","not"]},{"Key":"calculations were","Fragments":["costly"]},{"Key":"were costly","Fragments":["it"]},{"Key":"costly it","Fragments":["would"]},{"Key":"be better","Fragments":["to","to","to","using","off","to","to","if","to","written","or","to"]},{"Key":"to only","Fragments":["do","check","have","be","have","have","have","being","calculate"]},{"Key":"only do","Fragments":["them","that","that"]},{"Key":"do them","Fragments":["when"]},{"Key":"them when","Fragments":["required","it"]},{"Key":"when required","Fragments":["(ie","is"]},{"Key":"required (ie","Fragments":["if"]},{"Key":"(ie if","Fragments":["the"]},{"Key":"year does","Fragments":["not","not"]},{"Key":"not divide","Fragments":["by"]},{"Key":"divide by","Fragments":["four"]},{"Key":"four it","Fragments":["is","is"]},{"Key":"is never","Fragments":["going","going","called.","updated,"]},{"Key":"never going","Fragments":["to","to"]},{"Key":"year so","Fragments":["don't","you","only","naming","although"]},{"Key":"so don't","Fragments":["do","be","need"]},{"Key":"don't do","Fragments":["the"]},{"Key":"the by","Fragments":["100"]},{"Key":"by 100","Fragments":["or","or","I","or","it","for","but","then","or"]},{"Key":"100 or","Fragments":["by","400,","is","400."]},{"Key":"or by","Fragments":["400"]},{"Key":"haven't put","Fragments":["in"]},{"Key":"put in","Fragments":["checks","comments","a","the"]},{"Key":"in checks","Fragments":["for"]},{"Key":"checks for","Fragments":["input","\"Let's\",","an","duplicated","divisible","nulls,","a","Isosceles","`null`"]},{"Key":"for input","Fragments":["validation"]},{"Key":"validation (negative","Fragments":["number"]},{"Key":"(negative number","Fragments":["or"]},{"Key":"or out","Fragments":["of"]},{"Key":"of range).","Fragments":["Probably"]},{"Key":"range). Probably","Fragments":["would"]},{"Key":"Probably would","Fragments":["want"]},{"Key":"to in","Fragments":["production.","php"]},{"Key":"in production.","Fragments":["I"]},{"Key":"production. I","Fragments":["didn't"]},{"Key":"didn't make","Fragments":["it","it"]},{"Key":"as compact","Fragments":["as"]},{"Key":"compact as","Fragments":["I"]},{"Key":"could because","Fragments":["the"]},{"Key":"because the","Fragments":["exercism","test","inner","```return```","layout","result","apostrophe","max","NUnit","markdown","first","TDD","seemed","Hamming","C#","triangle","tests","boolean","boolean"]},{"Key":"the exercism","Fragments":["example","crew.","fetch","UI."]},{"Key":"exercism example","Fragments":["showed"]},{"Key":"example showed","Fragments":["nitpicks"]},{"Key":"showed nitpicks","Fragments":["for"]},{"Key":"nitpicks for","Fragments":["commenting","the"]},{"Key":"for commenting","Fragments":["and","is"]},{"Key":"commenting and","Fragments":["ultra-easy"]},{"Key":"and ultra-easy","Fragments":["readability,"]},{"Key":"ultra-easy readability,","Fragments":["so"]},{"Key":"readability, so","Fragments":["I","I'm","for"]},{"Key":"I went","Fragments":["that","the","a","back","ahead","with","for","with","for","```int```-based?","with","for","along","pretty","so","so","ahead","with","back","with","ahead","with","down","with","with"]},{"Key":"went that","Fragments":["route."]},{"Key":"case I","Fragments":["am","assume","think","think","think","feel","had"]},{"Key":"sure you","Fragments":["are","don't","are"]},{"Key":"are correct.","Fragments":["There","Do","I","I"]},{"Key":"correct. There","Fragments":["is"]},{"Key":"a cost","Fragments":["to","(small"]},{"Key":"cost to","Fragments":["simplicity"]},{"Key":"to simplicity","Fragments":["if"]},{"Key":"simplicity if","Fragments":["you"]},{"Key":"you add","Fragments":["further","the","an","3*16^0","500,000,000"]},{"Key":"add further","Fragments":["layers."]},{"Key":"of \"Is\"","Fragments":["to"]},{"Key":"\"Is\" to","Fragments":["make"]},{"Key":"it read","Fragments":["clearer.","nicer.","better."]},{"Key":"read clearer.","Fragments":["Could"]},{"Key":"clearer. Could","Fragments":["this"]},{"Key":"Could this","Fragments":["be"]},{"Key":"this be","Fragments":["expanded?","better"]},{"Key":"try an","Fragments":["extension"]},{"Key":"method version","Fragments":["in"]},{"Key":"version in","Fragments":["order"]},{"Key":"order to","Fragments":["have","add","be","see","pass","see","avoid","force","test","focus","get","handle","get","systematically"]},{"Key":"the main","Fragments":["code","logic","Hey","method).","method","method","loop","condition.","method","ideas"]},{"Key":"main code","Fragments":["block"]},{"Key":"block read","Fragments":["more"]},{"Key":"read more","Fragments":["naturally.","like","like"]},{"Key":" While","Fragments":["writing","the","this","this","I","the","you","this","this","I","I","they","you","the","this","yes,","you","I","it","this","I","we're","I","you","it","I","there","you","this","clever","your","it"]},{"Key":"While writing","Fragments":["a"]},{"Key":"writing a","Fragments":["comment","comment","test,","driver","set","main"]},{"Key":"comment about","Fragments":["my","invalid","the"]},{"Key":"about my","Fragments":["previous","code?","unnecessary","approach"]},{"Key":"my previous","Fragments":["revision,","version...","problems","submission.","code","iterations","attempt","version.","implementation","comment/iteration,","solution"]},{"Key":"previous revision,","Fragments":["I"]},{"Key":"revision, I","Fragments":["realized"]},{"Key":"that adding","Fragments":["extension"]},{"Key":"adding extension","Fragments":["methods","methods"]},{"Key":"to string","Fragments":["was"]},{"Key":"string was","Fragments":["breaking","a","completely","all","more","millions"]},{"Key":"was breaking","Fragments":["SRP."]},{"Key":"breaking SRP.","Fragments":["A"]},{"Key":"SRP. A","Fragments":["string"]},{"Key":"A string","Fragments":["shouldn't","can"]},{"Key":"string shouldn't","Fragments":["know"]},{"Key":"shouldn't know","Fragments":["anything"]},{"Key":"know anything","Fragments":["about"]},{"Key":"anything about","Fragments":["whether,","validation.","DNA","it"]},{"Key":"about whether,","Fragments":["according"]},{"Key":"whether, according","Fragments":["to"]},{"Key":"to Bob,","Fragments":["a","perhaps."]},{"Key":"Bob, a","Fragments":["phrase"]},{"Key":"a phrase","Fragments":["is","that","contains"]},{"Key":"phrase is","Fragments":["yelling","empty/null/whitespace","a","null.","an"]},{"Key":"is yelling","Fragments":["or"]},{"Key":"yelling or","Fragments":["a"]},{"Key":"or a","Fragments":["question.","negative?","value","zero","negative","value","`ToString(\"000\")`","`ToString(\"000\")`","Z","of\u003cb\u003e","Tuple","dictionary","more","not","question","\"form","Regex","space.","space."]},{"Key":"a question.","Fragments":["This","The"]},{"Key":"question. This","Fragments":["led"]},{"Key":"This led","Fragments":["me"]},{"Key":"led me","Fragments":["to"]},{"Key":"to realize","Fragments":["that","i","is","that"]},{"Key":"realize that","Fragments":["I","this","all","Phrase","readability","it","in","a","there","at","and","my","this","I"]},{"Key":"I probably","Fragments":["needed","shouldn't","won't","would","went","could","would","wouldn't","mis-read","should"]},{"Key":"probably needed","Fragments":["a"]},{"Key":"needed a","Fragments":["message","web"]},{"Key":"a message","Fragments":["class,"]},{"Key":"message class,","Fragments":["rather"]},{"Key":"class, rather","Fragments":["than"]},{"Key":"than keeping","Fragments":["with"]},{"Key":"keeping with","Fragments":["my"]},{"Key":"with my","Fragments":["primitive","Match","data.","previous","\"db\".","own","approach?","\"db\".","regex.","own","solution"]},{"Key":"my primitive","Fragments":["obsession."]},{"Key":"primitive obsession.","Fragments":["This"]},{"Key":"obsession. This","Fragments":["feels"]},{"Key":"This feels","Fragments":["a"]},{"Key":"feels a","Fragments":["lot","bit","bit","little","little"]},{"Key":"lot better","Fragments":["now"]},{"Key":"better now","Fragments":["with"]},{"Key":"now with","Fragments":["a"]},{"Key":"a domain","Fragments":["class.","object."]},{"Key":"domain class.","Fragments":["Thanks"]},{"Key":"class. Thanks","Fragments":["@alexandrea."]},{"Key":"wasn't thinking","Fragments":["about"]},{"Key":"thinking about","Fragments":["the","it,","that","doing","that","this","it!).","other","loops,","creating","different","the","avoiding","it,","that.","implementation","Regex"]},{"Key":"the private","Fragments":["methods.","methods","method.","static","_Roster","`_roster`","field","set,","method","variable","enum"]},{"Key":"private methods.","Fragments":["I","But"]},{"Key":"guess with","Fragments":["extension"]},{"Key":"with extension","Fragments":["methods,"]},{"Key":"extension methods,","Fragments":["I","just","so"]},{"Key":"I get","Fragments":["a","extension","some","lazy","you","really","that","it","that","for","some"]},{"Key":"little paranoid","Fragments":["about"]},{"Key":"paranoid about","Fragments":["them"]},{"Key":"about them","Fragments":["leaking","and"]},{"Key":"them leaking","Fragments":["out"]},{"Key":"leaking out","Fragments":["into"]},{"Key":"out into","Fragments":["the","its","a","separate","IsShouting(string","two","multiple","a","a","its"]},{"Key":"the application.","Fragments":["I"]},{"Key":"application. I","Fragments":["guess"]},{"Key":"guess I've","Fragments":["never"]},{"Key":"never seen","Fragments":["a","double","a","\"p_\".","it.","it","NUnit"]},{"Key":"seen a","Fragments":["situation","couple","solution","\"p_\"","few","lot"]},{"Key":"a situation","Fragments":["where","where"]},{"Key":"situation where","Fragments":["that","it"]},{"Key":"where that","Fragments":["was","leads,","will","is"]},{"Key":"was a","Fragments":["problem,","bit","single","little","special","good","bit","little","bit","bit","non-static","letter)","very","reason","specific","great","year","leap","typo,","leap","little","call","sentence","nitpick","test","\"namespace","great","null","fun","higher","way","bit","`Date`","pretty","smart","complex","better","better","right","bigger","reasonable","bit","bit","lot","enumerator","good","terrible","question","little","problem","one","dumb"]},{"Key":"problem, though,","Fragments":["so"]},{"Key":"though, so","Fragments":["maybe","I","it"]},{"Key":"so maybe","Fragments":["my","not"]},{"Key":"maybe my","Fragments":["move"]},{"Key":"my move","Fragments":["was"]},{"Key":"move was","Fragments":["a"]},{"Key":"find the","Fragments":["nested","LINQ","\"rules\"","correct","composites","nested","various","last","compound","choice","GetAreaCode()","various","key","key","correct","right","code","```Queue```","shortest","closest","code","answer.","index","extra"]},{"Key":"the nested","Fragments":["if","if","if/else","*if*","if","ternary","ifs","query","ifs"]},{"Key":"nested if","Fragments":["statements","statement,","statements.","statements","statements","statements"]},{"Key":"statements quite","Fragments":["hard"]},{"Key":"quite hard","Fragments":["to","to"]},{"Key":"read (which","Fragments":["return"]},{"Key":"(which return","Fragments":["goes"]},{"Key":"return goes","Fragments":["with","with","with"]},{"Key":"goes with","Fragments":["which","which","which","which"]},{"Key":"with which","Fragments":["statement?!)","`if`","check.","check,"]},{"Key":"Consider reversing","Fragments":["one"]},{"Key":"reversing one","Fragments":["or"]},{"Key":"one or","Fragments":["two","two","not.","two","more","the"]},{"Key":"or two","Fragments":["to","variables","maximum.","lines,"]},{"Key":"two to","Fragments":["reduce","never"]},{"Key":"to reduce","Fragments":["nesting","it:","nesting,","one","nesting.","code","nesting.","nesting.","that","nesting"]},{"Key":"reduce nesting","Fragments":["eg","and","and","by"]},{"Key":"if (year%4","Fragments":["!=","!=","!="]},{"Key":"(year%4 !=","Fragments":["0)","0)","0)"]},{"Key":"if (year%100","Fragments":["==","!="]},{"Key":"(year%100 ==","Fragments":["0)"]},{"Key":"if (year%400","Fragments":["==","=="]},{"Key":"(year%400 ==","Fragments":["0)","0)","0);","0);"]},{"Key":" and","Fragments":["because","you","moving","do","you","breaking","you","year","you","finally","is","if","the","save","i'm","you","why","still","the","mixing"]},{"Key":"like well","Fragments":["named"]},{"Key":"private methods","Fragments":["I","so","should","and","not","instead","all","the"]},{"Key":"methods I","Fragments":["would","completely","used"]},{"Key":"also do","Fragments":["something","not","this","this"]},{"Key":"do something","Fragments":["like","wrong","like","more","like","along","like","like","like"]},{"Key":" private","Fragments":["bool","static","static","const","static","const","readonly","const","readonly","string","string","string","bool","unsafe","void","double","static","bool","static","static","static","void","readonly","static","static","int","int","static","static"]},{"Key":"private bool","Fragments":["isNotALeapYear(year)","IsYelling(string","IsEmpty(string"]},{"Key":"return year%4","Fragments":["!=","=="]},{"Key":"year%4 !=","Fragments":["0"]},{"Key":"I changed","Fragments":["the","it","it","the","the","it","the","it","somehow","the","the","the","the","the"]},{"Key":"changed the","Fragments":["variable","add","flow","test.","expression","testfile","declaration","type","logic","Can_parse_and_solve_subtraction_problems()","Can_parse_and_solve_subtraction_problems()","return"]},{"Key":"variable `isDivisible`","Fragments":["to"]},{"Key":"`isDivisible` to","Fragments":["`isLeapYear`,"]},{"Key":"to `isLeapYear`,","Fragments":["per"]},{"Key":"`isLeapYear`, per","Fragments":["suggestions."]},{"Key":"per suggestions.","Fragments":["`isDivisible`"]},{"Key":"suggestions. `isDivisible`","Fragments":["is"]},{"Key":"`isDivisible` is","Fragments":["absolutely"]},{"Key":"is absolutely","Fragments":["not","nothing"]},{"Key":"absolutely not","Fragments":["clear"]},{"Key":"not clear","Fragments":["enough,","enough...","what","to"]},{"Key":"clear enough,","Fragments":["given"]},{"Key":"enough, given","Fragments":["what"]},{"Key":"given what","Fragments":["I"]},{"Key":"am trying","Fragments":["to","to"]},{"Key":"2. I","Fragments":["broke","think","check","wanted","see","didn't","should","agree","try"]},{"Key":"I broke","Fragments":["each","it","IsSilence,"]},{"Key":"broke each","Fragments":["rule"]},{"Key":"each rule","Fragments":["out","can","makes"]},{"Key":"rule out","Fragments":["into"]},{"Key":"into its","Fragments":["own","own","own","own","own"]},{"Key":"its own","Fragments":["function.","method,","if","GUI","method,","function.","function,","function","function,","variable.","function","method","method","garbage","instance","type","method."]},{"Key":"own function.","Fragments":["This","For"]},{"Key":"function. This","Fragments":["makes"]},{"Key":"This makes","Fragments":["the","it","the","for","it","you"]},{"Key":"makes the","Fragments":["main","method","code","rules","code","tests","code","code","code","code","code","solution","regex","exception.","solution","lines","comment","`GIFTS.Skip(12","method","code","code","code","code","intent","intent","code","function","code","code","problem","other","regex","one","code"]},{"Key":"main logic","Fragments":["more"]},{"Key":"logic more","Fragments":["human-readable,","complex?"]},{"Key":"more human-readable,","Fragments":["plus"]},{"Key":"human-readable, plus","Fragments":["each"]},{"Key":"plus each","Fragments":["rule"]},{"Key":"rule can","Fragments":["now","be"]},{"Key":"can now","Fragments":["be"]},{"Key":"now be","Fragments":["unit","fully"]},{"Key":"be unit","Fragments":["tested."]},{"Key":"3. I","Fragments":["decided","don't","am","should","use"]},{"Key":"to wrap","Fragments":["the","other","it","my"]},{"Key":"wrap the","Fragments":["last","if","mod"]},{"Key":"the last","Fragments":["two","line.","presents","guard","statement.","conditional","line","of","three","verse","search","day","week","day","digit.","character","position","day","line.","multiple","week","test","3","gift.","step","character","newline","one,","line","test","word","word","apostrophe?!","unit","two","character","test","test","two","select."]},{"Key":"last two","Fragments":["rules","lines","test","digits"]},{"Key":"two rules","Fragments":["`!IsDivisibleByOneHundred(year)`","within"]},{"Key":"rules `!IsDivisibleByOneHundred(year)`","Fragments":["and"]},{"Key":"`!IsDivisibleByOneHundred(year)` and","Fragments":["`IsDivisibleByFourHundred(year)`"]},{"Key":"and `IsDivisibleByFourHundred(year)`","Fragments":["inside"]},{"Key":"`IsDivisibleByFourHundred(year)` inside","Fragments":["parentheses."]},{"Key":"inside parentheses.","Fragments":["From"]},{"Key":"parentheses. From","Fragments":["a"]},{"Key":"From a","Fragments":["pure","readability","haskell","naming"]},{"Key":"a pure","Fragments":["technical"]},{"Key":"pure technical","Fragments":["standpoint,"]},{"Key":"technical standpoint,","Fragments":["I"]},{"Key":"standpoint, I","Fragments":["did"]},{"Key":"do this.","Fragments":["However,","After","If","My","The"]},{"Key":"this. However,","Fragments":["I","I","I"]},{"Key":"However, I","Fragments":["believe","feel","try","thought","think","would","like","especially","think","was","strongly","wasn't","only","was","like"]},{"Key":"believe it","Fragments":["improves","will","would"]},{"Key":"it improves","Fragments":["readability","readability."]},{"Key":"improves readability","Fragments":["and"]},{"Key":"and brings","Fragments":["greater"]},{"Key":"brings greater","Fragments":["understanding"]},{"Key":"greater understanding","Fragments":["to"]},{"Key":"understanding to","Fragments":["the"]},{"Key":"the intent","Fragments":["of","that","of","of","of","more","a","a","a","slightly"]},{"Key":"intent of","Fragments":["the","the","the","the"]},{"Key":"the rules.","Fragments":["They"]},{"Key":"rules. They","Fragments":["appear"]},{"Key":"They appear","Fragments":["to"]},{"Key":"appear to","Fragments":["be","be.","be","follow","be","run","be","be","exist"]},{"Key":"be grouped","Fragments":["together","and","together,"]},{"Key":"grouped together","Fragments":["when"]},{"Key":"together when","Fragments":["written"]},{"Key":"when written","Fragments":["in"]},{"Key":"written in","Fragments":["English","one","VB.NET","only","the"]},{"Key":"in English","Fragments":["-","'A"]},{"Key":"English -","Fragments":["\"except"]},{"Key":"- \"except","Fragments":["every"]},{"Key":"\"except every","Fragments":["year"]},{"Key":"is even","Fragments":["divisible","more","slower,"]},{"Key":"even divisible","Fragments":["by"]},{"Key":"by 100,","Fragments":["unless","but","if","divisible"]},{"Key":"100, unless","Fragments":["the"]},{"Key":"by 400.\"","Fragments":["I"]},{"Key":"400.\" I","Fragments":["expressed"]},{"Key":"I expressed","Fragments":["this"]},{"Key":"expressed this","Fragments":["same","way."]},{"Key":"this same","Fragments":["grouping","method,"]},{"Key":"same grouping","Fragments":["using"]},{"Key":"grouping using","Fragments":["parentheses"]},{"Key":"using parentheses","Fragments":["and"]},{"Key":"parentheses and","Fragments":["putting"]},{"Key":"and putting","Fragments":["the","numeric"]},{"Key":"rules within","Fragments":["the"]},{"Key":"Thanks @wava","Fragments":["great"]},{"Key":"@wava great","Fragments":["input,"]},{"Key":"great input,","Fragments":["I"]},{"Key":"input, I","Fragments":["like","would"]},{"Key":"your suggestions","Fragments":["will","soon."]},{"Key":"suggestions will","Fragments":["implement"]},{"Key":"will implement","Fragments":["them","them","a"]},{"Key":"implement them","Fragments":["!","and"]},{"Key":" So,","Fragments":["I","I","I'm","using","I","thank","if","in","```.ToDictionary(group"]},{"Key":"So, I","Fragments":["was","interpreted","basically","passed"]},{"Key":"was actually","Fragments":["thinking","used","used","doing."]},{"Key":"actually thinking","Fragments":["that"]},{"Key":"thinking that","Fragments":["renaming","if","you","inlining","if","way","I"]},{"Key":"that renaming","Fragments":["the","the"]},{"Key":"renaming the","Fragments":["private","incoming","variables","`i`","private","parameters"]},{"Key":"methods so","Fragments":["they","they","+10"]},{"Key":"so they","Fragments":["read","can","could","can","are","are","can","can"]},{"Key":"they read","Fragments":["more","like"]},{"Key":"public methods","Fragments":["might","that"]},{"Key":"methods might","Fragments":["make"]},{"Key":"might make","Fragments":["it","it","it","it","this"]},{"Key":" AnyLetters","Fragments":["=\u003e"]},{"Key":"AnyLetters =\u003e","Fragments":["HasAnyLetters"]},{"Key":"Also I","Fragments":["don't","would","don't","might","prefer","agree","think","know"]},{"Key":"don't know","Fragments":["if","if","how","if","what","where","why","if","what","why","where","how","linq","what","how","much","that","about","the","if","that","I","the","if","if","any","how","if","that","if","if","about","that","how","what's","what","100%","the","C#"]},{"Key":"that extension","Fragments":["methods","methods","methods"]},{"Key":"methods violate","Fragments":["SRP."]},{"Key":"violate SRP.","Fragments":["They"]},{"Key":"SRP. They","Fragments":["aren't"]},{"Key":"They aren't","Fragments":["\"on\"","really"]},{"Key":"aren't \"on\"","Fragments":["string,"]},{"Key":"\"on\" string,","Fragments":["just"]},{"Key":"string, just","Fragments":["appear","that"]},{"Key":"just appear","Fragments":["to"]},{"Key":"to be.","Fragments":["That","Comments","You","But","Nice"]},{"Key":"be. That","Fragments":["being"]},{"Key":"being said,","Fragments":["the","C#"]},{"Key":"said, the","Fragments":["addition"]},{"Key":"the addition","Fragments":["of","of"]},{"Key":"addition of","Fragments":["the","the"]},{"Key":"the Message","Fragments":["class"]},{"Key":"Message class","Fragments":["does","or"]},{"Key":"class does","Fragments":["add"]},{"Key":"does add","Fragments":["additional"]},{"Key":"add additional","Fragments":["clarity.","checks","schedulers","lines"]},{"Key":" Ah","Fragments":["thanks.","that","thanks"]},{"Key":"Ah thanks.","Fragments":["Re:"]},{"Key":"thanks. Re:","Fragments":["Ternary"]},{"Key":"Re: Ternary","Fragments":["operator."]},{"Key":"Ternary operator.","Fragments":["Silly","It's"]},{"Key":"operator. Silly","Fragments":["I"]},{"Key":"Silly I","Fragments":["didnt"]},{"Key":"I didnt","Fragments":["see"]},{"Key":"didnt see","Fragments":["that."]},{"Key":" Mmm","Fragments":["i"]},{"Key":"Mmm i","Fragments":["did"]},{"Key":"did a","Fragments":["code","for","bit","binary","linq"]},{"Key":"a code","Fragments":["analysis","reviewer,"]},{"Key":"code analysis","Fragments":["and"]},{"Key":"analysis and","Fragments":["it"]},{"Key":"it recommended","Fragments":["that"]},{"Key":"recommended that","Fragments":["I"]},{"Key":"I capitalise","Fragments":["variables."]},{"Key":"capitalise variables.","Fragments":["I"]},{"Key":"variables. I","Fragments":["did"]},{"Key":"did actually","Fragments":["have"]},{"Key":"actually have","Fragments":["it","any","an","a","a","to","any"]},{"Key":"as `isLeap`","Fragments":["before."]},{"Key":"for your","Fragments":["feedback,","feedback!","feedback,","feedback,","ArgumentException","Leap.cs","feedback","insights,","opinion!","input!","comment","feedback","feedback.","chill","comments.","operands","feedback","data","comments,","feedback!","feedback,","list","feedback,","comments.","feedback!!","input","IsAllCaps()","feedback!","map.","input,","var","if","great","comments!","benefit","boolean","feedback,"]},{"Key":"your feedback,","Fragments":["I","it","i'll","thomaseyde.","davidmchris!","askingalot."]},{"Key":"feedback, I","Fragments":["will","really","was"]},{"Key":"will optimize","Fragments":["this","those"]},{"Key":"optimize this","Fragments":["code."]},{"Key":"Your else","Fragments":["is"]},{"Key":"true doesn't","Fragments":["happen"]},{"Key":"doesn't happen","Fragments":["you'll"]},{"Key":"happen you'll","Fragments":["always"]},{"Key":"you'll always","Fragments":["return"]},{"Key":"always return","Fragments":["false","a","in"]},{"Key":" Of","Fragments":["course","all","course,","course,","course","course,"]},{"Key":"Of course","Fragments":["you","LINQ","this","having","you","I","best"]},{"Key":"course you","Fragments":["can","would"]},{"Key":"just `return","Fragments":["IsDivisibleByFour(year)"]},{"Key":"`return IsDivisibleByFour(year)","Fragments":["\u0026\u0026...`"]},{"Key":"IsDivisibleByFour(year) \u0026\u0026...`","Fragments":["no"]},{"Key":"\u0026\u0026...` no","Fragments":["need"]},{"Key":"the variable...","Fragments":["but"]},{"Key":"variable... but","Fragments":["a"]},{"Key":"a minor","Fragments":["point!","thing","modification"]},{"Key":"I interpreted","Fragments":["Bob"]},{"Key":"interpreted Bob","Fragments":["being"]},{"Key":"Bob being","Fragments":["yelled"]},{"Key":"being yelled","Fragments":["at"]},{"Key":"yelled at","Fragments":["as","me"]},{"Key":"at as","Fragments":["a"]},{"Key":"a statement","Fragments":["where","evaluator","at"]},{"Key":"statement where","Fragments":["there"]},{"Key":"where there","Fragments":["is","is"]},{"Key":"is at","Fragments":["least","least","least","all","the"]},{"Key":"least one","Fragments":["letter","letter","uppercase","letter","lower"]},{"Key":"one letter","Fragments":["and","in"]},{"Key":"letter and","Fragments":["all","then","then","double/triple"]},{"Key":"and all","Fragments":["letters","have","the","the","of","rest","the"]},{"Key":"all letters","Fragments":["are","are","are","within"]},{"Key":"letters are","Fragments":["uppercase.","upper-case,","in","capitalized,","upper","sorted"]},{"Key":"are uppercase.","Fragments":["Checking","Also"]},{"Key":"uppercase. Checking","Fragments":["this"]},{"Key":"Checking this","Fragments":["with"]},{"Key":"with standard","Fragments":["LINQ"]},{"Key":"standard LINQ","Fragments":["statements"]},{"Key":"LINQ statements","Fragments":["would","into"]},{"Key":"statements would","Fragments":["result","make","reduce"]},{"Key":"would result","Fragments":["in","in","in","in"]},{"Key":"result in","Fragments":["one","possible","a","a","a","hard","0","worse","the","Transfrom()."]},{"Key":"in one","Fragments":["'All'","iteration","line,","and","place","function.","line,","go.","function","method.","call!","line,","expression","regex.","call.","line.","place","file.","line.","line.","pass.","place.","line","step.","place.","context","if","line.","method","go?","class","case","place","line.","if","given","pass.","line:"]},{"Key":"one 'All'","Fragments":["and"]},{"Key":"'All' and","Fragments":["one"]},{"Key":"one 'Any'","Fragments":["clause"]},{"Key":"'Any' clause","Fragments":["(please"]},{"Key":"clause (please","Fragments":["correct"]},{"Key":"(please correct","Fragments":["me"]},{"Key":"correct me","Fragments":["if","if"]},{"Key":"me if","Fragments":["I'm","the","GenerateRandomKey","I'm","I'm"]},{"Key":"if I'm","Fragments":["wrong).","looking","wrong).","supposed","wrong"]},{"Key":"I'm wrong).","Fragments":["In"]},{"Key":"wrong). In","Fragments":["the"]},{"Key":"the worst","Fragments":["case","cases","case","tests."]},{"Key":"worst case","Fragments":["that","does","this","of"]},{"Key":"case that","Fragments":["means","don't"]},{"Key":"that means","Fragments":["the","the","the","year","the"]},{"Key":"means the","Fragments":["program","second","method","actual","test","execution","comment","`Type`"]},{"Key":"program runs","Fragments":["two"]},{"Key":"runs two","Fragments":["times"]},{"Key":"two times","Fragments":["through"]},{"Key":"times through","Fragments":["the"]},{"Key":"the complete","Fragments":["string."]},{"Key":"complete string.","Fragments":["To"]},{"Key":"string. To","Fragments":["decide"]},{"Key":"To decide","Fragments":["in"]},{"Key":"decide in","Fragments":["one"]},{"Key":"one iteration","Fragments":["whether"]},{"Key":"iteration whether","Fragments":["both"]},{"Key":"whether both","Fragments":["predicates"]},{"Key":"both predicates","Fragments":["are"]},{"Key":"predicates are","Fragments":["fulfilled,"]},{"Key":"are fulfilled,","Fragments":["I"]},{"Key":"fulfilled, I","Fragments":["defined"]},{"Key":"I defined","Fragments":["the"]},{"Key":"defined the","Fragments":["'AnyAll'","function"]},{"Key":"the 'AnyAll'","Fragments":["method."]},{"Key":"A bad","Fragments":["thing"]},{"Key":"bad thing","Fragments":["here"]},{"Key":"thing here","Fragments":["is"]},{"Key":"two return","Fragments":["statements.","locations,"]},{"Key":"return statements.","Fragments":["However","Its","Its","In","It","I've"]},{"Key":"statements. However","Fragments":["it"]},{"Key":"However it","Fragments":["also"]},{"Key":"it also","Fragments":["points","forces","knows"]},{"Key":"also points","Fragments":["out"]},{"Key":"points out","Fragments":["the","that"]},{"Key":"two alternative","Fragments":["paths."]},{"Key":" ```","Fragments":["return","c#","C#","Does","C#","C#","Dictionary\u003cstring,"]},{"Key":"``` return","Fragments":["(year"]},{"Key":"return (year","Fragments":["%","%","%","%","%","%","%","%","%","%","%","%"]},{"Key":"== 0)","Fragments":["?",":","return","return","\u0026\u0026","return;","return;","check","is","returns","\u0026\u0026","||","return","||","\u0026\u0026","||","||","return","can"]},{"Key":"0) ?","Fragments":["(year"]},{"Key":"? (year","Fragments":["%"]},{"Key":"0) :","Fragments":["(year"]},{"Key":": (year","Fragments":["%"]},{"Key":"== 0);","Fragments":["```"]},{"Key":" but","Fragments":["the","will","I","it's"]},{"Key":"statements makes","Fragments":["it","code","code"]},{"Key":"it easyer","Fragments":["to","too","to"]},{"Key":"easyer to","Fragments":["see","predict","understand."]},{"Key":"can move","Fragments":["the","the"]},{"Key":"the check","Fragments":["if","for","for","directly","for","to","for","for","once","for","for","is","for","for","then","for","for","-","for","for"]},{"Key":"check if","Fragments":["it","the","the","it","the","the","the","the","kvp.Value","all","the","the","it","any","there","it","a","it","it","it","the","the","prime","the","the","the","c","a","any"]},{"Key":"400 up","Fragments":["so"]},{"Key":"up so","Fragments":["you"]},{"Key":"if statement,","Fragments":["it","not","and","and"]},{"Key":"statement, it","Fragments":["would"]},{"Key":"also be","Fragments":["helpful","affected.","possible","a","read","evaluated.","more","relatively","written","in","done"]},{"Key":"be helpful","Fragments":["to"]},{"Key":"helpful to","Fragments":["comment","have","my"]},{"Key":"to comment","Fragments":["on","(except","the","on","that","on"]},{"Key":"comment on","Fragments":["the","Regex","IsLeapYear.","sorting","your","the","my","it,","that.","what","previous"]},{"Key":" Readable,","Fragments":["I"]},{"Key":"Readable, I","Fragments":["like"]},{"Key":" One","Fragments":["final","thing","small","thing","suggestion,","method","suggestion","suggestion","suggestion","way","thing","suggestion","line","suggestion,","suggestion","other","thing,","thing","good","hint","thing","suggestion","can","option","more","note:","comment","thing","problem","thing","thing,","of","statement","shortcut","final","thing","thing","nitpick,","nitpick,","suggestion:","piece","way","other","day"]},{"Key":"One final","Fragments":["iteration,","suggestion."]},{"Key":"final iteration,","Fragments":["to"]},{"Key":"iteration, to","Fragments":["remove"]},{"Key":"remove unnecessary","Fragments":["`using`"]},{"Key":"unnecessary `using`","Fragments":["references."]},{"Key":"`using` references.","Fragments":["Also,"]},{"Key":"references. Also,","Fragments":["given"]},{"Key":"Also, given","Fragments":["that"]},{"Key":"the definition","Fragments":["of","of","of","of","of","for","needs"]},{"Key":"of \"leap","Fragments":["year\""]},{"Key":"\"leap year\"","Fragments":["is"]},{"Key":"year\" is","Fragments":["not"]},{"Key":"not likely","Fragments":["to","to"]},{"Key":"to change","Fragments":["anytime","them","my","IsSilence","that","the","my","my","the","them.","any","the","that.","the","`strings`","the","the","the","the","the","one","the","the","First,","Seconds,","_scrabblePointMap","it","then","your","the","'j'","you'd","it","these","it","the","them","from","to:","your"]},{"Key":"change anytime","Fragments":["soon,"]},{"Key":"anytime soon,","Fragments":["I"]},{"Key":"soon, I","Fragments":["eliminated"]},{"Key":"I eliminated","Fragments":["the"]},{"Key":"eliminated the","Fragments":["`isLeapYear`"]},{"Key":"the `isLeapYear`","Fragments":["variable,"]},{"Key":"`isLeapYear` variable,","Fragments":["opting"]},{"Key":"variable, opting","Fragments":["instead"]},{"Key":"opting instead","Fragments":["to"]},{"Key":"instead to","Fragments":["return","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","be"]},{"Key":"Can make","Fragments":["one","all","one","one","GetLetter()"]},{"Key":"make one","Fragments":["function","liner","big","method","function","function"]},{"Key":"function method","Fragments":["the","the","the"]},{"Key":"method the","Fragments":["other,","other,","other,"]},{"Key":"the other,","Fragments":["remember","just","or","but","I","remember","remember","equally"]},{"Key":"other, remember","Fragments":["DRY","DRY","DRY"]},{"Key":"A good,","Fragments":["simple"]},{"Key":"good, simple","Fragments":["flow."]},{"Key":"Having said","Fragments":["that,","that,","that,"]},{"Key":"said that,","Fragments":["I","I","your"]},{"Key":"that, I","Fragments":["just","still","think","think","think","think,"]},{"Key":"to know","Fragments":["how","what","counts...who","what","what","the","what","a","in","if","what","it.","where","what","if","what","if","the","whether"]},{"Key":"know how","Fragments":["you","to","to","efficient","or","to","to","to","many","anonymous","to","to.","to"]},{"Key":"you feel","Fragments":["about","it","that","that","like","my","that"]},{"Key":"feel about","Fragments":["not","this"]},{"Key":"about not","Fragments":["hardcoding","being","using","using"]},{"Key":"not hardcoding","Fragments":["numeric"]},{"Key":"hardcoding numeric","Fragments":["values.","values."]},{"Key":"is amazing","Fragments":["that","what"]},{"Key":"amazing that","Fragments":["such"]},{"Key":"that such","Fragments":["a"]},{"Key":"such a","Fragments":["small","micro","simple","simple","short","lightweight","string","simple","simple"]},{"Key":"a small","Fragments":["code","nit-pick:","class","error,","project","change","name","number","problem","problem.","point","inefficiency","case","test","prime","amount","piece"]},{"Key":"small code","Fragments":["test"]},{"Key":"code test","Fragments":["can"]},{"Key":"test can","Fragments":["bring","access"]},{"Key":"can bring","Fragments":["up"]},{"Key":"bring up","Fragments":["such"]},{"Key":"up such","Fragments":["differences"]},{"Key":"such differences","Fragments":["in"]},{"Key":"differences in","Fragments":["approach.","our"]},{"Key":" My","Fragments":["intent","second","bad.","first","second","first","only","only","only","regex","only","implementation","initial","opinion","solution","guess","goal","previous","direction","first","first","robots","commented","only","first","intention","first","biggest","Precious...","biggest","point","2nd","thinking","approach","first","reasoning","logic","tests","concern","only","only","previous","first","only"]},{"Key":"My intent","Fragments":["is"]},{"Key":"intent is","Fragments":["for","clear","clearly","pretty"]},{"Key":"is for","Fragments":["the","JavaScript).","B","debug..","I"]},{"Key":"to both","Fragments":["do","foreach","places"]},{"Key":"both do","Fragments":["the"]},{"Key":"the thing,","Fragments":["and"]},{"Key":"thing, and","Fragments":["explain","it"]},{"Key":"and explain","Fragments":["the","why"]},{"Key":"the what","Fragments":["and"]},{"Key":"what and","Fragments":["why"]},{"Key":"why of","Fragments":["the"]},{"Key":"the thing","Fragments":["(I","but","you"]},{"Key":"thing (I","Fragments":["have"]},{"Key":"not succeeded","Fragments":["here"]},{"Key":"succeeded here","Fragments":["perhaps!)"]},{"Key":"here perhaps!)","Fragments":["without"]},{"Key":"perhaps!) without","Fragments":["having"]},{"Key":"without having","Fragments":["to","to","a","to","to","to","to"]},{"Key":"having to","Fragments":["comment","hit","think.","make","reopen","mess","store","reverse","iterate","keep","count","change","worry","do","modify","do","look"]},{"Key":"comment (except","Fragments":["for"]},{"Key":"(except for","Fragments":["public"]},{"Key":"for public","Fragments":["methods","classes"]},{"Key":"methods that","Fragments":["are","would","describe","return","return","I","will","might","differ"]},{"Key":"are part","Fragments":["of","of","of"]},{"Key":"part of","Fragments":["an","the","your","your","an","the","a","the","the","C#'s","the","the","the","the","the","building","why","a","the","your","the","me","a","the","becoming","this","the","this,","the","the","the","that","the","the","SpaceAge","the","IEnumerable/Linq","the","the","the","the","what","the","the"]},{"Key":"an external","Fragments":["interface).","data","library,","class"]},{"Key":"Your `IsEvenlyDivisible`","Fragments":["method"]},{"Key":"`IsEvenlyDivisible` method","Fragments":["does"]},{"Key":"method does","Fragments":["the","briefly","without"]},{"Key":"does the","Fragments":["thing","nucleotide","job,","casting","exact","very","necessary","check"]},{"Key":"thing but","Fragments":["it","you","the","you"]},{"Key":"not explain","Fragments":["WHY"]},{"Key":"you care","Fragments":["if","about...","to"]},{"Key":"care if","Fragments":["something","there"]},{"Key":"if something","Fragments":["is","changes","requires","meets","is"]},{"Key":"something is","Fragments":["evenly","by","lost"]},{"Key":" (I","Fragments":["do","am","mean"]},{"Key":"(I do","Fragments":["think"]},{"Key":"do think","Fragments":["I","`IsLeap()`","your","this"]},{"Key":"think I","Fragments":["should","like","know","am","may","got","would","wouldn't","would","like","would","may","managed","would","somehow","will","would","like","prefer","had","went","need","will","would","need","need","learned"]},{"Key":"should still","Fragments":["have","be","use","work"]},{"Key":"still have","Fragments":["that","my","their","to","a","the","additional","to","to","the"]},{"Key":"that method","Fragments":["to","they","to","kind","return","is","also","does","in"]},{"Key":"the duplication","Fragments":["of"]},{"Key":"duplication of","Fragments":["`year"]},{"Key":"of `year","Fragments":["%"]},{"Key":"`year %","Fragments":["x","4","400","400","x","4","100","100","4","4","4","4`,","400"]},{"Key":"% x","Fragments":["=","==","=="]},{"Key":"x =","Fragments":["0`).","GetSomething()","0;"]},{"Key":"If I","Fragments":["could","wanted","recall","had","didn't","didn't","had","have","have","change","throw","do","can","had","get","do","wanted","were","can","were","go","HAD","have","had","asked","missed","had","had","were"]},{"Key":"have all","Fragments":["my","exit","the","the","the"]},{"Key":"all my","Fragments":["methods","sublists"]},{"Key":"my methods","Fragments":["be","using"]},{"Key":"methods be","Fragments":["one"]},{"Key":"line without","Fragments":["parameters"]},{"Key":"without parameters","Fragments":["I"]},{"Key":"parameters I","Fragments":["would"]},{"Key":"a happy","Fragments":["coder"]},{"Key":"happy coder","Fragments":[":)"]},{"Key":"Thanks again","Fragments":["for","for","for"]},{"Key":"again for","Fragments":["your","the","the","the","the","all"]},{"Key":"feedback, it","Fragments":["is"]},{"Key":"is great","Fragments":["to","fun!","you"]},{"Key":"great to","Fragments":["think","reduce"]},{"Key":"think about","Fragments":["ones","the","this?","matching","multithreading,","inverting","how","it","this","it.","is","it!","constants","my","using","reducing","performance","it","it.","this","creating","preventing","the","a","it.","it","it.","doing"]},{"Key":"about ones","Fragments":["own"]},{"Key":"ones own","Fragments":["prejudices!"]},{"Key":"own prejudices!","Fragments":["Now"]},{"Key":"prejudices! Now","Fragments":["if"]},{"Key":"Now if","Fragments":["only","I"]},{"Key":"if only","Fragments":["I"]},{"Key":"only I","Fragments":["could"]},{"Key":"could get","Fragments":["some","away","the","rid","a","away","rid","some"]},{"Key":"other assignments","Fragments":["to"]},{"Key":"assignments to","Fragments":["download"]},{"Key":"to download","Fragments":[":("]},{"Key":"download :(","Fragments":["for"]},{"Key":":( for","Fragments":["some"]},{"Key":"for some","Fragments":["reason","reason,","reason","reason","reason","reason.","reason","reason.","Linq,","utility","boilerplate","specific","overloads,"]},{"Key":"some reason","Fragments":["this","this","I","I","couldn't","I","that","I"]},{"Key":"reason this","Fragments":["is","occurred"]},{"Key":"one I","Fragments":["can","can't","used","like","created.","have"]},{"Key":"I compeltely","Fragments":["forgot"]},{"Key":"compeltely forgot","Fragments":["about"]},{"Key":"The `this`","Fragments":["parameter"]},{"Key":"`this` parameter","Fragments":["modifier"]},{"Key":"parameter modifier","Fragments":["makes"]},{"Key":"modifier makes","Fragments":["the"]},{"Key":"method an","Fragments":["extension"]},{"Key":"extension method,","Fragments":["and","now"]},{"Key":"method, and","Fragments":["gives","then"]},{"Key":"and gives","Fragments":["the"]},{"Key":"gives the","Fragments":["appearance","benefit","method","same"]},{"Key":"the appearance","Fragments":["of"]},{"Key":"appearance of","Fragments":["extending"]},{"Key":"of extending","Fragments":["the"]},{"Key":"extending the","Fragments":["implementation","String","regular","code"]},{"Key":"the implementation","Fragments":["of","simple","behind","details","notes","notes"]},{"Key":"implementation of","Fragments":["`int`,","```LowerAndSort```","Transform","the","Grade.","zip","DayOfWeek","it.","Regular","To().","sort"]},{"Key":"of `int`,","Fragments":["e.g."]},{"Key":"`int`, e.g.","Fragments":["`bool"]},{"Key":"e.g. `bool","Fragments":["isLeap"]},{"Key":"`bool isLeap","Fragments":["="]},{"Key":"isLeap =","Fragments":["2014.IsLeap();`.","true;","false;","(1900).IsLeap();"]},{"Key":"= 2014.IsLeap();`.","Fragments":["An"]},{"Key":"2014.IsLeap();`. An","Fragments":["extension"]},{"Key":"An extension","Fragments":["method"]},{"Key":"method feels","Fragments":["more"]},{"Key":"feels more","Fragments":["idiomatic","natural"]},{"Key":"more idiomatic","Fragments":["to","I","C#","C#.",":)"]},{"Key":"idiomatic to","Fragments":["me"]},{"Key":"me in","Fragments":["this","college","one","the","all","the","performance."]},{"Key":"Would definitely","Fragments":["leave"]},{"Key":"definitely leave","Fragments":["the"]},{"Key":"leave the","Fragments":["tests","extension","user","specifics"]},{"Key":"tests out","Fragments":["of"]},{"Key":"this (they'd","Fragments":["go"]},{"Key":"(they'd go","Fragments":["in"]},{"Key":"go in","Fragments":["a","the"]},{"Key":"separate assembly)","Fragments":["in"]},{"Key":"assembly) in","Fragments":["a"]},{"Key":"a real","Fragments":["project.","production","nit","world","programmer"]},{"Key":"real project.","Fragments":["I"]},{"Key":"project. I","Fragments":["left","wasted"]},{"Key":"left them","Fragments":["in"]},{"Key":"them in","Fragments":["the","one","my","the","a","case","the","uniform","one","separate","just","the","my","more","both","this"]},{"Key":"same file","Fragments":["for"]},{"Key":"file for","Fragments":["convenience,","the"]},{"Key":"for convenience,","Fragments":["as"]},{"Key":"convenience, as","Fragments":["I"]},{"Key":"am using","Fragments":["my","a","it"]},{"Key":"using my","Fragments":["macosx","own","version."]},{"Key":"my macosx","Fragments":["Mono"]},{"Key":"macosx Mono","Fragments":["toolchain"]},{"Key":"Mono toolchain","Fragments":["(command-line)"]},{"Key":"toolchain (command-line)","Fragments":["to"]},{"Key":"(command-line) to","Fragments":["try"]},{"Key":"try out","Fragments":["exercism.","some","NUnit","new"]},{"Key":" When","Fragments":["writing","I","that","I","I","the","the","I","I","accessing","throwing","you're","concatinating","you","comparing"]},{"Key":"When writing","Fragments":["on"]},{"Key":"writing on","Fragments":["a","the"]},{"Key":"a team,","Fragments":["I"]},{"Key":"team, I","Fragments":["follow"]},{"Key":"I follow","Fragments":["their"]},{"Key":"follow their","Fragments":["conventions"]},{"Key":"their conventions","Fragments":["for"]},{"Key":"conventions for","Fragments":["braces","these","c#?"]},{"Key":"for braces","Fragments":["on"]},{"Key":"braces on","Fragments":["single-statement"]},{"Key":"on single-statement","Fragments":["branches."]},{"Key":"single-statement branches.","Fragments":["I"]},{"Key":"branches. I","Fragments":["personally"]},{"Key":"personally prefer","Fragments":["to","LINQ","descriptive","early","to","using","to","to"]},{"Key":"to leave","Fragments":["them","them","it","it."]},{"Key":"leave them","Fragments":["without","out."]},{"Key":"them without","Fragments":["braces"]},{"Key":"without braces","Fragments":["if"]},{"Key":"braces if","Fragments":["they","they"]},{"Key":"they are","Fragments":["short","redundant","changed","visible","the","short","just","doing","indeed","expected","both","special)","multiples.","harder","not","compact,","equal","always","irrelevant","there.","not","not","parameters.","all","not","equal.","the","not,","the","replacing,","descriptive","unnecessary.","worth.","free","prime.","contradictory.","okay","being","different.","the","used","still","poorly","the","together","added","testing.","not"]},{"Key":"are short","Fragments":["enough","enough"]},{"Key":"short enough","Fragments":["to","to"]},{"Key":"to fit","Fragments":["on","on"]},{"Key":"fit on","Fragments":["the","the"]},{"Key":"same line","Fragments":["as","as","as","as","as","as","as"]},{"Key":"line as","Fragments":["the","the","the","the","the","the","the"]},{"Key":"the branch","Fragments":["keyword","keyword\""]},{"Key":"branch keyword","Fragments":["(`if`/`else`/`while`/`foreach`/etc)."]},{"Key":" Generally","Fragments":["I","speaking,","when"]},{"Key":"Generally I","Fragments":["agree"]},{"Key":"variable names.","Fragments":["I","`...Hundy`",";)","I"]},{"Key":"names. I","Fragments":["make","would","use","took","find"]},{"Key":"I make","Fragments":["exception","this"]},{"Key":"make exception","Fragments":["for"]},{"Key":"exception for","Fragments":["simple","trying","an","less","dna2","null"]},{"Key":"for simple","Fragments":["utility","checks","numbers"]},{"Key":"simple utility","Fragments":["functions"]},{"Key":"utility functions","Fragments":["that"]},{"Key":"functions that","Fragments":["involve","do","you","call","do","cascade"]},{"Key":"that involve","Fragments":["only"]},{"Key":"involve only","Fragments":["one"]},{"Key":"two variables","Fragments":["and","with"]},{"Key":"variables and","Fragments":["have","methods.","place","instead"]},{"Key":"a mathematical","Fragments":["nature.","proof"]},{"Key":" Refactoring","Fragments":["the"]},{"Key":"Refactoring the","Fragments":["evenly-divisible"]},{"Key":"the evenly-divisible","Fragments":["logic"]},{"Key":"evenly-divisible logic","Fragments":["is"]},{"Key":"logic is","Fragments":["theoretically","not","correct.","more","definitely","just","good,","functionally","to","good.","supposed","present","abstracted","structured","well","clear","not","then","quite"]},{"Key":"is theoretically","Fragments":["valid,"]},{"Key":"theoretically valid,","Fragments":["but"]},{"Key":"valid, but","Fragments":["it's"]},{"Key":"but it's","Fragments":["too","simple","very","considered","really","because","pretty","Linq","a","verbose,","the","generally","good","a"]},{"Key":"it's too","Fragments":["extreme","expensive.","much","much"]},{"Key":"too extreme","Fragments":["for"]},{"Key":"extreme for","Fragments":["my"]},{"Key":"for my","Fragments":["tastes.","taste...","formatting","variables.","version","grade","vague","taste,","IDE."]},{"Key":"my tastes.","Fragments":["Pragmatically"]},{"Key":"tastes. Pragmatically","Fragments":["speaking,"]},{"Key":"Pragmatically speaking,","Fragments":["refactoring"]},{"Key":"speaking, refactoring","Fragments":["costs"]},{"Key":"refactoring costs","Fragments":["time,"]},{"Key":"costs time,","Fragments":["and"]},{"Key":"time, and","Fragments":["I"]},{"Key":"this particular","Fragments":["refactoring","case,","app","exercise"]},{"Key":"particular refactoring","Fragments":["to"]},{"Key":"refactoring to","Fragments":["have","conform"]},{"Key":"have virtually","Fragments":["no"]},{"Key":"virtually no","Fragments":["benefit."]},{"Key":"no benefit.","Fragments":["Not"]},{"Key":"benefit. Not","Fragments":["a"]},{"Key":"good trade.","Fragments":["(I"]},{"Key":"trade. (I","Fragments":["realize"]},{"Key":"(I realize","Fragments":["as"]},{"Key":"realize as","Fragments":["well"]},{"Key":"well that","Fragments":["it"]},{"Key":"was in","Fragments":["the","the","vain.","production"]},{"Key":"the example","Fragments":["for","is","of","509","given"]},{"Key":"example for","Fragments":["this"]},{"Key":"feedback and","Fragments":["for","that","I"]},{"Key":"and for","Fragments":["helping","the","you","some","the","```score```","loops"]},{"Key":"for helping","Fragments":["me","me"]},{"Key":"helping me","Fragments":["experience","get","learn!","on","learn."]},{"Key":"me experience","Fragments":["this"]},{"Key":"experience this","Fragments":["interesting"]},{"Key":"this interesting","Fragments":["site.","and"]},{"Key":"good (to","Fragments":["me!)"]},{"Key":" Though","Fragments":["private","you"]},{"Key":"Though private","Fragments":["methods"]},{"Key":"methods should","Fragments":["be","be","have","be"]},{"Key":"be capitalised","Fragments":[":D"]},{"Key":"other calculations","Fragments":["being"]},{"Key":"calculations being","Fragments":["in"]},{"Key":"being in","Fragments":["their"]},{"Key":"their own","Fragments":["methods...","thing.","methods","methods","methods.","styles,","random","methods.","variables","loop)"]},{"Key":"own methods...","Fragments":["Not"]},{"Key":"methods... Not","Fragments":["everyone"]},{"Key":"everyone agrees","Fragments":["with"]},{"Key":"agrees with","Fragments":["this"]},{"Key":"with this","Fragments":["though","solution.","code","code","one.","one","is","while","implementation,","one","and","simple,","line","method.","project.","solution.","solution,","exercise","console","solution","arrangement.","arrangement.","exercism.","route.","instead.","being"]},{"Key":"this though","Fragments":[";)"]},{"Key":"Another final","Fragments":["submission."]},{"Key":"final submission.","Fragments":[":)"]},{"Key":"submission. :)","Fragments":["After"]},{"Key":":) After","Fragments":["reading"]},{"Key":"After reading","Fragments":["another","a","through","some","your"]},{"Key":"reading another","Fragments":["conversation,"]},{"Key":"another conversation,","Fragments":["I"]},{"Key":"conversation, I","Fragments":["decided"]},{"Key":"to consolidate","Fragments":["my"]},{"Key":"consolidate my","Fragments":["three"]},{"Key":"my three","Fragments":["`IsDivisibleBy...`"]},{"Key":"three `IsDivisibleBy...`","Fragments":["functions"]},{"Key":"`IsDivisibleBy...` functions","Fragments":["into"]},{"Key":"functions into","Fragments":["one","extension"]},{"Key":"I struggled","Fragments":["with","to","with","with"]},{"Key":"the function.","Fragments":["At","There","It","The"]},{"Key":"function. At","Fragments":["first,"]},{"Key":"At first,","Fragments":["I","I"]},{"Key":"first, I","Fragments":["thought","was"]},{"Key":"thought of","Fragments":["`IsEvenlyDivisible`,","how","trying","that.","maybe","extensions","that","that.","as","that!","that!","this","doing","it","your","that,","sorting","were"]},{"Key":"of `IsEvenlyDivisible`,","Fragments":["given"]},{"Key":"`IsEvenlyDivisible`, given","Fragments":["that"]},{"Key":"that that","Fragments":["is","is"]},{"Key":"the language","Fragments":["given","flows","uses","supported","constructs"]},{"Key":"language given","Fragments":["in"]},{"Key":"given in","Fragments":["the"]},{"Key":"the README.md","Fragments":["file."]},{"Key":"README.md file.","Fragments":["However,"]},{"Key":"file. However,","Fragments":["I"]},{"Key":"feel that","Fragments":["more","there's","this","`convo`","introducing","multiple","I","assigning","this","it's","doing","this","it","the"]},{"Key":"that more","Fragments":["concisely,","difficult","accurately","readable?"]},{"Key":"more concisely,","Fragments":["I'm"]},{"Key":"concisely, I'm","Fragments":["asking,"]},{"Key":"I'm asking,","Fragments":["\"Is"]},{"Key":"asking, \"Is","Fragments":["this","the"]},{"Key":"\"Is this","Fragments":["number","year","a"]},{"Key":"this number","Fragments":["a"]},{"Key":"number a","Fragments":["multiple","value"]},{"Key":"a multiple","Fragments":["of","of","of","of","of","of'\u003c/em\u003e","of","of"]},{"Key":"multiple of","Fragments":["this","1/100/400\"?","400,","3","3","\u003cb\u003egiven","ruleNumber.Key,","2,"]},{"Key":"this number?\"","Fragments":["Thus,"]},{"Key":"number?\" Thus,","Fragments":["`IsMultiple`."]},{"Key":"is still","Fragments":["very","fine.","called","\"1,","easy","not","not","empty?","readable","faster","statically","readable","slower","no","externally","directly"]},{"Key":"still very","Fragments":["human-readable,"]},{"Key":"very human-readable,","Fragments":["while"]},{"Key":"human-readable, while","Fragments":["also"]},{"Key":"while also","Fragments":["not","putting"]},{"Key":"also not","Fragments":["being","very","a","a","too","true","understanding"]},{"Key":"not being","Fragments":["too","used","used,","able"]},{"Key":"being too","Fragments":["verbose."]},{"Key":" What","Fragments":["is","do","I'm","would","is","trade-offs","drove","is","would","happens","happens","happens","happens","happens","happens","happens","is","happens","if","this","do","does","happens","can","about","guarantee","happens","is","is","is","about","happens","about","happens","that","would","I","do","about","happens"]},{"Key":"What is","Fragments":["the","someone","the","wrong","`TE`?","it","wrong","this","the","the"]},{"Key":"the rationale","Fragments":["behind"]},{"Key":"rationale behind","Fragments":["having"]},{"Key":"behind having","Fragments":["multiple"]},{"Key":"having multiple","Fragments":["`return`s?","returns,","returns","returns","return"]},{"Key":"multiple `return`s?","Fragments":["I"]},{"Key":"`return`s? I","Fragments":["find"]},{"Key":"single `return`","Fragments":["makes","law"]},{"Key":"`return` makes","Fragments":["the"]},{"Key":"code easier","Fragments":["to","to","to","to","by","to","to","to","to","to"]},{"Key":" Going","Fragments":["hand"]},{"Key":"Going hand","Fragments":["in"]},{"Key":"hand in","Fragments":["hand","debug"]},{"Key":"in hand","Fragments":["with"]},{"Key":"hand with","Fragments":["that"]},{"Key":"with that","Fragments":["idea,","sentiment.","process.","syntax.","in","thinking","method.","idea."]},{"Key":"that idea,","Fragments":["remember"]},{"Key":"idea, remember","Fragments":["that"]},{"Key":"remember that","Fragments":["your","for","for","C#"]},{"Key":"that your","Fragments":["return","unit","expectation","rejected","name","algorithm","code","implementation","final","going","input","3"]},{"Key":"return value","Fragments":["is","should","and","and","if","like","a","a","you"]},{"Key":"value is","Fragments":["a","evenly","exclusive,","a","0","a","0","changed.","close"]},{"Key":"a Boolean.","Fragments":["An"]},{"Key":"Boolean. An","Fragments":["`if`"]},{"Key":"An `if`","Fragments":["statement"]},{"Key":"`if` statement","Fragments":["is","itself."]},{"Key":"a Boolean","Fragments":["expression.","value"]},{"Key":"Boolean expression.","Fragments":["Thus,"]},{"Key":"expression. Thus,","Fragments":["instead"]},{"Key":"Thus, instead","Fragments":["of"]},{"Key":"0) return","Fragments":["true;","false;","true;","false;","true;","true;","true;"]},{"Key":"return year%400","Fragments":["==","==","=="]},{"Key":"(I am","Fragments":["using","totally"]},{"Key":"using a","Fragments":["simplified","QuickSort","predicate","local","switch,","namespace","switch/case","switch","Trim()","whitelist","ToUpper()","Dictionary","do...while","new","(pretty)","mixture","different","switch","Regex.Match","for","HashSet","Dictionary","list","UsedNames","stored","modulo","simple","SortedSet","Dictionary","switch","two","HashSet","readonly","list","recent","delegate","string","List","recursion","custom","StringBuilder","`List\u003cstring\u003e`","ref","void","static","method","simple","generator","```foreach```","lookup","flagged","flagged","Regex,","while","generator?","turniary","Tuple","foreach","number"]},{"Key":"a simplified","Fragments":["example;"]},{"Key":"simplified example;","Fragments":["your"]},{"Key":"example; your","Fragments":["return"]},{"Key":"statement would","Fragments":["combine","eliminate"]},{"Key":"would combine","Fragments":["your"]},{"Key":"combine your","Fragments":["two","`if`","ifs"]},{"Key":"your two","Fragments":["`if`","random"]},{"Key":"two `if`","Fragments":["expressions"]},{"Key":"`if` expressions","Fragments":["into"]},{"Key":"expressions into","Fragments":["a","a"]},{"Key":" Otherwise,","Fragments":["it","this","it","it","you","it"]},{"Key":"Otherwise, it","Fragments":["looks","looks","look","looks","is","gets"]},{"Key":"looks very","Fragments":["concise!","good.","long","readable","compact","inefficient."]},{"Key":" @adriana","Fragments":["that's"]},{"Key":"@adriana that's","Fragments":["when"]},{"Key":"that's when","Fragments":["comments"]},{"Key":"when comments","Fragments":["comes"]},{"Key":"comments comes","Fragments":["in"]},{"Key":"comes in","Fragments":["handy."]},{"Key":"in handy.","Fragments":["In"]},{"Key":"handy. In","Fragments":["real"]},{"Key":"In real","Fragments":["dev","life"]},{"Key":"real dev","Fragments":["environment"]},{"Key":"dev environment","Fragments":["scenario"]},{"Key":"environment scenario","Fragments":["you"]},{"Key":"scenario you","Fragments":["can't"]},{"Key":"can't always","Fragments":["be"]},{"Key":"always be","Fragments":["expected","true?","some","true."]},{"Key":"be expected","Fragments":["to"]},{"Key":"expected to","Fragments":["write","build","be","occur","be"]},{"Key":"write efficient","Fragments":["and"]},{"Key":"efficient and","Fragments":["readable","is","tidier.","readable","readable??"]},{"Key":"and readable","Fragments":["codes","I","code.","is","but","solution","solution!","but"]},{"Key":"readable codes","Fragments":["all"]},{"Key":"codes all","Fragments":["the"]},{"Key":"the time","Fragments":["and","in","to","to","it","I","to","off.","I","for","you're","portion.","-","but","you","you","and","information","to","I","to"]},{"Key":"time and","Fragments":["a","I","brain","just","comment,"]},{"Key":"of times","Fragments":["coding","I","a","we"]},{"Key":"times coding","Fragments":["conventions"]},{"Key":"coding conventions","Fragments":["and","for","are"]},{"Key":"conventions and","Fragments":["best"]},{"Key":"and best","Fragments":["practices"]},{"Key":"best practices","Fragments":["are"]},{"Key":"practices are","Fragments":["overlooked."]},{"Key":"are overlooked.","Fragments":["That"]},{"Key":"overlooked. That","Fragments":["is"]},{"Key":"That is","Fragments":["the","true,","nice!","a","quite","a","fine,","how","because","some","essentially","a","probably","essentially","almost","personal","an","correct.","about","a","a","5.6","the","better","why","the","one","one","an","the"]},{"Key":"the purpose","Fragments":["of","of","of"]},{"Key":"purpose of","Fragments":["code","the","the"]},{"Key":"code reviews","Fragments":["-"]},{"Key":"reviews -","Fragments":["both"]},{"Key":"- both","Fragments":["the"]},{"Key":"both the","Fragments":["reviewer","length","try","CLR"]},{"Key":"the reviewer","Fragments":["and"]},{"Key":"reviewer and","Fragments":["the"]},{"Key":"the author","Fragments":["aims","a"]},{"Key":"author aims","Fragments":["to"]},{"Key":"aims to","Fragments":["increase"]},{"Key":"to increase","Fragments":["code","readability.","readability","the","values"]},{"Key":"increase code","Fragments":["quality."]},{"Key":"code quality.","Fragments":["You"]},{"Key":"quality. You","Fragments":["can"]},{"Key":"can put","Fragments":["a","the","```i"]},{"Key":"comment at","Fragments":["the","some"]},{"Key":"the top","Fragments":["part","of","of","of","right","of","of","of","of","of","of","of","of","you","of","for","means","of","and","level"]},{"Key":"top part","Fragments":["of"]},{"Key":"code and","Fragments":["explain","it's","at","just","have","simplified","it","thought","how","make","you","removed","formatted","intelligible","debug,","documentation","for","comments","having","compared","it","could","avoiding","make","ran","they","I","smallest","I","actually","reduces","suffer","now","make","the"]},{"Key":"explain why","Fragments":["it's"]},{"Key":"why it's","Fragments":["there","not","a"]},{"Key":"it's there","Fragments":["and","for!"]},{"Key":"there and","Fragments":["everyone","this","do"]},{"Key":"and everyone","Fragments":["should"]},{"Key":"everyone should","Fragments":["be"]},{"Key":"be happy","Fragments":["with"]},{"Key":"not writing","Fragments":["obviously","good"]},{"Key":"writing obviously","Fragments":["crappy"]},{"Key":"obviously crappy","Fragments":["code."]},{"Key":"crappy code.","Fragments":["For"]},{"Key":"code. For","Fragments":["me,"]},{"Key":"For me,","Fragments":["I'd","critical","seeing"]},{"Key":"me, I'd","Fragments":["rather"]},{"Key":"I'd rather","Fragments":["see","trust","see"]},{"Key":"rather see","Fragments":["a","each","an"]},{"Key":"see a","Fragments":["comment","class","better","couple","nice","justiication","DLL","call","lot","solution","need","lot","different","small","similar","reference","requirement","requirement","much","defined","for/while/do"]},{"Key":"comment than","Fragments":["3"]},{"Key":"than 3","Fragments":["duplicate","conditions","symbols,"]},{"Key":"3 duplicate","Fragments":["codes."]},{"Key":" By","Fragments":["the","definition,","being","checking"]},{"Key":"By the","Fragments":["way"]},{"Key":"way just","Fragments":["be"]},{"Key":"just be","Fragments":["careful","`[^a-z0-9']`.","pulled","IsNullOrEmpty.","\u003ccode\u003eint","all"]},{"Key":"be careful","Fragments":["with","when","to"]},{"Key":"careful with","Fragments":["hardcoding"]},{"Key":"with hardcoding","Fragments":["numeric"]},{"Key":"numeric values.","Fragments":["Not"]},{"Key":"values. Not","Fragments":["a"]},{"Key":"of developers","Fragments":["prefer"]},{"Key":"developers prefer","Fragments":["that."]},{"Key":" 'else's","Fragments":["after"]},{"Key":"'else's after","Fragments":["a"]},{"Key":"after a","Fragments":["clause","false","if-return","if-return","If-Return","if-return","trim","single","if-return","if-return","lot","`return`,","while","word.","trivial"]},{"Key":"a clause","Fragments":["with"]},{"Key":"clause with","Fragments":["a"]},{"Key":"a return","Fragments":["in","statement","statement","statement,","variable","value.","is","statement","statement-","statement"]},{"Key":"return in","Fragments":["it","the","WordCount().","a","a"]},{"Key":"in it","Fragments":["are","called","(aside"]},{"Key":"it are","Fragments":["redundant.","upper"]},{"Key":"are redundant.","Fragments":["I"]},{"Key":"redundant. I","Fragments":["usually"]},{"Key":"usually forgo","Fragments":["the"]},{"Key":"forgo the","Fragments":["braces"]},{"Key":"the braces","Fragments":["around","for"]},{"Key":"braces around","Fragments":["single","even","single","all","if","any"]},{"Key":"around single","Fragments":["return","line"]},{"Key":"but that's","Fragments":["personal","a","such","me.","nitpicking","an","fine","not","difficult","probably","probably"]},{"Key":"that's personal","Fragments":["preference."]},{"Key":" IsDivisibleBy","Fragments":["is","is"]},{"Key":"IsDivisibleBy is","Fragments":["probably","not"]},{"Key":"probably overkill","Fragments":["in","for"]},{"Key":"overkill in","Fragments":["real","this","this"]},{"Key":"in real","Fragments":["life,","code","code","DNA","world","life."]},{"Key":"real life,","Fragments":["most"]},{"Key":"life, most","Fragments":["developers"]},{"Key":"most developers","Fragments":["recognize"]},{"Key":"developers recognize","Fragments":["x%y"]},{"Key":"recognize x%y","Fragments":["=="]},{"Key":"x%y ==","Fragments":["0"]},{"Key":"0 on","Fragments":["sight."]},{"Key":"on sight.","Fragments":["If"]},{"Key":"sight. If","Fragments":["you"]},{"Key":"really want","Fragments":["to","to","as","to","is","to","all"]},{"Key":"do it,","Fragments":["it's","but"]},{"Key":"it, it's","Fragments":["a","not","much"]},{"Key":"it's a","Fragments":["nice","great","good","little","bad","little","statically","problem","little","programmer","little","letter!","bit","matter","trade","succint","function","requirement","Leap","leap","little","bit","relatively","boolean","bit"]},{"Key":"a nice","Fragments":["place","test","complete","visual","trick","addition.","look","function","way","speed","idea","linq"]},{"Key":"nice place","Fragments":["for"]},{"Key":"place for","Fragments":["an","it.","speedup.","most"]},{"Key":"for an","Fragments":["extension","IDictionary).","Ascii","invalid","integer","all-uppercase","example.","invalid","'if'","object,","integral","if-else","example","example","entirely","example.","index,","IEnumerable"]},{"Key":"method instead,","Fragments":["it'll","actually"]},{"Key":"instead, it'll","Fragments":["read"]},{"Key":"it'll read","Fragments":["nicely."]},{"Key":"a readable","Fragments":["as","way,","manner."]},{"Key":"would like.","Fragments":["If"]},{"Key":"like. If","Fragments":["there"]},{"Key":"If there","Fragments":["were","are","were","is","is","is","was","were","was","is","were","is"]},{"Key":"there were","Fragments":["more","one","to","ever","hundreds","many","guidelines"]},{"Key":"were more","Fragments":["than","convoluted"]},{"Key":"more than","Fragments":["3","spaces","just","often","99%","one","one","one","one","half","one","once","half","one","they","a","once.","just","you","one","the","it","four","once,","anything;","an","once.","one","fast","one","one","helped.","once)","one","I","slightly","one"]},{"Key":"3 conditions","Fragments":["I"]},{"Key":"conditions I","Fragments":["would"]},{"Key":"probably break","Fragments":["this"]},{"Key":"break this","Fragments":["down"]},{"Key":"this down","Fragments":["using","further"]},{"Key":"down using","Fragments":["if"]},{"Key":"My second","Fragments":["iteration","is","iteration"]},{"Key":"second iteration","Fragments":["is","is","I've","passes","version","at","coming","but","that","uses","no"]},{"Key":"iteration is","Fragments":["a","much","looking","the","nice","much","pretty","more","interesting"]},{"Key":"bit better,","Fragments":["taking"]},{"Key":"better, taking","Fragments":["out"]},{"Key":"taking out","Fragments":["the","comments,","or"]},{"Key":"the superfluous","Fragments":["code.","second","`using`","IsNullOrEmpty","stuff?"]},{"Key":"superfluous code.","Fragments":["By"]},{"Key":"code. By","Fragments":["no"]},{"Key":"By no","Fragments":["means"]},{"Key":"no means","Fragments":["perfect,","required"]},{"Key":"means perfect,","Fragments":["i"]},{"Key":"perfect, i","Fragments":["think"]},{"Key":"i think","Fragments":["the","of","the"]},{"Key":"logic implemented","Fragments":["was"]},{"Key":"implemented was","Fragments":["easier"]},{"Key":"was easier","Fragments":["to","for"]},{"Key":"write than","Fragments":["it"]},{"Key":"than it","Fragments":["is","should","is","needs","could","helps.","needs","needs","needed","needs","has"]},{"Key":"like these","Fragments":["two","are"]},{"Key":"these two","Fragments":["implementations"]},{"Key":"two implementations","Fragments":["best."]},{"Key":" **Lovely","Fragments":["IsDivisible"]},{"Key":"**Lovely IsDivisible","Fragments":["method"]},{"Key":" Currently,","Fragments":["I"]},{"Key":"Currently, I","Fragments":["feel"]},{"Key":"feel happy","Fragments":["with"]},{"Key":"The main","Fragments":["thing","thing","task"]},{"Key":"main thing","Fragments":["I","I'd"]},{"Key":"have considered","Fragments":["changing"]},{"Key":"considered changing","Fragments":["is"]},{"Key":"changing is","Fragments":["the"]},{"Key":"the fact","Fragments":["that","that","that","that","the","that","that","that","that","that","that","that"]},{"Key":"fact that","Fragments":["I","\"IsInvalidPhoneNumber\"","I","this","you","strings","I","string","both","it","tests","EmptyString","it"]},{"Key":"I currently","Fragments":["use","do","fail"]},{"Key":"currently use","Fragments":["literals"]},{"Key":"use literals","Fragments":["when"]},{"Key":"literals when","Fragments":["testing"]},{"Key":"when testing","Fragments":["for"]},{"Key":"testing for","Fragments":["the"]},{"Key":"the divisor","Fragments":["(`IsDivisibleBy(year,","checks"]},{"Key":"divisor (`IsDivisibleBy(year,","Fragments":["*400*`)."]},{"Key":"(`IsDivisibleBy(year, *400*`).","Fragments":["If"]},{"Key":"*400*`). If","Fragments":["I"]},{"Key":"year rules","Fragments":["more"]},{"Key":"rules more","Fragments":["expressive,"]},{"Key":"more expressive,","Fragments":["I","I","the","but"]},{"Key":"expressive, I","Fragments":["might","think."]},{"Key":"have moved","Fragments":["them"]},{"Key":"moved them","Fragments":["to"]},{"Key":"them to","Fragments":["`const`","mine","take","get","the","delimit","each","the"]},{"Key":"to `const`","Fragments":["values."]},{"Key":"The reason","Fragments":["I","being","I","I","being","I","I"]},{"Key":"reason I","Fragments":["chose","thought","decided","like","made","felt","use","prefer","didn't","thought"]},{"Key":"chose a","Fragments":["`long`"]},{"Key":"a `long`","Fragments":["over"]},{"Key":"`long` over","Fragments":["an"]},{"Key":"over an","Fragments":["`int`","anonymous"]},{"Key":"an `int`","Fragments":["was"]},{"Key":"`int` was","Fragments":["because"]},{"Key":"was because","Fragments":["I","my","\u003ccode\u003eConcat\u003c/code\u003e"]},{"Key":"felt it","Fragments":["would","made","was"]},{"Key":"more future-proof","Fragments":["and"]},{"Key":"future-proof and","Fragments":["less"]},{"Key":"and less","Fragments":["likely","verbose.","possible","readable.","readable","readable","error"]},{"Key":"less likely","Fragments":["to"]},{"Key":"to illicit","Fragments":["overflow"]},{"Key":"illicit overflow","Fragments":["errors,"]},{"Key":"overflow errors,","Fragments":["since"]},{"Key":"errors, since","Fragments":["`int`"]},{"Key":"since `int`","Fragments":["has"]},{"Key":"`int` has","Fragments":["an"]},{"Key":"an implicit","Fragments":["conversion","default"]},{"Key":"implicit conversion","Fragments":["to"]},{"Key":"conversion to","Fragments":["`long`."]},{"Key":"I first","Fragments":["considered","read","tried","strip"]},{"Key":"first considered","Fragments":["smashing"]},{"Key":"considered smashing","Fragments":["this"]},{"Key":"smashing this","Fragments":["into"]},{"Key":"this into","Fragments":["one","a","a","two"]},{"Key":"one long","Fragments":["return"]},{"Key":"long return","Fragments":["statement,"]},{"Key":"return statement,","Fragments":["until","makes","the","so","do","but"]},{"Key":"statement, until","Fragments":["I"]},{"Key":"until I","Fragments":["realized","saw","changed","had","looked","got","saw","reach","realised"]},{"Key":"realized how","Fragments":["unreadable","much"]},{"Key":"how unreadable","Fragments":["it"]},{"Key":"unreadable it","Fragments":["would"]},{"Key":"have been.","Fragments":["It"]},{"Key":"been. It","Fragments":["was"]},{"Key":"It was","Fragments":["for","simply","the","eye","the","fun","failing","a"]},{"Key":"was for","Fragments":["this","and"]},{"Key":"this reason","Fragments":["that"]},{"Key":"reason that","Fragments":["I","never"]},{"Key":"I refactored","Fragments":["the","into","the"]},{"Key":"refactored the","Fragments":["divisor","test"]},{"Key":"divisor checks","Fragments":["into"]},{"Key":"checks into","Fragments":["a","well"]},{"Key":"separate `IsDivisibleBy`","Fragments":["method."]},{"Key":"last thing","Fragments":["I"]},{"Key":"decided was","Fragments":["to"]},{"Key":"was to","Fragments":["include","check","just","terse","check","return","create","manage","attempt","check","not","save","condense","use","attempt","filter","return","try","get","\"Write","have","use","use","use"]},{"Key":"include xmldoc","Fragments":["on"]},{"Key":"xmldoc on","Fragments":["my"]},{"Key":"on my","Fragments":["public","WriteLine","own,","list.","machine","machine","first","comments","first","solution.","Sum","first","discrete","name","code","Exception","own","semantics,","pi...","brain.","limited","behalf,","own","computer","work","local"]},{"Key":"my public","Fragments":["methods,"]},{"Key":"public methods,","Fragments":["basically","IsLeap"]},{"Key":"methods, basically","Fragments":["integrating"]},{"Key":"basically integrating","Fragments":["the"]},{"Key":"integrating the","Fragments":["readme"]},{"Key":"readme into","Fragments":["the"]},{"Key":" Changed","Fragments":["return","it","to","\"counter\"","implementation","gigasecond","approach"]},{"Key":"Changed return","Fragments":["from"]},{"Key":"return from","Fragments":["Object","a","any"]},{"Key":"from Object","Fragments":["to"]},{"Key":"Object to","Fragments":["bool"]},{"Key":"to bool","Fragments":["and"]},{"Key":"bool and","Fragments":["int","Boolean"]},{"Key":"and int","Fragments":["i"]},{"Key":"int i","Fragments":["to"]},{"Key":"i to","Fragments":["int"]},{"Key":"to int","Fragments":["year","comparison","in"]},{"Key":"int year","Fragments":["for","="]},{"Key":"year for","Fragments":["better","leaping","this","this","leap"]},{"Key":"for better","Fragments":["readability","readability.","way"]},{"Key":"do my","Fragments":["example","formatting","own"]},{"Key":"my example","Fragments":["as"]},{"Key":"example as","Fragments":["much"]},{"Key":"as much","Fragments":["to","as","as","work","as"]},{"Key":"how I","Fragments":["would","could","can","used","used","wish","was","solved","read","handled","did","feel","did","used","could","might"]},{"Key":"would code","Fragments":["in"]},{"Key":"As you","Fragments":["comment","can","just","pointed","say,"]},{"Key":"you comment","Fragments":["I","it"]},{"Key":"comment I","Fragments":["found","might"]},{"Key":"found your","Fragments":["code"]},{"Key":"code too","Fragments":["comment","much.","long"]},{"Key":"too comment","Fragments":["heavy..."]},{"Key":"comment heavy...","Fragments":["but"]},{"Key":"heavy... but","Fragments":["super"]},{"Key":"but super","Fragments":["clear"]},{"Key":"super clear","Fragments":["and"]},{"Key":"clear and","Fragments":["with","easy","easy","easy","readable","direct","consistent.","the","straight","the","understandable."]},{"Key":"and with","Fragments":["a","NUnit.","!"]},{"Key":" Deeply","Fragments":["nested","indented","nested"]},{"Key":"Deeply nested","Fragments":["control","control"]},{"Key":"nested control","Fragments":["flow","structures"]},{"Key":"control flow","Fragments":["is","with","section"]},{"Key":"flow is","Fragments":["hard"]},{"Key":"is hard","Fragments":["to","to","to","to"]},{"Key":"read and","Fragments":["understand","understand?","one","maintain,","has","moves","understand?","maintain.","expand","can","understand","shorter.","maintain","comment,","sometimes"]},{"Key":"and understand","Fragments":["quickly.","boolean"]},{"Key":"understand quickly.","Fragments":["Your"]},{"Key":"quickly. Your","Fragments":["brain"]},{"Key":"Your brain","Fragments":["has"]},{"Key":"brain has","Fragments":["to","been"]},{"Key":"to keep","Fragments":["all","```Roster```","magic","it","the","the","all","reading.","track","track","a","people","the","these","it","it","the","the","track","my","track","doing","'sum'","it","mental","the","the","type","the","only","it","the","track","track","the","it"]},{"Key":"keep all","Fragments":["that","of"]},{"Key":"all that","Fragments":["state","is","person","advanced","great","logic","is","clear","into","work","repetition?","state","hooked","checking"]},{"Key":"that state","Fragments":["in","information."]},{"Key":"state in","Fragments":["a"]},{"Key":"a stack","Fragments":["as"]},{"Key":"stack as","Fragments":["you"]},{"Key":"you read.","Fragments":[":)"]},{"Key":" Try","Fragments":["getting","to","not","reading","to","to","to","to","it","it","evaluating","http://www.completecsharptutorial.com/basic/logical-opeartors.php","```birthday.AddSeconds(gigaSecond).Date```","to","using","starting","downloading","to","a","and","LINQ","using","doing","and","this","this","use","this","it","it","Linq","and","it","[Flags]","Dictionary","it","a","SortedSet","Linq"]},{"Key":"Try getting","Fragments":["rid"]},{"Key":"getting rid","Fragments":["of","of","of"]},{"Key":"the \"else\"","Fragments":["block","case.","and"]},{"Key":"\"else\" block","Fragments":["and"]},{"Key":"just put","Fragments":["that","the","the","all","that","put"]},{"Key":"put that","Fragments":["code","in","{","line","in"]},{"Key":"that code","Fragments":["after","is","should","to","sends","with"]},{"Key":"code after","Fragments":["the","implementation"]},{"Key":"the \"if\"","Fragments":["block,","block","tests,","statement","statement","altogether"]},{"Key":"\"if\" block,","Fragments":["if"]},{"Key":"block, if","Fragments":["the"]},{"Key":"\"if\" block","Fragments":["has"]},{"Key":"block has","Fragments":["a"]},{"Key":"a \"return\"","Fragments":["in"]},{"Key":"\"return\" in","Fragments":["it."]},{"Key":"in it.","Fragments":["You"]},{"Key":"it. You","Fragments":["can","might"]},{"Key":"can also","Fragments":["try","be","simplify","be","represent","use","be","initialize","use","add","only","be"]},{"Key":"also try","Fragments":["inverting"]},{"Key":"try inverting","Fragments":["the"]},{"Key":"inverting the","Fragments":["if","first","if"]},{"Key":"if tests","Fragments":["to"]},{"Key":"get to","Fragments":["a","an","that","them","grips"]},{"Key":"statement earlier.","Fragments":["These"]},{"Key":"earlier. These","Fragments":["things"]},{"Key":"These things","Fragments":["in","may"]},{"Key":"things in","Fragments":["combination","the","more","as"]},{"Key":"in combination","Fragments":["will"]},{"Key":"combination will","Fragments":["let"]},{"Key":"you \"flatten\"","Fragments":["the"]},{"Key":"\"flatten\" the","Fragments":["code"]},{"Key":"it's easier","Fragments":["to","to","to","to","to","to"]},{"Key":"First stab","Fragments":["at"]},{"Key":"stab at","Fragments":["trying","this","it."]},{"Key":"at trying","Fragments":["out"]},{"Key":"trying out","Fragments":["exercism.io.","chaining"]},{"Key":"out exercism.io.","Fragments":["There"]},{"Key":"exercism.io. There","Fragments":["may"]},{"Key":"There may","Fragments":["be","well","be","be"]},{"Key":"a simpler","Fragments":["expression","way","way"]},{"Key":"simpler expression","Fragments":["for"]},{"Key":"expression for","Fragments":["the","checking","cleaning","performance.","every"]},{"Key":"the ```IsLeap()```","Fragments":["method,"]},{"Key":"```IsLeap()``` method,","Fragments":["but"]},{"Key":"method, but","Fragments":["will","not","then","effectively","I","if","you","this","it"]},{"Key":"but will","Fragments":["take","you","have","also"]},{"Key":"take a","Fragments":["look","few","few","year","look","ruby","lot","ton","look","look","char","long","look","look","year","year","year","while","look","length","coder"]},{"Key":"a look","Fragments":["again","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at","at"]},{"Key":"look again","Fragments":["in"]},{"Key":"again in","Fragments":["a","this"]},{"Key":"The ```using","Fragments":["System;```"]},{"Key":"```using System;```","Fragments":["part"]},{"Key":"System;``` part","Fragments":["is"]},{"Key":"part is","Fragments":["unnecessary","technically"]},{"Key":"unnecessary here,","Fragments":["but"]},{"Key":"here, but","Fragments":["I","I","it","it","I","then","I","building"]},{"Key":"I initially","Fragments":["included","began","wrote","wanted","tried"]},{"Key":"initially included","Fragments":["it"]},{"Key":"included it","Fragments":["as"]},{"Key":"of habit,","Fragments":["since"]},{"Key":"habit, since","Fragments":["this"]},{"Key":"since this","Fragments":["namespace","is","function","is","is","is","is","is","is","is","involves"]},{"Key":"this namespace","Fragments":["has"]},{"Key":"namespace has","Fragments":["all"]},{"Key":"has all","Fragments":["of","uppercase"]},{"Key":"all of","Fragments":["the","```Database```","my","the","your","the","your","ToList","the","this","the","the","the","the","1","the","the","them.","the","those","the","the","your","them","the","the","the","your","the","the","them."]},{"Key":"basic .NET","Fragments":["library"]},{"Key":".NET library","Fragments":["stuff."]},{"Key":"also assumed","Fragments":["that"]},{"Key":"assumed that","Fragments":["the","would","the","the"]},{"Key":"class would","Fragments":["never","work","do,","be","be"]},{"Key":"would never","Fragments":["be","do","change","need","be","have"]},{"Key":"never be","Fragments":["instantiated,","noticed","instantiated.","going","an","equal"]},{"Key":"be instantiated,","Fragments":["which"]},{"Key":"instantiated, which","Fragments":["is"]},{"Key":"is why","Fragments":["I","```.OrderBy(w","the","I","they","I","I"]},{"Key":"it marked","Fragments":["as"]},{"Key":"marked as","Fragments":["```static```.","composite.","private"]},{"Key":" Method","Fragments":["and"]},{"Key":"Method and","Fragments":["class"]},{"Key":"and class","Fragments":["also","members","name","though."]},{"Key":"class also","Fragments":["lack","should"]},{"Key":"also lack","Fragments":["comments"]},{"Key":"lack comments","Fragments":["for"]},{"Key":"this first","Fragments":["iteration.","condition"]},{"Key":"one more","Fragments":["handy","way","level","traditional","based"]},{"Key":"more handy","Fragments":["method"]},{"Key":"handy method","Fragments":["to"]},{"Key":"to share","Fragments":["with"]},{"Key":"share with","Fragments":["you:"]},{"Key":"course for","Fragments":["the"]},{"Key":"the \"question\"","Fragments":["response.","conditional,"]},{"Key":"Your IntelliSense","Fragments":["documentation"]},{"Key":"IntelliSense documentation","Fragments":["on"]},{"Key":"documentation on","Fragments":["the","ApplicationException"]},{"Key":"the function","Fragments":["is","instead","*does*.","is","itself,","but","in","calls.","like","should","calls","would","call","on","above","on","methods","name","name,","but","adds"]},{"Key":"is very","Fragments":["well-placed,","helpful","readable.","readable.","readable,","bad","brief.","brief.","easy","well","explicit","clear.","verbose","much","clear","readable,","helpful.","labour","readable","logical","inefficient.","important.","long","similar","similar","readable","inefficient","complex","interesting."]},{"Key":"very well-placed,","Fragments":["if"]},{"Key":"well-placed, if","Fragments":["the"]},{"Key":"the summary","Fragments":["is","is"]},{"Key":"summary is","Fragments":["slightly","sufficient."]},{"Key":"is slightly","Fragments":["long-winded.","more","more"]},{"Key":"slightly long-winded.","Fragments":["I"]},{"Key":"long-winded. I","Fragments":["think"]},{"Key":"that having","Fragments":["only","a"]},{"Key":"having only","Fragments":["the"]},{"Key":"first sentence","Fragments":["in"]},{"Key":"sentence in","Fragments":["the"]},{"Key":"is sufficient.","Fragments":["If","For"]},{"Key":"sufficient. If","Fragments":["I"]},{"Key":"I recall","Fragments":["correctly,"]},{"Key":"recall correctly,","Fragments":["I"]},{"Key":"correctly, I","Fragments":["think","shouldn't","just"]},{"Key":"a `\u003cremarks\u003e`","Fragments":["or"]},{"Key":"`\u003cremarks\u003e` or","Fragments":["`\u003ccomments\u003e`"]},{"Key":"or `\u003ccomments\u003e`","Fragments":["tag,"]},{"Key":"`\u003ccomments\u003e` tag,","Fragments":["something"]},{"Key":"tag, something","Fragments":["of"]},{"Key":"something of","Fragments":["that"]},{"Key":"that sort.","Fragments":["That"]},{"Key":"sort. That","Fragments":["could"]},{"Key":"That could","Fragments":["be","mean","be"]},{"Key":"good place","Fragments":["to","to"]},{"Key":"place to","Fragments":["put","start."]},{"Key":"put your","Fragments":["additional","brackets,","if"]},{"Key":"your additional","Fragments":["information,"]},{"Key":"additional information,","Fragments":["if"]},{"Key":"information, if","Fragments":["you"]},{"Key":"feel it","Fragments":["is","is","might","is","is","helps","is","makes"]},{"Key":"other comments,","Fragments":["I"]},{"Key":"comments, I","Fragments":["feel","think"]},{"Key":"feel as","Fragments":["if"]},{"Key":"as if","Fragments":["they","the"]},{"Key":"are redundant","Fragments":["to","and","(but","as","as"]},{"Key":"redundant to","Fragments":["the","me."]},{"Key":"code you're","Fragments":["writing."]},{"Key":"you're writing.","Fragments":["I"]},{"Key":"writing. I","Fragments":["can"]},{"Key":"can read","Fragments":["plainly","about","to"]},{"Key":"read plainly","Fragments":["from"]},{"Key":"plainly from","Fragments":["your"]},{"Key":"from your","Fragments":["code","implementation","code.","lambda","class,","code.","method?","code"]},{"Key":"code that","Fragments":["`leapResult","passes","responds","does","a","doesn't","happens","happens","is","I","pass","is","you"]},{"Key":"that `leapResult","Fragments":["="]},{"Key":"`leapResult =","Fragments":["false;`"]},{"Key":"= false;`","Fragments":["-","?"]},{"Key":"false;` -","Fragments":["I"]},{"Key":"- I","Fragments":["do","think","included","saw","deleted","think","had","wasn't","managed","like","really","know","think","happened","applied","had","haven't","have","think"]},{"Key":"do not","Fragments":["need","generate","know","have","have","see","add","have","assign","evaluate","need","need","provide","recalculate","support.","like","have","represent","exercise"]},{"Key":"be notified","Fragments":["of"]},{"Key":"notified of","Fragments":["such"]},{"Key":"of such","Fragments":["in","simple"]},{"Key":"such in","Fragments":["a"]},{"Key":"good general","Fragments":["rule"]},{"Key":"general rule","Fragments":["that","I","I"]},{"Key":"rule that","Fragments":["I","it","you","says"]},{"Key":"find when","Fragments":["deciding"]},{"Key":"when deciding","Fragments":["whether"]},{"Key":"deciding whether","Fragments":["to"]},{"Key":"whether to","Fragments":["make","enclose"]},{"Key":"a comment:","Fragments":["If"]},{"Key":"comment: If","Fragments":["it"]},{"Key":"If it","Fragments":["needs","needs","finds","did","is","was","wasn't","returns","hasn't","isn't","succeeds","got","is","is","isn't","cannot","were","were"]},{"Key":"it needs","Fragments":["to","to","the","to","to","to","to","to","to","to"]},{"Key":"needs to","Fragments":["be","explained","be","be","be","be.","be","be","be","be","be","be","be","trace","be.","be.","do","be","be","be","be.","be","have"]},{"Key":"explained *why*","Fragments":["I"]},{"Key":"*why* I","Fragments":["am"]},{"Key":"am doing","Fragments":["something,","(in"]},{"Key":"doing something,","Fragments":["then","and"]},{"Key":"something, then","Fragments":["I"]},{"Key":"should comment.","Fragments":["If"]},{"Key":"comment. If","Fragments":["it"]},{"Key":"to explained","Fragments":["*what*"]},{"Key":"explained *what*","Fragments":["I"]},{"Key":"*what* I","Fragments":["am"]},{"Key":"am doing,","Fragments":["then"]},{"Key":"doing, then","Fragments":["I"]},{"Key":"should modify","Fragments":["my"]},{"Key":"modify my","Fragments":["code"]},{"Key":"more easily","Fragments":["readable","grok'd.","extended"]},{"Key":"easily readable","Fragments":["on","code;"]},{"Key":"readable on","Fragments":["its"]},{"Key":"on its","Fragments":["own.","own,","own,","own."]},{"Key":"You seem","Fragments":["to","to","to"]},{"Key":"seem to","Fragments":["have","pass","put","read","be","mind","forget","be","think","have","follow","like","buy","remember","work","allow","remember","work.","obfuscate","have","be","have"]},{"Key":"have managed","Fragments":["to"]},{"Key":"to post","Fragments":["the","the","what"]},{"Key":"post the","Fragments":["tests","tests"]},{"Key":"tests not","Fragments":["the"]},{"Key":"that passes","Fragments":["the","year","all"]},{"Key":"of people","Fragments":["likes","disagree","who","seem","seem","much","are"]},{"Key":"people likes","Fragments":["conditional"]},{"Key":"likes conditional","Fragments":["operators"]},{"Key":"conditional operators","Fragments":["but","are","as"]},{"Key":"operators but","Fragments":["I"]},{"Key":"personally like","Fragments":["a","to","a"]},{"Key":"straightforward return","Fragments":["logic"]},{"Key":"return logic","Fragments":["since"]},{"Key":"logic since","Fragments":["the"]},{"Key":"since the","Fragments":["conditional","language","exercise","criteria","foreach","IsLeap","introduction","args","problem","Lambda","second","numbers","readme","readme","tests","calling","tests","first"]},{"Key":"the conditional","Fragments":["operators","logic","statement","just","to","itself,","`equal","statements","statements."]},{"Key":"operators are","Fragments":["not"]},{"Key":"not too","Fragments":["complex","great","satisfied","fond","sure","complex.","sure"]},{"Key":"too complex","Fragments":["in","and","to"]},{"Key":"complex in","Fragments":["this"]},{"Key":"this problem.","Fragments":["That","Achieving","I","That's","If","As"]},{"Key":"problem. That","Fragments":["said,"]},{"Key":"said, I","Fragments":["prefer","stand","went","find","thought"]},{"Key":"prefer this","Fragments":["solution."]},{"Key":"this solution.","Fragments":["Simple,","If","I","I've"]},{"Key":"solution. Simple,","Fragments":["straightforward"]},{"Key":"Simple, straightforward","Fragments":["one"]},{"Key":"straightforward one","Fragments":["liner."]},{"Key":" @dexter-Inferno","Fragments":["What"]},{"Key":"@dexter-Inferno What","Fragments":["do"]},{"Key":"What do","Fragments":["you","you","you","you","you","you","you"]},{"Key":"do you","Fragments":["mean","think","think","think?","in","solve","use","think","need","think","think","think","think","mean","intend","indent","have","store","need","like","need","really","need","need","need","throw","think","have","have","create","have","make","feel","decide","think","think?","really","need","think?","need","have"]},{"Key":"mean move","Fragments":["the"]},{"Key":"for divisible","Fragments":["by","by","by"]},{"Key":"400 up?","Fragments":["It"]},{"Key":"up? It","Fragments":["wouldn't"]},{"Key":"It wouldn't","Fragments":["work","be","be","be","work"]},{"Key":"wouldn't work","Fragments":["that","if"]},{"Key":"work that","Fragments":["way.","is"]},{"Key":"that way.","Fragments":["I'm","Joining","It's","It"]},{"Key":"way. I'm","Fragments":["usually"]},{"Key":"I'm usually","Fragments":["of"]},{"Key":"usually of","Fragments":["the"]},{"Key":"the opinion","Fragments":["that","regarding"]},{"Key":"opinion that","Fragments":["commenting"]},{"Key":"that commenting","Fragments":["within"]},{"Key":"commenting within","Fragments":["a"]},{"Key":"within a","Fragments":["function","variable","loop.","section","try/catch"]},{"Key":"a function","Fragments":["isn't","returning","so","instead.","IsAnagram(string)","to","because","with","so","with","to","starts","at","as","named","to","to","(CheckSides)","that","hurts","that","that","not","that","as"]},{"Key":"function isn't","Fragments":["necessary"]},{"Key":"isn't necessary","Fragments":["if"]},{"Key":"necessary if","Fragments":["the"]},{"Key":"code's intent","Fragments":["is"]},{"Key":"clear (and","Fragments":["simple"]},{"Key":"(and simple","Fragments":["like"]},{"Key":"simple like","Fragments":["this)."]},{"Key":"like this).","Fragments":["But"]},{"Key":"this). But","Fragments":["I'll"]},{"Key":"But I'll","Fragments":["commit","think"]},{"Key":"I'll commit","Fragments":["another"]},{"Key":"commit another","Fragments":["version"]},{"Key":"another version","Fragments":["with","of"]},{"Key":"version with","Fragments":["comments","the","the","adjustments"]},{"Key":"the interest","Fragments":["of","of","of","of","of"]},{"Key":"interest of","Fragments":["clarity","having","readability","having","having"]},{"Key":"of clarity","Fragments":["(as"]},{"Key":"clarity (as","Fragments":["opposed"]},{"Key":"(as opposed","Fragments":["to"]},{"Key":"to brevity),","Fragments":["I"]},{"Key":"brevity), I","Fragments":["have"]},{"Key":"have broken","Fragments":["each"]},{"Key":"broken each","Fragments":["modulus"]},{"Key":"each modulus","Fragments":["test"]},{"Key":"modulus test","Fragments":["into"]},{"Key":"test into","Fragments":["a","the"]},{"Key":"separate if/else","Fragments":["if"]},{"Key":"if/else if","Fragments":["block.","is","the"]},{"Key":"you invert","Fragments":["the"]},{"Key":"invert the","Fragments":["\"if\"","bool"]},{"Key":"\"if\" tests,","Fragments":["you"]},{"Key":"tests, you","Fragments":["can","may","may","need"]},{"Key":"can bail","Fragments":["out"]},{"Key":"bail out","Fragments":["in","on"]},{"Key":"statement early,","Fragments":["and"]},{"Key":"early, and","Fragments":["flatten"]},{"Key":"and flatten","Fragments":["the"]},{"Key":"flatten the","Fragments":["code."]},{"Key":"This method","Fragments":["will","also","is"]},{"Key":"will only","Fragments":["return","execute","execute","execute","execute","execute","ever","add","hit","return","eliminate"]},{"Key":"only return","Fragments":["true","the","as","as"]},{"Key":"true for","Fragments":["leap","a","empty","the","!IsYearEvenlyDivisibleBy(year,","each","null,","GetRandomKey","the","all"]},{"Key":"for leap","Fragments":["years","centuries..","year","year","years,"]},{"Key":"are divisible","Fragments":["by","by","by","by"]},{"Key":"by 400,","Fragments":["but","if","it","because","then","divisible","then","then","than","that"]},{"Key":"400, but","Fragments":["there"]},{"Key":"but there","Fragments":["are","is","is","are","are","is","was"]},{"Key":"are valid","Fragments":["leap","points."]},{"Key":"valid leap","Fragments":["years"]},{"Key":"4 but","Fragments":["not","not","aren't","not"]},{"Key":"not by","Fragments":["100","100","100"]},{"Key":"or 400,","Fragments":["e.g."]},{"Key":"400, e.g.","Fragments":["1996."]},{"Key":"e.g. 1996.","Fragments":["Try"]},{"Key":"1996. Try","Fragments":["restructuring"]},{"Key":"Try restructuring","Fragments":["your"]},{"Key":"restructuring your","Fragments":["if"]},{"Key":"statements to","Fragments":["match","the","reduce","determine"]},{"Key":"to match","Fragments":["the","there","the","a","the","elements","the","what","strings.","all","all"]},{"Key":"match the","Fragments":["logic","following","array","\"algorithm\"","words","conditions","string","Readme"]},{"Key":"logic described","Fragments":["in"]},{"Key":"described in","Fragments":["the","this","the","the"]},{"Key":"the readme,","Fragments":["and","but"]},{"Key":"readme, and","Fragments":["make"]},{"Key":"make sure","Fragments":["that","to","your","RNG","each","there","there","from","rev","it's","to","givenSideN","they","I","they","that","they","I","that","it","I","the","that","each"]},{"Key":"sure that","Fragments":["the","strictly","the","line","the","it","each","it","the"]},{"Key":"tests in","Fragments":["LeapTest.cs","the","NUnit.","those","order.","~35ms","e.g."]},{"Key":"in LeapTest.cs","Fragments":["all"]},{"Key":"LeapTest.cs all","Fragments":["run"]},{"Key":"all run","Fragments":["successfully"]},{"Key":"run successfully","Fragments":["against","is"]},{"Key":"successfully against","Fragments":["your"]},{"Key":"against your","Fragments":["method."]},{"Key":"As a","Fragments":["user","genenral","logic","code","consultant,","general","strong","general","general","friendly","suggestion,","general"]},{"Key":"a user","Fragments":["of","to","had","passed","interface"]},{"Key":"user of","Fragments":["the"]},{"Key":"the Year","Fragments":["class,","class","class","class","class","class","class","class"]},{"Key":"Year class,","Fragments":["unaware"]},{"Key":"class, unaware","Fragments":["of"]},{"Key":"unaware of","Fragments":["it's"]},{"Key":"of it's","Fragments":["implementation,","members"]},{"Key":"it's implementation,","Fragments":["I"]},{"Key":"implementation, I","Fragments":["would","would"]},{"Key":"would see","Fragments":["two","Roster"]},{"Key":"see two","Fragments":["public"]},{"Key":"two public","Fragments":["methods,"]},{"Key":"methods, IsLeap","Fragments":["and"]},{"Key":"IsLeap and","Fragments":["isNotALeapYear.","IsLeap2","IsLeap2"]},{"Key":"and isNotALeapYear.","Fragments":["I"]},{"Key":"isNotALeapYear. I","Fragments":["would"]},{"Key":"be confused","Fragments":["when","when"]},{"Key":"confused when","Fragments":["IsLeap(1900)","they"]},{"Key":"when IsLeap(1900)","Fragments":["and"]},{"Key":"IsLeap(1900) and","Fragments":["isNotALeapYear(1900)"]},{"Key":"and isNotALeapYear(1900)","Fragments":["were"]},{"Key":"isNotALeapYear(1900) were","Fragments":["both"]},{"Key":"were both","Fragments":["false."]},{"Key":"Also I'm","Fragments":["not"]},{"Key":"sure why","Fragments":["year%4","you","there","I","you","we","you"]},{"Key":"why year%4","Fragments":["warranted"]},{"Key":"year%4 warranted","Fragments":["its"]},{"Key":"warranted its","Fragments":["own"]},{"Key":"own method,","Fragments":["but","that"]},{"Key":" Put","Fragments":["Regex","'31557600.00'"]},{"Key":"Put Regex","Fragments":["creation"]},{"Key":"Regex creation","Fragments":["into"]},{"Key":"creation into","Fragments":["static"]},{"Key":"into static","Fragments":["constructor"]},{"Key":"static constructor","Fragments":["and","is","sets"]},{"Key":"constructor and","Fragments":["removed","no","made","store","store","store","you","```VALIDCHARACTERS.Any(validchar","Match","static","Match"]},{"Key":"and removed","Fragments":["foreach","all","the","the","a"]},{"Key":"removed foreach","Fragments":["from"]},{"Key":"foreach from","Fragments":["ToPig()","for"]},{"Key":"Looks great,","Fragments":["The","but"]},{"Key":"great, The","Fragments":["regex"]},{"Key":"The regex","Fragments":["should","```[\\w']+```"]},{"Key":"regex should","Fragments":["probably"]},{"Key":"static readonly","Fragments":["member","List\u003cint\u003e","Regex","Regex"]},{"Key":"readonly member","Fragments":["of"]},{"Key":"member of","Fragments":["the"]},{"Key":"class though.","Fragments":["It","The"]},{"Key":"though. It","Fragments":["can"]},{"Key":"It can","Fragments":["be","just","be","be","look","be","be","be","accept","be","be"]},{"Key":"more performant","Fragments":["that","than","but","but"]},{"Key":"performant that","Fragments":["way."]},{"Key":" Line","Fragments":["20:","15","24","12","9","16.","29:","30:","59:","11"]},{"Key":"Line 20:","Fragments":["I"]},{"Key":"20: I","Fragments":["have"]},{"Key":"to agree","Fragments":["with","with"]},{"Key":"with this.","Fragments":["0","However,"]},{"Key":"this. 0","Fragments":["mod"]},{"Key":"0 mod","Fragments":["X"]},{"Key":"mod X","Fragments":["is"]},{"Key":"X is","Fragments":["zero","ok"]},{"Key":"is zero","Fragments":["and","or","guidance"]},{"Key":"zero and","Fragments":["would","the","then"]},{"Key":"would then","Fragments":["pass","be"]},{"Key":"then pass","Fragments":["all"]},{"Key":"pass all","Fragments":["the","the","tests,","of","tests","tests.","tests.","the","the"]},{"Key":"other leap","Fragments":["year","year"]},{"Key":"year tests","Fragments":["and"]},{"Key":"tests and","Fragments":["most","execute","all","condenses","it","left","left","where","then","make","responses","update","submitted","make"]},{"Key":"and most","Fragments":["people","of","broad","of"]},{"Key":"most people","Fragments":["missed","use,","would","would","will","are"]},{"Key":"people missed","Fragments":["this."]},{"Key":"missed this.","Fragments":["Though"]},{"Key":"this. Though","Fragments":["ISO"]},{"Key":"Though ISO","Fragments":["8601"]},{"Key":"ISO 8601","Fragments":["states"]},{"Key":"8601 states","Fragments":["that"]},{"Key":"states that","Fragments":["the","if","it's","the","purpose"]},{"Key":"year format","Fragments":["is"]},{"Key":"format is","Fragments":["+/-","sufficient."]},{"Key":"is +/-","Fragments":["YYYY"]},{"Key":"+/- YYYY","Fragments":["I"]},{"Key":"YYYY I","Fragments":["don't"]},{"Key":"don't feel","Fragments":["that","that","that"]},{"Key":"that there's","Fragments":["a","no","no","no"]},{"Key":"there's a","Fragments":["reason","method","Bonus","pretty","more","mismatch","way","lot","Linq","million","cleaner","way","way","limit","better","link","`DateTime.IsLeapYear()`","good","better"]},{"Key":"a reason","Fragments":["to","you","you","you","you","you","to","for","you","not"]},{"Key":"reason to","Fragments":["use","check","be","not","use","use","check","do","create"]},{"Key":"negative year","Fragments":["to","(BC/BCE)"]},{"Key":"to denote","Fragments":["BC."]},{"Key":"The Year","Fragments":["class"]},{"Key":"Year class","Fragments":["could","and","and","needs","static","with","itself","can't","looks","-"]},{"Key":"class could","Fragments":["be","change","probably","probably"]},{"Key":"be static,","Fragments":["because","meaning"]},{"Key":"static, because","Fragments":["there"]},{"Key":"because there","Fragments":["is","didn't","are","was"]},{"Key":"no point","Fragments":["in","in","in","in","in","in","in"]},{"Key":"point in","Fragments":["initializing","using","using","the","this","this","this","this","this"]},{"Key":"in initializing","Fragments":["it"]},{"Key":"initializing it","Fragments":["as","inside"]},{"Key":"it has","Fragments":["no","been","always","a","a","to","to","to","to","to","to","the","no","to","to","to"]},{"Key":"has no","Fragments":["members.","reason","students,","guaranteed","letters"]},{"Key":"The code","Fragments":["is","reads","won't","works","works","works,","you","(the","is","works","throws","is","would","`4.IsVisisibleBy(2)`","is"]},{"Key":"is missing","Fragments":["documentation","and","its"]},{"Key":"missing documentation","Fragments":["or"]},{"Key":"documentation or","Fragments":["even"]},{"Key":"or even","Fragments":["basic","strInt[pos]","some","a","an","tracking","the"]},{"Key":"even basic","Fragments":["comments."]},{"Key":"basic comments.","Fragments":["Mainly"]},{"Key":"comments. Mainly","Fragments":["I'm"]},{"Key":"Mainly I'm","Fragments":["looking"]},{"Key":"I'm looking","Fragments":["for","for","for,","for,","forward"]},{"Key":"looking for","Fragments":["what","an","here.","better","better","any","words","a","invalid","comments","more","spaces"]},{"Key":"rules for","Fragments":["determining","leap","scoring"]},{"Key":"for determining","Fragments":["a"]},{"Key":"determining a","Fragments":["leap"]},{"Key":"the separate","Fragments":["if","methods.","methods.","method"]},{"Key":"separate if","Fragments":["statements"]},{"Key":"can sometimes","Fragments":["make"]},{"Key":"sometimes make","Fragments":["it"]},{"Key":"it easier","Fragments":["to","to","to","to","to","to","for","to","to","to","to","for","for","to","to","to"]},{"Key":"read the","Fragments":["code,","code","readme","README","entire","code.","body","actual","readme,","definition","Readme,","Readme,","Readme,","Readme,","point"]},{"Key":"the code,","Fragments":["but","which","but","it's","but","then","just","and","that"]},{"Key":"code, but","Fragments":["since","if","I've","couldn't","embedding","I","won't","it","I","some"]},{"Key":"but since","Fragments":["this","there","I","we're","Guid's","it","this","the"]},{"Key":"is trivial","Fragments":["code,","and","then"]},{"Key":"trivial code,","Fragments":["it"]},{"Key":"be condensed","Fragments":["further","and","in","more."]},{"Key":"condensed further","Fragments":["without"]},{"Key":"further without","Fragments":["much"]},{"Key":"without much","Fragments":["impact.","time"]},{"Key":" Debugging","Fragments":["is"]},{"Key":"Debugging is","Fragments":["likely"]},{"Key":"is likely","Fragments":["easier","the","why"]},{"Key":"likely easier","Fragments":["though"]},{"Key":"easier though","Fragments":["because"]},{"Key":"though because","Fragments":["you"]},{"Key":"because you","Fragments":["can","will","can.","don't","won't","didn't","end","just","need","are","didn't","don't","pay","recalculate","don't","didn't","can","only","only","did","are","wanted"]},{"Key":"can single-step","Fragments":["the"]},{"Key":"single-step the","Fragments":["code"]},{"Key":"it's logic","Fragments":["through."]},{"Key":"The ///","Fragments":["commenting"]},{"Key":"/// commenting","Fragments":["is"]},{"Key":"commenting is","Fragments":["default","based"]},{"Key":"is default","Fragments":["Visual"]},{"Key":"default Visual","Fragments":["Studio."]},{"Key":"Visual Studio.","Fragments":["Everything"]},{"Key":"Studio. Everything","Fragments":["before"]},{"Key":"Everything before","Fragments":["the"]},{"Key":"before the","Fragments":["method","comments","length","last","trim.","code","loop","EndsWith()"]},{"Key":"is templated","Fragments":["by"]},{"Key":"templated by","Fragments":["VS"]},{"Key":"by VS","Fragments":["and"]},{"Key":"VS and","Fragments":["used"]},{"Key":"and used","Fragments":["for","read","that.","if"]},{"Key":"used for","Fragments":["generating","things","quotes.","in","in","in","optmisiation","optimisation","all","which","a","any","running","making","most","typed","contractions."]},{"Key":"for generating","Fragments":["documentation","all"]},{"Key":"generating documentation","Fragments":["and"]},{"Key":"documentation and","Fragments":["by","rewrote"]},{"Key":"and by","Fragments":["Intellisense.","rethinking","default"]},{"Key":"by Intellisense.","Fragments":["I"]},{"Key":"Intellisense. I","Fragments":["normally"]},{"Key":"I normally","Fragments":["don't","would"]},{"Key":"normally don't","Fragments":["go"]},{"Key":"don't go","Fragments":["so","into"]},{"Key":"go so","Fragments":["far,"]},{"Key":"but thought","Fragments":["I"]},{"Key":"thought I","Fragments":["would","would","needed"]},{"Key":"would for","Fragments":["completeness,"]},{"Key":"see nitpicks","Fragments":["saying"]},{"Key":"nitpicks saying","Fragments":["\"not"]},{"Key":"saying \"not","Fragments":["enough"]},{"Key":"\"not enough","Fragments":["comments.\""]},{"Key":"comments within","Fragments":["the"]},{"Key":"the method?","Fragments":["Enough?"]},{"Key":"method? Enough?","Fragments":["Too"]},{"Key":"Enough? Too","Fragments":["much?"]},{"Key":"Too much?","Fragments":["Mixing"]},{"Key":"much? Mixing","Fragments":["efficiency"]},{"Key":"Mixing efficiency","Fragments":["with"]},{"Key":"efficiency with","Fragments":["clarity"]},{"Key":"with clarity","Fragments":["is"]},{"Key":"clarity is","Fragments":["always"]},{"Key":"is always","Fragments":["the","great!","going","present.","interesting","nice","fun","false)","best"]},{"Key":"always the","Fragments":["issue."]},{"Key":"last part","Fragments":["of","of"]},{"Key":"conditional says","Fragments":["\"year"]},{"Key":"says \"year","Fragments":["%"]},{"Key":"\"year %","Fragments":["100","100","100","100","100"]},{"Key":"100 \u003e","Fragments":["1\"","0\",","0"]},{"Key":"are trying","Fragments":["to","to","for","to","to","to","to"]},{"Key":"year isn't","Fragments":["divisible","divisible","divisible"]},{"Key":"isn't divisible","Fragments":["by","by","by"]},{"Key":"100, but","Fragments":["your"]},{"Key":"but your","Fragments":["code","WriteLine","code","code","checks","index","approach","approach","second"]},{"Key":"code doesn't","Fragments":["accomplish","just","equal","pass.","account","either!"]},{"Key":"doesn't accomplish","Fragments":["this."]},{"Key":"accomplish this.","Fragments":["That"]},{"Key":"this. That","Fragments":["last"]},{"Key":"That last","Fragments":["part","else"]},{"Key":"conditional is","Fragments":["true"]},{"Key":"is true","Fragments":["when","(1900","for","or","that","for","in"]},{"Key":"true when","Fragments":["there"]},{"Key":"when there","Fragments":["is","is"]},{"Key":"a remainder","Fragments":["higher"]},{"Key":"remainder higher","Fragments":["than"]},{"Key":"higher than","Fragments":["1.","a"]},{"Key":"than 1.","Fragments":["If","Didn't"]},{"Key":"1. If","Fragments":["I'm","your","the","the"]},{"Key":"If I'm","Fragments":["not","writing"]},{"Key":"not mistaken,","Fragments":["it"]},{"Key":"mistaken, it","Fragments":["should"]},{"Key":"should read","Fragments":["\"year","the"]},{"Key":"read \"year","Fragments":["%"]},{"Key":"\u003e 0\",","Fragments":["\"year"]},{"Key":"0\", \"year","Fragments":["%"]},{"Key":"100 \u003e=","Fragments":["1\","]},{"Key":"\u003e= 1\",","Fragments":["or"]},{"Key":"1\", or","Fragments":["\"year"]},{"Key":"or \"year","Fragments":["%"]},{"Key":"is cool.","Fragments":["I"]},{"Key":"cool. I","Fragments":["think","hadn't","had"]},{"Key":"is clearer","Fragments":["than"]},{"Key":"clearer than","Fragments":["1000000000","your"]},{"Key":"than 1000000000","Fragments":["or"]},{"Key":"1000000000 or","Fragments":["Math.Pow(10,9)."]},{"Key":"Ok, got","Fragments":["it"]},{"Key":"it working","Fragments":["actually!","any"]},{"Key":"working actually!","Fragments":["What"]},{"Key":"actually! What","Fragments":["do"]},{"Key":"Didn't like","Fragments":["the"]},{"Key":"logic flow","Fragments":["in","that"]},{"Key":"flow in","Fragments":["my","the"]},{"Key":"first version","Fragments":["with","was","but"]},{"Key":"for question","Fragments":["in"]},{"Key":"question in","Fragments":["2"]},{"Key":"in 2","Fragments":["places."]},{"Key":" Regexs","Fragments":["aren't"]},{"Key":"Regexs aren't","Fragments":["my"]},{"Key":"aren't my","Fragments":["strong"]},{"Key":"suit either","Fragments":["but"]},{"Key":"either but","Fragments":["it"]},{"Key":"really does","Fragments":["read"]},{"Key":"does read","Fragments":["better"]},{"Key":"read better","Fragments":["and"]},{"Key":"better and","Fragments":["is","I","replaced","_roster","I"]},{"Key":"is less","Fragments":["error","expensive","characters,","clear.","heavy","robust","efficient","efficient","than","efficient","readable"]},{"Key":"less error","Fragments":["prone","prone","prone.","prone"]},{"Key":"error prone","Fragments":["when","to","search","and"]},{"Key":"prone when","Fragments":["they're"]},{"Key":"when they're","Fragments":["used.","null."]},{"Key":"they're used.","Fragments":["The"]},{"Key":"used. The","Fragments":["regex","LeapYear"]},{"Key":"regex ```[\\w']+```","Fragments":["will"]},{"Key":"```[\\w']+``` will","Fragments":["give"]},{"Key":"will give","Fragments":["you","me"]},{"Key":"give you","Fragments":["what","an","that","the"]},{"Key":"you what","Fragments":["you","to","exceptions"]},{"Key":"want (words","Fragments":["without"]},{"Key":"(words without","Fragments":["special"]},{"Key":"without special","Fragments":["characters"]},{"Key":"special characters","Fragments":["except","(ie:","(except","and"]},{"Key":"characters except","Fragments":["```'```).","the"]},{"Key":" Trying","Fragments":["out","to","to"]},{"Key":"Trying out","Fragments":["exercism,"]},{"Key":"out exercism,","Fragments":["wrote"]},{"Key":"exercism, wrote","Fragments":["the"]},{"Key":"wrote the","Fragments":["conditions","exact","code:","class.","expression","code"]},{"Key":"the conditions","Fragments":["one","for","are","in","have","and","of","up","(not"]},{"Key":"conditions one","Fragments":["after"]},{"Key":"one after","Fragments":["the","it","several","ZZ999,"]},{"Key":"other in","Fragments":["the"]},{"Key":"simplest math","Fragments":["I"]},{"Key":"math I","Fragments":["know!"]},{"Key":" Could","Fragments":["have","be","you","someone","upper","the","have","you","you","be","you","someone","collapse","not","not","you","have","make"]},{"Key":"Could have","Fragments":["removed","used","created"]},{"Key":"have removed","Fragments":["the","the","the"]},{"Key":"the useless","Fragments":["usings!"]},{"Key":"Looks good.","Fragments":["If","Could","Props","Some","Would","Just","I","I'd","you","I","I","The","You","I","Only"]},{"Key":"good. If","Fragments":["you're"]},{"Key":"If you're","Fragments":["interested,","interested,","interested","using","using","testing","curious,","curious"]},{"Key":"you're interested,","Fragments":["there","here"]},{"Key":"interested, there","Fragments":["are"]},{"Key":"are things","Fragments":["you"]},{"Key":"things you","Fragments":["can","can","might","mention.","did","could","can","might","may"]},{"Key":"the algorithm","Fragments":["easier","you","as","for","easier.","-","to","more","much","and","and","in"]},{"Key":"algorithm easier","Fragments":["to"]},{"Key":"understand but","Fragments":["the"]},{"Key":"algorithm you","Fragments":["have"]},{"Key":"have is","Fragments":["sound.","effectively","how","that","a"]},{"Key":"good. Could","Fragments":["you"]},{"Key":"Could you","Fragments":["make","please","link","instead","compress","at","rearrange","just","expand","just","boil","boil","expand"]},{"Key":"make methods","Fragments":["that","out"]},{"Key":"would eliminate","Fragments":["the","the","the"]},{"Key":"explain what's","Fragments":["going","happening."]},{"Key":"the comment","Fragments":["in","that","lines","you","at","though,","on","is"]},{"Key":"comment in","Fragments":["```Match```?","the","the"]},{"Key":" Math.Min","Fragments":["does"]},{"Key":"Math.Min does","Fragments":["a"]},{"Key":"does a","Fragments":["more","leap","lot","good","ToDecimal()","numeric","lot"]},{"Key":"expressive job","Fragments":["of"]},{"Key":"job of","Fragments":["checking","grouping"]},{"Key":"of checking","Fragments":["the","if","for","is,","to"]},{"Key":"checking the","Fragments":["lengths","conditions","parameter.","distance.","same","input.","comments"]},{"Key":"the lengths","Fragments":["I","are","are","of"]},{"Key":"lengths I","Fragments":["think."]},{"Key":"I think.","Fragments":["But","It"]},{"Key":"think. But","Fragments":["LINQ"]},{"Key":"But LINQ","Fragments":["is"]},{"Key":"LINQ is","Fragments":["always","a","not","the"]},{"Key":"always great!","Fragments":[":)"]},{"Key":"Your xml","Fragments":["comments"]},{"Key":"comments `///`","Fragments":["within"]},{"Key":"`///` within","Fragments":["the"]},{"Key":"method are","Fragments":["not","actually","only"]},{"Key":"not valid.","Fragments":["None"]},{"Key":"valid. None","Fragments":["of"]},{"Key":"the magic","Fragments":["documenting","numbers"]},{"Key":"magic documenting","Fragments":["tools"]},{"Key":"documenting tools","Fragments":["will"]},{"Key":"tools will","Fragments":["know"]},{"Key":"will know","Fragments":["what","not"]},{"Key":"what to","Fragments":["do","tell","expect","do","do","do","consider","do","do"]},{"Key":"do with","Fragments":["them,","a","it!","Add().","the","your","this","the","the","unequal"]},{"Key":"with them,","Fragments":["just"]},{"Key":"them, just","Fragments":["use"]},{"Key":"just use","Fragments":["normal","the","that","two","if.","NUnit","a","underscores","the","`foreach`.","a","the","args","nested","the","'A'?","a","the","'number'?","an","`result.Add(value.ToLowerInvariant(),"]},{"Key":"use normal","Fragments":["comments"]},{"Key":"normal comments","Fragments":["`//`"]},{"Key":"comments `//`","Fragments":["in"]},{"Key":"`//` in","Fragments":["methods."]},{"Key":"Or in","Fragments":["fact"]},{"Key":"in fact","Fragments":["don't","mean","foreach","I"]},{"Key":"fact don't","Fragments":["use"]},{"Key":"don't use","Fragments":["so","regex","^","\"var\"","Regex","it","Regex","DateTime","extension","underscore","remainder"]},{"Key":"use so","Fragments":["many"]},{"Key":"many comments","Fragments":["at","for"]},{"Key":"comments at","Fragments":["all!","all."]},{"Key":"at all!","Fragments":["name"]},{"Key":"all! name","Fragments":["the"]},{"Key":"method and","Fragments":["steps","the","the","additional","step","it","the","the","use","then","inline","in","the","have","it","you","simply","class","I","it's","use","in","use","ordered"]},{"Key":"and steps","Fragments":["(maybe"]},{"Key":"steps (maybe","Fragments":["introduce"]},{"Key":"(maybe introduce","Fragments":["some"]},{"Key":"introduce some","Fragments":["private"]},{"Key":"some private","Fragments":["methods)"]},{"Key":"private methods)","Fragments":["such"]},{"Key":"methods) such","Fragments":["that"]},{"Key":"is being","Fragments":["done","tested...might","redundant,","run","used.","built"]},{"Key":"being done","Fragments":["and"]},{"Key":"done and","Fragments":["why.","honestly","update"]},{"Key":"This doesn't","Fragments":["take","have"]},{"Key":"doesn't take","Fragments":["input","long"]},{"Key":"take input","Fragments":["from"]},{"Key":"input from","Fragments":["anywhere,","the","special"]},{"Key":"from anywhere,","Fragments":["so"]},{"Key":"anywhere, so","Fragments":["it's"]},{"Key":"not really","Fragments":["very","a","needed","against","a","needed.","applicable","nitpicks,","necessary,","needed","make","recommending","used.","any","worth"]},{"Key":"really very","Fragments":["reusable."]},{"Key":" Nested","Fragments":["\"if\"","Ternary","if-statements","loops"]},{"Key":"Nested \"if\"","Fragments":["statements"]},{"Key":"\"if\" statements","Fragments":["makes","can","seems","combined","down","is"]},{"Key":"makes code","Fragments":["hard","harder","less"]},{"Key":"code hard","Fragments":["to","to"]},{"Key":"iteration with","Fragments":["simple","your"]},{"Key":"with simple","Fragments":["conditions.","sorted"]},{"Key":"think IsYelling","Fragments":["could"]},{"Key":"IsYelling could","Fragments":["be"]},{"Key":"be improved","Fragments":["a","greatly","/"]},{"Key":"improved a","Fragments":["bit."]},{"Key":"Line 15","Fragments":["and"]},{"Key":"15 and","Fragments":["16"]},{"Key":"and 16","Fragments":["can"]},{"Key":"16 can","Fragments":["be"]},{"Key":"be reduced","Fragments":["to","to"]},{"Key":"return year","Fragments":["%","%","%","%","%","%","%","%","%"]},{"Key":"To save","Fragments":["a"]},{"Key":"save a","Fragments":["line","lot","convert","look-up","bit"]},{"Key":"a line","Fragments":["and","or","of","from","to","when"]},{"Key":"have less","Fragments":["return"]},{"Key":"less return","Fragments":["statements!"]},{"Key":"methods \"breaking\"","Fragments":["SRP."]},{"Key":"\"breaking\" SRP.","Fragments":["I"]},{"Key":"SRP. I","Fragments":["think"]},{"Key":"that unless","Fragments":["the","you"]},{"Key":"extension is","Fragments":["generic","buying"]},{"Key":"is generic","Fragments":["and"]},{"Key":"generic and","Fragments":["clean,","then"]},{"Key":"and clean,","Fragments":["it"]},{"Key":"clean, it","Fragments":["should"]},{"Key":"be contained","Fragments":["in"]},{"Key":"contained in","Fragments":["another","your","both","that"]},{"Key":"in another","Fragments":["class.","iteration."]},{"Key":"do like","Fragments":["the","that","is","to","your","the","how","the","the","changing","that","that","the","the"]},{"Key":"the usage","Fragments":["of","of","below"]},{"Key":"usage of","Fragments":["a","the","the","Write"]},{"Key":" Used","Fragments":["a","Func\u003cint,","foreach","static","ReadOnlyDictionary"]},{"Key":"Used a","Fragments":["private"]},{"Key":"code read","Fragments":["a"]},{"Key":"read a","Fragments":["bit","lot","long"]},{"Key":"not convinced","Fragments":["I","by"]},{"Key":"convinced I","Fragments":["would"]},{"Key":"would actually","Fragments":["do","pass","make","decrease"]},{"Key":"actually do","Fragments":["that","it.","SOME","the"]},{"Key":"that for","Fragments":["production","a","very","some","me","loops","larger","the","each","odd","all","next"]},{"Key":"for production","Fragments":["code.","code"]},{"Key":"production code.","Fragments":["I","If","I"]},{"Key":"code. I","Fragments":["think","did","might","didn't","might","do","will","was","think","think","only","was","should","was"]},{"Key":"modulo expression","Fragments":["is","really"]},{"Key":"expression is","Fragments":["recognized","longer","not","pretty"]},{"Key":"is recognized","Fragments":["enough"]},{"Key":"recognized enough","Fragments":["that"]},{"Key":"enough that","Fragments":["it's","it's","it","comments","it"]},{"Key":"it's simpler","Fragments":["and"]},{"Key":"simpler and","Fragments":["less","easier","faster.","nicer","cleaner."]},{"Key":"less verbose.","Fragments":["I"]},{"Key":"verbose. I","Fragments":["guess","haven't"]},{"Key":"guess that's","Fragments":["a","just","better"]},{"Key":"You definetely","Fragments":["need"]},{"Key":"definetely need","Fragments":["some"]},{"Key":"need some","Fragments":["methods","help"]},{"Key":"some methods","Fragments":["for","should"]},{"Key":"for checking","Fragments":["conditions","IsAllCaps.","if","\"allUpper\"","if","to","if","the","input","year","if","if","shouting."]},{"Key":"and live","Fragments":["by"]},{"Key":"live by","Fragments":["a"]},{"Key":"by a","Fragments":["no","careless","school.","school,","function","return","dictionary","tab","apostrophe","character.","provider","negative","'try'","magnitude.","check","QueueItem","single","while"]},{"Key":"a no","Fragments":["comments"]},{"Key":"no comments","Fragments":["ever","for","would"]},{"Key":"comments ever","Fragments":["rule"]},{"Key":"ever rule","Fragments":["so"]},{"Key":"rule so","Fragments":["too","it's"]},{"Key":"so too","Fragments":["many"]},{"Key":"too many","Fragments":["comments","which","ToLower()","inline","apps","old","loops*"]},{"Key":"my taste...","Fragments":["lots"]},{"Key":"taste... lots","Fragments":["of"]},{"Key":"people disagree","Fragments":["though."]},{"Key":"The reasoning","Fragments":["(from"]},{"Key":"reasoning (from","Fragments":["clean"]},{"Key":"(from clean","Fragments":["coder"]},{"Key":"clean coder","Fragments":["and"]},{"Key":"coder and","Fragments":["pragmatic"]},{"Key":"and pragmatic","Fragments":["coder"]},{"Key":"pragmatic coder","Fragments":["books)"]},{"Key":"coder books)","Fragments":["is"]},{"Key":"books) is","Fragments":["that"]},{"Key":"comments lie.","Fragments":["They"]},{"Key":"lie. They","Fragments":["may"]},{"Key":"They may","Fragments":["be"]},{"Key":"be accurate","Fragments":["when"]},{"Key":"accurate when","Fragments":["first"]},{"Key":"when first","Fragments":["written,"]},{"Key":"first written,","Fragments":["but"]},{"Key":"written, but","Fragments":["as"]},{"Key":"but as","Fragments":["code","a","the","a","I","a","a"]},{"Key":"as code","Fragments":["changes"]},{"Key":"code changes","Fragments":["the"]},{"Key":"changes the","Fragments":["comments","return"]},{"Key":"comments won't","Fragments":["be"]},{"Key":"won't be","Fragments":["changed","seeing","reused","one","evaluated","able","doing","a","a","offended","making"]},{"Key":"be changed","Fragments":["to","if","to:","into","so","after","it"]},{"Key":"changed to","Fragments":["reflect"]},{"Key":"to reflect","Fragments":["this.","that.","the","that"]},{"Key":"reflect this.","Fragments":["This"]},{"Key":"this. This","Fragments":["means","is","is"]},{"Key":"This means","Fragments":["in","I","that","that"]},{"Key":"means in","Fragments":["any"]},{"Key":"in any","Fragments":["mature","case.","case","case.","universal","of","of","other","of"]},{"Key":"any mature","Fragments":["codebase"]},{"Key":"mature codebase","Fragments":["you"]},{"Key":"codebase you","Fragments":["cannot"]},{"Key":"you cannot","Fragments":["trust"]},{"Key":"cannot trust","Fragments":["the","that"]},{"Key":"trust the","Fragments":["comments"]},{"Key":"comments and","Fragments":["have","nested","there","see"]},{"Key":"to do.","Fragments":["Thus","Try","If",":-)"]},{"Key":"do. Thus","Fragments":["just"]},{"Key":"Thus just","Fragments":["make"]},{"Key":"just make","Fragments":["the","everything","a"]},{"Key":"code as","Fragments":["expressive","I","a","possible,","possible,","simple","assigning","granular","set","it","succinctly","follows:","simple,","it","you","you"]},{"Key":"as expressive","Fragments":["as"]},{"Key":"you can.","Fragments":["Code","var","Like"]},{"Key":"can. Code","Fragments":["changes"]},{"Key":"Code changes","Fragments":["automatically"]},{"Key":"changes automatically","Fragments":["self"]},{"Key":"automatically self","Fragments":["document,"]},{"Key":"self document,","Fragments":["and"]},{"Key":"document, and","Fragments":["the"]},{"Key":"the poor","Fragments":["maintainer","quality","coverage","quality","coverage"]},{"Key":"poor maintainer","Fragments":["only"]},{"Key":"maintainer only","Fragments":["has"]},{"Key":"has one","Fragments":["'truth'","division"]},{"Key":"one 'truth'","Fragments":["to"]},{"Key":"'truth' to","Fragments":["try"]},{"Key":" Clearly","Fragments":["a"]},{"Key":"Clearly a","Fragments":["public"]},{"Key":"a public","Fragments":["interface","property.","property","property!","setter","facing","field","static","field.","getter,"]},{"Key":"public interface","Fragments":["should"]},{"Key":"interface should","Fragments":["be"]},{"Key":"be documented","Fragments":["if"]},{"Key":"documented if","Fragments":["it"]},{"Key":"is part","Fragments":["of","of"]},{"Key":"looks great.","Fragments":["The","I","As"]},{"Key":"great. The","Fragments":["Hey","only"]},{"Key":"The Hey","Fragments":["method"]},{"Key":"Hey method","Fragments":["is","is"]},{"Key":"is quite","Fragments":["easy","nice.","neat","simple.","complicated,","inefficient.","neglible","a","different","familiar","specific"]},{"Key":"For nit-picks,","Fragments":["I"]},{"Key":"nit-picks, I","Fragments":["think"]},{"Key":"think using","Fragments":["LINQ","for","for","for","for"]},{"Key":"using LINQ","Fragments":["+","/","to","and"]},{"Key":"LINQ +","Fragments":["char.IsLetter"]},{"Key":"+ char.IsLetter","Fragments":["instead"]},{"Key":"char.IsLetter instead","Fragments":["of"]},{"Key":"a Regex","Fragments":["would","could"]},{"Key":"Regex would","Fragments":["be"]},{"Key":"expressive and","Fragments":["probably","readable","straightforward.","descriptive"]},{"Key":"and probably","Fragments":["more","depends","one"]},{"Key":"probably more","Fragments":["performant.","clear","meaningful","readable.","efficient).","about"]},{"Key":" Same","Fragments":["comment","thing","solution","comments","as","thing","as"]},{"Key":"Same comment","Fragments":["for"]},{"Key":"comment for","Fragments":["checking"]},{"Key":"checking IsAllCaps.","Fragments":["Otherwise,"]},{"Key":"IsAllCaps. Otherwise,","Fragments":["the"]},{"Key":"Otherwise, the","Fragments":["entire"]},{"Key":"the entire","Fragments":["string","strings","Unity","source","class!","where","return","method","boolean","function","statement.","string.","string","dictionary","string","strings","DNAString.","list"]},{"Key":"entire string","Fragments":["has","once","as"]},{"Key":"string has","Fragments":["to","to","all"]},{"Key":"be transformed","Fragments":["and"]},{"Key":"transformed and","Fragments":["compared"]},{"Key":"and compared","Fragments":["instead","the","it"]},{"Key":"compared instead","Fragments":["of"]},{"Key":"of breaking","Fragments":["on","down"]},{"Key":"breaking on","Fragments":["the"]},{"Key":"first instance","Fragments":["where","anyway)"]},{"Key":"instance where","Fragments":["it"]},{"Key":"where it","Fragments":["isn't","drops","ends","would","came","was","is","took"]},{"Key":"it isn't","Fragments":["a","I","likely","actually","much","the","the","there","ideal,","an","equilateral","isosceles","very","always","needed"]},{"Key":"isn't a","Fragments":["cap","criticism","constructor","great","best","Pythagorean"]},{"Key":"a cap","Fragments":["letter."]},{"Key":" C#","Fragments":["offers","has"]},{"Key":"C# offers","Fragments":["good"]},{"Key":"offers good","Fragments":["methods"]},{"Key":"good methods","Fragments":["for"]},{"Key":"if strings","Fragments":["are"]},{"Key":"strings are","Fragments":["whitespace","a","null?","identical.","not","the","not","of","immutable","anagrams.","explicitly"]},{"Key":"are whitespace","Fragments":["or","or","before"]},{"Key":"whitespace or","Fragments":["not.","just"]},{"Key":"or not.","Fragments":["It","And","If","I'm","(Is","I"]},{"Key":"not. It","Fragments":["considers","is"]},{"Key":"It considers","Fragments":["more"]},{"Key":"considers more","Fragments":["than"]},{"Key":"than spaces","Fragments":["as"]},{"Key":"spaces as","Fragments":["whitespace"]},{"Key":"as whitespace","Fragments":["(for"]},{"Key":"whitespace (for","Fragments":["example,"]},{"Key":"(for example,","Fragments":["your"]},{"Key":"example, your","Fragments":["code"]},{"Key":"code wouldn't","Fragments":["pass"]},{"Key":"wouldn't pass","Fragments":["if"]},{"Key":"pass if","Fragments":["the","I","any","any","equilateral","the"]},{"Key":"the string","Fragments":["was","it","ends","extension","on","was","to","with","to","is","on","and","up","and","and","is","itself.","to","returned","for","for","reads","would","are","was","you","were","parse","passed","is","first","first.","in","by","responses","library","ends","you","object,","constants","EndsWith","literals","itself.","yourself,","to","twice","in","when","once","was","just","only","each","in","as","\"test!\"","17FD3.","processing","`\"åbc\"`","anyway,","to","comparison.","simplifies","as","\"text\",","and","\"GGGACTTX\"","values","matches","is","instance.","would","being","directly","once","has","had","replacement","vs","to","is","afterwards","```first```","```second```?","parameters","and"]},{"Key":"single tab","Fragments":["character"]},{"Key":"tab character","Fragments":["or","or"]},{"Key":"character or","Fragments":["new","newline","digit"]},{"Key":"or new","Fragments":["lines.)"]},{"Key":" LINQ","Fragments":["also"]},{"Key":"LINQ also","Fragments":["allows"]},{"Key":"also allows","Fragments":["creating"]},{"Key":"allows creating","Fragments":["expressive"]},{"Key":"creating expressive","Fragments":["conditions"]},{"Key":"expressive conditions","Fragments":["that"]},{"Key":"conditions that","Fragments":["don't","evaluate"]},{"Key":"that don't","Fragments":["rely","require","even","really","really","contain","take","match,"]},{"Key":"don't rely","Fragments":["on"]},{"Key":"rely on","Fragments":["transforming","your","Unity","the","that.","the"]},{"Key":"on transforming","Fragments":["and"]},{"Key":"transforming and","Fragments":["comparing"]},{"Key":"and comparing","Fragments":["the","the","to","the","the"]},{"Key":"comparing the","Fragments":["entire","sorted","given","string","strings","strings.","results.","uppercased","hashes"]},{"Key":"entire strings","Fragments":["for","match."]},{"Key":"strings for","Fragments":["upper","each","each","the"]},{"Key":"for upper","Fragments":["or","case"]},{"Key":"upper or","Fragments":["lowercase."]},{"Key":" Neat","Fragments":["usage","alogirthm"]},{"Key":"Neat usage","Fragments":["of"]},{"Key":"the null","Fragments":["coalescing","issue.","coalescing","coalesce"]},{"Key":"null coalescing","Fragments":["operator!","operators"]},{"Key":"I liked","Fragments":["the","someone","the","the","the","your","the","this"]},{"Key":"liked the","Fragments":["LINQ","break-down","use","lambda","idea","challenge.","effect"]},{"Key":"LINQ expression","Fragments":["for"]},{"Key":"checking \"allUpper\"","Fragments":["better"]},{"Key":"\"allUpper\" better","Fragments":["than"]},{"Key":"than uppercasing","Fragments":["it"]},{"Key":"uppercasing it","Fragments":["both"]},{"Key":"it both","Fragments":["for"]},{"Key":"both for","Fragments":["expressiveness","your","your"]},{"Key":"for expressiveness","Fragments":["and"]},{"Key":"expressiveness and","Fragments":["performance."]},{"Key":"In IsYelling,","Fragments":["I"]},{"Key":"IsYelling, I","Fragments":["think"]},{"Key":"think doing","Fragments":[".ToList()"]},{"Key":"doing .ToList()","Fragments":["makes"]},{"Key":".ToList() makes","Fragments":["it"]},{"Key":"bit harder","Fragments":["to","to","to"]},{"Key":"harder to","Fragments":["understand","read,","read.","read","debug","read","debug/maintain","follow","keep","read.","read","read,","read.","read","read.","find","read.","read.","read.","reason"]},{"Key":"the point","Fragments":["of","is","of","where","that","of","(it's","of","was","was","of","of","was","is","where","of","of","plus","here","of","here","here","as","with","is"]},{"Key":"the method.","Fragments":["Performance","It","It's"]},{"Key":"method. Performance","Fragments":["would"]},{"Key":"Performance would","Fragments":["also"]},{"Key":"be affected.","Fragments":["returning"]},{"Key":"affected. returning","Fragments":["a"]},{"Key":"returning a","Fragments":["simple","new","single","bool.","KeyValuePair","new","value","distance"]},{"Key":"simple expession","Fragments":["would"]},{"Key":"expession would","Fragments":["be"]},{"Key":"be simpler","Fragments":["in","to","if","to","than","to","to","and"]},{"Key":"simpler in","Fragments":["my"]},{"Key":" IsSlience","Fragments":["is"]},{"Key":"IsSlience is","Fragments":["a"]},{"Key":"a typo!","Fragments":[":)"]},{"Key":"can take","Fragments":["it","advantage","you"]},{"Key":"take it","Fragments":["even","you","with","too","a","in"]},{"Key":"it even","Fragments":["further","simpler"]},{"Key":"even further","Fragments":["but",":)"]},{"Key":"further but","Fragments":["is"]},{"Key":"but is","Fragments":["kind","that","there","some","certainly","a","not","slightly","still","this"]},{"Key":"is kind","Fragments":["of","to","of","of","of","of","of","of","of","of","of"]},{"Key":"of overkill.","Fragments":["I"]},{"Key":"overkill. I","Fragments":["like"]},{"Key":"how this","Fragments":["reads","will","would","data","is","naturally"]},{"Key":"this reads","Fragments":["and"]},{"Key":"reads and","Fragments":["it"]},{"Key":"it eliminates","Fragments":["code"]},{"Key":"eliminates code","Fragments":["duplication"]},{"Key":"duplication (what","Fragments":["little"]},{"Key":"(what little","Fragments":["of"]},{"Key":"little of","Fragments":["it"]},{"Key":"of it","Fragments":["there","using","to","and","that","here."]},{"Key":"it there","Fragments":["was)."]},{"Key":"there was).","Fragments":["Looks"]},{"Key":"was). Looks","Fragments":["great."]},{"Key":"it actually","Fragments":["falls","warned","is","wants.","fits"]},{"Key":"actually falls","Fragments":["down"]},{"Key":"falls down","Fragments":["to"]},{"Key":"to personal","Fragments":["preference","preference."]},{"Key":"personal preference","Fragments":["at","now","thing.","thing.","as"]},{"Key":"preference at","Fragments":["that"]},{"Key":"at that","Fragments":["point.","index","level","level,","point","time.","point."]},{"Key":"that point.","Fragments":["I"]},{"Key":"went the","Fragments":["one","bonus"]},{"Key":"the one","Fragments":["return","place.","line","```Match```","fourCheck","liner.","after","I","in","large","large","I","within","you","class","hand","line"]},{"Key":"return with","Fragments":["multiple"]},{"Key":"multiple conditions","Fragments":["way,"]},{"Key":"conditions way,","Fragments":["but"]},{"Key":"way, but","Fragments":["both"]},{"Key":"but both","Fragments":["seem"]},{"Key":"both seem","Fragments":["fine"]},{"Key":"seem fine","Fragments":["to"]},{"Key":"fine to","Fragments":["me.","use"]},{"Key":" That's","Fragments":["really","true,","a","my","weird,","fair,","something","brilliant,","great,","true!","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","about","just","pretty","a","a","a","cool.","what","a","another"]},{"Key":"That's really","Fragments":["good"]},{"Key":"really good","Fragments":["feedback.","point.","point.","reason","one.","suggestions"]},{"Key":"good feedback.","Fragments":["Thanks!","This"]},{"Key":"feedback. Thanks!","Fragments":["I"]},{"Key":"Thanks! I","Fragments":["felt","like","didn't","haven't"]},{"Key":"felt a","Fragments":["little","lot"]},{"Key":"little bit","Fragments":["dirty","of","more","smaller,","more","hard","of","off"]},{"Key":"bit dirty","Fragments":["when"]},{"Key":"dirty when","Fragments":["I"]},{"Key":"I wrote","Fragments":["this","the","some","it","my","this","this","it","the","the","if","a","the","a","it","my"]},{"Key":"wrote this","Fragments":["one.","I","code","code","for","as:"]},{"Key":"one. I'll","Fragments":["look","use"]},{"Key":"I'll look","Fragments":["at","into","into"]},{"Key":"at better","Fragments":["strategies"]},{"Key":"better strategies","Fragments":["for"]},{"Key":"strategies for","Fragments":["dealing"]},{"Key":"for dealing","Fragments":["with"]},{"Key":"with whitespace,","Fragments":["and"]},{"Key":"whitespace, and","Fragments":["have","could"]},{"Key":"at LINQ","Fragments":["too."]},{"Key":"with @ezequiel","Fragments":["-"]},{"Key":"@ezequiel -","Fragments":["`ToList`"]},{"Key":"- `ToList`","Fragments":["is"]},{"Key":"`ToList` is","Fragments":["not"]},{"Key":"not needed","Fragments":["in","since","because","for","here","since","by","here."]},{"Key":"needed in","Fragments":["`IsYelling`.","your","iteration","this"]},{"Key":"in `IsYelling`.","Fragments":["Other"]},{"Key":"`IsYelling`. Other","Fragments":["than"]},{"Key":"Other than","Fragments":["that","that,","that,","that,","that,","that,","that,","that,","that,","taking","that,","that","that","that","that","that","that,","that,","that,","that,"]},{"Key":"than that","Fragments":["it's","its","the","your","it","it"]},{"Key":" Definetely","Fragments":["clever,"]},{"Key":"Definetely clever,","Fragments":["although"]},{"Key":"clever, although","Fragments":["it's"]},{"Key":"although it's","Fragments":["not"]},{"Key":"not super","Fragments":["readable."]},{"Key":"I definitely","Fragments":["meant","would","like","there's"]},{"Key":"definitely meant","Fragments":["it"]},{"Key":"meant it","Fragments":["to","took"]},{"Key":"be your","Fragments":["first","own"]},{"Key":"your first","Fragments":["suggestion,","if","if","two","suggested","suggestion","point,"]},{"Key":"first suggestion,","Fragments":["thanks"]},{"Key":"suggestion, thanks","Fragments":["for"]},{"Key":"for catching","Fragments":["that.","that"]},{"Key":"like that","Fragments":["the","line","you","before.","it","you've","you","in","you","caused","you","just","sort","it","you","you're","you've","triangle"]},{"Key":"if blocks","Fragments":["need","in","would"]},{"Key":"blocks need","Fragments":["to"]},{"Key":"this order.","Fragments":["if"]},{"Key":"order. if","Fragments":["they"]},{"Key":"are changed","Fragments":["by"]},{"Key":"changed by","Fragments":["a"]},{"Key":"a careless","Fragments":["edit"]},{"Key":"careless edit","Fragments":["then"]},{"Key":"edit then","Fragments":["things"]},{"Key":"then things","Fragments":["break."]},{"Key":"Also `IsShouted`","Fragments":["also"]},{"Key":"`IsShouted` also","Fragments":["tests"]},{"Key":"also tests","Fragments":["that"]},{"Key":"tests that","Fragments":["the"]},{"Key":"input actually","Fragments":["contains"]},{"Key":"actually contains","Fragments":["some"]},{"Key":"contains some","Fragments":["letters."]},{"Key":"some letters.","Fragments":["Multiple"]},{"Key":"letters. Multiple","Fragments":["responsibilities"]},{"Key":"Multiple responsibilities","Fragments":["for"]},{"Key":"responsibilities for","Fragments":["a"]},{"Key":"single method","Fragments":[":(","to"]},{"Key":"Added a","Fragments":["bit","_very_"]},{"Key":"bit to","Fragments":["remove"]},{"Key":"remove apostrophes","Fragments":["from"]},{"Key":"apostrophes from","Fragments":["the","the"]},{"Key":"from the","Fragments":["beginning/ending","name","readme","test","test","hip.","code","user","With_apostrophes_as_quotes","right","Nitpicks","start.","if","lambda.","NucleotideCounts","Clean","documentation:","`Roster`","java","leap","constructor","same","repository,","robot","description","sample","parameter","Regexp","point","input","nitty","string.","expression","readme","matches","first","WordCount","start,","original","statement","try-catch","original.","real","first","other","CLUI","context","current","possiblePrimes.","previous","requested","miserable","test","previous","end","fact","onset","length.","square","instance","code","list","test","About","input","lsit.","end","classes","string","leaptest.cs","top","tests."]},{"Key":"the beginning/ending","Fragments":["of"]},{"Key":"beginning/ending of","Fragments":["words."]},{"Key":"Can someone","Fragments":["explain"]},{"Key":"someone explain","Fragments":["how"]},{"Key":"explain how","Fragments":["to"]},{"Key":"use unit","Fragments":["testing?"]},{"Key":"unit testing?","Fragments":["Maybe"]},{"Key":"testing? Maybe","Fragments":["a"]},{"Key":"Maybe a","Fragments":["simple","more","guard"]},{"Key":"That's true,","Fragments":["but"]},{"Key":"true, but","Fragments":["I","for","if","for"]},{"Key":"that sacrifices","Fragments":["readability"]},{"Key":"sacrifices readability","Fragments":["without"]},{"Key":"readability without","Fragments":["any","cluttering"]},{"Key":"without any","Fragments":["real","extra","foreach","time","string"]},{"Key":"any real","Fragments":["upside."]},{"Key":"real upside.","Fragments":["Is"]},{"Key":"upside. Is","Fragments":["there"]},{"Key":"a benefit","Fragments":["I'm","to"]},{"Key":"benefit I'm","Fragments":["not"]},{"Key":"Does this","Fragments":["solution","new","mean","version","solution"]},{"Key":"this solution","Fragments":["pass","shorter","since","as","in","and","to","until","is","is","but","pass"]},{"Key":"solution pass","Fragments":["the","the"]},{"Key":"the Asking_a_question_with_a_trailing_space","Fragments":["test?"]},{"Key":" Nesting","Fragments":["\"if\"","if"]},{"Key":"Nesting \"if\"","Fragments":["statements"]},{"Key":"be really","Fragments":["hard","useful","nitpicky,","omitted.","helpful"]},{"Key":"really hard","Fragments":["to","to"]},{"Key":" nice","Fragments":["and","and"]},{"Key":"nice and","Fragments":["short!","compact.Get","succinct,","clear.","clean","clear"]},{"Key":"personally don't","Fragments":["like","see","think"]},{"Key":"like single","Fragments":["line","line"]},{"Key":"line \"if\"","Fragments":["statements."]},{"Key":" Static","Fragments":["class,"]},{"Key":"Static class,","Fragments":["because"]},{"Key":"class, because","Fragments":["it"]},{"Key":"no sense","Fragments":["to","either,"]},{"Key":"to construct","Fragments":["a","your","an"]},{"Key":"construct a","Fragments":["Year","`char`"]},{"Key":"a Year","Fragments":["object","class","object."]},{"Key":"Year object","Fragments":["with"]},{"Key":"object with","Fragments":["nothing","methods"]},{"Key":"with nothing","Fragments":["in"]},{"Key":"nothing in","Fragments":["it.","it,"]},{"Key":" Clear","Fragments":["documentation"]},{"Key":"Clear documentation","Fragments":["describing"]},{"Key":"documentation describing","Fragments":["the"]},{"Key":"describing the","Fragments":["intent","algorithm"]},{"Key":"intent that","Fragments":["can"]},{"Key":"be ran","Fragments":["against","against"]},{"Key":"ran against","Fragments":["various","the"]},{"Key":"against various","Fragments":["tools"]},{"Key":"various tools","Fragments":["(doxygen,"]},{"Key":"tools (doxygen,","Fragments":["sandcastle,"]},{"Key":"(doxygen, sandcastle,","Fragments":["etc.)"]},{"Key":"sandcastle, etc.)","Fragments":["and"]},{"Key":"etc.) and","Fragments":["that"]},{"Key":"also visible","Fragments":["in"]},{"Key":"visible in","Fragments":["Visual","this"]},{"Key":"in Visual","Fragments":["Studio","Studio"]},{"Key":"Visual Studio","Fragments":["Intellisense.","Intellisense.","2013","imported","doesn't","where","has","till","do","long","pre-populated","won't","Solution","2013,"]},{"Key":"logic itself","Fragments":["is"]},{"Key":"itself is","Fragments":["trivial","asking","unique","hard","already","static)."]},{"Key":"trivial and","Fragments":["is","boring.","boring."]},{"Key":"is thus","Fragments":["written"]},{"Key":"thus written","Fragments":["very"]},{"Key":"written very","Fragments":["concisely."]},{"Key":" @britney","Fragments":["the"]},{"Key":"@britney the","Fragments":["whole"]},{"Key":"whole exercism","Fragments":["thing"]},{"Key":"exercism thing","Fragments":["does"]},{"Key":"thing does","Fragments":["say"]},{"Key":"does say","Fragments":["if"]},{"Key":"say if","Fragments":["your","either","it"]},{"Key":"if your","Fragments":["framework","intent","boss","extension","passing","editor","comment","method"]},{"Key":"your framework","Fragments":["or"]},{"Key":"framework or","Fragments":["language"]},{"Key":"or language","Fragments":["has"]},{"Key":"language has","Fragments":["an"]},{"Key":"an inbuilt","Fragments":["function"]},{"Key":"inbuilt function","Fragments":["that"]},{"Key":"function that","Fragments":["would","keeps","adds","returns","always","doesn't","handles","does","returns","accomplishes","way"]},{"Key":"would complete","Fragments":["the"]},{"Key":"complete the","Fragments":["task"]},{"Key":"task DON'T","Fragments":["use"]},{"Key":"DON'T use","Fragments":["it!"]},{"Key":"Nesting if","Fragments":["statements"]},{"Key":"code harder","Fragments":["to","to"]},{"Key":"to read,","Fragments":["try","you","but","but","but","since","it","is","in","decipher","say","digest,","it"]},{"Key":"read, try","Fragments":["using"]},{"Key":"feedback, i'll","Fragments":["arrange"]},{"Key":"i'll arrange","Fragments":["that"]},{"Key":"arrange that","Fragments":["in"]},{"Key":" too","Fragments":["may"]},{"Key":"too may","Fragments":["comments"]},{"Key":"may comments","Fragments":["and"]},{"Key":"and nested","Fragments":["\"if\"","my"]},{"Key":"nested \"if\"","Fragments":["statements.","statements.","statements","statements"]},{"Key":"not use","Fragments":["this","function","the","Char.IsLetterOrDigit?","static","linq","Math.Pow...","a","`string.Format`?","`Char.IsLetter`","ToDictionary","a","ContainsKey","StringBuilder"]},{"Key":"this but","Fragments":[".NET","I've","input.EndsWith(\"?\");","will","also","regex","didn't"]},{"Key":"but .NET","Fragments":["has"]},{"Key":".NET has","Fragments":["this","a","its"]},{"Key":"has this","Fragments":["function"]},{"Key":"function built","Fragments":["in"]},{"Key":" \"DateTime.IsLeapYear(int","Fragments":["year);\""]},{"Key":"like those","Fragments":["static"]},{"Key":"those static","Fragments":["methods,"]},{"Key":"static methods,","Fragments":["because","but"]},{"Key":"methods, because","Fragments":["when"]},{"Key":"because when","Fragments":["you","dealing","the","I"]},{"Key":"you read","Fragments":["this","it"]},{"Key":"read this","Fragments":["code"]},{"Key":"code it","Fragments":["implies","YAGNI!","so","can"]},{"Key":"it implies","Fragments":["that"]},{"Key":"implies that","Fragments":["e.g.","you","you"]},{"Key":"that e.g.","Fragments":["Bob"]},{"Key":"e.g. Bob","Fragments":["is"]},{"Key":"Bob is","Fragments":["yelling,","asking","wrong.","not"]},{"Key":"is yelling,","Fragments":["Bob"]},{"Key":"yelling, Bob","Fragments":["is"]},{"Key":"is asking","Fragments":["questions.","for"]},{"Key":"asking questions.","Fragments":["And"]},{"Key":"questions. And","Fragments":["from"]},{"Key":"And from","Fragments":["README"]},{"Key":"from README","Fragments":["we"]},{"Key":"README we","Fragments":["know"]},{"Key":"that someone","Fragments":["alse","seeing","doesn't","else"]},{"Key":"someone alse","Fragments":["is"]},{"Key":"alse is","Fragments":["giving"]},{"Key":"is giving","Fragments":["the"]},{"Key":"giving the","Fragments":["input","public"]},{"Key":"input and","Fragments":["Bob","output","then","and","created","creating","converts"]},{"Key":"and Bob","Fragments":["reacts"]},{"Key":"Bob reacts","Fragments":["to"]},{"Key":"reacts to","Fragments":["it."]},{"Key":"One thing","Fragments":["though...","I","I","you","I","you","that","that","I","you","to","I"]},{"Key":"thing though...","Fragments":["I"]},{"Key":"though... I","Fragments":["have"]},{"Key":"have started","Fragments":["putting"]},{"Key":"started putting","Fragments":["braces","curly"]},{"Key":"putting braces","Fragments":["around"]},{"Key":"around even","Fragments":["single"]},{"Key":"even single","Fragments":["line"]},{"Key":"if statements,","Fragments":["as","even","I","in","is","it","why"]},{"Key":"statements, as","Fragments":["I"]},{"Key":"have seen","Fragments":["a","another","with","thus","others","a","where","here.","here"]},{"Key":"a couple","Fragments":["of","of","of","years","things.","of","of","of","years","of","weeks","of","of","of","of","of","of"]},{"Key":"couple of","Fragments":["nasty","brackets","explanatory","other","comments","very","other","minor","minor","minor","minor","minor","performance","minor","bitwise","features","things","things...","pointers.."]},{"Key":"of nasty","Fragments":["bugs"]},{"Key":"nasty bugs","Fragments":["in"]},{"Key":"bugs in","Fragments":["real"]},{"Key":"real code","Fragments":["caused","think"]},{"Key":"code caused","Fragments":["by"]},{"Key":"caused by","Fragments":["rogue","the"]},{"Key":"by rogue","Fragments":["carriage"]},{"Key":"rogue carriage","Fragments":["returns"]},{"Key":"carriage returns","Fragments":["either"]},{"Key":"returns either","Fragments":["being"]},{"Key":"either being","Fragments":["added"]},{"Key":"being added","Fragments":["or","more"]},{"Key":"added or","Fragments":["lost"]},{"Key":"or lost","Fragments":["and"]},{"Key":"lost and","Fragments":["radically"]},{"Key":"and radically","Fragments":["changing"]},{"Key":"radically changing","Fragments":["the"]},{"Key":"changing the","Fragments":["meaning","string","syntax","method","name","output","algorithm","Equals","code","types"]},{"Key":"the meaning","Fragments":["of","is","would","is","of"]},{"Key":"meaning of","Fragments":["code","complex)","logical","the"]},{"Key":"code blocks.","Fragments":["This","I"]},{"Key":"blocks. This","Fragments":["is"]},{"Key":"pretty personal","Fragments":["style"]},{"Key":"personal style","Fragments":["choice"]},{"Key":"style choice","Fragments":["though!"]},{"Key":"code cannot","Fragments":["be","be","be"]},{"Key":"against the","Fragments":["NUnit","submission","lambda","input","spirit","current","length.","relevant","cost","Microsoft","first"]},{"Key":"the NUnit","Fragments":["tests,","test","package.","test","testing","test","testing","testing,","testing.","framework","testing","documentation","Nuget","attributes","package"]},{"Key":"NUnit tests,","Fragments":["and"]},{"Key":"tests, and","Fragments":["thus","helped","TDD","thus,"]},{"Key":"and thus","Fragments":["is","had"]},{"Key":"thus is","Fragments":["against"]},{"Key":"is against","Fragments":["the","the"]},{"Key":"the submission","Fragments":["guidelines."]},{"Key":" Separation","Fragments":["of"]},{"Key":"Separation of","Fragments":["concerns"]},{"Key":"of concerns","Fragments":["is"]},{"Key":"concerns is","Fragments":["not"]},{"Key":"not visible","Fragments":["in"]},{"Key":"this program,","Fragments":["as"]},{"Key":"program, as","Fragments":["UI"]},{"Key":"as UI","Fragments":["and"]},{"Key":"UI and","Fragments":["business"]},{"Key":"and business","Fragments":["logic"]},{"Key":"business logic","Fragments":["(checking","into","with","distributed","more"]},{"Key":"logic (checking","Fragments":["if"]},{"Key":"(checking if","Fragments":["a"]},{"Key":"if a","Fragments":["year","string","year","year","year","value","property","char","null","BC","year","phrase","number","change","number","change","letter","negative","future","user","user","duplicate","bit","double","bit"]},{"Key":"leap year)","Fragments":["are","is"]},{"Key":"year) are","Fragments":["in"]},{"Key":"are in","Fragments":["the","Turkey","the","the","a","complete","the","separate"]},{"Key":"same place.","Fragments":["Consider"]},{"Key":"place. Consider","Fragments":["making"]},{"Key":"Consider making","Fragments":["the","4"]},{"Key":"check a","Fragments":["function","year"]},{"Key":"function returning","Fragments":["bool."]},{"Key":"are unnecessary","Fragments":["newlines","(redundant).","-"]},{"Key":"unnecessary newlines","Fragments":["in"]},{"Key":"newlines in","Fragments":["the"]},{"Key":"code, which","Fragments":["makes","is"]},{"Key":"it difficult","Fragments":["to","to","to","to","to"]},{"Key":"to read.","Fragments":["What's","Checking","Could","However","I","In","Compare","As","When","I","Maybe","I","At",":)","Especially","I","In",":)","His","But","Consider","I","In","Also","Especially","If"]},{"Key":"read. What's","Fragments":["up"]},{"Key":"What's up","Fragments":["with","with"]},{"Key":"for \"-999\"?","Fragments":["Invalid"]},{"Key":"\"-999\"? Invalid","Fragments":["inputs"]},{"Key":"Invalid inputs","Fragments":["do"]},{"Key":"inputs do","Fragments":["not"]},{"Key":"not generate","Fragments":["an"]},{"Key":"generate an","Fragments":["error","exception).","array","empty","exception."]},{"Key":"an error","Fragments":["message,","that","or","like","-","in","or","as","is","in","when","when","and"]},{"Key":"error message,","Fragments":["and"]},{"Key":"message, and","Fragments":["exception","at"]},{"Key":"and exception","Fragments":["is"]},{"Key":"not caught","Fragments":["if"]},{"Key":"caught if","Fragments":["parsing"]},{"Key":"if parsing","Fragments":["the"]},{"Key":"parsing the","Fragments":["number","string","string"]},{"Key":"the number","Fragments":["fails","uppercase","of","of","of","of","of","is","of","of","of","of","in","class,","of","1000,","value","2","of","of","to","\"","\"","(i.e.,","a","of","of","of","12345","of"]},{"Key":"number fails","Fragments":["(line"]},{"Key":"fails (line","Fragments":["25"]},{"Key":"(line 25","Fragments":["can"]},{"Key":"25 can","Fragments":["generate"]},{"Key":"can generate","Fragments":["an"]},{"Key":"Consider adding","Fragments":["comments"]},{"Key":"adding comments","Fragments":["to","as"]},{"Key":"comments to","Fragments":["explain","check","help","explain","other's"]},{"Key":"explain what","Fragments":["you"]},{"Key":"in each","Fragments":["step.","if-else","word","leap","given","for","```foreach```","step","word.","method","iteration."]},{"Key":"this pattern","Fragments":["a","nowadays.","kept","many","looks"]},{"Key":"pattern a","Fragments":["lot."]},{"Key":"if (/*","Fragments":["condition","condition","condition"]},{"Key":"(/* condition","Fragments":["*/)","*/)","*/)"]},{"Key":"This can","Fragments":["be","be","be","be","be"]},{"Key":"more clearly","Fragments":["and","and","and"]},{"Key":"clearly and","Fragments":["succinctly","succinctly","succinctly"]},{"Key":"and succinctly","Fragments":["expressed","expressed","expressed"]},{"Key":"succinctly expressed","Fragments":["as","as","this"]},{"Key":"return /*","Fragments":["condition","condition","condition"]},{"Key":"/* condition","Fragments":["*/;","*/;","*/;"]},{"Key":"I kind","Fragments":["of","of","of"]},{"Key":"Yes, it","Fragments":["could","is"]},{"Key":"more terse","Fragments":["with","and","for"]},{"Key":"terse with","Fragments":["a"]},{"Key":"a Message","Fragments":["class"]},{"Key":"class or","Fragments":["something,","its","in","an"]},{"Key":"or something,","Fragments":["but","too."]},{"Key":"something, but","Fragments":["I"]},{"Key":"simple problem,","Fragments":["a","so"]},{"Key":"problem, a","Fragments":["simple"]},{"Key":"simple solution","Fragments":["is"]},{"Key":"The Bob.IsSilence(input)","Fragments":["call"]},{"Key":"Bob.IsSilence(input) call","Fragments":["is"]},{"Key":"call is","Fragments":["a","unnecessary,","redundant.","going","made","normally","a","now"]},{"Key":"the syntax","Fragments":["shows","looks","from","for","\u003ccode\u003eword","should","rules","in","but"]},{"Key":"syntax shows","Fragments":["it.","a"]},{"Key":"shows it.","Fragments":["I"]},{"Key":"it's clear","Fragments":["enough","from"]},{"Key":"clear enough","Fragments":["that","that","to","-"]},{"Key":"it's checking","Fragments":["if","for"]},{"Key":"input is","Fragments":["silence","null.","null,","null,","null,","silence","a","contains","bad","actually","`null`.","passed"]},{"Key":"is silence","Fragments":["and","with"]},{"Key":"silence and","Fragments":["not"]},{"Key":"not that","Fragments":["bob","upset","usual","much","important.","it's","the","difficult,","it"]},{"Key":"that bob","Fragments":["is"]},{"Key":"bob is","Fragments":["silence."]},{"Key":" Simple","Fragments":["and","problem.","anagram","conversion","modulo"]},{"Key":"Simple and","Fragments":["clean."]},{"Key":"and clean.","Fragments":["I","However,"]},{"Key":"clean. I","Fragments":["wrote"]},{"Key":"the exact","Fragments":["same","same","same","same","opposite","order","length","same","same"]},{"Key":"exact same","Fragments":["code.","number","Dictionary","test","programming","check....","overhead"]},{"Key":"same code.","Fragments":[":)"]},{"Key":" At","Fragments":["line","line","first","first","first,","first","the","first","the","the","the","the","first","the","the"]},{"Key":"At line","Fragments":["15,","29,"]},{"Key":"line 15,","Fragments":["it's"]},{"Key":"15, it's","Fragments":["possible"]},{"Key":"it's possible","Fragments":["to","to","to"]},{"Key":"possible to","Fragments":["iterate","modify","only","get","introduce","maintain.","write","cut","do","index","achieve","thin","handle","do","reduce","write"]},{"Key":"to iterate","Fragments":["on","over","through","through","through","through","using"]},{"Key":"iterate on","Fragments":["key/value"]},{"Key":"on key/value","Fragments":["pairs"]},{"Key":"key/value pairs","Fragments":["instead"]},{"Key":"pairs instead","Fragments":["of"]},{"Key":"of only","Fragments":["keys,","numbers."]},{"Key":"only keys,","Fragments":["then"]},{"Key":"keys, then","Fragments":["looking"]},{"Key":"then looking","Fragments":["up"]},{"Key":"looking up","Fragments":["the","duplicates","the","quadratic","Euclid's"]},{"Key":"up the","Fragments":["values","bad","value","expression?","symbol","statement","expression","using","logic.","function.","expression,","Key","answer","code","character","using","\"Deaf","long","chain","'binary","usings?","redundant","string","call","```.IsAnagram(string","last","conditions","code.","return","class"]},{"Key":"values just","Fragments":["under.","held"]},{"Key":"a difference?","Fragments":["I"]},{"Key":"difference? I","Fragments":["can't"]},{"Key":"can't spot","Fragments":["it!"]},{"Key":"it's necessary","Fragments":["to"]},{"Key":"necessary to","Fragments":["to","submit","pass","complete","compile)."]},{"Key":"to to","Fragments":[".ToCharArray()."]},{"Key":"to .ToCharArray().","Fragments":["Also,"]},{"Key":".ToCharArray(). Also,","Fragments":["using"]},{"Key":"Also, using","Fragments":["Math.Min"]},{"Key":"using Math.Min","Fragments":["to","instead"]},{"Key":"Math.Min to","Fragments":["figure","increase","find"]},{"Key":"the min","Fragments":["length"]},{"Key":"min length","Fragments":["makes"]},{"Key":"length makes","Fragments":["it"]},{"Key":"readable I","Fragments":["would"]},{"Key":" LowerAndSort","Fragments":["could"]},{"Key":"LowerAndSort could","Fragments":["take"]},{"Key":"could take","Fragments":["advantage","or","a","a","indefinite"]},{"Key":"take advantage","Fragments":["of","of","of"]},{"Key":"advantage of","Fragments":["LINQ","a","removing","the","using","using","one","compare","the","Array"]},{"Key":"of LINQ","Fragments":["maybe?","will","and"]},{"Key":"LINQ maybe?","Fragments":["I"]},{"Key":"maybe? I","Fragments":["don't"]},{"Key":"if performance","Fragments":["would"]},{"Key":"performance would","Fragments":["be"]},{"Key":"be better,","Fragments":["but"]},{"Key":"better, but","Fragments":["I","to","it","didn't"]},{"Key":"think it'd","Fragments":["be"]},{"Key":"it'd be","Fragments":["a","using","simpler","simpler"]},{"Key":"a single,","Fragments":["expressive"]},{"Key":"single, expressive","Fragments":["line!"]},{"Key":" I,","Fragments":["for"]},{"Key":"I, for","Fragments":["some"]},{"Key":"some reason,","Fragments":["always"]},{"Key":"reason, always","Fragments":["forget"]},{"Key":"always forget","Fragments":["string.Equals"]},{"Key":"forget string.Equals","Fragments":["exists"]},{"Key":"string.Equals exists","Fragments":["and"]},{"Key":"exists and","Fragments":["use","then","then"]},{"Key":"and use","Fragments":["string.Compare(blah)","SequenceEqual","boolean","that.","it","an","```string```","the","it","the","it","a","LINQ","the","Select","it","tests",".split()","reflection.","of"]},{"Key":"use string.Compare(blah)","Fragments":["=="]},{"Key":"string.Compare(blah) ==","Fragments":["0..."]},{"Key":"== 0...","Fragments":["Thanks"]},{"Key":"0... Thanks","Fragments":["for"]},{"Key":"Line 24","Fragments":["and","becomes"]},{"Key":"24 and","Fragments":["26"]},{"Key":"and 26","Fragments":["should","for","for"]},{"Key":"26 should","Fragments":["be"]},{"Key":"same if.","Fragments":["No"]},{"Key":"if. No","Fragments":["need"]},{"Key":"No need","Fragments":["to","to","of","to","to","for","to","for","to"]},{"Key":"to nested","Fragments":["IFs"]},{"Key":"nested IFs","Fragments":["if"]},{"Key":"IFs if","Fragments":["the"]},{"Key":"result is","Fragments":["the","true","an"]},{"Key":"line 29,","Fragments":["I"]},{"Key":"29, I","Fragments":["think"]},{"Key":"think new","Fragments":["string(char[]"]},{"Key":"new string(char[]","Fragments":["s)"]},{"Key":"string(char[] s)","Fragments":["would"]},{"Key":"s) would","Fragments":["be"]},{"Key":"more expressive.","Fragments":["string.Join","It"]},{"Key":"expressive. string.Join","Fragments":["is"]},{"Key":"string.Join is","Fragments":["misleading."]},{"Key":" Everything","Fragments":["else","I"]},{"Key":"Everything else","Fragments":["looks","is"]},{"Key":"else looks","Fragments":["great!","strange"]},{"Key":"looks great!","Fragments":["I'm"]},{"Key":"great! I'm","Fragments":["the"]},{"Key":"I'm the","Fragments":["only","only"]},{"Key":"that didn't","Fragments":["think","have","have","fit","need"]},{"Key":"didn't think","Fragments":["of","of","about","of","warranted","about","of","to","about","about","to","to","of","it","about"]},{"Key":"of sorting","Fragments":["the","makes","the","the"]},{"Key":"sorting the","Fragments":["words","array?","letters","words","characters"]},{"Key":"the words","Fragments":["it","are","by","appear","directly.","using","(once)","it","above","in","and","-","and"]},{"Key":"words it","Fragments":["seems!","misses."]},{"Key":"did some","Fragments":["looking","direct","validation","research"]},{"Key":"some looking","Fragments":["around"]},{"Key":"looking around","Fragments":["and"]},{"Key":"and came","Fragments":["across"]},{"Key":"the SelectMany","Fragments":["extension"]},{"Key":"SelectMany extension","Fragments":["method."]},{"Key":"done this","Fragments":["in","exercise","on","in"]},{"Key":"this in","Fragments":["one","some","the","this","3","mind,","my","another","reverse","a","action.","Visual","a","this","this","the","linq.","a"]},{"Key":"one line,","Fragments":["but","but","but","let","I","which","I"]},{"Key":"line, but","Fragments":["I","I","personally","it","this"]},{"Key":"felt that","Fragments":["was","the","this","the","in","it","the"]},{"Key":"little too","Fragments":["terse"]},{"Key":"too terse","Fragments":["and"]},{"Key":"terse and","Fragments":["not","I'm"]},{"Key":"not very","Fragments":["readable.","idiomatic.","helpful","familiar","worried","familiar","good","readable?","descriptive","readable","readable,","readable","readable","readable","readable.","readable","readable","readable,"]},{"Key":"I welcome","Fragments":["your"]},{"Key":"welcome your","Fragments":["input,"]},{"Key":"your input,","Fragments":["but","i.e.","really"]},{"Key":"input, but","Fragments":["I","this"]},{"Key":"I respectfully","Fragments":["disagree."]},{"Key":"respectfully disagree.","Fragments":["I"]},{"Key":"disagree. I","Fragments":["think"]},{"Key":"an issue","Fragments":["of","here","if","with","with","with"]},{"Key":"issue of","Fragments":["style"]},{"Key":"of style","Fragments":["and","/","and","and"]},{"Key":"style and","Fragments":["we","stick","really","preference","functionality."]},{"Key":"and we","Fragments":["simply","are","want","want","have","need"]},{"Key":"simply disagree","Fragments":["on"]},{"Key":"disagree on","Fragments":["it.","the"]},{"Key":"Yeah, i","Fragments":["have"]},{"Key":"i have","Fragments":["no"]},{"Key":"no idea","Fragments":["what","how","how","where","the","you","you","if","how","what","that","\"IsNullOrWhiteSpace\"","what","you"]},{"Key":"idea what","Fragments":["i'm","they","to"]},{"Key":"what i'm","Fragments":["doing."]},{"Key":"i'm doing.","Fragments":["first"]},{"Key":"doing. first","Fragments":["time"]},{"Key":"time doing","Fragments":["C#"]},{"Key":"It still","Fragments":["can"]},{"Key":"still can","Fragments":["be"]},{"Key":"be simple,","Fragments":["just"]},{"Key":"simple, just","Fragments":["remove"]},{"Key":"just remove","Fragments":["Bob"]},{"Key":"remove Bob","Fragments":["out"]},{"Key":"Bob out","Fragments":["of"]},{"Key":" `if","Fragments":["(IsSilence(input))`","((aYear"]},{"Key":"`if (IsSilence(input))`","Fragments":["`if"]},{"Key":"(IsSilence(input))` `if","Fragments":["(IsYelling(input))`"]},{"Key":"It think","Fragments":["it"]},{"Key":"personally didn't","Fragments":["go"]},{"Key":"didn't go","Fragments":["with"]},{"Key":"a `DivisibleBy`","Fragments":["method"]},{"Key":"`DivisibleBy` method","Fragments":["like"]},{"Key":"method like","Fragments":["others","I'm","this"]},{"Key":"like others","Fragments":["have,"]},{"Key":"others have,","Fragments":["however"]},{"Key":"have, however","Fragments":["I"]},{"Key":"however I","Fragments":["think","really","used","don't","usually","was"]},{"Key":"method way","Fragments":["is"]},{"Key":"way is","Fragments":["more","more","more","tha"]},{"Key":"more elegant","Fragments":["than","solution","to","algorithm","way"]},{"Key":"elegant than","Fragments":["the","using"]},{"Key":"than the","Fragments":["`DivisibleBy(year,","other,","32bit.","ordered","`[]`","400","nested","other.","first.","other,","linq","other","test","large","3-return","obvious.","last","2","other","older","square","square","default","cost","key.","other","other","other","loop","power","simple","string","way","names","exercise."]},{"Key":"the `DivisibleBy(year,","Fragments":["divisor)`"]},{"Key":"`DivisibleBy(year, divisor)`","Fragments":["that"]},{"Key":"divisor)` that","Fragments":["others"]},{"Key":"that others","Fragments":["are"]},{"Key":"others are","Fragments":["doing.","always","doing,","approaching"]},{"Key":"In C#","Fragments":["it"]},{"Key":"C# it","Fragments":["is"]},{"Key":"is customary","Fragments":["to"]},{"Key":"customary to","Fragments":["use"]},{"Key":"use \"XML","Fragments":["comments\""]},{"Key":"\"XML comments\"","Fragments":["for"]},{"Key":"comments\" for","Fragments":["classes,"]},{"Key":"for classes,","Fragments":["methods,"]},{"Key":"classes, methods,","Fragments":["properties"]},{"Key":"methods, properties","Fragments":["and","and"]},{"Key":"properties and","Fragments":["other","fields","how","methods"]},{"Key":"and other","Fragments":["declarations","stats","common","solutions"]},{"Key":"other declarations","Fragments":["so"]},{"Key":"declarations so","Fragments":["that"]},{"Key":"so that","Fragments":["they","it's","I","it","your","the","it","we","might","I","they","you","is","the","the","She","you","you","the","if","only","we","anything","someone","it's","we","instead","I","you","I","someone","you","they","if","is","it","time","if","the","I","you","_sides[0]"]},{"Key":"that they","Fragments":["are","start","gave","read","will","were","do","braces","are","also","are"]},{"Key":"are visible","Fragments":["with"]},{"Key":"visible with","Fragments":["Visual"]},{"Key":"with Visual","Fragments":["Studio","Studio"]},{"Key":"Studio Intellisense.","Fragments":["Consider"]},{"Key":"Intellisense. Consider","Fragments":["using"]},{"Key":"Consider using","Fragments":["them,","the","the","`KeyValuePair\u003cstring,"]},{"Key":"using them,","Fragments":["as"]},{"Key":"them, as","Fragments":["they"]},{"Key":"as they","Fragments":["are","have","are","sometimes","are","can","follow","wish.","seem","result","add"]},{"Key":"the standard,","Fragments":["have"]},{"Key":"standard, have","Fragments":["great"]},{"Key":"have great","Fragments":["tool"]},{"Key":"great tool","Fragments":["support","but"]},{"Key":"tool support","Fragments":["and"]},{"Key":"support and","Fragments":["always"]},{"Key":"and always","Fragments":["have","go","better"]},{"Key":"always have","Fragments":["the","in","one"]},{"Key":"same form.","Fragments":["Try"]},{"Key":"form. Try","Fragments":["typing"]},{"Key":"Try typing","Fragments":["///"]},{"Key":"typing ///","Fragments":["(three"]},{"Key":"/// (three","Fragments":["slashes)"]},{"Key":"(three slashes)","Fragments":["just"]},{"Key":"slashes) just","Fragments":["before"]},{"Key":"just before","Fragments":["a"]},{"Key":"before a","Fragments":["method","different","randomly"]},{"Key":"method or","Fragments":["class","else"]},{"Key":"or class","Fragments":["definition","level"]},{"Key":"class definition","Fragments":["in"]},{"Key":"definition in","Fragments":["your"]},{"Key":"The comments","Fragments":["in","are","are","mention","are"]},{"Key":"comments in","Fragments":["code","your","order","to","them.","the"]},{"Key":"in code","Fragments":["are","to"]},{"Key":"code are","Fragments":["good"]},{"Key":"are good","Fragments":["and","if","in","points"]},{"Key":"good and","Fragments":["clear,","accomplishes","cleanly"]},{"Key":"and clear,","Fragments":["and"]},{"Key":"clear, and","Fragments":["the"]},{"Key":"the separation","Fragments":["to","of","of","in"]},{"Key":"separation to","Fragments":["different"]},{"Key":"to different","Fragments":["if"]},{"Key":"different if","Fragments":["branches"]},{"Key":"if branches","Fragments":["make"]},{"Key":"branches make","Fragments":["it"]},{"Key":"it easy","Fragments":["to","to","to","to","to"]},{"Key":"to step","Fragments":["through","through"]},{"Key":"step through","Fragments":["in","it","the","each"]},{"Key":"through in","Fragments":["a"]},{"Key":" @gail,Thank","Fragments":["you,"]},{"Key":"@gail,Thank you,","Fragments":["that's"]},{"Key":"you, that's","Fragments":["a"]},{"Key":"a very","Fragments":["good","minor","large","good","slow","minor","clever","slick","smart","verbose","minor","old","close","long","simple","limited","slow","brute-force","simple","light","good","good","efficient,short","unusual","inefficient","useful"]},{"Key":" just","Fragments":["informing"]},{"Key":"just informing","Fragments":["you,"]},{"Key":"informing you,","Fragments":["sorry"]},{"Key":"you, sorry","Fragments":["mate."]},{"Key":" Removed","Fragments":["a","unneeded","```string.IsNullOrEmpty(hear)```","the","redundant","some","unused","a","the","unnecessary","TE"]},{"Key":"Removed a","Fragments":["few","few"]},{"Key":"few extra","Fragments":["brackets.","parentheses,","method"]},{"Key":"good point","Fragments":["about","about","and","though","on","i","which"]},{"Key":"about comments","Fragments":["lying--I"]},{"Key":"comments lying--I","Fragments":["believe"]},{"Key":"lying--I believe","Fragments":["I've"]},{"Key":"believe I've","Fragments":["left"]},{"Key":"I've left","Fragments":["a"]},{"Key":"left a","Fragments":["few"]},{"Key":"few in","Fragments":["when"]},{"Key":"in when","Fragments":["they"]},{"Key":"when they","Fragments":["were","see","are","can","lose","don't","do","were","improve"]},{"Key":"they were","Fragments":["out","extremely","in","all","pretty","very","left","looking","needed","used"]},{"Key":"were out","Fragments":["of"]},{"Key":"of date.","Fragments":["I've"]},{"Key":"date. I've","Fragments":["always"]},{"Key":"I've always","Fragments":["disliked","used","avoided","thought","hated","been"]},{"Key":"always disliked","Fragments":["using"]},{"Key":"disliked using","Fragments":["them"]},{"Key":"using them","Fragments":["too","because"]},{"Key":"them too","Fragments":["much,"]},{"Key":"too much,","Fragments":["but","so"]},{"Key":"much, but","Fragments":["I've","that's"]},{"Key":"but I've","Fragments":["known","already","since","always","found","realized","never"]},{"Key":"I've known","Fragments":["plenty"]},{"Key":"known plenty","Fragments":["of"]},{"Key":"plenty of","Fragments":["people"]},{"Key":"people who","Fragments":["go","dislike"]},{"Key":"who go","Fragments":["far"]},{"Key":"go far","Fragments":["the"]},{"Key":"far the","Fragments":["other"]},{"Key":"other direction.","Fragments":["Personally,"]},{"Key":"\u0026\u0026 (year","Fragments":["%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%","%"]},{"Key":"is clear,","Fragments":["concise"]},{"Key":"clear, concise","Fragments":["and"]},{"Key":"concise and","Fragments":["accurate,","legible","clean.","elegant.","readable"]},{"Key":"and accurate,","Fragments":["if"]},{"Key":"accurate, if","Fragments":["not"]},{"Key":"the absolute","Fragments":["fastest"]},{"Key":"absolute fastest","Fragments":["for"]},{"Key":"fastest for","Fragments":["the"]},{"Key":"the average","Fragments":["case."]},{"Key":"average case.","Fragments":["But"]},{"Key":"case. But","Fragments":["who"]},{"Key":"But who","Fragments":["will"]},{"Key":"who will","Fragments":["see"]},{"Key":"will see","Fragments":["this","a","the","the","that","how"]},{"Key":"and at","Fragments":["what","the","a"]},{"Key":"at what","Fragments":["level","others"]},{"Key":"what level","Fragments":["of"]},{"Key":"level of","Fragments":["c#","sophistication","optimization","nesting","abstraction"]},{"Key":"of c#","Fragments":["competence?"]},{"Key":"c# competence?","Fragments":["A"]},{"Key":"competence? A","Fragments":["programmer"]},{"Key":"A programmer","Fragments":["will"]},{"Key":"programmer will","Fragments":["a)"]},{"Key":"will a)","Fragments":["understand"]},{"Key":"a) understand","Fragments":["it"]},{"Key":"understand it","Fragments":["and","when","at","today.","easier.","Sum"]},{"Key":"and b)","Fragments":["trust"]},{"Key":"b) trust","Fragments":["that"]},{"Key":"trust that","Fragments":["it","the"]},{"Key":"works unless","Fragments":["it"]},{"Key":"it doesn't.","Fragments":["Of"]},{"Key":"doesn't. Of","Fragments":["course,"]},{"Key":"Of course,","Fragments":["this","what","if","this","I","it'll","the","but","if","if"]},{"Key":"course, this","Fragments":["is","has","starting"]},{"Key":"a trivial","Fragments":["snippet,","code"]},{"Key":"trivial snippet,","Fragments":["and"]},{"Key":"snippet, and","Fragments":["we're"]},{"Key":"and we're","Fragments":["really"]},{"Key":"we're really","Fragments":["discussing"]},{"Key":"really discussing","Fragments":["general"]},{"Key":"discussing general","Fragments":["principles."]},{"Key":"would change","Fragments":["the","your","the","readability","would","would","two"]},{"Key":"the spelling","Fragments":["of"]},{"Key":"spelling of","Fragments":["`DividesByFor`","\"Transform\""]},{"Key":"of `DividesByFor`","Fragments":["to"]},{"Key":"`DividesByFor` to","Fragments":["`DividesByFour`"]},{"Key":"to `DividesByFour`","Fragments":["so"]},{"Key":"`DividesByFour` so","Fragments":["that"]},{"Key":"clear from","Fragments":["the","context"]},{"Key":"the name","Fragments":["that","of","YearIsLeapCentury().","of","of","of","of","from","and","be","from","could","described","generator","to","says,","format","which","is","of","of","AA001","is","a","of","from","putting","I"]},{"Key":"name that","Fragments":["it's","maybe","hadn't"]},{"Key":"it's referring","Fragments":["to"]},{"Key":"referring to","Fragments":["a","`IndexOfAny()`?"]},{"Key":"In addition","Fragments":["the","to","it"]},{"Key":"addition the","Fragments":["expression"]},{"Key":"expression `something","Fragments":["?"]},{"Key":"`something ?","Fragments":["true","true"]},{"Key":"? true","Fragments":[":",":",":",":",":",":",":"]},{"Key":"true :","Fragments":["false`","false;","false`.","false`","false;","false;","false;","false;"]},{"Key":": false`","Fragments":["is","is"]},{"Key":"false` is","Fragments":["redundant","redundant."]},{"Key":"is redundant","Fragments":["and","since","(it's"]},{"Key":"redundant and","Fragments":["should","if","too"]},{"Key":"and should","Fragments":["be","return","run","be","return","have","be","not"]},{"Key":"replaced with","Fragments":["`something`.","`","```String.IsNullOrWhiteSpace(statement)","simple","`string.IsNullOrWhiteSpace","a","`T`."]},{"Key":" Performance","Fragments":["differences","is"]},{"Key":"Performance differences","Fragments":["between"]},{"Key":"differences between","Fragments":["this"]},{"Key":"between this","Fragments":["and"]},{"Key":"this and","Fragments":["a","realized","no","I","throw","even","make","I","Binary","future","got","made","are","try"]},{"Key":"a LINQ","Fragments":["implementation","query!","solution","query","solution"]},{"Key":"LINQ implementation","Fragments":["of"]},{"Key":"of ```LowerAndSort```","Fragments":["are"]},{"Key":"```LowerAndSort``` are","Fragments":["negligible"]},{"Key":"are negligible","Fragments":["(unless"]},{"Key":"negligible (unless","Fragments":["you"]},{"Key":"(unless you","Fragments":["count"]},{"Key":"you count","Fragments":["memory"]},{"Key":"count memory","Fragments":["since"]},{"Key":"memory since","Fragments":["```Array.Sort```","entry.Key","we'll"]},{"Key":"since ```Array.Sort```","Fragments":["just"]},{"Key":"```Array.Sort``` just","Fragments":["moves"]},{"Key":"just moves","Fragments":["bits"]},{"Key":"moves bits","Fragments":["around"]},{"Key":"bits around","Fragments":["instead"]},{"Key":"around instead","Fragments":["of"]},{"Key":"of creating","Fragments":["a","a","an","a","a","the","new","a"]},{"Key":"creating a","Fragments":["new","static","new","method","custom","new","separate","bunch","new","proper","new","method","new","new","new","string","valid","class","new","new","new","TimeSpan","enum","tuple","series"]},{"Key":"a new","Fragments":["array)","list.","project,","iteration","list","List\u003c\u003e","empty","Project","Project,","class","version","char","class.","instance","record","variable)","class,","variable","variable.","string","List","version","key","variable.","dictionary,","string,","version","iteration","word","test","List","list","iteration","one","string","test","list.","empty","list","list","list","grade","list","string","one.","value.","list","model","List","list,","string","runtime","Queue","version","iteration","DateTime","DateTime","revision.","empty","project","response","responseMap","concrete","iteration","instance","collection","school","method","version","string","instance","int","array","School","iteration","solution."]},{"Key":"new array)","Fragments":["because"]},{"Key":"array) because","Fragments":["ultimately"]},{"Key":"because ultimately","Fragments":["they're"]},{"Key":"ultimately they're","Fragments":["both"]},{"Key":"they're both","Fragments":["using"]},{"Key":"both using","Fragments":["a"]},{"Key":"a QuickSort","Fragments":["algorithm"]},{"Key":"QuickSort algorithm","Fragments":["(or"]},{"Key":"algorithm (or","Fragments":["variation"]},{"Key":"(or variation","Fragments":["of"]},{"Key":"variation of","Fragments":["one)."]},{"Key":"As far","Fragments":["as","as","as","as","as","as","as","as","as","as","as","as","as","as","as"]},{"Key":"far as","Fragments":["expressiveness","pure","the","I","the","design","changes","the","nesting","@antonio","the","Linq","writing","I","the","general","the","I'm","I","readability"]},{"Key":"as expressiveness","Fragments":["goes,"]},{"Key":"expressiveness goes,","Fragments":["if"]},{"Key":"goes, if","Fragments":["I"]},{"Key":"did this","Fragments":["via","since","before","to","to","exercise","exercise","one.","not","exercise","without","\"year"]},{"Key":"this via","Fragments":["LINQ,"]},{"Key":"via LINQ,","Fragments":["it"]},{"Key":"LINQ, it","Fragments":["would"]},{"Key":" ```return","Fragments":["string.Concat(word.ToLower().OrderBy(c","first.Zip(second,","aStrand.Zip(bStrand,","dn1.Zip(dn2,","input.Any(char.IsLetter)"]},{"Key":"```return string.Concat(word.ToLower().OrderBy(c","Fragments":["=\u003e"]},{"Key":"string.Concat(word.ToLower().OrderBy(c =\u003e","Fragments":["c));```"]},{"Key":"can't really","Fragments":["say","blame","say","understand"]},{"Key":"really say","Fragments":["if","if"]},{"Key":"if either","Fragments":["are"]},{"Key":"either are","Fragments":["more"]},{"Key":"are more","Fragments":["expressive","uppercase","upper","straightforward.","than","difficult","calls","readable."]},{"Key":"expressive other","Fragments":["than"]},{"Key":"other than","Fragments":["one","letting","that,","the","that,","I","myself","the","initialization.","letters.","using","a","the","apostrophes","the"]},{"Key":"than one","Fragments":["can","check","return","deep","condition","return","nested","point","of","value","matches)","collection.","place","char"]},{"Key":"one can","Fragments":["be","just"]},{"Key":"be less","Fragments":["lines","cpu","special","efficient","than","efficient","expensive"]},{"Key":"less lines","Fragments":["than","of","doesn't"]},{"Key":"lines than","Fragments":["another.","the"]},{"Key":"than another.","Fragments":["Do"]},{"Key":"another. Do","Fragments":["you"]},{"Key":"LINQ version","Fragments":["easier"]},{"Key":"version easier","Fragments":["to"]},{"Key":" Ooo,","Fragments":["you","didn't"]},{"Key":"Ooo, you","Fragments":["went"]},{"Key":"the bonus","Fragments":["round!","round,","points","requirement...","task","and","challenge","requirement","spec"]},{"Key":"I learned","Fragments":["quite","from","something!).","a","something","something","that","something","a","that"]},{"Key":"learned quite","Fragments":["a"]},{"Key":"bit from","Fragments":["your","now","the"]},{"Key":"your implementation","Fragments":["here","is","after","only","very","has"]},{"Key":"implementation here","Fragments":["and"]},{"Key":"here and","Fragments":["not"]},{"Key":"just the","Fragments":["existence","way","grades","asserts","way","ToUpper()","concrete","Year","kind.","static","same","date","input","ones","first","equivalent"]},{"Key":"the existence","Fragments":["of","of","of","of","in"]},{"Key":"existence of","Fragments":["```ReadOnlyDictionary```.","in","at","the"]},{"Key":"of ```ReadOnlyDictionary```.","Fragments":["I"]},{"Key":"```ReadOnlyDictionary```. I","Fragments":["like"]},{"Key":"like ```ReadOnlyDictionary```","Fragments":["but"]},{"Key":"```ReadOnlyDictionary``` but","Fragments":["I'm"]},{"Key":"but I'm","Fragments":["curious","not","not","using","fairly","ok","wondering","afraid","old","not","really","getting","pretty"]},{"Key":"curious about","Fragments":["your","your"]},{"Key":"about your","Fragments":["thoughts","thoughts","variable","namespace."]},{"Key":"your thoughts","Fragments":["on","on","on"]},{"Key":"thoughts on","Fragments":["an","the","that","splitting","your","where","this!"]},{"Key":"on an","Fragments":["alternative.","array.","extra","empty","internal","empty","encode","enum","empty"]},{"Key":"The biggest","Fragments":["alternative","nitpick","issue","trouble","trade-off"]},{"Key":"biggest alternative","Fragments":["I"]},{"Key":"alternative I","Fragments":["can"]},{"Key":"to just","Fragments":["return","IsDivisible","show","keep","use","return","write","have","do","look","doing","keep","call","let","say:","return","return","launch","for","add","invert","a","keep"]},{"Key":"a deep","Fragments":["copy","copy"]},{"Key":"deep copy","Fragments":["of","(I","the"]},{"Key":"copy of","Fragments":["the","private","every","any","any","the","itself,","the"]},{"Key":"the \"database\"","Fragments":["via","is"]},{"Key":"\"database\" via","Fragments":["LINQ"]},{"Key":"via LINQ","Fragments":["or"]},{"Key":"LINQ or","Fragments":["some","a"]},{"Key":"or some","Fragments":["other","other","such,","of"]},{"Key":"some other","Fragments":["means","key","replies","people's","people!)","mathematics","object","submissions.","submissions.","submissions","order.","submissions","users.","examples","directive"]},{"Key":"other means","Fragments":["(using"]},{"Key":"means (using","Fragments":["the"]},{"Key":"(using the","Fragments":["Dictionary","\u0026\u0026"]},{"Key":"the Dictionary","Fragments":["constructor","seeded","directly","itself.","to","three","lookups","lookup","will","class","a","choice","entries...","point","approach","initializer","directly:","so"]},{"Key":"Dictionary constructor","Fragments":["isn't"]},{"Key":"constructor isn't","Fragments":["enough).","a"]},{"Key":"isn't enough).","Fragments":["The"]},{"Key":"enough). The","Fragments":["benefit"]},{"Key":"The benefit","Fragments":["would","being"]},{"Key":"benefit would","Fragments":["be"]},{"Key":"be no","Fragments":["immediate","need","such","main()"]},{"Key":"no immediate","Fragments":["runtime","feedback"]},{"Key":"immediate runtime","Fragments":["errors"]},{"Key":"runtime errors","Fragments":["for"]},{"Key":"errors for","Fragments":["the"]},{"Key":"the user","Fragments":["(if","may","and","types","scratching","what","to","asks","from","has","will","to","what","entered","to","input,","time","is","is","is","is","is","might","doesn't"]},{"Key":"user (if","Fragments":["there"]},{"Key":"(if there","Fragments":["was"]},{"Key":"there was","Fragments":["an","a","a","an","a","a","a","a","probably","a","at","an","a","a","something","a","just"]},{"Key":"an interface","Fragments":["looking","where"]},{"Key":"interface looking","Fragments":["for"]},{"Key":"an IDictionary).","Fragments":["The"]},{"Key":"IDictionary). The","Fragments":["drawbacks"]},{"Key":"The drawbacks","Fragments":["I"]},{"Key":"drawbacks I","Fragments":["can"]},{"Key":"see would","Fragments":["be"]},{"Key":"same where","Fragments":["the"]},{"Key":"user may","Fragments":["try"]},{"Key":"may try","Fragments":["to"]},{"Key":"to directly","Fragments":["change","accessing","access","calculate"]},{"Key":"directly change","Fragments":["the"]},{"Key":"database with","Fragments":["no"]},{"Key":"with no","Fragments":["immediate","refactoring.","remainder'\u003c/em\u003e","loops.","loops","arguments","higher","help!","argument","fancy","side"]},{"Key":"immediate feedback","Fragments":["that"]},{"Key":"feedback that","Fragments":["it's","duplicates"]},{"Key":"don't necessarily","Fragments":["think","improve"]},{"Key":"necessarily think","Fragments":["one"]},{"Key":"think one","Fragments":["is","is"]},{"Key":"one is","Fragments":["better","worth","necessarily","easier","really","starting","better","correct"]},{"Key":"is better","Fragments":["than","than","off","to","to","readable.","still,","than","than","than","at","than","than","and","to","but","than","than","than"]},{"Key":"other, just","Fragments":["curious"]},{"Key":"just curious","Fragments":["about"]},{"Key":"as pure","Fragments":["nitpicking"]},{"Key":"pure nitpicking","Fragments":["goes,"]},{"Key":"nitpicking goes,","Fragments":["here","the"]},{"Key":"goes, here","Fragments":["is"]},{"Key":"take or","Fragments":["leave","not,"]},{"Key":"or leave","Fragments":["the"]},{"Key":"it's only","Fragments":["used","concern"]},{"Key":"only used","Fragments":["once.","in","when"]},{"Key":"used once.","Fragments":["Could"]},{"Key":"once. Could","Fragments":["save"]},{"Key":"Could save","Fragments":["7"]},{"Key":"save 7","Fragments":["lines"]},{"Key":"7 lines","Fragments":["of"]},{"Key":"just do","Fragments":["what","first[i]","it","newScores[letter.ToLower()]","something","two","the","static","\u003ccode\u003eprivate","\u003ccode\u003e@jamison","\u003ccode\u003ex","it","`c"]},{"Key":"do what","Fragments":["the"]},{"Key":"extension was","Fragments":["doing"]},{"Key":"The ```Database```","Fragments":["property"]},{"Key":"```Database``` property","Fragments":["seems"]},{"Key":"property seems","Fragments":["unnecessary."]},{"Key":"seems unnecessary.","Fragments":["You"]},{"Key":"unnecessary. You","Fragments":["could","can"]},{"Key":"could easily","Fragments":["put","be","be","be","change.","have","appear"]},{"Key":"easily put","Fragments":["all"]},{"Key":"of ```Database```","Fragments":["in"]},{"Key":"```Database``` in","Fragments":["```Roster```."]},{"Key":"3. Since","Fragments":["you're"]},{"Key":"Since you're","Fragments":["going"]},{"Key":"you're going","Fragments":["for","into","here.","to","to"]},{"Key":"going for","Fragments":["the","pattern","the","least","the","in","short","efficient"]},{"Key":"bonus round,","Fragments":["the"]},{"Key":"round, the","Fragments":["\"database\""]},{"Key":"\"database\" is","Fragments":["read-only"]},{"Key":"is read-only","Fragments":["everywhere"]},{"Key":"read-only everywhere","Fragments":["except"]},{"Key":"everywhere except","Fragments":["in"]},{"Key":"except in","Fragments":["the","constructors"]},{"Key":"the ```Grade```","Fragments":["method."]},{"Key":"```Grade``` method.","Fragments":["The"]},{"Key":"The list","Fragments":["returned","is"]},{"Key":"list returned","Fragments":["can"]},{"Key":"returned can","Fragments":["be"]},{"Key":"Oh, no","Fragments":["problem."]},{"Key":"no problem.","Fragments":["Are","If"]},{"Key":"problem. Are","Fragments":["you"]},{"Key":"Are you","Fragments":["using","sure?","then","converting"]},{"Key":"you using","Fragments":["Visual"]},{"Key":"using Visual","Fragments":["Studio?","Studio."]},{"Key":"Visual Studio?","Fragments":["If"]},{"Key":"Studio? If","Fragments":["so,"]},{"Key":"If so,","Fragments":["you","then","I'll","should","string.Split()","LINQ"]},{"Key":"so, you","Fragments":["might"]},{"Key":"you might","Fragments":["be","as","call","want","want","want","as","want","return","want","end","as","still","want","want","have","have","want","be","look","want","want","as","have","not","consider","do","do","end","disagree","not","get","argue","argue"]},{"Key":"some use","Fragments":["out"]},{"Key":"use out","Fragments":["of"]},{"Key":"1. Use","Fragments":["the"]},{"Key":"Use the","Fragments":["NuGet"]},{"Key":"the NuGet","Fragments":["package","package","extension"]},{"Key":"NuGet package","Fragments":["manager","manager"]},{"Key":"package manager","Fragments":["to","include"]},{"Key":"manager to","Fragments":["add"]},{"Key":"a reference","Fragments":["to","to","to","they","to","that"]},{"Key":"reference to","Fragments":["NUnit","`RegEx`.","a","access","the"]},{"Key":"to NUnit","Fragments":["to"]},{"Key":"NUnit to","Fragments":["your","do","see"]},{"Key":"to your","Fragments":["project.","other","solution,","solution,","%","code,","Hey","thought","private","experience.","class","code.","existing","method","suggestions!"]},{"Key":"your project.","Fragments":["(it"]},{"Key":"project. (it","Fragments":["looks"]},{"Key":"(it looks","Fragments":["like"]},{"Key":"like you","Fragments":["may","mentioned","have","have","might","did","are","would","did","know","could"]},{"Key":"have already","Fragments":["done","determined","done","been","fixed.","validated,"]},{"Key":"already done","Fragments":["this?)","the"]},{"Key":"1. Click","Fragments":["the","the"]},{"Key":"Click the","Fragments":["Test","Test"]},{"Key":"the Test","Fragments":["\u003e","\u003e","Projects","fixture","since","file."]},{"Key":"Test \u003e","Fragments":["Run","Run"]},{"Key":"\u003e Run","Fragments":["\u003e","\u003e"]},{"Key":"Run \u003e","Fragments":["All","All"]},{"Key":"\u003e All","Fragments":["Tests","Tests"]},{"Key":"All Tests","Fragments":["menu.","menu."]},{"Key":"The test","Fragments":["runner","should","checks","(all","case","doesn't","defines","cases","is"]},{"Key":"test runner","Fragments":["should","doesn't","doesn't","up"]},{"Key":"runner should","Fragments":["find"]},{"Key":"should find","Fragments":["your"]},{"Key":"find your","Fragments":["tests","tests,","tests,","expressions"]},{"Key":"your tests","Fragments":["and","should","and","in","after"]},{"Key":"and execute","Fragments":["them.","if","a"]},{"Key":"execute them.","Fragments":["Several"]},{"Key":"them. Several","Fragments":["of"]},{"Key":"Several of","Fragments":["the"]},{"Key":"tests are","Fragments":["marked","giving","poor","calling","given","usually","in","for.","commented","stupid.","trying","laid","expecting","poor","poor","just","and","expecting","not"]},{"Key":"are marked","Fragments":["`[Ignore]`,"]},{"Key":"marked `[Ignore]`,","Fragments":["so"]},{"Key":"`[Ignore]`, so","Fragments":["you'll"]},{"Key":"so you'll","Fragments":["have"]},{"Key":"remove those","Fragments":["lines.","int","from"]},{"Key":"your project","Fragments":["doesn't","name.","(upto"]},{"Key":"project doesn't","Fragments":["compile,"]},{"Key":"doesn't compile,","Fragments":["(which"]},{"Key":"compile, (which","Fragments":["it"]},{"Key":"(which it","Fragments":["probably"]},{"Key":"it probably","Fragments":["won't","ended","is","has"]},{"Key":"probably won't","Fragments":["at","make","be","be","make"]},{"Key":"won't at","Fragments":["first)"]},{"Key":"at first)","Fragments":["you"]},{"Key":"first) you","Fragments":["can"]},{"Key":"can consider","Fragments":["that"]},{"Key":"consider that","Fragments":["a","one.","building"]},{"Key":"a failing","Fragments":["test."]},{"Key":"runner doesn't","Fragments":["find","find"]},{"Key":"doesn't find","Fragments":["your","your"]},{"Key":"your tests,","Fragments":["you","you"]},{"Key":"may also","Fragments":["have","need","serve"]},{"Key":"also have","Fragments":["to","hidden","to","crafted"]},{"Key":"NUnit test","Fragments":["adapter","adapter.","suite"]},{"Key":"test adapter","Fragments":["for"]},{"Key":"adapter for","Fragments":["visual"]},{"Key":"for visual","Fragments":["studio."]},{"Key":"1. When","Fragments":["you've"]},{"Key":"When you've","Fragments":["got"]},{"Key":"you've got","Fragments":["all","some","going","to","all","no","doNotEnd","a","a","the","a","a"]},{"Key":"got all","Fragments":["green","that"]},{"Key":"all green","Fragments":["test"]},{"Key":"green test","Fragments":["results,"]},{"Key":"test results,","Fragments":["resubmit!"]},{"Key":"Good luck","Fragments":["and","with","if","if","with","if","if","if"]},{"Key":"luck and","Fragments":["have"]},{"Key":"Good first","Fragments":["shot"]},{"Key":"first shot","Fragments":["but"]},{"Key":"shot but","Fragments":["I"]},{"Key":"are some","Fragments":["things","shortcuts","some","compiler","good","improvements","examples","arguments","of","cases"]},{"Key":"to tighten","Fragments":["things","up"]},{"Key":"tighten things","Fragments":["up:"]},{"Key":"1. ```phrase```","Fragments":["should"]},{"Key":"```phrase``` should","Fragments":["probably"]},{"Key":"private instance","Fragments":["variable"]},{"Key":"instance variable","Fragments":["rather"]},{"Key":"variable rather","Fragments":["than"]},{"Key":"than a","Fragments":["public","space","list","line","foreach","factory","one-liner;","big","hard","single","Dictionary","copy,","lower","separate","letter/score","programming","while","char","null","quick"]},{"Key":"The ```Regex```","Fragments":["object"]},{"Key":"```Regex``` object","Fragments":["wants","is"]},{"Key":"object wants","Fragments":["to"]},{"Key":"wants to","Fragments":["be","test","continue","test"]},{"Key":"be used","Fragments":["in","in","twice","as","for","in","for","for","for","for","somewhere","to","to","anymore.","for","to","for","and","in","in","to","for","together","by","elsewhere.","to","to"]},{"Key":"in certain","Fragments":["ways"]},{"Key":"certain ways","Fragments":["to"]},{"Key":"ways to","Fragments":["be","handle","accomplish","do","do","do","make","shorten","approach","approach","say","do","code","do","solve","implement","optimize","do","do","check","do","do","solve"]},{"Key":"be performant.","Fragments":["Either"]},{"Key":"performant. Either","Fragments":["use"]},{"Key":"Either use","Fragments":["a"]},{"Key":"a ```Regex```","Fragments":["class"]},{"Key":"```Regex``` class","Fragments":["variable"]},{"Key":"class variable","Fragments":["(instance","and","named"]},{"Key":"variable (instance","Fragments":["or"]},{"Key":"(instance or","Fragments":["static"]},{"Key":"or static","Fragments":["depending","readonly's","member."]},{"Key":"static depending","Fragments":["on"]},{"Key":"depending on","Fragments":["the","the","what"]},{"Key":"the scenario)","Fragments":["that"]},{"Key":"scenario) that","Fragments":["gets"]},{"Key":"that gets","Fragments":["created"]},{"Key":"gets created","Fragments":["once"]},{"Key":"created once","Fragments":["or"]},{"Key":"once or","Fragments":["use"]},{"Key":"or use","Fragments":["the","pure","Aggregate"]},{"Key":"the static","Fragments":["methods","bool","and","function","```Score```","version","Score","class","constructor","type","classes.","helper","`Score`","method","regex","function","version","version","method","method.","Regex"]},{"Key":"static methods","Fragments":["off","on","is","and","(ie."]},{"Key":"methods off","Fragments":["of"]},{"Key":"3. This","Fragments":["can","is","is"]},{"Key":"be done","Fragments":["with","on","with","without?","more","once.","different?","outside","in","without","more","by","in","in","up-front.","by","as","once?","here","through","far"]},{"Key":"done with","Fragments":["one","care,","out"]},{"Key":"with one","Fragments":["regex.","of","expression","single","of","line","of"]},{"Key":"one regex.","Fragments":["Rather"]},{"Key":"regex. Rather","Fragments":["than"]},{"Key":"Rather than","Fragments":["matching","have","throwing","calling","TakeWhile"]},{"Key":"than matching","Fragments":["what"]},{"Key":"matching what","Fragments":["**isn't**","**is**"]},{"Key":"what **isn't**","Fragments":["a"]},{"Key":"**isn't** a","Fragments":["word,"]},{"Key":"a word,","Fragments":["think"]},{"Key":"word, think","Fragments":["about"]},{"Key":"about matching","Fragments":["what"]},{"Key":"what **is**","Fragments":["a"]},{"Key":"**is** a","Fragments":["word"]},{"Key":"a word","Fragments":["in","and","though,","won't","is","rather","with"]},{"Key":"word in","Fragments":["this","words)","the","the","the"]},{"Key":"exercise and","Fragments":["then","will"]},{"Key":"then iterating","Fragments":["over"]},{"Key":"iterating over","Fragments":["that.","all","the","the"]},{"Key":"with @mandy","Fragments":["regarding"]},{"Key":"@mandy regarding","Fragments":["creating"]},{"Key":"regarding creating","Fragments":["a"]},{"Key":"static class","Fragments":["(and","and","for","feature","Year","LinqExtensions"]},{"Key":"class (and","Fragments":["static"]},{"Key":"(and static","Fragments":["methods)."]},{"Key":"static methods).","Fragments":["That"]},{"Key":"methods). That","Fragments":["would"]},{"Key":"That would","Fragments":["make","remove","make","result","be","be","definitely","mean","mean","avoid","get","clear","simplify","be","make"]},{"Key":"make your","Fragments":["code","logic","code","existing","call","code","algorithm","program","checks,","class","life","code","_startDate","regexp","solution","simpler","two","Equilateral"]},{"Key":"code much","Fragments":["cleaner.","more","more","more","more","harder","simpler.If"]},{"Key":" Additionally,","Fragments":["I","in"]},{"Key":"Additionally, I","Fragments":["would"]},{"Key":"at how","Fragments":["you","I","they"]},{"Key":"are formatting","Fragments":["your"]},{"Key":"formatting your","Fragments":["code;"]},{"Key":"your code;","Fragments":["it"]},{"Key":"code; it","Fragments":["is"]},{"Key":"is inconsistent.","Fragments":["In"]},{"Key":"inconsistent. In","Fragments":["`IsDivisibleByFourHundred`,"]},{"Key":"In `IsDivisibleByFourHundred`,","Fragments":["I"]},{"Key":"`IsDivisibleByFourHundred`, I","Fragments":["see"]},{"Key":"return (year%400","Fragments":["==","=="]},{"Key":" ...whereas","Fragments":["in"]},{"Key":"...whereas in","Fragments":["`IsNotDivisibleByOneHundred`,"]},{"Key":"in `IsNotDivisibleByOneHundred`,","Fragments":["I"]},{"Key":"`IsNotDivisibleByOneHundred`, I","Fragments":["see:"]},{"Key":"100 !+","Fragments":["0;"]},{"Key":" ...which","Fragments":["has"]},{"Key":"...which has","Fragments":["a"]},{"Key":"a space","Fragments":["on","as","between","after","or","in","in"]},{"Key":"space on","Fragments":["either"]},{"Key":"on either","Fragments":["side","side"]},{"Key":"either side","Fragments":["of","of"]},{"Key":"side of","Fragments":["the","the","over","the","0","things","the","the","explicitness)."]},{"Key":"modulus operator,","Fragments":["and","but","I"]},{"Key":"operator, and","Fragments":["no"]},{"Key":"and no","Fragments":["parentheses.","class","knowledge","need","check","other","longer","null","IMHO","else","need"]},{"Key":"no parentheses.","Fragments":["I"]},{"Key":"parentheses. I","Fragments":["would"]},{"Key":"would clean","Fragments":["that","up"]},{"Key":"return Year","Fragments":["%"]},{"Key":"Year %","Fragments":["4","x"]},{"Key":"0 ?","Fragments":["true","true","true","true","year"]},{"Key":" could","Fragments":["be","be"]},{"Key":"be written","Fragments":["as","in","much","much","much","in","more","as"]},{"Key":"return (Year","Fragments":["%"]},{"Key":"(Year %","Fragments":["4","4"]},{"Key":"think code","Fragments":["like"]},{"Key":"code like","Fragments":["this","you","this","this.","this,","a","`word.OrderBy()`","while(continue)"]},{"Key":"this needs","Fragments":["any"]},{"Key":"needs any","Fragments":["comments"]},{"Key":"comments since","Fragments":["reading"]},{"Key":"since reading","Fragments":["the"]},{"Key":"reading the","Fragments":["actual","comment","code"]},{"Key":"the actual","Fragments":["code","method","logic","logic","modulo","transformation","equation","implementation","problem","results","private","code.","code","values","comparison,"]},{"Key":"actual code","Fragments":["is","I"]},{"Key":"not any","Fragments":["harder"]},{"Key":"any harder","Fragments":["than"]},{"Key":"harder than","Fragments":["reading","the","it","the"]},{"Key":"than reading","Fragments":["the"]},{"Key":"would explain","Fragments":["it,"]},{"Key":"explain it,","Fragments":["and"]},{"Key":"it, and","Fragments":["the","then","by"]},{"Key":"name of","Fragments":["the","variables","your","the","the","the","the","the"]},{"Key":"method makes","Fragments":["clear","it","the","it"]},{"Key":"makes clear","Fragments":["what"]},{"Key":" Well","Fragments":["done","done!","that","done.","done!","this","basically","noted"]},{"Key":"Well done","Fragments":["-"]},{"Key":"done -","Fragments":["explicit"]},{"Key":"- explicit","Fragments":["and"]},{"Key":"and readable.","Fragments":["My","Nicely"]},{"Key":"readable. My","Fragments":["nit","only"]},{"Key":"My nit","Fragments":["would"]},{"Key":"nit would","Fragments":["be"]},{"Key":"first conditional","Fragments":["reads","doesn't","was","rather"]},{"Key":"conditional reads","Fragments":["as"]},{"Key":"reads as","Fragments":["a"]},{"Key":"a double","Fragments":["negative.","which","contains","within"]},{"Key":"double negative.","Fragments":["In"]},{"Key":"negative. In","Fragments":["general"]},{"Key":"In general","Fragments":["I'd"]},{"Key":"general I'd","Fragments":["prefer"]},{"Key":"prefer if","Fragments":["(!IsCandidateLeapYear)"]},{"Key":"if (!IsCandidateLeapYear)","Fragments":["instead"]},{"Key":"(!IsCandidateLeapYear) instead","Fragments":["of"]},{"Key":"of IsNot","Fragments":["being"]},{"Key":"IsNot being","Fragments":["the"]},{"Key":"being the","Fragments":["actual","year","name"]},{"Key":"actual method","Fragments":["name."]},{"Key":"clear when","Fragments":["making"]},{"Key":"when making","Fragments":["the","updates"]},{"Key":"the years","Fragments":["not","checked","where","from","before"]},{"Key":"years not","Fragments":["divisible"]},{"Key":"not divisible","Fragments":["return","by","by","by","(!Divisible...)","by","by","by","by"]},{"Key":"divisible return","Fragments":["at"]},{"Key":"return at","Fragments":["the","the"]},{"Key":"top of","Fragments":["the","Hey()","Hey()","the","some","the","a","your","my","the","the","your","the","the"]},{"Key":"function instead","Fragments":["of","of","of"]},{"Key":"of at","Fragments":["the","least"]},{"Key":" Moved","Fragments":["the","the","the","gregorian"]},{"Key":"Moved the","Fragments":["call","entire","most"]},{"Key":"call to","Fragments":["Sqrt","the","the","`IsSilent`","Roster.","a","slow","count.","instead","`string.IsNullOrEmpty","Grade","IsYelling()","IsYelling()","each."]},{"Key":"to Sqrt","Fragments":["to"]},{"Key":"Sqrt to","Fragments":["the"]},{"Key":"the begining","Fragments":["of"]},{"Key":"begining of","Fragments":["the"]},{"Key":"prefer LINQ","Fragments":["in"]},{"Key":"LINQ in","Fragments":["general.","the","To()?","To()?","both"]},{"Key":"in general.","Fragments":["I've"]},{"Key":"general. I've","Fragments":["grown"]},{"Key":"I've grown","Fragments":["so"]},{"Key":"grown so","Fragments":["used"]},{"Key":"so used","Fragments":["to","to"]},{"Key":"used to","Fragments":["reading","the","do","count","libraries","be","letting","see","putting","build","in","the","typing","Java,","do","check","it","using","be","thinking","always","reversing","reading","compare","determine","see","test","know","use","query","query"]},{"Key":"to reading","Fragments":["it","statements"]},{"Key":"reading it","Fragments":["that","and"]},{"Key":"it that","Fragments":["it's","way","way.","way.","way,","way","way,","way.","would","way"]},{"Key":"it's easy","Fragments":["for"]},{"Key":"easy for","Fragments":["me","a","comments","the"]},{"Key":"for me","Fragments":["to",":(","to","to","to","to","in","was","debugging","it's","in","to","is","to"]},{"Key":"understand. I","Fragments":["don't","have"]},{"Key":"think there's","Fragments":["much"]},{"Key":"there's much","Fragments":["of"]},{"Key":"much of","Fragments":["a","a","the"]},{"Key":"a difference","Fragments":["except","to","in"]},{"Key":"difference except","Fragments":["personal"]},{"Key":"except personal","Fragments":["preference"]},{"Key":"preference now","Fragments":["that"]},{"Key":"I look","Fragments":["at","forward","into","for","forward"]},{"Key":"at it","Fragments":["more","and","too","instead","and","later.","months","I","I"]},{"Key":" Hey","Fragments":["@lawrence,","David,","Aaron,","cool,","@jonatan,","Thomas,"]},{"Key":" Except","Fragments":["for"]},{"Key":"Except for","Fragments":["a"]},{"Key":"extra parentheses,","Fragments":["your"]},{"Key":"parentheses, your","Fragments":["code"]},{"Key":"code looks","Fragments":["great.","very"]},{"Key":"to submit","Fragments":["the","the","your","a","and/or"]},{"Key":"submit the","Fragments":["test","work,","solution,"]},{"Key":"test code","Fragments":["though,","and","into"]},{"Key":"code though,","Fragments":["you"]},{"Key":"though, you","Fragments":["could"]},{"Key":"have created","Fragments":["a","a","a","a","a","an","StringJoin"]},{"Key":"created a","Fragments":["separate","temp","class","new","new","dictionary","DateTime","method","Count","separate"]},{"Key":"separate file","Fragments":["for"]},{"Key":"class and","Fragments":["submitted","function","functions","make","why","IsLeap","methods","run","add","method,","the","I","subclasses.","you","variable","separate"]},{"Key":"and submitted","Fragments":["that","a"]},{"Key":"submitted that","Fragments":["only!"]},{"Key":" Welcome","Fragments":["to"]},{"Key":"Welcome to","Fragments":["exercism!"]},{"Key":" a","Fragments":["small","bit","bit"]},{"Key":"small nit-pick:","Fragments":["I"]},{"Key":"nit-pick: I","Fragments":["strongly"]},{"Key":"I strongly","Fragments":["believe","suggest"]},{"Key":"strongly believe","Fragments":["that"]},{"Key":"that all","Fragments":["if","of","years","these","the","the","these","letters"]},{"Key":"all if","Fragments":["clauses","statements,"]},{"Key":"if clauses","Fragments":["in"]},{"Key":"clauses in","Fragments":["c#","if-return","the"]},{"Key":"in c#","Fragments":["should","you"]},{"Key":"c# should","Fragments":["have"]},{"Key":"have brackets.","Fragments":["It's"]},{"Key":"brackets. It's","Fragments":["much"]},{"Key":"It's much","Fragments":["more","clearer"]},{"Key":"and prevents","Fragments":["a","maintenance"]},{"Key":"prevents a","Fragments":["future"]},{"Key":"a future","Fragments":["maintainer","requirement,","version"]},{"Key":"future maintainer","Fragments":["from"]},{"Key":"maintainer from","Fragments":["making"]},{"Key":"from making","Fragments":["mistakes."]},{"Key":"And that","Fragments":["includes","totally"]},{"Key":"that includes","Fragments":["the","this)."]},{"Key":"includes the","Fragments":["geniuses"]},{"Key":"the geniuses","Fragments":["at"]},{"Key":"geniuses at","Fragments":["Apple,"]},{"Key":"at Apple,","Fragments":["btw."]},{"Key":"Apple, btw.","Fragments":["see"]},{"Key":"btw. see","Fragments":["http://embeddedgurus.com/barr-code/2014/03/apples-gotofail-ssl-security-bug-was-easily-preventable/"]},{"Key":" this","Fragments":["looks","is"]},{"Key":"this looks","Fragments":["much","rather","a","like.","an"]},{"Key":"looks much","Fragments":["better","better!"]},{"Key":"see now","Fragments":["that","from"]},{"Key":"way that","Fragments":["you","reads","can","really","you","you","added"]},{"Key":"needs the","Fragments":["400","_teenths"]},{"Key":"400 in","Fragments":["the"]},{"Key":"if with","Fragments":["the","out","out","an"]},{"Key":"the 100","Fragments":["(I","rule"]},{"Key":"100 (I","Fragments":["did"]},{"Key":"(I did","Fragments":["the","not"]},{"Key":"assignment personally","Fragments":["and"]},{"Key":"personally and","Fragments":["went"]},{"Key":"and went","Fragments":["with"]},{"Key":"a different","Fragments":["approach)","message","submission","property","response","class","approach.","approach!","perspective","arrays,","example","approach.","language)","language,","approach","name.","type","test)"]},{"Key":" Those","Fragments":["first","are"]},{"Key":"Those first","Fragments":["three"]},{"Key":"first three","Fragments":["variables"]},{"Key":"three variables","Fragments":["don't"]},{"Key":"variables don't","Fragments":["look"]},{"Key":"don't look","Fragments":["like"]},{"Key":"look like","Fragments":["their","it","this:","the","it","this","this:","a","the","overkill","it"]},{"Key":"like their","Fragments":["referenced"]},{"Key":"their referenced","Fragments":["anywhere"]},{"Key":"referenced anywhere","Fragments":["else"]},{"Key":"anywhere else","Fragments":["-"]},{"Key":"else -","Fragments":["why","though"]},{"Key":"- why","Fragments":["are","would"]},{"Key":"why are","Fragments":["they","you"]},{"Key":"are they","Fragments":["there?","going"]},{"Key":" Solved","Fragments":["using"]},{"Key":"Solved using","Fragments":["LINQ"]},{"Key":"LINQ /","Fragments":["Lambda"]},{"Key":"/ Lambda","Fragments":["Expression"]},{"Key":"Lambda Expression","Fragments":["for"]},{"Key":"Expression for","Fragments":["efficiency"]},{"Key":"for efficiency","Fragments":["sake."]},{"Key":"this less","Fragments":["than","readable","readable"]},{"Key":"less than","Fragments":["my","0","3","1.","1582","1582","your","or","-32768)","0."]},{"Key":"than my","Fragments":["previous","own.","usual","solution.","previous","own","original"]},{"Key":"previous version...","Fragments":["What"]},{"Key":"version... What","Fragments":["do"]},{"Key":"The good","Fragments":["is"]},{"Key":"good is","Fragments":["it"]},{"Key":"is it","Fragments":["shortcuts","actually","better","about","readable,","unpleasant.","void","okay","is"]},{"Key":"it shortcuts","Fragments":["the"]},{"Key":"shortcuts the","Fragments":["logic"]},{"Key":"logic in","Fragments":["the","solving","this","this","Grade().","a","two:","Main","the","Refresh()","Match()"]},{"Key":"the case","Fragments":["where","where","of","where","here.","than","where","of","here),","of","where","where","of","in","we","you","for","it","of","of","of","in","for"]},{"Key":"cannot possibly","Fragments":["be"]},{"Key":"possibly be","Fragments":["a","a"]},{"Key":"It has","Fragments":["long","to","a","the","the"]},{"Key":"has long","Fragments":["expressive"]},{"Key":"long expressive","Fragments":["private"]},{"Key":"expressive private","Fragments":["method"]},{"Key":"names (which","Fragments":["I"]},{"Key":"(which I","Fragments":["like!)","just","forgot","actually","think"]},{"Key":"The bad","Fragments":["the"]},{"Key":"bad the","Fragments":["actual"]},{"Key":"actual logic","Fragments":["of","of"]},{"Key":"of why","Fragments":["it","this","I","your","my"]},{"Key":"why it","Fragments":["returns","might","might","wasn't","doesn't","automatically","works."]},{"Key":"true is","Fragments":["a","the","enough,"]},{"Key":"The ugly...","Fragments":["that"]},{"Key":"ugly... that","Fragments":["huge"]},{"Key":"that huge","Fragments":["method"]},{"Key":"huge method","Fragments":["name"]},{"Key":"that maybe","Fragments":["doesn't"]},{"Key":"maybe doesn't","Fragments":["really"]},{"Key":"doesn't really","Fragments":["add","matter,","show","solve","need","matter"]},{"Key":"really add","Fragments":["much","anything,"]},{"Key":"add much","Fragments":["clarity.","clarity."]},{"Key":"is about","Fragments":["as","as","as","which","as","as","preference"]},{"Key":"about as","Fragments":["brute-force","short","basic","fast","cryptic.","complex"]},{"Key":"as brute-force","Fragments":["as"]},{"Key":"brute-force as","Fragments":["you"]},{"Key":"can get,","Fragments":["eh?"]},{"Key":"is true,","Fragments":["but","then","wouldn't","but"]},{"Key":"for other","Fragments":["people"]},{"Key":"other people","Fragments":["looking","don't.","check,","have","submissions,","use","have","might","need"]},{"Key":"people looking","Fragments":["at"]},{"Key":"at your","Fragments":["code,","`using`","implementation","centenial","code","solution:","code"]},{"Key":"code, if","Fragments":["they","desired."]},{"Key":"they know","Fragments":["next"]},{"Key":"know next","Fragments":["to"]},{"Key":"next to","Fragments":["nothing","the"]},{"Key":"to nothing","Fragments":["about"]},{"Key":"nothing about","Fragments":["the"]},{"Key":"the problem","Fragments":["domain,","is.","in","but","with","to","is.","usually.","when","description","and","that","with","description","you","could","with",":)","is....","-","specification","in","domain.","specification.","to","and","easy","with","by","description"]},{"Key":"problem domain,","Fragments":["it"]},{"Key":"domain, it","Fragments":["is"]},{"Key":"very helpful","Fragments":["to","as","when"]},{"Key":"have comments","Fragments":["explaining"]},{"Key":"comments explaining","Fragments":["the"]},{"Key":"the business","Fragments":["rules,","says","requirements,","requirement.","requirement.","requirements...","requirements"]},{"Key":"business rules,","Fragments":["the"]},{"Key":"rules, the","Fragments":["thinking"]},{"Key":"the thinking","Fragments":["behind","you"]},{"Key":"thinking behind","Fragments":["the"]},{"Key":"behind the","Fragments":["logic.","scene."]},{"Key":"of having","Fragments":["IsLeap","your","it","to","no","one","to","to","the"]},{"Key":"having IsLeap","Fragments":["do"]},{"Key":"IsLeap do","Fragments":["one"]},{"Key":"do one","Fragments":["thing,","thing.","simple","extra"]},{"Key":"one thing,","Fragments":["I","and"]},{"Key":"thing, I","Fragments":["would","had"]},{"Key":"would suggest","Fragments":["making","on","reducing","reducing","doing","is","you","using","bailing","you","here"]},{"Key":"suggest making","Fragments":["divisibleBy"]},{"Key":"making divisibleBy","Fragments":["a"]},{"Key":"divisibleBy a","Fragments":["separate"]},{"Key":"separate function","Fragments":["instead","improves","-"]},{"Key":"of declaring","Fragments":["it","`vReturn`","Song"]},{"Key":"declaring it","Fragments":["with"]},{"Key":"with its","Fragments":["logic","own"]},{"Key":"its logic","Fragments":["inside"]},{"Key":"logic inside","Fragments":["IsLeap.","of"]},{"Key":" Beyond","Fragments":["that","that,"]},{"Key":"Beyond that","Fragments":["this"]},{"Key":"problem is.","Fragments":["I","Also,"]},{"Key":"is. I","Fragments":["didn't"]},{"Key":"didn't create","Fragments":["an","a"]},{"Key":"create an","Fragments":["\"IsLeap\"","IsDivisibleBy","instance","Add","array","`IsEqualToZero()`","empty","extension","instance","array","instance","object"]},{"Key":"an \"IsLeap\"","Fragments":["method,"]},{"Key":"\"IsLeap\" method,","Fragments":["I"]},{"Key":"method, I","Fragments":["called","had","see","was","could"]},{"Key":"I called","Fragments":["it","Hey"]},{"Key":"called it","Fragments":["something","won't","\"Formatted\")"]},{"Key":"it something","Fragments":["else."]},{"Key":"something else.","Fragments":["When","When"]},{"Key":"else. When","Fragments":["I","reading"]},{"Key":"When I","Fragments":["tried","first","did","tried","did","try","run","read","read","run","see","changed","am","did","wrote","implemented","write","wrote"]},{"Key":"to compile","Fragments":["it","the","to","the","the","that","because","correctly","along","and","for"]},{"Key":"compile it","Fragments":["told"]},{"Key":"it told","Fragments":["me"]},{"Key":"told me","Fragments":["that"]},{"Key":"me that","Fragments":["Year","nothing","since","the","you","feels","I","if"]},{"Key":"that Year","Fragments":["wasn't","there"]},{"Key":"Year wasn't","Fragments":["in"]},{"Key":"wasn't in","Fragments":["the","the"]},{"Key":"the scope.","Fragments":["I"]},{"Key":"scope. I","Fragments":["assume","don't"]},{"Key":"I assume","Fragments":["that's","you","that","is","that","it"]},{"Key":"assume that's","Fragments":["why."]},{"Key":"that's why.","Fragments":["I'll"]},{"Key":"why. I'll","Fragments":["have"]},{"Key":"reads easily.","Fragments":["To"]},{"Key":"easily. To","Fragments":["make"]},{"Key":"To make","Fragments":["it","the","the","it"]},{"Key":"more concise,","Fragments":["I","you","code."]},{"Key":"concise, I","Fragments":["would"]},{"Key":"would replace","Fragments":["the","the","the"]},{"Key":"replace the","Fragments":["methods","conditional","return","whole","non-word","'a-zA-Z0-9'","old","variables","individual","regular","String.Concat()"]},{"Key":" Ooh,","Fragments":["great","that's","making","that's"]},{"Key":"Ooh, great","Fragments":["observation!"]},{"Key":"is value","Fragments":["in"]},{"Key":"value in","Fragments":["changing","entry.Value","`{}`","the","a","oldData.Keys","your","values){","your","having","\u003ccode\u003etext\u003c/code\u003e.","the","this"]},{"Key":"if (year","Fragments":["%","%","%","DivisibleBy","%","%","%","%","%"]},{"Key":"4 !=","Fragments":["0)"]},{"Key":"and moving","Fragments":["it"]},{"Key":"moving it","Fragments":["below"]},{"Key":"it below","Fragments":["the"]},{"Key":"below the","Fragments":["line","bottom"]},{"Key":"This would","Fragments":["improve","need","make","not","work","probably","have","allow","allow","allow","allow","also"]},{"Key":"would improve","Fragments":["readability","readability","the"]},{"Key":"improve readability","Fragments":["by","by","when","at","even"]},{"Key":"by having","Fragments":["all","a","it","it","one","them."]},{"Key":"having all","Fragments":["the"]},{"Key":"checks use","Fragments":["the"]},{"Key":"way this","Fragments":["reads.","code"]},{"Key":"this reads.","Fragments":["It"]},{"Key":"reads. It","Fragments":["makes"]},{"Key":"It makes","Fragments":["the","that","it","it","it","the","it","it","it","it","it","it","the","the","it","it"]},{"Key":"rules that","Fragments":["define","make","drive"]},{"Key":"that define","Fragments":["a"]},{"Key":"define a","Fragments":["leap","variable,","leap"]},{"Key":"year clear.","Fragments":["Perhaps"]},{"Key":"clear. Perhaps","Fragments":["one"]},{"Key":"Perhaps one","Fragments":["further"]},{"Key":"one further","Fragments":["streamline"]},{"Key":"further streamline","Fragments":["would"]},{"Key":"streamline would","Fragments":["be"]},{"Key":"to combine","Fragments":["lines","the"]},{"Key":"combine lines","Fragments":["7"]},{"Key":"lines 7","Fragments":["and","and"]},{"Key":"7 and","Fragments":["8","8."]},{"Key":"and 8","Fragments":["into:"]},{"Key":"return YearIsDivisibleBy(year,","Fragments":["4);"]},{"Key":"not completely","Fragments":["sold","happy"]},{"Key":"completely sold","Fragments":["on"]},{"Key":"sold on","Fragments":["the","SortedSet,"]},{"Key":"name YearIsLeapCentury().","Fragments":["The"]},{"Key":"YearIsLeapCentury(). The","Fragments":["way"]},{"Key":"The way","Fragments":["that","this","it","I","I","I","I"]},{"Key":"that reads","Fragments":["leads","better..."]},{"Key":"reads leads","Fragments":["me"]},{"Key":"leads me","Fragments":["to"]},{"Key":"to believe","Fragments":["that","that"]},{"Key":"that only","Fragments":["LeapCenturies","grades","get"]},{"Key":"only LeapCenturies","Fragments":["are"]},{"Key":"LeapCenturies are","Fragments":["LeapYears."]},{"Key":"Very clean","Fragments":["and"]},{"Key":"and easy","Fragments":["to","to","to","to","to","to","to","to"]},{"Key":"read. Checking","Fragments":["for"]},{"Key":"Checking for","Fragments":["YearIsDivisibleBy(year,","Uracil","any"]},{"Key":"for YearIsDivisibleBy(year,","Fragments":["4)"]},{"Key":"YearIsDivisibleBy(year, 4)","Fragments":["last"]},{"Key":"4) last","Fragments":["makes"]},{"Key":"last makes","Fragments":["it"]},{"Key":"less efficient.","Fragments":["Consider"]},{"Key":"efficient. Consider","Fragments":["this:"]},{"Key":"if (!YearIsDivisibleBy(year,","Fragments":["4))"]},{"Key":"(!YearIsDivisibleBy(year, 4))","Fragments":["return"]},{"Key":"4)) return","Fragments":["false;"]},{"Key":"if (YearIsDivisibleBy(year,","Fragments":["400))","100))"]},{"Key":"(YearIsDivisibleBy(year, 400))","Fragments":["return"]},{"Key":"400)) return","Fragments":["true;"]},{"Key":"(YearIsDivisibleBy(year, 100))","Fragments":["return"]},{"Key":"100)) return","Fragments":["false;"]},{"Key":"You will","Fragments":["probably","want","want","have","get","find","definitely","see","want"]},{"Key":"will probably","Fragments":["find","be","be","steal","go"]},{"Key":"probably find","Fragments":["this"]},{"Key":"this kind","Fragments":["of","of","of","of","of"]},{"Key":"of micro-optimisation","Fragments":["to"]},{"Key":"micro-optimisation to","Fragments":["be"]},{"Key":"be unnecessary","Fragments":["unless","and",":smile:"]},{"Key":"unnecessary unless","Fragments":["you"]},{"Key":"unless you","Fragments":["are","see","do","specifically","have","are","can"]},{"Key":"are performing","Fragments":["the"]},{"Key":"performing the","Fragments":["calculation","calculations","loop"]},{"Key":"the calculation","Fragments":["on","was","instead","returned","to","of","into","in","into","for","into","need","code"]},{"Key":"calculation on","Fragments":["millions"]},{"Key":"on millions","Fragments":["of"]},{"Key":"millions of","Fragments":["records..","characters","division"]},{"Key":"am done","Fragments":["now"]},{"Key":"done now","Fragments":[":)"]},{"Key":"I discovered","Fragments":["if"]},{"Key":"discovered if","Fragments":["I"]},{"Key":"I type","Fragments":["`exercism"]},{"Key":"into my","Fragments":["cmd","code.","head","bin/Debug","own"]},{"Key":"my cmd","Fragments":["prompt"]},{"Key":"cmd prompt","Fragments":["it"]},{"Key":"prompt it","Fragments":["will"]},{"Key":"give me","Fragments":["the","input","any","a","some"]},{"Key":"me the","Fragments":["next","Linq","idea","solution","most","idea"]},{"Key":"next coding","Fragments":["challenge!"]},{"Key":"A good","Fragments":["approach."]},{"Key":"good approach.","Fragments":["But"]},{"Key":"approach. But","Fragments":["I"]},{"Key":"But I","Fragments":["would","think","tryed","believe","didn't","really","didn't","don't","think","didn't","hope","like","would","couldn't","used","believe","added"]},{"Key":"suggest on","Fragments":["not"]},{"Key":"on not","Fragments":["defining"]},{"Key":"not defining","Fragments":["an"]},{"Key":"defining an","Fragments":["explicit","infix"]},{"Key":"explicit array","Fragments":["size"]},{"Key":"array size","Fragments":["`new","of"]},{"Key":"size `new","Fragments":["Func\u003cint,"]},{"Key":"`new Func\u003cint,","Fragments":["bool\u003e[2]`."]},{"Key":"Func\u003cint, bool\u003e[2]`.","Fragments":["You"]},{"Key":"bool\u003e[2]`. You","Fragments":["can"]},{"Key":"use array","Fragments":["initializers"]},{"Key":"array initializers","Fragments":["instead."]},{"Key":" .NET","Fragments":["has"]},{"Key":"a wonderful","Fragments":["method"]},{"Key":"wonderful method","Fragments":["for"]},{"Key":"method for","Fragments":["checking","that","IsLeap.","readability","IsDivisibleBy","matching","that.","the","clarity.","comparison.","iterating","maximum","calculating","it.","checking","checking","String.Concat()"]},{"Key":"a string","Fragments":["is","first","could","can","like","extension","of","as","simply","rather","to","of","character","and","and","because","in","just","means","and","you","to","but","to","around","and","that","has","is","array.","of","as","into","is"]},{"Key":"string is","Fragments":["null","not","not","a","more","an","uppercase.","1010","longer","longer","numeric","null,","in","picked","starting","enumerated"]},{"Key":"is null","Fragments":["or","or","and","or","or","or","or","or","or","or","it","or","you","or","or"]},{"Key":"or empty","Fragments":["and/or","value","(length==0),","strings"]},{"Key":"empty and/or","Fragments":["whitespace!"]},{"Key":"Otherwise, this","Fragments":["code"]},{"Key":" Agreed.","Fragments":["YearIsLeapCentury","Another"]},{"Key":"Agreed. YearIsLeapCentury","Fragments":["is"]},{"Key":"YearIsLeapCentury is","Fragments":["doing"]},{"Key":"doing more","Fragments":["than","work","work"]},{"Key":"just checking","Fragments":["for","if","to"]},{"Key":"checking for","Fragments":["leap","upper-case","numbers?","an","non-negative","that","the","nulls","the","all","Contains","any","negative","invalid","the","NullOrWhiteSpace","the"]},{"Key":"The parenthesis","Fragments":["are"]},{"Key":"parenthesis are","Fragments":["not"]},{"Key":"not necessary,","Fragments":["but","I"]},{"Key":"necessary, but","Fragments":["I","the"]},{"Key":"how they","Fragments":["combine","could","work","were"]},{"Key":"they combine","Fragments":["the"]},{"Key":"combine the","Fragments":["century","2","three","different","two"]},{"Key":"my initial,","Fragments":["TDD"]},{"Key":"initial, TDD","Fragments":["solution"]},{"Key":"TDD solution","Fragments":["with"]},{"Key":"solution with","Fragments":["no"]},{"Key":"A one","Fragments":["line"]},{"Key":"A single","Fragments":["line,"]},{"Key":"single line,","Fragments":["but","since","as","but"]},{"Key":"little more","Fragments":["expressive.","\"out","complex","verbose","readable","readable","readable,","random","code","concise","readable.","detail.","self"]},{"Key":" Yeah","Fragments":["I","as","I","I"]},{"Key":"Yeah I","Fragments":["like","suppose","was"]},{"Key":"like making","Fragments":["the"]},{"Key":"code explicit.","Fragments":["No"]},{"Key":"explicit. No","Fragments":["need"]},{"Key":"think through","Fragments":["the"]},{"Key":"operations if","Fragments":["it's"]},{"Key":"if it's","Fragments":["defined,","not","divisible","not,","divisible","common","the","null","divisible.","not","not","any","not","true","divisible"]},{"Key":"it's defined,","Fragments":["eh?"]},{"Key":" Regarding","Fragments":["your","efficiency","re-arranging","comments","the","your","constructors:","the","the"]},{"Key":"Regarding your","Fragments":["function","first"]},{"Key":"your function","Fragments":["names,","name","to","`RemainderIsZero`,","would","is"]},{"Key":"function names,","Fragments":["I","and"]},{"Key":"names, I","Fragments":["would","think"]},{"Key":"would invite","Fragments":["you"]},{"Key":"invite you","Fragments":["to"]},{"Key":"to simplify,","Fragments":["by"]},{"Key":"simplify, by","Fragments":["more"]},{"Key":"by more","Fragments":["plainly"]},{"Key":"more plainly","Fragments":["stating"]},{"Key":"plainly stating","Fragments":["what"]},{"Key":"stating what","Fragments":["the","you"]},{"Key":"function *does*.","Fragments":["Ultimately,"]},{"Key":"*does*. Ultimately,","Fragments":["the"]},{"Key":"Ultimately, the","Fragments":["function"]},{"Key":"is asking,","Fragments":["\"Is"]},{"Key":"\"Is the","Fragments":["year"]},{"Key":"To help","Fragments":["with","make"]},{"Key":"help with","Fragments":["this,","my","this","it"]},{"Key":"with this,","Fragments":["look","but"]},{"Key":"this, look","Fragments":["at"]},{"Key":"the \"main\"","Fragments":["function"]},{"Key":"\"main\" function","Fragments":["name:"]},{"Key":"function name:","Fragments":["`IsLeap`."]},{"Key":"name: `IsLeap`.","Fragments":["The"]},{"Key":"`IsLeap`. The","Fragments":["question"]},{"Key":"The question","Fragments":["you","itself"]},{"Key":"question you","Fragments":["are"]},{"Key":"are asking","Fragments":["this"]},{"Key":"asking this","Fragments":["function"]},{"Key":"function is,","Fragments":["\"Is"]},{"Key":"is, \"Is","Fragments":["this"]},{"Key":"this year","Fragments":["a"]},{"Key":"leap year?\"","Fragments":["Thus,"]},{"Key":"year?\" Thus,","Fragments":["`IsLeap`."]},{"Key":" Apply","Fragments":["that","some"]},{"Key":"Apply that","Fragments":["same"]},{"Key":"that same","Fragments":["principle","call","functionality"]},{"Key":"same principle","Fragments":["to"]},{"Key":"principle to","Fragments":["your"]},{"Key":"your other","Fragments":["function","methods.","code"]},{"Key":"other function","Fragments":["names,","names."]},{"Key":"names, and","Fragments":["I","added"]},{"Key":"will come","Fragments":["up"]},{"Key":"come up","Fragments":["with","with","with","with.","with.","with","with.","with","with","with"]},{"Key":"a good,","Fragments":["clear"]},{"Key":"good, clear","Fragments":["answer."]},{"Key":" Remember,","Fragments":["you're"]},{"Key":"Remember, you're","Fragments":["asking"]},{"Key":"you're asking","Fragments":["the"]},{"Key":"asking the","Fragments":["question,"]},{"Key":"the question,","Fragments":["\"Is"]},{"Key":"question, \"Is","Fragments":["this"]},{"Key":"leap year?\",","Fragments":["not,"]},{"Key":"year?\", not,","Fragments":["\"Why"]},{"Key":"not, \"Why","Fragments":["is"]},{"Key":"\"Why is","Fragments":["or"]},{"Key":"is or","Fragments":["isn't","that"]},{"Key":"or isn't","Fragments":["this"]},{"Key":"isn't this","Fragments":["a","one"]},{"Key":"A little","Fragments":["more","regular","cryptic,"]},{"Key":"more \"out","Fragments":["there\""]},{"Key":"\"out there\"","Fragments":["solution."]},{"Key":"there\" solution.","Fragments":["Definitely"]},{"Key":"solution. Definitely","Fragments":["more"]},{"Key":"Definitely more","Fragments":["complicated,"]},{"Key":"more complicated,","Fragments":["but","it","but"]},{"Key":"complicated, but","Fragments":["more","it"]},{"Key":"but more","Fragments":["of","a","verbose"]},{"Key":"a functional","Fragments":["approach.","impact","style:","style:","style:"]},{"Key":"functional approach.","Fragments":["With"]},{"Key":"approach. With","Fragments":["a"]},{"Key":"With a","Fragments":["solution"]},{"Key":"a solution","Fragments":["like","that","other","that","that","using","that","instead","on","that","exposing"]},{"Key":"solution like","Fragments":["this"]},{"Key":"this it","Fragments":["would","might","seems","generally","will"]},{"Key":"be possible","Fragments":["to","that","to"]},{"Key":"to modify","Fragments":["the","the","the","your","the","IMHO","the"]},{"Key":"modify the","Fragments":["leap","Dictionary","sievetest.cs","logic.","test"]},{"Key":"year definition","Fragments":["at"]},{"Key":"definition at","Fragments":["run"]},{"Key":"at run","Fragments":["time"]},{"Key":"run time","Fragments":["by","enforcement","wasn't"]},{"Key":"time by","Fragments":["changing","changing","allocation"]},{"Key":"by changing","Fragments":["list","the","it","it","the","your"]},{"Key":"changing list","Fragments":["of"]},{"Key":"of applied","Fragments":["rules."]},{"Key":"applied rules.","Fragments":["You"]},{"Key":"rules. You","Fragments":["know."]},{"Key":"You know.","Fragments":["In"]},{"Key":"know. In","Fragments":["case"]},{"Key":"In case","Fragments":["you"]},{"Key":"case you","Fragments":["wanted","are","aren't","have","could","are","have","won't","didn't,","are","make","get"]},{"Key":"you wanted","Fragments":["to","to,","to","to","to"]},{"Key":"This reads","Fragments":["well,"]},{"Key":"reads well,","Fragments":["especially"]},{"Key":"well, especially","Fragments":["the"]},{"Key":"especially the","Fragments":["IsLeap","bit","first","fixed","fixed"]},{"Key":"IsLeap method.","Fragments":["Another"]},{"Key":"method. Another","Fragments":["option"]},{"Key":"Another option","Fragments":["would","is","would","would"]},{"Key":"option would","Fragments":["be","be","be","have"]},{"Key":"an IsDivisibleBy","Fragments":["method."]},{"Key":"IsDivisibleBy method.","Fragments":["That"]},{"Key":"would remove","Fragments":["some"]},{"Key":"remove some","Fragments":["of"]},{"Key":"the duplication.","Fragments":["That"]},{"Key":"duplication. That","Fragments":["might"]},{"Key":"That might","Fragments":["hurt"]},{"Key":"might hurt","Fragments":["the","me"]},{"Key":"hurt the","Fragments":["readability"]},{"Key":"readability though,","Fragments":["I"]},{"Key":"that line","Fragments":["12","directly!","20","did.","up","with","with","of","too","out"]},{"Key":"line 12","Fragments":["avoids","to"]},{"Key":"12 avoids","Fragments":["the"]},{"Key":"avoids the","Fragments":["somewhat","'while'","loop."]},{"Key":"the somewhat","Fragments":["awkward"]},{"Key":"somewhat awkward","Fragments":["value"]},{"Key":"awkward value","Fragments":["\u0026\u0026"]},{"Key":"value \u0026\u0026","Fragments":["(!value"]},{"Key":"\u0026\u0026 (!value","Fragments":["||"]},{"Key":"(!value ||","Fragments":["value)"]},{"Key":"|| value)","Fragments":["structure."]},{"Key":"the terse-ness","Fragments":["of"]},{"Key":"terse-ness of","Fragments":["the"]},{"Key":"line option,","Fragments":["but"]},{"Key":"option, but","Fragments":["I"]},{"Key":"think putting","Fragments":["the","the"]},{"Key":"cases on","Fragments":["different"]},{"Key":"on different","Fragments":["lines","lines","lines"]},{"Key":"different lines","Fragments":["is","to","does:"]},{"Key":"lines is","Fragments":["more","off."]},{"Key":"first read","Fragments":["through"]},{"Key":"the instructions,","Fragments":["I"]},{"Key":"instructions, I","Fragments":["was"]},{"Key":"was unsure","Fragments":["of"]},{"Key":"unsure of","Fragments":["where"]},{"Key":"of where","Fragments":["I"]},{"Key":"where I","Fragments":["needed","fed","used","feel","create","could","can","can,","need","might","check","just","test","say,","would","needed","remove","can"]},{"Key":"to begin","Fragments":["due","with."]},{"Key":"begin due","Fragments":["to"]},{"Key":"due to","Fragments":["never","the","debugging/maintainability.","a","feedback","my","my","some","me","how","the","unreachable","length"]},{"Key":"to never","Fragments":["using","get"]},{"Key":"never using","Fragments":["NUnit"]},{"Key":"using NUnit","Fragments":["before.","as"]},{"Key":"NUnit before.","Fragments":["I"]},{"Key":"before. I","Fragments":["have","really"]},{"Key":"have attempted","Fragments":["some"]},{"Key":"attempted some","Fragments":["testing"]},{"Key":"some testing","Fragments":["techniques","environment"]},{"Key":"testing techniques","Fragments":["through"]},{"Key":"techniques through","Fragments":["the"]},{"Key":"the course","Fragments":["of"]},{"Key":"course of","Fragments":["my"]},{"Key":"my studies","Fragments":["but"]},{"Key":"studies but","Fragments":["they"]},{"Key":"but they","Fragments":["were","would","massively","are","should","use","are","didn't","come"]},{"Key":"were extremely","Fragments":["basic"]},{"Key":"extremely basic","Fragments":["in"]},{"Key":"basic in","Fragments":["nature."]},{"Key":"in nature.","Fragments":["I"]},{"Key":"nature. I","Fragments":["still"]},{"Key":"I still","Fragments":["don't","have","try","can't","need","feel","think","find","am","think"]},{"Key":"still don't","Fragments":["believe"]},{"Key":"don't believe","Fragments":["I"]},{"Key":"believe I","Fragments":["did","didn't","didn't","didn't"]},{"Key":"it correctly.","Fragments":["When"]},{"Key":"correctly. When","Fragments":["I"]},{"Key":"did test,","Fragments":["my"]},{"Key":"test, my","Fragments":["main","solution","old"]},{"Key":"my main","Fragments":["function","day","comment"]},{"Key":"main function","Fragments":["ran","into"]},{"Key":"function ran","Fragments":["the"]},{"Key":"ran the","Fragments":["ignored","same","brute"]},{"Key":"the ignored","Fragments":["methods"]},{"Key":"ignored methods","Fragments":["any"]},{"Key":"methods any","Fragments":["way."]},{"Key":"any way.","Fragments":["I"]},{"Key":"way. I","Fragments":["will","also"]},{"Key":"will have","Fragments":["to","a","no","to","a","a","an","to","to","any","to","a","created","to","the","to","different","your"]},{"Key":"to study","Fragments":["up"]},{"Key":"study up","Fragments":["on"]},{"Key":"up on","Fragments":["NUnit","Dictionary.","readonly","that.","Linq.","Wikipedia","using","zip,"]},{"Key":"on NUnit","Fragments":["a","to"]},{"Key":"NUnit a","Fragments":["bit"]},{"Key":"bit so","Fragments":["that","you"]},{"Key":"can under","Fragments":["stand"]},{"Key":"under stand","Fragments":["exactly"]},{"Key":"stand exactly","Fragments":["whats"]},{"Key":"exactly whats","Fragments":["going"]},{"Key":"whats going","Fragments":["on","on.","on\","]},{"Key":"on and","Fragments":["how","you","why","gave"]},{"Key":"and how","Fragments":["to","to","the","you","to","many","they","do","decimal"]},{"Key":"perform the","Fragments":["tests","second","exact","math"]},{"Key":"don't understand","Fragments":["why","is","what"]},{"Key":"you extended","Fragments":["the"]},{"Key":"extended the","Fragments":["String"]},{"Key":"the String","Fragments":["object","functions","method","class"]},{"Key":"String object","Fragments":["with"]},{"Key":"with methods","Fragments":["consisting"]},{"Key":"methods consisting","Fragments":["of"]},{"Key":"consisting of","Fragments":["a"]},{"Key":"single line.","Fragments":["seems","The","It"]},{"Key":"line. seems","Fragments":["redundant."]},{"Key":" Finally,","Fragments":["some","after","at","there","by","I","the","as"]},{"Key":"Finally, some","Fragments":["Intellisense"]},{"Key":"some Intellisense","Fragments":["documentation"]},{"Key":"Intellisense documentation","Fragments":["that"]},{"Key":"documentation that","Fragments":["doesn't"]},{"Key":"that doesn't","Fragments":["read","use","obfuscate","read","have","allow","yet","make","have","require","involve","need","work","need","need","need","require","really","require","return","use","look","even","introduce","work","store","implement"]},{"Key":"doesn't read","Fragments":["like","very","well"]},{"Key":"read like","Fragments":["a","plain"]},{"Key":"a novel!","Fragments":[":)"]},{"Key":"function itself,","Fragments":["I"]},{"Key":"itself, I","Fragments":["would"]},{"Key":"would start","Fragments":["by","at"]},{"Key":"start by","Fragments":["consolidating"]},{"Key":"by consolidating","Fragments":["your"]},{"Key":"consolidating your","Fragments":["`if`"]},{"Key":"your `if`","Fragments":["statements","statements"]},{"Key":"`if` statements","Fragments":["into","using","makeing","can"]},{"Key":"single `if`","Fragments":["statement."]},{"Key":"`if` statement.","Fragments":["That"]},{"Key":"statement. That","Fragments":["will","would"]},{"Key":"That will","Fragments":["make","make","shorten"]},{"Key":"will make","Fragments":["your","it","GetUniqueRandomName()","the","it","adjustments","this"]},{"Key":"your logic","Fragments":["much","into","is","is","so","skills,","in","a"]},{"Key":"logic much","Fragments":["more"]},{"Key":"change your","Fragments":["function","internal","counts.","approach,","enum","this.kind","code","code","number"]},{"Key":"function name","Fragments":["`DividesBy4Hundred`","will"]},{"Key":"name `DividesBy4Hundred`","Fragments":["so"]},{"Key":"`DividesBy4Hundred` so","Fragments":["that"]},{"Key":"reads entirely","Fragments":["phonetically,"]},{"Key":"entirely phonetically,","Fragments":["e.g.,"]},{"Key":"phonetically, e.g.,","Fragments":["`DividesByFourHundred`."]},{"Key":"e.g., `DividesByFourHundred`.","Fragments":["This"]},{"Key":"`DividesByFourHundred`. This","Fragments":["gives"]},{"Key":"This gives","Fragments":["the"]},{"Key":"the benefit","Fragments":["of","for"]},{"Key":"benefit of","Fragments":["being","this"]},{"Key":"being more","Fragments":["consistent","efficient.","complex.","verbose:","strict"]},{"Key":"more consistent","Fragments":["with","with"]},{"Key":"you handle","Fragments":["the","that?"]},{"Key":"handle the","Fragments":["problem","modulus","order","case","number","problem","number","prime","number","input","no"]},{"Key":"problem in","Fragments":["other","real","this","all"]},{"Key":"in other","Fragments":["function","projects,","phrases.","methods?","nitpicks","applications,","modern"]},{"Key":" Along","Fragments":["the","the"]},{"Key":"Along the","Fragments":["same","lines"]},{"Key":"same veins,","Fragments":["I"]},{"Key":"veins, I","Fragments":["would"]},{"Key":"make `DividesByHundred`","Fragments":["clearer"]},{"Key":"`DividesByHundred` clearer","Fragments":["by"]},{"Key":"clearer by","Fragments":["saying"]},{"Key":"by saying","Fragments":["`DividesByOneHundred`.","\u003ccode\u003etriangleSides"]},{"Key":"also look","Fragments":["at"]},{"Key":"your `using`","Fragments":["statements,","statements."]},{"Key":"`using` statements,","Fragments":["and"]},{"Key":"and see","Fragments":["if","what","how","if","if","where","if","exactly","what","the","what","if","what","where","we","what"]},{"Key":"need those","Fragments":["there."]},{"Key":"some shortcuts","Fragments":["that"]},{"Key":"shortcuts that","Fragments":["would"]},{"Key":" `string.IsNullOrWhiteSpace(message)`","Fragments":["instead"]},{"Key":"`string.IsNullOrWhiteSpace(message)` instead","Fragments":["of"]},{"Key":"of `message.All(Char.IsWhiteSpace)","Fragments":["||"]},{"Key":"`message.All(Char.IsWhiteSpace) ||","Fragments":["message.Length"]},{"Key":"|| message.Length","Fragments":["=="]},{"Key":"message.Length ==","Fragments":["0`"]},{"Key":" `message.EndsWith(\"?\")`","Fragments":["instead"]},{"Key":"`message.EndsWith(\"?\")` instead","Fragments":["of"]},{"Key":"of `message.Substring(message.Length","Fragments":["-"]},{"Key":"`message.Substring(message.Length -","Fragments":["1).Equals(\"?\")`"]},{"Key":" also","Fragments":["you","line"]},{"Key":"also you","Fragments":["don't"]},{"Key":"the `else`","Fragments":["keywords","at"]},{"Key":"`else` keywords","Fragments":["so"]},{"Key":"keywords so","Fragments":["you"]},{"Key":" `return","Fragments":["message.EndsWith(\"?\")","string.IsNullOrEmpty(trimedText)","phrase.Trim()","((char)('A'","((char)('A'","DivisibleBy4(year)","year","(condition1"]},{"Key":"`return message.EndsWith(\"?\")","Fragments":["?"]},{"Key":"message.EndsWith(\"?\") ?","Fragments":["\"Sure.\""]},{"Key":"? \"Sure.\"","Fragments":[":",":"]},{"Key":"\"Sure.\" :","Fragments":["\"Whatever.\";`","\"Whatever.\";`"]},{"Key":" which","Fragments":["maybe","indicates","is","is"]},{"Key":"which maybe","Fragments":["is"]},{"Key":"maybe is","Fragments":["nicer?"]},{"Key":" Combined","Fragments":["all"]},{"Key":"Combined all","Fragments":["functions"]},{"Key":"all functions","Fragments":["in"]},{"Key":"functions in","Fragments":["one","question.","there","F#,"]},{"Key":"one and","Fragments":["removed","attempt","use","I","using"]},{"Key":"removed all","Fragments":["unused","entries,","multiples"]},{"Key":"all unused","Fragments":["using","`using`"]},{"Key":"unused using","Fragments":["..."]},{"Key":"Maybe I","Fragments":["should","missed","misread","should","am"]},{"Key":"should not","Fragments":["use","comment","have","have","be","get","have","care.","be","happen","have","throw","need","evenly","be","be","loop","happen","need"]},{"Key":"use function","Fragments":["to"]},{"Key":"get reminder","Fragments":["and"]},{"Key":"reminder and","Fragments":["just"]},{"Key":"just write","Fragments":["Year","a","boolean"]},{"Key":"write Year","Fragments":["%"]},{"Key":"x ==","Fragments":["0","0`","0```"]},{"Key":"Your comments","Fragments":["are","are"]},{"Key":"a mix","Fragments":["of"]},{"Key":"mix of","Fragments":["requirements"]},{"Key":"of requirements","Fragments":["and"]},{"Key":"requirements and","Fragments":["justification","I","there's"]},{"Key":"and justification","Fragments":["for"]},{"Key":"justification for","Fragments":["design"]},{"Key":"for design","Fragments":["decisions."]},{"Key":"design decisions.","Fragments":["Those"]},{"Key":"decisions. Those","Fragments":["should"]},{"Key":"Those should","Fragments":["exist"]},{"Key":"should exist","Fragments":["in"]},{"Key":"exist in","Fragments":["external","the","the","the","Roman","the","one","C#"]},{"Key":"in external","Fragments":["documentation"]},{"Key":"external documentation","Fragments":["(preferably"]},{"Key":"documentation (preferably","Fragments":["the"]},{"Key":"(preferably the","Fragments":["tests)"]},{"Key":"the tests)","Fragments":["and"]},{"Key":"tests) and","Fragments":["firm"]},{"Key":"and firm","Fragments":["requirements."]},{"Key":"firm requirements.","Fragments":["The"]},{"Key":"requirements. The","Fragments":["amount"]},{"Key":"The amount","Fragments":["of"]},{"Key":"amount of","Fragments":["shouting","nesting","nesting","code","lines","time","fresh","days.","complexity"]},{"Key":"of shouting","Fragments":["is"]},{"Key":"shouting is","Fragments":["interesting...","probably"]},{"Key":"is interesting...","Fragments":["and"]},{"Key":"interesting... and","Fragments":["maybe"]},{"Key":"and maybe","Fragments":["a","a"]},{"Key":"maybe a","Fragments":["future","better","bit","second","couple","little"]},{"Key":"future requirement,","Fragments":["but"]},{"Key":"requirement, but","Fragments":["if","would"]},{"Key":"not at","Fragments":["the","all"]},{"Key":"the moment","Fragments":["then","we","trying"]},{"Key":"moment then","Fragments":["don't"]},{"Key":"then don't","Fragments":["code"]},{"Key":"don't code","Fragments":["it"]},{"Key":" when","Fragments":["you","you"]},{"Key":"you say","Fragments":["\"alpha","that","you"]},{"Key":"say \"alpha","Fragments":["chars\""]},{"Key":"\"alpha chars\"","Fragments":["do"]},{"Key":"chars\" do","Fragments":["you"]},{"Key":"you in","Fragments":["fact","the","my","the"]},{"Key":"fact mean","Fragments":["Chars"]},{"Key":"mean Chars","Fragments":["in"]},{"Key":"Chars in","Fragments":["a"]},{"Key":"a string...","Fragments":["I"]},{"Key":"string... I","Fragments":["found"]},{"Key":"found alphaCount","Fragments":["confusing"]},{"Key":"alphaCount confusing","Fragments":["(I"]},{"Key":"confusing (I","Fragments":["read"]},{"Key":"(I read","Fragments":["alpha"]},{"Key":"read alpha","Fragments":["meaning"]},{"Key":"alpha meaning","Fragments":["first"]},{"Key":"meaning first","Fragments":["expecting"]},{"Key":"first expecting","Fragments":["there"]},{"Key":"expecting there","Fragments":["to"]},{"Key":"a betaCount","Fragments":["somewhere"]},{"Key":"betaCount somewhere","Fragments":["later"]},{"Key":"somewhere later","Fragments":["on)"]},{"Key":"return variable","Fragments":["`ret`.","(line"]},{"Key":"variable `ret`.","Fragments":["Letters"]},{"Key":"`ret`. Letters","Fragments":["are"]},{"Key":"Letters are","Fragments":["not"]},{"Key":"not rationed","Fragments":["write"]},{"Key":"rationed write","Fragments":["out"]},{"Key":"write out","Fragments":["the","if...then"]},{"Key":"whole word","Fragments":["not","matches","will"]},{"Key":"word not","Fragments":["abbreviations.","\u003cb\u003eTwas\u003c/b\u003e."]},{"Key":"not abbreviations.","Fragments":["Clarity"]},{"Key":"abbreviations. Clarity","Fragments":["is"]},{"Key":"Clarity is","Fragments":["king.","more"]},{"Key":"could try","Fragments":["`text.ToUpper().Equals(text);`","regular","putting","Linq?"]},{"Key":"try `text.ToUpper().Equals(text);`","Fragments":["in"]},{"Key":"`text.ToUpper().Equals(text);` in","Fragments":["`IsShouting`"]},{"Key":"in `IsShouting`","Fragments":["just"]},{"Key":"`IsShouting` just","Fragments":["reads"]},{"Key":"just reads","Fragments":["a"]},{"Key":"reads a","Fragments":["bit","little"]},{"Key":"bit better","Fragments":["in"]},{"Key":"better in","Fragments":["my","any","the","the"]},{"Key":"The `else`s","Fragments":["are"]},{"Key":"`else`s are","Fragments":["not"]},{"Key":"not actually","Fragments":["doing","joining","required.","relevant."]},{"Key":"actually doing","Fragments":["anything"]},{"Key":"doing anything","Fragments":["and"]},{"Key":"anything and","Fragments":["can","making","so","just"]},{"Key":"You are","Fragments":["missing","using","simply","supposed","also","kinda","right,","right","calling","right,","basically","right,","converting","calling","using","correct","doing","right,","correct","partially","looping","doing","doing","by","welcome","essentially","keeping","doing","duplicating","right","adding","right","inconsistent","right","just","saving","certainly","right","correct","one","correct.","correct,"]},{"Key":"missing out","Fragments":["an"]},{"Key":"out an","Fragments":["opportunity","else","else","expression"]},{"Key":"an opportunity","Fragments":["to","for"]},{"Key":"opportunity to","Fragments":["use","refactor."]},{"Key":"`return string.IsNullOrEmpty(trimedText)","Fragments":["?"]},{"Key":"string.IsNullOrEmpty(trimedText) ?","Fragments":["\"Fine."]},{"Key":"? \"Fine.","Fragments":["Be","Be","Be"]},{"Key":"\"Fine. Be","Fragments":["that","that","that","that","that","that"]},{"Key":"Be that","Fragments":["way!\"","way!\"","way!\";","way!","way!\"","way!\";","way!\";"]},{"Key":"that way!\"","Fragments":[":",":"]},{"Key":"way!\" :","Fragments":["\"Whatever.\";`","\"Whatever.\";`"]},{"Key":"I had","Fragments":["some","the","`","wrote","anything","forgotten","the","an","to","just","not","to","to","when","to","no","just","thought","the","was","in","no","been","forgotten","trouble","to","your","no","not","not","the","to","a","to","to","trouble","CheckSides()","to","an","worked","know","the","to","2","a","no","to","a","used","to","an","an","forgotten","it","to","not","to","an","not","my","an","to","no","commented","a","thought","no","was","just","been","left","a","to","a","just","plans","all","created","everything","taken","Sum()","a","done","never","completely","to","no","a","some","to"]},{"Key":"had some","Fragments":["past","comments.","kind","enumeration","other"]},{"Key":"some past","Fragments":["feedback"]},{"Key":"past feedback","Fragments":["in"]},{"Key":"feedback in","Fragments":["this"]},{"Key":"and realized","Fragments":["that","that","that","that","I"]},{"Key":"it's better","Fragments":["if","to","to","to"]},{"Key":"better if","Fragments":["I","you"]},{"Key":"I execute","Fragments":["everything"]},{"Key":"execute everything","Fragments":["in"]},{"Key":"everything in","Fragments":["the","one","the","a","LINQ","a","one"]},{"Key":"the Unity","Fragments":["engine."]},{"Key":"Unity engine.","Fragments":["I"]},{"Key":"engine. I","Fragments":["do"]},{"Key":"do all","Fragments":["of","your","the","the","the","the","the","that"]},{"Key":"my work","Fragments":["there,","comp."]},{"Key":"work there,","Fragments":["so","but"]},{"Key":"there, so","Fragments":["I"]},{"Key":"feel more","Fragments":["at","readable."]},{"Key":"more at","Fragments":["home"]},{"Key":"at home","Fragments":["there"]},{"Key":"home there","Fragments":["too."]},{"Key":"most efficient","Fragments":["way","way","to","solution"]},{"Key":"efficient way","Fragments":["of","to","to","to","than"]},{"Key":"of figuring","Fragments":["out"]},{"Key":"figuring out","Fragments":["a","NUnit!","Exercism.","what","why","if","the","how"]},{"Key":" I've","Fragments":["completed","finally","always","been","been","never","found","now","considered","seen","never","never","been","added","seen","just","seen"]},{"Key":"I've completed","Fragments":["this"]},{"Key":"completed this","Fragments":["before"]},{"Key":"this before","Fragments":["for","any","I"]},{"Key":"before for","Fragments":["another"]},{"Key":"for another","Fragments":["project","variable.","iteration."]},{"Key":"another project","Fragments":["in"]},{"Key":"project in","Fragments":["C#,","Xamarin,"]},{"Key":"in C#,","Fragments":["so","but","so","I","so","which","don't","see","but"]},{"Key":"C#, so","Fragments":["it","I'll","I"]},{"Key":"was nice","Fragments":["to"]},{"Key":"nice to","Fragments":["revisit.","see","have","be","see","provide","see","validate","exit","have"]},{"Key":"to revisit.","Fragments":["I"]},{"Key":"revisit. I","Fragments":["think"]},{"Key":"think my","Fragments":["hardest","first","next","previous"]},{"Key":"my hardest","Fragments":["time"]},{"Key":"hardest time","Fragments":["was"]},{"Key":"time was","Fragments":["understanding"]},{"Key":"was understanding","Fragments":["the"]},{"Key":"understanding the","Fragments":["actual","code"]},{"Key":"year than","Fragments":["anything."]},{"Key":"had the","Fragments":["same","ability","\"IsDivisibleBy4()\"","wrong","concern","constants","CheckNum","map","idea","same"]},{"Key":"same idea,","Fragments":["though"]},{"Key":"idea, though","Fragments":["I"]},{"Key":"though I","Fragments":["used","think","think","would","am","think","would","think","pulled","won't","used","would","don't","had","don't"]},{"Key":"used UInt16.","Fragments":["But"]},{"Key":"UInt16. But","Fragments":["thinking"]},{"Key":"But thinking","Fragments":["about"]},{"Key":"about it,","Fragments":["I","I","I","that"]},{"Key":"it, I","Fragments":["don't","found","would","couldn't","decided","may","guess."]},{"Key":"think anything","Fragments":["is","is"]},{"Key":"anything is","Fragments":["saved","saved","right"]},{"Key":"is saved","Fragments":["(memory)","using"]},{"Key":"saved (memory)","Fragments":["by"]},{"Key":"(memory) by","Fragments":["using"]},{"Key":"using UInt16","Fragments":["over"]},{"Key":"UInt16 over","Fragments":["just"]},{"Key":"over just","Fragments":["uint","inlining"]},{"Key":"just uint","Fragments":["as"]},{"Key":"uint as","Fragments":["it's","years"]},{"Key":"it's probably","Fragments":["compiled","irrelevant?","part","not"]},{"Key":"probably compiled","Fragments":["to"]},{"Key":"compiled to","Fragments":["a"]},{"Key":"a 32bit","Fragments":["memory"]},{"Key":"32bit memory","Fragments":["value"]},{"Key":"memory value","Fragments":["anyway?"]},{"Key":"Not bad","Fragments":["for","but"]},{"Key":"bad for","Fragments":["first","the"]},{"Key":"for first","Fragments":["submission."]},{"Key":"first submission.","Fragments":["I"]},{"Key":"submission. I","Fragments":["might","was"]},{"Key":"might also","Fragments":["note","consider","be","want"]},{"Key":"also note","Fragments":["that"]},{"Key":"note that","Fragments":["all","this"]},{"Key":"the `using`","Fragments":["directives"]},{"Key":"`using` directives","Fragments":["are"]},{"Key":"directives are","Fragments":["superfluous."]},{"Key":"could type","Fragments":["your"]},{"Key":"type your","Fragments":["conditional"]},{"Key":"conditional in","Fragments":["a"]},{"Key":" There's","Fragments":["no","other","a","a","some","also","also"]},{"Key":"There's no","Fragments":["need","need","punctuation","law","need"]},{"Key":"for 3","Fragments":["conditional",",5,7so","entries?"]},{"Key":"3 conditional","Fragments":["checks"]},{"Key":" `ToList`","Fragments":["isn't"]},{"Key":"`ToList` isn't","Fragments":["needed,"]},{"Key":"isn't needed,","Fragments":["but"]},{"Key":"needed, but","Fragments":["without"]},{"Key":"but without","Fragments":["it","any"]},{"Key":"without it","Fragments":["you"]},{"Key":"it you","Fragments":["do","have","come","can","could"]},{"Key":"you do","Fragments":["get","only","just","the","not","result[item.Value[i].ToLower()]","expected[letter.ToLower()]","your","transform[letter.ToLower()]","transformed[letter.ToLower()]","returnDict[letter.ToLower()]","transformedDictonary[letter.ToLower()]","output[letter.ToLower()]","expected[letter.ToLower()]","ret[letter.ToLower()]","newDictionary[letter.ToLower()]","results[letter.ToLower()]","tranformedValues[letter.ToLowerInvariant()]","output[letter.ToLower()]","shinyNewData[letter.ToLower()]","\u003ccode\u003enewData[letter.ToLower()]","ToLower().","\u003ccode\u003etransformed[letter.ToLower()]","\u003ccode\u003enewData[letter.ToLower()]","better","the","one","not","not","this","it","that,","it","if","it","the","a","if","these","it","this","this?","need"]},{"Key":"do get","Fragments":["a"]},{"Key":"a `Possible","Fragments":["multiple"]},{"Key":"`Possible multiple","Fragments":["enumerations`"]},{"Key":"multiple enumerations`","Fragments":["error"]},{"Key":"enumerations` error","Fragments":["with"]},{"Key":"error with","Fragments":["the"]},{"Key":"default Resharper","Fragments":["settings."]},{"Key":"Resharper settings.","Fragments":["I'm"]},{"Key":"settings. I'm","Fragments":["assuming"]},{"Key":"I'm assuming","Fragments":["that's","by","from","they","its","its"]},{"Key":"assuming that's","Fragments":["why"]},{"Key":"why @victor","Fragments":["added"]},{"Key":"@victor added","Fragments":["it."]},{"Key":"What I'm","Fragments":["trying"]},{"Key":"I'm trying","Fragments":["to","out","to","to","not","a"]},{"Key":"do here","Fragments":["is"]},{"Key":"avoid multiple","Fragments":["```if```","return","returns.","returns","return","return"]},{"Key":"multiple ```if```","Fragments":["statements,"]},{"Key":"```if``` statements,","Fragments":["so"]},{"Key":"statements, so","Fragments":["adding","you"]},{"Key":"so adding","Fragments":["new"]},{"Key":"adding new","Fragments":["responses","evaluators"]},{"Key":"new responses","Fragments":["later"]},{"Key":"responses later","Fragments":["would"]},{"Key":"later would","Fragments":["not"]},{"Key":"would not","Fragments":["require","have","be","write","have","have","be","pass","pass","be","work","easily","want","use","work.","require","matter.","have","have","include","be","pass"]},{"Key":"not require","Fragments":["changes","me","what","a"]},{"Key":"require changes","Fragments":["to"]},{"Key":"changes to","Fragments":["the","the","an","the","Grade()","the","make"]},{"Key":"the ```Hey()```","Fragments":["method."]},{"Key":"really miss","Fragments":["LINQ's"]},{"Key":"miss LINQ's","Fragments":["```First()```"]},{"Key":"LINQ's ```First()```","Fragments":["for"]},{"Key":"```First()``` for","Fragments":["```OrderedDictionary```,"]},{"Key":"for ```OrderedDictionary```,","Fragments":["the"]},{"Key":"```OrderedDictionary```, the","Fragments":["code"]},{"Key":"in ```Hey()```","Fragments":["method"]},{"Key":"```Hey()``` method","Fragments":["looks"]},{"Key":"method looks","Fragments":["quite","too","a"]},{"Key":"looks quite","Fragments":["ugly"]},{"Key":"quite ugly","Fragments":["for"]},{"Key":"ugly for","Fragments":["me"]},{"Key":"will certainly","Fragments":["function,"]},{"Key":"certainly function,","Fragments":["but"]},{"Key":"function, but","Fragments":["your","it","in","I","how"]},{"Key":"your WriteLine","Fragments":["statements"]},{"Key":"WriteLine statements","Fragments":["are"]},{"Key":"are giving","Fragments":["you","you."]},{"Key":"giving you","Fragments":["feedback"]},{"Key":"you feedback","Fragments":["that"]},{"Key":"that duplicates","Fragments":["the"]},{"Key":"duplicates the","Fragments":["feedback"]},{"Key":"feedback the","Fragments":["tests"]},{"Key":"you remove","Fragments":["the","the"]},{"Key":"the WriteLine","Fragments":["statements,","in"]},{"Key":"WriteLine statements,","Fragments":["you"]},{"Key":"statements, you","Fragments":["can","can"]},{"Key":"can then","Fragments":["shrink","be","access","figure","go"]},{"Key":"then shrink","Fragments":["the"]},{"Key":"shrink the","Fragments":["footprint"]},{"Key":"the footprint","Fragments":["and"]},{"Key":"footprint and","Fragments":["improve"]},{"Key":"and improve","Fragments":["the","readability","it."]},{"Key":"improve the","Fragments":["readability","readability","readability.","writing,","ranges"]},{"Key":"your function,","Fragments":["and"]},{"Key":"function, and","Fragments":["it","presumably","compare","could","you"]},{"Key":"will also","Fragments":["force","pass","accept","fail."]},{"Key":"also force","Fragments":["you"]},{"Key":"force you","Fragments":["to"]},{"Key":"to rely","Fragments":["on","on"]},{"Key":"on your","Fragments":["unit","code.",".Net","string,","command.ToUpper()","coding","solution","code","previous","isQuestion","own","own","comments.","own","StringBuilder","code.","current","logical","switch.","meaning","chosen","feedback.","methods","feedback.","suggestion:"]},{"Key":"your unit","Fragments":["tests","test"]},{"Key":"unit tests","Fragments":["for","on","set","whihc","I","by","because","instead","too?","and","have","specifically","regarding","(hopefully","for","or","very","and","have","are","here"]},{"Key":"for proving","Fragments":["it"]},{"Key":"proving it","Fragments":["works"]},{"Key":" Returning","Fragments":["null","a"]},{"Key":"Returning null","Fragments":["is"]},{"Key":"null is","Fragments":["a","provided"]},{"Key":"bad habit.","Fragments":["You"]},{"Key":"habit. You","Fragments":["are"]},{"Key":"are using","Fragments":["null","If-Return","that","SequenceEqual","that","a","began","here","2,3","Aggregate(),","a","code","it"]},{"Key":"using null","Fragments":["as","which"]},{"Key":"null as","Fragments":["your","this","empty"]},{"Key":"as your","Fragments":["boolean","project","methods","other","original","go-to","code","suggested:","type"]},{"Key":"your boolean","Fragments":["operator","logic"]},{"Key":"boolean operator","Fragments":["to"]},{"Key":"operator to","Fragments":["determine","flip","return","'null","compare"]},{"Key":"to determine","Fragments":["whether","when/where","what","presence","the","if","when","if","the","correct","if","if"]},{"Key":"determine whether","Fragments":["the"]},{"Key":"whether the","Fragments":["statement","new","conditions","year","input","input","triplet","string","whole"]},{"Key":"the statement","Fragments":["fits","that","nesting.","on","on","on","that","exits.","that","following","on","and","itself","argument","contains","you're","I"]},{"Key":"statement fits","Fragments":["the"]},{"Key":"fits the","Fragments":["response."]},{"Key":"While this","Fragments":["is","makes","works,","code","version","certainly","works","is","seems"]},{"Key":"a fun","Fragments":["trick","way","exercise."]},{"Key":"fun trick","Fragments":["that"]},{"Key":"trick that","Fragments":["works","@tamara"]},{"Key":"that works","Fragments":["for","with","on","based","on"]},{"Key":"works for","Fragments":["this","all","every","me,","the","all"]},{"Key":"this solution,","Fragments":["if","but"]},{"Key":"solution, if","Fragments":["you"]},{"Key":"to solve","Fragments":["a","this.","the","it:","the","them.","this","this","the","the","it","it","the","for","by","the","this"]},{"Key":"solve a","Fragments":["problem"]},{"Key":"a problem","Fragments":["more","if","with","in","in","with","when","for","at","with","but","if","wiht","with"]},{"Key":"problem more","Fragments":["complex"]},{"Key":"complex it","Fragments":["becomes","protecting"]},{"Key":"becomes much","Fragments":["more"]},{"Key":"more difficult","Fragments":["to","to","to","to","to","to","to","to","to","to","to","than","to"]},{"Key":"would add","Fragments":["is","an","in","that"]},{"Key":"add is","Fragments":["that","that","that"]},{"Key":"you pull","Fragments":["your","the","all"]},{"Key":"pull your","Fragments":["booleans"]},{"Key":"your booleans","Fragments":["out"]},{"Key":"booleans out","Fragments":["of"]},{"Key":"your \"Hey\"","Fragments":["function,"]},{"Key":"\"Hey\" function,","Fragments":["it","and"]},{"Key":"function, it","Fragments":["will","may","looks"]},{"Key":"will allow","Fragments":["your","you","you","duplicates.","you"]},{"Key":"allow your","Fragments":["function"]},{"Key":"do just","Fragments":["one","fine"]},{"Key":"just one","Fragments":["thing,","ternary","line.","more","statement","thing.","per","statement","day.","counter","thing.","extra"]},{"Key":"allow you","Fragments":["to","to","to","to","to","to","to","to","to"]},{"Key":"to clearly","Fragments":["communicate"]},{"Key":"clearly communicate","Fragments":["what"]},{"Key":"communicate what","Fragments":["the"]},{"Key":"my initial","Fragments":["implementation.","version","experience","version","results","function","pass"]},{"Key":"initial implementation.","Fragments":["I"]},{"Key":"implementation. I","Fragments":["like"]},{"Key":"to check","Fragments":["for","if","that","both","my","for","if","the","that","for","if","is","the","a","if","the","below","not","if","for","if","for","if","for","for","if","for","for","for","if","that","for","that","for","for","for","that","for","if","against","if","is:","for","any","if","if","it.","that","the","out","\u003ccode\u003ematches.Contains(i)\u003c/code\u003e.","\u003ccode\u003eif","if","for","even","the","for","off","for","for","out","to","for","if","for","to","this","for","the","if","the","your","that","if"]},{"Key":"the different","Fragments":["kinds","ways","conditions","operators","conditions.","pairs","format","allergens,"]},{"Key":"different kinds","Fragments":["of"]},{"Key":"kinds of","Fragments":["responses","mistakes"]},{"Key":"of responses","Fragments":["being"]},{"Key":"responses being","Fragments":["broken"]},{"Key":"being broken","Fragments":["out","into"]},{"Key":"broken out","Fragments":["as"]},{"Key":"out as","Fragments":["their","soon","an"]},{"Key":"as their","Fragments":["own","own"]},{"Key":"own thing.","Fragments":["I"]},{"Key":"thing. I","Fragments":["wish","think","finished","haven't"]},{"Key":"I wish","Fragments":["that","I","I","I","I","C#'s"]},{"Key":"wish that","Fragments":["`isExclamation()`"]},{"Key":"that `isExclamation()`","Fragments":["were"]},{"Key":"`isExclamation()` were","Fragments":["one"]},{"Key":"were one","Fragments":["line","thing"]},{"Key":"line like","Fragments":["the","that"]},{"Key":"fun way","Fragments":["to"]},{"Key":"to play","Fragments":["with"]},{"Key":"play with","Fragments":["funcs","RegEx"]},{"Key":"with funcs","Fragments":["that"]},{"Key":"funcs that","Fragments":["is"]},{"Key":"very readable.","Fragments":["Good","It's","Good","Personally,","It"]},{"Key":"readable. Good","Fragments":["job.","job"]},{"Key":" So","Fragments":["if","it","the","are","it","I","you","I","on","I","on","then","I","most","favor","try","I"]},{"Key":"So if","Fragments":["I","this","you","we","you","the"]},{"Key":"am reading","Fragments":["your","restrictions"]},{"Key":"reading your","Fragments":["response","current","code,","solution.","code.","code","code.","comment,"]},{"Key":"your response","Fragments":["correctly,","strings"]},{"Key":"response correctly,","Fragments":["I"]},{"Key":"I shouldn't","Fragments":["count"]},{"Key":"shouldn't count","Fragments":["on"]},{"Key":"count on","Fragments":["my","NUnit","that","it,"]},{"Key":"my WriteLine","Fragments":["to"]},{"Key":"WriteLine to","Fragments":["tell"]},{"Key":"to tell","Fragments":["me","what's","you","under","if","you","what","whether"]},{"Key":"tell me","Fragments":["if","what","what"]},{"Key":"are working","Fragments":["correctly,","our","with","on"]},{"Key":"working correctly,","Fragments":["but"]},{"Key":"correctly, but","Fragments":["rather"]},{"Key":"but rather","Fragments":["just"]},{"Key":"rather just","Fragments":["count"]},{"Key":"just count","Fragments":["on"]},{"Key":"do that?","Fragments":["I"]},{"Key":"that? I","Fragments":["have"]},{"Key":"have spent","Fragments":["some"]},{"Key":"spent some","Fragments":["time"]},{"Key":"some time","Fragments":["this","on","to","to"]},{"Key":"time this","Fragments":["weekend"]},{"Key":"this weekend","Fragments":["to"]},{"Key":"weekend to","Fragments":["learn"]},{"Key":"learn some","Fragments":["of"]},{"Key":"basic functionality","Fragments":["of"]},{"Key":"functionality of","Fragments":["NUnit"]},{"Key":"of NUnit","Fragments":["and","rather"]},{"Key":"NUnit and","Fragments":["how","install","developing","Visual","install"]},{"Key":"add it","Fragments":["to","for","to","a","again).","to","to"]},{"Key":"to VS2010","Fragments":["and"]},{"Key":"VS2010 and","Fragments":["make"]},{"Key":"it usable.","Fragments":["I"]},{"Key":"usable. I","Fragments":["have"]},{"Key":"have slimmed","Fragments":["down"]},{"Key":"slimmed down","Fragments":["my"]},{"Key":"down my","Fragments":["original","previous","spine."]},{"Key":"my original","Fragments":["code","evaluated","is","check","solution","approach","solution"]},{"Key":"original code","Fragments":["like"]},{"Key":"you mentioned","Fragments":["and"]},{"Key":"mentioned and","Fragments":["will"]},{"Key":"and will","Fragments":["update","cause","fall","overwrite","index","likely","take","still","not","be"]},{"Key":"will update","Fragments":["it.","my"]},{"Key":"update it.","Fragments":["I"]},{"Key":"have performed","Fragments":["the"]},{"Key":"performed the","Fragments":["tests"]},{"Key":"all have","Fragments":["passed."]},{"Key":"have passed.","Fragments":["I"]},{"Key":"passed. I","Fragments":["also"]},{"Key":"also tested","Fragments":["the"]},{"Key":"tested the","Fragments":["[Ignore]"]},{"Key":"the [Ignore]","Fragments":["statement","attributes)."]},{"Key":"[Ignore] statement","Fragments":["in"]},{"Key":"have found","Fragments":["that","var"]},{"Key":"found that","Fragments":["it","merely","a","too","too","while","I"]},{"Key":"works like","Fragments":["expected.","basic"]},{"Key":"like expected.","Fragments":["I"]},{"Key":"expected. I","Fragments":["also"]},{"Key":"also discovered","Fragments":["what","that"]},{"Key":"discovered what","Fragments":["I"]},{"Key":"doing wrong,","Fragments":["I"]},{"Key":"wrong, I","Fragments":["was","love"]},{"Key":"was running","Fragments":["the","this"]},{"Key":"running the","Fragments":["64bit","console.","tests,"]},{"Key":"the 64bit","Fragments":["version"]},{"Key":"64bit version","Fragments":["of"]},{"Key":"version of","Fragments":["NUnit","the","my","your","LINQ","finding","this,","this","the","Score()",".NET,","IsLeap:","Linq","the","your","your","the","the","Where","string","single","martinfreedman's"]},{"Key":"NUnit rather","Fragments":["than"]},{"Key":"For nitpicks,","Fragments":["what"]},{"Key":"nitpicks, what","Fragments":["would"]},{"Key":"most impactful","Fragments":["change"]},{"Key":"impactful change","Fragments":["to"]},{"Key":"change to","Fragments":["make?","the","strings","scan","the"]},{"Key":" \"Woah,","Fragments":["chill"]},{"Key":"\"Woah, chill","Fragments":["out!\"","out!\"","out!\".","out!\""]},{"Key":"chill out!\"","Fragments":["needs","string,"]},{"Key":"out!\" needs","Fragments":["to"]},{"Key":"be \"Whoa,","Fragments":["chill"]},{"Key":"\"Whoa, chill","Fragments":["out!\"","out!\"","out!\";","out!\";","out!\"","out!\";","out!\";","out!\";","out!\";","out!\";","out!\";","out!\";"]},{"Key":" Wow,","Fragments":["Nice","nice","a","you","that's","this","apparently","how"]},{"Key":"Wow, Nice","Fragments":["solution"]},{"Key":"Nice solution","Fragments":["to"]},{"Key":"solution to","Fragments":["write","that","the","returning","see","scrounge","do","this"]},{"Key":"write just","Fragments":["one"]},{"Key":"one ternary","Fragments":["operator!"]},{"Key":"ternary operator!","Fragments":[":)"]},{"Key":"the Add","Fragments":["method,","method,","and","function"]},{"Key":"Add method,","Fragments":["you","I"]},{"Key":"method, you","Fragments":["could","can","don't","should","can","could"]},{"Key":"could use","Fragments":["the","char.IsDigit().","`s.EndsWith(\"?\")`","var","the","`string.EndsWith`","it.","refactoring","Linq","`hey.EndsWith()`","var,","the","a","a","SortedSet\u003cstring\u003e","the","the","the","```string.IsNullOrWhitespace```","Int32.TryParse,","the","a","a","2","LINQ","```var```","```String.IsNullOrEmpty(statement)","that","`var`","_t.Sum()","this.h","the","string.IsNullOrEmpty","String.Concat()...","the"]},{"Key":"the Sort","Fragments":["method"]},{"Key":"Sort method","Fragments":["of"]},{"Key":"method of","Fragments":["List\u003cT\u003e","`?","checking","declaring","using","a"]},{"Key":"of List\u003cT\u003e","Fragments":["instead"]},{"Key":"List\u003cT\u003e instead","Fragments":["of"]},{"Key":"of rebuilding","Fragments":["a"]},{"Key":"rebuilding a","Fragments":["new"]},{"Key":"new list.","Fragments":["It"]},{"Key":"list. It","Fragments":["requires"]},{"Key":"It requires","Fragments":["a"]},{"Key":"requires a","Fragments":["cast","somewhat","'%'"]},{"Key":"a cast","Fragments":["though,","here?"]},{"Key":"cast though,","Fragments":["since"]},{"Key":"though, since","Fragments":["you"]},{"Key":"since you","Fragments":["use","don't","initiated","are","have","didn't","submitted","have","rely","declared","wouldn't","don't"]},{"Key":"use IList","Fragments":["in"]},{"Key":"IList in","Fragments":["the"]},{"Key":"the dictionary,","Fragments":["but","seems","causing","but","so","but","although"]},{"Key":"dictionary, but","Fragments":["it's","instead","seems","I","the","what"]},{"Key":"it's simple","Fragments":["enough."]},{"Key":"good. Props","Fragments":["on"]},{"Key":"Props on","Fragments":["doing"]},{"Key":"on doing","Fragments":["the"]},{"Key":"the read-only","Fragments":["extra"]},{"Key":"read-only extra","Fragments":["credit."]},{"Key":"interested, here","Fragments":["a"]},{"Key":"here a","Fragments":["few","bit"]},{"Key":"few true","Fragments":["nitpicks"]},{"Key":"1. ```Roster```","Fragments":["doesn't"]},{"Key":"```Roster``` doesn't","Fragments":["need"]},{"Key":"doesn't need","Fragments":["a","to","to","its","to","any","the","the","Pow()","to","to","to"]},{"Key":"need a","Fragments":["private","if","collection","SortedDictionary","SortedDictionary","way","\"using\"","List\u003cint\u003e","Main()","dictionary","separate","Timespan.","structure","StringBuilder","mechanism","separate","search","dictionary","for"]},{"Key":"private setter","Fragments":["if","is","so"]},{"Key":"setter if","Fragments":["it's"]},{"Key":"not an","Fragments":["auto-property.","exception.","experienced","issue","anagram","error","expert."]},{"Key":"2. If","Fragments":["you're","someone"]},{"Key":"you're interested","Fragments":["in"]},{"Key":"interested in","Fragments":["performance","the","trimming","seeing","the"]},{"Key":"in performance","Fragments":["(small","it","as"]},{"Key":"performance (small","Fragments":["gains),"]},{"Key":"(small gains),","Fragments":["there's"]},{"Key":"gains), there's","Fragments":["a"]},{"Key":"of ```Dictionary```","Fragments":["called"]},{"Key":"```Dictionary``` called","Fragments":["```TryGetValue```"]},{"Key":"called ```TryGetValue```","Fragments":["that"]},{"Key":"```TryGetValue``` that","Fragments":["lets"]},{"Key":"that lets","Fragments":["you"]},{"Key":"lets you","Fragments":["do"]},{"Key":"do only","Fragments":["one"]},{"Key":"one seek.","Fragments":["But"]},{"Key":"seek. But","Fragments":["like"]},{"Key":"But like","Fragments":["I"]},{"Key":"I said,","Fragments":["micro","it","it's","A","I","very"]},{"Key":"said, micro","Fragments":["optimization"]},{"Key":"micro optimization","Fragments":["and","I"]},{"Key":"optimization and","Fragments":["completely"]},{"Key":"and completely","Fragments":["optional."]},{"Key":"3. You","Fragments":["can","will"]},{"Key":"list initializer","Fragments":["on"]},{"Key":"initializer on","Fragments":["line"]},{"Key":"line 44","Fragments":["that"]},{"Key":"44 that","Fragments":["might"]},{"Key":"that might","Fragments":["look","be","be","have","have","manipulate","be","be","simplify","work","be","read"]},{"Key":"might look","Fragments":["nicer.","at"]},{"Key":"look nicer.","Fragments":["It"]},{"Key":"nicer. It","Fragments":["would"]},{"Key":"It would","Fragments":["look","be","need","have","depend","be","also","be","be","be","be","make","be","require","be","much"]},{"Key":"look like:","Fragments":["```myRoster.Add(grade,"]},{"Key":"like: ```myRoster.Add(grade,","Fragments":["new"]},{"Key":"```myRoster.Add(grade, new","Fragments":["List\u003cstring\u003e"]},{"Key":"new List\u003cstring\u003e","Fragments":["{","{","{","for"]},{"Key":"List\u003cstring\u003e {","Fragments":["name","\"A\",","\"D\",","\"Kareem\"","\"Jennifer\"","\"Jennifer\""]},{"Key":"{ name","Fragments":["});```"]},{"Key":"This does","Fragments":["not","make","not","not"]},{"Key":"not seem","Fragments":["to"]},{"Key":" Forceful_questions","Fragments":["Failed"]},{"Key":"Forceful_questions Failed","Fragments":["00:00:00.071"]},{"Key":"Failed 00:00:00.071","Fragments":["(local)"]},{"Key":" Shouting","Fragments":["Failed"]},{"Key":"Shouting Failed","Fragments":["00:00:00.002"]},{"Key":"Failed 00:00:00.002","Fragments":["(local)"]},{"Key":" Shouting_numbers","Fragments":["Failed"]},{"Key":"Shouting_numbers Failed","Fragments":["00:00:00.000"]},{"Key":"Failed 00:00:00.000","Fragments":["(local)","(local)","(local)"]},{"Key":" Shouting_with_no_exclamation_mark","Fragments":["Failed"]},{"Key":"Shouting_with_no_exclamation_mark Failed","Fragments":["00:00:00.000"]},{"Key":" Shouting_with_special_characters","Fragments":["Failed"]},{"Key":"Shouting_with_special_characters Failed","Fragments":["00:00:00.000"]},{"Key":" Oh","Fragments":["I","yeah!","wow,","Sorry","yeah,"]},{"Key":"Oh I","Fragments":["caught"]},{"Key":"I caught","Fragments":["it","myself"]},{"Key":"caught it","Fragments":["you","or"]},{"Key":"have `\"Woah,","Fragments":["chill"]},{"Key":"`\"Woah, chill","Fragments":["out!\"`"]},{"Key":"chill out!\"`","Fragments":["but","Not"]},{"Key":"out!\"` but","Fragments":["I"]},{"Key":"have `\"Whoa,","Fragments":["chill"]},{"Key":"`\"Whoa, chill","Fragments":["out!\"`"]},{"Key":"out!\"` Not","Fragments":["sure"]},{"Key":"file changed","Fragments":["or"]},{"Key":"changed or","Fragments":["what!"]},{"Key":"Nice use","Fragments":["of","of","of","of","of"]},{"Key":"of divisibility","Fragments":["by"]},{"Key":"divisibility by","Fragments":["400"]},{"Key":"400 first","Fragments":["to"]},{"Key":"first to","Fragments":["capture","be","If"]},{"Key":"to capture","Fragments":["the","the","the"]},{"Key":"capture the","Fragments":["odd-ball","%","year","interior"]},{"Key":"the odd-ball","Fragments":["centuries"]},{"Key":"odd-ball centuries","Fragments":["which"]},{"Key":"centuries which","Fragments":["are"]},{"Key":"which are","Fragments":["leap","actually","supposed","always","prime","a"]},{"Key":"are leap","Fragments":["years","years"]},{"Key":"years first.","Fragments":["And"]},{"Key":"first. And","Fragments":["clarifying"]},{"Key":"And clarifying","Fragments":["the"]},{"Key":"clarifying the","Fragments":["actual"]},{"Key":"actual modulo","Fragments":["operator"]},{"Key":"operator in","Fragments":["the","a","AddIfDivisible()","Linq?"]},{"Key":"the IsDivisible","Fragments":["method,","for"]},{"Key":"IsDivisible method,","Fragments":["clever."]},{"Key":"First off,","Fragments":["when"]},{"Key":"off, when","Fragments":["creating"]},{"Key":"when creating","Fragments":["a"]},{"Key":"new project,","Fragments":["make"]},{"Key":"project, make","Fragments":["sure"]},{"Key":"sure to","Fragments":["choose","make","add"]},{"Key":"to choose","Fragments":["\"Class"]},{"Key":"choose \"Class","Fragments":["Library\""]},{"Key":"\"Class Library\"","Fragments":["as"]},{"Key":"Library\" as","Fragments":["your"]},{"Key":"When that","Fragments":["is"]},{"Key":"is initialized,","Fragments":["you"]},{"Key":"initialized, you","Fragments":["will"]},{"Key":"class file","Fragments":["appear.","but"]},{"Key":"file appear.","Fragments":["You"]},{"Key":"appear. You","Fragments":["will"]},{"Key":"will want","Fragments":["to","to","this","to"]},{"Key":"to rename","Fragments":["that","the"]},{"Key":"rename that","Fragments":["to"]},{"Key":"that to","Fragments":["the","work","be","ignore","Roster[grade]","an","calculate","an","get","your","light."]},{"Key":"same class","Fragments":["and"]},{"Key":"and function","Fragments":["names","calls"]},{"Key":"function names","Fragments":["as","should"]},{"Key":"names as","Fragments":["you"]},{"Key":"you see","Fragments":["in","a","any","```Predicate\u003cT\u003e```","a","fit."]},{"Key":"see in","Fragments":["LeapTest.cs.","my","this","the","our"]},{"Key":"in LeapTest.cs.","Fragments":["Make"]},{"Key":"LeapTest.cs. Make","Fragments":["sure"]},{"Key":"Make sure","Fragments":["to"]},{"Key":"and functions","Fragments":["static,"]},{"Key":"functions static,","Fragments":["so"]},{"Key":"static, so","Fragments":["that","no"]},{"Key":"unit test","Fragments":["can","into","file","system","for","is","and","to","design","provided,","design)","will","for"]},{"Key":"can access","Fragments":["the","the"]},{"Key":"access the","Fragments":["class.","value","private","class","counts."]},{"Key":"a start.","Fragments":["Get"]},{"Key":"start. Get","Fragments":["acquainted"]},{"Key":"Get acquainted","Fragments":["with"]},{"Key":"acquainted with","Fragments":["the"]},{"Key":"the help","Fragments":["document",":)","page","documentation.","and","button","they"]},{"Key":"help document","Fragments":["located"]},{"Key":"document located","Fragments":["[here](http://help.exercism.io/getting-started-with-csharp.html)"]},{"Key":"located [here](http://help.exercism.io/getting-started-with-csharp.html)","Fragments":["for"]},{"Key":"[here](http://help.exercism.io/getting-started-with-csharp.html) for","Fragments":["more"]},{"Key":" buildStrand","Fragments":["can"]},{"Key":"buildStrand can","Fragments":["be"]},{"Key":"be simplified","Fragments":["a","down","even","much","e.g."]},{"Key":"simplified a","Fragments":["lot","bit."]},{"Key":"lot with","Fragments":["a","the"]},{"Key":"LINQ query!","Fragments":["A"]},{"Key":"query! A","Fragments":["private"]},{"Key":"A private","Fragments":["setter"]},{"Key":"setter is","Fragments":["also"]},{"Key":"also no","Fragments":["necessary","need"]},{"Key":"no necessary","Fragments":["for"]},{"Key":"necessary for","Fragments":["the","this","the","this"]},{"Key":"the NucleotideCounts","Fragments":["property.","property","dictionary","dictionary","wont","property"]},{"Key":"liked someone","Fragments":["else's"]},{"Key":"someone else's","Fragments":["solution"]},{"Key":"else's solution","Fragments":["that"]},{"Key":"solution that","Fragments":["used","wouldn't","is","doesn't","I","does","turned","used","doesn't","solves","includes","would"]},{"Key":"that used","Fragments":["a","here","the","to"]},{"Key":"small class","Fragments":["with"]},{"Key":"the predicate","Fragments":["as","of","changes","will"]},{"Key":"predicate as","Fragments":["a"]},{"Key":"text as","Fragments":["a"]},{"Key":"a regular","Fragments":["property","expression","ternary","basis","expression.","expression","expression](http://exercism.io/submissions/b42b1b13526342c8944aea3a808de5f7)."]},{"Key":"regular property","Fragments":["and"]},{"Key":"property and","Fragments":["then","parameter","the"]},{"Key":"then a","Fragments":["list.","comment","nested"]},{"Key":"was simply","Fragments":["than","to","for","to"]},{"Key":"simply than","Fragments":["the"]},{"Key":"the ordered","Fragments":["dictionary"]},{"Key":"ordered dictionary","Fragments":["and","yet,","cannot"]},{"Key":"dictionary and","Fragments":["a","iterating","I","using","it","then","instead","note","Add"]},{"Key":"I'll probably","Fragments":["work","update"]},{"Key":"probably work","Fragments":["on"]},{"Key":"work on","Fragments":["refactoring","just","restricting","it","your","implementing"]},{"Key":"on refactoring","Fragments":["this"]},{"Key":"refactoring this","Fragments":["to"]},{"Key":"to something","Fragments":["more","better","like","more","that","that","more"]},{"Key":" Fails,","Fragments":["12"]},{"Key":"Fails, 12","Fragments":["passed,"]},{"Key":"12 passed,","Fragments":["5"]},{"Key":"passed, 5","Fragments":["failed"]},{"Key":"love that","Fragments":["you"]},{"Key":"single function","Fragments":["to","that","for","that"]},{"Key":"all your","Fragments":["division!","changes","submissions","code"]},{"Key":"The function","Fragments":["is","names"]},{"Key":"very readable,","Fragments":["which","aside","a","as","looks"]},{"Key":"readable, which","Fragments":["is","is"]},{"Key":"is nice.","Fragments":["If","I"]},{"Key":"nice. If","Fragments":["you"]},{"Key":"want something","Fragments":["more","that's"]},{"Key":"concise, you","Fragments":["could"]},{"Key":"also combine","Fragments":["your","the"]},{"Key":"statements using","Fragments":["`\u0026\u0026`"]},{"Key":"using `\u0026\u0026`","Fragments":["and"]},{"Key":"`\u0026\u0026` and","Fragments":["`||`","`||`"]},{"Key":"and `||`","Fragments":["operators.","(and"]},{"Key":"One small","Fragments":["thing,"]},{"Key":"small thing,","Fragments":["a"]},{"Key":"thing, a","Fragments":["true"]},{"Key":"true nitpick:","Fragments":["Instead"]},{"Key":"nitpick: Instead","Fragments":["of"]},{"Key":"Instead of","Fragments":["`ReminderIsZero`,","checking","loops","using","using","trying","using","using","trying","doing","readonly","saying","creating","skipping","using","having"]},{"Key":"of `ReminderIsZero`,","Fragments":["I"]},{"Key":"`ReminderIsZero`, I","Fragments":["would"]},{"Key":"would name","Fragments":["your","my"]},{"Key":"name your","Fragments":["function","variables","methods"]},{"Key":"function `RemainderIsZero`,","Fragments":["since"]},{"Key":"`RemainderIsZero`, since","Fragments":["\"Remainder\""]},{"Key":"since \"Remainder\"","Fragments":["is"]},{"Key":"\"Remainder\" is","Fragments":["likely"]},{"Key":"likely the","Fragments":["word"]},{"Key":"the word","Fragments":["you","is","that","variable,","is","and","'Supercalifragilisticexpialidocious',","not","(`DoubleWordScore`,","\"can't\"","and"]},{"Key":"word you","Fragments":["are"]},{"Key":"are looking","Fragments":["for","for"]},{"Key":"for here.","Fragments":[":)"]},{"Key":"Good on","Fragments":["you"]},{"Key":"on you","Fragments":["for"]},{"Key":"for figuring","Fragments":["out"]},{"Key":"out NUnit!","Fragments":["I"]},{"Key":"NUnit! I","Fragments":["hope"]},{"Key":"I hope","Fragments":["it","you","there","you","I","you","you","to","North"]},{"Key":"hope it","Fragments":["can","helps."]},{"Key":"it can","Fragments":["be","be","be","make","be","become","help","even","be","be","get","be","make","only","still","catch","also","be","be","be","combine","be"]},{"Key":"be useful","Fragments":["in","to","here","for"]},{"Key":"useful in","Fragments":["other","practical","many,","DNA()"]},{"Key":"other projects,","Fragments":["it's"]},{"Key":"projects, it's","Fragments":["a"]},{"Key":"The parentheses","Fragments":["could","at","around"]},{"Key":"parentheses could","Fragments":["be"]},{"Key":"be removed","Fragments":["and","fairly","too.","as"]},{"Key":"removed and","Fragments":["for"]},{"Key":"the sake","Fragments":["of","of","of","of","of"]},{"Key":"sake of","Fragments":["pushing","readability","managing","completeness","completeness","readability"]},{"Key":"of pushing","Fragments":["the"]},{"Key":"pushing the","Fragments":["readability,"]},{"Key":"the readability,","Fragments":["you","I","so"]},{"Key":"readability, you","Fragments":["could","could"]},{"Key":"could create","Fragments":["methods","our","a","an"]},{"Key":"create methods","Fragments":["to","like"]},{"Key":"great. I","Fragments":["got","did"]},{"Key":"got IsExclamation","Fragments":["to"]},{"Key":"IsExclamation to","Fragments":["be"]},{"Key":"line at","Fragments":["http://exercism.io/submissions/ac7be499e2be24b9acd98607"]},{"Key":"After reviewing","Fragments":["other","some"]},{"Key":"reviewing other","Fragments":["submissions,"]},{"Key":"other submissions,","Fragments":["I","so","I","turns"]},{"Key":"submissions, I","Fragments":["realized","can","learned"]},{"Key":"realized I'm","Fragments":["the"]},{"Key":"that built","Fragments":["an"]},{"Key":"built an","Fragments":["index"]},{"Key":"an index","Fragments":["instead","in","variable"]},{"Key":"index instead","Fragments":["of","of"]},{"Key":"of just","Fragments":["ordering","looping","using","doing","\"new","happened"]},{"Key":"just ordering","Fragments":["the"]},{"Key":"ordering the","Fragments":["letters."]},{"Key":"the letters.","Fragments":["Oh","You"]},{"Key":"letters. Oh","Fragments":["well!"]},{"Key":" Usually","Fragments":["I","not"]},{"Key":"Usually I","Fragments":["always"]},{"Key":"I always","Fragments":["put","had","seem","thought","try","prefer","want","use","wonder"]},{"Key":"always put","Fragments":["braces","literal","{"]},{"Key":"put braces","Fragments":["around"]},{"Key":"line statements,","Fragments":["but"]},{"Key":"but here","Fragments":["it","you","is"]},{"Key":"here it","Fragments":["lust","is","is","is,"]},{"Key":"it lust","Fragments":["looked"]},{"Key":"lust looked","Fragments":["nice!"]},{"Key":"looked nice!","Fragments":[":)"]},{"Key":"I'm writing","Fragments":["real"]},{"Key":"writing real","Fragments":["programs"]},{"Key":"real programs","Fragments":["I"]},{"Key":"programs I","Fragments":["would"]},{"Key":"never do","Fragments":["this."]},{"Key":"The IsShouting","Fragments":["method","method"]},{"Key":"IsShouting method","Fragments":["is","is"]},{"Key":"is currently","Fragments":["not","little","in"]},{"Key":"currently not","Fragments":["fully"]},{"Key":"not fully","Fragments":["generic","understand"]},{"Key":"fully generic","Fragments":["since"]},{"Key":"generic since","Fragments":["it"]},{"Key":"since it","Fragments":["checks","won't","pretty","does","validates","validates","says","is","is","seemed","could","will","makes","shouldn't","should","is","only","is"]},{"Key":"it checks","Fragments":["for","more","only"]},{"Key":"for \"Let's\",","Fragments":["which"]},{"Key":"\"Let's\", which","Fragments":["might"]},{"Key":"which might","Fragments":["be","pose","more","help"]},{"Key":"be present","Fragments":["in"]},{"Key":"present in","Fragments":["other"]},{"Key":"It's possible","Fragments":["to"]},{"Key":"only check","Fragments":["for","to","odd"]},{"Key":"for uppercase","Fragments":["letters"]},{"Key":"uppercase letters","Fragments":["and"]},{"Key":"letters and","Fragments":["an","digits","three","then","numbers)"]},{"Key":"and an","Fragments":["exclamation","empty","array"]},{"Key":"an exclamation","Fragments":["mark.","mark"]},{"Key":"the char.IsLetter","Fragments":["and"]},{"Key":"char.IsLetter and","Fragments":["char.IsDigit"]},{"Key":"and char.IsDigit","Fragments":["methods"]},{"Key":"char.IsDigit methods","Fragments":["to"]},{"Key":"out if","Fragments":["each","a","a","the","a"]},{"Key":"if each","Fragments":["character"]},{"Key":"each character","Fragments":["was","as","is","of","I","of","and","of","anyway"]},{"Key":"character was","Fragments":["a","nice."]},{"Key":"special one.","Fragments":["I"]},{"Key":"did have","Fragments":["to","me"]},{"Key":"case for","Fragments":["the","local","method","char","\"4?\"","uniqueness,","Schedule.Last","dictionary.","not","some"]},{"Key":"Looks great.","Fragments":[":)","The","I"]},{"Key":"Initially tried","Fragments":["to"]},{"Key":"to allow","Fragments":["for","it","it","unit","what","someone","digits","the","returning"]},{"Key":"allow for","Fragments":["the","extensibility/modifications","any","some"]},{"Key":"most simple","Fragments":["of","way"]},{"Key":"simple of","Fragments":["cases,"]},{"Key":"of cases,","Fragments":["4","your","my"]},{"Key":"cases, 4","Fragments":["digit"]},{"Key":"4 digit","Fragments":["years."]},{"Key":"digit years.","Fragments":["Assumed"]},{"Key":"years. Assumed","Fragments":["that"]},{"Key":"Assumed that","Fragments":["anything"]},{"Key":"that anything","Fragments":["in","implementing","that"]},{"Key":"anything in","Fragments":["BC","performance.","the","the"]},{"Key":"in BC","Fragments":["would"]},{"Key":"BC would","Fragments":["be"]},{"Key":"negative year,","Fragments":["but"]},{"Key":"year, but","Fragments":["there","I"]},{"Key":"no hard","Fragments":["and"]},{"Key":"hard and","Fragments":["fast"]},{"Key":"and fast","Fragments":["rule"]},{"Key":"fast rule","Fragments":["there"]},{"Key":"rule there","Fragments":["so"]},{"Key":"there so","Fragments":["we","you","I"]},{"Key":"so we","Fragments":["could","check","should","have","should"]},{"Key":"we could","Fragments":["equally","have","avoid","create"]},{"Key":"could equally","Fragments":["just"]},{"Key":"equally just","Fragments":["say"]},{"Key":"just say","Fragments":["that"]},{"Key":"they start","Fragments":["increment"]},{"Key":"start increment","Fragments":["back"]},{"Key":"increment back","Fragments":["up"]},{"Key":"back up","Fragments":["again"]},{"Key":"up again","Fragments":["from"]},{"Key":"again from","Fragments":["0."]},{"Key":"from 0.","Fragments":["The"]},{"Key":"0. The","Fragments":["'9999'"]},{"Key":"The '9999'","Fragments":["could"]},{"Key":"'9999' could","Fragments":["probably"]},{"Key":"removed fairly","Fragments":["easily"]},{"Key":"fairly easily","Fragments":["with"]},{"Key":"easily with","Fragments":["little"]},{"Key":"with little","Fragments":["to"]},{"Key":"little to","Fragments":["no"]},{"Key":"to no","Fragments":["impact"]},{"Key":"no impact","Fragments":["on"]},{"Key":"impact on","Fragments":["the"]},{"Key":" @erick","Fragments":["has"]},{"Key":"@erick has","Fragments":["good"]},{"Key":"has good","Fragments":["points!","performance"]},{"Key":"good points!","Fragments":["I"]},{"Key":"points! I","Fragments":["agree"]},{"Key":"with him.","Fragments":[":)"]},{"Key":"I'm kind","Fragments":["of","of"]},{"Key":"of sad","Fragments":["that"]},{"Key":"sad that","Fragments":["SortedList\u003cT\u003e"]},{"Key":"that SortedList\u003cT\u003e","Fragments":["doesn't"]},{"Key":"SortedList\u003cT\u003e doesn't","Fragments":["already"]},{"Key":"doesn't already","Fragments":["exist."]},{"Key":"the SortedList\u003cTKey,","Fragments":["TValue\u003e"]},{"Key":"SortedList\u003cTKey, TValue\u003e","Fragments":["could"]},{"Key":"TValue\u003e could","Fragments":["have"]},{"Key":"have been","Fragments":["used","updated","my","List\u003cstring\u003e,","better","bitten","easier","tests","solved","easy","met","perfect,","thinking","dismayed","dismayed","implemented","way","\")","added","a","sufficient?","the","more","sufficient,","better","shorter","condensed","more","faster","to","better","really","added","added.","the","a","so","better","updated","asked","used","a","guilty"]},{"Key":"been used","Fragments":["as","to","it"]},{"Key":"used as","Fragments":["well.","arrays","quotes.","quotes"]},{"Key":"@mack says","Fragments":["everything"]},{"Key":"says everything","Fragments":["I"]},{"Key":"everything I","Fragments":["think!","can"]},{"Key":"I think!","Fragments":[":)"]},{"Key":"personally used","Fragments":["ReadOnlyDictionary\u003cTKey,"]},{"Key":"used ReadOnlyDictionary\u003cTKey,","Fragments":["TValue\u003e"]},{"Key":"ReadOnlyDictionary\u003cTKey, TValue\u003e","Fragments":["which"]},{"Key":"TValue\u003e which","Fragments":["is"]},{"Key":"is available","Fragments":["in","here."]},{"Key":"available in","Fragments":[".NET","System.Linq."]},{"Key":"in .NET","Fragments":["4.5","4.5","that","I","in"]},{"Key":".NET 4.5","Fragments":["(http://msdn.microsoft.com/en-us/library/gg712875(v=vs.110).aspx)","IIRC."]},{"Key":"4.5 (http://msdn.microsoft.com/en-us/library/gg712875(v=vs.110).aspx)","Fragments":["for"]},{"Key":"(http://msdn.microsoft.com/en-us/library/gg712875(v=vs.110).aspx) for","Fragments":["the"]},{"Key":"the readonly","Fragments":["part."]},{"Key":"don't see","Fragments":["the","what","any","any","the","a","how","any","a","and"]},{"Key":"value of","Fragments":["adding","the","the","0","y","an","the","the","1","0","a","the","your","i","the","brevity","seconds"]},{"Key":"of adding","Fragments":["the","braces.","0","1,000,000,000","a"]},{"Key":"adding the","Fragments":["AsReadOnly","spaces","exception","condition","right"]},{"Key":"the AsReadOnly","Fragments":["extension"]},{"Key":"AsReadOnly extension","Fragments":["method."]},{"Key":"method. It's","Fragments":["a","still","readable"]},{"Key":"It's a","Fragments":["simple","very","simple","tad","different","terrible","personal","very","little","minor","matter","pretty","bad"]},{"Key":"simple constructor","Fragments":["call"]},{"Key":"constructor call","Fragments":["really."]},{"Key":"also don't","Fragments":["think","need"]},{"Key":"the Database","Fragments":["property"]},{"Key":"Database property","Fragments":["is"]},{"Key":"property is","Fragments":["necessary,"]},{"Key":"is necessary,","Fragments":["simply"]},{"Key":"necessary, simply","Fragments":["doing"]},{"Key":"simply doing","Fragments":["the"]},{"Key":"the work","Fragments":["in","without","-","of","in","in","for","in","into","in","to","in","each","in","done","in","for","twice."]},{"Key":"work in","Fragments":["the","one","those","Score().","the","Kind,","Kind,","Kind(),","Score","the","C#,","an","the","StringExtensions","c#?","the"]},{"Key":"the Roster","Fragments":["property","as","property.","property","{","property","with"]},{"Key":"Roster property","Fragments":["would","calling","and"]},{"Key":"property would","Fragments":["do"]},{"Key":"did forget","Fragments":["to"]},{"Key":"forget to","Fragments":["use"]},{"Key":"use ReadOnlyCollection","Fragments":["in"]},{"Key":"ReadOnlyCollection in","Fragments":["my"]},{"Key":"my submission","Fragments":["though!","to","on","for"]},{"Key":"The NucleotideCounts","Fragments":["seems"]},{"Key":"NucleotideCounts seems","Fragments":["a"]},{"Key":"seems a","Fragments":["bit","bit","shame","bit","bit","long","bit","bit","bit"]},{"Key":"bit long","Fragments":["considering"]},{"Key":"long considering","Fragments":["what"]},{"Key":"considering what","Fragments":["it"]},{"Key":"The ternary","Fragments":["operator","for","operator"]},{"Key":"operator could","Fragments":["be"]},{"Key":"few places","Fragments":["to"]},{"Key":"places to","Fragments":["make"]},{"Key":"code shorter","Fragments":["and","but"]},{"Key":"shorter and","Fragments":["more","clearer.","clearer","clearer","more","also"]},{"Key":"idiomatic I","Fragments":["think."]},{"Key":"The fact","Fragments":["that","that"]},{"Key":"that \"IsInvalidPhoneNumber\"","Fragments":["returns"]},{"Key":"\"IsInvalidPhoneNumber\" returns","Fragments":["true"]},{"Key":"a North","Fragments":["America"]},{"Key":"North America","Fragments":["phone"]},{"Key":"America phone","Fragments":["number"]},{"Key":"phone number","Fragments":["seems","so","and","and","but"]},{"Key":"number seems","Fragments":["a"]},{"Key":"bit off","Fragments":["to","by","and"]},{"Key":"off to","Fragments":["me.","see","be"]},{"Key":"it look","Fragments":["great.","like"]},{"Key":" Went","Fragments":["with","ahead","with","with"]},{"Key":"Went with","Fragments":["string","a","the"]},{"Key":"with string","Fragments":["constants"]},{"Key":"string constants","Fragments":["because","for"]},{"Key":"constants because","Fragments":["when","we"]},{"Key":"with strings","Fragments":["on"]},{"Key":"strings on","Fragments":["a"]},{"Key":"large scale,","Fragments":["it's"]},{"Key":"scale, it's","Fragments":["much"]},{"Key":"it's much","Fragments":["easier","faster."]},{"Key":"much easier","Fragments":["to","to","by","that","if","to"]},{"Key":"change them","Fragments":["in","in","in"]},{"Key":"one place","Fragments":["as","if","where","in","you","I"]},{"Key":"place as","Fragments":["opposed"]},{"Key":"to many","Fragments":["places.","times"]},{"Key":"many places.","Fragments":["Not"]},{"Key":"places. Not","Fragments":["really"]},{"Key":"Not really","Fragments":["necessary","a"]},{"Key":"really necessary","Fragments":["for","?"]},{"Key":"this project,","Fragments":["but"]},{"Key":"project, but","Fragments":["I","in"]},{"Key":"feel it's","Fragments":["a","more"]},{"Key":"good habit","Fragments":["to","and"]},{"Key":"habit to","Fragments":["hang","use"]},{"Key":"to hang","Fragments":["on"]},{"Key":"hang on","Fragments":["to."]},{"Key":" Instead","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"the char","Fragments":["is","at","passed","is","arrays"]},{"Key":"char is","Fragments":["between","lower"]},{"Key":"is between","Fragments":["0"]},{"Key":"between 0","Fragments":["and"]},{"Key":"0 and","Fragments":["9,","Sunday","then","that","it","triangle","negative"]},{"Key":"and 9,","Fragments":["you"]},{"Key":"9, you","Fragments":["could"]},{"Key":" Literally","Fragments":["the"]},{"Key":"Literally the","Fragments":["same"]},{"Key":"as my","Fragments":["implementation","original","solution,","main","first","first","code"]},{"Key":"my implementation","Fragments":[":-P","to","I","of"]},{"Key":"sure it's","Fragments":["better,","the","any"]},{"Key":"it's better,","Fragments":["but"]},{"Key":"but to","Fragments":["truly","me","me","be","me","me,","write","each","my","make"]},{"Key":"to truly","Fragments":["have"]},{"Key":"truly have","Fragments":["this"]},{"Key":"have this","Fragments":["function","method"]},{"Key":"function \"Do","Fragments":["One"]},{"Key":"\"Do One","Fragments":["Thing\""]},{"Key":"One Thing\"","Fragments":["you"]},{"Key":"Thing\" you","Fragments":["should"]},{"Key":"you should","Fragments":["extract","check","probably","always","start","have","have","check","probably","really","notice.","only","just","use","use","add","throw","explicitly","try","do","be","declare","not.","always","only","only","probably","avoid","tend","fix","throw","be","explicitly","consider","name","use","probably","account","write","use","do","use","only","include","be","not","do","take","try","use"]},{"Key":"should extract","Fragments":["your"]},{"Key":"extract your","Fragments":["second"]},{"Key":"your second","Fragments":["foreach","set","conditional","\"if\"","iteration"]},{"Key":"second foreach","Fragments":["(and"]},{"Key":"foreach (and","Fragments":["possibly"]},{"Key":"(and possibly","Fragments":["the"]},{"Key":"possibly the","Fragments":["actual","Leap"]},{"Key":"actual transformation","Fragments":["load)"]},{"Key":"transformation load)","Fragments":["into"]},{"Key":"load) into","Fragments":["separate"]},{"Key":"into separate","Fragments":["functions.","file.","methods","conditionals.","methods."]},{"Key":" Thanks!","Fragments":["Big","Recently,","I","I",":-)","I'll","The"]},{"Key":"Thanks! Big","Fragments":["help"]},{"Key":"Big help","Fragments":["guys!"]},{"Key":" Quite","Fragments":["an","late","messy","readable","straighforward","an"]},{"Key":"Quite an","Fragments":["interesting","interesting"]},{"Key":"an interesting","Fragments":["solution,","way","read","challenge","approach","little"]},{"Key":"interesting solution,","Fragments":["+1"]},{"Key":"solution, +1","Fragments":["for"]},{"Key":"for thinking","Fragments":["out"]},{"Key":"thinking out","Fragments":["of"]},{"Key":"a subtle","Fragments":["bug"]},{"Key":"subtle bug","Fragments":["in"]},{"Key":"bug in","Fragments":["this","crypto-square"]},{"Key":"this code.","Fragments":["Starting","Great","I","Having","You"]},{"Key":"code. Starting","Fragments":["with"]},{"Key":"Starting with","Fragments":["an"]},{"Key":"with an","Fragments":["example,","underscore","if","IsLeap","`IComparer\u003cchar\u003e`,","CurrentCultureIgnore","immediate","anonymous","existing","array","array","Equals","optional","underscore","`IEnumerable`?"]},{"Key":"an example,","Fragments":["in","the"]},{"Key":"example, in","Fragments":["case","mine"]},{"Key":"in case","Fragments":["of","you","you","code","someone","it","the","you"]},{"Key":"case of","Fragments":["a","your","simple","the","how","silence","Not","'the","methods,","null","the"]},{"Key":"year, FirstOrDefault","Fragments":["invocation"]},{"Key":"FirstOrDefault invocation","Fragments":["in"]},{"Key":"invocation in","Fragments":["you"]},{"Key":"in you","Fragments":["code"]},{"Key":"you code","Fragments":["is","bigger","just","in,","run"]},{"Key":"is selecting","Fragments":["first"]},{"Key":"selecting first","Fragments":["element"]},{"Key":"first element","Fragments":["from"]},{"Key":"element from","Fragments":["a"]},{"Key":"a set","Fragments":["which","of","is"]},{"Key":"set which","Fragments":["contains"]},{"Key":"which contains","Fragments":["two"]},{"Key":"contains two","Fragments":["values"]},{"Key":"two values","Fragments":["true","but"]},{"Key":"values true","Fragments":["(coming"]},{"Key":"true (coming","Fragments":["from"]},{"Key":"(coming from","Fragments":["`x"]},{"Key":"from `x","Fragments":["=\u003e"]},{"Key":"`x =\u003e","Fragments":["x","x`."]},{"Key":"=\u003e x","Fragments":["%","!="]},{"Key":"x %","Fragments":["4,","y"]},{"Key":"% 4,","Fragments":["true`)","is"]},{"Key":"4, true`)","Fragments":["and"]},{"Key":"true`) and","Fragments":["false"]},{"Key":"and false","Fragments":["(`x","if"]},{"Key":"false (`x","Fragments":["=\u003e","=\u003e"]},{"Key":"(`x =\u003e","Fragments":["true,","true,"]},{"Key":"=\u003e true,","Fragments":["false`).","false`)"]},{"Key":"true, false`).","Fragments":["When"]},{"Key":"false`). When","Fragments":["enumerating"]},{"Key":"When enumerating","Fragments":["a"]},{"Key":"enumerating a","Fragments":["dictionary,","dictionary","dictionary"]},{"Key":"a dictionary,","Fragments":["the","but"]},{"Key":"dictionary, the","Fragments":["order","type"]},{"Key":"of elements","Fragments":["is"]},{"Key":"elements is","Fragments":["undefined,"]},{"Key":"is undefined,","Fragments":["so","however,"]},{"Key":"undefined, so","Fragments":["your"]},{"Key":"so your","Fragments":["code","code","robots","code","`int.Parse(c.ToString(CultureInfo.InvariantCulture))`"]},{"Key":"code may","Fragments":["choose"]},{"Key":"may choose","Fragments":["false"]},{"Key":"choose false","Fragments":["(`x"]},{"Key":"true, false`)","Fragments":["-"]},{"Key":"false`) -","Fragments":["the"]},{"Key":"the wrong","Fragments":["result,","place","executable","value","value","place.","answer","type."]},{"Key":"wrong result,","Fragments":["if"]},{"Key":"result, if","Fragments":["something"]},{"Key":"something changes","Fragments":["in"]},{"Key":"changes in","Fragments":["the","the"]},{"Key":"way .NET","Fragments":["internally"]},{"Key":".NET internally","Fragments":["handles"]},{"Key":"internally handles","Fragments":["enumerating"]},{"Key":"handles enumerating","Fragments":["dictionaries"]},{"Key":"a discussion","Fragments":["on"]},{"Key":"discussion on","Fragments":["this"]},{"Key":"on this","Fragments":["topic","site?","requirement,","one.","site","practice,","site","one?","one","and","machine)","assignment.","is.","one.","one,","(having","site","one.","on","site","version"]},{"Key":"this topic","Fragments":["on"]},{"Key":"topic on","Fragments":["[StackOverflow](http://stackoverflow.com/questions/4007782/the-order-of-elements-in-dictionary)"]},{"Key":" Fixing","Fragments":["this"]},{"Key":"Fixing this","Fragments":["problem"]},{"Key":"is easy,","Fragments":["just","I"]},{"Key":"easy, just","Fragments":["change"]},{"Key":"just change","Fragments":["Dictionary"]},{"Key":"change Dictionary","Fragments":["to"]},{"Key":"Dictionary to","Fragments":["a","figure","keep","List"]},{"Key":"a collection","Fragments":["of","of","initializer","fort","using"]},{"Key":"collection of","Fragments":["KeyValuePair\u003c...","chars.","schedulers"]},{"Key":"of KeyValuePair\u003c...","Fragments":["List,"]},{"Key":"KeyValuePair\u003c... List,","Fragments":["on"]},{"Key":"List, on","Fragments":["an"]},{"Key":"an array.","Fragments":["It","If","By"]},{"Key":"array. It","Fragments":["will"]},{"Key":"It will","Fragments":["have","add","throw","probably","only","cleanup"]},{"Key":"better performance","Fragments":["too."]},{"Key":" +1","Fragments":["for","to"]},{"Key":"for using","Fragments":["string","`private","the","braces","it","the","magic"]},{"Key":"using string","Fragments":["constants!"]},{"Key":" Calling","Fragments":["the"]},{"Key":"Calling the","Fragments":["incoming"]},{"Key":"the incoming","Fragments":["message","variable","string","strings"]},{"Key":"incoming message","Fragments":["`msg`"]},{"Key":"message `msg`","Fragments":["feels"]},{"Key":"`msg` feels","Fragments":["like"]},{"Key":"feels like","Fragments":["unnecessary","it","I","a","a","a","cheating,","the","you've"]},{"Key":"like unnecessary","Fragments":["saving","code"]},{"Key":"unnecessary saving","Fragments":["of"]},{"Key":"saving of","Fragments":["characters.","space"]},{"Key":" `isAllCaps","Fragments":["\u0026\u0026"]},{"Key":"`isAllCaps \u0026\u0026","Fragments":["lastChar"]},{"Key":"\u0026\u0026 lastChar","Fragments":["=="]},{"Key":"lastChar ==","Fragments":["\"!\""]},{"Key":"== \"!\"","Fragments":["||"]},{"Key":"\"!\" ||","Fragments":["isAllCaps`"]},{"Key":"|| isAllCaps`","Fragments":["can"]},{"Key":"isAllCaps` can","Fragments":["be"]},{"Key":"simplified down","Fragments":["to"]},{"Key":"to `isAllCaps`","Fragments":["and"]},{"Key":"`isAllCaps` and","Fragments":["the"]},{"Key":"tests still","Fragments":["pass."]},{"Key":"Yeah, still","Fragments":["figuring"]},{"Key":"still figuring","Fragments":["out"]},{"Key":" But","Fragments":["as","that's","was:","I'll","an","maybe","again,","again,","can","it","I","it","external","if","if","it's","I","in","here","more","I"]},{"Key":"But as","Fragments":["you"]},{"Key":"my 2nd","Fragments":["submission"]},{"Key":"2nd submission","Fragments":["I'm"]},{"Key":"submission I'm","Fragments":["starting"]},{"Key":"I'm starting","Fragments":["to","to"]},{"Key":"starting to","Fragments":["understand","knowing","move","understand","look"]},{"Key":"understand it!","Fragments":[";)"]},{"Key":"of readability","Fragments":["it","as","first","and","at"]},{"Key":"readability it","Fragments":["would","had"]},{"Key":"be worth","Fragments":["adding","trying","it","it","checking","it","doing","another"]},{"Key":"worth adding","Fragments":["explanatory"]},{"Key":"adding explanatory","Fragments":["variables."]},{"Key":"having your","Fragments":["functions"]},{"Key":"your functions","Fragments":["\"Do"]},{"Key":"functions \"Do","Fragments":["one"]},{"Key":"\"Do one","Fragments":["thing\","]},{"Key":"one thing\",","Fragments":["it"]},{"Key":"thing\", it","Fragments":["may"]},{"Key":"it may","Fragments":["be","help","be","be","in","have","not"]},{"Key":"to extract","Fragments":["the","methods","each"]},{"Key":"extract the","Fragments":["inner","methods"]},{"Key":"the inner","Fragments":["foreach","if","foreach,","loop","loop","loop","loop.","loop","loop.","loop","loop?","loop,","loop.","loop","loop","loop?","loop?","nest","parentheses"]},{"Key":"inner foreach","Fragments":["statement"]},{"Key":"foreach statement","Fragments":["into","then","can"]},{"Key":"statement into","Fragments":["another"]},{"Key":" good","Fragments":["use","points","job!","way!"]},{"Key":"good use","Fragments":["of","of"]},{"Key":"of consolidating","Fragments":["those","my"]},{"Key":"consolidating those","Fragments":["functions"]},{"Key":"Good to","Fragments":["check"]},{"Key":"is above","Fragments":["0,"]},{"Key":"above 0,","Fragments":["but"]},{"Key":"0, but","Fragments":["it's","if","if"]},{"Key":"it's very","Fragments":["long","easy","clear","similar)","compact!"]},{"Key":"very long","Fragments":["code...","whihc","for","time","and"]},{"Key":"you try","Fragments":["to","to","using"]},{"Key":"it shorter?","Fragments":[":)"]},{"Key":"same it","Fragments":["actually"]},{"Key":"actually warned","Fragments":["me"]},{"Key":"warned me","Fragments":["not"]},{"Key":"me not","Fragments":["to"]},{"Key":"tests :)","Fragments":["Not"]},{"Key":":) Not","Fragments":["sure"]},{"Key":"you overcame","Fragments":["that"]},{"Key":"overcame that","Fragments":["check!"]},{"Key":"that check!","Fragments":[":D"]},{"Key":" All","Fragments":["good","I'm","and","this","you","the","the"]},{"Key":"All good","Fragments":["in","points."]},{"Key":"good in","Fragments":["the","general"]},{"Key":"end though","Fragments":[":)"]},{"Key":" SaidNothing","Fragments":["checks"]},{"Key":"SaidNothing checks","Fragments":["for"]},{"Key":"an Ascii","Fragments":["value"]},{"Key":"Ascii value","Fragments":["higher"]},{"Key":"value higher","Fragments":["than"]},{"Key":"space as","Fragments":["a"]},{"Key":"a character","Fragments":["of",";).","array,","array,","-","array.","array.","array","list","list.","that","or","by","(though"]},{"Key":"character of","Fragments":["substance.","the","a","the","the","both","a"]},{"Key":"of substance.","Fragments":["If"]},{"Key":"substance. If","Fragments":["it"]},{"Key":"it finds","Fragments":["one","instead","it)","the"]},{"Key":"finds one","Fragments":["of"]},{"Key":"these characters","Fragments":["in"]},{"Key":"characters in","Fragments":["the","the","each","the","the","the","the","the","each","the"]},{"Key":"string it","Fragments":["returns"]},{"Key":"returns false,","Fragments":["else","it"]},{"Key":"false, else","Fragments":["true."]},{"Key":" IsYelling","Fragments":["checks","-"]},{"Key":"IsYelling checks","Fragments":["the"]},{"Key":"checks the","Fragments":["number","/4","year."]},{"Key":"number uppercase","Fragments":["(and"]},{"Key":"uppercase (and","Fragments":["exclamation"]},{"Key":"(and exclamation","Fragments":["marks)"]},{"Key":"exclamation marks)","Fragments":["versus"]},{"Key":"marks) versus","Fragments":["lowercase"]},{"Key":"versus lowercase","Fragments":["characters."]},{"Key":"lowercase characters.","Fragments":["If"]},{"Key":"characters. If","Fragments":["there","it"]},{"Key":"more uppercase","Fragments":["it"]},{"Key":"uppercase it","Fragments":["returns"]},{"Key":"returns true,","Fragments":["else","else"]},{"Key":" IsQuestions","Fragments":["checks"]},{"Key":"IsQuestions checks","Fragments":["if"]},{"Key":"checks if","Fragments":["the","there's","all","there"]},{"Key":"string ends","Fragments":["in","with"]},{"Key":"ends in","Fragments":["a","question"]},{"Key":"a question","Fragments":["mark.","(ie:","about","string:","mark","mark\"","mark:","or","of","mark","mark","mark"]},{"Key":"question mark.","Fragments":["If"]},{"Key":"mark. If","Fragments":["so"]},{"Key":"If so","Fragments":["it"]},{"Key":" Nicely","Fragments":["done,","done!"]},{"Key":"Nicely done,","Fragments":["so"]},{"Key":"done, so","Fragments":["short!"]},{"Key":" @karlie","Fragments":[","]},{"Key":"@karlie ,","Fragments":["sorry"]},{"Key":", sorry","Fragments":["mate"]},{"Key":" Made","Fragments":["me","into","a"]},{"Key":"Made me","Fragments":["smile"]},{"Key":"me smile","Fragments":["to"]},{"Key":"smile to","Fragments":["see"]},{"Key":"see some","Fragments":["comments","shorter"]},{"Key":"some comments","Fragments":["in","in","to"]},{"Key":"code :)","Fragments":["well"]},{"Key":":) well","Fragments":["done"]},{"Key":" Uploaded","Fragments":["a"]},{"Key":"Uploaded a","Fragments":["second"]},{"Key":"second revision","Fragments":["which"]},{"Key":"revision which","Fragments":["cuts"]},{"Key":"which cuts","Fragments":["out"]},{"Key":"cuts out","Fragments":["all"]},{"Key":"out all","Fragments":["the","the","of","the"]},{"Key":"the Console","Fragments":["crap,","in","part"]},{"Key":"Console crap,","Fragments":["since"]},{"Key":"crap, since","Fragments":["we"]},{"Key":"since we","Fragments":["won't","invented","can't"]},{"Key":"we won't","Fragments":["be"]},{"Key":"be seeing","Fragments":["that"]},{"Key":"seeing that","Fragments":["in","some","happen."]},{"Key":"in these","Fragments":["tests","exercises."]},{"Key":"these tests","Fragments":["and","for","for","as","fixed."]},{"Key":"and condenses","Fragments":["all"]},{"Key":"condenses all","Fragments":["the"]},{"Key":"logic down","Fragments":["into"]},{"Key":"down into","Fragments":["a","different"]},{"Key":"statement, not","Fragments":["sure"]},{"Key":"be shrunk","Fragments":["any"]},{"Key":"shrunk any","Fragments":["further,"]},{"Key":"any further,","Fragments":["unless"]},{"Key":"further, unless","Fragments":["there"]},{"Key":"unless there","Fragments":["is"]},{"Key":"a shorthand","Fragments":["notation"]},{"Key":"shorthand notation","Fragments":["form"]},{"Key":"notation form","Fragments":["for"]},{"Key":"form for","Fragments":["the"]},{"Key":"done on","Fragments":["a"]},{"Key":"line or","Fragments":["two?","a","a"]},{"Key":" @granville","Fragments":["very"]},{"Key":"@granville very","Fragments":["good"]},{"Key":"good points","Fragments":["regarding","to","to"]},{"Key":"points regarding","Fragments":["the"]},{"Key":"regarding the","Fragments":["consistency"]},{"Key":"the consistency","Fragments":["of"]},{"Key":"consistency of","Fragments":["my"]},{"Key":"code, I","Fragments":["will","feel","timed"]},{"Key":"will create","Fragments":["a","a","a","a"]},{"Key":"create a","Fragments":["new","class","base","origStringLower","Year","complicated","full","placeholder","class","function.","correct","new.","version","new","new","separate","full-scale","return","name,","new","new","new","new","custom","dictionary","counter","Dictionary\u003cchar,","screen","completely","new","list","string","Class","new","```char[]```","variable","new","temporary","temporary","new","new","new","dictionary","public","property"]},{"Key":"new iteration","Fragments":["trying","work?","based","with","fixing","in"]},{"Key":"iteration trying","Fragments":["to"]},{"Key":"more coherent,","Fragments":["thanks"]},{"Key":"coherent, thanks","Fragments":["!"]},{"Key":"can simplify","Fragments":["to","line","by","your","the","it","the","the","your","your","Reset()...(I"]},{"Key":"simplify to","Fragments":["`if"]},{"Key":"to `if","Fragments":["(s.Any(char.IsLetter)"]},{"Key":"`if (s.Any(char.IsLetter)","Fragments":["\u0026\u0026....`"]},{"Key":"(s.Any(char.IsLetter) \u0026\u0026....`","Fragments":["on"]},{"Key":"\u0026\u0026....` on","Fragments":["line"]},{"Key":"and do","Fragments":["`return","you","it","any","pass","you","that,","the","all","all","away","the","the","the","very","this","that","it"]},{"Key":"do `return","Fragments":["s.Last()"]},{"Key":"`return s.Last()","Fragments":["=="]},{"Key":"s.Last() ==","Fragments":["'?'"]},{"Key":"== '?'","Fragments":["?"]},{"Key":"'?' ?","Fragments":["\"Sure.\""]},{"Key":": \"Whatever.\";`","Fragments":["for"]},{"Key":"\"Whatever.\";` for","Fragments":["the"]},{"Key":" maybe","Fragments":["use"]},{"Key":"maybe use","Fragments":["`s.EndsWith(\"?\")`"]},{"Key":"use `s.EndsWith(\"?\")`","Fragments":["rather","on"]},{"Key":"`s.EndsWith(\"?\")` rather","Fragments":["than"]},{"Key":"than last?","Fragments":["makes"]},{"Key":"last? makes","Fragments":["little"]},{"Key":"makes little","Fragments":["difference!","sense.","difference..."]},{"Key":"name my","Fragments":["variable","variables"]},{"Key":"my variable","Fragments":["something"]},{"Key":"variable something","Fragments":["a"]},{"Key":"something a","Fragments":["bit","bit"]},{"Key":"expressive, the","Fragments":["tooltip"]},{"Key":"the tooltip","Fragments":["for"]},{"Key":"tooltip for","Fragments":["Hey"]},{"Key":"for Hey","Fragments":["is"]},{"Key":"Hey is","Fragments":["not"]},{"Key":"too great","Fragments":["with"]},{"Key":"great with","Fragments":["just"]},{"Key":"with just","Fragments":["`s`","6.","using","\u0026\u0026","one","string","1","that","punctuation"]},{"Key":"just `s`","Fragments":["as"]},{"Key":"`s` as","Fragments":["a","a"]},{"Key":" s[s.Length","Fragments":["-"]},{"Key":"s[s.Length -","Fragments":["1]"]},{"Key":" Have","Fragments":["you","a","you","a"]},{"Key":"Have you","Fragments":["thought","considered","given"]},{"Key":"you thought","Fragments":["about","about","about"]},{"Key":"thought about","Fragments":["```s.Last()```?","using","this","how","control","clever","returning","using","going","having","the","it).","doing","making","that","the","GroupBy?","converting","that","it","having"]},{"Key":" String","Fragments":["constants","manipulation","already"]},{"Key":"String constants","Fragments":["are"]},{"Key":"constants are","Fragments":["definitely","defined"]},{"Key":"are definitely","Fragments":["a"]},{"Key":"definitely a","Fragments":["good","good","rule","trade-off.","style"]},{"Key":"`s.EndsWith(\"?\")` on","Fragments":["line"]},{"Key":"line 24","Fragments":["which"]},{"Key":"24 which","Fragments":["is"]},{"Key":"is clearerer","Fragments":["(to"]},{"Key":"clearerer (to","Fragments":["me!)"]},{"Key":"would end","Fragments":["with","up"]},{"Key":"end with","Fragments":["a","the","a","a","a","the"]},{"Key":"a Ternary","Fragments":["operator","operator"]},{"Key":"operator just","Fragments":["because"]},{"Key":"just because","Fragments":["why","it","it","you","different","I","I"]},{"Key":"because why","Fragments":["not?"]},{"Key":" so","Fragments":["Line","differences"]},{"Key":"so Line","Fragments":["24"]},{"Key":"24 becomes","Fragments":["`return"]},{"Key":"becomes `return","Fragments":["s.EndsWith(\"?\")"]},{"Key":"`return s.EndsWith(\"?\")","Fragments":["?"]},{"Key":"s.EndsWith(\"?\") ?","Fragments":["Sure"]},{"Key":"? Sure","Fragments":[":"]},{"Key":"Sure :","Fragments":["Whatever;`"]},{"Key":"Using `s`","Fragments":["as"]},{"Key":"variable name","Fragments":["is",":)","than","isn't","isn't","--","`equal`","for","than","but"]},{"Key":"name is","Fragments":["a","not","assigned","helpful.","what","generated,"]},{"Key":"a shame...","Fragments":["`message`"]},{"Key":"shame... `message`","Fragments":["or"]},{"Key":"`message` or","Fragments":["`inputText`","`question`"]},{"Key":"or `inputText`","Fragments":["surely"]},{"Key":"`inputText` surely","Fragments":["is"]},{"Key":"surely is","Fragments":["clearer."]},{"Key":"the input!","Fragments":["I"]},{"Key":"input! I","Fragments":["struggled"]},{"Key":"struggled to","Fragments":["see,"]},{"Key":"to see,","Fragments":["from","possibly,","and"]},{"Key":"see, from","Fragments":["the"]},{"Key":"readme and","Fragments":["the","sketching"]},{"Key":"tests exactly","Fragments":["what","right,"]},{"Key":"exactly what","Fragments":["the","I","type","I","happened,","a"]},{"Key":"the deal","Fragments":["was"]},{"Key":"deal was","Fragments":["with"]},{"Key":"was with","Fragments":["\"Let's\".","simply"]},{"Key":"with \"Let's\".","Fragments":["I"]},{"Key":"\"Let's\". I","Fragments":["could"]},{"Key":"could see","Fragments":["from","how","the","why","why"]},{"Key":"see from","Fragments":["the","the"]},{"Key":"test what","Fragments":["the"]},{"Key":"the expectation","Fragments":["was,"]},{"Key":"expectation was,","Fragments":["but"]},{"Key":"was, but","Fragments":["I"]},{"Key":"didn't (and","Fragments":["still"]},{"Key":"(and still","Fragments":["don"]},{"Key":"still don","Fragments":["'t)"]},{"Key":"don 't)","Fragments":["understand"]},{"Key":"'t) understand","Fragments":["the"]},{"Key":"like to","Fragments":["put","try","use","use","err","give","hear","do:","have","use","avoid","congratulate","note","hear","hear","hear","hear","over","see","challenge","remove","create","start","have","say","express","use","use","challenge","challenge","challenge","see","account","avoid","get","see","look","learn","write","believe","create","put","create"]},{"Key":"space between","Fragments":["ALL"]},{"Key":"between ALL","Fragments":["operators,"]},{"Key":"ALL operators,","Fragments":["like"]},{"Key":"operators, like","Fragments":["the"]},{"Key":"modulus operators","Fragments":["here."]},{"Key":"But that's","Fragments":["personal."]},{"Key":" at","Fragments":["first","first"]},{"Key":"had `","Fragments":["text.ToUpper().Equals(text)`"]},{"Key":"` text.ToUpper().Equals(text)`","Fragments":["but"]},{"Key":"text.ToUpper().Equals(text)` but","Fragments":["on"]},{"Key":"but on","Fragments":["second","second","the","the","a","a","the"]},{"Key":"on second","Fragments":["look","thought,"]},{"Key":"second look","Fragments":["I"]},{"Key":"look I","Fragments":["changed"]},{"Key":"changed it","Fragments":["around","to","to","to","wouldn't"]},{"Key":"it around","Fragments":["because"]},{"Key":"around because","Fragments":["it"]},{"Key":"it seemed","Fragments":["more","to","like","like","to","more","like","like","like"]},{"Key":"seemed more","Fragments":["readable","elegant","straightforward"]},{"Key":"to remember,","Fragments":["would"]},{"Key":"remember, would","Fragments":["you"]},{"Key":"that writing","Fragments":["bit"]},{"Key":"writing bit","Fragments":["of"]},{"Key":"of exta","Fragments":["code"]},{"Key":"exta code","Fragments":["\"just"]},{"Key":"code \"just","Fragments":["in"]},{"Key":"\"just in","Fragments":["case\""]},{"Key":"in case\"","Fragments":["is"]},{"Key":"case\" is","Fragments":["bad"]},{"Key":"is bad","Fragments":["in","practice.","practice.","to","for"]},{"Key":"bad in","Fragments":["general?"]},{"Key":"was considering","Fragments":["separating","named","extension"]},{"Key":"considering separating","Fragments":["the"]},{"Key":"separating the","Fragments":["logic"]},{"Key":"logic more(some","Fragments":["string"]},{"Key":"more(some string","Fragments":["answer"]},{"Key":"string answer","Fragments":["method)","="]},{"Key":"answer method)","Fragments":["but"]},{"Key":"method) but","Fragments":["frankly"]},{"Key":"but frankly","Fragments":["in"]},{"Key":"frankly in","Fragments":["this"]},{"Key":"case it","Fragments":["seemed","would","wasn't","is","was","would"]},{"Key":"be already","Fragments":["simple"]},{"Key":"already simple","Fragments":["enough"]},{"Key":"enough and","Fragments":["I"]},{"Key":"of solution","Fragments":["that","works"]},{"Key":"that wouldn't","Fragments":["use"]},{"Key":"wouldn't use","Fragments":["the","a"]},{"Key":"the `if`s","Fragments":["somewhere"]},{"Key":"`if`s somewhere","Fragments":["anyway."]},{"Key":" Some","Fragments":["explanatory","discussion","observations:","fair","comments"]},{"Key":"Some explanatory","Fragments":["variables"]},{"Key":"explanatory variables","Fragments":["would","just"]},{"Key":"variables would","Fragments":["make","help","be"]},{"Key":"this more","Fragments":["readable.","object-oriented","verbose","compact?","readable","what","intelligible?"]},{"Key":"more readable.","Fragments":["Would","Thanks","But","Although","Also,","It","It","I","I","It","This","Other"]},{"Key":"readable. Would","Fragments":["there"]},{"Key":"Would there","Fragments":["be"]},{"Key":"there be","Fragments":["any"]},{"Key":"be any","Fragments":["changes","more","different?","more"]},{"Key":"any changes","Fragments":["to"]},{"Key":"the Match(...)","Fragments":["method"]},{"Key":"Match(...) method","Fragments":["that"]},{"Key":"that could","Fragments":["be","easily","be","probably","be","benefit","cause","matter","satisfy","be","be","be","make","apply"]},{"Key":"made in","Fragments":["the","extendible","one","two"]},{"Key":"having it","Fragments":["\"do","as","but","bail"]},{"Key":"it \"do","Fragments":["one"]},{"Key":"\"do one","Fragments":["thing\"?"]},{"Key":" @penelope","Fragments":["if"]},{"Key":"@penelope if","Fragments":["you"]},{"Key":"at Git","Fragments":["you"]},{"Key":"Git you","Fragments":["will"]},{"Key":"tests have","Fragments":["been","passed.","to","changed,","been"]},{"Key":"been updated","Fragments":["and","on"]},{"Key":"updated and","Fragments":["altered"]},{"Key":"and altered","Fragments":["the"]},{"Key":"altered the","Fragments":["spelling","test"]},{"Key":" Expected:","Fragments":["\"Whoa,"]},{"Key":"Expected: \"Whoa,","Fragments":["chill"]},{"Key":"But was:","Fragments":["\"Woah,"]},{"Key":"was: \"Woah,","Fragments":["chill"]},{"Key":" Doesn't","Fragments":["match","pass","this","solve"]},{"Key":"Doesn't match","Fragments":["the"]},{"Key":"following statements","Fragments":["in"]},{"Key":"statements in","Fragments":["terms","a","the","a","there.","the","the","a","one","a","Day"]},{"Key":"am envious","Fragments":["of","of"]},{"Key":"envious of","Fragments":["your","your"]},{"Key":"your fluency","Fragments":["with"]},{"Key":"fluency with","Fragments":["predicates..."]},{"Key":"with predicates...","Fragments":["but"]},{"Key":"predicates... but","Fragments":["I"]},{"Key":"the \"does","Fragments":["two","two"]},{"Key":"\"does two","Fragments":["things\"","things\""]},{"Key":"two things\"","Fragments":["nature","nature"]},{"Key":"things\" nature","Fragments":["of","is"]},{"Key":"nature of","Fragments":["the","the","being","this,","the"]},{"Key":"Could be","Fragments":["I","rubbish!","replaced"]},{"Key":"be I","Fragments":["am"]},{"Key":"am just","Fragments":["scaredy"]},{"Key":"just scaredy","Fragments":["cat"]},{"Key":"scaredy cat","Fragments":["of"]},{"Key":"cat of","Fragments":["slightly"]},{"Key":"of slightly","Fragments":["complex"]},{"Key":"slightly complex","Fragments":["code!"]},{"Key":"complex code!","Fragments":["I"]},{"Key":"code! I","Fragments":["am"]},{"Key":"not even","Fragments":["commenting","shorter","bothering","use"]},{"Key":"even commenting","Fragments":["on"]},{"Key":"commenting on","Fragments":["the"]},{"Key":"the solutions","Fragments":["to"]},{"Key":"solutions to","Fragments":["this","see","yours","see"]},{"Key":"this task","Fragments":["that","it"]},{"Key":"task that","Fragments":["use"]},{"Key":"that use","Fragments":["regex","the"]},{"Key":"use regex","Fragments":[":)","just","expressions"]},{"Key":"I take","Fragments":["it","this"]},{"Key":"come from","Fragments":["a","the","the","outside","Python"]},{"Key":"a strong","Fragments":["c/c++","\u003cb\u003eLinq\u003c/b\u003e"]},{"Key":"strong c/c++","Fragments":["background."]},{"Key":"of loops","Fragments":["you","and"]},{"Key":"loops you","Fragments":["should","shouldn't"]},{"Key":"should check","Fragments":["out","for","out","the","inputs"]},{"Key":"check out","Fragments":["the","LINQ,","some","the","the","Linq.","the","my","Linq's","http://msdn.microsoft.com/en-us/library/bfcke1bz%28v=vs.110%29.aspx"]},{"Key":"String functions","Fragments":["of"]},{"Key":"functions of","Fragments":[".NET"]},{"Key":"That particular","Fragments":["test"]},{"Key":"particular test","Fragments":["was"]},{"Key":"test was","Fragments":["to","a","probably"]},{"Key":"that an","Fragments":["exclamation","exception","empty","issue"]},{"Key":"exclamation mark","Fragments":["at"]},{"Key":"mark at","Fragments":["the","the","the"]},{"Key":"a sentence","Fragments":["was","where"]},{"Key":"sentence was","Fragments":["not"]},{"Key":"not enough","Fragments":["to","of"]},{"Key":"be considered","Fragments":["shouting","a","a","as","about"]},{"Key":"considered shouting","Fragments":["and"]},{"Key":"shouting and","Fragments":["should","a"]},{"Key":"return \"Whatever.\"","Fragments":["instead"]},{"Key":"\"Whatever.\" instead","Fragments":["of"]},{"Key":"of \"Woah,","Fragments":["chill"]},{"Key":"a point.","Fragments":["The","I"]},{"Key":"point. The","Fragments":["class"]},{"Key":"The class","Fragments":["should"]},{"Key":"class should","Fragments":["probably","do."]},{"Key":"I'm sad","Fragments":["```SortedList```"]},{"Key":"sad ```SortedList```","Fragments":["list"]},{"Key":"```SortedList``` list","Fragments":["doesn't"]},{"Key":"list doesn't","Fragments":["exist"]},{"Key":"doesn't exist","Fragments":["either.","in","you"]},{"Key":"take another","Fragments":["stab","go","look"]},{"Key":"another stab","Fragments":["at"]},{"Key":"at this","Fragments":["one.","point","as","point.","in","level.","implementation","too","three","code","stage","again.","stage"]},{"Key":"one. I'm","Fragments":["not"]},{"Key":"not digging","Fragments":["this"]},{"Key":"digging this","Fragments":["implementation"]},{"Key":"this implementation","Fragments":["and","2","is","it"]},{"Key":"implementation and","Fragments":["I","to"]},{"Key":"I want","Fragments":["to","to","the","code","to","to","to"]},{"Key":"try the","Fragments":["extra","modulus","extra","function"]},{"Key":"extra credit.","Fragments":["Thanks","I"]},{"Key":"credit. Thanks","Fragments":["for"]},{"Key":"Went ahead","Fragments":["with"]},{"Key":"ahead with","Fragments":["renaming"]},{"Key":"with renaming","Fragments":["the"]},{"Key":"incoming variable","Fragments":["to"]},{"Key":"variable to","Fragments":["something","assing","`year`","making","store","hold","store","temporarily","a","each"]},{"Key":"something better","Fragments":["and"]},{"Key":"and replaced","Fragments":["my","by","with"]},{"Key":"replaced my","Fragments":["old-school"]},{"Key":"my old-school","Fragments":["C-style"]},{"Key":"old-school C-style","Fragments":["character"]},{"Key":"C-style character","Fragments":["array"]},{"Key":"character array","Fragments":["check","is"]},{"Key":"array check","Fragments":["at"]},{"Key":"check at","Fragments":["the","the"]},{"Key":"the proper","Fragments":["shiny","response","range"]},{"Key":"proper shiny","Fragments":["method."]},{"Key":"could end","Fragments":["with","up"]},{"Key":"a ternary,","Fragments":["but"]},{"Key":"ternary, but","Fragments":["I"]},{"Key":"it for","Fragments":["readability","clarity","me","every","you","the","int","3","this","this","this","myself).","null","all","this"]},{"Key":"for readability","Fragments":["purposes.","by","and","but","i"]},{"Key":" Really","Fragments":["nice!","cool","picky","not"]},{"Key":"Line 12","Fragments":["can"]},{"Key":"12 can","Fragments":["be"]},{"Key":"replaced simply","Fragments":["with"]},{"Key":"simply with","Fragments":["`if"]},{"Key":"with `if","Fragments":["(phrase.EndsWith(\"?\"))`","(couldBeAMatch)`"]},{"Key":"of line","Fragments":["8.","13","7.","10"]},{"Key":"line 8.","Fragments":["It"]},{"Key":"8. It","Fragments":["looks"]},{"Key":"looks clever","Fragments":["but"]},{"Key":"clever but","Fragments":["I"]},{"Key":"I cannot","Fragments":["quite","think","immediately","find"]},{"Key":"cannot quite","Fragments":["see"]},{"Key":"quite see","Fragments":["the"]},{"Key":"the implication","Fragments":["of"]},{"Key":"implication of","Fragments":["not"]},{"Key":"of not","Fragments":["matching","using"]},{"Key":"not matching","Fragments":["the"]},{"Key":"matching the","Fragments":[".ToLower().","words,","order","required"]},{"Key":" all","Fragments":["the"]},{"Key":"the `else`'s","Fragments":["are"]},{"Key":"`else`'s are","Fragments":["redundant","redundant"]},{"Key":"if removed","Fragments":["you"]},{"Key":"removed you","Fragments":["can"]},{"Key":"can end","Fragments":["with","up"]},{"Key":"`return phrase.Trim()","Fragments":["=="]},{"Key":"phrase.Trim() ==","Fragments":["\"\""]},{"Key":"== \"\"","Fragments":["?"]},{"Key":"\"\" ?","Fragments":["\"Fine."]},{"Key":"could replace","Fragments":["`Trim`","Roman_Numeral_Info","```Func\u003cT,","your"]},{"Key":"replace `Trim`","Fragments":["with"]},{"Key":"`Trim` with","Fragments":["`string.IsNullOrWhiteSpace(phrase)`."]},{"Key":"think your","Fragments":["algorithm","algorithm","first","code","second","suggestion"]},{"Key":"your algorithm","Fragments":["here","is","clearer.","looks","continues","will","and","would","is"]},{"Key":"algorithm here","Fragments":["is"]},{"Key":"is great.","Fragments":["Here"]},{"Key":"great. Here","Fragments":["are"]},{"Key":"some some","Fragments":["thoughts"]},{"Key":"some thoughts","Fragments":["to"]},{"Key":"thoughts to","Fragments":["help"]},{"Key":"help polish","Fragments":["it"]},{"Key":"polish it","Fragments":["up"]},{"Key":"up a","Fragments":["bit.","way","bit","bit.","bit","little","bit","lot","value","bit","red","Gum","bit.","method","smaller","test","bit","little"]},{"Key":"1. LINQ","Fragments":["is"]},{"Key":"tool but","Fragments":["sometimes"]},{"Key":"but sometimes","Fragments":["it"]},{"Key":"sometimes it","Fragments":["causes"]},{"Key":"it causes","Fragments":["readability"]},{"Key":"causes readability","Fragments":["issues."]},{"Key":"readability issues.","Fragments":["Consider"]},{"Key":"issues. Consider","Fragments":["moving"]},{"Key":"Consider moving","Fragments":["some"]},{"Key":"moving some","Fragments":["of"]},{"Key":"more complicated","Fragments":["LINQ","than","to","'set'","than","but","than","dictionary","than","than"]},{"Key":"complicated LINQ","Fragments":["statements"]},{"Key":"into methods","Fragments":["that"]},{"Key":"that describe","Fragments":["why","in"]},{"Key":"describe why","Fragments":["you're","I"]},{"Key":"why you're","Fragments":["doing"]},{"Key":"doing what","Fragments":["you're"]},{"Key":"what you're","Fragments":["doing","looking","getting","doing"]},{"Key":"doing (that","Fragments":["second"]},{"Key":"(that second","Fragments":["```Where```"]},{"Key":"second ```Where```","Fragments":["looks"]},{"Key":"```Where``` looks","Fragments":["like"]},{"Key":"The ```Distinct()```","Fragments":["call"]},{"Key":"```Distinct()``` call","Fragments":["isn't"]},{"Key":"call isn't","Fragments":["needed."]},{"Key":"3. ```_input```","Fragments":["has"]},{"Key":"```_input``` has","Fragments":["already"]},{"Key":"has already","Fragments":["been","happened"]},{"Key":"already been","Fragments":["lowered,","generated","added","calculated","removed."]},{"Key":"been lowered,","Fragments":["no"]},{"Key":"lowered, no","Fragments":["need"]},{"Key":"to lower","Fragments":["it","case","and","case","case.","case","case"]},{"Key":"lower it","Fragments":["again"]},{"Key":"it again","Fragments":["on"]},{"Key":"again on","Fragments":["line"]},{"Key":"4. You","Fragments":["may"]},{"Key":"may prefer","Fragments":["```string.Concat```","your"]},{"Key":"prefer ```string.Concat```","Fragments":["over"]},{"Key":"```string.Concat``` over","Fragments":["```string.Join```"]},{"Key":"over ```string.Join```","Fragments":["if"]},{"Key":"```string.Join``` if","Fragments":["you're"]},{"Key":"you're not","Fragments":["actually","compiling","already","storing"]},{"Key":"actually joining","Fragments":["any"]},{"Key":"joining any","Fragments":["constants"]},{"Key":"any constants","Fragments":["between"]},{"Key":"constants between","Fragments":["strings."]},{"Key":"I LOVE","Fragments":["this"]},{"Key":"LOVE this","Fragments":["implementation."]},{"Key":"this implementation.","Fragments":["The","Generally"]},{"Key":"implementation. The","Fragments":["only","only"]},{"Key":"is maybe","Fragments":["skipping","the"]},{"Key":"maybe skipping","Fragments":["the"]},{"Key":"skipping the","Fragments":["intermediate","loop","\"else\""]},{"Key":"the intermediate","Fragments":["```mismatchedCharacters```"]},{"Key":"intermediate ```mismatchedCharacters```","Fragments":["and"]},{"Key":"```mismatchedCharacters``` and","Fragments":["make"]},{"Key":"make ```Compute```","Fragments":["a"]},{"Key":"```Compute``` a","Fragments":["one-liner."]},{"Key":" Seriously","Fragments":["though,"]},{"Key":"Seriously though,","Fragments":["great"]},{"Key":"though, great","Fragments":["job"]},{"Key":"great job","Fragments":["on"]},{"Key":"job on","Fragments":["the","knowing","FindDayInWeek.","measuring"]},{"Key":"That or","Fragments":["just"]},{"Key":"or just","Fragments":["use","easier","using","ignoring","a","add"]},{"Key":"the ```Regex```","Fragments":["static"]},{"Key":"```Regex``` static","Fragments":["methods."]},{"Key":"static methods.","Fragments":["About"]},{"Key":"methods. About","Fragments":["the"]},{"Key":"About the","Fragments":["same","responds,","string"]},{"Key":" Technically","Fragments":["```NucleotideCounts```","the","you","years","you"]},{"Key":"Technically ```NucleotideCounts```","Fragments":["is"]},{"Key":"```NucleotideCounts``` is","Fragments":["supposed"]},{"Key":"is supposed","Fragments":["to","to","to","to","to"]},{"Key":"a property","Fragments":["(and","to","and","(get;","or","to","called","in","with"]},{"Key":"property (and","Fragments":["purposefully"]},{"Key":"(and purposefully","Fragments":["so)."]},{"Key":"The algorithm","Fragments":["is"]},{"Key":"algorithm is","Fragments":["there,","mostly","the","less","basically","always","valid,","very"]},{"Key":"is there,","Fragments":["just","even"]},{"Key":"there, just","Fragments":["a"]},{"Key":"string extension","Fragments":["is","to","methods","Last()"]},{"Key":"is buying","Fragments":["you"]},{"Key":"buying you","Fragments":["here."]},{"Key":"you here.","Fragments":["Usually"]},{"Key":"here. Usually","Fragments":["it's"]},{"Key":"Usually it's","Fragments":["for"]},{"Key":"it's for","Fragments":["a","convenience"]},{"Key":"a readability","Fragments":["win","standpoint,","perspective,","standpoint."]},{"Key":"readability win","Fragments":["but"]},{"Key":"win but","Fragments":["I'm"]},{"Key":"not seeing","Fragments":["it","how","that","anything"]},{"Key":"seeing it","Fragments":["here."]},{"Key":"it here.","Fragments":["Maybe","It","I"]},{"Key":"here. Maybe","Fragments":["all"]},{"Key":"Maybe all","Fragments":["that"]},{"Key":"is wanted","Fragments":["is"]},{"Key":"wanted is","Fragments":["a"]},{"Key":"2. Intermediate","Fragments":["variables"]},{"Key":"Intermediate variables","Fragments":["can"]},{"Key":"variables can","Fragments":["help"]},{"Key":"can help","Fragments":["readability...","distinguish","during","make","in"]},{"Key":"help readability...","Fragments":["to"]},{"Key":"readability... to","Fragments":["a"]},{"Key":"I worry","Fragments":["that","that","they"]},{"Key":"worry that","Fragments":["there","the","if"]},{"Key":"are too","Fragments":["many","much.","complicated."]},{"Key":"many which","Fragments":["are"]},{"Key":"are actually","Fragments":["hurting","hurting"]},{"Key":"actually hurting","Fragments":["readability.","readability"]},{"Key":"hurting readability.","Fragments":["The"]},{"Key":"readability. The","Fragments":["nice","one"]},{"Key":"The nice","Fragments":["thing"]},{"Key":"nice thing","Fragments":["about"]},{"Key":"thing about","Fragments":["LINQ","programming;"]},{"Key":"about LINQ","Fragments":["lambda"]},{"Key":"LINQ lambda","Fragments":["expressions"]},{"Key":"lambda expressions","Fragments":["is"]},{"Key":"is they","Fragments":["can"]},{"Key":"be chained","Fragments":["together"]},{"Key":"chained together","Fragments":["and"]},{"Key":"together and","Fragments":["provide","then","easy"]},{"Key":"and provide","Fragments":["pretty"]},{"Key":"provide pretty","Fragments":["good"]},{"Key":"good readability","Fragments":["with"]},{"Key":"readability with","Fragments":["less"]},{"Key":"3. ```IsAnAnagram```","Fragments":["feels"]},{"Key":"```IsAnAnagram``` feels","Fragments":["like"]},{"Key":"could benefit","Fragments":["from","from"]},{"Key":"from using","Fragments":["```.Equals```","var,"]},{"Key":"using ```.Equals```","Fragments":["with"]},{"Key":"```.Equals``` with","Fragments":["IgnoreCase."]},{"Key":"with IgnoreCase.","Fragments":["Maybe"]},{"Key":"IgnoreCase. Maybe","Fragments":["not."]},{"Key":"Maybe not.","Fragments":["Just"]},{"Key":"not. Just","Fragments":["feels"]},{"Key":"Just feels","Fragments":["verbose"]},{"Key":"feels verbose","Fragments":["in"]},{"Key":"verbose in","Fragments":["there."]},{"Key":"would reduce","Fragments":["code","nesting"]},{"Key":"reduce code","Fragments":["duplication?","length."]},{"Key":"code duplication?","Fragments":["How","How"]},{"Key":"duplication? How","Fragments":["about","about"]},{"Key":"about readability?","Fragments":["Understandability"]},{"Key":"readability? Understandability","Fragments":["(if"]},{"Key":"Understandability (if","Fragments":["that's"]},{"Key":"(if that's","Fragments":["a"]},{"Key":"is mostly","Fragments":["there","the"]},{"Key":"mostly there","Fragments":["but"]},{"Key":"there but","Fragments":["I","this"]},{"Key":"and additional","Fragments":["method"]},{"Key":"additional method","Fragments":["are","helps"]},{"Key":"hurting readability","Fragments":["rather"]},{"Key":"readability rather","Fragments":["than","than"]},{"Key":"than helping","Fragments":["it."]},{"Key":"helping it.","Fragments":["That"]},{"Key":"it. That","Fragments":["initial","is","didn't"]},{"Key":"That initial","Fragments":["```Dictionary```"]},{"Key":"initial ```Dictionary```","Fragments":["is"]},{"Key":"```Dictionary``` is","Fragments":["probably"]},{"Key":"one you","Fragments":["need","made","can"]},{"Key":"agree, adding","Fragments":["the"]},{"Key":"the spaces","Fragments":["does","when"]},{"Key":"spaces does","Fragments":["make"]},{"Key":"does make","Fragments":["it","this","it","sense!","it","the"]},{"Key":"bit easier","Fragments":["to","to"]},{"Key":"what operation","Fragments":["is"]},{"Key":"operation is","Fragments":["happening.","false","nice,"]},{"Key":"is happening.","Fragments":["I"]},{"Key":"happening. I","Fragments":["tend"]},{"Key":"I tend","Fragments":["to","to","to","to","to","to","to","to","towards","to","to","to"]},{"Key":"tend to","Fragments":["forget","using","favor","write","try","use","go","be","use","stay","avoid","focus","think","avoid","err","make","use"]},{"Key":"to forget","Fragments":["the","about"]},{"Key":"forget the","Fragments":["spaces","end"]},{"Key":"spaces when","Fragments":["I"]},{"Key":" Agree","Fragments":["with","with","about"]},{"Key":"Agree with","Fragments":["@german","@desiree"]},{"Key":"with @german","Fragments":["this"]},{"Key":"@german this","Fragments":["is"]},{"Key":"not idiomatic","Fragments":["c#."]},{"Key":"Also only","Fragments":["`Hey`"]},{"Key":"only `Hey`","Fragments":["should"]},{"Key":"`Hey` should","Fragments":["be"]},{"Key":"be public","Fragments":["all"]},{"Key":"public all","Fragments":["other"]},{"Key":"all other","Fragments":["methods"]},{"Key":"other methods","Fragments":["should","strings","then","of","more"]},{"Key":"be `private`.","Fragments":["We"]},{"Key":"`private`. We","Fragments":["don't"]},{"Key":"We don't","Fragments":["want","really","need"]},{"Key":"to leak","Fragments":["our"]},{"Key":"leak our","Fragments":["internals"]},{"Key":"our internals","Fragments":["to"]},{"Key":"internals to","Fragments":["others!"]},{"Key":" Variable","Fragments":["naming","names"]},{"Key":"Variable naming","Fragments":["is"]},{"Key":"naming is","Fragments":["important"]},{"Key":"is important","Fragments":["and","for","-","to","to","to"]},{"Key":"important and","Fragments":["I",".ContainsKey"]},{"Key":"that `convo`","Fragments":["is"]},{"Key":"`convo` is","Fragments":["expressive"]},{"Key":"is expressive","Fragments":["enough."]},{"Key":"expressive enough.","Fragments":["`message`"]},{"Key":"enough. `message`","Fragments":["or"]},{"Key":"or `question`","Fragments":["are"]},{"Key":"`question` are","Fragments":["probably"]},{"Key":"are probably","Fragments":["more","over","the","okay."]},{"Key":"more meaningful","Fragments":["for","name","name"]},{"Key":"meaningful for","Fragments":["a"]},{"Key":"a client","Fragments":["using","understand"]},{"Key":"client using","Fragments":["the"]},{"Key":"using the","Fragments":["`Hey`","`.Add()`","Modulo","OR","free","\"else's\"?","Invariant","IsDivisible","var","modulus","inline","IsNullOrWhiteSpace","built","Math.Min","Zip","Zip","string.IsNullOrWhiteSpace","select","correct","^","ternary","@","[^\\w]","StringBuilder","String.Substring","local","fact","first","\u0026\u0026","NUnit","\u003cb\u003eTrim()\u003c/b\u003e","\u003cb\u003eSelectMany()\u003c/b\u003e,","format","[]","short","'replace'","index","Dictionary.","ternary","DayOfWeek","right","built-in","year,","year,","following","result","same","newValue","modulo","string","empty","separate","brackets","power","`string.IsNullOrWhiteSpace`","static","foreach","DateTime","power","decimal","variable.","yield","following","Null","following","following","regex","count","loop","enumerator","regex","Char.IsLetter()","ASCII"]},{"Key":"the `Hey`","Fragments":["method."]},{"Key":"pretty rare","Fragments":["to"]},{"Key":"rare to","Fragments":["use"]},{"Key":"the `String`","Fragments":["class"]},{"Key":"`String` class","Fragments":["directly"]},{"Key":"class directly","Fragments":["use"]},{"Key":"directly use","Fragments":["`string`"]},{"Key":"use `string`","Fragments":["is"]},{"Key":"`string` is","Fragments":["recommended"]},{"Key":"is recommended","Fragments":["(in"]},{"Key":"recommended (in","Fragments":["the"]},{"Key":"(in the","Fragments":["same","comments),","aptly","first","\"Yelling\""]},{"Key":"same way","Fragments":["you","I","as"]},{"Key":"use `int`","Fragments":["not","because"]},{"Key":"`int` not","Fragments":["`System.Int32`)"]},{"Key":"Line 9","Fragments":["can"]},{"Key":"9 can","Fragments":["be"]},{"Key":"with `","Fragments":["else"]},{"Key":"` else","Fragments":["if"]},{"Key":"Would a","Fragments":["client"]},{"Key":"client understand","Fragments":["what"]},{"Key":"understand what","Fragments":["was","is","you","you","to"]},{"Key":"was expected","Fragments":["from","to"]},{"Key":"expected from","Fragments":["a"]},{"Key":"variable `hey`","Fragments":["maybe"]},{"Key":"`hey` maybe","Fragments":["`message`"]},{"Key":"maybe `message`","Fragments":["would"]},{"Key":"`message` would","Fragments":["be"]},{"Key":"The `else`'s","Fragments":["are"]},{"Key":"redundant (but","Fragments":["a"]},{"Key":"(but a","Fragments":["lot"]},{"Key":"people seem","Fragments":["to","okay","to"]},{"Key":"put them","Fragments":["in!)","in.","in","in."]},{"Key":"This style","Fragments":["is"]},{"Key":"style is","Fragments":["aimed","create","protecting"]},{"Key":"is aimed","Fragments":["at"]},{"Key":"aimed at","Fragments":["readability"]},{"Key":"at readability","Fragments":["over"]},{"Key":"readability over","Fragments":["conciseness.","speed.","style."]},{"Key":"Also added","Fragments":["in","a"]},{"Key":"added in","Fragments":["a","the","this"]},{"Key":"year 2000","Fragments":["test"]},{"Key":"2000 test","Fragments":["which"]},{"Key":"test which","Fragments":["was"]},{"Key":"which was","Fragments":["mentioned","which.","exactly","a","somehow","guaranteed"]},{"Key":"was mentioned","Fragments":["in","by"]},{"Key":"mentioned in","Fragments":["this","the","a","point"]},{"Key":"made this","Fragments":["new","a","a","more","submission","submission","too","a","into"]},{"Key":"this new","Fragments":["code","iteration"]},{"Key":"new code","Fragments":["iteration,","clocks"]},{"Key":"code iteration,","Fragments":["based"]},{"Key":"iteration, based","Fragments":["on"]},{"Key":"based on","Fragments":["the","string,","feedback,","your","the","my","which","those.","1,","your","other","my","the","your","nagging","your"]},{"Key":"the wonderful","Fragments":["input"]},{"Key":"wonderful input","Fragments":["I've"]},{"Key":"input I've","Fragments":["been"]},{"Key":"I've been","Fragments":["given,","told","thinking","coding","writing","enjoying","used","using","missing","having","trying","having","sticking"]},{"Key":"been given,","Fragments":["I"]},{"Key":"given, I","Fragments":["stayed"]},{"Key":"I stayed","Fragments":["with","away"]},{"Key":"stayed with","Fragments":["only"]},{"Key":"one method,","Fragments":["which"]},{"Key":"method, which","Fragments":["is","means","increases","I"]},{"Key":"is illustrative","Fragments":["of"]},{"Key":"illustrative of","Fragments":["what"]},{"Key":"method does,","Fragments":["returns"]},{"Key":"does, returns","Fragments":["true"]},{"Key":"year or","Fragments":["false","not.","not.","not.","not."]},{"Key":"added a","Fragments":["few","class","unit","very","line","\u003ccode\u003eusing","check","check","few","`!string.IsNullOrWhiteSpace(","small","few","test","class","couple"]},{"Key":"few comments","Fragments":["in"]},{"Key":"add readability","Fragments":["without"]},{"Key":"without cluttering","Fragments":["my"]},{"Key":"cluttering my","Fragments":["code"]},{"Key":"code with","Fragments":["comments.","the","nice","readability.","a","the","a","less"]},{"Key":"at others'","Fragments":["implementations,","examples,","examples","solutions,"]},{"Key":"others' implementations,","Fragments":["I"]},{"Key":"implementations, I","Fragments":["realized"]},{"Key":"the Regex.Split","Fragments":["statement","method."]},{"Key":"Regex.Split statement","Fragments":["would"]},{"Key":"my formatting","Fragments":["method.","didn't","so","inconsistencies,"]},{"Key":"also made","Fragments":["WordCount"]},{"Key":"made WordCount","Fragments":["lazy"]},{"Key":"WordCount lazy","Fragments":["loading"]},{"Key":"lazy loading","Fragments":["since"]},{"Key":"loading since","Fragments":["it"]},{"Key":"it won't","Fragments":["change,","run","do","be","mean","have","complain."]},{"Key":"won't change,","Fragments":["allowing"]},{"Key":"change, allowing","Fragments":["it"]},{"Key":"allowing it","Fragments":["to"]},{"Key":"only be","Fragments":["calculated","calculated","used","a","set","used","passed","one","counted","needed","done","calculated"]},{"Key":"be calculated","Fragments":["once.","first.","when","on"]},{"Key":" Main","Fragments":["method","focus","part"]},{"Key":"method removed,","Fragments":["it"]},{"Key":"removed, it","Fragments":["was"]},{"Key":"was inserted","Fragments":["by"]},{"Key":"inserted by","Fragments":["my"]},{"Key":"by my","Fragments":["IDE","own"]},{"Key":"my IDE","Fragments":["and","complains","included"]},{"Key":"IDE and","Fragments":["I"]},{"Key":"not putting","Fragments":["enough"]},{"Key":"putting enough","Fragments":["attention"]},{"Key":"enough attention","Fragments":["to"]},{"Key":"attention to","Fragments":["it"]},{"Key":"to it","Fragments":["(and","later","and","later.","will","and","and","and","as","being","ToUpper","than"]},{"Key":"it (and","Fragments":["I","continue"]},{"Key":"(and I","Fragments":["was","am"]},{"Key":"using it),","Fragments":["removed"]},{"Key":"it), removed","Fragments":["it"]},{"Key":"removed it","Fragments":["for"]},{"Key":"a \"no-no\"","Fragments":["to"]},{"Key":"\"no-no\" to","Fragments":["have"]},{"Key":"have multiple","Fragments":["returns","pieces","returns","lines"]},{"Key":"returns in","Fragments":["one","methods.","general,","a","a","methods","one","a","the","your","a","a"]},{"Key":"one function.","Fragments":["It"]},{"Key":"function. It","Fragments":["gets","probably","goes","is"]},{"Key":"It gets","Fragments":["difficult","too"]},{"Key":"gets difficult","Fragments":["to","to"]},{"Key":"out where","Fragments":["you","if","to"]},{"Key":"you exit","Fragments":["out"]},{"Key":"exit out","Fragments":["of"]},{"Key":" On","Fragments":["Line","line","names,","the","the","line","line","one","the","the","purely","my","the","line","line","review,","the","the","a"]},{"Key":"On Line","Fragments":["11"]},{"Key":"Line 11","Fragments":["if","you"]},{"Key":"11 if","Fragments":["you"]},{"Key":"you only","Fragments":["care","have","code","have","have","assign","need","have","have","specify","check","need","need","need","loop","return","use","need"]},{"Key":"only care","Fragments":["about"]},{"Key":"care about","Fragments":["upper","the"]},{"Key":"about upper","Fragments":["things","range."]},{"Key":"upper things","Fragments":["can"]},{"Key":"things can","Fragments":["you","get"]},{"Key":"you not","Fragments":["match","sure,","use"]},{"Key":"not match","Fragments":["simply","its","the"]},{"Key":"match simply","Fragments":["on"]},{"Key":"simply on","Fragments":["`\"[A-Z]\"`"]},{"Key":"not comment","Fragments":["on"]},{"Key":"on Regex","Fragments":["answers..."]},{"Key":"Regex answers...","Fragments":["I"]},{"Key":"answers... I","Fragments":["looked"]},{"Key":"I looked","Fragments":["at","at","for","through","at","on","at","for","up","through","at","the","at","at"]},{"Key":"looked at","Fragments":["PERL","those","the","the","other","others'","the","how","flagged","had","the"]},{"Key":"at PERL","Fragments":["once"]},{"Key":"PERL once","Fragments":["and"]},{"Key":"and my","Fragments":["eyes","program","own","experience","thought","original"]},{"Key":"my eyes","Fragments":["are","bleed","is","the","easier"]},{"Key":"eyes are","Fragments":["still"]},{"Key":"are still","Fragments":["scarred!","uncomfortable","valid"]},{"Key":"I'm aiming","Fragments":["for"]},{"Key":"aiming for","Fragments":["extreme"]},{"Key":"for extreme","Fragments":["clarity"]},{"Key":"extreme clarity","Fragments":["here."]},{"Key":"clarity here.","Fragments":["Frankly"]},{"Key":"here. Frankly","Fragments":["though"]},{"Key":"Frankly though","Fragments":["I"]},{"Key":"think (year","Fragments":["%"]},{"Key":"|| (year","Fragments":["%","%","%","%","%","%","%","%"]},{"Key":"0) isn't","Fragments":["terrible..."]},{"Key":" Boy,","Fragments":["I've","I've"]},{"Key":"Boy, I've","Fragments":["seen","seen"]},{"Key":"I've seen","Fragments":["lots","lots","in","to","\"m_\",","a","others","this","several","so","who's","too","the"]},{"Key":"seen lots","Fragments":["of","of"]},{"Key":"of submissions","Fragments":["with","with"]},{"Key":"submissions with","Fragments":["multiple","multiple"]},{"Key":"statements. Its","Fragments":["unfortunate","unfortunate"]},{"Key":"Its unfortunate","Fragments":["that","that"]},{"Key":"unfortunate that","Fragments":["college","college"]},{"Key":"that college","Fragments":["made","made"]},{"Key":"college made","Fragments":["this","this","me"]},{"Key":"a pet","Fragments":["peeve","peeve","peeve","peeve","peeve","peeve"]},{"Key":"pet peeve","Fragments":["of","of","of","of","of","to","of"]},{"Key":"peeve of","Fragments":["mine...","mine","mine.)","mine.)","mine...","mine"]},{"Key":"of mine...","Fragments":["It","It"]},{"Key":"mine... It","Fragments":["just","just"]},{"Key":"It just","Fragments":["makes","makes","makes","happens","isn't"]},{"Key":"just makes","Fragments":["it","it","it","code","it","more"]},{"Key":"to follow/debug","Fragments":["later.","later."]},{"Key":"follow/debug later.","Fragments":["While","While"]},{"Key":"later. While","Fragments":["technically","technically"]},{"Key":"While technically","Fragments":["this","this"]},{"Key":"technically this","Fragments":["is","is"]},{"Key":"is small,","Fragments":["I","I"]},{"Key":"small, I","Fragments":["don't","don't"]},{"Key":"like breaking","Fragments":["the","the","the"]},{"Key":"breaking the","Fragments":["\"rules\"","\"rules\"","conditions","thread"]},{"Key":"the \"rules\"","Fragments":["just","just","you","described"]},{"Key":"\"rules\" just","Fragments":["because","because"]},{"Key":"is small.","Fragments":[":)",":)"]},{"Key":"good. Some","Fragments":["minor"]},{"Key":"Some minor","Fragments":["nitpicks"]},{"Key":"minor nitpicks","Fragments":["if","for"]},{"Key":"nitpicks if","Fragments":["you're"]},{"Key":"1. ```Number```","Fragments":["and"]},{"Key":"```Number``` and","Fragments":["```AreaCode```"]},{"Key":"and ```AreaCode```","Fragments":["could"]},{"Key":"```AreaCode``` could","Fragments":["easily"]},{"Key":"easily be","Fragments":["made","moved","switched","done","extendable"]},{"Key":"made into","Fragments":["automatic","an","1"]},{"Key":"into automatic","Fragments":["properties"]},{"Key":"automatic properties","Fragments":["with"]},{"Key":"properties with","Fragments":["private","a"]},{"Key":"with private","Fragments":["sets."]},{"Key":"private sets.","Fragments":["What"]},{"Key":"sets. What","Fragments":["you"]},{"Key":"What you","Fragments":["have"]},{"Key":"is effectively","Fragments":["the"]},{"Key":"effectively the","Fragments":["same,","same"]},{"Key":"the same,","Fragments":["auto-props","but","but","we","return","but","`Enumerable.Range(0,"]},{"Key":"same, auto-props","Fragments":["are"]},{"Key":"auto-props are","Fragments":["just"]},{"Key":"are just","Fragments":["less","one","checking","that","my","as","writing","placeholders","using","code","about"]},{"Key":"just less","Fragments":["lines."]},{"Key":"2. There's","Fragments":["no"]},{"Key":"to qualify","Fragments":["```NumbersOnlyRegex```"]},{"Key":"qualify ```NumbersOnlyRegex```","Fragments":["with"]},{"Key":"```NumbersOnlyRegex``` with","Fragments":["the"]},{"Key":"last substring","Fragments":["in"]},{"Key":"substring in","Fragments":["```ToString```"]},{"Key":"in ```ToString```","Fragments":["could"]},{"Key":"```ToString``` could","Fragments":["be"]},{"Key":"called with","Fragments":["just","an","-1000000,"]},{"Key":"just 6.","Fragments":["That"]},{"Key":"6. That","Fragments":["overload"]},{"Key":"That overload","Fragments":["will"]},{"Key":"overload will","Fragments":["just"]},{"Key":"will just","Fragments":["start"]},{"Key":"just start","Fragments":["at"]},{"Key":"start at","Fragments":["that","0.","'i'","'i*i'."]},{"Key":"that index","Fragments":["and"]},{"Key":"index and","Fragments":["grab","this"]},{"Key":"and grab","Fragments":["the"]},{"Key":"grab the","Fragments":["rest"]},{"Key":"rest (which","Fragments":["was"]},{"Key":"(which was","Fragments":["validated"]},{"Key":"was validated","Fragments":["earlier)."]},{"Key":"4. There's","Fragments":["a"]},{"Key":"lot going","Fragments":["on","on"]},{"Key":"the constructor.","Fragments":["Some","No","So","That","One","The"]},{"Key":"constructor. Some","Fragments":["of"]},{"Key":"Some of","Fragments":["that"]},{"Key":"(or more)","Fragments":["well-named"]},{"Key":"more) well-named","Fragments":["function."]},{"Key":"far. I","Fragments":["like"]},{"Key":"the terseness","Fragments":["of"]},{"Key":"terseness of","Fragments":["the"]},{"Key":"the solution.","Fragments":["Is","Test"]},{"Key":"solution. Is","Fragments":["there"]},{"Key":"eliminate any","Fragments":["code"]},{"Key":"1. Absolutely","Fragments":["true."]},{"Key":"Absolutely true.","Fragments":["I"]},{"Key":"started with","Fragments":["fields","static"]},{"Key":"with fields","Fragments":["since"]},{"Key":"fields since","Fragments":["I"]},{"Key":"since I","Fragments":["was","figure","convert","was","think","had","figured","am","knew","believe","come"]},{"Key":"the minimum","Fragments":["for","to"]},{"Key":"minimum for","Fragments":["tests"]},{"Key":"for tests","Fragments":["to","you"]},{"Key":"pass and","Fragments":["didn't","try","I","can"]},{"Key":"and didn't","Fragments":["change","do"]},{"Key":"didn't change","Fragments":["it"]},{"Key":"change it","Fragments":["after.","to","without","to","to.","later.","once.","to","to","to:"]},{"Key":"think that's","Fragments":["a","what","not","more","the","the","my"]},{"Key":"style /","Fragments":["preference."]},{"Key":"/ preference.","Fragments":["I"]},{"Key":"preference. I","Fragments":["qualify"]},{"Key":"I qualify","Fragments":["everything"]},{"Key":"qualify everything","Fragments":["everywhere"]},{"Key":"everything everywhere","Fragments":["because"]},{"Key":"everywhere because","Fragments":["I"]},{"Key":"find it","Fragments":["less","would","readable","better","to","interesting","a","to","difficult","very","simplifies"]},{"Key":"less ambiguous,","Fragments":["but"]},{"Key":"ambiguous, but","Fragments":["I"]},{"Key":"know of","Fragments":["the","any"]},{"Key":"other style","Fragments":["(no"]},{"Key":"style (no","Fragments":["this"]},{"Key":"(no this","Fragments":["and"]},{"Key":"no class","Fragments":["qualifiers)."]},{"Key":"4. Yeah,","Fragments":["I'll"]},{"Key":"Yeah, I'll","Fragments":["make"]},{"Key":"I'll make","Fragments":["another","it","a","sure","those","a"]},{"Key":"make another","Fragments":["version!"]},{"Key":"another version!","Fragments":[":)"]},{"Key":"problem with","Fragments":["doing","the","using","larger","it.","'sanitizing'","the","looping","\u003cb\u003e\\w[\\w'-]*\u003c/b\u003e","no","the","your","a","my","being","this","higher"]},{"Key":"with doing","Fragments":["it"]},{"Key":"it quite","Fragments":["like"]},{"Key":"is we","Fragments":["cannot"]},{"Key":"we cannot","Fragments":["test"]},{"Key":"cannot test","Fragments":["it,"]},{"Key":"test it,","Fragments":["as","but"]},{"Key":"it, as","Fragments":["your"]},{"Key":"your methods","Fragments":["rely","that","need","so","properly"]},{"Key":"methods rely","Fragments":["on"]},{"Key":"on Unity","Fragments":["to"]},{"Key":"Unity to","Fragments":["work."]},{"Key":"to work.","Fragments":["This","Can","Very","This"]},{"Key":"work. This","Fragments":["is","which"]},{"Key":"is A","Fragments":["BAD"]},{"Key":"A BAD","Fragments":["THING"]},{"Key":"BAD THING","Fragments":["as"]},{"Key":"THING as","Fragments":["simple"]},{"Key":"simple logic","Fragments":["like"]},{"Key":"logic like","Fragments":["this","this"]},{"Key":"this should","Fragments":["not","present","tend","die.","have","also","be"]},{"Key":"not have","Fragments":["the","been","spaces","any","a","much","done","exposed","to","to","to","to","your","to","worked","a","used","duplicate","to"]},{"Key":"entire Unity","Fragments":["engine"]},{"Key":"Unity engine","Fragments":["as"]},{"Key":"engine as","Fragments":["a"]},{"Key":" Pull","Fragments":["testable"]},{"Key":"Pull testable","Fragments":["logic"]},{"Key":"testable logic","Fragments":["out"]},{"Key":"logic out","Fragments":["into","to","to","because"]},{"Key":"separate class","Fragments":["which","is","```Element\u003cT\u003e```","and","since"]},{"Key":"class which","Fragments":["you","in","would"]},{"Key":"which you","Fragments":["can","had","are","know","later","prefer:","do"]},{"Key":"use within","Fragments":["Unity","a"]},{"Key":"within Unity","Fragments":["or"]},{"Key":"Unity or","Fragments":["any"]},{"Key":"or any","Fragments":["other","of","interface"]},{"Key":"any other","Fragments":["framework","way?","way","things","parsing.","way","base","improvement","way","form"]},{"Key":"other framework","Fragments":["you"]},{"Key":"framework you","Fragments":["choose."]},{"Key":"Your final","Fragments":["code","operator"]},{"Key":"final code","Fragments":["would"]},{"Key":"code would","Fragments":["be","fail","make","still","benefit","be","be","be","get","throw","be","throw","return","be"]},{"Key":"be something","Fragments":["like","I","interesting","more","like"]},{"Key":"the below,","Fragments":["which"]},{"Key":"below, which","Fragments":["is"]},{"Key":"is little","Fragments":["more","imbalance"]},{"Key":"complex and","Fragments":["is","less","not"]},{"Key":" ﻿using","Fragments":["UnityEngine;"]},{"Key":" using","Fragments":["System.Collections;","Microsoft.VisualStudio.TestTools.UnitTesting;","Microsoft.VisualStudio.TestTools.UnitTesting;","System.Collections.Generic;","System.Text;","the","a","a"]},{"Key":"public class","Fragments":["LeapTest","Year","LeapTest","LeapTest","UtilityTest","Scrabble"]},{"Key":"class LeapTest","Fragments":[":"]},{"Key":"LeapTest :","Fragments":["MonoBehaviour"]},{"Key":"public int","Fragments":["givenYear;","Year","ACount","CCount","GCount","TCount","Count(char","Score()","Score(){"]},{"Key":" void","Fragments":["Start()"]},{"Key":"if ((givenYear%4","Fragments":["=="]},{"Key":"((givenYear%4 ==","Fragments":["0)"]},{"Key":"0) \u0026\u0026","Fragments":["(givenYear%400","(yr","(year","(year","(year","(year"]},{"Key":"\u0026\u0026 (givenYear%400","Fragments":["=="]},{"Key":"(givenYear%400 ==","Fragments":["0"]},{"Key":"|| givenYear%100","Fragments":["\u003e"]},{"Key":"givenYear%100 \u003e","Fragments":["0))"]},{"Key":" //","Fragments":["String","Do","blah","Mutes","string","Do","Compared","Compare","Compare","Sort","Return","Check","Valid","Invalid","etc...","or","'date'","loop","calculate","blah","skip","skip","blah"]},{"Key":"// String","Fragments":["going"]},{"Key":"String going","Fragments":["through"]},{"Key":"going through","Fragments":["rules","the"]},{"Key":" isLeap","Fragments":["=","="]},{"Key":"= true;","Fragments":["//"]},{"Key":"true; //","Fragments":["Result"]},{"Key":"// Result","Fragments":["if","if"]},{"Key":"Result if","Fragments":["obiding","not"]},{"Key":"if obiding","Fragments":["rules"]},{"Key":"= false;","Fragments":["//"]},{"Key":"false; //","Fragments":["Result"]},{"Key":"not obiding","Fragments":["rules"]},{"Key":" Clarity","Fragments":["over","is"]},{"Key":"Clarity over","Fragments":["brevity"]},{"Key":"over brevity","Fragments":["in"]},{"Key":"brevity in","Fragments":["almost"]},{"Key":"almost all","Fragments":["cases","the"]},{"Key":"all cases","Fragments":["is","of"]},{"Key":"cases is","Fragments":["good!","much"]},{"Key":"this makes","Fragments":["the","the","for"]},{"Key":"code \"somewhat\"","Fragments":["easier"]},{"Key":"\"somewhat\" easier","Fragments":["to"]},{"Key":"read, you","Fragments":["are"]},{"Key":"are simply","Fragments":["replacing","changing","while","sum"]},{"Key":"simply replacing","Fragments":["the"]},{"Key":"replacing the","Fragments":["#","modulo","Regex","isDivisible","lengthy","current"]},{"Key":"the #","Fragments":["%"]},{"Key":"# %","Fragments":["#","#"]},{"Key":"% #","Fragments":["notation","to"]},{"Key":"# notation","Fragments":["with"]},{"Key":"notation with","Fragments":["IsDivisable(#,"]},{"Key":"with IsDivisable(#,","Fragments":["#)."]},{"Key":"IsDivisable(#, #).","Fragments":["If"]},{"Key":"#). If","Fragments":["you"]},{"Key":"it this","Fragments":["way,","way","way","way.","way,","way","way.","way","way","way,","way","way.","way,"]},{"Key":"this way,","Fragments":["I","readability","yes.","since"]},{"Key":"way, I","Fragments":["would","know"]},{"Key":"add an","Fragments":["extension","||","additional","\"All","item","extension","'else'"]},{"Key":"to Int32","Fragments":["to"]},{"Key":"Int32 to","Fragments":["save"]},{"Key":"to save","Fragments":["on","creating","creating","every","quite","the","less","the","the","the"]},{"Key":"save on","Fragments":["a","single","typos."]},{"Key":" Personally,","Fragments":["I"]},{"Key":"Personally, I","Fragments":["think","prefer"]},{"Key":"think people","Fragments":["understand"]},{"Key":"people understand","Fragments":["the"]},{"Key":"the %","Fragments":["notation","4","100","operator","operator","operator","call"]},{"Key":"% notation","Fragments":["and"]},{"Key":"notation and","Fragments":["would"]},{"Key":"would just","Fragments":["use","use","keep","do","recommend"]},{"Key":"use that","Fragments":["directly.","and","as","would","method"]},{"Key":"reduce it","Fragments":["further","to","to"]},{"Key":"(year%100 !=","Fragments":["0)","0"]},{"Key":"will you","Fragments":["be"]},{"Key":"you be","Fragments":["able"]},{"Key":"it later","Fragments":["(and","vSource"]},{"Key":"later (and","Fragments":["have"]},{"Key":"(and have","Fragments":["forgotten"]},{"Key":"have forgotten","Fragments":["the","to"]},{"Key":"forgotten the","Fragments":["tricky"]},{"Key":"the tricky","Fragments":["rules"]},{"Key":"tricky rules","Fragments":["that"]},{"Key":"To pick","Fragments":["a"]},{"Key":"pick a","Fragments":["nit","style","side"]},{"Key":"a nit","Fragments":["also","to"]},{"Key":"nit also","Fragments":["none"]},{"Key":"also none","Fragments":["of"]},{"Key":"none of","Fragments":["the","them","the","them","which","the","the","the"]},{"Key":"the using","Fragments":["statements","statements","statements,","statements,"]},{"Key":"using statements","Fragments":["are","in","(not","and","would","my"]},{"Key":"are ...","Fragments":["used"]},{"Key":"... used","Fragments":["so"]},{"Key":"used so","Fragments":["should","can"]},{"Key":"so should","Fragments":["all"]},{"Key":"should all","Fragments":["be","converge."]},{"Key":"you leap","Fragments":["(get"]},{"Key":"leap (get","Fragments":["it!)"]},{"Key":"(get it!)","Fragments":["out"]},{"Key":"it!) out","Fragments":["as"]},{"Key":"as soon","Fragments":["as","as","as","as","as","as","as"]},{"Key":"soon as","Fragments":["you","I'm","one","the","I","it","I","you"]},{"Key":"can know","Fragments":["that"]},{"Key":"prefer more","Fragments":["explanatory"]},{"Key":"more explanatory","Fragments":["naming"]},{"Key":"explanatory naming","Fragments":["of"]},{"Key":"code, even","Fragments":["at"]},{"Key":"even at","Fragments":["the","the"]},{"Key":"the expense","Fragments":["of","of"]},{"Key":"expense of","Fragments":["introducing","being"]},{"Key":"of introducing","Fragments":["private"]},{"Key":"introducing private","Fragments":["methods"]},{"Key":"haven't figured","Fragments":["out"]},{"Key":"figured out","Fragments":["how","NUnit","the","how"]},{"Key":"to pipe","Fragments":["queries"]},{"Key":"pipe queries","Fragments":["from"]},{"Key":"queries from","Fragments":["the","my"]},{"Key":"test suite","Fragments":["into","and","organizes","available","to","for","it","and","so","to"]},{"Key":"suite into","Fragments":["my"]},{"Key":"my code.","Fragments":["I"]},{"Key":"some direct","Fragments":["testing"]},{"Key":"direct testing","Fragments":["where"]},{"Key":"testing where","Fragments":["I","I"]},{"Key":"I fed","Fragments":["in"]},{"Key":"fed in","Fragments":["inputs","for"]},{"Key":"in inputs","Fragments":["manually"]},{"Key":"inputs manually","Fragments":["to"]},{"Key":"manually to","Fragments":["my"]},{"Key":"my program,","Fragments":["and"]},{"Key":"program, and","Fragments":["it","the"]},{"Key":"it performed","Fragments":["as"]},{"Key":"performed as","Fragments":["expected,"]},{"Key":"as expected,","Fragments":["but"]},{"Key":"expected, but","Fragments":["I"]},{"Key":"to connect","Fragments":["the"]},{"Key":"connect the","Fragments":["test","`year"]},{"Key":"suite and","Fragments":["my","with"]},{"Key":"my program","Fragments":["together","with"]},{"Key":" Much","Fragments":["prefer","better,","simpler","better","better.","simplified","simpler","redundancy","better"]},{"Key":"Much prefer","Fragments":["the"]},{"Key":"prefer the","Fragments":["private","`.Add`","ternary","one","classic","latter)","way"]},{"Key":"private method.","Fragments":["Nice."]},{"Key":"first way","Fragments":["I"]},{"Key":"of how","Fragments":["to","the","that","a","I","I","to","many","to","it","short","to","I"]},{"Key":"this. After","Fragments":["I"]},{"Key":"After I","Fragments":["had","submitted","finished"]},{"Key":"had wrote","Fragments":["this"]},{"Key":"this I","Fragments":["thought","think","am","had"]},{"Key":"of trying","Fragments":["to","to","to","to","to","to"]},{"Key":"it smaller.","Fragments":["I"]},{"Key":"smaller. I","Fragments":["couldn't"]},{"Key":"couldn't think","Fragments":["up"]},{"Key":"think up","Fragments":["a"]},{"Key":"way on","Fragments":["my"]},{"Key":"my own,","Fragments":["I","that"]},{"Key":"own, I","Fragments":["could","wonder"]},{"Key":"have Googled","Fragments":["the"]},{"Key":"Googled the","Fragments":["problem"]},{"Key":"problem but","Fragments":["then","it"]},{"Key":"but then","Fragments":["it","realized","realised","the","I","you","again","have","I","I","this","your","I","these","it"]},{"Key":"been my","Fragments":["own"]},{"Key":"little overboard","Fragments":["with"]},{"Key":"overboard with","Fragments":["comments.","with"]},{"Key":"with comments.","Fragments":["Also,"]},{"Key":"comments. Also,","Fragments":["some"]},{"Key":"Also, some","Fragments":["of","brief"]},{"Key":"your comments","Fragments":["seem","in"]},{"Key":"comments seem","Fragments":["actively"]},{"Key":"seem actively","Fragments":["misleading."]},{"Key":" ///","Fragments":["\u003cparam","\u003cparam"]},{"Key":"/// \u003cparam","Fragments":["name=\"dividend\"\u003eThe","name=\"divisor\"\u003eThe"]},{"Key":"\u003cparam name=\"dividend\"\u003eThe","Fragments":["divisor\u003c/param\u003e"]},{"Key":"\u003cparam name=\"divisor\"\u003eThe","Fragments":["dividend\u003c/param\u003e"]},{"Key":" Who","Fragments":["should","says"]},{"Key":"Who should","Fragments":["I"]},{"Key":"should I","Fragments":["believe?","explicitly"]},{"Key":"This might","Fragments":["help.","be"]},{"Key":"1. Using","Fragments":["the","ternary"]},{"Key":"manager include","Fragments":["the"]},{"Key":"also need","Fragments":["to","to"]},{"Key":"far, I","Fragments":["like"]},{"Key":"of ```SortedSet```,","Fragments":["haven't"]},{"Key":"```SortedSet```, haven't","Fragments":["seen"]},{"Key":"haven't seen","Fragments":["that","a","Hungarian"]},{"Key":"seen that","Fragments":["used"]},{"Key":"used here","Fragments":["before."]},{"Key":"The entire","Fragments":["solution","song"]},{"Key":"entire solution","Fragments":["seems"]},{"Key":"solution seems","Fragments":["to"]},{"Key":"to live","Fragments":["in"]},{"Key":"live in","Fragments":["the"]},{"Key":"one ```Match```","Fragments":["method."]},{"Key":"```Match``` method.","Fragments":["Is"]},{"Key":"method. Is","Fragments":["there"]},{"Key":"any way","Fragments":["you","to","that"]},{"Key":"could break","Fragments":["it","it","the","the"]},{"Key":"break it","Fragments":["up","up,","up.","down","down","into","into","down"]},{"Key":"about using","Fragments":["methods,","a","the","the","input.EndsWith(\"","a","GroupBy.","higher","strings","an","higher","higher","higher"]},{"Key":"using methods,","Fragments":["but"]},{"Key":"methods, but","Fragments":["I","the","in","now"]},{"Key":"wasn't sure","Fragments":["if","if","if","the","the","how.","if","about"]},{"Key":"if this","Fragments":["would","was","was","was","really","grew","is","was","isn't","pattern","class","was","code"]},{"Key":"this would","Fragments":["work","fail","be","execute","look","actually","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","be","be","not","be"]},{"Key":"would work","Fragments":["faster","it","just","too.","for","find","fine","in"]},{"Key":"work faster","Fragments":["and"]},{"Key":"faster and","Fragments":["easier","easier"]},{"Key":"and easier","Fragments":["than","to","to","to","to"]},{"Key":"easier than","Fragments":["creating"]},{"Key":"that calls","Fragments":["to","it"]},{"Key":"calls to","Fragments":["a","strInt.Length","make","it","your","Score()","Math.Pow().","this","`GetResponse`.","Verse(x)","`key.Contains`","RandomChar()","RandomChar","RandomChar"]},{"Key":"a bunch","Fragments":["of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"bunch of","Fragments":["other","`using`","stuff","if","assertions","private","```if```/```else```","tests.","research","bools","artificial"]},{"Key":"of other","Fragments":["methods.","entries","exercises"]},{"Key":"other methods.","Fragments":["I","It"]},{"Key":"sure what","Fragments":["really","is","\"nb\"","they","to","algorithm","is","the","the","happened.","to"]},{"Key":"what really","Fragments":["makes"]},{"Key":"makes good","Fragments":["code","sense."]},{"Key":"good code","Fragments":["as","down"]},{"Key":"am kinda","Fragments":["new,"]},{"Key":"kinda new,","Fragments":["but"]},{"Key":"new, but","Fragments":["thanks"]},{"Key":"but thanks","Fragments":["for"]},{"Key":"me know","Fragments":["about","any","if","if"]},{"Key":"know about","Fragments":["code","the","consoles","`AsReadOnly()`.","the","the","the","your",".AddSeconds","the","\u003ccode\u003etime.Date\u003c/code\u003e","other","string.Concat()"]},{"Key":"about code","Fragments":["being","beeing"]},{"Key":"code being","Fragments":["harder"]},{"Key":"being harder","Fragments":["to"]},{"Key":" You've","Fragments":["used","used","mis-named","created","written","got"]},{"Key":"You've used","Fragments":["an","this"]},{"Key":"used an","Fragments":["expression","XOR","array","array","enum","external"]},{"Key":"an expression","Fragments":["of","like"]},{"Key":"expression of","Fragments":["the"]},{"Key":"form `something","Fragments":["?"]},{"Key":": false`.","Fragments":["This"]},{"Key":"false`. This","Fragments":["can"]},{"Key":"expressed as","Fragments":["just"]},{"Key":"as just","Fragments":["`something`."]},{"Key":"just `something`.","Fragments":["The"]},{"Key":"`something`. The","Fragments":["rest"]},{"Key":"The rest","Fragments":["is","of"]},{"Key":"rest is","Fragments":["redundant."]},{"Key":"Also, you","Fragments":["don't","wouldn't","have","should","are","don't","should","might","can"]},{"Key":"need any","Fragments":["of","nesting","other","help,"]},{"Key":"of those","Fragments":["using","conditions","that","is","times.","optimization","same","values","who","perpetual","situations","two"]},{"Key":"those using","Fragments":["statements,","statements."]},{"Key":"using statements,","Fragments":["so","and","and","and"]},{"Key":"probably delete","Fragments":["them."]},{"Key":"little confusing","Fragments":["to","at"]},{"Key":"me but","Fragments":["it","YMMV"]},{"Key":"it passes","Fragments":["all","the","`%","the","the","the","the","the","the","all","all"]},{"Key":"passes all","Fragments":["the","the","the","tests.","the","the","tests.","the"]},{"Key":"var on","Fragments":["lines"]},{"Key":"on lines","Fragments":["10,","7,"]},{"Key":"lines 10,","Fragments":["14"]},{"Key":"10, 14","Fragments":["and"]},{"Key":"14 and","Fragments":["16."]},{"Key":"and 16.","Fragments":["cleans"]},{"Key":"16. cleans","Fragments":["things"]},{"Key":"cleans things","Fragments":["up"]},{"Key":"things up","Fragments":["a","a","in"]},{"Key":"bit with","Fragments":["lists","the","a"]},{"Key":"with lists","Fragments":["of"]},{"Key":"lists of","Fragments":["generics!","primes."]},{"Key":"var newScores","Fragments":["="]},{"Key":"newScores =","Fragments":["new"]},{"Key":"= new","Fragments":["Dictionary\u003cstring,","string(phrase.Where(c","Dictionary\u003cstring,","Dictionary\u003cstring,","Regex","Regex","Dictionary\u003cstring,int\u003e();","Dictionary\u003cstring,int\u003e();","List\u003cstring\u003e();","Dictionary\u003cint,","Dictionary\u003cstring,","Phrase(\"go","Dictionary\u003cstring,","Phrase(\"She","Dictionary\u003cstring,","List\u003cstring\u003e.","Sieve(1000000);","Regex(WordPattern,","Regex(WordPattern,","[]{1,2,3,4,5};","[]{1,2,3,4,5};","Dictionary\u003cString,","HashSet\u003cstring\u003e();","Robot();","Robot();","HashSet\u003cstring\u003e();","Robot();","string('9',","List\u003cstring\u003e()","List\u003cstring\u003e()","List\u003cstring\u003e();","DNA(\"ACTG\");","DNA(\"ACTGX\");","StringBuilder();","Tuple\u003cint,","StringBuilder();","List\u003cstring\u003e();","DateTime(Year,","DateTime(Year,","List\u003cchar\u003e();","DateTime(Year,","DateTime(this.Year,","List\u003cint\u003e();","List\u003cint\u003e();","BitArray(Math.Max(2,","long[0];","System.Diagnostics.Stopwatch();","List\u003cdecimal\u003e","Scrabble();","Dictionary\u003cchar,","Stopwatch();","Sieve(1000).Primes;","Regex(@\"(\u003cb\u003e-?\\d+\u003cb\u003e|","Regex(@\"-?\\d+\",","Phrase(\"She","Dictionary\u003cstring,"]},{"Key":"new Dictionary\u003cstring,","Fragments":["int\u003e();","int\u003e()```","int\u003e()```","int\u003e","int\u003e","int\u003e","int\u003e"]},{"Key":" foreach","Fragments":["(var","(var","(var","(var","(var","(var","(var","(int","(var","(int","(int","(Tuple\u003cint,","(int","(Tuple\u003cint,","(Tuple\u003cint,","(char","(var","(var","(char","(char","(int","(var","(var","(var","(char","(char","(var","(var","(var","(var","(string","=~","is","(var","(string","replaces"]},{"Key":"foreach (var","Fragments":["legacyScore","i","letter","character","character","word","t","s","character","c","character","i","...","...","ruleNumber","ruleNumber","ruleNumber","letter","i"]},{"Key":"(var legacyScore","Fragments":["in"]},{"Key":"legacyScore in","Fragments":["legacyData)"]},{"Key":"also line","Fragments":["16"]},{"Key":"line 16","Fragments":["similarly."]},{"Key":"would take","Fragments":["care","them","or","a","a","a","StringComparison.OrdinalIgnoreCase"]},{"Key":"take care","Fragments":["to","of","of"]},{"Key":"care to","Fragments":["name","elaborate"]},{"Key":"my variables","Fragments":["`o`"]},{"Key":"variables `o`","Fragments":["and"]},{"Key":"`o` and","Fragments":["`i`"]},{"Key":"and `i`","Fragments":["don't"]},{"Key":"`i` don't","Fragments":["mean"]},{"Key":"don't mean","Fragments":["anything"]},{"Key":"mean anything","Fragments":["and","and","to"]},{"Key":"and making","Fragments":["code","them"]},{"Key":"making code","Fragments":["readable","too"]},{"Key":"readable is","Fragments":["important.","a","a"]},{"Key":"simplify line","Fragments":["12","39"]},{"Key":"12 to","Fragments":["`"]},{"Key":"to `","Fragments":["foreach"]},{"Key":"` foreach","Fragments":["(var"]},{"Key":"(var i","Fragments":["in","=","=","in","in"]},{"Key":"i in","Fragments":["o.Value)`","primes)","Enumerable.Range(0,","_range)"]},{"Key":"in o.Value)`","Fragments":["the"]},{"Key":"o.Value)` the","Fragments":["`Where`"]},{"Key":"the `Where`","Fragments":["is"]},{"Key":"`Where` is","Fragments":["not","looking"]},{"Key":"I picked","Fragments":["up"]},{"Key":"picked up","Fragments":["the","a","by"]},{"Key":"the bad","Fragments":["_","ones.","ones."]},{"Key":"bad _","Fragments":["habit"]},{"Key":"_ habit","Fragments":["somewhere"]},{"Key":"habit somewhere","Fragments":["long"]},{"Key":"somewhere long","Fragments":["ago."]},{"Key":"long ago.","Fragments":["Time"]},{"Key":"ago. Time","Fragments":["to"]},{"Key":"Time to","Fragments":["kill"]},{"Key":"to kill","Fragments":["it."]},{"Key":"Ah, didn't","Fragments":["think"]},{"Key":"about multithreading,","Fragments":["thanks."]},{"Key":"other way?","Fragments":[":)"]},{"Key":"that introducing","Fragments":["the"]},{"Key":"introducing the","Fragments":["`key`"]},{"Key":"the `key`","Fragments":["variable"]},{"Key":"`key` variable","Fragments":["(line"]},{"Key":"variable (line","Fragments":["16)","17)"]},{"Key":"(line 16)","Fragments":["really"]},{"Key":"16) really","Fragments":["adds"]},{"Key":"really adds","Fragments":["much"]},{"Key":"adds much","Fragments":["over"]},{"Key":"much over","Fragments":["if","engineering"]},{"Key":"over if","Fragments":["you"]},{"Key":"you just","Fragments":["inlined","reverse","want","created","hand","need","used","went","replace","use","re-write","removed)","have","pass","return","as","want","know"]},{"Key":"just inlined","Fragments":["it"]},{"Key":"inlined it","Fragments":["into"]},{"Key":"it into","Fragments":["line","two","a","one","one","me).","a","helper","a","parts.","your","a","your"]},{"Key":"into line","Fragments":["19?"]},{"Key":"no test","Fragments":["for","for","for"]},{"Key":"your ArgumentException","Fragments":["(and"]},{"Key":"ArgumentException (and","Fragments":["I"]},{"Key":"that strictly","Fragments":["it"]},{"Key":"strictly it","Fragments":["is"]},{"Key":"an argument","Fragments":["exception","and","check","for","to"]},{"Key":"argument exception","Fragments":["`InvalidDataException`"]},{"Key":"exception `InvalidDataException`","Fragments":["maybe)"]},{"Key":"the letter","Fragments":["out","lookup","lookup","you","is","'z'."]},{"Key":"letter out","Fragments":["and"]},{"Key":"out and","Fragments":["call","lots","lots","made","cut","the","do","move","then"]},{"Key":"and call","Fragments":["`.ToLower`"]},{"Key":"call `.ToLower`","Fragments":["at"]},{"Key":"`.ToLower` at","Fragments":["the"]},{"Key":"the `.Add`","Fragments":["syntax"]},{"Key":"`.Add` syntax","Fragments":["over"]},{"Key":"syntax over","Fragments":["`[]`"]},{"Key":"over `[]`","Fragments":["but"]},{"Key":"`[]` but","Fragments":["I"]},{"Key":"that upset","Fragments":["by"]},{"Key":"upset by","Fragments":["it"]},{"Key":"by it","Fragments":[":)"]},{"Key":" Makes","Fragments":["my","sense--thanks"]},{"Key":"Makes my","Fragments":["eyes"]},{"Key":"eyes bleed","Fragments":["a"]},{"Key":"bleed a","Fragments":["bit!"]},{"Key":"a bit!","Fragments":["but"]},{"Key":"bit! but","Fragments":["I"]},{"Key":"just not","Fragments":["being","sure","yet","add"]},{"Key":"being used","Fragments":["to"]},{"Key":"On line","Fragments":["13","16,","17,","13","12,"]},{"Key":"line 13","Fragments":["why","on","you","you","doesn't"]},{"Key":"13 why","Fragments":["not"]},{"Key":"why not","Fragments":["do","use","simply","go","avoid","just","use,say,","do","just","use","copy","just","return","make","SortedSet()?","just","the","use","make","use","replace"]},{"Key":"not do","Fragments":["`...new","any","the","the","it"]},{"Key":"do `...new","Fragments":["{Key"]},{"Key":"`...new {Key","Fragments":["="]},{"Key":"{Key =","Fragments":["val.ToLower(),"]},{"Key":"= val.ToLower(),","Fragments":["Value"]},{"Key":"val.ToLower(), Value","Fragments":["="]},{"Key":"Value =","Fragments":["kvp.Key}...`","kvp.Key"]},{"Key":"= kvp.Key}...`","Fragments":["so"]},{"Key":"kvp.Key}...` so","Fragments":["the"]},{"Key":"the cast","Fragments":["has"]},{"Key":"cast has","Fragments":["already"]},{"Key":"already happened","Fragments":["when"]},{"Key":"happened when","Fragments":["you"]},{"Key":"you construct","Fragments":["your"]},{"Key":"construct your","Fragments":["dictionary?","scheduler."]},{"Key":"use `var`","Fragments":["rather","as","instead"]},{"Key":"`var` rather","Fragments":["than"]},{"Key":"than spell","Fragments":["the"]},{"Key":"spell the","Fragments":["whole"]},{"Key":"whole generic","Fragments":["out"]},{"Key":"generic out","Fragments":["on"]},{"Key":"out on","Fragments":["lines","'null'","the","half"]},{"Key":"lines 7,","Fragments":["10"]},{"Key":"7, 10","Fragments":["and"]},{"Key":"10 and","Fragments":["also"]},{"Key":"and also","Fragments":["for","that","operates","not","the","more","easier"]},{"Key":"also for","Fragments":["the","special"]},{"Key":"string on","Fragments":["line","every"]},{"Key":" variables","Fragments":["named"]},{"Key":"variables named","Fragments":["`s`"]},{"Key":"named `s`","Fragments":["are"]},{"Key":"`s` are","Fragments":["not"]},{"Key":"helpful as","Fragments":["to"]},{"Key":"Actually, it","Fragments":["is"]},{"Key":"a pretty","Fragments":["nice","way","silly","straightforward","basic","lazy","minor","straightforward","cool"]},{"Key":"pretty nice","Fragments":["way"]},{"Key":"nice way","Fragments":["to","to"]},{"Key":"to sanitize","Fragments":["the"]},{"Key":"sanitize the","Fragments":["string."]},{"Key":"the string.","Fragments":["I","A","I","Here","Also","I"]},{"Key":"string. I","Fragments":["used","did","would"]},{"Key":"a linq","Fragments":["query","query","expression,","statement","equivalent","query","one"]},{"Key":"linq query","Fragments":["that","with","in","expression","syntax,"]},{"Key":"query that","Fragments":["might"]},{"Key":"readable in","Fragments":["the","it's","the","this","the","the"]},{"Key":"the future,","Fragments":["but","if","whereas","if"]},{"Key":"future, but","Fragments":["yours"]},{"Key":"but yours","Fragments":["is","will","still","beats"]},{"Key":"yours is","Fragments":["much","far"]},{"Key":"is much","Fragments":["more","easier","nicer","easier","less","more","cleaner","more","simpler","easier","better","more","better","less","better","better.","simpler","more","quicker"]},{"Key":"to using","Fragments":["the","the","short-circuit","equals","comments.","arrays.","char","modulus,",".Add","\u003cb\u003eRegex\u003c/b\u003e","var,","a","Dictionary","Sets,","Linq"]},{"Key":"the `.Add()`","Fragments":["methods"]},{"Key":"`.Add()` methods","Fragments":["rather"]},{"Key":"methods rather","Fragments":["than","than"]},{"Key":"the `[]`","Fragments":["style."]},{"Key":"`[]` style.","Fragments":["I"]},{"Key":"style. I","Fragments":["feel","am","didn't","can"]},{"Key":"used `.ToLowerInvariant`...","Fragments":["but"]},{"Key":"`.ToLowerInvariant`... but","Fragments":["is"]},{"Key":"that right?","Fragments":["If"]},{"Key":"right? If","Fragments":["our"]},{"Key":"If our","Fragments":["scrabble"]},{"Key":"our scrabble","Fragments":["board"]},{"Key":"scrabble board","Fragments":["is"]},{"Key":"board is","Fragments":["Turkish"]},{"Key":"is Turkish","Fragments":["and"]},{"Key":"Turkish and","Fragments":["we"]},{"Key":"in Turkey","Fragments":["maybe"]},{"Key":"Turkey maybe","Fragments":["we"]},{"Key":"maybe we","Fragments":["want"]},{"Key":"want the","Fragments":["local","compiler","members","rest"]},{"Key":"the local","Fragments":["culture","variable","variable","variable","variable","variable,","variable","variable","variable","value,","`keyValue`"]},{"Key":"local culture","Fragments":["to"]},{"Key":"culture to","Fragments":["be"]},{"Key":"So, I'm","Fragments":["trying","posting"]},{"Key":"out chaining","Fragments":["Linq."]},{"Key":"chaining Linq.","Fragments":["I"]},{"Key":"Linq. I","Fragments":["broke","should","think","think","think","think"]},{"Key":"broke it","Fragments":["into"]},{"Key":"two pieces","Fragments":["to"]},{"Key":"pieces to","Fragments":["show"]},{"Key":"show the","Fragments":["transformation","```Note"]},{"Key":"the transformation","Fragments":["and","of"]},{"Key":"transformation and","Fragments":["packaging"]},{"Key":"and packaging","Fragments":["as"]},{"Key":"packaging as","Fragments":["two"]},{"Key":"as two","Fragments":["different","words","1-liners"]},{"Key":"two different","Fragments":["steps.","blocks.","methods","ways","return"]},{"Key":" Removing","Fragments":["the","ToList()"]},{"Key":"Removing the","Fragments":["\"clarifying","else"]},{"Key":"the \"clarifying","Fragments":["variable\""]},{"Key":"\"clarifying variable\"","Fragments":["does"]},{"Key":"variable\" does","Fragments":["make"]},{"Key":"this feel","Fragments":["more"]},{"Key":"readable. Thanks","Fragments":["for"]},{"Key":"I'm undecided","Fragments":["on","on"]},{"Key":"undecided on","Fragments":["whether","how"]},{"Key":"on whether","Fragments":["enough","to"]},{"Key":"whether enough","Fragments":["information"]},{"Key":"enough information","Fragments":["has","about"]},{"Key":"information has","Fragments":["been"]},{"Key":"has been","Fragments":["supplied","standard","shared","some","around","duplicated","added","fried"]},{"Key":"been supplied","Fragments":["to"]},{"Key":"supplied to","Fragments":["warrant"]},{"Key":"to warrant","Fragments":["any","the"]},{"Key":"warrant any","Fragments":["order"]},{"Key":"any order","Fragments":["of","and"]},{"Key":"the left/right","Fragments":["sides"]},{"Key":"left/right sides","Fragments":["of"]},{"Key":"sides of","Fragments":["the"]},{"Key":"the OR.","Fragments":["It"]},{"Key":"OR. It","Fragments":["could"]},{"Key":"could just","Fragments":["so","get","use","be","be","use:","do","SelectMany","be:","check","as","return","return","omit","call","as","assign","pass","return","do","do","skip","do:"]},{"Key":"just so","Fragments":["happen","the","happens"]},{"Key":"so happen","Fragments":["that"]},{"Key":"happen that","Fragments":["this"]},{"Key":"this method","Fragments":["is","to","should","are","will","one","in","be"]},{"Key":"called mainly","Fragments":["with"]},{"Key":"mainly with","Fragments":["multiples"]},{"Key":"with multiples","Fragments":["of","3"]},{"Key":"multiples of","Fragments":["400,","each","the","i","all","'nextNumber'","your","more"]},{"Key":"of 400,","Fragments":["meaning","so"]},{"Key":"400, meaning","Fragments":["the"]},{"Key":"meaning the","Fragments":["reverse","conversation"]},{"Key":"the reverse","Fragments":["order","order"]},{"Key":"reverse order","Fragments":["would","that"]},{"Key":"order would","Fragments":["be"]},{"Key":"more performant.","Fragments":["Or,"]},{"Key":"performant. Or,","Fragments":["it"]},{"Key":"Or, it","Fragments":["could"]},{"Key":"you assume,","Fragments":["that"]},{"Key":"assume, that","Fragments":["all"]},{"Key":"all years","Fragments":["have","that"]},{"Key":"years have","Fragments":["an","no"]},{"Key":"an equal","Fragments":["chance"]},{"Key":"equal chance","Fragments":["of"]},{"Key":"being called.","Fragments":["Either","If"]},{"Key":"called. Either","Fragments":["could"]},{"Key":"Either could","Fragments":["be"]},{"Key":"be right","Fragments":["however,"]},{"Key":"right however,","Fragments":["possibly"]},{"Key":"however, possibly","Fragments":["meaning"]},{"Key":"possibly meaning","Fragments":["that"]},{"Key":"meaning that","Fragments":["the","if"]},{"Key":"order is","Fragments":["negligible."]},{"Key":" Reviewed","Fragments":["my"]},{"Key":"Reviewed my","Fragments":["code"]},{"Key":"and simplified","Fragments":["it","a"]},{"Key":"simplified it","Fragments":["using","and"]},{"Key":"it using","Fragments":["Linq","nested","letter","the","an","Matches,","linq?"]},{"Key":"using Linq","Fragments":["expressions","or","was","rather","in"]},{"Key":"Linq expressions","Fragments":["and"]},{"Key":"expressions and","Fragments":["SequenceEqual.","tried","looks"]},{"Key":"used clarifying","Fragments":["variables"]},{"Key":"clarifying variables","Fragments":["in"]},{"Key":"variables in","Fragments":["IsAnAnagram","intellisense","C#."]},{"Key":"in IsAnAnagram","Fragments":["to"]},{"Key":"IsAnAnagram to","Fragments":["make"]},{"Key":"the comparisons","Fragments":["more","were"]},{"Key":"comparisons more","Fragments":["clear."]},{"Key":"more clear.","Fragments":["The","You"]},{"Key":"clear. The","Fragments":["other"]},{"Key":"The other","Fragments":["chains"]},{"Key":"other chains","Fragments":["seem"]},{"Key":"chains seem","Fragments":["to"]},{"Key":"read well","Fragments":["enough.","with"]},{"Key":"have focused","Fragments":["on"]},{"Key":"focused on","Fragments":["reduse","simplifying","making"]},{"Key":"on reduse","Fragments":["nested"]},{"Key":"reduse nested","Fragments":["foreach."]},{"Key":"had anything","Fragments":["to"]},{"Key":"anything to","Fragments":["nitpick","readability","strands","do","do","pass?","actually"]},{"Key":"nitpick about","Fragments":["I","in"]},{"Key":"about I","Fragments":["would"]},{"Key":"would argue","Fragments":["that","that"]},{"Key":"argue that","Fragments":["```IEnumerable```","prefixes","using","doing","doing","it"]},{"Key":"that ```IEnumerable```","Fragments":["variables"]},{"Key":"```IEnumerable``` variables","Fragments":["are"]},{"Key":"variables are","Fragments":["best","not","named"]},{"Key":"are best","Fragments":["expressed","for"]},{"Key":"best expressed","Fragments":["with"]},{"Key":"expressed with","Fragments":["a"]},{"Key":"a ```var```","Fragments":["but"]},{"Key":"```var``` but","Fragments":["that's"]},{"Key":"preference thing.","Fragments":["Well"]},{"Key":"thing. Well","Fragments":["done."]},{"Key":"like it.","Fragments":["It's","I","That","Should","Short","Can","When","You"]},{"Key":"it. It's","Fragments":["very","very"]},{"Key":"It's very","Fragments":["expressive","concise,","clear","simple"]},{"Key":"very expressive","Fragments":["and"]},{"Key":"straightforward. I","Fragments":["hadn't"]},{"Key":"hadn't seen","Fragments":["the"]},{"Key":"seen the","Fragments":["SequenceEqual","single-line"]},{"Key":"the SequenceEqual","Fragments":["before."]},{"Key":"SequenceEqual before.","Fragments":["If"]},{"Key":"before. If","Fragments":["there"]},{"Key":"one thing","Fragments":["I'd","I","that","you","I"]},{"Key":"thing I'd","Fragments":["nitpick,","probably","suggest","suggest","consider"]},{"Key":"I'd nitpick,","Fragments":["it"]},{"Key":"nitpick, it","Fragments":["might"]},{"Key":"be using","Fragments":["that","IDictionary\u003c\u003e","dictionarys.","this","more","the","VS2010","\"foreach\""]},{"Key":"using that","Fragments":["in","you","over","either.","in","static"]},{"Key":"in stead","Fragments":["of"]},{"Key":"stead of","Fragments":["a"]},{"Key":"a plain","Fragments":["string"]},{"Key":"plain string","Fragments":["compare"]},{"Key":"string compare","Fragments":["to"]},{"Key":"compare to","Fragments":["calculate"]},{"Key":"calculate wordsAreDifferent,","Fragments":["but"]},{"Key":"wordsAreDifferent, but","Fragments":["I"]},{"Key":"sure I'm","Fragments":["sold"]},{"Key":"I'm sold","Fragments":["on"]},{"Key":"on SortedSet,","Fragments":["but"]},{"Key":"SortedSet, but","Fragments":["it"]},{"Key":"tests pass.","Fragments":["It","I"]},{"Key":"pass. It","Fragments":["doesn't"]},{"Key":"It doesn't","Fragments":["allow","take","add","calculate","add","work"]},{"Key":"doesn't allow","Fragments":["duplicates,","modification"]},{"Key":"allow duplicates,","Fragments":["which"]},{"Key":"duplicates, which","Fragments":["would"]},{"Key":"which would","Fragments":["likely","automatically","defeat","be","be","be","be","be","get","be","push","fulfill","be","be","dirty","take"]},{"Key":"would likely","Fragments":["be","take"]},{"Key":"likely be","Fragments":["a","important"]},{"Key":"problem if","Fragments":["this","the"]},{"Key":"this was","Fragments":["actually","actually","not","an","mentioned","pretty","one","not","slightly","the","an","really","pretty","fun","in","a","an","the","part"]},{"Key":"actually used","Fragments":["by","by"]},{"Key":"used by","Fragments":["a","a","just"]},{"Key":"said, if","Fragments":["this","you"]},{"Key":"a school,","Fragments":["we"]},{"Key":"school, we","Fragments":["would"]},{"Key":"we would","Fragments":["probably","just","also"]},{"Key":"probably want","Fragments":["to","to","to","to"]},{"Key":"the stored","Fragments":["value"]},{"Key":"stored value","Fragments":["unique"]},{"Key":"value unique","Fragments":["somehow"]},{"Key":"unique somehow","Fragments":["anyway,"]},{"Key":"somehow anyway,","Fragments":["rather"]},{"Key":"anyway, rather","Fragments":["than"]},{"Key":"than have","Fragments":["a","a","2"]},{"Key":"list with","Fragments":["fifteen","all"]},{"Key":"with fifteen","Fragments":["\"Jennifers\""]},{"Key":"fifteen \"Jennifers\"","Fragments":["and"]},{"Key":"\"Jennifers\" and","Fragments":["no"]},{"Key":"no knowledge","Fragments":["of"]},{"Key":"knowledge of","Fragments":["which"]},{"Key":"of which","Fragments":["was","the","years","are","day","are","should"]},{"Key":" Unless,","Fragments":["of"]},{"Key":"Unless, of","Fragments":["course,"]},{"Key":"of course,","Fragments":["they","a"]},{"Key":"course, they","Fragments":["just"]},{"Key":"they just","Fragments":["need"]},{"Key":"just need","Fragments":["to","to","to","to"]},{"Key":"know counts...who","Fragments":["is"]},{"Key":"counts...who is","Fragments":["the"]},{"Key":"the customer","Fragments":["on"]},{"Key":"customer on","Fragments":["this?"]},{"Key":"two thoughts","Fragments":["with"]},{"Key":"thoughts with","Fragments":["this:"]},{"Key":" 1)","Fragments":["In","Nested","I","Yeah,","Is","Replaced","Regex.Replace(input,","You","You","Can","There","Add","AnySideIsInvalid","The","Correct,","Enumerable.Range()","The","As","I","My","Extending","It's"]},{"Key":"1) In","Fragments":["Grade(...)"]},{"Key":"In Grade(...)","Fragments":["you"]},{"Key":"Grade(...) you","Fragments":["return"]},{"Key":"you return","Fragments":["a","early,","IDictionary\u003c\u003e,","IEnumerable\u003clong\u003e","Scalene.","`IEnumerable\u003cT\u003e`"]},{"Key":"new list","Fragments":["that","again.","each","for","gets","compared","is","to"]},{"Key":"list that","Fragments":["isn't","isn't","we"]},{"Key":"that isn't","Fragments":["attached","attached","attached","to"]},{"Key":"isn't attached","Fragments":["to","to","to"]},{"Key":"attached to","Fragments":["anything.","anything,","the","anything"]},{"Key":"to anything.","Fragments":["I"]},{"Key":"anything. I","Fragments":["might"]},{"Key":"might expect","Fragments":["that"]},{"Key":"expect that","Fragments":["if","to","if"]},{"Key":"this list","Fragments":["and"]},{"Key":"list and","Fragments":["then","adding","do","then","then","then","then","array.","return"]},{"Key":"then call","Fragments":["Add(...)","List.Sort","IsDigit().","the"]},{"Key":"call Add(...)","Fragments":["that"]},{"Key":"Add(...) that","Fragments":["my"]},{"Key":"that my","Fragments":["local","solution","solution","solution","first","current"]},{"Key":"my local","Fragments":["list","it"]},{"Key":"local list","Fragments":["will"]},{"Key":"list will","Fragments":["be","get"]},{"Key":" 2)","Fragments":["If","It","I'm","I","Is","I","Working","check","You","True,","The","Similarly","You","Why","Yeah,","In","Using","Your","The","Your","Creating","The"]},{"Key":"2) If","Fragments":["you"]},{"Key":"a SortedSet\u003c\u003e","Fragments":["instead"]},{"Key":"SortedSet\u003c\u003e instead","Fragments":["of"]},{"Key":"a List\u003c\u003e","Fragments":["to"]},{"Key":"List\u003c\u003e to","Fragments":["store"]},{"Key":"to store","Fragments":["names,","the","processed","the","it","a","all","all","the","the","the","the","the","a","the","lastMax."]},{"Key":"store names,","Fragments":["you"]},{"Key":"names, you","Fragments":["don't"]},{"Key":"to call","Fragments":["the","Grade,","a","`.IsLeap`","out","any",".Sort()","it","`.Substring()`",".ToString()","ToUpper,","Clear).","Contains","String.Format()","_startDate.AddSeconds(gigaSecond)","sum","Char.ToLower()","'%'","another","`multiples.Clear()`","ToCharArray","your"]},{"Key":"call the","Fragments":["Sort()","function","other.","static","static","other?","instance","static","addWord"]},{"Key":"the Sort()","Fragments":["method.","in"]},{"Key":" SortedSet\u003c\u003e","Fragments":["could"]},{"Key":"SortedSet\u003c\u003e could","Fragments":["be"]},{"Key":"be an","Fragments":["alternative","extension","invaluable","issue","enumeration","expensive","exception","idea"]},{"Key":"an alternative","Fragments":["of","solution","already","to"]},{"Key":"alternative of","Fragments":["List\u003c\u003e"]},{"Key":"of List\u003c\u003e","Fragments":["in"]},{"Key":"List\u003c\u003e in","Fragments":["the"]},{"Key":"the roster","Fragments":["dictionary.","would","variable.","un-editable","by"]},{"Key":"new List\u003c\u003e","Fragments":["that","should"]},{"Key":"List\u003c\u003e that","Fragments":["isn't"]},{"Key":"to anything,","Fragments":["even"]},{"Key":"anything, even","Fragments":["though"]},{"Key":"even though","Fragments":["it","there","Visual","we","my","they","it"]},{"Key":"the tests.","Fragments":["It","The","I","They",":smile:","I'm","I","Most","I","Most","I","I","The","It"]},{"Key":"tests. It","Fragments":["seems","fails","wouldn't"]},{"Key":"a clarifying","Fragments":["test"]},{"Key":"clarifying test","Fragments":["defining"]},{"Key":"test defining","Fragments":["whether"]},{"Key":"defining whether","Fragments":["the"]},{"Key":"List\u003c\u003e should","Fragments":["remain"]},{"Key":"should remain","Fragments":["attached"]},{"Key":"remain attached","Fragments":["to"]},{"Key":"roster would","Fragments":["be"]},{"Key":"personally use","Fragments":["the","it"]},{"Key":"the ReadOnly*","Fragments":["classes."]},{"Key":"ReadOnly* classes.","Fragments":["ReadOnlyCollection"]},{"Key":"classes. ReadOnlyCollection","Fragments":["has"]},{"Key":"ReadOnlyCollection has","Fragments":["existed"]},{"Key":"has existed","Fragments":["for"]},{"Key":"existed for","Fragments":["a"]},{"Key":"a while,","Fragments":["and"]},{"Key":"while, and","Fragments":["ReadOnlyDictionary"]},{"Key":"and ReadOnlyDictionary","Fragments":["is"]},{"Key":"ReadOnlyDictionary is","Fragments":["in"]},{"Key":"is in","Fragments":[".NET","general,","the","a","the","upper","a","the","the","the","uppercase"]},{"Key":"4.5 IIRC.","Fragments":["Very"]},{"Key":"IIRC. Very","Fragments":["practical!"]},{"Key":"Very clever,","Fragments":["the"]},{"Key":"clever, the","Fragments":["way"]},{"Key":"make `number`","Fragments":["match"]},{"Key":"`number` match","Fragments":["the"]},{"Key":"the array","Fragments":["indexes","with","to","to","you're","would","being","is","of","or"]},{"Key":"array indexes","Fragments":[":-)."]},{"Key":"indexes :-).","Fragments":["I'm"]},{"Key":":-). I'm","Fragments":["not"]},{"Key":"the 2nd","Fragments":["parameter","statement","part","condition,","iteration.","option","iteration."]},{"Key":"2nd parameter","Fragments":["of"]},{"Key":"parameter of","Fragments":["`Enumerable.Range()`"]},{"Key":"of `Enumerable.Range()`","Fragments":["though."]},{"Key":"`Enumerable.Range()` though.","Fragments":["That"]},{"Key":"though. That","Fragments":["calculation","could"]},{"Key":"That calculation","Fragments":["may"]},{"Key":"calculation may","Fragments":["work"]},{"Key":"may work","Fragments":["because"]},{"Key":"work because","Fragments":["the"]},{"Key":"test selects","Fragments":["verses"]},{"Key":"selects verses","Fragments":["1"]},{"Key":"verses 1","Fragments":["to"]},{"Key":"to 3,","Fragments":["which"]},{"Key":"3, which","Fragments":["makes"]},{"Key":"makes `last","Fragments":["-"]},{"Key":"`last -","Fragments":["first"]},{"Key":"- first","Fragments":["+","iteration"]},{"Key":"first +","Fragments":["1"]},{"Key":"+ 1","Fragments":["==","as"]},{"Key":"1 ==","Fragments":["last`."]},{"Key":"That's my","Fragments":["initial","reasoning,","opinion","explanation"]},{"Key":"initial version","Fragments":["as","to"]},{"Key":"version as","Fragments":["well","the"]},{"Key":"well :-D.","Fragments":["The"]},{"Key":":-D. The","Fragments":["problem"]},{"Key":"problem statement","Fragments":["doesn't"]},{"Key":"statement doesn't","Fragments":["say"]},{"Key":"doesn't say","Fragments":["that","anything","that"]},{"Key":"that we're","Fragments":["expected"]},{"Key":"we're expected","Fragments":["to"]},{"Key":"to build","Fragments":["the","a","documentation","the","a","a","solutions.","me","on"]},{"Key":"build the","Fragments":["lyrics","verses."]},{"Key":"the lyrics","Fragments":["from","and"]},{"Key":"lyrics from","Fragments":["parts,"]},{"Key":"from parts,","Fragments":["though"]},{"Key":"parts, though","Fragments":["I"]},{"Key":"that's what","Fragments":["we're","I","I","I","you","happens","you","the","I"]},{"Key":"what we're","Fragments":["supposed"]},{"Key":"we're supposed","Fragments":["to"]},{"Key":"started of","Fragments":["with"]},{"Key":"of with","Fragments":["just","regards"]},{"Key":"just using","Fragments":["the","the","a","\u0026\u0026,","the","an"]},{"Key":"the Modulo","Fragments":["operator","operation"]},{"Key":"Modulo operator","Fragments":["and"]},{"Key":"operator and","Fragments":["concatenated","switched","just","we"]},{"Key":"and concatenated","Fragments":["logic"]},{"Key":"concatenated logic","Fragments":["but"]},{"Key":"logic but","Fragments":["while","I"]},{"Key":"but while","Fragments":["it"]},{"Key":"while it","Fragments":["was","did","is","is","certainly"]},{"Key":"was compact","Fragments":["it"]},{"Key":"compact it","Fragments":["was"]},{"Key":"was pretty","Fragments":["unreadable","straightforward.","stuck","much","picky.","much"]},{"Key":"pretty unreadable","Fragments":["so"]},{"Key":"unreadable so","Fragments":["I"]},{"Key":"I introduced","Fragments":["the","a"]},{"Key":"introduced the","Fragments":["_divisibleBy","method"]},{"Key":"the _divisibleBy","Fragments":["method"]},{"Key":"_divisibleBy method","Fragments":["to"]},{"Key":"it clear","Fragments":["what","that","to"]},{"Key":" @celestine","Fragments":["If","I"]},{"Key":"@celestine If","Fragments":["you"]},{"Key":"the Readme","Fragments":["there's","to","spec","otherwise.","otherwise.","otherwise.","otherwise."]},{"Key":"Readme there's","Fragments":["a"]},{"Key":"a Bonus","Fragments":["Points"]},{"Key":"Bonus Points","Fragments":["section"]},{"Key":"Points section","Fragments":["that"]},{"Key":"section that","Fragments":["talks","asks"]},{"Key":"that talks","Fragments":["about"]},{"Key":"talks about","Fragments":["making"]},{"Key":"about making","Fragments":["sure","a"]},{"Key":"making sure","Fragments":["users"]},{"Key":"sure users","Fragments":["can't"]},{"Key":"users can't","Fragments":["change"]},{"Key":"can't change","Fragments":["your","the","your"]},{"Key":"your internal","Fragments":["collection.","state."]},{"Key":"internal collection.","Fragments":["I"]},{"Key":"collection. I","Fragments":["wrote"]},{"Key":"wrote some","Fragments":["tests","smaller"]},{"Key":"some tests","Fragments":["for","in"]},{"Key":"for that","Fragments":["part","makes","because","it's","first","case.",":smile:",":)","too.","is:","purpose.","kind","any","little","god","need"]},{"Key":"that part","Fragments":["but","even","in"]},{"Key":"part but","Fragments":["didn't"]},{"Key":"but didn't","Fragments":["include","like","come","actually"]},{"Key":"didn't include","Fragments":["them","commas,"]},{"Key":"include them","Fragments":["in"]},{"Key":"my submission...","Fragments":["maybe"]},{"Key":"submission... maybe","Fragments":["I"]},{"Key":"maybe I","Fragments":["should","went","should","should","should","was","can"]},{"Key":"@celestine I","Fragments":["looked"]},{"Key":"at those","Fragments":["but"]},{"Key":"those but","Fragments":["didn't"]},{"Key":"didn't like","Fragments":["the","how","the","using"]},{"Key":"the side","Fragments":["effects","of","count","list,","of"]},{"Key":"side effects","Fragments":["they","as","or,","or","especially"]},{"Key":"effects they","Fragments":["could"]},{"Key":"they could","Fragments":["cause.","not","be","update"]},{"Key":"could cause.","Fragments":["I"]},{"Key":"cause. I","Fragments":["wanted"]},{"Key":"keep ```Roster```","Fragments":["and"]},{"Key":"```Roster``` and","Fragments":["```Grade```'s"]},{"Key":"and ```Grade```'s","Fragments":["return"]},{"Key":"```Grade```'s return","Fragments":["types"]},{"Key":"return types","Fragments":["interfaces"]},{"Key":"types interfaces","Fragments":["and"]},{"Key":"interfaces and","Fragments":["making"]},{"Key":"making them","Fragments":["read-only"]},{"Key":"them read-only","Fragments":["collections"]},{"Key":"read-only collections","Fragments":["would"]},{"Key":"collections would","Fragments":["result"]},{"Key":"in possible","Fragments":["run-time"]},{"Key":"possible run-time","Fragments":["exceptions."]},{"Key":" How","Fragments":["do","do","does","do","could","about","do","would","do","about"]},{"Key":"you solve","Fragments":["the"]},{"Key":"solve the","Fragments":["\",","solution.","issue","same","problem","problem","performance","problem","last","puzzle"]},{"Key":"the \",","Fragments":["and"]},{"Key":"\", and","Fragments":["\"-part"]},{"Key":"and \"-part","Fragments":["between"]},{"Key":"\"-part between","Fragments":["the"]},{"Key":"last presents","Fragments":["from"]},{"Key":"presents from","Fragments":["2nd"]},{"Key":"from 2nd","Fragments":["verse"]},{"Key":"2nd verse","Fragments":["and"]},{"Key":"verse and","Fragments":["out?","I"]},{"Key":"The empty","Fragments":["constructor","constructor"]},{"Key":"empty constructor","Fragments":["can","is"]},{"Key":"constructor can","Fragments":["be","be"]},{"Key":"be deleted,","Fragments":["btw."]},{"Key":" naming","Fragments":["your"]},{"Key":"naming your","Fragments":["private","methods"]},{"Key":"your private","Fragments":["method","methods","method"]},{"Key":"an underscore","Fragments":["is","looks!"]},{"Key":"underscore is","Fragments":["not"]},{"Key":"that usual","Fragments":["(I"]},{"Key":"usual (I","Fragments":["don't"]},{"Key":"(I don't","Fragments":["think)","think"]},{"Key":"don't think)","Fragments":["I"]},{"Key":"think) I","Fragments":["would"]},{"Key":"have gone","Fragments":["with","the","unnoticed,","the"]},{"Key":"gone with","Fragments":["`DivisibleBy`.","\"blabla\""]},{"Key":"would worry","Fragments":["that"]},{"Key":"private static","Fragments":["variable","methods","Regex","Regex","bool","field","List\u003cchar\u003e","readonly","int","void","void","int","readonly","readonly"]},{"Key":"static variable","Fragments":["may","so","so"]},{"Key":"variable may","Fragments":["have"]},{"Key":"have unintended","Fragments":["consequences","consequences."]},{"Key":"unintended consequences","Fragments":["in","in"]},{"Key":"consequences in","Fragments":["a","the"]},{"Key":"a multithreaded","Fragments":["application."]},{"Key":"multithreaded application.","Fragments":["Also"]},{"Key":"application. Also","Fragments":["it"]},{"Key":"Also it","Fragments":["somewhat"]},{"Key":"it somewhat","Fragments":["obfuscates"]},{"Key":"somewhat obfuscates","Fragments":["WHAT"]},{"Key":"obfuscates WHAT","Fragments":["is"]},{"Key":"WHAT is","Fragments":["divisible"]},{"Key":"by the","Fragments":["parameter!","excerise's","excerise's","tests/requirements.","first","function","lambda.","word.","exercise,","ToLower().","compiler","attributes","second","old","tests","tests.","tests.","Gregorian","Julian","tests","time","introduction","way","exercise.","initializer","testing","end,","tests:","extensions","time","exercise","Test","way,","scope","given","public"]},{"Key":"the parameter!","Fragments":["`YearDivisibleBy(int"]},{"Key":"parameter! `YearDivisibleBy(int","Fragments":["year,"]},{"Key":"`YearDivisibleBy(int year,","Fragments":["int"]},{"Key":"year, int","Fragments":["dividend`"]},{"Key":"int dividend`","Fragments":["maybe"]},{"Key":"dividend` maybe","Fragments":["a"]},{"Key":"better interface.","Fragments":["I"]},{"Key":"interface. I","Fragments":["am"]},{"Key":"convinced by","Fragments":["`dividend`"]},{"Key":"by `dividend`","Fragments":["either,"]},{"Key":"`dividend` either,","Fragments":["you"]},{"Key":"either, you","Fragments":["may"]},{"Key":"may very","Fragments":["well"]},{"Key":"very well","Fragments":["be","as","done!"]},{"Key":"well be","Fragments":["correct","a","written:"]},{"Key":"be correct","Fragments":["but","syntax","either."]},{"Key":"correct but","Fragments":["it","the","it's"]},{"Key":"makes me","Fragments":["think","wonder"]},{"Key":"me think","Fragments":["of"]},{"Key":"an investment","Fragments":["dividend."]},{"Key":"about inverting","Fragments":["the"]},{"Key":"check. This","Fragments":["flattens"]},{"Key":"This flattens","Fragments":["the"]},{"Key":"flattens the","Fragments":["chain"]},{"Key":"the chain","Fragments":["of","rather"]},{"Key":"chain of","Fragments":["`if`","shenanigans"]},{"Key":"of `if`","Fragments":["statements"]},{"Key":"statements makeing","Fragments":["it"]},{"Key":"makeing it","Fragments":["slightly"]},{"Key":"it slightly","Fragments":["clearer","easier","from","more","more"]},{"Key":"slightly clearer","Fragments":["which"]},{"Key":"clearer which","Fragments":["return","return"]},{"Key":"which return","Fragments":["goes","statement","goes"]},{"Key":" ﻿","Fragments":["{","if","{","return","}","if","{","return","}","return","}"]},{"Key":"﻿ if","Fragments":["(year%4","((year%100)"]},{"Key":"﻿ return","Fragments":["false;","false;","true;"]},{"Key":"if ((year%100)","Fragments":["=="]},{"Key":"((year%100) ==","Fragments":["0"]},{"Key":"\u0026\u0026 (year%400)","Fragments":["!="]},{"Key":"(year%400) !=","Fragments":["0)"]},{"Key":"Used Func\u003cint,","Fragments":["bool\u003e"]},{"Key":"Func\u003cint, bool\u003e","Fragments":["to","DivisibleBy"]},{"Key":"bool\u003e to","Fragments":["build"]},{"Key":"build a","Fragments":["binary","verse.","Titanic","short"]},{"Key":"a binary","Fragments":["search","tree","to","tree"]},{"Key":"binary search","Fragments":["tree."]},{"Key":"search tree.","Fragments":["While"]},{"Key":"tree. While","Fragments":["the"]},{"Key":"syntax looks","Fragments":["a"]},{"Key":"looks a","Fragments":["little","useful","bit","lot","lot"]},{"Key":"little funky","Fragments":["at"]},{"Key":"funky at","Fragments":["first,"]},{"Key":"at first,","Fragments":["this","but","but","either.","but","but"]},{"Key":"first, this","Fragments":["allows","seems","was"]},{"Key":"this allows","Fragments":["the"]},{"Key":"allows the","Fragments":["rules","code"]},{"Key":"I put","Fragments":["the","the","both","it","Isosceles","a","parentheses","down","the","in"]},{"Key":"statement that","Fragments":["had","resulted","becomes","will","checks","accidentally","would","would","says:","says:"]},{"Key":"that had","Fragments":["a","the","a","values","no"]},{"Key":"had a","Fragments":["higher","hard","look","static","test","test","system","large","built","feeling","lot","big","large","null","lot","look","weird","feeling","glimpse"]},{"Key":"higher chance","Fragments":["of"]},{"Key":"of been","Fragments":["true"]},{"Key":"been true","Fragments":["in"]},{"Key":"true in","Fragments":["the","IsLeap(int","the","the"]},{"Key":"the front","Fragments":["so"]},{"Key":"front so","Fragments":["that"]},{"Key":"2nd statement","Fragments":["wouldn't"]},{"Key":"statement wouldn't","Fragments":["need"]},{"Key":"wouldn't need","Fragments":["to","to","a","an","the","to"]},{"Key":" Yea","Fragments":["that's"]},{"Key":"Yea that's","Fragments":["true."]},{"Key":"that way","Fragments":["since","and","I","I","at","consistently.","and"]},{"Key":"way since","Fragments":["it"]},{"Key":"it pretty","Fragments":["fast"]},{"Key":"pretty fast","Fragments":["when"]},{"Key":"fast when","Fragments":["a"]},{"Key":"when a","Fragments":["year","function","year","method"]},{"Key":"not dividable","Fragments":["by"]},{"Key":"I'll think","Fragments":["about"]},{"Key":"about how","Fragments":["to","to","to","you","slow"]},{"Key":"Technically the","Fragments":["return"]},{"Key":"return strings","Fragments":["should"]},{"Key":"strings should","Fragments":["be"]},{"Key":"be declared","Fragments":["as","as","within","within","twice."]},{"Key":"declared as","Fragments":["constants.","private"]},{"Key":"as constants.","Fragments":["And"]},{"Key":"constants. And","Fragments":["the"]},{"Key":"And the","Fragments":["checks","Gregorian","labmda:"]},{"Key":"checks could","Fragments":["be"]},{"Key":"methods. But","Fragments":["I","reuse"]},{"Key":"be overkill","Fragments":["for","but"]},{"Key":"overkill for","Fragments":["simple","this","this","this"]},{"Key":"simple checks","Fragments":["like"]},{"Key":"checks like","Fragments":["this.","null"]},{"Key":"Ok, so","Fragments":["this","I","I"]},{"Key":"this passes","Fragments":["the","actual"]},{"Key":"the tests,","Fragments":["but","how","just","but","it","but","so","I","and","there","seems","since","but","and","check","but","but","I'm"]},{"Key":"conditional logic","Fragments":["is","is"]},{"Key":"not simple","Fragments":["to"]},{"Key":"simple to","Fragments":["follow.","understand","read."]},{"Key":"will break","Fragments":["apart"]},{"Key":"break apart","Fragments":["the"]},{"Key":"apart the","Fragments":["logical"]},{"Key":"the logical","Fragments":["test","choice"]},{"Key":"logical test","Fragments":["so"]},{"Key":"test so","Fragments":["that","all","thanks"]},{"Key":"is simpler","Fragments":["to","(in","than"]},{"Key":"simpler to","Fragments":["follow.","track","break","just","just","code."]},{"Key":" Wonder","Fragments":["about"]},{"Key":"Wonder about","Fragments":["using"]},{"Key":"a predicate","Fragments":["instead","is"]},{"Key":"predicate instead","Fragments":["of"]},{"Key":"a lambda","Fragments":["here.","and","to","when","containing"]},{"Key":"very minor","Fragments":["point,","nitpick.","nitpicks.","optimization","stuff."]},{"Key":"minor point,","Fragments":["but","your"]},{"Key":"point, but","Fragments":["the","it","my","reuse","I","the","it"]},{"Key":"word is","Fragments":["spelled","less","moot.","not"]},{"Key":"is spelled","Fragments":["\"divisible\"."]},{"Key":"see how","Fragments":["brackets","this","much","that","this","working","many","many","the","how","others","they","to","this","to","in","it"]},{"Key":"how brackets","Fragments":["could"]},{"Key":"brackets could","Fragments":["help"]},{"Key":"could help","Fragments":["there.","them","make"]},{"Key":"help there.","Fragments":["I"]},{"Key":"there. I","Fragments":["was","added","know","used","meant"]},{"Key":"to go","Fragments":["for","that","overboard.","with","with","down","through","through","with","for","through","on","back","back","back","with","with","through","back","through","through","read","down","IMHO,","manage","through"]},{"Key":"the fewest","Fragments":["characters","lines"]},{"Key":"fewest characters","Fragments":["with"]},{"Key":"characters with","Fragments":["a","accents","spaces"]},{"Key":"good variable","Fragments":["name.","name","name"]},{"Key":"variable name.","Fragments":[":)","What","It"]},{"Key":"name. :)","Fragments":["The"]},{"Key":":) The","Fragments":["only","maximum"]},{"Key":"I question","Fragments":["is","the"]},{"Key":"question is","Fragments":["if"]},{"Key":"is if","Fragments":["the","it's","apostrophes","you"]},{"Key":"side should","Fragments":["actually"]},{"Key":"should actually","Fragments":["be","choose"]},{"Key":"actually be","Fragments":["calculated","more","replaced","more"]},{"Key":"calculated first.","Fragments":["That"]},{"Key":"first. That","Fragments":["first"]},{"Key":"That first","Fragments":["part","constructor,"]},{"Key":"first part","Fragments":["has","of"]},{"Key":"part has","Fragments":["a","to"]},{"Key":"of ever","Fragments":["being"]},{"Key":"ever being","Fragments":["correct."]},{"Key":"Also as","Fragments":["a"]},{"Key":"a note,","Fragments":["I"]},{"Key":"note, I","Fragments":["didn't"]},{"Key":"didn't have","Fragments":["a","any","the","date","to","to","any","any"]},{"Key":"a proper","Fragments":["IDE","way","factory","exception","Map()","generator"]},{"Key":"proper IDE","Fragments":["to"]},{"Key":"IDE to","Fragments":["do"]},{"Key":"unit testing.","Fragments":["So","It"]},{"Key":"testing. So","Fragments":["if"]},{"Key":"proper way","Fragments":["to"]},{"Key":"the work,","Fragments":["just","so"]},{"Key":"work, just","Fragments":["let"]},{"Key":"let me","Fragments":["know.","know.","know","use","add","know!","know."]},{"Key":"could definitely","Fragments":["see","be","be"]},{"Key":"definitely see","Fragments":["using"]},{"Key":"see using","Fragments":["a"]},{"Key":"a local","Fragments":["variable","variable","variable.","variable,","variable","variable","variable,","variable","copy,","bool."]},{"Key":"local variable","Fragments":["to","could","'newKey'","\"isLeap\".","altogether,","in","when","in","-","then","first","'currentValue'?","named"]},{"Key":"to assing","Fragments":["the"]},{"Key":"assing the","Fragments":["response"]},{"Key":"the response","Fragments":["to","values","inside","to","type","text","class.","text"]},{"Key":"to inside","Fragments":["of"]},{"Key":"inside of","Fragments":[".Hey()","a","a","nesting.","the"]},{"Key":"of .Hey()","Fragments":["instead"]},{"Key":".Hey() instead","Fragments":["of"]},{"Key":"of using","Fragments":["multiple","my","```KeyValuePair\u003cint,","a","type","this","white","Add","`for`","List\u003cstring\u003e,","an","in-line","```dna1.Substring(i,","regex","EnumerateTo()","a","'ii'","modulus","the","the","{0}","`IndexOf('.')`","one,","the","`Func\u003cT,","the","`DynamicObject`","a"]},{"Key":"using multiple","Fragments":["returns.","conditionals","return","usings"]},{"Key":"this could","Fragments":["be"]},{"Key":"more succinct","Fragments":["using"]},{"Key":"succinct using","Fragments":["a"]},{"Key":"a switch,","Fragments":["but"]},{"Key":"switch, but","Fragments":["the","the"]},{"Key":"to that","Fragments":["eluded","StackOverflow","end","was","grade","in","last","grade,","grade"]},{"Key":"that eluded","Fragments":["me"]},{"Key":"eluded me","Fragments":["at"]},{"Key":"me at","Fragments":["the","least."]},{"Key":" Hehe,","Fragments":["yes,"]},{"Key":"Hehe, yes,","Fragments":["this"]},{"Key":"yes, this","Fragments":["is"]},{"Key":"is from","Fragments":["my","Unity,"]},{"Key":"from my","Fragments":["C++","first","initial","C","classroom","number.","test"]},{"Key":"my C++","Fragments":["solution:"]},{"Key":"C++ solution:","Fragments":["c"]},{"Key":"solution: c","Fragments":["is"]},{"Key":"c is","Fragments":["a","really"]},{"Key":"character ;).","Fragments":["I'll"]},{"Key":";). I'll","Fragments":["make"]},{"Key":"Yes thank","Fragments":["you,"]},{"Key":"thank you,","Fragments":["I","but"]},{"Key":"you, I","Fragments":["knew"]},{"Key":"I knew","Fragments":["I","junior","immediately","the","kind","a"]},{"Key":"knew I","Fragments":["forgot"]},{"Key":"I forgot","Fragments":["to","to","to","about","that","to","to","to","that","to","to"]},{"Key":"forgot to","Fragments":["move","add","do","do","do).","delete","edit","clean","return","update","delete.","change","remove","mention,"]},{"Key":"to move","Fragments":["something.","the","the","into"]},{"Key":"move something.","Fragments":["The"]},{"Key":"something. The","Fragments":["length"]},{"Key":"The length","Fragments":["check"]},{"Key":"check should","Fragments":["be"]},{"Key":"first thing","Fragments":["to","you","that","you"]},{"Key":"thing to","Fragments":["happen.","check","nitpick","be","consider","do","do","the","do","do","hand","do","a","consider","note","note"]},{"Key":" @keshaun","Fragments":["So"]},{"Key":"@keshaun So","Fragments":["your"]},{"Key":"So your","Fragments":["saying","entire","next"]},{"Key":"your saying","Fragments":["I"]},{"Key":"saying I","Fragments":["should","can"]},{"Key":"readme files?","Fragments":[":)"]},{"Key":"also should","Fragments":["have","be","evenly"]},{"Key":"have read","Fragments":["the","all"]},{"Key":"the README","Fragments":["and","notes,"]},{"Key":"README and","Fragments":["used"]},{"Key":"used read","Fragments":["only"]},{"Key":"read only","Fragments":["collections!","because","types"]},{"Key":"only collections!","Fragments":[":)"]},{"Key":" @gertrude,","Fragments":["I"]},{"Key":"@gertrude, I","Fragments":["noticed"]},{"Key":"I noticed","Fragments":["that","that","the","there","that","my","that","you're","that","that","the","after","that","that","that","that"]},{"Key":"noticed that","Fragments":["too.","the","some","nobody","the","(of","in","you","the","when","there"]},{"Key":"that too.","Fragments":["Thanks","I"]},{"Key":"too. Thanks","Fragments":["for"]},{"Key":" Well,","Fragments":["I","you","I","if","there","the","even","your","static","then:","this"]},{"Key":"Well, I","Fragments":["realize","started"]},{"Key":"I realize","Fragments":["that","that","that","I","that","after","this","that","that"]},{"Key":"this can","Fragments":["be","be","be","be","be","be","be","be","be"]},{"Key":"but personally","Fragments":["I"]},{"Key":"personally I","Fragments":["find","think"]},{"Key":"read so","Fragments":["I"]},{"Key":"Returning a","Fragments":["new"]},{"Key":"new empty","Fragments":["list","list,","list,"]},{"Key":"empty list","Fragments":["that","and","and","into","to","by","being","rather","would","if"]},{"Key":"to anything","Fragments":["seems"]},{"Key":"anything seems","Fragments":["wrong"]},{"Key":"seems wrong","Fragments":["to"]},{"Key":"wrong to","Fragments":["me."]},{"Key":"to me.","Fragments":["I",":)",":)","Combining",":-D","I'd","One","Do","I","It"]},{"Key":"me. I","Fragments":["feel","often","like"]},{"Key":"call Grade,","Fragments":["get"]},{"Key":"Grade, get","Fragments":["an"]},{"Key":"get an","Fragments":["empty","int","ArgumentException","nUnit","exception","exception","exception","exception","exception.","empty","exception","unexpected","exception.","idea","exception"]},{"Key":"empty list,","Fragments":["Add,","then","then"]},{"Key":"list, Add,","Fragments":["and"]},{"Key":"Add, and","Fragments":["then"]},{"Key":"then have","Fragments":["that","the","Add()"]},{"Key":"that name","Fragments":["on","originally"]},{"Key":"name on","Fragments":["my"]},{"Key":"my list.","Fragments":["I"]},{"Key":"list. I","Fragments":["wouldn't","am"]},{"Key":"I wouldn't","Fragments":["WANT","call","have","prefer","mention","want","have","say","create","have","have","have","need","think"]},{"Key":"wouldn't WANT","Fragments":["to"]},{"Key":"WANT to","Fragments":["do"]},{"Key":"do that,","Fragments":["but","thanks!","I'd","I","you","at","why"]},{"Key":"that, but","Fragments":["it","there","that's","you","I","I","that","the"]},{"Key":"it feels","Fragments":["like","more","like","a"]},{"Key":"I may","Fragments":["have","not","change","have","be","have","be","not"]},{"Key":"made it","Fragments":["more","in","more","look","a","can","much","more","faster","clear","internal."]},{"Key":"complicated than","Fragments":["it","it","needed","using","it"]},{"Key":"should be....but","Fragments":["I"]},{"Key":"be....but I","Fragments":["did"]},{"Key":"did learn","Fragments":["Regex.","two","about"]},{"Key":" should","Fragments":["be","now"]},{"Key":"be good","Fragments":["enough","if","to","to"]},{"Key":"good enough","Fragments":["for","for","for"]},{"Key":"enough for","Fragments":["accurate","me.","you,"]},{"Key":"for accurate","Fragments":["results,"]},{"Key":"accurate results,","Fragments":["but"]},{"Key":"results, but","Fragments":["the"]},{"Key":"suite organizes","Fragments":["anagrams"]},{"Key":"organizes anagrams","Fragments":["alphabetically,"]},{"Key":"anagrams alphabetically,","Fragments":["so"]},{"Key":"alphabetically, so","Fragments":["the","I'd"]},{"Key":"the Array.Sort","Fragments":["was"]},{"Key":"Array.Sort was","Fragments":["necessary"]},{"Key":"was necessary","Fragments":["to"]},{"Key":"I read","Fragments":["(somewhere","it.","`IsYearDivisible`","the","up","through","it.","distinct","it,","the","`RespondTo.Whatever`","a","it","the","the","the","the","the","up","otherwise"]},{"Key":"read (somewhere","Fragments":["on"]},{"Key":"(somewhere on","Fragments":["the"]},{"Key":"the internet..","Fragments":["so"]},{"Key":"internet.. so","Fragments":["it"]},{"Key":"be accurate)","Fragments":["that"]},{"Key":"accurate) that","Fragments":["`.ToUpper`"]},{"Key":"that `.ToUpper`","Fragments":["is"]},{"Key":"`.ToUpper` is","Fragments":["prefered"]},{"Key":"is prefered","Fragments":["over"]},{"Key":"prefered over","Fragments":["`.ToLower`"]},{"Key":"over `.ToLower`","Fragments":["and"]},{"Key":"`.ToLower` and","Fragments":["there"]},{"Key":"and there","Fragments":["are","are","isa","are","was","were","is","some","is","really","really","really","really"]},{"Key":"some compiler","Fragments":["optimisations"]},{"Key":"compiler optimisations","Fragments":["to"]},{"Key":"optimisations to","Fragments":["make"]},{"Key":"make upper","Fragments":["case"]},{"Key":"upper case","Fragments":["comparisons","characters","the","simply","is","than","version","and","with","(the","characters","as"]},{"Key":"case comparisons","Fragments":["faster"]},{"Key":"comparisons faster","Fragments":["than"]},{"Key":"faster than","Fragments":["lower.","Regex.","my","the","creating","IsLeap2","link","query"]},{"Key":"than lower.","Fragments":["Could"]},{"Key":"lower. Could","Fragments":["be"]},{"Key":" We","Fragments":["already","think","shouldn't","need","don't","can","should","should","can"]},{"Key":"We already","Fragments":["have"]},{"Key":"already have","Fragments":["the","the","the","an","a"]},{"Key":"suite available","Fragments":["so"]},{"Key":"available so","Fragments":["break"]},{"Key":"so break","Fragments":["out"]},{"Key":"break out","Fragments":["the","with","of"]},{"Key":"class in","Fragments":["a","school.","a"]},{"Key":" \"this\"","Fragments":["in"]},{"Key":"\"this\" in","Fragments":["signature","front."]},{"Key":"in signature","Fragments":["IsLeap(this"]},{"Key":"signature IsLeap(this","Fragments":["int"]},{"Key":"IsLeap(this int","Fragments":["y)"]},{"Key":"int y)","Fragments":["is"]},{"Key":"y) is","Fragments":["redundant."]},{"Key":" IsLeap","Fragments":["can","logic"]},{"Key":"IsLeap can","Fragments":["be"]},{"Key":"be refactored","Fragments":["for","into","as","and","into","there","using"]},{"Key":"refactored for","Fragments":["readability"]},{"Key":"by extracting","Fragments":["the"]},{"Key":"extracting the","Fragments":["modulo","modulus","expressions"]},{"Key":"modulo operation","Fragments":["into"]},{"Key":"operation into","Fragments":["a","its"]},{"Key":"private function","Fragments":["IsDivisible(int"]},{"Key":"function IsDivisible(int","Fragments":["year,int"]},{"Key":"IsDivisible(int year,int","Fragments":["divisor)."]},{"Key":" Use","Fragments":["self","**var**","Decimal","\u003ccode\u003e1E9\u003c/code\u003e","a","of","of","TrimStart()","Regex","reflection"]},{"Key":"Use self","Fragments":["explaining"]},{"Key":"self explaining","Fragments":["variable"]},{"Key":"explaining variable","Fragments":["names,"]},{"Key":"variable names,","Fragments":["i.e."]},{"Key":"names, i.e.","Fragments":["\"year\""]},{"Key":"i.e. \"year\"","Fragments":["instead"]},{"Key":"\"year\" instead","Fragments":["of"]},{"Key":"generally considered","Fragments":["less","undesirable"]},{"Key":"considered less","Fragments":["error"]},{"Key":"use {}","Fragments":["on"]},{"Key":"{} on","Fragments":["all"]},{"Key":"on all","Fragments":["if","of","the"]},{"Key":"statements, even","Fragments":["tiny"]},{"Key":"even tiny","Fragments":["ones"]},{"Key":"tiny ones","Fragments":["like"]},{"Key":"ones like","Fragments":["this."]},{"Key":"like this.","Fragments":["These","The","Much","In","Multiple","Simple,","Unfortunately,"]},{"Key":"this. These","Fragments":["things"]},{"Key":"things may","Fragments":["not"]},{"Key":"may not","Fragments":["matter","be","help","be","be","compare","be","always","apply","be","save","work","work","entirely","be","want","be"]},{"Key":"not matter","Fragments":["much"]},{"Key":"matter much","Fragments":["in"]},{"Key":"much in","Fragments":["this","this"]},{"Key":"little class","Fragments":["but"]},{"Key":"class but","Fragments":["the","override","the"]},{"Key":"point is","Fragments":["that","the","that","that","it"]},{"Key":"that these","Fragments":["habits","do"]},{"Key":"these habits","Fragments":["carry"]},{"Key":"habits carry","Fragments":["over"]},{"Key":"carry over","Fragments":["to"]},{"Key":"over to","Fragments":["when","them.","'primes'","Regex.","just"]},{"Key":"to when","Fragments":["you"]},{"Key":"code bigger","Fragments":["stuff"]},{"Key":"bigger stuff","Fragments":["and"]},{"Key":"stuff and","Fragments":["will"]},{"Key":"will cause","Fragments":["problems.","the","Score"]},{"Key":"was overkill","Fragments":["in"]},{"Key":"case or","Fragments":["not."]},{"Key":"first test","Fragments":["is","will","and","within"]},{"Key":"test is","Fragments":["if","wrong","called","better"]},{"Key":"it's divisible","Fragments":["by","by","by","by.","by"]},{"Key":"400, if","Fragments":["it"]},{"Key":"is that's","Fragments":["that."]},{"Key":"it's not,","Fragments":["then"]},{"Key":"not, then","Fragments":["it's","we"]},{"Key":"then it's","Fragments":["leap","divisible","not","not"]},{"Key":"it's leap","Fragments":["if"]},{"Key":"leap if","Fragments":["both"]},{"Key":"if both","Fragments":["it","were"]},{"Key":"both it","Fragments":["is"]},{"Key":"I'm couldn't","Fragments":["run"]},{"Key":"couldn't run","Fragments":["the"]},{"Key":"tests, how","Fragments":["do"]},{"Key":"how do","Fragments":["I","you","I","you"]},{"Key":"do I","Fragments":["run","like","get??","decide?"]},{"Key":"I run","Fragments":["them","the","this","the","it"]},{"Key":"run them","Fragments":["?"]},{"Key":" Standard","Fragments":["conditional."]},{"Key":"Standard conditional.","Fragments":["I"]},{"Key":"conditional. I","Fragments":["did","do"]},{"Key":"did see","Fragments":["another"]},{"Key":"see another","Fragments":["submission"]},{"Key":"another submission","Fragments":["that"]},{"Key":"submission that","Fragments":["just"]},{"Key":"conditional statement","Fragments":["--","that","that"]},{"Key":"statement --","Fragments":["that"]},{"Key":"that seems","Fragments":["to","like","well"]},{"Key":"few less","Fragments":["characters"]},{"Key":"less characters","Fragments":["than"]},{"Key":"characters than","Fragments":["my"]},{"Key":"can't believe","Fragments":["everyone","I","I","I"]},{"Key":"believe everyone","Fragments":["doesn't"]},{"Key":"everyone doesn't","Fragments":["do"]},{"Key":"doesn't do","Fragments":["it","it","is","whole"]},{"Key":"it like","Fragments":["this","this:","this:"]},{"Key":"some fashion.","Fragments":["The"]},{"Key":"fashion. The","Fragments":["biggest"]},{"Key":"biggest nitpick","Fragments":["(which"]},{"Key":"nitpick (which","Fragments":["I"]},{"Key":"I messed","Fragments":["up","it"]},{"Key":"messed up","Fragments":["myself)","(either","my"]},{"Key":"up myself)","Fragments":["is"]},{"Key":"myself) is","Fragments":["that"]},{"Key":"that %","Fragments":["400"]},{"Key":"400 should","Fragments":["be"]},{"Key":"2nd part","Fragments":["of"]},{"Key":"the check.","Fragments":["The","However,","If"]},{"Key":"check. The","Fragments":["4","tests"]},{"Key":"The 4","Fragments":["and"]},{"Key":"and 100","Fragments":["check","is"]},{"Key":"100 check","Fragments":["is","(only"]},{"Key":"more likely","Fragments":["to","to"]},{"Key":"true than","Fragments":["the"]},{"Key":"400 one","Fragments":["(1/24"]},{"Key":"one (1/24","Fragments":["vs"]},{"Key":"(1/24 vs","Fragments":["1/400)"]},{"Key":"vs 1/400)","Fragments":["times."]},{"Key":"We think","Fragments":["alike,"]},{"Key":"think alike,","Fragments":["a"]},{"Key":"alike, a","Fragments":["couple"]},{"Key":"of brackets","Fragments":["(around"]},{"Key":"brackets (around","Fragments":["the"]},{"Key":"(around the","Fragments":["first"]},{"Key":"first modulo)","Fragments":["different"]},{"Key":"modulo) different","Fragments":["to"]},{"Key":"different to","Fragments":["mine.","the","mine."]},{"Key":"to mine.","Fragments":["I"]},{"Key":"mine. I","Fragments":["know","actually","like"]},{"Key":"know they're","Fragments":["not"]},{"Key":"not required,","Fragments":["I","I"]},{"Key":"required, I","Fragments":["added","feel"]},{"Key":"I added","Fragments":["them","the","a","the","the","null","{","are;","one","the","in","a","OrderBy","the","the","another","a","a","a","are","the","a","2888","a","the","Trim()","my","one"]},{"Key":"added them","Fragments":["to"]},{"Key":"to mine","Fragments":["as","and","on"]},{"Key":"mine as","Fragments":["I"]},{"Key":"thought they","Fragments":["helped"]},{"Key":"they helped","Fragments":["the"]},{"Key":"helped the","Fragments":["readability"]},{"Key":"readability a","Fragments":["little","little.","lot"]},{"Key":"little -","Fragments":["actually,"]},{"Key":"- actually,","Fragments":["I"]},{"Key":"actually, I","Fragments":["think"]},{"Key":"think i","Fragments":["like"]},{"Key":"i like","Fragments":["yours","you're"]},{"Key":"like yours","Fragments":["better"]},{"Key":"yours better","Fragments":[":)"]},{"Key":"Why return","Fragments":["true/false"]},{"Key":"return true/false","Fragments":["when","here"]},{"Key":"true/false when","Fragments":["you"]},{"Key":"just get","Fragments":["rid"]},{"Key":"return that","Fragments":["line","one","variable","variable","variable","directly","rather","value.","value,"]},{"Key":"line directly!","Fragments":[":)"]},{"Key":" Amazing","Fragments":["readability."]},{"Key":"Amazing readability.","Fragments":["I"]},{"Key":"readability. I","Fragments":["never","know","imagine","don't","think","think"]},{"Key":"I never","Fragments":["thought","did.","remember","got","claimed","refactored","know","saw"]},{"Key":"never thought","Fragments":["of"]},{"Key":"of that.","Fragments":["Thank","Good","Probably"]},{"Key":"that. Thank","Fragments":["you"]},{"Key":"Looks like","Fragments":["you","you","if","I","you've","you've"]},{"Key":"logic right,","Fragments":["however","however"]},{"Key":"right, however","Fragments":["this","this"]},{"Key":"however this","Fragments":["code","code","should"]},{"Key":"called by","Fragments":["the","the","both","the","the","Transform()"]},{"Key":"the excerise's","Fragments":["supplied","supplied"]},{"Key":"excerise's supplied","Fragments":["Test","Test"]},{"Key":"supplied Test","Fragments":["Suite.","Suite."]},{"Key":"Test Suite.","Fragments":["That","That"]},{"Key":"Suite. That","Fragments":["class","class"]},{"Key":"That class","Fragments":["expects","expects"]},{"Key":"class expects","Fragments":["you","you"]},{"Key":"expects you","Fragments":["to","to"]},{"Key":"class named","Fragments":["`Year`","`Year`"]},{"Key":"named `Year`","Fragments":["that","that"]},{"Key":"`Year` that","Fragments":["implements","implements"]},{"Key":"that implements","Fragments":["a","a","IEnumerable"]},{"Key":"implements a","Fragments":["method","method"]},{"Key":"method `IsLeap(int)`","Fragments":["and","and"]},{"Key":"`IsLeap(int)` and","Fragments":["returns","returns"]},{"Key":"and returns","Fragments":["a","were","a","false","number"]},{"Key":"with @desiree","Fragments":["here."]},{"Key":"@desiree here.","Fragments":["It"]},{"Key":"here. It","Fragments":["helps","should","seems","seems"]},{"Key":"It helps","Fragments":["to"]},{"Key":"helps to","Fragments":["imagine"]},{"Key":"to imagine","Fragments":["if"]},{"Key":"imagine if","Fragments":["the"]},{"Key":"was much","Fragments":["larger","easier"]},{"Key":"much larger","Fragments":["and"]},{"Key":"larger and","Fragments":["returns"]},{"Key":"returns were","Fragments":["all"]},{"Key":"were all","Fragments":["throughout","uppercase,"]},{"Key":"all throughout","Fragments":["the"]},{"Key":"throughout the","Fragments":["method"]},{"Key":"method -","Fragments":["it","why","just","you"]},{"Key":"- it","Fragments":["takes","would","does","could","was","only","will","depends","isn't","was"]},{"Key":"it takes","Fragments":["time","me","a"]},{"Key":"takes time","Fragments":["to","and"]},{"Key":"time to","Fragments":["determine","be","time,","code","figure","generate","create","randomly","write","get","have","see","see","crank","nitpick?","understand","puzzle","puzzle","put","re-implement","do","also","put"]},{"Key":"determine when/where","Fragments":["the"]},{"Key":"when/where the","Fragments":["method"]},{"Key":"returns control","Fragments":["to"]},{"Key":"control to","Fragments":["the"]},{"Key":"the calling","Fragments":["method.","method.","code","site"]},{"Key":" Ended","Fragments":["up"]},{"Key":"Ended up","Fragments":["splitting"]},{"Key":"up splitting","Fragments":["the"]},{"Key":"splitting the","Fragments":["test","string,","string","crypto"]},{"Key":"test unit","Fragments":["and"]},{"Key":"unit and","Fragments":["main"]},{"Key":"and main","Fragments":["function"]},{"Key":"function into","Fragments":["separate"]},{"Key":"separate file.","Fragments":["Commented"]},{"Key":"file. Commented","Fragments":["abit."]},{"Key":"Why not","Fragments":["use","a","just","just","trim","make","directly","combine","just","create","just","do","create","just","return","just","just","just","return","just","lookup"]},{"Key":"build in","Fragments":["Trim,"]},{"Key":"in Trim,","Fragments":["TrimEnd"]},{"Key":"Trim, TrimEnd","Fragments":["and"]},{"Key":"TrimEnd and","Fragments":["TrimsStart"]},{"Key":"and TrimsStart","Fragments":["instead"]},{"Key":"TrimsStart instead","Fragments":["of"]},{"Key":"of you","Fragments":["custom","whole"]},{"Key":"you custom","Fragments":["TrimWord,"]},{"Key":"custom TrimWord,","Fragments":["which"]},{"Key":"TrimWord, which","Fragments":["makes"]},{"Key":"makes your","Fragments":["already","code"]},{"Key":"your already","Fragments":["long","built"]},{"Key":"already long","Fragments":["solution"]},{"Key":"long solution","Fragments":["30%"]},{"Key":"solution 30%","Fragments":["longer?"]},{"Key":"thought regex","Fragments":["solutions"]},{"Key":"regex solutions","Fragments":["(of"]},{"Key":"solutions (of","Fragments":["which"]},{"Key":"(of which","Fragments":["I"]},{"Key":"which I","Fragments":["am","refactored","personally","assume","don't","am","had","really","wish","did","think","advocate","think","cant","feel","hadn't","feel","have","used.","have","did."]},{"Key":"a novice","Fragments":["in)"]},{"Key":"novice in)","Fragments":["should"]},{"Key":"in) should","Fragments":["make"]},{"Key":"should make","Fragments":["this","use"]},{"Key":"solution shorter","Fragments":["rather"]},{"Key":"shorter rather","Fragments":["than"]},{"Key":"First of","Fragments":["all,","all:","all,","all,","all"]},{"Key":"of all,","Fragments":["thank","does","do"]},{"Key":"all, thank","Fragments":["you"]},{"Key":"thank you","Fragments":["to","for","for","again!","for"]},{"Key":"to exercism.io","Fragments":["devs"]},{"Key":"exercism.io devs","Fragments":["because"]},{"Key":"devs because","Fragments":["I've"]},{"Key":"because I've","Fragments":["come"]},{"Key":"I've come","Fragments":["to","to","up"]},{"Key":"come to","Fragments":["learn","realize","it","the","my"]},{"Key":"learn on","Fragments":["how"]},{"Key":"on how","Fragments":["to","to","I","it","I","to","to"]},{"Key":"use NUnit","Fragments":["due","in"]},{"Key":"NUnit due","Fragments":["of"]},{"Key":"due of","Fragments":["this"]},{"Key":"this exercise.","Fragments":["https://www.dropbox.com/s/r9uwmlq788zw5t3/Screenshot%202014-09-24%2011.01.10.png?dl=0","With","You","I","I","Thanks","If","Was","I"]},{"Key":" Included","Fragments":["the","the","code"]},{"Key":"Included the","Fragments":["unit","Main","bool"]},{"Key":"the source","Fragments":["code","string","for","is","here","code"]},{"Key":"source code","Fragments":["because","somehow","and","which"]},{"Key":"code because","Fragments":["apparently","of"]},{"Key":"because apparently","Fragments":["other","I"]},{"Key":"apparently other","Fragments":["[Test]"]},{"Key":"other [Test]","Fragments":["are"]},{"Key":"[Test] are","Fragments":["set"]},{"Key":"are set","Fragments":["to"]},{"Key":"set to","Fragments":["[Ignore].","disable","uppercase","zero,","a","4.5","true?","public"]},{"Key":"to [Ignore].","Fragments":["Perhaps"]},{"Key":"[Ignore]. Perhaps","Fragments":["next"]},{"Key":"Perhaps next","Fragments":["time"]},{"Key":"next time","Fragments":["I"]},{"Key":"should just","Fragments":["put","stick","use","self","read:","define"]},{"Key":"file separately,","Fragments":["idk."]},{"Key":" Previous","Fragments":["submission","solution"]},{"Key":"Previous submission","Fragments":["was"]},{"Key":"submission was","Fragments":["made"]},{"Key":"was made","Fragments":["using"]},{"Key":"made using","Fragments":["non-static"]},{"Key":"using non-static","Fragments":["IsYear"]},{"Key":"non-static IsYear","Fragments":["(stupid"]},{"Key":"IsYear (stupid","Fragments":["me)."]},{"Key":"(stupid me).","Fragments":["Fixed."]},{"Key":"By definition,","Fragments":["leap"]},{"Key":"definition, leap","Fragments":["year"]},{"Key":"not century","Fragments":["year."]},{"Key":"century year.","Fragments":["Century"]},{"Key":"year. Century","Fragments":["year"]},{"Key":"Century year","Fragments":["must"]},{"Key":"year must","Fragments":["be","*always*","be"]},{"Key":"be divisible","Fragments":["by"]},{"Key":"400 to","Fragments":["be"]},{"Key":"be classified","Fragments":["as"]},{"Key":"classified as","Fragments":["leap"]},{"Key":"as leap","Fragments":["year."]},{"Key":"year. Hence","Fragments":["IsYear"]},{"Key":"Hence IsYear","Fragments":["can"]},{"Key":"IsYear can","Fragments":["be"]},{"Key":"be coded","Fragments":["to"]},{"Key":"coded to","Fragments":["a","check"]},{"Key":"line using","Fragments":["modulo","||","an","the"]},{"Key":"using modulo","Fragments":["and"]},{"Key":"modulo and","Fragments":["Boolean"]},{"Key":"and Boolean","Fragments":["And","are"]},{"Key":"Boolean And","Fragments":["\u0026"]},{"Key":"And \u0026","Fragments":["Or"]},{"Key":"\u0026 Or","Fragments":["operations."]},{"Key":"the Main","Fragments":["function","as","signature","class,","method,","method"]},{"Key":"Main function","Fragments":["so"]},{"Key":"function so","Fragments":["the","it","I","the","I","I"]},{"Key":"entire source","Fragments":["can"]},{"Key":"source can","Fragments":["be"]},{"Key":"be compiled","Fragments":["(after"]},{"Key":"compiled (after","Fragments":["downloading"]},{"Key":"(after downloading","Fragments":["NUnit"]},{"Key":"downloading NUnit","Fragments":["using","which"]},{"Key":"NUnit using","Fragments":["NuGet)"]},{"Key":"using NuGet)","Fragments":["without"]},{"Key":"NuGet) without","Fragments":["hassle."]},{"Key":"without hassle.","Fragments":["I"]},{"Key":"hassle. I","Fragments":["don't"]},{"Key":"don't actually","Fragments":["know","have","need"]},{"Key":"actually know","Fragments":["if"]},{"Key":"should do","Fragments":["that","that.","that","better","the","is","the"]},{"Key":"that or","Fragments":["not","I"]},{"Key":"or not","Fragments":["tbh.","leap","in","it","one","is","you"]},{"Key":"have NUnit","Fragments":["on","on"]},{"Key":"NUnit on","Fragments":["my","my","your"]},{"Key":"my machine","Fragments":["either,","either,"]},{"Key":"machine either,","Fragments":["but","but"]},{"Key":"either, but","Fragments":["you","you","in","the"]},{"Key":"can add","Fragments":["a","a","an","up,"]},{"Key":"a project","Fragments":["of","of"]},{"Key":"project of","Fragments":["type","type"]},{"Key":"of type","Fragments":["*Unit","*Unit","List\u003cstring\u003e,","`Func\u003cT\u003e`"]},{"Key":"type *Unit","Fragments":["Test","Test"]},{"Key":"*Unit Test","Fragments":["Project*","Project*"]},{"Key":"Test Project*","Fragments":["to","to"]},{"Key":"Project* to","Fragments":["your","your"]},{"Key":"your solution,","Fragments":["and","and","it's"]},{"Key":"solution, and","Fragments":["then","then"]},{"Key":"then make","Fragments":["some","some","sure"]},{"Key":"make some","Fragments":["small","small","updates."]},{"Key":"some small","Fragments":["adjustments","adjustments"]},{"Key":"small adjustments","Fragments":["to","to"]},{"Key":"adjustments to","Fragments":["the","the"]},{"Key":"test class","Fragments":["to","to","and","are:","was","is","expects."]},{"Key":"class to","Fragments":["allow","allow","be","add","specify","manipulate","work","access","be","handle","the","replicate"]},{"Key":"allow it","Fragments":["to","to"]},{"Key":"use Visual","Fragments":["Studio's","Studio's"]},{"Key":"Visual Studio's","Fragments":["(mstest)","(mstest)"]},{"Key":"Studio's (mstest)","Fragments":["test","test"]},{"Key":"(mstest) test","Fragments":["framework","framework"]},{"Key":"test framework","Fragments":["instead:","instead:"]},{"Key":"public void","Fragments":["Valid_leap_year()","Invalid_leap_year()","Turn_of_the_20th_century_is_not_a_leap_year()","Turn_of_the_25th_century_is_a_leap_year()","Valid_leap_year()","Invalid_leap_year()","Turn_of_the_20th_century_is_not_a_leap_year()","Turn_of_the_25th_century_is_a_leap_year()","That_4_is_divisible_by_2()","That_4_is_not_divisible_by_3()","Nothing_is_divisible_by_0()","Roster_is_immutable()","Grade_through_roster_is_immutable()","Grade_is_immutable()","Handles_null_or_empty_values()","With_free_standing_apostrophes()","With_apostrophes_as_quotes()","Ignores_extra_length_on_other_strand_when_longer()","Ignores_extra_length_on_original_strand_when_longer()","Something(List\u003cstring\u003e","Generates_Unique_Names()","Setup()","Generates_Unique_Names()","Add(string","roster-cannot-be-modified()","Validates-initial-nucleotides()","Should_not_add_students_directly_to_roster()","With_apostrophes_as_quotes()","Should_not_add_students_directly_to_roster()","Andys_Test()"]},{"Key":" why","Fragments":["not","does","use","create","did"]},{"Key":" Cant","Fragments":["see"]},{"Key":"Cant see","Fragments":["how"]},{"Key":"this will","Fragments":["pass","significantly","be","be","be","greatly"]},{"Key":"will pass","Fragments":["all","the","both","if","without"]},{"Key":"tests since","Fragments":["it"]},{"Key":"not handle","Fragments":["apostrophes","large"]},{"Key":"Nice single","Fragments":["liner,"]},{"Key":"single liner,","Fragments":["however"]},{"Key":"liner, however","Fragments":["the"]},{"Key":"however the","Fragments":["first"]},{"Key":"conditional doesn't","Fragments":["need"]},{"Key":"check both","Fragments":["`%"]},{"Key":"both `%","Fragments":["100`"]},{"Key":"`% 100`","Fragments":["and"]},{"Key":"100` and","Fragments":["`%"]},{"Key":"and `%","Fragments":["400`."]},{"Key":"`% 400`.","Fragments":["It"]},{"Key":"400`. It","Fragments":["can"]},{"Key":"just check","Fragments":["`%","what","for","afterwards.","to"]},{"Key":"check `%","Fragments":["400`"]},{"Key":"`% 400`","Fragments":["(ie;"]},{"Key":"400` (ie;","Fragments":["if"]},{"Key":"(ie; if","Fragments":["it"]},{"Key":"passes `%","Fragments":["400`,","100`)"]},{"Key":"`% 400`,","Fragments":["it"]},{"Key":"400`, it","Fragments":["automatically"]},{"Key":"it automatically","Fragments":["passes","made"]},{"Key":"automatically passes","Fragments":["`%"]},{"Key":" Yeap","Fragments":["you're"]},{"Key":"Yeap you're","Fragments":["right,"]},{"Key":"you're right,","Fragments":["I"]},{"Key":"right, I","Fragments":["just","think","missed"]},{"Key":"just coded","Fragments":["the"]},{"Key":"coded the","Fragments":["minimum"]},{"Key":"minimum to","Fragments":["make"]},{"Key":"test pass,","Fragments":["I"]},{"Key":"pass, I","Fragments":["didn't","switched","made","had","used","switched","feel"]},{"Key":"didn't focus","Fragments":["on"]},{"Key":"focus on","Fragments":["refactoring.","documentation.","the","only","the","what"]},{"Key":"Looking great","Fragments":["except"]},{"Key":"great except","Fragments":["there"]},{"Key":"except there","Fragments":["appears"]},{"Key":"there appears","Fragments":["to"]},{"Key":"appears to","Fragments":["be","be","be","be","work","be"]},{"Key":"be too","Fragments":["much","much","complicated","hard."]},{"Key":"too much","Fragments":["work","detail","like","about","typing.","if","logic.","of","the","extra","trouble","work.","data","memory)","cluttered","different","ceremony.","to","code","code","like"]},{"Key":"much work","Fragments":["handling","as"]},{"Key":"work handling","Fragments":["zero"]},{"Key":"handling zero","Fragments":["entries"]},{"Key":"zero entries","Fragments":["on"]},{"Key":"entries on","Fragments":["the"]},{"Key":"the three","Fragments":["lines:-","conditional","`rand.Next(0,","return","if-statements","options","variable","sides","options","\"for\"","`IF`"]},{"Key":"am guessing","Fragments":["this"]},{"Key":"guessing this","Fragments":["can","is"]},{"Key":"only solution","Fragments":["that","I"]},{"Key":"as short","Fragments":["as"]},{"Key":"short as","Fragments":["mine"]},{"Key":"as mine","Fragments":["but"]},{"Key":"mine but","Fragments":["I"]},{"Key":"regex just","Fragments":["linq...","for"]},{"Key":"I'm using","Fragments":["sharpdevelop.","`||`,","the","to","Microsoft's","this","your"]},{"Key":"using sharpdevelop.","Fragments":["I've"]},{"Key":"sharpdevelop. I've","Fragments":["gone"]},{"Key":"I've gone","Fragments":["through","back"]},{"Key":"gone through","Fragments":["and"]},{"Key":"through and","Fragments":["modified","changed"]},{"Key":"and modified","Fragments":["my"]},{"Key":"modified my","Fragments":["class","original"]},{"Key":"my class","Fragments":["file","and","it","static"]},{"Key":"file but","Fragments":["now","i"]},{"Key":"now it","Fragments":["says","is","works.","the","makes"]},{"Key":"it says","Fragments":["\"the","to","on","one"]},{"Key":"says \"the","Fragments":["name"]},{"Key":"\"the name","Fragments":["'year'"]},{"Key":"name 'year'","Fragments":["doesn't"]},{"Key":"'year' doesn't","Fragments":["exist"]},{"Key":"the current","Fragments":["context\".","context","context\".","letter","situation","word","form","list.","chosen","number","case","specs,","one","square","day","day","day","solution","expression.","index","character","base.","implementation","context\"","index","2."]},{"Key":"current context\".","Fragments":["Do","I"]},{"Key":"context\". Do","Fragments":["I"]},{"Key":"Do I","Fragments":["need"]},{"Key":"of one","Fragments":["of","of","char","over"]},{"Key":"the classes","Fragments":["in","to","signature.","interface","interface"]},{"Key":"classes in","Fragments":["the","the"]},{"Key":"other, or","Fragments":["inherit"]},{"Key":"or inherit","Fragments":["one"]},{"Key":"inherit one","Fragments":["of"]},{"Key":"classes to","Fragments":["get","group","hold"]},{"Key":"to work?","Fragments":["I've"]},{"Key":"work? I've","Fragments":["never"]},{"Key":"never worked","Fragments":["with","in","in"]},{"Key":"worked with","Fragments":["NUnit","identifying","dictionaries"]},{"Key":"NUnit or","Fragments":["test"]},{"Key":"or test","Fragments":["projects,","and"]},{"Key":"test projects,","Fragments":["so"]},{"Key":"projects, so","Fragments":["I'm"]},{"Key":"so I'm","Fragments":["having","going","interested","used","wondering","still","not","sure","really","not","not","not","not","going","kind","going"]},{"Key":"I'm having","Fragments":["a","problems","a"]},{"Key":"having a","Fragments":["little","function","public","named","single","function","no-arg","hard","zero","new","constructor"]},{"Key":"I wonder","Fragments":["if","what","which","if","if","what","if"]},{"Key":"wonder if","Fragments":["`uint","it'd","there","having","there"]},{"Key":"if `uint","Fragments":["year`"]},{"Key":"`uint year`","Fragments":["is"]},{"Key":"year` is","Fragments":["more"]},{"Key":"the IsSilence()","Fragments":["call"]},{"Key":"IsSilence() call","Fragments":["to"]},{"Key":"of Hey()","Fragments":["since","since"]},{"Key":"Hey() since","Fragments":["it","it"]},{"Key":"it validates","Fragments":["that","that"]},{"Key":"validates that","Fragments":["the","the"]},{"Key":"input string","Fragments":["is","is","to","4","contains","one","can","rather","as"]},{"Key":"not null,","Fragments":["preventing","preventing","either.","so"]},{"Key":"null, preventing","Fragments":["the","the"]},{"Key":"preventing the","Fragments":["possibility","possibility","obvious"]},{"Key":"the possibility","Fragments":["of","of","of","of"]},{"Key":"possibility of","Fragments":["a","a","invalid","overwriting"]},{"Key":"null reference","Fragments":["exception.","exception.","exception","exception.","exception","exceptions"]},{"Key":"the HasNoContent()","Fragments":["call"]},{"Key":"HasNoContent() call","Fragments":["to"]},{"Key":" switched","Fragments":["to"]},{"Key":"switched to","Fragments":["uint","using","this","a"]},{"Key":"to uint","Fragments":["-","as"]},{"Key":"uint -","Fragments":["years"]},{"Key":"- years","Fragments":["can't"]},{"Key":"years can't","Fragments":["be","be"]},{"Key":"can't be","Fragments":["negative.","a","modified.","misconstrued.","negative","negative,","negative?","accessed"]},{"Key":"All I'm","Fragments":["getting"]},{"Key":"I'm getting","Fragments":["is:","almost","better","4"]},{"Key":"The name","Fragments":["'Year'","'usedLettersFromOriginal'"]},{"Key":"name 'Year'","Fragments":["does","does","does"]},{"Key":"'Year' does","Fragments":["not","not","not"]},{"Key":"not exist","Fragments":["in","in","for","in"]},{"Key":"I mentioned","Fragments":["just","above.","in"]},{"Key":"mentioned just","Fragments":["returning"]},{"Key":"just returning","Fragments":["the","true","that","the","the","it","false"]},{"Key":"returning the","Fragments":["conditional","\"Woah,","value","result","result","value","word","result","same","results","response","Grade","Boolean","Boolean","value","same","same","same","same","same","wrong","nucleotideCounts","result","statement"]},{"Key":"conditional just","Fragments":["as"]},{"Key":"were posting.","Fragments":["Readability"]},{"Key":"posting. Readability","Fragments":["in"]},{"Key":"Readability in","Fragments":["a"]},{"Key":"a production","Fragments":["environment,"]},{"Key":"production environment,","Fragments":["definitely."]},{"Key":"environment, definitely.","Fragments":["This"]},{"Key":"definitely. This","Fragments":["is"]},{"Key":"first night","Fragments":["using"]},{"Key":"night using","Fragments":["exercism,"]},{"Key":"exercism, so","Fragments":["I"]},{"Key":"just shooting","Fragments":["from"]},{"Key":"shooting from","Fragments":["the"]},{"Key":"the hip.","Fragments":["Thank"]},{"Key":"hip. Thank","Fragments":["you"]},{"Key":"almost used","Fragments":["Regex"]},{"Key":"used Regex","Fragments":["to","in","to"]},{"Key":"Regex to","Fragments":["check","be","avoid","match","clean"]},{"Key":"check my","Fragments":["input","solution"]},{"Key":"my input","Fragments":["for"]},{"Key":"input for","Fragments":["numbers"]},{"Key":"for numbers","Fragments":[";_;","in","over","greater"]},{"Key":"Doing so","Fragments":["would"]},{"Key":"so would","Fragments":["allow","make","cause"]},{"Key":"would allow","Fragments":["you","only","me","you","you","for"]},{"Key":"test and","Fragments":["submit","the","your","add","run","it","throw,","return."]},{"Key":"and submit","Fragments":["a","once","accordingly.","a"]},{"Key":"submit a","Fragments":["class","PR","pull"]},{"Key":"class called","Fragments":["`Year`","`Year`.","`Year`.","Year","Year,","Year"]},{"Key":"called `Year`","Fragments":["with"]},{"Key":"`Year` with","Fragments":["the","a"]},{"Key":"relevant `IsLeap(int)`","Fragments":["method"]},{"Key":"`IsLeap(int)` method","Fragments":["as"]},{"Key":"exercise hints","Fragments":["at."]},{"Key":"Well, you","Fragments":["can"]},{"Key":"can remove","Fragments":["the","```string.IsNullOrEmpty(hear)```","both","that","them.","two","all"]},{"Key":"requirement to","Fragments":["execute","pass","throw","return","return"]},{"Key":"to execute","Fragments":["the","if","if"]},{"Key":"execute the","Fragments":["tests,"]},{"Key":"tests, just","Fragments":["create"]},{"Key":"just create","Fragments":["another"]},{"Key":"create another","Fragments":["class"]},{"Key":"another class","Fragments":["and"]},{"Key":"your existing","Fragments":["console","project)."]},{"Key":"existing console","Fragments":["app"]},{"Key":"app talk","Fragments":["to"]},{"Key":"talk to","Fragments":["it."]},{"Key":"to it.","Fragments":["It","It's"]},{"Key":"it. It","Fragments":["looks","seems"]},{"Key":"like you're","Fragments":["using","not","solution,","defining"]},{"Key":"you're using","Fragments":["a","the","Visual","the","the","the","a","unit","Hungarian"]},{"Key":"a namespace","Fragments":["called","otherwise"]},{"Key":"namespace called","Fragments":["`leapYear`,"]},{"Key":"called `leapYear`,","Fragments":["so"]},{"Key":"`leapYear`, so","Fragments":["make"]},{"Key":"so make","Fragments":["sure"]},{"Key":"sure your","Fragments":["`Year`","suggestion"]},{"Key":"your `Year`","Fragments":["class"]},{"Key":"`Year` class","Fragments":["uses","with"]},{"Key":"class uses","Fragments":["the"]},{"Key":"uses the","Fragments":["same","Gregorian","index","`.ToUpperInvariant()`"]},{"Key":" Ok","Fragments":["so","based","I"]},{"Key":"Ok so","Fragments":["I"]},{"Key":"idea how","Fragments":["to","to","much","implement"]},{"Key":"NUnit testing","Fragments":["stuff","application","framework,"]},{"Key":"testing stuff","Fragments":["on"]},{"Key":"stuff on","Fragments":["Windows","switch"]},{"Key":"on Windows","Fragments":["with"]},{"Key":"Windows with","Fragments":["Visual"]},{"Key":"Studio 2013","Fragments":["Pro."]},{"Key":"2013 Pro.","Fragments":["I"]},{"Key":"Pro. I","Fragments":["have"]},{"Key":"the tools","Fragments":["installed"]},{"Key":"tools installed","Fragments":["but"]},{"Key":"installed but","Fragments":["I"]},{"Key":"the file","Fragments":["that","with","is","containing","that","as"]},{"Key":"file that","Fragments":["was","holds"]},{"Key":"saved using","Fragments":["UInt16?"]},{"Key":"using UInt16?","Fragments":["I"]},{"Key":"UInt16? I","Fragments":["was"]},{"Key":"thinking along","Fragments":["the"]},{"Key":"along the","Fragments":["lines","lines","lines"]},{"Key":"the lines","Fragments":["of","of","a","of","of","of","of","from"]},{"Key":"of memory","Fragments":["use","since"]},{"Key":"memory use","Fragments":["and"]},{"Key":"use and","Fragments":["efficiency"]},{"Key":"and efficiency","Fragments":["and"]},{"Key":"efficiency and","Fragments":["the","readability"]},{"Key":"think negative","Fragments":["years","should"]},{"Key":"negative years","Fragments":["should","BCE?"]},{"Key":"years should","Fragments":["be","still"]},{"Key":"be valid","Fragments":["but"]},{"Key":"valid but","Fragments":["now"]},{"Key":"about it","Fragments":["in","here:","and","and","though,","first","so","(if"]},{"Key":"in 32bit","Fragments":["and"]},{"Key":"32bit and","Fragments":["64bit"]},{"Key":"and 64bit","Fragments":["OSs"]},{"Key":"64bit OSs","Fragments":["it's"]},{"Key":"OSs it's","Fragments":["probably"]},{"Key":"of 0","Fragments":["=","or","length,","to"]},{"Key":"0 =","Fragments":["year"]},{"Key":"4, is","Fragments":["a"]},{"Key":"little odd","Fragments":["looking"]},{"Key":"odd looking","Fragments":["when"]},{"Key":"looking when","Fragments":["most"]},{"Key":"when most","Fragments":["people"]},{"Key":"people use,","Fragments":["year"]},{"Key":"use, year","Fragments":["%"]},{"Key":"It reads","Fragments":["like","really","fairly"]},{"Key":"your evaluating","Fragments":["0"]},{"Key":" Was","Fragments":["this","there","looking"]},{"Key":"Was this","Fragments":["done"]},{"Key":"this done","Fragments":["because"]},{"Key":"done because","Fragments":["it","the"]},{"Key":"more natural","Fragments":["to","than"]},{"Key":"natural to","Fragments":["you","me,"]},{"Key":"you or","Fragments":["to","the"]},{"Key":"or to","Fragments":["be","the","repeating","refactor"]},{"Key":" Relatively","Fragments":["new"]},{"Key":"Relatively new","Fragments":["to"]},{"Key":"new to","Fragments":["C#,","CSharp","programming,","coding","this,","this","using","C#.","C#.","C#","c#"]},{"Key":"to C#,","Fragments":["having"]},{"Key":"C#, having","Fragments":["minimal"]},{"Key":"having minimal","Fragments":["experience"]},{"Key":"minimal experience","Fragments":["with"]},{"Key":"experience with","Fragments":["it","Linq","their"]},{"Key":"the past","Fragments":["and","when","and","and","as"]},{"Key":"past and","Fragments":["most","was","I"]},{"Key":"my coding","Fragments":["experience","practice,"]},{"Key":"coding experience","Fragments":["in"]},{"Key":"experience in","Fragments":["PHP/Javascript.","C#"]},{"Key":"in PHP/Javascript.","Fragments":["That"]},{"Key":"PHP/Javascript. That","Fragments":["being"]},{"Key":"said, C#","Fragments":["requiring"]},{"Key":"C# requiring","Fragments":["me"]},{"Key":"requiring me","Fragments":["to","to"]},{"Key":"to type","Fragments":["every","as"]},{"Key":"type every","Fragments":["variable"]},{"Key":"every variable","Fragments":["is"]},{"Key":"bit annoying","Fragments":["to"]},{"Key":"annoying to","Fragments":["say"]},{"Key":"say the","Fragments":["least.","same","answer"]},{"Key":"Was there","Fragments":["any"]},{"Key":"other way","Fragments":["to","around.","around?","around.","to","around.","to","and","around!"]},{"Key":"int version","Fragments":["of"]},{"Key":"the year?","Fragments":["Perhaps","Technically"]},{"Key":"year? Perhaps","Fragments":["some"]},{"Key":"Perhaps some","Fragments":["sort"]},{"Key":"some sort","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"of Console.ReadLine","Fragments":["that"]},{"Key":"Console.ReadLine that","Fragments":["automatically"]},{"Key":"that automatically","Fragments":["parses"]},{"Key":"automatically parses","Fragments":["the"]},{"Key":"parses the","Fragments":["input"]},{"Key":"input out","Fragments":["as"]},{"Key":"int instead","Fragments":["of"]},{"Key":"to hit","Fragments":["a"]},{"Key":"hit a","Fragments":["string"]},{"Key":"string first","Fragments":["to","because"]},{"Key":"be converted","Fragments":["later?"]},{"Key":" Anything","Fragments":["else"]},{"Key":"Anything else","Fragments":["I"]},{"Key":"else I","Fragments":["could"]},{"Key":"could improve","Fragments":["on?","your"]},{"Key":"I've finally","Fragments":["used"]},{"Key":"finally used","Fragments":["GroupBy()"]},{"Key":"used GroupBy()","Fragments":["and"]},{"Key":"GroupBy() and","Fragments":["ToDictionary()"]},{"Key":"and ToDictionary()","Fragments":["to"]},{"Key":"ToDictionary() to","Fragments":["get"]},{"Key":"the ToList()","Fragments":["and"]},{"Key":"ToList() and","Fragments":["ForEach()"]},{"Key":"didn't use","Fragments":["composite.Contains(),","recursive","foreach","a","foreach"]},{"Key":"use composite.Contains(),","Fragments":["however,"]},{"Key":"composite.Contains(), however,","Fragments":["I"]},{"Key":"however, I","Fragments":["would"]},{"Key":"to implement","Fragments":["the","that","successfully.","with","it.","a","them.","them.","the","the","the","it),","an","and","and","it","this"]},{"Key":"implement the","Fragments":["algorithm","algorithm","bonus","logic.","Sieve"]},{"Key":"algorithm as","Fragments":["described,"]},{"Key":"as described,","Fragments":["since"]},{"Key":"described, since","Fragments":["it"]},{"Key":"says to","Fragments":["skip","not"]},{"Key":"to skip","Fragments":["over","that.","the","over"]},{"Key":"skip over","Fragments":["numbers","the"]},{"Key":"over numbers","Fragments":["that"]},{"Key":"numbers that","Fragments":["you've","we've","don't","are"]},{"Key":"that you've","Fragments":["marked","pulled","justified","now","gone"]},{"Key":"you've marked","Fragments":["as"]},{"Key":"It should","Fragments":["been","then","be","have"]},{"Key":"should been","Fragments":["in"]},{"Key":"been in","Fragments":["the"]},{"Key":"tests. The","Fragments":["test","tests","tests"]},{"Key":"test should","Fragments":["be","be"]},{"Key":"Why map","Fragments":["these"]},{"Key":"map these","Fragments":["ToList?"]},{"Key":"these ToList?","Fragments":["Is"]},{"Key":"ToList? Is","Fragments":["this"]},{"Key":"Is this","Fragments":["not","necessary","a","a","more"]},{"Key":"this not","Fragments":["redundant?","using"]},{"Key":"not redundant?","Fragments":["And"]},{"Key":"redundant? And","Fragments":["wastes"]},{"Key":"And wastes","Fragments":["memory"]},{"Key":"wastes memory","Fragments":["and"]},{"Key":"memory and","Fragments":["cycles?"]},{"Key":"less cpu","Fragments":["work"]},{"Key":"cpu work","Fragments":["to"]},{"Key":"work to","Fragments":["skip","get","process","know","guarantee"]},{"Key":"skip that.","Fragments":["They're"]},{"Key":"that. They're","Fragments":["not"]},{"Key":"They're not","Fragments":["byref,"]},{"Key":"not byref,","Fragments":["so"]},{"Key":"byref, so","Fragments":["the"]},{"Key":"the params","Fragments":["get"]},{"Key":"params get","Fragments":["pushed"]},{"Key":"get pushed","Fragments":["onto"]},{"Key":"pushed onto","Fragments":["the"]},{"Key":"onto the","Fragments":["stack","method"]},{"Key":"the stack","Fragments":["and","not","-"]},{"Key":"stack and","Fragments":["multithreaded"]},{"Key":"and multithreaded","Fragments":["is"]},{"Key":"multithreaded is","Fragments":["still"]},{"Key":"still fine.","Fragments":["Use"]},{"Key":"fine. Use","Fragments":["of"]},{"Key":"Use of","Fragments":["an","==","the","ZIp"]},{"Key":"extension adds","Fragments":["3"]},{"Key":"adds 3","Fragments":["dereferences"]},{"Key":"3 dereferences","Fragments":["for"]},{"Key":"dereferences for","Fragments":["year"]},{"Key":"for year","Fragments":["address","%"]},{"Key":"year address","Fragments":["and"]},{"Key":"address and","Fragments":["three"]},{"Key":"and three","Fragments":["more","digits\","]},{"Key":"three more","Fragments":["for","comments."]},{"Key":"more for","Fragments":["the","readability"]},{"Key":"the params,","Fragments":["but"]},{"Key":"params, but","Fragments":["not"]},{"Key":"not if","Fragments":["you","you"]},{"Key":"you dropped","Fragments":["the"]},{"Key":"dropped the","Fragments":["year.IsDivisible","this"]},{"Key":"the year.IsDivisible","Fragments":["to"]},{"Key":"year.IsDivisible to","Fragments":["just"]},{"Key":"just IsDivisible","Fragments":["and"]},{"Key":"IsDivisible and","Fragments":["dropped"]},{"Key":"and dropped","Fragments":["the"]},{"Key":"the this","Fragments":["in","keyword"]},{"Key":"the paramter,","Fragments":["no?"]},{"Key":"paramter, no?","Fragments":["I"]},{"Key":"no? I","Fragments":["could"]},{"Key":"This could've","Fragments":["been"]},{"Key":"could've been","Fragments":["done"]},{"Key":"been done","Fragments":["without"]},{"Key":"done without","Fragments":["creating","any"]},{"Key":"without creating","Fragments":["a","a","the"]},{"Key":"a custom","Fragments":["function","null","class","class","class","ScrabbleException","class","exception,","class","extension)."]},{"Key":"custom function","Fragments":["to"]},{"Key":"it gets","Fragments":["the","rid","a","difficult","returned.","confusing","interesting"]},{"Key":"gets the","Fragments":["job","job"]},{"Key":"the job","Fragments":["done","done.","done.","rather","with"]},{"Key":"job done","Fragments":["and"]},{"Key":"and honestly","Fragments":["is"]},{"Key":"honestly is","Fragments":["thinking"]},{"Key":"is thinking","Fragments":["outside"]},{"Key":"thinking outside","Fragments":["of"]},{"Key":"outside of","Fragments":["the","expecting","the","the","the","your","GetDayInRange.","my","your","the","the"]},{"Key":"the box.","Fragments":["It's"]},{"Key":"box. It's","Fragments":["not"]},{"Key":"not as","Fragments":["few","efficient","obvious","fast","I","big","an"]},{"Key":"few lines","Fragments":["of","as","of","it","of"]},{"Key":"ternary operation,","Fragments":["but"]},{"Key":"operation, but","Fragments":["the"]},{"Key":"way you've","Fragments":["written"]},{"Key":"you've written","Fragments":["it,"]},{"Key":"written it,","Fragments":["it"]},{"Key":"it, it","Fragments":["is"]},{"Key":"is fewer","Fragments":["lines"]},{"Key":"fewer lines","Fragments":["than"]},{"Key":"nested if/else","Fragments":["statements","statements","statements"]},{"Key":"if/else statements","Fragments":["I","instead.","into","nesting","are"]},{"Key":"statements I","Fragments":["chose"]},{"Key":"is definitely","Fragments":["a","a","clearer","a","clearer","wanted.","not","much","welcome.","clearer!"]},{"Key":"good mixture","Fragments":["of"]},{"Key":"mixture of","Fragments":["functional","for","Linq"]},{"Key":"of functional","Fragments":["and"]},{"Key":"functional and","Fragments":["OOP."]},{"Key":"started out","Fragments":["with","with"]},{"Key":"I expanded","Fragments":["it","the"]},{"Key":"expanded it","Fragments":["to"]},{"Key":"more legible","Fragments":["(imo),"]},{"Key":"legible (imo),","Fragments":["maybe"]},{"Key":"(imo), maybe","Fragments":["I"]},{"Key":"went a","Fragments":["bit","bit"]},{"Key":"of maybe","Fragments":["using"]},{"Key":"maybe using","Fragments":["a"]},{"Key":"a switch/case","Fragments":["method,"]},{"Key":"switch/case method,","Fragments":["but"]},{"Key":"then realized","Fragments":["the"]},{"Key":"realized the","Fragments":["process","new","misunderstanding."]},{"Key":"the process","Fragments":["of","into","functionally."]},{"Key":"process of","Fragments":["elimination"]},{"Key":"of elimination","Fragments":["required"]},{"Key":"elimination required","Fragments":["nested"]},{"Key":"required nested","Fragments":["if/else"]},{"Key":"statements instead.","Fragments":["If"]},{"Key":"instead. If","Fragments":["I"]},{"Key":"operator, I","Fragments":["would've"]},{"Key":"I would've","Fragments":["easily"]},{"Key":"would've easily","Fragments":["been"]},{"Key":"easily been","Fragments":["stumped"]},{"Key":"been stumped","Fragments":["by"]},{"Key":"stumped by","Fragments":["this"]},{"Key":"by this","Fragments":["exercise."]},{"Key":" yah,","Fragments":["I"]},{"Key":"yah, I","Fragments":["get"]},{"Key":"get extension","Fragments":["methods,"]},{"Key":"methods, just","Fragments":["don't"]},{"Key":"just don't","Fragments":["see","like"]},{"Key":"see any","Fragments":["reason","more","places","long","value"]},{"Key":"any reason","Fragments":["for","why","you","to","you"]},{"Key":"reason for","Fragments":["it","making","doing","this","commenting"]},{"Key":"for it","Fragments":["there.","being","so","instead.","to"]},{"Key":"I totally","Fragments":["forgot","agree","agree","forgot","agree","traded","agree","should"]},{"Key":"totally forgot","Fragments":["about","about"]},{"Key":"about Ternary","Fragments":["Operations!"]},{"Key":"Ternary Operations!","Fragments":["Good"]},{"Key":"Operations! Good","Fragments":["show!"]},{"Key":" Honestly","Fragments":["ternary"]},{"Key":"Honestly ternary","Fragments":["ops"]},{"Key":"ternary ops","Fragments":["make"]},{"Key":"ops make","Fragments":["code"]},{"Key":"make code","Fragments":["less","as","more","easier"]},{"Key":"code less","Fragments":["readable","readable.","readable."]},{"Key":"less readable","Fragments":["at","and","to","-","than","than","than","so","as","and","as","as","IMHO","due"]},{"Key":"readable at","Fragments":["first"]},{"Key":"first glance,","Fragments":["but","so"]},{"Key":"glance, but","Fragments":["if"]},{"Key":"what they","Fragments":["do,","mean","are,","are","are","mean,","were","do","mean,","are.","represent"]},{"Key":"they do,","Fragments":["they're"]},{"Key":"do, they're","Fragments":["simple"]},{"Key":"they're simple","Fragments":["enough"]},{"Key":"to analyze.","Fragments":["It"]},{"Key":"analyze. It","Fragments":["let"]},{"Key":"It let","Fragments":["you"]},{"Key":"you turn","Fragments":["nested"]},{"Key":"turn nested","Fragments":["if/else"]},{"Key":" Probably","Fragments":["not","could","a","requires"]},{"Key":"Probably not","Fragments":["necessary","needed","a"]},{"Key":"necessary but","Fragments":["I","the"]},{"Key":"it made","Fragments":["the","the","it","a","sense,"]},{"Key":"used powershell","Fragments":["to"]},{"Key":"powershell to","Fragments":["pass"]},{"Key":"pass a","Fragments":["list","full","lambda"]},{"Key":"of dates.","Fragments":["If"]},{"Key":"dates. If","Fragments":["you"]},{"Key":"were going","Fragments":["to","for","to"]},{"Key":"go that","Fragments":["route"]},{"Key":"that route","Fragments":["though"]},{"Key":"route though","Fragments":["I"]},{"Key":"would think","Fragments":["it","the","again","it","so.","not.","the","they"]},{"Key":"more efficient","Fragments":["to","way","way,","order","than","then","and","and","as","to","in","would","way","to","than","ability","algorithm","to","algorithm","to","at","than","way","than","with","and","not","check.","by"]},{"Key":"efficient to","Fragments":["pass","use","figure","store","keep","do"]},{"Key":"a full","Fragments":["array","description.","list"]},{"Key":"full array","Fragments":["of"]},{"Key":"array of","Fragments":["arguments","rules","every","strings","26","integers","size","Tuples","rules","strings,","Tuples","Tuples?","Lists.","Tuples.","letters","Tuples","Chars","actions"]},{"Key":"of arguments","Fragments":["and"]},{"Key":"arguments and","Fragments":["loop","get"]},{"Key":"and loop","Fragments":["through"]},{"Key":"loop through","Fragments":["the","pair.Value...","a","each","all","every"]},{"Key":"array with","Fragments":["a","the","only"]},{"Key":"a foreach","Fragments":["vs","loop","over","loop.","loop","as","loop.","loop.","loop.","loop.","internally","loop...","loop","iterating"]},{"Key":"foreach vs","Fragments":["calling"]},{"Key":"vs calling","Fragments":["the"]},{"Key":"calling the","Fragments":["program","method","same","static","ReturnRoman","constructor"]},{"Key":"program for","Fragments":["every"]},{"Key":"for every","Fragments":["date.","access","test","call","single","number","number,","decimal","character"]},{"Key":"put this","Fragments":["in"]},{"Key":"this \"this","Fragments":["int"]},{"Key":"\"this int","Fragments":["number\"."]},{"Key":"int number\".","Fragments":["Why?"]},{"Key":" Yet","Fragments":["another"]},{"Key":"Yet another","Fragments":["good"]},{"Key":"another good","Fragments":["use"]},{"Key":"ternary operation!","Fragments":["I"]},{"Key":"operation! I","Fragments":["love"]},{"Key":"love seeing","Fragments":["all"]},{"Key":"seeing all","Fragments":["the"]},{"Key":"different ways","Fragments":["we","with","-","with"]},{"Key":"ways we","Fragments":["all","can"]},{"Key":"we all","Fragments":["come","are."]},{"Key":"all come","Fragments":["up","up"]},{"Key":"This solution","Fragments":["may","fails","is","seemed","is","(skipping"]},{"Key":"solution may","Fragments":["be"]},{"Key":"bit verbose","Fragments":["but"]},{"Key":"verbose but","Fragments":["it","to"]},{"Key":"read. Could","Fragments":["possibly"]},{"Key":"Could possibly","Fragments":["use"]},{"Key":"possibly use","Fragments":["a"]},{"Key":"a \u0026\u0026","Fragments":["or","stops"]},{"Key":"\u0026\u0026 or","Fragments":["||","||"]},{"Key":"or ||","Fragments":["to","to"]},{"Key":"|| to","Fragments":["cut","cut","combine"]},{"Key":"to cut","Fragments":["down","down","down","it","down"]},{"Key":"cut down","Fragments":["on","on","on","on","on","on","on","on"]},{"Key":"down on","Fragments":["a","a","return","operation","the","the","it","some","the"]},{"Key":"of nesting","Fragments":["while","while","going","foreach.","3","in","by"]},{"Key":"nesting while","Fragments":["not","maintaining"]},{"Key":"while not","Fragments":["looking"]},{"Key":"not looking","Fragments":["any","for"]},{"Key":"looking any","Fragments":["readability."]},{"Key":"seen double","Fragments":["modulus"]},{"Key":"double modulus","Fragments":["used"]},{"Key":"modulus used","Fragments":["like"]},{"Key":"used like","Fragments":["that"]},{"Key":"that before.","Fragments":["Personally"]},{"Key":"before. Personally","Fragments":["I"]},{"Key":"Personally I","Fragments":["am","wouldn't","don't","find","like","always","like","think"]},{"Key":"used your","Fragments":["if","same"]},{"Key":"statements. Having","Fragments":["an"]},{"Key":"Having an","Fragments":["else","early"]},{"Key":"an else","Fragments":["if","looks","if","makes","clause.","clause,","clause.","if.","statement","block"]},{"Key":"looks strange","Fragments":["to"]},{"Key":"strange to","Fragments":["me,"]},{"Key":"to me,","Fragments":["you","it's","clean","and","so","unique","I'm"]},{"Key":"me, you","Fragments":["could"]},{"Key":"use two","Fragments":["if","separate"]},{"Key":"two if","Fragments":["statements.","conditions","statements","checks","statements,","statements."]},{"Key":"Good example","Fragments":["of","of"]},{"Key":"example of","Fragments":["being","verbose","verbose","why","how","how","how","how","what","{3,","key","DRY","how"]},{"Key":"being easy","Fragments":["to"]},{"Key":"read without","Fragments":["being"]},{"Key":"without being","Fragments":["verbose."]},{"Key":"being verbose.","Fragments":["Personal"]},{"Key":"verbose. Personal","Fragments":["preference"]},{"Key":"Personal preference","Fragments":["but"]},{"Key":"preference but","Fragments":["seeing","I"]},{"Key":"but seeing","Fragments":["an"]},{"Key":"seeing an","Fragments":["else","\"_\"","unnecessary"]},{"Key":"else makes","Fragments":["me"]},{"Key":"me wonder","Fragments":["why"]},{"Key":"wonder why","Fragments":["I","I"]},{"Key":"don't just","Fragments":["use"]},{"Key":"Using hash","Fragments":["for"]},{"Key":"hash for","Fragments":["supposedly"]},{"Key":"for supposedly","Fragments":["faster"]},{"Key":"supposedly faster","Fragments":["lookup."]},{"Key":"Pretty sure","Fragments":["you"]},{"Key":"the ?","Fragments":["false"]},{"Key":"? false","Fragments":[":"]},{"Key":"false :","Fragments":["true;"]},{"Key":": true;","Fragments":["part"]},{"Key":"true; part","Fragments":["as"]},{"Key":"part as","Fragments":["the"]},{"Key":"the evaluations","Fragments":["already"]},{"Key":"evaluations already","Fragments":["return"]},{"Key":"already return","Fragments":["those"]},{"Key":"return those","Fragments":["values"]},{"Key":"those values","Fragments":["if","in","won't","I'm"]},{"Key":"values if","Fragments":["you"]},{"Key":"you reverse","Fragments":["the","the","the"]},{"Key":"reverse the","Fragments":["logic.","logic","if","If","digits,","digits?","order.","order"]},{"Key":"logic. You're","Fragments":["basically"]},{"Key":"You're basically","Fragments":["saying"]},{"Key":"basically saying","Fragments":["if"]},{"Key":"saying if","Fragments":["true"]},{"Key":"true return","Fragments":["false,","true,"]},{"Key":"return false,","Fragments":["if","but","but"]},{"Key":"false, if","Fragments":["false"]},{"Key":"if false","Fragments":["return"]},{"Key":"false return","Fragments":["true."]},{"Key":"return true.","Fragments":["If","You"]},{"Key":"true. If","Fragments":["you","you"]},{"Key":"just reverse","Fragments":["the"]},{"Key":"the evaluation","Fragments":["you'd","of"]},{"Key":"evaluation you'd","Fragments":["return"]},{"Key":"you'd return","Fragments":["correctly."]},{"Key":"return correctly.","Fragments":["But"]},{"Key":"correctly. But","Fragments":["if"]},{"Key":"your intent","Fragments":["was"]},{"Key":"intent was","Fragments":["to"]},{"Key":"just show","Fragments":["that","a"]},{"Key":"be done,","Fragments":["well","but","but"]},{"Key":"done, well","Fragments":["done"]},{"Key":"well done","Fragments":["haha",";)"]},{"Key":"went back","Fragments":["to","and","to","to"]},{"Key":"to an","Fragments":["earlier","array","if","if...else,","array,","array?","`else`","array","early","IDictionary","array","null","array,","empty","OrderedDictionary","easy-to-look-up","excellent","article","int","int.","uppercased","array","array,","integer","enumerator,","assignment","int","end","int"]},{"Key":"an earlier","Fragments":["instinct","nit-pick"]},{"Key":"earlier instinct","Fragments":["that"]},{"Key":"instinct that","Fragments":["I"]},{"Key":"didn't submit,","Fragments":["because"]},{"Key":"submit, because","Fragments":["I"]},{"Key":"I believed","Fragments":["that"]},{"Key":"believed that","Fragments":["it"]},{"Key":"to terse","Fragments":["to"]},{"Key":"terse to","Fragments":["be"]},{"Key":"be easily","Fragments":["legible.","followed,","extensible.","understood"]},{"Key":"But an","Fragments":["earlier"]},{"Key":"earlier nit-pick","Fragments":["changed"]},{"Key":"nit-pick changed","Fragments":["my"]},{"Key":"changed my","Fragments":["mind.","submission","code"]},{"Key":"my mind.","Fragments":["I"]},{"Key":"mind. I","Fragments":["think"]},{"Key":"is concise","Fragments":["and","but"]},{"Key":"and legible","Fragments":["at"]},{"Key":"legible at","Fragments":["the"]},{"Key":"same time.","Fragments":["The"]},{"Key":"time. The","Fragments":["only"]},{"Key":"only gotcha","Fragments":["for"]},{"Key":"gotcha for","Fragments":["newbie"]},{"Key":"for newbie","Fragments":["c#"]},{"Key":"newbie c#","Fragments":["programmers"]},{"Key":"c# programmers","Fragments":["might"]},{"Key":"programmers might","Fragments":["be"]},{"Key":"the knowledge","Fragments":["that"]},{"Key":"knowledge that","Fragments":["a"]},{"Key":"\u0026\u0026 stops","Fragments":["evaluating"]},{"Key":"stops evaluating","Fragments":["after","and"]},{"Key":"evaluating after","Fragments":["a"]},{"Key":"a false","Fragments":["on","input"]},{"Key":"false on","Fragments":["the","its"]},{"Key":"read. However","Fragments":["you"]},{"Key":"be running","Fragments":["some"]},{"Key":"running some","Fragments":["unnecessary"]},{"Key":"some unnecessary","Fragments":["checks"]},{"Key":"unnecessary checks","Fragments":["when"]},{"Key":"checks when","Fragments":["this","value"]},{"Key":"when this","Fragments":["is"]},{"Key":"is ran","Fragments":["each"]},{"Key":"ran each","Fragments":["time"]},{"Key":"each time","Fragments":["depending","you","because","it","we","you","using","it","On\u003cPlanetName\u003e","so","we","score","the"]},{"Key":"time depending","Fragments":["on"]},{"Key":"the data.","Fragments":["Also","I"]},{"Key":"data. Also","Fragments":["I"]},{"Key":"might rename","Fragments":["x"]},{"Key":"rename x","Fragments":["to"]},{"Key":"x to","Fragments":["\"year\"","true."]},{"Key":"to \"year\"","Fragments":["or"]},{"Key":"\"year\" or","Fragments":["something"]},{"Key":"Your absolutely","Fragments":["right."]},{"Key":"absolutely right.","Fragments":["I","It's"]},{"Key":"right. I","Fragments":["was","had","didn't","didn't"]},{"Key":"was stuck","Fragments":["into"]},{"Key":"stuck into","Fragments":["thinking"]},{"Key":"into thinking","Fragments":["I"]},{"Key":"thinking I","Fragments":["should"]},{"Key":"should use","Fragments":["a","regex","IDictionary.","a","1000","1000","\u003e=","it.","extension","`\u0026\u0026`","a","double","a"]},{"Key":"ternary operation","Fragments":["but"]},{"Key":"operation but","Fragments":["I"]},{"Key":"didn't need","Fragments":["one.","to","`x"]},{"Key":"Another example","Fragments":["of"]},{"Key":"of verbose","Fragments":["yet","yet"]},{"Key":"verbose yet","Fragments":["clear","clear","clean"]},{"Key":"yet clear","Fragments":["and","and"]},{"Key":"read code.","Fragments":["I"]},{"Key":"might suggest","Fragments":["using"]},{"Key":"suggest using","Fragments":["\u0026\u0026","the","a","an"]},{"Key":"using \u0026\u0026","Fragments":["or","and"]},{"Key":"while maintaining","Fragments":["the"]},{"Key":"maintaining the","Fragments":["readability."]},{"Key":"believe all","Fragments":["of"]},{"Key":"your else","Fragments":["statements"]},{"Key":"else statements","Fragments":["are","(keeping","since","are"]},{"Key":"unnecessary (redundant).","Fragments":["You"]},{"Key":"(redundant). You","Fragments":["could"]},{"Key":"remove all","Fragments":["of","of","the","comments,"]},{"Key":"statements (keeping","Fragments":["the"]},{"Key":"(keeping the","Fragments":["return"]},{"Key":"return part)","Fragments":["and"]},{"Key":"part) and","Fragments":["it"]},{"Key":"would compile","Fragments":["fine."]},{"Key":" Perhaps","Fragments":["its","it's","re-name","you"]},{"Key":"Perhaps its","Fragments":["just"]},{"Key":"its just","Fragments":["the","one"]},{"Key":"way my","Fragments":["brain"]},{"Key":"my brain","Fragments":["is","was,","has","cry,"]},{"Key":"brain is","Fragments":["wired,"]},{"Key":"is wired,","Fragments":["but"]},{"Key":"wired, but","Fragments":["I"]},{"Key":"always had","Fragments":["a"]},{"Key":"a hard","Fragments":["time","time","'you","time"]},{"Key":"hard time","Fragments":["putting","seeing","understanding"]},{"Key":"time putting","Fragments":["it"]},{"Key":"using ||","Fragments":["and"]},{"Key":"and \u0026\u0026.","Fragments":["It"]},{"Key":"\u0026\u0026. It","Fragments":["always"]},{"Key":"It always","Fragments":["was"]},{"Key":"always was","Fragments":["easier"]},{"Key":"easier for","Fragments":["me","the","me","me","people","someone","human"]},{"Key":"make sense","Fragments":["of","of","to","to","to","to","for","to"]},{"Key":"sense of","Fragments":["it","after"]},{"Key":"using nested","Fragments":["ifs"]},{"Key":"nested ifs","Fragments":["like","to","than","is","in"]},{"Key":"ifs like","Fragments":["this."]},{"Key":"A great","Fragments":["example","feeling!"]},{"Key":"great example","Fragments":["of"]},{"Key":"you stuck","Fragments":["with"]},{"Key":"stuck with","Fragments":["an","the"]},{"Key":"an if","Fragments":["statement","check.","block","block","block","statement","statement.","with","statement","statement","or","rather","statement"]},{"Key":"statement something","Fragments":["every"]},{"Key":"something every","Fragments":["developer"]},{"Key":"every developer","Fragments":["knows"]},{"Key":"developer knows","Fragments":["well"]},{"Key":"knows well","Fragments":["yet"]},{"Key":"well yet","Fragments":["combined"]},{"Key":"yet combined","Fragments":["your"]},{"Key":"combined your","Fragments":["logic"]},{"Key":"logic into","Fragments":["one","a","the","the","a","the","one","For","own"]},{"Key":"one statement.","Fragments":["This","In"]},{"Key":"statement. This","Fragments":["does"]},{"Key":"one could","Fragments":["argue","make","argue"]},{"Key":"could argue","Fragments":["you","that"]},{"Key":"argue you","Fragments":["might"]},{"Key":"well cut","Fragments":["the"]},{"Key":"cut the","Fragments":["rest"]},{"Key":"rest to","Fragments":["one"]},{"Key":"does look","Fragments":["less","better"]},{"Key":"look less","Fragments":["intimidating"]},{"Key":"less intimidating","Fragments":["to"]},{"Key":"intimidating to","Fragments":["younger"]},{"Key":"to younger","Fragments":["developers."]},{"Key":"love how","Fragments":["you"]},{"Key":"you placed","Fragments":["the"]},{"Key":"placed the","Fragments":["mod"]},{"Key":"mod operator","Fragments":["in"]},{"Key":"is now","Fragments":["clear","static.","constructed","superfluous","stored","more","a","fixed"]},{"Key":"now clear","Fragments":["what"]},{"Key":"what that","Fragments":["code","line","is","line","method"]},{"Key":"is doing.","Fragments":["This"]},{"Key":"doing. This","Fragments":["is"]},{"Key":"best verbose","Fragments":["yet"]},{"Key":"yet clean","Fragments":["answer"]},{"Key":"clean answer","Fragments":["I"]},{"Key":"answer I","Fragments":["have"]},{"Key":"There you","Fragments":["go!","go."]},{"Key":"you go!","Fragments":["Look'n"]},{"Key":"go! Look'n","Fragments":["good."]},{"Key":"Look'n good.","Fragments":[":)"]},{"Key":"IMHO your","Fragments":["implementation"]},{"Key":"implementation is","Fragments":["the","relying","coming."]},{"Key":"the issue","Fragments":["not","in","I"]},{"Key":"issue not","Fragments":["the"]},{"Key":"the algorithm.","Fragments":["There","See"]},{"Key":"algorithm. There","Fragments":["are"]},{"Key":"are ways","Fragments":["of"]},{"Key":"ways of","Fragments":["doing","condensing"]},{"Key":"this without","Fragments":["contains/Add","using","regex?","regexes.","creating","for","a","dictionaries","using","looking","such","side","either"]},{"Key":"without contains/Add","Fragments":["e.g."]},{"Key":" list\u003cint\u003e[i]","Fragments":["="]},{"Key":"list\u003cint\u003e[i] =","Fragments":["0","0"]},{"Key":"0 or","Fragments":["!list\u003cbool\u003e[i]","negative","a","negative"]},{"Key":"or !list\u003cbool\u003e[i]","Fragments":["or"]},{"Key":"!list\u003cbool\u003e[i] or","Fragments":["!BitArray[i]"]},{"Key":"Removed unneeded","Fragments":["operator"]},{"Key":"unneeded operator","Fragments":["and"]},{"Key":"and switched","Fragments":["the","it"]},{"Key":"switched the","Fragments":["year","return","order"]},{"Key":"0 to","Fragments":["be","99.","determine","6.","6."]},{"Key":"be checked","Fragments":["first.","for","in"]},{"Key":"the idea","Fragments":["of","of","of","that","that","of","of","to","of","that","to","of","that","is","of","of"]},{"Key":"idea of","Fragments":["the","scheduler","extracting","having","consolidating","the","sorting","how","making","using"]},{"Key":"the combining","Fragments":["the"]},{"Key":"combining the","Fragments":["if","second","ordinal"]},{"Key":"statements and","Fragments":["variable","negative","return","nesting","IsLeap/IsYearDivisible"]},{"Key":"and variable","Fragments":["creation,","names"]},{"Key":"variable creation,","Fragments":["and","so"]},{"Key":"creation, and","Fragments":["I"]},{"Key":"tried making","Fragments":["the"]},{"Key":"operations a","Fragments":["little"]},{"Key":"little clearer/better.","Fragments":["Does"]},{"Key":"clearer/better. Does","Fragments":["this"]},{"Key":"is Sequence","Fragments":["a"]},{"Key":"Sequence a","Fragments":["getter/setter"]},{"Key":"a getter/setter","Fragments":["and"]},{"Key":"getter/setter and","Fragments":["do"]},{"Key":"this at","Fragments":["all?","first","the"]},{"Key":"Now try","Fragments":["it"]},{"Key":"try it","Fragments":["without","that"]},{"Key":"it without","Fragments":["loops","the","regex","creating","knowing","looping.","loops,","that?","them.","using","using","math.pow","supplying"]},{"Key":"personally find","Fragments":["this"]},{"Key":"only because","Fragments":["of"]},{"Key":"because of","Fragments":["the",".NET","that.","all","that?","the","what","your","\u003ccode\u003eMain()\u003c/code\u003e?","operator"]},{"Key":"the amount","Fragments":["of","of","of"]},{"Key":"nesting going","Fragments":["on."]},{"Key":" Because","Fragments":["of","I","each","the","I"]},{"Key":"Because of","Fragments":["how","this,"]},{"Key":"year works,","Fragments":["if"]},{"Key":"works, if","Fragments":["it"]},{"Key":"400, it","Fragments":["is"]},{"Key":"is automatically","Fragments":["a","considered","only","determined"]},{"Key":"automatically a","Fragments":["leap"]},{"Key":"year. I","Fragments":["would"]},{"Key":"would represent","Fragments":["that"]},{"Key":"represent that","Fragments":["first"]},{"Key":"that first","Fragments":["off","and","line","test"]},{"Key":"first off","Fragments":["with:"]},{"Key":"And then","Fragments":["proceed","test","we","I","complain"]},{"Key":"then proceed","Fragments":["to"]},{"Key":"proceed to","Fragments":["work"]},{"Key":"the remaining","Fragments":["requirements.","years","entries"]},{"Key":"remaining requirements.","Fragments":["A"]},{"Key":"requirements. A","Fragments":["minor"]},{"Key":"A minor","Fragments":["pet","nitpick"]},{"Key":"minor pet","Fragments":["peeve"]},{"Key":"of mine","Fragments":["is","(college"]},{"Key":"mine is","Fragments":["comments","more"]},{"Key":"is comments","Fragments":["that"]},{"Key":"comments that","Fragments":["describe","just","do","have"]},{"Key":"describe in","Fragments":["too"]},{"Key":"in too","Fragments":["much"]},{"Key":"much detail","Fragments":["what"]},{"Key":"detail what","Fragments":["is"]},{"Key":"is occurring,","Fragments":["at"]},{"Key":"occurring, at","Fragments":["least"]},{"Key":"least in","Fragments":["C#","the","C#,"]},{"Key":"C# since","Fragments":["the","1.0,"]},{"Key":"language flows","Fragments":["pretty"]},{"Key":"flows pretty","Fragments":["well."]},{"Key":"pretty well.","Fragments":["I"]},{"Key":"well. I","Fragments":["would","really","ultimately","don't"]},{"Key":"would reserve","Fragments":["the"]},{"Key":"reserve the","Fragments":["use"]},{"Key":"the inline","Fragments":["commenting","modulus"]},{"Key":"inline commenting","Fragments":["for"]},{"Key":"commenting for","Fragments":["answering"]},{"Key":"for answering","Fragments":["the"]},{"Key":"answering the","Fragments":["*why*"]},{"Key":"the *why*","Fragments":["not"]},{"Key":"*why* not","Fragments":["for"]},{"Key":"not for","Fragments":["the","the","each","\u003e\u003etock''\u003c\u003c"]},{"Key":"the what.","Fragments":["I"]},{"Key":"what. I","Fragments":["should"]},{"Key":"determine what","Fragments":["is","something"]},{"Key":"is happening","Fragments":["when","is"]},{"Key":"happening when","Fragments":["looking"]},{"Key":"when looking","Fragments":["at","at","at"]},{"Key":"something requires","Fragments":["extra"]},{"Key":"requires extra","Fragments":["explanation"]},{"Key":"extra explanation","Fragments":["then","and"]},{"Key":"explanation then","Fragments":["a"]},{"Key":"comment becomes","Fragments":["invaluable."]},{"Key":"becomes invaluable.","Fragments":["In"]},{"Key":"invaluable. In","Fragments":["this"]},{"Key":"in particular,","Fragments":["it"]},{"Key":"particular, it","Fragments":["would"]},{"Key":"help a","Fragments":["user","reader","lot"]},{"Key":"user to","Fragments":["define","read","input","see"]},{"Key":"to define","Fragments":["the","a","a","extension"]},{"Key":"define the","Fragments":["rules","dictionary","classes"]},{"Key":"rules of","Fragments":["the","the","inheritance."]},{"Key":"the isLeapYear","Fragments":["function"]},{"Key":"isLeapYear function","Fragments":["in"]},{"Key":"function in","Fragments":["the","plain","a"]},{"Key":"the XML","Fragments":["comments."]},{"Key":" Otherwise","Fragments":["it","it","great","it","a"]},{"Key":"Otherwise it","Fragments":["looks","looks","looks"]},{"Key":"and accomplishes","Fragments":["the"]},{"Key":"accomplishes the","Fragments":["task","same"]},{"Key":"task at","Fragments":["hand."]},{"Key":"In your","Fragments":["application","grade","rand.Next","IsLeap","(x)","case","\u003ccode\u003eCount\u003c/code\u003e","`ToString()`","case,"]},{"Key":"your application","Fragments":["what","logic"]},{"Key":"application what","Fragments":["happens"]},{"Key":"what happens","Fragments":["if","with","if","if","if","if","if","if","when","if/when","when","if"]},{"Key":"happens if","Fragments":["someone","entry.Value","any","a","you","you","input","old","someone","old","oldPair","OldData","inputDict","dictonaryToTransform","input","old","old","old","old","oldData","input","oldCruftyData","your","oldData","old","old","the","ToRoman(10000)","the","more","you","the"]},{"Key":"if someone","Fragments":["types","comes","else","sends","sends","sends","is","is","looks"]},{"Key":"someone types","Fragments":["a"]},{"Key":"types a","Fragments":["letter?"]},{"Key":" Okay!","Fragments":["I","I"]},{"Key":"Okay! I","Fragments":["think","think"]},{"Key":"got it.","Fragments":["This"]},{"Key":"it. This","Fragments":["one"]},{"Key":"This one","Fragments":["definitely","exactly","is","is"]},{"Key":"one definitely","Fragments":["passed"]},{"Key":"definitely passed","Fragments":["each"]},{"Key":"passed each","Fragments":["of"]},{"Key":"each of","Fragments":["the","the","your","your","the","the","your","the","them.","the","the","the","your","them."]},{"Key":"tests. I","Fragments":["feel","don't","don't","wasn't","kept","plan"]},{"Key":"feel so","Fragments":["dumb"]},{"Key":"so dumb","Fragments":["for"]},{"Key":"dumb for","Fragments":["not"]},{"Key":"for not","Fragments":["realizing","understanding;","using","null","doing","allowing","even"]},{"Key":"not realizing","Fragments":["the","they","that"]},{"Key":"realizing the","Fragments":["problem"]},{"Key":"the operational","Fragments":["statements."]},{"Key":"operational statements.","Fragments":["Oof."]},{"Key":"exercise you","Fragments":["shuoldn't"]},{"Key":"you shuoldn't","Fragments":["need"]},{"Key":"shuoldn't need","Fragments":["to"]},{"Key":"all. It","Fragments":["kind"]},{"Key":"It kind","Fragments":["of"]},{"Key":"of make","Fragments":["the"]},{"Key":"statement or","Fragments":["two","not?"]},{"Key":"Try not","Fragments":["to"]},{"Key":"to nest","Fragments":["if"]},{"Key":"nest if","Fragments":["statements."]},{"Key":"statements. What","Fragments":["does"]},{"Key":"What does","Fragments":["```year","```wordSelections.Select(word","it"]},{"Key":"does ```year","Fragments":["%"]},{"Key":"```year %","Fragments":["400","100","400```"]},{"Key":"== 0```","Fragments":["return?","is","unnecessary?"]},{"Key":" Think","Fragments":["very","I","about"]},{"Key":"Think very","Fragments":["carefully"]},{"Key":"very carefully","Fragments":["before"]},{"Key":"carefully before","Fragments":["adding"]},{"Key":"before adding","Fragments":["extension","it."]},{"Key":"to built","Fragments":["in"]},{"Key":"built in","Fragments":["types...","functions...","`Math.Min(int,int)`","`char.IsLetter()`","way","sort","all","hashing","hashing"]},{"Key":"in types...","Fragments":["Will"]},{"Key":"types... Will","Fragments":["other"]},{"Key":"Will other","Fragments":["developers"]},{"Key":"other developers","Fragments":["be"]},{"Key":"developers be","Fragments":["confused"]},{"Key":"they see","Fragments":["your","Decimal.Zero"]},{"Key":"your method","Fragments":["in","probably","comments.","is","call.","is","-","call","return","for"]},{"Key":"in intellytype","Fragments":["in"]},{"Key":"intellytype in","Fragments":["other"]},{"Key":"good. Would","Fragments":["it"]},{"Key":"it be","Fragments":["worth","done","better","better","simpler","possible","easier","more","better","more","even","obvious","DistinctSides?.","easier"]},{"Key":"worth it","Fragments":["to","for","to","-","for"]},{"Key":"an invalid","Fragments":["input","Nucleotide","nucleotide.","nucleotide","character","Scrabble","triangle.","nucleotide","nucleotide.","nucleotide.","nucleotide"]},{"Key":"invalid input","Fragments":["(i.e.","(i.e.","is"]},{"Key":"input (i.e.","Fragments":["something","\"ABC\")?"]},{"Key":"(i.e. something","Fragments":["containing"]},{"Key":"something containing","Fragments":["punctuation,"]},{"Key":"containing punctuation,","Fragments":["numbers,"]},{"Key":"punctuation, numbers,","Fragments":["or"]},{"Key":"numbers, or","Fragments":["whitespace)?","all"]},{"Key":"My bad.","Fragments":["Just"]},{"Key":"bad. Just","Fragments":["checked"]},{"Key":"Just checked","Fragments":["my"]},{"Key":"checked my","Fragments":["code"]},{"Key":"be limit-1","Fragments":["because"]},{"Key":"limit-1 because","Fragments":["we"]},{"Key":"because we","Fragments":["want","don't","have","never"]},{"Key":"want up","Fragments":["to"]},{"Key":"to but","Fragments":["not","not"]},{"Key":"not including","Fragments":["limit.","Distance."]},{"Key":"read now","Fragments":["however,","that"]},{"Key":"now however,","Fragments":["it"]},{"Key":"however, it","Fragments":["wont","is","just"]},{"Key":"it wont","Fragments":["work"]},{"Key":"wont work","Fragments":["correctly."]},{"Key":"work correctly.","Fragments":["It"]},{"Key":"correctly. It","Fragments":["shows"]},{"Key":"It shows","Fragments":["1900"]},{"Key":"shows 1900","Fragments":["as"]},{"Key":"1900 as","Fragments":["being"]},{"Key":"as being","Fragments":["True."]},{"Key":"because you're","Fragments":["using"]},{"Key":"the OR","Fragments":["statement","condition,"]},{"Key":"OR statement","Fragments":["after"]},{"Key":"statement after","Fragments":["the"]},{"Key":"the fourCheck","Fragments":["meaning","calculation"]},{"Key":"fourCheck meaning","Fragments":["that"]},{"Key":"if fourCheck","Fragments":["is"]},{"Key":"fourCheck is","Fragments":["true"]},{"Key":"true (1900","Fragments":["/"]},{"Key":"(1900 /","Fragments":["4"]},{"Key":"/ 4","Fragments":["="]},{"Key":"4 =","Fragments":["true)","100)"]},{"Key":"= true)","Fragments":["you"]},{"Key":"true) you","Fragments":["wont"]},{"Key":"you wont","Fragments":["evaluate"]},{"Key":"wont evaluate","Fragments":["the"]},{"Key":"evaluate the","Fragments":["rest","not","first"]},{"Key":"rest and","Fragments":["1900"]},{"Key":"and 1900","Fragments":["should"]},{"Key":"1900 should","Fragments":["be"]},{"Key":" Remember","Fragments":["that","that","this"]},{"Key":"Remember that","Fragments":["if","everything","the"]},{"Key":"400 it's","Fragments":["automatically"]},{"Key":"it's automatically","Fragments":["divisible"]},{"Key":"automatically divisible","Fragments":["by"]},{"Key":"and breaks","Fragments":["the"]},{"Key":"breaks the","Fragments":["100","tests","Can_add_then_multiply()"]},{"Key":"100 rule","Fragments":["so"]},{"Key":"it's always","Fragments":["true"]},{"Key":"always true","Fragments":["and"]},{"Key":"true and","Fragments":["that","trying","doesn't","sometimes","return"]},{"Key":"thing you","Fragments":["check.","might","might","have","could","actually","could","could","should","could","use"]},{"Key":"why a","Fragments":["constructor?"]},{"Key":" Love","Fragments":["the","the"]},{"Key":"Love the","Fragments":["use","use","Where()"]},{"Key":"of Aggregate","Fragments":["here"]},{"Key":"Aggregate here","Fragments":["but","but"]},{"Key":"here but","Fragments":["generally","as","it","you","there","you","for","the","should"]},{"Key":"generally concerned","Fragments":["over"]},{"Key":"concerned over","Fragments":["ToList/ForEach","indexing"]},{"Key":"over ToList/ForEach","Fragments":["use,"]},{"Key":"ToList/ForEach use,","Fragments":["if"]},{"Key":"use, if","Fragments":["mutation"]},{"Key":"if mutation","Fragments":["_is_"]},{"Key":"mutation _is_","Fragments":["required,"]},{"Key":"_is_ required,","Fragments":["it"]},{"Key":"required, it","Fragments":["is"]},{"Key":"less expensive","Fragments":["and","for"]},{"Key":"expensive and","Fragments":["more"]},{"Key":"That's weird,","Fragments":["it"]},{"Key":"weird, it","Fragments":["passed"]},{"Key":"it passed","Fragments":["the","the","all"]},{"Key":"passed the","Fragments":["test","tests.","NUnit"]},{"Key":"test when","Fragments":["I"]},{"Key":"I ran","Fragments":["it.","the","into","the","it"]},{"Key":"ran it.","Fragments":["Working","The"]},{"Key":"it. Working","Fragments":["on"]},{"Key":"Working on","Fragments":["fixing."]},{"Key":" edit-","Fragments":["Or,"]},{"Key":"edit- Or,","Fragments":["more"]},{"Key":"Or, more","Fragments":["correctly,"]},{"Key":"more correctly,","Fragments":["I"]},{"Key":"just misunderstood","Fragments":["the"]},{"Key":"misunderstood the","Fragments":["test"]},{"Key":"test results.","Fragments":["fixing."]},{"Key":" ```(year","Fragments":["%"]},{"Key":"```(year %","Fragments":["400"]},{"Key":"== 0)```","Fragments":["is"]},{"Key":"0)``` is","Fragments":["easy"]},{"Key":"is easy","Fragments":["for","to","to","way!"]},{"Key":"a machine","Fragments":["to"]},{"Key":"machine to","Fragments":["understand,"]},{"Key":"to understand,","Fragments":["but","especially","and","but"]},{"Key":"understand, but","Fragments":["your","seem"]},{"Key":"code should","Fragments":["be","be","just","test","be"]},{"Key":"be easy","Fragments":["to","to","for","in"]},{"Key":"understand for","Fragments":["a","someone"]},{"Key":"a human","Fragments":["too.","would"]},{"Key":"human too.","Fragments":["I"]},{"Key":"too. I","Fragments":["have","was","backed"]},{"Key":"to consider","Fragments":["if","when","the","(though","is","when","in","changing","is","yelling,"]},{"Key":"consider if","Fragments":["or's","it","iteration"]},{"Key":"if or's","Fragments":["or"]},{"Key":"or's or","Fragments":["and's"]},{"Key":"or and's","Fragments":["bind"]},{"Key":"and's bind","Fragments":["harder,"]},{"Key":"bind harder,","Fragments":["mixing"]},{"Key":"harder, mixing","Fragments":["positive"]},{"Key":"mixing positive","Fragments":["statements"]},{"Key":"positive statements","Fragments":["and"]},{"Key":"and negative","Fragments":["statements","cases!"]},{"Key":"negative statements","Fragments":["is"]},{"Key":"statements is","Fragments":["really","when","just","a","the"]},{"Key":"to debug","Fragments":["if","later","a","and","(imho),"]},{"Key":"debug if","Fragments":["there"]},{"Key":"something wrong","Fragments":["with","and"]},{"Key":"wrong with","Fragments":["it.","what","AddSeconds?","var.","this","multiple","that,","your","a","your","loops?","being",".Replace()"]},{"Key":"In a","Fragments":["short","bigger","language","large","single","case","worst","case","larger","real-world","more","loop","1,000,000"]},{"Key":"a short","Fragments":["logic","circuit","circuit","simple","string"]},{"Key":"short logic","Fragments":["like"]},{"Key":"think \"we\"","Fragments":["can"]},{"Key":"\"we\" can","Fragments":["be"]},{"Key":"more typy.","Fragments":["Don't"]},{"Key":"typy. Don't","Fragments":["be"]},{"Key":"Don't be","Fragments":["afraid"]},{"Key":"be afraid","Fragments":["to","to"]},{"Key":"afraid to","Fragments":["use","throw"]},{"Key":"use more","Fragments":["lines."]},{"Key":"is almost","Fragments":["like","always","the","the","impossible..."]},{"Key":"had forgotten","Fragments":["about","to","that"]},{"Key":"forgotten about","Fragments":["the","that"]},{"Key":"whole `Math`","Fragments":["namespace..."]},{"Key":"`Math` namespace...","Fragments":["I"]},{"Key":"namespace... I","Fragments":["should"]},{"Key":"should remember","Fragments":["that"]},{"Key":"for very","Fragments":["simple"]},{"Key":"very simple","Fragments":["things","and","\"serial","problem,"]},{"Key":"simple things","Fragments":["if"]},{"Key":"things if","Fragments":["you","this"]},{"Key":"trivial then","Fragments":["it"]},{"Key":"probably in","Fragments":["the"]},{"Key":"the framework","Fragments":["somewhere!"]},{"Key":"way \u0026\u0026","Fragments":["works."]},{"Key":"Looks good,","Fragments":["though","but","great","only","but","just","just","just","just","just","just","just","just","just","just","just","just","just","though","You","just","my","my","my","my","my","otherwise.","just","but","if"]},{"Key":"good, though","Fragments":["you","I","I","I'd"]},{"Key":"though you","Fragments":["might","could","might"]},{"Key":"might call","Fragments":["Math.Min(strandA.Length,"]},{"Key":"call Math.Min(strandA.Length,","Fragments":["strandB.Length)"]},{"Key":"Math.Min(strandA.Length, strandB.Length)","Fragments":["instead"]},{"Key":"strandB.Length) instead","Fragments":["of"]},{"Key":"of implementing","Fragments":["your","your","this"]},{"Key":"implementing your","Fragments":["own","suggestions.","own.","suggestions"]},{"Key":"The advantage","Fragments":["of","of"]},{"Key":"nice test","Fragments":["suit"]},{"Key":"test suit","Fragments":["is","and"]},{"Key":"suit is","Fragments":["you"]},{"Key":"working any","Fragments":["old"]},{"Key":"any old","Fragments":["way,"]},{"Key":"old way,","Fragments":["then"]},{"Key":"way, then","Fragments":["refactor"]},{"Key":"then refactor","Fragments":["to"]},{"Key":"to nice","Fragments":["code"]},{"Key":"nice code","Fragments":["with"]},{"Key":"the safety","Fragments":["net"]},{"Key":"safety net","Fragments":["of"]},{"Key":"net of","Fragments":["good"]},{"Key":"of good","Fragments":["tests."]},{"Key":" Reversing","Fragments":["the","an","the"]},{"Key":"Reversing the","Fragments":["if","string"]},{"Key":"if logic","Fragments":["can"]},{"Key":"logic can","Fragments":["reduce","be"]},{"Key":"can reduce","Fragments":["nesting","to","the"]},{"Key":"nesting and","Fragments":["make","multiple","cascading","improve"]},{"Key":"it clearer","Fragments":["which","as"]},{"Key":"statement goes","Fragments":["with"]},{"Key":"much interesting","Fragments":["C#","to"]},{"Key":"interesting C#","Fragments":["here"]},{"Key":"C# here","Fragments":["due"]},{"Key":"here due","Fragments":["to"]},{"Key":"the size","Fragments":["of","to","of","of","of","of","of"]},{"Key":"size of","Fragments":["the","human","int32.MaxValue.","the","the","the","the","the","40000"]},{"Key":"the exercise.","Fragments":["It's","As","I","For","Having","Also,","I"]},{"Key":"exercise. It's","Fragments":["a"]},{"Key":"simple rule","Fragments":["but"]},{"Key":"rule but","Fragments":["I"]},{"Key":"of explanatory","Fragments":["variables"]},{"Key":"variables just","Fragments":["to"]},{"Key":" Don't","Fragments":["argue","like","know","know","put","like","need"]},{"Key":"Don't argue","Fragments":["with"]},{"Key":"argue with","Fragments":["Bub"]},{"Key":"with Bub","Fragments":[":-)"]},{"Key":" Protected","Fragments":["set"]},{"Key":"Protected set","Fragments":["to"]},{"Key":"to disable","Fragments":["mutating","the"]},{"Key":"disable mutating","Fragments":["database"]},{"Key":"mutating database","Fragments":["externally"]},{"Key":"database externally","Fragments":["directly."]},{"Key":"used private","Fragments":["methods"]},{"Key":"methods not","Fragments":["variables"]},{"Key":"not variables","Fragments":["then"]},{"Key":"variables then","Fragments":["the"]},{"Key":"the 100's","Fragments":["check"]},{"Key":"100's check","Fragments":["would"]},{"Key":"would only","Fragments":["be","occur","get","have"]},{"Key":"calculated when","Fragments":["there"]},{"Key":"year being","Fragments":["found.","divisible","divisible"]},{"Key":"keep magic","Fragments":["strings"]},{"Key":"magic strings","Fragments":["out"]},{"Key":"strings out","Fragments":["of"]},{"Key":"I saw","Fragments":["now","another","Someone","other","this","some","a","@cary","someone","your's","that","one","that,"]},{"Key":"saw now","Fragments":["that"]},{"Key":"You need","Fragments":["to","to","a","mathematical","to","to"]},{"Key":"important than","Fragments":["guessed","whether"]},{"Key":"than guessed","Fragments":["at"]},{"Key":"guessed at","Fragments":["performance"]},{"Key":"at performance","Fragments":["gains."]},{"Key":"performance gains.","Fragments":["If"]},{"Key":"gains. If","Fragments":["performance"]},{"Key":"If performance","Fragments":["is","is","was"]},{"Key":"performance is","Fragments":["crucial","a","critical","noticeably"]},{"Key":"is crucial","Fragments":["then"]},{"Key":"crucial then","Fragments":["you"]},{"Key":"then you","Fragments":["need","bail","will","have","will","can","ought","avoid","still","don't","counted","don't","have","shouldn't","can","don't","may","will","Reverse()","only","don't","might","are","can"]},{"Key":"to measure","Fragments":["what","in"]},{"Key":"measure what","Fragments":["you"]},{"Key":"care about...","Fragments":["And"]},{"Key":"about... And","Fragments":["a"]},{"Key":"And a","Fragments":["few","class","private","guard"]},{"Key":"extra method","Fragments":["calls"]},{"Key":"method calls","Fragments":["probably","as","you've","be","the","the"]},{"Key":"calls probably","Fragments":["won't"]},{"Key":"won't make","Fragments":["much","your","any"]},{"Key":"make much","Fragments":["impact."]},{"Key":"Try reading","Fragments":["Clean"]},{"Key":"reading Clean","Fragments":["Code"]},{"Key":"Clean Code","Fragments":["or"]},{"Key":"Code or","Fragments":["The"]},{"Key":"or The","Fragments":["Pragmatic"]},{"Key":"The Pragmatic","Fragments":["Programmer.","Programmer."]},{"Key":"code won't","Fragments":["pass","fail"]},{"Key":"won't pass","Fragments":["the","if"]},{"Key":"tests. They","Fragments":["expect"]},{"Key":"They expect","Fragments":["to"]},{"Key":"call a","Fragments":["static","method"]},{"Key":"method `IsLeap`","Fragments":["on","which"]},{"Key":"`IsLeap` on","Fragments":["a"]},{"Key":" No","Fragments":["console","need","t","specific","comments","checking","need","problem.","worries","worries","you","tests","I"]},{"Key":"No console","Fragments":["app"]},{"Key":"1. Create","Fragments":["a"]},{"Key":"Create a","Fragments":["new"]},{"Key":"new Project","Fragments":["for"]},{"Key":"Project for","Fragments":["a"]},{"Key":"a Library","Fragments":["class"]},{"Key":"Library class","Fragments":["for"]},{"Key":"class for","Fragments":["your","this","this:","the","ArabicToRomanMapEntry.","example.","the"]},{"Key":"2. Right","Fragments":["click"]},{"Key":"Right click","Fragments":["the","the","the","the"]},{"Key":"click the","Fragments":["solution","new","Test","Test"]},{"Key":"solution and","Fragments":["Add","easy","am","tried","select"]},{"Key":"and Add","Fragments":["a","call).","can","to"]},{"Key":"Add a","Fragments":["new","using"]},{"Key":"new Project,","Fragments":["this"]},{"Key":"Project, this","Fragments":["project"]},{"Key":"this project","Fragments":["is"]},{"Key":"project is","Fragments":["a"]},{"Key":"a Test","Fragments":["Unit"]},{"Key":"Test Unit","Fragments":["Project."]},{"Key":"3. Delete","Fragments":["the"]},{"Key":"Delete the","Fragments":["default"]},{"Key":"default test","Fragments":["case"]},{"Key":"4. Right","Fragments":["click"]},{"Key":"new test","Fragments":["project,","checking","contradicts","where"]},{"Key":"test project,","Fragments":["add"]},{"Key":"project, add","Fragments":["existing"]},{"Key":"add existing","Fragments":["item"]},{"Key":"existing item","Fragments":["then"]},{"Key":"item then","Fragments":["find"]},{"Key":"then find","Fragments":["LeapTests","the"]},{"Key":" 5.","Fragments":["Right","If","If","If","I","Good","OK,"]},{"Key":"5. Right","Fragments":["click"]},{"Key":"Test Projects","Fragments":["references,"]},{"Key":"Projects references,","Fragments":["manage"]},{"Key":"references, manage","Fragments":["Nu-get"]},{"Key":"manage Nu-get","Fragments":["packages"]},{"Key":" 6.","Fragments":["In","While","the"]},{"Key":"6. In","Fragments":["the"]},{"Key":"the search","Fragments":["box"]},{"Key":"search box","Fragments":["in"]},{"Key":"box in","Fragments":["the"]},{"Key":"top right","Fragments":["search"]},{"Key":"right search","Fragments":["for"]},{"Key":"search for","Fragments":["NUnit","the","NUnit","locations","any"]},{"Key":"for NUnit","Fragments":["and","and"]},{"Key":"and install","Fragments":["the","it"]},{"Key":"install the","Fragments":["first","NuGet"]},{"Key":" 7.","Fragments":["Add","I"]},{"Key":"7. Add","Fragments":["a"]},{"Key":"a using","Fragments":["to","statement."]},{"Key":"using to","Fragments":["the","control"]},{"Key":"the LeapTest.cs","Fragments":["for","file.","file","and"]},{"Key":"LeapTest.cs for","Fragments":["NUnit"]},{"Key":" 8.","Fragments":["Remove","In"]},{"Key":"8. Remove","Fragments":["[Ignore]"]},{"Key":"Remove [Ignore]","Fragments":["at"]},{"Key":"[Ignore] at","Fragments":["the"]},{"Key":"of some","Fragments":["of","performance","discussion:","sort?","class).","kind","if"]},{"Key":" 9.","Fragments":["Right"]},{"Key":"9. Right","Fragments":["click"]},{"Key":"Test fixture","Fragments":["and"]},{"Key":"fixture and","Fragments":["click"]},{"Key":"and click","Fragments":["Run"]},{"Key":"click Run","Fragments":["Tests."]},{"Key":"should then","Fragments":["run"]},{"Key":"then run","Fragments":["all"]},{"Key":"run all","Fragments":["of","of"]},{"Key":" Sounds","Fragments":["sensible","fine,","good."]},{"Key":"Sounds sensible","Fragments":["to"]},{"Key":"agree, I'm","Fragments":["just"]},{"Key":"I'm just","Fragments":["not","a","encouraging"]},{"Key":"if there's","Fragments":["a","actually","a","a","a","a"]},{"Key":"pretty way","Fragments":["of"]},{"Key":"doing it.","Fragments":["I","Much"]},{"Key":"might return","Fragments":["to","that"]},{"Key":"return to","Fragments":["this","the","a","the"]},{"Key":"and attempt","Fragments":["some"]},{"Key":"attempt some","Fragments":["RegEx"]},{"Key":"some RegEx","Fragments":["and"]},{"Key":"RegEx and","Fragments":["see"]},{"Key":"Added ```char.IsLetter()```","Fragments":["instead"]},{"Key":"```char.IsLetter()``` instead","Fragments":["of"]},{"Key":"own magic","Fragments":["string."]},{"Key":" Neat,","Fragments":["hadn't"]},{"Key":"Neat, hadn't","Fragments":["even"]},{"Key":"hadn't even","Fragments":["thought"]},{"Key":"even thought","Fragments":["of"]},{"Key":"of extensions","Fragments":["for","in"]},{"Key":"extensions for","Fragments":["this."]},{"Key":"calculation was","Fragments":["an","preformed,"]},{"Key":"an expensive","Fragments":["one,","operation","operation.","operation","operation.","operation","operation"]},{"Key":"expensive one,","Fragments":["would"]},{"Key":"one, would","Fragments":["a"]},{"Key":"would a","Fragments":["good","one","variable"]},{"Key":"idea be","Fragments":["to"]},{"Key":"fourCheck calculation","Fragments":["its"]},{"Key":"calculation its","Fragments":["own"]},{"Key":"own if","Fragments":["statement,","check"]},{"Key":"statement, and","Fragments":["then","can"]},{"Key":"then nest","Fragments":["the"]},{"Key":"nest the","Fragments":["others"]},{"Key":"the others","Fragments":["within","are","could"]},{"Key":"others within","Fragments":["that"]},{"Key":"within that","Fragments":["block?","context.","method,"]},{"Key":"that block?","Fragments":["That"]},{"Key":"block? That","Fragments":["way"]},{"Key":"two calculations","Fragments":["wouldn't"]},{"Key":"calculations wouldn't","Fragments":["even"]},{"Key":"wouldn't even","Fragments":["be","need"]},{"Key":"even be","Fragments":["performed","nicer","simpler"]},{"Key":"be performed","Fragments":["unless"]},{"Key":"performed unless","Fragments":["the"]},{"Key":"first gatekeeper","Fragments":["is"]},{"Key":"gatekeeper is","Fragments":["true."]},{"Key":" Dropped","Fragments":["some","a"]},{"Key":"Dropped some","Fragments":["curly"]},{"Key":"some curly","Fragments":["braces."]},{"Key":"braces. \"without","Fragments":["braces"]},{"Key":"\"without braces","Fragments":["if"]},{"Key":"branch keyword\"","Fragments":["was"]},{"Key":"keyword\" was","Fragments":["a"]},{"Key":"point and","Fragments":["improved","if"]},{"Key":"and improved","Fragments":["readability.","code"]},{"Key":"Made into","Fragments":["extension"]},{"Key":"into extension","Fragments":["method","methods","method,"]},{"Key":"method so","Fragments":["that"]},{"Key":"that we","Fragments":["can","want","should","need","are","shall","normally","do","are","can","have","normally","get","know","are"]},{"Key":"change having","Fragments":["had"]},{"Key":"having had","Fragments":["a"]},{"Key":"at other","Fragments":["peoples","people's","users","peoples","users","peoples","examples","versions","users","people's","submissions,","submissions","implementations","solutions","submissions","solutions"]},{"Key":"other peoples","Fragments":["approach?","code","code","submissions","code.","implementations"]},{"Key":"for pattern","Fragments":["match"]},{"Key":"pattern match","Fragments":["type"]},{"Key":"match type","Fragments":["of"]},{"Key":"type of","Fragments":["formatting","empty","keypairvalue","`iHamming`...","external","NucleotideCounts","problem.","method","input.","special","flag.","solution","data","the","Commands()","the"]},{"Key":"of formatting","Fragments":["and"]},{"Key":"formatting and","Fragments":["think"]},{"Key":"and think","Fragments":["this","about"]},{"Key":"looks rather","Fragments":["nice."]},{"Key":"rather nice.","Fragments":["I"]},{"Key":"nice. I","Fragments":["got","bet"]},{"Key":"got a","Fragments":["bit","lot","little","check","variable","few","little","few","bit","rid","lot"]},{"Key":"bit stumped","Fragments":["when"]},{"Key":"stumped when","Fragments":[".All()"]},{"Key":"when .All()","Fragments":["return"]},{"Key":".All() return","Fragments":["true"]},{"Key":"for empty","Fragments":["lists","grades\"","deque"]},{"Key":"empty lists","Fragments":["but"]},{"Key":"lists but","Fragments":["still,"]},{"Key":"but still,","Fragments":["I"]},{"Key":"still, I","Fragments":["think"]},{"Key":"think LINQ","Fragments":["makes"]},{"Key":"LINQ makes","Fragments":["everything"]},{"Key":"makes everything","Fragments":["more","overly"]},{"Key":"everything more","Fragments":["readable!"]},{"Key":"Very nitpicking!","Fragments":["You"]},{"Key":"nitpicking! You","Fragments":["should"]},{"Key":"You should","Fragments":["have","perform","be","also","initially","try","really","condense","also","add","look","probably","probably","consider","be","avoid","upload","be","not","not","try"]},{"Key":"space after","Fragments":["`,`s."]},{"Key":"A style","Fragments":["thing"]},{"Key":"you probably","Fragments":["should","would","want"]},{"Key":"probably should","Fragments":["not","be","not","have","at"]},{"Key":"have spaces","Fragments":["around"]},{"Key":"spaces around","Fragments":["`%`","operators).","the","`%`"]},{"Key":" Making","Fragments":["an","your","the","the"]},{"Key":"Making an","Fragments":["extension"]},{"Key":"on `int`","Fragments":["should"]},{"Key":"`int` should","Fragments":["be"]},{"Key":"with care,","Fragments":["if"]},{"Key":"care, if","Fragments":["most"]},{"Key":"if most","Fragments":["`int`s"]},{"Key":"most `int`s","Fragments":["in"]},{"Key":"`int`s in","Fragments":["your"]},{"Key":"your system","Fragments":["are","having"]},{"Key":"system are","Fragments":["not"]},{"Key":"not years","Fragments":["then"]},{"Key":"years then","Fragments":["it"]},{"Key":"be confusing","Fragments":["for","for"]},{"Key":"confusing for","Fragments":["people","people"]},{"Key":"for people","Fragments":["to","if","not","to"]},{"Key":"people to","Fragments":["be","see"]},{"Key":"call `.IsLeap`","Fragments":["on"]},{"Key":"`.IsLeap` on","Fragments":["a"]},{"Key":"a non-year","Fragments":["`int`."]},{"Key":" Thumbs","Fragments":["up!"]},{"Key":"use brackets","Fragments":["around","in","for","under","and"]},{"Key":"brackets around","Fragments":["if","the"]},{"Key":"around if","Fragments":["statements","statements"]},{"Key":"statements even","Fragments":["if"]},{"Key":"even if","Fragments":["they","code","I","you","I","both","it's","you","current","`DoubleWordScore`","the","not","they","it"]},{"Key":"It means","Fragments":["that","unknown"]},{"Key":"that errors","Fragments":["down"]},{"Key":"errors down","Fragments":["the"]},{"Key":"down the","Fragments":["line","actual","road.","road.","fat,","problem","Regex","line.","road.","road.","actual","road.","strings","result"]},{"Key":"line are","Fragments":["less"]},{"Key":"are less","Fragments":["likely.","now"]},{"Key":"Some discussion","Fragments":["as"]},{"Key":"discussion as","Fragments":["to"]},{"Key":"to why","Fragments":["here","\"a\"","not"]},{"Key":"why here","Fragments":["http://programmers.stackexchange.com/questions/16528/single-statement-if-block-braces-or-no"]},{"Key":"the single","Fragments":["return","exit","exit","line","line","line","letters.","line","\\n","line"]},{"Key":"statement, makes","Fragments":["method"]},{"Key":"makes method","Fragments":["logic"]},{"Key":"method logic","Fragments":["easier"]},{"Key":"logic easier","Fragments":["to"]},{"Key":" Simplify","Fragments":["by"]},{"Key":"Simplify by","Fragments":["using"]},{"Key":"using built","Fragments":["in"]},{"Key":" Bonus","Fragments":["point:"]},{"Key":"Bonus point:","Fragments":["no"]},{"Key":"point: no","Fragments":["names"]},{"Key":"no names","Fragments":["to"]},{"Key":"names to","Fragments":["be"]},{"Key":"used twice","Fragments":["by"]},{"Key":"twice by","Fragments":["implementing","doing"]},{"Key":"by implementing","Fragments":["NameDatabase.","a"]},{"Key":" Randomizer","Fragments":["made"]},{"Key":"Randomizer made","Fragments":["static"]},{"Key":"made static","Fragments":["to","too."]},{"Key":"static to","Fragments":["make","my","avoid","prevent"]},{"Key":"sure RNG","Fragments":["not"]},{"Key":"RNG not","Fragments":["seeded"]},{"Key":"not seeded","Fragments":["again"]},{"Key":"seeded again","Fragments":["and"]},{"Key":"again and","Fragments":["again"]},{"Key":"and again","Fragments":["(duplicates)."]},{"Key":"Good point!","Fragments":["I'll","I"]},{"Key":"point! I'll","Fragments":["do"]},{"Key":"I'll do","Fragments":["that.","that,","that","is"]},{"Key":"do that.","Fragments":["I","Thanks!","If"]},{"Key":"wasn't even","Fragments":["thinking"]},{"Key":"even thinking","Fragments":["about"]},{"Key":"about that","Fragments":["branch","1%.","particular","after-the-fact.","after","trick,"]},{"Key":"that branch","Fragments":["as"]},{"Key":"branch as","Fragments":["a"]},{"Key":"null check","Fragments":["so","on","before"]},{"Key":"check so","Fragments":["nice"]},{"Key":"so nice","Fragments":["catch."]},{"Key":"nice catch.","Fragments":["Thanks"]},{"Key":"about doing","Fragments":["constants","that,","it"]},{"Key":"doing constants","Fragments":["here,"]},{"Key":"constants here,","Fragments":["too,"]},{"Key":"here, too,","Fragments":["@carmel,"]},{"Key":"too, @carmel,","Fragments":["but"]},{"Key":"@carmel, but","Fragments":["they"]},{"Key":"they would","Fragments":["be","be","be"]},{"Key":"be FOUR","Fragments":["or"]},{"Key":"FOUR or","Fragments":["ONE_HUNDRED"]},{"Key":"or ONE_HUNDRED","Fragments":["because"]},{"Key":"ONE_HUNDRED because","Fragments":["I"]},{"Key":"would call","Fragments":["them..."]},{"Key":"call them...","Fragments":["That"]},{"Key":"them... That","Fragments":["would"]},{"Key":"make them","Fragments":["really","private.","lowercase","static","properties"]},{"Key":"them really","Fragments":["silly."]},{"Key":"really silly.","Fragments":["Also,"]},{"Key":"silly. Also,","Fragments":["they"]},{"Key":"Also, they","Fragments":["will"]},{"Key":"they will","Fragments":["never","have","have","know","continue","at"]},{"Key":"change and","Fragments":["they","why.","break"]},{"Key":"and they","Fragments":["won't","don't","were","are","all"]},{"Key":"they won't","Fragments":["be"]},{"Key":"reused by","Fragments":["anything"]},{"Key":"by anything","Fragments":["else."]},{"Key":"but having","Fragments":["two","them","multiple","more"]},{"Key":"having two","Fragments":["returns"]},{"Key":"two returns","Fragments":["at"]},{"Key":"returns at","Fragments":["the"]},{"Key":"the very","Fragments":["end","same","end"]},{"Key":"very end","Fragments":["is","I"]},{"Key":"end is","Fragments":["usually"]},{"Key":"is usually","Fragments":["acceptable","a","better","a","frowned","just","reserved"]},{"Key":"usually acceptable","Fragments":["to"]},{"Key":" Sure,","Fragments":["but","I","using","push","int.Parse()","these","that","it","but"]},{"Key":"Sure, but","Fragments":["that's","I"]},{"Key":"that's such","Fragments":["a"]},{"Key":"a micro","Fragments":["optimization"]},{"Key":"optimization I","Fragments":["think","can"]},{"Key":"it's neater","Fragments":["to"]},{"Key":"neater to","Fragments":["just"]},{"Key":"just keep","Fragments":["everything","that","track","flagging","digits,"]},{"Key":"keep everything","Fragments":["together."]},{"Key":"everything together.","Fragments":["Thank"]},{"Key":"together. Thank","Fragments":["you"]},{"Key":"your call","Fragments":["to"]},{"Key":"to `IsSilent`","Fragments":["come"]},{"Key":"`IsSilent` come","Fragments":["first"]},{"Key":"come first","Fragments":["then"]},{"Key":"first then","Fragments":["you","\u0026\u0026","it","using"]},{"Key":"you bail","Fragments":["out"]},{"Key":"on 'null'","Fragments":["inputs"]},{"Key":"'null' inputs","Fragments":["which"]},{"Key":"inputs which","Fragments":["may"]},{"Key":"which may","Fragments":["be","not"]},{"Key":"be nice.","Fragments":["Though"]},{"Key":"nice. Though","Fragments":["admittedly"]},{"Key":"Though admittedly","Fragments":["not"]},{"Key":"admittedly not","Fragments":["forced"]},{"Key":"not forced","Fragments":["by"]},{"Key":"forced by","Fragments":["the"]},{"Key":"is wrong.","Fragments":[":)"]},{"Key":"wrong. :)","Fragments":["Just"]},{"Key":":) Just","Fragments":["because","to"]},{"Key":"Just because","Fragments":["something","grade"]},{"Key":"because something","Fragments":["has"]},{"Key":"something has","Fragments":["less"]},{"Key":"has less","Fragments":["lines"]},{"Key":"lines doesn't","Fragments":["mean"]},{"Key":"doesn't mean","Fragments":["you","it","anything"]},{"Key":"mean you","Fragments":["are"]},{"Key":"are allowed","Fragments":["to"]},{"Key":"allowed to","Fragments":["break"]},{"Key":"to break","Fragments":["general","(if","up","out","your","up","it","from","it","the","the","a"]},{"Key":"break general","Fragments":["rules"]},{"Key":"general rules","Fragments":["like"]},{"Key":"rules like","Fragments":["that."]},{"Key":"like that.","Fragments":["(Of"]},{"Key":"that. (Of","Fragments":["course,"]},{"Key":"(Of course,","Fragments":["this"]},{"Key":"this has","Fragments":["always","failed,"]},{"Key":"has always","Fragments":["been","been","been"]},{"Key":"always been","Fragments":["a","a","a","taught","good"]},{"Key":"of mine.)","Fragments":[":)",":)"]},{"Key":"I highly","Fragments":["dislike"]},{"Key":"highly dislike","Fragments":["multiple"]},{"Key":"dislike multiple","Fragments":["returns"]},{"Key":"in methods.","Fragments":["Makes"]},{"Key":"methods. Makes","Fragments":["it"]},{"Key":"Makes it","Fragments":["harder","a","a","a","a","a","a","a","less"]},{"Key":"it harder","Fragments":["to","to","to","to","to","to","to","to"]},{"Key":"debug later","Fragments":["since"]},{"Key":"later since","Fragments":["you"]},{"Key":"know where","Fragments":["it","my","its","you","the"]},{"Key":"it drops","Fragments":["out."]},{"Key":"drops out.","Fragments":["(Just"]},{"Key":"out. (Just","Fragments":["a"]},{"Key":"(Just a","Fragments":["pet"]},{"Key":"using ```KeyValuePair\u003cint,","Fragments":["IList\u003cstring\u003e\u003e```"]},{"Key":"```KeyValuePair\u003cint, IList\u003cstring\u003e\u003e```","Fragments":["you"]},{"Key":"IList\u003cstring\u003e\u003e``` you","Fragments":["could"]},{"Key":"the Key","Fragments":["collection","via"]},{"Key":"Key collection","Fragments":["on"]},{"Key":"collection on","Fragments":["the"]},{"Key":"the dictionary.","Fragments":["Like","You","\"A\"","The","However,","It","I","This"]},{"Key":"dictionary. Like","Fragments":["```foreach"]},{"Key":"Like ```foreach","Fragments":["(var"]},{"Key":"```foreach (var","Fragments":["key","letter"]},{"Key":"(var key","Fragments":["in"]},{"Key":"key in","Fragments":["old.Keys)```","the","lower"]},{"Key":"in old.Keys)```","Fragments":["and"]},{"Key":"old.Keys)``` and","Fragments":["access"]},{"Key":"and access","Fragments":["the"]},{"Key":"value by","Fragments":["```old[key]```.","two"]},{"Key":"is duplicate","Fragments":["character"]},{"Key":"duplicate character","Fragments":["you"]},{"Key":"character you","Fragments":["will"]},{"Key":"will get","Fragments":["an","NullPointReference","thrown]","stuck","created.","called","an","an","a","a","an","odd","a","an"]},{"Key":"an ArgumentException","Fragments":["on","with","from"]},{"Key":"Looks great","Fragments":["otherwise!"]},{"Key":"see why","Fragments":["this","it","it","you've"]},{"Key":"why this","Fragments":["is","is","isn't"]},{"Key":"idea from","Fragments":["your","ruby."]},{"Key":"Why does","Fragments":["a"]},{"Key":"year on","Fragments":["a"]},{"Key":"a centuary","Fragments":["get"]},{"Key":"centuary get","Fragments":["a"]},{"Key":"different message","Fragments":["(line"]},{"Key":"message (line","Fragments":["15)"]},{"Key":"(line 15)","Fragments":["from"]},{"Key":"15) from","Fragments":["a"]},{"Key":"a 'normal'","Fragments":["leap"]},{"Key":"'normal' leap","Fragments":["year"]},{"Key":"year (line","Fragments":["19)"]},{"Key":"small error,","Fragments":["but"]},{"Key":"error, but","Fragments":["goes","you","it"]},{"Key":"but goes","Fragments":["to"]},{"Key":"goes to","Fragments":["show","prove"]},{"Key":"show how","Fragments":["even"]},{"Key":"how even","Fragments":["in"]},{"Key":"even in","Fragments":["a"]},{"Key":"small project","Fragments":["it"]},{"Key":"project it","Fragments":["is"]},{"Key":"get unexpected","Fragments":["outputs"]},{"Key":"unexpected outputs","Fragments":["from"]},{"Key":"outputs from","Fragments":["apparently"]},{"Key":"from apparently","Fragments":["simple"]},{"Key":"apparently simple","Fragments":["code."]},{"Key":"simple code.","Fragments":["Imagine"]},{"Key":"code. Imagine","Fragments":["if"]},{"Key":"Imagine if","Fragments":["the","this"]},{"Key":"was 100","Fragments":["lines,"]},{"Key":"100 lines,","Fragments":["or"]},{"Key":"lines, or","Fragments":["spread","even"]},{"Key":"or spread","Fragments":["across"]},{"Key":"spread across","Fragments":["multiple"]},{"Key":"across multiple","Fragments":["classes."]},{"Key":"multiple classes.","Fragments":["Finding"]},{"Key":"classes. Finding","Fragments":["the"]},{"Key":"Finding the","Fragments":["issues"]},{"Key":"the issues","Fragments":["can"]},{"Key":"issues can","Fragments":["quickly"]},{"Key":"can quickly","Fragments":["become","read"]},{"Key":"quickly become","Fragments":["difficult."]},{"Key":"is code","Fragments":["that"]},{"Key":"that responds","Fragments":["simply"]},{"Key":"responds simply","Fragments":["to"]},{"Key":"simply to","Fragments":["a","avoid","generalize"]},{"Key":"false (irrespective","Fragments":["of"]},{"Key":"(irrespective of","Fragments":["how"]},{"Key":"how that","Fragments":["is","would","slipped","would","foreach","exactly"]},{"Key":"is calculated)","Fragments":["then"]},{"Key":"calculated) then","Fragments":["there"]},{"Key":"then there","Fragments":["should","are","is","is"]},{"Key":"there should","Fragments":["be","be","only","be","be","have","ahve","be"]},{"Key":"single place","Fragments":["in"]},{"Key":"place in","Fragments":["the","the"]},{"Key":"code where","Fragments":["the","you"]},{"Key":"the message","Fragments":["is","should","was","contained","was","contains"]},{"Key":"message is","Fragments":["created,"]},{"Key":"is created,","Fragments":["so"]},{"Key":"created, so","Fragments":["errors"]},{"Key":"so errors","Fragments":["with"]},{"Key":"errors with","Fragments":["the"]},{"Key":"message should","Fragments":["be"]},{"Key":"to track","Fragments":["down.","down"]},{"Key":"Well, if","Fragments":["you"]},{"Key":"DateTime.Now.Year, it","Fragments":["is"]},{"Key":"an int.","Fragments":["I","Gonna","Based"]},{"Key":"int. I","Fragments":["imagine"]},{"Key":"I imagine","Fragments":["BC","the"]},{"Key":"imagine BC","Fragments":["is"]},{"Key":"BC is","Fragments":["a"]},{"Key":" Combining","Fragments":["your"]},{"Key":"Combining your","Fragments":["display"]},{"Key":"your display","Fragments":["logic"]},{"Key":"display logic","Fragments":["(Console","within"]},{"Key":"logic (Console","Fragments":["calls)"]},{"Key":"(Console calls)","Fragments":["with"]},{"Key":"calls) with","Fragments":["your"]},{"Key":"with your","Fragments":["application","braces.","first","own","experience.","using","IsScreaming()","suggestion.","regular","method","approach","code,","FindFirst()","factor","logic:"]},{"Key":"application logic","Fragments":["(the"]},{"Key":"logic (the","Fragments":["working"]},{"Key":"(the working","Fragments":["out"]},{"Key":"working out","Fragments":["if","how"]},{"Key":"year) is","Fragments":["very"]},{"Key":"very bad","Fragments":["practice."]},{"Key":"is impossible","Fragments":["to"]},{"Key":"test the","Fragments":["logic"]},{"Key":"without running","Fragments":["the"]},{"Key":"pull all","Fragments":["the"]},{"Key":"a `Year`","Fragments":["class"]},{"Key":"static `IsLeap`","Fragments":["method"]},{"Key":"`IsLeap` method","Fragments":["then"]},{"Key":"method then","Fragments":["you"]},{"Key":"to run","Fragments":["the","your","against","on","the","the","i","'i'","the","the","the","without","to","the"]},{"Key":"suit and","Fragments":["have"]},{"Key":"have confidence","Fragments":["your"]},{"Key":"confidence your","Fragments":["logic"]},{"Key":" Help","Fragments":["on"]},{"Key":"Help on","Fragments":["setting"]},{"Key":"on setting","Fragments":["up"]},{"Key":"setting up","Fragments":["nUnit","data"]},{"Key":"up nUnit","Fragments":["is"]},{"Key":"nUnit is","Fragments":["available"]},{"Key":"available here.","Fragments":["http://help.exercism.io/getting-started-with-csharp.html"]},{"Key":"Also what","Fragments":["@misty"]},{"Key":"what @misty","Fragments":["said"]},{"Key":"@misty said","Fragments":["about"]},{"Key":"said about","Fragments":["\"\u0026\""]},{"Key":"about \"\u0026\"","Fragments":["vs"]},{"Key":"\"\u0026\" vs","Fragments":["\"\u0026\u0026\"."]},{"Key":"some help","Fragments":["available","with","over"]},{"Key":"help available","Fragments":["to"]},{"Key":"available to","Fragments":["get","others,","us."]},{"Key":"an nUnit","Fragments":["test"]},{"Key":"nUnit test","Fragments":["runner"]},{"Key":"runner up","Fragments":["and"]},{"Key":"up and","Fragments":["running,","keep","running","simplified","you","working,"]},{"Key":"and running,","Fragments":["and"]},{"Key":"running, and","Fragments":["using"]},{"Key":"and using","Fragments":["the","it","it","a","a","Add,","the","constants","```list.GetEnumerator()```","the","the"]},{"Key":"the free","Fragments":["visual","names"]},{"Key":"free visual","Fragments":["studio"]},{"Key":"visual studio","Fragments":["IDE.","2010"]},{"Key":"code (deciding","Fragments":["if"]},{"Key":"(deciding if","Fragments":["a"]},{"Key":"is leap)","Fragments":["should"]},{"Key":"leap) should","Fragments":["be"]},{"Key":"be separated","Fragments":["from"]},{"Key":"separated from","Fragments":["the"]},{"Key":"does input","Fragments":["from"]},{"Key":"user and","Fragments":["display"]},{"Key":"and display","Fragments":["of"]},{"Key":"display of","Fragments":["human"]},{"Key":"of human","Fragments":["readable","genome)"]},{"Key":"human readable","Fragments":["messages."]},{"Key":"fact for","Fragments":["this"]},{"Key":"this site","Fragments":["a","yesterday).","I","the","are","(I"]},{"Key":"site a","Fragments":["console"]},{"Key":"required at","Fragments":["all,"]},{"Key":"at all,","Fragments":["simply","it","here.","pretty","when","since"]},{"Key":"all, simply","Fragments":["a"]},{"Key":"simply a","Fragments":["class","10-character"]},{"Key":"class `Year`","Fragments":["with"]},{"Key":"`IsLeap` which","Fragments":["will","doesn't"]},{"Key":"which will","Fragments":["return","be","be","be"]},{"Key":"return `true`","Fragments":["or"]},{"Key":"`true` or","Fragments":["`false`."]},{"Key":"Also your","Fragments":["`return`","checks","code"]},{"Key":"your `return`","Fragments":["statement"]},{"Key":"`return` statement","Fragments":["is","instead"]},{"Key":"form \"if","Fragments":["true"]},{"Key":"\"if true","Fragments":["return"]},{"Key":"can simply","Fragments":["return","do","use","\"return","be"]},{"Key":"simply return","Fragments":["the","the","no","anagramList.ToArray().","false"]},{"Key":"the statement.The","Fragments":["`?"]},{"Key":"statement.The `?","Fragments":["true"]},{"Key":"`? true","Fragments":[":"]},{"Key":"methods on","Fragments":["built-in","the","base","built-in"]},{"Key":"on built-in","Fragments":["types","types.","types"]},{"Key":"types are","Fragments":["usually","`int`,","char"]},{"Key":"are usually","Fragments":["a","run","orderless,"]},{"Key":"usually a","Fragments":["bad","bad","disaster"]},{"Key":" \"int","Fragments":["i\""]},{"Key":"\"int i\"","Fragments":["is"]},{"Key":"i\" is","Fragments":["a"]},{"Key":"bad name","Fragments":["here.","there."]},{"Key":"name here.","Fragments":["While"]},{"Key":"here. While","Fragments":["it"]},{"Key":"While it","Fragments":["is","is","really","isn't","is","may","works,","is","does","makes"]},{"Key":"less characters,","Fragments":["someone"]},{"Key":"characters, someone","Fragments":["wouldn't"]},{"Key":"someone wouldn't","Fragments":["necessarily"]},{"Key":"wouldn't necessarily","Fragments":["know"]},{"Key":"necessarily know","Fragments":["that"]},{"Key":"that \"i\"","Fragments":["stood"]},{"Key":"\"i\" stood","Fragments":["for"]},{"Key":"stood for","Fragments":["year."]},{"Key":" @fanny","Fragments":["The"]},{"Key":"@fanny The","Fragments":["fact"]},{"Key":"code within","Fragments":["the"]},{"Key":"the context","Fragments":["of","of","of","that","I"]},{"Key":"context of","Fragments":["the","what","this"]},{"Key":"and IsLeap","Fragments":["method,","is","methods,"]},{"Key":"IsLeap method,","Fragments":["I'm"]},{"Key":"method, I'm","Fragments":["pretty"]},{"Key":"I'm pretty","Fragments":["sure","satisfied","sure","sure","new","new","happy","sure"]},{"Key":"sure a","Fragments":["developer"]},{"Key":"a developer","Fragments":["is"]},{"Key":"developer is","Fragments":["going"]},{"Key":"I'd probably","Fragments":["change","pull","have"]},{"Key":"probably change","Fragments":["here"]},{"Key":"change here","Fragments":["is"]},{"Key":"to replace","Fragments":["the","your","the","the","characters","loop","characters","the","'x'","for","c#","Enum.Prase","your","with"]},{"Key":" if(A)","Fragments":["return"]},{"Key":"if(A) return","Fragments":["true"]},{"Key":" with","Fragments":["just","this:","this","multiples"]},{"Key":"statement per","Fragments":["function.","function"]},{"Key":" Im","Fragments":["not","also","not"]},{"Key":"Im not","Fragments":["a","sure"]},{"Key":"nesting foreach.","Fragments":["Can"]},{"Key":"foreach. Can","Fragments":["it"]},{"Key":"Can it","Fragments":["be"]},{"Key":"done without?","Fragments":[":)"]},{"Key":"about this","Fragments":["a","a","today!","problem","i","one.","exercise,","one","so","exercise.","in"]},{"Key":"lot and","Fragments":["as"]},{"Key":"and as","Fragments":["much","everyone","you","a"]},{"Key":"much as","Fragments":["I","I","anything","a"]},{"Key":"like loop","Fragments":["in"]},{"Key":"loop in","Fragments":["loop","the","the","Sieve...","the","a","FindFirstDayOfWeek?","Verse()","_ints.Min()","Match","the","Verse?","Verses()?"]},{"Key":"in loop","Fragments":["I"]},{"Key":"loop I","Fragments":["couldn't"]},{"Key":"couldn't come","Fragments":["up"]},{"Key":"with better","Fragments":["solution,","names."]},{"Key":"better solution,","Fragments":["outside"]},{"Key":"solution, outside","Fragments":["of"]},{"Key":"of expecting","Fragments":["only"]},{"Key":"expecting only","Fragments":["the"]},{"Key":"the specified","Fragments":["dataset","key","index.","key.","week,"]},{"Key":"specified dataset","Fragments":["instead"]},{"Key":"dataset instead","Fragments":["of"]},{"Key":"any dataset","Fragments":["with"]},{"Key":"dataset with","Fragments":["given"]},{"Key":"with given","Fragments":["structure"]},{"Key":"breaking this","Fragments":["down"]},{"Key":"down further","Fragments":["seemed"]},{"Key":"further seemed","Fragments":["unnecessary"]},{"Key":"seemed unnecessary","Fragments":["in"]},{"Key":"unnecessary in","Fragments":["such"]},{"Key":"in such","Fragments":["simple"]},{"Key":"such simple","Fragments":["task","stuff"]},{"Key":"My first","Fragments":["thought","conditional","pass","iteration.","attempt","thought","time","thought"]},{"Key":"first thought","Fragments":["is:","was","was"]},{"Key":"thought is:","Fragments":["'oh"]},{"Key":"is: 'oh","Fragments":["my!"]},{"Key":"'oh my!","Fragments":["so"]},{"Key":"my! so","Fragments":["many"]},{"Key":"many ifs","Fragments":["and"]},{"Key":"ifs and","Fragments":["indentations!'.","return"]},{"Key":"second is","Fragments":["that"]},{"Key":"prefer descriptive","Fragments":["functions"]},{"Key":"descriptive functions","Fragments":["to"]},{"Key":"to comments","Fragments":["--"]},{"Key":"comments --","Fragments":["so"]},{"Key":"-- so","Fragments":["each"]},{"Key":"so each","Fragments":["case"]},{"Key":"case could","Fragments":["be"]},{"Key":"be handled","Fragments":["by","somehow,"]},{"Key":"handled by","Fragments":["a"]},{"Key":" @ryann-FredrikE","Fragments":["That"]},{"Key":"@ryann-FredrikE That","Fragments":["is"]},{"Key":"a *very*","Fragments":["opinionated"]},{"Key":"*very* opinionated","Fragments":["subject."]},{"Key":"prefer early","Fragments":["returns"]},{"Key":"early returns","Fragments":["in","require","are","are"]},{"Key":"in general,","Fragments":["but","especially"]},{"Key":"general, but","Fragments":["I"]},{"Key":"wouldn't call","Fragments":["it"]},{"Key":"call it","Fragments":["the","over-engineered.","when","P)","a","from"]},{"Key":"it the","Fragments":["right","better","True","context.","program"]},{"Key":" @ryann","Fragments":["I"]},{"Key":"@ryann I","Fragments":["don't"]},{"Key":"think a","Fragments":["Shouting","good","shorter","for","better","lot"]},{"Key":"a Shouting","Fragments":["class"]},{"Key":"Shouting class","Fragments":["was"]},{"Key":"class was","Fragments":["necessary.","Year.IsLeap(x)"]},{"Key":"was necessary.","Fragments":["The"]},{"Key":"necessary. The","Fragments":["shouting","foreach","second"]},{"Key":"The shouting","Fragments":["methods"]},{"Key":"shouting methods","Fragments":["could"]},{"Key":"methods could","Fragments":["be","help"]},{"Key":"be private","Fragments":["static","or","and","here","and"]},{"Key":"the Bob","Fragments":["class"]},{"Key":"Bob class","Fragments":["for"]},{"Key":"simple problem.","Fragments":["I","You"]},{"Key":"use for","Fragments":["public","loops","the"]},{"Key":"public classes","Fragments":["if"]},{"Key":"classes if","Fragments":["it"]},{"Key":"it were","Fragments":["part","being","used","taking","going"]},{"Key":"were part","Fragments":["of"]},{"Key":"a bigger","Fragments":["project","class","headache"]},{"Key":"bigger project","Fragments":["though!"]},{"Key":"project though!","Fragments":[":)"]},{"Key":"dislike having","Fragments":["multiple"]},{"Key":"multiple returns,","Fragments":["or","and","you"]},{"Key":"returns, or","Fragments":["needless"]},{"Key":"or needless","Fragments":["ifs/cases"]},{"Key":"needless ifs/cases","Fragments":["when"]},{"Key":"ifs/cases when","Fragments":["the"]},{"Key":"be captured","Fragments":["in"]},{"Key":"captured in","Fragments":["one"]},{"Key":"The boolean","Fragments":["operators","inside"]},{"Key":"boolean operators","Fragments":["short","require"]},{"Key":"operators short","Fragments":["circuit,"]},{"Key":"short circuit,","Fragments":["so"]},{"Key":"circuit, so","Fragments":["this"]},{"Key":"should present","Fragments":["as"]},{"Key":"as little","Fragments":["overhead","as","work","as","work"]},{"Key":"little overhead","Fragments":["as"]},{"Key":"overhead as","Fragments":["possible,","low"]},{"Key":"is descriptive","Fragments":["functions,"]},{"Key":"descriptive functions,","Fragments":["even"]},{"Key":"functions, even","Fragments":["--"]},{"Key":"even --","Fragments":["in"]},{"Key":"-- in","Fragments":["this"]},{"Key":"case --","Fragments":["if"]},{"Key":"-- if","Fragments":["it"]},{"Key":"it means","Fragments":["avoiding","checking","the"]},{"Key":"means avoiding","Fragments":["a"]},{"Key":"avoiding a","Fragments":["not"]},{"Key":"not operator","Fragments":["by","would"]},{"Key":"operator by","Fragments":["adding"]},{"Key":"by adding","Fragments":["a","the","new","a","3,"]},{"Key":"adding a","Fragments":["negation","new","new","pos","custom","null","line","count","Trim()"]},{"Key":"a negation","Fragments":["function."]},{"Key":"negation function.","Fragments":["That's"]},{"Key":"function. That's","Fragments":["probably"]},{"Key":"That's probably","Fragments":["because","a"]},{"Key":"probably because","Fragments":["in","it's","I"]},{"Key":"because in","Fragments":["English"]},{"Key":"English 'A","Fragments":["is"]},{"Key":"'A is","Fragments":["not"]},{"Key":"not B'","Fragments":["parses"]},{"Key":"B' parses","Fragments":["so"]},{"Key":"parses so","Fragments":["much"]},{"Key":"so much","Fragments":["more","is","clearer!","for","that","when","fun","nesting.","for","over","for","nicer","on","code,","for","as"]},{"Key":"more intuitively","Fragments":["than"]},{"Key":"intuitively than","Fragments":["'Not"]},{"Key":"than 'Not","Fragments":["A"]},{"Key":"'Not A","Fragments":["is"]},{"Key":"A is","Fragments":["B'.","bigger,"]},{"Key":"to self","Fragments":["comment"]},{"Key":"self comment","Fragments":["this"]},{"Key":"comment this","Fragments":["code"]},{"Key":"and thought","Fragments":["this","it"]},{"Key":"an ideal","Fragments":["compromise."]},{"Key":"ideal compromise.","Fragments":["If"]},{"Key":"compromise. If","Fragments":["I"]},{"Key":"the ability","Fragments":["to","to","to","of"]},{"Key":"ability to","Fragments":["make","count","count","just"]},{"Key":"make custom","Fragments":["operators"]},{"Key":"custom operators","Fragments":["I"]},{"Key":"operators I","Fragments":["would"]},{"Key":"(year DivisibleBy","Fragments":["400)"]},{"Key":"DivisibleBy 400)","Fragments":["return"]},{"Key":"400) return","Fragments":["true;","true;"]},{"Key":" ...","Fragments":["etc.","{facepalm}"]},{"Key":"Removed the","Fragments":["if","superfluous","extra","need"]},{"Key":"statements from","Fragments":["previous"]},{"Key":"from previous","Fragments":["version.","submission"]},{"Key":" Had","Fragments":["never","trouble","some"]},{"Key":"Had never","Fragments":["actually"]},{"Key":"never actually","Fragments":["thought","worked"]},{"Key":"actually thought","Fragments":["of"]},{"Key":"that before!","Fragments":["Done"]},{"Key":"before! Done","Fragments":["a"]},{"Key":"Done a","Fragments":["third"]},{"Key":"a third","Fragments":["iteration","\"else"]},{"Key":"third iteration","Fragments":["now","I've","done"]},{"Key":"iteration now","Fragments":["but"]},{"Key":"now but","Fragments":["looking","if"]},{"Key":"but looking","Fragments":["at,","back","at","at"]},{"Key":"looking at,","Fragments":["I'm"]},{"Key":"at, I'm","Fragments":["sure"]},{"Key":"I'm sure","Fragments":["I","many","it","this","this","there's","not","it"]},{"Key":"sure I","Fragments":["can","understand","understand","like","documented","like","understand","figure","understood","give","can","follow,"]},{"Key":"still refine","Fragments":["down"]},{"Key":"refine down","Fragments":["the"]},{"Key":"actual equation","Fragments":["that"]},{"Key":"equation that","Fragments":["is"]},{"Key":"being tested...might","Fragments":["have"]},{"Key":"tested...might have","Fragments":["a"]},{"Key":"could do","Fragments":["this","year.DividedBy(4)","everything","this","everything","that.","something","is","it","this","a","the","that.","would","for","it","would","without","that","\u003ccode\u003eKey","this:","an","this"]},{"Key":"just made","Fragments":["it","its","sure"]},{"Key":"but i","Fragments":["guess","can't","don't","don't"]},{"Key":"i guess","Fragments":["i"]},{"Key":"guess i","Fragments":["should've"]},{"Key":"i should've","Fragments":["just"]},{"Key":"should've just","Fragments":["made"]},{"Key":"made its","Fragments":["own.."]},{"Key":"its own..","Fragments":["oh"]},{"Key":"own.. oh","Fragments":["well.."]},{"Key":"oh well..","Fragments":["still"]},{"Key":"well.. still","Fragments":["works"]},{"Key":"still works","Fragments":[":P","just"]},{"Key":"Because I","Fragments":["originally","wasn't"]},{"Key":"I originally","Fragments":["had","wrote","had","used","had","ran","wrote","came","wrote","wrote"]},{"Key":"originally had","Fragments":["an","an","the"]},{"Key":"had an","Fragments":["a","anagram.","if/else","extra","implementation","array","invalid","experienced","issue"]},{"Key":"an a","Fragments":["third"]},{"Key":"third \"else","Fragments":["if"]},{"Key":"\"else if","Fragments":["(","(schedule"]},{"Key":"if (","Fragments":["year","input.Length","str.IsShouting()","str.IsAsking()","str.IsSilent()","(Math.Abs(k"]},{"Key":"( year","Fragments":["%"]},{"Key":"% 4)\"","Fragments":["clause"]},{"Key":"4)\" clause","Fragments":["which"]},{"Key":"clause which","Fragments":["I"]},{"Key":"refactored into","Fragments":["the","two","1"]},{"Key":"is now,","Fragments":["and"]},{"Key":"now, and","Fragments":["missed","it's"]},{"Key":"and missed","Fragments":["the"]},{"Key":"missed the","Fragments":["now-redundant","test","Regex.Split","boat","int"]},{"Key":"the now-redundant","Fragments":["\"else\"."]},{"Key":"now-redundant \"else\".","Fragments":["Thanks"]},{"Key":"\"else\". Thanks","Fragments":["for"]},{"Key":"It never","Fragments":["crossed","even"]},{"Key":"never crossed","Fragments":["my"]},{"Key":"crossed my","Fragments":["mind"]},{"Key":"my mind","Fragments":["to","is","while","making"]},{"Key":"mind to","Fragments":["use"]},{"Key":"a dictionary","Fragments":["to","for","on","look-up.","and","with","can","for","with","using","you've","object","search","that","where","here","type","(or","and","here?","using","or","for","does","plugin","than","like","and","why","and","here..","keyed","comparer","keyed"]},{"Key":"dictionary to","Fragments":["map","another","make","ensure"]},{"Key":"to map","Fragments":["numbers"]},{"Key":"map numbers","Fragments":["to"]},{"Key":"numbers to","Fragments":["ordinals","add","remove"]},{"Key":"to ordinals","Fragments":["and"]},{"Key":"ordinals and","Fragments":["gifts;"]},{"Key":"and gifts;","Fragments":["sweet"]},{"Key":"gifts; sweet","Fragments":[":-)."]},{"Key":"But maybe","Fragments":["I"]},{"Key":"should have,","Fragments":["that's"]},{"Key":"have, that's","Fragments":["kind"]},{"Key":"that's kind","Fragments":["of"]},{"Key":"it's supposed","Fragments":["to"]},{"Key":"On names,","Fragments":["I"]},{"Key":"- `verseNumber`","Fragments":["-\u003e"]},{"Key":"`verseNumber` -\u003e","Fragments":["`number`"]},{"Key":"- `verseLyrics`","Fragments":["-\u003e"]},{"Key":"`verseLyrics` -\u003e","Fragments":["`lyrics`"]},{"Key":"- `_toOrdinal`","Fragments":["-\u003e"]},{"Key":"`_toOrdinal` -\u003e","Fragments":["`_ordinal`"]},{"Key":"- `_daysGifts`","Fragments":["-\u003e"]},{"Key":"`_daysGifts` -\u003e","Fragments":["`_gifts`"]},{"Key":"- `GiftDelimeter`","Fragments":["-\u003e"]},{"Key":"`GiftDelimeter` -\u003e","Fragments":["`Delimeter`"]},{"Key":"would skip","Fragments":["the"]},{"Key":"skip the","Fragments":["underscores","curly","comments.","string","even"]},{"Key":"the underscores","Fragments":["to,","gives"]},{"Key":"underscores to,","Fragments":["but"]},{"Key":"to, but","Fragments":["that's","now"]},{"Key":"Now with","Fragments":["null","only"]},{"Key":"with null","Fragments":["checking","strings.","values,"]},{"Key":"null checking","Fragments":["upfront,"]},{"Key":"checking upfront,","Fragments":["that's"]},{"Key":"upfront, that's","Fragments":["a"]},{"Key":"a fantastic","Fragments":["practice"]},{"Key":"fantastic practice","Fragments":["to"]},{"Key":"get in","Fragments":["the","the"]},{"Key":"the habit","Fragments":["of","of","of","of"]},{"Key":"habit of","Fragments":["so","considering","pulling","mine.","using","commenting","using"]},{"Key":"of so","Fragments":["thanks"]},{"Key":"so thanks","Fragments":["for","for","for"]},{"Key":"for reminding","Fragments":["me"]},{"Key":"reminding me","Fragments":["@rickie!"]},{"Key":"A pretty","Fragments":["standard"]},{"Key":"pretty standard","Fragments":["solution,","for"]},{"Key":"standard solution,","Fragments":["what"]},{"Key":"solution, what","Fragments":["do"]},{"Key":"what do","Fragments":["you","I","you"]},{"Key":"of others","Fragments":["on"]},{"Key":"others on","Fragments":["this"]},{"Key":" Type","Fragments":["`exercism"]},{"Key":"Type `exercism","Fragments":["fetch`"]},{"Key":"`exercism fetch`","Fragments":["in"]},{"Key":"fetch` in","Fragments":["your"]},{"Key":"cmd window","Fragments":["to"]},{"Key":"window to","Fragments":["get"]},{"Key":"conditional was","Fragments":["to"]},{"Key":"was completely","Fragments":["empty,"]},{"Key":"completely empty,","Fragments":["which"]},{"Key":"empty, which","Fragments":["would"]},{"Key":"would automatically","Fragments":["have"]},{"Key":"automatically have","Fragments":["only"]},{"Key":"have only","Fragments":["one","really","one","a","one","one","just"]},{"Key":"one possible","Fragments":["outcome.","return","improvement","example"]},{"Key":" Next,","Fragments":["I","I","as"]},{"Key":"Next, I","Fragments":["checked","used"]},{"Key":"I checked","Fragments":["if","for","the"]},{"Key":"checked if","Fragments":["the","the","it"]},{"Key":"message was","Fragments":["both","only"]},{"Key":"was both","Fragments":["in"]},{"Key":"both in","Fragments":["upper-case,"]},{"Key":"in upper-case,","Fragments":["and"]},{"Key":"upper-case, and","Fragments":["also"]},{"Key":"also that","Fragments":["the"]},{"Key":"message contained","Fragments":["letters."]},{"Key":"contained letters.","Fragments":["I"]},{"Key":"letters. I","Fragments":["found","did","think"]},{"Key":"that merely","Fragments":["checking"]},{"Key":"merely checking","Fragments":["for"]},{"Key":"for upper-case","Fragments":["failed"]},{"Key":"upper-case failed","Fragments":["when"]},{"Key":"failed when","Fragments":["the"]},{"Key":"only numbers","Fragments":["and"]},{"Key":"numbers and","Fragments":["special","operators","why","explaining","implemented","special"]},{"Key":"and special","Fragments":["characters","characters,"]},{"Key":"characters (ie:","Fragments":["1,"]},{"Key":"(ie: 1,","Fragments":["2,"]},{"Key":"1, 2,","Fragments":["3)."]},{"Key":"\"question\" conditional,","Fragments":["the"]},{"Key":"conditional, the","Fragments":["EndsWith"]},{"Key":"the EndsWith","Fragments":["method"]},{"Key":"EndsWith method","Fragments":["worked"]},{"Key":"method worked","Fragments":["to"]},{"Key":"worked to","Fragments":["pass"]},{"Key":"all tests,","Fragments":["though"]},{"Key":"tests, though","Fragments":["it"]},{"Key":"bit confusing","Fragments":["that"]},{"Key":"confusing that","Fragments":["\"yelling\""]},{"Key":"that \"yelling\"","Fragments":["could"]},{"Key":"\"yelling\" could","Fragments":["also"]},{"Key":"question (ie:","Fragments":["\"WHAT"]},{"Key":"(ie: \"WHAT","Fragments":["ARE"]},{"Key":"\"WHAT ARE","Fragments":["YOU"]},{"Key":"ARE YOU","Fragments":["DOING???\")."]},{"Key":" Lastly,","Fragments":["if","you","if","you","the","as"]},{"Key":"Lastly, if","Fragments":["all","all"]},{"Key":"if all","Fragments":["conditions","the","else","chars","letters","alpha","(26^2","customer","characters","the"]},{"Key":"all conditions","Fragments":["failed,"]},{"Key":"conditions failed,","Fragments":["return"]},{"Key":"failed, return","Fragments":["\"Whatever\"."]},{"Key":"got stuck","Fragments":["on"]},{"Key":"stuck on","Fragments":["a","the"]},{"Key":"proper response","Fragments":["for"]},{"Key":"response for","Fragments":["the","Question,","Bob,"]},{"Key":"the Only_numbers","Fragments":["and","test"]},{"Key":"Only_numbers and","Fragments":["Question_with_only_numbers","Using_acronyms_in_regular_search,"]},{"Key":"and Question_with_only_numbers","Fragments":["without"]},{"Key":"Question_with_only_numbers without","Fragments":["returning"]},{"Key":"without returning","Fragments":["the"]},{"Key":"the \"Woah,","Fragments":["chill"]},{"Key":"out!\" string,","Fragments":["as"]},{"Key":"string, as","Fragments":["(address.ToUpper"]},{"Key":"as (address.ToUpper","Fragments":["()"]},{"Key":"(address.ToUpper ()","Fragments":["=="]},{"Key":"() ==","Fragments":["address)"]},{"Key":"== address)","Fragments":["is"]},{"Key":"address) is","Fragments":["true"]},{"Key":"the only_numbers","Fragments":["test"]},{"Key":"only_numbers test","Fragments":["cases."]},{"Key":"not know","Fragments":["how","you","what"]},{"Key":"write code","Fragments":["to","in","that","like"]},{"Key":"the Prolonged_silence","Fragments":["code."]},{"Key":"suppose I","Fragments":["should"]},{"Key":"should go","Fragments":["back","break","in"]},{"Key":"to studying","Fragments":["C#"]},{"Key":"studying C#","Fragments":["-"]},{"Key":"C# -","Fragments":["it","I"]},{"Key":"be nice","Fragments":["for","to","to","if","to"]},{"Key":"nice for","Fragments":["the"]},{"Key":"problem to","Fragments":["have","all","be"]},{"Key":"have links","Fragments":["to"]},{"Key":"links to","Fragments":["the"]},{"Key":"the resources","Fragments":["necessary"]},{"Key":"resources necessary","Fragments":["to"]},{"Key":"In line","Fragments":["8,","13"]},{"Key":"line 8,","Fragments":["if"]},{"Key":"8, if","Fragments":["changing"]},{"Key":"if changing","Fragments":["the"]},{"Key":"string to","Fragments":["lower","uppercase.","an","an","the","string.ToUpper()","make","a","match","the","get","rejoin","an","decimal'","ToCharArray(),","be","decide","chararray,"]},{"Key":"lower case","Fragments":["does","letters","all","letters,","letter.","letter","to","in","wrapping","and","at"]},{"Key":"case does","Fragments":["not","two"]},{"Key":"not alter","Fragments":["it"]},{"Key":"alter it","Fragments":["all,"]},{"Key":"it all,","Fragments":["then"]},{"Key":"all, then","Fragments":["it"]},{"Key":"a shouted","Fragments":["phrase."]},{"Key":"shouted phrase.","Fragments":["I"]},{"Key":"phrase. I","Fragments":["used"]},{"Key":"used this","Fragments":["to","pattern.","to"]},{"Key":"get past","Fragments":["the","that."]},{"Key":"past the","Fragments":["\"1,2,3\"","test"]},{"Key":"the \"1,2,3\"","Fragments":["phrase"]},{"Key":"\"1,2,3\" phrase","Fragments":["as"]},{"Key":"phrase as","Fragments":["my"]},{"Key":"original evaluated","Fragments":["this"]},{"Key":"evaluated this","Fragments":["as"]},{"Key":"The extra","Fragments":["static","support"]},{"Key":"extra static","Fragments":["helper","helper?"]},{"Key":"static helper","Fragments":["method","methods,","classes","methods."]},{"Key":"helper method","Fragments":["IsDivisibleBy"]},{"Key":"method IsDivisibleBy","Fragments":["for"]},{"Key":"IsDivisibleBy for","Fragments":["replacing"]},{"Key":"for replacing","Fragments":["the"]},{"Key":"It's elegant,","Fragments":["but"]},{"Key":"elegant, but","Fragments":["I'm"]},{"Key":"seeing how","Fragments":["it","many"]},{"Key":"it manages","Fragments":["the"]},{"Key":"manages the","Fragments":["leading"]},{"Key":"the leading","Fragments":["and","zeros.","zeros.","and/or","and"]},{"Key":"leading and","Fragments":["trailing","trailing"]},{"Key":"and trailing","Fragments":["apostrophes","apostrophes"]},{"Key":"trailing apostrophes","Fragments":["from","that"]},{"Key":"the With_apostrophes_as_quotes","Fragments":["test."]},{"Key":"This now","Fragments":["passes"]},{"Key":"now passes","Fragments":["the"]},{"Key":"found handy","Fragments":["methods"]},{"Key":"handy methods","Fragments":["to"]},{"Key":"previous problems","Fragments":["with"]},{"Key":"problems with","Fragments":["some","re-coding","null","my"]},{"Key":"with some","Fragments":["Google-Fu.","linq","explanatory","restrictions,","ideas","memory","of","terrible"]},{"Key":"was my","Fragments":["first","problem.....","ultimate","first"]},{"Key":"first attempt.","Fragments":["I'm","I'm"]},{"Key":"attempt. I'm","Fragments":["not","curious"]},{"Key":"not convinved","Fragments":["it's"]},{"Key":"convinved it's","Fragments":["readable,"]},{"Key":"it's readable,","Fragments":["but"]},{"Key":"readable, but","Fragments":["I","it","the","the","more","it","it","if","have","it's"]},{"Key":"I work","Fragments":["best","through"]},{"Key":"work best","Fragments":["by"]},{"Key":"best by","Fragments":["solving"]},{"Key":"by solving","Fragments":["the"]},{"Key":"the problem,","Fragments":["then","while"]},{"Key":"problem, then","Fragments":["going"]},{"Key":"then going","Fragments":["back","to"]},{"Key":"going back","Fragments":["to","and"]},{"Key":"refactor and","Fragments":["make","reduce"]},{"Key":"things easier","Fragments":["to"]},{"Key":"It's been","Fragments":["a"]},{"Key":"couple years","Fragments":["since","ago."]},{"Key":"years since","Fragments":["I've"]},{"Key":"since I've","Fragments":["programmed","messed"]},{"Key":"I've programmed","Fragments":["(went"]},{"Key":"programmed (went","Fragments":["into"]},{"Key":"(went into","Fragments":["test"]},{"Key":"into test","Fragments":["engineering"]},{"Key":"test engineering","Fragments":["post-college),"]},{"Key":"engineering post-college),","Fragments":["and"]},{"Key":"post-college), and","Fragments":["never"]},{"Key":"and never","Fragments":["did"]},{"Key":"never did","Fragments":["any"]},{"Key":"did any","Fragments":["C#,"]},{"Key":"any C#,","Fragments":["luckily"]},{"Key":"C#, luckily","Fragments":["I"]},{"Key":"luckily I","Fragments":["was"]},{"Key":"was able","Fragments":["to","to","to","to","to","to","to","to","to","to"]},{"Key":"out enough","Fragments":["to"]},{"Key":"solve this.","Fragments":["This"]},{"Key":"a cleaned","Fragments":["up"]},{"Key":"up version","Fragments":["of"]},{"Key":"are gonna","Fragments":["make"]},{"Key":"gonna make","Fragments":["one"]},{"Key":"one liner","Fragments":["code,","conditional"]},{"Key":"liner code,","Fragments":["which"]},{"Key":"not recommended","Fragments":["for","but"]},{"Key":"recommended for","Fragments":["readability,"]},{"Key":"for readability,","Fragments":["you","makes","but"]},{"Key":"have as","Fragments":["easily"]},{"Key":"as easily","Fragments":["have","be","have","define","take"]},{"Key":"easily have","Fragments":["written","been","a"]},{"Key":"a if","Fragments":["statement."]},{"Key":"logic looks","Fragments":["fine","fine."]},{"Key":"looks fine","Fragments":["though.","and","as","(especially"]},{"Key":" @era","Fragments":["I","Help"]},{"Key":"@era I","Fragments":["haven't"]},{"Key":"haven't formally","Fragments":["studied"]},{"Key":"formally studied","Fragments":["C#,"]},{"Key":"studied C#,","Fragments":["and"]},{"Key":"C#, and","Fragments":["have","just"]},{"Key":"only really","Fragments":["used","work"]},{"Key":"really used","Fragments":["http://introcs.cs.luc.edu/html/"]},{"Key":"used http://introcs.cs.luc.edu/html/","Fragments":["and"]},{"Key":"http://introcs.cs.luc.edu/html/ and","Fragments":["http://www.robmiles.com/c-yellow-book/."]},{"Key":"you please","Fragments":["explain","explain?","enlighten"]},{"Key":"please explain","Fragments":["in","this","the"]},{"Key":"explain in","Fragments":["more"]},{"Key":"in more","Fragments":["detail","if-blocks.","than"]},{"Key":"more detail","Fragments":["why"]},{"Key":"detail why","Fragments":["multiple"]},{"Key":"why multiple","Fragments":["return"]},{"Key":"a \"pet","Fragments":["peeve\""]},{"Key":"\"pet peeve\"","Fragments":["of"]},{"Key":"peeve\" of","Fragments":["yours?"]},{"Key":"of yours?","Fragments":["Could"]},{"Key":"yours? Could","Fragments":["you"]},{"Key":"you link","Fragments":["or"]},{"Key":"link or","Fragments":["show"]},{"Key":"or show","Fragments":["an"]},{"Key":"show an","Fragments":["alternative","example"]},{"Key":"alternative solution","Fragments":["that"]},{"Key":"doesn't use","Fragments":["multiple","Pow()","your"]},{"Key":"use multiple","Fragments":["return"]},{"Key":"Also where","Fragments":["can"]},{"Key":"where can","Fragments":["I"]},{"Key":"can I","Fragments":["find","do","recommend","get"]},{"Key":"\"rules\" you","Fragments":["are"]},{"Key":"are referring","Fragments":["to?","to"]},{"Key":"have always","Fragments":["put"]},{"Key":"put literal","Fragments":["values"]},{"Key":"literal values","Fragments":["on","in"]},{"Key":"values on","Fragments":["the"]},{"Key":"left side,","Fragments":["its"]},{"Key":"side, its","Fragments":["just"]},{"Key":"more way","Fragments":["to"]},{"Key":"avoid accidental","Fragments":["assignment"]},{"Key":"accidental assignment","Fragments":["errors."]},{"Key":"read at","Fragments":["times,","times"]},{"Key":"at times,","Fragments":["but"]},{"Key":"times, but","Fragments":["everywhere","if"]},{"Key":"but everywhere","Fragments":["I"]},{"Key":"everywhere I","Fragments":["have"]},{"Key":"have worked","Fragments":["it","with","down"]},{"Key":"worked it","Fragments":["has"]},{"Key":"been standard","Fragments":["practice,"]},{"Key":"standard practice,","Fragments":["so"]},{"Key":"practice, so","Fragments":["I"]},{"Key":"even notice","Fragments":["it","I"]},{"Key":"notice it","Fragments":["anymore."]},{"Key":"to condense","Fragments":["down","it.","the"]},{"Key":"condense down","Fragments":["my"]},{"Key":" Written","Fragments":["mostly"]},{"Key":"Written mostly","Fragments":["for"]},{"Key":"mostly for","Fragments":["clarity,"]},{"Key":"for clarity,","Fragments":["one"]},{"Key":"clarity, one","Fragments":["liners"]},{"Key":"one liners","Fragments":["is","with"]},{"Key":"liners is","Fragments":["possible"]},{"Key":"possible but","Fragments":["unnecessary.","I"]},{"Key":" Mostly","Fragments":["trying"]},{"Key":"Mostly trying","Fragments":["to"]},{"Key":"learn C#","Fragments":["and","and"]},{"Key":"and Visual","Fragments":["Studio","Studio),"]},{"Key":" \u003eIn","Fragments":["particular"]},{"Key":"\u003eIn particular","Fragments":["massaging"]},{"Key":"particular massaging","Fragments":["the","the"]},{"Key":"massaging the","Fragments":["data","data"]},{"Key":"the data","Fragments":["so","as","in.","is","type","to","there.","grouped","together","after","in","so"]},{"Key":"data so","Fragments":["lengths","lengths"]},{"Key":"so lengths","Fragments":["match","match"]},{"Key":"lengths match","Fragments":["is","is"]},{"Key":"match is","Fragments":["questionable,","questionable,"]},{"Key":"is questionable,","Fragments":["technically","technically"]},{"Key":"questionable, technically","Fragments":["for","for"]},{"Key":"technically for","Fragments":["each","each"]},{"Key":"for each","Fragments":["letter","rule","response.","test,","loop","score.","sub-expression,","word","of","iteration","comparison","\u003cb\u003enumber\u003c/b\u003e","\u003cb\u003egiven","char.","entry","incremental","in","other","is","digit","of","tile","IF","method","word","possible","elem","letter.","single","test.","step.","of","call","situation.","pair","prime","branch","prime.","letter","ratio,"]},{"Key":"each letter","Fragments":["outside","for","+","that","outside"]},{"Key":"letter outside","Fragments":["the","the"]},{"Key":"the matching","Fragments":["strings,","strings,"]},{"Key":"matching strings,","Fragments":["the","the"]},{"Key":"strings, the","Fragments":["hamming","code","hamming"]},{"Key":"the hamming","Fragments":["distance","distance","distance"]},{"Key":"hamming distance","Fragments":["is","of","if","is"]},{"Key":"distance is","Fragments":["incremented","not","only","only","incremented"]},{"Key":"is incremented","Fragments":["by","by"]},{"Key":"incremented by","Fragments":["1.","1."]},{"Key":"That's fair,","Fragments":["and"]},{"Key":"fair, and","Fragments":["undoubtedly"]},{"Key":"and undoubtedly","Fragments":["a"]},{"Key":"undoubtedly a","Fragments":["better"]},{"Key":"better reading","Fragments":["of"]},{"Key":"reading of","Fragments":["the","your"]},{"Key":"the Hamming","Fragments":["difference.","distance","distance","difference)"]},{"Key":"Hamming difference.","Fragments":["Will"]},{"Key":"difference. Will","Fragments":["iterate"]},{"Key":"Will iterate","Fragments":["Monday."]},{"Key":" Meh,","Fragments":["it"]},{"Key":"Meh, it","Fragments":["depends"]},{"Key":"it depends","Fragments":["on","on","on","on","what"]},{"Key":"depends on","Fragments":["the","the","the","the","your","who","which","the","the","ordering","which"]},{"Key":"Looking up","Fragments":["the","a","in"]},{"Key":"value and","Fragments":["stashing","I","wrap","just","yet","yet","its","the","a","label.","use"]},{"Key":"and stashing","Fragments":["it"]},{"Key":"stashing it","Fragments":["in"]},{"Key":"variable could","Fragments":["save"]},{"Key":"could save","Fragments":["some","some","a","one","a"]},{"Key":"save some","Fragments":["processing","time","looping","memory"]},{"Key":"some processing","Fragments":["time"]},{"Key":"processing time","Fragments":["when"]},{"Key":"time when","Fragments":["you"]},{"Key":"are about","Fragments":["to","using"]},{"Key":"about to","Fragments":["enter","ask"]},{"Key":"to enter","Fragments":["a","the"]},{"Key":"enter a","Fragments":["for"]},{"Key":"a for","Fragments":["loop,","loop","loop","loop,","rather","loop","loop","loop","loop,","loop","loop","loop","loop.","loop.","loop.","loop.","loop"]},{"Key":"for loop,","Fragments":["just","just","how"]},{"Key":"loop, just","Fragments":["like","for"]},{"Key":"just like","Fragments":["hankturowski","to","an","hungarian","English."]},{"Key":"like hankturowski","Fragments":["is"]},{"Key":"hankturowski is","Fragments":["doing"]},{"Key":"code here.","Fragments":["Is"]},{"Key":"here. Is","Fragments":["he"]},{"Key":"Is he","Fragments":["saving"]},{"Key":"he saving","Fragments":["a"]},{"Key":"saving a","Fragments":["lot","lot"]},{"Key":"of time","Fragments":["here?","instead","analyzing","considering","to","spent","trying"]},{"Key":"time here?","Fragments":["Probably"]},{"Key":"here? Probably","Fragments":["not,","not."]},{"Key":"Probably not,","Fragments":["but"]},{"Key":"not, but","Fragments":["when"]},{"Key":"but when","Fragments":["looping","you","you're","I"]},{"Key":"when looping","Fragments":["over"]},{"Key":"looping over","Fragments":["a"]},{"Key":"over a","Fragments":["very","dictionary","collection"]},{"Key":"very large","Fragments":["list","numbers"]},{"Key":"large list","Fragments":["it"]},{"Key":"list it","Fragments":["could"]},{"Key":"could potentially","Fragments":["save","help,"]},{"Key":"potentially save","Fragments":["a"]},{"Key":"This took","Fragments":["me"]},{"Key":"a minute,","Fragments":["but"]},{"Key":"minute, but","Fragments":["I"]},{"Key":"can what","Fragments":["you"]},{"Key":"doing here.","Fragments":["Good"]},{"Key":"here. Good","Fragments":["job!"]},{"Key":"My only","Fragments":["suggestion","suggestion","nitpick","criticism","suggestion","complaint","suggestion","other","concern","suggestion","nitpick","nitpick"]},{"Key":"only suggestion","Fragments":["is","is","would","would","would"]},{"Key":"suggestion is","Fragments":["that","that","that","that","that","that","the","excellent."]},{"Key":"else clause,","Fragments":["as","kind"]},{"Key":"clause, as","Fragments":["anything"]},{"Key":"as anything","Fragments":["after","else"]},{"Key":"anything after","Fragments":["a"]},{"Key":"a if-return","Fragments":["statement","statement","statement","statement","statement","construct,"]},{"Key":"if-return statement","Fragments":["is","will","is","will","will","will"]},{"Key":"automatically considered","Fragments":["an"]},{"Key":"considered an","Fragments":["else"]},{"Key":"Making your","Fragments":["IsDivisibleByX"]},{"Key":"your IsDivisibleByX","Fragments":["functions"]},{"Key":"IsDivisibleByX functions","Fragments":["into"]},{"Key":"an integer","Fragments":["will","and","and"]},{"Key":"integer will","Fragments":["help"]},{"Key":"help them","Fragments":["read","understand"]},{"Key":"them read","Fragments":["better:"]},{"Key":"read better:","Fragments":["year.IsDivisibleByX()"]},{"Key":"better: year.IsDivisibleByX()","Fragments":["is"]},{"Key":"year.IsDivisibleByX() is","Fragments":["better"]},{"Key":"Also, (and","Fragments":["especially"]},{"Key":"(and especially","Fragments":["when"]},{"Key":"especially when","Fragments":["done","we're"]},{"Key":"when done","Fragments":["in"]},{"Key":"done in","Fragments":["this","my","a","one","a","the","a"]},{"Key":"this way)","Fragments":["there"]},{"Key":"way) there","Fragments":["is"]},{"Key":"have separate","Fragments":["functions"]},{"Key":"separate functions","Fragments":["for"]},{"Key":"functions for","Fragments":["different","readability."]},{"Key":"for different","Fragments":["X","scenarios","lengths"]},{"Key":"different X","Fragments":["--"]},{"Key":"X --","Fragments":["use"]},{"Key":"-- use","Fragments":["year.IsDivisibleBy(X)"]},{"Key":"use year.IsDivisibleBy(X)","Fragments":["instead."]},{"Key":"use `string.EndsWith`","Fragments":["instead"]},{"Key":"`string.EndsWith` instead","Fragments":["of"]},{"Key":"of requiring","Fragments":["a"]},{"Key":"requiring a","Fragments":["reference"]},{"Key":"to `RegEx`.","Fragments":["In"]},{"Key":"`RegEx`. In","Fragments":["my"]},{"Key":"In my","Fragments":["opinion,","opinion","opinion","eyes","opinion,","mind,","case,","solution,","second","first","implementation","opinion","opinion","first","code","opinion,","first","last","opinion,","solution"]},{"Key":"my opinion,","Fragments":["that","it's","yours","to","TDD","I'm","if"]},{"Key":"opinion, that","Fragments":["would"]},{"Key":"be shorter","Fragments":["and","although"]},{"Key":"a shame","Fragments":["that","about"]},{"Key":"shame that","Fragments":["you"]},{"Key":"to explicitly","Fragments":["list","number","code"]},{"Key":"explicitly list","Fragments":["the"]},{"Key":"list the","Fragments":["chars"]},{"Key":"chars to","Fragments":["remove."]},{"Key":"is someone","Fragments":["gives"]},{"Key":"someone gives","Fragments":["an"]},{"Key":"gives an","Fragments":["input"]},{"Key":"input with","Fragments":["`|`.","the"]},{"Key":"with `|`.","Fragments":["I"]},{"Key":"`|`. I","Fragments":["would"]},{"Key":"would expect","Fragments":["this","the","that","a","this","that"]},{"Key":"expect this","Fragments":["to","to"]},{"Key":"cannot think","Fragments":["of"]},{"Key":"a terribly","Fragments":["concise"]},{"Key":"terribly concise","Fragments":["way"]},{"Key":"concise way","Fragments":["of","to"]},{"Key":"of overcoming","Fragments":["this."]},{"Key":"public Phrase(string","Fragments":["phrase)"]},{"Key":" phrase","Fragments":["="]},{"Key":"phrase =","Fragments":["new","new","new","new"]},{"Key":"new string(phrase.Where(c","Fragments":["=\u003e"]},{"Key":"string(phrase.Where(c =\u003e","Fragments":["char.IsLetterOrDigit(c)"]},{"Key":" ||","Fragments":["char.IsWhiteSpace(c)","c","c","(year"]},{"Key":"|| c","Fragments":["==","==","+","==","=="]},{"Key":"c ==","Fragments":["'\\''","',').ToArray());","'0'","'1'","'2'))\u003c/code\u003e."]},{"Key":" _phrase","Fragments":["=","="]},{"Key":"_phrase =","Fragments":["phrase.Split(new[]","Regex.Split(phrase,"]},{"Key":"= phrase.Split(new[]","Fragments":["{'"]},{"Key":"phrase.Split(new[] {'","Fragments":["',"]},{"Key":"{' ',","Fragments":["','},"]},{"Key":"', ','},","Fragments":["StringSplitOptions.RemoveEmptyEntries);"]},{"Key":"The comma","Fragments":["has"]},{"Key":"comma has","Fragments":["to"]},{"Key":"be left","Fragments":["for"]},{"Key":"left for","Fragments":["the"]},{"Key":"the \"compressed","Fragments":["List\""]},{"Key":"\"compressed List\"","Fragments":["test,"]},{"Key":"List\" test,","Fragments":["unless"]},{"Key":"test, unless","Fragments":["you"]},{"Key":" @zita","Fragments":["Fair"]},{"Key":"@zita Fair","Fragments":["point,"]},{"Key":"Fair point,","Fragments":["removed"]},{"Key":"point, removed","Fragments":["the"]},{"Key":"the dependency","Fragments":["on"]},{"Key":"dependency on","Fragments":["RegEx."]},{"Key":"First off","Fragments":["was"]},{"Key":"off was","Fragments":["getting"]},{"Key":"was getting","Fragments":["the","some"]},{"Key":"getting the","Fragments":["NUnit","unit","number","output","last"]},{"Key":"suite to","Fragments":["run.","pick"]},{"Key":"to run.","Fragments":["After"]},{"Key":"run. After","Fragments":["just"]},{"Key":"After just","Fragments":["returning"]},{"Key":"returning true","Fragments":["in","or","in"]},{"Key":"in IsLeap(int","Fragments":["year)"]},{"Key":"IsLeap(int year)","Fragments":["I"]},{"Key":"year) I","Fragments":["added"]},{"Key":"added the","Fragments":["divisble","clear()","input","following","IsUpper","text","comment.","early","check","public","bonus","EnumerateForward()"]},{"Key":"the divisble","Fragments":["by"]},{"Key":"divisble by","Fragments":["4"]},{"Key":"4 requirement","Fragments":["which"]},{"Key":"requirement which","Fragments":["allowed"]},{"Key":"which allowed","Fragments":["all"]},{"Key":"allowed all","Fragments":["but"]},{"Key":"all but","Fragments":["one","then","2"]},{"Key":"but one","Fragments":["test","return?","of","test","final"]},{"Key":"one test","Fragments":["to","(the","expects","as"]},{"Key":"pass. Then","Fragments":["I"]},{"Key":"Then I","Fragments":["finished","just","started","stuck","look","check","implemented","didn't","have","ran","went","tried","would","moved","dont"]},{"Key":"I finished","Fragments":["up","and","the","the"]},{"Key":"finished up","Fragments":["by"]},{"Key":"up by","Fragments":["adding","the","IsNullOrWhiteSpace"]},{"Key":"the exception","Fragments":["to","type.","of","message.","in"]},{"Key":"exception to","Fragments":["the","the"]},{"Key":"the rule,","Fragments":["and"]},{"Key":"rule, and","Fragments":["return"]},{"Key":"not entirely","Fragments":["satisfied","satisfied","true","understand","sure","sure","sure"]},{"Key":"entirely satisfied","Fragments":["with","with"]},{"Key":"satisfied with","Fragments":["the","the","is","the","this"]},{"Key":"the mid-function","Fragments":["return"]},{"Key":"mid-function return","Fragments":["false,"]},{"Key":"false, but","Fragments":["don't","I'm","it"]},{"Key":"but don't","Fragments":["see","think"]},{"Key":"elegant solution","Fragments":["(other"]},{"Key":"solution (other","Fragments":["than"]},{"Key":"(other than","Fragments":["storing","equals())"]},{"Key":"than storing","Fragments":["the","\u0026","it","it"]},{"Key":"variable and","Fragments":["just","initialize","function","just","end","may","then","then","assign","no"]},{"Key":"returning that","Fragments":["in"]},{"Key":"the end,","Fragments":["which","you","I","yes","too...","too.","when","after","instead","so","I'm","as","as"]},{"Key":"end, which","Fragments":["in"]},{"Key":"which in","Fragments":["my","turn","my"]},{"Key":"eyes is","Fragments":["no"]},{"Key":"I'm new","Fragments":["to","though"]},{"Key":"to CSharp","Fragments":["coding"]},{"Key":"CSharp coding","Fragments":["styles,"]},{"Key":"coding styles,","Fragments":["so"]},{"Key":"styles, so","Fragments":["that"]},{"Key":"your Add","Fragments":["method.","function"]},{"Key":"Add method.","Fragments":["You"]},{"Key":"method. You","Fragments":["saw","could"]},{"Key":"You saw","Fragments":["a"]},{"Key":"saw a","Fragments":["simplification","few"]},{"Key":"a simplification","Fragments":["I"]},{"Key":"simplification I","Fragments":["missed."]},{"Key":"use Linq","Fragments":["set","with","with","for.","to","methods","so","to","to"]},{"Key":"Linq set","Fragments":["operations"]},{"Key":"set operations","Fragments":["to"]},{"Key":"operations to","Fragments":["complete","make"]},{"Key":"complete -","Fragments":["probably"]},{"Key":"- probably","Fragments":["could"]},{"Key":"probably could","Fragments":["be","have"]},{"Key":"done more","Fragments":["efficiently.","concisely"]},{"Key":"Used foreach","Fragments":["loops"]},{"Key":"foreach loops","Fragments":["instead","just","instead"]},{"Key":"loops instead","Fragments":["of","of"]},{"Key":"I'm confused","Fragments":["how"]},{"Key":"confused how","Fragments":["list\u003cint\u003e[i]"]},{"Key":"how list\u003cint\u003e[i]","Fragments":["="]},{"Key":"0 is","Fragments":["helpful....","really","a","the","more","pretty","not","hit"]},{"Key":"is helpful....","Fragments":["sorry"]},{"Key":"helpful.... sorry","Fragments":["for"]},{"Key":"sorry for","Fragments":["not","all"]},{"Key":"not understanding;","Fragments":["I'm"]},{"Key":"understanding; I'm","Fragments":["just"]},{"Key":"a hobbyist","Fragments":["(and,"]},{"Key":"hobbyist (and,","Fragments":["frankly,"]},{"Key":"(and, frankly,","Fragments":["pretty"]},{"Key":"frankly, pretty","Fragments":["much"]},{"Key":"much an","Fragments":["amateur)"]},{"Key":"an amateur)","Fragments":[":)"]},{"Key":" Kept","Fragments":["everything"]},{"Key":"Kept everything","Fragments":["in"]},{"Key":"function because","Fragments":["there","it"]},{"Key":"there didn't","Fragments":["seem"]},{"Key":"didn't seem","Fragments":["to","to","to"]},{"Key":"much overlapping","Fragments":["reuse."]},{"Key":"overlapping reuse.","Fragments":["Used"]},{"Key":"reuse. Used","Fragments":["Linq"]},{"Key":"Used Linq","Fragments":["to"]},{"Key":"Linq to","Fragments":["determine","SQL","make","create","lower","do"]},{"Key":"determine presence","Fragments":["of"]},{"Key":"presence of","Fragments":["letters"]},{"Key":"of letters","Fragments":["in","and","and","(to"]},{"Key":"letters in","Fragments":["input.","the","the","uppercase","the","both","normal","\"word\".","duplicate.","it."]},{"Key":" Working","Fragments":["well"]},{"Key":"Working well","Fragments":["with"]},{"Key":"well with","Fragments":["a","the","me.","a"]},{"Key":"traditional nested","Fragments":["loop."]},{"Key":" Thinking","Fragments":["about"]},{"Key":"Thinking about","Fragments":["how","it,"]},{"Key":"to fancy","Fragments":["it"]},{"Key":"fancy it","Fragments":["up"]},{"Key":"some linq","Fragments":["action."]},{"Key":"new List\u003cchar\u003e(word)","Fragments":["was"]},{"Key":"List\u003cchar\u003e(word) was","Fragments":["totally"]},{"Key":"was totally","Fragments":["superfluous,"]},{"Key":"totally superfluous,","Fragments":["since"]},{"Key":"superfluous, since","Fragments":["it's"]},{"Key":"since it's","Fragments":["already","not","a","a"]},{"Key":"it's already","Fragments":["a"]},{"Key":"already a","Fragments":["IEnumerable\u003cchar\u003e.","string,","lot","DateTime,","string)."]},{"Key":"In each","Fragments":["of"]},{"Key":"the if/else","Fragments":["branches","and","block,","if's."]},{"Key":"if/else branches","Fragments":["you"]},{"Key":"branches you","Fragments":["simply"]},{"Key":"you simply","Fragments":["returns"]},{"Key":"simply returns","Fragments":["the"]},{"Key":"if test.","Fragments":["That"]},{"Key":"test. That","Fragments":["seems"]},{"Key":"seems redundant,","Fragments":["you"]},{"Key":"redundant, you","Fragments":["can","are"]},{"Key":"simplify by","Fragments":["returning","using"]},{"Key":"by returning","Fragments":["the","\"new","`new","true","\u003ccode\u003etime.Date\u003c/code\u003e"]},{"Key":"the boolean","Fragments":["expression","operators","before","conditions","I","result"]},{"Key":"boolean expression","Fragments":["without","and","and"]},{"Key":"expression without","Fragments":["reducing","the"]},{"Key":"without reducing","Fragments":["readability."]},{"Key":" Lots","Fragments":["of","of","can"]},{"Key":"Lots of","Fragments":["unused","calls","us"]},{"Key":"of unused","Fragments":["imports."]},{"Key":"unused imports.","Fragments":["Otherwise,"]},{"Key":"imports. Otherwise,","Fragments":["great!"]},{"Key":"The order","Fragments":["of","by","in"]},{"Key":"your conditionals","Fragments":["is"]},{"Key":"conditionals is","Fragments":["good."]},{"Key":"would use","Fragments":["the","brackets","\u003cb\u003evar\u003c/b\u003e","\u003ccode\u003ebreak\u003c/code\u003e?","a"]},{"Key":"the !=","Fragments":["operator"]},{"Key":"!= operator","Fragments":["instead"]},{"Key":"operator instead","Fragments":["of","of"]},{"Key":"of !(","Fragments":["..."]},{"Key":"!( ...","Fragments":["=="]},{"Key":"... ==","Fragments":["..."]},{"Key":"== ...","Fragments":["),"]},{"Key":"... ),","Fragments":["thereby"]},{"Key":"), thereby","Fragments":["eliminating"]},{"Key":"thereby eliminating","Fragments":["one"]},{"Key":"eliminating one","Fragments":["pair"]},{"Key":"one pair","Fragments":["of"]},{"Key":"pair of","Fragments":["parenthesis"]},{"Key":"of parenthesis","Fragments":["and"]},{"Key":"parenthesis and","Fragments":["improving"]},{"Key":"and improving","Fragments":["readability"]},{"Key":"improving readability","Fragments":["a"]},{"Key":"The second","Fragments":["check","iteration","check"]},{"Key":"second check","Fragments":["for","may","will"]},{"Key":"for modulo","Fragments":["100"]},{"Key":"modulo 100","Fragments":["is"]},{"Key":"100 is","Fragments":["also","the"]},{"Key":"also unnecessary","Fragments":["-"]},{"Key":"unnecessary -","Fragments":["the","the"]},{"Key":"the statements","Fragments":["to"]},{"Key":"right of","Fragments":["||","course."]},{"Key":"of ||","Fragments":["are"]},{"Key":"|| are","Fragments":["only","more"]},{"Key":"are only","Fragments":["evaluated","ever","3","applicable","going","two","14","3","action","concerned","concerned","40"]},{"Key":"only evaluated","Fragments":["if"]},{"Key":"the part","Fragments":["to"]},{"Key":"part to","Fragments":["the"]},{"Key":"left is","Fragments":["false","to","using"]},{"Key":"is false","Fragments":["anyway.","in","you","no"]},{"Key":"your feedback","Fragments":[":)","mbrameld.","guys."]},{"Key":"feedback :)","Fragments":["i"]},{"Key":":) i","Fragments":["should"]},{"Key":"i should","Fragments":["actually","do."]},{"Key":"actually choose","Fragments":["better"]},{"Key":"choose better","Fragments":["names"]},{"Key":"better names","Fragments":["for","than"]},{"Key":"names for","Fragments":["my","those"]},{"Key":"statement nesting.","Fragments":["It's"]},{"Key":"nesting. It's","Fragments":["hard"]},{"Key":"It's hard","Fragments":["to","not"]},{"Key":"follow what","Fragments":["the","is"]},{"Key":"code does.","Fragments":["Also,"]},{"Key":"does. Also,","Fragments":["would"]},{"Key":"Also, would","Fragments":["you","like"]},{"Key":"brackets in","Fragments":["each"]},{"Key":"each if-else","Fragments":["statement"]},{"Key":"if-else statement","Fragments":["or"]},{"Key":"it works,","Fragments":["good","I","good","and","the","would"]},{"Key":"works, good","Fragments":["job!","job!","job!","job!","job!","job!","job!","job!","job!","job!","job!","job!","job!","job!"]},{"Key":"else clauses.","Fragments":["Since","Since"]},{"Key":"clauses. Since","Fragments":["all","you"]},{"Key":"Since all","Fragments":["you"]},{"Key":"all you","Fragments":["if","need","really"]},{"Key":"you if","Fragments":["statements","it"]},{"Key":"are followed","Fragments":["by"]},{"Key":"followed by","Fragments":["a","the","error","a","another"]},{"Key":"else clause","Fragments":["is","is","will"]},{"Key":"is superfluous","Fragments":["as"]},{"Key":"superfluous as","Fragments":["it"]},{"Key":"won't run","Fragments":["unless"]},{"Key":"run unless","Fragments":["the"]},{"Key":"if test","Fragments":["failed."]},{"Key":"no real","Fragments":["problem,","benefit."]},{"Key":"real problem,","Fragments":["except"]},{"Key":"problem, except","Fragments":["they"]},{"Key":"except they","Fragments":["do"]},{"Key":"they do","Fragments":["absolutely","for","not","which","basic","make","make"]},{"Key":"do absolutely","Fragments":["nothing,"]},{"Key":"absolutely nothing,","Fragments":["and","and"]},{"Key":"nothing, and","Fragments":["so","you"]},{"Key":"and so","Fragments":["can","spend","that","a","don't","a","shouldn't","on.","not","on.","on.","not","less","on.","I","is"]},{"Key":"so can","Fragments":["be","safely"]},{"Key":"of removing","Fragments":["them"]},{"Key":"removing them","Fragments":["is","from"]},{"Key":"them is","Fragments":["that","a","true.","about","not"]},{"Key":"someone seeing","Fragments":["them"]},{"Key":"seeing them","Fragments":["later","the"]},{"Key":"them later","Fragments":["on"]},{"Key":"later on","Fragments":["may","while"]},{"Key":"on may","Fragments":["think"]},{"Key":"may think","Fragments":["they"]},{"Key":"think they","Fragments":["are","are","are","are","are","still"]},{"Key":"something, and","Fragments":["perhaps"]},{"Key":"and perhaps","Fragments":["not","should"]},{"Key":"perhaps not","Fragments":["be"]},{"Key":"out what,","Fragments":["and"]},{"Key":"what, and","Fragments":["so"]},{"Key":"so spend","Fragments":["longer"]},{"Key":"spend longer","Fragments":["understanding"]},{"Key":"longer understanding","Fragments":["the"]},{"Key":"code than","Fragments":["necessary.","reviewing","calculating"]},{"Key":"than necessary.","Fragments":["As","It"]},{"Key":"necessary. As","Fragments":["most"]},{"Key":"As most","Fragments":["code"]},{"Key":"most code","Fragments":["in"]},{"Key":"the real","Fragments":["world","world","world","world,","intention"]},{"Key":"real world","Fragments":["is","IMHO","this","that","examples","programming"]},{"Key":"world is","Fragments":["read"]},{"Key":"is read","Fragments":["a"]},{"Key":"than often","Fragments":["than"]},{"Key":"often than","Fragments":["it","not"]},{"Key":"is written","Fragments":["it"]},{"Key":"written it","Fragments":["is"]},{"Key":"kind to","Fragments":["the","Isosceles","build"]},{"Key":"person maintaining","Fragments":["code"]},{"Key":"maintaining code","Fragments":["you"]},{"Key":"you wrote","Fragments":["to","the","you"]},{"Key":"wrote to","Fragments":["make"]},{"Key":"simple and","Fragments":["unambiguous","straightforward!","can't","clean.","obvious","clean","very","allows"]},{"Key":"and unambiguous","Fragments":["as"]},{"Key":"unambiguous as","Fragments":["possible!"]},{"Key":"After all","Fragments":["that"]},{"Key":"that person","Fragments":["could"]},{"Key":"person could","Fragments":["be"]},{"Key":"be you","Fragments":[":)"]},{"Key":" @mozelle","Fragments":["Not"]},{"Key":"@mozelle Not","Fragments":["having"]},{"Key":"Not having","Fragments":["multiple"]},{"Key":"was drilled","Fragments":["into"]},{"Key":"drilled into","Fragments":["me"]},{"Key":"into me","Fragments":["in"]},{"Key":"in college","Fragments":["(4"]},{"Key":"college (4","Fragments":["year)."]},{"Key":"(4 year).","Fragments":["The"]},{"Key":"year). The","Fragments":["biggest"]},{"Key":"biggest issue","Fragments":["is","I"]},{"Key":"issue is","Fragments":["due","negligible"]},{"Key":"is due","Fragments":["to","to"]},{"Key":"to debugging/maintainability.","Fragments":["If"]},{"Key":"debugging/maintainability. If","Fragments":["the"]},{"Key":"few dozen","Fragments":["lines,"]},{"Key":"dozen lines,","Fragments":["you'd"]},{"Key":"lines, you'd","Fragments":["have"]},{"Key":"you'd have","Fragments":["to","to","to","code","more"]},{"Key":"to start","Fragments":["putting","your","where","with","the","using","using","switching","from","at","the","with","from"]},{"Key":"start putting","Fragments":["break"]},{"Key":"putting break","Fragments":["points"]},{"Key":"break points","Fragments":["on"]},{"Key":"points on","Fragments":["each"]},{"Key":"on each","Fragments":["return","character.","one.","character","day","day","character","call."]},{"Key":"each return","Fragments":["because","the"]},{"Key":"return because","Fragments":["you"]},{"Key":"idea where","Fragments":["it"]},{"Key":"it ends","Fragments":["up","with"]},{"Key":"ends up","Fragments":["breaking","making"]},{"Key":"up breaking","Fragments":["out"]},{"Key":"breaking out","Fragments":["of","the"]},{"Key":"the code.","Fragments":["You","Or","More","I","Of","Does","I","The","I'd"]},{"Key":"code. You","Fragments":["might","could","have","wouldn't","could"]},{"Key":"might think","Fragments":["it"]},{"Key":"doing \"X\"","Fragments":["when"]},{"Key":"\"X\" when","Fragments":["it"]},{"Key":"doing \"Z\",","Fragments":["so"]},{"Key":"\"Z\", so","Fragments":["now"]},{"Key":"so now","Fragments":["you","all","it","no"]},{"Key":"now you","Fragments":["have","are","are","are","have","can"]},{"Key":"start your","Fragments":["break","loop"]},{"Key":"your break","Fragments":["point"]},{"Key":"break point","Fragments":["way","on"]},{"Key":"point way","Fragments":["at"]},{"Key":"way at","Fragments":["the","first"]},{"Key":"and step","Fragments":["through","through"]},{"Key":"through it","Fragments":["all"]},{"Key":"all instead","Fragments":["of"]},{"Key":"being able","Fragments":["to","to"]},{"Key":"start where","Fragments":["you"]},{"Key":"is. Also,","Fragments":["when"]},{"Key":"Also, when","Fragments":["you"]},{"Key":"back later,","Fragments":["you"]},{"Key":"later, you","Fragments":["may"]},{"Key":"may add","Fragments":["a"]},{"Key":"few more","Fragments":["lines","line","line","things","comments.","solutions","comments.","classes","nested"]},{"Key":"more lines","Fragments":["of","of","when"]},{"Key":"code at","Fragments":["the"]},{"Key":"the bottom","Fragments":["for","of","of","of"]},{"Key":"bottom for","Fragments":["something,"]},{"Key":"for something,","Fragments":["not"]},{"Key":"something, not","Fragments":["realizing"]},{"Key":"realizing they","Fragments":["get"]},{"Key":"they get","Fragments":["entirely","out"]},{"Key":"get entirely","Fragments":["skipped"]},{"Key":"entirely skipped","Fragments":["due"]},{"Key":"skipped due","Fragments":["to"]},{"Key":"a previous","Fragments":["return","value","exercise.","iteration","exercise"]},{"Key":"previous return","Fragments":["in"]},{"Key":"broke IsSilence,","Fragments":["IsYelling,"]},{"Key":"IsSilence, IsYelling,","Fragments":["and"]},{"Key":"IsYelling, and","Fragments":["IsQuestion"]},{"Key":"and IsQuestion","Fragments":["out"]},{"Key":"IsQuestion out","Fragments":["into"]},{"Key":"changed if","Fragments":["the"]},{"Key":"of each","Fragments":["changes.","are:","(3,","individual","letter","word,","day"]},{"Key":"each changes.","Fragments":["Currently,"]},{"Key":"changes. Currently,","Fragments":["my"]},{"Key":"Currently, my","Fragments":["definitions"]},{"Key":"my definitions","Fragments":["of"]},{"Key":"definitions of","Fragments":["each"]},{"Key":" IsSilence","Fragments":["-"]},{"Key":"IsSilence -","Fragments":["null"]},{"Key":"- null","Fragments":["or"]},{"Key":"or all","Fragments":["white","upper","the"]},{"Key":"all white","Fragments":["space"]},{"Key":"IsYelling -","Fragments":["all"]},{"Key":"- all","Fragments":["letters"]},{"Key":"are upper-case,","Fragments":["must"]},{"Key":"upper-case, must","Fragments":["have"]},{"Key":"must have","Fragments":["at","gotten","forgotten","changed"]},{"Key":"have at","Fragments":["least"]},{"Key":" IsQuestion","Fragments":["-"]},{"Key":"IsQuestion -","Fragments":["ends"]},{"Key":"- ends","Fragments":["in"]},{"Key":"in question","Fragments":["mark"]},{"Key":"question mark","Fragments":["(yelling","and","missing","at","at"]},{"Key":"mark (yelling","Fragments":["preempts"]},{"Key":"(yelling preempts","Fragments":["question)"]},{"Key":"This passes","Fragments":["all","all","the"]},{"Key":"but might","Fragments":["not","leave"]},{"Key":"might not","Fragments":["fulfill","be","read","be","have","see"]},{"Key":"not fulfill","Fragments":["all"]},{"Key":"fulfill all","Fragments":["interpretations"]},{"Key":"all interpretations","Fragments":["of"]},{"Key":"interpretations of","Fragments":["silence,"]},{"Key":"of silence,","Fragments":["yelling"]},{"Key":"silence, yelling","Fragments":["and"]},{"Key":"yelling and","Fragments":["questions.","the"]},{"Key":"and questions.","Fragments":["But"]},{"Key":"questions. But","Fragments":["given"]},{"Key":"But given","Fragments":["the"]},{"Key":"the above","Fragments":["interpretations,","is","is","pattern","situations","and"]},{"Key":"above interpretations,","Fragments":["it"]},{"Key":"interpretations, it","Fragments":["works."]},{"Key":"a rule","Fragments":["that","that","forbidding"]},{"Key":"is okay","Fragments":["to","too...","since","in"]},{"Key":"okay to","Fragments":["break","interpret"]},{"Key":"break (if","Fragments":["you"]},{"Key":"(if you","Fragments":["know","don't","were"]},{"Key":"know why","Fragments":["you","XOR","I","this","starting"]},{"Key":"are breaking","Fragments":["it)"]},{"Key":"For example","Fragments":["guard","not","`Oh","`She","I","to","using","the"]},{"Key":"example guard","Fragments":["clauses"]},{"Key":"guard clauses","Fragments":["at","in"]},{"Key":"clauses at","Fragments":["the"]},{"Key":"method (for","Fragments":["null"]},{"Key":"(for null","Fragments":["checks"]},{"Key":"null checks","Fragments":["etc)","are","before"]},{"Key":"checks etc)","Fragments":["and"]},{"Key":"etc) and","Fragments":["(as"]},{"Key":"and (as","Fragments":["Uncle"]},{"Key":"(as Uncle","Fragments":["Bob"]},{"Key":"Bob says)","Fragments":["where"]},{"Key":"says) where","Fragments":["a"]},{"Key":"a swift","Fragments":["return"]},{"Key":"swift return","Fragments":["increases"]},{"Key":"return increases","Fragments":["readability."]},{"Key":"should always","Fragments":["have","put"]},{"Key":"have in","Fragments":["the","the","the","DetectAnagram."]},{"Key":"the forefront","Fragments":["of"]},{"Key":"forefront of","Fragments":["your"]},{"Key":"your brain...","Fragments":["but"]},{"Key":"brain... but","Fragments":["breaking"]},{"Key":"but breaking","Fragments":["it"]},{"Key":"okay too...","Fragments":["if"]},{"Key":"too... if","Fragments":["done"]},{"Key":"if done","Fragments":["consciously."]},{"Key":" Read","Fragments":["Clean"]},{"Key":"Read Clean","Fragments":["Code,"]},{"Key":"Clean Code,","Fragments":["and"]},{"Key":"Code, and","Fragments":["The"]},{"Key":"and The","Fragments":["Pragmatic"]},{"Key":"Pragmatic Programmer.","Fragments":["Great"]},{"Key":"Programmer. Great","Fragments":["books"]},{"Key":"Great books","Fragments":["on"]},{"Key":"books on","Fragments":["the"]},{"Key":"the art","Fragments":["of"]},{"Key":"art of","Fragments":["development."]},{"Key":"Added check","Fragments":["for","for","for"]},{"Key":"year been","Fragments":["less"]},{"Key":"been less","Fragments":["than"]},{"Key":"than 0","Fragments":["in","since"]},{"Key":"in newer","Fragments":["version."]},{"Key":" @stanley","Fragments":["I"]},{"Key":"@stanley I","Fragments":["personally"]},{"Key":"personally try","Fragments":["to","to","to","to"]},{"Key":"avoid returns","Fragments":["even"]},{"Key":"returns even","Fragments":["at"]},{"Key":"top. You","Fragments":["can"]},{"Key":"can always","Fragments":["write","add","let"]},{"Key":"always write","Fragments":["code"]},{"Key":"can bypass","Fragments":["that..."]},{"Key":"bypass that...","Fragments":["Though,"]},{"Key":"that... Though,","Fragments":["I"]},{"Key":"Though, I","Fragments":["suppose","really"]},{"Key":"suppose at","Fragments":["the"]},{"Key":"the cost","Fragments":["of","of","of","of","of","of","of","of","cleaning."]},{"Key":"cost of","Fragments":["an","copying","some","creating","inner","the","looping","adding","creating","verbosity."]},{"Key":"if check.","Fragments":["i.e."]},{"Key":"if (x","Fragments":["==","!=","==","!=","!=","\u003e"]},{"Key":"(x ==","Fragments":["0)","0)"]},{"Key":"(x !=","Fragments":["0)","0)","0)"]},{"Key":"// Do","Fragments":["something","something"]},{"Key":" Started","Fragments":["out"]},{"Key":"Started out","Fragments":["by"]},{"Key":"out by","Fragments":["checking","@mekhi"]},{"Key":"checking shouting","Fragments":["by"]},{"Key":"shouting by","Fragments":["equalising"]},{"Key":"by equalising","Fragments":["the"]},{"Key":"equalising the","Fragments":["string"]},{"Key":"string with","Fragments":["the","them.","the"]},{"Key":"to uppercase.","Fragments":["However"]},{"Key":"uppercase. However","Fragments":["that"]},{"Key":"However that","Fragments":["failed"]},{"Key":"that failed","Fragments":["the","the"]},{"Key":"failed the","Fragments":["case","Using_acronyms_in_regular_search","test"]},{"Key":"where there's","Fragments":["no"]},{"Key":"there's no","Fragments":["actual","Array.Push()","one","need","test","need","characters","need"]},{"Key":"no actual","Fragments":["letters"]},{"Key":"actual letters","Fragments":["in"]},{"Key":"the sentence.","Fragments":["I"]},{"Key":"sentence. I","Fragments":["refactored"]},{"Key":"test out","Fragments":["into"]},{"Key":"into IsShouting(string","Fragments":["sentence)"]},{"Key":"IsShouting(string sentence)","Fragments":["which"]},{"Key":"sentence) which","Fragments":["checks"]},{"Key":"which checks","Fragments":["if"]},{"Key":"there's actually","Fragments":["any"]},{"Key":"actually any","Fragments":["letters"]},{"Key":"any letters","Fragments":["in","in","or","using"]},{"Key":"the sentence","Fragments":["using","and"]},{"Key":"sentence using","Fragments":["LinQ."]},{"Key":" Overall","Fragments":["I'm"]},{"Key":"Overall I'm","Fragments":["pretty"]},{"Key":"pretty satisfied","Fragments":["with","with"]},{"Key":"the result,","Fragments":["where","just"]},{"Key":"result, where","Fragments":["the"]},{"Key":"main Hey","Fragments":["method"]},{"Key":"is easily","Fragments":["readable.","testable."]},{"Key":"The tests","Fragments":["don't","irritate","are","call","expect","don't","point","point","are","don't","are","are","for","are","are"]},{"Key":"tests don't","Fragments":["require","cover","test"]},{"Key":"don't require","Fragments":["the","a"]},{"Key":"require the","Fragments":["throw","whole","use","use"]},{"Key":"the throw","Fragments":["on"]},{"Key":"throw on","Fragments":["line","mismatch"]},{"Key":"line 16/17.","Fragments":["Though"]},{"Key":"16/17. Though","Fragments":["it"]},{"Key":"Though it","Fragments":["does"]},{"Key":"it I","Fragments":["would","got","have","read","can"]},{"Key":"the list","Fragments":["of","of","of","variable,","because","of","to","readonly.","of","of","I","before","and","of","you","was","for","of","of","is","is","more"]},{"Key":"of valid","Fragments":["nucleotides","words"]},{"Key":"valid nucleotides","Fragments":["into","before"]},{"Key":"nucleotides into","Fragments":["a"]},{"Key":"variable or","Fragments":["method.","the","use"]},{"Key":"or method.","Fragments":["Reduce"]},{"Key":"method. Reduce","Fragments":["duplication."]},{"Key":"tests irritate","Fragments":["my"]},{"Key":"irritate my","Fragments":["biologist"]},{"Key":"my biologist","Fragments":["mind..."]},{"Key":"biologist mind...","Fragments":["as"]},{"Key":"mind... as","Fragments":["`X`"]},{"Key":"as `X`","Fragments":["is"]},{"Key":"`X` is","Fragments":["a"]},{"Key":"a perfectly","Fragments":["likely"]},{"Key":"perfectly likely","Fragments":["letter"]},{"Key":"likely letter","Fragments":["to"]},{"Key":"letter to","Fragments":["find"]},{"Key":"to find","Fragments":["in","all","the","ways","the","the","a","the","the","the","which","the","a","just","hard-coded","the","a","the","all","anagrams","anything"]},{"Key":"find in","Fragments":["a","the","those"]},{"Key":"a DNA","Fragments":["file."]},{"Key":"DNA file.","Fragments":["It"]},{"Key":"file. It","Fragments":["means"]},{"Key":"means unknown","Fragments":["nucleotide"]},{"Key":"unknown nucleotide","Fragments":[","]},{"Key":"nucleotide ,","Fragments":["when"]},{"Key":", when","Fragments":["the"]},{"Key":"the sequencing","Fragments":["process"]},{"Key":"sequencing process","Fragments":["has"]},{"Key":"process has","Fragments":["not"]},{"Key":"has not","Fragments":["worked"]},{"Key":"not worked","Fragments":["exactly"]},{"Key":"worked exactly","Fragments":["correctly!"]},{"Key":"exactly correctly!","Fragments":[":)"]},{"Key":"Yeah, Visual","Fragments":["Studio"]},{"Key":"Studio imported","Fragments":["them"]},{"Key":"imported them","Fragments":["automagically."]},{"Key":"them automagically.","Fragments":["I"]},{"Key":"automagically. I","Fragments":["just"]},{"Key":"just didn't","Fragments":["remove"]},{"Key":"didn't remove","Fragments":["them.","it."]},{"Key":"Pretty straightforward,","Fragments":["started"]},{"Key":"straightforward, started","Fragments":["up"]},{"Key":"started up","Fragments":["with"]},{"Key":"the usual","Fragments":["TDD"]},{"Key":"usual TDD","Fragments":["implementation"]},{"Key":"TDD implementation","Fragments":["of"]},{"Key":"of Transform","Fragments":["by"]},{"Key":"Transform by","Fragments":["returning"]},{"Key":"returning \"new","Fragments":["Dictionary\u003cstring,"]},{"Key":"\"new Dictionary\u003cstring,","Fragments":["int\u003e"]},{"Key":"Dictionary\u003cstring, int\u003e","Fragments":["{","output","{","{","{","{"]},{"Key":"int\u003e {","Fragments":["{","{"]},{"Key":"{ {","Fragments":["\"a\",","\"a\",","1000,"]},{"Key":"{ \"a\",","Fragments":["1","1","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","\"A\"","1},","\"A\"","\"A\""]},{"Key":"\"a\", 1","Fragments":["}","},"]},{"Key":"1 }","Fragments":["};\""]},{"Key":"} };\"","Fragments":["as"]},{"Key":"};\" as","Fragments":["expected"]},{"Key":"as expected","Fragments":["by","it,"]},{"Key":"expected by","Fragments":["the"]},{"Key":"first test.","Fragments":["Then","So"]},{"Key":"test. Then","Fragments":["for"]},{"Key":"Then for","Fragments":["the"]},{"Key":"actual implementation","Fragments":["I"]},{"Key":"implementation I","Fragments":["chose","assumed","came"]},{"Key":"chose NOT","Fragments":["to"]},{"Key":"NOT to","Fragments":["use"]},{"Key":"use \"var\"","Fragments":["instead","just","instead,"]},{"Key":"\"var\" instead","Fragments":["of"]},{"Key":"of KeyValuePair","Fragments":["to","since"]},{"Key":"KeyValuePair to","Fragments":["increase"]},{"Key":"increase readability.","Fragments":["I"]},{"Key":"know the","Fragments":["type","context","programming","right","best","test","valid","exact","syntax","answer?","size"]},{"Key":"type can","Fragments":["also","be"]},{"Key":"be read","Fragments":["directly","in"]},{"Key":"read directly","Fragments":["in"]},{"Key":"directly in","Fragments":["the","the","the","your","the","ToDictionary()."]},{"Key":"the signature","Fragments":["of","kind"]},{"Key":"signature of","Fragments":["the"]},{"Key":"function but","Fragments":["that","negligably"]},{"Key":"but that","Fragments":["requires","truly","would","is","just","was","makes","is","second","I","is","probably","is","seemed","doesn't","is","is","is","would","seems","depends","created","could","is","failed","is","was","issue","failed."]},{"Key":"that requires","Fragments":["your","characters"]},{"Key":"requires your","Fragments":["eyes"]},{"Key":"your eyes","Fragments":["to"]},{"Key":"eyes to","Fragments":["scan","separate","follow."]},{"Key":"to scan","Fragments":["further","the","the","the","for","the","than"]},{"Key":"scan further","Fragments":["up"]},{"Key":"further up","Fragments":["than"]},{"Key":"up than","Fragments":["nessesary."]},{"Key":"than nessesary.","Fragments":["However"]},{"Key":"nessesary. However","Fragments":["for"]},{"Key":"However for","Fragments":["such"]},{"Key":"for such","Fragments":["a","a","an"]},{"Key":"simple type","Fragments":["as"]},{"Key":"type as","Fragments":["string,","`var`","per","it","it","it","it","it","@trevor"]},{"Key":"as string,","Fragments":["I"]},{"Key":"string, I","Fragments":["used","realized","filter"]},{"Key":"the \"var\"","Fragments":["typeinferation"]},{"Key":"\"var\" typeinferation","Fragments":["in"]},{"Key":"typeinferation in","Fragments":["line"]},{"Key":" Came","Fragments":["across"]},{"Key":"Came across","Fragments":["better"]},{"Key":"across better","Fragments":["way"]},{"Key":"better way","Fragments":["to","to","than","to","of","to","to","will","of","to","to","to","to","without","to","to","to"]},{"Key":"check the","Fragments":["different","century","opposite","following","leap","data!","second","index","year","input","existence","Readme",".exe","end","binary","math."]},{"Key":"different conditions","Fragments":["on"]},{"Key":"conditions on","Fragments":["other","one"]},{"Key":"on other","Fragments":["user's","people's","people's","people's"]},{"Key":"other user's","Fragments":["submission."]},{"Key":"very brief.","Fragments":["Some","Some"]},{"Key":"brief. Some","Fragments":["coders","coders"]},{"Key":"Some coders","Fragments":["live","live"]},{"Key":"coders live","Fragments":["off","off"]},{"Key":"live off","Fragments":["of","of"]},{"Key":"get everything","Fragments":["down","down","down"]},{"Key":"everything down","Fragments":["to","to","to","to"]},{"Key":"most succinct","Fragments":["code","code"]},{"Key":"succinct code","Fragments":["as","as"]},{"Key":"as possible,","Fragments":["others","others","that","but"]},{"Key":"possible, others","Fragments":["like","like"]},{"Key":"others like","Fragments":["everything","everything"]},{"Key":"like everything","Fragments":["spelled","spelled"]},{"Key":"everything spelled","Fragments":["out","out"]},{"Key":"spelled out","Fragments":["and","and"]},{"Key":"and lots","Fragments":["of","of"]},{"Key":"to strike","Fragments":["a","a","a"]},{"Key":"strike a","Fragments":["balance","balance","balance"]},{"Key":"a balance","Fragments":["between","between","between"]},{"Key":"balance between","Fragments":["succinctness","succinctness","using"]},{"Key":"between succinctness","Fragments":["and","and"]},{"Key":"succinctness and","Fragments":["readability.","readability."]},{"Key":"and readability.","Fragments":["In","In"]},{"Key":"readability. In","Fragments":["my","my"]},{"Key":"my opinion","Fragments":["I","I","anyway,","you","one"]},{"Key":"opinion I","Fragments":["think","think"]},{"Key":"more line","Fragments":["and","and"]},{"Key":"and break","Fragments":["the","the","early","your"]},{"Key":"break the","Fragments":["logic","logic","code","encapsulation","code","inner","genome","spec"]},{"Key":"out to","Fragments":["help","help","methods","their","adjust","me,","be","be","get","make"]},{"Key":"help out","Fragments":["the","the","tremendously"]},{"Key":"the guy","Fragments":["who","who"]},{"Key":"guy who","Fragments":["might","might"]},{"Key":"who might","Fragments":["be","be"]},{"Key":"be debugging","Fragments":["your","your"]},{"Key":"debugging your","Fragments":["code","code"]},{"Key":"code 6","Fragments":["months","months"]},{"Key":"6 months","Fragments":["down","down"]},{"Key":"months down","Fragments":["the","the"]},{"Key":"But again,","Fragments":["it's","it's"]},{"Key":"again, it's","Fragments":["just","just","the"]},{"Key":"it's just","Fragments":["my","my","as","wordSelections.ToList())?","supposed","about","the","math."]},{"Key":"just my","Fragments":["personal","personal","own","thoughts,","opinion,","preference","opinion,"]},{"Key":"my personal","Fragments":["opinion.","opinion.","view","preference."]},{"Key":"personal opinion.","Fragments":["Your","Your"]},{"Key":"opinion. Your","Fragments":["code","code"]},{"Key":"Your code","Fragments":["works.","works.","works,","works,","meets","works,","works,","works,","works,","works,","would","does","fails","is","would","is","works","is"]},{"Key":"works. Good","Fragments":["job!","job!"]},{"Key":" Right","Fragments":["you","now,"]},{"Key":"Right you","Fragments":["are,"]},{"Key":"you are,","Fragments":["no"]},{"Key":"are, no","Fragments":["need"]},{"Key":"need at","Fragments":["all"]},{"Key":"of ToList","Fragments":["in"]},{"Key":"ToList in","Fragments":["my"]},{"Key":"my final","Fragments":["implementation."]},{"Key":"need of","Fragments":["Sequence"]},{"Key":"of Sequence","Fragments":["at"]},{"Key":"Sequence at","Fragments":["all,"]},{"Key":"all, it","Fragments":["was"]},{"Key":"was used","Fragments":["in"]},{"Key":"first approach","Fragments":["but"]},{"Key":"approach but","Fragments":["removed","it","I"]},{"Key":"but removed","Fragments":["when"]},{"Key":"removed when","Fragments":["I"]},{"Key":"I advanced","Fragments":["with"]},{"Key":"advanced with","Fragments":["the","regular"]},{"Key":"cleaned it","Fragments":["up","up","up"]},{"Key":"the later","Fragments":["iterations,","**if**","is","versions"]},{"Key":"later iterations,","Fragments":["thanks."]},{"Key":"Your condition","Fragments":["checking"]},{"Key":"condition checking","Fragments":["is"]},{"Key":"checking is","Fragments":["really","commendable,"]},{"Key":"really clean,","Fragments":["nice"]},{"Key":"clean, nice","Fragments":["work."]},{"Key":"didn't realize","Fragments":["that","char","it","the","that","I","that","I","you"]},{"Key":"these functions","Fragments":["like"]},{"Key":"functions like","Fragments":["contains"]},{"Key":"like contains","Fragments":["a"]},{"Key":"contains a","Fragments":["letter","single","newline,"]},{"Key":"a letter","Fragments":["(string.Any(char.Letter))","in","(blank","(the","instead","as","should"]},{"Key":"letter (string.Any(char.Letter))","Fragments":["etc.."]},{"Key":"(string.Any(char.Letter)) etc..","Fragments":["NIce"]},{"Key":"etc.. NIce","Fragments":["to"]},{"Key":"NIce to","Fragments":["see"]},{"Key":"some shorter","Fragments":["versions"]},{"Key":"shorter versions","Fragments":["on"]},{"Key":"versions on","Fragments":["nitpicking"]},{"Key":"The best","Fragments":["way","thing","solution"]},{"Key":"best way","Fragments":["to","to","to","to","to","to","to","to","to"]},{"Key":"measure in","Fragments":["C#"]},{"Key":"C# is","Fragments":["with","camel","basically","typically","pascal"]},{"Key":"with System.Diagnostics.Stopwatch.","Fragments":["I"]},{"Key":"System.Diagnostics.Stopwatch. I","Fragments":["went"]},{"Key":"went ahead","Fragments":["and","and","and"]},{"Key":"ahead and","Fragments":["tried","split","implemented","just"]},{"Key":"and tried","Fragments":["this.","to","that","to","to","to"]},{"Key":"tried this.","Fragments":["The"]},{"Key":"this. The","Fragments":["difference","one-liner","Sieve"]},{"Key":"The difference","Fragments":["scaled"]},{"Key":"difference scaled","Fragments":["as"]},{"Key":"scaled as","Fragments":["the"]},{"Key":"number of","Fragments":["iterations","build-in","letters.","return","checks","string","solutions","letters","places","digits.","classes","students.","times","methods,","constant","lower","multiples","grades","entries.","verses","hyphens","overloads.","just","variables","times","invalid","days","differences.","days","comments,","days","things,","loops","conditional","lines."]},{"Key":"of iterations","Fragments":["went"]},{"Key":"iterations went","Fragments":["up."]},{"Key":"went up.","Fragments":["When"]},{"Key":"up. When","Fragments":["I"]},{"Key":"did 99999999","Fragments":["iterations"]},{"Key":"99999999 iterations","Fragments":["my","of"]},{"Key":"iterations my","Fragments":["submitted"]},{"Key":"my submitted","Fragments":["code"]},{"Key":"submitted code","Fragments":["took"]},{"Key":"code took","Fragments":["1.8"]},{"Key":"took 1.8","Fragments":["seconds"]},{"Key":"1.8 seconds","Fragments":["while"]},{"Key":"seconds while","Fragments":["the"]},{"Key":"while the","Fragments":["code","signature","Enumerable.Range"]},{"Key":"code below","Fragments":["took","will"]},{"Key":"below took","Fragments":["2.6"]},{"Key":"took 2.6","Fragments":["seconds:"]},{"Key":"public bool","Fragments":["IsLeap2(int","IsLeap3(int","IsThisPersonYelling","IsAllCaps"]},{"Key":"bool IsLeap2(int","Fragments":["year)","year)"]},{"Key":"bool isDivisibleBy4","Fragments":["=","=","=","="]},{"Key":"isDivisibleBy4 =","Fragments":["year","year%4","year","year"]},{"Key":"bool isNotDivisibleBy100","Fragments":["="]},{"Key":"isNotDivisibleBy100 =","Fragments":["year"]},{"Key":"bool isDivisibleBy400","Fragments":["=","="]},{"Key":"isDivisibleBy400 =","Fragments":["year","year"]},{"Key":"return (","Fragments":["isDivisibleBy4"]},{"Key":"( isDivisibleBy4","Fragments":["\u0026\u0026"]},{"Key":"isDivisibleBy4 \u0026\u0026","Fragments":["(isNotDivisibleBy100","(!isDivisibleBy100"]},{"Key":"\u0026\u0026 (isNotDivisibleBy100","Fragments":["||"]},{"Key":"(isNotDivisibleBy100 ||","Fragments":["isDivisibleBy400));"]},{"Key":"That's something","Fragments":["good"]},{"Key":"something good","Fragments":["to"]},{"Key":"good to","Fragments":["consider","hear","have","assign","have","me.","me","know!","simplify","bear","note."]},{"Key":"consider when","Fragments":["authoring","working"]},{"Key":"when authoring","Fragments":["code."]},{"Key":"authoring code.","Fragments":["Version"]},{"Key":"code. Version","Fragments":["2"]},{"Key":"Version 2","Fragments":["addressed","checks"]},{"Key":"2 addressed","Fragments":["the"]},{"Key":"addressed the","Fragments":["multiple"]},{"Key":"the multiple","Fragments":["return"]},{"Key":" @","Fragments":["CodeMonkey25","jks211"]},{"Key":"@ CodeMonkey25","Fragments":["I"]},{"Key":"CodeMonkey25 I","Fragments":["agree"]},{"Key":"that sentiment.","Fragments":["In"]},{"Key":"sentiment. In","Fragments":["this"]},{"Key":"this scenario,","Fragments":["however,","Year","you","there"]},{"Key":"scenario, however,","Fragments":["it"]},{"Key":"it up,","Fragments":["but"]},{"Key":"up, but","Fragments":["I","I"]},{"Key":"add much.","Fragments":["In"]},{"Key":"much. In","Fragments":["normal"]},{"Key":"In normal","Fragments":["cases,"]},{"Key":"normal cases,","Fragments":["you"]},{"Key":"cases, you","Fragments":["have","should"]},{"Key":"multiple pieces","Fragments":["of"]},{"Key":"pieces of","Fragments":["logic"]},{"Key":"logic to","Fragments":["perform","make","solve","make","contain","convert","reflect"]},{"Key":"perform and","Fragments":["your"]},{"Key":"and your","Fragments":["method","code","code","loop"]},{"Key":"method probably","Fragments":["won't"]},{"Key":"In those","Fragments":["cases,","same"]},{"Key":"those cases,","Fragments":["you"]},{"Key":"should start","Fragments":["breaking","doing"]},{"Key":"start breaking","Fragments":["things"]},{"Key":"breaking things","Fragments":["out"]},{"Key":"things out","Fragments":["a"]},{"Key":"little bit.","Fragments":[":)"]},{"Key":"The most","Fragments":["challenging","specific","general"]},{"Key":"most challenging","Fragments":["piece"]},{"Key":"challenging piece","Fragments":["of"]},{"Key":"piece of","Fragments":["this","code","functionality,","advice:","code"]},{"Key":"exercise was","Fragments":["the","easy","to","obviously","about!","extremely"]},{"Key":"statements. I","Fragments":["was","expect"]},{"Key":"a switch","Fragments":["statement,","statement.","statement.","instead","at","in","with","vs.","in","statement","on"]},{"Key":"switch statement,","Fragments":["but","plus"]},{"Key":"statement, but","Fragments":["I","it","it","it"]},{"Key":"more efficient.","Fragments":["I'm","Also","First,","More"]},{"Key":"efficient. I'm","Fragments":["curious"]},{"Key":"what others","Fragments":["think.","have","are","came","did.","have","had"]},{"Key":"seems likely","Fragments":["that"]},{"Key":"likely that","Fragments":["the","the"]},{"Key":"the performance","Fragments":["difference","gain","implications,","hit","gain","balloons","problem.","without","front,","difference?)"]},{"Key":"performance difference","Fragments":["you"]},{"Key":"difference you","Fragments":["measured"]},{"Key":"you measured","Fragments":["is"]},{"Key":"measured is","Fragments":["mostly"]},{"Key":"mostly the","Fragments":["lack","same"]},{"Key":"the lack","Fragments":["of","of","of","of"]},{"Key":"lack of","Fragments":["short-circuiting","input","input","structure","unit","comments."]},{"Key":"of short-circuiting","Fragments":["for"]},{"Key":"short-circuiting for","Fragments":["the"]},{"Key":"the divisibility","Fragments":["calculations."]},{"Key":"divisibility calculations.","Fragments":["Regardless"]},{"Key":"calculations. Regardless","Fragments":["of"]},{"Key":"Regardless of","Fragments":["that,","what"]},{"Key":"of that,","Fragments":["my","even","but"]},{"Key":"that, my","Fragments":["personal"]},{"Key":"personal view","Fragments":["is"]},{"Key":"view is","Fragments":["that"]},{"Key":"that business","Fragments":["domain"]},{"Key":"business domain","Fragments":["code"]},{"Key":"domain code","Fragments":["like"]},{"Key":"should tend","Fragments":["to","to"]},{"Key":"to favor","Fragments":["readability","`var`."]},{"Key":"favor readability","Fragments":["and"]},{"Key":"and clarity","Fragments":["over","over"]},{"Key":"clarity over","Fragments":["performance.","my"]},{"Key":"over performance.","Fragments":["I"]},{"Key":"performance. I","Fragments":["do"]},{"Key":"think `IsLeap()`","Fragments":["is"]},{"Key":"`IsLeap()` is","Fragments":["a"]},{"Key":"a clear","Fragments":["and","condition","sign"]},{"Key":"and direct","Fragments":["implementation."]},{"Key":"direct implementation.","Fragments":["(so"]},{"Key":"implementation. (so","Fragments":["is"]},{"Key":"(so is","Fragments":["`IsLeap2()`)"]},{"Key":"code works,","Fragments":["good","good","great","good","great","good","good","good","good","good","good","it"]},{"Key":"to admit,","Fragments":["what","checking"]},{"Key":"admit, what","Fragments":["you"]},{"Key":"doing by","Fragments":["just"]},{"Key":"first character","Fragments":["of","it"]},{"Key":"number feels","Fragments":["like"]},{"Key":"a hack","Fragments":["to","to"]},{"Key":"hack to","Fragments":["get","get"]},{"Key":"pass specific","Fragments":["input."]},{"Key":"specific input.","Fragments":["Can"]},{"Key":"input. Can","Fragments":["you"]},{"Key":"you get","Fragments":["it","to","93,","the","true","the","your","updated","those","memory","multiple","on","the","a"]},{"Key":"work without","Fragments":["checking","it?","exceptions.","any","a","matching"]},{"Key":"without checking","Fragments":["for","if"]},{"Key":"the out","Fragments":["of"]},{"Key":"of range","Fragments":["exception.","exceptions."]},{"Key":"range exception.","Fragments":["Didn't"]},{"Key":"exception. Didn't","Fragments":["think"]},{"Key":"Didn't think","Fragments":["to"]},{"Key":"think to","Fragments":["put","go","use","go"]},{"Key":"in that","Fragments":["myself.","mess.","case.","scenario,","the","article,","you","line.","you","it","grade,","you","it","don't","string.","class.","case,"]},{"Key":"go break","Fragments":["the"]},{"Key":"code out","Fragments":["into"]},{"Key":"methods or","Fragments":["stick","using"]},{"Key":"or stick","Fragments":["with"]},{"Key":"with one.","Fragments":["As"]},{"Key":"one. As","Fragments":["it"]},{"Key":"As it","Fragments":["stands,","is,"]},{"Key":"it stands,","Fragments":["it"]},{"Key":"stands, it","Fragments":["does"]},{"Key":"does break","Fragments":["the"]},{"Key":"the encapsulation","Fragments":["principle","in"]},{"Key":"encapsulation principle","Fragments":["but"]},{"Key":"principle but","Fragments":["I"]},{"Key":"in it's","Fragments":["current","constructor.","place.","on"]},{"Key":"it's current","Fragments":["format."]},{"Key":"current format.","Fragments":["Going"]},{"Key":"format. Going","Fragments":["to"]},{"Key":"Going to","Fragments":["have","try","try"]},{"Key":"more before","Fragments":["I"]},{"Key":"before I","Fragments":["flip","realised","decided","run","emptied","added"]},{"Key":"I flip","Fragments":["one"]},{"Key":"flip one","Fragments":["way"]},{"Key":"one way","Fragments":["or","or","of"]},{"Key":"way or","Fragments":["the","the","building"]},{"Key":"other on","Fragments":["it."]},{"Key":"I'm interested","Fragments":["in","in"]},{"Key":"the IsNumeric","Fragments":["function."]},{"Key":"IsNumeric function.","Fragments":["While"]},{"Key":"function. While","Fragments":["it"]},{"Key":"tests, it","Fragments":["feels","wouldn't","does"]},{"Key":"a specific","Fragments":["input","coding","reason.","flow","result,","planet","order."]},{"Key":"specific input","Fragments":["to"]},{"Key":"input to","Fragments":["work.","the","make","the","lower","the"]},{"Key":"work. Can","Fragments":["you","you"]},{"Key":"you rework","Fragments":["your","it","the"]},{"Key":"rework your","Fragments":["code"]},{"Key":"Great job,","Fragments":["I"]},{"Key":"job, I","Fragments":["like","like","would","feel"]},{"Key":"you got","Fragments":["the","me","from","a"]},{"Key":"got the","Fragments":["shouting","side","Response","IsGregorian"]},{"Key":"the shouting","Fragments":["to","check"]},{"Key":"shouting to","Fragments":["work."]},{"Key":"work. Very","Fragments":["succinct."]},{"Key":"One suggestion,","Fragments":["you","strings"]},{"Key":"suggestion, you","Fragments":["don't","could","could"]},{"Key":"Since you","Fragments":["are","are","are","have","are","have","are","are","use","have","don't","know","want"]},{"Key":"using If-Return","Fragments":["statements,"]},{"Key":"If-Return statements,","Fragments":["everything"]},{"Key":"statements, everything","Fragments":["after"]},{"Key":"everything after","Fragments":["the","the"]},{"Key":"statement becomes","Fragments":["an"]},{"Key":"becomes an","Fragments":["else"]},{"Key":"clause, kind","Fragments":["of"]},{"Key":"public string","Fragments":["Hey(string","Name","GenerateNumbers(int","GenerateNumbers(int","Hey(string"]},{"Key":"string Hey(string","Fragments":["phrase)","statement)"]},{"Key":"return \"Whoa,","Fragments":["chill","chill","chill","chill","chill","chill","chill","chill"]},{"Key":"return \"Fine.","Fragments":["Be","Be","Be"]},{"Key":"same stopwatch","Fragments":["test"]},{"Key":"stopwatch test","Fragments":["on"]},{"Key":"test on","Fragments":["a","SortedSet\u003cstring\u003e","1,000,000"]},{"Key":"a variant","Fragments":["of","on"]},{"Key":"variant of","Fragments":["@keshaun"]},{"Key":"of @keshaun","Fragments":["leap"]},{"Key":"@keshaun leap","Fragments":["submission"]},{"Key":"leap submission","Fragments":["as"]},{"Key":"submission as","Fragments":["the"]},{"Key":"way he","Fragments":["ordered"]},{"Key":"he ordered","Fragments":["his"]},{"Key":"ordered his","Fragments":["booleans"]},{"Key":"his booleans","Fragments":["seems"]},{"Key":"booleans seems","Fragments":["like"]},{"Key":"like genius.","Fragments":["I"]},{"Key":"genius. I","Fragments":["can't"]},{"Key":"can't figure","Fragments":["out","out","out","it","out","out"]},{"Key":"out why","Fragments":["it's","you","it","college","the","509"]},{"Key":"not faster","Fragments":["tho,"]},{"Key":"faster tho,","Fragments":["I"]},{"Key":"tho, I","Fragments":["got"]},{"Key":"got 2.1","Fragments":["seconds"]},{"Key":"2.1 seconds","Fragments":["for"]},{"Key":"seconds for","Fragments":["99999999"]},{"Key":"for 99999999","Fragments":["iterations"]},{"Key":"iterations of","Fragments":["this","the","the","\"What"]},{"Key":"this @keshaun","Fragments":["inspired"]},{"Key":"@keshaun inspired","Fragments":["code:"]},{"Key":"bool IsLeap3(int","Fragments":["year)","year)"]},{"Key":"0 //","Fragments":["any","leap"]},{"Key":"// any","Fragments":["year"]},{"Key":"any year","Fragments":["divisible","that","divisible"]},{"Key":"year divisible","Fragments":["by","by","by","by","by"]},{"Key":"year, no","Fragments":["matter"]},{"Key":"no matter","Fragments":["what","what","the"]},{"Key":"// leap","Fragments":["years"]},{"Key":"years are","Fragments":["every","leap"]},{"Key":"are every","Fragments":["4th"]},{"Key":"every 4th","Fragments":["year"]},{"Key":"!= 0);","Fragments":["//except"]},{"Key":"0); //except","Fragments":["when"]},{"Key":"//except when","Fragments":["divisible"]},{"Key":"when divisible","Fragments":["by","by"]},{"Key":"works, great","Fragments":["job!","job.","job!","job!","job!"]},{"Key":"of extra","Fragments":["work,","effort","work."]},{"Key":"extra work,","Fragments":["you"]},{"Key":"work, you","Fragments":["can"]},{"Key":"it run","Fragments":["more","faster."]},{"Key":"run more","Fragments":["efficiently"]},{"Key":"more efficiently","Fragments":["by"]},{"Key":"efficiently by","Fragments":["using"]},{"Key":"using else-if","Fragments":["statements."]},{"Key":"else-if statements.","Fragments":["For"]},{"Key":"statements. For","Fragments":["instance,"]},{"Key":"For instance,","Fragments":["if","\"Char.IsLetter(input[i])","you","it"]},{"Key":"instance, if","Fragments":["the","```Seconds```"]},{"Key":"input matches","Fragments":["issilence,"]},{"Key":"matches issilence,","Fragments":["is"]},{"Key":"issilence, is","Fragments":["there"]},{"Key":"is there","Fragments":["any","any","a","a","a","a","a","an","a","a","a"]},{"Key":"any sense","Fragments":["in","to"]},{"Key":"sense in","Fragments":["letting","some","SquareOfSums","it's"]},{"Key":"in letting","Fragments":["it"]},{"Key":"letting it","Fragments":["test"]},{"Key":"it test","Fragments":["for"]},{"Key":"for isquestion","Fragments":["or"]},{"Key":"isquestion or","Fragments":["isshouted?"]},{"Key":"This change","Fragments":["was","allows"]},{"Key":"change was","Fragments":["due","to"]},{"Key":"was due","Fragments":["to"]},{"Key":"to feedback","Fragments":["from"]},{"Key":"feedback from","Fragments":["f3h.","@pink","@wanda"]},{"Key":"from f3h.","Fragments":["I"]},{"Key":"f3h. I","Fragments":["think"]},{"Key":"hadn't done","Fragments":["this"]},{"Key":"exercise 5","Fragments":["minutes"]},{"Key":"5 minutes","Fragments":["before"]},{"Key":"minutes before","Fragments":["leaving,"]},{"Key":"before leaving,","Fragments":["I"]},{"Key":"leaving, I","Fragments":["would"]},{"Key":"have definitely","Fragments":["caught"]},{"Key":"definitely caught","Fragments":["the"]},{"Key":"caught the","Fragments":["!("]},{"Key":"the !(","Fragments":["=="]},{"Key":"!( ==","Fragments":[")"]},{"Key":"== )","Fragments":["conditional."]},{"Key":") conditional.","Fragments":["I"]},{"Key":"do however","Fragments":["think"]},{"Key":"however think","Fragments":["I"]},{"Key":"wouldn't have","Fragments":["given","thought","to","thought","to","known","to"]},{"Key":"have given","Fragments":["a"]},{"Key":"given a","Fragments":["second","linq"]},{"Key":"second thought","Fragments":["to"]},{"Key":"the second","Fragments":["mod","operand","iteration","if","half","IsYearEvenlyDivisibleBy(year,","calculation.","parameter,","one","iteration,","person","letter?","loop.","two","two","issue.","parameter","'foreach'","iteration.","digit,","character","year%4==0","iteration","part","iteration","iteration.","pass,","\"if\"","test","\"if\"","submission","capture"]},{"Key":"second mod","Fragments":["100."]},{"Key":"also believe","Fragments":["there"]},{"Key":"believe there","Fragments":["are","is"]},{"Key":"are multiple","Fragments":["ways","returns,","same"]},{"Key":"multiple ways","Fragments":["to"]},{"Key":"operations here..","Fragments":["since"]},{"Key":"here.. since","Fragments":["technically"]},{"Key":"since technically","Fragments":["any"]},{"Key":"technically any","Fragments":["number"]},{"Key":"any number","Fragments":["divisible","of","larger","is"]},{"Key":"number divisible","Fragments":["by"]},{"Key":"is inherently","Fragments":["divisible"]},{"Key":"inherently divisible","Fragments":["by"]},{"Key":"4, the","Fragments":["conditionals"]},{"Key":"conditionals could","Fragments":["easily"]},{"Key":"be switched","Fragments":["around"]},{"Key":"switched around","Fragments":["a"]},{"Key":"around a","Fragments":["bit."]},{"Key":"Just curious,","Fragments":["is"]},{"Key":"curious, is","Fragments":["there"]},{"Key":"any pros","Fragments":["and"]},{"Key":"pros and","Fragments":["cons","cons","cons"]},{"Key":"and cons","Fragments":["of","of","of"]},{"Key":"cons of","Fragments":["using","test","test"]},{"Key":"using type","Fragments":["```var"]},{"Key":"type ```var","Fragments":["newValues```"]},{"Key":"```var newValues```","Fragments":["instead"]},{"Key":"newValues``` instead","Fragments":["of"]},{"Key":"more narrow","Fragments":["```Dictionary\\\u003cstring,int\u003e"]},{"Key":"narrow ```Dictionary\\\u003cstring,int\u003e","Fragments":["newValues```?"]},{"Key":"the anagram","Fragments":["word","characters"]},{"Key":"anagram word","Fragments":["to"]},{"Key":"word to","Fragments":["be","lower-case"]},{"Key":"be tested","Fragments":["against"]},{"Key":"property to","Fragments":["ensure","hold","return","'28'","a"]},{"Key":"to ensure","Fragments":["lowercase","numbers","it","only","that","an","you","equality"]},{"Key":"ensure lowercase","Fragments":["letters"]},{"Key":"lowercase letters","Fragments":["all"]},{"Key":"letters all","Fragments":["around."]},{"Key":"To keep","Fragments":["functions","coherence"]},{"Key":"keep functions","Fragments":["short"]},{"Key":"functions short","Fragments":["I"]},{"Key":"short I","Fragments":["made"]},{"Key":"made a","Fragments":["function","statement","painful","lot","comment","function","new","great","List","big","new","mistake","minor","new","1","1","generator"]},{"Key":"function IsAnagram(string)","Fragments":["which"]},{"Key":"IsAnagram(string) which","Fragments":["testes"]},{"Key":"which testes","Fragments":["a"]},{"Key":"testes a","Fragments":["single"]},{"Key":"looked for","Fragments":["a","the"]},{"Key":"remove entries","Fragments":["from"]},{"Key":"entries from","Fragments":["one"]},{"Key":"from one","Fragments":["list","to","test","another.","to"]},{"Key":"one list","Fragments":["given"]},{"Key":"list given","Fragments":["another"]},{"Key":"given another","Fragments":["list,"]},{"Key":"another list,","Fragments":["so"]},{"Key":"list, so","Fragments":["I","it"]},{"Key":"could simply","Fragments":["test"]},{"Key":"result was","Fragments":["empty","2000"]},{"Key":"was empty","Fragments":["and","due"]},{"Key":"empty and","Fragments":["I","null","use"]},{"Key":"an anagram.","Fragments":["Since"]},{"Key":"anagram. Since","Fragments":["I"]},{"Key":"Since I","Fragments":["could","am","don't"]},{"Key":"could not","Fragments":["find","be","be","figure","find","think"]},{"Key":"not find","Fragments":["this,","the","another","any"]},{"Key":"find this,","Fragments":["I"]},{"Key":"this, I","Fragments":["did","just","switched","think"]},{"Key":"it manually","Fragments":["by"]},{"Key":"manually by","Fragments":["iterating"]},{"Key":"by iterating","Fragments":["through"]},{"Key":"iterating through","Fragments":["all","each","the","them","the"]},{"Key":"through all","Fragments":["the","values","values","three","the","that","the","the","even"]},{"Key":"anagram characters","Fragments":["and"]},{"Key":"characters and","Fragments":["checking","white-space","once","split","throws","punctuation","punctuation,"]},{"Key":"were in","Fragments":["the"]},{"Key":"of characters","Fragments":["in","but","long","we"]},{"Key":"the candidate","Fragments":["word.","word","prime)"]},{"Key":"Finally, after","Fragments":["finding"]},{"Key":"after finding","Fragments":["all"]},{"Key":"finding all","Fragments":["the"]},{"Key":"the correct","Fragments":["anagrams","choice","thing","logic","collection","number","return","year,","point","point","entry","order","order.","spot","day","days","locations","point","order.","pattern","way","colection9s)","answer"]},{"Key":"correct anagrams","Fragments":["I"]},{"Key":"anagrams I","Fragments":["sort"]},{"Key":"I sort","Fragments":["the","of"]},{"Key":"of matches","Fragments":["lexically","there"]},{"Key":"matches lexically","Fragments":["for"]},{"Key":"lexically for","Fragments":["the"]},{"Key":"test cases","Fragments":["to","but","to","always","to","I","were","to","fail","and","that","involving","but","but"]},{"Key":"cases to","Fragments":["pass.","help","create","fall","find"]},{"Key":"pass. In","Fragments":["my","the"]},{"Key":"eyes the","Fragments":["result"]},{"Key":"result should","Fragments":["not"]},{"Key":"be dependent","Fragments":["on"]},{"Key":"dependent on","Fragments":["this","the","the","the"]},{"Key":"this requirement,","Fragments":["perhaps"]},{"Key":"requirement, perhaps","Fragments":["instead"]},{"Key":"perhaps instead","Fragments":["of"]},{"Key":"of string[]","Fragments":["the"]},{"Key":"string[] the","Fragments":["return"]},{"Key":"value should","Fragments":["have"]},{"Key":"been List\u003cstring\u003e,","Fragments":["but"]},{"Key":"List\u003cstring\u003e, but","Fragments":["that's"]},{"Key":"that's nitpicking","Fragments":["the"]},{"Key":"nitpicking the","Fragments":["exercise"]},{"Key":"it shows","Fragments":["that","some"]},{"Key":"shows that","Fragments":["i'm"]},{"Key":"that i'm","Fragments":["a"]},{"Key":"i'm a","Fragments":["bit"]},{"Key":"bit noobish","Fragments":["at"]},{"Key":"noobish at","Fragments":["C#."]},{"Key":"at C#.","Fragments":["I"]},{"Key":"C#. I","Fragments":["would","feel"]},{"Key":"would assume","Fragments":["there","that"]},{"Key":"assume there","Fragments":["is"]},{"Key":"a cleaner","Fragments":["way","way"]},{"Key":"cleaner way","Fragments":["than","to"]},{"Key":"way than","Fragments":["doing","using","what"]},{"Key":"than doing","Fragments":["nested","a","it","any"]},{"Key":"doing nested","Fragments":["IF"]},{"Key":"nested IF","Fragments":["statements."]},{"Key":"would appreciate","Fragments":["any","suggestions"]},{"Key":"appreciate any","Fragments":["feedback,","thoughts"]},{"Key":"any feedback,","Fragments":["baby"]},{"Key":"feedback, baby","Fragments":["steps"]},{"Key":"baby steps","Fragments":["though!"]},{"Key":"I ended","Fragments":["up","up","up","up","up","up","up","up"]},{"Key":"ended up","Fragments":["checking","in","crashing","being","both","getting","doing","comparing","using","leaving","swapping","adding","being","comparing"]},{"Key":"up checking","Fragments":["the"]},{"Key":"conditions for","Fragments":["a"]},{"Key":"order that","Fragments":["they","we","we","you","you","they"]},{"Key":"they gave","Fragments":["us,"]},{"Key":"gave us,","Fragments":["so"]},{"Key":"us, so","Fragments":["that"]},{"Key":"was starting","Fragments":["off"]},{"Key":"starting off","Fragments":["with","with"]},{"Key":"off with","Fragments":["the","as","the"]},{"Key":"most strict/exceptions","Fragments":["and"]},{"Key":"strict/exceptions and","Fragments":["worked"]},{"Key":"and worked","Fragments":["my"]},{"Key":"worked my","Fragments":["way"]},{"Key":"my way","Fragments":["to","will","and"]},{"Key":"to more","Fragments":["broad","lines","Linq-oriented","generalization","carefully"]},{"Key":"more broad","Fragments":["conditions."]},{"Key":"I check","Fragments":["for","if","for","for","for","for"]},{"Key":"400, because","Fragments":["if"]},{"Key":"because if","Fragments":["it","it","sentance","the","I"]},{"Key":"it is,","Fragments":["it","but","debugging","each","however,","it"]},{"Key":"is, it","Fragments":["HAS","passes"]},{"Key":"it HAS","Fragments":["to"]},{"Key":"HAS to","Fragments":["be"]},{"Key":"year, if","Fragments":["it"]},{"Key":"isn't I","Fragments":["check"]},{"Key":"it divisible","Fragments":["by"]},{"Key":"100, if","Fragments":["it"]},{"Key":"is then","Fragments":["it","sent","precisely"]},{"Key":"it can't","Fragments":["be","hurt"]},{"Key":"year, because","Fragments":["I"]},{"Key":"I already","Fragments":["checked","have"]},{"Key":"already checked","Fragments":["the"]},{"Key":"checked the","Fragments":["exception(divisible","question","[documentation","\"Normalized\""]},{"Key":"the exception(divisible","Fragments":["by"]},{"Key":"exception(divisible by","Fragments":["400.)"]},{"Key":"by 400.)","Fragments":["After"]},{"Key":"400.) After","Fragments":["checking"]},{"Key":"After checking","Fragments":["if"]},{"Key":"100 I","Fragments":["check"]},{"Key":"it being","Fragments":["divisible","exclamation","instantiated.","instantiated","empty.","a"]},{"Key":"being divisible","Fragments":["by","by","by"]},{"Key":"simplest and","Fragments":["most"]},{"Key":"most broad","Fragments":["way"]},{"Key":"broad way","Fragments":["to"]},{"Key":"to describe","Fragments":["a","what's","it.","what","why"]},{"Key":"describe a","Fragments":["leap"]},{"Key":"year. Everything","Fragments":["else"]},{"Key":" Single","Fragments":["line","line"]},{"Key":"Single line","Fragments":["of","change,"]},{"Key":"code for","Fragments":["beauty","the","little","negative","so","this","me?","something","the","only","the","things","the"]},{"Key":"for beauty","Fragments":["instead"]},{"Key":"beauty instead","Fragments":["of"]},{"Key":"Thanks @gregg","Fragments":["but"]},{"Key":"@gregg but","Fragments":["see"]},{"Key":"but see","Fragments":["my"]},{"Key":"see my","Fragments":["comment","solution","version","solution","solution"]},{"Key":"my comment","Fragments":["in","on"]},{"Key":"the previous","Fragments":["iteration","2","data","step.","comments,","line?","test","one.","exercise","iterations","iteration"]},{"Key":"the reason","Fragments":["it's","why","for","to","I"]},{"Key":"reason it's","Fragments":["slower"]},{"Key":"it's slower","Fragments":["is"]},{"Key":"slower is","Fragments":["probably"]},{"Key":"the short-circuiting","Fragments":["rules"]},{"Key":"short-circuiting rules","Fragments":["of"]},{"Key":"operators require","Fragments":["more"]},{"Key":"require more","Fragments":["modulus"]},{"Key":"more modulus","Fragments":["calculations"]},{"Key":"modulus calculations","Fragments":["for","in"]},{"Key":"calculations for","Fragments":["my","if"]},{"Key":"my version","Fragments":["on","requires","of","I"]},{"Key":"version on","Fragments":["average"]},{"Key":"on average","Fragments":["than","your"]},{"Key":"average than","Fragments":["they"]},{"Key":"than they","Fragments":["do","save.","need"]},{"Key":"do for","Fragments":["yours.","handling","each","one","a"]},{"Key":"In 75%","Fragments":["of"]},{"Key":"75% of","Fragments":["cases,","the"]},{"Key":"cases, your","Fragments":["version"]},{"Key":"your version","Fragments":["requires"]},{"Key":"version requires","Fragments":["only","at"]},{"Key":"requires only","Fragments":["a"]},{"Key":"only a","Fragments":["single","couple","few","number"]},{"Key":"single modulus,","Fragments":["because"]},{"Key":"modulus, because","Fragments":["75%"]},{"Key":"because 75%","Fragments":["of"]},{"Key":"the time,","Fragments":["`year","but","the"]},{"Key":"time, `year","Fragments":["%"]},{"Key":"== 0`","Fragments":["is","is","is","then","as","in","is","extracted","in","mean","is","already","resolve","evaluates","etc.with"]},{"Key":"0` is","Fragments":["false,","almost","redundant","true,","true,"]},{"Key":"false, which","Fragments":["eliminates"]},{"Key":"which eliminates","Fragments":["the"]},{"Key":"for further","Fragments":["calculation."]},{"Key":"In more","Fragments":["than"]},{"Key":"than 99%","Fragments":["of"]},{"Key":"99% of","Fragments":["cases,"]},{"Key":"cases, my","Fragments":["version"]},{"Key":"requires at","Fragments":["least","least"]},{"Key":"least two","Fragments":["calculations,","or"]},{"Key":"two calculations,","Fragments":["since"]},{"Key":"calculations, since","Fragments":["`year"]},{"Key":"since `year","Fragments":["%"]},{"Key":"almost always","Fragments":["false,","have","be","pass"]},{"Key":"always false,","Fragments":["but"]},{"Key":"using `||`,","Fragments":["which"]},{"Key":"`||`, which","Fragments":["means"]},{"Key":"which means","Fragments":["the","the","that","the","for"]},{"Key":"second operand","Fragments":["must"]},{"Key":"operand must","Fragments":["also"]},{"Key":"must also","Fragments":["be","be"]},{"Key":"Thank you,","Fragments":["that"]},{"Key":"you, that","Fragments":["is","is"]},{"Key":"good suggestion.","Fragments":["I"]},{"Key":"suggestion. I","Fragments":["tried","like"]},{"Key":"to resubmit","Fragments":["updated","my"]},{"Key":"resubmit updated","Fragments":["code,"]},{"Key":"updated code,","Fragments":["but"]},{"Key":"I've already","Fragments":["moved","picked"]},{"Key":"already moved","Fragments":["onto"]},{"Key":"moved onto","Fragments":["Bob"]},{"Key":"onto Bob","Fragments":["so"]},{"Key":"Bob so","Fragments":["it"]},{"Key":"like that's","Fragments":["not","not"]},{"Key":"that's not","Fragments":["possible.","good","my","really","a","good"]},{"Key":"dictionary for","Fragments":["Bob's","key/value","every"]},{"Key":"for Bob's","Fragments":["possibly"]},{"Key":"Bob's possibly","Fragments":["expanding"]},{"Key":"possibly expanding","Fragments":["statements."]},{"Key":"how readable","Fragments":["this","it"]},{"Key":"readable this","Fragments":["code","way."]},{"Key":"is and","Fragments":["how","sometimes"]},{"Key":"the Utility","Fragments":["class"]},{"Key":"Utility class","Fragments":["is"]},{"Key":"is clever","Fragments":["given","and"]},{"Key":"clever given","Fragments":["it"]},{"Key":"given it","Fragments":["will","generates","doesn't","returns"]},{"Key":"a scope","Fragments":["where"]},{"Key":"scope where","Fragments":["integers"]},{"Key":"where integers","Fragments":["could"]},{"Key":"integers could","Fragments":["use"]},{"Key":"use it.","Fragments":["Having",":-D"]},{"Key":"it. Having","Fragments":["said"]},{"Key":"have my","Fragments":["reservations.","next"]},{"Key":"my reservations.","Fragments":["Would"]},{"Key":"reservations. Would","Fragments":["you"]},{"Key":"you mind","Fragments":["testing","elaborating"]},{"Key":"mind testing","Fragments":["this"]},{"Key":"testing this","Fragments":["against"]},{"Key":"this against","Fragments":["0"]},{"Key":"against 0","Fragments":["or","to","was"]},{"Key":"or negative","Fragments":["values?","values"]},{"Key":" Valid","Fragments":["points!","point."]},{"Key":"Valid points!","Fragments":["In"]},{"Key":"points! In","Fragments":["the"]},{"Key":"previous 2","Fragments":["iterations"]},{"Key":"2 iterations","Fragments":["of"]},{"Key":"code, it's","Fragments":["a"]},{"Key":"verbose so","Fragments":["would"]},{"Key":"make debugging/maintaining","Fragments":["it"]},{"Key":"debugging/maintaining it","Fragments":["in"]},{"Key":"in future","Fragments":["easier,","exercises,"]},{"Key":"future easier,","Fragments":["I"]},{"Key":"easier, I","Fragments":["tend"]},{"Key":"write longer,","Fragments":["more"]},{"Key":"longer, more","Fragments":["'readable'"]},{"Key":"more 'readable'","Fragments":["code"]},{"Key":"'readable' code","Fragments":["most"]},{"Key":"code most","Fragments":["of"]},{"Key":"time, but","Fragments":["once"]},{"Key":"but once","Fragments":["I","you","the"]},{"Key":"once I","Fragments":["know","start","have","have","think","had","had"]},{"Key":"works, I","Fragments":["do","don't"]},{"Key":"how much","Fragments":["I","better","I","I"]},{"Key":"much I","Fragments":["can","like","over"]},{"Key":"can condense","Fragments":["stuff"]},{"Key":"condense stuff","Fragments":["down,"]},{"Key":"stuff down,","Fragments":["I"]},{"Key":"down, I","Fragments":["know"]},{"Key":"know some","Fragments":["people","idiot"]},{"Key":"some people","Fragments":["love","consider","will","like","but","like","prefer"]},{"Key":"people love","Fragments":["trying"]},{"Key":"love trying","Fragments":["to"]},{"Key":"get code","Fragments":["running"]},{"Key":"code running","Fragments":["in"]},{"Key":"running in","Fragments":["as"]},{"Key":"in as","Fragments":["few","least","it","a"]},{"Key":"lines as","Fragments":["possible","possible,"]},{"Key":" Fixed","Fragments":["spelling","If","the","the"]},{"Key":"Fixed spelling","Fragments":["of"]},{"Key":" fixed","Fragments":["backwards"]},{"Key":"fixed backwards","Fragments":["comment"]},{"Key":"backwards comment","Fragments":["on"]},{"Key":"nice complete","Fragments":["console"]},{"Key":"complete console","Fragments":["application,"]},{"Key":"console application,","Fragments":["but"]},{"Key":"application, but","Fragments":["it"]},{"Key":"it doesn't","Fragments":["look","seem","double","gain","handle","do","really","complicate","seem","add","seems","make","need","fail","matter","have","work.","have","then","look","return","deal","make","come","need","need","really","appear","appear","appear"]},{"Key":"doesn't look","Fragments":["like","like","like","like"]},{"Key":"unit tests.","Fragments":["That","All","These","You"]},{"Key":"tests. That","Fragments":["requires"]},{"Key":"That requires","Fragments":["calls"]},{"Key":"requires calls","Fragments":["of"]},{"Key":"calls of","Fragments":["the"]},{"Key":"to verify","Fragments":["that","all","whenever","your","that"]},{"Key":"solution will","Fragments":["work.","perform"]},{"Key":"will work.","Fragments":["When"]},{"Key":"work. When","Fragments":["I"]},{"Key":"compile the","Fragments":["test","class","expressions"]},{"Key":"test procedure(I","Fragments":["think?)"]},{"Key":"procedure(I think?)","Fragments":["I"]},{"Key":"think?) I","Fragments":["am"]},{"Key":"am getting","Fragments":["an","NUnit"]},{"Key":"getting an","Fragments":["error"]},{"Key":"error that","Fragments":["states:"]},{"Key":"that states:","Fragments":["\"The"]},{"Key":"states: \"The","Fragments":["name"]},{"Key":"\"The name","Fragments":["'Year'","'Year'"]},{"Key":"context\". I","Fragments":["am"]},{"Key":"am working","Fragments":["with"]},{"Key":"working with","Fragments":["google","decimals","I","boolean","the","an"]},{"Key":"with google","Fragments":["to"]},{"Key":"google to","Fragments":["try"]},{"Key":"and figure","Fragments":["out","out"]},{"Key":"not doing","Fragments":["correct","\"Nucleotide","passes"]},{"Key":"doing correct","Fragments":["with"]},{"Key":"correct with","Fragments":["that","the"]},{"Key":"like there","Fragments":["must","would","should","are","should","was","should","may"]},{"Key":"there must","Fragments":["be","be"]},{"Key":"be cleaner","Fragments":["ways","to","to"]},{"Key":"cleaner ways","Fragments":["to","to"]},{"Key":"to accomplish","Fragments":["this,","with","your","this","to"]},{"Key":"accomplish this,","Fragments":["as"]},{"Key":"this, as","Fragments":["I","this"]},{"Key":"few embedded","Fragments":["If..else..."]},{"Key":"embedded If..else...","Fragments":["things"]},{"Key":"If..else... things","Fragments":["going"]},{"Key":"things going","Fragments":["on.","on"]},{"Key":"Thanks :)","Fragments":["I"]},{"Key":"did add","Fragments":["some"]},{"Key":"add some","Fragments":["tests","non-alphanumeric"]},{"Key":"the project","Fragments":["I","\"right\"","and","compile."]},{"Key":"project I","Fragments":["used,"]},{"Key":"I used,","Fragments":["which"]},{"Key":"used, which","Fragments":["all"]},{"Key":"which all","Fragments":["passed:"]},{"Key":"wasn't using","Fragments":["NUnit"]},{"Key":"NUnit as","Fragments":["I"]},{"Key":"use VS","Fragments":["Express's","then"]},{"Key":"VS Express's","Fragments":["own"]},{"Key":"Express's own","Fragments":["test"]},{"Key":"own test","Fragments":["suite,"]},{"Key":"test suite,","Fragments":["but","but"]},{"Key":"suite, but","Fragments":["I've","I"]},{"Key":"I've since","Fragments":["decided"]},{"Key":"since decided","Fragments":["to"]},{"Key":"NUnit in","Fragments":["its"]},{"Key":"in its","Fragments":["own","own","own"]},{"Key":"own GUI","Fragments":["for"]},{"Key":"GUI for","Fragments":["these."]},{"Key":"right, though,","Fragments":["I"]},{"Key":"should test","Fragments":["negative","for"]},{"Key":"test negative","Fragments":["values."]},{"Key":"negative values.","Fragments":["I","The"]},{"Key":"little unsure","Fragments":["what"]},{"Key":"unsure what","Fragments":["happens","the"]},{"Key":"happens with","Fragments":["leap"]},{"Key":"with leap","Fragments":["years"]},{"Key":"years when","Fragments":["considering"]},{"Key":"when considering","Fragments":["BC","the"]},{"Key":"considering BC","Fragments":["years"]},{"Key":"BC years","Fragments":["though","have"]},{"Key":"years though","Fragments":[":o"]},{"Key":"for spotting","Fragments":["that."]},{"Key":"spotting that.","Fragments":["New"]},{"Key":"that. New","Fragments":["version"]},{"Key":"New version","Fragments":["uploaded.","with"]},{"Key":"You win","Fragments":["points"]},{"Key":"win points","Fragments":["for"]},{"Key":"points for","Fragments":["brevity,","each"]},{"Key":"for brevity,","Fragments":["but"]},{"Key":"brevity, but","Fragments":["lose"]},{"Key":"but lose","Fragments":["them"]},{"Key":"lose them","Fragments":["with"]},{"Key":"them with","Fragments":["poor","brackets"]},{"Key":"with poor","Fragments":["functionality.","unit"]},{"Key":"poor functionality.","Fragments":[":-)"]},{"Key":"Keep trying,","Fragments":["you"]},{"Key":"trying, you","Fragments":["can"]},{"Key":"know of,","Fragments":["I"]},{"Key":"of, I","Fragments":["think"]},{"Key":"it compiles","Fragments":["to","with"]},{"Key":"compiles to","Fragments":["the","a"]},{"Key":"same byte","Fragments":["code."]},{"Key":"One method","Fragments":["is"]},{"Key":"more explicit","Fragments":["than"]},{"Key":"explicit than","Fragments":["the"]},{"Key":"would fail","Fragments":["for","the"]},{"Key":"fail for","Fragments":["\"[whitespace]\""]},{"Key":"for \"[whitespace]\"","Fragments":["type"]},{"Key":"\"[whitespace]\" type","Fragments":["of"]},{"Key":"of empty","Fragments":["statement.","string"]},{"Key":"empty statement.","Fragments":["EDIT"]},{"Key":"statement. EDIT","Fragments":["--"]},{"Key":"EDIT --","Fragments":["whooopsy,"]},{"Key":"-- whooopsy,","Fragments":["no,"]},{"Key":"whooopsy, no,","Fragments":["sorry"]},{"Key":"also go","Fragments":["with","for"]},{"Key":"with you","Fragments":["for","on","on","about","that","on","length"]},{"Key":"the simple","Fragments":["extension","nature","methods.","version","\"check","if-statement","rules"]},{"Key":"simple extension","Fragments":["methods"]},{"Key":"methods --","Fragments":["they"]},{"Key":"-- they","Fragments":["may"]},{"Key":"they may","Fragments":["be"]},{"Key":"be short,","Fragments":["but"]},{"Key":"short, but","Fragments":["they","I","readable."]},{"Key":"they massively","Fragments":["aid"]},{"Key":"massively aid","Fragments":["readability.EDIT"]},{"Key":"aid readability.EDIT","Fragments":["--"]},{"Key":"readability.EDIT --","Fragments":["though"]},{"Key":"-- though","Fragments":["the"]},{"Key":"though the","Fragments":["'IsEmpty()'","value"]},{"Key":"the 'IsEmpty()'","Fragments":["method"]},{"Key":"'IsEmpty()' method","Fragments":["looks"]},{"Key":"looks too","Fragments":["much","complex"]},{"Key":"much like","Fragments":["IsNullOrEmpty(),","giving","the"]},{"Key":"like IsNullOrEmpty(),","Fragments":["which"]},{"Key":"IsNullOrEmpty(), which","Fragments":["confused"]},{"Key":"which confused","Fragments":["me"]},{"Key":"confused me","Fragments":["above."]},{"Key":"me above.","Fragments":["I"]},{"Key":"above. I","Fragments":["went"]},{"Key":"went for","Fragments":["IsSilence(),","the","the"]},{"Key":"for IsSilence(),","Fragments":["myself."]},{"Key":"I'm unhappy","Fragments":["with","with"]},{"Key":"unhappy with","Fragments":["how","the"]},{"Key":"how clunky","Fragments":["this"]},{"Key":"clunky this","Fragments":["is"]},{"Key":"general, especially","Fragments":["with"]},{"Key":"especially with","Fragments":["the","a","the"]},{"Key":"if/else and","Fragments":["switch"]},{"Key":"and switch","Fragments":["statement,"]},{"Key":"statement, plus","Fragments":["with"]},{"Key":"plus with","Fragments":["how"]},{"Key":"the IsShout()","Fragments":["function"]},{"Key":"IsShout() function","Fragments":["needed"]},{"Key":"function needed","Fragments":["explaining"]},{"Key":"needed explaining","Fragments":["with"]},{"Key":"explaining with","Fragments":["comments."]},{"Key":"the Invariant","Fragments":["case"]},{"Key":"Invariant case","Fragments":["changers"]},{"Key":"case changers","Fragments":["as"]},{"Key":"changers as","Fragments":["I"]},{"Key":"seen another","Fragments":["test"]},{"Key":"another test","Fragments":["suite"]},{"Key":"suite for","Fragments":["this"]},{"Key":"this that","Fragments":["requires","I","doesn't","it"]},{"Key":"requires characters","Fragments":["with"]},{"Key":"with accents","Fragments":["to"]},{"Key":"accents to","Fragments":["be"]},{"Key":"The use","Fragments":["of","of","of","of","of","of","of","of","of"]},{"Key":"an enum","Fragments":["and","(even","in","to","will","of"]},{"Key":"enum and","Fragments":["constants","cast","switch.","also","then","the"]},{"Key":"and constants","Fragments":["were"]},{"Key":"constants were","Fragments":["an"]},{"Key":"were an","Fragments":["effort","expensive"]},{"Key":"an effort","Fragments":["to","to"]},{"Key":"effort to","Fragments":["cleanly","divide","validate"]},{"Key":"to cleanly","Fragments":["separate"]},{"Key":"cleanly separate","Fragments":["the"]},{"Key":"separate the","Fragments":["input","words,"]},{"Key":"and output","Fragments":["types"]},{"Key":"output types","Fragments":["and"]},{"Key":"types and","Fragments":["allow","creating","not"]},{"Key":"and allow","Fragments":["for","bad"]},{"Key":"for extensibility/modifications","Fragments":["if"]},{"Key":"extensibility/modifications if","Fragments":["needed"]},{"Key":"What trade-offs","Fragments":["did"]},{"Key":"trade-offs did","Fragments":["you"]},{"Key":"did you","Fragments":["consider?","add","decide","specifically","decide","choose","choose","keep","need","comment","need","choose","put","include","get","use","not","would"]},{"Key":"you consider?","Fragments":["I"]},{"Key":"consider? I","Fragments":["didn't"]},{"Key":"didn't consider","Fragments":["any"]},{"Key":"consider any","Fragments":["trade-offs.","trade"]},{"Key":"What drove","Fragments":["you"]},{"Key":"drove you","Fragments":["in"]},{"Key":"the direction","Fragments":["that"]},{"Key":"direction that","Fragments":["you"]},{"Key":"you took?","Fragments":["It"]},{"Key":"took? It","Fragments":["was"]},{"Key":"of to","Fragments":["solve","simply","sqrt(num)"]},{"Key":"solution. Test","Fragments":["for"]},{"Key":"Test for","Fragments":["round"]},{"Key":"for round","Fragments":["number"]},{"Key":"round number","Fragments":["when"]},{"Key":"number when","Fragments":["/4,"]},{"Key":"when /4,","Fragments":["if"]},{"Key":"/4, if","Fragments":["round"]},{"Key":"if round","Fragments":["then"]},{"Key":"round then","Fragments":["when","when"]},{"Key":"then when","Fragments":["/100,","/400,","the","you"]},{"Key":"when /100,","Fragments":["if"]},{"Key":"/100, if","Fragments":["not"]},{"Key":"not round","Fragments":["then"]},{"Key":"when /400,","Fragments":["scattering"]},{"Key":"/400, scattering","Fragments":["when"]},{"Key":"scattering when","Fragments":["it"]},{"Key":"false in","Fragments":["that","your","the","IsLeap,"]},{"Key":"Not necessarily","Fragments":["the","these"]},{"Key":"necessarily the","Fragments":["most"]},{"Key":"most readable","Fragments":["one"]},{"Key":"readable one","Fragments":["out"]},{"Key":"one out","Fragments":["there","quicker","and"]},{"Key":"out there","Fragments":["but"]},{"Key":"is worth","Fragments":["a","it.","5","0","it!","it.","it"]},{"Key":"worth a","Fragments":["shout"]},{"Key":"a shout","Fragments":["out."]},{"Key":"shout out.","Fragments":["I"]},{"Key":"out. I","Fragments":["like","wouldn't","think","ran","personally"]},{"Key":"like where","Fragments":["you"]},{"Key":"going with","Fragments":["this","character"]},{"Key":"you opened","Fragments":["up"]},{"Key":"opened up","Fragments":["leap"]},{"Key":"up leap","Fragments":["year"]},{"Key":"year rule","Fragments":["composition"]},{"Key":"rule composition","Fragments":["with"]},{"Key":"composition with","Fragments":["a"]},{"Key":"binary tree","Fragments":["approach","class,"]},{"Key":"tree approach","Fragments":["which"]},{"Key":"approach which","Fragments":["is"]},{"Key":"can tighten","Fragments":["the"]},{"Key":"tighten the","Fragments":["code"]},{"Key":"code up","Fragments":["a"]},{"Key":"a bit.","Fragments":["The","Dangit,",".NET","Because","At","Of"]},{"Key":"bit. The","Fragments":["returnDict.Clear()"]},{"Key":"The returnDict.Clear()","Fragments":["call"]},{"Key":"returnDict.Clear() call","Fragments":["is"]},{"Key":"is unnecessary,","Fragments":["as","as","instead","as"]},{"Key":"unnecessary, as","Fragments":["the","zero","you"]},{"Key":"the newly","Fragments":["created","created"]},{"Key":"newly created","Fragments":["Dictionary","list.","list","List"]},{"Key":"created Dictionary","Fragments":["object"]},{"Key":"Dictionary object","Fragments":["is"]},{"Key":"object is","Fragments":["empty.","instantiated?","created"]},{"Key":"is empty.","Fragments":["Also,"]},{"Key":"empty. Also,","Fragments":["if"]},{"Key":"Also, if","Fragments":["you","you","you","you","your","you"]},{"Key":"wanted to,","Fragments":["you"]},{"Key":"to, you","Fragments":["could"]},{"Key":"list variable,","Fragments":["and"]},{"Key":"variable, and","Fragments":["just"]},{"Key":"the old[key]","Fragments":["inline","reference"]},{"Key":"old[key] inline","Fragments":["in"]},{"Key":"inline in","Fragments":["the"]},{"Key":"than that,","Fragments":["good","looks","looks","looks","no","it","pretty","it","looks","looks","Linq","it's","it","good","it"]},{"Key":"that, good","Fragments":["job!","work."]},{"Key":"definitely would","Fragments":["use"]},{"Key":"brackets for","Fragments":["increased","indexing."]},{"Key":"for increased","Fragments":["readability"]},{"Key":"increased readability","Fragments":["and","a"]},{"Key":"and extendability.","Fragments":["Also,"]},{"Key":"extendability. Also,","Fragments":["prefer"]},{"Key":"Also, prefer","Fragments":["spaces"]},{"Key":"prefer spaces","Fragments":["over"]},{"Key":"spaces over","Fragments":["not."]},{"Key":"the suggestion","Fragments":["to","of","from","of"]},{"Key":"suggestion to","Fragments":["just","the"]},{"Key":"the expression.","Fragments":["That"]},{"Key":"expression. That","Fragments":["makes"]},{"Key":"That makes","Fragments":["sense.","sense.","sense"]},{"Key":" From","Fragments":["a","a","the","there","a"]},{"Key":"readability standpoint,","Fragments":["however,"]},{"Key":"standpoint, however,","Fragments":["would"]},{"Key":"however, would","Fragments":["it"]},{"Key":"break up","Fragments":["the","the"]},{"Key":" @ryann,","Fragments":["in"]},{"Key":"@ryann, in","Fragments":["the"]},{"Key":"the terms","Fragments":["of","together"]},{"Key":"of \"IsYelling\"","Fragments":["a"]},{"Key":"\"IsYelling\" a","Fragments":["string"]},{"Key":"string could","Fragments":["not"]},{"Key":"be \"yelling\"","Fragments":["so"]},{"Key":"\"yelling\" so","Fragments":["extending"]},{"Key":"so extending","Fragments":["the"]},{"Key":"String method","Fragments":["for"]},{"Key":"that makes","Fragments":["little","the","it","sense.","sense."]},{"Key":" @erich","Fragments":["I've"]},{"Key":"@erich I've","Fragments":["read"]},{"Key":"I've read","Fragments":["your"]},{"Key":"read your","Fragments":["initial"]},{"Key":"your initial","Fragments":["comments","list)"]},{"Key":"initial comments","Fragments":["and"]},{"Key":"might want","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"do. Try","Fragments":["creating"]},{"Key":"Try creating","Fragments":["a"]},{"Key":"new class","Fragments":["called"]},{"Key":"called Year","Fragments":["and","that"]},{"Key":"Year and","Fragments":["put","not"]},{"Key":"and put","Fragments":["a"]},{"Key":"method called","Fragments":["IsLeap","twice.","\"IsLeap\".","`IsLeap`"]},{"Key":"called IsLeap","Fragments":["where","that"]},{"Key":"IsLeap where","Fragments":["you"]},{"Key":"in solving","Fragments":["if"]},{"Key":"solving if","Fragments":["a"]},{"Key":"leap one","Fragments":["or"]},{"Key":"not. And","Fragments":["then"]},{"Key":"then test","Fragments":["it","for","with"]},{"Key":"test it","Fragments":["with","out","and"]},{"Key":"suite it","Fragments":["came"]},{"Key":"it came","Fragments":["with","to","from?"]},{"Key":"came with","Fragments":["using","a"]},{"Key":"using NUnit.","Fragments":["And"]},{"Key":"NUnit. And","Fragments":["don't"]},{"Key":"And don't","Fragments":["stop","worry"]},{"Key":"don't stop","Fragments":["there,"]},{"Key":"stop there,","Fragments":["make"]},{"Key":"there, make","Fragments":["sure"]},{"Key":"sure each","Fragments":["tests","version"]},{"Key":"each tests","Fragments":["pass"]},{"Key":"tests pass","Fragments":["and","when","and",":)"]},{"Key":"try a","Fragments":["few"]},{"Key":"few modifications","Fragments":["on"]},{"Key":"modifications on","Fragments":["your"]},{"Key":"your code.","Fragments":["Programming","You'd","Check","You","If","Granted,","The","I","I"]},{"Key":"code. Programming","Fragments":["is"]},{"Key":"Programming is","Fragments":["fun","not"]},{"Key":"is fun","Fragments":["so"]},{"Key":"fun so","Fragments":["post"]},{"Key":"so post","Fragments":["your"]},{"Key":"post your","Fragments":["new"]},{"Key":"your new","Fragments":["and","line"]},{"Key":"new and","Fragments":["improved"]},{"Key":"improved code","Fragments":["iteration."]},{"Key":"Oh yeah!","Fragments":["That"]},{"Key":"yeah! That","Fragments":["makes"]},{"Key":"makes sense.","Fragments":["I","I'll","Each","For","Thank"]},{"Key":"sense. I","Fragments":["was","don't"]},{"Key":"only thinking","Fragments":["about"]},{"Key":"that 1%.","Fragments":["Thanks"]},{"Key":"1%. Thanks","Fragments":["@joel"]},{"Key":"Thanks @joel","Fragments":[":-)"]},{"Key":"avoid having","Fragments":["multiple","more"]},{"Key":"becomes more","Fragments":["difficult"]},{"Key":"to debug/maintain","Fragments":["later.","code"]},{"Key":"debug/maintain later.","Fragments":["Smaller"]},{"Key":"later. Smaller","Fragments":["methods"]},{"Key":"Smaller methods","Fragments":["like"]},{"Key":"this might","Fragments":["not","need","be"]},{"Key":"big deal,","Fragments":["but"]},{"Key":"deal, but","Fragments":["I"]},{"Key":"still try","Fragments":["to"]},{"Key":"avoid this","Fragments":["whenever","by"]},{"Key":"this whenever","Fragments":["possible."]},{"Key":"whenever possible.","Fragments":[":)"]},{"Key":"possible. :)","Fragments":["Looks"]},{"Key":":) Looks","Fragments":["good"]},{"Key":"sure many","Fragments":["people"]},{"Key":"many people","Fragments":["used","want"]},{"Key":"people used","Fragments":["regular","the"]},{"Key":"used regular","Fragments":["expressions","expressions"]},{"Key":"regular expressions","Fragments":["for","but","and","too.","to","also","and"]},{"Key":"expressions for","Fragments":["this,","each"]},{"Key":"for this,","Fragments":["but","as","since","but"]},{"Key":"really isn't","Fragments":["needed!","tough"]},{"Key":"isn't needed!","Fragments":[":)"]},{"Key":"your approach,","Fragments":["but","I"]},{"Key":"approach, but","Fragments":["my"]},{"Key":"but my","Fragments":["understanding","logic","first","point","first","own","own","solution"]},{"Key":"my understanding","Fragments":["of","what"]},{"Key":"understanding of","Fragments":["extension","that"]},{"Key":"methods is","Fragments":["it","better","a"]},{"Key":"actually is","Fragments":["not"]},{"Key":"so efficient,","Fragments":["especially"]},{"Key":"efficient, especially","Fragments":["if"]},{"Key":"especially if","Fragments":["there","you","the","we","using"]},{"Key":"simpler way","Fragments":["to","to","to","to"]},{"Key":"were using","Fragments":["the"]},{"Key":"IsDivisible for","Fragments":["a"]},{"Key":"a ton","Fragments":["of","of","of","of","of"]},{"Key":"ton of","Fragments":["stuff","letters.","time","time","difference"]},{"Key":"of stuff","Fragments":["in","was","to"]},{"Key":"stuff in","Fragments":["a"]},{"Key":"a project,","Fragments":["then","but"]},{"Key":"project, then","Fragments":["of"]},{"Key":"then of","Fragments":["course","course"]},{"Key":"course this","Fragments":["would","is"]},{"Key":"great way","Fragments":["to","to"]},{"Key":"also add","Fragments":["an","char","a","a","to","the"]},{"Key":"an ||","Fragments":["conditional"]},{"Key":"|| conditional","Fragments":["and"]},{"Key":"conditional and","Fragments":["combine"]},{"Key":"and combine","Fragments":["your"]},{"Key":"your ifs","Fragments":["(and"]},{"Key":"ifs (and","Fragments":["duplicate"]},{"Key":"(and duplicate","Fragments":["return"]},{"Key":"duplicate return","Fragments":["true)"]},{"Key":"return true)","Fragments":["into"]},{"Key":"true) into","Fragments":["1"]},{"Key":"into 1","Fragments":["statement.","return","implementation","foreach","constructor","call!"]},{"Key":"This works.","Fragments":["Just"]},{"Key":"works. Just","Fragments":["a","three"]},{"Key":"couple things.","Fragments":["First,"]},{"Key":"things. First,","Fragments":["Private"]},{"Key":"First, Private","Fragments":["Methods"]},{"Key":"Private Methods","Fragments":["should"]},{"Key":"Methods should","Fragments":["be"]},{"Key":"be Public","Fragments":["Methods?"]},{"Key":"Public Methods?","Fragments":[":)"]},{"Key":"Methods? :)","Fragments":["Second,"]},{"Key":":) Second,","Fragments":["if"]},{"Key":"Second, if","Fragments":["%","value"]},{"Key":"fails, it","Fragments":["will"]},{"Key":"still check","Fragments":["%"]},{"Key":"check %","Fragments":["400"]},{"Key":"== 0.","Fragments":["If","That"]},{"Key":"0. If","Fragments":["4"]},{"Key":"If 4","Fragments":["fails,"]},{"Key":"4 fails,","Fragments":["then"]},{"Key":"then 400","Fragments":["will"]},{"Key":"400 will","Fragments":["automatically"]},{"Key":"will automatically","Fragments":["fail,","add","handle","find","default"]},{"Key":"automatically fail,","Fragments":["too."]},{"Key":"fail, too.","Fragments":["No"]},{"Key":"too. No","Fragments":["reason"]},{"Key":"No reason","Fragments":["to"]},{"Key":"that twice.","Fragments":["(I"]},{"Key":"twice. (I","Fragments":["made"]},{"Key":"(I made","Fragments":["the","my","my"]},{"Key":"same mistake","Fragments":["at","in"]},{"Key":"mistake at","Fragments":["first.)"]},{"Key":"at first.)","Fragments":[":)"]},{"Key":"is nested","Fragments":["pretty"]},{"Key":"nested pretty","Fragments":["bad."]},{"Key":"pretty bad.","Fragments":["It"]},{"Key":"bad. It","Fragments":["ends"]},{"Key":"It ends","Fragments":["up"]},{"Key":"up making","Fragments":["it","that"]},{"Key":"statement directly?","Fragments":["(i.e."]},{"Key":"directly? (i.e.","Fragments":["get"]},{"Key":"(i.e. get","Fragments":["rid"]},{"Key":"if part","Fragments":["and"]},{"Key":"part and","Fragments":["return"]},{"Key":"return that.","Fragments":["return"]},{"Key":"that. return","Fragments":["true/false"]},{"Key":"true/false here","Fragments":["is"]},{"Key":"is redundant.","Fragments":[":)","If","Will","You"]},{"Key":" Excellent","Fragments":["point.","work"]},{"Key":"Excellent point.","Fragments":["Addressed"]},{"Key":"point. Addressed","Fragments":["in"]},{"Key":"Addressed in","Fragments":["v3."]},{"Key":"always used","Fragments":["heavy"]},{"Key":"used heavy","Fragments":["nesting."]},{"Key":"heavy nesting.","Fragments":["It"]},{"Key":"nesting. It","Fragments":["is","makes"]},{"Key":"probably one","Fragments":["of","of"]},{"Key":"my weaker","Fragments":["points"]},{"Key":"weaker points","Fragments":["in"]},{"Key":"points in","Fragments":["coding.","scrabble,"]},{"Key":"in coding.","Fragments":["What"]},{"Key":"coding. What","Fragments":["are"]},{"Key":"What are","Fragments":["some","your","your"]},{"Key":"some good","Fragments":["strategies","feedback","optimizations.","feedback.","practices."]},{"Key":"good strategies","Fragments":["/"]},{"Key":"strategies /","Fragments":["styles"]},{"Key":"/ styles","Fragments":["to"]},{"Key":"styles to","Fragments":["avoid"]},{"Key":"this than","Fragments":["iterating"]},{"Key":"than iterating","Fragments":["through"]},{"Key":"through each","Fragments":["string","letter","string","to","of"]},{"Key":"each string","Fragments":["as","might"]},{"Key":"string as","Fragments":["a","a","I","an","the","protected","a","an"]},{"Key":"character array,","Fragments":["but","you"]},{"Key":"array, but","Fragments":["this"]},{"Key":"this seemed","Fragments":["good","like","the"]},{"Key":"seemed good","Fragments":["enough."]},{"Key":"this really","Fragments":["matters","is","seems","condensed"]},{"Key":"really matters","Fragments":["and"]},{"Key":"matters and","Fragments":["probably"]},{"Key":"probably depends","Fragments":["on"]},{"Key":"the person,","Fragments":["but"]},{"Key":"person, but","Fragments":["it"]},{"Key":"is easier","Fragments":["to","for","to","to","for","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"follow with","Fragments":["result","all"]},{"Key":"with result","Fragments":["being","="]},{"Key":"result being","Fragments":["true"]},{"Key":"being true","Fragments":["and"]},{"Key":"and trying","Fragments":["to"]},{"Key":"out with","Fragments":["false?","things","String.Substring.","char","Linq"]},{"Key":"with false?","Fragments":["Or"]},{"Key":"false? Or","Fragments":["is"]},{"Key":"Or is","Fragments":["it","there"]},{"Key":"it better","Fragments":["to","to","myself.","in","for"]},{"Key":"start with","Fragments":["result","the","any"]},{"Key":"result =","Fragments":["false","0;","0;\",","roster[grade];","new","0;","new","PrimeFactors.For(93819012553);"]},{"Key":"= false","Fragments":["and","which"]},{"Key":"false and","Fragments":["opt"]},{"Key":"and opt","Fragments":["into"]},{"Key":"opt into","Fragments":["true?"]},{"Key":"into true?","Fragments":[":)"]},{"Key":" Any","Fragments":["more","suggestions","other","thoughts","advice/input","particular","reason","list","thoughts?"]},{"Key":"Any more","Fragments":["terse"]},{"Key":"I'm sacrificing","Fragments":["readability"]},{"Key":"sacrificing readability","Fragments":["for"]},{"Key":"readability for","Fragments":["brevity?","your","the","that"]},{"Key":"Having been","Fragments":["out"]},{"Key":"been out","Fragments":["of"]},{"Key":"of dev","Fragments":["with"]},{"Key":"dev with","Fragments":["C#"]},{"Key":"with C#","Fragments":["for"]},{"Key":"C# for","Fragments":["a","all"]},{"Key":"few years,","Fragments":["is"]},{"Key":"years, is","Fragments":["there"]},{"Key":"benefit to","Fragments":["using"]},{"Key":"the var","Fragments":["here?","thing,","thing.","keyword.","letters"]},{"Key":"var here?","Fragments":["Is"]},{"Key":"here? Is","Fragments":["it"]},{"Key":"Is it","Fragments":["a","possible","just","possible","just","because","a","easier"]},{"Key":"specific coding","Fragments":["practice,"]},{"Key":"coding practice,","Fragments":["more","but"]},{"Key":"practice, more","Fragments":["efficient,"]},{"Key":"more efficient,","Fragments":["or","but","but","but","and","but","as"]},{"Key":"efficient, or","Fragments":["just"]},{"Key":"just easier","Fragments":["to"]},{"Key":"I understand","Fragments":["using","that","it,","why","the","that","what","the","some","the","why","the","now!","the","it","the","it,"]},{"Key":"understand using","Fragments":["it","CheckSides"]},{"Key":"using it","Fragments":["with","in","in","over","in","to","do","in","because","more","could","with"]},{"Key":"with anonymous","Fragments":["types,"]},{"Key":"anonymous types,","Fragments":["just"]},{"Key":"types, just","Fragments":["have"]},{"Key":"just have","Fragments":["never","it","done","your"]},{"Key":" @franz","Fragments":["I"]},{"Key":"@franz I","Fragments":["tend"]},{"Key":"try go","Fragments":["group"]},{"Key":"go group","Fragments":["\"like\""]},{"Key":"group \"like\"","Fragments":["things"]},{"Key":"\"like\" things","Fragments":["in"]},{"Key":"same if,","Fragments":["so"]},{"Key":"if, so","Fragments":["have"]},{"Key":"so have","Fragments":["more","all"]},{"Key":"have more","Fragments":["than","than","than","time","joy"]},{"Key":"one check","Fragments":["in"]},{"Key":"check in","Fragments":["a"]},{"Key":"single if.","Fragments":["However,"]},{"Key":"if. However,","Fragments":["I"]},{"Key":"try not","Fragments":["to"]},{"Key":"go overboard.","Fragments":["Depending"]},{"Key":"overboard. Depending","Fragments":["on"]},{"Key":"Depending on","Fragments":["the"]},{"Key":"the complexity","Fragments":["of","of","worth"]},{"Key":"complexity of","Fragments":["the","the"]},{"Key":"the check,","Fragments":["I"]},{"Key":"check, I","Fragments":["try"]},{"Key":"avoid going","Fragments":["beyond"]},{"Key":"going beyond","Fragments":["2"]},{"Key":"beyond 2","Fragments":["or"]},{"Key":"2 or","Fragments":["3","3"]},{"Key":"or 3","Fragments":["checks.","level"]},{"Key":"3 checks.","Fragments":["i.e"]},{"Key":"checks. i.e","Fragments":["If"]},{"Key":"i.e If","Fragments":["you"]},{"Key":"you combine","Fragments":["the","what","all","that","them"]},{"Key":"the 2","Fragments":["inner","billion","length","lists.","new","sets","methods"]},{"Key":"2 inner","Fragments":["statements,"]},{"Key":"inner statements,","Fragments":["you"]},{"Key":"an entire","Fragments":["layer.","monologue"]},{"Key":" @donald,","Fragments":["that"]},{"Key":"@donald, that","Fragments":["worked"]},{"Key":"that worked","Fragments":["perfectly!","and"]},{"Key":"worked perfectly!","Fragments":["Thank"]},{"Key":"perfectly! Thank","Fragments":["you!"]},{"Key":"called Year,","Fragments":["and"]},{"Key":"Year, and","Fragments":["a"]},{"Key":"for IsLeap.","Fragments":["Now"]},{"Key":"IsLeap. Now","Fragments":["it"]},{"Key":"Now it","Fragments":["compiles"]},{"Key":"compiles with","Fragments":["the"]},{"Key":"the LeapTest.cs,","Fragments":["and"]},{"Key":"LeapTest.cs, and","Fragments":["I"]},{"Key":"can run","Fragments":["all","two","two"]},{"Key":" Hmm,","Fragments":["my","great"]},{"Key":"Hmm, my","Fragments":["formatting"]},{"Key":"formatting didn't","Fragments":["stick."]},{"Key":"didn't stick.","Fragments":["Oh,"]},{"Key":"stick. Oh,","Fragments":["well."]},{"Key":"next person","Fragments":["to"]},{"Key":"person to","Fragments":["read"]},{"Key":" posted","Fragments":["v4"]},{"Key":"posted v4","Fragments":["but"]},{"Key":"v4 but","Fragments":["my"]},{"Key":"my logic","Fragments":["is","a"]},{"Key":"more convoluted","Fragments":["than","and"]},{"Key":"convoluted than","Fragments":["yours"]},{"Key":"why XOR","Fragments":["popped"]},{"Key":"XOR popped","Fragments":["into"]},{"Key":"popped into","Fragments":["my"]},{"Key":"my head","Fragments":["to","that","(which","around","around","until"]},{"Key":"head to","Fragments":["use"]},{"Key":"use with","Fragments":["the","Zip."]},{"Key":"logic. I","Fragments":["had","don't","believe"]},{"Key":"had to","Fragments":["look","use","change","change","create","refactor","store","add","change","rely","be","put","include","specify","change","determine","steal","think","do","be","translate","stop","exist.","write","be","deallocate","put","alter","iterate","add","get","iterate","be","start","change"]},{"Key":"look up","Fragments":["the","the","that","the","inside"]},{"Key":"the symbol","Fragments":["for"]},{"Key":"symbol for","Fragments":["it."]},{"Key":"for it.","Fragments":["MetalKid,","I",":)"]},{"Key":"it. MetalKid,","Fragments":["your"]},{"Key":"MetalKid, your","Fragments":["logic"]},{"Key":"definitely clearer","Fragments":["with","to"]},{"Key":"clearer with","Fragments":["just","them"]},{"Key":"just \u0026\u0026","Fragments":["and"]},{"Key":"\u0026\u0026 and","Fragments":["||","||","||","||","||","||","||","||","||","||)"]},{"Key":" @rosina,","Fragments":["yes"]},{"Key":"@rosina, yes","Fragments":["its"]},{"Key":"yes its","Fragments":["anonymous,"]},{"Key":"its anonymous,","Fragments":["and"]},{"Key":"anonymous, and","Fragments":["saves"]},{"Key":"and saves","Fragments":["time"]},{"Key":"saves time","Fragments":["because"]},{"Key":"time because","Fragments":["it","I"]},{"Key":"will cast","Fragments":["the"]},{"Key":"cast the","Fragments":["object","return"]},{"Key":"object automatically.","Fragments":["In"]},{"Key":"automatically. In","Fragments":["the"]},{"Key":"your \"old\"","Fragments":["dictionary,"]},{"Key":"\"old\" dictionary,","Fragments":["the"]},{"Key":"of keypairvalue","Fragments":["is"]},{"Key":"keypairvalue is","Fragments":["already"]},{"Key":"You mentioned","Fragments":["You're"]},{"Key":"mentioned You're","Fragments":["not"]},{"Key":"You're not","Fragments":["very","checking"]},{"Key":"very familiar","Fragments":["with","with"]},{"Key":"with c#.","Fragments":["I"]},{"Key":"c#. I","Fragments":["must"]},{"Key":"I must","Fragments":["say"]},{"Key":"must say","Fragments":["that"]},{"Key":"it shows.","Fragments":["I"]},{"Key":"shows. I","Fragments":["think"]},{"Key":"of build-in","Fragments":["c#"]},{"Key":"build-in c#","Fragments":["functions"]},{"Key":"c# functions","Fragments":["to"]},{"Key":" Look","Fragments":["up","like","good,","solid.","into","at","remarkably","at","at"]},{"Key":"Look up","Fragments":["string.IsNullOrWhiteSpace,"]},{"Key":"up string.IsNullOrWhiteSpace,","Fragments":["for"]},{"Key":"string.IsNullOrWhiteSpace, for","Fragments":["example."]},{"Key":"for example.","Fragments":["or","It","By"]},{"Key":"example. or","Fragments":["String.last()"]},{"Key":"like putting","Fragments":["the"]},{"Key":"the body","Fragments":["of","of"]},{"Key":"body of","Fragments":["an","that","the"]},{"Key":"if block","Fragments":["on","in","and","try","and","will","in"]},{"Key":"block on","Fragments":["the","the"]},{"Key":"if -","Fragments":["makes","else"]},{"Key":"- makes","Fragments":["the"]},{"Key":"Thank you.","Fragments":["I","I"]},{"Key":"you. I","Fragments":["have","noticed"]},{"Key":"done a","Fragments":["new","useless","Skip"]},{"Key":"new version","Fragments":["that","out","with","out.","now","of","where"]},{"Key":"version that","Fragments":["is","would","works","passes"]},{"Key":"is trimmer","Fragments":["and"]},{"Key":"trimmer and","Fragments":["more"]},{"Key":"of what's","Fragments":["in"]},{"Key":"what's in","Fragments":["the"]},{"Key":"the requirements.","Fragments":["I"]},{"Key":"requirements. I","Fragments":["am"]},{"Key":"am unable","Fragments":["to"]},{"Key":"unable to","Fragments":["upload","be"]},{"Key":"to upload","Fragments":["the"]},{"Key":"upload the","Fragments":["new",".cs"]},{"Key":"new iteration,","Fragments":["though."]},{"Key":" @durward","Fragments":["Heh,"]},{"Key":"@durward Heh,","Fragments":["I"]},{"Key":"Heh, I","Fragments":["don't","just","don't"]},{"Key":"use ^","Fragments":["too"]},{"Key":"^ too","Fragments":["often,"]},{"Key":"too often,","Fragments":["but"]},{"Key":"often, but","Fragments":["it"]},{"Key":"it definitely","Fragments":["works","degrades","is"]},{"Key":"definitely works","Fragments":["here!"]},{"Key":"works here!","Fragments":[":)"]},{"Key":"like for","Fragments":["methods"]},{"Key":"for methods","Fragments":["that"]},{"Key":"that return","Fragments":["a","a"]},{"Key":"a boolean","Fragments":["to","by","indicating","that","statement","condition,","function","value","statement.","value.","variable","value","and","value.)","value,","value","already.","value."]},{"Key":"boolean to","Fragments":["have"]},{"Key":"name like","Fragments":["\"Is(something)\"","`pair`"]},{"Key":"like \"Is(something)\"","Fragments":["so"]},{"Key":"\"Is(something)\" so","Fragments":["that"]},{"Key":"like plain","Fragments":["English."]},{"Key":"I'd appreciate","Fragments":["any","someone"]},{"Key":"any thoughts","Fragments":["on","on","or"]},{"Key":"that nasty","Fragments":["nested"]},{"Key":"nasty nested","Fragments":["\"if\""]},{"Key":"personally dont","Fragments":["like"]},{"Key":"dont like","Fragments":["nesting","foreach"]},{"Key":"like nesting","Fragments":["foreach"]},{"Key":"nesting foreach","Fragments":["loops,","and","statements"]},{"Key":"foreach loops,","Fragments":["im","there"]},{"Key":"loops, im","Fragments":["going"]},{"Key":"im going","Fragments":["to"]},{"Key":"This technically","Fragments":["works."]},{"Key":"technically works.","Fragments":["Just"]},{"Key":"Just three","Fragments":["things."]},{"Key":"three things.","Fragments":[":)"]},{"Key":"1. bool","Fragments":["LeapYear"]},{"Key":"bool LeapYear","Fragments":["should"]},{"Key":"LeapYear should","Fragments":["be"]},{"Key":"be bool","Fragments":["leapYear"]},{"Key":"bool leapYear","Fragments":["(camel"]},{"Key":"leapYear (camel","Fragments":["case"]},{"Key":"(camel case","Fragments":["for","for","is"]},{"Key":"for local","Fragments":["variables)","variables"]},{"Key":"2. Why","Fragments":["not"]},{"Key":"if check","Fragments":["directly?","itself.","fails.","there.","and"]},{"Key":"check directly?","Fragments":["The"]},{"Key":"directly? The","Fragments":["variable"]},{"Key":"The variable","Fragments":["isn't","in","name"]},{"Key":"variable isn't","Fragments":["really","being"]},{"Key":"isn't really","Fragments":["doing","TDD","helping","better","necessary,"]},{"Key":"really doing","Fragments":["much","is"]},{"Key":"doing much","Fragments":["other"]},{"Key":"much other","Fragments":["than"]},{"Key":"than letting","Fragments":["you"]},{"Key":"letting you","Fragments":["put"]},{"Key":"a break","Fragments":["point","point,","statement"]},{"Key":"point on","Fragments":["it.","the","reuse,"]},{"Key":"on it.","Fragments":[":)"]},{"Key":"3. That","Fragments":["last"]},{"Key":"last else","Fragments":["code","if"]},{"Key":"else code","Fragments":["is","blocks"]},{"Key":"needed since","Fragments":["you","x%y==0"]},{"Key":"you initiated","Fragments":["it"]},{"Key":"initiated it","Fragments":["to"]},{"Key":"to false.","Fragments":[":)","Removing","Though,"]},{"Key":"use .ElementAt()","Fragments":["here"]},{"Key":".ElementAt() here","Fragments":["because"]},{"Key":"here because","Fragments":["it","the","of"]},{"Key":"will turn","Fragments":["it"]},{"Key":"turn it","Fragments":["into"]},{"Key":"new char","Fragments":["array"]},{"Key":"char array","Fragments":["first,","anyway.","in","is"]},{"Key":"array first,","Fragments":["then"]},{"Key":"first, then","Fragments":["access","look"]},{"Key":"then access","Fragments":["that.","the"]},{"Key":"access that.","Fragments":["Instead,"]},{"Key":"that. Instead,","Fragments":["you"]},{"Key":"Instead, you","Fragments":["can","could"]},{"Key":"do first[i]","Fragments":["directly"]},{"Key":"first[i] directly","Fragments":["because"]},{"Key":"directly because","Fragments":["string"]},{"Key":"because string","Fragments":["a"]},{"Key":"string a","Fragments":["really"]},{"Key":"a really","Fragments":["a","cool","bad","smart","good","good","nice","good","good","simple"]},{"Key":"a char","Fragments":["array","to","was","array,","[]","instead","to","array)"]},{"Key":"array anyway.","Fragments":[":)"]},{"Key":"addition to","Fragments":["what","T,"]},{"Key":"what MetalKid","Fragments":["said"]},{"Key":"MetalKid said","Fragments":["(especially"]},{"Key":"said (especially","Fragments":["point"]},{"Key":"(especially point","Fragments":["2):"]},{"Key":"point 2):","Fragments":["To"]},{"Key":"2): To","Fragments":["make"]},{"Key":"tests succeed","Fragments":["the"]},{"Key":"succeed the","Fragments":["Year"]},{"Key":"class needs","Fragments":["to"]},{"Key":"be static.","Fragments":["Since","And,","As"]},{"Key":"static. Since","Fragments":["there"]},{"Key":"Since there","Fragments":["is"]},{"Key":"no data","Fragments":["in"]},{"Key":"data in","Fragments":["the","the","order","my","the","my","ReadMe"]},{"Key":"the class,","Fragments":["you'll","each"]},{"Key":"class, you'll","Fragments":["never"]},{"Key":"you'll never","Fragments":["need"]},{"Key":"never need","Fragments":["to","to"]},{"Key":"instantiate is","Fragments":["anyway."]},{"Key":"nitpick is","Fragments":["don't","that"]},{"Key":"is don't","Fragments":["use"]},{"Key":"\"var\" just","Fragments":["because"]},{"Key":"can. var","Fragments":["is"]},{"Key":"var is","Fragments":["\"supposed\"","more","late"]},{"Key":"is \"supposed\"","Fragments":["to"]},{"Key":"\"supposed\" to","Fragments":["be"]},{"Key":"be for","Fragments":["anonymous","things","things","creating"]},{"Key":"for anonymous","Fragments":["classes."]},{"Key":"anonymous classes.","Fragments":[":)",":)"]},{"Key":"same thing,","Fragments":["except","then"]},{"Key":"thing, except","Fragments":["I"]},{"Key":"except I","Fragments":["used","extracted"]},{"Key":"dictionary on","Fragments":["my"]},{"Key":"first iteration.","Fragments":[":-D","I","Passes"]},{"Key":"One suggestion","Fragments":["is","is","is","is","for","is"]},{"Key":"the overhead","Fragments":["of"]},{"Key":"overhead of","Fragments":["convert","iterating"]},{"Key":"of convert","Fragments":["it"]},{"Key":"convert it","Fragments":["to","to","C#","to","to","into","back"]},{"Key":"an array","Fragments":["and","of","on","instead","and","of","be","(yes,","and","you","you","instead","instead.","of","of","--","of","by","of","and","of","of","of","or","or","and","of","of","literal","when","of","of","of","and","and"]},{"Key":"array and","Fragments":["then","had","will","wrapping","insert","a","none"]},{"Key":"then back","Fragments":["to"]},{"Key":"to strings.","Fragments":["You"]},{"Key":"strings. You","Fragments":["can"]},{"Key":"can instead","Fragments":["leave"]},{"Key":"instead leave","Fragments":["everything"]},{"Key":"leave everything","Fragments":["as"]},{"Key":"everything as","Fragments":["an","an"]},{"Key":"an IEnumerable","Fragments":["(skipping","it"]},{"Key":"IEnumerable (skipping","Fragments":["the"]},{"Key":"(skipping the","Fragments":["toarray"]},{"Key":"the toarray","Fragments":["and"]},{"Key":"toarray and","Fragments":["new"]},{"Key":"and new","Fragments":["string()","lines."]},{"Key":"new string()","Fragments":["calls)"]},{"Key":"string() calls)","Fragments":["and"]},{"Key":"calls) and","Fragments":["use"]},{"Key":"use SequenceEqual","Fragments":["to"]},{"Key":"SequenceEqual to","Fragments":["check","do"]},{"Key":"you eliminated","Fragments":["non"]},{"Key":"eliminated non","Fragments":["leap"]},{"Key":"non leap","Fragments":["years"]},{"Key":"years first,","Fragments":["this"]},{"Key":"to simplify","Fragments":["the","preventing","my","the","-","the"]},{"Key":"simplify the","Fragments":["logic.","middle","statement","code.","calculation","check","calculation","check","dictionary","LINQ","storage","first","linq"]},{"Key":"Yeah as","Fragments":["far"]},{"Key":"as far","Fragments":["as","as","as"]},{"Key":"is concerned","Fragments":["```var","and"]},{"Key":"concerned ```var","Fragments":["newValues"]},{"Key":"```var newValues","Fragments":["="]},{"Key":"newValues =","Fragments":["new","new"]},{"Key":"Dictionary\u003cstring, int\u003e()```","Fragments":["is"]},{"Key":"int\u003e()``` is","Fragments":["the"]},{"Key":"as ```Dictionary\u003cstring,","Fragments":["int\u003e"]},{"Key":"```Dictionary\u003cstring, int\u003e","Fragments":["newValues"]},{"Key":"int\u003e newValues","Fragments":["="]},{"Key":"var when","Fragments":["it"]},{"Key":"be inferred","Fragments":["from"]},{"Key":"inferred from","Fragments":["the"]},{"Key":"right side","Fragments":["of",",","of"]},{"Key":" @brisa","Fragments":["In"]},{"Key":"@brisa In","Fragments":["this"]},{"Key":"scenario, Year","Fragments":["could"]},{"Key":"Year could","Fragments":["be"]},{"Key":"be static","Fragments":["or","too."]},{"Key":"static or","Fragments":["non-static."]},{"Key":"or non-static.","Fragments":["We"]},{"Key":"non-static. We","Fragments":["don't"]},{"Key":"don't really","Fragments":["know","need","have","add","care","need","need","need","need","understand","know"]},{"Key":"really know","Fragments":["the","C#"]},{"Key":"what else","Fragments":["would","would"]},{"Key":"else would","Fragments":["be","go"]},{"Key":" Thoughts","Fragments":["on"]},{"Key":"Thoughts on","Fragments":["having"]},{"Key":"on having","Fragments":["a"]},{"Key":"function with","Fragments":["more","a","invalid"]},{"Key":"with more","Fragments":["than","experience","complicated","substance"]},{"Key":" @columbus","Fragments":["If"]},{"Key":"@columbus If","Fragments":["you"]},{"Key":"you break","Fragments":["that","it","out"]},{"Key":"break that","Fragments":["one"]},{"Key":"that one","Fragments":["line","directy.","should","of"]},{"Key":"line up,","Fragments":["then"]},{"Key":"up, then","Fragments":["you"]},{"Key":"4 result","Fragments":["is"]},{"Key":"false because","Fragments":["if"]},{"Key":"false you","Fragments":["don't"]},{"Key":"to continue","Fragments":["the"]},{"Key":"continue the","Fragments":["other"]},{"Key":"other %","Fragments":["checks."]},{"Key":"After see","Fragments":["a"]},{"Key":"other entries","Fragments":["where"]},{"Key":"entries where","Fragments":["they"]},{"Key":"where they","Fragments":["sorted","checked"]},{"Key":"they sorted","Fragments":["the"]},{"Key":"sorted the","Fragments":["string,","candidate","source"]},{"Key":"the string,","Fragments":["I","though","I","while","ensuring","so","when","there","which","just"]},{"Key":"could streamline","Fragments":["my"]},{"Key":"streamline my","Fragments":["anagram"]},{"Key":"my anagram","Fragments":["code"]},{"Key":"anagram code","Fragments":["quite"]},{"Key":"code quite","Fragments":["a"]},{"Key":"bit. Dangit,","Fragments":["why"]},{"Key":"Dangit, why","Fragments":["didn't"]},{"Key":"why didn't","Fragments":["I","you"]},{"Key":"didn't I","Fragments":["think"]},{"Key":"of that!","Fragments":[":-D",":-D","The"]},{"Key":"I ditched","Fragments":["the"]},{"Key":"ditched the","Fragments":["dictionary"]},{"Key":"the dictionary","Fragments":["keeping","and","not","make","can","as","from","if","reference","then","search","of","-","by","is","had","to","keeps","but","sorted","could","and","I","keys.","and","or","with","an","simpler","without"]},{"Key":"dictionary keeping","Fragments":["letter"]},{"Key":"keeping letter","Fragments":["counts"]},{"Key":"letter counts","Fragments":["and"]},{"Key":"counts and","Fragments":["kept","replaced"]},{"Key":"and kept","Fragments":["a"]},{"Key":"kept a","Fragments":["sorted"]},{"Key":"a sorted","Fragments":["list","data","set"]},{"Key":"sorted list","Fragments":["of"]},{"Key":"the master","Fragments":["word"]},{"Key":"master word","Fragments":["instead."]},{"Key":"word instead.","Fragments":["Then"]},{"Key":"instead. Then","Fragments":["just"]},{"Key":"Then just","Fragments":["sorted"]},{"Key":"just sorted","Fragments":["the"]},{"Key":"candidate word","Fragments":["and"]},{"Key":"word and","Fragments":["compared","should","then","do","do","is","number","then"]},{"Key":"compared the","Fragments":["two"]},{"Key":"two sequences.","Fragments":["I"]},{"Key":"sequences. I","Fragments":["think"]},{"Key":"follow than","Fragments":["the"]},{"Key":" instead","Fragments":["of","of"]},{"Key":"the clunky","Fragments":["LINQ"]},{"Key":"clunky LINQ","Fragments":["based"]},{"Key":" method","Fragments":["from"]},{"Key":"method from","Fragments":["Iteration","your","different","Allergies","Strain","the"]},{"Key":"from Iteration","Fragments":["1."]},{"Key":"Iteration 1.","Fragments":["I"]},{"Key":"I completely","Fragments":["forgot","blanked","agree"]},{"Key":"completely forgot","Fragments":["that"]},{"Key":"forgot that","Fragments":["this","logic","I"]},{"Key":" Ack,","Fragments":["c#"]},{"Key":"Ack, c#","Fragments":["naming"]},{"Key":"c# naming","Fragments":["conventions"]},{"Key":"naming conventions","Fragments":["state","for","in"]},{"Key":"conventions state","Fragments":["divisible_by"]},{"Key":"state divisible_by","Fragments":["should"]},{"Key":"divisible_by should","Fragments":["be"]},{"Key":"Yes now","Fragments":["it's"]},{"Key":"now it's","Fragments":["better."]},{"Key":"it's better.","Fragments":["I"]},{"Key":"better. I","Fragments":["personally"]},{"Key":"to always","Fragments":["use","surround","stick","surround","seeing","add"]},{"Key":"always use","Fragments":["brackets","{","properties!\"","verse","`this.privatefield`","the"]},{"Key":"brackets under","Fragments":["if"]},{"Key":"under if","Fragments":["statements,"]},{"Key":"statements, I","Fragments":["think"]},{"Key":"makes things","Fragments":["clearer","easy","easier."]},{"Key":"things clearer","Fragments":["and"]},{"Key":"clearer and","Fragments":["less","prevents","more","better"]},{"Key":"less possible","Fragments":["to"]},{"Key":"to introduce","Fragments":["bugs.","more","a"]},{"Key":"Probably could","Fragments":["use"]},{"Key":"use refactoring","Fragments":["to"]},{"Key":"to conform","Fragments":["to"]},{"Key":"conform to","Fragments":["DRY","a"]},{"Key":"avoid using","Fragments":["\"var\"","\"var\"","\"this\"","an","tuples","loops","GropuBy()"]},{"Key":"using \"var\"","Fragments":["when","when","over","when"]},{"Key":"\"var\" when","Fragments":["you","you","not"]},{"Key":"have to.","Fragments":["It","It",":-)"]},{"Key":"to. It","Fragments":["is","is"]},{"Key":"for things","Fragments":["like","like","like","like","that"]},{"Key":"things like","Fragments":["anonymous","anonymous","anonymous","the","exclamation","\"does","what","leap","`Delete.User()`,"]},{"Key":"like anonymous","Fragments":["classes!","classes!","classes."]},{"Key":"anonymous classes!","Fragments":[":)",":)"]},{"Key":"is perhaps","Fragments":["a","a","more","more"]},{"Key":"perhaps a","Fragments":["matter","different","bit"]},{"Key":"of preference","Fragments":["or"]},{"Key":"preference or","Fragments":["style"]},{"Key":"or style","Fragments":["but"]},{"Key":"style but","Fragments":["I"]},{"Key":"that always","Fragments":["wrapping","returns"]},{"Key":"always wrapping","Fragments":["if"]},{"Key":"wrapping if","Fragments":["blocks"]},{"Key":"blocks in","Fragments":["curly"]},{"Key":"in curly","Fragments":["braces"]},{"Key":"curly braces","Fragments":["prevents","clutter","around","around","for","when","or","in","and"]},{"Key":"braces prevents","Fragments":["unintended"]},{"Key":"prevents unintended","Fragments":["errors"]},{"Key":"unintended errors","Fragments":["if"]},{"Key":"errors if","Fragments":["you"]},{"Key":"you must","Fragments":["make"]},{"Key":"must make","Fragments":["changes"]},{"Key":"make changes","Fragments":["to"]},{"Key":"block in","Fragments":["the","Grade(),","the","Count"]},{"Key":"one statement","Fragments":["in","(in","if","using","-"]},{"Key":"in an","Fragments":["if","\"if\"","external","argument","enterprise","array","'if'","extra","IDE","inner","editor","attempt","array","enum","else","algorithm","array."]},{"Key":"and feel","Fragments":["the"]},{"Key":"feel the","Fragments":["curly"]},{"Key":"the curly","Fragments":["braces","braces,","braces","braces","braces."]},{"Key":"braces clutter","Fragments":["the"]},{"Key":"clutter the","Fragments":["code"]},{"Key":"code I","Fragments":["place","almost","see","noticed","realized","thought","would","would","had","used","felt","used"]},{"Key":"I place","Fragments":["the"]},{"Key":"place the","Fragments":["statement","'cleaning'"]},{"Key":"statement on","Fragments":["the","a","line","a","two"]},{"Key":"code on","Fragments":["the","the"]},{"Key":"same line,","Fragments":["it","I"]},{"Key":"line, it","Fragments":["depends"]},{"Key":"the scenario","Fragments":["for"]},{"Key":"scenario for","Fragments":["me."]},{"Key":"for me.","Fragments":["I","Maybe","Someone","Prior","It"]},{"Key":"often like","Fragments":["how"]},{"Key":"how throwing","Fragments":["an"]},{"Key":"exception looks","Fragments":["on"]},{"Key":"looks on","Fragments":["a"]},{"Key":"a one","Fragments":["line","line","liner.","line","off."]},{"Key":" @braxton","Fragments":["In"]},{"Key":"@braxton In","Fragments":["that"]},{"Key":"In that","Fragments":["case,","case,"]},{"Key":"that case,","Fragments":["we","there","why"]},{"Key":"case, we","Fragments":["could"]},{"Key":"a 'Person'","Fragments":["class"]},{"Key":"'Person' class","Fragments":["whose"]},{"Key":"class whose","Fragments":["'Hey'"]},{"Key":"whose 'Hey'","Fragments":["function"]},{"Key":"'Hey' function","Fragments":["takes"]},{"Key":"function takes","Fragments":["a"]},{"Key":"takes a","Fragments":["'Phrase'","while","integer","minute","lot","lot","much","start","length","lot"]},{"Key":"a 'Phrase'","Fragments":["parameter"]},{"Key":"'Phrase' parameter","Fragments":["which"]},{"Key":"parameter which","Fragments":["is"]},{"Key":"is based","Fragments":["on","on","on"]},{"Key":"on string,","Fragments":["but"]},{"Key":"string, but","Fragments":["we","in","it"]},{"Key":"but we","Fragments":["might"]},{"Key":"we might","Fragments":["be"]},{"Key":"be overcomplicating","Fragments":["things..."]},{"Key":"probably move","Fragments":["the"]},{"Key":"the sortedInputString","Fragments":["variable"]},{"Key":"sortedInputString variable","Fragments":["into"]},{"Key":"variable into","Fragments":["a"]},{"Key":"and initialize","Fragments":["it"]},{"Key":"initialize it","Fragments":["in","every"]},{"Key":"constructor. No","Fragments":["need"]},{"Key":"every method","Fragments":["call"]},{"Key":"method call","Fragments":["if","is","as","`AddDays()`","that","another","the","is"]},{"Key":"call if","Fragments":["you"]},{"Key":"it once.","Fragments":["It","DRY."]},{"Key":"once. It","Fragments":["could"]},{"Key":"time on","Fragments":["very"]},{"Key":"on very","Fragments":["big"]},{"Key":"very big","Fragments":["lists"]},{"Key":"big lists","Fragments":["in"]},{"Key":"lists in","Fragments":["the"]},{"Key":"block try","Fragments":["this"]},{"Key":"try this","Fragments":["code","out,"]},{"Key":"if (Year.IsDivisibleBy4(year)","Fragments":["\u0026\u0026"]},{"Key":"(Year.IsDivisibleBy4(year) \u0026\u0026","Fragments":["!Year.IsDivisibleBy100(year)"]},{"Key":"\u0026\u0026 !Year.IsDivisibleBy100(year)","Fragments":["||"]},{"Key":"!Year.IsDivisibleBy100(year) ||","Fragments":["Year.IsDivisibleBy400(year))"]},{"Key":"The conditional","Fragments":["expression","on"]},{"Key":"conditional expression","Fragments":["is","instead"]},{"Key":"is longer","Fragments":["but","than","than","than","than","than"]},{"Key":"longer but","Fragments":["it"]},{"Key":"gets rid","Fragments":["of"]},{"Key":"Very nice,","Fragments":["that's","the"]},{"Key":"nice, that's","Fragments":["an"]},{"Key":"that's an","Fragments":["approach","interesting"]},{"Key":"an approach","Fragments":["I"]},{"Key":"approach I","Fragments":["hadn't","did.","decided","think(?)"]},{"Key":"hadn't considered.","Fragments":[":-)","Out"]},{"Key":"can already","Fragments":["tell"]},{"Key":"already tell","Fragments":["from"]},{"Key":"tell from","Fragments":["the"]},{"Key":"the Nitpicks","Fragments":["there"]},{"Key":"Nitpicks there","Fragments":["are"]},{"Key":"are lots","Fragments":["of"]},{"Key":"of philosophies","Fragments":["for"]},{"Key":"philosophies for","Fragments":["code"]},{"Key":"for code","Fragments":["style.","like","reuse"]},{"Key":"code style.","Fragments":["I"]},{"Key":"you on","Fragments":["this","making","using","those:","readability","that!)"]},{"Key":"line if-blocks.","Fragments":["I"]},{"Key":"if-blocks. I","Fragments":["worry"]},{"Key":"a second,","Fragments":["indented","you"]},{"Key":"second, indented","Fragments":["line"]},{"Key":"indented line","Fragments":["(without"]},{"Key":"line (without","Fragments":["curly"]},{"Key":"(without curly","Fragments":["braces)"]},{"Key":"curly braces)","Fragments":["when"]},{"Key":"braces) when","Fragments":["you"]},{"Key":"additional statement","Fragments":["in"]},{"Key":"the future","Fragments":["you'll","and","is","or","if","should","I'll","I","I","I","has","to"]},{"Key":"future you'll","Fragments":["introduce"]},{"Key":"you'll introduce","Fragments":["a"]},{"Key":"introduce a","Fragments":["bug","variable","bunch","second"]},{"Key":"a bug","Fragments":["because","I"]},{"Key":"bug because","Fragments":["you"]},{"Key":"don't notice","Fragments":["the"]},{"Key":"notice the","Fragments":["additional"]},{"Key":"the additional","Fragments":["line","method","lines"]},{"Key":"additional line","Fragments":["isn't","of"]},{"Key":"line isn't","Fragments":["in"]},{"Key":"isn't in","Fragments":["your","the"]},{"Key":"your implied","Fragments":["if-block"]},{"Key":"implied if-block","Fragments":["because"]},{"Key":"if-block because","Fragments":["your"]},{"Key":"because your","Fragments":["new","code"]},{"Key":"new line","Fragments":["is"]},{"Key":"line is","Fragments":["also","by"]},{"Key":"like returning","Fragments":["as"]},{"Key":"returning as","Fragments":["soon"]},{"Key":"as I'm","Fragments":["done","sure","used","aware,","assuming","assuming"]},{"Key":"I'm done","Fragments":["in"]},{"Key":"my functions.","Fragments":["It"]},{"Key":"functions. It","Fragments":["tells"]},{"Key":"It tells","Fragments":["me"]},{"Key":"tells me","Fragments":["that"]},{"Key":"that nothing","Fragments":["after","after"]},{"Key":"nothing after","Fragments":["this","that"]},{"Key":"after this","Fragments":["is","block,"]},{"Key":"change my","Fragments":["return","submission.","implementation","regular","static"]},{"Key":"my return","Fragments":["value","value"]},{"Key":"to worry","Fragments":["about","about.","about","about","about","about","about","about","about","about","about"]},{"Key":"worry about","Fragments":["the","bugs,","the","it.","upper","selecting","strings","numbers","it.","duplication.","\u003e","it.","side","the","those"]},{"Key":"method. It","Fragments":["also","makes","makes","is","creates"]},{"Key":"It also","Fragments":["helps","obviates","makes","gave"]},{"Key":"also helps","Fragments":["keep"]},{"Key":"helps keep","Fragments":["code"]},{"Key":"keep code","Fragments":["clean"]},{"Key":"code clean","Fragments":["as"]},{"Key":"clean as","Fragments":["I","a"]},{"Key":"wrap other","Fragments":["code"]},{"Key":"other code","Fragments":["in","here","around","won't"]},{"Key":"in else-blocks","Fragments":["or"]},{"Key":"else-blocks or","Fragments":["recheck"]},{"Key":"or recheck","Fragments":["my"]},{"Key":"recheck my","Fragments":["return"]},{"Key":"and wrap","Fragments":["things","that"]},{"Key":"wrap things","Fragments":["in"]},{"Key":"Good job,","Fragments":["I","it","I","this","but"]},{"Key":"of Linq.","Fragments":["That's","I"]},{"Key":"Linq. That's","Fragments":["just"]},{"Key":"That's just","Fragments":["personal","my"]},{"Key":"just personal","Fragments":["preference,","preference."]},{"Key":"preference, though.","Fragments":[":-D"]},{"Key":"not needed.","Fragments":["When","Removing","The"]},{"Key":"needed. When","Fragments":["you"]},{"Key":"When you","Fragments":["have","double","use","call","have","are","come","see","do","check","point"]},{"Key":"a If-Return","Fragments":["statement,","statement"]},{"Key":"If-Return statement,","Fragments":["anything"]},{"Key":"statement, anything","Fragments":["that"]},{"Key":"that appears","Fragments":["after"]},{"Key":"appears after","Fragments":["the"]},{"Key":"only going","Fragments":["to","to","to"]},{"Key":"execute if","Fragments":["the","the","the","the","the","the","the","they"]},{"Key":"statement failed,","Fragments":["just"]},{"Key":"failed, just","Fragments":["like"]},{"Key":"be shortened","Fragments":["to","to"]},{"Key":"shortened to","Fragments":["this:","strand1[i]."]},{"Key":" //fail","Fragments":["fast","on"]},{"Key":"//fail fast","Fragments":["if"]},{"Key":"fast if","Fragments":["the"]},{"Key":"lengths are","Fragments":["not","the"]},{"Key":"if (matchWord.Length","Fragments":["!="]},{"Key":"(matchWord.Length !=","Fragments":["word.Length)"]},{"Key":"//fail on","Fragments":["special"]},{"Key":"on special","Fragments":["case"]},{"Key":"words are","Fragments":["equal","an"]},{"Key":"are equal","Fragments":["(case","by","length."]},{"Key":"equal (case","Fragments":["insensitive)"]},{"Key":" //order","Fragments":["the"]},{"Key":"//order the","Fragments":["characters"]},{"Key":"the characters","Fragments":["in","of","that","in","that","are","(see","are","in","in","are"]},{"Key":"each word","Fragments":["(case","that","was","in"]},{"Key":"word (case","Fragments":["insensitive)"]},{"Key":"var sortedWord","Fragments":["="]},{"Key":"sortedWord =","Fragments":["from"]},{"Key":"= from","Fragments":["chars"]},{"Key":"from chars","Fragments":["in"]},{"Key":"in word.ToLower()","Fragments":["orderby"]},{"Key":"word.ToLower() orderby","Fragments":["chars"]},{"Key":"orderby chars","Fragments":["select"]},{"Key":"chars select","Fragments":["chars;"]},{"Key":"// blah","Fragments":["blah","blah","blah"]},{"Key":"blah blah","Fragments":["blah","blah"]},{"Key":"I included","Fragments":["that","the","them"]},{"Key":"included that","Fragments":["part","are","in"]},{"Key":"part even","Fragments":["though"]},{"Key":"though there","Fragments":["is"]},{"Key":"that because","Fragments":["as","that","I","you","I","the"]},{"Key":"because as","Fragments":["the"]},{"Key":"readme says","Fragments":["'Good"]},{"Key":"says 'Good","Fragments":["code"]},{"Key":"'Good code","Fragments":["doesn't"]},{"Key":"doesn't just","Fragments":["pass"]},{"Key":"just pass","Fragments":["the","the","`\"\"`."]},{"Key":"test suite'","Fragments":[":-)"]},{"Key":"suite' :-)","Fragments":["Good"]},{"Key":":-) Good","Fragments":["point,"]},{"Key":"Good point,","Fragments":["I","I","but","like"]},{"Key":"point, I","Fragments":["didn't","didn't"]},{"Key":"really think","Fragments":["much","about","of","of"]},{"Key":"think much","Fragments":["about"]},{"Key":"much about","Fragments":["the","potential","generics."]},{"Key":"That's brilliant,","Fragments":["thanks"]},{"Key":"brilliant, thanks","Fragments":["for"]},{"Key":"right, the","Fragments":["\"does","Select"]},{"Key":"nature is","Fragments":["definitely"]},{"Key":"a trade-off.","Fragments":["Plus"]},{"Key":"trade-off. Plus","Fragments":["the"]},{"Key":"Plus the","Fragments":["method"]},{"Key":"Yeah, you're","Fragments":["right","right"]},{"Key":"you're right","Fragments":["about","about"]},{"Key":"right about","Fragments":["the","Point","the","the","the"]},{"Key":"the brackets,","Fragments":["but"]},{"Key":"brackets, but","Fragments":["I"]},{"Key":"would flame","Fragments":["any"]},{"Key":"flame any","Fragments":["dev"]},{"Key":"any dev","Fragments":["for"]},{"Key":"dev for","Fragments":["not"]},{"Key":"using DateTime.IsLeapYear()","Fragments":[";)"]},{"Key":"the quick","Fragments":["and"]},{"Key":"quick and","Fragments":["dirty","dirty.","powerful."]},{"Key":"and dirty","Fragments":["1st"]},{"Key":"dirty 1st","Fragments":["go."]},{"Key":"1st go.","Fragments":["Without"]},{"Key":"go. Without","Fragments":["access"]},{"Key":"Without access","Fragments":["to"]},{"Key":"access to","Fragments":["resharper,","these.","the","read","the","the","your"]},{"Key":"to resharper,","Fragments":["I'll"]},{"Key":"resharper, I'll","Fragments":["have"]},{"Key":"foreach bits","Fragments":["to"]},{"Key":"bits to","Fragments":["LINQ","the"]},{"Key":"to LINQ","Fragments":["manually"]},{"Key":"LINQ manually","Fragments":["and"]},{"Key":"manually and","Fragments":["actually"]},{"Key":"and actually","Fragments":["think","be"]},{"Key":"actually think","Fragments":["about"]},{"Key":"about it.","Fragments":["Which,","If","What","Again,","They"]},{"Key":"it. Which,","Fragments":["obviously,"]},{"Key":"Which, obviously,","Fragments":["is"]},{"Key":"obviously, is","Fragments":["the"]},{"Key":" Second","Fragments":["iteration","iteration,","iteration","iteration:","=","FastForeach","I"]},{"Key":"Second iteration","Fragments":["looking","uses"]},{"Key":"iteration looking","Fragments":["for"]},{"Key":"better readability.","Fragments":["I'm"]},{"Key":"readability. I'm","Fragments":["still","all"]},{"Key":"still not","Fragments":["sure","descriptive.","defined.","handle","1,","100%"]},{"Key":"the nesting,","Fragments":["though"]},{"Key":"job, it","Fragments":["looks"]},{"Key":"like it'll","Fragments":["get"]},{"Key":"it'll get","Fragments":["the"]},{"Key":"that going","Fragments":["Regex"]},{"Key":"going Regex","Fragments":["might"]},{"Key":"Regex might","Fragments":["be"]},{"Key":"little heavy","Fragments":["handed"]},{"Key":"heavy handed","Fragments":["for"]},{"Key":"handed for","Fragments":["this"]},{"Key":"this problem,","Fragments":["as","but","most","reflection"]},{"Key":"problem, as","Fragments":["you"]},{"Key":"checking to","Fragments":["make","see","make","see","see","see"]},{"Key":"sure there","Fragments":["is","is","is","must","is"]},{"Key":"letter in","Fragments":["the","letters)","each","the","my","currentlyTesting)","word)","letters)"]},{"Key":"string. A","Fragments":["lighter"]},{"Key":"A lighter","Fragments":["option"]},{"Key":"lighter option","Fragments":["would"]},{"Key":"the Any","Fragments":["method","extension","and"]},{"Key":"Any method","Fragments":["on"]},{"Key":"string and","Fragments":["the","make","checking","splits","char","single","have","creating","do","subtract","stepping","passing","adding","substitute","using"]},{"Key":"the IsLetter","Fragments":["method"]},{"Key":"IsLetter method","Fragments":["on"]},{"Key":"like if","Fragments":["()","the"]},{"Key":"if ()","Fragments":["better","can"]},{"Key":"() better","Fragments":["than"]},{"Key":"and year","Fragments":["%","is","also"]},{"Key":"0 better","Fragments":["than"]},{"Key":"than year%4==0","Fragments":["(spaces)"]},{"Key":"the square","Fragments":["brackets","bracket","root","root","root","root","rotated.","rotated."]},{"Key":"square brackets","Fragments":["on","for"]},{"Key":"brackets on","Fragments":["ifs"]},{"Key":"on ifs","Fragments":["in"]},{"Key":"ifs in","Fragments":["javascript,","removePunctuation();","some"]},{"Key":"in javascript,","Fragments":["don't"]},{"Key":"javascript, don't","Fragments":["know"]},{"Key":"it's common","Fragments":["in"]},{"Key":"in csharp","Fragments":["to","though"]},{"Key":"csharp to","Fragments":["leave"]},{"Key":"chose not","Fragments":["to","to"]},{"Key":"extract methods","Fragments":["for"]},{"Key":"any but","Fragments":["the"]},{"Key":"the IsShout","Fragments":["logic"]},{"Key":"IsShout logic","Fragments":["as"]},{"Key":"logic as","Fragments":["it","for","before)."]},{"Key":"is simple","Fragments":["enough","and","enough","and"]},{"Key":"remove noLetters","Fragments":["as"]},{"Key":"noLetters as","Fragments":["variable"]},{"Key":"as variable","Fragments":["but"]},{"Key":"variable but","Fragments":["prefer"]},{"Key":"but prefer","Fragments":["explaining"]},{"Key":"prefer explaining","Fragments":["variables"]},{"Key":"explaining variables","Fragments":["as"]},{"Key":"the negation","Fragments":["can"]},{"Key":"negation can","Fragments":["easily"]},{"Key":"can easily","Fragments":["confuse.","add","add","become"]},{"Key":"Very concise","Fragments":["code.","and"]},{"Key":"concise code.","Fragments":["If"]},{"Key":"code. If","Fragments":["this","you","all"]},{"Key":"this were","Fragments":["a"]},{"Key":"were a","Fragments":["real","character","no-no.","multiple"]},{"Key":"real production","Fragments":["project,"]},{"Key":"production project,","Fragments":["and"]},{"Key":"project, and","Fragments":["I"]},{"Key":"knew junior","Fragments":["dev's"]},{"Key":"junior dev's","Fragments":["would"]},{"Key":"dev's would","Fragments":["be"]},{"Key":"be working","Fragments":["on","now."]},{"Key":"working on","Fragments":["it,","your","your","learning","a","my","the"]},{"Key":"on it,","Fragments":["I'd","I","though;"]},{"Key":"it, I'd","Fragments":["be","consider"]},{"Key":"I'd be","Fragments":["tempted","tempted","glad","lying"]},{"Key":"be tempted","Fragments":["to","to"]},{"Key":"tempted to","Fragments":["split","include","add"]},{"Key":"to split","Fragments":["out","the","the","the","the"]},{"Key":"split out","Fragments":["the","the"]},{"Key":" ie","Fragments":["starting"]},{"Key":"ie starting","Fragments":["with"]},{"Key":"starting with","Fragments":["if","y%400","an"]},{"Key":"with if","Fragments":["(year%4!=0)","statements.","statements,"]},{"Key":"if (year%4!=0)","Fragments":["return"]},{"Key":"(year%4!=0) return","Fragments":["false"]},{"Key":"your elegant","Fragments":["code."]},{"Key":"elegant code.","Fragments":["Can"]},{"Key":"code. Can","Fragments":["lose","you"]},{"Key":"Can lose","Fragments":["brackets"]},{"Key":"lose brackets","Fragments":["too"]},{"Key":"brackets too","Fragments":[":-)"]},{"Key":" year","Fragments":["%","%","%","%","%400","%","%"]},{"Key":"method comments.","Fragments":["I've","It"]},{"Key":"comments. I've","Fragments":["found"]},{"Key":"I've found","Fragments":["that","it","that","my","to"]},{"Key":"good summary","Fragments":["of"]},{"Key":"in plain","Fragments":["English"]},{"Key":"plain English","Fragments":["saves"]},{"Key":"English saves","Fragments":["me"]},{"Key":"saves me","Fragments":["time"]},{"Key":"me time","Fragments":["and"]},{"Key":"often add","Fragments":["these"]},{"Key":"add these","Fragments":["to"]},{"Key":"these to","Fragments":["our"]},{"Key":"to our","Fragments":["legacy"]},{"Key":"our legacy","Fragments":["code"]},{"Key":"legacy code","Fragments":["so"]},{"Key":"code (no","Fragments":["matter"]},{"Key":"(no matter","Fragments":["how"]},{"Key":"matter how","Fragments":["\"self-documenting\"","much"]},{"Key":"how \"self-documenting\"","Fragments":["it"]},{"Key":"\"self-documenting\" it","Fragments":["might"]},{"Key":"might be).","Fragments":["At"]},{"Key":"be). At","Fragments":["least"]},{"Key":"At least","Fragments":["I","to","I","I","switch"]},{"Key":"least I","Fragments":["know","did","did"]},{"Key":"was intended","Fragments":["to","as"]},{"Key":"intended to","Fragments":["do","write","elicit"]},{"Key":"do even","Fragments":["if"]},{"Key":"if code","Fragments":["has"]},{"Key":"code has","Fragments":["bugs","to","any"]},{"Key":"has bugs","Fragments":["and"]},{"Key":"bugs and","Fragments":["doesn't","cleaned"]},{"Key":"and doesn't","Fragments":["actually","have","validate","actually","seem"]},{"Key":"doesn't actually","Fragments":["do","specify"]},{"Key":"should perform","Fragments":["your"]},{"Key":"perform your","Fragments":["%","\u003ccode\u003eContainsKey\u003c/code\u003e"]},{"Key":"your %","Fragments":["4","4"]},{"Key":"4 check","Fragments":["first."]},{"Key":"check first.","Fragments":["Statistically"]},{"Key":"first. Statistically","Fragments":["the"]},{"Key":"Statistically the","Fragments":["years"]},{"Key":"years checked","Fragments":["aren't"]},{"Key":"checked aren't","Fragments":["going"]},{"Key":"aren't going","Fragments":["to"]},{"Key":"check (only","Fragments":["1"]},{"Key":"(only 1","Fragments":["in"]},{"Key":"1 in","Fragments":["100)"]},{"Key":"in 100)","Fragments":["and"]},{"Key":"100) and","Fragments":["will"]},{"Key":"will fall","Fragments":["through"]},{"Key":"fall through","Fragments":["to"]},{"Key":"through to","Fragments":["your","the"]},{"Key":"4 check.","Fragments":["So,"]},{"Key":"check. So,","Fragments":["pass"]},{"Key":"So, pass","Fragments":["or"]},{"Key":"pass or","Fragments":["fail,"]},{"Key":"or fail,","Fragments":["you've"]},{"Key":"fail, you've","Fragments":["done"]},{"Key":"you've done","Fragments":["a","is","that,","that,"]},{"Key":"a useless","Fragments":["%"]},{"Key":"useless %","Fragments":["100"]},{"Key":"100 on","Fragments":["most"]},{"Key":"on most","Fragments":["years."]},{"Key":"the anonymous","Fragments":["function","class","type.","object"]},{"Key":"anonymous function","Fragments":["to"]},{"Key":"% operator","Fragments":["is","works.","is"]},{"Key":"is novel.","Fragments":["Could"]},{"Key":"novel. Could","Fragments":["make"]},{"Key":"Could make","Fragments":["the","your"]},{"Key":"and remove","Fragments":["the","unused","them","those","the","the"]},{"Key":"constructor ...","Fragments":["but"]},{"Key":"... but","Fragments":["that"]},{"Key":"that truly","Fragments":["is"]},{"Key":"a nitpick.","Fragments":["Nicely"]},{"Key":"nitpick. Nicely","Fragments":["done."]},{"Key":"Doing the","Fragments":["same"]},{"Key":"same exercise","Fragments":["in"]},{"Key":"exercise in","Fragments":["Python,","splitting","whether"]},{"Key":"in Python,","Fragments":["I"]},{"Key":"Python, I","Fragments":["realized"]},{"Key":"regex expressions","Fragments":["here"]},{"Key":"expressions here","Fragments":["as"]},{"Key":"here as","Fragments":["well.","Line","the","it"]},{"Key":"as well.","Fragments":["I","Being","That","Thanks,","I","So,","The","It","(See"]},{"Key":"like using","Fragments":["http://www.regexr.com/","regex,","passed","multiple","the"]},{"Key":"using http://www.regexr.com/","Fragments":["to"]},{"Key":"http://www.regexr.com/ to","Fragments":["create"]},{"Key":"create the","Fragments":["patterns","odd","dictionary","final","dictionary,","IRandomGenerator","range","enumeration","final","object.","first","dnaCharArray?"]},{"Key":"the patterns","Fragments":["I"]},{"Key":"patterns I","Fragments":["need."]},{"Key":"only version","Fragments":["I"]},{"Key":"version I","Fragments":["have","built","cached","believe","submit"]},{"Key":"seen with","Fragments":["bounds-checking."]},{"Key":"with bounds-checking.","Fragments":["Nicely"]},{"Key":"bounds-checking. Nicely","Fragments":["done."]},{"Key":"the comments.","Fragments":["I","If","The"]},{"Key":"comments. I","Fragments":["think","like","made"]},{"Key":"been better","Fragments":["to","to","defined","to"]},{"Key":"use an","Fragments":["extension","else","*or*","array","array","enumeration"]},{"Key":"the Int","Fragments":["class,"]},{"Key":"Int class,","Fragments":["this"]},{"Key":"class, this","Fragments":["was"]},{"Key":"mentioned by","Fragments":["someone"]},{"Key":"by someone","Fragments":["else"]},{"Key":"else in","Fragments":["a"]},{"Key":"a nitpick...","Fragments":["then"]},{"Key":"nitpick... then","Fragments":["I"]},{"Key":"do year.DividedBy(4)","Fragments":["and"]},{"Key":"year.DividedBy(4) and","Fragments":["I"]},{"Key":"reads better...","Fragments":["I"]},{"Key":"better... I","Fragments":["will"]},{"Key":"implement that","Fragments":["next."]},{"Key":"Since your","Fragments":["**if**","conditions"]},{"Key":"your **if**","Fragments":["clauses"]},{"Key":"**if** clauses","Fragments":["will"]},{"Key":"clauses will","Fragments":["return"]},{"Key":"return you","Fragments":["don't","know"]},{"Key":"the **else**.","Fragments":["These"]},{"Key":"**else**. These","Fragments":["are"]},{"Key":"These are","Fragments":["called","useful","an","very","both"]},{"Key":"are called","Fragments":["\"guard"]},{"Key":"called \"guard","Fragments":["clauses\""]},{"Key":"\"guard clauses\"","Fragments":["and"]},{"Key":"clauses\" and","Fragments":["take"]},{"Key":"and take","Fragments":["care","modulo"]},{"Key":"care of","Fragments":["all","trivial","exceptions"]},{"Key":"of all","Fragments":["the","the","multiples.","the","the","of","available","smaller","the","the","numbers","input"]},{"Key":"the special","Fragments":["cases","cases","cases","cases"]},{"Key":"bigger class","Fragments":["your"]},{"Key":"class your","Fragments":["main"]},{"Key":"your main","Fragments":["\"do","concern"]},{"Key":"main \"do","Fragments":["stuff\""]},{"Key":"\"do stuff\"","Fragments":["logic"]},{"Key":"stuff\" logic","Fragments":["would"]},{"Key":"logic would","Fragments":["be","be"]},{"Key":"last guard","Fragments":["clause"]},{"Key":"guard clause","Fragments":["and","(line","should","for","on","in","to","actually","in"]},{"Key":"clause and","Fragments":["the","simply","then"]},{"Key":"the final","Fragments":["**return**.","else.","character","version.","dictionary,","string","result","```if```."]},{"Key":"are appreciated,","Fragments":["thanks!"]},{"Key":"appreciated, thanks!","Fragments":["There"]},{"Key":"thanks! There","Fragments":["seems"]},{"Key":"There seems","Fragments":["to"]},{"Key":"be debate","Fragments":["in"]},{"Key":"debate in","Fragments":["other"]},{"Key":"other nitpicks","Fragments":["about"]},{"Key":"nitpicks about","Fragments":["adding"]},{"Key":"about adding","Fragments":["this"]},{"Key":"adding this","Fragments":["as"]},{"Key":"extension field","Fragments":["on"]},{"Key":"field on","Fragments":["int"]},{"Key":"on int","Fragments":["-"]},{"Key":"int -","Fragments":["seems"]},{"Key":"- seems","Fragments":["this"]},{"Key":"seems this","Fragments":["is"]},{"Key":"the old","Fragments":["\"utility\"","data","value,","C/C++","value.","dictionary's","\u003cscore,","point","string","Compare().","name"]},{"Key":"old \"utility\"","Fragments":["classes"]},{"Key":"\"utility\" classes","Fragments":["we"]},{"Key":"classes we","Fragments":["used"]},{"Key":"we used","Fragments":["were"]},{"Key":"used were","Fragments":["geared"]},{"Key":"were geared","Fragments":["toward."]},{"Key":"geared toward.","Fragments":["Sure"]},{"Key":"toward. Sure","Fragments":["would"]},{"Key":"Sure would","Fragments":["be"]},{"Key":"be funny","Fragments":["to"]},{"Key":"funny to","Fragments":["look"]},{"Key":"bool isLeap","Fragments":["="]},{"Key":"Oh wow,","Fragments":["so"]},{"Key":"wow, so","Fragments":["many"]},{"Key":"many braces!","Fragments":["Try"]},{"Key":"braces! Try","Fragments":["refactoring"]},{"Key":"Try refactoring","Fragments":["using"]},{"Key":"refactoring using","Fragments":["guard"]},{"Key":"using guard","Fragments":["clauses:","clauses"]},{"Key":"if (input.EndsWith(\"?\"))","Fragments":["return"]},{"Key":"(input.EndsWith(\"?\")) return","Fragments":["\"Sure.\";"]},{"Key":"the powerful","Fragments":["built-in"]},{"Key":"powerful built-in","Fragments":["string"]},{"Key":"built-in string","Fragments":["functions"]},{"Key":"string functions","Fragments":["you"]},{"Key":"functions you","Fragments":["found","round"]},{"Key":"you found","Fragments":["see"]},{"Key":"found see","Fragments":["if"]},{"Key":"end up","Fragments":["with","with","refactoring","making","storing","storing","not","with","creating","having","comparing","like","catching","using"]},{"Key":"with \u003c20","Fragments":["rows"]},{"Key":"\u003c20 rows","Fragments":["for"]},{"Key":"rows for","Fragments":["the"]},{"Key":"would refactor","Fragments":["'IsShouted'"]},{"Key":"refactor 'IsShouted'","Fragments":["though."]},{"Key":" if(expr1)","Fragments":["isShouted"]},{"Key":"if(expr1) isShouted","Fragments":["="]},{"Key":"isShouted =","Fragments":["expr2;","expr1"]},{"Key":" isShouted","Fragments":["="]},{"Key":"= expr1","Fragments":["\u0026\u0026"]},{"Key":"expr1 \u0026\u0026","Fragments":["expr2;"]},{"Key":" Like","Fragments":["above,","so:","this;","I","the","I","I","this.","the","the","them"]},{"Key":"Like above,","Fragments":["expr2"]},{"Key":"above, expr2","Fragments":["won't"]},{"Key":"expr2 won't","Fragments":["be"]},{"Key":"be evaluated","Fragments":["if"]},{"Key":"if expr2","Fragments":["=="]},{"Key":"expr2 ==","Fragments":["false."]},{"Key":"== false.","Fragments":["Also,"]},{"Key":"false. Also,","Fragments":["you"]},{"Key":"you wouldn't","Fragments":["need","have","need","want","stop","want","need","want","want","need"]},{"Key":"a variable,","Fragments":["making","so","then"]},{"Key":"variable, making","Fragments":["it"]},{"Key":" @theresa","Fragments":["OK,"]},{"Key":"@theresa OK,","Fragments":["'need'"]},{"Key":"OK, 'need'","Fragments":["was"]},{"Key":"'need' was","Fragments":["a"]},{"Key":"bit too","Fragments":["strong,","firmly.","much"]},{"Key":"too strong,","Fragments":["I"]},{"Key":"strong, I","Fragments":["agree."]},{"Key":"agree. But","Fragments":["the"]},{"Key":"But the","Fragments":["context","last","requirement"]},{"Key":"this class,","Fragments":["is","it's"]},{"Key":"class, is","Fragments":["only"]},{"Key":"only that","Fragments":["function.","I"]},{"Key":"that function.","Fragments":["And"]},{"Key":"function. And","Fragments":["a"]},{"Key":"only static","Fragments":["methods","methods,"]},{"Key":"better off","Fragments":["being","using","having","using"]},{"Key":"off being","Fragments":["static","justified"]},{"Key":"being static","Fragments":["itself."]},{"Key":"probably over","Fragments":["done"]},{"Key":"over done","Fragments":["but"]},{"Key":"done but","Fragments":["having"]},{"Key":"having them","Fragments":["is","work"]},{"Key":"habit and","Fragments":["I","preference","cause"]},{"Key":"to err","Fragments":["on","on"]},{"Key":"err on","Fragments":["the","the"]},{"Key":"of over","Fragments":["doing"]},{"Key":"over doing","Fragments":["it."]},{"Key":"using short-circuit","Fragments":["boolean"]},{"Key":"short-circuit boolean","Fragments":["logic"]},{"Key":"boolean logic","Fragments":["rather","with","to","instead"]},{"Key":"logic rather","Fragments":["than"]},{"Key":"than if","Fragments":["statements","I"]},{"Key":"statements because","Fragments":["this"]},{"Key":"because this","Fragments":["really","means","tells","and"]},{"Key":"line utility","Fragments":["function."]},{"Key":"For readability,","Fragments":["what","I'd"]},{"Key":"readability, what","Fragments":["are"]},{"Key":"what are","Fragments":["your","essential"]},{"Key":"are your","Fragments":["thoughts","thoughts?","reasons"]},{"Key":"on splitting","Fragments":["up"]},{"Key":"splitting up","Fragments":["the"]},{"Key":"very easy","Fragments":["to","to","for"]},{"Key":"to follow.","Fragments":["My","Your","Here","Using"]},{"Key":"follow. My","Fragments":["only"]},{"Key":"only criticism","Fragments":["is","I","is","is","is","is","is"]},{"Key":"criticism is","Fragments":["unused","that","that","that","that","that","that","definitely"]},{"Key":"is unused","Fragments":["`using`"]},{"Key":"unused `using`","Fragments":["imports.","statements"]},{"Key":"First exercise","Fragments":["where"]},{"Key":"exercise where","Fragments":["I"]},{"Key":"used LinQ","Fragments":["from"]},{"Key":"LinQ from","Fragments":["the"]},{"Key":"the start.","Fragments":["It's"]},{"Key":"start. It's","Fragments":["hard"]},{"Key":"hard not","Fragments":["to","to"]},{"Key":"to fall","Fragments":["in","through."]},{"Key":"fall in","Fragments":["love."]},{"Key":"Regarding efficiency","Fragments":["of"]},{"Key":"efficiency of","Fragments":["the"]},{"Key":"the query,","Fragments":["are"]},{"Key":"query, are","Fragments":["there"]},{"Key":"are there","Fragments":["any"]},{"Key":"any major","Fragments":["flaws","takeaways."]},{"Key":"major flaws","Fragments":["here?"]},{"Key":"The \"Sure.\"","Fragments":["check"]},{"Key":"\"Sure.\" check","Fragments":["passes"]},{"Key":"check passes","Fragments":["the"]},{"Key":"tests even","Fragments":["if"]},{"Key":"I remove","Fragments":["the","a","an"]},{"Key":"the sentence.HasNumbers()","Fragments":["call."]},{"Key":"think HasNumbers()","Fragments":["works"]},{"Key":"HasNumbers() works","Fragments":["properly"]},{"Key":"works properly","Fragments":["in"]},{"Key":"properly in","Fragments":["any"]},{"Key":"any case.","Fragments":["It"]},{"Key":"case. It","Fragments":["matches","works","also","might"]},{"Key":"It matches","Fragments":["on"]},{"Key":"matches on","Fragments":["\"abc123\""]},{"Key":"on \"abc123\"","Fragments":["but"]},{"Key":"\"abc123\" but","Fragments":["not"]},{"Key":"not on","Fragments":["\"123#$@!@#$\"","the","line"]},{"Key":"on \"123#$@!@#$\"","Fragments":["or"]},{"Key":"\"123#$@!@#$\" or","Fragments":["\"___-_-_123\"."]},{"Key":"or \"___-_-_123\".","Fragments":["If"]},{"Key":"\"___-_-_123\". If","Fragments":["it"]},{"Key":"it did","Fragments":["work","a","pass","take","keep","help","have"]},{"Key":"did work","Fragments":["properly"]},{"Key":"work properly","Fragments":["then"]},{"Key":"properly then","Fragments":["the"]},{"Key":"fail the","Fragments":["\"Only_numbers\"","Only_numbers","Forceful","same","gregorian"]},{"Key":"the \"Only_numbers\"","Fragments":["test."]},{"Key":"Also, I'm","Fragments":["not"]},{"Key":"not all","Fragments":["that","that","likes","versions","the","the","the"]},{"Key":"that advanced","Fragments":["with"]},{"Key":"with regular","Fragments":["expressions","expressions,"]},{"Key":"expressions but","Fragments":["I'm"]},{"Key":"I'm fairly","Fragments":["certain"]},{"Key":"fairly certain","Fragments":["using:"]},{"Key":"static Regex","Fragments":["_stringHasNumbers","_stringHasAtLeastOneLetter","WordRegex","WordRegex","it's"]},{"Key":"Regex _stringHasNumbers","Fragments":["="]},{"Key":"_stringHasNumbers =","Fragments":["new"]},{"Key":"new Regex","Fragments":["(@\"[0-9]\",","(@\"[a-zA-Z]\","]},{"Key":"Regex (@\"[0-9]\",","Fragments":["RegexOptions.Compiled);"]},{"Key":"Regex _stringHasAtLeastOneLetter","Fragments":["="]},{"Key":"_stringHasAtLeastOneLetter =","Fragments":["new"]},{"Key":"Regex (@\"[a-zA-Z]\",","Fragments":["RegexOptions.Compiled);"]},{"Key":" would","Fragments":["accomplish","achieve","get"]},{"Key":"would accomplish","Fragments":["the"]},{"Key":"accomplish the","Fragments":["same","same","same"]},{"Key":"thing and","Fragments":["is","not","break","I"]},{"Key":"you've pulled","Fragments":["the"]},{"Key":"pulled the","Fragments":["checks","conditionals","calculation"]},{"Key":"into well","Fragments":["named"]},{"Key":"named functions.","Fragments":["I"]},{"Key":"functions. I","Fragments":["should"]},{"Key":"done that.","Fragments":["It","There"]},{"Key":"It self","Fragments":["documents"]},{"Key":"self documents","Fragments":["much"]},{"Key":"documents much","Fragments":["better."]},{"Key":"entire where","Fragments":["check"]},{"Key":"where check","Fragments":["directly"]},{"Key":"check directly","Fragments":["into","in"]},{"Key":"directly into","Fragments":["Count(),","body"]},{"Key":"into Count(),","Fragments":["this"]},{"Key":"Count(), this","Fragments":["improves"]},{"Key":"this improves","Fragments":["clarity"]},{"Key":"improves clarity","Fragments":["that"]},{"Key":"clarity that","Fragments":["we","you"]},{"Key":"to count","Fragments":["the","the","distinct","was","words","sentences","them"]},{"Key":"count the","Fragments":["differences.","elements","characters","number","distinct","difference"]},{"Key":"that great","Fragments":["at"]},{"Key":"great at","Fragments":["Regex"]},{"Key":"at Regex","Fragments":["and"]},{"Key":"Regex and","Fragments":["string","rolled"]},{"Key":"and string","Fragments":["manipulation."]},{"Key":"string manipulation.","Fragments":["This"]},{"Key":"manipulation. This","Fragments":["was"]},{"Key":"could find","Fragments":["to","the"]},{"Key":"find to","Fragments":["split"]},{"Key":"split the","Fragments":["string","phrase","input","words","logic","phrase,","phrase","cleaned"]},{"Key":"string up","Fragments":["and"]},{"Key":"and keep","Fragments":["the","the"]},{"Key":"keep the","Fragments":["apostrophes.","code","like","evaluation","if","multiplesUsed","code","current","code","original","check","logic","two","code"]},{"Key":"efficient way,","Fragments":["I'm"]},{"Key":"way, I'm","Fragments":["all"]},{"Key":"I'm all","Fragments":["ears","for"]},{"Key":"I'd recommend","Fragments":["changing","using","just","using","renaming","against","against","keeping","using"]},{"Key":"recommend changing","Fragments":["your"]},{"Key":"changing your","Fragments":["regular"]},{"Key":"your regular","Fragments":["expression","expression.","expression."]},{"Key":"regular expression","Fragments":["for","to","could","so","from","would","with","stating","for.","match","look"]},{"Key":"for cleaning","Fragments":["to"]},{"Key":"cleaning to","Fragments":["[\\^a-zA-Z]."]},{"Key":"to [\\^a-zA-Z].","Fragments":["It"]},{"Key":"[\\^a-zA-Z]. It","Fragments":["is"]},{"Key":"a whitelist","Fragments":["than","of"]},{"Key":"whitelist than","Fragments":["blacklist."]},{"Key":"the clear","Fragments":["code."]},{"Key":"clear code.","Fragments":["Using"]},{"Key":"code. Using","Fragments":["methods"]},{"Key":"Using methods","Fragments":["for"]},{"Key":"rule makes","Fragments":["it"]},{"Key":"read. I","Fragments":["think","do","basically","think","willingly"]},{"Key":"an IsSilence","Fragments":["method"]},{"Key":"IsSilence method","Fragments":["that"]},{"Key":"that follows","Fragments":["the"]},{"Key":"follows the","Fragments":["same","same","way"]},{"Key":"same pattern","Fragments":["as","for","applies"]},{"Key":"pattern as","Fragments":["your"]},{"Key":"methods. It","Fragments":["would"]},{"Key":"and consistent.","Fragments":["Also"]},{"Key":"consistent. Also","Fragments":["if"]},{"Key":"Also if","Fragments":["you"]},{"Key":"you had","Fragments":["to","some","to","thought","CheckForEmpty()","to","a","some","to","multiple","one","in"]},{"Key":"use IsSilence","Fragments":["elsewhere"]},{"Key":"IsSilence elsewhere","Fragments":["and"]},{"Key":"elsewhere and","Fragments":["later"]},{"Key":"and later","Fragments":["needed"]},{"Key":"later needed","Fragments":["to"]},{"Key":"change IsSilence","Fragments":["it"]},{"Key":"IsSilence it","Fragments":["wouldn't"]},{"Key":"it wouldn't","Fragments":["require","help","work.","be","accept","let","be","be"]},{"Key":"wouldn't require","Fragments":["refactoring"]},{"Key":"require refactoring","Fragments":["out"]},{"Key":"refactoring out","Fragments":["the"]},{"Key":"the string.isNullOrEmpty","Fragments":["uses."]},{"Key":"no logging","Fragments":["I"]},{"Key":"logging I","Fragments":["feel"]},{"Key":"that multiple","Fragments":["returns","returns"]},{"Key":"returns are","Fragments":["easier","bad","great","fine."]},{"Key":"are easier","Fragments":["for"]},{"Key":"and maintain,","Fragments":["but"]},{"Key":"maintain, but","Fragments":["for"]},{"Key":"statement, so","Fragments":["I"]},{"Key":"can log","Fragments":["the"]},{"Key":"log the","Fragments":["result"]},{"Key":"call for","Fragments":["tracing.","every"]},{"Key":"Good clean","Fragments":["code"]},{"Key":"clean code","Fragments":["with"]},{"Key":"with nice","Fragments":["documentation."]},{"Key":"the brevity","Fragments":["of"]},{"Key":"brevity of","Fragments":["the"]},{"Key":"code but","Fragments":["I","line","it's","i","in"]},{"Key":"a month","Fragments":["you'll"]},{"Key":"month you'll","Fragments":["come"]},{"Key":"you'll come","Fragments":["back"]},{"Key":"and which","Fragments":["you"]},{"Key":"Use **var**","Fragments":["instead"]},{"Key":"**var** instead","Fragments":["of"]},{"Key":"KeyValuePair since","Fragments":["it"]},{"Key":"and compiler","Fragments":["friendly."]},{"Key":"The inner","Fragments":["**for**","```foreach```","class"]},{"Key":"inner **for**","Fragments":["can"]},{"Key":"**for** can","Fragments":["be"]},{"Key":"made to","Fragments":["a","the","add"]},{"Key":"var letters","Fragments":["=","=","line"]},{"Key":"letters =","Fragments":["entry.Value;","statement.Where(l"]},{"Key":"(var letter","Fragments":["in","in","in"]},{"Key":"in letters)","Fragments":["{","{"]},{"Key":" What's","Fragments":["up"]},{"Key":"the \"p_\"","Fragments":["prefix?","prefix"]},{"Key":"\"p_\" prefix?","Fragments":["Just"]},{"Key":"prefix? Just","Fragments":["\"Hey(string"]},{"Key":"Just \"Hey(string","Fragments":["statement)\""]},{"Key":"\"Hey(string statement)\"","Fragments":["is"]},{"Key":"statement)\" is","Fragments":["fine"]},{"Key":"fine and","Fragments":["more","not","is"]},{"Key":"Why use","Fragments":["a","`protected`?","a","a","floating"]},{"Key":"(line 17)","Fragments":["when"]},{"Key":"17) when","Fragments":["you"]},{"Key":"just fine","Fragments":["with","for","on","to"]},{"Key":"fine with","Fragments":["a","the","just"]},{"Key":"a guard","Fragments":["clause","clause","clause","clause"]},{"Key":"clause (line","Fragments":["14)?"]},{"Key":"(line 14)?","Fragments":["You"]},{"Key":"14)? You","Fragments":["can"]},{"Key":"pattern for","Fragments":["the"]},{"Key":"later **if**","Fragments":["and"]},{"Key":"**if** and","Fragments":["drop"]},{"Key":"and drop","Fragments":["the"]},{"Key":"drop the","Fragments":["**else**","where","ternary"]},{"Key":"the **else**","Fragments":["as"]},{"Key":"**else** as","Fragments":["well."]},{"Key":"you sorted","Fragments":["the"]},{"Key":"source string","Fragments":["in"]},{"Key":"string in","Fragments":["the","isAllUpper()?","a","the","Verses","a","and","SortChars"]},{"Key":"the constructor,","Fragments":["so","it","can","where","then","I","but","because"]},{"Key":"constructor, so","Fragments":["it"]},{"Key":"it only","Fragments":["needed","take","appears","wants","checks"]},{"Key":"only needed","Fragments":["to"]},{"Key":"done once.","Fragments":["I"]},{"Key":"once. I","Fragments":["didn't"]},{"Key":"The documentation","Fragments":["for","on","for"]},{"Key":"documentation for","Fragments":["Zip","Dictionary"]},{"Key":"for Zip","Fragments":["states"]},{"Key":"Zip states","Fragments":["that"]},{"Key":"a mismatch","Fragments":["between"]},{"Key":"mismatch between","Fragments":["enumerable","class"]},{"Key":"between enumerable","Fragments":["lengths,"]},{"Key":"enumerable lengths,","Fragments":["it"]},{"Key":"lengths, it","Fragments":["will"]},{"Key":"will terminate","Fragments":["whenever","as","the"]},{"Key":"terminate whenever","Fragments":["one"]},{"Key":"whenever one","Fragments":["enumerable"]},{"Key":"one enumerable","Fragments":["hits"]},{"Key":"enumerable hits","Fragments":["the"]},{"Key":"hits the","Fragments":["end","first"]},{"Key":"end (http://msdn.microsoft.com/en-us/library/vstudio/dd267698(v=vs.100).aspx).","Fragments":["So"]},{"Key":"(http://msdn.microsoft.com/en-us/library/vstudio/dd267698(v=vs.100).aspx). So","Fragments":["your"]},{"Key":"your entire","Fragments":["if/else"]},{"Key":"entire if/else","Fragments":["if"]},{"Key":" `year%100","Fragments":["=="]},{"Key":"`year%100 ==","Fragments":["0"]},{"Key":"\u0026\u0026 year%400","Fragments":["=="]},{"Key":"redundant since","Fragments":["it"]},{"Key":"thing as","Fragments":["`year","an","you","Predicate\u003cT\u003e```","my"]},{"Key":"as `year","Fragments":["%"]},{"Key":"Ah, very","Fragments":["good."]},{"Key":"very good.","Fragments":["Thanks.","You","You"]},{"Key":"of `using`","Fragments":["imports"]},{"Key":"`using` imports","Fragments":["that"]},{"Key":"imports that","Fragments":["you"]},{"Key":"you aren't","Fragments":["using","aware,"]},{"Key":"aren't using","Fragments":["that"]},{"Key":" @modesto","Fragments":["I"]},{"Key":"@modesto I","Fragments":["did"]},{"Key":"know you","Fragments":["could","could","could","could","have","can"]},{"Key":"Linq with","Fragments":["that","it."]},{"Key":"that syntax.","Fragments":["That"]},{"Key":"syntax. That","Fragments":["is"]},{"Key":"This exercise","Fragments":["demonstrates","just","was","seemed","was","has","seemed","was","surely"]},{"Key":"exercise demonstrates","Fragments":["why"]},{"Key":"demonstrates why","Fragments":["I"]},{"Key":"of TTD.","Fragments":["The"]},{"Key":"TTD. The","Fragments":["tests"]},{"Key":"are poor","Fragments":["and","especially","especially"]},{"Key":"poor and","Fragments":["only"]},{"Key":"only covers","Fragments":["half"]},{"Key":"covers half","Fragments":["the"]},{"Key":"half the","Fragments":["cases","alpha","alpha","alpha","fun.","lines"]},{"Key":"cases (e.g.,","Fragments":["white"]},{"Key":"(e.g., white","Fragments":["space"]},{"Key":"white space","Fragments":["in","and","issues,"]},{"Key":"space in","Fragments":["tested","the","the"]},{"Key":"in tested","Fragments":["for"]},{"Key":"tested for","Fragments":["silence","in"]},{"Key":"for silence","Fragments":["but"]},{"Key":"silence but","Fragments":["not"]},{"Key":"not in","Fragments":["questions).","order","your","the","huge","the","the","the","the","SumOfSquares...?","the","love","HashSet"]},{"Key":"code meets","Fragments":["the"]},{"Key":"meets the","Fragments":["test"]},{"Key":"test requirements","Fragments":["and"]},{"Key":"the clever","Fragments":["use","algorithm"]},{"Key":"clever use","Fragments":["of"]},{"Key":"Linq but","Fragments":["I'd"]},{"Key":"but I'd","Fragments":["like","like","like","be"]},{"Key":"I'd like","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"give the","Fragments":["test","user","invalid"]},{"Key":"test writer","Fragments":["a","is","is"]},{"Key":"writer a","Fragments":["thump"]},{"Key":"a thump","Fragments":["up-side"]},{"Key":"thump up-side","Fragments":["the"]},{"Key":"up-side the","Fragments":["head."]},{"Key":"the break-down","Fragments":["of"]},{"Key":"break-down of","Fragments":["the"]},{"Key":"the IsSilence","Fragments":["you"]},{"Key":"IsSilence you","Fragments":["could"]},{"Key":"have used","Fragments":["String.IsNullOrWhiteSpace","a","there","a","an","return","'number'","a","if-else.","a","the","generic","a"]},{"Key":" Thanks.","Fragments":["That's","I'll","I","I","Still","I'm","You"]},{"Key":"Thanks. That's","Fragments":["great"]},{"Key":"That's great","Fragments":["feedback."]},{"Key":"great feedback.","Fragments":["I'll"]},{"Key":"feedback. I'll","Fragments":["have"]},{"Key":"go at","Fragments":["implementing","it","using"]},{"Key":"at implementing","Fragments":["your"]},{"Key":"but you're","Fragments":["missing","the"]},{"Key":"you're missing","Fragments":["a","the"]},{"Key":"missing a","Fragments":["ton"]},{"Key":"of letters.","Fragments":["If","Nothing"]},{"Key":"letters. If","Fragments":["you","you"]},{"Key":"to detect","Fragments":["them","new"]},{"Key":"detect them","Fragments":["all,"]},{"Key":"them all,","Fragments":["you"]},{"Key":"all, you","Fragments":["can"]},{"Key":"use `char.IsLetter`","Fragments":["and"]},{"Key":"`char.IsLetter` and","Fragments":["`char.IsUpper`"]},{"Key":"and `char.IsUpper`","Fragments":["and"]},{"Key":"`char.IsUpper` and","Fragments":["`char.IsLower`."]},{"Key":" Exactly","Fragments":["what"]},{"Key":"Exactly what","Fragments":["I"]},{"Key":"I did.","Fragments":[":)","Although","The","I","Had","I","There","But"]},{"Key":"did. :)","Fragments":["I"]},{"Key":"modulus operator","Fragments":["for","%","is"]},{"Key":"operator for","Fragments":["checking"]},{"Key":"a value","Fragments":["is","in","of","in","in","like","by","to","once--I","from","of","of","based","and","after","be","from","greater","while","grater"]},{"Key":"by another:","Fragments":["http://msdn.microsoft.com/en-us/library/0w4e0fzs.aspx"]},{"Key":"haven't ever","Fragments":["used","seen"]},{"Key":"ever used","Fragments":["NUnit","it."]},{"Key":"NUnit before,","Fragments":["and"]},{"Key":"before, and","Fragments":["wasn't"]},{"Key":"and wasn't","Fragments":["sure"]},{"Key":"sure the","Fragments":["best","best","difference","IsAllUpper","cleanstring","output","Linq","Linq","string"]},{"Key":"allow unit","Fragments":["tests"]},{"Key":"tests on","Fragments":["the","each"]},{"Key":"the IsLeapYear","Fragments":["method","check"]},{"Key":"IsLeapYear method","Fragments":["without"]},{"Key":"method without","Fragments":["exposing"]},{"Key":"without exposing","Fragments":["it"]},{"Key":"exposing it","Fragments":["publicly."]},{"Key":" Forgot","Fragments":["to","to"]},{"Key":"Forgot to","Fragments":["mark","update"]},{"Key":"to mark","Fragments":["the","the","the","the"]},{"Key":"mark the","Fragments":["submitted","class","class","'set'","'set'","beginning"]},{"Key":"the submitted","Fragments":["function"]},{"Key":"submitted function","Fragments":["as"]},{"Key":"function as","Fragments":["static.","Key,","it"]},{"Key":"as static.","Fragments":[":-/","While"]},{"Key":" @sylvia","Fragments":["Now"]},{"Key":"@sylvia Now","Fragments":["that"]},{"Key":"Now that","Fragments":["fehays","is","we","I"]},{"Key":"that fehays","Fragments":["mentioned"]},{"Key":"fehays mentioned","Fragments":["it,"]},{"Key":"mentioned it,","Fragments":["this"]},{"Key":"will significantly","Fragments":["change"]},{"Key":"significantly change","Fragments":["how"]},{"Key":"change how","Fragments":["you'd"]},{"Key":"how you'd","Fragments":["present"]},{"Key":"you'd present","Fragments":["your"]},{"Key":"present your","Fragments":["logic"]},{"Key":"logic so","Fragments":["instead"]},{"Key":"so instead","Fragments":["of"]},{"Key":"of working","Fragments":["with"]},{"Key":"with decimals","Fragments":["and"]},{"Key":"decimals and","Fragments":["casting"]},{"Key":"and casting","Fragments":["to"]},{"Key":"casting to","Fragments":["integer"]},{"Key":"to integer","Fragments":["it"]},{"Key":"integer it","Fragments":["will"]},{"Key":"on just","Fragments":["integers."]},{"Key":"Your blocks","Fragments":["are"]},{"Key":"blocks are","Fragments":["not"]},{"Key":"not consistent.","Fragments":["You"]},{"Key":"consistent. You","Fragments":["do"]},{"Key":"You do","Fragments":["have","not","that","that"]},{"Key":"do have","Fragments":["line","a","that"]},{"Key":"have line","Fragments":["35"]},{"Key":"line 35","Fragments":["surrounded"]},{"Key":"35 surrounded","Fragments":["by"]},{"Key":"surrounded by","Fragments":["curly","a"]},{"Key":"by curly","Fragments":["braces,"]},{"Key":"curly braces,","Fragments":["but","unless","it's"]},{"Key":"braces, but","Fragments":["not"]},{"Key":"not lines","Fragments":["33"]},{"Key":"lines 33","Fragments":["and"]},{"Key":"33 and","Fragments":["40."]},{"Key":"and 40.","Fragments":["I"]},{"Key":"40. I","Fragments":["prefer"]},{"Key":"always surround","Fragments":["with","one"]},{"Key":"surround with","Fragments":["curly","brackets."]},{"Key":"with curly","Fragments":["braces,","braces"]},{"Key":"braces, unless","Fragments":["everything"]},{"Key":"unless everything","Fragments":["is"]},{"Key":"everything is","Fragments":["on","still"]},{"Key":"is on","Fragments":["the","readbility","my"]},{"Key":" Lines","Fragments":["40","7"]},{"Key":"Lines 40","Fragments":["and"]},{"Key":"40 and","Fragments":["41"]},{"Key":"and 41","Fragments":["is"]},{"Key":"41 is","Fragments":["an"]},{"Key":"an example","Fragments":["of","of","of","of","if","of","of"]},{"Key":"is important:","Fragments":["It's"]},{"Key":"important: It's","Fragments":["difficult"]},{"Key":"It's difficult","Fragments":["to"]},{"Key":"if those","Fragments":["lines","interior","inputs"]},{"Key":"those lines","Fragments":["are"]},{"Key":"lines are","Fragments":["part"]},{"Key":"same block,","Fragments":["but"]},{"Key":"block, but","Fragments":["with","quickly"]},{"Key":"with indentations","Fragments":["messed"]},{"Key":"indentations messed","Fragments":["up,"]},{"Key":"messed up,","Fragments":["or"]},{"Key":"up, or","Fragments":["if"]},{"Key":"or if","Fragments":["they","a","one","statement.","bits"]},{"Key":"are indeed","Fragments":["two"]},{"Key":"indeed two","Fragments":["different"]},{"Key":"different blocks.","Fragments":["Why"]},{"Key":"blocks. Why","Fragments":["is"]},{"Key":"this important?","Fragments":["Because"]},{"Key":"important? Because","Fragments":["every"]},{"Key":"Because every","Fragments":["time"]},{"Key":"every time","Fragments":["I","the","you","you","it's","`Count(c)`","it","```ContainsAlphaCharacters```"]},{"Key":"I skip","Fragments":["the"]},{"Key":"braces, it's","Fragments":["and"]},{"Key":"it's and","Fragments":["opportunity"]},{"Key":"and opportunity","Fragments":["for"]},{"Key":"opportunity for","Fragments":["me","a","the"]},{"Key":"a mistake,","Fragments":["and"]},{"Key":"mistake, and","Fragments":["for"]},{"Key":"for you","Fragments":["to","if","to","guidance,","it's","though,","to","to"]},{"Key":"to miss","Fragments":["it.","which"]},{"Key":"miss it.","Fragments":["And"]},{"Key":"it. And","Fragments":["then"]},{"Key":"have increased","Fragments":["our"]},{"Key":"increased our","Fragments":["chances"]},{"Key":"our chances","Fragments":["to"]},{"Key":"chances to","Fragments":["end"]},{"Key":"to end","Fragments":["up"]},{"Key":"with something","Fragments":["like","like"]},{"Key":"good. Just","Fragments":["curious"]},{"Key":"you decided","Fragments":["to"]},{"Key":"to enforce","Fragments":["a","implementation"]},{"Key":"enforce a","Fragments":["positive"]},{"Key":"a positive","Fragments":["number","number.","version"]},{"Key":"positive number","Fragments":["for"]},{"Key":"number for","Fragments":["the"]},{"Key":"year? Technically","Fragments":["I"]},{"Key":"Technically I","Fragments":["think"]},{"Key":"rules still","Fragments":["apply"]},{"Key":"still apply","Fragments":["to"]},{"Key":"apply to","Fragments":["years","a","a"]},{"Key":"to years","Fragments":["dating"]},{"Key":"years dating","Fragments":["back"]},{"Key":"dating back","Fragments":["to"]},{"Key":"to before","Fragments":["year"]},{"Key":"before year","Fragments":["0."]},{"Key":"Your logic","Fragments":["is","is"]},{"Key":"just slightly","Fragments":["off.","by"]},{"Key":"slightly off.","Fragments":["The"]},{"Key":"off. The","Fragments":["year"]},{"Key":"must *always*","Fragments":["be"]},{"Key":"*always* be","Fragments":["evenly"]},{"Key":"be evenly","Fragments":["divisible"]},{"Key":"4 in","Fragments":["order"]},{"Key":"4, then","Fragments":["there"]},{"Key":"are exceptions","Fragments":["for"]},{"Key":"exceptions for","Fragments":["when","invalid"]},{"Key":"for when","Fragments":["it's","you","to","I"]},{"Key":"when it's","Fragments":["not","used,"]},{"Key":"year. Your","Fragments":["first"]},{"Key":"Your first","Fragments":["condition","check"]},{"Key":"first condition","Fragments":["says","after","seems"]},{"Key":"condition says","Fragments":["all"]},{"Key":"says all","Fragments":["years"]},{"Key":"are evenly","Fragments":["divisible","divisible"]},{"Key":"400 are","Fragments":["a","divisible","also"]},{"Key":"Technically you","Fragments":["don't","don't"]},{"Key":"any nesting","Fragments":["at","(hint:"]},{"Key":"nesting at","Fragments":["all."]},{"Key":"all. Nothing","Fragments":["wrong"]},{"Key":"Nothing wrong","Fragments":["with","with"]},{"Key":"with what","Fragments":["you've","the","@catherine","you","I","@milton","I","would","I"]},{"Key":"what you've","Fragments":["done,","done","got"]},{"Key":"you've done,","Fragments":["but"]},{"Key":"done, but","Fragments":["if","the","you","I"]},{"Key":"a challenge","Fragments":["your"]},{"Key":"challenge your","Fragments":["logic"]},{"Key":"logic skills,","Fragments":["try"]},{"Key":"skills, try","Fragments":["doing"]},{"Key":"try doing","Fragments":["it"]},{"Key":"in 1","Fragments":["line.","line","line","linq"]},{"Key":"like simple,","Fragments":["compact"]},{"Key":"simple, compact","Fragments":["conditional"]},{"Key":"compact conditional","Fragments":["statements"]},{"Key":"statements for","Fragments":["code","a"]},{"Key":"The one-liner","Fragments":["might"]},{"Key":"one-liner might","Fragments":["be"]},{"Key":"be slightly","Fragments":["tougher","more","faster","more"]},{"Key":"slightly tougher","Fragments":["to"]},{"Key":"tougher to","Fragments":["read,","parse."]},{"Key":"read, but","Fragments":["I'm","it","to"]},{"Key":"I'm ok","Fragments":["with"]},{"Key":"it's safe","Fragments":["to","to"]},{"Key":"safe to","Fragments":["expect","skip"]},{"Key":"to expect","Fragments":["the","and"]},{"Key":"expect the","Fragments":["reader","first","`||`","program","version"]},{"Key":"the reader","Fragments":["to","does","doesn't","know","what","know","\"drill-down\""]},{"Key":"reader to","Fragments":["know"]},{"Key":"the programming","Fragments":["language"]},{"Key":"programming language","Fragments":["and"]},{"Key":"language and","Fragments":["constructs."]},{"Key":"and constructs.","Fragments":["If"]},{"Key":"constructs. If","Fragments":["he"]},{"Key":"If he","Fragments":["don't,"]},{"Key":"he don't,","Fragments":["google"]},{"Key":"don't, google","Fragments":["is"]},{"Key":"google is","Fragments":["a"]},{"Key":"few keystrokes","Fragments":["away."]},{"Key":"have pretty","Fragments":["good"]},{"Key":"good names","Fragments":["anyway,"]},{"Key":"names anyway,","Fragments":["so"]},{"Key":"anyway, so","Fragments":["it's","sorting"]},{"Key":"comments. If","Fragments":["you"]},{"Key":"need more","Fragments":["explanation,"]},{"Key":"more explanation,","Fragments":["you"]},{"Key":"explanation, you","Fragments":["can"]},{"Key":"always add","Fragments":["more","a","braces"]},{"Key":"add more","Fragments":["variables","tests","complicated","else","entries"]},{"Key":"more variables","Fragments":["and"]},{"Key":"and methods.","Fragments":["If"]},{"Key":"methods. If","Fragments":["that's"]},{"Key":"If that's","Fragments":["not"]},{"Key":"not good","Fragments":["enough,","practice.","practice"]},{"Key":"good enough,","Fragments":["a","I'm","fine."]},{"Key":"enough, a","Fragments":["better"]},{"Key":"better solution","Fragments":["(in","performance-wise.","in","than","(clearer"]},{"Key":"solution (in","Fragments":["my"]},{"Key":"(in my","Fragments":["opinion)","implementation).","opinion)","opinion).","opinion)."]},{"Key":"my opinion)","Fragments":["is","at","otherwise"]},{"Key":"opinion) is","Fragments":["to"]},{"Key":"start the","Fragments":["method","range","loop"]},{"Key":"method body","Fragments":["with"]},{"Key":"body with","Fragments":["a","`if"]},{"Key":"use `hey.EndsWith()`","Fragments":["and"]},{"Key":"`hey.EndsWith()` and","Fragments":["`string.IsNullOrWhiteSpace(hey)`"]},{"Key":"and `string.IsNullOrWhiteSpace(hey)`","Fragments":["(depending"]},{"Key":"`string.IsNullOrWhiteSpace(hey)` (depending","Fragments":["on"]},{"Key":"(depending on","Fragments":["your"]},{"Key":"your .Net","Fragments":["version)."]},{"Key":"be consistent","Fragments":["with","as","you"]},{"Key":"your braces.","Fragments":["You've"]},{"Key":"braces. You've","Fragments":["got"]},{"Key":"You've got","Fragments":["them","a"]},{"Key":"got them","Fragments":["on"]},{"Key":"them on","Fragments":["everything","built-in"]},{"Key":"on everything","Fragments":["but"]},{"Key":"everything but","Fragments":["the"]},{"Key":"final else.","Fragments":["I"]},{"Key":"else. I","Fragments":["personally"]},{"Key":"personally favor","Fragments":["always","writing"]},{"Key":"favor always","Fragments":["including"]},{"Key":"always including","Fragments":["braces"]},{"Key":"including braces","Fragments":["unless"]},{"Key":"braces unless","Fragments":["you"]},{"Key":"if and","Fragments":["statement","else","return"]},{"Key":"and statement","Fragments":["on"]},{"Key":"Great advice,","Fragments":["thanks"]},{"Key":"advice, thanks","Fragments":["guys!"]},{"Key":"This codes","Fragments":["seems"]},{"Key":"codes seems","Fragments":["overly"]},{"Key":"seems overly","Fragments":["complex","complex"]},{"Key":"overly complex","Fragments":["for","for","and"]},{"Key":"complex for","Fragments":["such","what"]},{"Key":"problem. You","Fragments":["can"]},{"Key":"with 3","Fragments":["lines"]},{"Key":"3 lines","Fragments":["of","of","of"]},{"Key":"code clearly,","Fragments":["probably"]},{"Key":"clearly, probably","Fragments":["less"]},{"Key":"probably less","Fragments":["if","readable"]},{"Key":"less if","Fragments":["it"]},{"Key":" Specific","Fragments":["to"]},{"Key":"Specific to","Fragments":["your"]},{"Key":"code, the","Fragments":["second","unit","NucleotideCounts"]},{"Key":"needed because","Fragments":["the","the","`MatchCollection`"]},{"Key":"inner if","Fragments":["catches"]},{"Key":"if catches","Fragments":["the"]},{"Key":"catches the","Fragments":["outer","\"unless"]},{"Key":"the outer","Fragments":["if","if","if-statement","foreach","'if'"]},{"Key":"outer if","Fragments":["conditions.","are"]},{"Key":"if conditions.","Fragments":["If"]},{"Key":"conditions. If","Fragments":["`yr"]},{"Key":"If `yr","Fragments":["%"]},{"Key":"`yr %","Fragments":["400","400"]},{"Key":"0` then","Fragments":["the"]},{"Key":"two conditions","Fragments":["of","that"]},{"Key":"conditions of","Fragments":["the","letter,"]},{"Key":"if are","Fragments":["always"]},{"Key":"are always","Fragments":["true.","true.","bad,","welcome!","well"]},{"Key":"should also","Fragments":["use","change","make","happen"]},{"Key":"also use","Fragments":["an","it","input.EndsWith(\"?\")","a","AddSeconds()","`Predicate\u003cT\u003e`,"]},{"Key":"Lastly, you","Fragments":["could","could"]},{"Key":"do everything","Fragments":["with","in","I","in","in"]},{"Key":"everything with","Fragments":["your"]},{"Key":"first if","Fragments":["by","should","in","instead,","statement","statement."]},{"Key":"if by","Fragments":["just"]},{"Key":"the condition","Fragments":["of","in","was","directly","is","evaluates","as","evaluated","of","isn't","\"evenly","just","checks"]},{"Key":"condition of","Fragments":["the","a"]},{"Key":"the `yr","Fragments":["%"]},{"Key":"0` as","Fragments":["an"]},{"Key":"an or","Fragments":["to"]},{"Key":" @deshaun","Fragments":["The"]},{"Key":"@deshaun The","Fragments":["\"p_\""]},{"Key":"The \"p_\"","Fragments":["prefix"]},{"Key":"\"p_\" prefix","Fragments":["is","-"]},{"Key":"prefix is","Fragments":["a"]},{"Key":"a naming","Fragments":["convention","convention"]},{"Key":"convention that's","Fragments":["habitual"]},{"Key":"that's habitual","Fragments":["for"]},{"Key":"habitual for","Fragments":["me,"]},{"Key":"for me,","Fragments":["largely","this","but","not"]},{"Key":"me, largely","Fragments":["because"]},{"Key":"largely because","Fragments":["it's"]},{"Key":"because it's","Fragments":["enforced","so","just","more","almost","been","not","helping"]},{"Key":"it's enforced","Fragments":["at"]},{"Key":"enforced at","Fragments":["work.."]},{"Key":"at work..","Fragments":["I"]},{"Key":"work.. I","Fragments":["would"]},{"Key":"would personally","Fragments":["argue","not","eliminate"]},{"Key":"personally argue","Fragments":["that"]},{"Key":"that prefixes","Fragments":["can"]},{"Key":"prefixes can","Fragments":["help"]},{"Key":"help distinguish","Fragments":["parameters,"]},{"Key":"distinguish parameters,","Fragments":["class"]},{"Key":"parameters, class","Fragments":["members"]},{"Key":"class members","Fragments":["and","with"]},{"Key":"members and","Fragments":["local"]},{"Key":"and local","Fragments":["variables"]},{"Key":"local variables","Fragments":["et","(\u003cb\u003enewWord\u003c/b\u003e)","that"]},{"Key":"variables et","Fragments":["al,"]},{"Key":"et al,","Fragments":["but"]},{"Key":"al, but","Fragments":["in"]},{"Key":"any case","Fragments":["coding"]},{"Key":"case coding","Fragments":["style"]},{"Key":"coding style","Fragments":["preferences"]},{"Key":"style preferences","Fragments":["are"]},{"Key":"preferences are","Fragments":["just"]},{"Key":"just that","Fragments":["-","in","all"]},{"Key":"that -","Fragments":["preferences."]},{"Key":"Same thing","Fragments":["with","if"]},{"Key":"thing with","Fragments":["the"]},{"Key":"the guard","Fragments":["clause,","clause","clause"]},{"Key":"guard clause,","Fragments":["really"]},{"Key":"clause, really","Fragments":["-"]},{"Key":"really -","Fragments":["habitually,"]},{"Key":"- habitually,","Fragments":["I"]},{"Key":"habitually, I","Fragments":["use"]},{"Key":"use them","Fragments":["to","when","(which","in","I","properly","in","in"]},{"Key":"of trivial","Fragments":["checks"]},{"Key":"trivial checks","Fragments":["like"]},{"Key":"like null","Fragments":["or"]},{"Key":"or white","Fragments":["space"]},{"Key":"space and","Fragments":["go","it"]},{"Key":"and go","Fragments":["from"]},{"Key":"go from","Fragments":["there."]},{"Key":"didn't see","Fragments":["anything","a","a","the"]},{"Key":"see anything","Fragments":["on","that"]},{"Key":"anything on","Fragments":["the"]},{"Key":"the site","Fragments":["regarding"]},{"Key":"site regarding","Fragments":["coding"]},{"Key":"regarding coding","Fragments":["conventions"]},{"Key":"for these","Fragments":["exercises","simple","strings."]},{"Key":"these exercises","Fragments":["-","are","and","as","(exercisms?).","*could*","include...","and"]},{"Key":"exercises -","Fragments":["did"]},{"Key":"- did","Fragments":["I"]},{"Key":"I miss","Fragments":["something?","that..."]},{"Key":"Any extension","Fragments":["method."]},{"Key":"makes that","Fragments":["check"]},{"Key":"that check","Fragments":["very","would","to"]},{"Key":"check very","Fragments":["clear."]},{"Key":"more readable,","Fragments":["you","but","but","which","per","you","though."]},{"Key":"readable, you","Fragments":["might","could"]},{"Key":"break your","Fragments":["three","code."]},{"Key":"your three","Fragments":["ifs","schedule","\"if\""]},{"Key":"three ifs","Fragments":["out","should,"]},{"Key":"ifs out","Fragments":["to"]},{"Key":"to methods","Fragments":["like"]},{"Key":"like IsYelling","Fragments":["or"]},{"Key":"IsYelling or","Fragments":["IsQuestion."]},{"Key":"The `year%4","Fragments":["=="]},{"Key":"`year%4 ==","Fragments":["0"]},{"Key":"year%100 ==","Fragments":["0`","0","0;"]},{"Key":"0` in","Fragments":["the","`IsDivisibleBy`"]},{"Key":"first block","Fragments":["is"]},{"Key":"block is","Fragments":["redundant."]},{"Key":"redundant. If","Fragments":["`year%400"]},{"Key":"If `year%400","Fragments":["=="]},{"Key":"`year%400 ==","Fragments":["0`"]},{"Key":"true, then","Fragments":["the"]},{"Key":"The compound","Fragments":["conditional"]},{"Key":"compound conditional","Fragments":["here"]},{"Key":"conditional here","Fragments":["takes"]},{"Key":"here takes","Fragments":["a"]},{"Key":"a while","Fragments":["to","I","to","true","since","I","to","loop.","and","to"]},{"Key":"while to","Fragments":["evaluate.","realize","shake","figure"]},{"Key":"to evaluate.","Fragments":["For"]},{"Key":"evaluate. For","Fragments":["a"]},{"Key":"while I","Fragments":["was","still","dislike","know","just"]},{"Key":"was wondering","Fragments":["if","how","about"]},{"Key":"wondering if","Fragments":["there","there","there","your"]},{"Key":"there might","Fragments":["be","be"]},{"Key":"short circuit","Fragments":["evaluation","will","evaluation.","operators","evaluation.","evaluation.","behavior"]},{"Key":"circuit evaluation","Fragments":["condition"]},{"Key":"evaluation condition","Fragments":["that"]},{"Key":"condition that","Fragments":["would"]},{"Key":"would cause","Fragments":["an","it","it","me","multiple","the"]},{"Key":"cause an","Fragments":["inaccurate"]},{"Key":"an inaccurate","Fragments":["result."]},{"Key":"inaccurate result.","Fragments":["I'm"]},{"Key":"result. I'm","Fragments":["new"]},{"Key":"new though","Fragments":["so"]},{"Key":"though so","Fragments":["take","thank","I"]},{"Key":"so take","Fragments":["it"]},{"Key":"a grain","Fragments":["of"]},{"Key":"grain of","Fragments":["salt"]},{"Key":"of salt","Fragments":[":-D"]},{"Key":"is good,","Fragments":["but","a","it"]},{"Key":"good, but","Fragments":["if","only","is","maybe","I","you"]},{"Key":"return immediately,","Fragments":["you"]},{"Key":"immediately, you","Fragments":["could"]},{"Key":"in 3","Fragments":["lines."]},{"Key":"3 lines.","Fragments":["For"]},{"Key":"lines. For","Fragments":["example,"]},{"Key":"% 400)","Fragments":["return","==","==","=="]},{"Key":"You shouldn't","Fragments":["use","need"]},{"Key":"shouldn't use","Fragments":["a"]},{"Key":"public property","Fragments":["to"]},{"Key":"to hold","Fragments":["your","already","two","the","output","the","ids?"]},{"Key":"hold your","Fragments":["value."]},{"Key":"your value.","Fragments":["It"]},{"Key":"value. It","Fragments":["isn't","makes"]},{"Key":"It isn't","Fragments":["thread","the","extremely","as"]},{"Key":"isn't thread","Fragments":["safe,","safe"]},{"Key":"thread safe,","Fragments":["and"]},{"Key":"safe, and","Fragments":["it's"]},{"Key":"it's value","Fragments":["depends"]},{"Key":"value depends","Fragments":["on"]},{"Key":"called. If","Fragments":["you","you"]},{"Key":"the method,","Fragments":["just","you'd","leap","one","making"]},{"Key":"method, just","Fragments":["use"]},{"Key":"is it.","Fragments":["I"]},{"Key":"I stuck","Fragments":["most","with"]},{"Key":"stuck most","Fragments":["if"]},{"Key":"most if","Fragments":["the"]},{"Key":"a check","Fragments":["to","for","for","for","for","for","anyway","for","for","that"]},{"Key":"four to","Fragments":["prevent"]},{"Key":"to prevent","Fragments":["needless","this,","people","the","additional","mistakes.","future","duplicates;","that?","setting","that.","any","it","any","roster"]},{"Key":"prevent needless","Fragments":["calculations"]},{"Key":"needless calculations","Fragments":["from","for"]},{"Key":"calculations from","Fragments":["being"]},{"Key":"from being","Fragments":["run,","modified","called,","recalcualted","set"]},{"Key":"being run,","Fragments":["I"]},{"Key":"run, I","Fragments":["also"]},{"Key":"also decided","Fragments":["to","to"]},{"Key":"to not","Fragments":["bother","use","force","be","use","use","want","call","find","worry","require","start","have","use","be"]},{"Key":"bother storing","Fragments":["variables"]},{"Key":"storing variables","Fragments":["since"]},{"Key":"variables since","Fragments":["it"]},{"Key":"seemed like","Fragments":["extra","a","that","the","such","the","instantiating","a","a","the"]},{"Key":"like extra","Fragments":["lines"]},{"Key":"extra lines","Fragments":["that"]},{"Key":"lines that","Fragments":["weren't"]},{"Key":"that weren't","Fragments":["really","the"]},{"Key":"weren't really","Fragments":["needed."]},{"Key":"really needed.","Fragments":["I","MSDN"]},{"Key":"needed. I","Fragments":["like"]},{"Key":"like keeping","Fragments":["the"]},{"Key":"keeping the","Fragments":["one","Hey","seconds"]},{"Key":"one fourCheck","Fragments":["variable"]},{"Key":"fourCheck variable","Fragments":["though"]},{"Key":"variable though","Fragments":["just"]},{"Key":"though just","Fragments":["for"]},{"Key":"just for","Fragments":["purely","fun","extra","clarity.","personal","the","future","2","this","the","readability.","three","your","the"]},{"Key":"for purely","Fragments":["aesthetic"]},{"Key":"purely aesthetic","Fragments":["reasons:"]},{"Key":"aesthetic reasons:","Fragments":["I"]},{"Key":"reasons: I","Fragments":["like"]},{"Key":"like having","Fragments":["it","the"]},{"Key":"as sort","Fragments":["of"]},{"Key":"a mental","Fragments":["navigation","shift."]},{"Key":"mental navigation","Fragments":["marker."]},{"Key":"navigation marker.","Fragments":["I"]},{"Key":"marker. I","Fragments":["put"]},{"Key":"400 year","Fragments":["check","check."]},{"Key":"check first","Fragments":["just"]},{"Key":"first just","Fragments":["to"]},{"Key":"eliminate more","Fragments":["potential"]},{"Key":"more potential","Fragments":["needless"]},{"Key":"potential needless","Fragments":["calculations"]},{"Key":"for if","Fragments":["something","an","letters"]},{"Key":"something meets","Fragments":["that"]},{"Key":"meets that","Fragments":["criteria."]},{"Key":"that criteria.","Fragments":["Thoughts?"]},{"Key":"Your solution","Fragments":["looks","looks","looks","is","assumes","is"]},{"Key":"solution looks","Fragments":["good,","good,","good."]},{"Key":"looks good,","Fragments":["and","and","but","though"]},{"Key":"good, and","Fragments":["it","it"]},{"Key":"the standard","Fragments":["ways","ways","way","and","ways"]},{"Key":"standard ways","Fragments":["to","to","to"]},{"Key":"do it.","Fragments":["Other","Other","I","I","I"]},{"Key":"it. Other","Fragments":["implementations","implementations"]},{"Key":"Other implementations","Fragments":["include:","include:"]},{"Key":"Using ternary","Fragments":["operators"]},{"Key":"ternary operators","Fragments":["in","without","as"]},{"Key":"operators in","Fragments":["place","this"]},{"Key":"in place","Fragments":["of","of","of","rather","of","I'd"]},{"Key":"place of","Fragments":["the","modulus","modulus","the"]},{"Key":"2. Compressing","Fragments":["it","it"]},{"Key":"Compressing it","Fragments":["into","into"]},{"Key":"one compound","Fragments":["boolean","boolean"]},{"Key":"compound boolean","Fragments":["expression","expression"]},{"Key":"expression and","Fragments":["returning","returning","ternary"]},{"Key":"and returning","Fragments":["the","the","a","the"]},{"Key":"3. Creating","Fragments":["a","a"]},{"Key":"Creating a","Fragments":["divisibleBy","divisibleBy","string","wrapper"]},{"Key":"a divisibleBy","Fragments":["helper","helper"]},{"Key":"divisibleBy helper","Fragments":["and","and","would"]},{"Key":"helper and","Fragments":["using","using"]},{"Key":"of modulus","Fragments":["expressions","expressions"]},{"Key":"modulus expressions","Fragments":["from","from","into"]},{"Key":"expressions from","Fragments":["#2","#2"]},{"Key":"from #2","Fragments":["(or","(or"]},{"Key":"#2 (or","Fragments":["#1","#1"]},{"Key":"(or #1","Fragments":["technically).","technically)."]},{"Key":"personally chose","Fragments":["to","to"]},{"Key":"with #3","Fragments":["because","because"]},{"Key":"#3 because","Fragments":["I","I"]},{"Key":"thought it","Fragments":["would","would","was","was","best","was","would.","would","was","would","was","was","would","would","through","should","had","was"]},{"Key":"and expressive","Fragments":["for","for","enough","as"]},{"Key":"expressive for","Fragments":["anyone","anyone"]},{"Key":"for anyone","Fragments":["else","else","that","who"]},{"Key":"anyone else","Fragments":["that","that"]},{"Key":"else that","Fragments":["might","might","uses"]},{"Key":"maintain the","Fragments":["code.","code.","dictionary"]},{"Key":" Trade-off","Fragments":["was"]},{"Key":"Trade-off was","Fragments":["using"]},{"Key":"was using","Fragments":["an","UInt32","`string.Join`","a"]},{"Key":"of rules","Fragments":["vs.","that"]},{"Key":"rules vs.","Fragments":["a"]},{"Key":"vs. a","Fragments":["method(s)"]},{"Key":"a method(s)","Fragments":["that"]},{"Key":"method(s) that","Fragments":["contained"]},{"Key":"that contained","Fragments":["the","a"]},{"Key":"contained the","Fragments":["rules"]},{"Key":"rules and","Fragments":["execution"]},{"Key":"and execution","Fragments":["steps."]},{"Key":"execution steps.","Fragments":["In"]},{"Key":"steps. In","Fragments":["the"]},{"Key":"end I","Fragments":["enjoy","could"]},{"Key":"I enjoy","Fragments":["the","taking"]},{"Key":"enjoy the","Fragments":["simple"]},{"Key":"simple nature","Fragments":["of"]},{"Key":"been told","Fragments":["that"]},{"Key":"told that","Fragments":["it's"]},{"Key":"it's good","Fragments":["practice","practice","to","practice","practice","to"]},{"Key":"to limit","Fragments":["methods","looping"]},{"Key":"limit methods","Fragments":["to"]},{"Key":"a single-entry","Fragments":["point,"]},{"Key":"single-entry point,","Fragments":["single-exit"]},{"Key":"point, single-exit","Fragments":["point"]},{"Key":"single-exit point","Fragments":["to","law."]},{"Key":"avoid \"spaghetti","Fragments":["code.\""]},{"Key":"\"spaghetti code.\"","Fragments":["Looks"]},{"Key":"code.\" Looks","Fragments":["good"]},{"Key":"good otherwise","Fragments":["though!"]},{"Key":"1. Expanding","Fragments":["the"]},{"Key":"Expanding the","Fragments":["ternary"]},{"Key":"ternary into","Fragments":["separate"]},{"Key":"code. Or","Fragments":["even"]},{"Key":"Or even","Fragments":["a","better"]},{"Key":"even a","Fragments":["beginner","one-line","single","small"]},{"Key":"a beginner","Fragments":["that","level"]},{"Key":"beginner that","Fragments":["was"]},{"Key":"was looking","Fragments":["at","at","for.","for.No"]},{"Key":"at code","Fragments":["for"]},{"Key":"I minimized","Fragments":["this"]},{"Key":"minimized this","Fragments":["to"]},{"Key":"point where","Fragments":["I","+,","I"]},{"Key":"feel comfortable.","Fragments":["I"]},{"Key":"comfortable. I","Fragments":["generally"]},{"Key":"generally don't","Fragments":["like","like"]},{"Key":"like shorthand","Fragments":["if"]},{"Key":"shorthand if","Fragments":["else"]},{"Key":"else statements,","Fragments":["think"]},{"Key":"statements, think","Fragments":["they're"]},{"Key":"think they're","Fragments":["hard","ok,"]},{"Key":"they're hard","Fragments":["to"]},{"Key":"at times","Fragments":["even",":?)"]},{"Key":"times even","Fragments":["if"]},{"Key":"you're looking","Fragments":["at.","for"]},{"Key":" Agreed","Fragments":["that"]},{"Key":"Agreed that","Fragments":["the"]},{"Key":"too much.","Fragments":["Why?","And"]},{"Key":"much. Why?","Fragments":["Because"]},{"Key":"Why? Because","Fragments":["it's"]},{"Key":"Because it's","Fragments":["very"]},{"Key":"for comments","Fragments":["that","on"]},{"Key":"just describe","Fragments":["what"]},{"Key":"describe what","Fragments":["the","it"]},{"Key":"doing to","Fragments":["get"]},{"Key":"get out","Fragments":["of","of","of","of","of","of"]},{"Key":"of sync","Fragments":["with","with","easily."]},{"Key":"sync with","Fragments":["what","the"]},{"Key":"One way","Fragments":["around","would","is"]},{"Key":"way around","Fragments":["this"]},{"Key":"around this","Fragments":["is"]},{"Key":"write more","Fragments":["expressive"]},{"Key":"and descriptive","Fragments":["code"]},{"Key":"descriptive code","Fragments":["(i.e."]},{"Key":"code (i.e.","Fragments":["\"self-documenting\""]},{"Key":"(i.e. \"self-documenting\"","Fragments":["code)."]},{"Key":"\"self-documenting\" code).","Fragments":["To"]},{"Key":"code). To","Fragments":["help"]},{"Key":"help make","Fragments":["your","code","this","it","it"]},{"Key":"more self-documenting,","Fragments":["consider"]},{"Key":"self-documenting, consider","Fragments":["extracting"]},{"Key":"consider extracting","Fragments":["those","the","that"]},{"Key":"extracting those","Fragments":["modulus"]},{"Key":"those modulus","Fragments":["expressions,"]},{"Key":"modulus expressions,","Fragments":["whose"]},{"Key":"expressions, whose","Fragments":["functionality"]},{"Key":"whose functionality","Fragments":["you're"]},{"Key":"functionality you're","Fragments":["just"]},{"Key":"you're just","Fragments":["describing","trying"]},{"Key":"just describing","Fragments":["in"]},{"Key":"describing in","Fragments":["comments,"]},{"Key":"in comments,","Fragments":["to"]},{"Key":"comments, to","Fragments":["a"]},{"Key":"a self-evident","Fragments":["name"]},{"Key":"self-evident name","Fragments":["(e.g."]},{"Key":"name (e.g.","Fragments":["`divisibleBy(value,"]},{"Key":"(e.g. `divisibleBy(value,","Fragments":["divisor)`).","divisor)`)"]},{"Key":"`divisibleBy(value, divisor)`).","Fragments":["That"]},{"Key":"divisor)`). That","Fragments":["way"]},{"Key":"way it's","Fragments":["very","written","checking","written"]},{"Key":"clear what's","Fragments":["going"]},{"Key":"describe what's","Fragments":["happening"]},{"Key":"what's happening","Fragments":["in","more"]},{"Key":"happening in","Fragments":["the"]},{"Key":"don't worry","Fragments":["too"]},{"Key":"worry too","Fragments":["much"]},{"Key":"about potential","Fragments":["negative"]},{"Key":"potential negative","Fragments":["performance"]},{"Key":"negative performance","Fragments":["impacts"]},{"Key":"performance impacts","Fragments":["caused"]},{"Key":"impacts caused","Fragments":["by"]},{"Key":"function calls.","Fragments":["The"]},{"Key":"calls. The","Fragments":["compiler"]},{"Key":"The compiler","Fragments":["is","works"]},{"Key":"to optimize","Fragments":["them","storage.","for","the"]},{"Key":"optimize them","Fragments":["away"]},{"Key":"them away","Fragments":["for"]},{"Key":"away for","Fragments":["you.","the","a"]},{"Key":"suppose it","Fragments":["was","would","would","depends"]},{"Key":"was habit","Fragments":["to"]},{"Key":"use else-if.","Fragments":["I'll"]},{"Key":"else-if. I'll","Fragments":["keep"]},{"Key":"I'll keep","Fragments":["that","an"]},{"Key":"keep that","Fragments":["in","consistent."]},{"Key":"in mind","Fragments":["going","I",":)"]},{"Key":"mind going","Fragments":["forward"]},{"Key":" was","Fragments":["experimenting"]},{"Key":"was experimenting","Fragments":["with"]},{"Key":"experimenting with","Fragments":["writing","Linq"]},{"Key":"with writing","Fragments":["partial"]},{"Key":"writing partial","Fragments":["lines"]},{"Key":"partial lines","Fragments":["in"]},{"Key":"lines in","Fragments":["different","the"]},{"Key":"in different","Fragments":["parts","scenarios?","ways","submissions,"]},{"Key":"different parts","Fragments":["of"]},{"Key":"parts of","Fragments":["logic,","it,","OfDna()"]},{"Key":"of logic,","Fragments":["hence","keeping"]},{"Key":"logic, hence","Fragments":["usage"]},{"Key":"hence usage","Fragments":["of"]},{"Key":"of Write","Fragments":["until"]},{"Key":"Write until","Fragments":["WriteLine"]},{"Key":"until WriteLine","Fragments":["when"]},{"Key":"WriteLine when","Fragments":["final"]},{"Key":"when final","Fragments":["decision"]},{"Key":"final decision","Fragments":["is"]},{"Key":"decision is","Fragments":["made."]},{"Key":"So, using","Fragments":["ReadOnlyDictionary"]},{"Key":"using ReadOnlyDictionary","Fragments":["prevents"]},{"Key":"ReadOnlyDictionary prevents","Fragments":["direct"]},{"Key":"prevents direct","Fragments":["mutation"]},{"Key":"direct mutation","Fragments":["of"]},{"Key":"mutation of","Fragments":["the","an"]},{"Key":"the directory,","Fragments":["but"]},{"Key":"directory, but","Fragments":["the"]},{"Key":"the lists","Fragments":["can","that","were","or"]},{"Key":"lists can","Fragments":["be"]},{"Key":"be altered","Fragments":["anyway."]},{"Key":"altered anyway.","Fragments":["In"]},{"Key":"anyway. In","Fragments":["the"]},{"Key":"tests they","Fragments":["are"]},{"Key":"are expected","Fragments":["to"]},{"Key":"be of","Fragments":["type","equal"]},{"Key":"type List\u003cstring\u003e,","Fragments":["so"]},{"Key":"List\u003cstring\u003e, so","Fragments":["I"]},{"Key":"change that","Fragments":["type","in"]},{"Key":"that type","Fragments":["there"]},{"Key":"type there","Fragments":["to"]},{"Key":"prevent this,","Fragments":["right?"]},{"Key":" @stephania","Fragments":["Thanks"]},{"Key":"@stephania Thanks","Fragments":["for"]},{"Key":"the input.","Fragments":["I","I","Maybe"]},{"Key":"originally wrote","Fragments":["it","everything","this","a"]},{"Key":"wrote it","Fragments":["without","is","this","in"]},{"Key":"without the","Fragments":["helper","bonus.","`if`.","ternary","need","opportunity","time.","addition","type"]},{"Key":"the helper","Fragments":["function","function,","methods?"]},{"Key":"helper function","Fragments":["(i.e.","(e.g."]},{"Key":"function (i.e.","Fragments":["just"]},{"Key":"(i.e. just","Fragments":["using"]},{"Key":"inline modulus","Fragments":["expressions)."]},{"Key":"modulus expressions).","Fragments":["However,"]},{"Key":"expressions). However,","Fragments":["I"]},{"Key":"was more","Fragments":["readable","readable","efficient","concerned","an","efficient"]},{"Key":"the long","Fragments":["run","run.","lines","run."]},{"Key":"long run","Fragments":["to"]},{"Key":"run to","Fragments":["use","the"]},{"Key":"helper function,","Fragments":["and"]},{"Key":"and presumably","Fragments":["the"]},{"Key":"presumably the","Fragments":["compiler"]},{"Key":"compiler will","Fragments":["optimize"]},{"Key":"optimize those","Fragments":["function"]},{"Key":"those function","Fragments":["calls"]},{"Key":"function calls","Fragments":["out","on","may","("]},{"Key":"calls out","Fragments":["anyway."]},{"Key":"It's good","Fragments":["to"]},{"Key":"hear that","Fragments":["you"]},{"Key":"you recognize","Fragments":["the"]},{"Key":"recognize the","Fragments":["code"]},{"Key":"code can","Fragments":["be","be","still","be"]},{"Key":"condensed and","Fragments":["that"]},{"Key":"you've justified","Fragments":["why"]},{"Key":"justified why","Fragments":["you"]},{"Key":"you haven't","Fragments":["chosen","returned","really","had"]},{"Key":"haven't chosen","Fragments":["to"]},{"Key":"chosen to","Fragments":["condense"]},{"Key":"condense it.","Fragments":["However,"]},{"Key":"it. However,","Fragments":["I"]},{"Key":"there may","Fragments":["be","be","be"]},{"Key":"to partially","Fragments":["condense"]},{"Key":"partially condense","Fragments":["it"]},{"Key":"condense it","Fragments":["and","down"]},{"Key":"still preserve","Fragments":["the"]},{"Key":"preserve the","Fragments":["clarity"]},{"Key":"the clarity","Fragments":["that","was"]},{"Key":"you desire.","Fragments":["Namely,"]},{"Key":"desire. Namely,","Fragments":["you"]},{"Key":"Namely, you","Fragments":["can"]},{"Key":"outer if-statement","Fragments":["and"]},{"Key":"if-statement and","Fragments":["re-order"]},{"Key":"and re-order","Fragments":["the"]},{"Key":"re-order the","Fragments":["conditionals"]},{"Key":"conditionals so","Fragments":["that"]},{"Key":"nesting (hint:","Fragments":["if"]},{"Key":"(hint: if","Fragments":["year"]},{"Key":"400, then","Fragments":["it's","on","it"]},{"Key":"also consider","Fragments":["extracting","a"]},{"Key":"a generic","Fragments":["helper","null","loop","sort","id","type","method,"]},{"Key":"generic helper","Fragments":["function"]},{"Key":"function (e.g.","Fragments":["`divisibleBy(value,"]},{"Key":"`divisibleBy(value, divisor)`)","Fragments":["for"]},{"Key":"divisor)`) for","Fragments":["added"]},{"Key":"for added","Fragments":["clarity."]},{"Key":"how few","Fragments":["lines"]},{"Key":"code this","Fragments":["uses."]},{"Key":"this uses.","Fragments":["You"]},{"Key":"uses. You","Fragments":["also"]},{"Key":"You also","Fragments":["chose","don't"]},{"Key":"also chose","Fragments":["to"]},{"Key":"use nice,","Fragments":["simple"]},{"Key":"nice, simple","Fragments":["methods"]},{"Key":"simple methods","Fragments":["instead","are"]},{"Key":"methods instead","Fragments":["of","then","of"]},{"Key":"of regex","Fragments":["which"]},{"Key":"regex which","Fragments":["makes"]},{"Key":"things easy","Fragments":["to"]},{"Key":"and has","Fragments":["the","portability."]},{"Key":"has the","Fragments":["added","exact","right","value","same","best","same","largest","potential"]},{"Key":"the added","Fragments":["bonus","couple","benefit"]},{"Key":"added bonus","Fragments":["of"]},{"Key":"bonus of","Fragments":["being"]},{"Key":" @chadrick","Fragments":["Ah"]},{"Key":"@chadrick Ah","Fragments":["true."]},{"Key":"Ah true.","Fragments":["I"]},{"Key":"guess I'll","Fragments":["have","follow"]},{"Key":"give a","Fragments":["little"]},{"Key":"little on","Fragments":["that","these:"]},{"Key":"that now.","Fragments":[":)"]},{"Key":"should initially","Fragments":["check"]},{"Key":"initially check","Fragments":["if"]},{"Key":"the phrase","Fragments":["is","is","ends","into","using","-","outright.","looking"]},{"Key":"is empty/null/whitespace","Fragments":["because"]},{"Key":"empty/null/whitespace because","Fragments":["there's"]},{"Key":"because there's","Fragments":["only"]},{"Key":"there's only","Fragments":["one"]},{"Key":"possible return","Fragments":["result"]},{"Key":"return result","Fragments":["for","of"]},{"Key":"result for","Fragments":["it.","a"]},{"Key":"also suggest","Fragments":["using","bailing","that"]},{"Key":"the IsNullOrWhiteSpace","Fragments":["method"]},{"Key":"IsNullOrWhiteSpace method","Fragments":["instead"]},{"Key":"method instead","Fragments":["of","of","for"]},{"Key":" \u003e\u003e","Fragments":["if","if","if"]},{"Key":"\u003e\u003e if","Fragments":["(String.IsNullOrWhiteSpace(phrase))","(phrase.Equals(phrase.ToUpper())","(phrase.EndsWith(\"?\"))"]},{"Key":"The next","Fragments":["thing","condition","version","most","most","version"]},{"Key":"next thing","Fragments":["to"]},{"Key":"is order","Fragments":["of"]},{"Key":"of conditions.","Fragments":["Since"]},{"Key":"conditions. Since","Fragments":["the"]},{"Key":"Since the","Fragments":["\"yell\"","test","test","conditionals","run","return"]},{"Key":"the \"yell\"","Fragments":["condition"]},{"Key":"\"yell\" condition","Fragments":["can"]},{"Key":"condition can","Fragments":["be","only","also"]},{"Key":"a question,","Fragments":["we"]},{"Key":"question, we","Fragments":["can't"]},{"Key":"we can't","Fragments":["check","submit"]},{"Key":"can't check","Fragments":["for"]},{"Key":"for \"question\"","Fragments":["before"]},{"Key":"\"question\" before","Fragments":["\"yell\"."]},{"Key":"before \"yell\".","Fragments":["So"]},{"Key":"\"yell\". So","Fragments":["your"]},{"Key":"your next","Fragments":["conditional"]},{"Key":"next conditional","Fragments":["should"]},{"Key":"conditional should","Fragments":["check","be"]},{"Key":"for \"yell\".","Fragments":["You've"]},{"Key":"\"yell\". You've","Fragments":["already"]},{"Key":"You've already","Fragments":["provided"]},{"Key":"already provided","Fragments":["a"]},{"Key":"provided a","Fragments":["neat","method"]},{"Key":"a neat","Fragments":["method,","way","trick","trick"]},{"Key":"neat method,","Fragments":["so"]},{"Key":"method, so","Fragments":["we'll","the","I"]},{"Key":"so we'll","Fragments":["use"]},{"Key":"we'll use","Fragments":["it"]},{"Key":"if (phrase.Equals(phrase.ToUpper())","Fragments":["\u0026\u0026"]},{"Key":"(phrase.Equals(phrase.ToUpper()) \u0026\u0026","Fragments":["IsAlpha(phrase))"]},{"Key":"above is","Fragments":["false,","welcome.","kind","very"]},{"Key":"false, then","Fragments":["it's","we"]},{"Key":"a \"yell\",","Fragments":["so"]},{"Key":"\"yell\", so","Fragments":["we"]},{"Key":"we check","Fragments":["if"]},{"Key":"question. The","Fragments":["condition"]},{"Key":"The condition","Fragments":["for"]},{"Key":"condition for","Fragments":["this"]},{"Key":"phrase ends","Fragments":["with"]},{"Key":"ends with","Fragments":["a","much","`\"?\"`","a"]},{"Key":"conditions are","Fragments":["false,","met.","hit"]},{"Key":"are false,","Fragments":["then"]},{"Key":"we return","Fragments":["\"Whatever\"","0,"]},{"Key":"In total,","Fragments":["you"]},{"Key":"total, you","Fragments":["should"]},{"Key":"have 3","Fragments":["conditionals","different","nested"]},{"Key":"3 conditionals","Fragments":["that"]},{"Key":"conditionals that","Fragments":["each"]},{"Key":"that each","Fragments":["return","character","part","time","of","triangle"]},{"Key":"the appropriate","Fragments":["message,","test","dictionary"]},{"Key":"appropriate message,","Fragments":["and"]},{"Key":"end, you","Fragments":["can"]},{"Key":"can return","Fragments":["\"Whatever\"","the","it","early","it"]},{"Key":"return \"Whatever\"","Fragments":["if"]},{"Key":"\"Whatever\" if","Fragments":["all"]},{"Key":"all else","Fragments":["fails."]},{"Key":"Sure, I","Fragments":["could"]},{"Key":"done that","Fragments":["too.","because"]},{"Key":"just proving","Fragments":["my"]},{"Key":"proving my","Fragments":["work,"]},{"Key":"my work,","Fragments":["quick"]},{"Key":"work, quick","Fragments":["and"]},{"Key":"and dirty.","Fragments":["Thanks"]},{"Key":"dirty. Thanks","Fragments":["for"]},{"Key":"readability, I","Fragments":["would","changed"]},{"Key":"not write","Fragments":["the","a"]},{"Key":" Saved","Fragments":["the"]},{"Key":"Saved the","Fragments":["redundant"]},{"Key":"the redundant","Fragments":["\"return","LINQ"]},{"Key":"redundant \"return","Fragments":["false\""]},{"Key":"\"return false\"","Fragments":["and"]},{"Key":"false\" and","Fragments":["\"return"]},{"Key":"and \"return","Fragments":["true\""]},{"Key":"true\" instructions.","Fragments":["Thanks"]},{"Key":"instructions. Thanks","Fragments":["for"]},{"Key":" Too","Fragments":["much","many","much","many","many","many","easy"]},{"Key":"Too much","Fragments":["whitespace,","code","unused"]},{"Key":"much whitespace,","Fragments":["and"]},{"Key":"and could","Fragments":["turn","just","be","definitely"]},{"Key":"could turn","Fragments":["all"]},{"Key":"turn all","Fragments":["these"]},{"Key":"these if's","Fragments":["into"]},{"Key":"if's into","Fragments":["a"]},{"Key":"of comparisons.","Fragments":["This"]},{"Key":"comparisons. This","Fragments":["nested"]},{"Key":"This nested","Fragments":["approach"]},{"Key":"nested approach","Fragments":["is"]},{"Key":"approach is","Fragments":["a","nice.","very","that","the","a","quite"]},{"Key":"Also, it","Fragments":["doesnt"]},{"Key":"it doesnt","Fragments":["matter"]},{"Key":"doesnt matter","Fragments":["for"]},{"Key":"matter for","Fragments":["this"]},{"Key":"this excercise,","Fragments":["but"]},{"Key":"excercise, but","Fragments":["be"]},{"Key":"but be","Fragments":["careful"]},{"Key":"careful when","Fragments":["marking"]},{"Key":"when marking","Fragments":["a"]},{"Key":"whole class","Fragments":["as","static."]},{"Key":"class as","Fragments":["static","public","static","you","specified"]},{"Key":" Hello","Fragments":["all!","Darth-Walsh","world,"]},{"Key":"Hello all!","Fragments":["I"]},{"Key":"all! I","Fragments":["know"]},{"Key":"know this","Fragments":["is","i","when","is","is"]},{"Key":"a big,","Fragments":["horrible"]},{"Key":"big, horrible","Fragments":["mess"]},{"Key":"horrible mess","Fragments":["but"]},{"Key":"mess but","Fragments":["this"]},{"Key":"first stab","Fragments":["at"]},{"Key":"at it.","Fragments":["I've","good"]},{"Key":"it. I've","Fragments":["at","made","seen","always"]},{"Key":"I've at","Fragments":["least"]},{"Key":"least gotten","Fragments":["it"]},{"Key":"gotten it","Fragments":["to"]},{"Key":"point that","Fragments":["it","out","@keira"]},{"Key":"tests, so","Fragments":["at","things","no"]},{"Key":"so at","Fragments":["this"]},{"Key":"this point","Fragments":["I'm"]},{"Key":"point I'm","Fragments":["really"]},{"Key":"I'm really","Fragments":["interested","not","glad","not"]},{"Key":"really interested","Fragments":["in","in"]},{"Key":"in trimming","Fragments":["down"]},{"Key":"trimming down","Fragments":["the"]},{"Key":"the fat,","Fragments":["redundancy,"]},{"Key":"fat, redundancy,","Fragments":["more"]},{"Key":"redundancy, more","Fragments":["concise"]},{"Key":"more concise","Fragments":["logic,","than","without","by","while","way"]},{"Key":"concise logic,","Fragments":["etc."]},{"Key":"logic, etc.","Fragments":["I"]},{"Key":"etc. I","Fragments":["know"]},{"Key":"know I've","Fragments":["got"]},{"Key":"I've got","Fragments":["a","it"]},{"Key":"of crap","Fragments":["in"]},{"Key":"crap in","Fragments":["here,"]},{"Key":"in here,","Fragments":["so"]},{"Key":"here, so","Fragments":["apologies"]},{"Key":"so apologies","Fragments":["in"]},{"Key":"apologies in","Fragments":["advance."]},{"Key":" Nah,","Fragments":["your","not"]},{"Key":"Nah, your","Fragments":["code"]},{"Key":"is fine.","Fragments":["The","I","I"]},{"Key":"fine. The","Fragments":["only"]},{"Key":"about in","Fragments":["your"]},{"Key":"is readability","Fragments":["and","rather"]},{"Key":"and sticking","Fragments":["to"]},{"Key":"sticking to","Fragments":["conventional,","one"]},{"Key":"to conventional,","Fragments":["uh..."]},{"Key":"conventional, uh...","Fragments":["conventions"]},{"Key":"uh... conventions","Fragments":[":)"]},{"Key":" Passes","Fragments":["all"]},{"Key":"Passes all","Fragments":["tests","tests"]},{"Key":"Another LinQ","Fragments":["implementation"]},{"Key":"LinQ implementation","Fragments":["with"]},{"Key":"implementation with","Fragments":["focus"]},{"Key":"with focus","Fragments":["on"]},{"Key":"on documentation.","Fragments":["The"]},{"Key":"documentation. The","Fragments":["only"]},{"Key":"only part","Fragments":["I'm"]},{"Key":"part I'm","Fragments":["not"]},{"Key":"is line","Fragments":["37"]},{"Key":"line 37","Fragments":["where"]},{"Key":"37 where","Fragments":["I"]},{"Key":"I create","Fragments":["a"]},{"Key":"a base","Fragments":["dicitonary","type,"]},{"Key":"base dicitonary","Fragments":["containing"]},{"Key":"dicitonary containing","Fragments":["all"]},{"Key":"containing all","Fragments":["distinct"]},{"Key":"all distinct","Fragments":["words."]},{"Key":"distinct words.","Fragments":["This"]},{"Key":"words. This","Fragments":["seems"]},{"Key":"This seems","Fragments":["like","like","like"]},{"Key":"a waste","Fragments":["of","of","in"]},{"Key":"waste of","Fragments":["work","lines."]},{"Key":"of work","Fragments":["compared","so","where","in"]},{"Key":"work compared","Fragments":["to"]},{"Key":"compared to","Fragments":["a","the","my","using","my"]},{"Key":"simple if(wordCounts.ContainsKey(word))","Fragments":["in"]},{"Key":"if(wordCounts.ContainsKey(word)) in","Fragments":["the"]},{"Key":"foreach loop,","Fragments":["however","I"]},{"Key":"loop, however","Fragments":["I"]},{"Key":"Any suggestions","Fragments":["to","on","on"]},{"Key":"suggestions to","Fragments":["the","put","reduce"]},{"Key":"It all","Fragments":["feels","depends"]},{"Key":"all feels","Fragments":["messy."]},{"Key":"feels messy.","Fragments":["But"]},{"Key":"messy. But","Fragments":["I"]},{"Key":"I tryed","Fragments":["to"]},{"Key":"tryed to","Fragments":["cut"]},{"Key":"on return","Fragments":["statements"]},{"Key":"and nesting","Fragments":["foreach"]},{"Key":"foreach and","Fragments":["ifs","do_while","Reverse()"]},{"Key":"and ifs","Fragments":["to"]},{"Key":"ifs to","Fragments":["make","find"]},{"Key":"easyer too","Fragments":["look"]},{"Key":"too look","Fragments":["at."]},{"Key":"Have a","Fragments":["look","think"]},{"Key":"at properties","Fragments":["to"]},{"Key":"properties to","Fragments":["replace"]},{"Key":"replace your","Fragments":["get","method","`for`","too"]},{"Key":"your get","Fragments":["and","an"]},{"Key":"get and","Fragments":["set"]},{"Key":"and set","Fragments":["methods"]},{"Key":"set methods","Fragments":["-"]},{"Key":"methods -","Fragments":["http://www.csharp-station.com/Tutorial/CSharp/Lesson10.","one","a"]},{"Key":"- http://www.csharp-station.com/Tutorial/CSharp/Lesson10.","Fragments":["I'd"]},{"Key":"http://www.csharp-station.com/Tutorial/CSharp/Lesson10. I'd","Fragments":["use"]},{"Key":"I'd use","Fragments":["something"]},{"Key":"use something","Fragments":["like:"]},{"Key":" get","Fragments":["{","{"]},{"Key":"get {","Fragments":["return","return"]},{"Key":"{ return","Fragments":["this.year;","_name","0;","true;","statement.ToUpper()","\"Fine,"]},{"Key":"return this.year;","Fragments":["}"]},{"Key":" set","Fragments":["{"]},{"Key":"set {","Fragments":["this.year"]},{"Key":"{ this.year","Fragments":["="]},{"Key":"this.year =","Fragments":["value;"]},{"Key":"= value;","Fragments":["}"]},{"Key":"encapsulation in","Fragments":["SentenceExtencions."]},{"Key":"in SentenceExtencions.","Fragments":["But"]},{"Key":"SentenceExtencions. But","Fragments":["why"]},{"Key":"But why","Fragments":["no","have"]},{"Key":"why no","Fragments":["comment"]},{"Key":"no comment","Fragments":["in"]},{"Key":"code? And","Fragments":["how"]},{"Key":"And how","Fragments":["could"]},{"Key":"how could","Fragments":["you"]},{"Key":"could you","Fragments":["have","change","do","please"]},{"Key":"have solved","Fragments":["this"]},{"Key":"solved this","Fragments":["without","exercise"]},{"Key":"without using","Fragments":["regex?","for","\u003cb\u003eLinq\u003c/b\u003e.","system","power","ALPHABET","Math.Pow","Math.Pow"]},{"Key":"feedback everyone!","Fragments":["I"]},{"Key":"everyone! I","Fragments":["missed"]},{"Key":"test driven","Fragments":["development","development.","development.","development","development.","development"]},{"Key":"driven development","Fragments":["part","concepts","concepts"]},{"Key":"development part","Fragments":["of"]},{"Key":"the website","Fragments":["but"]},{"Key":"website but","Fragments":["I"]},{"Key":"just found","Fragments":["it"]},{"Key":"found it","Fragments":["and","extremely","very","very"]},{"Key":"and am","Fragments":["getting","too","jealous","at"]},{"Key":"getting NUnit","Fragments":["up"]},{"Key":"NUnit up","Fragments":["and"]},{"Key":"and running","Fragments":["now."]},{"Key":"running now.","Fragments":["I"]},{"Key":"now. I","Fragments":["will","will"]},{"Key":"will rework","Fragments":["and"]},{"Key":"rework and","Fragments":["submit"]},{"Key":"submit once","Fragments":["the"]},{"Key":"once the","Fragments":["tests","user","%"]},{"Key":"Second iteration,","Fragments":["instead"]},{"Key":"iteration, instead","Fragments":["of"]},{"Key":"of building","Fragments":["the","a"]},{"Key":"building the","Fragments":["dictionary","verses"]},{"Key":"and iterating","Fragments":["over"]},{"Key":"over all","Fragments":["words","though."]},{"Key":"all words","Fragments":["filling","at","at","at"]},{"Key":"words filling","Fragments":["them"]},{"Key":"filling them","Fragments":["in,"]},{"Key":"them in,","Fragments":["I"]},{"Key":"in, I","Fragments":["use","probably"]},{"Key":"use GroupBy","Fragments":["which"]},{"Key":"GroupBy which","Fragments":["was"]},{"Key":"was exactly","Fragments":["what","what","to"]},{"Key":"iteration 1.","Fragments":["Yay"]},{"Key":"1. Yay","Fragments":["for"]},{"Key":"Yay for","Fragments":["learning"]},{"Key":"for learning","Fragments":["by"]},{"Key":"learning by","Fragments":["reading"]},{"Key":"by reading","Fragments":["other"]},{"Key":"reading other","Fragments":["peoples"]},{"Key":"peoples code","Fragments":[":)","I"]},{"Key":"you considered","Fragments":["using","using"]},{"Key":"an Integer","Fragments":["instead"]},{"Key":"Integer instead","Fragments":["of"]},{"Key":" Nevertheless","Fragments":["well"]},{"Key":"Nevertheless well","Fragments":["done"]},{"Key":"you both","Fragments":["for","created"]},{"Key":"your insights,","Fragments":["and"]},{"Key":"insights, and","Fragments":["particularly"]},{"Key":"and particularly","Fragments":["@ezekiel"]},{"Key":"particularly @ezekiel","Fragments":["for"]},{"Key":"@ezekiel for","Fragments":["the"]},{"Key":"the link","Fragments":["to","for"]},{"Key":"link to","Fragments":["that","a"]},{"Key":"that StackOverflow","Fragments":["page"]},{"Key":"StackOverflow page","Fragments":["and"]},{"Key":"and recommended","Fragments":["books."]},{"Key":"wish I","Fragments":["could","had","would","would"]},{"Key":"could upvote","Fragments":["you"]},{"Key":"upvote you","Fragments":["and"]},{"Key":"you and","Fragments":["others","I"]},{"Key":"and others","Fragments":["benefit"]},{"Key":"others benefit","Fragments":["from"]},{"Key":"from what","Fragments":["has"]},{"Key":"what has","Fragments":["been"]},{"Key":"been shared","Fragments":["here"]},{"Key":"shared here","Fragments":["-"]},{"Key":"here -","Fragments":["I","I"]},{"Key":"a suggestion","Fragments":["to","you"]},{"Key":"the feedback.","Fragments":["I'm","I","I'm","I","I'm","It"]},{"Key":"feedback. I'm","Fragments":["a","still","not"]},{"Key":"a novice,","Fragments":["but"]},{"Key":"novice, but","Fragments":["I"]},{"Key":"see that","Fragments":["this","it","there","you","bool","i","there","you","a","it"]},{"Key":"to learn.","Fragments":["Would"]},{"Key":"learn. Would","Fragments":["you"]},{"Key":"mind elaborating","Fragments":["on"]},{"Key":"elaborating on","Fragments":["why"]},{"Key":"static class?","Fragments":["Am"]},{"Key":"class? Am","Fragments":["I"]},{"Key":"Am I","Fragments":["correct","missing","right?","right","the"]},{"Key":"I correct","Fragments":["in"]},{"Key":"correct in","Fragments":["thinking"]},{"Key":"in thinking","Fragments":["that"]},{"Key":"a non-static","Fragments":["class,"]},{"Key":"non-static class,","Fragments":["then"]},{"Key":"class, then","Fragments":["I'd"]},{"Key":"then I'd","Fragments":["have","have"]},{"Key":"I'd have","Fragments":["to","to","done"]},{"Key":"instantiate it","Fragments":["in","two"]},{"Key":"test file?","Fragments":["I"]},{"Key":"file? I","Fragments":["figured"]},{"Key":"I figured","Fragments":["that","I","I'd","doing","I","that","out"]},{"Key":"figured that","Fragments":["I","was"]},{"Key":"probably shouldn't","Fragments":["be"]},{"Key":"shouldn't be","Fragments":["modifying","used","instantiated.","used"]},{"Key":"be modifying","Fragments":["the"]},{"Key":"modifying the","Fragments":["test","lists","test"]},{"Key":"file to","Fragments":["get","which"]},{"Key":"get this","Fragments":["to","to","to"]},{"Key":" Only","Fragments":["thing","need"]},{"Key":"Only thing","Fragments":["missing","that","I'll"]},{"Key":"thing missing","Fragments":["is"]},{"Key":"missing is","Fragments":["the"]},{"Key":"the testing","Fragments":["(so","suite.","framework","side"]},{"Key":"testing (so","Fragments":["you"]},{"Key":"(so you","Fragments":["don't"]},{"Key":"main method).","Fragments":["Check"]},{"Key":"method). Check","Fragments":["out"]},{"Key":"second half","Fragments":["of"]},{"Key":"you raising","Fragments":["an"]},{"Key":"raising an","Fragments":["exception"]},{"Key":"exception when","Fragments":["year","they're","you","they","the"]},{"Key":"when year","Fragments":["is"]},{"Key":"not 4","Fragments":["digits"]},{"Key":"4 digits","Fragments":["long?"]},{"Key":"Use Decimal","Fragments":["for"]},{"Key":"Decimal for","Fragments":["financial"]},{"Key":"for financial","Fragments":["calculations"]},{"Key":"financial calculations","Fragments":["not"]},{"Key":"calculations not","Fragments":["here."]},{"Key":"the double","Fragments":["loop,","data","from","foreach","itself,","use"]},{"Key":"double loop,","Fragments":["you"]},{"Key":"loop, you","Fragments":["should"]},{"Key":"out LINQ,","Fragments":["you"]},{"Key":"LINQ, you","Fragments":["can"]},{"Key":"can solve","Fragments":["this","the","an"]},{"Key":"solve this","Fragments":["with","with","exercise,","by","in"]},{"Key":"with pretty","Fragments":["much","much"]},{"Key":"much a","Fragments":["one"]},{"Key":"one liner.","Fragments":["Of","In"]},{"Key":"liner. Of","Fragments":["course"]},{"Key":"course LINQ","Fragments":["is"]},{"Key":"not everyones","Fragments":["cup"]},{"Key":"everyones cup","Fragments":["of"]},{"Key":"cup of","Fragments":["tea"]},{"Key":"of tea","Fragments":["and"]},{"Key":"tea and","Fragments":["it"]},{"Key":"it requires","Fragments":["a","the","at","one"]},{"Key":"a somewhat","Fragments":["different"]},{"Key":"somewhat different","Fragments":["way"]},{"Key":"different way","Fragments":["of","of","of"]},{"Key":"Another thing,","Fragments":["it","consider"]},{"Key":"thing, it","Fragments":["might"]},{"Key":"use letter.ToLowerInvariant(),","Fragments":["it"]},{"Key":"letter.ToLowerInvariant(), it","Fragments":["won't"]},{"Key":"won't do","Fragments":["any"]},{"Key":"any difference","Fragments":["in","in","in","when"]},{"Key":"difference in","Fragments":["this","the","length","dialects","efficiency,","time.","runtime","how","length"]},{"Key":"exercise most","Fragments":["likely"]},{"Key":"likely but","Fragments":["you"]},{"Key":"you never","Fragments":["know.","lookup"]},{"Key":"never know.","Fragments":["If"]},{"Key":"know. If","Fragments":["someone"]},{"Key":"If someone","Fragments":["with","sent","sent","sent","sent","sent","sent","sent","sent","sent","sent","sent","sent","sent","sent","sent","incorrectly","decided","was"]},{"Key":"someone with","Fragments":["other","more"]},{"Key":"with other","Fragments":["language","hellos"]},{"Key":"other language","Fragments":["settings"]},{"Key":"language settings","Fragments":["than"]},{"Key":"settings than","Fragments":["you"]},{"Key":"than you","Fragments":["runs","are","need"]},{"Key":"you runs","Fragments":["this"]},{"Key":"runs this","Fragments":["it"]},{"Key":"Beyond that,","Fragments":["I"]},{"Key":"a fine","Fragments":["solution,","line","one","algorithm,"]},{"Key":"fine solution,","Fragments":["readable"]},{"Key":"solution, readable","Fragments":["and"]},{"Key":"would council","Fragments":["against"]},{"Key":"council against","Fragments":["Decimal.Zero."]},{"Key":"good thing","Fragments":["to","could","to","as"]},{"Key":"as unsurprising","Fragments":["as"]},{"Key":"unsurprising as","Fragments":["possible"]},{"Key":"possible so","Fragments":["people","that"]},{"Key":"so people","Fragments":["reading","usually"]},{"Key":"people reading","Fragments":["the"]},{"Key":"code don't","Fragments":["have"]},{"Key":"think too","Fragments":["hard."]},{"Key":"too hard.","Fragments":["Normally"]},{"Key":"hard. Normally","Fragments":["people"]},{"Key":"Normally people","Fragments":["simply"]},{"Key":"people simply","Fragments":["use"]},{"Key":"simply use","Fragments":["the"]},{"Key":"the int","Fragments":["`0`","supplied","that","and","and","value","in","type."]},{"Key":"int `0`","Fragments":["and"]},{"Key":"`0` and","Fragments":["so"]},{"Key":"what people","Fragments":["expect.","think."]},{"Key":"people expect.","Fragments":["If"]},{"Key":"expect. If","Fragments":["they"]},{"Key":"If they","Fragments":["see","(you)","are","are"]},{"Key":"see Decimal.Zero","Fragments":["they"]},{"Key":"Decimal.Zero they","Fragments":["will"]},{"Key":"that over","Fragments":["the"]},{"Key":"normal `0`...","Fragments":["and"]},{"Key":"`0`... and","Fragments":["that"]},{"Key":"that takes","Fragments":["time","a","a"]},{"Key":"and brain","Fragments":["usage..."]},{"Key":"brain usage...","Fragments":["especially"]},{"Key":"usage... especially","Fragments":["as"]},{"Key":"especially as","Fragments":["they","they"]},{"Key":"they have","Fragments":["to","to"]},{"Key":"to realise","Fragments":["that"]},{"Key":"realise that","Fragments":["there","an","you"]},{"Key":"no particular","Fragments":["reason."]},{"Key":"Also doing","Fragments":["all"]},{"Key":"doing all","Fragments":["the","the","the","the","the","the","the","of"]},{"Key":"the maths","Fragments":["up","was"]},{"Key":"maths up","Fragments":["front"]},{"Key":"bit wasteful,","Fragments":["though"]},{"Key":"wasteful, though","Fragments":["for"]},{"Key":"though for","Fragments":["this","this"]},{"Key":"this noddy","Fragments":["task"]},{"Key":"noddy task","Fragments":["it"]},{"Key":"task it","Fragments":["is","makes"]},{"Key":" True","Fragments":["that!","but"]},{"Key":"True that!","Fragments":["I"]},{"Key":"that! I","Fragments":["only"]},{"Key":"I only","Fragments":["added","have","checked","see","cycle","have","wanted","recently","changed","meant"]},{"Key":"only added","Fragments":["the"]},{"Key":"the clear()","Fragments":["of"]},{"Key":"clear() of","Fragments":["the"]},{"Key":"list because","Fragments":["i","you"]},{"Key":"because i","Fragments":["thought","="]},{"Key":"i thought","Fragments":["that"]},{"Key":"thought that","Fragments":["was","it","was"]},{"Key":"problem when","Fragments":["the","the"]},{"Key":"actual problem","Fragments":["i"]},{"Key":"problem i","Fragments":["had"]},{"Key":"i had","Fragments":["was"]},{"Key":"had was","Fragments":["i'd","with","figuring"]},{"Key":"was i'd","Fragments":["forgotten"]},{"Key":"i'd forgotten","Fragments":["to"]},{"Key":"forgotten to","Fragments":["take","make","test"]},{"Key":"Yes, I","Fragments":["think","have","know","mean"]},{"Key":"expression in","Fragments":["general.","one"]},{"Key":"this case,","Fragments":["it","year","but","but","though.","your","I","I","as","for"]},{"Key":"case, it","Fragments":["is","appears"]},{"Key":"pretty easy","Fragments":["to","to","-"]},{"Key":"much nicer","Fragments":["to","approach","than"]},{"Key":"nicer to","Fragments":["write","use","use"]},{"Key":"a five","Fragments":["year"]},{"Key":"five year","Fragments":["old"]},{"Key":"year old","Fragments":["would"]},{"Key":"old would","Fragments":["understand."]},{"Key":"would understand.","Fragments":["Either"]},{"Key":"understand. Either","Fragments":["by"]},{"Key":"Either by","Fragments":["writing"]},{"Key":"by writing","Fragments":["really","out","more"]},{"Key":"writing really","Fragments":["readable"]},{"Key":"really readable","Fragments":["code"]},{"Key":"readable code","Fragments":["or"]},{"Key":"code or","Fragments":["write","the","an","comprehending"]},{"Key":"or write","Fragments":["comments"]},{"Key":"write comments","Fragments":["everywhere."]},{"Key":"can reverse","Fragments":["the"]},{"Key":"the If","Fragments":["statements"]},{"Key":"If statements","Fragments":["to","approach","in"]},{"Key":"reduce nesting,","Fragments":["which"]},{"Key":"nesting, which","Fragments":["is"]},{"Key":"bit clearer","Fragments":["to"]},{"Key":"clearer to","Fragments":["read","use","me","the"]},{"Key":"and moves","Fragments":["the"]},{"Key":"moves the","Fragments":["return"]},{"Key":"statement closer","Fragments":["to"]},{"Key":"closer to","Fragments":["the","use","line"]},{"Key":"if line...","Fragments":["making"]},{"Key":"line... making","Fragments":["following"]},{"Key":"making following","Fragments":["the"]},{"Key":"following the","Fragments":["logic"]},{"Key":"Looks great!","Fragments":["Nice","You"]},{"Key":"great! Nice","Fragments":["and"]},{"Key":"Nice and","Fragments":["compact","concise.","clean.","concise."]},{"Key":" `stringthing`","Fragments":["is"]},{"Key":"`stringthing` is","Fragments":["not"]},{"Key":"left some","Fragments":["comments"]},{"Key":"in to","Fragments":["show","the","pass"]},{"Key":"show what","Fragments":["my"]},{"Key":"what my","Fragments":["problem","initial"]},{"Key":"my problem","Fragments":["solving","working,"]},{"Key":"problem solving","Fragments":["process"]},{"Key":"solving process","Fragments":["looks"]},{"Key":"process looks","Fragments":["like."]},{"Key":"Changed it","Fragments":["to"]},{"Key":"use Math.Min","Fragments":["to"]},{"Key":"After some","Fragments":["good","monkeying"]},{"Key":"good feedback","Fragments":["from"]},{"Key":"from @pink","Fragments":["I"]},{"Key":"@pink I","Fragments":["managed"]},{"Key":"I managed","Fragments":["to","it","to","it"]},{"Key":"to compact","Fragments":["this"]},{"Key":"compact this","Fragments":["a"]},{"Key":"Nested Ternary","Fragments":["operators"]},{"Key":"Ternary operators","Fragments":["like","(\"?:\")"]},{"Key":"operators like","Fragments":["this","NullOrWhiteSpace"]},{"Key":"efficient order","Fragments":["you"]},{"Key":"order you","Fragments":["could","created","originally"]},{"Key":"logic in?","Fragments":["Which"]},{"Key":"in? Which","Fragments":["calculation"]},{"Key":"Which calculation","Fragments":["discriminates"]},{"Key":"calculation discriminates","Fragments":["most"]},{"Key":"discriminates most","Fragments":["years"]},{"Key":"most years","Fragments":["into"]},{"Key":"years into","Fragments":["leap"]},{"Key":"into leap","Fragments":["years"]},{"Key":"years or","Fragments":["not"]},{"Key":"not leap","Fragments":["years?"]},{"Key":"final operator","Fragments":["is"]},{"Key":"required as","Fragments":["`(year%4).Equals(0)`"]},{"Key":"as `(year%4).Equals(0)`","Fragments":["returns"]},{"Key":"`(year%4).Equals(0)` returns","Fragments":["true"]},{"Key":"an indication","Fragments":["of","of","that"]},{"Key":"indication of","Fragments":["the","that"]},{"Key":"type within","Fragments":["a"]},{"Key":"name. What","Fragments":["if"]},{"Key":"you decide","Fragments":["to","to","to","later","whether"]},{"Key":"decide to","Fragments":["change","give","make","check","expand"]},{"Key":"of `iHamming`...","Fragments":["you"]},{"Key":"`iHamming`... you","Fragments":["would"]},{"Key":"would need","Fragments":["to","to","to","and","to","to","to","to","to","to"]},{"Key":"to re-name","Fragments":["the"]},{"Key":"re-name the","Fragments":["variable","extension"]},{"Key":"variable everywhere.","Fragments":["Also"]},{"Key":"everywhere. Also","Fragments":["there"]},{"Key":"Also there","Fragments":["is","is"]},{"Key":"is enough","Fragments":["help"]},{"Key":"enough help","Fragments":["in"]},{"Key":"help in","Fragments":["most","the"]},{"Key":"most IDE's","Fragments":["to"]},{"Key":"IDE's to","Fragments":["know"]},{"Key":"what type","Fragments":["things","it","the","of"]},{"Key":"type things","Fragments":["are"]},{"Key":"things are","Fragments":["if","different"]},{"Key":"are if","Fragments":["you"]},{"Key":"the built","Fragments":["in","in"]},{"Key":"in `Math.Min(int,int)`","Fragments":["function"]},{"Key":"`Math.Min(int,int)` function","Fragments":["rather"]},{"Key":"function rather","Fragments":["than","than"]},{"Key":"than rolling","Fragments":["your"]},{"Key":"rolling your","Fragments":["own.","own","own"]},{"Key":"think again","Fragments":["about"]},{"Key":"again about","Fragments":["your"]},{"Key":"names. `...Hundy`","Fragments":["does"]},{"Key":"`...Hundy` does","Fragments":["not"]},{"Key":"not mean","Fragments":["anything"]},{"Key":"so a","Fragments":["reader","build","better"]},{"Key":"a reader","Fragments":["has","over"]},{"Key":"reader has","Fragments":["to"]},{"Key":"assignment to","Fragments":["work","this:"]},{"Key":"cost (small","Fragments":["in"]},{"Key":"(small in","Fragments":["this"]},{"Key":"this case!)","Fragments":["of"]},{"Key":"case!) of","Fragments":["doing"]},{"Key":"up front.","Fragments":["In","When","Errors"]},{"Key":"front. In","Fragments":["most"]},{"Key":"In most","Fragments":["cases"]},{"Key":"most cases","Fragments":["all","is","(the"]},{"Key":"cases all","Fragments":["you"]},{"Key":"need is","Fragments":["the","some"]},{"Key":"the `divByFour`","Fragments":["check"]},{"Key":"`divByFour` check","Fragments":["to"]},{"Key":"know a","Fragments":["year"]},{"Key":"not leap...","Fragments":["only"]},{"Key":"leap... only","Fragments":["occasionally"]},{"Key":"only occasionally","Fragments":["do"]},{"Key":"occasionally do","Fragments":["you"]},{"Key":"century special","Fragments":["cases."]},{"Key":"special cases.","Fragments":["So"]},{"Key":"cases. So","Fragments":["if"]},{"Key":"you made","Fragments":["the","the","sure","'value'","it","the","is","teenths","it","your"]},{"Key":"the `divBy.....`","Fragments":["variables"]},{"Key":"`divBy.....` variables","Fragments":["private"]},{"Key":"variables private","Fragments":["methods"]},{"Key":"instead then","Fragments":["the"]},{"Key":"only occur","Fragments":["when"]},{"Key":"occur when","Fragments":["required."]},{"Key":"Really cool","Fragments":["one"]},{"Key":"cool one","Fragments":["liner!"]},{"Key":"Usually not","Fragments":["recommended"]},{"Key":"recommended but","Fragments":["this"]},{"Key":"understand is","Fragments":["why","another."]},{"Key":"why ```.OrderBy(w","Fragments":["=\u003e"]},{"Key":"```.OrderBy(w =\u003e","Fragments":["w)```"]},{"Key":"=\u003e w)```","Fragments":["is"]},{"Key":"w)``` is","Fragments":["sorting"]},{"Key":"is sorting","Fragments":["the"]},{"Key":"a haskell","Fragments":["standpoint,"]},{"Key":"haskell standpoint,","Fragments":["the"]},{"Key":"standpoint, the","Fragments":["lambda"]},{"Key":"the lambda","Fragments":["```(a","function","idea","function","and","that","`w","to","expression","to","could"]},{"Key":"lambda ```(a","Fragments":["-\u003e"]},{"Key":"```(a -\u003e","Fragments":["a)```"]},{"Key":"-\u003e a)```","Fragments":["does"]},{"Key":"a)``` does","Fragments":["nothing"]},{"Key":"does nothing","Fragments":["with","to","but"]},{"Key":"nothing with","Fragments":["the"]},{"Key":"more CPU","Fragments":["intensive,"]},{"Key":"CPU intensive,","Fragments":["checking"]},{"Key":"intensive, checking","Fragments":["if"]},{"Key":"all chars","Fragments":["are"]},{"Key":"chars are","Fragments":["whitespace","generated"]},{"Key":"a Trim()","Fragments":["command","before"]},{"Key":"Trim() command","Fragments":["on"]},{"Key":"command on","Fragments":["the"]},{"Key":"if =","Fragments":["\"\""]},{"Key":"= \"\"","Fragments":["but"]},{"Key":"\"\" but","Fragments":["that's"]},{"Key":"interesting way","Fragments":["to"]},{"Key":"the difference","Fragments":["between","between","between","in","isn't","in","in"]},{"Key":"difference between","Fragments":["```string.ToUpperInvariant```","```string```","unintelligible"]},{"Key":"between ```string.ToUpperInvariant```","Fragments":["and"]},{"Key":"```string.ToUpperInvariant``` and","Fragments":["```string.ToUpper```?"]},{"Key":" _new.Add(old[key][i].ToLower(),","Fragments":["key);"]},{"Key":"i feel","Fragments":["it"]},{"Key":"not read","Fragments":["very"]},{"Key":"read very","Fragments":["well","clearly,"]},{"Key":"well as","Fragments":["i","Char","unneccessary","formatting","tests","makes","concatenating","an","m","safer"]},{"Key":"as i","Fragments":["make"]},{"Key":"i make","Fragments":["the"]},{"Key":"the assumption","Fragments":["that","that","that"]},{"Key":"assumption that","Fragments":["numbers","the","everyone"]},{"Key":"that numbers","Fragments":["divisible"]},{"Key":"numbers divisible","Fragments":["by"]},{"Key":"of SortedSet.","Fragments":["I"]},{"Key":"SortedSet. I","Fragments":["think"]},{"Key":"if should","Fragments":["be"]},{"Key":" word.Length","Fragments":["!=","\u003c"]},{"Key":"word.Length !=","Fragments":["_ant.Length"]},{"Key":"word.Length \u003c","Fragments":["_ant.Length"]},{"Key":" Wouldn't","Fragments":["it"]},{"Key":"Wouldn't it","Fragments":["be","be","be","have"]},{"Key":"simpler if","Fragments":["you","you","you"]},{"Key":"you transformed","Fragments":["both"]},{"Key":"transformed both","Fragments":["words"]},{"Key":"both words","Fragments":["to","would","to","and"]},{"Key":"words to","Fragments":["lower","lower","ops"]},{"Key":"lower and","Fragments":["then"]},{"Key":"then simply","Fragments":["sort","return","run"]},{"Key":"simply sort","Fragments":["the"]},{"Key":"characters of","Fragments":["the"]},{"Key":"two words","Fragments":["alphabetically,","then.","were","are"]},{"Key":"words alphabetically,","Fragments":["in"]},{"Key":"alphabetically, in","Fragments":["order"]},{"Key":"they contain","Fragments":["exactly"]},{"Key":"contain exactly","Fragments":["the"]},{"Key":"exactly the","Fragments":["same","same","intent","opposite","scenarios","same"]},{"Key":" Personally","Fragments":["I","I","I","I","I'd","I"]},{"Key":"wouldn't prefer","Fragments":["to"]},{"Key":"up. Could","Fragments":["add"]},{"Key":"Could add","Fragments":["a"]},{"Key":"of comments","Fragments":["though.","saying"]},{"Key":"you @garrick,","Fragments":["I'll"]},{"Key":"@garrick, I'll","Fragments":["squeeze"]},{"Key":"I'll squeeze","Fragments":["my"]},{"Key":"squeeze my","Fragments":["brains"]},{"Key":"my brains","Fragments":["and"]},{"Key":"brains and","Fragments":["try"]},{"Key":"1 line","Fragments":["for","version.","and"]},{"Key":"line for","Fragments":["next"]},{"Key":"for next","Fragments":["iteration.","iteration"]},{"Key":"next iteration.","Fragments":["I'm","Perhaps"]},{"Key":"iteration. I'm","Fragments":["sure"]},{"Key":"sure it","Fragments":["could","is","will","is","is"]},{"Key":"are few","Fragments":["things"]},{"Key":"things here","Fragments":["that"]},{"Key":"here that","Fragments":["I","I"]},{"Key":"1. Other","Fragments":["people"]},{"Key":"Other people","Fragments":["don't"]},{"Key":"people don't","Fragments":["seem"]},{"Key":"don't seem","Fragments":["to","to"]},{"Key":"to mind","Fragments":["this,","first.","and"]},{"Key":"mind this,","Fragments":["but"]},{"Key":"peeve to","Fragments":["have"]},{"Key":"in methods","Fragments":["(college"]},{"Key":"methods (college","Fragments":["professors"]},{"Key":"(college professors","Fragments":["pounded","drilled"]},{"Key":"professors pounded","Fragments":["that"]},{"Key":"pounded that","Fragments":["into"]},{"Key":"that into","Fragments":["me).","`message.IndexOfAny()`,","a","a","a","a"]},{"Key":"into me).","Fragments":["It",":)"]},{"Key":"me). It","Fragments":["makes"]},{"Key":"debug/maintain code","Fragments":["later"]},{"Key":"code later","Fragments":["on."]},{"Key":"2. Making","Fragments":["those"]},{"Key":"Making those","Fragments":["helper"]},{"Key":"those helper","Fragments":["functions"]},{"Key":"helper functions","Fragments":["static","for"]},{"Key":"functions static","Fragments":["doesn't"]},{"Key":"static doesn't","Fragments":["seem"]},{"Key":"doesn't seem","Fragments":["necessary.","like","as","as","to","like","particularly","too"]},{"Key":"seem necessary.","Fragments":["\"Hey\""]},{"Key":"necessary. \"Hey\"","Fragments":["is"]},{"Key":"\"Hey\" is","Fragments":["already"]},{"Key":"already an","Fragments":["instance"]},{"Key":"instance method,","Fragments":["so","generally"]},{"Key":"others could","Fragments":["be"]},{"Key":"be non-static.","Fragments":["Plus,"]},{"Key":"non-static. Plus,","Fragments":["you"]},{"Key":"Plus, you","Fragments":["could"]},{"Key":"them private.","Fragments":[":)"]},{"Key":"3. AllCaps","Fragments":["variable"]},{"Key":"AllCaps variable","Fragments":["should"]},{"Key":"variable should","Fragments":["be"]},{"Key":"be \"allCaps\"","Fragments":["(camel"]},{"Key":"\"allCaps\" (camel","Fragments":["case"]},{"Key":"for method","Fragments":["level"]},{"Key":"method level","Fragments":["variables)."]},{"Key":"4. I","Fragments":["used","agree"]},{"Key":"this. If","Fragments":["you"]},{"Key":"are returning","Fragments":["true/false","from","the"]},{"Key":"returning true/false","Fragments":["in"]},{"Key":"true/false in","Fragments":["an"]},{"Key":"an \"if\"","Fragments":["check,","statement"]},{"Key":"\"if\" check,","Fragments":["simply"]},{"Key":"check, simply","Fragments":["return"]},{"Key":"check itself.","Fragments":["The"]},{"Key":"itself. The","Fragments":["only"]},{"Key":"thing it","Fragments":["buys"]},{"Key":"it buys","Fragments":["you"]},{"Key":"buys you","Fragments":["is"]},{"Key":"you is","Fragments":["a"]},{"Key":"break point,","Fragments":["but"]},{"Key":"it adds","Fragments":["a","an","some","readability"]},{"Key":"adds a","Fragments":["lot","student","student","new","significant"]},{"Key":"of extra,","Fragments":["meaningless"]},{"Key":"extra, meaningless","Fragments":["lines."]},{"Key":"meaningless lines.","Fragments":["i.e."]},{"Key":"lines. i.e.","Fragments":["This"]},{"Key":"i.e. This","Fragments":["is"]},{"Key":"is how","Fragments":["IsAMute","to","I"]},{"Key":"how IsAMute","Fragments":["changes:"]},{"Key":"bool IsAMute","Fragments":["("]},{"Key":"IsAMute (","Fragments":["string"]},{"Key":"( string","Fragments":["input","input"]},{"Key":"string input","Fragments":[")",")"]},{"Key":"// Mutes","Fragments":["don't"]},{"Key":"Mutes don't","Fragments":["say"]},{"Key":"don't say","Fragments":["anything."]},{"Key":"say anything.","Fragments":["When"]},{"Key":"anything. When","Fragments":["trimmed,"]},{"Key":"When trimmed,","Fragments":["this"]},{"Key":"// string","Fragments":["should"]},{"Key":"string should","Fragments":["be"]},{"Key":"return input.Trim()","Fragments":["=="]},{"Key":"input.Trim() ==","Fragments":["\"\";"]},{"Key":"names should","Fragments":["to"]},{"Key":"should to","Fragments":["be"]},{"Key":"be Pascal","Fragments":["case"]},{"Key":"C# (camel","Fragments":["case"]},{"Key":"case is","Fragments":["for","covered","still","one","that"]},{"Key":"for JavaScript).","Fragments":[":)"]},{"Key":"JavaScript). :)","Fragments":["I"]},{"Key":"also agree","Fragments":["with","with","with"]},{"Key":"what @catherine","Fragments":["mentioned."]},{"Key":"Also, lots","Fragments":["of"]},{"Key":"seem okay","Fragments":["with"]},{"Key":"mine (college","Fragments":["professors"]},{"Key":"professors drilled","Fragments":["it"]},{"Key":"drilled it","Fragments":["into"]},{"Key":"I basically","Fragments":["tried","did","submitted"]},{"Key":"basically tried","Fragments":["to"]},{"Key":"as possible.","Fragments":["First","IsDivisibleByValue","This"]},{"Key":"possible. First","Fragments":["made"]},{"Key":"First made","Fragments":["all"]},{"Key":"made all","Fragments":["the","of"]},{"Key":"tests pass,","Fragments":["then","but"]},{"Key":"pass, then","Fragments":["refactored"]},{"Key":"then refactored","Fragments":["a"]},{"Key":"refactored a","Fragments":["bit"]},{"Key":"bit (initially","Fragments":["had"]},{"Key":"(initially had","Fragments":["3"]},{"Key":"had 3","Fragments":["methods"]},{"Key":"3 methods","Fragments":["to"]},{"Key":"try all","Fragments":["3"]},{"Key":"all 3","Fragments":["divisions"]},{"Key":"3 divisions","Fragments":["of"]},{"Key":"divisions of","Fragments":["years,"]},{"Key":"of years,","Fragments":["ended"]},{"Key":"years, ended","Fragments":["up"]},{"Key":"single parametrized","Fragments":["one)."]},{"Key":"don't particularly","Fragments":["like"]},{"Key":"particularly like","Fragments":["so","the"]},{"Key":"like so","Fragments":["much","(yes,"]},{"Key":"much is","Fragments":["the","to"]},{"Key":"the distribution","Fragments":["of"]},{"Key":"distribution of","Fragments":["the","cases."]},{"Key":"the \u0026\u0026","Fragments":["and","in","and","and","and","by"]},{"Key":"and ||","Fragments":["on","(for","operators.","operators.","operators)","operators.","instead","are","to"]},{"Key":"|| on","Fragments":["the"]},{"Key":"but couldn't","Fragments":["find","convince","figure"]},{"Key":"couldn't find","Fragments":["a","a","a","any","a"]},{"Key":"find a","Fragments":["better","way","pattern","leap","lot","way","way","solution","3rd","way","descripting"]},{"Key":"Perhaps it's","Fragments":["better"]},{"Key":"put it","Fragments":["in","all","in","in","in","in","through","through"]},{"Key":"line, since","Fragments":["it's"]},{"Key":"1) Nested","Fragments":["ternaries"]},{"Key":"Nested ternaries","Fragments":["can"]},{"Key":"ternaries can","Fragments":["definitely"]},{"Key":"can definitely","Fragments":["be"]},{"Key":"definitely be","Fragments":["unreadable.","more","more","optimized."]},{"Key":"be unreadable.","Fragments":["I"]},{"Key":"unreadable. I","Fragments":["felt"]},{"Key":"case was","Fragments":["clear"]},{"Key":"was clear","Fragments":["enough"]},{"Key":"easily followed,","Fragments":["and"]},{"Key":"followed, and","Fragments":["it"]},{"Key":"isn't likely","Fragments":["that","to","to"]},{"Key":"logic will","Fragments":["need"]},{"Key":"will need","Fragments":["to","to","to","to"]},{"Key":"2) It","Fragments":["could"]},{"Key":"efficient, but","Fragments":["the","it","this","to"]},{"Key":"performance gain","Fragments":["is","of"]},{"Key":"gain is","Fragments":["not"]},{"Key":"not measurable.","Fragments":["For"]},{"Key":"measurable. For","Fragments":["readability,"]},{"Key":"readability, I'd","Fragments":["need","leave"]},{"Key":"I'd need","Fragments":["to"]},{"Key":"to convert","Fragments":["it","the","the","the","the","the","it","the","the","to","to","the","both","it","the"]},{"Key":"an if...else,","Fragments":["and"]},{"Key":"if...else, and","Fragments":["I"]},{"Key":"ternary for","Fragments":["a","checking"]},{"Key":"straightforward comparison","Fragments":["like"]},{"Key":"comparison like","Fragments":["this."]},{"Key":" 3)","Fragments":["I","Why","Also","There","You","Noted","The","Finally,","You","The","You","In","If"]},{"Key":"3) I","Fragments":["felt"]},{"Key":"felt the","Fragments":["explicit"]},{"Key":"the explicit","Fragments":["logic","if...else"]},{"Key":"explicit logic","Fragments":["would"]},{"Key":"be easier","Fragments":["on","to","to","to","to","on","to","to","to","just","to","to","to","to","to"]},{"Key":"easier on","Fragments":["the","the"]},{"Key":"the brain","Fragments":["than"]},{"Key":"brain than","Fragments":["having"]},{"Key":"than having","Fragments":["to","an","literal"]},{"Key":"make an","Fragments":["inference.","extension"]},{"Key":"an inference.","Fragments":["Do"]},{"Key":"inference. Do","Fragments":["you"]},{"Key":" Putting","Fragments":["display"]},{"Key":"Putting display","Fragments":["logic"]},{"Key":"logic within","Fragments":["your","IsValid"]},{"Key":"within your","Fragments":["method","Regex.","Regex.","second"]},{"Key":"practice. It","Fragments":["gives"]},{"Key":"It gives","Fragments":["the"]},{"Key":"method multiple","Fragments":["concerns..."]},{"Key":"multiple concerns...","Fragments":["what"]},{"Key":"concerns... what","Fragments":["if"]},{"Key":"what if","Fragments":["you","the","this","two","the"]},{"Key":"for leaping","Fragments":["in"]},{"Key":"leaping in","Fragments":["a"]},{"Key":"a system","Fragments":["that","that"]},{"Key":"system that","Fragments":["does","didn't"]},{"Key":" @olaf","Fragments":["if"]},{"Key":"@olaf if","Fragments":["you"]},{"Key":"comment the","Fragments":["code,"]},{"Key":"code, then","Fragments":["my","this","you'll"]},{"Key":"then my","Fragments":["code","way"]},{"Key":"code isn't","Fragments":["good"]},{"Key":"isn't good","Fragments":["enough.","enough,"]},{"Key":"good enough.","Fragments":["As"]},{"Key":"enough. As","Fragments":["Uncle"]},{"Key":"As Uncle","Fragments":["Bob"]},{"Key":"Bob says,","Fragments":["code"]},{"Key":"says, code","Fragments":["should"]},{"Key":"be self","Fragments":["documented,"]},{"Key":"self documented,","Fragments":["as"]},{"Key":"documented, as","Fragments":["@olaf"]},{"Key":"as @olaf","Fragments":["says."]},{"Key":"My regex","Fragments":["knowledge"]},{"Key":"regex knowledge","Fragments":["isn't"]},{"Key":"knowledge isn't","Fragments":["good"]},{"Key":"enough, I'm","Fragments":["a"]},{"Key":"a noob.","Fragments":["I'll"]},{"Key":"noob. I'll","Fragments":["try"]},{"Key":"I'll try","Fragments":["to","to","this","to","to"]},{"Key":"to rethink","Fragments":["it"]},{"Key":"rethink it","Fragments":["without"]},{"Key":"without regex","Fragments":["just"]},{"Key":"for fun","Fragments":[":)"]},{"Key":"should try","Fragments":["and","using","to","converting"]},{"Key":"remove so","Fragments":["many"]},{"Key":"many nested","Fragments":["\"if\""]},{"Key":"\"if\" statements.","Fragments":["Reason"]},{"Key":"statements. Reason","Fragments":["for"]},{"Key":"Reason for","Fragments":["this"]},{"Key":"this is,","Fragments":["if"]},{"Key":"requirement ever","Fragments":["changes,"]},{"Key":"ever changes,","Fragments":["it"]},{"Key":"changes, it","Fragments":["will"]},{"Key":"be very","Fragments":["difficult","readable.","fast","unwieldy"]},{"Key":"very difficult","Fragments":["to","to"]},{"Key":"code by","Fragments":["doing","leveraging"]},{"Key":"by doing","Fragments":["a","the","all","the","the","it"]},{"Key":"doing a","Fragments":["change.","not","lot","multiplesUsed.Contains(current)...","trim","wholesale","long"]},{"Key":"a change.","Fragments":["Try"]},{"Key":"change. Try","Fragments":["to"]},{"Key":"to separate","Fragments":["each","them","those","them","the","class"]},{"Key":"separate each","Fragments":["\"if\""]},{"Key":"each \"if\"","Fragments":["calculation"]},{"Key":"\"if\" calculation","Fragments":["into"]},{"Key":"calculation into","Fragments":["a","its","a","a"]},{"Key":"single step","Fragments":["and"]},{"Key":"step and","Fragments":["use","return"]},{"Key":"use boolean","Fragments":["logig","logic"]},{"Key":"boolean logig","Fragments":["(and/or"]},{"Key":"logig (and/or","Fragments":["operators)"]},{"Key":"(and/or operators)","Fragments":["to"]},{"Key":"operators) to","Fragments":["do","increase"]},{"Key":"realize i","Fragments":["needed"]},{"Key":"i needed","Fragments":["to"]},{"Key":"sort them","Fragments":["to"]},{"Key":"get them","Fragments":["in","in"]},{"Key":"order the","Fragments":["test"]},{"Key":"believe your","Fragments":["tests","code"]},{"Key":"tests should","Fragments":["have","be","come"]},{"Key":"have failed.","Fragments":["The"]},{"Key":"failed. The","Fragments":["tests","value"]},{"Key":"tests call","Fragments":["the"]},{"Key":"function like","Fragments":["this:"]},{"Key":"which indicates","Fragments":["that"]},{"Key":"indicates that","Fragments":["the","the"]},{"Key":"function should","Fragments":["be","be","not"]},{"Key":"static. And,","Fragments":["since"]},{"Key":"And, since","Fragments":["your"]},{"Key":"since your","Fragments":["class","accessor","return"]},{"Key":"your class","Fragments":["doesn't","static","and","it","internals.","that","and","to","a"]},{"Key":"class doesn't","Fragments":["contain"]},{"Key":"doesn't contain","Fragments":["anything"]},{"Key":"contain anything","Fragments":["else"]},{"Key":"anything else","Fragments":["(and","happens","happens.","but","to"]},{"Key":"else (and","Fragments":["so"]},{"Key":"(and so","Fragments":["has"]},{"Key":"so has","Fragments":["no"]},{"Key":"no reason","Fragments":["to","to"]},{"Key":"be instantiated)","Fragments":["it"]},{"Key":"instantiated) it","Fragments":["can"]},{"Key":"is functionally","Fragments":["correct,","not","equivalent"]},{"Key":"functionally correct,","Fragments":["but"]},{"Key":"correct, but","Fragments":["can","it","needs","it"]},{"Key":"written much","Fragments":["more","more","shorter."]},{"Key":"more concise.","Fragments":["Remember"]},{"Key":"concise. Remember","Fragments":["that"]},{"Key":"that everything","Fragments":["in"]},{"Key":"the if-clause","Fragments":["must"]},{"Key":"if-clause must","Fragments":["evaluate"]},{"Key":"must evaluate","Fragments":["to"]},{"Key":"evaluate to","Fragments":["'true'","true/false","true","`false`.","true/false."]},{"Key":"to 'true'","Fragments":["to"]},{"Key":"'true' to","Fragments":["enter"]},{"Key":"enter the","Fragments":["{"]},{"Key":"the {","Fragments":["},"]},{"Key":"{ },","Fragments":["where"]},{"Key":"}, where","Fragments":["you"]},{"Key":"you then","Fragments":["return","going","return"]},{"Key":"then return","Fragments":["true.","the","true","that","that","it","it","it","the","the","the"]},{"Key":"true. You","Fragments":["can"]},{"Key":"this much","Fragments":["easier","more"]},{"Key":"easier by","Fragments":["just","seeing"]},{"Key":"Same solution","Fragments":["I"]},{"Key":"I came","Fragments":["up","up","THIS","across","up","up","up","here","up","up","up","up"]},{"Key":"came up","Fragments":["with!","with","with.","with.","with","with.","with","with","with.","with","with","with."]},{"Key":"like LINQ","Fragments":["and"]},{"Key":"LINQ and","Fragments":["personally","Regex!","enumeration."]},{"Key":"and personally","Fragments":["use"]},{"Key":"a lot.","Fragments":["Usually"]},{"Key":"lot. Usually","Fragments":["with"]},{"Key":"Usually with","Fragments":["the"]},{"Key":"the method-syntax","Fragments":["as"]},{"Key":"method-syntax as","Fragments":["you"]},{"Key":"use here,","Fragments":["but"]},{"Key":"one case","Fragments":["where","you"]},{"Key":"the query","Fragments":["syntax","syntax?","syntax","expression"]},{"Key":"query syntax","Fragments":["is","reads","but"]},{"Key":"syntax is","Fragments":["a","pretty","faster"]},{"Key":" Here,","Fragments":["in","I"]},{"Key":"Here, in","Fragments":["case"]},{"Key":"are unfamiliar","Fragments":["with"]},{"Key":" from","Fragments":["kvp","val","the","x"]},{"Key":"from kvp","Fragments":["in"]},{"Key":"from val","Fragments":["in"]},{"Key":"val in","Fragments":["kvp.Value"]},{"Key":" select","Fragments":["new"]},{"Key":"select new","Fragments":["{"]},{"Key":"new {","Fragments":["Key","Tag"]},{"Key":"{ Key","Fragments":["="]},{"Key":"Key =","Fragments":["val,"]},{"Key":"= val,","Fragments":["Value"]},{"Key":"val, Value","Fragments":["="]},{"Key":"= kvp.Key","Fragments":["}"]},{"Key":"Some observations:","Fragments":[":)"]},{"Key":"1. Private,","Fragments":["class-level"]},{"Key":"Private, class-level","Fragments":["variables"]},{"Key":"class-level variables","Fragments":["should"]},{"Key":"variables should","Fragments":["have","be"]},{"Key":"have _","Fragments":["in"]},{"Key":"_ in","Fragments":["front"]},{"Key":"in front","Fragments":["(or","of"]},{"Key":"front (or","Fragments":["m_"]},{"Key":"(or m_","Fragments":["if"]},{"Key":"m_ if","Fragments":["you"]},{"Key":"are old-school).","Fragments":[":)"]},{"Key":"2. Constructor","Fragments":["should"]},{"Key":"Constructor should","Fragments":["probably"]},{"Key":"be on","Fragments":["multiple","the","the"]},{"Key":"on multiple","Fragments":["lines"]},{"Key":"multiple lines","Fragments":["(easier","down","of"]},{"Key":"lines (easier","Fragments":["to"]},{"Key":"(easier to","Fragments":["read)","access"]},{"Key":"to read)","Fragments":["and"]},{"Key":"read) and","Fragments":["might"]},{"Key":"and might","Fragments":["want","affect"]},{"Key":"better variable","Fragments":["name","names","name"]},{"Key":"do ToLower()","Fragments":["on"]},{"Key":"ToLower() on","Fragments":["origString","the","letter"]},{"Key":"on origString","Fragments":["outside"]},{"Key":"origString outside","Fragments":["the"]},{"Key":"foreach because","Fragments":["right","I"]},{"Key":"because right","Fragments":["now"]},{"Key":"right now","Fragments":["you"]},{"Key":"it every","Fragments":["time.","time","cycle."]},{"Key":"every time.","Fragments":["Could","If","If"]},{"Key":"time. Could","Fragments":["create"]},{"Key":"Could create","Fragments":["a"]},{"Key":"a origStringLower","Fragments":["variable"]},{"Key":"origStringLower variable","Fragments":["above"]},{"Key":"variable above","Fragments":["and"]},{"Key":"above and","Fragments":["use","say","the"]},{"Key":" @dorcas","Fragments":["OrderBy"]},{"Key":"@dorcas OrderBy","Fragments":["sorts"]},{"Key":"OrderBy sorts","Fragments":["by"]},{"Key":"sorts by","Fragments":["whatever","the"]},{"Key":"by whatever","Fragments":["is"]},{"Key":"whatever is","Fragments":["returned"]},{"Key":"is returned","Fragments":["by"]},{"Key":"returned by","Fragments":["the","the"]},{"Key":"the lambda.","Fragments":["Since","Finally","Just"]},{"Key":"lambda. Since","Fragments":["I"]},{"Key":"am returning","Fragments":["the"]},{"Key":"word that","Fragments":["was","can","it"]},{"Key":"was sent","Fragments":["as"]},{"Key":"sent as","Fragments":["the"]},{"Key":"the argument,","Fragments":["it"]},{"Key":"argument, it","Fragments":["sorts"]},{"Key":"it sorts","Fragments":["by"]},{"Key":"also thought","Fragments":["it","it"]},{"Key":"way around.","Fragments":["Maybe","Other"]},{"Key":"around. Maybe","Fragments":["they"]},{"Key":"Maybe they","Fragments":["backtracked"]},{"Key":"they backtracked","Fragments":["this,"]},{"Key":"backtracked this,","Fragments":["because"]},{"Key":"this, because","Fragments":["so"]},{"Key":"because so","Fragments":["few"]},{"Key":"so few","Fragments":["really"]},{"Key":"few really","Fragments":["cared?"]},{"Key":"really cared?","Fragments":["I"]},{"Key":"cared? I","Fragments":["never"]},{"Key":"Nice, straightforward","Fragments":["solution!"]},{"Key":" in","Fragments":["regards","the"]},{"Key":"in regards","Fragments":["to","of"]},{"Key":"regards to","Fragments":["@cordia's","array[0]","what"]},{"Key":"to @cordia's","Fragments":["comments."]},{"Key":"@cordia's comments.","Fragments":[".Add"]},{"Key":"comments. .Add","Fragments":["and"]},{"Key":".Add and","Fragments":["[]"]},{"Key":"and []","Fragments":["use"]},{"Key":"[] use","Fragments":["slighlty"]},{"Key":"use slighlty","Fragments":["different"]},{"Key":"slighlty different","Fragments":["semantics"]},{"Key":"different semantics","Fragments":["which"]},{"Key":"semantics which","Fragments":["produce"]},{"Key":"which produce","Fragments":["different"]},{"Key":"produce different","Fragments":["results,"]},{"Key":"different results,","Fragments":["although"]},{"Key":"results, although","Fragments":["not"]},{"Key":"although not","Fragments":["with"]},{"Key":"not with","Fragments":["any"]},{"Key":"with any","Fragments":["of","sanity"]},{"Key":"exercise. With","Fragments":["brackets"]},{"Key":"With brackets","Fragments":["you"]},{"Key":"brackets you","Fragments":["actually"]},{"Key":"you actually","Fragments":["overwrite","have","have"]},{"Key":"actually overwrite","Fragments":["data"]},{"Key":"overwrite data","Fragments":["if"]},{"Key":"data if","Fragments":["for"]},{"Key":"if for","Fragments":["existing"]},{"Key":"for existing","Fragments":["keys"]},{"Key":"existing keys","Fragments":["while"]},{"Key":"keys while","Fragments":[".Add"]},{"Key":"while .Add","Fragments":["throws"]},{"Key":".Add throws","Fragments":["an"]},{"Key":"throws an","Fragments":["exception.","exception","ArgumentNullException.","ArgumentException.","exception","exception.","exception","exception.","exception","exception","exception","exception"]},{"Key":"an exception.","Fragments":["It's","The","However,","If","You","Either","Either"]},{"Key":"exception. It's","Fragments":["unclear"]},{"Key":"It's unclear","Fragments":["what"]},{"Key":"unclear what","Fragments":["would"]},{"Key":"the desired","Fragments":["behavior","result","output"]},{"Key":"desired behavior","Fragments":["in"]},{"Key":"behavior in","Fragments":["this","a"]},{"Key":"this case.","Fragments":["In","It","The"]},{"Key":"case. In","Fragments":["real"]},{"Key":"real life","Fragments":["it"]},{"Key":"life it","Fragments":["would"]},{"Key":"be wise","Fragments":["to"]},{"Key":"wise to","Fragments":["consider"]},{"Key":"consider the","Fragments":["data","input","scenarios","costs"]},{"Key":"data as","Fragments":["unreliable"]},{"Key":"as unreliable","Fragments":["and"]},{"Key":"unreliable and","Fragments":["add"]},{"Key":"additional checks","Fragments":["for"]},{"Key":"for duplicated","Fragments":["or"]},{"Key":"duplicated or","Fragments":["erroneous"]},{"Key":"or erroneous","Fragments":["values."]},{"Key":"for ToLowerInvariant(),","Fragments":["I"]},{"Key":"ToLowerInvariant(), I","Fragments":["believe"]},{"Key":"it's the","Fragments":["right","best","ascii","6th","`%`","leading"]},{"Key":"right call","Fragments":["here"]},{"Key":"call here","Fragments":["since"]},{"Key":"here since","Fragments":["the","the","this","*the"]},{"Key":"exercise states","Fragments":["we"]},{"Key":"states we","Fragments":["have"]},{"Key":"have existing","Fragments":["data"]},{"Key":"existing data","Fragments":["that"]},{"Key":"data that","Fragments":["is"]},{"Key":"be converted.","Fragments":["You"]},{"Key":"converted. You","Fragments":["wouldn't"]},{"Key":"You wouldn't","Fragments":["really","have"]},{"Key":"wouldn't really","Fragments":["want"]},{"Key":"see, possibly,","Fragments":["differing"]},{"Key":"possibly, differing","Fragments":["results"]},{"Key":"differing results","Fragments":["just"]},{"Key":"results just","Fragments":["because"]},{"Key":"because different","Fragments":["regional"]},{"Key":"different regional","Fragments":["settings"]},{"Key":"regional settings","Fragments":["were"]},{"Key":"settings were","Fragments":["used."]},{"Key":"were used.","Fragments":["Although"]},{"Key":"used. Although","Fragments":["InvariantCulture"]},{"Key":"Although InvariantCulture","Fragments":["is"]},{"Key":"InvariantCulture is","Fragments":["possibly"]},{"Key":"correct choice","Fragments":["for"]},{"Key":"choice for","Fragments":["this","this,"]},{"Key":"this data,","Fragments":["but"]},{"Key":"data, but","Fragments":["there"]},{"Key":"no way","Fragments":["to"]},{"Key":"know in","Fragments":["this"]},{"Key":" IsYearEvenlyDivisibleBy","Fragments":["is"]},{"Key":"IsYearEvenlyDivisibleBy is","Fragments":["kind"]},{"Key":"of redundant.","Fragments":["You"]},{"Key":"redundant. You","Fragments":["are","can"]},{"Key":"simply changing","Fragments":["the"]},{"Key":"syntax from","Fragments":["#"]},{"Key":"from #","Fragments":["%"]},{"Key":"# to","Fragments":["IsYearEvenlyDivisibleBy(#,"]},{"Key":"to IsYearEvenlyDivisibleBy(#,","Fragments":["#)."]},{"Key":"IsYearEvenlyDivisibleBy(#, #).","Fragments":["You"]},{"Key":"#). You","Fragments":["also"]},{"Key":"second IsYearEvenlyDivisibleBy(year,","Fragments":["100)"]},{"Key":"IsYearEvenlyDivisibleBy(year, 100)","Fragments":["check"]},{"Key":"100) check","Fragments":["because"]},{"Key":"check because","Fragments":["that"]},{"Key":"because that","Fragments":["must","was","means","way"]},{"Key":"that must","Fragments":["already"]},{"Key":"must already","Fragments":["be"]},{"Key":"already be","Fragments":["true"]},{"Key":"be true","Fragments":["for","that","as"]},{"Key":"for !IsYearEvenlyDivisibleBy(year,","Fragments":["100)"]},{"Key":"!IsYearEvenlyDivisibleBy(year, 100)","Fragments":["not"]},{"Key":"100) not","Fragments":["to"]},{"Key":"to short","Fragments":["circuit."]},{"Key":" @jace","Fragments":["I"]},{"Key":"@jace I","Fragments":["understand,"]},{"Key":"I understand,","Fragments":["optimization","it"]},{"Key":"understand, optimization","Fragments":["is"]},{"Key":"optimization is","Fragments":["a"]},{"Key":"personal thing","Fragments":["and"]},{"Key":"not always","Fragments":["needed.","be","a","as"]},{"Key":"always needed.","Fragments":["The"]},{"Key":"needed. The","Fragments":["rest","constructor"]},{"Key":"this port","Fragments":["is"]},{"Key":"port is","Fragments":["just"]},{"Key":"a FYI.","Fragments":[":-)"]},{"Key":"The Any","Fragments":["function"]},{"Key":"Any function","Fragments":["is"]},{"Key":"there, even","Fragments":["though"]},{"Key":"though Visual","Fragments":["Studio"]},{"Key":"Studio doesn't","Fragments":["show"]},{"Key":"doesn't show","Fragments":["it"]},{"Key":"show it","Fragments":["with"]},{"Key":"the AutoCompletion.","Fragments":["It"]},{"Key":"AutoCompletion. It","Fragments":["is"]},{"Key":"a standard","Fragments":["Linq","library","response."]},{"Key":"standard Linq","Fragments":["function."]},{"Key":"Linq function.","Fragments":["Since"]},{"Key":"function. Since","Fragments":["a"]},{"Key":"Since a","Fragments":["string"]},{"Key":"string can","Fragments":["be","be","be"]},{"Key":"be treated","Fragments":["as","like","as","as","as","as","as"]},{"Key":"treated as","Fragments":["a","character","character","part","a","a","data."]},{"Key":"array, you","Fragments":["can"]},{"Key":"with it.","Fragments":["Thus",":)","Even"]},{"Key":"it. Thus","Fragments":["your"]},{"Key":"Thus your","Fragments":["line:"]},{"Key":"return message.ToUpper()","Fragments":["==","=="]},{"Key":"message.ToUpper() ==","Fragments":["message","message"]},{"Key":"== message","Fragments":["\u0026\u0026","\u0026\u0026","and"]},{"Key":"message \u0026\u0026","Fragments":["Regex.IsMatch(message,","message.Any(Char.IsLetter)"]},{"Key":"\u0026\u0026 Regex.IsMatch(message,","Fragments":["\"[a-zA-Z]\");"]},{"Key":" can","Fragments":["be","turn","still","combine"]},{"Key":" Give","Fragments":["it","some"]},{"Key":"Give it","Fragments":["a"]},{"Key":"a try,","Fragments":["it"]},{"Key":"try, it","Fragments":["works"]},{"Key":"works great","Fragments":["and","too.","!"]},{"Key":"great and","Fragments":["should"]},{"Key":"should run","Fragments":["a"]},{"Key":"run a","Fragments":["bit","bit"]},{"Key":"bit faster.","Fragments":[":-)"]},{"Key":"This wasn't","Fragments":["the"]},{"Key":"wasn't the","Fragments":["point"]},{"Key":"the exercise...","Fragments":["You"]},{"Key":"exercise... You","Fragments":["are"]},{"Key":"are supposed","Fragments":["to","to","to","to"]},{"Key":"to code","Fragments":["the","I've","and","this,","things"]},{"Key":"code the","Fragments":["IsLeapYear"]},{"Key":"IsLeapYear check","Fragments":["with"]},{"Key":"check with","Fragments":["your"]},{"Key":"own logic...","Fragments":[":)"]},{"Key":" @hyman","Fragments":["-"]},{"Key":"@hyman -","Fragments":["Thank"]},{"Key":"- Thank","Fragments":["you!"]},{"Key":"Thank you!","Fragments":["I'm"]},{"Key":"you! I'm","Fragments":["not"]},{"Key":"not aware","Fragments":["of","of"]},{"Key":"an \"Any\"","Fragments":["method"]},{"Key":"\"Any\" method","Fragments":["on"]},{"Key":"string, though","Fragments":["-"]},{"Key":"though -","Fragments":["it","I'm"]},{"Key":"not appear","Fragments":["to","to"]},{"Key":"a part","Fragments":["of","of","of","of","of"]},{"Key":"of C#'s","Fragments":["`string`"]},{"Key":"C#'s `string`","Fragments":["or"]},{"Key":"`string` or","Fragments":["`char`"]},{"Key":"or `char`","Fragments":["implementation,"]},{"Key":"`char` implementation,","Fragments":["at"]},{"Key":"implementation, at","Fragments":["least"]},{"Key":"least as","Fragments":["far"]},{"Key":"it possible","Fragments":["that","to","to"]},{"Key":"to `IndexOfAny()`?","Fragments":["If"]},{"Key":"`IndexOfAny()`? If","Fragments":["that"]},{"Key":"If that","Fragments":["is","is","was","weren't","is","is"]},{"Key":"the case,","Fragments":["I"]},{"Key":"case, I","Fragments":["could","have","viewed","would"]},{"Key":"could construct","Fragments":["a"]},{"Key":"a `char`","Fragments":["array"]},{"Key":"`char` array","Fragments":["of"]},{"Key":"every letter,","Fragments":["and"]},{"Key":"letter, and","Fragments":["pass"]},{"Key":"and pass","Fragments":["that","in","their","the"]},{"Key":"pass that","Fragments":["into","function"]},{"Key":"into `message.IndexOfAny()`,","Fragments":["and"]},{"Key":"`message.IndexOfAny()`, and","Fragments":["check"]},{"Key":"and check","Fragments":["that","out","against","whether","the","it"]},{"Key":" However,","Fragments":["I","I","overkill","I","wouldn't","if"]},{"Key":"would find","Fragments":["that","out","a"]},{"Key":"that implementation","Fragments":["less"]},{"Key":"implementation less","Fragments":["elegant"]},{"Key":"less elegant","Fragments":["than"]},{"Key":"than using","Fragments":["Regex","these","linq","Regex.","Regex.","List\u003cbool\u003e","String.Split","it","a","simple","the","var.","(var","a","the"]},{"Key":"using Regex","Fragments":["in","to"]},{"Key":"Regex in","Fragments":["this","mine."]},{"Key":"particular case,","Fragments":["and"]},{"Key":"case, and","Fragments":["I"]},{"Key":"am also","Fragments":["not","not","pretty"]},{"Key":"very worried","Fragments":["about"]},{"Key":"worried about","Fragments":["optimizing","them."]},{"Key":"about optimizing","Fragments":["performance"]},{"Key":"optimizing performance","Fragments":["at"]},{"Key":"performance at","Fragments":["that"]},{"Key":"that level","Fragments":["-"]},{"Key":"level -","Fragments":["unless"]},{"Key":"- unless","Fragments":["we"]},{"Key":"unless we","Fragments":["decide"]},{"Key":"we decide","Fragments":["to","that,"]},{"Key":"give an","Fragments":["entire","empty","example"]},{"Key":"entire monologue","Fragments":["to"]},{"Key":"monologue to","Fragments":["Bob,"]},{"Key":"Bob, perhaps.","Fragments":[":)"]},{"Key":"Valid point.","Fragments":["It"]},{"Key":"point. It","Fragments":["actually","passes"]},{"Key":"It actually","Fragments":["allows"]},{"Key":"actually allows","Fragments":["for"]},{"Key":"allows for","Fragments":["easier","extra"]},{"Key":"for easier","Fragments":["debugging","reading","reading"]},{"Key":"easier debugging","Fragments":["too"]},{"Key":"debugging too","Fragments":["in"]},{"Key":"too in","Fragments":["a"]},{"Key":"a IDE","Fragments":["like"]},{"Key":"IDE like","Fragments":["Visual"]},{"Key":"like Visual","Fragments":["Studio"]},{"Key":"Studio where","Fragments":["you"]},{"Key":"could examine","Fragments":["the"]},{"Key":"examine the","Fragments":["statement"]},{"Key":"that resulted","Fragments":["in"]},{"Key":"resulted in","Fragments":["a"]},{"Key":"value. Here","Fragments":["a"]},{"Key":"Here a","Fragments":["short"]},{"Key":"circuit will","Fragments":["likely"]},{"Key":"will likely","Fragments":["never","cause","be"]},{"Key":"likely never","Fragments":["be"]},{"Key":"be noticed","Fragments":["when"]},{"Key":"noticed when","Fragments":["debugging"]},{"Key":"when debugging","Fragments":["over"]},{"Key":"debugging over","Fragments":["this"]},{"Key":"over this","Fragments":["line.","exercise"]},{"Key":" Either","Fragments":["ways,"]},{"Key":"Either ways,","Fragments":["I"]},{"Key":"ways, I","Fragments":["suppose"]},{"Key":"suppose this","Fragments":["a","isn't"]},{"Key":"fairly trivial","Fragments":["point.","examples"]},{"Key":"are arguments","Fragments":["both"]},{"Key":"arguments both","Fragments":["ways"]},{"Key":"both ways","Fragments":["in","being"]},{"Key":"ways in","Fragments":["the"]},{"Key":"single exit","Fragments":["point","point","point"]},{"Key":"exit point","Fragments":["debate.","actually","is","would"]},{"Key":"point debate.","Fragments":["When"]},{"Key":"debate. When","Fragments":["methods"]},{"Key":"When methods","Fragments":["are"]},{"Key":"are long,","Fragments":["it"]},{"Key":"long, it","Fragments":["can"]},{"Key":"method confusing","Fragments":["and"]},{"Key":"confusing and","Fragments":["difficult"]},{"Key":"and difficult","Fragments":["to","to"]},{"Key":"read. In","Fragments":["short","this","this"]},{"Key":"In short","Fragments":["methods"]},{"Key":"this however,","Fragments":["a"]},{"Key":"however, a","Fragments":["single"]},{"Key":"point actually","Fragments":["makes"]},{"Key":"actually makes","Fragments":["it","it"]},{"Key":"it hard","Fragments":["to"]},{"Key":"read. Compare","Fragments":["this"]},{"Key":"Compare this","Fragments":["method"]},{"Key":"to some","Fragments":["of","poorly","of"]},{"Key":"other submissions","Fragments":["that","of","and","-","I","and","to","to","and"]},{"Key":"submissions that","Fragments":["follow"]},{"Key":"that follow","Fragments":["the","us."]},{"Key":"follow the","Fragments":["single-exit","same","intent","\"rules\"","thought","first"]},{"Key":"the single-exit","Fragments":["point"]},{"Key":"point law.","Fragments":["Which"]},{"Key":"law. Which","Fragments":["is"]},{"Key":"Which is","Fragments":["easier","what"]},{"Key":" Code","Fragments":["is","should","review"]},{"Key":"Code is","Fragments":["great,"]},{"Key":"is great,","Fragments":["but","but"]},{"Key":"great, but","Fragments":["try","why","my","why"]},{"Key":"but try","Fragments":["to","and"]},{"Key":"to normalize","Fragments":["whitespace"]},{"Key":"normalize whitespace","Fragments":["(indentation"]},{"Key":"whitespace (indentation","Fragments":["and"]},{"Key":"(indentation and","Fragments":["spaces"]},{"Key":"and spaces","Fragments":["around"]},{"Key":"Thank for","Fragments":["the"]},{"Key":"the tip,","Fragments":["yes,"]},{"Key":"tip, yes,","Fragments":["you"]},{"Key":"yes, you","Fragments":["are"]},{"Key":"are right,","Fragments":["the","me","string","using","it"]},{"Key":"the Select","Fragments":["call","from","linq","functions,","statement."]},{"Key":"Select call","Fragments":["is"]},{"Key":"redundant. Will","Fragments":["make"]},{"Key":"Will make","Fragments":["change."]},{"Key":"else clauses","Fragments":["are","on","on","in","on"]},{"Key":"clauses are","Fragments":["totally","a"]},{"Key":"are totally","Fragments":["unnecessary."]},{"Key":"totally unnecessary.","Fragments":["Anything"]},{"Key":"unnecessary. Anything","Fragments":["that"]},{"Key":"Anything that","Fragments":["happens","happens","happens","happens","would","happens"]},{"Key":"that happens","Fragments":["after","after","after","after","after","after","after","after"]},{"Key":"happens after","Fragments":["a","a","a","an","a","a","it","it"]},{"Key":"statement will","Fragments":["only","only","fail","only","only","add"]},{"Key":"only execute","Fragments":["if","if","if","if","when","if"]},{"Key":"condition was","Fragments":["false,"]},{"Key":"was false,","Fragments":["so"]},{"Key":"false, so","Fragments":["it","the","the"]},{"Key":"needed. Removing","Fragments":["that"]},{"Key":"Removing that","Fragments":["will"]},{"Key":"will shrink","Fragments":["your"]},{"Key":"shrink your","Fragments":["code"]},{"Key":"didn't choose","Fragments":["to"]},{"Key":"choose to","Fragments":["go","have","use","have","scan","break"]},{"Key":"go down","Fragments":["the","that"]},{"Key":"the Regex","Fragments":["path","with","\\w","constructor.","and"]},{"Key":"Regex path","Fragments":["here,"]},{"Key":"path here,","Fragments":["but"]},{"Key":"certainly a","Fragments":["viable"]},{"Key":"a viable","Fragments":["solution."]},{"Key":"viable solution.","Fragments":["I"]},{"Key":"solution. I","Fragments":["went","didn't","think","might"]},{"Key":"with Linq,","Fragments":["as","so","so"]},{"Key":"Linq, as","Fragments":["I"]},{"Key":"less heavy","Fragments":["and"]},{"Key":"heavy and","Fragments":["more"]},{"Key":"readable. But","Fragments":["that","documented"]},{"Key":"But that","Fragments":["is","don't","was"]},{"Key":" Yep,","Fragments":["try","you"]},{"Key":"Yep, try","Fragments":["to"]},{"Key":"multiple returns.","Fragments":[":)"]},{"Key":"probably only","Fragments":["style"]},{"Key":"only style","Fragments":["preference,"]},{"Key":"style preference,","Fragments":["but","but"]},{"Key":"usually avoid","Fragments":["using"]},{"Key":"using \"this\"","Fragments":["except"]},{"Key":"\"this\" except","Fragments":["in"]},{"Key":"in constructors","Fragments":["or"]},{"Key":"constructors or","Fragments":["if"]},{"Key":"and parameter","Fragments":["are"]},{"Key":"parameter are","Fragments":["close"]},{"Key":"are close","Fragments":["in"]},{"Key":"close in","Fragments":["name."]},{"Key":"the IsSilent","Fragments":["check,"]},{"Key":"IsSilent check,","Fragments":["you"]},{"Key":"check, you","Fragments":["could"]},{"Key":"could actually","Fragments":["just","be"]},{"Key":"actually just","Fragments":["return"]},{"Key":"method should","Fragments":["react","have","know"]},{"Key":"should react","Fragments":["if"]},{"Key":"react if","Fragments":["it"]},{"Key":"is given","Fragments":["the"]},{"Key":"zero or","Fragments":["a","negative.","NOT"]},{"Key":"was wrong","Fragments":["about"]},{"Key":"wrong about","Fragments":["the"]},{"Key":"the delegate,","Fragments":["I"]},{"Key":"delegate, I","Fragments":["had"]},{"Key":"had just","Fragments":["misread","done","finished","brute","done"]},{"Key":"just misread","Fragments":["your"]},{"Key":"misread your","Fragments":["code"]},{"Key":"as assigning","Fragments":["the"]},{"Key":"assigning the","Fragments":["value","result"]},{"Key":"value to","Fragments":["a","'A'","'A'","construct","the","your","avoid","Number","0","the","Number."]},{"Key":"variable, so","Fragments":["always"]},{"Key":"so always","Fragments":["doing"]},{"Key":"always doing","Fragments":["all"]},{"Key":" Thing","Fragments":["is"]},{"Key":"Thing is","Fragments":["with"]},{"Key":"the Decimal,","Fragments":["all"]},{"Key":"Decimal, all","Fragments":["the"]},{"Key":"other types","Fragments":["are"]},{"Key":"are `int`,","Fragments":["and"]},{"Key":"`int`, and","Fragments":["suddenly"]},{"Key":"and suddenly","Fragments":["you"]},{"Key":"suddenly you","Fragments":["are"]},{"Key":"are comparing","Fragments":["to"]},{"Key":"comparing to","Fragments":["a","a","`0`","an"]},{"Key":"a Decimal...","Fragments":["I"]},{"Key":"Decimal... I","Fragments":["have"]},{"Key":"about is","Fragments":["there","spreading"]},{"Key":"cast here?","Fragments":["is"]},{"Key":"here? is","Fragments":["there"]},{"Key":"a side","Fragments":["effect","(try","of","effect"]},{"Key":"side effect","Fragments":["from","which","in"]},{"Key":"effect from","Fragments":["comparing"]},{"Key":"from comparing","Fragments":["to"]},{"Key":"a decimal?","Fragments":["I"]},{"Key":"decimal? I","Fragments":["may"]},{"Key":"be sure...","Fragments":["comparing"]},{"Key":"sure... comparing","Fragments":["to"]},{"Key":"to `0`","Fragments":["is"]},{"Key":"`0` is","Fragments":["normal"]},{"Key":"is normal","Fragments":["in"]},{"Key":"normal in","Fragments":["all"]},{"Key":"in all","Fragments":["code","I","this.","the","cases.","cases.","12.","on","these"]},{"Key":"all code","Fragments":["I"]},{"Key":"see (in","Fragments":["fact"]},{"Key":"(in fact","Fragments":["I"]},{"Key":"had not","Fragments":["chanced","known","thought","already","run","encountered","specified"]},{"Key":"not chanced","Fragments":["across"]},{"Key":"chanced across","Fragments":["`Decimal.Zero`"]},{"Key":"across `Decimal.Zero`","Fragments":["before"]},{"Key":"`Decimal.Zero` before","Fragments":["a"]},{"Key":"different submission","Fragments":["on"]},{"Key":"submission on","Fragments":["this","this"]},{"Key":"say I","Fragments":["really","did"]},{"Key":"may change","Fragments":["the"]},{"Key":"the `x`","Fragments":["variable"]},{"Key":"`x` variable","Fragments":["to"]},{"Key":"to `year`","Fragments":["just"]},{"Key":"`year` just","Fragments":["for"]},{"Key":"for extra","Fragments":["clarity.","explanation"]},{"Key":"Any other","Fragments":["method"]},{"Key":"other method","Fragments":["you","calls","would"]},{"Key":"method you","Fragments":["use","have","could","could","could"]},{"Key":"use will","Fragments":["be","be"]},{"Key":"be iterating","Fragments":["through","over"]},{"Key":"the arrays","Fragments":["with"]},{"Key":"arrays with","Fragments":["a"]},{"Key":"for loop","Fragments":["under","condition.","through","with","instead","or","(YMMV)","was","indexes","and","indexes","but","required.","when","when","from","when","into","from","-","for","runs","is","in","in","replace","in","for","(2","can","not"]},{"Key":"loop under","Fragments":["the"]},{"Key":"under the","Fragments":["hood,","first,","impression","impression","condition","rug.","hood","assumption"]},{"Key":"the hood,","Fragments":["so"]},{"Key":"hood, so","Fragments":["you"]},{"Key":"can't get","Fragments":["more","the","the","Nunit"]},{"Key":"get more","Fragments":["efficient","complicated,"]},{"Key":"efficient than","Fragments":["this.","iter4","just","just","it","comparison","number","Math.Pow","using"]},{"Key":" Two","Fragments":["minor","ways;","nitpicks."]},{"Key":"Two minor","Fragments":["nitpicks."]},{"Key":"minor nitpicks.","Fragments":["First,","I"]},{"Key":"nitpicks. First,","Fragments":["I"]},{"Key":"First, I","Fragments":["agree","needed"]},{"Key":"with @amparo","Fragments":["in"]},{"Key":"@amparo in","Fragments":["the"]},{"Key":"of ElementAt.","Fragments":["Using"]},{"Key":"ElementAt. Using","Fragments":["the"]},{"Key":"square bracket","Fragments":["to"]},{"Key":"bracket to","Fragments":["index"]},{"Key":"to index","Fragments":["the","into","into"]},{"Key":"index the","Fragments":["string"]},{"Key":"more commonly","Fragments":["used"]},{"Key":"commonly used","Fragments":["and"]},{"Key":"used and","Fragments":["expected,","probably","how"]},{"Key":"and expected,","Fragments":["so"]},{"Key":"expected, so","Fragments":["it"]},{"Key":" Second,","Fragments":["I","Count","the"]},{"Key":"Second, I","Fragments":["would"]},{"Key":"would recommend","Fragments":["the","having","using"]},{"Key":"recommend the","Fragments":["use","C#"]},{"Key":"the Math.Min","Fragments":["function","method."]},{"Key":"Math.Min function","Fragments":["instead"]},{"Key":"ternary operator.","Fragments":["It","I","This","It's"]},{"Key":"operator. It","Fragments":["makes"]},{"Key":"read what","Fragments":["your"]},{"Key":"your intention","Fragments":["is.","from","-"]},{"Key":"the rule","Fragments":["(even","of","that"]},{"Key":"rule (even","Fragments":["if"]},{"Key":"few exception).","Fragments":["That"]},{"Key":"exception). That","Fragments":["said,"]},{"Key":"said, this","Fragments":["is"]},{"Key":"exception. The","Fragments":["components"]},{"Key":"The components","Fragments":["(is"]},{"Key":"components (is","Fragments":["the"]},{"Key":"(is the","Fragments":["year","year"]},{"Key":"400, divisible","Fragments":["by"]},{"Key":"100, divisible","Fragments":["by"]},{"Key":"by 4)","Fragments":["should"]},{"Key":"4) should","Fragments":["be"]},{"Key":"be calulated","Fragments":["and"]},{"Key":"calulated and","Fragments":["determined"]},{"Key":"and determined","Fragments":["early."]},{"Key":"determined early.","Fragments":["Even"]},{"Key":"early. Even","Fragments":["though"]},{"Key":"Even though","Fragments":["you","it's"]},{"Key":"an inline","Fragments":["if,"]},{"Key":"inline if,","Fragments":["it"]},{"Key":"if, it","Fragments":["is"]},{"Key":"is difficult","Fragments":["to","(unless"]},{"Key":"read even","Fragments":["for"]},{"Key":"even for","Fragments":["the","this"]},{"Key":"author a","Fragments":["year"]},{"Key":"year from","Fragments":["now."]},{"Key":"from now.","Fragments":["My"]},{"Key":"now. My","Fragments":["rule"]},{"Key":"My rule","Fragments":["is"]},{"Key":"rule is","Fragments":["to"]},{"Key":"the like","Fragments":["terms"]},{"Key":"like terms","Fragments":["together"]},{"Key":"terms together","Fragments":["and","at"]},{"Key":"then bring","Fragments":["all"]},{"Key":"bring all","Fragments":["the"]},{"Key":"together at","Fragments":["the"]},{"Key":"end for","Fragments":["a"]},{"Key":"single end","Fragments":["point"]},{"Key":"I'm quite","Fragments":["convinced","unsure"]},{"Key":"convinced not","Fragments":["all"]},{"Key":"all likes","Fragments":["one"]},{"Key":"likes one","Fragments":["liner"]},{"Key":"liner conditional","Fragments":["operators"]},{"Key":"operators as","Fragments":["an","they"]},{"Key":"an answer.","Fragments":["So"]},{"Key":"answer. So","Fragments":["a"]},{"Key":"So a","Fragments":["neat"]},{"Key":"neat way","Fragments":["to"]},{"Key":"be descriptive","Fragments":["in"]},{"Key":"descriptive in","Fragments":["each"]},{"Key":"each leap","Fragments":["year"]},{"Key":"test in","Fragments":["the","your"]},{"Key":"of variables","Fragments":["of","for","is"]},{"Key":"variables of","Fragments":["type"]},{"Key":"type `Func\u003cT\u003e`","Fragments":["in"]},{"Key":"`Func\u003cT\u003e` in","Fragments":["this"]},{"Key":"problem. Achieving","Fragments":["both"]},{"Key":"Achieving both","Fragments":["naming"]},{"Key":"both naming","Fragments":["and"]},{"Key":"putting numeric","Fragments":["values"]},{"Key":"values into","Fragments":["a","a"]},{"Key":"a readonly","Fragments":["variable.","list.","list.","list"]},{"Key":"readonly variable.","Fragments":["Some"]},{"Key":"variable. Some","Fragments":["might"]},{"Key":"Some might","Fragments":["wonder"]},{"Key":"might wonder","Fragments":["why"]},{"Key":"use `Decimal.Zero`.","Fragments":["The"]},{"Key":"`Decimal.Zero`. The","Fragments":["reason"]},{"Key":"reason being","Fragments":["is","that"]},{"Key":"being is","Fragments":["it's"]},{"Key":"is it's","Fragments":["for"]},{"Key":"for convenience","Fragments":["purposes"]},{"Key":"convenience purposes","Fragments":["since"]},{"Key":"purposes since","Fragments":[".net"]},{"Key":"since .net","Fragments":["already"]},{"Key":".net already","Fragments":["offered"]},{"Key":"already offered","Fragments":["`0`"]},{"Key":"offered `0`","Fragments":["a"]},{"Key":"`0` a","Fragments":["name."]},{"Key":" @walton","Fragments":["A"]},{"Key":"@walton A","Fragments":["zero"]},{"Key":"A zero","Fragments":["value,"]},{"Key":"zero value,","Fragments":["even"]},{"Key":"value, even","Fragments":["when"]},{"Key":"even when","Fragments":["assigned","just","the","the","you","not","the","the"]},{"Key":"when assigned","Fragments":["to"]},{"Key":"assigned to","Fragments":["any","a"]},{"Key":"to any","Fragments":["numeric","base."]},{"Key":"any numeric","Fragments":["data"]},{"Key":"numeric data","Fragments":["type"]},{"Key":"data type","Fragments":["is","of","is"]},{"Key":"is zero.","Fragments":["Nothing"]},{"Key":"zero. Nothing","Fragments":["surprising"]},{"Key":"Nothing surprising","Fragments":["about"]},{"Key":"surprising about","Fragments":["that."]},{"Key":"about that.","Fragments":["And","Of","Checking","Thanks."]},{"Key":"that. And","Fragments":["with"]},{"Key":"And with","Fragments":["Principle"]},{"Key":"with Principle","Fragments":["of"]},{"Key":"Principle of","Fragments":["Least"]},{"Key":"of Least","Fragments":["Astonishment,"]},{"Key":"Least Astonishment,","Fragments":["if"]},{"Key":"Astonishment, if","Fragments":["you"]},{"Key":"to its","Fragments":["basic","own","own","ToLower"]},{"Key":"its basic","Fragments":["idea,"]},{"Key":"basic idea,","Fragments":["it"]},{"Key":"idea, it","Fragments":["would","is"]},{"Key":"would tell","Fragments":["you","you"]},{"Key":"tell you","Fragments":["that","other","the","what","to","what"]},{"Key":"you that","Fragments":["your","you",";-)","your"]},{"Key":"your expectation","Fragments":["should"]},{"Key":"expectation should","Fragments":["not"]},{"Key":"not get","Fragments":["in","it","mutated","you"]},{"Key":"way with","Fragments":["your"]},{"Key":"your experience.","Fragments":["Would","However,"]},{"Key":"experience. Would","Fragments":["you"]},{"Key":"you suggest","Fragments":["putting","it"]},{"Key":"suggest putting","Fragments":["more"]},{"Key":"putting more","Fragments":["thought"]},{"Key":"more thought","Fragments":["if","out"]},{"Key":"thought if","Fragments":["0"]},{"Key":"if 0","Fragments":["is"]},{"Key":"really equal","Fragments":["to"]},{"Key":"to 0?","Fragments":["Would"]},{"Key":"0? Would","Fragments":["you"]},{"Key":"to elaborate","Fragments":["what"]},{"Key":"elaborate what","Fragments":["hindered"]},{"Key":"what hindered","Fragments":["you"]},{"Key":"hindered you","Fragments":["from"]},{"Key":"you from","Fragments":["expecting"]},{"Key":"from expecting","Fragments":["that"]},{"Key":"expecting that","Fragments":["Decimal.Zero"]},{"Key":"that Decimal.Zero","Fragments":["is"]},{"Key":"not 0?","Fragments":["Also,"]},{"Key":"0? Also,","Fragments":["would"]},{"Key":"would like","Fragments":["to","to","to","to","to...","to","to","to"]},{"Key":"hear why","Fragments":["you"]},{"Key":"think defining","Fragments":["a"]},{"Key":"defining a","Fragments":["delegate"]},{"Key":"a delegate","Fragments":["is","constructor","lazy?"]},{"Key":"delegate is","Fragments":["a"]},{"Key":"a \"bit","Fragments":["wasteful\"."]},{"Key":"can mark","Fragments":["the"]},{"Key":"as public","Fragments":["while","members"]},{"Key":"public while","Fragments":["marking"]},{"Key":"while marking","Fragments":["the"]},{"Key":"marking the","Fragments":["methods"]},{"Key":"methods as","Fragments":["static.","you"]},{"Key":"static. While","Fragments":["it"]},{"Key":"really barely","Fragments":["matters,"]},{"Key":"barely matters,","Fragments":["the"]},{"Key":"matters, the","Fragments":["general"]},{"Key":"the general","Fragments":["style","usage","shape","shape"]},{"Key":"general style","Fragments":["of"]},{"Key":"style of","Fragments":["C#"]},{"Key":"of C#","Fragments":["code","--"]},{"Key":"code seems","Fragments":["to"]},{"Key":"use static","Fragments":["classes"]},{"Key":"static classes","Fragments":["very","inside","were","probably"]},{"Key":"classes very","Fragments":["much,"]},{"Key":"very much,","Fragments":["it","but"]},{"Key":"much, it","Fragments":["seems"]},{"Key":"in VB","Fragments":["developers"]},{"Key":"VB developers","Fragments":["(modules"]},{"Key":"developers (modules","Fragments":["is"]},{"Key":"(modules is","Fragments":["the"]},{"Key":"While I","Fragments":["understand","use","think","do","understand","could","personally","have"]},{"Key":"understand that","Fragments":["using","some"]},{"Key":"that using","Fragments":["Interfaces","the","a","the","the"]},{"Key":"using Interfaces","Fragments":["here"]},{"Key":"Interfaces here","Fragments":["could"]},{"Key":"here could","Fragments":["potentially"]},{"Key":"potentially help,","Fragments":["in"]},{"Key":"help, in","Fragments":["this"]},{"Key":"scenario, you","Fragments":["are"]},{"Key":"only ever","Fragments":["returning","have","need","be","be"]},{"Key":"ever returning","Fragments":["a"]},{"Key":"single string.","Fragments":["This"]},{"Key":"string. This","Fragments":["is"]},{"Key":"is greatly","Fragments":["increasing"]},{"Key":"greatly increasing","Fragments":["the"]},{"Key":"increasing the","Fragments":["complexity","number","complexity","ability"]},{"Key":"for little","Fragments":["in","exercises"]},{"Key":"little in","Fragments":["return."]},{"Key":"in return.","Fragments":["You"]},{"Key":"return. You","Fragments":["are"]},{"Key":"are also","Fragments":["newing","right","divisible","a"]},{"Key":"also newing","Fragments":["up"]},{"Key":"newing up","Fragments":["new"]},{"Key":"up new","Fragments":["classes"]},{"Key":"new classes","Fragments":["just"]},{"Key":"classes just","Fragments":["to"]},{"Key":"the hard-coded","Fragments":["string,"]},{"Key":"hard-coded string,","Fragments":["using"]},{"Key":"string, using","Fragments":["more"]},{"Key":"more memory.","Fragments":["If"]},{"Key":"memory. If","Fragments":["we"]},{"Key":"If we","Fragments":["were","change","are","set","provided","place"]},{"Key":"were returning","Fragments":["at"]},{"Key":"returning at","Fragments":["least"]},{"Key":"least 2","Fragments":["different","letter"]},{"Key":"2 different","Fragments":["properties"]},{"Key":"different properties","Fragments":["worth"]},{"Key":"properties worth","Fragments":["of"]},{"Key":"worth of","Fragments":["data,"]},{"Key":"of data,","Fragments":["this"]},{"Key":"data, this","Fragments":["code","would","would","would","would","would","would","would","would","would","would","would","would","would","would","would"]},{"Key":"me. :)","Fragments":["I"]},{"Key":"guess you","Fragments":["could"]},{"Key":"could say","Fragments":["you"]},{"Key":"say you","Fragments":["are","need","make"]},{"Key":"are preparing","Fragments":["it"]},{"Key":"preparing it","Fragments":["this"]},{"Key":"way now","Fragments":["so"]},{"Key":"now so","Fragments":["you","you"]},{"Key":"easily add","Fragments":["on","additional"]},{"Key":"add on","Fragments":["later,"]},{"Key":"on later,","Fragments":["but"]},{"Key":"later, but","Fragments":["that"]},{"Key":"have refactored","Fragments":["later."]},{"Key":"refactored later.","Fragments":[":)"]},{"Key":"like my","Fragments":["approach","original","current"]},{"Key":"my approach","Fragments":["here","to","is"]},{"Key":"approach here","Fragments":["as"]},{"Key":"as Line","Fragments":["10"]},{"Key":"Line 10","Fragments":["pretty"]},{"Key":"10 pretty","Fragments":["much"]},{"Key":"much explains","Fragments":["verbally"]},{"Key":"explains verbally","Fragments":["what's"]},{"Key":"verbally what's","Fragments":["going"]},{"Key":"going on:","Fragments":["count"]},{"Key":"on: count","Fragments":["the"]},{"Key":"the elements","Fragments":["that","in","in"]},{"Key":"elements that","Fragments":["differ"]},{"Key":"that differ","Fragments":["between","by"]},{"Key":"differ between","Fragments":["sequenceA"]},{"Key":"between sequenceA","Fragments":["and"]},{"Key":"sequenceA and","Fragments":["sequenceB."]},{"Key":"One line","Fragments":["ifs"]},{"Key":"line ifs","Fragments":["are"]},{"Key":"ifs are","Fragments":["a","redundant"]},{"Key":"personal thing.","Fragments":["I"]},{"Key":"they're ok,","Fragments":["obviously"]},{"Key":"ok, obviously","Fragments":["other"]},{"Key":"obviously other","Fragments":["people"]},{"Key":"people don't.","Fragments":["Just"]},{"Key":"don't. Just","Fragments":["pick"]},{"Key":"Just pick","Fragments":["a","one"]},{"Key":"and stick","Fragments":["with","with"]},{"Key":"do agree","Fragments":["on"]},{"Key":"agree on","Fragments":["the","the","breaking"]},{"Key":"var thing,","Fragments":["though."]},{"Key":"thing, though.","Fragments":["Using"]},{"Key":"though. Using","Fragments":["int"]},{"Key":"Using int","Fragments":["has"]},{"Key":"int has","Fragments":["the"]},{"Key":"same number","Fragments":["of","of"]},{"Key":"letters. Nothing","Fragments":["is"]},{"Key":"Nothing is","Fragments":["gained"]},{"Key":"is gained","Fragments":["from"]},{"Key":"gained from","Fragments":["using"]},{"Key":"using var,","Fragments":["and","but"]},{"Key":"var, and","Fragments":["it"]},{"Key":"between using","Fragments":["inbuilt"]},{"Key":"using inbuilt","Fragments":[".NET"]},{"Key":"inbuilt .NET","Fragments":["libraries"]},{"Key":".NET libraries","Fragments":["and"]},{"Key":"libraries and","Fragments":["my"]},{"Key":"own algorithm","Fragments":["when"]},{"Key":"algorithm when","Fragments":["appropiate."]},{"Key":"when appropiate.","Fragments":["Some"]},{"Key":"appropiate. Some","Fragments":["functions,"]},{"Key":"Some functions,","Fragments":["such"]},{"Key":"functions, such","Fragments":["as"]},{"Key":"such as","Fragments":["trim,","KeyValuePair()","'X'","EndsWith(string).","that.","System.ArgumentException.","string","a",".Net.","case-insensitivity."]},{"Key":"as trim,","Fragments":["IsUpper,"]},{"Key":"trim, IsUpper,","Fragments":["IsLetter"]},{"Key":"IsUpper, IsLetter","Fragments":["and"]},{"Key":"IsLetter and","Fragments":["IsNumber"]},{"Key":"and IsNumber","Fragments":["are"]},{"Key":"IsNumber are","Fragments":["the"]},{"Key":"the functions","Fragments":["in","is"]},{"Key":"it best","Fragments":["to"]},{"Key":"best to","Fragments":["use","catch","store","start"]},{"Key":"these inbuilt","Fragments":["functions"]},{"Key":"inbuilt functions","Fragments":["because"]},{"Key":"functions because","Fragments":["of"]},{"Key":"of .NET","Fragments":["strings","ignores"]},{"Key":".NET strings","Fragments":["being"]},{"Key":"strings being","Fragments":["unicode"]},{"Key":"being unicode","Fragments":["by"]},{"Key":"unicode by","Fragments":["default."]},{"Key":"by default.","Fragments":["If"]},{"Key":"default. If","Fragments":["it"]},{"Key":"was ASCII,","Fragments":["I"]},{"Key":"ASCII, I","Fragments":["could"]},{"Key":"char to","Fragments":["int","an"]},{"Key":"int comparison","Fragments":["(e.g."]},{"Key":"comparison (e.g.","Fragments":["if"]},{"Key":"(e.g. if","Fragments":["(int)c"]},{"Key":"if (int)c","Fragments":["\u003c"]},{"Key":"(int)c \u003c","Fragments":["122"]},{"Key":"\u003c 122","Fragments":["for"]},{"Key":"122 for","Fragments":["checking"]},{"Key":"char was","Fragments":["a"]},{"Key":"Im also","Fragments":["sure"]},{"Key":"also sure","Fragments":["theres"]},{"Key":"sure theres","Fragments":["a"]},{"Key":"theres a","Fragments":["better"]},{"Key":"using these","Fragments":["if"]},{"Key":"these if","Fragments":["statements"]},{"Key":"the loop","Fragments":["as","within","wasn't","variables.","twice","again","(in","as","would","using","where","is","inside","body","early","should","in","in","reruns","to","is","you","per","construct."]},{"Key":"loop as","Fragments":["well","early"]},{"Key":" Still","Fragments":["please","slightly","pushing","the","an","yet","i","you","somewhat","difficult","missing","potential","confusing","a","like","think","issues"]},{"Key":"Still please","Fragments":["name"]},{"Key":"please name","Fragments":["your"]},{"Key":"your variables","Fragments":["to","`modX`"]},{"Key":"variables to","Fragments":["help","be","accurately","make"]},{"Key":"future maintainers","Fragments":["to"]},{"Key":"maintainers to","Fragments":["understand"]},{"Key":"understand your","Fragments":["code!"]},{"Key":" @ansel","Fragments":["So"]},{"Key":"@ansel So","Fragments":["\"_\""]},{"Key":"So \"_\"","Fragments":["is"]},{"Key":"\"_\" is","Fragments":["falling"]},{"Key":"is falling","Fragments":["out"]},{"Key":"falling out","Fragments":["of"]},{"Key":"of favor?","Fragments":["I"]},{"Key":"favor? I","Fragments":["find"]},{"Key":"bit disappointing","Fragments":["because"]},{"Key":"disappointing because","Fragments":["you"]},{"Key":"to distinguish","Fragments":["between"]},{"Key":"distinguish between","Fragments":["class/local"]},{"Key":"between class/local","Fragments":["variables"]},{"Key":"class/local variables","Fragments":["at"]},{"Key":"variables at","Fragments":["a","that"]},{"Key":"a glance","Fragments":["(Unless"]},{"Key":"glance (Unless","Fragments":["I"]},{"Key":"(Unless I","Fragments":["suppose"]},{"Key":"suppose all","Fragments":["class"]},{"Key":"all class","Fragments":["level"]},{"Key":"class level","Fragments":["variables","variables","variables","variable","variables."]},{"Key":"level variables","Fragments":["have","in","public."]},{"Key":"variables have","Fragments":["\"this\""]},{"Key":"have \"this\"","Fragments":["in"]},{"Key":"in front.","Fragments":["Plus,"]},{"Key":"front. Plus,","Fragments":["finding"]},{"Key":"Plus, finding","Fragments":["class"]},{"Key":"finding class","Fragments":["level"]},{"Key":"in intellisense","Fragments":["is",":)"]},{"Key":"intellisense is","Fragments":["much"]},{"Key":"easier that","Fragments":["way."]},{"Key":" Separated","Fragments":["out","classes"]},{"Key":"Separated out","Fragments":["part"]},{"Key":"out part","Fragments":["of"]},{"Key":"process into","Fragments":["a"]},{"Key":"to aid","Fragments":["readability"]},{"Key":"The breakdown","Fragments":["of"]},{"Key":"breakdown of","Fragments":["functions"]},{"Key":"of functions","Fragments":["is","that"]},{"Key":"functions is","Fragments":["very","\"not"]},{"Key":"well done!","Fragments":["For"]},{"Key":"done! For","Fragments":["`IsYelling`,"]},{"Key":"For `IsYelling`,","Fragments":["here"]},{"Key":"`IsYelling`, here","Fragments":["are"]},{"Key":"here are","Fragments":["some","the"]},{"Key":"some improvements","Fragments":["you"]},{"Key":"improvements you","Fragments":["can"]},{"Key":"will eliminate","Fragments":["the"]},{"Key":"For checking","Fragments":["for","to"]},{"Key":"an all-uppercase","Fragments":["string:"]},{"Key":"all-uppercase string:","Fragments":["use"]},{"Key":"string: use","Fragments":["the"]},{"Key":"the `string.ToUpper()`","Fragments":["function,"]},{"Key":"`string.ToUpper()` function,","Fragments":["and"]},{"Key":"and compare","Fragments":["the","them","i","the"]},{"Key":"compare the","Fragments":["result","input","strings","current","length","keys","characters","results"]},{"Key":"character -","Fragments":["there"]},{"Key":"- there","Fragments":["is","is"]},{"Key":"a Linq","Fragments":["function","expression","extension","call","1","query,","1-liner"]},{"Key":"Linq function","Fragments":["you"]},{"Key":"function you","Fragments":["can","provided."]},{"Key":"use on","Fragments":["your"]},{"Key":"your string,","Fragments":["called","but"]},{"Key":"string, called","Fragments":["`Any`."]},{"Key":"called `Any`.","Fragments":["I"]},{"Key":"`Any`. I","Fragments":["just"]},{"Key":"just learned","Fragments":["about"]},{"Key":"learned about","Fragments":["this"]},{"Key":"var thing.","Fragments":["There"]},{"Key":"thing. There","Fragments":["is"]},{"Key":"no benefit","Fragments":["using"]},{"Key":"benefit using","Fragments":["it"]},{"Key":"it over","Fragments":["int,","to","to"]},{"Key":"over int,","Fragments":["as"]},{"Key":"int, as","Fragments":["they"]},{"Key":"are both","Fragments":["three","correct","completely"]},{"Key":"both three","Fragments":["characters"]},{"Key":"three characters","Fragments":["long,"]},{"Key":"characters long,","Fragments":["and"]},{"Key":"long, and","Fragments":["it","the"]},{"Key":"little less","Fragments":["readable."]},{"Key":"line function","Fragments":["do"]},{"Key":"function do","Fragments":["to","division"]},{"Key":"to clarity","Fragments":["and"]},{"Key":"clarity and","Fragments":["readability","readability,","consistency"]},{"Key":"and readability","Fragments":["though","of"]},{"Key":"readability though","Fragments":["?"]},{"Key":"though ?","Fragments":["What"]},{"Key":"? What","Fragments":["design"]},{"Key":"What design","Fragments":["pattern"]},{"Key":"design pattern","Fragments":["would"]},{"Key":"pattern would","Fragments":["it"]},{"Key":"On the","Fragments":["variable","other","private","other","early","other","other","next","second"]},{"Key":"variable naming","Fragments":["convention,","seems","used"]},{"Key":"naming convention,","Fragments":["everybody"]},{"Key":"convention, everybody","Fragments":["codes"]},{"Key":"everybody codes","Fragments":["differently."]},{"Key":"codes differently.","Fragments":["In"]},{"Key":"differently. In","Fragments":["my"]},{"Key":"opinion, it's","Fragments":["not"]},{"Key":"that important.","Fragments":["Just"]},{"Key":"important. Just","Fragments":["pick"]},{"Key":"pick one","Fragments":["and"]},{"Key":"it consistently.","Fragments":["Different"]},{"Key":"consistently. Different","Fragments":["employers"]},{"Key":"Different employers","Fragments":["do"]},{"Key":"employers do","Fragments":["things"]},{"Key":"do things","Fragments":["differently,","}","in"]},{"Key":"things differently,","Fragments":["so"]},{"Key":"differently, so","Fragments":["don't"]},{"Key":"don't be","Fragments":["surprised","afraid"]},{"Key":"be surprised","Fragments":["if"]},{"Key":"surprised if","Fragments":["your"]},{"Key":"your boss","Fragments":["tells","is"]},{"Key":"boss tells","Fragments":["you"]},{"Key":"tells you","Fragments":["to","-"]},{"Key":"suggestion, strings","Fragments":["can"]},{"Key":"strings can","Fragments":["be","be","be","make","be"]},{"Key":"treated like","Fragments":["character"]},{"Key":"like character","Fragments":["arrays."]},{"Key":"character arrays.","Fragments":["So"]},{"Key":"arrays. So","Fragments":["strand1.ElementAt(i)"]},{"Key":"So strand1.ElementAt(i)","Fragments":["can"]},{"Key":"strand1.ElementAt(i) can","Fragments":["be"]},{"Key":"with @christian","Fragments":["about"]},{"Key":"@christian about","Fragments":["using"]},{"Key":"Math.Min method.","Fragments":["That's"]},{"Key":"method. That's","Fragments":["what","an"]},{"Key":"That's what","Fragments":["it's","the","I"]},{"Key":"there for!","Fragments":[":-)"]},{"Key":"OK, @abel,","Fragments":["I"]},{"Key":"@abel, I","Fragments":["named"]},{"Key":"I named","Fragments":["the"]},{"Key":"named the","Fragments":["variables","same","same"]},{"Key":"the variables","Fragments":[":D","would","were","with","to"]},{"Key":"Possibly naming","Fragments":["some"]},{"Key":"naming some","Fragments":["of"]},{"Key":" (nucleotideFromStrandA,","Fragments":["nucleotideFromStrandB)"]},{"Key":" =\u003e","Fragments":["nucleotideFromStrandA"]},{"Key":"=\u003e nucleotideFromStrandA","Fragments":["!="]},{"Key":"nucleotideFromStrandA !=","Fragments":["nucleotideFromStrandB"]},{"Key":"!= nucleotideFromStrandB","Fragments":["?"]},{"Key":"nucleotideFromStrandB ?","Fragments":["1"]},{"Key":"? 1","Fragments":[":",":",":",":",":",":"]},{"Key":"1 :","Fragments":["0).Sum();","0).Sum();","0).Sum();```","0).Sum();```","0).Sum();","0).Sum();```"]},{"Key":"would prefer","Fragments":["line","not","to","all","a","to","to","to"]},{"Key":"prefer line","Fragments":["10"]},{"Key":"line 10","Fragments":["to","can","substitute"]},{"Key":"10 to","Fragments":["use"]},{"Key":"use `Math.Min(inA.Length,","Fragments":["inB.Length);`"]},{"Key":" True,","Fragments":["a"]},{"Key":"True, a","Fragments":["friend"]},{"Key":"a friend","Fragments":["bought"]},{"Key":"friend bought","Fragments":["this"]},{"Key":"bought this","Fragments":["to"]},{"Key":"my attention.","Fragments":["I"]},{"Key":"attention. I","Fragments":["have"]},{"Key":"have now","Fragments":["taken"]},{"Key":"now taken","Fragments":["it"]},{"Key":"taken it","Fragments":["out","further?"]},{"Key":"It turns","Fragments":["out"]},{"Key":"turns out","Fragments":["that","there's","my"]},{"Key":"out that","Fragments":["the","you","dictionary,","the","I","arrays","it's","this","the","**all**","**all**"]},{"Key":"the Zip","Fragments":["function","function.","method,","method","method","function","call.","extension","statement?","lambda"]},{"Key":"Zip function","Fragments":["works","will"]},{"Key":"function works","Fragments":["on"]},{"Key":"works on","Fragments":["strings","the","a","the","certain","a","Windows,"]},{"Key":"on strings","Fragments":["as","in"]},{"Key":"strings as","Fragments":["well","your","the"]},{"Key":"as Char","Fragments":["arrays,"]},{"Key":"Char arrays,","Fragments":["and"]},{"Key":"arrays, and","Fragments":["also"]},{"Key":"also operates","Fragments":["until"]},{"Key":"operates until","Fragments":["it"]},{"Key":"until it","Fragments":["reaches","gets","becomes","reached"]},{"Key":"it reaches","Fragments":["the"]},{"Key":"reaches the","Fragments":["end"]},{"Key":"the enumerable.","Fragments":["This"]},{"Key":"enumerable. This","Fragments":["means"]},{"Key":"means I","Fragments":["could"]},{"Key":"could skip","Fragments":["both","and"]},{"Key":"skip both","Fragments":["the"]},{"Key":"length check/bounding","Fragments":["and"]},{"Key":"check/bounding and","Fragments":["conversion."]},{"Key":"Is doing","Fragments":["all","all"]},{"Key":"front a","Fragments":["good","good"]},{"Key":"good idea?","Fragments":["(I"]},{"Key":"idea? (I","Fragments":["realise"]},{"Key":"(I realise","Fragments":["for"]},{"Key":"realise for","Fragments":["this"]},{"Key":"little difference...","Fragments":["but"]},{"Key":"difference... but","Fragments":["what"]},{"Key":"but what","Fragments":["if","is","does","if","happens"]},{"Key":"the `%100`","Fragments":["was"]},{"Key":"`%100` was","Fragments":["a"]},{"Key":"For IsSilence,","Fragments":["you"]},{"Key":"IsSilence, you","Fragments":["might"]},{"Key":"use string.IsNullOrWhiteSpace(text)","Fragments":["because"]},{"Key":"string.IsNullOrWhiteSpace(text) because","Fragments":["if"]},{"Key":"if sentance","Fragments":["is"]},{"Key":"sentance is","Fragments":["null,"]},{"Key":"null, that","Fragments":["check"]},{"Key":"minor nitpick.","Fragments":["For"]},{"Key":"nitpick. For","Fragments":["loop"]},{"Key":"For loop","Fragments":["conventions"]},{"Key":"loop conventions","Fragments":["in"]},{"Key":"conventions in","Fragments":["C","your"]},{"Key":"in C","Fragments":["like","but"]},{"Key":"C like","Fragments":["programming"]},{"Key":"like programming","Fragments":["languages"]},{"Key":"programming languages","Fragments":["is"]},{"Key":"languages is","Fragments":["that"]},{"Key":"an index,","Fragments":["you","you"]},{"Key":"index, you","Fragments":["usually","already"]},{"Key":"you usually","Fragments":["use"]},{"Key":"usually use","Fragments":["\"i\""]},{"Key":"use \"i\"","Fragments":["as"]},{"Key":"\"i\" as","Fragments":["the"]},{"Key":"bit smaller,","Fragments":["and"]},{"Key":"smaller, and","Fragments":["as"]},{"Key":"as everyone","Fragments":["expects"]},{"Key":"everyone expects","Fragments":["it"]},{"Key":"expects it","Fragments":["it"]},{"Key":"it it","Fragments":["is","might","does"]},{"Key":"line change,","Fragments":["replacing"]},{"Key":"change, replacing","Fragments":["the"]},{"Key":"Regex with","Fragments":["a"]},{"Key":"Linq expression","Fragments":["for"]},{"Key":"for performance.","Fragments":["Many"]},{"Key":"performance. Many","Fragments":["thanks"]},{"Key":"Many thanks","Fragments":["to"]},{"Key":"thanks to","Fragments":["@bert","jkedgar","@stacy","John"]},{"Key":"to @bert","Fragments":["for"]},{"Key":"@bert for","Fragments":["the"]},{"Key":"the suggestion!","Fragments":["I"]},{"Key":"suggestion! I","Fragments":["am"]},{"Key":"Linq, so","Fragments":["I","I'm"]},{"Key":"appreciate the","Fragments":["chance","time","help"]},{"Key":"the chance","Fragments":["to"]},{"Key":"chance to","Fragments":["learn","look"]},{"Key":"very clever","Fragments":["trick."]},{"Key":"clever trick.","Fragments":["I"]},{"Key":"trick. I","Fragments":["hadn't"]},{"Key":"hadn't heard","Fragments":["of","of"]},{"Key":"heard of","Fragments":["the","extensions"]},{"Key":"Zip function.","Fragments":["If","Enjoy!"]},{"Key":"function. If","Fragments":["you","a"]},{"Key":"combine what","Fragments":["@jaron"]},{"Key":"what @jaron","Fragments":["said"]},{"Key":"@jaron said","Fragments":["with"]},{"Key":"said with","Fragments":["the"]},{"Key":"the trick","Fragments":["of","you","here"]},{"Key":"trick of","Fragments":["return"]},{"Key":"of return","Fragments":["1","statements","statements."]},{"Key":"return 1","Fragments":["and"]},{"Key":"and 0","Fragments":["from","unique"]},{"Key":"0 from","Fragments":["your"]},{"Key":"your lambda","Fragments":["and"]},{"Key":"lambda and","Fragments":["the","capturing","the"]},{"Key":"the Sum","Fragments":["method,"]},{"Key":"Sum method,","Fragments":["you"]},{"Key":"very slick","Fragments":["one"]},{"Key":"slick one","Fragments":["liner:"]},{"Key":"static int","Fragments":["Compute(string","Compute(string","Compute(string","Score(string)","Score(string","lastMax","Score(string","Score(string","Score(string","CheckedMinutes(int"]},{"Key":"int Compute(string","Fragments":["strand1,","a,","dnaone,"]},{"Key":"Compute(string strand1,","Fragments":["string"]},{"Key":"strand1, string","Fragments":["strand2)"]},{"Key":"return strand1.Zip(strand2,","Fragments":["(c1,"]},{"Key":"strand1.Zip(strand2, (c1,","Fragments":["c2)"]},{"Key":"(c1, c2)","Fragments":["=\u003e"]},{"Key":"c2) =\u003e","Fragments":["(c1"]},{"Key":"=\u003e (c1","Fragments":["=="]},{"Key":"(c1 ==","Fragments":["c2)"]},{"Key":"== c2)","Fragments":["?"]},{"Key":"c2) ?","Fragments":["0"]},{"Key":"? 0","Fragments":[":",":",":",":"]},{"Key":"0 :","Fragments":["1).Sum();","year","input.ToUpper().Sum(letter","word.ToUpperInvariant().Sum(LetterScore);","1;"]},{"Key":"just changed","Fragments":["my"]},{"Key":"submission to","Fragments":["this","see"]},{"Key":"code. Great","Fragments":["job!"]},{"Key":"Great job!","Fragments":[":-)","You","For"]},{"Key":"After seeing","Fragments":["what"]},{"Key":"seeing what","Fragments":["@cora"]},{"Key":"what @cora","Fragments":["submitted"]},{"Key":"@cora submitted","Fragments":["using"]},{"Key":"submitted using","Fragments":["the"]},{"Key":"Zip method,","Fragments":["I"]},{"Key":"my submission.","Fragments":["I","Shame"]},{"Key":"simple one","Fragments":["liner."]},{"Key":"would mention","Fragments":["is","is"]},{"Key":"mention is","Fragments":["what","that"]},{"Key":"if entry.Value","Fragments":["is"]},{"Key":"entry.Value is","Fragments":["null","null.","null","null,"]},{"Key":"in entry.Value","Fragments":["is"]},{"Key":"is null.","Fragments":[":)","I","Which"]},{"Key":"probably return","Fragments":["IDictionary\u003c\u003e"]},{"Key":"return IDictionary\u003c\u003e","Fragments":["(tests","instead?","instead?","instead?","instead?","instead?","instead?","instead?","instead"]},{"Key":"IDictionary\u003c\u003e (tests","Fragments":["still"]},{"Key":"(tests still","Fragments":["pass)"]},{"Key":"still pass)","Fragments":["to"]},{"Key":"pass) to","Fragments":["not"]},{"Key":"not force","Fragments":["the"]},{"Key":"force the","Fragments":["specific","Dictionary\u003c\u003e"]},{"Key":"the specific","Fragments":["Dictionary\u003c\u003e","phrase","behavior"]},{"Key":"specific Dictionary\u003c\u003e","Fragments":["implementation."]},{"Key":"Yeah, for","Fragments":["some"]},{"Key":"this occurred","Fragments":["to"]},{"Key":"occurred to","Fragments":["me","me","me","me","me..."]},{"Key":"me first","Fragments":["and"]},{"Key":"first and","Fragments":["I","reduce","as","then","then"]},{"Key":"just went","Fragments":["with","with","back","(mostly)","through"]},{"Key":"it readable","Fragments":["(simply"]},{"Key":"readable (simply","Fragments":["because"]},{"Key":"(simply because","Fragments":["I"]},{"Key":"did something","Fragments":["very","like","similar"]},{"Key":"very similar),","Fragments":["but"]},{"Key":"similar), but","Fragments":["I've"]},{"Key":"always avoided","Fragments":["using"]},{"Key":"avoided using","Fragments":["multiple"]},{"Key":"multiple conditionals","Fragments":["in"]},{"Key":"conditionals in","Fragments":["a","the","the"]},{"Key":"a return.","Fragments":["I"]},{"Key":"return. I","Fragments":["don't"]},{"Key":"any arguments","Fragments":["against"]},{"Key":"arguments against","Fragments":["it,"]},{"Key":"against it,","Fragments":["but"]},{"Key":"it, but","Fragments":["I","it","I","I","1582","when","in","it","feel","it","I"]},{"Key":"added couple","Fragments":["lines"]},{"Key":"couple lines","Fragments":["from"]},{"Key":"lines from","Fragments":["an","iteration"]},{"Key":"from an","Fragments":["if","external","explicit"]},{"Key":"statement might","Fragments":["make"]},{"Key":"to someone","Fragments":["trying","who","else"]},{"Key":"someone trying","Fragments":["to"]},{"Key":"understand where","Fragments":["an"]},{"Key":"where an","Fragments":["unexpected"]},{"Key":"an unexpected","Fragments":["value","exception."]},{"Key":"unexpected value","Fragments":["was"]},{"Key":"value was","Fragments":["coming","too"]},{"Key":"was coming","Fragments":["from"]},{"Key":"coming from","Fragments":["if"]},{"Key":"from if","Fragments":["troubleshooting."]},{"Key":" Right,","Fragments":["which"]},{"Key":"Right, which","Fragments":["is"]},{"Key":"why the","Fragments":["'this'","predicates","\"time\"","last"]},{"Key":"the 'this'","Fragments":["keyword"]},{"Key":"'this' keyword","Fragments":["is"]},{"Key":"keyword is","Fragments":["coming"]},{"Key":"is coming","Fragments":["back"]},{"Key":"coming back","Fragments":["into","at"]},{"Key":"back into","Fragments":["favor.","each","the"]},{"Key":"into favor.","Fragments":["Honestly,"]},{"Key":"favor. Honestly,","Fragments":["I"]},{"Key":"Honestly, I","Fragments":["was","prefer"]},{"Key":"was bummed","Fragments":["at"]},{"Key":"bummed at","Fragments":["first,"]},{"Key":"first, but","Fragments":["after","once","realized","that"]},{"Key":"but after","Fragments":["getting","implementing","a"]},{"Key":"after getting","Fragments":["accustomed"]},{"Key":"getting accustomed","Fragments":["to"]},{"Key":"accustomed to","Fragments":["typing"]},{"Key":"to typing","Fragments":["'this'","the"]},{"Key":"typing 'this'","Fragments":["more"]},{"Key":"'this' more","Fragments":["often"]},{"Key":"more often","Fragments":["(I","than"]},{"Key":"often (I","Fragments":["already"]},{"Key":"(I already","Fragments":["had"]},{"Key":"already had","Fragments":["ot","a"]},{"Key":"had ot","Fragments":["use"]},{"Key":"ot use","Fragments":["it"]},{"Key":"time in","Fragments":["PHP),","my"]},{"Key":"in PHP),","Fragments":["I"]},{"Key":"PHP), I","Fragments":["realized"]},{"Key":"realized it","Fragments":["makes","wasn't"]},{"Key":"it faster","Fragments":["and","though."]},{"Key":"find all","Fragments":["the","the","the","of","primefactors?"]},{"Key":"class methods,","Fragments":["properties"]},{"Key":"and fields","Fragments":["in"]},{"Key":"fields in","Fragments":["intellisense"]},{"Key":"the feedback!","Fragments":["As","I","I've"]},{"Key":"feedback! As","Fragments":["far"]},{"Key":"this keyword","Fragments":["-"]},{"Key":"keyword -","Fragments":["Stylecop","specifically"]},{"Key":"- Stylecop","Fragments":["and"]},{"Key":"Stylecop and","Fragments":["hours"]},{"Key":"and hours","Fragments":["of","-"]},{"Key":"hours of","Fragments":["research"]},{"Key":"of research","Fragments":["came","on"]},{"Key":"research came","Fragments":["up"]},{"Key":"the 'recommended'","Fragments":["standard"]},{"Key":"'recommended' standard","Fragments":["of"]},{"Key":"standard of","Fragments":["using"]},{"Key":"using this","Fragments":["for","class","syntax,","code","modulus","modulus"]},{"Key":"for class","Fragments":["properties.","fields"]},{"Key":"class properties.","Fragments":["Since"]},{"Key":"properties. Since","Fragments":["this"]},{"Key":"Since this","Fragments":["is","iteration","first"]},{"Key":"code standard","Fragments":["here"]},{"Key":"standard here","Fragments":["at"]},{"Key":"here at","Fragments":["work,"]},{"Key":"at work,","Fragments":["I"]},{"Key":"work, I","Fragments":["figured"]},{"Key":"figured I","Fragments":["should","would"]},{"Key":"just stick","Fragments":["with"]},{"Key":"it wasn't","Fragments":["for","a","necessary.","creating","worth","Equilateral","Isosceles"]},{"Key":"wasn't for","Fragments":["'this'","me."]},{"Key":"for 'this'","Fragments":["we"]},{"Key":"'this' we","Fragments":["would"]},{"Key":"use underscores","Fragments":["on"]},{"Key":"underscores on","Fragments":["provaite"]},{"Key":"on provaite","Fragments":["fields,"]},{"Key":"provaite fields,","Fragments":["but"]},{"Key":"fields, but","Fragments":["that"]},{"Key":"is apparently","Fragments":["becoming"]},{"Key":"apparently becoming","Fragments":["more"]},{"Key":"becoming more","Fragments":["of"]},{"Key":"a 'no-no'","Fragments":["in"]},{"Key":"'no-no' in","Fragments":["C#.."]},{"Key":"in C#..","Fragments":["just"]},{"Key":"C#.. just","Fragments":["like"]},{"Key":"like hungarian","Fragments":["notation."]},{"Key":"It works,","Fragments":["good","great","good","good","great","but","but"]},{"Key":"You don't","Fragments":["need","need","need","need","need","throw","need","need","have","really","have","really","need","need","have","need","need"]},{"Key":"convert the","Fragments":["strings","value","original","result","strings","hex","strings","number","allergy","'%'","string"]},{"Key":"the strings","Fragments":["to","in","can","are","into","are","to","vs.","into","themselves.","into","twice","once.","were","containing"]},{"Key":"strings to","Fragments":["an","work","be","constants","compare.","call","later","see","do","throw","add","char"]},{"Key":"an array,","Fragments":["as","passing","so","so","so"]},{"Key":"array, as","Fragments":["strings"]},{"Key":"as strings","Fragments":["can","of"]},{"Key":"as arrays","Fragments":["directly."]},{"Key":"naming seems","Fragments":["to"]},{"Key":"to all","Fragments":["over","of","the"]},{"Key":"all over","Fragments":["the","the","the"]},{"Key":"the place.","Fragments":["We",":)"]},{"Key":"place. We","Fragments":["have"]},{"Key":"We have","Fragments":["strings"]},{"Key":"have strings","Fragments":["a"]},{"Key":"strings a","Fragments":["and"]},{"Key":"a and","Fragments":["b."]},{"Key":"and b.","Fragments":["Not"]},{"Key":"b. Not","Fragments":["very"]},{"Key":"Not very","Fragments":["descriptive.","efficient"]},{"Key":"very descriptive.","Fragments":["Then"]},{"Key":"descriptive. Then","Fragments":["we","we"]},{"Key":"Then we","Fragments":["have","have","get","add"]},{"Key":"have arrayA","Fragments":["and"]},{"Key":"arrayA and","Fragments":["arrayB,"]},{"Key":"and arrayB,","Fragments":["which"]},{"Key":"arrayB, which","Fragments":["is"]},{"Key":"a Hungarian","Fragments":["notation"]},{"Key":"Hungarian notation","Fragments":["but","(sText"]},{"Key":"notation but","Fragments":["still"]},{"Key":"but still","Fragments":["not","pull","well","clocks","chose","inefficient"]},{"Key":"not descriptive.","Fragments":["Then"]},{"Key":"have shortestStrandLength,","Fragments":["which"]},{"Key":"shortestStrandLength, which","Fragments":["is"]},{"Key":"is beautifully","Fragments":["descriptive."]},{"Key":"beautifully descriptive.","Fragments":[":-)"]},{"Key":"thing, consider","Fragments":["using"]},{"Key":"consider using","Fragments":["Math.Min","the","```yield","guard"]},{"Key":"Math.Min instead","Fragments":["of"]},{"Key":"operator. It's","Fragments":["a","probably"]},{"Key":"a tad","Fragments":["bit"]},{"Key":"tad bit","Fragments":["more"]},{"Key":" Minor","Fragments":["nitpick,","quibble","ammendments","but","syntax"]},{"Key":"Minor nitpick,","Fragments":["but"]},{"Key":"the overuse","Fragments":["of"]},{"Key":"overuse of","Fragments":["the"]},{"Key":"Nested if-statements","Fragments":["can"]},{"Key":"if-statements can","Fragments":["become"]},{"Key":"can become","Fragments":["difficult","a","a"]},{"Key":"become difficult","Fragments":["to"]},{"Key":"and maintain.","Fragments":["See:","No"]},{"Key":"maintain. See:","Fragments":["http://lostechies.com/chrismissal/2009/05/27/anti-patterns-and-worst-practices-the-arrowhead-anti-pattern/"]},{"Key":"Consider revising","Fragments":["your"]},{"Key":"revising your","Fragments":["code"]},{"Key":"of something","Fragments":["like","like"]},{"Key":"like CuttingEdge","Fragments":["Conditions"]},{"Key":"CuttingEdge Conditions","Fragments":["would"]},{"Key":"Conditions would","Fragments":["tidy"]},{"Key":"would tidy","Fragments":["the"]},{"Key":"tidy the","Fragments":["argument"]},{"Key":"the argument","Fragments":["check","along","that"]},{"Key":"argument check","Fragments":["up.","to"]},{"Key":" stuck","Fragments":["on"]},{"Key":" Extracted","Fragments":["the"]},{"Key":"Extracted the","Fragments":["Mod"]},{"Key":"the Mod","Fragments":["operation"]},{"Key":"Mod operation","Fragments":["out"]},{"Key":"operation out","Fragments":["and"]},{"Key":"and made","Fragments":["into","in","the","a","the","this","my","the"]},{"Key":"into an","Fragments":["extension","array","````IEnumerable\u003cchar\u003e````","array"]},{"Key":"used Resharper","Fragments":["to","for"]},{"Key":"Resharper to","Fragments":["fix"]},{"Key":"fix the","Fragments":["if-blocks","issue"]},{"Key":"the if-blocks","Fragments":["and"]},{"Key":"if-blocks and","Fragments":["renamed"]},{"Key":"and renamed","Fragments":["the"]},{"Key":"renamed the","Fragments":["extension"]},{"Key":"The extension,","Fragments":["though"]},{"Key":"extension, though","Fragments":["on"]},{"Key":"though on","Fragments":["a"]},{"Key":"base type,","Fragments":["is"]},{"Key":"type, is","Fragments":["in"]},{"Key":"same namespace","Fragments":["as"]},{"Key":"namespace as","Fragments":["Year"]},{"Key":"as Year","Fragments":["so"]},{"Key":"Year so","Fragments":["is"]},{"Key":"so is","Fragments":["unlikely","case"]},{"Key":"is unlikely","Fragments":["to"]},{"Key":"unlikely to","Fragments":["cause","change.","change."]},{"Key":"to cause","Fragments":["confusion"]},{"Key":"cause confusion","Fragments":["in"]},{"Key":"confusion in","Fragments":["a"]},{"Key":"a larger","Fragments":["project.","method","system","application"]},{"Key":"I particularly","Fragments":["like"]},{"Key":"\u0026\u0026 in","Fragments":["the"]},{"Key":"the for","Fragments":["loop","loop","loop","loop.","loops","loop","loop","loop","loop","loop","loop","loops"]},{"Key":"loop condition.","Fragments":["I"]},{"Key":"condition. I","Fragments":["hadn't"]},{"Key":"that. Good","Fragments":["idea!"]},{"Key":"Perhaps re-name","Fragments":["the"]},{"Key":"method `IsDivisibleBy`","Fragments":["so"]},{"Key":"`IsDivisibleBy` so","Fragments":["it"]},{"Key":"Also in","Fragments":["real"]},{"Key":"code think","Fragments":["long"]},{"Key":"think long","Fragments":["and"]},{"Key":"long and","Fragments":["hard","you","cumbersome","unwieldy.","confusing","so","so","difficult"]},{"Key":"and hard","Fragments":["before"]},{"Key":"hard before","Fragments":["implementing"]},{"Key":"before implementing","Fragments":["extension"]},{"Key":"implementing extension","Fragments":["methods"]},{"Key":"on base","Fragments":["types."]},{"Key":"base types.","Fragments":["It"]},{"Key":"types. It","Fragments":["can","will"]},{"Key":"people if","Fragments":["your"]},{"Key":"your extension","Fragments":["method"]},{"Key":"method only","Fragments":["makes","so"]},{"Key":"only makes","Fragments":["sense","the"]},{"Key":"some classes","Fragments":["or"]},{"Key":"classes or","Fragments":["situations.","number"]},{"Key":"also always","Fragments":["wrap","be"]},{"Key":"always wrap","Fragments":["the"]},{"Key":"if value","Fragments":["in","is"]},{"Key":"in `{}`","Fragments":["as"]},{"Key":"`{}` as","Fragments":["I"]},{"Key":"been bitten","Fragments":["by"]},{"Key":"bitten by","Fragments":["irritating"]},{"Key":"by irritating","Fragments":["bugs"]},{"Key":"irritating bugs","Fragments":["when"]},{"Key":"bugs when","Fragments":["files"]},{"Key":"when files","Fragments":["are"]},{"Key":"files are","Fragments":["edited."]},{"Key":"are edited.","Fragments":["It"]},{"Key":"edited. It","Fragments":["can"]},{"Key":"can look","Fragments":["a","at","at","at","at"]},{"Key":"more messy","Fragments":["but"]},{"Key":"messy but","Fragments":["it"]},{"Key":"very explicit","Fragments":["about"]},{"Key":"explicit about","Fragments":["what","types","type."]},{"Key":"the `if`","Fragments":["is","block,"]},{"Key":"`if` is","Fragments":["controlling."]},{"Key":"to express","Fragments":["each","the","single","this"]},{"Key":"express each","Fragments":["part"]},{"Key":"each part","Fragments":["of","has"]},{"Key":"process functionally.","Fragments":["Overdone?"]},{"Key":" @jo,","Fragments":["I"]},{"Key":"@jo, I","Fragments":["declared"]},{"Key":"I declared","Fragments":["the"]},{"Key":"declared the","Fragments":["class"]},{"Key":" Nearly","Fragments":["exactly"]},{"Key":"Nearly exactly","Fragments":["the"]},{"Key":"my solution,","Fragments":["so","I"]},{"Key":"solution, so","Fragments":["it"]},{"Key":"be great","Fragments":[":smile:"]},{"Key":"only difference","Fragments":["is","is","from"]},{"Key":"difference is","Fragments":["I","changing","worthy"]},{"Key":"is I","Fragments":["used"]},{"Key":"Very minor","Fragments":["nitpick,","point,"]},{"Key":"minor nitpick,","Fragments":["but"]},{"Key":"statements since","Fragments":["you"]},{"Key":"returning from","Fragments":["the"]},{"Key":"Also, I","Fragments":["think","would","am","didn't","wonder","find","have","put","don't","know"]},{"Key":"could change","Fragments":["`message.Where(Char.IsLetter).Any()`","the","the","them","the","and","your","is","GenerateName"]},{"Key":"change `message.Where(Char.IsLetter).Any()`","Fragments":["to"]},{"Key":"`message.Where(Char.IsLetter).Any()` to","Fragments":["message.Any(Char.IsLetter)`"]},{"Key":"saw another","Fragments":["user","person"]},{"Key":"another user","Fragments":["use"]},{"Key":"user use","Fragments":["the"]},{"Key":"Zip method","Fragments":["and","and"]},{"Key":"was so","Fragments":["slick"]},{"Key":"so slick","Fragments":["I"]},{"Key":"slick I","Fragments":["had"]},{"Key":"implementation to","Fragments":["use"]},{"Key":" An","Fragments":["idea","alternative","optimized"]},{"Key":"An idea","Fragments":["I"]},{"Key":"idea I","Fragments":["had"]},{"Key":"had when","Fragments":["writing"]},{"Key":"when writing","Fragments":["it"]},{"Key":"writing it","Fragments":["was","solely"]},{"Key":"return either","Fragments":["a"]},{"Key":"either a","Fragments":["1","temp"]},{"Key":"a 1","Fragments":["or","liner","liner","liner!","liner"]},{"Key":"1 or","Fragments":["a","2","something)","0)"]},{"Key":"a zero","Fragments":["instead","from","should"]},{"Key":"zero instead","Fragments":["of"]},{"Key":"an anonymous","Fragments":["object.","class","type","type","type"]},{"Key":"anonymous object.","Fragments":["Then"]},{"Key":"object. Then","Fragments":["I"]},{"Key":"just called","Fragments":["Sum"]},{"Key":"called Sum","Fragments":["on"]},{"Key":"Sum on","Fragments":["the"]},{"Key":"the IEnumerable\u003cint\u003e","Fragments":["object."]},{"Key":"liner. In","Fragments":["my"]},{"Key":"my mind,","Fragments":["if"]},{"Key":"mind, if","Fragments":["you're"]},{"Key":"going into","Fragments":["Linq","your"]},{"Key":"into Linq","Fragments":["territory"]},{"Key":"Linq territory","Fragments":["using"]},{"Key":"territory using","Fragments":["the"]},{"Key":"the Lambda","Fragments":["you","clear","directly","doesn't"]},{"Key":"Lambda you","Fragments":["might"]},{"Key":"well go","Fragments":["whole"]},{"Key":"go whole","Fragments":["hog!"]},{"Key":"whole hog!","Fragments":[":-D"]},{"Key":"should really","Fragments":["look","be","be","have"]},{"Key":"really look","Fragments":["at"]},{"Key":"at getting","Fragments":["this"]},{"Key":"getting this","Fragments":["running"]},{"Key":"this running","Fragments":["with"]},{"Key":"and developing","Fragments":["using"]},{"Key":"developing using","Fragments":["test"]},{"Key":"using test","Fragments":["driven"]},{"Key":"driven development.","Fragments":["Take"]},{"Key":"development. Take","Fragments":["a"]},{"Key":"Take a","Fragments":["look","look","look","look","look"]},{"Key":"the instructions","Fragments":["on","for"]},{"Key":"instructions on","Fragments":["the","the"]},{"Key":"the site.","Fragments":["I"]},{"Key":"site. I","Fragments":["think"]},{"Key":"a much","Fragments":["better","cleaner","better","nicer","cleaner","bigger","cleaner","simpler","better","better"]},{"Key":"better experience","Fragments":["and"]},{"Key":"experience and","Fragments":["learn"]},{"Key":"learn a","Fragments":["lot"]},{"Key":"more if","Fragments":["you"]},{"Key":"you approach","Fragments":["it"]},{"Key":"approach it","Fragments":["that"]},{"Key":" According","Fragments":["to","to"]},{"Key":"According to","Fragments":["the","the"]},{"Key":"the spec,","Fragments":["0"]},{"Key":"spec, 0","Fragments":["is"]},{"Key":"400, so","Fragments":["it"]},{"Key":"year. Negative","Fragments":["numbers"]},{"Key":"Negative numbers","Fragments":["would"]},{"Key":"numbers would","Fragments":["follow"]},{"Key":"would follow","Fragments":["the"]},{"Key":"the switch","Fragments":["statement","statement","because","if","using"]},{"Key":"switch statement","Fragments":["in","replaced","that","is","rather"]},{"Key":"main method","Fragments":["and","from","like"]},{"Key":"of methods","Fragments":["to","I","like"]},{"Key":"determine the","Fragments":["specific","LAST"]},{"Key":"specific phrase","Fragments":["types."]},{"Key":"phrase types.","Fragments":["I"]},{"Key":"types. I","Fragments":["was"]},{"Key":"wondering how","Fragments":["to"]},{"Key":"my if","Fragments":["block","statements.","check"]},{"Key":"and change","Fragments":["it","the"]},{"Key":"switch statement.","Fragments":["I","Unlike","Check"]},{"Key":"statement. I","Fragments":["think","don't","seem"]},{"Key":"think though","Fragments":["that"]},{"Key":"though that","Fragments":["you","it's","looping"]},{"Key":"just moved","Fragments":["the"]},{"Key":"moved the","Fragments":["code","text","unchanging"]},{"Key":"to GetPhraseType","Fragments":["and"]},{"Key":"GetPhraseType and","Fragments":["it"]},{"Key":"bit redundant","Fragments":["to"]},{"Key":" Zip","Fragments":["will","looks","can","looks"]},{"Key":"Zip will","Fragments":["terminate","work"]},{"Key":"terminate as","Fragments":["soon"]},{"Key":"as one","Fragments":["strand","of","piece","statement"]},{"Key":"one strand","Fragments":["terminates,"]},{"Key":"strand terminates,","Fragments":["making"]},{"Key":"terminates, making","Fragments":["length"]},{"Key":"making length","Fragments":["checking"]},{"Key":"length checking","Fragments":["unnecessary.","given"]},{"Key":"checking unnecessary.","Fragments":["Count"]},{"Key":"unnecessary. Count","Fragments":["is"]},{"Key":"Count is","Fragments":["used"]},{"Key":"is used","Fragments":["to","for","when","when","for","for","to","in"]},{"Key":"characters that","Fragments":["are","were","match","I"]},{"Key":"Very straightforward,","Fragments":["I"]},{"Key":"straightforward, I","Fragments":["like"]},{"Key":"I took","Fragments":["this","the","the","different","my","inspiration","this"]},{"Key":"took this","Fragments":["structured","to"]},{"Key":"this structured","Fragments":["approach","as"]},{"Key":"structured approach","Fragments":["as"]},{"Key":"approach as","Fragments":["well.","I"]},{"Key":"well. Being","Fragments":["prudent,"]},{"Key":"Being prudent,","Fragments":["I"]},{"Key":"prudent, I","Fragments":["think"]},{"Key":"So the","Fragments":["divisibleBy","above","latter","test","input"]},{"Key":"the divisibleBy","Fragments":["helper"]},{"Key":"helper would","Fragments":["wrap"]},{"Key":"would wrap","Fragments":["the"]},{"Key":"mod operation.","Fragments":["Yes"]},{"Key":"operation. Yes","Fragments":["I"]},{"Key":"Yes I","Fragments":["can","can"]},{"Key":"expressive. It","Fragments":["seems"]},{"Key":"the max","Fragments":["readability","for","array","score"]},{"Key":"max readability","Fragments":["benefits."]},{"Key":"readability benefits.","Fragments":["So"]},{"Key":"benefits. So","Fragments":["it"]},{"Key":"would read","Fragments":["year.IsDivisibleBy(x)"]},{"Key":"read year.IsDivisibleBy(x)","Fragments":["vs."]},{"Key":"year.IsDivisibleBy(x) vs.","Fragments":["divisibleBy(year,"]},{"Key":"vs. divisibleBy(year,","Fragments":["x)."]},{"Key":"Can only","Fragments":["mention"]},{"Key":"only mention","Fragments":["a"]},{"Key":"mention a","Fragments":["few"]},{"Key":"1. What","Fragments":["happens","happens"]},{"Key":"What happens","Fragments":["if","when","when","when","when","when","when","when","when","when","when","when","when","if","if","if","if","if","if","if","if","if","if","if","if","if","if","when","if","if","if","if","if","if","if","if"]},{"Key":"if any","Fragments":["Value","character","of","of","characters","number","of"]},{"Key":"any Value","Fragments":["is"]},{"Key":"Value is","Fragments":["null"]},{"Key":"null and","Fragments":["what","`Hey`","duplicate","repeated","a"]},{"Key":"and what","Fragments":["happens","it","you","not","you've"]},{"Key":"null item","Fragments":["was"]},{"Key":"item was","Fragments":["added"]},{"Key":"was added","Fragments":["to","that","to"]},{"Key":"added to","Fragments":["one","a","stop","stop","the","grade","collection.","that","that","console","the"]},{"Key":"the IList\u003cstring\u003e?","Fragments":[":)"]},{"Key":"those interior","Fragments":["comments"]},{"Key":"interior comments","Fragments":["are"]},{"Key":"really helping","Fragments":["anything.","with"]},{"Key":"helping anything.","Fragments":["Code"]},{"Key":"anything. Code","Fragments":["seems"]},{"Key":"Code seems","Fragments":["pretty"]},{"Key":"seems pretty","Fragments":["obvious."]},{"Key":"real nit","Fragments":["pick"]},{"Key":"nit pick","Fragments":["but"]},{"Key":"pick but","Fragments":["you"]},{"Key":"you switched","Fragments":["between"]},{"Key":"switched between","Fragments":["\"string\""]},{"Key":"between \"string\"","Fragments":["and"]},{"Key":"\"string\" and","Fragments":["\"String\""]},{"Key":"and \"String\"","Fragments":["in"]},{"Key":"\"String\" in","Fragments":["there"]},{"Key":"in there","Fragments":["once.","to","is","somewhere,","that"]},{"Key":"there once.","Fragments":[":)"]},{"Key":"once. :)","Fragments":["I"]},{"Key":"Any thoughts","Fragments":["on"]},{"Key":"your command.ToUpper()","Fragments":["comparison"]},{"Key":"command.ToUpper() comparison","Fragments":["on"]},{"Key":"comparison on","Fragments":["line"]},{"Key":"line 21","Fragments":["creating","should","and","should"]},{"Key":"21 creating","Fragments":["an"]},{"Key":"unnecessary additional","Fragments":["string?","length"]},{"Key":"your input!","Fragments":["I'll"]},{"Key":"input! I'll","Fragments":["try"]},{"Key":"in mind,","Fragments":["especially","someone","but","though,"]},{"Key":"mind, especially","Fragments":["the"]},{"Key":"the bit","Fragments":["about","about"]},{"Key":"bit about","Fragments":["returns.","dealing"]},{"Key":"about returns.","Fragments":["Is"]},{"Key":"returns. Is","Fragments":["there"]},{"Key":"there somewhere","Fragments":["that"]},{"Key":"somewhere that","Fragments":["has"]},{"Key":"has some","Fragments":["guidelines","issues"]},{"Key":"some guidelines","Fragments":["for"]},{"Key":"guidelines for","Fragments":["variable/method"]},{"Key":"for variable/method","Fragments":["naming"]},{"Key":"variable/method naming","Fragments":["conventions"]},{"Key":"return an","Fragments":["empty","array,","array,","object??"]},{"Key":"empty collection","Fragments":["if"]},{"Key":"collection if","Fragments":["the"]},{"Key":"null. I","Fragments":["could"]},{"Key":"have returned","Fragments":["null"]},{"Key":"returned null","Fragments":["or"]},{"Key":"or thrown","Fragments":["a"]},{"Key":"thrown a","Fragments":["ArgumentNullException."]},{"Key":"for bad","Fragments":["data,"]},{"Key":"bad data,","Fragments":["a"]},{"Key":"data, a","Fragments":["null"]},{"Key":"empty value","Fragments":["and"]},{"Key":"just skip","Fragments":["them.","that"]},{"Key":"don't bother","Fragments":["to","with"]},{"Key":"the letters","Fragments":["are","in","from","from","in","to","are","that"]},{"Key":"old data","Fragments":["twice.","was"]},{"Key":"data twice.","Fragments":["Last"]},{"Key":"twice. Last","Fragments":["one"]},{"Key":"Last one","Fragments":["wins.","in","in","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,","wins,"]},{"Key":"one wins.","Fragments":["Some"]},{"Key":"wins. Some","Fragments":["other"]},{"Key":"Some other","Fragments":["people"]},{"Key":"people check,","Fragments":["but"]},{"Key":"check, but","Fragments":["that","you"]},{"Key":"just means","Fragments":["first","you","we"]},{"Key":"means first","Fragments":["one"]},{"Key":"first one","Fragments":["wins.","has","after"]},{"Key":" @bill","Fragments":["Regarding","I"]},{"Key":"@bill Regarding","Fragments":["clarity"]},{"Key":"Regarding clarity","Fragments":["and"]},{"Key":"and readability,","Fragments":["I'd","I"]},{"Key":"I'd leave","Fragments":["that"]},{"Key":"leave that","Fragments":["up","up"]},{"Key":"the individual.","Fragments":["Most"]},{"Key":"individual. Most","Fragments":["people"]},{"Key":"Most people","Fragments":["would","will","used"]},{"Key":"prefer not","Fragments":["to"]},{"Key":"see it","Fragments":["on","checks","cannot","(and"]},{"Key":"one line.","Fragments":["However,","I","My","It's","It","Something"]},{"Key":"line. However,","Fragments":["some"]},{"Key":"However, some","Fragments":["people"]},{"Key":"people consider","Fragments":["a"]},{"Key":"statement easier","Fragments":["to"]},{"Key":"read. As","Fragments":["far"]},{"Key":"as design","Fragments":["patterns"]},{"Key":"design patterns","Fragments":["go,"]},{"Key":"patterns go,","Fragments":["it's"]},{"Key":"go, it's","Fragments":["commonly"]},{"Key":"it's commonly","Fragments":["suggested"]},{"Key":"commonly suggested","Fragments":["to"]},{"Key":"suggested to","Fragments":["minimize"]},{"Key":"to minimize","Fragments":["the","everything),"]},{"Key":"minimize the","Fragments":["number","code"]},{"Key":"a routine","Fragments":["and","(unless"]},{"Key":"routine and","Fragments":["only","cleaned"]},{"Key":"improves readability.","Fragments":["The","This"]},{"Key":"The one","Fragments":["line","I","stylistic","small","small","thing","small","thing"]},{"Key":"line solution","Fragments":["that","brings"]},{"Key":"used is","Fragments":["easier"]},{"Key":"read. When","Fragments":["there"]},{"Key":"When there","Fragments":["are"]},{"Key":"returns, and","Fragments":["multiple"]},{"Key":"and multiple","Fragments":["*if/else*","returns","whitespaces."]},{"Key":"multiple *if/else*","Fragments":["blocks,"]},{"Key":"*if/else* blocks,","Fragments":["it"]},{"Key":"blocks, it","Fragments":["takes"]},{"Key":"takes me","Fragments":["longer"]},{"Key":"me longer","Fragments":["to"]},{"Key":"longer to","Fragments":["evaluate","come","figure"]},{"Key":"to evaluate","Fragments":["when","the","by"]},{"Key":"evaluate when","Fragments":["I"]},{"Key":"Good job","Fragments":["checking","remembering","on","thinking","on","recognizing","coming","on"]},{"Key":"job checking","Fragments":["for"]},{"Key":"for non-negative","Fragments":["numbers!"]},{"Key":"non-negative numbers!","Fragments":["(I"]},{"Key":"numbers! (I","Fragments":["neglected"]},{"Key":"(I neglected","Fragments":["to"]},{"Key":"neglected to","Fragments":["do","check"]},{"Key":"in mine)","Fragments":["I"]},{"Key":"mine) I","Fragments":["also"]},{"Key":"also created","Fragments":["an"]},{"Key":"created an","Fragments":["extension","inner","empty","MSTest"]},{"Key":"for IsDivisibleBy","Fragments":["after"]},{"Key":"IsDivisibleBy after","Fragments":["I"]},{"Key":"after I","Fragments":["got","submitted.","submitted","had","submitted"]},{"Key":"got some","Fragments":["feedback","style"]},{"Key":"that really","Fragments":["helps","should"]},{"Key":"really helps","Fragments":["with","with"]},{"Key":"helps with","Fragments":["readability.","the"]},{"Key":"will say","Fragments":["though","you"]},{"Key":"say though","Fragments":["that"]},{"Key":"follow when","Fragments":["trying"]},{"Key":"when trying","Fragments":["determine","to","to"]},{"Key":"trying determine","Fragments":["what"]},{"Key":"what something","Fragments":["is"]},{"Key":"is by","Fragments":["checking","itself.","using"]},{"Key":"it's not.","Fragments":["I"]},{"Key":"not. I","Fragments":["just","prefer"]},{"Key":"just feel","Fragments":["like"]},{"Key":"like in","Fragments":["this","one"]},{"Key":"logic were","Fragments":["flipped."]},{"Key":"Also, something","Fragments":["that"]},{"Key":"something that","Fragments":["is","was","more","I'm","can","hadn't","I","hasn't","would","simple"]},{"Key":"always going","Fragments":["to"]},{"Key":"can check","Fragments":["for","to"]},{"Key":"and reduce","Fragments":["the","the","some","number","the"]},{"Key":"reduce the","Fragments":["number","nesting.","number","condition"]},{"Key":"of checks","Fragments":["you"]},{"Key":"checks you","Fragments":["have"]},{"Key":"go through","Fragments":["for","the","the","some","the","all","the","all","the","the"]},{"Key":"through for","Fragments":["that"]},{"Key":"have redundant","Fragments":["modulus"]},{"Key":"redundant modulus","Fragments":["calculations"]},{"Key":"statements here.","Fragments":["Your"]},{"Key":"here. Your","Fragments":["outer"]},{"Key":"Your outer","Fragments":["*if*"]},{"Key":"outer *if*","Fragments":["block"]},{"Key":"*if* block","Fragments":["checks"]},{"Key":"block checks","Fragments":["for"]},{"Key":"4 so","Fragments":["you"]},{"Key":"that calculation","Fragments":["again"]},{"Key":"calculation again","Fragments":["for"]},{"Key":"nested *if*","Fragments":["statements."]},{"Key":"*if* statements.","Fragments":["Also,"]},{"Key":"statements. Also,","Fragments":["in"]},{"Key":"Also, in","Fragments":["order","C#","this","your"]},{"Key":"unit tests,","Fragments":["you","I","it","but","so","capitals","but"]},{"Key":"an IsLeap","Fragments":["function"]},{"Key":"the suggestions.","Fragments":["Implemented!"]},{"Key":"suggestions. Implemented!","Fragments":[":)"]},{"Key":"there an","Fragments":["alternate","advantage","advantage","easier"]},{"Key":"an alternate","Fragments":["way","implementation"]},{"Key":"alternate way","Fragments":["I"]},{"Key":"could accomplish","Fragments":["the"]},{"Key":"same check?","Fragments":["Personally"]},{"Key":"check? Personally","Fragments":["I"]},{"Key":"what I'd","Fragments":["do"]},{"Key":"I'd do","Fragments":["differently","CheckNum()","the"]},{"Key":"do differently","Fragments":["in"]},{"Key":"differently in","Fragments":["that"]},{"Key":"really don't","Fragments":["get","like","know"]},{"Key":"get why","Fragments":["so"]},{"Key":"why so","Fragments":["many","that"]},{"Key":"people want","Fragments":["to"]},{"Key":"the ifs","Fragments":["and"]},{"Key":"return on","Fragments":["the","the"]},{"Key":"same line.","Fragments":["Shorter","It"]},{"Key":"line. Shorter","Fragments":["code"]},{"Key":"Shorter code","Fragments":["doesn't"]},{"Key":"doesn't equal","Fragments":["better"]},{"Key":"equal better","Fragments":["readable"]},{"Key":"better readable","Fragments":["code."]},{"Key":" Visual","Fragments":["Studio","Studio"]},{"Key":"Studio has","Fragments":["the"]},{"Key":"right idea:","Fragments":["always"]},{"Key":"idea: always","Fragments":["use"]},{"Key":"use {","Fragments":["}"]},{"Key":"{ }","Fragments":["after","if","in","in","but"]},{"Key":"} after","Fragments":["an"]},{"Key":"after an","Fragments":["if","if-return","object"]},{"Key":"if statement.","Fragments":["It's","I","However,","Yours","Even"]},{"Key":"statement. It's","Fragments":["much"]},{"Key":"much clearer","Fragments":["and"]},{"Key":"prevents maintenance","Fragments":["error"]},{"Key":"maintenance error","Fragments":["in"]},{"Key":"error in","Fragments":["the","writing","my","the"]},{"Key":"use in","Fragments":["line","the"]},{"Key":"is when","Fragments":["a","you"]},{"Key":"function starts","Fragments":["with"]},{"Key":"starts with","Fragments":["a"]},{"Key":"check on","Fragments":["the","every"]},{"Key":"the parameters","Fragments":["and","for"]},{"Key":"parameters and","Fragments":["throws"]},{"Key":"and throws","Fragments":["an","exceptions","an"]},{"Key":" EDIT:","Fragments":["also:","in","in"]},{"Key":"EDIT: also:","Fragments":["why"]},{"Key":"also: why","Fragments":["have"]},{"Key":"why have","Fragments":["an","'encode'?"]},{"Key":"an object","Fragments":["as","from","is","instance","instantiation.","instantiation"]},{"Key":"object as","Fragments":["return"]},{"Key":"as return","Fragments":["type"]},{"Key":"return type","Fragments":["instead","for","for","tells","is","is","of","to","to","of"]},{"Key":"type instead","Fragments":["of"]},{"Key":"your point.","Fragments":["I"]},{"Key":"problem as","Fragments":["a"]},{"Key":"a sieve.","Fragments":["Each"]},{"Key":"sieve. Each","Fragments":["test"]},{"Key":"Each test","Fragments":["eliminates"]},{"Key":"test eliminates","Fragments":["as"]},{"Key":"eliminates as","Fragments":["many"]},{"Key":"remaining years","Fragments":["as"]},{"Key":"years as","Fragments":["possible"]},{"Key":"end you","Fragments":["only"]},{"Key":"the corner","Fragments":["cases","case"]},{"Key":"corner cases","Fragments":["left."]},{"Key":"you check","Fragments":["for","the","for","my","for","out","if"]},{"Key":"the least","Fragments":["likely","lines"]},{"Key":"least likely","Fragments":["situations"]},{"Key":"likely situations","Fragments":["first,"]},{"Key":"situations first,","Fragments":["like"]},{"Key":"first, like","Fragments":["divisible"]},{"Key":"like divisible","Fragments":["by"]},{"Key":"then on","Fragments":["average"]},{"Key":"average your","Fragments":["program"]},{"Key":"your program","Fragments":["is","slower"]},{"Key":"program is","Fragments":["doing","including","fine"]},{"Key":"more work","Fragments":["to","than","than","than"]},{"Key":" @joan","Fragments":["You"]},{"Key":"@joan You","Fragments":["got"]},{"Key":"You got","Fragments":["me"]},{"Key":"got me","Fragments":["thinking,","through!"]},{"Key":"me thinking,","Fragments":["and"]},{"Key":"thinking, and","Fragments":["while"]},{"Key":"and while","Fragments":["I","it"]},{"Key":"still can't","Fragments":["think"]},{"Key":"if/else block,","Fragments":["I","but"]},{"Key":"block, I","Fragments":["did"]},{"Key":"did end","Fragments":["up"]},{"Key":"up refactoring","Fragments":["a"]},{"Key":"refactoring a","Fragments":["bit:"]},{"Key":"a bit:","Fragments":["a"]},{"Key":"bit: a","Fragments":["bunch"]},{"Key":"stuff was","Fragments":["moved"]},{"Key":"was moved","Fragments":["into"]},{"Key":"static Phrase","Fragments":["class,"]},{"Key":"Phrase class,","Fragments":["and"]},{"Key":"class, and","Fragments":["the","then"]},{"Key":"statement replaced","Fragments":["by"]},{"Key":"So are","Fragments":["you"]},{"Key":"you saying","Fragments":["I","but"]},{"Key":"this exact","Fragments":["code"]},{"Key":"exact code","Fragments":["block,","^^"]},{"Key":"code block,","Fragments":["without"]},{"Key":"block, without","Fragments":["converting"]},{"Key":"without converting","Fragments":["the"]},{"Key":"converting the","Fragments":["string","original","array","tests","letters","char","result","enum","string","existing","input"]},{"Key":"an array?","Fragments":["Or","You"]},{"Key":"array? Or","Fragments":["would"]},{"Key":"Or would","Fragments":["it","it","you"]},{"Key":"it have","Fragments":["to","been"]},{"Key":" Lazy","Fragments":["loading,"]},{"Key":"Lazy loading,","Fragments":["very"]},{"Key":"loading, very","Fragments":["nice!"]},{"Key":"also missed","Fragments":["the"]},{"Key":"Regex.Split method.","Fragments":["Cool"]},{"Key":"method. Cool","Fragments":["trick."]},{"Key":"Cool trick.","Fragments":[":-D",":-)"]},{"Key":"may well","Fragments":["be"]},{"Key":"rule forbidding","Fragments":["early"]},{"Key":"forbidding early","Fragments":["returns."]},{"Key":"early returns.","Fragments":["For"]},{"Key":"returns. For","Fragments":["me,"]},{"Key":"me, critical","Fragments":["thought"]},{"Key":"critical thought","Fragments":["shows"]},{"Key":"thought shows","Fragments":["it"]},{"Key":"shows it","Fragments":["to"]},{"Key":"a useful","Fragments":["rule.","general","type.","function,"]},{"Key":"useful rule.","Fragments":["In"]},{"Key":"rule. In","Fragments":["a"]},{"Key":"a language","Fragments":["that","that"]},{"Key":"language that","Fragments":["has","didn't"]},{"Key":"has `finally`","Fragments":["and"]},{"Key":"`finally` and","Fragments":["`using`,"]},{"Key":"and `using`,","Fragments":["well"]},{"Key":"`using`, well","Fragments":["placed"]},{"Key":"well placed","Fragments":["early"]},{"Key":"placed early","Fragments":["returns"]},{"Key":"returns require","Fragments":["less"]},{"Key":"require less","Fragments":["thought"]},{"Key":"less thought","Fragments":["about"]},{"Key":"about control","Fragments":["flow,"]},{"Key":"control flow,","Fragments":["not"]},{"Key":"flow, not","Fragments":["more."]},{"Key":"not more.","Fragments":["This"]},{"Key":"more. This","Fragments":["is"]},{"Key":"because once","Fragments":["you"]},{"Key":"once you","Fragments":["identify","figure","have","eliminate"]},{"Key":"you identify","Fragments":["where"]},{"Key":"identify where","Fragments":["a"]},{"Key":"return is","Fragments":["happening,","hard"]},{"Key":"is happening,","Fragments":["you"]},{"Key":"happening, you","Fragments":["don't"]},{"Key":"to examine","Fragments":["any"]},{"Key":"examine any","Fragments":["more"]},{"Key":"more control","Fragments":["flow."]},{"Key":"control flow.","Fragments":["If"]},{"Key":"flow. If","Fragments":["you","I"]},{"Key":"you waited","Fragments":["until"]},{"Key":"waited until","Fragments":["the"]},{"Key":"until the","Fragments":["end","user","1920s.","first","end,","last"]},{"Key":"method, you'd","Fragments":["have"]},{"Key":" **Hello","Fragments":["world**"]},{"Key":"have choose","Fragments":["to"]},{"Key":"an memory","Fragments":["overhead"]},{"Key":"memory overhead","Fragments":["to"]},{"Key":"overhead to","Fragments":["improve"]},{"Key":"the classic","Fragments":["false"]},{"Key":"classic false","Fragments":["until"]},{"Key":"false until","Fragments":["prove"]},{"Key":"until prove","Fragments":["true"]},{"Key":"prove true","Fragments":["approach."]},{"Key":"suggestion would","Fragments":["be","be","be"]},{"Key":"look into","Fragments":["Regex","my","using","that","is","that.","the","it!"]},{"Key":"into Regex","Fragments":["instead"]},{"Key":"Regex instead","Fragments":["of"]},{"Key":"of rolling","Fragments":["your","your"]},{"Key":"own with","Fragments":["the"]},{"Key":"the FilterPhrase","Fragments":["Method."]},{"Key":"FilterPhrase Method.","Fragments":["You"]},{"Key":"Method. You","Fragments":["are"]},{"Key":"are kinda","Fragments":["reinventing"]},{"Key":"kinda reinventing","Fragments":["the"]},{"Key":"reinventing the","Fragments":["wheel","wheel.","wheel"]},{"Key":"the wheel","Fragments":["here.","at"]},{"Key":"wheel here.","Fragments":[":-D"]},{"Key":"most straightforward","Fragments":["thing","way","approach."]},{"Key":"think of.","Fragments":["Only"]},{"Key":"of. Only","Fragments":["thing"]},{"Key":"thing that","Fragments":["bothers","I","I","might","you'll","might","might","came","might","jumps"]},{"Key":"that bothers","Fragments":["me"]},{"Key":"bothers me","Fragments":["are"]},{"Key":"me are","Fragments":["the"]},{"Key":"have left","Fragments":["out","it"]},{"Key":"left out","Fragments":["the","of","of","the"]},{"Key":"the closing","Fragments":["bracket"]},{"Key":"closing bracket","Fragments":["at"]},{"Key":"bracket at","Fragments":["line"]},{"Key":"at line","Fragments":["12,","15."]},{"Key":"12, but","Fragments":["I"]},{"Key":"read that","Fragments":["way.","way."]},{"Key":"Wow, nice","Fragments":["job."]},{"Key":"would execute","Fragments":["faster"]},{"Key":"execute faster","Fragments":["than"]},{"Key":"than Regex.","Fragments":["Of"]},{"Key":"Regex. Of","Fragments":["course,"]},{"Key":"course, what","Fragments":["it"]},{"Key":"it gains","Fragments":["in"]},{"Key":"gains in","Fragments":["performance"]},{"Key":"performance it","Fragments":["loses"]},{"Key":"it loses","Fragments":["in"]},{"Key":"loses in","Fragments":["readability."]},{"Key":"in readability.","Fragments":["Only","It"]},{"Key":"readability. Only","Fragments":["you","other"]},{"Key":"Only you","Fragments":["(or"]},{"Key":"you (or","Fragments":["your","someone"]},{"Key":"(or your","Fragments":["boss)"]},{"Key":"your boss)","Fragments":["can"]},{"Key":"boss) can","Fragments":["decide"]},{"Key":"can decide","Fragments":["if","if","how"]},{"Key":"decide if","Fragments":["the","it","an"]},{"Key":"the tradeoff","Fragments":["is"]},{"Key":"tradeoff is","Fragments":["worth"]},{"Key":" Cleaned","Fragments":["it","up"]},{"Key":"Cleaned it","Fragments":["up"]},{"Key":"the recommendation","Fragments":["from"]},{"Key":"recommendation from","Fragments":["@deja"]},{"Key":"from @deja","Fragments":["to"]},{"Key":"@deja to","Fragments":["try"]},{"Key":"solution fails","Fragments":["with"]},{"Key":"fails with","Fragments":["the"]},{"Key":"the Valid_leap_year()","Fragments":["test."]},{"Key":"I sure","Fragments":["needs","didn't"]},{"Key":"sure needs","Fragments":["some"]},{"Key":"needs some","Fragments":["brushing"]},{"Key":"some brushing","Fragments":["up"]},{"Key":"brushing up","Fragments":["on"]},{"Key":"on Dictionary.","Fragments":["I"]},{"Key":"Dictionary. I","Fragments":["was","see","like","decided"]},{"Key":"was `.ToList()`ing","Fragments":["the"]},{"Key":"`.ToList()`ing the","Fragments":["dictionary"]},{"Key":"dictionary not","Fragments":["realizing"]},{"Key":"realizing that","Fragments":["it"]},{"Key":"will enumerate","Fragments":["over"]},{"Key":"enumerate over","Fragments":["the","these"]},{"Key":"value pairs","Fragments":["anyway."]},{"Key":"pairs anyway.","Fragments":["So"]},{"Key":"anyway. So","Fragments":["I","in"]},{"Key":"I updated","Fragments":["that.","to","my"]},{"Key":"about clever","Fragments":["solutions"]},{"Key":"clever solutions","Fragments":["using"]},{"Key":"solutions using","Fragments":["Linq","Dictionaries,","Aggregate."]},{"Key":"Linq or","Fragments":["mapping","Regex","Regex"]},{"Key":"or mapping","Fragments":["patterns"]},{"Key":"mapping patterns","Fragments":["but"]},{"Key":"patterns but","Fragments":["I","it"]},{"Key":"prefer clear","Fragments":["code"]},{"Key":"clear code","Fragments":["that"]},{"Key":"doesn't obfuscate","Fragments":["what"]},{"Key":"obfuscate what","Fragments":["is","I"]},{"Key":"really going","Fragments":["on."]},{"Key":"To pass","Fragments":["the"]},{"Key":"the ```Only_numbers","Fragments":["()```"]},{"Key":"```Only_numbers ()```","Fragments":["test"]},{"Key":"()``` test","Fragments":["that"]},{"Key":"test that","Fragments":["checks","he","is","checked","checked","attempted"]},{"Key":"that checks","Fragments":["if","the"]},{"Key":"are capitalized,","Fragments":["you"]},{"Key":"capitalized, you","Fragments":["can"]},{"Key":" ```if","Fragments":["(s.ToUpper()==s"]},{"Key":"```if (s.ToUpper()==s","Fragments":["\u0026\u0026"]},{"Key":"(s.ToUpper()==s \u0026\u0026","Fragments":["s.ToLower()!=s)"]},{"Key":"\u0026\u0026 s.ToLower()!=s)","Fragments":["```"]},{"Key":"Another thing","Fragments":["you","you"]},{"Key":"at is","Fragments":["the","the"]},{"Key":"the ```String.Trim()```","Fragments":["method."]},{"Key":"In hindsight,","Fragments":["I"]},{"Key":"hindsight, I","Fragments":["should"]},{"Key":"have cleaned","Fragments":["up","those","up","out"]},{"Key":"in there.","Fragments":["I","It","I'm"]},{"Key":"validation as","Fragments":["a"]},{"Key":"own good","Fragments":["conscience."]},{"Key":"good conscience.","Fragments":["It's"]},{"Key":"conscience. It's","Fragments":["not"]},{"Key":"required by","Fragments":["the","the"]},{"Key":"the exercise,","Fragments":["but"]},{"Key":"exercise, but","Fragments":["if","can"]},{"Key":"I were","Fragments":["to","to","doing","to","to","to"]},{"Key":"were to","Fragments":["write","rewrite","get","be","do","instead","drop","cache,","get","just","add","call"]},{"Key":"write this","Fragments":["function","in"]},{"Key":"a real-life","Fragments":["application"]},{"Key":"real-life application","Fragments":["without"]},{"Key":"application without","Fragments":["knowing"]},{"Key":"without knowing","Fragments":["for","the"]},{"Key":"knowing for","Fragments":["sure"]},{"Key":"for sure","Fragments":["that"]},{"Key":"validation was","Fragments":["handled"]},{"Key":"was handled","Fragments":["elsewhere,"]},{"Key":"handled elsewhere,","Fragments":["I'd"]},{"Key":"elsewhere, I'd","Fragments":["want"]},{"Key":"I'd want","Fragments":["that"]},{"Key":"want that","Fragments":["in"]},{"Key":"avoid odd","Fragments":["false"]},{"Key":"odd false","Fragments":["positives."]},{"Key":"pretty straightforward.","Fragments":["Although","One"]},{"Key":"straightforward. Although","Fragments":["it"]},{"Key":"Although it","Fragments":["seems","works,"]},{"Key":"more functional","Fragments":["than","approach"]},{"Key":"functional than","Fragments":["pretty"]},{"Key":"than pretty","Fragments":["or"]},{"Key":"pretty or","Fragments":["elegant"]},{"Key":"or elegant","Fragments":["or"]},{"Key":"elegant or","Fragments":["object-oriented,"]},{"Key":"or object-oriented,","Fragments":["I"]},{"Key":"object-oriented, I","Fragments":["suppose."]},{"Key":"Not entirely","Fragments":["sure"]},{"Key":"entirely sure","Fragments":["how","why","the","the"]},{"Key":"how one","Fragments":["would"]},{"Key":"one would","Fragments":["make"]},{"Key":"more object-oriented","Fragments":["or"]},{"Key":"object-oriented or","Fragments":["any"]},{"Key":"that, even","Fragments":["if"]},{"Key":"A nice","Fragments":["article"]},{"Key":"nice article","Fragments":["about"]},{"Key":"article about","Fragments":["if/else"]},{"Key":"about if/else","Fragments":["statements"]},{"Key":"statements nesting","Fragments":["and"]},{"Key":"other hand,","Fragments":["this","that","coercing","you","it's"]},{"Key":"hand, this","Fragments":["is"]},{"Key":"implement successfully.","Fragments":["Ideally,"]},{"Key":"successfully. Ideally,","Fragments":["this"]},{"Key":"Ideally, this","Fragments":["method"]},{"Key":"one exit,","Fragments":["but"]},{"Key":"exit, but","Fragments":["In","I"]},{"Key":"but In","Fragments":["fact"]},{"Key":"fact it","Fragments":["is"]},{"Key":"doing three","Fragments":["things."]},{"Key":"I'm wondering","Fragments":["about","if","if"]},{"Key":"wondering about","Fragments":["the","both"]},{"Key":"is structured,","Fragments":["you"]},{"Key":"structured, you","Fragments":["don't"]},{"Key":"use \"else\"","Fragments":["."]},{"Key":"\"else\" .","Fragments":["That"]},{"Key":". That","Fragments":["will"]},{"Key":"slightly easier","Fragments":["to","to"]},{"Key":" @vella","Fragments":["Heh,"]},{"Key":"@vella Heh,","Fragments":["\"var\""]},{"Key":"Heh, \"var\"","Fragments":["really"]},{"Key":"\"var\" really","Fragments":["is"]},{"Key":"only supposed","Fragments":["to"]},{"Key":"prefer Regex","Fragments":["for"]},{"Key":"Regex for","Fragments":["this","this,","this"]},{"Key":"of string","Fragments":["manipulation,","extension","allocation).","(```String```"]},{"Key":"string manipulation,","Fragments":["but"]},{"Key":"manipulation, but","Fragments":["if"]},{"Key":"you wanna","Fragments":["roll","have"]},{"Key":"wanna roll","Fragments":["your"]},{"Key":"roll your","Fragments":["own"]},{"Key":"own that's","Fragments":["you"]},{"Key":"that's you","Fragments":["business."]},{"Key":"you business.","Fragments":[";-)"]},{"Key":"suggestion for","Fragments":["a"]},{"Key":"a speed","Fragments":["boost,","up"]},{"Key":"speed boost,","Fragments":["since"]},{"Key":"boost, since","Fragments":["StringBuilder's"]},{"Key":"since StringBuilder's","Fragments":["replace"]},{"Key":"StringBuilder's replace","Fragments":["is"]},{"Key":"replace is","Fragments":["a"]},{"Key":"a global","Fragments":["replace,"]},{"Key":"global replace,","Fragments":["you"]},{"Key":"replace, you","Fragments":["can"]},{"Key":"can cut","Fragments":["down"]},{"Key":"on operation","Fragments":["on"]},{"Key":"operation on","Fragments":["replace","a"]},{"Key":"on replace","Fragments":["calls"]},{"Key":"replace calls","Fragments":["on"]},{"Key":"calls on","Fragments":["duplicate","the","these"]},{"Key":"on duplicate","Fragments":["characters."]},{"Key":" Change","Fragments":["this:"]},{"Key":"(var character","Fragments":["in","in","in","in"]},{"Key":"character in","Fragments":["phrase)","phrase.Distinct())","it?","C#","the","the","the","it,","givenWord.ToLowerInvariant().Where(char.IsLetter))","words.ToLower())","their","the"]},{"Key":"I won't","Fragments":["repeat","get","be","remember"]},{"Key":"won't repeat","Fragments":["what"]},{"Key":"repeat what","Fragments":["others"]},{"Key":"others have","Fragments":["said","done","done"]},{"Key":"have said","Fragments":["I"]},{"Key":"said I","Fragments":["just"]},{"Key":"call out","Fragments":["that","is"]},{"Key":"a _hidden_","Fragments":["loop"]},{"Key":"_hidden_ loop","Fragments":["in"]},{"Key":"the Linq","Fragments":["Where.","extension",".Any","methods","method","method","query","string"]},{"Key":" Even","Fragments":["so,"]},{"Key":"Even so,","Fragments":["those"]},{"Key":"so, those","Fragments":["(myself"]},{"Key":"those (myself","Fragments":["included)"]},{"Key":"(myself included)","Fragments":["who"]},{"Key":"included) who","Fragments":["sort"]},{"Key":"who sort","Fragments":["the"]},{"Key":"the characters,","Fragments":["as","making"]},{"Key":"characters, as","Fragments":["suggested"]},{"Key":"as suggested","Fragments":["by","by"]},{"Key":"suggested by","Fragments":["@amira,","@ericka"]},{"Key":"by @amira,","Fragments":["also"]},{"Key":"@amira, also","Fragments":["have"]},{"Key":"have hidden","Fragments":["loops"]},{"Key":"hidden loops","Fragments":["that"]},{"Key":"loops that","Fragments":["we"]},{"Key":"we should","Fragments":["take","probably","use","check","know","not"]},{"Key":"should take","Fragments":["into","advantage","the"]},{"Key":"take into","Fragments":["consideration."]},{"Key":" @roselyn","Fragments":["The","Good"]},{"Key":"@roselyn The","Fragments":["tests"]},{"Key":"tests expect","Fragments":["empty","Date","a"]},{"Key":"expect empty","Fragments":["strings"]},{"Key":"empty strings","Fragments":["to","to","and"]},{"Key":"without exceptions.","Fragments":["I"]},{"Key":"exceptions. I","Fragments":["think"]},{"Key":"is wrong","Fragments":["because","with","and","with","with"]},{"Key":"wrong because","Fragments":["this"]},{"Key":"this means","Fragments":["a"]},{"Key":"means a","Fragments":["strand"]},{"Key":"a strand","Fragments":["of"]},{"Key":"strand of","Fragments":["x","dna"]},{"Key":"of x","Fragments":["characters"]},{"Key":"x characters","Fragments":["(where"]},{"Key":"characters (where","Fragments":["x"]},{"Key":"(where x","Fragments":["\u003e"]},{"Key":"x \u003e","Fragments":["0)"]},{"Key":"\u003e 0)","Fragments":["would","{","{"]},{"Key":"0) would","Fragments":["have"]},{"Key":"a hamming","Fragments":["distance"]},{"Key":"distance of","Fragments":["zero","0."]},{"Key":"of zero","Fragments":["when"]},{"Key":"zero when","Fragments":["the"]},{"Key":"other strand","Fragments":["is"]},{"Key":"strand is","Fragments":["empty.","shortest"]},{"Key":"@roselyn Good","Fragments":["job."]},{"Key":"Good job.","Fragments":["Especially","One","A","You","This","I","Most","The"]},{"Key":"job. Especially","Fragments":["on"]},{"Key":"Especially on","Fragments":["handling","the"]},{"Key":"on handling","Fragments":["nulls","this"]},{"Key":"handling nulls","Fragments":["properly."]},{"Key":"nulls properly.","Fragments":["I"]},{"Key":"properly. I","Fragments":["forgot"]},{"Key":"submission. Shame","Fragments":["on"]},{"Key":"Shame on","Fragments":["me."]},{"Key":"fairly new","Fragments":["coder,"]},{"Key":"new coder,","Fragments":["so"]},{"Key":"coder, so","Fragments":["I"]},{"Key":"the first(and","Fragments":["simplest)"]},{"Key":"first(and simplest)","Fragments":["solution"]},{"Key":"simplest) solution","Fragments":["I"]},{"Key":"think of...","Fragments":["a"]},{"Key":"of... a","Fragments":["bunch"]},{"Key":"statements. x","Fragments":["%"]},{"Key":"% y","Fragments":["==","==","=="]},{"Key":"y ==","Fragments":["0","0)","0```."]},{"Key":"for \"even","Fragments":["division\","]},{"Key":"\"even division\",","Fragments":["also."]},{"Key":"other people's","Fragments":["answers,","work","submissions.","code","approaches","posts","implementations."]},{"Key":"people's answers,","Fragments":["I"]},{"Key":"answers, I","Fragments":["do","took"]},{"Key":"do feel","Fragments":["a"]},{"Key":"little silly","Fragments":["not"]},{"Key":"silly not","Fragments":["just"]},{"Key":"using \u0026\u0026,","Fragments":["the"]},{"Key":"\u0026\u0026, the","Fragments":["way"]},{"Key":"complicated to","Fragments":["read."]},{"Key":"have much","Fragments":["experience","to"]},{"Key":"much experience","Fragments":["using"]},{"Key":"experience using","Fragments":["those"]},{"Key":"using those","Fragments":["operators"]},{"Key":"those operators","Fragments":["yet."]},{"Key":"using white","Fragments":["list"]},{"Key":"white list","Fragments":["for","for"]},{"Key":"list for","Fragments":["the","the","a","any"]},{"Key":"the REGEX_PUNCTUATION.","Fragments":["What"]},{"Key":"REGEX_PUNCTUATION. What","Fragments":["if"]},{"Key":"someone comes","Fragments":["along"]},{"Key":"comes along","Fragments":["and"]},{"Key":"along and","Fragments":["sends"]},{"Key":"and sends","Fragments":["you"]},{"Key":"sends you","Fragments":["a"]},{"Key":"you a","Fragments":["phrase"]},{"Key":"phrase that","Fragments":["has"]},{"Key":"a |","Fragments":["character"]},{"Key":"| character","Fragments":["in"]},{"Key":"You really","Fragments":["just","shouldn't","shouldn't","need"]},{"Key":"really just","Fragments":["want","nitpicking,","me","for"]},{"Key":"just want","Fragments":["to","to","to"]},{"Key":"allow what","Fragments":["is"]},{"Key":"a valid","Fragments":["word","range).","year","year","phone","year","Scrabble","object","object.","allergy,","response","nucleotide.","string","output."]},{"Key":"valid word","Fragments":["character."]},{"Key":"word character.","Fragments":["Regex"]},{"Key":"character. Regex","Fragments":["has"]},{"Key":"Regex has","Fragments":["a"]},{"Key":"a built-in","Fragments":["character"]},{"Key":"built-in character","Fragments":["class"]},{"Key":"character class","Fragments":["for","handles"]},{"Key":"for this:","Fragments":["\\w."]},{"Key":"this: \\w.","Fragments":["If"]},{"Key":"\\w. If","Fragments":["you"]},{"Key":"to negate","Fragments":["it,"]},{"Key":"negate it,","Fragments":["you"]},{"Key":"it, you","Fragments":["can","could","get"]},{"Key":"the capital","Fragments":["w"]},{"Key":"capital w","Fragments":["version:"]},{"Key":"w version:","Fragments":["\\W."]},{"Key":"Also, use","Fragments":["the"]},{"Key":"the +","Fragments":["multiplier,"]},{"Key":"+ multiplier,","Fragments":["you"]},{"Key":"multiplier, you","Fragments":["can"]},{"Key":"can split","Fragments":["on"]},{"Key":"split on","Fragments":["runs"]},{"Key":"on runs","Fragments":["of"]},{"Key":"runs of","Fragments":["the"]},{"Key":"characters, making","Fragments":["the"]},{"Key":"the returned","Fragments":["list","letters","Dictionary."]},{"Key":"returned list","Fragments":["smaller"]},{"Key":"list smaller","Fragments":["and"]},{"Key":"smaller and","Fragments":["faster","more"]},{"Key":"and faster","Fragments":["to"]},{"Key":"faster to","Fragments":["loop","generate","implement"]},{"Key":"to loop","Fragments":["through.","through","through","to"]},{"Key":"In short,","Fragments":["try"]},{"Key":"short, try","Fragments":["this:"]},{"Key":"private const","Fragments":["string","string","string"]},{"Key":"const string","Fragments":["REGEX_PUNCTUATION","WordPattern","WordPattern"]},{"Key":"string REGEX_PUNCTUATION","Fragments":["="]},{"Key":"REGEX_PUNCTUATION =","Fragments":["\"\\W+\";"]},{"Key":"The guard","Fragments":["statements"]},{"Key":"guard statements","Fragments":["are"]},{"Key":"good idea,","Fragments":["but"]},{"Key":"idea, but","Fragments":["should","I've"]},{"Key":"but should","Fragments":["they","be"]},{"Key":"should they","Fragments":["be"]},{"Key":"they be","Fragments":["`String.IsNullOrWhitespace`?"]},{"Key":"that, looks","Fragments":["good.","good.","good.","good.","good.","good."]},{"Key":"didn't even","Fragments":["consider","know","mention","mention","notice"]},{"Key":"even consider","Fragments":["that","moving"]},{"Key":"agree, I","Fragments":["prefer","forgot"]},{"Key":"prefer a","Fragments":["white","compact"]},{"Key":"a white","Fragments":["list"]},{"Key":"the acceptable","Fragments":["characters"]},{"Key":"acceptable characters","Fragments":["instead"]},{"Key":"characters instead","Fragments":["of"]},{"Key":"a black","Fragments":["list."]},{"Key":"like Regex","Fragments":["for"]},{"Key":"as this","Fragments":["is","will","takes","author","you"]},{"Key":"it's designed","Fragments":["for."]},{"Key":"= Regex.Split(phrase,","Fragments":["@\"[^\\w]\").Where(w"]},{"Key":"Regex.Split(phrase, @\"[^\\w]\").Where(w","Fragments":["=\u003e"]},{"Key":"@\"[^\\w]\").Where(w =\u003e","Fragments":["w"]},{"Key":"=\u003e w","Fragments":["!="]},{"Key":"w !=","Fragments":["string.Empty).ToArray();"]},{"Key":" Neat.","Fragments":["I"]},{"Key":"Neat. I","Fragments":["didn't"]},{"Key":"tests, I","Fragments":["noticed","will"]},{"Key":"are calling","Fragments":["IsLeap","ToLower()",".ToLower()"]},{"Key":"calling IsLeap","Fragments":["as"]},{"Key":"IsLeap as","Fragments":["a"]},{"Key":"static method,","Fragments":["thought"]},{"Key":"method, thought","Fragments":["that's"]},{"Key":"thought that's","Fragments":["obviously"]},{"Key":"that's obviously","Fragments":["an"]},{"Key":"obviously an","Fragments":["easy"]},{"Key":"an easy","Fragments":["fix.","code"]},{"Key":"easy fix.","Fragments":["All"]},{"Key":"fix. All","Fragments":["of"]},{"Key":"All of","Fragments":["the","your","which"]},{"Key":"the provided","Fragments":["tests","link","string","string"]},{"Key":"provided tests","Fragments":["pass"]},{"Key":"pass when","Fragments":["I","I"]},{"Key":"I switched","Fragments":["that.","to","the","to","I","to"]},{"Key":"curious if","Fragments":["there"]},{"Key":"reason you","Fragments":["did","did","are","went","chose","separated","chose","didn't","use","didn't","didn't"]},{"Key":"the mods","Fragments":["ahead","directly"]},{"Key":"mods ahead","Fragments":["of"]},{"Key":"ahead of","Fragments":["time","myself"]},{"Key":"time instead","Fragments":["in"]},{"Key":"instead in","Fragments":["the"]},{"Key":"is necessarily","Fragments":["better"]},{"Key":"necessarily better","Fragments":["than"]},{"Key":"other, but","Fragments":["I'm"]},{"Key":"One other","Fragments":["thing","small","thing,"]},{"Key":"other thing","Fragments":["to","is","that","I"]},{"Key":"consider (though","Fragments":["it"]},{"Key":"(though it","Fragments":["was"]},{"Key":"not asked","Fragments":["for"]},{"Key":"asked for","Fragments":["in"]},{"Key":"for in","Fragments":["this","and","and","and","the","this","constructor"]},{"Key":"this exercise)","Fragments":["is"]},{"Key":"exercise) is","Fragments":["input"]},{"Key":"is input","Fragments":["validation."]},{"Key":"input validation.","Fragments":["To"]},{"Key":"validation. To","Fragments":["see"]},{"Key":"To see","Fragments":["what"]},{"Key":"I mean,","Fragments":["pass","anything"]},{"Key":"mean, pass","Fragments":["that"]},{"Key":"that function","Fragments":["a","was"]},{"Key":"function a","Fragments":["value"]},{"Key":"number that","Fragments":["fulfills","is"]},{"Key":"that fulfills","Fragments":["the"]},{"Key":"fulfills the","Fragments":["mathematical"]},{"Key":"the mathematical","Fragments":["requirements."]},{"Key":"the changes","Fragments":["you","to","to"]},{"Key":"changes you","Fragments":["made."]},{"Key":"you made.","Fragments":["Very","The"]},{"Key":"made. Very","Fragments":["different"]},{"Key":"Very different","Fragments":["to"]},{"Key":"I approached","Fragments":["it"]},{"Key":"approached it","Fragments":["but"]},{"Key":"but fairly","Fragments":["readable."]},{"Key":"was converting","Fragments":["strings"]},{"Key":"converting strings","Fragments":["`ToLower`"]},{"Key":"strings `ToLower`","Fragments":["before"]},{"Key":"`ToLower` before","Fragments":["comparing"]},{"Key":"before comparing","Fragments":["them."]},{"Key":"comparing them.","Fragments":["This"]},{"Key":"them. This","Fragments":["worked","bonus","is"]},{"Key":"This worked","Fragments":["well"]},{"Key":"worked well","Fragments":["with"]},{"Key":"sort algorithm,","Fragments":["but"]},{"Key":"algorithm, but","Fragments":["was","very"]},{"Key":"but was","Fragments":["inefficient","taken","under","having"]},{"Key":"was inefficient","Fragments":["because"]},{"Key":"inefficient because","Fragments":["it"]},{"Key":"it required","Fragments":["two","that"]},{"Key":"required two","Fragments":["passes"]},{"Key":"two passes","Fragments":["through"]},{"Key":"passes through","Fragments":["the","the"]},{"Key":"to case-insensitive","Fragments":["comparisons,"]},{"Key":"case-insensitive comparisons,","Fragments":["but"]},{"Key":"comparisons, but","Fragments":["this"]},{"Key":"this complicated","Fragments":["the"]},{"Key":"complicated the","Fragments":["sort"]},{"Key":"sort algorithm","Fragments":["a","instead"]},{"Key":"algorithm a","Fragments":["bit."]},{"Key":"bit. .NET","Fragments":["does"]},{"Key":".NET does","Fragments":["not"]},{"Key":"not ship","Fragments":["with"]},{"Key":"ship with","Fragments":["an"]},{"Key":"an `IComparer\u003cchar\u003e`,","Fragments":["so"]},{"Key":"`IComparer\u003cchar\u003e`, so","Fragments":["I"]},{"Key":"create my","Fragments":["own,","own","own","blocks."]},{"Key":"own, that","Fragments":["doesn't"]},{"Key":"very clearly,","Fragments":["but"]},{"Key":"clearly, but","Fragments":["I"]},{"Key":"think warranted","Fragments":["a"]},{"Key":"warranted a","Fragments":["new"]},{"Key":" (x,","Fragments":["y)"]},{"Key":"(x, y)","Fragments":["=\u003e"]},{"Key":"y) =\u003e","Fragments":["char.ToLower(x)"]},{"Key":"=\u003e char.ToLower(x)","Fragments":["-"]},{"Key":"char.ToLower(x) -","Fragments":["char.ToLower(y)"]},{"Key":"Compute(string a,","Fragments":["string"]},{"Key":"a, string","Fragments":["b)"]},{"Key":"var shortestStrandLength","Fragments":["="]},{"Key":"shortestStrandLength =","Fragments":["(a.Length"]},{"Key":"= (a.Length","Fragments":["\u003e"]},{"Key":"(a.Length \u003e","Fragments":["b.Length)"]},{"Key":"\u003e b.Length)","Fragments":["?"]},{"Key":"b.Length) ?","Fragments":["b.Length"]},{"Key":"? b.Length","Fragments":[":"]},{"Key":"b.Length :","Fragments":["a.Length;"]},{"Key":" for","Fragments":["(int","(var","(var","(int","(int","(int","(int","(int","(int","each","each","(var","2","3","1","(int","(int","(int","(int","(int","(int","(int","(int","loops","(int","can","-\u003e","loop"]},{"Key":"for (int","Fragments":["i","i","current","i","i","i","i","i","i","i","j","i","i","i","i","i"]},{"Key":"(int i","Fragments":["=","=","=","=","=","=","=","=","=","in","=","=","=","=","=","=","="]},{"Key":"i =","Fragments":["0;","0","1;","0;","0;","0;","0;","0;","0;","0;","0","number.scale;","multi;","0;","2;","0;","0;","0;","0;","0;","0;"]},{"Key":"= 0;","Fragments":["i","index","index","index","i","i","i","i","i","i\u003cs1.Length;i++)","i","i","i","i","i","value","i","i"]},{"Key":"0; i","Fragments":["\u003c","\u003c","\u003c","\u003c","\u003c","\u003c","\u003c","\u003c","\u003c","\u003c","\u003c","\u003c","\u003c"]},{"Key":"i \u003c","Fragments":["shortestStrandLength;","length;","to;","total_names;","total_names;","strand1.Length;","numberOfNumbers;","number.precision)","limit;","binaryString.Length;","10000000;","10000000;","x","Numbers.Keys.Count;","100;","2;"]},{"Key":"\u003c shortestStrandLength;","Fragments":["i++)"]},{"Key":"if (a[i]","Fragments":["!=","!="]},{"Key":"(a[i] !=","Fragments":["b[i])","b[i]){"]},{"Key":"Your `isAnagram`","Fragments":["method"]},{"Key":"`isAnagram` method","Fragments":["is"]},{"Key":"bit inefficient","Fragments":["in"]},{"Key":"inefficient in","Fragments":["the"]},{"Key":"worst cases","Fragments":["with"]},{"Key":"cases with","Fragments":["the","numbers."]},{"Key":"loop within","Fragments":["a"]},{"Key":"a loop.","Fragments":["You"]},{"Key":"loop. You","Fragments":["could"]},{"Key":"get away","Fragments":["with","with","with","with","with"]},{"Key":"away with","Fragments":["three","it","something","the","it.","more","blabla"]},{"Key":"with three","Fragments":["passes","different","nested"]},{"Key":"three passes","Fragments":["through"]},{"Key":"words by","Fragments":["sorting"]},{"Key":"by sorting","Fragments":["them"]},{"Key":"sorting them","Fragments":["and"]},{"Key":"them and","Fragments":["comparing","resubmit","try,"]},{"Key":"the sorted","Fragments":["values."]},{"Key":"your member","Fragments":["variable","variable"]},{"Key":"member variable","Fragments":["`_sourceWordLetters`","`nucleotideCounts`"]},{"Key":"variable `_sourceWordLetters`","Fragments":["to"]},{"Key":"`_sourceWordLetters` to","Fragments":["something"]},{"Key":"like `_sortedSourceLetters`","Fragments":["to"]},{"Key":"`_sortedSourceLetters` to","Fragments":["make"]},{"Key":"algorithm clearer.","Fragments":["All"]},{"Key":"clearer. All","Fragments":["your"]},{"Key":"All your","Fragments":["ToLowers"]},{"Key":"your ToLowers","Fragments":["are"]},{"Key":"ToLowers are","Fragments":["a"]},{"Key":"bit inefficient,","Fragments":["but"]},{"Key":"inefficient, but","Fragments":["other"]},{"Key":"but other","Fragments":["than","people"]},{"Key":" http://msdn.microsoft.com/en-us/library/ff926074.aspx","Fragments":["Has"]},{"Key":"http://msdn.microsoft.com/en-us/library/ff926074.aspx Has","Fragments":["quite"]},{"Key":"Has quite","Fragments":["a"]},{"Key":"a few...","Fragments":["However,"]},{"Key":"few... However,","Fragments":["they"]},{"Key":"However, they","Fragments":["encourage"]},{"Key":"they encourage","Fragments":["using"]},{"Key":"encourage using","Fragments":["\"var\""]},{"Key":"\"var\" over","Fragments":["say"]},{"Key":"over say","Fragments":["\"int\","]},{"Key":"say \"int\",","Fragments":["which"]},{"Key":"\"int\", which","Fragments":["really"]},{"Key":"which really","Fragments":["surprises"]},{"Key":"really surprises","Fragments":["me."]},{"Key":" http://msdn.microsoft.com/en-us/library/ms229043(v=vs.110).aspx","Fragments":["is"]},{"Key":"http://msdn.microsoft.com/en-us/library/ms229043(v=vs.110).aspx is","Fragments":["good"]},{"Key":"is good","Fragments":["for","practice","enough","practice","enough,","too."]},{"Key":"good for","Fragments":["naming","debugging,"]},{"Key":"This got","Fragments":["out"]},{"Key":"got out","Fragments":["of"]},{"Key":"of hand","Fragments":[":)"]},{"Key":" @sandra","Fragments":["To"]},{"Key":"@sandra To","Fragments":["me,"]},{"Key":"To me,","Fragments":["why","using","naming","this"]},{"Key":"me, why","Fragments":["are"]},{"Key":"you checking","Fragments":["code"]},{"Key":"checking code","Fragments":["to"]},{"Key":"break from","Fragments":["a"]},{"Key":"method early?","Fragments":["Why"]},{"Key":"early? Why","Fragments":["wouldn't"]},{"Key":"Why wouldn't","Fragments":["you"]},{"Key":"wouldn't you","Fragments":["check","have"]},{"Key":"the opposite","Fragments":["and","order","of","of"]},{"Key":"opposite and","Fragments":["continue."]},{"Key":"and continue.","Fragments":["There"]},{"Key":"continue. There","Fragments":["could"]},{"Key":"There could","Fragments":["be"]},{"Key":"be 20","Fragments":["or"]},{"Key":"20 or","Fragments":["30"]},{"Key":"or 30","Fragments":["ways"]},{"Key":"30 ways","Fragments":["to"]},{"Key":"wrong and","Fragments":["break,","should","allow"]},{"Key":"and break,","Fragments":["but"]},{"Key":"break, but","Fragments":["only"]},{"Key":"but only","Fragments":["one","2","if","to","the"]},{"Key":"one correct","Fragments":["way"]},{"Key":"correct way","Fragments":["to","to"]},{"Key":"correct thing","Fragments":["and"]},{"Key":"break early","Fragments":["from","that"]},{"Key":"early from","Fragments":["all"]},{"Key":"from all","Fragments":["the","the"]},{"Key":" to","Fragments":["this","ensure"]},{"Key":" @francesco","Fragments":["Yeah,"]},{"Key":"@francesco Yeah,","Fragments":["I'm"]},{"Key":"Yeah, I'm","Fragments":["not","going"]},{"Key":"good with","Fragments":["Regular"]},{"Key":"with Regular","Fragments":["Expressions,"]},{"Key":"Regular Expressions,","Fragments":["so"]},{"Key":"Expressions, so","Fragments":["I"]},{"Key":"get punctuation","Fragments":["(but"]},{"Key":"punctuation (but","Fragments":["also"]},{"Key":"(but also","Fragments":["allow","for"]},{"Key":"also allow","Fragments":["'","you","you"]},{"Key":"allow '","Fragments":["character)."]},{"Key":"' character).","Fragments":["I'll"]},{"Key":"character). I'll","Fragments":["try"]},{"Key":"this out,","Fragments":["thanks!"]},{"Key":" @timothy,","Fragments":["I"]},{"Key":"@timothy, I","Fragments":["am"]},{"Key":"am really","Fragments":["just"]},{"Key":"just nitpicking,","Fragments":["it"]},{"Key":"nitpicking, it","Fragments":["looks"]},{"Key":"good. It","Fragments":["is"]},{"Key":"is nice","Fragments":["to","and","to","to","and","though","but"]},{"Key":"see someone","Fragments":["else","else","else"]},{"Key":"else figure","Fragments":["out"]},{"Key":"algorithm instead","Fragments":["of"]},{"Key":"of double","Fragments":["loops"]},{"Key":"double loops","Fragments":["and"]},{"Key":"loops and","Fragments":["removing","conditional"]},{"Key":"and removing","Fragments":["found","grades,"]},{"Key":"removing found","Fragments":["letters."]},{"Key":"found letters.","Fragments":["I"]},{"Key":"similar to","Fragments":["you","the","yours.","a","yours","my","yours,","an","my","this","this."]},{"Key":"first pass.","Fragments":["Second","The"]},{"Key":"pass. Second","Fragments":["pass,"]},{"Key":"Second pass,","Fragments":["I"]},{"Key":"using equals","Fragments":["with"]},{"Key":"equals with","Fragments":["an"]},{"Key":"an CurrentCultureIgnore","Fragments":["case,"]},{"Key":"CurrentCultureIgnore case,","Fragments":["but"]},{"Key":"the character","Fragments":["sort","in","value","is","to","is","to"]},{"Key":"character sort","Fragments":["a"]},{"Key":"sort a","Fragments":["bit"]},{"Key":"right, me","Fragments":["bad,"]},{"Key":"me bad,","Fragments":["I"]},{"Key":"bad, I","Fragments":["just"]},{"Key":"and looked","Fragments":["at","at"]},{"Key":" @guadalupe,","Fragments":["that"]},{"Key":"@guadalupe, that","Fragments":["depends"]},{"Key":"that depends","Fragments":["on","on","on"]},{"Key":"your coding","Fragments":["standards"]},{"Key":"find lines","Fragments":["like"]},{"Key":"lines like","Fragments":["the"]},{"Key":"following redundant","Fragments":["and"]},{"Key":"and too","Fragments":["much"]},{"Key":"much typing.","Fragments":[":smile:"]},{"Key":" Dictionary\u003cstring,","Fragments":["int\u003e"]},{"Key":"int\u003e output","Fragments":["="]},{"Key":"output =","Fragments":["new","new","new","new"]},{"Key":"// Compared","Fragments":["to"]},{"Key":"var output","Fragments":["="]},{"Key":" @mathilde","Fragments":["Well,"]},{"Key":"@mathilde Well,","Fragments":["technically,"]},{"Key":"Well, technically,","Fragments":["you"]},{"Key":"technically, you","Fragments":["should","just"]},{"Key":"really be","Fragments":["using","placed","part"]},{"Key":"using IDictionary\u003c\u003e","Fragments":["so","is","someone"]},{"Key":"IDictionary\u003c\u003e so","Fragments":["you"]},{"Key":"don't force","Fragments":["the"]},{"Key":"the Dictionary\u003c\u003e","Fragments":["impmenetation.."]},{"Key":"Dictionary\u003c\u003e impmenetation..","Fragments":["Meaning"]},{"Key":"impmenetation.. Meaning","Fragments":["you"]},{"Key":"Meaning you","Fragments":["couldn't"]},{"Key":"you couldn't","Fragments":["use"]},{"Key":"couldn't use","Fragments":["var"]},{"Key":"var there.","Fragments":[";)"]},{"Key":"looks ugly","Fragments":["to"]},{"Key":"ugly to","Fragments":["me."]},{"Key":"me. Combining","Fragments":["linq"]},{"Key":"Combining linq","Fragments":["with"]},{"Key":"linq with","Fragments":["integer"]},{"Key":"with integer","Fragments":["addition"]},{"Key":"integer addition","Fragments":["on"]},{"Key":"addition on","Fragments":["a"]},{"Key":"return line","Fragments":["looks","but"]},{"Key":"line looks","Fragments":["awful."]},{"Key":" Heh,","Fragments":["null","I","I","linq"]},{"Key":"Heh, null","Fragments":["exceptions"]},{"Key":"null exceptions","Fragments":["and"]},{"Key":"exceptions and","Fragments":["I","its"]},{"Key":"I are","Fragments":["bitter"]},{"Key":"are bitter","Fragments":["enemies,"]},{"Key":"bitter enemies,","Fragments":["so"]},{"Key":"enemies, so","Fragments":["I've"]},{"Key":"so I've","Fragments":["learned","cleaned","updated","been"]},{"Key":"I've learned","Fragments":["shoot"]},{"Key":"learned shoot","Fragments":["first!"]},{"Key":"shoot first!","Fragments":[":)"]},{"Key":" @ryley","Fragments":["I"]},{"Key":"@ryley I","Fragments":["did"]},{"Key":"did consider","Fragments":["using"]},{"Key":"the string.IsNullOrWhiteSpace","Fragments":["check","method."]},{"Key":"string.IsNullOrWhiteSpace check","Fragments":["but"]},{"Key":"check but","Fragments":["realized"]},{"Key":"but realized","Fragments":["that","pretty","it"]},{"Key":"that even","Fragments":["if","when"]},{"Key":"both were","Fragments":["empty"]},{"Key":"were empty","Fragments":["strings,"]},{"Key":"empty strings,","Fragments":["the"]},{"Key":"still function","Fragments":["correctly."]},{"Key":"function correctly.","Fragments":["I"]},{"Key":"correctly. I","Fragments":["was"]},{"Key":"just preventing","Fragments":["the"]},{"Key":"obvious crash.","Fragments":["It"]},{"Key":"crash. It","Fragments":["would"]},{"Key":"a \"business","Fragments":["rule\""]},{"Key":"\"business rule\"","Fragments":["to"]},{"Key":"rule\" to","Fragments":["warrant"]},{"Key":"warrant the","Fragments":["whitespace"]},{"Key":"the whitespace","Fragments":["check,","to"]},{"Key":"whitespace check,","Fragments":["too."]},{"Key":"check, too.","Fragments":[":)"]},{"Key":"you @laverne","Fragments":["!"]},{"Key":"A coworker","Fragments":["also"]},{"Key":"coworker also","Fragments":["suggested"]},{"Key":"also suggested","Fragments":["i"]},{"Key":"suggested i","Fragments":["do"]},{"Key":"i do","Fragments":["this","think"]},{"Key":"this on","Fragments":["one","you,","the","the"]},{"Key":"line. I","Fragments":["will","tried"]},{"Key":"will iterate","Fragments":["over"]},{"Key":"iterate over","Fragments":["this","strings"]},{"Key":"exercise when","Fragments":["i"]},{"Key":"when i","Fragments":["get"]},{"Key":"i get","Fragments":["home."]},{"Key":"% 4)","Fragments":["==","==","==","=="]},{"Key":"4) ==","Fragments":["(year","0","0)\u003c/code\u003e","0)"]},{"Key":"== (year","Fragments":["%"]},{"Key":"% 100)","Fragments":["==","!=","==","/"]},{"Key":"100) ==","Fragments":["0","0)"]},{"Key":"0 (year","Fragments":["%"]},{"Key":"400) ==","Fragments":["0","0;```","0)"]},{"Key":" @wyatt","Fragments":["Yes,"]},{"Key":"@wyatt Yes,","Fragments":["I"]},{"Key":"one too","Fragments":["many"]},{"Key":"many ToLower()","Fragments":["on"]},{"Key":"word variable,","Fragments":["but"]},{"Key":"variable, but","Fragments":["I","I","you","since"]},{"Key":"get around","Fragments":["that","the"]},{"Key":"around that","Fragments":["(in"]},{"Key":"that (in","Fragments":["my","general)","Linq","2012!)."]},{"Key":"my implementation).","Fragments":["As"]},{"Key":"implementation). As","Fragments":["for"]},{"Key":"the variable,","Fragments":["I"]},{"Key":"variable, I","Fragments":["agree"]},{"Key":"better name.","Fragments":["I"]},{"Key":"name. I","Fragments":["created","noticed"]},{"Key":"I created","Fragments":["that","an","a","the","a"]},{"Key":"created that","Fragments":["name"]},{"Key":"name originally","Fragments":["and"]},{"Key":"originally and","Fragments":["didn't"]},{"Key":"didn't do","Fragments":["the","that"]},{"Key":"sort until","Fragments":["later."]},{"Key":"until later.","Fragments":[":)"]},{"Key":"have overcomplicated","Fragments":["things"]},{"Key":"overcomplicated things","Fragments":["a"]},{"Key":"things a","Fragments":["bit"]},{"Key":"bit when","Fragments":["just"]},{"Key":"when just","Fragments":["trying","working"]},{"Key":"just trying","Fragments":["to","to","to"]},{"Key":"it past","Fragments":["the","any"]},{"Key":"like what","Fragments":["I","your","I"]},{"Key":"should certainly","Fragments":["learn"]},{"Key":"certainly learn","Fragments":["to"]},{"Key":"learn to","Fragments":["use"]},{"Key":"One thing,","Fragments":["the","I"]},{"Key":"thing, the","Fragments":["variable"]},{"Key":"variable anagramCharacters","Fragments":["is"]},{"Key":"anagramCharacters is","Fragments":["completely"]},{"Key":"is completely","Fragments":["unnecessary.","wasted.","wigging","redundant:"]},{"Key":"completely unnecessary.","Fragments":["You"]},{"Key":"string like","Fragments":["a"]},{"Key":"character array.","Fragments":["Like","I'm"]},{"Key":"array. Like","Fragments":["so:"]},{"Key":" string","Fragments":["anagramWord","letterLower","lowerLetter","name;","number","name;","roman","roman","validDigits"]},{"Key":"string anagramWord","Fragments":["="]},{"Key":"anagramWord =","Fragments":["\"hello"]},{"Key":"= \"hello","Fragments":["world\";"]},{"Key":" foreach(","Fragments":["char"]},{"Key":"foreach( char","Fragments":["c"]},{"Key":"char c","Fragments":["in"]},{"Key":"c in","Fragments":["anagramWord","encoded)","binaryString)","input)","dnaString)?"]},{"Key":"in anagramWord","Fragments":[")"]},{"Key":" Console.WriteLine","Fragments":["(\"c=\""]},{"Key":"Console.WriteLine (\"c=\"","Fragments":["+"]},{"Key":"(\"c=\" +","Fragments":["c);"]},{"Key":"could chain","Fragments":["your"]},{"Key":"chain your","Fragments":["Linq"]},{"Key":"Linq and","Fragments":["save","Foreach","I","use"]},{"Key":"and save","Fragments":["on","us","it","yourself"]},{"Key":"on single","Fragments":["use"]},{"Key":"single use","Fragments":["variables"]},{"Key":"use variables","Fragments":["without","would"]},{"Key":"variables without","Fragments":["losing"]},{"Key":"without losing","Fragments":["readability.","readability,","any","any"]},{"Key":"losing readability.","Fragments":["I"]},{"Key":"imagine the","Fragments":["compiler"]},{"Key":"compiler does","Fragments":["this"]},{"Key":"does this","Fragments":["optimization","also"]},{"Key":"this optimization","Fragments":["anyways."]},{"Key":"of assignment","Fragments":["and"]},{"Key":"assignment and","Fragments":["return"]},{"Key":"in WordCount().","Fragments":["That's"]},{"Key":"WordCount(). That's","Fragments":["clever."]},{"Key":" @angus:","Fragments":["If"]},{"Key":"@angus: If","Fragments":["you"]},{"Key":"return early,","Fragments":["you"]},{"Key":"early, you","Fragments":["don't"]},{"Key":"following code","Fragments":["to"]},{"Key":"if anything","Fragments":["else","else"]},{"Key":"else happens","Fragments":["if"]},{"Key":"know `x","Fragments":["=="]},{"Key":"`x ==","Fragments":["0`."]},{"Key":"== 0`.","Fragments":["With"]},{"Key":"0`. With","Fragments":["the"]},{"Key":"With the","Fragments":["`if`","exception","bool","static","guard"]},{"Key":"`if` block,","Fragments":["a"]},{"Key":"block, a","Fragments":["debugger"]},{"Key":"a debugger","Fragments":["would"]},{"Key":"debugger would","Fragments":["have"]},{"Key":"check below","Fragments":["the"]},{"Key":"bottom of","Fragments":["the","the","the"]},{"Key":"the block","Fragments":["to","that","later"]},{"Key":"block to","Fragments":["see","instead"]},{"Key":"else happens.","Fragments":["In"]},{"Key":"happens. In","Fragments":["addition"]},{"Key":"addition it","Fragments":["makes"]},{"Key":"code longer","Fragments":["and","than"]},{"Key":"longer and","Fragments":["more","less"]},{"Key":"Because each","Fragments":["time"]},{"Key":"time you","Fragments":["(or","have","use","call","call","boot","are","create","create","create","process"]},{"Key":"someone else)","Fragments":["calls"]},{"Key":"else) calls","Fragments":["that"]},{"Key":"calls that","Fragments":["method"]},{"Key":"method they","Fragments":["have"]},{"Key":"remember to","Fragments":["check","use","come","change","check"]},{"Key":"check not","Fragments":["to"]},{"Key":"pass `0`","Fragments":["into"]},{"Key":"`0` into","Fragments":["it"]},{"Key":"into it","Fragments":["each","to"]},{"Key":"it each","Fragments":["and","time."]},{"Key":"each and","Fragments":["every"]},{"Key":"and every","Fragments":["time.","query"]},{"Key":"time. If","Fragments":["they","you","you","you"]},{"Key":"they (you)","Fragments":["forget"]},{"Key":"(you) forget","Fragments":["then"]},{"Key":"forget then","Fragments":["you"]},{"Key":" Guard","Fragments":["clauses"]},{"Key":"Guard clauses","Fragments":["are"]},{"Key":"to defend","Fragments":["yourself"]},{"Key":"defend yourself","Fragments":["against"]},{"Key":"yourself against","Fragments":["this."]},{"Key":"have learned","Fragments":["your","and"]},{"Key":"learned your","Fragments":["single"]},{"Key":"your single","Fragments":["`return`"]},{"Key":"`return` law","Fragments":["a"]},{"Key":"law a","Fragments":["bit"]},{"Key":"too firmly.","Fragments":["Everything"]},{"Key":"firmly. Everything","Fragments":["is"]},{"Key":"Everything is","Fragments":["guidelines!"]},{"Key":" @garnet","Fragments":["Heh,"]},{"Key":"@garnet Heh,","Fragments":["in"]},{"Key":"Heh, in","Fragments":["that"]},{"Key":"that scenario,","Fragments":["I"]},{"Key":"scenario, I","Fragments":["would"]},{"Key":"would ask","Fragments":["why"]},{"Key":"ask why","Fragments":["you"]},{"Key":"are sending","Fragments":["0"]},{"Key":"sending 0","Fragments":["into"]},{"Key":"0 into","Fragments":["that"]},{"Key":"into that","Fragments":["method","step.","too.","before."]},{"Key":"begin with.","Fragments":["You"]},{"Key":"with. You","Fragments":["would"]},{"Key":"You would","Fragments":["really","refactor/reuse"]},{"Key":"would really","Fragments":["do:","depend","simplify"]},{"Key":"Otherwise, you","Fragments":["are"]},{"Key":"are adding","Fragments":["to","all","unnecessary"]},{"Key":"adding to","Fragments":["the","the","the"]},{"Key":"call stack","Fragments":["for","that"]},{"Key":"stack for","Fragments":["no"]},{"Key":"for no","Fragments":["good","real","reason."]},{"Key":"no good","Fragments":["reason,"]},{"Key":"good reason,","Fragments":["anyway."]},{"Key":"reason, anyway.","Fragments":[":)"]},{"Key":"always seem","Fragments":["to"]},{"Key":"forget about","Fragments":["Regex,","it..."]},{"Key":"about Regex,","Fragments":["but"]},{"Key":"Regex, but","Fragments":["it"]},{"Key":"makes for","Fragments":["a","easier","cleaner","longer","a"]},{"Key":"much cleaner","Fragments":["solution","and","loop","and"]},{"Key":"cleaner solution","Fragments":["than"]},{"Key":"solution than","Fragments":["the","recursion."]},{"Key":"the linq","Fragments":["queries","in","based","query","expression"]},{"Key":"linq queries","Fragments":["from"]},{"Key":"pass. The","Fragments":["simple"]},{"Key":"The simple","Fragments":["Regex"]},{"Key":"simple Regex","Fragments":["`[\\w']+`","is"]},{"Key":"Regex `[\\w']+`","Fragments":["both"]},{"Key":"`[\\w']+` both","Fragments":["sanitizes"]},{"Key":"both sanitizes","Fragments":["my"]},{"Key":"sanitizes my","Fragments":["string"]},{"Key":"my string","Fragments":["and"]},{"Key":"and splits","Fragments":["it"]},{"Key":"splits it","Fragments":["for"]},{"Key":" @makayla","Fragments":["I"]},{"Key":"@makayla I","Fragments":["don't"]},{"Key":"a hidden","Fragments":["loop"]},{"Key":"hidden loop","Fragments":["in"]},{"Key":"where clause.","Fragments":["As"]},{"Key":"clause. As","Fragments":["I"]},{"Key":"As I","Fragments":["understand","am","was","said,","said,","discussed","said,","understand","said","said"]},{"Key":"understand it,","Fragments":["the","requires"]},{"Key":"it, the","Fragments":["where"]},{"Key":"clause only","Fragments":["wraps"]},{"Key":"only wraps","Fragments":["a"]},{"Key":"wraps a","Fragments":["IEnumerable","single"]},{"Key":"a IEnumerable","Fragments":["object"]},{"Key":"IEnumerable object","Fragments":["around"]},{"Key":"object around","Fragments":["the"]},{"Key":"around the","Fragments":["string","entire","(year","code","random","other","400.","location","user"]},{"Key":"string returned","Fragments":["by"]},{"Key":"When the","Fragments":["Foreach","database","return"]},{"Key":"the Foreach","Fragments":["loop"]},{"Key":"Foreach loop","Fragments":["asks"]},{"Key":"loop asks","Fragments":["for"]},{"Key":"asks for","Fragments":["the","the","the"]},{"Key":"next object,","Fragments":["the","then","until"]},{"Key":"object, the","Fragments":["Where"]},{"Key":"the Where","Fragments":["IEnumerable","clause","clause","extension"]},{"Key":"Where IEnumerable","Fragments":["asks"]},{"Key":"IEnumerable asks","Fragments":["the"]},{"Key":"asks the","Fragments":["string","string"]},{"Key":"string for","Fragments":["the","the","word"]},{"Key":"object, then","Fragments":["checks"]},{"Key":"then checks","Fragments":["it","behind"]},{"Key":"checks it","Fragments":["against","will"]},{"Key":"it against","Fragments":["the","the"]},{"Key":"lambda function","Fragments":["you","idea,"]},{"Key":"you provided.","Fragments":["If","In"]},{"Key":"provided. If","Fragments":["it"]},{"Key":"false, it","Fragments":["asks","will"]},{"Key":"it asks","Fragments":["the"]},{"Key":"object, until","Fragments":["it"]},{"Key":"gets a","Fragments":["true"]},{"Key":"true from","Fragments":["the"]},{"Key":"lambda. Finally","Fragments":["it"]},{"Key":"Finally it","Fragments":["passes"]},{"Key":"the good","Fragments":["object","letters,","solution","one"]},{"Key":"good object","Fragments":["to"]},{"Key":"object to","Fragments":["the","hold","be"]},{"Key":"not adding","Fragments":["any"]},{"Key":"adding any","Fragments":["more"]},{"Key":"more iterations","Fragments":["to"]},{"Key":"iterations to","Fragments":["the","test"]},{"Key":"code, just","Fragments":["some","the"]},{"Key":"just some","Fragments":["if"]},{"Key":"some if","Fragments":["then","not"]},{"Key":"if then","Fragments":["checks"]},{"Key":"checks behind","Fragments":["the"]},{"Key":" Now,","Fragments":["other"]},{"Key":"Now, other","Fragments":["Linq"]},{"Key":"other Linq","Fragments":["calls","functions?"]},{"Key":"Linq calls","Fragments":["like"]},{"Key":"calls like","Fragments":["Reverse"]},{"Key":"like Reverse","Fragments":["or"]},{"Key":"Reverse or","Fragments":["OrderBy"]},{"Key":"or OrderBy","Fragments":["I"]},{"Key":"OrderBy I","Fragments":["can"]},{"Key":"can totally","Fragments":["see"]},{"Key":"totally see","Fragments":["adding"]},{"Key":"see adding","Fragments":["another"]},{"Key":"adding another","Fragments":["loop.","one!"]},{"Key":"another loop.","Fragments":[":-)"]},{"Key":"You usually","Fragments":["want"]},{"Key":"usually want","Fragments":["to"]},{"Key":"put {","Fragments":["}","}","}"]},{"Key":"} if","Fragments":["you"]},{"Key":"are nesting","Fragments":["more"]},{"Key":"nesting more","Fragments":["than"]},{"Key":"one deep","Fragments":["(style"]},{"Key":"deep (style","Fragments":["opinion)."]},{"Key":" Might","Fragments":["want","also"]},{"Key":"Might want","Fragments":["to","to"]},{"Key":"if kvp.Value","Fragments":["is"]},{"Key":"kvp.Value is","Fragments":["null,","null","null,","null,","null,"]},{"Key":"null, since","Fragments":["it"]},{"Key":"could be.","Fragments":["Also,","Also","You","You"]},{"Key":"be. Also,","Fragments":["letter"]},{"Key":"Also, letter","Fragments":["could"]},{"Key":"letter could","Fragments":["be"]},{"Key":"be null,","Fragments":["so"]},{"Key":"null, so","Fragments":["ToLower()","I"]},{"Key":"so ToLower()","Fragments":["would"]},{"Key":"ToLower() would","Fragments":["fail."]},{"Key":"would fail.","Fragments":[":)","However,"]},{"Key":"Might also","Fragments":["want"]},{"Key":"also want","Fragments":["to","to","to","to"]},{"Key":"sure from","Fragments":["is"]},{"Key":"from is","Fragments":["not","twice"]},{"Key":"null, either.","Fragments":[":)"]},{"Key":"first pass","Fragments":["without","using","was","is"]},{"Key":"pass without","Fragments":["the","modifying"]},{"Key":"the bonus.","Fragments":["Fairly"]},{"Key":"bonus. Fairly","Fragments":["straight"]},{"Key":"Fairly straight","Fragments":["forward."]},{"Key":"Hey Aaron,","Fragments":["I"]},{"Key":"Aaron, I","Fragments":["really"]},{"Key":"how condensed","Fragments":["alot"]},{"Key":"condensed alot","Fragments":["of"]},{"Key":"alot of","Fragments":["your"]},{"Key":"one boolean","Fragments":["check:","expression?"]},{"Key":"but why","Fragments":["did","would","declare","don't","the"]},{"Key":"why did","Fragments":["you","you","you","you"]},{"Key":" @gillian","Fragments":["Cool,"]},{"Key":"@gillian Cool,","Fragments":["thanks"]},{"Key":"Cool, thanks","Fragments":["for"]},{"Key":" @arlie","Fragments":["-"]},{"Key":"@arlie -","Fragments":["check"]},{"Key":"- check","Fragments":["this","2,"]},{"Key":"check this","Fragments":["out:","is"]},{"Key":"this out:","Fragments":["http://stackoverflow.com/questions/448206/detecting-if-a-string-is-all-caps."]},{"Key":"out: http://stackoverflow.com/questions/448206/detecting-if-a-string-is-all-caps.","Fragments":["For"]},{"Key":"http://stackoverflow.com/questions/448206/detecting-if-a-string-is-all-caps. For","Fragments":["my"]},{"Key":"For my","Fragments":["submission","second","first"]},{"Key":"this practice,","Fragments":["I"]},{"Key":"practice, I","Fragments":["plugged"]},{"Key":"I plugged","Fragments":["logic"]},{"Key":"plugged logic","Fragments":["similar"]},{"Key":"logic similar","Fragments":["to"]},{"Key":"provided link","Fragments":["into"]},{"Key":"link into","Fragments":["a"]},{"Key":"a parse","Fragments":["function"]},{"Key":"parse function","Fragments":["and"]},{"Key":"function and","Fragments":["used","then","it","as"]},{"Key":"would consider","Fragments":["breaking","this","un-nesting"]},{"Key":"consider breaking","Fragments":["out","up"]},{"Key":"the functionality","Fragments":["contained","for","flexible"]},{"Key":"functionality contained","Fragments":["in"]},{"Key":"your Hey","Fragments":["method.","method?","function.","and"]},{"Key":"Hey method.","Fragments":["That"]},{"Key":"class that","Fragments":["is","had","doesn't","is","is","essentially","this"]},{"Key":"and expand","Fragments":["upon"]},{"Key":"expand upon","Fragments":["if","it"]},{"Key":"upon if","Fragments":["necessary."]},{"Key":"I object-ified","Fragments":["it"]},{"Key":"object-ified it","Fragments":["now."]},{"Key":"it now.","Fragments":["We","Just"]},{"Key":"now. We","Fragments":["check"]},{"Key":"We check","Fragments":["the"]},{"Key":"leap status","Fragments":["via"]},{"Key":"status via","Fragments":["a"]},{"Key":"via a","Fragments":["new"]},{"Key":"new instance","Fragments":["of","of","of"]},{"Key":"a \"leap_year_calc\"","Fragments":["called"]},{"Key":"\"leap_year_calc\" called","Fragments":["\"calc\""]},{"Key":"called \"calc\"","Fragments":["and"]},{"Key":"\"calc\" and","Fragments":["then"]},{"Key":"we call","Fragments":["'calc.isLeapYear'","\u003cb\u003eElementAt()\u003c/b\u003e","the"]},{"Key":"call 'calc.isLeapYear'","Fragments":["passing"]},{"Key":"'calc.isLeapYear' passing","Fragments":["in"]},{"Key":"passing in","Fragments":["the","a","the","a"]},{"Key":"int supplied","Fragments":["by"]},{"Key":"supplied by","Fragments":["keyboard."]},{"Key":" Tah","Fragments":["dah."]},{"Key":"Tah dah.","Fragments":["object-ified."]},{"Key":" only","Fragments":["thing"]},{"Key":"thing left","Fragments":["to"]},{"Key":"left to","Fragments":["do","right"]},{"Key":"do is","Fragments":["make","to","clean","I'll","iterate","just","validate"]},{"Key":"is make","Fragments":["this"]},{"Key":"this loopable","Fragments":["so"]},{"Key":"loopable so","Fragments":["you"]},{"Key":"can keep","Fragments":["checking"]},{"Key":"keep checking","Fragments":["infinitely"]},{"Key":"checking infinitely","Fragments":["until"]},{"Key":"infinitely until","Fragments":["the"]},{"Key":"user types","Fragments":["in"]},{"Key":"types in","Fragments":["\"quit\""]},{"Key":"in \"quit\"","Fragments":["or"]},{"Key":"\"quit\" or","Fragments":["some"]},{"Key":"other key","Fragments":["input"]},{"Key":"key input","Fragments":["type"]},{"Key":"input type","Fragments":["to","as"]},{"Key":"type to","Fragments":["get","'var'.","uint","double,","`long`"]},{"Key":"program to","Fragments":["exit.","work,","change"]},{"Key":"Not too","Fragments":["sure"]},{"Key":"too sure","Fragments":["about","what","why"]},{"Key":"performance implications,","Fragments":["but"]},{"Key":"implications, but","Fragments":["would"]},{"Key":"but would","Fragments":["be","it","also"]},{"Key":"something interesting","Fragments":["to"]},{"Key":"interesting to","Fragments":["look","do","work","think"]},{"Key":"look into.","Fragments":["Just"]},{"Key":"into. Just","Fragments":["guessing"]},{"Key":"Just guessing","Fragments":["it"]},{"Key":"guessing it","Fragments":["doesn't"]},{"Key":"seem like","Fragments":["there","'expressive'"]},{"Key":"there would","Fragments":["be","be","be"]},{"Key":"much since","Fragments":["it's"]},{"Key":"a statically","Fragments":["defined"]},{"Key":"statically defined","Fragments":["method;"]},{"Key":"defined method;","Fragments":["I"]},{"Key":"method; I","Fragments":["would"]},{"Key":"would guess","Fragments":["that"]},{"Key":"guess that","Fragments":["it","I've","is","means","just","shows"]},{"Key":"be optimized","Fragments":["by"]},{"Key":"optimized by","Fragments":["the"]},{"Key":"compiler because","Fragments":["of"]},{"Key":" Hi,","Fragments":["this"]},{"Key":"Hi, this","Fragments":["is"]},{"Key":"your conditions","Fragments":["always"]},{"Key":"conditions always","Fragments":["return"]},{"Key":"a boolean,","Fragments":["have","so"]},{"Key":"boolean, have","Fragments":["you"]},{"Key":"have you","Fragments":["thought","considered","thought"]},{"Key":"about returning","Fragments":["the"]},{"Key":"condition directly","Fragments":["instead"]},{"Key":"directly instead","Fragments":["of"]},{"Key":"nesting 3","Fragments":["if-statements?"]},{"Key":" Something","Fragments":["like","looks"]},{"Key":"Something like","Fragments":["\"return"]},{"Key":"like \"return","Fragments":["year"]},{"Key":"\"return year","Fragments":["%"]},{"Key":"== 0;\"","Fragments":["etc..."]},{"Key":"could write","Fragments":["smaller,","a","`1E9`","\u003ccode\u003eif"]},{"Key":"write smaller,","Fragments":["readable"]},{"Key":"smaller, readable","Fragments":["code."]},{"Key":"Ah that","Fragments":["is"]},{"Key":"it. good","Fragments":["stuff!"]},{"Key":" Are","Fragments":["negative","you","you","you"]},{"Key":"Are negative","Fragments":["years"]},{"Key":"years BCE?","Fragments":["And"]},{"Key":"BCE? And","Fragments":["there"]},{"Key":"And there","Fragments":["is"]},{"Key":"no year","Fragments":["zero","0,"]},{"Key":"zero so","Fragments":["we"]},{"Key":"probably capture","Fragments":["that."]},{"Key":"capture that.","Fragments":["Looks"]},{"Key":"that. Looks","Fragments":["like"]},{"Key":"years where","Fragments":["using"]},{"Key":"where using","Fragments":["astronomical"]},{"Key":"using astronomical","Fragments":["year"]},{"Key":"astronomical year","Fragments":["numbering"]},{"Key":"year numbering","Fragments":["then"]},{"Key":"numbering then","Fragments":["it"]},{"Key":"would work.","Fragments":["Good","I"]},{"Key":"work. Good","Fragments":["point."]},{"Key":"my second","Fragments":["pass,","iteration","iteration,"]},{"Key":"second pass,","Fragments":["I","I"]},{"Key":"the collections","Fragments":["immutable"]},{"Key":"collections immutable","Fragments":["so"]},{"Key":"immutable so","Fragments":["they"]},{"Key":"be modified","Fragments":["outside","outside","to"]},{"Key":"modified outside","Fragments":["of","of"]},{"Key":"the class.","Fragments":["I",";-)","Since"]},{"Key":"class. I","Fragments":["used","suppose","suspect"]},{"Key":"used Microsoft's","Fragments":["immutable"]},{"Key":"Microsoft's immutable","Fragments":["collections"]},{"Key":"immutable collections","Fragments":["for","so"]},{"Key":"collections for","Fragments":["this."]},{"Key":"To test,","Fragments":["I"]},{"Key":"test, I","Fragments":["added","might"]},{"Key":"following new","Fragments":["unit"]},{"Key":"new unit","Fragments":["tests,"]},{"Key":" Assert.That(()","Fragments":["=\u003e","=\u003e","=\u003e"]},{"Key":"Assert.That(() =\u003e","Fragments":["school.Roster.Add(1,","school.Roster[4].Add(\"John\"),","school.Grade(4).Add(\"John\"),"]},{"Key":"=\u003e school.Roster.Add(1,","Fragments":["new"]},{"Key":"school.Roster.Add(1, new","Fragments":["SortedSet\u003cstring\u003e()),"]},{"Key":"new SortedSet\u003cstring\u003e()),","Fragments":["Throws.InstanceOf\u003cNotSupportedException\u003e());"]},{"Key":" school.Add(\"Jennifer\",","Fragments":["4);","4);","4);","4);"]},{"Key":"=\u003e school.Roster[4].Add(\"John\"),","Fragments":["Throws.InstanceOf\u003cNotSupportedException\u003e());"]},{"Key":" Assert.That(school.Roster[4].Count,","Fragments":["Is.EqualTo(1));","Is.EqualTo(1));"]},{"Key":" Assert.That(school.Grade(4).Count,","Fragments":["Is.EqualTo(1));","Is.EqualTo(1));"]},{"Key":"=\u003e school.Grade(4).Add(\"John\"),","Fragments":["Throws.InstanceOf\u003cNotSupportedException\u003e());"]},{"Key":"looks way","Fragments":["better"]},{"Key":"way better","Fragments":["than"]},{"Key":"other iterations,","Fragments":["well"]},{"Key":"iterations, well","Fragments":["done."]},{"Key":"think about,","Fragments":["that"]},{"Key":"about, that","Fragments":["the"]},{"Key":"conditions in","Fragments":["your","one"]},{"Key":"your \"if-statements\"","Fragments":["return"]},{"Key":"\"if-statements\" return","Fragments":["a"]},{"Key":"boolean by","Fragments":["themselfs."]},{"Key":"by themselfs.","Fragments":["So"]},{"Key":"themselfs. So","Fragments":["you"]},{"Key":"So you","Fragments":["might","can't","could","don't","can"]},{"Key":"one directy.","Fragments":["Instead"]},{"Key":"directy. Instead","Fragments":["\"if"]},{"Key":"Instead \"if","Fragments":["(condition=true)"]},{"Key":"\"if (condition=true)","Fragments":["return"]},{"Key":"(condition=true) return","Fragments":["true\","]},{"Key":"return true\",","Fragments":["try"]},{"Key":"true\", try","Fragments":["\"return"]},{"Key":"try \"return","Fragments":["condition\"."]},{"Key":"will shorten","Fragments":["your"]},{"Key":"shorten your","Fragments":["code","normalize()"]},{"Key":"You're completely","Fragments":["correct"]},{"Key":"completely correct","Fragments":["-"]},{"Key":"correct -","Fragments":["I","too"]},{"Key":"included the","Fragments":["WriteLine","Main","\\n"]},{"Key":"WriteLine in","Fragments":["order"]},{"Key":"nice visual","Fragments":["output"]},{"Key":"visual output","Fragments":["of"]},{"Key":"actual results","Fragments":["in"]},{"Key":"results in","Fragments":["the","a","both","a"]},{"Key":"testing application","Fragments":["every"]},{"Key":"application every","Fragments":["time"]},{"Key":"time the","Fragments":["method","Count","static"]},{"Key":"For these","Fragments":["tasks"]},{"Key":"these tasks","Fragments":["there"]},{"Key":"tasks there","Fragments":["is"]},{"Key":"no requirement","Fragments":["for"]},{"Key":"a working","Fragments":["app,"]},{"Key":"working app,","Fragments":["or"]},{"Key":"app, or","Fragments":["any"]},{"Key":"any interface","Fragments":["beyond"]},{"Key":"interface beyond","Fragments":["the"]},{"Key":"beyond the","Fragments":["unit","scope","first"]},{"Key":"tests. All","Fragments":["that"]},{"Key":"All that","Fragments":["is","matters"]},{"Key":"required is","Fragments":["a","a"]},{"Key":"is help","Fragments":["to"]},{"Key":"help to","Fragments":["get","figure"]},{"Key":"get that","Fragments":["set","answer.","behavior","habit.","you","\"dic\""]},{"Key":"that set","Fragments":["up","code"]},{"Key":"set up","Fragments":["here.","properly","a"]},{"Key":"Your tests","Fragments":["should"]},{"Key":"be strictly","Fragments":["segregated"]},{"Key":"strictly segregated","Fragments":["from"]},{"Key":"segregated from","Fragments":["production"]},{"Key":"from production","Fragments":["code.","code."]},{"Key":"do some","Fragments":["manual","other","optimizing","of"]},{"Key":"some manual","Fragments":["testing"]},{"Key":"manual testing","Fragments":["then"]},{"Key":"testing then","Fragments":["you"]},{"Key":"can roll","Fragments":["up"]},{"Key":"roll up","Fragments":["a"]},{"Key":"little application","Fragments":["to"]},{"Key":"application to","Fragments":["run"]},{"Key":"run your","Fragments":["code,","tests"]},{"Key":"but embedding","Fragments":["it"]},{"Key":"embedding it","Fragments":["in"]},{"Key":"the production","Fragments":["code"]},{"Key":"code itself","Fragments":["is","right"]},{"Key":"asking for","Fragments":["unintended"]},{"Key":"for unintended","Fragments":["consequences"]},{"Key":"example not","Fragments":["all"]},{"Key":"all versions","Fragments":["of"]},{"Key":"versions of","Fragments":["the","the","VS"]},{"Key":"the Framework","Fragments":["know"]},{"Key":"Framework know","Fragments":["about"]},{"Key":"about consoles","Fragments":["(eg"]},{"Key":"consoles (eg","Fragments":["if"]},{"Key":"(eg if","Fragments":["you"]},{"Key":"you compile","Fragments":["to"]},{"Key":"compile to","Fragments":["a","a"]},{"Key":"a Portable","Fragments":["Class"]},{"Key":"Portable Class","Fragments":["Library)"]},{"Key":"the ReadOnlyDictionary","Fragments":["does","as"]},{"Key":"ReadOnlyDictionary does","Fragments":["protect"]},{"Key":"does protect","Fragments":["from"]},{"Key":"protect from","Fragments":["people"]},{"Key":"from people","Fragments":["adding"]},{"Key":"people adding","Fragments":["and"]},{"Key":"adding and","Fragments":["removing","handling"]},{"Key":"removing grades,","Fragments":["t"]},{"Key":"grades, t","Fragments":["does"]},{"Key":"t does","Fragments":["nothing"]},{"Key":"nothing to","Fragments":["prevent","cache"]},{"Key":"prevent people","Fragments":["from"]},{"Key":"people from","Fragments":["modifying","messing","getting"]},{"Key":"from modifying","Fragments":["the"]},{"Key":"lists that","Fragments":["are","were"]},{"Key":"are returned.","Fragments":["So"]},{"Key":"returned. So","Fragments":["I"]},{"Key":"like school.Roster[5].Clear()","Fragments":["and"]},{"Key":"school.Roster[5].Clear() and","Fragments":["wipe"]},{"Key":"and wipe","Fragments":["out"]},{"Key":"wipe out","Fragments":["the"]},{"Key":" Fields","Fragments":["vs","must"]},{"Key":"Fields vs","Fragments":["Properties?"]},{"Key":"vs Properties?","Fragments":["_underscored"]},{"Key":"Properties? _underscored","Fragments":["vs"]},{"Key":"_underscored vs","Fragments":["InitialCaps?"]},{"Key":"thing I'm","Fragments":["really","here","not"]},{"Key":"really not","Fragments":["to","sufficient.","familiar"]},{"Key":"to happy","Fragments":["with"]},{"Key":"with here","Fragments":["is"]},{"Key":"the opaqueness","Fragments":["of"]},{"Key":"opaqueness of","Fragments":["the"]},{"Key":"the regex","Fragments":["pattern","using","simple","expertise","so","also","by","check","in","part","to","is","to","is","static,","run","static","that","word"]},{"Key":"regex pattern","Fragments":["--"]},{"Key":"pattern --","Fragments":["what"]},{"Key":"-- what","Fragments":["exactly"]},{"Key":"what exactly","Fragments":["are"]},{"Key":"exactly are","Fragments":["\\p{P}"]},{"Key":"are \\p{P}","Fragments":["and"]},{"Key":"\\p{P} and","Fragments":["\\p{S}?"]},{"Key":"always thought","Fragments":["Bob","of"]},{"Key":"thought Bob","Fragments":["is"]},{"Key":"very smart","Fragments":["kid"]},{"Key":"smart kid","Fragments":["so"]},{"Key":"kid so","Fragments":["I"]},{"Key":"made an","Fragments":["interface"]},{"Key":"interface where","Fragments":["I"]},{"Key":"could make","Fragments":["a","Bob","is","is","the","`sort`","the","this","the","```DictionaryEquals```"]},{"Key":"more smart","Fragments":["person."]},{"Key":"smart person.","Fragments":["Also"]},{"Key":"person. Also","Fragments":["made"]},{"Key":"Also made","Fragments":["a","his"]},{"Key":"statement evaluator","Fragments":["and"]},{"Key":"evaluator and","Fragments":["made"]},{"Key":"in extendible","Fragments":["by"]},{"Key":"extendible by","Fragments":["exposing"]},{"Key":"by exposing","Fragments":["an"]},{"Key":"exposing an","Fragments":["interface."]},{"Key":"an interface.","Fragments":["This"]},{"Key":"interface. This","Fragments":["way","way"]},{"Key":"This way","Fragments":["I","when","the","is","I"]},{"Key":"make Bob","Fragments":["do"]},{"Key":"Bob do","Fragments":["some"]},{"Key":"other replies","Fragments":["simply"]},{"Key":"replies simply","Fragments":["by"]},{"Key":"simply by","Fragments":["adding","doing:"]},{"Key":"new evaluators","Fragments":["to"]},{"Key":"evaluators to","Fragments":["his"]},{"Key":"to his","Fragments":["existing"]},{"Key":"his existing","Fragments":["one."]},{"Key":"existing one.","Fragments":["Bob's"]},{"Key":"one. Bob's","Fragments":["existing"]},{"Key":"Bob's existing","Fragments":["evaluators"]},{"Key":"existing evaluators","Fragments":["consists"]},{"Key":"evaluators consists","Fragments":["of"]},{"Key":"consists of","Fragments":["simple"]},{"Key":"of simple","Fragments":["string","expressions"]},{"Key":"simple string","Fragments":["and","format"]},{"Key":"and char","Fragments":["handling","methods.","counts"]},{"Key":"char handling","Fragments":["logic."]},{"Key":" How's","Fragments":["this"]},{"Key":"How's this","Fragments":["@nathanial","looking?"]},{"Key":"this @nathanial","Fragments":["?"]},{"Key":" Hint:","Fragments":["you","you","static"]},{"Key":"Hint: you","Fragments":["have","are"]},{"Key":"to reverse","Fragments":["some","it","the","it"]},{"Key":"reverse some","Fragments":["logic"]},{"Key":"some logic","Fragments":["and"]},{"Key":"logic and","Fragments":["use","consider","readability"]},{"Key":"an *or*","Fragments":["operator."]},{"Key":"*or* operator.","Fragments":["If"]},{"Key":"operator. If","Fragments":["you"]},{"Key":"want me","Fragments":["to"]},{"Key":"post what","Fragments":["it"]},{"Key":"line, let","Fragments":["me"]},{"Key":"careful to","Fragments":["be"]},{"Key":"consistent as","Fragments":["to"]},{"Key":"to where","Fragments":["you","I","I"]},{"Key":"your brackets,","Fragments":["and"]},{"Key":"brackets, and","Fragments":["things"]},{"Key":"and things","Fragments":["after"]},{"Key":"things after","Fragments":["your"]},{"Key":"after your","Fragments":["brackets."]},{"Key":" Investigate","Fragments":["the"]},{"Key":"Investigate the","Fragments":["built"]},{"Key":"in `char.IsLetter()`","Fragments":["function,"]},{"Key":"`char.IsLetter()` function,","Fragments":["it"]},{"Key":"may help","Fragments":["your","you"]},{"Key":"help your","Fragments":["code"]},{"Key":"interesting and","Fragments":["do","different"]},{"Key":"with immutable","Fragments":["collections"]},{"Key":"collections so","Fragments":["that"]},{"Key":"the collection","Fragments":["returned","class...","is"]},{"Key":"collection returned","Fragments":["from"]},{"Key":"returned from","Fragments":["the"]},{"Key":"NucleotideCounts property","Fragments":["cannot","only"]},{"Key":"property cannot","Fragments":["be"]},{"Key":"your grade","Fragments":["method,"]},{"Key":"grade method,","Fragments":["you"]},{"Key":"else clause.","Fragments":["Anything","Anything"]},{"Key":"clause. Anything","Fragments":["that","that"]},{"Key":"If-Return statement","Fragments":["is"]},{"Key":"automatically only","Fragments":["run"]},{"Key":"only run","Fragments":["when"]},{"Key":"run when","Fragments":["the","getted"]},{"Key":"condition is","Fragments":["false.","not"]},{"Key":"is false.","Fragments":[":-)"]},{"Key":"point, your","Fragments":["member"]},{"Key":"variable `nucleotideCounts`","Fragments":["could"]},{"Key":"`nucleotideCounts` could","Fragments":["be"]},{"Key":"a `ReadOnlyDictionary`.","Fragments":["If"]},{"Key":"`ReadOnlyDictionary`. If","Fragments":["you"]},{"Key":"you set","Fragments":["it","list"]},{"Key":"set it","Fragments":["once","to","to","shouldn't"]},{"Key":"it once","Fragments":["in","and","is"]},{"Key":"once in","Fragments":["the","the"]},{"Key":"constructor, it","Fragments":["would"]},{"Key":"would save","Fragments":["the","a","time"]},{"Key":"save the","Fragments":["cost","newly","word","planet,","prime","memory"]},{"Key":"of copying","Fragments":["it"]},{"Key":"copying it","Fragments":["for"]},{"Key":"every access","Fragments":["of","wastes"]},{"Key":"access of","Fragments":["the"]},{"Key":"the `NucleotideCounts`","Fragments":["property."]},{"Key":"This isn't","Fragments":["really","a","thread"]},{"Key":"really TDD","Fragments":["as"]},{"Key":"TDD as","Fragments":["the"]},{"Key":"are given","Fragments":["up","the"]},{"Key":"given up","Fragments":["front."]},{"Key":"front. When","Fragments":["doing"]},{"Key":"When doing","Fragments":["TDD"]},{"Key":"doing TDD","Fragments":["you"]},{"Key":"TDD you","Fragments":["are"]},{"Key":"tests yourself","Fragments":["as"]},{"Key":"yourself as","Fragments":["you"]},{"Key":"you go.","Fragments":["Please","You",":)"]},{"Key":"go. Please","Fragments":["don't"]},{"Key":"Please don't","Fragments":["blame","get"]},{"Key":"don't blame","Fragments":["TDD","you"]},{"Key":"blame TDD","Fragments":["for","for"]},{"Key":"TDD for","Fragments":["tests","people"]},{"Key":"tests you","Fragments":["didn't"]},{"Key":"you didn't","Fragments":["write","store","pull","make","rethrow","want","save","use","validate","have","use","use"]},{"Key":"didn't write","Fragments":[";-)","it"]},{"Key":"default response","Fragments":["to"]},{"Key":"`else` at","Fragments":["the","all,"]},{"Key":"the bottom.","Fragments":["Then","I"]},{"Key":"bottom. Then","Fragments":["all"]},{"Key":"Then all","Fragments":["logic"]},{"Key":"all logic","Fragments":["follows"]},{"Key":"logic follows","Fragments":["the"]},{"Key":"same decision","Fragments":["flow."]},{"Key":"points and","Fragments":["tried","transformedLookup."]},{"Key":"prevent the","Fragments":["database"]},{"Key":"database from","Fragments":["being"]},{"Key":"being modified","Fragments":["from"]},{"Key":"modified from","Fragments":["and"]},{"Key":"from and","Fragments":["external"]},{"Key":"and external","Fragments":["source."]},{"Key":"external source.","Fragments":[":-)"]},{"Key":"The return","Fragments":["type"]},{"Key":"type for","Fragments":["my","the","flexibility,","the","var"]},{"Key":"my grade","Fragments":["method"]},{"Key":"grade method","Fragments":["is"]},{"Key":"is IEnumerable\u003cstring\u003e","Fragments":["and"]},{"Key":"IEnumerable\u003cstring\u003e and","Fragments":["it","still"]},{"Key":"tests. I'm","Fragments":["actually"]},{"Key":"I'm actually","Fragments":["storing","happy"]},{"Key":"actually storing","Fragments":["the"]},{"Key":"the student","Fragments":["in"]},{"Key":"student in","Fragments":["SortedSets"]},{"Key":"in SortedSets","Fragments":["to"]},{"Key":"SortedSets to","Fragments":["simplify"]},{"Key":"simplify preventing","Fragments":["duplicate"]},{"Key":"preventing duplicate","Fragments":["and"]},{"Key":"duplicate and","Fragments":["handling"]},{"Key":"and handling","Fragments":["the","results"]},{"Key":"handling the","Fragments":["sorting.","main","LAST","4"]},{"Key":"noticed the","Fragments":["lists","regex"]},{"Key":"lists were","Fragments":["still"]},{"Key":"were still","Fragments":["vulnerable"]},{"Key":"still vulnerable","Fragments":["in"]},{"Key":"vulnerable in","Fragments":["the"]},{"Key":"ReadOnlyDictionary as","Fragments":["well,"]},{"Key":"as well,","Fragments":["so","only","since","since","but","and","that","which"]},{"Key":"well, so","Fragments":["I"]},{"Key":"little complex","Fragments":["it"]},{"Key":"it protecting","Fragments":["it."]},{"Key":"protecting it.","Fragments":["I"]},{"Key":"an inner","Fragments":["class","loop,","loop","class"]},{"Key":"inner class","Fragments":["with","I'm","without","would","is"]},{"Key":"a indexer","Fragments":["method"]},{"Key":"indexer method","Fragments":["that"]},{"Key":"that returned","Fragments":["a"]},{"Key":"returned a","Fragments":["readonly","bool","boolean"]},{"Key":"readonly list.","Fragments":[":-)"]},{"Key":"to disambiguate","Fragments":["the"]},{"Key":"disambiguate the","Fragments":["regex"]},{"Key":"regex using","Fragments":["\\p{Punctuation}"]},{"Key":"using \\p{Punctuation}","Fragments":["and"]},{"Key":"\\p{Punctuation} and","Fragments":["\\p{Symbol}"]},{"Key":" (see","Fragments":["http://www.regular-expressions.info/unicode.html)"]},{"Key":"(see http://www.regular-expressions.info/unicode.html)","Fragments":["but"]},{"Key":"http://www.regular-expressions.info/unicode.html) but","Fragments":["these"]},{"Key":"but these","Fragments":["didn't","are"]},{"Key":"these didn't","Fragments":["compile."]},{"Key":" Resorted","Fragments":["to"]},{"Key":"Resorted to","Fragments":["using"]},{"Key":"using comments.","Fragments":["Sorry."]},{"Key":" @maiya","Fragments":["You"]},{"Key":"@maiya You","Fragments":["are"]},{"Key":"are right","Fragments":["it","in","in","that","I","about","of","it"]},{"Key":"right it","Fragments":["doesn't","is"]},{"Key":"doesn't double","Fragments":["loop."]},{"Key":"double loop.","Fragments":["I"]},{"Key":"loop. I","Fragments":["guess","have","think"]},{"Key":"guess my","Fragments":["initial"]},{"Key":"initial experience","Fragments":["with"]},{"Key":"with Linq","Fragments":["to","and","ZIp?","so"]},{"Key":"to SQL","Fragments":["has"]},{"Key":"SQL has","Fragments":["made"]},{"Key":"has made","Fragments":["me","this","me"]},{"Key":"made me","Fragments":["gun","only","realise","realize"]},{"Key":"me gun","Fragments":["shy."]},{"Key":"gun shy.","Fragments":["Too"]},{"Key":"shy. Too","Fragments":["often"]},{"Key":"Too often","Fragments":["it"]},{"Key":"often it","Fragments":["materialized"]},{"Key":"it materialized","Fragments":["the"]},{"Key":"materialized the","Fragments":["IQueryable"]},{"Key":"the IQueryable","Fragments":["or"]},{"Key":"IQueryable or","Fragments":["IEnumerable"]},{"Key":"or IEnumerable","Fragments":["earlier"]},{"Key":"IEnumerable earlier","Fragments":["than"]},{"Key":"earlier than","Fragments":["expected"]},{"Key":"than expected","Fragments":["causing"]},{"Key":"expected causing","Fragments":["horrible"]},{"Key":"causing horrible","Fragments":["performance"]},{"Key":"horrible performance","Fragments":["issues."]},{"Key":"No t","Fragments":["readable"]},{"Key":"t readable","Fragments":["and"]},{"Key":"and far","Fragments":["too"]},{"Key":"far too","Fragments":["complicated","long,","much"]},{"Key":"too complicated","Fragments":["What","I","given","and"]},{"Key":"complicated What","Fragments":["is"]},{"Key":"really awesome.","Fragments":["I"]},{"Key":"awesome. I","Fragments":["had"]},{"Key":"had no","Fragments":["idea","idea","idea","idea","idea","idea","idea","idea"]},{"Key":"idea the","Fragments":["Immutable"]},{"Key":"the Immutable","Fragments":["library"]},{"Key":"Immutable library","Fragments":["exists."]},{"Key":"library exists.","Fragments":["My"]},{"Key":"exists. My","Fragments":["only"]},{"Key":"only complaint","Fragments":["is"]},{"Key":"complaint is","Fragments":["that","the"]},{"Key":"standard library","Fragments":["that"]},{"Key":"library that","Fragments":["come"]},{"Key":"that come","Fragments":["installed"]},{"Key":"come installed","Fragments":["with"]},{"Key":"installed with","Fragments":["the"]},{"Key":"the .NET","Fragments":["framework.","framework.","world,"]},{"Key":".NET framework.","Fragments":["Good","Based"]},{"Key":"framework. Good","Fragments":["job!"]},{"Key":"negative should","Fragments":["be"]},{"Key":"be thought","Fragments":["of"]},{"Key":"of as","Fragments":["flag"]},{"Key":"as flag","Fragments":["for"]},{"Key":"flag for","Fragments":["BC.","you?"]},{"Key":"for BC.","Fragments":["Which"]},{"Key":"BC. Which","Fragments":["makes"]},{"Key":"Which makes","Fragments":["positive"]},{"Key":"makes positive","Fragments":["values"]},{"Key":"positive values","Fragments":["being"]},{"Key":"values being","Fragments":["the","correct:"]},{"Key":"as changes","Fragments":["to"]},{"Key":"method, leap","Fragments":["years"]},{"Key":"be computed","Fragments":["correctly"]},{"Key":"computed correctly","Fragments":["with"]},{"Key":"correctly with","Fragments":["this"]},{"Key":"for negative","Fragments":["values.","values","because"]},{"Key":"values. The","Fragments":["\"Is"]},{"Key":"The \"Is","Fragments":["it"]},{"Key":"\"Is it","Fragments":["AD"]},{"Key":"it AD","Fragments":["or"]},{"Key":"AD or","Fragments":["BC\""]},{"Key":"or BC\"","Fragments":["handling"]},{"Key":"BC\" handling","Fragments":["would"]},{"Key":"handling would","Fragments":["be"]},{"Key":"done outside","Fragments":["of"]},{"Key":"know very","Fragments":["little"]},{"Key":"very little","Fragments":["about"]},{"Key":"little about","Fragments":["RegEx."]},{"Key":"about RegEx.","Fragments":["My"]},{"Key":"RegEx. My","Fragments":["initial"]},{"Key":"My initial","Fragments":["approach","submission","reaction"]},{"Key":"initial approach","Fragments":["was"]},{"Key":"approach was","Fragments":["to"]},{"Key":"a complicated","Fragments":["regex","loop"]},{"Key":"complicated regex","Fragments":["alone"]},{"Key":"regex alone","Fragments":["to"]},{"Key":"alone to","Fragments":["check"]},{"Key":"for shouting,","Fragments":["but"]},{"Key":"shouting, but","Fragments":["I"]},{"Key":"got bogged","Fragments":["down"]},{"Key":"bogged down","Fragments":["with"]},{"Key":"down with","Fragments":["it"]},{"Key":"it due","Fragments":["to"]},{"Key":"my inexperience.","Fragments":["So,"]},{"Key":"inexperience. So,","Fragments":["instead"]},{"Key":"So, instead","Fragments":["I"]},{"Key":"instead I","Fragments":["just"]},{"Key":"made sure","Fragments":["there","that"]},{"Key":"least 1","Fragments":["uppercase"]},{"Key":"1 uppercase","Fragments":["character"]},{"Key":"uppercase character","Fragments":["and","in"]},{"Key":"character and","Fragments":["that","returns"]},{"Key":"string reads","Fragments":["the"]},{"Key":"reads the","Fragments":["same","same,"]},{"Key":"same set","Fragments":["to"]},{"Key":"to uppercase","Fragments":["as"]},{"Key":"uppercase as","Fragments":["without"]},{"Key":"as without","Fragments":["modification."]},{"Key":"about .Date!","Fragments":["Duh"]},{"Key":".Date! Duh","Fragments":["and"]},{"Key":"Duh and","Fragments":["thanks"]},{"Key":"and thanks","Fragments":[":-)","for"]},{"Key":"job, this","Fragments":["works!"]},{"Key":"this works!","Fragments":[":-)"]},{"Key":"some optimizing","Fragments":["here."]},{"Key":"optimizing here.","Fragments":["We"]},{"Key":"here. We","Fragments":["can"]},{"Key":"We can","Fragments":["take","do","index","simplify"]},{"Key":"that strings","Fragments":["can"]},{"Key":"as character","Fragments":["arrays","arrays"]},{"Key":"character arrays","Fragments":["and,","in"]},{"Key":"arrays and,","Fragments":["thus"]},{"Key":"and, thus","Fragments":["sequences."]},{"Key":"thus sequences.","Fragments":["Since"]},{"Key":"sequences. Since","Fragments":["you"]},{"Key":"using SequenceEqual","Fragments":["to"]},{"Key":"the comparison,","Fragments":["the"]},{"Key":"comparison, the","Fragments":["only"]},{"Key":"only hurdle","Fragments":["to"]},{"Key":"hurdle to","Fragments":["comparing"]},{"Key":"to comparing","Fragments":["directly"]},{"Key":"comparing directly","Fragments":["is"]},{"Key":"directly is","Fragments":["the"]},{"Key":"the sorting,","Fragments":["which"]},{"Key":"sorting, which","Fragments":["we"]},{"Key":"which we","Fragments":["can","already","then"]},{"Key":"Linq for.","Fragments":["So"]},{"Key":"for. So","Fragments":["an"]},{"Key":"an optimized","Fragments":["version"]},{"Key":"optimized version","Fragments":["of","of"]},{"Key":"code could","Fragments":["look","fail"]},{"Key":"could look","Fragments":["like","at","into","at"]},{"Key":"public string[]","Fragments":["Match(string[]"]},{"Key":"string[] Match(string[]","Fragments":["words)"]},{"Key":"var ret","Fragments":["="]},{"Key":"ret =","Fragments":["new"]},{"Key":"(var word","Fragments":["in"]},{"Key":"// Compare","Fragments":["lower","enumerables,"]},{"Key":"Compare lower","Fragments":["for"]},{"Key":"lower for","Fragments":["consistency."]},{"Key":"if (word.ToLower()","Fragments":["!="]},{"Key":"(word.ToLower() !=","Fragments":["_Anagram)"]},{"Key":"Compare enumerables,","Fragments":["if"]},{"Key":"enumerables, if","Fragments":["match,"]},{"Key":"if match,","Fragments":["then"]},{"Key":"match, then","Fragments":["its"]},{"Key":"if (_Anagram.OrderBy(c","Fragments":["=\u003e"]},{"Key":"(_Anagram.OrderBy(c =\u003e","Fragments":["c).SequenceEqual(word.ToLower().OrderBy(c"]},{"Key":"=\u003e c).SequenceEqual(word.ToLower().OrderBy(c","Fragments":["=\u003e"]},{"Key":"c).SequenceEqual(word.ToLower().OrderBy(c =\u003e","Fragments":["c)))"]},{"Key":"// Sort","Fragments":["alphabetically"]},{"Key":"Sort alphabetically","Fragments":["(no"]},{"Key":"alphabetically (no","Fragments":["reason"]},{"Key":"(no reason","Fragments":["other"]},{"Key":"reason other","Fragments":["than"]},{"Key":"test results","Fragments":["don't","without"]},{"Key":"results don't","Fragments":["come"]},{"Key":"don't come","Fragments":["out"]},{"Key":"come out","Fragments":["properly","pretty"]},{"Key":"out properly","Fragments":["if"]},{"Key":"properly if","Fragments":["you"]},{"Key":"don't sort","Fragments":["alphabetically)"]},{"Key":"// Return","Fragments":["in"]},{"Key":"Return in","Fragments":["array"]},{"Key":"bool IsUracil(char","Fragments":["nucleotide)"]},{"Key":" Showing","Fragments":["enumerator"]},{"Key":"Showing enumerator","Fragments":["objects"]},{"Key":"enumerator objects","Fragments":["some"]},{"Key":"objects some","Fragments":["love."]},{"Key":"some love.","Fragments":["Traversing"]},{"Key":"love. Traversing","Fragments":["data"]},{"Key":"Traversing data","Fragments":["structures"]},{"Key":"data structures","Fragments":["using","```_Roster```"]},{"Key":"structures using","Fragments":["enumerators"]},{"Key":"using enumerators","Fragments":["are"]},{"Key":"enumerators are","Fragments":["simple"]},{"Key":"are simple","Fragments":["and"]},{"Key":"just done","Fragments":["the","something","so","some"]},{"Key":"the prime-factors","Fragments":["exercise"]},{"Key":"prime-factors exercise","Fragments":["so"]},{"Key":"exercise so","Fragments":["originally"]},{"Key":"so originally","Fragments":["it"]},{"Key":"originally it","Fragments":["was"]},{"Key":"was easy","Fragments":["to","until"]},{"Key":"to reuse","Fragments":["that","the","the"]},{"Key":"reuse that","Fragments":["code,"]},{"Key":"that code,","Fragments":["but"]},{"Key":"I later","Fragments":["realized"]},{"Key":"later realized","Fragments":["I"]},{"Key":"wasn't looking","Fragments":["at"]},{"Key":"it's own","Fragments":["problem","list"]},{"Key":"own problem","Fragments":["and"]},{"Key":"problem and","Fragments":["if","the","think"]},{"Key":"could minimize","Fragments":["the"]},{"Key":"code needed","Fragments":["significantly.","further"]},{"Key":"of Any","Fragments":["as"]},{"Key":"Any as","Fragments":["well."]},{"Key":"well. That","Fragments":["second"]},{"Key":"That second","Fragments":["Any"]},{"Key":"second Any","Fragments":["isn't"]},{"Key":"Any isn't","Fragments":["too"]},{"Key":"isn't too","Fragments":["readable,"]},{"Key":"too readable,","Fragments":["but"]},{"Key":"is terse.","Fragments":["Maybe"]},{"Key":"terse. Maybe","Fragments":["separate"]},{"Key":"Maybe separate","Fragments":["out"]},{"Key":"separate out","Fragments":["the"]},{"Key":"if conditions","Fragments":["onto"]},{"Key":"conditions onto","Fragments":["2"]},{"Key":"onto 2","Fragments":["lines"]},{"Key":"2 lines","Fragments":["so","of"]},{"Key":"lines so","Fragments":["you"]},{"Key":"an \"All","Fragments":["uppercase\""]},{"Key":"\"All uppercase\"","Fragments":["comment"]},{"Key":"uppercase\" comment","Fragments":["to"]},{"Key":"comment to","Fragments":["the","reinforce","my"]},{"Key":"the goal","Fragments":["of","is","is","isn't","stated"]},{"Key":"goal of","Fragments":["what"]},{"Key":"what `!prompt.Any(char.IsLower)`","Fragments":["is"]},{"Key":"`!prompt.Any(char.IsLower)` is","Fragments":["for?"]},{"Key":"this. Much","Fragments":["more"]},{"Key":"Much more","Fragments":["precise"]},{"Key":"more precise","Fragments":["than"]},{"Key":"precise than","Fragments":["mine"]},{"Key":"than mine","Fragments":[":)"]},{"Key":" @tatum,","Fragments":["good"]},{"Key":"@tatum, good","Fragments":["point."]},{"Key":"good point.","Fragments":["You",":)","I","Should"]},{"Key":"point. You","Fragments":["laid"]},{"Key":"You laid","Fragments":["out"]},{"Key":"laid out","Fragments":["my","however.","in"]},{"Key":"out my","Fragments":["though","mistakes","submission.","new","first"]},{"Key":"my though","Fragments":["process"]},{"Key":"though process","Fragments":["exactly."]},{"Key":"process exactly.","Fragments":["Ultimately,"]},{"Key":"exactly. Ultimately,","Fragments":["as"]},{"Key":"Ultimately, as","Fragments":["you"]},{"Key":"can see,","Fragments":["I","but","this"]},{"Key":"see, I","Fragments":["decided"]},{"Key":"to opt","Fragments":["for","in"]},{"Key":"opt for","Fragments":["creating"]},{"Key":"for creating","Fragments":["classes","a"]},{"Key":"creating classes","Fragments":["for"]},{"Key":"classes for","Fragments":["each","checking","checking"]},{"Key":"each response.","Fragments":["But,"]},{"Key":"response. But,","Fragments":["after"]},{"Key":"But, after","Fragments":["looking"]},{"Key":"after looking","Fragments":["at","at"]},{"Key":"other users","Fragments":["submission","submissions","submissions"]},{"Key":"users submission","Fragments":["I"]},{"Key":"submission I","Fragments":["agree"]},{"Key":"with you.","Fragments":["Returning"]},{"Key":"you. Returning","Fragments":["the"]},{"Key":"Returning the","Fragments":["string","Boolean","response"]},{"Key":"string would","Fragments":["be","work","be"]},{"Key":"looks good.","Fragments":["I","Here's",":)",":)","I","A","I","Perhaps","My"]},{"Key":"recommend using","Fragments":["a","constant","foreach","a"]},{"Key":"whitelist of","Fragments":["allowed"]},{"Key":"of allowed","Fragments":["characters"]},{"Key":"allowed characters","Fragments":["rather"]},{"Key":"characters rather","Fragments":["than"]},{"Key":"than attempting","Fragments":["to"]},{"Key":"attempting to","Fragments":["remove","return","use","remove"]},{"Key":"remove invalid","Fragments":["characters."]},{"Key":"invalid characters.","Fragments":["However,","If","All","Also"]},{"Key":"characters. However,","Fragments":["in"]},{"Key":"However, in","Fragments":["a"]},{"Key":"more real-life","Fragments":["scenario"]},{"Key":"real-life scenario","Fragments":["you'd"]},{"Key":"scenario you'd","Fragments":["be"]},{"Key":"you'd be","Fragments":["dealing"]},{"Key":"be dealing","Fragments":["with"]},{"Key":"with Unicode","Fragments":["characters"]},{"Key":"Unicode characters","Fragments":["where"]},{"Key":"characters where","Fragments":["all"]},{"Key":"where all","Fragments":["this"]},{"Key":"all this","Fragments":["kind","dll","work","has"]},{"Key":"of goes","Fragments":["out"]},{"Key":"goes out","Fragments":["the"]},{"Key":"the window","Fragments":["in"]},{"Key":"window in","Fragments":["any"]},{"Key":" Kinda","Fragments":["disappointed"]},{"Key":"Kinda disappointed","Fragments":["with"]},{"Key":"disappointed with","Fragments":["this"]},{"Key":"one. Not","Fragments":["much","a"]},{"Key":"simple for","Fragments":["loop.","now"]},{"Key":"for loop.","Fragments":["Considered","Nice","It","It","It","It"]},{"Key":"loop. Considered","Fragments":["using"]},{"Key":"Considered using","Fragments":["LINQ","aggregate()"]},{"Key":"LINQ to","Fragments":["put","query?"]},{"Key":"all in","Fragments":["one","all","one","one","one","one","one"]},{"Key":"one expression","Fragments":["but","like"]},{"Key":"expression but","Fragments":["that"]},{"Key":"just over","Fragments":["complicating","looked"]},{"Key":"over complicating","Fragments":["things"]},{"Key":"complicating things","Fragments":["for"]},{"Key":"things for","Fragments":["no","sure,"]},{"Key":"to fail","Fragments":["early","or","because"]},{"Key":"fail early","Fragments":["and"]},{"Key":"early and","Fragments":["reduce","the"]},{"Key":"The additional","Fragments":["variable","tests"]},{"Key":"additional variable","Fragments":["and"]},{"Key":"input strings","Fragments":["are","are","are"]},{"Key":"bit untidy","Fragments":["but"]},{"Key":"untidy but","Fragments":["this"]},{"Key":"this lets","Fragments":["Zip().Count()"]},{"Key":"lets Zip().Count()","Fragments":["do"]},{"Key":"Zip().Count() do","Fragments":["all"]},{"Key":"any extra","Fragments":["adjusting"]},{"Key":"extra adjusting","Fragments":["terms."]},{"Key":"adjusting terms.","Fragments":["I'd"]},{"Key":"terms. I'd","Fragments":["bet"]},{"Key":"I'd bet","Fragments":["it's"]},{"Key":"bet it's","Fragments":["less"]},{"Key":"it's less","Fragments":["efficient"]},{"Key":"less efficient","Fragments":["than","than","because","than","than","than","(I"]},{"Key":"than iter4","Fragments":["which"]},{"Key":"iter4 which","Fragments":["might"]},{"Key":"might pose","Fragments":["a"]},{"Key":"pose a","Fragments":["problem"]},{"Key":"real DNA","Fragments":["analysis."]},{"Key":"You kept","Fragments":["the"]},{"Key":"kept the","Fragments":["regex","local"]},{"Key":"regex simple","Fragments":["instead"]},{"Key":"simple instead","Fragments":["of"]},{"Key":"handle all","Fragments":["the","the"]},{"Key":"the edge","Fragments":["cases"]},{"Key":"edge cases","Fragments":["there.","in"]},{"Key":"cases there.","Fragments":["Good"]},{"Key":"there. Good","Fragments":["idea."]},{"Key":"not trim","Fragments":["the"]},{"Key":"trim the","Fragments":["apostrophe","string"]},{"Key":"the apostrophe","Fragments":["before","character","already,","in"]},{"Key":"apostrophe before","Fragments":["GroupBy()"]},{"Key":"before GroupBy()","Fragments":["on"]},{"Key":"GroupBy() on","Fragments":["line"]},{"Key":"consider is","Fragments":["initializing","that"]},{"Key":"is initializing","Fragments":["as"]},{"Key":"initializing as","Fragments":["\"Whatever.\""]},{"Key":"as \"Whatever.\"","Fragments":["as"]},{"Key":"\"Whatever.\" as","Fragments":["this"]},{"Key":"the fallback","Fragments":["case."]},{"Key":"fallback case.","Fragments":["It"]},{"Key":"is, but","Fragments":["it","I"]},{"Key":"clean up","Fragments":["a","your","the","your","the","the","the","methods.","the"]},{"Key":"code. More","Fragments":["preference"]},{"Key":"More preference","Fragments":["than"]},{"Key":"preference than","Fragments":["anything","a"]},{"Key":"than anything","Fragments":["I","else."]},{"Key":"anything I","Fragments":["guess."]},{"Key":"Consider naming","Fragments":["your"]},{"Key":"bool as","Fragments":["\"IsDivisibleBy4\""]},{"Key":"as \"IsDivisibleBy4\"","Fragments":["or"]},{"Key":"\"IsDivisibleBy4\" or","Fragments":["some"]},{"Key":"some such,","Fragments":["so"]},{"Key":"such, so","Fragments":["your"]},{"Key":"like human","Fragments":["language:"]},{"Key":"human language:","Fragments":["if"]},{"Key":"language: if","Fragments":["(testInt.IsDivisibleBy4())"]},{"Key":"if (testInt.IsDivisibleBy4())","Fragments":["{"]},{"Key":"(testInt.IsDivisibleBy4()) {","Fragments":["}"]},{"Key":" Base","Fragments":["class","of"]},{"Key":"Base class","Fragments":["```NumberSystem```"]},{"Key":"class ```NumberSystem```","Fragments":["is","because"]},{"Key":"```NumberSystem``` is","Fragments":["shared"]},{"Key":"is shared","Fragments":["with"]},{"Key":"shared with","Fragments":["Binary"]},{"Key":"with Binary","Fragments":["and"]},{"Key":"Binary and","Fragments":["Trinary","Trinary"]},{"Key":"and Trinary","Fragments":["exercises,","exercises."]},{"Key":"Trinary exercises,","Fragments":["included"]},{"Key":"exercises, included","Fragments":["for"]},{"Key":"and compact.Get","Fragments":["even"]},{"Key":"compact.Get even","Fragments":["more"]},{"Key":"even more","Fragments":["compact","simplicity","efficient","efficient","by"]},{"Key":"more compact","Fragments":["by","now,","version","version","and"]},{"Key":"compact by","Fragments":["not"]},{"Key":"by not","Fragments":["declaring","calling"]},{"Key":"not declaring","Fragments":["the"]},{"Key":"declaring the","Fragments":["variable"]},{"Key":"that logic","Fragments":["into","operators"]},{"Key":"the changing","Fragments":["the"]},{"Key":"name to","Fragments":["something","type,","IsNormalizedPhoneNumber","something"]},{"Key":"more human","Fragments":["readable,","readable,"]},{"Key":"human readable,","Fragments":["but","than"]},{"Key":"syntax for","Fragments":["calling","doubles"]},{"Key":"for calling","Fragments":["the"]},{"Key":"your example","Fragments":["seems"]},{"Key":"example seems","Fragments":["wrong?","to"]},{"Key":"seems wrong?","Fragments":["For"]},{"Key":"wrong? For","Fragments":["that"]},{"Key":"For that","Fragments":["to","matter,","matter,"]},{"Key":"work I'd","Fragments":["have"]},{"Key":"a \"testInt\"","Fragments":["class"]},{"Key":"\"testInt\" class","Fragments":["that"]},{"Key":"the \"IsDivisibleBy4()\"","Fragments":["method"]},{"Key":"\"IsDivisibleBy4()\" method","Fragments":["as"]},{"Key":"it's members","Fragments":["wouldn't"]},{"Key":"members wouldn't","Fragments":["I?"]},{"Key":"my case,","Fragments":["I"]},{"Key":"call any","Fragments":["of"]},{"Key":"bool methods","Fragments":["and"]},{"Key":"pass in","Fragments":["the","the","the","the","a","the"]},{"Key":"int that","Fragments":["was"]},{"Key":"was provided","Fragments":["to"]},{"Key":"provided to","Fragments":["the"]},{"Key":"the IsLeap()","Fragments":["method,","method"]},{"Key":"IsLeap() method,","Fragments":["which"]},{"Key":"name has","Fragments":["to"]},{"Key":"to come","Fragments":["first.","make","up","up","up","very","before"]},{"Key":"extension to","Fragments":["check","the"]},{"Key":"all alpha","Fragments":["characters"]},{"Key":"alpha characters","Fragments":["in","would","and"]},{"Key":"string are","Fragments":["uppercase."]},{"Key":"uppercase. Also","Fragments":["updated"]},{"Key":"Also updated","Fragments":["from"]},{"Key":"updated from","Fragments":["my"]},{"Key":"version to","Fragments":["use"]},{"Key":"use constants","Fragments":["for"]},{"Key":"the responses","Fragments":["for","with"]},{"Key":"responses for","Fragments":["performance"]},{"Key":"for performance","Fragments":["sake","too,"]},{"Key":"performance sake","Fragments":["(string"]},{"Key":"sake (string","Fragments":["literals"]},{"Key":"(string literals","Fragments":["are"]},{"Key":"literals are","Fragments":["expensive).","just"]},{"Key":" Logic","Fragments":["is","looks","looks"]},{"Key":"Logic is","Fragments":["good,"]},{"Key":"good, a","Fragments":["bit"]},{"Key":"bit hard","Fragments":["to","to","to","to","to","to"]},{"Key":"read putting","Fragments":["it"]},{"Key":"use `string.IsNullOrWhitespace()`","Fragments":["method"]},{"Key":"`string.IsNullOrWhitespace()` method","Fragments":["instead"]},{"Key":" although","Fragments":["there"]},{"Key":"although there","Fragments":["is"]},{"Key":"is excess","Fragments":["lines"]},{"Key":"excess lines","Fragments":["here,"]},{"Key":"lines here,","Fragments":["the"]},{"Key":"here, the","Fragments":["code"]},{"Key":"and match","Fragments":["per"]},{"Key":"match per","Fragments":["the"]},{"Key":"per the","Fragments":["requirements.","problem","suggestion"]},{"Key":"@ jks211","Fragments":["Hey"]},{"Key":"jks211 Hey","Fragments":["man"]},{"Key":"Hey man","Fragments":["tnx"]},{"Key":"man tnx","Fragments":["for"]},{"Key":"tnx for","Fragments":["the"]},{"Key":"saw Someone","Fragments":["else"]},{"Key":"Someone else","Fragments":["condense"]},{"Key":"else condense","Fragments":["it"]},{"Key":"line I","Fragments":["think"]},{"Key":"to update","Fragments":["mine","my","the","the","sayingArray","and","a"]},{"Key":"update mine","Fragments":["to"]},{"Key":"mine to","Fragments":["do","save"]},{"Key":"Fixed If","Fragments":["structure"]},{"Key":"If structure","Fragments":["to"]},{"Key":"structure to","Fragments":["remove","hold","new","keep","make"]},{"Key":"remove earlier","Fragments":["duplication."]},{"Key":"extensions in","Fragments":["C#"]},{"Key":"C# before,","Fragments":["but"]},{"Key":"before, but","Fragments":["I"]},{"Key":"the possibilities","Fragments":["of"]},{"Key":"possibilities of","Fragments":["them."]},{"Key":" Take","Fragments":["a","care","a","a"]},{"Key":"at `string.IsNullOrWhitespace()`","Fragments":["to"]},{"Key":"`string.IsNullOrWhitespace()` to","Fragments":["check"]},{"Key":"for *silence*.","Fragments":["Also,"]},{"Key":"*silence*. Also,","Fragments":["if"]},{"Key":"the pattern","Fragments":["of","used"]},{"Key":"pattern of","Fragments":["greetings,","\u003cem\u003e@\"[\\w']+\"\u003c/em\u003e"]},{"Key":"of greetings,","Fragments":["the"]},{"Key":"greetings, the","Fragments":["exclamation"]},{"Key":"the exclamation","Fragments":["is","point."]},{"Key":"exclamation is","Fragments":["not"]},{"Key":"not what","Fragments":["is","you"]},{"Key":"is considered","Fragments":["yelling.","a"]},{"Key":"considered yelling.","Fragments":["Good"]},{"Key":"yelling. Good","Fragments":["for"]},{"Key":"Good for","Fragments":["a"]},{"Key":"a first","Fragments":["stab."]},{"Key":"stab. Keep","Fragments":["at"]},{"Key":"Keep at","Fragments":["it"]},{"Key":"out some","Fragments":["other","code","languages"]},{"Key":"people's work","Fragments":["for"]},{"Key":"work for","Fragments":["examples","all","me.","you?","any","any","this","each","numbers","numbers","some","larger","all"]},{"Key":"for examples","Fragments":["of"]},{"Key":"examples of","Fragments":["streamlining","how","this."]},{"Key":"of streamlining","Fragments":["the"]},{"Key":"streamlining the","Fragments":["logic."]},{"Key":"Wow, a","Fragments":["non-regex"]},{"Key":"a non-regex","Fragments":["solution."]},{"Key":"non-regex solution.","Fragments":["I"]},{"Key":"realize char","Fragments":["had"]},{"Key":"char had","Fragments":["those"]},{"Key":"had those","Fragments":["methods."]},{"Key":"those methods.","Fragments":["Nice!"]},{"Key":"methods. Nice!","Fragments":[":)"]},{"Key":"only 2","Fragments":["things.","larger"]},{"Key":"2 things.","Fragments":["What"]},{"Key":"things. What","Fragments":["happens"]},{"Key":"happens when","Fragments":["one","data","old","old","old","old","legacyData","pair.Value","oldData","letterScores","old","old","any","the","you"]},{"Key":"when one","Fragments":["of","can"]},{"Key":"the IList\u003c\u003e","Fragments":["is","is"]},{"Key":"IList\u003c\u003e is","Fragments":["null","null?"]},{"Key":"if one","Fragments":["of","throws","is","phrase"]},{"Key":"strings in","Fragments":["the","one","C#"]},{"Key":"is null?","Fragments":[":)",":)",":)",":)",":)",":)",":)",":)","A",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)","I"]},{"Key":"null? :)","Fragments":["Whould","[NullReferenceException"]},{"Key":":) Whould","Fragments":["it"]},{"Key":"Whould it","Fragments":["return/take"]},{"Key":"it return/take","Fragments":["IDictionary"]},{"Key":"return/take IDictionary","Fragments":["instead"]},{"Key":"IDictionary instead","Fragments":["of","and"]},{"Key":"Good, just","Fragments":["a","a","a","a","a","a"]},{"Key":"think about!","Fragments":[":)",":)",":)",":)",":)",":)"]},{"Key":"Should the","Fragments":["method","method","method","method","method","method","method","class"]},{"Key":"method take","Fragments":["in","in","in","in","in","in","in"]},{"Key":"take in","Fragments":["and","and","and","and","and","and","and"]},{"Key":"IDictionary\u003c\u003e instead?","Fragments":["Makes","Makes","Makes","Makes","Makes","Makes","Makes"]},{"Key":"instead? Makes","Fragments":["it","it","it","it","it","it","it"]},{"Key":"when data","Fragments":["is"]},{"Key":"data is","Fragments":["null,","invalid","loaded.","stored","dirty,"]},{"Key":"null, kvPair.Value","Fragments":["is"]},{"Key":"kvPair.Value is","Fragments":["null"]},{"Key":"or transformedKey","Fragments":["is"]},{"Key":"transformedKey is","Fragments":["null?"]},{"Key":" \"var","Fragments":["score\""]},{"Key":"\"var score\"","Fragments":["should"]},{"Key":"score\" should","Fragments":["probably"]},{"Key":"be \"int","Fragments":["score\""]},{"Key":"\"int score\"","Fragments":["since"]},{"Key":"score\" since","Fragments":["you"]},{"Key":"original Dictionary","Fragments":["to"]},{"Key":"figure the","Fragments":["type"]},{"Key":"line 16,","Fragments":["you"]},{"Key":"16, you","Fragments":["have"]},{"Key":"a {","Fragments":["on"]},{"Key":"{ on","Fragments":["the"]},{"Key":"the foreach.","Fragments":["I"]},{"Key":"foreach. I","Fragments":["wouldn't"]},{"Key":"wouldn't mention","Fragments":["it,"]},{"Key":"mention it,","Fragments":["but"]},{"Key":"is different","Fragments":["how"]},{"Key":"different how","Fragments":["you"]},{"Key":"first foreach,","Fragments":["so"]},{"Key":"foreach, so","Fragments":["you","it"]},{"Key":"to stay","Fragments":["consistent.","consistent","int).","away","the","positive,"]},{"Key":"stay consistent.","Fragments":[":)"]},{"Key":"C:\\\u003e .\\exercism.bob.exe","Fragments":["\"Is","\"IS","\"IS","\"What"]},{"Key":".\\exercism.bob.exe \"Is","Fragments":["your"]},{"Key":"\"Is your","Fragments":["name"]},{"Key":"your name","Fragments":["Bob?\"","sequence"]},{"Key":".\\exercism.bob.exe \"IS","Fragments":["YOUR","YOUR"]},{"Key":"\"IS YOUR","Fragments":["NAME","NAME"]},{"Key":"YOUR NAME","Fragments":["Bob?\"","BOB?\""]},{"Key":" Whoa,","Fragments":["chill"]},{"Key":"Whoa, chill","Fragments":["out!"]},{"Key":" Fine.","Fragments":["Be"]},{"Key":"Fine. Be","Fragments":["that"]},{"Key":".\\exercism.bob.exe \"What","Fragments":["about"]},{"Key":"\"What about","Fragments":["bob"]},{"Key":"about bob","Fragments":["was"]},{"Key":"bob was","Fragments":["a","yelling,"]},{"Key":"Oh, cool,","Fragments":["I'll"]},{"Key":"cool, I'll","Fragments":["use"]},{"Key":"I'll use","Fragments":["the","what","pseudo-code"]},{"Key":"the IsNullOrWhitespace()","Fragments":["method"]},{"Key":"IsNullOrWhitespace() method","Fragments":["instead"]},{"Key":"instead for","Fragments":["the"]},{"Key":"next go.","Fragments":["I"]},{"Key":"go. I","Fragments":["see"]},{"Key":"the exclamations,","Fragments":["but"]},{"Key":"exclamations, but","Fragments":["I"]},{"Key":"the count","Fragments":["to","of","on","every","of","variable,"]},{"Key":"count to","Fragments":["at","make"]},{"Key":"to at","Fragments":["least","least"]},{"Key":"least catch","Fragments":["somebody"]},{"Key":"catch somebody","Fragments":["typing"]},{"Key":"somebody typing","Fragments":["something"]},{"Key":"typing something","Fragments":["like"]},{"Key":"like \"Hey!!!\",","Fragments":["but"]},{"Key":"\"Hey!!!\", but","Fragments":["putting"]},{"Key":"but putting","Fragments":["a"]},{"Key":"putting a","Fragments":["check","lot","!"]},{"Key":"if an","Fragments":["element","invalid","invalid","attempt","allergen"]},{"Key":"an element","Fragments":["and"]},{"Key":"element and","Fragments":["the"]},{"Key":"after it","Fragments":["being","will","can"]},{"Key":"being exclamation","Fragments":["marks"]},{"Key":"exclamation marks","Fragments":["(when","are"]},{"Key":"marks (when","Fragments":["not"]},{"Key":"(when not","Fragments":["null)"]},{"Key":"not null)","Fragments":["seemed"]},{"Key":"null) seemed","Fragments":["like"]},{"Key":"lot to","Fragments":["do"]},{"Key":"do relatively","Fragments":["little."]},{"Key":"relatively little.","Fragments":["That's"]},{"Key":"little. That's","Fragments":["my"]},{"Key":"my reasoning,","Fragments":["anyways."]},{"Key":"reasoning, anyways.","Fragments":["I've"]},{"Key":"anyways. I've","Fragments":["also"]},{"Key":"I've also","Fragments":["got","included"]},{"Key":"also got","Fragments":["a"]},{"Key":"of capital","Fragments":["letters,"]},{"Key":"capital letters,","Fragments":["so"]},{"Key":"letters, so","Fragments":["the"]},{"Key":"the yelling","Fragments":["via","condition:"]},{"Key":"yelling via","Fragments":["allcaps"]},{"Key":"via allcaps","Fragments":["is"]},{"Key":"allcaps is","Fragments":["also"]},{"Key":"also covered.","Fragments":["Does"]},{"Key":"covered. Does","Fragments":["that"]},{"Key":"that sound","Fragments":["reasonable?"]},{"Key":" @alexandro,","Fragments":["you"]},{"Key":"@alexandro, you","Fragments":["better"]},{"Key":"you better","Fragments":["get"]},{"Key":"better get","Fragments":["used"]},{"Key":"get used","Fragments":["to"]},{"Key":"to libraries","Fragments":["from"]},{"Key":"libraries from","Fragments":["NuGet,"]},{"Key":"from NuGet,","Fragments":["it"]},{"Key":"NuGet, it","Fragments":["is"]},{"Key":"is Microsoft's","Fragments":["preferred"]},{"Key":"Microsoft's preferred","Fragments":["way"]},{"Key":"preferred way","Fragments":["to"]},{"Key":"to release","Fragments":["new"]},{"Key":"release new","Fragments":["functionality"]},{"Key":"new functionality","Fragments":["for"]},{"Key":"functionality for","Fragments":[".NET.","your"]},{"Key":"for .NET.","Fragments":["This"]},{"Key":".NET. This","Fragments":["library"]},{"Key":"This library","Fragments":["is"]},{"Key":"library is","Fragments":["a"]},{"Key":"a perfect","Fragments":["example","example"]},{"Key":"perfect example","Fragments":[":smile:","of"]},{"Key":"1. Should","Fragments":["the","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out","in/out"]},{"Key":"2. What","Fragments":["happens","happens","happens","happens","happens","happens","happens","happens","happens","happens","happens","happens","happens","happens","happens","happens"]},{"Key":"when old","Fragments":["is","is","is","is","is","is"]},{"Key":"old is","Fragments":["null,","null,","null,","null,","null,","null,","null,","null,","null,","null,","null,","null,","null,","null,"]},{"Key":"null, kvp.Value","Fragments":["is","is","is","is"]},{"Key":"or letter","Fragments":["is","is","is","is","is","is","is","is","is","is","is","is","is","is"]},{"Key":"letter is","Fragments":["null?","null?","null?","null?","null?","null?","null?","null?","null?","null?","null?","null?","null?","null?","provided","lower-case);","the"]},{"Key":"null, old.Value","Fragments":["is"]},{"Key":"old.Value is","Fragments":["null"]},{"Key":" Looping","Fragments":["through","through","will"]},{"Key":"Looping through","Fragments":["the","the"]},{"Key":"the Values","Fragments":["of"]},{"Key":"Values of","Fragments":["the"]},{"Key":"dictionary make","Fragments":["the"]},{"Key":"bit cumbersome","Fragments":["instead"]},{"Key":"cumbersome instead","Fragments":["of"]},{"Key":"just looping","Fragments":["through","through"]},{"Key":"looping through","Fragments":["the","all","all","the","the","the"]},{"Key":"the KeyValuePair\u003c\u003e","Fragments":["of","is"]},{"Key":"KeyValuePair\u003c\u003e of","Fragments":["the"]},{"Key":"dictionary. You","Fragments":["have"]},{"Key":"extra LINQ","Fragments":["statement"]},{"Key":"that becomes","Fragments":["unnecessary."]},{"Key":"Also, while","Fragments":["you"]},{"Key":"while you","Fragments":["could"]},{"Key":"could initialize","Fragments":["the"]},{"Key":"initialize the","Fragments":["size"]},{"Key":"size to","Fragments":["the"]},{"Key":"old value,","Fragments":["it"]},{"Key":"value, it","Fragments":["is"]},{"Key":"possible some","Fragments":["of"]},{"Key":"the given","Fragments":["data","letter.","values","tests,","parameter."]},{"Key":"given data","Fragments":["is"]},{"Key":"is invalid","Fragments":["(blank","input?"]},{"Key":"invalid (blank","Fragments":["or"]},{"Key":"(blank or","Fragments":["null"]},{"Key":"or null","Fragments":["letters)"]},{"Key":"null letters)","Fragments":["that"]},{"Key":"letters) that","Fragments":["would"]},{"Key":"cause it","Fragments":["to","to"]},{"Key":" Getting","Fragments":["Exercism","to","way","tedious","a"]},{"Key":"Getting Exercism","Fragments":["setup"]},{"Key":"Exercism setup","Fragments":["was"]},{"Key":"setup was","Fragments":["the"]},{"Key":"the biggest","Fragments":["challenge.","difference","issue"]},{"Key":"biggest challenge.","Fragments":["-_-"]},{"Key":"the Keys","Fragments":["instead"]},{"Key":"Keys instead","Fragments":["of"]},{"Key":"KeyValuePair\u003c\u003e is","Fragments":["a"]},{"Key":"bit awkward","Fragments":["because"]},{"Key":"awkward because","Fragments":["you"]},{"Key":"didn't store","Fragments":["the"]},{"Key":"store the","Fragments":["old[key]","data","response,","formatted","score","sides","original","actual","sides","sides","points","data","data","calculated","word"]},{"Key":"old[key] reference","Fragments":["in"]},{"Key":"reference in","Fragments":["a"]},{"Key":"and end","Fragments":["up","of"]},{"Key":"same call","Fragments":["twice"]},{"Key":"call twice","Fragments":["(loop"]},{"Key":"twice (loop","Fragments":["and"]},{"Key":"(loop and","Fragments":["Add"]},{"Key":"Also, \"_\"","Fragments":["shouldn't"]},{"Key":"\"_\" shouldn't","Fragments":["be"]},{"Key":"in method","Fragments":["variable"]},{"Key":"method variable","Fragments":["names/"]},{"Key":"null, an","Fragments":["IList"]},{"Key":"an IList","Fragments":["is"]},{"Key":"IList is","Fragments":["null","null?"]},{"Key":"the IList","Fragments":["is","too."]},{"Key":" Updates:","Fragments":["Removed"]},{"Key":"Updates: Removed","Fragments":["un-needed"]},{"Key":"Removed un-needed","Fragments":["using"]},{"Key":"un-needed using","Fragments":["statements"]},{"Key":"statements (not","Fragments":["sure"]},{"Key":"(not sure","Fragments":["if"]},{"Key":"if System.Collections.Generic","Fragments":["or"]},{"Key":"System.Collections.Generic or","Fragments":["System"]},{"Key":"or System","Fragments":["is"]},{"Key":"System is","Fragments":["needed)"]},{"Key":"Removed redundant","Fragments":["if"]},{"Key":"redundant if","Fragments":["statements,"]},{"Key":"statements, in","Fragments":["my"]},{"Key":"first attempt","Fragments":["I","is"]},{"Key":"attempt I","Fragments":["forgot"]},{"Key":"logic operators","Fragments":["returned"]},{"Key":"operators returned","Fragments":["a"]},{"Key":"bool anyway.","Fragments":["So"]},{"Key":"So in","Fragments":["this"]},{"Key":"this iteration","Fragments":["I","I","has","i","I","is","is","I've","and"]},{"Key":"iteration I","Fragments":["moved","also","got","avoided"]},{"Key":"I moved","Fragments":["all","the","it","it"]},{"Key":"moved all","Fragments":["the"]},{"Key":"null, entry.Value","Fragments":["is","is"]},{"Key":"or str","Fragments":["is"]},{"Key":"While you","Fragments":["could","can","could","are","can","don't"]},{"Key":"use var,","Fragments":["if"]},{"Key":"var, if","Fragments":["you"]},{"Key":"be explicit,","Fragments":["I"]},{"Key":"explicit, I","Fragments":["feel"]},{"Key":"is better.","Fragments":[":)","Looks"]},{"Key":"when legacyData","Fragments":["is"]},{"Key":"legacyData is","Fragments":["null,"]},{"Key":"null, legacyScore.Value","Fragments":["is"]},{"Key":"legacyScore.Value is","Fragments":["null"]},{"Key":"calling ToLower()","Fragments":["on","twice:"]},{"Key":"on letter","Fragments":["twice,"]},{"Key":"letter twice,","Fragments":["so"]},{"Key":"twice, so","Fragments":["consider"]},{"Key":"so consider","Fragments":["doing"]},{"Key":"consider doing","Fragments":["it"]},{"Key":"and assigning","Fragments":["the"]},{"Key":"result to","Fragments":["a","2","a"]},{"Key":"a variable...","Fragments":["Or"]},{"Key":"variable... Or","Fragments":["just"]},{"Key":"Or just","Fragments":["do"]},{"Key":"do newScores[letter.ToLower()]","Fragments":["="]},{"Key":"newScores[letter.ToLower()] =","Fragments":["legacyScore.Key"]},{"Key":"= legacyScore.Key","Fragments":["and"]},{"Key":"legacyScore.Key and","Fragments":["it"]},{"Key":"do add","Fragments":["or"]},{"Key":"add or","Fragments":["replace"]},{"Key":"or replace","Fragments":["automatically."]},{"Key":"replace automatically.","Fragments":[":)"]},{"Key":"as basic","Fragments":["as"]},{"Key":"basic as","Fragments":["it"]},{"Key":"it gets.","Fragments":["Not"]},{"Key":"gets. Not","Fragments":["much"]},{"Key":"much sugar","Fragments":["but"]},{"Key":"sugar but","Fragments":["gets"]},{"Key":"but gets","Fragments":["the"]},{"Key":" @tabitha","Fragments":["Iteration"]},{"Key":"@tabitha Iteration","Fragments":["2."]},{"Key":"when pair.Value","Fragments":["is"]},{"Key":"pair.Value is","Fragments":["null?","null,","null,","null,"]},{"Key":"a business","Fragments":["requirement,"]},{"Key":"business requirement,","Fragments":["but"]},{"Key":"that \"","Fragments":["\""]},{"Key":"\" \"","Fragments":["is","(blank)","tile","quotes"]},{"Key":"\" is","Fragments":["a"]},{"Key":"letter (blank","Fragments":["tile)"]},{"Key":"(blank tile)","Fragments":["worth"]},{"Key":"tile) worth","Fragments":["0?"]},{"Key":"worth 0?","Fragments":["If"]},{"Key":"0? If","Fragments":["so,"]},{"Key":"so, then","Fragments":["string.IsNullOrEmpty()"]},{"Key":"then string.IsNullOrEmpty()","Fragments":["would"]},{"Key":"string.IsNullOrEmpty() would","Fragments":["be"]},{"Key":"be better.","Fragments":[":)","Between"]},{"Key":"Thanks! Recently,","Fragments":["I've"]},{"Key":"Recently, I've","Fragments":["started"]},{"Key":"I've started","Fragments":["putting","doing"]},{"Key":"putting curly","Fragments":["braces"]},{"Key":"around all","Fragments":["blocks,"]},{"Key":"all blocks,","Fragments":["so"]},{"Key":"blocks, so","Fragments":["I"]},{"Key":"be doing","Fragments":["this","2"]},{"Key":"should condense","Fragments":["them"]},{"Key":"condense them","Fragments":["into"]},{"Key":"them into","Fragments":["one","a","an"]},{"Key":" Checking","Fragments":["for"]},{"Key":"for Uracil","Fragments":["used"]},{"Key":"Uracil used","Fragments":["to"]},{"Key":"a requirement","Fragments":["for","to","for","to","to"]},{"Key":"exercise but","Fragments":["was","then","I"]},{"Key":"was taken","Fragments":["out"]},{"Key":"taken out","Fragments":["recently,"]},{"Key":"out recently,","Fragments":["I"]},{"Key":"recently, I","Fragments":["guess"]},{"Key":"update my","Fragments":["code","code","solution"]},{"Key":" that","Fragments":["was"]},{"Key":"my problem.....","Fragments":["getting"]},{"Key":"problem..... getting","Fragments":["the"]},{"Key":"tests set","Fragments":["up."]},{"Key":"set up.","Fragments":["I"]},{"Key":"up. I","Fragments":["have"]},{"Key":"never touched","Fragments":["Visual"]},{"Key":"touched Visual","Fragments":["Studio"]},{"Key":"Studio till","Fragments":["now,"]},{"Key":"till now,","Fragments":["so"]},{"Key":"now, so","Fragments":["I","I"]},{"Key":"no experience","Fragments":["with"]},{"Key":"with their","Fragments":["unit","literal","own"]},{"Key":"their unit","Fragments":["test"]},{"Key":"test system","Fragments":["and"]},{"Key":"system and","Fragments":["how"]},{"Key":"the pointer!","Fragments":["I'll"]},{"Key":"pointer! I'll","Fragments":["make"]},{"Key":"sure rev","Fragments":["3"]},{"Key":"rev 3","Fragments":["works"]},{"Key":"3 works","Fragments":["with"]},{"Key":"one when","Fragments":["it"]},{"Key":"came to","Fragments":["distinguishing","mind","mind","my"]},{"Key":"to distinguishing","Fragments":["between"]},{"Key":"distinguishing between","Fragments":["shouting"]},{"Key":"between shouting","Fragments":["and"]},{"Key":"string of","Fragments":["only","if","one","digits"]},{"Key":"only numbers.","Fragments":["Initially"]},{"Key":"numbers. Initially","Fragments":["I"]},{"Key":"tried using","Fragments":["a","a","a"]},{"Key":"a ToUpper()","Fragments":["comparison,"]},{"Key":"ToUpper() comparison,","Fragments":["but"]},{"Key":"comparison, but","Fragments":["then"]},{"Key":"then realised","Fragments":["that"]},{"Key":"realised that","Fragments":["the"]},{"Key":"the numbers","Fragments":["caused","in","either.","1","themselves,","13","provided","in","of","rather","mean.","are","only","again","in","in","twice"]},{"Key":"numbers caused","Fragments":["an"]},{"Key":"caused an","Fragments":["issue."]},{"Key":"an issue.","Fragments":["Then"]},{"Key":"issue. Then","Fragments":["I"]},{"Key":"started learning","Fragments":["about"]},{"Key":"learning about","Fragments":["regular"]},{"Key":"about regular","Fragments":["expressions"]},{"Key":"tried that","Fragments":["but","first!"]},{"Key":"that but","Fragments":["wasn't"]},{"Key":"but wasn't","Fragments":["making","sure","part","able"]},{"Key":"wasn't making","Fragments":["much"]},{"Key":"making much","Fragments":["progress."]},{"Key":"much progress.","Fragments":["I"]},{"Key":"progress. I","Fragments":["finally"]},{"Key":"I finally","Fragments":["just","started","got"]},{"Key":"finally just","Fragments":["resorted"]},{"Key":"just resorted","Fragments":["to"]},{"Key":"resorted to","Fragments":["creating"]},{"Key":"to creating","Fragments":["a"]},{"Key":"separate method","Fragments":["to","for","to","to"]},{"Key":"all numbers,","Fragments":["or"]},{"Key":"all upper","Fragments":["case.","case","case,"]},{"Key":" @pearl","Fragments":["You're"]},{"Key":"@pearl You're","Fragments":["right"]},{"Key":"You're right","Fragments":["about","Nomolos,","if"]},{"Key":"about Point","Fragments":["1"]},{"Key":"Point 1","Fragments":["and"]},{"Key":"for 3,","Fragments":["if"]},{"Key":"3, if","Fragments":["str"]},{"Key":"if str","Fragments":["is"]},{"Key":"null it","Fragments":["is"]},{"Key":"to crash","Fragments":["at"]},{"Key":"crash at","Fragments":["the","Line"]},{"Key":"check really","Fragments":["(line"]},{"Key":"really (line","Fragments":["16),"]},{"Key":"(line 16),","Fragments":["so"]},{"Key":"16), so","Fragments":["the"]},{"Key":"of IsNullOrEmpty","Fragments":["is"]},{"Key":"IsNullOrEmpty is","Fragments":["not","using"]},{"Key":"big deal","Fragments":["here,","for","for"]},{"Key":"deal here,","Fragments":["but"]},{"Key":"use IsNullOrWhiteSpace(str)","Fragments":["as"]},{"Key":"IsNullOrWhiteSpace(str) as","Fragments":["you"]},{"Key":"for reviewing","Fragments":["my"]},{"Key":"reviewing my","Fragments":["code!"]},{"Key":"First iteration.","Fragments":["The"]},{"Key":"iteration. The","Fragments":["numbers"]},{"Key":"The numbers","Fragments":["question"]},{"Key":"numbers question","Fragments":["was"]},{"Key":"question was","Fragments":["hard"]},{"Key":"was hard","Fragments":["one.","(or"]},{"Key":"hard one.","Fragments":["Had"]},{"Key":"one. Had","Fragments":["to"]},{"Key":"Had to","Fragments":["test","improvise"]},{"Key":"that he","Fragments":["is"]},{"Key":"he is","Fragments":["actually"]},{"Key":"actually saying","Fragments":["anything,"]},{"Key":"saying anything,","Fragments":["or"]},{"Key":"anything, or","Fragments":["asking"]},{"Key":"or asking","Fragments":["a"]},{"Key":"asking a","Fragments":["question."]},{"Key":" Optimization","Fragments":["is"]},{"Key":"Optimization is","Fragments":["not"]},{"Key":"not taken","Fragments":["into"]},{"Key":"taken into","Fragments":["consideration,"]},{"Key":"into consideration,","Fragments":["code"]},{"Key":"consideration, code","Fragments":["readability"]},{"Key":"code readability","Fragments":["came","to","improvement"]},{"Key":"readability came","Fragments":["first"]},{"Key":"came first","Fragments":["in"]},{"Key":"first in","Fragments":["this","the","my"]},{"Key":"tried with","Fragments":["a","a"]},{"Key":"variable instead","Fragments":["of","of"]},{"Key":"statements. In","Fragments":["a"]},{"Key":"large code,","Fragments":["at"]},{"Key":"code, at","Fragments":["least"]},{"Key":"least we","Fragments":["can"]},{"Key":"can find","Fragments":["it's","all","some","on","a"]},{"Key":"find it's","Fragments":["assignments."]},{"Key":"it's assignments.","Fragments":["The"]},{"Key":"assignments. The","Fragments":["checks"]},{"Key":"The checks","Fragments":["were","to"]},{"Key":"checks were","Fragments":["making"]},{"Key":"were making","Fragments":["the"]},{"Key":"code cluster,","Fragments":["so"]},{"Key":"cluster, so","Fragments":["I"]},{"Key":"I drew","Fragments":["them"]},{"Key":"drew them","Fragments":["in"]},{"Key":"a delegates.","Fragments":["Maybe"]},{"Key":"delegates. Maybe","Fragments":["still"]},{"Key":"Maybe still","Fragments":["too"]},{"Key":"still too","Fragments":["much"]},{"Key":"much if","Fragments":["statements?"]},{"Key":"Much better,","Fragments":["IMO!"]},{"Key":"better, IMO!","Fragments":["I"]},{"Key":"IMO! I","Fragments":["looked"]},{"Key":"looked through","Fragments":["other","some"]},{"Key":"through other","Fragments":["submissions","solutions","peoples"]},{"Key":"submissions of","Fragments":["people"]},{"Key":"people much","Fragments":["smarter"]},{"Key":"much smarter","Fragments":["than"]},{"Key":"smarter than","Fragments":["I"]},{"Key":"I to","Fragments":["find","say."]},{"Key":"find ways","Fragments":["to"]},{"Key":"logic a","Fragments":["little","bit"]},{"Key":"little neater,","Fragments":["and"]},{"Key":"neater, and","Fragments":["found"]},{"Key":"and found","Fragments":["a","I","the","that"]},{"Key":"of uses","Fragments":["of"]},{"Key":"uses of","Fragments":["methods","a"]},{"Key":"completely blanked","Fragments":["on"]},{"Key":"blanked on","Fragments":["the"]},{"Key":"the API.","Fragments":["How's"]},{"Key":"API. How's","Fragments":["this"]},{"Key":"added null","Fragments":["point"]},{"Key":"null point","Fragments":["reference"]},{"Key":"point reference","Fragments":["check."]},{"Key":" Refactored","Fragments":["the","Aggregate","GetNumbers","common"]},{"Key":"Refactored the","Fragments":["return"]},{"Key":"into variable","Fragments":["assignments"]},{"Key":"variable assignments","Fragments":["and","in"]},{"Key":"assignments and","Fragments":["used"]},{"Key":"used if","Fragments":["-"]},{"Key":"- else","Fragments":["to"]},{"Key":"else to","Fragments":["prevent","set","change","puzzle"]},{"Key":"prevent additional","Fragments":["work"]},{"Key":"additional work","Fragments":["being"]},{"Key":"work being","Fragments":["executed."]},{"Key":"logic seems","Fragments":["correct,"]},{"Key":"seems correct,","Fragments":["but"]},{"Key":"For starters:","Fragments":["there"]},{"Key":"starters: there","Fragments":["are"]},{"Key":"methods in","Fragments":["C#","different","any"]},{"Key":"C# that","Fragments":["treat"]},{"Key":"that treat","Fragments":["a"]},{"Key":"treat a","Fragments":["string","string"]},{"Key":"a IEnumberable","Fragments":["collection"]},{"Key":"IEnumberable collection","Fragments":["of"]},{"Key":"of chars.","Fragments":["Add"]},{"Key":"chars. Add","Fragments":["using"]},{"Key":"Add using","Fragments":["System.Linq"]},{"Key":"using System.Linq","Fragments":["to"]},{"Key":"System.Linq to","Fragments":["get"]},{"Key":"get access","Fragments":["to"]},{"Key":"C# there","Fragments":["is"]},{"Key":"no more","Fragments":["need"]},{"Key":"more need","Fragments":["to"]},{"Key":"all exit","Fragments":["points"]},{"Key":"exit points","Fragments":["at","instead"]},{"Key":"points at","Fragments":["the"]},{"Key":"a method.","Fragments":["That's"]},{"Key":"That's an","Fragments":["old"]},{"Key":"an old","Fragments":["convention"]},{"Key":"old convention","Fragments":["that"]},{"Key":"convention that","Fragments":["doesn't","doesn't"]},{"Key":"doesn't have","Fragments":["a","to","a","to","to","to","easy","a","anything","be"]},{"Key":"of use","Fragments":["any","in"]},{"Key":"use any","Fragments":["more","generics(to"]},{"Key":"more because","Fragments":["Exceptions"]},{"Key":"because Exceptions","Fragments":["can"]},{"Key":"Exceptions can","Fragments":["exit"]},{"Key":"can exit","Fragments":["a","the"]},{"Key":"exit a","Fragments":["function"]},{"Key":"function at","Fragments":["any"]},{"Key":"at any","Fragments":["time"]},{"Key":"any time","Fragments":["anyway.","the","information.","you","num"]},{"Key":" ```else","Fragments":["if```"]},{"Key":"```else if```","Fragments":["is"]},{"Key":"if``` is","Fragments":["not"]},{"Key":"really needed","Fragments":["because","-"]},{"Key":"the ```return```","Fragments":["statements."]},{"Key":"try too","Fragments":["cut"]},{"Key":"too cut","Fragments":["down"]},{"Key":"statements. It","Fragments":["makes","might"]},{"Key":"to predict","Fragments":["whats","whats"]},{"Key":"predict whats","Fragments":["going","going"]},{"Key":" Clever","Fragments":["solution","way","and"]},{"Key":"Clever solution","Fragments":["otherwise."]},{"Key":"Consider this","Fragments":["solution:","super-contrived"]},{"Key":"this solution:","Fragments":["```return"]},{"Key":"solution: ```return","Fragments":["(year"]},{"Key":"```return (year","Fragments":["%"]},{"Key":"100) !=","Fragments":["0"]},{"Key":"One good","Fragments":["thing"]},{"Key":"thing could","Fragments":["be"]},{"Key":"to devide","Fragments":["the","the"]},{"Key":"devide the","Fragments":["logic.","problems"]},{"Key":"logic. It","Fragments":["is"]},{"Key":"is kindof","Fragments":["hard"]},{"Key":"kindof hard","Fragments":["to"]},{"Key":"correct logic","Fragments":["expression."]},{"Key":"the ide","Fragments":["of"]},{"Key":"ide of","Fragments":["sorting"]},{"Key":"sorting makes","Fragments":["the"]},{"Key":"solution easyer","Fragments":["to"]},{"Key":" Typeo","Fragments":["I"]},{"Key":"Typeo I","Fragments":["guess"]},{"Key":"guess but:","Fragments":["capitalize"]},{"Key":"but: capitalize","Fragments":["the"]},{"Key":"capitalize the","Fragments":["method"]},{"Key":"use ```string```","Fragments":["instead"]},{"Key":"```string``` instead","Fragments":["of"]},{"Key":" ```private","Fragments":["char[]"]},{"Key":"```private char[]","Fragments":["toLowerAndSort(String","ToLowerAndSort(string"]},{"Key":"char[] toLowerAndSort(String","Fragments":["word)```"]},{"Key":"toLowerAndSort(String word)```","Fragments":["-\u003e"]},{"Key":"word)``` -\u003e","Fragments":["```private"]},{"Key":"-\u003e ```private","Fragments":["char[]"]},{"Key":"char[] ToLowerAndSort(string","Fragments":["word)```"]},{"Key":" Sorting","Fragments":["_can_"]},{"Key":"Sorting _can_","Fragments":["cost"]},{"Key":"_can_ cost","Fragments":["alot"]},{"Key":"cost alot","Fragments":["in"]},{"Key":"alot in","Fragments":["bigger"]},{"Key":"in bigger","Fragments":["contexts"]},{"Key":"bigger contexts","Fragments":["but"]},{"Key":"contexts but","Fragments":["works"]},{"Key":"but works","Fragments":["nicely"]},{"Key":"works nicely","Fragments":["here."]},{"Key":" main","Fragments":["nitpick:"]},{"Key":"not checking","Fragments":["the","for","every"]},{"Key":"the parameter.","Fragments":["There"]},{"Key":"parameter. There","Fragments":["never"]},{"Key":"There never","Fragments":["was"]},{"Key":"never was","Fragments":["a"]},{"Key":"year 0","Fragments":["in","never"]},{"Key":"Gregorian Calendar.","Fragments":["I"]},{"Key":"Calendar. I","Fragments":["also"]},{"Key":"that checking","Fragments":["if","of"]},{"Key":"a BC","Fragments":["year"]},{"Key":"BC year","Fragments":["was"]},{"Key":"year makes","Fragments":["no"]},{"Key":"sense either,","Fragments":["especially"]},{"Key":"either, especially","Fragments":["since"]},{"Key":"especially since","Fragments":["this","you're","I","the","the"]},{"Key":"function uses","Fragments":["the"]},{"Key":"Gregorian definition","Fragments":["of"]},{"Key":"Calendar was","Fragments":["first"]},{"Key":"was first","Fragments":["introduced"]},{"Key":"first introduced","Fragments":["in"]},{"Key":"introduced in","Fragments":["1582"]},{"Key":"in 1582","Fragments":["(and"]},{"Key":"1582 (and","Fragments":["not"]},{"Key":"(and not","Fragments":["universal"]},{"Key":"not universal","Fragments":["in"]},{"Key":"universal in","Fragments":["Western"]},{"Key":"in Western","Fragments":["nations"]},{"Key":"Western nations","Fragments":["until"]},{"Key":"nations until","Fragments":["the"]},{"Key":" small","Fragments":["nitpicks:","nitpick:"]},{"Key":"- ///","Fragments":["comments!"]},{"Key":"/// comments!","Fragments":["use"]},{"Key":"comments! use","Fragments":["them."]},{"Key":"- Since","Fragments":["isLeap"]},{"Key":"Since isLeap","Fragments":["is"]},{"Key":"isLeap is","Fragments":["static"]},{"Key":"is static","Fragments":["and","so"]},{"Key":"only method","Fragments":["in"]},{"Key":"class =\u003e","Fragments":["class"]},{"Key":"=\u003e class","Fragments":["can"]},{"Key":"class can","Fragments":["be"]},{"Key":" even","Fragments":["smaller"]},{"Key":"even smaller","Fragments":["nitpick:"]},{"Key":"can clean","Fragments":["up"]},{"Key":"up your","Fragments":["usings","unused","`using`","code.","code,"]},{"Key":"your usings","Fragments":["by"]},{"Key":"usings by","Fragments":["right-click"]},{"Key":"by right-click","Fragments":["-\u003e"]},{"Key":"right-click -\u003e","Fragments":["remove"]},{"Key":"-\u003e remove","Fragments":["unused."]},{"Key":"when oldData","Fragments":["is"]},{"Key":"oldData is","Fragments":["null?","null,","null,"]},{"Key":"null? A","Fragments":["guard"]},{"Key":"A guard","Fragments":["clause"]},{"Key":"clause should","Fragments":["prevent"]},{"Key":"should prevent","Fragments":["a"]},{"Key":"prevent a","Fragments":["NullPointReferenceException."]},{"Key":"are looping","Fragments":["through","the","through","through"]},{"Key":"values in","Fragments":["the","case","the","reverse","constants","code,","the","the","all","each"]},{"Key":"provided string","Fragments":["list","list?"]},{"Key":"string list","Fragments":["and"]},{"Key":"and adding","Fragments":["them","static","to","that.","processing"]},{"Key":"adding them","Fragments":["immediately"]},{"Key":"them immediately","Fragments":["to"]},{"Key":"immediately to","Fragments":["the"]},{"Key":"the result.","Fragments":["What","It"]},{"Key":"result. What","Fragments":["if"]},{"Key":"the there","Fragments":["are"]},{"Key":"multiple same","Fragments":["characters"]},{"Key":"same characters","Fragments":["in","as"]},{"Key":"string list?","Fragments":["You"]},{"Key":"list? You","Fragments":["will"]},{"Key":"for trying","Fragments":["to"]},{"Key":"same key","Fragments":["twice.","twice"]},{"Key":"Well that","Fragments":["is"]},{"Key":"One hint","Fragments":["here"]},{"Key":"hint here","Fragments":["from"]},{"Key":"here from","Fragments":["the"]},{"Key":"the Clean","Fragments":["code"]},{"Key":"Clean code","Fragments":["book."]},{"Key":"code book.","Fragments":["If"]},{"Key":"book. If","Fragments":["you"]},{"Key":"to line","Fragments":["comment","27"]},{"Key":"line comment","Fragments":["your","to"]},{"Key":"comment your","Fragments":["code,"]},{"Key":"is too","Fragments":["complex.","long.","long","'clever',","much","much","complicated","complex","easy"]},{"Key":"too complex.","Fragments":["try","My"]},{"Key":"complex. try","Fragments":["to"]},{"Key":"the problems","Fragments":["it","went","again,"]},{"Key":"problems it","Fragments":["minor"]},{"Key":"it minor","Fragments":["parts,"]},{"Key":"minor parts,","Fragments":["functions"]},{"Key":"parts, functions","Fragments":["that"]},{"Key":"that do","Fragments":["one","not","division"]},{"Key":"The section","Fragments":["*(divisbleBy4\u0026\u0026divisibleBy100\u0026\u0026divisibleBy400)*"]},{"Key":"section *(divisbleBy4\u0026\u0026divisibleBy100\u0026\u0026divisibleBy400)*","Fragments":["can"]},{"Key":"*(divisbleBy4\u0026\u0026divisibleBy100\u0026\u0026divisibleBy400)* can","Fragments":["be"]},{"Key":" *","Fragments":["400","400","Sort","Add","Always","I","Then","Then","If","***","***","Too","Namespace/class","Misses","changed","removed","renamed","pass","have","pass","handle","send","you","since","why","(even","reduce","remove"]},{"Key":"* 400","Fragments":["is","is"]},{"Key":" Thinks","Fragments":["I"]},{"Key":"Thinks I","Fragments":["like"]},{"Key":"* Sort","Fragments":["and"]},{"Key":"Sort and","Fragments":["remove"]},{"Key":"remove unused","Fragments":["\"usings\""]},{"Key":"* Add","Fragments":["comments"]},{"Key":"* Always","Fragments":["put"]},{"Key":"Always put","Fragments":["curly"]},{"Key":"put curly","Fragments":["braces"]},{"Key":"Added guard","Fragments":["clause"]},{"Key":"clause for","Fragments":["null"]},{"Key":"for null","Fragments":["parameter","things","strings","or","as","everywhere"]},{"Key":"tests but","Fragments":["i'm","just","does","to","it","it"]},{"Key":"but i'm","Fragments":["not"]},{"Key":"i'm not","Fragments":["sure"]},{"Key":"best code?","Fragments":["Please"]},{"Key":"code? Please","Fragments":["give"]},{"Key":"Please give","Fragments":["me"]},{"Key":"me input","Fragments":["if"]},{"Key":"input if","Fragments":["it","someone"]},{"Key":" @theodora","Fragments":["entry.Key"]},{"Key":"@theodora entry.Key","Fragments":["isn't"]},{"Key":"entry.Key isn't","Fragments":["being"]},{"Key":"isn't being","Fragments":["iterated","changed"]},{"Key":"being iterated","Fragments":["over"]},{"Key":"iterated over","Fragments":["in"]},{"Key":"over in","Fragments":["the","a"]},{"Key":"inner foreach,","Fragments":["so"]},{"Key":"doesn't gain","Fragments":["yo"]},{"Key":"gain yo","Fragments":["anything."]},{"Key":"yo anything.","Fragments":["In"]},{"Key":"anything. In","Fragments":["fact,"]},{"Key":"fact, this","Fragments":["variable"]},{"Key":"this variable","Fragments":["is"]},{"Key":"actually wasting","Fragments":["a"]},{"Key":"wasting a","Fragments":["bit"]},{"Key":"since entry.Key","Fragments":["already"]},{"Key":"entry.Key already","Fragments":["exists"]},{"Key":"already exists","Fragments":["and","(sets"]},{"Key":"is copied","Fragments":["into"]},{"Key":"copied into","Fragments":["\"int"]},{"Key":"into \"int","Fragments":["key\""]},{"Key":"\"int key\"","Fragments":["because"]},{"Key":"key\" because","Fragments":["\"int\""]},{"Key":"because \"int\"","Fragments":["is"]},{"Key":"\"int\" is","Fragments":["a","more"]},{"Key":" @agnes","Fragments":["Very"]},{"Key":"@agnes Very","Fragments":["true,"]},{"Key":"Very true,","Fragments":["I"]},{"Key":"true, I","Fragments":["generally"]},{"Key":"generally forget","Fragments":["that"]},{"Key":"forget that","Fragments":["the","your"]},{"Key":"the read","Fragments":["only"]},{"Key":"only types","Fragments":["can"]},{"Key":"types can","Fragments":["still"]},{"Key":"have their","Fragments":["wrapped"]},{"Key":"their wrapped","Fragments":["list"]},{"Key":"wrapped list","Fragments":["or"]},{"Key":"list or","Fragments":["dictionnary","array"]},{"Key":"or dictionnary","Fragments":["modified."]},{"Key":"dictionnary modified.","Fragments":["Thanks!"]},{"Key":" @bernhard","Fragments":["Yep,"]},{"Key":"@bernhard Yep,","Fragments":["I"]},{"Key":"Yep, I","Fragments":["realized"]},{"Key":"that mistake","Fragments":["after"]},{"Key":"mistake after","Fragments":["submitting"]},{"Key":"after submitting","Fragments":["and"]},{"Key":"submitting and","Fragments":["am"]},{"Key":"am too","Fragments":["lazy"]},{"Key":"too lazy","Fragments":["to","to"]},{"Key":"lazy to","Fragments":["fix","edit"]},{"Key":"fix it...","Fragments":["I'll"]},{"Key":"it... I'll","Fragments":["go"]},{"Key":"go do","Fragments":["it"]},{"Key":"it right","Fragments":["now!","you","away."]},{"Key":" @reid","Fragments":["Ah,"]},{"Key":"@reid Ah,","Fragments":["yeah,"]},{"Key":"Ah, yeah,","Fragments":["I"]},{"Key":"yeah, I","Fragments":["guess","totally"]},{"Key":"at Line","Fragments":["16."]},{"Key":"Line 16.","Fragments":["Silly"]},{"Key":"16. Silly","Fragments":["me!"]},{"Key":"Silly me!","Fragments":[":)"]},{"Key":"efficient then","Fragments":["sorting"]},{"Key":"then sorting","Fragments":["anyway,","the"]},{"Key":"sorting anyway,","Fragments":["so"]},{"Key":"so sorting","Fragments":["felt"]},{"Key":"sorting felt","Fragments":["like"]},{"Key":"felt like","Fragments":["the"]},{"Key":"the natural","Fragments":["choice.","next"]},{"Key":"a typo,","Fragments":["though"]},{"Key":"typo, though","Fragments":["I"]},{"Key":"am note","Fragments":["sure"]},{"Key":"note sure","Fragments":["the"]},{"Key":"between ```string```","Fragments":["and"]},{"Key":"```string``` and","Fragments":["```String```."]},{"Key":"and ```String```.","Fragments":["I"]},{"Key":"```String```. I","Fragments":["guess"]},{"Key":"the ```Int```","Fragments":["wrapper-class"]},{"Key":"```Int``` wrapper-class","Fragments":["in"]},{"Key":"wrapper-class in","Fragments":["Java."]},{"Key":" @celestino,","Fragments":["yes"]},{"Key":"@celestino, yes","Fragments":["it"]},{"Key":"yes it","Fragments":["should"]},{"Key":"use IDictionary.","Fragments":["I"]},{"Key":"IDictionary. I","Fragments":["usually"]},{"Key":"usually do,","Fragments":["but"]},{"Key":"do, but","Fragments":["missed"]},{"Key":"but missed","Fragments":["it"]},{"Key":"missed it","Fragments":["here."]},{"Key":"for pair.Value","Fragments":["being"]},{"Key":"pair.Value being","Fragments":["null,"]},{"Key":"being null,","Fragments":["it"]},{"Key":"null, it","Fragments":["is"]},{"Key":"fine. I","Fragments":["actually","sure"]},{"Key":"actually added","Fragments":["a"]},{"Key":"a unit","Fragments":["test","tiest","test"]},{"Key":"the blank","Fragments":["tile."]},{"Key":"blank tile.","Fragments":["I"]},{"Key":"tile. I","Fragments":["haven't"]},{"Key":"haven't played","Fragments":["scrabble"]},{"Key":"played scrabble","Fragments":["for"]},{"Key":"scrabble for","Fragments":["a"]},{"Key":"a long","Fragments":["time...","time","handed","way","method.","time...","time.","chain","day).","way","debate","stackoverflow","solution."]},{"Key":"looks cleaner,","Fragments":["great"]},{"Key":"cleaner, great","Fragments":["job!"]},{"Key":"just noticed.","Fragments":["You"]},{"Key":"noticed. You","Fragments":["don't"]},{"Key":"is logically","Fragments":["only"]},{"Key":"logically only","Fragments":["going"]},{"Key":"condition evaluates","Fragments":["to","to","to","to","to"]},{"Key":"evaluates to","Fragments":["false.","true","false.","false.","false,","true","a","false.","false,","a","`true`"]},{"Key":"Oh, now","Fragments":["that's"]},{"Key":"now that's","Fragments":["slick!"]},{"Key":"that's slick!","Fragments":["I"]},{"Key":"slick! I","Fragments":["wish"]},{"Key":"had thought","Fragments":["of","of","to"]},{"Key":"problem last","Fragments":["night"]},{"Key":"last night","Fragments":["and"]},{"Key":"night and","Fragments":["realized"]},{"Key":"solution does","Fragments":["not","not"]},{"Key":"not cover","Fragments":["all"]},{"Key":"cover all","Fragments":["possibilities,"]},{"Key":"all possibilities,","Fragments":["although"]},{"Key":"possibilities, although","Fragments":["I"]},{"Key":"although I","Fragments":["haven't","cannot","am","prefer","seem"]},{"Key":"does yet","Fragments":[":smile:"]},{"Key":"For example,","Fragments":["it","instead","in","1999,","whatever","the"]},{"Key":"example, it","Fragments":["doesn't"]},{"Key":"doesn't handle","Fragments":["the"]},{"Key":"apostrophe character","Fragments":["is"]},{"Key":"character is","Fragments":["alone","a","a","lowercase","null?","null?","error","the","not"]},{"Key":"is alone","Fragments":["in"]},{"Key":"alone in","Fragments":["the"]},{"Key":"the line.","Fragments":["For"]},{"Key":"line. For","Fragments":["example"]},{"Key":"example `Oh","Fragments":["#$%'@`."]},{"Key":"`Oh #$%'@`.","Fragments":["That"]},{"Key":"#$%'@`. That","Fragments":["would"]},{"Key":"fix by","Fragments":["extending"]},{"Key":"by extending","Fragments":["the"]},{"Key":"the regular","Fragments":["expression","expression,","expression","expression","expression"]},{"Key":"expression to","Fragments":["require","a","match"]},{"Key":"to require","Fragments":["letter","a"]},{"Key":"require letter","Fragments":["on"]},{"Key":"letter on","Fragments":["either"]},{"Key":"out is","Fragments":["if","that","the"]},{"Key":"if apostrophes","Fragments":["are"]},{"Key":"apostrophes are","Fragments":["used"]},{"Key":"are used","Fragments":["for","often","internally","to"]},{"Key":"for quotes.","Fragments":["For"]},{"Key":"quotes. For","Fragments":["example"]},{"Key":"example `She","Fragments":["said,"]},{"Key":"`She said,","Fragments":["'Hello"]},{"Key":"said, 'Hello","Fragments":["world!'`.","world!'","world!'"]},{"Key":"'Hello world!'`.","Fragments":["Does"]},{"Key":"world!'`. Does","Fragments":["anyone"]},{"Key":"Does anyone","Fragments":["have","have","see"]},{"Key":"anyone have","Fragments":["an","any"]},{"Key":"an idea","Fragments":["on","to","to","of"]},{"Key":"idea on","Fragments":["how"]},{"Key":"to strip","Fragments":["pairs","of","\"what"]},{"Key":"strip pairs","Fragments":["of"]},{"Key":"pairs of","Fragments":["apostrophes?"]},{"Key":"added {","Fragments":["11,"]},{"Key":"{ 11,","Fragments":["null"]},{"Key":"11, null","Fragments":["}"]},{"Key":"null }","Fragments":["to","},"]},{"Key":"} to","Fragments":["one","this:"]},{"Key":"my tests","Fragments":["and"]},{"Key":"it ended","Fragments":["up"]},{"Key":"up crashing","Fragments":["when"]},{"Key":"crashing when","Fragments":["it"]},{"Key":"right, string","Fragments":["is"]},{"Key":"an alias","Fragments":["for","for"]},{"Key":"alias for","Fragments":["System.String,","Boolean:"]},{"Key":"for System.String,","Fragments":["like"]},{"Key":"System.String, like","Fragments":["int,"]},{"Key":"like int,","Fragments":["char,"]},{"Key":"int, char,","Fragments":["aso..."]},{"Key":"char, aso...","Fragments":[":)"]},{"Key":"think about.","Fragments":[":)",":)",":)"]},{"Key":"Should IDictionary\u003c\u003e","Fragments":["be","be","be"]},{"Key":"IDictionary\u003c\u003e be","Fragments":["used","used","used"]},{"Key":"and out","Fragments":["parameters?","parameters?","parameters?","of"]},{"Key":"out parameters?","Fragments":["It","It","It"]},{"Key":"parameters? It","Fragments":["makes","makes","makes"]},{"Key":"when letterScores","Fragments":["is"]},{"Key":"letterScores is","Fragments":["null,"]},{"Key":"null, and","Fragments":["x.Key","i","\"l\""]},{"Key":"and x.Key","Fragments":["is"]},{"Key":"x.Key is","Fragments":["null?"]},{"Key":"3. While","Fragments":["I","this"]},{"Key":"use LINQ","Fragments":["a","expression,",":)","in","to"]},{"Key":"LINQ a","Fragments":["lot,"]},{"Key":"a lot,","Fragments":["the","especially"]},{"Key":"lot, the","Fragments":["amount"]},{"Key":"nesting in","Fragments":["this","removePunctuation()"]},{"Key":"one makes","Fragments":["it"]},{"Key":"read. Maybe","Fragments":["if"]},{"Key":"Maybe if","Fragments":["you","I"]},{"Key":"first line","Fragments":["out"]},{"Key":"line out","Fragments":["across","and"]},{"Key":"out across","Fragments":["a"]},{"Key":"across a","Fragments":["few"]},{"Key":"lines it","Fragments":["would"]},{"Key":" Encide/EncodeChar","Fragments":["and"]},{"Key":"Encide/EncodeChar and","Fragments":["Decode/DecodeChar"]},{"Key":"and Decode/DecodeChar","Fragments":["can"]},{"Key":"Decode/DecodeChar can","Fragments":["be"]},{"Key":"two calling","Fragments":["and"]},{"Key":"calling and","Fragments":["one"]},{"Key":"one called","Fragments":["method"]},{"Key":"that better","Fragments":["variable"]},{"Key":"names are","Fragments":["needed.","longer","good","wrong","generally","long"]},{"Key":"with @jordon","Fragments":["in"]},{"Key":"@jordon in","Fragments":["that"]},{"Key":"Where clause","Fragments":["prevents","removed"]},{"Key":"clause prevents","Fragments":["an"]},{"Key":"prevents an","Fragments":["exception."]},{"Key":"exception. However,","Fragments":["you"]},{"Key":"However, you","Fragments":["could","have","can","do"]},{"Key":"could drop","Fragments":["the","ValididateNucleotide."]},{"Key":"and simply","Fragments":["do:","commenting"]},{"Key":"simply do:","Fragments":["result[i.ToLower()]"]},{"Key":"do: result[i.ToLower()]","Fragments":["="]},{"Key":"result[i.ToLower()] =","Fragments":["o.Key."]},{"Key":"= o.Key.","Fragments":["It"]},{"Key":"o.Key. It","Fragments":["will"]},{"Key":"will add","Fragments":["it","the"]},{"Key":"missing and","Fragments":["will"]},{"Key":"will overwrite","Fragments":["a"]},{"Key":"overwrite a","Fragments":["previous"]},{"Key":"previous value","Fragments":["if"]},{"Key":"value if","Fragments":["it","the","a"]},{"Key":"it already","Fragments":["exists."]},{"Key":"already exists.","Fragments":["(Something"]},{"Key":"exists. (Something","Fragments":["I"]},{"Key":"(Something I","Fragments":["learned"]},{"Key":"learned from","Fragments":["some","this"]},{"Key":"from some","Fragments":["other","busy"]},{"Key":"other people!)","Fragments":["There"]},{"Key":"people!) There","Fragments":["is"]},{"Key":"also an","Fragments":["added"]},{"Key":"an added","Fragments":["benefit"]},{"Key":"added benefit","Fragments":["that","that"]},{"Key":"benefit that","Fragments":["you","it"]},{"Key":"not calling","Fragments":[".ToLower()","\"_wordCharacters.Contains(c)\""]},{"Key":"few other","Fragments":["things","people","submissions"]},{"Key":"null, o.Value","Fragments":["is"]},{"Key":"o.Value is","Fragments":["null,"]},{"Key":"and i","Fragments":["is","need"]},{"Key":"i is","Fragments":["null?"]},{"Key":"an if/else","Fragments":["clause","block,"]},{"Key":"if/else clause","Fragments":["in"]},{"Key":"clause in","Fragments":["Add(),","Match","place"]},{"Key":"in Add(),","Fragments":["but"]},{"Key":"Add(), but","Fragments":["noticed"]},{"Key":"but noticed","Fragments":["it"]},{"Key":"noticed it","Fragments":["was","can"]},{"Key":"was duplicating","Fragments":["logic"]},{"Key":"duplicating logic","Fragments":["in"]},{"Key":" Interesting","Fragments":["that","approach.","point","solution.","use","to","way","way","approach,","use"]},{"Key":"Interesting that","Fragments":["you"]},{"Key":"of testing,","Fragments":["but..."]},{"Key":"testing, but...","Fragments":[":)"]},{"Key":"null, scoreToLetters.Value","Fragments":["is"]},{"Key":"scoreToLetters.Value is","Fragments":["null,"]},{"Key":"and \"l\"","Fragments":["(letter)"]},{"Key":"\"l\" (letter)","Fragments":["is"]},{"Key":"(letter) is","Fragments":["null?"]},{"Key":"Zip looks","Fragments":["great.","great."]},{"Key":"great. As","Fragments":["for"]},{"Key":"for super","Fragments":["optimsied"]},{"Key":"super optimsied","Fragments":["efficiency"]},{"Key":"optimsied efficiency","Fragments":["that"]},{"Key":"efficiency that","Fragments":["was"]},{"Key":"the challenge","Fragments":["of","in","in","of"]},{"Key":"challenge of","Fragments":["this","having","preventing","the"]},{"Key":"this (or","Fragments":["any"]},{"Key":"(or any","Fragments":["of","IEnumerble()"]},{"Key":"the xercises","Fragments":["here"]},{"Key":"xercises here","Fragments":[".."]},{"Key":"here ..","Fragments":["not"]},{"Key":".. not","Fragments":["to"]},{"Key":"say there","Fragments":["could"]},{"Key":"there could","Fragments":["be","be"]},{"Key":"be exercises","Fragments":["like"]},{"Key":"exercises like","Fragments":["that,","this"]},{"Key":"like that,","Fragments":["but","but"]},{"Key":"are none","Fragments":["here."]},{"Key":"none here.","Fragments":["The"]},{"Key":"here. The","Fragments":["emphasis","input"]},{"Key":"The emphasis","Fragments":["here"]},{"Key":"emphasis here","Fragments":["is"]},{"Key":"on readbility","Fragments":["and"]},{"Key":"readbility and","Fragments":["conciseness,)"]},{"Key":"the PadRight","Fragments":["method,"]},{"Key":"PadRight method,","Fragments":["forgot"]},{"Key":"method, forgot","Fragments":["about"]},{"Key":"that. Of","Fragments":["course"]},{"Key":"not tested","Fragments":["here.","for"]},{"Key":"tested here.","Fragments":["It"]},{"Key":"tests whihc","Fragments":["would"]},{"Key":"whihc would","Fragments":["make"]},{"Key":"things clear","Fragments":["as"]},{"Key":"as hwo","Fragments":["to"]},{"Key":"hwo to","Fragments":["handle"]},{"Key":"handle mismatched","Fragments":["dna"]},{"Key":"mismatched dna","Fragments":["lenghths."]},{"Key":"OK, instead","Fragments":["of"]},{"Key":"using Add","Fragments":["which"]},{"Key":"Add which","Fragments":["leads"]},{"Key":"which leads","Fragments":["to","to"]},{"Key":"leads to","Fragments":["List","more","the","a"]},{"Key":"to List","Fragments":["resizes","of","but","for"]},{"Key":"List resizes","Fragments":["which"]},{"Key":"resizes which","Fragments":["is"]},{"Key":"is expensive,","Fragments":["you"]},{"Key":"expensive, you","Fragments":["create"]},{"Key":"you create","Fragments":["a","the","an","a","new","the","this","an","a","local","the","a"]},{"Key":"full list","Fragments":["of"]},{"Key":"of numbers","Fragments":["first","and","that","to"]},{"Key":"numbers first","Fragments":["and"]},{"Key":"the composites","Fragments":["you"]},{"Key":"composites you","Fragments":["make"]},{"Key":"make those","Fragments":["=0","calls","changes."]},{"Key":"those =0","Fragments":["then"]},{"Key":"=0 then","Fragments":["only"]},{"Key":"then only","Fragments":["return","doing"]},{"Key":"the non-zero","Fragments":["values"]},{"Key":"non-zero values","Fragments":["which"]},{"Key":"values which","Fragments":["will"]},{"Key":"Try it","Fragments":["out","with","without","without","(unnested","without"]},{"Key":"it out","Fragments":["first,","yet.","first","whther","anyway?"]},{"Key":"out first,","Fragments":["this"]},{"Key":"most interesting","Fragments":["exercises"]},{"Key":"interesting exercises","Fragments":["(but"]},{"Key":"exercises (but","Fragments":["pretty"]},{"Key":"(but pretty","Fragments":["basic"]},{"Key":"pretty basic","Fragments":["still)","algorithm"]},{"Key":"basic still)","Fragments":["and"]},{"Key":"still) and","Fragments":["I"]},{"Key":"of solutions","Fragments":["in","on","using"]},{"Key":"solutions in","Fragments":["my"]},{"Key":"my last","Fragments":["iteration","3-4","submission","iteration"]},{"Key":"last iteration","Fragments":["but","I"]},{"Key":"iteration but","Fragments":["dont","getting","here"]},{"Key":"but dont","Fragments":["look"]},{"Key":"dont look","Fragments":["at"]},{"Key":"too soon","Fragments":["http://exercism.io/submissions/7beac29572d64534b1396d58bb62b60b"]},{"Key":"did an","Fragments":["if"]},{"Key":"an immediate","Fragments":["return"]},{"Key":" rather","Fragments":["than"]},{"Key":"400 =","Fragments":["0)","0))"]},{"Key":"a criticism","Fragments":["because"]},{"Key":"criticism because","Fragments":["your"]},{"Key":"works perfectly,","Fragments":["but"]},{"Key":"perfectly, but","Fragments":["more"]},{"Key":"question about","Fragments":["developer"]},{"Key":"about developer","Fragments":["preference."]},{"Key":"Good You","Fragments":["could"]},{"Key":"could optimise","Fragments":["more"]},{"Key":"optimise more","Fragments":["for"]},{"Key":"readability but","Fragments":["this"]},{"Key":"fastest without","Fragments":["using"]},{"Key":"using for","Fragments":["loops","loops","loops","loops","loops"]},{"Key":"for loops","Fragments":["which","are","through","goes,","was","slightly","which","in","with","in","into","is","is","is","is","required","making","not","into"]},{"Key":"loops which","Fragments":["IMHO","are"]},{"Key":"which IMHO","Fragments":["should","is"]},{"Key":"IMHO should","Fragments":["only"]},{"Key":"should only","Fragments":["be","do","have","have","be","have","be","catch","be","be"]},{"Key":"for optmisiation","Fragments":["whilst"]},{"Key":"optmisiation whilst","Fragments":["losing"]},{"Key":"whilst losing","Fragments":["readability,"]},{"Key":"losing readability,","Fragments":["the","number=regex.replace(number,"]},{"Key":"readability, the","Fragments":["trade"]},{"Key":"the trade","Fragments":["off","off"]},{"Key":"trade off","Fragments":["being","in","on","in","in"]},{"Key":"being justified","Fragments":["(but"]},{"Key":"justified (but","Fragments":["also"]},{"Key":"for special","Fragments":["situaitons"]},{"Key":"special situaitons","Fragments":["like"]},{"Key":"situaitons like","Fragments":["the"]},{"Key":"inner loop","Fragments":["in","is","out","to","you","can","-","is"]},{"Key":"in Sieve...","Fragments":["but"]},{"Key":"Sieve... but","Fragments":["they"]},{"Key":"If youa","Fragments":["re"]},{"Key":"youa re","Fragments":["going"]},{"Key":"re going","Fragments":["to"]},{"Key":"use mutation","Fragments":["in"]},{"Key":"mutation in","Fragments":["ProcessSequence"]},{"Key":"in ProcessSequence","Fragments":["there"]},{"Key":"ProcessSequence there","Fragments":["is"]},{"Key":"in using","Fragments":["List.ForEach","that","PrimesFor()"]},{"Key":"using List.ForEach","Fragments":["which"]},{"Key":"List.ForEach which","Fragments":["unnecesarily"]},{"Key":"which unnecesarily","Fragments":["adds"]},{"Key":"unnecesarily adds","Fragments":["to"]},{"Key":"to enumerator","Fragments":["stages"]},{"Key":"enumerator stages","Fragments":["and"]},{"Key":"stages and","Fragments":["space"]},{"Key":"and space","Fragments":["ocnsumption"]},{"Key":"space ocnsumption","Fragments":["wiht"]},{"Key":"ocnsumption wiht","Fragments":["ToList()."]},{"Key":"wiht ToList().","Fragments":["Just"]},{"Key":"ToList(). Just","Fragments":["use"]},{"Key":"Just use","Fragments":["plain"]},{"Key":"use plain","Fragments":["old"]},{"Key":"plain old","Fragments":["foreach"]},{"Key":"old foreach","Fragments":["-"]},{"Key":"foreach -","Fragments":["clearer","resharper"]},{"Key":"- clearer","Fragments":["and"]},{"Key":"the feed","Fragments":["back."]},{"Key":"feed back.","Fragments":["I've"]},{"Key":"back. I've","Fragments":["gotten"]},{"Key":"I've gotten","Fragments":["used","burned","in"]},{"Key":"gotten used","Fragments":["to","to"]},{"Key":"to letting","Fragments":["Visual"]},{"Key":"letting Visual","Fragments":["Studio"]},{"Key":"Studio do","Fragments":["my"]},{"Key":"formatting so","Fragments":["when"]},{"Key":"so when","Fragments":["it","doing","I"]},{"Key":"it properly","Fragments":["I"]},{"Key":"properly I","Fragments":["don't"]},{"Key":"How does","Fragments":["one"]},{"Key":"does one","Fragments":["decide"]},{"Key":"one decide","Fragments":["when"]},{"Key":"decide when","Fragments":["to"]},{"Key":"when to","Fragments":["use","use","implicitly","return"]},{"Key":"use `var`?","Fragments":["I"]},{"Key":"`var`? I","Fragments":["tend"]},{"Key":"when I'm","Fragments":["being"]},{"Key":"I'm being","Fragments":["lazy.","really"]},{"Key":"being lazy.","Fragments":["For","Before"]},{"Key":"lazy. For","Fragments":["example"]},{"Key":"example I","Fragments":["used"]},{"Key":"used var","Fragments":["in"]},{"Key":"outer foreach","Fragments":["because"]},{"Key":"don't remember","Fragments":["the","why"]},{"Key":"remember the","Fragments":["type","total"]},{"Key":"type used","Fragments":["when"]},{"Key":"used when","Fragments":["enumerating","the","the","you're"]},{"Key":"when enumerating","Fragments":["a"]},{"Key":"didn't feel","Fragments":["like","appropriate"]},{"Key":"like looking","Fragments":["it"]},{"Key":"looking it","Fragments":["up."]},{"Key":"up. It","Fragments":["wasn't","appears"]},{"Key":"It wasn't","Fragments":["because","mentioned","for","obvious","in"]},{"Key":"wasn't because","Fragments":["I"]},{"Key":"readable or","Fragments":["already","more","a","easier","not."]},{"Key":"or already","Fragments":["clear"]},{"Key":"already clear","Fragments":["from"]},{"Key":"from context","Fragments":["(which,"]},{"Key":"context (which,","Fragments":["I'd"]},{"Key":"(which, I'd","Fragments":["argue,"]},{"Key":"I'd argue,","Fragments":["it's"]},{"Key":"argue, it's","Fragments":["not)."]},{"Key":"of `IDictionary`","Fragments":["and"]},{"Key":"`IDictionary` and","Fragments":["don't"]},{"Key":"and don't","Fragments":["have","care","need"]},{"Key":"a habit","Fragments":["of","and"]},{"Key":"of considering","Fragments":["a"]},{"Key":"considering a","Fragments":["classes"]},{"Key":"a classes","Fragments":["parentage"]},{"Key":"classes parentage","Fragments":["(or"]},{"Key":"parentage (or","Fragments":["whatever"]},{"Key":"(or whatever","Fragments":["you"]},{"Key":"you call","Fragments":["it).","ContainsKey(),","NucleotideCounts[nucleotide]","Add","GetRandomUpperCaseCharacter(_seed),","GenerateNumbers(4).","Grade(n)","Sort","Grade()","UniqueSides(),","it","IsLetterOrDigit()","it","a","Shift"]},{"Key":"a genenral","Fragments":["rule"]},{"Key":"genenral rule","Fragments":["using"]},{"Key":"rule using","Fragments":["the"]},{"Key":"the select","Fragments":["-\u003e","line,"]},{"Key":"select -\u003e","Fragments":["ToDictionary"]},{"Key":"-\u003e ToDictionary","Fragments":["pattern"]},{"Key":"ToDictionary pattern","Fragments":["you"]},{"Key":"pattern you","Fragments":["are"]},{"Key":"off using","Fragments":["Tuple","the"]},{"Key":"using Tuple","Fragments":["which"]},{"Key":"Tuple which","Fragments":["is"]},{"Key":"a struct","Fragments":["on","not","on"]},{"Key":"struct on","Fragments":["the","the"]},{"Key":"stack not","Fragments":["requirng"]},{"Key":"not requirng","Fragments":["garbage"]},{"Key":"requirng garbage","Fragments":["collection"]},{"Key":"garbage collection","Fragments":["over"]},{"Key":"collection over","Fragments":["anonymous"]},{"Key":"over anonymous","Fragments":["types"]},{"Key":"anonymous types","Fragments":["(as"]},{"Key":"types (as","Fragments":["you"]},{"Key":"(as you","Fragments":["use","have"]},{"Key":"use here).","Fragments":["Now"]},{"Key":"here). Now","Fragments":["something"]},{"Key":"Now something","Fragments":["such"]},{"Key":"something such","Fragments":["as"]},{"Key":"as KeyValuePair()","Fragments":["isa"]},{"Key":"KeyValuePair() isa","Fragments":["struct"]},{"Key":"isa struct","Fragments":["too,"]},{"Key":"struct too,","Fragments":["so"]},{"Key":"too, so","Fragments":["no"]},{"Key":"so no","Fragments":["issue","further","name","need","one","List","need"]},{"Key":"no issue","Fragments":["in"]},{"Key":"issue in","Fragments":["using","this","the"]},{"Key":"Why did","Fragments":["you","you","you","you","you","you","you","you","you","you"]},{"Key":"on integers?","Fragments":["And"]},{"Key":"integers? And","Fragments":["a"]},{"Key":"private one,","Fragments":["even."]},{"Key":"one, even.","Fragments":["Is"]},{"Key":"even. Is","Fragments":["it"]},{"Key":"a 'fluent'","Fragments":["check?"]},{"Key":"even shorter","Fragments":["(year%4==0)"]},{"Key":"shorter (year%4==0)","Fragments":["vs"]},{"Key":"(year%4==0) vs","Fragments":["year.IsDivisibleBy(4)"]},{"Key":"pass 2","Fragments":["parameters"]},{"Key":"2 parameters","Fragments":["to"]},{"Key":"parameters to","Fragments":["isDivisibleBy(),","char"]},{"Key":"to isDivisibleBy(),","Fragments":["why"]},{"Key":"isDivisibleBy(), why","Fragments":["not"]},{"Key":"not simply","Fragments":["make"]},{"Key":"simply make","Fragments":["a"]},{"Key":"static field","Fragments":["for"]},{"Key":"field for","Fragments":["the"]},{"Key":" Our","Fragments":["solutions"]},{"Key":"Our solutions","Fragments":["are"]},{"Key":"solutions are","Fragments":["pretty"]},{"Key":"are pretty","Fragments":["much"]},{"Key":"much the","Fragments":["same,","program."]},{"Key":"same, but","Fragments":["I","I","the"]},{"Key":"you generate","Fragments":["the","the"]},{"Key":"generate the","Fragments":["random","correct","random","entries","dictionary.","final","KeyNotFoundException.","sum."]},{"Key":"the random","Fragments":["keys.","value","value","characters.","digit","robot","number","approach","string","approach"]},{"Key":"random keys.","Fragments":["Don't"]},{"Key":"keys. Don't","Fragments":["know"]},{"Key":"Don't know","Fragments":["why","if","of","if","if"]},{"Key":"never remember","Fragments":["to"]},{"Key":"of `ToDictionary`.","Fragments":["I"]},{"Key":"`ToDictionary`. I","Fragments":["have"]},{"Key":"start using","Fragments":["that","in"]},{"Key":"in rather","Fragments":["than"]},{"Key":"my usual","Fragments":["manual"]},{"Key":"usual manual","Fragments":["build"]},{"Key":"manual build","Fragments":["with"]},{"Key":"build with","Fragments":["foreach."]},{"Key":"with foreach.","Fragments":["Do"]},{"Key":"foreach. Do","Fragments":["you","not"]},{"Key":"have duplicate","Fragments":["keys?","names."]},{"Key":"Linq syntax","Fragments":["but"]},{"Key":"syntax but","Fragments":["whether","must","is","something"]},{"Key":"but whether","Fragments":["you"]},{"Key":"whether you","Fragments":["use","need","should","create"]},{"Key":"on who","Fragments":["you're"]},{"Key":"who you're","Fragments":["working"]},{"Key":"you're working","Fragments":["with","on"]},{"Key":"with I","Fragments":["suppose."]},{"Key":"I suppose.","Fragments":["Don't","It's"]},{"Key":"suppose. Don't","Fragments":["forget"]},{"Key":"Don't forget","Fragments":["who'll","the","that"]},{"Key":"forget who'll","Fragments":["have"]},{"Key":"who'll have","Fragments":["to"]},{"Key":" Fair","Fragments":["enough,","enough"]},{"Key":"Fair enough,","Fragments":["most"]},{"Key":"enough, most","Fragments":["people"]},{"Key":"say my","Fragments":["one"]},{"Key":"my one","Fragments":["line"]},{"Key":"line ternary","Fragments":["return"]},{"Key":"ternary return","Fragments":["is"]},{"Key":"me it's","Fragments":["not","easier","hard"]},{"Key":"all boils","Fragments":["down"]},{"Key":"boils down","Fragments":["to"]},{"Key":"to habit","Fragments":["and"]},{"Key":"and preference","Fragments":["I","but"]},{"Key":"preference I","Fragments":["suppose."]},{"Key":" Evaluate()","Fragments":["can"]},{"Key":"Evaluate() can","Fragments":["be"]},{"Key":"be turned","Fragments":["into","into"]},{"Key":"turned into","Fragments":["a","the","a"]},{"Key":"dictionary with","Fragments":["lambas","literal","the"]},{"Key":"with lambas","Fragments":["as"]},{"Key":"lambas as","Fragments":["values"]},{"Key":" Thi","Fragments":["si"]},{"Key":"Thi si","Fragments":["very"]},{"Key":"si very","Fragments":["long"]},{"Key":"long whihc","Fragments":["makes"]},{"Key":"whihc makes","Fragments":["it"]},{"Key":"there isa","Fragments":["mixture"]},{"Key":"isa mixture","Fragments":["of"]},{"Key":"of for","Fragments":["and","loop"]},{"Key":"for and","Fragments":["foreach","then","foreach","reduce"]},{"Key":"and foreach","Fragments":["loops.","was","nesting"]},{"Key":"foreach loops.","Fragments":["foreach"]},{"Key":"loops. foreach","Fragments":["is"]},{"Key":"foreach is","Fragments":["gnerallyrepferable","faster"]},{"Key":"is gnerallyrepferable","Fragments":["for"]},{"Key":"gnerallyrepferable for","Fragments":["bounds"]},{"Key":"for bounds","Fragments":["checknig"]},{"Key":"bounds checknig","Fragments":["and"]},{"Key":"checknig and","Fragments":["readability."]},{"Key":"No specific","Fragments":["recommendations"]},{"Key":"specific recommendations","Fragments":["but"]},{"Key":"recommendations but","Fragments":["certainly"]},{"Key":"but certainly","Fragments":["this"]},{"Key":"certainly this","Fragments":["can"]},{"Key":"any foreach","Fragments":["or"]},{"Key":"foreach or","Fragments":["for","for"]},{"Key":"or for","Fragments":["loops","is"]},{"Key":"totally agree","Fragments":["about","with","that","with"]},{"Key":"about learning","Fragments":["from"]},{"Key":"learning from","Fragments":["others"]},{"Key":"from others","Fragments":["code."]},{"Key":"others code.","Fragments":["I've"]},{"Key":"code. I've","Fragments":["already"]},{"Key":"already picked","Fragments":["up"]},{"Key":"lot about","Fragments":["the"]},{"Key":"Linq extension","Fragments":["methods","method"]},{"Key":"know or","Fragments":["hadn't"]},{"Key":"or hadn't","Fragments":["quite"]},{"Key":"hadn't quite","Fragments":["got"]},{"Key":"quite got","Fragments":["straight."]},{"Key":"Your regular","Fragments":["expression"]},{"Key":"expression could","Fragments":["just"]},{"Key":"be `[^a-z0-9']`.","Fragments":["`Regex.Replace`"]},{"Key":"`[^a-z0-9']`. `Regex.Replace`","Fragments":["replaces"]},{"Key":"`Regex.Replace` replaces","Fragments":["all"]},{"Key":"replaces all","Fragments":["matches","non-word"]},{"Key":"all matches","Fragments":["making"]},{"Key":"matches making","Fragments":["the"]},{"Key":"the *","Fragments":["unnecessary"]},{"Key":"* unnecessary","Fragments":["(I'm"]},{"Key":"unnecessary (I'm","Fragments":["not"]},{"Key":"(I'm not","Fragments":["sure","sure","sure"]},{"Key":"a performance","Fragments":["difference).","bottleneck.","improvements.","issue","or","hit","question?)","boost,","gain?"]},{"Key":"performance difference).","Fragments":["And"]},{"Key":"difference). And","Fragments":["'"]},{"Key":"And '","Fragments":["is"]},{"Key":"' is","Fragments":["not"]},{"Key":"special character","Fragments":["in"]},{"Key":"C# regular","Fragments":["expression"]},{"Key":"expression so","Fragments":["doesn't"]},{"Key":"so doesn't","Fragments":["need"]},{"Key":"be escaped.","Fragments":["And"]},{"Key":"escaped. And","Fragments":["since"]},{"Key":"And since","Fragments":["you've"]},{"Key":"since you've","Fragments":["already"]},{"Key":"you've already","Fragments":["`ToLower()`'d"]},{"Key":"already `ToLower()`'d","Fragments":["`this.phrase`"]},{"Key":"`ToLower()`'d `this.phrase`","Fragments":["you"]},{"Key":"`this.phrase` you","Fragments":["don't"]},{"Key":"case characters","Fragments":["(but","as"]},{"Key":"characters (but","Fragments":["your"]},{"Key":"(but your","Fragments":["regex"]},{"Key":"your regex","Fragments":["is","solution"]},{"Key":"regex is","Fragments":["more","nice","not"]},{"Key":"more robust","Fragments":["with"]},{"Key":"robust with","Fragments":["it"]},{"Key":"it if","Fragments":["'this.phrase'","there"]},{"Key":"if 'this.phrase'","Fragments":["changes"]},{"Key":"'this.phrase' changes","Fragments":["in"]},{"Key":"Also you've","Fragments":["got"]},{"Key":"some style","Fragments":["issues"]},{"Key":"style issues","Fragments":["with"]},{"Key":"issues with","Fragments":["the","the","the","Silence","the","you"]},{"Key":"the `phrase`","Fragments":["property."]},{"Key":"`phrase` property.","Fragments":["Your"]},{"Key":"property. Your","Fragments":["{"]},{"Key":"Your {","Fragments":["should"]},{"Key":"{ should","Fragments":["be"]},{"Key":"next line","Fragments":["and","to"]},{"Key":"and phrase","Fragments":["would"]},{"Key":"phrase would","Fragments":["traditionally"]},{"Key":"would traditionally","Fragments":["be"]},{"Key":"traditionally be","Fragments":["capitalized."]},{"Key":"be capitalized.","Fragments":["I"]},{"Key":"capitalized. I","Fragments":["realize"]},{"Key":"that Phrase","Fragments":["is"]},{"Key":"Phrase is","Fragments":["already"]},{"Key":"already the","Fragments":["name"]},{"Key":"class so","Fragments":["perhaps"]},{"Key":"so perhaps","Fragments":["a"]},{"Key":"different property","Fragments":["name"]},{"Key":"property name","Fragments":["would"]},{"Key":"name would","Fragments":["be","help"]},{"Key":"better. Between","Fragments":["Phrase,"]},{"Key":"Between Phrase,","Fragments":["phrase"]},{"Key":"Phrase, phrase","Fragments":["and"]},{"Key":"phrase and","Fragments":["_phrase"]},{"Key":"and _phrase","Fragments":["there"]},{"Key":"_phrase there","Fragments":["are"]},{"Key":"are an","Fragments":["awful","anagram","important"]},{"Key":"an awful","Fragments":["lot","lot","lot","lot","lot"]},{"Key":"awful lot","Fragments":["of","of","of","of","like"]},{"Key":" :)","Fragments":["Just","No"]},{"Key":"Just to","Fragments":["be","clarify,","be","show"]},{"Key":"Why LowerFirstLetter","Fragments":["rathen"]},{"Key":"LowerFirstLetter rathen","Fragments":["than"]},{"Key":"rathen than","Fragments":[".ToLower()"]},{"Key":"than .ToLower()","Fragments":["for"]},{"Key":".ToLower() for","Fragments":["the"]},{"Key":"whole string,","Fragments":["does","the"]},{"Key":"string, does","Fragments":["not"]},{"Key":"not look","Fragments":["signficiantly","like"]},{"Key":"look signficiantly","Fragments":["more"]},{"Key":"signficiantly more","Fragments":["efficient"]},{"Key":"less robust","Fragments":["again"]},{"Key":"robust again","Fragments":["variants"]},{"Key":"again variants","Fragments":["in"]},{"Key":"variants in","Fragments":["test"]},{"Key":"in test","Fragments":["data.","class."]},{"Key":"Using as","Fragments":["HasSet"]},{"Key":"as HasSet","Fragments":["rathen"]},{"Key":"HasSet rathen","Fragments":["tha"]},{"Key":"rathen tha","Fragments":["List()"]},{"Key":"tha List()","Fragments":["will"]},{"Key":"List() will","Fragments":["make"]},{"Key":"make GetUniqueRandomName()","Fragments":["more"]},{"Key":"GetUniqueRandomName() more","Fragments":["effiicient"]},{"Key":"more effiicient","Fragments":["and"]},{"Key":"effiicient and","Fragments":["simpler"]},{"Key":"refactor GetRandomNumber","Fragments":["and"]},{"Key":"GetRandomNumber and","Fragments":["GetRandomLetters"]},{"Key":"and GetRandomLetters","Fragments":["to"]},{"Key":"GetRandomLetters to","Fragments":["one"]},{"Key":" Whenever","Fragments":["I"]},{"Key":"Whenever I","Fragments":["see"]},{"Key":"1. new","Fragments":["collection"]},{"Key":"new collection","Fragments":["that","then"]},{"Key":"collection that","Fragments":["implements"]},{"Key":"2. foreach","Fragments":["loop"]},{"Key":"foreach loop","Fragments":["to","in","is","like","instead","would","inside","actually","or"]},{"Key":"loop to","Fragments":["mutate","handle","the","find","calculate","eliminate","this","build"]},{"Key":"to mutate","Fragments":["said"]},{"Key":"mutate said","Fragments":["collection"]},{"Key":"3. return","Fragments":["collection"]},{"Key":"a generator.","Fragments":["It"]},{"Key":"generator. It","Fragments":["is","isn't"]},{"Key":"is shorter,","Fragments":["sometimes"]},{"Key":"shorter, sometimes","Fragments":["more"]},{"Key":"sometimes more","Fragments":["space"]},{"Key":"more space","Fragments":["efficent"]},{"Key":"space efficent","Fragments":["and"]},{"Key":"efficent and","Fragments":["more"]},{"Key":"more flexible.","Fragments":["So"]},{"Key":"flexible. So","Fragments":["the"]},{"Key":"above pattern","Fragments":["is"]},{"Key":"pattern is","Fragments":["what","continued"]},{"Key":"should notice.","Fragments":["I"]},{"Key":"notice. I","Fragments":["rarely"]},{"Key":"I rarely","Fragments":["see"]},{"Key":"rarely see","Fragments":["a"]},{"Key":"a justiication","Fragments":["not"]},{"Key":"justiication not","Fragments":["to"]},{"Key":"a generator","Fragments":["for","i.e.","pattern.","using","with","using","using","using","using","or","just","i.e."]},{"Key":"generator for","Fragments":["this"]},{"Key":"The first","Fragments":["if","idea","condition","one","subtraction","bit","condition","condition","big"]},{"Key":"if in","Fragments":["Kind"]},{"Key":"in Kind","Fragments":["can","not"]},{"Key":"Kind can","Fragments":["be"]},{"Key":"refactored as","Fragments":["you"]},{"Key":"you ar","Fragments":["repeating"]},{"Key":"ar repeating","Fragments":["the"]},{"Key":"repeating the","Fragments":["same","regex,","tests","same"]},{"Key":"same logic","Fragments":["3","on"]},{"Key":"logic 3","Fragments":["times."]},{"Key":"The following","Fragments":["three"]},{"Key":"following three","Fragments":["ifs"]},{"Key":"ifs should,","Fragments":["as"]},{"Key":"should, as","Fragments":["you"]},{"Key":"you ahve","Fragments":["done"]},{"Key":"ahve done","Fragments":["it"]},{"Key":"done it","Fragments":["should","that","all","with","yet!","in"]},{"Key":"single combined","Fragments":["test"]},{"Key":"combined test","Fragments":["that"]},{"Key":"if ...else","Fragments":["if..else"]},{"Key":"...else if..else","Fragments":["type."]},{"Key":"a bonus","Fragments":["point","section"]},{"Key":"bonus point","Fragments":["you"]},{"Key":"point you","Fragments":["can"]},{"Key":"three conditional","Fragments":["tests"]},{"Key":"conditional tests","Fragments":["in"]},{"Key":"in those","Fragments":["currently","other","Five"]},{"Key":"those currently","Fragments":["three"]},{"Key":"currently three","Fragments":["seperate"]},{"Key":"three seperate","Fragments":["ifs"]},{"Key":"seperate ifs","Fragments":[":-)"]},{"Key":"Good point.","Fragments":["Still","How"]},{"Key":"point. Still","Fragments":["this"]},{"Key":"Still this","Fragments":["is","is","is","is","is"]},{"Key":"the conventional","Fragments":["way"]},{"Key":"conventional way","Fragments":["to"]},{"Key":"a stack.","Fragments":["A"]},{"Key":"stack. A","Fragments":["lot"]},{"Key":"A lot","Fragments":["of","of","of"]},{"Key":"exercises are","Fragments":["about"]},{"Key":"correct collection","Fragments":["to"]},{"Key":"collection to","Fragments":["make"]},{"Key":"implementation simple","Fragments":["as"]},{"Key":"as is","Fragments":["the","possible.","just","the","works","Sum.","on"]},{"Key":"case here.","Fragments":["Yes"]},{"Key":"here. Yes","Fragments":["it"]},{"Key":"Yes it","Fragments":["could"]},{"Key":"be optimised","Fragments":["more"]},{"Key":"optimised more","Fragments":["as"]},{"Key":"more as","Fragments":["you"]},{"Key":"you note","Fragments":["but"]},{"Key":"note but","Fragments":["in"]},{"Key":"world IMHO","Fragments":["you"]},{"Key":"IMHO you","Fragments":["should","are","have"]},{"Key":"the profiler","Fragments":["revelas"]},{"Key":"profiler revelas","Fragments":["that"]},{"Key":"revelas that","Fragments":["it"]},{"Key":"implementation after","Fragments":["our"]},{"Key":"after our","Fragments":["exchange"]},{"Key":"our exchange","Fragments":["on"]},{"Key":"exchange on","Fragments":["mine."]},{"Key":"on mine.","Fragments":["Looks"]},{"Key":"mine. Looks","Fragments":["really","GREAT!!"]},{"Key":"Looks really","Fragments":["good."]},{"Key":"really good.","Fragments":["Input"]},{"Key":"good. Input","Fragments":["validation"]},{"Key":"Input validation","Fragments":["is"]},{"Key":"validation is","Fragments":["a"]},{"Key":"big item","Fragments":["to"]},{"Key":"item to","Fragments":["me","an"]},{"Key":"me (and","Fragments":["it"]},{"Key":"(and it","Fragments":["can't","reads"]},{"Key":"can't hurt","Fragments":["to"]},{"Key":"hurt to","Fragments":["add),"]},{"Key":"to add),","Fragments":["but"]},{"Key":"add), but","Fragments":["the"]},{"Key":"the assignment's","Fragments":["test"]},{"Key":"assignment's test","Fragments":["set"]},{"Key":"test set","Fragments":["does","it"]},{"Key":"set does","Fragments":["not"]},{"Key":"not ask","Fragments":["for"]},{"Key":"ask for","Fragments":["it."]},{"Key":" @buddy,","Fragments":["you"]},{"Key":"@buddy, you","Fragments":["are"]},{"Key":"quite right,","Fragments":["I"]},{"Key":"missed that","Fragments":["in"]},{"Key":"my null","Fragments":["tests."]},{"Key":"null tests.","Fragments":["I've"]},{"Key":"tests. I've","Fragments":["updated"]},{"Key":"I've updated","Fragments":["the","my"]},{"Key":"updated the","Fragments":["tests"]},{"Key":"following and","Fragments":["it"]},{"Key":"does crash","Fragments":["as"]},{"Key":"crash as","Fragments":["you"]},{"Key":"you said.","Fragments":["I've"]},{"Key":"said. I've","Fragments":["fixed"]},{"Key":"I've fixed","Fragments":["my"]},{"Key":"fixed my","Fragments":["code,"]},{"Key":"but won't","Fragments":["bother","bother"]},{"Key":"won't bother","Fragments":["submitting.","submitting."]},{"Key":"var old","Fragments":["="]},{"Key":"old =","Fragments":["new"]},{"Key":"new Dictionary\u003cint,","Fragments":["IList\u003cstring\u003e\u003e"]},{"Key":"Dictionary\u003cint, IList\u003cstring\u003e\u003e","Fragments":["{"]},{"Key":" {","Fragments":["1,","2,","3,","\"go\",","\"she\",","\"said\",","\"let's\",","\"meet\",","\"at\",","\"twelve\",","\"o'clock\",","1,","\"a\",","\"at\",","\"let's\",","\"meet\",","\"o'clock\",","\"said\",","\"she\",","\"twelve\","]},{"Key":"{ 1,","Fragments":["new","{","{","{","{","{","{","{","{","{","{","{","{","{","{","{","{","{","{","{","\"I\""]},{"Key":"1, new","Fragments":["List\u003cstring\u003e"]},{"Key":"{ \"A\",","Fragments":["\"\"","\"B\","]},{"Key":"\"A\", \"\"","Fragments":["}"]},{"Key":"\"\" }","Fragments":["},"]},{"Key":"{ 2,","Fragments":["new"]},{"Key":"2, new","Fragments":["List\u003cstring\u003e"]},{"Key":"{ \"D\",","Fragments":["null"]},{"Key":"\"D\", null","Fragments":["}"]},{"Key":"{ 3,","Fragments":["null","5"]},{"Key":"3, null","Fragments":["}"]},{"Key":"var expected","Fragments":["="]},{"Key":"expected =","Fragments":["new"]},{"Key":"1 },","Fragments":["{","{"]},{"Key":"}, {","Fragments":["\"d\",","\"c\",","900,","500,","400,","100,","90,","50,","40,","10,","9,","5,","4,","1,"]},{"Key":"{ \"d\",","Fragments":["2"]},{"Key":"\"d\", 2","Fragments":["}"]},{"Key":"2 }","Fragments":["};"]},{"Key":" Assert.That(ETL.Transform(old),","Fragments":["Is.EqualTo(expected));"]},{"Key":" BTW,","Fragments":["I"]},{"Key":"BTW, I","Fragments":["would"]},{"Key":"be curious","Fragments":["to"]},{"Key":"get your","Fragments":["opinions","trusty"]},{"Key":"your opinions","Fragments":["on"]},{"Key":"my comments","Fragments":["on"]},{"Key":"comments on","Fragments":["the","your","this","the"]},{"Key":"the [Word","Fragments":["Count"]},{"Key":"[Word Count","Fragments":["problem](http://exercism.io/submissions/1aeb671ba3f82bff8ce66bf9)."]},{"Key":"Count problem](http://exercism.io/submissions/1aeb671ba3f82bff8ce66bf9).","Fragments":["I"]},{"Key":"problem](http://exercism.io/submissions/1aeb671ba3f82bff8ce66bf9). I","Fragments":["can't"]},{"Key":"to easily","Fragments":["handle","change"]},{"Key":"easily handle","Fragments":["apostrophes"]},{"Key":"handle apostrophes","Fragments":["used"]},{"Key":"apostrophes used","Fragments":["as","for"]},{"Key":"as quotes.","Fragments":["Any"]},{"Key":"quotes. Any","Fragments":["ideas?"]},{"Key":"Good morning.","Fragments":["Your"]},{"Key":"morning. Your","Fragments":["function's"]},{"Key":"Your function's","Fragments":["logic"]},{"Key":"function's logic","Fragments":["is"]},{"Key":"is good.","Fragments":["The","And"]},{"Key":"good. The","Fragments":["one","only"]},{"Key":"one stylistic","Fragments":["point"]},{"Key":"stylistic point","Fragments":["I"]},{"Key":"point I","Fragments":["could"]},{"Key":"make is","Fragments":["that","to"]},{"Key":"of nested","Fragments":["if","\"if\"","ifs"]},{"Key":"get difficult","Fragments":["to"]},{"Key":"read or","Fragments":["make"]},{"Key":"or make","Fragments":["it","the"]},{"Key":"to close","Fragments":["a"]},{"Key":"close a","Fragments":["statement"]},{"Key":"statement at","Fragments":["the","the"]},{"Key":"wrong place","Fragments":["and"]},{"Key":"place and","Fragments":["mix","see"]},{"Key":"and mix","Fragments":["up"]},{"Key":"mix up","Fragments":["the"]},{"Key":"become a","Fragments":["problem","habit"]},{"Key":"with larger","Fragments":["logic"]},{"Key":"larger logic","Fragments":["flows."]},{"Key":"logic flows.","Fragments":["I'd"]},{"Key":"flows. I'd","Fragments":["recommend"]},{"Key":"recommend just","Fragments":["taking"]},{"Key":"just taking","Fragments":["a"]},{"Key":"taking a","Fragments":["look","look!","very"]},{"Key":"the ways","Fragments":["other"]},{"Key":"ways other","Fragments":["people"]},{"Key":"people have","Fragments":["consolidated","done,"]},{"Key":"have consolidated","Fragments":["those"]},{"Key":"consolidated those","Fragments":["nested"]},{"Key":"those nested","Fragments":["if's."]},{"Key":"nested if's.","Fragments":["There"]},{"Key":"if's. There","Fragments":["is,"]},{"Key":"There is,","Fragments":["of"]},{"Key":"is, of","Fragments":["course,"]},{"Key":"course, a","Fragments":["tradeoff"]},{"Key":"a tradeoff","Fragments":["with"]},{"Key":"tradeoff with","Fragments":["condensing"]},{"Key":"with condensing","Fragments":["the"]},{"Key":"condensing the","Fragments":["logic.","code"]},{"Key":"logic. This","Fragments":["whole"]},{"Key":"This whole","Fragments":["function"]},{"Key":"whole function","Fragments":["can"]},{"Key":"function can","Fragments":["be","be","be","be"]},{"Key":"reduced to","Fragments":["one"]},{"Key":"one logical","Fragments":["statement,"]},{"Key":"logical statement,","Fragments":["but"]},{"Key":"becomes harder","Fragments":["to"]},{"Key":"function. There","Fragments":["is","isn't"]},{"Key":"no right","Fragments":["or"]},{"Key":"right or","Fragments":["wrong","am","wrong."]},{"Key":"or wrong","Fragments":["way,"]},{"Key":"wrong way,","Fragments":["it"]},{"Key":"way, it","Fragments":["is","was","doesn't"]},{"Key":" Okay,","Fragments":["I","so","I","updated"]},{"Key":"Okay, I","Fragments":["think","think"]},{"Key":"think I've","Fragments":["got"]},{"Key":"the majority","Fragments":["of"]},{"Key":"majority of","Fragments":["cases."]},{"Key":"of cases.","Fragments":["If"]},{"Key":"cases. If","Fragments":["I"]},{"Key":"I change","Fragments":["my","line"]},{"Key":"my regular","Fragments":["expression"]},{"Key":"expression from","Fragments":["`[\\w']`","ternary"]},{"Key":"from `[\\w']`","Fragments":["to"]},{"Key":"`[\\w']` to","Fragments":["`\\w+'\\w+|\\w+`,"]},{"Key":"to `\\w+'\\w+|\\w+`,","Fragments":["it"]},{"Key":"`\\w+'\\w+|\\w+`, it","Fragments":["works"]},{"Key":"above situations","Fragments":["except"]},{"Key":"situations except","Fragments":["for"]},{"Key":"except for","Fragments":["plural","number","Normalized_ciphertext_not_exactly_divisible_by_5_spills_into_a_smaller_segment...."]},{"Key":"for plural","Fragments":["possessives"]},{"Key":"plural possessives","Fragments":["like"]},{"Key":"possessives like","Fragments":["\"The"]},{"Key":"like \"The","Fragments":["cats'"]},{"Key":"\"The cats'","Fragments":["toys\","]},{"Key":"cats' toys\",","Fragments":["but"]},{"Key":"toys\", but","Fragments":["I"]},{"Key":"am going","Fragments":["to","to","to"]},{"Key":"okay since","Fragments":["it"]},{"Key":"not going","Fragments":["to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"resubmit my","Fragments":["changes,"]},{"Key":"my changes,","Fragments":["but"]},{"Key":"changes, but","Fragments":["if"]},{"Key":"if anyone","Fragments":["wants","would"]},{"Key":"anyone wants","Fragments":["to"]},{"Key":"test their","Fragments":["code,"]},{"Key":"their code,","Fragments":["the"]},{"Key":"tests I","Fragments":["added","have).","provided"]},{"Key":"var phrase","Fragments":["=","=","="]},{"Key":"new Phrase(\"go","Fragments":["'"]},{"Key":"Phrase(\"go '","Fragments":["Go"]},{"Key":"' Go","Fragments":["''"]},{"Key":"Go ''","Fragments":["GO\");"]},{"Key":"var counts","Fragments":["=","=","="]},{"Key":"counts =","Fragments":["new","new","new"]},{"Key":"{ \"go\",","Fragments":["3"]},{"Key":"\"go\", 3","Fragments":["},"]},{"Key":" Assert.That(phrase.WordCount(),","Fragments":["Is.EqualTo(counts));","Is.EqualTo(counts));","Is.EqualTo(counts));"]},{"Key":"new Phrase(\"She","Fragments":["said,","said,"]},{"Key":"Phrase(\"She said,","Fragments":["'let's","'let's"]},{"Key":"said, 'let's","Fragments":["meet","meet"]},{"Key":"'let's meet","Fragments":["at","at"]},{"Key":"meet at","Fragments":["twelve","twelve"]},{"Key":"at twelve","Fragments":["o'clock'\");","o'clock'\");"]},{"Key":"{ \"she\",","Fragments":["1","1"]},{"Key":"\"she\", 1","Fragments":["},","},"]},{"Key":"{ \"said\",","Fragments":["1","1"]},{"Key":"\"said\", 1","Fragments":["},","},"]},{"Key":"{ \"let's\",","Fragments":["1","1"]},{"Key":"\"let's\", 1","Fragments":["},","},"]},{"Key":"{ \"meet\",","Fragments":["1","1"]},{"Key":"\"meet\", 1","Fragments":["},","},"]},{"Key":"{ \"at\",","Fragments":["1","1"]},{"Key":"\"at\", 1","Fragments":["},","},"]},{"Key":"{ \"twelve\",","Fragments":["1","1"]},{"Key":"\"twelve\", 1","Fragments":["},","},"]},{"Key":"{ \"o'clock\",","Fragments":["1","1"]},{"Key":"\"o'clock\", 1","Fragments":["},","},"]},{"Key":"chose the","Fragments":["method"]},{"Key":"of `?","Fragments":[":`"]},{"Key":"`? :`","Fragments":["for"]},{"Key":":` for","Fragments":["terseness,"]},{"Key":"for terseness,","Fragments":["but"]},{"Key":"terseness, but","Fragments":["I"]},{"Key":"that readability","Fragments":["is","is"]},{"Key":"readability is","Fragments":["kind","important.","concerned","not"]},{"Key":"of painful.","Fragments":["I"]},{"Key":"painful. I","Fragments":["could"]},{"Key":"done `if-then-else`","Fragments":["but"]},{"Key":"`if-then-else` but","Fragments":["then"]},{"Key":"too long.","Fragments":["Ultimately",":P"]},{"Key":"long. Ultimately","Fragments":["I"]},{"Key":"Ultimately I","Fragments":["decided"]},{"Key":"decided terseness","Fragments":["because"]},{"Key":"terseness because","Fragments":["the"]},{"Key":"the layout","Fragments":["of"]},{"Key":"layout of","Fragments":["the"]},{"Key":"the if-then-else","Fragments":["is","structures"]},{"Key":"if-then-else is","Fragments":["kinda"]},{"Key":"is kinda","Fragments":["bulky","assumed.","odd."]},{"Key":"kinda bulky","Fragments":["for"]},{"Key":"bulky for","Fragments":["the"]},{"Key":"the level","Fragments":["of"]},{"Key":"of sophistication","Fragments":["in"]},{"Key":"sophistication in","Fragments":["the"]},{"Key":"would advise","Fragments":["enclosing","you"]},{"Key":"advise enclosing","Fragments":["**year"]},{"Key":"enclosing **year","Fragments":["%"]},{"Key":"**year %","Fragments":["4"]},{"Key":"year %100","Fragments":["!="]},{"Key":"%100 !=","Fragments":["0**"]},{"Key":"!= 0**","Fragments":["in"]},{"Key":"0** in","Fragments":["brackets"]},{"Key":"in brackets","Fragments":["to"]},{"Key":"brackets to","Fragments":["improve"]},{"Key":"You frequently","Fragments":["use"]},{"Key":"frequently use","Fragments":["this"]},{"Key":"more succinctly","Fragments":["and"]},{"Key":"succinctly and","Fragments":["clearly","clearly"]},{"Key":"and clearly","Fragments":["expressed","as"]},{"Key":"clearly expressed","Fragments":["without"]},{"Key":"expressed without","Fragments":["the"]},{"Key":" thank","Fragments":["you!"]},{"Key":"thank you!","Fragments":["In","It"]},{"Key":"you! In","Fragments":["looking"]},{"Key":"In looking","Fragments":["at"]},{"Key":"noticed there","Fragments":["are"]},{"Key":"few ways","Fragments":["to","to"]},{"Key":"to shorten","Fragments":["this"]},{"Key":"shorten this","Fragments":["I","a"]},{"Key":" @merritt,","Fragments":["Actually,"]},{"Key":"@merritt, Actually,","Fragments":["I"]},{"Key":"Actually, I","Fragments":["think","neglected","think"]},{"Key":"the results","Fragments":["for","of","for","used","aren't","string[]","would","is","of","number","for"]},{"Key":"results for","Fragments":["She","this.Grade(grade)","a"]},{"Key":"for She","Fragments":["said,"]},{"Key":"She said,","Fragments":["'Hello","'Hello"]},{"Key":"'Hello world!'","Fragments":["should","goes"]},{"Key":"world!' should","Fragments":["be"]},{"Key":" 'hello","Fragments":["is"]},{"Key":"'hello is","Fragments":["not"]},{"Key":"be counted","Fragments":["as","once!"]},{"Key":"counted as","Fragments":["hello"]},{"Key":"as hello","Fragments":["with"]},{"Key":"hello with","Fragments":["other"]},{"Key":"other hellos","Fragments":[":smile:"]},{"Key":"managed it","Fragments":["with","despite"]},{"Key":"the change","Fragments":["I","I"]},{"Key":"change I","Fragments":["mentioned","mentioned"]},{"Key":"You still","Fragments":["should","have"]},{"Key":"still should","Fragments":["use"]},{"Key":"a `string.IsNullOrWhiteSpace()`","Fragments":["check."]},{"Key":"`string.IsNullOrWhiteSpace()` check.","Fragments":["The"]},{"Key":"don't cover","Fragments":["it"]},{"Key":"cover it","Fragments":["but"]},{"Key":"but C#","Fragments":["allows"]},{"Key":"C# allows","Fragments":["strings"]},{"Key":"allows strings","Fragments":["to"]},{"Key":"be null","Fragments":["and","then"]},{"Key":"and `Hey`","Fragments":["would"]},{"Key":"`Hey` would","Fragments":["throw"]},{"Key":"would throw","Fragments":["an","an","an"]},{"Key":"throw an","Fragments":["exception","exception","exception","error","ArgumentNullException(\"variableName\")","exception","exception","```ArgumentException```","exception","exception?","exception","exception","exception.","exception","exception","exception","error","exception","ArgumentException","exception","error.","exception."]},{"Key":"exception if","Fragments":["it","a","it","there","the","an","```old```","invalid","the","an"]},{"Key":"might consider","Fragments":["moving","throwing","plugging","adding"]},{"Key":"consider moving","Fragments":["your","'if"]},{"Key":"moving your","Fragments":["response"]},{"Key":"response strings","Fragments":["to"]},{"Key":"to constants","Fragments":["or"]},{"Key":"constants or","Fragments":["static","a"]},{"Key":"static readonly's","Fragments":["(which"]},{"Key":"readonly's (which","Fragments":["is"]},{"Key":"(which is","Fragments":["something","really","actually","a-zA-Z0-9_).","what","the","the","fine","fine"]},{"Key":"realize I","Fragments":["should","could","could"]},{"Key":"using `for`","Fragments":["to","so"]},{"Key":"`for` to","Fragments":["go"]},{"Key":"string you","Fragments":["should","can","will","will"]},{"Key":"use `foreach`.","Fragments":["C#"]},{"Key":"`foreach`. C#","Fragments":["will"]},{"Key":"C# will","Fragments":["loop"]},{"Key":"will loop","Fragments":["over","forever."]},{"Key":"loop over","Fragments":["each","the","the"]},{"Key":"over each","Fragments":["character"]},{"Key":"character as","Fragments":["if"]},{"Key":"string were","Fragments":["a"]},{"Key":"array. I'm","Fragments":["not"]},{"Key":"really against","Fragments":["using"]},{"Key":"against using","Fragments":["`for`","strings","one"]},{"Key":"`for` so","Fragments":["if"]},{"Key":"you leave","Fragments":["it","out","out","it"]},{"Key":"leave it","Fragments":["then","out.","this","as"]},{"Key":"it then","Fragments":["you","applies","runs"]},{"Key":"you ought","Fragments":["to"]},{"Key":"ought to","Fragments":["at"]},{"Key":"least declare","Fragments":["a"]},{"Key":"declare a","Fragments":["`char","boolean","variable"]},{"Key":"a `char","Fragments":["c"]},{"Key":"`char c","Fragments":["="]},{"Key":"c =","Fragments":["greeting.ElementAt(i);`","Math.Sqrt(a*a","(int)c_double;","Math.Sqrt(a*a"]},{"Key":"= greeting.ElementAt(i);`","Fragments":["rather"]},{"Key":"greeting.ElementAt(i);` rather","Fragments":["than"]},{"Key":"than making","Fragments":["that","the"]},{"Key":"that call","Fragments":["over","Math.Round"]},{"Key":"call over","Fragments":["and"]},{"Key":"over and","Fragments":["over","over,","over","over","over","over","over"]},{"Key":"and over","Fragments":["again.","again,","it","again.","in","(the"]},{"Key":" Wanted","Fragments":["to"]},{"Key":"Wanted to","Fragments":["try","practice"]},{"Key":"try something","Fragments":["different,"]},{"Key":"something different,","Fragments":["decided"]},{"Key":"different, decided","Fragments":["to"]},{"Key":"a Dictionary","Fragments":["that","rather","that","for","for","for","-","instead","you","for","would","but","for","isn't","is","is","because"]},{"Key":"Dictionary that","Fragments":["contained","has"]},{"Key":"contained a","Fragments":["test"]},{"Key":"a test","Fragments":["method","issue.","that","that","for","(probably","between","case","project","to","that","where","of","did"]},{"Key":"test method","Fragments":["to","returned"]},{"Key":"run against","Fragments":["the"]},{"Key":"method returned","Fragments":["true."]},{"Key":"returned true.","Fragments":["Caveat"]},{"Key":"true. Caveat","Fragments":["is"]},{"Key":"Caveat is","Fragments":["that"]},{"Key":"that tests","Fragments":["have","run"]},{"Key":"be run","Fragments":["in","for"]},{"Key":"run in","Fragments":["their","a"]},{"Key":"their logical","Fragments":["order,"]},{"Key":"logical order,","Fragments":["but"]},{"Key":"order, but","Fragments":["that's","it","it"]},{"Key":"that's fine","Fragments":["as"]},{"Key":"fine as","Fragments":["in","long","it","it","it"]},{"Key":"as in","Fragments":["a","real","this","other","the"]},{"Key":"a real-world","Fragments":["setting","situation,"]},{"Key":"real-world setting","Fragments":["tests"]},{"Key":"setting tests","Fragments":["are"]},{"Key":"usually run","Fragments":["in"]},{"Key":"a defined","Fragments":["order","set"]},{"Key":"defined order","Fragments":["to"]},{"Key":"But can","Fragments":["you"]},{"Key":"double data","Fragments":["structures"]},{"Key":"structures ```_Roster```","Fragments":["and"]},{"Key":"```_Roster``` and","Fragments":["```Roster```?"]},{"Key":" Both","Fragments":["good","of","Add"]},{"Key":"Both good","Fragments":["points,"]},{"Key":"good points,","Fragments":["thanks!"]},{"Key":"Great commenting","Fragments":["in"]},{"Key":"commenting in","Fragments":["the"]},{"Key":"A few","Fragments":["quick","assumptions","things"]},{"Key":"few quick","Fragments":["explanations:"]},{"Key":"1) I","Fragments":["moved","understand"]},{"Key":"text into","Fragments":["constants"]},{"Key":"into constants","Fragments":["just"]},{"Key":"constants just","Fragments":["to"]},{"Key":"It probably","Fragments":["wasn't","won't","wouldn't"]},{"Key":"probably wasn't","Fragments":["needed","any"]},{"Key":"wasn't needed","Fragments":["in"]},{"Key":"this small","Fragments":["of","of"]},{"Key":"small of","Fragments":["a","a"]},{"Key":"in larger","Fragments":["classes,"]},{"Key":"larger classes,","Fragments":["it"]},{"Key":"classes, it","Fragments":["makes"]},{"Key":"makes them","Fragments":["easier"]},{"Key":"them easier","Fragments":["to"]},{"Key":"2) I'm","Fragments":["pretty"]},{"Key":"line 20","Fragments":["could","which"]},{"Key":"20 could","Fragments":["be"]},{"Key":"one regex","Fragments":["expression,"]},{"Key":"regex expression,","Fragments":["but"]},{"Key":"expression, but","Fragments":["I","that","realized"]},{"Key":"regex expertise","Fragments":["to"]},{"Key":"expertise to","Fragments":["make"]},{"Key":"that happen.","Fragments":["I'd"]},{"Key":"happen. I'd","Fragments":["love"]},{"Key":"I'd love","Fragments":["to"]},{"Key":"love to","Fragments":["know"]},{"Key":"else on","Fragments":["here"]},{"Key":"on here","Fragments":["knows","so"]},{"Key":"here knows","Fragments":["how"]},{"Key":"knows how","Fragments":["to","to"]},{"Key":"to cover","Fragments":["both"]},{"Key":"cover both","Fragments":["of"]},{"Key":"those conditions","Fragments":["in","are"]},{"Key":"Clever way","Fragments":["of"]},{"Key":" ````else","Fragments":["if"]},{"Key":"````else if","Fragments":["(text"]},{"Key":"if (text","Fragments":["=="]},{"Key":"(text ==","Fragments":["textUpper"]},{"Key":"== textUpper","Fragments":["\u0026\u0026"]},{"Key":"textUpper \u0026\u0026","Fragments":["textUpper"]},{"Key":"\u0026\u0026 textUpper","Fragments":["!="]},{"Key":"textUpper !=","Fragments":["text.ToLower())````"]},{"Key":"Just in","Fragments":["case"]},{"Key":"aren't aware,","Fragments":["the"]},{"Key":"aware, the","Fragments":["String"]},{"Key":"String class","Fragments":["contains","allows"]},{"Key":"class contains","Fragments":["methods"]},{"Key":"contains methods","Fragments":["that"]},{"Key":"checks that","Fragments":["are","your","I"]},{"Key":"are described","Fragments":["in"]},{"Key":"exercise. You","Fragments":["could"]},{"Key":"users submissions","Fragments":["for","for"]},{"Key":"submissions for","Fragments":["examples.","ideas.","what"]},{"Key":"Hey cool,","Fragments":["I"]},{"Key":"cool, I","Fragments":["didn't"]},{"Key":"know there","Fragments":["was","are","is","can","were","are"]},{"Key":"an EndsWith","Fragments":["method."]},{"Key":"EndsWith method.","Fragments":["I"]},{"Key":"method. I","Fragments":["did","consider","don't","do","have"]},{"Key":"did mine","Fragments":["the","(minus","almost"]},{"Key":"mine the","Fragments":["manual"]},{"Key":"the manual","Fragments":["way."]},{"Key":"manual way.","Fragments":["I"]},{"Key":"you handed","Fragments":["the"]},{"Key":"handed the","Fragments":["2nd"]},{"Key":"2nd condition,","Fragments":["that's"]},{"Key":"condition, that's","Fragments":["cool."]},{"Key":"that's cool.","Fragments":["I"]},{"Key":"@bill I","Fragments":["just"]},{"Key":"just submitted","Fragments":["the"]},{"Key":"submitted the","Fragments":["code","solution"]},{"Key":"for so","Fragments":["that"]},{"Key":"that She","Fragments":["said,"]},{"Key":"world!' goes","Fragments":["to"]},{"Key":" Which","Fragments":["is"]},{"Key":"were after.","Fragments":[":)"]},{"Key":"after. :)","Fragments":["(Passes"]},{"Key":":) (Passes","Fragments":["the"]},{"Key":"(Passes the","Fragments":["other"]},{"Key":"other tests,","Fragments":["too)"]},{"Key":"tests, too)","Fragments":["Instead"]},{"Key":"too) Instead","Fragments":["of"]},{"Key":"opt in","Fragments":["to"]},{"Key":"good letters,","Fragments":["I"]},{"Key":"letters, I","Fragments":["replaced"]},{"Key":"I replaced","Fragments":["the","the"]},{"Key":"replaced the","Fragments":["bad","2","static"]},{"Key":"for minimalist","Fragments":["boolean"]},{"Key":"minimalist boolean","Fragments":["tests"]},{"Key":"boolean tests","Fragments":["where"]},{"Key":"tests where","Fragments":["I","apostrophes"]},{"Key":"can with","Fragments":["the"]},{"Key":"the minimal","Fragments":["processing"]},{"Key":"minimal processing","Fragments":["overhead."]},{"Key":"case, year","Fragments":["%"]},{"Key":"case than","Fragments":["year","lower"]},{"Key":"than year","Fragments":["%"]},{"Key":"== 0,","Fragments":["so"]},{"Key":"0, so","Fragments":["it's"]},{"Key":"it's first","Fragments":["in"]},{"Key":"OR condition,","Fragments":["as"]},{"Key":"condition, as","Fragments":["once"]},{"Key":"as once","Fragments":["that","number"]},{"Key":"once that","Fragments":["evaluates"]},{"Key":"that evaluates","Fragments":["to"]},{"Key":"to true","Fragments":["the","only.","or","is"]},{"Key":"true the","Fragments":["test","points"]},{"Key":"test returns","Fragments":["true"]},{"Key":"isLeapYear should","Fragments":["only"]},{"Key":"one exit","Fragments":["point,"]},{"Key":"exit point,","Fragments":["not"]},{"Key":"point, not","Fragments":["multiple."]},{"Key":"not multiple.","Fragments":["It's"]},{"Key":"multiple. It's","Fragments":["harder"]},{"Key":"It's harder","Fragments":["to"]},{"Key":"keep track","Fragments":["of","of.","of","of","of","of","of","of"]},{"Key":"track of","Fragments":["multiple","the","the","a","usedMultiples","their","its","the","in"]},{"Key":"of multiple","Fragments":["exit","return"]},{"Key":"multiple exit","Fragments":["points"]},{"Key":"points instead","Fragments":["of","of"]},{"Key":"of one.","Fragments":["Consider"]},{"Key":"one. Consider","Fragments":["refactoring"]},{"Key":"Consider refactoring","Fragments":["by"]},{"Key":"refactoring by","Fragments":["only"]},{"Key":"by only","Fragments":["using","a"]},{"Key":"only using","Fragments":["one"]},{"Key":"using one","Fragments":["`return`","over","in"]},{"Key":"one `return`","Fragments":["statement"]},{"Key":"statement instead","Fragments":["of"]},{"Key":"of 4","Fragments":["of","days"]},{"Key":"4 of","Fragments":["them."]},{"Key":"the (year%4","Fragments":["==0)"]},{"Key":"(year%4 ==0)","Fragments":["first"]},{"Key":"==0) first","Fragments":["then"]},{"Key":"then \u0026\u0026","Fragments":["makes"]},{"Key":"\u0026\u0026 makes","Fragments":["you"]},{"Key":"makes you","Fragments":["code","code"]},{"Key":"code just","Fragments":["a"]},{"Key":"bit faster","Fragments":["because"]},{"Key":"faster because","Fragments":["it"]},{"Key":"it stops","Fragments":["evaluating"]},{"Key":"evaluating and","Fragments":["returns","returning"]},{"Key":"returns false","Fragments":["when"]},{"Key":"false when","Fragments":["a","you"]},{"Key":"The operation","Fragments":["x"]},{"Key":"operation x","Fragments":["\u0026\u0026","\u0026"]},{"Key":"x \u0026\u0026","Fragments":["y"]},{"Key":"\u0026\u0026 y","Fragments":["corresponds","\u003c"]},{"Key":"y corresponds","Fragments":["to"]},{"Key":"corresponds to","Fragments":["the"]},{"Key":"the operation","Fragments":["x"]},{"Key":"x \u0026","Fragments":["y"]},{"Key":"\u0026 y","Fragments":["except"]},{"Key":"y except","Fragments":["that"]},{"Key":"if x","Fragments":["is"]},{"Key":"x is","Fragments":["false,","null?"]},{"Key":"false, y","Fragments":["is"]},{"Key":"y is","Fragments":["not"]},{"Key":"not evaluated,","Fragments":["because"]},{"Key":"evaluated, because","Fragments":["the"]},{"Key":"the AND","Fragments":["operation"]},{"Key":"AND operation","Fragments":["is"]},{"Key":"false no","Fragments":["matter"]},{"Key":"matter what","Fragments":["the","bits"]},{"Key":"of y","Fragments":["is."]},{"Key":"y is.","Fragments":["This"]},{"Key":"is. This","Fragments":["is"]},{"Key":"is known","Fragments":["as"]},{"Key":"known as","Fragments":["\"short-circuit\"","logical"]},{"Key":"as \"short-circuit\"","Fragments":["evaluation."]},{"Key":"your Where","Fragments":["clause!"]},{"Key":"the StyleCop","Fragments":["to"]},{"Key":"StyleCop to","Fragments":["advise"]},{"Key":"to advise","Fragments":["you"]},{"Key":"advise you","Fragments":["that","to"]},{"Key":"you unused","Fragments":["usings."]},{"Key":"feedback Patel!","Fragments":["As"]},{"Key":"Patel! As","Fragments":["I"]},{"Key":"am new","Fragments":["to"]},{"Key":"to programming,","Fragments":["I"]},{"Key":"programming, I","Fragments":["was"]},{"Key":"the String.Any()","Fragments":["method"]},{"Key":"String.Any() method","Fragments":["until"]},{"Key":"method until","Fragments":["I"]},{"Key":"saw other","Fragments":["people's"]},{"Key":" Cool","Fragments":[":-).","to"]},{"Key":"Cool :-).","Fragments":["So"]},{"Key":":-). So","Fragments":["we"]},{"Key":"So we","Fragments":["can"]},{"Key":"can write","Fragments":["`1E9`?","the","code","things"]},{"Key":"write `1E9`?","Fragments":["Didn't"]},{"Key":"`1E9`? Didn't","Fragments":["know"]},{"Key":" Dangit,","Fragments":["you're"]},{"Key":"Dangit, you're","Fragments":["right."]},{"Key":"you're right.","Fragments":["I","Onwards"]},{"Key":"wrong executable","Fragments":["loaded"]},{"Key":"executable loaded","Fragments":["in"]},{"Key":"loaded in","Fragments":["NUnit."]},{"Key":"in NUnit.","Fragments":["I"]},{"Key":"NUnit. I","Fragments":["don't","also","eventually","could"]},{"Key":"this isn't","Fragments":["working,","the","passing","the","a"]},{"Key":"isn't working,","Fragments":["I"]},{"Key":"working, I","Fragments":["thought","started","looked"]},{"Key":"it would.","Fragments":["I'll","Actually,"]},{"Key":"would. I'll","Fragments":["have"]},{"Key":"to dig","Fragments":["into"]},{"Key":"dig into","Fragments":["this"]},{"Key":"into this","Fragments":["later.","it"]},{"Key":"this later.","Fragments":["Sorry."]},{"Key":"later. Sorry.","Fragments":[":-("]},{"Key":" Match","Fragments":["match","match"]},{"Key":"Match match","Fragments":["=","="]},{"Key":"match =","Fragments":["Regex.Match(text,","Regex.Match(text,"]},{"Key":"= Regex.Match(text,","Fragments":["@\"([\\w']+)\");","@\"(\\w+)\");"]},{"Key":"is massively","Fragments":["overkill."]},{"Key":"massively overkill.","Fragments":["However,"]},{"Key":"overkill. However,","Fragments":["there"]},{"Key":"However, there","Fragments":["are"]},{"Key":"are two","Fragments":["motivations","small"]},{"Key":"two motivations","Fragments":["for"]},{"Key":"motivations for","Fragments":["me:"]},{"Key":"IsLeap() method","Fragments":["in"]},{"Key":"readable way,","Fragments":["as"]},{"Key":"way, as","Fragments":["close"]},{"Key":"as close","Fragments":["to"]},{"Key":"close to","Fragments":["the","using","what","nill."]},{"Key":"problem description","Fragments":["as","may","for"]},{"Key":"description as","Fragments":["possible."]},{"Key":"and some","Fragments":["of","people","other"]},{"Key":"of its","Fragments":["rules","neighbors,","issues"]},{"Key":"its rules","Fragments":["of"]},{"Key":"don't care","Fragments":["for","about"]},{"Key":"care for","Fragments":["the","the"]},{"Key":"way the","Fragments":["tests","entire","tests"]},{"Key":"tests forced","Fragments":["me"]},{"Key":"forced me","Fragments":["to"]},{"Key":"to model","Fragments":["this"]},{"Key":"model this","Fragments":["problem."]},{"Key":"that way,","Fragments":["especially","it"]},{"Key":"way, especially","Fragments":["given"]},{"Key":"especially given","Fragments":["the"]},{"Key":"credit. I","Fragments":["would"]},{"Key":"have exposed","Fragments":["the","`Roster`"]},{"Key":"exposed the","Fragments":["Roster"]},{"Key":"Roster as","Fragments":["some"]},{"Key":"as some","Fragments":["kind"]},{"Key":"some kind","Fragments":["of","of","of","of","to"]},{"Key":"of indexed","Fragments":["type"]},{"Key":"indexed type","Fragments":["which"]},{"Key":"type which","Fragments":["required"]},{"Key":"which required","Fragments":["me","converting"]},{"Key":"required me","Fragments":["to"]},{"Key":"to either","Fragments":["create","a"]},{"Key":"either create","Fragments":["the"]},{"Key":"the odd","Fragments":["list-like"]},{"Key":"odd list-like","Fragments":["`GradeRoster`"]},{"Key":"list-like `GradeRoster`","Fragments":["class"]},{"Key":"`GradeRoster` class","Fragments":["or,"]},{"Key":"class or,","Fragments":["alternately,"]},{"Key":"or, alternately,","Fragments":["implement"]},{"Key":"alternately, implement","Fragments":["a"]},{"Key":"implement a","Fragments":["list","loop?","different"]},{"Key":"list class","Fragments":["but"]},{"Key":"but override","Fragments":["all"]},{"Key":"override all","Fragments":["the"]},{"Key":"might manipulate","Fragments":["the"]},{"Key":"manipulate the","Fragments":["internal","hidden","roster"]},{"Key":"the internal","Fragments":["list.","mechanism","state"]},{"Key":"I'm also","Fragments":["not","not"]},{"Key":"like `School.Add`","Fragments":["that"]},{"Key":"`School.Add` that","Fragments":["just"]},{"Key":"just wraps","Fragments":["a"]},{"Key":"single call","Fragments":["to","would"]},{"Key":"to Roster.","Fragments":["If"]},{"Key":"Roster. If","Fragments":["that"]},{"Key":"is all","Fragments":["it","that","we","directly","a's","the","digits.","upper","into","at"]},{"Key":"all it","Fragments":["does"]},{"Key":"does and","Fragments":["I"]},{"Key":"exposed `Roster`","Fragments":["then"]},{"Key":"`Roster` then","Fragments":["just"]},{"Key":"then just","Fragments":["call","one","return","throw"]},{"Key":"just call","Fragments":["`School.Roster.Add`.","CheckNum","Add","statement.IndexOf('\\n'),","`EndsWith(\"?\")`"]},{"Key":"call `School.Roster.Add`.","Fragments":["Of"]},{"Key":"`School.Roster.Add`. Of","Fragments":["course,"]},{"Key":"course, if","Fragments":["I","it","some"]},{"Key":"thought `School.Add`","Fragments":["would"]},{"Key":"`School.Add` would","Fragments":["do"]},{"Key":"complex (validation,","Fragments":["add"]},{"Key":"(validation, add","Fragments":["other"]},{"Key":"add other","Fragments":["data,","tests"]},{"Key":"other data,","Fragments":["etc)"]},{"Key":"data, etc)","Fragments":["I"]},{"Key":"etc) I","Fragments":["would"]},{"Key":"would create","Fragments":["an","my"]},{"Key":"an Add","Fragments":["method"]},{"Key":"Add method","Fragments":["on"]},{"Key":" Anyone","Fragments":["have","have"]},{"Key":"Anyone have","Fragments":["any","a"]},{"Key":"on where","Fragments":["this"]},{"Key":"where this","Fragments":["can"]},{"Key":"be improved?","Fragments":["In"]},{"Key":"improved? In","Fragments":["particular,"]},{"Key":"In particular,","Fragments":["I","can","I'm"]},{"Key":"particular, I","Fragments":["didn't"]},{"Key":"how OrderBy","Fragments":["LINQ"]},{"Key":"OrderBy LINQ","Fragments":["method"]},{"Key":"LINQ method","Fragments":["sorts"]},{"Key":"method sorts","Fragments":["char-arrays"]},{"Key":"sorts char-arrays","Fragments":["as"]},{"Key":"char-arrays as","Fragments":["{A,"]},{"Key":"as {A,","Fragments":["B,"]},{"Key":"{A, B,","Fragments":["C,"]},{"Key":"B, C,","Fragments":["a,"]},{"Key":"C, a,","Fragments":["b,"]},{"Key":"a, b,","Fragments":["c"]},{"Key":"b, c","Fragments":["}"]},{"Key":"c }","Fragments":["which"]},{"Key":"} which","Fragments":["required"]},{"Key":"required converting","Fragments":["the"]},{"Key":"original word","Fragments":["to","and","for"]},{"Key":"to lower-case","Fragments":["so"]},{"Key":"lower-case so","Fragments":["it"]},{"Key":"be sorted","Fragments":["properly.","into"]},{"Key":"sorted properly.","Fragments":["Would"]},{"Key":"properly. Would","Fragments":["much"]},{"Key":"Would much","Fragments":["rather"]},{"Key":"much rather","Fragments":["have"]},{"Key":"rather have","Fragments":["a"]},{"Key":"a feature","Fragments":["in"]},{"Key":"feature in","Fragments":[".NET"]},{"Key":".NET that","Fragments":["would"]},{"Key":"would ignore","Fragments":["case"]},{"Key":"ignore case","Fragments":["for"]},{"Key":"for char","Fragments":["values."]},{"Key":"job remembering","Fragments":["to"]},{"Key":"remembering to","Fragments":["make","use"]},{"Key":"make set","Fragments":["private"]},{"Key":"set private","Fragments":["on"]},{"Key":"private on","Fragments":["the","the"]},{"Key":"Roster property.","Fragments":["I"]},{"Key":"property. I","Fragments":["forgot"]},{"Key":"performant than","Fragments":["storing"]},{"Key":"storing \u0026","Fragments":["looking"]},{"Key":"\u0026 looking","Fragments":["up"]},{"Key":"up duplicates","Fragments":["in"]},{"Key":"duplicates in","Fragments":["a"]},{"Key":"This works,","Fragments":["great","but"]},{"Key":"the the","Fragments":["Regex","double","value"]},{"Key":"Regex \\w","Fragments":["character"]},{"Key":"\\w character","Fragments":["class"]},{"Key":"class handles","Fragments":["the"]},{"Key":"handles the","Fragments":["apostrophe","order"]},{"Key":"apostrophe already,","Fragments":["so"]},{"Key":"already, so","Fragments":["you","the"]},{"Key":"simplify your","Fragments":["Regex","regular","code","logic","CheckedMinutes()","Compare"]},{"Key":"your Regex","Fragments":["to"]},{"Key":"feel stupid","Fragments":[";-)."]},{"Key":"stupid ;-).","Fragments":["I"]},{"Key":";-). I","Fragments":["spent"]},{"Key":"I spent","Fragments":["a"]},{"Key":"spent a","Fragments":["long","lot"]},{"Key":"long time","Fragments":["with","to"]},{"Key":"with ugly","Fragments":["linq"]},{"Key":"ugly linq","Fragments":["expressions"]},{"Key":"linq expressions","Fragments":["when"]},{"Key":"expressions when","Fragments":["all"]},{"Key":"when all","Fragments":["there","you"]},{"Key":"all there","Fragments":["is"]},{"Key":"to it,","Fragments":["is","you","use","and","therefore"]},{"Key":"it, is","Fragments":["to"]},{"Key":"count distinct","Fragments":["legs."]},{"Key":"distinct legs.","Fragments":["So"]},{"Key":"legs. So","Fragments":["simple."]},{"Key":"to disagree","Fragments":["with","with"]},{"Key":"and say","Fragments":["that","I"]},{"Key":"absolutely nothing","Fragments":["wrong"]},{"Key":"nothing wrong","Fragments":["with","with","with","with"]},{"Key":"var compiles","Fragments":["to"]},{"Key":"a strongly","Fragments":["type","typed"]},{"Key":"strongly type","Fragments":["variable"]},{"Key":"type variable","Fragments":["at"]},{"Key":"variable at","Fragments":["compile","the"]},{"Key":"at compile","Fragments":["time.","time."]},{"Key":"compile time.","Fragments":["It"]},{"Key":"time. It","Fragments":["won't","would"]},{"Key":"It won't","Fragments":["make"]},{"Key":"program slower","Fragments":["to"]},{"Key":"slower to","Fragments":["run,","compile."]},{"Key":"to run,","Fragments":["just"]},{"Key":"run, just","Fragments":["a"]},{"Key":"a tiny","Fragments":["bit","bit"]},{"Key":"tiny bit","Fragments":["slower","easier."]},{"Key":"bit slower","Fragments":["to"]},{"Key":"would however","Fragments":["suggest"]},{"Key":"however suggest","Fragments":["sticking"]},{"Key":"suggest sticking","Fragments":["to"]},{"Key":"one style","Fragments":["as"]},{"Key":"style as","Fragments":["you"]},{"Key":"use int","Fragments":["for"]},{"Key":"int for","Fragments":["length"]},{"Key":"for length","Fragments":["and"]},{"Key":"length and","Fragments":["var"]},{"Key":"and var","Fragments":["for"]},{"Key":"var for","Fragments":["count","a"]},{"Key":"for count","Fragments":["and"]},{"Key":" @veda","Fragments":["I"]},{"Key":"@veda I","Fragments":["don't"]},{"Key":"where my","Fragments":["brain"]},{"Key":"brain was,","Fragments":["for"]},{"Key":"was, for","Fragments":["some"]},{"Key":"thought he","Fragments":["was"]},{"Key":"he was","Fragments":["stashing"]},{"Key":"was stashing","Fragments":["the"]},{"Key":"stashing the","Fragments":["value"]},{"Key":"value stored","Fragments":["in","in"]},{"Key":"stored in","Fragments":["a","the","some","the","them","a","a"]},{"Key":"a dictionary.","Fragments":["Looking","The","Good"]},{"Key":"dictionary. Looking","Fragments":["up"]},{"Key":"dictionary can","Fragments":["be","be"]},{"Key":"be costly","Fragments":["in"]},{"Key":"costly in","Fragments":["a"]},{"Key":"a loop,","Fragments":["but"]},{"Key":"loop, but","Fragments":["here","you","I","it","I"]},{"Key":"here you","Fragments":["are"]},{"Key":"are right.","Fragments":["It"]},{"Key":"right. It","Fragments":["is"]},{"Key":"For this","Fragments":["exercise","iteration,","iteration,","and"]},{"Key":"exercise I","Fragments":["found","decided"]},{"Key":"found there","Fragments":["to"]},{"Key":"of directions","Fragments":["to"]},{"Key":"directions to","Fragments":["take."]},{"Key":"to take.","Fragments":["A"]},{"Key":"take. A","Fragments":["few"]},{"Key":"few assumptions","Fragments":["I"]},{"Key":"assumptions I","Fragments":["made:"]},{"Key":"The comment/response","Fragments":["would"]},{"Key":"comment/response would","Fragments":["not"]},{"Key":"static, meaning","Fragments":["the"]},{"Key":"the conversation","Fragments":["could","example"]},{"Key":"conversation could","Fragments":["expand"]},{"Key":"could expand","Fragments":["in","the"]},{"Key":"expand in","Fragments":["the"]},{"Key":"question itself","Fragments":["is"]},{"Key":"is unique","Fragments":["by"]},{"Key":"unique by","Fragments":["the"]},{"Key":"the attributes","Fragments":["(case"]},{"Key":"attributes (case","Fragments":["in"]},{"Key":"(case in","Fragments":["this"]},{"Key":"this instance).","Fragments":["The"]},{"Key":"instance). The","Fragments":["same"]},{"Key":"The same","Fragments":["question","as","is","thing","thing"]},{"Key":"same question","Fragments":["with"]},{"Key":"question with","Fragments":["different"]},{"Key":"with different","Fragments":["emotion","languages"]},{"Key":"different emotion","Fragments":["\"could\"","could"]},{"Key":"emotion \"could\"","Fragments":["produce"]},{"Key":"\"could\" produce","Fragments":["a"]},{"Key":"produce a","Fragments":["different","specific","correct"]},{"Key":"different response","Fragments":["and"]},{"Key":"response and","Fragments":["different"]},{"Key":"and different","Fragments":["emotion","solution."]},{"Key":"emotion could","Fragments":["be"]},{"Key":"be case,","Fragments":["exclamation,"]},{"Key":"case, exclamation,","Fragments":["etc."]},{"Key":"first idea","Fragments":["was"]},{"Key":"idea was","Fragments":["to"]},{"Key":"to manage","Fragments":["the","Nuget","the"]},{"Key":"manage the","Fragments":["responses","over/under","tests"]},{"Key":"responses with","Fragments":["a"]},{"Key":"statement. Unlike","Fragments":["some,"]},{"Key":"Unlike some,","Fragments":["I"]},{"Key":"some, I","Fragments":["do"]},{"Key":"do no","Fragments":["oppose"]},{"Key":"no oppose","Fragments":["this,"]},{"Key":"oppose this,","Fragments":["but"]},{"Key":"the nature","Fragments":["of","of"]},{"Key":"a conversation","Fragments":["it's"]},{"Key":"conversation it's","Fragments":["hard"]},{"Key":"it's hard","Fragments":["not","to"]},{"Key":"this expanding.","Fragments":["Therefore"]},{"Key":"expanding. Therefore","Fragments":["I"]},{"Key":"Therefore I","Fragments":["added","would"]},{"Key":"added one","Fragments":["layer","more"]},{"Key":"one layer","Fragments":["of"]},{"Key":"layer of","Fragments":["abstraction"]},{"Key":"of abstraction","Fragments":["by","to","that"]},{"Key":"abstraction by","Fragments":["hiding"]},{"Key":"by hiding","Fragments":["the"]},{"Key":"hiding the","Fragments":["implementation"]},{"Key":"implementation behind","Fragments":["a"]},{"Key":"behind a","Fragments":["repository"]},{"Key":"a repository","Fragments":["interface."]},{"Key":"repository interface.","Fragments":["This"]},{"Key":"way when","Fragments":["making"]},{"Key":"making updates","Fragments":["the"]},{"Key":"updates the","Fragments":["repository"]},{"Key":"the repository","Fragments":["would","was","wouldn't","uses"]},{"Key":"repository would","Fragments":["be"]},{"Key":"updated by","Fragments":["adding"]},{"Key":"new record","Fragments":["or"]},{"Key":"record or","Fragments":["in"]},{"Key":"or in","Fragments":["the","the"]},{"Key":"future, if","Fragments":["the","I"]},{"Key":"repository was","Fragments":["loading"]},{"Key":"was loading","Fragments":["from"]},{"Key":"loading from","Fragments":["an"]},{"Key":"external data","Fragments":["store,","store."]},{"Key":"data store,","Fragments":["the"]},{"Key":"store, the","Fragments":["repository"]},{"Key":"repository wouldn't","Fragments":["even"]},{"Key":"even need","Fragments":["touched.","the"]},{"Key":"My implementation","Fragments":["of"]},{"Key":"repository uses","Fragments":["a"]},{"Key":"uses a","Fragments":["dictionary","lot","```StringBuilder```","lookup","list","StringBuilder"]},{"Key":"for key/value","Fragments":["lookup."]},{"Key":"key/value lookup.","Fragments":["I"]},{"Key":"lookup. I","Fragments":["could","also"]},{"Key":"well used","Fragments":["a"]},{"Key":"switch instead","Fragments":["but"]},{"Key":"instead but","Fragments":["opted"]},{"Key":"but opted","Fragments":["for"]},{"Key":"opted for","Fragments":["this","using"]},{"Key":"this only","Fragments":["to"]},{"Key":"only to","Fragments":["get","optimize","immediately","a","return","convert"]},{"Key":"get one","Fragments":["level","that"]},{"Key":"one level","Fragments":["closer","of"]},{"Key":"level closer","Fragments":["to"]},{"Key":"use some","Fragments":["type","normal","kind","LINQ"]},{"Key":"some type","Fragments":["of"]},{"Key":"of external","Fragments":["data"]},{"Key":"The thing","Fragments":["I","I"]},{"Key":"I kept","Fragments":["asking","having","waiting","running"]},{"Key":"kept asking","Fragments":["myself"]},{"Key":"asking myself","Fragments":["is"]},{"Key":"myself is","Fragments":["what"]},{"Key":"this grew","Fragments":["to"]},{"Key":"grew to","Fragments":["a"]},{"Key":"huge size.","Fragments":["Then"]},{"Key":"size. Then","Fragments":["we"]},{"Key":"we get","Fragments":["into","all","a"]},{"Key":"get into","Fragments":["issues","your","the"]},{"Key":"into issues","Fragments":["like"]},{"Key":"issues like","Fragments":["performance"]},{"Key":"like performance","Fragments":["and"]},{"Key":"performance and","Fragments":["optimizations.","either"]},{"Key":"and optimizations.","Fragments":["A"]},{"Key":"optimizations. A","Fragments":["dictionary"]},{"Key":"A dictionary","Fragments":["might","makes"]},{"Key":"dictionary might","Fragments":["not"]},{"Key":"be best.","Fragments":["Given"]},{"Key":"best. Given","Fragments":["there"]},{"Key":"Given there","Fragments":["is"]},{"Key":"a many","Fragments":["to"]},{"Key":"many to","Fragments":["1"]},{"Key":"to 1","Fragments":["relationship","without","with"]},{"Key":"1 relationship","Fragments":["between"]},{"Key":"relationship between","Fragments":["comment/response,"]},{"Key":"between comment/response,","Fragments":["one"]},{"Key":"comment/response, one","Fragments":["might"]},{"Key":"one might","Fragments":["want"]},{"Key":"a lookup","Fragments":["table","list,","of","could","array.","table","as","alphabet?","alphabet","array."]},{"Key":"lookup table","Fragments":["for","would"]},{"Key":"table for","Fragments":["the"]},{"Key":"response values","Fragments":["as"]},{"Key":"values as","Fragments":["well,"]},{"Key":"well, only","Fragments":["to"]},{"Key":"This excersize","Fragments":["is"]},{"Key":"excersize is","Fragments":["a"]},{"Key":"how a","Fragments":["programmer","variable"]},{"Key":"programmer can","Fragments":["get"]},{"Key":"get caught","Fragments":["into"]},{"Key":"caught into","Fragments":["the"]},{"Key":"the over","Fragments":["engineering/optimization"]},{"Key":"over engineering/optimization","Fragments":["traps"]},{"Key":"engineering/optimization traps","Fragments":[":)"]},{"Key":"you sure?","Fragments":["The"]},{"Key":"sure? The","Fragments":["last"]},{"Key":"last test","Fragments":["won't","didn't","case...","for","threw","shouldn't"]},{"Key":"test won't","Fragments":["pass"]},{"Key":"way and","Fragments":["I'm","ignored","avoid","I"]},{"Key":"sure that's","Fragments":["because"]},{"Key":"that's because","Fragments":["\"don't\""]},{"Key":"because \"don't\"","Fragments":["is"]},{"Key":"\"don't\" is","Fragments":["matched"]},{"Key":"is matched","Fragments":["as"]},{"Key":"matched as","Fragments":["two"]},{"Key":" _Roster","Fragments":["is"]},{"Key":"_Roster is","Fragments":["the"]},{"Key":"the internal,","Fragments":["private"]},{"Key":"internal, private","Fragments":["list"]},{"Key":"private list","Fragments":["I"]},{"Key":"list I","Fragments":["use","could","won't"]},{"Key":"use to","Fragments":["store","find"]},{"Key":"Roster is","Fragments":["a","writable","0","still","still"]},{"Key":"a inner","Fragments":["class"]},{"Key":"class I'm","Fragments":["using"]},{"Key":"to control","Fragments":["access"]},{"Key":"control access","Fragments":["to"]},{"Key":"the _Roster","Fragments":["list."]},{"Key":"_Roster list.","Fragments":["All"]},{"Key":"list. All","Fragments":["access"]},{"Key":"All access","Fragments":["is"]},{"Key":"access is","Fragments":["controlled"]},{"Key":"is controlled","Fragments":["and","by"]},{"Key":"controlled and","Fragments":["and"]},{"Key":"and and","Fragments":["data","the"]},{"Key":"and data","Fragments":["returned"]},{"Key":"data returned","Fragments":["is"]},{"Key":"returned is","Fragments":["in","undefined."]},{"Key":"database needs","Fragments":["to"]},{"Key":"be updated,","Fragments":["I"]},{"Key":"updated, I","Fragments":["can"]},{"Key":"private _Roster","Fragments":["list"]},{"Key":"_Roster list","Fragments":["and"]},{"Key":"any updates","Fragments":["necessary,"]},{"Key":"updates necessary,","Fragments":["but"]},{"Key":"end user","Fragments":["has","didn't"]},{"Key":"user has","Fragments":["to","a"]},{"Key":"class Roster,","Fragments":["which"]},{"Key":"Roster, which","Fragments":["limits"]},{"Key":"which limits","Fragments":["their"]},{"Key":"limits their","Fragments":["access"]},{"Key":"their access","Fragments":["to"]},{"Key":"Looking over","Fragments":["other"]},{"Key":"over other","Fragments":["people"]},{"Key":"people submissions,","Fragments":["I"]},{"Key":"been easier","Fragments":["to"]},{"Key":"implement with","Fragments":["ReadOnlyCollection"]},{"Key":"with ReadOnlyCollection","Fragments":["or"]},{"Key":"ReadOnlyCollection or","Fragments":["System.Collections.Immutable."]},{"Key":"or System.Collections.Immutable.","Fragments":["But"]},{"Key":"System.Collections.Immutable. But","Fragments":["I"]},{"Key":"will perform","Fragments":["better"]},{"Key":"perform better","Fragments":["at","by","IMHO"]},{"Key":"better at","Fragments":["the","inlining"]},{"Key":"The dictionary","Fragments":["creation","sounds","returned"]},{"Key":"dictionary creation","Fragments":["is"]},{"Key":"creation is","Fragments":["really"]},{"Key":"really clever,","Fragments":["hadn't"]},{"Key":"clever, hadn't","Fragments":["thought"]},{"Key":"that! The","Fragments":["last"]},{"Key":"test didn't","Fragments":["pass","specify,","know"]},{"Key":"didn't pass","Fragments":["when"]},{"Key":"tried it","Fragments":["though,","out.","and"]},{"Key":"it though,","Fragments":["because","that"]},{"Key":"though, because","Fragments":["the"]},{"Key":"apostrophe in","Fragments":["\"bla"]},{"Key":"in \"bla","Fragments":["'"]},{"Key":"\"bla '","Fragments":["bla\""]},{"Key":"' bla\"","Fragments":["is"]},{"Key":"bla\" is","Fragments":["considered"]},{"Key":"considered a","Fragments":["word.","word","leap"]},{"Key":"a word.","Fragments":["You","Also,"]},{"Key":"word. You","Fragments":["could","could","could"]},{"Key":"could maybe","Fragments":["add","be"]},{"Key":" .Where(x","Fragments":["=\u003e"]},{"Key":".Where(x =\u003e","Fragments":["x"]},{"Key":"x !=","Fragments":["\"'\")","y`"]},{"Key":"that's better,","Fragments":["an"]},{"Key":"better, an","Fragments":["apostrophe"]},{"Key":"an apostrophe","Fragments":["will"]},{"Key":"apostrophe will","Fragments":["be"]},{"Key":"word though,","Fragments":["I"]},{"Key":"I commented","Fragments":["that"]},{"Key":"commented that","Fragments":["on"]},{"Key":"that on","Fragments":["your","my","my"]},{"Key":"solution as","Fragments":["well.","more","a"]},{"Key":"well. Thanks,","Fragments":["that"]},{"Key":"Thanks, that","Fragments":["makes"]},{"Key":"regex so","Fragments":["much"]},{"Key":"pass using","Fragments":["Linq"]},{"Key":"Linq was","Fragments":["perfectly"]},{"Key":"was perfectly","Fragments":["acceptable,"]},{"Key":"perfectly acceptable,","Fragments":["but"]},{"Key":"acceptable, but","Fragments":["I"]},{"Key":"thought a","Fragments":["try","SQL"]},{"Key":"a try","Fragments":["at","block,"]},{"Key":"try at","Fragments":["a"]},{"Key":"expression would","Fragments":["be","resolve","look"]},{"Key":"be fun","Fragments":["and"]},{"Key":"fun and","Fragments":["educational"]},{"Key":"and educational","Fragments":[":smile:"]},{"Key":"see wrong","Fragments":["with"]},{"Key":"null string","Fragments":["throws","as"]},{"Key":"string throws","Fragments":["an"]},{"Key":"an ArgumentNullException.","Fragments":["I"]},{"Key":"ArgumentNullException. I","Fragments":["should"]},{"Key":"probably switch","Fragments":["it"]},{"Key":"switch it","Fragments":["to"]},{"Key":"default 0","Fragments":["number."]},{"Key":"assume you","Fragments":["are"]},{"Key":"trying for","Fragments":["the"]},{"Key":"extra credit","Fragments":["by","part."]},{"Key":"credit by","Fragments":["returning"]},{"Key":"returning `new","Fragments":["Dictionary`"]},{"Key":"`new Dictionary`","Fragments":["from"]},{"Key":"Dictionary` from","Fragments":["the"]},{"Key":"the `Roster`","Fragments":["property."]},{"Key":"`Roster` property.","Fragments":["The"]},{"Key":"property. The","Fragments":["new"]},{"Key":"The new","Fragments":["dictionary","requirement","version"]},{"Key":"new dictionary","Fragments":["contains"]},{"Key":"dictionary contains","Fragments":["the"]},{"Key":"same lists","Fragments":["as"]},{"Key":"lists as","Fragments":["your"]},{"Key":"your original","Fragments":["dictionary"]},{"Key":"original dictionary","Fragments":["so"]},{"Key":"dictionary so","Fragments":["you"]},{"Key":"still modify","Fragments":["them"]},{"Key":" school.Add(\"Blair\",","Fragments":["2);"]},{"Key":" school.Add(\"James\",","Fragments":["2);"]},{"Key":" school.Add(\"Paul\",","Fragments":["2);"]},{"Key":" school.Roster[2][1]","Fragments":["="]},{"Key":"school.Roster[2][1] =","Fragments":["\"Bob\";"]},{"Key":" Changes","Fragments":["James","in"]},{"Key":"Changes James","Fragments":["to"]},{"Key":"James to","Fragments":["Bob"]},{"Key":"to Bob","Fragments":["in"]},{"Key":"Bob in","Fragments":["the"]},{"Key":"private `_roster`","Fragments":["dictionary."]},{"Key":"`_roster` dictionary.","Fragments":["Either"]},{"Key":"dictionary. Either","Fragments":["you"]},{"Key":"Either you","Fragments":["have"]},{"Key":"to clone","Fragments":["the"]},{"Key":"clone the","Fragments":["lists"]},{"Key":"lists or","Fragments":["return"]},{"Key":"or return","Fragments":["a"]},{"Key":"different class","Fragments":["that"]},{"Key":"allow modification","Fragments":["of"]},{"Key":"modification of","Fragments":["the","dictionary"]},{"Key":" @kirsten","Fragments":["To"]},{"Key":"@kirsten To","Fragments":["me,"]},{"Key":"me, using","Fragments":["\"var\""]},{"Key":"when not","Fragments":["associated","necessary"]},{"Key":"not associated","Fragments":["with"]},{"Key":"associated with","Fragments":["an"]},{"Key":"anonymous class","Fragments":["is","to"]},{"Key":"just being","Fragments":["lazy."]},{"Key":"lazy. Before","Fragments":["\"var\""]},{"Key":"Before \"var\"","Fragments":["was"]},{"Key":"\"var\" was","Fragments":["even"]},{"Key":"was even","Fragments":["an"]},{"Key":"even an","Fragments":["option,","array"]},{"Key":"an option,","Fragments":["everyone"]},{"Key":"option, everyone","Fragments":["defined"]},{"Key":"everyone defined","Fragments":["what"]},{"Key":"defined what","Fragments":["the"]},{"Key":"variables were","Fragments":["because"]},{"Key":"were because","Fragments":["they"]},{"Key":"because they","Fragments":["had","can","are","are","are","make"]},{"Key":"they had","Fragments":["to.","just","not"]},{"Key":"had to.","Fragments":["By"]},{"Key":"to. By","Fragments":["using"]},{"Key":"By using","Fragments":["var","IDictionary\u003c\u003e","a","an","`yield"]},{"Key":"var all","Fragments":["over"]},{"Key":"the place,","Fragments":["it"]},{"Key":"place, it","Fragments":["gets"]},{"Key":"what types","Fragments":["things"]},{"Key":"types things","Fragments":["are."]},{"Key":"things are.","Fragments":["Obviously,"]},{"Key":"are. Obviously,","Fragments":["var"]},{"Key":"Obviously, var","Fragments":["i"]},{"Key":"var i","Fragments":["="]},{"Key":"pretty obvious,","Fragments":["but"]},{"Key":"obvious, but","Fragments":["var"]},{"Key":"but var","Fragments":["x"]},{"Key":"var x","Fragments":["="]},{"Key":"= GetSomething()","Fragments":["is"]},{"Key":"GetSomething() is","Fragments":["not."]},{"Key":"is not.","Fragments":["There"]},{"Key":"not. There","Fragments":["tend"]},{"Key":"There tend","Fragments":["to"]},{"Key":"of gray","Fragments":["areas"]},{"Key":"gray areas","Fragments":["with"]},{"Key":"areas with","Fragments":["\"var\","]},{"Key":"with \"var\",","Fragments":["so"]},{"Key":"\"var\", so","Fragments":["people"]},{"Key":"people usually","Fragments":["pick"]},{"Key":"usually pick","Fragments":["a"]},{"Key":"side (try","Fragments":["to"]},{"Key":"(try to","Fragments":["avoid,"]},{"Key":"to avoid,","Fragments":["just"]},{"Key":"avoid, just","Fragments":["make"]},{"Key":"make everything","Fragments":["var)."]},{"Key":"everything var).","Fragments":["Both"]},{"Key":"var). Both","Fragments":["are"]},{"Key":"Both are","Fragments":["wrong"]},{"Key":"are wrong","Fragments":["in","(based"]},{"Key":"wrong in","Fragments":["some"]},{"Key":"some sense.","Fragments":[":)"]},{"Key":"used nested","Fragments":["if"]},{"Key":"determine if","Fragments":["a","it's","one","it"]},{"Key":"year, the","Fragments":["isDivisibleBy"]},{"Key":"the isDivisibleBy","Fragments":["function"]},{"Key":"isDivisibleBy function","Fragments":["increased"]},{"Key":"function increased","Fragments":["readability"]},{"Key":"lot (in","Fragments":["my"]},{"Key":"opinion) at","Fragments":["the"]},{"Key":"the possible","Fragments":["cost","nullrefs","4yr","anagram"]},{"Key":"possible cost","Fragments":["of"]},{"Key":"some performance","Fragments":["(though"]},{"Key":"performance (though","Fragments":["the"]},{"Key":"(though the","Fragments":["function"]},{"Key":"calls may","Fragments":["get"]},{"Key":"may get","Fragments":["optimized"]},{"Key":"get optimized","Fragments":["away"]},{"Key":"optimized away","Fragments":["anyway.)"]},{"Key":"away anyway.)","Fragments":["The"]},{"Key":"anyway.) The","Fragments":["only"]},{"Key":"only real","Fragments":["problem"]},{"Key":"real problem","Fragments":["I"]},{"Key":"to actually","Fragments":["run","want","reference","compare","\"Nitpick\"","test"]},{"Key":"actually run","Fragments":["the"]},{"Key":"figure that","Fragments":["out"]},{"Key":"that out","Fragments":["soon.","specifically.","and","tho","into","for","asap."]},{"Key":"biggest trouble","Fragments":["I"]},{"Key":"trouble I","Fragments":["had","think."]},{"Key":"with simply","Fragments":["getting"]},{"Key":"simply getting","Fragments":["my"]},{"Key":"getting my","Fragments":["environment"]},{"Key":"my environment","Fragments":["to"]},{"Key":"environment to","Fragments":["build,"]},{"Key":"to build,","Fragments":["compile,"]},{"Key":"build, compile,","Fragments":["and"]},{"Key":"compile, and","Fragments":["run"]},{"Key":"and run","Fragments":["the","it","this.","the","the"]},{"Key":"didn't want","Fragments":["to","to","to","to","to","to","to","to","to"]},{"Key":"write a","Fragments":["bunch","debug","whole","comment.","Sieve","Func","solution","class","top-level","test"]},{"Key":"of assertions","Fragments":["to"]},{"Key":"assertions to","Fragments":["stop"]},{"Key":"to stop","Fragments":["the","checking","checking","and","commenting."]},{"Key":"stop the","Fragments":["program,"]},{"Key":"it print","Fragments":["out"]},{"Key":"print out","Fragments":["whether"]},{"Key":"out whether","Fragments":["a"]},{"Key":"whether a","Fragments":["year"]},{"Key":"year submitted","Fragments":["was/"]},{"Key":"submitted was/","Fragments":["was"]},{"Key":"was/ was","Fragments":["not"]},{"Key":" Limiting","Fragments":["your","your"]},{"Key":"Limiting your","Fragments":["robots","robots"]},{"Key":"your robots","Fragments":["to","to","will"]},{"Key":"robots to","Fragments":["digits","digits"]},{"Key":"to digits","Fragments":["100","100"]},{"Key":"digits 100","Fragments":["through","through"]},{"Key":"100 through","Fragments":["998","998"]},{"Key":"through 998","Fragments":["seems","seems"]},{"Key":"998 seems","Fragments":["a","a"]},{"Key":"bit contrived.","Fragments":["You","You"]},{"Key":"contrived. You","Fragments":["could","could"]},{"Key":"a `string.Format(\"{0:000},","Fragments":["...)`","...)`"]},{"Key":"`string.Format(\"{0:000}, ...)`","Fragments":["or","or"]},{"Key":"...)` or","Fragments":["a","a"]},{"Key":"a `ToString(\"000\")`","Fragments":["to","to"]},{"Key":"`ToString(\"000\")` to","Fragments":["get","get"]},{"Key":"The max","Fragments":["for","for","value"]},{"Key":"max for","Fragments":["`Random.Next`","`Random.Next`","Random"]},{"Key":"for `Random.Next`","Fragments":["is","is"]},{"Key":"`Random.Next` is","Fragments":["an","an"]},{"Key":"an exclusive","Fragments":["value","value","max."]},{"Key":"exclusive value","Fragments":["so","so"]},{"Key":"value so","Fragments":["you","you"]},{"Key":"use 1000","Fragments":["for","for"]},{"Key":"1000 for","Fragments":["the","the"]},{"Key":"int and","Fragments":["26","26","skipping"]},{"Key":"26 for","Fragments":["the","the"]},{"Key":"letters. You","Fragments":["don't"]},{"Key":"the letters,","Fragments":["you","you"]},{"Key":"letters, you","Fragments":["could","could"]},{"Key":"could add","Fragments":["the","the","other"]},{"Key":"random value","Fragments":["to","to"]},{"Key":"to 'A'","Fragments":["to","to"]},{"Key":"'A' to","Fragments":["save","save"]},{"Key":"save creating","Fragments":["the","the"]},{"Key":"creating the","Fragments":["letter","letter","lambda","array"]},{"Key":"letter lookup","Fragments":["table.","table."]},{"Key":"`return ((char)('A'","Fragments":["+","+"]},{"Key":"((char)('A' +","Fragments":["Random.Next(26)).ToString()`","Random.Next(26)).ToString()`"]},{"Key":"it extremely","Fragments":["tough"]},{"Key":"extremely tough","Fragments":["to"]},{"Key":"tough to","Fragments":["generalize","do)","follow,","follow."]},{"Key":"to generalize","Fragments":["this","binary"]},{"Key":"generalize this","Fragments":["solution"]},{"Key":"solution since","Fragments":["the","this"]},{"Key":"the criteria","Fragments":["seemed"]},{"Key":"criteria seemed","Fragments":["ambiguous"]},{"Key":"seemed ambiguous","Fragments":["at"]},{"Key":"ambiguous at","Fragments":["times."]},{"Key":"at times.","Fragments":["I"]},{"Key":"times. I","Fragments":["look"]},{"Key":"look forward","Fragments":["to","for"]},{"Key":"forward to","Fragments":["perusing","follow,","anyone's","your"]},{"Key":"to perusing","Fragments":["other"]},{"Key":"perusing other","Fragments":["solutions"]},{"Key":"other solutions","Fragments":["to","I","I","easier","(not","all","I","to"]},{"Key":"missed any","Fragments":["major"]},{"Key":"major takeaways.","Fragments":["Were"]},{"Key":"takeaways. Were","Fragments":["there"]},{"Key":"Were there","Fragments":["good"]},{"Key":"there good","Fragments":["ways"]},{"Key":"good ways","Fragments":["to"]},{"Key":"to approach","Fragments":["this","this"]},{"Key":"approach this","Fragments":["without","problem,"]},{"Key":"1. Never","Fragments":["make","make"]},{"Key":"Never make","Fragments":["class","a"]},{"Key":"make class","Fragments":["level"]},{"Key":"variables public.","Fragments":["Wrap"]},{"Key":"public. Wrap","Fragments":["that"]},{"Key":"Wrap that","Fragments":["puppy"]},{"Key":"that puppy","Fragments":["in","in"]},{"Key":"puppy in","Fragments":["a","a"]},{"Key":"property (get;","Fragments":["private"]},{"Key":"(get; private","Fragments":["set;)"]},{"Key":"private set;)","Fragments":[":)"]},{"Key":"were trying","Fragments":["to"]},{"Key":"accomplish with","Fragments":["this"]},{"Key":"this while","Fragments":["loop,"]},{"Key":"while loop,","Fragments":["but"]},{"Key":"be wasting","Fragments":["memory."]},{"Key":"wasting memory.","Fragments":["What"]},{"Key":"memory. What","Fragments":["if"]},{"Key":"a high","Fragments":["school","level"]},{"Key":"high school","Fragments":["with"]},{"Key":"school with","Fragments":["only"]},{"Key":"only grades","Fragments":["9","that"]},{"Key":"grades 9","Fragments":["thru"]},{"Key":"9 thru","Fragments":["12"]},{"Key":"thru 12","Fragments":["available?","in"]},{"Key":"12 available?","Fragments":[":)"]},{"Key":"know having","Fragments":["anonymous"]},{"Key":"having anonymous","Fragments":["functions"]},{"Key":"anonymous functions","Fragments":["in","in"]},{"Key":"bit weird,","Fragments":["but"]},{"Key":"weird, but","Fragments":["wanted"]},{"Key":"but wanted","Fragments":["to","to"]},{"Key":"show another","Fragments":["way"]},{"Key":"another way","Fragments":["to","of","to"]},{"Key":"of private","Fragments":["methods","field","fields"]},{"Key":"methods all","Fragments":["over"]},{"Key":"you pass","Fragments":["in","12345678901","a"]},{"Key":"and digits","Fragments":["to"]},{"Key":"digits to","Fragments":["generate."]},{"Key":"In `GenerateNumbers`,","Fragments":["you"]},{"Key":"`GenerateNumbers`, you","Fragments":["should"]},{"Key":"should add","Fragments":["1","1","guard"]},{"Key":"add 1","Fragments":["to","to","to"]},{"Key":"of places","Fragments":["because"]},{"Key":"places because","Fragments":["the"]},{"Key":"for Random","Fragments":["is"]},{"Key":"Random is","Fragments":["exclusive.","easy,"]},{"Key":"also change","Fragments":["the"]},{"Key":"the ToString","Fragments":["to"]},{"Key":"ToString to","Fragments":["`ToString(\"000\")`","avoid"]},{"Key":"to `ToString(\"000\")`","Fragments":["so"]},{"Key":"`ToString(\"000\")` so","Fragments":["that"]},{"Key":"correct number","Fragments":["of"]},{"Key":"of digits.","Fragments":["I"]},{"Key":"digits. I","Fragments":["expect"]},{"Key":"will fail","Fragments":["occasionally","the","at","the","miserably"]},{"Key":"fail occasionally","Fragments":["if"]},{"Key":"occasionally if","Fragments":["the"]},{"Key":"number is","Fragments":["0","parsed","odd","creative.","greater","negative"]},{"Key":"is 0","Fragments":["to","after","you","is","if"]},{"Key":"also skip","Fragments":["the"]},{"Key":"string parse","Fragments":["if"]},{"Key":"parse if","Fragments":["you"]},{"Key":"var numberOfPlaces","Fragments":["=","=","="]},{"Key":"numberOfPlaces =","Fragments":["0;","0;","new"]},{"Key":"for (var","Fragments":["i","index","i"]},{"Key":"= 1;","Fragments":["i"]},{"Key":"1; i","Fragments":["\u003c="]},{"Key":"i \u003c=","Fragments":["numberOfNumbers;","max;"]},{"Key":"\u003c= numberOfNumbers;","Fragments":["i++)"]},{"Key":" numberOfPlaces","Fragments":["+=","+="]},{"Key":"numberOfPlaces +=","Fragments":["9","9"]},{"Key":"+= 9","Fragments":["*","*"]},{"Key":"9 *","Fragments":["i;","(int)Math.Pow(10,"]},{"Key":"of StatementEvalulators,","Fragments":["the"]},{"Key":"StatementEvalulators, the","Fragments":["approach"]},{"Key":"the approach","Fragments":["is","is","you","but"]},{"Key":"I bet","Fragments":["you","it","this"]},{"Key":"bet you","Fragments":["could"]},{"Key":"could optimize","Fragments":["the"]},{"Key":"optimize the","Fragments":["use","logic.","method"]},{"Key":"the enumerations","Fragments":["to","and"]},{"Key":"enumerations to","Fragments":["less"]},{"Key":"to less","Fragments":["code."]},{"Key":"less code.","Fragments":["I"]},{"Key":"might even","Fragments":["consider"]},{"Key":"moving 'if","Fragments":["(enumerator.Current"]},{"Key":"'if (enumerator.Current","Fragments":["=="]},{"Key":"(enumerator.Current ==","Fragments":["null"]},{"Key":"== null","Fragments":["||","the","?","?"]},{"Key":"null ||","Fragments":["!enumerator.Current.Evaluate(statement))'"]},{"Key":"|| !enumerator.Current.Evaluate(statement))'","Fragments":["into"]},{"Key":"!enumerator.Current.Evaluate(statement))' into","Fragments":["a"]},{"Key":"little easier","Fragments":["encapsulated","to"]},{"Key":"easier encapsulated","Fragments":["within"]},{"Key":"encapsulated within","Fragments":["its"]},{"Key":"within its","Fragments":["own."]},{"Key":" Hurray,","Fragments":["you"]},{"Key":"Hurray, you","Fragments":["took"]},{"Key":"you took","Fragments":["the","your"]},{"Key":"took the","Fragments":["same","extra","same","same"]},{"Key":"same approach","Fragments":["as","-","I"]},{"Key":"did. Although","Fragments":["I"]},{"Key":"Although I","Fragments":["didn't","ended","have"]},{"Key":"didn't actually","Fragments":["count","make","have"]},{"Key":"actually count","Fragments":["all"]},{"Key":"count all","Fragments":["the","the"]},{"Key":"the students;","Fragments":["just"]},{"Key":"students; just","Fragments":["the"]},{"Key":"the grades","Fragments":["using","instead"]},{"Key":"grades using","Fragments":["`backingDictionary.Count`."]},{"Key":"using `backingDictionary.Count`.","Fragments":["Counting"]},{"Key":"`backingDictionary.Count`. Counting","Fragments":["all"]},{"Key":"Counting all","Fragments":["the"]},{"Key":"the students","Fragments":["makes","in"]},{"Key":"students makes","Fragments":["more"]},{"Key":"more sense.","Fragments":["Does","Thoughts?"]},{"Key":"sense. Does","Fragments":["that"]},{"Key":"that say","Fragments":["more"]},{"Key":"say more","Fragments":["about"]},{"Key":"more about","Fragments":["the","this","style"]},{"Key":"the quality","Fragments":["my","of","of"]},{"Key":"quality my","Fragments":["code"]},{"Key":"quality of","Fragments":["the","the","the","the","the"]},{"Key":"on sorting","Fragments":["after"]},{"Key":"sorting after","Fragments":["every"]},{"Key":"after every","Fragments":["add"]},{"Key":"every add","Fragments":["but"]},{"Key":"add but","Fragments":["I"]},{"Key":"only sensible","Fragments":["thing"]},{"Key":"sensible thing","Fragments":["to"]},{"Key":"exercise. I","Fragments":["suppose","think","finally","wonder","did","like","typed","understand","ended"]},{"Key":"suppose for","Fragments":["large"]},{"Key":"for large","Fragments":["data"]},{"Key":"large data","Fragments":["sets"]},{"Key":"data sets","Fragments":["we'd"]},{"Key":"sets we'd","Fragments":["want"]},{"Key":"we'd want","Fragments":["to"]},{"Key":"disable the","Fragments":["sorting"]},{"Key":"the sorting","Fragments":["until"]},{"Key":"sorting until","Fragments":["all"]},{"Key":"until all","Fragments":["the"]},{"Key":"is loaded.","Fragments":["Or"]},{"Key":"loaded. Or","Fragments":["use"]},{"Key":"Or use","Fragments":["a"]},{"Key":"sorted data","Fragments":["structure"]},{"Key":"data structure","Fragments":["that","(which","for","in","do"]},{"Key":"structure that","Fragments":["has"]},{"Key":"good performance","Fragments":["for"]},{"Key":"performance for","Fragments":["inserts."]},{"Key":"to each","Fragments":["of","other.","number","their"]},{"Key":"your lengths","Fragments":["in"]},{"Key":"lengths in","Fragments":["`Random.Next`."]},{"Key":"in `Random.Next`.","Fragments":["The"]},{"Key":"`Random.Next`. The","Fragments":["max"]},{"Key":"max value","Fragments":["is"]},{"Key":"is exclusive,","Fragments":["so"]},{"Key":"exclusive, so","Fragments":["your"]},{"Key":"robots will","Fragments":["never"]},{"Key":"never have","Fragments":["a","anything"]},{"Key":"a 9","Fragments":["or"]},{"Key":"9 or","Fragments":["a"]},{"Key":"a Z","Fragments":["in"]},{"Key":"Z in","Fragments":["their"]},{"Key":"end, I","Fragments":["felt"]},{"Key":"logic was","Fragments":["simple"]},{"Key":"to shove","Fragments":["on"]},{"Key":"shove on","Fragments":["one"]},{"Key":"line. My","Fragments":["initial"]},{"Key":"initial submission","Fragments":["just"]},{"Key":"submission just","Fragments":["took"]},{"Key":"just took","Fragments":["up"]},{"Key":"took up","Fragments":["to"]},{"Key":"much space","Fragments":["(personal"]},{"Key":"space (personal","Fragments":["preference)"]},{"Key":"(personal preference)","Fragments":["for"]},{"Key":"preference) for","Fragments":["what"]},{"Key":"actually doing.","Fragments":["I"]},{"Key":"doing. I","Fragments":["understand"]},{"Key":"that some","Fragments":["people","people","cleaning","of","value"]},{"Key":"people will","Fragments":["bristle","say","put","have"]},{"Key":"will bristle","Fragments":["at"]},{"Key":"bristle at","Fragments":["seeing"]},{"Key":"at seeing","Fragments":["this"]},{"Key":"seeing this","Fragments":["all"]},{"Key":"this all","Fragments":["smashed","on","in"]},{"Key":"all smashed","Fragments":["together"]},{"Key":"smashed together","Fragments":["on"]},{"Key":"together on","Fragments":["one"]},{"Key":"level variable","Fragments":["public."]},{"Key":"variable public.","Fragments":["Always"]},{"Key":"public. Always","Fragments":["make"]},{"Key":"Always make","Fragments":["the"]},{"Key":"variable private","Fragments":["and"]},{"Key":"wrap that","Fragments":["puppy"]},{"Key":"public property!","Fragments":[":)"]},{"Key":"2. Could","Fragments":["use"]},{"Key":"Could use","Fragments":["a","day?","a"]},{"Key":"a SortedSet\u003cstring\u003e","Fragments":["instead"]},{"Key":"SortedSet\u003cstring\u003e instead","Fragments":["of"]},{"Key":"of List\u003cstring\u003e","Fragments":["to"]},{"Key":"List\u003cstring\u003e to","Fragments":["avoid"]},{"Key":"avoid calling","Fragments":[".Sort()","ToLower()"]},{"Key":"3. int","Fragments":["p"]},{"Key":"int p","Fragments":["should"]},{"Key":"p should","Fragments":["probably"]},{"Key":"be int","Fragments":["grade"]},{"Key":"int grade","Fragments":["to"]},{"Key":"grade to","Fragments":["be"]},{"Key":"be my","Fragments":["C","favorite"]},{"Key":"my C","Fragments":["habits","programming","programming"]},{"Key":"C habits","Fragments":["peaking"]},{"Key":"habits peaking","Fragments":["through"]},{"Key":"peaking through","Fragments":["where"]},{"Key":"through where","Fragments":["if"]},{"Key":"where if","Fragments":["you","you"]},{"Key":"a placeholder","Fragments":["variable,"]},{"Key":"placeholder variable,","Fragments":["then"]},{"Key":"variable, then","Fragments":["don't...","I"]},{"Key":"then don't...","Fragments":["just"]},{"Key":"don't... just","Fragments":["return"]},{"Key":"value rather","Fragments":["than"]},{"Key":"than malloc","Fragments":["another"]},{"Key":"malloc another","Fragments":["thing"]},{"Key":"another thing","Fragments":["you"]},{"Key":"track of.","Fragments":[":-)"]},{"Key":"Could someone","Fragments":["help","please","please"]},{"Key":"someone help","Fragments":["with"]},{"Key":"my Match","Fragments":["method?"]},{"Key":"Match method?","Fragments":["I"]},{"Key":"method? I","Fragments":["could","heard"]},{"Key":"not figure","Fragments":["out"]},{"Key":"an item","Fragments":["to","from"]},{"Key":"array on","Fragments":["the","the","ctor"]},{"Key":"the fly.","Fragments":["So"]},{"Key":"fly. So","Fragments":["I"]},{"Key":"a temp","Fragments":["List.","variable"]},{"Key":"temp List.","Fragments":["I'm"]},{"Key":"List. I'm","Fragments":["sure"]},{"Key":"sure this","Fragments":["is","would","took","isn't"]},{"Key":"could simplify","Fragments":["by","your","this?","this","further.","the","this","your","the","line"]},{"Key":"Dictionary rather","Fragments":["than"]},{"Key":"because grade","Fragments":["is"]},{"Key":"grade is","Fragments":["an"]},{"Key":"int doesn't","Fragments":["mean"]},{"Key":"mean it","Fragments":["is"]},{"Key":"index in","Fragments":["a","Enum.GetValues(typeof(AllergyEnum)))","the","a"]},{"Key":"a list.","Fragments":["If"]},{"Key":"list. If","Fragments":["the","Grade","none"]},{"Key":"tests had","Fragments":["happen"]},{"Key":"had happen","Fragments":["to"]},{"Key":"happen to","Fragments":["pass","know"]},{"Key":"pass grade","Fragments":["as"]},{"Key":"grade as","Fragments":["an"]},{"Key":"enum (even","Fragments":["though"]},{"Key":"though internally","Fragments":["it"]},{"Key":"internally it","Fragments":["was"]},{"Key":"was still","Fragments":["an","about"]},{"Key":"still an","Fragments":["int)"]},{"Key":"an int)","Fragments":["you"]},{"Key":"int) you","Fragments":["probably"]},{"Key":"probably would","Fragments":["have","have","convert"]},{"Key":"have taken","Fragments":["a","it","your","that"]},{"Key":"taken a","Fragments":["different"]},{"Key":"different approach.","Fragments":["Be","I"]},{"Key":"approach. Be","Fragments":["careful"]},{"Key":"Be careful","Fragments":["mixing"]},{"Key":"careful mixing","Fragments":["meanings"]},{"Key":"mixing meanings","Fragments":["of"]},{"Key":"meanings of","Fragments":["data."]},{"Key":"Excellent work","Fragments":["on"]},{"Key":"on restricting","Fragments":["access"]},{"Key":"restricting access","Fragments":["to"]},{"Key":"data. I","Fragments":["didn't"]},{"Key":" Whoah,","Fragments":["did"]},{"Key":"Whoah, did","Fragments":["not"]},{"Key":"not realize","Fragments":["that","at","it"]},{"Key":"it used","Fragments":["your"]},{"Key":"your same","Fragments":["list"]},{"Key":"same list","Fragments":["internally,"]},{"Key":"list internally,","Fragments":["always"]},{"Key":"internally, always","Fragments":["assumed"]},{"Key":"always assumed","Fragments":["that"]},{"Key":"this. In","Fragments":["my"]},{"Key":"solution, I","Fragments":["looped","enjoy"]},{"Key":"I looped","Fragments":["through"]},{"Key":"looped through","Fragments":["the","like","each","the"]},{"Key":"the multiples","Fragments":["of","of","but","found","of","(usedMultiples)"]},{"Key":"each (3,","Fragments":["6,"]},{"Key":"(3, 6,","Fragments":["9,"]},{"Key":"6, 9,","Fragments":["etc","12,"]},{"Key":"9, etc","Fragments":["then"]},{"Key":"etc then","Fragments":["5,"]},{"Key":"then 5,","Fragments":["10,"]},{"Key":"5, 10,","Fragments":["15,","15"]},{"Key":"10, 15,","Fragments":["etc)"]},{"Key":"15, etc)","Fragments":["because"]},{"Key":"etc) because","Fragments":["I"]},{"Key":"it meant","Fragments":["I"]},{"Key":"meant I","Fragments":["needed"]},{"Key":"keep a","Fragments":["list","count","start"]},{"Key":"those that","Fragments":["I","follow"]},{"Key":"found to","Fragments":["ensure","check","see"]},{"Key":"ensure numbers","Fragments":["didn't"]},{"Key":"numbers didn't","Fragments":["get"]},{"Key":"didn't get","Fragments":["summed","the","me"]},{"Key":"get summed","Fragments":["twice."]},{"Key":"summed twice.","Fragments":["This"]},{"Key":"twice. This","Fragments":["meant","is"]},{"Key":"This meant","Fragments":["a"]},{"Key":"meant a","Fragments":["lookup"]},{"Key":"lookup list,","Fragments":["so"]},{"Key":"probably ended","Fragments":["up"]},{"Key":"up being","Fragments":["less","more"]},{"Key":"being less","Fragments":["efficient."]},{"Key":"big if/else","Fragments":["in"]},{"Key":"if/else in","Fragments":["the"]},{"Key":"the To","Fragments":["method,","method,"]},{"Key":"To method,","Fragments":["wouldn't","why"]},{"Key":"method, wouldn't","Fragments":["it"]},{"Key":"wouldn't it","Fragments":["be",":S.","be","make"]},{"Key":"to initialize","Fragments":["_multiples","a","it","primes","all"]},{"Key":"initialize _multiples","Fragments":["in"]},{"Key":"_multiples in","Fragments":["the"]},{"Key":"default constructor","Fragments":["to","is","if"]},{"Key":"constructor to","Fragments":["{3,5}?"]},{"Key":"to {3,5}?","Fragments":["You"]},{"Key":"{3,5}? You","Fragments":["are"]},{"Key":"are basically","Fragments":["duplicating"]},{"Key":"basically duplicating","Fragments":["your"]},{"Key":"duplicating your","Fragments":["algorithm."]},{"Key":"Your algorithm","Fragments":["is","is","looks"]},{"Key":"used on","Fragments":["my"]},{"Key":"first pass,","Fragments":["but","I","I"]},{"Key":"pass, but","Fragments":["on","I"]},{"Key":"second thought,","Fragments":["I"]},{"Key":"thought, I","Fragments":["think"]},{"Key":"values from","Fragments":["1","the"]},{"Key":"from 1","Fragments":["-\u003e","to","to","to"]},{"Key":"1 -\u003e","Fragments":["to-1"]},{"Key":"-\u003e to-1","Fragments":["and"]},{"Key":"to-1 and","Fragments":["checking"]},{"Key":"are multiples.","Fragments":["I"]},{"Key":"multiples. I","Fragments":["think"]},{"Key":"this algorithm","Fragments":["is","requires","processes","would","will"]},{"Key":"efficient because","Fragments":["of"]},{"Key":"the scans","Fragments":["through"]},{"Key":"scans through","Fragments":["the"]},{"Key":"the already","Fragments":["found","created"]},{"Key":"already found","Fragments":["list."]},{"Key":"1) Yeah,","Fragments":["I"]},{"Key":"never got","Fragments":["on"]},{"Key":"got on","Fragments":["the"]},{"Key":"whole \"You","Fragments":["must"]},{"Key":"\"You must","Fragments":["always"]},{"Key":"must always","Fragments":["use"]},{"Key":"use properties!\"","Fragments":["bandwagon."]},{"Key":"properties!\" bandwagon.","Fragments":["That's"]},{"Key":"bandwagon. That's","Fragments":["probably"]},{"Key":"a holdover","Fragments":["from"]},{"Key":"holdover from","Fragments":["my"]},{"Key":"C programming","Fragments":["days.","past"]},{"Key":"2) I","Fragments":["knew","believe"]},{"Key":"knew immediately","Fragments":["when"]},{"Key":"immediately when","Fragments":["I"]},{"Key":"saw this","Fragments":["assignment"]},{"Key":"this assignment","Fragments":["that","would'nt"]},{"Key":"assignment that","Fragments":["everybody","you"]},{"Key":"that everybody","Fragments":["and"]},{"Key":"everybody and","Fragments":["their","their"]},{"Key":"and their","Fragments":["brother","brother","values"]},{"Key":"their brother","Fragments":["would","would"]},{"Key":"brother would","Fragments":["be","be"]},{"Key":"using dictionarys.","Fragments":["I"]},{"Key":"dictionarys. I","Fragments":["decided"]},{"Key":"use lists","Fragments":["instead"]},{"Key":"lists instead","Fragments":["to"]},{"Key":"be different.","Fragments":["Be"]},{"Key":"different. Be","Fragments":["glad,"]},{"Key":"Be glad,","Fragments":["I"]},{"Key":"glad, I","Fragments":["came"]},{"Key":"came THIS","Fragments":["close"]},{"Key":"THIS close","Fragments":["to"]},{"Key":"using arrays.","Fragments":[":-D"]},{"Key":" Nice.","Fragments":["You","I","First"]},{"Key":"Nice. You","Fragments":["could"]},{"Key":"reduce your","Fragments":["for"]},{"Key":"your for","Fragments":["loop","loop.","loop","loop"]},{"Key":"loop with","Fragments":["the","this.","a","small","Sum()"]},{"Key":"if to","Fragments":["a","be"]},{"Key":"query with","Fragments":["a"]},{"Key":"a where","Fragments":["clause"]},{"Key":"the Sum(),","Fragments":["but"]},{"Key":"Sum(), but","Fragments":["this"]},{"Key":" Weird,","Fragments":["It"]},{"Key":"Weird, It","Fragments":["works"]},{"Key":"works just","Fragments":["fine","fine.","as"]},{"Key":"me. Maybe","Fragments":["this"]},{"Key":"Maybe this","Fragments":["is"]},{"Key":"a unicode","Fragments":["copy/paste"]},{"Key":"unicode copy/paste","Fragments":["issue."]},{"Key":"copy/paste issue.","Fragments":["Do"]},{"Key":"issue. Do","Fragments":["me"]},{"Key":"Do me","Fragments":["a"]},{"Key":"a favor","Fragments":["and"]},{"Key":"favor and","Fragments":["try"]},{"Key":"try again,","Fragments":["but"]},{"Key":"again, but","Fragments":["this","needing"]},{"Key":"this time","Fragments":["go","it",":)"]},{"Key":"time go","Fragments":["into"]},{"Key":"go into","Fragments":["the","our"]},{"Key":"regular expression,","Fragments":["delete"]},{"Key":"expression, delete","Fragments":["the"]},{"Key":"delete the","Fragments":["apostrophe,"]},{"Key":"the apostrophe,","Fragments":["then"]},{"Key":"apostrophe, then","Fragments":["retype"]},{"Key":"then retype","Fragments":["it"]},{"Key":"retype it","Fragments":["to"]},{"Key":"the ascii","Fragments":["one."]},{"Key":"often go","Fragments":["back"]},{"Key":"and forth","Fragments":["on","between","on"]},{"Key":"forth on","Fragments":["whether","what"]},{"Key":"to enclose","Fragments":["each"]},{"Key":"enclose each","Fragments":["\u003cb\u003eif\u003c/b\u003e"]},{"Key":"each \u003cb\u003eif\u003c/b\u003e","Fragments":["statement"]},{"Key":"\u003cb\u003eif\u003c/b\u003e statement","Fragments":["with"]},{"Key":"statement with","Fragments":["brackets."]},{"Key":"with brackets.","Fragments":["I"]},{"Key":"brackets. I","Fragments":["like"]},{"Key":"have them","Fragments":["in","all"]},{"Key":"case code","Fragments":["gets"]},{"Key":"code gets","Fragments":["added"]},{"Key":"added later.","Fragments":["But,"]},{"Key":"later. But,","Fragments":["in"]},{"Key":"But, in","Fragments":["simple"]},{"Key":"in simple","Fragments":["statements","tests"]},{"Key":"simple statements","Fragments":["likes"]},{"Key":"statements likes","Fragments":["this"]},{"Key":"likes this","Fragments":["it"]},{"Key":"just adds","Fragments":["clutter."]},{"Key":" Following","Fragments":["the","@leland's"]},{"Key":"Following the","Fragments":["instructions"]},{"Key":"instructions for","Fragments":["the"]},{"Key":"NUnit testing,","Fragments":["when"]},{"Key":"testing, when","Fragments":["I"]},{"Key":"my bin/Debug","Fragments":["dir"]},{"Key":"bin/Debug dir","Fragments":["I"]},{"Key":"dir I","Fragments":["do"]},{"Key":"not see","Fragments":["a","of","the","how"]},{"Key":"a DLL","Fragments":["to","to"]},{"Key":"DLL to","Fragments":["load","test"]},{"Key":"to load","Fragments":["into"]},{"Key":"load into","Fragments":["the"]},{"Key":"test system.","Fragments":["I"]},{"Key":"system. I","Fragments":["only"]},{"Key":"the compiled","Fragments":["exe.","Regex."]},{"Key":"are no","Fragments":["instructions","lowercase","letters.","comments","Chuck()","side","more.","tests","heap"]},{"Key":"no instructions","Fragments":["on"]},{"Key":"link for","Fragments":["how"]},{"Key":"for how","Fragments":["to","I"]},{"Key":"Keep in","Fragments":["mind"]},{"Key":"mind I","Fragments":["come"]},{"Key":"I come","Fragments":["from","back","from"]},{"Key":"the java","Fragments":["or"]},{"Key":"java or","Fragments":["linux"]},{"Key":"or linux","Fragments":["based"]},{"Key":"linux based","Fragments":["c++"]},{"Key":"based c++","Fragments":["world,"]},{"Key":"c++ world,","Fragments":["so"]},{"Key":"world, so","Fragments":["all"]},{"Key":"so all","Fragments":["this","in","tests"]},{"Key":"this dll","Fragments":["stuff"]},{"Key":"dll stuff","Fragments":["is"]},{"Key":"stuff is","Fragments":["foreign"]},{"Key":"is foreign","Fragments":["to"]},{"Key":"foreign to","Fragments":["me.","modern"]},{"Key":"Look like","Fragments":["I"]},{"Key":"created the","Fragments":["program"]},{"Key":"program incorrectly","Fragments":["as"]},{"Key":"incorrectly as","Fragments":["a"]},{"Key":"a cmd","Fragments":["line"]},{"Key":"cmd line","Fragments":["program"]},{"Key":"line program","Fragments":["when"]},{"Key":"program when","Fragments":["I"]},{"Key":"class library.","Fragments":["Ok."]},{"Key":"library. Ok.","Fragments":["starting"]},{"Key":"Ok. starting","Fragments":["over."]},{"Key":"your rand.Next","Fragments":["calls,"]},{"Key":"rand.Next calls,","Fragments":["you"]},{"Key":"calls, you","Fragments":["need"]},{"Key":"second parameter,","Fragments":["it"]},{"Key":"parameter, it","Fragments":["is"]},{"Key":"exclusive max.","Fragments":["You"]},{"Key":"max. You","Fragments":["could"]},{"Key":"three `rand.Next(0,","Fragments":["9).ToString()`s"]},{"Key":"`rand.Next(0, 9).ToString()`s","Fragments":["to"]},{"Key":"9).ToString()`s to","Fragments":["`rand.Next(1000).ToString(\"000\")`"]},{"Key":"By being","Fragments":["all"]},{"Key":"being all","Fragments":["on"]},{"Key":"line, I","Fragments":["feel","personally","feel"]},{"Key":"not easily","Fragments":["readable.","be","understandable,"]},{"Key":"you assigned","Fragments":["the"]},{"Key":"assigned the","Fragments":["expression","conditional"]},{"Key":"a semantic","Fragments":["variable,"]},{"Key":"semantic variable,","Fragments":["isLeapYear."]},{"Key":"variable, isLeapYear.","Fragments":["I"]},{"Key":"isLeapYear. I","Fragments":["feel"]},{"Key":"expression itself","Fragments":["is"]},{"Key":"read, since","Fragments":["there"]},{"Key":"since there","Fragments":["are","has","isn't","are"]},{"Key":"are three","Fragments":["rules"]},{"Key":"three rules","Fragments":["all"]},{"Key":"rules all","Fragments":["on"]},{"Key":"Yes, either","Fragments":["start"]},{"Key":"either start","Fragments":["again"]},{"Key":"start again","Fragments":["with"]},{"Key":"again with","Fragments":["a"]},{"Key":"Or right","Fragments":["click"]},{"Key":"right click","Fragments":["your","your"]},{"Key":"click your","Fragments":["current","solution"]},{"Key":"current project","Fragments":["and"]},{"Key":"project and","Fragments":["get","run"]},{"Key":"and get","Fragments":["properties.","methods","the","rid","average."]},{"Key":"Then Under","Fragments":["output"]},{"Key":"Under output","Fragments":["type"]},{"Key":"output type","Fragments":["select"]},{"Key":"type select","Fragments":["\"Class"]},{"Key":"select \"Class","Fragments":["library\""]},{"Key":"\"Class library\"","Fragments":["it"]},{"Key":"library\" it","Fragments":["will"]},{"Key":"be set","Fragments":["as","in"]},{"Key":"set as","Fragments":["\"Console"]},{"Key":"as \"Console","Fragments":["application\""]},{"Key":"\"Console application\"","Fragments":["at"]},{"Key":"application\" at","Fragments":["the"]},{"Key":" Save","Fragments":["and"]},{"Key":"Save and","Fragments":["then"]},{"Key":"then remove","Fragments":["the"]},{"Key":"your class,","Fragments":["build","you"]},{"Key":"class, build","Fragments":["and"]},{"Key":"build and","Fragments":["you"]},{"Key":" Me","Fragments":["neither"]},{"Key":"Me neither","Fragments":["until"]},{"Key":"neither until","Fragments":["very"]},{"Key":"until very","Fragments":["recently."]},{"Key":"very recently.","Fragments":["The"]},{"Key":"recently. The","Fragments":["trick"]},{"Key":"The trick","Fragments":["is","was"]},{"Key":"trick is","Fragments":["remembering"]},{"Key":"is remembering","Fragments":["to"]},{"Key":"use it!","Fragments":["Thanks"]},{"Key":"it! Thanks","Fragments":["for"]},{"Key":" Skipped","Fragments":["the"]},{"Key":"Skipped the","Fragments":["non-changeable"]},{"Key":"the non-changeable","Fragments":["bonus"]},{"Key":"non-changeable bonus","Fragments":["question?"]},{"Key":"bonus question?","Fragments":[":)"]},{"Key":"using List\u003cstring\u003e,","Fragments":["you"]},{"Key":"List\u003cstring\u003e, you","Fragments":["could"]},{"Key":"use SortedSet\u003cstring\u003e","Fragments":["so"]},{"Key":"SortedSet\u003cstring\u003e so","Fragments":["you"]},{"Key":"call .Sort()","Fragments":["every"]},{"Key":".Sort() every","Fragments":["time."]},{"Key":"In Grade,","Fragments":["you","you","aren't"]},{"Key":"Grade, you","Fragments":["set","create","trap"]},{"Key":"set list","Fragments":["="]},{"Key":"list =","Fragments":["new","null;","list.Reverse();"]},{"Key":"new List\u003cstring\u003e.","Fragments":["However,"]},{"Key":"List\u003cstring\u003e. However,","Fragments":["if"]},{"Key":"However, if","Fragments":["you","you","the","you","this","the","the"]},{"Key":"an existing","Fragments":["list,","_multiples"]},{"Key":"existing list,","Fragments":["you"]},{"Key":"list, you","Fragments":["just"]},{"Key":"just created","Fragments":["an","with"]},{"Key":"then never","Fragments":["use"]},{"Key":"never use","Fragments":["it,"]},{"Key":"use it,","Fragments":["using","then."]},{"Key":"it, using","Fragments":["up"]},{"Key":"using up","Fragments":["unnecessary"]},{"Key":"up unnecessary","Fragments":["memory"]},{"Key":"unnecessary memory","Fragments":["(although"]},{"Key":"memory (although","Fragments":["quite"]},{"Key":"(although quite","Fragments":["small)."]},{"Key":"feedback mbrameld.","Fragments":["It"]},{"Key":"mbrameld. It","Fragments":["does"]},{"Key":"does passes","Fragments":["the"]},{"Key":"test from","Fragments":["logical"]},{"Key":"from logical","Fragments":["point"]},{"Key":"logical point","Fragments":["of"]},{"Key":"of view.","Fragments":["If"]},{"Key":"view. If","Fragments":["you"]},{"Key":"name from","Fragments":["leap","the","the"]},{"Key":"from leap","Fragments":["to"]},{"Key":"leap to","Fragments":["isleapyear"]},{"Key":"to isleapyear","Fragments":["it"]},{"Key":"isleapyear it","Fragments":["passes"]},{"Key":"the test.","Fragments":["I","Unfortunately,","ExercismCSharp","The"]},{"Key":"test. I","Fragments":["appreciate"]},{"Key":"appreciate what","Fragments":["you"]},{"Key":"saying but","Fragments":["the"]},{"Key":"is changing","Fragments":["the"]},{"Key":"name and","Fragments":["adding","`this`.","then"]},{"Key":"adding static","Fragments":["to"]},{"Key":"and methods","Fragments":["will","are","at"]},{"Key":"methods will","Fragments":["make"]},{"Key":"pass as","Fragments":["it"]},{"Key":"exercise. As","Fragments":["a"]},{"Key":"a logic","Fragments":["it","boolean"]},{"Key":"logic it","Fragments":["looks"]},{"Key":"looks right","Fragments":["to"]},{"Key":"right to","Fragments":["me."]},{"Key":"can concatenate","Fragments":["both"]},{"Key":"concatenate both","Fragments":["of"]},{"Key":"statement. In","Fragments":["addition,"]},{"Key":"In addition,","Fragments":["you"]},{"Key":"addition, you","Fragments":["can"]},{"Key":"can save","Fragments":["space","on","some","yourself","yourself"]},{"Key":"save space","Fragments":["if"]},{"Key":"space if","Fragments":["you"]},{"Key":"leave out","Fragments":["the","the","the","the"]},{"Key":"the bool","Fragments":["variables","expression","assignments","objects","I","instead","variable."]},{"Key":"bool variables","Fragments":["and","are"]},{"Key":"and place","Fragments":["\"return"]},{"Key":"place \"return","Fragments":["true/false;\""]},{"Key":"\"return true/false;\"","Fragments":["at"]},{"Key":"true/false;\" at","Fragments":["the"]},{"Key":"started off","Fragments":["by","doing"]},{"Key":"off by","Fragments":["implementing","naming"]},{"Key":"implementing a","Fragments":["very"]},{"Key":"very verbose","Fragments":["solution,","(it's"]},{"Key":"verbose solution,","Fragments":["that"]},{"Key":"solution, that","Fragments":["worked"]},{"Key":"worked and","Fragments":["passed"]},{"Key":"and passed","Fragments":["all","all"]},{"Key":"passed all","Fragments":["the","the","the"]},{"Key":"and helped","Fragments":["me"]},{"Key":"helped me","Fragments":["understand","to"]},{"Key":"me understand","Fragments":["the"]},{"Key":"bool isLeapYear","Fragments":["="]},{"Key":"bool isDivisibleBy100","Fragments":["=","="]},{"Key":"isDivisibleBy100 =","Fragments":["year%100","year"]},{"Key":"= year%100","Fragments":["=="]},{"Key":"bool isDivisbleBy400","Fragments":["="]},{"Key":"isDivisbleBy400 =","Fragments":["year%400"]},{"Key":"= year%400","Fragments":["=="]},{"Key":"if (isDivisibleBy4","Fragments":["\u0026\u0026"]},{"Key":"(isDivisibleBy4 \u0026\u0026","Fragments":["!isDivisibleBy100)","(!isDivisibleBy100"]},{"Key":"if (isDivisibleBy100","Fragments":["\u0026\u0026"]},{"Key":"(isDivisibleBy100 \u0026\u0026","Fragments":["isDivisbleBy400)"]},{"Key":" Once","Fragments":["that","we","you","you've","you've","you've"]},{"Key":"Once that","Fragments":["was"]},{"Key":"was working,","Fragments":["I"]},{"Key":"started refactoring","Fragments":["the"]},{"Key":"refactoring the","Fragments":["solution"]},{"Key":"solution down","Fragments":["to"]},{"Key":"initial reaction","Fragments":["was"]},{"Key":"reaction was","Fragments":["that"]},{"Key":"was that","Fragments":["it","functional","there's","doing","neither","the","it's"]},{"Key":"verbose (it's","Fragments":["the"]},{"Key":"(it's the","Fragments":["old"]},{"Key":"old C/C++","Fragments":["guy"]},{"Key":"C/C++ guy","Fragments":["inside"]},{"Key":"guy inside","Fragments":["me"]},{"Key":"inside me","Fragments":["wanting"]},{"Key":"me wanting","Fragments":["to"]},{"Key":"wanting to","Fragments":["minimize"]},{"Key":"minimize everything),","Fragments":["however"]},{"Key":"everything), however","Fragments":["from"]},{"Key":"however from","Fragments":["a"]},{"Key":"readability perspective,","Fragments":["the"]},{"Key":"perspective, the","Fragments":["variable"]},{"Key":"and logic","Fragments":["make"]},{"Key":"logic make","Fragments":["it"]},{"Key":"to quickly","Fragments":["understand"]},{"Key":"quickly understand","Fragments":["what"]},{"Key":"you setup","Fragments":["your"]},{"Key":"setup your","Fragments":["for"]},{"Key":"loop. Nice","Fragments":["job!"]},{"Key":" Saw","Fragments":["easier"]},{"Key":"Saw easier","Fragments":["way"]},{"Key":"easier way","Fragments":["to","to","to"]},{"Key":"random characters.","Fragments":[":)"]},{"Key":"Got it","Fragments":["to"]},{"Key":"to finally","Fragments":["work."]},{"Key":"finally work.","Fragments":["The"]},{"Key":"work. The","Fragments":["test"]},{"Key":"test checks","Fragments":["the"]},{"Key":"the /4","Fragments":["rule"]},{"Key":"/4 rule","Fragments":["for"]},{"Key":"rule for","Fragments":["years"]},{"Key":"for years","Fragments":["submitted"]},{"Key":"years submitted","Fragments":["to"]},{"Key":"submitted to","Fragments":["the"]},{"Key":"the isYear","Fragments":["class."]},{"Key":"isYear class.","Fragments":["Then,"]},{"Key":"class. Then,","Fragments":["if"]},{"Key":"Then, if","Fragments":["the"]},{"Key":"the /100","Fragments":["also"]},{"Key":"/100 also","Fragments":["applies"]},{"Key":"also applies","Fragments":["to"]},{"Key":"applies to","Fragments":["the","'I,","all"]},{"Key":"the year,","Fragments":["it","month","month,"]},{"Key":"year, it","Fragments":["then","also"]},{"Key":"then applies","Fragments":["the"]},{"Key":"applies the","Fragments":["/400"]},{"Key":"the /400","Fragments":["rule"]},{"Key":"/400 rule","Fragments":["as"]},{"Key":"rule as","Fragments":["well"]},{"Key":"well to","Fragments":["see"]},{"Key":"you understood","Fragments":["how"]},{"Key":"understood how","Fragments":["to"]},{"Key":"the assignment.","Fragments":["I"]},{"Key":"assignment. I","Fragments":["know","realize"]},{"Key":"know it's","Fragments":["a","a","a","intended"]},{"Key":"confusing at","Fragments":["first,"]},{"Key":"you figure","Fragments":["it","out","out"]},{"Key":"figure it","Fragments":["out,","out","out."]},{"Key":"it out,","Fragments":["every"]},{"Key":"out, every","Fragments":["assignment","submission"]},{"Key":"every assignment","Fragments":["is"]},{"Key":"assignment is","Fragments":["done"]},{"Key":"You were","Fragments":["supposed","then"]},{"Key":"Year that","Fragments":["had"]},{"Key":"it called","Fragments":["IsLeap"]},{"Key":"IsLeap that","Fragments":["takes"]},{"Key":"a integer","Fragments":["variable"]},{"Key":"integer variable","Fragments":["as"]},{"Key":"variable as","Fragments":["an","a"]},{"Key":"argument and","Fragments":["returned","makes"]},{"Key":"and returned","Fragments":["a","false"]},{"Key":"boolean indicating","Fragments":["if"]},{"Key":"indicating if","Fragments":["the"]},{"Key":"the supplied","Fragments":["year","test","unit","function","function"]},{"Key":"supplied year","Fragments":["is"]},{"Key":"were then","Fragments":["supposed","removed"]},{"Key":"then supposed","Fragments":["to"]},{"Key":"supplied test","Fragments":["class"]},{"Key":"run it","Fragments":["through","first,"]},{"Key":"it through","Fragments":["NUnit","or","console.","however","the","the"]},{"Key":"through NUnit","Fragments":["to"]},{"Key":"good, great","Fragments":["job!"]},{"Key":" Here's","Fragments":["a","a","that","what"]},{"Key":"Here's a","Fragments":["neat","couple","few"]},{"Key":"neat trick","Fragments":["if","you"]},{"Key":"trick if","Fragments":["you"]},{"Key":"are interested.","Fragments":["Using"]},{"Key":"interested. Using","Fragments":["Linq,"]},{"Key":"Using Linq,","Fragments":["you"]},{"Key":"Linq, you","Fragments":["can"]},{"Key":" Replace","Fragments":["this:","Compare"]},{"Key":"you whole","Fragments":["IsAlpha"]},{"Key":"whole IsAlpha","Fragments":["method."]},{"Key":"IsAlpha method.","Fragments":[":-D"]},{"Key":"in theory","Fragments":["I"]},{"Key":"theory I","Fragments":["could"]},{"Key":"done all","Fragments":["this"]},{"Key":"this work","Fragments":["in","with:"]},{"Key":"one call.","Fragments":["I"]},{"Key":"call. I","Fragments":["separated"]},{"Key":"I separated","Fragments":["the"]},{"Key":"separated the","Fragments":["logic"]},{"Key":"out because","Fragments":["I"]},{"Key":"as granular","Fragments":["as"]},{"Key":"granular as","Fragments":["possible."]},{"Key":"possible. IsDivisibleByValue","Fragments":["has"]},{"Key":"IsDivisibleByValue has","Fragments":["value"]},{"Key":"has value","Fragments":["as"]},{"Key":"value as","Fragments":["it","part"]},{"Key":"used somewhere","Fragments":["else"]},{"Key":"somewhere else","Fragments":["too."]},{"Key":"else too.","Fragments":["I'm"]},{"Key":"too. I'm","Fragments":["not"]},{"Key":"not committed","Fragments":["to"]},{"Key":"committed to","Fragments":["IsYearDivisible"]},{"Key":"to IsYearDivisible","Fragments":["being"]},{"Key":"IsYearDivisible being","Fragments":["its"]},{"Key":"being its","Fragments":["own"]},{"Key":"method, that","Fragments":["could","is."]},{"Key":"be consolidated","Fragments":["into"]},{"Key":"consolidated into","Fragments":["IsLeap."]},{"Key":"into IsLeap.","Fragments":["Either"]},{"Key":"IsLeap. Either","Fragments":["way,"]},{"Key":"Either way,","Fragments":["this","if","no"]},{"Key":"way, this","Fragments":["breakdown"]},{"Key":"this breakdown","Fragments":["allows"]},{"Key":"breakdown allows","Fragments":["calling"]},{"Key":"allows calling","Fragments":["the"]},{"Key":"same routine","Fragments":["for"]},{"Key":"routine for","Fragments":["different"]},{"Key":"different scenarios","Fragments":["and"]},{"Key":"scenarios and","Fragments":["then"]},{"Key":"then providing","Fragments":["a"]},{"Key":"providing a","Fragments":["clear","dictionary"]},{"Key":"clear condition","Fragments":["to"]},{"Key":"condition to","Fragments":["check","the"]},{"Key":"for to","Fragments":["return"]},{"Key":"should now","Fragments":["be"]},{"Key":"be fully","Fragments":["NUnit-ified.","evaluated"]},{"Key":" perfect.","Fragments":["thanks!"]},{"Key":"on knowing","Fragments":["how"]},{"Key":"knowing how","Fragments":["to"]},{"Key":"initialize a","Fragments":["dictionary"]},{"Key":"with literal","Fragments":["syntax"]},{"Key":"literal syntax","Fragments":["(I"]},{"Key":"syntax (I","Fragments":["didn't)."]},{"Key":"(I didn't).","Fragments":["And"]},{"Key":"didn't). And","Fragments":["way"]},{"Key":"And way","Fragments":["to"]},{"Key":"go on","Fragments":["validating"]},{"Key":"on validating","Fragments":["the"]},{"Key":"validating the","Fragments":["dnaStr"]},{"Key":"the dnaStr","Fragments":["(which"]},{"Key":"dnaStr (which","Fragments":["I"]},{"Key":"Could upper","Fragments":["case"]},{"Key":"case the","Fragments":["input.","code","legacy"]},{"Key":"didn't either.","Fragments":["I"]},{"Key":"either. I","Fragments":["supposed","saw"]},{"Key":"I supposed","Fragments":["that"]},{"Key":"supposed that","Fragments":["whatever"]},{"Key":"that whatever","Fragments":["was"]},{"Key":"whatever was","Fragments":["generating"]},{"Key":"was generating","Fragments":["the"]},{"Key":"generating the","Fragments":["input","returned"]},{"Key":"input stream","Fragments":["was"]},{"Key":"stream was","Fragments":["likely"]},{"Key":"was likely","Fragments":["to"]},{"Key":"always stick","Fragments":["to"]},{"Key":"stick to","Fragments":["uppercase."]},{"Key":"It's unusual","Fragments":["to"]},{"Key":"unusual to","Fragments":["see"]},{"Key":"a call","Fragments":["to","to","to","of","to"]},{"Key":"that throw","Fragments":["an"]},{"Key":"exception or","Fragments":["not","the","just"]},{"Key":"to force","Fragments":["flow"]},{"Key":"force flow","Fragments":["control."]},{"Key":"flow control.","Fragments":["I've"]},{"Key":"control. I've","Fragments":["always"]},{"Key":"the \"Exceptional\"","Fragments":["pattern"]},{"Key":"\"Exceptional\" pattern","Fragments":[";)"]},{"Key":"very concise,","Fragments":["but"]},{"Key":"tell what's","Fragments":["going"]},{"Key":"on at","Fragments":["a","the"]},{"Key":"a glance.","Fragments":["I","You"]},{"Key":"glance. I","Fragments":["can't"]},{"Key":"can't just","Fragments":["skim"]},{"Key":"just skim","Fragments":["over"]},{"Key":"skim over","Fragments":["it;"]},{"Key":"over it;","Fragments":["I"]},{"Key":"it; I","Fragments":["have"]},{"Key":"to really","Fragments":["think."]},{"Key":"Thanks so","Fragments":["much","much","much!","much"]},{"Key":"much for","Fragments":["the","your","the","your","this"]},{"Key":"help :)","Fragments":["I"]},{"Key":"I REALLY","Fragments":["appreciate"]},{"Key":"REALLY appreciate","Fragments":["it!"]},{"Key":"the sums","Fragments":["upfront"]},{"Key":"sums upfront","Fragments":["is"]},{"Key":"upfront is","Fragments":["okay"]},{"Key":"okay in","Fragments":["this"]},{"Key":"maths was","Fragments":["hard"]},{"Key":"hard (or","Fragments":["needed"]},{"Key":"(or needed","Fragments":["a"]},{"Key":"a web","Fragments":["service"]},{"Key":"web service","Fragments":["call"]},{"Key":"service call","Fragments":["or"]},{"Key":"call or","Fragments":["something)"]},{"Key":"or something)","Fragments":["then","it"]},{"Key":"something) then","Fragments":["only"]},{"Key":"only doing","Fragments":["calculations"]},{"Key":"doing calculations","Fragments":["when"]},{"Key":"calculations when","Fragments":["required","the"]},{"Key":" Naming","Fragments":["your"]},{"Key":"Naming your","Fragments":["variables"]},{"Key":"variables `modX`","Fragments":["may"]},{"Key":"`modX` may","Fragments":["not"]},{"Key":"not help","Fragments":["a","them."]},{"Key":"reader over","Fragments":["just"]},{"Key":"just inlining","Fragments":["the"]},{"Key":"inlining the","Fragments":["sum..."]},{"Key":"the sum...","Fragments":["if"]},{"Key":"sum... if","Fragments":["the"]},{"Key":"reader does","Fragments":["not"]},{"Key":"what `mod`","Fragments":["is"]},{"Key":"`mod` is","Fragments":["or"]},{"Key":"or that","Fragments":["`%`"]},{"Key":"that `%`","Fragments":["is"]},{"Key":"`%` is","Fragments":["mod,"]},{"Key":"is mod,","Fragments":["then"]},{"Key":"mod, then","Fragments":["your"]},{"Key":"then your","Fragments":["code","current","algorithm","code"]},{"Key":"Deeply indented","Fragments":["`if`"]},{"Key":"indented `if`","Fragments":["statements"]},{"Key":"be pretty","Fragments":["confusing"]},{"Key":"read, it","Fragments":["is","also"]},{"Key":"miss which","Fragments":["return"]},{"Key":"which check,","Fragments":["can"]},{"Key":"check, can","Fragments":["you"]},{"Key":"you bring","Fragments":["them","in"]},{"Key":"bring them","Fragments":["together?"]},{"Key":"good argument","Fragments":["that"]},{"Key":"argument that","Fragments":["(in","it's"]},{"Key":"(in general)","Fragments":["methods"]},{"Key":"general) methods","Fragments":["should"]},{"Key":"statement, do","Fragments":["you"]},{"Key":"worth re-writing","Fragments":["so"]},{"Key":"re-writing so","Fragments":["there"]},{"Key":"is but","Fragments":["one"]},{"Key":"can evaluate","Fragments":["the"]},{"Key":"the not","Fragments":["in"]},{"Key":"second set","Fragments":["of"]},{"Key":"set of","Fragments":["paranethesis","functions","inputs","eyes,","code.","symbols"]},{"Key":"of paranethesis","Fragments":["to"]},{"Key":"paranethesis to","Fragments":["create:"]},{"Key":"!= ||","Fragments":["year"]},{"Key":" Hmm","Fragments":["tricksy!","Primes","interesting."]},{"Key":"The intent","Fragments":["is","is"]},{"Key":"is clearly","Fragments":["that","no.","not","the"]},{"Key":"clearly that","Fragments":["the","I"]},{"Key":"name be","Fragments":["`LetterLetterNumberNumberNumber`"]},{"Key":"fact the","Fragments":["regex"]},{"Key":"regex also","Fragments":["matches"]},{"Key":"also matches","Fragments":["numbers"]},{"Key":"matches numbers","Fragments":["in"]},{"Key":"numbers in","Fragments":["the","the","an","possiblePrimes","memory,","memory."]},{"Key":"first two","Fragments":["positions","if's,","if","if","selects"]},{"Key":"two positions","Fragments":["is"]},{"Key":"positions is","Fragments":["a"]},{"Key":"bug I","Fragments":["would"]},{"Key":"good. I'd","Fragments":["be"]},{"Key":"braces for","Fragments":["the","any","an"]},{"Key":"loops just","Fragments":["for"]},{"Key":"for clarity.","Fragments":["And","Use"]},{"Key":"clarity. And","Fragments":["a"]},{"Key":"clause on","Fragments":["the"]},{"Key":"parameter (which","Fragments":["I"]},{"Key":"actually omitted","Fragments":["from"]},{"Key":"omitted from","Fragments":["mine"]},{"Key":"from mine","Fragments":["thinking"]},{"Key":"mine thinking","Fragments":["about"]},{"Key":"about it!).","Fragments":["Other"]},{"Key":"it!). Other","Fragments":["than"]},{"Key":"that, no","Fragments":["issues."]},{"Key":" Unnecessary","Fragments":["paranethesis"]},{"Key":"Unnecessary paranethesis","Fragments":["on"]},{"Key":"paranethesis on","Fragments":["around"]},{"Key":"on around","Fragments":["the"]},{"Key":"entire return","Fragments":["statement."]},{"Key":"me so","Fragments":["I"]},{"Key":"goal is","Fragments":["accomplished.","readability"]},{"Key":"is accomplished.","Fragments":["If"]},{"Key":"accomplished. If","Fragments":["you"]},{"Key":"you condensed","Fragments":["the"]},{"Key":"condensed the","Fragments":["if","text"]},{"Key":"statements down","Fragments":["to","to"]},{"Key":"one the","Fragments":["code","order"]},{"Key":"code formatting","Fragments":["woll"]},{"Key":"formatting woll","Fragments":["get"]},{"Key":"woll get","Fragments":["a"]},{"Key":"bit messy.","Fragments":["(That's","Merging"]},{"Key":"messy. (That's","Fragments":["what"]},{"Key":"(That's what","Fragments":["I"]},{"Key":"did and","Fragments":["I","this"]},{"Key":"read :)","Fragments":[")"]},{"Key":"reading a","Fragments":["few"]},{"Key":"few others","Fragments":["code"]},{"Key":"others code","Fragments":["I"]},{"Key":"a painful","Fragments":["lazy"]},{"Key":"painful lazy","Fragments":["error"]},{"Key":"lazy error","Fragments":["in"]},{"Key":"in writing","Fragments":["multiple"]},{"Key":"writing multiple","Fragments":["returns"]},{"Key":"two sub","Fragments":["methods."]},{"Key":"Look good,","Fragments":["though"]},{"Key":"NucleotideCounts dictionary","Fragments":["will","and","immutable"]},{"Key":"dictionary will","Fragments":["end"]},{"Key":"will end","Fragments":["up"]},{"Key":"up storing","Fragments":["counts","more"]},{"Key":"storing counts","Fragments":["for"]},{"Key":"counts for","Fragments":["non-nucleotide"]},{"Key":"for non-nucleotide","Fragments":["characters"]},{"Key":"non-nucleotide characters","Fragments":["such"]},{"Key":"characters such","Fragments":["as"]},{"Key":"as 'X'","Fragments":["since"]},{"Key":"'X' since","Fragments":["the"]},{"Key":"constructor does","Fragments":["not"]},{"Key":"not validate","Fragments":["that"]},{"Key":"validate that","Fragments":["each","there","each","your","a"]},{"Key":"a nucleotide.","Fragments":["This"]},{"Key":"nucleotide. This","Fragments":["doesn't"]},{"Key":"functional impact","Fragments":["since"]},{"Key":"impact since","Fragments":["your"]},{"Key":"your accessor","Fragments":["does"]},{"Key":"accessor does","Fragments":["the"]},{"Key":"the nucleotide","Fragments":["check,","being","and","in"]},{"Key":"nucleotide check,","Fragments":["but"]},{"Key":"might end","Fragments":["up","up"]},{"Key":"storing more","Fragments":["data"]},{"Key":"more data","Fragments":["than"]},{"Key":"data than","Fragments":["needed!"]},{"Key":"than needed!","Fragments":[":)"]},{"Key":" With","Fragments":["the","Argument","some","10","the"]},{"Key":"exception of","Fragments":["the"]},{"Key":"three return","Fragments":["calls,"]},{"Key":"return calls,","Fragments":["i"]},{"Key":"calls, i","Fragments":["preferred"]},{"Key":"i preferred","Fragments":["the"]},{"Key":"preferred the","Fragments":["first"]},{"Key":"iteration. I","Fragments":["find","now,"]},{"Key":"find code","Fragments":["is"]},{"Key":"read when","Fragments":["the","the"]},{"Key":"the individual","Fragments":["requirements","student","characters","elements","checks","\u003ccode\u003eReplace\u003c/code\u003e","letters"]},{"Key":"individual requirements","Fragments":["are"]},{"Key":"requirements are","Fragments":["broken","missing."]},{"Key":"are broken","Fragments":["out."]},{"Key":"broken out.","Fragments":["That"]},{"Key":"out. That","Fragments":["of"]},{"Key":"That of","Fragments":["course"]},{"Key":"course leads","Fragments":["to"]},{"Key":"but line","Fragments":["count"]},{"Key":"line count","Fragments":["isn't"]},{"Key":"count isn't","Fragments":["the"]},{"Key":"isn't the","Fragments":["end","difference","only","same","way","if","most"]},{"Key":"end game","Fragments":["either."]},{"Key":"much everything","Fragments":["@stephan"]},{"Key":"everything @stephan","Fragments":["said."]},{"Key":"need else","Fragments":["clauses","clauses","clauses","clauses"]},{"Key":"clauses on","Fragments":["if-return","if-return","if-return"]},{"Key":"on if-return","Fragments":["statement.","statements.","statements."]},{"Key":"if-return statement.","Fragments":["Everything"]},{"Key":"statement. Everything","Fragments":["that"]},{"Key":"Everything that","Fragments":["happens"]},{"Key":"an if-return","Fragments":["statement"]},{"Key":" Kind","Fragments":["of","of"]},{"Key":"Kind of","Fragments":["like:","like"]},{"Key":"bool IsQuestion","Fragments":["("]},{"Key":"IsQuestion (","Fragments":["string"]},{"Key":"// Check","Fragments":["if"]},{"Key":"Check if","Fragments":["last"]},{"Key":"if last","Fragments":["character"]},{"Key":"last character","Fragments":["is","it","of","by"]},{"Key":"( input.Length","Fragments":["\u003e"]},{"Key":"input.Length \u003e","Fragments":["0"]},{"Key":"\u003e 0","Fragments":[")","check","-","\u0026\u0026","\u0026\u0026"]},{"Key":"if (input[input.Length","Fragments":["-"]},{"Key":"(input[input.Length -","Fragments":["1].ToString()"]},{"Key":"- 1].ToString()","Fragments":["=="]},{"Key":"1].ToString() ==","Fragments":["\"?\")"]},{"Key":"Also, check","Fragments":["out"]},{"Key":"the \"string\".EndsWith(\"\")","Fragments":["method."]},{"Key":"\"string\".EndsWith(\"\") method.","Fragments":["It'll"]},{"Key":"method. It'll","Fragments":["help"]},{"Key":"It'll help","Fragments":["out"]},{"Key":"out tremendously","Fragments":["with"]},{"Key":"tremendously with","Fragments":["things"]},{"Key":"with things","Fragments":["like","like"]},{"Key":"the IsQuestion","Fragments":["method"]},{"Key":"IsQuestion method","Fragments":["when"]},{"Key":"method when","Fragments":["you"]},{"Key":"mistake in","Fragments":["my"]},{"Key":"my version.","Fragments":["There","Regarding"]},{"Key":"version. There","Fragments":["are"]},{"Key":"are 4","Fragments":["returns"]},{"Key":"4 returns","Fragments":["in"]},{"Key":"it's considered","Fragments":["better"]},{"Key":"considered better","Fragments":["practice"]},{"Key":"better practice","Fragments":["to"]},{"Key":" clean","Fragments":["and"]},{"Key":"basically did","Fragments":["the"]},{"Key":"you however","Fragments":["I"]},{"Key":"an XOR","Fragments":["instead"]},{"Key":"XOR instead","Fragments":["of"]},{"Key":"Okay, so","Fragments":["I've"]},{"Key":"I've cleaned","Fragments":["it"]},{"Key":"bit more,","Fragments":["included","as"]},{"Key":"more, included","Fragments":["an"]},{"Key":"included an","Fragments":["IsNullOrEmpty()"]},{"Key":"an IsNullOrEmpty()","Fragments":["call"]},{"Key":"IsNullOrEmpty() call","Fragments":["at"]},{"Key":"call at","Fragments":["the"]},{"Key":"the beginning","Fragments":["since","of","of","and","of"]},{"Key":"beginning since","Fragments":["I"]},{"Key":"I figure","Fragments":["it's","out"]},{"Key":"figure it's","Fragments":["best"]},{"Key":"it's best","Fragments":["to"]},{"Key":"to catch","Fragments":["empty","any","the","System.Exception","all","this"]},{"Key":"catch empty","Fragments":["and"]},{"Key":"and null","Fragments":["stuff"]},{"Key":"null stuff","Fragments":["right"]},{"Key":"stuff right","Fragments":["off"]},{"Key":"right off","Fragments":["the"]},{"Key":"off the","Fragments":["bat.","cuff,","system","run","else","comparison"]},{"Key":"the bat.","Fragments":["Then"]},{"Key":"bat. Then","Fragments":["I"]},{"Key":"loop instead","Fragments":["of","of"]},{"Key":"of foreach","Fragments":["just"]},{"Key":"foreach just","Fragments":["for"]},{"Key":"for personal","Fragments":["preference,"]},{"Key":"I stored","Fragments":["the","my"]},{"Key":"stored the","Fragments":["current","this.term"]},{"Key":"current letter","Fragments":["in"]},{"Key":"each given","Fragments":["loop"]},{"Key":"given loop","Fragments":["in"]},{"Key":"to making","Fragments":["calling"]},{"Key":"making calling","Fragments":["it"]},{"Key":"calling it","Fragments":["easier/more","out.","once","LeapYear"]},{"Key":"it easier/more","Fragments":["legible."]},{"Key":"easier/more legible.","Fragments":["Also"]},{"Key":"legible. Also","Fragments":["made"]},{"Key":"made his","Fragments":["responses"]},{"Key":"his responses","Fragments":["constants,"]},{"Key":"responses constants,","Fragments":["since"]},{"Key":"constants, since","Fragments":["it"]},{"Key":"makes way","Fragments":["more"]},{"Key":"way more","Fragments":["sense.","readable.","efficient","complicated"]},{"Key":"replace \u003ccode\u003eMath.Pow(10,","Fragments":["9)\u003c/code\u003e"]},{"Key":"\u003ccode\u003eMath.Pow(10, 9)\u003c/code\u003e","Fragments":["with"]},{"Key":"9)\u003c/code\u003e with","Fragments":["\u003ccode\u003e1E9\u003c/code\u003e.","\u003ccode\u003e1E9\u003c/code\u003e"]},{"Key":"with \u003ccode\u003e1E9\u003c/code\u003e.","Fragments":["It","It"]},{"Key":"\u003ccode\u003e1E9\u003c/code\u003e. It","Fragments":["is","is"]},{"Key":"is cleaner","Fragments":["and","-","for","for","than","and"]},{"Key":"cleaner and","Fragments":["more","not","more","always","has"]},{"Key":" sorry,","Fragments":["that"]},{"Key":"sorry, that","Fragments":["is"]},{"Key":"programming past","Fragments":["from"]},{"Key":"past from","Fragments":["1997"]},{"Key":"from 1997","Fragments":["sticking"]},{"Key":"1997 sticking","Fragments":["out"]},{"Key":"sticking out","Fragments":["where"]},{"Key":"can manage","Fragments":["to"]},{"Key":"manage to","Fragments":["avoid"]},{"Key":"avoid a","Fragments":["malloc","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash.","crash."]},{"Key":"a malloc","Fragments":["(memory"]},{"Key":"malloc (memory","Fragments":["allocate"]},{"Key":"(memory allocate","Fragments":["for"]},{"Key":"allocate for","Fragments":["a"]},{"Key":"new variable)","Fragments":["then"]},{"Key":"variable) then","Fragments":["you"]},{"Key":"you avoid","Fragments":["it,","that?","using"]},{"Key":"avoid it,","Fragments":["since"]},{"Key":"it, since","Fragments":["memory","you"]},{"Key":"since memory","Fragments":["was"]},{"Key":"memory was","Fragments":["expensive."]},{"Key":"that sounds","Fragments":["foreign"]},{"Key":"sounds foreign","Fragments":["to"]},{"Key":"to modern","Fragments":["C#"]},{"Key":"modern C#","Fragments":["devs."]},{"Key":"C# devs.","Fragments":[":-)"]},{"Key":"think what","Fragments":["Patel","I'll","should","you"]},{"Key":"what Patel","Fragments":["is"]},{"Key":"Patel is","Fragments":["trying"]},{"Key":"is trying","Fragments":["to"]},{"Key":"say is","Fragments":["more"]},{"Key":"more along","Fragments":["the"]},{"Key":"the various","Fragments":["other","patterns","patterns","languages"]},{"Key":"various other","Fragments":["methods"]},{"Key":"methods strings","Fragments":["have."]},{"Key":"strings have.","Fragments":["Like"]},{"Key":"have. Like","Fragments":["ToUpper()"]},{"Key":"Like ToUpper()","Fragments":["for"]},{"Key":"ToUpper() for","Fragments":["example."]},{"Key":"example. It","Fragments":["can"]},{"Key":"string passed","Fragments":["in"]},{"Key":"passed in","Fragments":["is","not","by","parameters","the","(null,","the","```Func\u003c\u003e```."]},{"Key":"in is","Fragments":["in"]},{"Key":"in upper","Fragments":["case"]},{"Key":"case simply","Fragments":["by"]},{"Key":"if (inputStr.ToUpper()","Fragments":["=="]},{"Key":"(inputStr.ToUpper() ==","Fragments":["inputStr){","inputStr)"]},{"Key":"== inputStr){","Fragments":["do"]},{"Key":"inputStr){ do","Fragments":["things"]},{"Key":"Here we","Fragments":["capitalize"]},{"Key":"we capitalize","Fragments":["inputStr,"]},{"Key":"capitalize inputStr,","Fragments":["and"]},{"Key":"inputStr, and","Fragments":["see"]},{"Key":"it matches","Fragments":["the","both,"]},{"Key":"matches the","Fragments":["inputStr","original"]},{"Key":"the inputStr","Fragments":["passed"]},{"Key":"inputStr passed","Fragments":["in."]},{"Key":"bool IsThisPersonYelling","Fragments":["(string"]},{"Key":"IsThisPersonYelling (string","Fragments":["inputStr)"]},{"Key":"bool personIsYelling","Fragments":["="]},{"Key":"personIsYelling =","Fragments":["(inputStr.ToUpper()"]},{"Key":"= (inputStr.ToUpper()","Fragments":["=="]},{"Key":"== inputStr)","Fragments":["?"]},{"Key":"inputStr) ?","Fragments":["true"]},{"Key":"do similar","Fragments":["things"]},{"Key":"similar things","Fragments":["with"]},{"Key":"things with","Fragments":["string.IsnullOrEmpty(inputStr),"]},{"Key":"with string.IsnullOrEmpty(inputStr),","Fragments":["etc."]},{"Key":"than throwing","Fragments":["Exception,"]},{"Key":"throwing Exception,","Fragments":["maybe"]},{"Key":"Exception, maybe","Fragments":["you"]},{"Key":"should throw","Fragments":["ArgumentException?","in"]},{"Key":"throw ArgumentException?","Fragments":["Isn't"]},{"Key":"ArgumentException? Isn't","Fragments":["that"]},{"Key":"Isn't that","Fragments":["a"]},{"Key":"of validating","Fragments":["input","valid"]},{"Key":"validating input","Fragments":["parameters?"]},{"Key":"And is","Fragments":["there"]},{"Key":"not returning","Fragments":["the"]},{"Key":"same expression","Fragments":["you"]},{"Key":"expression you","Fragments":["are","have"]},{"Key":"are evaluating,","Fragments":["instead"]},{"Key":"evaluating, instead","Fragments":["of"]},{"Key":"statement for","Fragments":["just","the","yells"]},{"Key":"for just","Fragments":["return","for"]},{"Key":"Try evaluating","Fragments":["the"]},{"Key":"evaluating the","Fragments":["expression"]},{"Key":"expression starting","Fragments":["with"]},{"Key":"with y%400","Fragments":["and"]},{"Key":"y%400 and","Fragments":["see"]},{"Key":"see where","Fragments":["that","it","things","you're","the","that"]},{"Key":"that leads,","Fragments":["it"]},{"Key":"leads, it","Fragments":["ends"]},{"Key":"with much","Fragments":["simpler","less,"]},{"Key":"much simpler","Fragments":["expression.","solutions.","then","approach.","and","so"]},{"Key":"My opinion","Fragments":["when"]},{"Key":"opinion when","Fragments":["handling"]},{"Key":"when handling","Fragments":["expressions"]},{"Key":"handling expressions","Fragments":["is"]},{"Key":"that enclosing","Fragments":["them"]},{"Key":"enclosing them","Fragments":["with"]},{"Key":"with brackets","Fragments":["always"]},{"Key":"brackets always","Fragments":["improves"]},{"Key":"always improves","Fragments":["readability."]},{"Key":"And at","Fragments":["the"]},{"Key":"end, yes","Fragments":["there"]},{"Key":"yes there","Fragments":["always"]},{"Key":"there always","Fragments":["will"]},{"Key":"always will","Fragments":["be"]},{"Key":"be people","Fragments":["who"]},{"Key":"who dislike","Fragments":["long"]},{"Key":"dislike long","Fragments":["one-liners"]},{"Key":"long one-liners","Fragments":["because"]},{"Key":"one-liners because","Fragments":["it"]},{"Key":"and cause","Fragments":["huge"]},{"Key":"cause huge","Fragments":["expression"]},{"Key":"huge expression","Fragments":["smashed"]},{"Key":"expression smashed","Fragments":["in"]},{"Key":"smashed in","Fragments":["one"]},{"Key":"try regular","Fragments":["expressions"]},{"Key":"own nitpick,","Fragments":["but"]},{"Key":"that assigning","Fragments":["a"]},{"Key":"assigning a","Fragments":["variable","value","variable"]},{"Key":"variable only","Fragments":["to"]},{"Key":"to immediately","Fragments":["return"]},{"Key":"immediately return","Fragments":["it"]},{"Key":"return it","Fragments":["is","instead,","which","-","at","and","right","all","instantly"]},{"Key":"little pedantic.","Fragments":["Why"]},{"Key":"pedantic. Why","Fragments":["not"]},{"Key":"not make","Fragments":["your","methods","currentPrime","it","Where"]},{"Key":"your checks,","Fragments":["then"]},{"Key":"checks, then","Fragments":["return"]},{"Key":"true else","Fragments":["return"]},{"Key":"on breaking","Fragments":["up"]},{"Key":"breaking up","Fragments":["the","the","the"]},{"Key":"the expression,","Fragments":["though."]},{"Key":"expression, though.","Fragments":["Would"]},{"Key":"though. Would","Fragments":["be"]},{"Key":"Would be","Fragments":["easier","even"]},{"Key":"the eyes","Fragments":["to"]},{"Key":"separate them","Fragments":["out","out"]},{"Key":"them out","Fragments":["into","with","to","with"]},{"Key":"multiple lines,","Fragments":["particularly"]},{"Key":"lines, particularly","Fragments":["where"]},{"Key":"particularly where","Fragments":["you"]},{"Key":"bring in","Fragments":["the"]},{"Key":"the or","Fragments":["operator."]},{"Key":" Slight","Fragments":["clean-up"]},{"Key":"Slight clean-up","Fragments":["+"]},{"Key":"clean-up +","Fragments":["rename"]},{"Key":"+ rename","Fragments":["of"]},{"Key":"rename of","Fragments":["the"]},{"Key":"random digit","Fragments":["function"]},{"Key":"people like","Fragments":["one","the"]},{"Key":"like one","Fragments":["line"]},{"Key":"line complex","Fragments":["statements,"]},{"Key":"complex statements,","Fragments":["which"]},{"Key":"statements, which","Fragments":["I"]},{"Key":"personally think","Fragments":["they"]},{"Key":"are harder","Fragments":["to"]},{"Key":"read. At","Fragments":["least"]},{"Key":"least to","Fragments":["me","me)."]},{"Key":"IMO the","Fragments":["goal"]},{"Key":"than conciseness.","Fragments":["If"]},{"Key":"conciseness. If","Fragments":["a"]},{"Key":"If a","Fragments":["regular","professor","KeyNotFoundException"]},{"Key":"regular ternary","Fragments":["is"]},{"Key":"ternary is","Fragments":["a","very"]},{"Key":"bit unreadable","Fragments":["then"]},{"Key":"unreadable then","Fragments":["a"]},{"Key":"a nested","Fragments":["ternary"]},{"Key":"nested ternary","Fragments":["is","operator"]},{"Key":"very much","Fragments":["so.","for","appreciated."]},{"Key":"much so.","Fragments":["I"]},{"Key":"so. I","Fragments":["would"]},{"Key":"return (year%4","Fragments":["==","=="]},{"Key":"(year%4 ==","Fragments":["0","0"]},{"Key":"\u0026\u0026 (year%100","Fragments":["!="]},{"Key":" (not","Fragments":["that"]},{"Key":"(not that","Fragments":["that's","it"]},{"Key":"that that's","Fragments":["what"]},{"Key":"had in","Fragments":["my","my","this","mind?"]},{"Key":"can clear","Fragments":["up"]},{"Key":"your unused","Fragments":["usings"]},{"Key":"unused usings","Fragments":["in"]},{"Key":"usings in","Fragments":["VS"]},{"Key":"in VS","Fragments":["with"]},{"Key":"VS with","Fragments":["right-click"]},{"Key":"with right-click","Fragments":["=\u003e"]},{"Key":"right-click =\u003e","Fragments":["Organize"]},{"Key":"=\u003e Organize","Fragments":["Usings..."]},{"Key":" @hayden","Fragments":["null"]},{"Key":"@hayden null","Fragments":["would"]},{"Key":"null would","Fragments":["break"]},{"Key":"would break","Fragments":["things","each"]},{"Key":"break things","Fragments":["for"]},{"Key":"for sure,","Fragments":["but"]},{"Key":"sure, but","Fragments":["since","I","I"]},{"Key":"there has","Fragments":["been","to"]},{"Key":"been some","Fragments":["data"]},{"Key":"some data","Fragments":["wrangling"]},{"Key":"data wrangling","Fragments":["before","has"]},{"Key":"wrangling before","Fragments":["this"]},{"Key":"before this","Fragments":["step","one"]},{"Key":"this step","Fragments":["(when"]},{"Key":"step (when","Fragments":["the"]},{"Key":"(when the","Fragments":["original"]},{"Key":"original data","Fragments":["was"]},{"Key":"data was","Fragments":["turned","passed"]},{"Key":"was turned","Fragments":["into"]},{"Key":"the 'old'","Fragments":["dictionary)"]},{"Key":"'old' dictionary)","Fragments":["my"]},{"Key":"dictionary) my","Fragments":["assumption"]},{"Key":"my assumption","Fragments":["is"]},{"Key":"assumption is","Fragments":["that"]},{"Key":"some cleaning","Fragments":["went"]},{"Key":"cleaning went","Fragments":["into"]},{"Key":"went into","Fragments":["that"]},{"Key":"that step.","Fragments":["Might"]},{"Key":"step. Might","Fragments":["not"]},{"Key":"Might not","Fragments":["be"]},{"Key":"great assumption","Fragments":["but"]},{"Key":"assumption but","Fragments":["for"]},{"Key":"the exercises","Fragments":["on","so","so","to","and","is","was","i"]},{"Key":"exercises on","Fragments":["this"]},{"Key":"site I","Fragments":["just"]},{"Key":"just take","Fragments":["the"]},{"Key":"tests as","Fragments":["the","it","it"]},{"Key":"the truth","Fragments":["and"]},{"Key":"truth and","Fragments":["they"]},{"Key":"they don't","Fragments":["bother","match","belong","know"]},{"Key":"bother with","Fragments":["nulls.","them.","it.","the","empty"]},{"Key":"for IDictionary,","Fragments":["it"]},{"Key":"IDictionary, it","Fragments":["might"]},{"Key":"useful to","Fragments":["return"]},{"Key":"it instead,","Fragments":["when"]},{"Key":"instead, when","Fragments":["it"]},{"Key":"to dictionaries","Fragments":["in"]},{"Key":"dictionaries in","Fragments":[".NET"]},{"Key":".NET I","Fragments":["usually"]},{"Key":"usually don't","Fragments":["see"]},{"Key":"point (it's","Fragments":["not"]},{"Key":"(it's not","Fragments":["a"]},{"Key":"a widely","Fragments":["used"]},{"Key":"widely used","Fragments":["interface"]},{"Key":"used interface","Fragments":["anyway)."]},{"Key":" @hayden.","Fragments":["Duplicate"]},{"Key":"@hayden. Duplicate","Fragments":["keys"]},{"Key":"Duplicate keys","Fragments":["in"]},{"Key":"keys in","Fragments":["ToDictionary"]},{"Key":"in ToDictionary","Fragments":["throws"]},{"Key":"ToDictionary throws","Fragments":["an"]},{"Key":" Linq","Fragments":["has","seems","is"]},{"Key":"Linq has","Fragments":["been"]},{"Key":"been around","Fragments":["long"]},{"Key":"around long","Fragments":["enough"]},{"Key":"long enough","Fragments":["now"]},{"Key":"enough now","Fragments":["that"]},{"Key":"that any","Fragments":["serious","of","time"]},{"Key":"any serious","Fragments":[".NET"]},{"Key":"serious .NET","Fragments":["programmer"]},{"Key":".NET programmer","Fragments":["has"]},{"Key":"programmer has","Fragments":["to"]},{"Key":"to assume","Fragments":["that","nothing","it"]},{"Key":"assume that","Fragments":["they","the","you","you","almost","not","if"]},{"Key":"maintain Linq","Fragments":["code."]},{"Key":"Linq code.","Fragments":["That's"]},{"Key":"code. That's","Fragments":["my"]},{"Key":"opinion anyway,","Fragments":["but"]},{"Key":"anyway, but","Fragments":["sure,"]},{"Key":"but sure,","Fragments":["a"]},{"Key":"sure, a","Fragments":["lot"]},{"Key":"people are","Fragments":["still","using."]},{"Key":"still uncomfortable","Fragments":["with"]},{"Key":"uncomfortable with","Fragments":["it"]},{"Key":"it unfortunately.","Fragments":["Or"]},{"Key":"unfortunately. Or","Fragments":["did"]},{"Key":"Or did","Fragments":["you"]},{"Key":"you specifically","Fragments":["mean","throw","want"]},{"Key":"specifically mean","Fragments":["the"]},{"Key":"mean the","Fragments":["query","'if'","same","input","`Split`,"]},{"Key":"query syntax?","Fragments":["I"]},{"Key":"syntax? I","Fragments":["usually"]},{"Key":"usually stick","Fragments":["with"]},{"Key":"with Method-Linq","Fragments":["but"]},{"Key":"Method-Linq but","Fragments":["is"]},{"Key":"some cases","Fragments":["(like","I","where"]},{"Key":"cases (like","Fragments":["this"]},{"Key":"(like this","Fragments":["one)"]},{"Key":"this one)","Fragments":["I"]},{"Key":"one) I","Fragments":["think"]},{"Key":"syntax reads","Fragments":["clearer."]},{"Key":"reads clearer.","Fragments":["The"]},{"Key":"clearer. The","Fragments":["mapping"]},{"Key":"The mapping","Fragments":["to"]},{"Key":"mapping to","Fragments":["SelectMany"]},{"Key":"to SelectMany","Fragments":["in"]},{"Key":"SelectMany in","Fragments":["this"]},{"Key":"case might","Fragments":["faze"]},{"Key":"might faze","Fragments":["some"]},{"Key":"faze some","Fragments":["people"]},{"Key":"people but","Fragments":["the"]},{"Key":"double from","Fragments":["mirrors"]},{"Key":"from mirrors","Fragments":["the"]},{"Key":"mirrors the","Fragments":["double"]},{"Key":"double foreach","Fragments":["I've"]},{"Key":"foreach I've","Fragments":["seen"]},{"Key":"seen in","Fragments":["a"]},{"Key":"solutions on","Fragments":["here"]},{"Key":"here so","Fragments":["it"]},{"Key":"it shouldn't","Fragments":["cause","be","make"]},{"Key":"cause that","Fragments":["much"]},{"Key":"that much","Fragments":["trouble","indentation,","bloat,"]},{"Key":"much trouble","Fragments":["I","given"]},{"Key":"think. It","Fragments":["is"]},{"Key":"point though","Fragments":["so"]},{"Key":"so thank","Fragments":["you"]},{"Key":" Hi","Fragments":["!","Jaguilar,","@lois","@eladio-walsh","There,","there!","there,","Gabriel,","Gabriel,","there.","there."]},{"Key":"Hi !","Fragments":["Is"]},{"Key":"! Is","Fragments":["the"]},{"Key":"Is the","Fragments":["line"]},{"Key":" ```int","Fragments":["aKey","fits"]},{"Key":"```int aKey","Fragments":["="]},{"Key":"aKey =","Fragments":["aEntry.Key;```"]},{"Key":" really","Fragments":["necessary"]},{"Key":"originally used","Fragments":["\u003ccode\u003ereturn"]},{"Key":"used \u003ccode\u003ereturn","Fragments":["(year"]},{"Key":"== 0);\u003c/code\u003e,","Fragments":["but"]},{"Key":"0);\u003c/code\u003e, but","Fragments":["I"]},{"Key":"that too","Fragments":["unreadable.","unreadable.","many"]},{"Key":"ternary operator:","Fragments":["\u003ccode\u003ereturn"]},{"Key":"operator: \u003ccode\u003ereturn","Fragments":["year"]},{"Key":"\u003ccode\u003ereturn year","Fragments":["%","%"]},{"Key":"? year","Fragments":["%"]},{"Key":": year","Fragments":["%"]},{"Key":"== 0;\u003c/code\u003e,","Fragments":["but"]},{"Key":"0;\u003c/code\u003e, but","Fragments":["I"]},{"Key":"again found","Fragments":["that"]},{"Key":" Finally","Fragments":["I","you've","but"]},{"Key":"Finally I","Fragments":["split"]},{"Key":"I split","Fragments":["it","my","out"]},{"Key":"split it","Fragments":["up"]},{"Key":"up into","Fragments":["if","a"]},{"Key":"into if","Fragments":["statements."]},{"Key":"with Xamarin","Fragments":["but"]},{"Key":"Xamarin but","Fragments":["it"]},{"Key":"not compiling","Fragments":["into"]},{"Key":"compiling into","Fragments":["a"]},{"Key":"a .dll","Fragments":["and"]},{"Key":".dll and","Fragments":["then"]},{"Key":"then running","Fragments":["NUnit"]},{"Key":"running NUnit","Fragments":["on"]},{"Key":"as set","Fragments":["out"]},{"Key":"set out","Fragments":["on"]},{"Key":"help page","Fragments":["linked"]},{"Key":"page linked","Fragments":["above."]},{"Key":"linked above.","Fragments":["There"]},{"Key":"above. There","Fragments":["is"]},{"Key":"any output","Fragments":["code,"]},{"Key":"output code,","Fragments":["just"]},{"Key":"the asserts","Fragments":["in"]},{"Key":"asserts in","Fragments":["the"]},{"Key":"that, your","Fragments":["IsLeap()"]},{"Key":"your IsLeap()","Fragments":["function"]},{"Key":"IsLeap() function","Fragments":["looks"]},{"Key":"function looks","Fragments":["fine."]},{"Key":"a recursive","Fragments":["method"]},{"Key":"recursive method","Fragments":["checking"]},{"Key":"method checking","Fragments":["if"]},{"Key":"are as","Fragments":["many"]},{"Key":"many times","Fragments":["a","those","myself"]},{"Key":"times a","Fragments":["letter","second,"]},{"Key":"letter (the","Fragments":["first"]},{"Key":"(the first","Fragments":["of","letter"]},{"Key":"first of","Fragments":["the","the","day"]},{"Key":"the word)","Fragments":["in"]},{"Key":"word) in","Fragments":["the"]},{"Key":"private field","Fragments":["_word.","and"]},{"Key":"Removed some","Fragments":["useless"]},{"Key":"some useless","Fragments":["code."]},{"Key":"don't find","Fragments":["the","it"]},{"Key":"all clear","Fragments":["to"]},{"Key":"clear to","Fragments":["read.","me","me","look","use"]},{"Key":"could pull","Fragments":["out"]},{"Key":"pull out","Fragments":["each","the"]},{"Key":"each section","Fragments":["to"]},{"Key":"section to","Fragments":["a"]},{"Key":"private method,","Fragments":["or"]},{"Key":"method, or","Fragments":["simply"]},{"Key":"or simply","Fragments":["simplify"]},{"Key":"simply simplify","Fragments":["the"]},{"Key":"the middle","Fragments":["to"]},{"Key":"middle to","Fragments":["`year%100"]},{"Key":"to `year%100","Fragments":["!="]},{"Key":"`year%100 !=","Fragments":["0"]},{"Key":"keep coherence","Fragments":["use"]},{"Key":"coherence use","Fragments":["**bool**"]},{"Key":"use **bool**","Fragments":["instead"]},{"Key":"**bool** instead","Fragments":["of"]},{"Key":"A reference","Fragments":["http://stylecop.soyuz5.com/SA1121.html"]},{"Key":"Made a","Fragments":["small"]},{"Key":"small change","Fragments":["to","I'd"]},{"Key":"tests by","Fragments":["changing","their"]},{"Key":"of them","Fragments":["to","would","is","are","result","(returnSum).","as","i","should","too?"]},{"Key":"which the","Fragments":["words","code","constructor","items"]},{"Key":"words appear","Fragments":["in"]},{"Key":"appear in","Fragments":["the"]},{"Key":"the input,","Fragments":["as","converting"]},{"Key":"input, as","Fragments":["originally","for"]},{"Key":"as originally","Fragments":["they","expected"]},{"Key":"originally they","Fragments":["did"]},{"Key":"they did","Fragments":["not"]},{"Key":"follow a","Fragments":["pattern.","specific","character"]},{"Key":"your point,","Fragments":["but","but","the"]},{"Key":"first language","Fragments":["was"]},{"Key":"language was","Fragments":["C"]},{"Key":"was C","Fragments":["so"]},{"Key":"C so","Fragments":["for"]},{"Key":"so for","Fragments":["loops","this"]},{"Key":"loops are","Fragments":["readable","worth","for"]},{"Key":"are readable","Fragments":["to"]},{"Key":"I dunno","Fragments":["either."]},{"Key":"dunno either.","Fragments":["I'd"]},{"Key":"either. I'd","Fragments":["suggest"]},{"Key":"I'd suggest","Fragments":["picking","is","saving","is","using","would","only","having"]},{"Key":"suggest picking","Fragments":["up"]},{"Key":"picking up","Fragments":["another"]},{"Key":"up another","Fragments":["language."]},{"Key":"another language.","Fragments":["I've"]},{"Key":"language. I've","Fragments":["started"]},{"Key":"started doing","Fragments":["ruby"]},{"Key":"doing ruby","Fragments":["exercises"]},{"Key":"ruby exercises","Fragments":["as"]},{"Key":"exercises as","Fragments":["I","an"]},{"Key":"a ruby","Fragments":["class"]},{"Key":"ruby class","Fragments":["in"]},{"Key":"in school.","Fragments":["I'm"]},{"Key":"school. I'm","Fragments":["up"]},{"Key":"I'm up","Fragments":["to","in"]},{"Key":"to 62","Fragments":["exercises"]},{"Key":"62 exercises","Fragments":["done"]},{"Key":"exercises done","Fragments":["so"]},{"Key":"done so","Fragments":["far","now"]},{"Key":"so far","Fragments":["and","but","has","but","has","with","that","I","is"]},{"Key":"far and","Fragments":["I've"]},{"Key":"and I've","Fragments":["not"]},{"Key":"I've not","Fragments":["hit"]},{"Key":"not hit","Fragments":["the"]},{"Key":"hit the","Fragments":["end"]},{"Key":"end yet.","Fragments":[":-)"]},{"Key":"you're solution,","Fragments":["it's"]},{"Key":"solution, it's","Fragments":["pretty","very"]},{"Key":"straightforward. One","Fragments":["thing"]},{"Key":"to document","Fragments":["the"]},{"Key":"document the","Fragments":["reason"]},{"Key":"the predicates","Fragments":["in"]},{"Key":"predicates in","Fragments":["the","this"]},{"Key":"are significant,","Fragments":["either"]},{"Key":"significant, either","Fragments":["with"]},{"Key":"either with","Fragments":["comments"]},{"Key":"with comments","Fragments":["or"]},{"Key":"comments or","Fragments":["with"]},{"Key":"or with","Fragments":["some"]},{"Key":"some explanatory","Fragments":["variables."]},{"Key":"explanatory variables.","Fragments":["That"]},{"Key":"variables. That","Fragments":["way"]},{"Key":"way if,","Fragments":["for"]},{"Key":"if, for","Fragments":["example,"]},{"Key":"for example,","Fragments":["the"]},{"Key":"example, the","Fragments":["way","\u003cb\u003e","Keep"]},{"Key":"determine when","Fragments":["someone"]},{"Key":"when someone","Fragments":["is"]},{"Key":"someone is","Fragments":["shouting","unfamiliar","reading"]},{"Key":"is shouting","Fragments":["changes"]},{"Key":"shouting changes","Fragments":["it's"]},{"Key":"changes it's","Fragments":["trivial"]},{"Key":"it's trivial","Fragments":["to"]},{"Key":"trivial to","Fragments":["know"]},{"Key":"what code","Fragments":["has"]},{"Key":"Another is","Fragments":["to","to"]},{"Key":"predicate of","Fragments":["the"]},{"Key":"if instead,","Fragments":["that"]},{"Key":"instead, that","Fragments":["would"]},{"Key":"it so","Fragments":["the","it","that","you're","I","far"]},{"Key":"more expensive","Fragments":["calculations","than","for","than"]},{"Key":"expensive calculations","Fragments":["doesn't"]},{"Key":"calculations doesn't","Fragments":["have"]},{"Key":"run for","Fragments":["all"]},{"Key":"all input.","Fragments":["Tiny"]},{"Key":"input. Tiny","Fragments":["optimization"]},{"Key":"Tiny optimization","Fragments":["in"]},{"Key":"optimization in","Fragments":["this","the"]},{"Key":"case but","Fragments":["still.","a","I"]},{"Key":"with @olga-FredrikE","Fragments":["."]},{"Key":"@olga-FredrikE .","Fragments":["Early"]},{"Key":". Early","Fragments":["returns"]},{"Key":"Early returns","Fragments":["do"]},{"Key":"returns do","Fragments":["make"]},{"Key":"do make","Fragments":["it","this","the"]},{"Key":"it \"easier","Fragments":["to"]},{"Key":"\"easier to","Fragments":["predict"]},{"Key":"going on\",","Fragments":["in"]},{"Key":"on\", in","Fragments":["my"]},{"Key":"my opinion.","Fragments":["If"]},{"Key":"opinion. If","Fragments":["you"]},{"Key":"you follow","Fragments":["a","the"]},{"Key":"specific flow","Fragments":["in"]},{"Key":"an early","Fragments":["return","exit","return"]},{"Key":"early return","Fragments":["you","immediately"]},{"Key":"after that","Fragments":["point"]},{"Key":"that point","Fragments":["can","if","and"]},{"Key":"point can","Fragments":["change"]},{"Key":"can change","Fragments":["anything"]},{"Key":"change anything","Fragments":["so"]},{"Key":"anything so","Fragments":["you"]},{"Key":"just stop","Fragments":["reading,"]},{"Key":"stop reading,","Fragments":["otherwise"]},{"Key":"reading, otherwise","Fragments":["you"]},{"Key":"otherwise you","Fragments":["have","have"]},{"Key":"entire method","Fragments":["just"]},{"Key":"method just","Fragments":["to"]},{"Key":"there aren't","Fragments":["any"]},{"Key":"aren't any","Fragments":["other"]},{"Key":"can mess","Fragments":["with"]},{"Key":"mess with","Fragments":["the"]},{"Key":"the state","Fragments":["of"]},{"Key":"state of","Fragments":["the","the"]},{"Key":"biggest trade-off","Fragments":["for"]},{"Key":"trade-off for","Fragments":["me","being"]},{"Key":"me was","Fragments":["how"]},{"Key":"was how","Fragments":["to"]},{"Key":"handle acronyms","Fragments":["and"]},{"Key":"acronyms and","Fragments":["exclamations."]},{"Key":"and exclamations.","Fragments":["I"]},{"Key":"exclamations. I","Fragments":["decided"]},{"Key":"decided that","Fragments":["if","with","there","a","the"]},{"Key":"3 symbols,","Fragments":["then"]},{"Key":"symbols, then","Fragments":["it"]},{"Key":"probably is","Fragments":["an"]},{"Key":"good, only","Fragments":["a"]},{"Key":"of very","Fragments":["minor"]},{"Key":"nitpicks. I","Fragments":["would"]},{"Key":"break each","Fragments":["of"]},{"Key":"three schedule","Fragments":["types"]},{"Key":"schedule types","Fragments":["out","calculate"]},{"Key":"types out","Fragments":["to"]},{"Key":"to their","Fragments":["own","Precious"]},{"Key":"own methods","Fragments":["and","to"]},{"Key":"are relying","Fragments":["on"]},{"Key":"relying on","Fragments":["the","an","the","a"]},{"Key":"an enum,","Fragments":["you"]},{"Key":"enum, you","Fragments":["should","could"]},{"Key":"should explicitly","Fragments":["set","declare"]},{"Key":"explicitly set","Fragments":["those","those,"]},{"Key":"set those","Fragments":["values"]},{"Key":"case someone","Fragments":["changes"]},{"Key":"someone changes","Fragments":["it"]},{"Key":"changes it","Fragments":["in"]},{"Key":"Good use","Fragments":["of","of","of"]},{"Key":"but maybe","Fragments":["a","I'm","there's","that"]},{"Key":"bit over-engineered","Fragments":["with"]},{"Key":"over-engineered with","Fragments":["all"]},{"Key":"with all","Fragments":["the","the","the"]},{"Key":"you re-arranged","Fragments":["your"]},{"Key":"re-arranged your","Fragments":["enum,"]},{"Key":"your enum,","Fragments":["you"]},{"Key":"int value","Fragments":["to"]},{"Key":"idea you","Fragments":["could","could","could"]},{"Key":"could pick","Fragments":["individual"]},{"Key":"pick individual","Fragments":["characters"]},{"Key":"individual characters","Fragments":["out","that"]},{"Key":"characters out","Fragments":["of"]},{"Key":"string simply","Fragments":["using"]},{"Key":"simply using","Fragments":["string[x]"]},{"Key":" very","Fragments":["nice","nice"]},{"Key":"using Math.Min(x.Length,","Fragments":["y.Length)"]},{"Key":"Math.Min(x.Length, y.Length)","Fragments":["to"]},{"Key":"y.Length) to","Fragments":["calc"]},{"Key":"to calc","Fragments":["the"]},{"Key":"calc the","Fragments":["shortest"]},{"Key":"the shortest","Fragments":["string","strand"]},{"Key":"shortest string","Fragments":["length"]},{"Key":"Trying to","Fragments":["be","enumerate","be"]},{"Key":"more OO","Fragments":["less"]},{"Key":"OO less","Fragments":["procedural."]},{"Key":" @marlen","Fragments":["This"]},{"Key":"@marlen This","Fragments":["is"]},{"Key":"dislike TDD.","Fragments":["If"]},{"Key":"TDD. If","Fragments":["the"]},{"Key":"tests aren't","Fragments":["perfect"]},{"Key":"aren't perfect","Fragments":["(which"]},{"Key":"perfect (which","Fragments":["is"]},{"Key":"really tough","Fragments":["to"]},{"Key":"to do)","Fragments":["and"]},{"Key":"do) and","Fragments":["you"]},{"Key":"only code","Fragments":["to","to","to"]},{"Key":"tests, there","Fragments":["could"]},{"Key":"huge potential","Fragments":["for"]},{"Key":"potential for","Fragments":["errors","the"]},{"Key":"for errors","Fragments":["to"]},{"Key":"errors to","Fragments":["happen"]},{"Key":"to happen","Fragments":["because","O:-)"]},{"Key":"happen because","Fragments":["you"]},{"Key":"you end","Fragments":["up","up"]},{"Key":"up not","Fragments":["thinking"]},{"Key":"not thinking","Fragments":["about"]},{"Key":"about other","Fragments":["business","languages(yet).","methods"]},{"Key":"other business","Fragments":["rules."]},{"Key":"business rules.","Fragments":["In"]},{"Key":"rules. In","Fragments":["this"]},{"Key":"scenario, there","Fragments":["absolutely"]},{"Key":"there absolutely","Fragments":["should"]},{"Key":"absolutely should","Fragments":["have"]},{"Key":"been tests","Fragments":["for"]},{"Key":"null things","Fragments":["being"]},{"Key":"things being","Fragments":["passed"]},{"Key":"being passed","Fragments":["in.","to","to"]},{"Key":"passed in.","Fragments":["I"]},{"Key":"in. I","Fragments":["guess"]},{"Key":"that I've","Fragments":["gotten","probably"]},{"Key":"gotten burned","Fragments":["on"]},{"Key":"burned on","Fragments":["null"]},{"Key":"on null","Fragments":["issues","inputs."]},{"Key":"null issues","Fragments":["so"]},{"Key":"issues so","Fragments":["much"]},{"Key":"much that","Fragments":["I"]},{"Key":"can to","Fragments":["avoid"]},{"Key":"avoid them","Fragments":["automatically"]},{"Key":"them automatically","Fragments":["now."]},{"Key":"automatically now.","Fragments":[":)"]},{"Key":" @al","Fragments":["I"]},{"Key":"@al I","Fragments":["totally"]},{"Key":"with you,","Fragments":["null","I'll"]},{"Key":"you, null","Fragments":["checks"]},{"Key":"checks are","Fragments":["really","sufficient","probably"]},{"Key":"really important,","Fragments":["although"]},{"Key":"important, although","Fragments":["you"]},{"Key":"although you","Fragments":["can't","may","might","might"]},{"Key":"really blame","Fragments":["TDD"]},{"Key":"people not","Fragments":["writing"]},{"Key":"writing good","Fragments":["tests,","code,"]},{"Key":"good tests,","Fragments":["and"]},{"Key":"and TDD","Fragments":["usually"]},{"Key":"TDD usually","Fragments":["leads"]},{"Key":"usually leads","Fragments":["not"]},{"Key":"leads not","Fragments":["some"]},{"Key":"not some","Fragments":["null"]},{"Key":"some null","Fragments":["tests"]},{"Key":"null tests","Fragments":["pretty"]},{"Key":"tests pretty","Fragments":["early."]},{"Key":" People","Fragments":["who","who"]},{"Key":"People who","Fragments":["don't","do"]},{"Key":"who don't","Fragments":["write"]},{"Key":"don't write","Fragments":["tests"]},{"Key":"write tests","Fragments":["at"]},{"Key":"tests at","Fragments":["all"]},{"Key":"all are","Fragments":["probably","valid"]},{"Key":"the ones","Fragments":["not","involving","you've"]},{"Key":"ones not","Fragments":["checking"]},{"Key":"for nulls","Fragments":["anyway","iff"]},{"Key":"nulls anyway","Fragments":["so"]},{"Key":"anyway so","Fragments":["this"]},{"Key":"Like I","Fragments":["said","said","said,"]},{"Key":"I said","Fragments":["in","if","-","I've","before,","that","in","in","you"]},{"Key":"said in","Fragments":["this","submission","submission"]},{"Key":"previous data","Fragments":["wrangling"]},{"Key":"wrangling has","Fragments":["solved"]},{"Key":"has solved","Fragments":["the"]},{"Key":"null issue.","Fragments":["If"]},{"Key":"issue. If","Fragments":["it"]},{"Key":"it hasn't","Fragments":["it"]},{"Key":"hasn't it","Fragments":["doesn't"]},{"Key":"really matter,","Fragments":["I"]},{"Key":"matter, I","Fragments":["don't"]},{"Key":"really have","Fragments":["any","here.","a"]},{"Key":"exception either","Fragments":["way."]},{"Key":"either way.","Fragments":["If"]},{"Key":"way. If","Fragments":["I","it"]},{"Key":"I throw","Fragments":["an"]},{"Key":"does at","Fragments":["the"]},{"Key":"first usage","Fragments":["doesn't"]},{"Key":"usage doesn't","Fragments":["matter"]},{"Key":"doesn't matter","Fragments":["to","what"]},{"Key":"matter to","Fragments":["me,"]},{"Key":"me, it's","Fragments":["a"]},{"Key":"programmer error","Fragments":["either"]},{"Key":"error either","Fragments":["way"]},{"Key":"either way","Fragments":["that","wouldn't"]},{"Key":"really should","Fragments":["have","start","get","have"]},{"Key":"been solved","Fragments":["in"]},{"Key":"solved in","Fragments":["the"]},{"Key":"previous step.","Fragments":["Now"]},{"Key":"step. Now","Fragments":["if"]},{"Key":"had been","Fragments":["passing","given","thinking","fixed"]},{"Key":"been passing","Fragments":["the"]},{"Key":"passing the","Fragments":["argument","test","tests,","tests."]},{"Key":"argument along","Fragments":["to"]},{"Key":"along to","Fragments":["other"]},{"Key":"to other","Fragments":["methods","exercises,","approaches."]},{"Key":"methods then","Fragments":["I"]},{"Key":"have checked","Fragments":["for"]},{"Key":"checked for","Fragments":["nulls","more","X,","a","a","1582","it","isosceles."]},{"Key":"nulls iff","Fragments":["this"]},{"Key":"iff this","Fragments":["was"]},{"Key":"simple exercise","Fragments":["that","but","that","but"]},{"Key":"exercise that","Fragments":["is","there"]},{"Key":"would rename","Fragments":["`canDivideBy`","the"]},{"Key":"rename `canDivideBy`","Fragments":["to"]},{"Key":"`canDivideBy` to","Fragments":["`isDivisibleBy`"]},{"Key":"to `isDivisibleBy`","Fragments":["and"]},{"Key":"`isDivisibleBy` and","Fragments":["move"]},{"Key":"and move","Fragments":["all","it","on","the"]},{"Key":"move all","Fragments":["variable"]},{"Key":"all variable","Fragments":["declarations"]},{"Key":"variable declarations","Fragments":["to"]},{"Key":"declarations to","Fragments":["the"]},{"Key":"top. I","Fragments":["would"]},{"Key":"also introduce","Fragments":["a"]},{"Key":"variable for","Fragments":["the","what"]},{"Key":"Code should","Fragments":["be"]},{"Key":"be readable,","Fragments":["and","can"]},{"Key":"readable, and","Fragments":["this","expressive"]},{"Key":"and this","Fragments":["one","function","can","doesn't","would","is","was","complicates"]},{"Key":"been easy","Fragments":["to"]},{"Key":"statements directly,","Fragments":["instead"]},{"Key":"directly, instead","Fragments":["of"]},{"Key":"of making","Fragments":["the","the","the"]},{"Key":"separate methods.","Fragments":["I","The"]},{"Key":"way because","Fragments":["if"]},{"Key":"program were","Fragments":["to"]},{"Key":"complicated, it","Fragments":["would","can"]},{"Key":"methods separated","Fragments":["out."]},{"Key":"separated out.","Fragments":["I"]},{"Key":"wouldn't want","Fragments":["to","to","to","someone","anything"]},{"Key":"and refactor","Fragments":["the"]},{"Key":"conditionals into","Fragments":["new","their"]},{"Key":"into new","Fragments":["methods"]},{"Key":"new methods","Fragments":["later","for"]},{"Key":"methods later","Fragments":["down"]},{"Key":"later down","Fragments":["the"]},{"Key":"That's great,","Fragments":["thanks"]},{"Key":"great, thanks","Fragments":["man!"]},{"Key":"comments. It","Fragments":["doesn't"]},{"Key":"take long","Fragments":["before"]},{"Key":"long before","Fragments":["the"]},{"Key":"comments get","Fragments":["out"]},{"Key":"code, and","Fragments":["you","it","it's"]},{"Key":"want as","Fragments":["little"]},{"Key":"little as","Fragments":["possible","one"]},{"Key":"to maintain.","Fragments":["Don't","With"]},{"Key":"maintain. Don't","Fragments":["worry"]},{"Key":"Don't worry","Fragments":["about"]},{"Key":"about bugs,","Fragments":["you"]},{"Key":"bugs, you","Fragments":["have"]},{"Key":" `theYear`-variable","Fragments":["doesn't"]},{"Key":"`theYear`-variable doesn't","Fragments":["change,"]},{"Key":"doesn't change,","Fragments":["so"]},{"Key":"change, so","Fragments":["you"]},{"Key":"the `year`-parameter","Fragments":["directly."]},{"Key":"Also, a","Fragments":["nice"]},{"Key":"nice trick","Fragments":["to"]},{"Key":"trick to","Fragments":["make","this"]},{"Key":"read, is","Fragments":["to"]},{"Key":"extract each","Fragments":["if-condition"]},{"Key":"each if-condition","Fragments":["as"]},{"Key":"if-condition as","Fragments":["variables"]},{"Key":"as variables","Fragments":["with","in"]},{"Key":"with meaningful","Fragments":["names,","names"]},{"Key":"meaningful names,","Fragments":["like:"]},{"Key":" isDivisibleByFour","Fragments":["="]},{"Key":"methods. The","Fragments":["intention","benefit"]},{"Key":"The intention","Fragments":["is","is","of"]},{"Key":"intention is","Fragments":["very","a"]},{"Key":"implementation details","Fragments":["are","by"]},{"Key":"details are","Fragments":["hidden","a"]},{"Key":"are hidden","Fragments":["from"]},{"Key":"hidden from","Fragments":["the"]},{"Key":"It's nothing","Fragments":["wrong"]},{"Key":"returns when","Fragments":["you"]},{"Key":"are calculating","Fragments":["a","the"]},{"Key":"calculating a","Fragments":["value","value."]},{"Key":"value like","Fragments":["this.","this:"]},{"Key":"this. Multiple","Fragments":["returns"]},{"Key":"Multiple returns","Fragments":["actually"]},{"Key":"returns actually","Fragments":["makes"]},{"Key":"write shorter","Fragments":["methods"]},{"Key":"shorter methods","Fragments":["without"]},{"Key":"methods without","Fragments":["compromising"]},{"Key":"without compromising","Fragments":["the"]},{"Key":"compromising the","Fragments":["readability."]},{"Key":"code reviewer,","Fragments":["I"]},{"Key":"reviewer, I","Fragments":["would"]},{"Key":"prefer all","Fragments":["unused"]},{"Key":"`using` statements","Fragments":["be"]},{"Key":"statements be","Fragments":["deleted."]},{"Key":"be deleted.","Fragments":["I"]},{"Key":"deleted. I","Fragments":["am"]},{"Key":"the xml-documentation","Fragments":["style,"]},{"Key":"xml-documentation style,","Fragments":["as"]},{"Key":"style, as","Fragments":["those"]},{"Key":"as those","Fragments":["also"]},{"Key":"those also","Fragments":["makes","putting"]},{"Key":" `IsLeap`","Fragments":["does"]},{"Key":"`IsLeap` does","Fragments":["nothing"]},{"Key":"nothing but","Fragments":["delegate"]},{"Key":"but delegate","Fragments":["to"]},{"Key":"delegate to","Fragments":["`IsYearDivisible`."]},{"Key":"to `IsYearDivisible`.","Fragments":["I"]},{"Key":"`IsYearDivisible`. I","Fragments":["think"]},{"Key":"would benefit","Fragments":["if","from"]},{"Key":"benefit if","Fragments":["you"]},{"Key":"you inlined","Fragments":["that"]},{"Key":"inlined that","Fragments":["method."]},{"Key":"read `IsYearDivisible`","Fragments":["on"]},{"Key":"`IsYearDivisible` on","Fragments":["its"]},{"Key":"its own,","Fragments":["I"]},{"Key":"wonder what","Fragments":["it's","else"]},{"Key":"divisible by.","Fragments":["The"]},{"Key":"by. The","Fragments":["signature"]},{"Key":"The signature","Fragments":["doesn't","for"]},{"Key":"signature doesn't","Fragments":["say."]},{"Key":"doesn't say.","Fragments":["When"]},{"Key":"say. When","Fragments":["I"]},{"Key":"that method,","Fragments":["I","for"]},{"Key":"checks more","Fragments":["than"]},{"Key":"one condition","Fragments":["while","instead","ends"]},{"Key":"condition while","Fragments":["the"]},{"Key":"signature kind","Fragments":["of"]},{"Key":"of says","Fragments":["it"]},{"Key":"says it","Fragments":["checks","wants","ANY"]},{"Key":"checks only","Fragments":["one."]},{"Key":"the `^`","Fragments":["operator"]},{"Key":"`^` operator","Fragments":["before,"]},{"Key":"operator before,","Fragments":["so"]},{"Key":"before, so","Fragments":["I"]},{"Key":"it does.","Fragments":["But"]},{"Key":"does. But","Fragments":["if","most"]},{"Key":"tests passes,","Fragments":["then"]},{"Key":"passes, then","Fragments":["it"]},{"Key":"it obviously","Fragments":["does."]},{"Key":"obviously does.","Fragments":["But"]},{"Key":"But most","Fragments":["people"]},{"Key":"the `||`","Fragments":["operator,"]},{"Key":"`||` operator,","Fragments":["so"]},{"Key":"operator, so","Fragments":["I"]},{"Key":"the `IsDivisibleByValue`","Fragments":["method"]},{"Key":"`IsDivisibleByValue` method","Fragments":[":-)"]},{"Key":"would rather","Fragments":["see"]},{"Key":"see each","Fragments":["`year"]},{"Key":"each `year","Fragments":["%"]},{"Key":"0` extracted","Fragments":["to"]},{"Key":"extracted to","Fragments":["variables"]},{"Key":"to variables","Fragments":["with","with"]},{"Key":"meaningful names","Fragments":["and"]},{"Key":"calculation returned","Fragments":["directly."]},{"Key":"That may","Fragments":["be"]},{"Key":"true that","Fragments":["DateTime","it"]},{"Key":"that DateTime","Fragments":["has"]},{"Key":"DateTime has","Fragments":["those","a","a"]},{"Key":"has those","Fragments":["requirements,"]},{"Key":"those requirements,","Fragments":["but"]},{"Key":"requirements, but","Fragments":["why","that","it"]},{"Key":"why would","Fragments":["you","you","storing","you"]},{"Key":"you limit","Fragments":["your"]},{"Key":"limit your","Fragments":["own"]},{"Key":"own code","Fragments":["because","returned","returned"]},{"Key":"of that?","Fragments":["The"]},{"Key":"that? The","Fragments":["exercise"]},{"Key":"The exercise","Fragments":["itself","said"]},{"Key":"exercise itself","Fragments":["doesn't"]},{"Key":"itself doesn't","Fragments":["say"]},{"Key":"say anything","Fragments":["about","is"]},{"Key":"good rule","Fragments":["to"]},{"Key":"rule to","Fragments":["always"]},{"Key":"surround one","Fragments":["liners"]},{"Key":"liners with","Fragments":["curly"]},{"Key":"braces when","Fragments":["they"]},{"Key":"It's just","Fragments":["too","a","too","counting"]},{"Key":"just too","Fragments":["easy","much"]},{"Key":"too easy","Fragments":["to","so","to"]},{"Key":"make mistakes","Fragments":["if"]},{"Key":"mistakes if","Fragments":["we"]},{"Key":"could explicitly","Fragments":["set"]},{"Key":"set those,","Fragments":["thanks!!"]},{"Key":" rprouse,","Fragments":["thanks"]},{"Key":"rprouse, thanks","Fragments":["for"]},{"Key":"your feedback.","Fragments":["I","Improving"]},{"Key":"feedback. I","Fragments":["have","typically","have","will"]},{"Key":"have simplified","Fragments":["my","the","the"]},{"Key":"simplified my","Fragments":["code"]},{"Key":"superfluous second","Fragments":["if"]},{"Key":"statement (see","Fragments":["new"]},{"Key":"(see new","Fragments":["submission)."]},{"Key":"Now in","Fragments":["GenerateRandomCharacters"]},{"Key":"in GenerateRandomCharacters","Fragments":["()"]},{"Key":"GenerateRandomCharacters ()","Fragments":["you"]},{"Key":"() you","Fragments":["can"]},{"Key":"can turn","Fragments":["that","for"]},{"Key":"turn that","Fragments":["into","into"]},{"Key":"generator i.e.","Fragments":["using","a"]},{"Key":"i.e. using","Fragments":["yield"]},{"Key":"using yield","Fragments":["return","too","return"]},{"Key":"yield return","Fragments":["and","character;","GetEncodedCharacter(character);","item;","which","a"]},{"Key":"return and","Fragments":["you"]},{"Key":"need SrtingBuilder","Fragments":["there.You"]},{"Key":"SrtingBuilder there.You","Fragments":["should"]},{"Key":"there.You should","Fragments":["still"]},{"Key":"still use","Fragments":["StringBuilder","`int`"]},{"Key":"use StringBuilder","Fragments":["but","here","interally"]},{"Key":"StringBuilder but","Fragments":["in","is"]},{"Key":"in GenerateRandomName.","Fragments":["(or"]},{"Key":"GenerateRandomName. (or","Fragments":["String.Concat"]},{"Key":"(or String.Concat","Fragments":["which"]},{"Key":"String.Concat which","Fragments":["uses"]},{"Key":"which uses","Fragments":["SrtrngBuilder"]},{"Key":"uses SrtrngBuilder","Fragments":["internally).Try"]},{"Key":"SrtrngBuilder internally).Try","Fragments":["it."]},{"Key":"Cleaned up","Fragments":["and"]},{"Key":"bit. Because","Fragments":["this"]},{"Key":"Because this","Fragments":["is"]},{"Key":"so simple,","Fragments":["I"]},{"Key":"simple, I","Fragments":["removed","would"]},{"Key":"extra bool","Fragments":["for"]},{"Key":"bool for","Fragments":["indicating"]},{"Key":"for indicating","Fragments":["whether"]},{"Key":"indicating whether","Fragments":["the"]},{"Key":"conditions have","Fragments":["been"]},{"Key":"been met","Fragments":["or"]},{"Key":"met or","Fragments":["not."]},{"Key":" Created","Fragments":["a","a","base"]},{"Key":"Created a","Fragments":["separate","list-variable"]},{"Key":"for matching","Fragments":["the"]},{"Key":"the words,","Fragments":["to","rather"]},{"Key":"words, to","Fragments":["make"]},{"Key":"readable. Although","Fragments":["the"]},{"Key":"Although the","Fragments":["linq","tests"]},{"Key":"linq in","Fragments":["the"]},{"Key":"foreach isn't","Fragments":["really"]},{"Key":"helping with","Fragments":["that."]},{"Key":"linq where","Fragments":["I"]},{"Key":"I can,","Fragments":["it's","and"]},{"Key":"can, it's","Fragments":["quick"]},{"Key":"it's quick","Fragments":["and"]},{"Key":"and powerful.","Fragments":["The"]},{"Key":"powerful. The","Fragments":["whole"]},{"Key":"The whole","Fragments":["foreach","point","point","point"]},{"Key":"whole foreach","Fragments":["in"]},{"Key":"foreach in","Fragments":["the","match","Score()?"]},{"Key":"the Match","Fragments":["method","function","method","method"]},{"Key":"Match method","Fragments":["could","for","output","to","to"]},{"Key":"changed into","Fragments":["a"]},{"Key":"linq expression,","Fragments":["but"]},{"Key":"it hardly","Fragments":["readable."]},{"Key":"Now why","Fragments":["store"]},{"Key":"why store","Fragments":["template"]},{"Key":"store template","Fragments":["as"]},{"Key":"template as","Fragments":["_template"]},{"Key":"as _template","Fragments":["and"]},{"Key":"_template and","Fragments":["than"]},{"Key":"and than","Fragments":["apply"]},{"Key":"than apply","Fragments":["ToLower()"]},{"Key":"apply ToLower()","Fragments":["which"]},{"Key":"ToLower() which","Fragments":["is"]},{"Key":"could put","Fragments":["the","it"]},{"Key":"the candidates","Fragments":["ToLower"]},{"Key":"candidates ToLower","Fragments":["into"]},{"Key":"ToLower into","Fragments":["the"]},{"Key":"statement then","Fragments":["the"]},{"Key":"the enumeration","Fragments":["contains","DayOfWeek","are","was","so","was","or","stating","couldn't","about","is","so","and"]},{"Key":"enumeration contains","Fragments":["only"]},{"Key":"contains only","Fragments":["the"]},{"Key":"the match","Fragments":["logic.","list"]},{"Key":" SortLetters()","Fragments":["looks"]},{"Key":"SortLetters() looks","Fragments":["a"]},{"Key":"useful general","Fragments":["extension."]},{"Key":"IMHO the","Fragments":["dictionary","challenge"]},{"Key":"refactored and","Fragments":["indexed"]},{"Key":"and indexed","Fragments":["by"]},{"Key":"indexed by","Fragments":["score.","int"]},{"Key":"by score.","Fragments":["However"]},{"Key":"score. However","Fragments":["you"]},{"Key":"you alogorithm","Fragments":["is"]},{"Key":"alogorithm is","Fragments":["quite"]},{"Key":"quite neat","Fragments":["as"]},{"Key":"neat as","Fragments":["it"]},{"Key":"* I","Fragments":["consider"]},{"Key":"I consider","Fragments":["the","it"]},{"Key":"input silence","Fragments":["if"]},{"Key":"silence if","Fragments":["it's"]},{"Key":"it's null","Fragments":["or"]},{"Key":"empty (length==0),","Fragments":["or"]},{"Key":"(length==0), or","Fragments":["failing"]},{"Key":"or failing","Fragments":["that","is"]},{"Key":"failing that","Fragments":["if"]},{"Key":"its length","Fragments":["is"]},{"Key":"length is","Fragments":["0","10"]},{"Key":"0 after","Fragments":["a","the"]},{"Key":"a trim","Fragments":["(removing","and"]},{"Key":"trim (removing","Fragments":["all"]},{"Key":"(removing all","Fragments":["spaces"]},{"Key":"all spaces","Fragments":["and"]},{"Key":"spaces and","Fragments":["tabs)","other","then"]},{"Key":"* Then","Fragments":["I","I"]},{"Key":"look for","Fragments":["yelling.","clues","valid","exceptions","a"]},{"Key":"for yelling.","Fragments":["It"]},{"Key":"yelling. It","Fragments":["seems"]},{"Key":"seems only","Fragments":["letters"]},{"Key":"only letters","Fragments":["in","so"]},{"Key":"in uppercase","Fragments":["are","can"]},{"Key":"uppercase are","Fragments":["considered","to"]},{"Key":"are considered","Fragments":["yelling"]},{"Key":"considered yelling","Fragments":["in"]},{"Key":"yelling in","Fragments":["tests,"]},{"Key":"so things","Fragments":["like"]},{"Key":"like exclamation","Fragments":["marks"]},{"Key":"marks are","Fragments":["normal"]},{"Key":"are normal","Fragments":["talk"]},{"Key":"normal talk","Fragments":["for"]},{"Key":"talk for","Fragments":["Bob."]},{"Key":"for \"?\"","Fragments":["at","or"]},{"Key":"\"?\" at","Fragments":["the"]},{"Key":"of input,","Fragments":["and"]},{"Key":"input, and","Fragments":["consider","avoid"]},{"Key":"and consider","Fragments":["them","the","if"]},{"Key":"consider them","Fragments":["questions"]},{"Key":"* If","Fragments":["all"]},{"Key":"If all","Fragments":["this","of","has"]},{"Key":"has failed,","Fragments":["get"]},{"Key":"failed, get","Fragments":["a"]},{"Key":"Good call","Fragments":["on","on","on"]},{"Key":"on these.","Fragments":["Adding"]},{"Key":"these. Adding","Fragments":["random"]},{"Key":"Adding random","Fragments":["values"]},{"Key":"random values","Fragments":["to"]},{"Key":"values to","Fragments":["```'A'```","be"]},{"Key":"to ```'A'```","Fragments":["seems"]},{"Key":"```'A'``` seems","Fragments":["borderline"]},{"Key":"seems borderline","Fragments":["\"clever\""]},{"Key":"borderline \"clever\"","Fragments":["but"]},{"Key":"\"clever\" but","Fragments":["on"]},{"Key":"hand, that","Fragments":["```ALPHABET```"]},{"Key":"that ```ALPHABET```","Fragments":["constant"]},{"Key":"```ALPHABET``` constant","Fragments":["always"]},{"Key":"constant always","Fragments":["bothered"]},{"Key":"always bothered","Fragments":["me"]},{"Key":"bothered me","Fragments":[":-P","the"]},{"Key":"to suffice","Fragments":["with"]},{"Key":"suffice with","Fragments":["one"]},{"Key":"conditions and","Fragments":["not"]},{"Key":"not both","Fragments":["for"]},{"Key":"your chill","Fragments":["out"]},{"Key":"chill out","Fragments":["response"]},{"Key":" !comment.Any(char.IsLower)","Fragments":["\u0026\u0026"]},{"Key":"!comment.Any(char.IsLower) \u0026\u0026","Fragments":["comment.Any(char.IsUpper)"]},{"Key":"being redundant,","Fragments":["you"]},{"Key":"are saying","Fragments":["don't"]},{"Key":"saying don't","Fragments":["pass"]},{"Key":"don't pass","Fragments":["if"]},{"Key":"any character","Fragments":["is","instead","other"]},{"Key":"is lowercase","Fragments":["and"]},{"Key":"lowercase and","Fragments":["do"]},{"Key":"do pass","Fragments":["if"]},{"Key":"is uppercase.","Fragments":["if"]},{"Key":"uppercase. if","Fragments":["the"]},{"Key":"first is","Fragments":["true,"]},{"Key":"true, wouldn't","Fragments":["the"]},{"Key":"wouldn't the","Fragments":["second"]},{"Key":"second one","Fragments":["also"]},{"Key":"one also","Fragments":["always"]},{"Key":" @winona","Fragments":["As"]},{"Key":"@winona As","Fragments":["a"]},{"Key":"a consultant,","Fragments":["you"]},{"Key":"consultant, you","Fragments":["have"]},{"Key":"read in","Fragments":["between","one","meatspace","a"]},{"Key":"in between","Fragments":["the"]},{"Key":"lines a","Fragments":["lot"]},{"Key":"business says","Fragments":["it"]},{"Key":"it wants","Fragments":["and"]},{"Key":"wants and","Fragments":["what"]},{"Key":"actually wants.","Fragments":["Thus,"]},{"Key":"wants. Thus,","Fragments":["I'm"]},{"Key":"Thus, I'm","Fragments":["used"]},{"Key":"I'm used","Fragments":["to","to","to","to"]},{"Key":"to putting","Fragments":["a"]},{"Key":"of validation","Fragments":["in"]},{"Key":"validation in","Fragments":["code","the"]},{"Key":"Should probably","Fragments":["put"]},{"Key":"probably put","Fragments":["a"]},{"Key":"few constants","Fragments":["in"]},{"Key":"constants in","Fragments":["there"]},{"Key":"there somewhere,","Fragments":["especially"]},{"Key":"somewhere, especially","Fragments":["for"]},{"Key":"especially for","Fragments":["days"]},{"Key":"for days","Fragments":["in"]},{"Key":"days in","Fragments":["a","the","one"]},{"Key":"this works,","Fragments":["I","considering"]},{"Key":"think hard-coding","Fragments":["what"]},{"Key":"hard-coding what","Fragments":["each"]},{"Key":"each exact","Fragments":["verse"]},{"Key":"exact verse","Fragments":["is"]},{"Key":"verse is","Fragments":["was","different."]},{"Key":"is was","Fragments":["the"]},{"Key":"point was","Fragments":["to","to","to"]},{"Key":"various patterns","Fragments":["and","and"]},{"Key":"patterns and","Fragments":["build","build"]},{"Key":"and build","Fragments":["up","up"]},{"Key":"build up","Fragments":["each","each"]},{"Key":"up each","Fragments":["of","of"]},{"Key":"the verses","Fragments":["via","via","are","would"]},{"Key":"verses via","Fragments":["some","some"]},{"Key":"via some","Fragments":["sort","sort"]},{"Key":"of looping","Fragments":["logic.","logic._","and","the","using"]},{"Key":"look over-engineered","Fragments":["but"]},{"Key":"I pulled","Fragments":["everything","the","down"]},{"Key":"pulled everything","Fragments":["into"]},{"Key":"everything into","Fragments":["a","one"]},{"Key":"single class","Fragments":["(or"]},{"Key":"class (or","Fragments":["maybe","even"]},{"Key":"(or maybe","Fragments":["a"]},{"Key":"second class)","Fragments":["I"]},{"Key":"class) I","Fragments":["would"]},{"Key":"of ```if```/```else```","Fragments":["statements."]},{"Key":"```if```/```else``` statements.","Fragments":["I'd"]},{"Key":"statements. I'd","Fragments":["like"]},{"Key":"avoid that","Fragments":["if","2nd","which"]},{"Key":"if possible.","Fragments":["Maybe"]},{"Key":"possible. Maybe","Fragments":["I'm"]},{"Key":"Maybe I'm","Fragments":["missing"]},{"Key":"I'm missing","Fragments":["something?"]},{"Key":"missing something?","Fragments":["What"]},{"Key":"something? What","Fragments":["parts"]},{"Key":"What parts","Fragments":["seem"]},{"Key":"parts seem","Fragments":["over-engineered"]},{"Key":"seem over-engineered","Fragments":["to"]},{"Key":"Regarding re-arranging","Fragments":["the"]},{"Key":"re-arranging the","Fragments":["enum,"]},{"Key":"the enum,","Fragments":["I'm","therefore"]},{"Key":"enum, I'm","Fragments":["not"]},{"Key":"you mean.","Fragments":["Would","I"]},{"Key":"mean. Would","Fragments":["I"]},{"Key":"Would I","Fragments":["still"]},{"Key":"still need","Fragments":["a"]},{"Key":"of schedulers","Fragments":["if"]},{"Key":"schedulers if","Fragments":["I"]},{"Key":"Changed to","Fragments":["using","using"]},{"Key":"using char","Fragments":["math,"]},{"Key":"char math,","Fragments":["which"]},{"Key":"math, which","Fragments":["is"]},{"Key":"do originally","Fragments":["but","but"]},{"Key":"originally but","Fragments":["wasn't","I"]},{"Key":"missed just","Fragments":["returning"]},{"Key":"results of","Fragments":["the","the"]},{"Key":"the statement.","Fragments":["That"]},{"Key":"would definitely","Fragments":["be"]},{"Key":"like such","Fragments":["a","a"]},{"Key":"short simple","Fragments":["expression"]},{"Key":"simple expression","Fragments":["doesn't","as"]},{"Key":"expression doesn't","Fragments":["warrant"]},{"Key":"doesn't warrant","Fragments":["extra"]},{"Key":"warrant extra","Fragments":["parens,"]},{"Key":"extra parens,","Fragments":["but"]},{"Key":"parens, but","Fragments":["if"]},{"Key":"the CLI","Fragments":["to"]},{"Key":"CLI to","Fragments":["re-submit,"]},{"Key":"to re-submit,","Fragments":["I"]},{"Key":"re-submit, I","Fragments":["would"]},{"Key":"go ahead","Fragments":["an","and"]},{"Key":"ahead an","Fragments":["put"]},{"Key":"an put","Fragments":["them"]},{"Key":"run this","Fragments":["code"]},{"Key":"code against","Fragments":["my"]},{"Key":"against my","Fragments":["class"]},{"Key":"class it","Fragments":["does","makes","has"]},{"Key":"If works","Fragments":["fine"]},{"Key":"works fine","Fragments":["when"]},{"Key":"fine when","Fragments":["I"]},{"Key":"remove a","Fragments":["zero","call"]},{"Key":"zero from","Fragments":["the"]},{"Key":"constructor call.","Fragments":["Other"]},{"Key":"call. Other","Fragments":["people's"]},{"Key":"Other people's","Fragments":["code"]},{"Key":"people's code","Fragments":["work","and"]},{"Key":"code work","Fragments":["fine"]},{"Key":"work fine","Fragments":["with","in"]},{"Key":"the larger","Fragments":["number."]},{"Key":"larger number.","Fragments":["Why"]},{"Key":"number. Why","Fragments":["is"]},{"Key":" Sieve","Fragments":["test"]},{"Key":"Sieve test","Fragments":["="]},{"Key":"test =","Fragments":["new"]},{"Key":"(var t","Fragments":["in"]},{"Key":"t in","Fragments":["test.Primes)"]},{"Key":" Console.Write(t","Fragments":["+"]},{"Key":"Console.Write(t +","Fragments":["\""]},{"Key":"+ \"","Fragments":["\");"]},{"Key":"admit, checking","Fragments":["for"]},{"Key":"the X","Fragments":["in","is"]},{"Key":"X in","Fragments":["count"]},{"Key":"in count","Fragments":["feels"]},{"Key":"count feels","Fragments":["like"]},{"Key":"a hack.","Fragments":["The"]},{"Key":"hack. The","Fragments":["point"]},{"Key":"The point","Fragments":["(I"]},{"Key":"point (I","Fragments":["think...)"]},{"Key":"(I think...)","Fragments":["was"]},{"Key":"think...) was","Fragments":["to"]},{"Key":"nucleotide being","Fragments":["passed"]},{"Key":"passed to","Fragments":["count","my","the","OrderBy"]},{"Key":"count was","Fragments":["valid,"]},{"Key":"was valid,","Fragments":["i.e."]},{"Key":"valid, i.e.","Fragments":["one"]},{"Key":"i.e. one","Fragments":["of"]},{"Key":"the 4","Fragments":["allowed","static","and"]},{"Key":"4 allowed","Fragments":["nucleotides"]},{"Key":"allowed nucleotides","Fragments":["ACGT."]},{"Key":"of really","Fragments":["long,"]},{"Key":"really long,","Fragments":["descriptive"]},{"Key":"long, descriptive","Fragments":["names"]},{"Key":"descriptive names","Fragments":["and"]},{"Key":"and creating","Fragments":["helper","new","a","lists.","output"]},{"Key":"creating helper","Fragments":["functions."]},{"Key":"helper functions.","Fragments":["Nothing"]},{"Key":"functions. Nothing","Fragments":["wrong"]},{"Key":"with that,","Fragments":["but"]},{"Key":"my style","Fragments":["at"]},{"Key":"style at","Fragments":["all"]},{"Key":"all so","Fragments":["it"]},{"Key":"But it","Fragments":["works,","will","passed","seemed","does","is","does","works"]},{"Key":"works, and","Fragments":["I"]},{"Key":"follow it,","Fragments":["so"]},{"Key":"it, so","Fragments":["good","I"]},{"Key":"so good","Fragments":["job!"]},{"Key":"good job!","Fragments":[":)","I"]},{"Key":"with @jaycee","Fragments":["the"]},{"Key":"@jaycee the","Fragments":["tests"]},{"Key":"should come","Fragments":["from"]},{"Key":"same source,","Fragments":["so"]},{"Key":"source, so","Fragments":["you"]},{"Key":"update the","Fragments":["code","variable","solution","database"]},{"Key":"place if","Fragments":["they","and"]},{"Key":"they later","Fragments":["decide"]},{"Key":"later decide","Fragments":["the"]},{"Key":"decide the","Fragments":["X"]},{"Key":"ok to","Fragments":["include."]},{"Key":"You already","Fragments":["have","got"]},{"Key":"Dictionary seeded","Fragments":["with"]},{"Key":"seeded with","Fragments":["the"]},{"Key":"the approved","Fragments":["values"]},{"Key":"approved values","Fragments":["set"]},{"Key":"values set","Fragments":["to"]},{"Key":"to zero,","Fragments":["so"]},{"Key":"zero, so","Fragments":["I"]},{"Key":" throw","Fragments":["new","new","new","new","new","new","new","new","new","new","new","new"]},{"Key":"throw new","Fragments":["InvalidNucleotideException();","ArgumentException(\"Strands","ArgumentException(string.Format(\"Letter","ArgumentException(\"String","ArgumentException(\"name\");","InvalidNucleotideException();","InvalidNucleotideException();","Exception(\"Meetup","ArgumentException(\"This","ArgumentException(\"This","ArgumentException(\"Invalid","TriangleException();","TriangleException();","TriangleException();","ArgumentException();"]},{"Key":"Just cleaned","Fragments":["up"]},{"Key":"up wrong","Fragments":["comments"]},{"Key":"wrong comments","Fragments":["(was"]},{"Key":"comments (was","Fragments":["gift,"]},{"Key":"(was gift,","Fragments":["not"]},{"Key":"gift, not","Fragments":["a"]},{"Key":"a verse)","Fragments":["and"]},{"Key":"verse) and","Fragments":["removed"]},{"Key":"removed a","Fragments":["using","test"]},{"Key":"am nearly","Fragments":["positive"]},{"Key":"nearly positive","Fragments":["this"]},{"Key":"positive this","Fragments":["can"]},{"Key":"with identifying","Fragments":["specific"]},{"Key":"identifying specific","Fragments":["contents"]},{"Key":"specific contents","Fragments":["of"]},{"Key":"contents of","Fragments":["a"]},{"Key":"first because","Fragments":["it","I"]},{"Key":"that caused","Fragments":["the"]},{"Key":"caused the","Fragments":["biggest"]},{"Key":"biggest difference","Fragments":["in"]},{"Key":"return result.","Fragments":["other"]},{"Key":"result. other","Fragments":["than"]},{"Key":"that, it","Fragments":["is","is","looks","is"]},{"Key":"a pile","Fragments":["of"]},{"Key":"pile of","Fragments":["if"]},{"Key":"It passes","Fragments":["the","the","all","everything"]},{"Key":"test though,","Fragments":["so"]},{"Key":"guess there's","Fragments":["that.","a"]},{"Key":"used pascal","Fragments":["case"]},{"Key":"pascal case","Fragments":["on"]},{"Key":"case on","Fragments":["\"Things\""]},{"Key":"on \"Things\"","Fragments":["and"]},{"Key":"\"Things\" and","Fragments":["camel"]},{"Key":"and camel","Fragments":["on"]},{"Key":"camel on","Fragments":["\"ordinalNumberWords\"."]},{"Key":"on \"ordinalNumberWords\".","Fragments":[":)"]},{"Key":"what \"nb\"","Fragments":["stands"]},{"Key":"\"nb\" stands","Fragments":["for."]},{"Key":"stands for.","Fragments":["Could"]},{"Key":"for. Could","Fragments":["use"]},{"Key":"two separate","Fragments":["lists","lookups"]},{"Key":"separate lists","Fragments":["like"]},{"Key":"lists like","Fragments":["that,"]},{"Key":"also just","Fragments":["use"]},{"Key":"a Dictionary,","Fragments":["too.","the"]},{"Key":"that, pretty","Fragments":["good!"]},{"Key":"of NucleotideCounts","Fragments":["to","instead."]},{"Key":"NucleotideCounts to","Fragments":["an"]},{"Key":"an IDictionary","Fragments":["for"]},{"Key":"IDictionary for","Fragments":["more"]},{"Key":"more flexibility.","Fragments":["Also,"]},{"Key":"flexibility. Also,","Fragments":["after"]},{"Key":"Also, after","Fragments":["populating"]},{"Key":"after populating","Fragments":["NucleotideCounts,"]},{"Key":"populating NucleotideCounts,","Fragments":["I"]},{"Key":"NucleotideCounts, I","Fragments":["decided"]},{"Key":"wrap it","Fragments":["in"]},{"Key":"a ReadOnlyDictionary","Fragments":["to"]},{"Key":"ReadOnlyDictionary to","Fragments":["keep"]},{"Key":"keep people","Fragments":["from"]},{"Key":"from messing","Fragments":["with","with"]},{"Key":"messing with","Fragments":["my","my","my"]},{"Key":"my data.","Fragments":[":-)"]},{"Key":" @bernita,","Fragments":["don't"]},{"Key":"@bernita, don't","Fragments":["take"]},{"Key":"don't take","Fragments":["it","much"]},{"Key":"too negatively,","Fragments":["I"]},{"Key":"negatively, I","Fragments":["was"]},{"Key":"was reluctant","Fragments":["to"]},{"Key":"reluctant to","Fragments":["call"]},{"Key":"it over-engineered.","Fragments":["I"]},{"Key":"over-engineered. I","Fragments":["like"]},{"Key":"of scheduler","Fragments":["classes"]},{"Key":"scheduler classes","Fragments":["so"]},{"Key":"classes so","Fragments":["that"]},{"Key":"additional schedulers","Fragments":["in"]},{"Key":"schedulers in","Fragments":["the"]},{"Key":"the future.","Fragments":["It","If"]},{"Key":"future. It","Fragments":["is"]},{"Key":"fine line","Fragments":["though."]},{"Key":"line though.","Fragments":["I"]},{"Key":"though. I","Fragments":["think","count","don't","think","need"]},{"Key":"a shorter","Fragments":["solution"]},{"Key":"shorter solution","Fragments":["might"]},{"Key":"solution might","Fragments":["also"]},{"Key":"more maintainable","Fragments":["in"]},{"Key":"maintainable in","Fragments":["the"]},{"Key":"future and","Fragments":["more"]},{"Key":"easily grok'd.","Fragments":["It"]},{"Key":"grok'd. It","Fragments":["is"]},{"Key":"is personal","Fragments":["style.","preference."]},{"Key":" Re-ordering","Fragments":["the"]},{"Key":"Re-ordering the","Fragments":["enum"]},{"Key":"the enum","Fragments":["won't","value","order","and","to","backing","member","Thanks","and","to"]},{"Key":"enum won't","Fragments":["help"]},{"Key":"won't help","Fragments":["much"]},{"Key":"help much","Fragments":["with"]},{"Key":"much with","Fragments":["this"]},{"Key":"implementation, but","Fragments":["if","that","still"]},{"Key":"you reduced","Fragments":["it,"]},{"Key":"reduced it,","Fragments":["you"]},{"Key":"enum value","Fragments":["as"]},{"Key":"as part","Fragments":["of","of","of","of","of","of","of"]},{"Key":"algorithm. See","Fragments":["my"]},{"Key":"See my","Fragments":["attempt","solution","comment"]},{"Key":"my attempt","Fragments":["for"]},{"Key":"attempt for","Fragments":["an"]},{"Key":"good. you","Fragments":["could"]},{"Key":"also reduce","Fragments":["it","it"]},{"Key":"the conditional,","Fragments":["but"]},{"Key":"conditional, but","Fragments":["that"]},{"Key":"this iteration,","Fragments":["I","I","I","I","I","I"]},{"Key":"iteration, I","Fragments":["decided","made","decided","took","did","will","only"]},{"Key":"and fit","Fragments":["the"]},{"Key":"fit the","Fragments":["whole"]},{"Key":"whole program","Fragments":["on"]},{"Key":"program on","Fragments":["one"]},{"Key":"line, which","Fragments":["seems"]},{"Key":"which seems","Fragments":["to","like"]},{"Key":"have worked,","Fragments":["but"]},{"Key":"worked, but","Fragments":["probably","I"]},{"Key":"but probably","Fragments":["reduced","should"]},{"Key":"probably reduced","Fragments":["the"]},{"Key":"reduced the","Fragments":["readability."]},{"Key":"feedback guys.","Fragments":["In","I've","@jarvis"]},{"Key":"guys. In","Fragments":["my"]},{"Key":"iteration I've","Fragments":["amended","added","expanded"]},{"Key":"I've amended","Fragments":["my","with"]},{"Key":"amended my","Fragments":["formatting"]},{"Key":"formatting inconsistencies,","Fragments":["and"]},{"Key":"inconsistencies, and","Fragments":["IsLeap"]},{"Key":"IsLeap is","Fragments":["now"]},{"Key":" @lionel,","Fragments":["good"]},{"Key":"@lionel, good","Fragments":["spot"]},{"Key":"good spot","Fragments":["on"]},{"Key":"spot on","Fragments":["the"]},{"Key":"the camel","Fragments":["casing,"]},{"Key":"camel casing,","Fragments":["thank"]},{"Key":"casing, thank","Fragments":["you,"]},{"Key":"you, but","Fragments":["I'm"]},{"Key":"I'm afraid","Fragments":["I"]},{"Key":"afraid I","Fragments":["disagree"]},{"Key":"separation of","Fragments":["the","logic,","concerns."]},{"Key":"simple methods.","Fragments":["I"]},{"Key":"readable, than","Fragments":["a"]},{"Key":"and operators","Fragments":["-"]},{"Key":"operators -","Fragments":["IMO"]},{"Key":"- IMO","Fragments":["that"]},{"Key":"IMO that","Fragments":["can"]},{"Key":"can only","Fragments":["be","be","execute","assume","ever","be"]},{"Key":"Wow your","Fragments":["right.."]},{"Key":"your right..","Fragments":["that"]},{"Key":"right.. that","Fragments":["was"]},{"Key":"was silly","Fragments":["stupid"]},{"Key":"silly stupid","Fragments":["of"]},{"Key":"stupid of","Fragments":["me"]},{"Key":"of me","Fragments":[":P","that"]},{"Key":"me :P","Fragments":["I"]},{"Key":":P I","Fragments":["know"]},{"Key":"this i","Fragments":["just","realized"]},{"Key":"i just","Fragments":["over"]},{"Key":"over looked","Fragments":["it."]},{"Key":"Doesn't pass","Fragments":["tests,"]},{"Key":"pass tests,","Fragments":["need"]},{"Key":"tests, need","Fragments":["help"]},{"Key":"need help","Fragments":["to","figuring"]},{"Key":" while","Fragments":["looking","I","(value","(--i","(number","(date.DayOfWeek","(num","this","(value","(value","you're"]},{"Key":"while looking","Fragments":["at"]},{"Key":"peoples submissions","Fragments":["I"]},{"Key":"submissions I","Fragments":["realised","realized","decided","think"]},{"Key":"I realised","Fragments":["I","@zachary","it"]},{"Key":"realised I","Fragments":["had"]},{"Key":"returned letters","Fragments":["lower-case."]},{"Key":"the IsUpper","Fragments":["check","method"]},{"Key":"IsUpper check","Fragments":["to"]},{"Key":"the \"1,","Fragments":["2,"]},{"Key":"\"1, 2,","Fragments":["3\"","3\"","3\")."]},{"Key":"2, 3\"","Fragments":["test.","converted"]},{"Key":"3\" test.","Fragments":["In"]},{"Key":"test. In","Fragments":["that"]},{"Key":"case, there","Fragments":["are"]},{"Key":"no lowercase","Fragments":["characters"]},{"Key":"lowercase characters","Fragments":["(so"]},{"Key":"characters (so","Fragments":["it"]},{"Key":"(so it","Fragments":["would"]},{"Key":"be interpreted","Fragments":["as"]},{"Key":"interpreted as","Fragments":["shouting)"]},{"Key":"as shouting)","Fragments":["but"]},{"Key":"shouting) but","Fragments":["it"]},{"Key":"isn't actually","Fragments":["shouting."]},{"Key":"actually shouting.","Fragments":["By"]},{"Key":"shouting. By","Fragments":["checking"]},{"Key":"By checking","Fragments":["that","\u003cb\u003e!AreEqual\u003c/b\u003e"]},{"Key":"checking that","Fragments":["there","the"]},{"Key":"one uppercase","Fragments":["character"]},{"Key":"I filter","Fragments":["out"]},{"Key":"filter out","Fragments":["any","duplicate"]},{"Key":"out any","Fragments":["symbol-only"]},{"Key":"any symbol-only","Fragments":["strings."]},{"Key":"My solution","Fragments":["to","took","was","is"]},{"Key":"problem, while","Fragments":["it"]},{"Key":"did pass","Fragments":["all"]},{"Key":"tests, seems","Fragments":["horribly"]},{"Key":"seems horribly","Fragments":["kludge-like,"]},{"Key":"horribly kludge-like,","Fragments":["and"]},{"Key":"kludge-like, and","Fragments":["I'm"]},{"Key":"too satisfied","Fragments":["with"]},{"Key":"the results,","Fragments":["so","it"]},{"Key":"results, so","Fragments":["I'm"]},{"Key":"in seeing","Fragments":["the"]},{"Key":"seeing the","Fragments":["feedback","pattern"]},{"Key":"feedback on","Fragments":["this.","the","the","the"]},{"Key":"works, it","Fragments":["seems"]},{"Key":"extra effort","Fragments":["to"]},{"Key":"to divide","Fragments":["every"]},{"Key":"divide every","Fragments":["check"]},{"Key":"every check","Fragments":["into"]},{"Key":"function. For","Fragments":["something"]},{"Key":"For something","Fragments":["as","this","this"]},{"Key":"something as","Fragments":["easy","simple"]},{"Key":"as easy","Fragments":["as","to"]},{"Key":"easy as","Fragments":["a"]},{"Key":"single math","Fragments":["statement,"]},{"Key":"math statement,","Fragments":["you"]},{"Key":"statement, you","Fragments":["might","might"]},{"Key":"well write","Fragments":["the"]},{"Key":"statement as","Fragments":["to","readable","well?"]},{"Key":"a function.","Fragments":["There","It's","Just"]},{"Key":"There isn't","Fragments":["enough"]},{"Key":"isn't enough","Fragments":["code"]},{"Key":"enough code","Fragments":["there"]},{"Key":"code there","Fragments":["to"]},{"Key":"first iteration","Fragments":["for","of","to","is","were","of","could","one"]},{"Key":"iteration for","Fragments":["some","simpler"]},{"Key":"array instead","Fragments":["of","of"]},{"Key":"a dictionary...","Fragments":["stopped"]},{"Key":"dictionary... stopped","Fragments":["doing"]},{"Key":"stopped doing","Fragments":["that"]},{"Key":"doing that","Fragments":["because","at"]},{"Key":"also modified","Fragments":["the"]},{"Key":"modified the","Fragments":["property","test"]},{"Key":"the property","Fragments":["to","in","setter"]},{"Key":"copy (I","Fragments":["think!)"]},{"Key":"(I think!)","Fragments":["instead"]},{"Key":"think!) instead","Fragments":["of"]},{"Key":"a shallow","Fragments":["copy"]},{"Key":"shallow copy","Fragments":["of"]},{"Key":"field and","Fragments":["was"]},{"Key":"simplify my","Fragments":["approach"]},{"Key":"approach to","Fragments":["the","keep","the","detecting","mine","this","this"]},{"Key":"the \"return","Fragments":["new","isLeap\""]},{"Key":"\"return new","Fragments":["List\u003cstring\u003e"]},{"Key":"List\u003cstring\u003e for","Fragments":["empty"]},{"Key":"empty grades\"","Fragments":["requirement."]},{"Key":"grades\" requirement.","Fragments":["Since"]},{"Key":"requirement. Since","Fragments":["this"]},{"Key":"iteration has","Fragments":["cases"]},{"Key":"has cases","Fragments":["where"]},{"Key":"where new","Fragments":["grades"]},{"Key":"new grades","Fragments":["are"]},{"Key":"grades are","Fragments":["added"]},{"Key":"are added","Fragments":["during","after"]},{"Key":"added during","Fragments":["during"]},{"Key":"during during","Fragments":["the"]},{"Key":"during the","Fragments":["Add"]},{"Key":"minor optimization","Fragments":["where"]},{"Key":"optimization where","Fragments":["lists"]},{"Key":"where lists","Fragments":["that"]},{"Key":"that were","Fragments":["just","letters","fast","not"]},{"Key":"were just","Fragments":["created","trying"]},{"Key":"created with","Fragments":["a","a"]},{"Key":"single entry","Fragments":["aren't"]},{"Key":"entry aren't","Fragments":["sorted."]},{"Key":"iteration, except","Fragments":["I"]},{"Key":"I extracted","Fragments":["a"]},{"Key":"extracted a","Fragments":["DivisibleBy"]},{"Key":"a DivisibleBy","Fragments":["method."]},{"Key":"DivisibleBy method.","Fragments":["I"]},{"Key":"consider it","Fragments":["as","practice."]},{"Key":"a slight","Fragments":["improvement","bit"]},{"Key":"slight improvement","Fragments":["on","might"]},{"Key":"improvement on","Fragments":["readability.","your"]},{"Key":"it satisfies","Fragments":["the"]},{"Key":"satisfies the","Fragments":["basic"]},{"Key":"It's nice","Fragments":["that"]},{"Key":"nice that","Fragments":["in"]},{"Key":"the Grade","Fragments":["method","method?","method.","getter."]},{"Key":"Grade method","Fragments":["you"]},{"Key":"use \"ToList\"","Fragments":["to"]},{"Key":"\"ToList\" to","Fragments":["convert"]},{"Key":"expected List\u003cstring\u003e","Fragments":["type"]},{"Key":"List\u003cstring\u003e type","Fragments":["because"]},{"Key":"type because","Fragments":["that"]},{"Key":"actual private","Fragments":["value"]},{"Key":"private value","Fragments":["can't"]},{"Key":"value can't","Fragments":["be"]},{"Key":"be modified.","Fragments":["On"]},{"Key":"modified. On","Fragments":["that"]},{"Key":"On that","Fragments":["note,"]},{"Key":"that note,","Fragments":["if"]},{"Key":"note, if","Fragments":["you"]},{"Key":"When accessing","Fragments":["the"]},{"Key":"accessing the","Fragments":["Roster","roster","internals,"]},{"Key":"property calling","Fragments":["code"]},{"Key":"calling code","Fragments":["would","asks"]},{"Key":"Dictionary directly","Fragments":["-"]},{"Key":"directly -","Fragments":["because"]},{"Key":"- because","Fragments":["you"]},{"Key":"just hand","Fragments":["it"]},{"Key":"hand it","Fragments":["over"]},{"Key":"to them.","Fragments":["This"]},{"Key":"This bonus","Fragments":["requirement"]},{"Key":"bonus requirement","Fragments":["was","of"]},{"Key":"requirement was","Fragments":["intended","to,"]},{"Key":"intended as","Fragments":["a"]},{"Key":"a gotcha,","Fragments":["because"]},{"Key":"gotcha, because","Fragments":["things"]},{"Key":"because things","Fragments":["can"]},{"Key":"bit tricky","Fragments":["when"]},{"Key":"tricky when","Fragments":["you're"]},{"Key":"when you're","Fragments":["dealing","working","writing","returning","ready","concatenating"]},{"Key":"you're dealing","Fragments":["with"]},{"Key":"with trying","Fragments":["to","to"]},{"Key":"to copy,","Fragments":["clone,"]},{"Key":"copy, clone,","Fragments":["etc"]},{"Key":"clone, etc","Fragments":["a"]},{"Key":"etc a","Fragments":["Dictionary"]},{"Key":"has Collection","Fragments":["types"]},{"Key":"Collection types","Fragments":["as"]},{"Key":"types as","Fragments":["it's","opposed"]},{"Key":"it's values.","Fragments":["Look"]},{"Key":"values. Look","Fragments":["into"]},{"Key":"Look into","Fragments":["C#,","using"]},{"Key":"into C#,","Fragments":["Dictionary,"]},{"Key":"C#, Dictionary,","Fragments":["Collections,"]},{"Key":"Dictionary, Collections,","Fragments":["and"]},{"Key":"Collections, and","Fragments":["\"deep"]},{"Key":"and \"deep","Fragments":["copy\""]},{"Key":"\"deep copy\"","Fragments":["if"]},{"Key":"copy\" if","Fragments":["you're"]},{"Key":"not already","Fragments":["aware","counted.","been","exist,"]},{"Key":"already aware","Fragments":["of"]},{"Key":" @haylee","Fragments":["Thanks"]},{"Key":"@haylee Thanks","Fragments":["for"]},{"Key":"your using","Fragments":["statements"]},{"Key":"and IsLeap/IsYearDivisible","Fragments":["comments."]},{"Key":"IsLeap/IsYearDivisible comments.","Fragments":["As"]},{"Key":"comments. As","Fragments":["far"]},{"Key":"the XML-documentation,","Fragments":["these"]},{"Key":"XML-documentation, these","Fragments":["get"]},{"Key":"these get","Fragments":["built"]},{"Key":"get built","Fragments":["automatically"]},{"Key":"built automatically","Fragments":["once"]},{"Key":"automatically once","Fragments":["I"]},{"Key":"I start","Fragments":["writing"]},{"Key":"start writing","Fragments":["a"]},{"Key":"comment above","Fragments":["the"]},{"Key":"above the","Fragments":["method"]},{"Key":"just fill","Fragments":["in"]},{"Key":"fill in","Fragments":["the"]},{"Key":"the blanks.","Fragments":["These"]},{"Key":"blanks. These","Fragments":["are"]},{"Key":"are useful","Fragments":["in","but"]},{"Key":"in practical","Fragments":["purposes"]},{"Key":"practical purposes","Fragments":["because"]},{"Key":"purposes because","Fragments":["they"]},{"Key":"build documentation","Fragments":["(see"]},{"Key":"documentation (see","Fragments":["sandcastle)."]},{"Key":"the XOR,","Fragments":["All"]},{"Key":"XOR, All","Fragments":["the"]},{"Key":"All the","Fragments":["tests","other","operations"]},{"Key":"cannot immediately","Fragments":["think"]},{"Key":"immediately think","Fragments":["of"]},{"Key":"fail. However,","Fragments":["you"]},{"Key":"have pointed","Fragments":["out","that","out"]},{"Key":"pointed out","Fragments":["something","to","that","that","in","then","by"]},{"Key":"out something","Fragments":["I"]},{"Key":"I deal","Fragments":["with"]},{"Key":"deal with","Fragments":["from","at","that.","the","accordingly.","the","null"]},{"Key":"with from","Fragments":["time"]},{"Key":"from time","Fragments":["to"]},{"Key":"to time,","Fragments":["I"]},{"Key":"time, I","Fragments":["do"]},{"Key":"do tend","Fragments":["to"]},{"Key":"use functionality","Fragments":["that"]},{"Key":"functionality that","Fragments":["may"]},{"Key":"be common.","Fragments":["So"]},{"Key":"common. So","Fragments":["thanks"]},{"Key":"So thanks","Fragments":["for"]},{"Key":"catching that","Fragments":["and"]},{"Key":"and calling","Fragments":["it"]},{"Key":"Linq seems","Fragments":["to"]},{"Key":"really useful","Fragments":["in"]},{"Key":"in many,","Fragments":["many"]},{"Key":"many, many","Fragments":["situations!"]},{"Key":"many situations!","Fragments":[":)"]},{"Key":"the minor","Fragments":["change"]},{"Key":"minor change","Fragments":["of,"]},{"Key":"change of,","Fragments":["instead"]},{"Key":"of, instead","Fragments":["of"]},{"Key":"of manually","Fragments":["having"]},{"Key":"manually having","Fragments":["\"two"]},{"Key":"having \"two","Fragments":["letters"]},{"Key":"\"two letters","Fragments":["and"]},{"Key":"three digits\",","Fragments":["I"]},{"Key":"digits\", I","Fragments":["put"]},{"Key":"put both","Fragments":["inside"]},{"Key":"both inside","Fragments":["of"]},{"Key":"the off","Fragments":["chance"]},{"Key":"off chance","Fragments":["that"]},{"Key":"chance that","Fragments":["we"]},{"Key":"we need","Fragments":["larger/smaller","to","the","to"]},{"Key":"need larger/smaller","Fragments":["names."]},{"Key":"extra challenge","Fragments":["in","of"]},{"Key":"this assignment,","Fragments":["relating","but"]},{"Key":"assignment, relating","Fragments":["to"]},{"Key":"relating to","Fragments":["directly"]},{"Key":"directly accessing","Fragments":["the"]},{"Key":"roster variable.","Fragments":["However,"]},{"Key":"variable. However,","Fragments":["I'm"]},{"Key":"However, I'm","Fragments":["thinking","not"]},{"Key":"I'm thinking","Fragments":["that","next"]},{"Key":"might still","Fragments":["be"]},{"Key":"to edit","Fragments":["the","the","the","or"]},{"Key":"edit the","Fragments":["individual","comment","code","song's"]},{"Key":"individual student","Fragments":["lists:"]},{"Key":"student lists:","Fragments":["any"]},{"Key":"lists: any","Fragments":["ideas"]},{"Key":"any ideas","Fragments":["on"]},{"Key":"ideas on","Fragments":["that?"]},{"Key":"little thing","Fragments":["that"]},{"Key":"thought would","Fragments":["be"]},{"Key":"be interesting","Fragments":["for","though.","to"]},{"Key":"interesting for","Fragments":["you","me","use","how"]},{"Key":"the RobotFactory.GenerateNewRobotName()","Fragments":["method,"]},{"Key":"RobotFactory.GenerateNewRobotName() method,","Fragments":["have"]},{"Key":"method, have","Fragments":["you"]},{"Key":"a do...while","Fragments":["loop?"]},{"Key":"do...while loop?","Fragments":["It"]},{"Key":"loop? It","Fragments":["removes"]},{"Key":"It removes","Fragments":["an"]},{"Key":"removes an","Fragments":["unnecessary"]},{"Key":"unnecessary variable","Fragments":["and"]},{"Key":"and may","Fragments":["(or"]},{"Key":"may (or","Fragments":["may"]},{"Key":"(or may","Fragments":["not)"]},{"Key":"may not)","Fragments":["be"]},{"Key":"not) be","Fragments":["more"]},{"Key":"some brief","Fragments":["comments"]},{"Key":"brief comments","Fragments":["may"]},{"Key":"comments may","Fragments":["be"]},{"Key":"be helpful:","Fragments":["I"]},{"Key":"helpful: I","Fragments":["didn't"]},{"Key":"the ??","Fragments":["operator"]},{"Key":"?? operator","Fragments":["was,"]},{"Key":"operator was,","Fragments":["and"]},{"Key":"was, and","Fragments":["while"]},{"Key":"really cool","Fragments":["operator,"]},{"Key":"cool operator,","Fragments":["it"]},{"Key":"operator, it","Fragments":["would"]},{"Key":"have something","Fragments":["explaining"]},{"Key":"something explaining","Fragments":["what"]},{"Key":"to congratulate","Fragments":["you"]},{"Key":"congratulate you","Fragments":["on"]},{"Key":"on making","Fragments":["a","the"]},{"Key":"making a","Fragments":["\"Factory\"","duplicate","Leap","custom","private","new","properly"]},{"Key":"a \"Factory\"","Fragments":["class:"]},{"Key":"\"Factory\" class:","Fragments":["I"]},{"Key":"class: I","Fragments":["wouldn't"]},{"Key":"doing that,","Fragments":["but","but"]},{"Key":"actually fits","Fragments":["rather"]},{"Key":"fits rather","Fragments":["well"]},{"Key":"rather well","Fragments":["for"]},{"Key":"well for","Fragments":["this"]},{"Key":"this type","Fragments":["of","of"]},{"Key":"Those are","Fragments":["just","logical","good"]},{"Key":"my thoughts,","Fragments":["though:"]},{"Key":"thoughts, though:","Fragments":["nice"]},{"Key":"though: nice","Fragments":["job"]},{"Key":"nice job","Fragments":["overall!"]},{"Key":"having no","Fragments":["duplicate"]},{"Key":"no duplicate","Fragments":["names:"]},{"Key":"duplicate names:","Fragments":["I"]},{"Key":"names: I","Fragments":["haven't"]},{"Key":"haven't been","Fragments":["able"]},{"Key":"been able","Fragments":["to"]},{"Key":"the theory","Fragments":["seems"]},{"Key":"theory seems","Fragments":["sound."]},{"Key":"to note","Fragments":["that","is","is"]},{"Key":"this works","Fragments":["for","i","in","for"]},{"Key":"every test","Fragments":["EXCEPT"]},{"Key":"test EXCEPT","Fragments":["the"]},{"Key":"EXCEPT the","Fragments":["ones"]},{"Key":"ones involving","Fragments":["the"]},{"Key":"involving the","Fragments":["large","functions"]},{"Key":"the large","Fragments":["numbers:","spaces","static"]},{"Key":"large numbers:","Fragments":["it"]},{"Key":"numbers: it","Fragments":["seems"]},{"Key":"be overshooting","Fragments":["the"]},{"Key":"overshooting the","Fragments":["value"]},{"Key":"something along","Fragments":["the"]},{"Key":" ```if(statement.ToUpper()","Fragments":["=="]},{"Key":"```if(statement.ToUpper() ==","Fragments":["statement)"]},{"Key":" answer","Fragments":["="]},{"Key":"answer =","Fragments":["\"Whoa,","\"Whatever\";```","Console.ReadLine().ToUpper()"]},{"Key":"= \"Whoa,","Fragments":["chill"]},{"Key":" Out","Fragments":["of","of","of","of"]},{"Key":"Out of","Fragments":["curiosity,","curiosity,","curiosity,","curiosity,","interest,","practice"]},{"Key":"of curiosity,","Fragments":["why","I","what's","does"]},{"Key":"curiosity, why","Fragments":["did"]},{"Key":"than half","Fragments":["the","the","the"]},{"Key":"the alpha","Fragments":["chars?","chars","characters"]},{"Key":"That aside,","Fragments":["you","you"]},{"Key":"aside, you","Fragments":["could","can"]},{"Key":"could eliminate","Fragments":["the","the"]},{"Key":"last conditional","Fragments":["if"]},{"Key":"conditional if","Fragments":["you"]},{"Key":"you initialize","Fragments":["your"]},{"Key":"initialize your","Fragments":["return"]},{"Key":" ```string","Fragments":["answer"]},{"Key":"```string answer","Fragments":["="]},{"Key":"the ```LastCharIsQuestionMark```","Fragments":["method"]},{"Key":"```LastCharIsQuestionMark``` method","Fragments":["and"]},{"Key":"and inline","Fragments":["the"]},{"Key":"inline the","Fragments":["condition.","expressions","variables,"]},{"Key":"the condition.","Fragments":["It's"]},{"Key":"condition. It's","Fragments":["somewhat"]},{"Key":"It's somewhat","Fragments":["inconsistent"]},{"Key":"somewhat inconsistent","Fragments":["since"]},{"Key":"inconsistent since","Fragments":["you"]},{"Key":"didn't pull","Fragments":["the"]},{"Key":"the empty","Fragments":["string","list","set","list","list"]},{"Key":"empty string","Fragments":["condition","you","(\"\")","would","(negatives","is","lists,"]},{"Key":"string condition","Fragments":["out"]},{"Key":"condition out","Fragments":["into"]},{"Key":"as unneccessary","Fragments":["since"]},{"Key":"unneccessary since","Fragments":["all"]},{"Key":"since all","Fragments":["you're"]},{"Key":"all you're","Fragments":["really"]},{"Key":"you're really","Fragments":["doing"]},{"Key":"doing is","Fragments":["wrapping"]},{"Key":"is wrapping","Fragments":["another"]},{"Key":"wrapping another","Fragments":["method."]},{"Key":"use ```string.IsNullOrWhitespace```","Fragments":["instead"]},{"Key":"```string.IsNullOrWhitespace``` instead","Fragments":["of"]},{"Key":"of ```string.IsNullOrEmpty```","Fragments":["so"]},{"Key":"```string.IsNullOrEmpty``` so","Fragments":["you"]},{"Key":"to trim","Fragments":["the"]},{"Key":"of returns.","Fragments":["Other"]},{"Key":"returns. Other","Fragments":["than"]},{"Key":"is short","Fragments":["and","for"]},{"Key":"short and","Fragments":["clear.","sweet","clear","readable"]},{"Key":"few thought-process/procedural/style","Fragments":["questions:"]},{"Key":"1) Is","Fragments":["there"]},{"Key":"with manually","Fragments":["determining"]},{"Key":"manually determining","Fragments":["the"]},{"Key":"determining the","Fragments":["final","last","year"]},{"Key":"final character","Fragments":["of"]},{"Key":"string rather","Fragments":["than","than"]},{"Key":"2) Is","Fragments":["there"]},{"Key":"you chose","Fragments":["to","not","to"]},{"Key":"for rather","Fragments":["than"]},{"Key":"foreach over","Fragments":["the","the"]},{"Key":"3) Why","Fragments":["a"]},{"Key":"Why a","Fragments":["Helper","Tuple"]},{"Key":"a Helper","Fragments":["class,"]},{"Key":"Helper class,","Fragments":["instead"]},{"Key":"class, instead","Fragments":["of"]},{"Key":"of simply","Fragments":["another"]},{"Key":"simply another","Fragments":["function"]},{"Key":"another function","Fragments":["for"]},{"Key":"function for","Fragments":["Bob?","string","readability?","int.Parse()","grouping","RandomChar"]},{"Key":"- Test","Fragments":["driven"]},{"Key":"Test driven","Fragments":["solution,"]},{"Key":"driven solution,","Fragments":["satisfying"]},{"Key":"solution, satisfying","Fragments":["the"]},{"Key":"satisfying the","Fragments":["four"]},{"Key":"the four","Fragments":["tests"]},{"Key":"four tests","Fragments":["in"]},{"Key":"- Considered","Fragments":["adding"]},{"Key":"Considered adding","Fragments":["comments"]},{"Key":"comments as","Fragments":["the","long","for"]},{"Key":"rules are","Fragments":["not","simply"]},{"Key":"not immediately","Fragments":["obvious."]},{"Key":"immediately obvious.","Fragments":["Decided"]},{"Key":"obvious. Decided","Fragments":["to"]},{"Key":"Decided to","Fragments":["take"]},{"Key":"another go","Fragments":["at"]},{"Key":"it instead","Fragments":["with"]},{"Key":"instead with","Fragments":["extracted"]},{"Key":"with extracted","Fragments":["methods."]},{"Key":"extracted methods.","Fragments":["which"]},{"Key":"methods. which","Fragments":["lead"]},{"Key":"which lead","Fragments":["to:"]},{"Key":"`return DivisibleBy4(year)","Fragments":["\u0026\u0026"]},{"Key":"DivisibleBy4(year) \u0026\u0026","Fragments":["(!DivisibeBy100(year)"]},{"Key":"\u0026\u0026 (!DivisibeBy100(year)","Fragments":["||"]},{"Key":"(!DivisibeBy100(year) ||","Fragments":["DivisibleBy400(year));`"]},{"Key":"- not","Fragments":["much","that","just"]},{"Key":"not much","Fragments":["more"]},{"Key":"probably describe","Fragments":["this"]},{"Key":"describe this","Fragments":["solution"]},{"Key":"as more","Fragments":["concise","Linq"]},{"Key":"concise than","Fragments":["readable."]},{"Key":"than readable.","Fragments":["I"]},{"Key":"readable. I","Fragments":["wouldn't","certainly","get","think"]},{"Key":"wouldn't say","Fragments":["its"]},{"Key":"say its","Fragments":["*not*"]},{"Key":"its *not*","Fragments":["readable,"]},{"Key":"*not* readable,","Fragments":["but"]},{"Key":"last line","Fragments":["takes","where"]},{"Key":"line takes","Fragments":["a"]},{"Key":"a minute","Fragments":["to","to"]},{"Key":"minute to","Fragments":["process...","wrap"]},{"Key":"The extension","Fragments":["method"]},{"Key":"method would","Fragments":["obviously","have","be:","be","help","pass"]},{"Key":"would obviously","Fragments":["be"]},{"Key":"obviously be","Fragments":["best"]},{"Key":"be best","Fragments":["used"]},{"Key":"best used","Fragments":["in"]},{"Key":"external library,","Fragments":["but"]},{"Key":"library, but","Fragments":["wanted"]},{"Key":"include all","Fragments":["of"]},{"Key":"Well, there","Fragments":["is"]},{"Key":"no documentation","Fragments":["of"]},{"Key":"documentation of","Fragments":["what"]},{"Key":"what ```Roster.Count```","Fragments":["should"]},{"Key":"```Roster.Count``` should","Fragments":["return,"]},{"Key":"should return,","Fragments":["number"]},{"Key":"return, number","Fragments":["of"]},{"Key":"of classes","Fragments":["or","for"]},{"Key":"or number","Fragments":["of"]},{"Key":"chose students,","Fragments":["although"]},{"Key":"students, although","Fragments":["maybe"]},{"Key":"although maybe","Fragments":["I"]},{"Key":" ```get","Fragments":["{"]},{"Key":" int","Fragments":["count","thisYear","year","count","count","thousand","hundred","tens","singular","result","count","count","c","data","start,","count"]},{"Key":"int count","Fragments":["=","=","=","=","="]},{"Key":"count =","Fragments":["0;","number","0;","0;","value","value"]},{"Key":"(var s","Fragments":["in"]},{"Key":"s in","Fragments":["backingDictionary.Values)"]},{"Key":"in backingDictionary.Values)","Fragments":["{"]},{"Key":"backingDictionary.Values) {","Fragments":["count"]},{"Key":"{ count","Fragments":["=+"]},{"Key":"count =+","Fragments":["s.Count;"]},{"Key":"=+ s.Count;","Fragments":["}"]},{"Key":"much less","Fragments":["error-prone","efficient","time"]},{"Key":"less error-prone","Fragments":["but"]},{"Key":"error-prone but","Fragments":["much"]},{"Key":"but much","Fragments":["slower."]},{"Key":"and straight","Fragments":["forward"]},{"Key":"straight forward","Fragments":["to","solution"]},{"Key":"to follow,","Fragments":["I","but"]},{"Key":"follow, I","Fragments":["don't"]},{"Key":"is as","Fragments":["efficient","good","follows","@angelina"]},{"Key":"as efficient","Fragments":["as","as","-"]},{"Key":"efficient as","Fragments":["it","that","it"]},{"Key":"be. Also","Fragments":["not"]},{"Key":"Also not","Fragments":["sure"]},{"Key":"sure whether","Fragments":["it"]},{"Key":"whether it","Fragments":["is","is"]},{"Key":" thinking","Fragments":["some"]},{"Key":"thinking some","Fragments":["more"]},{"Key":"some more","Fragments":["about","power"]},{"Key":"i realized","Fragments":["that"]},{"Key":"false so","Fragments":["I"]},{"Key":"remove several","Fragments":["lines"]},{"Key":"several lines","Fragments":["of","with"]},{"Key":"a Triangle","Fragments":["can't"]},{"Key":"Triangle can't","Fragments":["have"]},{"Key":"can't have","Fragments":["a"]},{"Key":"0 length,","Fragments":["either."]},{"Key":"length, either.","Fragments":[":)"]},{"Key":"a silly","Fragments":["exercise,","exercise,"]},{"Key":"silly exercise,","Fragments":["doesn't","unless"]},{"Key":"exercise, doesn't","Fragments":["it?"]},{"Key":"doesn't it?","Fragments":[":)"]},{"Key":"readability aspect","Fragments":["of"]},{"Key":"aspect of","Fragments":["this"]},{"Key":"this code,","Fragments":["and","now"]},{"Key":"shows some","Fragments":["solid"]},{"Key":"some solid","Fragments":["habits"]},{"Key":"solid habits","Fragments":["for"]},{"Key":"habits for","Fragments":["refactoring"]},{"Key":"for refactoring","Fragments":["code,"]},{"Key":"refactoring code,","Fragments":["I"]},{"Key":"like something","Fragments":["as"]},{"Key":"as doing","Fragments":["an"]},{"Key":"doing an","Fragments":["(x","awful"]},{"Key":"an (x","Fragments":["%"]},{"Key":"(x %","Fragments":["y"]},{"Key":"0) check","Fragments":["doesn't"]},{"Key":"check doesn't","Fragments":["need","require"]},{"Key":"need its","Fragments":["own"]},{"Key":"own function,","Fragments":["and","that"]},{"Key":"be pulled","Fragments":["into"]},{"Key":"pulled into","Fragments":["the"]},{"Key":"int thisYear","Fragments":["="]},{"Key":"thisYear =","Fragments":["Convert.ToInt32(Console.ReadLine());"]},{"Key":"will crash","Fragments":["if"]},{"Key":"crash if","Fragments":["the","it"]},{"Key":"the users","Fragments":["inputs"]},{"Key":"users inputs","Fragments":["a"]},{"Key":"inputs a","Fragments":["letter"]},{"Key":"letter instead","Fragments":["of"]},{"Key":"number. Instead","Fragments":["you"]},{"Key":"Instead you","Fragments":["could","could","could","can"]},{"Key":"use Int32.TryParse,","Fragments":["something"]},{"Key":"Int32.TryParse, something","Fragments":["like"]},{"Key":"year =","Fragments":["0;"]},{"Key":"if (Int32.TryParse(Console.ReadLine(),","Fragments":["out"]},{"Key":"(Int32.TryParse(Console.ReadLine(), out","Fragments":["year))"]},{"Key":"// Valid","Fragments":["year,"]},{"Key":"Valid year,","Fragments":["do"]},{"Key":"year, do","Fragments":["something","something"]},{"Key":"// Invalid","Fragments":["year,"]},{"Key":"Invalid year,","Fragments":["do"]},{"Key":"your IsLeap","Fragments":["method"]},{"Key":"those int","Fragments":["variables"]},{"Key":"int variables","Fragments":["and"]},{"Key":"and instead","Fragments":["just","just","just"]},{"Key":"instead just","Fragments":["use","re-used","have"]},{"Key":"Modulo operation","Fragments":["straight"]},{"Key":"operation straight","Fragments":["in"]},{"Key":"straight in","Fragments":["the"]},{"Key":"only being","Fragments":["one"]},{"Key":"being one","Fragments":["condition"]},{"Key":"condition instead","Fragments":["of"]},{"Key":"one for","Fragments":["\"fourRemainder\"","\"hundredRemainder","fo'c'sle","a","me","the"]},{"Key":"for \"fourRemainder\"","Fragments":["and"]},{"Key":"\"fourRemainder\" and","Fragments":["then"]},{"Key":"then another","Fragments":["one"]},{"Key":"another one","Fragments":["for"]},{"Key":"for \"hundredRemainder","Fragments":["and"]},{"Key":"\"hundredRemainder and","Fragments":["fourHundredRemainder\""]},{"Key":"using `private","Fragments":["const"]},{"Key":"`private const","Fragments":["string`."]},{"Key":"const string`.","Fragments":["I've"]},{"Key":"string`. I've","Fragments":["seen"]},{"Key":"seen to","Fragments":["many"]},{"Key":"times those","Fragments":["strings"]},{"Key":"those strings","Fragments":["right"]},{"Key":"strings right","Fragments":["in"]},{"Key":"the methods.","Fragments":["And"]},{"Key":"methods. And","Fragments":["in"]},{"Key":"And in","Fragments":["my"]},{"Key":"my current","Fragments":["inherited","number","```FixUpWord```","iteration","solution"]},{"Key":"current inherited","Fragments":["code"]},{"Key":"inherited code","Fragments":["base"]},{"Key":"code base","Fragments":["I"]},{"Key":"base I","Fragments":["can't"]},{"Key":"can't count","Fragments":["the"]},{"Key":"times I","Fragments":["have","would"]},{"Key":"have had","Fragments":["to"]},{"Key":"refactor those","Fragments":["out"]},{"Key":"those out","Fragments":["to"]},{"Key":"to adjust","Fragments":["date"]},{"Key":"adjust date","Fragments":["or"]},{"Key":"date or","Fragments":["currency"]},{"Key":"or currency","Fragments":["formatting."]},{"Key":"Also, thank","Fragments":["you"]},{"Key":"for putting","Fragments":["///"]},{"Key":"putting ///","Fragments":["\u0026lt;summary\u0026gt;"]},{"Key":"/// \u0026lt;summary\u0026gt;","Fragments":["comments."]},{"Key":"\u0026lt;summary\u0026gt; comments.","Fragments":["People"]},{"Key":"comments. People","Fragments":["here"]},{"Key":"People here","Fragments":["seem"]},{"Key":"here seem","Fragments":["to"]},{"Key":"think comments","Fragments":["=="]},{"Key":"comments ==","Fragments":["evil"]},{"Key":"== evil","Fragments":["and"]},{"Key":"evil and","Fragments":["that"]},{"Key":"just self","Fragments":["document."]},{"Key":"self document.","Fragments":["But"]},{"Key":"document. But","Fragments":["if"]},{"Key":"if you've","Fragments":["used","gone","had","been"]},{"Key":"used Visual","Fragments":["Studio"]},{"Key":"Studio long","Fragments":["you"]},{"Key":"long you","Fragments":["quickly","would"]},{"Key":"you quickly","Fragments":["find"]},{"Key":"quickly find","Fragments":["how"]},{"Key":"find how","Fragments":["nice"]},{"Key":"how nice","Fragments":["it"]},{"Key":"nice it","Fragments":["is"]},{"Key":"the tool","Fragments":["tip"]},{"Key":"tool tip","Fragments":["with"]},{"Key":"tip with","Fragments":["those","\u003ccode\u003etoUpper()\u003c/code\u003e!"]},{"Key":"with those","Fragments":["comments","using"]},{"Key":"those comments","Fragments":["in"]},{"Key":"exercise, unless","Fragments":["the"]},{"Key":"Could the","Fragments":["order"]},{"Key":"order be","Fragments":["changed"]},{"Key":"changed so","Fragments":["that"]},{"Key":"most common","Fragments":["cases","style,"]},{"Key":"common cases","Fragments":["are"]},{"Key":"cases are","Fragments":["excluded","not"]},{"Key":"are excluded","Fragments":["before"]},{"Key":"excluded before","Fragments":["less"]},{"Key":"before less","Fragments":["common"]},{"Key":"less common","Fragments":["situations"]},{"Key":"common situations","Fragments":["need"]},{"Key":"situations need","Fragments":["to"]},{"Key":"Yeah, probably","Fragments":["should","what"]},{"Key":"first exercises.","Fragments":["Was"]},{"Key":"exercises. Was","Fragments":["never"]},{"Key":"Was never","Fragments":["a"]},{"Key":"never a","Fragments":["fan"]},{"Key":"the API","Fragments":["either.","should"]},{"Key":"good. Here's","Fragments":["some"]},{"Key":"Here's some","Fragments":["truly"]},{"Key":"some truly","Fragments":["picky"]},{"Key":"truly picky","Fragments":["nitpicks:"]},{"Key":"You've mis-named","Fragments":["digistRemoved,"]},{"Key":"mis-named digistRemoved,","Fragments":["it"]},{"Key":"digistRemoved, it","Fragments":["is"]},{"Key":"the `.Substring()`","Fragments":["calls"]},{"Key":"`.Substring()` calls","Fragments":["in"]},{"Key":"calls in","Fragments":["the","either","order"]},{"Key":"idea as","Fragments":["once"]},{"Key":"once number","Fragments":["is"]},{"Key":"is parsed","Fragments":["those"]},{"Key":"parsed those","Fragments":["values"]},{"Key":"values won't","Fragments":["change."]},{"Key":"won't change.","Fragments":["Having"]},{"Key":"change. Having","Fragments":["to"]},{"Key":"Having to","Fragments":["call"]},{"Key":"call `.Substring()`","Fragments":["on"]},{"Key":"`.Substring()` on","Fragments":["every"]},{"Key":"access wastes","Fragments":["cycles."]},{"Key":"Your class","Fragments":["breaks"]},{"Key":"class breaks","Fragments":["by"]},{"Key":"breaks by","Fragments":["having"]},{"Key":"public setter","Fragments":["in","method."]},{"Key":"setter in","Fragments":["`Number`."]},{"Key":"in `Number`.","Fragments":["The"]},{"Key":"`Number`. The","Fragments":["setter"]},{"Key":"The setter","Fragments":["should"]},{"Key":"setter should","Fragments":["be"]},{"Key":"private or","Fragments":["should","readonly","public"]},{"Key":"or should","Fragments":["call","I","the"]},{"Key":"should call","Fragments":["`ParseInput`"]},{"Key":"call `ParseInput`","Fragments":["on"]},{"Key":"`ParseInput` on","Fragments":["the"]},{"Key":"think increasing","Fragments":["the"]},{"Key":"of methods,","Fragments":["and","private"]},{"Key":"methods, and","Fragments":["using","my"]},{"Key":"new class,","Fragments":["has"]},{"Key":"class, has","Fragments":["made"]},{"Key":"be. Comments","Fragments":["could"]},{"Key":"Comments could","Fragments":["describe"]},{"Key":"could describe","Fragments":["the"]},{"Key":"calculations as","Fragments":["clearly"]},{"Key":"as clearly","Fragments":["as"]},{"Key":"clearly as","Fragments":["the","possible"]},{"Key":"names do,","Fragments":["and"]},{"Key":"do, and","Fragments":["do"]},{"Key":"reuse the","Fragments":["methods","Number"]},{"Key":"iteration uses","Fragments":["a","your","regular"]},{"Key":"lot less","Fragments":["code,"]},{"Key":"less code,","Fragments":["while"]},{"Key":"code, while","Fragments":["still"]},{"Key":"while still","Fragments":["keeping","being"]},{"Key":"still keeping","Fragments":["the"]},{"Key":"the Hey","Fragments":["function"]},{"Key":"Hey function","Fragments":["clean"]},{"Key":"function clean","Fragments":["of"]},{"Key":"clean of","Fragments":["too"]},{"Key":"of too","Fragments":["much"]},{"Key":"much logic.","Fragments":["Also"]},{"Key":"logic. Also","Fragments":["using"]},{"Key":"Also using","Fragments":["EndsWith(\"?\")"]},{"Key":"using EndsWith(\"?\")","Fragments":["now"]},{"Key":"EndsWith(\"?\") now","Fragments":["for"]},{"Key":"now for","Fragments":["questions"]},{"Key":"for questions","Fragments":["instead"]},{"Key":"questions instead","Fragments":["of"]},{"Key":"that convoluted","Fragments":["method"]},{"Key":"convoluted method","Fragments":["I"]},{"Key":"method I","Fragments":["used","the"]},{"Key":"iteration of","Fragments":["ETL.","the","it."]},{"Key":"of ETL.","Fragments":["Please"]},{"Key":"ETL. Please","Fragments":["let"]},{"Key":"Please let","Fragments":["me"]},{"Key":"know any","Fragments":["better","reason"]},{"Key":"any better","Fragments":["solutions.","than"]},{"Key":"my solution.","Fragments":["This","I'm"]},{"Key":"solution. This","Fragments":["solution"]},{"Key":"probably as","Fragments":["simple","efficient."]},{"Key":"is possible.","Fragments":["Even"]},{"Key":"possible. Even","Fragments":["when"]},{"Key":"Even when","Fragments":["if"]},{"Key":"when if","Fragments":["statements"]},{"Key":"are single","Fragments":["lines,"]},{"Key":"single lines,","Fragments":["I"]},{"Key":"lines, I","Fragments":["personally"]},{"Key":"prefer using","Fragments":["braces"]},{"Key":"using braces","Fragments":["as","for"]},{"Key":"braces as","Fragments":["visual"]},{"Key":"as visual","Fragments":["cues"]},{"Key":"visual cues","Fragments":["when"]},{"Key":"cues when","Fragments":["the"]},{"Key":"language uses","Fragments":["them"]},{"Key":"uses them","Fragments":["to"]},{"Key":"to delimit","Fragments":["code"]},{"Key":"delimit code","Fragments":["blocks."]},{"Key":"blocks. I","Fragments":["think"]},{"Key":"solution more","Fragments":["readable."]},{"Key":"using regex,","Fragments":["so"]},{"Key":"regex, so","Fragments":["I"]},{"Key":"split my","Fragments":["phrase"]},{"Key":"my phrase","Fragments":["by"]},{"Key":"phrase by","Fragments":["each"]},{"Key":"by each","Fragments":["individual"]},{"Key":"each individual","Fragments":["punctuation","score"]},{"Key":"individual punctuation","Fragments":["character."]},{"Key":"solution seemed","Fragments":["to"]},{"Key":"be straight-forward","Fragments":["though."]},{"Key":"iteration i","Fragments":["changed"]},{"Key":"i changed","Fragments":["the"]},{"Key":"the add","Fragments":["method","and"]},{"Key":"add method","Fragments":["to"]},{"Key":"the grade","Fragments":["list","doesn't"]},{"Key":"grade list","Fragments":["in"]},{"Key":"list in","Fragments":["place","Grade."]},{"Key":"place rather","Fragments":["than"]},{"Key":"why declare","Fragments":["`output`"]},{"Key":"declare `output`","Fragments":["on"]},{"Key":"`output` on","Fragments":["line"]},{"Key":"line 7,","Fragments":["then"]},{"Key":"7, then","Fragments":["instantiate"]},{"Key":"then instantiate","Fragments":["it"]},{"Key":"it two","Fragments":["lines","different"]},{"Key":"lines later","Fragments":["when"]},{"Key":"later when","Fragments":["they"]},{"Key":"are limited","Fragments":["ways"]},{"Key":"limited ways","Fragments":["to"]},{"Key":"problem, but","Fragments":["I","year","I"]},{"Key":"the nagging","Fragments":["feeling"]},{"Key":"nagging feeling","Fragments":["that"]},{"Key":"feeling that","Fragments":["there"]},{"Key":"to achieve","Fragments":["a","the","something","your","readability"]},{"Key":"achieve a","Fragments":["correct"]},{"Key":"a correct","Fragments":["implementation","end","output."]},{"Key":"correct implementation","Fragments":["without"]},{"Key":"implementation without","Fragments":["performing"]},{"Key":"without performing","Fragments":["3"]},{"Key":"performing 3","Fragments":["separate"]},{"Key":"3 separate","Fragments":["division"]},{"Key":"separate division","Fragments":["operations"]},{"Key":"division operations","Fragments":["(in"]},{"Key":"operations (in","Fragments":["this"]},{"Key":"(in this","Fragments":["implementation","case"]},{"Key":"implementation 2","Fragments":["are"]},{"Key":"2 are","Fragments":["required"]},{"Key":"are required","Fragments":["for"]},{"Key":"every call","Fragments":["and","to"]},{"Key":"call and","Fragments":["3","force","the"]},{"Key":"3 for","Fragments":["calls"]},{"Key":"for calls","Fragments":["where"]},{"Key":"calls where","Fragments":["the"]},{"Key":"one small","Fragments":["change","thing","thing"]},{"Key":"change I'd","Fragments":["make"]},{"Key":"I'd make","Fragments":["would"]},{"Key":"make would","Fragments":["be"]},{"Key":"as static","Fragments":["as"]},{"Key":"static as","Fragments":["well,","well,"]},{"Key":"well, since","Fragments":["there","it"]},{"Key":"there isn't","Fragments":["a","a"]},{"Key":"a constructor","Fragments":["and","be","in","can","which"]},{"Key":"been thinking","Fragments":["about","defensively","straight"]},{"Key":"about loops,","Fragments":["cycles,"]},{"Key":"loops, cycles,","Fragments":["and"]},{"Key":"cycles, and","Fragments":["memory"]},{"Key":"and memory","Fragments":["as"]},{"Key":"memory as","Fragments":["I","you"]},{"Key":"work through","Fragments":["these"]},{"Key":"through these","Fragments":["exercises"]},{"Key":"exercises and","Fragments":["through","tests?","enable"]},{"Key":"and through","Fragments":["some"]},{"Key":"through some","Fragments":["other","good","other","of"]},{"Key":"other mathematics","Fragments":["oriented"]},{"Key":"mathematics oriented","Fragments":["exercises."]},{"Key":"oriented exercises.","Fragments":["Having"]},{"Key":"exercises. Having","Fragments":["`AreaCode`"]},{"Key":"Having `AreaCode`","Fragments":["and"]},{"Key":"`AreaCode` and","Fragments":["`ToString()`"]},{"Key":"and `ToString()`","Fragments":["call"]},{"Key":"`ToString()` call","Fragments":["`Number`"]},{"Key":"call `Number`","Fragments":["and"]},{"Key":"`Number` and","Fragments":["`Substring`"]},{"Key":"and `Substring`","Fragments":["is"]},{"Key":"`Substring` is","Fragments":["a"]},{"Key":"a design","Fragments":["choice"]},{"Key":"design choice","Fragments":["that"]},{"Key":"choice that","Fragments":["should"]},{"Key":"that should","Fragments":["be","be","otherwise"]},{"Key":"be consciously","Fragments":["made."]},{"Key":"consciously made.","Fragments":["If"]},{"Key":"made. If","Fragments":["you"]},{"Key":"are memory","Fragments":["constrained"]},{"Key":"memory constrained","Fragments":["you","systems"]},{"Key":"constrained you","Fragments":["might","might"]},{"Key":"those calls","Fragments":["every"]},{"Key":"calls every","Fragments":["time."]},{"Key":"are cycle","Fragments":["constrained"]},{"Key":"cycle constrained","Fragments":["you"]},{"Key":"store processed","Fragments":["number,"]},{"Key":"processed number,","Fragments":["area"]},{"Key":"number, area","Fragments":["code"]},{"Key":"area code","Fragments":["and"]},{"Key":"and formatted","Fragments":["phone"]},{"Key":"formatted phone","Fragments":["number"]},{"Key":"number so","Fragments":["they"]},{"Key":"be simply","Fragments":["returned"]},{"Key":"simply returned","Fragments":["without"]},{"Key":"returned without","Fragments":["reprocessing"]},{"Key":"without reprocessing","Fragments":["the"]},{"Key":"reprocessing the","Fragments":["original"]},{"Key":"original input","Fragments":["every"]},{"Key":"input every","Fragments":["time."]},{"Key":" Whether","Fragments":["you"]},{"Key":"Whether you","Fragments":["will"]},{"Key":"this class","Fragments":["in","could","remained","were","only","would"]},{"Key":"a loop","Fragments":["or","is","to","to","starting","or","of","first"]},{"Key":"loop or","Fragments":["putting","if","recursion","Linq,"]},{"Key":"or putting","Fragments":["instances"]},{"Key":"putting instances","Fragments":["in"]},{"Key":"instances in","Fragments":["a"]},{"Key":"list require","Fragments":["different"]},{"Key":"require different","Fragments":["design"]},{"Key":"different design","Fragments":["choices."]},{"Key":"actually pass","Fragments":["any"]},{"Key":"pass any","Fragments":["of","test"]},{"Key":"tests, since","Fragments":["the"]},{"Key":"IsLeap function","Fragments":["is"]},{"Key":"not static.","Fragments":["You"]},{"Key":"static. You","Fragments":["might"]},{"Key":"try returning","Fragments":["the"]},{"Key":"response inside","Fragments":["the"]},{"Key":"if checks,","Fragments":["rather","since"]},{"Key":"checks, rather","Fragments":["than"]},{"Key":"new variable","Fragments":["to"]},{"Key":"the response,","Fragments":["since","not"]},{"Key":"response, since","Fragments":["there's"]},{"Key":"since there's","Fragments":["nothing","no"]},{"Key":"there's nothing","Fragments":["else","wrong"]},{"Key":"nothing else","Fragments":["that"]},{"Key":"that uses","Fragments":["it.","a","the"]},{"Key":"uses it.","Fragments":["Lastly,"]},{"Key":"it. Lastly,","Fragments":["this"]},{"Key":"Lastly, this","Fragments":["is"]},{"Key":"the parens","Fragments":["around"]},{"Key":"parens around","Fragments":["the"]},{"Key":"the (year","Fragments":["%"]},{"Key":"% x)","Fragments":["portion"]},{"Key":"x) portion","Fragments":["of"]},{"Key":"portion of","Fragments":["the"]},{"Key":"checks, since","Fragments":["those"]},{"Key":"since those","Fragments":["will"]},{"Key":"those will","Fragments":["be"]},{"Key":"fully evaluated","Fragments":["before"]},{"Key":"evaluated before","Fragments":["any"]},{"Key":"before any","Fragments":["comparison","other"]},{"Key":"any comparison","Fragments":["check."]},{"Key":"First off:","Fragments":["sorry"]},{"Key":"off: sorry","Fragments":["for"]},{"Key":"the console","Fragments":["debugging","app","functionality"]},{"Key":"console debugging","Fragments":["lines"]},{"Key":"debugging lines","Fragments":["--"]},{"Key":"lines --","Fragments":["I"]},{"Key":"-- I","Fragments":["couldn't"]},{"Key":"couldn't be","Fragments":["bothered"]},{"Key":"be bothered","Fragments":["to"]},{"Key":"bothered to","Fragments":["remove"]},{"Key":"noticed my","Fragments":["reset"]},{"Key":"my reset","Fragments":["function"]},{"Key":"reset function","Fragments":["wasn't"]},{"Key":"function wasn't","Fragments":["actually"]},{"Key":"wasn't actually","Fragments":["removing"]},{"Key":"actually removing","Fragments":["the"]},{"Key":"removing the","Fragments":["name","\"if\"","'and'.","extra","private"]},{"Key":"the repository,","Fragments":["and","fix"]},{"Key":"repository, and","Fragments":["then"]},{"Key":"of went","Fragments":["a"]},{"Key":"bit crazy","Fragments":["on"]},{"Key":"crazy on","Fragments":["this."]},{"Key":"had trouble","Fragments":["creating","figuring"]},{"Key":"trouble creating","Fragments":["a"]},{"Key":"proper factory","Fragments":["function,"]},{"Key":"factory function,","Fragments":["as"]},{"Key":"function, as","Fragments":["the","is"]},{"Key":"test specifies","Fragments":["that"]},{"Key":"specifies that","Fragments":["the"]},{"Key":"new robots","Fragments":["are"]},{"Key":"robots are","Fragments":["made"]},{"Key":"are made","Fragments":["from"]},{"Key":"made from","Fragments":["the"]},{"Key":"the robot","Fragments":["constructor","worry","name."]},{"Key":"robot constructor","Fragments":["rather"]},{"Key":"constructor rather","Fragments":["than"]},{"Key":"a factory","Fragments":["function."]},{"Key":"factory function.","Fragments":["This,"]},{"Key":"function. This,","Fragments":["then,"]},{"Key":"This, then,","Fragments":["is"]},{"Key":"then, is","Fragments":["kind"]},{"Key":"a bodge","Fragments":["job"]},{"Key":"bodge job","Fragments":["to"]},{"Key":"job to","Fragments":["try"]},{"Key":"implement it.","Fragments":["The"]},{"Key":"it. The","Fragments":["only","inlined"]},{"Key":"the Setup,","Fragments":["to"]},{"Key":"Setup, to","Fragments":["ensure"]},{"Key":"ensure it","Fragments":["started"]},{"Key":"it started","Fragments":["afresh"]},{"Key":"started afresh","Fragments":["each"]},{"Key":"afresh each","Fragments":["time."]},{"Key":"am sure","Fragments":["there's","you","something","this","I"]},{"Key":"sure there's","Fragments":["a","a"]},{"Key":"stuff to","Fragments":["nitpick"]},{"Key":"nitpick in","Fragments":["this,","favor"]},{"Key":"in this,","Fragments":["so"]},{"Key":"this, so","Fragments":["please","my","I'm"]},{"Key":"so please","Fragments":["do!"]},{"Key":"Oh, and","Fragments":["@emily,"]},{"Key":"and @emily,","Fragments":["I"]},{"Key":"@emily, I","Fragments":["ended"]},{"Key":"up both","Fragments":["removing"]},{"Key":"both removing","Fragments":["(most"]},{"Key":"removing (most","Fragments":["of)"]},{"Key":"(most of)","Fragments":["the"]},{"Key":"of) the","Fragments":["null"]},{"Key":"coalescing operators","Fragments":["and"]},{"Key":"operators and","Fragments":["implementing","it"]},{"Key":"and implementing","Fragments":["the"]},{"Key":"implementing the","Fragments":["do/while","instructions."]},{"Key":"the do/while","Fragments":[":D"]},{"Key":"was odd","Fragments":["to"]},{"Key":"the `readonly`","Fragments":["keyword"]},{"Key":"`readonly` keyword","Fragments":["on"]},{"Key":"keyword on","Fragments":["those"]},{"Key":"on those","Fragments":["fields."]},{"Key":"those fields.","Fragments":["So"]},{"Key":"fields. So","Fragments":["I"]},{"Key":"read up","Fragments":["on","on","on"]},{"Key":"on readonly","Fragments":["and"]},{"Key":"readonly and","Fragments":["found"]},{"Key":"found I","Fragments":["did"]},{"Key":"fully understand","Fragments":["its","newDictionary[letter.ToLower()]"]},{"Key":"understand its","Fragments":["behavior."]},{"Key":"its behavior.","Fragments":["Thanks"]},{"Key":"behavior. Thanks","Fragments":["for"]},{"Key":"for expanding","Fragments":["my"]},{"Key":"expanding my","Fragments":["knowledge!"]},{"Key":"Regarding comments","Fragments":["on"]},{"Key":"your previous","Fragments":["iteration:","iteration,"]},{"Key":"previous iteration:","Fragments":["I,"]},{"Key":"iteration: I,","Fragments":["too,"]},{"Key":"I, too,","Fragments":["like"]},{"Key":"too, like","Fragments":["qualifying"]},{"Key":"like qualifying","Fragments":["my"]},{"Key":"qualifying my","Fragments":["static"]},{"Key":"my static","Fragments":["and","allergen"]},{"Key":"members with","Fragments":["the"]},{"Key":"and `this`.","Fragments":["I"]},{"Key":"`this`. I","Fragments":["feel"]},{"Key":"it helps","Fragments":["readability","out"]},{"Key":"helps readability","Fragments":["by"]},{"Key":"by clarify","Fragments":["scope."]},{"Key":"clarify scope.","Fragments":["I"]},{"Key":"remember (and","Fragments":["go"]},{"Key":"(and go","Fragments":["find"]},{"Key":"go find","Fragments":["out)"]},{"Key":"find out)","Fragments":["whether"]},{"Key":"out) whether","Fragments":["this"]},{"Key":"whether this","Fragments":["identifier","would"]},{"Key":"this identifier","Fragments":["is"]},{"Key":"identifier is","Fragments":["an"]},{"Key":"instance member,","Fragments":["a"]},{"Key":"member, a","Fragments":["local"]},{"Key":"local variable,","Fragments":["or","but","but"]},{"Key":"variable, or","Fragments":["static"]},{"Key":"static member.","Fragments":["Yeah,"]},{"Key":"member. Yeah,","Fragments":["it's"]},{"Key":"Yeah, it's","Fragments":["not"]},{"Key":"deal for","Fragments":["little","this"]},{"Key":"little exercises","Fragments":["like"]},{"Key":"helpful when","Fragments":["I've"]},{"Key":"when I've","Fragments":["gone"]},{"Key":"gone back","Fragments":["to"]},{"Key":"code I've","Fragments":["written","ever"]},{"Key":"I've written","Fragments":["a"]},{"Key":"written a","Fragments":["couple","console"]},{"Key":"you store","Fragments":["Number","seed","the","the"]},{"Key":"store Number","Fragments":["and"]},{"Key":"Number and","Fragments":["AreaCode","Gift"]},{"Key":"and AreaCode","Fragments":["rather"]},{"Key":"AreaCode rather","Fragments":["than"]},{"Key":"than re-Substring-ing","Fragments":["them."]},{"Key":"re-Substring-ing them.","Fragments":["You"]},{"Key":"them. You","Fragments":["(and"]},{"Key":"You (and","Fragments":["I)"]},{"Key":"(and I)","Fragments":["could"]},{"Key":"I) could","Fragments":["also"]},{"Key":"also store","Fragments":["the"]},{"Key":"the formatted","Fragments":["number","cipher"]},{"Key":"formatted number","Fragments":["instead"]},{"Key":"number instead","Fragments":["of"]},{"Key":"of Substring-ing","Fragments":["in"]},{"Key":"Substring-ing in","Fragments":["`ToString'."]},{"Key":"small thing","Fragments":["I'd","I'd"]},{"Key":"suggest is","Fragments":["to","one","to"]},{"Key":"static, since","Fragments":["it"]},{"Key":"be instantiated.","Fragments":["Also,","Also,","And"]},{"Key":"instantiated. Also,","Fragments":["your","the"]},{"Key":"your one","Fragments":["line"]},{"Key":"line return","Fragments":["that's","using"]},{"Key":"return that's","Fragments":["commented"]},{"Key":"that's commented","Fragments":["out"]},{"Key":"commented out","Fragments":["could","-","version","and","at","the"]},{"Key":"out could","Fragments":["be"]},{"Key":"lot simpler","Fragments":["if"]},{"Key":"it ternary.","Fragments":["Try"]},{"Key":"ternary. Try","Fragments":["to"]},{"Key":"one big","Fragments":["boolean"]},{"Key":"big boolean","Fragments":["statement"]},{"Key":"boolean statement","Fragments":["that","to","being","in"]},{"Key":"will evaluate","Fragments":["to"]},{"Key":"to true/false","Fragments":["for"]},{"Key":"true/false for","Fragments":["the"]},{"Key":"cases you","Fragments":["want."]},{"Key":"should look","Fragments":["into"]},{"Key":"into using","Fragments":["modulus","foreach."]},{"Key":"modulus (%)","Fragments":["and","operator"]},{"Key":"(%) and","Fragments":["check"]},{"Key":"check against","Fragments":["0","0","before","length"]},{"Key":"it's divisible.","Fragments":["However,"]},{"Key":"divisible. However,","Fragments":["nice"]},{"Key":"However, nice","Fragments":["call"]},{"Key":"nice call","Fragments":["on"]},{"Key":"on using","Fragments":["the","polymorphism.","IDictionary","one","Regex.Split()","Aggregate"]},{"Key":"the ^","Fragments":["operator,"]},{"Key":"^ operator,","Fragments":["this"]},{"Key":"operator, this","Fragments":["is"]},{"Key":"the perfect","Fragments":["place","pattern"]},{"Key":"perfect place","Fragments":["for"]},{"Key":"Ah, yes.","Fragments":["I"]},{"Key":"yes. I","Fragments":["messed"]},{"Key":"messed it","Fragments":["there."]},{"Key":"it there.","Fragments":["One","It","Nor"]},{"Key":"there. One","Fragments":["other"]},{"Key":"other small","Fragments":["optimization"]},{"Key":"small optimization","Fragments":["you"]},{"Key":"optimization you","Fragments":["could"]},{"Key":"entire boolean","Fragments":["statement,"]},{"Key":"boolean statement,","Fragments":["rather","but"]},{"Key":"statement, rather","Fragments":["than"]},{"Key":"storing it","Fragments":["in","in","away"]},{"Key":"then returning","Fragments":["that."]},{"Key":"returning that.","Fragments":["Storing"]},{"Key":"that. Storing","Fragments":["the"]},{"Key":"Storing the","Fragments":["value"]},{"Key":"value would","Fragments":["be"]},{"Key":"good if","Fragments":["it","they"]},{"Key":"were being","Fragments":["run"]},{"Key":"being run","Fragments":["through","on"]},{"Key":"run through","Fragments":["more","the","those"]},{"Key":"through more","Fragments":["checks"]},{"Key":"checks within","Fragments":["the"]},{"Key":"Thanks @marielle.","Fragments":["As"]},{"Key":"@marielle. As","Fragments":["to"]},{"Key":"using modulus,","Fragments":["you"]},{"Key":"modulus, you","Fragments":["might"]},{"Key":"have missed","Fragments":["line"]},{"Key":"missed line","Fragments":["30"]},{"Key":"line 30","Fragments":[";)"]},{"Key":"Second iteration:","Fragments":["After"]},{"Key":"iteration: After","Fragments":["looking"]},{"Key":"some nitpicks","Fragments":["elsewhere,"]},{"Key":"nitpicks elsewhere,","Fragments":["I"]},{"Key":"elsewhere, I","Fragments":["decided"]},{"Key":"add duplicate-letter","Fragments":["error-handling."]},{"Key":"probably lose","Fragments":["all"]},{"Key":"lose all","Fragments":["the"]},{"Key":"should never","Fragments":["be"]},{"Key":"Also, the","Fragments":["correct","way","unit","case","solution","equivalent"]},{"Key":"correct return","Fragments":["type"]},{"Key":"function would","Fragments":["be","return"]},{"Key":"be bool,","Fragments":["not"]},{"Key":"bool, not","Fragments":["Boolean."]},{"Key":"am wondering","Fragments":["if"]},{"Key":"a easier","Fragments":["way...","way"]},{"Key":"easier way...","Fragments":["Having"]},{"Key":"way... Having","Fragments":["three"]},{"Key":"Having three","Fragments":["\"if\""]},{"Key":"three \"if\"","Fragments":["statements","statements"]},{"Key":"statements seems","Fragments":["too"]},{"Key":"seems too","Fragments":["much.","much","manual..."]},{"Key":"cut it","Fragments":["down?","down"]},{"Key":"have cut","Fragments":["it"]},{"Key":"down (and","Fragments":["potentially"]},{"Key":"(and potentially","Fragments":["made"]},{"Key":"potentially made","Fragments":["it"]},{"Key":"more readable)","Fragments":["by"]},{"Key":"readable) by","Fragments":["using:"]},{"Key":" \u003ccode\u003eif","Fragments":["((year","(year","(year","(year"]},{"Key":"\u003ccode\u003eif ((year","Fragments":["%"]},{"Key":"((year %","Fragments":["4)","4","4)","100)","400)","100","4","100","100","100"]},{"Key":"== 0)\u003c/code\u003e","Fragments":["instead"]},{"Key":"0)\u003c/code\u003e instead","Fragments":["of"]},{"Key":"of \u003ccode\u003eif","Fragments":["(every4)\u003c/code\u003e.","(input.Any(c"]},{"Key":" Overall,","Fragments":["good","I"]},{"Key":"Overall, good","Fragments":["job!"]},{"Key":"job! I","Fragments":["like","don't"]},{"Key":"three if-statements","Fragments":["instead"]},{"Key":"if-statements instead","Fragments":["of"]},{"Key":"like \u003ccode\u003eif","Fragments":["(year"]},{"Key":"\u003ccode\u003eif (year","Fragments":["%","%","%","%"]},{"Key":"== 0)\u003c/code\u003e.","Fragments":["It's"]},{"Key":"0)\u003c/code\u003e. It's","Fragments":["a"]},{"Key":"actually worked","Fragments":["with"]},{"Key":"with dictionaries","Fragments":["or"]},{"Key":"dictionaries or","Fragments":["lists","equivalent"]},{"Key":"or lists","Fragments":["before."]},{"Key":"lists before.","Fragments":["after"]},{"Key":"before. after","Fragments":["spending"]},{"Key":"after spending","Fragments":["like"]},{"Key":"spending like","Fragments":["an"]},{"Key":"an hour","Fragments":["trying","mucking"]},{"Key":"hour trying","Fragments":["to"]},{"Key":"to troubleshoot","Fragments":["this,"]},{"Key":"troubleshoot this,","Fragments":["I"]},{"Key":"just could","Fragments":["NOT"]},{"Key":"could NOT","Fragments":["figure"]},{"Key":"NOT figure","Fragments":["out"]},{"Key":"why every","Fragments":["single"]},{"Key":"every single","Fragments":["test","array,","type","verse"]},{"Key":"single test","Fragments":["failed."]},{"Key":"did as","Fragments":["@rae"]},{"Key":"as @rae","Fragments":["suggested"]},{"Key":"@rae suggested","Fragments":["and"]},{"Key":"suggested and","Fragments":["made","have"]},{"Key":" May","Fragments":["have","wish"]},{"Key":"May have","Fragments":["cheated"]},{"Key":"have cheated","Fragments":["a"]},{"Key":"cheated a","Fragments":["bit"]},{"Key":"bit for","Fragments":["this","every"]},{"Key":"this second","Fragments":["iteration.","attempt,"]},{"Key":"second iteration.","Fragments":["It","Yes","Haven't"]},{"Key":"iteration. It","Fragments":["looks"]},{"Key":"like i","Fragments":["was"]},{"Key":"i was","Fragments":["MOSTLY"]},{"Key":"was MOSTLY","Fragments":["correct"]},{"Key":"MOSTLY correct","Fragments":["with"]},{"Key":"result, just","Fragments":["the"]},{"Key":"was adding","Fragments":["and"]},{"Key":"handling results","Fragments":["didn't"]},{"Key":"results didn't","Fragments":["create"]},{"Key":"correct end","Fragments":["result."]},{"Key":"end result.","Fragments":["Changed"]},{"Key":"result. Changed","Fragments":["to"]},{"Key":"using .Add","Fragments":["to"]},{"Key":".Add to","Fragments":["add"]},{"Key":"add to","Fragments":["the","the","the"]},{"Key":"dictionary, seems","Fragments":["to"]},{"Key":"suggestion of","Fragments":["adding","inverting","@krystina"]},{"Key":"adding braces.","Fragments":["After"]},{"Key":"braces. After","Fragments":["reading"]},{"Key":"reading through","Fragments":["other"]},{"Key":"solutions I","Fragments":["think","realized","have","came"]},{"Key":"return states","Fragments":["with"]},{"Key":"states with","Fragments":["a"]},{"Key":"the end.","Fragments":["Seems",":)"]},{"Key":"end. Seems","Fragments":["like"]},{"Key":"Seems like","Fragments":["nested","a"]},{"Key":"like nested","Fragments":["variables"]},{"Key":"nested variables","Fragments":["on"]},{"Key":"variables on","Fragments":["simple"]},{"Key":"on simple","Fragments":["methods"]},{"Key":"not best","Fragments":["practice."]},{"Key":"Studio pre-populated","Fragments":["the"]},{"Key":"pre-populated the","Fragments":["file"]},{"Key":"file with","Fragments":["those"]},{"Key":"using statements.","Fragments":["You're","It"]},{"Key":"statements. You're","Fragments":["right,"]},{"Key":"right, their","Fragments":["not"]},{"Key":"their not","Fragments":["really"]},{"Key":"needed. MSDN","Fragments":["says"]},{"Key":"MSDN says","Fragments":["that"]},{"Key":"says that","Fragments":["bool","strands","one"]},{"Key":"that bool","Fragments":["is","is"]},{"Key":"bool is","Fragments":["an","the"]},{"Key":"for Boolean:","Fragments":["'http://msdn.microsoft.com/en-us/library/c8f5xwh7.aspx'."]},{"Key":"Boolean: 'http://msdn.microsoft.com/en-us/library/c8f5xwh7.aspx'.","Fragments":["I"]},{"Key":"'http://msdn.microsoft.com/en-us/library/c8f5xwh7.aspx'. I","Fragments":["see"]},{"Key":"the c#","Fragments":["keyword,","case","standard","case","case","case","stream"]},{"Key":"c# keyword,","Fragments":["which"]},{"Key":"keyword, which","Fragments":["probably"]},{"Key":"which probably","Fragments":["makes"]},{"Key":"probably makes","Fragments":["it"]},{"Key":"the better","Fragments":["practice."]},{"Key":"better practice.","Fragments":["But"]},{"Key":"practice. But","Fragments":["since"]},{"Key":"But since","Fragments":["bool"]},{"Key":"since bool","Fragments":["and"]},{"Key":"Boolean are","Fragments":["really"]},{"Key":"really the","Fragments":["same","original","number"]},{"Key":"in Windows,","Fragments":["wouldn't"]},{"Key":"Windows, wouldn't","Fragments":["that"]},{"Key":"wouldn't that","Fragments":["make","make"]},{"Key":"personal preference?","Fragments":["As"]},{"Key":"preference? As","Fragments":["long"]},{"Key":"As long","Fragments":["as","as","as"]},{"Key":"it's used","Fragments":["consistently"]},{"Key":"used consistently","Fragments":["one"]},{"Key":"consistently one","Fragments":["way"]},{"Key":"other, I","Fragments":["think"]},{"Key":"That's true!","Fragments":["I'll"]},{"Key":"true! I'll","Fragments":["do"]},{"Key":" Actually","Fragments":["-","i","quick","want","I"]},{"Key":"Actually -","Fragments":["very"]},{"Key":"- very","Fragments":["close"]},{"Key":"very close","Fragments":["to","second."]},{"Key":"did -","Fragments":["I"]},{"Key":"saw some","Fragments":["suggestions"]},{"Key":"some suggestions","Fragments":["to","from"]},{"Key":"the \"%4\"","Fragments":["first...but"]},{"Key":"\"%4\" first...but","Fragments":["since"]},{"Key":"first...but since","Fragments":["this"]},{"Key":"the \"default\"","Fragments":["check"]},{"Key":"\"default\" check","Fragments":["it"]},{"Key":"check it","Fragments":["seemed","for"]},{"Key":"reduce one","Fragments":["loop."]},{"Key":"one loop.","Fragments":["Very"]},{"Key":"loop. Very","Fragments":["clear"]},{"Key":"Very clear","Fragments":["solution"]},{"Key":"clear solution","Fragments":["and"]},{"Key":"Not exactly","Fragments":["sure","a"]},{"Key":"exactly sure","Fragments":["what","how","what"]},{"Key":"they mean","Fragments":["by"]},{"Key":"mean by","Fragments":["alias","'intend"]},{"Key":"by alias","Fragments":["in"]},{"Key":"alias in","Fragments":["that","my"]},{"Key":"that article,","Fragments":["but"]},{"Key":"article, but","Fragments":["Boolean"]},{"Key":"but Boolean","Fragments":["is"]},{"Key":"Boolean is","Fragments":["not"]},{"Key":"a recognized","Fragments":["keyword"]},{"Key":"recognized keyword","Fragments":["in"]},{"Key":"keyword in","Fragments":["C#."]},{"Key":"C#. 2nd","Fragments":["iteration"]},{"Key":"2nd iteration","Fragments":["is","uses","just"]},{"Key":"is looking","Fragments":["much","for"]},{"Key":"looking much","Fragments":["better."]},{"Key":" Yes!","Fragments":["You","Sorry"]},{"Key":"Yes! You","Fragments":["can"]},{"Key":"use \u0026\u0026","Fragments":["(for","and"]},{"Key":"\u0026\u0026 (for","Fragments":["and)"]},{"Key":"(for and)","Fragments":["and"]},{"Key":"and) and","Fragments":["||"]},{"Key":"|| (for","Fragments":["or)."]},{"Key":"example, instead","Fragments":["of:"]},{"Key":" \u003ccode\u003e\u0026\u0026\u003c/code\u003e","Fragments":["and"]},{"Key":"\u003ccode\u003e\u0026\u0026\u003c/code\u003e and","Fragments":["\u003ccode\u003e||\u003c/code\u003e"]},{"Key":"and \u003ccode\u003e||\u003c/code\u003e","Fragments":["are"]},{"Key":"\u003ccode\u003e||\u003c/code\u003e are","Fragments":["known"]},{"Key":"are known","Fragments":["as","to","to"]},{"Key":"as logical","Fragments":["operators."]},{"Key":"Try http://www.completecsharptutorial.com/basic/logical-opeartors.php","Fragments":["for"]},{"Key":"http://www.completecsharptutorial.com/basic/logical-opeartors.php for","Fragments":["a"]},{"Key":"how efficient","Fragments":["my"]},{"Key":"efficient my","Fragments":["method"]},{"Key":"my method","Fragments":["of","similar","based"]},{"Key":"checking is,","Fragments":["since"]},{"Key":"is, since","Fragments":["I"]},{"Key":"I convert","Fragments":["to","the","it"]},{"Key":"convert to","Fragments":["a","days","array"]},{"Key":"char array,","Fragments":["sort"]},{"Key":"array, sort","Fragments":["then"]},{"Key":"sort then","Fragments":["change"]},{"Key":"then change","Fragments":["to"]},{"Key":"to strings","Fragments":["to","and"]},{"Key":"to compare.","Fragments":["But"]},{"Key":"compare. But","Fragments":["it's"]},{"Key":"But it's","Fragments":["what","relatively"]},{"Key":"it's what","Fragments":["came"]},{"Key":"what came","Fragments":["to"]},{"Key":"too fond","Fragments":["of"]},{"Key":"fond of","Fragments":["the"]},{"Key":"stored my","Fragments":["initial"]},{"Key":"initial results","Fragments":["in"]},{"Key":"a list,","Fragments":["then"]},{"Key":"list, then","Fragments":["converted","attempt","perform"]},{"Key":"then converted","Fragments":["those"]},{"Key":"converted those","Fragments":["to"]},{"Key":"those to","Fragments":["an"]},{"Key":"and had","Fragments":["to"]},{"Key":"store it","Fragments":["in"]},{"Key":"new variable.","Fragments":["I"]},{"Key":"variable. I","Fragments":["did"]},{"Key":"this since","Fragments":["there's"]},{"Key":"no Array.Push()","Fragments":["type"]},{"Key":"Array.Push() type","Fragments":["of"]},{"Key":"of method","Fragments":["like"]},{"Key":"like I'm","Fragments":["used"]},{"Key":"in php","Fragments":["and"]},{"Key":"php and","Fragments":["javascript."]},{"Key":"and javascript.","Fragments":["If"]},{"Key":"javascript. If","Fragments":["there's"]},{"Key":"If there's","Fragments":["another,"]},{"Key":"there's another,","Fragments":["better"]},{"Key":"another, better","Fragments":["way"]},{"Key":"that, I'd","Fragments":["be"]},{"Key":"be glad","Fragments":["to"]},{"Key":"glad to","Fragments":["know"]},{"Key":"feedback! I","Fragments":["felt","think"]},{"Key":"felt this","Fragments":["was"]},{"Key":"was slightly","Fragments":["easier"]},{"Key":"understand than","Fragments":["a"]},{"Key":"a one-liner;","Fragments":["maybe"]},{"Key":"one-liner; maybe","Fragments":["I"]},{"Key":"have added","Fragments":["the","a","the","timings"]},{"Key":"text from","Fragments":["the"]},{"Key":"the description","Fragments":["of","which","so"]},{"Key":"description of","Fragments":["which","what"]},{"Key":"which years","Fragments":["are"]},{"Key":"years next","Fragments":["to"]},{"Key":"relevant if","Fragments":["statements."]},{"Key":"This iteration","Fragments":["passes","takes","changes"]},{"Key":"iteration passes","Fragments":["14","all"]},{"Key":"passes 14","Fragments":["out"]},{"Key":"14 out","Fragments":["of"]},{"Key":"of 16","Fragments":["tests."]},{"Key":"16 tests.","Fragments":["It"]},{"Key":"It fails","Fragments":["Prolonged_silence","\u003ccode\u003eSum_to_1000()\u003c/code\u003e"]},{"Key":"fails Prolonged_silence","Fragments":["and"]},{"Key":"Prolonged_silence and","Fragments":["Question_with_only_numbers."]},{"Key":"disagree that","Fragments":["your"]},{"Key":"your rejected","Fragments":["code"]},{"Key":"rejected code","Fragments":["involving"]},{"Key":"code involving","Fragments":["the"]},{"Key":"is \"not","Fragments":["much"]},{"Key":"\"not much","Fragments":["more"]},{"Key":"more readable\".","Fragments":["That"]},{"Key":"readable\". That","Fragments":["one"]},{"Key":"That one","Fragments":["line"]},{"Key":"line says","Fragments":["\"If"]},{"Key":"says \"If","Fragments":["year"]},{"Key":"\"If year","Fragments":["is"]},{"Key":"4 then","Fragments":["if"]},{"Key":"then if","Fragments":["it"]},{"Key":"or is","Fragments":["divisible","this","there"]},{"Key":"400 then","Fragments":["it"]},{"Key":"leap year.\"","Fragments":["In","unquestionably"]},{"Key":"year.\" In","Fragments":["a"]},{"Key":"line. The","Fragments":["code"]},{"Key":"you posted","Fragments":["says:"]},{"Key":"posted says:","Fragments":["\"If"]},{"Key":"says: \"If","Fragments":["it"]},{"Key":"\"If it","Fragments":["is"]},{"Key":"haven't returned","Fragments":["and"]},{"Key":"returned and","Fragments":["it","it"]},{"Key":"100 it","Fragments":["is","is"]},{"Key":"not returned","Fragments":["and","it"]},{"Key":"400 it","Fragments":["is","is"]},{"Key":"returned it","Fragments":["is"]},{"Key":"leap year\"","Fragments":["That"]},{"Key":"year\" That","Fragments":["is"]},{"Key":"of mental","Fragments":["gyrations","unpacking"]},{"Key":"mental gyrations","Fragments":["to"]},{"Key":"gyrations to","Fragments":["understand"]},{"Key":"code. Of","Fragments":["course"]},{"Key":"course having","Fragments":["3"]},{"Key":"having 3","Fragments":["different"]},{"Key":"3 different","Fragments":["functions","booleans"]},{"Key":"different functions","Fragments":["may"]},{"Key":"functions may","Fragments":["be"]},{"Key":"a trade","Fragments":["off,","off","off.","off"]},{"Key":"trade off,","Fragments":["but"]},{"Key":"off, but","Fragments":["there"]},{"Key":"are other","Fragments":["ways","countries","faster","statements","years,"]},{"Key":"other ways","Fragments":["to","it"]},{"Key":"say mostly","Fragments":["the"]},{"Key":"you @carol","Fragments":["for"]},{"Key":"@carol for","Fragments":["all"]},{"Key":"thinking you","Fragments":["got"]},{"Key":"me through!","Fragments":[":)"]},{"Key":"1. You","Fragments":["are"]},{"Key":"right, using","Fragments":["IDictionary\u003c\u003e"]},{"Key":"IDictionary\u003c\u003e is","Fragments":["really"]},{"Key":"didn't had","Fragments":["the"]},{"Key":"the concern","Fragments":["about","with"]},{"Key":"concern about","Fragments":["checking"]},{"Key":"about checking","Fragments":["for","for","whether"]},{"Key":"the nulls","Fragments":["in"]},{"Key":"nulls in","Fragments":["this","input,"]},{"Key":"world this","Fragments":["is"]},{"Key":"am starting","Fragments":["to"]},{"Key":"to knowing","Fragments":["Linq"]},{"Key":"knowing Linq","Fragments":["now,"]},{"Key":"Linq now,","Fragments":["and"]},{"Key":"it's amazing","Fragments":["what"]},{"Key":"amazing what","Fragments":["we","you"]},{"Key":"what we","Fragments":["can","can"]},{"Key":"with it!","Fragments":["So"]},{"Key":"it! So","Fragments":["I"]},{"Key":"in every","Fragments":["opportunity...","function"]},{"Key":"every opportunity...","Fragments":[":D"]},{"Key":"4. Again,","Fragments":["you"]},{"Key":"Again, you","Fragments":["are"]},{"Key":"are right!","Fragments":["Before"]},{"Key":"right! Before","Fragments":["initializing"]},{"Key":"Before initializing","Fragments":["stuff,"]},{"Key":"initializing stuff,","Fragments":["I"]},{"Key":"stuff, I","Fragments":["should"]},{"Key":"So, thank","Fragments":["you"]},{"Key":"you again!","Fragments":["Please,"]},{"Key":"again! Please,","Fragments":["check"]},{"Key":"Please, check","Fragments":["the"]},{"Key":"second iteration,","Fragments":["and","although"]},{"Key":"iteration, and","Fragments":["tell"]},{"Key":"and tell","Fragments":["me","me"]},{"Key":"me what","Fragments":["you","you"]},{"Key":"I FINALLY","Fragments":["finished"]},{"Key":"FINALLY finished","Fragments":["this"]},{"Key":"finished this","Fragments":["one"]},{"Key":"after several","Fragments":["painful"]},{"Key":"several painful","Fragments":["days"]},{"Key":"painful days","Fragments":["of"]},{"Key":"days of","Fragments":["Regex","a"]},{"Key":"of Regex","Fragments":["indoctrination.","but","to","or"]},{"Key":"Regex indoctrination.","Fragments":["So"]},{"Key":"indoctrination. So","Fragments":["after"]},{"Key":"So after","Fragments":["the"]},{"Key":"the smoke","Fragments":["cleared"]},{"Key":"smoke cleared","Fragments":["this"]},{"Key":"cleared this","Fragments":["is"]},{"Key":"have come","Fragments":["up"]},{"Key":"do result[item.Value[i].ToLower()]","Fragments":["="]},{"Key":"result[item.Value[i].ToLower()] =","Fragments":["item.Key,"]},{"Key":"= item.Key,","Fragments":["you"]},{"Key":"item.Key, you","Fragments":["can"]},{"Key":"can avoid","Fragments":["crashes","crashes","a","a","a","a","a","a","a","a","a","creating","a","a","a","a","a","a","some","extra","it","it","the","the","both","the"]},{"Key":"avoid crashes","Fragments":["if","if"]},{"Key":"crashes if","Fragments":["someone","someone"]},{"Key":"someone sends","Fragments":["in","in","in"]},{"Key":"sends in","Fragments":["{","{","values"]},{"Key":"in {","Fragments":["1,","1,","1,","1,","1,","1,","1,","1,","1,","1,","1,","1,","1,","1,","1,","1,","1,"]},{"Key":"1, {","Fragments":["\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"a\",","\"A\",","\"a\",","\"a\","]},{"Key":"\"a\", \"A\"","Fragments":["}","}","}","}","}","}","}","}","}","}","}","}","}","}","}","}","}","}"]},{"Key":"\"A\" }","Fragments":["}.","}.","}.","}","}","}","}","}","}","}","}","}","}","}","}","}","}","}"]},{"Key":"} }.","Fragments":["Last","Last","The"]},{"Key":"}. Last","Fragments":["one","one"]},{"Key":"one in","Fragments":["wins.","wins.","your","the","the","my"]},{"Key":"Also, what","Fragments":["happens","happens","if"]},{"Key":"if input","Fragments":["is","is","is"]},{"Key":"null, item.Value","Fragments":["is","is"]},{"Key":"item.Value is","Fragments":["null,","null,"]},{"Key":"null, or","Fragments":["item.Value[i]","letter","letter","character","letter","letter","character","s","letter","letter","letter","letter","letter","letter","letter","x","item","s"]},{"Key":"or item.Value[i]","Fragments":["is"]},{"Key":"item.Value[i] is","Fragments":["null?"]},{"Key":" One,","Fragments":["I"]},{"Key":"One, I","Fragments":["noticed"]},{"Key":"that nobody","Fragments":["else"]},{"Key":"nobody else","Fragments":["was"]},{"Key":"else was","Fragments":["including"]},{"Key":"was including","Fragments":["program"]},{"Key":"including program","Fragments":["code"]},{"Key":"program code","Fragments":["so"]},{"Key":"removed it.","Fragments":["(Unfortunately"]},{"Key":"it. (Unfortunately","Fragments":["the"]},{"Key":"(Unfortunately the","Fragments":["file"]},{"Key":"file is","Fragments":["still"]},{"Key":"still called","Fragments":["program.cs"]},{"Key":"called program.cs","Fragments":["instead"]},{"Key":"program.cs instead","Fragments":["of"]},{"Key":" Two,","Fragments":["I"]},{"Key":"Two, I","Fragments":["looked"]},{"Key":"conversation example","Fragments":["and"]},{"Key":"example and","Fragments":["really"]},{"Key":"lambda idea","Fragments":["from"]},{"Key":"from ruby.","Fragments":["I"]},{"Key":"ruby. I","Fragments":["decided"]},{"Key":"my C#","Fragments":["code.","experience","experience"]},{"Key":" @dejah","Fragments":["it"]},{"Key":"@dejah it","Fragments":["is"]},{"Key":"isn't much","Fragments":["but"]},{"Key":"much but","Fragments":["replacing"]},{"Key":"but replacing","Fragments":["the"]},{"Key":"the isDivisible","Fragments":["functions","function"]},{"Key":"isDivisible functions","Fragments":["with"]},{"Key":"functions with","Fragments":["the"]},{"Key":"expression really","Fragments":["makes"]},{"Key":"it tougher","Fragments":["to"]},{"Key":"to parse.","Fragments":["It"]},{"Key":"parse. It","Fragments":["isn't"]},{"Key":"between unintelligible","Fragments":["code"]},{"Key":"unintelligible code","Fragments":["and"]},{"Key":"and intelligible","Fragments":["code,"]},{"Key":"intelligible code,","Fragments":["but"]},{"Key":"a reduction","Fragments":["in"]},{"Key":"reduction in","Fragments":["how"]},{"Key":"in how","Fragments":["long","python"]},{"Key":"to spend","Fragments":["to","the","energy","a"]},{"Key":"spend to","Fragments":["understand"]},{"Key":"understand it.","Fragments":["I","I"]},{"Key":"my next","Fragments":["iteration","re-factor.","iteration.","iteration","version.)"]},{"Key":"next iteration","Fragments":["preserves","then.","out.","done","by","this","and","feels","the","!"]},{"Key":"iteration preserves","Fragments":["(enhances?)"]},{"Key":"preserves (enhances?)","Fragments":["the"]},{"Key":"(enhances?) the","Fragments":["readability"]},{"Key":"readability while","Fragments":["also"]},{"Key":"also putting","Fragments":["some","everything"]},{"Key":"putting some","Fragments":["more"]},{"Key":"more power","Fragments":["into","to"]},{"Key":"power into","Fragments":["the"]},{"Key":"isDivisible function","Fragments":["by"]},{"Key":"function by","Fragments":["turning"]},{"Key":"by turning","Fragments":["it"]},{"Key":"turning it","Fragments":["into"]},{"Key":"and capturing","Fragments":["the"]},{"Key":"capturing the","Fragments":["year"]},{"Key":"one parameter","Fragments":["is"]},{"Key":"parameter is","Fragments":["required","zero","a"]},{"Key":"required in","Fragments":["the"]},{"Key":"the call.","Fragments":["(I"]},{"Key":"call. (I","Fragments":["totally"]},{"Key":"(I totally","Fragments":["copied"]},{"Key":"totally copied","Fragments":["this"]},{"Key":"copied this","Fragments":["from"]},{"Key":"this from","Fragments":["the"]},{"Key":"the sample","Fragments":["conversation","conversation","conversation"]},{"Key":"sample conversation","Fragments":["on","for","in"]},{"Key":"conversation on","Fragments":["exercism.io)"]},{"Key":"Should really","Fragments":["return"]},{"Key":"really return","Fragments":["IDictionary\u003c\u003e"]},{"Key":"IDictionary\u003c\u003e instead","Fragments":["of","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"of object.","Fragments":["While"]},{"Key":"object. While","Fragments":["object"]},{"Key":"While object","Fragments":["will"]},{"Key":"object will","Fragments":["pass"]},{"Key":"wouldn't help","Fragments":["any"]},{"Key":"help any","Fragments":["consumers"]},{"Key":"any consumers","Fragments":["of"]},{"Key":"consumers of","Fragments":["this"]},{"Key":"do expected[letter.ToLower()]","Fragments":["=","="]},{"Key":"expected[letter.ToLower()] =","Fragments":["oldPointValues.Key,","entry.Key,"]},{"Key":"= oldPointValues.Key,","Fragments":["you"]},{"Key":"oldPointValues.Key, you","Fragments":["can"]},{"Key":"to try/catch","Fragments":["for"]},{"Key":"try/catch for","Fragments":["something"]},{"Key":"for something","Fragments":["you","that","that","different","like","that"]},{"Key":"something you","Fragments":["can","may","did"]},{"Key":"can prevent.","Fragments":["It"]},{"Key":"prevent. It","Fragments":["takes"]},{"Key":"It takes","Fragments":["a","some"]},{"Key":"more resources","Fragments":["to"]},{"Key":"resources to","Fragments":["be"]},{"Key":"be reactive","Fragments":["than"]},{"Key":"reactive than","Fragments":["preventative."]},{"Key":"if old","Fragments":["is","is","is","is","is","is","is","is"]},{"Key":"null, oldPointValues.Value","Fragments":["is"]},{"Key":"oldPointValues.Value is","Fragments":["null,"]},{"Key":"few comments.","Fragments":[":)"]},{"Key":"1. It","Fragments":["would","should"]},{"Key":"would depend","Fragments":["on","on","on"]},{"Key":"depend on","Fragments":["the","the","the","the","the","the","the"]},{"Key":"business requirements,","Fragments":["but"]},{"Key":"check may","Fragments":["not"]},{"Key":"be necessary.","Fragments":["If"]},{"Key":"necessary. If","Fragments":["you"]},{"Key":"were given","Fragments":["no","any"]},{"Key":"given no","Fragments":["data,"]},{"Key":"no data,","Fragments":["the"]},{"Key":"data, the","Fragments":["transform"]},{"Key":"the transform","Fragments":["would"]},{"Key":"transform would","Fragments":["simply"]},{"Key":"would simply","Fragments":["return","only"]},{"Key":"return no","Fragments":["data."]},{"Key":"2. IsNullOrWhiteSpace","Fragments":["on"]},{"Key":"IsNullOrWhiteSpace on","Fragments":["line"]},{"Key":"line 15","Fragments":["should","you"]},{"Key":"15 should","Fragments":["probably"]},{"Key":"probably just","Fragments":["be","handle","do"]},{"Key":"be IsNullOrEmpty.","Fragments":["It"]},{"Key":"IsNullOrEmpty. It","Fragments":["is"]},{"Key":"a \"","Fragments":["\""]},{"Key":"\" (blank)","Fragments":["tile"]},{"Key":"(blank) tile","Fragments":["worth"]},{"Key":"tile worth","Fragments":["0"]},{"Key":"worth 0","Fragments":["points","points"]},{"Key":"0 points","Fragments":["is","in"]},{"Key":"points is","Fragments":["given."]},{"Key":"is given.","Fragments":[":)","If"]},{"Key":"given. :)","Fragments":["[Missed"]},{"Key":":) [Missed","Fragments":["scrabble"]},{"Key":"[Missed scrabble","Fragments":["tile]"]},{"Key":"this version","Fragments":["of","(in","pass","shows","is"]},{"Key":"LINQ will","Fragments":["work"]},{"Key":"work just","Fragments":["fine,","as","fine"]},{"Key":"just fine,","Fragments":["what"]},{"Key":"fine, what","Fragments":["happens"]},{"Key":"in values","Fragments":["like"]},{"Key":"values like","Fragments":["{","MERCURY_YEARS_PER_EARTH_YEAR"]},{"Key":"like {","Fragments":["1,"]},{"Key":"}. The","Fragments":["initial"]},{"Key":"The initial","Fragments":["query"]},{"Key":"initial query","Fragments":["will"]},{"Key":"query will","Fragments":["work,"]},{"Key":"do your","Fragments":["ToDictionary"]},{"Key":"your ToDictionary","Fragments":["call"]},{"Key":"ToDictionary call","Fragments":["and"]},{"Key":"and force","Fragments":["everything"]},{"Key":"force everything","Fragments":["to"]},{"Key":"everything to","Fragments":[".ToLower(),","longs."]},{"Key":"to .ToLower(),","Fragments":["it"]},{"Key":".ToLower(), it","Fragments":["will"]},{"Key":"will crash.","Fragments":["Again,"]},{"Key":"crash. Again,","Fragments":["this"]},{"Key":"Again, this","Fragments":["goes"]},{"Key":"this goes","Fragments":["outside"]},{"Key":"goes outside","Fragments":["of"]},{"Key":"the Unit","Fragments":["Tests,"]},{"Key":"Unit Tests,","Fragments":["but"]},{"Key":"Tests, but","Fragments":["I"]},{"Key":"always try","Fragments":["to","this:"]},{"Key":"be thorough.","Fragments":[":)"]},{"Key":"I grouped","Fragments":["all"]},{"Key":"grouped all","Fragments":["the"]},{"Key":"by their","Fragments":["expected","specific","ASCII","index."]},{"Key":"their expected","Fragments":["output"]},{"Key":"expected output","Fragments":["and"]},{"Key":"output and","Fragments":["made"]},{"Key":"comment describing","Fragments":["the"]},{"Key":"algorithm for","Fragments":["each","computing"]},{"Key":"each test,","Fragments":["reordering","put"]},{"Key":"test, reordering","Fragments":["the"]},{"Key":"reordering the","Fragments":["tests","test"]},{"Key":"tests some","Fragments":["made"]},{"Key":"some made","Fragments":["the"]},{"Key":"algorithm easier.","Fragments":["Then"]},{"Key":"easier. Then","Fragments":["I"]},{"Key":"I implemented","Fragments":["each","the","the","it","it","a","it"]},{"Key":"implemented each","Fragments":["line."]},{"Key":"each line.","Fragments":["I"]},{"Key":"linq statement","Fragments":["to"]},{"Key":"statement to","Fragments":["get","a","add","return","do"]},{"Key":"get all","Fragments":["the","the","the"]},{"Key":"were letters","Fragments":["into"]},{"Key":"letters into","Fragments":["a"]},{"Key":"new string","Fragments":["then","of","with","representing","however,"]},{"Key":"string then","Fragments":["check"]},{"Key":"then check","Fragments":["that","if","to","the","the"]},{"Key":"all uppercase,","Fragments":["but"]},{"Key":"uppercase, but","Fragments":["I"]},{"Key":"know linq","Fragments":["at"]},{"Key":"linq at","Fragments":["all"]},{"Key":"all and","Fragments":["the"]},{"Key":"loop wasn't","Fragments":["too"]},{"Key":"wasn't too","Fragments":["bad."]},{"Key":"too bad.","Fragments":["I"]},{"Key":"bad. I","Fragments":["put"]},{"Key":"own function","Fragments":["so","so"]},{"Key":"name could","Fragments":["document"]},{"Key":"could document","Fragments":["what","it"]},{"Key":"document what","Fragments":["it"]},{"Key":"constants bare,","Fragments":["named"]},{"Key":"bare, named","Fragments":["the"]},{"Key":"as now,","Fragments":["but"]},{"Key":"now, but","Fragments":["it","I'm","with"]},{"Key":"name described","Fragments":["the"]},{"Key":"described the","Fragments":["response,"]},{"Key":"response, not","Fragments":["to"]},{"Key":"was responding.","Fragments":["If"]},{"Key":"responding. If","Fragments":["the"]},{"Key":"language supported","Fragments":["string"]},{"Key":"supported string","Fragments":["enums"]},{"Key":"string enums","Fragments":["that"]},{"Key":"enums that","Fragments":["would"]},{"Key":"been perfect,","Fragments":["but"]},{"Key":"perfect, but","Fragments":["the"]},{"Key":"the structure","Fragments":["does"]},{"Key":"structure does","Fragments":["a"]},{"Key":"good job","Fragments":["of"]},{"Key":"of grouping","Fragments":["the"]},{"Key":"grouping the","Fragments":["constants","if","if"]},{"Key":"constants and","Fragments":["return","then"]},{"Key":"return ReponseTo.Nothing","Fragments":["makes"]},{"Key":"ReponseTo.Nothing makes","Fragments":["a"]},{"Key":"makes a","Fragments":["lot","copy","year","year"]},{"Key":"sense than","Fragments":["return"]},{"Key":"than return","Fragments":["Nothing."]},{"Key":"good, just","Fragments":["a","a","a","a","a","a","a","a","a","a","a","a","a","a","one"]},{"Key":"to consider.","Fragments":[":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)","I"]},{"Key":"Should in/out","Fragments":["type","type","type","type","type","type","type","type","type","type","type","type","type","type","type"]},{"Key":"in/out type","Fragments":["be","be","be","be","be","be","be","be","be","be","be","be","be","be","be","for"]},{"Key":"type be","Fragments":["IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e","IDictionary\u003c\u003e"]},{"Key":"be IDictionary\u003c\u003e","Fragments":["instead","instead","instead","instead","instead","instead","instead","instead","instead","instead","instead","instead","instead","instead","instead"]},{"Key":"null, letters","Fragments":["is","is"]},{"Key":"letters is","Fragments":["null,","null,"]},{"Key":"3. If","Fragments":["someone","someone","someone","someone","someone","someone","someone","someone","someone","someone"]},{"Key":"someone sent","Fragments":["in","in","in","in","in","in","in","in","in","in","in","in","in","in","in"]},{"Key":"sent in","Fragments":["{","{","{","{","{","{","{","{","{","{","{","{","{","{","{"]},{"Key":"} }","Fragments":["as","as","as","as","as","as","as","as","as","as","as","as","as","to","as","as"]},{"Key":"} as","Fragments":["data,","data,","data,","data,","data,","data,","data,","data,","data,","data,","data,","data,","data,","data,","data,"]},{"Key":"as data,","Fragments":["this","this","this","this","this","this","this","this","this","this","this","this","this","this","this"]},{"Key":"would crash.","Fragments":["If","If","If","If","If","If","If","If","If","If","If","If","If","If","If"]},{"Key":"crash. If","Fragments":["you","you","you","you","you","you","you","you","you","you","you","you","you","you","you"]},{"Key":"do transform[letter.ToLower()]","Fragments":["="]},{"Key":"transform[letter.ToLower()] =","Fragments":["entry.Key,"]},{"Key":"= entry.Key,","Fragments":["you","you","you","you","you","you","you","you","you","you"]},{"Key":"entry.Key, you","Fragments":["can","can","can","can","can","can","can","can","can","can"]},{"Key":"a crash.","Fragments":["Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last"]},{"Key":"crash. Last","Fragments":["one","one","one","one","one","one","one","one","one","one","one","one","one","one","one"]},{"Key":"one wins,","Fragments":["though.","though.","though.","though.","though.","though.","though.","though.","though.","though.","though.","though.","though.","though.","though."]},{"Key":"That's about","Fragments":["it!","it!","it!","it!","it!","it!","it!","it!","it!","it!","it!","it!","it!","it!","it!","it!"]},{"Key":"about it!","Fragments":[":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)",":)"]},{"Key":"1. Probably,","Fragments":["yes."]},{"Key":"Probably, yes.","Fragments":["I've"]},{"Key":"yes. I've","Fragments":["ended"]},{"Key":"I've ended","Fragments":["up"]},{"Key":"up getting","Fragments":["used"]},{"Key":"getting used","Fragments":["to"]},{"Key":"the Map","Fragments":["class/interface"]},{"Key":"Map class/interface","Fragments":["in"]},{"Key":"class/interface in","Fragments":["Java,"]},{"Key":"in Java,","Fragments":["so"]},{"Key":"Java, so","Fragments":["I'm"]},{"Key":"typing the","Fragments":["simple"]},{"Key":"simple version","Fragments":["(map)."]},{"Key":"should handle","Fragments":["that,","it)."]},{"Key":"handle that,","Fragments":["yes,"]},{"Key":"that, yes,","Fragments":["and"]},{"Key":"yes, and","Fragments":["I"]},{"Key":"will happen!","Fragments":[":)"]},{"Key":"that as","Fragments":["well:","bad)","well.","the","a"]},{"Key":"as well:","Fragments":["again,"]},{"Key":"well: again,","Fragments":["used"]},{"Key":"again, used","Fragments":["to"]},{"Key":"to Java,","Fragments":["where"]},{"Key":"Java, where","Fragments":["Map.put"]},{"Key":"where Map.put","Fragments":["just"]},{"Key":"Map.put just","Fragments":["overwrites"]},{"Key":"just overwrites","Fragments":["the"]},{"Key":"overwrites the","Fragments":["old"]},{"Key":" Thanks:","Fragments":["I'll"]},{"Key":"Thanks: I'll","Fragments":["implement"]},{"Key":"I'll implement","Fragments":["your"]},{"Key":"implement your","Fragments":["advice"]},{"Key":"your advice","Fragments":["once","and"]},{"Key":"advice once","Fragments":["I"]},{"Key":"have time","Fragments":["to!","to","to","to"]},{"Key":"if oldPair","Fragments":["is"]},{"Key":"oldPair is","Fragments":["null,"]},{"Key":"null, pair.Value","Fragments":["is","is","is"]},{"Key":"or character","Fragments":["is","is","instead.","instead."]},{"Key":"3. Most","Fragments":["people"]},{"Key":"need {","Fragments":["}."]},{"Key":"{ }.","Fragments":["I"]},{"Key":"}. I","Fragments":["usually"]},{"Key":"usually do","Fragments":["to"]},{"Key":"to see.","Fragments":["However,"]},{"Key":"see. However,","Fragments":["I"]},{"Key":"I especially","Fragments":["do"]},{"Key":"especially do","Fragments":["when"]},{"Key":"do when","Fragments":["you"]},{"Key":"have nesting","Fragments":["inside"]},{"Key":"nesting inside","Fragments":["of"]},{"Key":"of nesting.","Fragments":["It"]},{"Key":"read otherwise.","Fragments":[":)"]},{"Key":"2. I've","Fragments":["never"]},{"Key":"a \"p_\"","Fragments":["style"]},{"Key":"\"p_\" style","Fragments":["before,"]},{"Key":"style before,","Fragments":["which"]},{"Key":"before, which","Fragments":["I"]},{"Key":"assume is","Fragments":["to"]},{"Key":"to stand","Fragments":["for","my","on"]},{"Key":"stand for","Fragments":["a"]},{"Key":"a \"parameter\".","Fragments":["I'm"]},{"Key":"\"parameter\". I'm","Fragments":["not"]},{"Key":"you other","Fragments":["than"]},{"Key":"that. If","Fragments":["a"]},{"Key":"a professor","Fragments":["forced"]},{"Key":"professor forced","Fragments":["this"]},{"Key":"forced this","Fragments":["on"]},{"Key":"on you,","Fragments":["I'm"]},{"Key":"you, I'm","Fragments":["sorry!"]},{"Key":"I'm sorry!","Fragments":[":)"]},{"Key":"3. I'm","Fragments":["not","just","seeing"]},{"Key":"a SortedDictionary","Fragments":["here.","here.","or"]},{"Key":"SortedDictionary here.","Fragments":["I","I"]},{"Key":"here. I","Fragments":["could","could","have","fully","am"]},{"Key":"be useful,","Fragments":["but","but"]},{"Key":"useful, but","Fragments":["I","I"]},{"Key":"4. What","Fragments":["happens"]},{"Key":"if OldData","Fragments":["is"]},{"Key":"OldData is","Fragments":["null,"]},{"Key":"null, p_Pair.Value","Fragments":["is"]},{"Key":"p_Pair.Value is","Fragments":["null,"]},{"Key":"5. If","Fragments":["someone","someone","you"]},{"Key":"do transformed[letter.ToLower()]","Fragments":["="]},{"Key":"transformed[letter.ToLower()] =","Fragments":["entry.Key,"]},{"Key":"6. While","Fragments":["you"]},{"Key":"can flatten","Fragments":["out"]},{"Key":"flatten out","Fragments":["that","the"]},{"Key":"that dictionary,","Fragments":["it"]},{"Key":"dictionary, it","Fragments":["is"]},{"Key":"do two","Fragments":["for"]},{"Key":"two for","Fragments":["loops","each","loops"]},{"Key":"loops through","Fragments":["p_OldData.","all"]},{"Key":"through p_OldData.","Fragments":["You"]},{"Key":"p_OldData. You","Fragments":["end"]},{"Key":"You end","Fragments":["up"]},{"Key":"up creating","Fragments":["a"]},{"Key":"new List","Fragments":["for","to","each","to"]},{"Key":"List for","Fragments":["letters","each"]},{"Key":"for letters","Fragments":["and"]},{"Key":"you still","Fragments":["have","have","have","want"]},{"Key":"and look","Fragments":["up"]},{"Key":"Key via","Fragments":["checking"]},{"Key":"via checking","Fragments":["if"]},{"Key":"old dictionary's","Fragments":["value"]},{"Key":"dictionary's value","Fragments":["contains"]},{"Key":"value contains","Fragments":["the"]},{"Key":"given letter.","Fragments":["This"]},{"Key":"letter. This","Fragments":["is"]},{"Key":"is highly","Fragments":["inefficient.","dependent","unlikely","dependent"]},{"Key":"if inputDict","Fragments":["is"]},{"Key":"inputDict is","Fragments":["null,"]},{"Key":"do returnDict[letter.ToLower()]","Fragments":["="]},{"Key":"returnDict[letter.ToLower()] =","Fragments":["entry.Key,"]},{"Key":"if dictonaryToTransform","Fragments":["is"]},{"Key":"dictonaryToTransform is","Fragments":["null,"]},{"Key":"null, dictonaryItemToTransform.Value","Fragments":["is"]},{"Key":"dictonaryItemToTransform.Value is","Fragments":["null,"]},{"Key":"do transformedDictonary[letter.ToLower()]","Fragments":["="]},{"Key":"transformedDictonary[letter.ToLower()] =","Fragments":["entry.Key,"]},{"Key":"4. I'm","Fragments":["a"]},{"Key":"bit torn","Fragments":["whether"]},{"Key":"torn whether","Fragments":["you"]},{"Key":"create that","Fragments":["\"lowerCaseCharacter\"","documentation"]},{"Key":"that \"lowerCaseCharacter\"","Fragments":["variable"]},{"Key":"\"lowerCaseCharacter\" variable","Fragments":["there."]},{"Key":"variable there.","Fragments":["The"]},{"Key":"there. The","Fragments":["way","counters"]},{"Key":"is right","Fragments":["now,","there","about","(at","or"]},{"Key":"right now,","Fragments":["it","but,"]},{"Key":"now, it","Fragments":["is"]},{"Key":"pretty useless.","Fragments":["But,"]},{"Key":"useless. But,","Fragments":["you"]},{"Key":"But, you","Fragments":["could"]},{"Key":"it do","Fragments":["do","actually","the","instead?"]},{"Key":"do do","Fragments":["a"]},{"Key":"a ContainsKey","Fragments":["check"]},{"Key":"ContainsKey check","Fragments":["and"]},{"Key":"check and","Fragments":["throw","update","it","differ"]},{"Key":"and throw","Fragments":["an","an","an","the"]},{"Key":"error or","Fragments":["something,","warning"]},{"Key":"as nesting","Fragments":["for"]},{"Key":"nesting for","Fragments":["loops"]},{"Key":"loops goes,","Fragments":["this"]},{"Key":"goes, this","Fragments":["really"]},{"Key":"really seems","Fragments":["to","like"]},{"Key":"most logical","Fragments":["solution"]},{"Key":"logical solution","Fragments":["because"]},{"Key":"solution because","Fragments":["you"]},{"Key":"through a","Fragments":["list","sequence","Visual"]},{"Key":"characters but","Fragments":["still"]},{"Key":"still pull","Fragments":["out"]},{"Key":"with @malachi","Fragments":["in"]},{"Key":"@malachi in","Fragments":["that"]},{"Key":"should declare","Fragments":["and"]},{"Key":"declare and","Fragments":["instantiate"]},{"Key":"and instantiate","Fragments":["on"]},{"Key":"instantiate on","Fragments":["the"]},{"Key":"line. It","Fragments":["just","makes","reads"]},{"Key":"read, in","Fragments":["my"]},{"Key":"3. What","Fragments":["happens","happens"]},{"Key":"null, kp.Value","Fragments":["is"]},{"Key":"kp.Value is","Fragments":["null,"]},{"Key":"or s","Fragments":["is","is"]},{"Key":"s is","Fragments":["null?","null?"]},{"Key":"4. \"s\"","Fragments":["variable","as"]},{"Key":"\"s\" variable","Fragments":["is"]},{"Key":"bad name.","Fragments":["\"letter\""]},{"Key":"name. \"letter\"","Fragments":["or"]},{"Key":"\"letter\" or","Fragments":["\"character\""]},{"Key":"or \"character\"","Fragments":["would"]},{"Key":"\"character\" would","Fragments":["be"]},{"Key":"do output[letter.ToLower()]","Fragments":["=","="]},{"Key":"output[letter.ToLower()] =","Fragments":["entry.Key,","entry.Key,"]},{"Key":"do ret[letter.ToLower()]","Fragments":["="]},{"Key":"ret[letter.ToLower()] =","Fragments":["entry.Key,"]},{"Key":"4. Might","Fragments":["want"]},{"Key":"that {","Fragments":["at"]},{"Key":"{ at","Fragments":["the"]},{"Key":"13 on","Fragments":["the"]},{"Key":"line to","Fragments":["stay","Setup","the"]},{"Key":"stay consistent","Fragments":["with"]},{"Key":"did on","Fragments":["line"]},{"Key":"null, row.Value","Fragments":["is"]},{"Key":"row.Value is","Fragments":["null,"]},{"Key":"3. \"letter\"","Fragments":["is"]},{"Key":"\"letter\" is","Fragments":["already"]},{"Key":"a string,","Fragments":["so","only"]},{"Key":"string, so","Fragments":["you","you"]},{"Key":"call .ToString()","Fragments":["on"]},{"Key":".ToString() on","Fragments":["it."]},{"Key":"4. If","Fragments":["someone","someone"]},{"Key":"do newDictionary[letter.ToLower()]","Fragments":["="]},{"Key":"newDictionary[letter.ToLower()] =","Fragments":["row.Key,","row.Key."]},{"Key":"= row.Key,","Fragments":["you"]},{"Key":"row.Key, you","Fragments":["can"]},{"Key":"2. I'm","Fragments":["not"]},{"Key":"do results[letter.ToLower()]","Fragments":["="]},{"Key":"results[letter.ToLower()] =","Fragments":["entry.Key,"]},{"Key":"return IDictionary\u003c\u003e,","Fragments":["I"]},{"Key":"IDictionary\u003c\u003e, I","Fragments":["think"]},{"Key":"avoid creating","Fragments":["that","a"]},{"Key":"creating that","Fragments":["second"]},{"Key":"second Dictionary","Fragments":["at"]},{"Key":"Dictionary at","Fragments":["the"]},{"Key":"if oldData","Fragments":["is","is"]},{"Key":"null, oldData[value]","Fragments":["is"]},{"Key":"oldData[value] is","Fragments":["null,"]},{"Key":"do tranformedValues[letter.ToLowerInvariant()]","Fragments":["="]},{"Key":"tranformedValues[letter.ToLowerInvariant()] =","Fragments":["value,"]},{"Key":"= value,","Fragments":["you"]},{"Key":"value, you","Fragments":["can"]},{"Key":"with @dorothea","Fragments":["that"]},{"Key":"@dorothea that","Fragments":["\"value\""]},{"Key":"that \"value\"","Fragments":["is"]},{"Key":"\"value\" is","Fragments":["probably"]},{"Key":"if oldCruftyData","Fragments":["is"]},{"Key":"oldCruftyData is","Fragments":["null,"]},{"Key":"null, point.Value","Fragments":["is"]},{"Key":"point.Value is","Fragments":["null,"]},{"Key":"do shinyNewData[letter.ToLower()]","Fragments":["="]},{"Key":"shinyNewData[letter.ToLower()] =","Fragments":["entry.Key,"]},{"Key":"the \"cool\"","Fragments":["variable"]},{"Key":"\"cool\" variable","Fragments":["names."]},{"Key":"of extracting","Fragments":["the"]},{"Key":"the expressions","Fragments":["to","on","as","in","for","are"]},{"Key":"expressions to","Fragments":["variables","fix"]},{"Key":"better names.","Fragments":["I"]},{"Key":"evaluation of","Fragments":["the"]},{"Key":"expressions on","Fragments":["one"]},{"Key":"the results.","Fragments":["This"]},{"Key":"results. This","Fragments":["would"]},{"Key":"require me","Fragments":["to"]},{"Key":"have several","Fragments":["lines","one-liner"]},{"Key":"lines with","Fragments":["if","clearer"]},{"Key":"That case","Fragments":["is"]},{"Key":"is covered","Fragments":["by"]},{"Key":"covered by","Fragments":["```ViolatesTriangleInequality```","the","the","the"]},{"Key":"by ```ViolatesTriangleInequality```","Fragments":["but"]},{"Key":"```ViolatesTriangleInequality``` but","Fragments":["then"]},{"Key":"got to","Fragments":["thinking...","thinking","maintain"]},{"Key":"to thinking...","Fragments":["that"]},{"Key":"thinking... that","Fragments":["method"]},{"Key":"method kind","Fragments":["of"]},{"Key":"of covers","Fragments":["```AllSidesAreZero```"]},{"Key":"covers ```AllSidesAreZero```","Fragments":["and"]},{"Key":"```AllSidesAreZero``` and","Fragments":["```HasImpossibleSides```"]},{"Key":"and ```HasImpossibleSides```","Fragments":["as"]},{"Key":"```HasImpossibleSides``` as","Fragments":["well."]},{"Key":" Gonna","Fragments":["throw"]},{"Key":"Gonna throw","Fragments":["a"]},{"Key":"throw a","Fragments":["new","NullReferanceException","custom","NullReferenceException.","KeyNotFoundException","descriptive","KeyNotFoundException","custom"]},{"Key":"version out","Fragments":["here"]},{"Key":"out here","Fragments":["in"]},{"Key":"here in","Fragments":["a","the"]},{"Key":"a minute.","Fragments":["Thanks."]},{"Key":"the sequential","Fragments":["`return`"]},{"Key":"sequential `return`","Fragments":["statements"]},{"Key":"`return` statements","Fragments":["are"]},{"Key":"are hard","Fragments":["to"]},{"Key":"understand, especially","Fragments":["as"]},{"Key":"they sometimes","Fragments":["return"]},{"Key":"sometimes return","Fragments":["true"]},{"Key":"sometimes they","Fragments":["return","get"]},{"Key":"they return","Fragments":["false.","a"]},{"Key":" OTOH","Fragments":["I","yours"]},{"Key":"OTOH I","Fragments":["find"]},{"Key":"find complex","Fragments":["(for"]},{"Key":"complex (for","Fragments":["a"]},{"Key":"(for a","Fragments":["carefully"]},{"Key":"a carefully","Fragments":["chosen"]},{"Key":"carefully chosen","Fragments":["meaning"]},{"Key":"chosen meaning","Fragments":["of"]},{"Key":"of complex)","Fragments":["logical"]},{"Key":"complex) logical","Fragments":["expressions"]},{"Key":"logical expressions","Fragments":["hard"]},{"Key":"expressions hard","Fragments":["to"]},{"Key":"While they","Fragments":["are","do"]},{"Key":"are compact,","Fragments":["for"]},{"Key":"compact, for","Fragments":["me"]},{"Key":"me debugging","Fragments":["them"]},{"Key":"debugging them","Fragments":["can"]},{"Key":"them can","Fragments":["be"]},{"Key":"a taxing","Fragments":["mental"]},{"Key":"taxing mental","Fragments":["exercise."]},{"Key":"Some fair","Fragments":["points,"]},{"Key":"fair points,","Fragments":["thanks"]},{"Key":"points, thanks","Fragments":[":)"]},{"Key":"thanks :)","Fragments":["I"]},{"Key":"I somehow","Fragments":["got","thought"]},{"Key":"somehow got","Fragments":["it"]},{"Key":"head that","Fragments":["the"]},{"Key":"output should","Fragments":["be"]},{"Key":"be sorted,","Fragments":["but"]},{"Key":"sorted, but","Fragments":["looking"]},{"Key":"looking back","Fragments":["over","I","at"]},{"Key":"back over","Fragments":["it,"]},{"Key":"over it,","Fragments":["it's"]},{"Key":"actually required.","Fragments":["Regarding"]},{"Key":"required. Regarding","Fragments":["the"]},{"Key":"Regarding the","Fragments":["\"p_\"","format:","original","IEnumerable:","modulus:"]},{"Key":"prefix -","Fragments":["actually"]},{"Key":"- actually","Fragments":["my"]},{"Key":"actually my","Fragments":["employer"]},{"Key":"my employer","Fragments":["enforces"]},{"Key":"employer enforces","Fragments":["this,"]},{"Key":"enforces this,","Fragments":["so"]},{"Key":"so my","Fragments":["IDE"]},{"Key":"IDE complains","Fragments":["if"]},{"Key":"complains if","Fragments":["I"]},{"Key":"I leave","Fragments":["it"]},{"Key":"it out.","Fragments":["I'm","I"]},{"Key":"out. I'm","Fragments":["curious","not","working"]},{"Key":"curious now,","Fragments":["though"]},{"Key":"now, though","Fragments":["-"]},{"Key":"- I'm","Fragments":["aware","being"]},{"Key":"aware it's","Fragments":["not"]},{"Key":"common style,","Fragments":["MS"]},{"Key":"style, MS","Fragments":["recommends"]},{"Key":"MS recommends","Fragments":["differently,"]},{"Key":"recommends differently,","Fragments":["etc.,"]},{"Key":"differently, etc.,","Fragments":["but"]},{"Key":"etc., but","Fragments":["you're"]},{"Key":"you're the","Fragments":["second","first"]},{"Key":"second person","Fragments":["now"]},{"Key":"person now","Fragments":["to"]},{"Key":"now to","Fragments":["point"]},{"Key":"to point","Fragments":["that","out"]},{"Key":"out specifically.","Fragments":["What"]},{"Key":"specifically. What","Fragments":["is"]},{"Key":"it about","Fragments":["that"]},{"Key":"that particular","Fragments":["prefix","method"]},{"Key":"particular prefix","Fragments":["that"]},{"Key":"prefix that","Fragments":["sends"]},{"Key":"that sends","Fragments":["up"]},{"Key":"sends up","Fragments":["a"]},{"Key":"a red","Fragments":["flag"]},{"Key":"red flag","Fragments":["for"]},{"Key":"nit to","Fragments":["pick:"]},{"Key":"to pick:","Fragments":["the"]},{"Key":"pick: the","Fragments":["comments."]},{"Key":"comments. The","Fragments":["code"]},{"Key":"code (the","Fragments":["class"]},{"Key":"(the class","Fragments":["name,"]},{"Key":"class name,","Fragments":["the"]},{"Key":"name, the","Fragments":["method"]},{"Key":"method names)","Fragments":["seems"]},{"Key":"names) seems","Fragments":["clear"]},{"Key":"seems clear","Fragments":["enough"]},{"Key":"me. I'd","Fragments":["try"]},{"Key":"I'd try","Fragments":["to","grouping","and","and"]},{"Key":"is lost","Fragments":["in"]},{"Key":"lost in","Fragments":["understandability/clarity."]},{"Key":"not add","Fragments":["valuable","it","it","7"]},{"Key":"add valuable","Fragments":["information"]},{"Key":"valuable information","Fragments":["to"]},{"Key":"information to","Fragments":["the"]},{"Key":"code add","Fragments":["noise."]},{"Key":"add noise.","Fragments":["And"]},{"Key":"noise. And","Fragments":["sometimes"]},{"Key":"And sometimes","Fragments":["they"]},{"Key":"of synch","Fragments":["with"]},{"Key":"synch with","Fragments":["the"]},{"Key":"IsUpper method","Fragments":["since"]},{"Key":"method since","Fragments":["I"]},{"Key":"was no","Fragments":["longer"]},{"Key":"no longer","Fragments":["using","need","necessary,","get","be","needs"]},{"Key":"longer using","Fragments":["it."]},{"Key":"For your","Fragments":["first"]},{"Key":"two if's,","Fragments":["instead"]},{"Key":"if's, instead","Fragments":["of"]},{"Key":"divisible (!Divisible...)","Fragments":["I"]},{"Key":"(!Divisible...) I","Fragments":["maybe"]},{"Key":"I maybe","Fragments":["would"]},{"Key":"maybe would","Fragments":["have"]},{"Key":"just switched","Fragments":["the"]},{"Key":"the opposite,","Fragments":["makes"]},{"Key":"opposite, makes","Fragments":["it"]},{"Key":"if (DivisibleBy(year,","Fragments":["4))","100))"]},{"Key":"Very interesting","Fragments":["and"]},{"Key":"different solution.","Fragments":["Love"]},{"Key":"solution. Love","Fragments":["the"]},{"Key":"of templating","Fragments":["string.Format()."]},{"Key":"Still slightly","Fragments":["concerned"]},{"Key":"slightly concerned","Fragments":["over"]},{"Key":"over indexing","Fragments":["out"]},{"Key":"indexing out","Fragments":["of"]},{"Key":"of bounds","Fragments":["in","errors),"]},{"Key":"bounds in","Fragments":["that"]},{"Key":"that line.","Fragments":["Clearly"]},{"Key":"line. Clearly","Fragments":["this"]},{"Key":"Clearly this","Fragments":["passes"]},{"Key":"passes actual","Fragments":["tests"]},{"Key":"actual tests","Fragments":["but"]},{"Key":"but just","Fragments":["sayin","comparing"]},{"Key":" Nitpick","Fragments":["over"]},{"Key":"Nitpick over","Fragments":["digit"]},{"Key":"over digit","Fragments":["="]},{"Key":"digit =","Fragments":["seems"]},{"Key":"= seems","Fragments":["a"]},{"Key":"long handed","Fragments":["way"]},{"Key":"handed way","Fragments":["to"]},{"Key":"the numeric","Fragments":["value","only"]},{"Key":"numeric value","Fragments":["surely"]},{"Key":"value surely","Fragments":["either"]},{"Key":"surely either","Fragments":["Char.GetNumericValue()"]},{"Key":"either Char.GetNumericValue()","Fragments":["or"]},{"Key":"Char.GetNumericValue() or","Fragments":["even"]},{"Key":"even strInt[pos]","Fragments":["-'0'"]},{"Key":"strInt[pos] -'0'","Fragments":["(I"]},{"Key":"-'0' (I","Fragments":["prefer"]},{"Key":"(I prefer","Fragments":["the"]},{"Key":"of calls","Fragments":["to"]},{"Key":"to strInt.Length","Fragments":["*might*"]},{"Key":"strInt.Length *might*","Fragments":["to"]},{"Key":"*might* to","Fragments":["put"]},{"Key":"put into","Fragments":["length","a","on"]},{"Key":"into length","Fragments":["variable"]},{"Key":"length variable","Fragments":["before"]},{"Key":"variable before","Fragments":["loop?"]},{"Key":"and finally","Fragments":["surely","becomes","98259"]},{"Key":"finally surely","Fragments":["arabianChars"]},{"Key":"surely arabianChars","Fragments":["should"]},{"Key":"arabianChars should","Fragments":["be"]},{"Key":"That cant","Fragments":["pass"]},{"Key":"cant pass","Fragments":["the"]},{"Key":" Problems","Fragments":["can"]},{"Key":"Problems can","Fragments":["arise"]},{"Key":"can arise","Fragments":["when"]},{"Key":"arise when","Fragments":["null"]},{"Key":"when null","Fragments":["is"]},{"Key":"is provided","Fragments":["as","more"]},{"Key":"provided as","Fragments":["a"]},{"Key":"a parameter","Fragments":["for"]},{"Key":"parameter for","Fragments":["oldData,"]},{"Key":"for oldData,","Fragments":["for"]},{"Key":"oldData, for","Fragments":["items"]},{"Key":"for items","Fragments":["in"]},{"Key":"items in","Fragments":["the","```replaceWithSpace```."]},{"Key":" \u003ccode\u003e","Fragments":["var"]},{"Key":"\u003ccode\u003e var","Fragments":["value"]},{"Key":"var value","Fragments":["in"]},{"Key":"in oldData.Keys","Fragments":["\u003c/code\u003e"]},{"Key":"me, naming","Fragments":["the"]},{"Key":"key of","Fragments":["the"]},{"Key":"dictionary as","Fragments":["'value'","one"]},{"Key":"as 'value'","Fragments":["is"]},{"Key":"'value' is","Fragments":["a","large."]},{"Key":"bad naming","Fragments":["convention."]},{"Key":"naming convention.","Fragments":["Maybe"]},{"Key":"convention. Maybe","Fragments":["'point'"]},{"Key":"Maybe 'point'","Fragments":["or"]},{"Key":"'point' or","Fragments":["'pointForLetter'"]},{"Key":"or 'pointForLetter'","Fragments":["will"]},{"Key":"'pointForLetter' will","Fragments":["make"]},{"Key":"where same","Fragments":["letter"]},{"Key":"same letter","Fragments":["is","but"]},{"Key":"provided more","Fragments":["than"]},{"Key":"than once","Fragments":["in"]},{"Key":"parameter and","Fragments":["because"]},{"Key":"adding all","Fragments":["provided"]},{"Key":"all provided","Fragments":["letters"]},{"Key":"provided letters","Fragments":["from"]},{"Key":"letters from","Fragments":["the","the","the","the"]},{"Key":"parameter into","Fragments":["the"]},{"Key":"the transformedValues","Fragments":["dictionary,"]},{"Key":"transformedValues dictionary,","Fragments":["an"]},{"Key":"dictionary, an","Fragments":["exception"]},{"Key":"exception can","Fragments":["be"]},{"Key":"be thrown","Fragments":["or"]},{"Key":"thrown or","Fragments":["trying"]},{"Key":"or trying","Fragments":["to"]},{"Key":"to insert","Fragments":["same"]},{"Key":"insert same","Fragments":["value"]},{"Key":"same value","Fragments":["twice."]},{"Key":"value twice.","Fragments":["Maybe"]},{"Key":"twice. Maybe","Fragments":["that"]},{"Key":"Maybe that","Fragments":["should"]},{"Key":"handled somehow,","Fragments":["with"]},{"Key":"somehow, with","Fragments":["a"]},{"Key":"proper exception","Fragments":["or"]},{"Key":"just ignoring","Fragments":["the"]},{"Key":"ignoring the","Fragments":["second"]},{"Key":"long for","Fragments":["what"]},{"Key":"of all:","Fragments":["a"]},{"Key":"all: a","Fragments":["number"]},{"Key":"of constant","Fragments":["integers"]},{"Key":"constant integers","Fragments":["is"]},{"Key":"integers is","Fragments":["usually"]},{"Key":"usually better","Fragments":["expresses"]},{"Key":"better expresses","Fragments":["as"]},{"Key":"expresses as","Fragments":["an"]},{"Key":" Secondly,","Fragments":["at","you"]},{"Key":"Secondly, at","Fragments":["first"]},{"Key":"first sight","Fragments":["(haven't"]},{"Key":"sight (haven't","Fragments":["tested"]},{"Key":"(haven't tested","Fragments":["it),"]},{"Key":"tested it),","Fragments":["you're"]},{"Key":"it), you're","Fragments":["calling"]},{"Key":"you're calling","Fragments":["phrase.Trim()"]},{"Key":"calling phrase.Trim()","Fragments":["without"]},{"Key":"phrase.Trim() without","Fragments":["checking"]},{"Key":"if phrase","Fragments":["is"]},{"Key":"null. Which","Fragments":["would"]},{"Key":"Which would","Fragments":["lead"]},{"Key":"would lead","Fragments":["to","to"]},{"Key":"lead to","Fragments":["an","problems","substantial"]},{"Key":"an null","Fragments":["pointer"]},{"Key":"null pointer","Fragments":["exeption."]},{"Key":" Thirdly,","Fragments":["you"]},{"Key":"Thirdly, you","Fragments":["don't"]},{"Key":"over strings","Fragments":["to"]},{"Key":"call ToUpper,","Fragments":["there's"]},{"Key":"ToUpper, there's","Fragments":["a"]},{"Key":"for that.","Fragments":["Same","That"]},{"Key":"that. Same","Fragments":["for"]},{"Key":"Same for","Fragments":["string.last()"]},{"Key":"for string.last()","Fragments":["You"]},{"Key":"string.last() You","Fragments":["don't"]},{"Key":"rewrite it","Fragments":["yourself.","to"]},{"Key":"Well, the","Fragments":["Hungarian"]},{"Key":"the Hungarian","Fragments":["notiation"]},{"Key":"Hungarian notiation","Fragments":["prefix"]},{"Key":"notiation prefix","Fragments":["had"]},{"Key":"prefix had","Fragments":["some"]},{"Key":"past when","Fragments":["you"]},{"Key":"good IDE.","Fragments":["Nowadays,"]},{"Key":"IDE. Nowadays,","Fragments":["however,"]},{"Key":"Nowadays, however,","Fragments":["it"]},{"Key":" Company","Fragments":["coding"]},{"Key":"Company coding","Fragments":["conventions"]},{"Key":"conventions are","Fragments":["fine,"]},{"Key":"are fine,","Fragments":["but"]},{"Key":"fine, but","Fragments":["they","my","it","one"]},{"Key":"they should","Fragments":["be","have","be"]},{"Key":"be adapted","Fragments":["when"]},{"Key":"adapted when","Fragments":["they"]},{"Key":"they lose","Fragments":["their"]},{"Key":"lose their","Fragments":["usefulness."]},{"Key":"their usefulness.","Fragments":["What's"]},{"Key":"usefulness. What's","Fragments":["the"]},{"Key":"What's the","Fragments":["use","alternative?"]},{"Key":"of marking","Fragments":["a"]},{"Key":"a parameter,","Fragments":["if"]},{"Key":"parameter, if","Fragments":["you"]},{"Key":"always let","Fragments":["the"]},{"Key":"let the","Fragments":["IDE","reader","project","reader"]},{"Key":"the IDE","Fragments":["see","that"]},{"Key":"IDE see","Fragments":["where"]},{"Key":"Also, since","Fragments":["this"]},{"Key":"is C#,","Fragments":["Microsoft"]},{"Key":"C#, Microsoft","Fragments":["guidelines"]},{"Key":"Microsoft guidelines","Fragments":["expressly"]},{"Key":"guidelines expressly","Fragments":["advise"]},{"Key":"expressly advise","Fragments":["against"]},{"Key":"advise against","Fragments":["it:"]},{"Key":"against it:","Fragments":["http://msdn.microsoft.com/en-us/library/ms229045(v=vs.110).aspx"]},{"Key":"A very","Fragments":["quick","nice"]},{"Key":"very quick","Fragments":["first"]},{"Key":"quick first","Fragments":["iteration"]},{"Key":"iteration to","Fragments":["make","allow","come"]},{"Key":"make tests","Fragments":["past."]},{"Key":"Looking for","Fragments":["examples/hints","any","a"]},{"Key":"for examples/hints","Fragments":["on"]},{"Key":"examples/hints on","Fragments":["using"]},{"Key":"you MetalKid!","Fragments":["I"]},{"Key":"MetalKid! I","Fragments":["absolutely"]},{"Key":"I absolutely","Fragments":["agree","agree;","appreciate"]},{"Key":"absolutely agree","Fragments":["with"]},{"Key":"using IDictionary","Fragments":["instead"]},{"Key":"instead and","Fragments":["all"]},{"Key":"you mention.","Fragments":["Big"]},{"Key":"mention. Big","Fragments":["thanks"]},{"Key":"Big thanks","Fragments":["for"]},{"Key":"for that!","Fragments":[":)"]},{"Key":"that i","Fragments":["crash"]},{"Key":"i crash","Fragments":["with"]},{"Key":"crash with","Fragments":["my"]},{"Key":"previous code","Fragments":["but"]},{"Key":"i can't","Fragments":["really"]},{"Key":"really understand","Fragments":["why.","the"]},{"Key":"understand why.","Fragments":["Your"]},{"Key":"why. Your","Fragments":["recommended"]},{"Key":"Your recommended","Fragments":["code"]},{"Key":"recommended code","Fragments":["works"]},{"Key":"works good","Fragments":["but"]},{"Key":"i don't","Fragments":["fully","understand","get"]},{"Key":"don't fully","Fragments":["understand"]},{"Key":"understand newDictionary[letter.ToLower()]","Fragments":["="]},{"Key":"your passing","Fragments":["in"]},{"Key":"null value","Fragments":["to"]},{"Key":" Related:","Fragments":["the"]},{"Key":"Related: the","Fragments":["input.length"]},{"Key":"the input.length","Fragments":["\u003e"]},{"Key":"input.length \u003e","Fragments":["0"]},{"Key":"0 check","Fragments":["is"]},{"Key":"functionally not","Fragments":["in"]},{"Key":"can combine","Fragments":["those","similar","two","the"]},{"Key":"combine those","Fragments":["two"]},{"Key":"those two","Fragments":["at","and","cases","calls.)"]},{"Key":"two at","Fragments":["the"]},{"Key":"The isYelling","Fragments":["function"]},{"Key":"isYelling function","Fragments":["can"]},{"Key":"much shorter.","Fragments":["You"]},{"Key":"shorter. You","Fragments":["only"]},{"Key":"You only","Fragments":["need","need","need","test"]},{"Key":"only need","Fragments":["to","to","to","to","to","each","to","two.","two.","1"]},{"Key":"it contains","Fragments":["1","1"]},{"Key":"contains 1","Fragments":["letter","letter"]},{"Key":"1 letter","Fragments":["and","and"]},{"Key":"then compare","Fragments":["the","this","it"]},{"Key":"input in","Fragments":["Upper"]},{"Key":"in Upper","Fragments":["case."]},{"Key":" IsAMute:","Fragments":["again,"]},{"Key":"IsAMute: again,","Fragments":["there's"]},{"Key":"again, there's","Fragments":["an"]},{"Key":"there's an","Fragments":["extension"]},{"Key":" Okey,","Fragments":["so","so"]},{"Key":"Okey, so","Fragments":["I","there"]},{"Key":"got help","Fragments":["with"]},{"Key":"one from","Fragments":["my"]},{"Key":"my classroom","Fragments":["teacher."]},{"Key":"classroom teacher.","Fragments":["But"]},{"Key":"teacher. But","Fragments":["I"]},{"Key":"didn't quite","Fragments":["get","exit"]},{"Key":"quite get","Fragments":["it.","it"]},{"Key":"get it.","Fragments":["Could"]},{"Key":"it. Could","Fragments":["someone"]},{"Key":"someone please","Fragments":["explain","explain"]},{"Key":"explain this","Fragments":["code"]},{"Key":"line 17,","Fragments":["you"]},{"Key":"17, you","Fragments":["can"]},{"Key":"a divide","Fragments":["call"]},{"Key":"divide call","Fragments":["there,"]},{"Key":"call there,","Fragments":["but"]},{"Key":"there, but","Fragments":["technically,","I"]},{"Key":"but technically,","Fragments":["you"]},{"Key":"value \u003e","Fragments":["conversion.Key.","0"]},{"Key":"\u003e conversion.Key.","Fragments":["Less"]},{"Key":"conversion.Key. Less","Fragments":["math"]},{"Key":"Less math","Fragments":["involved."]},{"Key":"math involved.","Fragments":[":)"]},{"Key":" @orpha","Fragments":["You're"]},{"Key":"@orpha You're","Fragments":["right,"]},{"Key":"right, just","Fragments":["the"]},{"Key":"the ToUpper()","Fragments":["comparison","=="]},{"Key":"ToUpper() comparison","Fragments":["fails"]},{"Key":"comparison fails","Fragments":["the"]},{"Key":"fails the","Fragments":["Only_numbers.","`Ignores_extra_length_on_original_strand_when_longer`","test"]},{"Key":"the Only_numbers.","Fragments":["Sorry"]},{"Key":"Only_numbers. Sorry","Fragments":["about"]},{"Key":"that. Checking","Fragments":["for"]},{"Key":"input before","Fragments":["that","than"]},{"Key":"before that","Fragments":["will"]},{"Key":"pass both","Fragments":["Only_numbers"]},{"Key":"both Only_numbers","Fragments":["and"]},{"Key":"and Using_acronyms_in_regular_search,","Fragments":["though."]},{"Key":"Very close,","Fragments":["except:"]},{"Key":" ````String.Concat(GetRandomLetters(2))","Fragments":["+"]},{"Key":"````String.Concat(GetRandomLetters(2)) +","Fragments":["String.Concat(GetRandomNumber(3));````"]},{"Key":"use .Concat()","Fragments":["extension"]},{"Key":".Concat() extension","Fragments":["method"]},{"Key":"two char","Fragments":["sequences"]},{"Key":"char sequences","Fragments":["and"]},{"Key":"sequences and","Fragments":["then","count"]},{"Key":"then String.Concat","Fragments":["that"]},{"Key":"String.Concat that","Fragments":["sequence"]},{"Key":"that sequence","Fragments":["in"]},{"Key":"sequence in","Fragments":["one"]},{"Key":"Thanks to","Fragments":["@mohammad"]},{"Key":"to @mohammad","Fragments":["for"]},{"Key":"@mohammad for","Fragments":["giving"]},{"Key":"for giving","Fragments":["me"]},{"Key":"giving me","Fragments":["the"]},{"Key":"Linq .Any","Fragments":["idea."]},{"Key":".Any idea.","Fragments":["I"]},{"Key":"idea. I","Fragments":["think","had"]},{"Key":"readable than","Fragments":["using","using","```x","\"if","just","==","a","\u003ccode\u003eMath.Pow(10,9)\u003c/code\u003e."]},{"Key":" @lauryn:","Fragments":["Many"]},{"Key":"@lauryn: Many","Fragments":["returns"]},{"Key":"Many returns","Fragments":["is"]},{"Key":"returns is","Fragments":["an"]},{"Key":"code starts","Fragments":["to"]},{"Key":"starts to","Fragments":["do"]},{"Key":"do more","Fragments":["then","of"]},{"Key":"more then","Fragments":["just","2"]},{"Key":"one thing.","Fragments":["ref","I"]},{"Key":"thing. ref","Fragments":["Clean"]},{"Key":"ref Clean","Fragments":["code."]},{"Key":"Clean code.","Fragments":["It"]},{"Key":"code. It","Fragments":["dont"]},{"Key":"It dont","Fragments":["need"]},{"Key":"dont need","Fragments":["to","the","to","a","a","the","the"]},{"Key":"be bad","Fragments":["but"]},{"Key":"bad but","Fragments":["you","you"]},{"Key":"where its","Fragments":["leading."]},{"Key":" Requirement","Fragments":["says"]},{"Key":"Requirement says","Fragments":["that"]},{"Key":"that strands","Fragments":["must"]},{"Key":"strands must","Fragments":["be"]},{"Key":"of equal","Fragments":["length","length.\"","trimmed","length.","length,","length.","length."]},{"Key":"equal length","Fragments":["to"]},{"Key":"length to","Fragments":["compute","get","make"]},{"Key":"to compute","Fragments":["hamming","this","primes","the","the"]},{"Key":"compute hamming","Fragments":["distance."]},{"Key":"hamming distance.","Fragments":["Yours"]},{"Key":"distance. Yours","Fragments":["compute"]},{"Key":"Yours compute","Fragments":["distance"]},{"Key":"compute distance","Fragments":["up"]},{"Key":"distance up","Fragments":["to"]},{"Key":"the smaller","Fragments":["length.","sequences"]},{"Key":" Always","Fragments":["do"]},{"Key":"Always do","Fragments":["input"]},{"Key":"do input","Fragments":["parameters"]},{"Key":"input parameters","Fragments":["validation."]},{"Key":"parameters validation.","Fragments":["What"]},{"Key":"validation. What","Fragments":["happens"]},{"Key":"when any","Fragments":["of"]},{"Key":"are null?","Fragments":["You","should"]},{"Key":"null? You","Fragments":["will"]},{"Key":"get NullPointReference","Fragments":["exception"]},{"Key":"NullPointReference exception","Fragments":["which"]},{"Key":"exception which","Fragments":["is"]},{"Key":"not descriptive","Fragments":["at"]},{"Key":"descriptive at","Fragments":["all."]},{"Key":" During","Fragments":["the","each"]},{"Key":"During the","Fragments":["check"]},{"Key":"for t1.Equals(t2)","Fragments":["you"]},{"Key":"t1.Equals(t2) you","Fragments":["are"]},{"Key":"looping the","Fragments":["whole","extra"]},{"Key":"string, the","Fragments":["looping"]},{"Key":"the looping","Fragments":["it"]},{"Key":"looping it","Fragments":["another"]},{"Key":"it another","Fragments":["time"]},{"Key":"another time","Fragments":["for"]},{"Key":"time for","Fragments":["checking","good"]},{"Key":"the distance.","Fragments":["I"]},{"Key":"distance. I","Fragments":["think"]},{"Key":"as zero","Fragments":["will"]},{"Key":"zero will","Fragments":["be"]},{"Key":"be returned","Fragments":["if","in"]},{"Key":"returned if","Fragments":["they"]},{"Key":"equal by","Fragments":["the"]},{"Key":"namespace otherwise","Fragments":["you"]},{"Key":"the sievetest.cs","Fragments":["file"]},{"Key":"sievetest.cs file","Fragments":["which,"]},{"Key":"file which,","Fragments":["normally,"]},{"Key":"which, normally,","Fragments":["you"]},{"Key":"normally, you","Fragments":["should"]},{"Key":" 2.This","Fragments":["does"]},{"Key":"2.This does","Fragments":["not"]},{"Key":"not implement","Fragments":["the"]},{"Key":"algorithm -","Fragments":["Eratosthenes"]},{"Key":"- Eratosthenes","Fragments":["sieve!"]},{"Key":" Given","Fragments":["me","that","the","the"]},{"Key":"Given me","Fragments":["being"]},{"Key":"me being","Fragments":["a"]},{"Key":"noob and","Fragments":["my"]},{"Key":"my experience","Fragments":["is"]},{"Key":"experience is","Fragments":["close","from"]},{"Key":"is close","Fragments":["to","enough"]},{"Key":"to nill.","Fragments":["I"]},{"Key":"nill. I","Fragments":["was"]},{"Key":"for least","Fragments":["amount"]},{"Key":"least amount","Fragments":["of","of"]},{"Key":"with readability.","Fragments":["I"]},{"Key":"how or","Fragments":["what"]},{"Key":"or what","Fragments":["I"]},{"Key":"do better","Fragments":["but","than"]},{"Key":"better but","Fragments":["I","why","with"]},{"Key":"of do","Fragments":["like"]},{"Key":" Whoops","Fragments":["-"]},{"Key":"Whoops -","Fragments":["I"]},{"Key":"I deleted","Fragments":["my"]},{"Key":"deleted my","Fragments":["response"]},{"Key":"my response","Fragments":["before","as"]},{"Key":"response before","Fragments":["I"]},{"Key":"realised @zachary","Fragments":["had"]},{"Key":"@zachary had","Fragments":["seen"]},{"Key":"had seen","Fragments":["it."]},{"Key":"seen it.","Fragments":["For","I've"]},{"Key":"it. For","Fragments":["completeness"]},{"Key":"For completeness","Fragments":["here","even"]},{"Key":"completeness here","Fragments":["it"]},{"Key":"alpha chars","Fragments":["because"]},{"Key":"chars because","Fragments":["just"]},{"Key":"because just","Fragments":["testing"]},{"Key":"just testing","Fragments":["if"]},{"Key":"testing if","Fragments":["statement.ToUpper()"]},{"Key":"if statement.ToUpper()","Fragments":["=="]},{"Key":"statement.ToUpper() ==","Fragments":["statement","statement;"]},{"Key":"== statement","Fragments":["will"]},{"Key":"Only_numbers test","Fragments":["(i.e."]},{"Key":"test (i.e.","Fragments":["\"1,"]},{"Key":"(i.e. \"1,","Fragments":["2,"]},{"Key":"3\" converted","Fragments":["to"]},{"Key":"converted to","Fragments":["upper","a","lowercase"]},{"Key":"to upper","Fragments":["case"]},{"Key":"still \"1,","Fragments":["2,"]},{"Key":"2, 3\").","Fragments":["Less"]},{"Key":"3\"). Less","Fragments":["than"]},{"Key":"Less than","Fragments":["half"]},{"Key":"characters would","Fragments":["have","be"]},{"Key":"have failed","Fragments":["the"]},{"Key":"the Using_acronyms_in_regular_search","Fragments":["test"]},{"Key":"Using_acronyms_in_regular_search test","Fragments":["(though"]},{"Key":"test (though","Fragments":["this"]},{"Key":"(though this","Fragments":["name"]},{"Key":"this name","Fragments":["suggests"]},{"Key":"name suggests","Fragments":["the"]},{"Key":"suggests the","Fragments":["answer(s)","other"]},{"Key":"the answer(s)","Fragments":["should"]},{"Key":"answer(s) should","Fragments":["make"]},{"Key":"make use","Fragments":["of","of"]},{"Key":"Regex but","Fragments":["I"]},{"Key":"a pattern","Fragments":["that","of"]},{"Key":"pattern that","Fragments":["worked)."]},{"Key":"rest -","Fragments":["this"]},{"Key":"- this","Fragments":["is"]},{"Key":"of thing","Fragments":["I'm","but","interests","over","is"]},{"Key":"I'm here","Fragments":["for!"]},{"Key":"was already","Fragments":["thinking","in","doing"]},{"Key":"already thinking","Fragments":["about"]},{"Key":"about creating","Fragments":["a","an"]},{"Key":"the division","Fragments":["and"]},{"Key":"division and","Fragments":["what"]},{"Key":"you said","Fragments":["makes"]},{"Key":"said makes","Fragments":["good"]},{"Key":"good sense.","Fragments":["I"]},{"Key":"calculation to","Fragments":["see"]},{"Key":"4 if","Fragments":["it"]},{"Key":"100 for","Fragments":["instance."]},{"Key":"have another","Fragments":["look","go."]},{"Key":"another look","Fragments":["at","at"]},{"Key":"This exercis","Fragments":["seems"]},{"Key":"exercis seems","Fragments":["to"]},{"Key":"With Argument","Fragments":["exeption"]},{"Key":"Argument exeption","Fragments":["version:"]},{"Key":"exeption version:","Fragments":["```"]},{"Key":"Compute(string dnaone,","Fragments":["string"]},{"Key":"dnaone, string","Fragments":["dnatwo)"]},{"Key":"if (dnaone.Length","Fragments":["!="]},{"Key":"(dnaone.Length !=","Fragments":["dnatwo.Length)"]},{"Key":"new ArgumentException(\"Strands","Fragments":["must"]},{"Key":"ArgumentException(\"Strands must","Fragments":["be"]},{"Key":"same length","Fragments":["to","which","-","-","first."]},{"Key":" @della","Fragments":["I've"]},{"Key":"@della I've","Fragments":["given"]},{"Key":"I've given","Fragments":["your"]},{"Key":"given your","Fragments":["comment","approach"]},{"Key":"comment more","Fragments":["consideration,"]},{"Key":"more consideration,","Fragments":["and"]},{"Key":"consideration, and","Fragments":["decided"]},{"Key":"and decided","Fragments":["to"]},{"Key":"use variables,","Fragments":["rather"]},{"Key":"variables, rather","Fragments":["than"]},{"Key":"than methods","Fragments":["for"]},{"Key":"for 'isDivisibleBy...'.","Fragments":["This"]},{"Key":"'isDivisibleBy...'. This","Fragments":["has"]},{"Key":"This has","Fragments":["simplified","to"]},{"Key":"has simplified","Fragments":["the"]},{"Key":"simplified the","Fragments":["code","regex","taking","code","next","problem"]},{"Key":"code significantly.","Fragments":["Thanks"]},{"Key":"significantly. Thanks","Fragments":["for"]},{"Key":"improved greatly","Fragments":["in"]},{"Key":"greatly in","Fragments":["terms"]},{"Key":"readability as","Fragments":["it","well.","well."]},{"Key":"is extremely","Fragments":["verbose","simple"]},{"Key":"extremely verbose","Fragments":["which"]},{"Key":"verbose which","Fragments":["makes"]},{"Key":"follow. Your","Fragments":["function"]},{"Key":"Your function","Fragments":["whatIsIt()"]},{"Key":"function whatIsIt()","Fragments":["should,"]},{"Key":"whatIsIt() should,","Fragments":["I"]},{"Key":"should, I","Fragments":["believe,"]},{"Key":"I believe,","Fragments":["be"]},{"Key":"believe, be","Fragments":["renamed"]},{"Key":"be renamed","Fragments":["to"]},{"Key":"renamed to","Fragments":["something"]},{"Key":"more accurately","Fragments":["represents"]},{"Key":"accurately represents","Fragments":["what"]},{"Key":"represents what","Fragments":["it","you"]},{"Key":"are parsing","Fragments":["the"]},{"Key":"string by","Fragments":["breaking"]},{"Key":"by breaking","Fragments":["it","up"]},{"Key":"array is","Fragments":["only","unnecessary","guaranteed","interesting"]},{"Key":"only complicating","Fragments":["the"]},{"Key":"complicating the","Fragments":["matters"]},{"Key":"the matters","Fragments":["significantly"]},{"Key":"matters significantly","Fragments":["more."]},{"Key":"significantly more.","Fragments":["I"]},{"Key":"more. I","Fragments":["do","have"]},{"Key":"do admire","Fragments":["your"]},{"Key":"admire your","Fragments":["tenacity"]},{"Key":"your tenacity","Fragments":["though"]},{"Key":"tenacity though","Fragments":["as"]},{"Key":"though as","Fragments":["I'm"]},{"Key":"this took","Fragments":["quite"]},{"Key":"took quite","Fragments":["some"]},{"Key":"quite some","Fragments":["time"]},{"Key":"and debug,","Fragments":["significantly"]},{"Key":"debug, significantly","Fragments":["more"]},{"Key":"significantly more","Fragments":["so"]},{"Key":"more so","Fragments":["than"]},{"Key":"so than","Fragments":["probably"]},{"Key":"than probably","Fragments":["necessary."]},{"Key":"the .Any","Fragments":["method"]},{"Key":".Any method","Fragments":["available!"]},{"Key":"method available!","Fragments":["This"]},{"Key":"available! This","Fragments":["is"]},{"Key":"Any advice/input","Fragments":["is"]},{"Key":"advice/input is","Fragments":["welcomed!"]},{"Key":"is welcomed!","Fragments":["Always"]},{"Key":"welcomed! Always","Fragments":["looking"]},{"Key":"Always looking","Fragments":["for"]},{"Key":"Changes in","Fragments":["Iteration"]},{"Key":"in Iteration","Fragments":["3:"]},{"Key":"1) Replaced","Fragments":["Dictionary\u003c\u003e"]},{"Key":"Replaced Dictionary\u003c\u003e","Fragments":["with"]},{"Key":"Dictionary\u003c\u003e with","Fragments":["IDictionary\u003c\u003e,"]},{"Key":"with IDictionary\u003c\u003e,","Fragments":["definitely"]},{"Key":"IDictionary\u003c\u003e, definitely","Fragments":["a"]},{"Key":"style I","Fragments":["need","would"]},{"Key":"to pick","Fragments":["up","up","up"]},{"Key":"pick up","Fragments":["on.","the","the"]},{"Key":"believe this","Fragments":["takes","submission"]},{"Key":"this takes","Fragments":["the","the"]},{"Key":"takes the","Fragments":["possible","char"]},{"Key":"possible nullrefs","Fragments":["into"]},{"Key":"nullrefs into","Fragments":["account."]},{"Key":"actually like","Fragments":["the"]},{"Key":"the try/catch","Fragments":["and","in"]},{"Key":"try/catch and","Fragments":["Debug"]},{"Key":"and Debug","Fragments":["logging"]},{"Key":"Debug logging","Fragments":["as"]},{"Key":"logging as","Fragments":["it"]},{"Key":"it provides","Fragments":["an","a"]},{"Key":"provides an","Fragments":["audit"]},{"Key":"an audit","Fragments":["trail."]},{"Key":"audit trail.","Fragments":["Silently"]},{"Key":"trail. Silently","Fragments":["updating"]},{"Key":"Silently updating","Fragments":["the"]},{"Key":"updating the","Fragments":["score"]},{"Key":"the score","Fragments":["for","instead","multiple","in","once.","and","is","of","is","on","up"]},{"Key":"score for","Fragments":["a"]},{"Key":"a given","Fragments":["letter","day","strand","year","input"]},{"Key":"given letter","Fragments":["would"]},{"Key":"letter would","Fragments":["be"]},{"Key":"be faster,","Fragments":["but"]},{"Key":"faster, but","Fragments":["might","not","it's"]},{"Key":"might leave","Fragments":["the"]},{"Key":"user scratching","Fragments":["their"]},{"Key":"scratching their","Fragments":["head"]},{"Key":"their head","Fragments":["as"]},{"Key":"head as","Fragments":["to"]},{"Key":"why \"a\"","Fragments":["is"]},{"Key":"\"a\" is","Fragments":["worth"]},{"Key":"worth 5","Fragments":["points"]},{"Key":"5 points","Fragments":["instead"]},{"Key":"of 1,","Fragments":["and"]},{"Key":"1, and","Fragments":["combing"]},{"Key":"and combing","Fragments":["the"]},{"Key":"combing the","Fragments":["data"]},{"Key":"data to","Fragments":["verify","get"]},{"Key":"verify all","Fragments":["the"]},{"Key":"other letters","Fragments":["-"]},{"Key":"letters -","Fragments":["which","Any()"]},{"Key":"- which","Fragments":["would","reduces"]},{"Key":"would defeat","Fragments":["the"]},{"Key":"defeat the","Fragments":["purpose!"]},{"Key":"OK, so","Fragments":["all","```\u003e=```,"]},{"Key":"will stay","Fragments":["with"]},{"Key":"stay with","Fragments":["what"]},{"Key":"have unless","Fragments":["I"]},{"Key":"unless I","Fragments":["get","need"]},{"Key":"some input","Fragments":["as"]},{"Key":"input as","Fragments":["to","well.","clean"]},{"Key":"to things","Fragments":["I"]},{"Key":"might change.","Fragments":["I"]},{"Key":"change. I","Fragments":["believe","would"]},{"Key":"readable, aside","Fragments":["from"]},{"Key":"aside from","Fragments":["the"]},{"Key":"the Regexp","Fragments":["which"]},{"Key":"Regexp which","Fragments":["I"]},{"Key":"think will","Fragments":["ever"]},{"Key":"will ever","Fragments":["be"]},{"Key":"ever be","Fragments":["\"very","true","true."]},{"Key":"be \"very","Fragments":["readable\","]},{"Key":"\"very readable\",","Fragments":["to"]},{"Key":"readable\", to","Fragments":["me"]},{"Key":"at least.","Fragments":["In","a"]},{"Key":"least. In","Fragments":["this"]},{"Key":"got rid","Fragments":["of","of","of","of"]},{"Key":"the abundance","Fragments":["of"]},{"Key":"abundance of","Fragments":["returns"]},{"Key":"of returns","Fragments":["to"]},{"Key":"returns to","Fragments":["try"]},{"Key":"one per","Fragments":["method,"]},{"Key":"per method,","Fragments":["as"]},{"Key":"method, as","Fragments":["I","the"]},{"Key":"was told","Fragments":["this"]},{"Key":"told this","Fragments":["is"]},{"Key":"is common","Fragments":["practice.","and"]},{"Key":"only portion","Fragments":["which"]},{"Key":"portion which","Fragments":["I"]},{"Key":"completely happy","Fragments":["with"]},{"Key":"corner case","Fragments":["for"]},{"Key":"for \"4?\"","Fragments":["which"]},{"Key":"\"4?\" which","Fragments":["I"]},{"Key":"add in","Fragments":["to","an","the"]},{"Key":"pass my","Fragments":["tests.","code"]},{"Key":"my tests.","Fragments":["Any"]},{"Key":"tests. Any","Fragments":["suggestions"]},{"Key":"suggestions on","Fragments":["how","how"]},{"Key":"match there","Fragments":["would"]},{"Key":"be greatly","Fragments":["appreciated.","appreciated!"]},{"Key":"if strand1","Fragments":["or"]},{"Key":"strand1 or","Fragments":["strand2"]},{"Key":"or strand2","Fragments":["paramethers"]},{"Key":"strand2 paramethers","Fragments":["are"]},{"Key":"paramethers are","Fragments":["null?"]},{"Key":"null? should","Fragments":["add"]},{"Key":"add guard","Fragments":["clase"]},{"Key":"guard clase","Fragments":["for"]},{"Key":"clase for","Fragments":["that"]},{"Key":"When throwing","Fragments":["exception,"]},{"Key":"throwing exception,","Fragments":["make"]},{"Key":"exception, make","Fragments":["sure"]},{"Key":"a descriptive","Fragments":["message,","exception"]},{"Key":"descriptive message,","Fragments":["it"]},{"Key":"message, it","Fragments":["can"]},{"Key":"help during","Fragments":["debugging."]},{"Key":" 'hammingArray'","Fragments":["variable"]},{"Key":"'hammingArray' variable","Fragments":["is"]},{"Key":"used at","Fragments":["all?","every"]},{"Key":"the feedback,","Fragments":["I"]},{"Key":"really appreciate","Fragments":["it.","the","your"]},{"Key":"appreciate it.","Fragments":["I've"]},{"Key":"I've made","Fragments":["the","a"]},{"Key":"static, as","Fragments":["you"]},{"Key":"you suggested","Fragments":["and","(changed","because"]},{"Key":"have also","Fragments":["worked","done"]},{"Key":"also worked","Fragments":["up"]},{"Key":"worked up","Fragments":["the"]},{"Key":"the answer","Fragments":["into","is","to"]},{"Key":"answer into","Fragments":["a"]},{"Key":"single boolean","Fragments":["statement.","statement?","statement","statement.","statement?","statement?"]},{"Key":"boolean statement.","Fragments":["I","Thanks","But"]},{"Key":"I seem","Fragments":["to","to","to","to","to"]},{"Key":"really bad","Fragments":["habit"]},{"Key":"bad habit","Fragments":["of","of","I"]},{"Key":"of pulling","Fragments":["out"]},{"Key":"pulling out","Fragments":["the"]},{"Key":"operator even","Fragments":["when"]},{"Key":"just working","Fragments":["with"]},{"Key":"with boolean","Fragments":["values:"]},{"Key":"boolean values:","Fragments":["it's"]},{"Key":"values: it's","Fragments":["completely"]},{"Key":"it's completely","Fragments":["unnecessary"]},{"Key":"completely unnecessary","Fragments":["and"]},{"Key":"and makes","Fragments":["everything","this","the","multiple"]},{"Key":"everything overly","Fragments":["complex,"]},{"Key":"overly complex,","Fragments":["as"]},{"Key":"complex, as","Fragments":["you"]},{"Key":"you pointed","Fragments":["out.","out","out","out.","out,"]},{"Key":"pointed out.","Fragments":["I'm","Thanks"]},{"Key":"sure which","Fragments":["is","is","is","is","is"]},{"Key":"is \"better\"","Fragments":["though,"]},{"Key":"\"better\" though,","Fragments":["from"]},{"Key":"though, from","Fragments":["the"]},{"Key":"of view","Fragments":["of"]},{"Key":"view of","Fragments":["readability."]},{"Key":"of readability.","Fragments":["I"]},{"Key":"a compact","Fragments":["version"]},{"Key":"compact version","Fragments":["for","is","is","as","of","of"]},{"Key":"version for","Fragments":["what"]},{"Key":"fairly simple","Fragments":["operation."]},{"Key":"simple operation.","Fragments":["What"]},{"Key":"operation. What","Fragments":["would"]},{"Key":"you @robert","Fragments":["!"]},{"Key":"@robert !","Fragments":["I"]},{"Key":"! I","Fragments":["know"]},{"Key":"the operators,","Fragments":["but"]},{"Key":"operators, but","Fragments":["I"]},{"Key":"to work,","Fragments":["so","it"]},{"Key":"work, so","Fragments":["I","if"]},{"Key":"about them.","Fragments":["Thanks!"]},{"Key":"believe the","Fragments":["compact","idea"]},{"Key":"the compact","Fragments":["version","version","version"]},{"Key":"version is","Fragments":["better","more","much","that","the","indeed","better.","that"]},{"Key":"better readable.","Fragments":["Assuming"]},{"Key":"readable. Assuming","Fragments":["you"]},{"Key":"Assuming you","Fragments":["document","change"]},{"Key":"you document","Fragments":["your"]},{"Key":"document your","Fragments":["method,"]},{"Key":"your method,","Fragments":["that"]},{"Key":"Also, it's","Fragments":["not"]},{"Key":"not part","Fragments":["of"]},{"Key":"but consider","Fragments":["what"]},{"Key":"consider what","Fragments":["happens"]},{"Key":"year parameter","Fragments":["is"]},{"Key":"or negative.","Fragments":["Technically,"]},{"Key":"negative. Technically,","Fragments":["it's"]},{"Key":"Technically, it's","Fragments":["no"]},{"Key":"it's no","Fragments":["problem,"]},{"Key":"no problem,","Fragments":["but"]},{"Key":"but year","Fragments":["0"]},{"Key":"0 never","Fragments":["existed."]},{"Key":"never existed.","Fragments":["And"]},{"Key":"existed. And","Fragments":["BC"]},{"Key":"And BC","Fragments":["years"]},{"Key":"no concept","Fragments":["of"]},{"Key":"concept of","Fragments":["leap","the","converting"]},{"Key":"of leap","Fragments":["years.","year"]},{"Key":"leap years.","Fragments":["(Actually,","What"]},{"Key":"years. (Actually,","Fragments":["this"]},{"Key":"(Actually, this","Fragments":["way"]},{"Key":"of calculating","Fragments":["leap","prime"]},{"Key":"calculating leap","Fragments":["years"]},{"Key":"years is","Fragments":["only"]},{"Key":"only valid","Fragments":["for","for"]},{"Key":"valid for","Fragments":["Gregorian","strands"]},{"Key":"for Gregorian","Fragments":["calendar"]},{"Key":"Gregorian calendar","Fragments":["years,","begins","that","starts,","when"]},{"Key":"calendar years,","Fragments":["but"]},{"Key":"years, but","Fragments":["that's","does","not"]},{"Key":"that's difficult","Fragments":["to"]},{"Key":"to check,","Fragments":["since"]},{"Key":"check, since","Fragments":["the"]},{"Key":"the introduction","Fragments":["of","of"]},{"Key":"introduction of","Fragments":["those","the"]},{"Key":"those is","Fragments":["location"]},{"Key":"is location","Fragments":["specific.)"]},{"Key":"this. My","Fragments":["way"]},{"Key":"My way","Fragments":["of"]},{"Key":"probably has","Fragments":["a"]},{"Key":"a flaw","Fragments":["somewhere..."]},{"Key":"Well done.","Fragments":["I"]},{"Key":"done. I","Fragments":["have","like","matched","see"]},{"Key":"few suggestions.","Fragments":["You"]},{"Key":"suggestions. You","Fragments":["are"]},{"Key":"are converting","Fragments":["a","it"]},{"Key":"converting a","Fragments":["string"]},{"Key":"array, passing","Fragments":["that"]},{"Key":"passing that","Fragments":["array"]},{"Key":"that array","Fragments":["to"]},{"Key":"array to","Fragments":["isSilence()","a","create","keep"]},{"Key":"to isSilence()","Fragments":["and"]},{"Key":"isSilence() and","Fragments":["then"]},{"Key":"then converting","Fragments":["the","it"]},{"Key":"a string.","Fragments":["Instead,","Removing","If"]},{"Key":"string. Instead,","Fragments":["you"]},{"Key":"string.IsNullOrWhiteSpace method.","Fragments":["You"]},{"Key":"use input.EndsWith(\"?\")","Fragments":["in"]},{"Key":"input.EndsWith(\"?\") in","Fragments":["lieu"]},{"Key":"in lieu","Fragments":["on"]},{"Key":"lieu on","Fragments":["your"]},{"Key":"your isQuestion","Fragments":["method."]},{"Key":"isQuestion method.","Fragments":["Although"]},{"Key":"method. Although","Fragments":["not"]},{"Key":"Although not","Fragments":["necessary,"]},{"Key":"necessary, I","Fragments":["think"]},{"Key":"string responses","Fragments":["should"]},{"Key":"responses should","Fragments":["be"]},{"Key":"be constants","Fragments":["because"]},{"Key":"don't expect","Fragments":["the","to"]},{"Key":"like just","Fragments":["an"]},{"Key":"just an","Fragments":["oversight","instance","int.","exercise"]},{"Key":"an oversight","Fragments":["but:"]},{"Key":"condition after","Fragments":["the"]},{"Key":"the ||","Fragments":["operator"]},{"Key":"|| operator","Fragments":["(year"]},{"Key":"operator (year","Fragments":["%100"]},{"Key":"(year %100","Fragments":["=="]},{"Key":"%100 ==","Fragments":["0)"]},{"Key":"0) is","Fragments":["unnecessary:"]},{"Key":"is unnecessary:","Fragments":["any"]},{"Key":"unnecessary: any","Fragments":["year"]},{"Key":"passes year","Fragments":["%"]},{"Key":"0 will","Fragments":["also","already"]},{"Key":"also pass","Fragments":["this.","the"]},{"Key":"pass this.","Fragments":["So"]},{"Key":"this. So","Fragments":["it"]},{"Key":"see you","Fragments":["were","have","have"]},{"Key":"were really","Fragments":["trying"]},{"Key":"really trying","Fragments":["to"]},{"Key":"that 2nd","Fragments":["inner"]},{"Key":"2nd inner","Fragments":["for"]},{"Key":"inner for","Fragments":["each"]},{"Key":"each loop","Fragments":["with"]},{"Key":"this made","Fragments":["it","them","the"]},{"Key":"null, oldData.ElementAt(z).Value","Fragments":["is"]},{"Key":"oldData.ElementAt(z).Value is","Fragments":["null,"]},{"Key":"or x","Fragments":["is"]},{"Key":"do \u003ccode\u003enewData[letter.ToLower()]","Fragments":["=","="]},{"Key":"\u003ccode\u003enewData[letter.ToLower()] =","Fragments":["letterScore(x.ToLower();\u003c/code\u003e,","entry.Key;\u003c/code\u003e,"]},{"Key":"= letterScore(x.ToLower();\u003c/code\u003e,","Fragments":["you"]},{"Key":"letterScore(x.ToLower();\u003c/code\u003e, you","Fragments":["can"]},{"Key":"4. \"x\"","Fragments":["as"]},{"Key":"\"x\" as","Fragments":["a"]},{"Key":"name isn't","Fragments":["very","very"]},{"Key":"isn't very","Fragments":["good.","good.","extendable."]},{"Key":"good. You","Fragments":["should","should","are","could"]},{"Key":"probably use","Fragments":["letter","letter","\u003cem\u003eString.IsNullOrWhitespace()\u003c/em\u003e","\u003ccode\u003eif","curly","a"]},{"Key":"use letter","Fragments":["or","or"]},{"Key":"letter or","Fragments":["character","character"]},{"Key":"5. I","Fragments":["don't"]},{"Key":"that static","Fragments":["Dictionary"]},{"Key":"static Dictionary","Fragments":["\"score\""]},{"Key":"Dictionary \"score\"","Fragments":["at"]},{"Key":"\"score\" at","Fragments":["the"]},{"Key":"the bottom,","Fragments":["so"]},{"Key":"bottom, so","Fragments":["you"]},{"Key":"can delete","Fragments":["it."]},{"Key":"6. the","Fragments":["letterScore"]},{"Key":"the letterScore","Fragments":["method"]},{"Key":"letterScore method","Fragments":["seems"]},{"Key":"method seems","Fragments":["unnecessary","strange","like","like"]},{"Key":"seems unnecessary","Fragments":["as"]},{"Key":"unnecessary as","Fragments":["you"]},{"Key":"line up","Fragments":["in"]},{"Key":"line 18","Fragments":["directly.","so","say","in"]},{"Key":"7. I","Fragments":["see"]},{"Key":"the .ToList\u003c\u003e()","Fragments":["call"]},{"Key":".ToList\u003c\u003e() call","Fragments":["there"]},{"Key":"call there","Fragments":["so"]},{"Key":"use ForEach,","Fragments":["but"]},{"Key":"ForEach, but","Fragments":["now"]},{"Key":"are making","Fragments":["a","this","lots"]},{"Key":"a duplicate","Fragments":["copy","key","key."]},{"Key":"duplicate copy","Fragments":["of"]},{"Key":"single array,","Fragments":["wasting"]},{"Key":"array, wasting","Fragments":["memory."]},{"Key":"8. In","Fragments":["your"]},{"Key":"your (x)","Fragments":["=\u003e"]},{"Key":"(x) =\u003e","Fragments":["statement,"]},{"Key":"=\u003e statement,","Fragments":["you"]},{"Key":" (Note:","Fragments":["silly","This"]},{"Key":"(Note: silly","Fragments":["\u003c\u003e"]},{"Key":"silly \u003c\u003e","Fragments":["bracket"]},{"Key":"\u003c\u003e bracket","Fragments":["html"]},{"Key":"bracket html","Fragments":["thingy...)"]},{"Key":" Action(string)","Fragments":["convert"]},{"Key":"Action(string) convert","Fragments":["="]},{"Key":"convert =","Fragments":["(x)"]},{"Key":"= (x)","Fragments":["=\u003e"]},{"Key":"string letterLower","Fragments":["="]},{"Key":"letterLower =","Fragments":["x.ToLower();"]},{"Key":" newData.Add(letterLower,","Fragments":["letterScore(letterLower));"]},{"Key":"the silliest","Fragments":["exercises"]},{"Key":"silliest exercises","Fragments":["I"]},{"Key":"exercises I","Fragments":["have"]},{"Key":"seen thus","Fragments":["far..."]},{"Key":"is fine,","Fragments":["but","but"]},{"Key":"my point","Fragments":["would"]},{"Key":"point would","Fragments":["be","be"]},{"Key":"this instead","Fragments":["then:"]},{"Key":"string lowerLetter","Fragments":["="]},{"Key":"lowerLetter =","Fragments":["letter.ToLower();"]},{"Key":"if (expected.ContainsKey(lowerLetter))","Fragments":["throw"]},{"Key":"(expected.ContainsKey(lowerLetter)) throw","Fragments":["new"]},{"Key":"new ArgumentException(string.Format(\"Letter","Fragments":["'{0}'"]},{"Key":"ArgumentException(string.Format(\"Letter '{0}'","Fragments":["has"]},{"Key":"'{0}' has","Fragments":["been"]},{"Key":"been duplicated","Fragments":["in"]},{"Key":"duplicated in","Fragments":["the"]},{"Key":"the data.\",","Fragments":["letter);"]},{"Key":" expected.Add(lowerLetter,","Fragments":["oldPointValues.Key);"]},{"Key":"a debug","Fragments":["line"]},{"Key":"debug line","Fragments":["right"]},{"Key":"line right","Fragments":["there,"]},{"Key":"right there,","Fragments":["you"]},{"Key":"there, you","Fragments":["didn't","could"]},{"Key":"didn't rethrow","Fragments":["the"]},{"Key":"rethrow the","Fragments":["exception."]},{"Key":"the exception.","Fragments":["Thus,"]},{"Key":"exception. Thus,","Fragments":["the"]},{"Key":"Thus, the","Fragments":["caller"]},{"Key":"the caller","Fragments":["is","requests","actually","methods","calls","calls","whereas","is"]},{"Key":"caller is","Fragments":["going","controlled"]},{"Key":"think everything","Fragments":["went"]},{"Key":"everything went","Fragments":["fine"]},{"Key":"went fine","Fragments":["and"]},{"Key":"not fix","Fragments":["their"]},{"Key":"fix their","Fragments":["data"]},{"Key":"their data","Fragments":["in"]},{"Key":" @daniela","Fragments":["I"]},{"Key":"@daniela I","Fragments":["don't"]},{"Key":"remember why","Fragments":["I"]},{"Key":"only checked","Fragments":["for"]},{"Key":"for X,","Fragments":["but"]},{"Key":"X, but","Fragments":["I"]},{"Key":"I remember","Fragments":["clearly","reading"]},{"Key":"remember clearly","Fragments":["that"]},{"Key":"somehow thought","Fragments":["this"]},{"Key":"right thing","Fragments":["to","to"]},{"Key":"do and","Fragments":["no","there"]},{"Key":"no check","Fragments":["for"]},{"Key":"for ones","Fragments":["that"]},{"Key":"ones that","Fragments":["aren't","you"]},{"Key":"that aren't","Fragments":["in","used,","required"]},{"Key":"aren't in","Fragments":["the","the"]},{"Key":"the allowed","Fragments":["range."]},{"Key":"allowed range.","Fragments":["I'll"]},{"Key":"range. I'll","Fragments":["try"]},{"Key":"to re-open","Fragments":["the"]},{"Key":"re-open the","Fragments":["code"]},{"Key":"code later,","Fragments":["maybe"]},{"Key":"later, maybe","Fragments":["it'll"]},{"Key":"maybe it'll","Fragments":["jog"]},{"Key":"it'll jog","Fragments":["my"]},{"Key":"jog my","Fragments":["memory."]},{"Key":"Of all","Fragments":["the"]},{"Key":"I've ever","Fragments":["seen"]},{"Key":"ever seen","Fragments":["or","`Array.FindAll`;"]},{"Key":"seen or","Fragments":["wrote,"]},{"Key":"or wrote,","Fragments":["I"]},{"Key":"wrote, I","Fragments":["have"]},{"Key":"seen \"p_\".","Fragments":["I've"]},{"Key":"\"p_\". I've","Fragments":["been"]},{"Key":"been coding","Fragments":["12"]},{"Key":"coding 12","Fragments":["years"]},{"Key":"12 years","Fragments":["and"]},{"Key":"seen \"m_\",","Fragments":["but"]},{"Key":"\"m_\", but","Fragments":["those"]},{"Key":"but those","Fragments":["were"]},{"Key":"those were","Fragments":["for"]},{"Key":"were for","Fragments":["\"module\""]},{"Key":"for \"module\"","Fragments":["or"]},{"Key":"\"module\" or","Fragments":["class"]},{"Key":"level variables.","Fragments":["However,"]},{"Key":"variables. However,","Fragments":["this"]},{"Key":"However, this","Fragments":["is"]},{"Key":"very old","Fragments":["style"]},{"Key":"old style","Fragments":["and"]},{"Key":"really shouldn't","Fragments":["be","need","depend"]},{"Key":"used anymore.","Fragments":["For"]},{"Key":"anymore. For","Fragments":["me,"]},{"Key":"me, seeing","Fragments":["an"]},{"Key":"an \"_\"","Fragments":["after"]},{"Key":"\"_\" after","Fragments":["a"]},{"Key":"single letter","Fragments":["in"]},{"Key":"variable like","Fragments":["that"]},{"Key":"much harder","Fragments":["to","to"]},{"Key":".ToLower() when","Fragments":["adding"]},{"Key":"when adding","Fragments":["a"]},{"Key":"new key","Fragments":["to","value)?"]},{"Key":"key to","Fragments":["the","a","just","condensing"]},{"Key":"dictionary. \"A\"","Fragments":["and"]},{"Key":"\"A\" and","Fragments":["\"a\""]},{"Key":"and \"a\"","Fragments":["will","when"]},{"Key":"\"a\" will","Fragments":["become"]},{"Key":"will become","Fragments":["\"a\""]},{"Key":"become \"a\"","Fragments":["and"]},{"Key":"\"a\" and","Fragments":["\"a\""]},{"Key":"\"a\" when","Fragments":["you"]},{"Key":"do ToLower().","Fragments":["Thus,"]},{"Key":"ToLower(). Thus,","Fragments":["you"]},{"Key":"Thus, you","Fragments":["will"]},{"Key":"key twice","Fragments":["to"]},{"Key":"twice to","Fragments":["the"]},{"Key":"dictionary, causing","Fragments":["it"]},{"Key":"causing it","Fragments":["to"]},{"Key":"blame you","Fragments":["about"]},{"Key":"you about","Fragments":["understanding","the"]},{"Key":"about understanding","Fragments":["this"]},{"Key":"understanding this","Fragments":["style."]},{"Key":"this style.","Fragments":["I"]},{"Key":"didn't understand","Fragments":["it"]},{"Key":"first, either.","Fragments":["I"]},{"Key":"people use","Fragments":["that","Linq","custom"]},{"Key":"crash (so","Fragments":["I"]},{"Key":"(so I","Fragments":["learned"]},{"Key":"learned something!).","Fragments":[":)"]},{"Key":"something!). :)","Fragments":["Essentially,"]},{"Key":":) Essentially,","Fragments":["by","you"]},{"Key":"Essentially, by","Fragments":["using"]},{"Key":"this syntax,","Fragments":["it"]},{"Key":"syntax, it","Fragments":["will"]},{"Key":"automatically add","Fragments":["a"]},{"Key":"a key","Fragments":["if","issue","without"]},{"Key":"key if","Fragments":["it"]},{"Key":"exist for","Fragments":["you.","the"]},{"Key":"for you.","Fragments":["Then"]},{"Key":"you. Then","Fragments":["if"]},{"Key":"Then if","Fragments":["it","dna","you"]},{"Key":"does exist,","Fragments":["it"]},{"Key":"exist, it","Fragments":["will","reduces"]},{"Key":"will simply","Fragments":["overwrite","return"]},{"Key":"simply overwrite","Fragments":["it"]},{"Key":"overwrite it","Fragments":["with"]},{"Key":"the Math","Fragments":["class"]},{"Key":"Math class","Fragments":["would"]},{"Key":"work it","Fragments":["adds"]},{"Key":"adds an","Fragments":["extra","extra"]},{"Key":"in turn","Fragments":["means"]},{"Key":"turn means","Fragments":["more"]},{"Key":"means more","Fragments":["memory."]},{"Key":"a note...","Fragments":["Blank"]},{"Key":"note... Blank","Fragments":["\""]},{"Key":"Blank \"","Fragments":["\""]},{"Key":"\" tile","Fragments":["is"]},{"Key":"tile is","Fragments":["worth"]},{"Key":"in scrabble,","Fragments":["if","only"]},{"Key":"scrabble, if","Fragments":["the"]},{"Key":"tests every","Fragments":["provide"]},{"Key":"every provide","Fragments":["for"]},{"Key":"provide for","Fragments":["it."]},{"Key":"Wow, you","Fragments":["are"]},{"Key":"first person","Fragments":["other","I've"]},{"Key":"person other","Fragments":["than"]},{"Key":"than myself","Fragments":["to"]},{"Key":"myself to","Fragments":["use","keep"]},{"Key":"use IDictionary\u003c\u003e","Fragments":["the"]},{"Key":"IDictionary\u003c\u003e the","Fragments":["first"]},{"Key":"first time!","Fragments":[":)"]},{"Key":"I'll see","Fragments":["if","if","about"]},{"Key":"can explain","Fragments":["it"]},{"Key":"explain it","Fragments":["quick."]},{"Key":"it quick.","Fragments":[":)"]},{"Key":"quick. :)","Fragments":["Essentially,"]},{"Key":"Essentially, you","Fragments":["are","change"]},{"Key":"old \u003cscore,","Fragments":["list"]},{"Key":"\u003cscore, list","Fragments":["of"]},{"Key":"of letters\u003e","Fragments":["data."]},{"Key":"letters\u003e data.","Fragments":["Then"]},{"Key":"data. Then","Fragments":["you"]},{"Key":"you loop","Fragments":["through"]},{"Key":"letter for","Fragments":["each"]},{"Key":"each score.","Fragments":["You"]},{"Key":"score. You","Fragments":["then"]},{"Key":"You then","Fragments":["add"]},{"Key":"then add","Fragments":["that","(or"]},{"Key":"add that","Fragments":["letter","this","much"]},{"Key":"that letter","Fragments":["as"]},{"Key":"letter as","Fragments":["the","its"]},{"Key":"new dictionary,","Fragments":["followed"]},{"Key":"dictionary, followed","Fragments":["by"]},{"Key":"old point","Fragments":["value"]},{"Key":"point value","Fragments":["key.","of"]},{"Key":" Essentially,","Fragments":["you"]},{"Key":"\"A\", \"B\",","Fragments":["\"C\""]},{"Key":"\"B\", \"C\"","Fragments":["}"]},{"Key":"\"C\" }","Fragments":["}"]},{"Key":"\"a\", 1},","Fragments":["{"]},{"Key":"1}, {","Fragments":["\"b\","]},{"Key":"{ \"b\",","Fragments":["1"]},{"Key":"\"b\", 1","Fragments":["},"]},{"Key":"{ \"c\",","Fragments":["1"]},{"Key":"\"c\", 1","Fragments":["}"]},{"Key":"good overall,","Fragments":["just"]},{"Key":"overall, just","Fragments":["a"]},{"Key":"or item","Fragments":["is"]},{"Key":"item is","Fragments":["null?","not"]},{"Key":":) [NullReferenceException","Fragments":["will"]},{"Key":"[NullReferenceException will","Fragments":["get"]},{"Key":"do \u003ccode\u003etransformed[letter.ToLower()]","Fragments":["="]},{"Key":"\u003ccode\u003etransformed[letter.ToLower()] =","Fragments":["pair.Key;\u003c/code\u003e,"]},{"Key":"= pair.Key;\u003c/code\u003e,","Fragments":["you"]},{"Key":"pair.Key;\u003c/code\u003e, you","Fragments":["can"]},{"Key":"style thing,","Fragments":["but"]},{"Key":"but most","Fragments":["people","important:"]},{"Key":"will put","Fragments":["{"]},{"Key":"} in","Fragments":["each","there."]},{"Key":"each for","Fragments":["loop"]},{"Key":"statement. However,","Fragments":["if"]},{"Key":"one nested","Fragments":["line"]},{"Key":"nested line","Fragments":["of"]},{"Key":"of code,","Fragments":["you","its","if","but","and","replacing"]},{"Key":"code, you","Fragments":["should","know","could"]},{"Key":"there. It","Fragments":["gets","does"]},{"Key":"gets too","Fragments":["difficult"]},{"Key":"too difficult","Fragments":["to"]},{"Key":"where things","Fragments":["start"]},{"Key":"things start","Fragments":["and"]},{"Key":"start and","Fragments":["end,","the"]},{"Key":"and end,","Fragments":["especially"]},{"Key":"end, especially","Fragments":["if"]},{"Key":"add another","Fragments":["line","line"]},{"Key":"another line","Fragments":["somewhere","to"]},{"Key":"line somewhere","Fragments":["later."]},{"Key":"= entry.Key;\u003c/code\u003e,","Fragments":["you"]},{"Key":"entry.Key;\u003c/code\u003e, you","Fragments":["can"]},{"Key":"\"s\" as","Fragments":["a"]},{"Key":" Iteration","Fragments":["2:"]},{"Key":"Iteration 2:","Fragments":["IDictionary"]},{"Key":"2: IDictionary","Fragments":["in/out"]},{"Key":"IDictionary in/out","Fragments":["type"]},{"Key":"for flexibility,","Fragments":["and"]},{"Key":"flexibility, and","Fragments":["throws"]},{"Key":"throws exceptions","Fragments":["for"]},{"Key":"for invalid","Fragments":["or","input?","characters.","digits","input","characters","characters."]},{"Key":"invalid or","Fragments":["duplicated"]},{"Key":"or duplicated","Fragments":["data"]},{"Key":"not understand","Fragments":["how"]},{"Key":"understand how","Fragments":["to"]},{"Key":"testing suite.","Fragments":["After"]},{"Key":"suite. After","Fragments":["some"]},{"Key":"some monkeying","Fragments":["around"]},{"Key":"monkeying around","Fragments":["with"]},{"Key":"around with","Fragments":["it,","that"]},{"Key":"found my","Fragments":["previous","self"]},{"Key":"previous iterations","Fragments":["failed","could","were"]},{"Key":"iterations failed","Fragments":["in"]},{"Key":"failed in","Fragments":["unexpected"]},{"Key":"in unexpected","Fragments":["ways."]},{"Key":"unexpected ways.","Fragments":["Looking"]},{"Key":"ways. Looking","Fragments":["at"]},{"Key":"Looking at","Fragments":["other","some","others'","others'"]},{"Key":"other examples","Fragments":["for","I","and"]},{"Key":"examples for","Fragments":["this"]},{"Key":"exercise, I","Fragments":["used","feel","just"]},{"Key":"fix my","Fragments":["code","bugs"]},{"Key":"all testing","Fragments":["examples."]},{"Key":"testing examples.","Fragments":["This"]},{"Key":"examples. This","Fragments":["was"]},{"Key":"was really","Fragments":["interesting","just","readable.","approach"]},{"Key":"really interesting","Fragments":["to","challenge"]},{"Key":"work on,","Fragments":["and"]},{"Key":"on, and","Fragments":["I"]},{"Key":"learned a","Fragments":["lot,","bit","lot"]},{"Key":"lot, especially","Fragments":["about"]},{"Key":"especially about","Fragments":["testing."]},{"Key":"a million","Fragments":["ways","ways"]},{"Key":"million ways","Fragments":["to","to"]},{"Key":"do anagram","Fragments":["parsing,"]},{"Key":"anagram parsing,","Fragments":["including"]},{"Key":"parsing, including","Fragments":["checksums"]},{"Key":"including checksums","Fragments":["and"]},{"Key":"checksums and","Fragments":["the"]},{"Key":"It seemed","Fragments":["most","natural"]},{"Key":"seemed most","Fragments":["obvious"]},{"Key":"most obvious","Fragments":["to"]},{"Key":"that since","Fragments":["an","a"]},{"Key":"since an","Fragments":["anagram","\"if\""]},{"Key":"an anagram","Fragments":["contains","that","(at","of"]},{"Key":"anagram contains","Fragments":["the"]},{"Key":"characters as","Fragments":["the","long"]},{"Key":"the primary","Fragments":["word,"]},{"Key":"primary word,","Fragments":["then"]},{"Key":"word, then","Fragments":["sorting","I"]},{"Key":"in both","Fragments":["words","the","Resharper's","words,","To()","places,"]},{"Key":"words would","Fragments":["be"]},{"Key":"straightforward way","Fragments":["to"]},{"Key":"to confirm","Fragments":["anagramicity."]},{"Key":"What this","Fragments":["doesn't"]},{"Key":"this doesn't","Fragments":["do","have"]},{"Key":"is clean","Fragments":["non-word","and"]},{"Key":"clean non-word","Fragments":["characters"]},{"Key":"non-word characters","Fragments":["from","with","except"]},{"Key":"characters from","Fragments":["the"]},{"Key":"input string(s),","Fragments":["which"]},{"Key":"string(s), which","Fragments":["is"]},{"Key":"is where","Fragments":["direct","I"]},{"Key":"where direct","Fragments":["iteration"]},{"Key":"direct iteration","Fragments":["and"]},{"Key":"iteration and","Fragments":["parsing","then","transformation","there","foreach."]},{"Key":"and parsing","Fragments":["through"]},{"Key":"parsing through","Fragments":["each"]},{"Key":"string might","Fragments":["be"]},{"Key":"could figure","Fragments":["out","out"]},{"Key":"out not","Fragments":["to"]},{"Key":"name twice","Fragments":["was"]},{"Key":"twice was","Fragments":["to"]},{"Key":"save every","Fragments":["name"]},{"Key":"every name","Fragments":["in"]},{"Key":"a collection.","Fragments":["This"]},{"Key":"collection. This","Fragments":["rises"]},{"Key":"This rises","Fragments":["the"]},{"Key":"rises the","Fragments":["problem"]},{"Key":"problem that","Fragments":["if","is"]},{"Key":"all (26^2","Fragments":["*"]},{"Key":"(26^2 *","Fragments":["10^3)"]},{"Key":"* 10^3)","Fragments":["="]},{"Key":"10^3) =","Fragments":["676000"]},{"Key":"= 676000","Fragments":["names"]},{"Key":"676000 names","Fragments":["is"]},{"Key":"is taken,","Fragments":["it"]},{"Key":"taken, it","Fragments":["will"]},{"Key":"get stuck","Fragments":["in"]},{"Key":"stuck in","Fragments":["a"]},{"Key":"while true","Fragments":["loop."]},{"Key":"Also, to","Fragments":["find","respond"]},{"Key":"last of","Fragments":["the"]},{"Key":"free names","Fragments":["could"]},{"Key":"names could","Fragments":["take"]},{"Key":"take indefinite","Fragments":["time."]},{"Key":"All and","Fragments":["all,"]},{"Key":"and all,","Fragments":["this"]},{"Key":"all, this","Fragments":["code"]},{"Key":"recommend having","Fragments":["brackets"]},{"Key":"having brackets","Fragments":["around"]},{"Key":"code following","Fragments":["your"]},{"Key":"following your","Fragments":["IF"]},{"Key":"your IF","Fragments":["statements"]},{"Key":"IF statements","Fragments":["so"]},{"Key":"statements so","Fragments":["it"]},{"Key":"what occurs","Fragments":["within"]},{"Key":"occurs within","Fragments":["it"]},{"Key":"within it","Fragments":["and","are"]},{"Key":"and after","Fragments":["the"]},{"Key":"statement exits.","Fragments":["(For"]},{"Key":"exits. (For","Fragments":["3"]},{"Key":"(For 3","Fragments":["lines"]},{"Key":"code, its","Fragments":["simple"]},{"Key":"its simple","Fragments":["as-is,"]},{"Key":"simple as-is,","Fragments":["but"]},{"Key":"as-is, but","Fragments":["for"]},{"Key":"for future","Fragments":["reference.)","exercises","extensibility","users","users","work."]},{"Key":"Yeah, the","Fragments":["way"]},{"Key":"the ```readonly```","Fragments":["modifier"]},{"Key":"```readonly``` modifier","Fragments":["is"]},{"Key":"modifier is","Fragments":["the"]},{"Key":"the field","Fragments":["can"]},{"Key":"field can","Fragments":["only"]},{"Key":"set in","Fragments":["the"]},{"Key":"constructor. So","Fragments":["you"]},{"Key":"the phone","Fragments":["number,"]},{"Key":"phone number,","Fragments":["only","reject"]},{"Key":"number, only","Fragments":["create"]},{"Key":"only create","Fragments":["a"]},{"Key":"a new.","Fragments":["Is"]},{"Key":"new. Is","Fragments":["this"]},{"Key":"this necessary","Fragments":["here?"]},{"Key":"necessary here?","Fragments":["Probably"]},{"Key":"feel IsNotValidBinary()","Fragments":["would"]},{"Key":"IsNotValidBinary() would","Fragments":["be"]},{"Key":"better using","Fragments":["Regex"]},{"Key":"avoid all","Fragments":["those","those","that"]},{"Key":"those int.Parse","Fragments":["calls."]},{"Key":"int.Parse calls.","Fragments":[":)"]},{"Key":"return \"decimal\"","Fragments":["not"]},{"Key":"\"decimal\" not","Fragments":["int..."]},{"Key":"not int...","Fragments":["Since"]},{"Key":"int... Since","Fragments":["when"]},{"Key":"Since when","Fragments":["does"]},{"Key":"when does","Fragments":["a"]},{"Key":"a ToDecimal()","Fragments":["call","method"]},{"Key":"ToDecimal() call","Fragments":["return"]},{"Key":"call return","Fragments":["int?"]},{"Key":"return int?","Fragments":[":)"]},{"Key":"method TwoToThePowerOf()","Fragments":["is"]},{"Key":"TwoToThePowerOf() is","Fragments":["adding"]},{"Key":"is adding","Fragments":["much"]},{"Key":"adding much","Fragments":["here..."]},{"Key":"much here...","Fragments":["I"]},{"Key":"here... I","Fragments":["would"]},{"Key":"still feel","Fragments":["strongly"]},{"Key":"feel strongly","Fragments":["about"]},{"Key":"strongly about","Fragments":["all"]},{"Key":"about all","Fragments":["those"]},{"Key":"those return","Fragments":["statements"]},{"Key":"statements cluttering","Fragments":["your"]},{"Key":"cluttering your","Fragments":["code."]},{"Key":"code. You'd","Fragments":["be"]},{"Key":"You'd be","Fragments":["better"]},{"Key":"off having","Fragments":["one"]},{"Key":"statement return","Fragments":["a"]},{"Key":"boolean that","Fragments":["contains"]},{"Key":"that contains","Fragments":["either","at"]},{"Key":"contains either","Fragments":["true"]},{"Key":"either true","Fragments":["or"]},{"Key":"or false,","Fragments":["and"]},{"Key":"false, and","Fragments":["use"]},{"Key":"if-then-else structures","Fragments":["to"]},{"Key":"structures to","Fragments":["write"]},{"Key":"write to","Fragments":["the","either"]},{"Key":"boolean before","Fragments":["returning"]},{"Key":"before returning","Fragments":["it.","false","Scalene.","the"]},{"Key":"With some","Fragments":["quick"]},{"Key":"some quick","Fragments":["suggestions,"]},{"Key":"quick suggestions,","Fragments":["I"]},{"Key":"suggestions, I","Fragments":["removed","will"]},{"Key":"the theYear","Fragments":["variable,"]},{"Key":"theYear variable,","Fragments":["since"]},{"Key":"variable, since","Fragments":["year"]},{"Key":"since year","Fragments":["does"]},{"Key":"not change","Fragments":["value","your","you","the"]},{"Key":"change value","Fragments":["when"]},{"Key":"value when","Fragments":["passed"]},{"Key":"when passed","Fragments":["into"]},{"Key":"passed into","Fragments":["the","Day()."]},{"Key":"As someone","Fragments":["else"]},{"Key":"else pointed","Fragments":["out"]},{"Key":"me, clean","Fragments":["up"]},{"Key":"Also, make","Fragments":["your"]},{"Key":" @zakary,","Fragments":["be","I"]},{"Key":"@zakary, be","Fragments":["careful,"]},{"Key":"be careful,","Fragments":["your"]},{"Key":"careful, your","Fragments":["first"]},{"Key":"first suggested","Fragments":["if"]},{"Key":"suggested if","Fragments":["block"]},{"Key":"block will","Fragments":["cause"]},{"Key":"never get","Fragments":["hit.","to","a"]},{"Key":"@zakary, I","Fragments":["agree"]},{"Key":"many inline","Fragments":["logical"]},{"Key":"inline logical","Fragments":["statements"]},{"Key":"logical statements","Fragments":["can"]},{"Key":"be tough","Fragments":["to"]},{"Key":"follow, but","Fragments":["it"]},{"Key":"is compounded","Fragments":["by"]},{"Key":"compounded by","Fragments":["the"]},{"Key":"tests themselves.","Fragments":["In","Anyway"]},{"Key":"themselves. In","Fragments":["this"]},{"Key":"test really","Fragments":["obvious"]},{"Key":"really obvious","Fragments":["and"]},{"Key":"obvious and","Fragments":["there"]},{"Key":"only 3","Fragments":["of","factors"]},{"Key":"3 of","Fragments":["them,"]},{"Key":"of them,","Fragments":["so"]},{"Key":"them, so","Fragments":["it"]},{"Key":"isn't tough","Fragments":["to"]},{"Key":"follow. Here","Fragments":["you"]},{"Key":"Here you","Fragments":["haven't","are","go.","have"]},{"Key":"haven't really","Fragments":["changed","thought"]},{"Key":"really changed","Fragments":["the"]},{"Key":"the flow","Fragments":["of","quite"]},{"Key":"flow of","Fragments":["the"]},{"Key":"algorithm to","Fragments":["match","see","do","find"]},{"Key":"the \"algorithm\"","Fragments":["a"]},{"Key":"\"algorithm\" a","Fragments":["human"]},{"Key":"human would","Fragments":["naturally"]},{"Key":"would naturally","Fragments":["use"]},{"Key":"naturally use","Fragments":["to"]},{"Key":"will find","Fragments":["a","all","\u003cb\u003eHello'\u003c/b\u003e"]},{"Key":"comments saying","Fragments":["that","otherwise)"]},{"Key":"saying that","Fragments":["early","if"]},{"Key":"that early","Fragments":["returns"]},{"Key":"are bad","Fragments":["and"]},{"Key":"bad and","Fragments":["that"]},{"Key":"have one.","Fragments":["I"]},{"Key":"always bad,","Fragments":["but"]},{"Key":"bad, but","Fragments":["it","'i'"]},{"Key":"to pay","Fragments":["attention"]},{"Key":"pay attention","Fragments":["to."]},{"Key":"attention to.","Fragments":["In"]},{"Key":"to. In","Fragments":["your"]},{"Key":"your case","Fragments":["what"]},{"Key":"case what","Fragments":["about","is"]},{"Key":"about nesting","Fragments":["the"]},{"Key":"nesting the","Fragments":["second"]},{"Key":"second two","Fragments":["if","in"]},{"Key":"statements under","Fragments":["the"]},{"Key":"the first,","Fragments":["and"]},{"Key":"first, and","Fragments":["possibly","shortcut"]},{"Key":"and possibly","Fragments":["combining","the"]},{"Key":"possibly combining","Fragments":["the"]},{"Key":"two in","Fragments":["the"]},{"Key":"Also, this","Fragments":["is"]},{"Key":"my idea,","Fragments":["it"]},{"Key":"actually on","Fragments":["the"]},{"Key":"conversation for","Fragments":["exercism.io"]},{"Key":"for exercism.io","Fragments":["but"]},{"Key":"exercism.io but","Fragments":["they"]},{"Key":"they use","Fragments":["a"]},{"Key":"lambda to","Fragments":["capture","process","create"]},{"Key":"the DivisibleBy","Fragments":["function"]},{"Key":"DivisibleBy function","Fragments":["to"]},{"Key":"only take","Fragments":["one"]},{"Key":"take one","Fragments":["parameter."]},{"Key":"one parameter.","Fragments":["It"]},{"Key":"parameter. It","Fragments":["is"]},{"Key":"pretty cool","Fragments":["you","solution."]},{"Key":"cool you","Fragments":["could"]},{"Key":" Note:","Fragments":["I","I","I","Initially"]},{"Key":"Note: I","Fragments":["would","haven't","did"]},{"Key":"ToDecimal() method","Fragments":["to"]},{"Key":"a decimal...","Fragments":["The"]},{"Key":"decimal... The","Fragments":["Unit"]},{"Key":"The Unit","Fragments":["Test"]},{"Key":"Unit Test","Fragments":["was"]},{"Key":"Test was","Fragments":["coded"]},{"Key":"was coded","Fragments":["to"]},{"Key":"int, so","Fragments":["I","if"]},{"Key":"wrote my","Fragments":["method","submission,"]},{"Key":"method similar","Fragments":["to"]},{"Key":"to yours.","Fragments":["You"]},{"Key":"yours. You","Fragments":["can"]},{"Key":"can skip","Fragments":["using"]},{"Key":"skip using","Fragments":["iYear"]},{"Key":"using iYear","Fragments":["and"]},{"Key":"iYear and","Fragments":["just"]},{"Key":"use args","Fragments":["directly,"]},{"Key":"args directly,","Fragments":["since"]},{"Key":"directly, since","Fragments":["the"]},{"Key":"the args","Fragments":["variable"]},{"Key":"args variable","Fragments":["isn't"]},{"Key":"being changed","Fragments":["and"]},{"Key":"changed and","Fragments":["you're"]},{"Key":"and you're","Fragments":["returning"]},{"Key":"you're returning","Fragments":["a","inside","within"]},{"Key":"suggest reducing","Fragments":["the","your"]},{"Key":"reducing the","Fragments":["spacing","if"]},{"Key":"the spacing","Fragments":["you"]},{"Key":"spacing you","Fragments":["use"]},{"Key":"use between","Fragments":["lines."]},{"Key":"between lines.","Fragments":["The"]},{"Key":"lines. The","Fragments":["indentation","previous"]},{"Key":"The indentation","Fragments":["makes"]},{"Key":"indentation makes","Fragments":["the"]},{"Key":"read than","Fragments":["the"]},{"Key":"large spaces","Fragments":["between"]},{"Key":"spaces between","Fragments":["them."]},{"Key":"Don't like","Fragments":["the","Execute"]},{"Key":"loop (YMMV)","Fragments":["foreach"]},{"Key":"(YMMV) foreach","Fragments":["loop"]},{"Key":"loop is","Fragments":["difficult","more","quite","very","minimized","3.","probably","twice","simple","faster,","justified**,"]},{"Key":"difficult (unless","Fragments":["adding"]},{"Key":"(unless adding","Fragments":["a"]},{"Key":"a pos","Fragments":["variable)"]},{"Key":"pos variable)","Fragments":["or"]},{"Key":"variable) or","Fragments":["even"]},{"Key":"even some","Fragments":["Linq"]},{"Key":"some Linq","Fragments":["(off","features"]},{"Key":"Linq (off","Fragments":["the"]},{"Key":"(off the","Fragments":["top"]},{"Key":"my head)","Fragments":["to"]},{"Key":"head) to","Fragments":["replace"]},{"Key":"whole of","Fragments":["ToRoman:-"]},{"Key":"var strInt","Fragments":["="]},{"Key":"strInt =","Fragments":["input;"]},{"Key":" strInt.Select((c,i)=\u003enew","Fragments":["{Template=RomanTemplates[c-'0'],Offset=2"]},{"Key":"strInt.Select((c,i)=\u003enew {Template=RomanTemplates[c-'0'],Offset=2","Fragments":["*"]},{"Key":"{Template=RomanTemplates[c-'0'],Offset=2 *","Fragments":["(strInt.Length"]},{"Key":"* (strInt.Length","Fragments":["-"]},{"Key":"(strInt.Length -","Fragments":["pos"]},{"Key":"- pos","Fragments":["-"]},{"Key":"pos -","Fragments":["1})"]},{"Key":" .Select(a=\u003eString.Format(a.Template,","Fragments":["ArabianChars[a.Offset],"]},{"Key":".Select(a=\u003eString.Format(a.Template, ArabianChars[a.Offset],","Fragments":["ArabianChars[a.Offset"]},{"Key":"ArabianChars[a.Offset], ArabianChars[a.Offset","Fragments":["+"]},{"Key":"ArabianChars[a.Offset +","Fragments":["1],","2]))"]},{"Key":"+ 1],","Fragments":["ArabianChars[a.Offset"]},{"Key":"1], ArabianChars[a.Offset","Fragments":["+"]},{"Key":" Add","Fragments":["spacing","to","the"]},{"Key":"Add spacing","Fragments":["to"]},{"Key":"spacing to","Fragments":["provide"]},{"Key":"provide extra","Fragments":["readability"]},{"Key":"extra readability","Fragments":["for"]},{"Key":"your operands","Fragments":["in"]},{"Key":"operands in","Fragments":["your"]},{"Key":"your expression.","Fragments":["eg"]},{"Key":"expression. eg","Fragments":["`year"]},{"Key":"eg `year","Fragments":["%"]},{"Key":"do Boolean","Fragments":["reduction"]},{"Key":"Boolean reduction","Fragments":["on"]},{"Key":"reduction on","Fragments":["the"]},{"Key":"expression it","Fragments":["would"]},{"Key":"help so","Fragments":["the"]},{"Key":"reader doesn't","Fragments":["have"]},{"Key":"do extra","Fragments":["Boolean"]},{"Key":"extra Boolean","Fragments":["math"]},{"Key":"Boolean math","Fragments":["in"]},{"Key":"math in","Fragments":["their"]},{"Key":"`return year","Fragments":["%"]},{"Key":"You're forcing","Fragments":["the"]},{"Key":"forcing the","Fragments":["compiler"]},{"Key":"compiler to","Fragments":["create","do),"]},{"Key":"create variables","Fragments":["for"]},{"Key":"variables for","Fragments":["each","something","this,"]},{"Key":"each sub-expression,","Fragments":["when"]},{"Key":"sub-expression, when","Fragments":["you"]},{"Key":"full expression","Fragments":["in"]},{"Key":"line. It's","Fragments":["definitely"]},{"Key":"It's definitely","Fragments":["readable,"]},{"Key":"definitely readable,","Fragments":["but"]},{"Key":"than needed","Fragments":["as"]},{"Key":"needed as","Fragments":["the"]},{"Key":"the formula","Fragments":["is","is"]},{"Key":"formula is","Fragments":["quite","simple,"]},{"Key":"Ok based","Fragments":["on"]},{"Key":"on feedback,","Fragments":["I"]},{"Key":"superfluous `using`","Fragments":["statements."]},{"Key":"`using` statements.","Fragments":["As"]},{"Key":"statements. As","Fragments":["well,"]},{"Key":"As well,","Fragments":["to"]},{"Key":"well, to","Fragments":["promote"]},{"Key":"to promote","Fragments":["terseness"]},{"Key":"promote terseness","Fragments":["and"]},{"Key":"terseness and","Fragments":["readability,"]},{"Key":"from ternary","Fragments":["to"]},{"Key":"ternary to","Fragments":["boolean"]},{"Key":"to boolean","Fragments":["operators,","values"]},{"Key":"boolean operators,","Fragments":["as"]},{"Key":"operators, as","Fragments":["well"]},{"Key":"as formatting","Fragments":["the"]},{"Key":"formatting the","Fragments":["expression"]},{"Key":"expression apart","Fragments":["on"]},{"Key":"apart on","Fragments":["different"]},{"Key":"lines to","Fragments":["show","your","1"]},{"Key":"show it's","Fragments":["components"]},{"Key":"it's components","Fragments":["more"]},{"Key":"components more","Fragments":["clearly."]},{"Key":"Thanks, SamKablam!","Fragments":["I"]},{"Key":"SamKablam! I","Fragments":["like"]},{"Key":"your suggestions,","Fragments":["I"]},{"Key":"and resubmit","Fragments":["the"]},{"Key":"resubmit the","Fragments":["code."]},{"Key":" Functionally","Fragments":["correct,"]},{"Key":"Functionally correct,","Fragments":["but"]},{"Key":"but needs","Fragments":["argument"]},{"Key":"needs argument","Fragments":["checking"]},{"Key":"argument checking","Fragments":["(test","is"]},{"Key":"checking (test","Fragments":["that"]},{"Key":"(test that","Fragments":["\"year\""]},{"Key":"that \"year\"","Fragments":["is"]},{"Key":"\"year\" is","Fragments":["in"]},{"Key":"this. Simple,","Fragments":["elegant,"]},{"Key":"Simple, elegant,","Fragments":["and"]},{"Key":"elegant, and","Fragments":["clear.","readable."]},{"Key":" Technically,","Fragments":["the","the"]},{"Key":"Technically, the","Fragments":["return","Gregorian"]},{"Key":"return should","Fragments":["be"]},{"Key":"be long","Fragments":["since"]},{"Key":"long since","Fragments":["it"]},{"Key":"possible a","Fragments":["huge"]},{"Key":"huge prime","Fragments":["number"]},{"Key":"prime number","Fragments":["could","generator","generator.","at","2"]},{"Key":"number could","Fragments":["come"]},{"Key":"could come","Fragments":["back."]},{"Key":"come back.","Fragments":[":)"]},{"Key":"return IEnumerable\u003clong\u003e","Fragments":["instead,"]},{"Key":"IEnumerable\u003clong\u003e instead,","Fragments":["then"]},{"Key":"instead, then","Fragments":["you"]},{"Key":"need that","Fragments":[".ToArray()","at","anymore.","to"]},{"Key":"that .ToArray()","Fragments":["at"]},{"Key":".ToArray() at","Fragments":["the"]},{"Key":"Changed \"counter\"","Fragments":["to"]},{"Key":"\"counter\" to","Fragments":["\"divisor\"."]},{"Key":"as @antonio","Fragments":["comment"]},{"Key":"@antonio comment","Fragments":["about"]},{"Key":"about invalid","Fragments":["year","input","input?"]},{"Key":"invalid year","Fragments":["values,"]},{"Key":"year values,","Fragments":["I"]},{"Key":"values, I","Fragments":["think"]},{"Key":"really applicable","Fragments":["to"]},{"Key":"applicable to","Fragments":["these","it"]},{"Key":"to these","Fragments":["unit"]},{"Key":"these unit","Fragments":["tests,"]},{"Key":"certainly an","Fragments":["important","insightful"]},{"Key":"an important","Fragments":["point","part"]},{"Key":"important point","Fragments":["to"]},{"Key":"when working","Fragments":["on"]},{"Key":"own code.","Fragments":["In","At"]},{"Key":"this context,","Fragments":["you"]},{"Key":"context, you","Fragments":["know"]},{"Key":"you're getting","Fragments":["and"]},{"Key":"getting and","Fragments":["you"]},{"Key":"to produce","Fragments":["a"]},{"Key":"specific result,","Fragments":["and"]},{"Key":"result, and","Fragments":["code"]},{"Key":"and code","Fragments":["not"]},{"Key":"code not","Fragments":["written","having"]},{"Key":"not written","Fragments":["to","for"]},{"Key":"written to","Fragments":["that"]},{"Key":"that end","Fragments":["can"]},{"Key":"end can","Fragments":["potentially"]},{"Key":"can potentially","Fragments":["degrade"]},{"Key":"potentially degrade","Fragments":["readability,"]},{"Key":"degrade readability,","Fragments":["but"]},{"Key":"readability, but","Fragments":["when","taking"]},{"Key":"own projects,","Fragments":["I"]},{"Key":"projects, I","Fragments":["agree"]},{"Key":"you absolutely","Fragments":["want"]},{"Key":"absolutely want","Fragments":["to"]},{"Key":"keep these","Fragments":["sorts"]},{"Key":"these sorts","Fragments":["of"]},{"Key":"sorts of","Fragments":["edge"]},{"Key":"of edge","Fragments":["cases"]},{"Key":" LINQ-ified","Fragments":["it!"]},{"Key":" Efficiently","Fragments":["concise"]},{"Key":"Efficiently concise","Fragments":["but..."]},{"Key":"concise but...","Fragments":["not"]},{"Key":"but... not","Fragments":["terribly"]},{"Key":"not terribly","Fragments":["readable."]},{"Key":"Very Clean","Fragments":["I"]},{"Key":"Clean I","Fragments":["like"]},{"Key":"logic, keeping","Fragments":["your"]},{"Key":"keeping your","Fragments":["main"]},{"Key":"main concern","Fragments":["determining"]},{"Key":"concern determining","Fragments":["what"]},{"Key":"determining what","Fragments":["kind"]},{"Key":"what kind","Fragments":["of","it"]},{"Key":"of statement,","Fragments":["away"]},{"Key":"statement, away","Fragments":["from"]},{"Key":"away from","Fragments":["the","it","comments","it","issuing"]},{"Key":"the nitty","Fragments":["gritty"]},{"Key":"nitty gritty","Fragments":["logic"]},{"Key":"gritty logic","Fragments":["that"]},{"Key":"that determines","Fragments":["if"]},{"Key":"determines if","Fragments":["criteria"]},{"Key":"if criteria","Fragments":["is"]},{"Key":"criteria is","Fragments":["met."]},{"Key":"the concise","Fragments":["nature"]},{"Key":"concise nature","Fragments":["of"]},{"Key":"of this,","Fragments":["but","and","I","and","idiomatic"]},{"Key":"but aren't","Fragments":["the","leap"]},{"Key":"aren't the","Fragments":["parentheses","best"]},{"Key":"the parentheses","Fragments":["superfluous?"]},{"Key":"parentheses superfluous?","Fragments":["I"]},{"Key":"superfluous? I","Fragments":["feel"]},{"Key":"these are","Fragments":["the","minimal","fairly","distinct","should"]},{"Key":" !(year","Fragments":["%"]},{"Key":"!(year %","Fragments":["100"]},{"Key":"could pop","Fragments":["that"]},{"Key":"pop that","Fragments":["out"]},{"Key":"and cut","Fragments":["down"]},{"Key":" hehe,","Fragments":["I"]},{"Key":"hehe, I","Fragments":["bet"]},{"Key":"bet it","Fragments":["did"]},{"Key":"did take","Fragments":["a"]},{"Key":"lot longer.","Fragments":["I"]},{"Key":"longer. I","Fragments":["was"]},{"Key":"over engineering","Fragments":["it.","in"]},{"Key":"engineering it.","Fragments":["I"]},{"Key":"count words","Fragments":["and"]},{"Key":"words and","Fragments":["possible","pulls","compare","comparing","supplying","verse"]},{"Key":"and possible","Fragments":["the"]},{"Key":"possible the","Fragments":["ability"]},{"Key":"count sentences","Fragments":["and"]},{"Key":"sentences and","Fragments":["figure"]},{"Key":"phrase contains","Fragments":["yelling,","any"]},{"Key":"contains yelling,","Fragments":["then"]},{"Key":"yelling, then","Fragments":["question,"]},{"Key":"then question,","Fragments":["then"]},{"Key":"question, then","Fragments":["statement,"]},{"Key":"then statement,","Fragments":["etc."]},{"Key":"than taking","Fragments":["out"]},{"Key":"out comments,","Fragments":["how"]},{"Key":"comments, how","Fragments":["would"]},{"Key":"how would","Fragments":["I","that","you"]},{"Key":"would I","Fragments":["make","want"]},{"Key":"more compact?","Fragments":["Is"]},{"Key":"compact? Is","Fragments":["there"]},{"Key":"out parsing","Fragments":["down"]},{"Key":"parsing down","Fragments":["to"]},{"Key":"to characters?","Fragments":["may"]},{"Key":"characters? may","Fragments":["be"]},{"Key":"be with","Fragments":["just","inputs"]},{"Key":"just string","Fragments":["methods?"]},{"Key":"string methods?","Fragments":["I've"]},{"Key":"methods? I've","Fragments":["been"]},{"Key":"been writing","Fragments":["C#"]},{"Key":"writing C#","Fragments":["for"]},{"Key":"of 1","Fragments":["week","to","here,"]},{"Key":"1 week","Fragments":["so"]},{"Key":"week so","Fragments":["far,"]},{"Key":"far, so","Fragments":["this"]},{"Key":"best I","Fragments":["have","think","have"]},{"Key":"done to","Fragments":["date.","increase"]},{"Key":"to date.","Fragments":[":-)","So,","I"]},{"Key":"date. :-)","Fragments":["Always"]},{"Key":":-) Always","Fragments":["room"]},{"Key":"Always room","Fragments":["for"]},{"Key":"room for","Fragments":["improvement."]},{"Key":"string library","Fragments":["(other"]},{"Key":"library (other","Fragments":["than"]},{"Key":"than equals())","Fragments":["so"]},{"Key":"equals()) so","Fragments":["may"]},{"Key":"so may","Fragments":["be"]},{"Key":"with @ashly","Fragments":["here;"]},{"Key":"@ashly here;","Fragments":["IMHO"]},{"Key":"here; IMHO","Fragments":["when"]},{"Key":"IMHO when","Fragments":["you're"]},{"Key":"you're writing","Fragments":["out"]},{"Key":"expression like","Fragments":["the","this:\u003ccode\u003e"]},{"Key":"return value,","Fragments":["the"]},{"Key":"value, the","Fragments":["question"]},{"Key":"question becomes","Fragments":["\"Does"]},{"Key":"becomes \"Does","Fragments":["the"]},{"Key":"\"Does the","Fragments":["expression"]},{"Key":"expression speak","Fragments":["for"]},{"Key":"speak for","Fragments":["itself?\"","themselves,"]},{"Key":"for itself?\"","Fragments":["and"]},{"Key":"itself?\" and","Fragments":["in"]},{"Key":"and in","Fragments":["the","most","most","body","a"]},{"Key":"simple expressions","Fragments":["like"]},{"Key":"expressions like","Fragments":["year%4==0"]},{"Key":"like year%4==0","Fragments":["I"]},{"Key":"year%4==0 I","Fragments":["believe"]},{"Key":"My guess","Fragments":["is","is"]},{"Key":"guess is","Fragments":["that","that"]},{"Key":"are double","Fragments":["counting"]},{"Key":"double counting","Fragments":["the"]},{"Key":"counting the","Fragments":["multiples"]},{"Key":" Say","Fragments":["for"]},{"Key":"Say for","Fragments":["example"]},{"Key":"for example","Fragments":["you","rather"]},{"Key":"example you","Fragments":["want","only"]},{"Key":"to sum","Fragments":["multiple"]},{"Key":"sum multiple","Fragments":["of"]},{"Key":"of 3","Fragments":["and","\u0026"]},{"Key":"3 and","Fragments":["5","5","increment"]},{"Key":"and 5","Fragments":["up","to"]},{"Key":"5 up","Fragments":["to"]},{"Key":" Three","Fragments":["gives:","comments.","levels"]},{"Key":"Three gives:","Fragments":["3,"]},{"Key":"gives: 3,","Fragments":["6,"]},{"Key":"3, 6,","Fragments":["9,"]},{"Key":"9, 12,","Fragments":["15,"]},{"Key":"12, 15,","Fragments":["18"]},{"Key":" Five","Fragments":["gives:"]},{"Key":"Five gives:","Fragments":["5,"]},{"Key":"gives: 5,","Fragments":["10,"]},{"Key":" Sum","Fragments":["these"]},{"Key":"Sum these","Fragments":["up"]},{"Key":"these up","Fragments":["and"]},{"Key":"get 93,","Fragments":["but"]},{"Key":"93, but","Fragments":["then"]},{"Key":"you counted","Fragments":["15"]},{"Key":"counted 15","Fragments":["twice!"]},{"Key":"15 twice!","Fragments":["You"]},{"Key":"twice! You","Fragments":["need"]},{"Key":"that 15","Fragments":["is"]},{"Key":"15 is","Fragments":["not"]},{"Key":"this certainly","Fragments":["does"]},{"Key":"certainly does","Fragments":["the"]},{"Key":"the job,","Fragments":["I"]},{"Key":"more concisely","Fragments":["without"]},{"Key":"concisely without","Fragments":["sacrificing"]},{"Key":"without sacrificing","Fragments":["clarity.","clarity","the"]},{"Key":"sacrificing clarity.","Fragments":["I'd"]},{"Key":"clarity. I'd","Fragments":["try"]},{"Key":"try grouping","Fragments":["the"]},{"Key":"statements together","Fragments":["with"]},{"Key":"together with","Fragments":["\u0026\u0026","string.Trim"]},{"Key":"with \u0026\u0026","Fragments":["and","and"]},{"Key":"|| operators.","Fragments":["Declaring","Also,"]},{"Key":"operators. Declaring","Fragments":["the"]},{"Key":"Declaring the","Fragments":["isLeap"]},{"Key":"the isLeap","Fragments":["variable","method,"]},{"Key":"isLeap variable","Fragments":["I've"]},{"Key":"variable I've","Fragments":["come"]},{"Key":"realize is","Fragments":["a"]},{"Key":"of personal","Fragments":["style;","preference.","preference"]},{"Key":"personal style;","Fragments":["I"]},{"Key":"style; I","Fragments":["try"]},{"Key":"avoid declaring","Fragments":["variables"]},{"Key":"declaring variables","Fragments":["for"]},{"Key":"that I'm","Fragments":["going","not","forgetting"]},{"Key":"this function,","Fragments":["but"]},{"Key":"concise without","Fragments":["sacrificing"]},{"Key":"sacrificing clarity","Fragments":["by"]},{"Key":"clarity by","Fragments":["grouping"]},{"Key":"by grouping","Fragments":["the"]},{"Key":"1. what's","Fragments":["the"]},{"Key":"what's the","Fragments":["difference?","best","performance"]},{"Key":"the difference?","Fragments":[":P"]},{"Key":"will throw","Fragments":["a","an","a","an","a","an","a"]},{"Key":"a NullReferanceException","Fragments":["when"]},{"Key":"NullReferanceException when","Fragments":["it"]},{"Key":"it hits","Fragments":["the"]},{"Key":"first foreach","Fragments":["loop,"]},{"Key":"loop, I","Fragments":["could"]},{"Key":"could throw","Fragments":["a"]},{"Key":"custom null","Fragments":["exception"]},{"Key":"null exception","Fragments":["but"]},{"Key":"exception but","Fragments":["it","new"]},{"Key":"be fairly","Fragments":["obvious"]},{"Key":"fairly obvious","Fragments":["what's"]},{"Key":"obvious what's","Fragments":["happened"]},{"Key":"what's happened","Fragments":["either"]},{"Key":"happened either","Fragments":["way"]},{"Key":"way wouldn't","Fragments":["it"]},{"Key":"3. Yup","Fragments":["can't"]},{"Key":"Yup can't","Fragments":["argue"]},{"Key":"can't argue","Fragments":["this"]},{"Key":"argue this","Fragments":["one"]},{"Key":"way will","Fragments":["update","be"]},{"Key":"include this","Fragments":["change."]},{"Key":"a loop?","Fragments":["Underlying","Very"]},{"Key":"loop? Underlying","Fragments":["ToUpper"]},{"Key":"Underlying ToUpper","Fragments":["and"]},{"Key":"ToUpper and","Fragments":["Any"]},{"Key":"and Any","Fragments":["there"]},{"Key":"Any there","Fragments":["are"]},{"Key":"ToUpper() ==","Fragments":["input","message"]},{"Key":"== input","Fragments":["solution"]},{"Key":"input solution","Fragments":["because,"]},{"Key":"solution because,","Fragments":["although"]},{"Key":"because, although","Fragments":["very"]},{"Key":"although very","Fragments":["simple,"]},{"Key":"very simple,","Fragments":["it"]},{"Key":"simple, it","Fragments":["does"]},{"Key":"does more","Fragments":["work"]},{"Key":"work than","Fragments":["necessary.","necessary.","is"]},{"Key":"necessary. It","Fragments":["has"]},{"Key":"to allocate","Fragments":["a"]},{"Key":"allocate a","Fragments":["new"]},{"Key":"new string,","Fragments":["copy"]},{"Key":"string, copy","Fragments":["each"]},{"Key":"copy each","Fragments":["character,"]},{"Key":"each character,","Fragments":["possibly"]},{"Key":"character, possibly","Fragments":["converting"]},{"Key":"possibly converting","Fragments":["to"]},{"Key":"converting to","Fragments":["upper,","a"]},{"Key":"to upper,","Fragments":["then"]},{"Key":"upper, then","Fragments":["compare"]},{"Key":"compare this","Fragments":["string"]},{"Key":"this string","Fragments":["to"]},{"Key":"the original.","Fragments":["My"]},{"Key":"original. My","Fragments":["best"]},{"Key":"My best","Fragments":["case"]},{"Key":"best case","Fragments":["is","of"]},{"Key":"test (the","Fragments":["first"]},{"Key":"first letter","Fragments":["is","when"]},{"Key":"is lower-case);","Fragments":["my"]},{"Key":"lower-case); my","Fragments":["worst"]},{"Key":"my worst","Fragments":["case"]},{"Key":"does two","Fragments":["tests"]},{"Key":"two tests","Fragments":["on","into","Keep_array()"]},{"Key":"each character.","Fragments":["A"]},{"Key":"character. A","Fragments":["nitpick"]},{"Key":"A nitpick","Fragments":["in"]},{"Key":"in favor","Fragments":["of","of","here","of"]},{"Key":"favor of","Fragments":["speed.","readability.","multiple"]},{"Key":"curiosity, I","Fragments":["called"]},{"Key":"called Hey","Fragments":["on"]},{"Key":"Hey on","Fragments":["all"]},{"Key":"test string","Fragments":["1,000,000"]},{"Key":"string 1,000,000","Fragments":["times."]},{"Key":"1,000,000 times.","Fragments":["My"]},{"Key":"times. My","Fragments":["solution"]},{"Key":"solution took","Fragments":["5.7","6.7","5.7","8.4"]},{"Key":"took 5.7","Fragments":["seconds,","seconds,"]},{"Key":"5.7 seconds,","Fragments":["the","the"]},{"Key":"seconds, the","Fragments":["ToUpper","ToUpper"]},{"Key":"the ToUpper","Fragments":["solution","solution","after"]},{"Key":"ToUpper solution","Fragments":["took","(input.Any\u003cchar\u003e(char.IsLetter)).","took"]},{"Key":"took 6.7","Fragments":["seconds."]},{"Key":"6.7 seconds.","Fragments":["Perhaps"]},{"Key":"seconds. Perhaps","Fragments":["not"]},{"Key":"Perhaps not","Fragments":["enough"]},{"Key":"enough of","Fragments":["a"]},{"Key":"difference to","Fragments":["worry"]},{"Key":"code was","Fragments":["originally","called","clearly"]},{"Key":"was originally","Fragments":["written","below"]},{"Key":"originally written","Fragments":["in"]},{"Key":"in VB.NET","Fragments":["and"]},{"Key":"VB.NET and","Fragments":["then"]},{"Key":"then ported","Fragments":["to"]},{"Key":"ported to","Fragments":["C#"]},{"Key":"to C#","Fragments":["as","and"]},{"Key":"C# as","Fragments":["a"]},{"Key":"a learning","Fragments":["tool","site","site."]},{"Key":"learning tool","Fragments":["for"]},{"Key":"tool for","Fragments":["me.","the"]},{"Key":"general semantic","Fragments":["processing","processing"]},{"Key":"semantic processing","Fragments":["engine","engine,"]},{"Key":"processing engine","Fragments":["that"]},{"Key":"engine that","Fragments":["would"]},{"Key":"easily extensible.","Fragments":["Adding"]},{"Key":"extensible. Adding","Fragments":["emotion"]},{"Key":"Adding emotion","Fragments":["detection"]},{"Key":"emotion detection","Fragments":["or"]},{"Key":"detection or","Fragments":["positive/negative"]},{"Key":"or positive/negative","Fragments":["word"]},{"Key":"positive/negative word","Fragments":["detection"]},{"Key":"word detection","Fragments":["would"]},{"Key":"detection would","Fragments":["be"]},{"Key":"be relatively","Fragments":["straightforward","expensive."]},{"Key":"relatively straightforward","Fragments":["in","trick"]},{"Key":"straightforward in","Fragments":["this"]},{"Key":"- add","Fragments":["elements","a"]},{"Key":"add elements","Fragments":["to"]},{"Key":"elements to","Fragments":["the"]},{"Key":"enumerations and","Fragments":["add"]},{"Key":"add associated","Fragments":["LINQ"]},{"Key":"associated LINQ","Fragments":["in"]},{"Key":"the counting","Fragments":["function."]},{"Key":"The weights","Fragments":["were"]},{"Key":"weights were","Fragments":["shamelessly"]},{"Key":"were shamelessly","Fragments":["tweaked"]},{"Key":"shamelessly tweaked","Fragments":["to"]},{"Key":"tweaked to","Fragments":["make"]},{"Key":"a relatively","Fragments":["robust","straightforward"]},{"Key":"relatively robust","Fragments":["solution"]},{"Key":"robust solution","Fragments":["for"]},{"Key":"solution for","Fragments":["any","this","one","multi-letter","the","alternative"]},{"Key":"any type","Fragments":["of"]},{"Key":"I neglected","Fragments":["to"]},{"Key":"my ToUpper","Fragments":["solution"]},{"Key":"solution (input.Any\u003cchar\u003e(char.IsLetter)).","Fragments":["Including"]},{"Key":"(input.Any\u003cchar\u003e(char.IsLetter)). Including","Fragments":["this"]},{"Key":"Including this","Fragments":["test,"]},{"Key":"this test,","Fragments":["my","but","but","but","but","though"]},{"Key":"took 8.4","Fragments":["seconds."]},{"Key":" Short","Fragments":["and","but","and"]},{"Key":"Short and","Fragments":["to","sweet.","sweet"]},{"Key":"and to","Fragments":["the","the","me"]},{"Key":"the point?","Fragments":["Yes."]},{"Key":"point? Yes.","Fragments":["Expressive?"]},{"Key":"Yes. Expressive?","Fragments":["No."]},{"Key":"1. By","Fragments":["using"]},{"Key":"IDictionary\u003c\u003e someone","Fragments":["could"]},{"Key":"someone could","Fragments":["send","change"]},{"Key":"could send","Fragments":["in"]},{"Key":"a SortedDictionary\u003c\u003e,","Fragments":["ReadOnlyDictionary\u003c\u003e,"]},{"Key":"SortedDictionary\u003c\u003e, ReadOnlyDictionary\u003c\u003e,","Fragments":["etc"]},{"Key":"ReadOnlyDictionary\u003c\u003e, etc","Fragments":["and"]},{"Key":"etc and","Fragments":["you"]},{"Key":"change any","Fragments":["of"]},{"Key":"2. Well,","Fragments":["it"]},{"Key":"Well, it","Fragments":["is"]},{"Key":"debug a","Fragments":["null"]},{"Key":"reference exception","Fragments":["when"]},{"Key":"specifically throw","Fragments":["an"]},{"Key":"an ArgumentNullException(\"variableName\")","Fragments":["instead"]},{"Key":"ArgumentNullException(\"variableName\") instead","Fragments":["of"]},{"Key":"generic null","Fragments":["reference"]},{"Key":"Cool to","Fragments":["see"]},{"Key":"the ```DynamicInvoke```","Fragments":["and"]},{"Key":"```DynamicInvoke``` and","Fragments":["a"]},{"Key":"a ```Dictionary```","Fragments":["with"]},{"Key":"```Dictionary``` with","Fragments":["a"]},{"Key":"as Key,","Fragments":["did'nt"]},{"Key":"Key, did'nt","Fragments":["know"]},{"Key":"did'nt know","Fragments":["C#"]},{"Key":"know C#","Fragments":["was","-","whatsoever,"]},{"Key":"C# was","Fragments":["that"]},{"Key":"However, overkill","Fragments":["for"]},{"Key":"assignment would'nt","Fragments":["you"]},{"Key":"would'nt you","Fragments":["say?"]},{"Key":"you say?","Fragments":[";-)"]},{"Key":"with `\"?\"`","Fragments":["slight"]},{"Key":"`\"?\"` slight","Fragments":["simpler"]},{"Key":"slight simpler","Fragments":["using"]},{"Key":"simpler using","Fragments":["`hStr.EndsWith(\"?\")`."]},{"Key":"I'm converting","Fragments":["the"]},{"Key":"to Microsoft's","Fragments":["unit"]},{"Key":"Microsoft's unit","Fragments":["tests","tests"]},{"Key":"tests because","Fragments":["NUnit"]},{"Key":"because NUnit","Fragments":["has"]},{"Key":"NUnit has","Fragments":["some"]},{"Key":"some issues","Fragments":["with"]},{"Key":"the Express","Fragments":["VS"]},{"Key":"Express VS","Fragments":["versions."]},{"Key":"VS versions.","Fragments":["This"]},{"Key":"versions. This","Fragments":["caused"]},{"Key":"This caused","Fragments":["two"]},{"Key":"caused two","Fragments":["major"]},{"Key":"two major","Fragments":["issues."]},{"Key":"major issues.","Fragments":["First,"]},{"Key":"issues. First,","Fragments":["I"]},{"Key":"use CollectionAssert.AreEqual,","Fragments":["which"]},{"Key":"CollectionAssert.AreEqual, which","Fragments":["may"]},{"Key":"not compare","Fragments":["dictionaries"]},{"Key":"compare dictionaries","Fragments":["the"]},{"Key":"dictionaries the","Fragments":["same."]},{"Key":"the same.","Fragments":["It",":)","It"]},{"Key":"same. It","Fragments":["does,","could"]},{"Key":"It does,","Fragments":["however,"]},{"Key":"does, however,","Fragments":["test"]},{"Key":"however, test","Fragments":["order,"]},{"Key":"test order,","Fragments":["which"]},{"Key":"order, which","Fragments":["leads"]},{"Key":"second issue.","Fragments":["The"]},{"Key":"issue. The","Fragments":["multiple-value"]},{"Key":"The multiple-value","Fragments":["test"]},{"Key":"multiple-value test","Fragments":["and","so"]},{"Key":"full dataset","Fragments":["test"]},{"Key":"dataset test","Fragments":["don't"]},{"Key":"test don't","Fragments":["seem"]},{"Key":"follow consistent","Fragments":["ordering"]},{"Key":"consistent ordering","Fragments":["rules."]},{"Key":"ordering rules.","Fragments":["To"]},{"Key":"rules. To","Fragments":["address"]},{"Key":"To address","Fragments":["this,"]},{"Key":"address this,","Fragments":["I"]},{"Key":"of \"d\"","Fragments":["and"]},{"Key":"\"d\" and","Fragments":["\"e\""]},{"Key":"and \"e\"","Fragments":["in"]},{"Key":"\"e\" in","Fragments":["the"]},{"Key":"the multiple-value","Fragments":["test"]},{"Key":"all tests","Fragments":["require","but","plus","in"]},{"Key":"tests require","Fragments":["alphabetical","in"]},{"Key":"require alphabetical","Fragments":["ordering,"]},{"Key":"alphabetical ordering,","Fragments":["which"]},{"Key":"ordering, which","Fragments":["this"]},{"Key":"initial function","Fragments":["looked"]},{"Key":"function looked","Fragments":["like."]},{"Key":"looked like.","Fragments":["I'm"]},{"Key":"like. I'm","Fragments":["using"]},{"Key":"using Microsoft's","Fragments":["unit"]},{"Key":"tests instead","Fragments":["of"]},{"Key":"of NUnit.","Fragments":["Does"]},{"Key":"NUnit. Does","Fragments":["NUnit"]},{"Key":"Does NUnit","Fragments":["allow"]},{"Key":"NUnit allow","Fragments":["this"]},{"Key":"allow this","Fragments":["comparison"]},{"Key":"this comparison","Fragments":["to"]},{"Key":"comparison to","Fragments":["work","zero","another"]},{"Key":"without matching","Fragments":["the"]},{"Key":"the entries","Fragments":["into","for","in"]},{"Key":"entries into","Fragments":["the"]},{"Key":"think so.","Fragments":["Mine"]},{"Key":"so. Mine","Fragments":["passed"]},{"Key":"Mine passed","Fragments":["the"]},{"Key":"NUnit testing.","Fragments":["Dictionaries"]},{"Key":"testing. Dictionaries","Fragments":["are"]},{"Key":"Dictionaries are","Fragments":["usually"]},{"Key":"usually orderless,","Fragments":["so"]},{"Key":"orderless, so","Fragments":["it"]},{"Key":" `IsNullOrWhitespace()`","Fragments":["includes"]},{"Key":"`IsNullOrWhitespace()` includes","Fragments":["a"]},{"Key":"includes a","Fragments":["check","`null`"]},{"Key":"for empty.","Fragments":["So"]},{"Key":"empty. So","Fragments":["you","I"]},{"Key":"the `IsNullOrEmpty()`","Fragments":["check."]},{"Key":"`IsNullOrEmpty()` check.","Fragments":["See"]},{"Key":"check. See","Fragments":["here:"]},{"Key":"See here:","Fragments":["http://msdn.microsoft.com/en-us/library/system.string.isnullorwhitespace(v=vs.110).aspx"]},{"Key":" @wiley","Fragments":["Good"]},{"Key":"@wiley Good","Fragments":["call!"]},{"Key":"Good call!","Fragments":["I","Check"]},{"Key":"call! I","Fragments":["submitted"]},{"Key":"I submitted","Fragments":["a","mine,","my","was","a","this"]},{"Key":"The `Regex`","Fragments":["is"]},{"Key":"`Regex` is","Fragments":["now"]},{"Key":"now constructed","Fragments":["with"]},{"Key":"constructed with","Fragments":["`RegexOptions.Compiled`,"]},{"Key":"with `RegexOptions.Compiled`,","Fragments":["which"]},{"Key":"`RegexOptions.Compiled`, which","Fragments":["provides"]},{"Key":"which provides","Fragments":["a"]},{"Key":"provides a","Fragments":["performance","performance","protection"]},{"Key":"performance improvements.","Fragments":["Kudos"]},{"Key":"improvements. Kudos","Fragments":["go"]},{"Key":"Kudos go","Fragments":["to"]},{"Key":"go to","Fragments":["@laney","the"]},{"Key":"to @laney","Fragments":["for"]},{"Key":"@laney for","Fragments":["this"]},{"Key":" Absolutely,","Fragments":["something"]},{"Key":"Absolutely, something","Fragments":["you"]},{"Key":"may want","Fragments":["to","to","to"]},{"Key":"into is","Fragments":["Regex."]},{"Key":"is Regex.","Fragments":["While"]},{"Key":"Regex. While","Fragments":["it"]},{"Key":"accomplish your","Fragments":["goal"]},{"Key":"your goal","Fragments":["but","and"]},{"Key":"goal but","Fragments":["it"]},{"Key":"most compact","Fragments":["ways."]},{"Key":"some examples","Fragments":["of"]},{"Key":"1) Regex.Replace(input,","Fragments":["@\"[^\\s-,%^*@#(]\","]},{"Key":"Regex.Replace(input, @\"[^\\s-,%^*@#(]\",","Fragments":["String.Empty);"]},{"Key":"@\"[^\\s-,%^*@#(]\", String.Empty);","Fragments":["[I"]},{"Key":"String.Empty); [I","Fragments":["used"]},{"Key":"[I used","Fragments":["this"]},{"Key":"simply remove","Fragments":["all"]},{"Key":"the erroneous","Fragments":["characters"]},{"Key":"erroneous characters","Fragments":["and"]},{"Key":"and white-space","Fragments":["from"]},{"Key":"white-space from","Fragments":["the"]},{"Key":"other parsing.","Fragments":["By"]},{"Key":"parsing. By","Fragments":["erroneous"]},{"Key":"By erroneous","Fragments":["I"]},{"Key":"erroneous I","Fragments":["mean,"]},{"Key":"mean, anything","Fragments":["that"]},{"Key":"a \"!,","Fragments":["?,"]},{"Key":"\"!, ?,","Fragments":["or"]},{"Key":"?, or","Fragments":[".\""]},{"Key":"or .\"","Fragments":["because"]},{"Key":".\" because","Fragments":["they"]},{"Key":"are irrelevant","Fragments":["and"]},{"Key":"irrelevant and","Fragments":["complicate"]},{"Key":"and complicate","Fragments":["matters"]},{"Key":"complicate matters","Fragments":["down"]},{"Key":"matters down","Fragments":["the"]},{"Key":"2) Working","Fragments":["directly"]},{"Key":"Working directly","Fragments":["with"]},{"Key":"directly with","Fragments":["the","the"]},{"Key":"silence with","Fragments":["this"]},{"Key":"this simple,","Fragments":["easy","I"]},{"Key":"simple, easy","Fragments":["to"]},{"Key":"read line:","Fragments":["if"]},{"Key":"line: if","Fragments":["(String.IsNullOrWhiteSpace(input))"]},{"Key":"3) Also","Fragments":["to"]},{"Key":"Also to","Fragments":["give"]},{"Key":"you an","Fragments":["example"]},{"Key":"match a","Fragments":["question"]},{"Key":"if (Regex.IsMatch(input,","Fragments":["@\"\\?$\")"]},{"Key":"(Regex.IsMatch(input, @\"\\?$\")","Fragments":["\u0026\u0026"]},{"Key":"@\"\\?$\") \u0026\u0026","Fragments":["!Regex.IsMatch(input,"]},{"Key":"\u0026\u0026 !Regex.IsMatch(input,","Fragments":["@\"^[A-Z]+\\?\"))"]},{"Key":" BobsResponse","Fragments":["="]},{"Key":"BobsResponse =","Fragments":["Query.Inquiry;"]},{"Key":" [What","Fragments":["this"]},{"Key":"[What this","Fragments":["says"]},{"Key":"this says","Fragments":["it"]},{"Key":"it ANY","Fragments":["string"]},{"Key":"ANY string","Fragments":["that"]},{"Key":"string that","Fragments":["ends","says"]},{"Key":"that ends","Fragments":["with"]},{"Key":"mark and","Fragments":["IS"]},{"Key":"and IS","Fragments":["NOT"]},{"Key":"IS NOT","Fragments":["all"]},{"Key":"NOT all","Fragments":["capitals"]},{"Key":"all capitals","Fragments":["sets"]},{"Key":"capitals sets","Fragments":["the"]},{"Key":"sets the","Fragments":["response","value","value"]},{"Key":"these I","Fragments":["hope"]},{"Key":"hope you","Fragments":["can","at","tried","learnt"]},{"Key":"how working","Fragments":["directly"]},{"Key":"working directly","Fragments":["with"]},{"Key":"your life","Fragments":["incredibly"]},{"Key":"life incredibly","Fragments":["easier."]},{"Key":"incredibly easier.","Fragments":["One"]},{"Key":"easier. One","Fragments":["more"]},{"Key":"One more","Fragments":["thing","thing-"]},{"Key":"more thing","Fragments":["that"]},{"Key":"be work","Fragments":["looking"]},{"Key":"work looking","Fragments":["at"]},{"Key":"built-in methods","Fragments":["of"]},{"Key":"methods of","Fragments":["the","completing"]},{"Key":"string object,","Fragments":["such"]},{"Key":"object, such","Fragments":["as"]},{"Key":"as EndsWith(string).","Fragments":["I"]},{"Key":"EndsWith(string). I","Fragments":["haven't"]},{"Key":"haven't tested","Fragments":["this","it","this,"]},{"Key":"tested this","Fragments":["but","through","code"]},{"Key":"but input.EndsWith(\"?\");","Fragments":["may"]},{"Key":"input.EndsWith(\"?\"); may","Fragments":["also"]},{"Key":"also serve","Fragments":["the"]},{"Key":"serve the","Fragments":["same"]},{"Key":"same purpose.","Fragments":["Hopefully"]},{"Key":"purpose. Hopefully","Fragments":["this"]},{"Key":"Hopefully this","Fragments":["helps,"]},{"Key":"this helps,","Fragments":["GL!"]},{"Key":" Edit:","Fragments":["As","oops,","SelectMany","It","Never","Because","Oh,"]},{"Key":"Edit: As","Fragments":["far"]},{"Key":"extra functionality","Fragments":["you"]},{"Key":"functionality you","Fragments":["built"]},{"Key":"you built","Fragments":["into","in"]},{"Key":"built into","Fragments":["it","the"]},{"Key":"to output","Fragments":["lengths"]},{"Key":"output lengths","Fragments":["and"]},{"Key":"lengths and","Fragments":["other","amkes"]},{"Key":"other stats","Fragments":["for"]},{"Key":"stats for","Fragments":["the"]},{"Key":"string, while","Fragments":["it"]},{"Key":"is cool:","Fragments":["YAGNI(You"]},{"Key":"cool: YAGNI(You","Fragments":["ain't"]},{"Key":"YAGNI(You ain't","Fragments":["gonna"]},{"Key":"ain't gonna","Fragments":["need"]},{"Key":"gonna need","Fragments":["it)"]},{"Key":"need it)","Fragments":[":)"]},{"Key":" Interesting,","Fragments":["with","I've"]},{"Key":"Interesting, with","Fragments":["your"]},{"Key":"your IsScreaming()","Fragments":["function,"]},{"Key":"IsScreaming() function,","Fragments":["it"]},{"Key":"true so","Fragments":["long"]},{"Key":"so long","Fragments":["as"]},{"Key":"as there","Fragments":["are","is","was","is","is","are"]},{"Key":"more upper","Fragments":["case"]},{"Key":"than lower","Fragments":["case."]},{"Key":"sentence where","Fragments":["the"]},{"Key":"the uppercase","Fragments":["acronyms"]},{"Key":"uppercase acronyms","Fragments":["letters"]},{"Key":"acronyms letters","Fragments":["outnumbered"]},{"Key":"letters outnumbered","Fragments":["the"]},{"Key":"outnumbered the","Fragments":["number"]},{"Key":"of lower","Fragments":["case"]},{"Key":"case letters","Fragments":["in"]},{"Key":"in normal","Fragments":["words","scenarios."]},{"Key":"normal words","Fragments":["your"]},{"Key":"words your","Fragments":["function"]},{"Key":"true assuming","Fragments":["bob"]},{"Key":"assuming bob","Fragments":["was"]},{"Key":"was yelling,","Fragments":["which"]},{"Key":"yelling, which","Fragments":["would"]},{"Key":"a failed","Fragments":["test."]},{"Key":"is intentional","Fragments":["I"]},{"Key":"intentional I","Fragments":["have"]},{"Key":"no problem","Fragments":["with","with","generating"]},{"Key":"You did","Fragments":["not","not"]},{"Key":"suggestion you","Fragments":["need"]},{"Key":"to decide","Fragments":["what","which","which","if","as"]},{"Key":"decide what","Fragments":["is","to"]},{"Key":"is most","Fragments":["readable.","appropriate,"]},{"Key":"most readable.","Fragments":["I"]},{"Key":"I certainly","Fragments":["think","think"]},{"Key":"certainly think","Fragments":["a","mine"]},{"Key":"loop was","Fragments":["unnecessary"]},{"Key":"was unnecessary","Fragments":["before"]},{"Key":"unnecessary before","Fragments":["(and"]},{"Key":"before (and","Fragments":["less"]},{"Key":"(and less","Fragments":["readable"]},{"Key":"to boot!)","Fragments":["They"]},{"Key":"boot!) They","Fragments":["should"]},{"Key":"They should","Fragments":["mostly"]},{"Key":"should mostly","Fragments":["only"]},{"Key":"mostly only","Fragments":["be"]},{"Key":"for optimisation","Fragments":["which"]},{"Key":"optimisation which","Fragments":["apart"]},{"Key":"which apart","Fragments":["from"]},{"Key":"apart from","Fragments":["Sieve","me"]},{"Key":"from Sieve","Fragments":["and"]},{"Key":"Sieve and","Fragments":["maybe"]},{"Key":"other exercises","Fragments":["does"]},{"Key":"exercises does","Fragments":["not"]},{"Key":"not apply","Fragments":["here.","100%"]},{"Key":"Hmm Primes","Fragments":["should"]},{"Key":"Primes should","Fragments":["be"]},{"Key":"Now can","Fragments":["you"]},{"Key":"using List\u003cbool\u003e","Fragments":["that"]},{"Key":"List\u003cbool\u003e that","Fragments":["is"]},{"Key":"is 8","Fragments":["bits"]},{"Key":"8 bits","Fragments":["per"]},{"Key":"bits per","Fragments":["composite"]},{"Key":"per composite","Fragments":["just"]},{"Key":"composite just","Fragments":["for"]},{"Key":"for 2","Fragments":["values...surely","loops"]},{"Key":"2 values...surely","Fragments":["1"]},{"Key":"values...surely 1","Fragments":["bit"]},{"Key":"1 bit","Fragments":["is"]},{"Key":"bit is","Fragments":["all"]},{"Key":"needed and","Fragments":["that"]},{"Key":"a massive","Fragments":["saving"]},{"Key":"massive saving","Fragments":["of"]},{"Key":"LINQ solution","Fragments":["to","very","but"]},{"Key":"to returning","Fragments":["the"]},{"Key":"Grade method?","Fragments":["I'm"]},{"Key":"method? I'm","Fragments":["not"]},{"Key":"big fan","Fragments":["of","of"]},{"Key":"using in-line","Fragments":["conditionals."]},{"Key":"good explanation","Fragments":["MetalKid!"]},{"Key":"explanation MetalKid!","Fragments":[":)"]},{"Key":"know much","Fragments":["about"]},{"Key":"about generics.","Fragments":["I'll"]},{"Key":"generics. I'll","Fragments":["read"]},{"Key":"I'll read","Fragments":["about"]},{"Key":"read about","Fragments":["them","it","it","it","this"]},{"Key":"and try,","Fragments":["if"]},{"Key":"try, if","Fragments":["it"]},{"Key":"doesn't complicate","Fragments":["too"]},{"Key":"complicate too","Fragments":["much"]},{"Key":"2. And","Fragments":["also"]},{"Key":"And also","Fragments":["@edward:"]},{"Key":"also @edward:","Fragments":["yep!"]},{"Key":"@edward: yep!","Fragments":["My"]},{"Key":"yep! My","Fragments":["bad,"]},{"Key":"My bad,","Fragments":["this","sorry."]},{"Key":"bad, this","Fragments":["is"]},{"Key":"3. 'foreach'","Fragments":["should"]},{"Key":"'foreach' should","Fragments":["protect"]},{"Key":"should protect","Fragments":["against"]},{"Key":"protect against","Fragments":["nulls"]},{"Key":"against nulls","Fragments":["in"]},{"Key":"in input,","Fragments":["as"]},{"Key":"as for","Fragments":["the","A),","Trinary"]},{"Key":"the rest...yeah","Fragments":["you're"]},{"Key":"rest...yeah you're","Fragments":["right."]},{"Key":"right. Onwards","Fragments":["to"]},{"Key":"Onwards to","Fragments":["version"]},{"Key":"to version","Fragments":["2!"]},{"Key":"version 2!","Fragments":[":D"]},{"Key":"EDIT: in","Fragments":["fact","c#"]},{"Key":"fact foreach","Fragments":["doesn't"]},{"Key":"foreach doesn't","Fragments":["protect"]},{"Key":"doesn't protect","Fragments":["again"]},{"Key":"protect again","Fragments":["nulls"]},{"Key":"again nulls","Fragments":["at"]},{"Key":"nulls at","Fragments":["all..."]},{"Key":"5. Good","Fragments":["point!"]},{"Key":"point! I","Fragments":["was"]},{"Key":"was counting","Fragments":["on"]},{"Key":"counting on","Fragments":["a"]},{"Key":"a sanitized","Fragments":["input,"]},{"Key":"sanitized input,","Fragments":["but"]},{"Key":"a disaster","Fragments":["waiting"]},{"Key":"disaster waiting","Fragments":["to"]},{"Key":"waiting to","Fragments":["happen"]},{"Key":"The assignment","Fragments":["wanted"]},{"Key":"assignment wanted","Fragments":["the"]},{"Key":"the container","Fragments":["class"]},{"Key":"container class","Fragments":["to"]},{"Key":"be Year","Fragments":["and"]},{"Key":"not LeapYear","Fragments":["(line"]},{"Key":"LeapYear (line","Fragments":["3)."]},{"Key":"(line 3).","Fragments":["Why"]},{"Key":"3). Why","Fragments":["chose"]},{"Key":"Why chose","Fragments":["to"]},{"Key":"use `short`?","Fragments":["The"]},{"Key":"`short`? The","Fragments":["default"]},{"Key":"The default","Fragments":["integer","case"]},{"Key":"default integer","Fragments":["type"]},{"Key":"integer type","Fragments":["is"]},{"Key":"is `int`;","Fragments":["using"]},{"Key":"`int`; using","Fragments":["`short`"]},{"Key":"using `short`","Fragments":["will"]},{"Key":"`short` will","Fragments":["likely"]},{"Key":"likely cause","Fragments":["implicit/explicit"]},{"Key":"cause implicit/explicit","Fragments":["conversion"]},{"Key":"implicit/explicit conversion","Fragments":["problems"]},{"Key":"conversion problems","Fragments":["down"]},{"Key":"problems down","Fragments":["the"]},{"Key":" Comments","Fragments":["and","(especially","are","would","are"]},{"Key":"Comments and","Fragments":["a"]},{"Key":"few parentheses","Fragments":["will","(line"]},{"Key":"parentheses will","Fragments":["improve"]},{"Key":"will improve","Fragments":["the"]},{"Key":"and maintainability","Fragments":["of"]},{"Key":"maintainability of","Fragments":["line"]},{"Key":"line 7.","Fragments":["Kudos"]},{"Key":"7. Kudos","Fragments":["for"]},{"Key":"Kudos for","Fragments":["directly"]},{"Key":"for directly","Fragments":["returning"]},{"Key":"directly returning","Fragments":["the"]},{"Key":"the Boolean","Fragments":["result","value","value"]},{"Key":"Boolean result","Fragments":["(instead"]},{"Key":"result (instead","Fragments":["of"]},{"Key":"(instead of","Fragments":["common","a","using"]},{"Key":"of common","Fragments":["and"]},{"Key":"common and","Fragments":["clunky","you"]},{"Key":"and clunky","Fragments":["`if"]},{"Key":"clunky `if","Fragments":["expression"]},{"Key":"`if expression","Fragments":["return"]},{"Key":"expression return","Fragments":["true;"]},{"Key":"return true;","Fragments":["else","}"]},{"Key":"true; else","Fragments":["return"]},{"Key":"is succinct","Fragments":["and","(clear"]},{"Key":"succinct and","Fragments":["to"]},{"Key":"no further","Fragments":["coding"]},{"Key":"further coding","Fragments":["is"]},{"Key":"coding is","Fragments":["needed."]},{"Key":"could suggest","Fragments":["a"]},{"Key":"suggest a","Fragments":["few","few"]},{"Key":"few alternate","Fragments":["ways"]},{"Key":"alternate ways","Fragments":["to"]},{"Key":"code this,","Fragments":["but"]},{"Key":"them would","Fragments":["be"]},{"Key":"be objectively","Fragments":["\"better\""]},{"Key":"objectively \"better\"","Fragments":["that"]},{"Key":"\"better\" that","Fragments":["what"]},{"Key":"that what","Fragments":["you","I"]},{"Key":"you have.","Fragments":["You"]},{"Key":"have. You","Fragments":["could"]},{"Key":"a named","Fragments":["function","function?","function,"]},{"Key":"named function","Fragments":["to"]},{"Key":"already readable.","Fragments":["You"]},{"Key":"readable. You","Fragments":["could"]},{"Key":"a result","Fragments":["value"]},{"Key":"result value","Fragments":["to"]},{"Key":"statements (some","Fragments":["people"]},{"Key":"(some people","Fragments":["regard"]},{"Key":"people regard","Fragments":["that"]},{"Key":"regard that","Fragments":["as"]},{"Key":"as bad)","Fragments":["but"]},{"Key":"bad) but","Fragments":["in"]},{"Key":"actually make","Fragments":["it","the"]},{"Key":"less readable.","Fragments":["My","But",":)"]},{"Key":"other versions","Fragments":["to"]},{"Key":"versions to","Fragments":["see"]},{"Key":"see other","Fragments":["ways","people"]},{"Key":"ways it","Fragments":["_could_"]},{"Key":"it _could_","Fragments":["be"]},{"Key":"_could_ be","Fragments":["done."]},{"Key":"be done.","Fragments":["(I","Wouldnt"]},{"Key":"done. (I","Fragments":["found"]},{"Key":"(I found","Fragments":["the"]},{"Key":"found the","Fragments":["sample","Convert.ToInt64","[algorithm","same"]},{"Key":"conversation in","Fragments":["Ruby"]},{"Key":"in Ruby","Fragments":["and"]},{"Key":"Ruby and","Fragments":["stole"]},{"Key":"and stole","Fragments":["the"]},{"Key":"stole the","Fragments":["lambda","idea"]},{"Key":"function idea,","Fragments":["which"]},{"Key":"idea, which","Fragments":["I"]},{"Key":"really like,","Fragments":["but"]},{"Key":"like, but","Fragments":["again"]},{"Key":"but again","Fragments":["isn't"]},{"Key":"again isn't","Fragments":["really"]},{"Key":"really better","Fragments":["in"]},{"Key":"any universal","Fragments":["sense.)"]},{"Key":"May wish","Fragments":["to"]},{"Key":"wish to","Fragments":["review"]},{"Key":"to review","Fragments":["the"]},{"Key":"review the","Fragments":["basics"]},{"Key":"of Boolean","Fragments":["algebra:"]},{"Key":"Boolean algebra:","Fragments":["(A"]},{"Key":"algebra: (A","Fragments":["\u0026"]},{"Key":"(A \u0026","Fragments":["!B)","C)"]},{"Key":"\u0026 !B)","Fragments":["+"]},{"Key":"!B) +","Fragments":["(A"]},{"Key":"+ (A","Fragments":["\u0026"]},{"Key":"\u0026 C)","Fragments":["can"]},{"Key":"C) can","Fragments":["be"]},{"Key":"be factored","Fragments":["to"]},{"Key":"factored to","Fragments":["A"]},{"Key":"to A","Fragments":["\u0026"]},{"Key":"A \u0026","Fragments":["(!B"]},{"Key":"\u0026 (!B","Fragments":["+"]},{"Key":"(!B +","Fragments":["C)"]},{"Key":"Your argument","Fragments":["checking"]},{"Key":"is commendable,","Fragments":["but"]},{"Key":"commendable, but","Fragments":["the"]},{"Key":"calendar begins","Fragments":["in"]},{"Key":"begins in","Fragments":["the"]},{"Key":"year 1582AD,","Fragments":["not"]},{"Key":"1582AD, not","Fragments":["0."]},{"Key":"Comments (especially","Fragments":["for"]},{"Key":"(especially for","Fragments":["line"]},{"Key":"line 7)","Fragments":["and"]},{"Key":"7) and","Fragments":["a"]},{"Key":"parentheses (line","Fragments":["7"]},{"Key":"(line 7","Fragments":["again)"]},{"Key":"7 again)","Fragments":["would"]},{"Key":"again) would","Fragments":["go"]},{"Key":"go a","Fragments":["long","long"]},{"Key":"long way","Fragments":["to","to","in"]},{"Key":"to improving","Fragments":["maintainability"]},{"Key":"improving maintainability","Fragments":["\u0026"]},{"Key":"maintainability \u0026","Fragments":["readability."]},{"Key":"\u0026 readability.","Fragments":["Returning"]},{"Key":"readability. Returning","Fragments":["the"]},{"Key":"Boolean value","Fragments":["of","from","or"]},{"Key":"\"if\" statement","Fragments":["directly","itself","evaluates"]},{"Key":"statement directly","Fragments":["would","into"]},{"Key":"directly would","Fragments":["improve"]},{"Key":"by removing","Fragments":["the","them"]},{"Key":"statement itself","Fragments":["(which","is"]},{"Key":"itself (which","Fragments":["is"]},{"Key":"is way","Fragments":["to","too"]},{"Key":"to unwieldy","Fragments":["for"]},{"Key":"unwieldy for","Fragments":["the"]},{"Key":"exercise. For","Fragments":["a"]},{"Key":"a general","Fragments":["semantic","point,","shape,","principle","shape,","shape","rule","rule","string"]},{"Key":"processing engine,","Fragments":["it"]},{"Key":"engine, it","Fragments":["may"]},{"Key":"be great,","Fragments":["but"]},{"Key":"first response","Fragments":["is"]},{"Key":"response is","Fragments":["\"I","most","the"]},{"Key":"is \"I","Fragments":["don't"]},{"Key":"\"I don't","Fragments":["want"]},{"Key":"spend the","Fragments":["time"]},{"Key":"is doing\".","Fragments":["There"]},{"Key":"doing\". There","Fragments":["are"]},{"Key":"are much","Fragments":["simpler"]},{"Key":" Version","Fragments":["2","|"]},{"Key":"2 checks","Fragments":["for"]},{"Key":"for nulls,","Fragments":["spaces"]},{"Key":"nulls, spaces","Fragments":["and"]},{"Key":"other common","Fragments":["errors"]},{"Key":"common errors","Fragments":["on"]},{"Key":"errors on","Fragments":["the"]},{"Key":"be duplicate","Fragments":["letters,"]},{"Key":"duplicate letters,","Fragments":["it"]},{"Key":"letters, it","Fragments":["keeps"]},{"Key":"it keeps","Fragments":["the","the"]},{"Key":"keeps the","Fragments":["first","user","code"]},{"Key":"it simple,","Fragments":["but"]},{"Key":"simple, but","Fragments":["readable","I"]},{"Key":"but readable","Fragments":["and"]},{"Key":"expressive enough","Fragments":["that"]},{"Key":"comments weren't","Fragments":["needed"]},{"Key":"weren't needed","Fragments":["to"]},{"Key":"to let","Fragments":["the","me","Boolean","you","the"]},{"Key":"reader know","Fragments":["what's","what"]},{"Key":"know what's","Fragments":["going","easier","going"]},{"Key":"IsLeap logic","Fragments":["looks"]},{"Key":"looks fine.","Fragments":["What"]},{"Key":"fine. What","Fragments":["was"]},{"Key":"What was","Fragments":["the","your"]},{"Key":"for making","Fragments":["a","instances"]},{"Key":"a Leap","Fragments":["class?","before"]},{"Key":"Leap class?","Fragments":["Presumably"]},{"Key":"class? Presumably","Fragments":["you"]},{"Key":"Presumably you","Fragments":["had"]},{"Key":"an experienced","Fragments":["C#","audience"]},{"Key":"experienced C#","Fragments":["developer,","developer"]},{"Key":"C# developer,","Fragments":["but"]},{"Key":"developer, but","Fragments":["I"]},{"Key":"remove unneeded","Fragments":["'using'"]},{"Key":"unneeded 'using'","Fragments":["statements,"]},{"Key":"'using' statements,","Fragments":["and"]},{"Key":"the Leap","Fragments":["constructor"]},{"Key":"Leap constructor","Fragments":["too."]},{"Key":"Hope this","Fragments":["is"]},{"Key":"works well","Fragments":["in"]},{"Key":"well in","Fragments":["my"]},{"Key":"my testing.","Fragments":["I"]},{"Key":"testing. I","Fragments":["think"]},{"Key":"read though.","Fragments":["I"]},{"Key":"I count","Fragments":["4"]},{"Key":"count 4","Fragments":["return"]},{"Key":"4 return","Fragments":["statements"]},{"Key":"IsLeap function.","Fragments":["I"]},{"Key":"function. I","Fragments":["think"]},{"Key":"read if","Fragments":["you","you're","the"]},{"Key":"you evaluated","Fragments":["the"]},{"Key":"evaluated the","Fragments":["two"]},{"Key":"that evaluate","Fragments":["to"]},{"Key":"true only.","Fragments":["That"]},{"Key":"only. That","Fragments":["is,"]},{"Key":"That is,","Fragments":["((is","de"]},{"Key":"is, ((is","Fragments":["the"]},{"Key":"((is the","Fragments":["year"]},{"Key":"not 100),","Fragments":["or"]},{"Key":"100), or","Fragments":["(is"]},{"Key":"or (is","Fragments":["the"]},{"Key":"by both","Fragments":["100","Grade","100"]},{"Key":"both 100","Fragments":["and","and"]},{"Key":"100 and","Fragments":["400))","400.","400."]},{"Key":"\u003ccode\u003ereturn ((year","Fragments":["%"]},{"Key":"entire function","Fragments":["can"]},{"Key":"in only","Fragments":["one"]},{"Key":"you wrapped","Fragments":["the"]},{"Key":"modulus operation","Fragments":["into","is"]},{"Key":"function, that","Fragments":["seems"]},{"Key":"unnecessary code","Fragments":["to","but"]},{"Key":"is great!","Fragments":["The"]},{"Key":"great! The","Fragments":["smallest"]},{"Key":"The smallest","Fragments":["possible"]},{"Key":"smallest possible","Fragments":["piece"]},{"Key":"possible piece","Fragments":["of"]},{"Key":"read, decipher","Fragments":["and"]},{"Key":"decipher and","Fragments":["maintain."]},{"Key":"maintain. No","Fragments":["extraneous"]},{"Key":"No extraneous","Fragments":["return"]},{"Key":"extraneous return","Fragments":["statements,"]},{"Key":"statements, no","Fragments":["extra"]},{"Key":"no extra","Fragments":["logic,"]},{"Key":"extra logic,","Fragments":["no"]},{"Key":"logic, no","Fragments":["return"]},{"Key":"no return","Fragments":["variables"]},{"Key":"return variables","Fragments":["to"]},{"Key":"be fiddled","Fragments":["with."]},{"Key":"fiddled with.","Fragments":["Very"]},{"Key":"with. Very","Fragments":["nice"]},{"Key":"Very nice","Fragments":["job!","trick.","Linq"]},{"Key":"Lines 7","Fragments":["\u0026"]},{"Key":"7 \u0026","Fragments":["8"]},{"Key":"\u0026 8","Fragments":["can"]},{"Key":"8 can","Fragments":["be"]},{"Key":"be combined","Fragments":["while"]},{"Key":"combined while","Fragments":["improving"]},{"Key":"while improving","Fragments":["readability:"]},{"Key":" `bool","Fragments":["vIsLeap"]},{"Key":"`bool vIsLeap","Fragments":["="]},{"Key":"vIsLeap =","Fragments":["false;`"]},{"Key":" Recall","Fragments":["that"]},{"Key":"Recall that","Fragments":["every"]},{"Key":"that every","Fragments":["integer","orbit"]},{"Key":"every integer","Fragments":["evenly"]},{"Key":"integer evenly","Fragments":["divisible"]},{"Key":"400 is,","Fragments":["by"]},{"Key":"is, by","Fragments":["definition,"]},{"Key":"by definition,","Fragments":["evenly"]},{"Key":"definition, evenly","Fragments":["divisible"]},{"Key":"by 100.","Fragments":["So"]},{"Key":"100. So","Fragments":["the"]},{"Key":"the latter","Fragments":["half","(as","is"]},{"Key":"latter half","Fragments":["of"]},{"Key":"10 can","Fragments":["be"]},{"Key":"be simplified,","Fragments":["yielding:"]},{"Key":"`if ((aYear","Fragments":["%"]},{"Key":"((aYear %","Fragments":["4"]},{"Key":"\u0026\u0026 aYear","Fragments":["%"]},{"Key":"aYear %","Fragments":["100"]},{"Key":"|| (aYear","Fragments":["%"]},{"Key":"(aYear %","Fragments":["400"]},{"Key":"Consider returning","Fragments":["the"]},{"Key":"value from","Fragments":["the","-6","0","being"]},{"Key":"directly, eliminating","Fragments":["the"]},{"Key":"eliminating the","Fragments":["pointless"]},{"Key":"the pointless","Fragments":["`if`"]},{"Key":"pointless `if`","Fragments":["statement"]},{"Key":" Sometimes","Fragments":["extracting"]},{"Key":"Sometimes extracting","Fragments":["a"]},{"Key":"extracting a","Fragments":["repeating"]},{"Key":"a repeating","Fragments":["section"]},{"Key":"repeating section","Fragments":["of"]},{"Key":"section of","Fragments":["code","the","the","code"]},{"Key":"code into","Fragments":["a","easier","my"]},{"Key":"function improves","Fragments":["readability."]},{"Key":"readability. This","Fragments":["is"]},{"Key":"not one","Fragments":["of","likes"]},{"Key":" Yep!","Fragments":["Thanks."]},{"Key":"Yep! Thanks.","Fragments":["I'm"]},{"Key":"Thanks. I'm","Fragments":["gonna","trying"]},{"Key":"I'm gonna","Fragments":["change","close","close"]},{"Key":"gonna change","Fragments":["that"]},{"Key":"next re-factor.","Fragments":["Going"]},{"Key":"re-factor. Going","Fragments":["to"]},{"Key":"very nice","Fragments":["job!","approach"]},{"Key":"nice job!","Fragments":["First"]},{"Key":"job! First","Fragments":["time"]},{"Key":"First time","Fragments":["I"]},{"Key":"across error","Fragments":["checking"]},{"Key":"error checking","Fragments":["in"]},{"Key":"checking in","Fragments":["this"]},{"Key":"this exercise!","Fragments":["Probably"]},{"Key":"exercise! Probably","Fragments":["not"]},{"Key":"this example","Fragments":["but","disappointing.","you","to","is"]},{"Key":"example but","Fragments":["something"]},{"Key":"but something","Fragments":["you'd","like"]},{"Key":"something you'd","Fragments":["definitely"]},{"Key":"you'd definitely","Fragments":["want"]},{"Key":"definitely want","Fragments":["to"]},{"Key":"consider in","Fragments":["production"]},{"Key":"to reinforce","Fragments":["to"]},{"Key":"reinforce to","Fragments":["the"]},{"Key":"reader what","Fragments":["the"]},{"Key":"be doing.","Fragments":["Well"]},{"Key":"doing. Well","Fragments":["done!"]},{"Key":"return Bob.heardYelling(message)","Fragments":["?"]},{"Key":"Bob.heardYelling(message) ?","Fragments":["\"Whoa,"]},{"Key":"? \"Whoa,","Fragments":["chill"]},{"Key":" :","Fragments":["Bob.heardNothing(message)","Bob.heardAQuestion(message)","\"Whatever.\";","this","this","this(new"]},{"Key":": Bob.heardNothing(message)","Fragments":["?"]},{"Key":"Bob.heardNothing(message) ?","Fragments":["\"Fine."]},{"Key":": Bob.heardAQuestion(message)","Fragments":["?"]},{"Key":"Bob.heardAQuestion(message) ?","Fragments":["\"Sure.\""]},{"Key":"who do","Fragments":["this"]},{"Key":"should die.","Fragments":["That's"]},{"Key":"die. That's","Fragments":["basically"]},{"Key":"That's basically","Fragments":["unreadable,"]},{"Key":"basically unreadable,","Fragments":["just"]},{"Key":"unreadable, just","Fragments":["use"]},{"Key":"use nested","Fragments":["if","if-statements"]},{"Key":"statements if","Fragments":["you"]},{"Key":"need conditionals","Fragments":["in"]},{"Key":"readability, makes","Fragments":["the"]},{"Key":"comment lines","Fragments":["in"]},{"Key":"the Hey()","Fragments":["method","method","method"]},{"Key":"Hey() method","Fragments":["unnecessary.","with","is"]},{"Key":"method unnecessary.","Fragments":["I"]},{"Key":"unnecessary. I","Fragments":["didn't"]},{"Key":"about constants","Fragments":["for"]},{"Key":"for performance,","Fragments":["I"]},{"Key":"performance, I","Fragments":["thought"]},{"Key":"thought literals","Fragments":["are"]},{"Key":"as performant","Fragments":["as"]},{"Key":"performant as","Fragments":["constants,"]},{"Key":"as constants,","Fragments":["because"]},{"Key":"constants, because","Fragments":["when"]},{"Key":"compiler builds","Fragments":["the"]},{"Key":"builds the","Fragments":["IL"]},{"Key":"the IL","Fragments":["it"]},{"Key":"IL it","Fragments":["just"]},{"Key":"just replaces","Fragments":["constants"]},{"Key":"replaces constants","Fragments":["with"]},{"Key":"constants with","Fragments":["their"]},{"Key":"their literal","Fragments":["value."]},{"Key":"You're right.","Fragments":["I","I"]},{"Key":"realize it","Fragments":["was","worked"]},{"Key":"was optimized.","Fragments":["Good"]},{"Key":"optimized. Good","Fragments":["read"]},{"Key":"Good read","Fragments":["about"]},{"Key":"it here:","Fragments":["http://stackoverflow.com/questions/4286614/c-sharp-do-string-literals-get-optimised-by-the-compiler"]},{"Key":"There's other","Fragments":[".NET"]},{"Key":"other .NET","Fragments":["functions"]},{"Key":".NET functions","Fragments":["that"]},{"Key":"could utilize","Fragments":["for"]},{"Key":"utilize for","Fragments":["the"]},{"Key":"the \"Sure\"","Fragments":["and"]},{"Key":"\"Sure\" and","Fragments":["\"Chill"]},{"Key":"and \"Chill","Fragments":["Out\""]},{"Key":"\"Chill Out\"","Fragments":["case"]},{"Key":"Out\" case","Fragments":["that"]},{"Key":"require a","Fragments":["lot","mental","passed"]},{"Key":"of logic.","Fragments":["You"]},{"Key":"logic. You","Fragments":["can"]},{"Key":"Match function","Fragments":["is"]},{"Key":"too long","Fragments":["-","to","although"]},{"Key":"long -","Fragments":["break"]},{"Key":"- break","Fragments":["it"]},{"Key":"into different","Fragments":["operations."]},{"Key":" REALLY","Fragments":["nitpicking:"]},{"Key":"that while","Fragments":["simple"]},{"Key":"while simple","Fragments":["variable"]},{"Key":"simple variable","Fragments":["names"]},{"Key":"names (like","Fragments":["'i')"]},{"Key":"(like 'i')","Fragments":["for"]},{"Key":"'i') for","Fragments":["loop"]},{"Key":"loop indexes","Fragments":["are","which"]},{"Key":"indexes are","Fragments":["great,"]},{"Key":"are great,","Fragments":["it"]},{"Key":"great, it","Fragments":["can"]},{"Key":"can even","Fragments":["be","save"]},{"Key":"be nicer","Fragments":["to"]},{"Key":"use 'ii'","Fragments":["(or"]},{"Key":"'ii' (or","Fragments":["'jj',"]},{"Key":"(or 'jj',","Fragments":["'kk',"]},{"Key":"'jj', 'kk',","Fragments":["etc.)."]},{"Key":"'kk', etc.).","Fragments":["When"]},{"Key":"etc.). When","Fragments":["you"]},{"Key":"you double","Fragments":["the"]},{"Key":"double the","Fragments":["letter","space.","work"]},{"Key":"letter you","Fragments":["still","will"]},{"Key":"small name","Fragments":["to"]},{"Key":"to type,","Fragments":["but"]},{"Key":"type, but","Fragments":["you","they"]},{"Key":"the uses","Fragments":["of"]},{"Key":"particular variable","Fragments":["in"]},{"Key":"variable in","Fragments":["a","the","your","the","the","Date()?"]},{"Key":"complicated loop","Fragments":["much"]},{"Key":"loop much","Fragments":["easier."]},{"Key":"much easier.","Fragments":["This"]},{"Key":"easier. This","Fragments":["is"]},{"Key":"is particularly","Fragments":["important"]},{"Key":"particularly important","Fragments":["if"]},{"Key":"important if","Fragments":["your"]},{"Key":"your editor","Fragments":["doesn't"]},{"Key":"editor doesn't","Fragments":["do"]},{"Key":"do whole","Fragments":["word"]},{"Key":"word matches","Fragments":["easily."]},{"Key":" Incorporated","Fragments":["RussellKent's"]},{"Key":"Incorporated RussellKent's","Fragments":["comments"]},{"Key":"RussellKent's comments","Fragments":["to"]},{"Key":"correct year,","Fragments":["and"]},{"Key":"year, and","Fragments":["simplify"]},{"Key":"and simplify","Fragments":["the"]},{"Key":"the year.","Fragments":["Thanks","Thanks"]},{"Key":"year. Thanks","Fragments":["Russell!","so"]},{"Key":"feedback RussellKent.","Fragments":["I"]},{"Key":"RussellKent. I","Fragments":["should"]},{"Key":"thought through","Fragments":["this"]},{"Key":"this some","Fragments":["more.","time."]},{"Key":"some more.","Fragments":["I"]},{"Key":"have incorporated","Fragments":["both"]},{"Key":"incorporated both","Fragments":["of"]},{"Key":"Ah, riiiiight,","Fragments":["that"]},{"Key":"riiiiight, that","Fragments":["makes"]},{"Key":"sense. I'll","Fragments":["do"]},{"Key":"that once","Fragments":["I","at"]},{"Key":"more time","Fragments":["to.","reviewing","by","will","reading"]},{"Key":"time to.","Fragments":["Thanks!"]},{"Key":"Good call,","Fragments":["thanks."]},{"Key":"the format:","Fragments":["yup,"]},{"Key":"format: yup,","Fragments":["makes"]},{"Key":"yup, makes","Fragments":["sense:"]},{"Key":"makes sense:","Fragments":["the"]},{"Key":"sense: the","Fragments":["IDE"]},{"Key":"IDE that","Fragments":["I","will","supports"]},{"Key":"use just","Fragments":["does","`.ToLowerInvariant()`","\"bool"]},{"Key":"just does","Fragments":["that"]},{"Key":"does that","Fragments":["for","anyway.","anyway?"]},{"Key":"While yes,","Fragments":["I"]},{"Key":"yes, I","Fragments":["agree"]},{"Key":"the \"extra","Fragments":["boolean"]},{"Key":"\"extra boolean","Fragments":["math\""]},{"Key":"boolean math\"","Fragments":["statement,"]},{"Key":"math\" statement,","Fragments":["I"]},{"Key":"statement, I","Fragments":["feel","successfully"]},{"Key":"feel (personally)","Fragments":["like"]},{"Key":"(personally) like","Fragments":["it's"]},{"Key":"like it's","Fragments":["easier","purely","also"]},{"Key":"understand in","Fragments":["terms"]},{"Key":"logic using","Fragments":["my"]},{"Key":"version. Regarding","Fragments":["the"]},{"Key":"original way","Fragments":["it's"]},{"Key":"it's written","Fragments":["in","here"]},{"Key":"the assignment,","Fragments":["I"]},{"Key":"assignment, I","Fragments":["feel"]},{"Key":"original is","Fragments":["easier"]},{"Key":"understand relative","Fragments":["to"]},{"Key":"relative to","Fragments":["that."]},{"Key":"opinion, yours","Fragments":["differs"]},{"Key":"yours differs","Fragments":["(as"]},{"Key":"differs (as","Fragments":["you"]},{"Key":"A couple","Fragments":["suggestions:","of","of","of","of","of","of"]},{"Key":"1) You","Fragments":["don't","expose"]},{"Key":"if-return statements.","Fragments":["Any","Anything","Anything"]},{"Key":"statements. Any","Fragments":["code"]},{"Key":"Any code","Fragments":["that"]},{"Key":"if condition","Fragments":["evaluates","evaluates","evaluates","seems","is"]},{"Key":"2) check","Fragments":["out"]},{"Key":"string EndsWith","Fragments":["method,"]},{"Key":"EndsWith method,","Fragments":["it"]},{"Key":"method, it","Fragments":["helps","should"]},{"Key":"helps out","Fragments":["with"]},{"Key":"like \"does","Fragments":["this"]},{"Key":"\"does this","Fragments":["input"]},{"Key":"this input","Fragments":["end"]},{"Key":"input end","Fragments":["with"]},{"Key":"3) There","Fragments":["is"]},{"Key":"some funky","Fragments":["stuff"]},{"Key":"funky stuff","Fragments":["going"]},{"Key":"stuff going","Fragments":["on"]},{"Key":"in IsAllUpper","Fragments":["and"]},{"Key":"IsAllUpper and","Fragments":["IsAllNumber."]},{"Key":"and IsAllNumber.","Fragments":["I"]},{"Key":"IsAllNumber. I","Fragments":["think"]},{"Key":"have some","Fragments":["old","letters"]},{"Key":"some old","Fragments":["code"]},{"Key":"old code","Fragments":["in","and","ran","ran"]},{"Key":"there that","Fragments":["you"]},{"Key":"you forgot","Fragments":["to","to","to","to"]},{"Key":"to delete","Fragments":["upon"]},{"Key":"delete upon","Fragments":["revision."]},{"Key":"upon revision.","Fragments":["For"]},{"Key":"revision. For","Fragments":["instance,"]},{"Key":"instance, \"Char.IsLetter(input[i])","Fragments":["\u0026\u0026"]},{"Key":"\"Char.IsLetter(input[i]) \u0026\u0026","Fragments":["!Char.IsNumber(input[i])\""]},{"Key":"\u0026\u0026 !Char.IsNumber(input[i])\"","Fragments":["Why"]},{"Key":"!Char.IsNumber(input[i])\" Why","Fragments":["are"]},{"Key":"you validating","Fragments":["that"]},{"Key":"validating that","Fragments":["it's"]},{"Key":"a number?","Fragments":["You"]},{"Key":"number? You","Fragments":["have"]},{"Key":"already determined","Fragments":["it's"]},{"Key":"determined it's","Fragments":["a"]},{"Key":"final version.","Fragments":["Removed"]},{"Key":"version. Removed","Fragments":["the"]},{"Key":"superfluous IsNullOrEmpty","Fragments":["check"]},{"Key":"IsNullOrEmpty check","Fragments":["since","as"]},{"Key":"check since","Fragments":["NullOrWhitespace"]},{"Key":"since NullOrWhitespace","Fragments":["covers"]},{"Key":"NullOrWhitespace covers","Fragments":["that."]},{"Key":"tried what","Fragments":["you"]},{"Key":"suggested (changed","Fragments":["to"]},{"Key":"(changed to","Fragments":["```value"]},{"Key":"to ```value","Fragments":["\u003e"]},{"Key":"```value \u003e","Fragments":["conversion.Key```)"]},{"Key":"\u003e conversion.Key```)","Fragments":["but"]},{"Key":"conversion.Key```) but","Fragments":["it"]},{"Key":"it breaks","Fragments":["a","out","the"]},{"Key":"breaks a","Fragments":["bunch"]},{"Key":"of tests.","Fragments":["Am"]},{"Key":"tests. Am","Fragments":["I"]},{"Key":"I missing","Fragments":["something?"]},{"Key":" First,","Fragments":["you","get","NucleotideCounts"]},{"Key":"First, you","Fragments":["don't"]},{"Key":"in if-return","Fragments":["statements."]},{"Key":"statements. Anything","Fragments":["that","that"]},{"Key":"false. Removing","Fragments":["the"]},{"Key":"clause will","Fragments":["clean"]},{"Key":"will clean","Fragments":["up"]},{"Key":"little and","Fragments":["make"]},{"Key":"Next, as","Fragments":["a"]},{"Key":"a friendly","Fragments":["suggestion,","suggestion,"]},{"Key":"friendly suggestion,","Fragments":["check","you"]},{"Key":"suggestion, check","Fragments":["out"]},{"Key":"out Linq.","Fragments":["It's"]},{"Key":"Linq. It's","Fragments":["great"]},{"Key":"It's great","Fragments":["for"]},{"Key":"great for","Fragments":["things","unit","the"]},{"Key":"your helper","Fragments":["methods"]},{"Key":"helper methods","Fragments":["are","for","available","for","to"]},{"Key":"are doing.","Fragments":["For","Right"]},{"Key":"doing. For","Fragments":["instance,"]},{"Key":"instance, you","Fragments":["can"]},{"Key":"replace this","Fragments":["line:"]},{"Key":"if (StrContainsLowercase(str))","Fragments":["{"]},{"Key":"this line","Fragments":["(I'm","(\u003ccode\u003eint"]},{"Key":"line (I'm","Fragments":["writing"]},{"Key":"(I'm writing","Fragments":["this"]},{"Key":"writing this","Fragments":["off","at","program"]},{"Key":"this off","Fragments":["the","with"]},{"Key":"the cuff,","Fragments":["but"]},{"Key":"cuff, but","Fragments":["it"]},{"Key":"if (str.Any(char.IsLower))","Fragments":["{"]},{"Key":"This works","Fragments":["because","relatively","great"]},{"Key":"works because","Fragments":["strings"]},{"Key":"because strings","Fragments":["can"]},{"Key":"arrays in","Fragments":["C#."]},{"Key":"C#. Visual","Fragments":["Studio"]},{"Key":"won't auto","Fragments":["suggest"]},{"Key":"auto suggest","Fragments":["the"]},{"Key":"suggest the","Fragments":["Linq"]},{"Key":"Linq methods","Fragments":["as","(.Where()"]},{"Key":"you type,","Fragments":["but"]},{"Key":"1. Oh","Fragments":["yeah,"]},{"Key":"Oh yeah,","Fragments":["good","for"]},{"Key":"yeah, good","Fragments":["call."]},{"Key":"good call.","Fragments":["I'll","It"]},{"Key":"call. I'll","Fragments":["have"]},{"Key":"2. ```ToDecimal```","Fragments":["seems"]},{"Key":"```ToDecimal``` seems","Fragments":["weird"]},{"Key":"seems weird","Fragments":["in"]},{"Key":"weird in","Fragments":["C#"]},{"Key":"C# because","Fragments":["it"]},{"Key":"a ```decimal```","Fragments":["type"]},{"Key":"```decimal``` type","Fragments":["but"]},{"Key":"type but","Fragments":["it's"]},{"Key":"it's really","Fragments":["a"]},{"Key":"a base-10","Fragments":["number"]},{"Key":"base-10 number","Fragments":["since"]},{"Key":"number since","Fragments":["you're"]},{"Key":"since you're","Fragments":["converting","already","going"]},{"Key":"you're converting","Fragments":["from"]},{"Key":"converting from","Fragments":["base-2"]},{"Key":"from base-2","Fragments":["to"]},{"Key":"base-2 to","Fragments":["base-10"]},{"Key":"to base-10","Fragments":["which"]},{"Key":"base-10 which","Fragments":["is"]},{"Key":"also called","Fragments":["a"]},{"Key":"called a","Fragments":["decimal.","new","lot"]},{"Key":"a decimal.","Fragments":["In"]},{"Key":"decimal. In","Fragments":["other"]},{"Key":"In other","Fragments":["languages","words,"]},{"Key":"other languages","Fragments":["it","well"]},{"Key":"languages it","Fragments":["doesn't"]},{"Key":"seem as","Fragments":["weird.","readable."]},{"Key":"There's already","Fragments":["a"]},{"Key":"18 so","Fragments":["I"]},{"Key":"to shift","Fragments":["some"]},{"Key":"shift some","Fragments":["of"]},{"Key":"the mental","Fragments":["load"]},{"Key":"mental load","Fragments":["to"]},{"Key":"load to","Fragments":["another"]},{"Key":"to another","Fragments":["method.","using","number."]},{"Key":"method. If","Fragments":["C#","we","someone"]},{"Key":"If C#","Fragments":["allowed"]},{"Key":"C# allowed","Fragments":["something"]},{"Key":"allowed something","Fragments":["more"]},{"Key":"expressive like","Fragments":["```2**(value.Length"]},{"Key":"like ```2**(value.Length","Fragments":["-"]},{"Key":"```2**(value.Length -","Fragments":["i"]},{"Key":"- i","Fragments":["-","-","didn't","a"]},{"Key":"i -","Fragments":["1)```","1);"]},{"Key":"- 1)```","Fragments":["I"]},{"Key":"1)``` I","Fragments":["could"]},{"Key":"maybe be","Fragments":["OK"]},{"Key":"be OK","Fragments":["with"]},{"Key":"OK with","Fragments":["leaving","casting"]},{"Key":"with leaving","Fragments":["it"]},{"Key":"leaving it","Fragments":["on"]},{"Key":"dislike \"magic","Fragments":["numbers\","]},{"Key":"\"magic numbers\",","Fragments":["the"]},{"Key":"numbers\", the","Fragments":["values"]},{"Key":"only applicable","Fragments":["to"]},{"Key":"and unlikely","Fragments":["to"]},{"Key":"to change.","Fragments":["this"]},{"Key":"change. this","Fragments":["made"]},{"Key":"made them","Fragments":["candidates"]},{"Key":"them candidates","Fragments":["to"]},{"Key":"candidates to","Fragments":["be"]},{"Key":"the function,","Fragments":["so"]},{"Key":"function, so","Fragments":["I"]},{"Key":"values embedded.","Fragments":["I"]},{"Key":"embedded. I","Fragments":["started"]},{"Key":"started to","Fragments":["provide","see"]},{"Key":"provide comments","Fragments":["but","you"]},{"Key":"comments but","Fragments":["couldn't"]},{"Key":"couldn't convince","Fragments":["myself"]},{"Key":"convince myself","Fragments":["that"]},{"Key":"myself that","Fragments":["the"]},{"Key":"needed further","Fragments":["explanation."]},{"Key":"further explanation.","Fragments":["I"]},{"Key":"explanation. I","Fragments":["didn't"]},{"Key":"realize the","Fragments":["extra"]},{"Key":"extra using","Fragments":["statements","statements."]},{"Key":"through or","Fragments":["I"]},{"Key":"or I","Fragments":["would","forgot"]},{"Key":"cleaned those","Fragments":["up"]},{"Key":"those up","Fragments":["too."]},{"Key":" Let","Fragments":["me","me"]},{"Key":"Let me","Fragments":["try","know","know"]},{"Key":"me try","Fragments":["it:"]},{"Key":" Func\u003cint,","Fragments":["bool\u003e"]},{"Key":"bool\u003e DivisibleBy","Fragments":["="]},{"Key":"DivisibleBy =","Fragments":["n"]},{"Key":"= n","Fragments":["=\u003e"]},{"Key":"n =\u003e","Fragments":["(year"]},{"Key":"=\u003e (year","Fragments":["%"]},{"Key":"% n","Fragments":["=="]},{"Key":"n ==","Fragments":["0);"]},{"Key":"if (!DivisibleBy(100)","Fragments":["||"]},{"Key":"(!DivisibleBy(100) ||","Fragments":["DivisibleBy(400))"]},{"Key":"the compactness","Fragments":["of"]},{"Key":"compactness of","Fragments":["it."]},{"Key":"of it.","Fragments":["I","And,","I","Took"]},{"Key":"the compound","Fragments":["logical"]},{"Key":"compound logical","Fragments":["expression"]},{"Key":"logical expression","Fragments":["a"]},{"Key":"expression a","Fragments":["little"]},{"Key":"to parse:","Fragments":["while"]},{"Key":"parse: while","Fragments":["I"]},{"Key":"works (there","Fragments":["are"]},{"Key":"(there are","Fragments":["tests","some"]},{"Key":"are tests","Fragments":["proving"]},{"Key":"tests proving","Fragments":["it),"]},{"Key":"proving it),","Fragments":["I"]},{"Key":"it), I","Fragments":["would"]},{"Key":"have trouble","Fragments":["explaining"]},{"Key":"trouble explaining","Fragments":["it"]},{"Key":"explaining it","Fragments":["(not"]},{"Key":"it (not","Fragments":["harder"]},{"Key":"(not harder","Fragments":["than"]},{"Key":"the 3-return","Fragments":["one"]},{"Key":"3-return one","Fragments":["though...)."]},{"Key":"the labmda:","Fragments":["I"]},{"Key":"labmda: I","Fragments":["love"]},{"Key":"When you're","Fragments":["using"]},{"Key":"to flip","Fragments":["a","a"]},{"Key":"flip a","Fragments":["true","dictionary."]},{"Key":"true boolean","Fragments":["statement"]},{"Key":"a false,","Fragments":["that"]},{"Key":"false, that","Fragments":["can"]},{"Key":"done by","Fragments":["putting","descriptive","comparing"]},{"Key":"by putting","Fragments":["a","it"]},{"Key":"a !","Fragments":["in"]},{"Key":"! in","Fragments":["front"]},{"Key":"front of","Fragments":["the"]},{"Key":"entire statement.","Fragments":["It"]},{"Key":"statement. It","Fragments":["reads"]},{"Key":"reads really","Fragments":["weird"]},{"Key":"really weird","Fragments":["to"]},{"Key":"weird to","Fragments":["have","see"]},{"Key":"statement being","Fragments":["interpreted"]},{"Key":"being interpreted","Fragments":["and"]},{"Key":"interpreted and","Fragments":["reevaluated"]},{"Key":"and reevaluated","Fragments":["as"]},{"Key":"reevaluated as","Fragments":["true/false."]},{"Key":"Thanks very","Fragments":["much"]},{"Key":"guys. I've","Fragments":["uploaded"]},{"Key":"I've uploaded","Fragments":["a"]},{"Key":"uploaded a","Fragments":["new"]},{"Key":"iteration based","Fragments":["on"]},{"Key":"one exactly","Fragments":["follows"]},{"Key":"exactly follows","Fragments":["the"]},{"Key":"way we","Fragments":["define","understand","al"]},{"Key":"we define","Fragments":["leap"]},{"Key":"define leap","Fragments":["years."]},{"Key":"The deep","Fragments":["nesting"]},{"Key":"deep nesting","Fragments":["of","makes"]},{"Key":"nesting of","Fragments":["if's"]},{"Key":"of if's","Fragments":["would"]},{"Key":"if's would","Fragments":["not"]},{"Key":"not pass","Fragments":["my","the","your","the","the","Detect_Anagrams()"]},{"Key":"code review","Fragments":["though"]},{"Key":"review though","Fragments":[":)"]},{"Key":"test \"Turn_of_the_20th_century_is_not_a_leap_year\"","Fragments":["-"]},{"Key":"\"Turn_of_the_20th_century_is_not_a_leap_year\" -","Fragments":["I"]},{"Key":"second conditional","Fragments":["should"]},{"Key":"be `year","Fragments":["%"]},{"Key":"conditionals all","Fragments":["on"]},{"Key":"I've now","Fragments":["gone"]},{"Key":"now gone","Fragments":["for"]},{"Key":"gone for","Fragments":["the","a","a"]},{"Key":"the consensus","Fragments":["is"]},{"Key":"consensus is","Fragments":["pretty"]},{"Key":"pretty clear","Fragments":["on","and","on","to"]},{"Key":"that one.","Fragments":["I've","If","I","The"]},{"Key":"one. I've","Fragments":["also"]},{"Key":"also included","Fragments":["a"]},{"Key":"included a","Fragments":["check"]},{"Key":"valid year","Fragments":["value.","for","before"]},{"Key":"year value.","Fragments":["I"]},{"Key":"thinking defensively","Fragments":["and"]},{"Key":"defensively and","Fragments":["need"]},{"Key":"and need","Fragments":["to"]},{"Key":"get myself","Fragments":["in"]},{"Key":"myself in","Fragments":["the"]},{"Key":"the habit,","Fragments":["even"]},{"Key":"habit, even","Fragments":["if"]},{"Key":"not strictly","Fragments":["necessary"]},{"Key":"strictly necessary","Fragments":["for"]},{"Key":"the example,","Fragments":["so"]},{"Key":"example, so","Fragments":["thanks"]},{"Key":"for picking","Fragments":["me"]},{"Key":"picking me","Fragments":["up"]},{"Key":"me up","Fragments":["on"]},{"Key":"on that.","Fragments":["I","Also,","By"]},{"Key":"appreciate that","Fragments":["the"]},{"Key":"the rabbit","Fragments":["hole"]},{"Key":"rabbit hole","Fragments":["can"]},{"Key":"hole can","Fragments":["go"]},{"Key":"can go","Fragments":["pretty"]},{"Key":"go pretty","Fragments":["deep"]},{"Key":"pretty deep","Fragments":["if"]},{"Key":"deep if","Fragments":["we"]},{"Key":"we start","Fragments":["thinking","working"]},{"Key":"start thinking","Fragments":["about","about"]},{"Key":"about different","Fragments":["calendar"]},{"Key":"different calendar","Fragments":["systems"]},{"Key":"calendar systems","Fragments":["etc,"]},{"Key":"systems etc,","Fragments":["so"]},{"Key":"etc, so","Fragments":["it"]},{"Key":"seems sufficient","Fragments":["to"]},{"Key":"sufficient to","Fragments":["keep"]},{"Key":"for now","Fragments":["and"]},{"Key":"now and","Fragments":["the","then.","is"]},{"Key":"line check","Fragments":["seems"]},{"Key":"check seems","Fragments":["to"]},{"Key":"the job.","Fragments":["Do"]},{"Key":"job. Do","Fragments":["you"]},{"Key":" Although","Fragments":["people","it","the","this","I"]},{"Key":"Although people","Fragments":["seem"]},{"Key":"to like","Fragments":["the"]},{"Key":"the one-liner,","Fragments":["this"]},{"Key":"one-liner, this","Fragments":["is"]},{"Key":"a literal","Fragments":["translation"]},{"Key":"literal translation","Fragments":["from"]},{"Key":"translation from","Fragments":["the"]},{"Key":"readme when","Fragments":["you"]},{"Key":"read it","Fragments":["backwards,","today."]},{"Key":"it backwards,","Fragments":["which"]},{"Key":"backwards, which","Fragments":["is","is"]},{"Key":"general point,","Fragments":["returning"]},{"Key":"point, returning","Fragments":["an"]},{"Key":"returning an","Fragments":["object"]},{"Key":"object from","Fragments":["a"]},{"Key":"routine (unless","Fragments":["one"]},{"Key":"(unless one","Fragments":["really,"]},{"Key":"one really,","Fragments":["really"]},{"Key":"really, really","Fragments":["has"]},{"Key":"really has","Fragments":["to)"]},{"Key":"has to)","Fragments":["is"]},{"Key":"to) is","Fragments":["a"]},{"Key":"idea. The","Fragments":["signature"]},{"Key":"signature for","Fragments":["match"]},{"Key":"for match","Fragments":["should"]},{"Key":"match should","Fragments":["be"]},{"Key":"public IDictionary\u003cstring,","Fragments":["int\u003e"]},{"Key":"IDictionary\u003cstring, int\u003e","Fragments":["Match(IDictionary\u003cint,","WordCount()"]},{"Key":"int\u003e Match(IDictionary\u003cint,","Fragments":["IList\u003cstring\u003e\u003e"]},{"Key":"Match(IDictionary\u003cint, IList\u003cstring\u003e\u003e","Fragments":["oldData)"]},{"Key":"The explicit","Fragments":["return"]},{"Key":"explicit return","Fragments":["type"]},{"Key":"type tells","Fragments":["the"]},{"Key":"tells the","Fragments":["user","people"]},{"Key":"user what","Fragments":["to","the"]},{"Key":"expect and","Fragments":["means"]},{"Key":"and means","Fragments":["that"]},{"Key":"to cast","Fragments":["the","it"]},{"Key":"useful type.","Fragments":["(we"]},{"Key":"type. (we","Fragments":["get"]},{"Key":"(we get","Fragments":["away"]},{"Key":"it here","Fragments":["because","but"]},{"Key":"framework does","Fragments":["the"]},{"Key":"the casting","Fragments":["for"]},{"Key":"casting for","Fragments":["us)"]},{"Key":"The \u003cb\u003eIDictionary\u003c/b\u003e","Fragments":["rather"]},{"Key":"\u003cb\u003eIDictionary\u003c/b\u003e rather","Fragments":["than"]},{"Key":"than \u003cb\u003eDictionary\u003c/b\u003e","Fragments":["as"]},{"Key":"\u003cb\u003eDictionary\u003c/b\u003e as","Fragments":["the"]},{"Key":"parameter means","Fragments":["that"]},{"Key":"anything implementing","Fragments":["IDictionary"]},{"Key":"implementing IDictionary","Fragments":["can"]},{"Key":"IDictionary can","Fragments":["be"]},{"Key":"be passed","Fragments":["in,","strands","in","to"]},{"Key":"passed in,","Fragments":["not"]},{"Key":"in, not","Fragments":["just"]},{"Key":"the concrete","Fragments":["Dictionary"]},{"Key":"concrete Dictionary","Fragments":["type."]},{"Key":"be argued,","Fragments":["but","but","but"]},{"Key":"argued, but","Fragments":["I","I","as"]},{"Key":"use \u003cb\u003evar\u003c/b\u003e","Fragments":["for"]},{"Key":"\u003cb\u003evar\u003c/b\u003e for","Fragments":["the"]},{"Key":"loop variables.","Fragments":["It"]},{"Key":"variables. It","Fragments":["is"]},{"Key":"obvious what","Fragments":["they"]},{"Key":"they are,","Fragments":["so"]},{"Key":"are, so","Fragments":["using"]},{"Key":"so using","Fragments":["var","the"]},{"Key":"var doesn't","Fragments":["reduce"]},{"Key":"doesn't reduce","Fragments":["readability."]},{"Key":"reduce readability.","Fragments":["As"]},{"Key":"readability. As","Fragments":["I"]},{"Key":"said, it","Fragments":["can"]},{"Key":"be argued","Fragments":["http://stackoverflow.com/questions/17032/should-i-always-favour-implictly-typed-local-variables-in-c-sharp-3-0","on"]},{"Key":" FYI:","Fragments":["If"]},{"Key":"FYI: If","Fragments":["you"]},{"Key":"haven't had","Fragments":["exposure"]},{"Key":"had exposure","Fragments":["to"]},{"Key":"exposure to","Fragments":["Linq,"]},{"Key":"to Linq,","Fragments":["the"]},{"Key":"Linq, the","Fragments":["conversion"]},{"Key":"the conversion","Fragments":["can","into"]},{"Key":"conversion can","Fragments":["be"]},{"Key":"be effected","Fragments":["using"]},{"Key":"effected using","Fragments":["a"]},{"Key":"a (pretty)","Fragments":["simple"]},{"Key":"(pretty) simple","Fragments":["Linq","Linq"]},{"Key":"simple Linq","Fragments":["query.","statement","query"]},{"Key":" Ahh,","Fragments":["I","yeah..."]},{"Key":"Ahh, I","Fragments":["meant"]},{"Key":"I meant","Fragments":["value","in","each","\"without\""]},{"Key":"meant value","Fragments":["\u003e="]},{"Key":"value \u003e=","Fragments":["conversion.Key"]},{"Key":"\u003e= conversion.Key","Fragments":["and"]},{"Key":"conversion.Key and","Fragments":["you"]},{"Key":"foreach (int","Fragments":["number","multiple","multiple","index","i"]},{"Key":"(int number","Fragments":["in"]},{"Key":"number in","Fragments":["ArabicToRomanConversions.Keys.OrderByDescending(a","case","the","the","the","eight","an","Select,"]},{"Key":"in ArabicToRomanConversions.Keys.OrderByDescending(a","Fragments":["=\u003e"]},{"Key":"ArabicToRomanConversions.Keys.OrderByDescending(a =\u003e","Fragments":["a))"]},{"Key":"while (value","Fragments":["\u003e=","\u003e=","\u003e="]},{"Key":"(value \u003e=","Fragments":["number)","ruleNumber.Key)","ruleNumber.Key)"]},{"Key":" value","Fragments":["-=","=","-=","-=","-=","-=","-="]},{"Key":"value -=","Fragments":["number;","value2numeral.Key*fits;","ruleNumber.Key;","ruleNumber.Key;","count","count"]},{"Key":"a mixture","Fragments":["of"]},{"Key":"and Foreach","Fragments":["to"]},{"Key":"Foreach to","Fragments":["generate"]},{"Key":"entries for","Fragments":["the"]},{"Key":"new dictionary.","Fragments":["It"]},{"Key":"dictionary. It","Fragments":["is","shorten's"]},{"Key":"lot in","Fragments":["a"]},{"Key":"single (pretty)","Fragments":["simple"]},{"Key":"Linq statement","Fragments":["including","but"]},{"Key":"statement including","Fragments":["generating"]},{"Key":"including generating","Fragments":["the"]},{"Key":"no strong","Fragments":["need"]},{"Key":"strong need","Fragments":["for"]},{"Key":"a class.","Fragments":["It"]},{"Key":"class. It","Fragments":["could"]},{"Key":"static IDictionary\u003cstring,","Fragments":["int\u003e"]},{"Key":"that, Linq","Fragments":["is"]},{"Key":"Linq is","Fragments":["your","fun.","not"]},{"Key":"is your","Fragments":["best-est","internal","friend","intention","call."]},{"Key":"your best-est","Fragments":["friend"]},{"Key":"best-est friend","Fragments":["eh-ver!"]},{"Key":"friend eh-ver!","Fragments":[":)"]},{"Key":"At the","Fragments":["end","moment","moment,","very","end,","end,","moment,","moment,"]},{"Key":"Hey and","Fragments":["IsScreaming"]},{"Key":"and IsScreaming","Fragments":["methods,"]},{"Key":"IsScreaming methods,","Fragments":["you"]},{"Key":"methods, you","Fragments":["don't"]},{"Key":"else keyword.","Fragments":["Any"]},{"Key":"keyword. Any","Fragments":["time"]},{"Key":"Any time","Fragments":["you"]},{"Key":"if-return construct,","Fragments":["the"]},{"Key":"construct, the","Fragments":["code"]},{"Key":"execute when","Fragments":["the"]},{"Key":"to false,","Fragments":["so","so","it"]},{"Key":"else word","Fragments":["is"]},{"Key":"of steps","Fragments":["to"]},{"Key":"steps to","Fragments":["using"]},{"Key":"using \u003cb\u003eRegex\u003c/b\u003e","Fragments":["to"]},{"Key":"\u003cb\u003eRegex\u003c/b\u003e to","Fragments":["replace"]},{"Key":"the non-word","Fragments":["characters"]},{"Key":"with spaces","Fragments":["and","in"]},{"Key":"then split","Fragments":["the"]},{"Key":"phrase into","Fragments":["chunks."]},{"Key":"into chunks.","Fragments":["Using"]},{"Key":"chunks. Using","Fragments":["a"]},{"Key":"Using a","Fragments":["\u003cb\u003eRegex.Match\u003c/b\u003e","lookup","similar","static"]},{"Key":"a \u003cb\u003eRegex.Match\u003c/b\u003e","Fragments":["for"]},{"Key":"\u003cb\u003eRegex.Match\u003c/b\u003e for","Fragments":["a"]},{"Key":"of \u003cem\u003e@\"[\\w']+\"\u003c/em\u003e","Fragments":["will"]},{"Key":"\u003cem\u003e@\"[\\w']+\"\u003c/em\u003e will","Fragments":["find"]},{"Key":"string WordPattern","Fragments":["=","="]},{"Key":"WordPattern =","Fragments":["@\"[\\w']+\";","@\"[\\w']+\";"]},{"Key":"private readonly","Fragments":["static","static","static"]},{"Key":"readonly static","Fragments":["Regex","Regex","IDictionary\u003cchar,","```Regex```"]},{"Key":"Regex WordRegex","Fragments":["=","="]},{"Key":"WordRegex =","Fragments":["new","new"]},{"Key":"new Regex(WordPattern,","Fragments":["RegexOptions.Compiled);","RegexOptions.Compiled);"]},{"Key":"var matches","Fragments":["=","="]},{"Key":"matches =","Fragments":["WordRegex.Match(inPhrase);","WordRegex.Matches(_phrase);"]},{"Key":"would push","Fragments":["for","for","for","to"]},{"Key":"push for","Fragments":["using","chaining","using","using"]},{"Key":"the @","Fragments":["prefix"]},{"Key":"@ prefix","Fragments":["to"]},{"Key":"prefix to","Fragments":["the"]},{"Key":"string literals","Fragments":["to"]},{"Key":"literals to","Fragments":["remove"]},{"Key":"to escape","Fragments":["slashes."]},{"Key":"escape slashes.","Fragments":["It"]},{"Key":"slashes. It","Fragments":["is"]},{"Key":"Minor quibble","Fragments":["but"]},{"Key":"quibble but","Fragments":["I"]},{"Key":"to throw","Fragments":["an","away","for","on","away","an","an","an","out","an"]},{"Key":"number below","Fragments":["1"]},{"Key":"below 1","Fragments":["is"]},{"Key":"1 is","Fragments":["entered","simply"]},{"Key":"entered as","Fragments":["they"]},{"Key":"not valid","Fragments":["years."]},{"Key":" Whoa!","Fragments":["You're"]},{"Key":"Whoa! You're","Fragments":["seeing"]},{"Key":"You're seeing","Fragments":["things"]},{"Key":"seeing things","Fragments":["that"]},{"Key":"things that","Fragments":["don't","are","could","would","you","seem"]},{"Key":"even cross","Fragments":["my"]},{"Key":"cross my","Fragments":["mind..."]},{"Key":" Please","Fragments":["continue","comment!","don't"]},{"Key":"Please continue","Fragments":["to"]},{"Key":"submit your","Fragments":["feedback;"]},{"Key":"your feedback;","Fragments":["this"]},{"Key":"feedback; this","Fragments":["is"]},{"Key":" \u003cb\u003eMinor","Fragments":["cavil\u003c/b\u003e","things:\u003c/b\u003e"]},{"Key":"The standard","Fragments":["for","for"]},{"Key":"standard for","Fragments":["C#","a","C#"]},{"Key":"for C#","Fragments":["is","is"]},{"Key":"is camel","Fragments":["casing"]},{"Key":"casing for","Fragments":["parameters","member"]},{"Key":"for parameters","Fragments":["(\u003cb\u003einPhase\u003c/b\u003e)","(and"]},{"Key":"parameters (\u003cb\u003einPhase\u003c/b\u003e)","Fragments":["http://msdn.microsoft.com/en-ie/library/ab6a8y1b(v=vs.71).aspx"]},{"Key":"(\u003cb\u003einPhase\u003c/b\u003e) http://msdn.microsoft.com/en-ie/library/ab6a8y1b(v=vs.71).aspx","Fragments":["and,"]},{"Key":"http://msdn.microsoft.com/en-ie/library/ab6a8y1b(v=vs.71).aspx and,","Fragments":["although"]},{"Key":"and, although","Fragments":["I"]},{"Key":"cannot find","Fragments":["an"]},{"Key":"find an","Fragments":["authoritative"]},{"Key":"an authoritative","Fragments":["source,"]},{"Key":"authoritative source,","Fragments":["the"]},{"Key":"source, the","Fragments":["general"]},{"Key":"general usage","Fragments":["is"]},{"Key":"usage is","Fragments":["camelCase"]},{"Key":"is camelCase","Fragments":["for"]},{"Key":"camelCase for","Fragments":["local"]},{"Key":"variables (\u003cb\u003enewWord\u003c/b\u003e)","Fragments":["and"]},{"Key":"(\u003cb\u003enewWord\u003c/b\u003e) and","Fragments":["camelCase"]},{"Key":"and camelCase","Fragments":["or"]},{"Key":"camelCase or","Fragments":["_camelCase"]},{"Key":"or _camelCase","Fragments":["for"]},{"Key":"_camelCase for","Fragments":["class"]},{"Key":"class fields","Fragments":["(\u003cb\u003e_stringToTest\u003c/b\u003e)."]},{"Key":" \u003cb\u003eOther","Fragments":["Points\u003c/b\u003e","things:\u003c/b\u003e"]},{"Key":"The check","Fragments":["for","against"]},{"Key":"for '","Fragments":["as"]},{"Key":"' as","Fragments":["part"]},{"Key":"building a","Fragments":["new","string","new","string","whole"]},{"Key":"new word","Fragments":["seems"]},{"Key":"word seems","Fragments":["a"]},{"Key":"messy. Merging","Fragments":["the"]},{"Key":"Merging the","Fragments":["two"]},{"Key":"tests into","Fragments":["a"]},{"Key":"single \u003cb\u003eIsValidCharacter()\u003c/b\u003e","Fragments":["would"]},{"Key":"\u003cb\u003eIsValidCharacter()\u003c/b\u003e would","Fragments":["make"]},{"Key":"make for","Fragments":["easier"]},{"Key":"easier reading","Fragments":["-","of"]},{"Key":"reading -","Fragments":["fewer"]},{"Key":"- fewer","Fragments":["levels"]},{"Key":"fewer levels","Fragments":["of"]},{"Key":"levels of","Fragments":["abstraction","indentation.","boolean","nested","abstraction."]},{"Key":"abstraction to","Fragments":["deal"]},{"Key":"to deal","Fragments":["with","with"]},{"Key":"with at","Fragments":["once"]},{"Key":"at once","Fragments":["-","too."]},{"Key":"once -","Fragments":["and","I"]},{"Key":"- and","Fragments":["save","a","we","then","I"]},{"Key":"save us","Fragments":["having"]},{"Key":"us having","Fragments":["to"]},{"Key":"to reopen","Fragments":["the"]},{"Key":"reopen the","Fragments":["main"]},{"Key":"main loop","Fragments":["if"]},{"Key":"loop if","Fragments":["we"]},{"Key":"decide that,","Fragments":["say,"]},{"Key":"that, say,","Fragments":["underscores"]},{"Key":"say, underscores","Fragments":["were"]},{"Key":"underscores were","Fragments":["allowed."]},{"Key":"works, the","Fragments":["approach"]},{"Key":"very labour","Fragments":["intensive,"]},{"Key":"labour intensive,","Fragments":["we"]},{"Key":"intensive, we","Fragments":["have"]},{"Key":"work -","Fragments":["splitting","we","but"]},{"Key":"- splitting","Fragments":["the"]},{"Key":"string, ensuring","Fragments":["the"]},{"Key":"ensuring the","Fragments":["characters"]},{"Key":"characters are","Fragments":["valid,","letters...","uppercase","digits,","simply","whitespace"]},{"Key":"are valid,","Fragments":["creating"]},{"Key":"valid, creating","Fragments":["and"]},{"Key":"creating and","Fragments":["adding"]},{"Key":"dictionary. The","Fragments":["Regex","dictionary"]},{"Key":"The Regex","Fragments":["class"]},{"Key":"Regex class","Fragments":["http://msdn.microsoft.com/en-us/library/system.text.regularexpressions.regex.aspx"]},{"Key":"class http://msdn.microsoft.com/en-us/library/system.text.regularexpressions.regex.aspx","Fragments":["can"]},{"Key":"http://msdn.microsoft.com/en-us/library/system.text.regularexpressions.regex.aspx can","Fragments":["be"]},{"Key":"do much","Fragments":["of"]},{"Key":"the heavy","Fragments":["lifting"]},{"Key":"heavy lifting","Fragments":["for"]},{"Key":"lifting for","Fragments":["us."]},{"Key":"My goal","Fragments":["was"]},{"Key":"goal was","Fragments":["to","to"]},{"Key":"condense the","Fragments":["logic"]},{"Key":"say it's","Fragments":["a"]},{"Key":"bit overkill","Fragments":["for"]},{"Key":"assignment, but","Fragments":["not"]},{"Key":"the situation.","Fragments":["I.E.,"]},{"Key":"situation. I.E.,","Fragments":["if"]},{"Key":"I.E., if","Fragments":["you're"]},{"Key":"you're in","Fragments":["an"]},{"Key":"an enterprise","Fragments":["environment"]},{"Key":"enterprise environment","Fragments":["and"]},{"Key":"environment and","Fragments":["you"]},{"Key":"more tests","Fragments":["to"]},{"Key":"to this,","Fragments":["it's","so"]},{"Key":"this, it's","Fragments":["easily"]},{"Key":"it's easily","Fragments":["expandable"]},{"Key":"easily expandable","Fragments":["and"]},{"Key":"expandable and","Fragments":["very"]},{"Key":"and very","Fragments":["scalable.","readable.","readable."]},{"Key":"very scalable.","Fragments":["Also,"]},{"Key":"scalable. Also,","Fragments":["I"]},{"Key":"the generic","Fragments":["(simplest)","types."]},{"Key":"generic (simplest)","Fragments":["solution,"]},{"Key":"(simplest) solution,","Fragments":["I"]},{"Key":"enjoy taking","Fragments":["on"]},{"Key":"taking on","Fragments":["challenges"]},{"Key":"on challenges","Fragments":["and"]},{"Key":"challenges and","Fragments":["using"]},{"Key":"different perspective","Fragments":["to"]},{"Key":"perspective to","Fragments":["solve"]},{"Key":"solve them.","Fragments":["That's"]},{"Key":"them. That's","Fragments":["the"]},{"Key":"That's the","Fragments":["great"]},{"Key":"the great","Fragments":["thing"]},{"Key":"great thing","Fragments":["about"]},{"Key":"about programming;","Fragments":["there's"]},{"Key":"programming; there's","Fragments":["a"]},{"Key":"one simple","Fragments":["thing.","boolean"]},{"Key":"A possibility","Fragments":["is"]},{"Key":"possibility is","Fragments":["to"]},{"Key":"words using","Fragments":["regex"]},{"Key":"using regex","Fragments":["rather","to","instead."]},{"Key":"regex rather","Fragments":["than"]},{"Key":" gives","Fragments":["a"]},{"Key":"gives a","Fragments":["match"]},{"Key":"a match","Fragments":["for"]},{"Key":"match for","Fragments":["each"]},{"Key":"then be","Fragments":["grouped","more"]},{"Key":"grouped and","Fragments":["converted"]},{"Key":"and converted","Fragments":["to","the"]},{"Key":"dictionary using","Fragments":["linq","a","\u003ccode\u003eContainsKey\u003c/code\u003e","\u003ccode\u003eContainsKey()\u003c/code\u003e"]},{"Key":"is readable!","Fragments":["Nice"]},{"Key":"readable! Nice","Fragments":["work!"]},{"Key":"switch at","Fragments":["first,"]},{"Key":"realized pretty","Fragments":["quickly"]},{"Key":"pretty quickly","Fragments":["that"]},{"Key":"quickly that","Fragments":["the"]},{"Key":"compiler wasn't","Fragments":["going"]},{"Key":"wasn't going","Fragments":["to","for"]},{"Key":"me use","Fragments":["non-static"]},{"Key":"use non-static","Fragments":["cases,"]},{"Key":"non-static cases,","Fragments":["so"]},{"Key":"cases, so","Fragments":["I"]},{"Key":"statements. Not","Fragments":["sure"]},{"Key":"regular expression.","Fragments":["Using","It"]},{"Key":"expression. Using","Fragments":["\\w"]},{"Key":"Using \\w","Fragments":["implies"]},{"Key":"\\w implies","Fragments":["0-9,"]},{"Key":"implies 0-9,","Fragments":["a-z,"]},{"Key":"0-9, a-z,","Fragments":["A-Z,"]},{"Key":"a-z, A-Z,","Fragments":["and"]},{"Key":"A-Z, and","Fragments":["_."]},{"Key":"if two","Fragments":["words","words","strings"]},{"Key":"words were","Fragments":["separated"]},{"Key":"were separated","Fragments":["by"]},{"Key":"separated by","Fragments":["a","spaces"]},{"Key":"a tab","Fragments":["character"]},{"Key":"or newline","Fragments":["instead"]},{"Key":"newline instead","Fragments":["of"]},{"Key":"space or","Fragments":["comma?"]},{"Key":"or comma?","Fragments":["You"]},{"Key":"comma? You","Fragments":["might"]},{"Key":"use Regex.Match","Fragments":["to"]},{"Key":"Regex.Match to","Fragments":["split","do"]},{"Key":"words (once)","Fragments":["rather"]},{"Key":"(once) rather","Fragments":["than"]},{"Key":"using String.Split","Fragments":["and"]},{"Key":"String.Split and","Fragments":["then"]},{"Key":"the IsAllUpper","Fragments":["function"]},{"Key":"IsAllUpper function","Fragments":["you've"]},{"Key":"function you've","Fragments":["implemented"]},{"Key":"you've implemented","Fragments":["is"]},{"Key":"implemented is","Fragments":["necessary"]},{"Key":"is necessary","Fragments":["here,","in"]},{"Key":"necessary here,","Fragments":["as"]},{"Key":"here, as","Fragments":["you","well?"]},{"Key":"could compare","Fragments":["your"]},{"Key":"compare your","Fragments":["input"]},{"Key":"your input","Fragments":["string","to","strings","gyphie!"]},{"Key":"to string.ToUpper()","Fragments":["and"]},{"Key":"string.ToUpper() and","Fragments":["achieve"]},{"Key":"and achieve","Fragments":["the"]},{"Key":"achieve the","Fragments":["same","appropriate","same","desired"]},{"Key":"same effect.","Fragments":["Some"]},{"Key":"effect. Some","Fragments":["nifty"]},{"Key":"Some nifty","Fragments":["work"]},{"Key":"nifty work","Fragments":["there,"]},{"Key":"be reinventing","Fragments":["the"]},{"Key":"definitely like","Fragments":["how"]},{"Key":"you pulled","Fragments":["the"]},{"Key":"into their","Fragments":["own","own","own,","own"]},{"Key":"prevent future","Fragments":["problems"]},{"Key":"future problems","Fragments":["with"]},{"Key":"with re-coding","Fragments":["the"]},{"Key":"re-coding the","Fragments":["\"Hey\""]},{"Key":"the \"Hey\"","Fragments":["function,"]},{"Key":"you showed","Fragments":["a"]},{"Key":"showed a","Fragments":["really"]},{"Key":"really smart","Fragments":["use"]},{"Key":"smart use","Fragments":["of"]},{"Key":"of ternary","Fragments":["operators"]},{"Key":"operators without","Fragments":["confusing"]},{"Key":"without confusing","Fragments":["the"]},{"Key":"confusing the","Fragments":["code"]},{"Key":"the cleanstring","Fragments":["function"]},{"Key":"cleanstring function","Fragments":["is"]},{"Key":"necessary in","Fragments":["this","C#."]},{"Key":"case, though.","Fragments":["Is"]},{"Key":"though. Is","Fragments":["there"]},{"Key":"can achieve","Fragments":["the"]},{"Key":"appropriate test","Fragments":["results"]},{"Key":"results without","Fragments":["scanning"]},{"Key":"without scanning","Fragments":["for"]},{"Key":"scanning for","Fragments":["every"]},{"Key":"single type","Fragments":["of"]},{"Key":"of special","Fragments":["character?"]},{"Key":"I'm okay","Fragments":["with"]},{"Key":"with having","Fragments":["an"]},{"Key":"having an","Fragments":["if","else"]},{"Key":"statement without","Fragments":["{"]},{"Key":"without {","Fragments":["}"]},{"Key":"} but","Fragments":["only"]},{"Key":"not inline","Fragments":["(because"]},{"Key":"inline (because","Fragments":["I"]},{"Key":"(because I","Fragments":["think"]},{"Key":"definitely degrades","Fragments":["readability"]},{"Key":"degrades readability","Fragments":["of"]},{"Key":"of code)","Fragments":["and"]},{"Key":"code) and","Fragments":["only"]},{"Key":"statement following","Fragments":["is"]},{"Key":"following is","Fragments":["extremely"]},{"Key":"extremely simple","Fragments":["and"]},{"Key":"and can't","Fragments":["be"]},{"Key":"be misconstrued.","Fragments":["Example:"]},{"Key":" if(year","Fragments":["%"]},{"Key":"if(year %","Fragments":["4"]},{"Key":"One can","Fragments":["use","argue","store"]},{"Key":"dictionary from","Fragments":["the"]},{"Key":" .GroupBy(m","Fragments":["=\u003e"]},{"Key":".GroupBy(m =\u003e","Fragments":["m.Captures[0].Value.ToLower(),"]},{"Key":"=\u003e m.Captures[0].Value.ToLower(),","Fragments":["StringComparer.CurrentCultureIgnoreCase)"]},{"Key":" .ToDictionary(g=\u003eg.Key,","Fragments":["g"]},{"Key":".ToDictionary(g=\u003eg.Key, g","Fragments":["=\u003e"]},{"Key":"g =\u003e","Fragments":["g.Count());","g.Count());"]},{"Key":" Clean,","Fragments":["elegant,","solid"]},{"Key":"Clean, elegant,","Fragments":["and"]},{"Key":"readable. Nicely","Fragments":["done"]},{"Key":"Nicely done","Fragments":[":)"]},{"Key":"done :)","Fragments":["I"]},{"Key":"about types","Fragments":["as"]},{"Key":"var, but","Fragments":["in"]},{"Key":"probably part","Fragments":["of"]},{"Key":"why your","Fragments":["code"]},{"Key":"so easy","Fragments":["to","to"]},{"Key":"tests only","Fragments":["check","use"]},{"Key":"same we","Fragments":["probably"]},{"Key":"we probably","Fragments":["cannot"]},{"Key":"probably cannot","Fragments":["trust"]},{"Key":"are non-null","Fragments":["so"]},{"Key":"non-null so","Fragments":["null"]},{"Key":"so null","Fragments":["checks"]},{"Key":"checks before","Fragments":["the","returning"]},{"Key":"length comparison","Fragments":["might"]},{"Key":"comparison might","Fragments":["be"]},{"Key":"class only","Fragments":["contains","has"]},{"Key":"only contains","Fragments":["a","valid"]},{"Key":"single static","Fragments":["member,"]},{"Key":"static member,","Fragments":["we"]},{"Key":"member, we","Fragments":["may"]},{"Key":"we may","Fragments":["as"]},{"Key":"well make","Fragments":["it"]},{"Key":"your commitment","Fragments":["to"]},{"Key":"commitment to","Fragments":["good,"]},{"Key":"to good,","Fragments":["generically"]},{"Key":"good, generically","Fragments":["applicable"]},{"Key":"generically applicable","Fragments":["code"]},{"Key":"applicable code","Fragments":["in"]},{"Key":"you included","Fragments":["exception"]},{"Key":"included exception","Fragments":["handling,"]},{"Key":"exception handling,","Fragments":["even"]},{"Key":"handling, even","Fragments":["though"]},{"Key":"though we","Fragments":["weren't"]},{"Key":"we weren't","Fragments":["tested"]},{"Key":"weren't tested","Fragments":["on"]},{"Key":"tested on","Fragments":["a"]},{"Key":"I considered","Fragments":["various","making","using","using"]},{"Key":"considered various","Fragments":["methods"]},{"Key":"various methods","Fragments":["for"]},{"Key":"for performing","Fragments":["the"]},{"Key":"calculations and","Fragments":["ultimately"]},{"Key":"and ultimately","Fragments":["I"]},{"Key":"ultimately I","Fragments":["sided"]},{"Key":"I sided","Fragments":["with"]},{"Key":"sided with","Fragments":["readability"]},{"Key":"with readability","Fragments":["over"]},{"Key":" @drew","Fragments":["All"]},{"Key":"@drew All","Fragments":["good"]},{"Key":"good points.","Fragments":["I"]},{"Key":"points. I","Fragments":["will"]},{"Key":"make adjustments","Fragments":["and"]},{"Key":"adjustments and","Fragments":["submit"]},{"Key":"OK. I","Fragments":["wrote","wrote"]},{"Key":"tests while","Fragments":["being","being"]},{"Key":"while being","Fragments":["completely","completely"]},{"Key":"being completely","Fragments":["wrong.","wrong."]},{"Key":"completely wrong.","Fragments":["I","I"]},{"Key":"wrong. I","Fragments":["did","did","have"]},{"Key":"to hopefully","Fragments":["be","be"]},{"Key":"hopefully be","Fragments":["able","able"]},{"Key":"able discuss","Fragments":["the","the"]},{"Key":"discuss the","Fragments":["pros","pros","rest"]},{"Key":"the pros","Fragments":["and","and"]},{"Key":"of test","Fragments":["driven","driven"]},{"Key":"worked in","Fragments":["a","a"]},{"Key":"a TDD","Fragments":["environment","environment"]},{"Key":"TDD environment","Fragments":["so","so"]},{"Key":"environment so","Fragments":["I","I"]},{"Key":"can't speak","Fragments":["from","from"]},{"Key":"speak from","Fragments":["experience","experience"]},{"Key":"from experience","Fragments":["so","so"]},{"Key":"experience so","Fragments":["I'd","I'd"]},{"Key":"so I'd","Fragments":["like","like","maybe","prefer"]},{"Key":"hear about","Fragments":["yours.","yours."]},{"Key":"about yours.","Fragments":["I'd","I'd"]},{"Key":"yours. I'd","Fragments":["like","like"]},{"Key":"hear from","Fragments":["folks","folks"]},{"Key":"from folks","Fragments":["that","that"]},{"Key":"folks that","Fragments":["actually","actually"]},{"Key":"that actually","Fragments":["have","have","does"]},{"Key":"few years","Fragments":["of","of","I"]},{"Key":"years of","Fragments":["actual","actual"]},{"Key":"of actual","Fragments":["TDD","TDD"]},{"Key":"actual TDD","Fragments":["and","and"]},{"Key":"TDD and","Fragments":["not","not"]},{"Key":"just fans","Fragments":["of","of"]},{"Key":"fans of","Fragments":["the","the"]},{"Key":"idea that","Fragments":["read","read","I","Match","the"]},{"Key":"that read","Fragments":["about","about"]},{"Key":"only practice","Fragments":["TDD","TDD"]},{"Key":"practice TDD","Fragments":["on","on"]},{"Key":"TDD on","Fragments":["their","their"]},{"Key":"on their","Fragments":["private","private","own.","own."]},{"Key":"their private","Fragments":["projects.","projects."]},{"Key":"this submission","Fragments":["because","because","is","is"]},{"Key":"submission because","Fragments":["I","I"]},{"Key":"have enjoyed","Fragments":["all","all"]},{"Key":"enjoyed all","Fragments":["the","the"]},{"Key":"exercises so","Fragments":["far","far"]},{"Key":"far but","Fragments":["have","have"]},{"Key":"but have","Fragments":["been","been","a"]},{"Key":"been dismayed","Fragments":["at","at"]},{"Key":"dismayed at","Fragments":["the","the"]},{"Key":"poor quality","Fragments":["of","of"]},{"Key":"requirements documents","Fragments":["and","and"]},{"Key":"documents and","Fragments":["the","the"]},{"Key":"poor coverage","Fragments":["of","of"]},{"Key":"coverage of","Fragments":["the","the"]},{"Key":"like requirements","Fragments":["being","being"]},{"Key":"requirements being","Fragments":["specified","specified"]},{"Key":"being specified","Fragments":["in","in"]},{"Key":"specified in","Fragments":["the","the","the","the"]},{"Key":"and left","Fragments":["out","out"]},{"Key":"the readme.","Fragments":["Nothing","Nothing","However,"]},{"Key":"readme. Nothing","Fragments":["so","so"]},{"Key":"Nothing so","Fragments":["far","far"]},{"Key":"far has","Fragments":["inspired","inspired"]},{"Key":"has inspired","Fragments":["me","me"]},{"Key":"inspired me","Fragments":["to","to","to"]},{"Key":"use test","Fragments":["driven","driven"]},{"Key":"development concepts","Fragments":["nor","nor"]},{"Key":"concepts nor","Fragments":["to","to"]},{"Key":"nor to","Fragments":["encourage","encourage"]},{"Key":"to encourage","Fragments":["my","my"]},{"Key":"encourage my","Fragments":["workplace","workplace"]},{"Key":"my workplace","Fragments":["to","to"]},{"Key":"workplace to","Fragments":["implement","implement"]},{"Key":"is concerning","Fragments":["to","to"]},{"Key":"concerning to","Fragments":["see","see"]},{"Key":"how many","Fragments":["submissions","submissions","modulus","ways","characters","zeros","ruleNumber.Value","items"]},{"Key":"many submissions","Fragments":["only","only"]},{"Key":"submissions only","Fragments":["code","code"]},{"Key":"tests without","Fragments":["consideration","consideration"]},{"Key":"without consideration","Fragments":["for","for"]},{"Key":"consideration for","Fragments":["anything","anything"]},{"Key":"for anything","Fragments":["not","not","passed","more"]},{"Key":"anything not","Fragments":["covered","covered","equal"]},{"Key":"not covered","Fragments":["by","by"]},{"Key":"tests. Most","Fragments":["commonly","commonly"]},{"Key":"Most commonly","Fragments":["there","there"]},{"Key":"commonly there","Fragments":["is","is"]},{"Key":"a lack","Fragments":["of","of"]},{"Key":"of input","Fragments":["checking","checking"]},{"Key":"input checking","Fragments":["(especially","(especially"]},{"Key":"checking (especially","Fragments":["null).","null)."]},{"Key":"(especially null).","Fragments":["Is","Is"]},{"Key":"null). Is","Fragments":["this","this"]},{"Key":"a common","Fragments":["pitfall","pitfall","scenario","set","pattern"]},{"Key":"common pitfall","Fragments":["of","of"]},{"Key":"pitfall of","Fragments":["TDD?","TDD?"]},{"Key":"of TDD?","Fragments":["The","The","Only"]},{"Key":"TDD? The","Fragments":["School","School"]},{"Key":"The School","Fragments":["Grade","Grade"]},{"Key":"School Grade","Fragments":["exercise","exercise"]},{"Key":"Grade exercise","Fragments":["had","had"]},{"Key":"exercise had","Fragments":["a","a"]},{"Key":"that checked","Fragments":["for","for"]},{"Key":"a `Count`","Fragments":["but","but"]},{"Key":"`Count` but","Fragments":["my","my"]},{"Key":"code returned","Fragments":["the","the"]},{"Key":"returned the","Fragments":["wrong","wrong","string.format,","generated"]},{"Key":"wrong value","Fragments":["and","and"]},{"Key":"and yet","Fragments":["the","the"]},{"Key":"yet the","Fragments":["tests","tests"]},{"Key":"tests passed.","Fragments":["At","At"]},{"Key":"passed. At","Fragments":["least","least"]},{"Key":"not return","Fragments":["the","the","it","the","\"peanuts\"??","directly","as"]},{"Key":"most sensible","Fragments":["value","value"]},{"Key":"sensible value","Fragments":["but","but"]},{"Key":"value but","Fragments":["the","the"]},{"Key":"requirements docs","Fragments":["didn't","didn't"]},{"Key":"docs didn't","Fragments":["even","even"]},{"Key":"even mention","Fragments":["keeping","keeping"]},{"Key":"mention keeping","Fragments":["a","a"]},{"Key":"keeping a","Fragments":["count.","count.","start"]},{"Key":"a count.","Fragments":["If","If"]},{"Key":"count. If","Fragments":["you","you"]},{"Key":"an excellent","Fragments":["test","test","article"]},{"Key":"excellent test","Fragments":["writer","writer"]},{"Key":"writer is","Fragments":["TDD","TDD"]},{"Key":"is TDD","Fragments":["effective?","effective?"]},{"Key":"Well, even","Fragments":["silly"]},{"Key":"even silly","Fragments":["code"]},{"Key":"silly code","Fragments":["can"]},{"Key":"be improved.","Fragments":["I"]},{"Key":"improved. I","Fragments":["overcomplicated"]},{"Key":"I overcomplicated","Fragments":["my"]},{"Key":"overcomplicated my","Fragments":["previous"]},{"Key":"previous attempt","Fragments":["so"]},{"Key":"attempt so","Fragments":["I"]},{"Key":"I simplified","Fragments":["it","the","removePunctuation","the"]},{"Key":"and extracted","Fragments":["the"]},{"Key":"extracted the","Fragments":["random"]},{"Key":"random robot","Fragments":["name."]},{"Key":" **From","Fragments":["previous"]},{"Key":"**From previous","Fragments":["iteration:**"]},{"Key":" 0","Fragments":["is","is:-"]},{"Key":"year 0,","Fragments":["before"]},{"Key":"0, before","Fragments":["1"]},{"Key":"before 1","Fragments":["AD"]},{"Key":"1 AD","Fragments":["is"]},{"Key":"AD is","Fragments":["1"]},{"Key":"is 1","Fragments":["BC.","plus"]},{"Key":"1 BC.","Fragments":["So"]},{"Key":"BC. So","Fragments":["the"]},{"Key":"be \u003cb\u003eif","Fragments":["year"]},{"Key":"\u003cb\u003eif year","Fragments":["\u003c"]},{"Key":"year \u003c","Fragments":["1\u003c/b\u003e"]},{"Key":"like \u003cb\u003eToUpper()\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003eToUpper()\u003c/b\u003e is","Fragments":["called"]},{"Key":"called on","Fragments":["strand2"]},{"Key":"on strand2","Fragments":["\u003cem\u003estrand1.Length()\u003cem\u003e"]},{"Key":"strand2 \u003cem\u003estrand1.Length()\u003cem\u003e","Fragments":["times"]},{"Key":"\u003cem\u003estrand1.Length()\u003cem\u003e times","Fragments":["and"]},{"Key":"times and","Fragments":["then","regular","get"]},{"Key":"call \u003cb\u003eElementAt()\u003c/b\u003e","Fragments":["(O(n))"]},{"Key":"\u003cb\u003eElementAt()\u003c/b\u003e (O(n))","Fragments":["on"]},{"Key":"(O(n)) on","Fragments":["the"]},{"Key":"the resultant","Fragments":["IEnumerable."]},{"Key":"resultant IEnumerable.","Fragments":["In"]},{"Key":"IEnumerable. In","Fragments":["the"]},{"Key":"current situation","Fragments":["the"]},{"Key":"situation the","Fragments":["performance"]},{"Key":"performance hit","Fragments":["is","but"]},{"Key":"hit is","Fragments":["not"]},{"Key":"to matter","Fragments":["but"]},{"Key":"matter but","Fragments":["as"]},{"Key":"general shape,","Fragments":["a","I"]},{"Key":"shape, a","Fragments":["for"]},{"Key":"loop and","Fragments":["then","when","calculate","calculate"]},{"Key":"then indexing","Fragments":["into"]},{"Key":"indexing into","Fragments":["the"]},{"Key":"two strings","Fragments":["(O(1))","we","are","and","are"]},{"Key":"strings (O(1))","Fragments":["is"]},{"Key":"(O(1)) is","Fragments":["better."]},{"Key":" for(var","Fragments":["index","index"]},{"Key":"for(var index","Fragments":["=","="]},{"Key":"index =","Fragments":["0;","0;","0;"]},{"Key":"0; index","Fragments":["\u003c","\u003c","\u003c"]},{"Key":"index \u003c","Fragments":["strand1.Length;","list.Count;","values.Length;","day)"]},{"Key":"\u003c strand1.Length;","Fragments":["index","i++)"]},{"Key":"strand1.Length; index","Fragments":["++){"]},{"Key":"if (char.ToUpper(strand1[index])","Fragments":["=="]},{"Key":"(char.ToUpper(strand1[index]) ==","Fragments":["char.ToUpper(strand2[index])){"]},{"Key":"difference from","Fragments":["the"]},{"Key":"the CleanString","Fragments":["method","method,"]},{"Key":"CleanString method","Fragments":["returns"]},{"Key":"a List\u003cstring\u003e.","Fragments":["This"]},{"Key":"List\u003cstring\u003e. This","Fragments":["removes"]},{"Key":"This removes","Fragments":["a"]},{"Key":"removes a","Fragments":["line"]},{"Key":"line from","Fragments":["the"]},{"Key":"the WordCount","Fragments":["method,","method"]},{"Key":"WordCount method,","Fragments":["which"]},{"Key":"which increases","Fragments":["code"]},{"Key":"increases code","Fragments":["flow."]},{"Key":"code flow.","Fragments":["If"]},{"Key":"do another","Fragments":["iteration,"]},{"Key":"another iteration,","Fragments":["I"]},{"Key":"will rename","Fragments":["'CleanString'"]},{"Key":"rename 'CleanString'","Fragments":["to"]},{"Key":"'CleanString' to","Fragments":["'WordList'"]},{"Key":"to 'WordList'","Fragments":["or"]},{"Key":"'WordList' or","Fragments":["something"]},{"Key":"CleanString method,","Fragments":["I"]},{"Key":"have condensed","Fragments":["the"]},{"Key":"text manipulation","Fragments":["into"]},{"Key":"manipulation into","Fragments":["one"]},{"Key":"two lines,","Fragments":["or","this"]},{"Key":"a one-line","Fragments":["return"]},{"Key":"one-line return","Fragments":["statement,"]},{"Key":"elegant to","Fragments":["step"]},{"Key":"the process.","Fragments":["Increased"]},{"Key":"process. Increased","Fragments":["readability."]},{"Key":"others' examples,","Fragments":["I"]},{"Key":"examples, I","Fragments":["see"]},{"Key":"calendar that","Fragments":["we"]},{"Key":"using began","Fragments":["in"]},{"Key":"began in","Fragments":["1582."]},{"Key":"1582. Any","Fragments":["date"]},{"Key":"Any date","Fragments":["prior"]},{"Key":"date prior","Fragments":["to"]},{"Key":"prior to","Fragments":["that","the","entering","ToDictionary(),"]},{"Key":"we understand","Fragments":["it"]},{"Key":"it today.","Fragments":["The","I"]},{"Key":"today. The","Fragments":["check"]},{"Key":"0 was","Fragments":["simply"]},{"Key":"avoid an","Fragments":["error,","extra"]},{"Key":"an error,","Fragments":["but"]},{"Key":"not sufficient.","Fragments":["I'll"]},{"Key":"sufficient. I'll","Fragments":["change"]},{"Key":"I'll change","Fragments":["it."]},{"Key":"agree. Listing","Fragments":["every"]},{"Key":"Listing every","Fragments":["character"]},{"Key":"every character","Fragments":["is","to","replaced."]},{"Key":"is error","Fragments":["prone."]},{"Key":"error prone.","Fragments":["A","What"]},{"Key":"prone. A","Fragments":["simple"]},{"Key":"A simple","Fragments":["Regex","`var`","way","approach"]},{"Key":"Regex is","Fragments":["better."]},{"Key":"Using advice","Fragments":["from"]},{"Key":"advice from","Fragments":["@keshaun,"]},{"Key":"from @keshaun,","Fragments":["I"]},{"Key":"@keshaun, I","Fragments":["simplified"]},{"Key":"regex by","Fragments":["using"]},{"Key":"the [^\\w]","Fragments":["to"]},{"Key":"[^\\w] to","Fragments":["clean"]},{"Key":"clean the","Fragments":["string.","input."]},{"Key":"Since performance","Fragments":["appears"]},{"Key":"performance appears","Fragments":["to"]},{"Key":"be important","Fragments":["to","for","in","and"]},{"Key":"important to","Fragments":["you,","passing","get","you."]},{"Key":"to you,","Fragments":["you","you"]},{"Key":"you, you","Fragments":["could","might"]},{"Key":"more by","Fragments":["not","using"]},{"Key":"calling \"_wordCharacters.Contains(c)\"","Fragments":["twice"]},{"Key":"\"_wordCharacters.Contains(c)\" twice","Fragments":["inside"]},{"Key":"twice inside","Fragments":["the"]},{"Key":"loop like","Fragments":["this:","this,","this."]},{"Key":"if (currentWord.Length","Fragments":["\u003e"]},{"Key":"(currentWord.Length \u003e","Fragments":["0)"]},{"Key":"wonder which","Fragments":["is"]},{"Key":"is faster,","Fragments":["building","there"]},{"Key":"faster, building","Fragments":["a"]},{"Key":"string character","Fragments":["by"]},{"Key":"character by","Fragments":["character","character","character","character,","index."]},{"Key":"by character","Fragments":["using","match","scan."]},{"Key":"character using","Fragments":["the"]},{"Key":"the StringBuilder","Fragments":["class","as"]},{"Key":"StringBuilder class","Fragments":["as"]},{"Key":"you do,","Fragments":["or"]},{"Key":"do, or","Fragments":["keeping"]},{"Key":"or keeping","Fragments":["a"]},{"Key":"a start","Fragments":["position","value","index"]},{"Key":"start position","Fragments":["and"]},{"Key":"position and","Fragments":["length"]},{"Key":"and length","Fragments":["for"]},{"Key":"length for","Fragments":["the"]},{"Key":"current word","Fragments":["and"]},{"Key":"then grabbing","Fragments":["words"]},{"Key":"grabbing words","Fragments":["out"]},{"Key":"words out","Fragments":["of"]},{"Key":"phrase using","Fragments":["the"]},{"Key":"the String.Substring","Fragments":["method."]},{"Key":"previous comments,","Fragments":["but"]},{"Key":"comments, but","Fragments":["the","I'd"]},{"Key":"with 'sanitizing'","Fragments":["the"]},{"Key":"'sanitizing' the","Fragments":["input"]},{"Key":"before than","Fragments":["splitting"]},{"Key":"than splitting","Fragments":["it"]},{"Key":"splitting it","Fragments":["is","into"]},{"Key":"to process","Fragments":["the","the","all","through","the","numbers","the"]},{"Key":"process the","Fragments":["entire","string","string.","case","whole","valid"]},{"Key":"entire string.","Fragments":["Since"]},{"Key":"string. Since","Fragments":["you"]},{"Key":"are processing","Fragments":["the"]},{"Key":"processing the","Fragments":["entire","sequence","words"]},{"Key":"string once","Fragments":["already","and","I"]},{"Key":"once already","Fragments":["(during"]},{"Key":"already (during","Fragments":["RemoveUnwanted)"]},{"Key":"(during RemoveUnwanted)","Fragments":["it"]},{"Key":"RemoveUnwanted) it","Fragments":["would"]},{"Key":"the splitting","Fragments":["at"]},{"Key":"splitting at","Fragments":["the"]},{"Key":"One option","Fragments":["is"]},{"Key":"option is","Fragments":["to","\u003ccode\u003evar"]},{"Key":"use Regex","Fragments":["as","very","frequently,","for"]},{"Key":"Regex as","Fragments":["mentioned"]},{"Key":"as mentioned","Fragments":["above."]},{"Key":"mentioned above.","Fragments":["Another"]},{"Key":"above. Another","Fragments":["is"]},{"Key":"write your","Fragments":["own"]},{"Key":"own Split","Fragments":["function"]},{"Key":"Split function","Fragments":["that","has"]},{"Key":"that keeps","Fragments":["track"]},{"Key":"keeps track","Fragments":["of"]},{"Key":"beginning of","Fragments":["valid","the","Match()."]},{"Key":"valid words","Fragments":["and","(though","instead"]},{"Key":"and pulls","Fragments":["them"]},{"Key":"pulls them","Fragments":["out"]},{"Key":"After lots","Fragments":["of"]},{"Key":"of refactors","Fragments":["followed"]},{"Key":"refactors followed","Fragments":["by"]},{"Key":"by error","Fragments":["prone"]},{"Key":"prone search","Fragments":["and"]},{"Key":"search and","Fragments":["replaces","assign"]},{"Key":"and replaces","Fragments":["I"]},{"Key":"replaces I","Fragments":["have"]},{"Key":"found var","Fragments":["to"]},{"Key":"var to","Fragments":["be"]},{"Key":"an invaluable","Fragments":["maintenance"]},{"Key":"invaluable maintenance","Fragments":["tool."]},{"Key":"maintenance tool.","Fragments":["I"]},{"Key":"tool. I","Fragments":["often"]},{"Key":"often even","Fragments":["use"]},{"Key":"even use","Fragments":["it","foreach,"]},{"Key":"for int","Fragments":["(outside"]},{"Key":"int (outside","Fragments":["of"]},{"Key":"(outside of","Fragments":["for"]},{"Key":"indexes which","Fragments":["tend"]},{"Key":"which tend","Fragments":["to"]},{"Key":"few areas","Fragments":["where"]},{"Key":"areas where","Fragments":["you"]},{"Key":"could tighten","Fragments":["up"]},{"Key":"tighten up","Fragments":["your","your"]},{"Key":"code. Check","Fragments":["my"]},{"Key":"Check my","Fragments":["solution"]},{"Key":"solution if","Fragments":["you"]},{"Key":"The Split","Fragments":["function"]},{"Key":"function has","Fragments":["to","a"]},{"Key":"to traverse","Fragments":["the","two"]},{"Key":"traverse the","Fragments":["string"]},{"Key":"string itself.","Fragments":["Since"]},{"Key":"itself. Since","Fragments":["you"]},{"Key":"just traversed","Fragments":["the"]},{"Key":"traversed the","Fragments":["string"]},{"Key":"string yourself,","Fragments":["why"]},{"Key":"yourself, why","Fragments":["not"]},{"Key":"not go","Fragments":["ahead"]},{"Key":"and split","Fragments":["as","strings"]},{"Key":"split as","Fragments":["you"]},{"Key":"you go?","Fragments":["It"]},{"Key":"go? It","Fragments":["seems"]},{"Key":"much extra","Fragments":["work"]},{"Key":"extra work","Fragments":["to","where"]},{"Key":"make Split's","Fragments":["job"]},{"Key":"Split's job","Fragments":["easier."]},{"Key":"the deep","Fragments":["nested","nesting"]},{"Key":"deep nested","Fragments":["loops"]},{"Key":"nested loops","Fragments":["would"]},{"Key":"loops would","Fragments":["not"]},{"Key":"pass your","Fragments":["code"]},{"Key":"code review,","Fragments":["then"]},{"Key":"review, then","Fragments":["I"]},{"Key":"take them","Fragments":["out."]},{"Key":"them out.","Fragments":["I","However,"]},{"Key":"have seen/written","Fragments":["most"]},{"Key":"seen/written most","Fragments":["valid"]},{"Key":"most valid","Fragments":["permutations"]},{"Key":"valid permutations","Fragments":["of"]},{"Key":"permutations of","Fragments":["this"]},{"Key":"code, now","Fragments":["it"]},{"Key":"is up","Fragments":["to","the"]},{"Key":"decide which","Fragments":["is","response"]},{"Key":"is best.","Fragments":["If"]},{"Key":"best. If","Fragments":["it"]},{"Key":"think is","Fragments":["best","all","the","a"]},{"Key":"is best","Fragments":["then","I"]},{"Key":"best then","Fragments":["that"]},{"Key":"means you","Fragments":["and","match"]},{"Key":"don't share","Fragments":["a"]},{"Key":"share a","Fragments":["brain,"]},{"Key":"a brain,","Fragments":["which"]},{"Key":"brain, which","Fragments":["we"]},{"Key":"we already","Fragments":["knew."]},{"Key":"a feeling","Fragments":["I","everybody","I"]},{"Key":"feeling I","Fragments":["should","could"]},{"Key":"Linq query","Fragments":["but","is"]},{"Key":"query but","Fragments":["I"]},{"Key":"version (in","Fragments":["the"]},{"Key":"the comments),","Fragments":["it"]},{"Key":"comments), it","Fragments":["may"]},{"Key":"that negating","Fragments":["the"]},{"Key":"negating the","Fragments":["test"]},{"Key":"test might","Fragments":["make"]},{"Key":"understand (deMorgan's","Fragments":["laws!)"]},{"Key":"(deMorgan's laws!)","Fragments":["but"]},{"Key":"laws!) but","Fragments":["then"]},{"Key":"then again","Fragments":["maybe"]},{"Key":"again maybe","Fragments":["not."]},{"Key":"maybe not.","Fragments":["Incidentally"]},{"Key":"not. Incidentally","Fragments":["your"]},{"Key":"Incidentally your","Fragments":["Lambda"]},{"Key":"your Lambda","Fragments":["syntax"]},{"Key":"Lambda syntax","Fragments":["is"]},{"Key":"pretty different","Fragments":["than"]},{"Key":"different than","Fragments":["mine,","other"]},{"Key":"than mine,","Fragments":["I"]},{"Key":"mine, I","Fragments":["can't","looked","built"]},{"Key":"can't tell","Fragments":["which"]},{"Key":"tell which","Fragments":["one"]},{"Key":"which one","Fragments":["I"]},{"Key":"the 'a-zA-Z0-9'","Fragments":["in"]},{"Key":"'a-zA-Z0-9' in","Fragments":["the"]},{"Key":"expression with","Fragments":["'\\w'"]},{"Key":"with '\\w'","Fragments":["(which"]},{"Key":"'\\w' (which","Fragments":["is"]},{"Key":"is a-zA-Z0-9_).","Fragments":["The"]},{"Key":"a-zA-Z0-9_). The","Fragments":["extra"]},{"Key":"extra support","Fragments":["of"]},{"Key":"support of","Fragments":["'_'"]},{"Key":"of '_'","Fragments":["as"]},{"Key":"'_' as","Fragments":["part"]},{"Key":"word won't","Fragments":["be"]},{"Key":"a consideration,","Fragments":["this"]},{"Key":"consideration, this","Fragments":["algorithm"]},{"Key":"algorithm requires","Fragments":["scanning"]},{"Key":"requires scanning","Fragments":["the"]},{"Key":"scanning the","Fragments":["string","string","string"]},{"Key":"string twice","Fragments":["-"]},{"Key":"twice -","Fragments":["once","once"]},{"Key":"- once","Fragments":["to","for"]},{"Key":"once to","Fragments":["replace","split."]},{"Key":"replace characters","Fragments":["and","and"]},{"Key":"and once","Fragments":["to","when","for","as"]},{"Key":"to split.","Fragments":["Look"]},{"Key":"split. Look","Fragments":["at"]},{"Key":"Look at","Fragments":["Regex.Match","mine","Zip","Linq","my"]},{"Key":"at Regex.Match","Fragments":["to"]},{"Key":"any criticism","Fragments":["on"]},{"Key":"criticism on","Fragments":["my","your"]},{"Key":"description may","Fragments":["have"]},{"Key":"have changed","Fragments":["since","your"]},{"Key":"changed since","Fragments":["you"]},{"Key":"you submitted","Fragments":["as","the"]},{"Key":"submitted as","Fragments":["there"]},{"Key":"test checking","Fragments":["that"]},{"Key":"the strands","Fragments":["have","are"]},{"Key":"strands have","Fragments":["the"]},{"Key":"length which","Fragments":["the"]},{"Key":"doesn't pass.","Fragments":["In"]},{"Key":"implementation notes","Fragments":["in","in"]},{"Key":"notes in","Fragments":["the","the"]},{"Key":"readme it","Fragments":["tells"]},{"Key":"it tells","Fragments":["us"]},{"Key":"tells us","Fragments":["that"]},{"Key":"us that","Fragments":["we"]},{"Key":"we shall","Fragments":["only"]},{"Key":"shall only","Fragments":["be"]},{"Key":"passed strands","Fragments":["of"]},{"Key":"strands of","Fragments":["the","the","unequal","equal","equal"]},{"Key":"length -","Fragments":["the","Implementation"]},{"Key":"test contradicts","Fragments":["this"]},{"Key":"exercise on","Fragments":["Eular"]},{"Key":"on Eular","Fragments":["a"]},{"Key":"Eular a","Fragments":["couple"]},{"Key":"couple weeks","Fragments":["ago.","at"]},{"Key":"weeks ago.","Fragments":["They"]},{"Key":"ago. They","Fragments":["go"]},{"Key":"They go","Fragments":["through"]},{"Key":"good optimizations.","Fragments":["The"]},{"Key":"optimizations. The","Fragments":["requirements"]},{"Key":"The requirements","Fragments":["for"]},{"Key":"exercise preclude","Fragments":["some"]},{"Key":"preclude some","Fragments":["of"]},{"Key":"those optimization","Fragments":["so"]},{"Key":"optimization so","Fragments":["I"]},{"Key":"didn't bother","Fragments":["with","with","to","making"]},{"Key":"with them.","Fragments":["The","Need"]},{"Key":"them. The","Fragments":["optimizations"]},{"Key":"The optimizations","Fragments":["could"]},{"Key":"optimizations could","Fragments":["have"]},{"Key":"been implemented","Fragments":["without"]},{"Key":"implemented without","Fragments":["too"]},{"Key":"without too","Fragments":["much"]},{"Key":"trouble given","Fragments":["the"]},{"Key":"cases but","Fragments":["the","it","could"]},{"Key":"the specs","Fragments":["don't","state.","would"]},{"Key":"specs don't","Fragments":["limit"]},{"Key":"don't limit","Fragments":["the"]},{"Key":"limit the","Fragments":["number"]},{"Key":"of multiples","Fragments":["and"]},{"Key":"multiples and","Fragments":["pretty"]},{"Key":"and pretty","Fragments":["soon"]},{"Key":"pretty soon","Fragments":["the"]},{"Key":"soon the","Fragments":["optimization"]},{"Key":"the optimization","Fragments":["cost"]},{"Key":"optimization cost","Fragments":["more"]},{"Key":"cost more","Fragments":["than"]},{"Key":"My previous","Fragments":["iteration","submission"]},{"Key":"previous iteration","Fragments":["is","of","is","for"]},{"Key":"and succinct,","Fragments":["using"]},{"Key":"succinct, using","Fragments":["a"]},{"Key":"a Regex.Match","Fragments":["for"]},{"Key":"Regex.Match for","Fragments":["splitting"]},{"Key":"for splitting","Fragments":["words"]},{"Key":"splitting words","Fragments":["out."]},{"Key":"words out.","Fragments":["However"]},{"Key":"out. However","Fragments":["as"]},{"Key":"However as","Fragments":["I"]},{"Key":"through other's","Fragments":["submissions"]},{"Key":"other's submissions","Fragments":["I","I"]},{"Key":"not perform","Fragments":["well."]},{"Key":"perform well.","Fragments":["The"]},{"Key":"well. The","Fragments":["string","reason"]},{"Key":"The string","Fragments":["will"]},{"Key":"string will","Fragments":["be"]},{"Key":"be scanned","Fragments":["at"]},{"Key":"scanned at","Fragments":["least"]},{"Key":"two or","Fragments":["three"]},{"Key":"or three","Fragments":["times"]},{"Key":"three times","Fragments":["and","before"]},{"Key":"and regular","Fragments":["expressions"]},{"Key":"expressions also","Fragments":["take"]},{"Key":"also take","Fragments":["extra","a"]},{"Key":"take extra","Fragments":["time."]},{"Key":"a version","Fragments":["that","which"]},{"Key":"be limited","Fragments":["to"]},{"Key":"limited to","Fragments":["a"]},{"Key":"single pass","Fragments":["of","efficiently,","for"]},{"Key":"pass of","Fragments":["the"]},{"Key":"string. Here","Fragments":["is"]},{"Key":"up with.","Fragments":["I","Hope",":)","I"]},{"Key":"with. I","Fragments":["would","used","decided"]},{"Key":"much faster","Fragments":["than"]},{"Key":"performance was","Fragments":["my"]},{"Key":"my ultimate","Fragments":["goal,"]},{"Key":"ultimate goal,","Fragments":["I"]},{"Key":"goal, I","Fragments":["would"]},{"Key":"not create","Fragments":["an","a","an"]},{"Key":"of strings","Fragments":["and","to","for","back?","back?","back?","back?","back?","onto"]},{"Key":"strings and","Fragments":["then","check","subtract","seeing","comparing","strings","collections"]},{"Key":"then scan","Fragments":["the"]},{"Key":"scan the","Fragments":["array","string","string","string","string"]},{"Key":"final dictionary,","Fragments":["but"]},{"Key":"but instead","Fragments":["as","returned"]},{"Key":"instead as","Fragments":["each"]},{"Key":"as each","Fragments":["word"]},{"Key":"word was","Fragments":["discovered"]},{"Key":"was discovered","Fragments":["I"]},{"Key":"discovered I","Fragments":["would"]},{"Key":"would apply","Fragments":["it"]},{"Key":"apply it","Fragments":["directly"]},{"Key":"it directly","Fragments":["to","in"]},{"Key":"directly to","Fragments":["the","the"]},{"Key":"dictionary. However,","Fragments":["for"]},{"Key":"However, for","Fragments":["me,","these"]},{"Key":"me, this","Fragments":["was","seems"]},{"Key":"an exercise","Fragments":["in","wants","in","like","this"]},{"Key":"in splitting","Fragments":["the"]},{"Key":"pass efficiently,","Fragments":["so"]},{"Key":"efficiently, so","Fragments":["I"]},{"Key":" Parameter","Fragments":["needs"]},{"Key":"Parameter needs","Fragments":["to"]},{"Key":"for 1582","Fragments":["year,"]},{"Key":"1582 year,","Fragments":["when"]},{"Key":"year, when","Fragments":["Gregorian"]},{"Key":"when Gregorian","Fragments":["calendar"]},{"Key":"calendar starts,","Fragments":["otherwise"]},{"Key":"starts, otherwise","Fragments":["output"]},{"Key":"otherwise output","Fragments":["would"]},{"Key":"output would","Fragments":["not"]},{"Key":"be valid.","Fragments":["Otherwise"]},{"Key":"valid. Otherwise","Fragments":["looks"]},{"Key":"Otherwise looks","Fragments":["great.","good."]},{"Key":"like injecting","Fragments":["the"]},{"Key":"injecting the","Fragments":["Name"]},{"Key":"the Name","Fragments":["generator"]},{"Key":"Name generator","Fragments":["-"]},{"Key":"generator -","Fragments":["great"]},{"Key":"- great","Fragments":["for"]},{"Key":"for unit","Fragments":["testing"]},{"Key":"unit testing","Fragments":["-","where"]},{"Key":"testing -","Fragments":["though"]},{"Key":"- though","Fragments":["I","I","in","in","for","the"]},{"Key":"probably have","Fragments":["left","used","the"]},{"Key":"name generator","Fragments":["to"]},{"Key":"generator to","Fragments":["worry"]},{"Key":"the format","Fragments":["(count","from","you"]},{"Key":"format (count","Fragments":["of"]},{"Key":"(count of","Fragments":["letters"]},{"Key":"and numbers)","Fragments":["rather"]},{"Key":"numbers) rather","Fragments":["than"]},{"Key":"robot worry","Fragments":["about"]},{"Key":"it. If","Fragments":["we"]},{"Key":"we change","Fragments":["the"]},{"Key":"naming policy","Fragments":["(say"]},{"Key":"policy (say","Fragments":["to"]},{"Key":"(say to","Fragments":["add"]},{"Key":"some non-alphanumeric","Fragments":["chars)"]},{"Key":"non-alphanumeric chars)","Fragments":["we"]},{"Key":"chars) we","Fragments":["need"]},{"Key":"the generator","Fragments":["\u003cb\u003eand\u003c/b\u003e"]},{"Key":"generator \u003cb\u003eand\u003c/b\u003e","Fragments":["the"]},{"Key":"\u003cb\u003eand\u003c/b\u003e the","Fragments":["Robot."]},{"Key":" Options:","Fragments":["Another"]},{"Key":"Options: Another","Fragments":["possibility"]},{"Key":"Another possibility","Fragments":["for"]},{"Key":"possibility for","Fragments":["the"]},{"Key":"the Reset","Fragments":["is"]},{"Key":"Reset is","Fragments":["to"]},{"Key":"to set","Fragments":["it","to","it","the","a","array[0]","an","Dictionary","'_head'"]},{"Key":"to null","Fragments":["not","when"]},{"Key":"null not","Fragments":["empty"]},{"Key":"not empty","Fragments":["and"]},{"Key":"private string","Fragments":["_name;","GetAreaCode()","CheckNum(string"]},{"Key":"string Name","Fragments":["{"]},{"Key":"return _name","Fragments":["??"]},{"Key":"_name ??","Fragments":["(_name"]},{"Key":"?? (_name","Fragments":["="]},{"Key":"(_name =","Fragments":["GetNewName());"]},{"Key":"= GetNewName());","Fragments":["}"]},{"Key":"terse for","Fragments":["those"]},{"Key":"for those","Fragments":["who","two","that"]},{"Key":"those who","Fragments":["like","hold"]},{"Key":"who like","Fragments":["that"]},{"Key":"that sort","Fragments":["of"]},{"Key":"Your Count","Fragments":["method"]},{"Key":"Count method","Fragments":["seems","was","that"]},{"Key":"seems strange","Fragments":["here"]},{"Key":"strange here","Fragments":["as"]},{"Key":"the methodology","Fragments":["for"]},{"Key":"methodology for","Fragments":["the"]},{"Key":"you go","Fragments":["count","through","for","for","for"]},{"Key":"go count","Fragments":["all"]},{"Key":"that match","Fragments":["in"]},{"Key":"match in","Fragments":["the","size."]},{"Key":"string when","Fragments":["instead"]},{"Key":"when instead","Fragments":["you"]},{"Key":"instead you","Fragments":["can","add","can"]},{"Key":"can reference","Fragments":["a","the"]},{"Key":"reference a","Fragments":["dictionary"]},{"Key":"dictionary you've","Fragments":["created"]},{"Key":"you've created","Fragments":["by"]},{"Key":"created by","Fragments":["key"]},{"Key":"by key","Fragments":["to"]},{"Key":"just look","Fragments":["up"]},{"Key":"up that","Fragments":["character's","function;"]},{"Key":"that character's","Fragments":["count?"]},{"Key":"character's count?","Fragments":["That"]},{"Key":"count? That","Fragments":["makes"]},{"Key":"but seems","Fragments":["a","over","some"]},{"Key":"odd as","Fragments":["your"]},{"Key":"your go-to","Fragments":["public"]},{"Key":"go-to public","Fragments":["method"]},{"Key":"noticed you're","Fragments":["not"]},{"Key":"not storing","Fragments":["a"]},{"Key":"storing a","Fragments":["created","value","an"]},{"Key":"a created","Fragments":["dictionary"]},{"Key":"created dictionary","Fragments":["at"]},{"Key":"dictionary at","Fragments":["all,"]},{"Key":"all, here.","Fragments":["It"]},{"Key":"more straightforward","Fragments":["to","approach.","and","for"]},{"Key":"straightforward to","Fragments":["use","implement"]},{"Key":"use your","Fragments":["BuildNucleotideDictionary()","class","Keep","code."]},{"Key":"your BuildNucleotideDictionary()","Fragments":["method"]},{"Key":"BuildNucleotideDictionary() method","Fragments":["to"]},{"Key":"or readonly","Fragments":["Dictionary","static"]},{"Key":"readonly Dictionary","Fragments":["field"]},{"Key":"Dictionary field","Fragments":["variable"]},{"Key":"field variable","Fragments":["in"]},{"Key":"the DNA","Fragments":["class,","strand.","class","String."]},{"Key":"DNA class,","Fragments":["and"]},{"Key":"then reference","Fragments":["the"]},{"Key":"reference the","Fragments":["key","double","Dictionary"]},{"Key":"key from","Fragments":["that"]},{"Key":"from that","Fragments":["Dictionary","I"]},{"Key":"that Dictionary","Fragments":["by"]},{"Key":"Dictionary by","Fragments":["looking"]},{"Key":"character value","Fragments":["in"]},{"Key":"your Count","Fragments":["method."]},{"Key":"didn't spend","Fragments":["a"]},{"Key":"spend a","Fragments":["ton","lot"]},{"Key":"time analyzing","Fragments":["this"]},{"Key":"analyzing this","Fragments":["before"]},{"Key":"decided I","Fragments":["would","like","should","was"]},{"Key":"would submit","Fragments":["it,"]},{"Key":"submit it,","Fragments":["so"]},{"Key":"really take","Fragments":["a"]},{"Key":"time considering","Fragments":["trade"]},{"Key":"considering trade","Fragments":["offs."]},{"Key":"trade offs.","Fragments":["I"]},{"Key":"offs. I","Fragments":["was"]},{"Key":"more concerned","Fragments":["if"]},{"Key":"concerned if","Fragments":["it"]},{"Key":"it worked","Fragments":["or","out.","on"]},{"Key":"worked or","Fragments":["not."]},{"Key":"My direction","Fragments":["was"]},{"Key":"direction was","Fragments":["really"]},{"Key":"just me","Fragments":["figuring"]},{"Key":"me figuring","Fragments":["out"]},{"Key":"what made","Fragments":["sense","sense"]},{"Key":"made sense","Fragments":["and","first,"]},{"Key":"sense and","Fragments":["coding"]},{"Key":"did look","Fragments":["at"]},{"Key":"at someone","Fragments":["elses"]},{"Key":"someone elses","Fragments":["code"]},{"Key":"elses code","Fragments":["on"]},{"Key":"the internet,","Fragments":["and"]},{"Key":"internet, and","Fragments":["realized"]},{"Key":"that mine","Fragments":["may"]},{"Key":"mine may","Fragments":["not"]},{"Key":"readable. It's","Fragments":["readable"]},{"Key":"It's readable","Fragments":["to","and"]},{"Key":"me, and","Fragments":["generally"]},{"Key":"and generally","Fragments":["less"]},{"Key":"generally less","Fragments":["is"]},{"Key":"less is","Fragments":["more","more"]},{"Key":"more but","Fragments":["I"]},{"Key":"been way","Fragments":["more"]},{"Key":"readable. Also,","Fragments":["that"]},{"Key":"Also, that","Fragments":["other"]},{"Key":"that other","Fragments":["person's"]},{"Key":"other person's","Fragments":["code"]},{"Key":"person's code","Fragments":["did"]},{"Key":"code did","Fragments":["some"]},{"Key":"some validation","Fragments":["which"]},{"Key":"validation which","Fragments":["I"]},{"Key":"for chaining","Fragments":["the"]},{"Key":"chaining the","Fragments":["constructors"]},{"Key":"the constructors","Fragments":["so","are"]},{"Key":"constructors so","Fragments":["that"]},{"Key":"a change","Fragments":["need","needs","to"]},{"Key":"change need","Fragments":["to"]},{"Key":": this","Fragments":["(new","(new"]},{"Key":"this (new","Fragments":["[]{5,3})","[]{3,5}){}"]},{"Key":"(new []{5,3})","Fragments":["{}"]},{"Key":"you choose","Fragments":["to","to","to","to"]},{"Key":"Dictionary for","Fragments":["the","the","this?","this?","this."]},{"Key":"grades instead","Fragments":["of"]},{"Key":"array? You","Fragments":["can"]},{"Key":"can assume","Fragments":["that"]},{"Key":"small number","Fragments":["of"]},{"Key":"of grades","Fragments":["(probably"]},{"Key":"grades (probably","Fragments":["12),"]},{"Key":"(probably 12),","Fragments":["so"]},{"Key":"12), so","Fragments":["wouldn't"]},{"Key":"so wouldn't","Fragments":["an"]},{"Key":"wouldn't an","Fragments":["array"]},{"Key":"array be","Fragments":["a"]},{"Key":"the SortedSet","Fragments":["to"]},{"Key":"SortedSet to","Fragments":["a"]},{"Key":"a List","Fragments":["and","that","with","instead.","or","because","of","of","(hint:","and"]},{"Key":"List and","Fragments":["then","all"]},{"Key":"call List.Sort","Fragments":["after"]},{"Key":"List.Sort after","Fragments":["any"]},{"Key":"after any","Fragments":["Add,"]},{"Key":"any Add,","Fragments":["you"]},{"Key":"Add, you","Fragments":["get"]},{"Key":"same sorted","Fragments":["order,","word"]},{"Key":"sorted order,","Fragments":["but"]},{"Key":"point. Cdroulers","Fragments":["seems"]},{"Key":"Cdroulers seems","Fragments":["to"]},{"Key":"be indicating","Fragments":["that"]},{"Key":"indicating that","Fragments":["you","there's"]},{"Key":"function named","Fragments":["IsInvalidPhoneNumber"]},{"Key":"named IsInvalidPhoneNumber","Fragments":["and"]},{"Key":"IsInvalidPhoneNumber and","Fragments":["if"]},{"Key":"pass 12345678901","Fragments":["to"]},{"Key":"12345678901 to","Fragments":["it,"]},{"Key":"get true","Fragments":["back."]},{"Key":"true back.","Fragments":["So,"]},{"Key":"back. So,","Fragments":["I"]},{"Key":"I passed","Fragments":["a"]},{"Key":"passed a","Fragments":["valid","null"]},{"Key":"valid phone","Fragments":["number"]},{"Key":"and got","Fragments":["back","pretty","LeapTest.csproj?","rid"]},{"Key":"got back","Fragments":["that","to"]},{"Key":"back that","Fragments":["it"]},{"Key":"is invalid?","Fragments":["Maybe"]},{"Key":"invalid? Maybe","Fragments":["you"]},{"Key":"Maybe you","Fragments":["could"]},{"Key":"to IsNormalizedPhoneNumber","Fragments":["or"]},{"Key":"IsNormalizedPhoneNumber or","Fragments":["something"]},{"Key":"chose this","Fragments":["approach","structure","structure"]},{"Key":"this approach","Fragments":["to","because"]},{"Key":"be solved","Fragments":["with"]},{"Key":"solved with","Fragments":["just"]},{"Key":"just 1","Fragments":["or"]},{"Key":"or 2","Fragments":["lines"]},{"Key":"something that's","Fragments":["hard"]},{"Key":"that's hard","Fragments":["to"]},{"Key":"understand when","Fragments":["looking"]},{"Key":"it scans","Fragments":["the"]},{"Key":"scans the","Fragments":["input"]},{"Key":"string 4","Fragments":["times","times,"]},{"Key":"4 times","Fragments":["(one","(and"]},{"Key":"times (one","Fragments":["for"]},{"Key":"(one for","Fragments":["each"]},{"Key":"the nucleotides)","Fragments":["and"]},{"Key":"nucleotides) and","Fragments":["doesn't"]},{"Key":"doesn't validate","Fragments":["that"]},{"Key":"there weren't","Fragments":["any"]},{"Key":"weren't any","Fragments":["invalid"]},{"Key":"any invalid","Fragments":["characters","characters","input,"]},{"Key":"invalid characters","Fragments":["in","and","by"]},{"Key":"input string.","Fragments":["Can"]},{"Key":"string. Can","Fragments":["you"]},{"Key":"and detect","Fragments":["invalid"]},{"Key":"detect invalid","Fragments":["characters?"]},{"Key":"Also, mark","Fragments":["the"]},{"Key":"the 'set'","Fragments":["property","on","for"]},{"Key":"'set' property","Fragments":["of"]},{"Key":"property of","Fragments":["'NucleotideCounts'","a","that"]},{"Key":"of 'NucleotideCounts'","Fragments":["as"]},{"Key":"'NucleotideCounts' as","Fragments":["private"]},{"Key":"as private","Fragments":["so","-","(or"]},{"Key":"private so","Fragments":["external"]},{"Key":"so external","Fragments":["classes"]},{"Key":"external classes","Fragments":["can't"]},{"Key":"classes can't","Fragments":["change"]},{"Key":"caller requests","Fragments":["the"]},{"Key":"requests the","Fragments":["students"]},{"Key":"students in","Fragments":["a","that"]},{"Key":"particular grade","Fragments":["before"]},{"Key":"grade before","Fragments":["having"]},{"Key":"before having","Fragments":["put"]},{"Key":"having put","Fragments":["any"]},{"Key":"put any","Fragments":["students"]},{"Key":"any students","Fragments":["in"]},{"Key":"that grade,","Fragments":["your","so"]},{"Key":"grade, your","Fragments":["code"]},{"Key":"code will","Fragments":["create","help","be","throw","ironically","be","be"]},{"Key":"List to","Fragments":["return","a","the","hold"]},{"Key":"the caller;","Fragments":["then"]},{"Key":"caller; then","Fragments":["when"]},{"Key":"caller actually","Fragments":["adds"]},{"Key":"actually adds","Fragments":["a"]},{"Key":"a student","Fragments":["to","to"]},{"Key":"student to","Fragments":["that","grade"]},{"Key":"that grade","Fragments":["it","because"]},{"Key":"grade it","Fragments":["will"]},{"Key":"list again.","Fragments":["Can"]},{"Key":"again. Can","Fragments":["you"]},{"Key":"you fix","Fragments":["that?","that?"]},{"Key":"readability first","Fragments":["version"]},{"Key":"version was","Fragments":["quite"]},{"Key":"was quite","Fragments":["large."]},{"Key":"quite large.","Fragments":["However,"]},{"Key":"large. However,","Fragments":["after"]},{"Key":"However, after","Fragments":["refreshing"]},{"Key":"after refreshing","Fragments":["some"]},{"Key":"refreshing some","Fragments":["boolean"]},{"Key":"some boolean","Fragments":["algebra"]},{"Key":"boolean algebra","Fragments":["basics"]},{"Key":"algebra basics","Fragments":["of"]},{"Key":"to open","Fragments":["brackets,"]},{"Key":"open brackets,","Fragments":["second"]},{"Key":"brackets, second","Fragments":["iteration"]},{"Key":"iteration version","Fragments":["is"]},{"Key":"not less","Fragments":["readable."]},{"Key":"is _REAL_","Fragments":["picky,"]},{"Key":"_REAL_ picky,","Fragments":["but"]},{"Key":"picky, but","Fragments":["in"]},{"Key":"in PhoneNumber,","Fragments":["why"]},{"Key":"PhoneNumber, why","Fragments":["reuse"]},{"Key":"why reuse","Fragments":["'number'?"]},{"Key":"reuse 'number'?","Fragments":["Why"]},{"Key":"'number'? Why","Fragments":["not"]},{"Key":"not directly","Fragments":["assign"]},{"Key":"directly assign","Fragments":["it"]},{"Key":"assign it","Fragments":["to"]},{"Key":"to this.Number?","Fragments":["That"]},{"Key":"this.Number? That","Fragments":["way,"]},{"Key":"That way,","Fragments":["if"]},{"Key":"way, if","Fragments":["the","you"]},{"Key":"is 10","Fragments":["you"]},{"Key":"10 you","Fragments":["don't"]},{"Key":"mine (minus","Fragments":["Gregorian"]},{"Key":"(minus Gregorian","Fragments":["check),"]},{"Key":"Gregorian check),","Fragments":["so"]},{"Key":"check), so","Fragments":["I"]},{"Key":"will critque","Fragments":["yours"]},{"Key":"critque yours","Fragments":["the"]},{"Key":"yours the","Fragments":["same"]},{"Key":"submitted mine,","Fragments":["I"]},{"Key":"looked on","Fragments":["the"]},{"Key":"the internet","Fragments":["for"]},{"Key":"internet for","Fragments":["others"]},{"Key":"for others","Fragments":["people's"]},{"Key":"others people's","Fragments":["version"]},{"Key":"people's version","Fragments":["of"]},{"Key":"of finding","Fragments":["a"]},{"Key":"finding a","Fragments":["leap"]},{"Key":"in c","Fragments":["sharp"]},{"Key":"c sharp","Fragments":["and"]},{"Key":"sharp and","Fragments":["ours"]},{"Key":"and ours","Fragments":["doesn't"]},{"Key":"ours doesn't","Fragments":["seem"]},{"Key":"as readable.","Fragments":["His"]},{"Key":"readable. His","Fragments":["looked"]},{"Key":"His looked","Fragments":["like"]},{"Key":"looked like","Fragments":["this","this:","there"]},{"Key":" ((year","Fragments":["%"]},{"Key":"if ((year","Fragments":["%","%"]},{"Key":"And I","Fragments":["thought","think","_do_","find","like","think","have","still"]},{"Key":"really readable.","Fragments":["Plus"]},{"Key":"readable. Plus","Fragments":["he"]},{"Key":"Plus he","Fragments":["did"]},{"Key":"he did","Fragments":["validation"]},{"Key":"did validation","Fragments":["before"]},{"Key":"validation before","Fragments":["that."]},{"Key":"before that.","Fragments":["However"]},{"Key":"that. However","Fragments":["I"]},{"Key":"However I","Fragments":["can","would","think"]},{"Key":"see both","Fragments":["ways"]},{"Key":"ways being","Fragments":["good."]},{"Key":"I've considered","Fragments":["these"]},{"Key":"considered these","Fragments":["2"]},{"Key":"these 2","Fragments":["remarks"]},{"Key":"2 remarks","Fragments":["on"]},{"Key":"remarks on","Fragments":["the"]},{"Key":" ```Roster```","Fragments":["in"]},{"Key":"```Roster``` in","Fragments":["this"]},{"Key":"internal state.","Fragments":["How"]},{"Key":"state. How","Fragments":["can"]},{"Key":"How can","Fragments":["you","we","we"]},{"Key":"you protect","Fragments":["it?"]},{"Key":"protect it?","Fragments":[":)"]},{"Key":"I'm you","Fragments":["not"]},{"Key":"not sure,","Fragments":["but"]},{"Key":"I dont","Fragments":["think","like"]},{"Key":"dont think","Fragments":["you"]},{"Key":"to protect","Fragments":["the"]},{"Key":"protect the","Fragments":["methods.","value"]},{"Key":"think 'x.Key'","Fragments":["is"]},{"Key":"'x.Key' is","Fragments":["inefficient,"]},{"Key":"is inefficient,","Fragments":["so"]},{"Key":"inefficient, so","Fragments":["using"]},{"Key":"variable 'newKey'","Fragments":["doesn't"]},{"Key":"'newKey' doesn't","Fragments":["seem"]},{"Key":"to buy","Fragments":["much."]},{"Key":"After being","Fragments":["inspired"]},{"Key":"being inspired","Fragments":["by"]},{"Key":"inspired by","Fragments":["some"]},{"Key":"by some","Fragments":["of"]},{"Key":"linq based","Fragments":["submissions"]},{"Key":"based submissions","Fragments":["to"]},{"Key":"submissions to","Fragments":["other","figure","clarify!"]},{"Key":"other exercises,","Fragments":["I"]},{"Key":"exercises, I","Fragments":["figured"]},{"Key":"figured I'd","Fragments":["better"]},{"Key":"I'd better","Fragments":["learn"]},{"Key":"better learn","Fragments":["it"]},{"Key":"learn it","Fragments":["myself."]},{"Key":"it myself.","Fragments":["so..."]},{"Key":"myself. so...","Fragments":["is"]},{"Key":"so... is","Fragments":["it"]},{"Key":"it readable,","Fragments":["or"]},{"Key":"readable, or","Fragments":["hideous?"]},{"Key":"or hideous?","Fragments":["I"]},{"Key":"hideous? I","Fragments":["can't"]},{"Key":"solution other","Fragments":["than"]},{"Key":"the obvious.","Fragments":["Do"]},{"Key":"obvious. Do","Fragments":["you"]},{"Key":"any idea","Fragments":["how"]},{"Key":"better this","Fragments":["performs"]},{"Key":"this performs","Fragments":["compared"]},{"Key":"performs compared","Fragments":["to"]},{"Key":"simple \"check","Fragments":["every"]},{"Key":"\"check every","Fragments":["number"]},{"Key":"every number","Fragments":["from","by","left"]},{"Key":"number from","Fragments":["1"]},{"Key":"to `to`\".","Fragments":["I"]},{"Key":"`to`\". I","Fragments":["am"]},{"Key":"not proficient","Fragments":["in"]},{"Key":"proficient in","Fragments":["my"]},{"Key":"my O()s","Fragments":["but"]},{"Key":"O()s but","Fragments":["I"]},{"Key":"suspect in","Fragments":["the"]},{"Key":"case this","Fragments":["is","is","is","is","is"]},{"Key":"as good","Fragments":["as"]},{"Key":"good as","Fragments":["the"]},{"Key":"the \"every","Fragments":["number\""]},{"Key":"\"every number\"","Fragments":["method"]},{"Key":"number\" method","Fragments":["and"]},{"Key":" @zella,","Fragments":["Thank"]},{"Key":"@zella, Thank","Fragments":["you"]},{"Key":"the overly","Fragments":["vague"]},{"Key":"overly vague","Fragments":["comment."]},{"Key":"only see","Fragments":["3"]},{"Key":"see 3","Fragments":["real"]},{"Key":"3 real","Fragments":["differences"]},{"Key":"real differences","Fragments":["in"]},{"Key":"in our","Fragments":["code","code"]},{"Key":"our code","Fragments":["so","is"]},{"Key":"comment was","Fragments":["genuine"]},{"Key":"was genuine","Fragments":["or"]},{"Key":"genuine or","Fragments":["just"]},{"Key":"a poke","Fragments":["to"]},{"Key":"poke to","Fragments":["evoke"]},{"Key":"to evoke","Fragments":["criticism"]},{"Key":"evoke criticism","Fragments":["on"]},{"Key":"You expose","Fragments":["NucleotideCounts"]},{"Key":"expose NucleotideCounts","Fragments":["directly"]},{"Key":"NucleotideCounts directly","Fragments":["which"]},{"Key":"directly which","Fragments":["is"]},{"Key":"2) You","Fragments":["don't","are"]},{"Key":"don't throw","Fragments":["an"]},{"Key":"invalid Nucleotide","Fragments":["in"]},{"Key":"Nucleotide in","Fragments":["the"]},{"Key":"3) You","Fragments":["explicitly","are","have"]},{"Key":"You explicitly","Fragments":["create"]},{"Key":"explicitly create","Fragments":["a"]},{"Key":"separate char","Fragments":["array"]},{"Key":"array in","Fragments":["your"]},{"Key":"your foreach","Fragments":["loop"]},{"Key":"that string","Fragments":["types","to","array"]},{"Key":"string types","Fragments":["are"]},{"Key":"are char","Fragments":["arrays."]},{"Key":" (","Fragments":["foreach(char"]},{"Key":"( foreach(char","Fragments":["C"]},{"Key":"foreach(char C","Fragments":["in"]},{"Key":"C in","Fragments":["StringVariable)"]},{"Key":"in StringVariable)","Fragments":["produces"]},{"Key":"StringVariable) produces","Fragments":["the"]},{"Key":"produces the","Fragments":["same"]},{"Key":"Very readable,","Fragments":["but","concise"]},{"Key":"like readability","Fragments":["overkill"]},{"Key":"readability overkill","Fragments":["to"]},{"Key":"overkill to","Fragments":["me","get","write","use"]},{"Key":"me personally.","Fragments":["Not"]},{"Key":"personally. Not","Fragments":["by"]},{"Key":"Not by","Fragments":["much"]},{"Key":"by much","Fragments":["though."]},{"Key":"much though.","Fragments":["You"]},{"Key":"though. You","Fragments":["could"]},{"Key":"done something","Fragments":["like","against"]},{"Key":"return isDivisibleBy4","Fragments":["\u0026\u0026"]},{"Key":"\u0026\u0026 (!isDivisibleBy100","Fragments":["||","||","||"]},{"Key":"(!isDivisibleBy100 ||","Fragments":["isDivisibleBy400)","isDivisibleBy400);","isDivisibleBy400))."]},{"Key":"The lambda","Fragments":["is"]},{"Key":"lambda is","Fragments":["a"]},{"Key":"nice addition.","Fragments":["Bringing"]},{"Key":"addition. Bringing","Fragments":["functional"]},{"Key":"Bringing functional","Fragments":["program"]},{"Key":"functional program","Fragments":["into"]},{"Key":"program into","Fragments":["the"]},{"Key":"the fold","Fragments":["is"]},{"Key":"fold is","Fragments":["a"]},{"Key":"a bold","Fragments":["move."]},{"Key":"Too many","Fragments":["levels","comments,","helper","Lists"]},{"Key":"many levels","Fragments":["deep!","of"]},{"Key":"levels deep!","Fragments":["If"]},{"Key":"deep! If","Fragments":["you"]},{"Key":"much indentation,","Fragments":["break"]},{"Key":"indentation, break","Fragments":["it"]},{"Key":"into helper","Fragments":["functions"]},{"Key":"done mine.","Fragments":["More"]},{"Key":"mine. More","Fragments":["validation"]},{"Key":"More validation","Fragments":["on"]},{"Key":"validation on","Fragments":["the"]},{"Key":"wasn't a","Fragments":["number"]},{"Key":"number would","Fragments":["have"]},{"Key":"gone the","Fragments":["extra","other"]},{"Key":"extra mile","Fragments":["for"]},{"Key":"mile for","Fragments":["me,"]},{"Key":"me, but","Fragments":["still"]},{"Key":"still well","Fragments":["done."]},{"Key":"readable it","Fragments":["is,"]},{"Key":"is, debugging","Fragments":["would"]},{"Key":"debugging would","Fragments":["be"]},{"Key":"a sinch","Fragments":["looking"]},{"Key":"sinch looking","Fragments":["like"]},{"Key":"looking like","Fragments":["that."]},{"Key":" Yep.","Fragments":["Have"]},{"Key":"Yep. Have","Fragments":["done."]},{"Key":"Have done.","Fragments":["I"]},{"Key":"I matched","Fragments":["in"]},{"Key":"matched in","Fragments":["with"]},{"Key":"in with","Fragments":["the"]},{"Key":"the DateTime","Fragments":["func","to","object"]},{"Key":"DateTime func","Fragments":["that"]},{"Key":"func that","Fragments":["throws"]},{"Key":"that throws","Fragments":["an","an"]},{"Key":"for less","Fragments":["than","than","is","than"]},{"Key":"1. Didn't","Fragments":["worry"]},{"Key":"Didn't worry","Fragments":["about"]},{"Key":"Look solid.","Fragments":["Readability"]},{"Key":"solid. Readability","Fragments":["comes"]},{"Key":"Readability comes","Fragments":["with"]},{"Key":"comes with","Fragments":["understanding."]},{"Key":"with understanding.","Fragments":["Nice"]},{"Key":"understanding. Nice","Fragments":["and"]},{"Key":"comment David.","Fragments":["I"]},{"Key":"David. I","Fragments":["really"]},{"Key":"approach you","Fragments":["provided."]},{"Key":"provided. In","Fragments":["the"]},{"Key":"the third","Fragments":["iteration","digit","character","side","side"]},{"Key":"I've added","Fragments":["two","another"]},{"Key":"added two","Fragments":["versions"]},{"Key":"two versions","Fragments":["of"]},{"Key":"method, one","Fragments":["with"]},{"Key":"one with","Fragments":["so","what"]},{"Key":"with so","Fragments":["to"]},{"Key":"so to","Fragments":["speak"]},{"Key":"to speak","Fragments":["boolean"]},{"Key":"speak boolean","Fragments":["expression,"]},{"Key":"boolean expression,","Fragments":["and"]},{"Key":"expression, and","Fragments":["another"]},{"Key":"and another","Fragments":["with","starts."]},{"Key":"another with","Fragments":["If"]},{"Key":"with If","Fragments":["statements."]},{"Key":"can agree","Fragments":["that"]},{"Key":"that If","Fragments":["statements"]},{"Key":"statements approach","Fragments":["looks"]},{"Key":"approach looks","Fragments":["slightly"]},{"Key":"looks slightly","Fragments":["more"]},{"Key":"slightly more","Fragments":["readable,","difficult","efficient","efficient","readable","readable","verbose","readable.","readable"]},{"Key":"quickly read","Fragments":["and"]},{"Key":"understand boolean","Fragments":["expressions"]},{"Key":"boolean expressions","Fragments":["(what"]},{"Key":"expressions (what","Fragments":["we"]},{"Key":"(what we","Fragments":["as"]},{"Key":"we as","Fragments":["a"]},{"Key":"a developers","Fragments":["should"]},{"Key":"developers should","Fragments":["be"]},{"Key":"do :),","Fragments":["it"]},{"Key":":), it","Fragments":["allows"]},{"Key":"it allows","Fragments":["you","for"]},{"Key":"allows you","Fragments":["to","to"]},{"Key":"save quite","Fragments":["a"]},{"Key":"of space,","Fragments":["without"]},{"Key":"space, without","Fragments":["trading"]},{"Key":"without trading","Fragments":["off"]},{"Key":"trading off","Fragments":["a"]},{"Key":"off a","Fragments":["lot","single"]},{"Key":"return (isDivisibleBy4)","Fragments":["\u0026\u0026"]},{"Key":"(isDivisibleBy4) \u0026\u0026","Fragments":["(!isDivisibleBy100"]},{"Key":"it's slightly","Fragments":["more"]},{"Key":"some looping","Fragments":["if"]},{"Key":"looping if","Fragments":["you"]},{"Key":"foreach once","Fragments":["you've"]},{"Key":"once you've","Fragments":["found"]},{"Key":"you've found","Fragments":["a"]},{"Key":"pretty new","Fragments":["to","to","to","to"]},{"Key":"to coding","Fragments":["and"]},{"Key":"coding and","Fragments":["use"]},{"Key":"it mostly","Fragments":["as"]},{"Key":"mostly as","Fragments":["a"]},{"Key":"a hobby.","Fragments":["I"]},{"Key":"hobby. I","Fragments":["wasnt"]},{"Key":"I wasnt","Fragments":["sure"]},{"Key":"wasnt sure","Fragments":["if"]},{"Key":"really approach","Fragments":["a"]},{"Key":"approach a","Fragments":["professional"]},{"Key":"a professional","Fragments":["would"]},{"Key":"professional would","Fragments":["take"]},{"Key":"or not,","Fragments":["and"]},{"Key":"not, and","Fragments":["welcome"]},{"Key":"and welcome","Fragments":["constructive"]},{"Key":"welcome constructive","Fragments":["feedback."]},{"Key":"a reasoning","Fragments":["behind"]},{"Key":"reasoning behind","Fragments":["wrapping","using","declaring"]},{"Key":"behind wrapping","Fragments":["`%"]},{"Key":"wrapping `%","Fragments":["divisor"]},{"Key":"`% divisor","Fragments":["==","=="]},{"Key":"divisor ==","Fragments":["0`","0`"]},{"Key":"in `IsDivisibleBy`","Fragments":["?"]},{"Key":"`IsDivisibleBy` ?","Fragments":["Doesn't"]},{"Key":"? Doesn't","Fragments":["`%"]},{"Key":"Doesn't `%","Fragments":["divisor"]},{"Key":"0` mean","Fragments":["is"]},{"Key":"by without","Fragments":["having"]},{"Key":"an `IsEqualToZero()`","Fragments":["and"]},{"Key":"`IsEqualToZero()` and","Fragments":["have"]},{"Key":"have `IsEqualToZero(value","Fragments":["%"]},{"Key":"`IsEqualToZero(value %","Fragments":["divisor)`?"]},{"Key":" @sterling","Fragments":["That"]},{"Key":"@sterling That","Fragments":["is"]},{"Key":"I *usually*","Fragments":["do"]},{"Key":"*usually* do","Fragments":["not"]},{"Key":"not assign","Fragments":["something"]},{"Key":"assign something","Fragments":["to"]},{"Key":"public facing","Fragments":["variable"]},{"Key":"facing variable","Fragments":["until"]},{"Key":"variable until","Fragments":["it's"]},{"Key":"until it's","Fragments":["been"]},{"Key":"it's been","Fragments":["validated.","sitting","a"]},{"Key":"been validated.","Fragments":["It's"]},{"Key":"validated. It's","Fragments":["just"]},{"Key":"initially began","Fragments":["this"]},{"Key":"began this","Fragments":["as"]},{"Key":"but quickly","Fragments":["realized"]},{"Key":"quickly realized","Fragments":["that"]},{"Key":"that if/else","Fragments":["conditionals"]},{"Key":"if/else conditionals","Fragments":["by"]},{"Key":"conditionals by","Fragments":["nature"]},{"Key":"by nature","Fragments":["return"]},{"Key":"nature return","Fragments":["a"]},{"Key":"boolean, so","Fragments":["I"]},{"Key":"simply assigned","Fragments":["the"]},{"Key":"conditional to","Fragments":["the","the"]},{"Key":"also took","Fragments":["it","on","out","@blanca"]},{"Key":"took it","Fragments":["one"]},{"Key":"it one","Fragments":["step","statement"]},{"Key":"one step","Fragments":["further"]},{"Key":"step further","Fragments":["and"]},{"Key":"further and","Fragments":["avoided"]},{"Key":"and avoided","Fragments":["the"]},{"Key":"avoided the","Fragments":["local"]},{"Key":"variable altogether,","Fragments":["returning"]},{"Key":"altogether, returning","Fragments":["the"]},{"Key":"conditional itself,","Fragments":["but"]},{"Key":"itself, but","Fragments":["this","what","instead"]},{"Key":"code difficult","Fragments":["to"]},{"Key":"understand upon","Fragments":["first"]},{"Key":"upon first","Fragments":["glance,"]},{"Key":"glance, so","Fragments":["I"]},{"Key":"I (begrudgingly)","Fragments":["went"]},{"Key":"(begrudgingly) went","Fragments":["back"]},{"Key":"a 2-line","Fragments":["solution."]},{"Key":"solution. If","Fragments":["there"]},{"Key":"a nitpick","Fragments":["it","for"]},{"Key":"nitpick it","Fragments":["would"]},{"Key":"be moving","Fragments":["the"]},{"Key":"moving the","Fragments":["matches"]},{"Key":"the matches","Fragments":["into","and"]},{"Key":"matches into","Fragments":["their"]},{"Key":"own methods.","Fragments":["The"]},{"Key":"benefit being","Fragments":["readability"]},{"Key":"being readability","Fragments":["for"]},{"Key":"the eye","Fragments":["and","of"]},{"Key":"eye and","Fragments":["unit"]},{"Key":"and unit","Fragments":["testing."]},{"Key":"testing. It","Fragments":["would"]},{"Key":"read 'if(AskingAQuestion(question))'","Fragments":["or"]},{"Key":"'if(AskingAQuestion(question))' or","Fragments":["'if(AskingAForcefulQuestion(question))'"]},{"Key":"I reviewed","Fragments":["some"]},{"Key":"reviewed some","Fragments":["of"]},{"Key":"submissions and","Fragments":["followed","found","realized"]},{"Key":"and followed","Fragments":["the"]},{"Key":"followed the","Fragments":["advice"]},{"Key":"the advice","Fragments":["provided","on","it's"]},{"Key":"advice provided","Fragments":["by"]},{"Key":"provided by","Fragments":["others"]},{"Key":"by others","Fragments":["to"]},{"Key":"others to","Fragments":["clean","be"]},{"Key":"method were","Fragments":["a"]},{"Key":"a no-no.","Fragments":["I"]},{"Key":"no-no. I","Fragments":["need"]},{"Key":"fix some","Fragments":["of"]},{"Key":"my white","Fragments":["space"]},{"Key":"space issues,","Fragments":["but"]},{"Key":"issues, but","Fragments":["this"]},{"Key":"submission is","Fragments":["an","worthy","more","even"]},{"Key":"an improvement","Fragments":["of","nonetheless"]},{"Key":"improvement of","Fragments":["iteration"]},{"Key":"of iteration","Fragments":["1."]},{"Key":" Encapsulating","Fragments":["the"]},{"Key":"Encapsulating the","Fragments":["NothingToSay(),"]},{"Key":"the NothingToSay(),","Fragments":["IsScreaming(),"]},{"Key":"NothingToSay(), IsScreaming(),","Fragments":["and"]},{"Key":"IsScreaming(), and","Fragments":["IsQuestion()"]},{"Key":"and IsQuestion()","Fragments":["allows"]},{"Key":"IsQuestion() allows","Fragments":["me"]},{"Key":"allows me","Fragments":["to"]},{"Key":"to extend","Fragments":["the"]},{"Key":"extend the","Fragments":["requirements","`Linq`"]},{"Key":"requirements without","Fragments":["having"]},{"Key":"to mess","Fragments":["the"]},{"Key":"mess the","Fragments":["Hey()"]},{"Key":"with additional","Fragments":["code."]},{"Key":"additional code.","Fragments":["I"]},{"Key":"be honest","Fragments":["and"]},{"Key":"honest and","Fragments":["say"]},{"Key":"did _not_","Fragments":["look"]},{"Key":"_not_ look","Fragments":["up"]},{"Key":"the \"Deaf","Fragments":["Grandma\""]},{"Key":"\"Deaf Grandma\"","Fragments":["link"]},{"Key":"Grandma\" link","Fragments":["and"]},{"Key":"link and","Fragments":["thus"]},{"Key":"thus had","Fragments":["to"]},{"Key":"help me","Fragments":["catch"]},{"Key":"me catch","Fragments":["the"]},{"Key":"catch the","Fragments":["numeric","```KeyNotFoundException```.","KeyNotFoundException,","extra","exceptions"]},{"Key":"numeric only","Fragments":["scenarios."]},{"Key":"only scenarios.","Fragments":["The"]},{"Key":"scenarios. The","Fragments":["Right()"]},{"Key":"The Right()","Fragments":["function"]},{"Key":"Right() function","Fragments":["for"]},{"Key":"more an","Fragments":["effort"]},{"Key":"to validate","Fragments":["extension","it.","input.","that","the","it."]},{"Key":"validate extension","Fragments":["methods."]},{"Key":" Thats","Fragments":["a","it."]},{"Key":"Thats a","Fragments":["good"]},{"Key":"good point,","Fragments":["thanks."]},{"Key":"point, thanks.","Fragments":["Will"]},{"Key":"thanks. Will","Fragments":["update"]},{"Key":"Will update","Fragments":["later."]},{"Key":" @alayna,","Fragments":["Updated"]},{"Key":"@alayna, Updated","Fragments":["with"]},{"Key":"Updated with","Fragments":["the"]},{"Key":"extra List\u003cstring\u003e","Fragments":["creation"]},{"Key":"List\u003cstring\u003e creation","Fragments":["removed."]},{"Key":"did in","Fragments":["here","the"]},{"Key":"in here","Fragments":["to"]},{"Key":"here to","Fragments":["make","improve","test","avoid","*learn*","learn,"]},{"Key":"run faster.","Fragments":["For"]},{"Key":"faster. For","Fragments":["example,"]},{"Key":"in mine","Fragments":["I"]},{"Key":"mine I","Fragments":["convert"]},{"Key":"original string","Fragments":["to","building","is"]},{"Key":"character list","Fragments":["each"]},{"Key":"list each","Fragments":["time","time.","time"]},{"Key":"anagram that","Fragments":["is"]},{"Key":"is fully","Fragments":["contained."]},{"Key":"fully contained.","Fragments":["There"]},{"Key":"contained. There","Fragments":["may"]},{"Key":"be some","Fragments":["advantages","kind","optimization"]},{"Key":"some advantages","Fragments":["to"]},{"Key":"advantages to","Fragments":["that"]},{"Key":"other applications,","Fragments":["but"]},{"Key":"applications, but","Fragments":["in"]},{"Key":"case, your","Fragments":["approach"]},{"Key":"your approach","Fragments":["of","is","reminded","misses","is","I"]},{"Key":"approach of","Fragments":["doing","looking"]},{"Key":"is instantiated","Fragments":["is"]},{"Key":"instantiated is","Fragments":["better."]},{"Key":"better. Looks","Fragments":["good."]},{"Key":"Like the","Fragments":["that","combo","use"]},{"Key":"the that","Fragments":["the"]},{"Key":"very readable","Fragments":["and","and","etc.","and","IMHO.","there"]},{"Key":"and true","Fragments":["to"]},{"Key":"true to","Fragments":["the"]},{"Key":" Nit:","Fragments":["Perhaps"]},{"Key":"Nit: Perhaps","Fragments":["consider"]},{"Key":"Perhaps consider","Fragments":["ways"]},{"Key":"consider ways","Fragments":["of"]},{"Key":"of condensing","Fragments":["the","code"]},{"Key":"by leveraging","Fragments":["the"]},{"Key":"leveraging the","Fragments":["following"]},{"Key":"following from","Fragments":["C#:"]},{"Key":"- (Year","Fragments":["%"]},{"Key":"0) returns","Fragments":["a"]},{"Key":"- then","Fragments":["stringing"]},{"Key":"then stringing","Fragments":["together"]},{"Key":"stringing together","Fragments":["the"]},{"Key":"together the","Fragments":["other"]},{"Key":"Not super","Fragments":["happy"]},{"Key":"super happy","Fragments":["about"]},{"Key":"happy about","Fragments":["this"]},{"Key":"one. Can","Fragments":["probably"]},{"Key":"Can probably","Fragments":["be"]},{"Key":"be improved,","Fragments":["but"]},{"Key":"improved, but","Fragments":["how?"]},{"Key":"This seemed","Fragments":["like","way","too","simpler.","fairly","like"]},{"Key":"most straight","Fragments":["forward"]},{"Key":"forward solution","Fragments":["logically,"]},{"Key":"solution logically,","Fragments":["there"]},{"Key":"logically, there","Fragments":["may"]},{"Key":"realize after","Fragments":["looking"]},{"Key":"code, that","Fragments":["I"]},{"Key":"probably comment","Fragments":["my"]},{"Key":"comment my","Fragments":["if"]},{"Key":"does 2","Fragments":["extra"]},{"Key":"2 extra","Fragments":["calculations","calculations"]},{"Key":"extra calculations","Fragments":["if","when"]},{"Key":"calculations if","Fragments":["the"]},{"Key":"by 4.","Fragments":["Obviously","Obviously","So"]},{"Key":"4. Obviously","Fragments":["doesnt","not"]},{"Key":"Obviously doesnt","Fragments":["make"]},{"Key":"doesnt make","Fragments":["a"]},{"Key":"of difference","Fragments":["on"]},{"Key":"difference on","Fragments":["computers,"]},{"Key":"on computers,","Fragments":["but"]},{"Key":"computers, but","Fragments":["it"]},{"Key":"may in","Fragments":["memory"]},{"Key":"in memory","Fragments":["constrained"]},{"Key":"constrained systems","Fragments":["(eg:"]},{"Key":"systems (eg:","Fragments":["embedded"]},{"Key":"(eg: embedded","Fragments":["systems,"]},{"Key":"embedded systems,","Fragments":["etc)"]},{"Key":"a full-scale","Fragments":["console"]},{"Key":"full-scale console","Fragments":["app"]},{"Key":"app for","Fragments":["this"]},{"Key":"exercise, just","Fragments":["the"]},{"Key":"class itself","Fragments":["will"]},{"Key":"itself will","Fragments":["do."]},{"Key":"will do.","Fragments":["You"]},{"Key":"do. You","Fragments":["can"]},{"Key":"class via","Fragments":["the"]},{"Key":"via the","Fragments":["test"]},{"Key":"test suite.","Fragments":["Also,",":)"]},{"Key":"suite. Also,","Fragments":["try"]},{"Key":"Also, try","Fragments":["getting"]},{"Key":"try getting","Fragments":["each"]},{"Key":"getting each","Fragments":["of"]},{"Key":"statements combined","Fragments":["into"]},{"Key":"combined into","Fragments":["a"]},{"Key":"a single-line","Fragments":["conditional","statement","boolean"]},{"Key":"single-line conditional","Fragments":["(using"]},{"Key":"conditional (using","Fragments":["the"]},{"Key":"|| operators)","Fragments":["to"]},{"Key":"increase the","Fragments":["readability"]},{"Key":"more thing-","Fragments":["your"]},{"Key":"thing- your","Fragments":["use"]},{"Key":"of UInt32","Fragments":["for"]},{"Key":"UInt32 for","Fragments":["your"]},{"Key":"your data","Fragments":["type","but"]},{"Key":"is interesting-","Fragments":["wondering"]},{"Key":"interesting- wondering","Fragments":["why"]},{"Key":"wondering why","Fragments":["you","you"]},{"Key":"you insisted","Fragments":["on"]},{"Key":"insisted on","Fragments":["an"]},{"Key":"extra 2","Fragments":["billion"]},{"Key":"2 billion","Fragments":["years","that"]},{"Key":"billion years","Fragments":["on"]},{"Key":"years on","Fragments":["top"]},{"Key":"on top","Fragments":["of"]},{"Key":"billion that","Fragments":["int"]},{"Key":"that int","Fragments":["already"]},{"Key":"int already","Fragments":["provides?"]},{"Key":"already provides?","Fragments":[":)"]},{"Key":"provides? :)","Fragments":["If"]},{"Key":":) If","Fragments":["you"]},{"Key":"just used","Fragments":["int,","a","`.ToLowerInvariant`","the"]},{"Key":"used int,","Fragments":["you"]},{"Key":"int, you","Fragments":["wouldn't"]},{"Key":"a \"using\"","Fragments":["statement"]},{"Key":"\"using\" statement","Fragments":["at"]},{"Key":"top. It","Fragments":["would"]},{"Key":"calculate B.C.","Fragments":["leap"]},{"Key":"B.C. leap","Fragments":["years,"]},{"Key":"years, if","Fragments":["there"]},{"Key":"were ever","Fragments":["a"]},{"Key":"ever a","Fragments":["reason"]},{"Key":"for doing","Fragments":["that."]},{"Key":"had your","Fragments":["first"]},{"Key":"first suggestion","Fragments":["in"]},{"Key":"suggestion in","Fragments":["my"]},{"Key":"my comments.","Fragments":["I"]},{"Key":"2nd option","Fragments":["you"]},{"Key":"option you","Fragments":["suggested"]},{"Key":"suggested because","Fragments":["it's"]},{"Key":"it's so","Fragments":["short,"]},{"Key":"so short,","Fragments":["but"]},{"Key":"stayed away","Fragments":["from"]},{"Key":"from it","Fragments":["since","to"]},{"Key":"it since","Fragments":["I"]},{"Key":"of looking","Fragments":["at","for"]},{"Key":"at when","Fragments":["you"]},{"Key":"it later.","Fragments":["It's"]},{"Key":"later. It's","Fragments":["not"]},{"Key":"it's complex,","Fragments":["I"]},{"Key":"complex, I","Fragments":["just"]},{"Key":"just think","Fragments":["it"]},{"Key":"could confuse","Fragments":["someone."]},{"Key":"confuse someone.","Fragments":["I"]},{"Key":"someone. I","Fragments":["think"]},{"Key":"to over","Fragments":["simplify"]},{"Key":"over simplify","Fragments":["though."]},{"Key":"simplify though.","Fragments":[":P"]},{"Key":"it. Should","Fragments":["line"]},{"Key":"Should line","Fragments":["18"]},{"Key":"18 say","Fragments":["\"greater"]},{"Key":"say \"greater","Fragments":["than"]},{"Key":"\"greater than","Fragments":["or"]},{"Key":"than or","Fragments":["equal","equal"]},{"Key":"or equal","Fragments":["to","to"]},{"Key":"code runs","Fragments":["2"]},{"Key":"runs 2","Fragments":["extra"]},{"Key":"Obviously not","Fragments":["a"]},{"Key":"run on","Fragments":["a","every"]},{"Key":"a computer,","Fragments":["but"]},{"Key":"computer, but","Fragments":["if"]},{"Key":"an embedded","Fragments":["system,"]},{"Key":"embedded system,","Fragments":["it"]},{"Key":"system, it","Fragments":["may"]},{"Key":"have impact.","Fragments":["Something"]},{"Key":"impact. Something","Fragments":["to"]},{"Key":"Something to","Fragments":["think"]},{"Key":"see something","Fragments":["like"]},{"Key":"like bool","Fragments":["isDivisibleBy4"]},{"Key":"== 0;","Fragments":["and"]},{"Key":"0; and","Fragments":["then"]},{"Key":"statement uses","Fragments":["(isDivisibleBy4"]},{"Key":"uses (isDivisibleBy4","Fragments":["\u0026\u0026"]},{"Key":"|| isDivisibleBy400)).","Fragments":["I"]},{"Key":"isDivisibleBy400)). I","Fragments":["think"]},{"Key":"expressive, but","Fragments":["opinions"]},{"Key":"but opinions","Fragments":["vary"]},{"Key":"opinions vary","Fragments":["and"]},{"Key":"vary and","Fragments":["some"]},{"Key":"the 1","Fragments":["line","liner"]},{"Key":"the longer","Fragments":["version","sequence"]},{"Key":"longer version","Fragments":["is"]},{"Key":"of after","Fragments":["it's"]},{"Key":"after it's","Fragments":["been","calculated."]},{"Key":"been sitting","Fragments":["and"]},{"Key":"sitting and","Fragments":["you"]},{"Key":"it months","Fragments":["later."]},{"Key":"this when","Fragments":["I"]},{"Key":"submitted my","Fragments":["version","code"]},{"Key":"this, and","Fragments":["I","I"]},{"Key":"of check","Fragments":["for"]},{"Key":"for it,","Fragments":["but"]},{"Key":"but 1582","Fragments":["is"]},{"Key":"1582 is","Fragments":["actually"]},{"Key":"year the","Fragments":["current"]},{"Key":"current form","Fragments":["of"]},{"Key":"form of","Fragments":["the","the","a"]},{"Key":"calendar started.","Fragments":["Maybe"]},{"Key":"started. Maybe","Fragments":["line"]},{"Key":"Maybe line","Fragments":["21"]},{"Key":"21 should","Fragments":["use","be"]},{"Key":"use \u003e=","Fragments":["1582?"]},{"Key":" Aah,","Fragments":["generics"]},{"Key":"Aah, generics","Fragments":["are"]},{"Key":"generics are","Fragments":["so"]},{"Key":"are so","Fragments":["beautiful."]},{"Key":"switch in","Fragments":["my","a"]},{"Key":"solution. I'm","Fragments":["on"]},{"Key":"I'm on","Fragments":["the"]},{"Key":"the fence","Fragments":["about"]},{"Key":"fence about","Fragments":["using"]},{"Key":"using input.EndsWith(\"","Fragments":["\")."]},{"Key":"input.EndsWith(\" \").","Fragments":["What"]},{"Key":"\"). What","Fragments":["if"]},{"Key":"if There","Fragments":["was"]},{"Key":"There was","Fragments":["an","a"]},{"Key":"input statement","Fragments":["that"]},{"Key":"that accidentally","Fragments":["had"]},{"Key":"accidentally had","Fragments":["an"]},{"Key":"extra whitespace","Fragments":["character"]},{"Key":"whitespace character","Fragments":["on"]},{"Key":"character on","Fragments":["the"]},{"Key":"the end?","Fragments":["Using"]},{"Key":"end? Using","Fragments":["string.isnullorwhitespace"]},{"Key":"Using string.isnullorwhitespace","Fragments":["might"]},{"Key":"string.isnullorwhitespace might","Fragments":["be"]},{"Key":"Minor ammendments","Fragments":["pinched"]},{"Key":"ammendments pinched","Fragments":["from"]},{"Key":"pinched from","Fragments":["http://exercism.io/submissions/18788dabb80a45cfd56b6d71"]},{"Key":"ternary on","Fragments":["the"]},{"Key":"Grade method.","Fragments":["Very"]},{"Key":"method. Very","Fragments":["elegant."]},{"Key":"pass was","Fragments":["almost"]},{"Key":"was almost","Fragments":["identical"]},{"Key":"almost identical","Fragments":["to","-","times"]},{"Key":"identical to","Fragments":["this."]},{"Key":"to this.","Fragments":["However,"]},{"Key":"doing SelectMany","Fragments":["over"]},{"Key":"SelectMany over","Fragments":["old.Keys","the"]},{"Key":"over old.Keys","Fragments":["just"]},{"Key":"old.Keys just","Fragments":["to"]},{"Key":"index into","Fragments":["the","the","strings","them","strings"]},{"Key":"the Dictionary.","Fragments":["I","If","I","I"]},{"Key":"now from","Fragments":["this"]},{"Key":"just SelectMany","Fragments":["over"]},{"Key":"add clarity.","Fragments":["I"]},{"Key":"clarity. I","Fragments":["was"]},{"Key":"was returning","Fragments":["a","the"]},{"Key":"a KeyValuePair","Fragments":["which"]},{"Key":"KeyValuePair which","Fragments":["is"]},{"Key":"is non-descript,","Fragments":["so"]},{"Key":"non-descript, so","Fragments":["I've"]},{"Key":"updated my","Fragments":["submission.","answer","code","solution","solution."]},{"Key":"so ```\u003e=```,","Fragments":["not"]},{"Key":"```\u003e=```, not","Fragments":["```\u003e```."]},{"Key":"not ```\u003e```.","Fragments":["Sounds"]},{"Key":"```\u003e```. Sounds","Fragments":["good."]},{"Key":"OK, I'll","Fragments":["see"]},{"Key":"find some","Fragments":["better"]},{"Key":"some better","Fragments":["naming."]},{"Key":" Seems","Fragments":["like","I","to","to"]},{"Key":"simple result.","Fragments":["Why"]},{"Key":"result. Why","Fragments":["not"]},{"Key":"not combine","Fragments":["all"]},{"Key":"combine all","Fragments":["those","that"]},{"Key":"those into","Fragments":["one","consideration."]},{"Key":"boolean expression?","Fragments":["You"]},{"Key":"expression? You","Fragments":["could"]},{"Key":"even create","Fragments":["a"]},{"Key":"statement using","Fragments":["the","\u0026\u0026"]},{"Key":"first 3","Fragments":["variables"]},{"Key":"3 variables","Fragments":["that"]},{"Key":"variables that","Fragments":["you","multiply","only"]},{"Key":"Wow, that's","Fragments":["a"]},{"Key":"is clearer.","Fragments":["For","C#"]},{"Key":"clearer. For","Fragments":["even"]},{"Key":"For even","Fragments":["more"]},{"Key":"more simplicity","Fragments":["see"]},{"Key":"simplicity see","Fragments":["the"]},{"Key":"the nits","Fragments":["below."]},{"Key":"1. No","Fragments":["need"]},{"Key":"use if/else","Fragments":["if"]},{"Key":"bool expression","Fragments":["evaluates","is"]},{"Key":"expression evaluates","Fragments":["to","to","to"]},{"Key":"false as","Fragments":["required."]},{"Key":"as required.","Fragments":["So,"]},{"Key":"required. So,","Fragments":["let's"]},{"Key":"So, let's","Fragments":["pretend"]},{"Key":"let's pretend","Fragments":["a"]},{"Key":"pretend a","Fragments":["leap"]},{"Key":"was any","Fragments":["year"]},{"Key":"4 the","Fragments":["method"]},{"Key":"bool IsLeap","Fragments":["(int"]},{"Key":"IsLeap (int","Fragments":["year)"]},{"Key":"boolean inside","Fragments":["the"]},{"Key":"() can","Fragments":["be"]},{"Key":"simplified even","Fragments":["further."]},{"Key":"even further.","Fragments":["Another"]},{"Key":"further. Another","Fragments":["way"]},{"Key":"Another way","Fragments":["to"]},{"Key":"is (every","Fragments":["4"]},{"Key":"(every 4","Fragments":["years"]},{"Key":"4 years","Fragments":["AND"]},{"Key":"years AND","Fragments":["not"]},{"Key":"AND not","Fragments":["every"]},{"Key":"every 100","Fragments":["years)"]},{"Key":"100 years)","Fragments":["OR"]},{"Key":"years) OR","Fragments":["(every"]},{"Key":"OR (every","Fragments":["400"]},{"Key":"(every 400","Fragments":["years)."]},{"Key":"IMHO -","Fragments":["I'd"]},{"Key":"- I'd","Fragments":["stick"]},{"Key":"I'd stick","Fragments":["with"]},{"Key":"the one-liner","Fragments":["your"]},{"Key":"one-liner your","Fragments":["bool"]},{"Key":"your bool","Fragments":["expression"]},{"Key":"\"return isLeap\"","Fragments":["doesn't"]},{"Key":"isLeap\" doesn't","Fragments":["add"]},{"Key":"doesn't add","Fragments":["much","much.","that","anything","any"]},{"Key":"much clarity.","Fragments":["No"]},{"Key":"clarity. No","Fragments":["biggie."]},{"Key":"you returned","Fragments":["the"]},{"Key":"the string.format,","Fragments":["that's"]},{"Key":"string.format, that's","Fragments":["pretty"]},{"Key":"that's pretty","Fragments":["slick."]},{"Key":"curiosity, what's","Fragments":["the"]},{"Key":"best practice","Fragments":["regarding","because"]},{"Key":"practice regarding","Fragments":["multiple"]},{"Key":"regarding multiple","Fragments":["returns"]},{"Key":"a method?","Fragments":["I"]},{"Key":"I heard","Fragments":["that"]},{"Key":"heard that","Fragments":["there"]},{"Key":"one return,","Fragments":["to"]},{"Key":"return, to","Fragments":["simplify"]},{"Key":"code. Does","Fragments":["anyone"]},{"Key":"thoughts or","Fragments":["counter-points??"]},{"Key":"First handling","Fragments":["the"]},{"Key":"Take care","Fragments":["of"]},{"Key":"and its","Fragments":["exceptions.","key.","extension","derivatives"]},{"Key":" Small","Fragments":["question,","optimization,","nitpick"]},{"Key":"Small question,","Fragments":["but"]},{"Key":"question, but","Fragments":["on"]},{"Key":"the area","Fragments":["code,"]},{"Key":"area code,","Fragments":["was"]},{"Key":"code, was","Fragments":["there"]},{"Key":"was there","Fragments":["a","as"]},{"Key":"you separated","Fragments":["out"]},{"Key":"separated out","Fragments":["\")\","]},{"Key":"out \")\",","Fragments":["\""]},{"Key":"\")\", \"","Fragments":["\"?"]},{"Key":"\" \"?","Fragments":["it"]},{"Key":"\"? it","Fragments":["could"]},{"Key":"been \")","Fragments":["\""]},{"Key":"\") \"","Fragments":["with"]},{"Key":"\" with","Fragments":["the"]},{"Key":"In terms","Fragments":["of"]},{"Key":"condensing code","Fragments":["without"]},{"Key":"code without","Fragments":["losing"]},{"Key":"readability, number=regex.replace(number,","Fragments":["@\"[^\\d]\","]},{"Key":"number=regex.replace(number, @\"[^\\d]\",","Fragments":["\"\")"]},{"Key":"@\"[^\\d]\", \"\")","Fragments":["would"]},{"Key":"\"\") would","Fragments":["work"]},{"Key":"as well;","Fragments":["since"]},{"Key":"well; since","Fragments":["we're"]},{"Key":"since we're","Fragments":["not","not"]},{"Key":"we're not","Fragments":["repeating","adding/removing"]},{"Key":"not repeating","Fragments":["the"]},{"Key":"the regex,","Fragments":["I"]},{"Key":"regex, I","Fragments":["don't"]},{"Key":"a need","Fragments":["to"]},{"Key":"own variable.","Fragments":["Thoughts?"]},{"Key":"no code","Fragments":[":("]},{"Key":"Both of","Fragments":["these"]},{"Key":"these work.","Fragments":["And"]},{"Key":"work. And","Fragments":["I"]},{"Key":"the Query","Fragments":["Expression"]},{"Key":"Query Expression","Fragments":["one"]},{"Key":"Expression one","Fragments":["is"]},{"Key":"read. Especially","Fragments":["with","on"]},{"Key":"Especially with","Fragments":["the"]},{"Key":"the selects","Fragments":["inside"]},{"Key":"selects inside","Fragments":["of"]},{"Key":"One note:","Fragments":["The"]},{"Key":"note: The","Fragments":["documentation"]},{"Key":"on ApplicationException","Fragments":["(http://msdn.microsoft.com/en-us/library/system.applicationexception(v=vs.110).aspx)"]},{"Key":"ApplicationException (http://msdn.microsoft.com/en-us/library/system.applicationexception(v=vs.110).aspx)","Fragments":["says"]},{"Key":"(http://msdn.microsoft.com/en-us/library/system.applicationexception(v=vs.110).aspx) says","Fragments":["that"]},{"Key":"one should","Fragments":["derive","use"]},{"Key":"should derive","Fragments":["custom"]},{"Key":"derive custom","Fragments":["exceptions"]},{"Key":"custom exceptions","Fragments":["from"]},{"Key":"exceptions from","Fragments":["\u003cb\u003eException\u003c/b\u003e","your","higher"]},{"Key":"from \u003cb\u003eException\u003c/b\u003e","Fragments":["rather"]},{"Key":"\u003cb\u003eException\u003c/b\u003e rather","Fragments":["than"]},{"Key":"than from","Fragments":["\u003cb\u003eApplicationException\u003c/b\u003e."]},{"Key":" Really?","Fragments":["I","I"]},{"Key":"Really? I","Fragments":["thought","had"]},{"Key":"way around?","Fragments":["Well,"]},{"Key":"around? Well,","Fragments":["cool!"]},{"Key":"Well, cool!","Fragments":["I"]},{"Key":"cool! I","Fragments":["learned"]},{"Key":"learned something","Fragments":["new!","new","today"]},{"Key":"something new!","Fragments":[":)"]},{"Key":"loop but","Fragments":["was","I'm"]},{"Key":"was under","Fragments":["the","the"]},{"Key":"the impression","Fragments":["that","that"]},{"Key":"impression that","Fragments":["for","Exercism"]},{"Key":"loops was","Fragments":["old"]},{"Key":"was old","Fragments":["and"]},{"Key":"old and","Fragments":["foreach"]},{"Key":"foreach was","Fragments":["the"]},{"Key":"the \"modern\"","Fragments":["way."]},{"Key":"Comments are","Fragments":["always","welcome."]},{"Key":"always welcome!","Fragments":[":)"]},{"Key":"No comments","Fragments":["on"]},{"Key":"this one?","Fragments":[":)"]},{"Key":"Performance is","Fragments":["not","much"]},{"Key":"name says,","Fragments":["Nitpick."]},{"Key":"says, Nitpick.","Fragments":["Using"]},{"Key":"Nitpick. Using","Fragments":["\u003cb\u003eMath.Pow()\u003c/b\u003e"]},{"Key":"Using \u003cb\u003eMath.Pow()\u003c/b\u003e","Fragments":["seems"]},{"Key":"\u003cb\u003eMath.Pow()\u003c/b\u003e seems","Fragments":["wasteful"]},{"Key":"seems wasteful","Fragments":["when"]},{"Key":"wasteful when","Fragments":["one"]},{"Key":"just multiply","Fragments":["a"]},{"Key":"multiply a","Fragments":["value"]},{"Key":"by two","Fragments":["for"]},{"Key":"each iteration","Fragments":["and","modulo"]},{"Key":"add (or","Fragments":["not)"]},{"Key":"(or not)","Fragments":["to"]},{"Key":"not) to","Fragments":["the"]},{"Key":"result. It","Fragments":["also"]},{"Key":"also obviates","Fragments":["the"]},{"Key":"obviates the","Fragments":["need"]},{"Key":"result from","Fragments":["a","one","the"]},{"Key":"var result","Fragments":["="]},{"Key":"var mult","Fragments":["="]},{"Key":"mult =","Fragments":["1;"]},{"Key":"(var index","Fragments":["="]},{"Key":"\u003c list.Count;","Fragments":["index++){"]},{"Key":"if (list[index]","Fragments":["=="]},{"Key":"(list[index] ==","Fragments":["'1'){"]},{"Key":" result","Fragments":["+=","=","=","+=","="]},{"Key":"result +=","Fragments":["mult;","_letterScores"]},{"Key":" mult","Fragments":["*=2;"]},{"Key":"your comments,","Fragments":["but"]},{"Key":"to challenge","Fragments":["you","you","you","you"]},{"Key":"challenge you","Fragments":["on","to","to","to"]},{"Key":"all, does","Fragments":["it"]},{"Key":"does it","Fragments":["really","work","in","mean?"]},{"Key":"really matter?","Fragments":["The"]},{"Key":"matter? The","Fragments":["compiler"]},{"Key":"compiler works","Fragments":["for"]},{"Key":"me, not","Fragments":["the"]},{"Key":"Then there","Fragments":["are"]},{"Key":"the JIT-compiler,","Fragments":["who"]},{"Key":"JIT-compiler, who","Fragments":["knows"]},{"Key":"it inlines","Fragments":["and"]},{"Key":"inlines and","Fragments":["not?"]},{"Key":"and not?","Fragments":["I"]},{"Key":"not? I","Fragments":["surely"]},{"Key":"I surely","Fragments":["don't."]},{"Key":"And yes,","Fragments":["the","it","it"]},{"Key":"yes, the","Fragments":["formula"]},{"Key":"is simple,","Fragments":["but"]},{"Key":"I keep","Fragments":["forgetting","seeing"]},{"Key":"keep forgetting","Fragments":["exactly"]},{"Key":"forgetting exactly","Fragments":["how"]},{"Key":"exactly how","Fragments":["the","I"]},{"Key":" FInally,","Fragments":["if"]},{"Key":"FInally, if","Fragments":["I"]},{"Key":"I inline","Fragments":["the"]},{"Key":"expressions as","Fragments":["I"]},{"Key":"have done,","Fragments":["then"]},{"Key":"done, then","Fragments":["the"]},{"Key":"meaning is","Fragments":["lost.","lost."]},{"Key":"is lost.","Fragments":["When","Modulo"]},{"Key":"lost. When","Fragments":["I"]},{"Key":"spend energy","Fragments":["on"]},{"Key":"energy on","Fragments":["thinking"]},{"Key":"on thinking","Fragments":["what"]},{"Key":"thinking what","Fragments":["this"]},{"Key":"what this","Fragments":["means,","looks"]},{"Key":"this means,","Fragments":["I"]},{"Key":"means, I","Fragments":["have"]},{"Key":"expressions in","Fragments":["my"]},{"Key":"head (which","Fragments":["is"]},{"Key":"to do),","Fragments":["but"]},{"Key":"do), but","Fragments":["most"]},{"Key":"most important:","Fragments":["all"]},{"Key":"important: all","Fragments":["the"]},{"Key":"different operators","Fragments":["in"]},{"Key":"this mix","Fragments":["makes"]},{"Key":"mix makes","Fragments":["it"]},{"Key":"all very","Fragments":["hard"]},{"Key":"very hard","Fragments":["to"]},{"Key":"time seeing","Fragments":["where"]},{"Key":"seeing where","Fragments":["one"]},{"Key":"where one","Fragments":["condition"]},{"Key":"condition ends","Fragments":["and"]},{"Key":"ends and","Fragments":["another"]},{"Key":"probably went","Fragments":["overboard"]},{"Key":"went overboard","Fragments":["with"]},{"Key":"with with","Fragments":["the","DateTime.IsLeapYear()"]},{"Key":"number class,","Fragments":["I"]},{"Key":"class, I","Fragments":["give","already"]},{"Key":"I give","Fragments":["you","an"]},{"Key":"Comments would","Fragments":["probably"]},{"Key":"probably do","Fragments":["the"]},{"Key":"stay away","Fragments":["from"]},{"Key":"from comments","Fragments":["as"]},{"Key":"can, and","Fragments":["try"]},{"Key":"language constructs","Fragments":["instead."]},{"Key":"constructs instead.","Fragments":["Reasons"]},{"Key":"instead. Reasons","Fragments":["for"]},{"Key":"Reasons for","Fragments":["that"]},{"Key":"- Variables","Fragments":["and"]},{"Key":"Variables and","Fragments":["methods"]},{"Key":"are executables.","Fragments":["Given"]},{"Key":"executables. Given","Fragments":["good"]},{"Key":"Given good","Fragments":["names,"]},{"Key":"good names,","Fragments":["they"]},{"Key":"names, they","Fragments":["act"]},{"Key":"they act","Fragments":["better"]},{"Key":"act better","Fragments":["than"]},{"Key":"- Comments","Fragments":["go","aren't"]},{"Key":"Comments go","Fragments":["out"]},{"Key":"go out","Fragments":["of"]},{"Key":"Comments aren't","Fragments":["executables"]},{"Key":"aren't executables","Fragments":["so"]},{"Key":"executables so","Fragments":["the"]},{"Key":"the will","Fragments":["almost"]},{"Key":"will almost","Fragments":["always"]},{"Key":"of duplicate.","Fragments":["I"]},{"Key":"duplicate. I","Fragments":["like"]},{"Key":"remove duplicates","Fragments":["as","of"]},{"Key":"duplicates as","Fragments":["much"]},{"Key":"have good","Fragments":["point"]},{"Key":"on reuse,","Fragments":["though."]},{"Key":"reuse, though.","Fragments":["No,"]},{"Key":"though. No,","Fragments":["I"]},{"Key":"No, I","Fragments":["don't","could"]},{"Key":"the Number","Fragments":["class","variable,"]},{"Key":"Number class","Fragments":["or"]},{"Key":"or its","Fragments":["methods."]},{"Key":"its methods.","Fragments":["But"]},{"Key":"But reuse","Fragments":["is"]},{"Key":"reuse is","Fragments":["not","only"]},{"Key":"not why","Fragments":["I"]},{"Key":"way, readability","Fragments":["is."]},{"Key":"just wrote","Fragments":["this"]},{"Key":"for Python","Fragments":["and"]},{"Key":"Python and","Fragments":["there"]},{"Key":"different lengths","Fragments":["strands"]},{"Key":"lengths strands","Fragments":["and"]},{"Key":"strands and","Fragments":["any"]},{"Key":"and any","Fragments":["difference"]},{"Key":"in length","Fragments":["had","as"]},{"Key":"length had","Fragments":["to"]},{"Key":"I'll fetch","Fragments":["the"]},{"Key":"fetch the","Fragments":["most","problems"]},{"Key":"most recent","Fragments":["exercice","prime"]},{"Key":"recent exercice","Fragments":["and"]},{"Key":"exercice and","Fragments":["fix"]},{"Key":"and fix","Fragments":["it."]},{"Key":"of appropriate","Fragments":["tool"]},{"Key":"appropriate tool","Fragments":["for"]},{"Key":"job rather","Fragments":["than"]},{"Key":"than new","Fragments":["or"]},{"Key":"new or","Fragments":["old."]},{"Key":"or old.","Fragments":["If"]},{"Key":"old. If","Fragments":["we"]},{"Key":"working our","Fragments":["way"]},{"Key":"our way","Fragments":["through"]},{"Key":"way through","Fragments":["a"]},{"Key":"a sequence","Fragments":["and","of"]},{"Key":"sequence and","Fragments":["don't"]},{"Key":"the index","Fragments":["then","to","against","of","to","of","in"]},{"Key":"index then","Fragments":["\u003cb\u003eforeach\u003c/b\u003e"]},{"Key":"then \u003cb\u003eforeach\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003eforeach\u003c/b\u003e is","Fragments":["cleaner"]},{"Key":"cleaner -","Fragments":["say,"]},{"Key":"- say,","Fragments":["totting"]},{"Key":"say, totting","Fragments":["the"]},{"Key":"totting the","Fragments":["numbers"]},{"Key":"array (yes,","Fragments":["\u003cb\u003eLinq\u003c/b\u003e"]},{"Key":"(yes, \u003cb\u003eLinq\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003eLinq\u003c/b\u003e is","Fragments":["better","your"]},{"Key":"better still,","Fragments":["but"]},{"Key":"still, but","Fragments":["just"]},{"Key":"just comparing","Fragments":["\u003cb\u003efor\u003c/b\u003e"]},{"Key":"comparing \u003cb\u003efor\u003c/b\u003e","Fragments":["and"]},{"Key":"\u003cb\u003efor\u003c/b\u003e and","Fragments":["\u003cb\u003eforeach\u003c/b\u003e"]},{"Key":"and \u003cb\u003eforeach\u003c/b\u003e","Fragments":["at"]},{"Key":"\u003cb\u003eforeach\u003c/b\u003e at","Fragments":["the"]},{"Key":"var values","Fragments":["=","="]},{"Key":"values =","Fragments":["new","new"]},{"Key":"var sum","Fragments":["=","=","="]},{"Key":"sum =","Fragments":["0;","0;","0L;"]},{"Key":"foreach(var value","Fragments":["in"]},{"Key":" sum+=","Fragments":["value;","values[index];"]},{"Key":"lot cleaner","Fragments":["than","if","without","in"]},{"Key":"\u003c values.Length;","Fragments":["index++){"]},{"Key":"a case","Fragments":["where","where","by","for"]},{"Key":"where we","Fragments":["are","are","are"]},{"Key":"match elements","Fragments":["in"]},{"Key":"elements in","Fragments":["a","the","the","three"]},{"Key":"different arrays,","Fragments":["the"]},{"Key":"arrays, the","Fragments":["\u003cb\u003efor\u003c/b\u003e"]},{"Key":"the \u003cb\u003efor\u003c/b\u003e","Fragments":["loop"]},{"Key":"\u003cb\u003efor\u003c/b\u003e loop","Fragments":["is"]},{"Key":"most \u003cem\u003e'modern'\u003c/em\u003e","Fragments":["way,"]},{"Key":"\u003cem\u003e'modern'\u003c/em\u003e way,","Fragments":["you"]},{"Key":"way, you","Fragments":["might"]},{"Key":"at \u003cb\u003eLinq\u003c/b\u003e.","Fragments":["The"]},{"Key":"\u003cb\u003eLinq\u003c/b\u003e. The","Fragments":["matching/totting"]},{"Key":"The matching/totting","Fragments":["can"]},{"Key":"matching/totting can","Fragments":["be"]},{"Key":"be all","Fragments":["done","that","the"]},{"Key":"all done","Fragments":["in","you"]},{"Key":"var numOff","Fragments":["="]},{"Key":"numOff =","Fragments":["strand1.Select((c,"]},{"Key":"= strand1.Select((c,","Fragments":["n)"]},{"Key":"strand1.Select((c, n)","Fragments":["=\u003e"]},{"Key":"n) =\u003e","Fragments":["c"]},{"Key":"=\u003e c","Fragments":["!=","!=","==","\u003e="]},{"Key":"c !=","Fragments":["strand2[n]","'0'","'1'","2))\u003c/code\u003e."]},{"Key":"!= strand2[n]","Fragments":["?"]},{"Key":"strand2[n] ?","Fragments":["1"]},{"Key":"but reuse","Fragments":["is"]},{"Key":"one design","Fragments":["aspect."]},{"Key":"design aspect.","Fragments":["Making"]},{"Key":"aspect. Making","Fragments":["the"]},{"Key":"Making the","Fragments":["code","setter","KeyGenerator"]},{"Key":"code easy","Fragments":["to","to"]},{"Key":"is another.","Fragments":["I"]},{"Key":"another. I","Fragments":["know"]},{"Key":"want code","Fragments":["to"]},{"Key":"easily understood","Fragments":["when"]},{"Key":"understood when","Fragments":["I"]},{"Key":"And making","Fragments":["simple"]},{"Key":"making simple","Fragments":["code"]},{"Key":"simple code","Fragments":["readable","like","throws"]},{"Key":"good exercise","Fragments":["to"]},{"Key":"exercise to","Fragments":["prepare","date."]},{"Key":"to prepare","Fragments":["us"]},{"Key":"prepare us","Fragments":["for"]},{"Key":"us for","Fragments":["the"]},{"Key":"the harder","Fragments":["ones."]},{"Key":"Interesting point","Fragments":["about"]},{"Key":"about documentation:","Fragments":["I"]},{"Key":"documentation: I","Fragments":["know"]},{"Key":"when Intellisense","Fragments":["informs"]},{"Key":"Intellisense informs","Fragments":["me"]},{"Key":"informs me","Fragments":["of"]},{"Key":"me of","Fragments":["what","those"]},{"Key":"what an","Fragments":["unfamiliar"]},{"Key":"an unfamiliar","Fragments":["method"]},{"Key":"unfamiliar method","Fragments":["really"]},{"Key":"method really","Fragments":["does,"]},{"Key":"really does,","Fragments":["but"]},{"Key":"does, but","Fragments":["not","then"]},{"Key":"much when","Fragments":["it"]},{"Key":"that documentation","Fragments":["myself,"]},{"Key":"documentation myself,","Fragments":["of"]},{"Key":"myself, of","Fragments":["several"]},{"Key":"of several","Fragments":["reasons:"]},{"Key":"- If","Fragments":["I","you","you"]},{"Key":"can name","Fragments":["the"]},{"Key":"thing, then","Fragments":["I"]},{"Key":"- It's","Fragments":["a","just","not"]},{"Key":"a terrible","Fragments":["idea,","name"]},{"Key":"terrible idea,","Fragments":["in"]},{"Key":"idea, in","Fragments":["my"]},{"Key":"opinion, to","Fragments":["mix"]},{"Key":"to mix","Fragments":["code"]},{"Key":"mix code","Fragments":["and"]},{"Key":"and documentation","Fragments":["this"]},{"Key":"documentation this","Fragments":["way."]},{"Key":"this way.","Fragments":["It","You","And"]},{"Key":"way. It","Fragments":["does","looks"]},{"Key":"actual code.","Fragments":["Better"]},{"Key":"code. Better","Fragments":["tooling"]},{"Key":"Better tooling","Fragments":["is"]},{"Key":"tooling is","Fragments":["definitely","wanted."]},{"Key":"- No","Fragments":["one"]},{"Key":"No one","Fragments":["reads"]},{"Key":"one reads","Fragments":["my"]},{"Key":"reads my","Fragments":["help"]},{"Key":"my help","Fragments":["files,"]},{"Key":"help files,","Fragments":["anyway"]},{"Key":"much work.","Fragments":["Again,"]},{"Key":"work. Again,","Fragments":["better"]},{"Key":"Again, better","Fragments":["tooling"]},{"Key":"better tooling","Fragments":["is"]},{"Key":"know guys","Fragments":["what"]},{"Key":"guys what","Fragments":["you"]},{"Key":"mean re","Fragments":["generators."]},{"Key":"re generators.","Fragments":["Still"]},{"Key":"generators. Still","Fragments":["not"]},{"Key":"Still not","Fragments":["needed"]},{"Key":"needed here","Fragments":["think"]},{"Key":"here think","Fragments":["about"]},{"Key":"Technically years","Fragments":["less"]},{"Key":"years less","Fragments":["than"]},{"Key":"than 1582","Fragments":["aren't","instead"]},{"Key":"1582 aren't","Fragments":["in"]},{"Key":"calendar, and","Fragments":["therefore"]},{"Key":"and therefore","Fragments":["cannot"]},{"Key":"therefore cannot","Fragments":["be"]},{"Key":"be leap","Fragments":["years","years"]},{"Key":"years by","Fragments":["the","the"]},{"Key":"Gregorian rules","Fragments":["(they"]},{"Key":"rules (they","Fragments":["could"]},{"Key":"(they could","Fragments":["be"]},{"Key":"Julian calendar's","Fragments":["rules)."]},{"Key":"calendar's rules).","Fragments":["So"]},{"Key":"rules). So","Fragments":["perhaps"]},{"Key":"So perhaps","Fragments":["your"]},{"Key":"perhaps your","Fragments":["code"]},{"Key":"1582 instead","Fragments":["of"]},{"Key":" @tristian","Fragments":["Yup,"]},{"Key":"@tristian Yup,","Fragments":["those"]},{"Key":"Yup, those","Fragments":["would"]},{"Key":"those would","Fragments":["work"]},{"Key":"work too.","Fragments":["The"]},{"Key":"one has","Fragments":["a","been","multiple"]},{"Key":"nice look","Fragments":["to"]},{"Key":"look to","Fragments":["it.","make"]},{"Key":"of ways","Fragments":["to"]},{"Key":"the must","Fragments":["straight"]},{"Key":"must straight","Fragments":["forward,"]},{"Key":"straight forward,","Fragments":["least"]},{"Key":"forward, least","Fragments":["complex."]},{"Key":"least complex.","Fragments":["If"]},{"Key":"complex. If","Fragments":["you"]},{"Key":"be fancy","Fragments":["you"]},{"Key":"fancy you","Fragments":["can"]},{"Key":"put ```i","Fragments":["\u003c"]},{"Key":"```i \u003c","Fragments":["Math.Min(input1.Length,input2.Length)```"]},{"Key":"\u003c Math.Min(input1.Length,input2.Length)```","Fragments":["as"]},{"Key":"Math.Min(input1.Length,input2.Length)``` as","Fragments":["condition"]},{"Key":"as condition","Fragments":["and"]},{"Key":"condition and","Fragments":["you"]},{"Key":"else statement.","Fragments":["But"]},{"Key":"statement. But","Fragments":["that","the"]},{"Key":"add anything,","Fragments":["just"]},{"Key":"just shorten","Fragments":["the"]},{"Key":"shorten the","Fragments":["code"]},{"Key":"Any particular","Fragments":["reason"]},{"Key":"use toBob.EndsWith()","Fragments":["to"]},{"Key":"toBob.EndsWith() to","Fragments":["check"]},{"Key":"\"?\" or","Fragments":["\"!\"?"]},{"Key":"We shouldn't","Fragments":["need"]},{"Key":"shouldn't need","Fragments":["to","to","a","all","to"]},{"Key":"about selecting","Fragments":["a"]},{"Key":"selecting a","Fragments":["length.","random"]},{"Key":" Hamming","Fragments":["is","distances"]},{"Key":"Hamming is","Fragments":["only"]},{"Key":"for strands","Fragments":["of","of"]},{"Key":"- Implementation","Fragments":["notes"]},{"Key":"Implementation notes","Fragments":["-"]},{"Key":"notes -","Fragments":["and"]},{"Key":"test (probably","Fragments":["a"]},{"Key":"(probably a","Fragments":["new","debateable"]},{"Key":"new one","Fragments":[")","for"]},{"Key":"one )","Fragments":["exists"]},{"Key":") exists","Fragments":["to"]},{"Key":"exists to","Fragments":["check"]},{"Key":"is thrown","Fragments":["if"]},{"Key":"thrown if","Fragments":["they"]},{"Key":"Not quite.","Fragments":["There"]},{"Key":"quite. There","Fragments":["is"]},{"Key":"a concept","Fragments":["of"]},{"Key":"the \u003cb\u003eProleptic","Fragments":["Gregorian"]},{"Key":"\u003cb\u003eProleptic Gregorian","Fragments":["Calendar\u003c/b\u003e"]},{"Key":"Gregorian Calendar\u003c/b\u003e","Fragments":["http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar"]},{"Key":"Calendar\u003c/b\u003e http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar","Fragments":["that"]},{"Key":"http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar that","Fragments":["is"]},{"Key":"all dates","Fragments":["prior"]},{"Key":"dates prior","Fragments":["to"]},{"Key":"the adoption","Fragments":["of"]},{"Key":"adoption of","Fragments":["the"]},{"Key":"calendar when","Fragments":["exchanging"]},{"Key":"when exchanging","Fragments":["date/time"]},{"Key":"exchanging date/time","Fragments":["information."]},{"Key":"date/time information.","Fragments":["So"]},{"Key":"information. So","Fragments":["1580,","there"]},{"Key":"So 1580,","Fragments":["say,"]},{"Key":"1580, say,","Fragments":["would"]},{"Key":"say, would","Fragments":["be"]},{"Key":"this purpose.","Fragments":["It"]},{"Key":"purpose. It","Fragments":["wasn't"]},{"Key":"wasn't mentioned","Fragments":["in"]},{"Key":"the spec.","Fragments":["or"]},{"Key":"spec. or","Fragments":["covered"]},{"Key":"or covered","Fragments":["by"]},{"Key":"tests so","Fragments":["I","far"]},{"Key":"went (mostly)","Fragments":["with"]},{"Key":"(mostly) with","Fragments":["with"]},{"Key":"with DateTime.IsLeapYear()","Fragments":["did."]},{"Key":"than calling","Fragments":["\u003cb\u003eSubstring()\u003c/b\u003e"]},{"Key":"calling \u003cb\u003eSubstring()\u003c/b\u003e","Fragments":["and"]},{"Key":"\u003cb\u003eSubstring()\u003c/b\u003e and","Fragments":["creating"]},{"Key":"creating new","Fragments":["strings","instances"]},{"Key":"new strings","Fragments":["for"]},{"Key":"each comparison","Fragments":["it"]},{"Key":"comparison it","Fragments":["is"]},{"Key":"\u003c length;","Fragments":["i++)"]},{"Key":"length; i++)","Fragments":["{"]},{"Key":"also push","Fragments":["for"]},{"Key":"any single","Fragments":["line"]},{"Key":"line block.","Fragments":["It"]},{"Key":"bit picky","Fragments":["but"]},{"Key":"picky but","Fragments":["an"]},{"Key":"but an","Fragments":["error","array","alternate"]},{"Key":"Can happen","Fragments":["very"]},{"Key":"happen very","Fragments":["easily"]},{"Key":"very easily","Fragments":["and","(just"]},{"Key":"easily and","Fragments":["can"]},{"Key":"An alternative","Fragments":["is"]},{"Key":"alternative is","Fragments":["also"]},{"Key":"if (Something)","Fragments":["DoX();"]},{"Key":"bit less","Fragments":["prone","readable"]},{"Key":"less prone","Fragments":["to"]},{"Key":"to error","Fragments":["but"]},{"Key":"error but","Fragments":["has"]},{"Key":"but has","Fragments":["mixed","no","10"]},{"Key":"has mixed","Fragments":["popularity"]},{"Key":"mixed popularity","Fragments":["in"]},{"Key":"popularity in","Fragments":["C#"]},{"Key":" @randy,","Fragments":["They"]},{"Key":"@randy, They","Fragments":["replaced"]},{"Key":"They replaced","Fragments":["the"]},{"Key":"2 length","Fragments":["tests"]},{"Key":"length tests","Fragments":["with"]},{"Key":"tests with","Fragments":["the","smaller"]},{"Key":"there as","Fragments":["of"]},{"Key":"as of","Fragments":["4"]},{"Key":"4 days","Fragments":["ago"]},{"Key":"days ago","Fragments":["when"]},{"Key":"ago when","Fragments":["I"]},{"Key":" Assert.That(Hamming.Compute(\"AAACTAGGGG\",\"AGGCTAGCGGTAGGAC\"),","Fragments":["Is.EqualTo(3));"]},{"Key":" Assert.That(Hamming.Compute(\"GACTACGGACAGGGTAGGGAAT\",\"GACATCGCACACC\"),","Fragments":["Is.EqualTo(5));"]},{"Key":"your approach.","Fragments":["It"]},{"Key":"approach. It","Fragments":["is"]},{"Key":"very logical","Fragments":["and"]},{"Key":"logical and","Fragments":["is","short"]},{"Key":"is affective","Fragments":["at"]},{"Key":"affective at","Fragments":["communicating"]},{"Key":"at communicating","Fragments":["the"]},{"Key":"communicating the","Fragments":["name"]},{"Key":"name format","Fragments":["via"]},{"Key":"format via","Fragments":["code."]},{"Key":"The approach","Fragments":["for"]},{"Key":"approach for","Fragments":["selecting","a","a","the","simplicity."]},{"Key":"for selecting","Fragments":["a"]},{"Key":"a random","Fragments":["character","name","distribution","seed),","order"]},{"Key":"random character","Fragments":["in"]},{"Key":"proper range","Fragments":["is"]},{"Key":"range is","Fragments":["clever"]},{"Key":"clever and","Fragments":["you","not","concise,"]},{"Key":"store a","Fragments":["character","value","value"]},{"Key":"few people","Fragments":["use"]},{"Key":"methods (.Where()","Fragments":["and"]},{"Key":"(.Where() and","Fragments":[".Select())"]},{"Key":"and .Select())","Fragments":["to"]},{"Key":".Select()) to","Fragments":["replace"]},{"Key":"replace loop","Fragments":["which"]},{"Key":"loop which","Fragments":["is"]},{"Key":"that hadn't","Fragments":["occurred","already"]},{"Key":"hadn't occurred","Fragments":["to"]},{"Key":"me and","Fragments":["I'd"]},{"Key":"and I'd","Fragments":["like"]},{"Key":"using in","Fragments":["my"]},{"Key":"about going","Fragments":["through"]},{"Key":"multiples but","Fragments":["I"]},{"Key":"store all","Fragments":["the","the","the"]},{"Key":"multiples found","Fragments":["to"]},{"Key":"for duplicates.","Fragments":["But"]},{"Key":"duplicates. But","Fragments":["I"]},{"Key":"didn't run","Fragments":["through"]},{"Key":"numbers either.","Fragments":["It"]},{"Key":"either. It","Fragments":["sounds","can"]},{"Key":"It sounds","Fragments":["like","a"]},{"Key":"sounds like","Fragments":["the","a"]},{"Key":"the savings","Fragments":["in"]},{"Key":"savings in","Fragments":["time"]},{"Key":"in time","Fragments":["is"]},{"Key":"time is","Fragments":["probably"]},{"Key":"probably worth","Fragments":["the","the"]},{"Key":"worth the","Fragments":["memory","trade"]},{"Key":"the memory","Fragments":["usage","since"]},{"Key":"memory usage","Fragments":["trade"]},{"Key":"usage trade","Fragments":["off"]},{"Key":"off in","Fragments":["this","developer","performance","GenerateName"]},{"Key":" OT:","Fragments":["What"]},{"Key":"OT: What","Fragments":["do"]},{"Key":"by 'intend","Fragments":["here'?"]},{"Key":"Couple of","Fragments":["things..."]},{"Key":"of things...","Fragments":["When"]},{"Key":"things... When","Fragments":["you"]},{"Key":"use \"var","Fragments":["result"]},{"Key":"\"var result","Fragments":["="]},{"Key":"= 0;\",","Fragments":["result"]},{"Key":"0;\", result","Fragments":["is"]},{"Key":"an \"int\"","Fragments":["now"]},{"Key":"\"int\" now","Fragments":["so"]},{"Key":"converting it","Fragments":["to","to","to","to"]},{"Key":"a decimal","Fragments":["in","number"]},{"Key":"decimal in","Fragments":["the","the"]},{"Key":"it yourself,","Fragments":["I'd"]},{"Key":"yourself, I'd","Fragments":["rather"]},{"Key":"rather trust","Fragments":["a"]},{"Key":"trust a","Fragments":["Math"]},{"Key":"a Math","Fragments":["library","major"]},{"Key":"Math library","Fragments":["to"]},{"Key":"library to","Fragments":["do"]},{"Key":"that work","Fragments":["for","if","would","for","the"]},{"Key":"me. Someone","Fragments":["would"]},{"Key":"Someone would","Fragments":["understand"]},{"Key":"would understand","Fragments":["the"]},{"Key":"by seeing","Fragments":["Math.Pow()"]},{"Key":"seeing Math.Pow()","Fragments":["instead"]},{"Key":"Math.Pow() instead","Fragments":["of"]},{"Key":"of seeing","Fragments":["some"]},{"Key":"seeing some","Fragments":["\"mult\""]},{"Key":"some \"mult\"","Fragments":["variable"]},{"Key":"\"mult\" variable","Fragments":["being"]},{"Key":"variable being","Fragments":["defined"]},{"Key":"being defined","Fragments":["and"]},{"Key":"defined and","Fragments":["getting"]},{"Key":"and getting","Fragments":["*=","that","to"]},{"Key":"getting *=","Fragments":["(in"]},{"Key":"*= (in","Fragments":["my"]},{"Key":"my opinion).","Fragments":[":)"]},{"Key":" Though,","Fragments":["you"]},{"Key":"Though, you","Fragments":["are"]},{"Key":"also right","Fragments":["in"]},{"Key":"a convert","Fragments":["at"]},{"Key":"convert at","Fragments":["the"]},{"Key":"using ```dna1.Substring(i,","Fragments":["1)```"]},{"Key":"```dna1.Substring(i, 1)```","Fragments":["you"]},{"Key":"1)``` you","Fragments":["can"]},{"Key":"use ```dna1[i]```","Fragments":["as"]},{"Key":"```dna1[i]``` as","Fragments":["this"]},{"Key":"char at","Fragments":["position"]},{"Key":"at position","Fragments":["i"]},{"Key":"position i","Fragments":["instead"]},{"Key":"i instead","Fragments":["of"]},{"Key":"one char","Fragments":["and","and"]},{"Key":"char and","Fragments":["compare","wiht"]},{"Key":"compare them","Fragments":["to"]},{"Key":"Another thought","Fragments":["is"]},{"Key":"thought is","Fragments":["that","that"]},{"Key":"you first","Fragments":["check"]},{"Key":"the dna","Fragments":["sequence","sequence"]},{"Key":"dna sequence","Fragments":["is","\"gcc\"","has"]},{"Key":"sequence is","Fragments":["empty,"]},{"Key":"is empty,","Fragments":["then","and"]},{"Key":"empty, then","Fragments":["check"]},{"Key":"equal length.","Fragments":["Then","Additionally","This"]},{"Key":"length. Then","Fragments":["if"]},{"Key":"if dna","Fragments":["sequence"]},{"Key":"sequence \"gcc\"","Fragments":["and"]},{"Key":"\"gcc\" and","Fragments":["an"]},{"Key":"return 0,","Fragments":["but","but","not"]},{"Key":"if \"ggc\"","Fragments":["and"]},{"Key":"\"ggc\" and","Fragments":["\"gc\""]},{"Key":"and \"gc\"","Fragments":["you"]},{"Key":"\"gc\" you","Fragments":["will"]},{"Key":"just nitpicking","Fragments":["thou."]},{"Key":"nitpicking thou.","Fragments":["Good"]},{"Key":"thou. Good","Fragments":["work"]},{"Key":"Good work","Fragments":["otherwise!",":)","over","over"]},{"Key":"Wow -","Fragments":["I"]},{"Key":"could index","Fragments":["into"]},{"Key":"into strings","Fragments":["like","directly"]},{"Key":"strings like","Fragments":["that!"]},{"Key":"like that!","Fragments":["Great"]},{"Key":"that! Great","Fragments":["tip,"]},{"Key":"Great tip,","Fragments":["thank"]},{"Key":"tip, thank","Fragments":["you!"]},{"Key":"generally agree","Fragments":["with"]},{"Key":"an 'if'","Fragments":["but","or"]},{"Key":"'if' but","Fragments":["in"]},{"Key":"cases I","Fragments":["don't","could"]},{"Key":"problem for","Fragments":["readability.","an"]},{"Key":"for readability.","Fragments":["I","Look","Even"]},{"Key":"think in","Fragments":["this"]},{"Key":"and obvious","Fragments":["enough"]},{"Key":"obvious enough","Fragments":["such"]},{"Key":"enough such","Fragments":["that"]},{"Key":"this actually","Fragments":["increases"]},{"Key":"actually increases","Fragments":["or"]},{"Key":"increases or","Fragments":["at"]},{"Key":"or at","Fragments":["least","least","least"]},{"Key":"least doesn't","Fragments":["adversely"]},{"Key":"doesn't adversely","Fragments":["affect"]},{"Key":"adversely affect","Fragments":["readability."]},{"Key":"affect readability.","Fragments":["Duly"]},{"Key":"readability. Duly","Fragments":["noted,"]},{"Key":"Duly noted,","Fragments":["though!"]},{"Key":"noted, though!","Fragments":["It's"]},{"Key":"though! It's","Fragments":["something"]},{"Key":"It's something","Fragments":["I'll"]},{"Key":"something I'll","Fragments":["keep"]},{"Key":"keep an","Fragments":["eye"]},{"Key":"an eye","Fragments":["on."]},{"Key":"for taking","Fragments":["a","the","the"]},{"Key":"Not an","Fragments":["expert"]},{"Key":"an expert","Fragments":["on"]},{"Key":"expert on","Fragments":["Ordo"]},{"Key":"on Ordo","Fragments":["values"]},{"Key":"Ordo values","Fragments":["myself,"]},{"Key":"values myself,","Fragments":["but"]},{"Key":"myself, but","Fragments":["on"]},{"Key":" ```foreach","Fragments":["(int","(var"]},{"Key":"```foreach (int","Fragments":["m"]},{"Key":"(int m","Fragments":["in"]},{"Key":"m in","Fragments":["multiples)"]},{"Key":"in multiples)","Fragments":["{"]},{"Key":"(int current","Fragments":["="]},{"Key":"current =","Fragments":["m;"]},{"Key":"= m;","Fragments":["current"]},{"Key":"m; current","Fragments":["\u003c"]},{"Key":"current \u003c","Fragments":["to;"]},{"Key":"\u003c to;","Fragments":["current+=m)","i++)"]},{"Key":"to; current+=m)","Fragments":["{"]},{"Key":"if (!multiplesUsed.Any(u","Fragments":["=\u003e"]},{"Key":"(!multiplesUsed.Any(u =\u003e","Fragments":["current"]},{"Key":"=\u003e current","Fragments":["%"]},{"Key":"current %","Fragments":["u"]},{"Key":"% u","Fragments":["==","=="]},{"Key":"u ==","Fragments":["0))","0))"]},{"Key":"== 0))","Fragments":["{sum","{sum2",")"]},{"Key":"0)) {sum","Fragments":["+="]},{"Key":"{sum +=","Fragments":["current;}"]},{"Key":" ```for","Fragments":["(int","(int"]},{"Key":"```for (int","Fragments":["i","i"]},{"Key":"to; i++)","Fragments":["{"]},{"Key":"if (multiples.Any(u","Fragments":["=\u003e"]},{"Key":"(multiples.Any(u =\u003e","Fragments":["i"]},{"Key":"=\u003e i","Fragments":["%"]},{"Key":"i %","Fragments":["u"]},{"Key":"0)) {sum2","Fragments":["+="]},{"Key":"{sum2 +=","Fragments":["i;"]},{"Key":"+= i;","Fragments":["}","//"]},{"Key":"a worst","Fragments":["case"]},{"Key":"many modulus","Fragments":["calculation"]},{"Key":"modulus calculation","Fragments":["was"]},{"Key":"multiples 3","Fragments":["and"]},{"Key":"5 to","Fragments":["1000,"]},{"Key":"was 2000","Fragments":["with"]},{"Key":"2000 with","Fragments":["the"]},{"Key":"latter (as","Fragments":["expected)"]},{"Key":"(as expected)","Fragments":["and"]},{"Key":"expected) and","Fragments":["199"]},{"Key":"and 199","Fragments":["with"]},{"Key":"199 with","Fragments":["the"]},{"Key":" Off","Fragments":["topic:"]},{"Key":"Off topic:","Fragments":["how"]},{"Key":"topic: how","Fragments":["do"]},{"Key":"you intend","Fragments":["here?"]},{"Key":"the 'used","Fragments":["names'"]},{"Key":"'used names'","Fragments":["list"]},{"Key":"names' list","Fragments":["to"]},{"Key":"list to","Fragments":["prevent","the","crystallize","get","the"]},{"Key":"prevent duplicates;","Fragments":["that's"]},{"Key":"duplicates; that's","Fragments":["a"]},{"Key":"a clever","Fragments":["way","way"]},{"Key":"clever way","Fragments":["to","to"]},{"Key":"random number","Fragments":["generator","generator,","with"]},{"Key":"number generator","Fragments":["seeded","sitting"]},{"Key":"generator seeded","Fragments":["off"]},{"Key":"seeded off","Fragments":["the"]},{"Key":"the system","Fragments":["clock.","is","is"]},{"Key":"said, could","Fragments":["that"]},{"Key":"could that","Fragments":["be"]},{"Key":"that be","Fragments":["an","done","more","any"]},{"Key":"issue if","Fragments":["you"]},{"Key":"were writing","Fragments":["an"]},{"Key":"writing an","Fragments":["application"]},{"Key":"an application","Fragments":["that"]},{"Key":"application that","Fragments":["would"]},{"Key":"to access","Fragments":["and","Roster[grade].","the","any","directly)","them.)","a"]},{"Key":"access and","Fragments":["reset"]},{"Key":"and reset","Fragments":["Robot.Name"]},{"Key":"reset Robot.Name","Fragments":["frequently?"]},{"Key":"Robot.Name frequently?","Fragments":["Your"]},{"Key":"frequently? Your","Fragments":["list"]},{"Key":"Your list","Fragments":["would"]},{"Key":"list would","Fragments":["keep","be"]},{"Key":"would keep","Fragments":["growing"]},{"Key":"keep growing","Fragments":["and"]},{"Key":"growing and","Fragments":["growing..."]},{"Key":"and growing...","Fragments":["just"]},{"Key":"growing... just","Fragments":["a"]},{"Key":"You probably","Fragments":["don't","want","should","realize"]},{"Key":"probably don't","Fragments":["need"]},{"Key":"app piece","Fragments":["to"]},{"Key":"piece to","Fragments":["get"]},{"Key":"to work-","Fragments":["just"]},{"Key":"work- just","Fragments":["your"]},{"Key":"just your","Fragments":["\"Year\""]},{"Key":"your \"Year\"","Fragments":["class"]},{"Key":"\"Year\" class","Fragments":["should"]},{"Key":"should do.","Fragments":["I"]},{"Key":"do. I","Fragments":["would"]},{"Key":"reducing your","Fragments":["nested"]},{"Key":"your nested","Fragments":["\"if\""]},{"Key":"operators. Also,","Fragments":["you"]},{"Key":"clarity. Use","Fragments":["an"]},{"Key":"Use an","Fragments":["intermediate"]},{"Key":"an intermediate","Fragments":["variable"]},{"Key":"intermediate variable","Fragments":["if"]},{"Key":"variable if","Fragments":["you"]},{"Key":"need to,","Fragments":["then"]},{"Key":"to, then","Fragments":["return"]},{"Key":"variable (although,","Fragments":["a"]},{"Key":"(although, a","Fragments":["hint:"]},{"Key":"a hint:","Fragments":["since"]},{"Key":"hint: since","Fragments":["an"]},{"Key":"statement evaluates","Fragments":["a"]},{"Key":"evaluates a","Fragments":["boolean"]},{"Key":"boolean condition,","Fragments":["why"]},{"Key":"condition, why","Fragments":["not"]},{"Key":"not avoid","Fragments":["the"]},{"Key":"avoid the","Fragments":["\"if\"","'while'","Reverse()","unnecessary","foreach","foreach","switch","```","for","inner"]},{"Key":"\"if\" altogether","Fragments":["and"]},{"Key":"altogether and","Fragments":["just"]},{"Key":"condition as","Fragments":["the","the"]},{"Key":"stand my","Fragments":["ground"]},{"Key":"my ground","Fragments":["on"]},{"Key":"ground on","Fragments":["this"]},{"Key":"one due","Fragments":["to"]},{"Key":"my love","Fragments":["of"]},{"Key":"love of","Fragments":["short"]},{"Key":"of short","Fragments":["return"]},{"Key":"short return","Fragments":["statements."]},{"Key":"statements. I've","Fragments":["always"]},{"Key":"always hated","Fragments":["including"]},{"Key":"hated including","Fragments":["any"]},{"Key":"including any","Fragments":["logic"]},{"Key":"any logic","Fragments":["in"]},{"Key":"return statement-","Fragments":["I"]},{"Key":"statement- I","Fragments":["like"]},{"Key":"all buttoned","Fragments":["up"]},{"Key":"buttoned up","Fragments":["into"]},{"Key":"a package","Fragments":["by"]},{"Key":"package by","Fragments":["the"]},{"Key":"time it","Fragments":["gets","will","is","worked","is"]},{"Key":"gets returned.","Fragments":["Thanks"]},{"Key":"returned. Thanks","Fragments":["for"]},{"Key":"first tried","Fragments":["to"]},{"Key":"the math","Fragments":["on","calculations,"]},{"Key":"math on","Fragments":["one"]},{"Key":"reason couldn't","Fragments":["quite"]},{"Key":"couldn't quite","Fragments":["get"]},{"Key":"work, it","Fragments":["kept"]},{"Key":"it kept","Fragments":["failing"]},{"Key":"kept failing","Fragments":["on"]},{"Key":"failing on","Fragments":["the"]},{"Key":"the Valid_leap_year","Fragments":["so"]},{"Key":"Valid_leap_year so","Fragments":["I"]},{"Key":"this method,","Fragments":["which","but"]},{"Key":"did get","Fragments":["a","out"]},{"Key":"little help","Fragments":["from"]},{"Key":"help from","Fragments":["google"]},{"Key":"from google","Fragments":["on,"]},{"Key":"google on,","Fragments":["to"]},{"Key":"on, to","Fragments":["be"]},{"Key":"does ```wordSelections.Select(word","Fragments":["=\u003e"]},{"Key":"```wordSelections.Select(word =\u003e","Fragments":["word)```"]},{"Key":"=\u003e word)```","Fragments":["do?"]},{"Key":"word)``` do?","Fragments":["In"]},{"Key":"do? In","Fragments":["the"]},{"Key":"comment you","Fragments":["say"]},{"Key":"them lowercase","Fragments":["but"]},{"Key":"lowercase but","Fragments":["to"]},{"Key":"doesn't seems","Fragments":["to"]},{"Key":"Linq so","Fragments":["sort","it's","moved"]},{"Key":"so sort","Fragments":["out"]},{"Key":"sort out","Fragments":["instead","nunit."]},{"Key":"out instead","Fragments":["of"]},{"Key":" ```var","Fragments":["validMatches"]},{"Key":"```var validMatches","Fragments":["="]},{"Key":"validMatches =","Fragments":["wordSelections.Where("]},{"Key":"= wordSelections.Where(","Fragments":["currentlyTesting"]},{"Key":"wordSelections.Where( currentlyTesting","Fragments":["=\u003e"]},{"Key":" (currentlyTesting.Length","Fragments":["=="]},{"Key":"(currentlyTesting.Length ==","Fragments":["inputWord.Length)"]},{"Key":"== inputWord.Length)","Fragments":["\u0026\u0026"]},{"Key":" (String.Equals(currentlyTesting,","Fragments":["inputWord,"]},{"Key":"(String.Equals(currentlyTesting, inputWord,","Fragments":["StringComparison.CurrentCultureIgnoreCase))"]},{"Key":"``` Does","Fragments":["the"]},{"Key":"Does the","Fragments":["same"]},{"Key":"to If","Fragments":["statements"]},{"Key":"boolean function","Fragments":["of"]},{"Key":"function of","Fragments":["the"]},{"Key":" {...```","Fragments":["statement"]},{"Key":"{...``` statement","Fragments":["and"]},{"Key":"where condition,","Fragments":["you"]},{"Key":"condition, you","Fragments":["can"]},{"Key":"just sort","Fragments":["and"]},{"Key":"sort and","Fragments":["return"]},{"Key":"I apologize","Fragments":["for"]},{"Key":"apologize for","Fragments":["my"]},{"Key":"my vague","Fragments":["comment,"]},{"Key":"vague comment,","Fragments":["however"]},{"Key":"comment, however","Fragments":["I"]},{"Key":"really care","Fragments":["for"]},{"Key":"of structure","Fragments":["for"]},{"Key":"structure for","Fragments":["providing","your"]},{"Key":"providing suggestions","Fragments":["(essentially"]},{"Key":"suggestions (essentially","Fragments":["plain"]},{"Key":"(essentially plain","Fragments":["text"]},{"Key":"plain text","Fragments":["comments),"]},{"Key":"text comments),","Fragments":["so"]},{"Key":"comments), so","Fragments":["I"]},{"Key":"I inferred","Fragments":["that"]},{"Key":"inferred that","Fragments":["you"]},{"Key":"improve your","Fragments":["own.","speed"]},{"Key":"your own.","Fragments":["I"]},{"Key":"own. I","Fragments":["am"]},{"Key":"am here","Fragments":["to"]},{"Key":"but also","Fragments":["want","your"]},{"Key":"to offer","Fragments":["my"]},{"Key":"offer my","Fragments":["solutions"]},{"Key":"my solutions","Fragments":["if","to"]},{"Key":"solutions if","Fragments":["I"]},{"Key":"believe they","Fragments":["can"]},{"Key":"can help.","Fragments":["With"]},{"Key":"help. With","Fragments":["that"]},{"Key":"With that","Fragments":["said,","mindset,"]},{"Key":"that said,","Fragments":["my"]},{"Key":"said, my","Fragments":["last"]},{"Key":"last 3-4","Fragments":["submissions"]},{"Key":"3-4 submissions","Fragments":["have"]},{"Key":"submissions have","Fragments":["gone"]},{"Key":"gone unnoticed,","Fragments":["which"]},{"Key":"unnoticed, which","Fragments":["is"]},{"Key":"bit disheartening","Fragments":["if"]},{"Key":"disheartening if","Fragments":["I'm"]},{"Key":"any constructive","Fragments":["criticism"]},{"Key":"constructive criticism","Fragments":["(an"]},{"Key":"criticism (an","Fragments":["explanation"]},{"Key":"(an explanation","Fragments":["of"]},{"Key":"explanation of","Fragments":["why","the"]},{"Key":"why my","Fragments":["code","code"]},{"Key":"is inefficient).","Fragments":["I"]},{"Key":"inefficient). I","Fragments":["was"]},{"Key":"that Exercism","Fragments":["was"]},{"Key":"Exercism was","Fragments":["supposed"]},{"Key":"was supposed","Fragments":["to","to"]},{"Key":"to bring","Fragments":["developers"]},{"Key":"bring developers","Fragments":["together"]},{"Key":"developers together","Fragments":["to"]},{"Key":"together to","Fragments":["help","make","tell"]},{"Key":"help each","Fragments":["other","other."]},{"Key":"each other","Fragments":["improve","return.","using"]},{"Key":"other improve","Fragments":["their"]},{"Key":"improve their","Fragments":["methods,"]},{"Key":"their methods,","Fragments":["but"]},{"Key":"system is","Fragments":["heavily","far"]},{"Key":"is heavily","Fragments":["dependent"]},{"Key":"heavily dependent","Fragments":["upon"]},{"Key":"dependent upon","Fragments":["its","a"]},{"Key":"upon its","Fragments":["users"]},{"Key":"its users","Fragments":["to"]},{"Key":"users to","Fragments":["actually"]},{"Key":"actually want","Fragments":["to"]},{"Key":"help people.","Fragments":["There"]},{"Key":"people. There","Fragments":["is"]},{"Key":"currently little","Fragments":["incentive"]},{"Key":"little incentive","Fragments":["to"]},{"Key":"incentive to","Fragments":["help"]},{"Key":"each other.","Fragments":["In"]},{"Key":"other. In","Fragments":["any"]},{"Key":"In any","Fragments":["case,"]},{"Key":"any case,","Fragments":["it"]},{"Key":"it appears","Fragments":["that","to","as"]},{"Key":"appears that","Fragments":["you","Int.Parse()","I'm"]},{"Key":"feel my","Fragments":["solution"]},{"Key":"solution could","Fragments":["be"]},{"Key":"1) Can","Fragments":["you"]},{"Key":"2) True,","Fragments":["but"]},{"Key":"True, but","Fragments":["not"]},{"Key":"wasn't really","Fragments":["considering","sure","interested"]},{"Key":"really considering","Fragments":["the"]},{"Key":"considering the","Fragments":["possibility","hints"]},{"Key":"of invalid","Fragments":["strands","entries"]},{"Key":"invalid strands","Fragments":["at"]},{"Key":"strands at","Fragments":["the"]},{"Key":"3) Noted","Fragments":["and"]},{"Key":"Noted and","Fragments":["updated."]},{"Key":" Sorry,","Fragments":["I","I"]},{"Key":"Sorry, I","Fragments":["intended","didn't"]},{"Key":"I intended","Fragments":["to","when"]},{"Key":"write indent","Fragments":[":)"]},{"Key":"you indent","Fragments":["code."]},{"Key":" edit:","Fragments":["Oh,"]},{"Key":"edit: Oh,","Fragments":["sorry!"]},{"Key":"Oh, sorry!","Fragments":["I"]},{"Key":"sorry! I","Fragments":["was"]},{"Key":"my Sum","Fragments":["Of"]},{"Key":"Sum Of","Fragments":["Multiples"]},{"Key":"Of Multiples","Fragments":["http://exercism.io/submissions/aa5919660a35a1664c8ca408"]},{"Key":"Multiples http://exercism.io/submissions/aa5919660a35a1664c8ca408","Fragments":["not"]},{"Key":"http://exercism.io/submissions/aa5919660a35a1664c8ca408 not","Fragments":["yours."]},{"Key":" Agree,","Fragments":["this"]},{"Key":"Agree, this","Fragments":["is"]},{"Key":"the 1st","Fragments":["iteration."]},{"Key":"I attempted","Fragments":["to"]},{"Key":"attempted to","Fragments":["make","encode"]},{"Key":"it short,","Fragments":["but"]},{"Key":"that order","Fragments":["matters"]},{"Key":"order matters","Fragments":["between"]},{"Key":"matters between","Fragments":["the"]},{"Key":"for yelling","Fragments":["and"]},{"Key":"the question.","Fragments":["If"]},{"Key":"question. If","Fragments":["you"]},{"Key":"you checked","Fragments":["the"]},{"Key":"question first","Fragments":["then"]},{"Key":"not work","Fragments":["right.","if","as","there"]},{"Key":"work right.","Fragments":["Also,","I'll"]},{"Key":"right. Also,","Fragments":["looking"]},{"Key":"Also, looking","Fragments":["back","at"]},{"Key":"back I","Fragments":["could"]},{"Key":"readable by","Fragments":["including","having"]},{"Key":"by including","Fragments":["methods"]},{"Key":"including methods","Fragments":["and"]},{"Key":"with good","Fragments":["names."]},{"Key":"if (sample1.Equals(sample2))","Fragments":["{"]},{"Key":"(sample1.Equals(sample2)) {","Fragments":["return"]},{"Key":"return 0;","Fragments":["}"]},{"Key":" saves","Fragments":["you"]},{"Key":"saves you","Fragments":["much,"]},{"Key":"you much,","Fragments":["if"]},{"Key":"much, if","Fragments":["anything."]},{"Key":" \u003cb\u003estring.Equals()\u003c/b\u003e","Fragments":["will"]},{"Key":"\u003cb\u003estring.Equals()\u003c/b\u003e will","Fragments":["need"]},{"Key":"same character","Fragments":["by","more"]},{"Key":"character match","Fragments":["that"]},{"Key":"match that","Fragments":["you"]},{"Key":"doing later","Fragments":["in"]},{"Key":"later in","Fragments":["the"]},{"Key":"that \u003cb\u003ehamDist++\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003ehamDist++\u003c/b\u003e is","Fragments":["more"]},{"Key":"idiomatic C#","Fragments":["than","if","tries","style"]},{"Key":"C# than","Fragments":["\u003cb\u003ehamDist"]},{"Key":"than \u003cb\u003ehamDist","Fragments":["+="]},{"Key":"\u003cb\u003ehamDist +=","Fragments":["1\u003c/b\u003e"]},{"Key":"Logic looks","Fragments":["fine","sound"]},{"Key":" `public","Fragments":["static","enum"]},{"Key":"`public static","Fragments":["bool"]},{"Key":" then","Fragments":["the","random"]},{"Key":"explicit if...else","Fragments":["even"]},{"Key":"if...else even","Fragments":["when"]},{"Key":"else part","Fragments":["is","of"]},{"Key":"is technically","Fragments":["redundant"]},{"Key":"technically redundant","Fragments":["when","i.e."]},{"Key":"redundant when","Fragments":["you're"]},{"Key":"returning inside","Fragments":["the"]},{"Key":"the 'if'","Fragments":["-","statement","after","condition"]},{"Key":"'if' -","Fragments":["but"]},{"Key":"- but","Fragments":["to","will","the","it","in","it","used","try","still"]},{"Key":"consistent you","Fragments":["could"]},{"Key":"outer 'if'","Fragments":["too?"]},{"Key":"Since in","Fragments":["my"]},{"Key":"solution the","Fragments":["common"]},{"Key":"the common","Fragments":["called","parts"]},{"Key":"common called","Fragments":["code"]},{"Key":"called code","Fragments":["method"]},{"Key":"code method","Fragments":["and"]},{"Key":"caller methods","Fragments":["are"]},{"Key":"are all","Fragments":["1","related.","done","prime","on","here","for"]},{"Key":"all 1","Fragments":["liners"]},{"Key":"1 liners","Fragments":["I","and"]},{"Key":"liners I","Fragments":["would"]},{"Key":"answer is","Fragments":["clearly","all","probably"]},{"Key":"call! Check","Fragments":["out"]},{"Key":"2nd iteration.","Fragments":["Thanks"]},{"Key":"iteration. Thanks","Fragments":["for"]},{"Key":" Firstly,","Fragments":["I"]},{"Key":"Firstly, I","Fragments":["would"]},{"Key":"am very","Fragments":["happy"]},{"Key":"very happy","Fragments":["to"]},{"Key":"happy to","Fragments":["see"]},{"Key":"else use","Fragments":["\u003cb\u003eRegex.Match()\u003c/b\u003e"]},{"Key":"use \u003cb\u003eRegex.Match()\u003c/b\u003e","Fragments":["instead"]},{"Key":"\u003cb\u003eRegex.Match()\u003c/b\u003e instead","Fragments":["of"]},{"Key":"regex to","Fragments":["replace","look","be","the"]},{"Key":"split strings","Fragments":[":)"]},{"Key":"It may","Fragments":["be","seem"]},{"Key":"in dialects","Fragments":["but"]},{"Key":"dialects but","Fragments":["in"]},{"Key":"the C#","Fragments":["regex,","`char.IsLetter`","specific"]},{"Key":"C# regex,","Fragments":["\u003cb\u003e\\w\u003c/b\u003e"]},{"Key":"regex, \u003cb\u003e\\w\u003c/b\u003e","Fragments":["includes"]},{"Key":"\u003cb\u003e\\w\u003c/b\u003e includes","Fragments":["digits"]},{"Key":"includes digits","Fragments":["so"]},{"Key":"digits so","Fragments":["\u003cb\u003e[\\w\\d]\u003c/b\u003e"]},{"Key":"so \u003cb\u003e[\\w\\d]\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003e[\\w\\d]\u003c/b\u003e is","Fragments":["the"]},{"Key":"Do we","Fragments":["need","have"]},{"Key":"the {1,2}","Fragments":["for"]},{"Key":"{1,2} for","Fragments":["['-]."]},{"Key":"for ['-].","Fragments":["The"]},{"Key":"['-]. The","Fragments":["comments"]},{"Key":"comments mention","Fragments":["matching"]},{"Key":"mention matching","Fragments":["\u003cb\u003ewe're\u003c/b\u003e"]},{"Key":"matching \u003cb\u003ewe're\u003c/b\u003e","Fragments":["and"]},{"Key":"\u003cb\u003ewe're\u003c/b\u003e and","Fragments":["\u003cb\u003ecast-iron\u003c/b\u003e"]},{"Key":"and \u003cb\u003ecast-iron\u003c/b\u003e","Fragments":["but"]},{"Key":"\u003cb\u003ecast-iron\u003c/b\u003e but","Fragments":["not"]},{"Key":"thing in","Fragments":["different"]},{"Key":"ways with","Fragments":["regex","this"]},{"Key":"with regex","Fragments":["patterns"]},{"Key":"regex patterns","Fragments":["but"]},{"Key":"would achieve","Fragments":["the"]},{"Key":"desired result","Fragments":["without"]},{"Key":"result without","Fragments":["needing"]},{"Key":"without needing","Fragments":["more","it..."]},{"Key":"needing more","Fragments":["advanced"]},{"Key":"more advanced","Fragments":["aspects","options"]},{"Key":"advanced aspects","Fragments":["like"]},{"Key":"aspects like","Fragments":["look-ahead."]},{"Key":"strong \u003cb\u003eLinq\u003c/b\u003e","Fragments":["advocate"]},{"Key":"\u003cb\u003eLinq\u003c/b\u003e advocate","Fragments":["(possibly"]},{"Key":"advocate (possibly","Fragments":["too"]},{"Key":"(possibly too","Fragments":["strong"]},{"Key":"too strong","Fragments":["at"]},{"Key":"strong at","Fragments":["times"]},{"Key":"times :?)","Fragments":["I"]},{"Key":":?) I","Fragments":["would"]},{"Key":"to group","Fragments":["the","the","your"]},{"Key":"group the","Fragments":["matches","words."]},{"Key":"matches and","Fragments":["then"]},{"Key":"then generate","Fragments":["the"]},{"Key":"Just realized","Fragments":["that","that","the"]},{"Key":"that IsNullOrWhiteSpace","Fragments":["exists"]},{"Key":"IsNullOrWhiteSpace exists","Fragments":["so"]},{"Key":"exists so","Fragments":["this"]},{"Key":"simpler then","Fragments":["previous"]},{"Key":"then previous","Fragments":["submissions."]},{"Key":"previous submissions.","Fragments":["As"]},{"Key":"submissions. As","Fragments":["usuall"]},{"Key":"As usuall","Fragments":["I"]},{"Key":"usuall I","Fragments":["go"]},{"Key":"I go","Fragments":["for","for","back"]},{"Key":"more and","Fragments":["readable","more."]},{"Key":"have filtered","Fragments":["out"]},{"Key":"filtered out","Fragments":["bad"]},{"Key":"out bad","Fragments":["characters","chars"]},{"Key":"bad characters","Fragments":["or"]},{"Key":"characters or","Fragments":["maybe"]},{"Key":"or maybe","Fragments":["catch"]},{"Key":"maybe catch","Fragments":["the"]},{"Key":"the ```KeyNotFoundException```.","Fragments":["Should"]},{"Key":"```KeyNotFoundException```. Should","Fragments":["have"]},{"Key":"Should have","Fragments":["done","read"]},{"Key":"something against","Fragments":["bad"]},{"Key":"against bad","Fragments":["input"]},{"Key":"bad input","Fragments":["i"]},{"Key":"input i","Fragments":["guess."]},{"Key":"to 'round'","Fragments":["the"]},{"Key":"'round' the","Fragments":["day"]},{"Key":"day down,","Fragments":["this"]},{"Key":"down, this","Fragments":["works"]},{"Key":"works i","Fragments":["guess."]},{"Key":"how short","Fragments":["and","and"]},{"Key":"and sweet","Fragments":["this",":-)"]},{"Key":"sweet this","Fragments":["turned"]},{"Key":"this turned","Fragments":["out."]},{"Key":"turned out.","Fragments":["I"]},{"Key":"ran into","Fragments":["some","a"]},{"Key":"into some","Fragments":["debugging"]},{"Key":"some debugging","Fragments":["issues"]},{"Key":"debugging issues","Fragments":["at"]},{"Key":"issues at","Fragments":["first"]},{"Key":"I failed","Fragments":["to","a"]},{"Key":"failed to","Fragments":["realize"]},{"Key":"3 \u0026","Fragments":["5"]},{"Key":"\u0026 5","Fragments":["should"]},{"Key":"5 should","Fragments":["only"]},{"Key":"I wonder,","Fragments":["though,","maybe"]},{"Key":"wonder, though,","Fragments":["if"]},{"Key":"though, if","Fragments":["the"]},{"Key":"the .clear","Fragments":["on"]},{"Key":".clear on","Fragments":["the"]},{"Key":"the no-arguments","Fragments":["constructor"]},{"Key":"no-arguments constructor","Fragments":["is"]},{"Key":"constructor is","Fragments":["necessary.","always","called","a","easier","a"]},{"Key":"is necessary.","Fragments":["I"]},{"Key":"necessary. I","Fragments":["am","would"]},{"Key":"a scenario","Fragments":["in"]},{"Key":"scenario in","Fragments":["which","real"]},{"Key":"in which","Fragments":["the","the","I","I"]},{"Key":"constructor could","Fragments":["be"]},{"Key":"existing _multiples","Fragments":["list..."]},{"Key":"_multiples list...","Fragments":["basically,"]},{"Key":"list... basically,","Fragments":["could"]},{"Key":"basically, could","Fragments":["a"]},{"Key":"could a","Fragments":["constructor"]},{"Key":"constructor be","Fragments":["called"]},{"Key":"called again","Fragments":["after"]},{"Key":"again after","Fragments":["an"]},{"Key":"with rprouse.","Fragments":["I"]},{"Key":"rprouse. I","Fragments":["would"]},{"Key":"long method.","Fragments":["Even"]},{"Key":"method. Even","Fragments":["if"]},{"Key":"Even if","Fragments":["you","you","they're"]},{"Key":"approach, I","Fragments":["think"]},{"Key":"cleaner if","Fragments":["you"]},{"Key":"and else","Fragments":["code"]},{"Key":"code blocks","Fragments":["into","surround"]},{"Key":"blocks into","Fragments":["separate","a"]},{"Key":"Hey @jonatan,","Fragments":["I"]},{"Key":"@jonatan, I","Fragments":["hear"]},{"Key":"I hear","Fragments":["you"]},{"Key":"hear you","Fragments":["on"]},{"Key":"on readability","Fragments":["and","it"]},{"Key":"and clarity,","Fragments":["I"]},{"Key":"clarity, I","Fragments":["think"]},{"Key":"it's super","Fragments":["important."]},{"Key":"super important.","Fragments":["If"]},{"Key":"important. If","Fragments":["working"]},{"Key":"If working","Fragments":["it"]},{"Key":"working it","Fragments":["this"]},{"Key":"more your","Fragments":["style,"]},{"Key":"your style,","Fragments":["then"]},{"Key":"style, then","Fragments":["by"]},{"Key":"then by","Fragments":["all"]},{"Key":"by all","Fragments":["means","the","three"]},{"Key":"all means","Fragments":["go"]},{"Key":"means go","Fragments":["for"]},{"Key":"for it;","Fragments":["there's"]},{"Key":"it; there's","Fragments":["no"]},{"Key":"no one","Fragments":["right","has","outside"]},{"Key":"one right","Fragments":["way"]},{"Key":"right way","Fragments":["to"]},{"Key":"to code,","Fragments":["after"]},{"Key":"code, after","Fragments":["all."]},{"Key":"I stand","Fragments":["by"]},{"Key":"stand by","Fragments":["my"]},{"Key":"own thoughts","Fragments":["that"]},{"Key":"thoughts that","Fragments":["some"]},{"Key":"the simpler","Fragments":["expressions"]},{"Key":"simpler expressions","Fragments":["do"]},{"Key":"expressions do","Fragments":["speak"]},{"Key":"do speak","Fragments":["for"]},{"Key":"for themselves,","Fragments":["or"]},{"Key":"themselves, or","Fragments":["might"]},{"Key":"or might","Fragments":["be"]},{"Key":"be served","Fragments":["with"]},{"Key":"served with","Fragments":["a"]},{"Key":"a comment.","Fragments":["Also,"]},{"Key":"comment. Also,","Fragments":["to"]},{"Key":"to respond","Fragments":["to"]},{"Key":"respond to","Fragments":["your"]},{"Key":"your thought","Fragments":["about","process."]},{"Key":"about having","Fragments":["everything","a"]},{"Key":"having everything","Fragments":["on"]},{"Key":"everything on","Fragments":["one"]},{"Key":"favor writing","Fragments":["the"]},{"Key":"writing the","Fragments":["statement","code"]},{"Key":"on two","Fragments":["lines,"]},{"Key":"lines, this","Fragments":["way:"]},{"Key":" //check","Fragments":["for"]},{"Key":"//check for","Fragments":["leap"]},{"Key":"and centennial","Fragments":["leap"]},{"Key":"centennial leap","Fragments":["year"]},{"Key":"year %400","Fragments":["=="]},{"Key":"%400 ==","Fragments":["0)"]},{"Key":" ...pretend","Fragments":["that"]},{"Key":"...pretend that","Fragments":["has"]},{"Key":"has proper","Fragments":["indenting,"]},{"Key":"proper indenting,","Fragments":["because"]},{"Key":"indenting, because","Fragments":["the"]},{"Key":"the markdown","Fragments":["hates"]},{"Key":"markdown hates","Fragments":["me"]},{"Key":"hates me","Fragments":["for"]},{"Key":" Again,","Fragments":["like","no","I'm"]},{"Key":"Again, like","Fragments":["I"]},{"Key":"said if","Fragments":["this"]},{"Key":"it, then","Fragments":["of"]},{"Key":"course your","Fragments":["code"]},{"Key":"code still","Fragments":["compiles,"]},{"Key":"still compiles,","Fragments":["still"]},{"Key":"compiles, still","Fragments":["passes"]},{"Key":"still passes","Fragments":["the"]},{"Key":"and thus,","Fragments":["still"]},{"Key":"thus, still","Fragments":["works"]},{"Key":"just fine.","Fragments":["Everyone","If"]},{"Key":"fine. Everyone","Fragments":["has"]},{"Key":"Everyone has","Fragments":["their"]},{"Key":"has their","Fragments":["own"]},{"Key":"own styles,","Fragments":["however,"]},{"Key":"styles, however,","Fragments":["and"]},{"Key":"however, and","Fragments":["one"]},{"Key":"that you'll","Fragments":["see"]},{"Key":"you'll see","Fragments":["a","the","the"]},{"Key":"is stylistic","Fragments":["feedback,"]},{"Key":"stylistic feedback,","Fragments":["which"]},{"Key":"feedback, which","Fragments":["I"]},{"Key":"all we","Fragments":["really","are"]},{"Key":"we really","Fragments":["have"]},{"Key":"was suppose","Fragments":["to"]},{"Key":"suppose to","Fragments":["be","work."]},{"Key":"be taking","Fragments":["input,","that"]},{"Key":"taking input,","Fragments":["so"]},{"Key":"input, so","Fragments":["I","calling","if"]},{"Key":"up doing","Fragments":["it"]},{"Key":"through console.","Fragments":["I"]},{"Key":"console. I","Fragments":["originally"]},{"Key":"originally ran","Fragments":["and"]},{"Key":"ran and","Fragments":["tested"]},{"Key":"and tested","Fragments":["this"]},{"Key":"this through","Fragments":["a"]},{"Key":"a Visual","Fragments":["Studio"]},{"Key":"Studio Solution","Fragments":["(there"]},{"Key":"Solution (there","Fragments":["was"]},{"Key":"(there was","Fragments":["a"]},{"Key":"a \"namespace","Fragments":["leap\""]},{"Key":"\"namespace leap\"","Fragments":["before"]},{"Key":"leap\" before","Fragments":["class"]},{"Key":"before class","Fragments":["leap)."]},{"Key":"the +=1--I","Fragments":["realized"]},{"Key":"+=1--I realized","Fragments":["that"]},{"Key":"that right","Fragments":["after"]},{"Key":"right after","Fragments":["I","a","`couldBeAMatch"]},{"Key":"first point,","Fragments":["though,"]},{"Key":"point, though,","Fragments":["my"]},{"Key":"though, my","Fragments":["thought"]},{"Key":"my thought","Fragments":["was","was","was"]},{"Key":"thought was","Fragments":["that","to","that","to","most","required","to"]},{"Key":"method if","Fragments":["the"]},{"Key":"are identical.","Fragments":["I"]},{"Key":"identical. I","Fragments":["thought"]},{"Key":"thought an","Fragments":["early"]},{"Key":"early exit","Fragments":["point","-","works,","we"]},{"Key":"be cleaner.","Fragments":["But","One","For"]},{"Key":"cleaner. But","Fragments":["I"]},{"Key":"it gives","Fragments":["me"]},{"Key":"gives me","Fragments":["two","the"]},{"Key":"me two","Fragments":["return"]},{"Key":"return locations,","Fragments":["so"]},{"Key":"locations, so","Fragments":["removing"]},{"Key":"so removing","Fragments":["that"]},{"Key":"removing that","Fragments":["might"]},{"Key":"little regular","Fragments":["expression"]},{"Key":"expression stating","Fragments":["what"]},{"Key":"you keep","Fragments":["is","it","'sum'"]},{"Key":"keep is","Fragments":["better"]},{"Key":"big list","Fragments":["of"]},{"Key":"of things","Fragments":["to","so","here."]},{"Key":"throw away","Fragments":["I","that"]},{"Key":"away I","Fragments":["think."]},{"Key":"is far","Fragments":["from","more","far","to","better","better","too","more","simpler"]},{"Key":"far from","Fragments":["perfect"]},{"Key":"from perfect","Fragments":["at"]},{"Key":"perfect at","Fragments":["this"]},{"Key":"this point.","Fragments":["Personally"]},{"Key":"point. Personally","Fragments":["I've"]},{"Key":"Personally I've","Fragments":["just"]},{"Key":"I've just","Fragments":["been","done"]},{"Key":"do actually","Fragments":["do"]},{"Key":"do SOME","Fragments":["programming"]},{"Key":"SOME programming","Fragments":["on"]},{"Key":"programming on","Fragments":["a"]},{"Key":"regular basis","Fragments":["as"]},{"Key":"basis as","Fragments":["my","to"]},{"Key":"main day","Fragments":["to"]},{"Key":"day to","Fragments":["day","give"]},{"Key":"to day","Fragments":["is"]},{"Key":"day is","Fragments":["standard","the","called","before","checked"]},{"Key":"is standard","Fragments":["IT","c#","C#"]},{"Key":"standard IT","Fragments":["support"]},{"Key":"IT support","Fragments":["where"]},{"Key":"support where","Fragments":["I"]},{"Key":"might code","Fragments":["something"]},{"Key":"code something","Fragments":["once"]},{"Key":"something once","Fragments":["every"]},{"Key":"once every","Fragments":["couple"]},{"Key":"every couple","Fragments":["months."]},{"Key":"It's technically","Fragments":["correct"]},{"Key":"technically correct","Fragments":["to"]},{"Key":"correct to","Fragments":["use"]},{"Key":"property in","Fragments":["the","Element"]},{"Key":"done it.","Fragments":["I've"]},{"Key":"been taught","Fragments":["that"]},{"Key":"taught that","Fragments":["variables"]},{"Key":"that variables","Fragments":["should"]},{"Key":"and get/set","Fragments":["should"]},{"Key":"get/set should","Fragments":["manipulate"]},{"Key":"should manipulate","Fragments":["the"]},{"Key":"the hidden","Fragments":["variable."]},{"Key":"hidden variable.","Fragments":["It's"]},{"Key":"variable. It's","Fragments":["more"]},{"Key":"a preference","Fragments":["than","not"]},{"Key":"hard 'you","Fragments":["shouldn't"]},{"Key":"'you shouldn't","Fragments":["do"]},{"Key":"shouldn't do","Fragments":["it'."]},{"Key":"Clever and","Fragments":["very"]},{"Key":"job thinking","Fragments":["about"]},{"Key":"the known","Fragments":["abbreviations"]},{"Key":"known abbreviations","Fragments":["as"]},{"Key":"abbreviations as","Fragments":["well."]},{"Key":" think","Fragments":["about"]},{"Key":"about reducing","Fragments":["the"]},{"Key":"the FIRST_GIFT","Fragments":["constant,"]},{"Key":"FIRST_GIFT constant,","Fragments":["but"]},{"Key":"constant, but","Fragments":["it"]},{"Key":"the `GIFTS.Skip(12","Fragments":["-"]},{"Key":"`GIFTS.Skip(12 -","Fragments":["verse).Take(verse)`","verse).Take(verse)`"]},{"Key":"- verse).Take(verse)`","Fragments":["easier.","to"]},{"Key":"Doing it","Fragments":["mathematically"]},{"Key":"it mathematically","Fragments":["is,","would"]},{"Key":"mathematically is,","Fragments":["IMHO,"]},{"Key":"is, IMHO,","Fragments":["certainly"]},{"Key":"IMHO, certainly","Fragments":["one"]},{"Key":"certainly one","Fragments":["of"]},{"Key":"the challenges","Fragments":["of"]},{"Key":"challenges of","Fragments":["this"]},{"Key":"It shorten's","Fragments":["the"]},{"Key":"shorten's the","Fragments":["code"]},{"Key":"than TakeWhile","Fragments":["then"]},{"Key":"TakeWhile then","Fragments":["Reverse,"]},{"Key":"then Reverse,","Fragments":["you"]},{"Key":"Reverse, you","Fragments":["could"]},{"Key":"also done","Fragments":["a"]},{"Key":"a Skip","Fragments":["then"]},{"Key":"Skip then","Fragments":["Take."]},{"Key":"then Take.","Fragments":["I"]},{"Key":"Take. I","Fragments":["think"]},{"Key":"meaning would","Fragments":["be"]},{"Key":"be clearer","Fragments":["then.","to","and"]},{"Key":"appreciate all","Fragments":["these","of"]},{"Key":"these comments.","Fragments":["Resharper"]},{"Key":"comments. Resharper","Fragments":["has"]},{"Key":"Resharper has","Fragments":["taught"]},{"Key":"has taught","Fragments":["me"]},{"Key":"taught me","Fragments":["to","some"]},{"Key":"favor `var`.","Fragments":["I"]},{"Key":"`var`. I","Fragments":["will"]},{"Key":"`int` because","Fragments":["it's"]},{"Key":"as fast","Fragments":["to","as","as","results"]},{"Key":"fast to","Fragments":["type"]},{"Key":"as `var`","Fragments":["is"]},{"Key":"`var` is","Fragments":["and","far"]},{"Key":"sometimes I","Fragments":["get"]},{"Key":"get lazy","Fragments":["about"]},{"Key":"lazy about","Fragments":["it."]},{"Key":"it. What","Fragments":["I"]},{"Key":"really hate","Fragments":["to"]},{"Key":"hate to","Fragments":["see"]},{"Key":"is stuff","Fragments":["like:"]},{"Key":" Dictionary\u003cString,","Fragments":["List\u003cSomeClass\u003e\u003e"]},{"Key":"Dictionary\u003cString, List\u003cSomeClass\u003e\u003e","Fragments":["foo"]},{"Key":"List\u003cSomeClass\u003e\u003e foo","Fragments":["="]},{"Key":"foo =","Fragments":["new"]},{"Key":"new Dictionary\u003cString,","Fragments":["List\u003cSomeClass\u003e\u003e()"]},{"Key":"simple `var`","Fragments":["is"]},{"Key":"far more","Fragments":["readable","readable","complicated","simply."]},{"Key":"makes change","Fragments":["a"]},{"Key":"change a","Fragments":["tiny"]},{"Key":"bit easier.","Fragments":["Consider"]},{"Key":"easier. Consider","Fragments":["this"]},{"Key":"this super-contrived","Fragments":["example:"]},{"Key":"void Something(List\u003cstring\u003e","Fragments":["strings)"]},{"Key":"Something(List\u003cstring\u003e strings)","Fragments":["{"]},{"Key":"var temp","Fragments":["="]},{"Key":"temp =","Fragments":["strings;"]},{"Key":"decide later","Fragments":["to"]},{"Key":"later to","Fragments":["change"]},{"Key":"change `strings`","Fragments":["to"]},{"Key":"`strings` to","Fragments":["be,"]},{"Key":"to be,","Fragments":["say,"]},{"Key":"be, say,","Fragments":["`IEnumerable\u003cstring\u003e`,"]},{"Key":"say, `IEnumerable\u003cstring\u003e`,","Fragments":["then"]},{"Key":"`IEnumerable\u003cstring\u003e`, then","Fragments":["you"]},{"Key":"of `temp`","Fragments":["as"]},{"Key":"`temp` as","Fragments":["well."]},{"Key":"Finally, at","Fragments":["least"]},{"Key":"least with","Fragments":["Resharper,"]},{"Key":"with Resharper,","Fragments":["you"]},{"Key":"Resharper, you","Fragments":["can"]},{"Key":"just hover","Fragments":["over"]},{"Key":"hover over","Fragments":["the","it)"]},{"Key":"object and","Fragments":["see","should","is"]},{"Key":"see exactly","Fragments":["what"]},{"Key":"type it","Fragments":["is","when"]},{"Key":"be anyway","Fragments":["if"]},{"Key":"anyway if","Fragments":["you"]},{"Key":"to know.","Fragments":["That's","I"]},{"Key":"know. That's","Fragments":["always"]},{"Key":"That's always","Fragments":["been"]},{"Key":"been good","Fragments":["enough"]},{"Key":"will point","Fragments":["out"]},{"Key":"point out","Fragments":["that","my"]},{"Key":"the below","Fragments":["was","code,"]},{"Key":"below was","Fragments":["a"]},{"Key":"if (oldData","Fragments":["=="]},{"Key":"(oldData ==","Fragments":["null)"]},{"Key":"is absolutly","Fragments":["necessary."]},{"Key":"absolutly necessary.","Fragments":["The"]},{"Key":"The foreach","Fragments":["loop"]},{"Key":"loop would","Fragments":["have","generate"]},{"Key":"have thrown","Fragments":["an"]},{"Key":"thrown an","Fragments":["exception","error"]},{"Key":"this author","Fragments":["has"]},{"Key":"author has","Fragments":["politely"]},{"Key":"has politely","Fragments":["informed"]},{"Key":"politely informed","Fragments":["me."]},{"Key":"the AreAllLettersUpperCase","Fragments":["method"]},{"Key":"AreAllLettersUpperCase method","Fragments":["much"]},{"Key":"method much","Fragments":["more"]},{"Key":"more concisely.","Fragments":["Think"]},{"Key":"concisely. Think","Fragments":["about"]},{"Key":"Think about","Fragments":["it:","six","turning"]},{"Key":"about it:","Fragments":["you"]},{"Key":"it: you","Fragments":["only"]},{"Key":"compare it","Fragments":["to"]},{"Key":"the upper","Fragments":["version."]},{"Key":"upper version.","Fragments":["No"]},{"Key":"version. No","Fragments":["for"]},{"Key":"No for","Fragments":["loop","loops"]},{"Key":"the choice","Fragments":["to"]},{"Key":"choice to","Fragments":["have"]},{"Key":"different booleans","Fragments":["to"]},{"Key":"booleans to","Fragments":["represent"]},{"Key":"to represent","Fragments":["the","a"]},{"Key":"represent the","Fragments":["return","expected"]},{"Key":"value a","Fragments":["bit","List\u003clong\u003e."]},{"Key":"bit strange","Fragments":["when"]},{"Key":"strange when","Fragments":["only"]},{"Key":"when only","Fragments":["1"]},{"Key":"only 1","Fragments":["of","element"]},{"Key":"1 of","Fragments":["them"]},{"Key":"is true.","Fragments":["If"]},{"Key":"order right,","Fragments":["you"]},{"Key":"right, you","Fragments":["can"]},{"Key":"the reply","Fragments":["from"]},{"Key":"reply from","Fragments":["within"]},{"Key":"from within","Fragments":["the","the"]},{"Key":"and exit","Fragments":["the"]},{"Key":"exit the","Fragments":["method","loop,","loop"]},{"Key":"c# you","Fragments":["don't"]},{"Key":"include a","Fragments":["default","check","question","question"]},{"Key":"default constructor.","Fragments":["If"]},{"Key":"constructor. If","Fragments":["no"]},{"Key":"If no","Fragments":["constructor","one"]},{"Key":"no constructor","Fragments":["logic"]},{"Key":"constructor logic","Fragments":["is"]},{"Key":"is present","Fragments":["and"]},{"Key":"present and","Fragments":["no"]},{"Key":"no other","Fragments":["constructors","requirements"]},{"Key":"other constructors","Fragments":["are"]},{"Key":"constructors are","Fragments":["present","setting"]},{"Key":"are present","Fragments":["an"]},{"Key":"present an","Fragments":["implicit"]},{"Key":"implicit default","Fragments":["constructor"]},{"Key":"are correct","Fragments":["sir.","that","about","there"]},{"Key":"correct sir.","Fragments":["I"]},{"Key":"sir. I","Fragments":["learned"]},{"Key":"something new","Fragments":["today."]},{"Key":"new today.","Fragments":["Thanks."]},{"Key":"some fancy","Fragments":["linq."]},{"Key":"fancy linq.","Fragments":["I"]},{"Key":"linq. I","Fragments":["like"]},{"Key":"am jealous","Fragments":["of"]},{"Key":"jealous of","Fragments":["your","how"]},{"Key":"your linq","Fragments":["skill.","conversion,"]},{"Key":" @reese","Fragments":["It"]},{"Key":"@reese It","Fragments":["is."]},{"Key":"It is.","Fragments":["Trying"]},{"Key":"is. Trying","Fragments":["to"]},{"Key":"to enumerate","Fragments":["null"]},{"Key":"enumerate null","Fragments":["will"]},{"Key":"null will","Fragments":["throw"]},{"Key":"a nitpicy","Fragments":["but"]},{"Key":"nitpicy but","Fragments":["I"]},{"Key":"that's the","Fragments":["point,","name"]},{"Key":"the point,","Fragments":["but"]},{"Key":"the TransformScore","Fragments":["method"]},{"Key":"TransformScore method","Fragments":["seems"]},{"Key":"wasn't necessary.","Fragments":["Other"]},{"Key":"necessary. Other","Fragments":["than"]},{"Key":"that its","Fragments":["good.","a"]},{"Key":"really consider","Fragments":["any"]},{"Key":"any trade","Fragments":["offs,"]},{"Key":"trade offs,","Fragments":["however"]},{"Key":"offs, however","Fragments":["I"]},{"Key":"usually try","Fragments":["to"]},{"Key":"as least","Fragments":["amount"]},{"Key":"of lines","Fragments":["as","of"]},{"Key":"possible, that","Fragments":["is"]},{"Key":"still easy","Fragments":["to"]},{"Key":" Totally","Fragments":["forgot"]},{"Key":"bonus task","Fragments":["of"]},{"Key":"task of","Fragments":["making"]},{"Key":"roster un-editable","Fragments":["by"]},{"Key":"un-editable by","Fragments":["other"]},{"Key":"by other","Fragments":["classes."]},{"Key":"fun exercise.","Fragments":["I"]},{"Key":"finally started","Fragments":["wrapping"]},{"Key":"started wrapping","Fragments":["my"]},{"Key":"wrapping my","Fragments":["head"]},{"Key":"head around","Fragments":["Linq,","what"]},{"Key":"around Linq,","Fragments":["and"]},{"Key":"Linq, and","Fragments":["I"]},{"Key":"pretty stuck","Fragments":["for"]},{"Key":"stuck for","Fragments":["a"]},{"Key":"a bit,","Fragments":["but"]},{"Key":"bit, but","Fragments":["I"]},{"Key":"think committing","Fragments":["the"]},{"Key":"committing the","Fragments":["dates"]},{"Key":"the dates","Fragments":["of"]},{"Key":"dates of","Fragments":["the"]},{"Key":"the month","Fragments":["to","and","(i.e.","minus"]},{"Key":"month to","Fragments":["a"]},{"Key":"dictionary object","Fragments":["really"]},{"Key":"object really","Fragments":["got"]},{"Key":"really got","Fragments":["things"]},{"Key":"got things","Fragments":["rolling."]},{"Key":"into easier","Fragments":["to"]},{"Key":"read functions.","Fragments":["This"]},{"Key":"functions. This","Fragments":["was"]},{"Key":"was partially","Fragments":["experimenting"]},{"Key":"partially experimenting","Fragments":["with"]},{"Key":"that with","Fragments":["three","one"]},{"Key":"three different","Fragments":["methods,","times","arrangements","checks,","times?"]},{"Key":"different methods,","Fragments":["multiple"]},{"Key":"methods, multiple","Fragments":["functions"]},{"Key":"multiple functions","Fragments":["would"]},{"Key":"functions would","Fragments":["actually","be"]},{"Key":"actually decrease","Fragments":["readability"]},{"Key":"decrease readability","Fragments":["for"]},{"Key":" @josianne,","Fragments":["thank"]},{"Key":"@josianne, thank","Fragments":["you"]},{"Key":"typically like","Fragments":["to","to"]},{"Key":"express single","Fragments":["points"]},{"Key":"single points","Fragments":["of"]},{"Key":"points of","Fragments":["functionality","this"]},{"Key":"of functionality","Fragments":["within","apart"]},{"Key":"functionality within","Fragments":["different"]},{"Key":"within different","Fragments":["methods."]},{"Key":"different methods.","Fragments":["In"]},{"Key":"methods. In","Fragments":["this"]},{"Key":"I viewed","Fragments":["the"]},{"Key":"viewed the","Fragments":["iteration"]},{"Key":"the iteration","Fragments":["and"]},{"Key":"and transformation","Fragments":["of"]},{"Key":"transformation of","Fragments":["the","each"]},{"Key":"entire dictionary","Fragments":["as"]},{"Key":"one piece","Fragments":["of"]},{"Key":"of functionality,","Fragments":["and"]},{"Key":"functionality, and","Fragments":["the"]},{"Key":"individual score","Fragments":["as"]},{"Key":"score as","Fragments":["another."]},{"Key":"bonus and","Fragments":["tried"]},{"Key":"to guarantee","Fragments":["uniqueness","the"]},{"Key":"guarantee uniqueness","Fragments":["by"]},{"Key":"uniqueness by","Fragments":["using"]},{"Key":"a HashSet","Fragments":["to","and","for"]},{"Key":"HashSet to","Fragments":["check","represent"]},{"Key":"against before","Fragments":["a"]},{"Key":"a randomly","Fragments":["generated"]},{"Key":"randomly generated","Fragments":["name","key"]},{"Key":"generated name","Fragments":["is"]},{"Key":"is assigned","Fragments":["to"]},{"Key":"a Robot.","Fragments":["It"]},{"Key":"Robot. It","Fragments":["seems"]},{"Key":"seems HashSet","Fragments":["is"]},{"Key":"good choice","Fragments":["for"]},{"Key":"this, since","Fragments":["our"]},{"Key":"since our","Fragments":["main"]},{"Key":"our main","Fragments":["use"]},{"Key":"main use","Fragments":["will"]},{"Key":"be checking","Fragments":["for"]},{"Key":"for Contains","Fragments":["and"]},{"Key":"Contains and","Fragments":["using"]},{"Key":"using Add,","Fragments":["both"]},{"Key":"Add, both","Fragments":["of"]},{"Key":"very fast","Fragments":["with","lookups"]},{"Key":"fast with","Fragments":["a"]},{"Key":"this starting","Fragments":["taking"]},{"Key":"starting taking","Fragments":["a","an"]},{"Key":"hadn't already","Fragments":["been"]},{"Key":"been generated","Fragments":["once"]},{"Key":"generated once","Fragments":["you"]},{"Key":"a decent","Fragments":["number","solution."]},{"Key":"decent number","Fragments":["of"]},{"Key":"of entries.","Fragments":["I"]},{"Key":"entries. I","Fragments":["noticed"]},{"Key":"regex check","Fragments":["doesn't"]},{"Key":"doesn't require","Fragments":["the","any","the","the"]},{"Key":"whole string","Fragments":["to","4","and"]},{"Key":"of letter,","Fragments":["letter,"]},{"Key":"letter, letter,","Fragments":["number"]},{"Key":"letter, number","Fragments":["x"]},{"Key":"number x","Fragments":["3,"]},{"Key":"x 3,","Fragments":["so"]},{"Key":"3, so","Fragments":["I"]},{"Key":"simple \"serial","Fragments":["number\""]},{"Key":"\"serial number\"","Fragments":["to"]},{"Key":"number\" to","Fragments":["the"]},{"Key":"name which","Fragments":["is"]},{"Key":"a 10-character","Fragments":["padded"]},{"Key":"10-character padded","Fragments":["string"]},{"Key":"padded string","Fragments":["representation"]},{"Key":"string representation","Fragments":["of"]},{"Key":"representation of","Fragments":["the"]},{"Key":"the Count","Fragments":["of","method"]},{"Key":"Count of","Fragments":["the"]},{"Key":"the HashSet","Fragments":["of"]},{"Key":"HashSet of","Fragments":["prior"]},{"Key":"of prior","Fragments":["names."]},{"Key":"prior names.","Fragments":["This"]},{"Key":"names. This","Fragments":["of"]},{"Key":"This of","Fragments":["course"]},{"Key":"course drastically","Fragments":["improved"]},{"Key":"drastically improved","Fragments":["the"]},{"Key":"improved the","Fragments":["time"]},{"Key":"a name,","Fragments":["but"]},{"Key":"name, but","Fragments":["I","in"]},{"Key":"feel is","Fragments":["going","the"]},{"Key":"going a","Fragments":["little"]},{"Key":"little against","Fragments":["the"]},{"Key":"the spirit","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"spirit of","Fragments":["the","Nitpicking,","the","the","the","the","the","the"]},{"Key":"test where","Fragments":["I","they","grade"]},{"Key":"the uniqueness","Fragments":["of"]},{"Key":"uniqueness of","Fragments":["the"]},{"Key":"the names,","Fragments":["and"]},{"Key":"and added","Fragments":["a","to","the"]},{"Key":"to Setup","Fragments":["that"]},{"Key":"Setup that","Fragments":["clears"]},{"Key":"that clears","Fragments":["out"]},{"Key":"clears out","Fragments":["the"]},{"Key":"the prior","Fragments":["names"]},{"Key":"prior names","Fragments":["list."]},{"Key":"For readability","Fragments":["(it's"]},{"Key":"readability (it's","Fragments":["also"]},{"Key":"(it's also","Fragments":["in"]},{"Key":"also in","Fragments":["the"]},{"Key":"code comments),","Fragments":["the"]},{"Key":"comments), the","Fragments":["additions"]},{"Key":"the additions","Fragments":["I"]},{"Key":"additions I","Fragments":["made"]},{"Key":"* ***","Fragments":["Additional","Setup"]},{"Key":"*** Additional","Fragments":["test"]},{"Key":"Additional test","Fragments":["for"]},{"Key":"for uniqueness","Fragments":["-"]},{"Key":"uniqueness -","Fragments":["create"]},{"Key":"- create","Fragments":["1"]},{"Key":"create 1","Fragments":["million"]},{"Key":"1 million","Fragments":["unique","iterations"]},{"Key":"million unique","Fragments":["names"]},{"Key":"unique names","Fragments":["***","bonus."]},{"Key":" long","Fragments":["total_names","total_names"]},{"Key":"long total_names","Fragments":["=","="]},{"Key":"total_names =","Fragments":["1000000;","1000000;"]},{"Key":" HashSet\u003cstring\u003e","Fragments":["roboNames","roboNames"]},{"Key":"HashSet\u003cstring\u003e roboNames","Fragments":["=","="]},{"Key":"roboNames =","Fragments":["new","new"]},{"Key":"\u003c total_names;","Fragments":["i++)","i++)"]},{"Key":" robot","Fragments":["=","=","="]},{"Key":"robot =","Fragments":["new","new","new"]},{"Key":" name","Fragments":["=","="]},{"Key":"name =","Fragments":["robot.Name;","robot.Name;"]},{"Key":"*** Setup","Fragments":["clears"]},{"Key":"Setup clears","Fragments":["used"]},{"Key":"clears used","Fragments":["names"]},{"Key":"used names","Fragments":["set","and"]},{"Key":"names set","Fragments":["***"]},{"Key":" RobotFactory.ResetNames();","Fragments":["//"]},{"Key":"RobotFactory.ResetNames(); //","Fragments":["new"]},{"Key":"input re:","Fragments":["the"]},{"Key":"re: the","Fragments":["char."]},{"Key":"the char.","Fragments":["I"]},{"Key":"char. I","Fragments":["had"]},{"Key":"not known","Fragments":["that."]},{"Key":"not thought","Fragments":["about"]},{"Key":"code processing","Fragments":["the"]},{"Key":"the sequence","Fragments":["four","string","of"]},{"Key":"sequence four","Fragments":["times."]},{"Key":"four times.","Fragments":["That's","What"]},{"Key":"times. That's","Fragments":["a"]},{"Key":"does throw","Fragments":["an"]},{"Key":"Both Add","Fragments":["and"]},{"Key":"Add and","Fragments":["Grade","Sort.","once","not","move"]},{"Key":"and Grade","Fragments":["can"]},{"Key":"Grade can","Fragments":["create"]},{"Key":"can create","Fragments":["an","a","the","its"]},{"Key":"empty list.","Fragments":["If"]},{"Key":"If Grade","Fragments":["is"]},{"Key":"Grade is","Fragments":["called","called"]},{"Key":"called multiple","Fragments":["times","times"]},{"Key":"multiple times","Fragments":["for","you","I"]},{"Key":"times for","Fragments":["a"]},{"Key":"a grade","Fragments":["that","that"]},{"Key":"grade that","Fragments":["has","doesn't"]},{"Key":"no students,","Fragments":["each"]},{"Key":"students, each","Fragments":["time"]},{"Key":"your outside","Fragments":["container"]},{"Key":"outside container","Fragments":["is","so"]},{"Key":"container is","Fragments":["a"]},{"Key":"List that","Fragments":["you"]},{"Key":"are essentially","Fragments":["treating","violating","the"]},{"Key":"essentially treating","Fragments":["as"]},{"Key":"treating as","Fragments":["an"]},{"Key":"array. If","Fragments":["someone"]},{"Key":"someone incorrectly","Fragments":["adds"]},{"Key":"incorrectly adds","Fragments":["a"]},{"Key":"to grade","Fragments":["10000","n"]},{"Key":"grade 10000","Fragments":["you"]},{"Key":"10000 you","Fragments":["have"]},{"Key":"create 9990","Fragments":["or"]},{"Key":"9990 or","Fragments":["so"]},{"Key":"or so","Fragments":["empty"]},{"Key":"so empty","Fragments":["lists."]},{"Key":"empty lists.","Fragments":["Try"]},{"Key":"lists. Try","Fragments":["using"]},{"Key":"Try using","Fragments":["a","a","Linq","Linq?"]},{"Key":"the outside","Fragments":["container"]},{"Key":"container so","Fragments":["that"]},{"Key":"grades that","Fragments":["are","already"]},{"Key":"are accessed","Fragments":["will","by"]},{"Key":"accessed will","Fragments":["have"]},{"Key":"any data","Fragments":["stored"]},{"Key":"data stored","Fragments":["for"]},{"Key":"stored for","Fragments":["them."]},{"Key":"always prefer","Fragments":["braces"]},{"Key":"prefer braces","Fragments":["around"]},{"Key":"around any","Fragments":["code"]},{"Key":"'if' or","Fragments":["'for'."]},{"Key":"or 'for'.","Fragments":["I"]},{"Key":"'for'. I","Fragments":["understand"]},{"Key":"understand some","Fragments":["people"]},{"Key":"people prefer","Fragments":["that"]},{"Key":"prefer that","Fragments":["if"]},{"Key":"line in","Fragments":["the","each","Match()"]},{"Key":"they braces","Fragments":["get"]},{"Key":"braces get","Fragments":["omitted."]},{"Key":"get omitted.","Fragments":["I"]},{"Key":"omitted. I","Fragments":["can"]},{"Key":"can deal","Fragments":["with","with"]},{"Key":"with that.","Fragments":["However,"]},{"Key":"that. However,","Fragments":["I"]},{"Key":"strongly suggest","Fragments":["that"]},{"Key":"suggest that","Fragments":["if","you"]},{"Key":"use braces.","Fragments":["That"]},{"Key":"braces. That","Fragments":["would"]},{"Key":"'if' statement","Fragments":["in","to"]},{"Key":"in Add","Fragments":["should","instead"]},{"Key":"Add should","Fragments":["have"]},{"Key":"use better","Fragments":["names"]},{"Key":"names than","Fragments":["p,"]},{"Key":"than p,","Fragments":["p1,"]},{"Key":"p, p1,","Fragments":["and"]},{"Key":"p1, and","Fragments":["p2?"]},{"Key":"and p2?","Fragments":["Those"]},{"Key":"p2? Those","Fragments":["don't"]},{"Key":"Those don't","Fragments":["give"]},{"Key":"don't give","Fragments":["me"]},{"Key":"me any","Fragments":["information","places."]},{"Key":"any information","Fragments":["except"]},{"Key":"information except","Fragments":["that"]},{"Key":"doing work","Fragments":["that"]},{"Key":"is getting","Fragments":["tossed","tossed","955","silly"]},{"Key":"getting tossed","Fragments":["away.","away"]},{"Key":"tossed away.","Fragments":["In"]},{"Key":"away. In","Fragments":["Add,"]},{"Key":"In Add,","Fragments":["if","every"]},{"Key":"Add, if","Fragments":["Roster"]},{"Key":"if Roster","Fragments":["contains"]},{"Key":"Roster contains","Fragments":["the"]},{"Key":"the grade,","Fragments":["you","this"]},{"Key":"grade, you","Fragments":["are"]},{"Key":"are creating","Fragments":["an","a"]},{"Key":"then immediately","Fragments":["tossing"]},{"Key":"immediately tossing","Fragments":["it"]},{"Key":"tossing it","Fragments":["away"]},{"Key":"it away","Fragments":["when","for"]},{"Key":"away when","Fragments":["you"]},{"Key":"you assign","Fragments":["'students'","the","Console.Readline"]},{"Key":"assign 'students'","Fragments":["to"]},{"Key":"'students' to","Fragments":["be"]},{"Key":"be Roster[grade].","Fragments":["Similarly,"]},{"Key":"Roster[grade]. Similarly,","Fragments":["in"]},{"Key":"Similarly, in","Fragments":["Grade,"]},{"Key":"in Grade,","Fragments":["you"]},{"Key":"then attempt","Fragments":["to"]},{"Key":"access Roster[grade].","Fragments":["If"]},{"Key":"Roster[grade]. If","Fragments":["it"]},{"Key":"it succeeds","Fragments":["you"]},{"Key":"succeeds you","Fragments":["toss"]},{"Key":"you toss","Fragments":["away"]},{"Key":"toss away","Fragments":["your"]},{"Key":"away your","Fragments":["newly"]},{"Key":"your newly","Fragments":["created","created"]},{"Key":"created list.","Fragments":["You"]},{"Key":"list. You","Fragments":["probably"]},{"Key":"the creation","Fragments":["of","of"]},{"Key":"creation of","Fragments":["the","the","n"]},{"Key":"list into","Fragments":["the"]},{"Key":"the catch","Fragments":["block","block","all,"]},{"Key":"catch block","Fragments":["(and","in"]},{"Key":"block (and","Fragments":["you"]},{"Key":"(and you","Fragments":["won't"]},{"Key":"won't need","Fragments":["to"]},{"Key":"created list","Fragments":["in","so"]},{"Key":"in Grade.","Fragments":["Otherwise"]},{"Key":"Grade. Otherwise","Fragments":["if"]},{"Key":"Otherwise if","Fragments":["the"]},{"Key":"caller calls","Fragments":["Grade","Kind"]},{"Key":"calls Grade","Fragments":["on"]},{"Key":"Grade on","Fragments":["an","a"]},{"Key":"empty grade","Fragments":["over"]},{"Key":"grade over","Fragments":["and"]},{"Key":"and over,","Fragments":["you"]},{"Key":"over, you","Fragments":["are"]},{"Key":"Add, every","Fragments":["line"]},{"Key":"every line","Fragments":["is"]},{"Key":"by itself.","Fragments":["Using"]},{"Key":"itself. Using","Fragments":["white-space"]},{"Key":"Using white-space","Fragments":["judiciously"]},{"Key":"white-space judiciously","Fragments":["can"]},{"Key":"judiciously can","Fragments":["help"]},{"Key":"would leave","Fragments":["a"]},{"Key":"leave a","Fragments":["blank"]},{"Key":"a blank","Fragments":["line","on"]},{"Key":"blank line","Fragments":["after"]},{"Key":"line after","Fragments":["the"]},{"Key":"the declaration","Fragments":["of","of"]},{"Key":"declaration of","Fragments":["'students'","`string`","`int"]},{"Key":"of 'students'","Fragments":["but"]},{"Key":"'students' but","Fragments":["then"]},{"Key":"last three","Fragments":["lines"]},{"Key":"three lines","Fragments":["all"]},{"Key":"lines all","Fragments":["be"]},{"Key":"grouped together,","Fragments":["because"]},{"Key":"together, because","Fragments":["they"]},{"Key":"you trap","Fragments":["EVERY"]},{"Key":"trap EVERY","Fragments":["exception."]},{"Key":"EVERY exception.","Fragments":["Since"]},{"Key":"exception. Since","Fragments":["you"]},{"Key":"are expecting","Fragments":["a","double","````Dictionary\u003cstring,"]},{"Key":"expecting a","Fragments":["particular"]},{"Key":"particular exception","Fragments":["you"]},{"Key":"exception you","Fragments":["should"]},{"Key":"just handle","Fragments":["that"]},{"Key":"handle that","Fragments":["one.","string","scenario."]},{"Key":"one. If","Fragments":["something","an"]},{"Key":"If something","Fragments":["unexpected"]},{"Key":"something unexpected","Fragments":["happens"]},{"Key":"unexpected happens","Fragments":["you"]},{"Key":"happens you","Fragments":["wouldn't"]},{"Key":"to mask","Fragments":["that"]},{"Key":"mask that","Fragments":["by"]},{"Key":"that by","Fragments":["doing","having","the"]},{"Key":"handle a","Fragments":["grade"]},{"Key":"doesn't yet","Fragments":["exist."]},{"Key":"And finally,","Fragments":["the"]},{"Key":"finally, the","Fragments":["indenting"]},{"Key":"the indenting","Fragments":["of","and"]},{"Key":"indenting of","Fragments":["your"]},{"Key":"your last","Fragments":["two","```if```"]},{"Key":"is off.","Fragments":["This"]},{"Key":"off. This","Fragments":["one"]},{"Key":"How could","Fragments":["skip"]},{"Key":"skip and","Fragments":["Take"]},{"Key":"and Take","Fragments":["work?"]},{"Key":"Why on","Fragments":["earth"]},{"Key":"on earth","Fragments":["would","or"]},{"Key":"earth would","Fragments":["you"]},{"Key":"use Convert.ToChar(\"A\")","Fragments":["when"]},{"Key":"Convert.ToChar(\"A\") when","Fragments":["you"]},{"Key":"use 'A'?","Fragments":["You"]},{"Key":"'A'? You","Fragments":["have"]},{"Key":"a hard-coded","Fragments":["string","character"]},{"Key":"hard-coded string","Fragments":["(\"A\")"]},{"Key":"string (\"A\")","Fragments":["and"]},{"Key":"(\"A\") and","Fragments":["you"]},{"Key":"a character,","Fragments":["so"]},{"Key":"character, so","Fragments":["why"]},{"Key":"so why","Fragments":["not","not"]},{"Key":"hard-coded character","Fragments":["('A')."]},{"Key":"character ('A').","Fragments":["If"]},{"Key":"('A'). If","Fragments":["you"]},{"Key":"are new","Fragments":["-"]},{"Key":"new -","Fragments":["double-quotes"]},{"Key":"- double-quotes","Fragments":["denotes"]},{"Key":"double-quotes denotes","Fragments":["a"]},{"Key":"denotes a","Fragments":["string","character."]},{"Key":"single quotes","Fragments":["denotes"]},{"Key":"quotes denotes","Fragments":["a"]},{"Key":"Another concern","Fragments":["is"]},{"Key":"concern is","Fragments":["that","dealing","that","that"]},{"Key":"algorithm processes","Fragments":["the"]},{"Key":"processes the","Fragments":["sequence"]},{"Key":"sequence string","Fragments":["four"]},{"Key":"string four","Fragments":["times."]},{"Key":"times. What","Fragments":["if"]},{"Key":"was millions","Fragments":["of"]},{"Key":"characters long","Fragments":["and"]},{"Key":"were processing","Fragments":["thousands"]},{"Key":"processing thousands","Fragments":["of"]},{"Key":"thousands of","Fragments":["them?","times","operations"]},{"Key":"of them?","Fragments":["Can"]},{"Key":"them? Can","Fragments":["you"]},{"Key":"you rewrite","Fragments":["it"]},{"Key":"string just","Fragments":["once?","to"]},{"Key":"string contains","Fragments":["an"]},{"Key":"contains an","Fragments":["error","int."]},{"Key":"error -","Fragments":["i.e."]},{"Key":"- i.e.","Fragments":["it"]},{"Key":"i.e. it","Fragments":["has"]},{"Key":"character that","Fragments":["is"]},{"Key":"not 'A',","Fragments":["'T',"]},{"Key":"'A', 'T',","Fragments":["'C',"]},{"Key":"'T', 'C',","Fragments":["or"]},{"Key":"'C', or","Fragments":["'G'?"]},{"Key":"or 'G'?","Fragments":["Can"]},{"Key":"'G'? Can","Fragments":["you"]},{"Key":"you detect","Fragments":["this","that"]},{"Key":"detect this","Fragments":["and"]},{"Key":"an exception?","Fragments":["Note"]},{"Key":"exception? Note","Fragments":["that"]},{"Key":"Note that","Fragments":["this","you","the"]},{"Key":"easier if","Fragments":["you"]},{"Key":"are scanning","Fragments":["the","1.5Gb"]},{"Key":"string only","Fragments":["once."]},{"Key":"Your public","Fragments":["Count"]},{"Key":"public Count","Fragments":["function"]},{"Key":"Count function","Fragments":["does"]},{"Key":"function does","Fragments":["all"]},{"Key":"does all","Fragments":["the"]},{"Key":"I call","Fragments":["DNA.Count('A')","the"]},{"Key":"call DNA.Count('A')","Fragments":["over"]},{"Key":"DNA.Count('A') over","Fragments":["and"]},{"Key":"over again,","Fragments":["it"]},{"Key":"again, it","Fragments":["has"]},{"Key":"string each","Fragments":["time."]},{"Key":"each time.","Fragments":["Since","Behind","If","If"]},{"Key":"time. Since","Fragments":["you"]},{"Key":"work of","Fragments":["scanning"]},{"Key":"of scanning","Fragments":["the"]},{"Key":"constructor, can","Fragments":["you"]},{"Key":"make Count","Fragments":["more"]},{"Key":"Count more","Fragments":["efficient?"]},{"Key":"personally not","Fragments":["make"]},{"Key":"methods out","Fragments":["of"]},{"Key":"simple stuff","Fragments":["as"]},{"Key":"stuff as","Fragments":["modulo"]},{"Key":"as modulo","Fragments":["but"]},{"Key":"modulo but","Fragments":["I"]},{"Key":"small problem","Fragments":["with"]},{"Key":"that both","Fragments":["Grade","strand1"]},{"Key":"both Grade","Fragments":["and","and"]},{"Key":"Grade and","Fragments":["Add","Add."]},{"Key":"Add can","Fragments":["create"]},{"Key":"a grade.","Fragments":["If"]},{"Key":"grade. If","Fragments":["no"]},{"Key":"been added","Fragments":["to","to","to","to"]},{"Key":"particular grade,","Fragments":["but"]},{"Key":"grade, but","Fragments":["Grade"]},{"Key":"but Grade","Fragments":["is","still"]},{"Key":"list gets","Fragments":["generated"]},{"Key":"gets generated","Fragments":["but"]},{"Key":"generated but","Fragments":["isn't"]},{"Key":"isn't stored,","Fragments":["so"]},{"Key":"stored, so","Fragments":["if"]},{"Key":"it happens","Fragments":["again"]},{"Key":"happens again","Fragments":["for"]},{"Key":"same grade","Fragments":["another"]},{"Key":"grade another","Fragments":["list"]},{"Key":"another list","Fragments":["will"]},{"Key":"get created.","Fragments":["I'd"]},{"Key":"created. I'd","Fragments":["suggest"]},{"Key":"suggest saving","Fragments":["that"]},{"Key":"saving that","Fragments":["created"]},{"Key":"that created","Fragments":["list","unnecessary"]},{"Key":"list so","Fragments":["you"]},{"Key":"create lists","Fragments":["extra"]},{"Key":"lists extra","Fragments":["times."]},{"Key":"extra times.","Fragments":["Even"]},{"Key":"times. Even","Fragments":["better"]},{"Key":"Even better","Fragments":["would"]},{"Key":"better would","Fragments":["be"]},{"Key":"that adds","Fragments":["a"]},{"Key":"new grade","Fragments":["and"]},{"Key":"grade and","Fragments":["empty"]},{"Key":"and empty","Fragments":["list","values."]},{"Key":"dictionary if","Fragments":["it"]},{"Key":"isn't there","Fragments":["and","on"]},{"Key":"little imbalance","Fragments":["between"]},{"Key":"imbalance between","Fragments":["access"]},{"Key":"between access","Fragments":["modifiers."]},{"Key":"You can't","Fragments":["access"]},{"Key":"can't access","Fragments":["IsLeap"]},{"Key":"access IsLeap","Fragments":["method"]},{"Key":"from different","Fragments":["project/assembly."]},{"Key":"was your","Fragments":["intention","reasoning"]},{"Key":"intention from","Fragments":["the"]},{"Key":"the start,","Fragments":["then"]},{"Key":"start, then","Fragments":["public"]},{"Key":"then public","Fragments":["modifier"]},{"Key":"public modifier","Fragments":["on"]},{"Key":"modifier on","Fragments":["IsLeap","the"]},{"Key":"on IsLeap","Fragments":["method"]},{"Key":"of 'var',","Fragments":["I"]},{"Key":"'var', I","Fragments":["would"]},{"Key":"change something","Fragments":["back"]},{"Key":"something back","Fragments":["from"]},{"Key":"back from","Fragments":["an"]},{"Key":"explicit type","Fragments":["to","for"]},{"Key":"to 'var'.","Fragments":["Being"]},{"Key":"'var'. Being","Fragments":["explicit"]},{"Key":"Being explicit","Fragments":["can"]},{"Key":"explicit can","Fragments":["help","really"]},{"Key":"operator it","Fragments":["would"]},{"Key":"The expression","Fragments":["evaluates"]},{"Key":"what I'll","Fragments":["do"]},{"Key":"is I'll","Fragments":["go"]},{"Key":"some Linq,","Fragments":["but"]},{"Key":"Linq, but","Fragments":["not","may"]},{"Key":"the way,","Fragments":["so","I"]},{"Key":"way, so","Fragments":["it's"]},{"Key":"whole one-line","Fragments":["thing"]},{"Key":"one-line thing","Fragments":["or"]},{"Key":"thing or","Fragments":["something."]},{"Key":"the GetAreaCode()","Fragments":["function"]},{"Key":"GetAreaCode() function","Fragments":["odd."]},{"Key":"function odd.","Fragments":["It"]},{"Key":"odd. It","Fragments":["seems"]},{"Key":"more intuitive","Fragments":["for"]},{"Key":"intuitive for","Fragments":["GetAreaCode()"]},{"Key":"for GetAreaCode()","Fragments":["to"]},{"Key":"GetAreaCode() to","Fragments":["return"]},{"Key":"constructor assign","Fragments":["that"]},{"Key":"assign that","Fragments":["string","to"]},{"Key":"the variable.","Fragments":["I'd","The"]},{"Key":"variable. I'd","Fragments":["do"]},{"Key":"do CheckNum()","Fragments":["similarly."]},{"Key":"CheckNum() similarly.","Fragments":["I"]},{"Key":"similarly. I","Fragments":["would"]},{"Key":"input CheckNum()","Fragments":["rather"]},{"Key":"CheckNum() rather","Fragments":["than"]},{"Key":"public PhoneNumber(string","Fragments":["phoneNum)"]},{"Key":" Number","Fragments":["=","=","=","=","=","=","*=","+=","=","=","=","=","=","=","=","*=","+=","=","*=","+=","=","*=","+=","=","*=","+=","=","*=","+="]},{"Key":"Number =","Fragments":["CheckNum(phoneNum);","0.","0","Number","Number","0","0","Number","Number","0;","Number","Number","0","0","0","0","0"]},{"Key":" AreaCode","Fragments":["="]},{"Key":"AreaCode =","Fragments":["GetAreaCode();"]},{"Key":"return Number.Substring(0,","Fragments":["3);"]},{"Key":"string CheckNum(string","Fragments":["input)"]},{"Key":"string number","Fragments":["="]},{"Key":"number =","Fragments":["Regex.Replace(input,","number.Substring(1);","\"0000000000\";","number","number"]},{"Key":"= Regex.Replace(input,","Fragments":["@\"[^\\d]\","]},{"Key":"Regex.Replace(input, @\"[^\\d]\",","Fragments":["String.Empty);"]},{"Key":"if (number.Length","Fragments":["==","=="]},{"Key":"(number.Length ==","Fragments":["11","10)"]},{"Key":"== 11","Fragments":["\u0026\u0026"]},{"Key":"11 \u0026\u0026","Fragments":["number[0]"]},{"Key":"\u0026\u0026 number[0]","Fragments":["==","=="]},{"Key":"number[0] ==","Fragments":["'1')","'1')\"."]},{"Key":" number","Fragments":["=","=","-=","-=","=","="]},{"Key":"This just","Fragments":["makes","expands"]},{"Key":"me. One","Fragments":["of"]},{"Key":"One of","Fragments":["the","many"]},{"Key":"the benefits","Fragments":["is","of","of"]},{"Key":"benefits is","Fragments":["that"]},{"Key":"only assign","Fragments":["a"]},{"Key":"assign a","Fragments":["value","different"]},{"Key":"to Number","Fragments":["once."]},{"Key":"Number once.","Fragments":["If"]},{"Key":"once. If","Fragments":["you","it","Score()"]},{"Key":"you later","Fragments":["redo","combine"]},{"Key":"later redo","Fragments":["your"]},{"Key":"redo your","Fragments":["class"]},{"Key":"complicated 'set'","Fragments":["code,"]},{"Key":"'set' code,","Fragments":["then"]},{"Key":"then this","Fragments":["will","is","pattern"]},{"Key":"as that","Fragments":["set","is","is","method","is","saves"]},{"Key":"set code","Fragments":["only"]},{"Key":"code only","Fragments":["gets"]},{"Key":"only gets","Fragments":["called","executed"]},{"Key":"gets called","Fragments":["once."]},{"Key":" N0","Fragments":["c0d3z"]},{"Key":"N0 c0d3z","Fragments":["f0r"]},{"Key":"c0d3z f0r","Fragments":["y0u"]},{"Key":"the Select(word","Fragments":["=\u003e"]},{"Key":"Select(word =\u003e","Fragments":["word)"]},{"Key":"=\u003e word)","Fragments":["thing..."]},{"Key":"word) thing...","Fragments":["it"]},{"Key":"thing... it","Fragments":["was"]},{"Key":"an automatically","Fragments":["corrected"]},{"Key":"automatically corrected","Fragments":["suggestion,"]},{"Key":"corrected suggestion,","Fragments":["which"]},{"Key":"suggestion, which","Fragments":["must"]},{"Key":"which must","Fragments":["have"]},{"Key":"have gotten","Fragments":["messed","used"]},{"Key":"gotten messed","Fragments":["up"]},{"Key":"up (either","Fragments":["that"]},{"Key":"(either that","Fragments":["or"]},{"Key":"some point).","Fragments":["I"]},{"Key":"point). I","Fragments":["guess"]},{"Key":"remove that","Fragments":["(so","step,","in"]},{"Key":"that (so","Fragments":["it's"]},{"Key":"(so it's","Fragments":["just"]},{"Key":"as Linq","Fragments":["goes,"]},{"Key":"Linq goes,","Fragments":["I"]},{"Key":"goes, I","Fragments":["like"]},{"Key":"well, but","Fragments":["I"]},{"Key":"read sometimes.","Fragments":["I'll"]},{"Key":"sometimes. I'll","Fragments":["take"]},{"Key":"I'll take","Fragments":["a","another","those"]},{"Key":"at it,","Fragments":["though."]},{"Key":"it, though.","Fragments":["Thanks!"]},{"Key":"lost. Modulo","Fragments":["is"]},{"Key":"Modulo is","Fragments":["a"]},{"Key":"fairly standard","Fragments":["operator"]},{"Key":"standard operator","Fragments":["that"]},{"Key":"operator that","Fragments":["everyone"]},{"Key":"that everyone","Fragments":["SHOULD","else","is"]},{"Key":"everyone SHOULD","Fragments":["know"]},{"Key":"SHOULD know","Fragments":["about."]},{"Key":"know about.","Fragments":["It"]},{"Key":"about. It","Fragments":["is"]},{"Key":"is frequently","Fragments":["used"]},{"Key":"frequently used","Fragments":["to"]},{"Key":"is odd","Fragments":["or","since"]},{"Key":"odd or","Fragments":["even."]},{"Key":" Spelling","Fragments":["out"]},{"Key":"Spelling out","Fragments":["what"]},{"Key":"the operator","Fragments":["does","\"or\""]},{"Key":"operator does","Fragments":["is"]},{"Key":"does is","Fragments":["just"]},{"Key":"of lines.","Fragments":["Would"]},{"Key":"lines. Would","Fragments":["you"]},{"Key":"you also","Fragments":["write","use","like"]},{"Key":"also write","Fragments":["5"]},{"Key":"write 5","Fragments":["+"]},{"Key":"5 +","Fragments":["1"]},{"Key":"var FivePlusOne","Fragments":["="]},{"Key":"FivePlusOne =","Fragments":["5"]},{"Key":"= 5","Fragments":["+1"]},{"Key":"5 +1","Fragments":["?"]},{"Key":"only reason","Fragments":["to","for"]},{"Key":"debug and","Fragments":["step"]},{"Key":"each to","Fragments":["see"]},{"Key":"value I","Fragments":["guess,","would"]},{"Key":"I guess,","Fragments":["however"]},{"Key":"guess, however","Fragments":["for"]},{"Key":"however for","Fragments":["a"]},{"Key":"expression as","Fragments":["this"]},{"Key":"this you","Fragments":["don't","can"]},{"Key":"that at","Fragments":["all","some","the","some"]},{"Key":"Here, I","Fragments":["managed"]},{"Key":"my bugs","Fragments":["from"]},{"Key":"bugs from","Fragments":["earlier","simple"]},{"Key":"from earlier","Fragments":["by"]},{"Key":"earlier by","Fragments":["using"]},{"Key":"that we've","Fragments":["checked."]},{"Key":"we've checked.","Fragments":["My"]},{"Key":"checked. My","Fragments":["guess"]},{"Key":"is somewhat","Fragments":["inefficient:","confusing.","unneccesary.","more"]},{"Key":"somewhat inefficient:","Fragments":["any"]},{"Key":"inefficient: any","Fragments":["suggestions?"]},{"Key":"comments you","Fragments":["might"]},{"Key":"to dial","Fragments":["down"]},{"Key":"dial down","Fragments":["on"]},{"Key":"only comment","Fragments":["things","I"]},{"Key":"comment things","Fragments":["that"]},{"Key":"not obvious","Fragments":["to","why"]},{"Key":"to read/use","Fragments":["your"]},{"Key":"read/use your","Fragments":["code."]},{"Key":"nested if-statements","Fragments":["for","are"]},{"Key":"if-statements for","Fragments":["this"]},{"Key":"and even","Fragments":["if","if","messier","without"]},{"Key":"more simple.","Fragments":["The"]},{"Key":"simple. The","Fragments":["only"]},{"Key":"So on","Fragments":["my","this"]},{"Key":"iteration, @imani","Fragments":["pointed"]},{"Key":"@imani pointed","Fragments":["out"]},{"Key":"was cycling","Fragments":["through"]},{"Key":"cycling through","Fragments":["the"]},{"Key":"4 times,","Fragments":["plus"]},{"Key":"times, plus","Fragments":["any"]},{"Key":"plus any","Fragments":["time"]},{"Key":"was called.","Fragments":["In"]},{"Key":"called. In","Fragments":["this"]},{"Key":"only cycle","Fragments":["through"]},{"Key":"cycle through","Fragments":["the"]},{"Key":"string one","Fragments":["time"]},{"Key":"one time","Fragments":["and"]},{"Key":"dictionary reference","Fragments":["to"]},{"Key":"efficient, and","Fragments":["it"]},{"Key":"it catches","Fragments":["any","a"]},{"Key":"catches any","Fragments":["invalid"]},{"Key":" @darrion,","Fragments":["good"]},{"Key":"@darrion, good","Fragments":["call"]},{"Key":"on `FindDayInWeek`.","Fragments":["My"]},{"Key":"`FindDayInWeek`. My","Fragments":["solution"]},{"Key":"solution was","Fragments":["lazy."]},{"Key":"something this","Fragments":["simple,","size","size"]},{"Key":"would agree.","Fragments":["If"]},{"Key":"agree. If","Fragments":["the"]},{"Key":"quite complicated,","Fragments":["it"]},{"Key":"function -","Fragments":["especially"]},{"Key":"- especially","Fragments":["if","if"]},{"Key":"about only","Fragments":["assigning"]},{"Key":"only assigning","Fragments":["a"]},{"Key":"value once--I","Fragments":["will"]},{"Key":"once--I will","Fragments":["circle"]},{"Key":"will circle","Fragments":["back"]},{"Key":"circle back","Fragments":["on"]},{"Key":"back on","Fragments":["this","that"]},{"Key":"the CheckNum","Fragments":["using"]},{"Key":"CheckNum using","Fragments":["an"]},{"Key":"an input.","Fragments":["I"]},{"Key":"getting some","Fragments":["problems"]},{"Key":"some problems","Fragments":["with"]},{"Key":"null strings.","Fragments":["When"]},{"Key":"strings. When","Fragments":["I"]},{"Key":"Number variable,","Fragments":["the"]},{"Key":"variable, the","Fragments":["problems"]},{"Key":"problems went","Fragments":["away..."]},{"Key":"Here I","Fragments":["decided"]},{"Key":"start switching","Fragments":["to"]},{"Key":"switching to","Fragments":["more"]},{"Key":"more Linq-oriented","Fragments":["solutions,"]},{"Key":"Linq-oriented solutions,","Fragments":["like"]},{"Key":"solutions, like","Fragments":["@lonie"]},{"Key":"like @lonie","Fragments":["suggested."]},{"Key":" Breaking","Fragments":["up"]},{"Key":"Breaking up","Fragments":["the"]},{"Key":"long lines","Fragments":["with"]},{"Key":"with clearer","Fragments":["formatting"]},{"Key":"clearer formatting","Fragments":["would"]},{"Key":"formatting would","Fragments":["help."]},{"Key":" No.","Fragments":["The"]},{"Key":"No. The","Fragments":["code"]},{"Key":"code throws","Fragments":["an","an","a"]},{"Key":"user asks","Fragments":["for"]},{"Key":"count of","Fragments":["an","the","Roster","5"]},{"Key":"invalid nucleotide","Fragments":["(in","is","is"]},{"Key":"nucleotide (in","Fragments":["Count)."]},{"Key":"(in Count).","Fragments":["If"]},{"Key":"Count). If","Fragments":["the"]},{"Key":"sequence has","Fragments":["an"]},{"Key":"invalid character","Fragments":["in"]},{"Key":"in it,","Fragments":["no","6"]},{"Key":"it, no","Fragments":["exception"]},{"Key":"no exception","Fragments":["is"]},{"Key":"is thrown.","Fragments":["In"]},{"Key":"thrown. In","Fragments":["other"]},{"Key":"other words,","Fragments":["dna.Count('X')"]},{"Key":"words, dna.Count('X')","Fragments":["will"]},{"Key":"dna.Count('X') will","Fragments":["throw"]},{"Key":"but new","Fragments":["DNA(\"ACTGX\")"]},{"Key":"new DNA(\"ACTGX\")","Fragments":["will"]},{"Key":"DNA(\"ACTGX\") will","Fragments":["not."]},{"Key":"I disagree.","Fragments":["For","The","If"]},{"Key":"disagree. For","Fragments":["a"]},{"Key":"simple double","Fragments":["loop"]},{"Key":"double loop","Fragments":["like"]},{"Key":"like this,","Fragments":["nesting","in","but"]},{"Key":"this, nesting","Fragments":["foreach"]},{"Key":"foreach statements","Fragments":["is"]},{"Key":"fine. If","Fragments":["it"]},{"Key":"it got","Fragments":["complicated"]},{"Key":"got complicated","Fragments":["it"]},{"Key":"complicated it","Fragments":["would"]},{"Key":"loop out","Fragments":["into"]},{"Key":"a function,","Fragments":["but","but"]},{"Key":"happening is","Fragments":["nice"]},{"Key":"get you","Fragments":["now.","completely"]},{"Key":"you now.","Fragments":["I"]},{"Key":"will look","Fragments":["at","at"]},{"Key":"The FindDayInWeek","Fragments":["function"]},{"Key":"FindDayInWeek function","Fragments":["should"]},{"Key":"be directly","Fragments":["calculatable.","changed"]},{"Key":"directly calculatable.","Fragments":["If"]},{"Key":"calculatable. If","Fragments":["'day'"]},{"Key":"If 'day'","Fragments":["is"]},{"Key":"'day' is","Fragments":["a"]},{"Key":"a Tuesday","Fragments":["and"]},{"Key":"Tuesday and","Fragments":["you"]},{"Key":"a Friday,","Fragments":["can"]},{"Key":"Friday, can","Fragments":["you"]},{"Key":"simply add","Fragments":["3"]},{"Key":"add 3","Fragments":["instead"]},{"Key":"3 instead","Fragments":["of"]},{"Key":"adding 0","Fragments":["then"]},{"Key":"then 1,","Fragments":["then"]},{"Key":"1, then","Fragments":["2,","it"]},{"Key":"then 2,","Fragments":["etc."]},{"Key":"2, etc.","Fragments":["(twice"]},{"Key":"etc. (twice","Fragments":["per"]},{"Key":"(twice per","Fragments":["iteration)?"]},{"Key":"would refactor/reuse","Fragments":["single"]},{"Key":"refactor/reuse single","Fragments":["words"]},{"Key":"single words","Fragments":["in"]},{"Key":"words in","Fragments":["single","the"]},{"Key":"Sure, using","Fragments":["same"]},{"Key":"using same","Fragments":["words"]},{"Key":"same words","Fragments":["couple"]},{"Key":"words couple","Fragments":["times."]},{"Key":"couple times.","Fragments":["But"]},{"Key":"times. But","Fragments":["each"]},{"Key":"But each","Fragments":["verse"]},{"Key":"each verse","Fragments":["is","before","contains"]},{"Key":"the 'while'","Fragments":["loop","loop."]},{"Key":"'while' loop","Fragments":["in"]},{"Key":"me ```IsDivisibleBy```","Fragments":["is"]},{"Key":"```IsDivisibleBy``` is","Fragments":["a"]},{"Key":"than ```x","Fragments":["%"]},{"Key":"```x %","Fragments":["y"]},{"Key":"== 0```.","Fragments":["I"]},{"Key":"0```. I","Fragments":["don't"]},{"Key":"it's hurting","Fragments":["anything"]},{"Key":"hurting anything","Fragments":["by"]},{"Key":"anything by","Fragments":["having","declaring"]},{"Key":"people might","Fragments":["disagree."]},{"Key":"might disagree.","Fragments":["And"]},{"Key":"disagree. And","Fragments":["no,"]},{"Key":"And no,","Fragments":["I"]},{"Key":"no, I","Fragments":["wouldn't","didn't","meant"]},{"Key":"wouldn't create","Fragments":["```IsEqualToZero()```"]},{"Key":"create ```IsEqualToZero()```","Fragments":["because"]},{"Key":"```IsEqualToZero()``` because","Fragments":["```"]},{"Key":"because ```","Fragments":["x"]},{"Key":"``` x","Fragments":["=="]},{"Key":"0``` is","Fragments":["perfectly"]},{"Key":"is perfectly","Fragments":["understandable"]},{"Key":"perfectly understandable","Fragments":["by"]},{"Key":"understandable by","Fragments":["just"]},{"Key":"just about","Fragments":["anyone.","everyone","perfect,","as","nailed","idiomatic"]},{"Key":"on FindDayInWeek.","Fragments":["That"]},{"Key":"FindDayInWeek. That","Fragments":["is"]},{"Key":"essentially what","Fragments":["I","I"]},{"Key":"did. The","Fragments":["only","Grade-School"]},{"Key":"only caveat","Fragments":["is"]},{"Key":"caveat is","Fragments":["that"]},{"Key":"it assumes","Fragments":["that","you"]},{"Key":"assumes that","Fragments":["the","the"]},{"Key":"enumeration DayOfWeek","Fragments":["is"]},{"Key":"DayOfWeek is","Fragments":["in"]},{"Key":"same order","Fragments":["that","that"]},{"Key":"we normally","Fragments":["put","use"]},{"Key":"normally put","Fragments":["them."]},{"Key":"put them.","Fragments":["That"]},{"Key":"them. That","Fragments":["is"]},{"Key":"fairly safe","Fragments":["assumption,"]},{"Key":"safe assumption,","Fragments":["but"]},{"Key":"assumption, but","Fragments":["in"]},{"Key":"add Asserts","Fragments":["to"]},{"Key":"Asserts to","Fragments":["validate"]},{"Key":"right Nomolos,","Fragments":["thanks."]},{"Key":"Nomolos, thanks.","Fragments":["I"]},{"Key":"thanks. I","Fragments":["change","thought"]},{"Key":"change line","Fragments":["18"]},{"Key":"18 in","Fragments":["the"]},{"Key":"didn't notice","Fragments":["that","anything"]},{"Key":"notice that","Fragments":["you","you","the"]},{"Key":"you ordered","Fragments":["the"]},{"Key":"ordered the","Fragments":["gifts","gifts","3"]},{"Key":"the gifts","Fragments":["in","in","that"]},{"Key":"gifts in","Fragments":["the","the"]},{"Key":"opposite order","Fragments":["than","that"]},{"Key":"order than","Fragments":["I"]},{"Key":"did. I","Fragments":["ordered","like"]},{"Key":"I ordered","Fragments":["the","the"]},{"Key":"order they","Fragments":["would","appear."]},{"Key":"the song,","Fragments":["so"]},{"Key":"song, so","Fragments":["twelve"]},{"Key":"so twelve","Fragments":["drummers"]},{"Key":"twelve drummers","Fragments":["first,"]},{"Key":"drummers first,","Fragments":["partridge"]},{"Key":"first, partridge","Fragments":["in"]},{"Key":"partridge in","Fragments":["a"]},{"Key":"a pear","Fragments":["tree"]},{"Key":"pear tree","Fragments":["last."]},{"Key":"tree last.","Fragments":["When"]},{"Key":"last. When","Fragments":["I"]},{"Key":"am constructing","Fragments":["the"]},{"Key":"constructing the","Fragments":["list"]},{"Key":"of gifts,","Fragments":["I"]},{"Key":"gifts, I","Fragments":["use"]},{"Key":"a `GIFTS.Skip(12","Fragments":["-"]},{"Key":"verse).Take(verse)` to","Fragments":["skip"]},{"Key":"gifts that","Fragments":["aren't"]},{"Key":"aren't used,","Fragments":["then"]},{"Key":"used, then","Fragments":["start"]},{"Key":"then start","Fragments":["taking","your"]},{"Key":"start taking","Fragments":["the"]},{"Key":"taking the","Fragments":["rest","time","time"]},{"Key":"rest in","Fragments":["the"]},{"Key":"did it.","Fragments":["With"]},{"Key":"it. With","Fragments":["yours,"]},{"Key":"With yours,","Fragments":["taking"]},{"Key":"yours, taking","Fragments":["gifts"]},{"Key":"taking gifts","Fragments":["then"]},{"Key":"gifts then","Fragments":["reversing"]},{"Key":"then reversing","Fragments":["them"]},{"Key":"reversing them","Fragments":["doesn't"]},{"Key":"them doesn't","Fragments":["read"]},{"Key":"course, I","Fragments":["am"]},{"Key":"am being","Fragments":["very"]},{"Key":"being very","Fragments":["nit-picky","readable."]},{"Key":"very nit-picky","Fragments":[":smile:"]},{"Key":"nit-picky :smile:","Fragments":["I've"]},{"Key":":smile: I've","Fragments":["been"]},{"Key":"been enjoying","Fragments":["comparing"]},{"Key":"enjoying comparing","Fragments":["my"]},{"Key":"comparing my","Fragments":["solutions"]},{"Key":"to yours","Fragments":["which","with"]},{"Key":"yours which","Fragments":["are"]},{"Key":"always well","Fragments":["done."]},{"Key":"see these","Fragments":["exercises"]},{"Key":"an attempt","Fragments":["to","to","to","is"]},{"Key":"to distill","Fragments":["pure"]},{"Key":"distill pure","Fragments":["thought"]},{"Key":"pure thought","Fragments":["into"]},{"Key":"thought into","Fragments":["code"]},{"Key":"into code","Fragments":["as"]},{"Key":"as succinctly","Fragments":["and"]},{"Key":"possible and","Fragments":["it"]},{"Key":"always interesting","Fragments":["seeing"]},{"Key":"interesting seeing","Fragments":["how"]},{"Key":"many ways","Fragments":["we"]},{"Key":"use TakeWhile","Fragments":["for"]},{"Key":"TakeWhile for","Fragments":["the"]},{"Key":"my life.","Fragments":[":)"]},{"Key":"life. :)","Fragments":["I"]},{"Key":"like reading","Fragments":["1"]},{"Key":"reading 1","Fragments":["thru"]},{"Key":"1 thru","Fragments":["12"]},{"Key":"12 in","Fragments":["the"]},{"Key":"dictionary, so","Fragments":["I"]},{"Key":"I end","Fragments":["up"]},{"Key":"up having","Fragments":["to"]},{"Key":"reverse it","Fragments":["this","because"]},{"Key":"way. You","Fragments":["are"]},{"Key":"right, it","Fragments":["isn't"]},{"Key":"isn't ideal,","Fragments":["but"]},{"Key":"ideal, but","Fragments":["I"]},{"Key":"wanted a","Fragments":["different"]},{"Key":"different example","Fragments":["out"]},{"Key":"example out","Fragments":["there."]},{"Key":"out there.","Fragments":[":)","Will"]},{"Key":"approach -","Fragments":["using"]},{"Key":"- using","Fragments":["a"]},{"Key":"a UsedNames","Fragments":["variable"]},{"Key":"UsedNames variable","Fragments":["to"]},{"Key":"hold already","Fragments":["created"]},{"Key":"already created","Fragments":["names.","time"]},{"Key":"created names.","Fragments":["In"]},{"Key":"names. In","Fragments":["a"]},{"Key":"where we're","Fragments":["doing","repeatedly"]},{"Key":"we're doing","Fragments":["a"]},{"Key":"of .Contains()","Fragments":["and"]},{"Key":".Contains() and","Fragments":[".Add(),"]},{"Key":"and .Add(),","Fragments":["and"]},{"Key":".Add(), and","Fragments":["we"]},{"Key":"the members","Fragments":["to"]},{"Key":"members to","Fragments":["be"]},{"Key":"be unique","Fragments":["anyway,"]},{"Key":"unique anyway,","Fragments":["my"]},{"Key":"anyway, my","Fragments":["thought"]},{"Key":"a HashSet\u003c\u003e","Fragments":["instead"]},{"Key":"HashSet\u003c\u003e instead","Fragments":["of"]},{"Key":"any List\u003c\u003e.","Fragments":["Performance"]},{"Key":"List\u003c\u003e. Performance","Fragments":["is"]},{"Key":"better -","Fragments":["I"]},{"Key":"wasn't profiling","Fragments":["it,"]},{"Key":"profiling it,","Fragments":["but"]},{"Key":"switched I","Fragments":["seem"]},{"Key":"the total","Fragments":["time","of"]},{"Key":"total time","Fragments":["reducing"]},{"Key":"time reducing","Fragments":["by"]},{"Key":"reducing by","Fragments":["half"]},{"Key":"by half","Fragments":["or"]},{"Key":"half or","Fragments":["so."]},{"Key":"really address","Fragments":["it"]},{"Key":"address it","Fragments":["either,"]},{"Key":"it either,","Fragments":["but"]},{"Key":"in cases","Fragments":["where"]},{"Key":"we're repeatedly","Fragments":["modifying"]},{"Key":"repeatedly modifying","Fragments":["strings"]},{"Key":"modifying strings","Fragments":["as"]},{"Key":"doing here,","Fragments":["it"]},{"Key":"here, it","Fragments":["would","might"]},{"Key":"a StringBuilder","Fragments":["while","to","to","in","http://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx","to","inside","in","internally,"]},{"Key":"StringBuilder while","Fragments":["we're"]},{"Key":"while we're","Fragments":["adding"]},{"Key":"we're adding","Fragments":["characters"]},{"Key":"adding characters","Fragments":["to"]},{"Key":"characters to","Fragments":["it,","decide"]},{"Key":"it, use","Fragments":["ToString()"]},{"Key":"use ToString()","Fragments":["on"]},{"Key":"ToString() on","Fragments":["your"]},{"Key":"your StringBuilder","Fragments":["when"]},{"Key":"StringBuilder when","Fragments":["you're"]},{"Key":"you're ready","Fragments":["to"]},{"Key":"ready to","Fragments":["write","be"]},{"Key":"temp variable","Fragments":["or"]},{"Key":"can pretty","Fragments":["easily"]},{"Key":"pretty easily","Fragments":["make"]},{"Key":"easily make","Fragments":["a"]},{"Key":"test case","Fragments":["for","updated?","and","picked","and","is"]},{"Key":"for uniqueness,","Fragments":["actually","so"]},{"Key":"uniqueness, actually","Fragments":["-"]},{"Key":"actually -","Fragments":["I"]},{"Key":"it despite","Fragments":["never"]},{"Key":"despite never","Fragments":["having"]},{"Key":"never having","Fragments":["used"]},{"Key":"having used","Fragments":["a"]},{"Key":"a testing","Fragments":["framework"]},{"Key":"testing framework","Fragments":["being","spin-up)."]},{"Key":"framework being","Fragments":["these"]},{"Key":"being these","Fragments":["exercises"]},{"Key":"exercises (exercisms?).","Fragments":["If"]},{"Key":"(exercisms?). If","Fragments":["you're"]},{"Key":"testing framework,","Fragments":["you"]},{"Key":"framework, you","Fragments":["can"]},{"Key":"use simple","Fragments":["code"]},{"Key":"this, in","Fragments":["the"]},{"Key":"the RobotTest.cs","Fragments":["file:"]},{"Key":"RobotTest.cs file:","Fragments":["(I"]},{"Key":"file: (I","Fragments":["think"]},{"Key":"(I think","Fragments":["that's","it"]},{"Key":"file containing","Fragments":["the"]},{"Key":"containing the","Fragments":["Robot","operation"]},{"Key":"the Robot","Fragments":["test"]},{"Key":"Robot test","Fragments":["class,"]},{"Key":"test class,","Fragments":["don't"]},{"Key":"class, don't","Fragments":["have"]},{"Key":"the files","Fragments":["on"]},{"Key":"files on","Fragments":["this"]},{"Key":"with @ellie.","Fragments":["This"]},{"Key":"@ellie. This","Fragments":["is"]},{"Key":"is terribly","Fragments":["wasteful"]},{"Key":"terribly wasteful","Fragments":["of"]},{"Key":"wasteful of","Fragments":["space."]},{"Key":"of space.","Fragments":["The"]},{"Key":"space. The","Fragments":["phrase"]},{"Key":"The phrase","Fragments":["\"day"]},{"Key":"phrase \"day","Fragments":["of"]},{"Key":"\"day of","Fragments":["Chrstmas"]},{"Key":"of Chrstmas","Fragments":["my"]},{"Key":"Chrstmas my","Fragments":["true"]},{"Key":"my true","Fragments":["love"]},{"Key":"true love","Fragments":["gave"]},{"Key":"love gave","Fragments":["to"]},{"Key":"gave to","Fragments":["me\"","the"]},{"Key":"to me\"","Fragments":["is"]},{"Key":"me\" is","Fragments":["stored"]},{"Key":"is stored","Fragments":["12","in"]},{"Key":"stored 12","Fragments":["times."]},{"Key":"12 times.","Fragments":["This"]},{"Key":"be extendable","Fragments":["to"]},{"Key":"extendable to","Fragments":["a"]},{"Key":"a song","Fragments":["with"]},{"Key":"song with","Fragments":["100"]},{"Key":"with 100","Fragments":["verses."]},{"Key":"100 verses.","Fragments":["Or"]},{"Key":"verses. Or","Fragments":["if"]},{"Key":"Or if","Fragments":["we","divisible"]},{"Key":"we needed","Fragments":["to"]},{"Key":"first gift","Fragments":["from"]},{"Key":"gift from","Fragments":["\"a"]},{"Key":"from \"a","Fragments":["Partridge"]},{"Key":"\"a Partridge","Fragments":["in"]},{"Key":"Partridge in","Fragments":["a"]},{"Key":"a Pear","Fragments":["Tree\"","Tree\""]},{"Key":"Pear Tree\"","Fragments":["to","in"]},{"Key":"Tree\" to","Fragments":["\"a"]},{"Key":"to \"a","Fragments":["Kookaburra"]},{"Key":"\"a Kookaburra","Fragments":["up"]},{"Key":"Kookaburra up","Fragments":["a"]},{"Key":"a Gum","Fragments":["Tree\","]},{"Key":"Gum Tree\",","Fragments":["you"]},{"Key":"Tree\", you","Fragments":["would"]},{"Key":"in twelve","Fragments":["places."]},{"Key":"Also, wouldn't","Fragments":["it"]},{"Key":"StringBuilder to","Fragments":["generate","create","create"]},{"Key":"final string","Fragments":["in"]},{"Key":"in Verses","Fragments":["instead"]},{"Key":"Verses instead","Fragments":["of"]},{"Key":"List with","Fragments":["a"]},{"Key":"a Join()","Fragments":["call?"]},{"Key":"do birthday.AddSeconds(gigaSecond).Date","Fragments":["to"]},{"Key":"birthday.AddSeconds(gigaSecond).Date to","Fragments":["knock"]},{"Key":"to knock","Fragments":["the"]},{"Key":"knock the","Fragments":["time"]},{"Key":"time off.","Fragments":[":)"]},{"Key":"works in","Fragments":["America,"]},{"Key":"in America,","Fragments":["there"]},{"Key":"America, there","Fragments":["are"]},{"Key":"other countries","Fragments":["where","and"]},{"Key":"countries where","Fragments":["Monday"]},{"Key":"where Monday","Fragments":["is"]},{"Key":"Monday is","Fragments":["the"]},{"Key":"first day","Fragments":["of","of","in","of","using"]},{"Key":"day of","Fragments":["the","the","the","the","the","the","the","the","the","the","week","the","the","the","the","the","week.","month"]},{"Key":"the week.","Fragments":["(I'm","All"]},{"Key":"week. (I'm","Fragments":["not"]},{"Key":"sure of","Fragments":[".NET","any"]},{"Key":".NET ignores","Fragments":["those"]},{"Key":"ignores those","Fragments":["or"]},{"Key":"those or","Fragments":["not.)"]},{"Key":"or not.)","Fragments":["I"]},{"Key":"not.) I","Fragments":["prefer"]},{"Key":"prefer looping","Fragments":["and"]},{"Key":"looping and","Fragments":["checking","processing"]},{"Key":"checking because","Fragments":["it"]},{"Key":"still work","Fragments":["in","but"]},{"Key":"those other","Fragments":["countries","checks"]},{"Key":"countries and","Fragments":["I"]},{"Key":"read. :)","Fragments":["The"]},{"Key":"The maximum","Fragments":["times"]},{"Key":"maximum times","Fragments":["you'd"]},{"Key":"times you'd","Fragments":["loop"]},{"Key":"you'd loop","Fragments":["it"]},{"Key":"loop it","Fragments":["6,","is"]},{"Key":"it 6,","Fragments":["which"]},{"Key":"6, which","Fragments":["is"]},{"Key":"is hardly","Fragments":["anything."]},{"Key":"hardly anything.","Fragments":[":)"]},{"Key":"I assumed","Fragments":["that","that","any","an"]},{"Key":"second parameter","Fragments":["to","to"]},{"Key":"parameter to","Fragments":["Verses()","`IsDivisibleBy`?","`int","`IDictionary\u003cint,"]},{"Key":"to Verses()","Fragments":["was"]},{"Key":"Verses() was","Fragments":["the"]},{"Key":"of verses","Fragments":["to"]},{"Key":"verses to","Fragments":["return"]},{"Key":"return rather","Fragments":["than"]},{"Key":"last verse","Fragments":["to"]},{"Key":"verse to","Fragments":["return."]},{"Key":"to return.","Fragments":["Since","There","(Note"]},{"Key":"return. Since","Fragments":["the"]},{"Key":"cases always","Fragments":["use"]},{"Key":"use verse","Fragments":["1"]},{"Key":"verse 1","Fragments":["for"]},{"Key":"1 for","Fragments":["the"]},{"Key":"the starting","Fragments":["verse","date"]},{"Key":"starting verse","Fragments":["in"]},{"Key":"verse in","Fragments":["Verses()"]},{"Key":"in Verses()","Fragments":["there","you"]},{"Key":"Verses() there","Fragments":["is"]},{"Key":"no effective","Fragments":["difference,"]},{"Key":"effective difference,","Fragments":["but"]},{"Key":"difference, but","Fragments":["yours","in"]},{"Key":"yours will","Fragments":["work"]},{"Key":"with Verses(11,","Fragments":["12)","1)."]},{"Key":"Verses(11, 12)","Fragments":["whereas"]},{"Key":"12) whereas","Fragments":["I"]},{"Key":"whereas I","Fragments":["would"]},{"Key":"only get","Fragments":["that","set"]},{"Key":"that behavior","Fragments":["with","in"]},{"Key":"behavior with","Fragments":["Verses(11,"]},{"Key":"Verses(11, 1).","Fragments":["Anyone"]},{"Key":"1). Anyone","Fragments":["know"]},{"Key":"Anyone know","Fragments":["how"]},{"Key":"One comment","Fragments":["on","on"]},{"Key":"separate 'if'","Fragments":["statement"]},{"Key":"the 'and'","Fragments":["in.","in"]},{"Key":"'and' in.","Fragments":["Couldn't"]},{"Key":"in. Couldn't","Fragments":["that"]},{"Key":"Couldn't that","Fragments":["be"]},{"Key":"var gifts","Fragments":["="]},{"Key":"gifts =","Fragments":["_verses"]},{"Key":" .TakeWhile((verse,","Fragments":["index)"]},{"Key":".TakeWhile((verse, index)","Fragments":["=\u003e"]},{"Key":"index) =\u003e","Fragments":["index","(index"]},{"Key":"=\u003e index","Fragments":["\u003c"]},{"Key":" .Select((verse.","Fragments":["index)"]},{"Key":".Select((verse. index)","Fragments":["=\u003e"]},{"Key":"=\u003e (index","Fragments":["=="]},{"Key":"(index ==","Fragments":["0"]},{"Key":"\u0026\u0026 day","Fragments":["\u003e"]},{"Key":"day \u003e","Fragments":["1)"]},{"Key":"\u003e 1)","Fragments":["?"]},{"Key":"1) ?","Fragments":["\"and"]},{"Key":"? \"and","Fragments":["\""]},{"Key":"\"and \"","Fragments":["+"]},{"Key":"\" +","Fragments":["verse","number);","number);","info.str);","stopwatch.ElapsedMilliseconds);"]},{"Key":"+ verse","Fragments":[":"]},{"Key":"verse :","Fragments":["verse)"]},{"Key":"haven't tried","Fragments":["to","it","it."]},{"Key":"compile that","Fragments":["code."]},{"Key":"Any reason","Fragments":["you"]},{"Key":"works regardless","Fragments":["of"]},{"Key":"which day","Fragments":["is"]},{"Key":"week. All","Fragments":["that"]},{"Key":"that matters","Fragments":["is"]},{"Key":"matters is","Fragments":["that"]},{"Key":"enumeration are","Fragments":["ordered"]},{"Key":"are ordered","Fragments":["as"]},{"Key":"ordered as","Fragments":["we"]},{"Key":"as we","Fragments":["use","have","expected."]},{"Key":"we use","Fragments":["them."]},{"Key":"use them.","Fragments":["If"]},{"Key":"them. If","Fragments":["the"]},{"Key":"enumeration was","Fragments":["out","ordered"]},{"Key":"was out","Fragments":["of"]},{"Key":"of order","Fragments":["(i.e."]},{"Key":"order (i.e.","Fragments":["Monday"]},{"Key":"(i.e. Monday","Fragments":["was"]},{"Key":"Monday was","Fragments":["0"]},{"Key":"was 0","Fragments":["and","and"]},{"Key":"and Sunday","Fragments":["was"]},{"Key":"Sunday was","Fragments":["1"]},{"Key":"was 1","Fragments":["or"]},{"Key":"something) it","Fragments":["wouldn't"]},{"Key":"first subtraction","Fragments":["yields"]},{"Key":"subtraction yields","Fragments":["a"]},{"Key":"yields a","Fragments":["value"]},{"Key":"from -6","Fragments":["to"]},{"Key":"-6 to","Fragments":["+6."]},{"Key":"to +6.","Fragments":["Then"]},{"Key":"+6. Then","Fragments":["we"]},{"Key":"we add","Fragments":["7"]},{"Key":"add 7","Fragments":["for","(actually"]},{"Key":"7 for","Fragments":["a"]},{"Key":"to 13","Fragments":["and"]},{"Key":"13 and","Fragments":["take"]},{"Key":"take modulo","Fragments":["7,"]},{"Key":"modulo 7,","Fragments":["yielding"]},{"Key":"7, yielding","Fragments":["a"]},{"Key":"yielding a","Fragments":["value"]},{"Key":"job. One","Fragments":["last"]},{"Key":"One last","Fragments":["(minor)"]},{"Key":"last (minor)","Fragments":["thing."]},{"Key":"(minor) thing.","Fragments":["It"]},{"Key":"thing. It","Fragments":["might"]},{"Key":"It might","Fragments":["be","be","be","be","be","be","\"dirty"]},{"Key":"efficient in","Fragments":["Count"]},{"Key":"in Count","Fragments":["to","when"]},{"Key":"Count to","Fragments":["not"]},{"Key":"not call","Fragments":["ContainsKey()."]},{"Key":"call ContainsKey().","Fragments":["Instead"]},{"Key":"ContainsKey(). Instead","Fragments":["you"]},{"Key":"a try/catch","Fragments":["like","block."]},{"Key":"try/catch like","Fragments":["you"]},{"Key":" @allen","Fragments":["I"]},{"Key":"@allen I","Fragments":["know"]},{"Key":"a cut","Fragments":["off"]},{"Key":"cut off","Fragments":["point"]},{"Key":"off point","Fragments":["where"]},{"Key":"where +,","Fragments":["string.Join,"]},{"Key":"+, string.Join,","Fragments":["string.Concat,"]},{"Key":"string.Join, string.Concat,","Fragments":["and"]},{"Key":"string.Concat, and","Fragments":["StringBuilder"]},{"Key":"and StringBuilder","Fragments":["are","but"]},{"Key":"StringBuilder are","Fragments":["best"]},{"Key":"best for","Fragments":["their"]},{"Key":"for their","Fragments":["situations."]},{"Key":"their situations.","Fragments":["I"]},{"Key":"situations. I","Fragments":["believe"]},{"Key":"believe StringBuilder","Fragments":["is"]},{"Key":"StringBuilder is","Fragments":["the","only"]},{"Key":"best after","Fragments":["6"]},{"Key":"after 6","Fragments":["strings"]},{"Key":"6 strings","Fragments":["get"]},{"Key":"strings get","Fragments":["fed"]},{"Key":"get fed","Fragments":["in"]},{"Key":"Very long","Fragments":["way","winded"]},{"Key":"this calculating","Fragments":["all"]},{"Key":"calculating all","Fragments":["the"]},{"Key":"the prime","Fragments":["factors,","numbers","that","factors","number","factors.","list","list","list","factors."]},{"Key":"prime factors,","Fragments":["you"]},{"Key":"factors, you","Fragments":["only"]},{"Key":"3 ,5,7so","Fragments":["can't"]},{"Key":",5,7so can't","Fragments":["see"]},{"Key":"can't see","Fragments":["the","any"]},{"Key":"of PrimesFor().makes","Fragments":["the"]},{"Key":"PrimesFor().makes the","Fragments":["solution"]},{"Key":"solution longer","Fragments":["and"]},{"Key":"might simplify","Fragments":["your"]},{"Key":"code -","Fragments":["the","you'd"]},{"Key":"the StringBuider.Append()","Fragments":["function"]},{"Key":"StringBuider.Append() function","Fragments":["returns"]},{"Key":"function returns","Fragments":["the"]},{"Key":"the modified","Fragments":["StringBuilder,"]},{"Key":"modified StringBuilder,","Fragments":["so"]},{"Key":"StringBuilder, so","Fragments":["you","if"]},{"Key":"can chain","Fragments":["them.","all"]},{"Key":"chain them.","Fragments":["Instead"]},{"Key":"them. Instead","Fragments":["of"]},{"Key":" sb.Append(Things[i","Fragments":["-","-"]},{"Key":"sb.Append(Things[i -","Fragments":["1]);","1]).Append(\","]},{"Key":" sb.Append(\",","Fragments":["\");"]},{"Key":"- 1]).Append(\",","Fragments":["\");"]},{"Key":"In Verse()","Fragments":["you"]},{"Key":"Verse() you","Fragments":["used"]},{"Key":"create your","Fragments":["string,","own"]},{"Key":"Verses() you","Fragments":["used"]},{"Key":"used string","Fragments":["concatenation."]},{"Key":"string concatenation.","Fragments":["Wouldn't"]},{"Key":"concatenation. Wouldn't","Fragments":["it"]},{"Key":"StringBuilder in","Fragments":["Verses()?","this"]},{"Key":"You aren't","Fragments":["checking","a"]},{"Key":"aren't checking","Fragments":["for"]},{"Key":"invalid input,","Fragments":["so"]},{"Key":"so calling","Fragments":["Verse(0)"]},{"Key":"calling Verse(0)","Fragments":["or"]},{"Key":"Verse(0) or","Fragments":["Verse(13)"]},{"Key":"or Verse(13)","Fragments":["or"]},{"Key":"Verse(13) or","Fragments":["Verses(1,64)"]},{"Key":"or Verses(1,64)","Fragments":["will"]},{"Key":"Verses(1,64) will","Fragments":["crash."]},{"Key":"The loop","Fragments":["in"]},{"Key":"in Verse()","Fragments":["only"]},{"Key":"Verse() only","Fragments":["gets"]},{"Key":"gets executed","Fragments":["from"]},{"Key":"executed from","Fragments":["verse"]},{"Key":"from verse","Fragments":["nb"]},{"Key":"verse nb","Fragments":["down"]},{"Key":"nb down","Fragments":["to"]},{"Key":"to verse","Fragments":["2."]},{"Key":"verse 2.","Fragments":["Can"]},{"Key":"you rearrange","Fragments":["your","your"]},{"Key":"rearrange your","Fragments":["code","score"]},{"Key":"get called","Fragments":["for"]},{"Key":"called for","Fragments":["all"]},{"Key":"all verses?","Fragments":["That"]},{"Key":"verses? That","Fragments":["way"]},{"Key":"way there","Fragments":["would","now."]},{"Key":"less special","Fragments":["code"]},{"Key":"special code","Fragments":["for"]},{"Key":"first verse","Fragments":["and"]},{"Key":"Ah, good","Fragments":["catch"]},{"Key":"good catch","Fragments":["on"]},{"Key":"the Verses()","Fragments":["thing."]},{"Key":"Verses() thing.","Fragments":["We"]},{"Key":"thing. We","Fragments":["really"]},{"Key":"We really","Fragments":["don't"]},{"Key":"right answer,","Fragments":["do"]},{"Key":"answer, do","Fragments":["we?!"]},{"Key":"do we?!","Fragments":[":)"]},{"Key":"the .Select()","Fragments":["there"]},{"Key":".Select() there","Fragments":["and"]},{"Key":"wouldn't be","Fragments":["all","nearly","log","easy","a","too"]},{"Key":"that clear","Fragments":["compared"]},{"Key":"clear compared","Fragments":["to"]},{"Key":"check there.","Fragments":["I"]},{"Key":"know trying","Fragments":["to"]},{"Key":"in LINQ","Fragments":["is"]},{"Key":"the fad","Fragments":["now,"]},{"Key":"fad now,","Fragments":["but"]},{"Key":"I'm old","Fragments":["school"]},{"Key":"old school","Fragments":["enough"]},{"Key":"school enough","Fragments":["to"]},{"Key":"and update","Fragments":["every","your","when"]},{"Key":"update every","Fragments":["now"]},{"Key":"every now","Fragments":["and"]},{"Key":"and then.","Fragments":[":)"]},{"Key":"then. :)","Fragments":["Plus,"]},{"Key":":) Plus,","Fragments":["that"]},{"Key":"Plus, that","Fragments":["Select"]},{"Key":"that Select","Fragments":["is"]},{"Key":"Select is","Fragments":["going"]},{"Key":"single verse","Fragments":["it"]},{"Key":"verse it","Fragments":["finds"]},{"Key":"finds instead","Fragments":["of"]},{"Key":"just doing","Fragments":["the","a","the"]},{"Key":"check once","Fragments":["afterwards"]},{"Key":"once afterwards","Fragments":["and"]},{"Key":"afterwards and","Fragments":["updating"]},{"Key":"and updating","Fragments":["one"]},{"Key":"updating one","Fragments":["verse."]},{"Key":"one verse.","Fragments":["That"]},{"Key":"verse. That","Fragments":["select"]},{"Key":"That select","Fragments":["will"]},{"Key":"select will","Fragments":["be"]},{"Key":"doing 2","Fragments":["if"]},{"Key":"2 if","Fragments":["checks"]},{"Key":"if checks","Fragments":["and","anyway."]},{"Key":"checks and","Fragments":["a","switched","the"]},{"Key":"a tertiary","Fragments":["call","operator","expression"]},{"Key":"tertiary call","Fragments":["on"]},{"Key":"each one.","Fragments":[":)"]},{"Key":"will result","Fragments":["in"]},{"Key":"larger method","Fragments":["which"]},{"Key":"method which","Fragments":["is","won't","isn't","will"]},{"Key":"Good points.","Fragments":["When","I've"]},{"Key":"points. When","Fragments":["I"]},{"Key":"did mine,","Fragments":["I"]},{"Key":"I built","Fragments":["the","with"]},{"Key":"built the","Fragments":["entire"]},{"Key":"went along","Fragments":["rather"]},{"Key":"along rather","Fragments":["than"]},{"Key":"than generating","Fragments":["a"]},{"Key":"generating a","Fragments":["list"]},{"Key":"to later","Fragments":["combine."]},{"Key":"later combine.","Fragments":["Thus"]},{"Key":"combine. Thus","Fragments":["I"]},{"Key":"Thus I","Fragments":["had"]},{"Key":"'and' in","Fragments":["at"]},{"Key":"in at","Fragments":["the","around"]},{"Key":"I processed","Fragments":["the"]},{"Key":"processed the","Fragments":["\"a"]},{"Key":"the \"a","Fragments":["Partridge...\""]},{"Key":"\"a Partridge...\"","Fragments":["phrase."]},{"Key":"Partridge...\" phrase.","Fragments":["That"]},{"Key":"phrase. That","Fragments":["is"]},{"Key":"probably why","Fragments":["I"]},{"Key":"that inlining","Fragments":["it"]},{"Key":"inlining it","Fragments":["would"]},{"Key":"be good.","Fragments":["You","Nothing"]},{"Key":"correct that","Fragments":["in"]},{"Key":"system having","Fragments":["a"]},{"Key":"single check","Fragments":["would"]},{"Key":" Alright,","Fragments":["I'll","I'll","that","I"]},{"Key":"Alright, I'll","Fragments":["look","take"]},{"Key":"into that.","Fragments":["Thanks,"]},{"Key":"that. Thanks,","Fragments":["I"]},{"Key":"about performance","Fragments":["too","and"]},{"Key":"performance too","Fragments":["much,"]},{"Key":"much, so","Fragments":["it's"]},{"Key":"a reminder","Fragments":["on"]},{"Key":"reminder on","Fragments":["that."]},{"Key":"that. Also,","Fragments":["I've"]},{"Key":"Also, I've","Fragments":["never"]},{"Key":"used HashSet","Fragments":["before:"]},{"Key":"HashSet before:","Fragments":["does"]},{"Key":"before: does","Fragments":["it"]},{"Key":"it work","Fragments":["similar","for","for","for"]},{"Key":"work similar","Fragments":["to"]},{"Key":"list (It","Fragments":["seems"]},{"Key":"(It seems","Fragments":["like"]},{"Key":"it does)?","Fragments":["I'll"]},{"Key":"does)? I'll","Fragments":["see"]},{"Key":"see about","Fragments":["the"]},{"Key":"StringBuilder as","Fragments":["well,"]},{"Key":"well, and","Fragments":["regarding"]},{"Key":"and regarding","Fragments":["writing"]},{"Key":"regarding writing","Fragments":["a"]},{"Key":"a test,","Fragments":["I","as"]},{"Key":"well try","Fragments":["that"]},{"Key":"try that","Fragments":["anyways.","the"]},{"Key":"if these","Fragments":["remarks"]},{"Key":"these remarks","Fragments":["belong"]},{"Key":"remarks belong","Fragments":["here,"]},{"Key":"belong here,","Fragments":["because"]},{"Key":"here, because","Fragments":["they"]},{"Key":"really nitpicks,","Fragments":["but"]},{"Key":"nitpicks, but","Fragments":["I"]},{"Key":"is worthy","Fragments":["of","of"]},{"Key":"worthy of","Fragments":["some","a"]},{"Key":"how all","Fragments":["of"]},{"Key":"is abstracted","Fragments":["from"]},{"Key":"abstracted from","Fragments":["control"]},{"Key":"from control","Fragments":["flow"]},{"Key":"flow with","Fragments":["isXxxxxx"]},{"Key":"with isXxxxxx","Fragments":["methods"]},{"Key":"- Use","Fragments":["of","AddSeconds","1E9"]},{"Key":"of ==","Fragments":["is"]},{"Key":"== is","Fragments":["safe"]},{"Key":"is safe","Fragments":["with"]},{"Key":"safe with","Fragments":["a"]},{"Key":"string because","Fragments":["it"]},{"Key":"it overloads","Fragments":["==,"]},{"Key":"overloads ==,","Fragments":["but"]},{"Key":"==, but","Fragments":["I"]},{"Key":"typically use","Fragments":["string.Equals"]},{"Key":"use string.Equals","Fragments":["method"]},{"Key":"string.Equals method","Fragments":["for"]},{"Key":"for comparison.","Fragments":["I"]},{"Key":"comparison. I","Fragments":["am"]},{"Key":"curious what","Fragments":["thoughts"]},{"Key":"what thoughts","Fragments":["anybody"]},{"Key":"thoughts anybody","Fragments":["has"]},{"Key":"anybody has","Fragments":["on"]},{"Key":"has on","Fragments":["using"]},{"Key":"one over","Fragments":["the","the"]},{"Key":"the other.","Fragments":["My","When","Looks","If"]},{"Key":"other. My","Fragments":["thought"]},{"Key":"My thought","Fragments":["is"]},{"Key":"that string.Equals","Fragments":["is"]},{"Key":"string.Equals is","Fragments":["more"]},{"Key":"more discoverable","Fragments":["because"]},{"Key":"discoverable because","Fragments":["IEquatable"]},{"Key":"because IEquatable","Fragments":["is"]},{"Key":"IEquatable is","Fragments":["right"]},{"Key":"right there","Fragments":["in"]},{"Key":"there in","Fragments":["the"]},{"Key":"really learned","Fragments":["from"]},{"Key":"works, but","Fragments":["is","it","isn't","I"]},{"Key":"follow. Using","Fragments":["the"]},{"Key":"the short-circuit","Fragments":["operators"]},{"Key":"short-circuit operators","Fragments":["(\u0026\u0026,"]},{"Key":"operators (\u0026\u0026,","Fragments":["||)"]},{"Key":"(\u0026\u0026, ||)","Fragments":["will"]},{"Key":"||) will","Fragments":["allow"]},{"Key":"to turn","Fragments":["this","chars"]},{"Key":"turn this","Fragments":["into"]},{"Key":"single statement","Fragments":["that"]},{"Key":"are partially","Fragments":["filtering"]},{"Key":"partially filtering","Fragments":["out"]},{"Key":"filtering out","Fragments":["bad"]},{"Key":"bad chars","Fragments":["using"]},{"Key":"chars using","Fragments":["the"]},{"Key":"the \u003cb\u003eTrim()\u003c/b\u003e","Fragments":["but"]},{"Key":"\u003cb\u003eTrim()\u003c/b\u003e but","Fragments":["only"]},{"Key":"very limited","Fragments":["extent"]},{"Key":"limited extent","Fragments":["(leading"]},{"Key":"extent (leading","Fragments":["or"]},{"Key":"(leading or","Fragments":["trailing"]},{"Key":"or trailing","Fragments":["spaces)."]},{"Key":"trailing spaces).","Fragments":["A"]},{"Key":"spaces). A","Fragments":["simple"]},{"Key":"ensure only","Fragments":["scoring"]},{"Key":"only scoring","Fragments":["characters"]},{"Key":"scoring characters","Fragments":["would"]},{"Key":" totalPoints","Fragments":["+="]},{"Key":"totalPoints +=","Fragments":["scrabbleDictionary[character];"]},{"Key":"you've gone","Fragments":["that","for","with"]},{"Key":"gone that","Fragments":["far"]},{"Key":"that far","Fragments":["you"]},{"Key":"far you","Fragments":["might"]},{"Key":"well use","Fragments":["linq"]},{"Key":"linq for","Fragments":["the"]},{"Key":"var totalPoints","Fragments":["="]},{"Key":"totalPoints =","Fragments":["givenWord.ToLowerInvariant().Where(char.IsLetter).Sum(c"]},{"Key":"= givenWord.ToLowerInvariant().Where(char.IsLetter).Sum(c","Fragments":["=\u003e"]},{"Key":"givenWord.ToLowerInvariant().Where(char.IsLetter).Sum(c =\u003e","Fragments":["scrabbleDictionary[c]);"]},{"Key":"strings into","Fragments":["character","char","arrays,","char","char"]},{"Key":"into character","Fragments":["arrays,"]},{"Key":"character arrays,","Fragments":["we"]},{"Key":"arrays, we","Fragments":["can"]},{"Key":"can index","Fragments":["into","into"]},{"Key":"into them","Fragments":["directly"]},{"Key":"if (strand1[i]","Fragments":["!="]},{"Key":"(strand1[i] !=","Fragments":["strand2[i])"]},{"Key":" \u003cb\u003eAreEqual","Fragments":["Check\u003c/b\u003e"]},{"Key":"this size","Fragments":["it","it's"]},{"Key":"size it","Fragments":["is"]},{"Key":"performance issue","Fragments":["but"]},{"Key":"issue but","Fragments":["as"]},{"Key":"general principle","Fragments":["I"]},{"Key":"principle I","Fragments":["thought"]},{"Key":"I'd point","Fragments":["it"]},{"Key":"point it","Fragments":["out","will"]},{"Key":"checking \u003cb\u003e!AreEqual\u003c/b\u003e","Fragments":["before"]},{"Key":"\u003cb\u003e!AreEqual\u003c/b\u003e before","Fragments":["looping"]},{"Key":"before looping","Fragments":["through"]},{"Key":"strings we","Fragments":["are"]},{"Key":"are (in","Fragments":["effect)"]},{"Key":"(in effect)","Fragments":["performing"]},{"Key":"effect) performing","Fragments":["the"]},{"Key":"loop twice","Fragments":["when"]},{"Key":"twice when","Fragments":["the"]},{"Key":" Behind","Fragments":["the"]},{"Key":"Behind the","Fragments":["scenes","scenes"]},{"Key":"the scenes","Fragments":["strand1","it"]},{"Key":"scenes strand1","Fragments":["=="]},{"Key":"strand1 ==","Fragments":["strand2"]},{"Key":"== strand2","Fragments":["will"]},{"Key":"strand2 will","Fragments":["have"]},{"Key":"to compare","Fragments":["each","it's","apples","the","the","the","the","message"]},{"Key":"compare each","Fragments":["character","character"]},{"Key":"are equal.","Fragments":["If","But"]},{"Key":"equal. If","Fragments":["they"]},{"Key":"same, we","Fragments":["return"]},{"Key":"are not,","Fragments":["we"]},{"Key":"not, we","Fragments":["then"]},{"Key":"we then","Fragments":["do","catch."]},{"Key":"loop again","Fragments":["to"]},{"Key":"again to","Fragments":["work"]},{"Key":"the \u003cb\u003eAreEqual()\u003c/b\u003e","Fragments":["check"]},{"Key":"\u003cb\u003eAreEqual()\u003c/b\u003e check","Fragments":["(sort"]},{"Key":"check (sort","Fragments":["of)"]},{"Key":"(sort of)","Fragments":["looks"]},{"Key":"of) looks","Fragments":["like"]},{"Key":"like we","Fragments":["are"]},{"Key":"doing less","Fragments":["work"]},{"Key":"less work","Fragments":["-"]},{"Key":"- we","Fragments":["don't"]},{"Key":"into our","Fragments":["loop"]},{"Key":"our loop","Fragments":["-"]},{"Key":"loop -","Fragments":["but","though","which"]},{"Key":"a poorer","Fragments":["performance"]},{"Key":"poorer performance","Fragments":["(minimally,"]},{"Key":"performance (minimally,","Fragments":["but"]},{"Key":"(minimally, but","Fragments":["as"]},{"Key":"general shape","Fragments":["rather","we","should"]},{"Key":"shape rather","Fragments":["than"]},{"Key":"than this","Fragments":["case)"]},{"Key":"this case)","Fragments":["where","and"]},{"Key":"case) where","Fragments":["the"]},{"Key":"strands are","Fragments":["different.","of","identical."]},{"Key":" @lorna","Fragments":["thanks"]},{"Key":"@lorna thanks","Fragments":["for"]},{"Key":"the pointers","Fragments":[":)","jkedgar!","you"]},{"Key":"pointers :)","Fragments":["I"]},{"Key":"Regex very","Fragments":["often,"]},{"Key":"very often,","Fragments":["so"]},{"Key":"often, so","Fragments":["I"]},{"Key":"much waiting","Fragments":["for"]},{"Key":"waiting for","Fragments":["sometime","a"]},{"Key":"for sometime","Fragments":["to"]},{"Key":"sometime to","Fragments":["point"]},{"Key":"my mistakes","Fragments":["there"]},{"Key":"mistakes there","Fragments":[";)"]},{"Key":"point. How","Fragments":["expensive"]},{"Key":"How expensive","Fragments":["it"]},{"Key":"expensive it","Fragments":["is"]},{"Key":"list compared","Fragments":["to"]},{"Key":"a stored","Fragments":["but"]},{"Key":"stored but","Fragments":["empty"]},{"Key":"but empty","Fragments":["one?"]},{"Key":" \u003cb\u003eLetters","Fragments":["Are"]},{"Key":"\u003cb\u003eLetters Are","Fragments":["All"]},{"Key":"Are All","Fragments":["Upper\u003c/b\u003e"]},{"Key":"to thin","Fragments":["out"]},{"Key":"thin out","Fragments":["this"]},{"Key":"bit. At","Fragments":["the"]},{"Key":"moment we","Fragments":[":"]},{"Key":"- Grab","Fragments":["all"]},{"Key":"Grab all","Fragments":["the"]},{"Key":"string building","Fragments":["a"]},{"Key":"- Create","Fragments":["an"]},{"Key":"Create an","Fragments":["upper"]},{"Key":"an upper","Fragments":["case"]},{"Key":"case version","Fragments":["of"]},{"Key":"- Compare","Fragments":["then"]},{"Key":"Compare then","Fragments":["upper"]},{"Key":"then upper","Fragments":["case"]},{"Key":"case and","Fragments":["original","add","then","an","what","wrote","converted"]},{"Key":"and original","Fragments":["to"]},{"Key":"original to","Fragments":["see"]},{"Key":" Strings","Fragments":["are","are"]},{"Key":"Strings are","Fragments":["immutable,","immutable,"]},{"Key":"are immutable,","Fragments":["which","so"]},{"Key":"immutable, which","Fragments":["means"]},{"Key":"time we","Fragments":["go","call"]},{"Key":"we go","Fragments":["\u003cb\u003eres","our"]},{"Key":"go \u003cb\u003eres","Fragments":["+=c\u003c/b\u003e,"]},{"Key":"\u003cb\u003eres +=c\u003c/b\u003e,","Fragments":["we"]},{"Key":"+=c\u003c/b\u003e, we","Fragments":["are"]},{"Key":"are throwing","Fragments":["away"]},{"Key":"throwing away","Fragments":["the"]},{"Key":"away the","Fragments":["old","method"]},{"Key":"old string","Fragments":["and"]},{"Key":"new one.","Fragments":["Not"]},{"Key":"huge overhead","Fragments":["in"]},{"Key":"overhead in","Fragments":["this"]},{"Key":"StringBuilder http://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx","Fragments":["would"]},{"Key":"http://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx would","Fragments":["probably"]},{"Key":"useful here","Fragments":["(there"]},{"Key":"here (there","Fragments":["are"]},{"Key":"some arguments","Fragments":["over"]},{"Key":"arguments over","Fragments":["the"]},{"Key":"the thresholds","Fragments":["for"]},{"Key":"thresholds for","Fragments":["when"]},{"Key":"the StringBuilder,","Fragments":["so"]},{"Key":"and rejected","Fragments":["it,"]},{"Key":"rejected it,","Fragments":["apologies)"]},{"Key":" \u003cb\u003eWe","Fragments":["don't"]},{"Key":"\u003cb\u003eWe don't","Fragments":["need"]},{"Key":"Once we","Fragments":["start"]},{"Key":"start working","Fragments":["with"]},{"Key":"an enumeration","Fragments":["of","of","and","instead"]},{"Key":"enumeration of","Fragments":["characters","characters."]},{"Key":"characters we","Fragments":["don't"]},{"Key":"about strings","Fragments":["any"]},{"Key":"strings any","Fragments":["more."]},{"Key":"any more.","Fragments":["We"]},{"Key":"more. We","Fragments":["can","need"]},{"Key":"do our","Fragments":["tests"]},{"Key":"our tests","Fragments":["using"]},{"Key":"tests using","Fragments":["\u003cb\u003elinq\u003c/b\u003e."]},{"Key":"= statement.Where(l","Fragments":["=\u003e"]},{"Key":"statement.Where(l =\u003e","Fragments":["char.IsLetter).ToList();"]},{"Key":"return letters.Any()","Fragments":["\u0026\u0026"]},{"Key":"letters.Any() \u0026\u0026","Fragments":["letters.All(char.IsUpper);"]},{"Key":"first bit","Fragments":["grabs"]},{"Key":"bit grabs","Fragments":["all"]},{"Key":"grabs all","Fragments":["the"]},{"Key":"and sticks","Fragments":["them"]},{"Key":"sticks them","Fragments":["into"]},{"Key":"to crystallize","Fragments":["the"]},{"Key":"crystallize the","Fragments":["enumeration"]},{"Key":"enumeration so","Fragments":["that","if"]},{"Key":"we do","Fragments":["not"]},{"Key":"not evaluate","Fragments":["it"]},{"Key":"evaluate it","Fragments":["twice"]},{"Key":"it twice","Fragments":["in"]},{"Key":"twice in","Fragments":["the","a","SumOfSquares())","DifferenceOfSquares()."]},{"Key":"We need","Fragments":["to","to","a"]},{"Key":"some letters","Fragments":["-"]},{"Key":"- Any()","Fragments":["is"]},{"Key":"Any() is","Fragments":["favoured"]},{"Key":"is favoured","Fragments":["over"]},{"Key":"favoured over","Fragments":["Count()"]},{"Key":"over Count()","Fragments":["\u003e"]},{"Key":"Count() \u003e","Fragments":["0"]},{"Key":"0 -","Fragments":["and"]},{"Key":"want them","Fragments":["all"]},{"Key":"them all","Fragments":["to","off","as"]},{"Key":"all to","Fragments":["be"]},{"Key":"be upper","Fragments":["case.","case"]},{"Key":"use \u003cem\u003eString.IsNullOrWhitespace()\u003c/em\u003e","Fragments":["over"]},{"Key":"\u003cem\u003eString.IsNullOrWhitespace()\u003c/em\u003e over","Fragments":["trimming"]},{"Key":"over trimming","Fragments":["and"]},{"Key":"trimming and","Fragments":["comparing"]},{"Key":"empty string.","Fragments":["If","Then"]},{"Key":"string. If","Fragments":["there","they","both","there"]},{"Key":"a built","Fragments":["in","in"]},{"Key":"in way","Fragments":["to"]},{"Key":"do something,","Fragments":["absent"]},{"Key":"something, absent","Fragments":["strong"]},{"Key":"absent strong","Fragments":["reasons,"]},{"Key":"strong reasons,","Fragments":["we"]},{"Key":"reasons, we","Fragments":["should"]},{"Key":"A matter","Fragments":["of"]},{"Key":"bool IsYelling(string","Fragments":["statement)"]},{"Key":"As more","Fragments":["idiomatic"]},{"Key":"idiomatic C#.","Fragments":["\u003cem\u003eLettersAreAllUpper()\u003c/em\u003e"]},{"Key":"C#. \u003cem\u003eLettersAreAllUpper()\u003c/em\u003e","Fragments":["returns"]},{"Key":"\u003cem\u003eLettersAreAllUpper()\u003c/em\u003e returns","Fragments":["a"]},{"Key":"a bool,","Fragments":["so","so","so"]},{"Key":"bool, so","Fragments":["simply","it's","it's"]},{"Key":"so simply","Fragments":["pass"]},{"Key":"simply pass","Fragments":["is"]},{"Key":"pass is","Fragments":["up","a"]},{"Key":"chain rather","Fragments":["than"]},{"Key":"than intercepting,","Fragments":["evaluating"]},{"Key":"intercepting, evaluating","Fragments":["and"]},{"Key":"good, it","Fragments":["does"]},{"Key":"says on","Fragments":["the"]},{"Key":"the tin,","Fragments":["but"]},{"Key":"tin, but","Fragments":["if"]},{"Key":"least lines","Fragments":["possible"]},{"Key":"lines possible","Fragments":["(but"]},{"Key":"possible (but","Fragments":["still"]},{"Key":"(but still","Fragments":["comprehensible)"]},{"Key":"still comprehensible)","Fragments":["you"]},{"Key":"comprehensible) you","Fragments":["might"]},{"Key":"at \u003cb\u003elinq\u003c/b\u003e.","Fragments":["It"]},{"Key":"\u003cb\u003elinq\u003c/b\u003e. It","Fragments":["is"]},{"Key":"possible convert","Fragments":["one"]},{"Key":"convert one","Fragments":["dictionary"]},{"Key":"one dictionary","Fragments":["to","lookup."]},{"Key":"another using","Fragments":["the"]},{"Key":"the \u003cb\u003eSelectMany()\u003c/b\u003e,","Fragments":["\u003cb\u003eSelect()\u003c/b\u003e"]},{"Key":"\u003cb\u003eSelectMany()\u003c/b\u003e, \u003cb\u003eSelect()\u003c/b\u003e","Fragments":["and"]},{"Key":"\u003cb\u003eSelect()\u003c/b\u003e and","Fragments":["\u003cb\u003eToDictionary()\u003c/b\u003e"]},{"Key":"and \u003cb\u003eToDictionary()\u003c/b\u003e","Fragments":["functions"]},{"Key":"need Dictionary","Fragments":["functionality"]},{"Key":"Dictionary functionality","Fragments":["here,"]},{"Key":"functionality here,","Fragments":["all"]},{"Key":"here, all","Fragments":["we"]},{"Key":"is iterate","Fragments":["through"]},{"Key":"iterate through","Fragments":["the","to","every","the","them.","the"]},{"Key":"the entries.","Fragments":["A","An"]},{"Key":"entries. A","Fragments":["List"]},{"Key":"A List","Fragments":["of"]},{"Key":"List of","Fragments":["\u003cb\u003eKeyValuePair\u0026lt;int,","Tuples","some","doubles","all"]},{"Key":"of \u003cb\u003eKeyValuePair\u0026lt;int,","Fragments":["string\u0026gt;\u003c/b\u003e"]},{"Key":"\u003cb\u003eKeyValuePair\u0026lt;int, string\u0026gt;\u003c/b\u003e","Fragments":["or"]},{"Key":"string\u0026gt;\u003c/b\u003e or","Fragments":["a"]},{"Key":"a of\u003cb\u003e","Fragments":["Tuple\u0026lt;int,"]},{"Key":"of\u003cb\u003e Tuple\u0026lt;int,","Fragments":["string\u0026gt;\u003c/b\u003e"]},{"Key":"Tuple\u0026lt;int, string\u0026gt;\u003c/b\u003e","Fragments":["would"]},{"Key":"string\u0026gt;\u003c/b\u003e would","Fragments":["relieve"]},{"Key":"would relieve","Fragments":["us"]},{"Key":"relieve us","Fragments":["of"]},{"Key":"us of","Fragments":["the"]},{"Key":"custom class","Fragments":["but","with","using","is","descending"]},{"Key":"code becomes","Fragments":["a"]},{"Key":"becomes a","Fragments":["slight","problem.","bit"]},{"Key":"slight bit","Fragments":["less"]},{"Key":"readable -","Fragments":["\u003cb\u003eKey/Value\u003c/b\u003e","the"]},{"Key":"- \u003cb\u003eKey/Value\u003c/b\u003e","Fragments":["or"]},{"Key":"\u003cb\u003eKey/Value\u003c/b\u003e or","Fragments":["\u003cb\u003eItem1/Item2\u003c/b\u003e"]},{"Key":"or \u003cb\u003eItem1/Item2\u003c/b\u003e","Fragments":["instead"]},{"Key":"\u003cb\u003eItem1/Item2\u003c/b\u003e instead","Fragments":["of"]},{"Key":"In something","Fragments":["this"]},{"Key":"size it's","Fragments":["not"]},{"Key":"to matter,","Fragments":["but"]},{"Key":"matter, but","Fragments":["in"]},{"Key":"larger system","Fragments":["where"]},{"Key":"system where","Fragments":["we"]},{"Key":"are using/re-using","Fragments":["the"]},{"Key":"using/re-using the","Fragments":["entries"]},{"Key":"entries in","Fragments":["many","candidates","the"]},{"Key":"in many","Fragments":["routines","cases.","ways","languages,"]},{"Key":"many routines","Fragments":["it"]},{"Key":"routines it","Fragments":["can"]},{"Key":"follow for","Fragments":["anther"]},{"Key":"for anther","Fragments":["developer"]},{"Key":"anther developer","Fragments":["coming"]},{"Key":"developer coming","Fragments":["upon"]},{"Key":"coming upon","Fragments":["it"]},{"Key":"upon it","Fragments":["cold.","in"]},{"Key":"it cold.","Fragments":["As"]},{"Key":"cold. As","Fragments":["a"]},{"Key":"shape, I","Fragments":["go"]},{"Key":"with specific","Fragments":["member"]},{"Key":"specific member","Fragments":["names"]},{"Key":"member names","Fragments":["over"]},{"Key":"names over","Fragments":["using"]},{"Key":"using prebuilt","Fragments":["classes."]},{"Key":"said, A","Fragments":["Matter"]},{"Key":"A Matter","Fragments":["Of"]},{"Key":"Matter Of","Fragments":["Personal"]},{"Key":"Of Personal","Fragments":["Preference"]},{"Key":"Personal Preference","Fragments":["(AMOPP"]},{"Key":"Preference (AMOPP","Fragments":["(tm))"]},{"Key":"check what","Fragments":["strand"]},{"Key":"what strand","Fragments":["is"]},{"Key":"is shortest","Fragments":["and"]},{"Key":"shortest and","Fragments":["do"]},{"Key":"to ignore","Fragments":["the","it"]},{"Key":"ignore the","Fragments":["left"]},{"Key":"left over","Fragments":["strand","from"]},{"Key":"over strand","Fragments":["of"]},{"Key":"of dna","Fragments":["on"]},{"Key":"dna on","Fragments":["the"]},{"Key":"longer sequence","Fragments":["instead"]},{"Key":"sequence instead","Fragments":["of"]},{"Key":"of throwing","Fragments":["an"]},{"Key":"don't match","Fragments":["in"]},{"Key":" Commented","Fragments":["old"]},{"Key":"Commented old","Fragments":["code"]},{"Key":"and comments","Fragments":["that"]},{"Key":"that have","Fragments":["no","free"]},{"Key":"no use","Fragments":["are"]},{"Key":"use are","Fragments":["code"]},{"Key":"are code","Fragments":["clutter,"]},{"Key":"code clutter,","Fragments":["don't"]},{"Key":"clutter, don't","Fragments":["get"]},{"Key":"that habit.","Fragments":["Code"]},{"Key":"habit. Code","Fragments":["loses"]},{"Key":"Code loses","Fragments":["elegance"]},{"Key":"loses elegance","Fragments":["that"]},{"Key":"elegance that","Fragments":["way."]},{"Key":"with SamKablam's","Fragments":["advice,"]},{"Key":"SamKablam's advice,","Fragments":["use"]},{"Key":"advice, use","Fragments":["brackets."]},{"Key":"still pretty","Fragments":["new"]},{"Key":"still trying","Fragments":["to"]},{"Key":"the hang","Fragments":["of"]},{"Key":"hang of","Fragments":["when"]},{"Key":"to implicitly","Fragments":["type"]},{"Key":"implicitly type","Fragments":["variables."]},{"Key":"type variables.","Fragments":["I'll"]},{"Key":"variables. I'll","Fragments":["bear"]},{"Key":"I'll bear","Fragments":["that"]},{"Key":"bear that","Fragments":["in"]},{"Key":"just touched","Fragments":["on"]},{"Key":"touched on","Fragments":["Linq"]},{"Key":"on Linq","Fragments":["recently,"]},{"Key":"Linq recently,","Fragments":["but"]},{"Key":"recently, but","Fragments":["not"]},{"Key":"in huge","Fragments":["depth."]},{"Key":"huge depth.","Fragments":["I'll"]},{"Key":"depth. I'll","Fragments":["have"]},{"Key":"at using","Fragments":["it"]},{"Key":"When concatinating","Fragments":["more"]},{"Key":"concatinating more","Fragments":["then"]},{"Key":"then 2","Fragments":["strings"]},{"Key":"2 strings","Fragments":["use"]},{"Key":"strings use","Fragments":["StringBuilder."]},{"Key":"use StringBuilder.","Fragments":["It"]},{"Key":"StringBuilder. It","Fragments":["has"]},{"Key":"better memory","Fragments":["performance."]},{"Key":"All this","Fragments":["exercise"]},{"Key":"exercise proves","Fragments":["is"]},{"Key":"proves is","Fragments":["that"]},{"Key":"define extension","Fragments":["methods"]},{"Key":"the yield","Fragments":["keyword...","keyword...","statement."]},{"Key":"iteration. Passes","Fragments":["all"]},{"Key":"not prevent","Fragments":["outside"]},{"Key":"prevent outside","Fragments":["code"]},{"Key":"outside code","Fragments":["from","messing"]},{"Key":"code from","Fragments":["messing","prime-factors?"]},{"Key":"Please comment!","Fragments":[":)"]},{"Key":"shape we","Fragments":["should"]},{"Key":"check inputs","Fragments":["and"]},{"Key":"inputs and","Fragments":["throw","outputs"]},{"Key":"exception at","Fragments":["the"]},{"Key":"the routine.","Fragments":["It"]},{"Key":"routine. It","Fragments":["makes"]},{"Key":"the constraints","Fragments":["up"]},{"Key":"constraints up","Fragments":["front."]},{"Key":"if (s1.Length","Fragments":["!="]},{"Key":"(s1.Length !=","Fragments":["s2.Length)"]},{"Key":"new ArgumentException(\"String","Fragments":["length"]},{"Key":"ArgumentException(\"String length","Fragments":["mismatch\");"]},{"Key":"strings directly","Fragments":["without"]},{"Key":"directly without","Fragments":["using"]},{"Key":"using \u003cb\u003eLinq\u003c/b\u003e.","Fragments":["Should"]},{"Key":"\u003cb\u003eLinq\u003c/b\u003e. Should","Fragments":["be"]},{"Key":"Should be","Fragments":["O(1)","able","built"]},{"Key":"be O(1)","Fragments":["to"]},{"Key":"O(1) to","Fragments":["access"]},{"Key":"access any","Fragments":["character"]},{"Key":"character instead","Fragments":["of"]},{"Key":"correct point","Fragments":["each","be","value"]},{"Key":"point each","Fragments":["time."]},{"Key":"time. Behind","Fragments":["the"]},{"Key":"scenes it","Fragments":["is"]},{"Key":"that \u003cb\u003eElementAt()\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003eElementAt()\u003c/b\u003e is","Fragments":["aware"]},{"Key":"is aware","Fragments":["that"]},{"Key":"aware that","Fragments":["we","String.Concat"]},{"Key":"will index","Fragments":["directly"]},{"Key":"index directly","Fragments":["to"]},{"Key":"point be","Fragments":["we"]},{"Key":"be we","Fragments":["don't"]},{"Key":"and shouldn't","Fragments":["depend"]},{"Key":"shouldn't depend","Fragments":["upon","on","on"]},{"Key":"depend upon","Fragments":["it."]},{"Key":"Just checking.","Fragments":["Why"]},{"Key":"checking. Why","Fragments":["the"]},{"Key":"Why the","Fragments":["\u003cb\u003eSort()\u003c/b\u003e"]},{"Key":"the \u003cb\u003eSort()\u003c/b\u003e","Fragments":["implementation"]},{"Key":"\u003cb\u003eSort()\u003c/b\u003e implementation","Fragments":["instead"]},{"Key":"implementation instead","Fragments":["of"]},{"Key":"of \u003cb\u003eArray.Sort()\u003c/b\u003e","Fragments":["or"]},{"Key":"\u003cb\u003eArray.Sort()\u003c/b\u003e or","Fragments":["\u003cb\u003eEnumerable.OrderBy()\u003c/b\u003e"]},{"Key":"We should","Fragments":["chain","also"]},{"Key":"should chain","Fragments":["the"]},{"Key":"chain the","Fragments":["constructors.","ternary"]},{"Key":"the constructors.","Fragments":["Currently"]},{"Key":"constructors. Currently","Fragments":["if"]},{"Key":"Currently if","Fragments":["a"]},{"Key":"change needs","Fragments":["to"]},{"Key":"made (removing","Fragments":["the"]},{"Key":"(removing the","Fragments":["_usedNumbers)"]},{"Key":"the _usedNumbers)","Fragments":["it"]},{"Key":"_usedNumbers) it","Fragments":["needs"]},{"Key":"in two","Fragments":["places.","places","different","steps."]},{"Key":"public SumOfMultiples()","Fragments":[":"]},{"Key":"SumOfMultiples() :","Fragments":["this(new"]},{"Key":": this(new","Fragments":["[]{3,5})","List\u003cint\u003e"]},{"Key":"this(new []{3,5})","Fragments":["{}"]},{"Key":"public SumOfMultiples(IEnumerable\u003cint\u003e","Fragments":["numbers){","numbers)"]},{"Key":" _givenNumbers","Fragments":["="]},{"Key":"_givenNumbers =","Fragments":["numbers.ToList();"]},{"Key":"also make","Fragments":["the","the","sure"]},{"Key":"inputs to","Fragments":["the"]},{"Key":"the routine","Fragments":["as"]},{"Key":"routine as","Fragments":["general"]},{"Key":"as general","Fragments":["as","a","nitpicking"]},{"Key":"general as","Fragments":["they"]},{"Key":"can be.","Fragments":["We"]},{"Key":"be. We","Fragments":["do"]},{"Key":"We do","Fragments":["not"]},{"Key":"a List\u003cint\u003e","Fragments":["as"]},{"Key":"List\u003cint\u003e as","Fragments":["input,"]},{"Key":"as input,","Fragments":["anything"]},{"Key":"input, anything","Fragments":["that"]},{"Key":"is IEnumerable\u003cint\u003e","Fragments":["(say,"]},{"Key":"IEnumerable\u003cint\u003e (say,","Fragments":["an"]},{"Key":"(say, an","Fragments":["int[],"]},{"Key":"an int[],","Fragments":["will"]},{"Key":"int[], will","Fragments":["serve"]},{"Key":"will serve","Fragments":["nicely)."]},{"Key":"what algorithm","Fragments":["we"]},{"Key":"algorithm we","Fragments":["are"]},{"Key":"using here","Fragments":["but"]},{"Key":"a of","Fragments":["the"]},{"Key":"each \u003cb\u003enumber\u003c/b\u003e","Fragments":["from"]},{"Key":"\u003cb\u003enumber\u003c/b\u003e from","Fragments":["1"]},{"Key":"each \u003cb\u003egiven","Fragments":["number\u003c/b\u003e"]},{"Key":"if \u003cb\u003enumber\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003enumber\u003c/b\u003e is","Fragments":["a"]},{"Key":"of \u003cb\u003egiven","Fragments":["number\u003c/b\u003e"]},{"Key":"Add to","Fragments":["sum","this","it?"]},{"Key":" another","Fragments":["way"]},{"Key":"of saying","Fragments":["\u003cem\u003e'is"]},{"Key":"saying \u003cem\u003e'is","Fragments":["a"]},{"Key":"\u003cem\u003e'is a","Fragments":["multiple"]},{"Key":"multiple of'\u003c/em\u003e","Fragments":["is"]},{"Key":"of'\u003c/em\u003e is","Fragments":["\u003cem\u003e'divides"]},{"Key":"is \u003cem\u003e'divides","Fragments":["into"]},{"Key":"\u003cem\u003e'divides into","Fragments":["with"]},{"Key":"into with","Fragments":["no"]},{"Key":"no remainder'\u003c/em\u003e","Fragments":["which"]},{"Key":"remainder'\u003c/em\u003e which","Fragments":["lets"]},{"Key":"which lets","Fragments":["us"]},{"Key":"lets us","Fragments":["use"]},{"Key":"us use","Fragments":["the"]},{"Key":" 1","Fragments":["to","%","-","is","is:-"]},{"Key":"1 %","Fragments":["3"]},{"Key":"% 3","Fragments":["=","=","=","=","=","=","=","=="]},{"Key":"3 =","Fragments":["1","2","0","1","2","0","1"]},{"Key":" 2","Fragments":["%","-","is:-","calls."]},{"Key":"2 %","Fragments":["3"]},{"Key":" 3","Fragments":["%","-","calls"]},{"Key":"3 %","Fragments":["3"]},{"Key":" 4","Fragments":["%","-","solutions"]},{"Key":"4 %","Fragments":["3"]},{"Key":" 5","Fragments":["%","-"]},{"Key":"5 %","Fragments":["3"]},{"Key":" 6","Fragments":["%","-"]},{"Key":"6 %","Fragments":["3"]},{"Key":" 7","Fragments":["%","-"]},{"Key":"7 %","Fragments":["3"]},{"Key":" @beatrice","Fragments":["_I"]},{"Key":"@beatrice _I","Fragments":["think"]},{"Key":"_I think","Fragments":["the"]},{"Key":"point didn't","Fragments":["think"]},{"Key":"way. Joining","Fragments":["strings"]},{"Key":"Joining strings","Fragments":["shouldnt"]},{"Key":"strings shouldnt","Fragments":["be"]},{"Key":"shouldnt be","Fragments":["a"]},{"Key":"problem at","Fragments":["this"]},{"Key":"this level.","Fragments":["But"]},{"Key":"level. But","Fragments":["they"]},{"Key":"But they","Fragments":["should"]},{"Key":"pointed that","Fragments":["out"]},{"Key":"out tho","Fragments":[":/"]},{"Key":"Why not,","Fragments":["in"]},{"Key":"not, in","Fragments":["Score(),"]},{"Key":"in Score(),","Fragments":["use"]},{"Key":"Score(), use","Fragments":["Linq"]},{"Key":"case all","Fragments":["the"]},{"Key":"in \"word\".","Fragments":["and"]},{"Key":"\"word\". and","Fragments":["only"]},{"Key":"only called","Fragments":["once"]},{"Key":"called once","Fragments":["not"]},{"Key":"once not","Fragments":["for"]},{"Key":"an advantage","Fragments":["of","to","of"]},{"Key":"using EnumerateTo()","Fragments":["over"]},{"Key":"EnumerateTo() over","Fragments":["Enumerable.Range(1,limit)?"]},{"Key":"point re","Fragments":["ToArray()"]},{"Key":" Re","Fragments":["Tuples"]},{"Key":"Re Tuples","Fragments":["why"]},{"Key":"Tuples why","Fragments":["not"]},{"Key":"not use,say,","Fragments":["a"]},{"Key":"use,say, a","Fragments":["flagged"]},{"Key":"a flagged","Fragments":["enum","enum","enum"]},{"Key":"flagged enum","Fragments":["-","and"]},{"Key":"enum -","Fragments":["much"]},{"Key":"- much","Fragments":["lower","more"]},{"Key":"much lower","Fragments":["overhead?"]},{"Key":"with @zechariah","Fragments":["it's"]},{"Key":"@zechariah it's","Fragments":["nice"]},{"Key":"it's nice","Fragments":["to"]},{"Key":"approach. I","Fragments":["think","wonder","think"]},{"Key":"be faster","Fragments":["as","to"]},{"Key":"faster as","Fragments":["it's","it","it's"]},{"Key":"checking every","Fragments":["number."]},{"Key":"every number.","Fragments":["I"]},{"Key":"number. I","Fragments":["also","have","optimized"]},{"Key":"that it'd","Fragments":["be"]},{"Key":"more memory","Fragments":["as"]},{"Key":"the multiplesUsed","Fragments":["list"]},{"Key":"multiplesUsed list","Fragments":["up"]},{"Key":"list up","Fragments":["to"]},{"Key":"date. So,","Fragments":["it's"]},{"Key":"So, it's","Fragments":["a"]},{"Key":"off on","Fragments":["speed"]},{"Key":"on speed","Fragments":["vs"]},{"Key":"speed vs","Fragments":["memory."]},{"Key":"if it'd","Fragments":["perform"]},{"Key":"it'd perform","Fragments":["better"]},{"Key":"better by","Fragments":["making"]},{"Key":"by making","Fragments":["multiplesUsed","the","the","it"]},{"Key":"making multiplesUsed","Fragments":["a"]},{"Key":"multiplesUsed a","Fragments":["HashSet"]},{"Key":"HashSet and","Fragments":["just","false"]},{"Key":" Thanks--why","Fragments":["would"]},{"Key":"Thanks--why would","Fragments":["that"]},{"Key":"would that","Fragments":["be","be","change"]},{"Key":"all depends","Fragments":["on"]},{"Key":"on which","Fragments":["is","of","types","you"]},{"Key":"is expected","Fragments":["to"]},{"Key":"to occur","Fragments":["more."]},{"Key":"occur more.","Fragments":["If"]},{"Key":"more. If","Fragments":["you"]},{"Key":"dictionary then","Fragments":["your"]},{"Key":"current method","Fragments":["is"]},{"Key":"is faster","Fragments":["as","than","than"]},{"Key":"it never","Fragments":["has","occurred.","is!"]},{"Key":"never has","Fragments":["to"]},{"Key":"key more","Fragments":["often"]},{"Key":"than not","Fragments":["(which"]},{"Key":"not (which","Fragments":["I"]},{"Key":"case here),","Fragments":["then"]},{"Key":"here), then","Fragments":["my"]},{"Key":"be faster.","Fragments":["When","I'll"]},{"Key":"faster. When","Fragments":["you"]},{"Key":"call ContainsKey(),","Fragments":["it"]},{"Key":"ContainsKey(), it","Fragments":["has"]},{"Key":"dictionary search","Fragments":["for","once."]},{"Key":"specified key","Fragments":["once."]},{"Key":"key once.","Fragments":["Then"]},{"Key":"once. Then","Fragments":["(assuming"]},{"Key":"Then (assuming","Fragments":["it"]},{"Key":"(assuming it","Fragments":["finds"]},{"Key":"finds it)","Fragments":["you"]},{"Key":"it) you","Fragments":["call"]},{"Key":"call NucleotideCounts[nucleotide]","Fragments":["which"]},{"Key":"NucleotideCounts[nucleotide] which","Fragments":["does"]},{"Key":"which does","Fragments":["the","a"]},{"Key":"same Dictionary","Fragments":["search"]},{"Key":"Dictionary search","Fragments":["to"]},{"Key":"search to","Fragments":["find"]},{"Key":"correct entry","Fragments":["to"]},{"Key":"entry to","Fragments":["return."]},{"Key":"return. There","Fragments":["might"]},{"Key":"There might","Fragments":["be","be"]},{"Key":"some optimization","Fragments":["in"]},{"Key":"last search","Fragments":["attempted,"]},{"Key":"search attempted,","Fragments":["but"]},{"Key":"attempted, but","Fragments":["you"]},{"Key":"can't rely","Fragments":["on"]},{"Key":"that. By","Fragments":["attempting"]},{"Key":"By attempting","Fragments":["to"]},{"Key":"return NucleotideCounts[nucleotide]","Fragments":["inside"]},{"Key":"NucleotideCounts[nucleotide] inside","Fragments":["a"]},{"Key":"inside a","Fragments":["try"]},{"Key":"try block,","Fragments":["you"]},{"Key":"block, you","Fragments":["only"]},{"Key":"search once.","Fragments":["If"]},{"Key":"is found","Fragments":["we"]},{"Key":"found we","Fragments":["go"]},{"Key":"go our","Fragments":["merry"]},{"Key":"our merry","Fragments":["way."]},{"Key":"merry way.","Fragments":["If"]},{"Key":"not found","Fragments":["an","as"]},{"Key":"found an","Fragments":["exception"]},{"Key":"exception needs","Fragments":["to"]},{"Key":"be generated","Fragments":["which"]},{"Key":"generated which","Fragments":["we"]},{"Key":" Alternative","Fragments":["take."]},{"Key":"and clean","Fragments":["way","implementation","way","up"]},{"Key":"clean way","Fragments":["of","of"]},{"Key":"of passing","Fragments":["the"]},{"Key":"the 'Bonus","Fragments":["Points'"]},{"Key":"'Bonus Points'","Fragments":["section"]},{"Key":"Points' section","Fragments":["could"]},{"Key":"section could","Fragments":["be"]},{"Key":"be satisfied","Fragments":["by"]},{"Key":"satisfied by","Fragments":["the"]},{"Key":"Roster {","Fragments":["get;"]},{"Key":"{ get;","Fragments":["private","private","private"]},{"Key":"get; private","Fragments":["set;","set;","set;"]},{"Key":"private set;","Fragments":["}","}\u003c/code\u003e","}\u003c/code\u003e."]},{"Key":"set; }","Fragments":["on"]},{"Key":"} on","Fragments":["line"]},{"Key":"line 11.","Fragments":["This"]},{"Key":"11. This","Fragments":["makes"]},{"Key":"it unable","Fragments":["to"]},{"Key":"directly changed","Fragments":["but"]},{"Key":"changed but","Fragments":["could"]},{"Key":"but could","Fragments":["I","have","easily"]},{"Key":"could I","Fragments":["have","really"]},{"Key":"to clarify,","Fragments":["I"]},{"Key":"clarify, I","Fragments":["could"]},{"Key":"have looped","Fragments":["through"]},{"Key":"through like","Fragments":["this?"]},{"Key":" \u003ccode\u003es1(i)","Fragments":["!="]},{"Key":"\u003ccode\u003es1(i) !=","Fragments":["s2(i)\u003c/code\u003e"]},{"Key":"the tip","Fragments":["about","with"]},{"Key":"tip about","Fragments":["throwing"]},{"Key":"about throwing","Fragments":["at"]},{"Key":"throwing at","Fragments":["the"]},{"Key":"the top,","Fragments":["maybe","but","you","as"]},{"Key":"top, maybe","Fragments":["I"]},{"Key":"just instinctively","Fragments":["using"]},{"Key":"instinctively using","Fragments":["the"]},{"Key":"format from","Fragments":["the"]},{"Key":"the try-catch","Fragments":["I'd"]},{"Key":"try-catch I'd","Fragments":["normally"]},{"Key":"I'd normally","Fragments":["use!"]},{"Key":"Good idea","Fragments":["to"]},{"Key":"year before","Fragments":["checking","instantiation."]},{"Key":"before checking","Fragments":["whether"]},{"Key":"checking whether","Fragments":["or","the"]},{"Key":"whether or","Fragments":["not","not","a","not"]},{"Key":"not it","Fragments":["is"]},{"Key":" @roman","Fragments":["is"]},{"Key":"@roman is","Fragments":["right"]},{"Key":"the week","Fragments":["not","and","your"]},{"Key":"week not","Fragments":["mattering."]},{"Key":"not mattering.","Fragments":["It"]},{"Key":"mattering. It","Fragments":["is"]},{"Key":"the ordering","Fragments":["of"]},{"Key":"ordering of","Fragments":["the"]},{"Key":"the `DayOfWeek`","Fragments":["enum."]},{"Key":"`DayOfWeek` enum.","Fragments":["I"]},{"Key":"enum. I","Fragments":["agree","think"]},{"Key":"with @roman","Fragments":["though"]},{"Key":"@roman though","Fragments":["that"]},{"Key":"that looping","Fragments":["is"]},{"Key":"looping is","Fragments":["probably"]},{"Key":"the [documentation","Fragments":["for"]},{"Key":"[documentation for","Fragments":["DayOfWeek](http://msdn.microsoft.com/en-us/library/system.dayofweek(v=vs.110).aspx)"]},{"Key":"for DayOfWeek](http://msdn.microsoft.com/en-us/library/system.dayofweek(v=vs.110).aspx)","Fragments":["and"]},{"Key":"DayOfWeek](http://msdn.microsoft.com/en-us/library/system.dayofweek(v=vs.110).aspx) and","Fragments":["it"]},{"Key":"not specify","Fragments":["the"]},{"Key":"specify the","Fragments":["order","order"]},{"Key":"order or","Fragments":["the"]},{"Key":"enum, therefore","Fragments":["this"]},{"Key":"therefore this","Fragments":["implementation"]},{"Key":"is relying","Fragments":["on","on"]},{"Key":"an internal","Fragments":["detail"]},{"Key":"internal detail","Fragments":["of"]},{"Key":"detail of","Fragments":["the","the"]},{"Key":"framework. Based","Fragments":["on"]},{"Key":"Based on","Fragments":["that,","my","a"]},{"Key":"on that,","Fragments":["I"]},{"Key":"previous implementation","Fragments":["might"]},{"Key":"implementation might","Fragments":["actually"]},{"Key":"might actually","Fragments":["be"]},{"Key":"if (s1","Fragments":["[I]"]},{"Key":"(s1 [I]","Fragments":["!="]},{"Key":"[I] !=","Fragments":["s2"]},{"Key":"!= s2","Fragments":["[I])"]},{"Key":" square","Fragments":["brackets"]},{"Key":"for indexing.","Fragments":["A"]},{"Key":"indexing. A","Fragments":["string"]},{"Key":"char []","Fragments":["in"]},{"Key":"[] in","Fragments":["a"]},{"Key":"Makes sense--thanks","Fragments":["for"]},{"Key":"sense--thanks for","Fragments":["the"]},{"Key":" Better.","Fragments":["Now","You"]},{"Key":"Better. Now","Fragments":["there"]},{"Key":"Now there","Fragments":["is"]},{"Key":"place where","Fragments":["you","it"]},{"Key":"create new","Fragments":["lists,","exercises"]},{"Key":"new lists,","Fragments":["so"]},{"Key":"lists, so","Fragments":["if","I"]},{"Key":"way a","Fragments":["new"]},{"Key":"list is","Fragments":["generated","being","common","guaranteed"]},{"Key":"is generated","Fragments":["you"]},{"Key":"generated you","Fragments":["only"]},{"Key":"change one","Fragments":["place"]},{"Key":"There still","Fragments":["seems"]},{"Key":"still seems","Fragments":["to"]},{"Key":"be minor","Fragments":["inefficiencies,"]},{"Key":"minor inefficiencies,","Fragments":["though."]},{"Key":"inefficiencies, though.","Fragments":["In"]},{"Key":"though. In","Fragments":["Add(),"]},{"Key":"In Add(),","Fragments":["you"]},{"Key":"Add(), you","Fragments":["have"]},{"Key":"to lookup","Fragments":["in"]},{"Key":"lookup in","Fragments":["the","the"]},{"Key":"Dictionary three","Fragments":["different"]},{"Key":"different times","Fragments":["-"]},{"Key":"times -","Fragments":["at","roughly","at"]},{"Key":"- at","Fragments":["least","least"]},{"Key":"least once","Fragments":["when"]},{"Key":"once when","Fragments":["CheckForEmpty()","Sort"]},{"Key":"when CheckForEmpty()","Fragments":["is"]},{"Key":"CheckForEmpty() is","Fragments":["called."]},{"Key":"is called.","Fragments":["Once","If","I","Probably","The"]},{"Key":"called. Once","Fragments":["when"]},{"Key":"Once when","Fragments":["Add"]},{"Key":"when Add","Fragments":["is"]},{"Key":"Add is","Fragments":["called","much"]},{"Key":"called and","Fragments":["once","then"]},{"Key":"when Sort","Fragments":["is"]},{"Key":"Sort is","Fragments":["called."]},{"Key":"had CheckForEmpty()","Fragments":["return"]},{"Key":"CheckForEmpty() return","Fragments":["the"]},{"Key":"the List","Fragments":["(possibly","to","class.","class.","method","was","originally","method."]},{"Key":"List (possibly","Fragments":["newly"]},{"Key":"(possibly newly","Fragments":["created)"]},{"Key":"newly created)","Fragments":["you"]},{"Key":"created) you","Fragments":["could"]},{"Key":"could store","Fragments":["that","one"]},{"Key":"store that","Fragments":["in","somewhere"]},{"Key":"Add function","Fragments":["and","will"]},{"Key":"variable when","Fragments":["you"]},{"Key":"call Add","Fragments":["and","and"]},{"Key":"Actually, even","Fragments":["more"]},{"Key":"efficient would","Fragments":["be"]},{"Key":"currently in","Fragments":["CheckForEmpty()"]},{"Key":"in CheckForEmpty()","Fragments":["moved"]},{"Key":"CheckForEmpty() moved","Fragments":["into"]},{"Key":"into Grade()","Fragments":["and"]},{"Key":"Grade() and","Fragments":["then"]},{"Key":"have Add()","Fragments":["call"]},{"Key":"Add() call","Fragments":["Grade()"]},{"Key":"call Grade()","Fragments":["to","to"]},{"Key":"Grade() to","Fragments":["get","do","put"]},{"Key":"doesn't make","Fragments":["sense.","any","sense"]},{"Key":"I skipped","Fragments":["the","the"]},{"Key":"skipped the","Fragments":["random","random"]},{"Key":"random approach","Fragments":["for","for"]},{"Key":"more controlled","Fragments":["one","one"]},{"Key":"controlled one","Fragments":["to","to"]},{"Key":"one to","Fragments":["avoid","avoid","assume","the","create","more","focus","the","'strain'."]},{"Key":"My robots","Fragments":["start"]},{"Key":"robots start","Fragments":["with"]},{"Key":"name AA001","Fragments":["and"]},{"Key":"AA001 and","Fragments":["increment"]},{"Key":"and increment","Fragments":["from","by","by"]},{"Key":"increment from","Fragments":["there."]},{"Key":"from there.","Fragments":["The","What","That"]},{"Key":"The counters","Fragments":["are"]},{"Key":"counters are","Fragments":["static,"]},{"Key":"are static,","Fragments":["so"]},{"Key":"no name","Fragments":["should"]},{"Key":"name should","Fragments":["duplicate"]},{"Key":"should duplicate","Fragments":["until"]},{"Key":"duplicate until","Fragments":["the"]},{"Key":"after ZZ999,","Fragments":["when"]},{"Key":"ZZ999, when","Fragments":["it"]},{"Key":"it flips","Fragments":["back"]},{"Key":"flips back","Fragments":["to"]},{"Key":"to AA001.","Fragments":["I'm"]},{"Key":"AA001. I'm","Fragments":["assuming"]},{"Key":"assuming by","Fragments":["then"]},{"Key":"by then","Fragments":["the"]},{"Key":"the factory","Fragments":["will"]},{"Key":"factory will","Fragments":["have"]},{"Key":"new model","Fragments":["or"]},{"Key":"model or","Fragments":["something"]},{"Key":"something and","Fragments":["it"]},{"Key":"that thinking","Fragments":["as"]},{"Key":"thinking as","Fragments":["well."]},{"Key":"I ultimately","Fragments":["chose"]},{"Key":"ultimately chose","Fragments":["readability"]},{"Key":"chose readability","Fragments":["over"]},{"Key":"over style.","Fragments":["It"]},{"Key":"style. It","Fragments":["does"]},{"Key":"does \"bloat\"","Fragments":["the"]},{"Key":"\"bloat\" the","Fragments":["class"]},{"Key":"class a","Fragments":["little,","little","word"]},{"Key":"a little,","Fragments":["but"]},{"Key":"little, but","Fragments":["I"]},{"Key":"feel it'll","Fragments":["be"]},{"Key":"it'll be","Fragments":["immediately"]},{"Key":"be immediately","Fragments":["understood"]},{"Key":"immediately understood","Fragments":["exactly"]},{"Key":"understood exactly","Fragments":["the"]},{"Key":"method this","Fragments":["way"]},{"Key":"way rather","Fragments":["than"]},{"Key":"than placing","Fragments":["the"]},{"Key":"placing the","Fragments":["mods"]},{"Key":"mods directly","Fragments":["in"]},{"Key":"Looping will","Fragments":["be"]},{"Key":"be fine","Fragments":["as"]},{"Key":"this very","Fragments":["often.","shortly","shortly","shortly","well,"]},{"Key":"very often.","Fragments":["If"]},{"Key":"often. If","Fragments":["you"]},{"Key":"were doing","Fragments":["these","this"]},{"Key":"doing these","Fragments":["meeting"]},{"Key":"these meeting","Fragments":["checks"]},{"Key":"meeting checks","Fragments":["thousands"]},{"Key":"checks thousands","Fragments":["of"]},{"Key":"second, you","Fragments":["would"]},{"Key":"to loop.","Fragments":["I"]},{"Key":"with looping","Fragments":["as"]},{"Key":"looping as","Fragments":["long"]},{"Key":"long readability","Fragments":["was"]},{"Key":"readability was","Fragments":["a"]},{"Key":"higher priority","Fragments":["than"]},{"Key":"priority than","Fragments":["efficiency."]},{"Key":"than efficiency.","Fragments":["In"]},{"Key":"efficiency. In","Fragments":["my"]},{"Key":"was ordered","Fragments":["correctly"]},{"Key":"ordered correctly","Fragments":["(what"]},{"Key":"correctly (what","Fragments":["other"]},{"Key":"(what other","Fragments":["order"]},{"Key":"other order","Fragments":["makes"]},{"Key":"order makes","Fragments":["sense?)"]},{"Key":"makes sense?)","Fragments":["and"]},{"Key":"sense?) and","Fragments":["then"]},{"Key":"then to","Fragments":["added"]},{"Key":"to added","Fragments":["Debug.Assert"]},{"Key":"added Debug.Assert","Fragments":["calls"]},{"Key":"Debug.Assert calls","Fragments":["to"]},{"Key":"make sure.","Fragments":["(They"]},{"Key":"sure. (They","Fragments":["are"]},{"Key":"(They are","Fragments":["currently"]},{"Key":"are currently","Fragments":["commented","reversing"]},{"Key":"currently commented","Fragments":["out"]},{"Key":"out -","Fragments":["but"]},{"Key":"correct order","Fragments":["for"]},{"Key":"order for","Fragments":["the"]},{"Key":"enumeration or","Fragments":["where"]},{"Key":"or where","Fragments":["I"]},{"Key":"just couldn't","Fragments":["count"]},{"Key":"couldn't count","Fragments":["on"]},{"Key":"own enumeration","Fragments":["and","to"]},{"Key":"enumeration and","Fragments":["add","have","why."]},{"Key":"DateTime to","Fragments":["return"]},{"Key":"return my","Fragments":["enumeration"]},{"Key":"my enumeration","Fragments":["instead,"]},{"Key":"enumeration instead,","Fragments":["thus"]},{"Key":"instead, thus","Fragments":["making"]},{"Key":"thus making","Fragments":["the"]},{"Key":"code almost","Fragments":["identical"]},{"Key":"identical -","Fragments":["just"]},{"Key":"- just","Fragments":["replacing","call","put","pointing"]},{"Key":"just replacing","Fragments":["DayOfWeek"]},{"Key":"replacing DayOfWeek","Fragments":["with"]},{"Key":"DayOfWeek with","Fragments":["my"]},{"Key":"Wow, this","Fragments":["did"]},{"Key":"this did","Fragments":["get"]},{"Key":"of hand!","Fragments":[":-D"]},{"Key":"I'm guessing","Fragments":["you","this"]},{"Key":"guessing you","Fragments":["altered"]},{"Key":"you altered","Fragments":["the"]},{"Key":"the IRandomGenerator","Fragments":["generator"]},{"Key":"IRandomGenerator generator","Fragments":["that"]},{"Key":"generator that","Fragments":["you"]},{"Key":"you robot","Fragments":["needs"]},{"Key":"robot needs","Fragments":["in"]},{"Key":"needs in","Fragments":["it's"]},{"Key":"curious in","Fragments":["the","the"]},{"Key":"the RandomGenerator","Fragments":["constructor"]},{"Key":"RandomGenerator constructor","Fragments":["why"]},{"Key":"constructor why","Fragments":["you"]},{"Key":"store seed","Fragments":["into"]},{"Key":"seed into","Fragments":["_seed."]},{"Key":"into _seed.","Fragments":["The"]},{"Key":"_seed. The","Fragments":["only"]},{"Key":"call GetRandomUpperCaseCharacter(_seed),","Fragments":["but"]},{"Key":"GetRandomUpperCaseCharacter(_seed), but","Fragments":["you"]},{"Key":"there. I'm","Fragments":["guessing"]},{"Key":"is leftover","Fragments":["code"]},{"Key":"leftover code","Fragments":["you"]},{"Key":"In GetNewName(),","Fragments":["you"]},{"Key":"GetNewName(), you","Fragments":["call"]},{"Key":"call GenerateNumbers(4).","Fragments":["That"]},{"Key":"GenerateNumbers(4). That","Fragments":["should"]},{"Key":"That should","Fragments":["be","simplify","be"]},{"Key":"be 3","Fragments":["according"]},{"Key":"3 according","Fragments":["to"]},{"Key":"considering named","Fragments":["constants,"]},{"Key":"named constants,","Fragments":["but"]},{"Key":"constants, but","Fragments":["I","even","I"]},{"Key":"could name","Fragments":["them..."]},{"Key":"name them...","Fragments":["FOUR_HUNDRED?"]},{"Key":"them... FOUR_HUNDRED?","Fragments":["No"]},{"Key":"FOUR_HUNDRED? No","Fragments":["thanks!"]},{"Key":"put everything","Fragments":["into"]},{"Key":"line but","Fragments":["I","the"]},{"Key":"think `IsMultiple`","Fragments":["makes"]},{"Key":"`IsMultiple` makes","Fragments":["it"]},{"Key":"Adding a","Fragments":["`IsDivisibleBy`"]},{"Key":"a `IsDivisibleBy`","Fragments":["doesn't"]},{"Key":"`IsDivisibleBy` doesn't","Fragments":["add"]},{"Key":"much bloat,","Fragments":["and"]},{"Key":"bloat, and","Fragments":["would"]},{"Key":"Adding **three**","Fragments":["methods"]},{"Key":"**three** methods","Fragments":["that"]},{"Key":"differ by","Fragments":["only"]},{"Key":"is causing","Fragments":["the","compile"]},{"Key":"causing the","Fragments":["bloat."]},{"Key":"the bloat.","Fragments":["Consider"]},{"Key":"bloat. Consider","Fragments":["making"]},{"Key":"making 4","Fragments":["/"]},{"Key":"4 /","Fragments":["100"]},{"Key":"/ 100","Fragments":["/"]},{"Key":"100 /","Fragments":["400"]},{"Key":"/ 400","Fragments":["just"]},{"Key":"400 just","Fragments":["a"]},{"Key":"to `IsDivisibleBy`?","Fragments":[":)"]},{"Key":" Originally","Fragments":["I"]},{"Key":"Originally I","Fragments":["just"]},{"Key":"just did","Fragments":["all","that,","what"]},{"Key":"did all","Fragments":["the"]},{"Key":"bool assignments","Fragments":["at"]},{"Key":"assignments at","Fragments":["the"]},{"Key":"top, but","Fragments":["then"]},{"Key":"of silence","Fragments":["we"]},{"Key":"silence we","Fragments":["could"]},{"Key":"could avoid","Fragments":["all","doing","the"]},{"Key":"other checks","Fragments":["and"]},{"Key":"switched it","Fragments":["to"]},{"Key":"be like","Fragments":["I","an"]},{"Key":"exercise just","Fragments":["proves"]},{"Key":"just proves","Fragments":["you"]},{"Key":"proves you","Fragments":["know"]},{"Key":"use extension","Fragments":["methods","methods","methods.","methods"]},{"Key":"yield keyword...","Fragments":[":)"]},{"Key":"The \"boolean","Fragments":["zen\""]},{"Key":"\"boolean zen\"","Fragments":["between"]},{"Key":"zen\" between","Fragments":["iteration"]},{"Key":"between iteration","Fragments":["1"]},{"Key":"iteration 1","Fragments":["vs"]},{"Key":"1 vs","Fragments":["2"]},{"Key":"vs 2","Fragments":["is"]},{"Key":"2 is","Fragments":["good!"]},{"Key":"methods need","Fragments":["to"]},{"Key":"be reusable,","Fragments":["you"]},{"Key":"reusable, you","Fragments":["should"]},{"Key":"should avoid","Fragments":["hardcoding","code","this."]},{"Key":"avoid hardcoding","Fragments":["numbers"]},{"Key":"hardcoding numbers","Fragments":["into"]},{"Key":"numbers into","Fragments":["the"]},{"Key":"and bodies.","Fragments":["Imagine"]},{"Key":"bodies. Imagine","Fragments":["if"]},{"Key":"pattern kept","Fragments":["going"]},{"Key":"kept going","Fragments":["and"]},{"Key":"going and","Fragments":["there"]},{"Key":"were hundreds","Fragments":["of"]},{"Key":"hundreds of","Fragments":["`IsDivisibleBy...`!"]},{"Key":"it not","Fragments":["as","so","only"]},{"Key":"be. You","Fragments":["are","are","can"]},{"Key":"numbers 1","Fragments":["to"]},{"Key":"to \"to\"","Fragments":["for"]},{"Key":"\"to\" for","Fragments":["each"]},{"Key":"each entry","Fragments":["in"]},{"Key":"entry in","Fragments":["\"this.numbers\".","the","the","the"]},{"Key":"in \"this.numbers\".","Fragments":["It"]},{"Key":"\"this.numbers\". It","Fragments":["would"]},{"Key":"went through","Fragments":["that","and"]},{"Key":"through that","Fragments":["series"]},{"Key":"that series","Fragments":["once."]},{"Key":" @garret","Fragments":["I'm"]},{"Key":"@garret I'm","Fragments":["not"]},{"Key":"your suggestion","Fragments":["works.","of"]},{"Key":"suggestion works.","Fragments":["Did"]},{"Key":"works. Did","Fragments":["you"]},{"Key":"Did you","Fragments":["mean","really","copy","know","use","consider","notice","mean","try"]},{"Key":"string GenerateNumbers(int","Fragments":["numberOfNumbers)","numberOfNumbers)"]},{"Key":"\u003c numberOfNumbers;","Fragments":["i++)"]},{"Key":"* (int)Math.Pow(10,","Fragments":["i);"]},{"Key":"return _random.Next(numberOfPlaces+1).ToString(new","Fragments":["string('0',"]},{"Key":"_random.Next(numberOfPlaces+1).ToString(new string('0',","Fragments":["numberOfNumbers));"]},{"Key":"While we're","Fragments":["on"]},{"Key":"we're on","Fragments":["the"]},{"Key":"the subject","Fragments":["of"]},{"Key":"subject of","Fragments":["different"]},{"Key":"of different","Fragments":["implementations,"]},{"Key":"different implementations,","Fragments":["he"]},{"Key":"implementations, he","Fragments":["could"]},{"Key":"he could","Fragments":["always"]},{"Key":"could always","Fragments":["try","add"]},{"Key":"new string('9',","Fragments":["numberOfNumbers);"]},{"Key":"return _random.Next(int.Parse(numberOfPlaces)+1).ToString(new","Fragments":["string('0',"]},{"Key":"_random.Next(int.Parse(numberOfPlaces)+1).ToString(new string('0',","Fragments":["numberOfNumbers));"]},{"Key":"with @leda","Fragments":[","]},{"Key":"@leda ,","Fragments":["GenerateName"]},{"Key":", GenerateName","Fragments":["needs"]},{"Key":"GenerateName needs","Fragments":["a"]},{"Key":"needs a","Fragments":["little"]},{"Key":"little work","Fragments":["it's","as","as","as"]},{"Key":"work it's","Fragments":["difficult"]},{"Key":"it's difficult","Fragments":["to","to"]},{"Key":"read. His","Fragments":["suggestion"]},{"Key":"His suggestion","Fragments":["is"]},{"Key":"problem though,","Fragments":["_usedNames"]},{"Key":"though, _usedNames","Fragments":["needs"]},{"Key":"_usedNames needs","Fragments":["to"]},{"Key":"static. As","Fragments":["it"]},{"Key":"is, each","Fragments":["robot"]},{"Key":"each robot","Fragments":["has"]},{"Key":"robot has","Fragments":["it's"]},{"Key":"has it's","Fragments":["own"]},{"Key":"own list","Fragments":["of"]},{"Key":"could still","Fragments":["get"]},{"Key":"still get","Fragments":["duplicates","mutated."]},{"Key":"get duplicates","Fragments":["from"]},{"Key":"duplicates from","Fragments":["robot"]},{"Key":"from robot","Fragments":["to"]},{"Key":"robot to","Fragments":["robot."]},{"Key":"opinion you","Fragments":["could"]},{"Key":"more simple","Fragments":["matter","check"]},{"Key":"simple matter","Fragments":["like"]},{"Key":"matter like","Fragments":["this"]},{"Key":" if((year","Fragments":["%"]},{"Key":"if((year %","Fragments":["4"]},{"Key":"your feedback!","Fragments":["I"]},{"Key":"include \"!Char.IsNumber(input[i])\"","Fragments":["to"]},{"Key":"\"!Char.IsNumber(input[i])\" to","Fragments":["eliminate"]},{"Key":"eliminate special","Fragments":["characters."]},{"Key":"special characters.","Fragments":["Maybe"]},{"Key":"characters. Maybe","Fragments":["I"]},{"Key":"a cipher","Fragments":["text"]},{"Key":"cipher text","Fragments":["here,","so","(I","whihc"]},{"Key":"text here,","Fragments":["but"]},{"Key":"figured doing","Fragments":["it"]},{"Key":"mathematically would","Fragments":["be"]},{"Key":"more fun.","Fragments":[":)"]},{"Key":"Regarding constructors:","Fragments":["I"]},{"Key":"constructors: I","Fragments":["agree,"]},{"Key":"the IEnumerable:","Fragments":["I"]},{"Key":"IEnumerable: I","Fragments":["really"]},{"Key":"start doing","Fragments":["that"]},{"Key":"some point,","Fragments":["thank"]},{"Key":"point, thank","Fragments":["you."]},{"Key":"the modulus:","Fragments":["I"]},{"Key":"modulus: I","Fragments":["tried"]},{"Key":"a modulo","Fragments":["at"]},{"Key":"modulo at","Fragments":["one"]},{"Key":"at one","Fragments":["point,"]},{"Key":"one point,","Fragments":["but"]},{"Key":"it didn't","Fragments":["seem","actually"]},{"Key":"right. I'll","Fragments":["take"]},{"Key":"iteration takes","Fragments":["a"]},{"Key":"nicer approach","Fragments":["to"]},{"Key":"random string","Fragments":["creation,","creation."]},{"Key":"string creation,","Fragments":["using"]},{"Key":"creation, using","Fragments":["a"]},{"Key":"simple CharacterRequest","Fragments":["class"]},{"Key":"CharacterRequest class","Fragments":["to"]},{"Key":"to specify","Fragments":["which","the","an"]},{"Key":"specify which","Fragments":["character"]},{"Key":"which character","Fragments":["set"]},{"Key":"character set","Fragments":["should"]},{"Key":"set should","Fragments":["be"]},{"Key":"many characters","Fragments":["randomly"]},{"Key":"characters randomly","Fragments":["selected"]},{"Key":"randomly selected","Fragments":["with"]},{"Key":"selected with","Fragments":["each"]},{"Key":"with each","Fragments":["random"]},{"Key":"each random","Fragments":["string"]},{"Key":"I discussed","Fragments":["in"]},{"Key":"discussed in","Fragments":["my"]},{"Key":"previous comment/iteration,","Fragments":["I"]},{"Key":"comment/iteration, I","Fragments":["was"]},{"Key":"the unique","Fragments":["names","elements"]},{"Key":"names bonus.","Fragments":["I"]},{"Key":"bonus. I","Fragments":["like"]},{"Key":"use 1,000,000","Fragments":["iterations"]},{"Key":"1,000,000 iterations","Fragments":["to","of"]},{"Key":"uniqueness, so","Fragments":["when"]},{"Key":"when doing","Fragments":["so"]},{"Key":"doing so","Fragments":["here","would"]},{"Key":"so here","Fragments":["I","are"]},{"Key":"here I","Fragments":["noticed","guess.","think","would"]},{"Key":"that (of","Fragments":["course)"]},{"Key":"(of course)","Fragments":["it"]},{"Key":"course) it","Fragments":["starting"]},{"Key":"it starting","Fragments":["taking"]},{"Key":"taking an","Fragments":["obscenely"]},{"Key":"an obscenely","Fragments":["long"]},{"Key":"obscenely long","Fragments":["amount"]},{"Key":"long amount","Fragments":["of"]},{"Key":"to randomly","Fragments":["generate"]},{"Key":"randomly generate","Fragments":["a"]},{"Key":"a non-matching-previous","Fragments":["name."]},{"Key":"non-matching-previous name.","Fragments":["I"]},{"Key":"regex in","Fragments":["the"]},{"Key":"test only","Fragments":["checks"]},{"Key":"only checks","Fragments":["that","when"]},{"Key":"name sequence","Fragments":["contains"]},{"Key":"sequence contains","Fragments":["the"]},{"Key":"expected formatting","Fragments":["-"]},{"Key":"formatting -","Fragments":["not"]},{"Key":"strings match.","Fragments":["So"]},{"Key":"match. So","Fragments":["I"]},{"Key":"started appending","Fragments":["a"]},{"Key":"appending a","Fragments":["serial"]},{"Key":"a serial","Fragments":["#"]},{"Key":"serial #","Fragments":["by"]},{"Key":"# by","Fragments":["consulting"]},{"Key":"by consulting","Fragments":["the"]},{"Key":"consulting the","Fragments":["usedNames"]},{"Key":"the usedNames","Fragments":["count,"]},{"Key":"usedNames count,","Fragments":["which"]},{"Key":"count, which","Fragments":["feels"]},{"Key":"which feels","Fragments":["like"]},{"Key":"like cheating,","Fragments":["but"]},{"Key":"cheating, but","Fragments":["of"]},{"Key":"but of","Fragments":["course"]},{"Key":"course had","Fragments":["a"]},{"Key":"large performance","Fragments":["impact."]},{"Key":"anyone see","Fragments":["anything"]},{"Key":"improved /","Fragments":["problems"]},{"Key":"/ problems","Fragments":["with"]},{"Key":"Ah, of","Fragments":["course."]},{"Key":"of course.","Fragments":["Makes","My"]},{"Key":"course. Makes","Fragments":["total"]},{"Key":"Makes total","Fragments":["sense."]},{"Key":"total sense.","Fragments":["Thank"]},{"Key":"sense. Thank","Fragments":["you","you"]},{"Key":"for good","Fragments":["feedback!","code"]},{"Key":"good feedback!","Fragments":["This"]},{"Key":"feedback! This","Fragments":["was"]},{"Key":"was hoping","Fragments":["for"]},{"Key":"hoping for","Fragments":["from"]},{"Key":"for from","Fragments":["this"]},{"Key":"dictionary lookup.","Fragments":["I"]},{"Key":"took on","Fragments":["the"]},{"Key":"bonus challenge","Fragments":["of"]},{"Key":"of preventing","Fragments":["code"]},{"Key":"preventing code","Fragments":["outside"]},{"Key":"code outside","Fragments":["the"]},{"Key":"to manipulate","Fragments":["the"]},{"Key":"roster by","Fragments":["giving"]},{"Key":"by giving","Fragments":["the"]},{"Key":"public Roster","Fragments":["a"]},{"Key":"Roster a","Fragments":["getter"]},{"Key":"a getter","Fragments":["only.","and"]},{"Key":"But external","Fragments":["code"]},{"Key":"external code","Fragments":["can"]},{"Key":" school.Roster[1]","Fragments":["="]},{"Key":"school.Roster[1] =","Fragments":["new"]},{"Key":"new List\u003cstring\u003e()","Fragments":["{\"foo\",\"bar\"","{};","in"]},{"Key":"List\u003cstring\u003e() {\"foo\",\"bar\"","Fragments":["};"]},{"Key":"What can","Fragments":["I"]},{"Key":" @ebba","Fragments":["No,"]},{"Key":"@ebba No,","Fragments":["the"]},{"Key":"No, the","Fragments":["constructor"]},{"Key":"called only","Fragments":["once."]},{"Key":"only once.","Fragments":["You"]},{"Key":"once. You","Fragments":["do"]},{"Key":"the Clear()","Fragments":["calls"]},{"Key":"Clear() calls","Fragments":["in"]},{"Key":"suggest doing","Fragments":["either:"]},{"Key":"(int multiple","Fragments":["in","in"]},{"Key":"multiple in","Fragments":["_multiples)","_multiples)"]},{"Key":"if (i","Fragments":["%","%","\u003e"]},{"Key":"(i %","Fragments":["multiple","multiple"]},{"Key":"% multiple","Fragments":["==","=="]},{"Key":"multiple ==","Fragments":["0)","0)"]},{"Key":" isMultiple","Fragments":["="]},{"Key":"isMultiple =","Fragments":["true;"]},{"Key":" break;","Fragments":["//","//"]},{"Key":"break; //","Fragments":["added","added"]},{"Key":"// added","Fragments":["to","to"]},{"Key":"stop checking","Fragments":["multiples","multiples"]},{"Key":" sum","Fragments":["+=","+=","+="]},{"Key":"sum +=","Fragments":["i;","i;","i;"]},{"Key":"i; //","Fragments":["let's"]},{"Key":"// let's","Fragments":["just"]},{"Key":"let's just","Fragments":["add"]},{"Key":"just add","Fragments":["them","two","it","minutesPerDay"]},{"Key":"add them","Fragments":["up","to"]},{"Key":"them up","Fragments":["here","top."]},{"Key":"a list-variable","Fragments":["to"]},{"Key":"list-variable to","Fragments":["store"]},{"Key":"the chosen","Fragments":["numbers,"]},{"Key":"chosen numbers,","Fragments":["then"]},{"Key":"numbers, then","Fragments":["looped"]},{"Key":"then looped","Fragments":["through"]},{"Key":"of them.","Fragments":["Within","They're","Specifically,"]},{"Key":"them. Within","Fragments":["the"]},{"Key":"Within the","Fragments":["loop,"]},{"Key":"the loop,","Fragments":["another","but"]},{"Key":"loop, another","Fragments":["loop"]},{"Key":"another loop","Fragments":["checked"]},{"Key":"loop checked","Fragments":["if"]},{"Key":"the remainder","Fragments":["(mod)"]},{"Key":"remainder (mod)","Fragments":["was"]},{"Key":"(mod) was","Fragments":["zero"]},{"Key":"was zero","Fragments":["for","and"]},{"Key":"zero for","Fragments":["each"]},{"Key":"each incremental","Fragments":["number"]},{"Key":"incremental number","Fragments":["against"]},{"Key":"number against","Fragments":["the"]},{"Key":"current chosen","Fragments":["number."]},{"Key":"chosen number.","Fragments":["If"]},{"Key":"number. If","Fragments":["the"]},{"Key":"mod was","Fragments":["zero"]},{"Key":"current number","Fragments":["had","is"]},{"Key":"number had","Fragments":["not"]},{"Key":"the sum-list,","Fragments":["add"]},{"Key":"sum-list, add","Fragments":["it."]},{"Key":"add it.","Fragments":["Once"]},{"Key":"it. Once","Fragments":["the"]},{"Key":"Once the","Fragments":["loops"]},{"Key":"the loops","Fragments":["finished,","you"]},{"Key":"loops finished,","Fragments":["use"]},{"Key":"finished, use","Fragments":["the"]},{"Key":"the Sum()","Fragments":["method"]},{"Key":"Sum() method","Fragments":["on"]},{"Key":"total of","Fragments":["all"]},{"Key":"The brackets","Fragments":["provide"]},{"Key":"brackets provide","Fragments":["no"]},{"Key":"provide no","Fragments":["clarification"]},{"Key":"no clarification","Fragments":["that"]},{"Key":"clarification that","Fragments":["I"]},{"Key":"a snippet","Fragments":["that"]},{"Key":"snippet that","Fragments":["I"]},{"Key":"see, but","Fragments":["I"]},{"Key":"for larger","Fragments":["blocks","numbers."]},{"Key":"larger blocks","Fragments":["of"]},{"Key":"blocks of","Fragments":["code"]},{"Key":"code brackets","Fragments":["brackets"]},{"Key":"brackets brackets","Fragments":["are"]},{"Key":"brackets are","Fragments":["helpful,"]},{"Key":"are helpful,","Fragments":["@boyd.","but"]},{"Key":"advice on","Fragments":["comments,"]},{"Key":"on comments,","Fragments":["@boyd!"]},{"Key":"you switch","Fragments":["the"]},{"Key":"switch the","Fragments":["order","key"]},{"Key":"you shouldn't","Fragments":["need","need","depend","name"]},{"Key":"about numbers","Fragments":["being"]},{"Key":"numbers being","Fragments":["added"]},{"Key":"added more","Fragments":["than"]},{"Key":"the moment,","Fragments":["say","you","you"]},{"Key":"moment, say","Fragments":["we"]},{"Key":"say we","Fragments":["are"]},{"Key":"using 2,3","Fragments":["from"]},{"Key":"2,3 from","Fragments":["1"]},{"Key":" matches","Fragments":["2","4","6","3","6"]},{"Key":"matches 2","Fragments":["-"]},{"Key":"2 -","Fragments":["add","match"]},{"Key":"matches 4","Fragments":["-"]},{"Key":"4 -","Fragments":["add","match"]},{"Key":"matches 6","Fragments":["-","-"]},{"Key":"6 -","Fragments":["add","already","match"]},{"Key":"matches 3","Fragments":["-"]},{"Key":"3 -","Fragments":["add","check"]},{"Key":"- already","Fragments":["there,"]},{"Key":"already there,","Fragments":["don't"]},{"Key":"there, don't","Fragments":["add"]},{"Key":" swap","Fragments":["the"]},{"Key":"swap the","Fragments":["loops"]},{"Key":"for 1","Fragments":["to","and"]},{"Key":"1 -","Fragments":["no","((Distance"]},{"Key":"- no","Fragments":["match","need","match","match","problem."]},{"Key":"- match","Fragments":["2","2","2"]},{"Key":"match 2","Fragments":["(add),","(add),","(add),"]},{"Key":"2 (add),","Fragments":["break","break","break"]},{"Key":"(add), break","Fragments":["-"]},{"Key":"break -","Fragments":["no"]},{"Key":"check any","Fragments":["others"]},{"Key":"check 2,","Fragments":["match"]},{"Key":"2, match","Fragments":["3"]},{"Key":"match 3","Fragments":["(add)"]},{"Key":"5 -","Fragments":["no"]},{"Key":"7 -","Fragments":["no"]},{"Key":"The constructors","Fragments":["should"]},{"Key":"constructors should","Fragments":["be"]},{"Key":"SumOfMultiples(IEnumerable\u003cint\u003e numbers)","Fragments":["{"]},{"Key":" numbersList","Fragments":["="]},{"Key":"numbersList =","Fragments":["numbers.ToList();"]},{"Key":"parameters for","Fragments":["the"]},{"Key":"the ctor","Fragments":["should","and","your"]},{"Key":"ctor should","Fragments":["be"]},{"Key":"general a","Fragments":["possible"]},{"Key":"a possible","Fragments":["-","hidden","implementation."]},{"Key":"possible -","Fragments":["IEnumerable\u0026lt;int\u0026gt;"]},{"Key":"- IEnumerable\u0026lt;int\u0026gt;","Fragments":["rather"]},{"Key":"IEnumerable\u0026lt;int\u0026gt; rather","Fragments":["than"]},{"Key":"than List\u0026lt;int\u0026gt;","Fragments":["so"]},{"Key":"List\u0026lt;int\u0026gt; so","Fragments":["that"]},{"Key":"that represents","Fragments":["a"]},{"Key":"represents a","Fragments":["sequence"]},{"Key":"sequence of","Fragments":["ints","your"]},{"Key":"of ints","Fragments":["(say","and","and","and","and","and"]},{"Key":"ints (say","Fragments":["an"]},{"Key":"(say an","Fragments":["int[])"]},{"Key":"an int[])","Fragments":["can"]},{"Key":"int[]) can","Fragments":["be"]},{"Key":"in not","Fragments":["just"]},{"Key":"added OrderBy","Fragments":["to"]},{"Key":"OrderBy to","Fragments":["the"]},{"Key":" Did","Fragments":["a","you","you","you","you","you","not"]},{"Key":"Did a","Fragments":["quick"]},{"Key":"a quick","Fragments":["perf","check"]},{"Key":"quick perf","Fragments":["test"]},{"Key":"perf test","Fragments":["on"]},{"Key":"on SortedSet\u003cstring\u003e","Fragments":["vs."]},{"Key":"SortedSet\u003cstring\u003e vs.","Fragments":["previous"]},{"Key":"vs. previous","Fragments":["List\u003cstring\u003e"]},{"Key":"previous List\u003cstring\u003e","Fragments":["+"]},{"Key":"List\u003cstring\u003e +","Fragments":[".Sort()."]},{"Key":"+ .Sort().","Fragments":["List"]},{"Key":".Sort(). List","Fragments":["is"]},{"Key":"List is","Fragments":["MUCH"]},{"Key":"is MUCH","Fragments":["slower."]},{"Key":"MUCH slower.","Fragments":["3ms"]},{"Key":"slower. 3ms","Fragments":["vs"]},{"Key":"3ms vs","Fragments":["~700ms"]},{"Key":"vs ~700ms","Fragments":["for"]},{"Key":"~700ms for","Fragments":["1000"]},{"Key":"for 1000","Fragments":["Add()."]},{"Key":"think \u003cb\u003estring.IsNullOrWhitespace()\u003c/b\u003e","Fragments":["should"]},{"Key":"\u003cb\u003estring.IsNullOrWhitespace()\u003c/b\u003e should","Fragments":["accomplish"]},{"Key":"should accomplish","Fragments":["the"]},{"Key":"the \u003cb\u003estring.IsNullOrEmpty()\u003c/b\u003e","Fragments":["call"]},{"Key":"\u003cb\u003estring.IsNullOrEmpty()\u003c/b\u003e call","Fragments":["in"]},{"Key":"in \u003cb\u003eRemoveNonAlphabetCharacters\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003eRemoveNonAlphabetCharacters\u003c/b\u003e is","Fragments":["redundant,"]},{"Key":"is redundant,","Fragments":["the"]},{"Key":"redundant, the","Fragments":["check"]},{"Key":"for isSilence","Fragments":["will"]},{"Key":"isSilence will","Fragments":["catch"]},{"Key":"will catch","Fragments":["it."]},{"Key":" \u003cb\u003eLinq\u003c/b\u003e","Fragments":["is"]},{"Key":"your friend","Fragments":["here."]},{"Key":"friend here.","Fragments":["The"]},{"Key":"The input","Fragments":["string"]},{"Key":"considered as","Fragments":["an"]},{"Key":"var alphabetCharactersOnly","Fragments":["="]},{"Key":"alphabetCharactersOnly =","Fragments":["input.Where(char.IsLetter).ToList();"]},{"Key":"var isShouting","Fragments":["="]},{"Key":"isShouting =","Fragments":["alphabetCharactersOnly.Any()"]},{"Key":"= alphabetCharactersOnly.Any()","Fragments":["\u0026\u0026"]},{"Key":"alphabetCharactersOnly.Any() \u0026\u0026","Fragments":["alphabetCharactersOnly.All(char.IsUpper);"]},{"Key":" as","Fragments":["I"]},{"Key":"am writing","Fragments":["I","this"]},{"Key":"writing I","Fragments":["think"]},{"Key":"replace \u003cb\u003eAll(char.IsUpper)\u003c/b\u003e","Fragments":["with"]},{"Key":"\u003cb\u003eAll(char.IsUpper)\u003c/b\u003e with","Fragments":["\u003cb\u003e!Any(char.IsLower)\u003c/b\u003e"]},{"Key":"with \u003cb\u003e!Any(char.IsLower)\u003c/b\u003e","Fragments":["but"]},{"Key":"\u003cb\u003e!Any(char.IsLower)\u003c/b\u003e but","Fragments":["I"]},{"Key":"a compiler","Fragments":["here","error"]},{"Key":"compiler here","Fragments":["to"]},{"Key":" Better,","Fragments":["but"]},{"Key":"Better, but","Fragments":["Grade"]},{"Key":"Grade still","Fragments":["creates"]},{"Key":"still creates","Fragments":["a"]},{"Key":"creates a","Fragments":["new"]},{"Key":"List each","Fragments":["time"]},{"Key":"call Grade(n)","Fragments":["when"]},{"Key":"Grade(n) when","Fragments":["no"]},{"Key":"when no","Fragments":["students","students"]},{"Key":"no students","Fragments":["have","have"]},{"Key":"students have","Fragments":["been","been"]},{"Key":"grade n","Fragments":["because"]},{"Key":"n because","Fragments":["you"]},{"Key":"didn't save","Fragments":["your"]},{"Key":"save your","Fragments":["newly"]},{"Key":"created List","Fragments":["anywhere."]},{"Key":"dictionary of","Fragments":["planets","chars"]},{"Key":"of planets","Fragments":["and"]},{"Key":"planets and","Fragments":["the"]},{"Key":"the enum.","Fragments":["I"]},{"Key":"adds some","Fragments":["flexibility"]},{"Key":"some flexibility","Fragments":["and"]},{"Key":"flexibility and","Fragments":["clarity"]},{"Key":"over my","Fragments":["straight","code"]},{"Key":"my straight","Fragments":["calculation"]},{"Key":"straight calculation","Fragments":["approach."]},{"Key":"time you're","Fragments":["putting"]},{"Key":"you're putting","Fragments":["into"]},{"Key":"putting into","Fragments":["this."]},{"Key":"into this.","Fragments":["Your"]},{"Key":"this. Your","Fragments":["feedback"]},{"Key":"Your feedback","Fragments":["is"]},{"Key":"feedback is","Fragments":["really"]},{"Key":"Why do","Fragments":["you","you","you","you","you","you","you","you"]},{"Key":"for isNullOrWhiteSpace?","Fragments":["If"]},{"Key":"isNullOrWhiteSpace? If","Fragments":["you"]},{"Key":"just replace","Fragments":["it"]},{"Key":"replace it","Fragments":["with"]},{"Key":"for word","Fragments":["==","equality","so"]},{"Key":"word ==","Fragments":["null","null"]},{"Key":"null the","Fragments":["code"]},{"Key":"below will","Fragments":["automatically"]},{"Key":"automatically handle","Fragments":["any"]},{"Key":"handle any","Fragments":["whitespace"]},{"Key":"any whitespace","Fragments":["characters."]},{"Key":"criticism I","Fragments":["have"]},{"Key":"you save","Fragments":["the"]},{"Key":"in Score().","Fragments":["I"]},{"Key":"Score(). I","Fragments":["suggest"]},{"Key":"I suggest","Fragments":["you","a","you","writing"]},{"Key":"suggest you","Fragments":["do","change","change","make"]},{"Key":"and store","Fragments":["the","just","that.","that"]},{"Key":"score instead","Fragments":["of"]},{"Key":"After much","Fragments":["deliberation"]},{"Key":"much deliberation","Fragments":["and"]},{"Key":"deliberation and","Fragments":["head"]},{"Key":"and head","Fragments":["scratching"]},{"Key":"head scratching","Fragments":["this"]},{"Key":"scratching this","Fragments":["is"]},{"Key":"what I've","Fragments":["come"]},{"Key":"with. Hope","Fragments":["you"]},{"Key":"Hope you","Fragments":["likey."]},{"Key":"suggestion from","Fragments":["@angie."]},{"Key":"from @angie.","Fragments":["This"]},{"Key":"@angie. This","Fragments":["removed"]},{"Key":"This removed","Fragments":["the"]},{"Key":"didn't figure","Fragments":["out"]},{"Key":"that arrays","Fragments":["had"]},{"Key":"arrays had","Fragments":["a"]},{"Key":"in sort","Fragments":["in"]},{"Key":"sort in","Fragments":["C#"]},{"Key":"C# until","Fragments":["the"]},{"Key":"end, when","Fragments":["I"]},{"Key":"return by","Fragments":["alphabetical"]},{"Key":"by alphabetical","Fragments":["order."]},{"Key":"alphabetical order.","Fragments":["Then"]},{"Key":"order. Then","Fragments":["I"]},{"Key":"the places","Fragments":["where"]},{"Key":"places where","Fragments":["I'd","you"]},{"Key":"where I'd","Fragments":["called"]},{"Key":"I'd called","Fragments":["my"]},{"Key":"called my","Fragments":["sort"]},{"Key":"my sort","Fragments":["algorithm."]},{"Key":"Nice. I","Fragments":["might"]},{"Key":"might change","Fragments":["the"]},{"Key":"the \"rtn\"","Fragments":["name"]},{"Key":"\"rtn\" name","Fragments":["to"]},{"Key":"more specific.","Fragments":["Good"]},{"Key":"specific. Good","Fragments":["job!"]},{"Key":" @sedrick","Fragments":["is"]},{"Key":"@sedrick is","Fragments":["correct."]},{"Key":"is correct.","Fragments":["The","I","If"]},{"Key":"correct. The","Fragments":["Date"]},{"Key":"The Date","Fragments":["property"]},{"Key":"Date property","Fragments":["of"]},{"Key":"a DateTime","Fragments":["object","object","that","instead"]},{"Key":"DateTime object","Fragments":["returns","that","for"]},{"Key":"object returns","Fragments":["a"]},{"Key":"object that","Fragments":["matches","doesn't"]},{"Key":"that matches","Fragments":["the"]},{"Key":"original but","Fragments":["without"]},{"Key":"best answer","Fragments":["to"]},{"Key":"answer to","Fragments":["how","use","true"]},{"Key":"prevent setting","Fragments":["the"]},{"Key":"setting the","Fragments":["individual","Schedule.Last","answer"]},{"Key":"individual elements","Fragments":["of"]},{"Key":"elements of","Fragments":["Roster.","the"]},{"Key":"of Roster.","Fragments":["One"]},{"Key":"Roster. One","Fragments":["thing"]},{"Key":"might work","Fragments":["would"]},{"Key":"work would","Fragments":["be","never"]},{"Key":"own Dictionary","Fragments":["class"]},{"Key":"Dictionary class","Fragments":["that","guarantees"]},{"Key":"a subclass","Fragments":["of"]},{"Key":"subclass of","Fragments":["Dictionary"]},{"Key":"of Dictionary","Fragments":["and"]},{"Key":"Dictionary and","Fragments":["have","Calc"]},{"Key":"no public","Fragments":["setter"]},{"Key":"setter method.","Fragments":["I"]},{"Key":"best solution,","Fragments":["though."]},{"Key":"The speed","Fragments":["advantage"]},{"Key":"speed advantage","Fragments":["of"]},{"Key":"a SortedSet","Fragments":["makes","for"]},{"Key":"SortedSet makes","Fragments":["sense."]},{"Key":"sense. Each","Fragments":["time"]},{"Key":"Each time","Fragments":["you"]},{"Key":"call Sort","Fragments":["on"]},{"Key":"Sort on","Fragments":["a"]},{"Key":"a List,","Fragments":["it","but"]},{"Key":"List, it","Fragments":["has"]},{"Key":"assume nothing","Fragments":["is"]},{"Key":"nothing is","Fragments":["already"]},{"Key":"already in","Fragments":["order","the","the","the"]},{"Key":"order whereas","Fragments":["inserting"]},{"Key":"whereas inserting","Fragments":["into"]},{"Key":"inserting into","Fragments":["a"]},{"Key":"sorted set","Fragments":["works"]},{"Key":"set works","Fragments":["on"]},{"Key":"the set","Fragments":["is"]},{"Key":"set is","Fragments":["already","much"]},{"Key":" Assuming","Fragments":["you"]},{"Key":"a SortedSet,","Fragments":["The"]},{"Key":"SortedSet, The","Fragments":["Add"]},{"Key":"The Add","Fragments":["becomes"]},{"Key":"Add becomes","Fragments":["almost"]},{"Key":"becomes almost","Fragments":["trivial:"]},{"Key":"void Add(string","Fragments":["name,"]},{"Key":"Add(string name,","Fragments":["int"]},{"Key":"name, int","Fragments":["grade)"]},{"Key":"if (name","Fragments":["=="]},{"Key":"(name ==","Fragments":["null)"]},{"Key":"== null)","Fragments":["throw"]},{"Key":"null) throw","Fragments":["new"]},{"Key":"see one","Fragments":["possible"]},{"Key":"possible improvement","Fragments":["on"]},{"Key":"current implementation","Fragments":["of","numerics","would"]},{"Key":"of Grade.","Fragments":["Right"]},{"Key":"Grade. Right","Fragments":["now,"]},{"Key":"Right now,","Fragments":["for","if","if"]},{"Key":"now, for","Fragments":["grades"]},{"Key":"for grades","Fragments":["that"]},{"Key":"that already","Fragments":["exist,"]},{"Key":"already exist,","Fragments":["you","it"]},{"Key":"exist, you","Fragments":["have"]},{"Key":"it exists","Fragments":["and"]},{"Key":"it which","Fragments":["is"]},{"Key":"is two","Fragments":["separate"]},{"Key":"separate lookups","Fragments":["in"]},{"Key":"lookups in","Fragments":["the"]},{"Key":"Dictionary. If","Fragments":["the"]},{"Key":"grade doesn't","Fragments":["exist"]},{"Key":"exist you","Fragments":["have"]},{"Key":"it exists,","Fragments":["add"]},{"Key":"exists, add","Fragments":["it,"]},{"Key":"add it,","Fragments":["and"]},{"Key":"it -","Fragments":["three","pass","after"]},{"Key":"- three","Fragments":["separate"]},{"Key":"three separate","Fragments":["lookups/accesses"]},{"Key":"separate lookups/accesses","Fragments":["of"]},{"Key":"lookups/accesses of","Fragments":["the"]},{"Key":"following would","Fragments":["be"]},{"Key":"public List\u003cstring\u003e","Fragments":["Grade(int","Grade(int","Grade(int"]},{"Key":"List\u003cstring\u003e Grade(int","Fragments":["grade)","grade)","grade)"]},{"Key":" List\u003cstring\u003e","Fragments":["result;","studentsInGrade;"]},{"Key":" catch","Fragments":["(KeyNotFoundException)","(KeyNotFoundException)","(KeyNotFoundException)"]},{"Key":" roster[grade]","Fragments":["="]},{"Key":"roster[grade] =","Fragments":["result;"]},{"Key":"where entries","Fragments":["already"]},{"Key":"entries already","Fragments":["exist"]},{"Key":"already exist","Fragments":["for","on"]},{"Key":"grade, this","Fragments":["reduces"]},{"Key":"this reduces","Fragments":["the"]},{"Key":"reduces the","Fragments":["Dictionary","lookups","amount"]},{"Key":"Dictionary lookups","Fragments":["from"]},{"Key":"lookups from","Fragments":["2","3"]},{"Key":"from 2","Fragments":["to","to","loops"]},{"Key":"2 to","Fragments":["1.","it","it","sqrt(max)."]},{"Key":"to 1.","Fragments":["For"]},{"Key":"the entry","Fragments":["does"]},{"Key":"entry does","Fragments":["not"]},{"Key":"it reduces","Fragments":["the","the"]},{"Key":"the lookups","Fragments":["from"]},{"Key":"from 3","Fragments":["to","loops"]},{"Key":"3 to","Fragments":["2.","2"]},{"Key":"to 2.","Fragments":["You"]},{"Key":"2. You","Fragments":["can"]},{"Key":"adds readability","Fragments":["and"]},{"Key":"Something looks","Fragments":["wrong"]},{"Key":"looks wrong","Fragments":["with"]},{"Key":"expression. It","Fragments":["looks","was"]},{"Key":"says one","Fragments":["or"]},{"Key":"or more","Fragments":["word","efficient?","'"]},{"Key":"more word","Fragments":["characters"]},{"Key":"word characters","Fragments":["(a-z,"]},{"Key":"characters (a-z,","Fragments":["A-Z,"]},{"Key":"(a-z, A-Z,","Fragments":["0-9,"]},{"Key":"A-Z, 0-9,","Fragments":["or"]},{"Key":"0-9, or","Fragments":["_)"]},{"Key":"or _)","Fragments":["followed"]},{"Key":"_) followed","Fragments":["by"]},{"Key":"a apostrophe","Fragments":["or"]},{"Key":"apostrophe or","Fragments":["dash"]},{"Key":"or dash","Fragments":["followed"]},{"Key":"dash followed","Fragments":["by"]},{"Key":"another word","Fragments":["character,"]},{"Key":"word character,","Fragments":["but"]},{"Key":"character, but","Fragments":["I"]},{"Key":"sufficient. For","Fragments":["instance,"]},{"Key":"instance, it","Fragments":["wouldn't"]},{"Key":"wouldn't accept","Fragments":["\"fo'c'sle\""]},{"Key":"accept \"fo'c'sle\"","Fragments":["or"]},{"Key":"\"fo'c'sle\" or","Fragments":["\"man-o'-war\""]},{"Key":"or \"man-o'-war\"","Fragments":["as"]},{"Key":"\"man-o'-war\" as","Fragments":["valid"]},{"Key":"as valid","Fragments":["words"]},{"Key":"words (though","Fragments":["both"]},{"Key":"(though both","Fragments":["are"]},{"Key":"both are","Fragments":["in","equal,"]},{"Key":"dictionary -","Fragments":["http://www.merriam-webster.com/dictionary/forecastle?show=1\u0026t=1412294388"]},{"Key":"- http://www.merriam-webster.com/dictionary/forecastle?show=1\u0026t=1412294388","Fragments":["and"]},{"Key":"http://www.merriam-webster.com/dictionary/forecastle?show=1\u0026t=1412294388 and","Fragments":["http://www.merriam-webster.com/dictionary/man-o-war)."]},{"Key":"to trying","Fragments":["to"]},{"Key":"complicated I","Fragments":["would"]},{"Key":"just recommend","Fragments":["you"]},{"Key":"recommend you","Fragments":["allow"]},{"Key":"you allow","Fragments":["for"]},{"Key":"of hyphens","Fragments":["and"]},{"Key":"hyphens and","Fragments":["apostrophes"]},{"Key":"and apostrophes","Fragments":["as"]},{"Key":"apostrophes as","Fragments":["long","quotes"]},{"Key":"they follow","Fragments":["a"]},{"Key":"or digit","Fragments":["like"]},{"Key":"digit like","Fragments":["\"\\w[\\w'-]*\""]},{"Key":"like \"\\w[\\w'-]*\"","Fragments":["or"]},{"Key":"\"\\w[\\w'-]*\" or","Fragments":["something"]},{"Key":"algorithm looks","Fragments":["good.","like"]},{"Key":"the GroupBy","Fragments":["to","operator"]},{"Key":"GroupBy to","Fragments":["group"]},{"Key":"Would this","Fragments":["work","be"]},{"Key":" catch(KeyNotFoundException","Fragments":["ex)","ex)"]},{"Key":"return Roster[grade]","Fragments":["="]},{"Key":"Roster[grade] =","Fragments":["new","studentsInGrade;"]},{"Key":"Interesting solution.","Fragments":["Unfortunately"]},{"Key":"solution. Unfortunately","Fragments":["it"]},{"Key":"Unfortunately it","Fragments":["is"]},{"Key":"quite inefficient.","Fragments":["The"]},{"Key":"inefficient. The","Fragments":["name"]},{"Key":"name 'usedLettersFromOriginal'","Fragments":["seems"]},{"Key":"'usedLettersFromOriginal' seems","Fragments":["like"]},{"Key":"is exactly","Fragments":["the","equivalent,"]},{"Key":"opposite of","Fragments":["what","what"]},{"Key":"for which","Fragments":["appears","invalid","allergens"]},{"Key":"which appears","Fragments":["to"]},{"Key":"the unused","Fragments":["letters"]},{"Key":"unused letters","Fragments":["from"]},{"Key":"Secondly, you","Fragments":["keep"]},{"Key":"string. Removing","Fragments":["one"]},{"Key":"Removing one","Fragments":["character"]},{"Key":"one character","Fragments":["from","at","at","at"]},{"Key":"character from","Fragments":["a"]},{"Key":"very inefficient.","Fragments":["Use","(Hint"]},{"Key":"inefficient. Use","Fragments":["a"]},{"Key":"Use a","Fragments":["List","collection"]},{"Key":" Third,","Fragments":["when"]},{"Key":"Third, when","Fragments":["you"]},{"Key":"detect that","Fragments":["a"]},{"Key":"anagram (at","Fragments":["the"]},{"Key":"(at the","Fragments":["end","point"]},{"Key":"second 'foreach'","Fragments":["loop)"]},{"Key":"'foreach' loop)","Fragments":["you"]},{"Key":"loop) you","Fragments":["don't"]},{"Key":"don't stop.","Fragments":["Thus"]},{"Key":"stop. Thus","Fragments":["if"]},{"Key":"Thus if","Fragments":["you"]},{"Key":"for words","Fragments":["that"]},{"Key":"words that","Fragments":["are"]},{"Key":"are anagrams","Fragments":["of"]},{"Key":"anagrams of","Fragments":["'banana'"]},{"Key":"of 'banana'","Fragments":["and"]},{"Key":"'banana' and","Fragments":["you"]},{"Key":"word 'Supercalifragilisticexpialidocious',","Fragments":["you"]},{"Key":"'Supercalifragilisticexpialidocious', you","Fragments":["wouldn't"]},{"Key":"wouldn't stop","Fragments":["on"]},{"Key":"stop on","Fragments":["at"]},{"Key":"letter when","Fragments":["you"]},{"Key":"you saw","Fragments":["'S'"]},{"Key":"saw 'S'","Fragments":["-"]},{"Key":"'S' -","Fragments":["your"]},{"Key":"- your","Fragments":["algorithm"]},{"Key":"algorithm continues","Fragments":["to"]},{"Key":"continues to","Fragments":["process"]},{"Key":"process all","Fragments":["the"]},{"Key":"Finally, there","Fragments":["are"]},{"Key":"other faster","Fragments":["ways"]},{"Key":"faster ways","Fragments":["than"]},{"Key":"ways than","Fragments":["removing"]},{"Key":"than removing","Fragments":["one"]},{"Key":"removing one","Fragments":["character"]},{"Key":"character at","Fragments":["a","a","a"]},{"Key":"a time.","Fragments":["Can","It","Suppose"]},{"Key":"time. Can","Fragments":["you"]},{"Key":"take those","Fragments":["into"]},{"Key":"into consideration.","Fragments":["Thanks!"]},{"Key":"That looks","Fragments":["good.","good."]},{"Key":"good. A","Fragments":["couple"]},{"Key":"of minor","Fragments":["points.","comments.","nitpicks:","points:","nitpicks:","things"]},{"Key":"1) There","Fragments":["is"]},{"Key":"the phoneNumber","Fragments":["local"]},{"Key":"phoneNumber local","Fragments":["variable"]},{"Key":"the construction","Fragments":["-"]},{"Key":"construction -","Fragments":["just"]},{"Key":"call CheckNum","Fragments":["with"]},{"Key":"CheckNum with","Fragments":["'phoneNum'"]},{"Key":"with 'phoneNum'","Fragments":["directly."]},{"Key":"2) The","Fragments":["StartsWith()","modulus","number"]},{"Key":"The StartsWith()","Fragments":["function"]},{"Key":"StartsWith() function","Fragments":["is"]},{"Key":"is designed","Fragments":["for"]},{"Key":"designed for","Fragments":["more","bit"]},{"Key":"just single","Fragments":["character"]},{"Key":"single character","Fragments":["strings,","variable"]},{"Key":"character strings,","Fragments":["so"]},{"Key":"strings, so","Fragments":["I"]},{"Key":"suspect it","Fragments":["is","does"]},{"Key":"just saying","Fragments":["\"...","\"a"]},{"Key":"saying \"...","Fragments":["\u0026\u0026"]},{"Key":"\"... \u0026\u0026","Fragments":["number[0]"]},{"Key":"== '1')\".","Fragments":["The"]},{"Key":"'1')\". The","Fragments":["String"]},{"Key":"The String","Fragments":["class"]},{"Key":"class allows","Fragments":["you"]},{"Key":"directly access","Fragments":["characters"]},{"Key":"access characters","Fragments":["using"]},{"Key":"characters using","Fragments":["the"]},{"Key":"the []","Fragments":["operator."]},{"Key":"3) The","Fragments":["String.Substring","same"]},{"Key":"The String.Substring","Fragments":["function"]},{"Key":"String.Substring function","Fragments":["has"]},{"Key":"of overloads.","Fragments":["If"]},{"Key":"overloads. If","Fragments":["you"]},{"Key":"only specify","Fragments":["a"]},{"Key":"specify a","Fragments":["starting"]},{"Key":"a starting","Fragments":["character"]},{"Key":"starting character","Fragments":["it"]},{"Key":"character it","Fragments":["assumes","should","will","will","will","will"]},{"Key":"assumes you","Fragments":["want"]},{"Key":"replace number.Substring(1,10)","Fragments":["with"]},{"Key":"number.Substring(1,10) with","Fragments":["number.Substring(1)"]},{"Key":"with number.Substring(1)","Fragments":["in"]},{"Key":"number.Substring(1) in","Fragments":["CheckNum()"]},{"Key":"in CheckNum()","Fragments":["and"]},{"Key":"CheckNum() and","Fragments":["you"]},{"Key":"replace Number.Substring(6,4)","Fragments":["with"]},{"Key":"Number.Substring(6,4) with","Fragments":["Number.Substring(6)"]},{"Key":"with Number.Substring(6)","Fragments":["in"]},{"Key":"Number.Substring(6) in","Fragments":["ToString()."]},{"Key":"in ToString().","Fragments":["I"]},{"Key":"ToString(). I","Fragments":["don't"]},{"Key":"is any","Fragments":["difference","faster","clearer","clearer,","less","point"]},{"Key":"in efficiency,","Fragments":["though,"]},{"Key":"efficiency, though,","Fragments":["so"]},{"Key":"Otherwise great","Fragments":["job."]},{"Key":"have eight","Fragments":["functions"]},{"Key":"eight functions","Fragments":["that","that","you"]},{"Key":"call Math.Round","Fragments":["and"]},{"Key":"Math.Round and","Fragments":["eight"]},{"Key":"and eight","Fragments":["functions"]},{"Key":"do division","Fragments":["and/or","instead"]},{"Key":"division and/or","Fragments":["multiplication."]},{"Key":"and/or multiplication.","Fragments":["Can"]},{"Key":"multiplication. Can","Fragments":["you"]},{"Key":"The DateTime","Fragments":["class"]},{"Key":"DateTime class","Fragments":["has"]},{"Key":"class has","Fragments":["a"]},{"Key":"strip of","Fragments":["the"]},{"Key":"time portion.","Fragments":["You"]},{"Key":"portion. You","Fragments":["can"]},{"Key":"replace that","Fragments":["line"]},{"Key":"you it","Fragments":["think"]},{"Key":"it think","Fragments":["it"]},{"Key":"say \"Math.Pow(10,9)\"","Fragments":["instead"]},{"Key":"\"Math.Pow(10,9)\" instead","Fragments":["of"]},{"Key":"of \"1000000000\"","Fragments":["or"]},{"Key":"\"1000000000\" or","Fragments":["\"ONE_BILLION\""]},{"Key":"or \"ONE_BILLION\"","Fragments":["(and"]},{"Key":"\"ONE_BILLION\" (and","Fragments":["define"]},{"Key":"(and define","Fragments":["ONE_BILLION"]},{"Key":"define ONE_BILLION","Fragments":["somewhere"]},{"Key":"ONE_BILLION somewhere","Fragments":["else)?"]},{"Key":"be nearly","Fragments":["as"]},{"Key":"nearly as","Fragments":["trivial","efficient"]},{"Key":"as trivial","Fragments":["with"]},{"Key":"trivial with","Fragments":["a"]},{"Key":"have date","Fragments":["handling"]},{"Key":"date handling","Fragments":["built"]},{"Key":"handling built","Fragments":["into"]},{"Key":"Does \"Math.Pow(10,9)\"","Fragments":["make"]},{"Key":"\"Math.Pow(10,9)\" make","Fragments":["the"]},{"Key":"more readable?","Fragments":["Why"]},{"Key":"readable? Why","Fragments":["not"]},{"Key":"and where","Fragments":["you"]},{"Key":"can truly","Fragments":["optimize"]},{"Key":"truly optimize","Fragments":["the"]},{"Key":"better sequence","Fragments":["to"]},{"Key":"sequence to","Fragments":["leverage"]},{"Key":"to leverage","Fragments":["short-circuit","String.IsNullOrWhiteSpace"]},{"Key":"leverage short-circuit","Fragments":["evaluation"]},{"Key":"get really","Fragments":["picky"]},{"Key":"really picky","Fragments":["I","here"]},{"Key":"picky I","Fragments":["would"]},{"Key":"would wonder","Fragments":["if"]},{"Key":"division instead","Fragments":["of"]},{"Key":"small problem.","Fragments":["If"]},{"Key":"problem. If","Fragments":["I","calling","the","the","I"]},{"Key":" DNA","Fragments":["dna1","dna2"]},{"Key":"DNA dna1","Fragments":["="]},{"Key":"dna1 =","Fragments":["new"]},{"Key":"DNA dna2","Fragments":["="]},{"Key":"dna2 =","Fragments":["new"]},{"Key":"exception on","Fragments":["dna1.Count('X')","an","null"]},{"Key":"on dna1.Count('X')","Fragments":["but"]},{"Key":"dna1.Count('X') but","Fragments":["I"]},{"Key":"won't get","Fragments":["an"]},{"Key":"for dna2","Fragments":["(either"]},{"Key":"dna2 (either","Fragments":["in"]},{"Key":"(either in","Fragments":["the"]},{"Key":"DNA class","Fragments":["or"]},{"Key":"the Count()","Fragments":["function)."]},{"Key":"seemed way","Fragments":["too"]},{"Key":"way too","Fragments":["easy.","complicated."]},{"Key":"too easy.","Fragments":["What"]},{"Key":"easy. What","Fragments":["am"]},{"Key":"What am","Fragments":["I"]},{"Key":" @daija","Fragments":["I"]},{"Key":"@daija I","Fragments":["see"]},{"Key":"where you're","Fragments":["going"]},{"Key":"That's pretty","Fragments":["slick..."]},{"Key":"Sounds fine,","Fragments":["though"]},{"Key":"fine, though","Fragments":["personally","I"]},{"Key":"though personally","Fragments":["I"]},{"Key":"you missed","Fragments":["out"]},{"Key":"missed out","Fragments":["on"]},{"Key":"on half","Fragments":["the"]},{"Key":"the fun.","Fragments":[":)"]},{"Key":"(Note: This","Fragments":["is"]},{"Key":"can sure","Fragments":["understand"]},{"Key":"sure understand","Fragments":["the"]},{"Key":"are longer","Fragments":["(in"]},{"Key":"longer (in","Fragments":["terms"]},{"Key":"(in terms","Fragments":["of"]},{"Key":"of characters)","Fragments":["than"]},{"Key":"characters) than","Fragments":["what"]},{"Key":"than what","Fragments":["they","I","I","you've","is"]},{"Key":"are replacing,","Fragments":["which"]},{"Key":"replacing, which","Fragments":["seems"]},{"Key":"are then","Fragments":["losing"]},{"Key":"then losing","Fragments":["more"]},{"Key":"losing more","Fragments":["than"]},{"Key":"are gaining.","Fragments":["Long"]},{"Key":"gaining. Long","Fragments":["variable"]},{"Key":"Long variable","Fragments":["names"]},{"Key":"are descriptive","Fragments":["enough,"]},{"Key":"descriptive enough,","Fragments":["but"]},{"Key":"enough, but","Fragments":["in","early"]},{"Key":"probably get","Fragments":["away","rid","vim","rid"]},{"Key":"like isDiv4,","Fragments":["isDiv100,"]},{"Key":"isDiv4, isDiv100,","Fragments":["and"]},{"Key":"isDiv100, and","Fragments":["isDiv400"]},{"Key":"and isDiv400","Fragments":["or"]},{"Key":"isDiv400 or","Fragments":["isDivBy4,"]},{"Key":"or isDivBy4,","Fragments":["isDivBy100,"]},{"Key":"isDivBy4, isDivBy100,","Fragments":["isDivBy400."]},{"Key":"having more","Fragments":["than","spaces"]},{"Key":"exit for","Fragments":["a"]},{"Key":"a method,","Fragments":["the","but"]},{"Key":"method, the","Fragments":["only"]},{"Key":"only item","Fragments":["I"]},{"Key":"item I","Fragments":["would"]},{"Key":"more level","Fragments":["of"]},{"Key":"of optimization","Fragments":["on"]},{"Key":"optimization on","Fragments":["your"]},{"Key":"your logical","Fragments":["evaluation."]},{"Key":"your centenial","Fragments":["logic"]},{"Key":"centenial logic","Fragments":["and"]},{"Key":"the scenarios","Fragments":["that","that"]},{"Key":"scenarios that","Fragments":["could","would"]},{"Key":"from short","Fragments":["circuit","circuit"]},{"Key":" Yes.","Fragments":["Personally"]},{"Key":"Yes. Personally","Fragments":["I"]},{"Key":"from any","Fragments":["function"]},{"Key":"any function","Fragments":["so"]},{"Key":"have kept","Fragments":["the"]},{"Key":"variable -","Fragments":["like","minutes"]},{"Key":"- like","Fragments":["this:","this."]},{"Key":" studentsInGrade","Fragments":["="]},{"Key":"studentsInGrade =","Fragments":["Roster[grade];"]},{"Key":" studentsInGrade=","Fragments":["new"]},{"Key":"studentsInGrade= new","Fragments":["List\u003cstring\u003e();"]},{"Key":" Roster[grade]","Fragments":["="]},{"Key":"have Grade()","Fragments":["creating"]},{"Key":"Grade() creating","Fragments":["(and"]},{"Key":"creating (and","Fragments":["saving)"]},{"Key":"(and saving)","Fragments":["a"]},{"Key":"saving) a","Fragments":["new"]},{"Key":"new list,","Fragments":["lets"]},{"Key":"list, lets","Fragments":["see"]},{"Key":"lets see","Fragments":["what","what"]},{"Key":"with Add().","Fragments":["Is"]},{"Key":"Add(). Is","Fragments":["there"]},{"Key":"avoid some","Fragments":["of"]},{"Key":"in Add()?","Fragments":["In"]},{"Key":"Add()? In","Fragments":["particular,"]},{"Key":"particular, can","Fragments":["you"]},{"Key":" Great.","Fragments":["I"]},{"Key":"Great. I","Fragments":["only"]},{"Key":"have three","Fragments":["more","loops","loops"]},{"Key":"1) Add","Fragments":["is"]},{"Key":"compact now,","Fragments":["but"]},{"Key":"Dictionary lookup","Fragments":["twice"]},{"Key":"lookup twice","Fragments":["-"]},{"Key":"once for","Fragments":["the","the","each"]},{"Key":"the sort.","Fragments":["If"]},{"Key":"sort. If","Fragments":["you"]},{"Key":"for this.Grade(grade)","Fragments":["into"]},{"Key":"this.Grade(grade) into","Fragments":["a"]},{"Key":"variable then","Fragments":["it","test"]},{"Key":"the lookup","Fragments":["once.","myself.","dictionary."]},{"Key":"2) Similarly","Fragments":["in"]},{"Key":"Similarly in","Fragments":["the"]},{"Key":"in Grade(),","Fragments":["if","and","you"]},{"Key":"Grade(), if","Fragments":["you"]},{"Key":"assign the","Fragments":["new","orbital","new","value"]},{"Key":"variable first","Fragments":["and"]},{"Key":"then assign","Fragments":["that","answer.ToUpper()"]},{"Key":"to Roster[grade]","Fragments":["you"]},{"Key":"Roster[grade] you","Fragments":["will"]},{"Key":"will avoid","Fragments":["an"]},{"Key":"3) Finally,","Fragments":["you"]},{"Key":"Finally, you","Fragments":["made"]},{"Key":"to Grade()","Fragments":["to"]},{"Key":"put results","Fragments":["in"]},{"Key":"the try","Fragments":["and"]},{"Key":"catch blocks","Fragments":["into"]},{"Key":"My commented","Fragments":["out"]},{"Key":"out version","Fragments":["is"]},{"Key":"standard way","Fragments":["I"]},{"Key":"after implementing","Fragments":["it"]},{"Key":"implementing it","Fragments":["I"]},{"Key":"to thinking","Fragments":["that","that"]},{"Key":"knew the","Fragments":["sides"]},{"Key":"the sides","Fragments":["were","in","is","is","and","for"]},{"Key":"sides were","Fragments":["ordered"]},{"Key":"were ordered","Fragments":["smallest"]},{"Key":"ordered smallest","Fragments":["to"]},{"Key":"smallest to","Fragments":["largest"]},{"Key":"to largest","Fragments":["I"]},{"Key":"largest I","Fragments":["could"]},{"Key":"could cut","Fragments":["down"]},{"Key":"on some","Fragments":["comparisons."]},{"Key":"some comparisons.","Fragments":["That"]},{"Key":"comparisons. That","Fragments":["led"]},{"Key":"That led","Fragments":["to"]},{"Key":"led to","Fragments":["the"]},{"Key":"iteration. Yes","Fragments":["-"]},{"Key":"Yes -","Fragments":["I","as"]},{"Key":"not nearly","Fragments":["as"]},{"Key":"efficient -","Fragments":["but"]},{"Key":"was fun","Fragments":["to","to","to","doing"]},{"Key":"fun to","Fragments":["write.","write!","try","do","try"]},{"Key":"sides in","Fragments":["class"]},{"Key":"in class","Fragments":["variables"]},{"Key":"class variables","Fragments":["(side1,"]},{"Key":"variables (side1,","Fragments":["side2,"]},{"Key":"(side1, side2,","Fragments":["side3)?"]},{"Key":"side2, side3)?","Fragments":["You"]},{"Key":"side3)? You","Fragments":["could"]},{"Key":"of triangle","Fragments":["it","is"]},{"Key":"triangle it","Fragments":["is","will"]},{"Key":"store just","Fragments":["the"]},{"Key":"Once you","Fragments":["call"]},{"Key":"call UniqueSides(),","Fragments":["would"]},{"Key":"UniqueSides(), would","Fragments":["it"]},{"Key":"switch with","Fragments":["cases"]},{"Key":"with cases","Fragments":["rather"]},{"Key":"cases rather","Fragments":["than"]},{"Key":"than multiple","Fragments":["if"]},{"Key":"multiple if","Fragments":["statements?"]},{"Key":"if statements?","Fragments":["Or"]},{"Key":"statements? Or","Fragments":["would"]},{"Key":"be even","Fragments":["better","simpler"]},{"Key":"even better","Fragments":["to","(since"]},{"Key":"lookup of","Fragments":["some"]},{"Key":"job. A","Fragments":["couple"]},{"Key":"1) AnySideIsInvalid","Fragments":["is"]},{"Key":"AnySideIsInvalid is","Fragments":["not"]},{"Key":"not necessary.","Fragments":["Anything","The"]},{"Key":"necessary. Anything","Fragments":["that"]},{"Key":"true would","Fragments":["also"]},{"Key":"also cause","Fragments":["TriangleViolatesEqualityPrinciple"]},{"Key":"cause TriangleViolatesEqualityPrinciple","Fragments":["to"]},{"Key":"TriangleViolatesEqualityPrinciple to","Fragments":["return"]},{"Key":"in Kind,","Fragments":["so","you"]},{"Key":"Kind, so","Fragments":["if"]},{"Key":"if Kind","Fragments":["were"]},{"Key":"Kind were","Fragments":["called"]},{"Key":"were called","Fragments":["over"]},{"Key":"called over","Fragments":["and"]},{"Key":"over it","Fragments":["would"]},{"Key":"would redo","Fragments":["the"]},{"Key":"redo the","Fragments":["same","work"]},{"Key":"same work","Fragments":["each","twice"]},{"Key":"work each","Fragments":["time.","time."]},{"Key":"you move","Fragments":["the"]},{"Key":"work into","Fragments":["the"]},{"Key":"constructor then","Fragments":["you"]},{"Key":"save less","Fragments":["data"]},{"Key":"less data","Fragments":["and","and"]},{"Key":"data and","Fragments":["Kind","Kind"]},{"Key":"and Kind","Fragments":["doesn't","will"]},{"Key":"Kind doesn't","Fragments":["redo"]},{"Key":"doesn't redo","Fragments":["anything."]},{"Key":"check (to","Fragments":["validate"]},{"Key":"(to validate","Fragments":["that"]},{"Key":"sides is","Fragments":["greater","more"]},{"Key":"is greater","Fragments":["than","than","than","than"]},{"Key":"greater than","Fragments":["zero)","zero","the","some","32767","that."]},{"Key":"than zero)","Fragments":["is"]},{"Key":"zero) is","Fragments":["not"]},{"Key":"check will","Fragments":["automatically","pass"]},{"Key":"automatically find","Fragments":["all"]},{"Key":"those same","Fragments":["cases.","eight"]},{"Key":"Really picky","Fragments":["note:"]},{"Key":"picky note:","Fragments":["By"]},{"Key":"note: By","Fragments":["assuming"]},{"Key":"By assuming","Fragments":["Isosceles"]},{"Key":"assuming Isosceles","Fragments":["you"]},{"Key":"Isosceles you","Fragments":["do"]},{"Key":"one extra","Fragments":["assignment","line"]},{"Key":"extra assignment","Fragments":["that"]},{"Key":"do. If","Fragments":["instead"]},{"Key":"If instead","Fragments":["you"]},{"Key":"an 'else'","Fragments":["at"]},{"Key":"'else' at","Fragments":["the"]},{"Key":"end it","Fragments":["will"]},{"Key":"will by","Fragments":["_slightly_"]},{"Key":"by _slightly_","Fragments":["faster."]},{"Key":"_slightly_ faster.","Fragments":["I"]},{"Key":"faster. I","Fragments":["also"]},{"Key":"think \"if","Fragments":["(_side1"]},{"Key":"\"if (_side1","Fragments":["!=","=="]},{"Key":"(_side1 !=","Fragments":["_side2"]},{"Key":"!= _side2","Fragments":["\u0026\u0026"]},{"Key":"_side2 \u0026\u0026","Fragments":["...)\""]},{"Key":"\u0026\u0026 ...)\"","Fragments":["less"]},{"Key":"...)\" less","Fragments":["readable"]},{"Key":"than \"if","Fragments":["(_side1"]},{"Key":"(_side1 ==","Fragments":["_side2"]},{"Key":"== _side2","Fragments":["||"]},{"Key":"_side2 ||","Fragments":["...)\""]},{"Key":"|| ...)\"","Fragments":["(which"]},{"Key":"...)\" (which","Fragments":["would"]},{"Key":"(which would","Fragments":["mean"]},{"Key":"mean swapping","Fragments":["the"]},{"Key":"swapping the","Fragments":["Isosceles"]},{"Key":"the Isosceles","Fragments":["and"]},{"Key":"Isosceles and","Fragments":["Scalene"]},{"Key":"and Scalene","Fragments":["kinds)."]},{"Key":"function (CheckSides)","Fragments":["that"]},{"Key":"(CheckSides) that","Fragments":["generates"]},{"Key":"that generates","Fragments":["three"]},{"Key":"generates three","Fragments":["different"]},{"Key":"different arrangements","Fragments":["of"]},{"Key":"arrangements of","Fragments":["the"]},{"Key":"saying \"a","Fragments":["+"]},{"Key":"\"a +","Fragments":["b"]},{"Key":"+ b","Fragments":["\u003c="]},{"Key":"b \u003c=","Fragments":["c"]},{"Key":"\u003c= c","Fragments":["||"]},{"Key":"c ||","Fragments":["b"]},{"Key":"|| b","Fragments":["+"]},{"Key":"b +","Fragments":["c"]},{"Key":"+ c","Fragments":["\u003c\u003c"]},{"Key":"c \u003c\u003c","Fragments":["a"]},{"Key":"\u003c\u003c a","Fragments":["||"]},{"Key":"a ||","Fragments":["c"]},{"Key":"c +","Fragments":["a","'a');`"]},{"Key":"+ a","Fragments":["\u003c\u003c"]},{"Key":"a \u003c\u003c","Fragments":["b\"?"]},{"Key":"\u003c\u003c b\"?","Fragments":["It"]},{"Key":"b\"? It","Fragments":["seems"]},{"Key":"for only","Fragments":["three"]},{"Key":"only three","Fragments":["possibilities."]},{"Key":"can understand","Fragments":["using"]},{"Key":"using CheckSides","Fragments":["in"]},{"Key":"CheckSides in","Fragments":["the"]},{"Key":"constructor, where","Fragments":["you"]},{"Key":"need three","Fragments":["different"]},{"Key":"different checks,","Fragments":["but"]},{"Key":"checks, but","Fragments":["it"]},{"Key":"make any","Fragments":["sense","difference"]},{"Key":"in IsEquilateral.","Fragments":["Sure,"]},{"Key":"IsEquilateral. Sure,","Fragments":["if"]},{"Key":"Sure, if","Fragments":["it"]},{"Key":"an equilateral","Fragments":["triangle","triangle","triangle"]},{"Key":"equilateral triangle","Fragments":["then","it","would"]},{"Key":"triangle then","Fragments":["the"]},{"Key":"time through","Fragments":["the","the","the"]},{"Key":"loop (in","Fragments":["CheckSides)"]},{"Key":"(in CheckSides)","Fragments":["it"]},{"Key":"CheckSides) it","Fragments":["will"]},{"Key":"isn't an","Fragments":["equilateral"]},{"Key":"all three","Fragments":["times","criteria","paths","cases"]},{"Key":"times before","Fragments":["returning"]},{"Key":"returning false","Fragments":["when","in"]},{"Key":"you knew","Fragments":["that"]},{"Key":"knew that","Fragments":["after"]},{"Key":"that after","Fragments":["the","2","the"]},{"Key":"Finally, by","Fragments":["doing"]},{"Key":"Kind, you","Fragments":["have"]},{"Key":"to repeat","Fragments":["that","a","any","`Number"]},{"Key":"repeat that","Fragments":["work"]},{"Key":"work if","Fragments":["the","every","`year`","they"]},{"Key":"calls Kind","Fragments":["again."]},{"Key":"Kind again.","Fragments":["If"]},{"Key":"again. If","Fragments":["you","Roman"]},{"Key":"kind it","Fragments":["was"]},{"Key":"constructor, then","Fragments":["that"]},{"Key":"be repeated","Fragments":["(for"]},{"Key":"repeated (for","Fragments":["the"]},{"Key":"(for the","Fragments":["life","`Count`property)"]},{"Key":"the life","Fragments":["of"]},{"Key":"life of","Fragments":["this"]},{"Key":"this object","Fragments":["anyway).","and"]},{"Key":"Hello Darth-Walsh","Fragments":["and"]},{"Key":"Darth-Walsh and","Fragments":["Eterchi"]},{"Key":"have pondered","Fragments":["the"]},{"Key":"pondered the","Fragments":["idea"]},{"Key":"consolidating my","Fragments":["methods,"]},{"Key":"my methods,","Fragments":["and"]},{"Key":"that doing","Fragments":["so","it","it","it"]},{"Key":"cause me","Fragments":["to"]},{"Key":"introduce more","Fragments":["logic"]},{"Key":"more logic","Fragments":["into"]},{"Key":"the control","Fragments":["flow"]},{"Key":"flow section","Fragments":["of"]},{"Key":"code (at","Fragments":["the"]},{"Key":"I test","Fragments":["for","it"]},{"Key":"for Not","Fragments":["Divisible)."]},{"Key":"Not Divisible).","Fragments":["I"]},{"Key":"Divisible). I","Fragments":["could"]},{"Key":"use 2","Fragments":["methods"]},{"Key":"2 methods","Fragments":["instead","separate,","rather"]},{"Key":"1 here,","Fragments":["but"]},{"Key":"be violating","Fragments":["the"]},{"Key":"violating the","Fragments":["rule"]},{"Key":"rule of","Fragments":["three."]},{"Key":"though, that","Fragments":["rule","readability"]},{"Key":"that rule","Fragments":["isn't"]},{"Key":"rule isn't","Fragments":["violated,"]},{"Key":"isn't violated,","Fragments":["and"]},{"Key":"violated, and","Fragments":["a"]},{"Key":"a 2","Fragments":["method"]},{"Key":"2 method","Fragments":["solution"]},{"Key":"method solution","Fragments":["illustrates"]},{"Key":"solution illustrates","Fragments":["it"]},{"Key":"illustrates it","Fragments":["very"]},{"Key":"very well.","Fragments":["It","Your"]},{"Key":"well. It","Fragments":["took","sounds"]},{"Key":"took three","Fragments":["cases"]},{"Key":"three cases","Fragments":["of","then"]},{"Key":"cases of","Fragments":["duplication","an"]},{"Key":"of duplication","Fragments":["to","in"]},{"Key":"duplication to","Fragments":["discover"]},{"Key":"to discover","Fragments":["all","how"]},{"Key":"discover all","Fragments":["of"]},{"Key":"the axis","Fragments":["of"]},{"Key":"axis of","Fragments":["change"]},{"Key":"of change","Fragments":["here."]},{"Key":"change here.","Fragments":["Passing"]},{"Key":"here. Passing","Fragments":["in"]},{"Key":"Passing in","Fragments":["the"]},{"Key":"numbers themselves,","Fragments":["and"]},{"Key":"themselves, and","Fragments":["the"]},{"Key":"of Not","Fragments":["Divisible."]},{"Key":"1) The","Fragments":["checks","default"]},{"Key":"checks to","Fragments":["make"]},{"Key":"sure givenSideN","Fragments":["is"]},{"Key":"givenSideN is","Fragments":["greater"]},{"Key":"than zero","Fragments":["are"]},{"Key":"zero are","Fragments":["unnecessary","very"]},{"Key":"following checks","Fragments":["are","both"]},{"Key":"are sufficient","Fragments":["as"]},{"Key":"sufficient as","Fragments":["no"]},{"Key":"as no","Fragments":["options"]},{"Key":"no options","Fragments":["with"]},{"Key":"options with","Fragments":["0"]},{"Key":"with 0","Fragments":["or"]},{"Key":"negative values","Fragments":["can","for"]},{"Key":"values can","Fragments":["pass"]},{"Key":"can pass","Fragments":["them.","values"]},{"Key":"2) Why","Fragments":["do"]},{"Key":"'if' after","Fragments":["the"]},{"Key":"the 'else'","Fragments":["when","and"]},{"Key":"'else' when","Fragments":["you"]},{"Key":"return Scalene.","Fragments":["If"]},{"Key":"Scalene. If","Fragments":["it"]},{"Key":"isn't equilateral","Fragments":["and"]},{"Key":"equilateral and","Fragments":["it","the"]},{"Key":"isn't isosceles","Fragments":["it"]},{"Key":"isosceles it","Fragments":["_has_"]},{"Key":"it _has_","Fragments":["to"]},{"Key":"_has_ to","Fragments":["be"]},{"Key":"be scalene.","Fragments":["Those"]},{"Key":"scalene. Those","Fragments":["checks"]},{"Key":"Those checks","Fragments":["will"]},{"Key":"checks will","Fragments":["never"]},{"Key":"never fail,","Fragments":["so"]},{"Key":"fail, so","Fragments":["they"]},{"Key":"in Kind(),","Fragments":["so"]},{"Key":"Kind(), so","Fragments":["repeated"]},{"Key":"so repeated","Fragments":["calls"]},{"Key":"repeated calls","Fragments":["to"]},{"Key":"will redo","Fragments":["the"]},{"Key":"kind in","Fragments":["the"]},{"Key":"constructor you","Fragments":["can","could","can"]},{"Key":"can store","Fragments":["less","the","the"]},{"Key":"store less","Fragments":["data"]},{"Key":"Kind will","Fragments":["not"]},{"Key":"a KeyNotFoundException","Fragments":["on","is","in","in","on","if","in"]},{"Key":"KeyNotFoundException on","Fragments":["the","an"]},{"Key":"string \"test!\"","Fragments":["because"]},{"Key":"\"test!\" because","Fragments":["of"]},{"Key":"only other","Fragments":["criticism","option","thing","thing"]},{"Key":"other criticism","Fragments":["is"]},{"Key":"in Score","Fragments":["(meaning"]},{"Key":"Score (meaning","Fragments":["if"]},{"Key":"(meaning if","Fragments":["they"]},{"Key":"they caller","Fragments":["asks"]},{"Key":"caller asks","Fragments":["for"]},{"Key":"score multiple","Fragments":["times"]},{"Key":"times you","Fragments":["have","call"]},{"Key":"calculate it","Fragments":["multiple","each"]},{"Key":"it multiple","Fragments":["times).","lines."]},{"Key":"multiple times).","Fragments":["Instead"]},{"Key":"times). Instead","Fragments":["you"]},{"Key":"could calculate","Fragments":["the","the"]},{"Key":"score in","Fragments":["the"]},{"Key":"You've created","Fragments":["a"]},{"Key":"dictionary that","Fragments":["has"]},{"Key":"as its","Fragments":["key","only"]},{"Key":"its key","Fragments":["but"]},{"Key":"key but","Fragments":["you"]},{"Key":"never lookup","Fragments":["in"]},{"Key":"dictionary by","Fragments":["that"]},{"Key":"by that","Fragments":["key."]},{"Key":"that key.","Fragments":["That"]},{"Key":"key. That","Fragments":["has"]},{"Key":"That has","Fragments":["avoided"]},{"Key":"has avoided","Fragments":["one"]},{"Key":"avoided one","Fragments":["of"]},{"Key":"benefits of","Fragments":["a","TryGetValue."]},{"Key":"Dictionary -","Fragments":["it"]},{"Key":"List or","Fragments":["Array."]},{"Key":"or Array.","Fragments":["Could"]},{"Key":"Array. Could","Fragments":["you"]},{"Key":"you instead","Fragments":["create","don't"]},{"Key":"instead create","Fragments":["a"]},{"Key":"dictionary where","Fragments":["the"]},{"Key":"the key?","Fragments":["That"]},{"Key":"key? That","Fragments":["should"]},{"Key":"should simplify","Fragments":["the"]},{"Key":"calculation of","Fragments":["the"]},{"Key":"with @mike","Fragments":["though"]},{"Key":"@mike though","Fragments":["I"]},{"Key":"be \u003ccode\u003eWhere(ch","Fragments":["=\u003e"]},{"Key":"\u003ccode\u003eWhere(ch =\u003e","Fragments":["Char.IsLetter(ch))\u003c/code\u003e"]},{"Key":"=\u003e Char.IsLetter(ch))\u003c/code\u003e","Fragments":["instead"]},{"Key":"Char.IsLetter(ch))\u003c/code\u003e instead","Fragments":["of"]},{"Key":"I focused","Fragments":["on"]},{"Key":"on simplifying","Fragments":["the"]},{"Key":"simplifying the","Fragments":["IF"]},{"Key":"the IF","Fragments":["based","statement"]},{"Key":"IF based","Fragments":["on"]},{"Key":"my discrete","Fragments":["math"]},{"Key":"discrete math","Fragments":["class."]},{"Key":"math class.","Fragments":["I"]},{"Key":"suppose I'll","Fragments":["put"]},{"Key":"I'll put","Fragments":["comments"]},{"Key":"put comments","Fragments":["next"]},{"Key":"comments next","Fragments":["time."]},{"Key":"Simple problem.","Fragments":["Rough"]},{"Key":"problem. Rough","Fragments":["time"]},{"Key":"Rough time","Fragments":["installing"]},{"Key":"time installing","Fragments":["and"]},{"Key":"installing and","Fragments":["submitting"]},{"Key":"and submitting","Fragments":["everything."]},{"Key":" @broderick","Fragments":["I"]},{"Key":"@broderick I","Fragments":["don't"]},{"Key":"don't know...","Fragments":["I"]},{"Key":"know... I","Fragments":["got"]},{"Key":"the while","Fragments":["loop","loop"]},{"Key":"while loop","Fragments":["but","and","with","(with"]},{"Key":"it's any","Fragments":["cleaner.","more"]},{"Key":"any cleaner.","Fragments":["Shorter"]},{"Key":"cleaner. Shorter","Fragments":["sure,"]},{"Key":"Shorter sure,","Fragments":["but"]},{"Key":"I traded","Fragments":["verbosity"]},{"Key":"traded verbosity","Fragments":["\u0026"]},{"Key":"verbosity \u0026","Fragments":["simplicity"]},{"Key":"\u0026 simplicity","Fragments":["for"]},{"Key":"simplicity for","Fragments":["complexity"]},{"Key":"for complexity","Fragments":["\u0026"]},{"Key":"complexity \u0026","Fragments":["terseness."]},{"Key":"\u0026 terseness.","Fragments":["What"]},{"Key":"terseness. What","Fragments":["are"]},{"Key":"I did,","Fragments":["though","almost"]},{"Key":"did, though","Fragments":["I"]},{"Key":"document it","Fragments":["there."]},{"Key":"does depend","Fragments":["on"]},{"Key":"the DayOfWeek","Fragments":["enumeration","enumeration."]},{"Key":"DayOfWeek enumeration","Fragments":["having"]},{"Key":"enumeration having","Fragments":["the"]},{"Key":"having the","Fragments":["days","data","extra","2","static"]},{"Key":"the days","Fragments":["in"]},{"Key":"normally use","Fragments":["them"]},{"Key":"them (which","Fragments":["is"]},{"Key":"in .NET).","Fragments":["If"]},{"Key":".NET). If","Fragments":["that"]},{"Key":"weren't the","Fragments":["case"]},{"Key":"case we","Fragments":["could"]},{"Key":"create our","Fragments":["own"]},{"Key":"our own","Fragments":["enumeration"]},{"Key":"enumeration to","Fragments":["use."]},{"Key":"possibly less","Fragments":["readable."]},{"Key":"But documented","Fragments":["well"]},{"Key":"documented well","Fragments":["it"]},{"Key":"well it","Fragments":["should"]},{"Key":"be fine,","Fragments":["though"]},{"Key":"be offended","Fragments":["if"]},{"Key":"offended if","Fragments":["you"]},{"Key":"the loop.","Fragments":["However,","Why","It","and"]},{"Key":"loop. However,","Fragments":["if"]},{"Key":"was called","Fragments":["all","all","with"]},{"Key":"called all","Fragments":["the","the"]},{"Key":"time -","Fragments":["the","it","like"]},{"Key":"gain of","Fragments":["a"]},{"Key":"a direct","Fragments":["calculation"]},{"Key":"direct calculation","Fragments":["would"]},{"Key":"calculation would","Fragments":["be"]},{"Key":"an optimization","Fragments":["that","choice"]},{"Key":"optimization that","Fragments":["can"]},{"Key":"the sign","Fragments":["calculation"]},{"Key":"sign calculation","Fragments":["that"]},{"Key":"calculation that","Fragments":["you"]},{"Key":"doing. Right","Fragments":["now"]},{"Key":"Right now","Fragments":["you","you","you're","you're"]},{"Key":"calculating the","Fragments":["last","conversions","score"]},{"Key":"last day","Fragments":["of","of","of"]},{"Key":"month and","Fragments":["then","day","return"]},{"Key":"then working","Fragments":["backwards"]},{"Key":"working backwards","Fragments":["from"]},{"Key":"backwards from","Fragments":["there."]},{"Key":"there. What","Fragments":["if"]},{"Key":"to instead","Fragments":["calculate","use","go"]},{"Key":"instead calculate","Fragments":["the"]},{"Key":"last week","Fragments":["of","of"]},{"Key":"week of","Fragments":["the","the"]},{"Key":"month (i.e.","Fragments":["the"]},{"Key":"(i.e. the","Fragments":["last"]},{"Key":"month minus","Fragments":["six"]},{"Key":"minus six","Fragments":["days)"]},{"Key":"six days)","Fragments":["and"]},{"Key":"days) and","Fragments":["always"]},{"Key":"always go","Fragments":["forward"]},{"Key":"go forward","Fragments":["from"]},{"Key":"forward from","Fragments":["there."]},{"Key":"there. That","Fragments":["would"]},{"Key":"mean that","Fragments":["you","your","a","for","the"]},{"Key":"be going","Fragments":["backwards,"]},{"Key":"going backwards,","Fragments":["eliminating"]},{"Key":"backwards, eliminating","Fragments":["some"]},{"Key":"eliminating some","Fragments":["complexity"]},{"Key":"some complexity","Fragments":["from","(for"]},{"Key":"complexity from","Fragments":["your"]},{"Key":"used two","Fragments":["different"]},{"Key":"different methods","Fragments":["-"]},{"Key":"- one","Fragments":["more","method"]},{"Key":"more traditional","Fragments":["(commented"]},{"Key":"traditional (commented","Fragments":["out)"]},{"Key":"(commented out)","Fragments":["and"]},{"Key":"out) and","Fragments":["one"]},{"Key":"one using","Fragments":["Linq."]},{"Key":"using Linq.","Fragments":["Which","One"]},{"Key":"Linq. Which","Fragments":["do"]},{"Key":"Which do","Fragments":["you"]},{"Key":"noticed after","Fragments":["I"]},{"Key":"submitted was","Fragments":["that"]},{"Key":"that neither","Fragments":["one"]},{"Key":"neither one","Fragments":["was"]},{"Key":"one was","Fragments":["exiting","not","preferable","simply"]},{"Key":"was exiting","Fragments":["the"]},{"Key":"exiting the","Fragments":["loop"]},{"Key":"as early","Fragments":["as"]},{"Key":"early as","Fragments":["I"]},{"Key":"I could.","Fragments":["For","I"]},{"Key":"could. For","Fragments":["example"]},{"Key":"example to","Fragments":["handle","see"]},{"Key":"number 1000,","Fragments":["the"]},{"Key":"1000, the","Fragments":["first"]},{"Key":"would generate","Fragments":["\"M\"","an"]},{"Key":"generate \"M\"","Fragments":["and"]},{"Key":"\"M\" and","Fragments":["then"]},{"Key":"code continues","Fragments":["checking"]},{"Key":"continues checking","Fragments":["all"]},{"Key":"checking all","Fragments":["the","the"]},{"Key":"Dictionary instead","Fragments":["of"]},{"Key":"array. By","Fragments":["using"]},{"Key":"Dictionary you","Fragments":["had"]},{"Key":"order (using","Fragments":["OrderByDescending),","OrderByDescending)"]},{"Key":"(using OrderByDescending),","Fragments":["whereas"]},{"Key":"OrderByDescending), whereas","Fragments":["with"]},{"Key":"whereas with","Fragments":["an"]},{"Key":"array you","Fragments":["controlled","have"]},{"Key":"you controlled","Fragments":["the"]},{"Key":"controlled the","Fragments":["order"]},{"Key":"order by","Fragments":["the","is"]},{"Key":"would initialize","Fragments":["it."]},{"Key":"initialize it.","Fragments":["Granted"]},{"Key":"it. Granted","Fragments":["by"]},{"Key":"Granted by","Fragments":["using"]},{"Key":"create some","Fragments":["other"]},{"Key":"other object","Fragments":["to"]},{"Key":"hold two","Fragments":["values"]},{"Key":"values but","Fragments":["you"]},{"Key":"can us","Fragments":["a"]},{"Key":"us a","Fragments":["struct,","major"]},{"Key":"a struct,","Fragments":["a"]},{"Key":"struct, a","Fragments":["class,","tuple,"]},{"Key":"a class,","Fragments":["or"]},{"Key":"class, or","Fragments":["a","you"]},{"Key":"a Tuple","Fragments":["for","instead","if","preferable","rather","of","-","over"]},{"Key":"Tuple for","Fragments":["that."]},{"Key":"What about","Fragments":["checking","ToRoman(1000000)?","ToRoman(-1).","invalid","invalid","leaving","Zip()?","````List\u003cbool\u003e````"]},{"Key":"you peek","Fragments":["at"]},{"Key":"peek at","Fragments":["the"]},{"Key":"source for","Fragments":["```string.Join```,"]},{"Key":"for ```string.Join```,","Fragments":["it"]},{"Key":"```string.Join```, it","Fragments":["ultimately"]},{"Key":"it ultimately","Fragments":["uses"]},{"Key":"ultimately uses","Fragments":["a"]},{"Key":"a ```StringBuilder```","Fragments":["so"]},{"Key":"```StringBuilder``` so","Fragments":["I"]},{"Key":"feel confident","Fragments":["that"]},{"Key":"confident that","Fragments":["```string.Join```"]},{"Key":"that ```string.Join```","Fragments":["is"]},{"Key":"```string.Join``` is","Fragments":["OK"]},{"Key":"is OK","Fragments":["to"]},{"Key":"OK to","Fragments":["use","remove"]},{"Key":"as writing","Fragments":["out"]},{"Key":"strings vs.","Fragments":["building"]},{"Key":"vs. building","Fragments":["them..."]},{"Key":"building them...","Fragments":["yeah,"]},{"Key":"them... yeah,","Fragments":["I"]},{"Key":"totally traded","Fragments":["flexibility"]},{"Key":"traded flexibility","Fragments":["for"]},{"Key":"flexibility for","Fragments":["simplicity"]},{"Key":"for simplicity","Fragments":["here","and"]},{"Key":"simplicity here","Fragments":[":-P."]},{"Key":"here :-P.","Fragments":["That's"]},{"Key":":-P. That's","Fragments":["what's"]},{"Key":"That's what's","Fragments":["fascinating"]},{"Key":"what's fascinating","Fragments":["about"]},{"Key":"fascinating about","Fragments":["this"]},{"Key":"or building","Fragments":["the"]},{"Key":"verses are","Fragments":["both"]},{"Key":"both correct","Fragments":["but"]},{"Key":"the evidence","Fragments":["of"]},{"Key":"evidence of","Fragments":["the"]},{"Key":"the trade-offs","Fragments":["are"]},{"Key":"trade-offs are","Fragments":["really"]},{"Key":"What guarantee","Fragments":["do"]},{"Key":"guarantee do","Fragments":["have"]},{"Key":"Dictionary will","Fragments":["have"]},{"Key":"the keys","Fragments":["stored","of","being","is","and"]},{"Key":"keys stored","Fragments":["in"]},{"Key":"you created","Fragments":["them?"]},{"Key":"created them?","Fragments":["I"]},{"Key":"them? I","Fragments":["don't"]},{"Key":"class guarantees","Fragments":["any"]},{"Key":"guarantees any","Fragments":["order"]},{"Key":"if current","Fragments":["behavior"]},{"Key":"current behavior","Fragments":["is"]},{"Key":"behavior is","Fragments":["that","undefined,","made"]},{"Key":"it maintains","Fragments":["the"]},{"Key":"maintains the","Fragments":["order"]},{"Key":"you inserted","Fragments":["them,"]},{"Key":"inserted them,","Fragments":["that"]},{"Key":"them, that","Fragments":["may"]},{"Key":"be true.","Fragments":["That"]},{"Key":"true. That","Fragments":["could"]},{"Key":"could mean","Fragments":["that"]},{"Key":"could fail","Fragments":["on"]},{"Key":"fail on","Fragments":[".Net","a"]},{"Key":"on .Net","Fragments":["5.0"]},{"Key":".Net 5.0","Fragments":["or"]},{"Key":"5.0 or","Fragments":["something."]},{"Key":"if ToRoman(10000)","Fragments":["is"]},{"Key":"ToRoman(10000) is","Fragments":["called?"]},{"Key":"is called?","Fragments":["It"]},{"Key":"called? It","Fragments":["looks"]},{"Key":"would get","Fragments":["\"MMMMMMMMMM\".","rid","pretty","removed","rid","rid","a"]},{"Key":"get \"MMMMMMMMMM\".","Fragments":["What"]},{"Key":"\"MMMMMMMMMM\". What","Fragments":["about"]},{"Key":"about ToRoman(1000000)?","Fragments":["What"]},{"Key":"ToRoman(1000000)? What","Fragments":["about"]},{"Key":"with @peter,","Fragments":["though"]},{"Key":"@peter, though","Fragments":["I"]},{"Key":"List because","Fragments":["that"]},{"Key":"specify an","Fragments":["order"]},{"Key":"an order","Fragments":["(using","of"]},{"Key":"(using OrderByDescending)","Fragments":["-"]},{"Key":"OrderByDescending) -","Fragments":["it"]},{"Key":"order I","Fragments":["wanted."]},{"Key":"I wanted.","Fragments":["All"]},{"Key":"wanted. All","Fragments":["you"]},{"Key":"All you","Fragments":["really","have"]},{"Key":"of enumerable","Fragments":["class"]},{"Key":"enumerable class","Fragments":["that"]},{"Key":"variable 'currentValue'?","Fragments":["Couldn't"]},{"Key":"'currentValue'? Couldn't","Fragments":["you"]},{"Key":"Couldn't you","Fragments":["just","just"]},{"Key":"generally try","Fragments":["to"]},{"Key":"keep my","Fragments":["constructors"]},{"Key":"my constructors","Fragments":["clear"]},{"Key":"constructors clear","Fragments":["of"]},{"Key":"clear of","Fragments":["any"]},{"Key":"any kind","Fragments":["of"]},{"Key":"logic other","Fragments":["than"]},{"Key":"than initialization.","Fragments":["While"]},{"Key":"initialization. While","Fragments":["it"]},{"Key":"apply 100%","Fragments":["to"]},{"Key":"100% to","Fragments":["this"]},{"Key":"class, it's","Fragments":["generally"]},{"Key":"it's generally","Fragments":["a","accepted"]},{"Key":"follow this","Fragments":["practice"]},{"Key":"this practice","Fragments":["as"]},{"Key":"practice as","Fragments":["it"]},{"Key":"it limits","Fragments":["side-effects"]},{"Key":"limits side-effects","Fragments":["and"]},{"Key":"side-effects and","Fragments":["annoying"]},{"Key":"and annoying","Fragments":["exceptions"]},{"Key":"annoying exceptions","Fragments":["when"]},{"Key":"exceptions when","Fragments":["constructing"]},{"Key":"when constructing","Fragments":["objects."]},{"Key":"constructing objects.","Fragments":["To"]},{"Key":"objects. To","Fragments":["your"]},{"Key":"To your","Fragments":["point,"]},{"Key":"point, the","Fragments":["API"]},{"Key":"API should","Fragments":["probably"]},{"Key":"do static","Fragments":["methods"]},{"Key":"do away","Fragments":["with"]},{"Key":"can't say","Fragments":["using"]},{"Key":"say using","Fragments":["a"]},{"Key":"switch vs.","Fragments":["if"]},{"Key":"vs. if","Fragments":["blocks"]},{"Key":"blocks would","Fragments":["change"]},{"Key":"change readability","Fragments":["here"]},{"Key":"readability here","Fragments":["as"]},{"Key":"it's purely","Fragments":["up"]},{"Key":"purely up","Fragments":["to"]},{"Key":"personal preference.","Fragments":["Using",":)","Not","Unused"]},{"Key":"preference. Using","Fragments":["a"]},{"Key":"lookup could","Fragments":["be"]},{"Key":"interesting though.","Fragments":["Do"]},{"Key":"though. Do","Fragments":["you"]},{"Key":"The decision","Fragments":["on"]},{"Key":"decision on","Fragments":["the","handling"]},{"Key":"fine one","Fragments":["as"]},{"Key":"one as","Fragments":["long"]},{"Key":"intention -","Fragments":["not"]},{"Key":"did for","Fragments":["no","those."]},{"Key":"no reason.","Fragments":["I"]},{"Key":"reason. I","Fragments":["don't"]},{"Key":"a form","Fragments":["that"]},{"Key":"form that","Fragments":["would"]},{"Key":"allow only","Fragments":["static"]},{"Key":"world that","Fragments":["would"]},{"Key":"not 100%","Fragments":["sure","happy","happy"]},{"Key":"100% sure","Fragments":["what","that"]},{"Key":"best of","Fragments":["the","both"]},{"Key":"three options","Fragments":["for","directly"]},{"Key":"options for","Fragments":["readability.","manage"]},{"Key":"readability. Look","Fragments":["at"]},{"Key":"at mine","Fragments":["(click"]},{"Key":"mine (click","Fragments":["on"]},{"Key":"(click on","Fragments":["my"]},{"Key":"then click","Fragments":["on"]},{"Key":"click on","Fragments":["the"]},{"Key":"the Triangles","Fragments":["for"]},{"Key":"Triangles for","Fragments":["C#)"]},{"Key":"for C#)","Fragments":["and"]},{"Key":"C#) and","Fragments":["tell"]},{"Key":"of mine.","Fragments":["I","I"]},{"Key":"actually did","Fragments":["it"]},{"Key":"ways -","Fragments":["one,"]},{"Key":"- one,","Fragments":["similar"]},{"Key":"one, similar","Fragments":["to"]},{"Key":"yours with","Fragments":["if"]},{"Key":"statements, is","Fragments":["commented"]},{"Key":"is commented","Fragments":["out"]},{"Key":"other one","Fragments":["uses"]},{"Key":"one uses","Fragments":["some"]},{"Key":"uses some","Fragments":["Linq"]},{"Key":"Linq features","Fragments":["to"]},{"Key":"features to","Fragments":["pare"]},{"Key":"to pare","Fragments":["down"]},{"Key":"pare down","Fragments":["the","the"]},{"Key":"need and","Fragments":["it"]},{"Key":"it uses","Fragments":["a","to"]},{"Key":"to push","Fragments":["back","back"]},{"Key":"push back","Fragments":["a","on"]},{"Key":"back a","Fragments":["little"]},{"Key":"1. There's","Fragments":["no"]},{"Key":"no punctuation","Fragments":["in"]},{"Key":"punctuation in","Fragments":["scrabble,","line","your"]},{"Key":"scrabble, only","Fragments":["letters"]},{"Key":"letters so","Fragments":["I'm"]},{"Key":"avoid pre-optimizing","Fragments":["things"]},{"Key":"pre-optimizing things","Fragments":["until"]},{"Key":"things until","Fragments":["it"]},{"Key":"a problem.","Fragments":["If"]},{"Key":"If calling","Fragments":["```Score()```"]},{"Key":"calling ```Score()```","Fragments":["were"]},{"Key":"```Score()``` were","Fragments":["an"]},{"Key":"expensive operation","Fragments":["I","and","(run-time","on"]},{"Key":"operation I","Fragments":["would"]},{"Key":"would totally","Fragments":["cache"]},{"Key":"totally cache","Fragments":["it."]},{"Key":"Sure, push","Fragments":["back."]},{"Key":"1) Correct,","Fragments":["a"]},{"Key":"Correct, a","Fragments":["valid"]},{"Key":"valid Scrabble","Fragments":["word"]},{"Key":"Scrabble word","Fragments":["would"]},{"Key":"word would","Fragments":["never"]},{"Key":"have anything","Fragments":["other","to"]},{"Key":"than letters.","Fragments":["If"]},{"Key":"just writing","Fragments":["to"]},{"Key":"writing to","Fragments":["solve"]},{"Key":"problem you","Fragments":["don't"]},{"Key":"check. However,","Fragments":["if"]},{"Key":"on learning","Fragments":["good"]},{"Key":"learning good","Fragments":["practices"]},{"Key":"good practices","Fragments":["from"]},{"Key":"practices from","Fragments":["the"]},{"Key":"real world,","Fragments":["the"]},{"Key":"world, the","Fragments":["check"]},{"Key":"very important.","Fragments":["Unless"]},{"Key":"important. Unless","Fragments":["you"]},{"Key":"Unless you","Fragments":["are","get","can"]},{"Key":"in complete","Fragments":["control"]},{"Key":"complete control","Fragments":["of"]},{"Key":"control of","Fragments":["the"]},{"Key":"code calling","Fragments":["your"]},{"Key":"calling your","Fragments":["code,"]},{"Key":"code, someone","Fragments":["somewhere"]},{"Key":"someone somewhere","Fragments":["will"]},{"Key":"somewhere will","Fragments":["surely"]},{"Key":"will surely","Fragments":["write"]},{"Key":"surely write","Fragments":["their"]},{"Key":"write their","Fragments":["code"]},{"Key":"their code","Fragments":["wrong"]},{"Key":"code wrong","Fragments":["and"]},{"Key":"allow bad","Fragments":["data"]},{"Key":"bad data","Fragments":["to"]},{"Key":"your function.","Fragments":["If"]},{"Key":"KeyNotFoundException is","Fragments":["good"]},{"Key":"for you,","Fragments":["that"]},{"Key":"won't mean","Fragments":["a"]},{"Key":"mean a","Fragments":["thing","generic","number","ternary"]},{"Key":"a thing","Fragments":["to"]},{"Key":"caller whereas","Fragments":["an"]},{"Key":"whereas an","Fragments":["ArgumentOutOfRangeException(\"'test!'"]},{"Key":"an ArgumentOutOfRangeException(\"'test!'","Fragments":["is"]},{"Key":"ArgumentOutOfRangeException(\"'test!' is","Fragments":["an"]},{"Key":"invalid Scrabble","Fragments":["word\")"]},{"Key":"Scrabble word\")","Fragments":["is"]},{"Key":"word\") is","Fragments":["a"]},{"Key":"2) Yeah,","Fragments":["this"]},{"Key":"Yeah, this","Fragments":["was"]},{"Key":"pretty picky.","Fragments":["But"]},{"Key":"picky. But","Fragments":["I"]},{"Key":"that's my","Fragments":["job"]},{"Key":"my job","Fragments":["when"]},{"Key":"job when","Fragments":["I"]},{"Key":"I 'Nitpick'.","Fragments":["I'm"]},{"Key":"'Nitpick'. I'm","Fragments":["trying"]},{"Key":"could cause","Fragments":["your"]},{"Key":"cause your","Fragments":["code"]},{"Key":"fail or","Fragments":["be"]},{"Key":"are by","Fragments":["no"]},{"Key":"by no","Fragments":["means"]},{"Key":"means required","Fragments":["to"]},{"Key":"fix it.","Fragments":[":)"]},{"Key":"it. :)","Fragments":["Sometimes"]},{"Key":":) Sometimes","Fragments":["just"]},{"Key":"Sometimes just","Fragments":["reading"]},{"Key":"just reading","Fragments":["it"]},{"Key":"and storing","Fragments":["it"]},{"Key":"future is","Fragments":["enough."]},{"Key":"using Aggregate(),","Fragments":["can"]},{"Key":"Aggregate(), can","Fragments":["I"]},{"Key":"I recommend","Fragments":["not","extracting","the"]},{"Key":"recommend not","Fragments":["using"]},{"Key":"using Reverse()?","Fragments":["If"]},{"Key":"Reverse()? If","Fragments":["the"]},{"Key":"is 1010","Fragments":["you"]},{"Key":"1010 you","Fragments":["are"]},{"Key":"currently reversing","Fragments":["to"]},{"Key":"reversing to","Fragments":["0101,"]},{"Key":"to 0101,","Fragments":["then"]},{"Key":"0101, then","Fragments":["over"]},{"Key":"then over","Fragments":["your"]},{"Key":"over your","Fragments":["loop"]},{"Key":"your loop","Fragments":["s","variable","at","to","will"]},{"Key":"loop s","Fragments":["starts"]},{"Key":"s starts","Fragments":["at"]},{"Key":"starts at","Fragments":["0,","zero"]},{"Key":"at 0,","Fragments":["stays"]},{"Key":"0, stays","Fragments":["at"]},{"Key":"stays at","Fragments":["0"]},{"Key":"at 0","Fragments":["after"]},{"Key":"first digit,","Fragments":["becomes"]},{"Key":"digit, becomes","Fragments":["2"]},{"Key":"becomes 2","Fragments":["after"]},{"Key":"2 after","Fragments":["the"]},{"Key":"second digit,","Fragments":["stays"]},{"Key":"digit, stays","Fragments":["there"]},{"Key":"stays there","Fragments":["after"]},{"Key":"there after","Fragments":["the"]},{"Key":"third digit","Fragments":["and"]},{"Key":"digit and","Fragments":["finally"]},{"Key":"finally becomes","Fragments":["10"]},{"Key":"becomes 10","Fragments":["after"]},{"Key":"10 after","Fragments":["the"]},{"Key":"instead don't","Fragments":["reverse"]},{"Key":"don't reverse","Fragments":["the"]},{"Key":"the digits,","Fragments":["but"]},{"Key":"digits, but","Fragments":["constantly"]},{"Key":"but constantly","Fragments":["multiply"]},{"Key":"constantly multiply","Fragments":["s"]},{"Key":"multiply s","Fragments":["*"]},{"Key":"s *","Fragments":["2"]},{"Key":"* 2","Fragments":["and"]},{"Key":"next character","Fragments":["it"]},{"Key":"be simpler.","Fragments":["In"]},{"Key":"simpler. In","Fragments":["this"]},{"Key":"case s","Fragments":["will"]},{"Key":"s will","Fragments":["still"]},{"Key":"still start","Fragments":["at"]},{"Key":"at 0.","Fragments":["After"]},{"Key":"0. After","Fragments":["the"]},{"Key":"be 1","Fragments":["(0*2","Keep"]},{"Key":"1 (0*2","Fragments":["+"]},{"Key":"(0*2 +","Fragments":["1)."]},{"Key":"+ 1).","Fragments":["After"]},{"Key":"1). After","Fragments":["the"]},{"Key":"second character","Fragments":["it"]},{"Key":"be 2","Fragments":["(1*2","1"]},{"Key":"2 (1*2","Fragments":["+"]},{"Key":"(1*2 +","Fragments":["0)."]},{"Key":"+ 0).","Fragments":["After"]},{"Key":"0). After","Fragments":["the"]},{"Key":"third character","Fragments":["it"]},{"Key":"be 5","Fragments":["(2*2"]},{"Key":"5 (2*2","Fragments":["+"]},{"Key":"(2*2 +","Fragments":["1)"]},{"Key":"+ 1)","Fragments":["and","and","and"]},{"Key":"1) and","Fragments":["then","then","then"]},{"Key":"then after","Fragments":["the"]},{"Key":"be 10","Fragments":["(2*5"]},{"Key":"10 (2*5","Fragments":["+"]},{"Key":"(2*5 +","Fragments":["0)."]},{"Key":"method also","Fragments":["avoids","includes"]},{"Key":"also avoids","Fragments":["having"]},{"Key":"avoids having","Fragments":["to"]},{"Key":"a multiplier","Fragments":["or"]},{"Key":"multiplier or","Fragments":["calling"]},{"Key":"or calling","Fragments":["Math.Pow()"]},{"Key":"calling Math.Pow()","Fragments":["as"]},{"Key":"Math.Pow() as","Fragments":["I've"]},{"Key":"seen others","Fragments":["do.","put"]},{"Key":"Why reverse","Fragments":["the"]},{"Key":"the digits?","Fragments":["You"]},{"Key":"digits? You","Fragments":["can"]},{"Key":"can process","Fragments":["them"]},{"Key":"process them","Fragments":["in"]},{"Key":"original order","Fragments":["and"]},{"Key":"the resulting","Fragments":["code"]},{"Key":"resulting code","Fragments":["is"]},{"Key":"simpler (in","Fragments":["my"]},{"Key":"good reason","Fragments":["to","for","to,","why","otherwise,"]},{"Key":"use \u003ccode\u003eint.Parse(c.ToString())\u003c/code\u003e","Fragments":["instead"]},{"Key":"\u003ccode\u003eint.Parse(c.ToString())\u003c/code\u003e instead","Fragments":["of"]},{"Key":"of \u003ccode\u003e(int)(c","Fragments":["-"]},{"Key":"\u003ccode\u003e(int)(c -","Fragments":["'0')\u003c/code\u003e."]},{"Key":"- '0')\u003c/code\u003e.","Fragments":["I"]},{"Key":"'0')\u003c/code\u003e. I","Fragments":["don't"]},{"Key":"like creating","Fragments":["a"]},{"Key":"the digit","Fragments":["represented"]},{"Key":"digit represented","Fragments":["by"]},{"Key":"represented by","Fragments":["a"]},{"Key":"Test since","Fragments":["I"]},{"Key":"trouble figuring","Fragments":["out"]},{"Key":"wasn't creating","Fragments":["instances"]},{"Key":"creating instances","Fragments":["of"]},{"Key":"instances of","Fragments":["Anagram","the"]},{"Key":"of Anagram","Fragments":["until"]},{"Key":"Anagram until","Fragments":["I"]},{"Key":"the testfile","Fragments":["to"]},{"Key":"testfile to","Fragments":["use"]},{"Key":"use \"new","Fragments":["Anagram.Anagram\""]},{"Key":"\"new Anagram.Anagram\"","Fragments":["instead"]},{"Key":"Anagram.Anagram\" instead","Fragments":["of"]},{"Key":"just \"new","Fragments":["Anagram\"."]},{"Key":"\"new Anagram\".","Fragments":["Otherwise,"]},{"Key":"Anagram\". Otherwise,","Fragments":["everything"]},{"Key":"Otherwise, everything","Fragments":["seems"]},{"Key":"everything seems","Fragments":["to","to"]},{"Key":"pass. I","Fragments":["think","changed"]},{"Key":"went pretty","Fragments":["crazy"]},{"Key":"pretty crazy","Fragments":["with"]},{"Key":"crazy with","Fragments":["variable"]},{"Key":"with variable","Fragments":["creation,"]},{"Key":"creation, so","Fragments":["I'm"]},{"Key":" @triston,","Fragments":["interesting"]},{"Key":"@triston, interesting","Fragments":["point."]},{"Key":"interesting point.","Fragments":["I"]},{"Key":"could matter","Fragments":["if"]},{"Key":"matter if","Fragments":["you"]},{"Key":"to slow","Fragments":["network"]},{"Key":"slow network","Fragments":["I/O,"]},{"Key":"network I/O,","Fragments":["but"]},{"Key":"I/O, but","Fragments":["the"]},{"Key":"the delay","Fragments":["in"]},{"Key":"delay in","Fragments":["an"]},{"Key":"extra arithmetic","Fragments":["call"]},{"Key":"arithmetic call","Fragments":["is"]},{"Key":"of nanoseconds.","Fragments":["If"]},{"Key":"nanoseconds. If","Fragments":["I"]},{"Key":"optimize for","Fragments":["the"]},{"Key":"a switch-case","Fragments":["to"]},{"Key":"switch-case to","Fragments":["my"]},{"Key":"my method?","Fragments":[":P"]},{"Key":" Nope,","Fragments":["doesn't"]},{"Key":"Nope, doesn't","Fragments":["work."]},{"Key":"doesn't work.","Fragments":["Worked"]},{"Key":"work. Worked","Fragments":["fine"]},{"Key":"Worked fine","Fragments":["in"]},{"Key":"fine in","Fragments":["Regex","production"]},{"Key":"in Regex","Fragments":["tester"]},{"Key":"Regex tester","Fragments":["but"]},{"Key":"tester but","Fragments":["in"]},{"Key":"in program","Fragments":["is"]},{"Key":"is including","Fragments":["leading"]},{"Key":"including leading","Fragments":["/"]},{"Key":"leading /","Fragments":["trailing"]},{"Key":"/ trailing","Fragments":["spaces."]},{"Key":"trailing spaces.","Fragments":["There","It's"]},{"Key":"spaces. There","Fragments":["is"]},{"Key":"a certain","Fragments":["point","point","response"]},{"Key":"certain point","Fragments":["(visible","having"]},{"Key":"point (visible","Fragments":["is"]},{"Key":"(visible is","Fragments":["rearview"]},{"Key":"is rearview","Fragments":["mirror)"]},{"Key":"rearview mirror)","Fragments":["where"]},{"Key":"mirror) where","Fragments":["I"]},{"Key":"I say,","Fragments":["\"It"]},{"Key":"say, \"It","Fragments":["will"]},{"Key":"\"It will","Fragments":["do\"."]},{"Key":"comment though,","Fragments":["it"]},{"Key":" Works.","Fragments":["Very"]},{"Key":"Works. Very","Fragments":["nice"]},{"Key":"nice trick.","Fragments":["Haven't"]},{"Key":"trick. Haven't","Fragments":["seen"]},{"Key":"Haven't seen","Fragments":["it"]},{"Key":"seen it","Fragments":["before.","with"]},{"Key":" `Where(char.IsLetter)`","Fragments":["works."]},{"Key":" `Where`","Fragments":["is"]},{"Key":"a `Func\u003cchar,","Fragments":["bool\u003e`."]},{"Key":"`Func\u003cchar, bool\u003e`.","Fragments":["It"]},{"Key":"bool\u003e`. It","Fragments":["can"]},{"Key":"can accept","Fragments":["a"]},{"Key":"accept a","Fragments":["lamba","phone"]},{"Key":"a lamba","Fragments":["`ch=\u003echar.IsLetter(ch)`","in"]},{"Key":"lamba `ch=\u003echar.IsLetter(ch)`","Fragments":["for"]},{"Key":"`ch=\u003echar.IsLetter(ch)` for","Fragments":["this"]},{"Key":"also accept","Fragments":["any"]},{"Key":"accept any","Fragments":["method"]},{"Key":"any method","Fragments":["with"]},{"Key":"a signature","Fragments":["`bool"]},{"Key":"signature `bool","Fragments":["f(char"]},{"Key":"`bool f(char","Fragments":["ch)`."]},{"Key":"using PrimesFor()","Fragments":["other"]},{"Key":"PrimesFor() other","Fragments":["than"]},{"Key":"it because","Fragments":["I","it","i","of"]},{"Key":"I solved","Fragments":["the","the","this"]},{"Key":"the PrimesFactor","Fragments":["excercise"]},{"Key":"PrimesFactor excercise","Fragments":["right"]},{"Key":"excercise right","Fragments":["before"]},{"Key":"right before","Fragments":["this"]},{"Key":"that came","Fragments":["to"]},{"Key":"mind and","Fragments":["passed"]},{"Key":"Not needed","Fragments":["for","any"]},{"Key":"for IsEquilateral()","Fragments":["because"]},{"Key":"IsEquilateral() because","Fragments":["the"]},{"Key":"if equilateral","Fragments":["and"]},{"Key":"the repeats","Fragments":["on"]},{"Key":"repeats on","Fragments":["a"]},{"Key":"a fail","Fragments":["will"]},{"Key":"fail will","Fragments":["also"]},{"Key":"also fail.","Fragments":["Basically"]},{"Key":"fail. Basically","Fragments":["just"]},{"Key":"Basically just","Fragments":["playing."]},{"Key":"just playing.","Fragments":["I"]},{"Key":"playing. I","Fragments":["had"]},{"Key":"had CheckSides()","Fragments":["in"]},{"Key":"CheckSides() in","Fragments":["two"]},{"Key":"two places","Fragments":["and"]},{"Key":"places and","Fragments":["then"]},{"Key":"then one","Fragments":["explicit","off"]},{"Key":"one explicit","Fragments":["check"]},{"Key":"it looked","Fragments":["unbalanced"]},{"Key":"looked unbalanced","Fragments":[":)"]},{"Key":"Can all","Fragments":["be"]},{"Key":"done up-front.","Fragments":["Updating"]},{"Key":"Good spot,","Fragments":["no"]},{"Key":"spot, no","Fragments":["disagreement"]},{"Key":"no disagreement","Fragments":["on"]},{"Key":"disagreement on","Fragments":["the"]},{"Key":"it misses.","Fragments":["I"]},{"Key":"misses. I","Fragments":["went"]},{"Key":"went so","Fragments":["far","far,"]},{"Key":"far with","Fragments":["it"]},{"Key":"- pass","Fragments":["all"]},{"Key":"tests plus","Fragments":["some"]},{"Key":"plus some","Fragments":["mentioned"]},{"Key":"some mentioned","Fragments":["in"]},{"Key":"submissions -","Fragments":["and"]},{"Key":"with \u003cb\u003e\\w[\\w'-]*\u003c/b\u003e","Fragments":["was"]},{"Key":"\u003cb\u003e\\w[\\w'-]*\u003c/b\u003e was","Fragments":["one"]},{"Key":"the (proposed)","Fragments":["tests"]},{"Key":"(proposed) tests","Fragments":["where"]},{"Key":"where apostrophes","Fragments":["were"]},{"Key":"apostrophes were","Fragments":["used"]},{"Key":"were used","Fragments":["as","in","it"]},{"Key":"as quotes","Fragments":["within","but"]},{"Key":"quotes within","Fragments":["the"]},{"Key":"phrase -","Fragments":["\u003cb\u003e\"She"]},{"Key":"- \u003cb\u003e\"She","Fragments":["said"]},{"Key":"\u003cb\u003e\"She said","Fragments":["'Hello'\"\u003c/b\u003e,"]},{"Key":"said 'Hello'\"\u003c/b\u003e,","Fragments":["it"]},{"Key":"'Hello'\"\u003c/b\u003e, it","Fragments":["will"]},{"Key":"find \u003cb\u003eHello'\u003c/b\u003e","Fragments":["as"]},{"Key":"\u003cb\u003eHello'\u003c/b\u003e as","Fragments":["a"]},{"Key":"word rather","Fragments":["than"]},{"Key":"than \u003cb\u003eHello\u003c/b\u003e.","Fragments":["The"]},{"Key":"\u003cb\u003eHello\u003c/b\u003e. The","Fragments":["current"]},{"Key":"The current","Fragments":["pattern"]},{"Key":"current pattern","Fragments":["was"]},{"Key":"pattern was","Fragments":["an"]},{"Key":" \u003cb\u003e[\u0026#94;'-][\\w-']*[\u0026#94;'-]\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003e[\u0026#94;'-][\\w-']*[\u0026#94;'-]\u003c/b\u003e is","Fragments":["better,"]},{"Key":"is better,","Fragments":["it","but"]},{"Key":"better, it","Fragments":["finds"]},{"Key":"finds the","Fragments":["words"]},{"Key":"words above","Fragments":["and"]},{"Key":"the apostrophes","Fragments":["as","got"]},{"Key":"quotes but","Fragments":["not"]},{"Key":"not \"'Twas","Fragments":["the"]},{"Key":"\"'Twas the","Fragments":["night"]},{"Key":"the night","Fragments":["before"]},{"Key":"night before","Fragments":["Christmas\"."]},{"Key":"before Christmas\".","Fragments":["In"]},{"Key":"Christmas\". In","Fragments":["this"]},{"Key":"case \u003cb\u003e'Twas\u003c/b\u003e","Fragments":["should"]},{"Key":"\u003cb\u003e'Twas\u003c/b\u003e should","Fragments":["the"]},{"Key":"should the","Fragments":["word","calculation","method","result"]},{"Key":"far, got","Fragments":["it"]},{"Key":"then stopped.","Fragments":["I'll"]},{"Key":"stopped. I'll","Fragments":["add"]},{"Key":"I'll add","Fragments":["in","is"]},{"Key":"for fo'c'sle","Fragments":["et"]},{"Key":"fo'c'sle et","Fragments":["al"]},{"Key":"et al","Fragments":["though."]},{"Key":"Much simpler","Fragments":["code","and"]},{"Key":"simpler code","Fragments":["after"]},{"Key":"after implementation","Fragments":["of"]},{"Key":"of zip","Fragments":["to"]},{"Key":"zip to","Fragments":["replace"]},{"Key":"old Compare().","Fragments":["Thanks"]},{"Key":"Compare(). Thanks","Fragments":["@bill"]},{"Key":" DifferenceOfSquares()","Fragments":["passes"]},{"Key":"DifferenceOfSquares() passes","Fragments":["over"]},{"Key":"passes over","Fragments":["sequence"]},{"Key":"over sequence","Fragments":["twice,"]},{"Key":"sequence twice,","Fragments":["can"]},{"Key":"twice, can","Fragments":["make"]},{"Key":" @kaitlyn","Fragments":["This"]},{"Key":"@kaitlyn This","Fragments":["is"]},{"Key":"pretty silly","Fragments":["example."]},{"Key":"silly example.","Fragments":["There"]},{"Key":"example. There","Fragments":["is"]},{"Key":"an object,","Fragments":["just"]},{"Key":"object, just","Fragments":["the"]},{"Key":"static function","Fragments":["\u003cb\u003eScore\u003c/b\u003e","Score","remarks."]},{"Key":"function \u003cb\u003eScore\u003c/b\u003e","Fragments":["but"]},{"Key":"\u003cb\u003eScore\u003c/b\u003e but","Fragments":["as"]},{"Key":"rule I","Fragments":["would","would"]},{"Key":"constructor should","Fragments":["be","validate"]},{"Key":"valid object","Fragments":["and"]},{"Key":"work as","Fragments":["possible","possible","possible,","well","advertised.","possible"]},{"Key":"possible in","Fragments":["it.","the","the","C#"]},{"Key":" t","Fragments":["can","=\u003e"]},{"Key":"t can","Fragments":["be"]},{"Key":"argued on","Fragments":["a"]},{"Key":"by case","Fragments":["basis"]},{"Key":"case basis","Fragments":["as"]},{"Key":"what constitutes","Fragments":["a"]},{"Key":"constitutes a","Fragments":["valid"]},{"Key":"valid object.","Fragments":["Say"]},{"Key":"object. Say","Fragments":["we"]},{"Key":"Say we","Fragments":["had"]},{"Key":"we had","Fragments":["two","the"]},{"Key":"had two","Fragments":["new"]},{"Key":"two new","Fragments":["methods","things"]},{"Key":"class, each","Fragments":["returning"]},{"Key":"each returning","Fragments":["a"]},{"Key":"value based","Fragments":["upon"]},{"Key":"based upon","Fragments":["the","how"]},{"Key":"upon the","Fragments":["word","NUnit"]},{"Key":"word (`DoubleWordScore`,","Fragments":["`TripleWordScore`"]},{"Key":"(`DoubleWordScore`, `TripleWordScore`","Fragments":["-"]},{"Key":"`TripleWordScore` -","Fragments":["silly"]},{"Key":"- silly","Fragments":["I"]},{"Key":"silly I","Fragments":["know"]},{"Key":"know but","Fragments":["the"]},{"Key":"example is","Fragments":["minimal)","probably"]},{"Key":"is minimal)","Fragments":["and"]},{"Key":"minimal) and","Fragments":["`DoubleWordScore`"]},{"Key":"and `DoubleWordScore`","Fragments":["throws"]},{"Key":"`DoubleWordScore` throws","Fragments":["an"]},{"Key":"exception. If","Fragments":["we"]},{"Key":"we set","Fragments":["the"]},{"Key":"set the","Fragments":["returns","robot's","string"]},{"Key":"the returns","Fragments":["for"]},{"Key":"returns for","Fragments":["each","each"]},{"Key":"each in","Fragments":["the"]},{"Key":"the ctor,","Fragments":["we"]},{"Key":"ctor, we","Fragments":["will"]},{"Key":"we will","Fragments":["get"]},{"Key":"exception even","Fragments":["if"]},{"Key":"if `DoubleWordScore`","Fragments":["is"]},{"Key":"`DoubleWordScore` is","Fragments":["never"]},{"Key":"current case","Fragments":["(and"]},{"Key":"case (and","Fragments":["most"]},{"Key":"(and most","Fragments":["of"]},{"Key":"other problems","Fragments":["I"]},{"Key":"problems I","Fragments":["have"]},{"Key":"have seen)","Fragments":["there"]},{"Key":"seen) there","Fragments":["is"]},{"Key":"problem generating","Fragments":["an"]},{"Key":"generating an","Fragments":["answer"]},{"Key":"answer in","Fragments":["the"]},{"Key":"ctor and","Fragments":["just"]},{"Key":"returning it","Fragments":["in"]},{"Key":"function call","Fragments":["but"]},{"Key":"call but","Fragments":["these"]},{"Key":"are minimal","Fragments":["examples"]},{"Key":"minimal examples","Fragments":["and"]},{"Key":"examples and","Fragments":["the","in","improve"]},{"Key":"shape should","Fragments":["be"]},{"Key":"do as","Fragments":["little","much","it","little"]},{"Key":"by is","Fragments":["superfluous,"]},{"Key":"is superfluous,","Fragments":["the"]},{"Key":"superfluous, the","Fragments":["map"]},{"Key":"the map","Fragments":["is","passed"]},{"Key":"map is","Fragments":["fixed."]},{"Key":"is fixed.","Fragments":["One"]},{"Key":"fixed. One","Fragments":["version"]},{"Key":"One version","Fragments":["of"]},{"Key":"code had","Fragments":["the"]},{"Key":"map passed","Fragments":["in"]},{"Key":"in by","Fragments":["a"]},{"Key":"a provider","Fragments":["but"]},{"Key":"provider but","Fragments":["came"]},{"Key":"but came","Fragments":["to"]},{"Key":"my senses","Fragments":[":)"]},{"Key":"of many","Fragments":["old"]},{"Key":"many old","Fragments":["habits","questions"]},{"Key":"old habits","Fragments":["which"]},{"Key":"habits which","Fragments":["have"]},{"Key":"which have","Fragments":["possibly"]},{"Key":"have possibly","Fragments":["outlived"]},{"Key":"possibly outlived","Fragments":["their"]},{"Key":"outlived their","Fragments":["value"]},{"Key":"their value","Fragments":["but","to"]},{"Key":" have","Fragments":["not"]},{"Key":"not died.","Fragments":["I"]},{"Key":"died. I","Fragments":["don't"]},{"Key":"using passed","Fragments":["in"]},{"Key":"in parameters","Fragments":["as"]},{"Key":"parameters as","Fragments":["local"]},{"Key":"as local","Fragments":["variables."]},{"Key":"local variables.","Fragments":["In"]},{"Key":"variables. In","Fragments":["one"]},{"Key":"In one","Fragments":["of"]},{"Key":"various languages","Fragments":["I"]},{"Key":"languages I","Fragments":["have"]},{"Key":"used there","Fragments":["was"]},{"Key":"was probably","Fragments":["(possibly?)","that","a"]},{"Key":"probably (possibly?)","Fragments":["a"]},{"Key":"(possibly?) a","Fragments":["good"]},{"Key":"got used","Fragments":["to"]},{"Key":"just kept","Fragments":["doing"]},{"Key":"kept doing","Fragments":["it"]},{"Key":"past any","Fragments":["value."]},{"Key":"Looking through","Fragments":["all"]},{"Key":"the answers","Fragments":["for"]},{"Key":"answers for","Fragments":["this"]},{"Key":"problem, most","Fragments":["of"]},{"Key":"them are","Fragments":["a"]},{"Key":"return using","Fragments":["the"]},{"Key":"the short","Fragments":["circuit"]},{"Key":"circuit operators","Fragments":["to"]},{"Key":"operators to","Fragments":["implement"]},{"Key":"logic. The","Fragments":["only"]},{"Key":"only quibbling","Fragments":["on"]},{"Key":"quibbling on","Fragments":["them"]},{"Key":"on them","Fragments":["is"]},{"Key":"about which","Fragments":["exceptions"]},{"Key":"which exceptions","Fragments":["to"]},{"Key":"exceptions to","Fragments":["throw"]},{"Key":"throw for","Fragments":["which"]},{"Key":"which invalid","Fragments":["inputs."]},{"Key":"invalid inputs.","Fragments":["That"]},{"Key":"inputs. That","Fragments":["is,"]},{"Key":"is, de","Fragments":["facto,"]},{"Key":"de facto,","Fragments":["the"]},{"Key":"facto, the","Fragments":["good"]},{"Key":"good solution","Fragments":["in"]},{"Key":" `IsLeap()`","Fragments":["encapsulates"]},{"Key":"`IsLeap()` encapsulates","Fragments":["some"]},{"Key":"encapsulates some","Fragments":["pretty"]},{"Key":"some pretty","Fragments":["straightforward"]},{"Key":"pretty straightforward","Fragments":["functionality","exercise.","problem.","exercise."]},{"Key":"straightforward functionality","Fragments":["but"]},{"Key":"functionality but","Fragments":["looking"]},{"Key":"implementation it","Fragments":["is"]},{"Key":"not easy,for","Fragments":["example,"]},{"Key":"easy,for example,","Fragments":["to"]},{"Key":"example, to","Fragments":["tell"]},{"Key":"tell under","Fragments":["which"]},{"Key":"under which","Fragments":["conditions"]},{"Key":"which conditions","Fragments":["the"]},{"Key":"conditions the","Fragments":["`return"]},{"Key":"the `return","Fragments":["true`"]},{"Key":"`return true`","Fragments":["on"]},{"Key":"true` on","Fragments":["line"]},{"Key":"line 28","Fragments":["is"]},{"Key":"28 is","Fragments":["executed."]},{"Key":"is executed.","Fragments":["One"]},{"Key":"executed. One","Fragments":["needs"]},{"Key":"One needs","Fragments":["to"]},{"Key":"to trace","Fragments":["the","through"]},{"Key":"trace the","Fragments":["code"]},{"Key":"code down","Fragments":["through","the"]},{"Key":"down through","Fragments":["the"]},{"Key":"find which","Fragments":["path"]},{"Key":"which path","Fragments":["is"]},{"Key":"path is","Fragments":["followed."]},{"Key":"is followed.","Fragments":["The"]},{"Key":"followed. The","Fragments":["same"]},{"Key":"same is","Fragments":["true"]},{"Key":"other return.","Fragments":["An"]},{"Key":"return. An","Fragments":["experienced"]},{"Key":"An experienced","Fragments":["C#"]},{"Key":"C# developer","Fragments":["will"]},{"Key":"developer will","Fragments":["have"]},{"Key":"time reviewing","Fragments":["this"]},{"Key":"reviewing this","Fragments":["code"]},{"Key":"than reviewing","Fragments":["the"]},{"Key":"reviewing the","Fragments":["single"]},{"Key":" Programming","Fragments":["is","wise"]},{"Key":"a solitary","Fragments":["profession."]},{"Key":"solitary profession.","Fragments":["A"]},{"Key":"profession. A","Fragments":["career"]},{"Key":"A career","Fragments":["is"]},{"Key":"career is","Fragments":["spent"]},{"Key":"is spent","Fragments":["using/working"]},{"Key":"spent using/working","Fragments":["on"]},{"Key":"using/working on","Fragments":["other"]},{"Key":"and having","Fragments":["them"]},{"Key":"them work","Fragments":["upon"]},{"Key":"work upon","Fragments":["one's"]},{"Key":"upon one's","Fragments":["own"]},{"Key":"one's own","Fragments":["code."]},{"Key":"code. At","Fragments":["a"]},{"Key":"At a","Fragments":["certain"]},{"Key":"point having","Fragments":["one's"]},{"Key":"having one's","Fragments":["code"]},{"Key":"one's code","Fragments":["conform"]},{"Key":"code conform","Fragments":["to"]},{"Key":"a majority","Fragments":["style/expectation"]},{"Key":"majority style/expectation","Fragments":["is"]},{"Key":"style/expectation is","Fragments":["more"]},{"Key":"than whether","Fragments":["or"]},{"Key":"one likes","Fragments":["that"]},{"Key":"likes that","Fragments":["style."]},{"Key":"With 10","Fragments":["^"]},{"Key":"10 ^","Fragments":["9,"]},{"Key":"^ 9,","Fragments":["I"]},{"Key":"9, I","Fragments":["know"]},{"Key":"many zeros","Fragments":["there"]},{"Key":"zeros there","Fragments":["are"]},{"Key":"are without","Fragments":["having"]},{"Key":"count them","Fragments":["by","in"]},{"Key":"them by","Fragments":["hand."]},{"Key":"a Main()","Fragments":["to"]},{"Key":"Main() to","Fragments":["try"]},{"Key":"run this.","Fragments":["This"]},{"Key":"are for.","Fragments":["If"]},{"Key":"for. If","Fragments":["you"]},{"Key":"the exercises,","Fragments":["writing"]},{"Key":"exercises, writing","Fragments":["a"]},{"Key":"a driver","Fragments":["for"]},{"Key":"driver for","Fragments":["each"]},{"Key":"each is","Fragments":["going"]},{"Key":"get tedious.","Fragments":["If"]},{"Key":"tedious. If","Fragments":["you"]},{"Key":"are having","Fragments":["problems"]},{"Key":"having problems","Fragments":["running","getting","working"]},{"Key":"problems running","Fragments":["the"]},{"Key":"tests, check","Fragments":["out"]},{"Key":"may seem","Fragments":["a"]},{"Key":"seem a","Fragments":["small"]},{"Key":"small point","Fragments":["but"]},{"Key":"point but","Fragments":["one"]},{"Key":"the ideas","Fragments":["behind"]},{"Key":"ideas behind","Fragments":["moving","avoiding"]},{"Key":"behind moving","Fragments":["to"]},{"Key":"moving to","Fragments":["TDD"]},{"Key":"to TDD","Fragments":["is"]},{"Key":"TDD is","Fragments":["that","pretty","important"]},{"Key":"people need","Fragments":["to","to"]},{"Key":"the practice/habit","Fragments":["of"]},{"Key":"practice/habit of","Fragments":["running"]},{"Key":"of running","Fragments":["a"]},{"Key":"running a","Fragments":["program"]},{"Key":"a program","Fragments":["and","that","that","that"]},{"Key":"program and","Fragments":["manually","use"]},{"Key":"and manually","Fragments":["entering"]},{"Key":"manually entering","Fragments":["data"]},{"Key":"entering data","Fragments":["in"]},{"Key":"test code.","Fragments":["This"]},{"Key":"code. This","Fragments":["is"]},{"Key":"slow way","Fragments":["of"]},{"Key":"doing things","Fragments":["and"]},{"Key":"things and","Fragments":["not","see"]},{"Key":"not conducive","Fragments":["to"]},{"Key":"conducive to","Fragments":["doing"]},{"Key":"doing lots","Fragments":["of"]},{"Key":"of tests","Fragments":["or","with"]},{"Key":"tests or","Fragments":["to","just"]},{"Key":"to repeating","Fragments":["the"]},{"Key":"points. I've","Fragments":["been"]},{"Key":"using Dictionary","Fragments":["in"]},{"Key":"Dictionary in","Fragments":["the","your"]},{"Key":"other exercises.","Fragments":["Technically,"]},{"Key":"exercises. Technically,","Fragments":["if"]},{"Key":"Technically, if","Fragments":["it"]},{"Key":"number because","Fragments":["it"]},{"Key":"not bigger","Fragments":["than"]},{"Key":"bigger than","Fragments":["any"]},{"Key":"than any","Fragments":["of","others"]},{"Key":"values I'm","Fragments":["checking"]},{"Key":"I'm checking","Fragments":["against,","```if"]},{"Key":"checking against,","Fragments":["it"]},{"Key":"against, it","Fragments":["will"]},{"Key":"return string.Empty,","Fragments":["so"]},{"Key":"string.Empty, so","Fragments":["no"]},{"Key":"simple task","Fragments":["and"]},{"Key":"task and","Fragments":["there"]},{"Key":"no harm","Fragments":["done,"]},{"Key":"harm done,","Fragments":["but"]},{"Key":"avoid nesting","Fragments":["(when"]},{"Key":"nesting (when","Fragments":["possible)."]},{"Key":"(when possible).","Fragments":["Nesting"]},{"Key":"possible). Nesting","Fragments":["can"]},{"Key":"Nesting can","Fragments":["result"]},{"Key":"can result","Fragments":["in"]},{"Key":"in hard","Fragments":["to"]},{"Key":"a \"school","Fragments":["of"]},{"Key":"\"school of","Fragments":["thought\","]},{"Key":"of thought\",","Fragments":["which"]},{"Key":"thought\", which","Fragments":["I"]},{"Key":"I advocate","Fragments":["as"]},{"Key":"advocate as","Fragments":["well,"]},{"Key":"well, that","Fragments":["says:"]},{"Key":"that says:","Fragments":["use","either","either"]},{"Key":"says: use","Fragments":["brackets"]},{"Key":"brackets and","Fragments":["when"]},{"Key":"and when","Fragments":["you","'number'"]},{"Key":"use them,","Fragments":["use"]},{"Key":"them, use","Fragments":["them"]},{"Key":"in uniform","Fragments":["fashion."]},{"Key":"uniform fashion.","Fragments":["So"]},{"Key":"fashion. So","Fragments":["when"]},{"Key":"So when","Fragments":["you"]},{"Key":"have if-else","Fragments":["statement,"]},{"Key":"if-else statement,","Fragments":["both"]},{"Key":"statement, both","Fragments":["code"]},{"Key":"both code","Fragments":["blocks"]},{"Key":"blocks surround","Fragments":["with"]},{"Key":" //some","Fragments":["code","other"]},{"Key":"//some code","Fragments":["here"]},{"Key":"//some other","Fragments":["code"]},{"Key":"is access","Fragments":["modifier"]},{"Key":"access modifier","Fragments":["mismatch","on","(which"]},{"Key":"modifier mismatch","Fragments":["between"]},{"Key":"between class","Fragments":["and"]},{"Key":"and method,","Fragments":["you"]},{"Key":"should fix","Fragments":["that"]},{"Key":"fix that","Fragments":["as","by"]},{"Key":"Maybe the","Fragments":["access","cost","compiler","readme"]},{"Key":"the access","Fragments":["modifier"]},{"Key":"to flatten","Fragments":["out"]},{"Key":"data there.","Fragments":["I"]},{"Key":"dictionary here","Fragments":["to"]},{"Key":"that essentially","Fragments":["has"]},{"Key":"essentially has","Fragments":["2"]},{"Key":"has 2","Fragments":["properties."]},{"Key":"2 properties.","Fragments":["I"]},{"Key":"properties. I","Fragments":["guess"]},{"Key":"a Tuple\u003c\u003e","Fragments":["instead."]},{"Key":"actual values","Fragments":["here,"]},{"Key":"values here,","Fragments":["it"]},{"Key":"have private","Fragments":["variables","'set'."]},{"Key":"private variables","Fragments":["that"]},{"Key":"that multiply","Fragments":["the","together"]},{"Key":"multiply the","Fragments":["secondsPerYearOnEarth"]},{"Key":"the secondsPerYearOnEarth","Fragments":["by"]},{"Key":"secondsPerYearOnEarth by","Fragments":["their"]},{"Key":"their specific","Fragments":["percentage."]},{"Key":" Constants","Fragments":["are","renamed"]},{"Key":"Constants are","Fragments":["either"]},{"Key":"are either","Fragments":["all"]},{"Key":"either all","Fragments":["upper"]},{"Key":"case with","Fragments":["_"]},{"Key":"with _","Fragments":["between"]},{"Key":"_ between","Fragments":["words"]},{"Key":"between words","Fragments":["or"]},{"Key":"words or","Fragments":["PascalCase"]},{"Key":"or PascalCase","Fragments":["normally."]},{"Key":"of like","Fragments":["it,","how"]},{"Key":"like it,","Fragments":["but","updated"]},{"Key":"enumeration stating","Fragments":["that"]},{"Key":"stating that","Fragments":["it","the"]},{"Key":"be those","Fragments":["exact"]},{"Key":"those exact","Fragments":["numbers"]},{"Key":"exact numbers","Fragments":["and"]},{"Key":"someone doesn't","Fragments":["change"]},{"Key":"doesn't change","Fragments":["it","order."]},{"Key":"knowing the","Fragments":["consequences."]},{"Key":" ahh,","Fragments":["whoops!"]},{"Key":"ahh, whoops!","Fragments":["martinfreedman"]},{"Key":"whoops! martinfreedman","Fragments":["had"]},{"Key":"martinfreedman had","Fragments":["informed"]},{"Key":"had informed","Fragments":["me"]},{"Key":"informed me","Fragments":["that"]},{"Key":"function will","Fragments":["convert","silently"]},{"Key":"will convert","Fragments":["strings","a"]},{"Key":"convert strings","Fragments":["into"]},{"Key":"into char","Fragments":["arrays","arrays,","arrays"]},{"Key":"char arrays","Fragments":["anyways,","back","to",":)"]},{"Key":"arrays anyways,","Fragments":["so"]},{"Key":"anyways, so","Fragments":["I"]},{"Key":"that step,","Fragments":["but"]},{"Key":"step, but","Fragments":["obviously"]},{"Key":"but obviously","Fragments":["forgot"]},{"Key":"obviously forgot","Fragments":["to"]},{"Key":"variable names...","Fragments":["I"]},{"Key":"names... I","Fragments":["will"]},{"Key":"will correct","Fragments":["this"]},{"Key":"correct this","Fragments":["now!"]},{"Key":"The nested","Fragments":["if-statements","loop"]},{"Key":"if-statements are","Fragments":["not"]},{"Key":"really necessary,","Fragments":["for","so"]},{"Key":"necessary, for","Fragments":["example:"]},{"Key":"if (input","Fragments":["%","=="]},{"Key":"(input %","Fragments":["400","400"]},{"Key":"Can just","Fragments":["as"]},{"Key":"return (input","Fragments":["%"]},{"Key":"condensed in","Fragments":["this"]},{"Key":"gonna close","Fragments":["this","this"]},{"Key":"close this","Fragments":["one","one"]},{"Key":"one now.","Fragments":["Thanks"]},{"Key":"now. Thanks","Fragments":["for"]},{"Key":"you guidance,","Fragments":["martinfreedman!"]},{"Key":" how","Fragments":["about"]},{"Key":"how about","Fragments":["1"]},{"Key":"about 1","Fragments":["1-line?"]},{"Key":"1 1-line?","Fragments":[":D"]},{"Key":" int.Parse(x)","Fragments":["is"]},{"Key":"int.Parse(x) is","Fragments":["more"]},{"Key":"more understandable","Fragments":["than"]},{"Key":"understandable than","Fragments":["(c"]},{"Key":"than (c","Fragments":["-"]},{"Key":"(c -","Fragments":["'0')."]},{"Key":"- '0').","Fragments":["This"]},{"Key":"'0'). This","Fragments":["will"]},{"Key":"do boxing","Fragments":["and"]},{"Key":"boxing and","Fragments":["unboxing,"]},{"Key":"and unboxing,","Fragments":["so"]},{"Key":"unboxing, so","Fragments":["not"]},{"Key":"so not","Fragments":["sure","sure)","make","very"]},{"Key":"more performant,","Fragments":["either."]},{"Key":"Changed implementation","Fragments":["from"]},{"Key":"implementation from","Fragments":["Dictionary"]},{"Key":"from Dictionary","Fragments":["to"]},{"Key":"of Tuples","Fragments":["for","instead.","I","rather",":smile:"]},{"Key":"Tuples for","Fragments":["something"]},{"Key":"something different","Fragments":["and"]},{"Key":"different and","Fragments":["no"]},{"Key":"longer need","Fragments":["to"]},{"Key":"should consider","Fragments":["making","maintainability"]},{"Key":"consider making","Fragments":["access","it"]},{"Key":"making access","Fragments":["to"]},{"Key":"class public","Fragments":["as"]},{"Key":"public as","Fragments":["well"]},{"Key":"The result","Fragments":["variable","of"]},{"Key":"result variable","Fragments":["is"]},{"Key":"unnecessary, instead","Fragments":["you"]},{"Key":"the if-statement","Fragments":["directly.","at"]},{"Key":"Thanks, Foof.","Fragments":["Makes"]},{"Key":"Foof. Makes","Fragments":["sense"]},{"Key":"to correspond","Fragments":["to"]},{"Key":"correspond to","Fragments":["the"]},{"Key":"the \"ones\"","Fragments":["position,"]},{"Key":"\"ones\" position,","Fragments":["or"]},{"Key":"position, or","Fragments":["the"]},{"Key":"last position","Fragments":["of"]},{"Key":"position of","Fragments":["the","the"]},{"Key":"original string.","Fragments":["Otherwise,"]},{"Key":"string. Otherwise,","Fragments":["\"i\""]},{"Key":"Otherwise, \"i\"","Fragments":["won't"]},{"Key":"\"i\" won't","Fragments":["match"]},{"Key":"won't match","Fragments":["up"]},{"Key":"match up","Fragments":["with"]},{"Key":"correct spot","Fragments":["to"]},{"Key":"spot to","Fragments":["use"]},{"Key":"You've written","Fragments":["a"]},{"Key":"app which,","Fragments":["while"]},{"Key":"which, while","Fragments":["it"]},{"Key":"it certainly","Fragments":["looks"]},{"Key":"certainly looks","Fragments":["viable"]},{"Key":"looks viable","Fragments":["and"]},{"Key":"viable and","Fragments":["working,"]},{"Key":"and working,","Fragments":["doesn't","you"]},{"Key":"working, doesn't","Fragments":["deal"]},{"Key":"doesn't deal","Fragments":["with","with"]},{"Key":"supplied unit","Fragments":["tests."]},{"Key":"tests. These","Fragments":["are"]},{"Key":"important part","Fragments":["of"]},{"Key":"important for","Fragments":["future","the","good"]},{"Key":"future exercises","Fragments":["too."]},{"Key":"exercises too.","Fragments":["So"]},{"Key":"too. So","Fragments":["try"]},{"Key":"So try","Fragments":["to","and"]},{"Key":"to adapt","Fragments":["your"]},{"Key":"adapt your","Fragments":["code"]},{"Key":"it's able","Fragments":["to"]},{"Key":"tests supplied","Fragments":["in"]},{"Key":"supplied in","Fragments":["the"]},{"Key":"LeapTest.cs file.","Fragments":["The"]},{"Key":"file. The","Fragments":["console"]},{"Key":"The console","Fragments":["part"]},{"Key":"console part","Fragments":["of"]},{"Key":"solution isn't","Fragments":["necessary,"]},{"Key":"isn't necessary,","Fragments":["so"]},{"Key":"necessary, so","Fragments":["you","you"]},{"Key":"can drop","Fragments":["that"]},{"Key":"drop that","Fragments":["part"]},{"Key":"part in","Fragments":["order"]},{"Key":"to focus","Fragments":["just","on","on","on","on"]},{"Key":"focus just","Fragments":["on"]},{"Key":"just on","Fragments":["the"]},{"Key":"logic required","Fragments":["by"]},{"Key":"easy until","Fragments":["I"]},{"Key":"the LAST","Fragments":["day","day"]},{"Key":"LAST day","Fragments":["of","of"]},{"Key":"the month.","Fragments":["The","Thanks","Given"]},{"Key":"month. The","Fragments":["only"]},{"Key":"with was","Fragments":["setting"]},{"Key":"was setting","Fragments":["the"]},{"Key":"the Schedule.Last","Fragments":["property"]},{"Key":"Schedule.Last property","Fragments":["to"]},{"Key":"to '28'","Fragments":["(unique"]},{"Key":"'28' (unique","Fragments":["to"]},{"Key":"(unique to","Fragments":["the"]},{"Key":"other property","Fragments":["values)"]},{"Key":"property values)","Fragments":["and"]},{"Key":"values) and","Fragments":["then"]},{"Key":"then checking","Fragments":["if","length"]},{"Key":"the scheduleDay","Fragments":["was"]},{"Key":"scheduleDay was","Fragments":["28."]},{"Key":"If anyone","Fragments":["has","could"]},{"Key":"anyone has","Fragments":["a"]},{"Key":"of handling","Fragments":["the"]},{"Key":"the month,","Fragments":["please"]},{"Key":"month, please","Fragments":["share!"]},{"Key":" _The","Fragments":["first"]},{"Key":"_The first","Fragments":["time"]},{"Key":"you boot","Fragments":["them"]},{"Key":"boot them","Fragments":["up,"]},{"Key":"them up,","Fragments":["a"]},{"Key":"up, a","Fragments":["random"]},{"Key":"random name","Fragments":["is"]},{"Key":"is generated,","Fragments":["such"]},{"Key":"generated, such","Fragments":["as"]},{"Key":" RX837","Fragments":["or"]},{"Key":"RX837 or","Fragments":["BC811._"]},{"Key":"name a","Fragments":["little","variable"]},{"Key":"more random","Fragments":[":)"]},{"Key":" Defaulting","Fragments":["the"]},{"Key":"Defaulting the","Fragments":["kind"]},{"Key":"to Isosceles","Fragments":["is"]},{"Key":"Isosceles is","Fragments":["not"]},{"Key":"be slower","Fragments":["than"]},{"Key":"slower than","Fragments":["having","addition,","foreach"]},{"Key":"else statement","Fragments":["there.","as"]},{"Key":"statement there.","Fragments":["In"]},{"Key":"there. In","Fragments":["order"]},{"Key":"In order","Fragments":["to"]},{"Key":"that last","Fragments":["else,"]},{"Key":"last else,","Fragments":["it"]},{"Key":"else, it","Fragments":["still"]},{"Key":"still has","Fragments":["to","one"]},{"Key":"checks anyway.","Fragments":["With"]},{"Key":"anyway. With","Fragments":["enums,"]},{"Key":"With enums,","Fragments":["if"]},{"Key":"enums, if","Fragments":["you"]},{"Key":"not provide","Fragments":["a"]},{"Key":"provide a","Fragments":["default","proof","performance"]},{"Key":"default initialization,","Fragments":["it"]},{"Key":"initialization, it","Fragments":["will"]},{"Key":"automatically default","Fragments":["to"]},{"Key":"default to","Fragments":["the"]},{"Key":"first enum","Fragments":["defined."]},{"Key":"enum defined.","Fragments":["Thus,"]},{"Key":"defined. Thus,","Fragments":["if"]},{"Key":"Thus, if","Fragments":["I"]},{"Key":"put Isosceles","Fragments":["first"]},{"Key":"Isosceles first","Fragments":["in"]},{"Key":"my enum","Fragments":["list,"]},{"Key":"enum list,","Fragments":["I"]},{"Key":"list, I","Fragments":["don't"]},{"Key":"to ever","Fragments":["assign"]},{"Key":"ever assign","Fragments":["it,"]},{"Key":"assign it,","Fragments":["but"]},{"Key":"usually frowned","Fragments":["upon"]},{"Key":"frowned upon","Fragments":["since"]},{"Key":"upon since","Fragments":["someone"]},{"Key":"since someone","Fragments":["could"]},{"Key":"enum order","Fragments":["on"]},{"Key":"order on","Fragments":["you."]},{"Key":"sure !=","Fragments":["\u0026\u0026"]},{"Key":"!= \u0026\u0026","Fragments":["is"]},{"Key":"than ==","Fragments":["||."]},{"Key":"== ||.","Fragments":["That"]},{"Key":"||. That","Fragments":["is"]},{"Key":" @anya-FredrikE","Fragments":["Like"]},{"Key":"@anya-FredrikE Like","Fragments":["said"]},{"Key":"Like said","Fragments":["said"]},{"Key":"said said","Fragments":["before,"]},{"Key":"said before,","Fragments":["I","I'm"]},{"Key":"before, I","Fragments":["skipped"]},{"Key":"avoid collisions.","Fragments":[";-)"]},{"Key":" Random","Fragments":["is","chars"]},{"Key":"easy, I","Fragments":["wanted"]},{"Key":"a counter","Fragments":["that"]},{"Key":"counter that","Fragments":["could"]},{"Key":"could satisfy","Fragments":["the"]},{"Key":"satisfy the","Fragments":["AA001"]},{"Key":"the AA001","Fragments":["format"]},{"Key":"AA001 format","Fragments":["of"]},{"Key":"format of","Fragments":["the"]},{"Key":"Included code","Fragments":["to"]},{"Key":"handle null","Fragments":["and"]},{"Key":"and duplicate","Fragments":["letter"]},{"Key":"duplicate letter","Fragments":["values,"]},{"Key":"letter values,","Fragments":["as"]},{"Key":"values, as","Fragments":["well"]},{"Key":"as tests","Fragments":["for"]},{"Key":"the scenarios.","Fragments":["Originally"]},{"Key":"scenarios. Originally","Fragments":["called"]},{"Key":"Originally called","Fragments":["ToList"]},{"Key":"called ToList","Fragments":["on"]},{"Key":"ToList on","Fragments":["scoreTable.Value"]},{"Key":"on scoreTable.Value","Fragments":["so"]},{"Key":"scoreTable.Value so","Fragments":["I"]},{"Key":"wasn't worth","Fragments":["it...no"]},{"Key":"worth it...no","Fragments":["matter"]},{"Key":"it...no matter","Fragments":["how"]},{"Key":"Nested loops","Fragments":["win","to"]},{"Key":"loops win","Fragments":["this"]},{"Key":"win this","Fragments":["time..."]},{"Key":"instantiated. And","Fragments":["if","I"]},{"Key":"And if","Fragments":["you"]},{"Key":"to drop","Fragments":["the"]},{"Key":"write boolean","Fragments":["statements"]},{"Key":"boolean statements","Fragments":["they","stand"]},{"Key":"statements they","Fragments":["would"]},{"Key":"is basically","Fragments":["redundant","always","solid.","the","a"]},{"Key":"basically redundant","Fragments":["in"]},{"Key":"redundant in","Fragments":["this"]},{"Key":"case, as","Fragments":["the"]},{"Key":"already returning","Fragments":["true"]},{"Key":"or false.","Fragments":["Could"]},{"Key":"false. Could","Fragments":["you"]},{"Key":"you compress","Fragments":["all"]},{"Key":"compress all","Fragments":["the"]},{"Key":"simple boolean","Fragments":["statement?"]},{"Key":"larger application","Fragments":["with"]},{"Key":"application with","Fragments":["high"]},{"Key":"with high","Fragments":["volume"]},{"Key":"high volume","Fragments":["these"]},{"Key":"volume these","Fragments":["types"]},{"Key":"these types","Fragments":["of"]},{"Key":"types of","Fragments":["decisions","tests"]},{"Key":"of decisions","Fragments":["can"]},{"Key":"decisions can","Fragments":["add"]},{"Key":"add up,","Fragments":["but"]},{"Key":"absolutely agree;","Fragments":["it"]},{"Key":"agree; it","Fragments":["is"]},{"Key":"quite neglible","Fragments":["in"]},{"Key":"neglible in","Fragments":["this"]},{"Key":"particular app","Fragments":["as"]},{"Key":"app as","Fragments":["it"]},{"Key":"likely take","Fragments":["thousands"]},{"Key":"take thousands","Fragments":["of"]},{"Key":"single ms","Fragments":["difference."]},{"Key":"use Pow","Fragments":["()."]},{"Key":"Pow ().","Fragments":["There"]},{"Key":"(). There","Fragments":["is"]},{"Key":"a trick","Fragments":["that","for","to"]},{"Key":"that @tamara","Fragments":["suggested"]},{"Key":"@tamara suggested","Fragments":["that"]},{"Key":"suggested that","Fragments":["works"]},{"Key":"with binary","Fragments":["conversion"]},{"Key":"binary conversion","Fragments":["(as","would"]},{"Key":"conversion (as","Fragments":["far"]},{"Key":"(as far","Fragments":["as","as"]},{"Key":"it cannot","Fragments":["work","be","determine"]},{"Key":"cannot work","Fragments":["for"]},{"Key":"other base","Fragments":["but"]},{"Key":"base but","Fragments":["I"]},{"Key":"be wrong.","Fragments":["I"]},{"Key":"have updated","Fragments":["my","my"]},{"Key":"extra char","Fragments":["array"]},{"Key":"unnecessary if","Fragments":["you're","loop,"]},{"Key":"any characters","Fragments":["are"]},{"Key":"are letters...","Fragments":["especially"]},{"Key":"letters... especially","Fragments":["since"]},{"Key":"you're already","Fragments":["employing"]},{"Key":"already employing","Fragments":["that"]},{"Key":"employing that","Fragments":["exact"]},{"Key":"that exact","Fragments":["same"]},{"Key":"same test","Fragments":["to"]},{"Key":"to populate","Fragments":["the","it.","the","list"]},{"Key":"populate the","Fragments":["array","Roster"]},{"Key":"array you're","Fragments":["checking."]},{"Key":"the 'replace'","Fragments":["function"]},{"Key":"'replace' function","Fragments":["to"]},{"Key":"replace 'x'","Fragments":["with"]},{"Key":"'x' with","Fragments":["the"]},{"Key":"the ordinal","Fragments":["number","and","and"]},{"Key":"ordinal number","Fragments":["is"]},{"Key":"is creative.","Fragments":["I"]},{"Key":"creative. I","Fragments":["don't"]},{"Key":"dictionary type","Fragments":["for"]},{"Key":"the days,","Fragments":["though;"]},{"Key":"days, though;","Fragments":["wouldn't"]},{"Key":"though; wouldn't","Fragments":["a"]},{"Key":"wouldn't a","Fragments":["list"]},{"Key":"list have","Fragments":["been"]},{"Key":" Nope.","Fragments":["That's"]},{"Key":"Nope. That's","Fragments":["why"]},{"Key":"That's why","Fragments":["I"]},{"Key":"the comment.","Fragments":["Without"]},{"Key":"comment. Without","Fragments":["the"]},{"Key":"Without the","Fragments":["details"]},{"Key":"the details","Fragments":["he"]},{"Key":"details he","Fragments":["mentioned"]},{"Key":"he mentioned","Fragments":["on"]},{"Key":"mentioned on","Fragments":["the"]},{"Key":"or an","Fragments":["example,","array","error"]},{"Key":"the \u003cb\u003e","Fragments":["Why"]},{"Key":"\u003cb\u003e Why","Fragments":["reverse?"]},{"Key":"Why reverse?","Fragments":["\u003c/b\u003e"]},{"Key":"reverse? \u003c/b\u003e","Fragments":["was"]},{"Key":"\u003c/b\u003e was","Fragments":["a"]},{"Key":"seems unnecessarily","Fragments":["convoluted."]},{"Key":"unnecessarily convoluted.","Fragments":["Why"]},{"Key":"convoluted. Why","Fragments":["do"]},{"Key":"the Ordinal","Fragments":["Number"]},{"Key":"Ordinal Number","Fragments":["and"]},{"Key":"and Gift","Fragments":["properties"]},{"Key":"Gift properties","Fragments":["with"]},{"Key":"a SongVerse","Fragments":["class?"]},{"Key":"Also, do","Fragments":["you"]},{"Key":"handle removing","Fragments":["'and'"]},{"Key":"removing 'and'","Fragments":["from"]},{"Key":"'and' from","Fragments":["the"]},{"Key":"wrap my","Fragments":["head"]},{"Key":"around what","Fragments":["you"]},{"Key":"were doing.","Fragments":["That"]},{"Key":"doing. That","Fragments":["doesn't"]},{"Key":"That doesn't","Fragments":["seem","surprise"]},{"Key":"like 'expressive'","Fragments":["code"]},{"Key":"'expressive' code","Fragments":["to"]},{"Key":"me. Do","Fragments":["you"]},{"Key":"any places","Fragments":["where"]},{"Key":"works, would","Fragments":["it"]},{"Key":"be obvious","Fragments":["to"]},{"Key":"future or","Fragments":["someone"]},{"Key":"or someone","Fragments":["else"]},{"Key":"else what","Fragments":["is"]},{"Key":"Well done!","Fragments":["When"]},{"Key":"done! When","Fragments":["the"]},{"Key":"and cumbersome","Fragments":["to"]},{"Key":"cumbersome to","Fragments":["use,"]},{"Key":"to use,","Fragments":["it","I"]},{"Key":"use, it","Fragments":["is"]},{"Key":"\"var\" instead,","Fragments":["to"]},{"Key":"instead, to","Fragments":["infer"]},{"Key":"to infer","Fragments":["the"]},{"Key":"infer the","Fragments":["type."]},{"Key":"Wow, apparently","Fragments":["I"]},{"Key":"apparently I","Fragments":["missed","can't"]},{"Key":"the boat","Fragments":["on"]},{"Key":"boat on","Fragments":["this"]},{"Key":"this assignment.","Fragments":["I'm","I"]},{"Key":"assignment. I'm","Fragments":["storing"]},{"Key":"I'm storing","Fragments":["too"]},{"Key":"storing too","Fragments":["much"]},{"Key":"much data","Fragments":["in"]},{"Key":"my array.","Fragments":["A"]},{"Key":"array. A","Fragments":["new"]},{"Key":"A new","Fragments":["implementation"]},{"Key":"new implementation","Fragments":["is"]},{"Key":" Fairly","Fragments":["trivial"]},{"Key":"Fairly trivial","Fragments":["in"]},{"Key":"trivial in","Fragments":["C#,"]},{"Key":"C#, but","Fragments":["I","it's"]},{"Key":"learn two","Fragments":["new"]},{"Key":"new things","Fragments":["from","and"]},{"Key":"things from","Fragments":["the"]},{"Key":"submissions, so","Fragments":["it","I"]},{"Key":"was worth","Fragments":["it."]},{"Key":"worth it.","Fragments":["I","Definitely"]},{"Key":"write `1E9`","Fragments":["and"]},{"Key":"`1E9` and","Fragments":["I"]},{"Key":"a `Date`","Fragments":["property"]},{"Key":"`Date` property","Fragments":["on"]},{"Key":"property on","Fragments":["`DateTime`."]},{"Key":"on `DateTime`.","Fragments":["I've"]},{"Key":"`DateTime`. I've","Fragments":["been"]},{"Key":"using C#","Fragments":["since"]},{"Key":"since 1.0,","Fragments":["it"]},{"Key":"1.0, it","Fragments":["is"]},{"Key":"you miss","Fragments":[":smile:"]},{"Key":"Ah, true.","Fragments":["I"]},{"Key":"it. Again,","Fragments":["I","I"]},{"Key":"Again, I","Fragments":["should","appreciate"]},{"Key":"a List\u003cTupple\u003c\u003e\u003e","Fragments":["and"]},{"Key":"List\u003cTupple\u003c\u003e\u003e and","Fragments":["not"]},{"Key":"dictionary (or","Fragments":["List"]},{"Key":"(or List","Fragments":["of"]},{"Key":" Yeah.","Fragments":["It","To"]},{"Key":"Yeah. It","Fragments":["would"]},{"Key":"nice if","Fragments":["all"]},{"Key":"all customer","Fragments":["requirements"]},{"Key":"customer requirements","Fragments":["were"]},{"Key":"requirements were","Fragments":["_completely_"]},{"Key":"were _completely_","Fragments":["specified."]},{"Key":"_completely_ specified.","Fragments":[":)"]},{"Key":"of division.","Fragments":["How"]},{"Key":"division. How","Fragments":["long"]},{"Key":"How long","Fragments":["did","did"]},{"Key":"long did","Fragments":["it","that"]},{"Key":"take to","Fragments":["run","remove"]},{"Key":"you at","Fragments":["least","least","least"]},{"Key":"least have","Fragments":["divisor"]},{"Key":"have divisor","Fragments":["skip"]},{"Key":"divisor skip","Fragments":["all"]},{"Key":"skip all","Fragments":["the"]},{"Key":"the even","Fragments":["values","values","numbers.","numbers"]},{"Key":"even values","Fragments":["(after","of"]},{"Key":"values (after","Fragments":["2"]},{"Key":"(after 2","Fragments":["of","of"]},{"Key":"2 of","Fragments":["course)?","course)?"]},{"Key":"didn't mean","Fragments":["to","caching"]},{"Key":"be cryptic.","Fragments":["It"]},{"Key":"cryptic. It","Fragments":["seemed"]},{"Key":"seemed natural","Fragments":["to"]},{"Key":"me, so","Fragments":["I"]},{"Key":"didn't elaborate","Fragments":["too"]},{"Key":"elaborate too","Fragments":["much."]},{"Key":"much. And","Fragments":["yes,"]},{"Key":"yes, it","Fragments":["would","works"]},{"Key":"any base.","Fragments":["I"]},{"Key":"base. I","Fragments":["can"]},{"Key":"use hexadecimal","Fragments":["as"]},{"Key":"hexadecimal as","Fragments":["an"]},{"Key":"an example.","Fragments":["Say"]},{"Key":"example. Say","Fragments":["I"]},{"Key":"Say I","Fragments":["am"]},{"Key":"am parsing","Fragments":["the"]},{"Key":"string 17FD3.","Fragments":["If"]},{"Key":"17FD3. If","Fragments":["you"]},{"Key":"your trusty","Fragments":["calculator"]},{"Key":"trusty calculator","Fragments":["out"]},{"Key":"calculator out","Fragments":["and"]},{"Key":"the conversion,","Fragments":["that"]},{"Key":"conversion, that","Fragments":["is"]},{"Key":"is 98,259.","Fragments":["To"]},{"Key":"98,259. To","Fragments":["process"]},{"Key":"To process","Fragments":["this","in"]},{"Key":"process this","Fragments":["in"]},{"Key":"in reverse","Fragments":["you","order."]},{"Key":"reverse you","Fragments":["add"]},{"Key":"add 3*16^0","Fragments":["+"]},{"Key":"3*16^0 +","Fragments":["13*16^1"]},{"Key":"+ 13*16^1","Fragments":["+"]},{"Key":"13*16^1 +","Fragments":["15*16^2"]},{"Key":"+ 15*16^2","Fragments":["+"]},{"Key":"15*16^2 +","Fragments":["7*16^3"]},{"Key":"+ 7*16^3","Fragments":["+"]},{"Key":"7*16^3 +","Fragments":["1*16^4,"]},{"Key":"+ 1*16^4,","Fragments":["right?"]},{"Key":"process in","Fragments":["left"]},{"Key":"in left","Fragments":["to"]},{"Key":"to right","Fragments":["order,","side"]},{"Key":"right order,","Fragments":["you"]},{"Key":"order, you","Fragments":["initially"]},{"Key":"you initially","Fragments":["assign"]},{"Key":"initially assign","Fragments":["your"]},{"Key":"assign your","Fragments":["value"]},{"Key":"your value","Fragments":["to"]},{"Key":"to 0","Fragments":["and","instead."]},{"Key":"then for","Fragments":["each"]},{"Key":"each digit","Fragments":["you","in","in","in","in","in","in","in","independently,"]},{"Key":"digit you","Fragments":["multiply"]},{"Key":"you multiply","Fragments":["your"]},{"Key":"multiply your","Fragments":["current"]},{"Key":"current value","Fragments":["times","(number)."]},{"Key":"value times","Fragments":["your"]},{"Key":"times your","Fragments":["base"]},{"Key":"your base","Fragments":["and"]},{"Key":"base and","Fragments":["add"]},{"Key":"number value","Fragments":["of"]},{"Key":"current digit.","Fragments":["In"]},{"Key":"digit. In","Fragments":["our"]},{"Key":"In our","Fragments":["example"]},{"Key":"our example","Fragments":["value"]},{"Key":"example value","Fragments":["starts"]},{"Key":"value starts","Fragments":["at"]},{"Key":"at zero","Fragments":["and"]},{"Key":"then becomes","Fragments":["1"]},{"Key":"becomes 1","Fragments":["(0*16"]},{"Key":"1 (0*16","Fragments":["+"]},{"Key":"(0*16 +","Fragments":["1)"]},{"Key":"then 23","Fragments":["(1*16"]},{"Key":"23 (1*16","Fragments":["+"]},{"Key":"(1*16 +","Fragments":["1)"]},{"Key":"then 383","Fragments":["(23*16"]},{"Key":"383 (23*16","Fragments":["+"]},{"Key":"(23*16 +","Fragments":["15)"]},{"Key":"+ 15)","Fragments":["and"]},{"Key":"15) and","Fragments":["then"]},{"Key":"then 6141","Fragments":["(383*16"]},{"Key":"6141 (383*16","Fragments":["+"]},{"Key":"(383*16 +","Fragments":["13)"]},{"Key":"+ 13)","Fragments":["and"]},{"Key":"13) and","Fragments":["finally"]},{"Key":"finally 98259","Fragments":["(6141*16"]},{"Key":"98259 (6141*16","Fragments":["+"]},{"Key":"(6141*16 +","Fragments":["3)."]},{"Key":"suspect that","Fragments":["Int.Parse()"]},{"Key":"that Int.Parse()","Fragments":["and","calls"]},{"Key":"Int.Parse() and","Fragments":["similar"]},{"Key":"and similar","Fragments":["functions"]},{"Key":"similar functions","Fragments":["use"]},{"Key":"functions use","Fragments":["this"]},{"Key":"same method,","Fragments":["so"]},{"Key":"look it","Fragments":["up.","up"]},{"Key":"It appears","Fragments":["that","that"]},{"Key":"Int.Parse() calls","Fragments":["Number.ParseInt32"]},{"Key":"calls Number.ParseInt32","Fragments":["which"]},{"Key":"Number.ParseInt32 which","Fragments":["calls"]},{"Key":"which calls","Fragments":["Number.NumberToInt32,"]},{"Key":"calls Number.NumberToInt32,","Fragments":["which"]},{"Key":"Number.NumberToInt32, which","Fragments":["I've"]},{"Key":"which I've","Fragments":["included"]},{"Key":"I've included","Fragments":["here."]},{"Key":"private unsafe","Fragments":["static"]},{"Key":"unsafe static","Fragments":["Boolean"]},{"Key":"static Boolean","Fragments":["NumberToInt32(ref"]},{"Key":"Boolean NumberToInt32(ref","Fragments":["NumberBuffer"]},{"Key":"NumberToInt32(ref NumberBuffer","Fragments":["number,"]},{"Key":"NumberBuffer number,","Fragments":["ref"]},{"Key":"number, ref","Fragments":["Int32"]},{"Key":"ref Int32","Fragments":["value)"]},{"Key":"Int32 value)","Fragments":["{"]},{"Key":" Int32","Fragments":["i","n"]},{"Key":"Int32 i","Fragments":["="]},{"Key":"(i \u003e","Fragments":["Int32Precision"]},{"Key":"\u003e Int32Precision","Fragments":["||"]},{"Key":"Int32Precision ||","Fragments":["i"]},{"Key":"|| i","Fragments":["\u003c","*"]},{"Key":"\u003c number.precision)","Fragments":["{"]},{"Key":" char","Fragments":["*"]},{"Key":"char *","Fragments":["p"]},{"Key":"* p","Fragments":["="]},{"Key":"p =","Fragments":["number.digits;"]},{"Key":" Contract.Assert(p","Fragments":["!="]},{"Key":"Contract.Assert(p !=","Fragments":["null,"]},{"Key":"!= null,","Fragments":["\"\");"]},{"Key":"Int32 n","Fragments":["="]},{"Key":"n =","Fragments":["0;","-n;","1;","\"text\";"]},{"Key":"while (--i","Fragments":["\u003e="]},{"Key":"(--i \u003e=","Fragments":["0)"]},{"Key":"\u003e= 0)","Fragments":["{"]},{"Key":"if ((UInt32)n","Fragments":["\u003e"]},{"Key":"((UInt32)n \u003e","Fragments":["(0x7FFFFFFF"]},{"Key":"\u003e (0x7FFFFFFF","Fragments":["/"]},{"Key":"(0x7FFFFFFF /","Fragments":["10))"]},{"Key":"/ 10))","Fragments":["{"]},{"Key":" n","Fragments":["*=","+=","=","="]},{"Key":"n *=","Fragments":["10;"]},{"Key":"if (*p","Fragments":["!="]},{"Key":"(*p !=","Fragments":["'\\0')"]},{"Key":"!= '\\0')","Fragments":["{"]},{"Key":"n +=","Fragments":["(Int32)(*p++"]},{"Key":"+= (Int32)(*p++","Fragments":["-"]},{"Key":"(Int32)(*p++ -","Fragments":["'0');"]},{"Key":"if (number.sign)","Fragments":["{"]},{"Key":"if (n","Fragments":["\u003e","\u003c"]},{"Key":"(n \u003e","Fragments":["0)"]},{"Key":"(n \u003c","Fragments":["0)"]},{"Key":"\u003c 0)","Fragments":["{"]},{"Key":"value =","Fragments":["n;"]},{"Key":"The bool","Fragments":["variables"]},{"Key":"can treat","Fragments":["the"]},{"Key":"treat the","Fragments":["calls"]},{"Key":"the calls","Fragments":["to"]},{"Key":"methods the","Fragments":["same"]},{"Key":"variable set","Fragments":["from"]},{"Key":"set from","Fragments":["their"]},{"Key":"from their","Fragments":["response."]},{"Key":"bool isYelling","Fragments":["="]},{"Key":"isYelling =","Fragments":["IsYELLING(comment);"]},{"Key":"your particular","Fragments":["approach"]},{"Key":"particular approach","Fragments":["to"]},{"Key":"to detecting","Fragments":["yelling,"]},{"Key":"detecting yelling,","Fragments":["and"]},{"Key":"yelling, and","Fragments":["I'm"]},{"Key":"I'm kinda","Fragments":["intrigued"]},{"Key":"kinda intrigued","Fragments":["by"]},{"Key":"intrigued by","Fragments":["it."]},{"Key":"by it.","Fragments":["I'm"]},{"Key":"it. I'm","Fragments":["curious"]},{"Key":"compare it's","Fragments":["performance"]},{"Key":"it's performance","Fragments":["to"]},{"Key":"performance to","Fragments":["other"]},{"Key":"Sure, int.Parse()","Fragments":["would"]},{"Key":"int.Parse() would","Fragments":["be"]},{"Key":"readable. It","Fragments":["is","isn't","makes","can"]},{"Key":"the c.ToString()","Fragments":["that"]},{"Key":"c.ToString() that","Fragments":["I"]},{"Key":"don't like.","Fragments":["Creating"]},{"Key":"like. Creating","Fragments":["a"]},{"Key":"string means","Fragments":["an"]},{"Key":"means an","Fragments":["allocation,"]},{"Key":"an allocation,","Fragments":["which"]},{"Key":"allocation, which","Fragments":["is"]},{"Key":"tossed away","Fragments":["almost"]},{"Key":"away almost","Fragments":["immediately"]},{"Key":"almost immediately","Fragments":["and"]},{"Key":"immediately and","Fragments":["a"]},{"Key":"the (1)characters","Fragments":["in"]},{"Key":"(1)characters in","Fragments":["the"]},{"Key":"string, when","Fragments":["all"]},{"Key":"want is","Fragments":["to"]},{"Key":"the hex","Fragments":["values"]},{"Key":"hex values","Fragments":["0x30"]},{"Key":"values 0x30","Fragments":["through"]},{"Key":"0x30 through","Fragments":["0x39"]},{"Key":"through 0x39","Fragments":["to"]},{"Key":"0x39 to","Fragments":["0-9."]},{"Key":"to 0-9.","Fragments":["If"]},{"Key":"0-9. If","Fragments":["I"]},{"Key":"a place","Fragments":["where"]},{"Key":"time but","Fragments":["readability"]},{"Key":"but readability","Fragments":["were"]},{"Key":"readability were","Fragments":["important"]},{"Key":"were important","Fragments":["I"]},{"Key":"important I","Fragments":["could"]},{"Key":"extension function","Fragments":["for"]},{"Key":"for int.Parse()","Fragments":["that"]},{"Key":"int.Parse() that","Fragments":["would"]},{"Key":"char instead","Fragments":["of"]},{"Key":"the (ch","Fragments":["-"]},{"Key":"(ch -","Fragments":["'0')"]},{"Key":"- '0')","Fragments":["there."]},{"Key":" Okay.","Fragments":["If","No","Maybe"]},{"Key":"Okay. If","Fragments":["you"]},{"Key":"get \"\"","Fragments":["instead"]},{"Key":"\"\" instead","Fragments":["of"]},{"Key":"an ArgumentOutOfRangeException(),","Fragments":["that"]},{"Key":"ArgumentOutOfRangeException(), that","Fragments":["would"]},{"Key":"be just","Fragments":["fine."]},{"Key":"change would","Fragments":["be","be"]},{"Key":"leverage String.IsNullOrWhiteSpace","Fragments":["rather"]},{"Key":"String.IsNullOrWhiteSpace rather","Fragments":["than"]},{"Key":"trim and","Fragments":["then"]},{"Key":"checking length","Fragments":["as"]},{"Key":"length as","Fragments":["it","it","part"]},{"Key":"for null,","Fragments":["empty,","although"]},{"Key":"null, empty,","Fragments":["and"]},{"Key":"empty, and","Fragments":["whitespace","check"]},{"Key":"and whitespace","Fragments":["only"]},{"Key":"whitespace only","Fragments":["strings"]},{"Key":"only strings","Fragments":["in"]},{"Key":"don't \"prefer","Fragments":["it\","]},{"Key":"\"prefer it\",","Fragments":["it"]},{"Key":"it\", it","Fragments":["would"]},{"Key":"really depend","Fragments":["on"]},{"Key":"business requirements...","Fragments":["Since"]},{"Key":"requirements... Since","Fragments":["the"]},{"Key":"test just","Fragments":["said"]},{"Key":"just said","Fragments":["0"]},{"Key":"said 0","Fragments":["(which"]},{"Key":"0 (which","Fragments":["does"]},{"Key":"(which does","Fragments":["not"]},{"Key":"not exist)","Fragments":["should"]},{"Key":"exist) should","Fragments":["return"]},{"Key":"return \"\",","Fragments":["I"]},{"Key":"\"\", I","Fragments":["assumed"]},{"Key":"assumed any","Fragments":["negative"]},{"Key":"any negative","Fragments":["number","numbers."]},{"Key":"number should","Fragments":["do"]},{"Key":"your UniqueSides","Fragments":["idea,"]},{"Key":"UniqueSides idea,","Fragments":["although"]},{"Key":"idea, although","Fragments":["I"]},{"Key":"the name,","Fragments":["should"]},{"Key":"name, should","Fragments":["it"]},{"Key":"should it","Fragments":["be","just","do"]},{"Key":"to lie","Fragments":["about"]},{"Key":"lie about","Fragments":["it,"]},{"Key":"couldn't wait","Fragments":["to"]},{"Key":"wait to","Fragments":["look"]},{"Key":"people's approaches","Fragments":["to"]},{"Key":"approaches to","Fragments":["this"]},{"Key":"problem. That's","Fragments":["part"]},{"Key":"That's part","Fragments":["of"]},{"Key":"the fun","Fragments":["of","of","in"]},{"Key":"fun of","Fragments":["this","it"]},{"Key":"this website.","Fragments":["I"]},{"Key":"website. I","Fragments":["found"]},{"Key":"found this","Fragments":["example"]},{"Key":"example disappointing.","Fragments":["It's"]},{"Key":"disappointing. It's","Fragments":["a"]},{"Key":"very brute-force","Fragments":["method."]},{"Key":"Sure, these","Fragments":["are"]},{"Key":"are fairly","Fragments":["trivial"]},{"Key":"trivial examples","Fragments":["and"]},{"Key":"most real","Fragments":["world"]},{"Key":"world examples","Fragments":["you"]},{"Key":"examples you","Fragments":["would"]},{"Key":"property or","Fragments":["method"]},{"Key":"or method","Fragments":["that"]},{"Key":"original input.","Fragments":["My"]},{"Key":"input. My","Fragments":["point"]},{"Key":"My point","Fragments":["wasn't","is"]},{"Key":"point wasn't","Fragments":["that"]},{"Key":"wasn't that","Fragments":["I","different,"]},{"Key":"possible, but","Fragments":["that"]},{"Key":"only wanted","Fragments":["to"]},{"Key":"score once.","Fragments":["If"]},{"Key":"If Score()","Fragments":["(the"]},{"Key":"Score() (the","Fragments":["non-static"]},{"Key":"(the non-static","Fragments":["one)"]},{"Key":"non-static one)","Fragments":["is"]},{"Key":"one) is","Fragments":["called"]},{"Key":"avoid recalculating","Fragments":["it."]},{"Key":"calculation in","Fragments":["the"]},{"Key":"variable named","Fragments":["score","'newValue'","i."]},{"Key":"named score","Fragments":["that"]},{"Key":"score that","Fragments":["was"]},{"Key":"was initialized","Fragments":["to"]},{"Key":"initialized to","Fragments":["-1","0."]},{"Key":"to -1","Fragments":["and"]},{"Key":"-1 and","Fragments":["then","if"]},{"Key":"then in","Fragments":["Score()"]},{"Key":"in Score()","Fragments":["you"]},{"Key":"Score() you","Fragments":["could"]},{"Key":"could check","Fragments":["if","count_array[4]","if"]},{"Key":"is -1","Fragments":["and"]},{"Key":"was you","Fragments":["would"]},{"Key":"would calculate","Fragments":["the"]},{"Key":"score and","Fragments":["save"]},{"Key":"save it","Fragments":["in"]},{"Key":"this variable.","Fragments":["That"]},{"Key":"variable. That","Fragments":["way"]},{"Key":"way multiple","Fragments":["calls"]},{"Key":"multiple calls","Fragments":["to","to"]},{"Key":"to Score()","Fragments":["would"]},{"Key":"Score() would","Fragments":["still"]},{"Key":"still only","Fragments":["have"]},{"Key":"work done","Fragments":["once."]},{"Key":"be clear","Fragments":["-"]},{"Key":"clear -","Fragments":["I'm"]},{"Key":"being really","Fragments":["picky"]},{"Key":"picky here","Fragments":["-"]},{"Key":"my job.","Fragments":[":)"]},{"Key":"job. :)","Fragments":["You"]},{"Key":":) You","Fragments":["are"]},{"Key":"are welcome","Fragments":["to"]},{"Key":"welcome to","Fragments":["ignore"]},{"Key":"ignore it","Fragments":["as"]},{"Key":"world programming","Fragments":["you"]},{"Key":"programming you","Fragments":["are"]},{"Key":"are thinking","Fragments":["about"]},{"Key":"about avoiding","Fragments":["extra"]},{"Key":"avoiding extra","Fragments":["work"]},{"Key":"work where","Fragments":["possible.","bit"]},{"Key":"I'm surprised","Fragments":["that"]},{"Key":"surprised that","Fragments":["this"]},{"Key":"works, considering","Fragments":["you"]},{"Key":"considering you","Fragments":["are","already"]},{"Key":"are enumerating","Fragments":["a"]},{"Key":"index to","Fragments":["build","set"]},{"Key":"From the","Fragments":["docs:","context"]},{"Key":"For purposes","Fragments":["of"]},{"Key":"of enumeration,","Fragments":["each"]},{"Key":"enumeration, each","Fragments":["item"]},{"Key":"each item","Fragments":["in"]},{"Key":"item in","Fragments":["the","lookup.","list)","the"]},{"Key":"dictionary is","Fragments":["treated"]},{"Key":"is treated","Fragments":["as"]},{"Key":" KeyValuePair\u003cTKey,","Fragments":["TValue\u003e"]},{"Key":"KeyValuePair\u003cTKey, TValue\u003e","Fragments":["structure"]},{"Key":"TValue\u003e structure","Fragments":["representing"]},{"Key":"structure representing","Fragments":["a"]},{"Key":"representing a","Fragments":["value"]},{"Key":"order in","Fragments":["which","the"]},{"Key":"the items","Fragments":["are","stored","stored","are","into","in"]},{"Key":"items are","Fragments":["returned","in"]},{"Key":"are returned","Fragments":["is"]},{"Key":"to say,","Fragments":["the"]},{"Key":"say, the","Fragments":["fact"]},{"Key":"tests is","Fragments":["completely"]},{"Key":"completely wigging","Fragments":["me"]},{"Key":"wigging me","Fragments":["out."]},{"Key":"me out.","Fragments":[":-D"]},{"Key":"an OrderedDictionary","Fragments":["so"]},{"Key":"OrderedDictionary so","Fragments":["I"]},{"Key":"can sleep","Fragments":["at"]},{"Key":"sleep at","Fragments":["night?"]},{"Key":"Dictionary a","Fragments":["lot"]},{"Key":"a try-catch","Fragments":["block"]},{"Key":"try-catch block","Fragments":["on"]},{"Key":"the 'Verse'","Fragments":["method"]},{"Key":"'Verse' method","Fragments":["to"]},{"Key":"catch any","Fragments":["argument","situations"]},{"Key":"any argument","Fragments":["out"]},{"Key":"argument out","Fragments":["of"]},{"Key":"Finally, I","Fragments":["expanded"]},{"Key":"expanded the","Fragments":["_verse","calculations"]},{"Key":"the _verse","Fragments":["string[]"]},{"Key":"_verse string[]","Fragments":["to"]},{"Key":"string[] to","Fragments":["include"]},{"Key":"include \"and\"","Fragments":["and"]},{"Key":"\"and\" and","Fragments":["\"\\n\"."]},{"Key":"and \"\\n\".","Fragments":["I"]},{"Key":"\"\\n\". I","Fragments":["think"]},{"Key":"cleaner without","Fragments":["any"]},{"Key":"any string","Fragments":["data"]},{"Key":"string data","Fragments":["in"]},{"Key":"throw in","Fragments":["the"]},{"Key":"constructor, I","Fragments":["don't","think"]},{"Key":"construct an","Fragments":["invalid"]},{"Key":"invalid triangle.","Fragments":["I"]},{"Key":"triangle. I","Fragments":["also"]},{"Key":"sides and","Fragments":["do","that","_sides[2]"]},{"Key":"the `Kind()`","Fragments":["method."]},{"Key":"`Kind()` method.","Fragments":["It"]},{"Key":"current specs,","Fragments":["but"]},{"Key":"specs, but","Fragments":["I"]},{"Key":"sides for","Fragments":["any"]},{"Key":"any additional","Fragments":["operations"]},{"Key":"additional operations","Fragments":["on"]},{"Key":"operations on","Fragments":["a","the","ints,"]},{"Key":"attempt is","Fragments":["the","made"]},{"Key":"the typical","Fragments":["brute"]},{"Key":"typical brute","Fragments":["force"]},{"Key":"brute force","Fragments":["that","method"]},{"Key":"force that","Fragments":["most"]},{"Key":"that most","Fragments":["people"]},{"Key":"are using.","Fragments":["I"]},{"Key":"using. I","Fragments":["then"]},{"Key":"I then","Fragments":["saw","use"]},{"Key":"then saw","Fragments":["another"]},{"Key":"another person","Fragments":["count"]},{"Key":"person count","Fragments":["the"]},{"Key":"the distinct","Fragments":["sides"]},{"Key":"distinct sides","Fragments":["and"]},{"Key":"that gave","Fragments":["me","me"]},{"Key":"gave me","Fragments":["the","an","the","a"]},{"Key":"explicitly number","Fragments":["the"]},{"Key":"number the","Fragments":["enum","test","execution"]},{"Key":"and cast","Fragments":["directly"]},{"Key":"cast directly","Fragments":["from"]},{"Key":"directly from","Fragments":["that,","outside.","FindFirst()/FindLast()?"]},{"Key":"from that,","Fragments":["removing","but","I'm","looks"]},{"Key":"that, removing","Fragments":["all"]},{"Key":"removing all","Fragments":["the","special"]},{"Key":"expect some","Fragments":["will"]},{"Key":"some will","Fragments":["think"]},{"Key":"will think","Fragments":["it"]},{"Key":"too 'clever',","Fragments":["but"]},{"Key":"'clever', but","Fragments":["I"]},{"Key":" Wow!","Fragments":["How","I","So","Big"]},{"Key":"Wow! How","Fragments":["long"]},{"Key":"did that","Fragments":["take","because","because","as","(in","no-one"]},{"Key":"that take","Fragments":["on"]},{"Key":"take on","Fragments":["93,819,012,551?"]},{"Key":"on 93,819,012,551?","Fragments":["That"]},{"Key":"93,819,012,551? That","Fragments":["method"]},{"Key":"That method","Fragments":["would"]},{"Key":"do thousands","Fragments":["and"]},{"Key":"thousands and","Fragments":["potentially"]},{"Key":"and potentially","Fragments":["millions"]},{"Key":"potentially millions","Fragments":["of"]},{"Key":"of division","Fragments":["calls"]},{"Key":"division calls","Fragments":["(at"]},{"Key":"calls (at","Fragments":["least"]},{"Key":"(at least","Fragments":["894,000","it","in","to","on","on"]},{"Key":"least 894,000","Fragments":["divisions"]},{"Key":"894,000 divisions","Fragments":["in"]},{"Key":"divisions in","Fragments":["the"]},{"Key":"least skip","Fragments":["the"]},{"Key":"of 'divisor'","Fragments":["(after"]},{"Key":"'divisor' (after","Fragments":["2"]},{"Key":"the Sieve","Fragments":["of","of","of"]},{"Key":"Sieve of","Fragments":["Atkin","Eratosthenes","Atkin","Eratosthenes","Atkin","Atkins","Atkin","Atkin."]},{"Key":"of Atkin","Fragments":["just","is","is","sounds"]},{"Key":"Atkin just","Fragments":["for"]},{"Key":"example. I","Fragments":["had"]},{"Key":"an implementation","Fragments":["(in","of","detail","detail"]},{"Key":"implementation (in","Fragments":["a"]},{"Key":"(in a","Fragments":["different"]},{"Key":"different language)","Fragments":["that"]},{"Key":"language) that","Fragments":["I"]},{"Key":"had worked","Fragments":["out"]},{"Key":"worked out","Fragments":["in"]},{"Key":"it C#","Fragments":["pretty"]},{"Key":"C# pretty","Fragments":["quickly."]},{"Key":"test (all","Fragments":["cases)"]},{"Key":"(all cases)","Fragments":["in"]},{"Key":"cases) in","Fragments":["about"]},{"Key":"in about","Fragments":[".05"]},{"Key":"about .05","Fragments":["seconds"]},{"Key":".05 seconds","Fragments":["with"]},{"Key":"seconds with","Fragments":["this","a"]},{"Key":" Interesting!","Fragments":["I"]},{"Key":"Interesting! I","Fragments":["pulled"]},{"Key":"pulled down","Fragments":["your"]},{"Key":"down your","Fragments":["code"]},{"Key":"compared it","Fragments":["to"]},{"Key":"mine and","Fragments":["they"]},{"Key":"were pretty","Fragments":["similar"]},{"Key":"pretty similar","Fragments":["in"]},{"Key":"similar in","Fragments":["terms"]},{"Key":"of time.","Fragments":["So"]},{"Key":"time. So","Fragments":["I"]},{"Key":"I modified","Fragments":["the","my"]},{"Key":"test slightly,","Fragments":["testing"]},{"Key":"slightly, testing","Fragments":["93819012553"]},{"Key":"testing 93819012553","Fragments":["(factors"]},{"Key":"93819012553 (factors","Fragments":["are"]},{"Key":"(factors are","Fragments":["7,"]},{"Key":"are 7,","Fragments":["71,"]},{"Key":"7, 71,","Fragments":["and"]},{"Key":"71, and","Fragments":["188770649)"]},{"Key":"and 188770649)","Fragments":["which"]},{"Key":"188770649) which","Fragments":["is"]},{"Key":"2 larger","Fragments":["than"]},{"Key":"larger than","Fragments":["the","the","can","sqrt(num).","sqrt(num)","sqrt(num)","num","the","3999","0"]},{"Key":"other test","Fragments":["and"]},{"Key":"code ran","Fragments":["in","at","at"]},{"Key":"ran in","Fragments":["over"]},{"Key":"in over","Fragments":["3"]},{"Key":"over 3","Fragments":["seconds"]},{"Key":"3 seconds","Fragments":["(mine","(roughly"]},{"Key":"seconds (mine","Fragments":["was"]},{"Key":"(mine was","Fragments":["still"]},{"Key":"still about","Fragments":["0.07"]},{"Key":"about 0.07","Fragments":["seconds)."]},{"Key":"0.07 seconds).","Fragments":["(Note:"]},{"Key":"seconds). (Note:","Fragments":["I'm"]},{"Key":"(Note: I'm","Fragments":["not"]},{"Key":"not trying","Fragments":["to"]},{"Key":"to brag","Fragments":["-"]},{"Key":"brag -","Fragments":["I"]},{"Key":"I happened","Fragments":["to"]},{"Key":"happened to","Fragments":["have","get","me!","the","me"]},{"Key":"an efficient","Fragments":["prime"]},{"Key":"efficient prime","Fragments":["number"]},{"Key":"generator sitting","Fragments":["around"]},{"Key":"sitting around","Fragments":["so","from"]},{"Key":"around so","Fragments":["I"]},{"Key":"test writers","Fragments":["weren't"]},{"Key":"writers weren't","Fragments":["very"]},{"Key":"weren't very","Fragments":["concerned"]},{"Key":"very concerned","Fragments":["about"]},{"Key":"concerned about","Fragments":["performance","checking"]},{"Key":"and either","Fragments":["intentionally"]},{"Key":"either intentionally","Fragments":["picked"]},{"Key":"intentionally picked","Fragments":["and"]},{"Key":"picked and","Fragments":["easy"]},{"Key":"calculate number","Fragments":["of","of"]},{"Key":"just happened","Fragments":["to"]},{"Key":"Okay. No","Fragments":["problem."]},{"Key":"No problem.","Fragments":["I","I'm"]},{"Key":"the speed","Fragments":["of"]},{"Key":"speed of","Fragments":["lookup"]},{"Key":"of lookup","Fragments":["over"]},{"Key":"lookup over","Fragments":["the"]},{"Key":"the storage","Fragments":["cost.","of"]},{"Key":"The readme","Fragments":["is","has","specifically"]},{"Key":"readme is","Fragments":["a","(a:200"]},{"Key":"bit misleading.","Fragments":["If"]},{"Key":"misleading. If","Fragments":["you"]},{"Key":"are doing,","Fragments":["you","but"]},{"Key":"doing, you","Fragments":["will"]},{"Key":"no program","Fragments":["(my"]},{"Key":"program (my","Fragments":["first"]},{"Key":"(my first","Fragments":["submission"]},{"Key":"first submission","Fragments":["included","so"]},{"Key":"submission included","Fragments":["the"]},{"Key":"Main as","Fragments":["well","it's"]},{"Key":"well so","Fragments":["I"]},{"Key":"are coming","Fragments":["from)."]},{"Key":"coming from).","Fragments":["The"]},{"Key":"from). The","Fragments":["best"]},{"Key":"best thing","Fragments":["to"]},{"Key":"class (or,","Fragments":["in"]},{"Key":"(or, in","Fragments":["future"]},{"Key":"future exercises,","Fragments":["classes)","you"]},{"Key":"exercises, classes)","Fragments":["that"]},{"Key":"classes) that","Fragments":["pass"]},{"Key":"that pass","Fragments":["the","all"]},{"Key":"the included","Fragments":["unit"]},{"Key":"included unit","Fragments":["tests."]},{"Key":"tests. You","Fragments":["will"]},{"Key":"will definitely","Fragments":["need"]},{"Key":"definitely need","Fragments":["to"]},{"Key":"sure they","Fragments":["pass","weren't","are"]},{"Key":"they pass","Fragments":["before"]},{"Key":"pass before","Fragments":["submitting"]},{"Key":"before submitting","Fragments":["code"]},{"Key":"submitting code","Fragments":["and"]},{"Key":"will soon","Fragments":["get"]},{"Key":"soon get","Fragments":["hard"]},{"Key":"get hard","Fragments":["to"]},{"Key":"really covered","Fragments":["every"]},{"Key":"covered every","Fragments":["case."]},{"Key":"every case.","Fragments":["Having"]},{"Key":"case. Having","Fragments":["the"]},{"Key":"Having the","Fragments":["code","class"]},{"Key":"logic separate","Fragments":["from"]},{"Key":"separate from","Fragments":["the"]},{"Key":"the CLUI","Fragments":["code"]},{"Key":"CLUI code","Fragments":["will"]},{"Key":"help readability","Fragments":["as","iMHO)"]},{"Key":"Good solution,","Fragments":["though"]},{"Key":"solution, though","Fragments":["it"]},{"Key":"very extendable.","Fragments":["If"]},{"Key":"extendable. If","Fragments":["someone"]},{"Key":"someone decided","Fragments":["that"]},{"Key":"be strings","Fragments":["for"]},{"Key":"next 100","Fragments":["prime"]},{"Key":"100 prime","Fragments":["numbers"]},{"Key":"prime numbers","Fragments":["you","\"correctly\"","up","only."]},{"Key":"numbers you","Fragments":["would"]},{"Key":"have write","Fragments":["a"]},{"Key":"whole bunch","Fragments":["more"]},{"Key":"bunch more","Fragments":["code."]},{"Key":"more code.","Fragments":["A"]},{"Key":"code. A","Fragments":["loop"]},{"Key":"A loop","Fragments":["with"]},{"Key":"table would","Fragments":["solve","be"]},{"Key":"would solve","Fragments":["that."]},{"Key":"saw @cary","Fragments":["use"]},{"Key":"@cary use","Fragments":["Unique()"]},{"Key":"use Unique()","Fragments":["to"]},{"Key":"Unique() to","Fragments":["get"]},{"Key":"side count","Fragments":["and"]},{"Key":"it gave","Fragments":["me"]},{"Key":"me an","Fragments":["idea"]},{"Key":"to slim","Fragments":["things"]},{"Key":"slim things","Fragments":["down"]},{"Key":"things down","Fragments":["by"]},{"Key":"down by","Fragments":["casting"]},{"Key":"by casting","Fragments":["it"]},{"Key":"casting it","Fragments":["to"]},{"Key":"clean. However,","Fragments":["you"]},{"Key":"save yourself","Fragments":["the","the","some"]},{"Key":"yourself the","Fragments":["second","extension"]},{"Key":"second year%4==0","Fragments":["check"]},{"Key":"year%4==0 check","Fragments":["on"]},{"Key":"number by","Fragments":["returning"]},{"Key":"conditional rather","Fragments":["than"]},{"Key":"than simply","Fragments":["setting"]},{"Key":"simply setting","Fragments":["x"]},{"Key":"setting x","Fragments":["to"]},{"Key":"If you'd","Fragments":["like,","like,","like,"]},{"Key":"you'd like,","Fragments":["you","you","you"]},{"Key":"like, you","Fragments":["could","could","could"]},{"Key":"could implement","Fragments":["this","this","this"]},{"Key":"implement this","Fragments":["very","very","very","all"]},{"Key":"very shortly","Fragments":["in","in","in"]},{"Key":"shortly in","Fragments":["a","a","a"]},{"Key":"```return first.Zip(second,","Fragments":["(l,"]},{"Key":"first.Zip(second, (l,","Fragments":["r)"]},{"Key":"(l, r)","Fragments":["=\u003e","=\u003e","=\u003e","=\u003e"]},{"Key":"r) =\u003e","Fragments":["l","l","l","l"]},{"Key":"=\u003e l","Fragments":["!=","!=","!=","!="]},{"Key":"l !=","Fragments":["r","r","r","r"]},{"Key":"!= r","Fragments":["?","?","?","?"]},{"Key":"r ?","Fragments":["1","1","1","1"]},{"Key":" Ooo.","Fragments":["I"]},{"Key":"Ooo. I","Fragments":["like"]},{"Key":"Zip call.","Fragments":["Just"]},{"Key":"call. Just","Fragments":["need"]},{"Key":"Just need","Fragments":["to"]},{"Key":"thinking how","Fragments":["to"]},{"Key":"handle this","Fragments":["one."]},{"Key":"I coded","Fragments":["it"]},{"Key":"coded it","Fragments":["this"]},{"Key":"way thinking","Fragments":["it"]},{"Key":"long time...","Fragments":["However,"]},{"Key":"time... However,","Fragments":["it"]},{"Key":"However, it","Fragments":["goes","would"]},{"Key":"it goes","Fragments":["super","into","into"]},{"Key":"goes super","Fragments":["fast,"]},{"Key":"super fast,","Fragments":["so"]},{"Key":"fast, so","Fragments":["I"]},{"Key":"it. Even","Fragments":["if"]},{"Key":"you skipped","Fragments":["every"]},{"Key":"skipped every","Fragments":["other"]},{"Key":"every other","Fragments":["letter..."]},{"Key":"other letter...","Fragments":["1/2"]},{"Key":"letter... 1/2","Fragments":["Big"]},{"Key":"1/2 Big","Fragments":["O"]},{"Key":"Big O","Fragments":["="]},{"Key":"O =","Fragments":["Big"]},{"Key":"= Big","Fragments":["O."]},{"Key":"Big O.","Fragments":["It"]},{"Key":"O. It","Fragments":["wouldn't"]},{"Key":"be log","Fragments":["Big"]},{"Key":"log Big","Fragments":["O,"]},{"Key":"Big O,","Fragments":["so"]},{"Key":"O, so","Fragments":["it"]},{"Key":"a pointless","Fragments":["exercise."]},{"Key":"pointless exercise.","Fragments":["(Runs"]},{"Key":"exercise. (Runs","Fragments":["in"]},{"Key":"(Runs in","Fragments":["under"]},{"Key":"in under","Fragments":["25"]},{"Key":"under 25","Fragments":["ms)"]},{"Key":"```return aStrand.Zip(bStrand,","Fragments":["(l,"]},{"Key":"aStrand.Zip(bStrand, (l,","Fragments":["r)"]},{"Key":"a Dictionary\u003cchar,","Fragments":["int\u003e"]},{"Key":"Dictionary\u003cchar, int\u003e","Fragments":["where","NucleotideCounts","with"]},{"Key":"int\u003e where","Fragments":["the"]},{"Key":"key and","Fragments":["the","value","so"]},{"Key":"score is","Fragments":["the","509.","called,"]},{"Key":"the value.","Fragments":["Then"]},{"Key":"value. Then","Fragments":["you"]},{"Key":"simply do","Fragments":["\u003ccode\u003eresult"]},{"Key":"do \u003ccode\u003eresult","Fragments":["="]},{"Key":"\u003ccode\u003eresult =","Fragments":["_letterScores[lettter]\u003c/code\u003e?"]},{"Key":"= _letterScores[lettter]\u003c/code\u003e?","Fragments":["Of"]},{"Key":"_letterScores[lettter]\u003c/code\u003e? Of","Fragments":["course"]},{"Key":"the KeyNotFoundException,","Fragments":["but"]},{"Key":"KeyNotFoundException, but","Fragments":["that"]},{"Key":"idea. You","Fragments":["could","can","already"]},{"Key":"could pass","Fragments":["in"]},{"Key":"conversion into","Fragments":["another"]},{"Key":"another method","Fragments":["and"]},{"Key":"class might","Fragments":["be"]},{"Key":"overkill but","Fragments":["I"]},{"Key":"data grouped","Fragments":["together."]},{"Key":"grouped together.","Fragments":["I"]},{"Key":"together. I","Fragments":["guess"]},{"Key":"array instead.","Fragments":["I"]},{"Key":"instead. I","Fragments":["probably","will"]},{"Key":"the taking","Fragments":["out"]},{"Key":"out or","Fragments":["adding"]},{"Key":"or adding","Fragments":["of"]},{"Key":"adding of","Fragments":["and"]},{"Key":"of and","Fragments":["for"]},{"Key":"what @milton","Fragments":["said."]},{"Key":"Also, You","Fragments":["don't"]},{"Key":"condition evaluated","Fragments":["to"]},{"Key":"evaluated to","Fragments":["false,"]},{"Key":"the seed","Fragments":["was"]},{"Key":"seed was","Fragments":["different"]},{"Key":"was different","Fragments":["each"]},{"Key":"different each","Fragments":["time","time."]},{"Key":"using something","Fragments":["guaranteed","that","like"]},{"Key":"something guaranteed","Fragments":["to"]},{"Key":"guaranteed to","Fragments":["be","stay","have","be","work.","be"]},{"Key":"be different","Fragments":["from"]},{"Key":"different from","Fragments":["Robot"]},{"Key":"from Robot","Fragments":["to"]},{"Key":"Robot to","Fragments":["Robot"]},{"Key":"to Robot","Fragments":["(i.e."]},{"Key":"Robot (i.e.","Fragments":["Guid)!"]},{"Key":"into arrays,","Fragments":["Zip"]},{"Key":"arrays, Zip","Fragments":["will"]},{"Key":"fine on","Fragments":["the"]},{"Key":"For example:","Fragments":["return"]},{"Key":"example: return","Fragments":["a.Zip(b,"]},{"Key":"return a.Zip(b,","Fragments":["(l,"]},{"Key":"a.Zip(b, (l,","Fragments":["r)"]},{"Key":"```return dn1.Zip(dn2,","Fragments":["(l,"]},{"Key":"dn1.Zip(dn2, (l,","Fragments":["r)"]},{"Key":"is SetScore","Fragments":["public?"]},{"Key":"SetScore public?","Fragments":["Did"]},{"Key":"public? Did","Fragments":["you"]},{"Key":"really mean","Fragments":["to"]},{"Key":"to expose","Fragments":["it","intermediate"]},{"Key":"expose it","Fragments":["to"]},{"Key":"Is \u003ccode\u003e!text.All(char.IsWhiteSpace)\u003c/code\u003e","Fragments":["necessary?"]},{"Key":"\u003ccode\u003e!text.All(char.IsWhiteSpace)\u003c/code\u003e necessary?","Fragments":["Won't"]},{"Key":"necessary? Won't","Fragments":["the"]},{"Key":"Won't the","Fragments":["following"]},{"Key":"following check","Fragments":["(\u003ccode\u003e!text.Any(char.IsLetterOrDigit)\u003c/code\u003e)"]},{"Key":"check (\u003ccode\u003e!text.Any(char.IsLetterOrDigit)\u003c/code\u003e)","Fragments":["catch"]},{"Key":"(\u003ccode\u003e!text.Any(char.IsLetterOrDigit)\u003c/code\u003e) catch","Fragments":["any"]},{"Key":"any situations","Fragments":["where"]},{"Key":"situations where","Fragments":["there"]},{"Key":"your score","Fragments":["dictionary"]},{"Key":"score dictionary","Fragments":["to"]},{"Key":"score of","Fragments":["a","255"]},{"Key":"a letter?","Fragments":["Right"]},{"Key":"letter? Right","Fragments":["now"]},{"Key":"call Contains","Fragments":["on"]},{"Key":"Contains on","Fragments":["up"]},{"Key":"on up","Fragments":["to"]},{"Key":"to seven","Fragments":["different"]},{"Key":"seven different","Fragments":["strings."]},{"Key":"the points","Fragments":["for","are","of"]},{"Key":"each tile","Fragments":["redundantly..."]},{"Key":"Had trouble","Fragments":["with"]},{"Key":"trouble with","Fragments":["the","this","trying","missing","putting","putting"]},{"Key":"the caps","Fragments":["requirement"]},{"Key":"caps requirement","Fragments":["so"]},{"Key":"requirement so","Fragments":["this"]},{"Key":"is after","Fragments":["a"]},{"Key":"of rework.","Fragments":["Included"]},{"Key":"rework. Included","Fragments":["the"]},{"Key":"bool objects","Fragments":["because"]},{"Key":"objects because","Fragments":["I"]},{"Key":"kept having","Fragments":["to"]},{"Key":"each IF","Fragments":["scenario."]},{"Key":"IF scenario.","Fragments":["With"]},{"Key":"scenario. With","Fragments":["the"]},{"Key":"bool I","Fragments":["could"]},{"Key":"never claimed","Fragments":["to"]},{"Key":"claimed to","Fragments":["be"]},{"Key":"Math major","Fragments":["or"]},{"Key":"major or","Fragments":["anything."]},{"Key":"or anything.","Fragments":[":)"]},{"Key":"anything. :)","Fragments":["I"]},{"Key":"the effort","Fragments":["of"]},{"Key":"effort of","Fragments":["calculating"]},{"Key":"calculating prime","Fragments":["numbers"]},{"Key":"numbers \"correctly\"","Fragments":["since"]},{"Key":"\"correctly\" since","Fragments":["I"]},{"Key":"was beyond","Fragments":["the"]},{"Key":"the scope","Fragments":["of","of","of"]},{"Key":"scope of","Fragments":["these","the","the"]},{"Key":"As opposed","Fragments":["to","to"]},{"Key":"to what?","Fragments":["I"]},{"Key":"what? I","Fragments":["know"]},{"Key":"of silly","Fragments":["to"]},{"Key":"silly to","Fragments":["increment"]},{"Key":"to increment","Fragments":["by"]},{"Key":"increment by","Fragments":["2","'i'?","2","2"]},{"Key":"by 2","Fragments":["here","up","instead","each","ms."]},{"Key":"2 here","Fragments":["since"]},{"Key":"problem could","Fragments":["easily"]},{"Key":"easily change.","Fragments":["Again,"]},{"Key":"change. Again,","Fragments":["those"]},{"Key":"Again, those","Fragments":["pesky"]},{"Key":"those pesky","Fragments":["business"]},{"Key":"pesky business","Fragments":["requirements"]},{"Key":"business requirements","Fragments":["are","there."]},{"Key":"are missing.","Fragments":[":)"]},{"Key":" Wish","Fragments":["I"]},{"Key":"Wish I","Fragments":["had"]},{"Key":"had know","Fragments":["about"]},{"Key":"Any and","Fragments":["char"]},{"Key":"char methods.","Fragments":["Nice"]},{"Key":" @jamal","Fragments":["Yeah,"]},{"Key":"@jamal Yeah,","Fragments":["I"]},{"Key":"other submissions.","Fragments":["Cool","Is"]},{"Key":"submissions. Cool","Fragments":["trick."]},{"Key":"of three","Fragments":["prime","multiplications","inequalities"]},{"Key":"three prime","Fragments":["factors"]},{"Key":"prime factors","Fragments":["up","in"]},{"Key":"factors up","Fragments":["front."]},{"Key":" Ultimately,","Fragments":["how","your"]},{"Key":"Ultimately, how","Fragments":["this"]},{"Key":"this data","Fragments":["is"]},{"Key":"some database","Fragments":["would"]},{"Key":"database would","Fragments":["have"]},{"Key":"have dictated","Fragments":["how"]},{"Key":"dictated how","Fragments":["I"]},{"Key":"the problem.","Fragments":["If"]},{"Key":"database came","Fragments":["back"]},{"Key":"came back","Fragments":["with","to"]},{"Key":"back with","Fragments":["a","another"]},{"Key":"a 1:1","Fragments":["correlation,"]},{"Key":"1:1 correlation,","Fragments":["the"]},{"Key":"correlation, the","Fragments":["Dictionary(char,"]},{"Key":"the Dictionary(char,","Fragments":["int)"]},{"Key":"Dictionary(char, int)","Fragments":["would"]},{"Key":"int) would","Fragments":["have"]},{"Key":"been the","Fragments":["obvious","only"]},{"Key":"obvious choice.","Fragments":[":)"]},{"Key":" @emery","Fragments":["Looks"]},{"Key":"@emery Looks","Fragments":["good!"]},{"Key":"Looks good!","Fragments":["I"]},{"Key":"good! I","Fragments":["think"]},{"Key":"it's way","Fragments":["cleaner"]},{"Key":"way cleaner","Fragments":["to"]},{"Key":"cleaner to","Fragments":["store","just","use"]},{"Key":"data together","Fragments":["rather"]},{"Key":"together rather","Fragments":["than"]},{"Key":"have 2","Fragments":["separate"]},{"Key":"2 separate","Fragments":["arrays"]},{"Key":"separate arrays","Fragments":["or"]},{"Key":"arrays or","Fragments":["lists."]},{"Key":"where clause,","Fragments":["in"]},{"Key":"clause, in","Fragments":["fact"]},{"Key":"steal it","Fragments":["in"]},{"Key":"a second.","Fragments":["I"]},{"Key":"second. I","Fragments":["get"]},{"Key":"Lambda clear","Fragments":["by"]},{"Key":"clear by","Fragments":["putting"]},{"Key":"named function,","Fragments":["but"]},{"Key":"if having","Fragments":["the"]},{"Key":"extra indirection","Fragments":["of"]},{"Key":"indirection of","Fragments":["a"]},{"Key":"that returns","Fragments":["a","just","a"]},{"Key":"function hurts","Fragments":["more"]},{"Key":"hurts more","Fragments":["than"]},{"Key":"lambda that","Fragments":["@adrain"]},{"Key":"that @adrain","Fragments":["used."]},{"Key":"@adrain used.","Fragments":["I"]},{"Key":"used. I","Fragments":["thought"]},{"Key":"was nicer","Fragments":["to"]},{"Key":"Lambda directly","Fragments":["though."]},{"Key":"directly though.","Fragments":["The"]},{"Key":"though. The","Fragments":["new","intent"]},{"Key":"new requirement","Fragments":["to"]},{"Key":"on mismatch","Fragments":["strings"]},{"Key":"mismatch strings","Fragments":["actually"]},{"Key":"strings actually","Fragments":["simplified"]},{"Key":"actually simplified","Fragments":["the"]},{"Key":"code since","Fragments":["the"]},{"Key":"Lambda doesn't","Fragments":["have"]},{"Key":"index against","Fragments":["the"]},{"Key":" (Please","Fragments":["don't"]},{"Key":"(Please don't","Fragments":["get"]},{"Key":"always want","Fragments":["to"]},{"Key":"a one-liner,","Fragments":["it"]},{"Key":"one-liner, it","Fragments":["isn't"]},{"Key":"isn't always","Fragments":["an"]},{"Key":"always an","Fragments":["improvement."]},{"Key":"an improvement.","Fragments":["In"]},{"Key":"improvement. In","Fragments":["this"]},{"Key":" @lesley","Fragments":["That's"]},{"Key":"@lesley That's","Fragments":["hilarious,"]},{"Key":"That's hilarious,","Fragments":["The"]},{"Key":"hilarious, The","Fragments":["same"]},{"Key":"thing happened","Fragments":["to"]},{"Key":"to me!","Fragments":["I"]},{"Key":"me! I","Fragments":["saw"]},{"Key":"saw someone","Fragments":["do"]},{"Key":"someone do","Fragments":["the"]},{"Key":"the Distinct().Count()","Fragments":["thing"]},{"Key":"Distinct().Count() thing","Fragments":["and"]},{"Key":"cast it","Fragments":["to","to"]},{"Key":"the enum!","Fragments":[":-D"]},{"Key":" @carlos","Fragments":["I"]},{"Key":"@carlos I","Fragments":["don't"]},{"Key":"don't know,","Fragments":["I"]},{"Key":"personally did","Fragments":["this"]},{"Key":"exercise by","Fragments":["using"]},{"Key":"a two","Fragments":["dimensional"]},{"Key":"two dimensional","Fragments":["array,"]},{"Key":"dimensional array,","Fragments":["so"]},{"Key":"array, so","Fragments":["the","it","it'd","it'd"]},{"Key":"ordinal and","Fragments":["verse","the"]},{"Key":"and verse","Fragments":["phrase","phrase."]},{"Key":"verse phrase","Fragments":["were"]},{"Key":"phrase were","Fragments":["stored"]},{"Key":"were stored","Fragments":["together."]},{"Key":"stored together.","Fragments":["Feel"]},{"Key":"together. Feel","Fragments":["free"]},{"Key":"Feel free","Fragments":["to","to"]},{"Key":"free to","Fragments":["check","muck","comment!","code","modify"]},{"Key":" @claude","Fragments":["being"]},{"Key":"@claude being","Fragments":["explicit"]},{"Key":"being explicit","Fragments":["can","about"]},{"Key":"really hurt","Fragments":["in"]},{"Key":"hurt in","Fragments":["the"]},{"Key":"long run.","Fragments":["You"]},{"Key":"run. You","Fragments":["are"]},{"Key":"essentially violating","Fragments":["DRY"]},{"Key":"violating DRY","Fragments":["(the"]},{"Key":"DRY (the","Fragments":["type"]},{"Key":"(the type","Fragments":["is"]},{"Key":"defined by","Fragments":["the"]},{"Key":"the initializer","Fragments":["AND"]},{"Key":"initializer AND","Fragments":["the"]},{"Key":"AND the","Fragments":["declaration).","two"]},{"Key":"the declaration).","Fragments":["This"]},{"Key":"declaration). This","Fragments":["won't"]},{"Key":"This won't","Fragments":["cause"]},{"Key":"won't cause","Fragments":["bugs,"]},{"Key":"cause bugs,","Fragments":["only"]},{"Key":"bugs, only","Fragments":["compile"]},{"Key":"only compile","Fragments":["time"]},{"Key":"compile time","Fragments":["errors,","issues."]},{"Key":"time errors,","Fragments":["but"]},{"Key":"errors, but","Fragments":["if"]},{"Key":"have ever","Fragments":["refactored"]},{"Key":"ever refactored","Fragments":["code"]},{"Key":"refactored code","Fragments":["with"]},{"Key":"of explicit","Fragments":["types"]},{"Key":"explicit types","Fragments":["to","for"]},{"Key":"types to","Fragments":["use"]},{"Key":"use different","Fragments":["types"]},{"Key":"different types","Fragments":["boy"]},{"Key":"types boy","Fragments":["is"]},{"Key":"boy is","Fragments":["it"]},{"Key":"it unpleasant.","Fragments":["I"]},{"Key":"unpleasant. I","Fragments":["use"]},{"Key":"var wherever","Fragments":["I"]},{"Key":"wherever I","Fragments":["can.","can."]},{"Key":"Given that","Fragments":["C#"]},{"Key":"that C#","Fragments":["is","strings"]},{"Key":"basically always","Fragments":["coded"]},{"Key":"always coded","Fragments":["in"]},{"Key":"coded in","Fragments":["an","every"]},{"Key":"an IDE","Fragments":["that","that"]},{"Key":"will tell","Fragments":["you"]},{"Key":"you the","Fragments":["type,","next","current"]},{"Key":"the type,","Fragments":["I"]},{"Key":"type, I","Fragments":["don't"]},{"Key":"any long","Fragments":["term"]},{"Key":"long term","Fragments":["advantage"]},{"Key":"term advantage","Fragments":["to"]},{"Key":"advantage to","Fragments":["being","it?","the"]},{"Key":"to being","Fragments":["explicit"]},{"Key":"Using Unique","Fragments":["is"]},{"Key":"Unique is","Fragments":["an"]},{"Key":"awesome idea.","Fragments":["I"]},{"Key":"steal this","Fragments":["idea."]},{"Key":"this idea.","Fragments":["You"]},{"Key":"can actually","Fragments":["cast","pull","do"]},{"Key":"actually cast","Fragments":["it"]},{"Key":"enum to","Fragments":["avoid","this:","keep","an"]},{"Key":"if or","Fragments":["switch"]},{"Key":"or switch","Fragments":["statement."]},{"Key":"statement. Check","Fragments":["out"]},{"Key":"my new","Fragments":["submission","party"]},{"Key":"new submission","Fragments":["to"]},{"Key":"Sounds good.","Fragments":["For"]},{"Key":"good. For","Fragments":["the"]},{"Key":"the record","Fragments":["here"]},{"Key":"record here","Fragments":["is"]},{"Key":"simple prime","Fragments":["number"]},{"Key":"number generator.","Fragments":["It"]},{"Key":"isn't extremely","Fragments":["fast,"]},{"Key":"extremely fast,","Fragments":["but"]},{"Key":"fast, but","Fragments":["it","somewhat"]},{"Key":"than brute","Fragments":["force."]},{"Key":" Start","Fragments":["with","your"]},{"Key":"Start with","Fragments":["a"]},{"Key":"of primes","Fragments":["that","first.","if"]},{"Key":"primes that","Fragments":["contains"]},{"Key":"contains at","Fragments":["least"]},{"Key":"least the","Fragments":["number"]},{"Key":"number 2","Fragments":["(you","as"]},{"Key":"2 (you","Fragments":["can"]},{"Key":"(you can","Fragments":["optimize"]},{"Key":"can optimize","Fragments":["by"]},{"Key":"optimize by","Fragments":["adding"]},{"Key":"adding 3,","Fragments":["5,"]},{"Key":"3, 5,","Fragments":["7,","and"]},{"Key":"5, 7,","Fragments":["11,"]},{"Key":"7, 11,","Fragments":["etc.)"]},{"Key":"Start your","Fragments":["candidate"]},{"Key":"your candidate","Fragments":["prime","prime"]},{"Key":"candidate prime","Fragments":["number","by","to"]},{"Key":"number at","Fragments":["3"]},{"Key":"at 3","Fragments":["(or","and"]},{"Key":"3 (or","Fragments":["the"]},{"Key":"(or the","Fragments":["next"]},{"Key":"next odd","Fragments":["number"]},{"Key":"odd number","Fragments":["after"]},{"Key":"number after","Fragments":["the"]},{"Key":"the largest","Fragments":["value","number","order"]},{"Key":"largest value","Fragments":["in"]},{"Key":"initial list)","Fragments":["and"]},{"Key":"list) and","Fragments":["increase"]},{"Key":"and increase","Fragments":["by"]},{"Key":"increase by","Fragments":["2"]},{"Key":"2 up","Fragments":["to"]},{"Key":"to whatever","Fragments":["limit"]},{"Key":"whatever limit","Fragments":["you"]},{"Key":"limit you","Fragments":["are"]},{"Key":"During each","Fragments":["iteration"]},{"Key":"iteration modulo","Fragments":["your"]},{"Key":"modulo your","Fragments":["candidate"]},{"Key":"prime by","Fragments":["all"]},{"Key":"the primes","Fragments":["in","up","up","in","on","aren't","list."]},{"Key":"primes in","Fragments":["your","your"]},{"Key":"your list.","Fragments":["If"]},{"Key":"If none","Fragments":["of"]},{"Key":"them result","Fragments":["in"]},{"Key":"in 0","Fragments":["(evenly"]},{"Key":"0 (evenly","Fragments":["divide"]},{"Key":"(evenly divide","Fragments":["the"]},{"Key":"divide the","Fragments":["candidate"]},{"Key":"candidate prime)","Fragments":["add"]},{"Key":"prime) add","Fragments":["candidate"]},{"Key":"add candidate","Fragments":["prime"]},{"Key":"prime to","Fragments":["the"]},{"Key":" Thans","Fragments":["for"]},{"Key":"Thans for","Fragments":["the"]},{"Key":"the comment!","Fragments":["I"]},{"Key":"comment! I","Fragments":["appreciate"]},{"Key":"help and","Fragments":["will"]},{"Key":"take that","Fragments":["in","line"]},{"Key":"in mind.","Fragments":["I've"]},{"Key":"mind. I've","Fragments":["only"]},{"Key":"I've only","Fragments":["been"]},{"Key":"only been","Fragments":["taking"]},{"Key":"been taking","Fragments":["one"]},{"Key":"taking one","Fragments":["course"]},{"Key":"one course","Fragments":["in"]},{"Key":"course in","Fragments":["programming,"]},{"Key":"in programming,","Fragments":["so"]},{"Key":"programming, so","Fragments":["I'm"]},{"Key":"really glad","Fragments":["you"]},{"Key":"glad you","Fragments":["took","used"]},{"Key":"took your","Fragments":["time"]},{"Key":"your time","Fragments":["to"]},{"Key":"think you're","Fragments":["supposed","the","missing"]},{"Key":"you're supposed","Fragments":["to"]},{"Key":"to chain","Fragments":["the"]},{"Key":"operator. I","Fragments":["think","thought"]},{"Key":"that violates","Fragments":["a"]},{"Key":"violates a","Fragments":["constitutional"]},{"Key":"a constitutional","Fragments":["amendment"]},{"Key":"constitutional amendment","Fragments":["or"]},{"Key":"amendment or","Fragments":["something."]},{"Key":"making this","Fragments":["way","pretty","in","compact","IEnumerable","method","repetitive"]},{"Key":"can break","Fragments":["it","early"]},{"Key":"to simpler","Fragments":["checks"]},{"Key":"simpler checks","Fragments":["and"]},{"Key":"be smaller","Fragments":["and","than","than"]},{"Key":" But,","Fragments":["hey,"]},{"Key":"But, hey,","Fragments":["I"]},{"Key":"hey, I","Fragments":["bet"]},{"Key":"bet this","Fragments":["was"]},{"Key":"to write!","Fragments":[":-D"]},{"Key":"never written","Fragments":["anything"]},{"Key":"written anything","Fragments":["big"]},{"Key":"anything big","Fragments":["in"]},{"Key":"big in","Fragments":["C#,"]},{"Key":"so I'll","Fragments":["defer"]},{"Key":"I'll defer","Fragments":["to"]},{"Key":"defer to","Fragments":["your"]},{"Key":"experience. However,","Fragments":["for"]},{"Key":"these simple","Fragments":["examples"]},{"Key":"simple examples","Fragments":["I'll"]},{"Key":"examples I'll","Fragments":["continue"]},{"Key":"I'll continue","Fragments":["using"]},{"Key":"continue using","Fragments":["explicit"]},{"Key":"using explicit","Fragments":["types"]},{"Key":"types for","Fragments":["now."]},{"Key":"for now.","Fragments":[":)"]},{"Key":"simplify this","Fragments":["just","a","code."]},{"Key":"this just","Fragments":["slightly"]},{"Key":"slightly by","Fragments":["passing"]},{"Key":"by passing","Fragments":["a","in"]},{"Key":"passing a","Fragments":["Planet"]},{"Key":"a Planet","Fragments":["value"]},{"Key":"Planet value","Fragments":["into"]},{"Key":"value into","Fragments":["CalculateAge"]},{"Key":"into CalculateAge","Fragments":["and"]},{"Key":"CalculateAge and","Fragments":["doing"]},{"Key":"and doing","Fragments":["the","a"]},{"Key":"the look","Fragments":["up"]},{"Key":"up inside","Fragments":["there."]},{"Key":"using constant","Fragments":["values"]},{"Key":"constant values","Fragments":["like"]},{"Key":"like MERCURY_YEARS_PER_EARTH_YEAR","Fragments":["instead"]},{"Key":"MERCURY_YEARS_PER_EARTH_YEAR instead","Fragments":["of"]},{"Key":"of 0.2408467","Fragments":["directly"]},{"Key":"0.2408467 directly","Fragments":["in"]},{"Key":"your constants","Fragments":["are"]},{"Key":"are defined","Fragments":["up"]},{"Key":"defined up","Fragments":["at"]},{"Key":"up at","Fragments":["the"]},{"Key":"your sorting","Fragments":["idea."]},{"Key":"sorting idea.","Fragments":["You"]},{"Key":"already got","Fragments":["the"]},{"Key":"side list,","Fragments":["wanna"]},{"Key":"list, wanna","Fragments":["take"]},{"Key":"wanna take","Fragments":["it"]},{"Key":"a step","Fragments":["further?","in"]},{"Key":"step further?","Fragments":["This"]},{"Key":"further? This","Fragments":["is"]},{"Key":"new party","Fragments":["trick."]},{"Key":"party trick.","Fragments":["It"]},{"Key":"trick. It","Fragments":["wows"]},{"Key":"It wows","Fragments":["the"]},{"Key":"wows the","Fragments":["ladies!"]},{"Key":"First, get","Fragments":["rid"]},{"Key":"of lookup,","Fragments":["we"]},{"Key":"lookup, we","Fragments":["don't"]},{"Key":" Then,","Fragments":["change","after"]},{"Key":"Then, change","Fragments":["your"]},{"Key":"your enum","Fragments":["to","values"]},{"Key":"public enum","Fragments":["TriangleKind","Schedule"]},{"Key":"Then change","Fragments":["your"]},{"Key":"your this.kind","Fragments":["assignment"]},{"Key":"this.kind assignment","Fragments":["to"]},{"Key":" kind","Fragments":["="]},{"Key":"kind =","Fragments":["(TriangleKind)"]},{"Key":"= (TriangleKind)","Fragments":["sides.Distinct().Count();"]},{"Key":"had 2","Fragments":["lists,"]},{"Key":"2 lists,","Fragments":["and"]},{"Key":"lists, and","Fragments":["I"]},{"Key":"like combining","Fragments":["the"]},{"Key":"the verse","Fragments":["phrase."]},{"Key":"haven't encountered","Fragments":["an"]},{"Key":"encountered an","Fragments":["ordered"]},{"Key":"an ordered","Fragments":["dictionary"]},{"Key":"dictionary yet,","Fragments":["but"]},{"Key":"yet, but","Fragments":["looking"]},{"Key":"a question:","Fragments":["Does"]},{"Key":"question: Does","Fragments":["this"]},{"Key":"this mean","Fragments":["that"]},{"Key":"a ordered","Fragments":["dictionary"]},{"Key":"dictionary cannot","Fragments":["be"]},{"Key":"be indexed","Fragments":["by"]},{"Key":"by int","Fragments":["datatypes?"]},{"Key":"int datatypes?","Fragments":["To"]},{"Key":"datatypes? To","Fragments":["clarify,"]},{"Key":"To clarify,","Fragments":["MSDN"]},{"Key":"clarify, MSDN","Fragments":["specifies:"]},{"Key":" Item[Int32]","Fragments":["Gets"]},{"Key":"Item[Int32] Gets","Fragments":["or"]},{"Key":"Gets or","Fragments":["sets","sets"]},{"Key":"or sets","Fragments":["the","the"]},{"Key":"value at","Fragments":["the"]},{"Key":" Item[Object]","Fragments":["Gets"]},{"Key":"Item[Object] Gets","Fragments":["or"]},{"Key":"value with","Fragments":["the","a"]},{"Key":"So, if","Fragments":["I"]},{"Key":"int key","Fragments":["="]},{"Key":"= 3,","Fragments":["and","Teenth"]},{"Key":"3, and","Fragments":["it's"]},{"Key":"the 6th","Fragments":["entry"]},{"Key":"6th entry","Fragments":["in"]},{"Key":"the OrderedDictionary,","Fragments":["when"]},{"Key":"OrderedDictionary, when","Fragments":["I"]},{"Key":"I enter","Fragments":["OrderedDictionary.Item[3],"]},{"Key":"enter OrderedDictionary.Item[3],","Fragments":["what"]},{"Key":"OrderedDictionary.Item[3], what","Fragments":["do"]},{"Key":"that kind","Fragments":["of","of"]},{"Key":"of change.","Fragments":["I"]},{"Key":"I documented","Fragments":["that"]},{"Key":"documented that","Fragments":["the"]},{"Key":"enumeration couldn't","Fragments":["change"]},{"Key":"couldn't change","Fragments":["and"]},{"Key":"the switch,","Fragments":["but"]},{"Key":"other option","Fragments":["I"]},{"Key":"option I","Fragments":["can"]},{"Key":"dictionary sounds","Fragments":["annoying"]},{"Key":"sounds annoying","Fragments":["as"]},{"Key":"annoying as","Fragments":["well."]},{"Key":"well. So,","Fragments":["I'm"]},{"Key":"I'm posting","Fragments":["this"]},{"Key":"posting this","Fragments":["solution"]},{"Key":"to scrounge","Fragments":["around"]},{"Key":"scrounge around","Fragments":["the"]},{"Key":"other submission","Fragments":["and"]},{"Key":"submission and","Fragments":["see"]},{"Key":"others came","Fragments":["up"]},{"Key":" @libby","Fragments":["I"]},{"Key":"@libby I","Fragments":["had"]},{"Key":"feeling everybody","Fragments":["and"]},{"Key":"switch because","Fragments":["I"]},{"Key":"hadn't used","Fragments":["a"]},{"Key":"long time.","Fragments":["After"]},{"Key":"time. After","Fragments":["reading"]},{"Key":"reading some","Fragments":["stuff"]},{"Key":"some stuff","Fragments":["on"]},{"Key":"on switch","Fragments":["vs"]},{"Key":"switch vs","Fragments":["Dictionary,"]},{"Key":"vs Dictionary,","Fragments":["the"]},{"Key":"Dictionary, the","Fragments":["Dictionary","order"]},{"Key":"Dictionary choice","Fragments":["probably"]},{"Key":"choice probably","Fragments":["performs"]},{"Key":"probably performs","Fragments":["better."]},{"Key":"The ??","Fragments":["is"]},{"Key":"?? is","Fragments":["called"]},{"Key":"called the","Fragments":["null"]},{"Key":"null coalesce","Fragments":["operator"]},{"Key":"coalesce operator","Fragments":["is"]},{"Key":"wanna have","Fragments":["a"]},{"Key":"a look.","Fragments":["Your"]},{"Key":"look. Your","Fragments":["assumption"]},{"Key":"Your assumption","Fragments":["on"]},{"Key":"assumption on","Fragments":["how"]},{"Key":"works is","Fragments":["correct."]},{"Key":"Oh, good","Fragments":["point."]},{"Key":"a Nitpick,","Fragments":["just"]},{"Key":"Nitpick, just","Fragments":["a"]},{"Key":"It used","Fragments":["to"]},{"Key":"that comparison","Fragments":["to"]},{"Key":"to zero","Fragments":["was","or"]},{"Key":"zero was","Fragments":["more"]},{"Key":"than comparison","Fragments":["to"]},{"Key":"another number.","Fragments":["I"]},{"Key":"idea if","Fragments":["that"]},{"Key":".NET world,","Fragments":["but"]},{"Key":"world, but","Fragments":["since"]},{"Key":"am used","Fragments":["to"]},{"Key":"did \u003ccode\u003ereturn","Fragments":["(score"]},{"Key":"\u003ccode\u003ereturn (score","Fragments":["\u0026","\u0026"]},{"Key":"(score \u0026","Fragments":["allergyValue)","allergyValue)","allergies[allergy])","allergies[allergy])","allergies[allergy])"]},{"Key":"\u0026 allergyValue)","Fragments":["!=","=="]},{"Key":"allergyValue) !=","Fragments":["0;\u003c/code\u003e"]},{"Key":"!= 0;\u003c/code\u003e","Fragments":["instead"]},{"Key":"0;\u003c/code\u003e instead","Fragments":["of"]},{"Key":"of \u003ccode\u003ereturn","Fragments":["(score"]},{"Key":"allergyValue) ==","Fragments":["allergyValue;\u003c/code\u003e"]},{"Key":"job! You","Fragments":["might"]},{"Key":"use \u003ccode\u003e1E9\u003c/code\u003e","Fragments":["instead","in","as"]},{"Key":"\u003ccode\u003e1E9\u003c/code\u003e instead","Fragments":["of","of"]},{"Key":"of \u003ccode\u003e1000000000\u003c/code\u003e","Fragments":["for"]},{"Key":"\u003ccode\u003e1000000000\u003c/code\u003e for","Fragments":["readability."]},{"Key":" StringBuilder","Fragments":["output","output"]},{"Key":"StringBuilder output","Fragments":["=","="]},{"Key":"if (number","Fragments":["%","%","%","%","\u003c","\u003c","%"]},{"Key":"(number %","Fragments":["3","5","7","tuple.Item1","factor"]},{"Key":"3 ==","Fragments":["0)"]},{"Key":"% 5","Fragments":["=="]},{"Key":"5 ==","Fragments":["0)"]},{"Key":"% 7","Fragments":["=="]},{"Key":"7 ==","Fragments":["0)"]},{"Key":"if (output.Length","Fragments":["==","=="]},{"Key":"(output.Length ==","Fragments":["0)","0)"]},{"Key":"better (since","Fragments":["it"]},{"Key":"(since it","Fragments":["is"]},{"Key":" Tuple\u003cint,","Fragments":["string\u003e[]"]},{"Key":"Tuple\u003cint, string\u003e[]","Fragments":["lookup"]},{"Key":"string\u003e[] lookup","Fragments":["="]},{"Key":"lookup =","Fragments":["new"]},{"Key":"new Tuple\u003cint,","Fragments":["string\u003e[]","string\u003e(3,","string\u003e(5,","string\u003e(7,"]},{"Key":" new","Fragments":["Tuple\u003cint,","Tuple\u003cint,","Tuple\u003cint,","List()"]},{"Key":"Tuple\u003cint, string\u003e(3,","Fragments":["\"Pling\"),"]},{"Key":"Tuple\u003cint, string\u003e(5,","Fragments":["\"Plang\"),"]},{"Key":"Tuple\u003cint, string\u003e(7,","Fragments":["\"Plong\")"]},{"Key":"foreach (Tuple\u003cint,","Fragments":["string\u003e","string\u003e","string\u003e"]},{"Key":"(Tuple\u003cint, string\u003e","Fragments":["tuple","pair","pair"]},{"Key":"string\u003e tuple","Fragments":["in"]},{"Key":"tuple in","Fragments":["lookup)"]},{"Key":"% tuple.Item1","Fragments":["=="]},{"Key":"tuple.Item1 ==","Fragments":["0)"]},{"Key":"Again, no","Fragments":["problem."]},{"Key":"dictionary had","Fragments":["been"]},{"Key":"been given","Fragments":["to"]},{"Key":"given to","Fragments":["me","an"]},{"Key":"format you","Fragments":["specified"]},{"Key":"you specified","Fragments":["it"]},{"Key":"specified it","Fragments":["in,"]},{"Key":"it in,","Fragments":["I"]},{"Key":"would convert","Fragments":["it"]},{"Key":"an easy-to-look-up","Fragments":["format,"]},{"Key":"easy-to-look-up format,","Fragments":["but"]},{"Key":"format, but","Fragments":["that"]},{"Key":"that probably","Fragments":["reflects"]},{"Key":"probably reflects","Fragments":["my"]},{"Key":"reflects my","Fragments":["bias."]},{"Key":"for this?","Fragments":["I"]},{"Key":"this? I","Fragments":["suppose"]},{"Key":"suppose you","Fragments":["could"]},{"Key":"could generate","Fragments":["an"]},{"Key":"of 26","Fragments":["entries"]},{"Key":"26 entries","Fragments":["and"]},{"Key":"entries and","Fragments":["index"]},{"Key":"and index","Fragments":["it"]},{"Key":"index it","Fragments":["using"]},{"Key":"using letter","Fragments":["-"]},{"Key":"letter -","Fragments":["'A',"]},{"Key":"- 'A',","Fragments":["but"]},{"Key":"'A', but","Fragments":["that"]},{"Key":"Dictionary would","Fragments":["be."]},{"Key":"syntax \u003ccode\u003eword","Fragments":["??"]},{"Key":"\u003ccode\u003eword ??","Fragments":["\"\"\u003c/code\u003e."]},{"Key":"?? \"\"\u003c/code\u003e.","Fragments":["I'm"]},{"Key":"\"\"\u003c/code\u003e. I'm","Fragments":["assuming"]},{"Key":"assuming from","Fragments":["the"]},{"Key":"context that","Fragments":["it"]},{"Key":"as \u003ccode\u003eword","Fragments":["=="]},{"Key":"\u003ccode\u003eword ==","Fragments":["null"]},{"Key":"null ?","Fragments":["\"\"","0"]},{"Key":"? \"\"","Fragments":[":"]},{"Key":"\"\" :","Fragments":["word\u003c/code\u003e."]},{"Key":": word\u003c/code\u003e.","Fragments":["If"]},{"Key":"word\u003c/code\u003e. If","Fragments":["so,"]},{"Key":"so, I'll","Fragments":["have"]},{"Key":"Since static","Fragments":["int"]},{"Key":"int Score(string)","Fragments":["already"]},{"Key":"Score(string) already","Fragments":["checks"]},{"Key":"already checks","Fragments":["for"]},{"Key":"null input,","Fragments":["do"]},{"Key":"input, do","Fragments":["you"]},{"Key":"have avoided","Fragments":["all"]},{"Key":"avoided all","Fragments":["the"]},{"Key":"string processing","Fragments":["by"]},{"Key":"processing by","Fragments":["using"]},{"Key":"using bit","Fragments":["shifting","operators."]},{"Key":"bit shifting","Fragments":["like","gives"]},{"Key":"shifting like","Fragments":["this:"]},{"Key":"private void","Fragments":["GenerateAllergies(int","CheckInequality()"]},{"Key":"void GenerateAllergies(int","Fragments":["number)"]},{"Key":" _allergies","Fragments":["="]},{"Key":"_allergies =","Fragments":["new"]},{"Key":"(int index","Fragments":["in"]},{"Key":"if ((number","Fragments":["\u0026"]},{"Key":"((number \u0026","Fragments":["(1"]},{"Key":"\u0026 (1","Fragments":["\u003c\u003c"]},{"Key":"(1 \u003c\u003c","Fragments":["index))"]},{"Key":"\u003c\u003c index))","Fragments":["!="]},{"Key":"index)) !=","Fragments":["0)"]},{"Key":"would strongly","Fragments":["argue"]},{"Key":"strongly argue","Fragments":["against"]},{"Key":"argue against","Fragments":["using"]},{"Key":"using strings","Fragments":["to","as"]},{"Key":"do number","Fragments":["manipulation"]},{"Key":"number manipulation","Fragments":["when"]},{"Key":"manipulation when","Fragments":["you"]},{"Key":"job, but","Fragments":["your"]},{"Key":"bit inefficient.","Fragments":["You"]},{"Key":"inefficient. You","Fragments":["have"]},{"Key":"loop inside","Fragments":["your","the"]},{"Key":"inside your","Fragments":["while"]},{"Key":"your while","Fragments":["loop"]},{"Key":"when 'number'","Fragments":["gets"]},{"Key":"'number' gets","Fragments":["small"]},{"Key":"gets small","Fragments":["(lets"]},{"Key":"small (lets","Fragments":["say"]},{"Key":"(lets say","Fragments":["3),"]},{"Key":"say 3),","Fragments":["you"]},{"Key":"3), you","Fragments":["have"]},{"Key":"process through","Fragments":["all"]},{"Key":"the big","Fragments":["numbers","one"]},{"Key":"big numbers","Fragments":["to"]},{"Key":"single 'I'","Fragments":["and"]},{"Key":"'I' and","Fragments":["then"]},{"Key":"all again","Fragments":["(and"]},{"Key":"again (and","Fragments":["again)."]},{"Key":"(and again).","Fragments":["Can"]},{"Key":"again). Can","Fragments":["you"]},{"Key":"rework it","Fragments":["to"]},{"Key":"me. Prior","Fragments":["to"]},{"Key":"Prior to","Fragments":["this"]},{"Key":"how implement","Fragments":["functions"]},{"Key":"implement functions","Fragments":["as"]},{"Key":"functions as","Fragments":["variables"]},{"Key":"C#. It","Fragments":["was"]},{"Key":"was eye","Fragments":["opening."]},{"Key":"good sign","Fragments":["when"]},{"Key":"sign when","Fragments":["your"]},{"Key":"when your","Fragments":["boss"]},{"Key":"boss is","Fragments":["kicking"]},{"Key":"is kicking","Fragments":["you"]},{"Key":"kicking you","Fragments":["out"]},{"Key":"you out","Fragments":["of"]},{"Key":"be streamlined.","Fragments":["Can"]},{"Key":"streamlined. Can","Fragments":["you"]},{"Key":"use foreach","Fragments":["on","enumerating","on","on"]},{"Key":"foreach on","Fragments":["Numerals?","the","the"]},{"Key":" @verla","Fragments":["I"]},{"Key":"@verla I","Fragments":["plain"]},{"Key":"I plain","Fragments":["to."]},{"Key":"plain to.","Fragments":["My"]},{"Key":"to. My","Fragments":["boss"]},{"Key":"My boss","Fragments":["kicked"]},{"Key":"boss kicked","Fragments":["me"]},{"Key":"kicked me","Fragments":["out"]},{"Key":"me out","Fragments":["of"]},{"Key":"work so","Fragments":["I"]},{"Key":"I uploaded","Fragments":["to"]},{"Key":"uploaded to","Fragments":["exercism"]},{"Key":"to exercism","Fragments":["so"]},{"Key":"exercism so","Fragments":["I"]},{"Key":"could work","Fragments":["on"]},{"Key":"feedback, thomaseyde.","Fragments":["I"]},{"Key":"thomaseyde. I","Fragments":["am"]},{"Key":"correct about","Fragments":["my"]},{"Key":"my unnecessary","Fragments":["Clear()"]},{"Key":"unnecessary Clear()","Fragments":["methods."]},{"Key":"Clear() methods.","Fragments":["I"]},{"Key":"included them","Fragments":["just"]},{"Key":"them just","Fragments":["to"]},{"Key":"to supplement","Fragments":["my"]},{"Key":"supplement my","Fragments":["own"]},{"Key":"own thought","Fragments":["processes."]},{"Key":"thought processes.","Fragments":["As"]},{"Key":"processes. As","Fragments":["far"]},{"Key":"the Enumerable.Range(0,","Fragments":["limit)"]},{"Key":"Enumerable.Range(0, limit)","Fragments":["statement,"]},{"Key":"limit) statement,","Fragments":["I"]},{"Key":"I successfully","Fragments":["tested"]},{"Key":"successfully tested","Fragments":["this"]},{"Key":"both Resharper's","Fragments":["VS"]},{"Key":"Resharper's VS","Fragments":["2013"]},{"Key":"VS 2013","Fragments":["test"]},{"Key":"2013 test","Fragments":["suite"]},{"Key":"with NUnit.","Fragments":["Did","I","Found","I"]},{"Key":"NUnit. Did","Fragments":["you"]},{"Key":"you copy","Fragments":["and"]},{"Key":"copy and","Fragments":["paste","paste.","paste."]},{"Key":"and paste","Fragments":["and","error"]},{"Key":"paste and","Fragments":["test"]},{"Key":"and test","Fragments":["my","provided"]},{"Key":"test my","Fragments":["entire","code:"]},{"Key":"my entire","Fragments":["program?"]},{"Key":"entire program?","Fragments":["I"]},{"Key":"program? I","Fragments":["don't"]},{"Key":"code passes","Fragments":["when"]},{"Key":"passes when","Fragments":["I"]},{"Key":"not when","Fragments":["you","you"]},{"Key":"you test","Fragments":["it.","for","for"]},{"Key":"test it.","Fragments":["Again,"]},{"Key":" -Joseph","Fragments":["@sage"]},{"Key":"requires the","Fragments":["use"]},{"Key":"the .ForEach()","Fragments":["method","method"]},{"Key":".ForEach() method","Fragments":["on","on"]},{"Key":"List class.","Fragments":["Not","I"]},{"Key":"class. Not","Fragments":["quite"]},{"Key":"Not quite","Fragments":["as","sure"]},{"Key":"quite as","Fragments":["clean"]},{"Key":"as clean","Fragments":["as","tokens"]},{"Key":"proper Map()","Fragments":["method,"]},{"Key":"Map() method,","Fragments":["but"]},{"Key":"but effectively","Fragments":["the"]},{"Key":" Found","Fragments":["a","unit","a"]},{"Key":"Found a","Fragments":["manner","speed"]},{"Key":"a manner","Fragments":["of"]},{"Key":"manner of","Fragments":[".Map()"]},{"Key":"of .Map()","Fragments":["in"]},{"Key":".Map() in","Fragments":["the"]},{"Key":"very same","Fragments":["thing"]},{"Key":"thing under-the-covers","Fragments":["as"]},{"Key":"under-the-covers as","Fragments":["my"]},{"Key":"use ```var```","Fragments":["in"]},{"Key":"```var``` in","Fragments":["the"]},{"Key":"first foreach(","Fragments":[")"]},{"Key":"foreach( )","Fragments":["replacing"]},{"Key":") replacing","Fragments":["the"]},{"Key":"the lengthy","Fragments":["```KeyValuePair\u003cint,"]},{"Key":"lengthy ```KeyValuePair\u003cint,","Fragments":["IList\u003cstring\u003e\u003e```"]},{"Key":"Why don't","Fragments":["you"]},{"Key":"don't you","Fragments":["alphabetize","just"]},{"Key":"you alphabetize","Fragments":["anagramInput"]},{"Key":"alphabetize anagramInput","Fragments":["just"]},{"Key":"anagramInput just","Fragments":["once"]},{"Key":"that somewhere","Fragments":["so"]},{"Key":"somewhere so","Fragments":["you"]},{"Key":"won't have","Fragments":["to","to","to","any","a","to"]},{"Key":"keep doing","Fragments":["it?"]},{"Key":"If have","Fragments":["two"]},{"Key":"two very","Fragments":["picky"]},{"Key":"very picky","Fragments":["comments."]},{"Key":"First, NucleotideCounts","Fragments":["is"]},{"Key":"NucleotideCounts is","Fragments":["public","called"]},{"Key":"is public","Fragments":["and"]},{"Key":"public and","Fragments":["could","by"]},{"Key":"your class.","Fragments":["You","You"]},{"Key":"class. You","Fragments":["could","should"]},{"Key":"could solve","Fragments":["this"]},{"Key":"this by","Fragments":["changing","making","renaming","using"]},{"Key":"changing it","Fragments":["to","to","if"]},{"Key":"to \u003ccode\u003epublic","Fragments":["Dictionary\u003cchar,"]},{"Key":"\u003ccode\u003epublic Dictionary\u003cchar,","Fragments":["int\u003e"]},{"Key":"int\u003e NucleotideCounts","Fragments":["{"]},{"Key":"NucleotideCounts {","Fragments":["get;"]},{"Key":"set; }\u003c/code\u003e","Fragments":["and"]},{"Key":"}\u003c/code\u003e and","Fragments":["then"]},{"Key":"then initializing","Fragments":["it"]},{"Key":"it inside","Fragments":["the"]},{"Key":"Second, Count","Fragments":["throws"]},{"Key":"Count throws","Fragments":["an"]},{"Key":"nucleotide is","Fragments":["encountered.","given."]},{"Key":"is encountered.","Fragments":["The"]},{"Key":"encountered. The","Fragments":["constructor"]},{"Key":"The constructor","Fragments":["silently","was"]},{"Key":"constructor silently","Fragments":["ignores"]},{"Key":"silently ignores","Fragments":["an"]},{"Key":"ignores an","Fragments":["invalid"]},{"Key":"invalid nucleotide.","Fragments":["I"]},{"Key":"nucleotide. I","Fragments":["know"]},{"Key":"didn't specify,","Fragments":["but"]},{"Key":"specify, but","Fragments":["it","good"]},{"Key":"seems if","Fragments":["one"]},{"Key":"one throws","Fragments":["an"]},{"Key":"exception the","Fragments":["other"]},{"Key":"other should","Fragments":["as"]},{"Key":"should as","Fragments":["well."]},{"Key":"were many","Fragments":["more"]},{"Key":"many more","Fragments":["than"]},{"Key":"than four","Fragments":["nucleotides"]},{"Key":"four nucleotides","Fragments":["I"]},{"Key":"nucleotides I","Fragments":["would"]},{"Key":"change IsValid","Fragments":["to"]},{"Key":"IsValid to","Fragments":["use"]},{"Key":"use NucleotideCounts.ContainsKey(nucleotide),","Fragments":["but"]},{"Key":"NucleotideCounts.ContainsKey(nucleotide), but","Fragments":["with"]},{"Key":"only four,","Fragments":["the"]},{"Key":"four, the","Fragments":["individual"]},{"Key":"individual checks","Fragments":["are","is"]},{"Key":"said -","Fragments":["they"]},{"Key":"- they","Fragments":["were"]},{"Key":"were very","Fragments":["picky."]},{"Key":"very picky.","Fragments":["Other"]},{"Key":"picky. Other","Fragments":["than"]},{"Key":" Creative!","Fragments":["It","I'm"]},{"Key":"Creative! It","Fragments":["took"]},{"Key":"me awhile","Fragments":["to"]},{"Key":"awhile to","Fragments":["understand"]},{"Key":"were doing,","Fragments":["so"]},{"Key":"doing, so","Fragments":["comments"]},{"Key":"so comments","Fragments":["would"]},{"Key":"no loops.","Fragments":["This"]},{"Key":"loops. This","Fragments":["information"]},{"Key":"This information","Fragments":["is"]},{"Key":"information is","Fragments":["all"]},{"Key":"all directly","Fragments":["calculatable."]},{"Key":"been more","Fragments":["complicated,","difficult"]},{"Key":"it wasn't.","Fragments":["Perhaps"]},{"Key":"wasn't. Perhaps","Fragments":["there"]},{"Key":"Perhaps there","Fragments":["is"]},{"Key":"a faster,","Fragments":["more"]},{"Key":"faster, more","Fragments":["clever"]},{"Key":"more clever","Fragments":["method"]},{"Key":"clever method","Fragments":["for"]},{"Key":"for iterating","Fragments":["over"]},{"Key":"Dictionary entries...","Fragments":["something"]},{"Key":"entries... something","Fragments":["like"]},{"Key":"a map/reduce","Fragments":["function"]},{"Key":"map/reduce function","Fragments":["inherent"]},{"Key":"function inherent","Fragments":["in"]},{"Key":"inherent in","Fragments":["the"]},{"Key":"job. You","Fragments":["might"]},{"Key":"'set' on","Fragments":["Name"]},{"Key":"on Name","Fragments":["private"]},{"Key":"Name private","Fragments":["unless"]},{"Key":"private unless","Fragments":["you"]},{"Key":"specifically want","Fragments":["to"]},{"Key":"allow someone","Fragments":["else"]},{"Key":"the robot's","Fragments":["name."]},{"Key":"Also \u003ccode\u003erandom.Next(0,","Fragments":["x)\u003c/code\u003e"]},{"Key":"\u003ccode\u003erandom.Next(0, x)\u003c/code\u003e","Fragments":["is"]},{"Key":"x)\u003c/code\u003e is","Fragments":["the"]},{"Key":"as \u003ccode\u003erandom.Next(x)\u003c/code\u003e","Fragments":["so"]},{"Key":"\u003ccode\u003erandom.Next(x)\u003c/code\u003e so","Fragments":["you"]},{"Key":" Turns","Fragments":["out,"]},{"Key":"Turns out,","Fragments":["```.ForEach()```"]},{"Key":"out, ```.ForEach()```","Fragments":["exists"]},{"Key":"```.ForEach()``` exists","Fragments":["on"]},{"Key":"exists on","Fragments":["```List\u003cT\u003e```"]},{"Key":"on ```List\u003cT\u003e```","Fragments":["so"]},{"Key":"```List\u003cT\u003e``` so","Fragments":["you"]},{"Key":" ```oldScoreSet.ToList().ForEach(","Fragments":["..."]},{"Key":"```oldScoreSet.ToList().ForEach( ...","Fragments":[")```"]},{"Key":"for existence","Fragments":["in"]},{"Key":"existence in","Fragments":["case","said"]},{"Key":"the legacy","Fragments":["data"]},{"Key":"legacy data","Fragments":["duplicated"]},{"Key":"data duplicated","Fragments":["a"]},{"Key":"duplicated a","Fragments":["tile"]},{"Key":"a tile","Fragments":["letter."]},{"Key":" @sibyl","Fragments":["I"]},{"Key":"@sibyl I","Fragments":["don't"]},{"Key":"think so,","Fragments":["how"]},{"Key":"so, how","Fragments":["can"]},{"Key":"how can","Fragments":["I"]},{"Key":"repeat a","Fragments":["iteration"]},{"Key":"a iteration","Fragments":["so"]},{"Key":"iteration so","Fragments":["it"]},{"Key":"can catch","Fragments":["the"]},{"Key":"extra 'I's","Fragments":["on"]},{"Key":"'I's on","Fragments":["3?"]},{"Key":"on 3?","Fragments":["I"]},{"Key":"3? I","Fragments":["could"]},{"Key":"try putting","Fragments":["in"]},{"Key":"putting in","Fragments":["an","countless"]},{"Key":"inner loop,","Fragments":["but","but"]},{"Key":"on what's","Fragments":["going"]},{"Key":"Your problem","Fragments":["with"]},{"Key":"probably that","Fragments":["the"]},{"Key":"that holds","Fragments":["the"]},{"Key":"holds the","Fragments":["test"]},{"Key":"your namespace.","Fragments":["To"]},{"Key":"namespace. To","Fragments":["solve"]},{"Key":"To solve","Fragments":["it"]},{"Key":"solve it","Fragments":["you","without","with"]},{"Key":"a \u003ccode\u003eusing","Fragments":["Anagram;\u003c/code\u003e"]},{"Key":"\u003ccode\u003eusing Anagram;\u003c/code\u003e","Fragments":["in"]},{"Key":"Anagram;\u003c/code\u003e in","Fragments":["the"]},{"Key":"test or","Fragments":["you"]},{"Key":"or you","Fragments":["could","might","could","could","could"]},{"Key":"the namespace","Fragments":["in","I"]},{"Key":"namespace in","Fragments":["your"]},{"Key":"The number","Fragments":["of","```31557600```"]},{"Key":"variables is","Fragments":["not"]},{"Key":"not bad","Fragments":["-"]},{"Key":"bad -","Fragments":["though"]},{"Key":"need charWordToCheck","Fragments":["-"]},{"Key":"charWordToCheck -","Fragments":["it"]},{"Key":"only appears","Fragments":["to"]},{"Key":"even really","Fragments":["need"]},{"Key":"need it","Fragments":["there.","Tuple"]},{"Key":"there. Nor","Fragments":["do"]},{"Key":"Nor do","Fragments":["you"]},{"Key":"need wordFromList","Fragments":["-"]},{"Key":"wordFromList -","Fragments":["just"]},{"Key":"put put","Fragments":["the"]},{"Key":"output from","Fragments":["\u003ccode\u003eword.ToLower().ToCharArray()\u003c/code\u003e"]},{"Key":"from \u003ccode\u003eword.ToLower().ToCharArray()\u003c/code\u003e","Fragments":["straight"]},{"Key":"\u003ccode\u003eword.ToLower().ToCharArray()\u003c/code\u003e straight","Fragments":["into"]},{"Key":"straight into","Fragments":["\u003ccode\u003esortedWordFromList\u003c/code\u003e."]},{"Key":"can probably","Fragments":["get","readily"]},{"Key":"of more","Fragments":["-","than"]},{"Key":"more -","Fragments":["'output'"]},{"Key":"- 'output'","Fragments":["is"]},{"Key":"'output' is","Fragments":["not"]},{"Key":"needed -","Fragments":["you"]},{"Key":"- you","Fragments":["could","don't","are","both"]},{"Key":"could sort","Fragments":["the"]},{"Key":"the anagramList","Fragments":["and"]},{"Key":"anagramList and","Fragments":["then"]},{"Key":"Doesn't this","Fragments":["fail"]},{"Key":"this fail","Fragments":["the"]},{"Key":"the Forceful","Fragments":["questions"]},{"Key":"Forceful questions","Fragments":["test"]},{"Key":"questions test","Fragments":["case?"]},{"Key":"is passed","Fragments":["a","as","in."]},{"Key":"statement argument","Fragments":["it"]},{"Key":"argument it","Fragments":["will"]},{"Key":"exception. You","Fragments":["could"]},{"Key":"use ```String.IsNullOrEmpty(statement)","Fragments":["```"]},{"Key":"```String.IsNullOrEmpty(statement) ```","Fragments":["before"]},{"Key":"``` before","Fragments":["```statement.Trim()==\"\""]},{"Key":"before ```statement.Trim()==\"\"","Fragments":["```"]},{"Key":"```statement.Trim()==\"\" ```","Fragments":["to","could"]},{"Key":"``` to","Fragments":["fix"]},{"Key":"fix this.","Fragments":["```statement.Trim()==\"\""]},{"Key":"this. ```statement.Trim()==\"\"","Fragments":["```"]},{"Key":"``` could","Fragments":["actually"]},{"Key":"with ```String.IsNullOrWhiteSpace(statement)","Fragments":["```."]},{"Key":"put ```using","Fragments":["System.Text.RegularExpressions```"]},{"Key":"```using System.Text.RegularExpressions```","Fragments":["at"]},{"Key":"System.Text.RegularExpressions``` at","Fragments":["the"]},{"Key":"top you","Fragments":["won't"]},{"Key":"to fully","Fragments":["type"]},{"Key":"fully type","Fragments":["it"]},{"Key":"it's used,","Fragments":["making"]},{"Key":"used, making","Fragments":["your"]},{"Key":"making your","Fragments":["last"]},{"Key":"last ```if```","Fragments":["condition"]},{"Key":"```if``` condition","Fragments":["easier"]},{"Key":"condition easier","Fragments":["to"]},{"Key":"that's just","Fragments":["personal"]},{"Key":"preference. Not","Fragments":["sure"]},{"Key":"the style","Fragments":["rule"]},{"Key":"style rule","Fragments":["on"]},{"Key":"rule on","Fragments":["this"]},{"Key":"this myself.","Fragments":["Take"]},{"Key":"myself. Take","Fragments":["my"]},{"Key":"Take my","Fragments":["suggestions"]},{"Key":"my suggestions","Fragments":["only"]},{"Key":"suggestions only","Fragments":["for"]},{"Key":"only for","Fragments":["what"]},{"Key":"easy in","Fragments":["your"]},{"Key":"current architecture","Fragments":["because"]},{"Key":"architecture because","Fragments":["you"]},{"Key":"and month","Fragments":["information"]},{"Key":"month information","Fragments":["at"]},{"Key":"information at","Fragments":["the"]},{"Key":"are determining","Fragments":["the"]},{"Key":"To do","Fragments":["it"]},{"Key":"right you","Fragments":["probably"]},{"Key":"change First,","Fragments":["Second,"]},{"Key":"First, Second,","Fragments":["etc.","Third,"]},{"Key":"Second, etc.","Fragments":["to"]},{"Key":"etc. to","Fragments":["be"]},{"Key":"that passed","Fragments":["into"]},{"Key":"into Day().","Fragments":["Inside"]},{"Key":"Day(). Inside","Fragments":["day"]},{"Key":"Inside day","Fragments":["you"]},{"Key":"day you","Fragments":["can"]},{"Key":"then figure","Fragments":["out"]},{"Key":"where to","Fragments":["start"]},{"Key":"start from","Fragments":["based","scratch."]},{"Key":"from based","Fragments":["on"]},{"Key":"which of","Fragments":["then"]},{"Key":"of then","Fragments":["enumeration"]},{"Key":"then enumeration","Fragments":["values"]},{"Key":"enumeration values","Fragments":["was"]},{"Key":"values was","Fragments":["passed"]},{"Key":"was passed","Fragments":["in.","in"]},{"Key":"From there","Fragments":["you"]},{"Key":"there you","Fragments":["can"]},{"Key":"do \u003ccode\u003evar","Fragments":["lastDay"]},{"Key":"\u003ccode\u003evar lastDay","Fragments":["=","="]},{"Key":"lastDay =","Fragments":["new","new"]},{"Key":"new DateTime(Year,","Fragments":["Month,","Month,","Month,"]},{"Key":"DateTime(Year, Month,","Fragments":["DateTime.DaysInMonth(Year,","1).AddMonths(1).AddDays(-1);\u003c/code\u003e.","1);"]},{"Key":"Month, DateTime.DaysInMonth(Year,","Fragments":["Month));\u003c/code\u003e."]},{"Key":"DateTime.DaysInMonth(Year, Month));\u003c/code\u003e.","Fragments":["Another"]},{"Key":"Month));\u003c/code\u003e. Another","Fragments":["option"]},{"Key":"is \u003ccode\u003evar","Fragments":["lastDay"]},{"Key":"small inefficiency","Fragments":["in"]},{"Key":"inefficiency in","Fragments":["that"]},{"Key":"modulo inside","Fragments":["the"]},{"Key":"inner loop.","Fragments":["If","I"]},{"Key":"loop. If","Fragments":["you"]},{"Key":"following you","Fragments":["can"]},{"Key":"avoid extra","Fragments":["work."]},{"Key":"= multi;","Fragments":["i"]},{"Key":"multi; i","Fragments":["\u003c"]},{"Key":"\u003c limit;","Fragments":["i"]},{"Key":"limit; i","Fragments":["+="]},{"Key":"i +=","Fragments":["multi)"]},{"Key":"+= multi)","Fragments":["{"]},{"Key":"HashSet for","Fragments":["your"]},{"Key":"your list","Fragments":["of"]},{"Key":"matches there","Fragments":["is"]},{"Key":"check \u003ccode\u003ematches.Contains(i)\u003c/code\u003e.","Fragments":["Sets"]},{"Key":"\u003ccode\u003ematches.Contains(i)\u003c/code\u003e. Sets","Fragments":["only"]},{"Key":"Sets only","Fragments":["allow"]},{"Key":"only allow","Fragments":["one","one"]},{"Key":"allow one","Fragments":["copy","copy"]},{"Key":"one copy","Fragments":["of","of"]},{"Key":"any value","Fragments":["and","in"]},{"Key":"the Add()","Fragments":["method"]},{"Key":"Add() method","Fragments":["will"]},{"Key":"second time","Fragments":["-"]},{"Key":"false which","Fragments":["you","to"]},{"Key":"are ignoring","Fragments":["anyway."]},{"Key":"enough -","Fragments":["no"]},{"Key":"Just so","Fragments":["you","you","you"]},{"Key":"see it,","Fragments":["here"]},{"Key":"it, here","Fragments":["is"]},{"Key":"string roman","Fragments":["=","="]},{"Key":"roman =","Fragments":["string.Empty;","string.Empty;"]},{"Key":"string\u003e pair","Fragments":["in","in"]},{"Key":"pair in","Fragments":["Numerals)","Numerals)"]},{"Key":"while (number","Fragments":["\u003e="]},{"Key":"(number \u003e=","Fragments":["pair.Item1)"]},{"Key":" roman","Fragments":["+=","+="]},{"Key":"roman +=","Fragments":["pair.Item2;","String.Concat(Enumerable.Repeat(pair.Item2,"]},{"Key":"number -=","Fragments":["pair.Item1;","count"]},{"Key":"= number","Fragments":["/","*","+"]},{"Key":"number /","Fragments":["pair.Item1;"]},{"Key":"+= String.Concat(Enumerable.Repeat(pair.Item2,","Fragments":["count));"]},{"Key":"-= count","Fragments":["*","*","*"]},{"Key":"count *","Fragments":["pair.Item1;","ruleNumber.Key;","key;"]},{"Key":"change 'kind'","Fragments":["to"]},{"Key":"'kind' to","Fragments":["have"]},{"Key":"setter so","Fragments":["no"]},{"Key":"one outside","Fragments":["this"]},{"Key":"the triangle","Fragments":["kind","is","described"]},{"Key":"triangle kind","Fragments":["on"]},{"Key":"kind on","Fragments":["you?"]},{"Key":"need all","Fragments":["those"]},{"Key":"those checks","Fragments":["before"]},{"Key":"returning Scalene.","Fragments":["Simply"]},{"Key":"Scalene. Simply","Fragments":["move"]},{"Key":"Simply move","Fragments":["Scalene"]},{"Key":"move Scalene","Fragments":["last"]},{"Key":"Scalene last","Fragments":["and"]},{"Key":"last and","Fragments":["if"]},{"Key":"wasn't Equilateral","Fragments":["and"]},{"Key":"Equilateral and","Fragments":["it","Isosceles"]},{"Key":"wasn't Isosceles","Fragments":["it"]},{"Key":"Isosceles it","Fragments":["has"]},{"Key":"your checks","Fragments":["for","would"]},{"Key":"for Isosceles","Fragments":["are"]},{"Key":"Isosceles are","Fragments":["too"]},{"Key":"too complicated.","Fragments":["You","if","There"]},{"Key":"complicated. You","Fragments":["only"]},{"Key":"check \u003ccode\u003eif","Fragments":["(s1"]},{"Key":"\u003ccode\u003eif (s1","Fragments":["=="]},{"Key":"(s1 ==","Fragments":["s2"]},{"Key":"== s2","Fragments":["||"]},{"Key":"s2 ||","Fragments":["s2"]},{"Key":"|| s2","Fragments":["=="]},{"Key":"s2 ==","Fragments":["s3"]},{"Key":"== s3","Fragments":["||"]},{"Key":"s3 ||","Fragments":["s1"]},{"Key":"|| s1","Fragments":["=="]},{"Key":"s1 ==","Fragments":["s3)\u003c/code\u003e."]},{"Key":"This appears","Fragments":["overly"]},{"Key":"appears overly","Fragments":["complicated."]},{"Key":"overly complicated.","Fragments":["The"]},{"Key":"complicated. The","Fragments":["idea"]},{"Key":"The idea","Fragments":["is","is"]},{"Key":"idea is","Fragments":["right","just","that"]},{"Key":"right (at","Fragments":["least"]},{"Key":"least it","Fragments":["is","might"]},{"Key":"two easiest","Fragments":["ways"]},{"Key":"easiest ways","Fragments":["to"]},{"Key":"implement it),","Fragments":["but"]},{"Key":"it), but","Fragments":["it"]},{"Key":"need both","Fragments":["\u003ccode\u003emultiples\u003c/code\u003e","FindTriplets"]},{"Key":"both \u003ccode\u003emultiples\u003c/code\u003e","Fragments":["and"]},{"Key":"\u003ccode\u003emultiples\u003c/code\u003e and","Fragments":["\u003ccode\u003e_multiples\u003c/code\u003e?"]},{"Key":"and \u003ccode\u003e_multiples\u003c/code\u003e?","Fragments":["I"]},{"Key":"\u003ccode\u003e_multiples\u003c/code\u003e? I","Fragments":["can't"]},{"Key":"in having","Fragments":["both."]},{"Key":"line (\u003ccode\u003eint","Fragments":["mulCount"]},{"Key":"(\u003ccode\u003eint mulCount","Fragments":["="]},{"Key":"mulCount =","Fragments":["((Distance","(Distance"]},{"Key":"= ((Distance","Fragments":["-"]},{"Key":"((Distance -","Fragments":["1","1)"]},{"Key":"- 1","Fragments":["-"]},{"Key":"- ((Distance","Fragments":["-"]},{"Key":"- 1)","Fragments":["%","/","though","*"]},{"Key":"1) %","Fragments":["i))"]},{"Key":"% i))","Fragments":["/"]},{"Key":"i)) /","Fragments":["i);\u003c/code\u003e)"]},{"Key":"/ i);\u003c/code\u003e)","Fragments":["doing?"]},{"Key":"i);\u003c/code\u003e) doing?","Fragments":["From"]},{"Key":"doing? From","Fragments":["the"]},{"Key":"context I","Fragments":["think"]},{"Key":"be getting","Fragments":["the","returned"]},{"Key":"times we","Fragments":["are"]},{"Key":"going 'i'","Fragments":["by"]},{"Key":"'i' by","Fragments":["so"]},{"Key":"by so","Fragments":["that"]},{"Key":"of i","Fragments":["up","got","for","and"]},{"Key":"i up","Fragments":["to"]},{"Key":"including Distance.","Fragments":["If"]},{"Key":"Distance. If","Fragments":["so,"]},{"Key":"so, should","Fragments":["it"]},{"Key":"be \u003ccode\u003eint","Fragments":["mulCount"]},{"Key":"\u003ccode\u003eint mulCount","Fragments":["="]},{"Key":"= (Distance","Fragments":["-"]},{"Key":"(Distance -","Fragments":["1)"]},{"Key":"1) /","Fragments":["i;\u003c/code\u003e?"]},{"Key":"Since multiplication","Fragments":["is"]},{"Key":"multiplication is","Fragments":["generally","essentially","larger"]},{"Key":"generally slower","Fragments":["than"]},{"Key":"than addition,","Fragments":["could"]},{"Key":"addition, could","Fragments":["you"]},{"Key":"loop using","Fragments":["'y'"]},{"Key":"using 'y'","Fragments":["so"]},{"Key":"'y' so","Fragments":["that"]},{"Key":"that instead","Fragments":["of"]},{"Key":"of starting","Fragments":["at"]},{"Key":"starting at","Fragments":["1","1","3"]},{"Key":"at 1","Fragments":["and","and"]},{"Key":"and incrementing","Fragments":["by"]},{"Key":"incrementing by","Fragments":["1","multi"]},{"Key":"by 1","Fragments":["it"]},{"Key":"1 it","Fragments":["would"]},{"Key":"at 'i'","Fragments":["and"]},{"Key":"'i' and","Fragments":["increment"]},{"Key":"by 'i'?","Fragments":["That"]},{"Key":"'i'? That","Fragments":["way"]},{"Key":"three multiplications","Fragments":["per"]},{"Key":"multiplications per","Fragments":["loop."]},{"Key":"are keeping","Fragments":["both"]},{"Key":"keeping both","Fragments":["a"]},{"Key":"both a","Fragments":["list"]},{"Key":"multiples (usedMultiples)","Fragments":["and"]},{"Key":"(usedMultiples) and","Fragments":["the"]},{"Key":"the sum","Fragments":["of","filter"]},{"Key":"sum of","Fragments":["all"]},{"Key":"them (returnSum).","Fragments":["It"]},{"Key":"(returnSum). It","Fragments":["would"]},{"Key":"of usedMultiples","Fragments":["and"]},{"Key":"usedMultiples and","Fragments":["then"]},{"Key":"done you","Fragments":["can"]},{"Key":"can call","Fragments":["usedMultiples.Sum()","the"]},{"Key":"call usedMultiples.Sum()","Fragments":["to"]},{"Key":"usedMultiples.Sum() to","Fragments":["generate"]},{"Key":"A slight","Fragments":["improvement"]},{"Key":"improvement might","Fragments":["be"]},{"Key":"SortedSet for","Fragments":["usedMultiples."]},{"Key":"for usedMultiples.","Fragments":["That"]},{"Key":"usedMultiples. That","Fragments":["way"]},{"Key":"value already","Fragments":["exists"]},{"Key":"exists (sets","Fragments":["only"]},{"Key":"(sets only","Fragments":["allow"]},{"Key":"any entry","Fragments":["and"]},{"Key":"entry and","Fragments":["the","a"]},{"Key":"will silently","Fragments":["not"]},{"Key":"silently not","Fragments":["add"]},{"Key":"couldn't really","Fragments":["think"]},{"Key":"any trade-offs","Fragments":["nor"]},{"Key":"trade-offs nor","Fragments":["could"]},{"Key":"nor could","Fragments":["I"]},{"Key":"any simpler","Fragments":["way"]},{"Key":"of managing","Fragments":["repeeat"]},{"Key":"managing repeeat","Fragments":["calls"]},{"Key":"repeeat calls","Fragments":["on"]},{"Key":"on these","Fragments":["methods,"]},{"Key":"these methods,","Fragments":["I"]},{"Key":"would best","Fragments":["to"]},{"Key":"data after","Fragments":["calculating"]},{"Key":"after calculating","Fragments":["a"]},{"Key":"a value.","Fragments":["I"]},{"Key":"the planet,","Fragments":["the"]},{"Key":"planet, the","Fragments":["orbital"]},{"Key":"the orbital","Fragments":["conversion","conversions"]},{"Key":"orbital conversion","Fragments":["factor,"]},{"Key":"conversion factor,","Fragments":["and"]},{"Key":"factor, and","Fragments":["the"]},{"Key":"the calculated","Fragments":["value.","datetime,"]},{"Key":"calculated value.","Fragments":["I"]},{"Key":"considered making","Fragments":["a"]},{"Key":"class using","Fragments":["IDictionary,"]},{"Key":"using IDictionary,","Fragments":["but"]},{"Key":"IDictionary, but","Fragments":["that"]},{"Key":"that seemed","Fragments":["too"]},{"Key":"seemed too","Fragments":["complicated","easy..."]},{"Key":"complicated given","Fragments":["the"]},{"Key":"After thinking","Fragments":["about"]},{"Key":"the 'double'","Fragments":["conversion"]},{"Key":"'double' conversion","Fragments":["factor"]},{"Key":"conversion factor","Fragments":["for"]},{"Key":"factor for","Fragments":["the"]},{"Key":"the key.","Fragments":["But","This"]},{"Key":"key. But","Fragments":["I"]},{"Key":"to reference","Fragments":["the"]},{"Key":"double itself,","Fragments":["so"]},{"Key":"itself, so","Fragments":["I"]},{"Key":"to assign","Fragments":["the","a"]},{"Key":"orbital conversions","Fragments":["to"]},{"Key":"conversions to","Fragments":["a"]},{"Key":"value for","Fragments":["the"]},{"Key":"the calculate","Fragments":["method"]},{"Key":"calculate method","Fragments":["generic"]},{"Key":"method generic","Fragments":["so"]},{"Key":"generic so","Fragments":["that"]},{"Key":"repeat any","Fragments":["code"]},{"Key":"the 'On...'","Fragments":["calls."]},{"Key":"'On...' calls.","Fragments":["I"]},{"Key":"calls. I","Fragments":["then"]},{"Key":"ensure that","Fragments":["every","you"]},{"Key":"every orbit","Fragments":["calculation"]},{"Key":"orbit calculation","Fragments":["is"]},{"Key":"only made","Fragments":["one"]},{"Key":"made one","Fragments":["time."]},{"Key":"This required","Fragments":["a"]},{"Key":"required a","Fragments":["little"]},{"Key":"more code","Fragments":["than",":smile:"]},{"Key":"than calculating","Fragments":["the","the"]},{"Key":"the conversions","Fragments":["for"]},{"Key":"conversions for","Fragments":["each"]},{"Key":"each method","Fragments":["call,","is"]},{"Key":"method call,","Fragments":["but"]},{"Key":"call, but","Fragments":["if"]},{"Key":"same method","Fragments":["call"]},{"Key":"is made","Fragments":["more","fine,","to","explicit"]},{"Key":"than once,","Fragments":["it"]},{"Key":"once, it","Fragments":["will"]},{"Key":"On one","Fragments":["of"]},{"Key":"my exercises","Fragments":["you"]},{"Key":"exercises you","Fragments":["pointed"]},{"Key":"it's most","Fragments":["efficient"]},{"Key":"value after","Fragments":["it's"]},{"Key":"it's calculated.","Fragments":["Would"]},{"Key":"calculated. Would","Fragments":["that"]},{"Key":"Would that","Fragments":["approach"]},{"Key":"that approach","Fragments":["be","after"]},{"Key":"approach be","Fragments":["appropriate"]},{"Key":"be appropriate","Fragments":["here,"]},{"Key":"appropriate here,","Fragments":["as"]},{"Key":"as well?","Fragments":["If"]},{"Key":"well? If","Fragments":["not,"]},{"Key":"If not,","Fragments":["why","then","I'm"]},{"Key":"not, why","Fragments":["would"]},{"Key":"would storing","Fragments":["a"]},{"Key":"value be","Fragments":["important"]},{"Key":"important in","Fragments":["one"]},{"Key":"one context","Fragments":["but"]},{"Key":"context but","Fragments":["not"]},{"Key":"the IsScreaming","Fragments":["method"]},{"Key":"IsScreaming method","Fragments":["isn't"]},{"Key":"method isn't","Fragments":["that","anything"]},{"Key":"isn't that","Fragments":["great,"]},{"Key":"that great,","Fragments":["will"]},{"Key":"great, will","Fragments":["try"]},{"Key":"iteration. Perhaps","Fragments":["just"]},{"Key":"Perhaps just","Fragments":["check"]},{"Key":"for sentences","Fragments":["where"]},{"Key":"sentences where","Fragments":["ALL"]},{"Key":"where ALL","Fragments":["letters"]},{"Key":"ALL letters","Fragments":["are"]},{"Key":"are upper","Fragments":["case","case."]},{"Key":"case (the","Fragments":["whole"]},{"Key":"(the whole","Fragments":["sentence"]},{"Key":"whole sentence","Fragments":["is"]},{"Key":"sentence is","Fragments":["yelled)."]},{"Key":"Thanks @israel,","Fragments":["will"]},{"Key":"@israel, will","Fragments":["remove"]},{"Key":"will remove","Fragments":["that","them,"]},{"Key":"you're testing","Fragments":["IsNullOrWhiteSpace"]},{"Key":"testing IsNullOrWhiteSpace","Fragments":["then"]},{"Key":"IsNullOrWhiteSpace then","Fragments":["you"]},{"Key":"of readonly","Fragments":["instance"]},{"Key":"readonly instance","Fragments":["variables,"]},{"Key":"instance variables,","Fragments":["the"]},{"Key":"variables, the","Fragments":["Responses"]},{"Key":"the Responses","Fragments":["could"]},{"Key":"Responses could","Fragments":["be"]},{"Key":"It's easy","Fragments":["to"]},{"Key":"on only","Fragments":["ASCII"]},{"Key":"only ASCII","Fragments":["letters"]},{"Key":"ASCII letters","Fragments":["by"]},{"Key":"letters by","Fragments":["hardcoding"]},{"Key":"by hardcoding","Fragments":["ranges"]},{"Key":"hardcoding ranges","Fragments":["like"]},{"Key":"ranges like","Fragments":["`[a-z]`."]},{"Key":"like `[a-z]`.","Fragments":["Instead"]},{"Key":"`[a-z]`. Instead","Fragments":["you"]},{"Key":"be international-friendly","Fragments":["by"]},{"Key":"international-friendly by","Fragments":["using"]},{"Key":"using [Unicode","Fragments":["Categories](http://msdn.microsoft.com/en-us/library/20bw873z%28v=vs.110%29.aspx#SupportedUnicodeGeneralCategories):"]},{"Key":"[Unicode Categories](http://msdn.microsoft.com/en-us/library/20bw873z%28v=vs.110%29.aspx#SupportedUnicodeGeneralCategories):","Fragments":["For"]},{"Key":"Categories](http://msdn.microsoft.com/en-us/library/20bw873z%28v=vs.110%29.aspx#SupportedUnicodeGeneralCategories): For","Fragments":["example"]},{"Key":"example using","Fragments":["`\\p{Ll}`"]},{"Key":"using `\\p{Ll}`","Fragments":["instead"]},{"Key":"`\\p{Ll}` instead","Fragments":["of"]},{"Key":"of `[a-z]`","Fragments":["means"]},{"Key":"`[a-z]` means","Fragments":["you"]},{"Key":"you match","Fragments":["the"]},{"Key":"string `\"åbc\"`","Fragments":["as"]},{"Key":"`\"åbc\"` as","Fragments":["lowercase"]},{"Key":"as lowercase","Fragments":[":)"]},{"Key":"Thanks, yeah","Fragments":["the"]},{"Key":"yeah the","Fragments":["constructor"]},{"Key":"should validate","Fragments":["the"]},{"Key":"validate the","Fragments":["input","nucleotide"]},{"Key":"made IsValid","Fragments":["use"]},{"Key":"IsValid use","Fragments":["individual"]},{"Key":"use individual","Fragments":["checks"]},{"Key":"checks is","Fragments":["that"]},{"Key":"that DNA","Fragments":["nucleotides"]},{"Key":"DNA nucleotides","Fragments":["will"]},{"Key":"nucleotides will","Fragments":["only"]},{"Key":"ever have","Fragments":["4","an"]},{"Key":"have 4","Fragments":["bases.","here"]},{"Key":"4 bases.","Fragments":["However"]},{"Key":"bases. However","Fragments":["the"]},{"Key":"However the","Fragments":["input"]},{"Key":"input sequence","Fragments":["can","was"]},{"Key":"sequence can","Fragments":["be"]},{"Key":"be huge","Fragments":["so"]},{"Key":"huge so","Fragments":["performance"]},{"Key":"so performance","Fragments":["of"]},{"Key":"performance of","Fragments":["the"]},{"Key":"the IsValid","Fragments":["method"]},{"Key":"IsValid method","Fragments":["will"]},{"Key":"and .ContainsKey","Fragments":["would"]},{"Key":".ContainsKey would","Fragments":["do"]},{"Key":"lookup as","Fragments":["you"]},{"Key":"previous exercise.","Fragments":["I"]},{"Key":"go south","Fragments":["if"]},{"Key":"south if","Fragments":["the"]},{"Key":"sequence was","Fragments":["1.5Gb"]},{"Key":"was 1.5Gb","Fragments":["(~"]},{"Key":"1.5Gb (~","Fragments":["size"]},{"Key":"(~ size","Fragments":["of"]},{"Key":"human genome)","Fragments":["?"]},{"Key":"genome) ?","Fragments":["How"]},{"Key":"? How","Fragments":["would"]},{"Key":"How would","Fragments":["you","that"]},{"Key":"The unit","Fragments":["tests","tests","tests"]},{"Key":"have changed,","Fragments":["you"]},{"Key":"changed, you","Fragments":["might"]},{"Key":"consider throwing","Fragments":["when"]},{"Key":"throwing when","Fragments":["strings"]},{"Key":"when strings","Fragments":["are"]},{"Key":" Partly","Fragments":["because"]},{"Key":"Partly because","Fragments":["I"]},{"Key":"decided not","Fragments":["to"]},{"Key":"any generics(to","Fragments":["do"]},{"Key":"generics(to do","Fragments":["the"]},{"Key":"project \"right\"","Fragments":["more"]},{"Key":"\"right\" more","Fragments":["than"]},{"Key":"than anything;","Fragments":["generic"]},{"Key":"anything; generic","Fragments":["collections"]},{"Key":"generic collections","Fragments":["kind"]},{"Key":"collections kind","Fragments":["of"]},{"Key":"of feel","Fragments":["like"]},{"Key":"like cheating","Fragments":["sometimes),"]},{"Key":"cheating sometimes),","Fragments":["I"]},{"Key":"sometimes), I","Fragments":["had"]},{"Key":"of trouble","Fragments":["with","with","with"]},{"Key":"I wasted","Fragments":["more"]},{"Key":"wasted more","Fragments":["than"]},{"Key":"than an","Fragments":["hour","anonymous"]},{"Key":"hour mucking","Fragments":["about"]},{"Key":"mucking about","Fragments":["with"]},{"Key":"about with","Fragments":["a","IEnumerable"]},{"Key":"a jagged","Fragments":["array"]},{"Key":"jagged array","Fragments":["solution"]},{"Key":"array solution","Fragments":["that"]},{"Key":"that turned","Fragments":["out"]},{"Key":"turned out","Fragments":["to"]},{"Key":"a dead","Fragments":["end,"]},{"Key":"dead end,","Fragments":["and"]},{"Key":"end, and","Fragments":["even"]},{"Key":"even messier","Fragments":["than"]},{"Key":"messier than","Fragments":["what"]},{"Key":"Ahh, yeah...","Fragments":["If"]},{"Key":"yeah... If","Fragments":["you"]},{"Key":"how anonymous","Fragments":["functions/generics"]},{"Key":"anonymous functions/generics","Fragments":["work"]},{"Key":"functions/generics work","Fragments":["in"]},{"Key":"C#, I","Fragments":["guess"]},{"Key":"be impossible","Fragments":["based"]},{"Key":"impossible based","Fragments":["upon"]},{"Key":"upon how","Fragments":["the"]},{"Key":"tests were","Fragments":["setup.","splitting"]},{"Key":"were setup.","Fragments":[":)"]},{"Key":"Yeah, it","Fragments":["is"]},{"Key":"is rare","Fragments":["in"]},{"Key":"rare in","Fragments":["my"]},{"Key":"my line","Fragments":["of"]},{"Key":"where bit","Fragments":["shifting"]},{"Key":"shifting gives","Fragments":["me"]},{"Key":"solution I'm","Fragments":["looking"]},{"Key":"looking for,","Fragments":["so","but"]},{"Key":"for, so","Fragments":["I"]},{"Key":"I forget","Fragments":["about","exactly"]},{"Key":"simple if-statement","Fragments":["clause."]},{"Key":"wonder, maybe","Fragments":["are"]},{"Key":"maybe are","Fragments":["other"]},{"Key":"other statements","Fragments":["more"]},{"Key":"statements more","Fragments":["readable"]},{"Key":"the setter","Fragments":["private"]},{"Key":"setter private","Fragments":["on"]},{"Key":"dictionary keeps","Fragments":["the"]},{"Key":"user from","Fragments":["doing"]},{"Key":"from doing","Fragments":["a"]},{"Key":"a wholesale","Fragments":["replace"]},{"Key":"wholesale replace","Fragments":["of"]},{"Key":"replace of","Fragments":["the"]},{"Key":"dictionary but","Fragments":["once"]},{"Key":"reference they","Fragments":["are"]},{"Key":"are free","Fragments":["to"]},{"Key":"to muck","Fragments":["with"]},{"Key":"muck with","Fragments":["it"]},{"Key":"they wish.","Fragments":["The"]},{"Key":"wish. The","Fragments":["readme"]},{"Key":"readme has","Fragments":["a"]},{"Key":"bonus section","Fragments":["that"]},{"Key":"that asks","Fragments":["you"]},{"Key":"asks you","Fragments":["to"]},{"Key":"prevent that.","Fragments":["Have"]},{"Key":"that. Have","Fragments":["you"]},{"Key":"you given","Fragments":["any"]},{"Key":"given any","Fragments":["thought","prime"]},{"Key":"any thought","Fragments":["to"]},{"Key":"might do","Fragments":["it?","to"]},{"Key":"cleaner loop","Fragments":["just"]},{"Key":"loop just","Fragments":["incrementing"]},{"Key":"just incrementing","Fragments":["by"]},{"Key":"by multi","Fragments":["-"]},{"Key":"multi -","Fragments":["really"]},{"Key":"- really","Fragments":["seems"]},{"Key":"have noticed","Fragments":["that."]},{"Key":"using Sets,","Fragments":["so"]},{"Key":"Sets, so","Fragments":["I've"]},{"Key":"been missing","Fragments":["this"]},{"Key":"missing this","Fragments":["obviously"]},{"Key":"this obviously","Fragments":["more"]},{"Key":"obviously more","Fragments":["efficient"]},{"Key":"efficient ability","Fragments":["to"]},{"Key":"not worry","Fragments":["about","about"]},{"Key":"correct. I","Fragments":["had","prefer","should","hope"]},{"Key":"had used","Fragments":["anonymous"]},{"Key":"used anonymous","Fragments":["functions"]},{"Key":"in F#,","Fragments":["just"]},{"Key":"F#, just","Fragments":["not"]},{"Key":"not yet","Fragments":["in","solved"]},{"Key":"yet in","Fragments":["C#,"]},{"Key":"knew kind","Fragments":["of"]},{"Key":"I needed,","Fragments":["just"]},{"Key":"needed, just","Fragments":["none"]},{"Key":"just none","Fragments":["of"]},{"Key":"the syntax,","Fragments":["so","and"]},{"Key":"syntax, so","Fragments":["I"]},{"Key":"research on","Fragments":["this","other"]},{"Key":"use what","Fragments":["I"]},{"Key":"found quite","Fragments":["a"]},{"Key":"from now","Fragments":["on,","how"]},{"Key":"now on,","Fragments":["though."]},{"Key":"on, though.","Fragments":["Creating"]},{"Key":"though. Creating","Fragments":["extensions"]},{"Key":"Creating extensions","Fragments":["that"]},{"Key":"extensions that","Fragments":["allow"]},{"Key":"that allow","Fragments":["new","you","validation"]},{"Key":"allow new","Fragments":["capabilities"]},{"Key":"new capabilities","Fragments":["is"]},{"Key":"capabilities is","Fragments":["wonderful."]},{"Key":" `anagrams`","Fragments":["starts"]},{"Key":"`anagrams` starts","Fragments":["as"]},{"Key":"starts as","Fragments":["the"]},{"Key":"empty set","Fragments":["and"]},{"Key":"set and","Fragments":["is","then"]},{"Key":"never updated,","Fragments":["so"]},{"Key":"updated, so","Fragments":["`anagrams.Contains(anagram)`"]},{"Key":"so `anagrams.Contains(anagram)`","Fragments":["will"]},{"Key":"`anagrams.Contains(anagram)` will","Fragments":["always"]},{"Key":"will always","Fragments":["evaluate","use"]},{"Key":"always evaluate","Fragments":["to"]},{"Key":"to `false`.","Fragments":["I"]},{"Key":"`false`. I","Fragments":["think"]},{"Key":"at that.","Fragments":[":)"]},{"Key":"More code","Fragments":["readability,"]},{"Key":"code readability,","Fragments":["maybe"]},{"Key":"readability, maybe","Fragments":["performance"]},{"Key":" Def","Fragments":["should"]},{"Key":"Def should","Fragments":["remove"]},{"Key":"should remove","Fragments":["condtional"]},{"Key":"remove condtional","Fragments":["nesting"]},{"Key":"condtional nesting","Fragments":["in"]},{"Key":"Your and","Fragments":["I"]},{"Key":"took different","Fragments":["approaches,"]},{"Key":"different approaches,","Fragments":["but","but"]},{"Key":"approaches, but","Fragments":["I","you"]},{"Key":"can respect","Fragments":["your"]},{"Key":"respect your","Fragments":["decision"]},{"Key":"your decision","Fragments":["to"]},{"Key":"decision to","Fragments":["avoid"]},{"Key":"issue I","Fragments":["see","was","had","seem"]},{"Key":"are repeatedly","Fragments":["creating"]},{"Key":"repeatedly creating","Fragments":["a"]},{"Key":"string representing","Fragments":["the"]},{"Key":"representing the","Fragments":["alphatised","Allergens,"]},{"Key":"the alphatised","Fragments":["list"]},{"Key":"alphatised list","Fragments":["of"]},{"Key":"of chars","Fragments":["for","and"]},{"Key":"chars for","Fragments":["the"]},{"Key":"word for","Fragments":["each"]},{"Key":"match list","Fragments":["each"]},{"Key":"Good questions.","Fragments":["If"]},{"Key":"questions. If","Fragments":["you"]},{"Key":"scanning 1.5Gb","Fragments":["and"]},{"Key":"1.5Gb and","Fragments":["performance"]},{"Key":"and performance","Fragments":["is"]},{"Key":"is critical","Fragments":["there"]},{"Key":"critical there","Fragments":["are"]},{"Key":"could do.","Fragments":["For"]},{"Key":"do. For","Fragments":["one,"]},{"Key":"For one,","Fragments":["you"]},{"Key":"one, you","Fragments":["could"]},{"Key":"the genome","Fragments":["into"]},{"Key":"genome into","Fragments":["smaller"]},{"Key":"smaller sequences","Fragments":["and","are"]},{"Key":"and count","Fragments":["them","at"]},{"Key":"in separate","Fragments":["threads","classes,"]},{"Key":"separate threads","Fragments":["and"]},{"Key":"threads and","Fragments":["add"]},{"Key":"add all","Fragments":["the"]},{"Key":"the counts","Fragments":["together"]},{"Key":"counts together","Fragments":["once"]},{"Key":"together once","Fragments":["all"]},{"Key":"once all","Fragments":["the"]},{"Key":"sequences are","Fragments":["done.","of"]},{"Key":"do would","Fragments":["be","be"]},{"Key":"have four","Fragments":["different","calls"]},{"Key":"four different","Fragments":["counts"]},{"Key":"different counts","Fragments":["(instead"]},{"Key":"counts (instead","Fragments":["of"]},{"Key":"a Dictionary)","Fragments":["so"]},{"Key":"Dictionary) so","Fragments":["that"]},{"Key":"could both","Fragments":["validate"]},{"Key":"both validate","Fragments":["and"]},{"Key":"validate and","Fragments":["count"]},{"Key":"count at","Fragments":["the"]},{"Key":" class","Fragments":["DNA","Program"]},{"Key":"int ACount","Fragments":["="]},{"Key":"ACount =","Fragments":["0;"]},{"Key":"int CCount","Fragments":["="]},{"Key":"CCount =","Fragments":["0;"]},{"Key":"int GCount","Fragments":["="]},{"Key":"GCount =","Fragments":["0;"]},{"Key":"int TCount","Fragments":["="]},{"Key":"TCount =","Fragments":["0;"]},{"Key":"public DNA(string","Fragments":["sequence)"]},{"Key":"foreach (char","Fragments":["n","letter","c","digit","c","c"]},{"Key":"(char n","Fragments":["in"]},{"Key":"n in","Fragments":["sequence)"]},{"Key":" switch","Fragments":["(n)","(nucleotide)","(schedule)","(when)"]},{"Key":" case","Fragments":["'A':","'C':","'G':","'T':","'A':","'C':","'G':","'T':","Schedule.First:","Schedule.Second:","Schedule.Third:","Schedule.Fourth:","Schedule.Last:","Schedule.Teenth:","Schedule.First:","Schedule.Second:","Schedule.Third:","Schedule.Fourth:","Schedule.Teenth:","Schedule.Last:"]},{"Key":"case 'A':","Fragments":["ACount++;","return"]},{"Key":"'A': ACount++;","Fragments":["break;"]},{"Key":"case 'C':","Fragments":["CCount++;","return"]},{"Key":"'C': CCount++;","Fragments":["break;"]},{"Key":"case 'G':","Fragments":["GCount++;","return"]},{"Key":"'G': GCount++;","Fragments":["break;"]},{"Key":"case 'T':","Fragments":["TCoung++;","return"]},{"Key":"'T': TCoung++;","Fragments":["break;"]},{"Key":"// or","Fragments":["keep","decimalValue"]},{"Key":"or keep","Fragments":["a"]},{"Key":"a count","Fragments":["of","array","instead","to"]},{"Key":"int Count(char","Fragments":["nucleotide)"]},{"Key":"'A': return","Fragments":["ACount;"]},{"Key":"'C': return","Fragments":["CCount;"]},{"Key":"'G': return","Fragments":["GCount;"]},{"Key":"'T': return","Fragments":["TCount;"]},{"Key":" default:","Fragments":["throw"]},{"Key":"default: throw","Fragments":["new"]},{"Key":"fast as","Fragments":["I","the"]},{"Key":"for handling","Fragments":["one","them"]},{"Key":"handling one","Fragments":["character"]},{"Key":"handle N","Fragments":["characters"]},{"Key":"N characters","Fragments":["at"]},{"Key":"characters at","Fragments":["a"]},{"Key":"a time","Fragments":["where"]},{"Key":"time where","Fragments":["you"]},{"Key":"big switch","Fragments":["statement"]},{"Key":"each possible","Fragments":["pattern."]},{"Key":"possible pattern.","Fragments":["The"]},{"Key":"pattern. The","Fragments":["code"]},{"Key":"get pretty","Fragments":["large,"]},{"Key":"pretty large,","Fragments":["but"]},{"Key":"large, but","Fragments":["it"]},{"Key":"probably run","Fragments":["faster."]},{"Key":"Actually, that","Fragments":["may"]},{"Key":"fastest that","Fragments":["I"]},{"Key":"for one","Fragments":["character","possible"]},{"Key":"time. Suppose","Fragments":["I"]},{"Key":"Suppose I","Fragments":["had"]},{"Key":"of integers","Fragments":["(lookup)"]},{"Key":"integers (lookup)","Fragments":["that"]},{"Key":"(lookup) that","Fragments":["was"]},{"Key":"was 256","Fragments":["large"]},{"Key":"256 large","Fragments":["(or"]},{"Key":"large (or","Fragments":["say"]},{"Key":"(or say","Fragments":["65536"]},{"Key":"say 65536","Fragments":["since"]},{"Key":"65536 since","Fragments":["a"]},{"Key":"since a","Fragments":["Char","Dictionary"]},{"Key":"a Char","Fragments":["is"]},{"Key":"Char is","Fragments":["2"]},{"Key":"is 2","Fragments":["bytes","non-null"]},{"Key":"2 bytes","Fragments":["long)."]},{"Key":"bytes long).","Fragments":["Every"]},{"Key":"long). Every","Fragments":["entry"]},{"Key":"Every entry","Fragments":["in"]},{"Key":"array would","Fragments":["be","be","maintain"]},{"Key":"be 4","Fragments":["except"]},{"Key":"4 except","Fragments":["for","every"]},{"Key":"for number","Fragments":["65"]},{"Key":"number 65","Fragments":["('A')"]},{"Key":"65 ('A')","Fragments":["which"]},{"Key":"('A') which","Fragments":["would"]},{"Key":"be 0,","Fragments":["number"]},{"Key":"0, number","Fragments":["67"]},{"Key":"number 67","Fragments":["('C')"]},{"Key":"67 ('C')","Fragments":["which"]},{"Key":"('C') which","Fragments":["would"]},{"Key":"be 1,","Fragments":["number"]},{"Key":"1, number","Fragments":["71"]},{"Key":"number 71","Fragments":["('G')"]},{"Key":"71 ('G')","Fragments":["which"]},{"Key":"('G') which","Fragments":["would"]},{"Key":"be 2,","Fragments":["and"]},{"Key":"2, and","Fragments":["number"]},{"Key":"and number","Fragments":["84","counter,"]},{"Key":"number 84","Fragments":["('T')"]},{"Key":"84 ('T')","Fragments":["which"]},{"Key":"('T') which","Fragments":["would"]},{"Key":"be 3.","Fragments":["Then"]},{"Key":"3. Then","Fragments":["I"]},{"Key":"count array","Fragments":["of"]},{"Key":"of size","Fragments":["5"]},{"Key":"size 5","Fragments":["initialized"]},{"Key":"5 initialized","Fragments":["to"]},{"Key":"to 0.","Fragments":["Then"]},{"Key":"0. Then","Fragments":["on"]},{"Key":"Then on","Fragments":["each","line"]},{"Key":"character I","Fragments":["would"]},{"Key":" count_array[lookup[(int)","Fragments":["nucleotide]]++;"]},{"Key":"check count_array[4]","Fragments":["and"]},{"Key":"count_array[4] and","Fragments":["if"]},{"Key":"not zero","Fragments":["then"]},{"Key":"zero then","Fragments":["I"]},{"Key":"fastest I","Fragments":["could"]},{"Key":"Yes, good","Fragments":["call."]},{"Key":"call. It","Fragments":["would"]},{"Key":"only calculate","Fragments":["each"]},{"Key":"calculate each","Fragments":["value"]},{"Key":"each value","Fragments":["once"]},{"Key":"value once","Fragments":["rather"]},{"Key":"once rather","Fragments":["than"]},{"Key":"than each","Fragments":["time"]},{"Key":"time On\u003cPlanetName\u003e","Fragments":["is"]},{"Key":"On\u003cPlanetName\u003e is","Fragments":["called."]},{"Key":"called. I","Fragments":["could"]},{"Key":"of doubles","Fragments":["that"]},{"Key":"doubles that","Fragments":["was"]},{"Key":"the age","Fragments":["for","and"]},{"Key":"age for","Fragments":["a"]},{"Key":"a planet","Fragments":["and"]},{"Key":"planet and","Fragments":["calculatePlanetYears"]},{"Key":"and calculatePlanetYears","Fragments":["could"]},{"Key":"calculatePlanetYears could","Fragments":["check"]},{"Key":"value had","Fragments":["already"]},{"Key":"had already","Fragments":["been"]},{"Key":"been calculated","Fragments":["or"]},{"Key":"calculated or","Fragments":["not."]},{"Key":"not. If","Fragments":["the"]},{"Key":"the Planet","Fragments":["was"]},{"Key":"Planet was","Fragments":["not"]},{"Key":"age and","Fragments":["add"]},{"Key":"we provided","Fragments":["a"]},{"Key":"change Seconds,","Fragments":["I"]},{"Key":"Seconds, I","Fragments":["could"]},{"Key":"could clear","Fragments":["the"]},{"Key":"clear the","Fragments":["list."]},{"Key":"come make","Fragments":["that"]},{"Key":"a look-up","Fragments":["in"]},{"Key":"look-up in","Fragments":["CalculateAge()","AllergicTo()"]},{"Key":"in CalculateAge()","Fragments":["with"]},{"Key":"CalculateAge() with","Fragments":["the"]},{"Key":"private double","Fragments":["CalculateAge(double"]},{"Key":"double CalculateAge(double","Fragments":["conversion)"]},{"Key":" double","Fragments":["age;"]},{"Key":" age","Fragments":["=","=","="]},{"Key":"age =","Fragments":["spaceAge[conversion];","(double)","Math.Round(age,"]},{"Key":"= (double)","Fragments":["Seconds"]},{"Key":"(double) Seconds","Fragments":["/"]},{"Key":"Seconds /","Fragments":["(double)","60","31557600"]},{"Key":"/ (double)","Fragments":["yearOnEarth;"]},{"Key":"= Math.Round(age,","Fragments":["2);"]},{"Key":" spaceAge.Add(conversion,","Fragments":["age);"]},{"Key":"this solution.....I","Fragments":["think"]},{"Key":"solution.....I think","Fragments":["I"]},{"Key":"go read","Fragments":["up"]},{"Key":"on Linq.","Fragments":["It"]},{"Key":"Linq. It","Fragments":["really"]},{"Key":"It really","Fragments":["simplifies","hurts"]},{"Key":"really simplifies","Fragments":["the"]},{"Key":"simplifies the","Fragments":["solution.","add","algorithm","logic","logic"]},{"Key":"definitely not","Fragments":["a"]},{"Key":"a sensible","Fragments":["way","way"]},{"Key":"sensible way","Fragments":["to","to"]},{"Key":"accomplish this","Fragments":["task,"]},{"Key":"this task,","Fragments":["but"]},{"Key":"task, but","Fragments":["I"]},{"Key":"a general-case","Fragments":["\"text"]},{"Key":"general-case \"text","Fragments":["translator\""]},{"Key":"\"text translator\"","Fragments":["and"]},{"Key":"translator\" and","Fragments":["play"]},{"Key":"and play","Fragments":["with"]},{"Key":"with RegEx","Fragments":["to"]},{"Key":"RegEx to","Fragments":["handle"]},{"Key":"I _do_","Fragments":["now."]},{"Key":"_do_ now.","Fragments":[":)"]},{"Key":"The third","Fragments":["iteration"]},{"Key":"iteration done","Fragments":["in","soon"]},{"Key":"line, as","Fragments":["@colton,"]},{"Key":"as @colton,","Fragments":["suggested"]},{"Key":"@colton, suggested","Fragments":["me"]},{"Key":"suggested me","Fragments":[":)"]},{"Key":"the challenge.","Fragments":["I'm"]},{"Key":"challenge. I'm","Fragments":["happy"]},{"Key":"I'm happy","Fragments":["because","with"]},{"Key":"happy because","Fragments":["the"]},{"Key":"the TDD","Fragments":["helped"]},{"Key":"TDD helped","Fragments":["me"]},{"Key":"mine almost","Fragments":["exactly"]},{"Key":"almost exactly","Fragments":["like","how"]},{"Key":"exactly like","Fragments":["yours."]},{"Key":"like yours.","Fragments":["I"]},{"Key":"yours. I","Fragments":["have"]},{"Key":"others put","Fragments":["all"]},{"Key":"three criteria","Fragments":["in"]},{"Key":"criteria in","Fragments":["one"]},{"Key":"one if","Fragments":["statement","statement."]},{"Key":"statement though.","Fragments":["I"]},{"Key":"seems easier","Fragments":["to","to"]},{"Key":"too easy...","Fragments":["But"]},{"Key":"easy... But","Fragments":["it"]},{"Key":"kept waiting","Fragments":["for"]},{"Key":"a curve","Fragments":["ball."]},{"Key":"private variable","Fragments":["to","_roster.","_h"]},{"Key":"calculated datetime,","Fragments":["but"]},{"Key":"datetime, but","Fragments":["this"]},{"Key":"a lightweight","Fragments":["operation"]},{"Key":"lightweight operation","Fragments":["that"]},{"Key":"operation that","Fragments":["I"]},{"Key":"add any","Fragments":["complexity","readability"]},{"Key":"any complexity","Fragments":["to"]},{"Key":"complexity to","Fragments":["the"]},{"Key":"you ever","Fragments":["have"]},{"Key":"an if-else","Fragments":["that","block"]},{"Key":"if-else that","Fragments":["looks"]},{"Key":"like \"if(...)","Fragments":["{return"]},{"Key":"\"if(...) {return","Fragments":["true;}"]},{"Key":"{return true;}","Fragments":["return"]},{"Key":"true;} return","Fragments":["false;\""]},{"Key":"return false;\"","Fragments":["then"]},{"Key":"false;\" then","Fragments":["you"]},{"Key":"simply \"return","Fragments":["...;\""]},{"Key":"You're missing","Fragments":["some"]},{"Key":"missing some","Fragments":["spaces"]},{"Key":"some spaces","Fragments":["around"]},{"Key":"the 400.","Fragments":["People"]},{"Key":"400. People","Fragments":["sometimes"]},{"Key":"People sometimes","Fragments":["leave"]},{"Key":"sometimes leave","Fragments":["off"]},{"Key":"leave off","Fragments":["spaces","the"]},{"Key":"off spaces","Fragments":["to"]},{"Key":"spaces to","Fragments":["better","mark"]},{"Key":"better communicate","Fragments":["operator"]},{"Key":"communicate operator","Fragments":["precedence"]},{"Key":"operator precedence","Fragments":["(i.e"]},{"Key":"precedence (i.e","Fragments":["`x*x"]},{"Key":"(i.e `x*x","Fragments":["+"]},{"Key":"`x*x +","Fragments":["y*y`"]},{"Key":"+ y*y`","Fragments":[")"]},{"Key":"y*y` )","Fragments":["but"]},{"Key":") but","Fragments":["having"]},{"Key":"more spaces","Fragments":["around"]},{"Key":"around `%`","Fragments":["than"]},{"Key":"`%` than","Fragments":["around"]},{"Key":"than around","Fragments":["`==`"]},{"Key":"around `==`","Fragments":["is"]},{"Key":"`==` is","Fragments":["liable"]},{"Key":"is liable","Fragments":["to"]},{"Key":"liable to","Fragments":["confuse"]},{"Key":"to confuse","Fragments":["a"]},{"Key":"confuse a","Fragments":["later"]},{"Key":"a later","Fragments":["programmer"]},{"Key":"later programmer","Fragments":[";)"]},{"Key":"Wow! I","Fragments":["liked"]},{"Key":"linq conversion,","Fragments":["I"]},{"Key":"conversion, I","Fragments":["didn't"]},{"Key":"anonymous type","Fragments":["and","(or","or"]},{"Key":"type and","Fragments":["then"]},{"Key":"dictionary. Good","Fragments":["work"]},{"Key":"Was looking","Fragments":["to"]},{"Key":"looking to","Fragments":["achieve"]},{"Key":"achieve something","Fragments":["flexible"]},{"Key":"something flexible","Fragments":["-"]},{"Key":"flexible -","Fragments":["so"]},{"Key":"- so","Fragments":["that","you","net"]},{"Key":"other tests","Fragments":["and","would","pass.","to"]},{"Key":"and responses","Fragments":["as"]},{"Key":"responses as","Fragments":["needed."]},{"Key":"agree -","Fragments":["'index'"]},{"Key":"- 'index'","Fragments":["isn't"]},{"Key":"'index' isn't","Fragments":["bad,"]},{"Key":"isn't bad,","Fragments":["but"]},{"Key":"but 'i'","Fragments":["is"]},{"Key":"'i' is","Fragments":["pretty","only"]},{"Key":"generic loop","Fragments":["variable."]},{"Key":"loop variable.","Fragments":["I've"]},{"Key":"variable. I've","Fragments":["gotten"]},{"Key":"gotten in","Fragments":["the"]},{"Key":"using 'ii'","Fragments":["instead"]},{"Key":"'ii' instead","Fragments":["simply"]},{"Key":"instead simply","Fragments":["because"]},{"Key":"simply because","Fragments":["I"]},{"Key":"often work","Fragments":["in"]},{"Key":"an editor","Fragments":["that"]},{"Key":"editor that","Fragments":["doesn't"]},{"Key":"have easy","Fragments":["searching"]},{"Key":"easy searching","Fragments":["on"]},{"Key":"searching on","Fragments":["whole"]},{"Key":"on whole","Fragments":["words,"]},{"Key":"whole words,","Fragments":["so"]},{"Key":"words, so","Fragments":["searching"]},{"Key":"so searching","Fragments":["for"]},{"Key":"searching for","Fragments":["'i'","'ii'"]},{"Key":"for 'i'","Fragments":["generates"]},{"Key":"'i' generates","Fragments":["lots"]},{"Key":"generates lots","Fragments":["of"]},{"Key":"of false","Fragments":["positives"]},{"Key":"false positives","Fragments":["whereas"]},{"Key":"positives whereas","Fragments":["searching"]},{"Key":"whereas searching","Fragments":["for"]},{"Key":"for 'ii'","Fragments":["rarely"]},{"Key":"'ii' rarely","Fragments":["does."]},{"Key":"some normal","Fragments":["string"]},{"Key":"normal string","Fragments":["operators","must"]},{"Key":"string operators","Fragments":["like"]},{"Key":"like NullOrWhiteSpace","Fragments":["or"]},{"Key":"NullOrWhiteSpace or","Fragments":["EndsWith"]},{"Key":"or EndsWith","Fragments":["which"]},{"Key":"EndsWith which","Fragments":["might"]},{"Key":"might more","Fragments":["idiomatic"]},{"Key":"single-line statement","Fragments":["than"]},{"Key":"statement than","Fragments":["your"]},{"Key":"than your","Fragments":["previous","current","limit","current","key","key","class.","solution."]},{"Key":"previous iteration,","Fragments":["which"]},{"Key":"iteration, which","Fragments":["I"]},{"Key":"a definite","Fragments":["improvement."]},{"Key":"definite improvement.","Fragments":["However,"]},{"Key":"improvement. However,","Fragments":["you're"]},{"Key":"However, you're","Fragments":["using"]},{"Key":"return boolean","Fragments":["values,"]},{"Key":"boolean values,","Fragments":["which"]},{"Key":"values, which","Fragments":["isn't"]},{"Key":"which isn't","Fragments":["really","there"]},{"Key":"simplify further.","Fragments":["Could"]},{"Key":"further. Could","Fragments":["you"]},{"Key":"just re-write","Fragments":["it"]},{"Key":"re-write it","Fragments":["as"]},{"Key":"used return","Fragments":["statement"]},{"Key":"into body","Fragments":["of"]},{"Key":"statement but","Fragments":["I","that","I"]},{"Key":"prefer one","Fragments":["return"]},{"Key":"per function","Fragments":["If"]},{"Key":"function If","Fragments":["I"]},{"Key":"1) Enumerable.Range()","Fragments":["actually"]},{"Key":"Enumerable.Range() actually","Fragments":["takes"]},{"Key":"actually takes","Fragments":["a"]},{"Key":"start value","Fragments":["and"]},{"Key":"a _count_,","Fragments":["so"]},{"Key":"_count_, so","Fragments":["Enumerable.Range(13,20)"]},{"Key":"so Enumerable.Range(13,20)","Fragments":["actually"]},{"Key":"Enumerable.Range(13,20) actually","Fragments":["generates"]},{"Key":"actually generates","Fragments":["the"]},{"Key":"generates the","Fragments":["numbers","prime","default"]},{"Key":"numbers 13","Fragments":["through"]},{"Key":"13 through","Fragments":["32."]},{"Key":"through 32.","Fragments":["I"]},{"Key":"32. I","Fragments":["suspect"]},{"Key":"suspect you","Fragments":["want"]},{"Key":"want Enumerable(13,","Fragments":["7)."]},{"Key":"2) In","Fragments":["GetDayInWeek(),"]},{"Key":"In GetDayInWeek(),","Fragments":["after"]},{"Key":"GetDayInWeek(), after","Fragments":["you"]},{"Key":"after you","Fragments":["calculated","have","see"]},{"Key":"you calculated","Fragments":["the"]},{"Key":"calculated the","Fragments":["first"]},{"Key":"first day,","Fragments":["why"]},{"Key":"day, why","Fragments":["just"]},{"Key":"why just","Fragments":["not"]},{"Key":"7 (actually","Fragments":["6)"]},{"Key":"(actually 6)","Fragments":["to"]},{"Key":"6) to","Fragments":["get"]},{"Key":"the ending","Fragments":["day?","day.","date."]},{"Key":"ending day?","Fragments":["If"]},{"Key":"day? If","Fragments":["you"]},{"Key":"in point","Fragments":["#1"]},{"Key":"point #1","Fragments":["you"]},{"Key":"#1 you","Fragments":["don't"]},{"Key":"actually need","Fragments":["to"]},{"Key":"thing applies","Fragments":["if"]},{"Key":"applies if","Fragments":["the"]},{"Key":"the \"else","Fragments":["if"]},{"Key":"if (schedule","Fragments":["=="]},{"Key":"(schedule ==","Fragments":["Schedule.Last)\""]},{"Key":"== Schedule.Last)\"","Fragments":["block"]},{"Key":"Schedule.Last)\" block","Fragments":["-"]},{"Key":"block -","Fragments":["you"]},{"Key":" 4)","Fragments":["Don't","You","If"]},{"Key":"4) Don't","Fragments":["create"]},{"Key":"Don't create","Fragments":["the"]},{"Key":"the range","Fragments":["outside","in"]},{"Key":"range outside","Fragments":["of"]},{"Key":"of GetDayInRange.","Fragments":["All"]},{"Key":"GetDayInRange. All","Fragments":["of"]},{"Key":"your ranges","Fragments":["are"]},{"Key":"ranges are","Fragments":["exactly"]},{"Key":"are exactly","Fragments":["7"]},{"Key":"exactly 7","Fragments":["days"]},{"Key":"7 days","Fragments":["long.","away"]},{"Key":"days long.","Fragments":["Just"]},{"Key":"long. Just","Fragments":["pass"]},{"Key":"Just pass","Fragments":["in"]},{"Key":"starting date","Fragments":["and"]},{"Key":"date and","Fragments":["let"]},{"Key":"and let","Fragments":["this"]},{"Key":"let this","Fragments":["function"]},{"Key":"function figure","Fragments":["it"]},{"Key":"4) You","Fragments":["don't"]},{"Key":"right day.","Fragments":["It"]},{"Key":"day. It","Fragments":["is"]},{"Key":"is directly","Fragments":["compute-able.","compute-able"]},{"Key":"readonly list","Fragments":["rather"]},{"Key":"list rather","Fragments":["than","than"]},{"Key":"a copy,","Fragments":["I"]},{"Key":"copy, I","Fragments":["don't"]},{"Key":"like run","Fragments":["time"]},{"Key":"time enforcement","Fragments":["of"]},{"Key":"enforcement of","Fragments":["interfaces"]},{"Key":"of interfaces","Fragments":["but"]},{"Key":"interfaces but","Fragments":["in"]},{"Key":"standard and","Fragments":["should"]},{"Key":"efficient. Also","Fragments":["I"]},{"Key":"think pre-allocating","Fragments":["the"]},{"Key":"pre-allocating the","Fragments":["12"]},{"Key":"the 12","Fragments":["lists"]},{"Key":"12 lists","Fragments":["is"]},{"Key":"lists is","Fragments":["better"]},{"Key":"than lazy","Fragments":["evaluation"]},{"Key":"lazy evaluation","Fragments":["because"]},{"Key":"evaluation because","Fragments":["it"]},{"Key":"it simplifies","Fragments":["the","the"]},{"Key":"add and","Fragments":["get"]},{"Key":"get methods","Fragments":["(even"]},{"Key":"methods (even","Fragments":["though"]},{"Key":"means checking","Fragments":["a"]},{"Key":"checking a","Fragments":["count"]},{"Key":"count instead","Fragments":["of"]},{"Key":"of null","Fragments":["to","strings","exceptions."]},{"Key":"null to","Fragments":["detect"]},{"Key":"detect new","Fragments":["grades)"]},{"Key":"\u003ccode\u003e1E9\u003c/code\u003e in","Fragments":["C#,"]},{"Key":"C#, which","Fragments":["is"]},{"Key":"a Timespan.","Fragments":["You"]},{"Key":"Timespan. You","Fragments":["can"]},{"Key":"do \u003ccode\u003eprivate","Fragments":["readonly"]},{"Key":"\u003ccode\u003eprivate readonly","Fragments":["DateTime"]},{"Key":"readonly DateTime","Fragments":["gigasec"]},{"Key":"DateTime gigasec","Fragments":["="]},{"Key":"gigasec =","Fragments":["_birth.AddSeconds(1E9);\u003c/code\u003e"]},{"Key":"= _birth.AddSeconds(1E9);\u003c/code\u003e","Fragments":["and"]},{"Key":"_birth.AddSeconds(1E9);\u003c/code\u003e and","Fragments":["then"]},{"Key":"return gigasec","Fragments":["in"]},{"Key":"gigasec in","Fragments":["Date()."]},{"Key":"in Date().","Fragments":["There's"]},{"Key":"Date(). There's","Fragments":["nothing"]},{"Key":"There's nothing","Fragments":["wrong"]},{"Key":"just pointing","Fragments":["it"]},{"Key":"pointing it","Fragments":["out.","out."]},{"Key":"keep 'sum'","Fragments":["as","as"]},{"Key":"'sum' as","Fragments":["a","a"]},{"Key":"a double?","Fragments":["That"]},{"Key":"double? That","Fragments":["seems"]},{"Key":"trick you","Fragments":["can","can"]},{"Key":"the Reverse()","Fragments":["call","or"]},{"Key":"Reverse() call","Fragments":["and"]},{"Key":"the Pow()","Fragments":["call.","method,"]},{"Key":"For each","Fragments":["character","char","char","digit","digit","digit","digit","digit","digit","digit"]},{"Key":"number *","Fragments":["2"]},{"Key":"number +","Fragments":["value_of_character"]},{"Key":"+ value_of_character","Fragments":["(either"]},{"Key":"value_of_character (either","Fragments":["1"]},{"Key":"(either 1","Fragments":["or"]},{"Key":" Return","Fragments":["number","Number","Number","Number.","Number","Number","Number;","Number","Number","Number"]},{"Key":"No checking","Fragments":["for"]},{"Key":"default case","Fragments":["in"]},{"Key":"your switch","Fragments":["statement"]},{"Key":"highly dependent","Fragments":["on","on"]},{"Key":"your values","Fragments":["in"]},{"Key":"the Schedule","Fragments":["enumeration."]},{"Key":"Schedule enumeration.","Fragments":["Get"]},{"Key":"enumeration. Get","Fragments":["into"]},{"Key":"Get into","Fragments":["the"]},{"Key":"of commenting","Fragments":["around"]},{"Key":"commenting around","Fragments":["the"]},{"Key":"the location","Fragments":["where"]},{"Key":"location where","Fragments":["you"]},{"Key":"enumeration about","Fragments":["this"]},{"Key":"this so","Fragments":["that","thumbs"]},{"Key":"else doesn't","Fragments":["reorganize"]},{"Key":"doesn't reorganize","Fragments":["your"]},{"Key":"reorganize your","Fragments":["enumeration"]},{"Key":"your enumeration","Fragments":["accidentally.","since"]},{"Key":"2) Using","Fragments":["a"]},{"Key":"a similar","Fragments":["trick,","way","approach","one","dictionary"]},{"Key":"similar trick,","Fragments":["the"]},{"Key":"trick, the","Fragments":["date"]},{"Key":"the date","Fragments":["is","as","for","for","without"]},{"Key":"date is","Fragments":["directly"]},{"Key":"directly compute-able","Fragments":["using"]},{"Key":"compute-able using","Fragments":["the"]},{"Key":"DayOfWeek enumeration.","Fragments":["This"]},{"Key":"enumeration. This","Fragments":["avoids"]},{"Key":"This avoids","Fragments":["the","another"]},{"Key":"extra semicolon","Fragments":["on"]},{"Key":"semicolon on","Fragments":["the"]},{"Key":" Interesting.","Fragments":["Jumping"]},{"Key":"Interesting. Jumping","Fragments":["week"]},{"Key":"Jumping week","Fragments":["by"]},{"Key":"week by","Fragments":["week"]},{"Key":"by week","Fragments":["was"]},{"Key":"week was","Fragments":["creative."]},{"Key":"no loops","Fragments":["(i.e.","only"]},{"Key":"loops (i.e.","Fragments":["you"]},{"Key":"(i.e. you","Fragments":["can't"]},{"Key":"can't use","Fragments":["StepForward)."]},{"Key":"statement (in","Fragments":["iteration"]},{"Key":"(in iteration","Fragments":["#2)."]},{"Key":"a conditional","Fragments":["expression.","statement","statement","to"]},{"Key":"conditional expression.","Fragments":["It"]},{"Key":"I ever","Fragments":["used"]},{"Key":"used it.","Fragments":["It"]},{"Key":"very practical","Fragments":["if"]},{"Key":"practical if","Fragments":["cases"]},{"Key":"if cases","Fragments":["are"]},{"Key":"Dropped a","Fragments":["redundant"]},{"Key":"a redundant","Fragments":["int"]},{"Key":"redundant int","Fragments":["thanks"]},{"Key":"int thanks","Fragments":["to"]},{"Key":" @lesly","Fragments":["made"]},{"Key":"@lesly made","Fragments":["a"]},{"Key":"great suggestion","Fragments":["-"]},{"Key":"suggestion -","Fragments":["I"]},{"Key":"I applied","Fragments":["it"]},{"Key":"applied it","Fragments":["to"]},{"Key":"both foreach","Fragments":["statements."]},{"Key":"One statement","Fragments":["-"]},{"Key":"statement -","Fragments":["conditional","string"]},{"Key":"- conditional","Fragments":["expression"]},{"Key":"expression instead","Fragments":["of"]},{"Key":"of if-statement.","Fragments":["Handles"]},{"Key":"if-statement. Handles","Fragments":["most"]},{"Key":"Handles most","Fragments":["cases"]},{"Key":"cases (the","Fragments":["non-leap-years)"]},{"Key":"(the non-leap-years)","Fragments":["first."]},{"Key":"non-leap-years) first.","Fragments":["Might"]},{"Key":"first. Might","Fragments":["be"]},{"Key":"Might be","Fragments":["slightly","an","easier"]},{"Key":"slightly faster","Fragments":["than","but"]},{"Key":"the older","Fragments":["version"]},{"Key":"older version","Fragments":["under"]},{"Key":"version under","Fragments":["the"]},{"Key":"random distribution","Fragments":["of"]},{"Key":"More readable,","Fragments":["rule"]},{"Key":"readable, rule","Fragments":["can"]},{"Key":"tried writing","Fragments":["this"]},{"Key":"first without","Fragments":["using"]},{"Key":"using system","Fragments":["or"]},{"Key":"system or","Fragments":["linq"]},{"Key":"or linq","Fragments":["just"]},{"Key":"linq just","Fragments":["to","for"]},{"Key":"could. I","Fragments":["ended","guess"]},{"Key":"up comparing","Fragments":["the","the","by"]},{"Key":"given values","Fragments":["character"]},{"Key":"values character","Fragments":["by"]},{"Key":"by character,","Fragments":["and"]},{"Key":"character, and","Fragments":["doing"]},{"Key":"long chain","Fragments":["of"]},{"Key":"of shenanigans","Fragments":["to"]},{"Key":"shenanigans to","Fragments":["make"]},{"Key":"they weren't","Fragments":["checking"]},{"Key":"weren't checking","Fragments":["the"]},{"Key":"character more","Fragments":["than"]},{"Key":"It didn't","Fragments":["work.","quite"]},{"Key":"Getting to","Fragments":["use"]},{"Key":"use Array.Sort","Fragments":["and"]},{"Key":"Array.Sort and","Fragments":["SequenceEquals"]},{"Key":"and SequenceEquals","Fragments":["cut"]},{"Key":"SequenceEquals cut","Fragments":["my"]},{"Key":"cut my","Fragments":["code"]},{"Key":"in half.","Fragments":["It"]},{"Key":"half. It","Fragments":["passes"]},{"Key":"am open","Fragments":["to"]},{"Key":"open to","Fragments":["suggestions","changing"]},{"Key":"to suggestions","Fragments":["for"]},{"Key":"suggestions for","Fragments":["efficiency."]},{"Key":"require any","Fragments":["calls"]},{"Key":"any calls","Fragments":["to"]},{"Key":"to Math.Pow().","Fragments":["I'll"]},{"Key":"Math.Pow(). I'll","Fragments":["summarize"]},{"Key":"I'll summarize","Fragments":["it"]},{"Key":"summarize it","Fragments":["in"]},{"Key":"in pseudo-code","Fragments":["here."]},{"Key":"each char","Fragments":["in","in"]},{"Key":"char in","Fragments":["string","string"]},{"Key":"= Number","Fragments":["*","+","*","+","*","+"]},{"Key":"Number *","Fragments":["3","2","3"]},{"Key":"Number +","Fragments":["\u003cvalueOfChar\u003e","digit","digit"]},{"Key":"+ \u003cvalueOfChar\u003e","Fragments":["(0,"]},{"Key":"\u003cvalueOfChar\u003e (0,","Fragments":["1,"]},{"Key":"(0, 1,","Fragments":["or","or"]},{"Key":"1, or","Fragments":["2)","2)"]},{"Key":"there really","Fragments":["a","is","is","is","is"]},{"Key":"a possibility","Fragments":["that"]},{"Key":"possibility that","Fragments":["'formattedValue'"]},{"Key":"that 'formattedValue'","Fragments":["is"]},{"Key":"'formattedValue' is","Fragments":["null?"]},{"Key":"null? I","Fragments":["would"]},{"Key":"clause removed","Fragments":["all"]},{"Key":"all entries,","Fragments":["the"]},{"Key":"entries, the","Fragments":["array"]},{"Key":"array being","Fragments":["created"]},{"Key":"being created","Fragments":["would"]},{"Key":"created would","Fragments":["have"]},{"Key":"have size","Fragments":["0"]},{"Key":"size 0","Fragments":["and"]},{"Key":"string (\"\")","Fragments":["rather"]},{"Key":"(\"\") rather","Fragments":["than"]},{"Key":"than null,","Fragments":["but"]},{"Key":"null, but","Fragments":["I"]},{"Key":"null then","Fragments":["you"]},{"Key":"the IsNullOrEmpty","Fragments":["check"]},{"Key":"check as","Fragments":["an"]},{"Key":"work find","Fragments":["in"]},{"Key":"compute this","Fragments":["that"]},{"Key":"doesn't involve","Fragments":["the"]},{"Key":"involve the","Fragments":["Reverse()"]},{"Key":"Reverse() or","Fragments":["Pow()"]},{"Key":"or Pow()","Fragments":["functions."]},{"Key":"Pow() functions.","Fragments":["I'll"]},{"Key":"functions. I'll","Fragments":["use"]},{"Key":"use pseudo-code","Fragments":["to"]},{"Key":"pseudo-code to","Fragments":["describe"]},{"Key":"Number *=","Fragments":["3","2","base","base","base","base"]},{"Key":"Number +=","Fragments":["value_of_char","digit","digit","digit","digit","digit"]},{"Key":"+= value_of_char","Fragments":["(0,"]},{"Key":"value_of_char (0,","Fragments":["1,"]},{"Key":"Cool, thanks!","Fragments":["I"]},{"Key":"thanks! I","Fragments":["really","understand","did"]},{"Key":"call String.Format()","Fragments":["when"]},{"Key":"String.Format() when","Fragments":["you"]},{"Key":"not formatting","Fragments":["anything."]},{"Key":"formatting anything.","Fragments":["Four"]},{"Key":"anything. Four","Fragments":["of"]},{"Key":"Four of","Fragments":["the"]},{"Key":"the five","Fragments":["times"]},{"Key":"five times","Fragments":["you"]},{"Key":"example the","Fragments":["following","inner"]},{"Key":" verses","Fragments":["+=","+="]},{"Key":"verses +=","Fragments":["string.Format(Verse(i)","Verse(i)"]},{"Key":"+= string.Format(Verse(i)","Fragments":["+"]},{"Key":"string.Format(Verse(i) +","Fragments":["\"\\n\");"]},{"Key":"+= Verse(i)","Fragments":["+"]},{"Key":"Verse(i) +","Fragments":["\"\\n\";"]},{"Key":"you throw","Fragments":["an","the"]},{"Key":"empty string?","Fragments":["What"]},{"Key":"string? What","Fragments":["about"]},{"Key":"To be","Fragments":["really","frank,","absolutely"]},{"Key":"really nitpicky,","Fragments":["you"]},{"Key":"nitpicky, you","Fragments":["could"]},{"Key":"avoid it","Fragments":["being","in","using"]},{"Key":"being instantiated.","Fragments":["And"]},{"Key":"your expressions","Fragments":["with"]},{"Key":"expressions with","Fragments":["the"]},{"Key":"the comparison","Fragments":["value","logic","type"]},{"Key":"comparison value","Fragments":["on"]},{"Key":"value on","Fragments":["the"]},{"Key":"the left-hand","Fragments":["side"]},{"Key":"left-hand side","Fragments":["a"]},{"Key":"side a","Fragments":["bit"]},{"Key":"bit strange,","Fragments":["as"]},{"Key":"strange, as","Fragments":["I'm"]},{"Key":"always seeing","Fragments":["them"]},{"Key":"them the","Fragments":["other"]},{"Key":"around. Other","Fragments":["than"]},{"Key":"that, it's","Fragments":["a"]},{"Key":"a succint","Fragments":["and"]},{"Key":"succint and","Fragments":["clean"]},{"Key":"clean implementation","Fragments":["that"]},{"Key":"implementation that","Fragments":["doesn't","uses"]},{"Key":"other improvement","Fragments":["that"]},{"Key":"improvement that","Fragments":["I"]},{"Key":"job. This","Fragments":["works"]},{"Key":"works relatively","Fragments":["fast"]},{"Key":"relatively fast","Fragments":["for"]},{"Key":"fast for","Fragments":["the"]},{"Key":"numbers provided","Fragments":["in"]},{"Key":"provided in","Fragments":["the","the","the"]},{"Key":"test. Unfortunately,","Fragments":["if"]},{"Key":"Unfortunately, if","Fragments":["you"]},{"Key":"you take","Fragments":["the","the"]},{"Key":"one large","Fragments":["number","number"]},{"Key":"large number","Fragments":["the","in"]},{"Key":"test uses","Fragments":["and"]},{"Key":"uses and","Fragments":["just"]},{"Key":"add two","Fragments":["it"]},{"Key":"two it","Fragments":["(93819012553)"]},{"Key":"it (93819012553)","Fragments":["and"]},{"Key":"(93819012553) and","Fragments":["try"]},{"Key":"performance balloons","Fragments":["from"]},{"Key":"balloons from","Fragments":["milliseconds"]},{"Key":"from milliseconds","Fragments":["to"]},{"Key":"milliseconds to","Fragments":["3","roughly"]},{"Key":"to 3","Fragments":["seconds."]},{"Key":"One shortcut","Fragments":["you"]},{"Key":"shortcut you","Fragments":["could"]},{"Key":"special check","Fragments":["for"]},{"Key":"for 2,","Fragments":["then"]},{"Key":"2, then","Fragments":["starting","the"]},{"Key":"then starting","Fragments":["after"]},{"Key":"starting after","Fragments":["three"]},{"Key":"after three","Fragments":["increment"]},{"Key":"three increment","Fragments":["by"]},{"Key":"2 instead","Fragments":["of"]},{"Key":"of by","Fragments":["one."]},{"Key":"by one.","Fragments":["That"]},{"Key":"one. That","Fragments":["would"]},{"Key":"would avoid","Fragments":["checking"]},{"Key":"avoid checking","Fragments":["all"]},{"Key":"A faster","Fragments":["solution"]},{"Key":"faster solution","Fragments":["would"]},{"Key":"solution would","Fragments":["be","not"]},{"Key":"generate all","Fragments":["the"]},{"Key":"numbers up","Fragments":["to"]},{"Key":"to Sqrt(number)","Fragments":["and"]},{"Key":"Sqrt(number) and","Fragments":["then"]},{"Key":"simply run","Fragments":["through"]},{"Key":"through those","Fragments":["numbers"]},{"Key":"those numbers","Fragments":["only."]},{"Key":"the Transform","Fragments":["generic"]},{"Key":"Transform generic","Fragments":["at"]},{"Key":"generic at","Fragments":["first,"]},{"Key":"doesn't work","Fragments":["when","in","for"]},{"Key":"work when","Fragments":["you"]},{"Key":"to lowercase","Fragments":["the"]},{"Key":"lowercase the","Fragments":["tile"]},{"Key":"the tile","Fragments":["strings!"]},{"Key":"using foreach","Fragments":["loops","rather"]},{"Key":"of ForEach()","Fragments":["([Eric"]},{"Key":"ForEach() ([Eric","Fragments":["Lippert's"]},{"Key":"([Eric Lippert's","Fragments":["blog](http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx)),"]},{"Key":"Lippert's blog](http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx)),","Fragments":["or"]},{"Key":"blog](http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx)), or","Fragments":["use"]},{"Key":"use pure","Fragments":["Linq"]},{"Key":"pure Linq","Fragments":["(SelectMany"]},{"Key":"Linq (SelectMany","Fragments":["and"]},{"Key":"(SelectMany and","Fragments":["ToDictionary)."]},{"Key":"all available","Fragments":["responses,"]},{"Key":"available responses,","Fragments":["in"]},{"Key":"responses, in","Fragments":["which"]},{"Key":"I cant","Fragments":["tests"]},{"Key":"cant tests","Fragments":["if"]},{"Key":"tests if","Fragments":["Response","it"]},{"Key":"if Response","Fragments":["is"]},{"Key":"Response is","Fragments":["appropriate"]},{"Key":"is appropriate","Fragments":["for","for",":)"]},{"Key":"appropriate for","Fragments":["current","this"]},{"Key":"for current","Fragments":["statement"]},{"Key":"save one","Fragments":["look-up"]},{"Key":"one look-up","Fragments":["in"]},{"Key":"in AllergicTo()","Fragments":["by"]},{"Key":"AllergicTo() by","Fragments":["changing"]},{"Key":"return (score","Fragments":["\u0026","\u0026","\u0026"]},{"Key":"\u0026 allergies[allergy])","Fragments":["==","!=","!="]},{"Key":"allergies[allergy]) ==","Fragments":["allergies[allergy];"]},{"Key":"allergies[allergy]) !=","Fragments":["0;","0;"]},{"Key":"you assume","Fragments":["that"]},{"Key":"that almost","Fragments":["all"]},{"Key":"time, the","Fragments":["user"]},{"Key":"user will","Fragments":["call"]},{"Key":"will call","Fragments":["AllergicTo"]},{"Key":"call AllergicTo","Fragments":["with"]},{"Key":"AllergicTo with","Fragments":["a"]},{"Key":"valid allergy,","Fragments":["you"]},{"Key":"allergy, you","Fragments":["could"]},{"Key":"avoids another","Fragments":["look-up."]},{"Key":"another look-up.","Fragments":["If"]},{"Key":"look-up. If","Fragments":["you"]},{"Key":"expect many","Fragments":["calls"]},{"Key":"many calls","Fragments":["to"]},{"Key":"with invalid","Fragments":["allergies,"]},{"Key":"invalid allergies,","Fragments":["then"]},{"Key":"allergies, then","Fragments":["you"]},{"Key":"not save","Fragments":["much"]},{"Key":"save much","Fragments":["-"]},{"Key":"much -","Fragments":["it"]},{"Key":" Excellent!","Fragments":["I"]},{"Key":"Excellent! I","Fragments":["love"]},{"Key":"the queue,","Fragments":["transferring"]},{"Key":"queue, transferring","Fragments":["values"]},{"Key":"transferring values","Fragments":["over"]},{"Key":"values over","Fragments":["to"]},{"Key":"to 'primes'","Fragments":["as"]},{"Key":"'primes' as","Fragments":["you"]},{"Key":"know they","Fragments":["are"]},{"Key":"are prime.","Fragments":["I"]},{"Key":"prime. I","Fragments":["may","can"]},{"Key":"to revisit","Fragments":["my","this"]},{"Key":"revisit my","Fragments":["algorithm"]},{"Key":"my algorithm","Fragments":["to"]},{"Key":"of performance","Fragments":["nitpicks"]},{"Key":"performance nitpicks","Fragments":["that"]},{"Key":"nitpicks that","Fragments":["aren't"]},{"Key":"aren't required","Fragments":["for"]},{"Key":"big impact","Fragments":["if"]},{"Key":"impact if","Fragments":["you"]},{"Key":"are generating","Fragments":["large","2"]},{"Key":"generating large","Fragments":["lists"]},{"Key":"large lists","Fragments":["of"]},{"Key":"1) As","Fragments":["soon"]},{"Key":"As soon","Fragments":["as"]},{"Key":"prime that","Fragments":["you"]},{"Key":"you Dequeue()","Fragments":["from"]},{"Key":"Dequeue() from","Fragments":["candidates"]},{"Key":"from candidates","Fragments":["is"]},{"Key":"candidates is","Fragments":["larger"]},{"Key":"is larger","Fragments":["than","than","than"]},{"Key":"square root","Fragments":["of","of","of","of","but"]},{"Key":"root of","Fragments":["'limit',","'limit',","'value'.","num"]},{"Key":"of 'limit',","Fragments":["all","all"]},{"Key":"'limit', all","Fragments":["the","the"]},{"Key":"remaining entries","Fragments":["in"]},{"Key":"in candidates","Fragments":["(including","and"]},{"Key":"candidates (including","Fragments":["the"]},{"Key":"(including the","Fragments":["value"]},{"Key":"value you","Fragments":["just","want"]},{"Key":"just removed)","Fragments":["are"]},{"Key":"removed) are","Fragments":["known"]},{"Key":"be prime.","Fragments":["Proof:","I"]},{"Key":"prime. Proof:","Fragments":["If"]},{"Key":"Proof: If","Fragments":["one"]},{"Key":"If one","Fragments":["was","has"]},{"Key":"not prime","Fragments":["(let's"]},{"Key":"prime (let's","Fragments":["call"]},{"Key":"(let's call","Fragments":["it"]},{"Key":"it P)","Fragments":["it"]},{"Key":"P) it","Fragments":["must"]},{"Key":"made up","Fragments":["of"]},{"Key":"up of","Fragments":["A"]},{"Key":"of A","Fragments":["*"]},{"Key":"A *","Fragments":["B"]},{"Key":"* B","Fragments":["(A"]},{"Key":"B (A","Fragments":["and"]},{"Key":"(A and","Fragments":["B"]},{"Key":"and B","Fragments":["being","that","both","and"]},{"Key":"B being","Fragments":["integers)."]},{"Key":"being integers).","Fragments":["A"]},{"Key":"integers). A","Fragments":["cannot"]},{"Key":"A cannot","Fragments":["be"]},{"Key":"smaller than","Fragments":["your","your"]},{"Key":"current prime","Fragments":["(you've"]},{"Key":"prime (you've","Fragments":["removed"]},{"Key":"(you've removed","Fragments":["all"]},{"Key":"all multiples","Fragments":["of"]},{"Key":"all smaller","Fragments":["primes)"]},{"Key":"smaller primes)","Fragments":["so"]},{"Key":"primes) so","Fragments":["it"]},{"Key":"be bigger.","Fragments":["If"]},{"Key":"bigger. If","Fragments":["A"]},{"Key":"If A","Fragments":["is"]},{"Key":"is bigger,","Fragments":["the"]},{"Key":"bigger, the","Fragments":["only"]},{"Key":"way for","Fragments":["P","you","you"]},{"Key":"for P","Fragments":["to"]},{"Key":"P to","Fragments":["be"]},{"Key":"your limit","Fragments":["is"]},{"Key":"limit is","Fragments":["for"]},{"Key":"for B","Fragments":["to"]},{"Key":"B to","Fragments":["be"]},{"Key":"current prime,","Fragments":["but"]},{"Key":"prime, but","Fragments":["B"]},{"Key":"but B","Fragments":["has"]},{"Key":"B has","Fragments":["to"]},{"Key":"be larger","Fragments":["(same","than","than"]},{"Key":"larger (same","Fragments":["logic"]},{"Key":"(same logic","Fragments":["as","as"]},{"Key":"for A),","Fragments":["thus"]},{"Key":"A), thus","Fragments":["no"]},{"Key":"thus no","Fragments":["composite"]},{"Key":"no composite","Fragments":["numbers"]},{"Key":"composite numbers","Fragments":["can","have"]},{"Key":"numbers can","Fragments":["remain."]},{"Key":"2) Your","Fragments":["Where()","randomly"]},{"Key":"Your Where()","Fragments":["call"]},{"Key":"Where() call","Fragments":["requires"]},{"Key":"call requires","Fragments":["a"]},{"Key":"a '%'","Fragments":["call"]},{"Key":"'%' call","Fragments":["for"]},{"Key":"number left","Fragments":["in"]},{"Key":"left in","Fragments":["candidates"]},{"Key":"candidates and","Fragments":["'/'"]},{"Key":"and '/'","Fragments":["and"]},{"Key":"'/' and","Fragments":["'%'"]},{"Key":"and '%'","Fragments":["are"]},{"Key":"'%' are","Fragments":["some"]},{"Key":"most expensive","Fragments":["operations."]},{"Key":"expensive operations.","Fragments":["It"]},{"Key":"operations. It","Fragments":["might"]},{"Key":"remove (multiples","Fragments":["of"]},{"Key":"(multiples of","Fragments":["'prime')"]},{"Key":"of 'prime')","Fragments":["and"]},{"Key":"'prime') and","Fragments":["remove"]},{"Key":"remove them","Fragments":["from"]},{"Key":"them from","Fragments":["'candidates'","both"]},{"Key":"from 'candidates'","Fragments":["instead."]},{"Key":"Can I","Fragments":["suggest","assume"]},{"Key":"few minor","Fragments":["improvements?","nitpicks"]},{"Key":"named 'newValue'","Fragments":["in"]},{"Key":"'newValue' in","Fragments":["GetEncodedCharacter()"]},{"Key":"in GetEncodedCharacter()","Fragments":["-"]},{"Key":"GetEncodedCharacter() -","Fragments":["combining"]},{"Key":"- combining","Fragments":["that"]},{"Key":"combining that","Fragments":["line"]},{"Key":"line with","Fragments":["the","the"]},{"Key":"next might","Fragments":["make"]},{"Key":"read. But","Fragments":["why"]},{"Key":"have 'encode'?","Fragments":["Wouldn't"]},{"Key":"'encode'? Wouldn't","Fragments":["it"]},{"Key":"easier just","Fragments":["to"]},{"Key":"do \u003ccode\u003ereturn","Fragments":["(char)('a'"]},{"Key":"\u003ccode\u003ereturn (char)('a'","Fragments":["+"]},{"Key":"(char)('a' +","Fragments":["newValue);\u003c/code\u003e?"]},{"Key":"The modulus","Fragments":["operation"]},{"Key":"is nice,","Fragments":["but"]},{"Key":"nice, but","Fragments":["it","in"]},{"Key":"relatively expensive.","Fragments":["You","You"]},{"Key":"expensive. You","Fragments":["can","could,"]},{"Key":"in InsertSpaceEveryFiveCharacters","Fragments":["along"]},{"Key":"InsertSpaceEveryFiveCharacters along","Fragments":["with"]},{"Key":"along with","Fragments":["another","my"]},{"Key":"with another","Fragments":["check","iteration;"]},{"Key":"another check","Fragments":["by"]},{"Key":"check by","Fragments":["doing"]},{"Key":"static List\u003cchar\u003e","Fragments":["InsertSpaceEveryFiveCharacters(IEnumerable\u003cchar\u003e"]},{"Key":"List\u003cchar\u003e InsertSpaceEveryFiveCharacters(IEnumerable\u003cchar\u003e","Fragments":["encoded)"]},{"Key":" List\u003cchar\u003e","Fragments":["withSpaces"]},{"Key":"List\u003cchar\u003e withSpaces","Fragments":["="]},{"Key":"withSpaces =","Fragments":["new"]},{"Key":"(var c","Fragments":["in"]},{"Key":"if (count","Fragments":["==","\u003e","\u003e"]},{"Key":"(count ==","Fragments":["5)"]},{"Key":" withSpaces.Add('","Fragments":["');"]},{"Key":" count","Fragments":["="]},{"Key":"3) In","Fragments":["GetEncodedCharacters()"]},{"Key":"In GetEncodedCharacters()","Fragments":["you"]},{"Key":"GetEncodedCharacters() you","Fragments":["call"]},{"Key":"call IsLetterOrDigit()","Fragments":["and"]},{"Key":"IsLetterOrDigit() and","Fragments":["then"]},{"Key":"call IsDigit().","Fragments":["We"]},{"Key":"IsDigit(). We","Fragments":["could"]},{"Key":"We could","Fragments":["avoid"]},{"Key":"avoid doing","Fragments":["some"]},{"Key":"doing some","Fragments":["of","searching,","simple"]},{"Key":"work twice","Fragments":["by"]},{"Key":" yield","Fragments":["return","return"]},{"Key":"I misread","Fragments":["the","this"]},{"Key":"misread the","Fragments":["requirements,"]},{"Key":"the requirements,","Fragments":["but"]},{"Key":"1) My","Fragments":["understanding"]},{"Key":"My understanding","Fragments":["was","of"]},{"Key":"understanding was","Fragments":["that"]},{"Key":"key had","Fragments":["to"]},{"Key":"be only","Fragments":["lower"]},{"Key":"only lower","Fragments":["case"]},{"Key":"case letters,","Fragments":["but"]},{"Key":"letters, but","Fragments":["your"]},{"Key":"checks would","Fragments":["seem"]},{"Key":"would seem","Fragments":["to","out"]},{"Key":"allow digits","Fragments":["or"]},{"Key":"digits or","Fragments":["punctuation"]},{"Key":"or punctuation","Fragments":["or"]},{"Key":"punctuation or","Fragments":["upper"]},{"Key":"or upper","Fragments":["case"]},{"Key":"was at","Fragments":["least"]},{"Key":"one lower","Fragments":["case"]},{"Key":"Your randomly","Fragments":["generated"]},{"Key":"generated key","Fragments":["will","string."]},{"Key":"key will","Fragments":["never"]},{"Key":"never contain","Fragments":["the"]},{"Key":"contain the","Fragments":["letter"]},{"Key":"3) If","Fragments":["your"]},{"Key":"your plaintext","Fragments":["string"]},{"Key":"plaintext string","Fragments":["is"]},{"Key":"longer than","Fragments":["your","your","`second`","the","writing","the","creating","mine."]},{"Key":"your key","Fragments":["I","you"]},{"Key":"key I","Fragments":["think"]},{"Key":"KeyNotFoundException in","Fragments":["EncodeCharacter.","DecodeCharacter.","Grade(),"]},{"Key":"in EncodeCharacter.","Fragments":["Similarly,"]},{"Key":"EncodeCharacter. Similarly,","Fragments":["if"]},{"Key":"Similarly, if","Fragments":["you"]},{"Key":"you ciphertext","Fragments":["string"]},{"Key":"ciphertext string","Fragments":["is"]},{"Key":"key you","Fragments":["will"]},{"Key":"in DecodeCharacter.","Fragments":["These"]},{"Key":"DecodeCharacter. These","Fragments":["are"]},{"Key":"are very","Fragments":["common","prone","welcome!"]},{"Key":"very common","Fragments":["scenarios,"]},{"Key":"common scenarios,","Fragments":["even"]},{"Key":"scenarios, even","Fragments":["if"]},{"Key":"test doesn't","Fragments":["try","specify,"]},{"Key":"doesn't try","Fragments":["it."]},{"Key":"4) If","Fragments":["plaintext"]},{"Key":"If plaintext","Fragments":["is","or"]},{"Key":"plaintext is","Fragments":["null"]},{"Key":"or ciphertext","Fragments":["is","has"]},{"Key":"ciphertext is","Fragments":["null"]},{"Key":"null you","Fragments":["will"]},{"Key":" 5)","Fragments":["If"]},{"Key":"5) If","Fragments":["plaintext"]},{"Key":"plaintext or","Fragments":["ciphertext"]},{"Key":"ciphertext has","Fragments":["any"]},{"Key":"has any","Fragments":["character","bugs"]},{"Key":"character other","Fragments":["than"]},{"Key":"a lower","Fragments":["case"]},{"Key":"case letter","Fragments":["you"]},{"Key":"get odd","Fragments":["behavior."]},{"Key":"odd behavior.","Fragments":["I"]},{"Key":"behavior. I","Fragments":["think"]},{"Key":"key is","Fragments":["all","added."]},{"Key":"all a's","Fragments":["then"]},{"Key":"a's then","Fragments":["you"]},{"Key":"an encode","Fragments":["operation."]},{"Key":"encode operation.","Fragments":["A"]},{"Key":"operation. A","Fragments":["decode"]},{"Key":"A decode","Fragments":["operation"]},{"Key":"decode operation","Fragments":["doesn't"]},{"Key":"operation doesn't","Fragments":["look"]},{"Key":"will generate","Fragments":["an"]},{"Key":"exception. Either","Fragments":["way,","way"]},{"Key":"you encode","Fragments":["such"]},{"Key":"encode such","Fragments":["a"]},{"Key":"to decode","Fragments":["it."]},{"Key":"Yes, a","Fragments":["list"]},{"Key":"list --","Fragments":["or"]},{"Key":"-- or","Fragments":["even"]},{"Key":"array --","Fragments":["would"]},{"Key":"-- would","Fragments":["have"]},{"Key":"been sufficient,","Fragments":["I"]},{"Key":"sufficient, I","Fragments":["will"]},{"Key":"will edit","Fragments":["the"]},{"Key":"exercise is","Fragments":["really","begging","really","really","really"]},{"Key":"really about","Fragments":["using","using","using","using"]},{"Key":"using higher","Fragments":["order","order","order","order"]},{"Key":"higher order","Fragments":["sequence","sequence","sequence","sequence"]},{"Key":"order sequence","Fragments":["operators,","operators,","operators,","operators,"]},{"Key":"sequence operators,","Fragments":["in","in","in","in"]},{"Key":"operators, in","Fragments":["the","the","the","the"]},{"Key":"c# case","Fragments":["this","this","this","this"]},{"Key":"Ok, this","Fragments":["isn't","code"]},{"Key":"isn't passing","Fragments":["the"]},{"Key":"it's because","Fragments":["I"]},{"Key":"are contradictory.","Fragments":["The"]},{"Key":"contradictory. The","Fragments":["conversion"]},{"Key":"The conversion","Fragments":["is"]},{"Key":"conversion is","Fragments":["made"]},{"Key":"made fine,","Fragments":["but"]},{"Key":"test expects","Fragments":["the"]},{"Key":"expects the","Fragments":["dictionary"]},{"Key":"dictionary sorted","Fragments":["and"]},{"Key":"sorted and","Fragments":["the"]},{"Key":"other not.","Fragments":["Am"]},{"Key":"not. Am","Fragments":["I"]},{"Key":" Nothing","Fragments":["to"]},{"Key":"Nothing to","Fragments":["be","add."]},{"Key":"be proud","Fragments":["of."]},{"Key":"proud of.","Fragments":["But"]},{"Key":"of. But","Fragments":["I"]},{"Key":"hope there","Fragments":["are"]},{"Key":"are improvements.","Fragments":[":)"]},{"Key":"Wow, how","Fragments":["did"]},{"Key":"1. Depends","Fragments":["on"]},{"Key":"Depends on","Fragments":["the"]},{"Key":"2. Good","Fragments":["point.","catch."]},{"Key":"the hint.","Fragments":["It","Damn"]},{"Key":"hint. It","Fragments":["does"]},{"Key":"really make","Fragments":["sense"]},{"Key":"boolean value","Fragments":["checking","with","already,"]},{"Key":"value checking","Fragments":["on"]},{"Key":"checking on","Fragments":["a"]},{"Key":"I reduced","Fragments":["it"]},{"Key":"reduced it","Fragments":["to"]},{"Key":"the 3rd","Fragments":["iteration."]},{"Key":"takes some","Fragments":["practice"]},{"Key":"some practice","Fragments":["to"]},{"Key":"to phrase","Fragments":["it"]},{"Key":"phrase it","Fragments":["as"]},{"Key":"logic boolean","Fragments":["statement,"]},{"Key":"definitely is","Fragments":["worth"]},{"Key":"The solution","Fragments":["as"]},{"Key":"statement. Thanks","Fragments":["for"]},{"Key":"the hint","Fragments":["to"]},{"Key":"hint to","Fragments":["the"]},{"Key":"the supporting","Fragments":["coach!","function"]},{"Key":"you expand","Fragments":["on","on"]},{"Key":"expand on","Fragments":["enumerating","it","why"]},{"Key":"on enumerating","Fragments":["the"]},{"Key":"enumerating the","Fragments":["Schedule-Day","enum"]},{"Key":"the Schedule-Day","Fragments":["properties"]},{"Key":"Schedule-Day properties","Fragments":["and"]},{"Key":"my Day()","Fragments":["method?"]},{"Key":"very efficient","Fragments":["code"]},{"Key":"efficient code","Fragments":["and"]},{"Key":"the Trim()","Fragments":["part","with"]},{"Key":"Trim() part","Fragments":["with"]},{"Key":"part with","Fragments":["IsNullOrWhitespace,"]},{"Key":"with IsNullOrWhitespace,","Fragments":["but"]},{"Key":"IsNullOrWhitespace, but","Fragments":["even"]},{"Key":"but even","Fragments":["though","there"]},{"Key":"though my","Fragments":["target"]},{"Key":"my target","Fragments":["framework"]},{"Key":"target framework","Fragments":["is"]},{"Key":"framework is","Fragments":["set"]},{"Key":"is set","Fragments":["to","already."]},{"Key":"to 4.5","Fragments":["it"]},{"Key":"4.5 it","Fragments":["is"]},{"Key":"not defined.","Fragments":["Not"]},{"Key":"defined. Not","Fragments":["exactly"]},{"Key":"exactly a","Fragments":[".Net"]},{"Key":"a .Net","Fragments":["expert"]},{"Key":".Net expert","Fragments":["yet."]},{"Key":"expert yet.","Fragments":["Any"]},{"Key":"yet. Any","Fragments":["thoughts?"]},{"Key":" @allie-walsh","Fragments":["pointed"]},{"Key":"@allie-walsh pointed","Fragments":["me"]},{"Key":"pointed me","Fragments":["to","to"]},{"Key":"excellent article","Fragments":["by"]},{"Key":"article by","Fragments":["Eric"]},{"Key":"by Eric","Fragments":["Lippert"]},{"Key":"Eric Lippert","Fragments":["(http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx)"]},{"Key":"Lippert (http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx)","Fragments":["regarding"]},{"Key":"(http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx) regarding","Fragments":["```List\u003cT\u003e.ForEach```"]},{"Key":"regarding ```List\u003cT\u003e.ForEach```","Fragments":["which,"]},{"Key":"```List\u003cT\u003e.ForEach``` which,","Fragments":["in"]},{"Key":"which, in","Fragments":["turn,"]},{"Key":"in turn,","Fragments":["pointed"]},{"Key":"turn, pointed","Fragments":["me"]},{"Key":"an article","Fragments":["(http://goo.gl/b4gImx)"]},{"Key":"article (http://goo.gl/b4gImx)","Fragments":["which"]},{"Key":"(http://goo.gl/b4gImx) which","Fragments":["points"]},{"Key":"which points","Fragments":["out"]},{"Key":"this functionality","Fragments":["was"]},{"Key":"functionality was","Fragments":["removed"]},{"Key":"was removed","Fragments":["for"]},{"Key":"removed for","Fragments":["Metro"]},{"Key":"for Metro","Fragments":["apps"]},{"Key":"Metro apps","Fragments":["leading"]},{"Key":"apps leading","Fragments":["one"]},{"Key":"leading one","Fragments":["to"]},{"Key":"assume it","Fragments":["will","is"]},{"Key":"will eventually","Fragments":["go"]},{"Key":"eventually go","Fragments":["away"]},{"Key":"go away","Fragments":["altogether."]},{"Key":" Best","Fragments":["not"]},{"Key":"Best not","Fragments":["to"]},{"Key":"it, then.","Fragments":["Thanks"]},{"Key":"then. Thanks","Fragments":["Darth!"]},{"Key":"immutable, so","Fragments":["in"]},{"Key":"so in","Fragments":["the","this","my","Luhn"]},{"Key":"not saving","Fragments":["anything"]},{"Key":"saving anything","Fragments":["by"]},{"Key":"by declaring","Fragments":["your"]},{"Key":"declaring your","Fragments":["string"]},{"Key":"your string","Fragments":["outside"]},{"Key":"string outside","Fragments":["the"]},{"Key":"loop where","Fragments":["it"]},{"Key":"believe you","Fragments":["can"]},{"Key":"even save","Fragments":["some"]},{"Key":"some memory","Fragments":["if","management","management"]},{"Key":"memory if","Fragments":["you"]},{"Key":"you eliminate","Fragments":["it","2"]},{"Key":"eliminate it","Fragments":["entirely"]},{"Key":"it entirely","Fragments":["and"]},{"Key":"entirely and","Fragments":["directly"]},{"Key":"and directly","Fragments":["add"]},{"Key":"directly add","Fragments":["str.ToLower()"]},{"Key":"add str.ToLower()","Fragments":["to"]},{"Key":"str.ToLower() to","Fragments":["the"]},{"Key":"\"rules\" described","Fragments":["in"]},{"Key":"readme about","Fragments":["the","not"]},{"Key":"nested my","Fragments":["method"]},{"Key":"method based","Fragments":["on","on"]},{"Key":"on those.","Fragments":["Having"]},{"Key":"those. Having","Fragments":["used"]},{"Key":"Having used","Fragments":["Resharper"]},{"Key":"Resharper for","Fragments":["a"]},{"Key":"years I","Fragments":["have"]},{"Key":"to reversing","Fragments":["if's"]},{"Key":"reversing if's","Fragments":["to"]},{"Key":"if's to","Fragments":["reduce"]},{"Key":"reduce nesting.","Fragments":["But","Having"]},{"Key":"nesting. But","Fragments":["it"]},{"Key":"the thought","Fragments":["process."]},{"Key":"Seems I","Fragments":["have"]},{"Key":"about LINQ!","Fragments":["Very"]},{"Key":"LINQ! Very","Fragments":["concise"]},{"Key":"Still pushing","Fragments":[":-)"]},{"Key":"guess what","Fragments":["I'm"]},{"Key":"what I'm","Fragments":["trying","looking"]},{"Key":"say here","Fragments":["is"]},{"Key":"is I'm","Fragments":["playing"]},{"Key":"I'm playing","Fragments":["the"]},{"Key":"playing the","Fragments":["[YAGNI](http://en.wikipedia.org/wiki/You_aren't_gonna_need_it)"]},{"Key":"the [YAGNI](http://en.wikipedia.org/wiki/You_aren't_gonna_need_it)","Fragments":["card."]},{"Key":"real-world situation,","Fragments":["I"]},{"Key":"situation, I","Fragments":["would"]},{"Key":"find out","Fragments":["how"]},{"Key":"being used.","Fragments":["If"]},{"Key":"used. If","Fragments":["it"]},{"Key":"a controlled","Fragments":["system,"]},{"Key":"controlled system,","Fragments":["there'd"]},{"Key":"system, there'd","Fragments":["be"]},{"Key":"there'd be","Fragments":["no"]},{"Key":"were taking","Fragments":["in"]},{"Key":"taking in","Fragments":["user"]},{"Key":"in user","Fragments":["input,"]},{"Key":"user input,","Fragments":["I","so"]},{"Key":"would check.","Fragments":["I"]},{"Key":"check. I","Fragments":["don't","am"]},{"Key":"add complexity","Fragments":["unless"]},{"Key":"complexity unless","Fragments":["I"]},{"Key":"to as","Fragments":["**complexity"]},{"Key":"as **complexity","Fragments":["kills**."]},{"Key":"2. Two","Fragments":["things"]},{"Key":"Two things","Fragments":["here:"]},{"Key":"1. Let's","Fragments":["assume"]},{"Key":"Let's assume","Fragments":["calling"]},{"Key":"assume calling","Fragments":["the"]},{"Key":"static ```Score```","Fragments":["method"]},{"Key":"```Score``` method","Fragments":["is"]},{"Key":"expensive operation.","Fragments":["IMO","Why","You"]},{"Key":"operation. IMO","Fragments":["caching"]},{"Key":"IMO caching","Fragments":["in"]},{"Key":"caching in","Fragments":["the","the"]},{"Key":"great idea","Fragments":["because"]},{"Key":"idea because","Fragments":["you"]},{"Key":"you pay","Fragments":["for"]},{"Key":"pay for","Fragments":["that"]},{"Key":"create this","Fragments":["object"]},{"Key":"possible hidden","Fragments":["side-effect."]},{"Key":"hidden side-effect.","Fragments":["If"]},{"Key":"side-effect. If","Fragments":["I"]},{"Key":"to cache,","Fragments":["I"]},{"Key":"cache, I","Fragments":["would"]},{"Key":"would maybe","Fragments":["do"]},{"Key":"maybe do","Fragments":["it"]},{"Key":"the non-static","Fragments":["```Score```"]},{"Key":"non-static ```Score```","Fragments":["to"]},{"Key":"```Score``` to","Fragments":["make"]},{"Key":"the caching","Fragments":["lazy.","I"]},{"Key":"2. In","Fragments":["reality,"]},{"Key":"In reality,","Fragments":["it's"]},{"Key":"reality, it's","Fragments":["**not**"]},{"Key":"it's **not**","Fragments":["an"]},{"Key":"**not** an","Fragments":["expensive"]},{"Key":"operation and","Fragments":["caching"]},{"Key":"and caching","Fragments":["anywhere"]},{"Key":"caching anywhere","Fragments":["vs."]},{"Key":"anywhere vs.","Fragments":["not"]},{"Key":"vs. not","Fragments":["caching"]},{"Key":"not caching","Fragments":["is"]},{"Key":"caching is","Fragments":["really"]},{"Key":"really splitting","Fragments":["hairs."]},{"Key":"splitting hairs.","Fragments":["As"]},{"Key":"hairs. As","Fragments":["I'm"]},{"Key":"As I'm","Fragments":["still"]},{"Key":"still unconvinced","Fragments":["that"]},{"Key":"unconvinced that","Fragments":["caching"]},{"Key":"that caching","Fragments":["here"]},{"Key":"caching here","Fragments":["provides"]},{"Key":"here provides","Fragments":["a"]},{"Key":"performance or","Fragments":["readability","code"]},{"Key":"or readability","Fragments":["benefit,"]},{"Key":"readability benefit,","Fragments":["I'm"]},{"Key":"benefit, I'm","Fragments":["probably"]},{"Key":"I'm probably","Fragments":["going"]},{"Key":"probably going","Fragments":["to"]},{"Key":"1. Yeah,","Fragments":["I"]},{"Key":"that _technically_","Fragments":["you"]},{"Key":"_technically_ you","Fragments":["shouldn't"]},{"Key":"Dictionary but","Fragments":["since"]},{"Key":"not adding/removing","Fragments":["items,"]},{"Key":"adding/removing items,","Fragments":["the"]},{"Key":"items, the","Fragments":["order"]},{"Key":"order won't","Fragments":["change"]},{"Key":"won't change","Fragments":["so"]},{"Key":"not worried.","Fragments":["Besides,"]},{"Key":"worried. Besides,","Fragments":["I"]},{"Key":"Besides, I","Fragments":["have"]},{"Key":"have tests","Fragments":["to"]},{"Key":"verify whenever","Fragments":["a"]},{"Key":"whenever a","Fragments":["new"]},{"Key":"new runtime","Fragments":["comes"]},{"Key":"runtime comes","Fragments":["out"]},{"Key":"comes out","Fragments":[":-)"]},{"Key":"The spec","Fragments":["says"]},{"Key":"spec says","Fragments":["to"]},{"Key":"about \u003e","Fragments":["3000"]},{"Key":"\u003e 3000","Fragments":["so"]},{"Key":"3000 so","Fragments":["I'm"]},{"Key":"3. Anything","Fragments":["\u003c"]},{"Key":"Anything \u003c","Fragments":["1"]},{"Key":"\u003c 1","Fragments":["will","ms","ms"]},{"Key":"1 will","Fragments":["get"]},{"Key":"string (negatives","Fragments":["don't"]},{"Key":"(negatives don't","Fragments":["exist"]},{"Key":"don't exist","Fragments":["in"]},{"Key":"in Roman","Fragments":["numerals)."]},{"Key":"My intention","Fragments":["was"]},{"Key":"intention was","Fragments":["to"]},{"Key":"to filter","Fragments":["any","out"]},{"Key":"filter any","Fragments":["of"]},{"Key":"possible 4yr","Fragments":["leap"]},{"Key":"4yr leap","Fragments":["years"]},{"Key":"then create","Fragments":["a"]},{"Key":"a screen","Fragments":["for"]},{"Key":"screen for","Fragments":["the"]},{"Key":"fall through.","Fragments":["I"]},{"Key":"through. I","Fragments":["find"]},{"Key":"in meatspace","Fragments":["with"]},{"Key":"meatspace with","Fragments":["nested"]},{"Key":"with nested","Fragments":["if's,"]},{"Key":"nested if's,","Fragments":["but"]},{"Key":"if's, but","Fragments":["I"]},{"Key":"appreciate suggestions","Fragments":["to"]},{"Key":"First I","Fragments":["wrote"]},{"Key":"wrote if","Fragments":["else"]},{"Key":"else statements.","Fragments":["After"]},{"Key":"After that","Fragments":["I","all"]},{"Key":"I rewrote","Fragments":["the"]},{"Key":"rewrote the","Fragments":["method","class"]},{"Key":"operator. This","Fragments":["makes"]},{"Key":"method less","Fragments":["readable"]},{"Key":"readable so","Fragments":["I"]},{"Key":"put parentheses","Fragments":["to"]},{"Key":"parentheses to","Fragments":["make"]},{"Key":"a faster","Fragments":["algorithm","algorithm","algorithm"]},{"Key":"faster algorithm","Fragments":["that","that","that"]},{"Key":"algorithm that","Fragments":["doesn't","doesn't","doesn't","doesn't","doesn't","doesn't","depends","is"]},{"Key":"the Math.Pow","Fragments":["function.","function."]},{"Key":"Math.Pow function.","Fragments":["It","It"]},{"Key":"It goes","Fragments":["like"]},{"Key":"goes like","Fragments":["this."]},{"Key":"digit in","Fragments":["input","input","string","string","string","string","string","given)"]},{"Key":"call _startDate.AddSeconds(gigaSecond)","Fragments":["three"]},{"Key":"_startDate.AddSeconds(gigaSecond) three","Fragments":["different"]},{"Key":"different times?","Fragments":["The"]},{"Key":"times? The","Fragments":["result"]},{"Key":"of calling","Fragments":["it"]},{"Key":"once is","Fragments":["already"]},{"Key":"a DateTime,","Fragments":["so"]},{"Key":"DateTime, so","Fragments":["you"]},{"Key":"a completely","Fragments":["separate","different"]},{"Key":"completely separate","Fragments":["DateTime."]},{"Key":"separate DateTime.","Fragments":["It"]},{"Key":"DateTime. It","Fragments":["looks"]},{"Key":"it correctly","Fragments":["in"]},{"Key":"correctly in","Fragments":["Method"]},{"Key":"in Method","Fragments":["1."]},{"Key":"Method 1.","Fragments":["Why"]},{"Key":"1. Why","Fragments":["did"]},{"Key":"comment it","Fragments":["out?"]},{"Key":"it out?","Fragments":["It"]},{"Key":"out? It","Fragments":["could"]},{"Key":"simpler than","Fragments":["that:","what","yours."]},{"Key":"than that:","Fragments":["\u003ccode\u003ereturn"]},{"Key":"that: \u003ccode\u003ereturn","Fragments":["_startDate.AddSeconds(gigaSecond);\u003c/code\u003e."]},{"Key":"replace \u003ccode\u003eMath.Pow(10.0,","Fragments":["9)\u003c/code\u003e"]},{"Key":"\u003ccode\u003eMath.Pow(10.0, 9)\u003c/code\u003e","Fragments":["with"]},{"Key":"with \u003ccode\u003e1E9\u003c/code\u003e","Fragments":["for"]},{"Key":"\u003ccode\u003e1E9\u003c/code\u003e for","Fragments":["simplicity"]},{"Key":"simplicity and","Fragments":["readability."]},{"Key":"your _startDate","Fragments":["value"]},{"Key":"_startDate value","Fragments":["have"]},{"Key":"value have","Fragments":["private"]},{"Key":"Put '31557600.00'","Fragments":["into"]},{"Key":"'31557600.00' into","Fragments":["a"]},{"Key":"variable so","Fragments":["you","that"]},{"Key":"you (named","Fragments":["something"]},{"Key":"(named something","Fragments":["like"]},{"Key":"like SECONDS_PER_EARTH_YEAR)","Fragments":["so"]},{"Key":"SECONDS_PER_EARTH_YEAR) so","Fragments":["your"]},{"Key":"isn't as","Fragments":["important"]},{"Key":"as important","Fragments":["for"]},{"Key":"other constants,","Fragments":["but"]},{"Key":"even there","Fragments":["it"]},{"Key":"there it","Fragments":["would"]},{"Key":"'set' for","Fragments":["Seconds"]},{"Key":"for Seconds","Fragments":["to"]},{"Key":"Seconds to","Fragments":["be"]},{"Key":"of repeated","Fragments":["code."]},{"Key":"repeated code.","Fragments":["Can"]},{"Key":"combine that","Fragments":["code"]},{"Key":"number to","Fragments":["a","an"]},{"Key":"the thousands,","Fragments":["hundreds,"]},{"Key":"thousands, hundreds,","Fragments":["tens,"]},{"Key":"hundreds, tens,","Fragments":["and"]},{"Key":"tens, and","Fragments":["singular"]},{"Key":"and singular","Fragments":["values?"]},{"Key":"singular values?","Fragments":["Could"]},{"Key":"values? Could","Fragments":["you"]},{"Key":"int thousand","Fragments":["="]},{"Key":"thousand =","Fragments":["value"]},{"Key":"= value","Fragments":["/","%","/","/","/"]},{"Key":"value /","Fragments":["1000;","value2numeral.Key;","x.Key","ruleNumber.Key;","key;"]},{"Key":"int hundred","Fragments":["="]},{"Key":"hundred =","Fragments":["(value"]},{"Key":"= (value","Fragments":["%","%"]},{"Key":"(value %","Fragments":["1000)","100)"]},{"Key":"% 1000)","Fragments":["/"]},{"Key":"1000) /","Fragments":["100;"]},{"Key":"int tens","Fragments":["="]},{"Key":"tens =","Fragments":["(value"]},{"Key":"100) /","Fragments":["10;"]},{"Key":"int singular","Fragments":["="]},{"Key":"singular =","Fragments":["value"]},{"Key":"value %","Fragments":["10;"]},{"Key":"String manipulation","Fragments":["is"]},{"Key":"manipulation is","Fragments":["much"]},{"Key":"than number","Fragments":["manipulation."]},{"Key":"Sure, that","Fragments":["is"]},{"Key":"sure didn't","Fragments":["mean"]},{"Key":"mean caching","Fragments":["in"]},{"Key":"static version","Fragments":["of","so"]},{"Key":"of Score()","Fragments":["as"]},{"Key":"Score() as","Fragments":["there"]},{"Key":"is nothing","Fragments":["to"]},{"Key":"to cache","Fragments":["there."]},{"Key":"cache there.","Fragments":["I"]},{"Key":"meant in","Fragments":["the"]},{"Key":"the instance","Fragments":["version.","so","method.","version","method,","method"]},{"Key":"started writing","Fragments":["a"]},{"Key":"that cascade","Fragments":["down"]},{"Key":"cascade down","Fragments":["and"]},{"Key":"down and","Fragments":["pass"]},{"Key":"pass their","Fragments":["value"]},{"Key":"the next.","Fragments":["then"]},{"Key":"next. then","Fragments":["ran"]},{"Key":"then ran","Fragments":["into"]},{"Key":"a flipped","Fragments":["logic"]},{"Key":"flipped logic","Fragments":["circuit,"]},{"Key":"logic circuit,","Fragments":["basically."]},{"Key":"circuit, basically.","Fragments":["tried"]},{"Key":"basically. tried","Fragments":["to"]},{"Key":"previous test","Fragments":["passed"]},{"Key":"test passed","Fragments":["to","on"]},{"Key":"next function","Fragments":["and"]},{"Key":"it stared","Fragments":["to"]},{"Key":"stared to","Fragments":["feel"]},{"Key":"to feel","Fragments":["too"]},{"Key":"feel too","Fragments":["complicated."]},{"Key":"complicated. if","Fragments":["you"]},{"Key":"can't understand","Fragments":["something,"]},{"Key":"understand something,","Fragments":["draw"]},{"Key":"something, draw","Fragments":["a"]},{"Key":"draw a","Fragments":["picture!"]},{"Key":"a picture!","Fragments":["so"]},{"Key":"picture! so","Fragments":["i"]},{"Key":"so i","Fragments":["drew"]},{"Key":"i drew","Fragments":["a"]},{"Key":"drew a","Fragments":["flow-chart."]},{"Key":"a flow-chart.","Fragments":["there"]},{"Key":"flow-chart. there","Fragments":["are"]},{"Key":"only two","Fragments":["paths"]},{"Key":"two paths","Fragments":["to"]},{"Key":"paths to","Fragments":["a"]},{"Key":"a YES","Fragments":["response."]},{"Key":"YES response.","Fragments":["so"]},{"Key":"response. so","Fragments":["I"]},{"Key":"I covered","Fragments":["those"]},{"Key":"covered those","Fragments":["two"]},{"Key":"two and","Fragments":["returned"]},{"Key":"returned false","Fragments":["instead."]},{"Key":"thinking Day","Fragments":["would"]},{"Key":"Day would","Fragments":["look"]},{"Key":"this (assuming","Fragments":["you"]},{"Key":"(assuming you","Fragments":["had"]},{"Key":"some enumeration","Fragments":["named"]},{"Key":"enumeration named","Fragments":["Schedule"]},{"Key":"named Schedule","Fragments":["that"]},{"Key":"Schedule that","Fragments":["had"]},{"Key":"had values","Fragments":["of","for"]},{"Key":"of First,","Fragments":["Second,"]},{"Key":"Second, Third,","Fragments":["Fourth,"]},{"Key":"Third, Fourth,","Fragments":["Teenth,"]},{"Key":"Fourth, Teenth,","Fragments":["and"]},{"Key":"Teenth, and","Fragments":["Last):"]},{"Key":"public DateTime","Fragments":["Day(DayOfWeek","Day(DayOfWeek"]},{"Key":"DateTime Day(DayOfWeek","Fragments":["day,","dayOfWeek,"]},{"Key":"Day(DayOfWeek day,","Fragments":["Schedule"]},{"Key":"day, Schedule","Fragments":["schedule)"]},{"Key":"var date","Fragments":["="]},{"Key":"date =","Fragments":["new","date.AddDays(7);","date.AddDays(14);","date.AddDays(21);","date.AddMonth(1).AddDays(-7);","date.AddDays(12);","date.AddDays(1);"]},{"Key":"case Schedule.First:","Fragments":["break;"]},{"Key":"case Schedule.Second:","Fragments":["date"]},{"Key":"Schedule.Second: date","Fragments":["="]},{"Key":"= date.AddDays(7);","Fragments":["break;"]},{"Key":"case Schedule.Third:","Fragments":["date"]},{"Key":"Schedule.Third: date","Fragments":["="]},{"Key":"= date.AddDays(14);","Fragments":["break;"]},{"Key":"case Schedule.Fourth:","Fragments":["date"]},{"Key":"Schedule.Fourth: date","Fragments":["="]},{"Key":"= date.AddDays(21);","Fragments":["break;"]},{"Key":"case Schedule.Last:","Fragments":["date"]},{"Key":"Schedule.Last: date","Fragments":["="]},{"Key":"= date.AddMonth(1).AddDays(-7);","Fragments":["break;"]},{"Key":"case Schedule.Teenth:","Fragments":["date"]},{"Key":"Schedule.Teenth: date","Fragments":["="]},{"Key":"= date.AddDays(12);","Fragments":["break;"]},{"Key":"// 'date'","Fragments":["now"]},{"Key":"'date' now","Fragments":["points"]},{"Key":"now points","Fragments":["to"]},{"Key":"day in","Fragments":["the","the"]},{"Key":"the 7","Fragments":["day"]},{"Key":"7 day","Fragments":["range"]},{"Key":"day range","Fragments":["we"]},{"Key":"range we","Fragments":["are"]},{"Key":"// loop","Fragments":["forward"]},{"Key":"loop forward","Fragments":["one"]},{"Key":"forward one","Fragments":["day"]},{"Key":"one day","Fragments":["at"]},{"Key":"day at","Fragments":["at"]},{"Key":"at at","Fragments":["time"]},{"Key":"at time","Fragments":["until"]},{"Key":"time until","Fragments":["we"]},{"Key":"until we","Fragments":["are"]},{"Key":"are on","Fragments":["the"]},{"Key":"correct day","Fragments":["of"]},{"Key":"while (date.DayOfWeek","Fragments":["!="]},{"Key":"(date.DayOfWeek !=","Fragments":["day)"]},{"Key":" date","Fragments":["="]},{"Key":"Give some","Fragments":["example."]},{"Key":"some example.","Fragments":["What"]},{"Key":"example. What","Fragments":["inefficiencies"]},{"Key":"What inefficiencies","Fragments":["are"]},{"Key":"inefficiencies are","Fragments":["you"]},{"Key":"anyone could","Fragments":["give"]},{"Key":"could give","Fragments":["any"]},{"Key":"give any","Fragments":["Nitpicks"]},{"Key":"any Nitpicks","Fragments":["on"]},{"Key":"Nitpicks on","Fragments":["my"]},{"Key":"my Exception","Fragments":["handling"]},{"Key":"Exception handling","Fragments":["technique,"]},{"Key":"handling technique,","Fragments":["it"]},{"Key":"technique, it","Fragments":["would"]},{"Key":"the \u003ccode\u003e.Date\u003c/code\u003e.","Fragments":["I"]},{"Key":"\u003ccode\u003e.Date\u003c/code\u003e. I","Fragments":["had"]},{"Key":"forgotten that","Fragments":["requirement."]},{"Key":"private set,","Fragments":["I"]},{"Key":"set, I","Fragments":["just"]},{"Key":"just looked","Fragments":["back"]},{"Key":"looked back","Fragments":["and"]},{"Key":"and noticed","Fragments":["that"]},{"Key":"you already","Fragments":["have","know","had","know","use","use","use"]},{"Key":"the '_startDate'","Fragments":["marked"]},{"Key":"'_startDate' marked","Fragments":["as"]},{"Key":"private -","Fragments":["so"]},{"Key":"need it.","Fragments":["When"]},{"Key":"it. When","Fragments":["you","I"]},{"Key":"public field","Fragments":["that"]},{"Key":"field that","Fragments":["you"]},{"Key":"want others","Fragments":["to"]},{"Key":"change you","Fragments":["would"]},{"Key":"do this:","Fragments":["\u003ccode\u003epublic"]},{"Key":"this: \u003ccode\u003epublic","Fragments":["DateTime"]},{"Key":"\u003ccode\u003epublic DateTime","Fragments":["MyField"]},{"Key":"DateTime MyField","Fragments":["{"]},{"Key":"MyField {","Fragments":["get;"]},{"Key":"you validate","Fragments":["your"]},{"Key":"validate your","Fragments":["input,","input"]},{"Key":"input, i.e.","Fragments":["throw"]},{"Key":"i.e. throw","Fragments":["a"]},{"Key":"descriptive exception","Fragments":["for"]},{"Key":"null strings","Fragments":["or","instead"]},{"Key":"strings or","Fragments":["strings"]},{"Key":"or strings","Fragments":["that"]},{"Key":"strings that","Fragments":["don't"]},{"Key":"don't contain","Fragments":["valid"]},{"Key":"contain valid","Fragments":["nucleotides?"]},{"Key":"Same comments","Fragments":["as"]},{"Key":"for Trinary","Fragments":["(i.e."]},{"Key":"Trinary (i.e.","Fragments":["there"]},{"Key":"(i.e. there","Fragments":["is"]},{"Key":"efficient algorithm","Fragments":["that","that"]},{"Key":"the Pow","Fragments":["function)"]},{"Key":"Pow function)","Fragments":["since"]},{"Key":"function) since","Fragments":["this"]},{"Key":"same programming","Fragments":["challenge."]},{"Key":"programming challenge.","Fragments":["Do"]},{"Key":"challenge. Do","Fragments":["we"]},{"Key":"do hexadecimal","Fragments":["next?"]},{"Key":"the write-up","Fragments":["on"]},{"Key":"write-up on","Fragments":["the"]},{"Key":"the Last","Fragments":["exception","case"]},{"Key":"Last exception","Fragments":["and"]},{"Key":"exception and","Fragments":["realized"]},{"Key":"could count","Fragments":["forward"]},{"Key":"count forward","Fragments":["as"]},{"Key":"forward as","Fragments":["well."]},{"Key":"straightforward exercise.","Fragments":["I"]},{"Key":"did opt","Fragments":["to"]},{"Key":"opt to","Fragments":["use"]},{"Key":"loop starting","Fragments":["at"]},{"Key":"and invoking","Fragments":["Verse()"]},{"Key":"invoking Verse()","Fragments":["instead"]},{"Key":"Verse() instead","Fragments":["of"]},{"Key":"date as","Fragments":["your"]},{"Key":"your suggested:","Fragments":["\u003ccode\u003e"]},{"Key":"suggested: \u003ccode\u003e","Fragments":["return"]},{"Key":"\u003ccode\u003e return","Fragments":["_startDate.AddSeconds(gigaSecond);"]},{"Key":"return _startDate.AddSeconds(gigaSecond);","Fragments":["\u003c/code\u003e"]},{"Key":"_startDate.AddSeconds(gigaSecond); \u003c/code\u003e","Fragments":["."]},{"Key":"\u003c/code\u003e .","Fragments":["I"]},{"Key":". I","Fragments":["did"]},{"Key":"not because","Fragments":["it"]},{"Key":"a date","Fragments":["AND","by"]},{"Key":"date AND","Fragments":["time,"]},{"Key":"AND time,","Fragments":["which"]},{"Key":"time, which","Fragments":["cause"]},{"Key":"which cause","Fragments":["the"]},{"Key":"fail because","Fragments":["it"]},{"Key":"only wants","Fragments":["the"]},{"Key":"wants the","Fragments":["date."]},{"Key":"finished and","Fragments":["looked"]},{"Key":"learned that","Fragments":["I","habit"]},{"Key":"have simply","Fragments":["appended"]},{"Key":"simply appended","Fragments":["a"]},{"Key":"appended a","Fragments":["\u003ccode\u003e"]},{"Key":"a \u003ccode\u003e","Fragments":[".Date"]},{"Key":"\u003ccode\u003e .Date","Fragments":["\u003c/code\u003e"]},{"Key":".Date \u003c/code\u003e","Fragments":["onto"]},{"Key":"\u003c/code\u003e onto","Fragments":["the"]},{"Key":"call as","Fragments":["shown"]},{"Key":"as shown","Fragments":["here:"]},{"Key":"shown here:","Fragments":["\u003ccode\u003ereturn"]},{"Key":"here: \u003ccode\u003ereturn","Fragments":["_startDate.AddSeconds(gigaSecond).Date;\u003c/code\u003e"]},{"Key":"you show","Fragments":["an"]},{"Key":"set a","Fragments":["property"]},{"Key":"probably slightly","Fragments":["simplify","more"]},{"Key":"slightly simplify","Fragments":["the"]},{"Key":"for appropriate","Fragments":["digits."]},{"Key":"appropriate digits.","Fragments":["One"]},{"Key":"digits. One","Fragments":["way"]},{"Key":"way would","Fragments":["be"]},{"Key":"be \u003ccode\u003eif","Fragments":["(value.Any(c","(!value.All(c"]},{"Key":"\u003ccode\u003eif (value.Any(c","Fragments":["=\u003e"]},{"Key":"(value.Any(c =\u003e","Fragments":["c"]},{"Key":"!= '0'","Fragments":["\u0026\u0026"]},{"Key":"'0' \u0026\u0026","Fragments":["c","c"]},{"Key":"\u0026\u0026 c","Fragments":["!=","!=","\u003c="]},{"Key":"!= '1'","Fragments":["\u0026\u0026"]},{"Key":"'1' \u0026\u0026","Fragments":["c"]},{"Key":"!= 2))\u003c/code\u003e.","Fragments":["A"]},{"Key":"2))\u003c/code\u003e. A","Fragments":["similar"]},{"Key":"A similar","Fragments":["version"]},{"Key":"similar version","Fragments":["would"]},{"Key":"version would","Fragments":["be"]},{"Key":"\u003ccode\u003eif (!value.All(c","Fragments":["=\u003e","=\u003e"]},{"Key":"(!value.All(c =\u003e","Fragments":["c","c"]},{"Key":"== '0'","Fragments":["||"]},{"Key":"'0' ||","Fragments":["c"]},{"Key":"== '1'","Fragments":["||"]},{"Key":"'1' ||","Fragments":["c"]},{"Key":"== '2'))\u003c/code\u003e.","Fragments":["I"]},{"Key":"'2'))\u003c/code\u003e. I","Fragments":["would"]},{"Key":"use \u003ccode\u003eif","Fragments":["(!value.All(c"]},{"Key":"c \u003e=","Fragments":["'0'"]},{"Key":"\u003e= '0'","Fragments":["\u0026\u0026"]},{"Key":"c \u003c=","Fragments":["'2'))\u003c/code\u003e."]},{"Key":"\u003c= '2'))\u003c/code\u003e.","Fragments":["Another"]},{"Key":"'2'))\u003c/code\u003e. Another","Fragments":["option"]},{"Key":"a double.","Fragments":["It"]},{"Key":"double. It","Fragments":["would"]},{"Key":"need Pow()","Fragments":["or"]},{"Key":"Pow() or","Fragments":["Reverse()."]},{"Key":"or Reverse().","Fragments":["Here's"]},{"Key":"Reverse(). Here's","Fragments":["the"]},{"Key":"Here's the","Fragments":["pseudo"]},{"Key":"the pseudo","Fragments":["code."]},{"Key":"I knocked","Fragments":["this"]},{"Key":"knocked this","Fragments":["one"]},{"Key":"out quicker","Fragments":["than"]},{"Key":"quicker than","Fragments":["I","GetNumericValuc"]},{"Key":"I expected.","Fragments":["Nested"]},{"Key":"expected. Nested","Fragments":["loops"]},{"Key":"loops to","Fragments":["traverse"]},{"Key":"traverse two","Fragments":["collections."]},{"Key":"two collections.","Fragments":["Never"]},{"Key":"collections. Never","Fragments":["used"]},{"Key":"Never used","Fragments":["Dictionary"]},{"Key":"used Dictionary","Fragments":["or"]},{"Key":"Dictionary or","Fragments":["IList"]},{"Key":"or IList","Fragments":["before"]},{"Key":"IList before","Fragments":["but"]},{"Key":"before but","Fragments":["it"]},{"Key":"like basic","Fragments":["arrays."]},{"Key":" Thanks--I","Fragments":["actually"]},{"Key":"Thanks--I actually","Fragments":["didn't"]},{"Key":"actually didn't","Fragments":["know"]},{"Key":"about .AddSeconds","Fragments":["until"]},{"Key":".AddSeconds until","Fragments":["I"]},{"Key":"others' examples","Fragments":["of"]},{"Key":"change _scrabblePointMap","Fragments":["to"]},{"Key":"_scrabblePointMap to","Fragments":["a"]},{"Key":"C# has","Fragments":["an","had"]},{"Key":"an operator","Fragments":["to"]},{"Key":"to 'null","Fragments":["coalesce'"]},{"Key":"'null coalesce'","Fragments":["to"]},{"Key":"coalesce' to","Fragments":["simply"]},{"Key":"simply your","Fragments":["constructor."]},{"Key":"your constructor.","Fragments":["You"]},{"Key":"constructor. You","Fragments":["can"]},{"Key":"(input ==","Fragments":["null)"]},{"Key":" _word","Fragments":["=","=","="]},{"Key":"_word =","Fragments":["string.Empty();","input.ToUpper();","(intput"]},{"Key":"= (intput","Fragments":["??"]},{"Key":"(intput ??","Fragments":["string.Empty).ToUpper();"]},{"Key":" Nice!","Fragments":["So","I"]},{"Key":"Nice! So","Fragments":["simple...."]},{"Key":"final suggestion.","Fragments":["When"]},{"Key":"suggestion. When","Fragments":["you"]},{"Key":"are checking","Fragments":["to","to"]},{"Key":"possible anagram","Fragments":["is"]},{"Key":"anagram is","Fragments":["really"]},{"Key":"original word,","Fragments":["you"]},{"Key":"word, you","Fragments":["convert"]},{"Key":"you convert","Fragments":["both"]},{"Key":"convert both","Fragments":["words","strands"]},{"Key":"lower case.","Fragments":["It"]},{"Key":"do \u003ccode\u003e!word.Equals(this.incomingWord,","Fragments":["StringComparison.CurrentCultureIgnoreCase)\u003c/code\u003e"]},{"Key":"\u003ccode\u003e!word.Equals(this.incomingWord, StringComparison.CurrentCultureIgnoreCase)\u003c/code\u003e","Fragments":["or"]},{"Key":"StringComparison.CurrentCultureIgnoreCase)\u003c/code\u003e or","Fragments":["at"]},{"Key":"more things","Fragments":["you"]},{"Key":"but some","Fragments":["may"]},{"Key":"some may","Fragments":["affect"]},{"Key":"may affect","Fragments":["readability,"]},{"Key":"affect readability,","Fragments":["so"]},{"Key":"not worried","Fragments":["about"]},{"Key":"Okay, updated","Fragments":["after"]},{"Key":"updated after","Fragments":["some"]},{"Key":"after some","Fragments":["good"]},{"Key":"feedback. This","Fragments":["was"]},{"Key":"much trimming","Fragments":["off"]},{"Key":"trimming off","Fragments":["unnecessary"]},{"Key":"off unnecessary","Fragments":["variables,"]},{"Key":"unnecessary variables,","Fragments":["also"]},{"Key":"variables, also","Fragments":["managed"]},{"Key":"also managed","Fragments":["to"]},{"Key":"was having","Fragments":["with","issues","issues"]},{"Key":"having with","Fragments":["the"]},{"Key":"test file.","Fragments":["I"]},{"Key":"file. I","Fragments":["think"]},{"Key":"to hand","Fragments":["the","back"]},{"Key":"hand the","Fragments":["passed"]},{"Key":"the passed","Fragments":["String"]},{"Key":"passed String","Fragments":["_addrBob"]},{"Key":"String _addrBob","Fragments":["to"]},{"Key":"_addrBob to","Fragments":["addrBob"]},{"Key":"to addrBob","Fragments":["(s."]},{"Key":"addrBob (s.","Fragments":["line"]},{"Key":"(s. line","Fragments":["16)."]},{"Key":"line 16).","Fragments":["This"]},{"Key":"16). This","Fragments":["might"]},{"Key":"be redundant.","Fragments":["Or"]},{"Key":"redundant. Or","Fragments":["is"]},{"Key":"algorithm more","Fragments":["efficient."]},{"Key":"efficient. First,","Fragments":["once"]},{"Key":"First, once","Fragments":["your"]},{"Key":"once your","Fragments":["nextNumber"]},{"Key":"your nextNumber","Fragments":["is"]},{"Key":"nextNumber is","Fragments":["greater"]},{"Key":"in possiblePrimes","Fragments":["are"]},{"Key":"possiblePrimes are","Fragments":["known"]},{"Key":"can provide","Fragments":["a"]},{"Key":"a proof","Fragments":["if"]},{"Key":"proof if","Fragments":["you"]},{"Key":"you need.","Fragments":["Since"]},{"Key":"need. Since","Fragments":["you"]},{"Key":"a Queue,","Fragments":["this"]},{"Key":"Queue, this","Fragments":["may"]},{"Key":"this may","Fragments":["not","not"]},{"Key":"if every","Fragments":["time"]},{"Key":"new Queue","Fragments":["from"]},{"Key":"Queue from","Fragments":["the"]},{"Key":"current one","Fragments":["the"]},{"Key":"order switches","Fragments":["(I'm"]},{"Key":"switches (I'm","Fragments":["not"]},{"Key":"Second, the","Fragments":["modulus"]},{"Key":"(%) operator","Fragments":["is"]},{"Key":"is relatively","Fragments":["expensive."]},{"Key":"You could,","Fragments":["instead"]},{"Key":"could, instead","Fragments":["of"]},{"Key":"modulus on","Fragments":["the"]},{"Key":"the values,","Fragments":["create"]},{"Key":"values, create","Fragments":["a"]},{"Key":"of possible","Fragments":["multiples","responses"]},{"Key":"possible multiples","Fragments":["of"]},{"Key":"of 'nextNumber'","Fragments":["(starting"]},{"Key":"'nextNumber' (starting","Fragments":["from"]},{"Key":"(starting from","Fragments":["'nextNumber'^2","3)"]},{"Key":"from 'nextNumber'^2","Fragments":["and"]},{"Key":"'nextNumber'^2 and","Fragments":["up"]},{"Key":"and up","Fragments":["to","I"]},{"Key":"last multiple","Fragments":["less"]},{"Key":"multiple less","Fragments":["than"]},{"Key":"to 'limit')","Fragments":["and"]},{"Key":"'limit') and","Fragments":["remove"]},{"Key":"those from","Fragments":["the"]},{"Key":"This also","Fragments":["may","makes"]},{"Key":"also may","Fragments":["not"]},{"Key":"a Queue","Fragments":["as"]},{"Key":"Queue as","Fragments":["it"]},{"Key":"does with","Fragments":["a"]},{"Key":"List, but","Fragments":["I"]},{"Key":"I'd just","Fragments":["mention"]},{"Key":"just mention","Fragments":["it."]},{"Key":"a 'check","Fragments":["if"]},{"Key":"'check if","Fragments":["set'"]},{"Key":"if set'","Fragments":["type"]},{"Key":"set' type","Fragments":["of"]},{"Key":"of flag.","Fragments":["I"]},{"Key":"flag. I","Fragments":["used"]},{"Key":"used '_hasKind'","Fragments":["here,"]},{"Key":"'_hasKind' here,","Fragments":["but"]},{"Key":"value checks","Fragments":["in"]},{"Key":"checks in","Fragments":["the","\u003ccode\u003eCheckInequality\u003c/code\u003e"]},{"Key":"method every","Fragments":["time"]},{"Key":"time it's","Fragments":["called."]},{"Key":" @anabelle","Fragments":["idk,"]},{"Key":"@anabelle idk,","Fragments":["unique"]},{"Key":"idk, unique","Fragments":["and"]},{"Key":"unique and","Fragments":["distinct"]},{"Key":"and distinct","Fragments":["mean"]},{"Key":"distinct mean","Fragments":["the"]},{"Key":"thing really.","Fragments":["Am"]},{"Key":"really. Am","Fragments":["I"]},{"Key":"I right","Fragments":["or"]},{"Key":"I looking","Fragments":["at"]},{"Key":"this too","Fragments":["late","readable"]},{"Key":"too late","Fragments":["at"]},{"Key":"late at","Fragments":["night?"]},{"Key":"if ```old```","Fragments":["is"]},{"Key":"```old``` is","Fragments":["null"]},{"Key":"or contains","Fragments":["letters"]},{"Key":"contains letters","Fragments":["in"]},{"Key":"in duplicate.","Fragments":["Looks"]},{"Key":"duplicate. Looks","Fragments":["good"]},{"Key":"Same as","Fragments":["the","iteration"]},{"Key":"version but","Fragments":["with"]},{"Key":"with error","Fragments":["checking."]},{"Key":"Interesting use","Fragments":["of","of"]},{"Key":"of utilizing","Fragments":["the"]},{"Key":"utilizing the","Fragments":["enum"]},{"Key":"enum backing","Fragments":["numbers."]},{"Key":"backing numbers.","Fragments":["There's"]},{"Key":"numbers. There's","Fragments":["a"]},{"Key":"that feels","Fragments":["that"]},{"Key":"feels that","Fragments":["it's"]},{"Key":"it's maybe","Fragments":["a","the"]},{"Key":"little clever","Fragments":["and"]},{"Key":"as obvious","Fragments":["it"]},{"Key":"obvious it","Fragments":["could"]},{"Key":"be but","Fragments":["I'd"]},{"Key":"be lying","Fragments":["if"]},{"Key":"lying if","Fragments":["I"]},{"Key":"said I've","Fragments":["never"]},{"Key":"never utilized","Fragments":["enums"]},{"Key":"utilized enums","Fragments":["in"]},{"Key":"enums in","Fragments":["a","general"]},{"Key":"similar way","Fragments":[":-P."]},{"Key":"way :-P.","Fragments":["So"]},{"Key":":-P. So","Fragments":["yeah,"]},{"Key":"So yeah,","Fragments":["well"]},{"Key":"yeah, well","Fragments":["done."]},{"Key":"general nitpicking","Fragments":["goes,"]},{"Key":"goes, the","Fragments":["logic"]},{"Key":"that leads","Fragments":["to"]},{"Key":"a ```TriangleException```","Fragments":["should"]},{"Key":"```TriangleException``` should","Fragments":["probably"]},{"Key":"own method","Fragments":["that","to"]},{"Key":"that describes","Fragments":["what"]},{"Key":"describes what","Fragments":["it's"]},{"Key":"it's doing.","Fragments":["The"]},{"Key":"doing. The","Fragments":["only"]},{"Key":"thing is","Fragments":["maybe","probably","that"]},{"Key":"the casing","Fragments":["of"]},{"Key":"casing of","Fragments":["```_Kind```"]},{"Key":"of ```_Kind```","Fragments":["as"]},{"Key":"```_Kind``` as","Fragments":["idiomatic"]},{"Key":"as idiomatic","Fragments":[".Net"]},{"Key":"idiomatic .Net","Fragments":["generally"]},{"Key":".Net generally","Fragments":["names"]},{"Key":"generally names","Fragments":["variables"]},{"Key":"names variables","Fragments":["camel"]},{"Key":"variables camel","Fragments":["case"]},{"Key":"camel case","Fragments":["(to"]},{"Key":"case (to","Fragments":["underscore"]},{"Key":"(to underscore","Fragments":["or"]},{"Key":"underscore or","Fragments":["not"]},{"Key":"not is","Fragments":["purely"]},{"Key":"is purely","Fragments":["personal","a"]},{"Key":"purely personal","Fragments":["preference)."]},{"Key":" @jed","Fragments":["Fixed,"]},{"Key":"@jed Fixed,","Fragments":["thanks"]},{"Key":"Fixed, thanks","Fragments":["for"]},{"Key":"for pointing","Fragments":["it"]},{"Key":"never been","Fragments":["a"]},{"Key":"of needing","Fragments":["to"]},{"Key":"needing to","Fragments":["```ToString()```","know"]},{"Key":"to ```ToString()```","Fragments":["the"]},{"Key":"```ToString()``` the","Fragments":["character"]},{"Key":"character to","Fragments":["parse","a","the"]},{"Key":"to parse","Fragments":["it","when","at"]},{"Key":"parse it","Fragments":["via"]},{"Key":"it via","Fragments":["```int.Parse```"]},{"Key":"via ```int.Parse```","Fragments":["because"]},{"Key":"```int.Parse``` because","Fragments":["of"]},{"Key":"what @euna","Fragments":["mentioned"]},{"Key":"@euna mentioned","Fragments":["(lots"]},{"Key":"mentioned (lots","Fragments":["of"]},{"Key":"(lots of","Fragments":["string"]},{"Key":"string allocation).","Fragments":["On"]},{"Key":"allocation). On","Fragments":["the"]},{"Key":"hand, coercing","Fragments":["a"]},{"Key":"coercing a","Fragments":["char"]},{"Key":"int via","Fragments":["```char"]},{"Key":"via ```char","Fragments":["-"]},{"Key":"```char -","Fragments":["'0'```"]},{"Key":"- '0'```","Fragments":["doesn't"]},{"Key":"'0'``` doesn't","Fragments":["really"]},{"Key":"really show","Fragments":["intent"]},{"Key":"show intent","Fragments":["plus"]},{"Key":"intent plus","Fragments":["I"]},{"Key":"plus I","Fragments":["think"]},{"Key":"will burn","Fragments":["you."]},{"Key":"After doing","Fragments":["some"]},{"Key":"some searching,","Fragments":["it"]},{"Key":"searching, it","Fragments":["turns"]},{"Key":"out there's","Fragments":["a"]},{"Key":"of both","Fragments":["worlds.","string."]},{"Key":"both worlds.","Fragments":["There's"]},{"Key":"worlds. There's","Fragments":["a"]},{"Key":"of char","Fragments":["called"]},{"Key":"char called","Fragments":["```GetNumericValue```"]},{"Key":"called ```GetNumericValue```","Fragments":["that"]},{"Key":"```GetNumericValue``` that","Fragments":["(I"]},{"Key":"that (I","Fragments":["believe)"]},{"Key":"(I believe)","Fragments":["doesn't"]},{"Key":"believe) doesn't","Fragments":["create"]},{"Key":"doesn't create","Fragments":["a"]},{"Key":"string but","Fragments":["does"]},{"Key":"necessary safety","Fragments":["checks."]},{"Key":"safety checks.","Fragments":["It"]},{"Key":"checks. It","Fragments":["returns"]},{"Key":"double which","Fragments":["is"]},{"Key":"is unfortunate","Fragments":["but"]},{"Key":"unfortunate but","Fragments":["I"]},{"Key":"feel OK","Fragments":["with"]},{"Key":"with casting","Fragments":["that"]},{"Key":"casting that","Fragments":["to"]},{"Key":"int. Gonna","Fragments":["update"]},{"Key":"Gonna update","Fragments":["with"]},{"Key":"update with","Fragments":["that"]},{"Key":" @roberto","Fragments":["likely"]},{"Key":"@roberto likely","Fragments":["not,"]},{"Key":"likely not,","Fragments":["so"]},{"Key":"not, so","Fragments":["fixed,"]},{"Key":"so fixed,","Fragments":["thanks."]},{"Key":"fixed, thanks.","Fragments":["Needed"]},{"Key":"thanks. Needed","Fragments":["to"]},{"Key":"Needed to","Fragments":["be"]},{"Key":"be Enumerable.Range(1,","Fragments":["limit"]},{"Key":"Enumerable.Range(1, limit","Fragments":["-","-"]},{"Key":"limit -","Fragments":["1)","1).","1)"]},{"Key":"1) though","Fragments":["or"]},{"Key":"though or","Fragments":["some"]},{"Key":"Using extension","Fragments":["methods"]},{"Key":"for case","Fragments":["determination."]},{"Key":"case determination.","Fragments":["In"]},{"Key":"determination. In","Fragments":["my"]},{"Key":"opinion one","Fragments":["should"]},{"Key":"methods carefully.","Fragments":["In"]},{"Key":"carefully. In","Fragments":["this"]},{"Key":"understand, and","Fragments":["of"]},{"Key":"and of","Fragments":["course"]},{"Key":"course just","Fragments":["because"]},{"Key":"Used static","Fragments":["class"]},{"Key":"the responds,","Fragments":["so","technically"]},{"Key":"responds, so","Fragments":["that"]},{"Key":"they also","Fragments":["can"]},{"Key":"also can","Fragments":["be"]},{"Key":"test class.","Fragments":["Makes"]},{"Key":"class. Makes","Fragments":["it"]},{"Key":" \u003cb\u003eIsNullOfWhiteSpace()\u003c/b\u003e","Fragments":["is"]},{"Key":"\u003cb\u003eIsNullOfWhiteSpace()\u003c/b\u003e is","Fragments":["static"]},{"Key":"syntax should","Fragments":["be"]},{"Key":"bool IsEmpty(string","Fragments":["statement)"]},{"Key":"IsEmpty(string statement)","Fragments":["{"]},{"Key":"nice function","Fragments":["to"]},{"Key":"don't suppose","Fragments":["there"]},{"Key":"suppose there","Fragments":["is"]},{"Key":"a FirstOrValue","Fragments":["so"]},{"Key":"FirstOrValue so","Fragments":["you"]},{"Key":"could specify","Fragments":["something"]},{"Key":"specify something","Fragments":["other"]},{"Key":"something other","Fragments":["than"]},{"Key":"have your","Fragments":["DNAString","tests","method"]},{"Key":"your DNAString","Fragments":["and"]},{"Key":"DNAString and","Fragments":["NucleotideCounts"]},{"Key":"and NucleotideCounts","Fragments":["as"]},{"Key":"NucleotideCounts as","Fragments":["public"]},{"Key":"public members","Fragments":["that"]},{"Key":"members that","Fragments":["provide"]},{"Key":"that provide","Fragments":["access"]},{"Key":"provide access","Fragments":["to"]},{"Key":"does allow","Fragments":["DNAString"]},{"Key":"allow DNAString","Fragments":["to"]},{"Key":"DNAString to","Fragments":["be"]},{"Key":"changed after","Fragments":["instantiation"]},{"Key":"after instantiation","Fragments":["and"]},{"Key":"instantiation and","Fragments":["because"]},{"Key":"you recalculate","Fragments":["the"]},{"Key":"recalculate the","Fragments":["count","NucleotideCounts","new"]},{"Key":"count every","Fragments":["time"]},{"Key":"time `Count(c)`","Fragments":["is"]},{"Key":"`Count(c)` is","Fragments":["called"]},{"Key":"called you","Fragments":["get"]},{"Key":"get updated","Fragments":["results."]},{"Key":"updated results.","Fragments":["However,"]},{"Key":"results. However,","Fragments":["you"]},{"Key":"not recalculate","Fragments":["the"]},{"Key":"returns incorrect","Fragments":["counts."]},{"Key":"a Setter","Fragments":["Method"]},{"Key":"Setter Method","Fragments":["or"]},{"Key":"Method or","Fragments":["Property's"]},{"Key":"or Property's","Fragments":["Set"]},{"Key":"Property's Set","Fragments":["Method"]},{"Key":"Set Method","Fragments":["you"]},{"Key":"Method you","Fragments":["can"]},{"Key":"can recalculate","Fragments":["your"]},{"Key":"recalculate your","Fragments":["counts"]},{"Key":"your counts","Fragments":["only"]},{"Key":"counts only","Fragments":["when"]},{"Key":"only when","Fragments":["the","the"]},{"Key":"the DNAString","Fragments":["is"]},{"Key":"DNAString is","Fragments":["changed"]},{"Key":"is changed","Fragments":["rather"]},{"Key":"changed rather","Fragments":["than"]},{"Key":"than on","Fragments":["every"]},{"Key":"Additionally, in","Fragments":["`SetNucleotideCounts`"]},{"Key":"in `SetNucleotideCounts`","Fragments":["you"]},{"Key":"`SetNucleotideCounts` you","Fragments":["already"]},{"Key":"already know","Fragments":["the","it's"]},{"Key":"the valid","Fragments":["nucleotide","ones."]},{"Key":"valid nucleotide","Fragments":["values"]},{"Key":"nucleotide values","Fragments":["and"]},{"Key":"values and","Fragments":["so"]},{"Key":"to foreach","Fragments":["over","from"]},{"Key":"entire DNAString.","Fragments":["You"]},{"Key":"DNAString. You","Fragments":["could"]},{"Key":"could loop","Fragments":["over"]},{"Key":"keys of","Fragments":["NucleotideCounts"]},{"Key":" Feel","Fragments":["free"]},{"Key":"Ah thanks","Fragments":["tomtheisen,"]},{"Key":"thanks tomtheisen,","Fragments":["I"]},{"Key":"tomtheisen, I","Fragments":["will"]},{"Key":"take note","Fragments":["and"]},{"Key":"note and","Fragments":["implement."]},{"Key":" Agreed,","Fragments":["the"]},{"Key":"Agreed, the","Fragments":["OrderBy()"]},{"Key":"the OrderBy()","Fragments":["is"]},{"Key":"OrderBy() is","Fragments":["not"]},{"Key":"personally would","Fragments":["have"]},{"Key":"used 'number'","Fragments":["as"]},{"Key":"'number' as","Fragments":["the"]},{"Key":"local value,","Fragments":["but"]},{"Key":"value, but","Fragments":["if"]},{"Key":"preference not","Fragments":["to,"]},{"Key":"not to,","Fragments":["more"]},{"Key":"to, more","Fragments":["power"]},{"Key":"power to","Fragments":["you."]},{"Key":"to you.","Fragments":["There's","If"]},{"Key":"you. There's","Fragments":["no"]},{"Key":"no law","Fragments":["that"]},{"Key":"law that","Fragments":["says"]},{"Key":"that says","Fragments":["you","something","I"]},{"Key":"says you","Fragments":["have"]},{"Key":"for this.","Fragments":["Per","I'd"]},{"Key":"this. Per","Fragments":["the"]},{"Key":"Per the","Fragments":["documentation,"]},{"Key":"the documentation,","Fragments":["the"]},{"Key":"documentation, the","Fragments":["order"]},{"Key":"items stored","Fragments":["is","in"]},{"Key":"stored is","Fragments":["not"]},{"Key":"not guaranteed","Fragments":["to"]},{"Key":"stay the","Fragments":["same."]},{"Key":"Tuple instead","Fragments":["of"]},{"Key":"own class","Fragments":["for","and"]},{"Key":"Using FirstOrDefault()","Fragments":["can"]},{"Key":"FirstOrDefault() can","Fragments":["shorten"]},{"Key":"can shorten","Fragments":["this","your"]},{"Key":"bit. Of","Fragments":["course,"]},{"Key":"course, it'll","Fragments":["score"]},{"Key":"it'll score","Fragments":["any"]},{"Key":"score any","Fragments":["letter"]},{"Key":"any letter","Fragments":["not"]},{"Key":"letter not","Fragments":["found"]},{"Key":"found as","Fragments":["0,"]},{"Key":"as 0,","Fragments":["which"]},{"Key":"0, which","Fragments":["in"]},{"Key":"mind is","Fragments":["a"]},{"Key":"a feature,","Fragments":["not"]},{"Key":"feature, not","Fragments":["a"]},{"Key":"int Score(string","Fragments":["word)","word)","word)","word)"]},{"Key":"int result","Fragments":["="]},{"Key":"if (word","Fragments":["!="]},{"Key":"(word !=","Fragments":["null)"]},{"Key":" word","Fragments":["="]},{"Key":"word =","Fragments":["word.Trim().ToUpper();"]},{"Key":"(char letter","Fragments":["in"]},{"Key":" .Where(a","Fragments":["=\u003e"]},{"Key":".Where(a =\u003e","Fragments":["a.Item2.Contains(letter))"]},{"Key":" .Select(a","Fragments":["=\u003e"]},{"Key":".Select(a =\u003e","Fragments":["a.Item1)"]},{"Key":"My biggest","Fragments":["complaint","complaint"]},{"Key":"biggest complaint","Fragments":["is","about"]},{"Key":"Dictionary point","Fragments":["that"]},{"Key":"that @keira","Fragments":["made."]},{"Key":"@keira made.","Fragments":["You"]},{"Key":"made. You","Fragments":["really"]},{"Key":"dictionary. I","Fragments":["would"]},{"Key":"of tuples","Fragments":["instead."]},{"Key":" @kyla","Fragments":["What's"]},{"Key":"@kyla What's","Fragments":["wrong"]},{"Key":"What's wrong","Fragments":["with"]},{"Key":"with loops?","Fragments":["I"]},{"Key":"loops? I","Fragments":["like"]},{"Key":"like loops.","Fragments":[":-)"]},{"Key":"without loops,","Fragments":["it'd"]},{"Key":"loops, it'd","Fragments":["look"]},{"Key":"it'd look","Fragments":["like"]},{"Key":"Day(DayOfWeek dayOfWeek,","Fragments":["Schedule"]},{"Key":"dayOfWeek, Schedule","Fragments":["when)"]},{"Key":" DateTime","Fragments":["meetup","has"]},{"Key":"DateTime meetup","Fragments":["="]},{"Key":"meetup =","Fragments":["new","meetup.AddDays(((int)when","meetup.AddDays(12);","meetup.AddMonths(1).AddDays(-1);","meetup.AddMonths(1).AddDays(-7);"]},{"Key":"new DateTime(this.Year,","Fragments":["this.Month,"]},{"Key":"DateTime(this.Year, this.Month,","Fragments":["1);"]},{"Key":" meetup","Fragments":["=","=","=","="]},{"Key":"= meetup.AddDays(((int)when","Fragments":["-"]},{"Key":"meetup.AddDays(((int)when -","Fragments":["1)"]},{"Key":"1) *","Fragments":["7);"]},{"Key":"return meetup.AddDays((dayOfWeek","Fragments":["-","-","-","-"]},{"Key":"meetup.AddDays((dayOfWeek -","Fragments":["meetup.DayOfWeek","meetup.DayOfWeek","meetup.DayOfWeek","meetup.DayOfWeek"]},{"Key":"- meetup.DayOfWeek","Fragments":["+","+","-","+"]},{"Key":"meetup.DayOfWeek +","Fragments":["7)","7)","7)"]},{"Key":"+ 7)","Fragments":["%","%","%"]},{"Key":"7) %","Fragments":["7);","7);","7);","7);"]},{"Key":"meetup.DayOfWeek -","Fragments":["7)"]},{"Key":"- 7)","Fragments":["%"]},{"Key":"new Exception(\"Meetup","Fragments":["not"]},{"Key":"Exception(\"Meetup not","Fragments":["found!\");"]},{"Key":"was interesting","Fragments":["(using"]},{"Key":"interesting (using","Fragments":["a"]},{"Key":"(using a","Fragments":["Guid"]},{"Key":"a Guid","Fragments":["to"]},{"Key":"Guid to","Fragments":["generate"]},{"Key":"random seed),","Fragments":["but"]},{"Key":"seed), but","Fragments":["since"]},{"Key":"since Guid's","Fragments":["are"]},{"Key":"Guid's are","Fragments":["often"]},{"Key":"are often","Fragments":["generated","frowned"]},{"Key":"often generated","Fragments":["using"]},{"Key":"generated using","Fragments":["their"]},{"Key":"using their","Fragments":["own"]},{"Key":"own random","Fragments":["number"]},{"Key":"number generator,","Fragments":["it"]},{"Key":"generator, it","Fragments":["seems"]},{"Key":"seems ironic.","Fragments":[":)"]},{"Key":"Yeah, that","Fragments":["looks","is"]},{"Key":"probably pull","Fragments":["the"]},{"Key":"single function,","Fragments":["appropriately"]},{"Key":"function, appropriately","Fragments":["named,"]},{"Key":"appropriately named,","Fragments":["to"]},{"Key":"named, to","Fragments":["be"]},{"Key":"cleaner. One","Fragments":["comment"]},{"Key":"it, though;","Fragments":["it"]},{"Key":"though; it","Fragments":["relies"]},{"Key":"it relies","Fragments":["on"]},{"Key":"relies on","Fragments":["the","\"thr\"","it"]},{"Key":"the enumeration,","Fragments":["but","but"]},{"Key":"enumeration, but","Fragments":["that","that"]},{"Key":"highly unlikely","Fragments":["to"]},{"Key":"for Schedule.Last","Fragments":["could"]},{"Key":"Schedule.Last could","Fragments":["be"]},{"Key":"be reorganized","Fragments":["for"]},{"Key":"reorganized for","Fragments":["clarity"]},{"Key":"and consistency","Fragments":["like"]},{"Key":"consistency like","Fragments":["this:"]},{"Key":"Added early","Fragments":["bailing"]},{"Key":"early bailing","Fragments":["when"]},{"Key":"bailing when","Fragments":["number"]},{"Key":"when number","Fragments":["reached","reaches"]},{"Key":"number reached","Fragments":["zero."]},{"Key":"suggest bailing","Fragments":["early","early"]},{"Key":"bailing early","Fragments":["in","in"]},{"Key":"early in","Fragments":["your","your"]},{"Key":"loop when","Fragments":["value","number","you"]},{"Key":"when value","Fragments":["reaches","is","is","is"]},{"Key":"value reaches","Fragments":["zero."]},{"Key":" if(value","Fragments":["\u003c="]},{"Key":"if(value \u003c=","Fragments":["0)"]},{"Key":"\u003c= 0)","Fragments":["break;"]},{"Key":"missed this","Fragments":["myself,","myself"]},{"Key":"this myself,","Fragments":["so"]},{"Key":"myself, so","Fragments":["I"]},{"Key":"just added","Fragments":["it."]},{"Key":"added it.","Fragments":[":-)"]},{"Key":"using Dictionaries,","Fragments":["I'm"]},{"Key":"Dictionaries, I'm","Fragments":["not"]},{"Key":"them as","Fragments":["the"]},{"Key":"in them","Fragments":["is"]},{"Key":"not guaranteed.","Fragments":["I'd"]},{"Key":"guaranteed. I'd","Fragments":["suggest"]},{"Key":"number reaches","Fragments":["zero.","zero"]},{"Key":"code fails","Fragments":["the"]},{"Key":"the `Ignores_extra_length_on_original_strand_when_longer`","Fragments":["test"]},{"Key":"`Ignores_extra_length_on_original_strand_when_longer` test","Fragments":["(at"]},{"Key":"test (at","Fragments":["least"]},{"Key":"the copy","Fragments":["of"]},{"Key":"If `first`","Fragments":["is"]},{"Key":"`first` is","Fragments":["longer"]},{"Key":"than `second`","Fragments":["your"]},{"Key":"`second` your","Fragments":["get"]},{"Key":"exception because","Fragments":["`i`"]},{"Key":"because `i`","Fragments":["is"]},{"Key":"`i` is","Fragments":["outside","usually"]},{"Key":"the bounds","Fragments":["of"]},{"Key":"bounds of","Fragments":["`second`"]},{"Key":"the `_privatefield`","Fragments":["convention"]},{"Key":"`_privatefield` convention","Fragments":["but"]},{"Key":"convention but","Fragments":["I"]},{"Key":"use `this.privatefield`","Fragments":["which"]},{"Key":"`this.privatefield` which","Fragments":["people"]},{"Key":"which people","Fragments":["aren't"]},{"Key":"people aren't","Fragments":["a"]},{"Key":"aren't a","Fragments":["fan","real"]},{"Key":"of either","Fragments":[":)"]},{"Key":" `_word`","Fragments":["should"]},{"Key":"`_word` should","Fragments":["probably"]},{"Key":"descriptive so","Fragments":["it"]},{"Key":"so easily","Fragments":["confused"]},{"Key":"easily confused","Fragments":["with"]},{"Key":"confused with","Fragments":["`words`,"]},{"Key":"with `words`,","Fragments":["`word`,"]},{"Key":"`words`, `word`,","Fragments":["and"]},{"Key":"`word`, and","Fragments":["`w`."]},{"Key":"class remained","Fragments":["part"]},{"Key":"remained part","Fragments":["of"]},{"Key":"a 'Scrabble'","Fragments":["game,"]},{"Key":"'Scrabble' game,","Fragments":["I"]},{"Key":"game, I","Fragments":["would"]},{"Key":"think not.","Fragments":["However,"]},{"Key":"not. However,","Fragments":["if"]},{"Key":"class were","Fragments":["made"]},{"Key":"were made","Fragments":["available"]},{"Key":"made available","Fragments":["to"]},{"Key":"to others,","Fragments":["I"]},{"Key":"others, I","Fragments":["think"]},{"Key":"worth checking","Fragments":["the"]},{"Key":"that already.","Fragments":["You're"]},{"Key":"already. You're","Fragments":["absolutely"]},{"Key":"You're absolutely","Fragments":["right","right."]},{"Key":"absolutely right","Fragments":["and"]},{"Key":"right and","Fragments":["thanks"]},{"Key":"love Linq.","Fragments":["I've"]},{"Key":"Linq. I've","Fragments":["found"]},{"Key":"my self","Fragments":["using"]},{"Key":"self using","Fragments":["it"]},{"Key":"can fix","Fragments":["that","this"]},{"Key":"it bail","Fragments":["early"]},{"Key":"bail early","Fragments":["if"]},{"Key":"early if","Fragments":["number","'value'","you"]},{"Key":"if number","Fragments":["reaches","was"]},{"Key":"reaches zero","Fragments":["like"]},{"Key":"zero like","Fragments":["so"]},{"Key":"so (yes,","Fragments":["this"]},{"Key":"(yes, this","Fragments":["works."]},{"Key":"this works.","Fragments":["I"]},{"Key":"works. I","Fragments":["tested"]},{"Key":"I tested","Fragments":["it...):"]},{"Key":"static string","Fragments":["ToRoman(this","ToRoman(this","StringConcat(this"]},{"Key":"string ToRoman(this","Fragments":["int","int"]},{"Key":"ToRoman(this int","Fragments":["number)","number)"]},{"Key":"(number \u003c","Fragments":["0","0"]},{"Key":"\u003c 0","Fragments":["||","||"]},{"Key":"|| number","Fragments":["\u003e","\u003e"]},{"Key":"number \u003e","Fragments":["3000)","0)","3000)","0;"]},{"Key":"new ArgumentException(\"This","Fragments":["function","function"]},{"Key":"ArgumentException(\"This function","Fragments":["cannot","cannot"]},{"Key":"function cannot","Fragments":["handle","handle"]},{"Key":"cannot handle","Fragments":["the","the"]},{"Key":"number \"","Fragments":["+","+"]},{"Key":" .Where(info","Fragments":["=\u003e","=\u003e"]},{"Key":".Where(info =\u003e","Fragments":["number","{"]},{"Key":"=\u003e number","Fragments":["\u003e"]},{"Key":" .Select(info","Fragments":["=\u003e","=\u003e"]},{"Key":".Select(info =\u003e","Fragments":["checkNumber(info,","checkNumber(info,"]},{"Key":"=\u003e checkNumber(info,","Fragments":["ref","ref"]},{"Key":"checkNumber(info, ref","Fragments":["number))","number))"]},{"Key":"a suggestion,","Fragments":["you"]},{"Key":"replace Roman_Numeral_Info","Fragments":["with"]},{"Key":"Roman_Numeral_Info with","Fragments":["a"]},{"Key":"Tuple if","Fragments":["you're"]},{"Key":"a recent","Fragments":["enough"]},{"Key":"recent enough","Fragments":["version"]},{"Key":"enough version","Fragments":["of"]},{"Key":"of .NET,","Fragments":["4.0"]},{"Key":".NET, 4.0","Fragments":["and"]},{"Key":"4.0 and","Fragments":["up"]},{"Key":"up I","Fragments":["think."]},{"Key":"little cryptic,","Fragments":["but"]},{"Key":"cryptic, but","Fragments":["I"]},{"Key":"your doing","Fragments":["there..."]},{"Key":"The Where","Fragments":["does"]},{"Key":"Where does","Fragments":["work"]},{"Key":"does work","Fragments":["as"]},{"Key":"as advertised.","Fragments":["I"]},{"Key":"advertised. I","Fragments":["threw"]},{"Key":"I threw","Fragments":["an"]},{"Key":"threw an","Fragments":["exception"]},{"Key":"exception in","Fragments":["checkNumber","the"]},{"Key":"in checkNumber","Fragments":["if"]},{"Key":"checkNumber if","Fragments":["number"]},{"Key":"number was","Fragments":["0"]},{"Key":"Very elegant!","Fragments":["I"]},{"Key":"elegant! I","Fragments":["love"]},{"Key":"love your","Fragments":["use"]},{"Key":" Latter","Fragments":["exercises"]},{"Key":"Latter exercises","Fragments":["did"]},{"Key":"exercises did","Fragments":["trinary"]},{"Key":"did trinary","Fragments":["and"]},{"Key":"trinary and","Fragments":["octal."]},{"Key":"and octal.","Fragments":["My"]},{"Key":"octal. My","Fragments":["solutions"]},{"Key":"My solutions","Fragments":["for"]},{"Key":"solutions for","Fragments":["them"]},{"Key":"for them","Fragments":["were","but"]},{"Key":"them were","Fragments":["better."]},{"Key":"were better.","Fragments":["I'll"]},{"Key":"better. I'll","Fragments":["update","get"]},{"Key":"I'll update","Fragments":["the","it"]},{"Key":"the early","Fragments":["exit","breaking"]},{"Key":"exit -","Fragments":["that"]},{"Key":"- that","Fragments":["is"]},{"Key":"mental shift.","Fragments":["I"]},{"Key":"shift. I","Fragments":["tend"]},{"Key":"that enumerable.Func1().Func2()","Fragments":["means"]},{"Key":"enumerable.Func1().Func2() means","Fragments":["that"]},{"Key":"that Func1","Fragments":["completely"]},{"Key":"Func1 completely","Fragments":["runs"]},{"Key":"completely runs","Fragments":["before"]},{"Key":"runs before","Fragments":["Func2"]},{"Key":"before Func2","Fragments":["runs,"]},{"Key":"Func2 runs,","Fragments":["but"]},{"Key":"runs, but","Fragments":["if"]},{"Key":"if early","Fragments":["exit"]},{"Key":"exit works,","Fragments":["then"]},{"Key":"works, then","Fragments":["that"]},{"Key":"each elem","Fragments":["in"]},{"Key":"elem in","Fragments":["the"]},{"Key":"the enumerable,","Fragments":["Func1"]},{"Key":"enumerable, Func1","Fragments":["is"]},{"Key":"Func1 is","Fragments":["called"]},{"Key":"then Func2","Fragments":["before"]},{"Key":"Func2 before","Fragments":["going"]},{"Key":"before going","Fragments":["on"]},{"Key":"on to","Fragments":["the","their","the","the"]},{"Key":"next element.","Fragments":["Is"]},{"Key":"element. Is","Fragments":["that"]},{"Key":"Is that","Fragments":["correct?","correct"]},{"Key":"Personally I'd","Fragments":["recommend","rather"]},{"Key":"recommend renaming","Fragments":["Divisor\u003cplanet\u003e"]},{"Key":"renaming Divisor\u003cplanet\u003e","Fragments":["to"]},{"Key":"Divisor\u003cplanet\u003e to","Fragments":["\u003cPlanet\u003e_YEARS_PER_EARTH_YEAR"]},{"Key":"to \u003cPlanet\u003e_YEARS_PER_EARTH_YEAR","Fragments":["or"]},{"Key":"\u003cPlanet\u003e_YEARS_PER_EARTH_YEAR or","Fragments":["something"]},{"Key":"When reading","Fragments":["your"]},{"Key":"current names,","Fragments":["seeing"]},{"Key":"names, seeing","Fragments":["that"]},{"Key":"some value","Fragments":["is"]},{"Key":"a 'divisor'","Fragments":["is"]},{"Key":"'divisor' is","Fragments":["not"]},{"Key":"not helpful","Fragments":["to"]},{"Key":"understanding what","Fragments":["is","to","the"]},{"Key":"Generally speaking,","Fragments":["it's","fewer"]},{"Key":"speaking, it's","Fragments":["good"]},{"Key":"let boolean","Fragments":["statements"]},{"Key":"statements stand","Fragments":["on"]},{"Key":"stand on","Fragments":["their","their","its"]},{"Key":"their own.","Fragments":["Your"]},{"Key":"own. Your","Fragments":["solution"]},{"Key":"if (x)","Fragments":["{"]},{"Key":"(x) {","Fragments":["return"]},{"Key":" It'd","Fragments":["be"]},{"Key":"It'd be","Fragments":["better","broken"]},{"Key":"always nice","Fragments":["to"]},{"Key":"validate input.","Fragments":["However,"]},{"Key":"input. However,","Fragments":["if"]},{"Key":"controlled by","Fragments":["you,"]},{"Key":"by you,","Fragments":["then"]},{"Key":"you, then","Fragments":["I"]},{"Key":"might use","Fragments":["asserts"]},{"Key":"use asserts","Fragments":["which"]},{"Key":"asserts which","Fragments":["would"]},{"Key":"get removed","Fragments":["from"]},{"Key":"removed from","Fragments":["production"]},{"Key":"Another comment.","Fragments":["You"]},{"Key":"comment. You","Fragments":["used"]},{"Key":"You used","Fragments":["long"]},{"Key":"used long","Fragments":["instead"]},{"Key":"long instead","Fragments":["of"]},{"Key":"int as","Fragments":["your"]},{"Key":"your type","Fragments":["in"]},{"Key":"type in","Fragments":["order","addition","the"]},{"Key":"handle large","Fragments":["numbers,","numbers"]},{"Key":"large numbers,","Fragments":["but"]},{"Key":"numbers, but","Fragments":["your"]},{"Key":"your index","Fragments":["('i')"]},{"Key":"index ('i')","Fragments":["is"]},{"Key":"('i') is","Fragments":["only"]},{"Key":"only an","Fragments":["int,"]},{"Key":"an int,","Fragments":["so","but"]},{"Key":"any prime","Fragments":["larger"]},{"Key":"prime larger","Fragments":["than"]},{"Key":"than can","Fragments":["fit"]},{"Key":"can fit","Fragments":["in"]},{"Key":"fit in","Fragments":["a"]},{"Key":"a 32-bit","Fragments":["number"]},{"Key":"32-bit number","Fragments":["this"]},{"Key":"number this","Fragments":["algorithm"]},{"Key":"algorithm would","Fragments":["fail.","be"]},{"Key":"the \"AddMonth\"","Fragments":["and"]},{"Key":"\"AddMonth\" and","Fragments":["then"]},{"Key":"then took","Fragments":["7"]},{"Key":"took 7","Fragments":["days"]},{"Key":"days away","Fragments":["from"]},{"Key":"month. Thanks","Fragments":["for"]},{"Key":"that little","Fragments":["bit"]},{"Key":"scan for","Fragments":["invalid"]},{"Key":"invalid digits","Fragments":["instead"]},{"Key":"digits instead","Fragments":["of"]},{"Key":"validating valid","Fragments":["digits?"]},{"Key":"valid digits?","Fragments":["Wouldn't"]},{"Key":"digits? Wouldn't","Fragments":["it"]},{"Key":"string validDigits","Fragments":["="]},{"Key":"validDigits =","Fragments":["\"01\";"]},{"Key":"(char c","Fragments":["in","in","in"]},{"Key":" containsInvalids","Fragments":["="]},{"Key":"containsInvalids =","Fragments":["true;"]},{"Key":"I mistakenly","Fragments":["send"]},{"Key":"mistakenly send","Fragments":["in"]},{"Key":"a hexadecimal","Fragments":["number"]},{"Key":"hexadecimal number","Fragments":["(i.e."]},{"Key":"number (i.e.","Fragments":["'1E8F')","'1384')."]},{"Key":"(i.e. '1E8F')","Fragments":["the"]},{"Key":"'1E8F') the","Fragments":["behavior"]},{"Key":"the behavior","Fragments":["will"]},{"Key":"behavior will","Fragments":["differ"]},{"Key":"will differ","Fragments":["than"]},{"Key":"differ than","Fragments":["if"]},{"Key":"I send","Fragments":["in"]},{"Key":"decimal number","Fragments":["(i.e."]},{"Key":"that matter,","Fragments":["since","'one',"]},{"Key":"matter, since","Fragments":["you"]},{"Key":"string anyway,","Fragments":["why"]},{"Key":"anyway, why","Fragments":["not"]},{"Key":"the validating","Fragments":["at"]},{"Key":"validating at","Fragments":["the"]},{"Key":"you process","Fragments":["the"]},{"Key":"\u003c binaryString.Length;","Fragments":["i++)"]},{"Key":"if (binaryString[i]","Fragments":["=="]},{"Key":"(binaryString[i] ==","Fragments":["'1')"]},{"Key":" toReturn","Fragments":["+=","="]},{"Key":"toReturn +=","Fragments":["(int)"]},{"Key":"+= (int)","Fragments":["Math.Pow(2,"]},{"Key":"(int) Math.Pow(2,","Fragments":["binaryString.Length"]},{"Key":"Math.Pow(2, binaryString.Length","Fragments":["-"]},{"Key":"binaryString.Length -","Fragments":["i"]},{"Key":"if binaryString[i]","Fragments":["!="]},{"Key":"binaryString[i] !=","Fragments":["'0')"]},{"Key":"toReturn =","Fragments":["0;"]},{"Key":"using foreach.","Fragments":["It"]},{"Key":"foreach. It","Fragments":["is"]},{"Key":"cleaner for","Fragments":["this","the"]},{"Key":"as follows","Fragments":["(without"]},{"Key":"follows (without","Fragments":["error"]},{"Key":"(without error","Fragments":["checking):"]},{"Key":"fails \u003ccode\u003eSum_to_1000()\u003c/code\u003e","Fragments":["and"]},{"Key":"\u003ccode\u003eSum_to_1000()\u003c/code\u003e and","Fragments":["\u003ccode\u003eConfigurable_43_47_to_10000()\u003c/code\u003e,"]},{"Key":"and \u003ccode\u003eConfigurable_43_47_to_10000()\u003c/code\u003e,","Fragments":["but"]},{"Key":"\u003ccode\u003eConfigurable_43_47_to_10000()\u003c/code\u003e, but","Fragments":["it"]},{"Key":"doesn't fail","Fragments":["the"]},{"Key":"same types","Fragments":["of"]},{"Key":"with smaller","Fragments":["numbers."]},{"Key":"smaller numbers.","Fragments":["The"]},{"Key":"numbers. The","Fragments":["values","`Enumerable.Range()`"]},{"Key":"The values","Fragments":["don't"]},{"Key":"values don't","Fragments":["overflow,"]},{"Key":"don't overflow,","Fragments":["so"]},{"Key":"overflow, so","Fragments":["I"]},{"Key":"don't exactly","Fragments":["know"]},{"Key":"exactly know","Fragments":["where"]},{"Key":"with @ryder.","Fragments":["Many"]},{"Key":"@ryder. Many","Fragments":["people"]},{"Key":"Many people","Fragments":["indicate"]},{"Key":"people indicate","Fragments":["that"]},{"Key":"indicate that","Fragments":["since"]},{"Key":"Dictionary isn't","Fragments":["likely"]},{"Key":"change then","Fragments":["they"]},{"Key":"then they","Fragments":["are"]},{"Key":"okay for","Fragments":["this"]},{"Key":"simple test,","Fragments":["but"]},{"Key":"but getting","Fragments":["in","closer."]},{"Key":"getting in","Fragments":["the"]},{"Key":"right tool","Fragments":["and"]},{"Key":"tool and","Fragments":["understanding"]},{"Key":"and understanding","Fragments":["its"]},{"Key":"understanding its","Fragments":["limitations"]},{"Key":"its limitations","Fragments":["and"]},{"Key":"limitations and","Fragments":["ramifications"]},{"Key":"and ramifications","Fragments":["is"]},{"Key":"ramifications is","Fragments":["important"]},{"Key":"the road.","Fragments":["A"]},{"Key":"road. A","Fragments":["Dictionary"]},{"Key":"A Dictionary","Fragments":["is"]},{"Key":"Dictionary is","Fragments":["fabulous","that","_not_"]},{"Key":"is fabulous","Fragments":["for"]},{"Key":"fabulous for","Fragments":["look-ups,"]},{"Key":"for look-ups,","Fragments":["but"]},{"Key":"look-ups, but","Fragments":["has"]},{"Key":"no guaranteed","Fragments":["order"]},{"Key":"guaranteed order","Fragments":["and"]},{"Key":"entries. An","Fragments":["array"]},{"Key":"An array","Fragments":["on"]},{"Key":"other hand","Fragments":["only"]},{"Key":"hand only","Fragments":["uses"]},{"Key":"only uses","Fragments":["the"]},{"Key":"index of","Fragments":["a","each"]},{"Key":"a key,","Fragments":["but"]},{"Key":"key, but","Fragments":["doesn't"]},{"Key":"but doesn't","Fragments":["change"]},{"Key":"change order.","Fragments":["Both"]},{"Key":"order. Both","Fragments":["can"]},{"Key":"Both can","Fragments":["be"]},{"Key":"be iterated","Fragments":["in"]},{"Key":"iterated in","Fragments":["just"]},{"Key":"way as","Fragments":["you"]},{"Key":"doing, but","Fragments":["only"]},{"Key":"is guaranteed","Fragments":["to","to"]},{"Key":"if (condition)","Fragments":["{"]},{"Key":"job recognizing","Fragments":["that"]},{"Key":"recognizing that","Fragments":["after"]},{"Key":"after 2","Fragments":["you"]},{"Key":"2 you","Fragments":["don't"]},{"Key":"check even","Fragments":["numbers"]},{"Key":"even numbers","Fragments":["anymore.","none"]},{"Key":" However","Fragments":["this","here","this","IsPythagorean","I","I"]},{"Key":"However this","Fragments":["algorithm","code"]},{"Key":"algorithm will","Fragments":["still","work"]},{"Key":"large numbers","Fragments":["very","so"]},{"Key":"numbers very","Fragments":["efficiently."]},{"Key":"very efficiently.","Fragments":["Take"]},{"Key":"efficiently. Take","Fragments":["the"]},{"Key":"Take the","Fragments":["largest"]},{"Key":"largest number","Fragments":["in"]},{"Key":"add 2","Fragments":["to","to"]},{"Key":" Granted","Fragments":["-"]},{"Key":"Granted -","Fragments":["it"]},{"Key":"better algorithm","Fragments":["is","for"]},{"Key":"always fun","Fragments":["to"]},{"Key":"job. I","Fragments":["notice"]},{"Key":"I notice","Fragments":["that"]},{"Key":"you anticipated","Fragments":["that"]},{"Key":"anticipated that","Fragments":["this"]},{"Key":"might need","Fragments":["to"]},{"Key":"handle very","Fragments":["large"]},{"Key":"made 'value'","Fragments":["a"]},{"Key":"'value' a","Fragments":["64-bit"]},{"Key":"a 64-bit","Fragments":["integer."]},{"Key":"64-bit integer.","Fragments":["However,"]},{"Key":"integer. However,","Fragments":["your"]},{"Key":"However, your","Fragments":["loop"]},{"Key":"loop variable","Fragments":["'i'"]},{"Key":"variable 'i'","Fragments":["is"]},{"Key":"only 32-bits","Fragments":["long,"]},{"Key":"32-bits long,","Fragments":["so"]},{"Key":"long, so","Fragments":["the"]},{"Key":"the foresight","Fragments":["was"]},{"Key":"foresight was","Fragments":["in"]},{"Key":"in vain.","Fragments":["That's"]},{"Key":"vain. That's","Fragments":["not"]},{"Key":"That's not","Fragments":["entirely"]},{"Key":"entirely true","Fragments":["-"]},{"Key":"true -","Fragments":["as"]},{"Key":"as all","Fragments":["the"]},{"Key":"factors in","Fragments":["'value'"]},{"Key":"in 'value'","Fragments":["were"]},{"Key":"'value' were","Fragments":["32"]},{"Key":"were 32","Fragments":["bits"]},{"Key":"32 bits","Fragments":["or"]},{"Key":"bits or","Fragments":["less"]},{"Key":"or less","Fragments":["your","readable?","gave","than"]},{"Key":"less your","Fragments":["algorithm"]},{"Key":"of Nitpicking,","Fragments":["I"]},{"Key":"Nitpicking, I","Fragments":["suggest"]},{"Key":"change 'i'","Fragments":["to"]},{"Key":"'i' to","Fragments":["be"]},{"Key":"a long.","Fragments":["For"]},{"Key":"long. For","Fragments":["the"]},{"Key":"same reasons","Fragments":["I"]},{"Key":"reasons I","Fragments":["would","implemented"]},{"Key":"make primeFactors","Fragments":["a"]},{"Key":"primeFactors a","Fragments":["List\u003clong\u003e"]},{"Key":"a List\u003clong\u003e","Fragments":["and"]},{"Key":"List\u003clong\u003e and","Fragments":["the"]},{"Key":"fine algorithm,","Fragments":["but"]},{"Key":"but very","Fragments":["inefficient"]},{"Key":"very inefficient","Fragments":["if","if","use"]},{"Key":"inefficient if","Fragments":["'value'","the"]},{"Key":"if 'value'","Fragments":["is","reaches"]},{"Key":"is large.","Fragments":["The"]},{"Key":"large. The","Fragments":["test"]},{"Key":"case picked","Fragments":["numbers"]},{"Key":"picked numbers","Fragments":["that"]},{"Key":"take much","Fragments":["time"]},{"Key":"much time","Fragments":["via","to"]},{"Key":"time via","Fragments":["this"]},{"Key":"via this","Fragments":["method,"]},{"Key":"function on","Fragments":["that","thursdays"]},{"Key":"that number","Fragments":["the"]},{"Key":"the execution","Fragments":["time","times.","of"]},{"Key":"execution time","Fragments":["will"]},{"Key":"time will","Fragments":["jump","be"]},{"Key":"will jump","Fragments":["from"]},{"Key":"jump from","Fragments":["roughly"]},{"Key":"from roughly","Fragments":["25"]},{"Key":"roughly 25","Fragments":["milliseconds"]},{"Key":"25 milliseconds","Fragments":["to"]},{"Key":"to roughly","Fragments":["3"]},{"Key":"roughly 3","Fragments":["seconds"]},{"Key":"seconds (roughly","Fragments":["2"]},{"Key":"(roughly 2","Fragments":["orders"]},{"Key":"2 orders","Fragments":["of"]},{"Key":"orders of","Fragments":["magnitude)."]},{"Key":"do without","Fragments":["changing"]},{"Key":"without changing","Fragments":["the"]},{"Key":"algorithm much","Fragments":["is"]},{"Key":"2 as","Fragments":["a"]},{"Key":"loop at","Fragments":["3"]},{"Key":"2 each","Fragments":["time"]},{"Key":"time so","Fragments":["you"]},{"Key":"check odd","Fragments":["numbers."]},{"Key":" Unfortunately","Fragments":["that"]},{"Key":"Unfortunately that","Fragments":["doesn't"]},{"Key":"really solve","Fragments":["the"]},{"Key":"performance problem.","Fragments":["The"]},{"Key":"problem. The","Fragments":["best"]},{"Key":"primes first.","Fragments":["The"]},{"Key":"The Sieve","Fragments":["of","of","of","of"]},{"Key":"of Eratosthenes","Fragments":["is","to"]},{"Key":"Eratosthenes is","Fragments":["a"]},{"Key":"basic algorithm","Fragments":["to"]},{"Key":"Atkin is","Fragments":["more","even"]},{"Key":"complicated but","Fragments":["faster."]},{"Key":"but faster.","Fragments":["Note"]},{"Key":"faster. Note","Fragments":["that"]},{"Key":"compute primes","Fragments":["up"]},{"Key":"primes up","Fragments":["to","to","to"]},{"Key":"rework the","Fragments":["code","solution"]},{"Key":"the duplication?","Fragments":["You"]},{"Key":"duplication? You","Fragments":["are"]},{"Key":"doing almost","Fragments":["the"]},{"Key":"thing over","Fragments":["and","and"]},{"Key":"over again.","Fragments":["If"]},{"Key":"If Roman","Fragments":["numerals"]},{"Key":"Roman numerals","Fragments":["had"]},{"Key":"numerals had","Fragments":["values"]},{"Key":"for 5000s,","Fragments":["10000s,"]},{"Key":"5000s, 10000s,","Fragments":["50000s,"]},{"Key":"10000s, 50000s,","Fragments":["etc."]},{"Key":"50000s, etc.","Fragments":["up"]},{"Key":"etc. up","Fragments":["to"]},{"Key":"to billions,","Fragments":["your"]},{"Key":"billions, your","Fragments":["code"]},{"Key":"very unwieldy","Fragments":["and"]},{"Key":"unwieldy and","Fragments":["a"]},{"Key":"simple cut","Fragments":["and"]},{"Key":"cut and","Fragments":["paste"]},{"Key":"paste error","Fragments":["might"]},{"Key":"error might","Fragments":["be"]},{"Key":"similar approach","Fragments":["to"]},{"Key":"mine on","Fragments":["any"]},{"Key":"on any","Fragments":["of"]},{"Key":"the examples.","Fragments":["I"]},{"Key":"examples. I","Fragments":["noticed"]},{"Key":"pattern applies","Fragments":["to"]},{"Key":"to 'I,","Fragments":["V,"]},{"Key":"'I, V,","Fragments":["X'","X'"]},{"Key":"V, X'","Fragments":["and","and"]},{"Key":"X' and","Fragments":["'X,","'X,"]},{"Key":"and 'X,","Fragments":["L,","L,"]},{"Key":"'X, L,","Fragments":["C'","C'"]},{"Key":"L, C'","Fragments":["and","seems"]},{"Key":"C' and","Fragments":["'C,"]},{"Key":"and 'C,","Fragments":["D,"]},{"Key":"'C, D,","Fragments":["M.'"]},{"Key":"D, M.'","Fragments":["From"]},{"Key":"M.' From","Fragments":["there,"]},{"Key":"From there,","Fragments":["I"]},{"Key":"there, I","Fragments":["looked"]},{"Key":"the repetition.","Fragments":["The"]},{"Key":"repetition. The","Fragments":["trick"]},{"Key":"trick was","Fragments":["moving"]},{"Key":"was moving","Fragments":["from"]},{"Key":"moving from","Fragments":["right-to-left."]},{"Key":"any advantage","Fragments":["to"]},{"Key":"List method","Fragments":["that"]},{"Key":"- where","Fragments":["the"]},{"Key":"enumeration is","Fragments":["important"]},{"Key":"important -","Fragments":["add"]},{"Key":"comment right","Fragments":["where"]},{"Key":"right where","Fragments":["you"]},{"Key":"you declare","Fragments":["the"]},{"Key":"declare the","Fragments":["enumeration"]},{"Key":"if other","Fragments":["people"]},{"Key":"code they","Fragments":["will","are"]},{"Key":"know not","Fragments":["to"]},{"Key":"of bools","Fragments":["here"]},{"Key":"bools here","Fragments":["is"]},{"Key":"little wordier","Fragments":["than"]},{"Key":"wordier than","Fragments":["it"]},{"Key":"be. But","Fragments":["it"]},{"Key":"the decision","Fragments":["flow"]},{"Key":"decision flow","Fragments":["pretty"]},{"Key":"flow pretty","Fragments":["obvious."]},{"Key":"problem, so","Fragments":["I"]},{"Key":"wrote a","Fragments":["simple","LINQ","custom","logical"]},{"Key":"simple solution.","Fragments":["The"]},{"Key":"solution. The","Fragments":["description"]},{"Key":"The description","Fragments":["of"]},{"Key":" \"on","Fragments":["every","every"]},{"Key":"\"on every","Fragments":["year","year"]},{"Key":"you reword","Fragments":["it:"]},{"Key":"- Always","Fragments":["a"]},{"Key":"Always a","Fragments":["leap"]},{"Key":"year when","Fragments":["divisible","`year"]},{"Key":"- Or","Fragments":["if"]},{"Key":"if divisible","Fragments":["by"]},{"Key":" LOL!","Fragments":["Don't"]},{"Key":"LOL! Don't","Fragments":["forget"]},{"Key":"who hold","Fragments":["on"]},{"Key":"hold on","Fragments":["to"]},{"Key":"their Precious","Fragments":["too"]},{"Key":"Precious too","Fragments":["long."]},{"Key":" @malvina","Fragments":["I"]},{"Key":"@malvina I","Fragments":["originally"]},{"Key":"wrote everything","Fragments":["as"]},{"Key":"int, but","Fragments":["later"]},{"Key":"but later","Fragments":["went"]},{"Key":"later went","Fragments":["through"]},{"Key":"and changed","Fragments":["everything","from"]},{"Key":"changed everything","Fragments":["to"]},{"Key":"to longs.","Fragments":["I"]},{"Key":"longs. I","Fragments":["missed"]},{"Key":"int in","Fragments":["the","the"]},{"Key":"originally came","Fragments":["up"]},{"Key":"Eratosthenes to","Fragments":["calculate"]},{"Key":"the primes,","Fragments":["then"]},{"Key":"primes, then","Fragments":["used"]},{"Key":"then used","Fragments":["that","the"]},{"Key":"used that","Fragments":["to"]},{"Key":"prime factors.","Fragments":["The",":)"]},{"Key":"factors. The","Fragments":["only"]},{"Key":"only problem","Fragments":["is"]},{"Key":"kept running","Fragments":["into"]},{"Key":"running into","Fragments":["the"]},{"Key":"max array","Fragments":["size"]},{"Key":"of int32.MaxValue.","Fragments":["And"]},{"Key":"int32.MaxValue. And","Fragments":["that"]},{"Key":"that totally","Fragments":["blew"]},{"Key":"totally blew","Fragments":["up"]},{"Key":"blew up","Fragments":["when"]},{"Key":"up when","Fragments":["running"]},{"Key":"when running","Fragments":["93819012551"]},{"Key":"running 93819012551","Fragments":["through"]},{"Key":"93819012551 through","Fragments":["my"]},{"Key":"through my","Fragments":["program."]},{"Key":"the brute","Fragments":["force"]},{"Key":"force method","Fragments":["and"]},{"Key":"was faster","Fragments":["on"]},{"Key":"faster on","Fragments":["all"]},{"Key":"test cases.","Fragments":["Go"]},{"Key":"cases. Go","Fragments":["figure..."]},{"Key":"Go figure...","Fragments":[":-D"]},{"Key":"Here's that","Fragments":["implementation,"]},{"Key":"that implementation,","Fragments":["if"]},{"Key":"implementation, if","Fragments":["you're"]},{"Key":"readonly List\u003cint\u003e","Fragments":["primes"]},{"Key":"List\u003cint\u003e primes","Fragments":["="]},{"Key":"primes =","Fragments":["new","null;","new"]},{"Key":"int lastMax","Fragments":["="]},{"Key":"lastMax =","Fragments":["0;","max;"]},{"Key":"static IEnumerable\u003cint\u003e","Fragments":["For(int","Range("]},{"Key":"IEnumerable\u003cint\u003e For(int","Fragments":["num)"]},{"Key":"if (num","Fragments":["\u003e","\u003c="]},{"Key":"(num \u003e","Fragments":["lastMax)"]},{"Key":" List\u003cint\u003e","Fragments":["factors"]},{"Key":"List\u003cint\u003e factors","Fragments":["="]},{"Key":"factors =","Fragments":["new"]},{"Key":"while (num","Fragments":["%"]},{"Key":"(num %","Fragments":["i"]},{"Key":"% i","Fragments":["=="]},{"Key":"i ==","Fragments":["0)"]},{"Key":" num","Fragments":["/="]},{"Key":"num /=","Fragments":["i;"]},{"Key":"(num \u003c=","Fragments":["1)","1"]},{"Key":"static void","Fragments":["Sieve(int","AddLetterValues(string","Main(string[]","Main(string[]"]},{"Key":"void Sieve(int","Fragments":["max)"]},{"Key":" //true","Fragments":["means"]},{"Key":"//true means","Fragments":["it"]},{"Key":"means it","Fragments":["is"]},{"Key":" BitArray","Fragments":["array"]},{"Key":"BitArray array","Fragments":["="]},{"Key":"array =","Fragments":["new"]},{"Key":"new BitArray(Math.Max(2,","Fragments":["max+1));"]},{"Key":" array[0]","Fragments":["="]},{"Key":"array[0] =","Fragments":["true;"]},{"Key":" array[1]","Fragments":["="]},{"Key":"array[1] =","Fragments":["true;"]},{"Key":"= 2;","Fragments":["i"]},{"Key":"2; i","Fragments":["\u003c="]},{"Key":"\u003c= max;","Fragments":["i++)","j"]},{"Key":"(int j","Fragments":["="]},{"Key":"j =","Fragments":["i"]},{"Key":"= i","Fragments":["*"]},{"Key":"i *","Fragments":["2;","i","i","i;"]},{"Key":"* 2;","Fragments":["j"]},{"Key":"2; j","Fragments":["\u003c="]},{"Key":"j \u003c=","Fragments":["max;"]},{"Key":"max; j","Fragments":["+="]},{"Key":"j +=","Fragments":["i)"]},{"Key":" array[j]","Fragments":["="]},{"Key":"array[j] =","Fragments":["true;"]},{"Key":" lastMax","Fragments":["="]},{"Key":"Dictionary approach","Fragments":["but"]},{"Key":"and processing","Fragments":["to"]},{"Key":"processing to","Fragments":["find"]},{"Key":"find just","Fragments":["one"]},{"Key":"are solutions","Fragments":["that"]},{"Key":"solutions that","Fragments":["allow"]},{"Key":"calculate date","Fragments":["mathematically"]},{"Key":"date mathematically","Fragments":["but"]},{"Key":"mathematically but","Fragments":["your"]},{"Key":"approach reminded","Fragments":["me"]},{"Key":"reminded me","Fragments":["of"]},{"Key":"those perpetual","Fragments":["calendars"]},{"Key":"perpetual calendars","Fragments":["you"]},{"Key":"calendars you","Fragments":["sometimes"]},{"Key":"you sometimes","Fragments":["find"]},{"Key":"sometimes find","Fragments":["in","the"]},{"Key":"those Five","Fragments":["Star"]},{"Key":"Five Star","Fragments":["binders."]},{"Key":"Star binders.","Fragments":["There"]},{"Key":"binders. There","Fragments":["are"]},{"Key":"only 14","Fragments":["possible"]},{"Key":"14 possible","Fragments":["yearly"]},{"Key":"possible yearly","Fragments":["calendars"]},{"Key":"yearly calendars","Fragments":["(regular"]},{"Key":"calendars (regular","Fragments":["years"]},{"Key":"(regular years","Fragments":["starting"]},{"Key":"years starting","Fragments":["on","on"]},{"Key":"starting on","Fragments":["each","each"]},{"Key":"each day","Fragments":["of","of","is","when"]},{"Key":"week and","Fragments":["leap","see"]},{"Key":"and leap","Fragments":["years"]},{"Key":"the week).","Fragments":["These"]},{"Key":"week). These","Fragments":["14"]},{"Key":"These 14","Fragments":["precalculated"]},{"Key":"14 precalculated","Fragments":["calendars"]},{"Key":"precalculated calendars","Fragments":["could"]},{"Key":"calendars could","Fragments":["be"]},{"Key":"be stored","Fragments":["in"]},{"Key":"a data","Fragments":["structure"]},{"Key":"structure (which","Fragments":["shouldn't"]},{"Key":"(which shouldn't","Fragments":["consume"]},{"Key":"shouldn't consume","Fragments":["too"]},{"Key":"consume too","Fragments":["much"]},{"Key":"much memory)","Fragments":["and"]},{"Key":"memory) and","Fragments":["do"]},{"Key":"do very","Fragments":["fast"]},{"Key":"fast lookups","Fragments":["rather","to"]},{"Key":"lookups rather","Fragments":["than"]},{"Key":"than calculations","Fragments":["or"]},{"Key":"calculations or","Fragments":["loops."]},{"Key":" @donnell","Fragments":["Nevermind,"]},{"Key":"@donnell Nevermind,","Fragments":["I"]},{"Key":"Nevermind, I","Fragments":["just"]},{"Key":"realized there","Fragments":["was"]},{"Key":"my testing","Fragments":["code."]},{"Key":"testing code.","Fragments":["That"]},{"Key":"code. That","Fragments":["still"]},{"Key":"That still","Fragments":["does"]},{"Key":"still does","Fragments":["loop"]},{"Key":"does loop","Fragments":["through"]},{"Key":"through every","Fragments":["item","word"]},{"Key":"every item","Fragments":["in"]},{"Key":" @kavon","Fragments":["None"]},{"Key":"@kavon None","Fragments":["that"]},{"Key":"None that","Fragments":["I"]},{"Key":"know of.","Fragments":["You"]},{"Key":"of. You","Fragments":["normally"]},{"Key":"You normally","Fragments":["just"]},{"Key":"normally just","Fragments":["check"]},{"Key":"you tried","Fragments":["to","that"]},{"Key":"calculate all","Fragments":["the","leap"]},{"Key":"to 93819012551.","Fragments":["You"]},{"Key":"93819012551. You","Fragments":["only"]},{"Key":"to sqrt(93819012551)","Fragments":["or"]},{"Key":"sqrt(93819012551) or","Fragments":["306298."]},{"Key":"or 306298.","Fragments":["When"]},{"Key":"306298. When","Fragments":["you"]},{"Key":"your list,","Fragments":["if"]},{"Key":"list, if","Fragments":["the"]},{"Key":"the num","Fragments":["is"]},{"Key":"num is","Fragments":["still"]},{"Key":"not 1,","Fragments":["then"]},{"Key":"it _must_","Fragments":["be"]},{"Key":"_must_ be","Fragments":["prime."]},{"Key":"The proof","Fragments":["is"]},{"Key":"proof is","Fragments":["that"]},{"Key":"not prime,","Fragments":["then"]},{"Key":"prime, then","Fragments":["it"]},{"Key":"a composite","Fragments":["(duh!)"]},{"Key":"composite (duh!)","Fragments":["and"]},{"Key":"(duh!) and","Fragments":["have"]},{"Key":"two integers","Fragments":["A"]},{"Key":"integers A","Fragments":["and"]},{"Key":"A and","Fragments":["B","B","B"]},{"Key":"B that","Fragments":["multiply"]},{"Key":"multiply together","Fragments":["to"]},{"Key":"make num.","Fragments":["Since"]},{"Key":"num. Since","Fragments":["you"]},{"Key":"have tried","Fragments":["all","compiling"]},{"Key":"tried all","Fragments":["the"]},{"Key":"numbers of","Fragments":["to"]},{"Key":"to sqrt(num)","Fragments":["then"]},{"Key":"sqrt(num) then","Fragments":["A"]},{"Key":"then A","Fragments":["and"]},{"Key":"B both","Fragments":["must"]},{"Key":"both must","Fragments":["be"]},{"Key":"than sqrt(num).","Fragments":["Since"]},{"Key":"sqrt(num). Since","Fragments":["any"]},{"Key":"Since any","Fragments":["number"]},{"Key":"number larger","Fragments":["than","than"]},{"Key":"than sqrt(num)","Fragments":["times","must"]},{"Key":"sqrt(num) times","Fragments":["another"]},{"Key":"times another","Fragments":["number"]},{"Key":"another number","Fragments":["larger","in"]},{"Key":"sqrt(num) must","Fragments":["be"]},{"Key":"than num","Fragments":["we"]},{"Key":"num we","Fragments":["know"]},{"Key":"there can","Fragments":["be"]},{"Key":"no such","Fragments":["A"]},{"Key":"such A","Fragments":["and"]},{"Key":"B and","Fragments":["num"]},{"Key":"and num","Fragments":["must"]},{"Key":"num must","Fragments":["be"]},{"Key":"down that","Fragments":["road."]},{"Key":"that road.","Fragments":["Out"]},{"Key":"road. Out","Fragments":["of"]},{"Key":"curiosity, does","Fragments":["this"]},{"Key":"this also","Fragments":["include"]},{"Key":"also include","Fragments":["things"]},{"Key":"include things","Fragments":["like"]},{"Key":"like leap","Fragments":["years?"]},{"Key":"leap years?","Fragments":["If","I"]},{"Key":"years? If","Fragments":["not,"]},{"Key":"built-in calendar","Fragments":["functions"]},{"Key":"calendar functions","Fragments":["makes"]},{"Key":"functions makes","Fragments":["sense,"]},{"Key":"makes sense,","Fragments":["because"]},{"Key":"sense, because","Fragments":["it"]},{"Key":"of fresh","Fragments":["code"]},{"Key":"fresh code","Fragments":["required."]},{"Key":"and redo","Fragments":["some"]},{"Key":"redo some","Fragments":["of"]},{"Key":"only add","Fragments":["'dayOfWeek'"]},{"Key":"add 'dayOfWeek'","Fragments":["to"]},{"Key":"'dayOfWeek' to","Fragments":["the"]},{"Key":"the dictionary--there's","Fragments":["no"]},{"Key":"dictionary--there's no","Fragments":["need"]},{"Key":"return multiple","Fragments":["days."]},{"Key":"multiple days.","Fragments":["Of"]},{"Key":"days. Of","Fragments":["course,"]},{"Key":"course, the","Fragments":["dictionary"]},{"Key":"dictionary could","Fragments":["be"]},{"Key":"be preserved","Fragments":["in"]},{"Key":"preserved in","Fragments":["the"]},{"Key":"instance so","Fragments":["that"]},{"Key":"same day","Fragments":["is"]},{"Key":" @chandler","Fragments":["unfortunately,"]},{"Key":"@chandler unfortunately,","Fragments":["we"]},{"Key":"unfortunately, we","Fragments":["checked"]},{"Key":"we checked","Fragments":["in","them"]},{"Key":"checked in","Fragments":["the","the"]},{"Key":"wrong place.","Fragments":["Sorry!"]},{"Key":"place. Sorry!","Fragments":[":-("]},{"Key":"=\u003e {","Fragments":["Console.WriteLine(\"checking:"]},{"Key":"{ Console.WriteLine(\"checking:","Fragments":["\""]},{"Key":"Console.WriteLine(\"checking: \"","Fragments":["+"]},{"Key":"+ info.str);","Fragments":["return"]},{"Key":"info.str); return","Fragments":["number"]},{"Key":"return number","Fragments":["\u003e"]},{"Key":"\u003e 0;","Fragments":["})"]},{"Key":" checking:","Fragments":["M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"]},{"Key":"quite exit","Fragments":["the"]},{"Key":"did keep","Fragments":["the"]},{"Key":"Select from","Fragments":["being"]},{"Key":"being called,","Fragments":["so"]},{"Key":"called, so","Fragments":["that"]},{"Key":" @laurianne","Fragments":["Yup,"]},{"Key":"@laurianne Yup,","Fragments":["I"]},{"Key":"Yup, I","Fragments":["noticed"]},{"Key":"that when","Fragments":["looking","I","I"]},{"Key":"other solutions.","Fragments":["But"]},{"Key":"solutions. But","Fragments":["I"]},{"Key":"like mine,","Fragments":["as"]},{"Key":"mine, as","Fragments":["I"]},{"Key":"own and","Fragments":["it","then"]},{"Key":"is precious","Fragments":["to"]},{"Key":"precious to","Fragments":["me."]},{"Key":"While there","Fragments":["is"]},{"Key":"directly calculate","Fragments":["the"]},{"Key":"date for","Fragments":["a","a"]},{"Key":"given day","Fragments":["of","of"]},{"Key":"of week","Fragments":["it"]},{"Key":"week it","Fragments":["took"]},{"Key":"it took","Fragments":["me","me","me"]},{"Key":"me much","Fragments":["longer"]},{"Key":"much longer","Fragments":["to"]},{"Key":"the calculation.","Fragments":["Development"]},{"Key":"calculation. Development","Fragments":["time"]},{"Key":"Development time","Fragments":["would"]},{"Key":"time would","Fragments":["have"]},{"Key":"been shorter","Fragments":["had"]},{"Key":"shorter had","Fragments":["I"]},{"Key":"had I","Fragments":["just"]},{"Key":"just looped","Fragments":["through"]},{"Key":"the every","Fragments":["day"]},{"Key":"every day","Fragments":["of"]},{"Key":"month. Given","Fragments":["processor"]},{"Key":"Given processor","Fragments":["speeds"]},{"Key":"processor speeds","Fragments":["of"]},{"Key":"speeds of","Fragments":["today's"]},{"Key":"of today's","Fragments":["CPUs"]},{"Key":"today's CPUs","Fragments":["looping"]},{"Key":"CPUs looping","Fragments":["up"]},{"Key":"looping up","Fragments":["to"]},{"Key":"to 31","Fragments":["times"]},{"Key":"31 times","Fragments":["on"]},{"Key":"times on","Fragments":["a"]},{"Key":"very light","Fragments":["calculation"]},{"Key":"light calculation","Fragments":["is"]},{"Key":"in developer","Fragments":["time."]},{"Key":"developer time.","Fragments":["But"]},{"Key":"time. But","Fragments":["these","for"]},{"Key":"But these","Fragments":["decisions"]},{"Key":"these decisions","Fragments":["need"]},{"Key":"decisions need","Fragments":["to"]},{"Key":"are trusting","Fragments":["Microsoft's"]},{"Key":"trusting Microsoft's","Fragments":["implementation"]},{"Key":"Microsoft's implementation","Fragments":["of"]},{"Key":"of DayOfWeek","Fragments":["to","but"]},{"Key":"DayOfWeek to","Fragments":["be"]},{"Key":"be fast.","Fragments":["While"]},{"Key":"fast. While","Fragments":["this"]},{"Key":"a safe","Fragments":["bet"]},{"Key":"safe bet","Fragments":["I"]},{"Key":"bet I","Fragments":["always"]},{"Key":"always wonder","Fragments":["how"]},{"Key":"wonder how","Fragments":["often"]},{"Key":"how often","Fragments":["we"]},{"Key":"often we","Fragments":["simply"]},{"Key":"simply take","Fragments":["for"]},{"Key":"take for","Fragments":["granted"]},{"Key":"for granted","Fragments":["these"]},{"Key":"granted these","Fragments":["abstracted"]},{"Key":"these abstracted","Fragments":["routines"]},{"Key":"abstracted routines","Fragments":["that"]},{"Key":"routines that","Fragments":["are"]},{"Key":"the framework.","Fragments":["While"]},{"Key":"framework. While","Fragments":["it"]},{"Key":"usually just","Fragments":["fine"]},{"Key":"them I","Fragments":["hope"]},{"Key":"least took","Fragments":["a"]},{"Key":"took a","Fragments":["moments","look"]},{"Key":"a moments","Fragments":["thought"]},{"Key":"moments thought","Fragments":["about"]},{"Key":"the potential","Fragments":["cost.","to"]},{"Key":"potential cost.","Fragments":["I've"]},{"Key":"cost. I've","Fragments":["seen"]},{"Key":"seen this","Fragments":["bite"]},{"Key":"this bite","Fragments":["people"]},{"Key":"bite people","Fragments":["when"]},{"Key":"people when","Fragments":["using"]},{"Key":"when using","Fragments":["Linq2Sql","multiple"]},{"Key":"using Linq2Sql","Fragments":["where"]},{"Key":"Linq2Sql where","Fragments":["techniques"]},{"Key":"where techniques","Fragments":["that"]},{"Key":"techniques that","Fragments":["were"]},{"Key":"were fast","Fragments":["in"]},{"Key":"fast in","Fragments":["Linq2Object"]},{"Key":"in Linq2Object","Fragments":["caused"]},{"Key":"Linq2Object caused","Fragments":["huge"]},{"Key":"caused huge","Fragments":["performance"]},{"Key":"huge performance","Fragments":["problems"]},{"Key":"performance problems","Fragments":["when"]},{"Key":"when mixed","Fragments":["with"]},{"Key":"mixed with","Fragments":["Linq2Sql."]},{"Key":"of @abel","Fragments":["(in"]},{"Key":"@abel (in","Fragments":["his"]},{"Key":"(in his","Fragments":["#1)"]},{"Key":"his #1)","Fragments":["you"]},{"Key":"#1) you","Fragments":["should"]},{"Key":"explicitly declare","Fragments":["your","your"]},{"Key":"declare your","Fragments":["enumeration","enum"]},{"Key":"enumeration since","Fragments":["you"]},{"Key":"you rely","Fragments":["on"]},{"Key":"`public enum","Fragments":["Schedule"]},{"Key":"enum Schedule","Fragments":["{","{"]},{"Key":"Schedule {","Fragments":["First"]},{"Key":"{ First","Fragments":["="]},{"Key":"First =","Fragments":["0,","1,"]},{"Key":"= 0,","Fragments":["Second"]},{"Key":"0, Second","Fragments":["="]},{"Key":"Second =","Fragments":["1,","2,"]},{"Key":"= 1,","Fragments":["Third"]},{"Key":"1, Third","Fragments":["="]},{"Key":"Third =","Fragments":["2,","3,"]},{"Key":"= 2,","Fragments":["Fourth"]},{"Key":"2, Fourth","Fragments":["="]},{"Key":"Fourth =","Fragments":["3,","4,"]},{"Key":"3, Teenth","Fragments":["="]},{"Key":"Teenth =","Fragments":["-1,","-2"]},{"Key":"= -1,","Fragments":["Last"]},{"Key":"-1, Last","Fragments":["="]},{"Key":"Last =","Fragments":["-2","-1,"]},{"Key":"= -2","Fragments":["}`"]},{"Key":"Your \"bit","Fragments":["of"]},{"Key":"\"bit of","Fragments":["a"]},{"Key":"a hack\"","Fragments":["can"]},{"Key":"hack\" can","Fragments":["not"]},{"Key":"can not","Fragments":["be","find"]},{"Key":"be so","Fragments":["hack-y","complex"]},{"Key":"so hack-y","Fragments":["if"]},{"Key":"hack-y if","Fragments":["you"]},{"Key":"you explicitly","Fragments":["declare"]},{"Key":"` public","Fragments":["enum"]},{"Key":" Third","Fragments":["="]},{"Key":" Fourth","Fragments":["="]},{"Key":" Last","Fragments":["="]},{"Key":" Teenth","Fragments":["="]},{"Key":"Line 29:","Fragments":["DateTime"]},{"Key":"29: DateTime","Fragments":["has"]},{"Key":"call `AddDays()`","Fragments":["so"]},{"Key":"`AddDays()` so","Fragments":["you"]},{"Key":"to fuss","Fragments":["with"]},{"Key":"fuss with","Fragments":["TimeSpan"]},{"Key":"with TimeSpan","Fragments":["(and"]},{"Key":"TimeSpan (and","Fragments":["it"]},{"Key":"Line 30:","Fragments":["Debug"]},{"Key":"30: Debug","Fragments":["code?"]},{"Key":"Line 59:","Fragments":["Very"]},{"Key":"59: Very","Fragments":["clever!"]},{"Key":"a day","Fragments":["of"]},{"Key":"week your","Fragments":["did"]},{"Key":"your did","Fragments":["so"]},{"Key":"did so","Fragments":["very"]},{"Key":"so very","Fragments":["well."]},{"Key":"well. Your","Fragments":["loop"]},{"Key":"Your loop","Fragments":["is"]},{"Key":"is minimized","Fragments":["and"]},{"Key":"minimized and","Fragments":["the"]},{"Key":"results used","Fragments":["very"]},{"Key":"used very","Fragments":["effectively."]},{"Key":"very effectively.","Fragments":["Awesome."]},{"Key":"Your unreachable","Fragments":["code"]},{"Key":"unreachable code","Fragments":["is","not"]},{"Key":"actually reachable","Fragments":["and"]},{"Key":"reachable and","Fragments":["you"]},{"Key":"you needed","Fragments":["it","to"]},{"Key":"needed it","Fragments":["to"]},{"Key":"compile because","Fragments":["you"]},{"Key":"a `default`","Fragments":["on"]},{"Key":"`default` on","Fragments":["your"]},{"Key":"your switch.","Fragments":["`meetup.Day(DayOfWeek.Monday,"]},{"Key":"switch. `meetup.Day(DayOfWeek.Monday,","Fragments":["(Schedule)100)`"]},{"Key":"`meetup.Day(DayOfWeek.Monday, (Schedule)100)`","Fragments":["would"]},{"Key":"(Schedule)100)` would","Fragments":["reach"]},{"Key":"would reach","Fragments":["your"]},{"Key":"reach your","Fragments":["`return"]},{"Key":"your `return","Fragments":["new"]},{"Key":"`return new","Fragments":["DateTime()`."]},{"Key":"new DateTime()`.","Fragments":["Internally"]},{"Key":"DateTime()`. Internally","Fragments":["enums"]},{"Key":"Internally enums","Fragments":["are"]},{"Key":"enums are","Fragments":["just","useful"]},{"Key":"just placeholders","Fragments":["for"]},{"Key":"placeholders for","Fragments":["an"]},{"Key":"an integral","Fragments":["type"]},{"Key":"integral type","Fragments":["(int"]},{"Key":"type (int","Fragments":["in"]},{"Key":"(int in","Fragments":["this"]},{"Key":"case) and","Fragments":["you"]},{"Key":"pass values","Fragments":["not"]},{"Key":"values not","Fragments":["declared"]},{"Key":"not declared","Fragments":["in"]},{"Key":"declared in","Fragments":["the"]},{"Key":"quite unsure","Fragments":["how"]},{"Key":"unsure how","Fragments":["performant"]},{"Key":"how performant","Fragments":["this"]},{"Key":"performant this","Fragments":["is."]},{"Key":"this is.","Fragments":["I'm"]},{"Key":"is. I'm","Fragments":["not"]},{"Key":"a C#","Fragments":["expert.","exercise."]},{"Key":"it's relatively","Fragments":["simple"]},{"Key":"relatively simple","Fragments":["to"]},{"Key":"understand --","Fragments":["a"]},{"Key":"-- a","Fragments":["LINQ"]},{"Key":"LINQ query","Fragments":["over"]},{"Key":"query over","Fragments":["the"]},{"Key":"input, converting","Fragments":["each"]},{"Key":"converting each","Fragments":["element"]},{"Key":"each element","Fragments":["of"]},{"Key":"element of","Fragments":["the"]},{"Key":"nested query","Fragments":["into"]},{"Key":"query into","Fragments":["a"]},{"Key":"a key-val,","Fragments":["which"]},{"Key":"key-val, which","Fragments":["is"]},{"Key":"then sent","Fragments":["through"]},{"Key":"sent through","Fragments":["ToDictionary"]},{"Key":"through ToDictionary","Fragments":["to"]},{"Key":"ToDictionary to","Fragments":["get"]},{"Key":"desired output","Fragments":["type."]},{"Key":" @vanessa","Fragments":["OK,"]},{"Key":"@vanessa OK,","Fragments":["I"]},{"Key":"made that","Fragments":["change.","public...."]},{"Key":"Much better","Fragments":["performing!","but"]},{"Key":"better performing!","Fragments":["Here's"]},{"Key":"performing! Here's","Fragments":["a"]},{"Key":" Inside","Fragments":["of"]},{"Key":"Inside of","Fragments":["Sieve(),"]},{"Key":"of Sieve(),","Fragments":["in"]},{"Key":"Sieve(), in","Fragments":["the"]},{"Key":"loop you","Fragments":["can","have"]},{"Key":"can start","Fragments":["'j'"]},{"Key":"start 'j'","Fragments":["at"]},{"Key":"'j' at","Fragments":["\u003ccode\u003ei*i\u003c/code\u003e."]},{"Key":"at \u003ccode\u003ei*i\u003c/code\u003e.","Fragments":["All"]},{"Key":"\u003ccode\u003ei*i\u003c/code\u003e. All","Fragments":["smaller"]},{"Key":"All smaller","Fragments":["composite"]},{"Key":"smaller composite","Fragments":["numbers"]},{"Key":"numbers have","Fragments":["already"]},{"Key":"That was","Fragments":["a","a","not"]},{"Key":"a smart","Fragments":["move"]},{"Key":"smart move","Fragments":["to"]},{"Key":"move to","Fragments":["store"]},{"Key":"store lastMax.","Fragments":["I"]},{"Key":"lastMax. I","Fragments":["was"]},{"Key":"was about","Fragments":["to"]},{"Key":"to ask","Fragments":["what"]},{"Key":"ask what","Fragments":["it"]},{"Key":"it dawned","Fragments":["that"]},{"Key":"dawned that","Fragments":["you"]},{"Key":"primes if","Fragments":["you"]},{"Key":"large enough","Fragments":["one."]},{"Key":"enough one.","Fragments":["However,"]},{"Key":"one. However,","Fragments":["it"]},{"Key":"to exit","Fragments":["early.","early"]},{"Key":"exit early.","Fragments":["I"]},{"Key":"early. I","Fragments":["think","don't"]},{"Key":"could exit","Fragments":["like"]},{"Key":"exit like","Fragments":["this:"]},{"Key":"like this:","Fragments":["\u003ccode\u003eif","```","```"]},{"Key":"this: \u003ccode\u003eif","Fragments":["(num"]},{"Key":"\u003ccode\u003eif (num","Fragments":["\u003c="]},{"Key":"\u003c= 1","Fragments":["||"]},{"Key":"1 ||","Fragments":["i"]},{"Key":"* i","Fragments":["\u003e","failed."]},{"Key":"i \u003e","Fragments":["num)\u003c/code\u003e."]},{"Key":"\u003e num)\u003c/code\u003e.","Fragments":["Alternately"]},{"Key":"num)\u003c/code\u003e. Alternately","Fragments":["you"]},{"Key":"Alternately you","Fragments":["could"]},{"Key":"could keep","Fragments":["the","a"]},{"Key":"current square","Fragments":["root"]},{"Key":"of num","Fragments":["(and"]},{"Key":"num (and","Fragments":["update"]},{"Key":"(and update","Fragments":["it"]},{"Key":"update it","Fragments":["any","as","every","now!"]},{"Key":"it any","Fragments":["time"]},{"Key":"time num","Fragments":["changes)"]},{"Key":"num changes)","Fragments":["and"]},{"Key":"changes) and","Fragments":["compare"]},{"Key":"compare i","Fragments":["against"]},{"Key":"i against","Fragments":["that"]},{"Key":"against that","Fragments":["value."]},{"Key":"set array[0]","Fragments":["and"]},{"Key":"array[0] and","Fragments":["array[1].","array[1],"]},{"Key":"and array[1].","Fragments":["You'll"]},{"Key":"array[1]. You'll","Fragments":["never"]},{"Key":"You'll never","Fragments":["access"]},{"Key":"never access","Fragments":["them."]},{"Key":"is starting","Fragments":["to","(or"]},{"Key":"move into","Fragments":["'hack'"]},{"Key":"into 'hack'","Fragments":["space:"]},{"Key":"'hack' space:","Fragments":["In"]},{"Key":"space: In","Fragments":["Sieve(),"]},{"Key":"In Sieve(),","Fragments":["instead"]},{"Key":"Sieve(), instead","Fragments":["of"]},{"Key":"of storing","Fragments":["one"]},{"Key":"storing one","Fragments":["bit","variable"]},{"Key":"one bit","Fragments":["for","per"]},{"Key":"every number,","Fragments":["you"]},{"Key":"number, you","Fragments":["could"]},{"Key":"store one","Fragments":["bit"]},{"Key":"bit per","Fragments":["odd"]},{"Key":"per odd","Fragments":["number."]},{"Key":"odd number.","Fragments":["It"]},{"Key":"would require","Fragments":["some","either:"]},{"Key":"require some","Fragments":["trickier"]},{"Key":"some trickier","Fragments":["code"]},{"Key":"trickier code","Fragments":["-"]},{"Key":"- you'd","Fragments":["have"]},{"Key":"initialize primes","Fragments":["to"]},{"Key":"primes to","Fragments":["include"]},{"Key":"include 2","Fragments":["separately"]},{"Key":"2 separately","Fragments":["and"]},{"Key":"separately and","Fragments":["your"]},{"Key":"eliminate multiples","Fragments":["of"]},{"Key":"your most","Fragments":["recent"]},{"Key":"recent prime","Fragments":["would"]},{"Key":"prime would","Fragments":["simply"]},{"Key":"simply only","Fragments":["do"]},{"Key":"for odd","Fragments":["multiples."]},{"Key":"odd multiples.","Fragments":["I'm"]},{"Key":"multiples. I'm","Fragments":["not"]},{"Key":"really recommending","Fragments":["it"]},{"Key":"recommending it","Fragments":["for"]},{"Key":"would halve","Fragments":["the"]},{"Key":"halve the","Fragments":["required"]},{"Key":"the required","Fragments":["space","day","array","strings"]},{"Key":"required space","Fragments":["and"]},{"Key":"efficient at","Fragments":["producing"]},{"Key":"at producing","Fragments":["primes."]},{"Key":"producing primes.","Fragments":["Again,"]},{"Key":"primes. Again,","Fragments":["I'm"]},{"Key":"Again, I'm","Fragments":["not","having"]},{"Key":"not recommending","Fragments":["you"]},{"Key":"recommending you","Fragments":["do"]},{"Key":"thing interests","Fragments":["you,"]},{"Key":"interests you,","Fragments":["go"]},{"Key":"you, go","Fragments":["look"]},{"Key":"go look","Fragments":["it"]},{"Key":"on Wikipedia","Fragments":["and"]},{"Key":"Wikipedia and","Fragments":["you"]},{"Key":"can refer","Fragments":["to"]},{"Key":"refer to","Fragments":["my"]},{"Key":"it. And,","Fragments":["no,"]},{"Key":"And, no,","Fragments":["I"]},{"Key":"write it","Fragments":["for"]},{"Key":"this test","Fragments":["-","pass..."]},{"Key":"test -","Fragments":["I"]},{"Key":"had it","Fragments":["sitting"]},{"Key":"it sitting","Fragments":["around"]},{"Key":"around from","Fragments":["something"]},{"Key":"from something","Fragments":["else","previous"]},{"Key":"something else","Fragments":["-"]},{"Key":"though in","Fragments":["a","simple","a"]},{"Key":"different language,","Fragments":["so"]},{"Key":"language, so","Fragments":["I"]},{"Key":"to translate","Fragments":["it.","each","each"]},{"Key":"guess people","Fragments":["will"]},{"Key":"have different","Fragments":["approaches,"]},{"Key":"consider maintainability","Fragments":["and"]},{"Key":"maintainability and","Fragments":["complexity"]},{"Key":"and complexity","Fragments":["as"]},{"Key":"complexity as","Fragments":["well"]},{"Key":"well :)","Fragments":["I"]},{"Key":"came here","Fragments":["because"]},{"Key":"my implementation,","Fragments":["so","don't"]},{"Key":"implementation, so","Fragments":["you've"]},{"Key":"so you've","Fragments":["seen"]},{"Key":"you've seen","Fragments":["an"]},{"Key":"seen an","Fragments":["alternative"]},{"Key":"alternative already","Fragments":[":)"]},{"Key":"looks good!","Fragments":["You"]},{"Key":"good! You","Fragments":["can"]},{"Key":"actually pull","Fragments":["this"]},{"Key":"pull this","Fragments":["off"]},{"Key":"with as","Fragments":["little"]},{"Key":"statement if","Fragments":["you"]},{"Key":"out Linq's","Fragments":["Zip"]},{"Key":"Linq's Zip","Fragments":["function."]},{"Key":"been having","Fragments":["so","to"]},{"Key":"having so","Fragments":["much"]},{"Key":"much fun","Fragments":["with",":smile:"]},{"Key":"fun with","Fragments":["them"]},{"Key":"with them","Fragments":["that","up"]},{"Key":"them that","Fragments":["I've"]},{"Key":"I've probably","Fragments":["gone"]},{"Key":"probably gone","Fragments":["overboard.","for"]},{"Key":"gone overboard.","Fragments":[":)"]},{"Key":"A year","Fragments":["that"]},{"Key":"4 is","Fragments":["not","not"]},{"Key":"always a","Fragments":["leap"]},{"Key":"year. The","Fragments":["method"]},{"Key":"is now.","Fragments":["If"]},{"Key":"now. If","Fragments":["you"]},{"Key":" @evelyn","Fragments":["Is"]},{"Key":"@evelyn Is","Fragments":["it"]},{"Key":"just me,","Fragments":["or","getting"]},{"Key":"me, or","Fragments":["is"]},{"Key":"this stupidly","Fragments":["fast?"]},{"Key":"stupidly fast?","Fragments":["I'm"]},{"Key":"fast? I'm","Fragments":["using"]},{"Key":" Stopwatch","Fragments":["stopwatch","sw","stopwatch"]},{"Key":"Stopwatch stopwatch","Fragments":["=","="]},{"Key":"stopwatch =","Fragments":["Stopwatch.StartNew();","new"]},{"Key":" IEnumerable\u003clong\u003e","Fragments":["result"]},{"Key":"IEnumerable\u003clong\u003e result","Fragments":["="]},{"Key":"in Enumerable.Range(0,","Fragments":["100))"]},{"Key":" Console.WriteLine(\"Result:","Fragments":["(\""]},{"Key":"Console.WriteLine(\"Result: (\"","Fragments":["+"]},{"Key":"(\" +","Fragments":["string.Join(\","]},{"Key":"+ string.Join(\",","Fragments":["\","]},{"Key":"string.Join(\", \",","Fragments":["result)","primes));"]},{"Key":"\", result)","Fragments":["+"]},{"Key":"result) +","Fragments":["\")\");"]},{"Key":" Console.WriteLine(\"Elapsed:","Fragments":["\""]},{"Key":"Console.WriteLine(\"Elapsed: \"","Fragments":["+"]},{"Key":"and i'm","Fragments":["getting"]},{"Key":"i'm getting","Fragments":["like"]},{"Key":"getting like","Fragments":["14"]},{"Key":"like 14","Fragments":["millis"]},{"Key":"14 millis","Fragments":["run"]},{"Key":"millis run","Fragments":["time."]},{"Key":"run time.","Fragments":["In"]},{"Key":"time. In","Fragments":["comparison,"]},{"Key":"In comparison,","Fragments":["your"]},{"Key":"comparison, your","Fragments":["code"]},{"Key":"of Atkins","Fragments":["is"]},{"Key":"Atkins is","Fragments":["getting"]},{"Key":"getting 955","Fragments":["millis."]},{"Key":"955 millis.","Fragments":["WTF?"]},{"Key":"you elaborate?","Fragments":["Something"]},{"Key":"elaborate? Something","Fragments":["happened"]},{"Key":"Something happened","Fragments":["to"]},{"Key":"the formatting","Fragments":["of"]},{"Key":"formatting of","Fragments":["your"]},{"Key":"your comment,","Fragments":["so","I"]},{"Key":"comment, so","Fragments":["I'm","although"]},{"Key":"not getting","Fragments":["that."]},{"Key":"getting that.","Fragments":["I'm"]},{"Key":"that. I'm","Fragments":["getting"]},{"Key":"getting almost","Fragments":["identical"]},{"Key":"identical times","Fragments":["-"]},{"Key":"- roughly","Fragments":["11ms"]},{"Key":"roughly 11ms","Fragments":["each"]},{"Key":"11ms each","Fragments":["execution"]},{"Key":"each execution","Fragments":["on"]},{"Key":"execution on","Fragments":["each."]},{"Key":"on each.","Fragments":["Don't"]},{"Key":"each. Don't","Fragments":["forget"]},{"Key":"implementation only","Fragments":["generates"]},{"Key":"only generates","Fragments":["the"]},{"Key":"prime list","Fragments":["once","yet.","that"]},{"Key":"list once","Fragments":["-"]},{"Key":"haven't updated","Fragments":["mine"]},{"Key":"updated mine","Fragments":["to"]},{"Key":" @casimir","Fragments":["In"]},{"Key":"@casimir In","Fragments":["regards"]},{"Key":"In regards","Fragments":["to"]},{"Key":"to array[0]","Fragments":["and"]},{"Key":"and array[1],","Fragments":["they"]},{"Key":"array[1], they","Fragments":["were"]},{"Key":"were left","Fragments":["over","undefined."]},{"Key":"over from","Fragments":["a"]},{"Key":"how starting","Fragments":["j=i*i"]},{"Key":"starting j=i*i","Fragments":["would","vs"]},{"Key":"j=i*i would","Fragments":["work."]},{"Key":"work. I","Fragments":["tried"]},{"Key":"I'm now","Fragments":["storing"]},{"Key":"now storing","Fragments":["lastMaxRoot,"]},{"Key":"storing lastMaxRoot,","Fragments":["as"]},{"Key":"lastMaxRoot, as","Fragments":["that"]},{"Key":"more interesting","Fragments":["number.","now"]},{"Key":"early breaking","Fragments":["code."]},{"Key":"breaking code.","Fragments":["Good"]},{"Key":"code. Good","Fragments":["idea."]},{"Key":"Good god,","Fragments":["trying"]},{"Key":"god, trying","Fragments":["to"]},{"Key":"implement an","Fragments":["odd"]},{"Key":"an odd","Fragments":["only","little"]},{"Key":"odd only","Fragments":["bit"]},{"Key":"only bit","Fragments":["array"]},{"Key":"bit array","Fragments":["sounds"]},{"Key":"array sounds","Fragments":["like"]},{"Key":"a PITA.","Fragments":["It"]},{"Key":"PITA. It","Fragments":["might"]},{"Key":"be fun,","Fragments":["but"]},{"Key":"fun, but","Fragments":["not"]},{"Key":"not during","Fragments":["exam","exam"]},{"Key":"during exam","Fragments":["week!","week."]},{"Key":"exam week!","Fragments":[":-D"]},{"Key":"Atkin sounds","Fragments":["interesting,"]},{"Key":"sounds interesting,","Fragments":["but"]},{"Key":"interesting, but","Fragments":["again,"]},{"Key":"but again,","Fragments":["not"]},{"Key":"again, not","Fragments":["during"]},{"Key":"For extra","Fragments":["credit,"]},{"Key":"extra credit,","Fragments":["can"]},{"Key":"credit, can","Fragments":["you"]},{"Key":"you implement","Fragments":["it"]},{"Key":"implement it","Fragments":["as","in"]},{"Key":"a generator,","Fragments":["so"]},{"Key":"generator, so","Fragments":["it"]},{"Key":"works more","Fragments":["in"]},{"Key":"more in","Fragments":["line"]},{"Key":" Hmmm.","Fragments":["```Func\u003cT,"]},{"Key":"Hmmm. ```Func\u003cT,","Fragments":["bool\u003e"]},{"Key":"```Func\u003cT, bool\u003e","Fragments":["is"]},{"Key":"bool\u003e is","Fragments":["the"]},{"Key":"see ```Predicate\u003cT\u003e```","Fragments":["in"]},{"Key":"```Predicate\u003cT\u003e``` in","Fragments":["code,"]},{"Key":"in code,","Fragments":["you","plus"]},{"Key":"always returns","Fragments":["a","a","a"]},{"Key":"boolean value.","Fragments":["It"]},{"Key":"how ```Action\u003cT\u003e```","Fragments":["is"]},{"Key":"```Action\u003cT\u003e``` is","Fragments":["a"]},{"Key":"doesn't return","Fragments":["anything","anything,"]},{"Key":"return anything","Fragments":["(void"]},{"Key":"anything (void","Fragments":["return"]},{"Key":"(void return","Fragments":["type)."]},{"Key":" check","Fragments":["out"]},{"Key":"you know:","Fragments":["Func\u003cT,","Func\u003ct"]},{"Key":"know: Func\u003cT,","Fragments":["bool\u003e"]},{"Key":"Func\u003cT, bool\u003e","Fragments":["=="]},{"Key":"bool\u003e ==","Fragments":["Predicate\u003cT\u003e","Predicate\u003ct\u003e"]},{"Key":" Predicate\u003cT\u003e","Fragments":["is"]},{"Key":"Predicate\u003cT\u003e is","Fragments":["used"]},{"Key":"supplied function","Fragments":["always","always"]},{"Key":"function always","Fragments":["returns","returns"]},{"Key":"know: Func\u003ct","Fragments":["bool\u003e"]},{"Key":"Func\u003ct bool\u003e","Fragments":["=="]},{"Key":" Predicate\u003ct\u003e","Fragments":["is"]},{"Key":"Predicate\u003ct\u003e is","Fragments":["used"]},{"Key":"than 'd'","Fragments":["and"]},{"Key":"'d' and","Fragments":["'s'?"]},{"Key":"and 's'?","Fragments":["The"]},{"Key":"'s'? The","Fragments":["use"]},{"Key":"of 'c'","Fragments":["is"]},{"Key":"'c' is","Fragments":["fine"]},{"Key":"pretty localized","Fragments":["and"]},{"Key":"localized and","Fragments":["commonly"]},{"Key":"and commonly","Fragments":["is"]},{"Key":"commonly is","Fragments":["used"]},{"Key":"character (though","Fragments":["I"]},{"Key":"(though I","Fragments":["often"]},{"Key":"often use","Fragments":["'ch')."]},{"Key":"That's cool.","Fragments":["I"]},{"Key":"not run","Fragments":["into"]},{"Key":"run into","Fragments":["that"]},{"Key":"why starting","Fragments":["j"]},{"Key":"starting j","Fragments":["at"]},{"Key":"j at","Fragments":["i"]},{"Key":"at i","Fragments":["*"]},{"Key":"i failed.","Fragments":["The"]},{"Key":"The value","Fragments":["of"]},{"Key":"i got","Fragments":["big","frustrated"]},{"Key":"got big","Fragments":["enough"]},{"Key":"big enough","Fragments":["that"]},{"Key":"it overflowed","Fragments":["and"]},{"Key":"overflowed and","Fragments":["became"]},{"Key":"and became","Fragments":["negative"]},{"Key":"became negative","Fragments":["and"]},{"Key":"negative and","Fragments":["indexing"]},{"Key":"and indexing","Fragments":["an"]},{"Key":"indexing an","Fragments":["array"]},{"Key":"array by","Fragments":["a"]},{"Key":"negative boundary","Fragments":["is"]},{"Key":"boundary is","Fragments":["not"]},{"Key":"not allowed.","Fragments":["There's"]},{"Key":"allowed. There's","Fragments":["another"]},{"Key":"There's another","Fragments":["early"]},{"Key":"another early","Fragments":["exit"]},{"Key":"exit we","Fragments":["can"]},{"Key":"problem -","Fragments":["in"]},{"Key":"- in","Fragments":["Sieve()"]},{"Key":"in Sieve()","Fragments":[","]},{"Key":"Sieve() ,","Fragments":["in"]},{"Key":", in","Fragments":["the"]},{"Key":"the 'for'","Fragments":["loop,"]},{"Key":"'for' loop,","Fragments":["we"]},{"Key":"loop, we","Fragments":["only"]},{"Key":"we only","Fragments":["have","gained"]},{"Key":"run i","Fragments":["from"]},{"Key":"i from","Fragments":["2"]},{"Key":"to sqrt(max).","Fragments":["After"]},{"Key":"sqrt(max). After","Fragments":["that"]},{"Key":"the bits","Fragments":["that","as","to"]},{"Key":"bits that","Fragments":["are"]},{"Key":"are cleared","Fragments":["in"]},{"Key":"cleared in","Fragments":["the"]},{"Key":"the bitmap","Fragments":["(starting"]},{"Key":"bitmap (starting","Fragments":["at"]},{"Key":"(starting at","Fragments":["2,"]},{"Key":"at 2,","Fragments":["of"]},{"Key":"2, of","Fragments":["course)"]},{"Key":"of course)","Fragments":["are"]},{"Key":"course) are","Fragments":["all"]},{"Key":"all prime","Fragments":["(same"]},{"Key":"prime (same","Fragments":["logic"]},{"Key":" Yours","Fragments":["appears","is"]},{"Key":"Yours appears","Fragments":["long"]},{"Key":"appears long","Fragments":["and"]},{"Key":"and unwieldy.","Fragments":["Take"]},{"Key":"unwieldy. Take","Fragments":["a"]},{"Key":"at mine:","Fragments":["http://exercism.io/submissions/9beee7091eb1e64647244172"]},{"Key":"that handles","Fragments":["every"]},{"Key":"handles every","Fragments":["case"]},{"Key":"every case","Fragments":["and"]},{"Key":"that drive","Fragments":["the"]},{"Key":"drive the","Fragments":["function."]},{"Key":"function. The","Fragments":["rules"]},{"Key":"The rules","Fragments":["are"]},{"Key":"simply while","Fragments":["my"]},{"Key":"while my","Fragments":["current"]},{"Key":"than some","Fragments":["constant,"]},{"Key":"some constant,","Fragments":["add"]},{"Key":"constant, add","Fragments":["the"]},{"Key":"the associated","Fragments":["string"]},{"Key":"associated string","Fragments":["and"]},{"Key":"and subtract","Fragments":["the","the"]},{"Key":"subtract the","Fragments":["constant","current","result"]},{"Key":"the constant","Fragments":["from"]},{"Key":"constant from","Fragments":["my"]},{"Key":"my number.","Fragments":["I"]},{"Key":"I optimized","Fragments":["it"]},{"Key":"optimized it","Fragments":["slightly"]},{"Key":"slightly from","Fragments":["that,"]},{"Key":"Well this","Fragments":["is"]},{"Key":"odd little","Fragments":["question."]},{"Key":"little question.","Fragments":["I'm"]},{"Key":"question. I'm","Fragments":["not"]},{"Key":"why there","Fragments":["is"]},{"Key":"separation in","Fragments":["the"]},{"Key":"the spec","Fragments":["between","and","to"]},{"Key":"spec between","Fragments":["the"]},{"Key":"Use \u003ccode\u003e1E9\u003c/code\u003e","Fragments":["instead"]},{"Key":"of \u003ccode\u003e10000000000\u003c/code\u003e.","Fragments":["It"]},{"Key":"\u003ccode\u003e10000000000\u003c/code\u003e. It","Fragments":["is"]},{"Key":"are duplicating","Fragments":["lots"]},{"Key":"duplicating lots","Fragments":["of"]},{"Key":"of computations.","Fragments":["Can","For"]},{"Key":"computations. Can","Fragments":["you"]},{"Key":"avoid that?","Fragments":["Can"]},{"Key":"that? Can","Fragments":["you"]},{"Key":"descriptive name","Fragments":["than"]},{"Key":"solution assumes","Fragments":["that"]},{"Key":"the allergies","Fragments":["will"]},{"Key":"allergies will","Fragments":["always"]},{"Key":"next bit","Fragments":["from"]},{"Key":"previous one.","Fragments":["If"]},{"Key":"If an","Fragments":["allergy","exercise"]},{"Key":"an allergy","Fragments":["was","score"]},{"Key":"allergy was","Fragments":["added"]},{"Key":"added that","Fragments":["didn't"]},{"Key":"didn't fit","Fragments":["that"]},{"Key":"fit that","Fragments":["pattern"]},{"Key":"that pattern","Fragments":["your"]},{"Key":"pattern your","Fragments":["solution"]},{"Key":"not work.","Fragments":["Can"]},{"Key":"you modify","Fragments":["it"]},{"Key":"modify it","Fragments":["so","later"]},{"Key":"what bits","Fragments":["are"]},{"Key":"bits are","Fragments":["for","skipped?"]},{"Key":"are for","Fragments":["which","optimisation*"]},{"Key":"which allergens","Fragments":["or"]},{"Key":"allergens or","Fragments":["if"]},{"Key":"if bits","Fragments":["are"]},{"Key":"the reasoning","Fragments":["behind"]},{"Key":"behind using","Fragments":["AsReadOnly()?","the"]},{"Key":"am confused.","Fragments":["Those"]},{"Key":"confused. Those","Fragments":["are"]},{"Key":"are logical","Fragments":["operators,"]},{"Key":"logical operators,","Fragments":["not"]},{"Key":"operators, not","Fragments":["bitwise"]},{"Key":"not bitwise","Fragments":["operators."]},{"Key":"like implementing","Fragments":["Discard"]},{"Key":"implementing Discard","Fragments":["by"]},{"Key":"Discard by","Fragments":["calling"]},{"Key":"by calling","Fragments":["Keep,"]},{"Key":"calling Keep,","Fragments":["though"]},{"Key":"Keep, though","Fragments":["I"]},{"Key":"stop and","Fragments":["consider"]},{"Key":"efficient (I","Fragments":["don't"]},{"Key":"it will).","Fragments":["I've"]},{"Key":"will). I've","Fragments":["stolen"]},{"Key":"I've stolen","Fragments":["that."]},{"Key":"stolen that.","Fragments":[":)"]},{"Key":"saw your's","Fragments":["and"]},{"Key":"your's and","Fragments":["other"]},{"Key":"I over","Fragments":["did"]},{"Key":"over did","Fragments":["it."]},{"Key":"Creative! I'm","Fragments":["not"]},{"Key":"the concept","Fragments":["of"]},{"Key":"of converting","Fragments":["every"]},{"Key":"converting every","Fragments":["character"]},{"Key":"to rejoin","Fragments":["them,"]},{"Key":"rejoin them,","Fragments":["though."]},{"Key":"them, though.","Fragments":["That"]},{"Key":"know that,","Fragments":["thanks!"]},{"Key":"job! For","Fragments":["the"]},{"Key":"exercise of","Fragments":["it,"]},{"Key":"of it,","Fragments":["what","but"]},{"Key":"it, what","Fragments":["would"]},{"Key":"good, You","Fragments":["might"]},{"Key":"about preventing","Fragments":["people"]},{"Key":"preventing people","Fragments":["from"]},{"Key":"from getting","Fragments":["a"]},{"Key":"getting a","Fragments":["reference"]},{"Key":"then mucking","Fragments":["with"]},{"Key":"mucking with","Fragments":["it,"]},{"Key":"it, invalidating","Fragments":["your"]},{"Key":"invalidating your","Fragments":["class."]},{"Key":"like best","Fragments":["here"]},{"Key":"best here","Fragments":["is"]},{"Key":"the if(conversationPart.Is????)","Fragments":["it"]},{"Key":"if(conversationPart.Is????) it","Fragments":["reads"]},{"Key":"reads just","Fragments":["like"]},{"Key":"like English.","Fragments":["I"]},{"Key":"English. I","Fragments":["like"]},{"Key":"like wrapping","Fragments":["the"]},{"Key":"wrapping the","Fragments":["constants,"]},{"Key":"the constants,","Fragments":["but"]},{"Key":"struct not","Fragments":["a"]},{"Key":"class do","Fragments":["you","not"]},{"Key":"the other?","Fragments":["I"]},{"Key":"other? I","Fragments":["like"]},{"Key":"like comparing","Fragments":["the"]},{"Key":"an uppercased","Fragments":["copy"]},{"Key":"uppercased copy","Fragments":["of"]},{"Key":"of itself,","Fragments":["but"]},{"Key":"the advantage","Fragments":["of"]},{"Key":"of compare","Fragments":["ordinal"]},{"Key":"compare ordinal","Fragments":["over"]},{"Key":"ordinal over","Fragments":["good"]},{"Key":"over good","Fragments":["ol'"]},{"Key":"good ol'","Fragments":["double-equals?"]},{"Key":"with jaguilar.","Fragments":["I"]},{"Key":"jaguilar. I","Fragments":["would"]},{"Key":"|| instead","Fragments":["of"]},{"Key":"probably personal","Fragments":["preference,"]},{"Key":"like changing","Fragments":["the"]},{"Key":"the Equals","Fragments":["call"]},{"Key":"Equals call","Fragments":["to"]},{"Key":"instead use","Fragments":["StringComparison,"]},{"Key":"use StringComparison,","Fragments":["pretty"]},{"Key":"StringComparison, pretty","Fragments":["much"]},{"Key":"much because","Fragments":["it's"]},{"Key":"a priority","Fragments":["for"]},{"Key":"priority for","Fragments":["me"]},{"Key":"all this.","Fragments":["Updated"]},{"Key":"this. Updated","Fragments":["and"]},{"Key":"Updated and","Fragments":["re-submitted."]},{"Key":" Quick","Fragments":["change"]},{"Key":"Quick change","Fragments":["in"]},{"Key":"change in","Fragments":["the"]},{"Key":"comparison logic","Fragments":["to"]},{"Key":"readable, per","Fragments":["jkedgar's"]},{"Key":"per jkedgar's","Fragments":["suggestion."]},{"Key":"jkedgar's suggestion.","Fragments":["I"]},{"Key":"Previous solution","Fragments":["ran"]},{"Key":"solution ran","Fragments":["all"]},{"Key":"ran all","Fragments":["tests"]},{"Key":"in ~35ms","Fragments":["(with"]},{"Key":"~35ms (with","Fragments":["about"]},{"Key":"(with about","Fragments":["~11ms"]},{"Key":"about ~11ms","Fragments":["being"]},{"Key":"~11ms being","Fragments":["taken"]},{"Key":"being taken","Fragments":["up"]},{"Key":"taken up","Fragments":["by"]},{"Key":"framework spin-up).","Fragments":["This"]},{"Key":"spin-up). This","Fragments":["solution"]},{"Key":"solution (skipping","Fragments":["evens"]},{"Key":"(skipping evens","Fragments":["after"]},{"Key":"evens after","Fragments":["2)"]},{"Key":"after 2)","Fragments":["takes"]},{"Key":"2) takes","Fragments":["~30ms."]},{"Key":"Is increasing","Fragments":["the"]},{"Key":"complexity worth","Fragments":["it?"]},{"Key":" 20%","Fragments":["increase"]},{"Key":"20% increase","Fragments":["(from"]},{"Key":"increase (from","Fragments":["24ms"]},{"Key":"(from 24ms","Fragments":["down"]},{"Key":"24ms down","Fragments":["to"]},{"Key":"to 19ms).","Fragments":["Usually"]},{"Key":"19ms). Usually","Fragments":["that"]},{"Key":"Usually that","Fragments":["is"]},{"Key":"it. Definitely","Fragments":["not"]},{"Key":"Definitely not","Fragments":["if"]},{"Key":"a thousand","Fragments":["times,"]},{"Key":"thousand times,","Fragments":["but"]},{"Key":"do millions","Fragments":["it"]},{"Key":"millions it","Fragments":["would.","would"]},{"Key":"would. Actually,","Fragments":["at"]},{"Key":"Actually, at","Fragments":["millions"]},{"Key":"at millions","Fragments":["it"]},{"Key":"a Sieve","Fragments":["of"]},{"Key":" Ugh,","Fragments":["I"]},{"Key":"Ugh, I","Fragments":["wish"]},{"Key":"wish C#'s","Fragments":["```Tuple```"]},{"Key":"C#'s ```Tuple```","Fragments":["syntax"]},{"Key":"```Tuple``` syntax","Fragments":["wasn't"]},{"Key":"syntax wasn't","Fragments":["so"]},{"Key":"wasn't so","Fragments":["terrible."]},{"Key":"Ooo, didn't","Fragments":["realize"]},{"Key":"that here!","Fragments":["Gonna"]},{"Key":"here! Gonna","Fragments":["get"]},{"Key":"Gonna get","Fragments":["a"]},{"Key":"Nah, not","Fragments":["a"]},{"Key":"a requirement.","Fragments":["Besides,"]},{"Key":"requirement. Besides,","Fragments":["what"]},{"Key":"Besides, what","Fragments":["is"]},{"Key":"the *correct*","Fragments":["thing"]},{"Key":"*correct* thing","Fragments":["to"]},{"Key":"do if","Fragments":["there","the","you"]},{"Key":"I sometimes","Fragments":["find"]},{"Key":"the ```Queue```","Fragments":["class"]},{"Key":"```Queue``` class","Fragments":["a"]},{"Key":"little unwieldy","Fragments":["but"]},{"Key":"unwieldy but","Fragments":["this"]},{"Key":"1. Interesting.","Fragments":["In"]},{"Key":"Interesting. In","Fragments":["trying"]},{"Key":"In trying","Fragments":["what"]},{"Key":"trying what","Fragments":["you"]},{"Key":"suggest it","Fragments":["didn't"]},{"Key":"tests any","Fragments":["faster"]},{"Key":"any faster","Fragments":["so","than"]},{"Key":"faster so","Fragments":["I"]},{"Key":"added another","Fragments":["that","version"]},{"Key":"another that","Fragments":["tested"]},{"Key":"that tested","Fragments":["a"]},{"Key":"tested a","Fragments":["much"]},{"Key":"much bigger","Fragments":["number"]},{"Key":"bigger number","Fragments":["and"]},{"Key":"big difference.","Fragments":["So","I"]},{"Key":"difference. So","Fragments":["I"]},{"Key":"a limit","Fragments":["to"]},{"Key":"limit to","Fragments":["the"]},{"Key":"the usefulness","Fragments":["of"]},{"Key":"usefulness of","Fragments":["this"]},{"Key":"this optimization.","Fragments":["That"]},{"Key":"optimization. That","Fragments":["said,"]},{"Key":"it interesting","Fragments":["so"]},{"Key":"interesting so","Fragments":["I'm"]},{"Key":"2. Probably","Fragments":["going"]},{"Key":"Probably going","Fragments":["to"]},{"Key":"pass on","Fragments":["this."]},{"Key":"on this.","Fragments":["I'm"]},{"Key":"this. I'm","Fragments":["happy","not"]},{"Key":"performance without","Fragments":["this"]},{"Key":"without this","Fragments":["micro-optimization."]},{"Key":"That test","Fragments":["isn't"]},{"Key":"test isn't","Fragments":["in"]},{"Key":"the suit","Fragments":["Ive"]},{"Key":"suit Ive","Fragments":["got"]},{"Key":"Ive got","Fragments":["Im"]},{"Key":"got Im","Fragments":["afraid"]},{"Key":"Im afraid","Fragments":[":/"]},{"Key":"afraid :/","Fragments":["but"]},{"Key":":/ but","Fragments":["added"]},{"Key":"but added","Fragments":["a"]},{"Key":"check anyway","Fragments":[":)"]},{"Key":"constructor in","Fragments":["your"]},{"Key":"your class?","Fragments":["I"]},{"Key":"class? I","Fragments":["believe"]},{"Key":"believe .NET","Fragments":["generates"]},{"Key":".NET generates","Fragments":["the"]},{"Key":"constructor if","Fragments":["you","the"]},{"Key":"And why","Fragments":["do"]},{"Key":"why do","Fragments":["you","you"]},{"Key":"have Main","Fragments":["in"]},{"Key":"Main in","Fragments":["your"]},{"Key":"any instance","Fragments":["methods"]},{"Key":"instance methods","Fragments":["-","with"]},{"Key":"- a","Fragments":["method","good","struct"]},{"Key":"Year object.","Fragments":["Therefore"]},{"Key":"object. Therefore","Fragments":["I"]},{"Key":"static because","Fragments":["this"]},{"Key":"this tells","Fragments":["the"]},{"Key":"the people","Fragments":["that"]},{"Key":"people that","Fragments":["will"]},{"Key":"will use","Fragments":["your"]},{"Key":"has static","Fragments":["methods."]},{"Key":"are welcome.","Fragments":["My"]},{"Key":"welcome. My","Fragments":["CleanNumber"]},{"Key":"My CleanNumber","Fragments":["feels"]},{"Key":"CleanNumber feels","Fragments":["a"]},{"Key":"Hmm, great","Fragments":["question."]},{"Key":"great question.","Fragments":["I"]},{"Key":"question. I","Fragments":["guess","decided"]},{"Key":"```int fits","Fragments":["="]},{"Key":"fits =","Fragments":["value"]},{"Key":"if (fits","Fragments":["\u003e"]},{"Key":"(fits \u003e","Fragments":["0)"]},{"Key":" numerals.Append(string.Concat(Enumerable.Repeat(value2numeral.Value,","Fragments":["fits)));"]},{"Key":"it wins","Fragments":["anything"]},{"Key":"wins anything","Fragments":["in"]},{"Key":"Well basically","Fragments":["the"]},{"Key":"basically the","Fragments":["return","first"]},{"Key":"short for","Fragments":["an"]},{"Key":"if-else block","Fragments":["with"]},{"Key":"block with","Fragments":["embedded"]},{"Key":"with embedded","Fragments":["if-else"]},{"Key":"embedded if-else","Fragments":["blocks."]},{"Key":"if-else blocks.","Fragments":["You"]},{"Key":"blocks. You","Fragments":["can"]},{"Key":"can transform","Fragments":["from"]},{"Key":"transform from","Fragments":["one"]},{"Key":"other. When","Fragments":["I"]},{"Key":"experienced audience","Fragments":["in"]},{"Key":"audience in","Fragments":["mind,"]},{"Key":"mind, someone","Fragments":["that"]},{"Key":"someone that","Fragments":["used","give"]},{"Key":"reading statements","Fragments":["/"]},{"Key":"statements /","Fragments":["expressions"]},{"Key":"/ expressions","Fragments":["that"]},{"Key":"expressions that","Fragments":["utilize"]},{"Key":"that utilize","Fragments":["the"]},{"Key":"utilize the","Fragments":["ternary"]},{"Key":"can follow","Fragments":["jaguilar's"]},{"Key":"follow jaguilar's","Fragments":["feedback"]},{"Key":"jaguilar's feedback","Fragments":["and"]},{"Key":"I the","Fragments":["case","only","1"]},{"Key":"a complex","Fragments":["/"]},{"Key":"complex /","Fragments":["long"]},{"Key":"/ long","Fragments":["Boolean"]},{"Key":"long Boolean","Fragments":["expression"]},{"Key":"Boolean expression","Fragments":["/"]},{"Key":"expression /","Fragments":["condition"]},{"Key":"/ condition","Fragments":["I"]},{"Key":"condition I","Fragments":["would"]},{"Key":" Furthermore","Fragments":["I'm"]},{"Key":"Furthermore I'm","Fragments":["saving"]},{"Key":"I'm saving","Fragments":["a"]},{"Key":"and avoiding","Fragments":["many"]},{"Key":"avoiding many","Fragments":["levels"]},{"Key":"reference that","Fragments":["states"]},{"Key":"that states","Fragments":["that"]},{"Key":"let Boolean","Fragments":["expressions"]},{"Key":"Boolean expressions","Fragments":["stand"]},{"Key":"expressions stand","Fragments":["on"]},{"Key":"did try","Fragments":["with"]},{"Key":"try with","Fragments":["add"]},{"Key":"with add","Fragments":["days.."]},{"Key":"add days..","Fragments":["probably"]},{"Key":"days.. probably","Fragments":["didnt"]},{"Key":"probably didnt","Fragments":["work"]},{"Key":"didnt work","Fragments":["the"]},{"Key":"work the","Fragments":["same","tests"]},{"Key":"same reason","Fragments":["im"]},{"Key":"reason im","Fragments":["resetting"]},{"Key":"im resetting","Fragments":["the"]},{"Key":"resetting the","Fragments":["hours"]},{"Key":"the hours","Fragments":["and"]},{"Key":"hours and","Fragments":["minutes"]},{"Key":"and minutes","Fragments":["so"]},{"Key":"minutes so","Fragments":["yeah"]},{"Key":"so yeah","Fragments":["wouldve"]},{"Key":"yeah wouldve","Fragments":["worked"]},{"Key":"wouldve worked","Fragments":["fine"]},{"Key":"worked fine","Fragments":["with"]},{"Key":"end thinking","Fragments":["of"]},{"Key":"Yes the","Fragments":["console.writeline","tests"]},{"Key":"the console.writeline","Fragments":["is"]},{"Key":"console.writeline is","Fragments":["for"]},{"Key":"you gyphie","Fragments":["for"]},{"Key":"gyphie for","Fragments":["your"]},{"Key":"your comments.","Fragments":["I"]},{"Key":"iteration fixing","Fragments":["a"]},{"Key":"fixing a","Fragments":["few"]},{"Key":"few of","Fragments":["them","the"]},{"Key":"them i","Fragments":["think."]},{"Key":"i think.","Fragments":[":)"]},{"Key":"main task","Fragments":["here"]},{"Key":"task here","Fragments":["was"]},{"Key":"here was","Fragments":["basically","not"]},{"Key":"was basically","Fragments":["to"]},{"Key":"basically to","Fragments":["flip"]},{"Key":" Important","Fragments":["was"]},{"Key":"Important was","Fragments":["also"]},{"Key":"was also","Fragments":["add"]},{"Key":"add char","Fragments":["key"]},{"Key":"char key","Fragments":["in"]},{"Key":"in lower","Fragments":["case","case"]},{"Key":"case to","Fragments":["meet"]},{"Key":"to meet","Fragments":["the"]},{"Key":"meet the","Fragments":["test","requirement"]},{"Key":" @eric","Fragments":["Yeah,"]},{"Key":"@eric Yeah,","Fragments":["I"]},{"Key":"I remembered","Fragments":["about"]},{"Key":"remembered about","Fragments":["the"]},{"Key":"caching I","Fragments":["do"]},{"Key":"primes on","Fragments":["the"]},{"Key":"way home","Fragments":["yesterday."]},{"Key":"run 'i'","Fragments":["all"]},{"Key":"'i' all","Fragments":["the"]},{"Key":"way up","Fragments":["to"]},{"Key":"to max,","Fragments":["or"]},{"Key":"max, or","Fragments":["all"]},{"Key":"primes aren't","Fragments":["loaded"]},{"Key":"aren't loaded","Fragments":["into"]},{"Key":"loaded into","Fragments":["the"]},{"Key":"primes list.","Fragments":["So"]},{"Key":"list. So","Fragments":["instead,"]},{"Key":"So instead,","Fragments":["I'm"]},{"Key":"instead, I'm","Fragments":["checking"]},{"Key":"checking ```if","Fragments":["(i"]},{"Key":"```if (i","Fragments":["\u003c="]},{"Key":"(i \u003c=","Fragments":["Math.Sqrt(max))```"]},{"Key":"\u003c= Math.Sqrt(max))```","Fragments":["on"]},{"Key":"Math.Sqrt(max))``` on","Fragments":["line"]},{"Key":"line 55","Fragments":["before"]},{"Key":"55 before","Fragments":["I"]},{"Key":"is roughly","Fragments":["equivalent."]},{"Key":"roughly equivalent.","Fragments":["That"]},{"Key":"equivalent. That","Fragments":["shaved"]},{"Key":"That shaved","Fragments":["a"]},{"Key":"shaved a","Fragments":["few"]},{"Key":"few milliseconds","Fragments":["off"]},{"Key":"milliseconds off","Fragments":["the"]},{"Key":"the run","Fragments":["time.","time"]},{"Key":" @delia","Fragments":["I'm"]},{"Key":"@delia I'm","Fragments":["assuming"]},{"Key":"assuming they","Fragments":["will"]},{"Key":"will continue","Fragments":["to"]},{"Key":"bits as","Fragments":["the"]},{"Key":"specs state.","Fragments":["If"]},{"Key":"state. If","Fragments":["allergens"]},{"Key":"If allergens","Fragments":["are"]},{"Key":"allergens are","Fragments":["skipped,"]},{"Key":"are skipped,","Fragments":["I'll"]},{"Key":"skipped, I'll","Fragments":["insert"]},{"Key":"I'll insert","Fragments":["a"]},{"Key":"insert a","Fragments":["string.Empty"]},{"Key":"a string.Empty","Fragments":["in"]},{"Key":"string.Empty in","Fragments":["it's"]},{"Key":"it's place.","Fragments":["This"]},{"Key":"place. This","Fragments":["exercise"]},{"Key":"exercise seemed","Fragments":["designed","like"]},{"Key":"seemed designed","Fragments":["for"]},{"Key":"for bit","Fragments":["twiddling,"]},{"Key":"bit twiddling,","Fragments":["so"]},{"Key":"twiddling, so","Fragments":["that's"]},{"Key":"so that's","Fragments":["what","what","useful."]},{"Key":"used AsReadOnly()","Fragments":["just"]},{"Key":"AsReadOnly() just","Fragments":["so"]},{"Key":"user didn't","Fragments":["get"]},{"Key":"the urge","Fragments":["to"]},{"Key":"urge to","Fragments":["add"]},{"Key":"add things","Fragments":["to"]},{"Key":"my array","Fragments":["thinking"]},{"Key":"array thinking","Fragments":["they"]},{"Key":"thinking they","Fragments":["could"]},{"Key":"could update","Fragments":["the"]},{"Key":"database that","Fragments":["way."]},{"Key":"way. It's","Fragments":["kinda"]},{"Key":"It's kinda","Fragments":["a"]},{"Key":"kinda a","Fragments":["nod"]},{"Key":"a nod","Fragments":["to"]},{"Key":"nod to","Fragments":["a"]},{"Key":"previous exercise","Fragments":["we","making"]},{"Key":"exercise we","Fragments":["did."]},{"Key":"we did.","Fragments":["The"]},{"Key":"The Grade-School","Fragments":["one."]},{"Key":"Added \"protection\"","Fragments":["from"]},{"Key":"\"protection\" from","Fragments":["outside"]},{"Key":"from outside","Fragments":["code","your","your"]},{"Key":"code messing","Fragments":["with"]},{"Key":"my \"db\".","Fragments":["I"]},{"Key":"\"db\". I","Fragments":["think..."]},{"Key":"I think...","Fragments":[":)"]},{"Key":" @rosalind","Fragments":["I"]},{"Key":"@rosalind I","Fragments":["did"]},{"Key":"code clearly","Fragments":["show"]},{"Key":"clearly show","Fragments":["the"]},{"Key":"the ```Note","Fragments":["that"]},{"Key":"```Note that","Fragments":["the"]},{"Key":"the union","Fragments":["of"]},{"Key":"union of","Fragments":["`keep`"]},{"Key":"of `keep`","Fragments":["and"]},{"Key":"`keep` and","Fragments":["`discard`"]},{"Key":"and `discard`","Fragments":["is"]},{"Key":"`discard` is","Fragments":["all"]},{"Key":"the elements.```","Fragments":["requirement."]},{"Key":"intention of","Fragments":["the","this","doing"]},{"Key":"methods was","Fragments":["exactly"]},{"Key":"exactly to","Fragments":["make"]},{"Key":" About","Fragments":["the","the"]},{"Key":"responds, technically","Fragments":["there"]},{"Key":"technically there","Fragments":["is"]},{"Key":"no big","Fragments":["difference."]},{"Key":"difference. I","Fragments":["think"]},{"Key":"think its","Fragments":["about","a"]},{"Key":"its about","Fragments":["organization"]},{"Key":"about organization","Fragments":["and"]},{"Key":"organization and","Fragments":["readability."]},{"Key":"string comparison.","Fragments":["CompareOrdinal"]},{"Key":"comparison. CompareOrdinal","Fragments":["does"]},{"Key":"CompareOrdinal does","Fragments":["a"]},{"Key":"a numeric","Fragments":["comparison"]},{"Key":"numeric comparison","Fragments":["of"]},{"Key":"comparison of","Fragments":["the"]},{"Key":"characters (see","Fragments":["http://msdn.microsoft.com/en-us/library/af26w0wa%28v=vs.110%29.aspx)"]},{"Key":" Check","Fragments":["also","the","single","out","mine"]},{"Key":"Check also","Fragments":["How"]},{"Key":"also How","Fragments":["to:"]},{"Key":"How to:","Fragments":["Compare"]},{"Key":"to: Compare","Fragments":["Strings"]},{"Key":"Compare Strings","Fragments":["(C#"]},{"Key":"Strings (C#","Fragments":["Programming"]},{"Key":"(C# Programming","Fragments":["Guide):"]},{"Key":"the comments,","Fragments":["using"]},{"Key":"comments, using","Fragments":["an"]},{"Key":"enum in","Fragments":["calculations"]},{"Key":"in calculations","Fragments":["is"]},{"Key":"calculations is","Fragments":["indeed"]},{"Key":"is indeed","Fragments":["risky","faster,","possible"]},{"Key":"indeed risky","Fragments":["business."]},{"Key":"with @raymond,","Fragments":["to"]},{"Key":"@raymond, to","Fragments":["get"]},{"Key":"correct days","Fragments":["by"]},{"Key":"days by","Fragments":["computing"]},{"Key":"by computing","Fragments":["from"]},{"Key":"computing from","Fragments":["DayOfWeek"]},{"Key":"from DayOfWeek","Fragments":["took"]},{"Key":"DayOfWeek took","Fragments":["some"]},{"Key":"took some","Fragments":["time"]},{"Key":"get right,","Fragments":["so"]},{"Key":"right, so","Fragments":["maybe"]},{"Key":"maybe not","Fragments":["productive,"]},{"Key":"not productive,","Fragments":["but"]},{"Key":"productive, but","Fragments":["fun."]},{"Key":" @shany","Fragments":["Yeah,"]},{"Key":"@shany Yeah,","Fragments":["probably"]},{"Key":"probably what","Fragments":["you're"]},{"Key":"doing with","Fragments":["converting","no"]},{"Key":"with converting","Fragments":["it","the"]},{"Key":"and wrapping","Fragments":["a"]},{"Key":"wrapping a","Fragments":["string"]},{"Key":"string around","Fragments":["it"]},{"Key":"around it","Fragments":["would","to"]},{"Key":"faster. I'll","Fragments":["probably"]},{"Key":"probably update","Fragments":["my"]},{"Key":"Edit: oops,","Fragments":["I"]},{"Key":"oops, I","Fragments":["have"]},{"Key":"of strings,","Fragments":["not","without"]},{"Key":"strings, not","Fragments":["characters."]},{"Key":"Edit: SelectMany","Fragments":["didn't"]},{"Key":"SelectMany didn't","Fragments":["help,"]},{"Key":"didn't help,","Fragments":["I"]},{"Key":"help, I","Fragments":["think"]},{"Key":"too expensive.","Fragments":["String.Concat"]},{"Key":"expensive. String.Concat","Fragments":["speeded"]},{"Key":"String.Concat speeded","Fragments":["things"]},{"Key":"speeded things","Fragments":["up"]},{"Key":" Hugh","Fragments":["thanks"]},{"Key":"Hugh thanks","Fragments":["for"]},{"Key":"and comment,","Fragments":["very","so"]},{"Key":"comment, very","Fragments":["much"]},{"Key":"whole point","Fragments":["here","of","of","of"]},{"Key":"point here","Fragments":["is","IMV,",":)"]},{"Key":"is surely","Fragments":["not","that"]},{"Key":"surely not","Fragments":["to"]},{"Key":"could include","Fragments":["some"]},{"Key":"include some","Fragments":["testing"]},{"Key":"testing environment","Fragments":["in"]},{"Key":"environment in","Fragments":["your"]},{"Key":"a ReadLine","Fragments":["statement"]},{"Key":"ReadLine statement","Fragments":["for"]},{"Key":"to input","Fragments":["a"]},{"Key":"input a","Fragments":["year"]},{"Key":"year number","Fragments":[":)"]},{"Key":" Ternary","Fragments":["operators"]},{"Key":"operators (\"?:\")","Fragments":["are"]},{"Key":"(\"?:\") are","Fragments":["powerful"]},{"Key":"are powerful","Fragments":["but"]},{"Key":"powerful but","Fragments":["can"]},{"Key":"be difficult","Fragments":["to","to"]},{"Key":"expressions are","Fragments":["complicated."]},{"Key":"are complicated.","Fragments":["I'd"]},{"Key":"complicated. I'd","Fragments":["recommend"]},{"Key":"recommend against","Fragments":["using","making"]},{"Key":"static Score","Fragments":["method."]},{"Key":"Why would","Fragments":["you","another","the","I"]},{"Key":"add 500,000,000","Fragments":["seconds"]},{"Key":"500,000,000 seconds","Fragments":["twice"]},{"Key":"seconds twice","Fragments":["instead"]},{"Key":"twice instead","Fragments":["of"]},{"Key":"adding 1,000,000,000","Fragments":["seconds"]},{"Key":"1,000,000,000 seconds","Fragments":["once?","as"]},{"Key":"seconds once?","Fragments":["Also,"]},{"Key":"once? Also,","Fragments":["you"]},{"Key":"replace \u003ccode\u003e500000000\u003c/code\u003e","Fragments":["with"]},{"Key":"\u003ccode\u003e500000000\u003c/code\u003e with","Fragments":["\u003ccode\u003e5E8\u003c/code\u003e"]},{"Key":"with \u003ccode\u003e5E8\u003c/code\u003e","Fragments":["which"]},{"Key":"\u003ccode\u003e5E8\u003c/code\u003e which","Fragments":["would"]},{"Key":"can strip","Fragments":["the","out."]},{"Key":"strip the","Fragments":["time"]},{"Key":"time information","Fragments":["from"]},{"Key":"information from","Fragments":["a"]},{"Key":"date by","Fragments":["returning","schedule"]},{"Key":"returning \u003ccode\u003etime.Date\u003c/code\u003e","Fragments":["instead"]},{"Key":"\u003ccode\u003etime.Date\u003c/code\u003e instead","Fragments":["of"]},{"Key":"new DateTime","Fragments":["using","using","argument"]},{"Key":"DateTime using","Fragments":["the","the"]},{"Key":"year, month","Fragments":["and"]},{"Key":"and day","Fragments":["of"]},{"Key":"created time","Fragments":["object."]},{"Key":"a guaranteed","Fragments":["order."]},{"Key":"guaranteed order.","Fragments":["By"]},{"Key":"order. By","Fragments":["using"]},{"Key":"Tuples I","Fragments":["_know_"]},{"Key":"I _know_","Fragments":["that"]},{"Key":"_know_ that","Fragments":["the"]},{"Key":"order will","Fragments":["be","probably"]},{"Key":"I created.","Fragments":["If"]},{"Key":"created. If","Fragments":["you"]},{"Key":"be correct,","Fragments":["but"]},{"Key":"not _guaranteed_","Fragments":["to"]},{"Key":"_guaranteed_ to","Fragments":["be"]},{"Key":"Yeah, but","Fragments":["you"]},{"Key":"change 'j'","Fragments":["to"]},{"Key":"'j' to","Fragments":["start"]},{"Key":"at 'i*i'.","Fragments":[":)"]},{"Key":"Just wondering","Fragments":["why"]},{"Key":"use ```NucleotideCounts.ContainsKey```","Fragments":["in"]},{"Key":"```NucleotideCounts.ContainsKey``` in","Fragments":["constructor"]},{"Key":"in constructor","Fragments":["and","but","using"]},{"Key":"and ```VALIDCHARACTERS.Any(validchar","Fragments":["=\u003e"]},{"Key":"```VALIDCHARACTERS.Any(validchar =\u003e","Fragments":["validchar"]},{"Key":"=\u003e validchar","Fragments":["=="]},{"Key":"validchar ==","Fragments":["nucleotide)```"]},{"Key":"== nucleotide)```","Fragments":["in","instead."]},{"Key":"nucleotide)``` in","Fragments":["```Count```?"]},{"Key":"great! You","Fragments":["can"]},{"Key":"also represent","Fragments":["gigasecond"]},{"Key":"represent gigasecond","Fragments":["as"]},{"Key":"gigasecond as","Fragments":["```private"]},{"Key":"as ```private","Fragments":["int"]},{"Key":"```private int","Fragments":["gigaSecond"]},{"Key":"int gigaSecond","Fragments":["="]},{"Key":"gigaSecond =","Fragments":["1E9```"]},{"Key":"= 1E9```","Fragments":["to"]},{"Key":"1E9``` to","Fragments":["make"]},{"Key":" @olga","Fragments":["Your"]},{"Key":"@olga Your","Fragments":["solution"]},{"Key":"is elegant.","Fragments":["I"]},{"Key":"elegant. I","Fragments":["had"]},{"Key":"not encountered","Fragments":["the"]},{"Key":"encountered the","Fragments":["Tuple\u003c\u003e"]},{"Key":"the Tuple\u003c\u003e","Fragments":["class"]},{"Key":"Tuple\u003c\u003e class","Fragments":["before."]},{"Key":"class before.","Fragments":["I"]},{"Key":"query in","Fragments":["place"]},{"Key":"loop. Why","Fragments":["is"]},{"Key":"Tuple preferable","Fragments":["to"]},{"Key":"preferable to","Fragments":["a"]},{"Key":"complaint about","Fragments":["my"]},{"Key":"the position","Fragments":["of","shift"]},{"Key":"number (i.e.,","Fragments":["converting"]},{"Key":"(i.e., converting","Fragments":["to"]},{"Key":"and stepping","Fragments":["backwards"]},{"Key":"stepping backwards","Fragments":["through"]},{"Key":"backwards through","Fragments":["the"]},{"Key":"the number,","Fragments":["then"]},{"Key":"number, then","Fragments":["calling"]},{"Key":"then calling","Fragments":["the"]},{"Key":"the ReturnRoman","Fragments":["method"]},{"Key":"ReturnRoman method","Fragments":["based"]},{"Key":"on 1,","Fragments":["10,"]},{"Key":"1, 10,","Fragments":["100's"]},{"Key":"10, 100's","Fragments":["place)."]},{"Key":"100's place).","Fragments":["Also,"]},{"Key":"place). Also,","Fragments":["passing"]},{"Key":"Also, passing","Fragments":["in"]},{"Key":"the 'I,","Fragments":["V,"]},{"Key":"C' seems","Fragments":["too"]},{"Key":"different approach","Fragments":["in"]},{"Key":"approach in","Fragments":["a"]},{"Key":"calculation for","Fragments":["adding"]},{"Key":"for adding","Fragments":["the","another"]},{"Key":"right amount","Fragments":["of"]},{"Key":"of days.","Fragments":["Currently"]},{"Key":"days. Currently","Fragments":["you"]},{"Key":"Currently you","Fragments":["are"]},{"Key":"are figuring","Fragments":["out"]},{"Key":"current day","Fragments":["is","from","to"]},{"Key":"is before","Fragments":["or"]},{"Key":"before or","Fragments":["after","after"]},{"Key":"or after","Fragments":["the","a"]},{"Key":"required day","Fragments":["in"]},{"Key":"is unnecessary.","Fragments":["Simply","Boolean"]},{"Key":"unnecessary. Simply","Fragments":["subtract"]},{"Key":"Simply subtract","Fragments":["the"]},{"Key":"day from","Fragments":["the"]},{"Key":"the requested","Fragments":["day."]},{"Key":"requested day.","Fragments":["Add"]},{"Key":"day. Add","Fragments":["daysInWeek"]},{"Key":"Add daysInWeek","Fragments":["to"]},{"Key":"daysInWeek to","Fragments":["get","return"]},{"Key":"negative numbers.","Fragments":["Then"]},{"Key":"numbers. Then","Fragments":["%"]},{"Key":"Then %","Fragments":["daysInWeek"]},{"Key":"% daysInWeek","Fragments":["to"]},{"Key":"from 0","Fragments":["to"]},{"Key":"to 6.","Fragments":["This"]},{"Key":"6. This","Fragments":["will"]},{"Key":"of days","Fragments":["to","(positive","of"]},{"Key":"days to","Fragments":["add","given"]},{"Key":"next requested","Fragments":["day"]},{"Key":"requested day","Fragments":["of"]},{"Key":"end, after","Fragments":["you"]},{"Key":"DateTime that","Fragments":["is"]},{"Key":"specified week,","Fragments":["you"]},{"Key":"week, you","Fragments":["can"]},{"Key":"final result","Fragments":["by"]},{"Key":"result by","Fragments":["using"]},{"Key":"using firstDayOfRightWeek.AddDays(days)","Fragments":["(if"]},{"Key":"firstDayOfRightWeek.AddDays(days) (if","Fragments":["you"]},{"Key":"don't include","Fragments":["the"]},{"Key":"original amount","Fragments":["days),"]},{"Key":"amount days),","Fragments":["though"]},{"Key":"days), though","Fragments":["I"]},{"Key":"year, month,","Fragments":["and"]},{"Key":"month, and","Fragments":["day."]},{"Key":"replace \u003ccode\u003e1000000000\u003c/code\u003e","Fragments":["with"]},{"Key":"\u003ccode\u003e1000000000\u003c/code\u003e with","Fragments":["\u003ccode\u003e1E9\u003c/code\u003e."]},{"Key":"right that","Fragments":["Main"]},{"Key":"that Main","Fragments":["and"]},{"Key":"Main and","Fragments":["the"]},{"Key":"constructor are","Fragments":["not"]},{"Key":"constructor was","Fragments":["auto-generated"]},{"Key":"was auto-generated","Fragments":["from"]},{"Key":"auto-generated from","Fragments":["Monodevelop"]},{"Key":"from Monodevelop","Fragments":["and"]},{"Key":"Monodevelop and","Fragments":["I"]},{"Key":"simply didn't","Fragments":["remove"]},{"Key":"remove it.","Fragments":["Main"]},{"Key":"it. Main","Fragments":["was"]},{"Key":"Main was","Fragments":["because"]},{"Key":"because my","Fragments":["Monodevelop","brain"]},{"Key":"my Monodevelop","Fragments":["project"]},{"Key":"Monodevelop project","Fragments":["was"]},{"Key":"project was","Fragments":["incorrectly"]},{"Key":"was incorrectly","Fragments":["configured"]},{"Key":"incorrectly configured","Fragments":["as"]},{"Key":"configured as","Fragments":["a"]},{"Key":"a standalone","Fragments":["program,"]},{"Key":"standalone program,","Fragments":["and"]},{"Key":"tests wouldn't","Fragments":["run"]},{"Key":"wouldn't run","Fragments":["without","any"]},{"Key":"run without","Fragments":["it.","editing"]},{"Key":"class feature","Fragments":["of"]},{"Key":"feature of","Fragments":["C#"]},{"Key":"C# --","Fragments":["today"]},{"Key":"-- today","Fragments":["is"]},{"Key":"today is","Fragments":["my"]},{"Key":"day using","Fragments":["it."]},{"Key":"using it.","Fragments":["Thanks"]},{"Key":"it. Thanks","Fragments":["for"]},{"Key":"difference when","Fragments":["the"]},{"Key":"the maximum","Fragments":["time"]},{"Key":"maximum time","Fragments":["through"]},{"Key":"is 3.","Fragments":["I'm"]},{"Key":"just encouraging","Fragments":["you"]},{"Key":"encouraging you","Fragments":["to"]},{"Key":"of inner","Fragments":["loops."]},{"Key":"inner loops.","Fragments":["Sometimes"]},{"Key":"loops. Sometimes","Fragments":["it"]},{"Key":"Sometimes it","Fragments":["is"]},{"Key":"- after","Fragments":["all,"]},{"Key":"after all,","Fragments":["multiplication"]},{"Key":"all, multiplication","Fragments":["is"]},{"Key":"a shortcut","Fragments":["to"]},{"Key":"shortcut to","Fragments":["adding"]},{"Key":"to adding","Fragments":["over"]},{"Key":"adding over","Fragments":["and"]},{"Key":"Another question.","Fragments":["Why"]},{"Key":"question. Why","Fragments":["did"]},{"Key":"a SortedDictionary?","Fragments":["When"]},{"Key":"SortedDictionary? When","Fragments":["you"]},{"Key":"that, you","Fragments":["require","wouldn't"]},{"Key":"you require","Fragments":["each"]},{"Key":"require each","Fragments":["insert"]},{"Key":"each insert","Fragments":["(during"]},{"Key":"insert (during","Fragments":["the"]},{"Key":"(during the","Fragments":["initialization)"]},{"Key":"the initialization)","Fragments":["to"]},{"Key":"initialization) to","Fragments":["do"]},{"Key":"do comparisons","Fragments":["to"]},{"Key":"comparisons to","Fragments":["get","zero"]},{"Key":"right order","Fragments":["(which"]},{"Key":"order (which","Fragments":["is"]},{"Key":"exact opposite","Fragments":["order"]},{"Key":"are being","Fragments":["inserted"]},{"Key":"being inserted","Fragments":["in)"]},{"Key":"inserted in)","Fragments":["and"]},{"Key":"in) and","Fragments":["then"]},{"Key":"you Reverse()","Fragments":["it,"]},{"Key":"Reverse() it,","Fragments":["another"]},{"Key":"it, another","Fragments":["relatively"]},{"Key":"another relatively","Fragments":["expensive"]},{"Key":"relatively expensive","Fragments":["operation."]},{"Key":"operation. Why","Fragments":["not"]},{"Key":"Everything I","Fragments":["can"]},{"Key":"find on","Fragments":["the"]},{"Key":"the Internet","Fragments":["indicates"]},{"Key":"Internet indicates","Fragments":["that"]},{"Key":"the Reverse","Fragments":["call"]},{"Key":"Reverse call","Fragments":["makes"]},{"Key":"call makes","Fragments":["a"]},{"Key":"a copy","Fragments":["of"]},{"Key":"original as","Fragments":["an"]},{"Key":"array or","Fragments":["list","list","map)."]},{"Key":"or list","Fragments":["and","can"]},{"Key":"then returns","Fragments":["the"]},{"Key":"reverse order.","Fragments":["Generally"]},{"Key":"order. Generally","Fragments":["you"]},{"Key":"Generally you","Fragments":["would"]},{"Key":"avoid that,","Fragments":["though"]},{"Key":"that, though","Fragments":["in"]},{"Key":"simple tests","Fragments":["like"]},{"Key":"tests like","Fragments":["this"]},{"Key":"of unseen","Fragments":["work"]},{"Key":"unseen work","Fragments":["to"]},{"Key":"guarantee the","Fragments":["items","order"]},{"Key":"exact order","Fragments":["you"]},{"Key":"you originally","Fragments":["put"]},{"Key":"originally put","Fragments":["them"]},{"Key":"Okay. Maybe","Fragments":["the"]},{"Key":"the multiplication","Fragments":["is"]},{"Key":"extra times","Fragments":["-"]},{"Key":"are generating.","Fragments":["I"]},{"Key":"generating. I","Fragments":["can"]},{"Key":"can envision","Fragments":["that"]},{"Key":"envision that","Fragments":["it"]},{"Key":"would matter","Fragments":["at"]},{"Key":"matter at","Fragments":["some"]},{"Key":"some point","Fragments":["-","in"]},{"Key":"of space","Fragments":["where"]},{"Key":"space where","Fragments":["64-bit"]},{"Key":"where 64-bit","Fragments":["numbers"]},{"Key":"64-bit numbers","Fragments":["were"]},{"Key":"numbers were","Fragments":["the"]},{"Key":"were the","Fragments":["norm."]},{"Key":"simple approach","Fragments":["using"]},{"Key":"approach using","Fragments":["if-else","bit","a"]},{"Key":"using if-else","Fragments":["construct."]},{"Key":"could possibly","Fragments":["be"]},{"Key":"concise by","Fragments":["reordering"]},{"Key":"by reordering","Fragments":["the"]},{"Key":"test conditions,","Fragments":["but"]},{"Key":"conditions, but","Fragments":["it's"]},{"Key":"good. AreaCode","Fragments":["could"]},{"Key":"AreaCode could","Fragments":["be"]},{"Key":"a derived","Fragments":["property","class"]},{"Key":"derived property","Fragments":["rather"]},{"Key":"Well, your","Fragments":["current"]},{"Key":"KeyNotFoundException if","Fragments":["an"]},{"Key":"given. If","Fragments":["that"]},{"Key":"enough, fine.","Fragments":["Personally"]},{"Key":"fine. Personally","Fragments":["I'd"]},{"Key":"ArgumentException with","Fragments":["a"]},{"Key":"says something","Fragments":["like"]},{"Key":"like \"invalid","Fragments":["nulceotide:"]},{"Key":"\"invalid nulceotide:","Fragments":["X\""]},{"Key":"nulceotide: X\"","Fragments":["or"]},{"Key":"X\" or","Fragments":["something"]},{"Key":"Sure, it","Fragments":["is"]},{"Key":"simple test","Fragments":["case,"]},{"Key":"test case,","Fragments":["but"]},{"Key":"but learning","Fragments":["to"]},{"Key":"learning to","Fragments":["check"]},{"Key":"of becoming","Fragments":["a"]},{"Key":"becoming a","Fragments":["good"]},{"Key":"good programmer.","Fragments":["Since"]},{"Key":"programmer. Since","Fragments":["I"]},{"Key":"have enough","Fragments":["information"]},{"Key":"what any","Fragments":["particular"]},{"Key":"any particular","Fragments":["person's"]},{"Key":"particular person's","Fragments":["ability"]},{"Key":"person's ability","Fragments":["is,"]},{"Key":"ability is,","Fragments":["I'll"]},{"Key":"is, I'll","Fragments":["just"]},{"Key":"I'll just","Fragments":["keep"]},{"Key":"keep flagging","Fragments":["it"]},{"Key":"flagging it","Fragments":["when"]},{"Key":"(and continue","Fragments":["to"]},{"Key":"to internalize","Fragments":["it"]},{"Key":"internalize it","Fragments":["for"]},{"Key":"for myself).","Fragments":[":)"]},{"Key":"nice approach","Fragments":["using"]},{"Key":"bit operators.","Fragments":["But"]},{"Key":"operators. But","Fragments":["during"]},{"Key":"But during","Fragments":["debugging"]},{"Key":"during debugging","Fragments":["wouldn't"]},{"Key":"debugging wouldn't","Fragments":["you"]},{"Key":"to manually","Fragments":["sit","track"]},{"Key":"manually sit","Fragments":["with"]},{"Key":"sit with","Fragments":["book"]},{"Key":"with book","Fragments":["and"]},{"Key":"book and","Fragments":["paper,"]},{"Key":"and paper,","Fragments":["rather"]},{"Key":"paper, rather","Fragments":["than"]},{"Key":"than relying","Fragments":["on"]},{"Key":" @bud","Fragments":["I"]},{"Key":"@bud I","Fragments":["went"]},{"Key":"and implemented","Fragments":["that","constants"]},{"Key":"implemented that","Fragments":["change,"]},{"Key":"that change,","Fragments":["but"]},{"Key":"change, but","Fragments":["on"]},{"Key":"call of","Fragments":["10,000"]},{"Key":"of 10,000","Fragments":["there"]},{"Key":"10,000 there","Fragments":["is"]},{"Key":"no appreciable","Fragments":["difference"]},{"Key":"appreciable difference","Fragments":["in"]},{"Key":"in runtime","Fragments":["with"]},{"Key":"runtime with","Fragments":["starting"]},{"Key":"with starting","Fragments":["j=i*i"]},{"Key":"j=i*i vs","Fragments":["j=i*2."]},{"Key":"vs j=i*2.","Fragments":["they"]},{"Key":"j=i*2. they","Fragments":["both"]},{"Key":"they both","Fragments":["average"]},{"Key":"both average","Fragments":["~260"]},{"Key":"average ~260","Fragments":["millis"]},{"Key":"job. Most","Fragments":["people"]},{"Key":"Pow() method,","Fragments":["but"]},{"Key":"you avoided","Fragments":["that"]},{"Key":"avoided that","Fragments":["nicely."]},{"Key":" Reverse()","Fragments":["can"]},{"Key":"Reverse() can","Fragments":["be"]},{"Key":"operation. You","Fragments":["can"]},{"Key":"characters by","Fragments":["changing","removing"]},{"Key":"to \u003ccode\u003eif","Fragments":["(!octal.All(c"]},{"Key":"\u003ccode\u003eif (!octal.All(c","Fragments":["=\u003e"]},{"Key":"(!octal.All(c =\u003e","Fragments":["validChars.Contains(c)))\u003c/code\u003e."]},{"Key":"Reversing an","Fragments":["array"]},{"Key":"list can","Fragments":["be"]},{"Key":"be expensive.","Fragments":["Can"]},{"Key":"expensive. Can","Fragments":["you"]},{"Key":"elegant algorithm","Fragments":["that"]},{"Key":"the creativity","Fragments":["of"]},{"Key":"creativity of","Fragments":["using"]},{"Key":"test as","Fragments":["part"]},{"Key":"test, though","Fragments":["it"]},{"Key":"is overkill","Fragments":["to","using"]},{"Key":"get _all_","Fragments":["the"]},{"Key":"_all_ the","Fragments":["prime"]},{"Key":"factors. :)","Fragments":["Though"]},{"Key":":) Though","Fragments":["this"]},{"Key":"Though this","Fragments":["would"]},{"Key":"be quite","Fragments":["extendable.","elegant.","different."]},{"Key":" Since,","Fragments":["for"]},{"Key":"Since, for","Fragments":["this"]},{"Key":"need each","Fragments":["prime"]},{"Key":"each prime","Fragments":["factor","potentially"]},{"Key":"prime factor","Fragments":["once,","and"]},{"Key":"factor once,","Fragments":["you"]},{"Key":"once, you","Fragments":["could"]},{"Key":"eliminate duplicates","Fragments":["-"]},{"Key":"duplicates -","Fragments":["use"]},{"Key":"- use","Fragments":["some"]},{"Key":"of Set","Fragments":["or"]},{"Key":"Set or","Fragments":["check"]},{"Key":"or check","Fragments":["if"]},{"Key":"if prime","Fragments":["is"]},{"Key":"prime is","Fragments":["already"]},{"Key":"list before","Fragments":["adding"]},{"Key":"end, instead","Fragments":["of"]},{"Key":"if primeFactors","Fragments":["has"]},{"Key":"primeFactors has","Fragments":["3,"]},{"Key":"has 3,","Fragments":["5,"]},{"Key":"5, and","Fragments":["7","so"]},{"Key":"and 7","Fragments":["again,"]},{"Key":"7 again,","Fragments":["why"]},{"Key":"again, why","Fragments":["not"]},{"Key":"the returnString","Fragments":["is"]},{"Key":"returnString is","Fragments":["still"]},{"Key":" Haha.","Fragments":["I'm"]},{"Key":"Haha. I'm","Fragments":["not"]},{"Key":"provide references","Fragments":["for"]},{"Key":"references for","Fragments":["CS101"]},{"Key":"for CS101","Fragments":["best"]},{"Key":"CS101 best","Fragments":["practices."]},{"Key":"best practices.","Fragments":["You"]},{"Key":"practices. You","Fragments":["are"]},{"Key":"adding unnecessary","Fragments":["line"]},{"Key":"unnecessary line","Fragments":["noise"]},{"Key":"line noise","Fragments":["by"]},{"Key":"noise by","Fragments":["writing"]},{"Key":"the trues","Fragments":["and"]},{"Key":"trues and","Fragments":["falses."]},{"Key":"and falses.","Fragments":["Plus,"]},{"Key":"falses. Plus,","Fragments":["doing"]},{"Key":"Plus, doing","Fragments":["this"]},{"Key":"clear sign","Fragments":["of"]},{"Key":"sign of","Fragments":["a"]},{"Key":"newbie (which","Fragments":["is"]},{"Key":"fine --","Fragments":["there's"]},{"Key":"-- there's","Fragments":["nothing"]},{"Key":"with being","Fragments":["a","clever"]},{"Key":"newbie programmer,","Fragments":["--but"]},{"Key":"programmer, --but","Fragments":["it's"]},{"Key":"--but it's","Fragments":["not"]},{"Key":"to project","Fragments":["e.g."]},{"Key":"project e.g.","Fragments":["in"]},{"Key":"e.g. in","Fragments":["a"]},{"Key":"a job","Fragments":["interview)."]},{"Key":"written more","Fragments":["concisely."]},{"Key":"not meant","Fragments":["to"]},{"Key":"meant to","Fragments":["repeatedly","describe"]},{"Key":"to repeatedly","Fragments":["add"]},{"Key":"repeatedly add","Fragments":["numbers"]},{"Key":"add numbers","Fragments":["that"]},{"Key":"are multiples","Fragments":["of"]},{"Key":"of putting","Fragments":["things"]},{"Key":"putting things","Fragments":["on"]},{"Key":"things on","Fragments":["separate"]},{"Key":"on separate","Fragments":["lines"]},{"Key":"separate lines","Fragments":["can"]},{"Key":"lines can","Fragments":["be"]},{"Key":"useful for","Fragments":["readability,"]},{"Key":"but taking","Fragments":["it"]},{"Key":"taking it","Fragments":["to"]},{"Key":"this extreme","Fragments":["_reduces_"]},{"Key":"extreme _reduces_","Fragments":["readability"]},{"Key":"_reduces_ readability","Fragments":["considerably."]},{"Key":"readability considerably.","Fragments":["When"]},{"Key":"considerably. When","Fragments":["repeating"]},{"Key":"When repeating","Fragments":["the"]},{"Key":"same kind","Fragments":["of"]},{"Key":"over (the","Fragments":["initialization"]},{"Key":"(the initialization","Fragments":["of"]},{"Key":"initialization of","Fragments":["values)"]},{"Key":"of values)","Fragments":["use"]},{"Key":"values) use","Fragments":["less"]},{"Key":"use less","Fragments":["lines."]},{"Key":"less lines.","Fragments":["Use"]},{"Key":"lines. Use","Fragments":["more"]},{"Key":"Use more","Fragments":["lines"]},{"Key":"lines when","Fragments":["things"]},{"Key":"when things","Fragments":["are"]},{"Key":"are different","Fragments":["each","than","opinions"]},{"Key":"invalid input?","Fragments":["What"]},{"Key":"input? What","Fragments":["should"]},{"Key":"What should","Fragments":["you","happen","it"]},{"Key":"should you","Fragments":["do"]},{"Key":"is contains","Fragments":["non-English"]},{"Key":"contains non-English","Fragments":["letters"]},{"Key":"non-English letters","Fragments":["or"]},{"Key":"letters or","Fragments":["punctuation.","not)"]},{"Key":"or punctuation.","Fragments":["The"]},{"Key":"punctuation. The","Fragments":["test"]},{"Key":"doesn't specify,","Fragments":["but"]},{"Key":"but good","Fragments":["programming"]},{"Key":"good programming","Fragments":["requires"]},{"Key":"programming requires","Fragments":["thinking"]},{"Key":"requires thinking","Fragments":["about"]},{"Key":"You added","Fragments":["a"]},{"Key":"null string,","Fragments":["but"]},{"Key":"seems odd.","Fragments":["Why"]},{"Key":"odd. Why","Fragments":["not"]},{"Key":"ToUpper after","Fragments":["checking"]},{"Key":"after checking","Fragments":["for"]},{"Key":"for NullOrWhiteSpace","Fragments":["like"]},{"Key":"NullOrWhiteSpace like","Fragments":["this."]},{"Key":"return String.IsNullOrWhiteSpace(input)","Fragments":["?"]},{"Key":"String.IsNullOrWhiteSpace(input) ?","Fragments":["0"]},{"Key":": input.ToUpper().Sum(letter","Fragments":["=\u003e"]},{"Key":"input.ToUpper().Sum(letter =\u003e","Fragments":["values[letter]);"]},{"Key":"My 2nd","Fragments":["iteration"]},{"Key":"uses your","Fragments":["Regex,"]},{"Key":"your Regex,","Fragments":["modified"]},{"Key":"Regex, modified","Fragments":["to"]},{"Key":"modified to","Fragments":["accept","use"]},{"Key":"to accept","Fragments":["apostrophes."]},{"Key":"if GenerateRandomKey","Fragments":["didn't"]},{"Key":"GenerateRandomKey didn't","Fragments":["set"]},{"Key":"didn't set","Fragments":["Key"]},{"Key":"set Key","Fragments":["itself,"]},{"Key":"Key itself,","Fragments":["but"]},{"Key":"instead returned","Fragments":["the"]},{"Key":"the generated","Fragments":["key"]},{"Key":"key string.","Fragments":["Then"]},{"Key":"string. Then","Fragments":["the","you"]},{"Key":"Then the","Fragments":["constructor"]},{"Key":"constructor that","Fragments":["calls"]},{"Key":"calls it","Fragments":["could"]},{"Key":"do \u003ccode\u003eKey","Fragments":["="]},{"Key":"\u003ccode\u003eKey =","Fragments":["GenerateRandomKey();\u003c/code\u003e."]},{"Key":"= GenerateRandomKey();\u003c/code\u003e.","Fragments":["That"]},{"Key":"GenerateRandomKey();\u003c/code\u003e. That","Fragments":["way"]},{"Key":"way only","Fragments":["the"]},{"Key":"are setting","Fragments":["Key."]},{"Key":"text to","Fragments":["encode"]},{"Key":"to encode","Fragments":["or","alpha","numerics."]},{"Key":"encode or","Fragments":["decode"]},{"Key":"or decode","Fragments":["is"]},{"Key":"decode is","Fragments":["longer"]},{"Key":"key. This","Fragments":["is"]},{"Key":"common scenario","Fragments":["in"]},{"Key":"In Encode()","Fragments":["and"]},{"Key":"Encode() and","Fragments":["Decode(),"]},{"Key":"and Decode(),","Fragments":["you"]},{"Key":"Decode(), you","Fragments":["know"]},{"Key":"exact length","Fragments":["of"]},{"Key":"length of","Fragments":["the","the","3"]},{"Key":"the output.","Fragments":["Why"]},{"Key":"output. Why","Fragments":["not"]},{"Key":"and insert","Fragments":["the"]},{"Key":"insert the","Fragments":["values"]},{"Key":"values at","Fragments":["the"]},{"Key":"correct locations","Fragments":["(you"]},{"Key":"locations (you","Fragments":["already"]},{"Key":"(you already","Fragments":["have"]},{"Key":"index variable","Fragments":["that"]},{"Key":"variable that","Fragments":["matches).","is"]},{"Key":"that matches).","Fragments":["Your"]},{"Key":"matches). Your","Fragments":["current"]},{"Key":"Your current","Fragments":["code"]},{"Key":"code generates","Fragments":["a"]},{"Key":"generates a","Fragments":["list"]},{"Key":"then converts","Fragments":["that"]},{"Key":"converts that","Fragments":["to"]},{"Key":"least double","Fragments":["the"]},{"Key":"the space.","Fragments":["This"]},{"Key":"space. This","Fragments":["is"]},{"Key":"also true","Fragments":["for"]},{"Key":"for GetRandomKey","Fragments":["which"]},{"Key":"GetRandomKey which","Fragments":["you"]},{"Key":"be 100","Fragments":["characters"]},{"Key":"100 characters","Fragments":["long."]},{"Key":"create local","Fragments":["variables"]},{"Key":"get set","Fragments":["and"]},{"Key":"then returned?","Fragments":["It"]},{"Key":"returned? It","Fragments":["doesn't"]},{"Key":"add anything","Fragments":["to"]},{"Key":"to readability","Fragments":["(at"]},{"Key":"readability (at","Fragments":["least"]},{"Key":"consider changing","Fragments":["GetRandomLetter"]},{"Key":"changing GetRandomLetter","Fragments":["to"]},{"Key":"GetRandomLetter to","Fragments":["the"]},{"Key":"static char","Fragments":["GetRandomLetter()"]},{"Key":"return (char)","Fragments":["random.Next((int)"]},{"Key":"(char) random.Next((int)","Fragments":["'a',"]},{"Key":"random.Next((int) 'a',","Fragments":["(int)"]},{"Key":"'a', (int)","Fragments":["'z'"]},{"Key":"(int) 'z'","Fragments":["+"]},{"Key":"'z' +","Fragments":["1);"]},{"Key":"more or","Fragments":["less","less"]},{"Key":"Regex frequently,","Fragments":["so"]},{"Key":"frequently, so","Fragments":["I"]},{"Key":"wasn't aware","Fragments":["I"]},{"Key":"aware I","Fragments":["didn't"]},{"Key":"the object.","Fragments":["I","In"]},{"Key":"object. I","Fragments":["agree"]},{"Key":"you, I'll","Fragments":["make"]},{"Key":"Constants renamed","Fragments":["according"]},{"Key":"renamed according","Fragments":["to"]},{"Key":"to suggestion","Fragments":["by","by"]},{"Key":"suggestion by","Fragments":["@landen","@axel"]},{"Key":"On purely","Fragments":["the"]},{"Key":"purely the","Fragments":["performance"]},{"Key":"performance front,","Fragments":["we"]},{"Key":"front, we","Fragments":["can"]},{"Key":"can try","Fragments":["to","working"]},{"Key":"compare apples","Fragments":["to"]},{"Key":"apples to","Fragments":["apples:"]},{"Key":"An optimized","Fragments":["version"]},{"Key":"return yr","Fragments":["%"]},{"Key":"yr %","Fragments":["400"]},{"Key":"|| ((yr","Fragments":["%"]},{"Key":"((yr %","Fragments":["4"]},{"Key":"\u0026\u0026 (yr","Fragments":["%"]},{"Key":"(yr %","Fragments":["100"]},{"Key":" vs","Fragments":["the"]},{"Key":"vs the","Fragments":["three"]},{"Key":"three variable","Fragments":["approach,"]},{"Key":"variable approach,","Fragments":["using"]},{"Key":"approach, using","Fragments":["the"]},{"Key":"same optimized","Fragments":["boolean"]},{"Key":"optimized boolean","Fragments":["expression:"]},{"Key":"var isDivisibleByFourHundred","Fragments":["="]},{"Key":"isDivisibleByFourHundred =","Fragments":["(year"]},{"Key":"= (year","Fragments":["%","%","%"]},{"Key":"var isNotDivisibleByOneHundred","Fragments":["="]},{"Key":"isNotDivisibleByOneHundred =","Fragments":["(year"]},{"Key":"return isDivisibleByFourHundred","Fragments":["||"]},{"Key":"isDivisibleByFourHundred ||","Fragments":["(isDivisibleByFour"]},{"Key":"|| (isDivisibleByFour","Fragments":["\u0026\u0026"]},{"Key":"(isDivisibleByFour \u0026\u0026","Fragments":["isNotDivisibleByOneHundred);"]},{"Key":"how how","Fragments":["IsLeap"]},{"Key":"how IsLeap","Fragments":["and"]},{"Key":"and IsLeap2","Fragments":["performed","methods:"]},{"Key":"IsLeap2 performed","Fragments":["against"]},{"Key":"performed against","Fragments":["each"]},{"Key":"against each","Fragments":["other"]},{"Key":"other using","Fragments":["diagnostic"]},{"Key":"using diagnostic","Fragments":["ticks"]},{"Key":"diagnostic ticks","Fragments":["after"]},{"Key":"ticks after","Fragments":["10"]},{"Key":"after 10","Fragments":["million"]},{"Key":"10 million","Fragments":["iterations.","times"]},{"Key":"million iterations.","Fragments":["Results"]},{"Key":"iterations. Results","Fragments":["were"]},{"Key":"Results were","Fragments":["that"]},{"Key":"were that","Fragments":["performance"]},{"Key":"that performance","Fragments":["is"]},{"Key":"is noticeably","Fragments":["slower"]},{"Key":"noticeably slower","Fragments":["in"]},{"Key":"slower in","Fragments":["IsLeap2."]},{"Key":"test protocol,","Fragments":["designed"]},{"Key":"protocol, designed","Fragments":["to"]},{"Key":"designed to","Fragments":["exercise"]},{"Key":"to exercise","Fragments":["all"]},{"Key":"exercise all","Fragments":["three"]},{"Key":"three paths","Fragments":["in"]},{"Key":"paths in","Fragments":["the"]},{"Key":"var sw","Fragments":["="]},{"Key":"sw =","Fragments":["new","Stopwatch.StartNew();"]},{"Key":"\u003c 10000000;","Fragments":["i++)","i++)"]},{"Key":"var run1","Fragments":["="]},{"Key":"run1 =","Fragments":["sw.ElapsedTicks;"]},{"Key":"var run2","Fragments":["="]},{"Key":"run2 =","Fragments":["sw.ElapsedTicks;"]},{"Key":" Console.WriteLine(String.Format(\"Run","Fragments":["1:","2:"]},{"Key":"Console.WriteLine(String.Format(\"Run 1:","Fragments":["{0}\","]},{"Key":"1: {0}\",","Fragments":["run1));"]},{"Key":"Console.WriteLine(String.Format(\"Run 2:","Fragments":["{0}\","]},{"Key":"2: {0}\",","Fragments":["run2));"]},{"Key":" Run","Fragments":["in","checks"]},{"Key":"Run in","Fragments":["Debug"]},{"Key":"in Debug","Fragments":["mode,","foreach","or"]},{"Key":"Debug mode,","Fragments":["IsLeap"]},{"Key":"mode, IsLeap","Fragments":["had"]},{"Key":"IsLeap had","Fragments":["17-22%"]},{"Key":"had 17-22%","Fragments":["faster"]},{"Key":"17-22% faster","Fragments":["performance"]},{"Key":"faster performance","Fragments":["over"]},{"Key":"performance over","Fragments":["IsLeap2."]},{"Key":"over IsLeap2.","Fragments":["In"]},{"Key":"IsLeap2. In","Fragments":["Release"]},{"Key":"In Release","Fragments":["mode,"]},{"Key":"Release mode,","Fragments":["roughly"]},{"Key":"mode, roughly","Fragments":["IsLeap"]},{"Key":"roughly IsLeap","Fragments":["performed"]},{"Key":"IsLeap performed","Fragments":["60%"]},{"Key":"performed 60%","Fragments":["faster"]},{"Key":"60% faster","Fragments":["than"]},{"Key":"requirement of","Fragments":["allowing","\"Write"]},{"Key":"of allowing","Fragments":["double/triple"]},{"Key":"allowing double/triple","Fragments":["letter"]},{"Key":"double/triple letter","Fragments":["and"]},{"Key":"and double/triple","Fragments":["word"]},{"Key":"double/triple word","Fragments":["scoring."]},{"Key":"word scoring.","Fragments":["I"]},{"Key":"scoring. I","Fragments":["use"]},{"Key":"pretty lazy","Fragments":["regex"]},{"Key":"lazy regex","Fragments":["parsing"]},{"Key":"regex parsing","Fragments":["of"]},{"Key":"parsing of","Fragments":["each"]},{"Key":"letter +","Fragments":["any"]},{"Key":"+ any","Fragments":["scoring"]},{"Key":"any scoring","Fragments":["info"]},{"Key":"scoring info","Fragments":["surrounded"]},{"Key":"info surrounded","Fragments":["by"]},{"Key":"a 'try'","Fragments":["and"]},{"Key":"'try' and","Fragments":["then"]},{"Key":"just throw","Fragments":["a"]},{"Key":"custom ScrabbleException","Fragments":["when"]},{"Key":"ScrabbleException when","Fragments":["anything"]},{"Key":"when anything","Fragments":["goes"]},{"Key":"anything goes","Fragments":["wrong"]},{"Key":"goes wrong","Fragments":["when"]},{"Key":"wrong when","Fragments":["trying"]},{"Key":"to parse,","Fragments":["and","which"]},{"Key":"parse, and","Fragments":["reiterate"]},{"Key":"and reiterate","Fragments":["to"]},{"Key":"reiterate to","Fragments":["the"]},{"Key":"syntax rules","Fragments":["for"]},{"Key":"for scoring","Fragments":["are."]},{"Key":"additional tests","Fragments":["are"]},{"Key":"are commented","Fragments":["out"]},{"Key":"out at","Fragments":["the"]},{"Key":"Changed gigasecond","Fragments":["constant"]},{"Key":"gigasecond constant","Fragments":["to"]},{"Key":"constant to","Fragments":["double"]},{"Key":"to double","Fragments":["and"]},{"Key":"double and","Fragments":["1E9,"]},{"Key":"and 1E9,","Fragments":["accordingly"]},{"Key":"1E9, accordingly","Fragments":["used"]},{"Key":"accordingly used","Fragments":["AddSeconds-Method"]},{"Key":"used AddSeconds-Method","Fragments":["instead"]},{"Key":"AddSeconds-Method instead","Fragments":["of"]},{"Key":"of Add","Fragments":["on","and"]},{"Key":"Add on","Fragments":["suggestions"]},{"Key":"on suggestions","Fragments":["by"]},{"Key":"suggestions by","Fragments":["@berta."]},{"Key":" @gust,","Fragments":["I'm"]},{"Key":"@gust, I'm","Fragments":["sure"]},{"Key":"just semantics,","Fragments":["but"]},{"Key":"semantics, but","Fragments":["I"]},{"Key":"read distinct","Fragments":["like"]},{"Key":"distinct like","Fragments":["a"]},{"Key":"a group","Fragments":["by,"]},{"Key":"group by,","Fragments":["but"]},{"Key":"by, but","Fragments":["to"]},{"Key":"me, unique","Fragments":["would"]},{"Key":"unique would","Fragments":["mean"]},{"Key":"mean only","Fragments":["sides"]},{"Key":"only sides","Fragments":["that"]},{"Key":"sides that","Fragments":["are"]},{"Key":"than other","Fragments":["sides."]},{"Key":"other sides.","Fragments":["Based"]},{"Key":"sides. Based","Fragments":["on"]},{"Key":"my semantics,","Fragments":["an"]},{"Key":"semantics, an","Fragments":["equilateral"]},{"Key":"triangle would","Fragments":["have"]},{"Key":"have 1","Fragments":["distinct","return.","while"]},{"Key":"1 distinct","Fragments":["side"]},{"Key":"distinct side","Fragments":["and"]},{"Key":"side and","Fragments":["0"]},{"Key":"0 unique","Fragments":["sides."]},{"Key":"unique sides.","Fragments":["But,"]},{"Key":"sides. But,","Fragments":["that"]},{"Key":"But, that","Fragments":["is"]},{"Key":"just how","Fragments":["I"]},{"Key":"read it,","Fragments":["I"]},{"Key":"be wrong","Fragments":[":smile:"]},{"Key":"seems readable","Fragments":["to"]},{"Key":"me, I'm","Fragments":["not"]},{"Key":"not overkill","Fragments":["to"]},{"Key":"a Func","Fragments":["for"]},{"Key":"Func for","Fragments":["this."]},{"Key":"this. I'd","Fragments":["appreciate"]},{"Key":"appreciate someone","Fragments":["with"]},{"Key":"more experience","Fragments":["in"]},{"Key":"C# to","Fragments":["comment"]},{"Key":"likely failing","Fragments":["condition"]},{"Key":"failing condition","Fragments":["to"]},{"Key":"first place","Fragments":["for"]},{"Key":"pretty long,","Fragments":["and"]},{"Key":"nesting makes","Fragments":["it"]},{"Key":"read. Consider","Fragments":["extracting"]},{"Key":"Consider extracting","Fragments":["common"]},{"Key":"extracting common","Fragments":["functionality"]},{"Key":"common functionality","Fragments":["into"]},{"Key":"functionality into","Fragments":["another"]},{"Key":"delegate constructor","Fragments":["for"]},{"Key":"constructor for","Fragments":["the"]},{"Key":"the zero-arg","Fragments":["constructor."]},{"Key":"zero-arg constructor.","Fragments":["_ints"]},{"Key":"constructor. _ints","Fragments":["is"]},{"Key":"_ints is","Fragments":["not"]},{"Key":"name --","Fragments":["you"]},{"Key":"-- you","Fragments":["should"]},{"Key":"should name","Fragments":["the"]},{"Key":"it does,","Fragments":["not"]},{"Key":"does, not","Fragments":["its"]},{"Key":"not its","Fragments":["type."]},{"Key":"its type.","Fragments":["You"]},{"Key":"type. You","Fragments":["should"]},{"Key":"call sum","Fragments":["with"]},{"Key":"sum with","Fragments":["no"]},{"Key":"no arguments","Fragments":["and"]},{"Key":"same result,","Fragments":["but"]},{"Key":"result, but","Fragments":["maybe"]},{"Key":"maybe I'm","Fragments":["mistaken."]},{"Key":"still remove","Fragments":["duplicates"]},{"Key":"duplicates of","Fragments":["lots"]},{"Key":"of lots","Fragments":["of"]},{"Key":"computations. For","Fragments":["instance"]},{"Key":"For instance","Fragments":["you"]},{"Key":"instance you","Fragments":["divide"]},{"Key":"you divide","Fragments":["Seconds"]},{"Key":"divide Seconds","Fragments":["by"]},{"Key":"Seconds by","Fragments":["another"]},{"Key":"in eight","Fragments":["functions."]},{"Key":"eight functions.","Fragments":["In"]},{"Key":"functions. In","Fragments":["those"]},{"Key":"same eight","Fragments":["functions"]},{"Key":"you round","Fragments":["the"]},{"Key":"round the","Fragments":["result"]},{"Key":"to 2","Fragments":["decimal","classes","loop"]},{"Key":"2 decimal","Fragments":["places."]},{"Key":"decimal places.","Fragments":["Encapsulate"]},{"Key":"places. Encapsulate","Fragments":["that"]},{"Key":"Encapsulate that","Fragments":["behavior"]},{"Key":"a helper","Fragments":["function.","function."]},{"Key":" Hacia","Fragments":["falta"]},{"Key":"Hacia falta","Fragments":["esta"]},{"Key":"falta esta","Fragments":["función"]},{"Key":"esta función","Fragments":["ya"]},{"Key":"función ya","Fragments":["que"]},{"Key":"ya que","Fragments":["el"]},{"Key":"que el","Fragments":["year"]},{"Key":"el year","Fragments":["no"]},{"Key":"year no","Fragments":["tenia"]},{"Key":"no tenia","Fragments":["el"]},{"Key":"tenia el","Fragments":["método"]},{"Key":"el método","Fragments":["isleap,","solo"]},{"Key":"método isleap,","Fragments":["así"]},{"Key":"isleap, así","Fragments":["que"]},{"Key":"así que","Fragments":["al"]},{"Key":"que al","Fragments":["colocar"]},{"Key":"al colocar","Fragments":["este"]},{"Key":"colocar este","Fragments":["mismo"]},{"Key":"este mismo","Fragments":["puede"]},{"Key":"mismo puede","Fragments":["funcionar"]},{"Key":"puede funcionar","Fragments":["correctamente."]},{"Key":"\u003ccode\u003e1E9\u003c/code\u003e as","Fragments":["an"]},{"Key":"alternative to","Fragments":["\u003ccode\u003e1000000000\u003c/code\u003e.","using"]},{"Key":"to \u003ccode\u003e1000000000\u003c/code\u003e.","Fragments":["You"]},{"Key":"\u003ccode\u003e1000000000\u003c/code\u003e. You","Fragments":["can"]},{"Key":"use AddSeconds()","Fragments":["instead"]},{"Key":"AddSeconds() instead","Fragments":["of"]},{"Key":"a TimeSpan","Fragments":["and"]},{"Key":"TimeSpan and","Fragments":["adding"]},{"Key":" Boo!","Fragments":["Hiss!"]},{"Key":"Check the","Fragments":["next"]},{"Key":" 2nd","Fragments":["iteration"]},{"Key":"iteration just","Fragments":["because"]},{"Key":"changed somehow","Fragments":["class"]},{"Key":"somehow class","Fragments":["name."]},{"Key":"class name.","Fragments":["Boolean"]},{"Key":"name. Boolean","Fragments":["checks"]},{"Key":"Boolean checks","Fragments":["need"]},{"Key":"checks need","Fragments":["to"]},{"Key":"be reordered,","Fragments":["this"]},{"Key":"reordered, this","Fragments":["is"]},{"Key":"much cluttered","Fragments":["and"]},{"Key":"cluttered and","Fragments":["not"]},{"Key":"all clear.","Fragments":["`else`s"]},{"Key":"clear. `else`s","Fragments":["after"]},{"Key":"`else`s after","Fragments":["`return`s"]},{"Key":"after `return`s","Fragments":["can"]},{"Key":"`return`s can","Fragments":["be"]},{"Key":"really omitted.","Fragments":["Developing"]},{"Key":"omitted. Developing","Fragments":["on"]},{"Key":"Developing on","Fragments":["Xamarin"]},{"Key":"on Xamarin","Fragments":["on"]},{"Key":"Xamarin on","Fragments":["Mac,"]},{"Key":"on Mac,","Fragments":["so"]},{"Key":"Mac, so","Fragments":["I"]},{"Key":"needed the","Fragments":["Main"]},{"Key":"Main signature","Fragments":["to"]},{"Key":"signature to","Fragments":["compile"]},{"Key":"compile correctly","Fragments":["the"]},{"Key":"correctly the","Fragments":["project"]},{"Key":"much code","Fragments":["duplication.","which","to"]},{"Key":"code duplication.","Fragments":["See"]},{"Key":"duplication. See","Fragments":["if"]},{"Key":"See if","Fragments":["you","you"]},{"Key":"combine similar","Fragments":["operations"]},{"Key":"similar operations","Fragments":["into"]},{"Key":"operations into","Fragments":["one."]},{"Key":"little hint","Fragments":["--"]},{"Key":"hint --","Fragments":["the"]},{"Key":"-- the","Fragments":["problem"]},{"Key":"problem specification","Fragments":["doesn't"]},{"Key":"specification doesn't","Fragments":["say"]},{"Key":"that area","Fragments":["codes"]},{"Key":"area codes","Fragments":["in"]},{"Key":"codes in","Fragments":["parens"]},{"Key":"in parens","Fragments":["are"]},{"Key":"parens are","Fragments":["allowed."]},{"Key":"are allowed.","Fragments":["Would"]},{"Key":"allowed. Would","Fragments":["your"]},{"Key":"Would your","Fragments":["regexp"]},{"Key":"your regexp","Fragments":["match","more"]},{"Key":"regexp match","Fragments":["~314~"]},{"Key":"match ~314~","Fragments":["5555555?"]},{"Key":"~314~ 5555555?","Fragments":["If"]},{"Key":"5555555? If","Fragments":["you"]},{"Key":"regexp more","Fragments":["permissive,"]},{"Key":"more permissive,","Fragments":["your"]},{"Key":"permissive, your","Fragments":["code"]},{"Key":"will ironically","Fragments":["become"]},{"Key":"ironically become","Fragments":["easier"]},{"Key":"become easier","Fragments":["to"]},{"Key":"and shorter.","Fragments":["See"]},{"Key":"shorter. See","Fragments":["my"]},{"Key":"possible example","Fragments":["of"]},{"Key":"wasn't obvious","Fragments":["how"]},{"Key":"obvious how","Fragments":["we"]},{"Key":"how we","Fragments":["should"]},{"Key":"should know","Fragments":["if","at"]},{"Key":"letter should","Fragments":["be"]},{"Key":"be doubled","Fragments":["vs."]},{"Key":"doubled vs.","Fragments":["doubling"]},{"Key":"vs. doubling","Fragments":["the"]},{"Key":"doubling the","Fragments":["word."]},{"Key":"the word.","Fragments":["Good","So"]},{"Key":"word. Good","Fragments":["job"]},{"Key":"job coming","Fragments":["up"]},{"Key":"coming up","Fragments":["with","with"]},{"Key":" Boolean","Fragments":["approach"]},{"Key":"Boolean approach","Fragments":["seems"]},{"Key":"approach seems","Fragments":["fine,"]},{"Key":"seems fine,","Fragments":["but:"]},{"Key":"* Too","Fragments":["much"]},{"Key":"much unused","Fragments":["references"]},{"Key":"* Namespace/class","Fragments":["names"]},{"Key":"Namespace/class names","Fragments":["are"]},{"Key":"wrong (based","Fragments":["on"]},{"Key":"(based on","Fragments":["what"]},{"Key":"what requested","Fragments":["on"]},{"Key":"requested on","Fragments":["the"]},{"Key":"* Misses","Fragments":["`Main`"]},{"Key":"Misses `Main`","Fragments":["signature"]},{"Key":" Additional","Fragments":["indications:"]},{"Key":"Additional indications:","Fragments":["right"]},{"Key":"indications: right","Fragments":["after"]},{"Key":"a `return`,","Fragments":["an"]},{"Key":"`return`, an","Fragments":["`else`"]},{"Key":"`else` is","Fragments":["completely"]},{"Key":"completely redundant:","Fragments":["if"]},{"Key":"redundant: if","Fragments":["the"]},{"Key":"program passes","Fragments":["beyond"]},{"Key":"passes beyond","Fragments":["the"]},{"Key":"first `return`,","Fragments":["it"]},{"Key":"`return`, it","Fragments":["signifies"]},{"Key":"it signifies","Fragments":["that"]},{"Key":"signifies that","Fragments":["the"]},{"Key":"condition isn't","Fragments":["met,"]},{"Key":"isn't met,","Fragments":["so"]},{"Key":"met, so","Fragments":["it"]},{"Key":"\"else\" case.","Fragments":["Also,"]},{"Key":"case. Also,","Fragments":["with"]},{"Key":"Also, with","Fragments":["`if`s"]},{"Key":"with `if`s","Fragments":["with"]},{"Key":"`if`s with","Fragments":["only"]},{"Key":"line inside","Fragments":["the"]},{"Key":"the parenthesis,","Fragments":["you"]},{"Key":"parenthesis, you","Fragments":["can"]},{"Key":"can omit","Fragments":["the"]},{"Key":"omit the","Fragments":["`{","ToCharArray"]},{"Key":"the `{","Fragments":["}`."]},{"Key":"`{ }`.","Fragments":["I"]},{"Key":"}`. I","Fragments":["use"]},{"Key":"this trick","Fragments":["a"]},{"Key":"trick a","Fragments":["lot"]},{"Key":"lot as","Fragments":["it"]},{"Key":"it renders","Fragments":["the"]},{"Key":"renders the","Fragments":["code"]},{"Key":" Prevented","Fragments":["outside"]},{"Key":"Prevented outside","Fragments":["modification"]},{"Key":"outside modification","Fragments":["of"]},{"Key":"of dictionary","Fragments":["according"]},{"Key":"dictionary according","Fragments":["to"]},{"Key":"it's highly","Fragments":["unprofessional"]},{"Key":"highly unprofessional","Fragments":["with"]},{"Key":"unprofessional with","Fragments":["personal"]},{"Key":"with personal","Fragments":["attacks"]},{"Key":"personal attacks","Fragments":["in"]},{"Key":"attacks in","Fragments":["this"]},{"Key":"this community.","Fragments":["Is"]},{"Key":"community. Is","Fragments":["cs101"]},{"Key":"Is cs101","Fragments":["a"]},{"Key":"cs101 a","Fragments":["programming"]},{"Key":"a programming","Fragments":["course?","one,"]},{"Key":" Apart","Fragments":["from"]},{"Key":"Apart from","Fragments":["that"]},{"Key":"your final","Fragments":["submission"]},{"Key":"final submission","Fragments":["is"]},{"Key":"right I","Fragments":["should"]},{"Key":"have written:","Fragments":["```!NucleotideCounts.Any(x"]},{"Key":"written: ```!NucleotideCounts.Any(x","Fragments":["=\u003e"]},{"Key":"```!NucleotideCounts.Any(x =\u003e","Fragments":["x.Key"]},{"Key":"=\u003e x.Key","Fragments":["=="]},{"Key":"x.Key ==","Fragments":["nucleotide)```"]},{"Key":"Think I","Fragments":["started"]},{"Key":"off doing","Fragments":["the"]},{"Key":"the validation","Fragments":["and","of","has","in"]},{"Key":"validation and","Fragments":["I"]},{"Key":"never refactored","Fragments":["that"]},{"Key":"refactored that","Fragments":["away"]},{"Key":"that away","Fragments":["after"]},{"Key":"away after","Fragments":["doing"]},{"Key":"after doing","Fragments":["the"]},{"Key":"A possibly","Fragments":["simpler"]},{"Key":"possibly simpler","Fragments":["way"]},{"Key":"tell if","Fragments":["all"]},{"Key":"all characters","Fragments":["are"]},{"Key":"are uppercase","Fragments":["are"]},{"Key":"are to","Fragments":["see"]},{"Key":"if ToUpper()","Fragments":["=="]},{"Key":"message and","Fragments":["ToLower()","message.ToUpper"]},{"Key":"and ToLower()","Fragments":["!=","don't"]},{"Key":"ToLower() !=","Fragments":["message."]},{"Key":"!= message.","Fragments":["If"]},{"Key":"message. If","Fragments":["both"]},{"Key":"If both","Fragments":["ToUpper()","are"]},{"Key":"both ToUpper()","Fragments":["and"]},{"Key":"ToUpper() and","Fragments":["ToLower()"]},{"Key":"ToLower() don't","Fragments":["change"]},{"Key":"don't change","Fragments":["the","it"]},{"Key":"string, there","Fragments":["are"]},{"Key":"no letters.","Fragments":["I"]},{"Key":"for someone","Fragments":["new","to"]},{"Key":"someone new","Fragments":["to"]},{"Key":"this one,","Fragments":["I"]},{"Key":"one, I","Fragments":["initially"]},{"Key":"initially wrote","Fragments":["up"]},{"Key":"wrote up","Fragments":["a"]},{"Key":"that reversed","Fragments":["the"]},{"Key":"the binary","Fragments":["string,","problem","characters"]},{"Key":"binary string,","Fragments":["then"]},{"Key":"string, then","Fragments":["used"]},{"Key":"set an","Fragments":["argument"]},{"Key":"argument for","Fragments":["the"]},{"Key":"the 'Math.Pow'","Fragments":["operator."]},{"Key":"'Math.Pow' operator.","Fragments":["I"]},{"Key":"go without","Fragments":["looking"]},{"Key":"without looking","Fragments":["anything","at","up"]},{"Key":"looking anything","Fragments":["up,"]},{"Key":"anything up,","Fragments":["especially"]},{"Key":"up, especially","Fragments":["since"]},{"Key":"knew a","Fragments":["straightforward"]},{"Key":"straightforward answer","Fragments":["had"]},{"Key":"answer had","Fragments":["to"]},{"Key":"Then, after","Fragments":["I"]},{"Key":"had my","Fragments":["problem"]},{"Key":"problem working,","Fragments":["I"]},{"Key":"looked up","Fragments":["the"]},{"Key":"the 'binary","Fragments":["string"]},{"Key":"'binary string","Fragments":["to"]},{"Key":"to decimal'","Fragments":["and"]},{"Key":"decimal' and","Fragments":["found"]},{"Key":"the Convert.ToInt64","Fragments":["method."]},{"Key":"decided the","Fragments":["simplest,"]},{"Key":"the simplest,","Fragments":["most"]},{"Key":"simplest, most","Fragments":["direct"]},{"Key":"most direct","Fragments":["approach"]},{"Key":"direct approach","Fragments":["to"]},{"Key":"the one-line","Fragments":["ternary"]},{"Key":"one-line ternary","Fragments":["return."]},{"Key":" Compares","Fragments":["each"]},{"Key":"Compares each","Fragments":["character"]},{"Key":"returns number","Fragments":["of"]},{"Key":"of differences.","Fragments":["Pretty"]},{"Key":"differences. Pretty","Fragments":["simple"]},{"Key":"Pretty simple","Fragments":["but"]},{"Key":"simple but","Fragments":["maybe","effective."]},{"Key":"maybe there's","Fragments":["a"]},{"Key":"about leaving","Fragments":["off"]},{"Key":"leaving off","Fragments":["the"]},{"Key":"that not","Fragments":["setting"]},{"Key":"not setting","Fragments":["the"]},{"Key":"is enough,","Fragments":["or"]},{"Key":"enough, or","Fragments":["should"]},{"Key":"I explicitly","Fragments":["state"]},{"Key":"explicitly state","Fragments":["it's"]},{"Key":"state it's","Fragments":["false"]},{"Key":"it's false","Fragments":["unless"]},{"Key":"false unless","Fragments":["set"]},{"Key":"unless set","Fragments":["to"]},{"Key":" Lol!","Fragments":["Avoid"]},{"Key":"Lol! Avoid","Fragments":["reinventing"]},{"Key":"Avoid reinventing","Fragments":["the"]},{"Key":"wheel at","Fragments":["all"]},{"Key":" Yea...the","Fragments":["class"]},{"Key":"Yea...the class","Fragments":["would"]},{"Key":"would do,","Fragments":["I"]},{"Key":"do, I","Fragments":["just"]},{"Key":" yea...like","Fragments":["return"]},{"Key":"yea...like return","Fragments":["(year"]},{"Key":"400 !=","Fragments":["0)"]},{"Key":"never know","Fragments":["what's"]},{"Key":"what's easier","Fragments":["to"]},{"Key":"read for","Fragments":["new"]},{"Key":"for new","Fragments":["developers..."]},{"Key":"Getting way","Fragments":["outside"]},{"Key":"way outside","Fragments":["of"]},{"Key":"my comfort","Fragments":["zone"]},{"Key":"comfort zone","Fragments":["looking"]},{"Key":"zone looking","Fragments":["up"]},{"Key":"up quadratic","Fragments":["sieve"]},{"Key":"quadratic sieve","Fragments":["algorithms..."]},{"Key":"sieve algorithms...","Fragments":["This"]},{"Key":"algorithms... This","Fragments":["is"]},{"Key":"the 'brute","Fragments":["force'"]},{"Key":"'brute force'","Fragments":["method."]},{"Key":"force' method.","Fragments":["It's"]},{"Key":"It's still","Fragments":["crunching"]},{"Key":"still crunching","Fragments":["on"]},{"Key":"crunching on","Fragments":["the"]},{"Key":"basically submitted","Fragments":["this"]},{"Key":"submitted this","Fragments":["example","code"]},{"Key":"how others","Fragments":["are"]},{"Key":"are approaching","Fragments":["the"]},{"Key":"approaching the","Fragments":["problem."]},{"Key":"probably wouldn't","Fragments":["use","run","improve"]},{"Key":"function. It's","Fragments":["probably"]},{"Key":"statements as","Fragments":["a"]},{"Key":"but how","Fragments":["you","does"]},{"Key":"you defined","Fragments":["the"]},{"Key":"function above","Fragments":["is"]},{"Key":"of complicated.","Fragments":["I"]},{"Key":"complicated. I","Fragments":["think"]},{"Key":"faster though.","Fragments":[":)"]},{"Key":"could boil","Fragments":["it"]},{"Key":"boil it","Fragments":["down","all","all"]},{"Key":"different conditions.","Fragments":["That"]},{"Key":"conditions. That","Fragments":["would"]},{"Key":"indenting and","Fragments":["{}'s."]},{"Key":"against making","Fragments":["Verify()"]},{"Key":"making Verify()","Fragments":["public."]},{"Key":"for computing","Fragments":["the"]},{"Key":"computing the","Fragments":["number:"]},{"Key":"Oh Sorry","Fragments":["my"]},{"Key":"Sorry my","Fragments":["mistake."]},{"Key":"my mistake.","Fragments":["Anyways"]},{"Key":"mistake. Anyways","Fragments":["nice"]},{"Key":"Anyways nice","Fragments":["approach."]},{"Key":"think Main","Fragments":["is"]},{"Key":"Main is","Fragments":["required,","that"]},{"Key":"is required,","Fragments":["Rest","self.a"]},{"Key":"required, Rest","Fragments":["all"]},{"Key":"Rest all","Fragments":["are"]},{"Key":"valid points.","Fragments":["Thanks"]},{"Key":"points. Thanks","Fragments":["for"]},{"Key":"Much better.","Fragments":["The"]},{"Key":"better. The","Fragments":["only","code"]},{"Key":"enumeration instead","Fragments":["of"]},{"Key":"the planet","Fragments":["names,"]},{"Key":"planet names,","Fragments":["though"]},{"Key":"names, though","Fragments":["it"]},{"Key":"pretty nitpicking.","Fragments":["Looking"]},{"Key":"nitpicking. Looking","Fragments":["up"]},{"Key":"expensive than","Fragments":["doing","a"]},{"Key":"dictionary I","Fragments":["have"]},{"Key":"and maintain","Fragments":["than"]},{"Key":"maintain than","Fragments":["a"]},{"Key":"a letter/score","Fragments":["dictionary,"]},{"Key":"letter/score dictionary,","Fragments":["but"]},{"Key":"later is","Fragments":["cleaner"]},{"Key":"solution so","Fragments":["I"]},{"Key":"submissions. Is","Fragments":["anybody"]},{"Key":"Is anybody","Fragments":["handling"]},{"Key":"anybody handling","Fragments":["double/triple"]},{"Key":"handling double/triple","Fragments":["word/letter"]},{"Key":"double/triple word/letter","Fragments":["scores?"]},{"Key":"word/letter scores?","Fragments":["I"]},{"Key":"scores? I","Fragments":["read"]},{"Key":"readme, but","Fragments":["am"]},{"Key":"but am","Fragments":["unsure"]},{"Key":"am unsure","Fragments":["what"]},{"Key":"specs would","Fragments":["be."]},{"Key":"opinion regarding","Fragments":["one"]},{"Key":"regarding one","Fragments":["point"]},{"Key":"of exit,","Fragments":["but"]},{"Key":"need clarification","Fragments":["on"]},{"Key":"clarification on","Fragments":["your"]},{"Key":"your meaning","Fragments":["of"]},{"Key":"of logical","Fragments":["and"]},{"Key":"and short","Fragments":["circuit"]},{"Key":"circuit evaluation.","Fragments":["I've","Can"]},{"Key":"evaluation. I've","Fragments":["been"]},{"Key":"been trying","Fragments":["to"]},{"Key":"to brainstorm","Fragments":["ways"]},{"Key":"brainstorm ways","Fragments":["to"]},{"Key":"method while","Fragments":["trying"]},{"Key":"while trying","Fragments":["to"]},{"Key":"prevent any","Fragments":["unnecessary","accidental"]},{"Key":"any unnecessary","Fragments":["calculations,"]},{"Key":"unnecessary calculations,","Fragments":["but"]},{"Key":"calculations, but","Fragments":["not"]},{"Key":"sure exactly","Fragments":["the"]},{"Key":"evaluation. Can","Fragments":["you"]},{"Key":"you give","Fragments":["me","me","an"]},{"Key":"first attempt,","Fragments":["I"]},{"Key":"attempt, I","Fragments":["wanted","went","removed"]},{"Key":"best algorithm","Fragments":["I"]},{"Key":"algorithm I","Fragments":["could"]},{"Key":"could using","Fragments":["only"]},{"Key":"using only","Fragments":["the"]},{"Key":"single letters.","Fragments":["It"]},{"Key":"letters. It","Fragments":["worked,"]},{"Key":"It worked,","Fragments":["but"]},{"Key":"not happy","Fragments":["with","with"]},{"Key":"second attempt,","Fragments":["I"]},{"Key":"the easier","Fragments":["solution."]},{"Key":"100% happy","Fragments":["with","with"]},{"Key":"are likely","Fragments":["still"]},{"Key":"likely still","Fragments":["simplifications"]},{"Key":"still simplifications","Fragments":["to"]},{"Key":"simplifications to","Fragments":["be"]},{"Key":"be had","Fragments":["in"]},{"Key":"my Parse","Fragments":["method,"]},{"Key":"Parse method,","Fragments":["but"]},{"Key":" TryParse","Fragments":["will"]},{"Key":"TryParse will","Fragments":["convert"]},{"Key":"convert a","Fragments":["negative"]},{"Key":"integer and","Fragments":["it","`DivisibleBy`"]},{"Key":"year (BC/BCE)","Fragments":["is"]},{"Key":"(BC/BCE) is","Fragments":["a"]},{"Key":"Maybe clean","Fragments":["up"]},{"Key":"`var` as","Fragments":["the"]},{"Key":"the preferred","Fragments":["method"]},{"Key":"preferred method","Fragments":["of"]},{"Key":"declaring `vReturn`","Fragments":["instead"]},{"Key":"`vReturn` instead","Fragments":["of"]},{"Key":"of `Dictionary\u003cstring,","Fragments":["int\u003e`,"]},{"Key":"`Dictionary\u003cstring, int\u003e`,","Fragments":["as"]},{"Key":"int\u003e`, as","Fragments":["it"]},{"Key":"still readable","Fragments":["with"]},{"Key":"readable with","Fragments":["`new","\"var\""]},{"Key":"with `new","Fragments":["Dictionary\u003cstring,"]},{"Key":"`new Dictionary\u003cstring,","Fragments":["int\u003e()`."]},{"Key":"the `.ToString()`","Fragments":["conversion"]},{"Key":"`.ToString()` conversion","Fragments":["for"]},{"Key":"conversion for","Fragments":["`val`"]},{"Key":"for `val`","Fragments":["since"]},{"Key":"`val` since","Fragments":["you"]},{"Key":"you declared","Fragments":["`val`","4"]},{"Key":"declared `val`","Fragments":["as"]},{"Key":"`val` as","Fragments":["a"]},{"Key":"a `string`","Fragments":["in"]},{"Key":"`string` in","Fragments":["your"]},{"Key":"does NOT","Fragments":["pass"]},{"Key":"NOT pass","Fragments":["the"]},{"Key":"test Different_robots_have_different_names","Fragments":["and"]},{"Key":"Different_robots_have_different_names and","Fragments":["i"]},{"Key":"i need","Fragments":["some"]},{"Key":"up my","Fragments":["commented","code","imports."]},{"Key":"my commented","Fragments":["lines"]},{"Key":"commented lines","Fragments":["and"]},{"Key":"the \"out","Fragments":["of"]},{"Key":"\"out of","Fragments":["the"]},{"Key":"the box\"","Fragments":["using"]},{"Key":"box\" using","Fragments":["statements"]},{"Key":"statements my","Fragments":["IDE"]},{"Key":"IDE included","Fragments":["that"]},{"Key":"are never","Fragments":["used..."]},{"Key":"Why you","Fragments":["declared"]},{"Key":"declared 4","Fragments":["const"]},{"Key":"4 const","Fragments":["in"]},{"Key":"const in","Fragments":["your"]},{"Key":"Nice. First","Fragments":["one"]},{"Key":"First one","Fragments":["I"]},{"Key":"seen where","Fragments":["it"]},{"Key":"me 10","Fragments":["seconds"]},{"Key":"10 seconds","Fragments":["to"]},{"Key":"seconds to","Fragments":["figure"]},{"Key":"going on.","Fragments":["Very"]},{"Key":"on. Very","Fragments":["readable,"]},{"Key":"readable, concise","Fragments":["and"]},{"Key":"and elegant.","Fragments":["Great"]},{"Key":"elegant. Great","Fragments":["job."]},{"Key":" @aniyah","Fragments":["lol"]},{"Key":"@aniyah lol","Fragments":["wow,"]},{"Key":"lol wow,","Fragments":["not"]},{"Key":"wow, not","Fragments":["sure"]},{"Key":"that slipped","Fragments":["past"]},{"Key":"slipped past","Fragments":["me."]},{"Key":"past me.","Fragments":["Fixed."]},{"Key":"Probably a","Fragments":["better","waste"]},{"Key":"there. Will","Fragments":["have"]},{"Key":"Will have","Fragments":["to"]},{"Key":"look and","Fragments":["see"]},{"Key":"others did.","Fragments":["Its"]},{"Key":"did. Its","Fragments":["a"]},{"Key":"Its a","Fragments":["bit"]},{"Key":"bit brute","Fragments":["force,"]},{"Key":"brute force,","Fragments":["but"]},{"Key":"force, but","Fragments":["I"]},{"Key":"be readable","Fragments":["(generally","c#"]},{"Key":"readable (generally","Fragments":["done"]},{"Key":"(generally done","Fragments":["by"]},{"Key":"by descriptive","Fragments":["variable"]},{"Key":"descriptive variable","Fragments":["names"]},{"Key":"am seeing","Fragments":["better,"]},{"Key":"seeing better,","Fragments":["cleaner"]},{"Key":"better, cleaner","Fragments":["ways"]},{"Key":"my head,","Fragments":["I"]},{"Key":"head, I","Fragments":["was"]},{"Key":"check off","Fragments":["each"]},{"Key":"off each","Fragments":["letter"]},{"Key":"letter that","Fragments":["was"]},{"Key":"was contained","Fragments":["in"]},{"Key":"both words,","Fragments":["and"]},{"Key":"words, and","Fragments":["then"]},{"Key":"checked them","Fragments":["all"]},{"Key":"all off","Fragments":["to"]},{"Key":"an anagram,","Fragments":["so"]},{"Key":"anagram, so","Fragments":["that's"]},{"Key":" @charlotte,","Fragments":["can"]},{"Key":"@charlotte, can","Fragments":["you"]},{"Key":" @denis,","Fragments":["I"]},{"Key":"@denis, I","Fragments":["agree"]},{"Key":"the whitespace.","Fragments":["Unfortunately,"]},{"Key":"whitespace. Unfortunately,","Fragments":["Resharper"]},{"Key":"Unfortunately, Resharper","Fragments":["kept"]},{"Key":"Resharper kept","Fragments":["overriding"]},{"Key":"kept overriding","Fragments":["whatever"]},{"Key":"overriding whatever","Fragments":["I"]},{"Key":"whatever I","Fragments":["tried"]},{"Key":"with \u003ccode\u003etoUpper()\u003c/code\u003e!","Fragments":["I"]},{"Key":"\u003ccode\u003etoUpper()\u003c/code\u003e! I","Fragments":["can't"]},{"Key":"the time!","Fragments":["It"]},{"Key":"time! It","Fragments":["saves"]},{"Key":"It saves","Fragments":["two"]},{"Key":"saves two","Fragments":["lines"]},{"Key":"lines which","Fragments":["perform"]},{"Key":"which perform","Fragments":["the"]},{"Key":" @tavares,","Fragments":["I"]},{"Key":"@tavares, I","Fragments":["probably"]},{"Key":"probably mis-read","Fragments":["the"]},{"Key":"mis-read the","Fragments":["compiler"]},{"Key":"compiler error,","Fragments":["but"]},{"Key":"wouldn't let","Fragments":["me"]},{"Key":"me add","Fragments":["1,000,000,000"]},{"Key":"add 1,000,000,000","Fragments":["seconds"]},{"Key":"seconds as","Fragments":["the"]},{"Key":"was too","Fragments":["large","lazy","trivial"]},{"Key":"too large","Fragments":["for"]},{"Key":"large for","Fragments":["\u003ccode\u003eAddSeconds()\u003c/code\u003e."]},{"Key":"for \u003ccode\u003eAddSeconds()\u003c/code\u003e.","Fragments":["I"]},{"Key":"\u003ccode\u003eAddSeconds()\u003c/code\u003e. I","Fragments":["didn't"]},{"Key":"about \u003ccode\u003etime.Date\u003c/code\u003e","Fragments":["until"]},{"Key":"\u003ccode\u003etime.Date\u003c/code\u003e until","Fragments":["reading"]},{"Key":"until reading","Fragments":["others'"]},{"Key":"reading others'","Fragments":["submissions,"]},{"Key":"others' submissions,","Fragments":["as"]},{"Key":"submissions, as","Fragments":["I"]},{"Key":"use DateTime","Fragments":["often."]},{"Key":" @javier,","Fragments":["thanks"]},{"Key":"@javier, thanks","Fragments":["for"]},{"Key":"for mentioning","Fragments":["Verify()!"]},{"Key":"mentioning Verify()!","Fragments":["I"]},{"Key":"Verify()! I","Fragments":["didn't"]},{"Key":"notice I","Fragments":["made"]},{"Key":"that public....","Fragments":["Thanks"]},{"Key":"public.... Thanks","Fragments":["for"]},{"Key":"the optimized","Fragments":["algorithm!"]},{"Key":" @flo","Fragments":["The"]},{"Key":"@flo The","Fragments":["unit"]},{"Key":"tests specifically","Fragments":["test"]},{"Key":"specifically test","Fragments":["for"]},{"Key":"for most","Fragments":["every","other","C#"]},{"Key":"most every","Fragments":["reasonable"]},{"Key":"every reasonable","Fragments":["format"]},{"Key":"reasonable format","Fragments":["for"]},{"Key":"a phone","Fragments":["number","number","number,","number."]},{"Key":"include zero","Fragments":["tests"]},{"Key":"zero tests","Fragments":["for"]},{"Key":"for \"doesn't","Fragments":["look"]},{"Key":"\"doesn't look","Fragments":["anything"]},{"Key":"look anything","Fragments":["like"]},{"Key":"anything like","Fragments":["a"]},{"Key":"number but","Fragments":["has"]},{"Key":"has 10","Fragments":["digits\""]},{"Key":"10 digits\"","Fragments":["I"]},{"Key":"digits\" I","Fragments":["think"]},{"Key":"the writing","Fragments":["on"]},{"Key":"the wall","Fragments":["is"]},{"Key":"wall is","Fragments":["pretty"]},{"Key":"pretty clear:","Fragments":["accept"]},{"Key":"clear: accept","Fragments":["a"]},{"Key":"number, reject","Fragments":["anything"]},{"Key":"reject anything","Fragments":["that"]},{"Key":" @mathias,","Fragments":["oh"]},{"Key":"@mathias, oh","Fragments":["yeah!"]},{"Key":"oh yeah!","Fragments":["It"]},{"Key":"yeah! It","Fragments":["never"]},{"Key":"never even","Fragments":["occurred"]},{"Key":"even occurred","Fragments":["to"]},{"Key":"could combine","Fragments":["them..."]},{"Key":"combine them...","Fragments":["I'll"]},{"Key":"them... I'll","Fragments":["upload"]},{"Key":"I'll upload","Fragments":["a"]},{"Key":"upload a","Fragments":["revised"]},{"Key":"a revised","Fragments":["version."]},{"Key":" Man,","Fragments":["I"]},{"Key":"Man, I","Fragments":["got"]},{"Key":"got so","Fragments":["hung"]},{"Key":"so hung","Fragments":["up"]},{"Key":"hung up","Fragments":["on"]},{"Key":"using Regex.Split()","Fragments":["and"]},{"Key":"Regex.Split() and","Fragments":["coming"]},{"Key":"and coming","Fragments":["up"]},{"Key":"perfect pattern","Fragments":["i"]},{"Key":"pattern i","Fragments":["got"]},{"Key":"got frustrated","Fragments":["and","and"]},{"Key":"frustrated and","Fragments":["more","just"]},{"Key":"less gave","Fragments":["up."]},{"Key":"gave up.","Fragments":["Just"]},{"Key":"up. Just","Fragments":["came"]},{"Key":"Just came","Fragments":["back"]},{"Key":"by rethinking","Fragments":["it"]},{"Key":"rethinking it","Fragments":["using"]},{"Key":"using Matches,","Fragments":["I"]},{"Key":"Matches, I","Fragments":["got"]},{"Key":"got was","Fragments":["I"]},{"Key":"was I","Fragments":["was","think"]},{"Key":"expected syntax","Fragments":["for"]},{"Key":"for doubles","Fragments":["or","so"]},{"Key":"doubles or","Fragments":["triples"]},{"Key":"or triples","Fragments":["should"]},{"Key":"triples should","Fragments":["be."]},{"Key":"should be.","Fragments":["Anyway,"]},{"Key":"be. Anyway,","Fragments":["supporting"]},{"Key":"Anyway, supporting","Fragments":["that"]},{"Key":"supporting that","Fragments":["messed"]},{"Key":"that messed","Fragments":["up"]},{"Key":"code :-(.","Fragments":["So"]},{"Key":":-(. So","Fragments":["I"]},{"Key":"introduced a","Fragments":["`Letter`"]},{"Key":"a `Letter`","Fragments":["class."]},{"Key":"`Letter` class.","Fragments":["Then"]},{"Key":"class. Then","Fragments":["a","`Parser`"]},{"Key":"Then a","Fragments":["`Word`"]},{"Key":"a `Word`","Fragments":["class."]},{"Key":"`Word` class.","Fragments":["Then"]},{"Key":"Then `Parser`","Fragments":["classes."]},{"Key":"`Parser` classes.","Fragments":["All"]},{"Key":"classes. All","Fragments":["in"]},{"Key":"All in","Fragments":["an"]},{"Key":"Hi @lois","Fragments":[","]},{"Key":"statement can","Fragments":["use"]},{"Key":"the ```var```","Fragments":["keyword,"]},{"Key":"```var``` keyword,","Fragments":["instead"]},{"Key":"keyword, instead","Fragments":["of"]},{"Key":"large static","Fragments":["type."]},{"Key":"static type.","Fragments":["Similarly,"]},{"Key":"type. Similarly,","Fragments":["the"]},{"Key":"Similarly, the","Fragments":["inner"]},{"Key":"loop can","Fragments":["be","be"]},{"Key":"foreach as","Fragments":["well,"]},{"Key":"well, which","Fragments":["removes"]},{"Key":"which removes","Fragments":["the"]},{"Key":"removes the","Fragments":["need"]},{"Key":"the temporary","Fragments":["```stringArray```,"]},{"Key":"temporary ```stringArray```,","Fragments":["and"]},{"Key":"```stringArray```, and","Fragments":["removes"]},{"Key":"and removes","Fragments":["two"]},{"Key":"removes two","Fragments":["index"]},{"Key":"two index","Fragments":["lookups."]},{"Key":"Lastly, the","Fragments":["Console.Writeline,","`DifferenceOfSquares()`"]},{"Key":"the Console.Writeline,","Fragments":["while"]},{"Key":"Console.Writeline, while","Fragments":["good"]},{"Key":"while good","Fragments":["for"]},{"Key":"for debugging,","Fragments":["should"]},{"Key":"debugging, should","Fragments":["probably"]},{"Key":"in released","Fragments":["code."]},{"Key":"@era Help","Fragments":["appreciated"]},{"Key":"are inconsistent","Fragments":["in"]},{"Key":"inconsistent in","Fragments":["your"]},{"Key":"of var.","Fragments":["First"]},{"Key":"var. First","Fragments":["loop"]},{"Key":"First loop","Fragments":["uses"]},{"Key":"loop uses","Fragments":["it,"]},{"Key":"uses it,","Fragments":["second"]},{"Key":"it, second","Fragments":["does"]},{"Key":"second does","Fragments":["not."]},{"Key":"Also is","Fragments":["there"]},{"Key":"a thougt","Fragments":["behind"]},{"Key":"thougt behind","Fragments":["using"]},{"Key":"the newValue","Fragments":["variable?"]},{"Key":"newValue variable?","Fragments":["Since"]},{"Key":"variable? Since","Fragments":["its"]},{"Key":"Since its","Fragments":["not"]},{"Key":"its not","Fragments":["really","a"]},{"Key":" Currently","Fragments":["fails","the"]},{"Key":"Currently fails","Fragments":["for"]},{"Key":"fails for","Fragments":["the"]},{"Key":"last 3","Fragments":["tests"]},{"Key":"3 tests","Fragments":["for"]},{"Key":"for numbers,","Fragments":["apostrophes,"]},{"Key":"numbers, apostrophes,","Fragments":["and"]},{"Key":"apostrophes, and","Fragments":["normalization."]},{"Key":"and normalization.","Fragments":["Assuming"]},{"Key":"normalization. Assuming","Fragments":["that"]},{"Key":"Assuming that","Fragments":["its"]},{"Key":"its a","Fragments":["problem","step"]},{"Key":" Things","Fragments":["I"]},{"Key":"Things I","Fragments":["updated:"]},{"Key":"* changed","Fragments":["the"]},{"Key":"of `string`","Fragments":["for"]},{"Key":"`string` for","Fragments":["`newLetter`"]},{"Key":"for `newLetter`","Fragments":["to"]},{"Key":"`newLetter` to","Fragments":["use"]},{"Key":"* removed","Fragments":["declaration"]},{"Key":"removed declaration","Fragments":["of"]},{"Key":"of `int","Fragments":["newValue`"]},{"Key":"* renamed","Fragments":["variables"]},{"Key":"renamed variables","Fragments":["to"]},{"Key":"to accurately","Fragments":["reflect"]},{"Key":"accurately reflect","Fragments":["what"]},{"Key":"reflect what","Fragments":["they"]},{"Key":"they mean,","Fragments":["to","I"]},{"Key":"mean, to","Fragments":["improve"]},{"Key":"improve code","Fragments":["readability"]},{"Key":"Nice one!","Fragments":["Add"]},{"Key":"one! Add","Fragments":["to"]},{"Key":"a protection","Fragments":["from"]},{"Key":"protection from","Fragments":["introducing"]},{"Key":"from introducing","Fragments":["bugs"]},{"Key":"introducing bugs","Fragments":["through"]},{"Key":"bugs through","Fragments":["typos"]},{"Key":"through typos","Fragments":["in"]},{"Key":"typos in","Fragments":["strings,"]},{"Key":"in strings,","Fragments":["especially"]},{"Key":"strings, especially","Fragments":["when"]},{"Key":"when we're","Fragments":["typing"]},{"Key":"we're typing","Fragments":["planet"]},{"Key":"typing planet","Fragments":["names"]},{"Key":"planet names","Fragments":["twice"]},{"Key":"names twice","Fragments":["(as"]},{"Key":"twice (as","Fragments":["in"]},{"Key":"(as in","Fragments":["here)."]},{"Key":"in here).","Fragments":["And"]},{"Key":"here). And","Fragments":["you"]},{"Key":"And you","Fragments":["have","should","can","dont","dont"]},{"Key":"have autocompletion","Fragments":["when"]},{"Key":"autocompletion when","Fragments":["reusing"]},{"Key":"when reusing","Fragments":["them."]},{"Key":"use recursive","Fragments":["calls,"]},{"Key":"recursive calls,","Fragments":["@pedro!"]},{"Key":"calls, @pedro!","Fragments":["It"]},{"Key":"@pedro! It","Fragments":["simplifies"]},{"Key":"It simplifies","Fragments":["it,"]},{"Key":"simplifies it,","Fragments":["makes"]},{"Key":"it, makes","Fragments":["it"]},{"Key":"debug (imho),","Fragments":["and"]},{"Key":"(imho), and","Fragments":["(probably)"]},{"Key":"and (probably)","Fragments":["runs"]},{"Key":"(probably) runs","Fragments":["faster"]},{"Key":"runs faster","Fragments":["(I've","as"]},{"Key":"faster (I've","Fragments":["never"]},{"Key":"(I've never","Fragments":["done"]},{"Key":"never done","Fragments":["anything"]},{"Key":"done anything","Fragments":["with"]},{"Key":"anything with","Fragments":["BigO,"]},{"Key":"with BigO,","Fragments":["so"]},{"Key":"BigO, so","Fragments":["forgive"]},{"Key":"so forgive","Fragments":["me","me"]},{"Key":"forgive me","Fragments":["if","for"]},{"Key":"really nice","Fragments":["and","and","to"]},{"Key":"solving this","Fragments":["problem."]},{"Key":"I HAD","Fragments":["to"]},{"Key":"HAD to","Fragments":["say"]},{"Key":"say something","Fragments":["nit"]},{"Key":"something nit","Fragments":["picky"]},{"Key":"nit picky","Fragments":["about"]},{"Key":"picky about","Fragments":["this,"]},{"Key":"about this,","Fragments":["it"]},{"Key":"this, it","Fragments":["would"]},{"Key":"anyone that","Fragments":["had","might"]},{"Key":"were looking","Fragments":["at"]},{"Key":"at but","Fragments":["this","feels"]},{"Key":"is self-explanatory","Fragments":["for"]},{"Key":"self-explanatory for","Fragments":["the"]},{"Key":"most part","Fragments":["so"]},{"Key":"part so","Fragments":["I"]},{"Key":"doesn't even","Fragments":["matter"]},{"Key":"even matter","Fragments":["that"]},{"Key":"matter that","Fragments":["much."]},{"Key":"of {3,","Fragments":["5}"]},{"Key":"{3, 5}","Fragments":["up"]},{"Key":"5} up","Fragments":["to"]},{"Key":"to 20,","Fragments":["your"]},{"Key":"20, your","Fragments":["code"]},{"Key":"code counts","Fragments":["15"]},{"Key":"counts 15","Fragments":["twice."]},{"Key":"15 twice.","Fragments":["This"]},{"Key":"likely why","Fragments":["it"]},{"Key":"too readable","Fragments":["which"]},{"Key":"readable which","Fragments":["(I"]},{"Key":"which (I","Fragments":["would"]},{"Key":"(I would","Fragments":["assume)"]},{"Key":"would assume)","Fragments":["might"]},{"Key":"assume) might","Fragments":["hurt"]},{"Key":"hurt me","Fragments":["in"]},{"Key":"future if","Fragments":["I"]},{"Key":"a longer","Fragments":["function"]},{"Key":"longer function","Fragments":["that"]},{"Key":"does many","Fragments":["different"]},{"Key":"many different","Fragments":["things."]},{"Key":"Quite late","Fragments":["so"]},{"Key":"late so","Fragments":["might"]},{"Key":"so might","Fragments":["have"]},{"Key":"a mistake","Fragments":["or","I'm"]},{"Key":"mistake or","Fragments":["two."]},{"Key":" Basically,","Fragments":["iterate"]},{"Key":"Basically, iterate","Fragments":["through"]},{"Key":"every word","Fragments":["in"]},{"Key":"the array,","Fragments":["if"]},{"Key":"array, if","Fragments":["it"]},{"Key":"same length,","Fragments":["not"]},{"Key":"length, not","Fragments":["the"]},{"Key":"same word","Fragments":["and"]},{"Key":"in alphabetical","Fragments":["order,"]},{"Key":"alphabetical order,","Fragments":["return","but"]},{"Key":"order, return","Fragments":["it."]},{"Key":"I stumbled","Fragments":["upon"]},{"Key":"stumbled upon","Fragments":["the"]},{"Key":"NUnit documentation","Fragments":["and"]},{"Key":"and rewrote","Fragments":["the","my"]},{"Key":"also threw","Fragments":["in"]},{"Key":"threw in","Fragments":["a"]},{"Key":"of bitwise","Fragments":["operators","'\u0026'"]},{"Key":"bitwise operators","Fragments":["and"]},{"Key":"did help","Fragments":["a"]},{"Key":"using UInt32","Fragments":["because"]},{"Key":"UInt32 because","Fragments":["early"]},{"Key":"because early","Fragments":["on"]},{"Key":"early on","Fragments":["I"]},{"Key":"on I","Fragments":["had"]},{"Key":"issue with","Fragments":["the","special","poor","three"]},{"Key":"modulus not","Fragments":["running"]},{"Key":"not running","Fragments":["with"]},{"Key":"int type.","Fragments":["The"]},{"Key":"type. The","Fragments":["new"]},{"Key":"version now","Fragments":["uses"]},{"Key":"now uses","Fragments":["an","simple"]},{"Key":"uses an","Fragments":["int."]},{"Key":" @justyn:","Fragments":["Actually,"]},{"Key":"@justyn: Actually,","Fragments":["you"]},{"Key":"Actually, you","Fragments":["shouldn't.","don't"]},{"Key":"you shouldn't.","Fragments":["That's"]},{"Key":"shouldn't. That's","Fragments":["what"]},{"Key":"the unittests","Fragments":["are"]},{"Key":"unittests are","Fragments":["for."]},{"Key":"iteration had","Fragments":["me"]},{"Key":"had me","Fragments":["breaking","wondering"]},{"Key":"me breaking","Fragments":["down"]},{"Key":"char arrays,","Fragments":["but","but","then"]},{"Key":"arrays, but","Fragments":["I've","I"]},{"Key":"I've realized","Fragments":["now"]},{"Key":"realized now","Fragments":["that"]},{"Key":"that, at","Fragments":["least"]},{"Key":"C#, don't","Fragments":["know"]},{"Key":"other languages(yet).","Fragments":["I"]},{"Key":"languages(yet). I","Fragments":["think"]},{"Key":"solution works","Fragments":["out"]},{"Key":"works out","Fragments":["to"]},{"Key":"My thinking","Fragments":["was"]},{"Key":"thinking was","Fragments":["that"]},{"Key":"it's harder","Fragments":["to"]},{"Key":"find hard-coded","Fragments":["strings"]},{"Key":"hard-coded strings","Fragments":["embedded"]},{"Key":"strings embedded","Fragments":["in"]},{"Key":"embedded in","Fragments":["your"]},{"Key":"code. Granted,","Fragments":["this"]},{"Key":"Granted, this","Fragments":["code"]},{"Key":"so short","Fragments":["that"]},{"Key":"short that","Fragments":["it"]},{"Key":"still think","Fragments":["it's","GenerateName()"]},{"Key":"it's clearer","Fragments":["with"]},{"Key":"concise but","Fragments":["pretty"]},{"Key":"but pretty","Fragments":["unreadable;"]},{"Key":"pretty unreadable;","Fragments":["when"]},{"Key":"unreadable; when","Fragments":["reading"]},{"Key":"when reading","Fragments":["code"]},{"Key":"reading code","Fragments":["you"]},{"Key":"keep mental","Fragments":["overhead"]},{"Key":"mental overhead","Fragments":["as"]},{"Key":"as low","Fragments":["as"]},{"Key":"low as","Fragments":["possible."]},{"Key":"possible. This","Fragments":["'big'"]},{"Key":"This 'big'","Fragments":["construction"]},{"Key":"'big' construction","Fragments":["of"]},{"Key":"construction of","Fragments":["AND's"]},{"Key":"of AND's","Fragments":["and"]},{"Key":"AND's and","Fragments":["OR's"]},{"Key":"and OR's","Fragments":["and"]},{"Key":"OR's and","Fragments":["comparisons"]},{"Key":"and comparisons","Fragments":["to"]},{"Key":"or NOT","Fragments":["zero"]},{"Key":"NOT zero","Fragments":["are"]},{"Key":"to mistakes","Fragments":["in"]},{"Key":"mistakes in","Fragments":["either"]},{"Key":"either writing","Fragments":["the"]},{"Key":"or comprehending","Fragments":["the"]},{"Key":"comprehending the","Fragments":["code"]},{"Key":"code (imagine","Fragments":["reading/writing"]},{"Key":"(imagine reading/writing","Fragments":["this"]},{"Key":"reading/writing this","Fragments":["at"]},{"Key":"you insist","Fragments":["on","on"]},{"Key":"insist on","Fragments":["your","persisting"]},{"Key":"your chosen","Fragments":["path"]},{"Key":"chosen path","Fragments":["of"]},{"Key":"path of","Fragments":["concise"]},{"Key":"of concise","Fragments":["instead"]},{"Key":"concise instead","Fragments":["of"]},{"Key":"of easily","Fragments":["readable"]},{"Key":"readable code;","Fragments":["why"]},{"Key":"code; why","Fragments":["bother"]},{"Key":"why bother","Fragments":["with"]},{"Key":"if-statement at","Fragments":["all?"]},{"Key":" @margarette","Fragments":["No;"]},{"Key":"@margarette No;","Fragments":["it's"]},{"Key":"No; it's","Fragments":["not"]},{"Key":"and there's","Fragments":["no","a"]},{"Key":"so you're","Fragments":["done."]},{"Key":"you're done.","Fragments":["Or"]},{"Key":"done. Or","Fragments":["would"]},{"Key":"to account","Fragments":["for","for"]},{"Key":"account for","Fragments":["when","possible","the","trailing","\u003e\u003etock'\u003c\u003c"]},{"Key":"* pass","Fragments":["in","in"]},{"Key":"DateTime instead","Fragments":["of"]},{"Key":"* have","Fragments":["the"]},{"Key":"method return","Fragments":["true","a","false."]},{"Key":"year 1337","Fragments":["since"]},{"Key":"1337 since","Fragments":["I"]},{"Key":"believe in","Fragments":["the"]},{"Key":"the flying","Fragments":["spaghetti"]},{"Key":"flying spaghetti","Fragments":["monster?"]},{"Key":"days (positive","Fragments":["or"]},{"Key":"(positive or","Fragments":["negative)"]},{"Key":"or negative)","Fragments":["since"]},{"Key":"negative) since","Fragments":["epoch"]},{"Key":"* handle","Fragments":["years"]},{"Key":"handle years","Fragments":["from"]},{"Key":"years from","Fragments":["when","the"]},{"Key":"from when","Fragments":["the"]},{"Key":"the dinosaurs","Fragments":["were"]},{"Key":"dinosaurs were","Fragments":["walking"]},{"Key":"were walking","Fragments":["on"]},{"Key":"walking on","Fragments":["earth"]},{"Key":"earth or","Fragments":["since"]},{"Key":"or since","Fragments":["we"]},{"Key":"we invented","Fragments":["counting"]},{"Key":"* send","Fragments":["an"]},{"Key":"send an","Fragments":["automatic"]},{"Key":"an automatic","Fragments":["e-mail"]},{"Key":"automatic e-mail","Fragments":["for"]},{"Key":"e-mail for","Fragments":["all"]},{"Key":"all leap","Fragments":["years","years,","years,"]},{"Key":"years passed","Fragments":["in"]},{"Key":" ...get","Fragments":["my"]},{"Key":"...get my","Fragments":["drift?"]},{"Key":"my drift?","Fragments":[":-)"]},{"Key":"After receiving","Fragments":["feedback"]},{"Key":"receiving feedback","Fragments":["from"]},{"Key":"from @wanda","Fragments":[","]},{"Key":"@wanda ,","Fragments":["this"]},{"Key":", this","Fragments":["is"]},{"Key":"few conditionals","Fragments":["to"]},{"Key":"conditionals to","Fragments":["make","stay","simply"]},{"Key":"more robust.","Fragments":["I"]},{"Key":"robust. I","Fragments":["hope"]},{"Key":"hope I","Fragments":["understood"]},{"Key":"I understood","Fragments":["the","the"]},{"Key":"understood the","Fragments":["readme","restrictions..."]},{"Key":"readme properly","Fragments":["that"]},{"Key":"properly that","Fragments":["\"hamming"]},{"Key":"that \"hamming","Fragments":["distance\""]},{"Key":"\"hamming distance\"","Fragments":["doesn't"]},{"Key":"distance\" doesn't","Fragments":["mean"]},{"Key":"to strands","Fragments":["of"]},{"Key":"of unequal","Fragments":["length,","length."]},{"Key":"unequal length,","Fragments":["hence"]},{"Key":"length, hence","Fragments":["the"]},{"Key":"hence the","Fragments":["lack"]},{"Key":"of unit","Fragments":["tests","tests"]},{"Key":"tests regarding","Fragments":["that"]},{"Key":"regarding that","Fragments":["situation."]},{"Key":"took my","Fragments":["first"]},{"Key":"first solution","Fragments":["and"]},{"Key":"to arrive","Fragments":["at"]},{"Key":"arrive at","Fragments":["the","the"]},{"Key":"current solution","Fragments":["by","has,"]},{"Key":"solution by","Fragments":["trying"]},{"Key":"by trying","Fragments":["simplify"]},{"Key":"trying simplify","Fragments":["it."]},{"Key":"simplify it.","Fragments":["That"]},{"Key":"That didn't","Fragments":["get"]},{"Key":"get me","Fragments":["any","wrong,"]},{"Key":"any places.","Fragments":["Then"]},{"Key":"places. Then","Fragments":["I"]},{"Key":"definition for","Fragments":["a"]},{"Key":"year. You","Fragments":["need"]},{"Key":"need mathematical","Fragments":["skills."]},{"Key":" (year","Fragments":["%","%","%","%","%","%"]},{"Key":"year if","Fragments":["it's","it"]},{"Key":"it's true","Fragments":["because"]},{"Key":"true because","Fragments":["integers"]},{"Key":"because integers","Fragments":["that"]},{"Key":"integers that","Fragments":["are"]},{"Key":"also divisible","Fragments":["by","by","by"]},{"Key":"4. So","Fragments":["that"]},{"Key":"So that","Fragments":["catches"]},{"Key":"that catches","Fragments":["the"]},{"Key":"the \"unless","Fragments":["the"]},{"Key":"\"unless the","Fragments":["year"]},{"Key":"by 400\"","Fragments":["condition."]},{"Key":"condition \"evenly","Fragments":["divisible"]},{"Key":"\"evenly divisible","Fragments":["by"]},{"Key":"The above","Fragments":["considerations"]},{"Key":"above considerations","Fragments":["may"]},{"Key":"considerations may","Fragments":["help"]},{"Key":"you arrive","Fragments":["at"]},{"Key":"current expression.","Fragments":["However"]},{"Key":"expression. However","Fragments":["is"]},{"Key":"However is","Fragments":["not"]},{"Key":"mathematical proof","Fragments":["and"]},{"Key":"proof and","Fragments":["the","more"]},{"Key":"successfully is","Fragments":["an"]},{"Key":"indication that","Fragments":["your"]},{"Key":"your going","Fragments":["in"]},{"Key":"going in","Fragments":["the"]},{"Key":"A real","Fragments":["proof"]},{"Key":"real proof","Fragments":["should"]},{"Key":"proof should","Fragments":["prove"]},{"Key":"should prove","Fragments":["this"]},{"Key":"prove this","Fragments":["statement"]},{"Key":" be","Fragments":["tantamount"]},{"Key":"be tantamount","Fragments":["to"]},{"Key":" @kaden,","Fragments":["thanks!"]},{"Key":"@kaden, thanks!","Fragments":["I"]},{"Key":"understand now!","Fragments":["Expect"]},{"Key":"now! Expect","Fragments":["a"]},{"Key":"Expect a","Fragments":["revision"]},{"Key":"a revision","Fragments":["soon"]},{"Key":"revision soon","Fragments":[":)"]},{"Key":"Seems to","Fragments":["work","be"]},{"Key":"work well.","Fragments":["I"]},{"Key":"about dealing","Fragments":["with"]},{"Key":"different languages","Fragments":["though."]},{"Key":" Se","Fragments":["parece"]},{"Key":"Se parece","Fragments":["mucho"]},{"Key":"parece mucho","Fragments":["a"]},{"Key":"mucho a","Fragments":["mi"]},{"Key":"a mi","Fragments":["primera"]},{"Key":"mi primera","Fragments":["iteración"]},{"Key":"primera iteración","Fragments":[":)"]},{"Key":"iteración :)","Fragments":["Si"]},{"Key":":) Si","Fragments":["hacemos"]},{"Key":"Si hacemos","Fragments":["caso"]},{"Key":"hacemos caso","Fragments":["a"]},{"Key":"caso a","Fragments":["Uncle"]},{"Key":"a Uncle","Fragments":["Bob,"]},{"Key":"Uncle Bob,","Fragments":["el"]},{"Key":"Bob, el","Fragments":["método"]},{"Key":"método solo","Fragments":["debería"]},{"Key":"solo debería","Fragments":["tener"]},{"Key":"debería tener","Fragments":["un"]},{"Key":"tener un","Fragments":["return."]},{"Key":"un return.","Fragments":["El"]},{"Key":"return. El","Fragments":["reto"]},{"Key":"El reto","Fragments":["está"]},{"Key":"reto está","Fragments":["en"]},{"Key":"está en","Fragments":["hacerlo"]},{"Key":"en hacerlo","Fragments":["en"]},{"Key":"hacerlo en","Fragments":["una"]},{"Key":"en una","Fragments":["sola","linea,","linea"]},{"Key":"una sola","Fragments":["línea!"]},{"Key":"all, do","Fragments":["check"]},{"Key":"do check","Fragments":["the"]},{"Key":"input value,a","Fragments":["year"]},{"Key":"value,a year","Fragments":["must"]},{"Key":"I bungled","Fragments":["the"]},{"Key":"bungled the","Fragments":["regex"]},{"Key":"regex part","Fragments":["of"]},{"Key":"definitely there's","Fragments":["some"]},{"Key":"there's some","Fragments":["inefficiencies"]},{"Key":"some inefficiencies","Fragments":["with"]},{"Key":"inefficiencies with","Fragments":["how"]},{"Key":"I handled","Fragments":["going"]},{"Key":"handled going","Fragments":["back"]},{"Key":"forth between","Fragments":["my"]},{"Key":"between my","Fragments":["list"]},{"Key":"my list","Fragments":["and"]},{"Key":"and array.","Fragments":["Thoughts"]},{"Key":"array. Thoughts","Fragments":["are"]},{"Key":"Thoughts are","Fragments":["very"]},{"Key":" Hard","Fragments":["to","to","coding","coded","coded"]},{"Key":"Hard to","Fragments":["Read","Read"]},{"Key":"Nice comment","Fragments":["work."]},{"Key":"user entered","Fragments":["a"]},{"Key":"entered a","Fragments":["negative","non"]},{"Key":" He","Fragments":["visto"]},{"Key":"He visto","Fragments":["tu"]},{"Key":"visto tu","Fragments":["iteración"]},{"Key":"tu iteración","Fragments":["con"]},{"Key":"iteración con","Fragments":["el"]},{"Key":"con el","Fragments":["código"]},{"Key":"el código","Fragments":["en"]},{"Key":"código en","Fragments":["una"]},{"Key":"una linea,","Fragments":["la"]},{"Key":"linea, la","Fragments":["verdad,"]},{"Key":"la verdad,","Fragments":["es"]},{"Key":"verdad, es","Fragments":["que"]},{"Key":"es que","Fragments":["no"]},{"Key":"que no","Fragments":["me"]},{"Key":"no me","Fragments":["gusta"]},{"Key":"me gusta","Fragments":["por"]},{"Key":"gusta por","Fragments":["tema"]},{"Key":"por tema","Fragments":["de"]},{"Key":"tema de","Fragments":["legibilidad."]},{"Key":" En","Fragments":["mi"]},{"Key":"En mi","Fragments":["caso,"]},{"Key":"mi caso,","Fragments":["al"]},{"Key":"caso, al","Fragments":["leer"]},{"Key":"al leer","Fragments":["el"]},{"Key":"leer el","Fragments":["codigo"]},{"Key":"el codigo","Fragments":["en"]},{"Key":"codigo en","Fragments":["una"]},{"Key":"una linea","Fragments":["me"]},{"Key":"linea me","Fragments":["trae"]},{"Key":"me trae","Fragments":["problemas"]},{"Key":"trae problemas","Fragments":["para"]},{"Key":"problemas para","Fragments":["entenderlo"]},{"Key":"para entenderlo","Fragments":["que"]},{"Key":"entenderlo que","Fragments":["hacerlos"]},{"Key":"que hacerlos","Fragments":["con"]},{"Key":"hacerlos con","Fragments":["los"]},{"Key":"con los","Fragments":["if"]},{"Key":"los if","Fragments":["anidados."]},{"Key":"only tweaks","Fragments":["I"]},{"Key":"tweaks I","Fragments":["can"]},{"Key":" \u003cb\u003e\u003cem\u003eVery\u003c/em\u003e","Fragments":["minor\u003c/b\u003e"]},{"Key":" Remove","Fragments":["unused"]},{"Key":"Remove unused","Fragments":["using."]},{"Key":"tend towards","Fragments":["the"]},{"Key":"towards the","Fragments":["\u003cem\u003eif","end"]},{"Key":"the \u003cem\u003eif","Fragments":["it's"]},{"Key":"\u003cem\u003eif it's","Fragments":["not"]},{"Key":"being used,","Fragments":["don't"]},{"Key":"used, don't","Fragments":["put"]},{"Key":"don't put","Fragments":["it"]},{"Key":"in school\u003c/em\u003e","Fragments":["but"]},{"Key":"school\u003c/em\u003e but","Fragments":["this"]},{"Key":"purely a","Fragments":["matter"]},{"Key":"preference. Unused","Fragments":["usings"]},{"Key":"Unused usings","Fragments":["are"]},{"Key":"usings are","Fragments":["deliberately"]},{"Key":"are deliberately","Fragments":["not"]},{"Key":"deliberately not","Fragments":["an"]},{"Key":"or warning","Fragments":["http://blogs.msdn.com/b/ericlippert/archive/2010/01/25/why-are-unused-using-directives-not-a-warning.aspx"]},{"Key":" Throw","Fragments":["exception"]},{"Key":"Throw exception","Fragments":["on"]},{"Key":"spec and","Fragments":["can"]},{"Key":"a defensive","Fragments":["style"]},{"Key":"defensive style","Fragments":["I"]},{"Key":"would check","Fragments":["for"]},{"Key":"not null","Fragments":["on","otherwise"]},{"Key":"null on","Fragments":["p1"]},{"Key":"on p1","Fragments":["and"]},{"Key":"p1 and","Fragments":["p2"]},{"Key":"and p2","Fragments":["before"]},{"Key":"p2 before","Fragments":["invoking"]},{"Key":"before invoking","Fragments":["Length."]},{"Key":"invoking Length.","Fragments":["I"]},{"Key":"Length. I","Fragments":["just"]},{"Key":"like seeing","Fragments":["null"]},{"Key":"seeing null","Fragments":["object"]},{"Key":"null object","Fragments":["reference"]},{"Key":"object reference","Fragments":["exceptions."]},{"Key":"minor thing","Fragments":["but"]},{"Key":"strings twice","Fragments":["if"]},{"Key":"twice if","Fragments":["they"]},{"Key":"are different.","Fragments":["The"]},{"Key":"different. The","Fragments":["p1=p2"]},{"Key":"The p1=p2","Fragments":["check"]},{"Key":"p1=p2 check","Fragments":["needs"]},{"Key":"check needs","Fragments":["to"]},{"Key":"do pretty","Fragments":["much"]},{"Key":"much what","Fragments":["you"]},{"Key":"check. If","Fragments":["you"]},{"Key":"check then","Fragments":["you"]},{"Key":" \u003cb\u003eExtra","Fragments":["Credit\u003c/b\u003e"]},{"Key":"at Linq","Fragments":["for","Zip()"]},{"Key":"Linq for","Fragments":["comparing"]},{"Key":"for comparing","Fragments":["the"]},{"Key":"the strings.","Fragments":["There"]},{"Key":"strings. There","Fragments":["is"]},{"Key":"an overload","Fragments":["of"]},{"Key":"overload of","Fragments":["`Select`","creating"]},{"Key":"of `Select`","Fragments":["that"]},{"Key":"`Select` that","Fragments":["gives"]},{"Key":"that gives","Fragments":["you"]},{"Key":"gives you","Fragments":["the"]},{"Key":"current index","Fragments":["and","in"]},{"Key":"current character","Fragments":["against"]},{"Key":"character against","Fragments":["the"]},{"Key":"relevant one","Fragments":["in"]},{"Key":"other string.","Fragments":["If"]},{"Key":"same, return","Fragments":["0"]},{"Key":"return 0","Fragments":["else","in"]},{"Key":"0 else","Fragments":["1"]},{"Key":"else 1","Fragments":["and"]},{"Key":"then `Sum`","Fragments":["the"]},{"Key":"`Sum` the","Fragments":["sequence."]},{"Key":"using `KeyValuePair\u003cstring,","Fragments":["int\u003e`"]},{"Key":"`KeyValuePair\u003cstring, int\u003e`","Fragments":["instead"]},{"Key":"int\u003e` instead","Fragments":["of"]},{"Key":"just supposed","Fragments":["to"]},{"Key":"considered about","Fragments":["culture"]},{"Key":"about culture","Fragments":["..."]},{"Key":"culture ...","Fragments":["I"]},{"Key":"... I","Fragments":["just"]},{"Key":"The `.ToString`","Fragments":["in"]},{"Key":"`.ToString` in","Fragments":["line"]},{"Key":"line 19","Fragments":["is"]},{"Key":"19 is","Fragments":["redundant"]},{"Key":"redundant (it's","Fragments":["already"]},{"Key":"(it's already","Fragments":["a"]},{"Key":"a string).","Fragments":["Rather"]},{"Key":"string). Rather","Fragments":["use"]},{"Key":"Rather use","Fragments":["just"]},{"Key":"local `keyValue`","Fragments":["variable"]},{"Key":"`keyValue` variable","Fragments":["arguably"]},{"Key":"variable arguably","Fragments":["won't"]},{"Key":"arguably won't","Fragments":["have"]},{"Key":"any benefit","Fragments":["either.","though."]},{"Key":" Invert","Fragments":["the"]},{"Key":"Invert the","Fragments":["equality"]},{"Key":"the equality","Fragments":["comparisons,"]},{"Key":"equality comparisons,","Fragments":["group"]},{"Key":"comparisons, group","Fragments":["`%4`"]},{"Key":"group `%4`","Fragments":["and"]},{"Key":"`%4` and","Fragments":["`%100`"]},{"Key":"and `%100`","Fragments":["and"]},{"Key":"`%100` and","Fragments":["you"]},{"Key":"that directly","Fragments":[":)"]},{"Key":"most straight-forward","Fragments":["implementation"]},{"Key":"straight-forward implementation","Fragments":["I"]},{"Key":"a strict","Fragments":["TDD"]},{"Key":"strict TDD","Fragments":["red-green-refactor."]},{"Key":" @lucious","Fragments":["In"]},{"Key":"@lucious In","Fragments":["this"]},{"Key":"method one","Fragments":["return"]},{"Key":"return would","Fragments":["be"]},{"Key":"be enough,","Fragments":["but"]},{"Key":"but early","Fragments":["returns"]},{"Key":"are great","Fragments":["to"]},{"Key":" ReSharper","Fragments":["suggests"]},{"Key":"ReSharper suggests","Fragments":["that"]},{"Key":"suggests that","Fragments":["btw..."]},{"Key":"This can't","Fragments":["produce"]},{"Key":"can't produce","Fragments":["a"]},{"Key":"correct output.","Fragments":["It's"]},{"Key":"output. It's","Fragments":["*not*"]},{"Key":"It's *not*","Fragments":["a"]},{"Key":"*not* a","Fragments":["leap"]},{"Key":"when `year","Fragments":["%"]},{"Key":"you it's","Fragments":["a"]},{"Key":"for returning","Fragments":["true."]},{"Key":"use `\u0026\u0026`","Fragments":["for"]},{"Key":"`\u0026\u0026` for","Fragments":["booleans."]},{"Key":" @sigmund,","Fragments":["for"]},{"Key":"@sigmund, for","Fragments":["the"]},{"Key":"== 0\u003c/code\u003e.","Fragments":["It's"]},{"Key":"0\u003c/code\u003e. It's","Fragments":["simpler"]},{"Key":"It's simpler","Fragments":["and"]},{"Key":"Also, and","Fragments":["this"]},{"Key":"code, why","Fragments":["did"]},{"Key":"you include","Fragments":["\u003ccode\u003eMicrosoft.Win32\u003c/code\u003e?","the"]},{"Key":"include \u003ccode\u003eMicrosoft.Win32\u003c/code\u003e?","Fragments":["Is"]},{"Key":"\u003ccode\u003eMicrosoft.Win32\u003c/code\u003e? Is","Fragments":["it"]},{"Key":"of \u003ccode\u003eMain()\u003c/code\u003e?","Fragments":["As"]},{"Key":"\u003ccode\u003eMain()\u003c/code\u003e? As","Fragments":["you're"]},{"Key":"As you're","Fragments":["using"]},{"Key":"using unit","Fragments":["tests"]},{"Key":"tests (hopefully","Fragments":["with"]},{"Key":"(hopefully with","Fragments":["NUnit"]},{"Key":"Visual Studio),","Fragments":["you"]},{"Key":"Studio), you","Fragments":["don't"]},{"Key":"include that","Fragments":["and"]},{"Key":"and create","Fragments":["a","my"]},{"Key":"Class Library","Fragments":["project"]},{"Key":"Library project","Fragments":["instead"]},{"Key":"project instead","Fragments":["of"]},{"Key":"any help,","Fragments":["please"]},{"Key":"help, please","Fragments":["let"]},{"Key":"please let","Fragments":["me","me"]},{"Key":"Main focus","Fragments":["of"]},{"Key":"focus of","Fragments":["the"]},{"Key":"was clearly","Fragments":["implementing"]},{"Key":"clearly implementing","Fragments":["the"]},{"Key":"the instructions.","Fragments":["I"]},{"Key":"instructions. I","Fragments":["am"]},{"Key":"sure something","Fragments":["more"]},{"Key":"complex could","Fragments":["be"]},{"Key":"be easiest","Fragments":["to"]},{"Key":"easiest to","Fragments":["understand"]},{"Key":"understand if","Fragments":["given"]},{"Key":"if given","Fragments":["the","to"]},{"Key":"pass where","Fragments":["the"]},{"Key":"is 509.","Fragments":["Wouldn't"]},{"Key":"509. Wouldn't","Fragments":["that"]},{"Key":"Wouldn't that","Fragments":["just"]},{"Key":"* you","Fragments":["could"]},{"Key":"replace ```Func\u003cT,","Fragments":["bool\u003e```"]},{"Key":"```Func\u003cT, bool\u003e```","Fragments":["with"]},{"Key":"bool\u003e``` with","Fragments":["```Predicate\u003cT\u003e```"]},{"Key":"* since","Fragments":["your"]},{"Key":"is ```IEnumerable\u003cT\u003e```,","Fragments":["consider"]},{"Key":"```IEnumerable\u003cT\u003e```, consider","Fragments":["using"]},{"Key":"using ```yield","Fragments":["return```"]},{"Key":"```yield return```","Fragments":["instead","in"]},{"Key":"return``` instead","Fragments":["of"]},{"Key":"of filling","Fragments":["a"]},{"Key":"filling a","Fragments":["```List\u003cT\u003e```"]},{"Key":"* why","Fragments":["do"]},{"Key":"the ```Contains```","Fragments":["method?"]},{"Key":"Wow! So","Fragments":["simple!"]},{"Key":"string simplifies","Fragments":["the"]},{"Key":"algorithm and","Fragments":["bit-shifting","the","there's"]},{"Key":"and bit-shifting","Fragments":["is"]},{"Key":"bit-shifting is","Fragments":["more"]},{"Key":"than Math.Pow","Fragments":["or"]},{"Key":"Math.Pow or","Fragments":["even","equivalent","equivalent,"]},{"Key":"even tracking","Fragments":["the"]},{"Key":"tracking the","Fragments":["current"]},{"Key":"also added","Fragments":["a"]},{"Key":"a `!string.IsNullOrWhiteSpace(","Fragments":["binary"]},{"Key":"`!string.IsNullOrWhiteSpace( binary","Fragments":[")`"]},{"Key":"binary )`","Fragments":["to"]},{"Key":")` to","Fragments":["`IsValid`,"]},{"Key":"to `IsValid`,","Fragments":["but"]},{"Key":"`IsValid`, but","Fragments":["won't"]},{"Key":"as years","Fragments":["can't"]},{"Key":"year can't","Fragments":["be","be"]},{"Key":"be negative,","Fragments":["wouldn't"]},{"Key":"negative, wouldn't","Fragments":["it"]},{"Key":"it make","Fragments":["more"]},{"Key":"parameter be","Fragments":["a"]},{"Key":"a uint?","Fragments":["That"]},{"Key":"uint? That","Fragments":["would"]},{"Key":"would clear","Fragments":["out"]},{"Key":"clear out","Fragments":["some"]},{"Key":"the intention","Fragments":["clear.","of"]},{"Key":"Created base","Fragments":["class"]},{"Key":"base class","Fragments":["```NumberSystem```"]},{"Key":"```NumberSystem``` because","Fragments":["this"]},{"Key":"and Binary","Fragments":["are"]},{"Key":"Binary are","Fragments":["essentially"]},{"Key":"essentially the","Fragments":["same"]},{"Key":"the Contains()","Fragments":["method"]},{"Key":"Contains() method","Fragments":["or"]},{"Key":"or else","Fragments":["the"]},{"Key":"else the","Fragments":["two"]},{"Key":"tests Keep_array()","Fragments":["and"]},{"Key":"Keep_array() and","Fragments":["Discard_arrays()"]},{"Key":"and Discard_arrays()","Fragments":["won't"]},{"Key":"Discard_arrays() won't","Fragments":["let"]},{"Key":"won't let","Fragments":["the"]},{"Key":" `word`","Fragments":["can"]},{"Key":"`word` can","Fragments":["be"]},{"Key":"be readonly","Fragments":["if"]},{"Key":"readonly if","Fragments":["you"]},{"Key":"seen `Array.FindAll`;","Fragments":["I"]},{"Key":"`Array.FindAll`; I","Fragments":["think"]},{"Key":"think `Enumerable.Where`","Fragments":["is"]},{"Key":"`Enumerable.Where` is","Fragments":["more"]},{"Key":"lambda `w","Fragments":["=\u003e"]},{"Key":"`w =\u003e","Fragments":["isAnagram(w)`"]},{"Key":"=\u003e isAnagram(w)`","Fragments":["can't"]},{"Key":"isAnagram(w)` can't","Fragments":["you"]},{"Key":"can't you","Fragments":["just"]},{"Key":"method group","Fragments":["`isAnagram`?"]},{"Key":" `sort`","Fragments":["could"]},{"Key":"`sort` could","Fragments":["just"]},{"Key":"return `IEnumerable\u003cchar\u003e`","Fragments":["and"]},{"Key":"`IEnumerable\u003cchar\u003e` and","Fragments":["you"]},{"Key":"the `ToArray()`?","Fragments":["You"]},{"Key":"`ToArray()`? You","Fragments":["could"]},{"Key":"make `sort`","Fragments":["generic"]},{"Key":"`sort` generic","Fragments":["and"]},{"Key":"in `Match()`","Fragments":["too?"]},{"Key":" Comparing","Fragments":["the"]},{"Key":"Comparing the","Fragments":["word's"]},{"Key":"the word's","Fragments":["length"]},{"Key":"word's length","Fragments":["isn't"]},{"Key":"length isn't","Fragments":["needed"]},{"Key":"needed (SequenceEqual","Fragments":["should"]},{"Key":"(SequenceEqual should","Fragments":["handle"]},{"Key":"so it'd","Fragments":["be","be"]},{"Key":"Thanks. I'll","Fragments":["have"]},{"Key":"get vim","Fragments":["set"]},{"Key":"vim set","Fragments":["up"]},{"Key":"up properly","Fragments":["on"]},{"Key":"properly on","Fragments":["my"]},{"Key":"my pi...","Fragments":["1-wide"]},{"Key":"pi... 1-wide","Fragments":["tabs"]},{"Key":"1-wide tabs","Fragments":["aren't"]},{"Key":"tabs aren't","Fragments":["very"]},{"Key":"aren't very","Fragments":["useful"]},{"Key":" Somebody","Fragments":["said"]},{"Key":"Somebody said","Fragments":["they"]},{"Key":"said they","Fragments":["though"]},{"Key":"they though","Fragments":["C#"]},{"Key":"though C#","Fragments":["should"]},{"Key":"C# should","Fragments":["have","be"]},{"Key":"have SKI","Fragments":["combinators."]},{"Key":"SKI combinators.","Fragments":["Maybe"]},{"Key":"combinators. Maybe","Fragments":["I"]},{"Key":"just define","Fragments":["an"]},{"Key":"define an","Fragments":["`I`"]},{"Key":"an `I`","Fragments":["delegate..."]},{"Key":"on measuring","Fragments":["this."]},{"Key":"measuring this.","Fragments":["I"]},{"Key":"this. I","Fragments":["copied"]},{"Key":"I copied","Fragments":["the"]},{"Key":"copied the","Fragments":["code"]},{"Key":"and ran","Fragments":["it."]},{"Key":"The inlined","Fragments":["version"]},{"Key":"inlined version","Fragments":["is"]},{"Key":"indeed faster,","Fragments":["but"]},{"Key":"the Release-version","Fragments":["indicates."]},{"Key":"Release-version indicates.","Fragments":["It"]},{"Key":"indicates. It","Fragments":["just"]},{"Key":"just happens","Fragments":["that"]},{"Key":"happens that","Fragments":["the","failure"]},{"Key":"compiler optimize","Fragments":["away"]},{"Key":"optimize away","Fragments":["the"]},{"Key":"calls as","Fragments":["the"]},{"Key":"results aren't","Fragments":["used."]},{"Key":"aren't used.","Fragments":["But"]},{"Key":"used. But","Fragments":["it"]},{"Key":"still faster","Fragments":["by"]},{"Key":"faster by","Fragments":["a"]},{"Key":"On my","Fragments":["machine,"]},{"Key":"my machine,","Fragments":["the"]},{"Key":"machine, the","Fragments":["slowest"]},{"Key":"the slowest","Fragments":["version"]},{"Key":"slowest version","Fragments":["runs"]},{"Key":"version runs","Fragments":["10"]},{"Key":"runs 10","Fragments":["million"]},{"Key":"million times","Fragments":["in"]},{"Key":"times in","Fragments":["56"]},{"Key":"in 56","Fragments":["ms."]},{"Key":"56 ms.","Fragments":["That"]},{"Key":"ms. That","Fragments":["is"]},{"Key":"is 5.6","Fragments":["ns"]},{"Key":"5.6 ns","Fragments":["for"]},{"Key":"ns for","Fragments":["a"]},{"Key":"single run.","Fragments":["I"]},{"Key":"run. I","Fragments":["would"]},{"Key":"is fast","Fragments":["enough."]},{"Key":"fast enough.","Fragments":["My"]},{"Key":"enough. My","Fragments":["submission"]},{"Key":"My submission","Fragments":["is"]},{"Key":"even slower,","Fragments":["but"]},{"Key":"slower, but","Fragments":["still"]},{"Key":"still clocks","Fragments":["in"]},{"Key":"clocks in","Fragments":["\u003c","at"]},{"Key":"in \u003c","Fragments":["8"]},{"Key":"\u003c 8","Fragments":["ns."]},{"Key":"say all","Fragments":["version"]},{"Key":"all version","Fragments":["are"]},{"Key":"version are","Fragments":["more"]},{"Key":"than fast","Fragments":["enough."]},{"Key":"compiler was","Fragments":["smart"]},{"Key":"was smart","Fragments":["enough"]},{"Key":"to inline","Fragments":["the"]},{"Key":"the variables,","Fragments":["but"]},{"Key":"variables, but","Fragments":["apparently"]},{"Key":"but apparently","Fragments":["not."]},{"Key":"apparently not.","Fragments":["It"]},{"Key":"at inlining","Fragments":["methods"]},{"Key":"inlining methods","Fragments":["though."]},{"Key":"methods though.","Fragments":["So"]},{"Key":"though. So","Fragments":["if"]},{"Key":"we replace","Fragments":["the"]},{"Key":"with methods,","Fragments":["we"]},{"Key":"methods, we","Fragments":["get"]},{"Key":"version which","Fragments":["is"]},{"Key":"as fast,","Fragments":["but"]},{"Key":"but somewhat","Fragments":["more"]},{"Key":"somewhat more","Fragments":["readable:","complicated"]},{"Key":"if (IsDivisibleByFourHundred(year))","Fragments":["return"]},{"Key":"(IsDivisibleByFourHundred(year)) return","Fragments":["true;"]},{"Key":"if (IsDivisibleByOneHundred(year))","Fragments":["return"]},{"Key":"(IsDivisibleByOneHundred(year)) return","Fragments":["false;"]},{"Key":" static","Fragments":["bool","bool","bool","Scrabble()","void","void","constructor"]},{"Key":"bool IsDivisibleByOneHundred(int","Fragments":["year)"]},{"Key":"return year%100","Fragments":["=="]},{"Key":"bool IsDivisibleByFour(int","Fragments":["year)"]},{"Key":"bool IsDivisibleByFourHundred(int","Fragments":["year)"]},{"Key":"you all,","Fragments":["I"]},{"Key":"all, I","Fragments":["learned"]},{"Key":"something today","Fragments":[":-)"]},{"Key":"Why 'protected","Fragments":["internal'"]},{"Key":"'protected internal'","Fragments":["as"]},{"Key":"internal' as","Fragments":["opposed"]},{"Key":"to 'private'","Fragments":["do"]},{"Key":"'private' do","Fragments":["you"]},{"Key":"be subclassed","Fragments":["at"]},{"Key":"subclassed at","Fragments":["some"]},{"Key":"String already","Fragments":["implements"]},{"Key":"already implements","Fragments":["IEnumerable\u003cchar\u003e,"]},{"Key":"implements IEnumerable\u003cchar\u003e,","Fragments":["no"]},{"Key":"IEnumerable\u003cchar\u003e, no","Fragments":["need"]},{"Key":"to ToCharArray()","Fragments":["first"]},{"Key":"name `equal`","Fragments":["is"]},{"Key":"`equal` is","Fragments":["kind"]},{"Key":"of weird","Fragments":["to"]},{"Key":"conditional `equal","Fragments":["\u0026\u0026"]},{"Key":"`equal \u0026\u0026","Fragments":["x"]},{"Key":"\u0026\u0026 x","Fragments":["!="]},{"Key":"!= y`","Fragments":["(it's"]},{"Key":"y` (it's","Fragments":["equal"]},{"Key":"(it's equal","Fragments":["and"]},{"Key":"equal and","Fragments":["not"]},{"Key":"don't modify","Fragments":["it"]},{"Key":"later vSource","Fragments":["can"]},{"Key":"vSource can","Fragments":["be"]},{"Key":" Regardless","Fragments":["of"]},{"Key":"sense first,","Fragments":["don't"]},{"Key":"first, don't","Fragments":["be"]},{"Key":"away that","Fragments":["approach"]},{"Key":"approach after","Fragments":["you"]},{"Key":"Doing `if","Fragments":["(Contains())"]},{"Key":"`if (Contains())","Fragments":["{"]},{"Key":"(Contains()) {","Fragments":["Remove();"]},{"Key":"{ Remove();","Fragments":["..."]},{"Key":"Remove(); ...","Fragments":["`"]},{"Key":"... `","Fragments":["means"]},{"Key":"` means","Fragments":["you're"]},{"Key":"means you're","Fragments":["doing"]},{"Key":"doing double","Fragments":["the"]},{"Key":"each letter.","Fragments":["Just"]},{"Key":"letter. Just","Fragments":["call"]},{"Key":"Just call","Fragments":["Remove()"]},{"Key":"call Remove()","Fragments":["then"]},{"Key":"Remove() then","Fragments":["use"]},{"Key":"use Remove's","Fragments":["return"]},{"Key":"Remove's return","Fragments":["value."]},{"Key":"shouldn't make","Fragments":["a"]},{"Key":"a difference,","Fragments":["but"]},{"Key":"in general","Fragments":["using","so","don't","but","over"]},{"Key":"general using","Fragments":["HashSet"]},{"Key":"using HashSet","Fragments":["to"]},{"Key":"represent a","Fragments":["set"]},{"Key":"List (hint:","Fragments":["what's"]},{"Key":"(hint: what's","Fragments":["the"]},{"Key":"of skipping","Fragments":["the"]},{"Key":"loop body","Fragments":["with"]},{"Key":"`if (couldBeAMatch)`","Fragments":["you"]},{"Key":"(couldBeAMatch)` you","Fragments":["could"]},{"Key":"could `break;`","Fragments":["right"]},{"Key":"`break;` right","Fragments":["after"]},{"Key":"after `couldBeAMatch","Fragments":["="]},{"Key":"`couldBeAMatch =","Fragments":["false;`"]},{"Key":"Your method","Fragments":["is"]},{"Key":"is 5","Fragments":["blocks","lines"]},{"Key":"5 blocks","Fragments":["deep!"]},{"Key":"blocks deep!","Fragments":["It"]},{"Key":"deep! It","Fragments":["really"]},{"Key":"really hurts","Fragments":["code"]},{"Key":"hurts code","Fragments":["readability"]},{"Key":"readability to","Fragments":["have"]},{"Key":"have so","Fragments":["much"]},{"Key":"much nesting.","Fragments":["You"]},{"Key":"nesting. You","Fragments":["could"]},{"Key":"remove one","Fragments":["level"]},{"Key":"nesting by","Fragments":["changing","inverting"]},{"Key":" block","Fragments":["to"]},{"Key":"Why why","Fragments":["why"]},{"Key":"why why","Fragments":["would"]},{"Key":"you catch","Fragments":["and"]},{"Key":"catch and","Fragments":["swallow"]},{"Key":"and swallow","Fragments":["all","it"]},{"Key":"swallow all","Fragments":["exceptions"]},{"Key":"all exceptions","Fragments":["from"]},{"Key":"your method?","Fragments":["If"]},{"Key":"method? If","Fragments":["simple"]},{"Key":"If simple","Fragments":["code"]},{"Key":"exception then","Fragments":["it","catching"]},{"Key":"a bug,","Fragments":["not"]},{"Key":"bug, not","Fragments":["swept"]},{"Key":"not swept","Fragments":["under"]},{"Key":"swept under","Fragments":["the"]},{"Key":" Modifying","Fragments":["a"]},{"Key":"Modifying a","Fragments":["variable"]},{"Key":"variable during","Fragments":["a"]},{"Key":"during a","Fragments":["Linq"]},{"Key":"Linq call","Fragments":["is"]},{"Key":"is normally","Fragments":["a","a"]},{"Key":"normally a","Fragments":["bad","leap"]},{"Key":"bad idea.","Fragments":["What"]},{"Key":"idea. What","Fragments":["if"]},{"Key":"future version","Fragments":["of"]},{"Key":"Linq decides","Fragments":["to"]},{"Key":"decides to","Fragments":["parallelize"]},{"Key":"to parallelize","Fragments":["the"]},{"Key":"parallelize the","Fragments":["All"]},{"Key":"the All","Fragments":["method?"]},{"Key":"All method?","Fragments":["The"]},{"Key":"method? The","Fragments":["beauty"]},{"Key":"The beauty","Fragments":["of"]},{"Key":"beauty of","Fragments":["Linq"]},{"Key":"not having","Fragments":["to","any","(yet)"]},{"Key":"about side","Fragments":["effects."]},{"Key":" Relying","Fragments":["on"]},{"Key":"Relying on","Fragments":["FirstOrDefault"]},{"Key":"on FirstOrDefault","Fragments":["to"]},{"Key":"FirstOrDefault to","Fragments":["return","handle"]},{"Key":"the 0","Fragments":["character"]},{"Key":"0 character","Fragments":["seems"]},{"Key":"character seems","Fragments":["weird."]},{"Key":"seems weird.","Fragments":["It'd"]},{"Key":"weird. It'd","Fragments":["be"]},{"Key":"be broken","Fragments":["if"]},{"Key":"broken if","Fragments":["a"]},{"Key":"user had","Fragments":["a"]},{"Key":"null character","Fragments":["in"]},{"Key":"Why bother","Fragments":["having"]},{"Key":"bother having","Fragments":["a"]},{"Key":"a no-arg","Fragments":["constructor?"]},{"Key":"use `protected`?","Fragments":["Use"]},{"Key":"`protected`? Use","Fragments":["`private`"]},{"Key":"Use `private`","Fragments":["if"]},{"Key":"`private` if","Fragments":["that's"]},{"Key":"if that's","Fragments":["what","what","more"]},{"Key":"suggest writing","Fragments":["some"]},{"Key":"writing some","Fragments":["comments"]},{"Key":"you through","Fragments":["your"]},{"Key":"through your","Fragments":["thought"]},{"Key":"now, if","Fragments":["you","a"]},{"Key":"statements, it","Fragments":["will"]},{"Key":"true regardless","Fragments":["if"]},{"Key":"regardless if","Fragments":["it's"]},{"Key":"by four,","Fragments":["as"]},{"Key":"four, as","Fragments":["long"]},{"Key":"and 400.","Fragments":["For","So"]},{"Key":"400. For","Fragments":["example,"]},{"Key":"example, 1999,","Fragments":["would"]},{"Key":"1999, would","Fragments":["return"]},{"Key":"Try starting","Fragments":["off"]},{"Key":"basic case","Fragments":["of"]},{"Key":"of 'the","Fragments":["year"]},{"Key":"'the year","Fragments":["being","being"]},{"Key":"by four'","Fragments":["and","I"]},{"Key":"four' and","Fragments":["work"]},{"Key":"and work","Fragments":["in"]},{"Key":"cases within","Fragments":["that"]},{"Key":" @tavares","Fragments":["But"]},{"Key":"@tavares But","Fragments":["if"]},{"Key":"loop, how","Fragments":["would"]},{"Key":" You'll","Fragments":["want"]},{"Key":"You'll want","Fragments":["to"]},{"Key":"the ```yield```","Fragments":["keyword"]},{"Key":"```yield``` keyword","Fragments":["-"]},{"Key":"- specifically","Fragments":["```yield"]},{"Key":"specifically ```yield","Fragments":["return```"]},{"Key":"return``` in","Fragments":["this"]},{"Key":"the comment;","Fragments":["that"]},{"Key":"comment; that","Fragments":["was"]},{"Key":"was from","Fragments":["something"]},{"Key":"something previous","Fragments":["I"]},{"Key":"previous I","Fragments":["tried"]},{"Key":"tried and","Fragments":["I"]},{"Key":"problem. I'm","Fragments":["thinking"]},{"Key":"thinking next","Fragments":["I"]},{"Key":"next I","Fragments":["should"]},{"Key":"probably try","Fragments":["out"]},{"Key":"some languages","Fragments":["that"]},{"Key":"languages that","Fragments":["I"]},{"Key":"I *don't*","Fragments":["know"]},{"Key":"*don't* know","Fragments":[";)"]},{"Key":"You inspired","Fragments":["me"]},{"Key":"program with","Fragments":["a"]},{"Key":"generic sort","Fragments":["extension"]},{"Key":"sort extension","Fragments":["that"]},{"Key":"extension that","Fragments":["didn't"]},{"Key":"need `x","Fragments":["=\u003e"]},{"Key":"=\u003e x`.","Fragments":["It"]},{"Key":"x`. It","Fragments":["looked"]},{"Key":"It looked","Fragments":["like","like"]},{"Key":"class LinqExtensions","Fragments":["{"]},{"Key":"static IEnumerable\u003cT\u003e","Fragments":["OrderBy\u003cT\u003e(this"]},{"Key":"IEnumerable\u003cT\u003e OrderBy\u003cT\u003e(this","Fragments":["IEnumerable\u003cT\u003e"]},{"Key":"OrderBy\u003cT\u003e(this IEnumerable\u003cT\u003e","Fragments":["values)"]},{"Key":"IEnumerable\u003cT\u003e values)","Fragments":["{"]},{"Key":"return values.OrderBy(t","Fragments":["=\u003e"]},{"Key":"values.OrderBy(t =\u003e","Fragments":["t);"]},{"Key":"like `word.OrderBy()`","Fragments":[":)"]},{"Key":"avoid code","Fragments":["duplication"]},{"Key":"duplication in","Fragments":["```Score()```","your"]},{"Key":"in ```Score()```","Fragments":["and"]},{"Key":"```Score()``` and","Fragments":["```Score(string"]},{"Key":"and ```Score(string","Fragments":["word)```"]},{"Key":"```Score(string word)```","Fragments":["by"]},{"Key":"word)``` by","Fragments":["having"]},{"Key":"one call","Fragments":["the","to"]},{"Key":"other. Looks","Fragments":["good"]},{"Key":"if invalid","Fragments":["old"]},{"Key":"invalid old","Fragments":["data"]},{"Key":"in (null,","Fragments":["duplicate"]},{"Key":"(null, duplicate","Fragments":["letters)"]},{"Key":"duplicate letters)","Fragments":["so"]},{"Key":"letters) so","Fragments":["you"]},{"Key":"probably cover","Fragments":["those"]},{"Key":"cover those","Fragments":["cases."]},{"Key":"those cases.","Fragments":["Also,"]},{"Key":"cases. Also,","Fragments":["storing","I"]},{"Key":"Also, storing","Fragments":["```pair.Key```"]},{"Key":"storing ```pair.Key```","Fragments":["in"]},{"Key":"```pair.Key``` in","Fragments":["a"]},{"Key":"separate variable","Fragments":["is"]},{"Key":"somewhat unneccesary.","Fragments":["Looks"]},{"Key":"unneccesary. Looks","Fragments":["good"]},{"Key":" @pansy,","Fragments":["thanks!"]},{"Key":"@pansy, thanks!","Fragments":["I"]},{"Key":"some research","Fragments":["on"]},{"Key":"people's posts","Fragments":["and"]},{"Key":"posts and","Fragments":["reached"]},{"Key":"and reached","Fragments":["the"]},{"Key":"reached the","Fragments":["same"]},{"Key":"Because the","Fragments":["lengths","of"]},{"Key":"lengths of","Fragments":["the"]},{"Key":"three sides","Fragments":["come"]},{"Key":"sides come","Fragments":["from"]},{"Key":"outside your","Fragments":["class,","class."]},{"Key":"class, you","Fragments":["should"]},{"Key":"should account","Fragments":["for"]},{"Key":"for possible","Fragments":["accuracy"]},{"Key":"possible accuracy","Fragments":["problems"]},{"Key":"accuracy problems","Fragments":["in"]},{"Key":"problems in","Fragments":["your"]},{"Key":"your comparisons.","Fragments":["Otherwise"]},{"Key":"comparisons. Otherwise","Fragments":["looks"]},{"Key":"and future","Fragments":["exercises,"]},{"Key":"exercises, you","Fragments":["should"]},{"Key":"should write","Fragments":["the"]},{"Key":"as specified","Fragments":["in"]},{"Key":"verify your","Fragments":["results"]},{"Key":"your results","Fragments":["are"]},{"Key":"results are","Fragments":["correct."]},{"Key":"correct. Do","Fragments":["you"]},{"Key":"that supports","Fragments":["NUnit?"]},{"Key":"yourself some","Fragments":["effort"]},{"Key":"some effort","Fragments":["and"]},{"Key":"effort and","Fragments":["variables"]},{"Key":"variables by","Fragments":["using"]},{"Key":"Yes, you","Fragments":["can"]},{"Key":"do SKI","Fragments":["combinators"]},{"Key":"SKI combinators","Fragments":["in","are"]},{"Key":"combinators in","Fragments":["C#,"]},{"Key":"C#, see","Fragments":["[this"]},{"Key":"see [this","Fragments":["article](http://community.bartdesmet.net/blogs/bart/archive/2009/08/17/mis-using-c-4-0-dynamic-type-free-lambda-calculus-church-numerals-and-more.aspx)."]},{"Key":"[this article](http://community.bartdesmet.net/blogs/bart/archive/2009/08/17/mis-using-c-4-0-dynamic-type-free-lambda-calculus-church-numerals-and-more.aspx).","Fragments":["SKI"]},{"Key":"article](http://community.bartdesmet.net/blogs/bart/archive/2009/08/17/mis-using-c-4-0-dynamic-type-free-lambda-calculus-church-numerals-and-more.aspx). SKI","Fragments":["combinators"]},{"Key":"combinators are","Fragments":["a"]},{"Key":"separate heading,","Fragments":["but"]},{"Key":"heading, but","Fragments":["the"]},{"Key":"whole thing","Fragments":["is"]},{"Key":"probably an","Fragments":["interesting"]},{"Key":"interesting read","Fragments":["if"]},{"Key":"you're new","Fragments":["to"]},{"Key":"Hi @eladio-walsh","Fragments":[","]},{"Key":"@eladio-walsh ,","Fragments":["thanks"]},{"Key":", thanks","Fragments":["for","for"]},{"Key":"the tips!","Fragments":["To"]},{"Key":"tips! To","Fragments":["be"]},{"Key":"be frank,","Fragments":["I"]},{"Key":"frank, I","Fragments":["don't"]},{"Key":"reasonable grasp","Fragments":["of"]},{"Key":"grasp of","Fragments":["the"]},{"Key":"syntax, and","Fragments":["I"]},{"Key":"know other","Fragments":["languages"]},{"Key":"languages well","Fragments":["enough"]},{"Key":"well enough","Fragments":["to"]},{"Key":"for, but","Fragments":["I'm"]},{"Key":"the libraries.","Fragments":["That's"]},{"Key":"libraries. That's","Fragments":["my"]},{"Key":"my explanation","Fragments":["for"]},{"Key":"explanation for","Fragments":["Array.FindAll"]},{"Key":"for Array.FindAll","Fragments":["-"]},{"Key":"Array.FindAll -","Fragments":["it"]},{"Key":"first result","Fragments":["I"]},{"Key":"result I","Fragments":["found"]},{"Key":"found on","Fragments":["Google","this"]},{"Key":"on Google","Fragments":["that"]},{"Key":"Google that","Fragments":["did"]},{"Key":"that did","Fragments":["what"]},{"Key":"did what","Fragments":["I","I"]},{"Key":"that Match","Fragments":["could"]},{"Key":"Match could","Fragments":["return"]},{"Key":"could return","Fragments":["IEnumerable\u003cstring\u003e"]},{"Key":"return IEnumerable\u003cstring\u003e","Fragments":["and"]},{"Key":"still satisfy","Fragments":["Is.EqualTo."]},{"Key":"satisfy Is.EqualTo.","Fragments":["But"]},{"Key":"Is.EqualTo. But","Fragments":["it"]},{"Key":"does -","Fragments":["nice."]},{"Key":"next version","Fragments":["implements","I"]},{"Key":"version implements","Fragments":["all"]},{"Key":"implements all","Fragments":["your"]},{"Key":"your changes","Fragments":["except"]},{"Key":"changes except","Fragments":["making"]},{"Key":"except making","Fragments":["sort"]},{"Key":"making sort","Fragments":["generic."]},{"Key":"sort generic.","Fragments":["I"]},{"Key":"generic. I","Fragments":["tried"]},{"Key":"tried that,","Fragments":["and"]},{"Key":"that, and","Fragments":["it"]},{"Key":"was horribly","Fragments":["clunky"]},{"Key":"horribly clunky","Fragments":["and"]},{"Key":"clunky and","Fragments":["verbose."]},{"Key":"and verbose.","Fragments":["Then"]},{"Key":"verbose. Then","Fragments":["I"]},{"Key":"tried a","Fragments":["generic"]},{"Key":"generic id","Fragments":["function"]},{"Key":"id function","Fragments":["to","should"]},{"Key":"pass to","Fragments":["OrderBy,"]},{"Key":"to OrderBy,","Fragments":["but"]},{"Key":"OrderBy, but","Fragments":["it"]},{"Key":"required that","Fragments":["you"]},{"Key":"type the","Fragments":["value"]},{"Key":"value being","Fragments":["passed","a"]},{"Key":"to OrderBy","Fragments":["was,"]},{"Key":"OrderBy was,","Fragments":["which"]},{"Key":"was, which","Fragments":["seemed"]},{"Key":"which seemed","Fragments":["inelegant"]},{"Key":"seemed inelegant","Fragments":["to"]},{"Key":"inelegant to","Fragments":["me"]},{"Key":"me -","Fragments":["a"]},{"Key":"good id","Fragments":["function"]},{"Key":"So then","Fragments":["I"]},{"Key":"to pure","Fragments":["C#,"]},{"Key":"pure C#,","Fragments":["and"]},{"Key":"just passed","Fragments":["(c=\u003ec)"]},{"Key":"passed (c=\u003ec)","Fragments":["to"]},{"Key":"(c=\u003ec) to","Fragments":["OrderBy."]},{"Key":"to OrderBy.","Fragments":["I"]},{"Key":"OrderBy. I","Fragments":["think"]},{"Key":"cleaner than","Fragments":["the"]},{"Key":"Thanks -","Fragments":["i"]},{"Key":"i didn't","Fragments":["think"]},{"Key":"those situations","Fragments":["-"]},{"Key":"situations -","Fragments":["good"]},{"Key":"- good","Fragments":["point","to"]},{"Key":"point i","Fragments":["could"]},{"Key":"i could","Fragments":["have"]},{"Key":"have placed","Fragments":["pair.key"]},{"Key":"placed pair.key","Fragments":["right"]},{"Key":"pair.key right","Fragments":["in"]},{"Key":"Maybe using","Fragments":["\u003c="]},{"Key":"using \u003c=","Fragments":["1581"]},{"Key":"\u003c= 1581","Fragments":["would"]},{"Key":"1581 would","Fragments":["be"]},{"Key":" ```InvalidNucleotideException```","Fragments":["and"]},{"Key":"```InvalidNucleotideException``` and","Fragments":["```GeneBase```"]},{"Key":"and ```GeneBase```","Fragments":["reside"]},{"Key":"```GeneBase``` reside","Fragments":["in"]},{"Key":"reside in","Fragments":["a"]},{"Key":"a shared","Fragments":["library"]},{"Key":"shared library","Fragments":["for"]},{"Key":"library for","Fragments":["all"]},{"Key":"all exercises,","Fragments":["```DNA```"]},{"Key":"exercises, ```DNA```","Fragments":["is"]},{"Key":"```DNA``` is","Fragments":["the"]},{"Key":"the updated","Fragments":["class"]},{"Key":"updated class","Fragments":["used"]},{"Key":"class used","Fragments":["in"]},{"Key":"in Nucleotide","Fragments":["Count"]},{"Key":"Nucleotide Count","Fragments":["exercise."]},{"Key":"Count exercise.","Fragments":["Code"]},{"Key":"exercise. Code","Fragments":["included"]},{"Key":"Code included","Fragments":["here"]},{"Key":"included here","Fragments":["for"]},{"Key":"here for","Fragments":["the"]},{"Key":"of completeness","Fragments":["since",":)"]},{"Key":"completeness since","Fragments":["we"]},{"Key":"can't submit","Fragments":["multiple"]},{"Key":"submit multiple","Fragments":["files."]},{"Key":" Todo:","Fragments":["Validation"]},{"Key":"Todo: Validation","Fragments":["methods"]},{"Key":"Validation methods","Fragments":["for"]},{"Key":"for DNA","Fragments":["/","/"]},{"Key":"DNA /","Fragments":["RNA","RNA"]},{"Key":"/ RNA","Fragments":["sequences","instances."]},{"Key":"RNA sequences","Fragments":["that"]},{"Key":"sequences that","Fragments":["allow"]},{"Key":"allow validation","Fragments":["(and"]},{"Key":"validation (and","Fragments":["subsequent"]},{"Key":"(and subsequent","Fragments":["conversion)"]},{"Key":"subsequent conversion)","Fragments":["without"]},{"Key":"conversion) without","Fragments":["the"]},{"Key":"Got some","Fragments":["help"]},{"Key":"help over","Fragments":["at"]},{"Key":"at stack","Fragments":["overflow"]},{"Key":"stack overflow","Fragments":["so"]},{"Key":"overflow so","Fragments":["now"]},{"Key":"now all","Fragments":["test"]},{"Key":"all test","Fragments":["pass."]},{"Key":"even simpler","Fragments":["if","as"]},{"Key":"the break","Fragments":["keyword."]},{"Key":"The details","Fragments":["are"]},{"Key":"little cryptic","Fragments":["for"]},{"Key":"cryptic for","Fragments":["my"]},{"Key":"my taste,","Fragments":["but"]},{"Key":"taste, but","Fragments":["the"]},{"Key":"methods says","Fragments":["what"]},{"Key":"says what","Fragments":["they","it"]},{"Key":"do which","Fragments":["is"]},{"Key":"good. And","Fragments":["I"]},{"Key":"like way","Fragments":["you","overkill"]},{"Key":"you structured","Fragments":["the"]},{"Key":"structured the","Fragments":["`Hey`method."]},{"Key":"use curly","Fragments":["braces"]},{"Key":"braces or","Fragments":["place"]},{"Key":"or place","Fragments":["if"]},{"Key":"feel safer","Fragments":["that"]},{"Key":"safer that","Fragments":["way."]},{"Key":"Maybe consider","Fragments":["renaming"]},{"Key":"consider renaming","Fragments":["the"]},{"Key":"that \"dic\"","Fragments":["represents"]},{"Key":"\"dic\" represents","Fragments":["the"]},{"Key":"represents the","Fragments":["dictionary,"]},{"Key":"what does","Fragments":["\"c\""]},{"Key":"does \"c\"","Fragments":["stand"]},{"Key":"\"c\" stand","Fragments":["for?"]},{"Key":"You're correct.","Fragments":["It'd"]},{"Key":"correct. It'd","Fragments":["read"]},{"Key":"It'd read","Fragments":["more"]},{"Key":"The program","Fragments":["is","first"]},{"Key":"is, however,","Fragments":["several"]},{"Key":"however, several","Fragments":["'helper'"]},{"Key":"several 'helper'","Fragments":["methods"]},{"Key":"'helper' methods","Fragments":["don't"]},{"Key":"methods don't","Fragments":["necessarily"]},{"Key":"necessarily improve","Fragments":["readability"]},{"Key":"readability when","Fragments":["they"]},{"Key":"do basic","Fragments":["operations"]},{"Key":"basic operations","Fragments":["such"]},{"Key":"operations such","Fragments":["as"]},{"Key":"as that.","Fragments":["I'd"]},{"Key":"that. I'd","Fragments":["consider"]},{"Key":"consider writing","Fragments":["them"]},{"Key":"writing them","Fragments":["within"]},{"Key":"them within","Fragments":["the"]},{"Key":"simply commenting","Fragments":["them."]},{"Key":"methods, private","Fragments":["and"]},{"Key":"and public,","Fragments":["in"]},{"Key":"public, in","Fragments":["C#"]},{"Key":"is typically","Fragments":["capitalized."]},{"Key":"Interesting to","Fragments":["see"]},{"Key":"of Regular","Fragments":["Expressions."]},{"Key":"Regular Expressions.","Fragments":["I"]},{"Key":"Expressions. I","Fragments":["didn't"]},{"Key":"them properly","Fragments":["so"]},{"Key":"properly so","Fragments":["I"]},{"Key":"without them.","Fragments":["This"]},{"Key":"is interesting","Fragments":["for","but","for","for"]},{"Key":"they work","Fragments":["though."]},{"Key":"enum member","Fragments":["though."]},{"Key":"member though.","Fragments":["I"]},{"Key":"think `return","Fragments":["RespondTo.Whatever`"]},{"Key":"`return RespondTo.Whatever`","Fragments":["reads"]},{"Key":"RespondTo.Whatever` reads","Fragments":["better."]},{"Key":" Tip:","Fragments":["`letters.Length"]},{"Key":"Tip: `letters.Length","Fragments":["\u003e"]},{"Key":"`letters.Length \u003e","Fragments":["0`"]},{"Key":"\u003e 0`","Fragments":["can","condition"]},{"Key":"0` can","Fragments":["also"]},{"Key":"written as","Fragments":["`letters.Any()`"]},{"Key":" Creative","Fragments":["use"]},{"Key":"Creative use","Fragments":["of"]},{"Key":"of `int.TryParse`","Fragments":[";-)"]},{"Key":"that `char`","Fragments":["has"]},{"Key":"`char` has","Fragments":["an"]},{"Key":"an `IsNumber`?","Fragments":["Then"]},{"Key":"`IsNumber`? Then","Fragments":["you"]},{"Key":"var isNumeric","Fragments":["="]},{"Key":"isNumeric =","Fragments":["message.All(c"]},{"Key":"= message.All(c","Fragments":["=\u003e"]},{"Key":"message.All(c =\u003e","Fragments":["c.IsNumber(c))"]},{"Key":"would extract","Fragments":["`string.IsNullOrWhiteSpace(phrase)`","the"]},{"Key":"extract `string.IsNullOrWhiteSpace(phrase)`","Fragments":["to"]},{"Key":"`string.IsNullOrWhiteSpace(phrase)` to","Fragments":["its"]},{"Key":"code consistent.","Fragments":["Except"]},{"Key":"consistent. Except","Fragments":["from"]},{"Key":"Except from","Fragments":["that,"]},{"Key":"that, I'm","Fragments":["jealous"]},{"Key":"I'm jealous","Fragments":["of"]},{"Key":"and clear","Fragments":["you","to"]},{"Key":"clear you","Fragments":["made"]},{"Key":"four calls","Fragments":["to"]},{"Key":"to `GetResponse`.","Fragments":["I"]},{"Key":"`GetResponse`. I","Fragments":["would"]},{"Key":"would split","Fragments":["the"]},{"Key":"1. Determine","Fragments":["the"]},{"Key":"Determine the","Fragments":["response"]},{"Key":"2. Returning","Fragments":["the"]},{"Key":"var response","Fragments":["="]},{"Key":"response =","Fragments":["GetResponseKind(statement);"]},{"Key":"var text","Fragments":["="]},{"Key":"text =","Fragments":["GetResponseText(response);"]},{"Key":"methods anyway.","Fragments":["It's"]},{"Key":"anyway. It's","Fragments":["more"]},{"Key":"more symmetric","Fragments":["that"]},{"Key":"symmetric that","Fragments":["way."]},{"Key":"were guidelines","Fragments":["against"]},{"Key":"guidelines against","Fragments":["them"]},{"Key":"against them","Fragments":["on"]},{"Key":"( str.IsShouting()","Fragments":[")"]},{"Key":"( str.IsAsking()","Fragments":[")"]},{"Key":"( str.IsSilent()","Fragments":[")"]},{"Key":" @desiree,","Fragments":["can"]},{"Key":"@desiree, can","Fragments":["you"]},{"Key":"me some","Fragments":["guidance","good"]},{"Key":"some guidance","Fragments":["as"]},{"Key":"guidance as","Fragments":["to"]},{"Key":"use \u003ccode\u003ebreak\u003c/code\u003e?","Fragments":["I'm"]},{"Key":"\u003ccode\u003ebreak\u003c/code\u003e? I'm","Fragments":["totally"]},{"Key":"I'm totally","Fragments":["confused"]},{"Key":"totally confused","Fragments":["as"]},{"Key":"confused as","Fragments":["to"]},{"Key":"notice anything","Fragments":["in"]},{"Key":"readme stating","Fragments":["that"]},{"Key":"results string[]","Fragments":["had"]},{"Key":"string[] had","Fragments":["to"]},{"Key":"sorted into","Fragments":["alphabetical"]},{"Key":"into alphabetical","Fragments":["order,"]},{"Key":"Fixed the","Fragments":["yell","bugs"]},{"Key":"the yell","Fragments":["if"]},{"Key":"yell if","Fragments":["statement"]},{"Key":"statement by","Fragments":["checking"]},{"Key":"message contains","Fragments":["any"]},{"Key":"contains any","Fragments":["letters.","letters"]},{"Key":"guys. @jarvis","Fragments":[","]},{"Key":"@jarvis ,","Fragments":["thanks"]},{"Key":"for looking","Fragments":["into","at"]},{"Key":"execution times.","Fragments":["Your"]},{"Key":"times. Your","Fragments":["version"]},{"Key":"Your version","Fragments":["posted"]},{"Key":"version posted","Fragments":["above"]},{"Key":"posted above","Fragments":["is"]},{"Key":"iteration, although","Fragments":["I"]},{"Key":"prefer your","Fragments":["\"IsLeap\"","method."]},{"Key":"your \"IsLeap\"","Fragments":["method"]},{"Key":"\"IsLeap\" method","Fragments":["to"]},{"Key":"the food","Fragments":["for"]},{"Key":"food for","Fragments":["thought,"]},{"Key":"for thought,","Fragments":["you"]},{"Key":"thought, you","Fragments":["are"]},{"Key":"And indeed,","Fragments":["an"]},{"Key":"indeed, an","Fragments":["Tuple"]},{"Key":"an Tuple","Fragments":["array"]},{"Key":"Tuple array","Fragments":["would"]},{"Key":"sure really","Fragments":["how"]},{"Key":"really how","Fragments":["that"]},{"Key":"that foreach","Fragments":["suppose"]},{"Key":"foreach suppose","Fragments":["to"]},{"Key":"But in","Fragments":["regards"]},{"Key":"regards of","Fragments":["expensive"]},{"Key":"of expensive","Fragments":["reverse,"]},{"Key":"expensive reverse,","Fragments":["I"]},{"Key":"reverse, I","Fragments":["now"]},{"Key":"I now","Fragments":["use"]},{"Key":"now use","Fragments":["a"]},{"Key":"loop from","Fragments":["string.length-1","Create"]},{"Key":"from string.length-1","Fragments":["to"]},{"Key":"string.length-1 to","Fragments":["0"]},{"Key":"While clever","Fragments":["and"]},{"Key":"and concise,","Fragments":["the"]},{"Key":"concise, the","Fragments":["single"]},{"Key":"line multi-part","Fragments":["logical"]},{"Key":"multi-part logical","Fragments":["statement"]},{"Key":"logical statement","Fragments":["does"]},{"Key":"statement does","Fragments":["not"]},{"Key":"not lend","Fragments":["itself"]},{"Key":"lend itself","Fragments":["to"]},{"Key":"itself to","Fragments":["readability."]},{"Key":"to readability.","Fragments":["Since"]},{"Key":"readability. Since","Fragments":["more"]},{"Key":"Since more","Fragments":["time"]},{"Key":"be spent","Fragments":["reading"]},{"Key":"spent reading","Fragments":["your"]},{"Key":"then you'll","Fragments":["spend"]},{"Key":"you'll spend","Fragments":["writing"]},{"Key":"spend writing","Fragments":["it,"]},{"Key":"writing it,","Fragments":["I'd"]},{"Key":"Currently the","Fragments":["if"]},{"Key":"for yells","Fragments":["incorrectly"]},{"Key":"yells incorrectly","Fragments":["detects"]},{"Key":"incorrectly detects","Fragments":["sentences"]},{"Key":"detects sentences","Fragments":["of"]},{"Key":"sentences of","Fragments":["all"]},{"Key":"all numbers","Fragments":["as"]},{"Key":"numbers as","Fragments":["uppercase"]},{"Key":"as uppercase","Fragments":["sentences."]},{"Key":"I not","Fragments":["so"]},{"Key":"so sure","Fragments":["about"]},{"Key":"the 1999","Fragments":["cause"]},{"Key":"1999 cause","Fragments":["the"]},{"Key":"the %100","Fragments":["will"]},{"Key":"%100 will","Fragments":["return"]},{"Key":"number (not","Fragments":["zero)"]},{"Key":"(not zero)","Fragments":["and"]},{"Key":"zero) and","Fragments":["with"]},{"Key":"with !","Fragments":["it"]},{"Key":"! it","Fragments":["will"]},{"Key":"not enter","Fragments":["so"]},{"Key":"enter so","Fragments":["it"]},{"Key":"will go","Fragments":["to"]},{"Key":"return year%4==0","Fragments":["which"]},{"Key":"year%4==0 which","Fragments":["will"]},{"Key":"be false,","Fragments":["otherwise"]},{"Key":"false, otherwise","Fragments":["yes"]},{"Key":"otherwise yes","Fragments":["I"]},{"Key":"yes I","Fragments":["am"]},{"Key":"am agree","Fragments":["with","as"]},{"Key":"comments I","Fragments":["missed","avoid"]},{"Key":"missed those","Fragments":["also"]},{"Key":"putting everything","Fragments":["inside"]},{"Key":"everything inside","Fragments":["'the"]},{"Key":"inside 'the","Fragments":["year"]},{"Key":"four' I","Fragments":["am"]},{"Key":"agree as","Fragments":["well"]},{"Key":"well ,","Fragments":["because"]},{"Key":", because","Fragments":["I"]},{"Key":"and better","Fragments":["understandable."]},{"Key":"better understandable.","Fragments":["Thank"]},{"Key":"understandable. Thank","Fragments":["you"]},{"Key":"your feedback!!","Fragments":["I"]},{"Key":"feedback!! I","Fragments":["appreciate"]},{"Key":"appreciate it","Fragments":["a"]},{"Key":"the [algorithm","Fragments":["expressed"]},{"Key":"[algorithm expressed","Fragments":["on"]},{"Key":"expressed on","Fragments":["Wikipedia](http://en.wikipedia.org/wiki/Leap_year#Algorithm)"]},{"Key":"on Wikipedia](http://en.wikipedia.org/wiki/Leap_year#Algorithm)","Fragments":["to"]},{"Key":"Wikipedia](http://en.wikipedia.org/wiki/Leap_year#Algorithm) to","Fragments":["be"]},{"Key":"be straightforward","Fragments":["to"]},{"Key":"implement and","Fragments":["simple","execute"]},{"Key":"and simple","Fragments":["to"]},{"Key":"I willingly","Fragments":["gave"]},{"Key":"willingly gave","Fragments":["up"]},{"Key":"gave up","Fragments":["a"]},{"Key":"a smaller","Fragments":["solution"]},{"Key":"smaller solution","Fragments":["in"]},{"Key":"you very","Fragments":["much."]},{"Key":"very much.","Fragments":["I"]},{"Key":"much. I","Fragments":["really"]},{"Key":"this short","Fragments":["version."]},{"Key":" Modified","Fragments":["so"]},{"Key":"Modified so","Fragments":["the"]},{"Key":"the bound","Fragments":["condition"]},{"Key":"bound condition","Fragments":["better"]},{"Key":"condition better","Fragments":["reflects"]},{"Key":"better reflects","Fragments":["the"]},{"Key":"reflects the","Fragments":["exception"]},{"Key":"For some","Fragments":["reason","reason","reason"]},{"Key":"felt compelled","Fragments":["to"]},{"Key":"compelled to","Fragments":["write"]},{"Key":"the cipher","Fragments":["using","text"]},{"Key":"cipher using","Fragments":["LINQ."]},{"Key":"Here's what","Fragments":["I"]},{"Key":"(char digit","Fragments":["in"]},{"Key":" decimalValue","Fragments":["*=","="]},{"Key":"decimalValue *=","Fragments":["2;"]},{"Key":"*= 2;","Fragments":["//"]},{"Key":"2; //","Fragments":["or"]},{"Key":"or decimalValue","Fragments":["\u003c\u003c"]},{"Key":"decimalValue \u003c\u003c","Fragments":["1;"]},{"Key":"if (given[i]","Fragments":["==","!="]},{"Key":"(given[i] ==","Fragments":["'1')"]},{"Key":"(given[i] !=","Fragments":["'0')"]},{"Key":"decimalValue =","Fragments":["0;"]},{"Key":"job. The","Fragments":["only"]},{"Key":"worth doing","Fragments":["would"]},{"Key":"doing would","Fragments":["be"]},{"Key":"exit early","Fragments":["if"]},{"Key":"'value' reaches","Fragments":["0."]},{"Key":"solution, but","Fragments":["drawing"]},{"Key":"but drawing","Fragments":["a"]},{"Key":"drawing a","Fragments":["blank"]},{"Key":"blank on","Fragments":["a"]},{"Key":"doesn't introduce","Fragments":["a"]},{"Key":"of artificial","Fragments":["complexity."]},{"Key":"artificial complexity.","Fragments":["In"]},{"Key":"complexity. In","Fragments":["particular,"]},{"Key":"particular, I'm","Fragments":["unhappy"]},{"Key":"names ```SpecialConsonants```","Fragments":["and"]},{"Key":"```SpecialConsonants``` and","Fragments":["```CombiningConsonants```"]},{"Key":"and ```CombiningConsonants```","Fragments":["-"]},{"Key":"```CombiningConsonants``` -","Fragments":["any"]},{"Key":"- any","Fragments":["native"]},{"Key":"any native","Fragments":["speaker"]},{"Key":"native speaker","Fragments":["happen"]},{"Key":"speaker happen","Fragments":["to"]},{"Key":"are proper","Fragments":["names"]},{"Key":"proper names","Fragments":["for"]},{"Key":"in english?","Fragments":["Also,"]},{"Key":"english? Also,","Fragments":["the"]},{"Key":"for multi-letter","Fragments":["consonants"]},{"Key":"multi-letter consonants","Fragments":["relies"]},{"Key":"consonants relies","Fragments":["on"]},{"Key":"on \"thr\"","Fragments":["being"]},{"Key":"\"thr\" being","Fragments":["before"]},{"Key":"being before","Fragments":["\"th\""]},{"Key":"before \"th\"","Fragments":["in"]},{"Key":"\"th\" in","Fragments":["```SpecialConsonants```."]},{"Key":"in ```SpecialConsonants```.","Fragments":["It"]},{"Key":"```SpecialConsonants```. It","Fragments":["works,"]},{"Key":"isn't particularily","Fragments":["elegant."]},{"Key":"said, beyond","Fragments":["of"]},{"Key":"beyond of","Fragments":["the"]},{"Key":"tests, capitals","Fragments":["should"]},{"Key":"capitals should","Fragments":["be"]},{"Key":"covered or","Fragments":["at"]},{"Key":"least converted","Fragments":["to"]},{"Key":"As per","Fragments":["initial"]},{"Key":"per initial","Fragments":["comments,"]},{"Key":"initial comments,","Fragments":["null"]},{"Key":"comments, null","Fragments":["and"]},{"Key":"and repeated","Fragments":["case."]},{"Key":"repeated case.","Fragments":["I"]},{"Key":"case. I","Fragments":["think","am"]},{"Key":"letter but","Fragments":["different"]},{"Key":"but different","Fragments":["point"]},{"Key":"different point","Fragments":["contributed"]},{"Key":"point contributed","Fragments":["to"]},{"Key":"contributed to","Fragments":["it,"]},{"Key":"it, therefore","Fragments":["I've"]},{"Key":"therefore I've","Fragments":["thrown"]},{"Key":"I've thrown","Fragments":["an"]},{"Key":"error as","Fragments":["an","it"]},{"Key":"error is","Fragments":["better"]},{"Key":"than bad","Fragments":["data."]},{"Key":"as protected","Fragments":["internal"]},{"Key":"protected internal","Fragments":["but"]},{"Key":"internal but","Fragments":["used"]},{"Key":"but used","Fragments":["public","a"]},{"Key":"used public","Fragments":["to"]},{"Key":"public to","Fragments":["allow"]},{"Key":"allow the","Fragments":["test"]},{"Key":"This could","Fragments":["have","lead"]},{"Key":"been condensed","Fragments":["into"]},{"Key":"condensed into","Fragments":["1"]},{"Key":"1 return","Fragments":["statement"]},{"Key":"so although","Fragments":["this","you've"]},{"Key":"although this","Fragments":["is"]},{"Key":"verbose it","Fragments":["allows"]},{"Key":"explanation and","Fragments":["I"]},{"Key":"feel makes","Fragments":["the","the"]},{"Key":"intent more","Fragments":["obvious."]},{"Key":"Didn't realise","Fragments":["you","that"]},{"Key":"realise you","Fragments":["could"]},{"Key":"tests would","Fragments":["still","fail?","not"]},{"Key":"still pass.","Fragments":["Removed"]},{"Key":"pass. Removed","Fragments":["the"]},{"Key":"extra check","Fragments":["against"]},{"Key":"against length","Fragments":["as"]},{"Key":"First go","Fragments":["of"]},{"Key":"go of","Fragments":["it."]},{"Key":"had commented","Fragments":["out"]},{"Key":"the breaks","Fragments":["because"]},{"Key":"breaks because","Fragments":["the"]},{"Key":"the seemed","Fragments":["to"]},{"Key":" Indeed","Fragments":["@alene"]},{"Key":"Indeed @alene","Fragments":["Still"]},{"Key":"@alene Still","Fragments":["a"]},{"Key":"Still a","Fragments":["simple","long"]},{"Key":"solution very","Fragments":["similar"]},{"Key":"to yours,","Fragments":["but"]},{"Key":"yours, but","Fragments":["I"]},{"Key":"about string.Concat()","Fragments":["before"]},{"Key":"string.Concat() before","Fragments":["reading"]},{"Key":"before reading","Fragments":["your"]},{"Key":"your solution.","Fragments":["TIL!","Plus"]},{"Key":"Really not","Fragments":["thrilled"]},{"Key":"not thrilled","Fragments":["with"]},{"Key":"thrilled with","Fragments":["how"]},{"Key":"of lists","Fragments":["and"]},{"Key":"lists and","Fragments":["only"]},{"Key":"only creating","Fragments":["grade"]},{"Key":"creating grade","Fragments":["levels"]},{"Key":"grade levels","Fragments":["when"]},{"Key":"levels when","Fragments":["they"]},{"Key":"were needed","Fragments":["(lot"]},{"Key":"needed (lot","Fragments":["of"]},{"Key":"(lot of","Fragments":["trouble"]},{"Key":"with missing","Fragments":["objects"]},{"Key":"missing objects","Fragments":["and"]},{"Key":"objects and","Fragments":["out"]},{"Key":"bounds errors),","Fragments":["until"]},{"Key":"errors), until","Fragments":["I"]},{"Key":"just fell","Fragments":["back"]},{"Key":"fell back","Fragments":["to"]},{"Key":"a magic","Fragments":["number"]},{"Key":"magic number","Fragments":["in"]},{"Key":"of Lists.","Fragments":["There"]},{"Key":"Lists. There","Fragments":["has"]},{"Key":"There has","Fragments":["to"]},{"Key":"did. Had","Fragments":["to"]},{"Key":"to improvise","Fragments":["and"]},{"Key":"improvise and","Fragments":["create"]},{"Key":"own Count","Fragments":["implementation,"]},{"Key":"Count implementation,","Fragments":["but"]},{"Key":"seems well","Fragments":["enough."]},{"Key":"well enough.","Fragments":["Would"]},{"Key":"enough. Would","Fragments":["really"]},{"Key":"Would really","Fragments":["like"]},{"Key":"some advice","Fragments":["for"]},{"Key":"advice for","Fragments":["this"]},{"Key":"README notes,","Fragments":["the"]},{"Key":"notes, the","Fragments":["Hamming"]},{"Key":"Hamming distance","Fragments":["is","is","is"]},{"Key":"not defined","Fragments":["if"]},{"Key":"defined if","Fragments":["the"]},{"Key":"the sequences","Fragments":["are"]},{"Key":"are of","Fragments":["unequal","equal","unequal,"]},{"Key":"unequal length.","Fragments":["I"]},{"Key":"length. I","Fragments":["would"]},{"Key":"would include","Fragments":["a"]},{"Key":"this condition","Fragments":["before"]},{"Key":"condition before","Fragments":["trying"]},{"Key":"before trying","Fragments":["to","to"]},{"Key":"compute the","Fragments":["answer.","sum"]},{"Key":"do ;)","Fragments":["More"]},{"Key":";) More","Fragments":["of"]},{"Key":"More of","Fragments":["a"]},{"Key":"a math","Fragments":["problem"]},{"Key":"math problem","Fragments":["than"]},{"Key":"problem than","Fragments":["a"]},{"Key":"programming one,","Fragments":["though."]},{"Key":"Why re","Fragments":["you"]},{"Key":"re you","Fragments":["throwing"]},{"Key":"you throwing","Fragments":["an"]},{"Key":"then catching","Fragments":["it"]},{"Key":"catching it","Fragments":["and"]},{"Key":"then rethrowing","Fragments":["it?"]},{"Key":"the .ToString","Fragments":["redundancy."]},{"Key":".ToString redundancy.","Fragments":["Not"]},{"Key":"redundancy. Not","Fragments":["understanding"]},{"Key":"Not understanding","Fragments":["your"]},{"Key":"understanding your","Fragments":["comment"]},{"Key":"the keyValue","Fragments":["variable","variable,"]},{"Key":"keyValue variable","Fragments":["not"]},{"Key":"variable not","Fragments":["having"]},{"Key":"having any","Fragments":["benefit"]},{"Key":"benefit though.","Fragments":["I"]},{"Key":"the letter,","Fragments":["correct?"]},{"Key":"the ToLowerInvariiant","Fragments":["changes"]},{"Key":"ToLowerInvariiant changes","Fragments":["applied."]},{"Key":"The trouble","Fragments":["with","with"]},{"Key":"with putting","Fragments":["the","the"]},{"Key":"in Main","Fragments":["is"]},{"Key":"to unit","Fragments":["test."]},{"Key":"unit test.","Fragments":["Were"]},{"Key":"test. Were","Fragments":["you","you"]},{"Key":"Were you","Fragments":["able","able"]},{"Key":"you able","Fragments":["to","to"]},{"Key":"tests included","Fragments":["as","in"]},{"Key":"included as","Fragments":["part"]},{"Key":"exercises to","Fragments":["pass?"]},{"Key":"to pass?","Fragments":["The","It"]},{"Key":"pass? The","Fragments":["tests"]},{"Key":"tests point","Fragments":["to","to"]},{"Key":"a suggested","Fragments":["implementation."]},{"Key":"a Console.ReadLine()","Fragments":["to"]},{"Key":"Console.ReadLine() to","Fragments":["the"]},{"Key":"as at","Fragments":["the","the"]},{"Key":"the minute","Fragments":["it","it"]},{"Key":"minute it","Fragments":["looks","looks"]},{"Key":"the app","Fragments":["will","it"]},{"Key":"app will","Fragments":["exit"]},{"Key":"will exit","Fragments":["very","very"]},{"Key":"exit very","Fragments":["quickly","quickly."]},{"Key":"very quickly","Fragments":["without"]},{"Key":"quickly without","Fragments":["the"]},{"Key":"the opportunity","Fragments":["for"]},{"Key":"see whether","Fragments":["their","it"]},{"Key":"whether their","Fragments":["year"]},{"Key":"their year","Fragments":["is"]},{"Key":"validation of","Fragments":["the"]},{"Key":"the entered","Fragments":["value"]},{"Key":"entered value","Fragments":["before"]},{"Key":"value before","Fragments":["attempting"]},{"Key":"before attempting","Fragments":["to"]},{"Key":"explicitly code","Fragments":["when"]},{"Key":"code when","Fragments":["to"]},{"Key":"it occurred","Fragments":["to"]},{"Key":"only true","Fragments":["on"]},{"Key":"true on","Fragments":["certain"]},{"Key":"on certain","Fragments":["conditions","types"]},{"Key":"certain conditions","Fragments":["then"]},{"Key":"conditions then","Fragments":["it"]},{"Key":"save time","Fragments":["to"]},{"Key":"it return","Fragments":["false"]},{"Key":"false by","Fragments":["default"]},{"Key":"by default","Fragments":["except","classes","found"]},{"Key":"default except","Fragments":["when"]},{"Key":"except when","Fragments":["those"]},{"Key":"when those","Fragments":["conditions"]},{"Key":"Not completed","Fragments":["Yet."]},{"Key":"Simple anagram","Fragments":["test"]},{"Key":"anagram test","Fragments":["passes,","fails."]},{"Key":"test passes,","Fragments":["but"]},{"Key":"passes, but","Fragments":["multiple"]},{"Key":"but multiple","Fragments":["anagram"]},{"Key":"multiple anagram","Fragments":["test"]},{"Key":"Your check","Fragments":["for","whether"]},{"Key":"for IsNullOrEmpty","Fragments":["is"]},{"Key":"is using","Fragments":["the","the","a"]},{"Key":"string \"text\",","Fragments":["not"]},{"Key":"\"text\", not","Fragments":["the"]},{"Key":"know all","Fragments":["the"]},{"Key":"are digits,","Fragments":["you"]},{"Key":"digits, you","Fragments":["can"]},{"Key":"do \u003ccode\u003e@jamison","Fragments":["-"]},{"Key":"\u003ccode\u003e@jamison -","Fragments":["'0'\u003c/code\u003e"]},{"Key":"- '0'\u003c/code\u003e","Fragments":["instead"]},{"Key":"'0'\u003c/code\u003e instead","Fragments":["of"]},{"Key":"the bugs","Fragments":["and"]},{"Key":"and cleaned","Fragments":["up","up"]},{"Key":"redundant LINQ","Fragments":["sorts"]},{"Key":"LINQ sorts","Fragments":["into"]},{"Key":"a reusable","Fragments":["SortString"]},{"Key":"reusable SortString","Fragments":["method."]},{"Key":"good. However","Fragments":["a"]},{"Key":"However a","Fragments":["Dictionary"]},{"Key":"is _not_","Fragments":["guaranteed"]},{"Key":"_not_ guaranteed","Fragments":["to"]},{"Key":"particular order","Fragments":["-","even"]},{"Key":"order -","Fragments":["though"]},{"Key":"small case","Fragments":["like"]},{"Key":"case like","Fragments":["this"]},{"Key":"it generally","Fragments":["will"]},{"Key":"generally will","Fragments":["be."]},{"Key":"will be.","Fragments":["Your"]},{"Key":"be. Your","Fragments":["code"]},{"Key":"is dependent","Fragments":["on"]},{"Key":"keys being","Fragments":["returned"]},{"Key":"being returned","Fragments":["in"]},{"Key":"returned in","Fragments":["order.","a"]},{"Key":"in order.","Fragments":["To"]},{"Key":"order. To","Fragments":["be"]},{"Key":"be absolutely","Fragments":["sure"]},{"Key":"absolutely sure","Fragments":["it"]},{"Key":"work you","Fragments":["should"]},{"Key":"SortedDictionary or","Fragments":["an"]},{"Key":"The \u003ccode\u003eint.Parse(x.ToString())\u003c/code\u003e","Fragments":["seems"]},{"Key":"\u003ccode\u003eint.Parse(x.ToString())\u003c/code\u003e seems","Fragments":["like"]},{"Key":"way overkill","Fragments":["when"]},{"Key":"overkill when","Fragments":["you"]},{"Key":"a digit","Fragments":["from"]},{"Key":"digit from","Fragments":["'0'"]},{"Key":"from '0'","Fragments":["to"]},{"Key":"'0' to","Fragments":["'9'."]},{"Key":"to '9'.","Fragments":["Why"]},{"Key":"'9'. Why","Fragments":["not"]},{"Key":"do \u003ccode\u003ex","Fragments":["-"]},{"Key":"\u003ccode\u003ex -","Fragments":["'0'\u003c/code\u003e?"]},{"Key":"didn't validate","Fragments":["your"]},{"Key":"was certainly","Fragments":["an"]},{"Key":"an insightful","Fragments":["exercise."]},{"Key":"insightful exercise.","Fragments":["Passing"]},{"Key":"exercise. Passing","Fragments":["lambda"]},{"Key":"Passing lambda","Fragments":["arguments"]},{"Key":"lambda arguments","Fragments":["is"]},{"Key":"arguments is","Fragments":["rather","wrong),"]},{"Key":"is rather","Fragments":["neat."]},{"Key":" None","Fragments":["of"]},{"Key":"of pop,push,shift,unshift","Fragments":["looks"]},{"Key":"pop,push,shift,unshift looks","Fragments":["like"]},{"Key":"like constant","Fragments":["time"]},{"Key":"constant time","Fragments":["ops?"]},{"Key":"time ops?","Fragments":["Can"]},{"Key":"ops? Can","Fragments":["you"]},{"Key":"write \u003ccode\u003eif","Fragments":["(!input.All(Char.IsDigit))\u003c/code\u003e"]},{"Key":"\u003ccode\u003eif (!input.All(Char.IsDigit))\u003c/code\u003e","Fragments":["instead"]},{"Key":"(!input.All(Char.IsDigit))\u003c/code\u003e instead","Fragments":["of"]},{"Key":"\u003ccode\u003eif (input.Any(c","Fragments":["=\u003e"]},{"Key":"(input.Any(c =\u003e","Fragments":["!char.IsDigit(c)))\u003c/code\u003e"]},{"Key":"=\u003e !char.IsDigit(c)))\u003c/code\u003e","Fragments":["which"]},{"Key":"!char.IsDigit(c)))\u003c/code\u003e which","Fragments":["is"]},{"Key":"concise while","Fragments":["still"]},{"Key":"still being","Fragments":["very"]},{"Key":"the breaks,","Fragments":["you"]},{"Key":"breaks, you","Fragments":["can"]},{"Key":"wrong answer","Fragments":["if"]},{"Key":"answer if","Fragments":["the"]},{"Key":"was divisible","Fragments":["by"]},{"Key":"100 but","Fragments":["not"]},{"Key":"test provided","Fragments":["with"]},{"Key":"provided with","Fragments":["the"]},{"Key":"exercism fetch","Fragments":["command?"]},{"Key":"fetch command?","Fragments":["Tests"]},{"Key":"command? Tests","Fragments":["can"]},{"Key":"Tests can","Fragments":["be"]},{"Key":"really helpful","Fragments":["and"]},{"Key":"helpful and","Fragments":["they"]},{"Key":"used often","Fragments":["in"]},{"Key":"often in","Fragments":["software"]},{"Key":"in software","Fragments":["development."]},{"Key":"software development.","Fragments":["The"]},{"Key":"development. The","Fragments":["test"]},{"Key":"test defines","Fragments":["the"]},{"Key":"defines the","Fragments":["inputs"]},{"Key":"and outputs","Fragments":["of"]},{"Key":"outputs of","Fragments":["your"]},{"Key":"name as","Fragments":["well"]},{"Key":"as makes","Fragments":["sure"]},{"Key":"makes sure","Fragments":["the"]},{"Key":"output is","Fragments":["correct."]},{"Key":"correct. If","Fragments":["you"]},{"Key":"help figuring","Fragments":["out"]},{"Key":"test stuff","Fragments":["the"]},{"Key":"stuff the","Fragments":["help"]},{"Key":"help button","Fragments":["at"]},{"Key":"button at","Fragments":["the"]},{"Key":"the page","Fragments":["can"]},{"Key":"page can","Fragments":["lead"]},{"Key":"can lead","Fragments":["you"]},{"Key":"lead you","Fragments":["there."]},{"Key":"like parts","Fragments":["of"]},{"Key":"but feel","Fragments":["that"]},{"Key":"This obviously","Fragments":["doesn't"]},{"Key":"obviously doesn't","Fragments":["pass"]},{"Key":"doesn't pass","Fragments":["any"]},{"Key":"any test","Fragments":["but"]},{"Key":"test but","Fragments":["i"]},{"Key":"exercise from","Fragments":["the"]},{"Key":"the miserable","Fragments":["explanation"]},{"Key":"miserable explanation","Fragments":["in"]},{"Key":"explanation in","Fragments":["the"]},{"Key":" Need","Fragments":["to"]},{"Key":"Need to","Fragments":["look"]},{"Key":"for clues","Fragments":["i"]},{"Key":"clues i","Fragments":["others"]},{"Key":"i others","Fragments":["code..."]},{"Key":" Per","Fragments":["feedback"]},{"Key":"Per feedback","Fragments":["received"]},{"Key":"feedback received","Fragments":["on"]},{"Key":"received on","Fragments":["previous"]},{"Key":"on previous","Fragments":["submission,","iteration."]},{"Key":"previous submission,","Fragments":["made"]},{"Key":"submission, made","Fragments":["some"]},{"Key":"made some","Fragments":["updates"]},{"Key":"some updates","Fragments":["to"]},{"Key":"updates to","Fragments":["the"]},{"Key":"remove redundant","Fragments":["or"]},{"Key":"redundant or","Fragments":["unnecessary"]},{"Key":"or unnecessary","Fragments":["declarations"]},{"Key":"unnecessary declarations","Fragments":["and"]},{"Key":"declarations and","Fragments":["methods."]},{"Key":"- Implemented","Fragments":["WordIsAnagram"]},{"Key":"Implemented WordIsAnagram","Fragments":["to"]},{"Key":"WordIsAnagram to","Fragments":["do"]},{"Key":"each single","Fragments":["word"]},{"Key":"single word","Fragments":["which"]},{"Key":"word which","Fragments":["is"]},{"Key":"is put","Fragments":["in","into"]},{"Key":"- Sort","Fragments":["the"]},{"Key":"Sort the","Fragments":["list"]},{"Key":"In WordIsAnagram","Fragments":["first"]},{"Key":"WordIsAnagram first","Fragments":["do"]},{"Key":"first do","Fragments":["a"]},{"Key":"local copy,","Fragments":["because"]},{"Key":"copy, because","Fragments":["we"]},{"Key":"original for","Fragments":["the"]},{"Key":"Apply some","Fragments":["simple"]},{"Key":"some simple","Fragments":["checks.","tricks.","regex"]},{"Key":"Check single","Fragments":["characters"]},{"Key":"single characters","Fragments":["by"]},{"Key":"from both","Fragments":["words"]},{"Key":"still valid","Fragments":["anagrams."]},{"Key":"would typically","Fragments":["shy"]},{"Key":"typically shy","Fragments":["away"]},{"Key":"shy away","Fragments":["from"]},{"Key":"from issuing","Fragments":["multiple"]},{"Key":"issuing multiple","Fragments":["return"]},{"Key":"one method","Fragments":["as","with","with","call","can","called"]},{"Key":"in DetectAnagram.","Fragments":["Instead,"]},{"Key":"DetectAnagram. Instead,","Fragments":["declare"]},{"Key":"Instead, declare","Fragments":["a"]},{"Key":"boolean variable","Fragments":["and"]},{"Key":"and assign","Fragments":["true/false","the"]},{"Key":"assign true/false","Fragments":["to"]},{"Key":"true/false to","Fragments":["it"]},{"Key":"as necessary","Fragments":["and"]},{"Key":"necessary and","Fragments":["then","once"]},{"Key":"Changed approach","Fragments":["for"]},{"Key":"for valid","Fragments":["words","input","input"]},{"Key":"words instead","Fragments":["of"]},{"Key":"of previous","Fragments":["approach"]},{"Key":"previous approach","Fragments":["of"]},{"Key":"characters. All","Fragments":["tests"]},{"Key":"All tests","Fragments":["work"]},{"Key":"tests work","Fragments":["now."]},{"Key":"the information.","Fragments":["I"]},{"Key":"information. I","Fragments":["didn't"]},{"Key":"just omit","Fragments":["the"]},{"Key":"the ToCharArray","Fragments":["method."]},{"Key":"ToCharArray method.","Fragments":["I"]},{"Key":"code based","Fragments":["on"]},{"Key":"Removed unused","Fragments":["imports."]},{"Key":"while this","Fragments":["works","one"]},{"Key":"given tests,","Fragments":["it"]},{"Key":"not address","Fragments":["a"]},{"Key":"address a","Fragments":["key"]},{"Key":"key issue","Fragments":["in"]},{"Key":"description which","Fragments":["is"]},{"Key":"both strand1","Fragments":["and"]},{"Key":"strand1 and","Fragments":["strand2"]},{"Key":"and strand2","Fragments":["have"]},{"Key":"strand2 have","Fragments":["to"]},{"Key":"be identical","Fragments":["in"]},{"Key":"identical in","Fragments":["length."]},{"Key":"in length.","Fragments":["See"]},{"Key":"length. See","Fragments":["the"]},{"Key":"See the","Fragments":["implementation"]},{"Key":"the .md","Fragments":["file."]},{"Key":".md file.","Fragments":["\"The"]},{"Key":"file. \"The","Fragments":["Hamming"]},{"Key":"\"The Hamming","Fragments":["distance"]},{"Key":"only defined","Fragments":["for","for"]},{"Key":"defined for","Fragments":["sequences","strands"]},{"Key":"for sequences","Fragments":["of"]},{"Key":"sequences of","Fragments":["equal"]},{"Key":"equal length.\"","Fragments":["My"]},{"Key":"length.\" My","Fragments":["understanding"]},{"Key":"that statement","Fragments":["is"]},{"Key":"is validate","Fragments":["that"]},{"Key":"equal trimmed","Fragments":["length,"]},{"Key":"trimmed length,","Fragments":["and"]},{"Key":"length, and","Fragments":["if"]},{"Key":"if not,","Fragments":["raise","it"]},{"Key":"not, raise","Fragments":["an"]},{"Key":"raise an","Fragments":["exception."]},{"Key":" @russell","Fragments":["I"]},{"Key":"@russell I","Fragments":["have"]},{"Key":"taken your","Fragments":["advice"]},{"Key":"advice and","Fragments":["rewrote","tried"]},{"Key":"rewrote my","Fragments":["DetectAnagram"]},{"Key":"my DetectAnagram","Fragments":["method"]},{"Key":"DetectAnagram method","Fragments":["to"]},{"Key":" Possible....?","Fragments":["Also"]},{"Key":"Possible....? Also","Fragments":["wrote"]},{"Key":"Also wrote","Fragments":["some"]},{"Key":"some smaller","Fragments":["unit"]},{"Key":"smaller unit","Fragments":["tests"]},{"Key":"the AreAllCharactersTheSame","Fragments":["method"]},{"Key":"AreAllCharactersTheSame method","Fragments":["and"]},{"Key":"believe (although","Fragments":["a"]},{"Key":"(although a","Fragments":["bit"]},{"Key":"noob so","Fragments":["not"]},{"Key":"not sure)","Fragments":["that","I"]},{"Key":"sure) that","Fragments":["I"]},{"Key":"make internals","Fragments":["visible"]},{"Key":"internals visible","Fragments":["to"]},{"Key":"visible to","Fragments":["my"]},{"Key":"my test","Fragments":["project","on"]},{"Key":"test project","Fragments":["but","in"]},{"Key":"project but","Fragments":["not"]},{"Key":" Mate...","Fragments":["its"]},{"Key":"Mate... its","Fragments":["'Divisible'."]},{"Key":"for uneven","Fragments":["strand"]},{"Key":"uneven strand","Fragments":["lengths"]},{"Key":"strand lengths","Fragments":["as"]},{"Key":"lengths as","Fragments":["suggested"]},{"Key":" Bask","Fragments":["to"]},{"Key":"Bask to","Fragments":["Select"]},{"Key":"to Select","Fragments":["and"]},{"Key":"Select and","Fragments":["group"]},{"Key":"and group","Fragments":["calculation"]},{"Key":"group calculation","Fragments":["defaults"]},{"Key":"calculation defaults","Fragments":["to"]},{"Key":"defaults to","Fragments":["int"]},{"Key":"right if","Fragments":["I"]},{"Key":"just launch","Fragments":["the"]},{"Key":"launch the","Fragments":["app"]},{"Key":"app it","Fragments":["does"]},{"Key":"does close","Fragments":["out"]},{"Key":"close out","Fragments":["after"]},{"Key":"out after","Fragments":["entering"]},{"Key":"after entering","Fragments":["the"]},{"Key":"entering the","Fragments":["year","```foreach```."]},{"Key":"year without","Fragments":["much"]},{"Key":"not. I'm","Fragments":["still"]},{"Key":"am at","Fragments":["a"]},{"Key":"beginner level","Fragments":["in"]},{"Key":"level in","Fragments":["programming"]},{"Key":"in programming","Fragments":["in"]},{"Key":"programming in","Fragments":["general"]},{"Key":"general so","Fragments":["I'm"]},{"Key":"of learning","Fragments":["syntax"]},{"Key":"learning syntax","Fragments":["and"]},{"Key":"syntax and","Fragments":["what"]},{"Key":"what not","Fragments":["as"]},{"Key":"I go.","Fragments":["As"]},{"Key":"go. As","Fragments":["far"]},{"Key":"tests, I'm","Fragments":["not"]},{"Key":"I'm supposed","Fragments":["to"]},{"Key":"compile along","Fragments":["with"]},{"Key":"own source","Fragments":["code","code"]},{"Key":"code somehow","Fragments":["or"]},{"Key":"somehow or","Fragments":["how"]},{"Key":"or how","Fragments":["that"]},{"Key":"that exactly","Fragments":["works,"]},{"Key":"exactly works,","Fragments":["but"]},{"Key":"just entered","Fragments":["the"]},{"Key":"entered the","Fragments":["years"]},{"Key":"they all","Fragments":["checked"]},{"Key":"all checked","Fragments":["out."]},{"Key":"checked out.","Fragments":["I'm"]},{"Key":"I'm working","Fragments":["on"]},{"Key":"iteration at","Fragments":["the"]},{"Key":"moment trying","Fragments":["to"]},{"Key":"more use","Fragments":["of"]},{"Key":"checking input","Fragments":["and"]},{"Key":"feedback though!","Fragments":["Hoping"]},{"Key":"though! Hoping","Fragments":["to"]},{"Key":"Hoping to","Fragments":["have"]},{"Key":" Next","Fragments":["step."]},{"Key":"Next step.","Fragments":["Combinding"]},{"Key":"step. Combinding","Fragments":["and"]},{"Key":"Combinding and","Fragments":["clean"]},{"Key":"this submission.","Fragments":["This"]},{"Key":"submission. This","Fragments":["is"]},{"Key":"actually about","Fragments":["half"]},{"Key":"about half","Fragments":["the"]},{"Key":"of enum","Fragments":["and"]},{"Key":"and switch.","Fragments":["Very"]},{"Key":"switch. Very","Fragments":["cool!"]},{"Key":" ```NameAttribute```","Fragments":["and"]},{"Key":"```NameAttribute``` and","Fragments":["its"]},{"Key":"its extension","Fragments":["method"]},{"Key":"from Allergies","Fragments":["exercise,"]},{"Key":"Allergies exercise,","Fragments":["```Discard```"]},{"Key":"exercise, ```Discard```","Fragments":["extension"]},{"Key":"```Discard``` extension","Fragments":["method"]},{"Key":"from Strain","Fragments":["exercise."]},{"Key":"control structures","Fragments":["are"]},{"Key":"structures are","Fragments":["generally"]},{"Key":"are generally","Fragments":["a","only"]},{"Key":"a sign","Fragments":["that"]},{"Key":"sign that","Fragments":["you"]},{"Key":"things simpler.","Fragments":["The"]},{"Key":"simpler. The","Fragments":["rightward-marching"]},{"Key":"The rightward-marching","Fragments":["sets"]},{"Key":"rightward-marching sets","Fragments":["of"]},{"Key":"sets of","Fragments":["braces","functionality"]},{"Key":"of braces","Fragments":["(pyramid"]},{"Key":"braces (pyramid","Fragments":["of"]},{"Key":"(pyramid of","Fragments":["doom)"]},{"Key":"of doom)","Fragments":["makes"]},{"Key":"doom) makes","Fragments":["it"]},{"Key":"it an","Fragments":["easy"]},{"Key":"easy code","Fragments":["smell"]},{"Key":"code smell","Fragments":["to","especially"]},{"Key":"smell to","Fragments":["spot."]},{"Key":"to spot.","Fragments":["See"]},{"Key":"spot. See","Fragments":["if"]},{"Key":"simplify it","Fragments":["by"]},{"Key":"it by","Fragments":["getting","knowing"]},{"Key":"by getting","Fragments":["rid"]},{"Key":"so much!","Fragments":["I"]},{"Key":"much! I","Fragments":["didn't"]},{"Key":"that about","Fragments":["predicate!"]},{"Key":"about predicate!","Fragments":["I"]},{"Key":"predicate! I","Fragments":["submitted"]},{"Key":"Hi There,","Fragments":["you"]},{"Key":"There, you","Fragments":["could"]},{"Key":"probably condense","Fragments":["lines"]},{"Key":"condense lines","Fragments":["62"]},{"Key":"lines 62","Fragments":["-"]},{"Key":"62 -","Fragments":["69"]},{"Key":"- 69","Fragments":["into"]},{"Key":"69 into","Fragments":["the"]},{"Key":"the script","Fragments":["block"]},{"Key":"script block","Fragments":["of"]},{"Key":"block of","Fragments":["the"]},{"Key":"statement right","Fragments":["above"]},{"Key":"right above","Fragments":["it."]},{"Key":"you write","Fragments":["about"]},{"Key":"write about","Fragments":["how"]},{"Key":"you arrived","Fragments":["at"]},{"Key":"arrived at","Fragments":["the"]},{"Key":"Nice! I","Fragments":["had"]},{"Key":"idea \"IsNullOrWhiteSpace\"","Fragments":["existed."]},{"Key":"Hi there!","Fragments":["It"]},{"Key":"there! It","Fragments":["seems"]},{"Key":"solution file","Fragments":["rather"]},{"Key":"file rather","Fragments":["than"]},{"Key":"should upload","Fragments":["the"]},{"Key":"the .cs","Fragments":["file"]},{"Key":"file you","Fragments":["wrote"]},{"Key":"wrote you","Fragments":["code"]},{"Key":"code in,","Fragments":["instead!"]},{"Key":"Using Regex","Fragments":["seems"]},{"Key":"Regex seems","Fragments":["a"]},{"Key":"of overkill","Fragments":["in"]},{"Key":"this situation.","Fragments":["You"]},{"Key":"situation. You","Fragments":["can"]},{"Key":"can extend","Fragments":["the"]},{"Key":"the `Linq`","Fragments":["usage"]},{"Key":"`Linq` usage","Fragments":["to"]},{"Key":"return (word","Fragments":["??"]},{"Key":"(word ??","Fragments":["\"\").ToUpper().Where(char.IsLetter).Sum(ch"]},{"Key":"?? \"\").ToUpper().Where(char.IsLetter).Sum(ch","Fragments":["=\u003e"]},{"Key":"\"\").ToUpper().Where(char.IsLetter).Sum(ch =\u003e","Fragments":["_scoreOf[Letter]);"]},{"Key":" @blanche","Fragments":["Thank"]},{"Key":"@blanche Thank","Fragments":["you"]},{"Key":"you again","Fragments":["for"]},{"Key":"for strings","Fragments":["of"]},{"Key":"strings of","Fragments":["equal","length","equal"]},{"Key":"length. Additionally","Fragments":["I"]},{"Key":"Additionally I","Fragments":["modified"]},{"Key":"original check","Fragments":["for"]},{"Key":"strings instead","Fragments":["of"]},{"Key":"a distance","Fragments":["of"]},{"Key":"could declare","Fragments":["an"]},{"Key":"declare an","Fragments":["array"]},{"Key":"array literal","Fragments":["`new"]},{"Key":"literal `new","Fragments":["[]"]},{"Key":"`new []","Fragments":["{"]},{"Key":"[] {","Fragments":["\"\","]},{"Key":"{ \"\",","Fragments":["\"\","]},{"Key":"\"\", \"\",","Fragments":["\"\",","\"\""]},{"Key":"\"\", \"\"","Fragments":["}`"]},{"Key":"\"\" }`","Fragments":["instead"]},{"Key":"}` instead","Fragments":["of"]},{"Key":"declaring Song","Fragments":["and"]},{"Key":"Song and","Fragments":["then"]},{"Key":"then splitting","Fragments":["it"]},{"Key":"a `.Replace(\"x\",","Fragments":["\"\")`"]},{"Key":"`.Replace(\"x\", \"\")`","Fragments":["instead"]},{"Key":"\"\")` instead","Fragments":["of"]},{"Key":"using {0}","Fragments":["and"]},{"Key":"{0} and","Fragments":["`string.Format`?"]},{"Key":"and `string.Format`?","Fragments":["I'm"]},{"Key":"`string.Format`? I'm","Fragments":["not"]},{"Key":"other and","Fragments":["I'm","how"]},{"Key":" OK","Fragments":["these","these"]},{"Key":"OK these","Fragments":["challenges","challenges"]},{"Key":"these challenges","Fragments":["are","are"]},{"Key":"challenges are","Fragments":["getting","getting"]},{"Key":"are getting","Fragments":["trivial","trivial"]},{"Key":"getting trivial","Fragments":["and","and"]},{"Key":"and boring.","Fragments":["Unless","Unless"]},{"Key":"boring. Unless","Fragments":["the","the"]},{"Key":"Unless the","Fragments":["next","next"]},{"Key":"next test","Fragments":["improves","improves"]},{"Key":"test improves","Fragments":["I","I"]},{"Key":"improves I","Fragments":["am","am"]},{"Key":"am outtahere","Fragments":["(at","(at"]},{"Key":"outtahere (at","Fragments":["least","least"]},{"Key":"least on","Fragments":["c#)!","c#)!"]},{"Key":"think instead","Fragments":["of"]},{"Key":"using `IndexOf('.')`","Fragments":["you"]},{"Key":"`IndexOf('.')` you","Fragments":["could"]},{"Key":"just included","Fragments":["the"]},{"Key":"the \\n","Fragments":["character"]},{"Key":"\\n character","Fragments":["in"]},{"Key":"lyrics and","Fragments":["searched"]},{"Key":"and searched","Fragments":["for"]},{"Key":"searched for","Fragments":["that."]},{"Key":"that. That","Fragments":["would"]},{"Key":"would simplify","Fragments":["things"]},{"Key":"simplify things","Fragments":["just"]},{"Key":"things just","Fragments":["a"]},{"Key":"bit and","Fragments":["reduce"]},{"Key":"reduce some","Fragments":["string"]},{"Key":"some string","Fragments":["manipulation."]},{"Key":"Also, nice","Fragments":["use"]},{"Key":"nice use","Fragments":["of","of"]},{"Key":"of recursion.","Fragments":["Did"]},{"Key":"recursion. Did","Fragments":["you"]},{"Key":"you consider","Fragments":["the","that"]},{"Key":"the costs","Fragments":["of"]},{"Key":"costs of","Fragments":["recursion"]},{"Key":"of recursion","Fragments":["vs"]},{"Key":"recursion vs","Fragments":["iteration?"]},{"Key":" `int","Fragments":["startIndex"]},{"Key":"`int startIndex","Fragments":["="]},{"Key":"startIndex =","Fragments":["0;`"]},{"Key":"= 0;`","Fragments":["is"]},{"Key":"0;` is","Fragments":["missing"]},{"Key":"missing its","Fragments":["access"]},{"Key":"its access","Fragments":["modifier"]},{"Key":"modifier (which","Fragments":["is"]},{"Key":"fine but","Fragments":["you"]},{"Key":"were explicit","Fragments":["every"]},{"Key":"explicit every","Fragments":["where"]},{"Key":"every where","Fragments":["else"]},{"Key":"where else","Fragments":["so"]},{"Key":"else so","Fragments":["it"]},{"Key":"you notice","Fragments":["that"]},{"Key":"the Return_entire_song","Fragments":["test"]},{"Key":"Return_entire_song test","Fragments":["would"]},{"Key":"test would","Fragments":["almost"]},{"Key":"would almost","Fragments":["always"]},{"Key":"always pass","Fragments":["even"]},{"Key":"pass even","Fragments":["when"]},{"Key":"would fail?","Fragments":["I"]},{"Key":"fail? I","Fragments":["thought"]},{"Key":"Why AddSeconds","Fragments":["twice"]},{"Key":"AddSeconds twice","Fragments":["in"]},{"Key":"loop? Very","Fragments":["odd..."]},{"Key":"it. Short","Fragments":["and"]},{"Key":"and sweet.","Fragments":["I"]},{"Key":"sweet. I","Fragments":["think"]},{"Key":"get us","Fragments":["to"]},{"Key":"us to","Fragments":["use"]},{"Key":"use recursion","Fragments":["but"]},{"Key":"recursion but","Fragments":["I"]},{"Key":"think recursion","Fragments":["is"]},{"Key":"recursion is","Fragments":["appropriate","making"]},{"Key":"done is","Fragments":["much"]},{"Key":"make two","Fragments":["calls"]},{"Key":"two calls","Fragments":["to","to"]},{"Key":"to Verse(x)","Fragments":["on"]},{"Key":"Verse(x) on","Fragments":["line"]},{"Key":"20 which","Fragments":["does"]},{"Key":"seen several","Fragments":["people"]},{"Key":"several people","Fragments":["use"]},{"Key":"use custom","Fragments":["token"]},{"Key":"custom token","Fragments":["replacement"]},{"Key":"token replacement","Fragments":["methods"]},{"Key":"replacement methods","Fragments":["(an"]},{"Key":"methods (an","Fragments":["honestly"]},{"Key":"(an honestly","Fragments":["I"]},{"Key":"honestly I","Fragments":["have"]},{"Key":"my toolkit)","Fragments":["and"]},{"Key":"toolkit) and","Fragments":["I"]},{"Key":"I curious","Fragments":["as"]},{"Key":"curious as","Fragments":["to"]},{"Key":"Actually i","Fragments":["did"]},{"Key":"not consider","Fragments":["if"]},{"Key":"if iteration","Fragments":["was"]},{"Key":"than recursion.","Fragments":["Do"]},{"Key":"recursion. Do","Fragments":["you"]},{"Key":"guess the","Fragments":["biggest"]},{"Key":"was figuring","Fragments":["out"]},{"Key":"use NUnit.","Fragments":["I"]},{"Key":"I eventually","Fragments":["just"]},{"Key":"eventually just","Fragments":["set"]},{"Key":"just set","Fragments":["up"]},{"Key":"in Xamarin,","Fragments":["but"]},{"Key":"Xamarin, but","Fragments":["I"]},{"Key":"really wish","Fragments":["there"]},{"Key":"wish there","Fragments":["was"]},{"Key":"better tutorial","Fragments":["on"]},{"Key":"tutorial on","Fragments":["how"]},{"Key":"the command","Fragments":["line.","you"]},{"Key":"just finished","Fragments":["the"]},{"Key":"finished the","Fragments":["Prime","Prime","first"]},{"Key":"the Prime","Fragments":["Factors","Factors"]},{"Key":"Prime Factors","Fragments":["exercise,","exercise"]},{"Key":"Factors exercise,","Fragments":["so"]},{"Key":"exercise, so","Fragments":["had"]},{"Key":"so had","Fragments":["that","to"]},{"Key":"had that","Fragments":["on"]},{"Key":"my brain.","Fragments":["This"]},{"Key":"brain. This","Fragments":["is"]},{"Key":"prevent it","Fragments":["being"]},{"Key":"being instantiated","Fragments":["(the"]},{"Key":"instantiated (the","Fragments":["function"]},{"Key":"(the function","Fragments":["itself"]},{"Key":"function itself","Fragments":["is"]},{"Key":"is static).","Fragments":["Perhaps"]},{"Key":"static). Perhaps","Fragments":["you"]},{"Key":"Perhaps you","Fragments":["could","could","could"]},{"Key":"your code?","Fragments":["Could","Could"]},{"Key":"code? Could","Fragments":["you","you"]},{"Key":"you boil","Fragments":["it","it"]},{"Key":"all down","Fragments":["to","to"]},{"Key":"like it!","Fragments":["I"]},{"Key":"it! I","Fragments":["wondered"]},{"Key":"I wondered","Fragments":["if","whether"]},{"Key":"wondered if","Fragments":["anyone"]},{"Key":"anyone would","Fragments":["find"]},{"Key":"solution using","Fragments":["linq."]},{"Key":"Tuple rather","Fragments":["than"]},{"Key":"than defining","Fragments":["my"]},{"Key":"defining my","Fragments":["own"]},{"Key":"wondered whether","Fragments":["one"]},{"Key":"whether one","Fragments":["was"]},{"Key":"was preferable","Fragments":["than"]},{"Key":"preferable than","Fragments":["the"]},{"Key":"was obviously","Fragments":["intended"]},{"Key":"obviously intended","Fragments":["to"]},{"Key":"to elicit","Fragments":["a"]},{"Key":"elicit a","Fragments":["loop"]},{"Key":"or recursion","Fragments":["of"]},{"Key":"recursion of","Fragments":["some"]},{"Key":"a verse.","Fragments":["It"]},{"Key":"verse. It","Fragments":["was"]},{"Key":"fun doing","Fragments":["it"]},{"Key":"it differently","Fragments":["than"]},{"Key":"differently than","Fragments":["I"]},{"Key":"normally would","Fragments":["have."]},{"Key":"I'd generally","Fragments":["use"]},{"Key":"generally use","Fragments":["a"]},{"Key":"a manually","Fragments":["constructed"]},{"Key":"manually constructed","Fragments":["index"]},{"Key":"constructed index","Fragments":["as,"]},{"Key":"index as,","Fragments":["even"]},{"Key":"as, even","Fragments":["for"]},{"Key":"little exercise,","Fragments":["it"]},{"Key":"exercise, it","Fragments":["was"]},{"Key":"a right","Fragments":["pain"]},{"Key":"right pain","Fragments":["to"]},{"Key":"pain to","Fragments":["maintain"]},{"Key":"maintain and","Fragments":["correct."]},{"Key":"My approach","Fragments":["made"]},{"Key":"approach made","Fragments":["the"]},{"Key":"single \\n","Fragments":["and"]},{"Key":"\\n and","Fragments":["double"]},{"Key":"and double","Fragments":["\\n\\n"]},{"Key":"double \\n\\n","Fragments":["line"]},{"Key":"\\n\\n line","Fragments":["endings"]},{"Key":"line endings","Fragments":["kind"]},{"Key":"endings kind","Fragments":["of"]},{"Key":"a pain","Fragments":["and","(adding"]},{"Key":"pain and","Fragments":["because"]},{"Key":"using `string.Join`","Fragments":["and"]},{"Key":"`string.Join` and","Fragments":["getting"]},{"Key":"getting that","Fragments":["trailing"]},{"Key":"that trailing","Fragments":["\\n\\n"]},{"Key":"trailing \\n\\n","Fragments":["required"]},{"Key":"\\n\\n required","Fragments":["some"]},{"Key":"required some","Fragments":["tweaking"]},{"Key":"some tweaking","Fragments":["that"]},{"Key":"tweaking that","Fragments":["I"]},{"Key":"hadn't wanted","Fragments":["to"]},{"Key":" Re-used","Fragments":["the"]},{"Key":"Re-used the","Fragments":["PrimeFactors"]},{"Key":"the PrimeFactors","Fragments":["method"]},{"Key":"PrimeFactors method","Fragments":["from"]},{"Key":"exercise making","Fragments":["this"]},{"Key":"this pretty","Fragments":["easy."]},{"Key":" LOL,","Fragments":["I"]},{"Key":"LOL, I","Fragments":["did"]},{"Key":"same thing.","Fragments":["I"]},{"Key":"Factors exercise","Fragments":["then"]},{"Key":"exercise then","Fragments":["started"]},{"Key":"then started","Fragments":["this"]},{"Key":"started this","Fragments":["next"]},{"Key":"this next","Fragments":["so"]},{"Key":"next so","Fragments":["just"]},{"Key":"so just","Fragments":["re-used","thought","return"]},{"Key":"just re-used","Fragments":["the","the"]},{"Key":"re-used the","Fragments":["code","same"]},{"Key":"don't mind","Fragments":["using","the"]},{"Key":"mind using","Fragments":["classes"]},{"Key":"using classes","Fragments":["to"]},{"Key":"group your","Fragments":["data"]},{"Key":"data but","Fragments":["I"]},{"Key":"are poorly","Fragments":["named."]},{"Key":"poorly named.","Fragments":["They"]},{"Key":"named. They","Fragments":["aren't"]},{"Key":"aren't really","Fragments":["SongVerses"]},{"Key":"really SongVerses","Fragments":["they"]},{"Key":"SongVerses they","Fragments":["are"]},{"Key":"the Gifts","Fragments":["which"]},{"Key":"Gifts which","Fragments":["you"]},{"Key":"later combine","Fragments":["(in"]},{"Key":"combine (in","Fragments":["the"]},{"Key":"the aptly","Fragments":["named)"]},{"Key":"aptly named)","Fragments":["GetGifts."]},{"Key":"about removing","Fragments":["the"]},{"Key":"the 'and'.","Fragments":["I"]},{"Key":"'and'. I","Fragments":["think"]},{"Key":"better approach","Fragments":["is"]},{"Key":"method than","Fragments":["joins"]},{"Key":"than joins","Fragments":["the"]},{"Key":"joins the","Fragments":["list"]},{"Key":"of gifts","Fragments":["with"]},{"Key":"gifts with","Fragments":["the"]},{"Key":"the ',","Fragments":["'","and'"]},{"Key":"', '","Fragments":["and"]},{"Key":"' and","Fragments":["adds"]},{"Key":"and adds","Fragments":["the"]},{"Key":"adds the","Fragments":["',"]},{"Key":"', and'","Fragments":["before"]},{"Key":"and' before","Fragments":["the"]},{"Key":"Better. You","Fragments":["still"]},{"Key":"following pseudo-code","Fragments":["repeated"]},{"Key":"pseudo-code repeated","Fragments":["multiple"]},{"Key":"repeated multiple","Fragments":["times."]},{"Key":"multiple times.","Fragments":["Can"]},{"Key":"times. Can","Fragments":["you"]},{"Key":"combine them","Fragments":["somehow?"]},{"Key":"\u003c x","Fragments":["/"]},{"Key":"x /","Fragments":["y;"]},{"Key":"/ y;","Fragments":["i++)"]},{"Key":"(x \u003e","Fragments":["y)"]},{"Key":" x","Fragments":["="]},{"Key":" cleaned","Fragments":["up"]},{"Key":" @rossie","Fragments":["In"]},{"Key":"@rossie In","Fragments":["Grade,"]},{"Key":"Grade, aren't","Fragments":["we"]},{"Key":"aren't we","Fragments":["using"]},{"Key":"we using","Fragments":["the"]},{"Key":"list by","Fragments":["assigning"]},{"Key":"by assigning","Fragments":["it"]},{"Key":"assigning it","Fragments":["in"]},{"Key":"in \u003ccode\u003elist","Fragments":["="]},{"Key":"\u003ccode\u003elist =","Fragments":["Roster[grade]"]},{"Key":"= Roster[grade]","Fragments":["\u003c/code\u003e?"]},{"Key":"Roster[grade] \u003c/code\u003e?","Fragments":["I'm"]},{"Key":"\u003c/code\u003e? I'm","Fragments":["not"]},{"Key":"concern with","Fragments":["the"]},{"Key":"list being","Fragments":["created."]},{"Key":"being created.","Fragments":["I"]},{"Key":"created. I","Fragments":["may"]},{"Key":"entirely understand","Fragments":["the"]},{"Key":"internal mechanism","Fragments":["c#"]},{"Key":"mechanism c#","Fragments":["uses"]},{"Key":"c# uses","Fragments":["though."]},{"Key":"uses though.","Fragments":["What's"]},{"Key":"though. What's","Fragments":["the"]},{"Key":"the alternative?","Fragments":["Write"]},{"Key":"alternative? Write","Fragments":["in"]},{"Key":"Write in","Fragments":["two"]},{"Key":"different return","Fragments":["statements?"]},{"Key":"Hi there,","Fragments":["you"]},{"Key":"single Regex.replace.","Fragments":["Right"]},{"Key":"Regex.replace. Right","Fragments":["now"]},{"Key":"now you're","Fragments":["kind","issuing"]},{"Key":"you're kind","Fragments":["of"]},{"Key":"of hacking","Fragments":["it","the"]},{"Key":"hacking it","Fragments":["by"]},{"Key":"by knowing","Fragments":["what"]},{"Key":"knowing what","Fragments":["the"]},{"Key":"tests are,","Fragments":["but"]},{"Key":"are, but","Fragments":["what"]},{"Key":"word \"can't\"","Fragments":["was"]},{"Key":"\"can't\" was","Fragments":["thrown"]},{"Key":"was thrown","Fragments":["in?"]},{"Key":"thrown in?","Fragments":["You'd"]},{"Key":"in? You'd","Fragments":["have"]},{"Key":"You'd have","Fragments":["to"]},{"Key":"additional lines","Fragments":["to","probably"]},{"Key":"The better","Fragments":["way,"]},{"Key":"better way,","Fragments":["IMO,","or"]},{"Key":"way, IMO,","Fragments":["would"]},{"Key":"IMO, would","Fragments":["be"]},{"Key":"a regex","Fragments":["that","but"]},{"Key":"regex that","Fragments":["replaces","my"]},{"Key":"that replaces","Fragments":["all"]},{"Key":"all non-word","Fragments":["characters"]},{"Key":"except the","Fragments":["apostrophe.","order,"]},{"Key":"the apostrophe.","Fragments":["you"]},{"Key":"apostrophe. you","Fragments":["can"]},{"Key":"like this:\u003ccode\u003e","Fragments":["@\"[^\\w\\']\"\u003c/code\u003e"]},{"Key":"this:\u003ccode\u003e @\"[^\\w\\']\"\u003c/code\u003e","Fragments":["True,"]},{"Key":"@\"[^\\w\\']\"\u003c/code\u003e True,","Fragments":["this"]},{"Key":"True, this","Fragments":["may"]},{"Key":"be entirely","Fragments":["correct"]},{"Key":"entirely correct","Fragments":["for"]},{"Key":"correct for","Fragments":["all"]},{"Key":"all cases,","Fragments":["I"]},{"Key":"cases, I","Fragments":["haven't"]},{"Key":"tested it","Fragments":["beyond"]},{"Key":"it beyond","Fragments":["what"]},{"Key":"beyond what","Fragments":["were"]},{"Key":"what were","Fragments":["given,"]},{"Key":"were given,","Fragments":["but"]},{"Key":"given, but","Fragments":["it"]},{"Key":"got going","Fragments":["on"]},{"Key":"am happy","Fragments":["someone"]},{"Key":"happy someone","Fragments":["posted"]},{"Key":"someone posted","Fragments":["this"]},{"Key":"posted this","Fragments":["solution."]},{"Key":"solution. I've","Fragments":["seen"]},{"Key":"seen so","Fragments":["much"]},{"Key":"engineering in","Fragments":["production"]},{"Key":"been faster","Fragments":["to"]},{"Key":"just brute","Fragments":["forced"]},{"Key":"brute forced","Fragments":["it."]},{"Key":"of us","Fragments":["small","complained."]},{"Key":"us small","Fragments":["pond"]},{"Key":"small pond","Fragments":["developers"]},{"Key":"pond developers","Fragments":["imagine"]},{"Key":"developers imagine","Fragments":["our"]},{"Key":"imagine our","Fragments":["boats"]},{"Key":"our boats","Fragments":["cruising"]},{"Key":"boats cruising","Fragments":["on"]},{"Key":"cruising on","Fragments":["the"]},{"Key":"the oceans","Fragments":["and"]},{"Key":"oceans and","Fragments":["so"]},{"Key":"a build","Fragments":["a"]},{"Key":"a Titanic","Fragments":["instead"]},{"Key":"Titanic instead","Fragments":["of"]},{"Key":"a row","Fragments":["boat."]},{"Key":" And,","Fragments":["isn't"]},{"Key":"And, isn't","Fragments":["this"]},{"Key":"the tenets","Fragments":["of"]},{"Key":"tenets of","Fragments":["TDD?"]},{"Key":"TDD? Only","Fragments":["implement"]},{"Key":"Only implement","Fragments":["what"]},{"Key":"implement what","Fragments":["the"]},{"Key":"require in","Fragments":["the"]},{"Key":"simplest way.","Fragments":["When"]},{"Key":"way. When","Fragments":["new"]},{"Key":"When new","Fragments":["more"]},{"Key":"new more","Fragments":["elaborate"]},{"Key":"more elaborate","Fragments":["requirements"]},{"Key":"elaborate requirements","Fragments":["come"]},{"Key":"requirements come","Fragments":["along"]},{"Key":"come along","Fragments":["we"]},{"Key":"along we","Fragments":["refactor."]},{"Key":"bigger headache","Fragments":["than"]},{"Key":"headache than","Fragments":["expected."]},{"Key":"than expected.","Fragments":["There's"]},{"Key":"expected. There's","Fragments":["probably"]},{"Key":"There's probably","Fragments":["quite"]},{"Key":"probably quite","Fragments":["a"]},{"Key":"few optimizations","Fragments":["that"]},{"Key":"optimizations that","Fragments":["I","I"]},{"Key":"I missed.","Fragments":["I'll"]},{"Key":"missed. I'll","Fragments":["have"]},{"Key":"revisit this","Fragments":["some"]},{"Key":"good. Perhaps","Fragments":["you"]},{"Key":"could go","Fragments":["for","a"]},{"Key":" Ugh.","Fragments":["I'm"]},{"Key":"Ugh. I'm","Fragments":["a"]},{"Key":"a doofus","Fragments":["and"]},{"Key":"doofus and","Fragments":["made"]},{"Key":"lot harder","Fragments":["than"]},{"Key":"it needed","Fragments":["to"]},{"Key":"be. Nice","Fragments":["to"]},{"Key":"Nice to","Fragments":["be","see"]},{"Key":"your submissions","Fragments":["for"]},{"Key":"Use AddSeconds","Fragments":["(duh)"]},{"Key":"Use 1E9","Fragments":["literal"]},{"Key":"1E9 literal","Fragments":["syntax"]},{"Key":"think generally","Fragments":["iteration"]},{"Key":"generally iteration","Fragments":["is"]},{"Key":"performant but","Fragments":["is","that"]},{"Key":"always as","Fragments":["easy"]},{"Key":"understand. Since","Fragments":["recursion","you"]},{"Key":"Since recursion","Fragments":["is"]},{"Key":"is making","Fragments":["method"]},{"Key":"making method","Fragments":["calls"]},{"Key":"calls you've","Fragments":["got"]},{"Key":"maintain all","Fragments":["those"]},{"Key":"those variable","Fragments":["scopes"]},{"Key":"variable scopes","Fragments":["and"]},{"Key":"scopes and","Fragments":["calls"]},{"Key":"and calls","Fragments":["until"]},{"Key":"calls until","Fragments":["your"]},{"Key":"until your","Fragments":["roll"]},{"Key":"your roll","Fragments":["back"]},{"Key":"roll back","Fragments":["out."]},{"Key":"back out.","Fragments":["Iteration"]},{"Key":"out. Iteration","Fragments":["requires"]},{"Key":"Iteration requires","Fragments":["you"]},{"Key":"requires you","Fragments":["to"]},{"Key":"manually track","Fragments":["all"]},{"Key":"track all","Fragments":["that"]},{"Key":"state information.","Fragments":["So"]},{"Key":"So there","Fragments":["is"]},{"Key":"C# strings","Fragments":["are"]},{"Key":"are immutable","Fragments":["and"]},{"Key":"immutable and","Fragments":["you"]},{"Key":"making lots","Fragments":["of"]},{"Key":"of copies","Fragments":["of"]},{"Key":"copies of","Fragments":["the"]},{"Key":"the songLyrics","Fragments":["string."]},{"Key":"songLyrics string.","Fragments":["Whether"]},{"Key":"string. Whether","Fragments":["using"]},{"Key":"Whether using","Fragments":["a"]},{"Key":"a recursion","Fragments":["or"]},{"Key":"recursion or","Fragments":["iteration"]},{"Key":"or iteration","Fragments":["you"]},{"Key":"iteration you","Fragments":["could"]},{"Key":"start index","Fragments":["instead"]},{"Key":"of chopping","Fragments":["up"]},{"Key":"chopping up","Fragments":["the"]},{"Key":"and passing","Fragments":["copies."]},{"Key":"1. Of","Fragments":["course,"]},{"Key":"course, but","Fragments":["I"]},{"Key":"the song's","Fragments":["text"]},{"Key":"song's text","Fragments":["myself"]},{"Key":"2. string.Format","Fragments":["is"]},{"Key":"string.Format is","Fragments":["a"]},{"Key":"lot better,","Fragments":["but"]},{"Key":"didn't come","Fragments":["to"]},{"Key":"mind while","Fragments":["writing"]},{"Key":"while writing","Fragments":["this."]},{"Key":"For discussions","Fragments":["sake"]},{"Key":"discussions sake","Fragments":["(and"]},{"Key":"sake (and","Fragments":["because"]},{"Key":"(and because","Fragments":["I"]},{"Key":"don't know)","Fragments":["how"]},{"Key":"know) how","Fragments":["do"]},{"Key":"decide whether","Fragments":["you"]},{"Key":"use double","Fragments":["or","operations"]},{"Key":"double or","Fragments":["decimal?"]},{"Key":"recommend extracting","Fragments":["out"]},{"Key":"extracting out","Fragments":["the"]},{"Key":"single method.","Fragments":["In","In"]},{"Key":"method. In","Fragments":["the","the"]},{"Key":"future should","Fragments":["the"]},{"Key":"calculation need","Fragments":["to"]},{"Key":"change you'd","Fragments":["only"]},{"Key":"you'd only","Fragments":["have"]},{"Key":"the air","Fragments":["about"]},{"Key":"air about","Fragments":["using"]},{"Key":"dictionary keys.","Fragments":["I"]},{"Key":"keys. I","Fragments":["used"]},{"Key":"keep type","Fragments":["safety."]},{"Key":"type safety.","Fragments":["Strings"]},{"Key":"safety. Strings","Fragments":["as"]},{"Key":"Strings as","Fragments":["keys"]},{"Key":"as keys","Fragments":["can"]},{"Key":"keys can","Fragments":["introduce"]},{"Key":"can introduce","Fragments":["run-time"]},{"Key":"introduce run-time","Fragments":["bugs"]},{"Key":"run-time bugs","Fragments":["from"]},{"Key":"from simple","Fragments":["typos"]},{"Key":"simple typos","Fragments":["where"]},{"Key":"typos where","Fragments":["the"]},{"Key":"the a","Fragments":["typo"]},{"Key":"a typo","Fragments":["in"]},{"Key":"typo in","Fragments":["an","comment"]},{"Key":"enum will","Fragments":["fail"]},{"Key":"fail at","Fragments":["compile"]},{"Key":" one","Fragments":["thing"]},{"Key":"change is","Fragments":["to"]},{"Key":"the \u003ccode\u003e.Sort()\u003c/code\u003e","Fragments":["from"]},{"Key":"\u003ccode\u003e.Sort()\u003c/code\u003e from","Fragments":["the"]},{"Key":"move it","Fragments":["the"]},{"Key":"the True","Fragments":["section"]},{"Key":"True section","Fragments":["of"]},{"Key":"IF statement","Fragments":["because"]},{"Key":"statement because","Fragments":["you'll"]},{"Key":"because you'll","Fragments":["only"]},{"Key":"you'll only","Fragments":["ever","discard"]},{"Key":"ever need","Fragments":["to"]},{"Key":"sort if","Fragments":["you're"]},{"Key":"you're adding","Fragments":["additional"]},{"Key":"adding additional","Fragments":["names,"]},{"Key":"additional names,","Fragments":["not"]},{"Key":"names, not","Fragments":["when"]},{"Key":"first one.","Fragments":["Right"]},{"Key":"one. Right","Fragments":["now"]},{"Key":"you're issuing","Fragments":["the"]},{"Key":"issuing the","Fragments":["sort"]},{"Key":"sort on","Fragments":["lists"]},{"Key":"on lists","Fragments":["with"]},{"Key":"lists with","Fragments":["only"]},{"Key":"1 element","Fragments":["in"]},{"Key":"element in","Fragments":["many","an"]},{"Key":"many cases.","Fragments":["Also,"]},{"Key":"requires one","Fragments":["additional"]},{"Key":"one additional","Fragments":["line"]},{"Key":"read as","Fragments":["is,"]},{"Key":"as is,","Fragments":["but"]},{"Key":"the \u003ccode\u003eGrade\u003c/code\u003e","Fragments":["method"]},{"Key":"\u003ccode\u003eGrade\u003c/code\u003e method","Fragments":["you"]},{"Key":"could var","Fragments":["a"]},{"Key":"var a","Fragments":["new"]},{"Key":"then perform","Fragments":["your"]},{"Key":"your \u003ccode\u003eContainsKey\u003c/code\u003e","Fragments":["search"]},{"Key":"\u003ccode\u003eContainsKey\u003c/code\u003e search","Fragments":["and"]},{"Key":"list you","Fragments":["got"]},{"Key":"got from","Fragments":["Roster,"]},{"Key":"from Roster,","Fragments":["then"]},{"Key":"Roster, then","Fragments":["end"]},{"Key":"then end","Fragments":["with"]},{"Key":"recommend keeping","Fragments":["the"]},{"Key":"the seconds","Fragments":["per"]},{"Key":"seconds per","Fragments":["year"]},{"Key":"per year","Fragments":["values"]},{"Key":"year values","Fragments":["in"]},{"Key":"in constants","Fragments":["or"]},{"Key":"dictionary or","Fragments":["something","you'll","individual"]},{"Key":"something so","Fragments":["they"]},{"Key":"are together","Fragments":["and"]},{"Key":"maintain. With","Fragments":["constants"]},{"Key":"With constants","Fragments":["it"]},{"Key":"constants it","Fragments":["should"]},{"Key":"should compile","Fragments":["down"]},{"Key":"compile down","Fragments":["to"]},{"Key":"same inline","Fragments":["instructions"]},{"Key":"inline instructions","Fragments":["but"]},{"Key":"instructions but","Fragments":["the"]},{"Key":"source is","Fragments":["cleaner.","far"]},{"Key":"property called","Fragments":["`Date`"]},{"Key":"called `Date`","Fragments":["that"]},{"Key":"`Date` that","Fragments":["returns"]},{"Key":"returns just","Fragments":["the"]},{"Key":"date without","Fragments":["the"]},{"Key":" Implement","Fragments":["a"]},{"Key":"Implement a","Fragments":["single"]},{"Key":"line evaluation","Fragments":["thanks"]},{"Key":"evaluation thanks","Fragments":["to"]},{"Key":"to @stacy","Fragments":["for"]},{"Key":"@stacy for","Fragments":["the"]},{"Key":"the clue","Fragments":["about"]},{"Key":"clue about","Fragments":["the"]},{"Key":"Zip extension","Fragments":["method"]},{"Key":"method available","Fragments":["in"]},{"Key":"Just do","Fragments":["List\u003cstring\u003e"]},{"Key":"do List\u003cstring\u003e","Fragments":["list"]},{"Key":"List\u003cstring\u003e list","Fragments":["="]},{"Key":"And put","Fragments":["the"]},{"Key":"List\u003cstring\u003e() in","Fragments":["the"]},{"Key":" Or,","Fragments":["you"]},{"Key":"Or, you","Fragments":["could"]},{"Key":"return Roster.ContainsKey(grade)","Fragments":["?"]},{"Key":"Roster.ContainsKey(grade) ?","Fragments":["Roster[grade]"]},{"Key":"? Roster[grade]","Fragments":[":"]},{"Key":"Roster[grade] :","Fragments":["new"]},{"Key":": new","Fragments":["List\u003cstring\u003e();"]},{"Key":"bad to","Fragments":["put"]},{"Key":"put extension","Fragments":["methods"]},{"Key":"types if","Fragments":["they"]},{"Key":"be universally","Fragments":["used"]},{"Key":"universally used","Fragments":["anywhere..."]},{"Key":"used anywhere...","Fragments":["Otherwise,"]},{"Key":"anywhere... Otherwise,","Fragments":["it"]},{"Key":"is business","Fragments":["specific"]},{"Key":"business specific","Fragments":["and"]},{"Key":"and needs","Fragments":["to"]},{"Key":"don't know..","Fragments":["I"]},{"Key":"know.. I","Fragments":["like"]},{"Key":"written here","Fragments":["a"]},{"Key":"more, as","Fragments":["it"]},{"Key":"it \"tells","Fragments":["the"]},{"Key":"\"tells the","Fragments":["story\".."]},{"Key":" Moreover,","Fragments":["I"]},{"Key":"Moreover, I","Fragments":["originally"]},{"Key":"new ArgumentException(\"Invalid","Fragments":["number\");"]},{"Key":"And resharper","Fragments":["suggested"]},{"Key":"resharper suggested","Fragments":["converting"]},{"Key":"suggested converting","Fragments":["this"]},{"Key":"converting this","Fragments":["loop"]},{"Key":"this loop","Fragments":["to"]},{"Key":"this LINQ","Fragments":["way."]},{"Key":"4 solutions","Fragments":["ordered"]},{"Key":"solutions ordered","Fragments":["in"]},{"Key":"ordered in","Fragments":["terms"]},{"Key":" CountDown","Fragments":["is"]},{"Key":"CountDown is","Fragments":["equivalent"]},{"Key":"is equivalent","Fragments":["to","to"]},{"Key":"equivalent to","Fragments":["most","it","its","the"]},{"Key":"most solutions","Fragments":["here"]},{"Key":" Rules","Fragments":["is"]},{"Key":"Rules is","Fragments":["closest"]},{"Key":"is closest","Fragments":["to"]},{"Key":"closest to","Fragments":["the"]},{"Key":"question and","Fragments":["my"]},{"Key":"opinion, TDD","Fragments":["is"]},{"Key":"pretty dangerous.","Fragments":["Unless"]},{"Key":"dangerous. Unless","Fragments":["you"]},{"Key":"get those","Fragments":["tests"]},{"Key":"those tests","Fragments":["exactly"]},{"Key":"exactly right,","Fragments":["which"]},{"Key":"right, which","Fragments":["is"]},{"Key":"almost impossible...","Fragments":["You"]},{"Key":"impossible... You","Fragments":["could"]},{"Key":"up like","Fragments":["this:"]},{"Key":" \u003ca","Fragments":["href=\"http://geek-and-poke.com/geekandpoke/2013/7/28/tdd\"\u003ehttp://geek-and-poke.com/geekandpoke/2013/7/28/tdd\u003c/a\u003e"]},{"Key":"this finally","Fragments":["passes"]},{"Key":"finally passes","Fragments":["the"]},{"Key":"credit part.","Fragments":["I"]},{"Key":"part. I","Fragments":["did"]},{"Key":"realize at","Fragments":["first"]},{"Key":"first that","Fragments":["the"]},{"Key":"Dictionary initializer","Fragments":["wouldn't"]},{"Key":"initializer wouldn't","Fragments":["deep"]},{"Key":"wouldn't deep","Fragments":["copy"]},{"Key":"copy the","Fragments":["dictionary"]},{"Key":"same pointers","Fragments":["to"]},{"Key":"pointers to","Fragments":["the"]},{"Key":"the existing","Fragments":["lists,","ones.","assertions","methods","Unit"]},{"Key":"existing lists,","Fragments":["allowing"]},{"Key":"lists, allowing","Fragments":["changes"]},{"Key":"allowing changes","Fragments":["to"]},{"Key":"my private","Fragments":["variable"]},{"Key":"variable _roster.","Fragments":["This"]},{"Key":"_roster. This","Fragments":["new"]},{"Key":"This new","Fragments":["way"]},{"Key":"new way","Fragments":["deep"]},{"Key":"way deep","Fragments":["copies"]},{"Key":"deep copies","Fragments":["the"]},{"Key":"copies the","Fragments":["dictionary."]},{"Key":"dictionary. This","Fragments":["may"]},{"Key":"This may","Fragments":["cause"]},{"Key":"may cause","Fragments":["a"]},{"Key":"cause a","Fragments":["performance"]},{"Key":"hit but","Fragments":["I"]},{"Key":"get new","Fragments":["objects"]},{"Key":"new objects","Fragments":["instead"]},{"Key":"objects instead","Fragments":["of"]},{"Key":"of references","Fragments":["to"]},{"Key":"references to","Fragments":["the"]},{"Key":"small test","Fragments":["for"]},{"Key":"this effect","Fragments":["and"]},{"Key":"effect and","Fragments":["it"]},{"Key":" school.Add(\"Kareem\",","Fragments":["6);"]},{"Key":" school.Roster[6][0]","Fragments":["="]},{"Key":"school.Roster[6][0] =","Fragments":["\"Jeff\";"]},{"Key":" Assert.That(school.Roster[6],","Fragments":["Is.EqualTo(new"]},{"Key":"Assert.That(school.Roster[6], Is.EqualTo(new","Fragments":["List\u003cstring\u003e"]},{"Key":"Is.EqualTo(new List\u003cstring\u003e","Fragments":["{","{","{"]},{"Key":"{ \"Kareem\"","Fragments":["}"]},{"Key":"\"Kareem\" }","Fragments":[")"]},{"Key":"} )","Fragments":[")"]},{"Key":") )","Fragments":[";"]},{"Key":"negative because","Fragments":["summing"]},{"Key":"because summing","Fragments":["the"]},{"Key":"summing the","Fragments":["different","groups."]},{"Key":"different pairs","Fragments":["will"]},{"Key":"pairs will","Fragments":["naturally"]},{"Key":"will naturally","Fragments":["fail"]},{"Key":"naturally fail","Fragments":["on"]},{"Key":" Lol,","Fragments":["yeah.","nice."]},{"Key":"Lol, yeah.","Fragments":["I"]},{"Key":"yeah. I","Fragments":["figured,"]},{"Key":"I figured,","Fragments":["I"]},{"Key":"figured, I","Fragments":["just"]},{"Key":"did that,","Fragments":["so","you"]},{"Key":"that, so","Fragments":["why"]},{"Key":"not copy","Fragments":["and"]},{"Key":"and paste.","Fragments":["You",";)"]},{"Key":"paste. You","Fragments":["aren't"]},{"Key":"real programmer","Fragments":["if"]},{"Key":"programmer if","Fragments":["you"]},{"Key":"don't copy","Fragments":["and"]},{"Key":"Ah, ReSharper...","Fragments":["I"]},{"Key":"ReSharper... I","Fragments":["don't"]},{"Key":"need software","Fragments":["telling"]},{"Key":"software telling","Fragments":["me"]},{"Key":"telling me","Fragments":["how"]},{"Key":"me how","Fragments":["to"]},{"Key":"to code.","Fragments":[";)","Not"]},{"Key":"actually recently","Fragments":["found"]},{"Key":"recently found","Fragments":["out"]},{"Key":"found out","Fragments":["why"]},{"Key":"why college","Fragments":["made"]},{"Key":"1 return.","Fragments":["In"]},{"Key":"return. In","Fragments":["older"]},{"Key":"In older","Fragments":["languages"]},{"Key":"older languages","Fragments":["like"]},{"Key":"languages like","Fragments":["C,"]},{"Key":"like C,","Fragments":["you"]},{"Key":"C, you","Fragments":["had"]},{"Key":"to deallocate","Fragments":["memory","all"]},{"Key":"deallocate memory","Fragments":["(or"]},{"Key":"memory (or","Fragments":["you"]},{"Key":"(or you","Fragments":["get"]},{"Key":"get memory","Fragments":["leaks)."]},{"Key":"memory leaks).","Fragments":["If"]},{"Key":"leaks). If","Fragments":["you"]},{"Key":"had multiple","Fragments":["returns,"]},{"Key":"returns, you","Fragments":["would"]},{"Key":"deallocate all","Fragments":["the"]},{"Key":"pointers you","Fragments":["used"]},{"Key":"at every","Fragments":["return."]},{"Key":"every return.","Fragments":["Thus,"]},{"Key":"return. Thus,","Fragments":["it"]},{"Key":"Thus, it","Fragments":["was"]},{"Key":"once at","Fragments":["the"]},{"Key":"end, so","Fragments":["you"]},{"Key":"had one","Fragments":["return."]},{"Key":"one return.","Fragments":["However,"]},{"Key":"return. However,","Fragments":[".NET"]},{"Key":"However, .NET","Fragments":["has"]},{"Key":"has its","Fragments":["own"]},{"Key":"own garbage","Fragments":["collecting,"]},{"Key":"garbage collecting,","Fragments":["so"]},{"Key":"collecting, so","Fragments":["multiple"]},{"Key":"so multiple","Fragments":["returns"]},{"Key":"are fine.","Fragments":[":)"]},{"Key":"natural next","Fragments":["step."]},{"Key":" Combinding","Fragments":["the"]},{"Key":"Combinding the","Fragments":["dictionaries"]},{"Key":"the dictionaries","Fragments":["and","were"]},{"Key":"dictionaries and","Fragments":["input"]},{"Key":"and input","Fragments":["the","and"]},{"Key":"input the","Fragments":["hole"]},{"Key":"the hole","Fragments":["value,"]},{"Key":"hole value,","Fragments":["will"]},{"Key":"value, will","Fragments":["seal"]},{"Key":"will seal","Fragments":["the"]},{"Key":"seal the","Fragments":["deal."]},{"Key":" ```GetTextFor(new","Fragments":["Dictionary\u003cint,"]},{"Key":"```GetTextFor(new Dictionary\u003cint,","Fragments":["string\u003e"]},{"Key":"Dictionary\u003cint, string\u003e","Fragments":["{"]},{"Key":"string\u003e {","Fragments":["{"]},{"Key":"{ 1000,","Fragments":["\"M\""]},{"Key":"1000, \"M\"","Fragments":["},"]},{"Key":"\"M\" },","Fragments":["{"]},{"Key":"{ 900,","Fragments":["\"CM\""]},{"Key":"900, \"CM\"","Fragments":["},"]},{"Key":"\"CM\" },","Fragments":["{"]},{"Key":"{ 500,","Fragments":["\"D\""]},{"Key":"500, \"D\"","Fragments":["},"]},{"Key":"\"D\" },","Fragments":["{"]},{"Key":"{ 400,","Fragments":["\"CD\""]},{"Key":"400, \"CD\"","Fragments":["},"]},{"Key":"\"CD\" },","Fragments":["{"]},{"Key":"{ 100,","Fragments":["\"C\""]},{"Key":"100, \"C\"","Fragments":["},"]},{"Key":"\"C\" },","Fragments":["{"]},{"Key":"{ 90,","Fragments":["\"XC\""]},{"Key":"90, \"XC\"","Fragments":["},"]},{"Key":"\"XC\" },","Fragments":["{"]},{"Key":"{ 50,","Fragments":["\"L\""]},{"Key":"50, \"L\"","Fragments":["},"]},{"Key":"\"L\" },","Fragments":["{"]},{"Key":"{ 40,","Fragments":["\"XL\""]},{"Key":"40, \"XL\"","Fragments":["},"]},{"Key":"\"XL\" },","Fragments":["{"]},{"Key":"{ 10,","Fragments":["\"X\""]},{"Key":"10, \"X\"","Fragments":["},"]},{"Key":"\"X\" },","Fragments":["{"]},{"Key":"{ 9,","Fragments":["\"IX\""]},{"Key":"9, \"IX\"","Fragments":["},"]},{"Key":"\"IX\" },","Fragments":["{"]},{"Key":"{ 5,","Fragments":["\"V\""]},{"Key":"5, \"V\"","Fragments":["},"]},{"Key":"\"V\" },","Fragments":["{"]},{"Key":"{ 4,","Fragments":["\"IV\""]},{"Key":"4, \"IV\"","Fragments":["},"]},{"Key":"\"IV\" },","Fragments":["{"]},{"Key":"1, \"I\"","Fragments":["}"]},{"Key":"\"I\" }","Fragments":["},"]},{"Key":"} },","Fragments":["value);```"]},{"Key":"more solutions","Fragments":["just"]},{"Key":"solutions just","Fragments":["for"]},{"Key":"seems just","Fragments":["about"]},{"Key":"about everyone","Fragments":["else"]},{"Key":"everyone else","Fragments":["found","wrote"]},{"Key":"else found","Fragments":["the"]},{"Key":"same shortcut","Fragments":["approach"]},{"Key":"shortcut approach","Fragments":["online"]},{"Key":"approach online","Fragments":["and"]},{"Key":"online and","Fragments":["replicated"]},{"Key":"and replicated","Fragments":["it"]},{"Key":"replicated it","Fragments":["here."]},{"Key":"(in Linq","Fragments":["form)"]},{"Key":"Linq form)","Fragments":["plus"]},{"Key":"form) plus","Fragments":["three"]},{"Key":"plus three","Fragments":["others"]},{"Key":"three others","Fragments":["and"]},{"Key":"others and","Fragments":["then"]},{"Key":"is yours,","Fragments":["so"]},{"Key":"yours, so","Fragments":["there"]},{"Key":"2 new","Fragments":["ones"]},{"Key":"new ones","Fragments":["I"]},{"Key":"ones I","Fragments":["added"]},{"Key":"added are","Fragments":["the"]},{"Key":"most readable,","Fragments":["but"]},{"Key":" Skipping","Fragments":["even"]},{"Key":"Skipping even","Fragments":["numbers..."]},{"Key":"preference as","Fragments":["much"]},{"Key":"else but","Fragments":["I"]},{"Key":"using tuples","Fragments":["at"]},{"Key":"tuples at","Fragments":["all."]},{"Key":"all. I","Fragments":["dislike"]},{"Key":"dislike using","Fragments":["them"]},{"Key":"them because","Fragments":["they"]},{"Key":"they make","Fragments":["the"]},{"Key":"this example,","Fragments":["having"]},{"Key":"example, having","Fragments":["`Day`"]},{"Key":"having `Day`","Fragments":["and"]},{"Key":"`Day` and","Fragments":["`Gift`"]},{"Key":"and `Gift`","Fragments":["makes"]},{"Key":"`Gift` makes","Fragments":["it"]},{"Key":"read, say","Fragments":["`CreateGifts()`,"]},{"Key":"say `CreateGifts()`,","Fragments":["where"]},{"Key":"`CreateGifts()`, where","Fragments":["we"]},{"Key":"are talking","Fragments":["about"]},{"Key":"talking about","Fragments":["`.Gift`"]},{"Key":"about `.Gift`","Fragments":["as"]},{"Key":"`.Gift` as","Fragments":["opposed"]},{"Key":"has multiple","Fragments":["tuples"]},{"Key":"multiple tuples","Fragments":["in"]},{"Key":"tuples in","Fragments":["use"]},{"Key":"in use","Fragments":["within"]},{"Key":"a section","Fragments":["of"]},{"Key":"be \u003cb\u003ereally\u003c/b\u003e","Fragments":["confusing"]},{"Key":"\u003cb\u003ereally\u003c/b\u003e confusing","Fragments":["to"]},{"Key":"If using","Fragments":["snippets","Int.Parse,","foreach"]},{"Key":"using snippets","Fragments":["to"]},{"Key":"snippets to","Fragments":["create"]},{"Key":"create classes","Fragments":["and"]},{"Key":"classes and","Fragments":["properties,"]},{"Key":"and properties,","Fragments":["the"]},{"Key":"properties, the","Fragments":["cost"]},{"Key":"is minimal,","Fragments":["and"]},{"Key":"minimal, and","Fragments":["even"]},{"Key":"even without","Fragments":["snippets,"]},{"Key":"without snippets,","Fragments":["the"]},{"Key":"snippets, the","Fragments":["small"]},{"Key":"the small","Fragments":["bit"]},{"Key":"small bit","Fragments":["of"]},{"Key":"time spent","Fragments":["is"]},{"Key":"spent is","Fragments":["meaningless"]},{"Key":"is meaningless","Fragments":["over"]},{"Key":"meaningless over","Fragments":["the"]},{"Key":"the lifetime","Fragments":["of"]},{"Key":"lifetime of","Fragments":["the"]},{"Key":" great","Fragments":["idea"]},{"Key":"why don't","Fragments":["you"]},{"Key":"return \"((year","Fragments":["%"]},{"Key":"\"((year %","Fragments":["400"]},{"Key":"|| ((year","Fragments":["%","%","%"]},{"Key":"== 0)))\"","Fragments":["then"]},{"Key":"0)))\" then","Fragments":["you"]},{"Key":"need this","Fragments":["return","method"]},{"Key":"this return","Fragments":["true"]},{"Key":"false clause","Fragments":["^_^"]},{"Key":" Definitely","Fragments":["looks","getting","could."]},{"Key":"Definitely looks","Fragments":["better"]},{"Key":"looks better","Fragments":["as","than"]},{"Key":"better as","Fragments":["a","I","a"]},{"Key":"single-line boolean","Fragments":["statement."]},{"Key":"last step","Fragments":["is"]},{"Key":"step is","Fragments":["as"]},{"Key":"as @angelina","Fragments":["says."]},{"Key":"@angelina says.","Fragments":["Then"]},{"Key":"says. Then","Fragments":["you"]},{"Key":"get multiple","Fragments":["lines"]},{"Key":"lines down","Fragments":["to"]},{"Key":"a functionally","Fragments":["equivalent"]},{"Key":"functionally equivalent","Fragments":["single","but"]},{"Key":"equivalent single","Fragments":["line."]},{"Key":"sentence and","Fragments":["using"]},{"Key":"using constants","Fragments":["for"]},{"Key":"the responses.","Fragments":["I"]},{"Key":"responses. I","Fragments":["should"]},{"Key":"the latter,","Fragments":["which"]},{"Key":"latter, which","Fragments":["just"]},{"Key":"which just","Fragments":["goes"]},{"Key":"just goes","Fragments":["to"]},{"Key":"to prove","Fragments":["that"]},{"Key":"prove that","Fragments":["even"]},{"Key":"about perfect,","Fragments":["it"]},{"Key":"perfect, it","Fragments":["never"]},{"Key":" trying","Fragments":["it"]},{"Key":"trying it","Fragments":["out"]},{"Key":"Just compare","Fragments":["each"]},{"Key":" Increase","Fragments":["hamming"]},{"Key":"Increase hamming","Fragments":["distance"]},{"Key":"distance if","Fragments":["not"]},{"Key":"I'm nitpicking","Fragments":["myself"]},{"Key":"nitpicking myself","Fragments":["based"]},{"Key":"myself based","Fragments":["on"]},{"Key":"people's implementations.","Fragments":["Having"]},{"Key":"implementations. Having","Fragments":["constants"]},{"Key":"Having constants","Fragments":["is"]},{"Key":"constants is","Fragments":["cleaner","really"]},{"Key":"always better","Fragments":["than","to"]},{"Key":"having literal","Fragments":["values"]},{"Key":"code, plus","Fragments":["I've"]},{"Key":"plus I've","Fragments":["made"]},{"Key":"minor modification","Fragments":["to"]},{"Key":"modification to","Fragments":["the"]},{"Key":"flow that","Fragments":["I"]},{"Key":"think makes","Fragments":["it","it"]},{"Key":"used doubles,","Fragments":["although"]},{"Key":"doubles, although","Fragments":["I"]},{"Key":"remember changing","Fragments":["the"]},{"Key":"the types","Fragments":["several","and","that"]},{"Key":"types several","Fragments":["times"]},{"Key":"several times","Fragments":["whilst"]},{"Key":"times whilst","Fragments":["writing"]},{"Key":"whilst writing","Fragments":["this..."]},{"Key":" Fabulous!","Fragments":["There"]},{"Key":"Fabulous! There","Fragments":["are"]},{"Key":"two small","Fragments":["things"]},{"Key":"small things","Fragments":["you"]},{"Key":"may or","Fragments":["may"]},{"Key":"or may","Fragments":["not"]},{"Key":"to add.","Fragments":["First,"]},{"Key":"add. First,","Fragments":["when"]},{"Key":"First, when","Fragments":["value"]},{"Key":"0 you","Fragments":["can"]},{"Key":"loop early","Fragments":["if"]},{"Key":"want. Second,","Fragments":["if"]},{"Key":"of ruleNumber.Key,","Fragments":["you"]},{"Key":"ruleNumber.Key, you","Fragments":["could"]},{"Key":"could divide","Fragments":["to"]},{"Key":"divide to","Fragments":["figure"]},{"Key":"many ruleNumber.Value","Fragments":["strings"]},{"Key":"ruleNumber.Value strings","Fragments":["to"]},{"Key":"add so","Fragments":["you"]},{"Key":"need an","Fragments":["inner"]},{"Key":"simple example","Fragments":["the","it"]},{"Key":"reviewing some","Fragments":["other"]},{"Key":"the tally","Fragments":["pattern"]},{"Key":"tally pattern","Fragments":["rather"]},{"Key":"pattern rather","Fragments":["than"]},{"Key":"just providing","Fragments":["a"]},{"Key":"every decimal","Fragments":["place."]},{"Key":"change allows","Fragments":["the"]},{"Key":"easily extended","Fragments":["by"]},{"Key":"extended by","Fragments":["simply"]},{"Key":"by simply","Fragments":["adding","saying"]},{"Key":"simply adding","Fragments":["to"]},{"Key":"the valueCharacters","Fragments":["string"]},{"Key":"valueCharacters string","Fragments":["and"]},{"Key":"adding processing","Fragments":["for"]},{"Key":"processing for","Fragments":["higher"]},{"Key":"for higher","Fragments":["decimal"]},{"Key":"higher decimal","Fragments":["places."]},{"Key":"implementation very","Fragments":["much,"]},{"Key":"that's probably","Fragments":["because","overkill","more"]},{"Key":"it's almost","Fragments":["exactly"]},{"Key":"did mine!","Fragments":["You"]},{"Key":"mine! You","Fragments":["may"]},{"Key":"given strand","Fragments":["only"]},{"Key":"strand only","Fragments":["contains"]},{"Key":"contains valid","Fragments":["nucleotides"]},{"Key":"nucleotides before","Fragments":["trying"]},{"Key":"or you'll","Fragments":["get"]},{"Key":"you'll get","Fragments":["an","some","an"]},{"Key":"custom exception,","Fragments":["so"]},{"Key":"exception, so","Fragments":["did"]},{"Key":"so did","Fragments":["I"]},{"Key":"it ok?","Fragments":["I"]},{"Key":"ok? I","Fragments":["also"]},{"Key":"also tried","Fragments":["to"]},{"Key":"my NucleotideCounts","Fragments":["dictionary"]},{"Key":"dictionary immutable","Fragments":["by"]},{"Key":"immutable by","Fragments":["outside"]},{"Key":"by outside","Fragments":["code."]},{"Key":"outside code.","Fragments":["I"]},{"Key":"works based","Fragments":["on"]},{"Key":"my limited","Fragments":["testing"]},{"Key":"limited testing","Fragments":["of"]},{"Key":"testing of","Fragments":["attempting"]},{"Key":"of attempting","Fragments":["to"]},{"Key":"the 'A'","Fragments":["entry"]},{"Key":"'A' entry","Fragments":["for"]},{"Key":"entry for","Fragments":["example."]},{"Key":" well,","Fragments":["this"]},{"Key":"well, this","Fragments":["looks"]},{"Key":"looks an","Fragments":["awful"]},{"Key":"lot like","Fragments":["what"]},{"Key":"did, almost","Fragments":["exactly."]},{"Key":"almost exactly.","Fragments":["However,"]},{"Key":"exactly. However,","Fragments":["I"]},{"Key":"only recently","Fragments":["submitted"]},{"Key":"recently submitted","Fragments":["my"]},{"Key":"never saw","Fragments":["yours"]},{"Key":"saw yours","Fragments":["so"]},{"Key":"yours so","Fragments":["I"]},{"Key":"means we","Fragments":["had"]},{"Key":"same thought","Fragments":["process"]},{"Key":"thought process","Fragments":[":)"]},{"Key":"My reasoning","Fragments":["for"]},{"Key":"reasoning for","Fragments":["using"]},{"Key":"nucleotide and","Fragments":["throw"]},{"Key":"throw the","Fragments":["error","exception","InvalidNucleotideException"]},{"Key":"the error","Fragments":["was"]},{"Key":"error was","Fragments":["simply"]},{"Key":"simply for","Fragments":["code"]},{"Key":"reuse as","Fragments":["a"]},{"Key":"helper function.","Fragments":["Is"]},{"Key":"function. Is","Fragments":["there"]},{"Key":"way, or","Fragments":["a"]},{"Key":"more appropriate","Fragments":["way"]},{"Key":"appropriate way","Fragments":["to"]},{"Key":"individual \u003ccode\u003eReplace\u003c/code\u003e","Fragments":["statements"]},{"Key":"\u003ccode\u003eReplace\u003c/code\u003e statements","Fragments":["with"]},{"Key":"one single","Fragments":["\u003ccode\u003eRegex.Replace\u003c/code\u003e"]},{"Key":"single \u003ccode\u003eRegex.Replace\u003c/code\u003e","Fragments":["that"]},{"Key":"\u003ccode\u003eRegex.Replace\u003c/code\u003e that","Fragments":["covers"]},{"Key":"that covers","Fragments":["anything"]},{"Key":"covers anything","Fragments":["that's"]},{"Key":"anything that's","Fragments":["not"]},{"Key":"number. Here","Fragments":["you"]},{"Key":"are kind","Fragments":["of"]},{"Key":"hacking the","Fragments":["logic"]},{"Key":"logic because","Fragments":["you"]},{"Key":"defined set","Fragments":["of"]},{"Key":"of inputs","Fragments":["in"]},{"Key":"inputs in","Fragments":["the"]},{"Key":"test cases,","Fragments":["but"]},{"Key":"cases, but","Fragments":["if"]},{"Key":"those inputs","Fragments":["change,"]},{"Key":"inputs change,","Fragments":["your"]},{"Key":"change, your","Fragments":["code"]},{"Key":"the comment,","Fragments":["and"]},{"Key":"comment, and","Fragments":["cool"]},{"Key":"and cool","Fragments":["idea."]},{"Key":"cool idea.","Fragments":["Unknown"]},{"Key":"idea. Unknown","Fragments":["is"]},{"Key":"Unknown is","Fragments":["a"]},{"Key":"little cryptic.","Fragments":["Yet,"]},{"Key":"cryptic. Yet,","Fragments":["when"]},{"Key":"Yet, when","Fragments":["I"]},{"Key":"read `RespondTo.Whatever`","Fragments":["I"]},{"Key":"`RespondTo.Whatever` I","Fragments":["think"]},{"Key":"any response.","Fragments":["For"]},{"Key":"response. For","Fragments":["example,"]},{"Key":"example, whatever","Fragments":["seems"]},{"Key":"whatever seems","Fragments":["like"]},{"Key":"it's also","Fragments":["a"]},{"Key":"valid response","Fragments":["for"]},{"Key":"for Question,","Fragments":["Yelling,"]},{"Key":"Question, Yelling,","Fragments":["or"]},{"Key":"Yelling, or","Fragments":["Silence."]},{"Key":"or Silence.","Fragments":["Using"]},{"Key":"Silence. Using","Fragments":["`RespondTo.Default`"]},{"Key":"Using `RespondTo.Default`","Fragments":["is"]},{"Key":"`RespondTo.Default` is","Fragments":["just"]},{"Key":"OK. In","Fragments":["this"]},{"Key":"I've expanded","Fragments":["the"]},{"Key":"calculations so,","Fragments":["with"]},{"Key":"so, with","Fragments":["some"]},{"Key":"some restrictions,","Fragments":["I"]},{"Key":"restrictions, I","Fragments":["could"]},{"Key":"expand the","Fragments":["Roman","valueCharacter","program"]},{"Key":"the Roman","Fragments":["Numeral","numeral"]},{"Key":"Roman Numeral","Fragments":["alphabet"]},{"Key":"Numeral alphabet","Fragments":["to"]},{"Key":"alphabet to","Fragments":["process"]},{"Key":"process numbers","Fragments":["larger"]},{"Key":"numbers larger","Fragments":["than"]},{"Key":"than 3999","Fragments":["assuming"]},{"Key":"3999 assuming","Fragments":["the"]},{"Key":"assuming the","Fragments":["same","func","func","func","func","func"]},{"Key":"same numbering","Fragments":["pattern"]},{"Key":"numbering pattern","Fragments":["is"]},{"Key":"is continued","Fragments":["(in"]},{"Key":"continued (in","Fragments":["practice"]},{"Key":"(in practice","Fragments":["it"]},{"Key":"practice it","Fragments":["is"]},{"Key":"calculate some","Fragments":["constants"]},{"Key":"some constants","Fragments":["(tensPlaces,"]},{"Key":"constants (tensPlaces,","Fragments":["max)"]},{"Key":"(tensPlaces, max)","Fragments":["because"]},{"Key":"max) because","Fragments":["when"]},{"Key":"to expand","Fragments":["the","the","on","upon"]},{"Key":"the valueCharacter","Fragments":["list"]},{"Key":"valueCharacter list","Fragments":["I"]},{"Key":"won't remember","Fragments":["how"]},{"Key":"remember how","Fragments":["to"]},{"Key":"to recalculate","Fragments":["the"]},{"Key":"your \u003ccode\u003eCount\u003c/code\u003e","Fragments":["method"]},{"Key":"\u003ccode\u003eCount\u003c/code\u003e method","Fragments":["you"]},{"Key":"could alternatively","Fragments":["check"]},{"Key":"alternatively check","Fragments":["for"]},{"Key":"nucleotide in","Fragments":["your"]},{"Key":"already built","Fragments":["dictionary","you"]},{"Key":"built dictionary","Fragments":["using"]},{"Key":"using \u003ccode\u003eContainsKey\u003c/code\u003e","Fragments":["instead"]},{"Key":"\u003ccode\u003eContainsKey\u003c/code\u003e instead","Fragments":["of"]},{"Key":"of hard","Fragments":["coding"]},{"Key":"hard coding","Fragments":["the","both"]},{"Key":"coding the","Fragments":["values"]},{"Key":"values A,","Fragments":["T,"]},{"Key":"A, T,","Fragments":["C,"]},{"Key":"T, C,","Fragments":["G"]},{"Key":"C, G","Fragments":["again."]},{"Key":"You _may_","Fragments":["also"]},{"Key":"_may_ also","Fragments":["want"]},{"Key":"valid input","Fragments":["when","with"]},{"Key":"input when","Fragments":["you"]},{"Key":"you build","Fragments":["your"]},{"Key":"build your","Fragments":["dictionary."]},{"Key":"your dictionary.","Fragments":["Right"]},{"Key":"dictionary. Right","Fragments":["now,"]},{"Key":"user passed","Fragments":["in"]},{"Key":"string \"GGGACTTX\"","Fragments":["your"]},{"Key":"\"GGGACTTX\" your","Fragments":["code"]},{"Key":"throws a","Fragments":["KeyNotFound"]},{"Key":"a KeyNotFound","Fragments":["exception"]},{"Key":"KeyNotFound exception","Fragments":["instead"]},{"Key":"exception instead","Fragments":["of"]},{"Key":"the custom","Fragments":["InvalidNucleotideException,"]},{"Key":"custom InvalidNucleotideException,","Fragments":["as"]},{"Key":"InvalidNucleotideException, as","Fragments":["in"]},{"Key":"this (non","Fragments":["standard)"]},{"Key":"(non standard)","Fragments":["test"]},{"Key":"standard) test","Fragments":["case:"]},{"Key":" Assert.Throws\u003cDNA.InvalidNucleotideException\u003e(","Fragments":["()"]},{"Key":"Assert.Throws\u003cDNA.InvalidNucleotideException\u003e( ()","Fragments":["=\u003e"]},{"Key":"() =\u003e","Fragments":["new"]},{"Key":"=\u003e new","Fragments":["DNA(\"GGTTGGX\"));","{Letter","{"]},{"Key":"Hi Gabriel,","Fragments":["how's","how"]},{"Key":"Gabriel, how's","Fragments":["the"]},{"Key":"how's the","Fragments":["second"]},{"Key":"iteration coming","Fragments":["along?"]},{"Key":"coming along?","Fragments":["Don't"]},{"Key":"along? Don't","Fragments":["know"]},{"Key":"you've had","Fragments":["much"]},{"Key":"had much","Fragments":["chance"]},{"Key":"much chance","Fragments":["to"]},{"Key":"testing side","Fragments":["of"]},{"Key":"things so","Fragments":["just"]},{"Key":"just thought","Fragments":["I'd"]},{"Key":"and help","Fragments":["out."]},{"Key":"Try downloading","Fragments":["NUnit"]},{"Key":"NUnit which","Fragments":["is"]},{"Key":"a tool","Fragments":["used"]},{"Key":"tool used","Fragments":["for"]},{"Key":"for running","Fragments":[".Net"]},{"Key":"running .Net","Fragments":["unit"]},{"Key":".Net unit","Fragments":["tests."]},{"Key":"Once you've","Fragments":["done","done","got"]},{"Key":"done that,","Fragments":["right","all"]},{"Key":"that, right","Fragments":["click"]},{"Key":"and select","Fragments":["\"Manage"]},{"Key":"select \"Manage","Fragments":["Nuget"]},{"Key":"\"Manage Nuget","Fragments":["Packages"]},{"Key":"Nuget Packages","Fragments":["for"]},{"Key":"Packages for","Fragments":["solution\","]},{"Key":"for solution\",","Fragments":["search"]},{"Key":"solution\", search","Fragments":["for"]},{"Key":"install it","Fragments":["into"]},{"Key":"project (upto","Fragments":["you"]},{"Key":"(upto you","Fragments":["whether"]},{"Key":"you whether","Fragments":["you"]},{"Key":"new project","Fragments":["for"]},{"Key":"project for","Fragments":["the"]},{"Key":"Add the","Fragments":["LeapTest.cs"]},{"Key":"LeapTest.cs file","Fragments":["to"]},{"Key":"to which","Fragments":["ever"]},{"Key":"which ever","Fragments":["project"]},{"Key":"ever project","Fragments":["you've"]},{"Key":"project you've","Fragments":["installed"]},{"Key":"you've installed","Fragments":["the"]},{"Key":"installed the","Fragments":["NUnit"]},{"Key":"NUnit Nuget","Fragments":["package"]},{"Key":"Nuget package","Fragments":["into."]},{"Key":"package into.","Fragments":["If"]},{"Key":"into. If","Fragments":["all"]},{"Key":"all has","Fragments":["gone"]},{"Key":"has gone","Fragments":["well"]},{"Key":"gone well","Fragments":["the"]},{"Key":"well the","Fragments":["NUnit"]},{"Key":"NUnit attributes","Fragments":["should"]},{"Key":"attributes should","Fragments":["be"]},{"Key":"be highlighted","Fragments":["in"]},{"Key":"highlighted in","Fragments":["blue."]},{"Key":"in blue.","Fragments":["(Remove"]},{"Key":"blue. (Remove","Fragments":["the"]},{"Key":"(Remove the","Fragments":["[Ignore]"]},{"Key":" Comment","Fragments":["out"]},{"Key":"Comment out","Fragments":["all"]},{"Key":"existing assertions","Fragments":["in"]},{"Key":"assertions in","Fragments":["the"]},{"Key":"file and","Fragments":["replace"]},{"Key":"and replace","Fragments":["with"]},{"Key":"replace with","Fragments":["Assert.Inconclusive().","Aggregate"]},{"Key":" Build","Fragments":["your"]},{"Key":"Build your","Fragments":["solution."]},{"Key":"that, all","Fragments":["that's"]},{"Key":"all that's","Fragments":["left"]},{"Key":"that's left","Fragments":["is"]},{"Key":"tests through","Fragments":["NUnit,"]},{"Key":"through NUnit,","Fragments":["open"]},{"Key":"NUnit, open","Fragments":["it"]},{"Key":"open it","Fragments":["and"]},{"Key":"and navigate","Fragments":["to"]},{"Key":"navigate to","Fragments":["the"]},{"Key":"the .dll","Fragments":["that"]},{"Key":".dll that","Fragments":["will"]},{"Key":"in e.g.","Fragments":["C:\\Projects\\MyProject\\UnitTests\\bin\\debug\\UnitTests.dll"]},{"Key":"that hooked","Fragments":["up"]},{"Key":"hooked up","Fragments":["and"]},{"Key":"working, you","Fragments":["can"]},{"Key":"then go","Fragments":["back"]},{"Key":"into each","Fragments":["test,"]},{"Key":"test, put","Fragments":["back"]},{"Key":"put back","Fragments":["the"]},{"Key":"back the","Fragments":["original"]},{"Key":"original tests","Fragments":["and"]},{"Key":"update your","Fragments":["code"]},{"Key":"code until","Fragments":["they"]},{"Key":"until they","Fragments":["pass."]},{"Key":"to test.","Fragments":["Were"]},{"Key":"get any","Fragments":["of","null"]},{"Key":"included in","Fragments":["the","the","the","the"]},{"Key":"exercise download","Fragments":["running?"]},{"Key":"download running?","Fragments":["The"]},{"Key":"running? The","Fragments":["tests"]},{"Key":"like you've","Fragments":["missed","probably","pretty","got"]},{"Key":"you've missed","Fragments":["a"]},{"Key":"missed a","Fragments":["bit","way"]},{"Key":"logic pertaining","Fragments":["to"]},{"Key":"pertaining to","Fragments":["the"]},{"Key":"the divisible","Fragments":["by"]},{"Key":"Also, you've","Fragments":["got"]},{"Key":"got no","Fragments":["protection"]},{"Key":"no protection","Fragments":["around"]},{"Key":"protection around","Fragments":["the"]},{"Key":"if somebody","Fragments":["entered"]},{"Key":"somebody entered","Fragments":["a"]},{"Key":"a non","Fragments":["numeric","matching"]},{"Key":"non numeric","Fragments":["character"]},{"Key":"numeric character","Fragments":["(or"]},{"Key":"character (or","Fragments":["a"]},{"Key":"(or a","Fragments":["value","totally"]},{"Key":"value greater","Fragments":["than"]},{"Key":"than 32767","Fragments":["or"]},{"Key":"32767 or","Fragments":["less"]},{"Key":"than -32768)","Fragments":["you'd"]},{"Key":"-32768) you'd","Fragments":["get"]},{"Key":"you'd get","Fragments":["an"]},{"Key":"a Console.Readline()","Fragments":["to"]},{"Key":"Console.Readline() to","Fragments":["the"]},{"Key":"of Main","Fragments":["to","when"]},{"Key":"Main to","Fragments":["give"]},{"Key":"user time","Fragments":["to"]},{"Key":"result as","Fragments":["at"]},{"Key":"go. You","Fragments":["know"]},{"Key":"You know","Fragments":["I"]},{"Key":"love you","Fragments":[":)"]},{"Key":"- Properties","Fragments":["that"]},{"Key":"Properties that","Fragments":["are"]},{"Key":"used internally","Fragments":["(i.e"]},{"Key":"internally (i.e","Fragments":["things"]},{"Key":"(i.e things","Fragments":["that"]},{"Key":"want someone","Fragments":["that's"]},{"Key":"someone that's","Fragments":["using"]},{"Key":"that's using","Fragments":["your"]},{"Key":"using your","Fragments":["class","client"]},{"Key":"access directly)","Fragments":["should"]},{"Key":"directly) should","Fragments":["be"]},{"Key":"private (or","Fragments":["as"]},{"Key":"(or as","Fragments":["protected,"]},{"Key":"as protected,","Fragments":["if"]},{"Key":"protected, if","Fragments":["you"]},{"Key":"derived class","Fragments":["to"]},{"Key":"access them.)","Fragments":["This"]},{"Key":"them.) This","Fragments":["currently"]},{"Key":"This currently","Fragments":["applies"]},{"Key":"currently applies","Fragments":["to"]},{"Key":"the properties","Fragments":["you"]},{"Key":"properties you","Fragments":["have"]},{"Key":"have declared,","Fragments":["none"]},{"Key":"declared, none","Fragments":["of"]},{"Key":"them should","Fragments":["be"]},{"Key":"be accessible","Fragments":["from","from"]},{"Key":"accessible from","Fragments":["outside","outside```"]},{"Key":"to declare","Fragments":["a"]},{"Key":"to temporarily","Fragments":["store"]},{"Key":"temporarily store","Fragments":["a"]},{"Key":"value while","Fragments":["processing"]},{"Key":"while processing","Fragments":["something"]},{"Key":"processing something","Fragments":["in"]},{"Key":"something in","Fragments":["a"]},{"Key":"used anywhere","Fragments":["else,"]},{"Key":"anywhere else,","Fragments":["they"]},{"Key":"else, they","Fragments":["should"]},{"Key":"declared within","Fragments":["that","the","namespaces"]},{"Key":"method, for","Fragments":["similar"]},{"Key":"for similar","Fragments":["reasons","case"]},{"Key":"similar reasons","Fragments":["to"]},{"Key":"reasons to","Fragments":["above."]},{"Key":"to above.","Fragments":["Eg:"]},{"Key":"above. Eg:","Fragments":["NumberOfCaps"]},{"Key":"Eg: NumberOfCaps","Fragments":["and"]},{"Key":"NumberOfCaps and","Fragments":["AlphaChars"]},{"Key":"and AlphaChars","Fragments":["should"]},{"Key":"AlphaChars should","Fragments":["be"]},{"Key":"the IsAllCaps()","Fragments":["method,"]},{"Key":"IsAllCaps() method,","Fragments":["not"]},{"Key":"method, not","Fragments":["outside"]},{"Key":"not outside","Fragments":["it,"]},{"Key":"outside it,","Fragments":["since"]},{"Key":"want anything","Fragments":["else"]},{"Key":"change these","Fragments":["as"]},{"Key":"these as","Fragments":["it"]},{"Key":"- A","Fragments":["more"]},{"Key":"A more","Fragments":["concise","elegant"]},{"Key":"your IsAllCaps()","Fragments":["method"]},{"Key":"bool IsAllCaps","Fragments":["(string"]},{"Key":"IsAllCaps (string","Fragments":["statement)"]},{"Key":"(string statement)","Fragments":["{"]},{"Key":"statement) {","Fragments":["return"]},{"Key":"return statement.ToUpper()","Fragments":["=="]},{"Key":"== statement;","Fragments":["}"]},{"Key":"TryParse within","Fragments":["a"]},{"Key":"try/catch block.","Fragments":["TryParse"]},{"Key":"block. TryParse","Fragments":["methods"]},{"Key":"TryParse methods","Fragments":["are"]},{"Key":"are written","Fragments":["specifically"]},{"Key":"written specifically","Fragments":["not"]},{"Key":"specifically not","Fragments":["to"]},{"Key":"type you","Fragments":["are"]},{"Key":"parse, which","Fragments":["is"]},{"Key":"why they","Fragments":["return"]},{"Key":"bool to","Fragments":["let"]},{"Key":"the parse","Fragments":["attempt"]},{"Key":"parse attempt","Fragments":["succeeded"]},{"Key":"attempt succeeded","Fragments":["or"]},{"Key":"succeeded or","Fragments":["failed."]},{"Key":"- Also,","Fragments":["its"]},{"Key":"Also, its","Fragments":["not"]},{"Key":"catch System.Exception","Fragments":["and"]},{"Key":"System.Exception and","Fragments":["swallow"]},{"Key":"swallow it","Fragments":["(i.e"]},{"Key":"it (i.e","Fragments":["do"]},{"Key":"(i.e do","Fragments":["nothing)"]},{"Key":"do nothing)","Fragments":["unless"]},{"Key":"nothing) unless","Fragments":["you"]},{"Key":"reason to,","Fragments":["or"]},{"Key":"to, or","Fragments":["you"]},{"Key":"up catching","Fragments":["exceptions"]},{"Key":"catching exceptions","Fragments":["from","you"]},{"Key":"from higher","Fragments":["up"]},{"Key":"higher up","Fragments":["the"]},{"Key":"stack that","Fragments":["indicate"]},{"Key":"that indicate","Fragments":["some"]},{"Key":"indicate some","Fragments":["sort"]},{"Key":"of fatal","Fragments":["error,"]},{"Key":"fatal error,","Fragments":["and"]},{"Key":"error, and","Fragments":["should"]},{"Key":"be ignored.","Fragments":["When"]},{"Key":"ignored. When","Fragments":["catching"]},{"Key":"When catching","Fragments":["exceptions"]},{"Key":"exceptions you","Fragments":["should"]},{"Key":"only catch","Fragments":["ones"]},{"Key":"catch ones","Fragments":["that"]},{"Key":"see, and","Fragments":["can"]},{"Key":"with accordingly.","Fragments":["(E.g"]},{"Key":"accordingly. (E.g","Fragments":["If"]},{"Key":"(E.g If","Fragments":["using"]},{"Key":"using Int.Parse,","Fragments":["catch"]},{"Key":"Int.Parse, catch","Fragments":["the"]},{"Key":"the exceptions","Fragments":["it"]},{"Key":"exceptions it","Fragments":["will"]},{"Key":"will throw,","Fragments":["such"]},{"Key":"throw, such","Fragments":["as"]},{"Key":"as System.ArgumentException.","Fragments":["Visual"]},{"Key":"System.ArgumentException. Visual","Fragments":["studio"]},{"Key":"Visual studio","Fragments":["will"]},{"Key":"studio will","Fragments":["usually"]},{"Key":"will usually","Fragments":["tell"]},{"Key":"usually tell","Fragments":["you"]},{"Key":"what exceptions","Fragments":["a"]},{"Key":"exceptions a","Fragments":["method"]},{"Key":"will through","Fragments":["if"]},{"Key":"through if","Fragments":["you"]},{"Key":"you hover","Fragments":["over"]},{"Key":"me from","Fragments":["your"]},{"Key":"code how","Fragments":["checking"]},{"Key":"how checking","Fragments":["if"]},{"Key":"is numeric","Fragments":["is"]},{"Key":"numeric is","Fragments":["at"]},{"Key":"all related","Fragments":["to"]},{"Key":"related to","Fragments":["it"]},{"Key":"being empty.","Fragments":["As"]},{"Key":"empty. As","Fragments":["mentioned"]},{"Key":"As mentioned","Fragments":["above"]},{"Key":"mentioned above","Fragments":["regarding"]},{"Key":"above regarding","Fragments":["TryParse"]},{"Key":"regarding TryParse","Fragments":["methods,"]},{"Key":"TryParse methods,","Fragments":["there'll"]},{"Key":"methods, there'll","Fragments":["never"]},{"Key":"there'll never","Fragments":["be"]},{"Key":"exception thrown,","Fragments":["so"]},{"Key":"thrown, so","Fragments":["EmptyString"]},{"Key":"so EmptyString","Fragments":["will"]},{"Key":"EmptyString will","Fragments":["ALWAYS"]},{"Key":"will ALWAYS","Fragments":["be"]},{"Key":"ALWAYS be","Fragments":["false"]},{"Key":"be false","Fragments":["in"]},{"Key":"- When","Fragments":["you"]},{"Key":"statement contains","Fragments":["a"]},{"Key":"a newline,","Fragments":["you"]},{"Key":"newline, you","Fragments":["currently"]},{"Key":"you currently","Fragments":["only"]},{"Key":"currently only","Fragments":["discard"]},{"Key":"only discard","Fragments":["everything","the"]},{"Key":"discard everything","Fragments":["after"]},{"Key":"last newline","Fragments":["(since"]},{"Key":"newline (since","Fragments":["you"]},{"Key":"(since you","Fragments":["use"]},{"Key":"use LastIndexOf()).","Fragments":["This"]},{"Key":"LastIndexOf()). This","Fragments":["means"]},{"Key":"text in","Fragments":["the"]},{"Key":"the statement,","Fragments":["you'll"]},{"Key":"statement, you'll","Fragments":["only"]},{"Key":"discard the","Fragments":["last","leading"]},{"Key":"last one,","Fragments":["and"]},{"Key":"one, and","Fragments":["will"]},{"Key":"have additional","Fragments":["newline"]},{"Key":"additional newline","Fragments":["characters"]},{"Key":"newline characters","Fragments":["in"]},{"Key":"string. Also","Fragments":["calling"]},{"Key":"Also calling","Fragments":[".Contains"]},{"Key":"calling .Contains","Fragments":["is"]},{"Key":".Contains is","Fragments":["unnecessary,"]},{"Key":"call statement.IndexOf('\\n'),","Fragments":["which"]},{"Key":"statement.IndexOf('\\n'), which","Fragments":["returns"]},{"Key":"which returns","Fragments":["-1","true"]},{"Key":"returns -1","Fragments":["if"]},{"Key":"-1 if","Fragments":["the"]},{"Key":"- Your","Fragments":["if","last"]},{"Key":"Your if","Fragments":["block"]},{"Key":"easily understandable,","Fragments":["especially"]},{"Key":"understandable, especially","Fragments":["the"]},{"Key":"first condition.","Fragments":["Since"]},{"Key":"condition. Since","Fragments":["this"]},{"Key":"condition seems","Fragments":["to","to"]},{"Key":"catch all,","Fragments":["it's"]},{"Key":"all, it's","Fragments":["return"]},{"Key":"it's return","Fragments":["result"]},{"Key":"of \"whatever\"","Fragments":["should"]},{"Key":"\"whatever\" should","Fragments":["really"]},{"Key":"be placed","Fragments":["in"]},{"Key":"placed in","Fragments":["an"]},{"Key":"else block","Fragments":["(so"]},{"Key":"block (so","Fragments":["that"]},{"Key":"(so that","Fragments":["there's"]},{"Key":"that god","Fragments":["awful"]},{"Key":"god awful","Fragments":["condition"]},{"Key":"awful condition","Fragments":["checks),"]},{"Key":"condition checks),","Fragments":["and"]},{"Key":"checks), and","Fragments":["all"]},{"Key":"cases should","Fragments":["be"]},{"Key":"be what","Fragments":["you"]},{"Key":"Your last","Fragments":["else"]},{"Key":"a logical","Fragments":["flaw","step"]},{"Key":"logical flaw","Fragments":["in"]},{"Key":"flaw in","Fragments":["it"]},{"Key":"it (aside","Fragments":["from"]},{"Key":"(aside from","Fragments":["the"]},{"Key":"that EmptyString","Fragments":["is"]},{"Key":"EmptyString is","Fragments":["always"]},{"Key":"always false)","Fragments":["since"]},{"Key":"false) since","Fragments":["the"]},{"Key":"second part","Fragments":["of"]},{"Key":"condition just","Fragments":["checks"]},{"Key":"just checks","Fragments":["if"]},{"Key":"string, which","Fragments":["can"]},{"Key":"which can","Fragments":["apply"]},{"Key":"can apply","Fragments":["to"]},{"Key":"strings, without","Fragments":["actually"]},{"Key":"without actually","Fragments":["indicating"]},{"Key":"actually indicating","Fragments":["that"]},{"Key":"no characters","Fragments":["contained"]},{"Key":"characters contained","Fragments":["in"]},{"Key":"that string.","Fragments":["So"]},{"Key":"string. So","Fragments":["if"]},{"Key":"more else","Fragments":["ifs"]},{"Key":"else ifs","Fragments":["after","are","given"]},{"Key":"ifs after","Fragments":["this"]},{"Key":"this block,","Fragments":["you'd"]},{"Key":"block, you'd","Fragments":["never"]},{"Key":"you'd never","Fragments":["get"]},{"Key":"to them","Fragments":["if"]},{"Key":"them if","Fragments":["there"]},{"Key":"statement you're","Fragments":["evaluating."]},{"Key":"you're evaluating.","Fragments":["This"]},{"Key":"evaluating. This","Fragments":["check"]},{"Key":"This check","Fragments":["would"]},{"Key":"better written","Fragments":["as:"]},{"Key":"if (String.IsNullOrWhitespace(statement))","Fragments":["{"]},{"Key":"(String.IsNullOrWhitespace(statement)) {","Fragments":["return"]},{"Key":"return \"Fine,","Fragments":["be"]},{"Key":"\"Fine, be","Fragments":["that"]},{"Key":"that way\"","Fragments":["}"]},{"Key":" _just_","Fragments":["to"]},{"Key":"_just_ to","Fragments":["nitpick,"]},{"Key":"to nitpick,","Fragments":["I","line"]},{"Key":"nitpick, I","Fragments":["find"]},{"Key":"little verbose.","Fragments":["I'm","I"]},{"Key":"verbose. I'm","Fragments":["not"]},{"Key":"the trouble","Fragments":["of"]},{"Key":"trouble of","Fragments":["defining"]},{"Key":"of defining","Fragments":["constants"]},{"Key":"defining constants","Fragments":["and"]},{"Key":"then arranging","Fragments":["them"]},{"Key":"arranging them","Fragments":["into"]},{"Key":"array when","Fragments":["you"]},{"Key":"easily define","Fragments":["the"]},{"Key":"expected values","Fragments":["from"]},{"Key":"the onset","Fragments":["and"]},{"Key":"onset and","Fragments":["then"]},{"Key":"in said","Fragments":["dictionary"]},{"Key":"said dictionary","Fragments":["using"]},{"Key":"using \u003ccode\u003eContainsKey()\u003c/code\u003e","Fragments":["for"]},{"Key":"\u003ccode\u003eContainsKey()\u003c/code\u003e for","Fragments":["verifying"]},{"Key":"for verifying","Fragments":["a"]},{"Key":"verifying a","Fragments":["valid"]},{"Key":"hand, you","Fragments":["built"]},{"Key":"for VS","Fragments":["intellisense"]},{"Key":"VS intellisense","Fragments":["to"]},{"Key":"intellisense to","Fragments":["work"]},{"Key":"so +10","Fragments":["to"]},{"Key":"+10 to","Fragments":["you!"]},{"Key":"realize this","Fragments":["is"]},{"Key":"an older","Fragments":["submission,"]},{"Key":"older submission,","Fragments":["and"]},{"Key":"submission, and","Fragments":["I"]},{"Key":"keep seeing","Fragments":["the"]},{"Key":"pattern used","Fragments":["in"]},{"Key":"different submissions,","Fragments":["so"]},{"Key":"some poorly","Fragments":["written"]},{"Key":"poorly written","Fragments":["instructions"]},{"Key":"written instructions","Fragments":["initially...but"]},{"Key":"instructions initially...but","Fragments":["just"]},{"Key":"initially...but just","Fragments":["to"]},{"Key":"of Math.Min","Fragments":["to"]},{"Key":"shortest strand","Fragments":["should"]},{"Key":"strand should","Fragments":["be"]},{"Key":"two strands","Fragments":["are","are"]},{"Key":"of unequal,","Fragments":["trimmed,"]},{"Key":"unequal, trimmed,","Fragments":["length."]},{"Key":"trimmed, length.","Fragments":["This"]},{"Key":"length. This","Fragments":["is","means"]},{"Key":"equal length,","Fragments":["as"]},{"Key":"length, as","Fragments":["per"]},{"Key":"as per","Fragments":["what","@karen's","the"]},{"Key":"per what","Fragments":["I"]},{"Key":"only assume","Fragments":["are"]},{"Key":"assume are","Fragments":["the"]},{"Key":"the _updated_","Fragments":["instructions."]},{"Key":"Alright, that","Fragments":["makes"]},{"Key":"sense. For","Fragments":["some"]},{"Key":"that never","Fragments":["occurred"]},{"Key":"never occurred","Fragments":["to"]},{"Key":"Wow thanks","Fragments":["for"]},{"Key":"such an","Fragments":["informative"]},{"Key":"an informative","Fragments":["reply!"]},{"Key":"informative reply!","Fragments":["Still"]},{"Key":"reply! Still","Fragments":["in"]},{"Key":"Still in","Fragments":["the"]},{"Key":"the works","Fragments":["on"]},{"Key":"getting closer.","Fragments":["I've"]},{"Key":"closer. I've","Fragments":["been"]},{"Key":"of debugging","Fragments":["probably"]},{"Key":"debugging probably","Fragments":["due"]},{"Key":"probably due","Fragments":["to"]},{"Key":"me getting","Fragments":["ahead"]},{"Key":"getting ahead","Fragments":["of"]},{"Key":"of myself","Fragments":["with"]},{"Key":"myself with","Fragments":["some"]},{"Key":"some ideas","Fragments":["and"]},{"Key":"ideas and","Fragments":["improperly"]},{"Key":"and improperly","Fragments":["implementing"]},{"Key":"improperly implementing","Fragments":["them"]},{"Key":"implementing them","Fragments":["but"]},{"Key":"them but","Fragments":["I'm","probably"]},{"Key":"getting better","Fragments":["as"]},{"Key":"I spend","Fragments":["more"]},{"Key":"spend more","Fragments":["time"]},{"Key":"time reading","Fragments":["MSDN"]},{"Key":"reading MSDN","Fragments":["pages."]},{"Key":"MSDN pages.","Fragments":["I'll"]},{"Key":"pages. I'll","Fragments":["definitely"]},{"Key":"I'll definitely","Fragments":["try"]},{"Key":"definitely try","Fragments":["out"]},{"Key":"out NUnit","Fragments":["tomorrow","quite"]},{"Key":"NUnit tomorrow","Fragments":["and"]},{"Key":"tomorrow and","Fragments":["leave"]},{"Key":"and leave","Fragments":["some"]},{"Key":"leave some","Fragments":["feedback"]},{"Key":"feedback for","Fragments":["you"]},{"Key":"you though,","Fragments":["thanks"]},{"Key":"though, thanks","Fragments":["again!"]},{"Key":"running this","Fragments":["thru"]},{"Key":"this thru","Fragments":["the"]},{"Key":"thru the","Fragments":["test"]},{"Key":"test manager","Fragments":["with"]},{"Key":"manager with","Fragments":["two"]},{"Key":"with two","Fragments":["results.."]},{"Key":"(var ruleNumber","Fragments":["in","in","in"]},{"Key":"ruleNumber in","Fragments":["Numbers.Where(x","Numbers)","Numbers)"]},{"Key":"in Numbers.Where(x","Fragments":["=\u003e"]},{"Key":"Numbers.Where(x =\u003e","Fragments":["value"]},{"Key":"=\u003e value","Fragments":["/"]},{"Key":"/ x.Key","Fragments":["\u003e"]},{"Key":"x.Key \u003e","Fragments":["0))"]},{"Key":" 402","Fragments":["test"]},{"Key":"402 test","Fragments":["takes"]},{"Key":"test takes","Fragments":["17"]},{"Key":"takes 17","Fragments":["ms"]},{"Key":"17 ms","Fragments":["and"]},{"Key":"ms and","Fragments":["rest","all"]},{"Key":"and rest","Fragments":["\u003c"]},{"Key":"rest \u003c","Fragments":["1","1"]},{"Key":" 575","Fragments":["test"]},{"Key":"575 test","Fragments":["take"]},{"Key":"test take","Fragments":["12"]},{"Key":"take 12","Fragments":["ms"]},{"Key":"12 ms","Fragments":["and"]},{"Key":"all rest","Fragments":["\u003c"]},{"Key":"guess there","Fragments":["is"]},{"Key":"memory management","Fragments":["that","by"]},{"Key":"management that","Fragments":["is"]},{"Key":"is playing","Fragments":["in","in"]},{"Key":"playing in","Fragments":["here.","favor"]},{"Key":"in here.","Fragments":["So"]},{"Key":"here. So","Fragments":["less"]},{"Key":"So less","Fragments":["code"]},{"Key":"less code","Fragments":["is"]},{"Key":"favor here","Fragments":["I"]},{"Key":"while you're","Fragments":["correct."]},{"Key":"you're correct.","Fragments":["I"]},{"Key":"static type","Fragments":["from"]},{"Key":"type from","Fragments":["a"]},{"Key":"readability standpoint.","Fragments":["Is"]},{"Key":"standpoint. Is","Fragments":["it"]},{"Key":"little slower","Fragments":["doing"]},{"Key":"slower doing","Fragments":["it"]},{"Key":"way, yes.","Fragments":["Is"]},{"Key":"yes. Is","Fragments":["it"]},{"Key":"someone to","Fragments":["glance"]},{"Key":"to glance","Fragments":["at"]},{"Key":"glance at","Fragments":["and"]},{"Key":"at and","Fragments":["be"]},{"Key":"and be","Fragments":["able","more"]},{"Key":"to jump","Fragments":["right"]},{"Key":"jump right","Fragments":["into?"]},{"Key":"right into?","Fragments":["I'd"]},{"Key":"into? I'd","Fragments":["also"]},{"Key":"I'd also","Fragments":["argue","take"]},{"Key":"also argue","Fragments":["yes."]},{"Key":"argue yes.","Fragments":["We"]},{"Key":"yes. We","Fragments":["often"]},{"Key":"We often","Fragments":["don't"]},{"Key":"often don't","Fragments":["have"]},{"Key":"the luxury","Fragments":["of"]},{"Key":"luxury of","Fragments":["the"]},{"Key":"to crank","Fragments":["everything"]},{"Key":"crank everything","Fragments":["down"]},{"Key":"fewest lines","Fragments":["of"]},{"Key":"and smallest","Fragments":["objects."]},{"Key":"have be","Fragments":["so"]},{"Key":"so complex","Fragments":[":P"]},{"Key":" @sonia,","Fragments":["the"]},{"Key":"@sonia, the","Fragments":["double"]},{"Key":"double use","Fragments":["of"]},{"Key":"readability. Even","Fragments":["coming"]},{"Key":"Even coming","Fragments":["back"]},{"Key":"back at","Fragments":["this","this"]},{"Key":"this three","Fragments":["weeks"]},{"Key":"three weeks","Fragments":["later"]},{"Key":"weeks later","Fragments":["I"]},{"Key":"later I","Fragments":["wouldn't"]},{"Key":"have known","Fragments":["that"]},{"Key":"known that","Fragments":["A"]},{"Key":"that A","Fragments":["represented"]},{"Key":"A represented","Fragments":["Adenine."]},{"Key":"represented Adenine.","Fragments":["Maybe"]},{"Key":"Adenine. Maybe","Fragments":["if"]},{"Key":"actually knew","Fragments":["anything"]},{"Key":"knew anything","Fragments":["about"]},{"Key":"about DNA","Fragments":["it"]},{"Key":"DNA it","Fragments":["would"]},{"Key":"Using contains","Fragments":["key"]},{"Key":"contains key","Fragments":["would"]},{"Key":"key would","Fragments":["be"]},{"Key":"good optimization.","Fragments":["I"]},{"Key":"optimization. I","Fragments":["could"]},{"Key":" New","Fragments":["iteration","iteration","version"]},{"Key":"New iteration","Fragments":["to","submitted.","making"]},{"Key":"allow returning","Fragments":["collections"]},{"Key":"returning collections","Fragments":["of"]},{"Key":"collections of","Fragments":["any","strings."]},{"Key":"any type,","Fragments":["not"]},{"Key":"type, not","Fragments":["just"]},{"Key":"per @karen's","Fragments":["suggestion"]},{"Key":"that shows","Fragments":["how"]},{"Key":"shows how","Fragments":["expensive","to"]},{"Key":"how expensive","Fragments":["division"]},{"Key":"expensive division","Fragments":["is."]},{"Key":"division is.","Fragments":["However,"]},{"Key":"is. However,","Fragments":["I"]},{"Key":"of getting","Fragments":["rid"]},{"Key":"the inside","Fragments":["loop"]},{"Key":"inside loop","Fragments":["like"]},{"Key":"(count \u003e","Fragments":["0","0)"]},{"Key":" romanText.Append(String.Concat(Enumerable.Repeat(ruleNumber.Value,","Fragments":["count)));"]},{"Key":"if (value","Fragments":["=="]},{"Key":"(value ==","Fragments":["0)"]},{"Key":"This still","Fragments":["has"]},{"Key":"one division","Fragments":["per"]},{"Key":"division per","Fragments":["entry"]},{"Key":"per entry","Fragments":["in"]},{"Key":"the list,","Fragments":["but"]},{"Key":"list, but","Fragments":["avoids"]},{"Key":"but avoids","Fragments":["the"]},{"Key":"loop. It","Fragments":["will","is","is","is","is"]},{"Key":"expensive for","Fragments":["simple","complicated"]},{"Key":"simple numbers","Fragments":["(1110,"]},{"Key":"numbers (1110,","Fragments":["1540,"]},{"Key":"(1110, 1540,","Fragments":["etc.)"]},{"Key":"1540, etc.)","Fragments":["but"]},{"Key":"etc.) but","Fragments":["may","showing"]},{"Key":"but may","Fragments":["be","not"]},{"Key":"for complicated","Fragments":["numbers"]},{"Key":"complicated numbers","Fragments":["with"]},{"Key":"numbers with","Fragments":["lots"]},{"Key":"with lots","Fragments":["of"]},{"Key":"of repeats","Fragments":["(think"]},{"Key":"repeats (think","Fragments":["2888"]},{"Key":"(think 2888","Fragments":["-"]},{"Key":"2888 -","Fragments":["MMDCCCLXXXVIII),"]},{"Key":"- MMDCCCLXXXVIII),","Fragments":["plus"]},{"Key":"MMDCCCLXXXVIII), plus","Fragments":["it"]},{"Key":"plus it","Fragments":["breaks"]},{"Key":"breaks out","Fragments":["early"]},{"Key":"out early","Fragments":["when"]},{"Key":"early when","Fragments":["value"]},{"Key":"is hit","Fragments":["so"]},{"Key":"hit so","Fragments":["numbers"]},{"Key":"so numbers","Fragments":["like"]},{"Key":"numbers like","Fragments":["1000"]},{"Key":"like 1000","Fragments":["should"]},{"Key":"1000 should","Fragments":["be"]},{"Key":"be fast","Fragments":["-"]},{"Key":"fast -","Fragments":["though"]},{"Key":"value 0","Fragments":["still"]},{"Key":"0 still","Fragments":["would"]},{"Key":"still would","Fragments":["have","be."]},{"Key":"whole list","Fragments":["since"]},{"Key":"list since","Fragments":["it"]},{"Key":" Switched","Fragments":["to","to","to"]},{"Key":"Switched to","Fragments":["Linq.","Linq.","IsNullOrWhitespace"]},{"Key":"to Linq.","Fragments":["I'm","I'm"]},{"Key":"Linq. I'm","Fragments":["not","not"]},{"Key":"Linq method","Fragments":["is","is"]},{"Key":"any clearer","Fragments":["to"]},{"Key":"Added exception","Fragments":["text."]},{"Key":"exception text.","Fragments":["Arguably"]},{"Key":"text. Arguably","Fragments":["(ha)"]},{"Key":"Arguably (ha)","Fragments":["the"]},{"Key":"(ha) the","Fragments":["ArgumentException"]},{"Key":"the ArgumentException","Fragments":["is"]},{"Key":"ArgumentException is","Fragments":["clear"]},{"Key":"clear (one","Fragments":["or"]},{"Key":"(one or","Fragments":["both"]},{"Key":"or both","Fragments":["of"]},{"Key":"the arguments","Fragments":["is"]},{"Key":"is wrong),","Fragments":["but"]},{"Key":"wrong), but","Fragments":["there's"]},{"Key":"but there's","Fragments":["not"]},{"Key":"really any","Fragments":["trade-off"]},{"Key":"any trade-off","Fragments":["for"]},{"Key":"this approach:","Fragments":["readability"]},{"Key":"approach: readability","Fragments":["(also,"]},{"Key":"readability (also,","Fragments":["by"]},{"Key":"(also, by","Fragments":["using"]},{"Key":"the brackets","Fragments":["even"]},{"Key":"brackets even","Fragments":["when"]},{"Key":"of inverting","Fragments":["the"]},{"Key":"good one.","Fragments":["After"]},{"Key":"one. After","Fragments":["looking"]},{"Key":"a fresh","Fragments":["set"]},{"Key":"fresh set","Fragments":["of"]},{"Key":"of eyes,","Fragments":["the"]},{"Key":"eyes, the","Fragments":["return"]},{"Key":"return values","Fragments":["are"]},{"Key":"difficult than","Fragments":["they"]},{"Key":"they need","Fragments":["to"]},{"Key":"I'll play","Fragments":["around"]},{"Key":"play around","Fragments":["with"]},{"Key":"that idea.","Fragments":["Thanks!"]},{"Key":"any clearer,","Fragments":["but"]},{"Key":"clearer, but","Fragments":["it"]},{"Key":"definitely much","Fragments":["shorter."]},{"Key":"to IsNullOrWhitespace","Fragments":["rather"]},{"Key":"IsNullOrWhitespace rather","Fragments":["than"]},{"Key":"than adding","Fragments":["a","a"]},{"Key":"check before","Fragments":["the"]},{"Key":"the trim.","Fragments":["I"]},{"Key":"trim. I","Fragments":["don't"]},{"Key":"exactly equivalent,","Fragments":["but"]},{"Key":"equivalent, but","Fragments":["I"]},{"Key":"that's better","Fragments":["than"]},{"Key":"line when","Fragments":["the"]},{"Key":"difference isn't","Fragments":["likely"]},{"Key":"looks sound","Fragments":["in"]},{"Key":"sound in","Fragments":["your"]},{"Key":"It feels","Fragments":["like","like"]},{"Key":"the semantics","Fragments":["are"]},{"Key":"semantics are","Fragments":["a"]},{"Key":"class Leap.","Fragments":["Obviously"]},{"Key":"Leap. Obviously","Fragments":["to"]},{"Key":"Obviously to","Fragments":["use"]},{"Key":"be Leap.IsLeap(x);","Fragments":["which"]},{"Key":"Leap.IsLeap(x); which","Fragments":["implies"]},{"Key":"which implies","Fragments":["that"]},{"Key":"Leap before","Fragments":["asking"]},{"Key":"before asking","Fragments":["IsLeap."]},{"Key":"asking IsLeap.","Fragments":["The"]},{"Key":"IsLeap. The","Fragments":["implementation"]},{"Key":"The implementation","Fragments":["in","in"]},{"Key":"implementation in","Fragments":["the","the","the"]},{"Key":"was Year.IsLeap(x)","Fragments":["which","which"]},{"Key":"Year.IsLeap(x) which","Fragments":["I","is"]},{"Key":"intent a","Fragments":["bit","bit","bit"]},{"Key":"thought you'd","Fragments":["need"]},{"Key":"you'd need","Fragments":["the","a"]},{"Key":"braces in","Fragments":["order"]},{"Key":"to compile.","Fragments":["Even"]},{"Key":"compile. Even","Fragments":["if"]},{"Key":"if they're","Fragments":["not"]},{"Key":"Finally, the","Fragments":["second"]},{"Key":"iteration. Haven't","Fragments":["figured"]},{"Key":"Haven't figured","Fragments":["out"]},{"Key":"NUnit quite","Fragments":["yet,"]},{"Key":"quite yet,","Fragments":["I"]},{"Key":"yet, I","Fragments":["don't"]},{"Key":"see and","Fragments":["options"]},{"Key":"and options","Fragments":["for"]},{"Key":"for manage","Fragments":["nugget"]},{"Key":"manage nugget","Fragments":["solutions...for"]},{"Key":"nugget solutions...for","Fragments":["now"]},{"Key":"solutions...for now","Fragments":["I"]},{"Key":"just manually","Fragments":["checked"]},{"Key":"manually checked","Fragments":["each"]},{"Key":"checked each","Fragments":["test"]},{"Key":"each test","Fragments":["year","case"]},{"Key":"test year","Fragments":["and"]},{"Key":"and everything","Fragments":["seems"]},{"Key":"Sorry you","Fragments":["didn't"]},{"Key":"any joy","Fragments":["with"]},{"Key":"joy with","Fragments":["NUnit.","one"]},{"Key":"NUnit. Found","Fragments":["the"]},{"Key":"Found the","Fragments":["following"]},{"Key":"following which","Fragments":["shows"]},{"Key":"which shows","Fragments":["how"]},{"Key":"manage Nuget","Fragments":["packages"]},{"Key":"Nuget packages","Fragments":["-"]},{"Key":"packages -","Fragments":["http://docs.nuget.org/docs/start-here/managing-nuget-packages-using-the-dialog"]},{"Key":"- http://docs.nuget.org/docs/start-here/managing-nuget-packages-using-the-dialog","Fragments":["That"]},{"Key":"http://docs.nuget.org/docs/start-here/managing-nuget-packages-using-the-dialog That","Fragments":["example"]},{"Key":"That example","Fragments":["seems"]},{"Key":"using VS2010","Fragments":["but"]},{"Key":"VS2010 but","Fragments":["I"]},{"Key":"much different","Fragments":["for"]},{"Key":"different for","Fragments":["the"]},{"Key":"more recent","Fragments":["versions."]},{"Key":" Onto","Fragments":["the"]},{"Key":"Onto the","Fragments":["code."]},{"Key":"big one","Fragments":["for"]},{"Key":"me is","Fragments":["that"]},{"Key":"you've now","Fragments":["got"]},{"Key":"now got","Fragments":["the"]},{"Key":"the Response","Fragments":["method","method","class"]},{"Key":"Response method","Fragments":["in","isn't"]},{"Key":"the LeapYear","Fragments":["class.","functionality"]},{"Key":"LeapYear class.","Fragments":["From"]},{"Key":"class. From","Fragments":["an"]},{"Key":"From an","Fragments":["OO"]},{"Key":"an OO","Fragments":["point"]},{"Key":"OO point","Fragments":["of"]},{"Key":"of view,","Fragments":["the","I'd"]},{"Key":"view, the","Fragments":["Response"]},{"Key":"isn't anything","Fragments":["to"]},{"Key":"LeapYear functionality","Fragments":["and"]},{"Key":"functionality and","Fragments":["so"]},{"Key":"so shouldn't","Fragments":["really"]},{"Key":"shouldn't really","Fragments":["be"]},{"Key":"be part","Fragments":["of","of","of","of"]},{"Key":"that class.","Fragments":["I'd"]},{"Key":"class. I'd","Fragments":["try"]},{"Key":"and tease","Fragments":["the"]},{"Key":"tease the","Fragments":["2"]},{"Key":"2 sets","Fragments":["of"]},{"Key":"functionality apart","Fragments":["so"]},{"Key":"apart so","Fragments":["have"]},{"Key":"the interactions","Fragments":["with"]},{"Key":"interactions with","Fragments":["the"]},{"Key":"Console in","Fragments":["the"]},{"Key":"the MainClass","Fragments":["and"]},{"Key":"MainClass and","Fragments":["all"]},{"Key":"year functionality","Fragments":["in"]},{"Key":"functionality in","Fragments":["that","Main."]},{"Key":"the names","Fragments":["used.","have","SortedAndSmallCased*","are","you've"]},{"Key":"names used.","Fragments":["The"]},{"Key":"The LeapYear","Fragments":["class"]},{"Key":"LeapYear class","Fragments":["for"]},{"Key":"example. By","Fragments":["calling"]},{"Key":"By calling","Fragments":["it"]},{"Key":"it LeapYear","Fragments":["it"]},{"Key":"LeapYear it","Fragments":["almost"]},{"Key":"it almost","Fragments":["implies"]},{"Key":"almost implies","Fragments":["that"]},{"Key":"before instantiation.","Fragments":["The"]},{"Key":"instantiation. The","Fragments":["implementation"]},{"Key":"tests was","Fragments":["Year.IsLeap(x)"]},{"Key":"descriptive about","Fragments":["the"]},{"Key":"the intent.","Fragments":["If"]},{"Key":"intent. If","Fragments":["you"]},{"Key":"you compare","Fragments":["that"]},{"Key":"compare that","Fragments":["to"]},{"Key":"call that","Fragments":["actually","I"]},{"Key":"actually does","Fragments":["the"]},{"Key":"check -","Fragments":["check.Input(),"]},{"Key":"- check.Input(),","Fragments":["it's"]},{"Key":"check.Input(), it's","Fragments":["difficult"]},{"Key":"tell what","Fragments":["that"]},{"Key":"doing without","Fragments":["looking"]},{"Key":"code around","Fragments":["it"]},{"Key":"give it","Fragments":["the","a"]},{"Key":"The doNotEnd","Fragments":["variable"]},{"Key":"doNotEnd variable","Fragments":["also"]},{"Key":"variable also","Fragments":["becomes"]},{"Key":"also becomes","Fragments":["a"]},{"Key":"bit counter-intuitive","Fragments":["in"]},{"Key":"counter-intuitive in","Fragments":["the"]},{"Key":"line where","Fragments":["you've"]},{"Key":"where you've","Fragments":["got"]},{"Key":"got doNotEnd","Fragments":["="]},{"Key":"doNotEnd =","Fragments":["false."]},{"Key":"= false.","Fragments":["The"]},{"Key":"false. The","Fragments":["double"]},{"Key":"The double","Fragments":["negative"]},{"Key":"double negative","Fragments":["meant"]},{"Key":"negative meant","Fragments":["it"]},{"Key":"bit longer","Fragments":["to"]},{"Key":"loop should","Fragments":["end."]},{"Key":"should end.","Fragments":["If"]},{"Key":"end. If","Fragments":["you"]},{"Key":"positive version","Fragments":["of"]},{"Key":"variable e.g.","Fragments":["\"continue\","]},{"Key":"e.g. \"continue\",","Fragments":["then"]},{"Key":"\"continue\", then","Fragments":["you'd"]},{"Key":"then you'd","Fragments":["have","need"]},{"Key":"have code","Fragments":["like"]},{"Key":"like while(continue)","Fragments":["and"]},{"Key":"while(continue) and","Fragments":["continue"]},{"Key":"continue =","Fragments":["false"]},{"Key":"which to","Fragments":["me","use,"]},{"Key":"me make","Fragments":["the"]},{"Key":"Finally you've","Fragments":["got"]},{"Key":"named i.","Fragments":["I"]},{"Key":"i. I","Fragments":["think"]},{"Key":"think single","Fragments":["character"]},{"Key":"character variable","Fragments":["names"]},{"Key":"generally only","Fragments":["used"]},{"Key":"in loops.","Fragments":["In"]},{"Key":"loops. In","Fragments":["this"]},{"Key":"this instance","Fragments":["i","it's","the"]},{"Key":"instance i","Fragments":["actually"]},{"Key":"i actually","Fragments":["represents"]},{"Key":"actually represents","Fragments":["your"]},{"Key":"represents your","Fragments":["year"]},{"Key":"your year","Fragments":["so"]},{"Key":"so naming","Fragments":["it"]},{"Key":"naming it","Fragments":["that"]},{"Key":"would again","Fragments":["make"]},{"Key":"again make","Fragments":["the"]},{"Key":"get despondent","Fragments":["at"]},{"Key":"despondent at","Fragments":["the"]},{"Key":"of comments,","Fragments":["I"]},{"Key":"person I've","Fragments":["seen"]},{"Key":"seen who's","Fragments":["uploaded"]},{"Key":"who's uploaded","Fragments":["the"]},{"Key":"uploaded the","Fragments":["Console"]},{"Key":"Console part","Fragments":["of"]},{"Key":"solution hence","Fragments":["you've"]},{"Key":"hence you've","Fragments":["got"]},{"Key":"more comments.","Fragments":[":)"]},{"Key":"No worries","Fragments":["I","Gabriel,"]},{"Key":"worries I","Fragments":["absolutely"]},{"Key":"absolutely appreciate","Fragments":["all"]},{"Key":"advice it's","Fragments":["definitely"]},{"Key":"it's definitely","Fragments":["helping"]},{"Key":"definitely helping","Fragments":["me"]},{"Key":"me get","Fragments":["better."]},{"Key":"get better.","Fragments":["I'll"]},{"Key":"I'll get","Fragments":["some"]},{"Key":"some refactoring","Fragments":["done"]},{"Key":"refactoring done","Fragments":["and"]},{"Key":"update when","Fragments":["I"]},{"Key":"I can.","Fragments":["I'll"]},{"Key":"can. I'll","Fragments":["also"]},{"Key":"I'll also","Fragments":["make"]},{"Key":"out NUnit,","Fragments":["thanks"]},{"Key":"NUnit, thanks","Fragments":["for"]},{"Key":"Much simplified","Fragments":["allowing"]},{"Key":"simplified allowing","Fragments":["for"]},{"Key":"allowing for","Fragments":["null"]},{"Key":"as empty","Fragments":["deque."]},{"Key":"Also implemented","Fragments":["IEnumerable\u003cT\u003e"]},{"Key":"exercise, i","Fragments":["don't"]},{"Key":"what i","Fragments":["should","think"]},{"Key":"The \u003ccode\u003eCheckInequality\u003c/code\u003e","Fragments":["method"]},{"Key":"\u003ccode\u003eCheckInequality\u003c/code\u003e method","Fragments":["is"]},{"Key":"complicated. There","Fragments":["is"]},{"Key":"for loops.","Fragments":["Just","Ok"]},{"Key":"loops. Just","Fragments":["check"]},{"Key":"Just check","Fragments":["each"]},{"Key":"check each","Fragments":["of"]},{"Key":"options directly","Fragments":["like"]},{"Key":"directly like","Fragments":["this."]},{"Key":"if (triangleSides[0]","Fragments":["+"]},{"Key":"(triangleSides[0] +","Fragments":["triangleSides[1]"]},{"Key":"+ triangleSides[1]","Fragments":["\u003c="]},{"Key":"triangleSides[1] \u003c=","Fragments":["triangleSides[2])"]},{"Key":"if (triangleSides[1]","Fragments":["+"]},{"Key":"(triangleSides[1] +","Fragments":["triangleSides[2]"]},{"Key":"+ triangleSides[2]","Fragments":["\u003c="]},{"Key":"triangleSides[2] \u003c=","Fragments":["triangleSides[0])"]},{"Key":"if (triangleSides[2]","Fragments":["+"]},{"Key":"(triangleSides[2] +","Fragments":["triangleSides[0]"]},{"Key":"+ triangleSides[0]","Fragments":["\u003c="]},{"Key":"triangleSides[0] \u003c=","Fragments":["triangleSides[1])"]},{"Key":"Or better","Fragments":["yet,"]},{"Key":"better yet,","Fragments":["have"]},{"Key":"yet, have","Fragments":["that"]},{"Key":"boolean and","Fragments":["if"]},{"Key":"false, throw","Fragments":["the"]},{"Key":"Also, there","Fragments":["is"]},{"Key":"each triangle","Fragments":["side"]},{"Key":"triangle side","Fragments":["is"]},{"Key":"0 since","Fragments":["if"]},{"Key":"since if","Fragments":["any"]},{"Key":"is negative","Fragments":["the"]},{"Key":"negative the","Fragments":["checks"]},{"Key":"in \u003ccode\u003eCheckInequality\u003c/code\u003e","Fragments":["will"]},{"Key":"\u003ccode\u003eCheckInequality\u003c/code\u003e will","Fragments":["detect"]},{"Key":"will detect","Fragments":["it."]},{"Key":"In \u003ccode\u003eKind\u003c/code\u003e,","Fragments":["it"]},{"Key":"\u003ccode\u003eKind\u003c/code\u003e, it","Fragments":["would"]},{"Key":"statement rather","Fragments":["than"]},{"Key":"than two","Fragments":["if"]},{"Key":"also initialize","Fragments":["triangleSides"]},{"Key":"initialize triangleSides","Fragments":["by"]},{"Key":"triangleSides by","Fragments":["saying"]},{"Key":"saying \u003ccode\u003etriangleSides","Fragments":["="]},{"Key":"\u003ccode\u003etriangleSides =","Fragments":["new"]},{"Key":"new List\u003cdecimal\u003e","Fragments":["{"]},{"Key":"List\u003cdecimal\u003e {","Fragments":["one,"]},{"Key":"{ one,","Fragments":["two,"]},{"Key":"one, two,","Fragments":["three"]},{"Key":"two, three","Fragments":["};\u003c/code\u003e"]},{"Key":"three };\u003c/code\u003e","Fragments":["inside"]},{"Key":"};\u003c/code\u003e inside","Fragments":["the"]},{"Key":"constructor. That","Fragments":["would"]},{"Key":"cleaner. For","Fragments":["that"]},{"Key":"matter, 'one',","Fragments":["'two',"]},{"Key":"'one', 'two',","Fragments":["and"]},{"Key":"'two', and","Fragments":["'three'"]},{"Key":"and 'three'","Fragments":["are"]},{"Key":"'three' are","Fragments":["not"]},{"Key":"very descriptive","Fragments":["names."]},{"Key":"descriptive names.","Fragments":["'A',"]},{"Key":"names. 'A',","Fragments":["'B',"]},{"Key":"'A', 'B',","Fragments":["and"]},{"Key":"'B', and","Fragments":["'C'"]},{"Key":"and 'C'","Fragments":["would"]},{"Key":"'C' would","Fragments":["probably"]},{"Key":"Ok I","Fragments":["have"]},{"Key":"iteration by","Fragments":["using"]},{"Key":"null which","Fragments":["is"]},{"Key":"acceptable here","Fragments":["since"]},{"Key":"a low","Fragments":["level"]},{"Key":"low level","Fragments":["collection"]},{"Key":"level collection","Fragments":["class"]},{"Key":" AddWords","Fragments":["should"]},{"Key":"AddWords should","Fragments":["be"]},{"Key":"function not","Fragments":["a"]},{"Key":"a procedure","Fragments":["with"]},{"Key":"procedure with","Fragments":["side"]},{"Key":"with side","Fragments":["effects"]},{"Key":"effects as","Fragments":["its"]},{"Key":"its only","Fragments":["job"]},{"Key":"only job","Fragments":["is"]},{"Key":"job is","Fragments":["to"]},{"Key":"create counts.","Fragments":["So"]},{"Key":"counts. So","Fragments":["why"]},{"Key":"So why","Fragments":["is"]},{"Key":"why is","Fragments":["it"]},{"Key":"it void","Fragments":["rather"]},{"Key":"void rather","Fragments":["than"]},{"Key":"than returning","Fragments":["counts?"]},{"Key":"Who says","Fragments":["year"]},{"Key":"says year","Fragments":["can't"]},{"Key":" @blaze","Fragments":["Made"]},{"Key":"@blaze Made","Fragments":["the"]},{"Key":"Made the","Fragments":["fixes"]},{"Key":"the fixes","Fragments":["you"]},{"Key":"fixes you","Fragments":["pointed"]},{"Key":"out. Thanks","Fragments":["again."]},{"Key":"Not tested","Fragments":["YAGNI,"]},{"Key":"tested YAGNI,","Fragments":["therefoer"]},{"Key":"YAGNI, therefoer","Fragments":["your"]},{"Key":"therefoer your","Fragments":["Grade()"]},{"Key":"your Grade()","Fragments":["is"]},{"Key":"Grade() is","Fragments":["more","to"]},{"Key":"is writable","Fragments":["externally"]},{"Key":"of else","Fragments":["by"]},{"Key":"else by","Fragments":["switching"]},{"Key":"by switching","Fragments":["test"]},{"Key":"switching test","Fragments":["condition"]},{"Key":"test condition","Fragments":["around"]},{"Key":"condition around","Fragments":["which"]},{"Key":"around which","Fragments":["is"]},{"Key":"is shorter","Fragments":["and"]},{"Key":" Cleaner","Fragments":["LinkedList"]},{"Key":"Cleaner LinkedList","Fragments":["with"]},{"Key":"LinkedList with","Fragments":["IEnumerable"]},{"Key":"with IEnumerable","Fragments":["and","methods."]},{"Key":"IEnumerable and","Fragments":["no"]},{"Key":"no null","Fragments":["for"]},{"Key":"null for","Fragments":["empty"]},{"Key":"empty deque","Fragments":["that"]},{"Key":"deque that","Fragments":["is"]},{"Key":"the Null","Fragments":["Object","Object"]},{"Key":"Null Object","Fragments":["Pattern","Pattern"]},{"Key":"simplified removePunctuation","Fragments":["but"]},{"Key":"removePunctuation but","Fragments":["I"]},{"Key":"think addWords","Fragments":["is"]},{"Key":"addWords is","Fragments":["ok."]},{"Key":"is ok.","Fragments":["I"]},{"Key":"ok. I","Fragments":["currently"]},{"Key":"currently do","Fragments":["split"]},{"Key":"do split","Fragments":["the"]},{"Key":"the phrase,","Fragments":["than"]},{"Key":"phrase, than","Fragments":["handle"]},{"Key":"than handle","Fragments":["that"]},{"Key":"string array","Fragments":["with"]},{"Key":"and isn't","Fragments":["expensive"]},{"Key":"isn't expensive","Fragments":["on"]},{"Key":"expensive on","Fragments":["performance/memory"]},{"Key":"on performance/memory","Fragments":["(as"]},{"Key":"performance/memory (as","Fragments":["far"]},{"Key":"I'm aware,","Fragments":["please"]},{"Key":"aware, please","Fragments":["correct"]},{"Key":"please correct","Fragments":["me"]},{"Key":"I'm wrong","Fragments":["on"]},{"Key":"wrong on","Fragments":["that)."]},{"Key":"on that).","Fragments":["Why"]},{"Key":"that). Why","Fragments":["would"]},{"Key":"would another","Fragments":["option"]},{"Key":"another option","Fragments":["be"]},{"Key":"option be","Fragments":["preferable?"]},{"Key":" Typical","Fragments":["use"]},{"Key":"Typical use","Fragments":["case"]},{"Key":"use case","Fragments":["for"]},{"Key":"iteration were","Fragments":["\"DB\""]},{"Key":"were \"DB\"","Fragments":["can"]},{"Key":"\"DB\" can","Fragments":["be"]},{"Key":"be still","Fragments":["modified"]},{"Key":"still modified","Fragments":["directly"]},{"Key":"modified directly","Fragments":["from"]},{"Key":"You took","Fragments":["the"]},{"Key":"approach because","Fragments":["you"]},{"Key":"only loop","Fragments":["based"]},{"Key":"loop based","Fragments":["on"]},{"Key":"than its","Fragments":["value."]},{"Key":"switch if","Fragments":["you"]},{"Key":"complex data","Fragments":["structure"]},{"Key":"be cautious","Fragments":["about"]},{"Key":"cautious about","Fragments":["using"]},{"Key":"an inherently","Fragments":["unsorted"]},{"Key":"inherently unsorted","Fragments":["data"]},{"Key":"unsorted data","Fragments":["structure"]},{"Key":"structure in","Fragments":["an"]},{"Key":"an algorithm","Fragments":["that","that"]},{"Key":"correct order.","Fragments":["In"]},{"Key":"order. In","Fragments":["this"]},{"Key":"it reenforces","Fragments":["bad"]},{"Key":"reenforces bad","Fragments":["habits."]},{"Key":"bad habits.","Fragments":["I've"]},{"Key":"habits. I've","Fragments":["seen"]},{"Key":"seen too","Fragments":["many"]},{"Key":"many apps","Fragments":["break"]},{"Key":"apps break","Fragments":["because"]},{"Key":"break because","Fragments":["devs"]},{"Key":"because devs","Fragments":["thought"]},{"Key":"devs thought","Fragments":["a"]},{"Key":"a SQL","Fragments":["query"]},{"Key":"SQL query","Fragments":["would"]},{"Key":"query would","Fragments":["always"]},{"Key":"would always","Fragments":["return"]},{"Key":"order even","Fragments":["though"]},{"Key":"though they","Fragments":["had","don't"]},{"Key":"not specified","Fragments":["an"]},{"Key":"specified an","Fragments":["`order"]},{"Key":"an `order","Fragments":["by`"]},{"Key":"`order by`","Fragments":["clause."]},{"Key":" Whoops.","Fragments":["IsNot1900()"]},{"Key":"Whoops. IsNot1900()","Fragments":["should"]},{"Key":"IsNot1900() should","Fragments":["be"]},{"Key":"Consider removing","Fragments":["the"]},{"Key":"comparisons were","Fragments":["extracted"]},{"Key":"were extracted","Fragments":["into"]},{"Key":"extracted into","Fragments":["their"]},{"Key":"their own,","Fragments":["well"]},{"Key":"own, well","Fragments":["named"]},{"Key":"feedback @bria,","Fragments":["this"]},{"Key":"@bria, this","Fragments":["is"]},{"Key":"point which","Fragments":["I"]},{"Key":"considered. Out","Fragments":["of"]},{"Key":"of interest,","Fragments":["what"]},{"Key":"interest, what","Fragments":["type"]},{"Key":"of data","Fragments":["structure","in"]},{"Key":"structure do","Fragments":["you"]},{"Key":"think might","Fragments":["be"]},{"Key":"Don't put","Fragments":["your"]},{"Key":"statements all","Fragments":["on"]},{"Key":"Also, logically,","Fragments":["it'd"]},{"Key":"logically, it'd","Fragments":["make"]},{"Key":"it'd make","Fragments":["sense"]},{"Key":"word equality","Fragments":["within"]},{"Key":"equality within","Fragments":["the"]},{"Key":"the 'isAnagram'","Fragments":["method."]},{"Key":"doesn't calculate","Fragments":["all"]},{"Key":"does pass","Fragments":["the","all"]},{"Key":"Lol, nice.","Fragments":["But,"]},{"Key":"nice. But,","Fragments":["if"]},{"Key":"But, if","Fragments":["you're"]},{"Key":"that, why","Fragments":["not"]},{"Key":"Another dictionary","Fragments":["usecase"]},{"Key":"dictionary usecase","Fragments":["where"]},{"Key":"usecase where","Fragments":["occurrences"]},{"Key":"where occurrences","Fragments":["of"]},{"Key":"occurrences of","Fragments":["specific"]},{"Key":"of specific","Fragments":["characters"]},{"Key":"specific characters","Fragments":["are"]},{"Key":"simply sum","Fragments":["up."]},{"Key":"For consistency","Fragments":["reasons"]},{"Key":"consistency reasons","Fragments":["I"]},{"Key":"the Nucleotides","Fragments":["class"]},{"Key":"Nucleotides class","Fragments":["with"]},{"Key":"with public","Fragments":["const"]},{"Key":"public const","Fragments":["char"]},{"Key":"const char","Fragments":["fields."]},{"Key":"goal isn't","Fragments":["to"]},{"Key":"isn't to","Fragments":["pass","say"]},{"Key":"that solves","Fragments":["the"]},{"Key":"solves the","Fragments":["problem"]},{"Key":"all cases.","Fragments":["There","The"]},{"Key":"cases. There","Fragments":["are"]},{"Key":"other years,","Fragments":["besides"]},{"Key":"years, besides","Fragments":["1900,"]},{"Key":"besides 1900,","Fragments":["that"]},{"Key":"1900, that","Fragments":["are"]},{"Key":"aren't leap","Fragments":["years."]},{"Key":"Any list","Fragments":["or"]},{"Key":"or array","Fragments":["would"]},{"Key":"would maintain","Fragments":["its"]},{"Key":"maintain its","Fragments":["order."]},{"Key":"its order.","Fragments":["But"]},{"Key":"order. But","Fragments":["then"]},{"Key":"But then","Fragments":["you'd","I"]},{"Key":"a structure","Fragments":["to"]},{"Key":"hold the","Fragments":["value","cipher"]},{"Key":"and label.","Fragments":["That"]},{"Key":"label. That","Fragments":["can"]},{"Key":"That can","Fragments":["be"]},{"Key":"own class,","Fragments":["struct,"]},{"Key":"class, struct,","Fragments":["a"]},{"Key":"a tuple,","Fragments":["or"]},{"Key":"tuple, or","Fragments":["whatever."]},{"Key":"for Dictionary","Fragments":["states"]},{"Key":"Dictionary states","Fragments":["that"]},{"Key":"keys is","Fragments":["unspecified"]},{"Key":"is unspecified","Fragments":["(http://msdn.microsoft.com/en-us/library/bb337739.aspx)."]},{"Key":"unspecified (http://msdn.microsoft.com/en-us/library/bb337739.aspx).","Fragments":["Your"]},{"Key":"(http://msdn.microsoft.com/en-us/library/bb337739.aspx). Your","Fragments":["code"]},{"Key":"works now","Fragments":["but"]},{"Key":"if MS","Fragments":["changes"]},{"Key":"MS changes","Fragments":["an"]},{"Key":"changes an","Fragments":["implementation"]},{"Key":"implementation detail","Fragments":["keys","of"]},{"Key":"detail keys","Fragments":["could"]},{"Key":"keys could","Fragments":["be"]},{"Key":"be enumerated","Fragments":["in"]},{"Key":"enumerated in","Fragments":["some"]},{"Key":"nice, the","Fragments":["only"]},{"Key":"only optimization","Fragments":["I"]},{"Key":"range in","Fragments":[":"]},{"Key":" Enumerable.Range(divisors.Min(),","Fragments":["limit"]},{"Key":"Enumerable.Range(divisors.Min(), limit","Fragments":["-"]},{"Key":"problem wasn't","Fragments":["to","necessarily"]},{"Key":"wasn't to","Fragments":["solve"]},{"Key":"solve for","Fragments":["a","all"]},{"Key":"cases. The","Fragments":["problem"]},{"Key":"problem was","Fragments":["to","too"]},{"Key":"to \"Write","Fragments":["a"]},{"Key":"\"Write a","Fragments":["program","program","program"]},{"Key":"program that","Fragments":["will","will","will"]},{"Key":"and report","Fragments":["if","if","if"]},{"Key":"report if","Fragments":["it","it","it"]},{"Key":"cases were","Fragments":["insufficient"]},{"Key":"were insufficient","Fragments":["to"]},{"Key":"insufficient to","Fragments":["fulfill"]},{"Key":"to fulfill","Fragments":["those"]},{"Key":"fulfill those","Fragments":["requirements."]},{"Key":"those requirements.","Fragments":["Updated"]},{"Key":"requirements. Updated","Fragments":["the"]},{"Key":"Updated the","Fragments":["test","class"]},{"Key":"a 3rd","Fragments":["case"]},{"Key":"3rd case","Fragments":["which"]},{"Key":"case which","Fragments":["would"]},{"Key":"push to","Fragments":["more"]},{"Key":"more generalization","Fragments":["(rule"]},{"Key":"generalization (rule","Fragments":["of"]},{"Key":"(rule of","Fragments":["three)."]},{"Key":"of three).","Fragments":["Updated"]},{"Key":"three). Updated","Fragments":["the"]},{"Key":"that scenario.","Fragments":["Added"]},{"Key":"scenario. Added","Fragments":["a"]},{"Key":"a _very_","Fragments":["basic"]},{"Key":"_very_ basic","Fragments":["Program"]},{"Key":"basic Program","Fragments":["class"]},{"Key":"Program class","Fragments":["which"]},{"Key":"would fulfill","Fragments":["the"]},{"Key":"fulfill the","Fragments":["_actual_"]},{"Key":"the _actual_","Fragments":["requirement."]},{"Key":"repeat `Number","Fragments":["="]},{"Key":"`Number =","Fragments":["\"00000000\"`"]},{"Key":"= \"00000000\"`","Fragments":["and"]},{"Key":"\"00000000\"` and","Fragments":["don't"]},{"Key":"need nested","Fragments":["ifs."]},{"Key":"Also on","Fragments":["line"]},{"Key":"line 25","Fragments":["you","`.StartsWith(\"11\")`"]},{"Key":"25 you","Fragments":["can"]},{"Key":"use `cleanedInput[0].Equals('1')`","Fragments":["or"]},{"Key":"`cleanedInput[0].Equals('1')` or","Fragments":["`cleanedInput.StartsWith(\"1\")`"]},{"Key":"or `cleanedInput.StartsWith(\"1\")`","Fragments":["and"]},{"Key":"`cleanedInput.StartsWith(\"1\")` and","Fragments":["it"]},{"Key":" Updated","Fragments":["to"]},{"Key":"Updated to","Fragments":["reflect","just"]},{"Key":"reflect the","Fragments":["goal"]},{"Key":"goal stated","Fragments":["in"]},{"Key":"stated in","Fragments":["the","the"]},{"Key":"the ReadMe.","Fragments":["The"]},{"Key":"ReadMe. The","Fragments":["actual"]},{"Key":"The actual","Fragments":["requirement"]},{"Key":"actual requirement","Fragments":["was"]},{"Key":"was to,","Fragments":["\"Write"]},{"Key":"to, \"Write","Fragments":["a"]},{"Key":"little problem","Fragments":["on"]},{"Key":"problem on","Fragments":["line"]},{"Key":"Small optimization,","Fragments":["you"]},{"Key":"optimization, you","Fragments":["could"]},{"Key":"probably start","Fragments":["the"]},{"Key":"13 you","Fragments":["could","open"]},{"Key":"just assign","Fragments":["the"]},{"Key":"to Number.","Fragments":["Then"]},{"Key":"Number. Then","Fragments":["on"]},{"Key":"15 you","Fragments":["could"]},{"Key":"do an","Fragments":["`else"]},{"Key":"an `else","Fragments":["if`"]},{"Key":"`else if`","Fragments":["and"]},{"Key":"if` and","Fragments":["avoid"]},{"Key":"and avoid","Fragments":["the","the","making"]},{"Key":"the unnecessary","Fragments":["additional","ToCharArray()","using"]},{"Key":"additional length","Fragments":["check"]},{"Key":"check (this","Fragments":["is"]},{"Key":"(this is","Fragments":["real"]},{"Key":"is real","Fragments":["nit-picky"]},{"Key":"real nit-picky","Fragments":["premature"]},{"Key":"nit-picky premature","Fragments":["optimization"]},{"Key":"premature optimization","Fragments":["stuff)."]},{"Key":"11 you","Fragments":["pass"]},{"Key":"lambda when","Fragments":["you"]},{"Key":"pass `\"\"`.","Fragments":["Maybe"]},{"Key":"`\"\"`. Maybe","Fragments":["the"]},{"Key":"compiler optimizes","Fragments":["this"]},{"Key":"optimizes this","Fragments":["away"]},{"Key":"this away","Fragments":["but"]},{"Key":"away but","Fragments":["if"]},{"Key":"we assuming","Fragments":["it"]},{"Key":"assuming it","Fragments":["doesn't"]},{"Key":"doesn't then","Fragments":["it"]},{"Key":"execution of","Fragments":["the"]},{"Key":"lambda expression","Fragments":["for"]},{"Key":"Agreed. Another","Fragments":["option"]},{"Key":"been to","Fragments":["switch"]},{"Key":"to switch","Fragments":["the"]},{"Key":"and value","Fragments":["and","being"]},{"Key":"Separated classes","Fragments":["for"]},{"Key":"checking year","Fragments":["and"]},{"Key":"and created","Fragments":["classes"]},{"Key":"created classes","Fragments":["to"]},{"Key":"hold output","Fragments":["strings"]},{"Key":"output strings","Fragments":["and"]},{"Key":"check whether","Fragments":["user","the"]},{"Key":"whether user","Fragments":["wants"]},{"Key":"user wants","Fragments":["to"]},{"Key":"Had some","Fragments":["really"]},{"Key":"good suggestions","Fragments":["from"]},{"Key":"suggestions from","Fragments":["gyphie,","@mossie"]},{"Key":"from gyphie,","Fragments":["so"]},{"Key":"gyphie, so","Fragments":["I"]},{"Key":"I trimmed","Fragments":["a"]},{"Key":"trimmed a","Fragments":["bit"]},{"Key":"off and","Fragments":["was"]},{"Key":"to ditch","Fragments":["an"]},{"Key":"ditch an","Fragments":["unnecessary"]},{"Key":"if loop,","Fragments":["one"]},{"Key":"loop, one","Fragments":["less"]},{"Key":"one less","Fragments":["assignment"]},{"Key":"less assignment","Fragments":["of"]},{"Key":"assignment of","Fragments":["\"000000000\","]},{"Key":"of \"000000000\",","Fragments":["and"]},{"Key":"\"000000000\", and","Fragments":["made"]},{"Key":"made my","Fragments":["first","code","code"]},{"Key":"is neater,","Fragments":["for"]},{"Key":"neater, for","Fragments":["sure."]},{"Key":"thought out","Fragments":["exercise"]},{"Key":"out exercise","Fragments":["the"]},{"Key":"exercise the","Fragments":["order"]},{"Key":"results would","Fragments":["have"]},{"Key":"better defined","Fragments":["or"]},{"Key":"defined or","Fragments":["the"]},{"Key":"require what","Fragments":["is"]},{"Key":"random order","Fragments":["and"]},{"Key":"not matter.","Fragments":["Anyway,"]},{"Key":"matter. Anyway,","Fragments":["you"]},{"Key":"Anyway, you","Fragments":["should"]},{"Key":"should include","Fragments":["an"]},{"Key":"an `OrderBy`","Fragments":["in"]},{"Key":"`OrderBy` in","Fragments":["your"]},{"Key":"your `List()`","Fragments":["method"]},{"Key":"`List()` method","Fragments":["given"]},{"Key":"method given","Fragments":["that"]},{"Key":"that enumerating","Fragments":["over"]},{"Key":"enumerating over","Fragments":["a"]},{"Key":"dictionary does","Fragments":["not"]},{"Key":"not guarantee","Fragments":["the","that"]},{"Key":"and apparently","Fragments":["the"]},{"Key":"apparently the","Fragments":["order"]},{"Key":"results is","Fragments":["important"]},{"Key":"to passing","Fragments":["the"]},{"Key":"your structure","Fragments":["and"]},{"Key":"structure and","Fragments":["I'm"]},{"Key":"I'm glad","Fragments":["you"]},{"Key":"a bitwise","Fragments":["operator."]},{"Key":" Avoid","Fragments":["exception"]},{"Key":"Avoid exception","Fragments":["handling"]},{"Key":"exception handling","Fragments":["by"]},{"Key":"handling by","Fragments":["using"]},{"Key":"using ContainsKey","Fragments":["method."]},{"Key":" RegEx","Fragments":["is"]},{"Key":"RegEx is","Fragments":["a"]},{"Key":"a powerful","Fragments":["tool"]},{"Key":"powerful tool","Fragments":["to"]},{"Key":"tool to","Fragments":["remove"]},{"Key":"remove special","Fragments":["characters"]},{"Key":"characters (except","Fragments":["of"]},{"Key":"(except of","Fragments":["apostrophes)"]},{"Key":"of apostrophes)","Fragments":["and"]},{"Key":"apostrophes) and","Fragments":["multiple"]},{"Key":"To maintain","Fragments":["the"]},{"Key":"dictionary an","Fragments":["simple"]},{"Key":"an simple","Fragments":["Cotains"]},{"Key":"simple Cotains","Fragments":["check"]},{"Key":"Cotains check","Fragments":["is"]},{"Key":"increase values","Fragments":["or"]},{"Key":"values or","Fragments":["add"]},{"Key":"or add","Fragments":["dictionary","new"]},{"Key":"add dictionary","Fragments":["items."]},{"Key":"Why all","Fragments":["the"]},{"Key":"the ToCharArray()s","Fragments":["linq"]},{"Key":"ToCharArray()s linq","Fragments":["does"]},{"Key":"linq does","Fragments":["that"]},{"Key":"ctor your","Fragments":["do"]},{"Key":"your do","Fragments":["the"]},{"Key":"thing 4","Fragments":["times"]},{"Key":"times (and","Fragments":["twice)"]},{"Key":"(and twice)","Fragments":["opportunity"]},{"Key":"twice) opportunity","Fragments":["to"]},{"Key":" Push","Fragments":["and"]},{"Key":"Push and","Fragments":["Unshift"]},{"Key":"and Unshift","Fragments":["can"]},{"Key":"Unshift can","Fragments":["be"]},{"Key":"1 implementation","Fragments":["method"]},{"Key":"implementation method","Fragments":["as"]},{"Key":"as can","Fragments":["Shift"]},{"Key":"can Shift","Fragments":["and"]},{"Key":"Shift and","Fragments":["Pop"]},{"Key":"and Pop","Fragments":["too"]},{"Key":"Why pipe","Fragments":["string"]},{"Key":"pipe string","Fragments":["to"]},{"Key":"to ToCharArray(),","Fragments":["Linq"]},{"Key":"ToCharArray(), Linq","Fragments":["does"]},{"Key":"Linq does","Fragments":["that"]},{"Key":" isMatch","Fragments":["should"]},{"Key":"isMatch should","Fragments":["be"]},{"Key":"foreach enumerating","Fragments":["wordsToMatch","the"]},{"Key":"enumerating wordsToMatch","Fragments":["in"]},{"Key":"wordsToMatch in","Fragments":["Match?"]},{"Key":"Why repeat","Fragments":["the"]},{"Key":"repeat the","Fragments":["ToLower"]},{"Key":"the ToLower","Fragments":["in"]},{"Key":"ToLower in","Fragments":["the"]},{"Key":"in Match","Fragments":["and","otherwise","foreach"]},{"Key":"Match and","Fragments":["not"]},{"Key":"Great but","Fragments":["I","do","one"]},{"Key":"personally eliminate","Fragments":["the"]},{"Key":"in match","Fragments":["using"]},{"Key":"match using","Fragments":["Linq"]},{"Key":"good, my","Fragments":["only","only","only","only","only"]},{"Key":"my only","Fragments":["criticism","criticism","criticism","criticism","criticism"]},{"Key":"are assuming","Fragments":["the","the","the","the","the"]},{"Key":"the func","Fragments":["is","is","is","is","is"]},{"Key":"func is","Fragments":["returning","returning","returning","returning","returning"]},{"Key":"is returning","Fragments":["the","the","the","the","the"]},{"Key":"same type","Fragments":["as","as","as","as","as"]},{"Key":"it receives.","Fragments":["What","What","What","What","What"]},{"Key":"receives. What","Fragments":["if","if","if","if","if"]},{"Key":"user is","Fragments":["sending","sending","sending","sending","sending"]},{"Key":"is sending","Fragments":["a","a","a","a","a"]},{"Key":"sending a","Fragments":["list","list","list","list","list"]},{"Key":"ints and","Fragments":["wants","wants","wants","wants","wants"]},{"Key":"and wants","Fragments":["a","a","a","a","a"]},{"Key":"wants a","Fragments":["list","list","list","list","list"]},{"Key":"strings back?","Fragments":["Can","Can","Can","Can","Can"]},{"Key":"back? Can","Fragments":["you","you","you","you","you"]},{"Key":"at Zip","Fragments":["to"]},{"Key":"Zip to","Fragments":["replace"]},{"Key":"replace for","Fragments":["loop"]},{"Key":"looping using","Fragments":["an"]},{"Key":"if rather","Fragments":["than"]},{"Key":"Still the","Fragments":["loop"]},{"Key":"loop reruns","Fragments":["and"]},{"Key":"reruns and","Fragments":["is"]},{"Key":"is twice","Fragments":["a","as","as"]},{"Key":"twice a","Fragments":["s"]},{"Key":"a s","Fragments":["long"]},{"Key":"s long","Fragments":["as"]},{"Key":"as should","Fragments":["be"]},{"Key":"minor nitpick","Fragments":["on"]},{"Key":"nitpick on","Fragments":["variable","this"]},{"Key":"on variable","Fragments":["name:"]},{"Key":"variable name:","Fragments":["In"]},{"Key":"name: In","Fragments":["c#,"]},{"Key":"In c#,","Fragments":["a"]},{"Key":"c#, a","Fragments":["predicate"]},{"Key":"predicate is","Fragments":["a"]},{"Key":"bool you","Fragments":["shouldn't"]},{"Key":"shouldn't name","Fragments":["a"]},{"Key":"variable 'predicate'","Fragments":["unless"]},{"Key":"'predicate' unless","Fragments":["it"]},{"Key":"a bool.","Fragments":["Otherwise,"]},{"Key":"bool. Otherwise,","Fragments":["it"]},{"Key":"gets confusing","Fragments":["reading"]},{"Key":"confusing reading","Fragments":["your"]},{"Key":" Ummm,","Fragments":["you"]},{"Key":"Ummm, you","Fragments":["changed"]},{"Key":"you changed","Fragments":["your"]},{"Key":"changed your","Fragments":["code","settings?"]},{"Key":"Select linq","Fragments":["function."]},{"Key":"linq function.","Fragments":["You"]},{"Key":"function. You","Fragments":["weren't"]},{"Key":"You weren't","Fragments":["supposed"]},{"Key":"weren't supposed","Fragments":["to"]},{"Key":"Select functions,","Fragments":["that"]},{"Key":"functions, that","Fragments":["was"]},{"Key":"the restrictions","Fragments":["in"]},{"Key":"restrictions in","Fragments":["the"]},{"Key":"the ReadMe","Fragments":["file"]},{"Key":"ReadMe file","Fragments":["of"]},{"Key":"file of","Fragments":["the"]},{"Key":"Good catch.","Fragments":["Yeah,"]},{"Key":"catch. Yeah,","Fragments":["that"]},{"Key":"easy -","Fragments":["even"]},{"Key":"- even","Fragments":["added"]},{"Key":"even added","Fragments":["a"]},{"Key":"use my","Fragments":["own"]},{"Key":"own `IsLetter`","Fragments":["type"]},{"Key":"`IsLetter` type","Fragments":["method"]},{"Key":"type method","Fragments":["because"]},{"Key":"method because","Fragments":["the"]},{"Key":"C# `char.IsLetter`","Fragments":["supports"]},{"Key":"`char.IsLetter` supports","Fragments":["a"]},{"Key":"supports a","Fragments":["variety"]},{"Key":"a variety","Fragments":["of"]},{"Key":"variety of","Fragments":["unicode"]},{"Key":"of unicode","Fragments":["characters"]},{"Key":"unicode characters","Fragments":["that"]},{"Key":"The specification","Fragments":["defined"]},{"Key":"specification defined","Fragments":["how"]},{"Key":"defined how","Fragments":["to"]},{"Key":"encode alpha","Fragments":["characters"]},{"Key":"and punctuation","Fragments":["but"]},{"Key":"punctuation but","Fragments":["numerics"]},{"Key":"but numerics","Fragments":["were"]},{"Key":"numerics were","Fragments":["left"]},{"Key":"left undefined.","Fragments":["I"]},{"Key":"undefined. I","Fragments":["removed"]},{"Key":"that attempted","Fragments":["to"]},{"Key":"The behavior","Fragments":["is"]},{"Key":"undefined, however,","Fragments":["in"]},{"Key":"however, in","Fragments":["the"]},{"Key":"implementation numerics","Fragments":["are"]},{"Key":"numerics are","Fragments":["ignored."]},{"Key":"response class.","Fragments":["Used"]},{"Key":"class. Used","Fragments":["the"]},{"Key":"Used the","Fragments":["Regex,"]},{"Key":"the Regex,","Fragments":["because"]},{"Key":"Regex, because","Fragments":["it's"]},{"Key":"while since","Fragments":["I've"]},{"Key":"I've messed","Fragments":["with"]},{"Key":"messed with","Fragments":["them."]},{"Key":"them. Need","Fragments":["the"]},{"Key":"Need the","Fragments":["practice."]},{"Key":"the practice.","Fragments":["Put"]},{"Key":"practice. Put","Fragments":["in"]},{"Key":"Put in","Fragments":["a"]},{"Key":"non matching","Fragments":["thing,"]},{"Key":"matching thing,","Fragments":["but"]},{"Key":"wasn't part","Fragments":["of"]},{"Key":"original test","Fragments":["suite.","back"]},{"Key":"am concerned","Fragments":["that"]},{"Key":"concerned that","Fragments":["this"]},{"Key":"maintain due","Fragments":["to"]},{"Key":"how hard","Fragments":["it"]},{"Key":"hard it","Fragments":["is"]},{"Key":"read, digest,","Fragments":["and"]},{"Key":"digest, and","Fragments":["tweak"]},{"Key":"and tweak","Fragments":["complex"]},{"Key":"tweak complex","Fragments":["regular"]},{"Key":"complex regular","Fragments":["expressions."]},{"Key":"regular expressions.","Fragments":["Think"]},{"Key":"expressions. Think","Fragments":["about"]},{"Key":"about six","Fragments":["months"]},{"Key":"six months","Fragments":["from"]},{"Key":"months from","Fragments":["now"]},{"Key":"now how","Fragments":["quickly"]},{"Key":"how quickly","Fragments":["you"]},{"Key":"quickly you","Fragments":["or"]},{"Key":"the junior","Fragments":["developer"]},{"Key":"junior developer","Fragments":["who"]},{"Key":"developer who","Fragments":["just"]},{"Key":"who just","Fragments":["inherited"]},{"Key":"just inherited","Fragments":["this"]},{"Key":"inherited this","Fragments":["code"]},{"Key":"it does?","Fragments":["I'm"]},{"Key":"does? I'm","Fragments":["relatively"]},{"Key":"I'm relatively","Fragments":["comfortable"]},{"Key":"relatively comfortable","Fragments":["with"]},{"Key":"comfortable with","Fragments":["regular"]},{"Key":"regular expressions,","Fragments":["and","you"]},{"Key":"expressions, and","Fragments":["that"]},{"Key":"code sends","Fragments":["a"]},{"Key":"sends a","Fragments":["shiver"]},{"Key":"a shiver","Fragments":["down"]},{"Key":"shiver down","Fragments":["my"]},{"Key":"if more","Fragments":["than"]},{"Key":"one value","Fragments":["in"]},{"Key":"the responseMap","Fragments":["matches","object"]},{"Key":"responseMap matches","Fragments":["what"]},{"Key":"matches what","Fragments":["was"]},{"Key":"was said?","Fragments":["What"]},{"Key":"said? What","Fragments":["if"]},{"Key":"if none","Fragments":["match?"]},{"Key":"none match?","Fragments":["That"]},{"Key":"match? That","Fragments":["LINQ"]},{"Key":"That LINQ","Fragments":["code"]},{"Key":"LINQ code","Fragments":["returns"]},{"Key":"code returns","Fragments":["First,"]},{"Key":"returns First,","Fragments":["but"]},{"Key":"First, but","Fragments":["that"]},{"Key":"on ordering","Fragments":["(if"]},{"Key":"ordering (if","Fragments":["more"]},{"Key":"(if more","Fragments":["than"]},{"Key":"one matches)","Fragments":["and"]},{"Key":"matches) and","Fragments":["perhaps"]},{"Key":"perhaps should","Fragments":["be"]},{"Key":"be FirstOrDefault","Fragments":["to"]},{"Key":"the no","Fragments":["match"]},{"Key":"no match","Fragments":["situation."]},{"Key":"Having static","Fragments":["classes"]},{"Key":"classes inside","Fragments":["an"]},{"Key":"inside an","Fragments":["abstract"]},{"Key":"an abstract","Fragments":["parent"]},{"Key":"abstract parent","Fragments":["class"]},{"Key":"parent class","Fragments":["seems"]},{"Key":"class seems","Fragments":["overly"]},{"Key":"basically a","Fragments":["text"]},{"Key":"a text","Fragments":["string"]},{"Key":"text string","Fragments":["in","out"]},{"Key":"and text","Fragments":["string"]},{"Key":"string out","Fragments":["function."]},{"Key":"out function.","Fragments":["To"]},{"Key":"function. To","Fragments":["add","convert"]},{"Key":"To add","Fragments":["a"]},{"Key":"new response","Fragments":["for"]},{"Key":"for Bob,","Fragments":["you"]},{"Key":"Bob, you","Fragments":["would"]},{"Key":"new responseMap","Fragments":["entry"]},{"Key":"responseMap entry","Fragments":["and"]},{"Key":"new concrete","Fragments":["Response"]},{"Key":"concrete Response","Fragments":["subclass."]},{"Key":"Response subclass.","Fragments":["These"]},{"Key":"subclass. These","Fragments":["corresponding"]},{"Key":"These corresponding","Fragments":["parts"]},{"Key":"corresponding parts","Fragments":["are"]},{"Key":"parts are","Fragments":["in"]},{"Key":"separate classes,","Fragments":["so"]},{"Key":"classes, so","Fragments":["I"]},{"Key":"worry they","Fragments":["might"]},{"Key":"they might","Fragments":["get"]},{"Key":"might get","Fragments":["out","it."]},{"Key":"of sync.","Fragments":["You"]},{"Key":"sync. You","Fragments":["might"]},{"Key":"consider plugging","Fragments":["the"]},{"Key":"plugging the","Fragments":["response"]},{"Key":"response text","Fragments":["right"]},{"Key":"text right","Fragments":["into"]},{"Key":"responseMap object","Fragments":["(and"]},{"Key":"object (and","Fragments":["change"]},{"Key":"(and change","Fragments":["it"]},{"Key":"a Dictionary\u0026lt;Func\u0026lt;string,","Fragments":["bool\u0026gt;,"]},{"Key":"Dictionary\u0026lt;Func\u0026lt;string, bool\u0026gt;,","Fragments":["string\u0026gt;"]},{"Key":"bool\u0026gt;, string\u0026gt;","Fragments":["type)"]},{"Key":"string\u0026gt; type)","Fragments":["and"]},{"Key":"type) and","Fragments":["get"]},{"Key":"Response class","Fragments":["and"]},{"Key":" Duh!","Fragments":["Sorry"]},{"Key":"Duh! Sorry","Fragments":["about"]},{"Key":"about that...","Fragments":["uploading"]},{"Key":"that... uploading","Fragments":["revision"]},{"Key":"uploading revision","Fragments":["soon."]},{"Key":"This first","Fragments":["pass"]},{"Key":"bit brutish.","Fragments":["However,"]},{"Key":"brutish. However,","Fragments":["given"]},{"Key":"However, given","Fragments":["the"]},{"Key":"requirements of","Fragments":["case-insensitivity"]},{"Key":"of case-insensitivity","Fragments":["and"]},{"Key":"case-insensitivity and","Fragments":["sorting"]},{"Key":"and sorting","Fragments":["of"]},{"Key":"sorting of","Fragments":["the"]},{"Key":"results, it","Fragments":["seems"]},{"Key":"seems necessary.","Fragments":["I"]},{"Key":"supporting function","Fragments":["to"]},{"Key":"the ```char[]```","Fragments":["are","for"]},{"Key":"```char[]``` are","Fragments":["equal."]},{"Key":"equal. But","Fragments":["```.Equals()```"]},{"Key":"But ```.Equals()```","Fragments":["didn't"]},{"Key":"```.Equals()``` didn't","Fragments":["seem"]},{"Key":"think @mazie","Fragments":["meant"]},{"Key":"@mazie meant","Fragments":["the"]},{"Key":"meant the","Fragments":["other"]},{"Key":"other use","Fragments":["of","for?"]},{"Key":"of Math.Pow(),","Fragments":["the"]},{"Key":"Math.Pow(), the","Fragments":["one"]},{"Key":"one within","Fragments":["the"]},{"Key":"Select statement.","Fragments":[":-D"]},{"Key":"like C","Fragments":["rather"]},{"Key":"C rather","Fragments":["than"]},{"Key":"than c#.","Fragments":["Try"]},{"Key":"c#. Try","Fragments":["and"]},{"Key":"Try and","Fragments":["minimise","use","do","eliminate"]},{"Key":"and minimise","Fragments":["or"]},{"Key":"minimise or","Fragments":["eliminaet"]},{"Key":"or eliminaet","Fragments":["for"]},{"Key":"eliminaet for","Fragments":["loops?"]},{"Key":"for loops?","Fragments":["Would"]},{"Key":"loops? Would","Fragments":["ake"]},{"Key":"Would ake","Fragments":["it"]},{"Key":"ake it","Fragments":["more"]},{"Key":"didn't end","Fragments":["up"]},{"Key":"up using","Fragments":["a","a"]},{"Key":"my blocks.","Fragments":["I'm"]},{"Key":"blocks. I'm","Fragments":["not"]},{"Key":"sure but","Fragments":["it"]},{"Key":"like instantiating","Fragments":["a"]},{"Key":"instantiating a","Fragments":["StringBuilder"]},{"Key":"StringBuilder inside","Fragments":["the"]},{"Key":"short string","Fragments":["probably"]},{"Key":"string probably","Fragments":["wasn't"]},{"Key":"wasn't any","Fragments":["better"]},{"Key":"using simple","Fragments":["concatenation."]},{"Key":" Frustration.","Fragments":["Perhaps"]},{"Key":"Frustration. Perhaps","Fragments":["this"]},{"Key":"Perhaps this","Fragments":["is","is"]},{"Key":"get for","Fragments":["getting"]},{"Key":"for getting","Fragments":["most"]},{"Key":"getting most","Fragments":["of"]},{"Key":"C# experience","Fragments":["through","is"]},{"Key":"experience through","Fragments":["unity."]},{"Key":"through unity.","Fragments":["I'm"]},{"Key":"unity. I'm","Fragments":["making"]},{"Key":"I'm making","Fragments":["this"]},{"Key":"Studio 2013,","Fragments":["and"]},{"Key":"2013, and","Fragments":["it's"]},{"Key":"it's returning","Fragments":["errors"]},{"Key":"returning errors","Fragments":["in"]},{"Key":"errors in","Fragments":["LeapTest,","this"]},{"Key":"in LeapTest,","Fragments":["rather"]},{"Key":"LeapTest, rather","Fragments":["than"]},{"Key":"getting 4","Fragments":["\"The"]},{"Key":"4 \"The","Fragments":["name"]},{"Key":"current context\"","Fragments":["from"]},{"Key":"context\" from","Fragments":["LeapTest"]},{"Key":"from LeapTest","Fragments":["and"]},{"Key":"LeapTest and","Fragments":["have"]},{"Key":"do about","Fragments":["it.","it"]},{"Key":" PLEASE","Fragments":["NOTE:"]},{"Key":"PLEASE NOTE:","Fragments":["Unless"]},{"Key":"NOTE: Unless","Fragments":["you"]},{"Key":"can guess","Fragments":["a"]},{"Key":"guess a","Fragments":["mistake"]},{"Key":"mistake I'm","Fragments":["going"]},{"Key":"made by","Fragments":["the","@milton"]},{"Key":"end, I'm","Fragments":["not"]},{"Key":"itself right","Fragments":["now."]},{"Key":"right now.","Fragments":["This"]},{"Key":"now. This","Fragments":["is"]},{"Key":"just what","Fragments":["I"]},{"Key":"put down","Fragments":["to"]},{"Key":"compile and","Fragments":["pass","would"]},{"Key":"of appending","Fragments":["multiple"]},{"Key":"appending multiple","Fragments":["```.Where()```"]},{"Key":"multiple ```.Where()```","Fragments":["calls"]},{"Key":"```.Where()``` calls","Fragments":["in"]},{"Key":"to systematically","Fragments":["pare"]},{"Key":"systematically pare","Fragments":["down"]},{"Key":"result list.","Fragments":["I"]},{"Key":"am surprised","Fragments":["the"]},{"Key":"surprised the","Fragments":["```.OrderBy()```"]},{"Key":"the ```.OrderBy()```","Fragments":["didn't"]},{"Key":"```.OrderBy()``` didn't","Fragments":["already"]},{"Key":"didn't already","Fragments":["exist"]},{"Key":"exist on","Fragments":["```IEnumerable\u003cT\u003e```"]},{"Key":"on ```IEnumerable\u003cT\u003e```","Fragments":["unless"]},{"Key":"```IEnumerable\u003cT\u003e``` unless","Fragments":["you"]},{"Key":"are writing","Fragments":["it"]},{"Key":"it solely","Fragments":["to"]},{"Key":"solely to","Fragments":["not"]},{"Key":"a passed","Fragments":["in"]},{"Key":"in ```Func\u003c\u003e```.","Fragments":["Regardless,"]},{"Key":"```Func\u003c\u003e```. Regardless,","Fragments":["looks"]},{"Key":"Regardless, looks","Fragments":["great."]},{"Key":" Based","Fragments":["on"]},{"Key":"comment by","Fragments":["@dagmar"]},{"Key":"by @dagmar","Fragments":["I"]},{"Key":"@dagmar I","Fragments":["was"]},{"Key":"the closest","Fragments":["thing"]},{"Key":"closest thing","Fragments":["to"]},{"Key":"a one-liner.","Fragments":["Still"]},{"Key":"one-liner. Still","Fragments":["needed"]},{"Key":"Still needed","Fragments":["to"]},{"Key":"for unequal","Fragments":["lengths,"]},{"Key":"unequal lengths,","Fragments":["but"]},{"Key":"lengths, but","Fragments":["this"]},{"Key":"this sure","Fragments":["handles"]},{"Key":"sure handles","Fragments":["it"]},{"Key":"handles it","Fragments":["well."]},{"Key":"exercise has","Fragments":["bothered"]},{"Key":"has bothered","Fragments":["me"]},{"Key":"any so","Fragments":["far."]},{"Key":"far. It","Fragments":["has"]},{"Key":"best specs","Fragments":["and"]},{"Key":"specs and","Fragments":["the"]},{"Key":"worst tests.","Fragments":["The"]},{"Key":"enforce implementation","Fragments":["details"]},{"Key":"details by","Fragments":["requiring"]},{"Key":"by requiring","Fragments":["me"]},{"Key":"expose intermediate","Fragments":["calculations"]},{"Key":"intermediate calculations","Fragments":["that,"]},{"Key":"calculations that,","Fragments":["in"]},{"Key":"that, in","Fragments":["my"]},{"Key":"implementation, don't","Fragments":["exist."]},{"Key":"it my","Fragments":["way"]},{"Key":"and ignored","Fragments":["those"]},{"Key":"ignored those","Fragments":["tests."]},{"Key":"those tests.","Fragments":["Although"]},{"Key":"tests. Although","Fragments":["I"]},{"Key":"a `List\u003cstring\u003e`","Fragments":["to"]},{"Key":"`List\u003cstring\u003e` to","Fragments":["hold"]},{"Key":"text so","Fragments":["I"]},{"Key":"could output","Fragments":["the","different"]},{"Key":"output the","Fragments":["formatted"]},{"Key":"formatted cipher","Fragments":["instead"]},{"Key":"cipher instead","Fragments":["of"]},{"Key":"the `StringBuilder`","Fragments":["I"]},{"Key":"`StringBuilder` I","Fragments":["started"]},{"Key":"started with.","Fragments":["I"]},{"Key":"a formatted","Fragments":["output"]},{"Key":"formatted output","Fragments":["was"]},{"Key":"output was","Fragments":["a"]},{"Key":" Furthermore,","Fragments":["the","why"]},{"Key":"Furthermore, the","Fragments":["tests","`SquareOfSums()`"]},{"Key":"tests incorrectly","Fragments":["checked"]},{"Key":"incorrectly checked","Fragments":["the"]},{"Key":"the \"Normalized\"","Fragments":["(I'd"]},{"Key":"\"Normalized\" (I'd","Fragments":["have"]},{"Key":"(I'd have","Fragments":["called"]},{"Key":"have called","Fragments":["it"]},{"Key":"it \"Formatted\")","Fragments":["cipher"]},{"Key":"\"Formatted\") cipher","Fragments":["text."]},{"Key":"cipher text.","Fragments":["They"]},{"Key":"text. They","Fragments":["enforce"]},{"Key":"They enforce","Fragments":["the"]},{"Key":"enforce the","Fragments":["text"]},{"Key":"text being","Fragments":["broken"]},{"Key":"broken into","Fragments":["chunks"]},{"Key":"into chunks","Fragments":["of"]},{"Key":"chunks of","Fragments":["five"]},{"Key":"of five","Fragments":["characters."]},{"Key":"five characters.","Fragments":["This"]},{"Key":"characters. This","Fragments":["is"]},{"Key":"is incorrect","Fragments":["according"]},{"Key":"incorrect according","Fragments":["to"]},{"Key":"the explanation","Fragments":["of"]},{"Key":"the examples","Fragments":["given."]},{"Key":"examples given.","Fragments":["I"]},{"Key":"given. I","Fragments":["implemented"]},{"Key":"implemented it","Fragments":["correctly;","I","so"]},{"Key":"it correctly;","Fragments":["the"]},{"Key":"correctly; the","Fragments":["tests"]},{"Key":"tests be","Fragments":["damned."]},{"Key":"Very clever","Fragments":["\"bit"]},{"Key":"clever \"bit","Fragments":["shifting\""]},{"Key":"\"bit shifting\"","Fragments":["technique!"]},{"Key":"Thanks. I","Fragments":["didn't","appreciate"]},{"Key":"was unusual","Fragments":["until"]},{"Key":"unusual until","Fragments":["I"]},{"Key":"saw that","Fragments":["all"]},{"Key":"the submissions","Fragments":["here"]},{"Key":"submissions here","Fragments":["built"]},{"Key":"here built","Fragments":["each"]},{"Key":"built each","Fragments":["digit"]},{"Key":"digit independently,","Fragments":["but"]},{"Key":"independently, but","Fragments":["really"]},{"Key":"but really","Fragments":["the"]},{"Key":"number 12345","Fragments":["(in"]},{"Key":"12345 (in","Fragments":["decimal)"]},{"Key":"(in decimal)","Fragments":["is"]},{"Key":"decimal) is","Fragments":["really"]},{"Key":"really 1234","Fragments":["*"]},{"Key":"1234 *","Fragments":["10"]},{"Key":"* 10","Fragments":["+","+"]},{"Key":"10 +","Fragments":["5","5,"]},{"Key":"+ 5","Fragments":["and"]},{"Key":"5 and","Fragments":["1234","7."]},{"Key":"and 1234","Fragments":["is"]},{"Key":"1234 is","Fragments":["really"]},{"Key":"really 123","Fragments":["*"]},{"Key":"123 *","Fragments":["10"]},{"Key":"+ 5,","Fragments":["and"]},{"Key":"so on.","Fragments":["This","I"]},{"Key":"on. This","Fragments":["just"]},{"Key":"just expands","Fragments":["it"]},{"Key":"expands it","Fragments":["to"]},{"Key":"the power","Fragments":["function.","function","from"]},{"Key":"still relatively","Fragments":["new"]},{"Key":"relatively new","Fragments":["to"]},{"Key":"to c#","Fragments":["but"]},{"Key":"c# but","Fragments":["it","Ruby"]},{"Key":"class can't","Fragments":["be"]},{"Key":"be accessed","Fragments":["outside","outside"]},{"Key":"accessed outside","Fragments":["of","of"]},{"Key":"your ExercismCSharp.leap","Fragments":["namespace"]},{"Key":"ExercismCSharp.leap namespace","Fragments":["because"]},{"Key":"namespace because","Fragments":["it's"]},{"Key":"not set","Fragments":["to"]},{"Key":"to public","Fragments":["and"]},{"Key":"default classes","Fragments":["declared"]},{"Key":"classes declared","Fragments":["within"]},{"Key":"within namespaces","Fragments":["are"]},{"Key":"namespaces are","Fragments":["internal."]},{"Key":"are internal.","Fragments":["Check"]},{"Key":"internal. Check","Fragments":["out"]},{"Key":"this page,","Fragments":["hope"]},{"Key":"page, hope","Fragments":["it"]},{"Key":"it helps.","Fragments":["http://msdn.microsoft.com/en-us/library/0b0thckt.aspx."]},{"Key":"helps. http://msdn.microsoft.com/en-us/library/0b0thckt.aspx.","Fragments":["Also"]},{"Key":"http://msdn.microsoft.com/en-us/library/0b0thckt.aspx. Also","Fragments":["your"]},{"Key":"doesn't account","Fragments":["for"]},{"Key":"the millennia","Fragments":["offset"]},{"Key":"millennia offset","Fragments":["(1900"]},{"Key":"offset (1900","Fragments":["is"]},{"Key":"(1900 is","Fragments":["not"]},{"Key":"year but","Fragments":["2000","divisible"]},{"Key":"but 2000","Fragments":["is)."]},{"Key":"2000 is).","Fragments":["You"]},{"Key":"is). You","Fragments":["can"]},{"Key":"can double","Fragments":["check"]},{"Key":"double check","Fragments":["the"]},{"Key":"Readme to","Fragments":["see"]},{"Key":"a link","Fragments":["to","I"]},{"Key":"a youtube","Fragments":["video"]},{"Key":"youtube video","Fragments":["that"]},{"Key":"video that","Fragments":["explains"]},{"Key":"that explains","Fragments":["in"]},{"Key":"explains in","Fragments":["a"]},{"Key":"your namespace","Fragments":["and"]},{"Key":"namespace and","Fragments":["class"]},{"Key":"Alright, I","Fragments":["added"]},{"Key":"not enough,","Fragments":["however:"]},{"Key":"enough, however:","Fragments":["I"]},{"Key":"however: I","Fragments":["also"]},{"Key":"also had","Fragments":["to"]},{"Key":"put \"using","Fragments":["ExercismCSharp.leap;\""]},{"Key":"\"using ExercismCSharp.leap;\"","Fragments":["into"]},{"Key":"ExercismCSharp.leap;\" into","Fragments":["the"]},{"Key":"test. ExercismCSharp","Fragments":["being"]},{"Key":"ExercismCSharp being","Fragments":["the"]},{"Key":"was incorrect","Fragments":["in"]},{"Key":"incorrect in","Fragments":["trying"]},{"Key":"in trying","Fragments":["to"]},{"Key":"the project.","Fragments":["Instead,","Unfamiliar"]},{"Key":"project. Instead,","Fragments":["I"]},{"Key":"Instead, I","Fragments":["simply"]},{"Key":"simply needed","Fragments":["to"]},{"Key":"build solutions.","Fragments":["(F7)."]},{"Key":"suspect there","Fragments":["is"]},{"Key":"seemed the","Fragments":["most"]},{"Key":"straightforward approach.","Fragments":["I"]},{"Key":"to AND","Fragments":["the"]},{"Key":"not like","Fragments":["my","use"]},{"Key":"current ```FixUpWord```","Fragments":["method."]},{"Key":"```FixUpWord``` method.","Fragments":["Any"]},{"Key":"method. Any","Fragments":["suggestions"]},{"Key":"the note","Fragments":["you"]},{"Key":"note you","Fragments":["put"]},{"Key":"put there","Fragments":["so"]},{"Key":"realize you","Fragments":["were"]},{"Key":"compile for","Fragments":["the"]},{"Key":"test. So","Fragments":["I"]},{"Key":" Simplified","Fragments":["the","the"]},{"Key":"Simplified the","Fragments":["```.Match(string[]","code"]},{"Key":"the ```.Match(string[]","Fragments":["testWords)```"]},{"Key":"```.Match(string[] testWords)```","Fragments":["routine"]},{"Key":"testWords)``` routine","Fragments":["and"]},{"Key":"the ```.IsAnagram(string","Fragments":["one,"]},{"Key":"```.IsAnagram(string one,","Fragments":["string"]},{"Key":"one, string","Fragments":["two)```"]},{"Key":"string two)```","Fragments":["routine."]},{"Key":"two)``` routine.","Fragments":["The"]},{"Key":"routine. The","Fragments":["goal"]},{"Key":"The goal","Fragments":["was"]},{"Key":"an ```.IsAnagram(string,","Fragments":["string)```"]},{"Key":"```.IsAnagram(string, string)```","Fragments":["which"]},{"Key":"string)``` which","Fragments":["wasn't"]},{"Key":"which wasn't","Fragments":["dependent"]},{"Key":"wasn't dependent","Fragments":["upon"]},{"Key":"upon a","Fragments":["private"]},{"Key":"private variable.","Fragments":["It"]},{"Key":"variable. It","Fragments":["is"]},{"Key":"performance as","Fragments":["we"]},{"Key":"a ```char[]```","Fragments":["for"]},{"Key":"```char[]``` for","Fragments":["the","each"]},{"Key":"the ```_baseWord```","Fragments":["and"]},{"Key":"```_baseWord``` and","Fragments":["sort"]},{"Key":"and sort","Fragments":["the"]},{"Key":"each test.","Fragments":["However,"]},{"Key":"test. However,","Fragments":["the"]},{"Key":"end result","Fragments":["feels"]},{"Key":"result feels","Fragments":["cleaner"]},{"Key":"feels cleaner","Fragments":["and"]},{"Key":"Refactored Aggregate","Fragments":["into"]},{"Key":"Aggregate into","Fragments":["extension"]},{"Key":"method, now","Fragments":["looks"]},{"Key":"now looks","Fragments":["very"]},{"Key":"twice as","Fragments":["long","fast.","long","fast."]},{"Key":"long given","Fragments":["it"]},{"Key":"it generates","Fragments":["all"]},{"Key":"generates all","Fragments":["evens"]},{"Key":"all evens","Fragments":["as"]},{"Key":"evens as","Fragments":["prime"]},{"Key":"as prime","Fragments":["candidates"]},{"Key":"prime candidates","Fragments":["but"]},{"Key":"candidates but","Fragments":["none"]},{"Key":"but none","Fragments":["are"]},{"Key":"a ref","Fragments":["parameter"]},{"Key":"ref parameter","Fragments":["is"]},{"Key":"a potential","Fragments":["code"]},{"Key":"potential code","Fragments":["smell"]},{"Key":"smell especially","Fragments":["with"]},{"Key":"a void","Fragments":["function","function"]},{"Key":"Very elegant","Fragments":["but"]},{"Key":"elegant but","Fragments":["it"]},{"Key":"it loops","Fragments":["through"]},{"Key":"all even","Fragments":["numbers"]},{"Key":"numbers none","Fragments":["of"]},{"Key":" Dividible","Fragments":["is"]},{"Key":"Dividible is","Fragments":["IMHO"]},{"Key":"is IMHO","Fragments":["unnecessary","1","unnecessarily"]},{"Key":"IMHO unnecessary","Fragments":["to"]},{"Key":"unnecessary to","Fragments":["replace"]},{"Key":"replace c#","Fragments":["idiom."]},{"Key":"Also this","Fragments":["is"]},{"Key":"is overly","Fragments":["complex"]},{"Key":"of GetNextPrimeFactor","Fragments":["and"]},{"Key":"GetNextPrimeFactor and","Fragments":["IsPrime"]},{"Key":"and IsPrime","Fragments":["methods"]},{"Key":"IsPrime methods","Fragments":["and"]},{"Key":"and integrate","Fragments":["business"]},{"Key":"integrate business","Fragments":["logic"]},{"Key":"into For","Fragments":["method"]},{"Key":" complicated","Fragments":["using"]},{"Key":"complicated using","Fragments":["a"]},{"Key":"void function","Fragments":["nextPrime,"]},{"Key":"function nextPrime,","Fragments":["why"]},{"Key":"nextPrime, why","Fragments":["not"]},{"Key":"make currentPrime","Fragments":["a"]},{"Key":"currentPrime a","Fragments":["class"]},{"Key":"Can compact","Fragments":["your"]},{"Key":"compact your","Fragments":["regexs"]},{"Key":"thinking straight","Fragments":["I"]},{"Key":"straight I","Fragments":["would"]},{"Key":"worked down","Fragments":["from"]},{"Key":"down from","Fragments":["the"]},{"Key":"root but","Fragments":["up."]},{"Key":"but up.","Fragments":["Then"]},{"Key":"up. Then","Fragments":["I"]},{"Key":"have by","Fragments":["default"]},{"Key":"default found","Fragments":["a"]},{"Key":"small prime","Fragments":["factor"]},{"Key":"factor and","Fragments":["not"]},{"Key":"need 2","Fragments":["recursive"]},{"Key":"2 recursive","Fragments":["calls."]},{"Key":"Well, static","Fragments":["constructors."]},{"Key":"static constructors.","Fragments":["I've"]},{"Key":"constructors. I've","Fragments":["needed"]},{"Key":"I've needed","Fragments":["those"]},{"Key":"needed those","Fragments":["for"]},{"Key":"those for","Fragments":["some"]},{"Key":"some utility","Fragments":["classes"]},{"Key":"utility classes","Fragments":["in"]},{"Key":"didn't find","Fragments":["them","regex"]},{"Key":"find them","Fragments":["in"]},{"Key":"my research.","Fragments":["I"]},{"Key":"research. I","Fragments":["feel"]},{"Key":"an idiot.","Fragments":["Thanks"]},{"Key":"idiot. Thanks","Fragments":["for"]},{"Key":"make For","Fragments":["a"]},{"Key":"Why make","Fragments":["a"]},{"Key":"separate and","Fragments":["*public*"]},{"Key":"and *public*","Fragments":["class"]},{"Key":"*public* class","Fragments":["for"]},{"Key":"helper methods?","Fragments":["This"]},{"Key":"methods? This","Fragments":["is"]},{"Key":"an enumerator,","Fragments":["why"]},{"Key":"enumerator, why","Fragments":["not"]},{"Key":"not ***overly***","Fragments":["sure"]},{"Key":"***overly*** sure","Fragments":["about"]},{"Key":"they seem","Fragments":["to"]},{"Key":"to obfuscate","Fragments":["what"]},{"Key":"doing (in","Fragments":["the"]},{"Key":"instance anyway)","Fragments":["additionally"]},{"Key":"anyway) additionally","Fragments":["```year/100```"]},{"Key":"additionally ```year/100```","Fragments":["doesn't"]},{"Key":"```year/100``` doesn't","Fragments":["seem"]},{"Key":"seem particularly","Fragments":["intuitive."]},{"Key":"am fairly","Fragments":["sure","sure"]},{"Key":"fairly sure","Fragments":["there","it"]},{"Key":"but feels","Fragments":["a"]},{"Key":"really thought","Fragments":["it"]},{"Key":"through however","Fragments":["isn't"]},{"Key":"however isn't","Fragments":["the"]},{"Key":"statement ```year","Fragments":["%"]},{"Key":"0``` unnecessary?","Fragments":["Won't"]},{"Key":"unnecessary? Won't","Fragments":["```year"]},{"Key":"Won't ```year","Fragments":["%"]},{"Key":"% 400```","Fragments":["catch"]},{"Key":"400``` catch","Fragments":["all"]},{"Key":"catch all","Fragments":["the","the"]},{"Key":"necessary leap","Fragments":["years?"]},{"Key":"The \"public","Fragments":["Year"]},{"Key":"\"public Year","Fragments":["()\""]},{"Key":"Year ()\"","Fragments":["part"]},{"Key":"()\" part","Fragments":["seems"]},{"Key":"part seems","Fragments":["wholly"]},{"Key":"seems wholly","Fragments":["unnecessary."]},{"Key":"wholly unnecessary.","Fragments":["The"]},{"Key":"unnecessary. The","Fragments":["year"]},{"Key":"year going","Fragments":["into"]},{"Key":"Gabriel, how","Fragments":["did"]},{"Key":"get on","Fragments":["with"]},{"Key":"on with","Fragments":["NUnit?","C#."]},{"Key":"with NUnit?","Fragments":["Year"]},{"Key":"NUnit? Year","Fragments":["class"]},{"Key":"class looks","Fragments":["good"]},{"Key":"good now","Fragments":["and"]},{"Key":"you've probably","Fragments":["got"]},{"Key":"probably got","Fragments":["a"]},{"Key":"more classes","Fragments":["than"]},{"Key":"classes than","Fragments":["you"]},{"Key":"need now.","Fragments":["The"]},{"Key":"now. The","Fragments":["method"]},{"Key":"the Check","Fragments":["class"]},{"Key":"Check class","Fragments":["could"]},{"Key":"into Main","Fragments":["as"]},{"Key":"only concern","Fragments":["is","is"]},{"Key":"is dealing","Fragments":["with"]},{"Key":"the Console.","Fragments":["The"]},{"Key":"Console. The","Fragments":["Write"]},{"Key":"The Write","Fragments":["class"]},{"Key":"Write class","Fragments":["could"]},{"Key":"removed as","Fragments":["well"]},{"Key":"well and","Fragments":["the","will"]},{"Key":"string values","Fragments":["just"]},{"Key":"just held","Fragments":["as"]},{"Key":"held as","Fragments":["consts"]},{"Key":"as consts","Fragments":["in"]},{"Key":"consts in","Fragments":["the"]},{"Key":"Main class,","Fragments":["or"]},{"Key":"at introducing","Fragments":["a"]},{"Key":"introducing a","Fragments":["resource"]},{"Key":"a resource","Fragments":["file"]},{"Key":"resource file","Fragments":["(though"]},{"Key":"file (though","Fragments":["that's"]},{"Key":"(though that's","Fragments":["probably"]},{"Key":"I'd look","Fragments":["to"]},{"Key":"the Input","Fragments":["class"]},{"Key":"Input class","Fragments":["static"]},{"Key":"it's method","Fragments":["static"]},{"Key":"method static","Fragments":["and"]},{"Key":"and accept","Fragments":["the"]},{"Key":"accept the","Fragments":["input"]},{"Key":"a parameter.","Fragments":["Also,"]},{"Key":"parameter. Also,","Fragments":["looking"]},{"Key":"within IsValid","Fragments":["it"]},{"Key":"IsValid it","Fragments":["doesn't"]},{"Key":"the isInt","Fragments":["variable"]},{"Key":"isInt variable","Fragments":["is"]},{"Key":"actually needed.","Fragments":["If"]},{"Key":"needed. If","Fragments":["the"]},{"Key":"the TryParse","Fragments":["fails,"]},{"Key":"TryParse fails,","Fragments":["year"]},{"Key":"fails, year","Fragments":["will"]},{"Key":"year will","Fragments":["be"]},{"Key":"be 0","Fragments":["at"]},{"Key":"0 at","Fragments":["which"]},{"Key":"at which","Fragments":["point","you"]},{"Key":"which point","Fragments":["it"]},{"Key":"the gregorian","Fragments":["year"]},{"Key":"gregorian year","Fragments":["check."]},{"Key":"year check.","Fragments":["Thinking"]},{"Key":"check. Thinking","Fragments":["about"]},{"Key":"it, that","Fragments":["method"]},{"Key":"really concerned","Fragments":["about"]},{"Key":"is gregorian,","Fragments":["so"]},{"Key":"gregorian, so","Fragments":["could"]},{"Key":"so could","Fragments":["be"]},{"Key":"be another","Fragments":["static"]},{"Key":"another static","Fragments":["method"]},{"Key":"class -","Fragments":["Year.IsGregorian(int"]},{"Key":"- Year.IsGregorian(int","Fragments":["year)."]},{"Key":"Year.IsGregorian(int year).","Fragments":["Down"]},{"Key":"year). Down","Fragments":["to"]},{"Key":"Down to","Fragments":["2"]},{"Key":"2 classes","Fragments":["then."]},{"Key":"make all","Fragments":["schedule","classes","Onxxx.()"]},{"Key":"all schedule","Fragments":["types"]},{"Key":"types calculate","Fragments":["off"]},{"Key":"calculate off","Fragments":["a"]},{"Key":"single method()","Fragments":["(I"]},{"Key":"method() (I","Fragments":["did"]},{"Key":"it first","Fragments":["time"]},{"Key":"find regex","Fragments":["to"]},{"Key":"be necessary","Fragments":["for","in"]},{"Key":"problem. As","Fragments":["long"]},{"Key":"string matches","Fragments":["its"]},{"Key":"matches its","Fragments":["ToUpper"]},{"Key":"its ToUpper","Fragments":["counterpart"]},{"Key":"ToUpper counterpart","Fragments":["and"]},{"Key":"counterpart and","Fragments":["does"]},{"Key":"and does","Fragments":["not","not"]},{"Key":"match its","Fragments":["ToLower"]},{"Key":"its ToLower","Fragments":["counterpart,","counterpart."]},{"Key":"ToLower counterpart,","Fragments":["it"]},{"Key":"counterpart, it","Fragments":["is"]},{"Key":"is yelling.","Fragments":["Of"]},{"Key":"yelling. Of","Fragments":["course,"]},{"Key":"matches both,","Fragments":["it"]},{"Key":"both, it","Fragments":["has"]},{"Key":"no letters","Fragments":["in"]},{"Key":"Oh, I","Fragments":["just","see,"]},{"Key":"realized why","Fragments":["it"]},{"Key":"automatically made","Fragments":["that."]},{"Key":"made that.","Fragments":["Most"]},{"Key":"that. Most","Fragments":["of"]},{"Key":"Most of","Fragments":["my"]},{"Key":"from Unity,","Fragments":["so"]},{"Key":"Unity, so","Fragments":["it's"]},{"Key":"What that","Fragments":["function"]},{"Key":"function was","Fragments":["is"]},{"Key":"was is","Fragments":["a"]},{"Key":"a constructor,","Fragments":["used"]},{"Key":"constructor, used","Fragments":["for"]},{"Key":"making instances","Fragments":["of"]},{"Key":"class. Since","Fragments":["we're"]},{"Key":"Since we're","Fragments":["using"]},{"Key":"we're using","Fragments":["a"]},{"Key":"static function,","Fragments":["it's"]},{"Key":"function, it's","Fragments":["unnecessary."]},{"Key":"yeah, for","Fragments":["sure."]},{"Key":"for sure.","Fragments":["I"]},{"Key":"sure. I","Fragments":["had"]},{"Key":"had left","Fragments":["it"]},{"Key":"was automatically","Fragments":["included"]},{"Key":"automatically included","Fragments":["when"]},{"Key":"included when","Fragments":["I"]},{"Key":"project. Unfamiliar","Fragments":["with"]},{"Key":"Unfamiliar with","Fragments":["c#"]},{"Key":"with c#","Fragments":["I"]},{"Key":"c# I","Fragments":["wasn't"]},{"Key":"really sure","Fragments":["if"]},{"Key":"if serves","Fragments":["some"]},{"Key":"serves some","Fragments":["sort"]},{"Key":"of function?","Fragments":["In"]},{"Key":"function? In","Fragments":["the"]},{"Key":"future I'll","Fragments":["most"]},{"Key":"I'll most","Fragments":["likely"]},{"Key":"likely delete","Fragments":["things"]},{"Key":"delete things","Fragments":["that"]},{"Key":"that seem","Fragments":["out"]},{"Key":"seem out","Fragments":["of","of"]},{"Key":"of place","Fragments":["and","for"]},{"Key":"of error.","Fragments":["Thanks"]},{"Key":"error. Thanks","Fragments":["for"]},{"Key":"the heads","Fragments":["up."]},{"Key":"Yeah. To","Fragments":["better"]},{"Key":"To better","Fragments":["help"]},{"Key":"better help","Fragments":["you"]},{"Key":"you understand","Fragments":["that,"]},{"Key":"understand that,","Fragments":["just"]},{"Key":"that, just","Fragments":["recognize"]},{"Key":"just recognize","Fragments":["that"]},{"Key":"recognize that","Fragments":["Year","magic"]},{"Key":"Year there","Fragments":["is"]},{"Key":"function. Just","Fragments":["like"]},{"Key":"Just like","Fragments":["the"]},{"Key":"IsLeap you","Fragments":["made."]},{"Key":"made. The","Fragments":["parentheses"]},{"Key":"parentheses at","Fragments":["the"]},{"Key":"end show","Fragments":["that."]},{"Key":"show that.","Fragments":["I"]},{"Key":"was called,","Fragments":["as"]},{"Key":"called, as","Fragments":["it"]},{"Key":"return anything,","Fragments":["and"]},{"Key":"anything, and","Fragments":["doesn't"]},{"Key":"actually specify","Fragments":["what"]},{"Key":"specify what","Fragments":["it"]},{"Key":"return. (Note","Fragments":["that"]},{"Key":"(Note that","Fragments":["the"]},{"Key":"made is","Fragments":["a"]},{"Key":"static bool;","Fragments":["it"]},{"Key":"bool; it","Fragments":["returns"]},{"Key":" Odd.","Fragments":["I"]},{"Key":"Odd. I","Fragments":["didn't"]},{"Key":"any issues","Fragments":["with"]},{"Key":"test. The","Fragments":["only"]},{"Key":"only major","Fragments":["difference"]},{"Key":"major difference","Fragments":["I"]},{"Key":"difference I","Fragments":["can"]},{"Key":"I specified","Fragments":["the"]},{"Key":"specified the","Fragments":["things"]},{"Key":"things found","Fragments":["in"]},{"Key":"found in","Fragments":["foreach,"]},{"Key":"in foreach,","Fragments":["rather"]},{"Key":"foreach, rather","Fragments":["than"]},{"Key":" Am","Fragments":["I"]},{"Key":"one who","Fragments":["had"]},{"Key":"who had","Fragments":["to"]},{"Key":"to alter","Fragments":["the"]},{"Key":"alter the","Fragments":["test"]},{"Key":"get anything","Fragments":["to"]},{"Key":"pass? It","Fragments":["was"]},{"Key":"was failing","Fragments":["even"]},{"Key":"failing even","Fragments":["when"]},{"Key":"dictionaries were","Fragments":["exactly"]},{"Key":"were exactly","Fragments":["the"]},{"Key":"same when","Fragments":["I"]},{"Key":"the debugger.","Fragments":["If"]},{"Key":"debugger. If","Fragments":["you"]},{"Key":"can't win,","Fragments":["change"]},{"Key":"win, change","Fragments":["the"]},{"Key":"rules right?","Fragments":[":)"]},{"Key":"elegant way","Fragments":["I've"]},{"Key":"way I've","Fragments":["found"]},{"Key":"actually uppercase","Fragments":["rather"]},{"Key":"uppercase rather","Fragments":["than"]},{"Key":"just non-letter","Fragments":["characters,"]},{"Key":"non-letter characters,","Fragments":["is"]},{"Key":"characters, is","Fragments":["to"]},{"Key":"it ToUpper","Fragments":["counterpart,"]},{"Key":"ToUpper counterpart,","Fragments":["and"]},{"Key":"counterpart, and","Fragments":["then"]},{"Key":"is NOT","Fragments":["equivalent"]},{"Key":"NOT equivalent","Fragments":["to"]},{"Key":"ToLower counterpart.","Fragments":["In"]},{"Key":"counterpart. In","Fragments":["essence:"]},{"Key":"In essence:","Fragments":["(p_string.ToUpper()"]},{"Key":"essence: (p_string.ToUpper()","Fragments":["=="]},{"Key":"(p_string.ToUpper() ==","Fragments":["p_string"]},{"Key":"== p_string","Fragments":["\u0026\u0026"]},{"Key":"p_string \u0026\u0026","Fragments":["p_string.ToLower"]},{"Key":"\u0026\u0026 p_string.ToLower","Fragments":["!="]},{"Key":"p_string.ToLower !=","Fragments":["p_string)."]},{"Key":"Though you","Fragments":["may"]},{"Key":"dictionary returned","Fragments":["doesn't"]},{"Key":"returned doesn't","Fragments":["need"]},{"Key":"named 'expected'.","Fragments":["You"]},{"Key":"'expected'. You","Fragments":["probably"]},{"Key":"probably realize","Fragments":["that"]},{"Key":"and did","Fragments":["that","not"]},{"Key":"stylistic choice,","Fragments":["but"]},{"Key":"choice, but","Fragments":["in"]},{"Key":"you didn't,","Fragments":["it's"]},{"Key":"didn't, it's","Fragments":["worth"]},{"Key":"it's worth","Fragments":["mentioning."]},{"Key":"don't much","Fragments":["like"]},{"Key":"like giving","Fragments":["variables"]},{"Key":"giving variables","Fragments":["one-character"]},{"Key":"variables one-character","Fragments":["names,"]},{"Key":"one-character names,","Fragments":["such"]},{"Key":"names, such","Fragments":["as"]},{"Key":"as string","Fragments":["s,"]},{"Key":"string s,","Fragments":["though"]},{"Key":"s, though","Fragments":["you"]},{"Key":"might disagree","Fragments":["with"]},{"Key":"with me","Fragments":["on"]},{"Key":"me on","Fragments":["that","something"]},{"Key":"loop actually","Fragments":["says"]},{"Key":"actually says","Fragments":["what"]},{"Key":"going through,","Fragments":["like"]},{"Key":"through, like","Fragments":["'string"]},{"Key":"like 'string","Fragments":["letter'."]},{"Key":"The 2d","Fragments":["array"]},{"Key":"2d array","Fragments":["is"]},{"Key":"interesting but","Fragments":["over"]},{"Key":"but over","Fragments":["complex"]},{"Key":"over complex","Fragments":["here."]},{"Key":"complex here.","Fragments":["A"]},{"Key":"here. A","Fragments":["dictionary"]},{"Key":"dictionary makes","Fragments":["more"]},{"Key":"sense but","Fragments":["then"]},{"Key":"Your comment","Fragments":["is"]},{"Key":"comment is","Fragments":["odd","no","nice."]},{"Key":"odd since","Fragments":["you","shorter"]},{"Key":"methods here","Fragments":["nor"]},{"Key":"here nor","Fragments":["create"]},{"Key":"nor create","Fragments":["any!"]},{"Key":"interesting challenge","Fragments":["because","is"]},{"Key":"challenge because","Fragments":["there"]},{"Key":"are many","Fragments":["algorithms"]},{"Key":"many algorithms","Fragments":["to"]},{"Key":"algorithms to","Fragments":["do"]},{"Key":"so thumbs","Fragments":["up"]},{"Key":"thumbs up","Fragments":["for"]},{"Key":"up for","Fragments":["adding","linq"]},{"Key":"generic type","Fragments":["conversion?","in","name,","could"]},{"Key":"type conversion?","Fragments":["No"]},{"Key":"conversion? No","Fragments":["I"]},{"Key":"No I","Fragments":["don't","don't."]},{"Key":"using just","Fragments":["one",".AddSeconds."]},{"Key":"one counter","Fragments":["for"]},{"Key":"counter for","Fragments":["both"]},{"Key":"both word","Fragments":["and"]},{"Key":"number counter,","Fragments":["I"]},{"Key":"counter, I","Fragments":["am"]},{"Key":"read. Also","Fragments":["```var"]},{"Key":"Also ```var","Fragments":["lastWord"]},{"Key":"```var lastWord","Fragments":["="]},{"Key":"lastWord =","Fragments":["Words.Last"]},{"Key":"= Words.Last","Fragments":["()```"]},{"Key":"Words.Last ()```","Fragments":["was"]},{"Key":"()``` was","Fragments":["a"]},{"Key":"a cheat","Fragments":["on"]},{"Key":"cheat on","Fragments":["my"]},{"Key":"my behalf,","Fragments":["it"]},{"Key":"behalf, it","Fragments":["was"]},{"Key":"originally below","Fragments":["```Words.RemoveAll```"]},{"Key":"below ```Words.RemoveAll```","Fragments":["however"]},{"Key":"```Words.RemoveAll``` however","Fragments":["I"]},{"Key":"having issues","Fragments":["with","with"]},{"Key":"with Silence","Fragments":["Test"]},{"Key":"Silence Test","Fragments":["as"]},{"Key":"Test as","Fragments":["the"]},{"Key":"List was","Fragments":["empty"]},{"Key":"empty due","Fragments":["to"]},{"Key":"List originally","Fragments":["being"]},{"Key":"originally being","Fragments":["full"]},{"Key":"being full","Fragments":["of"]},{"Key":"full of","Fragments":["spaces"]},{"Key":"of spaces","Fragments":["which"]},{"Key":"spaces which","Fragments":["were"]},{"Key":"which were","Fragments":["then"]},{"Key":"then removed","Fragments":["so"]},{"Key":"removed so","Fragments":["when"]},{"Key":"looked the","Fragments":["last"]},{"Key":"last word","Fragments":["it","\"\""]},{"Key":"word it","Fragments":["couldn't"]},{"Key":"it couldn't","Fragments":["find"]},{"Key":"find any","Fragments":["and","differences"]},{"Key":"any and","Fragments":["was"]},{"Key":"was throwing","Fragments":["a"]},{"Key":"throwing a","Fragments":["exception"]},{"Key":"a exception","Fragments":["as"]},{"Key":"exception as","Fragments":["the"]},{"Key":"list was","Fragments":["empty."]},{"Key":"was empty.","Fragments":["So"]},{"Key":"moved it","Fragments":["above","to","to"]},{"Key":"it above","Fragments":["to"]},{"Key":"above to","Fragments":["pick"]},{"Key":"word \"\"","Fragments":["before"]},{"Key":"\"\" before","Fragments":["I"]},{"Key":"I emptied","Fragments":["the"]},{"Key":"emptied the","Fragments":["array!"]},{"Key":"the array!","Fragments":["I"]},{"Key":"array! I","Fragments":["probably"]},{"Key":"have caught","Fragments":["it"]},{"Key":"it or","Fragments":["checked"]},{"Key":"or checked","Fragments":["for"]},{"Key":"if shouting","Fragments":["is"]},{"Key":"bit overcomplicated.","Fragments":["I"]},{"Key":"overcomplicated. I","Fragments":["think"]},{"Key":"think creating","Fragments":["a"]},{"Key":"a enum","Fragments":["for"]},{"Key":"enum for","Fragments":["\"Says\""]},{"Key":"for \"Says\"","Fragments":["might"]},{"Key":"\"Says\" might","Fragments":["have"]},{"Key":"have helped","Fragments":["improve"]},{"Key":"helped improve","Fragments":["readability"]},{"Key":"readability at","Fragments":["the","cost"]},{"Key":"have complicated","Fragments":["as"]},{"Key":"complicated as","Fragments":["well!"]},{"Key":"statements but","Fragments":["felt"]},{"Key":"but felt","Fragments":["that"]},{"Key":"already doing","Fragments":["the"]},{"Key":"the calculations;","Fragments":["Why"]},{"Key":"calculations; Why","Fragments":["not"]},{"Key":"the bools","Fragments":["that"]},{"Key":"bools that","Fragments":["unittest"]},{"Key":"that unittest","Fragments":["was"]},{"Key":"unittest was","Fragments":["looking"]},{"Key":"looking for.No","Fragments":["need"]},{"Key":"for.No need","Fragments":["to"]},{"Key":"what happened.","Fragments":["I"]},{"Key":"happened. I","Fragments":["put"]},{"Key":"test back","Fragments":["in"]},{"Key":"back in","Fragments":["and"]},{"Key":"and now","Fragments":["it","it","I"]},{"Key":"You just","Fragments":["need"]},{"Key":"second generic","Fragments":["type"]},{"Key":"in addition","Fragments":["to"]},{"Key":"to T,","Fragments":["such"]},{"Key":"T, such","Fragments":["as"]},{"Key":"a T2.","Fragments":["It's"]},{"Key":"T2. It's","Fragments":["not"]},{"Key":"that difficult,","Fragments":["you're"]},{"Key":"difficult, you're","Fragments":["most"]},{"Key":"you're most","Fragments":["of"]},{"Key":"there now.","Fragments":["You"]},{"Key":"now. You","Fragments":["can"]},{"Key":"at my","Fragments":["submission","solution"]},{"Key":"submission for","Fragments":["an"]},{"Key":"example if","Fragments":["you"]},{"Key":" Hash","Fragments":["matching"]},{"Key":"Hash matching","Fragments":["seems"]},{"Key":"matching seems","Fragments":["overkill"]},{"Key":"seems overkill","Fragments":["here,"]},{"Key":"overkill here,","Fragments":["re","there"]},{"Key":"here, re","Fragments":["premature"]},{"Key":"re premature","Fragments":["optimisation"]},{"Key":"premature optimisation","Fragments":["and"]},{"Key":"optimisation and","Fragments":["makes"]},{"Key":"makes this","Fragments":["less","less"]},{"Key":"is nowhere","Fragments":["near"]},{"Key":"nowhere near","Fragments":["finished."]},{"Key":"am having","Fragments":["problems"]},{"Key":"problems getting","Fragments":["the"]},{"Key":"match what","Fragments":["the"]},{"Key":"is expecting.","Fragments":["It"]},{"Key":"expecting. It","Fragments":["works"]},{"Key":"works until","Fragments":["I"]},{"Key":"I reach","Fragments":["Detect_multiple_anagrams()"]},{"Key":"reach Detect_multiple_anagrams()","Fragments":["-"]},{"Key":"Detect_multiple_anagrams() -","Fragments":["The"]},{"Key":"- The","Fragments":["method"]},{"Key":"is matching","Fragments":["the"]},{"Key":"required strings","Fragments":["so"]},{"Key":"strings so","Fragments":["I"]},{"Key":"also pretty","Fragments":["sure"]},{"Key":"wrong type.","Fragments":["It"]},{"Key":"type. It","Fragments":["also"]},{"Key":"also gave","Fragments":["me"]},{"Key":"am submitting","Fragments":["at"]},{"Key":"submitting at","Fragments":["this"]},{"Key":"this stage","Fragments":["so","of"]},{"Key":"stage so","Fragments":["that"]},{"Key":"that time","Fragments":["isn't"]},{"Key":"time isn't","Fragments":["wasted"]},{"Key":"isn't wasted","Fragments":["on"]},{"Key":"wasted on","Fragments":["helping"]},{"Key":"on helping","Fragments":["me"]},{"Key":"on something","Fragments":["that"]},{"Key":"problems working","Fragments":["out"]},{"Key":"to format","Fragments":["the"]},{"Key":"format the","Fragments":["output"]},{"Key":"output as","Fragments":["the"]},{"Key":"class expects.","Fragments":["I"]},{"Key":"expects. I","Fragments":["am"]},{"Key":"Edit: It","Fragments":["appears"]},{"Key":"I'm forgetting","Fragments":["to"]},{"Key":"forgetting to","Fragments":["rebuild","add"]},{"Key":"to rebuild","Fragments":["before"]},{"Key":"rebuild before","Fragments":["running"]},{"Key":"before running","Fragments":["each"]},{"Key":"running each","Fragments":["new"]},{"Key":"each new","Fragments":["test."]},{"Key":"Thanks, delve.","Fragments":["I"]},{"Key":"delve. I","Fragments":["cleaned"]},{"Key":"up based","Fragments":["on"]},{"Key":"- Generate","Fragments":["name"]},{"Key":"Generate name","Fragments":["in"]},{"Key":" first","Fragments":["char"]},{"Key":"first char","Fragments":["prefex"]},{"Key":"then random","Fragments":["number"]},{"Key":"number with","Fragments":["length","the"]},{"Key":"with length","Fragments":["of"]},{"Key":"Random chars","Fragments":["are"]},{"Key":"are generated","Fragments":["by"]},{"Key":"generated by","Fragments":["their"]},{"Key":"their ASCII","Fragments":["code."]},{"Key":"many comments,","Fragments":["what"]},{"Key":"comments, what","Fragments":["do"]},{"Key":"all primefactors?","Fragments":["There"]},{"Key":"primefactors? There","Fragments":["are"]},{"Key":"3 factors","Fragments":["that"]},{"Key":"factors that","Fragments":["is"]},{"Key":"is intressting","Fragments":["us"]},{"Key":"intressting us","Fragments":["here:"]},{"Key":"us here:","Fragments":["3,"]},{"Key":"here: 3,","Fragments":["5"]},{"Key":"3, 5","Fragments":["and","})"]},{"Key":"and 7.","Fragments":["How"]},{"Key":"7. How","Fragments":["do"]},{"Key":"we find","Fragments":["them?"]},{"Key":"tried this","Fragments":["but"]},{"Key":"also your","Fragments":["version:"]},{"Key":"0; value","Fragments":["\u003e"]},{"Key":"\u0026\u0026 i","Fragments":["\u003c"]},{"Key":"\u003c Numbers.Keys.Count;","Fragments":["i++)"]},{"Key":"var key","Fragments":["="]},{"Key":"var ruleNumber","Fragments":["="]},{"Key":"ruleNumber =","Fragments":["Numbers[key];"]},{"Key":" romanText.Append(string.Concat(Enumerable.Repeat(ruleNumber,","Fragments":["count)));"]},{"Key":"added 2888","Fragments":["but"]},{"Key":"2888 but","Fragments":["yours"]},{"Key":"yours still","Fragments":["slower"]},{"Key":"still slower","Fragments":["by","than"]},{"Key":"slower by","Fragments":["2"]},{"Key":"2 ms.","Fragments":["This"]},{"Key":"ms. This","Fragments":["is"]},{"Key":"is micomanaging","Fragments":["because"]},{"Key":"micomanaging because","Fragments":["we"]},{"Key":"we never","Fragments":["get"]},{"Key":"value grater","Fragments":["than"]},{"Key":"grater than","Fragments":["3000."]},{"Key":"than 3000.","Fragments":["I"]},{"Key":"3000. I","Fragments":["think"]},{"Key":"think enumeration","Fragments":["steals"]},{"Key":"enumeration steals","Fragments":["time"]},{"Key":"steals time","Fragments":["by"]},{"Key":"by allocation","Fragments":["execution"]},{"Key":"allocation execution","Fragments":["time."]},{"Key":"input, really","Fragments":["nice"]},{"Key":"have someone","Fragments":["that"]},{"Key":"that give","Fragments":["good"]},{"Key":"give good","Fragments":["comments"]},{"Key":"good comments","Fragments":["@zoe"]},{"Key":"comments @zoe","Fragments":[":)"]},{"Key":"the submit","Fragments":["function"]},{"Key":"submit function","Fragments":["tells"]},{"Key":"function tells","Fragments":["you"]},{"Key":"you -","Fragments":["am"]},{"Key":"- am","Fragments":["I"]},{"Key":"I doing","Fragments":["this"]},{"Key":" C:\\code\\exercism\\csharp\u003eexercism","Fragments":["submit"]},{"Key":"C:\\code\\exercism\\csharp\u003eexercism submit","Fragments":["csharp/leap/ExercismCSharp/ExercismCShar"]},{"Key":" 2014/10/28","Fragments":["07:06:16"]},{"Key":"2014/10/28 07:06:16","Fragments":["Please"]},{"Key":"07:06:16 Please","Fragments":["submit"]},{"Key":"Please submit","Fragments":["the"]},{"Key":"the solution,","Fragments":["not"]},{"Key":"solution, not","Fragments":["the"]},{"Key":"and cleanly","Fragments":["written."]},{"Key":"cleanly written.","Fragments":["A"]},{"Key":"written. A","Fragments":["comment"]},{"Key":"A comment","Fragments":["on"]},{"Key":"does briefly","Fragments":["would"]},{"Key":"briefly would","Fragments":["enhance"]},{"Key":"would enhance","Fragments":["the"]},{"Key":"enhance the","Fragments":["readability."]},{"Key":"the readability.","Fragments":["Only"]},{"Key":"Only other","Fragments":["thing"]},{"Key":"is handling","Fragments":["duplicate"]},{"Key":"handling duplicate","Fragments":["key"]},{"Key":"duplicate key","Fragments":["excpetions","values","is"]},{"Key":"key excpetions","Fragments":["(i.e.,"]},{"Key":"excpetions (i.e.,","Fragments":["what"]},{"Key":"(i.e., what","Fragments":["happens"]},{"Key":"happens if/when","Fragments":["newDic.Add"]},{"Key":"if/when newDic.Add","Fragments":["is"]},{"Key":"newDic.Add is","Fragments":["called"]},{"Key":"called twice","Fragments":["with"]},{"Key":"twice with","Fragments":["the"]},{"Key":"same new","Fragments":["key"]},{"Key":"key value)?","Fragments":["I"]},{"Key":"value)? I","Fragments":["think"]},{"Key":"input data","Fragments":["is"]},{"Key":"is dirty,","Fragments":["but"]},{"Key":"dirty, but","Fragments":["it"]},{"Key":"Oh, forgot","Fragments":["to"]},{"Key":"to mention,","Fragments":["the"]},{"Key":"mention, the","Fragments":["other"]},{"Key":"other requirement","Fragments":["that"]},{"Key":"requirement that","Fragments":["needs"]},{"Key":"that needs","Fragments":["attention"]},{"Key":"needs attention","Fragments":["is"]},{"Key":"attention is","Fragments":["converting"]},{"Key":"is converting","Fragments":["the"]},{"Key":"letters to","Fragments":["lower"]},{"Key":"new data","Fragments":["structure."]},{"Key":"data structure.","Fragments":["I'm","This"]},{"Key":"structure. I'm","Fragments":["not"]},{"Key":"Thanks, really","Fragments":["should"]},{"Key":"should get","Fragments":["a"]},{"Key":"dictionary plugin","Fragments":["for"]},{"Key":"plugin for","Fragments":["my"]},{"Key":"my IDE.","Fragments":["See"]},{"Key":"IDE. See","Fragments":["iteration"]},{"Key":"See iteration","Fragments":["2"]},{"Key":"iteration 2","Fragments":["for","where","converting"]},{"Key":"2 for","Fragments":["correction."]},{"Key":"pretty good!","Fragments":["Could"]},{"Key":"good! Could","Fragments":["use"]},{"Key":"few sparse","Fragments":["comments"]},{"Key":"sparse comments","Fragments":["to"]},{"Key":"what's happening.","Fragments":["Handling"]},{"Key":"happening. Handling","Fragments":["potential"]},{"Key":"Handling potential","Fragments":["duplicate"]},{"Key":"potential duplicate","Fragments":["key"]},{"Key":"key values","Fragments":["in","hard"]},{"Key":"the newValues","Fragments":["dictionary"]},{"Key":"newValues dictionary","Fragments":["may"]},{"Key":"dictionary may","Fragments":["be"]},{"Key":"worth another","Fragments":["iteration."]},{"Key":"pretty minor","Fragments":["thing,"]},{"Key":"minor thing,","Fragments":["but"]},{"Key":"seen Hungarian","Fragments":["variable"]},{"Key":"Hungarian variable","Fragments":["naming"]},{"Key":"naming used","Fragments":["in"]},{"Key":"C# much","Fragments":["at"]},{"Key":"much at","Fragments":["all,"]},{"Key":"all, pretty","Fragments":["much"]},{"Key":"much never.","Fragments":["Camel"]},{"Key":"never. Camel","Fragments":["casing"]},{"Key":"Camel casing","Fragments":["is"]},{"Key":"casing is","Fragments":["preferred"]},{"Key":"is preferred","Fragments":["for"]},{"Key":"preferred for","Fragments":["parameters"]},{"Key":"parameters (and","Fragments":["local/instance"]},{"Key":"(and local/instance","Fragments":["variables),"]},{"Key":"local/instance variables),","Fragments":["and"]},{"Key":"variables), and","Fragments":["Pascal"]},{"Key":"and Pascal","Fragments":["notation"]},{"Key":"Pascal notation","Fragments":["is"]},{"Key":"notation is","Fragments":["used"]},{"Key":"most other","Fragments":["things"]},{"Key":"things (e.g.,","Fragments":["public"]},{"Key":"(e.g., public","Fragments":["methods)."]},{"Key":" Intriguing.","Fragments":["Sometimes"]},{"Key":"Intriguing. Sometimes","Fragments":["inner"]},{"Key":"Sometimes inner","Fragments":["loops"]},{"Key":"inner loops","Fragments":["are"]},{"Key":"are worth","Fragments":["it,"]},{"Key":"worth it,","Fragments":["I"]},{"Key":"I guess.","Fragments":[":)"]},{"Key":" Anybody","Fragments":["have"]},{"Key":"Anybody have","Fragments":["time"]},{"Key":"to nitpick?","Fragments":["If"]},{"Key":"nitpick? If","Fragments":["not,"]},{"Key":"not, I'm","Fragments":["gonna"]},{"Key":"move on","Fragments":["to"]},{"Key":"First all","Fragments":["possible"]},{"Key":"all possible","Fragments":["candidates"]},{"Key":"possible candidates","Fragments":["of"]},{"Key":"candidates of","Fragments":["month"]},{"Key":"of month","Fragments":["are","each"]},{"Key":"month are","Fragments":["calculated"]},{"Key":"are calculated","Fragments":["by"]},{"Key":"calculated by","Fragments":["given","EarthYearInSeconds."]},{"Key":"by given","Fragments":["day","factor"]},{"Key":" Starting","Fragments":["from"]},{"Key":"Starting from","Fragments":["first"]},{"Key":"from first","Fragments":["of"]},{"Key":"of day","Fragments":["of"]},{"Key":"month each","Fragments":["day"]},{"Key":"possible candidate","Fragments":["and"]},{"Key":"candidate and","Fragments":["added"]},{"Key":"This candidates","Fragments":["are"]},{"Key":"candidates are","Fragments":["used"]},{"Key":"determine correct","Fragments":["date"]},{"Key":"correct date","Fragments":["by"]},{"Key":"by schedule","Fragments":["information."]},{"Key":"First clean","Fragments":["input"]},{"Key":"clean input","Fragments":["from"]},{"Key":"from special","Fragments":["characters."]},{"Key":"Run checks","Fragments":["given"]},{"Key":"checks given","Fragments":["by"]},{"Key":"given by","Fragments":["requirements."]},{"Key":" Format","Fragments":["if"]},{"Key":"Format if","Fragments":["necessary."]},{"Key":"For ToString","Fragments":["method"]},{"Key":"ToString method","Fragments":["a"]},{"Key":"method a","Fragments":["simple"]},{"Key":"string format","Fragments":["is"]},{"Key":" lol.","Fragments":["completely"]},{"Key":"lol. completely","Fragments":["wrong."]},{"Key":" much","Fragments":["better!"]},{"Key":"one class","Fragments":["exposing","approach"]},{"Key":"class exposing","Fragments":["only"]},{"Key":"exposing only","Fragments":["the"]},{"Key":"and Match","Fragments":["method","method"]},{"Key":"for maximum","Fragments":["hiding"]},{"Key":"maximum hiding","Fragments":["of"]},{"Key":"hiding of","Fragments":["internals."]},{"Key":"of internals.","Fragments":["I"]},{"Key":"internals. I","Fragments":["originally"]},{"Key":"class descending","Fragments":["from"]},{"Key":"descending from","Fragments":["Dictionary\u003cchar,"]},{"Key":"from Dictionary\u003cchar,","Fragments":["int\u003e"]},{"Key":"int\u003e with","Fragments":["an"]},{"Key":"an Equals","Fragments":["override"]},{"Key":"Equals override","Fragments":["method"]},{"Key":"override method","Fragments":["to"]},{"Key":"keys and","Fragments":["values","values"]},{"Key":"and values","Fragments":["of"]},{"Key":"the dictionaries,","Fragments":["but"]},{"Key":"dictionaries, but","Fragments":["elected"]},{"Key":"but elected","Fragments":["the"]},{"Key":"elected the","Fragments":["one"]},{"Key":"class approach","Fragments":["for"]},{"Key":"for simplicity.","Fragments":["I"]},{"Key":"simplicity. I","Fragments":["added"]},{"Key":"of features","Fragments":["that"]},{"Key":"features that","Fragments":["were"]},{"Key":"were not","Fragments":["explicitly","supposed","supposed","supposed","supposed"]},{"Key":"not explicitly","Fragments":["called"]},{"Key":"explicitly called","Fragments":["for:"]},{"Key":"called for:","Fragments":["(1)"]},{"Key":"for: (1)","Fragments":["throw"]},{"Key":"(1) throw","Fragments":["an"]},{"Key":"ArgumentException from","Fragments":["within"]},{"Key":"input word","Fragments":["string"]},{"Key":"word string","Fragments":["is"]},{"Key":"null, empty","Fragments":["or"]},{"Key":"empty or","Fragments":["whitespace,"]},{"Key":"or whitespace,","Fragments":["(2)"]},{"Key":"whitespace, (2)","Fragments":["sort"]},{"Key":"(2) sort","Fragments":["the"]},{"Key":"method output","Fragments":["(a"]},{"Key":"output (a","Fragments":["few"]},{"Key":"(a few","Fragments":["of"]},{"Key":"cases fail","Fragments":["otherwise)."]},{"Key":"fail otherwise).","Fragments":["I"]},{"Key":"otherwise). I","Fragments":["was"]},{"Key":"was tempted","Fragments":["to"]},{"Key":"add code","Fragments":["to"]},{"Key":"out duplicate","Fragments":["matching","code."]},{"Key":"duplicate matching","Fragments":["anagrams"]},{"Key":"matching anagrams","Fragments":["but"]},{"Key":"anagrams but","Fragments":["ended"]},{"Key":"but ended","Fragments":["up"]},{"Key":"up leaving","Fragments":["that"]},{"Key":"leaving that","Fragments":["out."]},{"Key":"that out.","Fragments":["In"]},{"Key":"out. In","Fragments":["general,"]},{"Key":"In general,","Fragments":["I","it"]},{"Key":"general, I","Fragments":["tried"]},{"Key":"limit looping","Fragments":["by"]},{"Key":"looping by","Fragments":["using"]},{"Key":"if (true)","Fragments":["{"]},{"Key":"return ((year","Fragments":["%"]},{"Key":"!= 0))","Fragments":["||"]},{"Key":" Which,","Fragments":["I","properly"]},{"Key":"Which, I","Fragments":["think,"]},{"Key":"I think,","Fragments":["is","is","applying"]},{"Key":"think, is","Fragments":["more","the"]},{"Key":"more visual","Fragments":["appealing"]},{"Key":"are building","Fragments":["and"]},{"Key":"building and","Fragments":["returning"]},{"Key":"the nucleotideCounts","Fragments":["dictionary"]},{"Key":"nucleotideCounts dictionary","Fragments":["every"]},{"Key":"dictionary every","Fragments":["time"]},{"Key":"is requested.","Fragments":["If"]},{"Key":"requested. If","Fragments":["you"]},{"Key":"or public","Fragments":["member"]},{"Key":"public member","Fragments":["and"]},{"Key":"member and","Fragments":["just"]},{"Key":"just update","Fragments":["it","it"]},{"Key":"it changes,","Fragments":["you"]},{"Key":"changes, you","Fragments":["won't"]},{"Key":"your GetNucleotideCounts","Fragments":["method"]},{"Key":"GetNucleotideCounts method","Fragments":["-"]},{"Key":"key exists","Fragments":["in"]},{"Key":"exists in","Fragments":["your"]},{"Key":"your dictionary,","Fragments":["and"]},{"Key":"dictionary, and","Fragments":["then"]},{"Key":"then adding","Fragments":["or"]},{"Key":"adding or","Fragments":["updating"]},{"Key":"or updating","Fragments":["depending"]},{"Key":"updating depending","Fragments":["on"]},{"Key":"you find.","Fragments":["You"]},{"Key":"find. You","Fragments":["can"]},{"Key":"can express","Fragments":["that"]},{"Key":"express that","Fragments":["same"]},{"Key":"same functionality","Fragments":["by"]},{"Key":"functionality by","Fragments":["simply"]},{"Key":"simply saying","Fragments":["necleotideCounts[character]++."]},{"Key":"saying necleotideCounts[character]++.","Fragments":["That"]},{"Key":"necleotideCounts[character]++. That","Fragments":["statement"]},{"Key":"That statement","Fragments":["will"]},{"Key":"dictionary, although","Fragments":["you"]},{"Key":"may need","Fragments":["to"]},{"Key":"an assignment","Fragments":["operator"]},{"Key":"assignment operator","Fragments":["instead"]},{"Key":"a primary","Fragments":["one"]},{"Key":"primary one","Fragments":["-"]},{"Key":"one -","Fragments":["necleotideCounts[character]"]},{"Key":"- necleotideCounts[character]","Fragments":["+="]},{"Key":"necleotideCounts[character] +=","Fragments":["1;"]},{"Key":"+= 1;","Fragments":["instead"]},{"Key":"1; instead","Fragments":["of"]},{"Key":" tried","Fragments":["to"]},{"Key":"phrase outright.","Fragments":["I"]},{"Key":"outright. I","Fragments":["found"]},{"Key":"very tricky;","Fragments":["my"]},{"Key":"tricky; my","Fragments":["regex"]},{"Key":"my regex","Fragments":["needs"]},{"Key":"regex needs","Fragments":["work."]},{"Key":"needs work.","Fragments":["How"]},{"Key":"work. How","Fragments":["do"]},{"Key":"we exclude","Fragments":["the"]},{"Key":"exclude the","Fragments":["last"]},{"Key":"last apostrophe?!","Fragments":["ARG"]},{"Key":"others' solutions,","Fragments":["I"]},{"Key":"first try","Fragments":["is"]},{"Key":"try is","Fragments":["a"]},{"Key":"the nesting","Fragments":["and"]},{"Key":"and cascading","Fragments":["returns..."]},{"Key":"cascading returns...","Fragments":["so"]},{"Key":"returns... so","Fragments":["in"]},{"Key":"this attempt,","Fragments":["I"]},{"Key":"conditions up","Fragments":["a"]},{"Key":"bit (instead","Fragments":["of"]},{"Key":"using one,","Fragments":["long"]},{"Key":"one, long","Fragments":["and"]},{"Key":"and confusing","Fragments":["if)"]},{"Key":"confusing if)","Fragments":["and"]},{"Key":"if) and","Fragments":["I"]},{"Key":"prefer including","Fragments":["curly"]},{"Key":"including curly","Fragments":["braces"]},{"Key":"braces and","Fragments":["the"]},{"Key":"the elses","Fragments":["because"]},{"Key":"elses because","Fragments":["I"]},{"Key":"for human","Fragments":["eyes"]},{"Key":"human eyes","Fragments":["to"]},{"Key":"The `input.Length","Fragments":["\u003e"]},{"Key":"`input.Length \u003e","Fragments":["0`"]},{"Key":"0` condition","Fragments":["does"]},{"Key":"condition does","Fragments":["not"]},{"Key":"question `if`-statement,","Fragments":["as"]},{"Key":"`if`-statement, as","Fragments":["strings"]},{"Key":"of length","Fragments":["0"]},{"Key":"length 0","Fragments":["will"]},{"Key":"will already","Fragments":["match"]},{"Key":"already match","Fragments":["`string.IsNullOrWhiteSpace`."]},{"Key":"indeed possible","Fragments":["to"]},{"Key":"without regexes.","Fragments":["Let's"]},{"Key":"regexes. Let's","Fragments":["look"]},{"Key":"Let's look","Fragments":["at"]},{"Key":"1. Empty","Fragments":["strings:"]},{"Key":"Empty strings:","Fragments":["the"]},{"Key":"strings: the","Fragments":["most"]},{"Key":"the `string.IsNullOrWhiteSpace`","Fragments":["method.","call","to"]},{"Key":"2. Ends","Fragments":["with"]},{"Key":"Ends with","Fragments":["a"]},{"Key":"question mark:","Fragments":["just"]},{"Key":"mark: just","Fragments":["call"]},{"Key":"call `EndsWith(\"?\")`","Fragments":["on"]},{"Key":"`EndsWith(\"?\")` on","Fragments":["the"]},{"Key":"3. Checking","Fragments":["to"]},{"Key":"Checking to","Fragments":["see"]},{"Key":"uppercase can","Fragments":["be"]},{"Key":"by comparing","Fragments":["the","sentence"]},{"Key":"the uppercased","Fragments":["string"]},{"Key":"uppercased string","Fragments":["with"]},{"Key":"normal string.","Fragments":["If"]},{"Key":"are equal,","Fragments":["the"]},{"Key":"equal, the","Fragments":["normal"]},{"Key":"string must","Fragments":["also"]},{"Key":"in uppercase.","Fragments":["You"]},{"Key":"uppercase. You","Fragments":["can"]},{"Key":"the `ToUpperInvariant()`","Fragments":["method"]},{"Key":"`ToUpperInvariant()` method","Fragments":["on"]},{"Key":"Simple conversion","Fragments":["from"]},{"Key":"conversion from","Fragments":["old"]},{"Key":"from old","Fragments":["structure"]},{"Key":"old structure","Fragments":["to"]},{"Key":"consider yelling,","Fragments":["I"]},{"Key":"yelling, I","Fragments":["tried"]},{"Key":"functionality flexible","Fragments":["enough"]},{"Key":"flexible enough","Fragments":["so"]},{"Key":"enough so","Fragments":["that"]},{"Key":"definition needs","Fragments":["to"]},{"Key":"assignments in","Fragments":["lines"]},{"Key":"in lines","Fragments":["7"]},{"Key":"and 8.","Fragments":["The"]},{"Key":"8. The","Fragments":["inner"]},{"Key":"inner ```foreach```","Fragments":["can"]},{"Key":"```foreach``` can","Fragments":["reference"]},{"Key":"Dictionary directly:","Fragments":["for"]},{"Key":"directly: for","Fragments":["```letterslist```"]},{"Key":"for ```letterslist```","Fragments":["in"]},{"Key":"```letterslist``` in","Fragments":["line"]},{"Key":"line 9","Fragments":["substitute"]},{"Key":"9 substitute","Fragments":["```keyValuePair.Value```,"]},{"Key":"substitute ```keyValuePair.Value```,","Fragments":["and"]},{"Key":"```keyValuePair.Value```, and","Fragments":["for"]},{"Key":"for ```score```","Fragments":["in"]},{"Key":"```score``` in","Fragments":["line"]},{"Key":"10 substitute","Fragments":["```keyValuePair.Key```"]},{"Key":"Then as","Fragments":["you've"]},{"Key":"as you've","Fragments":["only"]},{"Key":"you've only","Fragments":["got"]},{"Key":"only got","Fragments":["one"]},{"Key":"got one","Fragments":["line"]},{"Key":"each ```foreach```","Fragments":["you"]},{"Key":"```foreach``` you","Fragments":["can"]},{"Key":"can leave","Fragments":["out","off"]},{"Key":"braces. This","Fragments":["makes"]},{"Key":"for cleaner","Fragments":["looking"]},{"Key":"cleaner looking","Fragments":["code."]},{"Key":"the ```Dictionary[key]","Fragments":["="]},{"Key":"```Dictionary[key] =","Fragments":["value```"]},{"Key":"= value```","Fragments":["syntax"]},{"Key":"value``` syntax","Fragments":["to"]},{"Key":"syntax to","Fragments":["add"]},{"Key":"add items","Fragments":["to"]},{"Key":"items to","Fragments":["the","Take."]},{"Key":"return leaves","Fragments":["open"]},{"Key":"leaves open","Fragments":["the"]},{"Key":"open the","Fragments":["possibility","brace"]},{"Key":"of overwriting","Fragments":["the"]},{"Key":"overwriting the","Fragments":["value"]},{"Key":"is added.","Fragments":["This"]},{"Key":"added. This","Fragments":["could"]},{"Key":"could lead","Fragments":["to"]},{"Key":"to problems","Fragments":["so"]},{"Key":"the ```Dictionary.add(key,","Fragments":["value)```"]},{"Key":"```Dictionary.add(key, value)```","Fragments":["syntax"]},{"Key":"value)``` syntax","Fragments":["so"]},{"Key":"syntax so","Fragments":["as"]},{"Key":"so as","Fragments":["to"]},{"Key":"return NucleotideCounts[inputNucleotide]","Fragments":["in"]},{"Key":"NucleotideCounts[inputNucleotide] in","Fragments":["Count,"]},{"Key":"in Count,","Fragments":["why"]},{"Key":"Count, why","Fragments":["create"]},{"Key":"why create","Fragments":["a","a"]},{"Key":"variable you","Fragments":["have"]},{"Key":"not other","Fragments":["use"]},{"Key":"Surely NucleotideCount","Fragments":["should"]},{"Key":"NucleotideCount should","Fragments":["be"]},{"Key":"be epxosed","Fragments":["as"]},{"Key":"epxosed as","Fragments":["a"]},{"Key":"a porperty","Fragments":["not"]},{"Key":"porperty not","Fragments":["a"]},{"Key":"a TryCatch","Fragments":["block"]},{"Key":"TryCatch block","Fragments":["in"]},{"Key":"Count when","Fragments":["you"]},{"Key":"can test","Fragments":["for"]},{"Key":"key without","Fragments":["doing"]},{"Key":"without doing","Fragments":["so?"]},{"Key":"haven't replied","Fragments":["in"]},{"Key":"replied in","Fragments":["a"]},{"Key":"a while.","Fragments":["Last"]},{"Key":"while. Last","Fragments":["couple"]},{"Key":"Last couple","Fragments":["weeks"]},{"Key":"weeks at","Fragments":["work"]},{"Key":"at work","Fragments":["have"]},{"Key":"work have","Fragments":["been"]},{"Key":"been really","Fragments":["busy."]},{"Key":"really busy.","Fragments":["Haven't"]},{"Key":"busy. Haven't","Fragments":["quite"]},{"Key":"Haven't quite","Fragments":["figured"]},{"Key":"quite figured","Fragments":["out"]},{"Key":"whole Nunit","Fragments":["process"]},{"Key":"Nunit process","Fragments":["because"]},{"Key":"process because","Fragments":["apparently"]},{"Key":"can't install","Fragments":["the"]},{"Key":"NuGet extension","Fragments":["on"]},{"Key":"extension on","Fragments":["visual"]},{"Key":"on visual","Fragments":["studio"]},{"Key":"studio 2010","Fragments":["express."]},{"Key":"2010 express.","Fragments":["I"]},{"Key":"express. I","Fragments":["think"]},{"Key":"look better","Fragments":["to","without"]},{"Key":"console functionality","Fragments":["in"]},{"Key":"in Main.","Fragments":["Since"]},{"Key":"Main. Since","Fragments":["I've"]},{"Key":"Since I've","Fragments":["been"]},{"Key":"been sticking","Fragments":["with"]},{"Key":"sticking with","Fragments":["this"]},{"Key":"this console","Fragments":["UI"]},{"Key":"console UI","Fragments":["approach"]},{"Key":"UI approach","Fragments":["I"]},{"Key":"user might","Fragments":["slip"]},{"Key":"might slip","Fragments":["in"]},{"Key":"slip in","Fragments":["some"]},{"Key":"some invalid","Fragments":["characters."]},{"Key":"characters. Also","Fragments":["exploring"]},{"Key":"Also exploring","Fragments":["with"]},{"Key":"exploring with","Fragments":["some"]},{"Key":"management by","Fragments":["using"]},{"Key":"using 16bit","Fragments":["integers."]},{"Key":"16bit integers.","Fragments":["Thanks"]},{"Key":"integers. Thanks","Fragments":["for"]},{"Key":"Hmm interesting.","Fragments":["One"]},{"Key":"interesting. One","Fragments":["the"]},{"Key":"One the","Fragments":["one"]},{"Key":"one hand","Fragments":["I"]},{"Key":"hand I","Fragments":["like"]},{"Key":"other I","Fragments":["am"]},{"Key":"am still","Fragments":["seeing"]},{"Key":"still seeing","Fragments":["an"]},{"Key":"unnecessary test","Fragments":["(for"]},{"Key":"test (for","Fragments":["even)"]},{"Key":"(for even)","Fragments":["in"]},{"Key":"even) in","Fragments":["each"]},{"Key":"each step","Fragments":["of"]},{"Key":"step of","Fragments":["the"]},{"Key":"loop. and","Fragments":["you"]},{"Key":"can and,","Fragments":["IMHO,"]},{"Key":"and, IMHO,","Fragments":["should"]},{"Key":"IMHO, should","Fragments":["avoid"]},{"Key":"My logic","Fragments":["is"]},{"Key":"is structured","Fragments":["so"]},{"Key":"structured so","Fragments":["that"]},{"Key":"most specific","Fragments":["conditions","case:","case:","case:"]},{"Key":"specific conditions","Fragments":["are"]},{"Key":"are hit","Fragments":["first."]},{"Key":"A leap","Fragments":["year","year"]},{"Key":"specific case:","Fragments":["If","If","The"]},{"Key":"case: If","Fragments":["the","the"]},{"Key":"true even","Fragments":["when"]},{"Key":"next most","Fragments":["specific","specific"]},{"Key":"but divisible","Fragments":["by"]},{"Key":"100 then","Fragments":["it's"]},{"Key":"case: The","Fragments":["year","year"]},{"Key":"most general","Fragments":["case:"]},{"Key":"general case:","Fragments":["The"]},{"Key":"often frowned","Fragments":["upon,"]},{"Key":"frowned upon,","Fragments":["but"]},{"Key":"upon, but","Fragments":["I"]},{"Key":"the effect","Fragments":["on"]},{"Key":"effect on","Fragments":["readability"]},{"Key":"it had","Fragments":["in","me","been"]},{"Key":" Realised","Fragments":["the"]},{"Key":"Realised the","Fragments":["previous"]},{"Key":"iterations could","Fragments":["be"]},{"Key":"simplified much","Fragments":["further!"]},{"Key":" Loop","Fragments":["up"]},{"Key":"Loop up","Fragments":["to"]},{"Key":"to given","Fragments":["limit","birthday"]},{"Key":"given limit","Fragments":["and"]},{"Key":"limit and","Fragments":["execute"]},{"Key":"execute a","Fragments":["IsMultiple"]},{"Key":"a IsMultiple","Fragments":["check"]},{"Key":"IsMultiple check","Fragments":["for"]},{"Key":"If true","Fragments":["increase"]},{"Key":"true increase","Fragments":["sum"]},{"Key":"increase sum","Fragments":["by"]},{"Key":"sum by","Fragments":["current"]},{"Key":"by current","Fragments":["value"]},{"Key":"worries Gabriel,","Fragments":["glad"]},{"Key":"Gabriel, glad","Fragments":["you've"]},{"Key":"glad you've","Fragments":["come"]},{"Key":"you've come","Fragments":["back"]},{"Key":"another iteration;","Fragments":["I"]},{"Key":"iteration; I","Fragments":["was"]},{"Key":"was worried","Fragments":["I'd"]},{"Key":"worried I'd","Fragments":["nitpicked"]},{"Key":"I'd nitpicked","Fragments":["too"]},{"Key":"nitpicked too","Fragments":["much!"]},{"Key":"too much!","Fragments":[":)"]},{"Key":"shame about","Fragments":["not"]},{"Key":"NUnit package","Fragments":["installed"]},{"Key":"package installed","Fragments":["as"]},{"Key":"installed as","Fragments":["TDD"]},{"Key":"as TDD","Fragments":["is"]},{"Key":"to grips","Fragments":["with."]},{"Key":"grips with.","Fragments":["Don't"]},{"Key":"with. Don't","Fragments":["know"]},{"Key":"if you'd","Fragments":["have"]},{"Key":"more joy","Fragments":["with"]},{"Key":"later versions","Fragments":["of"]},{"Key":"of VS","Fragments":["Express."]},{"Key":"think you've","Fragments":["just"]},{"Key":"you've just","Fragments":["about"]},{"Key":"about nailed","Fragments":["it"]},{"Key":"nailed it","Fragments":["now."]},{"Key":"now. Just","Fragments":["a"]},{"Key":"year has","Fragments":["to"]},{"Key":"a Gregorian","Fragments":["year"]},{"Key":"Gregorian year","Fragments":["so"]},{"Key":"although you've","Fragments":["got"]},{"Key":"the IsGregorian","Fragments":["check","and"]},{"Key":"IsGregorian check","Fragments":["within"]},{"Key":"check within","Fragments":["the"]},{"Key":"Main method,","Fragments":["it"]},{"Key":"the Year.IsLeap()","Fragments":["method."]},{"Key":"Year.IsLeap() method.","Fragments":["By"]},{"Key":"method. By","Fragments":["having"]},{"Key":"By having","Fragments":["the"]},{"Key":"methods separate,","Fragments":["you"]},{"Key":"separate, you","Fragments":["could"]},{"Key":"output different","Fragments":["error"]},{"Key":"different error","Fragments":["messages"]},{"Key":"error messages","Fragments":["if"]},{"Key":"messages if","Fragments":["you"]},{"Key":"you wanted,","Fragments":["though"]},{"Key":"wanted, though","Fragments":["again"]},{"Key":"though again","Fragments":["in"]},{"Key":"this scenario","Fragments":["it's"]},{"Key":"scenario it's","Fragments":["probably"]},{"Key":"IsGregorian and","Fragments":["IsLeap"]},{"Key":"IsLeap methods,","Fragments":["the"]},{"Key":"methods, the","Fragments":["else"]},{"Key":"are technically","Fragments":["redundant"]},{"Key":"redundant i.e.","Fragments":["you"]},{"Key":"i.e. you","Fragments":["could"]},{"Key":"else and","Fragments":["just"]},{"Key":"the event","Fragments":["that"]},{"Key":"event that","Fragments":["the"]},{"Key":" Towards","Fragments":["the"]},{"Key":"Towards the","Fragments":["end"]},{"Key":"Main when","Fragments":["you"]},{"Key":"assign Console.Readline","Fragments":["to"]},{"Key":"Console.Readline to","Fragments":["answer"]},{"Key":"to answer","Fragments":["and"]},{"Key":"answer and","Fragments":["then","just"]},{"Key":"assign answer.ToUpper()","Fragments":["back"]},{"Key":"answer.ToUpper() back","Fragments":["to"]},{"Key":"to answer,","Fragments":["you"]},{"Key":"answer, you","Fragments":["could"]},{"Key":"- string","Fragments":["answer"]},{"Key":"= Console.ReadLine().ToUpper()","Fragments":["(unless"]},{"Key":"Console.ReadLine().ToUpper() (unless","Fragments":["that"]},{"Key":"(unless that","Fragments":["causes"]},{"Key":"that causes","Fragments":["a"]},{"Key":"causes a","Fragments":["problem"]},{"Key":"user doesn't","Fragments":["enter"]},{"Key":"doesn't enter","Fragments":["anything"]},{"Key":"enter anything","Fragments":["and"]},{"Key":"just presses","Fragments":["enter)."]},{"Key":"Finally, as","Fragments":["answer"]},{"Key":"as answer","Fragments":["is"]},{"Key":"upper case,","Fragments":["the"]},{"Key":"checks both","Fragments":["need"]},{"Key":"both need","Fragments":["to"]},{"Key":"case as","Fragments":["well","counting"]},{"Key":"well i.e.","Fragments":["answer"]},{"Key":"i.e. answer","Fragments":["will"]},{"Key":"answer will","Fragments":["never"]},{"Key":"be equal","Fragments":["to"]},{"Key":"My tests","Fragments":["fail"]},{"Key":"tests fail","Fragments":["probably"]},{"Key":"fail probably","Fragments":["because"]},{"Key":"didn't copy","Fragments":["all"]},{"Key":"copy all","Fragments":["of","the"]},{"Key":"only changed","Fragments":["my"]},{"Key":"use `Enumerable.Range()`.","Fragments":["My"]},{"Key":"`Enumerable.Range()`. My","Fragments":["bad,"]},{"Key":"feedback. Improving","Fragments":["readability"]},{"Key":"Improving readability","Fragments":["is"]},{"Key":"is important.","Fragments":["I","(If"]},{"Key":"important. I","Fragments":["will"]},{"Key":"on implementing","Fragments":["your"]},{"Key":"first exercism!","Fragments":["I"]},{"Key":"exercism! I","Fragments":["finally"]},{"Key":"finally got","Fragments":["it"]},{"Key":"to work!","Fragments":["*"]},{"Key":"work! *","Fragments":["*happy"]},{"Key":"* *happy","Fragments":["dance*"]},{"Key":"*happy dance*","Fragments":["*"]},{"Key":"of completing","Fragments":["this"]},{"Key":"completing this","Fragments":["exercise,"]},{"Key":"was most","Fragments":["logical..."]},{"Key":"looking forward","Fragments":["to","to"]},{"Key":"to anyone's","Fragments":["thoughts"]},{"Key":"anyone's thoughts","Fragments":["on"]},{"Key":"Small nitpick","Fragments":["here"]},{"Key":"nitpick here","Fragments":["but"]},{"Key":"can technically","Fragments":["leave"]},{"Key":"technically leave","Fragments":["out"]},{"Key":"'else' and","Fragments":["instead"]},{"Key":"return false.","Fragments":["It"]},{"Key":"false. It","Fragments":["will"]},{"Key":"only hit","Fragments":["that"]},{"Key":"hit that","Fragments":["point"]},{"Key":"point if","Fragments":["the"]},{"Key":"'if' condition","Fragments":["evaluates"]},{"Key":"a multi-line","Fragments":["approach,"]},{"Key":"multi-line approach,","Fragments":["it"]},{"Key":"approach, it","Fragments":["really"]},{"Key":"readability that's","Fragments":["lost"]},{"Key":"that's lost","Fragments":["when"]},{"Key":"lost when","Fragments":["solution's"]},{"Key":"when solution's","Fragments":["are"]},{"Key":"solution's are","Fragments":["crammed"]},{"Key":"are crammed","Fragments":["onto"]},{"Key":"crammed onto","Fragments":["one"]},{"Key":"onto one","Fragments":["line.","existing"]},{"Key":" Inverting","Fragments":["some"]},{"Key":"Inverting some","Fragments":["of"]},{"Key":"readability even","Fragments":["further"]},{"Key":"First calculate","Fragments":["number"]},{"Key":"Just add","Fragments":["days"]},{"Key":"add days","Fragments":["to"]},{"Key":"given birthday","Fragments":["using"]},{"Key":"birthday using","Fragments":["framework"]},{"Key":"using framework","Fragments":["functionality"]},{"Key":"framework functionality","Fragments":["DateTime.AddDays."]},{"Key":"not enjoy","Fragments":["this"]},{"Key":"enjoy this","Fragments":["and"]},{"Key":"got pretty","Fragments":["annoyed"]},{"Key":"pretty annoyed","Fragments":["with"]},{"Key":"annoyed with","Fragments":["hence"]},{"Key":"with hence","Fragments":["it"]},{"Key":"hence it","Fragments":["being"]},{"Key":"little ugly","Fragments":["and"]},{"Key":"ugly and","Fragments":["not"]},{"Key":"taken that","Fragments":["line"]},{"Key":"line too","Fragments":["literally,"]},{"Key":"too literally,","Fragments":["but"]},{"Key":"literally, but","Fragments":["who"]},{"Key":"but who","Fragments":["am"]},{"Key":"who am","Fragments":["I"]},{"Key":"to say.","Fragments":["I"]},{"Key":"say. I","Fragments":["believe"]},{"Key":"(or even","Fragments":["a","overrwite"]},{"Key":"single method)","Fragments":["that"]},{"Key":"method) that","Fragments":["will"]},{"Key":"return whether","Fragments":["or","the"]},{"Key":"given year","Fragments":["is"]},{"Key":"clever algorithm","Fragments":["to"]},{"Key":"find anagrams","Fragments":[":-)."]},{"Key":"anagrams :-).","Fragments":["I"]},{"Key":":-). I","Fragments":["will","would"]},{"Key":"probably steal","Fragments":["it."]},{"Key":"That `p_string`","Fragments":["parameter"]},{"Key":"`p_string` parameter","Fragments":["should"]},{"Key":"parameter should","Fragments":["really"]},{"Key":"different name.","Fragments":["Looks"]},{"Key":"name. Looks","Fragments":["good,"]},{"Key":"looking through","Fragments":["some","other"]},{"Key":"the answers,","Fragments":["I"]},{"Key":"took inspiration","Fragments":["from"]},{"Key":"inspiration from","Fragments":["@eliezer"]},{"Key":"from @eliezer","Fragments":["and"]},{"Key":"@eliezer and","Fragments":["some"]},{"Key":" *I","Fragments":["wanted"]},{"Key":"*I wanted","Fragments":["to"]},{"Key":"keep only","Fragments":["one"]},{"Key":"one instance","Fragments":["of"]},{"Key":"the ValidNucleotides","Fragments":["array"]},{"Key":"ValidNucleotides array","Fragments":["to"]},{"Key":" *Validation","Fragments":["on"]},{"Key":"*Validation on","Fragments":["initialisation"]},{"Key":"on initialisation","Fragments":["and"]},{"Key":"initialisation and","Fragments":["on"]},{"Key":"and on","Fragments":["Count"]},{"Key":"on Count","Fragments":["prevents"]},{"Key":"Count prevents","Fragments":["\"Swallowed\""]},{"Key":"prevents \"Swallowed\"","Fragments":["errors."]},{"Key":" *Initialisation","Fragments":["of"]},{"Key":"*Initialisation of","Fragments":["Nucleotides"]},{"Key":"of Nucleotides","Fragments":["dictionary"]},{"Key":"Nucleotides dictionary","Fragments":["in"]},{"Key":"dictionary in","Fragments":["the"]},{"Key":"constructor make","Fragments":["sense"]},{"Key":"future extensibility","Fragments":["(easier"]},{"Key":"extensibility (easier","Fragments":["to"]},{"Key":"access a","Fragments":["dictionary"]},{"Key":"dictionary than","Fragments":["a"]},{"Key":"char array)","Fragments":["and"]},{"Key":"array) and","Fragments":["makes"]},{"Key":"function methods","Fragments":["behave"]},{"Key":"methods behave","Fragments":["more"]},{"Key":"behave more","Fragments":["like"]},{"Key":"like true","Fragments":["functions."]},{"Key":" #Consider","Fragments":["putting"]},{"Key":"#Consider putting","Fragments":["initialisation"]},{"Key":"putting initialisation","Fragments":["logic"]},{"Key":"initialisation logic","Fragments":["into"]},{"Key":"into own","Fragments":["method?"]},{"Key":"Moved gregorian","Fragments":["check"]},{"Key":"gregorian check","Fragments":["into"]},{"Key":"into IsLeap","Fragments":["method"]},{"Key":"which won't","Fragments":["give"]},{"Key":"won't give","Fragments":["the"]},{"Key":"the invalid","Fragments":["message"]},{"Key":"invalid message","Fragments":["if"]},{"Key":"message if","Fragments":["not"]},{"Key":"not gregorian","Fragments":["but"]},{"Key":"gregorian but","Fragments":["I"]},{"Key":"more self","Fragments":["explanatory"]},{"Key":"explanatory in","Fragments":["this"]},{"Key":"this situation,","Fragments":["especially"]},{"Key":"situation, especially","Fragments":["with"]},{"Key":"the introductory","Fragments":["string."]},{"Key":"introductory string.","Fragments":["Found"]},{"Key":"string. Found","Fragments":["that"]},{"Key":"Found that","Fragments":["ReadLine().ToUpper()"]},{"Key":"that ReadLine().ToUpper()","Fragments":["works"]},{"Key":"ReadLine().ToUpper() works","Fragments":["just"]},{"Key":"cause issue","Fragments":["with"]},{"Key":"with special","Fragments":["keys"]},{"Key":"special keys","Fragments":["because"]},{"Key":"keys because","Fragments":["anything"]},{"Key":"because anything","Fragments":["not"]},{"Key":"to \"Y\"","Fragments":["or"]},{"Key":"\"Y\" or","Fragments":["\"YES\""]},{"Key":"or \"YES\"","Fragments":["will"]},{"Key":"\"YES\" will","Fragments":["terminate"]},{"Key":"terminate the","Fragments":["continue"]},{"Key":"the continue","Fragments":["loop."]},{"Key":"Used ReadOnlyDictionary","Fragments":["type"]},{"Key":"ReadOnlyDictionary type","Fragments":["as"]},{"Key":"as @trevor","Fragments":["did,"]},{"Key":"@trevor did,","Fragments":["didnt"]},{"Key":"did, didnt","Fragments":["know"]},{"Key":"didnt know","Fragments":["that"]},{"Key":"that existed!","Fragments":["Cool!"]},{"Key":"just approached","Fragments":["each"]},{"Key":"approached each","Fragments":["test"]},{"Key":"and wrote","Fragments":["a"]},{"Key":"logical step","Fragments":["that"]},{"Key":"step that","Fragments":["solved"]},{"Key":"solved that","Fragments":["case."]},{"Key":"that case.","Fragments":["I"]},{"Key":"efficient solution","Fragments":["but"]},{"Key":"solution but","Fragments":["it","two","I","that","you"]},{"Key":"it attempts","Fragments":["to"]},{"Key":"attempts to","Fragments":["catch"]},{"Key":" No,","Fragments":["like","I","actually"]},{"Key":"No, like","Fragments":["I"]},{"Key":"before, I'm","Fragments":["actually"]},{"Key":"actually happy","Fragments":["with"]},{"Key":"the nitpicks","Fragments":["because"]},{"Key":"nitpicks because","Fragments":["it's"]},{"Key":"it's helping","Fragments":["me"]},{"Key":"me learn.","Fragments":["Just"]},{"Key":"learn. Just","Fragments":["been"]},{"Key":"Just been","Fragments":["lagging"]},{"Key":"been lagging","Fragments":["because"]},{"Key":"lagging because","Fragments":["my"]},{"Key":"been fried","Fragments":["from"]},{"Key":"fried from","Fragments":["some"]},{"Key":"some busy","Fragments":["weeks"]},{"Key":"busy weeks","Fragments":["in"]},{"Key":"weeks in","Fragments":["tech"]},{"Key":"in tech","Fragments":["support"]},{"Key":"tech support","Fragments":[":D."]},{"Key":"support :D.","Fragments":["Speaking"]},{"Key":":D. Speaking","Fragments":["of"]},{"Key":"Speaking of","Fragments":["deficient"]},{"Key":"of deficient","Fragments":["brain"]},{"Key":"deficient brain","Fragments":["power,"]},{"Key":"brain power,","Fragments":["I"]},{"Key":"power, I","Fragments":["totally"]},{"Key":"totally should","Fragments":["have"]},{"Key":"have spotted","Fragments":["the"]},{"Key":"spotted the","Fragments":["\"Yes\""]},{"Key":"the \"Yes\"","Fragments":["instead"]},{"Key":"\"Yes\" instead","Fragments":["of"]},{"Key":"of \"YES\"","Fragments":["as"]},{"Key":"\"YES\" as","Fragments":["well"]},{"Key":"as concatenating","Fragments":["the"]},{"Key":"concatenating the","Fragments":["ReadLine"]},{"Key":"the ReadLine","Fragments":["and"]},{"Key":"ReadLine and","Fragments":["ToUpper"]},{"Key":"and ToUpper","Fragments":["methods,"]},{"Key":"ToUpper methods,","Fragments":["but"]},{"Key":"learned and","Fragments":["hopefully"]},{"Key":"and hopefully","Fragments":["won't"]},{"Key":"hopefully won't","Fragments":["be"]},{"Key":"making those","Fragments":["kinds"]},{"Key":"those kinds","Fragments":["of"]},{"Key":"of mistakes","Fragments":["again."]},{"Key":"mistakes again.","Fragments":["As"]},{"Key":"again. As","Fragments":["for"]},{"Key":"for skipping","Fragments":["the"]},{"Key":"\"else\" and","Fragments":["just"]},{"Key":"in IsLeap,","Fragments":["I"]},{"Key":"IsLeap, I","Fragments":["was"]},{"Key":"was curious","Fragments":["in"]},{"Key":"past as","Fragments":["to"]},{"Key":"to whether","Fragments":["this"]},{"Key":"correct syntax","Fragments":["but"]},{"Key":"but must","Fragments":["have"]},{"Key":"for bringing","Fragments":["that"]},{"Key":"bringing that","Fragments":["to"]},{"Key":"to light.","Fragments":["Next"]},{"Key":"light. Next","Fragments":["iteration"]},{"Key":"Next iteration","Fragments":["to"]},{"Key":"come very","Fragments":["soon."]},{"Key":"it okay","Fragments":["to"]},{"Key":"to interpret","Fragments":["the"]},{"Key":"interpret the","Fragments":["verbal"]},{"Key":"the verbal","Fragments":["requirements"]},{"Key":"verbal requirements","Fragments":["that"]},{"Key":"requirements that","Fragments":["it"]},{"Key":"should solve","Fragments":["for"]},{"Key":"doing \"Nucleotide","Fragments":["Count/Work\""]},{"Key":"\"Nucleotide Count/Work\"","Fragments":["in"]},{"Key":"Count/Work\" in","Fragments":["the"]},{"Key":"the constructor?","Fragments":["My"]},{"Key":"constructor? My","Fragments":["thoughts"]},{"Key":"My thoughts","Fragments":["were"]},{"Key":"thoughts were","Fragments":["that,"]},{"Key":"were that,","Fragments":["only"]},{"Key":"that, only","Fragments":["when"]},{"Key":"method Count","Fragments":["or"]},{"Key":"Count or","Fragments":["NucleotideCounts"]},{"Key":"or NucleotideCounts","Fragments":["is"]},{"Key":"called should","Fragments":["any"]},{"Key":"should any","Fragments":["work"]},{"Key":"any work","Fragments":["be"]},{"Key":"work be","Fragments":["done."]},{"Key":"done. Wouldnt","Fragments":["calling"]},{"Key":"Wouldnt calling","Fragments":["the"]},{"Key":"constructor now","Fragments":["have"]},{"Key":"now have","Fragments":["an"]},{"Key":"an processing","Fragments":["overhead"]},{"Key":"processing overhead","Fragments":["attached?"]},{"Key":"modify your","Fragments":["code"]},{"Key":"nesting. Having","Fragments":["multiple"]},{"Key":"multiple nested","Fragments":["`if`s"]},{"Key":"nested `if`s","Fragments":["makes"]},{"Key":"`if`s makes","Fragments":["it"]},{"Key":"to reason","Fragments":["about"]},{"Key":"reason about","Fragments":["it."]},{"Key":"My concern","Fragments":["is"]},{"Key":"if DNA()","Fragments":["is"]},{"Key":"DNA() is","Fragments":["initialised"]},{"Key":"is initialised","Fragments":["with"]},{"Key":"initialised with","Fragments":["the","incorrect"]},{"Key":"the incorrect","Fragments":["input","data."]},{"Key":"incorrect input","Fragments":["eg"]},{"Key":"input eg","Fragments":["\"X',"]},{"Key":"eg \"X',","Fragments":["the"]},{"Key":"\"X', the","Fragments":["NucleotideCounts"]},{"Key":"NucleotideCounts wont","Fragments":["throw"]},{"Key":"wont throw","Fragments":["an"]},{"Key":"If i","Fragments":["think"]},{"Key":"what _should_","Fragments":["be"]},{"Key":"_should_ be","Fragments":["expected;"]},{"Key":"be expected;","Fragments":["an"]},{"Key":"expected; an","Fragments":["error"]},{"Key":"error when","Fragments":["initialising","trying"]},{"Key":"when initialising","Fragments":["the"]},{"Key":"initialising the","Fragments":["class"]},{"Key":"do operations","Fragments":["on"]},{"Key":"incorrect data.","Fragments":["What"]},{"Key":"data. What","Fragments":["is"]},{"Key":"handle errors","Fragments":["in"]},{"Key":"this case?","Fragments":["Should"]},{"Key":"case? Should","Fragments":["the"]},{"Key":"class be","Fragments":["able"]},{"Key":"be initialised","Fragments":["with"]},{"Key":"with incorrect","Fragments":["data"]},{"Key":"incorrect data","Fragments":["or"]},{"Key":"data or","Fragments":["should"]},{"Key":"calls be","Fragments":["responsible"]},{"Key":"be responsible","Fragments":["for"]},{"Key":"responsible for","Fragments":["validation?"]},{"Key":" Case","Fragments":["for"]},{"Key":"Case for","Fragments":["not"]},{"Key":"not allowing","Fragments":["incorrect"]},{"Key":"allowing incorrect","Fragments":["incorrect"]},{"Key":"incorrect incorrect","Fragments":["initialisation:"]},{"Key":" *Method","Fragments":["calls"]},{"Key":"*Method calls","Fragments":["can"]},{"Key":"calls can","Fragments":["safely"]},{"Key":"can safely","Fragments":["be","be"]},{"Key":"safely be","Fragments":["called","removed."]},{"Key":"called knowing","Fragments":["that"]},{"Key":"knowing that","Fragments":["the"]},{"Key":"validation has","Fragments":["occurred"]},{"Key":"has occurred","Fragments":["previously."]},{"Key":"are laid","Fragments":["out"]},{"Key":"out however.","Fragments":["Any"]},{"Key":"however. Any","Fragments":["thoughts?"]},{"Key":"what should","Fragments":["not","the"]},{"Key":"not happen","Fragments":["is","in"]},{"Key":"happen is","Fragments":["\"swallowing"]},{"Key":"is \"swallowing","Fragments":["of"]},{"Key":"\"swallowing of","Fragments":["errors\""]},{"Key":"of errors\"","Fragments":["so"]},{"Key":"errors\" so","Fragments":["in"]},{"Key":"property only","Fragments":["returns"]},{"Key":"only returns","Fragments":["correct"]},{"Key":"returns correct","Fragments":["data,"]},{"Key":"correct data,","Fragments":["irrespective"]},{"Key":"data, irrespective","Fragments":["of"]},{"Key":"irrespective of","Fragments":["the"]},{"Key":"the correctness","Fragments":["of"]},{"Key":"correctness of","Fragments":["the"]},{"Key":"DNA String.","Fragments":["I"]},{"Key":"String. I","Fragments":["think"]},{"Key":"code comparing","Fragments":["if"]},{"Key":"comparing if","Fragments":["two"]},{"Key":"are anagrams.","Fragments":["Did"]},{"Key":"anagrams. Did","Fragments":["away"]},{"Key":"Did away","Fragments":["with"]},{"Key":"complicated dictionary","Fragments":["of"]},{"Key":"chars and","Fragments":["char"]},{"Key":"char counts","Fragments":["and"]},{"Key":"simple sorted","Fragments":["string."]},{"Key":"sorted string.","Fragments":["Code"]},{"Key":"string. Code","Fragments":["shrank"]},{"Key":"Code shrank","Fragments":["from"]},{"Key":"shrank from","Fragments":["101"]},{"Key":"from 101","Fragments":["to"]},{"Key":"101 to","Fragments":["68"]},{"Key":"to 68","Fragments":["lines."]},{"Key":"68 lines.","Fragments":["The"]},{"Key":"The previous","Fragments":["version"]},{"Key":"previous version","Fragments":["I"]},{"Key":"built with","Fragments":["further"]},{"Key":"with further","Fragments":["capabilities"]},{"Key":"further capabilities","Fragments":["in"]},{"Key":"capabilities in","Fragments":["mind,"]},{"Key":"mind, but","Fragments":["that"]},{"Key":"created unnecessary","Fragments":["un-asked-for"]},{"Key":"unnecessary un-asked-for","Fragments":["complexity."]},{"Key":"un-asked-for complexity.","Fragments":["This"]},{"Key":"complexity. This","Fragments":["version"]},{"Key":"This version","Fragments":["is","I"]},{"Key":"not saying","Fragments":["it's"]},{"Key":"saying it's","Fragments":["not"]},{"Key":"not okay,","Fragments":["it's"]},{"Key":"okay, it's","Fragments":["perfectly"]},{"Key":"it's perfectly","Fragments":["fine."]},{"Key":"perfectly fine.","Fragments":["It"]},{"Key":"fine. It","Fragments":["just"]},{"Key":"isn't what","Fragments":["I,"]},{"Key":"what I,","Fragments":["personally,"]},{"Key":"I, personally,","Fragments":["thought"]},{"Key":"personally, thought","Fragments":["was"]},{"Key":"was required","Fragments":["or"]},{"Key":"required or","Fragments":["even","utilized."]},{"Key":"even the","Fragments":["best"]},{"Key":"best implementation;","Fragments":["that"]},{"Key":"implementation; that","Fragments":["isn't"]},{"Key":"or wrong.","Fragments":["But"]},{"Key":"wrong. But","Fragments":["the"]},{"Key":"of \"Write","Fragments":["a"]},{"Key":"year.\" unquestionably","Fragments":["means"]},{"Key":"unquestionably means","Fragments":["any"]},{"Key":"means any","Fragments":["year."]},{"Key":"I asked","Fragments":["you"]},{"Key":"asked you","Fragments":["to"]},{"Key":"build me","Fragments":["something","a","a"]},{"Key":"me something","Fragments":["I"]},{"Key":"could sit","Fragments":["on"]},{"Key":"sit on","Fragments":["and"]},{"Key":"and gave","Fragments":["no"]},{"Key":"gave no","Fragments":["other"]},{"Key":"other requirements","Fragments":["you"]},{"Key":"requirements you","Fragments":["could"]},{"Key":"could build","Fragments":["me","me"]},{"Key":"a chair,","Fragments":["or"]},{"Key":"chair, or","Fragments":["you"]},{"Key":"a throne.","Fragments":["They"]},{"Key":"throne. They","Fragments":["all"]},{"Key":"They all","Fragments":["both"]},{"Key":"all both","Fragments":["meet"]},{"Key":"both meet","Fragments":["the"]},{"Key":"requirement but","Fragments":["in"]},{"Key":"than is","Fragments":["necessary."]},{"Key":" Again","Fragments":["this"]},{"Key":"Again this","Fragments":["is"]},{"Key":"opinion, I'm","Fragments":["not"]},{"Key":"Maybe use","Fragments":["pair"]},{"Key":"use pair","Fragments":["instead"]},{"Key":"pair instead","Fragments":["of"]},{"Key":"your var","Fragments":["name?"]},{"Key":"var name?","Fragments":["It's"]},{"Key":"name? It's","Fragments":["always"]},{"Key":"It's always","Fragments":["better"]},{"Key":"have meaningful","Fragments":["variable"]},{"Key":"meaningful variable","Fragments":["names"]},{"Key":"names when","Fragments":["you","you"]},{"Key":"me now","Fragments":["Gabriel,"]},{"Key":"now Gabriel,","Fragments":["good"]},{"Key":"Gabriel, good","Fragments":["work."]},{"Key":"luck with","Fragments":["the","the"]},{"Key":"the StringComparison.InvariantCultureIgnoreCase","Fragments":["option"]},{"Key":"StringComparison.InvariantCultureIgnoreCase option","Fragments":["before."]},{"Key":"option before.","Fragments":["Why"]},{"Key":"before. Why","Fragments":["did"]},{"Key":"line 32","Fragments":["but"]},{"Key":"32 but","Fragments":["not"]},{"Key":"time understanding","Fragments":["what"]},{"Key":"the \"Ignore_non_allergen_score_parts\"","Fragments":["test"]},{"Key":"\"Ignore_non_allergen_score_parts\" test","Fragments":["case."]},{"Key":"test case.","Fragments":["Why"]},{"Key":"case. Why","Fragments":["would"]},{"Key":"would the","Fragments":["example"]},{"Key":"example 509","Fragments":["not"]},{"Key":"509 not","Fragments":["return"]},{"Key":"class representing","Fragments":["the"]},{"Key":"the Allergens,","Fragments":["in"]},{"Key":"Allergens, in","Fragments":["the"]},{"Key":"a flags","Fragments":["enum."]},{"Key":"flags enum.","Fragments":["This"]},{"Key":"enum. This","Fragments":["cuts"]},{"Key":"This cuts","Fragments":["10"]},{"Key":"cuts 10","Fragments":["lines"]},{"Key":"10 lines","Fragments":["of"]},{"Key":"to grok","Fragments":["the"]},{"Key":"grok the","Fragments":["solution."]},{"Key":"am in","Fragments":["favor"]},{"Key":"return methods","Fragments":["when"]},{"Key":"methods when","Fragments":["they"]},{"Key":"they improve","Fragments":["readability,"]},{"Key":"improve readability,","Fragments":["which"]},{"Key":"readability, which","Fragments":["I"]},{"Key":"code. Having","Fragments":["an"]},{"Key":"return immediately","Fragments":["makes"]},{"Key":"immediately makes","Fragments":["it"]},{"Key":"clear that","Fragments":["this"]},{"Key":"method, making","Fragments":["the"]},{"Key":"flow quite","Fragments":["easy"]},{"Key":"parse when","Fragments":["the"]},{"Key":"statement are","Fragments":["all"]},{"Key":"same \"level\"","Fragments":["."]},{"Key":"way your","Fragments":["code"]},{"Key":"reads in","Fragments":["CandidateIsAnagram"]},{"Key":"in CandidateIsAnagram","Fragments":["but"]},{"Key":"CandidateIsAnagram but","Fragments":["spent"]},{"Key":"but spent","Fragments":["a"]},{"Key":"time trying","Fragments":["to"]},{"Key":"4 static","Fragments":["classes"]},{"Key":"classes were","Fragments":["for."]},{"Key":"were for.","Fragments":["Once"]},{"Key":"for. Once","Fragments":["I"]},{"Key":"Once I","Fragments":["looked"]},{"Key":"made sense,","Fragments":["but"]},{"Key":"sense, but","Fragments":["I"]},{"Key":"have probably","Fragments":["gone"]},{"Key":"agree. I","Fragments":["started"]},{"Key":"with static","Fragments":["helper","helper"]},{"Key":"helper methods,","Fragments":["then","makes"]},{"Key":"methods, then","Fragments":["I"]},{"Key":"tried the","Fragments":["static","same,"]},{"Key":"static classes.","Fragments":["They"]},{"Key":"classes. They","Fragments":["work"]},{"Key":"They work","Fragments":["better"]},{"Key":"work better","Fragments":["as"]},{"Key":"a facade","Fragments":["for"]},{"Key":"facade for","Fragments":["a"]},{"Key":"user interface","Fragments":["or"]},{"Key":"interface or","Fragments":["something"]},{"Key":"the mvc","Fragments":["controller,"]},{"Key":"mvc controller,","Fragments":["as"]},{"Key":"controller, as","Fragments":["you"]},{"Key":"write things","Fragments":["like"]},{"Key":"like `Delete.User()`,","Fragments":["`Find.Employee.ById()`,"]},{"Key":"`Delete.User()`, `Find.Employee.ById()`,","Fragments":["`Copy.All.Files()`"]},{"Key":"`Find.Employee.ById()`, `Copy.All.Files()`","Fragments":["and"]},{"Key":"`Copy.All.Files()` and","Fragments":["so"]},{"Key":"But here","Fragments":["it's"]},{"Key":"here it's","Fragments":["too"]},{"Key":"much ceremony.","Fragments":["On"]},{"Key":"ceremony. On","Fragments":["the"]},{"Key":"hand, it's","Fragments":["fun"]},{"Key":"it's fun","Fragments":["to"]},{"Key":"out new","Fragments":["things"]},{"Key":" @cora","Fragments":["Very"]},{"Key":"@cora Very","Fragments":["good"]},{"Key":"good observation.","Fragments":["I"]},{"Key":"observation. I","Fragments":["have"]},{"Key":"iteration in","Fragments":["which"]},{"Key":"have fixed","Fragments":["this"]},{"Key":"fixed this","Fragments":["and"]},{"Key":"code (hopefully)","Fragments":["more"]},{"Key":"(hopefully) more","Fragments":["self-explanatory."]},{"Key":"Main part","Fragments":["of"]},{"Key":"of SpaceAge","Fragments":["is"]},{"Key":"SpaceAge is","Fragments":["the"]},{"Key":"for calculating","Fragments":["earth"]},{"Key":"calculating earth","Fragments":["age"]},{"Key":"earth age","Fragments":["to","calculated"]},{"Key":"age to","Fragments":["a"]},{"Key":"specific planet","Fragments":["age"]},{"Key":"planet age","Fragments":["by"]},{"Key":"age by","Fragments":["given"]},{"Key":"given factor","Fragments":["(by"]},{"Key":"factor (by","Fragments":["requisites)."]},{"Key":"Base of","Fragments":["calculation"]},{"Key":"of calculation","Fragments":["is"]},{"Key":"is earth","Fragments":["age"]},{"Key":"age calculated","Fragments":["by"]},{"Key":" Calculated","Fragments":["once"]},{"Key":"Calculated once","Fragments":["per"]},{"Key":"once per","Fragments":["object."]},{"Key":"helper classes","Fragments":["with"]},{"Key":"classes with","Fragments":["static"]},{"Key":"helper methods.","Fragments":["I"]},{"Key":"of static","Fragments":["classes","methods"]},{"Key":"classes probably","Fragments":["confused"]},{"Key":"probably confused","Fragments":["more"]},{"Key":"confused more","Fragments":["than"]},{"Key":"entire song","Fragments":["is"]},{"Key":"song is","Fragments":["put"]},{"Key":" Verses","Fragments":["are"]},{"Key":"Verses are","Fragments":["accessed"]},{"Key":"accessed by","Fragments":["their"]},{"Key":"Since tests","Fragments":["are"]},{"Key":"expecting double","Fragments":["line"]},{"Key":"double line","Fragments":["breaks,"]},{"Key":"line breaks,","Fragments":["they"]},{"Key":"breaks, they","Fragments":["are"]},{"Key":"added after","Fragments":["each"]},{"Key":"after each","Fragments":["verse"]},{"Key":"verse before","Fragments":["returning"]},{"Key":" Been","Fragments":["away"]},{"Key":"Been away","Fragments":["for"]},{"Key":"Yep, you","Fragments":["are"]},{"Key":"tried compiling","Fragments":["the"]},{"Key":"compiling the","Fragments":["code."]},{"Key":"The ambiguous","Fragments":["lambda"]},{"Key":"ambiguous lambda","Fragments":["thing"]},{"Key":"lambda thing","Fragments":["for"]},{"Key":"for `Sum`is","Fragments":["something"]},{"Key":"`Sum`is something","Fragments":["that"]},{"Key":"that hasn't","Fragments":["happened"]},{"Key":"hasn't happened","Fragments":["to"]},{"Key":" Learned","Fragments":["something","about"]},{"Key":"Learned something","Fragments":["new!"]},{"Key":"all input","Fragments":["points"]},{"Key":"input points","Fragments":["are"]},{"Key":"points are","Fragments":["checked","checked"]},{"Key":"are checked","Fragments":["(greater","for"]},{"Key":"checked (greater","Fragments":["0"]},{"Key":"(greater 0","Fragments":["and"]},{"Key":"The kind","Fragments":["of"]},{"Key":"triangle is","Fragments":["initialized","scalene"]},{"Key":"is initialized","Fragments":["as"]},{"Key":"initialized as","Fragments":["scalene"]},{"Key":"as scalene","Fragments":["so"]},{"Key":"scalene so","Fragments":["we"]},{"Key":"The more","Fragments":["restrictive"]},{"Key":"more restrictive","Fragments":["kind"]},{"Key":"restrictive kind","Fragments":["is"]},{"Key":"kind is","Fragments":["equilateral,"]},{"Key":"is equilateral,","Fragments":["That"]},{"Key":"equilateral, That","Fragments":["is"]},{"Key":"this check","Fragments":["first."]},{"Key":"not true","Fragments":["the","we're"]},{"Key":"true we're","Fragments":["done"]},{"Key":"we're done","Fragments":["because"]},{"Key":"is scalene","Fragments":["and"]},{"Key":"scalene and","Fragments":["this"]},{"Key":"read better.","Fragments":["The"]},{"Key":"code `4.IsVisisibleBy(2)`","Fragments":["reads"]},{"Key":"`4.IsVisisibleBy(2)` reads","Fragments":["much"]},{"Key":"reads much","Fragments":["more"]},{"Key":"natural than","Fragments":["e.g."]},{"Key":"than e.g.","Fragments":["`Year.IsDivisibleBy(4,"]},{"Key":"e.g. `Year.IsDivisibleBy(4,","Fragments":["2)`."]},{"Key":"is pascal","Fragments":["casing"]},{"Key":"pascal casing","Fragments":["for"]},{"Key":"for member","Fragments":["variables"]},{"Key":" readonly","Fragments":["string"]},{"Key":"readonly string","Fragments":["word;"]},{"Key":"of Scrabble()","Fragments":["each"]},{"Key":"Scrabble() each","Fragments":["time"]},{"Key":"static `Score`","Fragments":["method."]},{"Key":"`Score` method.","Fragments":["If"]},{"Key":"we place","Fragments":["all"]},{"Key":"place all","Fragments":["the"]},{"Key":"calculation code","Fragments":["in"]},{"Key":"method we","Fragments":["can"]},{"Key":"can simple","Fragments":["call"]},{"Key":"simple call","Fragments":["it"]},{"Key":"it from","Fragments":["the","the"]},{"Key":"instance method.","Fragments":["Note:"]},{"Key":"method. Note:","Fragments":["One"]},{"Key":"Note: One","Fragments":["would"]},{"Key":"One would","Fragments":["also"]},{"Key":"to place","Fragments":["the"]},{"Key":"the 'cleaning'","Fragments":["code"]},{"Key":"'cleaning' code","Fragments":["in"]},{"Key":"the Score","Fragments":["method."]},{"Key":"Score method.","Fragments":["One"]},{"Key":"method. One","Fragments":["can"]},{"Key":"can argue","Fragments":["over"]},{"Key":"argue over","Fragments":["performance"]},{"Key":"over performance","Fragments":["on"]},{"Key":"performance on","Fragments":["this"]},{"Key":"this (having","Fragments":["to"]},{"Key":"(having to","Fragments":["clean"]},{"Key":"clean each","Fragments":["time"]},{"Key":"time score","Fragments":["is"]},{"Key":"is called,","Fragments":["if","the"]},{"Key":"called, if","Fragments":["it"]},{"Key":"called more","Fragments":["than"]},{"Key":"than once)","Fragments":["but"]},{"Key":"once) but","Fragments":["for"]},{"Key":"the scale","Fragments":["here"]},{"Key":"scale here","Fragments":["it"]},{"Key":"not worth","Fragments":["worrying"]},{"Key":"worth worrying","Fragments":["about"]},{"Key":"worrying about","Fragments":["and"]},{"Key":"about and","Fragments":["if"]},{"Key":"are concerned","Fragments":["at"]},{"Key":"concerned at","Fragments":["that"]},{"Key":"that level,","Fragments":["the"]},{"Key":"level, the","Fragments":["cost"]},{"Key":"new instances","Fragments":["would"]},{"Key":"instances would","Fragments":["need"]},{"Key":"be weighed","Fragments":["against"]},{"Key":"weighed against","Fragments":["the"]},{"Key":" .GroupBy(c","Fragments":["=\u003e"]},{"Key":".GroupBy(c =\u003e","Fragments":["c)"]},{"Key":" .Select(g","Fragments":["=\u003e"]},{"Key":".Select(g =\u003e","Fragments":["new"]},{"Key":"new {Letter","Fragments":["="]},{"Key":"{Letter =","Fragments":["g.Key,"]},{"Key":"= g.Key,","Fragments":["Count"]},{"Key":"g.Key, Count","Fragments":["="]},{"Key":"Count =","Fragments":["g.Count()})","group.Count()"]},{"Key":"= g.Count()})","Fragments":["//"]},{"Key":"g.Count()}) //","Fragments":["not"]},{"Key":"// not","Fragments":["necessary"]},{"Key":"anonymous object","Fragments":["it's"]},{"Key":"object it's","Fragments":["more"]},{"Key":" .Sum(a","Fragments":["=\u003e"]},{"Key":".Sum(a =\u003e","Fragments":["a.Count"]},{"Key":"=\u003e a.Count","Fragments":["*"]},{"Key":"a.Count *","Fragments":["scores.First(kv"]},{"Key":"* scores.First(kv","Fragments":["=\u003e"]},{"Key":"scores.First(kv =\u003e","Fragments":["kv.Key.Contains(a.Letter)).Value);","kv.Key.Contains(c)).Value);"]},{"Key":"bit dodgy.","Fragments":["It"]},{"Key":"dodgy. It","Fragments":["allows"]},{"Key":"It allows","Fragments":["one"]},{"Key":"allows one","Fragments":["to"]},{"Key":"of Scrabble","Fragments":["with"]},{"Key":"Scrabble with","Fragments":["a"]},{"Key":"null Word.","Fragments":["This"]},{"Key":"Word. This","Fragments":["will"]},{"Key":"cause Score","Fragments":["to"]},{"Key":"Score to","Fragments":["fail."]},{"Key":"to fail.","Fragments":["We"]},{"Key":"fail. We","Fragments":["only"]},{"Key":"We only","Fragments":["want"]},{"Key":"only want","Fragments":["a"]},{"Key":"a scrabble","Fragments":["object"]},{"Key":"scrabble object","Fragments":["to"]},{"Key":"be created","Fragments":["with"]},{"Key":"valid string","Fragments":["for"]},{"Key":"word so","Fragments":["we"]},{"Key":"var scrabble","Fragments":["="]},{"Key":"scrabble =","Fragments":["new"]},{"Key":"var score","Fragments":["="]},{"Key":"score =","Fragments":["scrabble.Score();"]},{"Key":"= scrabble.Score();","Fragments":["//"]},{"Key":"scrabble.Score(); //","Fragments":["null"]},{"Key":"// null","Fragments":["reference"]},{"Key":"The calculation","Fragments":["piece"]},{"Key":"calculation piece","Fragments":["works"]},{"Key":"piece works","Fragments":["but"]},{"Key":"works but","Fragments":["seems"]},{"Key":"seems over","Fragments":["complicated."]},{"Key":"are grouping","Fragments":["and"]},{"Key":"grouping and","Fragments":["then"]},{"Key":"then summing","Fragments":["the"]},{"Key":"see, this","Fragments":["gives"]},{"Key":"this gives","Fragments":["the"]},{"Key":"same result","Fragments":["for","but"]},{"Key":"return this.Word.Sum(c","Fragments":["=\u003e"]},{"Key":"this.Word.Sum(c =\u003e","Fragments":["scores.First(kv"]},{"Key":"=\u003e scores.First(kv","Fragments":["=\u003e"]},{"Key":"more calls","Fragments":["to"]},{"Key":"to `key.Contains`","Fragments":["but"]},{"Key":"`key.Contains` but","Fragments":["that"]},{"Key":"be remedied","Fragments":["by"]},{"Key":"remedied by","Fragments":["making"]},{"Key":"dictionary without","Fragments":["losing"]},{"Key":"losing any","Fragments":["of","readability."]},{"Key":"static IDictionary\u003cchar,","Fragments":["int\u003e"]},{"Key":"IDictionary\u003cchar, int\u003e","Fragments":["scores;"]},{"Key":"static Scrabble()","Fragments":["{"]},{"Key":" scores","Fragments":["="]},{"Key":"scores =","Fragments":["new"]},{"Key":"new Dictionary\u003cchar,","Fragments":["int\u003e();"]},{"Key":" AddLetterValues(\"aeioulnrst\",","Fragments":["1);"]},{"Key":" AddLetterValues(\"dg\",","Fragments":["2);"]},{"Key":" AddLetterValues(\"bcmp\",","Fragments":["3);"]},{"Key":" AddLetterValues(\"fhvwy\",","Fragments":["4);"]},{"Key":" AddLetterValues(\"k\",","Fragments":["5);"]},{"Key":" AddLetterValues(\"jx\",","Fragments":["8);"]},{"Key":" AddLetterValues(\"qz\",","Fragments":["10);"]},{"Key":"void AddLetterValues(string","Fragments":["letters,"]},{"Key":"AddLetterValues(string letters,","Fragments":["int"]},{"Key":"letters, int","Fragments":["score)"]},{"Key":"int score)","Fragments":["{"]},{"Key":" scores.Add(letter,","Fragments":["score);"]},{"Key":"Score(string word)","Fragments":["{","{"]},{"Key":"return word.ToLower().Where(Char.IsLetter).Sum(c","Fragments":["=\u003e"]},{"Key":"word.ToLower().Where(Char.IsLetter).Sum(c =\u003e","Fragments":["scores[c]);"]},{"Key":"A small","Fragments":["improvement"]},{"Key":"small improvement","Fragments":["would"]},{"Key":"improvement would","Fragments":["be"]},{"Key":"the `int","Fragments":["i`"]},{"Key":"`int i`","Fragments":["parameter"]},{"Key":"i` parameter","Fragments":["to"]},{"Key":"to `int","Fragments":["year`."]},{"Key":"`int year`.","Fragments":["The"]},{"Key":"year`. The","Fragments":["identifier"]},{"Key":"The identifier","Fragments":["`i`"]},{"Key":"identifier `i`","Fragments":["is"]},{"Key":"usually reserved","Fragments":["for"]},{"Key":"reserved for","Fragments":["loops."]},{"Key":"very compact","Fragments":["and"]},{"Key":"compact and","Fragments":["smart.","only"]},{"Key":"was fairly","Fragments":["happy"]},{"Key":"fairly happy","Fragments":["with"]},{"Key":"solution until","Fragments":["the"]},{"Key":"last unit","Fragments":["testing"]},{"Key":"to Trim","Fragments":["the","the"]},{"Key":"Trim the","Fragments":["start","string"]},{"Key":"the start","Fragments":["and"]},{"Key":"have liked","Fragments":["to"]},{"Key":"liked to","Fragments":["have"]},{"Key":"the split","Fragments":["method."]},{"Key":"split method.","Fragments":["But"]},{"Key":"way so","Fragments":["had"]},{"Key":"the List\u003cstring\u003e","Fragments":["and"]},{"Key":"List\u003cstring\u003e and","Fragments":["trim"]},{"Key":"and trim","Fragments":["them"]},{"Key":"trim them","Fragments":["manually"]},{"Key":"them manually","Fragments":["which"]},{"Key":"manually which","Fragments":["was"]},{"Key":" Sweet!","Fragments":["Thanks"]},{"Key":"Sweet! Thanks","Fragments":["again"]},{"Key":"the advise,","Fragments":["you"]},{"Key":"advise, you","Fragments":["definitely"]},{"Key":"you definitely","Fragments":["taught"]},{"Key":"definitely taught","Fragments":["me"]},{"Key":"good practices.","Fragments":["Now"]},{"Key":"practices. Now","Fragments":["on"]},{"Key":"Now on","Fragments":["to"]},{"Key":" kudos","Fragments":["..."]},{"Key":"kudos ...","Fragments":["looks"]},{"Key":"... looks","Fragments":["better"]},{"Key":"original approach","Fragments":[":"]},{"Key":"from x","Fragments":["in"]},{"Key":"x in","Fragments":["collection"]},{"Key":"in collection","Fragments":["where"]},{"Key":"collection where","Fragments":["predicate(x)"]},{"Key":"where predicate(x)","Fragments":["select"]},{"Key":"predicate(x) select","Fragments":["x;"]},{"Key":"reads fairly","Fragments":["well."]},{"Key":"like conditionals","Fragments":["to"]},{"Key":"stay positive,","Fragments":["so"]},{"Key":"positive, so","Fragments":["I"]},{"Key":"can compact","Fragments":["the"]},{"Key":"compact the","Fragments":["`IsYelling`"]},{"Key":"the `IsYelling`","Fragments":["method"]},{"Key":"`IsYelling` method","Fragments":["even"]},{"Key":"method even","Fragments":["more"]},{"Key":"simple LINQ","Fragments":["query:"]},{"Key":"```return input.Any(char.IsLetter)","Fragments":["\u0026\u0026"]},{"Key":"input.Any(char.IsLetter) \u0026\u0026","Fragments":["!input.Any(char.IsLower);```"]},{"Key":"The `phrase.LastIndexOf('?')==phrase.Length`","Fragments":["call"]},{"Key":"`phrase.LastIndexOf('?')==phrase.Length` call","Fragments":["can"]},{"Key":"call can","Fragments":["be"]},{"Key":"be simplied","Fragments":["to"]},{"Key":"simplied to","Fragments":["`phrase.EndsWith(\"?\")`,"]},{"Key":"to `phrase.EndsWith(\"?\")`,","Fragments":["which"]},{"Key":"`phrase.EndsWith(\"?\")`, which","Fragments":["is"]},{"Key":"not only","Fragments":["shorted","makes","knows"]},{"Key":"only shorted","Fragments":["but"]},{"Key":"shorted but","Fragments":["better"]},{"Key":"but better","Fragments":["represents"]},{"Key":"better represents","Fragments":["what"]},{"Key":"input argument","Fragments":["would"]},{"Key":"argument would","Fragments":["be"]},{"Key":"be `null`,","Fragments":["a","a"]},{"Key":"`null`, a","Fragments":["`NullReferenceException`","`NullReferenceException`"]},{"Key":"a `NullReferenceException`","Fragments":["would","would"]},{"Key":"`NullReferenceException` would","Fragments":["be","be"]},{"Key":"be thrown.","Fragments":["You","Perhaps"]},{"Key":"thrown. You","Fragments":["can"]},{"Key":"fix this","Fragments":["by"]},{"Key":"the `string.IsNullOrWhiteSpace(call)`","Fragments":["be"]},{"Key":"`string.IsNullOrWhiteSpace(call)` be","Fragments":["the"]},{"Key":" @elvis","Fragments":["Looks"]},{"Key":"@elvis Looks","Fragments":["great!"]},{"Key":"Using `var`","Fragments":["not"]},{"Key":"`var` not","Fragments":["only"]},{"Key":"also forces","Fragments":["one"]},{"Key":"forces one","Fragments":["to"]},{"Key":"more carefully","Fragments":["choose"]},{"Key":"carefully choose","Fragments":["variable"]},{"Key":"choose variable","Fragments":["names."]},{"Key":"it wherever","Fragments":["I"]},{"Key":"the `IsExclamation`","Fragments":["method,"]},{"Key":"`IsExclamation` method,","Fragments":["you"]},{"Key":"expression match","Fragments":["call"]},{"Key":"match call","Fragments":["with"]},{"Key":"call with","Fragments":["the"]},{"Key":"following LINQ","Fragments":["query:"]},{"Key":"LINQ query:","Fragments":["`words.Any(char.IsLetter)`."]},{"Key":"query: `words.Any(char.IsLetter)`.","Fragments":["It"]},{"Key":"`words.Any(char.IsLetter)`. It","Fragments":["has"]},{"Key":"result but","Fragments":["is"]},{"Key":"nested loop","Fragments":["is"]},{"Key":"readable. Personally,","Fragments":["I"]},{"Key":"add braces","Fragments":["to"]},{"Key":"braces to","Fragments":["prevent"]},{"Key":"any accidental","Fragments":["mistakes"]},{"Key":"accidental mistakes","Fragments":["and"]},{"Key":"mistakes and","Fragments":["be"]},{"Key":"more explicit,","Fragments":["but"]},{"Key":"explicit, but","Fragments":["for"]},{"Key":"example it","Fragments":["is"]},{"Key":"with @willy","Fragments":["that"]},{"Key":"@willy that","Fragments":["renaming"]},{"Key":"the `i`","Fragments":["variable"]},{"Key":"`i` variable","Fragments":["to"]},{"Key":"meaningful name","Fragments":["like","would"]},{"Key":"like `pair`","Fragments":["or"]},{"Key":"`pair` or","Fragments":["`oldPair`"]},{"Key":"or `oldPair`","Fragments":["would"]},{"Key":"`oldPair` would","Fragments":["improve"]},{"Key":"thrown. Perhaps","Fragments":["this"]},{"Key":"you want,","Fragments":["but"]},{"Key":"want, but","Fragments":["you"]},{"Key":"a `null`","Fragments":["string","check."]},{"Key":"`null` string","Fragments":["to"]},{"Key":"can rewrite","Fragments":["your"]},{"Key":"rewrite your","Fragments":["code"]},{"Key":"if (message.Equals(message.ToUpper())","Fragments":["\u0026\u0026"]},{"Key":"(message.Equals(message.ToUpper()) \u0026\u0026","Fragments":["!message.Equals(message.ToLower()))"]},{"Key":"Variable names","Fragments":["in"]},{"Key":"names in","Fragments":[".NET","the"]},{"Key":".NET in","Fragments":["general"]},{"Key":"general don't","Fragments":["use"]},{"Key":"use underscore","Fragments":["characters."]},{"Key":"underscore characters.","Fragments":["You"]},{"Key":"characters. You","Fragments":["can"]},{"Key":"this [General","Fragments":["Naming"]},{"Key":"[General Naming","Fragments":["Conventions](http://msdn.microsoft.com/en-us/library/ms229045(v=vs.110).aspx)"]},{"Key":"Naming Conventions](http://msdn.microsoft.com/en-us/library/ms229045(v=vs.110).aspx)","Fragments":["document."]},{"Key":"exercise said","Fragments":["not"]},{"Key":"said not","Fragments":["to","to"]},{"Key":"use `Where\u003cT\u003e`,","Fragments":["this"]},{"Key":"`Where\u003cT\u003e`, this","Fragments":["is"]},{"Key":"as complex","Fragments":["as"]},{"Key":"complex as","Fragments":["I"]},{"Key":"I let","Fragments":["in"]},{"Key":"let in","Fragments":["comments"]},{"Key":"comments my","Fragments":["symplification"]},{"Key":"my symplification","Fragments":["process"]},{"Key":"symplification process","Fragments":[":)"]},{"Key":"Clean, solid","Fragments":["implementation."]},{"Key":"solid implementation.","Fragments":["The"]},{"Key":"only improvement","Fragments":["I'd"]},{"Key":"improvement I'd","Fragments":["suggest"]},{"Key":"suggest would","Fragments":["be"]},{"Key":"input parameter","Fragments":["to"]},{"Key":"to `IDictionary\u003cint,","Fragments":["IEnumerable\u003cstring\u003e\u003e`."]},{"Key":"`IDictionary\u003cint, IEnumerable\u003cstring\u003e\u003e`.","Fragments":["Functionally,"]},{"Key":"IEnumerable\u003cstring\u003e\u003e`. Functionally,","Fragments":["everything"]},{"Key":"Functionally, everything","Fragments":["should"]},{"Key":"everything should","Fragments":["still"]},{"Key":"a less","Fragments":["restrictive"]},{"Key":"less restrictive","Fragments":["input"]},{"Key":"restrictive input","Fragments":["argument."]},{"Key":"The call","Fragments":["to"]},{"Key":"to `string.IsNullOrEmpty","Fragments":["("]},{"Key":"`string.IsNullOrEmpty (","Fragments":["str.Trim"]},{"Key":"( str.Trim","Fragments":["()"]},{"Key":"str.Trim ()","Fragments":[")`"]},{"Key":"() )`","Fragments":["can"]},{"Key":")` can","Fragments":["be"]},{"Key":"with `string.IsNullOrWhiteSpace","Fragments":["("]},{"Key":"`string.IsNullOrWhiteSpace (","Fragments":["str"]},{"Key":"( str","Fragments":[")`."]},{"Key":"str )`.","Fragments":["Furthermore,"]},{"Key":")`. Furthermore,","Fragments":["I"]},{"Key":"Furthermore, I","Fragments":["would"]},{"Key":"move that","Fragments":["check"]},{"Key":"top for","Fragments":["it"]},{"Key":"to become","Fragments":["the"]},{"Key":"become the","Fragments":["first"]},{"Key":"check. In","Fragments":["general,"]},{"Key":"general, it","Fragments":["is"]},{"Key":"always best","Fragments":["to"]},{"Key":"any sanity","Fragments":["checks,"]},{"Key":"sanity checks,","Fragments":["and"]},{"Key":"checks, and","Fragments":["the"]},{"Key":"`string.IsNullOrWhiteSpace` call","Fragments":["checks"]},{"Key":"call checks","Fragments":["for"]},{"Key":"for `null`","Fragments":["and"]},{"Key":"`null` and","Fragments":["empty"]},{"Key":"empty values.","Fragments":["Having"]},{"Key":"values. Having","Fragments":["moved"]},{"Key":"Having moved","Fragments":["it"]},{"Key":"top, you","Fragments":["don't"]},{"Key":"string being","Fragments":["`null`"]},{"Key":"being `null`","Fragments":["in"]},{"Key":"`null` in","Fragments":["any"]},{"Key":" Roster's","Fragments":["values"]},{"Key":"Roster's values","Fragments":["string"]},{"Key":"values string","Fragments":["lists"]},{"Key":"string lists","Fragments":["still"]},{"Key":"lists still","Fragments":["get"]},{"Key":"Quite messy","Fragments":["code"]},{"Key":"messy code","Fragments":["that"]},{"Key":"and _roster","Fragments":["does"]},{"Key":"_roster does","Fragments":["not"]},{"Key":"get mutated","Fragments":["directly"]},{"Key":"mutated directly","Fragments":["via"]},{"Key":"directly via","Fragments":["Roster"]},{"Key":"completeness even","Fragments":["if"]},{"Key":"that change","Fragments":["anything?"]},{"Key":"change anything?","Fragments":["I"]},{"Key":"anything? I","Fragments":["don't"]},{"Key":"and nicer","Fragments":["solution"]},{"Key":"nicer solution","Fragments":["compared"]},{"Key":"solution compared","Fragments":["to"]},{"Key":"A `yield","Fragments":["return`"]},{"Key":"`yield return`","Fragments":["would","you"]},{"Key":"return` would","Fragments":["really"]},{"Key":"really simplify","Fragments":["this"]},{"Key":"checking of","Fragments":["the"]},{"Key":"creating lists.","Fragments":["Besides,"]},{"Key":"lists. Besides,","Fragments":["you"]},{"Key":"Besides, you","Fragments":["return"]},{"Key":"return `IEnumerable\u003cT\u003e`","Fragments":["so"]},{"Key":"`IEnumerable\u003cT\u003e` so","Fragments":["who"]},{"Key":"so who","Fragments":["cares"]},{"Key":"who cares","Fragments":["what"]},{"Key":"cares what","Fragments":["the"]},{"Key":"the underlying","Fragments":["list","mechanic"]},{"Key":"underlying list","Fragments":["is?"]},{"Key":"forget exactly","Fragments":["what"]},{"Key":"what happened,","Fragments":["but"]},{"Key":"happened, but","Fragments":["the"]},{"Key":"compiler yelled","Fragments":["at"]},{"Key":"at me","Fragments":["when"]},{"Key":"me when","Fragments":["I"]},{"Key":"didn't initialize","Fragments":["\u003ccode\u003ekeep\u003c/code\u003e"]},{"Key":"initialize \u003ccode\u003ekeep\u003c/code\u003e","Fragments":["and"]},{"Key":"\u003ccode\u003ekeep\u003c/code\u003e and","Fragments":["\u003ccode\u003ediscard\u003c/code\u003e"]},{"Key":"and \u003ccode\u003ediscard\u003c/code\u003e","Fragments":["(I"]},{"Key":"\u003ccode\u003ediscard\u003c/code\u003e (I","Fragments":["think"]},{"Key":"because \u003ccode\u003eConcat\u003c/code\u003e","Fragments":["only"]},{"Key":"\u003ccode\u003eConcat\u003c/code\u003e only","Fragments":["works"]},{"Key":"only works","Fragments":["on"]},{"Key":"certain types","Fragments":["or"]},{"Key":"types or","Fragments":["something"]},{"Key":"updated to","Fragments":["prevent"]},{"Key":"prevent roster","Fragments":["being"]},{"Key":"roster being","Fragments":["externally"]},{"Key":"being externally","Fragments":["writable."]},{"Key":"externally writable.","Fragments":["@beverly"]},{"Key":"writable. @beverly","Fragments":["the"]},{"Key":"@beverly the","Fragments":["reason"]},{"Key":"try/catch in","Fragments":["Grade()"]},{"Key":"in Grade()","Fragments":["is"]},{"Key":"null when","Fragments":["no","the"]},{"Key":"grade, so","Fragments":["it"]},{"Key":"to satisfy","Fragments":["test"]},{"Key":"satisfy test","Fragments":["conditions."]},{"Key":"test conditions.","Fragments":["I'm"]},{"Key":"conditions. I'm","Fragments":["open"]},{"Key":"I'm open","Fragments":["to"]},{"Key":"to changing","Fragments":["it"]},{"Key":"ensure an","Fragments":["empty"]},{"Key":"I'm so","Fragments":["used"]},{"Key":"see var","Fragments":["instead"]},{"Key":"var instead","Fragments":["of"]},{"Key":"full type","Fragments":["by"]},{"Key":"type by","Fragments":["now,"]},{"Key":"by now,","Fragments":["so"]},{"Key":"the To()","Fragments":["method"]},{"Key":"To() method","Fragments":["I","is"]},{"Key":"1 liner","Fragments":["is","using","with","using"]},{"Key":"liner is","Fragments":["not"]},{"Key":"readable, a","Fragments":["Where"]},{"Key":"a Where","Fragments":["and"]},{"Key":"Where and","Fragments":["Sum"]},{"Key":"and Sum","Fragments":["versus"]},{"Key":"Sum versus","Fragments":["Aggregate"]},{"Key":"versus Aggregate","Fragments":["would"]},{"Key":"Aggregate would","Fragments":["be"]},{"Key":"be clearer?","Fragments":["(In"]},{"Key":"clearer? (In","Fragments":["which"]},{"Key":"(In which","Fragments":["case"]},{"Key":"which case","Fragments":["you"]},{"Key":"make CheckMultiple()","Fragments":["return"]},{"Key":"CheckMultiple() return","Fragments":["a"]},{"Key":"collection initializer","Fragments":["in"]},{"Key":"initializer in","Fragments":["SumOfMultiples()?"]},{"Key":"Can use","Fragments":["constructor","constructor","reflection"]},{"Key":"use constructor","Fragments":["overloading","overloading"]},{"Key":"constructor overloading","Fragments":["too"]},{"Key":" To()","Fragments":["method","could","is","wih"]},{"Key":"why does","Fragments":["To()"]},{"Key":"does To()","Fragments":["return"]},{"Key":"To() return","Fragments":["an"]},{"Key":"Try a","Fragments":["tertiary","dictionary"]},{"Key":"tertiary operator","Fragments":["in"]},{"Key":"in AddIfDivisible()","Fragments":["and"]},{"Key":"AddIfDivisible() and","Fragments":["SumOfMultiples()?"]},{"Key":"like especially","Fragments":["how"]},{"Key":"especially how","Fragments":["you"]},{"Key":"made teenths","Fragments":["consistent"]},{"Key":"teenths consistent","Fragments":["with"]},{"Key":"your FindFirst()","Fragments":["method."]},{"Key":"Minor but","Fragments":["I"]},{"Key":"same variable","Fragments":["name"]},{"Key":"DateTime argument","Fragments":["into"]},{"Key":"argument into","Fragments":["FindFirst()"]},{"Key":"into FindFirst()","Fragments":["which"]},{"Key":"FindFirst() which","Fragments":["also"]},{"Key":"which also","Fragments":["returns"]},{"Key":"also returns","Fragments":["\"date\"."]},{"Key":"Could collapse","Fragments":["FindFirst()"]},{"Key":"collapse FindFirst()","Fragments":["and"]},{"Key":"FindFirst() and","Fragments":["FindLast()"]},{"Key":"and FindLast()","Fragments":["into"]},{"Key":"FindLast() into","Fragments":["one"]},{"Key":"an optional","Fragments":["bool"]},{"Key":"optional bool","Fragments":["argument?"]},{"Key":"why use","Fragments":["breaks"]},{"Key":"use breaks","Fragments":["in"]},{"Key":"breaks in","Fragments":["switch"]},{"Key":"in switch","Fragments":["and"]},{"Key":"switch and","Fragments":["not"]},{"Key":"return directly","Fragments":["from"]},{"Key":"Nice but","Fragments":["Verse()"]},{"Key":"but Verse()","Fragments":["method"]},{"Key":"Verse() method","Fragments":["could"]},{"Key":" Date","Fragments":["does"]},{"Key":"Date does","Fragments":["not"]},{"Key":"to days","Fragments":["first,"]},{"Key":"days first,","Fragments":["try"]},{"Key":"first, try","Fragments":["AddSeconds"]},{"Key":"like generic","Fragments":["names"]},{"Key":"generic names","Fragments":["like"]},{"Key":"names like","Fragments":["dict,","letters,"]},{"Key":"like dict,","Fragments":["key"]},{"Key":"dict, key","Fragments":["and"]},{"Key":"on. I","Fragments":["want"]},{"Key":"mean, I","Fragments":["can"]},{"Key":"code what","Fragments":["they"]},{"Key":"see names","Fragments":["like"]},{"Key":"like letters,","Fragments":["points"]},{"Key":"letters, points","Fragments":["and"]},{"Key":"and transformedLookup.","Fragments":["Not"]},{"Key":"transformedLookup. Not","Fragments":["necessarily"]},{"Key":"necessarily these","Fragments":["words,"]},{"Key":"these words,","Fragments":["but"]},{"Key":"words, but","Fragments":["you"]},{"Key":"`string.IsNullOrWhiteSpace` to","Fragments":["the"]},{"Key":"top, as","Fragments":["that"]},{"Key":"also includes","Fragments":["a"]},{"Key":"`null` check.","Fragments":["Moving"]},{"Key":"check. Moving","Fragments":["it"]},{"Key":"Moving it","Fragments":["to"]},{"Key":"top means","Fragments":["your"]},{"Key":"means your","Fragments":["other"]},{"Key":"won't fail","Fragments":["when"]},{"Key":"fail when","Fragments":["the"]},{"Key":" Exception","Fragments":["thrown","not"]},{"Key":"Exception thrown","Fragments":["in"]},{"Key":"thrown in","Fragments":["Kind","constructor","Constrcutor","all"]},{"Key":"Kind not","Fragments":["Constructor"]},{"Key":" \"divisors\"","Fragments":["is"]},{"Key":"\"divisors\" is","Fragments":["a"]},{"Key":"than \"multiples\"","Fragments":["which"]},{"Key":"\"multiples\" which","Fragments":["I"]},{"Key":"Try LINQ","Fragments":["in"]},{"Key":"in To()?","Fragments":["It"]},{"Key":"To()? It","Fragments":["is"]},{"Key":"To() could","Fragments":["be","be"]},{"Key":"readable using","Fragments":["LINQ?","Linq"]},{"Key":"Good but","Fragments":["exception","Encode/Decode","Encode/Decode","this","given"]},{"Key":"but exception","Fragments":["is"]},{"Key":"not thrown","Fragments":["in","in"]},{"Key":"constructor but","Fragments":["in","that"]},{"Key":" Poor","Fragments":["unit"]},{"Key":"Poor unit","Fragments":["test"]},{"Key":"test design","Fragments":["IMHO"]},{"Key":"collection fort","Fragments":["lengths"]},{"Key":"fort lengths","Fragments":["and"]},{"Key":"and amkes","Fragments":["code"]},{"Key":"amkes code","Fragments":["shorter"]},{"Key":"shorter but","Fragments":["quite"]},{"Key":"but quite","Fragments":["readable."]},{"Key":"To() is","Fragments":["not","IMHO"]},{"Key":"readable can","Fragments":["be"]},{"Key":"done as","Fragments":["two"]},{"Key":"two 1-liners","Fragments":["in"]},{"Key":"1-liners in","Fragments":["LINQ."]},{"Key":"both To()","Fragments":["and"]},{"Key":"To() and","Fragments":["MultiplesOf()"]},{"Key":"and MultiplesOf()","Fragments":["methods,"]},{"Key":"MultiplesOf() methods,","Fragments":["such"]},{"Key":"methods, such","Fragments":["that"]},{"Key":"that no","Fragments":["comments"]},{"Key":"be needed.","Fragments":["(Would"]},{"Key":"needed. (Would","Fragments":["perform"]},{"Key":"(Would perform","Fragments":["better"]},{"Key":"better IMHO","Fragments":["too)"]},{"Key":"Still an","Fragments":["interesting"]},{"Key":"interesting approach","Fragments":["using"]},{"Key":"Quite readable","Fragments":["non"]},{"Key":"readable non","Fragments":["LINQ"]},{"Key":"non LINQ","Fragments":["solution"]},{"Key":"but two","Fragments":["helper"]},{"Key":"two helper","Fragments":["methods","methods"]},{"Key":"for To()","Fragments":["is"]},{"Key":"IMHO 1","Fragments":["too"]},{"Key":"1 too","Fragments":["many"]},{"Key":"Why _hasKind","Fragments":["at"]},{"Key":"_hasKind at","Fragments":["all?"]},{"Key":"at all?","Fragments":["Just"]},{"Key":"all? Just","Fragments":["return"]},{"Key":"Just return","Fragments":["TriangleKind"]},{"Key":"return TriangleKind","Fragments":["as"]},{"Key":"TriangleKind as","Fragments":["soon"]},{"Key":"Why List\u003c\u003e","Fragments":["and"]},{"Key":"List\u003c\u003e and","Fragments":["the"]},{"Key":"Sort() in","Fragments":["that"]},{"Key":"case, why","Fragments":["not"]},{"Key":" IsDivisibleByValues","Fragments":["can"]},{"Key":"IsDivisibleByValues can","Fragments":["be"]},{"Key":"liner using","Fragments":["LINQ","non-fluent"]},{"Key":"a temporary","Fragments":["variable","list?"]},{"Key":"temporary variable","Fragments":["sum"]},{"Key":"variable sum","Fragments":["in"]},{"Key":"sum in","Fragments":["the"]},{"Key":"method, why","Fragments":["not"]},{"Key":"since x%y==0","Fragments":["is"]},{"Key":"x%y==0 is","Fragments":["idiomatic"]},{"Key":"is idiomatic","Fragments":["in"]},{"Key":"idiomatic in","Fragments":["c#"]},{"Key":" Fine","Fragments":["but"]},{"Key":"Fine but","Fragments":["To()"]},{"Key":"but To()","Fragments":["could"]},{"Key":"2 1","Fragments":["liners"]},{"Key":"liners and","Fragments":["more"]},{"Key":"Quite straighforward","Fragments":["but"]},{"Key":"straighforward but","Fragments":["do"]},{"Key":"but do","Fragments":["you","you"]},{"Key":"want all","Fragments":["the"]},{"Key":"values hard","Fragments":["coded"]},{"Key":"hard coded","Fragments":["in"]},{"Key":"every function","Fragments":["rather"]},{"Key":"This problem","Fragments":["was","wasn't"]},{"Key":"too trivial","Fragments":["I"]},{"Key":"trivial I","Fragments":["know"]},{"Key":"agree I","Fragments":["do"]},{"Key":"same but","Fragments":["use"]},{"Key":"but use","Fragments":["Linq"]},{"Key":"Much redundancy","Fragments":["in"]},{"Key":"redundancy in","Fragments":["_song"]},{"Key":"in _song","Fragments":["List,"]},{"Key":"_song List,","Fragments":["refactor?"]},{"Key":"Actually quick","Fragments":["to"]},{"Key":"quick to","Fragments":["do"]},{"Key":"there some","Fragments":["simple"]},{"Key":"simple tricks.","Fragments":["Not"]},{"Key":"tricks. Not","Fragments":["hard"]},{"Key":"Not hard","Fragments":["for"]},{"Key":"hard for","Fragments":["sure"]},{"Key":"this compact,","Fragments":["readable"]},{"Key":"compact, readable","Fragments":["version."]},{"Key":"readable version.","Fragments":["The"]},{"Key":"version. The","Fragments":["only"]},{"Key":"is spreading","Fragments":["the"]},{"Key":"spreading the","Fragments":["if"]},{"Key":"statement over","Fragments":["several"]},{"Key":"over several","Fragments":["lines.","lines,"]},{"Key":"several lines.","Fragments":["This"]},{"Key":"lines. This","Fragments":["makes"]},{"Key":"appears as","Fragments":["though"]},{"Key":"as though","Fragments":["they"]},{"Key":"don't belong","Fragments":["together,"]},{"Key":"belong together,","Fragments":["which"]},{"Key":"together, which","Fragments":["they"]},{"Key":"which they","Fragments":["do."]},{"Key":"I suggested","Fragments":["a","a"]},{"Key":"suggested a","Fragments":["`yield","way"]},{"Key":"a `yield","Fragments":["return`."]},{"Key":"`yield return`.","Fragments":["If"]},{"Key":"return`. If","Fragments":["you"]},{"Key":"the member","Fragments":["variables"]},{"Key":"member variables","Fragments":["keep"]},{"Key":"variables keep","Fragments":["and"]},{"Key":"keep and","Fragments":["discard."]},{"Key":"and discard.","Fragments":["Your"]},{"Key":"discard. Your","Fragments":["keep"]},{"Key":"Your keep","Fragments":["method"]},{"Key":"keep method","Fragments":["would"]},{"Key":"foreach(var item","Fragments":["in"]},{"Key":" if(predicate(item))","Fragments":["yield"]},{"Key":"if(predicate(item)) yield","Fragments":["return"]},{"Key":"could delete","Fragments":["your"]},{"Key":"delete your","Fragments":["Compute"]},{"Key":"your Compute","Fragments":["method."]},{"Key":" CheckForValidInput()","Fragments":["Linq1"]},{"Key":"CheckForValidInput() Linq1","Fragments":["liner"]},{"Key":" CheckForValidLengthss()","Fragments":["factor"]},{"Key":"CheckForValidLengthss() factor","Fragments":["out"]},{"Key":"factor out","Fragments":["triplicate","'i','a','o'"]},{"Key":"out triplicate","Fragments":["common"]},{"Key":"triplicate common","Fragments":["logic"]},{"Key":" TwoSidesAreEqual","Fragments":["Linq"]},{"Key":"TwoSidesAreEqual Linq","Fragments":["1"]},{"Key":"Linq 1","Fragments":["liner","liner)"]},{"Key":" AllThrreSidesAreEqual()","Fragments":["odd"]},{"Key":"AllThrreSidesAreEqual() odd","Fragments":["since"]},{"Key":"since shorter","Fragments":["to"]},{"Key":"shorter to","Fragments":["just"]},{"Key":"for three","Fragments":["way"]},{"Key":"three way","Fragments":["equality"]},{"Key":"way equality","Fragments":["(or,as"]},{"Key":"equality (or,as","Fragments":["usual,"]},{"Key":"(or,as usual,","Fragments":["a"]},{"Key":"usual, a","Fragments":["Linq"]},{"Key":" _vertices","Fragments":["should"]},{"Key":"_vertices should","Fragments":["be"]},{"Key":"be _edges!","Fragments":["Duh!"]},{"Key":"that triangle","Fragments":["equality"]},{"Key":"triangle equality","Fragments":["handles"]},{"Key":"equality handles","Fragments":["0"]},{"Key":"handles 0","Fragments":["and"]},{"Key":"negative cases!","Fragments":["Did"]},{"Key":"cases! Did","Fragments":["not"]},{"Key":"Did not","Fragments":["see","like"]},{"Key":"see of","Fragments":["that."]},{"Key":"that. Probably","Fragments":["the"]},{"Key":"Probably the","Fragments":["key"]},{"Key":"key insight","Fragments":["in"]},{"Key":"insight in","Fragments":["this"]},{"Key":"Exception not","Fragments":["thrown"]},{"Key":"in Constrcutor","Fragments":["given"]},{"Key":"Constrcutor given","Fragments":["the"]},{"Key":"test provided,","Fragments":["(probably"]},{"Key":"provided, (probably","Fragments":["a"]},{"Key":"a debateable","Fragments":["point,"]},{"Key":"debateable point,","Fragments":["bad"]},{"Key":"point, bad","Fragments":["unit"]},{"Key":"bad unit","Fragments":["test"]},{"Key":" Oh!","Fragments":["Thanks!","OK..."]},{"Key":"Oh! Thanks!","Fragments":["I"]},{"Key":"used \u003ccode\u003eyield","Fragments":["return\u003c/code\u003e"]},{"Key":"\u003ccode\u003eyield return\u003c/code\u003e","Fragments":["too"]},{"Key":"return\u003c/code\u003e too","Fragments":["much..."]},{"Key":"However, wouldn't","Fragments":["that"]},{"Key":"make both","Fragments":["functions"]},{"Key":"both functions","Fragments":["lazy"]},{"Key":"functions lazy","Fragments":["(which"]},{"Key":"lazy (which","Fragments":["isn't"]},{"Key":"(which isn't","Fragments":["stated"]},{"Key":"isn't stated","Fragments":["in"]},{"Key":"might affect","Fragments":["things"]},{"Key":"affect things","Fragments":["if"]},{"Key":"the \"time\"","Fragments":["variable"]},{"Key":"\"time\" variable","Fragments":["in"]},{"Key":"long winded","Fragments":["to"]},{"Key":"winded to","Fragments":["achieve"]},{"Key":"achieve your","Fragments":["goal"]},{"Key":"goal and","Fragments":["less"]},{"Key":"efficient with","Fragments":["using"]},{"Key":"using GroupBy","Fragments":["or"]},{"Key":"GroupBy or","Fragments":["ToDictionary"]},{"Key":"Linq rather","Fragments":["than"]},{"Key":"than foreach","Fragments":["in"]},{"Key":"12, why","Fragments":["not"]},{"Key":" `char","Fragments":["r"]},{"Key":"`char r","Fragments":["="]},{"Key":"r =","Fragments":["(char)('z'"]},{"Key":"= (char)('z'","Fragments":["-"]},{"Key":"(char)('z' -","Fragments":["c"]},{"Key":"- c","Fragments":["+"]},{"Key":"statements, why","Fragments":["not"]},{"Key":"use `Char.IsLetter`","Fragments":["and"]},{"Key":"`Char.IsLetter` and","Fragments":["`Char.IsDigit`?"]},{"Key":"Could not","Fragments":["edit","see"]},{"Key":"not edit","Fragments":["that"]},{"Key":"edit that","Fragments":["comment,"]},{"Key":"that comment,","Fragments":["Sorry."]},{"Key":"comment, Sorry.","Fragments":["I"]},{"Key":"Sorry. I","Fragments":["can"]},{"Key":"way without","Fragments":["needing"]},{"Key":" DRY","Fragments":["-","works"]},{"Key":"DRY -","Fragments":["Do","one"]},{"Key":"- Do","Fragments":["Not"]},{"Key":"Do Not","Fragments":["Repeat"]},{"Key":"Not Repeat","Fragments":["Yourself"]},{"Key":"Hint: static","Fragments":["score"]},{"Key":"static score","Fragments":["can"]},{"Key":"score can","Fragments":["create"]},{"Key":"create its","Fragments":["own"]},{"Key":"own instance","Fragments":["of"]},{"Key":"Getting tedious","Fragments":["when"]},{"Key":"tedious when","Fragments":["setting"]},{"Key":"when setting","Fragments":["up"]},{"Key":"up data","Fragments":["takes"]},{"Key":"data takes","Fragments":["longer"]},{"Key":"takes longer","Fragments":["than"]},{"Key":"than writing","Fragments":["code"]},{"Key":"However here","Fragments":["used"]},{"Key":"here used","Fragments":["minimal"]},{"Key":"used minimal","Fragments":["re-work"]},{"Key":"minimal re-work","Fragments":["of"]},{"Key":"re-work of","Fragments":["data"]},{"Key":"in ReadMe","Fragments":["and"]},{"Key":"ReadMe and","Fragments":["built"]},{"Key":"and built","Fragments":["it"]},{"Key":"built it","Fragments":["in"]},{"Key":"in static","Fragments":["constructor.","constructor?"]},{"Key":"Still yet","Fragments":["another"]},{"Key":"yet another","Fragments":["problem"]},{"Key":"another problem","Fragments":["that"]},{"Key":"is trivial,","Fragments":["when"]},{"Key":"trivial, when","Fragments":["are"]},{"Key":"when are","Fragments":["they"]},{"Key":"they going","Fragments":["to"]},{"Key":"predicate changes","Fragments":["before"]},{"Key":"changes before","Fragments":["the"]},{"Key":"called, the","Fragments":["new"]},{"Key":"predicate will","Fragments":["be"]},{"Key":"be used,","Fragments":["possibly","in"]},{"Key":"used, possibly","Fragments":["leading"]},{"Key":"possibly leading","Fragments":["to"]},{"Key":"leading to","Fragments":["unwanted"]},{"Key":"to unwanted","Fragments":["side"]},{"Key":"unwanted side","Fragments":["effects."]},{"Key":"The two","Fragments":["functions","calls","nitpicks"]},{"Key":"two functions","Fragments":["would"]},{"Key":"be lazy,","Fragments":["but"]},{"Key":"lazy, but","Fragments":["that"]},{"Key":"good thing.","Fragments":["They"]},{"Key":"thing. They","Fragments":["will"]},{"Key":"They will","Fragments":["only"]},{"Key":"return as","Fragments":["many","many","soon"]},{"Key":"many items","Fragments":["as","to"]},{"Key":"items as","Fragments":["the"]},{"Key":"code asks","Fragments":["for."]},{"Key":"asks for.","Fragments":["This"]},{"Key":"for. This","Fragments":["would"]},{"Key":"the Keep","Fragments":["method"]},{"Key":"Keep method","Fragments":["is","to"]},{"Key":"the functional","Fragments":["equivalent"]},{"Key":"functional equivalent","Fragments":["of"]},{"Key":"equivalent of","Fragments":["the","not","`!IsOnlyNumbers()`"]},{"Key":"Where extension","Fragments":["method."]},{"Key":"someone was","Fragments":["to"]},{"Key":"your Keep","Fragments":["method"]},{"Key":"to form","Fragments":["a"]},{"Key":"form a","Fragments":["Linq"]},{"Key":"Linq query,","Fragments":["your"]},{"Key":"query, your","Fragments":["current"]},{"Key":"implementation would","Fragments":["copy"]},{"Key":"would copy","Fragments":["all"]},{"Key":"items into","Fragments":["a"]},{"Key":"collection then","Fragments":["return"]},{"Key":"whole thing.","Fragments":["This"]},{"Key":"thing. This","Fragments":["is"]},{"Key":"next method","Fragments":["in"]},{"Key":"query is","Fragments":["something","fast."]},{"Key":"a `First()`.","Fragments":["By"]},{"Key":"`First()`. By","Fragments":["using"]},{"Key":"using `yield","Fragments":["return`"]},{"Key":"return` you","Fragments":["ensure"]},{"Key":"you ensure","Fragments":["that"]},{"Key":"many as","Fragments":["are"]},{"Key":"as are","Fragments":["needed."]},{"Key":"letters (to","Fragments":["check"]},{"Key":"(to check","Fragments":["if"]},{"Key":"input phrase","Fragments":["contains","was"]},{"Key":"or not)","Fragments":["but"]},{"Key":"not) but","Fragments":["after"]},{"Key":"just gave","Fragments":["in!"]},{"Key":"gave in!","Fragments":["I'm"]},{"Key":"in! I'm","Fragments":["pretty"]},{"Key":"pretty happy","Fragments":["with"]},{"Key":"Some comments","Fragments":["could"]},{"Key":"comments could","Fragments":["go"]},{"Key":"way in","Fragments":["increasing"]},{"Key":"in increasing","Fragments":["the"]},{"Key":"ability of","Fragments":["someone"]},{"Key":"of someone","Fragments":["looking"]},{"Key":"someone looking","Fragments":["at","at"]},{"Key":"using code","Fragments":["that"]},{"Key":"is familiar","Fragments":["to"]},{"Key":"familiar to","Fragments":["you,"]},{"Key":"to comment,","Fragments":["but"]},{"Key":"comment, but","Fragments":["if"]},{"Key":"them understand","Fragments":["it"]},{"Key":"two test","Fragments":["cases","cases"]},{"Key":"cases that","Fragments":["have","could"]},{"Key":"have free","Fragments":["standing"]},{"Key":"free standing","Fragments":["apostrophes","apostrophes"]},{"Key":"standing apostrophes","Fragments":["or","or"]},{"Key":"apostrophes or","Fragments":["apostrophes","apostrophes"]},{"Key":"or apostrophes","Fragments":["directly","before/after"]},{"Key":"apostrophes directly","Fragments":["before"]},{"Key":"directly before","Fragments":["or"]},{"Key":"word. Also,","Fragments":["comments"]},{"Key":"Also, comments","Fragments":["never"]},{"Key":"comments never","Fragments":["hurt,"]},{"Key":"never hurt,","Fragments":["even"]},{"Key":"hurt, even","Fragments":["a"]},{"Key":"small amount","Fragments":["is"]},{"Key":"amount is","Fragments":["helpful."]},{"Key":"initially wanted","Fragments":["to"]},{"Key":"initialize all","Fragments":["my"]},{"Key":"my sublists","Fragments":["in"]},{"Key":"sublists in","Fragments":["the"]},{"Key":"they checked","Fragments":["that"]},{"Key":"checked that","Fragments":["the"]},{"Key":"of Roster","Fragments":["is"]},{"Key":"if no","Fragments":["grades"]},{"Key":"no grades","Fragments":["have"]},{"Key":"grades have","Fragments":["been"]},{"Key":"been added.","Fragments":["Then"]},{"Key":"added. Then","Fragments":["I"]},{"Key":"to on","Fragments":["the"]},{"Key":"first Add","Fragments":["call"]},{"Key":"Add call","Fragments":["I"]},{"Key":"call I","Fragments":["initialized"]},{"Key":"I initialized","Fragments":["then"]},{"Key":"initialized then","Fragments":["all"]},{"Key":"then all","Fragments":["but"]},{"Key":"failed a","Fragments":["test"]},{"Key":"where grade","Fragments":["returns"]},{"Key":"grade returns","Fragments":["an"]},{"Key":"returns an","Fragments":["empty"]},{"Key":"list if","Fragments":["nothing"]},{"Key":"if nothing","Fragments":["was"]},{"Key":"nothing was","Fragments":["added","said"]},{"Key":"grade because","Fragments":["it"]},{"Key":"it hadn't","Fragments":["been"]},{"Key":"hadn't been","Fragments":["initalized"]},{"Key":"been initalized","Fragments":["yet"]},{"Key":"initalized yet","Fragments":["so"]},{"Key":"yet so","Fragments":["the"]},{"Key":"any grade","Fragments":["was"]},{"Key":"grade was","Fragments":["null"]},{"Key":"was null","Fragments":["and"]},{"Key":"to Grade","Fragments":["on"]},{"Key":"new school","Fragments":["should"]},{"Key":"school should","Fragments":["return"]},{"Key":"0, not","Fragments":["null,"]},{"Key":"both places","Fragments":["which"]},{"Key":"places which","Fragments":["meant"]},{"Key":"which meant","Fragments":["making"]},{"Key":"meant making","Fragments":["a"]},{"Key":"new method","Fragments":["for"]},{"Key":"constructor, but","Fragments":["I"]},{"Key":"other implementations","Fragments":["to"]},{"Key":"implementations to","Fragments":["see"]},{"Key":"simply the","Fragments":["check","code."]},{"Key":"if letters","Fragments":["exist"]},{"Key":"letters exist","Fragments":["(in"]},{"Key":"exist (in","Fragments":["the"]},{"Key":"the \"Yelling\"","Fragments":["section)"]},{"Key":"\"Yelling\" section)","Fragments":["by"]},{"Key":"section) by","Fragments":["checking"]},{"Key":"phrase was","Fragments":["equal"]},{"Key":"was equal","Fragments":["to"]},{"Key":"to inputPhrase.ToUpper()","Fragments":["and"]},{"Key":"inputPhrase.ToUpper() and","Fragments":["NOT"]},{"Key":"and NOT","Fragments":["equal","thrown"]},{"Key":"NOT equal","Fragments":["to"]},{"Key":"to inputPhrase.ToLower()","Fragments":["(thanks"]},{"Key":"inputPhrase.ToLower() (thanks","Fragments":["Sharpevil)."]},{"Key":"Also cleaned","Fragments":["up"]},{"Key":"up \"using\"","Fragments":["statements."]},{"Key":"Doesn't solve","Fragments":["the"]},{"Key":"cases involving","Fragments":["free"]},{"Key":"involving free","Fragments":["standing"]},{"Key":"apostrophes before/after","Fragments":["a"]},{"Key":"before/after a","Fragments":["word."]},{"Key":"would happen","Fragments":["if"]},{"Key":"happen if","Fragments":["I","plaintext"]},{"Key":"I gave","Fragments":["your","to"]},{"Key":"gave your","Fragments":["class"]},{"Key":"word with","Fragments":["a"]},{"Key":"a '*'","Fragments":["or"]},{"Key":"'*' or","Fragments":["'@'"]},{"Key":"or '@'","Fragments":["in"]},{"Key":"'@' in","Fragments":["it?"]},{"Key":"it? It","Fragments":["wasn't"]},{"Key":"is possibility,","Fragments":["you"]},{"Key":"possibility, you","Fragments":["should"]},{"Key":"be removing","Fragments":["all"]},{"Key":"all special","Fragments":["characters"]},{"Key":"and punctuation,","Fragments":["not"]},{"Key":"punctuation, not","Fragments":["just"]},{"Key":"ones you've","Fragments":["hard"]},{"Key":"you've hard","Fragments":["coded."]},{"Key":"hard coded.","Fragments":["Check"]},{"Key":"coded. Check","Fragments":["out"]},{"Key":"1. Oops,","Fragments":["missed"]},{"Key":"Oops, missed","Fragments":["those."]},{"Key":"missed those.","Fragments":["Punctuation"]},{"Key":"those. Punctuation","Fragments":["isn't"]},{"Key":"Punctuation isn't","Fragments":["specified"]},{"Key":"isn't specified","Fragments":["in"]},{"Key":"readme but","Fragments":["whatever."]},{"Key":"don't test","Fragments":["for"]},{"Key":"should at","Fragments":["least"]},{"Key":"for key","Fragments":["\u003e"]},{"Key":"key \u003e","Fragments":["plaintext","plaintext."]},{"Key":"\u003e plaintext","Fragments":["as"]},{"Key":"plaintext as","Fragments":["the"]},{"Key":"readme shows","Fragments":["an"]},{"Key":"shows an","Fragments":["example"]},{"Key":"of key","Fragments":["\u003e"]},{"Key":"\u003e plaintext.","Fragments":["What"]},{"Key":"plaintext. What","Fragments":["should"]},{"Key":"should happen","Fragments":["if"]},{"Key":"if plaintext","Fragments":["\u003e"]},{"Key":"plaintext \u003e","Fragments":["key?"]},{"Key":"4. Yep.","Fragments":["What"]},{"Key":"Yep. What","Fragments":["should"]},{"Key":"5. OK,","Fragments":["what"]},{"Key":"OK, what","Fragments":["should"]},{"Key":"result be","Fragments":["with"]},{"Key":"with inputs","Fragments":["like"]},{"Key":"inputs like","Fragments":["that?"]},{"Key":"with @raquel","Fragments":["a"]},{"Key":"@raquel a","Fragments":["bit"]},{"Key":"bit on","Fragments":["assigning"]},{"Key":"on assigning","Fragments":["to"]},{"Key":"assigning to","Fragments":["a"]},{"Key":"variable that's","Fragments":["named"]},{"Key":"that's named","Fragments":["the"]},{"Key":"method (well,","Fragments":["close"]},{"Key":"(well, close","Fragments":["enough)"]},{"Key":"close enough)","Fragments":["only"]},{"Key":"enough) only","Fragments":["to"]},{"Key":"right away.","Fragments":["It"]},{"Key":"away. It","Fragments":["doesn't"]},{"Key":"any readability","Fragments":["IMO."]},{"Key":"There's some","Fragments":["code"]},{"Key":"duplication going","Fragments":["on"]},{"Key":"be extracted.","Fragments":["This"]},{"Key":"extracted. This","Fragments":["would"]},{"Key":"probably enhance","Fragments":["readability"]},{"Key":"enhance readability","Fragments":["as"]},{"Key":"far. A","Fragments":["few"]},{"Key":"1. ```ContaintsOnlyUpperCharacters```","Fragments":["is"]},{"Key":"```ContaintsOnlyUpperCharacters``` is","Fragments":["misspelled"]},{"Key":"2. A","Fragments":["```Regex```"]},{"Key":"A ```Regex```","Fragments":["object"]},{"Key":"is created","Fragments":["every"]},{"Key":"created every","Fragments":["time"]},{"Key":"time ```ContainsAlphaCharacters```","Fragments":["is"]},{"Key":"```ContainsAlphaCharacters``` is","Fragments":["called."]},{"Key":"called. Probably","Fragments":["not"]},{"Key":"but regex","Fragments":["compiling"]},{"Key":"regex compiling","Fragments":["is"]},{"Key":"compiling is","Fragments":["an"]},{"Key":"operation (run-time","Fragments":["compiling,"]},{"Key":"(run-time compiling,","Fragments":["not"]},{"Key":"compiling, not","Fragments":["code"]},{"Key":"not code","Fragments":["compiling)."]},{"Key":"code compiling).","Fragments":["You're"]},{"Key":"compiling). You're","Fragments":["better"]},{"Key":"You're better","Fragments":["off"]},{"Key":"static regex","Fragments":["methods"]},{"Key":"regex methods","Fragments":["or"]},{"Key":"or using","Fragments":["an"]},{"Key":"instance or","Fragments":["readonly"]},{"Key":"static ```Regex```","Fragments":["object."]},{"Key":"3. It's","Fragments":["not"]},{"Key":"obvious why","Fragments":["each"]},{"Key":"why each","Fragments":["if-block"]},{"Key":"each if-block","Fragments":["is"]},{"Key":"if-block is","Fragments":["checking"]},{"Key":"is checking","Fragments":["what"]},{"Key":"checking what","Fragments":["it's"]},{"Key":"it's checking.","Fragments":["Some"]},{"Key":"checking. Some","Fragments":["additional"]},{"Key":"Some additional","Fragments":["methods"]},{"Key":"additional methods","Fragments":["could"]},{"Key":"4. ```\u003crantynitpick\u003e```I'll","Fragments":["never"]},{"Key":"```\u003crantynitpick\u003e```I'll never","Fragments":["understand"]},{"Key":"never understand","Fragments":["return"]},{"Key":"understand return","Fragments":["objects."]},{"Key":"return objects.","Fragments":["Why"]},{"Key":"objects. Why","Fragments":["not"]},{"Key":"just return?","Fragments":["Saves"]},{"Key":"return? Saves","Fragments":["many"]},{"Key":"Saves many","Fragments":["lines"]},{"Key":"many lines","Fragments":["of"]},{"Key":"and reduces","Fragments":["some"]},{"Key":"reduces some","Fragments":["complexity"]},{"Key":"complexity (for","Fragments":["me"]},{"Key":"(for me","Fragments":["anyway)."]},{"Key":"me anyway).","Fragments":["```\u003c/rantynitpick\u003e```"]},{"Key":"right. It's","Fragments":["a"]},{"Key":"habit I","Fragments":["have"]},{"Key":"name objects","Fragments":["in"]},{"Key":"objects in","Fragments":["\"computer\""]},{"Key":"in \"computer\"","Fragments":["terms,"]},{"Key":"\"computer\" terms,","Fragments":["instead"]},{"Key":"terms, instead","Fragments":["of"]},{"Key":"with regards","Fragments":["to"]},{"Key":"they represent","Fragments":["in"]},{"Key":"represent in","Fragments":["the"]},{"Key":"problem domain.","Fragments":["I"]},{"Key":"domain. I","Fragments":["suspect"]},{"Key":"suspect it's","Fragments":["going"]},{"Key":"it's going","Fragments":["to"]},{"Key":"to shake","Fragments":["it"]},{"Key":"shake it","Fragments":["off,"]},{"Key":"it off,","Fragments":["unfortunately."]},{"Key":"off, unfortunately.","Fragments":["Thanks"]},{"Key":"unfortunately. Thanks","Fragments":["for"]},{"Key":"feedback! I've","Fragments":["amended"]},{"Key":"amended with","Fragments":["a"]},{"Key":"version where","Fragments":["variables"]},{"Key":"where variables","Fragments":["are"]},{"Key":"are named","Fragments":["as"]},{"Key":"named as","Fragments":["per"]},{"Key":"me wondering","Fragments":["what"]},{"Key":"wondering what","Fragments":["I"]},{"Key":"First thing","Fragments":["that","I'd"]},{"Key":"that jumps","Fragments":["out"]},{"Key":"jumps out","Fragments":["is"]},{"Key":"of Hungarian","Fragments":["notation"]},{"Key":"notation (sText","Fragments":["or"]},{"Key":"(sText or","Fragments":["bAllCaps)."]},{"Key":"or bAllCaps).","Fragments":["It's"]},{"Key":"bAllCaps). It's","Fragments":["generally"]},{"Key":"It's generally","Fragments":["not","considered"]},{"Key":"generally not","Fragments":["considered","used"]},{"Key":"not considered","Fragments":["good"]},{"Key":"considered good","Fragments":["practice"]},{"Key":"use HN","Fragments":["in"]},{"Key":"HN in","Fragments":["typed"]},{"Key":"in typed","Fragments":["languages"]},{"Key":"typed languages","Fragments":["such","and"]},{"Key":"languages such","Fragments":["as"]},{"Key":"There's also","Fragments":["a","no"]},{"Key":"logic crammed","Fragments":["into"]},{"Key":"crammed into","Fragments":["one"]},{"Key":"with differing","Fragments":["concerns"]},{"Key":"differing concerns","Fragments":["-"]},{"Key":"concerns -","Fragments":["determining"]},{"Key":"- determining","Fragments":["whether"]},{"Key":"determining whether","Fragments":["the"]},{"Key":"input was","Fragments":["shouted,","silence"]},{"Key":"was shouted,","Fragments":["or"]},{"Key":"shouted, or","Fragments":["a"]},{"Key":"question or","Fragments":["silence"]},{"Key":"or silence","Fragments":["etc."]},{"Key":"silence etc.","Fragments":["Might"]},{"Key":"etc. Might","Fragments":["be"]},{"Key":"separate those","Fragments":["concerns"]},{"Key":"those concerns","Fragments":["into"]},{"Key":"concerns into","Fragments":["their"]},{"Key":"few helper","Fragments":["methods"]},{"Key":"methods available","Fragments":["like"]},{"Key":"available like","Fragments":["string.IsNullOrEmpty"]},{"Key":"like string.IsNullOrEmpty","Fragments":["or"]},{"Key":"string.IsNullOrEmpty or","Fragments":["string.Trim"]},{"Key":"or string.Trim","Fragments":["that"]},{"Key":"string.Trim that","Fragments":["could"]},{"Key":"used together","Fragments":["to"]},{"Key":"tell whether","Fragments":["the"]},{"Key":"was silence","Fragments":["for"]},{"Key":"silence for","Fragments":["example"]},{"Key":"example rather","Fragments":["than"]},{"Key":"have towards","Fragments":["the"]},{"Key":"luck if","Fragments":["you","you","you","you","you"]},{"Key":"said that","Fragments":["you"]},{"Key":"keyValue variable,","Fragments":["because"]},{"Key":"variable, because","Fragments":["you"]},{"Key":"use `result.Add(value.ToLowerInvariant(),","Fragments":["dictionaryRecord.Key);`"]},{"Key":"`result.Add(value.ToLowerInvariant(), dictionaryRecord.Key);`","Fragments":[":)"]},{"Key":"Thanks, @ned","Fragments":[":)"]},{"Key":"bit here","Fragments":["about"]},{"Key":"here about","Fragments":["Random()."]},{"Key":"about Random().","Fragments":["Using"]},{"Key":"Random(). Using","Fragments":["a"]},{"Key":"static object","Fragments":["like"]},{"Key":"object like","Fragments":["a"]},{"Key":"a singleton","Fragments":["removed"]},{"Key":"singleton removed","Fragments":["the"]},{"Key":"the repeated","Fragments":["seed."]},{"Key":"turn for","Fragments":["loop"]},{"Key":"loop into","Fragments":["foreach"]},{"Key":"into foreach","Fragments":["loop"]},{"Key":"or Linq,","Fragments":["but"]},{"Key":"Can still","Fragments":["make"]},{"Key":"still make","Fragments":["Find"]},{"Key":"make Find","Fragments":["more"]},{"Key":"Find more","Fragments":["compact"]},{"Key":"1 while","Fragments":["loop"]},{"Key":"Good job!","Fragments":["I",":-)"]},{"Key":"any less","Fragments":["readable."]},{"Key":"That's another","Fragments":["way"]},{"Key":"efficient, as","Fragments":["I"]},{"Key":"the version","Fragments":["that"]},{"Key":"word will","Fragments":["still"]},{"Key":"call Char.ToLower()","Fragments":["on"]},{"Key":"Char.ToLower() on","Fragments":["each"]},{"Key":"character anyway","Fragments":["-"]},{"Key":"anyway -","Fragments":["but"]},{"Key":"little shorter","Fragments":["in"]},{"Key":"shorter in","Fragments":["my","many"]},{"Key":"completely different","Fragments":["way"]},{"Key":"other (decent)","Fragments":["solutions"]},{"Key":"(decent) solutions","Fragments":["I"]},{"Key":"be clever","Fragments":["by"]},{"Key":"clever by","Fragments":["algorithmicly"]},{"Key":"by algorithmicly","Fragments":["handling"]},{"Key":"algorithmicly handling","Fragments":["the"]},{"Key":"and 9","Fragments":["rules"]},{"Key":"9 rules","Fragments":["as"]},{"Key":"rules as","Fragments":["opposed"]},{"Key":"to recognising","Fragments":["these"]},{"Key":"recognising these","Fragments":["are"]},{"Key":"are distinct","Fragments":["number"]},{"Key":"distinct number","Fragments":["symbols"]},{"Key":"number symbols","Fragments":["in"]},{"Key":"symbols in","Fragments":["the"]},{"Key":"Roman numeral","Fragments":["system"]},{"Key":"numeral system","Fragments":["which"]},{"Key":"system which","Fragments":["makes"]},{"Key":"makes other","Fragments":["solutions"]},{"Key":"solutions easier","Fragments":["to"]},{"Key":"read (and","Fragments":["probably"]},{"Key":"(and probably","Fragments":["more"]},{"Key":"Still i","Fragments":["will"]},{"Key":"will keep","Fragments":["it"]},{"Key":"show a","Fragments":["radically","main()"]},{"Key":"a radically","Fragments":["different"]},{"Key":"radically different","Fragments":["way"]},{"Key":" Indeed!","Fragments":[":-)"]},{"Key":"need special","Fragments":["logic"]},{"Key":"special logic","Fragments":["for"]},{"Key":"logic for","Fragments":["1"]},{"Key":"and 2.","Fragments":["Can"]},{"Key":"Can put","Fragments":["is"]},{"Key":"put is","Fragments":["all"]},{"Key":"all into","Fragments":["while"]},{"Key":"into while","Fragments":["loop"]},{"Key":"with small","Fragments":["mod"]},{"Key":" @damian","Fragments":["They're"]},{"Key":"@damian They're","Fragments":["the"]},{"Key":"They're the","Fragments":["same"]},{"Key":"same methods","Fragments":["I"]},{"Key":"the Atbash","Fragments":["exercise."]},{"Key":"Atbash exercise.","Fragments":["Apologies"]},{"Key":"exercise. Apologies","Fragments":["for"]},{"Key":"Apologies for","Fragments":["the"]},{"Key":"the omission,","Fragments":["they're"]},{"Key":"omission, they're","Fragments":["included"]},{"Key":"they're included","Fragments":["in"]},{"Key":" Um","Fragments":["no,"]},{"Key":"Um no,","Fragments":["I"]},{"Key":"meant each","Fragments":["verse"]},{"Key":"verse contains","Fragments":["common"]},{"Key":"contains common","Fragments":["components"]},{"Key":"common components","Fragments":["e.g."]},{"Key":"components e.g.","Fragments":["a"]},{"Key":"e.g. a","Fragments":["\"Partridge"]},{"Key":"a \"Partridge","Fragments":["in"]},{"Key":"\"Partridge in","Fragments":["a"]},{"Key":"Tree\" in","Fragments":["all"]},{"Key":"all 12.","Fragments":["IMHO"]},{"Key":"12. IMHO","Fragments":["you"]},{"Key":"quite missing","Fragments":["the"]},{"Key":"missing the","Fragments":["point","point","point"]},{"Key":"this challenge","Fragments":["doin"]},{"Key":"challenge doin","Fragments":["it"]},{"Key":"doin it","Fragments":["this"]},{"Key":"Why hasPl*ng","Fragments":["booleans?"]},{"Key":"hasPl*ng booleans?","Fragments":["Can"]},{"Key":"booleans? Can","Fragments":["set"]},{"Key":"Can set","Fragments":["the"]},{"Key":"string directly","Fragments":["instead?"]},{"Key":"Try doing","Fragments":["it"]},{"Key":"your factor","Fragments":["code"]},{"Key":"factor code","Fragments":["from"]},{"Key":"use remainder","Fragments":["-"]},{"Key":"remainder -","Fragments":["get"]},{"Key":"- get","Fragments":["rid"]},{"Key":"have seen,","Fragments":["especially"]},{"Key":"seen, especially","Fragments":["using"]},{"Key":"especially using","Fragments":["yield!"]},{"Key":"Tuple of","Fragments":["Tuples"]},{"Key":"Tuples rather","Fragments":["a"]},{"Key":"rather a","Fragments":["dictionary?"]},{"Key":" String.Concat","Fragments":["works","is","is"]},{"Key":"String.Concat works","Fragments":["with"]},{"Key":"with enumerable,","Fragments":["no"]},{"Key":"enumerable, no","Fragments":["need"]},{"Key":"Why so","Fragments":["complicated"]},{"Key":"so complicated","Fragments":["and"]},{"Key":"complicated and","Fragments":["not","not"]},{"Key":"just .AddSeconds.","Fragments":["Minor"]},{"Key":".AddSeconds. Minor","Fragments":["adjustment"]},{"Key":"Minor adjustment","Fragments":["since"]},{"Key":"adjustment since","Fragments":["tests"]},{"Key":"since tests","Fragments":["expect"]},{"Key":"expect Date","Fragments":["without"]},{"Key":"Date without","Fragments":["time"]},{"Key":"without time","Fragments":["information."]},{"Key":"didn't look","Fragments":["at"]},{"Key":"text at","Fragments":["all,"]},{"Key":"all, when","Fragments":["starting"]},{"Key":"when starting","Fragments":["this"]},{"Key":"starting this","Fragments":["exercise."]},{"Key":"exercise. Thanks","Fragments":["for"]},{"Key":"hint. Damn","Fragments":["it."]},{"Key":"That reminds","Fragments":["me"]},{"Key":"reminds me","Fragments":["to"]},{"Key":"not start","Fragments":["thinking"]},{"Key":"about implementation","Fragments":["in"]},{"Key":"first place.","Fragments":["Rather"]},{"Key":"place. Rather","Fragments":["try"]},{"Key":"Rather try","Fragments":["to"]},{"Key":"about a","Fragments":["solution"]},{"Key":"solution instead","Fragments":["of"]},{"Key":" Short,","Fragments":["efficient"]},{"Key":"Short, efficient","Fragments":["and"]},{"Key":"readable but","Fragments":["IMHO","inefficient"]},{"Key":"but IMHO","Fragments":["the"]},{"Key":"Why create","Fragments":["legal","a"]},{"Key":"create legal","Fragments":["variable"]},{"Key":"legal variable","Fragments":["then"]},{"Key":"unique elements","Fragments":["of"]},{"Key":"words -","Fragments":["i"]},{"Key":"i a","Fragments":["o"]},{"Key":"a o","Fragments":["-"]},{"Key":"o -","Fragments":["but"]},{"Key":"dictionary like","Fragments":["you."]},{"Key":"like foreach","Fragments":["given"]},{"Key":"foreach given","Fragments":["a"]},{"Key":"linq equivalent","Fragments":["and"]},{"Key":"equivalent and","Fragments":["no","at"]},{"Key":"no IMHO","Fragments":["performance"]},{"Key":"IMHO performance","Fragments":["hit"]},{"Key":" Far","Fragments":["too","too"]},{"Key":"Far too","Fragments":["complicated","long"]},{"Key":" List","Fragments":["could"]},{"Key":"List could","Fragments":["be"]},{"Key":"be IEnumerable","Fragments":["so"]},{"Key":"IEnumerable so","Fragments":["no"]},{"Key":"no List","Fragments":["cast"]},{"Key":"List cast","Fragments":["required"]},{"Key":"site the","Fragments":["sort"]},{"Key":"sort form","Fragments":["of"]},{"Key":"a giga","Fragments":["\"1E9\"!"]},{"Key":"Why ICollection","Fragments":["and"]},{"Key":"ICollection and","Fragments":["IEnumerable?"]},{"Key":"call another","Fragments":["or","constructor"]},{"Key":"another or","Fragments":["this"]},{"Key":"or this","Fragments":["way"]},{"Key":"way instead.","Fragments":["Good"]},{"Key":"instead. Good","Fragments":["example"]},{"Key":" Everyone","Fragments":["is"]},{"Key":"Everyone is","Fragments":["using"]},{"Key":"foreach rather","Fragments":["than","than"]},{"Key":"using (var","Fragments":["item"]},{"Key":"(var item","Fragments":["="]},{"Key":"item =","Fragments":["list.GetEnumerator())"]},{"Key":"= list.GetEnumerator())","Fragments":["not"]},{"Key":"list.GetEnumerator()) not","Fragments":["sure"]},{"Key":"is clearer...","Fragments":["(foreach"]},{"Key":"clearer... (foreach","Fragments":["is"]},{"Key":"(foreach is","Fragments":["syntactic"]},{"Key":"is syntactic","Fragments":["sugar","sugar","sugar","sugar","sugar"]},{"Key":"sugar or","Fragments":["is"]},{"Key":"There only","Fragments":["needs"]},{"Key":"only needs","Fragments":["to"]},{"Key":"1 Keep","Fragments":["and"]},{"Key":"Keep and","Fragments":["1"]},{"Key":"and 1","Fragments":["Discard"]},{"Key":"1 Discard","Fragments":["method"]},{"Key":"a weird","Fragments":["\"Iterator"]},{"Key":"weird \"Iterator","Fragments":["cannot"]},{"Key":"\"Iterator cannot","Fragments":["contain"]},{"Key":"cannot contain","Fragments":["'return'"]},{"Key":"contain 'return'","Fragments":["statement\""]},{"Key":"'return' statement\"","Fragments":["in"]},{"Key":"statement\" in","Fragments":["Discard,"]},{"Key":"in Discard,","Fragments":["which"]},{"Key":"Discard, which","Fragments":["was"]},{"Key":"was somehow","Fragments":["due"]},{"Key":"somehow due","Fragments":["to"]},{"Key":"to unreachable","Fragments":["code"]},{"Key":"having (yet)","Fragments":["been"]},{"Key":"(yet) been","Fragments":["deleted."]},{"Key":"Why Contains","Fragments":["method()?"]},{"Key":"Contains method()?","Fragments":["Should"]},{"Key":"method()? Should","Fragments":["not"]},{"Key":"Should not","Fragments":["be","expose"]},{"Key":" `year","Fragments":["%","%"]},{"Key":"0` already","Fragments":["resolves"]},{"Key":"already resolves","Fragments":["to"]},{"Key":"resolves to","Fragments":["a"]},{"Key":"boolean value,","Fragments":["so"]},{"Key":"value, so","Fragments":["just"]},{"Key":"that rather","Fragments":["than"]},{"Key":"than go","Fragments":["through"]},{"Key":"statement. Yours","Fragments":["is"]},{"Key":"Yours is","Fragments":["essentially","good","definitely"]},{"Key":"if (the","Fragments":["compound"]},{"Key":"(the compound","Fragments":["statement"]},{"Key":"compound statement","Fragments":["is"]},{"Key":"the dnaCharArray?","Fragments":["Couldn't"]},{"Key":"dnaCharArray? Couldn't","Fragments":["you"]},{"Key":"easily take","Fragments":["that"]},{"Key":"do foreach","Fragments":["(char"]},{"Key":"The example","Fragments":["in"]},{"Key":"example in","Fragments":["the"]},{"Key":"the InvalidNucleotideException","Fragments":["if"]},{"Key":"InvalidNucleotideException if","Fragments":["the"]},{"Key":"char passed","Fragments":["is"]},{"Key":"passed is","Fragments":["'X',"]},{"Key":"is 'X',","Fragments":["but"]},{"Key":"'X', but","Fragments":["this"]},{"Key":"also happen","Fragments":["for"]},{"Key":"happen for","Fragments":["anything"]},{"Key":"anything passed","Fragments":["that"]},{"Key":"passed that","Fragments":["is"]},{"Key":"no 'A',","Fragments":["'C',"]},{"Key":"'A', 'C',","Fragments":["'G',"]},{"Key":"'C', 'G',","Fragments":["or"]},{"Key":"'G', or","Fragments":["'T'."]},{"Key":"for exceptions","Fragments":["first,"]},{"Key":"exceptions first,","Fragments":["and"]},{"Key":"and shortcut","Fragments":["them"]},{"Key":"shortcut them","Fragments":["out."]},{"Key":"out. However,","Fragments":["I"]},{"Key":"the simplicity","Fragments":["in"]},{"Key":"simplicity in","Fragments":["the"]},{"Key":"On review,","Fragments":["I"]},{"Key":"review, I","Fragments":["think"]},{"Key":"that I'll","Fragments":["make"]},{"Key":"I combined","Fragments":["two"]},{"Key":"combined two","Fragments":["conditionals"]},{"Key":"two conditionals","Fragments":["to"]},{"Key":"Since you've","Fragments":["mastered"]},{"Key":"you've mastered","Fragments":["this"]},{"Key":"mastered this","Fragments":["very"]},{"Key":"very well,","Fragments":["there's"]},{"Key":"well, there's","Fragments":["a"]},{"Key":"a `DateTime.IsLeapYear()`","Fragments":["function"]},{"Key":"`DateTime.IsLeapYear()` function","Fragments":["that"]},{"Key":"that accomplishes","Fragments":["the"]},{"Key":"poor especially","Fragments":["the","the"]},{"Key":"the fixed","Fragments":["5","5"]},{"Key":"fixed 5","Fragments":["count","count"]},{"Key":"5 count","Fragments":["for","for"]},{"Key":"count for","Fragments":["\"Normalized\"","\"Normalized\""]},{"Key":"for \"Normalized\"","Fragments":["cipher","cipher"]},{"Key":"\"Normalized\" cipher","Fragments":["text","text"]},{"Key":"text (I","Fragments":["made"]},{"Key":"code pass","Fragments":["the","the","the"]},{"Key":"it wasted","Fragments":["my","my"]},{"Key":"wasted my","Fragments":["time","time"]},{"Key":"my time","Fragments":["to","to"]},{"Key":"to puzzle","Fragments":["out).","out","out).","that"]},{"Key":"puzzle out).","Fragments":["How","How"]},{"Key":"out). How","Fragments":["can","can"]},{"Key":"can we","Fragments":["improve","improve"]},{"Key":"we improve","Fragments":["these","these"]},{"Key":"improve these","Fragments":["tests","tests"]},{"Key":"future users","Fragments":["here?","here?"]},{"Key":"a ```foreach```","Fragments":["is"]},{"Key":"```foreach``` is","Fragments":["clearer."]},{"Key":"clearer. C#","Fragments":["has"]},{"Key":"has had","Fragments":["```foreach```"]},{"Key":"had ```foreach```","Fragments":["since"]},{"Key":"```foreach``` since","Fragments":["day","you're"]},{"Key":"since day","Fragments":["one"]},{"Key":"day one","Fragments":["and"]},{"Key":"using ```list.GetEnumerator()```","Fragments":["would"]},{"Key":"```list.GetEnumerator()``` would","Fragments":["seem"]},{"Key":"bonus spec","Fragments":["to"]},{"Key":"spec to","Fragments":["not","pass"]},{"Key":"duplicate names.","Fragments":["I"]},{"Key":"to mean","Fragments":["concurrent"]},{"Key":"mean concurrent","Fragments":["duplicate"]},{"Key":"concurrent duplicate","Fragments":["names"]},{"Key":"duplicate names","Fragments":["and"]},{"Key":"of current","Fragments":["robot"]},{"Key":"current robot","Fragments":["names"]},{"Key":"robot names","Fragments":["when"]},{"Key":"you reset","Fragments":["the"]},{"Key":"reset the","Fragments":["name"]},{"Key":"name putting","Fragments":["the"]},{"Key":"old name","Fragments":["back"]},{"Key":"name back","Fragments":["into"]},{"Key":"the pool","Fragments":["of"]},{"Key":"pool of","Fragments":["available"]},{"Key":"of available","Fragments":["names."]},{"Key":"took out","Fragments":["duplicate"]},{"Key":"work there","Fragments":["are"]},{"Key":"no Chuck()","Fragments":["or"]},{"Key":"Chuck() or","Fragments":["GroupIn()"]},{"Key":"or GroupIn()","Fragments":["extension"]},{"Key":"GroupIn() extension","Fragments":["methods"]},{"Key":"and whatever","Fragments":["these"]},{"Key":"whatever these","Fragments":["are"]},{"Key":"are should","Fragments":["be"]},{"Key":"conditionals `year","Fragments":["%"]},{"Key":"0` resolve","Fragments":["to"]},{"Key":"resolve to","Fragments":["boolean"]},{"Key":"boolean values","Fragments":["anyway,"]},{"Key":"values anyway,","Fragments":["you"]},{"Key":"anyway, you","Fragments":["don't"]},{"Key":"`return (condition1","Fragments":["\u0026\u0026"]},{"Key":"(condition1 \u0026\u0026","Fragments":["!condition2)","!condition2)"]},{"Key":"\u0026\u0026 !condition2)","Fragments":["||","||"]},{"Key":"!condition2) ||","Fragments":["condition3`","condition3"]},{"Key":"|| condition3`","Fragments":["(I'll"]},{"Key":"condition3` (I'll","Fragments":["leave"]},{"Key":"(I'll leave","Fragments":["the"]},{"Key":"the specifics","Fragments":["up"]},{"Key":"specifics up","Fragments":["to"]},{"Key":" @tabitha,","Fragments":["thanks."]},{"Key":"@tabitha, thanks.","Fragments":["I"]},{"Key":"whole problem","Fragments":["just"]},{"Key":"problem just","Fragments":["felt"]},{"Key":"just felt","Fragments":["too"]},{"Key":"felt too","Fragments":["easy"]},{"Key":"easy so","Fragments":["I"]},{"Key":"to justify","Fragments":["it"]},{"Key":"justify it","Fragments":["a"]},{"Key":"bit by","Fragments":["writing"]},{"Key":"writing more","Fragments":["code"]},{"Key":"better challenge","Fragments":["solve"]},{"Key":"challenge solve","Fragments":["without"]},{"Key":"solve without","Fragments":["using"]},{"Key":"using power","Fragments":["function."]},{"Key":"power function.","Fragments":["Getting"]},{"Key":"function. Getting","Fragments":["annoyed"]},{"Key":"Getting annoyed","Fragments":["at"]},{"Key":"annoyed at","Fragments":["the"]},{"Key":"the inconsistent","Fragments":["quality"]},{"Key":"inconsistent quality","Fragments":["of"]},{"Key":" @bulah,","Fragments":["actually"]},{"Key":"@bulah, actually","Fragments":["an"]},{"Key":"actually an","Fragments":["array"]},{"Key":"Dictionary because","Fragments":["it"]},{"Key":"guarantee that","Fragments":["the"]},{"Key":"of items","Fragments":["will"]},{"Key":"items will","Fragments":["be"]},{"Key":"specific order.","Fragments":["It"]},{"Key":"order. It","Fragments":["works"]},{"Key":"on Windows,","Fragments":["but"]},{"Key":"Windows, but","Fragments":["it"]},{"Key":"use `ToArray()`","Fragments":["because"]},{"Key":"`ToArray()` because","Fragments":["`words.Any()`"]},{"Key":"because `words.Any()`","Fragments":["and"]},{"Key":"`words.Any()` and","Fragments":["`String.Concat(words)`"]},{"Key":"and `String.Concat(words)`","Fragments":["would"]},{"Key":"`String.Concat(words)` would","Fragments":["cause"]},{"Key":"cause multiple","Fragments":["iterations"]},{"Key":"multiple iterations","Fragments":["of"]},{"Key":"the `IEnumerable`.","Fragments":["Probably"]},{"Key":"`IEnumerable`. Probably","Fragments":["a"]},{"Key":"waste in","Fragments":["this"]},{"Key":"The user","Fragments":["commenting"]},{"Key":"user commenting","Fragments":["above"]},{"Key":"commenting above","Fragments":["was"]},{"Key":"above was","Fragments":["saying"]},{"Key":"was saying","Fragments":["that"]},{"Key":"return (condition1","Fragments":["\u0026\u0026"]},{"Key":"statement I","Fragments":["just"]},{"Key":"just wrote,","Fragments":["and"]},{"Key":"wrote, and","Fragments":["the"]},{"Key":"test with","Fragments":["NUnit.",".HasFlag()?"]},{"Key":"find another","Fragments":["way."]},{"Key":"another way.","Fragments":["Is"]},{"Key":"way. Is","Fragments":["there"]},{"Key":"an easier","Fragments":["way"]},{"Key":"object for","Fragments":["reference."]},{"Key":"Edit: Never","Fragments":["mind,"]},{"Key":"Never mind,","Fragments":["I"]},{"Key":"mind, I","Fragments":["figured"]},{"Key":"a stub","Fragments":["and"]},{"Key":"stub and","Fragments":["check"]},{"Key":"the .exe","Fragments":["instead"]},{"Key":".exe instead","Fragments":["of"]},{"Key":"the DLL.","Fragments":["Any"]},{"Key":"DLL. Any","Fragments":["input"]},{"Key":"Any input","Fragments":["would"]},{"Key":"input would","Fragments":["still"]},{"Key":"initial pass","Fragments":["at"]},{"Key":"pass at","Fragments":["a"]},{"Key":"things here.","Fragments":["I"]},{"Key":"I fully","Fragments":["expect"]},{"Key":"fully expect","Fragments":["to"]},{"Key":"refactor this","Fragments":["tomorrow,","to","into"]},{"Key":"this tomorrow,","Fragments":["but"]},{"Key":"tomorrow, but","Fragments":["this"]},{"Key":"this does","Fragments":["pass"]},{"Key":"seemed fairly","Fragments":["straightforward."]},{"Key":"fairly straightforward.","Fragments":["If"]},{"Key":"straightforward. If","Fragments":["I"]},{"Key":"missed anything","Fragments":["that"]},{"Key":"this simpler,","Fragments":["then"]},{"Key":"simpler, then","Fragments":["please"]},{"Key":"then please","Fragments":["let"]},{"Key":"the tertiary","Fragments":["test"]},{"Key":"tertiary test","Fragments":["for"]},{"Key":"for encoding","Fragments":["a"]},{"Key":"encoding a","Fragments":["char"]},{"Key":"Otherwise a","Fragments":["very"]},{"Key":"very efficient,short","Fragments":["and"]},{"Key":"efficient,short and","Fragments":["readable"]},{"Key":"meant \"without\"","Fragments":["!!!"]},{"Key":"\"without\" !!!","Fragments":[":-0"]},{"Key":"would much","Fragments":["shorter,"]},{"Key":"much shorter,","Fragments":["more"]},{"Key":"shorter, more","Fragments":["efficient"]},{"Key":"Why String.Join(\"\",","Fragments":["over"]},{"Key":"String.Join(\"\", over","Fragments":["String.Concat("]},{"Key":"over String.Concat(","Fragments":["the"]},{"Key":"String.Concat( the","Fragments":["latter"]},{"Key":"latter is","Fragments":["surely"]},{"Key":"surely that","Fragments":["more"]},{"Key":"without for","Fragments":["loops"]},{"Key":"Hard coding","Fragments":["cipher"]},{"Key":"coding cipher","Fragments":["lookup"]},{"Key":"cipher lookup","Fragments":["is"]},{"Key":"lookup is","Fragments":["overkill,"]},{"Key":"is overkill,","Fragments":["try"]},{"Key":"overkill, try","Fragments":["without."]},{"Key":"in StringExtensions","Fragments":["-"]},{"Key":"StringExtensions -","Fragments":["have"]},{"Key":"- have","Fragments":["you"]},{"Key":" Dictionaries","Fragments":["look","looks"]},{"Key":"Dictionaries look","Fragments":["like"]},{"Key":"like overkill","Fragments":["here?","here"]},{"Key":"overkill here?","Fragments":["And"]},{"Key":"here? And","Fragments":["hard"]},{"Key":"And hard","Fragments":["coding"]},{"Key":"coding both","Fragments":["of"]},{"Key":"Thanks Tyler1986,","Fragments":["Works,"]},{"Key":"Tyler1986, Works,","Fragments":["nicely"]},{"Key":"Works, nicely","Fragments":[":)"]},{"Key":" Efficient","Fragments":["and"]},{"Key":"Efficient and","Fragments":["I"]},{"Key":"string however,","Fragments":["IMHO"]},{"Key":"however, IMHO","Fragments":["not"]},{"Key":"IMHO not","Fragments":["very"]},{"Key":"readable there","Fragments":["is"]},{"Key":"puzzle out","Fragments":["to"]},{"Key":"Try this","Fragments":["without","without","without"]},{"Key":"lookup alphabet?","Fragments":["Think"]},{"Key":"alphabet? Think","Fragments":["that"]},{"Key":"Think that","Fragments":["is"]},{"Key":" Point","Fragments":["taken."]},{"Key":"Still you","Fragments":["can"]},{"Key":"solution 2","Fragments":["methods"]},{"Key":" 509","Fragments":["is"]},{"Key":"509 is","Fragments":["not"]},{"Key":"the ingredients.","Fragments":["If"]},{"Key":"ingredients. If","Fragments":["you"]},{"Key":"you looked","Fragments":["at"]},{"Key":"at flagged","Fragments":["enums"]},{"Key":"flagged enums","Fragments":["and"]},{"Key":"enums and","Fragments":["how"]},{"Key":"how decimal","Fragments":["powers"]},{"Key":"decimal powers","Fragments":["of"]},{"Key":"powers of","Fragments":["two"]},{"Key":"of two","Fragments":["relates"]},{"Key":"two relates","Fragments":["to"]},{"Key":"relates to","Fragments":["bit"]},{"Key":"to bit","Fragments":["arrays"]},{"Key":"bit arrays","Fragments":["then"]},{"Key":"arrays then","Fragments":["you"]},{"Key":"long to","Fragments":["be"]},{"Key":"readable, can","Fragments":["be"]},{"Key":"made shorter","Fragments":["and"]},{"Key":" They","Fragments":["are","are"]},{"Key":"They are","Fragments":["indeed,","all","clear"]},{"Key":"are indeed,","Fragments":["a"]},{"Key":"indeed, a","Fragments":["rather"]},{"Key":"a rather","Fragments":["pointless","silly"]},{"Key":"rather pointless","Fragments":["exercise"]},{"Key":"pointless exercise","Fragments":["for"]},{"Key":"exercise for","Fragments":["us."]},{"Key":"for us.","Fragments":["A"]},{"Key":"us. A","Fragments":["much"]},{"Key":"A much","Fragments":["better"]},{"Key":"better one","Fragments":["was"]},{"Key":"generalize binary","Fragments":["to"]},{"Key":"binary to","Fragments":["trinary","decimal","see"]},{"Key":"to trinary","Fragments":["etc."]},{"Key":"we provide","Fragments":["feedback"]},{"Key":"provide feedback","Fragments":["on","on"]},{"Key":" Andreas","Fragments":["all"]},{"Key":"Andreas all","Fragments":["your"]},{"Key":"far far","Fragments":["too"]},{"Key":"too long,","Fragments":["look"]},{"Key":"long, look","Fragments":["at"]},{"Key":"solutions (not","Fragments":["just"]},{"Key":"(not just","Fragments":["in"]},{"Key":"just in","Fragments":["this"]},{"Key":"this excercise)","Fragments":["to"]},{"Key":"excercise) to","Fragments":["get"]},{"Key":"the writing,","Fragments":["efficiency"]},{"Key":"writing, efficiency","Fragments":["and"]},{"Key":"without dictionaries","Fragments":["or"]},{"Key":"or equivalent","Fragments":["and"]},{"Key":"a maximum","Fragments":["only"]},{"Key":"maximum only","Fragments":["one?"]},{"Key":"basic version","Fragments":["that"]},{"Key":"all tests.","Fragments":["I"]},{"Key":"I plan","Fragments":["to"]},{"Key":"plan to","Fragments":["explore","remove"]},{"Key":"to explore","Fragments":["some"]},{"Key":"explore some","Fragments":["different"]},{"Key":"some different","Fragments":["ways"]},{"Key":"reading restrictions","Fragments":["more"]},{"Key":"restrictions more","Fragments":["stricly"]},{"Key":"more stricly","Fragments":["but"]},{"Key":"stricly but","Fragments":["don't"]},{"Key":"think anyone","Fragments":["should"]},{"Key":"anyone should","Fragments":["be"]},{"Key":"using \"foreach\"","Fragments":["in"]},{"Key":"\"foreach\" in","Fragments":["particular."]},{"Key":"This source","Fragments":["is"]},{"Key":"far to","Fragments":["long"]},{"Key":"to long","Fragments":["and"]},{"Key":"made far","Fragments":["shorter"]},{"Key":"far shorter","Fragments":["in"]},{"Key":"using `Func\u003cT,","Fragments":["bool\u003e`,"]},{"Key":"`Func\u003cT, bool\u003e`,","Fragments":["you"]},{"Key":"bool\u003e`, you","Fragments":["can"]},{"Key":"use `Predicate\u003cT\u003e`,","Fragments":["which"]},{"Key":"`Predicate\u003cT\u003e`, which","Fragments":["is"]},{"Key":"equivalent but","Fragments":["expresses"]},{"Key":"but expresses","Fragments":["the"]},{"Key":"expresses the","Fragments":["intent"]},{"Key":"intent slightly","Fragments":["better."]},{"Key":"text whihc","Fragments":["does"]},{"Key":"whihc does","Fragments":["not"]},{"Key":"Readme spec","Fragments":["(I"]},{"Key":"spec (I","Fragments":["made"]},{"Key":"use ToDictionary","Fragments":["in"]},{"Key":"ToDictionary in","Fragments":["static"]},{"Key":"static constructor?","Fragments":["That"]},{"Key":"constructor? That","Fragments":["is"]},{"Key":"c# standard","Fragments":["idiom"]},{"Key":"standard idiom","Fragments":["for"]},{"Key":"idiom for","Fragments":["inverting"]},{"Key":"for inverting","Fragments":["dictionary"]},{"Key":"inverting dictionary","Fragments":["keys"]},{"Key":"dictionary keys","Fragments":["and"]},{"Key":"Dictionaries looks","Fragments":["like"]},{"Key":"with char","Fragments":["arrays,"]},{"Key":"up swapping","Fragments":["over"]},{"Key":"swapping over","Fragments":["to"]},{"Key":"to Regex.","Fragments":["Being"]},{"Key":"Regex. Being","Fragments":["able"]},{"Key":"Being able","Fragments":["to","to"]},{"Key":"end character","Fragments":["was"]},{"Key":"set Dictionary","Fragments":["values."]},{"Key":"Dictionary values.","Fragments":["I"]},{"Key":"line instead","Fragments":["of"]},{"Key":"of setting","Fragments":["things"]},{"Key":"setting things","Fragments":["up"]},{"Key":"constructor using","Fragments":["Lazy\u003cT\u003e"]},{"Key":"using Lazy\u003cT\u003e","Fragments":["but"]},{"Key":"Lazy\u003cT\u003e but","Fragments":["why?"]},{"Key":"but why?","Fragments":["Why"]},{"Key":"why? Why","Fragments":["not"]},{"Key":"just run","Fragments":["when"]},{"Key":"when getted","Fragments":["from"]},{"Key":"getted from","Fragments":["Primes?"]},{"Key":" Update","Fragments":["I"]},{"Key":"Update I","Fragments":["take"]},{"Key":"take this","Fragments":["back"]},{"Key":"this back","Fragments":["getter"]},{"Key":"back getter","Fragments":["should"]},{"Key":"getter should","Fragments":["not"]},{"Key":"not throw","Fragments":["exceptions"]},{"Key":"throw exceptions","Fragments":["http://msdn.microsoft.com/en-us/library/bb386039.aspx"]},{"Key":"constructor. One","Fragments":["can"]},{"Key":"then calculate","Fragments":["the"]},{"Key":"score on","Fragments":["it"]},{"Key":"when asked","Fragments":["rather"]},{"Key":"asked rather","Fragments":["than"]},{"Key":"score up","Fragments":["front."]},{"Key":"front. Errors","Fragments":["in"]},{"Key":"Errors in","Fragments":["a"]},{"Key":"track down","Fragments":["especially"]},{"Key":"down especially","Fragments":["if"]},{"Key":"if using","Fragments":["any"]},{"Key":"using any","Fragments":["sort"]},{"Key":"of Dependency","Fragments":["Injection"]},{"Key":"Dependency Injection","Fragments":["(DI)"]},{"Key":"Injection (DI)","Fragments":["framework."]},{"Key":"the Scrabble","Fragments":["class"]},{"Key":"Scrabble class","Fragments":["each"]},{"Key":"class each","Fragments":["time"]},{"Key":"function Score","Fragments":["is"]},{"Key":"Score is","Fragments":["called."]},{"Key":"called. The","Fragments":["instance"]},{"Key":"The instance","Fragments":["version"]},{"Key":"instance version","Fragments":["can","call"]},{"Key":"version can","Fragments":["see"]},{"Key":"see (and","Fragments":["call)"]},{"Key":"(and call)","Fragments":["the"]},{"Key":"call) the","Fragments":["static"]},{"Key":"version so","Fragments":["a"]},{"Key":"better shape","Fragments":["is"]},{"Key":"shape is","Fragments":["to"]},{"Key":"version call","Fragments":["the"]},{"Key":"// calculate","Fragments":["the"]},{"Key":"Minor syntax","Fragments":["nitpick."]},{"Key":"syntax nitpick.","Fragments":["There"]},{"Key":"nitpick. There","Fragments":["is"]},{"Key":"need use","Fragments":["a"]},{"Key":"lamba in","Fragments":["the"]},{"Key":"the `Sum`,","Fragments":["the"]},{"Key":"`Sum`, the","Fragments":["function"]},{"Key":"name will","Fragments":["suffice"]},{"Key":"return word","Fragments":["=="]},{"Key":" Brilliant","Fragments":["solution!"]},{"Key":"completely agree","Fragments":["about"]},{"Key":"and static","Fragments":["function"]},{"Key":"function remarks.","Fragments":["Normally,"]},{"Key":"remarks. Normally,","Fragments":["the"]},{"Key":"Normally, the","Fragments":["lambda"]},{"Key":"lambda could","Fragments":["indeed"]},{"Key":"could indeed","Fragments":["be"]},{"Key":"indeed be","Fragments":["used"]},{"Key":"just specifying","Fragments":["the"]},{"Key":"specifying the","Fragments":["function","types,","types,"]},{"Key":"function name,","Fragments":["but"]},{"Key":"compiler error","Fragments":["as"]},{"Key":"cannot determine","Fragments":["which"]},{"Key":"determine which","Fragments":["overload"]},{"Key":"which overload","Fragments":["to"]},{"Key":"overload to","Fragments":["call."]},{"Key":"like Execute","Fragments":["returning"]},{"Key":"Execute returning","Fragments":["void,"]},{"Key":"returning void,","Fragments":["better"]},{"Key":"void, better","Fragments":["to"]},{"Key":" Core","Fragments":["logic"]},{"Key":"Core logic","Fragments":["is"]},{"Key":"is well","Fragments":["implemeneted"]},{"Key":"was initially","Fragments":["thinking"]},{"Key":"initially thinking","Fragments":["about"]},{"Key":"about Regex","Fragments":["here,"]},{"Key":"Regex here,","Fragments":["but"]},{"Key":"but building","Fragments":["a"]},{"Key":"of digits","Fragments":["seemed"]},{"Key":"digits seemed","Fragments":["more"]},{"Key":"straightforward and","Fragments":["easier"]},{"Key":" Required","Fragments":["by"]},{"Key":"Required by","Fragments":["the"]},{"Key":"the tests:","Fragments":["Keep_arrays()"]},{"Key":"tests: Keep_arrays()","Fragments":["and"]},{"Key":"Keep_arrays() and","Fragments":["Discard_arrays()"]},{"Key":"see you're","Fragments":["using"]},{"Key":"using Hungarian","Fragments":["Notation"]},{"Key":"Hungarian Notation","Fragments":["which"]},{"Key":"Notation which","Fragments":["is"]},{"Key":"for typed","Fragments":["languages"]},{"Key":"languages and","Fragments":["is"]},{"Key":"the Microsoft","Fragments":["guidelines."]},{"Key":"quite sure","Fragments":["why"]},{"Key":"implementation. Generally","Fragments":["StringBuilder"]},{"Key":"Generally StringBuilder","Fragments":["is"]},{"Key":"you're concatenating","Fragments":["a"]},{"Key":"concatenating a","Fragments":["lot"]},{"Key":"strings onto","Fragments":["one"]},{"Key":"one existing","Fragments":["string."]},{"Key":"existing string.","Fragments":["As"]},{"Key":"string. As","Fragments":["you"]},{"Key":"with blabla","Fragments":["="]},{"Key":"blabla =","Fragments":["blabla.Trim()."]},{"Key":"with \"blabla\"","Fragments":["but"]},{"Key":"\"blabla\" but","Fragments":["it"]},{"Key":"have me","Fragments":["scratching"]},{"Key":"me scratching","Fragments":["my"]},{"Key":"scratching my","Fragments":["head"]},{"Key":"head until","Fragments":["I"]},{"Key":"realised it","Fragments":["was"]},{"Key":"input. Maybe","Fragments":["a"]},{"Key":"Lastly, as","Fragments":["you're"]},{"Key":"returning within","Fragments":["each"]},{"Key":"within each","Fragments":["of"]},{"Key":"if constructs","Fragments":["the"]},{"Key":"constructs the","Fragments":["else"]},{"Key":"redundant as","Fragments":["is","well"]},{"Key":"else at","Fragments":["the"]},{"Key":"nice though","Fragments":["I'll"]},{"Key":"though I'll","Fragments":["have"]},{"Key":"take your","Fragments":["word"]},{"Key":"your word","Fragments":["that"]},{"Key":"correct pattern","Fragments":[":)"]},{"Key":"update sayingArray","Fragments":["var,"]},{"Key":"sayingArray var,","Fragments":["that's"]},{"Key":"var, that's","Fragments":["what"]},{"Key":"don't run","Fragments":["your"]},{"Key":"tests after","Fragments":["a"]},{"Key":"trivial code","Fragments":["update!"]},{"Key":"is picked","Fragments":["up"]},{"Key":"by IsNullOrWhiteSpace","Fragments":["-"]},{"Key":"IsNullOrWhiteSpace -","Fragments":["good"]},{"Key":" String.EndsWith()","Fragments":["is"]},{"Key":"String.EndsWith() is","Fragments":["so"]},{"Key":"nicer than","Fragments":["getting"]},{"Key":"than getting","Fragments":["the"]},{"Key":"think removing","Fragments":["the"]},{"Key":"help readability.","Fragments":["I'm"]},{"Key":"all for","Fragments":["deleting","loops"]},{"Key":"for deleting","Fragments":["unnecessary"]},{"Key":"deleting unnecessary","Fragments":["code"]},{"Key":"method helps","Fragments":["make"]},{"Key":"helps make","Fragments":["what's"]},{"Key":"happening more","Fragments":["clear."]},{"Key":"simple approach.","Fragments":["I"]},{"Key":"I'll refactor","Fragments":["this"]},{"Key":"actually reference","Fragments":["prime"]},{"Key":"reference prime","Fragments":["numbers"]},{"Key":"seeing anything","Fragments":["in"]},{"Key":"lookup alphabet","Fragments":["(some"]},{"Key":"alphabet (some","Fragments":["languages"]},{"Key":"(some languages","Fragments":["actually"]},{"Key":"languages actually","Fragments":["require"]},{"Key":"actually require","Fragments":["it)."]},{"Key":"require it).","Fragments":["I"]},{"Key":"it). I","Fragments":["know"]},{"Key":"know character","Fragments":["arithmetic"]},{"Key":"character arithmetic","Fragments":["is"]},{"Key":"arithmetic is","Fragments":["possible"]},{"Key":"C# but","Fragments":["I"]},{"Key":"sometimes error","Fragments":["prone."]},{"Key":"prone. What","Fragments":["are"]},{"Key":"your reasons","Fragments":["for"]},{"Key":"reasons for","Fragments":["going"]},{"Key":"for going","Fragments":["with"]},{"Key":"with character","Fragments":["arithmetic?"]},{"Key":"disagree. The","Fragments":["private"]},{"Key":"The private","Fragments":["method"]},{"Key":"method adds","Fragments":["an"]},{"Key":"extra step","Fragments":["in"]},{"Key":"step in","Fragments":["readability.","the"]},{"Key":"readability. It","Fragments":["could"]},{"Key":"either Keep","Fragments":["or"]},{"Key":"Keep or","Fragments":["Discard"]},{"Key":"or Discard","Fragments":["and"]},{"Key":"Discard and","Fragments":["then"]},{"Key":"then other","Fragments":["method"]},{"Key":"calls the","Fragments":["former.","same"]},{"Key":"OTOH yours","Fragments":["is"]},{"Key":"far better","Fragments":["than","(efficient)"]},{"Key":"any others","Fragments":["I"]},{"Key":"others I","Fragments":["have"]},{"Key":"getting silly","Fragments":["after"]},{"Key":"silly after","Fragments":["Binary"]},{"Key":"after Binary","Fragments":["and"]},{"Key":"Trinary exercises.","Fragments":["The"]},{"Key":"exercises. The","Fragments":["Readme"]},{"Key":"The Readme","Fragments":["is"]},{"Key":"Readme is","Fragments":["clearly"]},{"Key":"clearly not","Fragments":["written"]},{"Key":"written for","Fragments":["c#"]},{"Key":"for c#","Fragments":["but"]},{"Key":"but Ruby","Fragments":["which"]},{"Key":"Ruby which","Fragments":["explains"]},{"Key":"which explains","Fragments":["some"]},{"Key":"explains some","Fragments":["of"]},{"Key":"other trivial","Fragments":["challenges."]},{"Key":"The c#","Fragments":["exercises"]},{"Key":"c# exercises","Fragments":["need"]},{"Key":"exercises need","Fragments":["to"]},{"Key":"be properly","Fragments":["reviewed"]},{"Key":"power function","Fragments":["and"]},{"Key":" Aha..","Fragments":["the","I"]},{"Key":"Aha.. the","Fragments":["\"using"]},{"Key":"the \"using","Fragments":["System.Linq;\""]},{"Key":"\"using System.Linq;\"","Fragments":["was"]},{"Key":"System.Linq;\" was","Fragments":["deleted"]},{"Key":"was deleted","Fragments":["by"]},{"Key":"deleted by","Fragments":["mistake"]},{"Key":"by mistake","Fragments":["from"]},{"Key":"mistake from","Fragments":["the"]},{"Key":"test file..","Fragments":["After"]},{"Key":"file.. After","Fragments":["adding"]},{"Key":"After adding","Fragments":["it"]},{"Key":"adding it","Fragments":["it's","to"]},{"Key":"it it's","Fragments":["OK"]},{"Key":"it's OK","Fragments":["to"]},{"Key":"remove Contains","Fragments":["method"]},{"Key":"is another","Fragments":["pretty"]},{"Key":"another pretty","Fragments":["straightforward"]},{"Key":"Look remarkably","Fragments":["similar"]},{"Key":"remarkably similar","Fragments":["to"]},{"Key":"solution :-)","Fragments":["but"]},{"Key":":-) but","Fragments":["then"]},{"Key":"then these","Fragments":["should"]},{"Key":"these should","Fragments":["all"]},{"Key":"all converge.","Fragments":["Remember"]},{"Key":"converge. Remember","Fragments":["we"]},{"Key":"Remember we","Fragments":["are"]},{"Key":"all here","Fragments":["to"]},{"Key":"to *learn*","Fragments":["from"]},{"Key":"*learn* from","Fragments":["one"]},{"Key":"Given the","Fragments":["basic","nature"]},{"Key":"basic principles","Fragments":["of"]},{"Key":"principles of","Fragments":["writing"]},{"Key":"of writing","Fragments":["good"]},{"Key":"good code,","Fragments":["readability,"]},{"Key":"code, readability,","Fragments":["efficiency,"]},{"Key":"readability, efficiency,","Fragments":["maintainability"]},{"Key":"efficiency, maintainability","Fragments":["etc."]},{"Key":"is anyway","Fragments":["too","too"]},{"Key":"anyway too","Fragments":["complex.","long."]},{"Key":"complex. My","Fragments":["suggestion"]},{"Key":"My suggestion","Fragments":["was"]},{"Key":"suggestion was","Fragments":["just"]},{"Key":"Thanks. Still","Fragments":["IMHO"]},{"Key":"Still IMHO","Fragments":["too"]},{"Key":"IMHO too","Fragments":["much"]},{"Key":"code which","Fragments":["inhibits","is"]},{"Key":"which inhibits","Fragments":["readability."]},{"Key":"Try use","Fragments":["the"]},{"Key":"GroupBy operator","Fragments":["in"]},{"Key":"using ALPHABET","Fragments":["this"]},{"Key":"ALPHABET this","Fragments":["making"]},{"Key":"this making","Fragments":["code"]},{"Key":"long although","Fragments":["it"]},{"Key":"although it","Fragments":["is","is","is"]},{"Key":" Handles","Fragments":["all"]},{"Key":"Handles all","Fragments":["random()"]},{"Key":"all random()","Fragments":["setup"]},{"Key":"random() setup","Fragments":["in"]},{"Key":"setup in","Fragments":["RandomKeys()"]},{"Key":"in RandomKeys()","Fragments":["much"]},{"Key":"RandomKeys() much","Fragments":["cleaner"]},{"Key":"I learnt","Fragments":["the"]},{"Key":"learnt the","Fragments":["position"]},{"Key":"position shift","Fragments":["solution"]},{"Key":"shift solution","Fragments":["which"]},{"Key":"solution which","Fragments":["is","was"]},{"Key":"better (efficient)","Fragments":["than"]},{"Key":"(efficient) than","Fragments":["the"]},{"Key":"power from","Fragments":["you."]},{"Key":"IMHO unnecessarily","Fragments":["long"]},{"Key":"unnecessarily long","Fragments":["and"]},{"Key":"so less","Fragments":["readable"]},{"Key":" Extensions","Fragments":["are"]},{"Key":"Extensions are","Fragments":["good"]},{"Key":"general but","Fragments":["not"]},{"Key":"not IMHO","Fragments":["for"]},{"Key":"IMHO for","Fragments":["this"]},{"Key":"exercise. If","Fragments":["an"]},{"Key":"exercise wants","Fragments":["to"]},{"Key":"test one's","Fragments":["extensions"]},{"Key":"one's extensions","Fragments":["coding"]},{"Key":"extensions coding","Fragments":["there"]},{"Key":"coding there","Fragments":["will"]},{"Key":"there will","Fragments":["(and"]},{"Key":"will (and","Fragments":["indeed"]},{"Key":"(and indeed","Fragments":["have"]},{"Key":"indeed have","Fragments":["been)"]},{"Key":"have been)","Fragments":["exercises"]},{"Key":"been) exercises","Fragments":["for"]},{"Key":"exercises for","Fragments":["that."]},{"Key":"but Encode/Decode","Fragments":["contain","methods"]},{"Key":"Encode/Decode contain","Fragments":["duplicate"]},{"Key":"contain duplicate","Fragments":["code"]},{"Key":"duplicate code","Fragments":["DRY?"]},{"Key":"using Math.Pow","Fragments":["or","or"]},{"Key":" Contains()","Fragments":["is"]},{"Key":"Contains() is","Fragments":["not"]},{"Key":"needed by","Fragments":["these"]},{"Key":"by these","Fragments":["tests"]},{"Key":"of IEnumerable/Linq","Fragments":["you"]},{"Key":"IEnumerable/Linq you","Fragments":["should"]},{"Key":"Encode/Decode methods","Fragments":["mix"]},{"Key":"methods mix","Fragments":["the"]},{"Key":"mix the","Fragments":["core"]},{"Key":"the core","Fragments":["business"]},{"Key":"core business","Fragments":["logic"]},{"Key":"logic with","Fragments":["the","OR"]},{"Key":"is lower","Fragments":["case"]},{"Key":"case wrapping","Fragments":["logic,"]},{"Key":"wrapping logic,","Fragments":["better"]},{"Key":"logic, better","Fragments":["to"]},{"Key":"DRY works","Fragments":["when"]},{"Key":"works when","Fragments":["you"]},{"Key":"you map","Fragments":["to"]},{"Key":"map to","Fragments":["EncodeOrDecode"]},{"Key":"to EncodeOrDecode","Fragments":["(the"]},{"Key":"EncodeOrDecode (the","Fragments":["only"]},{"Key":"(the only","Fragments":["one"]},{"Key":"one apart","Fragments":["from"]},{"Key":"from me","Fragments":["to"]},{"Key":"like this)","Fragments":["but"]},{"Key":"this) but","Fragments":["this"]},{"Key":"this ruined","Fragments":["IMHO"]},{"Key":"ruined IMHO","Fragments":["by"]},{"Key":"IMHO by","Fragments":["the"]},{"Key":"the extensions","Fragments":["class."]},{"Key":"extensions class.","Fragments":["Your"]},{"Key":"class. Your","Fragments":["logic"]},{"Key":"clear but","Fragments":["less"]},{"Key":"but less","Fragments":["readable","efficeint"]},{"Key":"I setup","Fragments":["the"]},{"Key":"setup the","Fragments":["Last"]},{"Key":"Last case","Fragments":["as"]},{"Key":"as counting","Fragments":["backwards,"]},{"Key":"counting backwards,","Fragments":["which"]},{"Key":"the others.","Fragments":["As"]},{"Key":"others. As","Fragments":["such,"]},{"Key":"As such,","Fragments":["I","it"]},{"Key":"such, I","Fragments":["run"]},{"Key":"it first,","Fragments":["so"]},{"Key":"first, so","Fragments":["that"]},{"Key":"return early","Fragments":["and"]},{"Key":"rest shares","Fragments":["a"]},{"Key":"shares a","Fragments":["common"]},{"Key":"common set","Fragments":["of"]},{"Key":"I dropped","Fragments":["off"]},{"Key":"dropped off","Fragments":["my"]},{"Key":"off my","Fragments":["debug"]},{"Key":"my debug","Fragments":["scenario."]},{"Key":" ok","Fragments":["DRY"]},{"Key":"ok DRY","Fragments":["-"]},{"Key":"method can","Fragments":["call","be"]},{"Key":"I assure","Fragments":["you"]},{"Key":"assure you","Fragments":["I"]},{"Key":"you I","Fragments":["didn't"]},{"Key":"didn't cheat","Fragments":[":D"]},{"Key":" (after","Fragments":["looking"]},{"Key":"(after looking","Fragments":["at"]},{"Key":"your solution:","Fragments":["yes"]},{"Key":"solution: yes","Fragments":["it's"]},{"Key":"yes it's","Fragments":["very"]},{"Key":"Thanks a","Fragments":["lot"]},{"Key":"lot for","Fragments":["your"]},{"Key":"your great","Fragments":["help."]},{"Key":" CalculateAddEnds","Fragments":["is"]},{"Key":"CalculateAddEnds is","Fragments":["long"]},{"Key":"is long","Fragments":["and"]},{"Key":"of TryGetValue.","Fragments":["There"]},{"Key":"TryGetValue. There","Fragments":["may"]},{"Key":"null values,","Fragments":["but"]},{"Key":"values, but","Fragments":["??"]},{"Key":"but ??","Fragments":["seemed"]},{"Key":"?? seemed","Fragments":["to"]},{"Key":"Just had","Fragments":["to"]},{"Key":"Thanks! I'll","Fragments":["look","update"]},{"Key":" Flagged","Fragments":["enums"]},{"Key":"Flagged enums","Fragments":["are"]},{"Key":"useful but","Fragments":["they"]},{"Key":"they didn't","Fragments":["feel","include"]},{"Key":"feel appropriate","Fragments":["here."]},{"Key":"appropriate here.","Fragments":["I"]},{"Key":"of reflection","Fragments":["and"]},{"Key":"reflection and","Fragments":["did"]},{"Key":"want Enum","Fragments":["named"]},{"Key":"Enum named","Fragments":["values"]},{"Key":"named values","Fragments":["to"]},{"Key":"as data.","Fragments":["Instead"]},{"Key":"data. Instead","Fragments":["I"]},{"Key":"Instead I","Fragments":["\"load\""]},{"Key":"I \"load\"","Fragments":["the"]},{"Key":"\"load\" the","Fragments":["allergen"]},{"Key":"the allergen","Fragments":["data"]},{"Key":"allergen data","Fragments":["into"]},{"Key":"data into","Fragments":["the"]},{"Key":"the Allergen","Fragments":["data"]},{"Key":"Allergen data","Fragments":["structure."]},{"Key":"structure. This","Fragments":["would"]},{"Key":"allow me","Fragments":["to"]},{"Key":"easily change","Fragments":["my"]},{"Key":"static allergen","Fragments":["list"]},{"Key":"allergen list","Fragments":["be"]},{"Key":"list be","Fragments":["be"]},{"Key":"be be","Fragments":["loaded"]},{"Key":"be loaded","Fragments":["from","here.*"]},{"Key":"loaded from","Fragments":["another"]},{"Key":"from another","Fragments":["data"]},{"Key":"another data","Fragments":["source"]},{"Key":"data source","Fragments":["without"]},{"Key":"source without","Fragments":["having"]},{"Key":" yes","Fragments":["thanks"]},{"Key":"this naturally","Fragments":["evolved."]},{"Key":"Great minds","Fragments":["think"]},{"Key":"minds think","Fragments":["alike!"]},{"Key":"Found unit","Fragments":["tests"]},{"Key":"tests very","Fragments":["poor"]},{"Key":"very poor","Fragments":["for"]},{"Key":"poor for","Fragments":["this"]},{"Key":"exercise. Was","Fragments":["not"]},{"Key":"Was not","Fragments":["sure"]},{"Key":"about checkdigit","Fragments":["wrapping"]},{"Key":"checkdigit wrapping","Fragments":["below"]},{"Key":"wrapping below","Fragments":["10"]},{"Key":"below 10","Fragments":["(in"]},{"Key":"10 (in","Fragments":["Create()"]},{"Key":"(in Create()","Fragments":["hence"]},{"Key":"Create() hence","Fragments":["my"]},{"Key":"hence my","Fragments":["previous"]},{"Key":"previous solution","Fragments":["which"]},{"Key":"was guaranteed","Fragments":["to"]},{"Key":"This which","Fragments":["is"]},{"Key":"efficient. More","Fragments":["tests"]},{"Key":"More tests","Fragments":["could"]},{"Key":"tests could","Fragments":["have","have"]},{"Key":"have demonsrtated","Fragments":["that"]},{"Key":"demonsrtated that","Fragments":["this"]},{"Key":"been so","Fragments":["dissatisfied"]},{"Key":"so dissatisfied","Fragments":["with"]},{"Key":"dissatisfied with","Fragments":["the"]},{"Key":"far that","Fragments":["by"]},{"Key":"just code","Fragments":["and"]},{"Key":"and suffer","Fragments":["from"]},{"Key":"suffer from","Fragments":["all"]},{"Key":"same pitfalls","Fragments":["as"]},{"Key":"pitfalls as","Fragments":["the"]},{"Key":"Try Linq","Fragments":["or","ZIp"]},{"Key":"Then use","Fragments":["bitarrays"]},{"Key":"use bitarrays","Fragments":["instead."]},{"Key":"exercise your","Fragments":["approach"]},{"Key":"approach misses","Fragments":["the"]},{"Key":"misses the","Fragments":["point"]},{"Key":"point plus","Fragments":["YAGNI"]},{"Key":"the setter.","Fragments":["This"]},{"Key":"setter. This","Fragments":["insures"]},{"Key":"This insures","Fragments":["that"]},{"Key":"insures that","Fragments":["it's"]},{"Key":"it's invoked","Fragments":["if"]},{"Key":"invoked if","Fragments":["set"]},{"Key":"if set","Fragments":["outside"]},{"Key":"set outside","Fragments":["of"]},{"Key":" Aha","Fragments":["I"]},{"Key":"Aha I","Fragments":["can"]},{"Key":"can learn","Fragments":["from"]},{"Key":"learn from","Fragments":["this!"]},{"Key":"Wow loong,","Fragments":["try"]},{"Key":"loong, try","Fragments":["Linq"]},{"Key":"try Linq","Fragments":["or","fluent"]},{"Key":"Just evolving","Fragments":["a"]},{"Key":"evolving a","Fragments":["better"]},{"Key":"solution (clearer","Fragments":["\u0026"]},{"Key":"(clearer \u0026","Fragments":["less"]},{"Key":"\u0026 less","Fragments":["regex"]},{"Key":"less regex","Fragments":["runs"]},{"Key":"regex runs","Fragments":["etc.)"]},{"Key":"runs etc.)","Fragments":["but"]},{"Key":"but showing","Fragments":["my"]},{"Key":"showing my","Fragments":["working....."]},{"Key":"you've pretty","Fragments":["much"]},{"Key":"much nailed","Fragments":["this"]},{"Key":"nailed this","Fragments":["one."]},{"Key":" Few","Fragments":["minor"]},{"Key":"Few minor","Fragments":["things"]},{"Key":"things -","Fragments":["\"string[]"]},{"Key":"- \"string[]","Fragments":["args\""]},{"Key":"\"string[] args\"","Fragments":["always"]},{"Key":"args\" always","Fragments":["gets"]},{"Key":"always gets","Fragments":["added"]},{"Key":"to console","Fragments":["applications"]},{"Key":"console applications","Fragments":["by"]},{"Key":"applications by","Fragments":["default,"]},{"Key":"by default,","Fragments":["but"]},{"Key":"default, but","Fragments":["in"]},{"Key":"instance it's","Fragments":["not"]},{"Key":"that \"int\"","Fragments":["is"]},{"Key":"more generally","Fragments":["used","applicable."]},{"Key":"generally used","Fragments":["than"]},{"Key":"used than","Fragments":["\"Int32\"."]},{"Key":"said, very","Fragments":["minor"]},{"Key":"of practice","Fragments":["with"]},{"Key":"practice with","Fragments":["Regex"]},{"Key":"with Regex","Fragments":["especially"]},{"Key":"Regex especially","Fragments":["in"]},{"Key":"especially in","Fragments":[".Net"]},{"Key":"in .Net","Fragments":["lets"]},{"Key":".Net lets","Fragments":["see"]},{"Key":"Thats it.","Fragments":["I"]},{"Key":"can regex","Fragments":["the"]},{"Key":"regex the","Fragments":["whole"]},{"Key":"and substitute","Fragments":["as"]},{"Key":"substitute as","Fragments":["I"]},{"Key":"Will leave","Fragments":["that"]},{"Key":"puzzle that","Fragments":["out"]},{"Key":"the task.","Fragments":["The"]},{"Key":"task. The","Fragments":["limited"]},{"Key":"The limited","Fragments":["choices"]},{"Key":"limited choices","Fragments":["made"]},{"Key":"choices made","Fragments":["it"]},{"Key":"lookup array.","Fragments":["I"]},{"Key":"array. I","Fragments":["did"]},{"Key":"about extension","Fragments":["methods,"]},{"Key":"methods, so","Fragments":["that's"]},{"Key":"The ToDecimal","Fragments":["choice"]},{"Key":"ToDecimal choice","Fragments":["seemed"]},{"Key":"choice seemed","Fragments":["odd"]},{"Key":"seemed odd","Fragments":["to"]},{"Key":"me. It","Fragments":["implied","made"]},{"Key":"It implied","Fragments":["using"]},{"Key":"implied using","Fragments":["the"]},{"Key":"the decimal","Fragments":["datatype","in"]},{"Key":"decimal datatype","Fragments":["instead"]},{"Key":"datatype instead","Fragments":["of"]},{"Key":"depends what","Fragments":["is"]},{"Key":"you. If","Fragments":["you"]},{"Key":"mind the","Fragments":["wait"]},{"Key":"the wait","Fragments":["when"]},{"Key":"wait when","Fragments":["a"]},{"Key":"then okay.","Fragments":["Otherwise"]},{"Key":"okay. Otherwise","Fragments":["do"]},{"Key":"Otherwise do","Fragments":["calculations"]},{"Key":"do calculations","Fragments":["up"]},{"Key":"front and","Fragments":["every"]},{"Key":"every query","Fragments":["is"]},{"Key":" \u003eProbably","Fragments":["requires"]},{"Key":"\u003eProbably requires","Fragments":["specifying"]},{"Key":"requires specifying","Fragments":["the","the"]},{"Key":"the types,","Fragments":["but","but"]},{"Key":"types, but","Fragments":["I'll","I'll"]},{"Key":"but I'll","Fragments":["confirm","confirm"]},{"Key":"I'll confirm","Fragments":["that","that"]},{"Key":"confirm that","Fragments":["when","when"]},{"Key":" Actually.","Fragments":["I"]},{"Key":"Actually. I","Fragments":["was"]},{"Key":"was wrong.","Fragments":["New"]},{"Key":"wrong. New","Fragments":["iteration"]},{"Key":" Seconds","Fragments":["/","/"]},{"Key":"/ 60","Fragments":["/","/"]},{"Key":"60 /","Fragments":["60","24"]},{"Key":"/ 24","Fragments":["/"]},{"Key":"24 /","Fragments":["365.25"]},{"Key":" works","Fragments":["but"]},{"Key":"Edit: Because","Fragments":["the"]},{"Key":"the of","Fragments":["the"]},{"Key":"first one,","Fragments":["that's"]},{"Key":"one, that's","Fragments":["why"]},{"Key":"went down","Fragments":["a"]},{"Key":"down a","Fragments":["whole"]},{"Key":"whole other","Fragments":["path,"]},{"Key":"other path,","Fragments":["but"]},{"Key":"path, but","Fragments":["the"]},{"Key":"test threw","Fragments":["it"]},{"Key":"threw it","Fragments":["aside."]},{"Key":"it aside.","Fragments":["I"]},{"Key":"aside. I","Fragments":["realized"]},{"Key":"realized this","Fragments":["was"]},{"Key":"lot easier","Fragments":["to"]},{"Key":"solve by","Fragments":["converting"]},{"Key":"by converting","Fragments":["it"]},{"Key":"Hello world,","Fragments":["this"]},{"Key":"world, this","Fragments":["is"]},{"Key":"variant on","Fragments":["FizzBuzz."]},{"Key":"I opted","Fragments":["for"]},{"Key":"using magic","Fragments":["numbers"]},{"Key":"magic numbers","Fragments":["and","is","aren't","and"]},{"Key":"and explaining","Fragments":["the"]},{"Key":"comments the","Fragments":["meaning"]},{"Key":"numbers rather","Fragments":["than"]},{"Key":"than assigning","Fragments":["a"]},{"Key":"each number","Fragments":["and"]},{"Key":"variable. The","Fragments":["reason"]},{"Key":"being that","Fragments":["one","I"]},{"Key":"main ideas","Fragments":["behind"]},{"Key":"behind avoiding","Fragments":["magic"]},{"Key":"avoiding magic","Fragments":["numbers"]},{"Key":"numbers is","Fragments":["if"]},{"Key":"place you","Fragments":["have"]},{"Key":"both places,","Fragments":["and"]},{"Key":"places, and","Fragments":["also"]},{"Key":"not understanding","Fragments":["what"]},{"Key":"numbers mean.","Fragments":["By"]},{"Key":"mean. By","Fragments":["explaining"]},{"Key":"By explaining","Fragments":["in"]},{"Key":"explaining in","Fragments":["the"]},{"Key":"I avoid","Fragments":["someone","nulls"]},{"Key":"avoid someone","Fragments":["looking"]},{"Key":"code misunderstanding","Fragments":["what"]},{"Key":"misunderstanding what","Fragments":["the"]},{"Key":"are and","Fragments":["since","this,"]},{"Key":"and since","Fragments":["the","this"]},{"Key":"numbers only","Fragments":["exist"]},{"Key":"only exist","Fragments":["in"]},{"Key":"place I","Fragments":["decided"]},{"Key":"code overall","Fragments":["would"]},{"Key":"overall would","Fragments":["look"]},{"Key":"better without","Fragments":["the"]},{"Key":"a best","Fragments":["practice"]},{"Key":"practice because","Fragments":["if"]},{"Key":"numbers again","Fragments":["then"]},{"Key":"again then","Fragments":["I"]},{"Key":"all as","Fragments":["their"]},{"Key":"own variables","Fragments":["at"]},{"Key":"program would","Fragments":["be"]},{"Key":"be ready","Fragments":["to"]},{"Key":"be expanded","Fragments":["upon","very"]},{"Key":"expanded upon","Fragments":["in"]},{"Key":"upon in","Fragments":["the"]},{"Key":"future, whereas","Fragments":["now"]},{"Key":"whereas now","Fragments":["if"]},{"Key":"now if","Fragments":["I"]},{"Key":"I decide","Fragments":["to"]},{"Key":"future I","Fragments":["will","would","wanted"]},{"Key":"this change","Fragments":["at"]},{"Key":"change at","Fragments":["that"]},{"Key":"Overall, I","Fragments":["recognize"]},{"Key":"I recognize","Fragments":["that"]},{"Key":"that magic","Fragments":["numbers"]},{"Key":"numbers aren't","Fragments":["the"]},{"Key":"best implementation,","Fragments":["but"]},{"Key":"still chose","Fragments":["to"]},{"Key":"case being","Fragments":["that"]},{"Key":"am confident","Fragments":["I"]},{"Key":"confident I","Fragments":["am"]},{"Key":"this program","Fragments":["once"]},{"Key":"program once","Fragments":["and"]},{"Key":"future. If","Fragments":["I"]},{"Key":"had plans","Fragments":["to"]},{"Key":"plans to","Fragments":["build"]},{"Key":"build on","Fragments":["it"]},{"Key":"implemented constants","Fragments":["for"]},{"Key":"might add","Fragments":["is"]},{"Key":"consider this","Fragments":["basic"]},{"Key":"this basic","Fragments":["enough"]},{"Key":"basic enough","Fragments":["logic"]},{"Key":"enough logic","Fragments":["to"]},{"Key":"to contain","Fragments":["everything"]},{"Key":"contain everything","Fragments":["in"]},{"Key":"line. Something","Fragments":["like:"]},{"Key":" Old","Fragments":["data"]},{"Key":"Old data","Fragments":["could"]},{"Key":"data could","Fragments":["be"]},{"Key":"be dodgy,","Fragments":["so"]},{"Key":"dodgy, so","Fragments":["update"]},{"Key":"so update","Fragments":["to"]},{"Key":"update to","Fragments":["cater"]},{"Key":"to cater","Fragments":["for"]},{"Key":"cater for","Fragments":["an"]},{"Key":"an entirely","Fragments":["null"]},{"Key":"entirely null","Fragments":["dictionary"]},{"Key":"null dictionary","Fragments":["or"]},{"Key":"or individual","Fragments":["letters"]},{"Key":"individual letters","Fragments":["being","mean,"]},{"Key":"letters being","Fragments":["null"]},{"Key":"being null","Fragments":["or"]},{"Key":"up Euclid's","Fragments":["formulas."]},{"Key":"Programming wise","Fragments":["you"]},{"Key":"wise you","Fragments":["don't"]},{"Key":"both FindTriplets","Fragments":["methods"]},{"Key":"FindTriplets methods","Fragments":["(although"]},{"Key":"methods (although","Fragments":["yours"]},{"Key":"(although yours","Fragments":["might"]},{"Key":"yours might","Fragments":["be"]},{"Key":"efficient not","Fragments":["sure)"]},{"Key":"sure) I","Fragments":["certainly"]},{"Key":"think mine","Fragments":["is"]},{"Key":"more readable....please","Fragments":["check"]},{"Key":"readable....please check","Fragments":["and"]},{"Key":"and differ","Fragments":["if"]},{"Key":"differ if","Fragments":["you"]},{"Key":"Definitely getting","Fragments":["more"]},{"Key":"getting more","Fragments":["interesting"]},{"Key":"IMHO I","Fragments":["think","still"]},{"Key":"think LunhTransform","Fragments":["is"]},{"Key":"LunhTransform is","Fragments":["a"]},{"Key":"very unusual","Fragments":["extension"]},{"Key":"unusual extension","Fragments":["for"]},{"Key":"extension for","Fragments":["IEnumerable,"]},{"Key":"for IEnumerable,","Fragments":["not"]},{"Key":"IEnumerable, not","Fragments":["likely"]},{"Key":"normal method","Fragments":["and"]},{"Key":"use Select","Fragments":["with"]},{"Key":"Select with","Fragments":["it"]},{"Key":"method group,","Fragments":["that"]},{"Key":"group, that","Fragments":["would"]},{"Key":"clear without","Fragments":["an"]},{"Key":"without an","Fragments":["extra"]},{"Key":"agree, but","Fragments":["I"]},{"Key":"for short","Fragments":["code."]},{"Key":"short code.","Fragments":["I"]},{"Key":"for efficient","Fragments":["code,"]},{"Key":"efficient code,","Fragments":["so"]},{"Key":"code, so","Fragments":["I"]},{"Key":"I calculate","Fragments":["where"]},{"Key":"calculate where","Fragments":["each"]},{"Key":"where each","Fragments":["input"]},{"Key":"each input","Fragments":["character"]},{"Key":"input character","Fragments":["goes"]},{"Key":"character goes","Fragments":["directly"]},{"Key":"goes directly","Fragments":["in"]},{"Key":"output rather","Fragments":["than"]},{"Key":"any intermediate","Fragments":["processing."]},{"Key":"intermediate processing.","Fragments":["Yes,"]},{"Key":"processing. Yes,","Fragments":["this"]},{"Key":"Yes, this","Fragments":["makes"]},{"Key":"for longer","Fragments":["code.","sequences"]},{"Key":"longer code.","Fragments":["I"]},{"Key":"have included","Fragments":["that"]},{"Key":"Can simplify","Fragments":["the","into"]},{"Key":"storage of","Fragments":["A,B,C"]},{"Key":"and eliminate","Fragments":["for"]},{"Key":"eliminate for","Fragments":["loop"]},{"Key":"from Create","Fragments":["not"]},{"Key":"Create not","Fragments":["very"]},{"Key":" Similarly","Fragments":["for"]},{"Key":"Similarly for","Fragments":["Luhn"]},{"Key":"for Luhn","Fragments":["using"]},{"Key":"Luhn using","Fragments":["Linq?"]},{"Key":"are wrong.","Fragments":["It"]},{"Key":"wrong. It","Fragments":["took"]},{"Key":"me forever","Fragments":["to","to"]},{"Key":"forever to","Fragments":["figure","figure"]},{"Key":"that **all**","Fragments":["ciphertext","ciphertext"]},{"Key":"**all** ciphertext","Fragments":["should","should"]},{"Key":"ciphertext should","Fragments":["be","be"]},{"Key":"be split","Fragments":["into","into"]},{"Key":"into 5,","Fragments":["since"]},{"Key":"5, since","Fragments":["the"]},{"Key":"readme showed","Fragments":["the","the"]},{"Key":"showed the","Fragments":["ciphertext","ciphertext"]},{"Key":"the ciphertext","Fragments":["split","split"]},{"Key":"ciphertext split","Fragments":["into","into"]},{"Key":"a PR","Fragments":["to"]},{"Key":"PR to","Fragments":["get"]},{"Key":"get these","Fragments":["tests"]},{"Key":"Thought of","Fragments":["a"]},{"Key":"it. Took","Fragments":["much"]},{"Key":"Took much","Fragments":["less"]},{"Key":"less time","Fragments":["to"]},{"Key":"to re-implement","Fragments":["it."]},{"Key":"re-implement it.","Fragments":["here"]},{"Key":"it. here","Fragments":["it"]},{"Key":"the KeyGenerator","Fragments":["a"]},{"Key":"KeyGenerator a","Fragments":["separate"]},{"Key":"ok -","Fragments":["SOC"]},{"Key":"- SOC","Fragments":["-"]},{"Key":"SOC -","Fragments":["but"]},{"Key":"proper generator","Fragments":["using"]},{"Key":"generator using","Fragments":["yield?","the","yield","yield?","yield","yield"]},{"Key":" Refactor","Fragments":["Transform","the"]},{"Key":"Refactor Transform","Fragments":["to"]},{"Key":"Transform to","Fragments":["not"]},{"Key":"which reduces","Fragments":["readability"]},{"Key":"reduces readability","Fragments":["and"]},{"Key":"Nice, if","Fragments":["a"]},{"Key":"bit over","Fragments":["complicated.","complicated."]},{"Key":"over complicated.","Fragments":["Good","Nice"]},{"Key":"complicated. Good","Fragments":["work"]},{"Key":"work over","Fragments":["all!","all","all."]},{"Key":"It's because","Fragments":["you"]},{"Key":"to decimal","Fragments":["conversion,"]},{"Key":"decimal conversion,","Fragments":["decimal"]},{"Key":"conversion, decimal","Fragments":["meaning"]},{"Key":"decimal meaning","Fragments":["base"]},{"Key":"meaning base","Fragments":["10."]},{"Key":"base 10.","Fragments":["I"]},{"Key":"10. I","Fragments":["can"]},{"Key":"the confusion","Fragments":["could"]},{"Key":"confusion could","Fragments":["arise"]},{"Key":"could arise","Fragments":["but"]},{"Key":"arise but","Fragments":["you"]},{"Key":"program first","Fragments":["analyzes"]},{"Key":"first analyzes","Fragments":["the"]},{"Key":"analyzes the","Fragments":["incoming"]},{"Key":"incoming string","Fragments":["to"]},{"Key":"which response","Fragments":["is"]},{"Key":"most appropriate,","Fragments":["it"]},{"Key":"appropriate, it","Fragments":["then"]},{"Key":"then runs","Fragments":["a"]},{"Key":"runs a","Fragments":["switch"]},{"Key":"switch on","Fragments":["an"]},{"Key":"enum of","Fragments":["possible"]},{"Key":"possible responses","Fragments":["Bob"]},{"Key":"responses Bob","Fragments":["has."]},{"Key":"Bob has.","Fragments":["I"]},{"Key":"has. I","Fragments":["chose"]},{"Key":"this structure","Fragments":["to","instead"]},{"Key":"logic behind","Fragments":["analyzing","determining"]},{"Key":"behind analyzing","Fragments":["input"]},{"Key":"analyzing input","Fragments":["and"]},{"Key":"creating output","Fragments":["separate,"]},{"Key":"output separate,","Fragments":["which"]},{"Key":"separate, which","Fragments":["should"]},{"Key":"which should","Fragments":["help","be","not"]},{"Key":"should help","Fragments":["make","readability"]},{"Key":"edit or","Fragments":["add"]},{"Key":"add new","Fragments":["responses,"]},{"Key":"new responses,","Fragments":["or"]},{"Key":"responses, or","Fragments":["to"]},{"Key":"The fixed","Fragments":["count"]},{"Key":"fixed count","Fragments":["of"]},{"Key":"of 5","Fragments":["really","but"]},{"Key":"5 really","Fragments":["pissed"]},{"Key":"really pissed","Fragments":["me","me"]},{"Key":"pissed me","Fragments":["off","off"]},{"Key":"me off","Fragments":["too.","because"]},{"Key":"off too.","Fragments":["It"]},{"Key":"too. It","Fragments":["took","is"]},{"Key":"into 5","Fragments":["especially"]},{"Key":"5 especially","Fragments":["since"]},{"Key":" http://c2.com/cgi/wiki?PrematureOptimization","Fragments":["and"]},{"Key":"http://c2.com/cgi/wiki?PrematureOptimization and","Fragments":["from"]},{"Key":"and from","Fragments":["the"]},{"Key":"the About","Fragments":["page"]},{"Key":"About page","Fragments":["\""]},{"Key":"page \"","Fragments":["Keep"]},{"Key":"\" Keep","Fragments":["the"]},{"Key":"Keep the","Fragments":["code"]},{"Key":"as simple,","Fragments":["readable,"]},{"Key":"simple, readable,","Fragments":["and"]},{"Key":"think Readme","Fragments":["_implies_","_implies_","_implies_","_implies_","_implies_","_implies_","_implies_","_implies_","_implies_"]},{"Key":"Readme _implies_","Fragments":["NOT","NOT","NOT","NOT","NOT","NOT","NOT","NOT","NOT"]},{"Key":"_implies_ NOT","Fragments":["using","using","using","using","using","using","using","using","using"]},{"Key":"NOT using","Fragments":["foreach","foreach","foreach","foreach","foreach","foreach","foreach","foreach","foreach"]},{"Key":"the Where()","Fragments":["method","so"]},{"Key":"However IsPythagorean","Fragments":["as"]},{"Key":"IsPythagorean as","Fragments":["is"]},{"Key":"is works","Fragments":["with"]},{"Key":"with ints","Fragments":["so"]},{"Key":"doubles so","Fragments":["overkill"]},{"Key":"so overkill","Fragments":["there"]},{"Key":"it Sum","Fragments":["and"]},{"Key":"Sum and","Fragments":["Product","_t.Aggregate"]},{"Key":"and Product","Fragments":["should"]},{"Key":"Product should","Fragments":["return"]},{"Key":"the triplet","Fragments":["is"]},{"Key":"triplet is","Fragments":["Pythagorean"]},{"Key":"is Pythagorean","Fragments":["or"]},{"Key":"Pythagorean or","Fragments":["not."]},{"Key":"not. (Is","Fragments":["that"]},{"Key":"(Is that","Fragments":["an"]},{"Key":"poor unit","Fragments":["tests?)"]},{"Key":" thx","Fragments":["for"]},{"Key":"thx for","Fragments":["the","encouraging"]},{"Key":"the review.","Fragments":["There"]},{"Key":"review. There","Fragments":["is"]},{"Key":"long debate","Fragments":["about"]},{"Key":"debate about","Fragments":["code"]},{"Key":"code beeing","Fragments":["more/less"]},{"Key":"beeing more/less","Fragments":["readable"]},{"Key":"more/less readable","Fragments":["with"]},{"Key":"with \"var\"","Fragments":["or"]},{"Key":"\"var\" or","Fragments":["\"strongly"]},{"Key":"or \"strongly","Fragments":["typed\"."]},{"Key":"\"strongly typed\".","Fragments":["When"]},{"Key":"typed\". When","Fragments":["I"]},{"Key":"long stackoverflow","Fragments":["post"]},{"Key":"stackoverflow post","Fragments":["on"]},{"Key":"post on","Fragments":["it..."]},{"Key":"am undecided","Fragments":["here."]},{"Key":"undecided here.","Fragments":["Actually"]},{"Key":"here. Actually","Fragments":["I"]},{"Key":"Actually I","Fragments":["like","have"]},{"Key":"learn the","Fragments":["types"]},{"Key":"types that","Fragments":["exist"]},{"Key":"that exist","Fragments":["in"]},{"Key":"C# so","Fragments":["I","there's"]},{"Key":"just consider","Fragments":["it"]},{"Key":"it practice.","Fragments":["Whether"]},{"Key":"practice. Whether","Fragments":["var"]},{"Key":"Whether var","Fragments":["is"]},{"Key":"a \"form","Fragments":["of"]},{"Key":"\"form of","Fragments":["weak"]},{"Key":"of weak","Fragments":["typing"]},{"Key":"weak typing","Fragments":["in"]},{"Key":"typing in","Fragments":["a"]},{"Key":"strongly typed","Fragments":["language\""]},{"Key":"typed language\"","Fragments":["-"]},{"Key":"language\" -","Fragments":["well"]},{"Key":"- well","Fragments":["idk"]},{"Key":"well idk","Fragments":[";)"]},{"Key":"But more","Fragments":["important:","importantly,"]},{"Key":"foreach (string","Fragments":["ele","token"]},{"Key":"(string ele","Fragments":["in"]},{"Key":"ele in","Fragments":["dictEle.Value)"]},{"Key":" payload.Add(ele.ToLower(),","Fragments":["dictEle.Key);"]},{"Key":" Works","Fragments":["too.","but"]},{"Key":"Works too.","Fragments":["I"]},{"Key":"I backed","Fragments":["off,"]},{"Key":"backed off,","Fragments":["because"]},{"Key":"off, because","Fragments":["there"]},{"Key":"a enumerator","Fragments":["error."]},{"Key":"enumerator error.","Fragments":["But"]},{"Key":"error. But","Fragments":["that"]},{"Key":"me, getting","Fragments":["it"]},{"Key":"getting it","Fragments":["wrong."]},{"Key":"it wrong.","Fragments":["So"]},{"Key":"wrong. So","Fragments":["thx"]},{"Key":"So thx","Fragments":["for"]},{"Key":"for encouraging","Fragments":["me"]},{"Key":"encouraging me","Fragments":["to"]},{"Key":"second shot","Fragments":[";)"]},{"Key":"operator \"or\"","Fragments":["because,"]},{"Key":"\"or\" because,","Fragments":["if"]},{"Key":"because, if","Fragments":["year"]},{"Key":"is leap","Fragments":["year"]},{"Key":"have \"true\"(because","Fragments":["it"]},{"Key":"\"true\"(because it","Fragments":["is"]},{"Key":"is \"or\"","Fragments":["operator"]},{"Key":"\"or\" operator","Fragments":["and"]},{"Key":"one \"true\"","Fragments":["outcome),"]},{"Key":"\"true\" outcome),","Fragments":["but"]},{"Key":"outcome), but","Fragments":["if"]},{"Key":"not and","Fragments":["year"]},{"Key":"not evenly","Fragments":["divisible","divisible","divisible","divisible"]},{"Key":"400, than","Fragments":["we"]},{"Key":"than we","Fragments":["looks"]},{"Key":"we looks","Fragments":["to"]},{"Key":"looks to","Fragments":["right"]},{"Key":"side ,","Fragments":["if"]},{"Key":", if","Fragments":["year"]},{"Key":"400, that","Fragments":["means"]},{"Key":"means year","Fragments":["should"]},{"Key":"year should","Fragments":["not"]},{"Key":"by 100(by","Fragments":["condition)"]},{"Key":"100(by condition)","Fragments":["and"]},{"Key":"condition) and","Fragments":["year"]},{"Key":"year also","Fragments":["should"]},{"Key":"should evenly","Fragments":["divisible"]},{"Key":"different opinions","Fragments":["on"]},{"Key":"on \"var\",","Fragments":["and"]},{"Key":"\"var\", and","Fragments":["one"]},{"Key":"one misconception","Fragments":["is"]},{"Key":"misconception is","Fragments":["that"]},{"Key":"that var","Fragments":["is"]},{"Key":"is late","Fragments":["bound,"]},{"Key":"late bound,","Fragments":["dynamic,"]},{"Key":"bound, dynamic,","Fragments":["untyped"]},{"Key":"dynamic, untyped","Fragments":["and"]},{"Key":"untyped and","Fragments":["so"]},{"Key":"you meant,","Fragments":["so"]},{"Key":"meant, so","Fragments":["forgive"]},{"Key":"for stating","Fragments":["the"]},{"Key":"stating the","Fragments":["obvious:"]},{"Key":"the obvious:","Fragments":["Exchanging"]},{"Key":"obvious: Exchanging","Fragments":["explicit"]},{"Key":"Exchanging explicit","Fragments":["type"]},{"Key":"for var","Fragments":["does"]},{"Key":"var does","Fragments":["not"]},{"Key":"the typing,","Fragments":["everything"]},{"Key":"typing, everything","Fragments":["is"]},{"Key":"still statically","Fragments":["typed:"]},{"Key":"there on","Fragments":["a"]},{"Key":"a var,","Fragments":["you'll"]},{"Key":"var, you'll","Fragments":["see"]},{"Key":"thing if","Fragments":["you"]},{"Key":"different type","Fragments":["later"]},{"Key":"type later","Fragments":["on:"]},{"Key":"var n","Fragments":["="]},{"Key":"= \"text\";","Fragments":["//"]},{"Key":"\"text\"; //","Fragments":["will"]},{"Key":"// will","Fragments":["fail"]},{"Key":"I encourage","Fragments":["you"]},{"Key":"encourage you","Fragments":["to"]},{"Key":"try only","Fragments":["var"]},{"Key":"only var","Fragments":["for"]},{"Key":"a week","Fragments":["and"]},{"Key":"is taking","Fragments":["you."]},{"Key":"taking you.","Fragments":["The"]},{"Key":"you. The","Fragments":["idea"]},{"Key":"you focus","Fragments":["more"]},{"Key":"focus more","Fragments":["on"]},{"Key":"more on","Fragments":["what"]},{"Key":"code does,","Fragments":["and"]},{"Key":"does, and","Fragments":["not"]},{"Key":"much on","Fragments":["which"]},{"Key":"which types","Fragments":["it"]},{"Key":"types it","Fragments":["uses"]},{"Key":"uses to","Fragments":["do"]},{"Key":"actually compare","Fragments":["the"]},{"Key":"each word.","Fragments":["I","You","You"]},{"Key":"word. I","Fragments":["thought"]},{"Key":"about converting","Fragments":["the"]},{"Key":"arrays back","Fragments":["to"]},{"Key":"and seeing","Fragments":["if"]},{"Key":"seeing if","Fragments":["the"]},{"Key":"strings were","Fragments":["equivalent"]},{"Key":"were equivalent","Fragments":["before"]},{"Key":"equivalent before","Fragments":["discovering"]},{"Key":"before discovering","Fragments":["the"]},{"Key":"discovering the","Fragments":["SequenceEqual()."]},{"Key":"the SequenceEqual().","Fragments":["Is"]},{"Key":"SequenceEqual(). Is","Fragments":["one"]},{"Key":"Is one","Fragments":["of"]},{"Key":"these (or","Fragments":["a"]},{"Key":"a totally","Fragments":["different)"]},{"Key":"totally different)","Fragments":["methods"]},{"Key":"different) methods","Fragments":["more"]},{"Key":"methods more","Fragments":["effective/faster?","complex."]},{"Key":"Added some","Fragments":["timings"]},{"Key":"some timings","Fragments":["in"]},{"Key":"timings in","Fragments":["my","next"]},{"Key":"loops slightly","Fragments":["faster"]},{"Key":"faster but","Fragments":["this"]},{"Key":"prone and","Fragments":["easier"]},{"Key":"found interesting","Fragments":["here"]},{"Key":"interesting here","Fragments":["is"]},{"Key":"I avoided","Fragments":["for","this"]},{"Key":"avoided for","Fragments":["loops"]},{"Key":"big negative","Fragments":["as"]},{"Key":"negative as","Fragments":["far"]},{"Key":"as readability","Fragments":["is"]},{"Key":"concerned and","Fragments":["imply"]},{"Key":"and imply","Fragments":["either"]},{"Key":"imply either","Fragments":["mutation,"]},{"Key":"either mutation,","Fragments":["side"]},{"Key":"mutation, side","Fragments":["effects"]},{"Key":"effects or,","Fragments":["finally,"]},{"Key":"or, finally,","Fragments":["optimisation."]},{"Key":"finally, optimisation.","Fragments":["All"]},{"Key":"optimisation. All","Fragments":["of"]},{"Key":"be avoided","Fragments":["(especially"]},{"Key":"avoided (especially","Fragments":["mutation)"]},{"Key":"(especially mutation)","Fragments":["unless"]},{"Key":"mutation) unless","Fragments":["requiered"]},{"Key":"unless requiered","Fragments":["by"]},{"Key":"requiered by","Fragments":["the"]},{"Key":"A bit","Fragments":["too"]},{"Key":"binary problem","Fragments":["to"]},{"Key":"else using","Fragments":["Linq."]},{"Key":"Linq. One","Fragments":["minor"]},{"Key":"One minor","Fragments":["nitpick,"]},{"Key":"already validated,","Fragments":["so"]},{"Key":"validated, so","Fragments":["your"]},{"Key":"your `int.Parse(c.ToString(CultureInfo.InvariantCulture))`","Fragments":["is"]},{"Key":"`int.Parse(c.ToString(CultureInfo.InvariantCulture))` is","Fragments":["a"]},{"Key":"bit heavy","Fragments":["handed."]},{"Key":"heavy handed.","Fragments":["You"]},{"Key":"handed. You","Fragments":["could"]},{"Key":"do `c","Fragments":["-"]},{"Key":"`c -","Fragments":["'0'`"]},{"Key":" @kari,","Fragments":["the"]},{"Key":"@kari, the","Fragments":["best"]},{"Key":"exercises is","Fragments":["to"]},{"Key":"to fork","Fragments":["the"]},{"Key":"fork the","Fragments":["repository,"]},{"Key":"repository, fix","Fragments":["what"]},{"Key":"fix what","Fragments":["you"]},{"Key":"like and","Fragments":["submit"]},{"Key":"a pull","Fragments":["request."]},{"Key":"pull request.","Fragments":["You"]},{"Key":"request. You","Fragments":["can"]},{"Key":"last problem","Fragments":["crypto-square"]},{"Key":"problem crypto-square","Fragments":["really"]},{"Key":"crypto-square really","Fragments":["pissed"]},{"Key":"off because","Fragments":["the"]},{"Key":"were splitting","Fragments":["the"]},{"Key":"the crypto","Fragments":["into"]},{"Key":"crypto into","Fragments":["groups"]},{"Key":"into groups","Fragments":["of"]},{"Key":"groups of","Fragments":["5"]},{"Key":"5 but","Fragments":["the"]},{"Key":"readme used","Fragments":["the"]},{"Key":"the square.","Fragments":["I"]},{"Key":"square. I","Fragments":["forked"]},{"Key":"I forked","Fragments":["the"]},{"Key":"forked the","Fragments":["repo"]},{"Key":"the repo","Fragments":["yesterday"]},{"Key":"repo yesterday","Fragments":["morning,"]},{"Key":"yesterday morning,","Fragments":["fixed"]},{"Key":"morning, fixed","Fragments":["the"]},{"Key":"fixed the","Fragments":["unit"]},{"Key":"a PR.","Fragments":["It"]},{"Key":"PR. It","Fragments":["is"]},{"Key":"already merged","Fragments":["and"]},{"Key":"merged and","Fragments":["will"]},{"Key":"be live","Fragments":["with"]},{"Key":"live with","Fragments":["the"]},{"Key":"next site","Fragments":["update"]},{"Key":"site update","Fragments":["making"]},{"Key":"update making","Fragments":["it"]},{"Key":"better for","Fragments":["those"]},{"Key":"The maintainers","Fragments":["of"]},{"Key":"maintainers of","Fragments":["this"]},{"Key":"site are","Fragments":["putting"]},{"Key":"are putting","Fragments":["in"]},{"Key":"in countless","Fragments":["hours,"]},{"Key":"countless hours,","Fragments":["so"]},{"Key":"hours, so","Fragments":["they"]},{"Key":"use all","Fragments":["the"]},{"Key":"help they","Fragments":["can"]},{"Key":"The exercises","Fragments":["should"]},{"Key":"exercises should","Fragments":["not"]},{"Key":"the source!","Fragments":["We"]},{"Key":"source! We","Fragments":["need"]},{"Key":"the cli","Fragments":["to"]},{"Key":"cli to","Fragments":["submit"]},{"Key":"submit and/or","Fragments":["update"]},{"Key":"and/or update","Fragments":["exercises."]},{"Key":"update exercises.","Fragments":["Dunno"]},{"Key":"exercises. Dunno","Fragments":["if"]},{"Key":"Dunno if","Fragments":["there","questions"]},{"Key":"any requests","Fragments":["in"]},{"Key":"requests in","Fragments":["the"]},{"Key":"the GIt","Fragments":["for"]},{"Key":"GIt for","Fragments":["this."]},{"Key":"for fixing","Fragments":["that"]},{"Key":"fixing that","Fragments":["bug"]},{"Key":"that bug","Fragments":["in"]},{"Key":"After viewing","Fragments":["other"]},{"Key":"viewing other","Fragments":["submissions,"]},{"Key":"submissions, turns","Fragments":["out"]},{"Key":"iteration could","Fragments":["be"]},{"Key":"condensed more.","Fragments":["I'm"]},{"Key":"more. I'm","Fragments":["terrible"]},{"Key":"I'm terrible","Fragments":["at"]},{"Key":"terrible at","Fragments":["math"]},{"Key":"at math","Fragments":[":-)."]},{"Key":"math :-).","Fragments":["I"]},{"Key":"iteration one","Fragments":["could"]},{"Key":"or easier","Fragments":["to"]},{"Key":"test shouldn't","Fragments":["include"]},{"Key":"shouldn't include","Fragments":["peanuts,"]},{"Key":"include peanuts,","Fragments":["so"]},{"Key":"peanuts, so","Fragments":["I"]},{"Key":"currently fail","Fragments":["that"]},{"Key":"fail that","Fragments":["test."]},{"Key":"that test.","Fragments":["Maybe"]},{"Key":"test. Maybe","Fragments":["looking"]},{"Key":"Maybe looking","Fragments":["at"]},{"Key":"examples I","Fragments":["can"]},{"Key":"can figure","Fragments":["out"]},{"Key":"why 509","Fragments":["allergy"]},{"Key":"509 allergy","Fragments":["score"]},{"Key":"allergy score","Fragments":["would","under","to"]},{"Key":"score would","Fragments":["not"]},{"Key":"not include","Fragments":["everything."]},{"Key":"include everything.","Fragments":["The"]},{"Key":"everything. The","Fragments":["test"]},{"Key":"Edit: Oh,","Fragments":["I"]},{"Key":"I see,","Fragments":["because"]},{"Key":"see, because","Fragments":["you"]},{"Key":"use binary","Fragments":["to"]},{"Key":"what works","Fragments":["here,"]},{"Key":"works here,","Fragments":["and"]},{"Key":"here, and","Fragments":["509"]},{"Key":"and 509","Fragments":["in"]},{"Key":"509 in","Fragments":["binary"]},{"Key":"in binary","Fragments":["is"]},{"Key":"binary is","Fragments":["111111101"]},{"Key":"is 111111101","Fragments":["where"]},{"Key":"111111101 where","Fragments":["the"]},{"Key":"two digits","Fragments":["represent"]},{"Key":"digits represent","Fragments":["peanuts"]},{"Key":"represent peanuts","Fragments":["and"]},{"Key":"peanuts and","Fragments":["eggs,"]},{"Key":"and eggs,","Fragments":["peanuts"]},{"Key":"eggs, peanuts","Fragments":["having"]},{"Key":"peanuts having","Fragments":["a"]},{"Key":"zero should","Fragments":["not"]},{"Key":"be there.","Fragments":["I'll"]},{"Key":"there. I'll","Fragments":["rework"]},{"Key":"I'll rework","Fragments":["the"]},{"Key":"clearly the","Fragments":["intended"]},{"Key":"the intended","Fragments":["implementations,"]},{"Key":"intended implementations,","Fragments":["but"]},{"Key":"implementations, but","Fragments":["I'm"]},{"Key":"sure my","Fragments":["current"]},{"Key":"current iteration","Fragments":["works"]},{"Key":"iteration works","Fragments":["for"]},{"Key":"score under","Fragments":["255,"]},{"Key":"under 255,","Fragments":["which"]},{"Key":"255, which","Fragments":["would"]},{"Key":"max score","Fragments":["given","of"]},{"Key":"score given","Fragments":["the"]},{"Key":"of allergens","Fragments":["we"]},{"Key":"allergens we","Fragments":["have"]},{"Key":"have available","Fragments":["to"]},{"Key":" Normally","Fragments":["I"]},{"Key":"Normally I","Fragments":["like"]},{"Key":"out if...then","Fragments":["statements,"]},{"Key":"if...then statements,","Fragments":["just"]},{"Key":"statements, just","Fragments":["seems"]},{"Key":"just seems","Fragments":["easier"]},{"Key":"but seem","Fragments":["that"]},{"Key":"seem that","Fragments":["making"]},{"Key":"that making","Fragments":["this"]},{"Key":"this compact","Fragments":["was"]},{"Key":"compact was","Fragments":["a"]},{"Key":"While your","Fragments":["algorithm","loop"]},{"Key":"is valid,","Fragments":["you"]},{"Key":"valid, you","Fragments":["will"]},{"Key":"want this","Fragments":["structured"]},{"Key":"structured as","Fragments":["a"]},{"Key":"class being","Fragments":["called"]},{"Key":"being called","Fragments":["by"]},{"Key":"Test file.","Fragments":["So"]},{"Key":"file. So","Fragments":["the"]},{"Key":"passed as","Fragments":["an"]},{"Key":"argument to","Fragments":["a"]},{"Key":"solution class","Fragments":["and"]},{"Key":"result (in","Fragments":["this"]},{"Key":"case a","Fragments":["Boolean)."]},{"Key":" Hopefully","Fragments":["that"]},{"Key":"Hopefully that","Fragments":["helps!"]},{"Key":"Code review","Fragments":["-"]},{"Key":"review -","Fragments":["nitpicking"]},{"Key":"- nitpicking","Fragments":["-"]},{"Key":"nitpicking -","Fragments":["is"]},{"Key":"- is","Fragments":["a"]},{"Key":"a mutual","Fragments":["learning"]},{"Key":"mutual learning","Fragments":["process"]},{"Key":":) No","Fragments":["worries."]},{"Key":" We've","Fragments":["all"]},{"Key":"We've all","Fragments":["come"]},{"Key":"some terrible","Fragments":["class"]},{"Key":"terrible class","Fragments":["and"]},{"Key":"you carry","Fragments":["on"]},{"Key":"carry on","Fragments":["with"]},{"Key":"Ok, learned","Fragments":["a"]},{"Key":"lot on","Fragments":["this"]},{"Key":"one. Being","Fragments":["able"]},{"Key":"to treat","Fragments":["a"]},{"Key":"of Chars","Fragments":["is"]},{"Key":"Chars is","Fragments":["great!"]},{"Key":"got really","Fragments":["stuck"]},{"Key":"really stuck","Fragments":["once"]},{"Key":"stuck once","Fragments":["I"]},{"Key":"had all","Fragments":["but"]},{"Key":"but 2","Fragments":["tests"]},{"Key":"2 tests","Fragments":["passing."]},{"Key":"tests passing.","Fragments":["I"]},{"Key":"passing. I","Fragments":["had"]},{"Key":"had created","Fragments":["a"]},{"Key":"all uppercase","Fragments":["letters,"]},{"Key":"uppercase letters,","Fragments":["excluding"]},{"Key":"letters, excluding","Fragments":["numbers"]},{"Key":"excluding numbers","Fragments":["and"]},{"Key":"special characters,","Fragments":["which"]},{"Key":"characters, which","Fragments":["worked"]},{"Key":"which worked","Fragments":["great"]},{"Key":"worked great","Fragments":["for"]},{"Key":"the Shouting_with_special_characters,","Fragments":["but"]},{"Key":"Shouting_with_special_characters, but","Fragments":["would"]},{"Key":"also evaluate","Fragments":["true"]},{"Key":"evaluate true","Fragments":["for"]},{"Key":"the number/special","Fragments":["character"]},{"Key":"number/special character","Fragments":["only"]},{"Key":"character only","Fragments":["strings."]},{"Key":"only strings.","Fragments":["I"]},{"Key":"strings. I","Fragments":["ended"]},{"Key":"up adding","Fragments":["a"]},{"Key":"string had","Fragments":["at"]},{"Key":"had at","Fragments":["least"]},{"Key":"2 letter","Fragments":["characters."]},{"Key":"letter characters.","Fragments":["I"]},{"Key":"characters. I","Fragments":["could"]},{"Key":"not think","Fragments":["of"]},{"Key":"efficient check.","Fragments":["I"]},{"Key":"am looking","Fragments":["forward"]},{"Key":"your suggestions!","Fragments":["Thanks."]},{"Key":"Note: Initially","Fragments":["I"]},{"Key":"return count","Fragments":["from"]},{"Key":"count from","Fragments":["checkUpper,"]},{"Key":"from checkUpper,","Fragments":["but"]},{"Key":"checkUpper, but","Fragments":["that"]},{"Key":"a javascript","Fragments":["convention"]},{"Key":"javascript convention","Fragments":["that"]},{"Key":"in c#?","Fragments":["Can"]},{"Key":"c#? Can","Fragments":["anyone"]},{"Key":"Can anyone","Fragments":["elaborate"]},{"Key":"anyone elaborate","Fragments":["if"]},{"Key":"elaborate if","Fragments":["feeling"]},{"Key":"if feeling","Fragments":["generous?"]},{"Key":"feeling generous?","Fragments":["Thank"]},{"Key":"generous? Thank","Fragments":["you"]},{"Key":"liked this","Fragments":["exercise."]},{"Key":"I typed","Fragments":["out"]},{"Key":"typed out","Fragments":["what"]},{"Key":"accomplish to","Fragments":["solve"]},{"Key":"the puzzle","Fragments":["and"]},{"Key":"puzzle and","Fragments":["then"]},{"Key":"then built","Fragments":["a"]},{"Key":"built a","Fragments":["solution."]},{"Key":"a solution.","Fragments":["Then,"]},{"Key":"solution. Then,","Fragments":["once"]},{"Key":"Then, once","Fragments":["I"]},{"Key":"had everything","Fragments":["the"]},{"Key":"everything the","Fragments":["way"]},{"Key":"should be,","Fragments":["I"]},{"Key":"be, I","Fragments":["ran"]},{"Key":"ran it","Fragments":["against"]},{"Key":"it passed.","Fragments":["A"]},{"Key":"passed. A","Fragments":["great"]},{"Key":"Ok, took","Fragments":["a"]},{"Key":"had taken","Fragments":["the"]},{"Key":"taken the","Fragments":["non"]},{"Key":"the non","Fragments":["condensed"]},{"Key":"non condensed","Fragments":["route."]},{"Key":"condensed route.","Fragments":["Realizing"]},{"Key":"route. Realizing","Fragments":["that"]},{"Key":"Realizing that","Fragments":["a"]},{"Key":"to condensing","Fragments":["this"]},{"Key":"condensing this","Fragments":["code."]},{"Key":"I be","Fragments":["including"]},{"Key":"be including","Fragments":["a"]},{"Key":"including a","Fragments":["namespace?"]},{"Key":"a namespace?","Fragments":["I"]},{"Key":"namespace? I","Fragments":["can't"]},{"Key":"without editing","Fragments":["the"]},{"Key":"editing the","Fragments":["Year.IsLeap"]},{"Key":"the Year.IsLeap","Fragments":["to"]},{"Key":"Year.IsLeap to","Fragments":["include"]},{"Key":" UPDATE:","Fragments":["I"]},{"Key":"UPDATE: I","Fragments":["referenced"]},{"Key":"I referenced","Fragments":["the"]},{"Key":"referenced the","Fragments":["namespace"]},{"Key":"namespace I","Fragments":["used"]},{"Key":"test file,","Fragments":["is"]},{"Key":"file, is","Fragments":["that"]},{"Key":"Like this.","Fragments":["Wish"]},{"Key":"this. Wish","Fragments":["I'd"]},{"Key":"Wish I'd","Fragments":["thought"]},{"Key":"I'd thought","Fragments":["of"]},{"Key":"the words.","Fragments":["Very"]},{"Key":"words. Very","Fragments":["nice;"]},{"Key":"Very nice;","Fragments":["simple"]},{"Key":"nice; simple","Fragments":["but"]},{"Key":" Tough","Fragments":["to"]},{"Key":"Tough to","Fragments":["find"]},{"Key":"find anything","Fragments":["to"]},{"Key":"actually \"Nitpick\"","Fragments":["in"]},{"Key":"\"Nitpick\" in","Fragments":["your"]},{"Key":"your implementation.","Fragments":["Maybe"]},{"Key":"implementation. Maybe","Fragments":["a"]},{"Key":"Match otherwise","Fragments":["it"]},{"Key":"When comparing","Fragments":["doubles,"]},{"Key":"comparing doubles,","Fragments":["Resharper"]},{"Key":"doubles, Resharper","Fragments":["suggests"]},{"Key":"Resharper suggests","Fragments":["doing","that?","renaming"]},{"Key":"suggests doing","Fragments":["it"]},{"Key":"way. And","Fragments":["yes,"]},{"Key":" @elmore","Fragments":["I"]},{"Key":"@elmore I","Fragments":["have"]},{"Key":"to admit","Fragments":["I"]},{"Key":"admit I","Fragments":["cheated"]},{"Key":"I cheated","Fragments":["this"]},{"Key":"cheated this","Fragments":["time"]},{"Key":" used","Fragments":["Linq"]},{"Key":"used Linq","Fragments":["in"]},{"Key":"in Create..","Fragments":["but"]},{"Key":"Create.. but","Fragments":["couldn't"]},{"Key":"do so","Fragments":["in"]},{"Key":"statement. Even","Fragments":["better,"]},{"Key":"Even better,","Fragments":["you"]},{"Key":"better, you","Fragments":["could"]},{"Key":"the implementation.","Fragments":["I'd"]},{"Key":"implementation. I'd","Fragments":["consider"]},{"Key":"ensure you","Fragments":["don't"]},{"Key":"any null","Fragments":["reference"]},{"Key":"reference exceptions","Fragments":["anywhere."]},{"Key":"convention point","Fragments":["of"]},{"Key":"view, I'd","Fragments":["maybe"]},{"Key":"I'd maybe","Fragments":["look","consider"]},{"Key":"maybe look","Fragments":["at"]},{"Key":"at \"FormatWord\".","Fragments":["Format"]},{"Key":"\"FormatWord\". Format","Fragments":["can"]},{"Key":"Format can","Fragments":["mean"]},{"Key":"can mean","Fragments":["a"]},{"Key":"of things,","Fragments":["in"]},{"Key":"things, in","Fragments":["this"]},{"Key":"instance the","Fragments":["letters"]},{"Key":"are sorted","Fragments":["alphabetically,"]},{"Key":"sorted alphabetically,","Fragments":["so"]},{"Key":"maybe consider","Fragments":["something"]},{"Key":"consider something","Fragments":["a"]},{"Key":" Aside","Fragments":["from"]},{"Key":"Aside from","Fragments":["that,"]},{"Key":"strip \"what","Fragments":["is"]},{"Key":"\"what is","Fragments":["\""]},{"Key":"is \"","Fragments":["and"]},{"Key":"\" and","Fragments":["\"?\""]},{"Key":"and \"?\"","Fragments":["from"]},{"Key":"\"?\" from","Fragments":["the"]},{"Key":"input string,","Fragments":["moved"]},{"Key":"string, moved","Fragments":["the"]},{"Key":"the unchanging","Fragments":["part"]},{"Key":"unchanging part","Fragments":["of"]},{"Key":"the base","Fragments":["class."]},{"Key":" @jerad","Fragments":["I"]},{"Key":"@jerad I","Fragments":["agree!"]},{"Key":"I agree!","Fragments":["I"]},{"Key":"agree! I","Fragments":["have"]},{"Key":"have submitted","Fragments":["a"]},{"Key":"iteration that","Fragments":["use"]},{"Key":"the shorter","Fragments":["option.","two"]},{"Key":"No you","Fragments":["learnt"]},{"Key":"you learnt","Fragments":["something","how"]},{"Key":"learnt something","Fragments":["I"]},{"Key":"I hope!","Fragments":["I"]},{"Key":"hope! I","Fragments":["have"]},{"Key":"have learnt","Fragments":["quite"]},{"Key":"learnt quite","Fragments":["a"]},{"Key":"few tricks","Fragments":["here,"]},{"Key":"tricks here,","Fragments":["try"]},{"Key":"here, try","Fragments":["and"]},{"Key":"and puzzle","Fragments":["it"]},{"Key":"puzzle it","Fragments":["out"]},{"Key":"out first","Fragments":["and"]},{"Key":"the answer.","Fragments":["Puzzling"]},{"Key":"answer. Puzzling","Fragments":["it"]},{"Key":"Puzzling it","Fragments":["out"]},{"Key":"out whther","Fragments":["succeeding"]},{"Key":"whther succeeding","Fragments":["or"]},{"Key":"succeeding or","Fragments":["failing"]},{"Key":"failing is","Fragments":["the"]},{"Key":"the key,","Fragments":["I"]},{"Key":"key, I","Fragments":["hope"]},{"Key":"enum Thanks","Fragments":["(and"]},{"Key":"Thanks (and","Fragments":["for"]},{"Key":"(and for","Fragments":["the"]},{"Key":"the Cast()","Fragments":["of"]},{"Key":"Cast() of","Fragments":["course!)"]},{"Key":"Still somewhat","Fragments":["complicated;"]},{"Key":" a)","Fragments":["The"]},{"Key":"a) The","Fragments":["NameAttribute"]},{"Key":"The NameAttribute","Fragments":["is"]},{"Key":"NameAttribute is","Fragments":["nice"]},{"Key":"nice but","Fragments":["overkill"]},{"Key":"but overkill","Fragments":["here,"]},{"Key":"here, there","Fragments":["is"]},{"Key":"simple method","Fragments":["to"]},{"Key":"avoid its","Fragments":["need"]},{"Key":" b)","Fragments":["you"]},{"Key":"b) you","Fragments":["dont"]},{"Key":"you dont","Fragments":["need","need","need","need","need"]},{"Key":"the Discard","Fragments":["extension"]},{"Key":"exercise implies","Fragments":["using"]},{"Key":"implies using","Fragments":["a"]},{"Key":"foreach since","Fragments":["there"]},{"Key":"no side","Fragments":["effects","effects"]},{"Key":"effects or","Fragments":["mutation"]},{"Key":"or mutation","Fragments":["involved"]},{"Key":"Short but","Fragments":["an"]},{"Key":"of actions","Fragments":["seems"]},{"Key":"actions seems","Fragments":["far"]},{"Key":"seems far","Fragments":["more"]},{"Key":"also the","Fragments":["logic"]},{"Key":"the commands","Fragments":["and"]},{"Key":"commands and","Fragments":["their"]},{"Key":"their values","Fragments":["is"]},{"Key":"is disconnected","Fragments":["this"]},{"Key":"disconnected this","Fragments":["way"]},{"Key":"course I","Fragments":["thought"]},{"Key":"IMHO it","Fragments":["is"]},{"Key":"overkill using","Fragments":["Math.Pow()"]},{"Key":"using Math.Pow()","Fragments":["in"]},{"Key":"Math.Pow() in","Fragments":["IsPythagorean"]},{"Key":"in IsPythagorean","Fragments":["and"]},{"Key":"IsPythagorean and","Fragments":["since"]},{"Key":"lot probably","Fragments":["good"]},{"Key":"probably good","Fragments":["to"]},{"Key":"simplify -","Fragments":["an"]},{"Key":"- an","Fragments":["optimisation"]},{"Key":"an optimisation","Fragments":["that"]},{"Key":"optimisation that","Fragments":["is"]},{"Key":"The really","Fragments":["interesting"]},{"Key":"challenge is","Fragments":["not"]},{"Key":"loops in","Fragments":["where","this"]},{"Key":"in where","Fragments":[":-)"]},{"Key":" Every","Fragments":["other"]},{"Key":"Every other","Fragments":["solution"]},{"Key":"other solution","Fragments":["re-runs"]},{"Key":"solution re-runs","Fragments":["Enumerable.Range"]},{"Key":"re-runs Enumerable.Range","Fragments":["once"]},{"Key":"Enumerable.Range once","Fragments":["for"]},{"Key":"call (or","Fragments":["twice"]},{"Key":"(or twice","Fragments":["in"]},{"Key":"in SumOfSquares())","Fragments":["I"]},{"Key":"SumOfSquares()) I","Fragments":["think"]},{"Key":"it good","Fragments":["practise"]},{"Key":"good practise","Fragments":["to"]},{"Key":"practise to","Fragments":["avoid"]},{"Key":"that which","Fragments":["I"]},{"Key":"The cipher","Fragments":["if"]},{"Key":"cipher if","Fragments":["..then...else"]},{"Key":"if ..then...else","Fragments":["can"]},{"Key":"..then...else can","Fragments":["be"]},{"Key":"with tertiary","Fragments":["operator"]},{"Key":" Dont","Fragments":["see","need","like","bother"]},{"Key":"Dont see","Fragments":["the"]},{"Key":"string builder","Fragments":["or"]},{"Key":"builder or","Fragments":["foreach"]},{"Key":"or foreach","Fragments":["...."]},{"Key":"can Linqyfy","Fragments":["Luhn"]},{"Key":"Linqyfy Luhn","Fragments":["too"]},{"Key":"Luhn too","Fragments":["but"]},{"Key":"too but","Fragments":["your","you"]},{"Key":"quite different","Fragments":["to"]},{"Key":"Generally when","Fragments":["I"]},{"Key":"a for/while/do","Fragments":["loop"]},{"Key":"for/while/do loop","Fragments":["it"]},{"Key":" Math.Pow()","Fragments":["makes"]},{"Key":"Math.Pow() makes","Fragments":["sense"]},{"Key":"in SquareOfSums","Fragments":["but"]},{"Key":"SquareOfSums but","Fragments":["not"]},{"Key":" Constructor","Fragments":["with"]},{"Key":"Constructor with","Fragments":["optional"]},{"Key":"with optional","Fragments":["parameters"]},{"Key":"optional parameters","Fragments":["rather"]},{"Key":"parameters rather","Fragments":["than"]},{"Key":"have business","Fragments":["logic"]},{"Key":"logic distributed","Fragments":["over"]},{"Key":"distributed over","Fragments":["4"]},{"Key":"over 4","Fragments":["methods"]},{"Key":"4 methods","Fragments":["can"]},{"Key":"methods can","Fragments":["all"]},{"Key":"can all","Fragments":["be"]},{"Key":"be put","Fragments":["into"]},{"Key":"into on","Fragments":["method"]},{"Key":"on method","Fragments":["which"]},{"Key":"be both","Fragments":["shorter"]},{"Key":"both shorter","Fragments":["and"]},{"Key":"exercises was","Fragments":["implying"]},{"Key":"was implying","Fragments":["storing"]},{"Key":"implying storing","Fragments":["one"]},{"Key":"one variable","Fragments":["-"]},{"Key":"- minutes","Fragments":["not","and"]},{"Key":"minutes not","Fragments":["two"]},{"Key":"not two","Fragments":["-"]},{"Key":"two -","Fragments":["minutes"]},{"Key":"minutes and","Fragments":["hours","hours,"]},{"Key":"hours -","Fragments":["and"]},{"Key":"this simplifies","Fragments":["the"]},{"Key":" yup","Fragments":["now"]},{"Key":"yup now","Fragments":["I"]},{"Key":"I ahve","Fragments":["an"]},{"Key":"ahve an","Fragments":["issue"]},{"Key":"three nested","Fragments":["for"]},{"Key":"nested for","Fragments":["loops."]},{"Key":"loops. Ok","Fragments":["in"]},{"Key":"Ok in","Fragments":["C"]},{"Key":"C but","Fragments":["this"]},{"Key":"simply unnest","Fragments":["the"]},{"Key":"unnest the","Fragments":["three"]},{"Key":"three \"for\"","Fragments":["loops"]},{"Key":"\"for\" loops","Fragments":["-"]},{"Key":"loops -","Fragments":["the"]},{"Key":"same technique","Fragments":["when"]},{"Key":"technique when","Fragments":["using"]},{"Key":"multiple usings","Fragments":["for"]},{"Key":"usings for","Fragments":["IDisposable"]},{"Key":"for IDisposable","Fragments":["-"]},{"Key":"IDisposable -","Fragments":["as"]},{"Key":"only action","Fragments":["at"]},{"Key":"action at","Fragments":["the"]},{"Key":"inner nest","Fragments":["i.e."]},{"Key":" for(int","Fragments":["a..","i=0;"]},{"Key":" for(Int","Fragments":["b..."]},{"Key":" for(in","Fragments":["c"]},{"Key":"or ,","Fragments":["you"]},{"Key":", you","Fragments":["can","can"]},{"Key":" Revision","Fragments":["without"]},{"Key":"Revision without","Fragments":["custom"]},{"Key":"without custom","Fragments":["string"]},{"Key":"custom string","Fragments":["extensions"]},{"Key":"how in","Fragments":["the"]},{"Key":"iteration this","Fragments":["is"]},{"Key":"update and","Fragments":["IMHO"]},{"Key":"and IMHO","Fragments":["clearer"]},{"Key":"IMHO clearer","Fragments":["than"]},{"Key":"solution. Plus","Fragments":["you"]},{"Key":"Plus you","Fragments":["are"]},{"Key":"are counting","Fragments":["to"]},{"Key":"counting to","Fragments":["maxFactor"]},{"Key":"to maxFactor","Fragments":["when"]},{"Key":"maxFactor when","Fragments":["you"]},{"Key":" Response","Fragments":["to"]},{"Key":"Response to","Fragments":["CodeMonkey25"]},{"Key":"of Char.GetNumericValue(c)","Fragments":["in"]},{"Key":"Char.GetNumericValue(c) in","Fragments":["AddendsGenerator"]},{"Key":"Why have","Fragments":["minutes"]},{"Key":"have minutes","Fragments":["and"]},{"Key":"and hours,","Fragments":["makes"]},{"Key":"hours, makes","Fragments":["business"]},{"Key":"makes business","Fragments":["logic"]},{"Key":"iteration making","Fragments":["Where()"]},{"Key":"making Where()","Fragments":["a"]},{"Key":"Where() a","Fragments":["generator"]},{"Key":" Eliminated","Fragments":["need"]},{"Key":"Eliminated need","Fragments":["for"]},{"Key":"you're curious,","Fragments":["the"]},{"Key":"curious, the","Fragments":["triangle"]},{"Key":"triangle described","Fragments":["in"]},{"Key":"is (a:200","Fragments":["b:375"]},{"Key":"(a:200 b:375","Fragments":["c:425)."]},{"Key":"it (unnested","Fragments":["for"]},{"Key":"(unnested for","Fragments":["loops"]},{"Key":"loops with","Fragments":["no"]},{"Key":"no higher","Fragments":["level"]},{"Key":"level brackets","Fragments":["-"]},{"Key":"brackets -","Fragments":["the"]},{"Key":"different format","Fragments":["alone"]},{"Key":"format alone","Fragments":["should"]},{"Key":"alone should","Fragments":["help"]},{"Key":"readability iMHO)","Fragments":["and"]},{"Key":"iMHO) and","Fragments":["see"]},{"Key":"see we","Fragments":["can"]},{"Key":"Still difficult","Fragments":["to"]},{"Key":"follow CalculateAddends,","Fragments":["My"]},{"Key":"CalculateAddends, My","Fragments":["solution"]},{"Key":"is totally","Fragments":["different"]},{"Key":"totally different","Fragments":["no"]},{"Key":"different no","Fragments":["loops"]},{"Key":"loops only","Fragments":["Linq,"]},{"Key":"only Linq,","Fragments":["looks"]},{"Key":"Linq, looks","Fragments":["more"]},{"Key":"looks more","Fragments":["readable","like"]},{"Key":" Make","Fragments":["Where"]},{"Key":"Make Where","Fragments":["a"]},{"Key":"Where a","Fragments":["generator","generator"]},{"Key":"generator with","Fragments":["yield?","yield"]},{"Key":"Yeah, if","Fragments":["I"]},{"Key":"it again,","Fragments":["I"]},{"Key":"again, I","Fragments":["would"]},{"Key":"a map","Fragments":["-"]},{"Key":"map -","Fragments":["mapping"]},{"Key":"- mapping","Fragments":["the"]},{"Key":"mapping the","Fragments":["bits"]},{"Key":"the actions.","Fragments":["I"]},{"Key":"actions. I","Fragments":["like"]},{"Key":"like storing","Fragments":["a"]},{"Key":"a an","Fragments":["action"]},{"Key":"an action","Fragments":["as"]},{"Key":"action as","Fragments":["a"]},{"Key":"code simple","Fragments":["and"]},{"Key":"and allows","Fragments":["it"]},{"Key":"allows it","Fragments":["to"]},{"Key":"expanded very","Fragments":["easily"]},{"Key":"easily (just","Fragments":["add"]},{"Key":"(just add","Fragments":["more"]},{"Key":"more entries","Fragments":["in"]},{"Key":"Can turn","Fragments":["Commands"]},{"Key":"turn Commands","Fragments":["into"]},{"Key":"Commands into","Fragments":["a"]},{"Key":"Interesting approach,","Fragments":["I'm"]},{"Key":"approach, I'm","Fragments":["more"]},{"Key":"I'm more","Fragments":["traditionalist"]},{"Key":"more traditionalist","Fragments":["with"]},{"Key":"traditionalist with","Fragments":["the"]},{"Key":"this instance,","Fragments":["but","I"]},{"Key":"instance, but","Fragments":["to"]},{"Key":"each their","Fragments":["own."]},{"Key":"One nitpick,","Fragments":["you","you"]},{"Key":"nitpick, you","Fragments":["essentially","have"]},{"Key":"you essentially","Fragments":["have"]},{"Key":"essentially have","Fragments":["three"]},{"Key":"three loops","Fragments":["running","running"]},{"Key":"loops running","Fragments":["here.","here."]},{"Key":"running here.","Fragments":["You","You"]},{"Key":"here. You","Fragments":["actually","actually","need"]},{"Key":"You actually","Fragments":["only","only"]},{"Key":"actually only","Fragments":["need","need"]},{"Key":"need two.","Fragments":["Since","Since"]},{"Key":"two. Since","Fragments":["we","we"]},{"Key":"Since we","Fragments":["are","are"]},{"Key":"only concerned","Fragments":["with","with"]},{"Key":"concerned with","Fragments":["Pythagorean","Pythagorean"]},{"Key":"with Pythagorean","Fragments":["triangles,","triangles,"]},{"Key":"Pythagorean triangles,","Fragments":["you","you"]},{"Key":"triangles, you","Fragments":["can","can"]},{"Key":"run two","Fragments":["loop","loop"]},{"Key":"two loop","Fragments":["and","and"]},{"Key":"and calculate","Fragments":["what","what"]},{"Key":"calculate what","Fragments":["the","the"]},{"Key":"third side","Fragments":["would","would"]},{"Key":"side would","Fragments":["be","be"]},{"Key":"be (","Fragments":["double","double"]},{"Key":"( double","Fragments":["c","c"]},{"Key":"double c","Fragments":["=","="]},{"Key":"= Math.Sqrt(a*a","Fragments":["+","+"]},{"Key":"Math.Sqrt(a*a +","Fragments":["b*b);","b*b);"]},{"Key":"+ b*b);","Fragments":[").",")."]},{"Key":"alternate implementation","Fragments":["suggestion:"]},{"Key":"implementation suggestion:","Fragments":["You"]},{"Key":"suggestion: You","Fragments":["could"]},{"Key":"use _t.Sum()","Fragments":["for"]},{"Key":"_t.Sum() for","Fragments":["Sum"]},{"Key":"for Sum","Fragments":["and"]},{"Key":"and _t.Aggregate","Fragments":["for"]},{"Key":"_t.Aggregate for","Fragments":["Product()."]},{"Key":"for Product().","Fragments":["It"]},{"Key":"Product(). It","Fragments":["probably"]},{"Key":"run any","Fragments":["faster,"]},{"Key":"any faster,","Fragments":["but"]},{"Key":"it's Linq","Fragments":["so"]},{"Key":"it's cool.","Fragments":[":-)"]},{"Key":" @delbert","Fragments":["nice"]},{"Key":"@delbert nice","Fragments":["idea,"]},{"Key":"nice idea,","Fragments":["but"]},{"Key":"would humbly","Fragments":["suggest"]},{"Key":"humbly suggest","Fragments":["trying"]},{"Key":"suggest trying","Fragments":["to"]},{"Key":"the \"for\"","Fragments":["loops,"]},{"Key":"\"for\" loops,","Fragments":["this"]},{"Key":"loops, this","Fragments":["is"]},{"Key":"is c#","Fragments":["not"]},{"Key":"c# not","Fragments":["c!"]},{"Key":"not c!","Fragments":[":;-)"]},{"Key":"c! :;-)","Fragments":["\"For\""]},{"Key":":;-) \"For\"","Fragments":["loops"]},{"Key":"\"For\" loops","Fragments":["should"]},{"Key":"loops should","Fragments":["only"]},{"Key":"be needed","Fragments":["for"]},{"Key":"for optimisation.","Fragments":["C#"]},{"Key":"optimisation. C#","Fragments":["should"]},{"Key":"be mostly","Fragments":["loopless"]},{"Key":"mostly loopless","Fragments":["as"]},{"Key":"loopless as","Fragments":["in"]},{"Key":"other modern","Fragments":["languages"]},{"Key":"had Sum()","Fragments":["and"]},{"Key":"Sum() and","Fragments":["Aggregate()"]},{"Key":"and Aggregate()","Fragments":["in"]},{"Key":"Aggregate() in","Fragments":["earlier"]},{"Key":"in earlier","Fragments":["iteration"]},{"Key":"earlier iteration","Fragments":["but"]},{"Key":"make Where","Fragments":["a"]},{"Key":"int c","Fragments":["="]},{"Key":"if (c_double","Fragments":["=="]},{"Key":"(c_double ==","Fragments":["c)"]},{"Key":"ensure equality","Fragments":["in"]},{"Key":"equality in","Fragments":["tests...","comparing","comparing"]},{"Key":"done some","Fragments":["reading"]},{"Key":"some reading","Fragments":["on"]},{"Key":"reading on","Fragments":["the"]},{"Key":"the Double","Fragments":["\u0026"]},{"Key":"Double \u0026","Fragments":["Integer"]},{"Key":"\u0026 Integer","Fragments":["comparisons."]},{"Key":"Integer comparisons.","Fragments":["That's"]},{"Key":"comparisons. That's","Fragments":["a"]},{"Key":"a thorny","Fragments":["issue..."]},{"Key":"with adjustments","Fragments":["on"]},{"Key":"adjustments on","Fragments":["b's"]},{"Key":"on b's","Fragments":["ranges"]},{"Key":"b's ranges","Fragments":["and"]},{"Key":"ranges and","Fragments":["a"]},{"Key":"more careful","Fragments":["check"]},{"Key":"careful check","Fragments":["if"]},{"Key":"if c","Fragments":["is"]},{"Key":"really an","Fragments":["int."]},{"Key":"int. Based","Fragments":["off"]},{"Key":"Based off","Fragments":["nits"]},{"Key":"off nits","Fragments":["made"]},{"Key":"nits made","Fragments":["by"]},{"Key":"b*b); ).","Fragments":["You"]},{"Key":"). You","Fragments":["will"]},{"Key":"whole integer","Fragments":["before"]},{"Key":"integer before","Fragments":["using"]},{"Key":"before using","Fragments":["it."]},{"Key":"i and","Fragments":["j","j"]},{"Key":"and j","Fragments":["can"]},{"Key":"j can","Fragments":["be"]},{"Key":"more limited","Fragments":["in"]},{"Key":"limited in","Fragments":["ranges"]},{"Key":" plus","Fragments":["you"]},{"Key":"plus you","Fragments":["should"]},{"Key":"the IsPythogrean","Fragments":["test"]},{"Key":"IsPythogrean test","Fragments":["after"]},{"Key":"test after","Fragments":["the"]},{"Key":"sum filter","Fragments":["this"]},{"Key":"filter this","Fragments":["will"]},{"Key":"still improve","Fragments":["the"]},{"Key":"the ranges","Fragments":["of","is"]},{"Key":"ranges of","Fragments":["i"]},{"Key":"improve it.","Fragments":["Any"]},{"Key":"it. Any","Fragments":["general"]},{"Key":"Any general","Fragments":["comments"]},{"Key":"general comments","Fragments":["are"]},{"Key":" @janie","Fragments":["nice"]},{"Key":"@janie nice","Fragments":["idea"]},{"Key":"Removed unnecessary","Fragments":["Math"]},{"Key":"unnecessary Math","Fragments":["function"]},{"Key":"Math function","Fragments":["for"]},{"Key":"for grouping","Fragments":["in"]},{"Key":"grouping in","Fragments":["Segment()"]},{"Key":"Better filtering","Fragments":["on"]},{"Key":"filtering on","Fragments":["calculated"]},{"Key":"on calculated","Fragments":["k,"]},{"Key":"calculated k,","Fragments":["tests"]},{"Key":"k, tests","Fragments":["could"]},{"Key":"catch this","Fragments":["maybe?"]},{"Key":"Still missing","Fragments":["the"]},{"Key":"here IMV,","Fragments":["this"]},{"Key":"IMV, this","Fragments":["problem"]},{"Key":"is tailor","Fragments":["made"]},{"Key":"tailor made","Fragments":["for"]},{"Key":"made for","Fragments":["flagged"]},{"Key":"for flagged","Fragments":["enums."]},{"Key":"flagged enums.","Fragments":["Various"]},{"Key":"enums. Various","Fragments":["other"]},{"Key":"Various other","Fragments":["solutions"]},{"Key":"solutions all","Fragments":["use"]},{"Key":"all use","Fragments":["this"]},{"Key":"prefer for","Fragments":["loop"]},{"Key":"loop for","Fragments":["this","indexing,"]},{"Key":"can issue","Fragments":["a"]},{"Key":"issue a","Fragments":["break"]},{"Key":"break statement","Fragments":["and"]},{"Key":"and stop","Fragments":["iterating"]},{"Key":"stop iterating","Fragments":["early."]},{"Key":"iterating early.","Fragments":["I"]},{"Key":"that within","Fragments":["Linq."]},{"Key":"within Linq.","Fragments":["Don't"]},{"Key":"Linq. Don't","Fragments":["get"]},{"Key":"Don't get","Fragments":["me"]},{"Key":"me wrong,","Fragments":["I"]},{"Key":"love Linq","Fragments":["and"]},{"Key":"the time.","Fragments":["But"]},{"Key":"But for","Fragments":["this"]},{"Key":"instance, I","Fragments":["think"]},{"Key":"loop runs","Fragments":["much"]},{"Key":"runs much","Fragments":["faster."]},{"Key":"below code,","Fragments":["I"]},{"Key":"I timed","Fragments":["both"]},{"Key":"timed both","Fragments":["of"]},{"Key":"of our","Fragments":["versions,"]},{"Key":"our versions,","Fragments":["and"]},{"Key":"versions, and","Fragments":["mine"]},{"Key":"and mine","Fragments":["ran"]},{"Key":"mine ran","Fragments":["twice"]},{"Key":"ran twice","Fragments":["as"]},{"Key":"void Main(string[]","Fragments":["args)","args)"]},{"Key":" IEnumerable\u003cTriplet\u003e","Fragments":["triplets"]},{"Key":"IEnumerable\u003cTriplet\u003e triplets","Fragments":["="]},{"Key":"triplets =","Fragments":["null;","Triplet.Where(maxFactor:"]},{"Key":"Stopwatch sw","Fragments":["="]},{"Key":"\u003c 100;","Fragments":["i++)"]},{"Key":" triplets","Fragments":["="]},{"Key":"= Triplet.Where(maxFactor:","Fragments":["1000,"]},{"Key":"Triplet.Where(maxFactor: 1000,","Fragments":["sum:"]},{"Key":"1000, sum:","Fragments":["1000).ToList();"]},{"Key":" Console.WriteLine(\"a:{0}","Fragments":["b:{1}"]},{"Key":"Console.WriteLine(\"a:{0} b:{1}","Fragments":["c:{2}\","]},{"Key":"b:{1} c:{2}\",","Fragments":["t.Sides[0],"]},{"Key":"c:{2}\", t.Sides[0],","Fragments":["t.Sides[1],"]},{"Key":"t.Sides[0], t.Sides[1],","Fragments":["t.Sides[2]);"]},{"Key":" Console.WriteLine(\"Elapsed","Fragments":["Time:","Time"]},{"Key":"Console.WriteLine(\"Elapsed Time:","Fragments":["{0}\","]},{"Key":"Time: {0}\",","Fragments":["sw.ElapsedMilliseconds);"]},{"Key":"didn't adjust","Fragments":["the"]},{"Key":"adjust the","Fragments":["ranges"]},{"Key":"ranges is","Fragments":["that"]},{"Key":"know 100%","Fragments":["that"]},{"Key":"100% that","Fragments":["there"]},{"Key":"a Pythagorean","Fragments":["triangle"]},{"Key":"Pythagorean triangle","Fragments":["where"]},{"Key":"triangle where","Fragments":["a==b."]},{"Key":"where a==b.","Fragments":["Since"]},{"Key":"a==b. Since","Fragments":["the"]},{"Key":"time wasn't","Fragments":["that"]},{"Key":"that different,","Fragments":["I"]},{"Key":"different, I","Fragments":["left"]},{"Key":"left the","Fragments":["adjustment"]},{"Key":"the adjustment","Fragments":["off"]},{"Key":"adjustment off","Fragments":["to"]},{"Key":"double contains","Fragments":["an"]},{"Key":"something similar","Fragments":["to"]},{"Key":"input testing.","Fragments":["Nice"]},{"Key":"testing. Nice","Fragments":["work!"]},{"Key":"method create","Fragments":["an"]},{"Key":"object instance","Fragments":["and"]},{"Key":"instance and","Fragments":["then"]},{"Key":"method, generally","Fragments":["you'll"]},{"Key":"generally you'll","Fragments":["see"]},{"Key":"instance method","Fragments":["call"]},{"Key":"static method.","Fragments":["That"]},{"Key":"That saves","Fragments":["an"]},{"Key":"saves an","Fragments":["object"]},{"Key":"That depends","Fragments":["on"]},{"Key":"you prefer:","Fragments":["memory"]},{"Key":"prefer: memory","Fragments":["or"]},{"Key":"memory or","Fragments":["performance."]},{"Key":"or performance.","Fragments":["You"]},{"Key":"performance. You","Fragments":["are"]},{"Key":"are saving","Fragments":["the"]},{"Key":"saving the","Fragments":["numbers"]},{"Key":"in memory,","Fragments":["but"]},{"Key":"memory, but","Fragments":["you"]},{"Key":"through them.","Fragments":["I"]},{"Key":"them. I","Fragments":["personally"]},{"Key":"since we'll","Fragments":["still"]},{"Key":"we'll still","Fragments":["have"]},{"Key":"same overhead","Fragments":["of"]},{"Key":"of iterating","Fragments":["through"]},{"Key":"through them","Fragments":["while"]},{"Key":"them while","Fragments":["the"]},{"Key":"the Enumerable.Range","Fragments":["method"]},{"Key":"Enumerable.Range method","Fragments":["gives"]},{"Key":"method gives","Fragments":["us"]},{"Key":"gives us","Fragments":["an","a"]},{"Key":"us an","Fragments":["iterator"]},{"Key":"an iterator","Fragments":["that"]},{"Key":"iterator that","Fragments":["doesn't"]},{"Key":"doesn't store","Fragments":["all"]},{"Key":"pointed out,","Fragments":["every"]},{"Key":"every submission","Fragments":["we've"]},{"Key":"submission we've","Fragments":["looked"]},{"Key":"we've looked","Fragments":["at"]},{"Key":"at had","Fragments":["to"]},{"Key":"numbers twice","Fragments":["in"]},{"Key":"in DifferenceOfSquares().","Fragments":["Can"]},{"Key":"DifferenceOfSquares(). Can","Fragments":["you"]},{"Key":"the allergy","Fragments":["score"]},{"Key":"score to","Fragments":["binary"]},{"Key":"to binary","Fragments":["and","conversion"]},{"Key":"binary and","Fragments":["then"]},{"Key":"binary characters","Fragments":["to"]},{"Key":"an allergen","Fragments":["should"]},{"Key":"allergen should","Fragments":["be"]},{"Key":"be listed","Fragments":["or"]},{"Key":"listed or","Fragments":["not."]},{"Key":"prefer my","Fragments":["original"]},{"Key":"original solution","Fragments":["but"]},{"Key":"was assuming","Fragments":["a"]},{"Key":"assuming a","Fragments":["max"]},{"Key":"a max","Fragments":["score"]},{"Key":"of 255","Fragments":["(if"]},{"Key":"255 (if","Fragments":["you"]},{"Key":"were allergic","Fragments":["to"]},{"Key":"allergic to","Fragments":["everything)."]},{"Key":"to everything).","Fragments":["It"]},{"Key":"everything). It","Fragments":["doesn't"]},{"Key":"numbers over","Fragments":["255,"]},{"Key":"over 255,","Fragments":["so"]},{"Key":"255, so","Fragments":["here"]},{"Key":"numbers greater","Fragments":["than"]},{"Key":" Rereading","Fragments":["over"]},{"Key":"Rereading over","Fragments":["my"]},{"Key":"integer to","Fragments":["binary"]},{"Key":"conversion would","Fragments":["make"]},{"Key":"it's on","Fragments":["method,"]},{"Key":"on method,","Fragments":["rather"]},{"Key":"method, rather","Fragments":["than"]},{"Key":"than being","Fragments":["a"]},{"Key":"as iteration","Fragments":["1,"]},{"Key":"iteration 1,","Fragments":["but"]},{"Key":"1, but","Fragments":["I"]},{"Key":"added Trim()","Fragments":["to"]},{"Key":"Trim() to","Fragments":["IsQuestion()"]},{"Key":"to IsQuestion()","Fragments":["to"]},{"Key":"IsQuestion() to","Fragments":["handle"]},{"Key":"handle possibly","Fragments":["trailing"]},{"Key":"possibly trailing","Fragments":["spaces."]},{"Key":"huge fan","Fragments":["of"]},{"Key":"of stringing","Fragments":["ifs"]},{"Key":"stringing ifs","Fragments":["together"]},{"Key":"ifs together","Fragments":["but"]},{"Key":"together but","Fragments":["that's"]},{"Key":"about style","Fragments":["than"]},{"Key":"style than","Fragments":["anything"]},{"Key":"in IsYelling()","Fragments":["is"]},{"Key":"IsYelling() is","Fragments":["pretty"]},{"Key":"pretty dense.","Fragments":["You"]},{"Key":"dense. You","Fragments":["can"]},{"Key":"logic on","Fragments":["the"]},{"Key":"comparing sentence","Fragments":["with"]},{"Key":"sentence with","Fragments":["sentence.ToUpper(),"]},{"Key":"with sentence.ToUpper(),","Fragments":["but"]},{"Key":"sentence.ToUpper(), but","Fragments":["I"]},{"Key":"the \u0026\u0026.","Fragments":["Nice"]},{"Key":"\u0026\u0026. Nice","Fragments":["and"]},{"Key":"Also a","Fragments":["reason"]},{"Key":"reason not","Fragments":["to"]},{"Key":"double operations","Fragments":["on"]},{"Key":"on ints,","Fragments":["IIRC"]},{"Key":"ints, IIRC","Fragments":["not"]},{"Key":"IIRC not","Fragments":["you"]},{"Key":"not you","Fragments":["but","know"]},{"Key":"you but","Fragments":["others"]},{"Key":"but others","Fragments":["have"]},{"Key":"0` evaluates","Fragments":["to"]},{"Key":"value already,","Fragments":["so"]},{"Key":"chain all","Fragments":["of"]},{"Key":"boolean conditions","Fragments":["on"]},{"Key":"line (via","Fragments":["\u0026\u0026"]},{"Key":"(via \u0026\u0026","Fragments":["and"]},{"Key":"and ||)","Fragments":["and"]},{"Key":"||) and","Fragments":["just"]},{"Key":"parentheses around","Fragments":["`year"]},{"Key":"around `year","Fragments":["%"]},{"Key":"% 4`,","Fragments":["etc.,"]},{"Key":"4`, etc.,","Fragments":["are"]},{"Key":"etc., are","Fragments":["redundant"]},{"Key":"well because","Fragments":["of"]},{"Key":"of operator","Fragments":["precedence."]},{"Key":"Simple modulo","Fragments":["logic"]},{"Key":"modulo logic","Fragments":["isolating"]},{"Key":"logic isolating","Fragments":["each"]},{"Key":"isolating each","Fragments":["condition"]},{"Key":"condition from","Fragments":["most"]},{"Key":"from most","Fragments":["to"]},{"Key":"most to","Fragments":["least"]},{"Key":"to least","Fragments":["specific"]},{"Key":"least specific","Fragments":["with"]},{"Key":"specific with","Fragments":["a"]},{"Key":"a fallthrough","Fragments":["to"]},{"Key":"fallthrough to","Fragments":["false."]},{"Key":"false. Though,","Fragments":["I"]},{"Key":"cleaned out","Fragments":["the"]},{"Key":"default **using**","Fragments":["statements."]},{"Key":"**using** statements.","Fragments":[":/"]},{"Key":"I considering","Fragments":["using"]},{"Key":"considering using","Fragments":["something"]},{"Key":"more obvious","Fragments":["for"]},{"Key":"obvious for","Fragments":["readers"]},{"Key":"for readers","Fragments":["not"]},{"Key":"readers not","Fragments":["familiar"]},{"Key":"operator but","Fragments":["it's"]},{"Key":"straightforward trick","Fragments":["once"]},{"Key":"trick once","Fragments":["the"]},{"Key":"is understood","Fragments":["and"]},{"Key":"understood and","Fragments":["the"]},{"Key":"with were","Fragments":["dramatically"]},{"Key":"were dramatically","Fragments":["more"]},{"Key":"dramatically more","Fragments":["verbose."]},{"Key":"unnecessary. Boolean","Fragments":["operators"]},{"Key":"Boolean operators","Fragments":["evaluate"]},{"Key":"operators evaluate","Fragments":["to"]},{"Key":"Linq string","Fragments":["extension"]},{"Key":"extension Last()","Fragments":["and"]},{"Key":"Last() and","Fragments":["the"]},{"Key":"expression look","Fragments":["troublesome"]},{"Key":"look troublesome","Fragments":["on"]},{"Key":"troublesome on","Fragments":["the"]},{"Key":"the surface","Fragments":["but"]},{"Key":"surface but","Fragments":["they"]},{"Key":"they come","Fragments":["out"]},{"Key":"out pretty","Fragments":["semantic"]},{"Key":"pretty semantic","Fragments":["in"]},{"Key":"semantic in","Fragments":["code."]},{"Key":"in code.","Fragments":["I'm"]},{"Key":"code. I'm","Fragments":["not"]},{"Key":"attempt natural","Fragments":["language"]},{"Key":"natural language","Fragments":["processing"]},{"Key":"language processing","Fragments":["as"]},{"Key":"processing as","Fragments":["I"]},{"Key":"can't imagine","Fragments":["that's"]},{"Key":"imagine that's","Fragments":["any"]},{"Key":"that's any","Fragments":["more"]},{"Key":"more semantic","Fragments":["than"]},{"Key":"semantic than","Fragments":["the"]},{"Key":"simple rules","Fragments":["used"]},{"Key":"rules used","Fragments":["here."]},{"Key":"algorithm in","Fragments":["Hey()"]},{"Key":"in Hey()","Fragments":["is"]},{"Key":"Hey() is","Fragments":["brittle;"]},{"Key":"is brittle;","Fragments":["the"]},{"Key":"brittle; the","Fragments":["call"]},{"Key":"to IsYelling()","Fragments":["has","and"]},{"Key":"IsYelling() has","Fragments":["to"]},{"Key":"come before","Fragments":["IsQuestion()"]},{"Key":"before IsQuestion()","Fragments":["or"]},{"Key":"IsQuestion() or","Fragments":["the"]},{"Key":"the Forceful_questions","Fragments":["test"]},{"Key":"Forceful_questions test","Fragments":["fails."]},{"Key":"test fails.","Fragments":["I"]},{"Key":"fails. I","Fragments":["considered"]},{"Key":"following structure","Fragments":["to"]},{"Key":"it's verbose,","Fragments":["repeats"]},{"Key":"verbose, repeats","Fragments":["the"]},{"Key":"repeats the","Fragments":["call"]},{"Key":"IsYelling() and","Fragments":["hurts"]},{"Key":"and hurts","Fragments":["my"]},{"Key":"hurts my","Fragments":["aesthetics."]},{"Key":" Also...","Fragments":["wahWahWah"]},{"Key":"Also... wahWahWah","Fragments":["was"]},{"Key":"wahWahWah was","Fragments":["probably"]},{"Key":"bad choice","Fragments":["of"]},{"Key":"choice of","Fragments":["variable","algorithm."]},{"Key":"of variable","Fragments":["name"]},{"Key":"name but","Fragments":["I"]},{"Key":"couldn't resist","Fragments":["the"]},{"Key":"resist the","Fragments":["Peanuts"]},{"Key":"the Peanuts","Fragments":["reference."]},{"Key":"Peanuts reference.","Fragments":["I'm"]},{"Key":"reference. I'm","Fragments":["a"]},{"Key":"bad coder","Fragments":[":("]},{"Key":"updated on","Fragments":["the"]},{"Key":"the site,","Fragments":["so"]},{"Key":"site, so","Fragments":["I"]},{"Key":"can connect","Fragments":["the"]},{"Key":"the `year","Fragments":["%"]},{"Key":"0` etc.with","Fragments":["`\u0026\u0026`"]},{"Key":"etc.with `\u0026\u0026`","Fragments":["and"]},{"Key":"`||` (and","Fragments":["a"]},{"Key":"(and a","Fragments":["`!`","type"]},{"Key":"a `!`","Fragments":["in"]},{"Key":"`!` in","Fragments":["there)"]},{"Key":"in there)","Fragments":["and"]},{"Key":"there) and","Fragments":["just"]},{"Key":"that value,","Fragments":["since"]},{"Key":"value, since","Fragments":["it's"]},{"Key":"boolean already.","Fragments":["No"]},{"Key":"already. No","Fragments":["need"]},{"Key":"say `if","Fragments":["condtion"]},{"Key":"`if condtion","Fragments":["return"]},{"Key":"condtion return","Fragments":["true`"]},{"Key":"return true`","Fragments":["if"]},{"Key":"true` if","Fragments":["`condition`"]},{"Key":"if `condition`","Fragments":["already"]},{"Key":"`condition` already","Fragments":["evaluates"]},{"Key":"already evaluates","Fragments":["to"]},{"Key":"probably readily","Fragments":["assume"]},{"Key":"readily assume","Fragments":["that"]},{"Key":"is reading","Fragments":["your","your"]},{"Key":"in earnest,","Fragments":["they"]},{"Key":"earnest, they","Fragments":["will"]},{"Key":"will at","Fragments":["least"]},{"Key":"least get","Fragments":["the"]},{"Key":"modulo aspect,","Fragments":["even"]},{"Key":"aspect, even","Fragments":["if"]},{"Key":"syntax in","Fragments":["C#,"]},{"Key":"the `%`","Fragments":["in"]},{"Key":"`%` in","Fragments":["many"]},{"Key":"many languages,","Fragments":["anyway."]},{"Key":"You recalculate","Fragments":["Math.Sqrt(max)"]},{"Key":"recalculate Math.Sqrt(max)","Fragments":["in"]},{"Key":"Math.Sqrt(max) in","Fragments":["loop,"]},{"Key":"in loop,","Fragments":["should"]},{"Key":"loop, should","Fragments":["only"]},{"Key":"Neat alogirthm","Fragments":["but"]},{"Key":"alogirthm but","Fragments":["seems"]},{"Key":"seems some","Fragments":["unnecessary(?)overhead"]},{"Key":"some unnecessary(?)overhead","Fragments":["for"]},{"Key":"unnecessary(?)overhead for","Fragments":["generating"]},{"Key":"generating all","Fragments":["enumerables"]},{"Key":"all enumerables","Fragments":["and"]},{"Key":"enumerables and","Fragments":["then"]},{"Key":"then removing","Fragments":["composites?"]},{"Key":"only just","Fragments":["seen"]},{"Key":"just seen","Fragments":["this."]},{"Key":"seen this.","Fragments":["Thanks"]},{"Key":"this. Thanks","Fragments":["for"]},{"Key":"just starting","Fragments":["to"]},{"Key":"probably other","Fragments":["peoples"]},{"Key":" Cheers!","Fragments":["It"]},{"Key":"Cheers! It","Fragments":["was"]},{"Key":"terrible name","Fragments":["for"]},{"Key":"class wasnt","Fragments":["it"]},{"Key":"I cached","Fragments":["_range","max_sqrt"]},{"Key":"cached _range","Fragments":["to"]},{"Key":"_range to","Fragments":["List"]},{"Key":"List but","Fragments":["I"]},{"Key":"mean. I","Fragments":["think"]},{"Key":"trick for","Fragments":["that"]},{"Key":"that need","Fragments":["to"]},{"Key":"Good, now","Fragments":["you"]},{"Key":"cached max_sqrt","Fragments":["before"]},{"Key":"max_sqrt before","Fragments":["the"]},{"Key":"loop per","Fragments":["the"]},{"Key":"does provide","Fragments":["a"]},{"Key":"performance boost,","Fragments":["it's"]},{"Key":"boost, it's","Fragments":["not"]},{"Key":"as big","Fragments":["as"]},{"Key":"big as","Fragments":["we"]},{"Key":"we expected.","Fragments":["In"]},{"Key":"expected. In","Fragments":["a"]},{"Key":"loop of","Fragments":["100,000"]},{"Key":"of 100,000","Fragments":["iterations,"]},{"Key":"100,000 iterations,","Fragments":["we"]},{"Key":"iterations, we","Fragments":["only"]},{"Key":"only gained","Fragments":["100"]},{"Key":"gained 100","Fragments":["milliseconds"]},{"Key":"100 milliseconds","Fragments":["(2246"]},{"Key":"milliseconds (2246","Fragments":["vs"]},{"Key":"(2246 vs","Fragments":["2346)."]},{"Key":" IEnumerable\u003cint\u003e","Fragments":["primes"]},{"Key":"IEnumerable\u003cint\u003e primes","Fragments":["="]},{"Key":"for(int i=0;","Fragments":["i\u003c100000;"]},{"Key":"i=0; i\u003c100000;","Fragments":["i++)"]},{"Key":" primes","Fragments":["="]},{"Key":" Console.WriteLine(\"[{0}]\",","Fragments":["string.Join(\","]},{"Key":"Console.WriteLine(\"[{0}]\", string.Join(\",","Fragments":["\","]},{"Key":"Console.WriteLine(\"Elapsed Time","Fragments":["="]},{"Key":"Time =","Fragments":["{0}\","]},{"Key":"= {0}\",","Fragments":["stopwatch.ElapsedMilliseconds);"]},{"Key":"early that","Fragments":["is"]},{"Key":"use Any()","Fragments":["for"]},{"Key":"Any() for","Fragments":["amongst"]},{"Key":"for amongst","Fragments":["others."]},{"Key":"amongst others.","Fragments":["The"]},{"Key":"others. The","Fragments":["whole"]},{"Key":"of Enumerable,Range","Fragments":["or"]},{"Key":"Enumerable,Range or","Fragments":["(my"]},{"Key":"or (my","Fragments":["Iota"]},{"Key":"(my Iota","Fragments":["here)"]},{"Key":"Iota here)","Fragments":["is"]},{"Key":"here) is","Fragments":["that"]},{"Key":"these do","Fragments":["not"]},{"Key":"added timings","Fragments":["in"]},{"Key":"in next","Fragments":["iteration"]},{"Key":"really nothing","Fragments":["in"]},{"Key":"it, 6","Fragments":["versions"]},{"Key":"6 versions","Fragments":["and"]},{"Key":"versions and","Fragments":["test"]},{"Key":" see","Fragments":["my"]},{"Key":" let","Fragments":["k"]},{"Key":"let k","Fragments":["="]},{"Key":"k =","Fragments":["Math.Sqrt(i*i","Math.Sqrt(i*i"]},{"Key":"= Math.Sqrt(i*i","Fragments":["+","+"]},{"Key":"Math.Sqrt(i*i +","Fragments":["j*j)","j*j);"]},{"Key":" where","Fragments":["Math.Abs(k"]},{"Key":"where Math.Abs(k","Fragments":["-"]},{"Key":"Math.Abs(k -","Fragments":["Math.Floor(k))"]},{"Key":"- Math.Floor(k))","Fragments":["TOLERANCE\u0026\u0026k\u003c=maxFactor","\u003cTOLERANCE\u0026\u0026k\u003c=maxFactor)"]},{"Key":"var k","Fragments":["="]},{"Key":"( (Math.Abs(k","Fragments":["-"]},{"Key":"(Math.Abs(k -","Fragments":["Math.Floor(k))"]},{"Key":" Choosing","Fragments":["the"]},{"Key":"Choosing the","Fragments":["correct"]},{"Key":"correct colection9s)","Fragments":["makes"]},{"Key":"colection9s) makes","Fragments":["the"]},{"Key":" ````Dictionary\u003cstring,","Fragments":["Func\u003cint,"]},{"Key":"````Dictionary\u003cstring, Func\u003cint,","Fragments":["int,"]},{"Key":"Func\u003cint, int,","Fragments":["int\u003e\u003e````","int\u003e\u003e"]},{"Key":"int, int\u003e\u003e````","Fragments":["to"]},{"Key":"int\u003e\u003e```` to","Fragments":["maps"]},{"Key":"to maps","Fragments":["words"]},{"Key":"maps words","Fragments":["to"]},{"Key":" ````Stack\u003cstring\u003e()````","Fragments":["for"]},{"Key":"````Stack\u003cstring\u003e()```` for","Fragments":["processing"]},{"Key":"for processing","Fragments":["the"]},{"Key":"and supplying","Fragments":["intermediate"]},{"Key":"supplying intermediate","Fragments":["results"]},{"Key":"Wow! Big","Fragments":["effort!"]},{"Key":" Abstract","Fragments":["class"]},{"Key":"Abstract class","Fragments":["Operation"]},{"Key":"class Operation","Fragments":["and"]},{"Key":"Operation and","Fragments":["its"]},{"Key":"its derivatives","Fragments":["could"]},{"Key":"derivatives could","Fragments":["be"]},{"Key":"``` Dictionary\u003cstring,","Fragments":["Func\u003cint,"]},{"Key":"Dictionary\u003cstring, Func\u003cint,","Fragments":["int,"]},{"Key":"int, int\u003e\u003e","Fragments":["```"]},{"Key":"Added tests","Fragments":["to"]},{"Key":"each version","Fragments":["of"]},{"Key":"of Where","Fragments":["is"]},{"Key":"Where is","Fragments":["correct"]},{"Key":" Enhanced","Fragments":["timings"]},{"Key":"Enhanced timings","Fragments":["with"]},{"Key":"timings with","Fragments":["(questionable?)"]},{"Key":"with (questionable?)","Fragments":["GC.Collect()"]},{"Key":"(questionable?) GC.Collect()","Fragments":["and"]},{"Key":"GC.Collect() and","Fragments":["repeat"]},{"Key":"and repeat","Fragments":["each"]},{"Key":"repeat each","Fragments":["run"]},{"Key":"each run","Fragments":["10"]},{"Key":"run 10","Fragments":["times"]},{"Key":"10 times","Fragments":["and"]},{"Key":"get average.","Fragments":["The"]},{"Key":"average. The","Fragments":["results"]},{"Key":"The results","Fragments":["are:-"]},{"Key":" i=0,","Fragments":["time"]},{"Key":"i=0, time","Fragments":["="]},{"Key":"time =","Fragments":["26313.9","11335364.8","12513.5","10082578.8","6814.3","9876575.3","15682.9","10646878.5","7940.3","9981984.7","5488","9736186.5````"]},{"Key":" i=1,","Fragments":["time","time"]},{"Key":"i=1, time","Fragments":["=","="]},{"Key":" i=2,","Fragments":["time","time"]},{"Key":"i=2, time","Fragments":["=","="]},{"Key":" i=3,","Fragments":["time","time"]},{"Key":"i=3, time","Fragments":["=","="]},{"Key":" i=4,","Fragments":["time","time"]},{"Key":"i=4, time","Fragments":["=","="]},{"Key":" i=5,","Fragments":["time","time"]},{"Key":"i=5, time","Fragments":["=","="]},{"Key":" 0:","Fragments":["from"]},{"Key":"0: from","Fragments":["2"]},{"Key":" 1:","Fragments":["from"]},{"Key":"1: from","Fragments":["3"]},{"Key":" 2:","Fragments":["foreach"]},{"Key":"2: foreach","Fragments":["2"]},{"Key":"foreach 2","Fragments":["loops"]},{"Key":" 3:","Fragments":["foreach"]},{"Key":"3: foreach","Fragments":["3"]},{"Key":"foreach 3","Fragments":["loops"]},{"Key":" 4:","Fragments":["for"]},{"Key":"4: for","Fragments":["2"]},{"Key":" 5:for","Fragments":["3"]},{"Key":"5:for 3","Fragments":["loops."]},{"Key":"So most","Fragments":["important"]},{"Key":"most important","Fragments":["is","lesson"]},{"Key":"your 3","Fragments":["to"]},{"Key":"2 loop","Fragments":["solution"]},{"Key":"loop solution","Fragments":["has"]},{"Key":"solution has","Fragments":["the"]},{"Key":"largest order","Fragments":["of"]},{"Key":"of magnitude","Fragments":["improvement.","harder"]},{"Key":"is weird","Fragments":["how"]},{"Key":"weird how","Fragments":["the"]},{"Key":"the from","Fragments":["is"]},{"Key":"- resharper","Fragments":["can"]},{"Key":"resharper can","Fragments":["automatically"]},{"Key":"can automatically","Fragments":["convert"]},{"Key":"automatically convert","Fragments":["from"]},{"Key":"convert from","Fragments":["one"]},{"Key":"other with","Fragments":["no"]},{"Key":"no help!","Fragments":["This"]},{"Key":"help! This","Fragments":["difference"]},{"Key":"This difference","Fragments":["is"]},{"Key":"a StackOverflow","Fragments":["question."]},{"Key":"Yes, as","Fragments":["originally"]},{"Key":"originally expected","Fragments":["the"]},{"Key":"expected the","Fragments":["for"]},{"Key":"faster, there","Fragments":["is"]},{"Key":"no GetEnumerator,","Fragments":["MoveNext()"]},{"Key":"GetEnumerator, MoveNext()","Fragments":["and"]},{"Key":"MoveNext() and","Fragments":["Current"]},{"Key":"and Current","Fragments":["indirection"]},{"Key":"Current indirection","Fragments":["and"]},{"Key":"indirection and","Fragments":["lamdba"]},{"Key":"and lamdba","Fragments":["calls,"]},{"Key":"lamdba calls,","Fragments":["so"]},{"Key":"calls, so","Fragments":["now"]},{"Key":"now no","Fragments":["surprise."]},{"Key":" **Still","Fragments":["my"]},{"Key":"**Still my","Fragments":["argument"]},{"Key":"my argument","Fragments":["was"]},{"Key":"argument was","Fragments":["always"]},{"Key":"was always","Fragments":["that"]},{"Key":"always that","Fragments":["*for"]},{"Key":"that *for","Fragments":["loops"]},{"Key":"*for loops","Fragments":["are"]},{"Key":"for optimisation*","Fragments":["and"]},{"Key":"optimisation* and","Fragments":["not"]},{"Key":"not readability","Fragments":["which"]},{"Key":"readability which","Fragments":["is"]},{"Key":"these exercises.","Fragments":["Clearly"]},{"Key":"exercises. Clearly","Fragments":["these"]},{"Key":"Clearly these","Fragments":["exercises"]},{"Key":"exercises *could*","Fragments":["be"]},{"Key":"*could* be","Fragments":["setup"]},{"Key":"be setup","Fragments":["to"]},{"Key":"setup to","Fragments":["test"]},{"Key":"performance too,","Fragments":["as"]},{"Key":"too, as","Fragments":["in","I"]},{"Key":"I provided","Fragments":["here.**"]},{"Key":"great fun!","Fragments":["However"]},{"Key":"fun! However","Fragments":["try"]},{"Key":"However try","Fragments":["and"]},{"Key":"use tests","Fragments":["for"]},{"Key":"for timings","Fragments":["too,"]},{"Key":"timings too,","Fragments":["as"]},{"Key":"have done?","Fragments":["Easier"]},{"Key":"done? Easier","Fragments":["to"]},{"Key":"Easier to","Fragments":["hand"]},{"Key":"hand back","Fragments":["and"]},{"Key":"are essential","Fragments":["code"]},{"Key":"essential code","Fragments":["snippets"]},{"Key":"code snippets","Fragments":["here."]},{"Key":"snippets here.","Fragments":[":-)"]},{"Key":" Residue","Fragments":["from"]},{"Key":"Residue from","Fragments":["iteration"]},{"Key":"from iteration","Fragments":["2","2"]},{"Key":"2 where","Fragments":["I"]},{"Key":"remove an","Fragments":["item"]},{"Key":"item from","Fragments":["the"]},{"Key":"the lsit.","Fragments":["Not"]},{"Key":"lsit. Not","Fragments":["needed"]},{"Key":"needed any","Fragments":["more"]},{"Key":" change","Fragments":["it"]},{"Key":" list","Fragments":["="]},{"Key":"the single-line","Fragments":["implementation"]},{"Key":"single-line implementation","Fragments":["and"]},{"Key":"parse at","Fragments":["a"]},{"Key":"glance. You","Fragments":["have"]},{"Key":"3 nested","Fragments":["levels"]},{"Key":"nested levels","Fragments":["of"]},{"Key":"of boolean","Fragments":["logic"]},{"Key":"with OR","Fragments":["and"]},{"Key":"OR and","Fragments":["NOT"]},{"Key":"NOT thrown","Fragments":["in"]},{"Key":"eyes easier","Fragments":["to"]},{"Key":"evaluate by","Fragments":["eye"]},{"Key":"by eye","Fragments":["exactly"]},{"Key":"eye exactly","Fragments":["what"]},{"Key":"what a","Fragments":["given","foreach"]},{"Key":"given input","Fragments":["will"]},{"Key":"input will","Fragments":["return,"]},{"Key":"will return,","Fragments":["and"]},{"Key":"return, and","Fragments":["the"]},{"Key":"the implicit","Fragments":["short"]},{"Key":"implicit short","Fragments":["circuit"]},{"Key":"circuit behavior","Fragments":["is"]},{"Key":"made explicit","Fragments":["by"]},{"Key":"explicit by","Fragments":["breaking"]},{"Key":"conditions (not","Fragments":["that"]},{"Key":"it matters","Fragments":["much"]},{"Key":"matters much","Fragments":["in"]},{"Key":"Great use","Fragments":["of"]},{"Key":"of SelectMany()","Fragments":["did"]},{"Key":"SelectMany() did","Fragments":["not"]},{"Key":"worked on","Fragments":["Dictionaries"]},{"Key":"on Dictionaries","Fragments":["directly!"]},{"Key":"Interesting, I've","Fragments":["never"]},{"Key":"used Enums","Fragments":["in"]},{"Key":"Enums in","Fragments":["this"]},{"Key":"this manner","Fragments":["before."]},{"Key":"manner before.","Fragments":["The"]},{"Key":"before. The","Fragments":["HasFlag()"]},{"Key":"The HasFlag()","Fragments":["method"]},{"Key":"HasFlag() method","Fragments":["seems"]},{"Key":"be handy","Fragments":["for"]},{"Key":"handy for","Fragments":["stuff"]},{"Key":"for stuff","Fragments":["like"]},{"Key":"stuff like","Fragments":["this."]},{"Key":"this. Unfortunately,","Fragments":["having"]},{"Key":"Unfortunately, having","Fragments":["to"]},{"Key":"string replacement","Fragments":["to"]},{"Key":"replacement to","Fragments":["get"]},{"Key":"underscores gives","Fragments":["us"]},{"Key":"a major","Fragments":["performance"]},{"Key":"major performance","Fragments":["hit."]},{"Key":"the ToList()?","Fragments":["Since"]},{"Key":"ToList()? Since","Fragments":["the"]},{"Key":"of Commands()","Fragments":["is"]},{"Key":"Commands() is","Fragments":["IEnumerable\u003cstring\u003e,"]},{"Key":"is IEnumerable\u003cstring\u003e,","Fragments":["it"]},{"Key":"IEnumerable\u003cstring\u003e, it","Fragments":["seems"]},{"Key":"skip that","Fragments":["step"]},{"Key":"that step","Fragments":["and"]},{"Key":"the Enumerable","Fragments":["directly."]},{"Key":" Ran","Fragments":["in"]},{"Key":"Ran in","Fragments":["Release"]},{"Key":"in Release","Fragments":["mode"]},{"Key":"Release mode","Fragments":["rather"]},{"Key":"mode rather","Fragments":["than"]},{"Key":"than debug","Fragments":["(Debug.Print"]},{"Key":"debug (Debug.Print","Fragments":["-\u003e"]},{"Key":"(Debug.Print -\u003e","Fragments":["Console.WriteLine"]},{"Key":"-\u003e Console.WriteLine","Fragments":["but"]},{"Key":"Console.WriteLine but","Fragments":["not"]},{"Key":"not reposting","Fragments":["solution)."]},{"Key":" ````i=0,","Fragments":["time"]},{"Key":"````i=0, time","Fragments":["="]},{"Key":"so differences","Fragments":["are"]},{"Key":"differences are","Fragments":["less"]},{"Key":"less now","Fragments":["(for"]},{"Key":"now (for","Fragments":["2"]},{"Key":"(for 2","Fragments":["loops"]},{"Key":"2 loops","Fragments":["only)"]},{"Key":"foreach =~","Fragments":["1.5*for"]},{"Key":"=~ 1.5*for","Fragments":["whereas"]},{"Key":"1.5*for whereas","Fragments":["in"]},{"Key":"whereas in","Fragments":["Debug"]},{"Key":"Debug foreach","Fragments":["~"]},{"Key":"foreach ~","Fragments":["2*for,"]},{"Key":"~ 2*for,","Fragments":["still"]},{"Key":"2*for, still","Fragments":["from"]},{"Key":"still from","Fragments":["~"]},{"Key":"from ~","Fragments":["2*for"]},{"Key":"~ 2*for","Fragments":["in"]},{"Key":"2*for in","Fragments":["Debug"]},{"Key":"Debug or","Fragments":["Release."]},{"Key":"actual comparison,","Fragments":["so"]},{"Key":"comparison, so","Fragments":["the"]},{"Key":"the Compute","Fragments":["method"]},{"Key":"Compute method","Fragments":["validates"]},{"Key":"method validates","Fragments":["the"]},{"Key":"validates the","Fragments":["input"]},{"Key":"and converts","Fragments":["the"]},{"Key":"converts the","Fragments":["incoming"]},{"Key":"incoming strings","Fragments":["to"]},{"Key":"to char","Fragments":["arrays,","arrays"]},{"Key":"arrays, then","Fragments":["the"]},{"Key":"the Compare","Fragments":["method"]},{"Key":"Compare method","Fragments":["calculates"]},{"Key":"method calculates","Fragments":["the"]},{"Key":"calculates the","Fragments":["hamming"]},{"Key":"my favorite","Fragments":["exercise"]},{"Key":"favorite exercise","Fragments":["to"]},{"Key":"date. I","Fragments":["implemented"]},{"Key":"implemented a","Fragments":["circular"]},{"Key":"a circular","Fragments":["linked"]},{"Key":"circular linked","Fragments":["list,"]},{"Key":"linked list,","Fragments":["and"]},{"Key":"list, and","Fragments":["added"]},{"Key":"the EnumerateForward()","Fragments":["and"]},{"Key":"EnumerateForward() and","Fragments":["EnumerateBackward()"]},{"Key":"and EnumerateBackward()","Fragments":["methods"]},{"Key":"EnumerateBackward() methods","Fragments":["to"]},{"Key":"being built","Fragments":["correctly."]},{"Key":" Done","Fragments":["all"]},{"Key":"Done all","Fragments":["40"]},{"Key":"all 40","Fragments":["exercises,"]},{"Key":"40 exercises,","Fragments":["just"]},{"Key":"exercises, just","Fragments":["as"]},{"Key":"gets interesting","Fragments":["there"]},{"Key":"interesting there","Fragments":["are"]},{"Key":"no more.","Fragments":["We"]},{"Key":"a mechanism","Fragments":["to"]},{"Key":"mechanism to","Fragments":["create"]},{"Key":"new exercises","Fragments":["using"]},{"Key":"exercises using","Fragments":["exercism"]},{"Key":"using exercism","Fragments":["cli"]},{"Key":"exercism cli","Fragments":["and"]},{"Key":"cli and","Fragments":["the"]},{"Key":"the web","Fragments":["site"]},{"Key":"web site","Fragments":["to"]},{"Key":"site to","Fragments":["organise"]},{"Key":"to organise","Fragments":["them."]},{"Key":"organise them.","Fragments":["Dunno"]},{"Key":"them. Dunno","Fragments":["if"]},{"Key":"if questions","Fragments":["have"]},{"Key":"questions have","Fragments":["been"]},{"Key":"been asked","Fragments":["on"]},{"Key":"asked on","Fragments":["this"]},{"Key":"the GitHub","Fragments":["site"]},{"Key":"GitHub site","Fragments":["too"]},{"Key":"site too","Fragments":["many"]},{"Key":"old questions","Fragments":["to"]},{"Key":"questions to","Fragments":["peruse."]},{"Key":"Removing ToList()","Fragments":["breaks"]},{"Key":"ToList() breaks","Fragments":["the"]},{"Key":"tests when","Fragments":["Reverse()"]},{"Key":"when Reverse()","Fragments":["is"]},{"Key":"Reverse() is","Fragments":["called."]},{"Key":"Very slick.","Fragments":["My"]},{"Key":"slick. My","Fragments":["code"]},{"Key":"My code","Fragments":["is","does"]},{"Key":"bit shorter","Fragments":["(14"]},{"Key":"shorter (14","Fragments":["vs"]},{"Key":"(14 vs","Fragments":["48"]},{"Key":"vs 48","Fragments":["lines),"]},{"Key":"48 lines),","Fragments":["but"]},{"Key":"lines), but","Fragments":["yours"]},{"Key":"yours beats","Fragments":["me"]},{"Key":"beats me","Fragments":["in"]},{"Key":"in performance.","Fragments":["My"]},{"Key":"performance. My","Fragments":["code"]},{"Key":"does 1","Fragments":["million"]},{"Key":"million iterations","Fragments":["in"]},{"Key":"iterations in","Fragments":["650"]},{"Key":"in 650","Fragments":["millis"]},{"Key":"650 millis","Fragments":["while"]},{"Key":"millis while","Fragments":["yours"]},{"Key":"while yours","Fragments":["does"]},{"Key":"yours does","Fragments":["it"]},{"Key":"in 500","Fragments":["millis."]},{"Key":"500 millis.","Fragments":["Good"]},{"Key":"millis. Good","Fragments":["job!"]},{"Key":" Yup!","Fragments":["Got"]},{"Key":"Yup! Got","Fragments":["it!"]},{"Key":"your CheckedMinutes()","Fragments":["method"]},{"Key":"CheckedMinutes() method","Fragments":["using"]},{"Key":"method using","Fragments":["this","this","StringBuilder."]},{"Key":"this modulus","Fragments":["trick:","trick:"]},{"Key":"int CheckedMinutes(int","Fragments":["minutes)"]},{"Key":"return (minutes","Fragments":["+"]},{"Key":"(minutes +","Fragments":["MAX_MINUTES)"]},{"Key":"+ MAX_MINUTES)","Fragments":["%"]},{"Key":"MAX_MINUTES) %","Fragments":["MAX_MINUTES;"]},{"Key":"your normalize()","Fragments":["method"]},{"Key":"normalize() method","Fragments":["using"]},{"Key":"private int","Fragments":["normalize(int","normalize(int"]},{"Key":"int normalize(int","Fragments":["m)","m)"]},{"Key":"return (m","Fragments":["+"]},{"Key":"(m +","Fragments":["minutesPerDay)"]},{"Key":"+ minutesPerDay)","Fragments":["%","%"]},{"Key":"minutesPerDay) %","Fragments":["minutesPerDay;","minutesPerDay;"]},{"Key":"Can combine","Fragments":["Dictionary","Foreach","into"]},{"Key":"combine Dictionary","Fragments":["and"]},{"Key":"and Calc","Fragments":["method"]},{"Key":"set '_head'","Fragments":["to"]},{"Key":"'_head' to","Fragments":["null"]},{"Key":"the Deque","Fragments":["is"]},{"Key":"Deque is","Fragments":["empty,"]},{"Key":"null everywhere","Fragments":["you"]},{"Key":"everywhere you","Fragments":["do"]},{"Key":"a '_head.HasValue'","Fragments":["call."]},{"Key":"'_head.HasValue' call.","Fragments":["That"]},{"Key":"call. That","Fragments":["way"]},{"Key":"in Element","Fragments":["as"]},{"Key":"Element as","Fragments":["well"]},{"Key":"exercise. Having","Fragments":["a"]},{"Key":"Having a","Fragments":["linked"]},{"Key":"a linked","Fragments":["list"]},{"Key":"linked list","Fragments":["implementation"]},{"Key":"list implementation","Fragments":["that"]},{"Key":"list under","Fragments":["the"]},{"Key":"the hood","Fragments":["to"]},{"Key":"hood to","Fragments":["keep"]},{"Key":"of their","Fragments":["items"]},{"Key":"their items","Fragments":["is"]},{"Key":"items is","Fragments":["kinda"]},{"Key":"kinda odd.","Fragments":["m_Items"]},{"Key":"odd. m_Items","Fragments":["should"]},{"Key":"m_Items should","Fragments":["be"]},{"Key":"a QueueItem","Fragments":["that"]},{"Key":"QueueItem that","Fragments":["is"]},{"Key":"the First","Fragments":["item"]},{"Key":"First item","Fragments":["in"]},{"Key":"the list.","Fragments":["Each"]},{"Key":"list. Each","Fragments":["QueueItem"]},{"Key":"Each QueueItem","Fragments":["should"]},{"Key":"QueueItem should","Fragments":["keep"]},{"Key":"should keep","Fragments":["track"]},{"Key":"its neighbors,","Fragments":["QueueItem"]},{"Key":"neighbors, QueueItem","Fragments":["next"]},{"Key":"QueueItem next","Fragments":["and"]},{"Key":"next and","Fragments":["QueueItem"]},{"Key":"and QueueItem","Fragments":["previous."]},{"Key":"you understand?","Fragments":["Or"]},{"Key":"understand? Or","Fragments":["were"]},{"Key":"Or were","Fragments":["you"]},{"Key":"were you","Fragments":["trying"]},{"Key":"you trying","Fragments":["something"]},{"Key":"trying something","Fragments":["here"]},{"Key":"something here","Fragments":["that"]},{"Key":"doing it!","Fragments":["And"]},{"Key":"it! And","Fragments":["an"]},{"Key":"And an","Fragments":["improvement"]},{"Key":"improvement nonetheless","Fragments":[":-)"]},{"Key":"switch using","Fragments":["lambdas"]},{"Key":"using lambdas","Fragments":["as"]},{"Key":"lambdas as","Fragments":["values"]},{"Key":"as values","Fragments":["keyed"]},{"Key":"values keyed","Fragments":["off"]},{"Key":"keyed off","Fragments":["'string"]},{"Key":"off 'string","Fragments":["op'."]},{"Key":"with @jadon","Fragments":["."]},{"Key":"@jadon .","Fragments":["While"]},{"Key":". While","Fragments":["it"]},{"Key":"the ToString(),","Fragments":["it"]},{"Key":"ToString(), it","Fragments":["makes"]},{"Key":"more complex.","Fragments":["I'd"]},{"Key":"complex. I'd","Fragments":["suggest"]},{"Key":"suggest only","Fragments":["tracking"]},{"Key":"only tracking","Fragments":["minutes."]},{"Key":"property setter","Fragments":["to"]},{"Key":"setter to","Fragments":["manage"]},{"Key":"the over/under","Fragments":["flow."]},{"Key":"over/under flow.","Fragments":["Good"]},{"Key":"flow. Good","Fragments":["job!"]},{"Key":"The `Readme`","Fragments":["doesn't"]},{"Key":"`Readme` doesn't","Fragments":["mention"]},{"Key":"doesn't mention","Fragments":["anything"]},{"Key":"mention anything","Fragments":["about"]},{"Key":"both strands","Fragments":["to"]},{"Key":"strands to","Fragments":["the"]},{"Key":"avoid nulls","Fragments":["using"]},{"Key":"nulls using","Fragments":["the"]},{"Key":"Object Pattern","Fragments":["(just"]},{"Key":"Pattern (just","Fragments":["HasValue"]},{"Key":"(just HasValue","Fragments":["here)"]},{"Key":"return ((m","Fragments":["%"]},{"Key":"((m %","Fragments":["minutesPerDay)"]},{"Key":"% minutesPerDay)","Fragments":["+"]},{"Key":"minutesPerDay) +","Fragments":["minutesPerDay)"]},{"Key":"it. Can","Fragments":["instantly"]},{"Key":"Can instantly","Fragments":["tell"]},{"Key":"instantly tell","Fragments":["now"]},{"Key":"tell now","Fragments":["what"]},{"Key":"now what","Fragments":["that"]},{"Key":"does without","Fragments":["having"]},{"Key":"Still potential","Fragments":["for"]},{"Key":"to blow","Fragments":["up"]},{"Key":"blow up","Fragments":["if"]},{"Key":"up if","Fragments":["possibleMatches"]},{"Key":"if possibleMatches","Fragments":["is"]},{"Key":"possibleMatches is","Fragments":["null."]},{"Key":"disagree. If","Fragments":["Add()"]},{"Key":"If Add()","Fragments":["was"]},{"Key":"Add() was","Fragments":["called"]},{"Key":"with -1000000,","Fragments":["your"]},{"Key":"-1000000, your","Fragments":["normalize"]},{"Key":"your normalize","Fragments":["would"]},{"Key":"normalize would","Fragments":["not"]},{"Key":"be sufficient.","Fragments":["It"]},{"Key":"sufficient. It","Fragments":["is"]},{"Key":"only after","Fragments":["the"]},{"Key":"% call","Fragments":["that"]},{"Key":"be 100%","Fragments":["sure"]},{"Key":"close enough","Fragments":["to"]},{"Key":"add minutesPerDay","Fragments":["once."]},{"Key":"The '%'","Fragments":["function"]},{"Key":"'%' function","Fragments":["is"]},{"Key":"is _way_","Fragments":["more"]},{"Key":"_way_ more","Fragments":["expensive"]},{"Key":"quick check","Fragments":["for"]},{"Key":"than 0.","Fragments":["Why"]},{"Key":"0. Why","Fragments":["would"]},{"Key":"second time?","Fragments":["Short"]},{"Key":"time? Short","Fragments":["functions"]},{"Key":"Short functions","Fragments":["are"]},{"Key":"functions are","Fragments":["nice,"]},{"Key":"are nice,","Fragments":["but"]},{"Key":"in worse","Fragments":["performance,"]},{"Key":"worse performance,","Fragments":["so"]},{"Key":"performance, so","Fragments":["I'd"]},{"Key":"If minutesPerDay","Fragments":["were"]},{"Key":"minutesPerDay were","Fragments":["a"]},{"Key":"of 2,","Fragments":["then"]},{"Key":"compiler could","Fragments":["probably"]},{"Key":"probably convert","Fragments":["the"]},{"Key":"the '%'","Fragments":["into"]},{"Key":"'%' into","Fragments":["a"]},{"Key":"a bit-wise","Fragments":["OR,"]},{"Key":"bit-wise OR,","Fragments":["but"]},{"Key":"OR, but","Fragments":["since"]},{"Key":"is not,","Fragments":["it"]},{"Key":"not, it","Fragments":["doesn't","won't"]},{"Key":"call '%'","Fragments":["more"]},{"Key":"'%' more","Fragments":["than"]},{"Key":"You reused","Fragments":["so"]},{"Key":"reused so","Fragments":["much"]},{"Key":"much code,","Fragments":["you"]},{"Key":"used generic","Fragments":["types"]},{"Key":"generic types","Fragments":["and"]},{"Key":"make so","Fragments":["many"]},{"Key":"many Keep/Discard","Fragments":["methods."]},{"Key":"Learned about","Fragments":["Generics"]},{"Key":"about Generics","Fragments":["and"]},{"Key":"Generics and","Fragments":["predicates"]},{"Key":"and predicates","Fragments":["in"]},{"Key":" Implemented","Fragments":["yield"]},{"Key":"Implemented yield","Fragments":["(had"]},{"Key":"yield (had","Fragments":["to"]},{"Key":"(had to","Fragments":["change"]},{"Key":"change from","Fragments":["ICollection"]},{"Key":"from ICollection","Fragments":["to"]},{"Key":"ICollection to","Fragments":["IEnumerbale"]},{"Key":"to IEnumerbale","Fragments":["to"]},{"Key":"IEnumerbale to","Fragments":["do"]},{"Key":"do that)","Fragments":["and"]},{"Key":"that) and","Fragments":["changed"]},{"Key":"changed from","Fragments":["three"]},{"Key":"from three","Fragments":["methods"]},{"Key":"three methods","Fragments":["to"]},{"Key":"love this","Fragments":["site:"]},{"Key":"this site:","Fragments":["I"]},{"Key":"site: I","Fragments":["love"]},{"Key":"love finishing","Fragments":["a"]},{"Key":"finishing a","Fragments":["solution"]},{"Key":"solution on","Fragments":["my"]},{"Key":"then submitting","Fragments":["it"]},{"Key":"submitting it","Fragments":["and"]},{"Key":"getting to","Fragments":["look"]},{"Key":"better ways","Fragments":["to"]},{"Key":"are certainly","Fragments":["free"]},{"Key":"certainly free","Fragments":["to"]},{"Key":"code things","Fragments":["any"]},{"Key":"things any","Fragments":["way"]},{"Key":"see fit.","Fragments":["Bear"]},{"Key":"fit. Bear","Fragments":["in"]},{"Key":"Bear in","Fragments":["mind,"]},{"Key":"mind, though,","Fragments":["that"]},{"Key":"your benefit","Fragments":["but"]},{"Key":"benefit but","Fragments":["for"]},{"Key":"benefit for","Fragments":["anyone"]},{"Key":"a \"wrong\"","Fragments":["way"]},{"Key":"\"wrong\" way","Fragments":["of"]},{"Key":"of coding","Fragments":["this"]},{"Key":"coding this","Fragments":["exercise,"]},{"Key":"exercise, per","Fragments":["se,"]},{"Key":"per se,","Fragments":["it's"]},{"Key":"se, it's","Fragments":["just"]},{"Key":"the equivalent","Fragments":["of","of"]},{"Key":"using pronouns","Fragments":["in"]},{"Key":"pronouns in","Fragments":["one's"]},{"Key":"in one's","Fragments":["writing."]},{"Key":"(I mean","Fragments":["this"]},{"Key":"mean this","Fragments":["constructively,"]},{"Key":"this constructively,","Fragments":["by"]},{"Key":"constructively, by","Fragments":["the"]},{"Key":"doesn't come","Fragments":["across"]},{"Key":"come across","Fragments":["that"]},{"Key":"across that","Fragments":["way"]},{"Key":"first blush...","Fragments":["I"]},{"Key":"blush... I","Fragments":["suppose"]},{"Key":"suppose being","Fragments":["nitpicky"]},{"Key":"being nitpicky","Fragments":["in"]},{"Key":"nitpicky in","Fragments":["the"]},{"Key":"the nitpicking","Fragments":["section"]},{"Key":"nitpicking section","Fragments":["is"]},{"Key":"section is","Fragments":["appropriate"]},{"Key":"appropriate :)","Fragments":[")"]},{"Key":" Jamie,","Fragments":["it"]},{"Key":"Jamie, it","Fragments":["looks"]},{"Key":"command you","Fragments":["pasted"]},{"Key":"you pasted","Fragments":["in"]},{"Key":"pasted in","Fragments":["the"]},{"Key":"now, but,","Fragments":["maybe"]},{"Key":"but, maybe","Fragments":["you"]},{"Key":"you tab","Fragments":["completed"]},{"Key":"tab completed","Fragments":["the"]},{"Key":"completed the","Fragments":["LeapTest.cs"]},{"Key":"LeapTest.cs and","Fragments":["got"]},{"Key":"it's intended","Fragments":["constructively."]},{"Key":"intended constructively.","Fragments":["Nitpicking"]},{"Key":"constructively. Nitpicking","Fragments":["is"]},{"Key":"Nitpicking is","Fragments":["part"]},{"Key":"to clarify","Fragments":["my","this?"]},{"Key":"clarify my","Fragments":["response"]},{"Key":"response as","Fragments":["well."]},{"Key":"sounds a","Fragments":["lot"]},{"Key":"more defensive","Fragments":["than"]},{"Key":"defensive than","Fragments":["I"]},{"Key":"intended when","Fragments":["I"]},{"Key":"today. I","Fragments":["only"]},{"Key":"only meant","Fragments":["to"]},{"Key":"structure instead","Fragments":["of"]},{"Key":"other, equally","Fragments":["effective,"]},{"Key":"equally effective,","Fragments":["structure"]},{"Key":"effective, structure","Fragments":["you"]},{"Key":"structure you","Fragments":["suggested."]},{"Key":"you suggested.","Fragments":["As"]},{"Key":"suggested. As","Fragments":["you"]},{"Key":"say, it","Fragments":["*is*"]},{"Key":"it *is*","Fragments":["just"]},{"Key":"*is* just","Fragments":["a"]},{"Key":"question of","Fragments":["taste"]},{"Key":"of taste","Fragments":["and"]},{"Key":"taste and","Fragments":["style."]},{"Key":"and style.","Fragments":["I"]},{"Key":"of brevity","Fragments":["that"]},{"Key":"brevity that","Fragments":["the"]},{"Key":"solution brings","Fragments":["but"]},{"Key":"brings but","Fragments":["I"]},{"Key":"this format","Fragments":["offers"]},{"Key":"format offers","Fragments":["an"]},{"Key":"offers an","Fragments":["algorithm"]},{"Key":"is equally","Fragments":["comprehensible"]},{"Key":"equally comprehensible","Fragments":["by"]},{"Key":"comprehensible by","Fragments":["anyone"]},{"Key":"by anyone","Fragments":["that"]},{"Key":"might read","Fragments":["it."]},{"Key":"read it.","Fragments":["Each"]},{"Key":"it. Each","Fragments":["statement"]},{"Key":"Each statement","Fragments":["is"]},{"Key":"is short,","Fragments":["has"]},{"Key":"short, has","Fragments":["a"]},{"Key":"single purpose,","Fragments":["and"]},{"Key":"purpose, and","Fragments":["states"]},{"Key":"and states","Fragments":["that"]},{"Key":"that purpose","Fragments":["explicitly."]},{"Key":"The `Cast\u003cMatch\u003e()`","Fragments":["is"]},{"Key":"`Cast\u003cMatch\u003e()` is","Fragments":["needed"]},{"Key":"because `MatchCollection`","Fragments":["only"]},{"Key":"`MatchCollection` only","Fragments":["implements"]},{"Key":"only implements","Fragments":["the"]},{"Key":"implements the","Fragments":["non-generic"]},{"Key":"the non-generic","Fragments":["`IEnumerable`."]},{"Key":" List-based","Fragments":["version"]},{"Key":" Resharper","Fragments":["suggests","suggests","ain't"]},{"Key":"suggests that?","Fragments":["Normally"]},{"Key":"that? Normally","Fragments":["it"]},{"Key":"Normally it","Fragments":["suggests"]},{"Key":"it suggests","Fragments":["the"]},{"Key":"way around!","Fragments":["must"]},{"Key":"around! must","Fragments":["have"]},{"Key":"your settings?","Fragments":["Having"]},{"Key":"settings? Having","Fragments":["two"]},{"Key":"Having two","Fragments":["variables"]},{"Key":"same name,","Fragments":["one"]},{"Key":"name, one","Fragments":["hidden"]},{"Key":"one hidden","Fragments":["by"]},{"Key":"hidden by","Fragments":["the"]},{"Key":"other is","Fragments":["not"]},{"Key":"familiar nor","Fragments":["understandable."]},{"Key":"combine Foreach","Fragments":["and"]},{"Key":"Foreach and","Fragments":["for"]},{"Key":"loops into","Fragments":["1","1"]},{"Key":"1 foreach","Fragments":["loop"]},{"Key":"the answer?","Fragments":["Saves"]},{"Key":"answer? Saves","Fragments":["updating"]},{"Key":"Saves updating","Fragments":["a"]},{"Key":"updating a","Fragments":["variable"]},{"Key":"no else","Fragments":["ifs"]},{"Key":"foreach loop.","Fragments":["Still","Still","Still","Still"]},{"Key":"loop. Still","Fragments":["this","this","this","this"]},{"Key":"sugar and","Fragments":["there","there","there","there"]},{"Key":"exercise given","Fragments":["the","the","the","the"]},{"Key":" Program","Fragments":["re-written"]},{"Key":"Program re-written","Fragments":["to"]},{"Key":"re-written to","Fragments":["make"]},{"Key":"bitwise '\u0026'","Fragments":["operator"]},{"Key":"'\u0026' operator","Fragments":["to"]},{"Key":"results number","Fragments":["with"]},{"Key":"different allergens,","Fragments":["I'm"]},{"Key":"allergens, I'm","Fragments":["still"]},{"Key":"work nicely","Fragments":["and"]},{"Key":"nicely and","Fragments":["doesn't"]},{"Key":"seem too","Fragments":["complicated."]},{"Key":"combine into","Fragments":["1"]},{"Key":"To() wih","Fragments":["foreach"]},{"Key":"wih foreach","Fragments":["and"]},{"Key":"and do_while","Fragments":["is"]},{"Key":"do_while is","Fragments":["too"]},{"Key":"Works but","Fragments":["Remove()"]},{"Key":"but Remove()","Fragments":["is"]},{"Key":"Remove() is","Fragments":["an"]},{"Key":"Still confusing","Fragments":["use"]},{"Key":"confusing use","Fragments":["of"]},{"Key":"of h","Fragments":["and"]},{"Key":"h and","Fragments":["m"]},{"Key":"and m","Fragments":["Constructor"]},{"Key":"m Constructor","Fragments":["uses"]},{"Key":"Constructor uses","Fragments":["same"]},{"Key":"uses same","Fragments":["named"]},{"Key":"same named","Fragments":["variables."]},{"Key":"named variables.","Fragments":["Standard"]},{"Key":"variables. Standard","Fragments":["c#"]},{"Key":"Standard c#","Fragments":["convention"]},{"Key":"c# convention","Fragments":["is"]},{"Key":"convention is","Fragments":["to"]},{"Key":"to prefix","Fragments":["instance"]},{"Key":"prefix instance","Fragments":["variables"]},{"Key":"instance variables","Fragments":["with"]},{"Key":"with '_'","Fragments":["e.g."]},{"Key":"'_' e.g.","Fragments":["_h"]},{"Key":"e.g. _h","Fragments":["and"]},{"Key":"_h and","Fragments":["_m"]},{"Key":"and _m","Fragments":["here"]},{"Key":"_m here","Fragments":["which"]},{"Key":"here which","Fragments":["might"]},{"Key":"still no","Fragments":["need","excuse"]},{"Key":"handle h","Fragments":["as"]},{"Key":"h as","Fragments":["well"]},{"Key":"as m","Fragments":["logic"]},{"Key":"m logic","Fragments":["in"]},{"Key":"I think(?)","Fragments":["this"]},{"Key":"think(?) this","Fragments":["can"]},{"Key":"return which","Fragments":["would"]},{"Key":" Common","Fragments":["@tyler"]},{"Key":"Common @tyler","Fragments":["I"]},{"Key":"@tyler I","Fragments":["hope"]},{"Key":"learnt how","Fragments":["to"]},{"Key":"Then turn","Fragments":["To()"]},{"Key":"turn To()","Fragments":["into"]},{"Key":"To() into","Fragments":["a"]},{"Key":"suggests renaming","Fragments":["the"]},{"Key":"variable _h","Fragments":["to"]},{"Key":"_h to","Fragments":["h."]},{"Key":"think this.h","Fragments":["="]},{"Key":"this.h =","Fragments":["h"]},{"Key":"= h","Fragments":["is"]},{"Key":"h is","Fragments":["quite"]},{"Key":"quite familiar","Fragments":["and"]},{"Key":"familiar and","Fragments":["understandable."]},{"Key":" GroupBy","Fragments":["can"]},{"Key":"GroupBy can","Fragments":["simplify"]},{"Key":"your Compare","Fragments":["methods"]},{"Key":" ValidateTriangleInequality()","Fragments":["can"]},{"Key":"ValidateTriangleInequality() can","Fragments":["be"]},{"Key":"refactored there","Fragments":["is"]},{"Key":"common pattern","Fragments":["repeated"]},{"Key":"pattern repeated","Fragments":["3"]},{"Key":"repeated 3","Fragments":["times"]},{"Key":"Linq Zip()","Fragments":["extension?"]},{"Key":"but Add","Fragments":["could"]},{"Key":"Add could","Fragments":["call"]},{"Key":"could call","Fragments":["Subtract","`ToDictionary()`"]},{"Key":"call Subtract","Fragments":["or"]},{"Key":"Subtract or","Fragments":["vice"]},{"Key":"or vice","Fragments":["versa"]},{"Key":"vice versa","Fragments":["DRY"]},{"Key":"Replace Compare","Fragments":["with"]},{"Key":"Compare with","Fragments":["Linq"]},{"Key":"doesn't surprise","Fragments":["me"]},{"Key":"surprise me","Fragments":["about"]},{"Key":"me about","Fragments":["the"]},{"Key":"foreach being","Fragments":["faster."]},{"Key":"being faster.","Fragments":[":-)"]},{"Key":" :-)","Fragments":[";-)"]},{"Key":"use separate","Fragments":["methods"]},{"Key":"each situation.","Fragments":["The"]},{"Key":"situation. The","Fragments":["only"]},{"Key":"only nitpicks","Fragments":["I"]},{"Key":"nitpicks I","Fragments":["can"]},{"Key":"can give","Fragments":["are"]},{"Key":"give are","Fragments":["just"]},{"Key":"about idiomatic","Fragments":["C#"]},{"Key":"C# if","Fragments":["you're"]},{"Key":"1. All","Fragments":["methods"]},{"Key":"All methods","Fragments":["are"]},{"Key":"are Pascal-cased","Fragments":["(first"]},{"Key":"Pascal-cased (first","Fragments":["letter"]},{"Key":"(first letter","Fragments":["capitalized)"]},{"Key":"letter capitalized)","Fragments":["in"]},{"Key":"capitalized) in","Fragments":["idiomatic"]},{"Key":"C#, even","Fragments":["private"]},{"Key":"even private","Fragments":["ones."]},{"Key":"The ```==```","Fragments":["operator"]},{"Key":"```==``` operator","Fragments":["works"]},{"Key":"operator works","Fragments":["the"]},{"Key":"should on","Fragments":["strings"]},{"Key":"so there's","Fragments":["no"]},{"Key":"use ```.Equals```","Fragments":["unless"]},{"Key":"```.Equals``` unless","Fragments":["you're"]},{"Key":"unless you're","Fragments":["looking"]},{"Key":"advanced options","Fragments":["such"]},{"Key":"options such","Fragments":["as"]},{"Key":"as case-insensitivity.","Fragments":["Because"]},{"Key":"case-insensitivity. Because","Fragments":["of"]},{"Key":"this, idiomatic","Fragments":["C#"]},{"Key":"C# tries","Fragments":["to"]},{"Key":"use ```==```","Fragments":["whenever"]},{"Key":"```==``` whenever","Fragments":["possible"]},{"Key":"whenever possible","Fragments":["as"]},{"Key":"possible as","Fragments":["it"]},{"Key":"it tends","Fragments":["to"]},{"Key":"tends to","Fragments":["read"]},{"Key":"I'm seeing","Fragments":["both"]},{"Key":"seeing both","Fragments":["the"]},{"Key":"the CLR","Fragments":["and"]},{"Key":"CLR and","Fragments":["C#"]},{"Key":"and C#","Fragments":["version"]},{"Key":"C# version","Fragments":["of"]},{"Key":"string (```String```","Fragments":["vs"]},{"Key":"(```String``` vs","Fragments":["```string```)"]},{"Key":"vs ```string```)","Fragments":["where"]},{"Key":"```string```) where","Fragments":["you'll"]},{"Key":"where you'll","Fragments":["probably"]},{"Key":"you'll probably","Fragments":["want"]},{"Key":"them. They're","Fragments":["both"]},{"Key":"They're both","Fragments":["ultimately"]},{"Key":"both ultimately","Fragments":["the"]},{"Key":"ultimately the","Fragments":["same"]},{"Key":"thing so","Fragments":["either"]},{"Key":"so either","Fragments":["one"]},{"Key":"either one","Fragments":["is"]},{"Key":"is correct","Fragments":["but"]},{"Key":"generally accepted","Fragments":["to"]},{"Key":"accepted to","Fragments":["use"]},{"Key":"use one","Fragments":["or"]},{"Key":"other. If","Fragments":["you're"]},{"Key":"you're curious","Fragments":["which"]},{"Key":"curious which","Fragments":["to"]},{"Key":"use, I","Fragments":["recommend"]},{"Key":"C# specific","Fragments":["one"]},{"Key":"specific one","Fragments":["so"]},{"Key":"one so","Fragments":["that","far"]},{"Key":"include ```System```","Fragments":["in"]},{"Key":"```System``` in","Fragments":["your"]},{"Key":"Try [Flags]","Fragments":["on"]},{"Key":"[Flags] on","Fragments":["the"]},{"Key":" Tuple.Create","Fragments":["Method"]},{"Key":"Tuple.Create Method","Fragments":["Group"]},{"Key":"Method Group","Fragments":["is"]},{"Key":"Group is","Fragments":["interesting"]},{"Key":"for use","Fragments":["with"]},{"Key":"of ZIp","Fragments":["is"]},{"Key":"ZIp is","Fragments":["the"]},{"Key":"go IMHO,","Fragments":["however"]},{"Key":"IMHO, however","Fragments":["here"]},{"Key":"however here","Fragments":["there"]},{"Key":"here there","Fragments":["is"]},{"Key":"the overload","Fragments":["of"]},{"Key":"a tuple","Fragments":["for","and"]},{"Key":"tuple for","Fragments":["each"]},{"Key":"each pair","Fragments":["when"]},{"Key":"pair when","Fragments":["it"]},{"Key":"No tests","Fragments":["for"]},{"Key":"for Argument","Fragments":["exceptions"]},{"Key":"Argument exceptions","Fragments":["nor"]},{"Key":"exceptions nor","Fragments":["for"]},{"Key":"nor for","Fragments":["similar"]},{"Key":"similar case","Fragments":["YAGNI"]},{"Key":"of Aggregate()","Fragments":["to"]},{"Key":"Aggregate() to","Fragments":["turn"]},{"Key":"turn chars","Fragments":["into"]},{"Key":"chars into","Fragments":["string"]},{"Key":"into string","Fragments":["in"]},{"Key":"in SortChars","Fragments":["but"]},{"Key":"SortChars but","Fragments":["I"]},{"Key":"think String.Concat()","Fragments":["would"]},{"Key":"String.Concat() would","Fragments":["be"]},{"Key":"really what","Fragments":["i"]},{"Key":"was about!","Fragments":["And"]},{"Key":"about! And","Fragments":["I"]},{"Key":"not done","Fragments":["it"]},{"Key":"is begging","Fragments":["for"]},{"Key":"begging for","Fragments":["Regex"]},{"Key":"a Count","Fragments":["method"]},{"Key":"just counted","Fragments":["neighbors"]},{"Key":"counted neighbors","Fragments":["until"]},{"Key":"neighbors until","Fragments":["it"]},{"Key":"it reached","Fragments":["Front"]},{"Key":"reached Front","Fragments":["again,"]},{"Key":"Front again,","Fragments":["but"]},{"Key":"but needing","Fragments":["to"]},{"Key":"just know","Fragments":["some"]},{"Key":"some idiot","Fragments":["is"]},{"Key":"idiot is","Fragments":["going"]},{"Key":"write something","Fragments":["like"]},{"Key":" while(deque.Size","Fragments":["\u003e"]},{"Key":"while(deque.Size \u003e","Fragments":["0)"]},{"Key":"int data","Fragments":["="]},{"Key":"data =","Fragments":["deque.Pop();"]},{"Key":"then complain","Fragments":["about"]},{"Key":"complain about","Fragments":["how"]},{"Key":"how slow","Fragments":["it"]},{"Key":"slow it","Fragments":["is."]},{"Key":"it is.","Fragments":["By"]},{"Key":"is. By","Fragments":["keeping"]},{"Key":"By keeping","Fragments":["track"]},{"Key":"keeping track","Fragments":["of"]},{"Key":"the size,","Fragments":["I"]},{"Key":"size, I","Fragments":["can"]},{"Key":"it instantly","Fragments":["instead"]},{"Key":"instantly instead","Fragments":["of"]},{"Key":"of traversing","Fragments":["the"]},{"Key":"traversing the","Fragments":["entire"]},{"Key":"entire list","Fragments":["on"]},{"Key":"list on","Fragments":["each"]},{"Key":"the Readme,","Fragments":["we","we","we","we"]},{"Key":"Readme, we","Fragments":["were","were","were","were"]},{"Key":"not supposed","Fragments":["to","to","to","to"]},{"Key":"use Linq.","Fragments":["I","I","I","I"]},{"Key":"loops is","Fragments":["OK.","OK.","OK.","OK."]},{"Key":"constructor sets","Fragments":["up"]},{"Key":"sets up","Fragments":["fast"]},{"Key":"up fast","Fragments":["lookups"]},{"Key":"lookups to","Fragments":["replace"]},{"Key":"replace Enum.Prase","Fragments":["and"]},{"Key":"Enum.Prase and","Fragments":["ToString"]},{"Key":"and ToString","Fragments":["to"]},{"Key":"You read","Fragments":["my"]},{"Key":"read my","Fragments":["mind","main"]},{"Key":"mind making","Fragments":["this"]},{"Key":"the Size","Fragments":["variable?"]},{"Key":" DivisibleBy()","Fragments":["method"]},{"Key":"DivisibleBy() method","Fragments":["makes"]},{"Key":"readable IMHO","Fragments":["YMMV"]},{"Key":"Added two","Fragments":["version"]},{"Key":"two version","Fragments":["of"]},{"Key":"of single","Fragments":["pass"]},{"Key":"pass for","Fragments":["DifferenceOFSquares"]},{"Key":" ````","Fragments":["return","var","var","[Test]","[Test]"]},{"Key":"```` return","Fragments":["SquareOfSums()"]},{"Key":"return SquareOfSums()","Fragments":["-"]},{"Key":"SquareOfSums() -","Fragments":["SumOfSquares();"]},{"Key":"- SumOfSquares();","Fragments":["````"]},{"Key":"```` var","Fragments":["sumOfSquares","pair"]},{"Key":"var sumOfSquares","Fragments":["="]},{"Key":"sumOfSquares =","Fragments":["0L;"]},{"Key":" sumOfSquares","Fragments":["+="]},{"Key":"sumOfSquares +=","Fragments":["i"]},{"Key":"+= i","Fragments":["*"]},{"Key":"return (sum*sum)","Fragments":["-"]},{"Key":"(sum*sum) -","Fragments":["sumOfSquares;````"]},{"Key":"var pair","Fragments":["="]},{"Key":"pair =","Fragments":["_range.Aggregate(new[]"]},{"Key":"= _range.Aggregate(new[]","Fragments":["{0L,"]},{"Key":"_range.Aggregate(new[] {0L,","Fragments":["0L},"]},{"Key":"{0L, 0L},","Fragments":["(a,"]},{"Key":"0L}, (a,","Fragments":["i)"]},{"Key":"(a, i)","Fragments":["=\u003e"]},{"Key":" a[0]","Fragments":["+="]},{"Key":"a[0] +=","Fragments":["i*i;"]},{"Key":" a[1]","Fragments":["+="]},{"Key":"a[1] +=","Fragments":["i;"]},{"Key":"return pair[1]*pair[1]","Fragments":["-"]},{"Key":"pair[1]*pair[1] -","Fragments":["pair[0];````"]},{"Key":"a size","Fragments":["of"]},{"Key":"of 40000","Fragments":["are;-"]},{"Key":" ````version=","Fragments":["0,"]},{"Key":"````version= 0,","Fragments":["time="]},{"Key":"0, time=","Fragments":["00:00:00.0149458","4744.75"]},{"Key":" version=","Fragments":["1,","2,","0,","1,","2,"]},{"Key":"version= 1,","Fragments":["time=","time="]},{"Key":"1, time=","Fragments":["00:00:00.0016032","1750.24"]},{"Key":"version= 2,","Fragments":["time=","time="]},{"Key":"2, time=","Fragments":["00:00:00.0025722````","2633.42"]},{"Key":"and mixing","Fragments":["for"]},{"Key":"mixing for","Fragments":["and"]},{"Key":"foreach nesting","Fragments":["not"]},{"Key":"nesting not","Fragments":["very"]},{"Key":"tested this,","Fragments":["but"]},{"Key":"call Shift","Fragments":["or"]},{"Key":"Shift or","Fragments":["Pop"]},{"Key":"or Pop","Fragments":["on"]},{"Key":"Pop on","Fragments":["an"]},{"Key":"empty deque?","Fragments":["I"]},{"Key":"deque? I","Fragments":["think"]},{"Key":"think you'll","Fragments":["get","find"]},{"Key":"readme specifically","Fragments":["said"]},{"Key":"specifically said","Fragments":["not"]},{"Key":"about those","Fragments":["error"]},{"Key":"those error","Fragments":["conditions"]},{"Key":"You i,j,k","Fragments":["loop"]},{"Key":"i,j,k loop","Fragments":["logic"]},{"Key":"loop logic","Fragments":["is"]},{"Key":"quite correct","Fragments":["-"]},{"Key":"- too","Fragments":["many"]},{"Key":"many loops*","Fragments":["can"]},{"Key":"loops* can","Fragments":["avoid"]},{"Key":"the ```","Fragments":["where"]},{"Key":"``` where","Fragments":["x"]},{"Key":"where x","Fragments":["\u003c"]},{"Key":"x \u003c","Fragments":["y"]},{"Key":"\u003c y","Fragments":["\u0026\u0026"]},{"Key":"y \u0026\u0026","Fragments":["y"]},{"Key":"y \u003c","Fragments":["z````"]},{"Key":"* (even","Fragments":["keeping"]},{"Key":"(even keeping","Fragments":["to"]},{"Key":"keeping to","Fragments":["a"]},{"Key":"a 3","Fragments":["level"]},{"Key":"3 level","Fragments":["looping)","for"]},{"Key":"one final","Fragments":["nitpick."]},{"Key":"final nitpick.","Fragments":["The"]},{"Key":"nitpick. The","Fragments":["Calc()"]},{"Key":"The Calc()","Fragments":["method"]},{"Key":"Calc() method","Fragments":["is"]},{"Key":"now superfluous","Fragments":["i.e."]},{"Key":"superfluous i.e.","Fragments":["inline"]},{"Key":"i.e. inline","Fragments":["it"]},{"Key":"speed up","Fragments":["for"]},{"Key":"for linq","Fragments":["query"]},{"Key":"query syntax,","Fragments":["linq"]},{"Key":"syntax, linq","Fragments":["normal"]},{"Key":"linq normal","Fragments":["syntax"]},{"Key":"normal syntax","Fragments":["-"]},{"Key":"syntax -","Fragments":["added"]},{"Key":"- added","Fragments":["in"]},{"Key":"and foreach.","Fragments":["Do"]},{"Key":"Do not","Fragments":["need","need"]},{"Key":"to regenerate","Fragments":["Enumerable.Range"]},{"Key":"regenerate Enumerable.Range","Fragments":["for"]},{"Key":"Enumerable.Range for","Fragments":["j"]},{"Key":"for j","Fragments":["index."]},{"Key":"Version |","Fragments":["Time"]},{"Key":" ---------","Fragments":["|"]},{"Key":"--------- |","Fragments":["------"]},{"Key":" v=2Query","Fragments":["|"]},{"Key":"v=2Query |","Fragments":[",time"]},{"Key":"| ,time","Fragments":["=","=","=","=","=","=","=","=","=","="]},{"Key":",time =","Fragments":["30121.9","13366.6","4574.5","2679.9","1382424.1","1302885.3","1159751.9","1162790.9","12810.8","8946.1"]},{"Key":" v=2Linq","Fragments":["|"]},{"Key":"v=2Linq |","Fragments":[",time"]},{"Key":" v=2Foreach","Fragments":["|"]},{"Key":"v=2Foreach |","Fragments":[",time"]},{"Key":" v=2For","Fragments":["|"]},{"Key":"v=2For |","Fragments":[",time"]},{"Key":" v=3Query","Fragments":["|"]},{"Key":"v=3Query |","Fragments":[",time"]},{"Key":" v=3Linq","Fragments":["|"]},{"Key":"v=3Linq |","Fragments":[",time"]},{"Key":" v=3Foreach","Fragments":["|"]},{"Key":"v=3Foreach |","Fragments":[",time"]},{"Key":" v=3For","Fragments":["|"]},{"Key":"v=3For |","Fragments":[",time"]},{"Key":" v=FastQuery","Fragments":["|"]},{"Key":"v=FastQuery |","Fragments":[",time"]},{"Key":" v=FastLinq","Fragments":["|"]},{"Key":"v=FastLinq |","Fragments":[",time"]},{"Key":" v=FastForeach","Fragments":["|,time"]},{"Key":"v=FastForeach |,time","Fragments":["="]},{"Key":"|,time =","Fragments":["4430.5"]},{"Key":"First fluent","Fragments":["syntax"]},{"Key":"fluent syntax","Fragments":["is"]},{"Key":"than query","Fragments":["syntax"]},{"Key":"Second FastForeach","Fragments":["shows"]},{"Key":"FastForeach shows","Fragments":["no"]},{"Key":"shows no","Fragments":["improvement"]},{"Key":"no improvement","Fragments":["over"]},{"Key":"improvement over","Fragments":["2Foreach"]},{"Key":"over 2Foreach","Fragments":["whereas"]},{"Key":"2Foreach whereas","Fragments":["Query"]},{"Key":"whereas Query","Fragments":["syntax"]},{"Key":"Query syntax","Fragments":["shows"]},{"Key":"shows a","Fragments":["nearly"]},{"Key":"a nearly","Fragments":["2/3"]},{"Key":"nearly 2/3","Fragments":["improvement"]},{"Key":"2/3 improvement","Fragments":["and"]},{"Key":"improvement and","Fragments":["Linq"]},{"Key":"and Linq","Fragments":["shows"]},{"Key":"Linq shows","Fragments":["1/3"]},{"Key":"shows 1/3","Fragments":["improvement."]},{"Key":"1/3 improvement.","Fragments":["Interesting?"]},{"Key":" Anyway","Fragments":["using","YMMV","you","what"]},{"Key":"Anyway using","Fragments":["Nessos"]},{"Key":"using Nessos","Fragments":["Streams"]},{"Key":"Nessos Streams","Fragments":["(uses"]},{"Key":"Streams (uses","Fragments":["Fluent"]},{"Key":"(uses Fluent","Fragments":["syntax)and/or"]},{"Key":"Fluent syntax)and/or","Fragments":["Nessos"]},{"Key":"syntax)and/or Nessos","Fragments":["LinqOptimiser"]},{"Key":"Nessos LinqOptimiser","Fragments":["(uses"]},{"Key":"LinqOptimiser (uses","Fragments":["query"]},{"Key":"(uses query","Fragments":["syntax)"]},{"Key":"query syntax)","Fragments":["produces"]},{"Key":"syntax) produces","Fragments":["as"]},{"Key":"produces as","Fragments":["fast"]},{"Key":"fast results","Fragments":["as"]},{"Key":"results as","Fragments":["2for"]},{"Key":"as 2for","Fragments":["but"]},{"Key":"2for but","Fragments":["requires"]},{"Key":"but requires","Fragments":["special"]},{"Key":"requires special","Fragments":["assemblies"]},{"Key":"special assemblies","Fragments":["and"]},{"Key":"assemblies and","Fragments":["is"]},{"Key":"not shown","Fragments":["here."]},{"Key":"right, looks","Fragments":["like"]},{"Key":"(in 2012!).","Fragments":["I"]},{"Key":"2012!). I","Fragments":["kinda"]},{"Key":"I kinda","Fragments":["prefer"]},{"Key":"kinda prefer","Fragments":["it"]},{"Key":"prefer it","Fragments":["this"]},{"Key":"way, since","Fragments":["I"]},{"Key":"from Python","Fragments":["background,"]},{"Key":"Python background,","Fragments":["where"]},{"Key":"background, where","Fragments":["self"]},{"Key":"where self","Fragments":["is"]},{"Key":"self is","Fragments":["required,"]},{"Key":"required, self.a","Fragments":["="]},{"Key":"self.a =","Fragments":["a."]},{"Key":"also hate","Fragments":["how"]},{"Key":"hate how","Fragments":["a"]},{"Key":"variable starting","Fragments":["with"]},{"Key":" Iterating","Fragments":["over"]},{"Key":"Iterating over","Fragments":["a"]},{"Key":"collection using","Fragments":["whether"]},{"Key":"using whether","Fragments":["foreach"]},{"Key":"whether foreach","Fragments":["or"]},{"Key":"for is","Fragments":["not"]},{"Key":"Ooh, that's","Fragments":["what","a"]},{"Key":"the `this`","Fragments":["on"]},{"Key":"`this` on","Fragments":["line"]},{"Key":"line 11","Fragments":["is"]},{"Key":"11 is","Fragments":["for"]},{"Key":"for I","Fragments":["suppose."]},{"Key":"suppose. It's","Fragments":["almost"]},{"Key":"It's almost","Fragments":["like"]},{"Key":"you're defining","Fragments":["an"]},{"Key":"an infix","Fragments":["operator."]},{"Key":"think so?","Fragments":["I"]},{"Key":"so? I","Fragments":["think"]},{"Key":"it communicates","Fragments":["divisibility"]},{"Key":"communicates divisibility","Fragments":["better"]},{"Key":"divisibility better","Fragments":["than"]},{"Key":"than ..","Fragments":["%"]},{"Key":".. %","Fragments":[".."]},{"Key":"% ..","Fragments":["=="]},{"Key":".. ==","Fragments":["0."]},{"Key":"C# whatsoever,","Fragments":["but"]},{"Key":"whatsoever, but","Fragments":["how"]},{"Key":"how does","Fragments":["`year.DivisibleBy`"]},{"Key":"does `year.DivisibleBy`","Fragments":["work"]},{"Key":"`year.DivisibleBy` work","Fragments":["if"]},{"Key":"if `year`","Fragments":["is"]},{"Key":"`year` is","Fragments":["an"]},{"Key":"and `DivisibleBy`","Fragments":["is"]},{"Key":"`DivisibleBy` is","Fragments":["a"]},{"Key":"It's called","Fragments":["an"]},{"Key":"called an","Fragments":["extension"]},{"Key":"It creates","Fragments":["instance"]},{"Key":"creates instance","Fragments":["methods"]},{"Key":"with semantics","Fragments":["of"]},{"Key":"semantics of","Fragments":["static"]},{"Key":"methods (ie.","Fragments":["cannot"]},{"Key":"(ie. cannot","Fragments":["use"]},{"Key":"cannot use","Fragments":["privates)"]},{"Key":"probably slow","Fragments":["as"]},{"Key":"slow as","Fragments":["molasses,"]},{"Key":"as molasses,","Fragments":["but"]},{"Key":"molasses, but","Fragments":["it"]},{"Key":"cool solution.","Fragments":["I"]},{"Key":"might rewrite","Fragments":["this"]},{"Key":"own parser","Fragments":["instead","instead"]},{"Key":"parser instead","Fragments":["later.","of"]},{"Key":"was something","Fragments":["odd"]},{"Key":"something odd","Fragments":["on"]},{"Key":"odd on","Fragments":["Can_parse_and_solve_subtraction_problems()."]},{"Key":"on Can_parse_and_solve_subtraction_problems().","Fragments":["It"]},{"Key":"Can_parse_and_solve_subtraction_problems(). It","Fragments":["looked"]},{"Key":"mark missing","Fragments":["from"]},{"Key":"missing from","Fragments":["the"]},{"Key":"test question.","Fragments":["I"]},{"Key":"decided this","Fragments":["was"]},{"Key":"error and","Fragments":["inserted"]},{"Key":"and inserted","Fragments":["it"]},{"Key":"inserted it","Fragments":["myself."]},{"Key":"Remember this","Fragments":["is"]},{"Key":"C# exercise.","Fragments":["I"]},{"Key":"how python","Fragments":["works"]},{"Key":"python works","Fragments":["however"]},{"Key":"works however","Fragments":["this"]},{"Key":"readable c#","Fragments":["code."]},{"Key":"c# code.","Fragments":["You"]},{"Key":"use this.h","Fragments":["and"]},{"Key":"this.h and","Fragments":["this.m"]},{"Key":"and this.m","Fragments":["here"]},{"Key":"this.m here","Fragments":["if"]},{"Key":"here if","Fragments":["you"]},{"Key":"with @donnell","Fragments":["that"]},{"Key":"@donnell that","Fragments":["LINQ"]},{"Key":"that LINQ","Fragments":["or"]},{"Key":"Regex could","Fragments":["clean"]},{"Key":"could clean","Fragments":["up"]},{"Key":"code. I'd","Fragments":["recommend"]},{"Key":"a Regex,","Fragments":["as"]},{"Key":"Regex, as","Fragments":["that"]},{"Key":"is ideally","Fragments":["suited"]},{"Key":"ideally suited","Fragments":["for"]},{"Key":"suited for","Fragments":["this"]},{"Key":"problem where","Fragments":["you"]},{"Key":" @ezequiel","Fragments":["Wasn't"]},{"Key":"@ezequiel Wasn't","Fragments":["too"]},{"Key":"Wasn't too","Fragments":["bad"]},{"Key":"too bad","Fragments":["after"]},{"Key":"bad after","Fragments":["rereading"]},{"Key":"after rereading","Fragments":["the"]},{"Key":"rereading the","Fragments":["readme"]},{"Key":"and sketching","Fragments":["the"]},{"Key":"sketching the","Fragments":["operations"]},{"Key":"the operations","Fragments":["once","management"]},{"Key":"operations once","Fragments":["on"]},{"Key":"once on","Fragments":["paper"]},{"Key":"on paper","Fragments":[";)"]},{"Key":"paper ;)","Fragments":["One"]},{"Key":";) One","Fragments":["thing"]},{"Key":"about both","Fragments":["your"]},{"Key":"both your","Fragments":["and"]},{"Key":"your and","Fragments":["@ezequiel's"]},{"Key":"and @ezequiel's","Fragments":["solution"]},{"Key":"@ezequiel's solution","Fragments":["-"]},{"Key":"solution -","Fragments":["you"]},{"Key":"both created","Fragments":["a"]},{"Key":"class ```Element\u003cT\u003e```","Fragments":["as"]},{"Key":"```Element\u003cT\u003e``` as","Fragments":["opposed"]},{"Key":"my inner","Fragments":["class"]},{"Key":"class without","Fragments":["the"]},{"Key":"type parameter.","Fragments":["I"]},{"Key":"parameter. I","Fragments":["assumed"]},{"Key":"assumed an","Fragments":["inner"]},{"Key":"logical choice","Fragments":["here,"]},{"Key":"choice here,","Fragments":["given"]},{"Key":"here, given","Fragments":["it"]},{"Key":"from outside```","Fragments":["Deque\u003cT\u003e```"]},{"Key":"outside``` Deque\u003cT\u003e```","Fragments":["and"]},{"Key":"Deque\u003cT\u003e``` and","Fragments":["```Element```"]},{"Key":"and ```Element```","Fragments":["doesn't"]},{"Key":"```Element``` doesn't","Fragments":["really"]},{"Key":"separate type","Fragments":["parameter"]},{"Key":"type parameter","Fragments":["either."]},{"Key":"parameter either.","Fragments":["What"]},{"Key":"either. What","Fragments":["was"]},{"Key":"your reasoning","Fragments":["behind"]},{"Key":"behind declaring","Fragments":["```Element\u003cT\u003e```"]},{"Key":"declaring ```Element\u003cT\u003e```","Fragments":["separately"]},{"Key":"```Element\u003cT\u003e``` separately","Fragments":["from"]},{"Key":"separately from","Fragments":["```Deque\u003cT\u003e```,"]},{"Key":"from ```Deque\u003cT\u003e```,","Fragments":["with"]},{"Key":"```Deque\u003cT\u003e```, with","Fragments":["its"]},{"Key":"own type","Fragments":["parameter?"]},{"Key":"using either,","Fragments":["that,"]},{"Key":"either, that,","Fragments":["I"]},{"Key":" Inner","Fragments":["or"]},{"Key":"Inner or","Fragments":["internal"]},{"Key":"or internal","Fragments":["is"]},{"Key":"internal is","Fragments":["moot."]},{"Key":"is moot.","Fragments":["Type"]},{"Key":"moot. Type","Fragments":["paramter"]},{"Key":"Type paramter","Fragments":["is"]},{"Key":"paramter is","Fragments":["required"]},{"Key":"required if","Fragments":["it"]},{"Key":"a innder","Fragments":["class."]},{"Key":"nitpick for","Fragments":["me"]},{"Key":"check your","Fragments":["regex"]},{"Key":"regex solution","Fragments":["later"]},{"Key":"As @salvatore","Fragments":["said,"]},{"Key":"@salvatore said,","Fragments":["it's"]},{"Key":"it's kinda","Fragments":["moot,"]},{"Key":"kinda moot,","Fragments":["but"]},{"Key":"moot, but","Fragments":["you"]},{"Key":"good choice.","Fragments":["I"]},{"Key":"choice. I","Fragments":["used"]},{"Key":"external class","Fragments":["because"]},{"Key":"class because","Fragments":["I"]},{"Key":"I honestly","Fragments":["didn't"]},{"Key":"honestly didn't","Fragments":["think"]},{"Key":"it. They","Fragments":["both"]},{"Key":"They both","Fragments":["work,"]},{"Key":"both work,","Fragments":["but"]},{"Key":"your logic:","Fragments":["it"]},{"Key":"logic: it","Fragments":["doesn't"]},{"Key":"Unless there's","Fragments":["a"]},{"Key":"reason otherwise,","Fragments":["I"]},{"Key":"otherwise, I","Fragments":["tend"]},{"Key":"all classes","Fragments":["external"]},{"Key":"classes external","Fragments":["so"]},{"Key":"external so","Fragments":["they"]},{"Key":"be reused.","Fragments":["If"]},{"Key":"reused. If","Fragments":["in"]},{"Key":"If in","Fragments":["the"]},{"Key":"tree class,","Fragments":["I"]},{"Key":"a Element","Fragments":["class"]},{"Key":"Element class","Fragments":["I"]},{"Key":"class I","Fragments":["can"]},{"Key":"the Nodes.","Fragments":[":-)"]},{"Key":"moment, you","Fragments":["use","use"]},{"Key":"the `Split()`","Fragments":["method","method","method."]},{"Key":"`Split()` method","Fragments":["to","to"]},{"Key":"translate each","Fragments":["word.","word."]},{"Key":"this within","Fragments":["your","your"]},{"Key":"your Regex.","Fragments":["The","The"]},{"Key":"Regex. The","Fragments":["key","key"]},{"Key":"The key","Fragments":["thing","thing"]},{"Key":"key thing","Fragments":["to","to"]},{"Key":"note is","Fragments":["that","that"]},{"Key":"says: either","Fragments":["this","this"]},{"Key":"either this","Fragments":["is","is"]},{"Key":"the begin","Fragments":["of","of"]},{"Key":"begin of","Fragments":["the","the"]},{"Key":"a space.","Fragments":["You","You"]},{"Key":"space. You","Fragments":["do","do"]},{"Key":"following Regex:","Fragments":["`(^|\\s+)`.","`(^|\\s+)`."]},{"Key":"Regex: `(^|\\s+)`.","Fragments":["This","This"]},{"Key":"`(^|\\s+)`. This","Fragments":["would","would"]},{"Key":"match all","Fragments":["words","words"]},{"Key":"words at","Fragments":["once,","once,","once"]},{"Key":"at once,","Fragments":["although","although"]},{"Key":"once, although","Fragments":["you","you"]},{"Key":"might argue","Fragments":["that","that"]},{"Key":"a word-by-word","Fragments":["basis","basis"]},{"Key":"word-by-word basis","Fragments":["is","is"]},{"Key":"basis is","Fragments":["perhaps","perhaps"]},{"Key":"perhaps more","Fragments":["clear.","clear."]},{"Key":"clear. You","Fragments":["can"]},{"Key":"at [my","Fragments":["submission](http://exercism.io/submissions/38889a5f03104d978dc1f4ca11d3ffd8)"]},{"Key":"[my submission](http://exercism.io/submissions/38889a5f03104d978dc1f4ca11d3ffd8)","Fragments":["to"]},{"Key":"submission](http://exercism.io/submissions/38889a5f03104d978dc1f4ca11d3ffd8) to","Fragments":["see"]},{"Key":" @krista","Fragments":["You"]},{"Key":"@krista You","Fragments":["are"]},{"Key":"course. My","Fragments":["second"]},{"Key":"uses regular","Fragments":["expressions"]},{"Key":"and looks","Fragments":["much"]},{"Key":" a%b","Fragments":["==0"]},{"Key":"a%b ==0","Fragments":["is"]},{"Key":"==0 is","Fragments":["standard"]},{"Key":"standard c#","Fragments":["idiom"]},{"Key":"can tidy","Fragments":["up"]},{"Key":"tidy up","Fragments":["some"]},{"Key":"up some","Fragments":["of"]},{"Key":"the filter","Fragments":["logic"]},{"Key":"filter logic","Fragments":["at"]},{"Key":"logic at","Fragments":["the"]},{"Key":"query expression","Fragments":["especially"]},{"Key":"expression especially","Fragments":["z"]},{"Key":"especially z","Fragments":["which"]},{"Key":"z which","Fragments":["is"]},{"Key":"not normally","Fragments":["an"]},{"Key":"normally an","Fragments":["int"]},{"Key":"point as","Fragments":["\"Write"]},{"Key":"as \"Write","Fragments":["your"]},{"Key":"\"Write your","Fragments":["Linq"]},{"Key":"Linq Select","Fragments":["function.\""]},{"Key":" @nash","Fragments":["I"]},{"Key":"@nash I","Fragments":["also"]},{"Key":"also [used","Fragments":["a"]},{"Key":"[used a","Fragments":["regular"]},{"Key":"regular expression](http://exercism.io/submissions/b42b1b13526342c8944aea3a808de5f7).","Fragments":["It"]},{"Key":"expression](http://exercism.io/submissions/b42b1b13526342c8944aea3a808de5f7). It","Fragments":["might"]},{"Key":"be slow,","Fragments":["but"]},{"Key":"slow, but","Fragments":["it"]},{"Key":"sure make","Fragments":["the"]},{"Key":"code compact.","Fragments":["And"]},{"Key":"compact. And","Fragments":["I"]},{"Key":"still find","Fragments":["it"]},{"Key":"readable, as","Fragments":["the"]},{"Key":"Ooh, making","Fragments":["the"]},{"Key":"regex static,","Fragments":["that's"]},{"Key":"static, that's","Fragments":["a"]},{"Key":"idea. I'm","Fragments":["going"]},{"Key":"steal that.","Fragments":[":-)"]},{"Key":"to tack","Fragments":["on"]},{"Key":"tack on","Fragments":["'RegexOptions.Compiled'"]},{"Key":"on 'RegexOptions.Compiled'","Fragments":["at"]},{"Key":"'RegexOptions.Compiled' at","Fragments":["the"]},{"Key":"Regex constructor.","Fragments":["From"]},{"Key":"constructor. From","Fragments":["what"]},{"Key":"From what","Fragments":["I"]},{"Key":"understand, it","Fragments":["makes"]},{"Key":"regex run","Fragments":["a"]},{"Key":" Edited:","Fragments":["Yup,"]},{"Key":"Edited: Yup,","Fragments":["from"]},{"Key":"Yup, from","Fragments":["my"]},{"Key":"on 1,000,000","Fragments":["iterations"]},{"Key":"of \"What","Fragments":["is","is"]},{"Key":"\"What is","Fragments":["1","-3"]},{"Key":"1 plus","Fragments":["5"]},{"Key":"plus 5","Fragments":["minus"]},{"Key":"5 minus","Fragments":["-2?\","]},{"Key":"minus -2?\",","Fragments":["it's"]},{"Key":"-2?\", it's","Fragments":["roughly"]},{"Key":"it's roughly","Fragments":["25%"]},{"Key":"roughly 25%","Fragments":["faster."]},{"Key":"25% faster.","Fragments":["2800"]},{"Key":"faster. 2800","Fragments":["millis"]},{"Key":"2800 millis","Fragments":["vs","where"]},{"Key":"millis vs","Fragments":["4000"]},{"Key":"vs 4000","Fragments":["millis."]},{"Key":"I blatantly","Fragments":["stole"]},{"Key":"blatantly stole","Fragments":["the"]},{"Key":"regex static","Fragments":["from"]},{"Key":"static from","Fragments":["@margaret"]},{"Key":"It came","Fragments":["with"]},{"Key":"nice speed","Fragments":["boost."]},{"Key":"speed boost.","Fragments":[":-)"]},{"Key":"I write","Fragments":["my"]},{"Key":"write my","Fragments":["own"]},{"Key":"solution has,","Fragments":["mine'll"]},{"Key":"has, mine'll","Fragments":["probably"]},{"Key":"mine'll probably","Fragments":["be"]},{"Key":"be similar","Fragments":["to"]},{"Key":"One suggestion:","Fragments":["converting"]},{"Key":"suggestion: converting","Fragments":["the"]},{"Key":"string, only","Fragments":["to"]},{"Key":"it back","Fragments":["to"]},{"Key":"int on","Fragments":["the"]},{"Key":"iteration feels","Fragments":["sub-optimal."]},{"Key":"feels sub-optimal.","Fragments":["I'd"]},{"Key":"sub-optimal. I'd","Fragments":["suggest"]},{"Key":"suggest having","Fragments":["a"]},{"Key":"new int","Fragments":["variable"]},{"Key":"int variable","Fragments":["that"]},{"Key":"the running","Fragments":["answer"]},{"Key":"running answer","Fragments":["and"]},{"Key":"Not using","Fragments":["either?"]},{"Key":"using either?","Fragments":["the"]},{"Key":"either? the","Fragments":["only"]},{"Key":"way left","Fragments":["is"]},{"Key":"Or avoid","Fragments":["this"]},{"Key":"by renaming","Fragments":["the","your"]},{"Key":"One piece","Fragments":["of"]},{"Key":"of advice:","Fragments":["Creating"]},{"Key":"advice: Creating","Fragments":["Regexs"]},{"Key":"Creating Regexs","Fragments":["is"]},{"Key":"Regexs is","Fragments":["slow."]},{"Key":"is slow.","Fragments":["In"]},{"Key":"slow. In","Fragments":["code"]},{"Key":"In code","Fragments":["where"]},{"Key":"called repeatedly,","Fragments":["make"]},{"Key":"repeatedly, make","Fragments":["them"]},{"Key":"them static","Fragments":["if"]},{"Key":"static if","Fragments":["you"]},{"Key":"can. Like","Fragments":["so:"]},{"Key":"readonly Regex","Fragments":["QuestionRegex","IsIntegerRegex"]},{"Key":"Regex QuestionRegex","Fragments":["="]},{"Key":"QuestionRegex =","Fragments":["new"]},{"Key":"new Regex(@\"(\u003cb\u003e-?\\d+\u003cb\u003e|","Fragments":["plus"]},{"Key":"Regex(@\"(\u003cb\u003e-?\\d+\u003cb\u003e| plus","Fragments":["|"]},{"Key":"plus |","Fragments":["minus"]},{"Key":"| minus","Fragments":["|"]},{"Key":"minus |","Fragments":["multiplied"]},{"Key":"| multiplied","Fragments":["|"]},{"Key":"multiplied |","Fragments":["divided"]},{"Key":"| divided","Fragments":[")+\","]},{"Key":"divided )+\",","Fragments":["RegexOptions.Compiled);"]},{"Key":"Regex IsIntegerRegex","Fragments":["="]},{"Key":"IsIntegerRegex =","Fragments":["new"]},{"Key":"new Regex(@\"-?\\d+\",","Fragments":["RegexOptions.Compiled);"]},{"Key":"// skip","Fragments":["a","a"]},{"Key":"skip a","Fragments":["bit","bit"]},{"Key":"(string token","Fragments":["in"]},{"Key":"token in","Fragments":["problem.Split())"]},{"Key":"code run","Fragments":["twice"]},{"Key":"run twice","Fragments":["as"]},{"Key":"as fast.","Fragments":["In"]},{"Key":"fast. In","Fragments":["a"]},{"Key":"a 1,000,000","Fragments":["loop","iteration"]},{"Key":"1,000,000 loop","Fragments":["your"]},{"Key":"loop your","Fragments":["old"]},{"Key":"your old","Fragments":["code"]},{"Key":"ran at","Fragments":["about","2800"]},{"Key":"at about","Fragments":["6"]},{"Key":"about 6","Fragments":["seconds."]},{"Key":"6 seconds.","Fragments":["With"]},{"Key":"seconds. With","Fragments":["the"]},{"Key":"Regex it's","Fragments":["down"]},{"Key":"it's down","Fragments":["to"]},{"Key":"to about","Fragments":["2.6"]},{"Key":"about 2.6","Fragments":["seconds."]},{"Key":"2.6 seconds.","Fragments":[":-)"]},{"Key":"comments by","Fragments":["renaming"]},{"Key":"renaming your","Fragments":["variables."]},{"Key":"your variables.","Fragments":["`div100`"]},{"Key":"variables. `div100`","Fragments":["could"]},{"Key":"`div100` could","Fragments":["become"]},{"Key":"could become","Fragments":["`isDivisibleBy100`,"]},{"Key":"become `isDivisibleBy100`,","Fragments":["which"]},{"Key":"`isDivisibleBy100`, which","Fragments":["means"]},{"Key":"and rolled","Fragments":["my"]},{"Key":"rolled my","Fragments":["own"]},{"Key":"own parser.","Fragments":["And"]},{"Key":"parser. And","Fragments":["as"]},{"Key":"And as","Fragments":["expected"]},{"Key":"expected it,","Fragments":["it's"]},{"Key":"much faster.","Fragments":["On"]},{"Key":"faster. On","Fragments":["a"]},{"Key":"On a","Fragments":["1,000,000","test","coding"]},{"Key":"1,000,000 iteration","Fragments":["test,"]},{"Key":"iteration test,","Fragments":["my"]},{"Key":"my old","Fragments":["code"]},{"Key":"at 2800","Fragments":["millis"]},{"Key":"millis where","Fragments":["as"]},{"Key":"where as","Fragments":["the"]},{"Key":"code clocks","Fragments":["it"]},{"Key":"clocks it","Fragments":["at"]},{"Key":"at around","Fragments":["900","1800"]},{"Key":"around 900","Fragments":["millis."]},{"Key":"in submission","Fragments":["1,","1,"]},{"Key":"submission 1,","Fragments":["I","I"]},{"Key":"1, I","Fragments":["changed","changed"]},{"Key":"the Can_parse_and_solve_subtraction_problems()","Fragments":["test","test"]},{"Key":"Can_parse_and_solve_subtraction_problems() test","Fragments":["to","to"]},{"Key":"end, as","Fragments":["I'm","I'm"]},{"Key":"assuming its","Fragments":["omission","omission"]},{"Key":"its omission","Fragments":["is","is"]},{"Key":"omission is","Fragments":["an","an"]},{"Key":"that none","Fragments":["of"]},{"Key":"tests check","Fragments":["for"]},{"Key":"for order","Fragments":["of"]},{"Key":"of operation,","Fragments":["which"]},{"Key":"operation, which","Fragments":["is"]},{"Key":"doesn't either!","Fragments":[":-D"]},{"Key":"Nice one.","Fragments":["I"]},{"Key":"exercise with","Fragments":["the"]},{"Key":"the run-once","Fragments":["mind."]},{"Key":"mean splitting","Fragments":["by"]},{"Key":"splitting by","Fragments":["Regex?"]},{"Key":"so, string.Split()","Fragments":["with"]},{"Key":"string.Split() with","Fragments":["no"]},{"Key":"no argument","Fragments":["given"]},{"Key":"argument given","Fragments":["splits"]},{"Key":"given splits","Fragments":["by"]},{"Key":"splits by","Fragments":["whitespace,","whitespace,"]},{"Key":"by whitespace,","Fragments":["\\s,","but"]},{"Key":"whitespace, \\s,","Fragments":["which"]},{"Key":"\\s, which","Fragments":["includes"]},{"Key":"which includes","Fragments":["spaces,"]},{"Key":"includes spaces,","Fragments":["and"]},{"Key":"spaces, and","Fragments":["new"]},{"Key":"OK, this","Fragments":["one"]},{"Key":"one handles","Fragments":["the"]},{"Key":"of operation","Fragments":["correctly."]},{"Key":"operation correctly.","Fragments":["As"]},{"Key":"correctly. As","Fragments":["such,"]},{"Key":"such, it","Fragments":["breaks"]},{"Key":"the Can_add_then_multiply()","Fragments":["test"]},{"Key":"Can_add_then_multiply() test","Fragments":["of"]},{"Key":"test of","Fragments":["\"What","1,000,000"]},{"Key":"is -3","Fragments":["plus"]},{"Key":"-3 plus","Fragments":["7"]},{"Key":"plus 7","Fragments":["multiplied"]},{"Key":"7 multiplied","Fragments":["by"]},{"Key":"multiplied by","Fragments":["-2?\""]},{"Key":"by -2?\"","Fragments":["It"]},{"Key":"-2?\" It","Fragments":["returns"]},{"Key":"correct answer","Fragments":["-17,"]},{"Key":"answer -17,","Fragments":["not"]},{"Key":"-17, not","Fragments":["the"]},{"Key":"the \"expected\"","Fragments":["answer"]},{"Key":"\"expected\" answer","Fragments":["of"]},{"Key":"answer of","Fragments":["-8."]},{"Key":"to double,","Fragments":["so"]},{"Key":"double, so","Fragments":["you"]},{"Key":"you no","Fragments":["longer"]},{"Key":"longer get","Fragments":["integer"]},{"Key":"get integer","Fragments":["division."]},{"Key":"previous submission","Fragments":["runs"]},{"Key":"submission runs","Fragments":["faster"]},{"Key":"doing passes","Fragments":["checking"]},{"Key":"passes checking","Fragments":["for"]},{"Key":"of operation.","Fragments":["On"]},{"Key":"operation. On","Fragments":["a"]},{"Key":"of 1,000,000","Fragments":["cycles,"]},{"Key":"1,000,000 cycles,","Fragments":["my"]},{"Key":"cycles, my","Fragments":["last"]},{"Key":"last submission","Fragments":["took"]},{"Key":"submission took","Fragments":["900"]},{"Key":"took 900","Fragments":["millis,"]},{"Key":"900 millis,","Fragments":["while"]},{"Key":"millis, while","Fragments":["this"]},{"Key":"one clocks","Fragments":["in"]},{"Key":"around 1800","Fragments":["millis."]},{"Key":"had done","Fragments":["that"]},{"Key":"boolean I","Fragments":["need"]},{"Key":"need would","Fragments":["be"]},{"Key":"would resolve","Fragments":["to,"]},{"Key":"resolve to,","Fragments":["but"]},{"Key":"now looking","Fragments":["at"]},{"Key":"operator would","Fragments":["be"]},{"Key":" @chyna","Fragments":["Is"]},{"Key":"@chyna Is","Fragments":["this"]},{"Key":"more what","Fragments":["you"]},{"Key":"avoided this","Fragments":["because"]},{"Key":"this because","Fragments":["I","I"]},{"Key":"clarity was","Fragments":["better"]},{"Key":"count variable,","Fragments":["but"]},{"Key":"one pass","Fragments":["over"]},{"Key":"pass over","Fragments":["the"]},{"Key":"string vs","Fragments":["two"]},{"Key":"vs two","Fragments":["I"]},{"Key":"two I","Fragments":["think"]},{"Key":" Credit","Fragments":["to"]},{"Key":"Credit to","Fragments":["martinfreedman"]},{"Key":"to martinfreedman","Fragments":["for"]},{"Key":"martinfreedman for","Fragments":["the"]},{"Key":"the 1-line","Fragments":["implementation"]},{"Key":"1-line implementation","Fragments":["of"]},{"Key":"same exact","Fragments":["code"]},{"Key":" FYI","Fragments":["I'm","my"]},{"Key":"FYI I'm","Fragments":["using"]},{"Key":"your client","Fragments":["and"]},{"Key":"client and","Fragments":["it"]},{"Key":"True but","Fragments":["not"]},{"Key":"an equivalent","Fragments":["to"]},{"Key":"foreach that","Fragments":["everyone"]},{"Key":"the `Enumerable.Range`","Fragments":["method"]},{"Key":"`Enumerable.Range` method","Fragments":["to"]},{"Key":"your `for`","Fragments":["loop."]},{"Key":"`for` loop.","Fragments":["This"]},{"Key":"loop. This","Fragments":["would"]},{"Key":"some boilerplate","Fragments":["code"]},{"Key":"boilerplate code","Fragments":["to"]},{"Key":" line","Fragments":["29"]},{"Key":"line 29","Fragments":[":"]},{"Key":"29 :","Fragments":["You"]},{"Key":": You","Fragments":["wrote"]},{"Key":"You wrote","Fragments":["twice"]},{"Key":"wrote twice","Fragments":["\"numberUppers"]},{"Key":"twice \"numberUppers","Fragments":["!="]},{"Key":"\"numberUppers !=","Fragments":["0\""]},{"Key":" Suggestion","Fragments":[":"]},{"Key":"Suggestion :","Fragments":["To"]},{"Key":": To","Fragments":["avoid"]},{"Key":"To avoid","Fragments":["interation","long","boxing"]},{"Key":"avoid interation","Fragments":["you"]},{"Key":"interation you","Fragments":["may"]},{"Key":"compare message","Fragments":["and"]},{"Key":"if (message","Fragments":["=="]},{"Key":"(message ==","Fragments":["message.ToUpper()"]},{"Key":"== message.ToUpper()","Fragments":["\u0026\u0026"]},{"Key":"message.ToUpper() \u0026\u0026","Fragments":["message.Length"]},{"Key":"\u0026\u0026 message.Length","Fragments":["!="]},{"Key":"message.Length !=","Fragments":["0)"]},{"Key":"an impressively","Fragments":["concise"]},{"Key":"impressively concise","Fragments":["and"]},{"Key":" @joyce","Fragments":["Yes,"]},{"Key":"@joyce Yes,","Fragments":["I"]},{"Key":"the `Split`,","Fragments":["which"]},{"Key":"`Split`, which","Fragments":["indeed"]},{"Key":"which indeed","Fragments":["splits"]},{"Key":"indeed splits","Fragments":["by"]},{"Key":"whitespace, but","Fragments":["considering"]},{"Key":"but considering","Fragments":["you"]},{"Key":"already use","Fragments":["regular","it","it"]},{"Key":"use regular","Fragments":["expressions,"]},{"Key":"expressions, you","Fragments":["can"]},{"Key":"the `Regex`","Fragments":["itself."]},{"Key":"`Regex` itself.","Fragments":["See"]},{"Key":"itself. See","Fragments":["[my"]},{"Key":"See [my","Fragments":["submission](http://exercism.io/submissions/de77f87c005540ae97db7cdb80e0c788)"]},{"Key":"[my submission](http://exercism.io/submissions/de77f87c005540ae97db7cdb80e0c788)","Fragments":["for"]},{"Key":"submission](http://exercism.io/submissions/de77f87c005540ae97db7cdb80e0c788) for","Fragments":["an"]},{"Key":"thread safe","Fragments":["and"]},{"Key":"safe and","Fragments":["if"]},{"Key":"names have","Fragments":["been"]},{"Key":" Alternately,","Fragments":["you"]},{"Key":"Alternately, you","Fragments":["could"]},{"Key":"could invert","Fragments":["your"]},{"Key":"invert your","Fragments":["inversions."]},{"Key":"your inversions.","Fragments":["Generally"]},{"Key":"inversions. Generally","Fragments":["speaking,"]},{"Key":"speaking, fewer","Fragments":["NOTs"]},{"Key":"fewer NOTs","Fragments":["is"]},{"Key":"NOTs is","Fragments":["easier"]},{"Key":"return TRUE","Fragments":["when"]},{"Key":"TRUE when","Fragments":["y%4"]},{"Key":"when y%4","Fragments":["and"]},{"Key":"y%4 and","Fragments":["y%400"]},{"Key":"and y%400","Fragments":["it's"]},{"Key":"y%400 it's","Fragments":["more"]},{"Key":"straightforward for","Fragments":["your"]},{"Key":"reflect that","Fragments":["precise"]},{"Key":"that precise","Fragments":["requirement."]},{"Key":"remove two","Fragments":["NOTs,"]},{"Key":"two NOTs,","Fragments":["add"]},{"Key":"NOTs, add","Fragments":["one"]},{"Key":"add one","Fragments":["NOT"]},{"Key":"one NOT","Fragments":["on"]},{"Key":"NOT on","Fragments":["y%100,"]},{"Key":"on y%100,","Fragments":["and"]},{"Key":"y%100, and","Fragments":["remove"]},{"Key":"operator because","Fragments":["the"]},{"Key":"boolean result","Fragments":["of"]},{"Key":"then precisely","Fragments":["the"]},{"Key":"precisely the","Fragments":["return"]},{"Key":" put","Fragments":["the"]},{"Key":"the toupper","Fragments":["logic"]},{"Key":"toupper logic","Fragments":["in"]},{"Key":"in Match()","Fragments":["instead","very"]},{"Key":"Match() instead","Fragments":["of"]},{"Key":"constructor, because","Fragments":["it"]},{"Key":"the Match()","Fragments":["method"]},{"Key":"Match() method","Fragments":["only,"]},{"Key":"method only,","Fragments":["so"]},{"Key":"only, so","Fragments":["does"]},{"Key":"so does","Fragments":["not"]},{"Key":"not belong","Fragments":["outside"]},{"Key":"belong outside","Fragments":["it."]},{"Key":"outside it.","Fragments":["Also"]},{"Key":"it. Also","Fragments":["uppercase"]},{"Key":"Also uppercase","Fragments":["members"]},{"Key":"uppercase members","Fragments":["in"]},{"Key":"members in","Fragments":["the"]},{"Key":"not represent","Fragments":["the"]},{"Key":"expected state","Fragments":["when"]},{"Key":"state when","Fragments":["it"]},{"Key":"is obstantiated","Fragments":["by"]},{"Key":"obstantiated by","Fragments":["passing"]},{"Key":"a mixed","Fragments":["case"]},{"Key":"mixed case","Fragments":["string."]},{"Key":"case string.","Fragments":["One"]},{"Key":"string. One","Fragments":["cannot"]},{"Key":"One cannot","Fragments":["infer"]},{"Key":"cannot infer","Fragments":["from"]},{"Key":"infer from","Fragments":["the"]},{"Key":"classes interface","Fragments":["that","do"]},{"Key":"interface that","Fragments":["the"]},{"Key":"constructor will","Fragments":["be"]},{"Key":"be maintained","Fragments":["in"]},{"Key":"maintained in","Fragments":["any"]},{"Key":"other form","Fragments":["than"]},{"Key":"form than","Fragments":["what"]},{"Key":"null, although","Fragments":["one"]},{"Key":"although one","Fragments":["could"]},{"Key":"is out","Fragments":["of"]},{"Key":"of scope","Fragments":["since"]},{"Key":"scope since","Fragments":["the"]},{"Key":"tests which","Fragments":["define"]},{"Key":"which define","Fragments":["the"]},{"Key":"interface do","Fragments":["not"]},{"Key":"not exercise","Fragments":["this"]},{"Key":"exercise this","Fragments":["case.","trivial"]},{"Key":" Considered","Fragments":["using"]},{"Key":"using aggregate()","Fragments":["instead"]},{"Key":"aggregate() instead","Fragments":["of"]},{"Key":"of Concat(),","Fragments":["but"]},{"Key":"Concat(), but","Fragments":["wasn't"]},{"Key":"wasn't able","Fragments":["to","to"]},{"Key":"that added","Fragments":["to"]},{"Key":"the comprehensibility","Fragments":["of"]},{"Key":"comprehensibility of","Fragments":["the"]},{"Key":"you interesting","Fragments":[","]},{"Key":"interesting ,","Fragments":["you"]},{"Key":"just \"bool","Fragments":["IsLeap(int"]},{"Key":"\"bool IsLeap(int","Fragments":["year)\""]},{"Key":"IsLeap(int year)\"","Fragments":["method"]},{"Key":"year)\" method","Fragments":["and"]},{"Key":"in body","Fragments":["\"return"]},{"Key":"body \"return","Fragments":["(year"]},{"Key":"\"return (year","Fragments":["%"]},{"Key":"Aha.. I","Fragments":["remember"]},{"Key":"remember reading","Fragments":["that"]},{"Key":"reading that","Fragments":["this"]},{"Key":"foreach internally","Fragments":["does.."]},{"Key":"internally does..","Fragments":["calls"]},{"Key":"does.. calls","Fragments":["MoveNext()"]},{"Key":" P4r4d0x42,","Fragments":["thank"]},{"Key":"P4r4d0x42, thank","Fragments":["you!"]},{"Key":"you! It","Fragments":["is"]},{"Key":"most optimized","Fragments":["one"]},{"Key":"optimized one","Fragments":["I've"]},{"Key":"one I've","Fragments":["seen."]},{"Key":" Awesome","Fragments":["job."]},{"Key":"saw one","Fragments":["like"]},{"Key":"one like","Fragments":["this,"]},{"Key":"just ONE","Fragments":["return."]},{"Key":"was impressed.","Fragments":["Yours"]},{"Key":"impressed. Yours","Fragments":["is"]},{"Key":"similar one","Fragments":["to"]},{"Key":"a modified","Fragments":["version"]},{"Key":"modified version","Fragments":["of"]},{"Key":"of martinfreedman's","Fragments":["'strain'"]},{"Key":"martinfreedman's 'strain'","Fragments":["code"]},{"Key":"'strain' code","Fragments":["as"]},{"Key":"simplest approach","Fragments":["and"]},{"Key":"approach and","Fragments":["I"]},{"Key":"Hi there.","Fragments":["Looks"]},{"Key":"there. Looks","Fragments":["like"]},{"Key":"second \"if\"","Fragments":["condition","statement,","condition"]},{"Key":"\"if\" condition","Fragments":["you","can","altogether."]},{"Key":"condition you","Fragments":["test"]},{"Key":"0. That","Fragments":["condition"]},{"Key":"That condition","Fragments":["can"]},{"Key":"true as","Fragments":["it"]},{"Key":"same condition","Fragments":["as"]},{"Key":"a rid","Fragments":["of"]},{"Key":"test within","Fragments":["your"]},{"Key":"\"if\" statement,","Fragments":["then"]},{"Key":"statement, then","Fragments":["that"]},{"Key":"second test","Fragments":["in"]},{"Key":"your third","Fragments":["\"if\""]},{"Key":"third \"if\"","Fragments":["condition"]},{"Key":"also only","Fragments":["ever"]},{"Key":" Therefore","Fragments":["you"]},{"Key":"Therefore you","Fragments":["could"]},{"Key":"could effectively","Fragments":["remove"]},{"Key":"effectively remove","Fragments":["the"]},{"Key":"Just something","Fragments":["to"]},{"Key":"be mindful","Fragments":["of"]},{"Key":"mindful of","Fragments":["when"]},{"Key":"when you've","Fragments":["got"]},{"Key":"the \"arrow\"","Fragments":["anti-pattern"]},{"Key":"\"arrow\" anti-pattern","Fragments":["-"]},{"Key":"anti-pattern -","Fragments":["http://blog.codinghorror.com/flattening-arrow-code/"]},{"Key":" Obviously","Fragments":["the"]},{"Key":"Obviously the","Fragments":["example"]},{"Key":"example given","Fragments":["has"]},{"Key":"given has","Fragments":["a"]},{"Key":"more nested","Fragments":["ifs"]},{"Key":"ifs than","Fragments":["yours"]},{"Key":"than yours","Fragments":["but"]},{"Key":"yours but","Fragments":["it's"]},{"Key":"to bear","Fragments":["in"]},{"Key":"bear in","Fragments":["mind."]},{"Key":"consider adding","Fragments":["is","a"]},{"Key":"adding is","Fragments":["a"]},{"Key":"clause to","Fragments":["check"]},{"Key":"text argument","Fragments":["is"]},{"Key":"argument is","Fragments":["not"]},{"Key":"null otherwise","Fragments":["you'll"]},{"Key":"otherwise you'll","Fragments":["get"]},{"Key":"exception thrown","Fragments":["at"]},{"Key":"thrown at","Fragments":["line"]},{"Key":"line 15.","Fragments":["In"]},{"Key":"15. In","Fragments":["this"]},{"Key":"particular exercise","Fragments":["it"]},{"Key":"exercise it","Fragments":["just","has"]},{"Key":"so happens","Fragments":["that"]},{"Key":"that failure","Fragments":["of"]},{"Key":"failure of","Fragments":["the"]},{"Key":"clause actually","Fragments":["results"]},{"Key":"actually results","Fragments":["in"]},{"Key":"place I'd","Fragments":["do"]},{"Key":"the nothingSaid","Fragments":["check"]},{"Key":"nothingSaid check","Fragments":["at"]},{"Key":"time as","Fragments":["they"]},{"Key":"they result","Fragments":["in"]},{"Key":"same outcome.","Fragments":["You"]},{"Key":"outcome. You","Fragments":["could"]},{"Key":"use string.IsNullOrEmpty","Fragments":["together"]},{"Key":"string.IsNullOrEmpty together","Fragments":["with"]},{"Key":"with string.Trim","Fragments":["to"]},{"Key":"string.Trim to","Fragments":["establish"]},{"Key":"to establish","Fragments":["whether"]},{"Key":"establish whether","Fragments":["nothing"]},{"Key":"whether nothing","Fragments":["was"]},{"Key":"was said","Fragments":["rather"]},{"Key":"said rather","Fragments":["than"]},{"Key":"loop construct.","Fragments":["While"]},{"Key":"construct. While","Fragments":["your"]},{"Key":"job with","Fragments":["the"]},{"Key":"method described","Fragments":["above"]},{"Key":"described above","Fragments":["you'd"]},{"Key":"above you'd","Fragments":["condense"]},{"Key":"you'd condense","Fragments":["11"]},{"Key":"condense 11","Fragments":["lines"]},{"Key":"11 lines","Fragments":["to"]},{"Key":"1 without","Fragments":["losing"]},{"Key":"of EndsWith,","Fragments":["I"]},{"Key":"EndsWith, I","Fragments":["hadn't"]},{"Key":"hadn't spotted","Fragments":["that"]},{"Key":"spotted that","Fragments":["particular"]},{"Key":"particular method","Fragments":["before."]},{"Key":"checking shouting.","Fragments":["I'd"]},{"Key":"shouting. I'd","Fragments":["consider"]},{"Key":"extracting that","Fragments":["out"]},{"Key":"own method.","Fragments":["Seeing"]},{"Key":"method. Seeing","Fragments":["your"]},{"Key":"Seeing your","Fragments":["implementation"]},{"Key":"implementation has","Fragments":["made"]},{"Key":"me realise","Fragments":["that"]},{"Key":"shouting check","Fragments":["using"]},{"Key":"check using","Fragments":["2"]},{"Key":"using 2","Fragments":["Linq"]},{"Key":"2 Linq","Fragments":["statements."]},{"Key":" Implementation","Fragments":["via"]},{"Key":"Implementation via","Fragments":["nested"]},{"Key":"via nested","Fragments":["LINQ"]},{"Key":"nested LINQ","Fragments":["declarations"]},{"Key":"LINQ declarations","Fragments":["is"]},{"Key":"declarations is","Fragments":["dense"]},{"Key":"is dense","Fragments":["but"]},{"Key":"dense but","Fragments":["required"]},{"Key":"but required","Fragments":["significantly"]},{"Key":"required significantly","Fragments":["less"]},{"Key":"significantly less","Fragments":["mental"]},{"Key":"less mental","Fragments":["space"]},{"Key":"mental space","Fragments":["to"]},{"Key":"space to","Fragments":["comprehend"]},{"Key":"to comprehend","Fragments":["than"]},{"Key":"comprehend than","Fragments":["nested"]},{"Key":"than nested","Fragments":["foreach"]},{"Key":"nested foreach","Fragments":["loops."]},{"Key":"Three levels","Fragments":["of"]},{"Key":"ifs is","Fragments":["a"]},{"Key":"of layers","Fragments":["to"]},{"Key":"layers to","Fragments":["keep"]},{"Key":"a task","Fragments":["with"]},{"Key":"task with","Fragments":["more"]},{"Key":"more substance","Fragments":["than"]},{"Key":"substance than","Fragments":["checking"]},{"Key":"than checking","Fragments":["leap"]},{"Key":"checking leap","Fragments":["years."]},{"Key":"years. What","Fragments":["could"]},{"Key":"What could","Fragments":["you"]},{"Key":"you reversed","Fragments":["the"]},{"Key":" Straight","Fragments":["to"]},{"Key":"Straight to","Fragments":["the"]},{"Key":"point with","Fragments":["no"]},{"Key":"no fancy","Fragments":["syntax"]},{"Key":"fancy syntax","Fragments":["required"]},{"Key":"syntax required","Fragments":["or"]},{"Key":"or utilized.","Fragments":["I"]},{"Key":"utilized. I","Fragments":["like"]},{"Key":"Trim() before","Fragments":["the"]},{"Key":"the EndsWith()","Fragments":["check"]},{"Key":"EndsWith() check","Fragments":["to"]},{"Key":"for trailing","Fragments":["spaces."]},{"Key":"spaces. It's","Fragments":["not"]},{"Key":"easily appear","Fragments":["if"]},{"Key":"appear if","Fragments":["given"]},{"Key":"an end","Fragments":["user."]},{"Key":"end user.","Fragments":["Also"]},{"Key":"user. Also","Fragments":["isAllUpper()"]},{"Key":"Also isAllUpper()","Fragments":["is"]},{"Key":"isAllUpper() is","Fragments":["somewhat"]},{"Key":"good. Only","Fragments":["thing"]},{"Key":"thing I'll","Fragments":["add"]},{"Key":"that those","Fragments":["if/else"]},{"Key":"those if/else","Fragments":["statements"]},{"Key":"are possibly","Fragments":["unnecessary."]},{"Key":"\u0026\u0026 ((year","Fragments":["%"]},{"Key":"0 )","Fragments":["||"]},{"Key":") ||","Fragments":["(year"]},{"Key":"readme does,","Fragments":["but"]},{"Key":"in whether","Fragments":["or"]},{"Key":"iterate using","Fragments":["the"]},{"Key":"the enumerator","Fragments":["syntax."]},{"Key":"enumerator syntax.","Fragments":["Either"]},{"Key":"syntax. Either","Fragments":["way,"]},{"Key":"way, no","Fragments":["fun."]},{"Key":"the \"original\"","Fragments":["unit"]},{"Key":"\"original\" unit","Fragments":["tests,"]},{"Key":"but checking","Fragments":["the"]},{"Key":"to other's","Fragments":["submissions"]},{"Key":"not easy","Fragments":["to"]},{"Key":"iteration the","Fragments":["solution"]},{"Key":"solution needs","Fragments":["to"]},{"Key":"succinct (clear","Fragments":["and"]},{"Key":"(clear and","Fragments":["short)."]},{"Key":"Well, this","Fragments":["is"]},{"Key":"submission so","Fragments":["I"]},{"Key":"felt free","Fragments":["to"]},{"Key":"suite so","Fragments":["the"]},{"Key":"passed on","Fragments":["my"]},{"Key":"my computer","Fragments":["no"]},{"Key":"computer no","Fragments":["matter"]},{"Key":"matter the","Fragments":["name"]},{"Key":"name I","Fragments":["gave"]},{"Key":"second submission","Fragments":["I'll"]},{"Key":"submission I'll","Fragments":["no"]},{"Key":"I'll no","Fragments":["longer"]},{"Key":"longer be","Fragments":["taking"]},{"Key":"taking that","Fragments":["assumption"]},{"Key":"that assumption","Fragments":["and"]},{"Key":"assumption and","Fragments":["the"]},{"Key":"without modifying","Fragments":["the"]},{"Key":"combine two","Fragments":["arrays"]},{"Key":"two arrays","Fragments":["like"]},{"Key":"arrays like","Fragments":["the"]},{"Key":"the joining","Fragments":["of"]},{"Key":"joining of","Fragments":["a"]},{"Key":"a zipper.","Fragments":["Is"]},{"Key":"zipper. Is","Fragments":["there"]},{"Key":"var q","Fragments":["="]},{"Key":"q =","Fragments":["dnaChar1.Zip(dnaChar2,","dnaChar1.Zip(dnaChar2,"]},{"Key":"= dnaChar1.Zip(dnaChar2,","Fragments":["(a,","(a,"]},{"Key":"dnaChar1.Zip(dnaChar2, (a,","Fragments":["b)","b)"]},{"Key":"(a, b)","Fragments":["=\u003e","=\u003e"]},{"Key":"b) =\u003e","Fragments":["!a.Equals(b));","!a.Equals(b)).Where(z=\u003ez==true);"]},{"Key":"new array","Fragments":["with"]},{"Key":"letters that","Fragments":["don't"]},{"Key":"don't match,","Fragments":["and"]},{"Key":"match, and","Fragments":["then"]},{"Key":"the Length","Fragments":["property"]},{"Key":"Length property","Fragments":["of"]},{"Key":"Try Dictionary","Fragments":[","]},{"Key":"Dictionary ,","Fragments":["Flagged"]},{"Key":", Flagged","Fragments":["enum"]},{"Key":"Flagged enum","Fragments":["or"]},{"Key":"enum or","Fragments":["learn"]},{"Key":"or learn","Fragments":["about"]},{"Key":"about '\u003c\u003c'","Fragments":["operator"]},{"Key":" some","Fragments":["methods"]},{"Key":"make GetLetter()","Fragments":["and"]},{"Key":"GetLetter() and","Fragments":["GetNumber()"]},{"Key":"and GetNumber()","Fragments":["calls"]},{"Key":"GetNumber() calls","Fragments":["fewer"]},{"Key":"calls fewer","Fragments":["and"]},{"Key":"fewer and","Fragments":["more"]},{"Key":"on zip,","Fragments":["seems"]},{"Key":"zip, seems","Fragments":["like"]},{"Key":"really simple","Fragments":["implementation."]},{"Key":"Fields must","Fragments":["not"]},{"Key":"must not","Fragments":["be"]},{"Key":"Nice make","Fragments":["Zip"]},{"Key":"make Zip","Fragments":["func"]},{"Key":"Zip func","Fragments":["a"]},{"Key":"func a","Fragments":["tertiary"]},{"Key":"tertiary expression","Fragments":["would","and"]},{"Key":"look cleaner,","Fragments":["then"]},{"Key":"cleaner, then","Fragments":["you"]},{"Key":"to chararray,","Fragments":["linq"]},{"Key":"chararray, linq","Fragments":["automatically"]},{"Key":"linq automatically","Fragments":["turns"]},{"Key":"automatically turns","Fragments":["strings"]},{"Key":"turns strings","Fragments":["into"]},{"Key":"arrays to","Fragments":["apply"]},{"Key":"to apply","Fragments":["linq."]},{"Key":"without math.pow","Fragments":["or"]},{"Key":"math.pow or","Fragments":["equivalent?"]},{"Key":"many helper","Fragments":["methods,"]},{"Key":"methods, makes","Fragments":["this"]},{"Key":"readable due","Fragments":["to"]},{"Key":"to length","Fragments":["can"]},{"Key":"length can","Fragments":["be"]},{"Key":"be considerably","Fragments":["shorter"]},{"Key":"considerably shorter","Fragments":["and"]},{"Key":"also more","Fragments":["readable."]},{"Key":"Can be","Fragments":["turned"]},{"Key":"not expose","Fragments":["fields,"]},{"Key":"expose fields,","Fragments":["make"]},{"Key":"fields, make","Fragments":["them"]},{"Key":"and note","Fragments":["common"]},{"Key":"note common","Fragments":["elements"]},{"Key":"common elements","Fragments":["in"]},{"Key":"in three","Fragments":["strings"]},{"Key":"first strip","Fragments":["out"]},{"Key":"strip out","Fragments":["all"]},{"Key":"the punctuation","Fragments":["marks,","in","in"]},{"Key":"punctuation marks,","Fragments":["other"]},{"Key":"marks, other","Fragments":["than"]},{"Key":"than apostrophes","Fragments":["used"]},{"Key":"for contractions.","Fragments":["Then"]},{"Key":"contractions. Then","Fragments":["loop"]},{"Key":"Then loop","Fragments":["over"]},{"Key":"phrase looking","Fragments":["for"]},{"Key":"for spaces","Fragments":["to"]},{"Key":"beginning and","Fragments":["end"]},{"Key":"each word,","Fragments":["then"]},{"Key":"the addWord","Fragments":["method"]},{"Key":"addWord method","Fragments":["to"]},{"Key":"to create/update","Fragments":["the"]},{"Key":"create/update the","Fragments":["appropriate"]},{"Key":"appropriate dictionary","Fragments":["entry"]},{"Key":"In retrospect","Fragments":["I"]},{"Key":"retrospect I","Fragments":["should"]},{"Key":"WordCount method","Fragments":["and"]},{"Key":"use .split()","Fragments":["instead."]},{"Key":".split() instead.","Fragments":["I"]},{"Key":"probably go","Fragments":["back"]},{"Key":"some point.","Fragments":["Are"]},{"Key":"point. Are","Fragments":["there"]},{"Key":"Are there","Fragments":["any"]},{"Key":"any potential","Fragments":["changes"]},{"Key":"potential changes","Fragments":["that"]},{"Key":"changes that","Fragments":["would"]},{"Key":"to substantial","Fragments":["performance"]},{"Key":"substantial performance","Fragments":["or"]},{"Key":"or code","Fragments":["readability"]},{"Key":"readability improvement","Fragments":["here?"]},{"Key":"good. Nothing","Fragments":["to"]},{"Key":"Use TrimStart()","Fragments":["and"]},{"Key":"TrimStart() and","Fragments":["TrimEnd()"]},{"Key":"and TrimEnd()","Fragments":["instead"]},{"Key":"TrimEnd() instead","Fragments":["of"]},{"Key":"Try SortedSet","Fragments":["instead"]},{"Key":"SortedSet instead","Fragments":["of"]},{"Key":"of List,","Fragments":["no"]},{"Key":"List, no","Fragments":["need"]},{"Key":"for manual","Fragments":["sort."]},{"Key":"You Have","Fragments":["not"]},{"Key":"Have not","Fragments":["yet"]},{"Key":"yet solved","Fragments":["advanced"]},{"Key":"solved advanced","Fragments":["challenge"]},{"Key":"advanced challenge","Fragments":["in"]},{"Key":"in making","Fragments":["dictionary"]},{"Key":"making dictionary","Fragments":["readonly."]},{"Key":"dictionary readonly.","Fragments":["(Really"]},{"Key":"readonly. (Really","Fragments":["there"]},{"Key":"(Really there","Fragments":["should"]},{"Key":"unit tiest","Fragments":["for"]},{"Key":"tiest for","Fragments":["this)"]},{"Key":"use only","Fragments":["one"]},{"Key":"one GetDay()","Fragments":["Method.","method"]},{"Key":" Hint","Fragments":[":",":"]},{"Key":"Hint :","Fragments":["Use","to"]},{"Key":": Use","Fragments":["DateTime.DaysInMonth()"]},{"Key":"Use DateTime.DaysInMonth()","Fragments":["method"]},{"Key":"DateTime.DaysInMonth() method","Fragments":["to"]},{"Key":"to retrieve","Fragments":["all"]},{"Key":"retrieve all","Fragments":["days"]},{"Key":"all days","Fragments":["in"]},{"Key":"one given","Fragments":["month"]},{"Key":"given month","Fragments":["and"]},{"Key":" ````var","Fragments":["q"]},{"Key":"````var q","Fragments":["="]},{"Key":"This solves","Fragments":["advancec"]},{"Key":"solves advancec","Fragments":["challenge,"]},{"Key":"advancec challenge,","Fragments":["there"]},{"Key":"challenge, there","Fragments":["should"]},{"Key":"should ahve","Fragments":["been"]},{"Key":"ahve been","Fragments":["a"]},{"Key":" Assert.That(school.Roster[4],","Fragments":["Is.EqualTo(new","Is.EqualTo(new"]},{"Key":"Assert.That(school.Roster[4], Is.EqualTo(new","Fragments":["List\u003cstring\u003e","List\u003cstring\u003e"]},{"Key":"{ \"Jennifer\"","Fragments":["}));","}));"]},{"Key":" Long","Fragments":["and"]},{"Key":"Long and","Fragments":["not"]},{"Key":"readable, looks","Fragments":["more"]},{"Key":"like c","Fragments":["not"]},{"Key":"c not","Fragments":["c#."]},{"Key":"not c#.","Fragments":["At"]},{"Key":"c#. At","Fragments":["least"]},{"Key":"least switch","Fragments":["to"]},{"Key":"switch to","Fragments":["foreach","a"]},{"Key":"from for","Fragments":["and"]},{"Key":"reduce number","Fragments":["of"]},{"Key":"and conditional","Fragments":["nesting."]},{"Key":"Hard coded","Fragments":["values","values"]},{"Key":"coded values","Fragments":["in","in"]},{"Key":"these emthods","Fragments":["is"]},{"Key":"emthods is","Fragments":["not"]},{"Key":"Only need","Fragments":["one"]},{"Key":"need one","Fragments":["GetDay()"]},{"Key":"GetDay() method","Fragments":["not"]},{"Key":"method not","Fragments":["three"]},{"Key":"you so","Fragments":["much"]},{"Key":"this feedback.","Fragments":["I"]},{"Key":"this again.","Fragments":["Appreciate"]},{"Key":"again. Appreciate","Fragments":["it."]},{"Key":"the combo","Fragments":["of"]},{"Key":"combo of","Fragments":["number"]},{"Key":"of number","Fragments":["words"]},{"Key":"number words","Fragments":["and"]},{"Key":" Get","Fragments":["rid"]},{"Key":"Get rid","Fragments":["of"]},{"Key":" .First().Equals('\\'')","Fragments":["and"]},{"Key":".First().Equals('\\'') and","Fragments":[".Last().Equals('\\'')"]},{"Key":"and .Last().Equals('\\'')","Fragments":["can"]},{"Key":".Last().Equals('\\'') can","Fragments":["be"]},{"Key":"by .StartsWith('\\'')","Fragments":["and"]},{"Key":".StartsWith('\\'') and","Fragments":[".EndsWith('\\'')"]},{"Key":" StartsWith","Fragments":["and"]},{"Key":"StartsWith and","Fragments":["EndWith"]},{"Key":"and EndWith","Fragments":["is"]},{"Key":"EndWith is","Fragments":["used"]},{"Key":"know whether","Fragments":["the"]},{"Key":"starting (or","Fragments":["ending)"]},{"Key":"(or ending)","Fragments":["by"]},{"Key":"ending) by","Fragments":["the"]},{"Key":"given parameter.","Fragments":["If"]},{"Key":"parameter. If","Fragments":["you"]},{"Key":"you plan","Fragments":["to"]},{"Key":"remove it","Fragments":["from"]},{"Key":"string afterwards","Fragments":["it"]},{"Key":"afterwards it","Fragments":["is"]},{"Key":"use TrimStart","Fragments":["and"]},{"Key":"TrimStart and","Fragments":["TrimEnd"]},{"Key":"rather silly","Fragments":["exercise"]},{"Key":": to","Fragments":["call"]},{"Key":"another constructor","Fragments":["you"]},{"Key":"public SumOfMultiples(List\u003cint\u003e","Fragments":["multiples)"]},{"Key":" this.multiples","Fragments":["="]},{"Key":"this.multiples =","Fragments":["multiples;"]},{"Key":"this(new List\u003cint\u003e","Fragments":["{"]},{"Key":"List\u003cint\u003e {","Fragments":["3,"]},{"Key":"avoid long","Fragments":["interation"]},{"Key":"long interation","Fragments":["(10000!)"]},{"Key":"interation (10000!)","Fragments":["it's"]},{"Key":"(10000!) it's","Fragments":["better"]},{"Key":"use recursivity","Fragments":["to"]},{"Key":"recursivity to","Fragments":["compute"]},{"Key":" Wasn't","Fragments":["able"]},{"Key":"Wasn't able","Fragments":["to"]},{"Key":"actually test","Fragments":["this"]},{"Key":"test this","Fragments":["because"]},{"Key":"get Nunit","Fragments":["working"]},{"Key":"Nunit working","Fragments":["on"]},{"Key":"work comp.","Fragments":["Let"]},{"Key":"comp. Let","Fragments":["me"]},{"Key":"if somethings","Fragments":["wrong..."]},{"Key":"somethings wrong...","Fragments":["thanks."]},{"Key":"ternary expression?","Fragments":["(googled"]},{"Key":"expression? (googled","Fragments":["tertiary"]},{"Key":"(googled tertiary","Fragments":["expression"]},{"Key":"and ternary","Fragments":["came"]},{"Key":"ternary came","Fragments":["up!)"]},{"Key":"came up!)","Fragments":["like"]},{"Key":" a.Equals(b)","Fragments":["?"]},{"Key":"a.Equals(b) ?","Fragments":["0"]},{"Key":"first big","Fragments":["change"]},{"Key":"big change","Fragments":["was"]},{"Key":"use split","Fragments":["to"]},{"Key":"split to","Fragments":["separate"]},{"Key":"words, rather","Fragments":["than"]},{"Key":"than manually","Fragments":["search"]},{"Key":"manually search","Fragments":["for"]},{"Key":"for locations","Fragments":["of"]},{"Key":"locations of","Fragments":["a"]},{"Key":"a space;","Fragments":["this"]},{"Key":"space; this","Fragments":["really"]},{"Key":"really condensed","Fragments":["WordCount()."]},{"Key":"condensed WordCount().","Fragments":["I"]},{"Key":"WordCount(). I","Fragments":["also"]},{"Key":"took @blanca","Fragments":["advice"]},{"Key":"@blanca advice","Fragments":["and"]},{"Key":"in removePunctuation();","Fragments":["I"]},{"Key":"removePunctuation(); I","Fragments":["still"]},{"Key":"still am","Fragments":["not"]},{"Key":"in love","Fragments":["with"]},{"Key":"love with","Fragments":["it,"]},{"Key":"interesting little","Fragments":["puzzle,"]},{"Key":"little puzzle,","Fragments":["I"]},{"Key":"puzzle, I","Fragments":["initially"]},{"Key":"initially tried","Fragments":["solving"]},{"Key":"tried solving","Fragments":["it"]},{"Key":"solving it","Fragments":["with"]},{"Key":"DayOfWeek but","Fragments":["was"]},{"Key":"day when","Fragments":["pulling"]},{"Key":"when pulling","Fragments":["them"]},{"Key":"pulling them","Fragments":["out"]},{"Key":"so moved","Fragments":["to"]},{"Key":"moved to","Fragments":["a","the"]},{"Key":"tuple. It","Fragments":["could"]},{"Key":"be tidied","Fragments":["up"]},{"Key":"tidied up","Fragments":["a"]},{"Key":"little bit,","Fragments":["the"]},{"Key":"bit, the","Fragments":["three"]},{"Key":"three `IF`","Fragments":["statements"]},{"Key":"`IF` statements","Fragments":["in"]},{"Key":"in Day","Fragments":["feel"]},{"Key":"Day feel","Fragments":["like"]},{"Key":"better alternative.","Fragments":["Plus"]},{"Key":"alternative. Plus","Fragments":["`DetermineDate`"]},{"Key":"Plus `DetermineDate`","Fragments":["feels"]},{"Key":"`DetermineDate` feels","Fragments":["a"]},{"Key":"little convoluted/complex","Fragments":["with"]},{"Key":"convoluted/complex with","Fragments":["converting"]},{"Key":"and skipping","Fragments":["'n'"]},{"Key":"skipping 'n'","Fragments":["results."]},{"Key":"'n' results.","Fragments":["But"]},{"Key":"results. But","Fragments":["it"]},{"Key":"works even","Fragments":["though"]},{"Key":"little bugger!","Fragments":["Maintaining"]},{"Key":"bugger! Maintaining","Fragments":["this"]},{"Key":"Maintaining this","Fragments":["in"]},{"Key":"future has","Fragments":["the"]},{"Key":"potential to","Fragments":["be"]},{"Key":"pain (adding","Fragments":["in"]},{"Key":"(adding in","Fragments":["extra"]},{"Key":"in extra","Fragments":["IF"]},{"Key":"extra IF","Fragments":["statements)"]},{"Key":"IF statements)","Fragments":["and"]},{"Key":"statements) and","Fragments":["looking"]},{"Key":"and looking","Fragments":["through"]},{"Key":"peoples implementations","Fragments":["I"]},{"Key":"implementations I","Fragments":["have"]},{"Key":"just discovered","Fragments":["the","previous"]},{"Key":"discovered the","Fragments":["`DateTime.AddDay`."]},{"Key":"Pretty good,","Fragments":["but"]},{"Key":"separate ensureSchoolHasGrade.","Fragments":["If"]},{"Key":"ensureSchoolHasGrade. If","Fragments":["you"]},{"Key":"you incorporate","Fragments":["it"]},{"Key":"incorporate it","Fragments":["into"]},{"Key":"your Grade","Fragments":["method,"]},{"Key":"Grade method,","Fragments":["and"]},{"Key":"Add instead","Fragments":["of"]},{"Key":"of accessing","Fragments":["the"]},{"Key":"the internals,","Fragments":["then"]},{"Key":"internals, then","Fragments":["your"]},{"Key":"and cleaner.","Fragments":["IMHO."]},{"Key":"cleaner. IMHO.","Fragments":[":)"]},{"Key":"wasn't necessarily","Fragments":["hard"]},{"Key":"necessarily hard","Fragments":["when"]},{"Key":"hard when","Fragments":["considering"]},{"Key":"the hints","Fragments":["provided"]},{"Key":"hints provided","Fragments":["in"]},{"Key":"readme. However,","Fragments":["I'm"]},{"Key":"familiar at","Fragments":["all"]},{"Key":"all with","Fragments":["the"]},{"Key":"the NUnit.Framework","Fragments":["stuff"]},{"Key":"NUnit.Framework stuff","Fragments":["that"]},{"Key":"stuff that","Fragments":["all"]},{"Key":"exercises include...","Fragments":["I'm"]},{"Key":"include... I'm","Fragments":["going"]},{"Key":"sort that","Fragments":["out"]},{"Key":"out for","Fragments":["future"]},{"Key":"out nunit.","Fragments":["There"]},{"Key":"nunit. There","Fragments":["should"]},{"Key":"There should","Fragments":["be"]},{"Key":"no main()","Fragments":["here"]},{"Key":"Linq ZIp","Fragments":["to"]},{"Key":"ZIp to","Fragments":["erplace"]},{"Key":"to erplace","Fragments":["for"]},{"Key":"erplace for","Fragments":["loop?"]},{"Key":"need nunit","Fragments":["working."]},{"Key":"nunit working.","Fragments":["Business"]},{"Key":"working. Business","Fragments":["restrictions"]},{"Key":"Business restrictions","Fragments":["no"]},{"Key":"restrictions no","Fragments":["doubt"]},{"Key":"no doubt","Fragments":["on"]},{"Key":"doubt on","Fragments":["work"]},{"Key":"on work","Fragments":["comp"]},{"Key":"work comp","Fragments":[":-("]},{"Key":"comp :-(","Fragments":["Of"]},{"Key":":-( Of","Fragments":["course"]},{"Key":"course best","Fragments":["time"]},{"Key":"best time","Fragments":["to"]},{"Key":"this too!","Fragments":[":-)"]},{"Key":"Although this","Fragments":["is"]},{"Key":"used generators","Fragments":["and"]},{"Key":"generators and","Fragments":["function/lambda"]},{"Key":"and function/lambda","Fragments":["arguments."]},{"Key":"Dont need","Fragments":["two"]},{"Key":"need two","Fragments":["dictionaries..."]},{"Key":"two dictionaries...","Fragments":["think"]},{"Key":"dictionaries... think","Fragments":["about"]},{"Key":"constructor which","Fragments":["used"]},{"Key":"which used","Fragments":["Enumerable.Range"]},{"Key":"used Enumerable.Range","Fragments":["to"]},{"Key":"Enumerable.Range to","Fragments":["populate","populate","one"]},{"Key":"Roster with","Fragments":["12"]},{"Key":"with 12","Fragments":["grades"]},{"Key":"12 grades","Fragments":["of"]},{"Key":"grades of","Fragments":["empty"]},{"Key":"string lists,","Fragments":["so"]},{"Key":"Grade(), and","Fragments":["so"]},{"Key":"I wouldnt","Fragments":["need"]},{"Key":"wouldnt need","Fragments":["the"]},{"Key":"in Add().","Fragments":["However,"]},{"Key":"Add(). However,","Fragments":["a"]},{"Key":"However, a","Fragments":["new"]},{"Key":"new School","Fragments":["needs"]},{"Key":"School needs","Fragments":["to"]},{"Key":"empty roster,","Fragments":["so"]},{"Key":"roster, so","Fragments":["I"]},{"Key":"this route.","Fragments":["I"]},{"Key":"route. I","Fragments":["like"]},{"Key":"catches a","Fragments":["false"]},{"Key":"false input","Fragments":["if"]},{"Key":"someone looks","Fragments":["for"]},{"Key":"looks for","Fragments":["something"]},{"Key":"like grade","Fragments":["40"]},{"Key":"grade 40","Fragments":["or"]},{"Key":"40 or","Fragments":["grade"]},{"Key":"or grade","Fragments":["-1."]},{"Key":"very complex","Fragments":["try"]},{"Key":"complex try","Fragments":["and"]},{"Key":"and eliminaet","Fragments":["the"]},{"Key":"eliminaet the","Fragments":["for"]},{"Key":"loop replace","Fragments":["with,"]},{"Key":"replace with,","Fragments":["at"]},{"Key":"with, at","Fragments":["least."]},{"Key":"least. a","Fragments":["foreach,"]},{"Key":"a foreach,","Fragments":["might"]},{"Key":"foreach, might","Fragments":["make"]},{"Key":"This really","Fragments":["needs"]},{"Key":"really needs","Fragments":["either"]},{"Key":"needs either","Fragments":["use"]},{"Key":"either use","Fragments":["of"]},{"Key":"Regex or","Fragments":["Linq"]},{"Key":"or Linq","Fragments":["fully"]},{"Key":"Linq fully","Fragments":["(my"]},{"Key":"fully (my","Fragments":["preferred"]},{"Key":"(my preferred","Fragments":["route)"]},{"Key":" removePunctuation","Fragments":["can"]},{"Key":"removePunctuation can","Fragments":["be"]},{"Key":"single Linq","Fragments":["expression"]},{"Key":"Why addWords()?Just","Fragments":["split"]},{"Key":"addWords()?Just split","Fragments":["the"]},{"Key":"the cleaned","Fragments":["phrase."]},{"Key":"even bothering","Fragments":["to"]},{"Key":"bothering to","Fragments":["read"]},{"Key":"main comment","Fragments":["there,"]},{"Key":"comment there,","Fragments":["martinfreedman."]},{"Key":"for can","Fragments":["be"]},{"Key":"be erplaced","Fragments":["wiht"]},{"Key":"erplaced wiht","Fragments":["foreach"]},{"Key":"wiht foreach","Fragments":["and"]},{"Key":"a search","Fragments":["loop,"]},{"Key":"search loop,","Fragments":["it's"]},{"Key":"loop, it's","Fragments":["just"]},{"Key":" ...still","Fragments":["creating"]},{"Key":"...still creating","Fragments":["tuples"]},{"Key":"creating tuples","Fragments":["and"]},{"Key":"tuples and","Fragments":["method"]},{"Key":"and method","Fragments":["call"]},{"Key":"a cost...","Fragments":["or"]},{"Key":"cost... or","Fragments":["you"]},{"Key":"dictionary why","Fragments":["not"]},{"Key":"use ContainsKey","Fragments":["in"]},{"Key":"ContainsKey in","Fragments":["Count()?"]},{"Key":" Foreach/GroupBy","Fragments":["is"]},{"Key":"Foreach/GroupBy is","Fragments":["useful"]},{"Key":"is useful","Fragments":["in"]},{"Key":"than linq(foreach","Fragments":["is"]},{"Key":"linq(foreach is","Fragments":["faster)"]},{"Key":"is faster)","Fragments":["I"]},{"Key":"faster) I","Fragments":["would"]},{"Key":"would turn","Fragments":["that"]},{"Key":"method generator","Fragments":["with"]},{"Key":"with yield","Fragments":["return"]},{"Key":"tuple and","Fragments":["apply"]},{"Key":"and apply","Fragments":["ToDictionary()"]},{"Key":"apply ToDictionary()","Fragments":["on"]},{"Key":"ToDictionary() on","Fragments":["the"]},{"Key":"in Transfrom().","Fragments":["Therefore"]},{"Key":"Transfrom(). Therefore","Fragments":["and"]},{"Key":"Therefore and","Fragments":["no"]},{"Key":"linq one","Fragments":["you"]},{"Key":"at if","Fragments":["you"]},{"Key":"still want","Fragments":["to"]},{"Key":"was extremely","Fragments":["challenging"]},{"Key":"extremely challenging","Fragments":["for"]},{"Key":"challenging for","Fragments":["me."]},{"Key":"It made","Fragments":["me"]},{"Key":"me realize","Fragments":["that"]},{"Key":"was very","Fragments":["inexperienced"]},{"Key":"very inexperienced","Fragments":["with"]},{"Key":"inexperienced with","Fragments":["basic"]},{"Key":"with basic","Fragments":["string"]},{"Key":"basic string","Fragments":["operations."]},{"Key":"write cases","Fragments":["that"]},{"Key":"could apply","Fragments":["to"]},{"Key":"general string","Fragments":["input,"]},{"Key":"string input,","Fragments":["and"]},{"Key":"avoid making","Fragments":["it"]},{"Key":"too specific","Fragments":["to"]},{"Key":"test inputs","Fragments":["provided,"]},{"Key":"inputs provided,","Fragments":["but"]},{"Key":"provided, but","Fragments":["I"]},{"Key":"them. Specifically,","Fragments":["case"]},{"Key":"Specifically, case","Fragments":["5"]},{"Key":"case 5","Fragments":["is"]},{"Key":"5 is","Fragments":["sort"]},{"Key":"a \"cheat","Fragments":["case\","]},{"Key":"\"cheat case\",","Fragments":["and"]},{"Key":"case\", and","Fragments":["so"]},{"Key":"is case","Fragments":["7."]},{"Key":"case 7.","Fragments":["They"]},{"Key":"7. They","Fragments":["only"]},{"Key":"They only","Fragments":["really"]},{"Key":"really work","Fragments":["for"]},{"Key":"some specific","Fragments":["tests"]},{"Key":"specific tests","Fragments":["provided"]},{"Key":"tests provided","Fragments":["in"]},{"Key":"exercise. Also,","Fragments":["making"]},{"Key":"Also, making","Fragments":["the"]},{"Key":"default return","Fragments":["statement"]},{"Key":"certain response","Fragments":["is"]},{"Key":"to pass,","Fragments":["I"]},{"Key":"hope to","Fragments":["be"]},{"Key":"my skills","Fragments":["in"]},{"Key":"skills in","Fragments":["the"]},{"Key":"future to","Fragments":["where"]},{"Key":"solve an","Fragments":["exercise"]},{"Key":"exercise like","Fragments":["this"]},{"Key":"much less,","Fragments":["and"]},{"Key":"less, and","Fragments":["much"]},{"Key":"and much","Fragments":["more"]},{"Key":"concise, code.","Fragments":["Constructive"]},{"Key":"code. Constructive","Fragments":["criticism"]},{"Key":"Constructive criticism","Fragments":["is"]},{"Key":"ifs given","Fragments":["each"]},{"Key":"given each","Fragments":["passed"]},{"Key":"each passed","Fragments":["condition"]},{"Key":"passed condition","Fragments":["returns."]},{"Key":"see moer","Fragments":["clearly"]},{"Key":"moer clearly","Fragments":["how"]},{"Key":"clearly how","Fragments":["to"]},{"Key":"The `IsAllUpperCase()`","Fragments":["method"]},{"Key":"`IsAllUpperCase()` method","Fragments":["can"]},{"Key":"simple check","Fragments":["that"]},{"Key":"the `.ToUpperInvariant()`","Fragments":["method"]},{"Key":"`.ToUpperInvariant()` method","Fragments":["of"]},{"Key":"of `!IsOnlyNumbers()`","Fragments":["would"]},{"Key":"`!IsOnlyNumbers()` would","Fragments":["be"]},{"Key":"like `HasOneLetter`.","Fragments":["You"]},{"Key":"`HasOneLetter`. You","Fragments":["can"]},{"Key":"some LINQ","Fragments":["for"]},{"Key":"LINQ for","Fragments":["this."]},{"Key":"refactor exception","Fragments":["throwing"]},{"Key":"exception throwing","Fragments":["into"]},{"Key":"throwing into","Fragments":["one"]},{"Key":"You dont","Fragments":["need"]},{"Key":"dictionary here..","Fragments":["think"]},{"Key":"here.. think","Fragments":["about"]},{"Key":"inefficient use","Fragments":["of"]},{"Key":"list especially","Fragments":["removing"]},{"Key":"especially removing","Fragments":["items"]},{"Key":"removing items","Fragments":["O(n)","from"]},{"Key":"out AddRange","Fragments":["and"]},{"Key":"AddRange and","Fragments":["Enumerable.Range"]},{"Key":"and Enumerable.Range","Fragments":["to"]},{"Key":"populate list","Fragments":["-"]},{"Key":"list -","Fragments":["but"]},{"Key":"still inefficient","Fragments":["here"]},{"Key":"inefficient here","Fragments":["since"]},{"Key":"since *the","Fragments":["index"]},{"Key":"*the index","Fragments":["is"]},{"Key":"index is","Fragments":["the"]},{"Key":"the contained","Fragments":["value*."]},{"Key":"contained value*.","Fragments":["What"]},{"Key":"value*. What","Fragments":["about"]},{"Key":"about ````List\u003cbool\u003e````","Fragments":["or"]},{"Key":"````List\u003cbool\u003e```` or","Fragments":["BitArray?"]},{"Key":" Math()","Fragments":["and"]},{"Key":"Math() and","Fragments":["Anagram()"]},{"Key":"and Anagram()","Fragments":["are"]},{"Key":"Anagram() are","Fragments":["good."]},{"Key":"are good.","Fragments":["but"]},{"Key":"good. but","Fragments":["IsAnagram()"]},{"Key":"but IsAnagram()","Fragments":["is"]},{"Key":"IsAnagram() is","Fragments":["too"]},{"Key":"not readable.","Fragments":["Try"]},{"Key":"readable. Try","Fragments":["using"]},{"Key":"Added Euler","Fragments":["version"]},{"Key":"Euler version","Fragments":["\"fast\"."]},{"Key":"version \"fast\".","Fragments":["version"]},{"Key":"\"fast\". version","Fragments":["3"]},{"Key":"version 3","Fragments":["below:-","was"]},{"Key":"version= 0,","Fragments":["time="]},{"Key":" *version=","Fragments":["3,"]},{"Key":"*version= 3,","Fragments":["time="]},{"Key":"3, time=","Fragments":["1072.26*"]},{"Key":" **This","Fragments":["version"]},{"Key":"**This version","Fragments":["3"]},{"Key":"real intention","Fragments":["of"]},{"Key":" (and","Fragments":["note"]},{"Key":"(and note","Fragments":["no"]},{"Key":"note no","Fragments":["floating"]},{"Key":"no floating","Fragments":["point"]},{"Key":"floating point","Fragments":["arithmetic","arithemtic"]},{"Key":"point arithmetic","Fragments":["in"]},{"Key":"arithmetic in","Fragments":["SquareOfSums())"]},{"Key":"iteration changes","Fragments":["the"]},{"Key":"to `long`","Fragments":["to"]},{"Key":"`long` to","Fragments":["make"]},{"Key":"larger numbers.","Fragments":["The"]},{"Key":"The `Enumerable.Range()`","Fragments":["call"]},{"Key":"`Enumerable.Range()` call","Fragments":["is"]},{"Key":"now stored","Fragments":["in"]},{"Key":"a field.","Fragments":["Furthermore,"]},{"Key":"field. Furthermore,","Fragments":["the"]},{"Key":"the `SquareOfSums()`","Fragments":["method"]},{"Key":"`SquareOfSums()` method","Fragments":["now"]},{"Key":"method now","Fragments":["uses"]},{"Key":"uses simple","Fragments":["integer"]},{"Key":"simple integer","Fragments":["arithmetic"]},{"Key":"integer arithmetic","Fragments":["and"]},{"Key":"arithmetic and","Fragments":["not"]},{"Key":"not `Math.pow`.","Fragments":["Lastly,"]},{"Key":"`Math.pow`. Lastly,","Fragments":["the"]},{"Key":"the `DifferenceOfSquares()`","Fragments":["method"]},{"Key":"`DifferenceOfSquares()` method","Fragments":["is"]},{"Key":"now more","Fragments":["efficient"]},{"Key":"efficient by","Fragments":["doing"]},{"Key":"did. There","Fragments":["is"]},{"Key":"no excuse","Fragments":["to"]},{"Key":"excuse to","Fragments":["show"]},{"Key":"a main()","Fragments":["here.","then"]},{"Key":"main() here.","Fragments":["You"]},{"Key":"get nunit","Fragments":["sorted"]},{"Key":"nunit sorted","Fragments":["befoer"]},{"Key":"sorted befoer","Fragments":["doing"]},{"Key":"befoer doing","Fragments":["any"]},{"Key":"any further","Fragments":["exercises,"]},{"Key":"further exercises,","Fragments":["this"]},{"Key":"exercises, this","Fragments":["will"]},{"Key":"will greatly","Fragments":["improve"]},{"Key":"greatly improve","Fragments":["your"]},{"Key":"your speed","Fragments":["at"]},{"Key":"speed at","Fragments":["which"]},{"Key":"do these","Fragments":["exercises"]},{"Key":"and enable","Fragments":["you"]},{"Key":"enable you","Fragments":["to"]},{"Key":"important. (If","Fragments":["you"]},{"Key":"(If you","Fragments":["use"]},{"Key":"VS then","Fragments":["you"]},{"Key":"can download","Fragments":["a"]},{"Key":"download a","Fragments":["solution"]},{"Key":" Failing","Fragments":["that"]},{"Key":"Failing that","Fragments":["you"]},{"Key":"an MSTest","Fragments":["class"]},{"Key":"MSTest class","Fragments":["to"]},{"Key":"to replicate","Fragments":["nunit"]},{"Key":"replicate nunit","Fragments":["here"]},{"Key":"nunit here","Fragments":["(or"]},{"Key":"here (or","Fragments":["even"]},{"Key":"even overrwite","Fragments":["it"]},{"Key":"overrwite it","Fragments":["it"]},{"Key":"be shown","Fragments":["here)."]},{"Key":"shown here).","Fragments":["If"]},{"Key":"here). If","Fragments":["you"]},{"Key":"on persisting","Fragments":["with"]},{"Key":"persisting with","Fragments":["a"]},{"Key":"main() then","Fragments":["put"]},{"Key":"then put","Fragments":["that"]},{"Key":"and separate","Fragments":["file,"]},{"Key":"separate file,","Fragments":["*one"]},{"Key":"file, *one","Fragments":["that"]},{"Key":"*one that","Fragments":["does"]},{"Key":"use floating","Fragments":["point"]},{"Key":"point arithemtic","Fragments":["for"]},{"Key":"arithemtic for","Fragments":["ints"]},{"Key":"for ints","Fragments":["in"]},{"Key":"ints in","Fragments":["SquareOfSums?","the"]},{"Key":" DifferenceOfSquares","Fragments":["is"]},{"Key":"DifferenceOfSquares is","Fragments":["inefficent"]},{"Key":"is inefficent","Fragments":["erquiring"]},{"Key":"inefficent erquiring","Fragments":["two"]},{"Key":"erquiring two","Fragments":["passes."]},{"Key":"two passes.","Fragments":["Various"]},{"Key":"passes. Various","Fragments":["ways"]},{"Key":"Various ways","Fragments":["to"]},{"Key":"refactor Enumerable.Range","Fragments":["to"]},{"Key":"not loop","Fragments":["till"]},{"Key":"loop till","Fragments":["max"]},{"Key":"till max","Fragments":["....but"]},{"Key":"max ....but","Fragments":["only"]},{"Key":"....but only","Fragments":["up"]},{"Key":"only up","Fragments":["to"]},{"Key":"to max_sqrt...","Fragments":["if"]},{"Key":"max_sqrt... if","Fragments":["you"]},{"Key":"that building","Fragments":["a"]},{"Key":"whole array","Fragments":["on"]},{"Key":"on ctor","Fragments":["is"]},{"Key":"ctor is","Fragments":["eager"]},{"Key":"is eager","Fragments":["and"]},{"Key":"eager and","Fragments":["takes"]},{"Key":"and takes","Fragments":["up"]},{"Key":"takes up","Fragments":["storage."]},{"Key":"up storage.","Fragments":["Should"]},{"Key":"storage. Should","Fragments":["be"]},{"Key":"be built","Fragments":["lazily"]},{"Key":"built lazily","Fragments":["using"]},{"Key":"lazily using","Fragments":["a"]},{"Key":"many Lists","Fragments":["being"]},{"Key":"Lists being","Fragments":["created,"]},{"Key":"being created,","Fragments":["avoid"]},{"Key":"created, avoid","Fragments":["removing"]},{"Key":"avoid removing","Fragments":["items"]},{"Key":"items from","Fragments":["list"]},{"Key":"from list","Fragments":["too"]},{"Key":"list too","Fragments":["O(n)"]},{"Key":"too O(n)","Fragments":["op."]},{"Key":"A list","Fragments":["with"]},{"Key":"verses would","Fragments":["be"]},{"Key":"lot easier,","Fragments":["but"]},{"Key":"easier, but","Fragments":["where's"]},{"Key":"but where's","Fragments":["the"]},{"Key":"where's the","Fragments":["fun"]},{"Key":"fun in","Fragments":["that?"]},{"Key":"Two nitpicks.","Fragments":["One"]},{"Key":"nitpicks. One","Fragments":["is"]},{"Key":"One is","Fragments":["style"]},{"Key":"is style","Fragments":["consistency."]},{"Key":"style consistency.","Fragments":["In"]},{"Key":"consistency. In","Fragments":["line"]},{"Key":"you open","Fragments":["your","the"]},{"Key":"open your","Fragments":["brace"]},{"Key":"your brace","Fragments":["on"]},{"Key":"brace on","Fragments":["the","the"]},{"Key":"the conditional;","Fragments":["in"]},{"Key":"conditional; in","Fragments":["the"]},{"Key":"rest you","Fragments":["open"]},{"Key":"the brace","Fragments":["on"]},{"Key":"next line.","Fragments":["Pick"]},{"Key":"line. Pick","Fragments":["one"]},{"Key":"Pick one","Fragments":["way,"]},{"Key":"one way,","Fragments":["it"]},{"Key":"really matter","Fragments":["which,"]},{"Key":"matter which,","Fragments":["and"]},{"Key":"which, and","Fragments":["do"]},{"Key":"way consistently.","Fragments":["Makes"]},{"Key":"consistently. Makes","Fragments":["the"]},{"Key":"Makes the","Fragments":["list"]},{"Key":"list more","Fragments":["aesthetically"]},{"Key":"more aesthetically","Fragments":["pleasing"]},{"Key":"aesthetically pleasing","Fragments":["and"]},{"Key":"pleasing and","Fragments":["also"]},{"Key":"also easier","Fragments":["to"]},{"Key":"Second I","Fragments":["would"]},{"Key":"consider un-nesting","Fragments":["those"]},{"Key":"un-nesting those","Fragments":["ifs"]},{"Key":"those ifs","Fragments":["in"]},{"Key":"some way.","Fragments":["The"]},{"Key":"way. The","Fragments":["conditional"]},{"Key":"conditional on","Fragments":["line"]},{"Key":"13 doesn't","Fragments":["end"]},{"Key":"doesn't end","Fragments":["until"]},{"Key":"end until","Fragments":["line"]},{"Key":"until line","Fragments":["33"]},{"Key":"line 33","Fragments":["which"]},{"Key":"33 which","Fragments":["means"]},{"Key":"means for","Fragments":["something"]},{"Key":"that simple","Fragments":["you"]},{"Key":"trace through","Fragments":["20"]},{"Key":"through 20","Fragments":["lines"]},{"Key":"20 lines","Fragments":["of"]},{"Key":"code. Even","Fragments":["though"]},{"Key":"though it's","Fragments":["mostly"]},{"Key":"it's mostly","Fragments":["braces"]},{"Key":"mostly braces","Fragments":["it's"]},{"Key":"braces it's","Fragments":["possible"]},{"Key":"reduce that","Fragments":["without"]},{"Key":"that without","Fragments":["sacrificing"]},{"Key":"sacrificing the","Fragments":["straightforwardness"]},{"Key":"the straightforwardness","Fragments":["of"]},{"Key":"straightforwardness of","Fragments":["the"]},{"Key":" Truly","Fragments":["a"]},{"Key":"iteration no","Fragments":["longer"]},{"Key":"longer needs","Fragments":["the"]},{"Key":"the _teenths","Fragments":["member"]},{"Key":"_teenths member","Fragments":["variable."]},{"Key":"member variable.","Fragments":[":)"]},{"Key":"very compact!","Fragments":["I"]},{"Key":"compact! I","Fragments":["tried"]},{"Key":"using loops","Fragments":["but"]},{"Key":"loops but","Fragments":["my"]},{"Key":"solution ended","Fragments":["up"]},{"Key":"more verbose:","Fragments":["http://exercism.io/submissions/38531503742a4730b622f5603058ad9c"]},{"Key":" **It","Fragments":["drives"]},{"Key":"**It drives","Fragments":["me"]},{"Key":"drives me","Fragments":["crazy,"]},{"Key":"me crazy,","Fragments":["that**"]},{"Key":"Is throwing","Fragments":["an"]},{"Key":"an error.","Fragments":["I"]},{"Key":"error. I","Fragments":["can"]},{"Key":"any differences","Fragments":["except"]},{"Key":"differences except","Fragments":["the"]},{"Key":"the order,","Fragments":["of"]},{"Key":"order, of","Fragments":["the"]},{"Key":"string ```first```","Fragments":["is"]},{"Key":"```first``` is","Fragments":["longer"]},{"Key":"a think","Fragments":["about"]},{"Key":"with functional","Fragments":["strategies"]},{"Key":"functional strategies","Fragments":["-"]},{"Key":"strategies -","Fragments":["Zip"]},{"Key":"- Zip","Fragments":["is"]},{"Key":"Zip is","Fragments":["a"]},{"Key":"useful function,","Fragments":["as"]},{"Key":"passes everything","Fragments":["except"]},{"Key":"everything except","Fragments":["for"]},{"Key":"are contributing","Fragments":["nothing.","absolutely"]},{"Key":"contributing nothing.","Fragments":["When"]},{"Key":"nothing. When","Fragments":["you"]},{"Key":"you point","Fragments":["me"]},{"Key":"point me","Fragments":["to"]},{"Key":"says I","Fragments":["can't"]},{"Key":"can't post","Fragments":["a"]},{"Key":"post a","Fragments":["main(),"]},{"Key":"a main(),","Fragments":["then"]},{"Key":"main(), then","Fragments":["maybe"]},{"Key":"then maybe","Fragments":["I"]},{"Key":"you more","Fragments":["seriously."]},{"Key":"be under","Fragments":["the"]},{"Key":"same skill","Fragments":["level"]},{"Key":"skill level","Fragments":["that"]},{"Key":"level that","Fragments":["you"]},{"Key":"you are.","Fragments":["I"]},{"Key":"are. I","Fragments":["wrote"]},{"Key":"a main","Fragments":["because","method,"]},{"Key":"main because","Fragments":["I"]},{"Key":"had never","Fragments":["seen"]},{"Key":"seen NUnit","Fragments":["before"]},{"Key":"NUnit before","Fragments":["and"]},{"Key":"before and","Fragments":["just"]},{"Key":"just started","Fragments":["using"]},{"Key":"started using","Fragments":["Exercism"]},{"Key":"using Exercism","Fragments":["a"]},{"Key":"Exercism a","Fragments":["few"]},{"Key":"few days","Fragments":["ago."]},{"Key":"days ago.","Fragments":["This"]},{"Key":"ago. This","Fragments":["was"]},{"Key":"first fetched","Fragments":["exercise."]},{"Key":"your only","Fragments":["reason"]},{"Key":"on nagging","Fragments":["me"]},{"Key":"nagging me","Fragments":["for"]},{"Key":"for writing","Fragments":["a"]},{"Key":"main method,","Fragments":["then"]},{"Key":"method, then","Fragments":["as"]},{"Key":"then as","Fragments":["I"]},{"Key":"said you","Fragments":["are"]},{"Key":"contributing absolutely","Fragments":["nothing,"]},{"Key":"a such","Fragments":["a"]},{"Key":"there had","Fragments":["to"]},{"Key":"it than","Fragments":["the"]},{"Key":"we al","Fragments":["did"]},{"Key":"al did","Fragments":["it"]},{"Key":"it originally.","Fragments":["Dunno"]},{"Key":"originally. Dunno","Fragments":["who"]},{"Key":"Dunno who","Fragments":["designed","designed"]},{"Key":"who designed","Fragments":["these","these"]},{"Key":"designed these","Fragments":["exercises,","40"]},{"Key":"these exercises,","Fragments":["not"]},{"Key":"exercises, not","Fragments":["impressed"]},{"Key":"3 calls","Fragments":["to"]},{"Key":"to RandomChar()","Fragments":["can"]},{"Key":"RandomChar() can","Fragments":["reduce"]},{"Key":"reduce to","Fragments":["1"]},{"Key":"1 with","Fragments":["a"]},{"Key":"problem wiht","Fragments":["the"]},{"Key":"wiht the","Fragments":["orignal"]},{"Key":"the orignal","Fragments":["test,"]},{"Key":"orignal test,","Fragments":["thought"]},{"Key":"test, thought","Fragments":["it"]},{"Key":"been fixed","Fragments":["in"]},{"Key":"fixed in","Fragments":["this"]},{"Key":"the Aggregate","Fragments":["here"]},{"Key":"this using","Fragments":["String.Concat?","Aggregate"]},{"Key":"similar dictionary","Fragments":["approach"]},{"Key":"dictionary approach","Fragments":["originally"]},{"Key":"approach originally","Fragments":["too"]},{"Key":"originally too","Fragments":["but"]},{"Key":"avoid both","Fragments":["of"]},{"Key":"Refactor the","Fragments":["common"]},{"Key":"common parts","Fragments":["of"]},{"Key":"of OfDna()","Fragments":["and"]},{"Key":"OfDna() and","Fragments":["OfRna()"]},{"Key":" Final","Fragments":["version"]},{"Key":"Roster Values","Fragments":["and"]},{"Key":"Values and","Fragments":["Keys"]},{"Key":"and Keys","Fragments":["can"]},{"Key":"Keys can","Fragments":["still"]},{"Key":"be externally","Fragments":["overwritten"]},{"Key":" @norbert","Fragments":["After"]},{"Key":"@norbert After","Fragments":["reading"]},{"Key":"comment, I","Fragments":["came"]},{"Key":"using `DynamicObject`","Fragments":["and"]},{"Key":"`DynamicObject` and","Fragments":["`TryInvokeMember`,"]},{"Key":"and `TryInvokeMember`,","Fragments":["but"]},{"Key":"`TryInvokeMember`, but","Fragments":["to"]},{"Key":"tests must","Fragments":["be"]},{"Key":"use `dynamic`,","Fragments":["so"]},{"Key":"`dynamic`, so","Fragments":["I"]},{"Key":"I'll follow","Fragments":["your"]},{"Key":"follow your","Fragments":["sugestion"]},{"Key":"your sugestion","Fragments":["and"]},{"Key":"sugestion and","Fragments":["use","got"]},{"Key":" Followed","Fragments":["@geovanni"]},{"Key":"Followed @geovanni","Fragments":["sugestion"]},{"Key":"@geovanni sugestion","Fragments":["and"]},{"Key":"correct there","Fragments":["is"]},{"Key":"no rule","Fragments":["not"]},{"Key":"rule not","Fragments":["to"]},{"Key":"include main().","Fragments":["However"]},{"Key":"main(). However","Fragments":["including"]},{"Key":"However including","Fragments":["it"]},{"Key":"including it","Fragments":["in"]},{"Key":"is superflous","Fragments":["to"]},{"Key":"superflous to","Fragments":["the"]},{"Key":"exercise re","Fragments":["readaibility."]},{"Key":"re readaibility.","Fragments":["I"]},{"Key":"readaibility. I","Fragments":["suggested"]},{"Key":"without supplying","Fragments":["it"]},{"Key":"supplying it","Fragments":["in"]},{"Key":"great you","Fragments":["are"]},{"Key":"are here","Fragments":["to"]},{"Key":"to learn,","Fragments":["we"]},{"Key":"learn, we","Fragments":["all"]},{"Key":"all are.","Fragments":["It"]},{"Key":"are. It","Fragments":["is"]},{"Key":"is tremendously","Fragments":["powerful"]},{"Key":"tremendously powerful","Fragments":["to"]},{"Key":"powerful to","Fragments":["discover"]},{"Key":"discover how","Fragments":["useful"]},{"Key":"how useful","Fragments":["unit"]},{"Key":"useful unit","Fragments":["tests"]},{"Key":"and this,","Fragments":["IIMHO,"]},{"Key":"this, IIMHO,","Fragments":["is"]},{"Key":"IIMHO, is","Fragments":["the"]},{"Key":"important lesson","Fragments":["you"]},{"Key":"lesson you","Fragments":["can"]},{"Key":"can gain","Fragments":["right"]},{"Key":"gain right","Fragments":["now."]},{"Key":"your getFiftList()","Fragments":["method"]},{"Key":"getFiftList() method","Fragments":["but"]},{"Key":"method but","Fragments":["you"]},{"Key":"not taking","Fragments":["advantage"]},{"Key":"taking advantage","Fragments":["of"]},{"Key":"of Array","Fragments":["or"]},{"Key":"Array or","Fragments":["List","List"]},{"Key":"or List","Fragments":["methods","methods?"]},{"Key":"List methods","Fragments":["in"]},{"Key":"use reflection","Fragments":["to"]},{"Key":"reflection to","Fragments":["make","make"]},{"Key":"make calling","Fragments":["site"]},{"Key":"calling site","Fragments":["calc","can"]},{"Key":"site calc","Fragments":["calls"]},{"Key":"calc calls","Fragments":["simpler"]},{"Key":"calls simpler","Fragments":["to"]},{"Key":"code. Not","Fragments":["much"]},{"Key":"much point","Fragments":["in"]},{"Key":"exercise otherwise.","Fragments":["(Note"]},{"Key":"otherwise. (Note","Fragments":["I"]},{"Key":"(Note I","Fragments":["just"]},{"Key":"just realised","Fragments":["this"]},{"Key":"realised this","Fragments":["myself)."]},{"Key":" Whilst","Fragments":["I"]},{"Key":"Whilst I","Fragments":["agree"]},{"Key":"with strong","Fragments":["typing"]},{"Key":"strong typing","Fragments":["and"]},{"Key":"of enums","Fragments":["in"]},{"Key":"general over","Fragments":["strings,"]},{"Key":"over strings,","Fragments":["here"]},{"Key":"strings, here","Fragments":["I"]},{"Key":" Verse()","Fragments":["is"]},{"Key":"Verse() is","Fragments":["best"]},{"Key":"Too easy","Fragments":["using"]},{"Key":"easy using","Fragments":["foreach,"]},{"Key":"using foreach,","Fragments":["can"]},{"Key":"foreach, can","Fragments":["you"]},{"Key":"about turning","Fragments":["number"]},{"Key":"turning number","Fragments":["into"]},{"Key":"number into","Fragments":["an"]},{"Key":"an ````IEnumerable\u003cchar\u003e````","Fragments":["to"]},{"Key":"````IEnumerable\u003cchar\u003e```` to","Fragments":["remove"]},{"Key":"remove for","Fragments":["loop?"]},{"Key":" Took","Fragments":["some"]},{"Key":"Took some","Fragments":["suggestions"]},{"Key":"from @mossie","Fragments":["to"]},{"Key":"@mossie to","Fragments":["reduce"]},{"Key":"by inverting","Fragments":["if"]},{"Key":"inverting if","Fragments":["statements."]},{"Key":" Hashing","Fragments":["strings"]},{"Key":"Hashing strings","Fragments":["and"]},{"Key":"the hashes","Fragments":["seems"]},{"Key":"hashes seems","Fragments":["to"]},{"Key":"underlying mechanic","Fragments":["to"]},{"Key":"mechanic to","Fragments":["determine"]},{"Key":"one phrase","Fragments":["is"]},{"Key":"anagram of","Fragments":["another."]},{"Key":"of another.","Fragments":["It's"]},{"Key":"another. It's","Fragments":["just"]},{"Key":"just counting","Fragments":["letters."]},{"Key":"not pleased","Fragments":["with"]},{"Key":"pleased with","Fragments":["the"]},{"Key":"this either,","Fragments":["but"]},{"Key":"other options","Fragments":["I"]},{"Key":"options I","Fragments":["thought"]},{"Key":"of were","Fragments":["more"]},{"Key":"convoluted and","Fragments":["felt"]},{"Key":"and felt","Fragments":["worse"]},{"Key":"felt worse","Fragments":["(multiple"]},{"Key":"worse (multiple","Fragments":["for"]},{"Key":"(multiple for","Fragments":["loops)."]},{"Key":"for loops).","Fragments":["I"]},{"Key":"loops). I","Fragments":["could"]},{"Key":"make ```DictionaryEquals```","Fragments":["easier"]},{"Key":"```DictionaryEquals``` easier","Fragments":["to"]},{"Key":"read by","Fragments":["making","letting"]},{"Key":"it type","Fragments":["specific."]},{"Key":"did retract","Fragments":["some"]},{"Key":"retract some","Fragments":["optimizations"]},{"Key":"some optimizations","Fragments":["that"]},{"Key":"caught myself","Fragments":["thinking"]},{"Key":"myself thinking","Fragments":["about."]},{"Key":"thinking about.","Fragments":["Uses"]},{"Key":"about. Uses","Fragments":["hashes"]},{"Key":"Uses hashes","Fragments":["wasn't"]},{"Key":"hashes wasn't","Fragments":["an"]},{"Key":"wasn't an","Fragments":["optimization"]},{"Key":"optimization choice","Fragments":["so"]},{"Key":"choice so","Fragments":["much"]},{"Key":"a choice","Fragments":["of"]},{"Key":"have stored","Fragments":["the"]},{"Key":"the this.term","Fragments":["in"]},{"Key":"this.term in","Fragments":["lower"]},{"Key":"converted the","Fragments":["full"]},{"Key":"full input","Fragments":["to"]},{"Key":"case at","Fragments":["the"]},{"Key":"of Match().","Fragments":["That"]},{"Key":"Match(). That","Fragments":["way"]},{"Key":"way term.Equals()","Fragments":["can"]},{"Key":"term.Equals() can","Fragments":["leave"]},{"Key":"comparison type","Fragments":["parameter,"]},{"Key":"type parameter,","Fragments":["and"]},{"Key":"parameter, and","Fragments":["the"]},{"Key":"names SortedAndSmallCased*","Fragments":["can"]},{"Key":"SortedAndSmallCased* can","Fragments":["simply"]},{"Key":"simply be","Fragments":["Sorted*."]},{"Key":"be Sorted*.","Fragments":["Might"]},{"Key":"Sorted*. Might","Fragments":["be"]},{"Key":"is other","Fragments":["than"]},{"Key":"are long","Fragments":["which"]},{"Key":"long which","Fragments":["makes"]},{"Key":"Match() very","Fragments":["long."]},{"Key":"you left","Fragments":["out"]},{"Key":"2 converting","Fragments":["the"]},{"Key":"string parameters","Fragments":["to"]},{"Key":" @berneice","Fragments":["I"]},{"Key":"@berneice I","Fragments":["might"]},{"Key":"be mistaken,","Fragments":["but"]},{"Key":"mistaken, but","Fragments":["using"]},{"Key":"using `ToArray()`","Fragments":["on"]},{"Key":"`ToArray()` on","Fragments":["a"]},{"Key":"generator or","Fragments":["object"]},{"Key":"or object","Fragments":["that"]},{"Key":"doesn't implement","Fragments":["`ICollection`"]},{"Key":"implement `ICollection`","Fragments":["(for"]},{"Key":"`ICollection` (for","Fragments":["the"]},{"Key":"the `Count`property)","Fragments":["would"]},{"Key":"`Count`property) would","Fragments":["cause"]},{"Key":"same resizings","Fragments":["and"]},{"Key":"resizings and","Fragments":["allocations,"]},{"Key":"and allocations,","Fragments":["right?"]},{"Key":"Can halve","Fragments":["loop"]},{"Key":"halve loop","Fragments":["count"]},{"Key":"loop count","Fragments":["starting"]},{"Key":"count starting","Fragments":["at"]},{"Key":"just c#/bcl's","Fragments":["built","built"]},{"Key":"c#/bcl's built","Fragments":["in","in"]},{"Key":"in hashing","Fragments":["in","in"]},{"Key":"hashing in","Fragments":["equality","equality"]},{"Key":"in equality","Fragments":["in","in"]},{"Key":"in comparing","Fragments":["strings?","strings?"]},{"Key":"comparing strings?","Fragments":["No"]},{"Key":"strings? No","Fragments":["for"]},{"Key":"loops required","Fragments":["(I"]},{"Key":"required (I","Fragments":["am"]},{"Key":"am totally","Fragments":["with"]},{"Key":"totally with","Fragments":["you"]},{"Key":"on that!)","Fragments":["nor"]},{"Key":"that!) nor","Fragments":["dictionaries."]},{"Key":"FYI my","Fragments":["solution"]},{"Key":"use foreach,","Fragments":["all"]},{"Key":"foreach, all","Fragments":["linq"]},{"Key":"all linq","Fragments":["and"]},{"Key":"linq and","Fragments":["the","in"]},{"Key":"5 lines","Fragments":["of"]},{"Key":"code (ignoring","Fragments":["indentation"]},{"Key":"(ignoring indentation","Fragments":["for"]},{"Key":"indentation for","Fragments":["readability)"]},{"Key":"Lots can","Fragments":["be"]},{"Key":"for starts","Fragments":["character"]},{"Key":"starts character","Fragments":["-'0'"]},{"Key":"character -'0'","Fragments":["is"]},{"Key":"-'0' is","Fragments":["much"]},{"Key":"much quicker","Fragments":["than"]},{"Key":"than GetNumericValuc","Fragments":["and"]},{"Key":"GetNumericValuc and","Fragments":["(int)"]},{"Key":"and (int)","Fragments":["cast"]},{"Key":"(int) cast","Fragments":["and"]},{"Key":"cast and","Fragments":["is"]},{"Key":"standard C#","Fragments":["idiom."]},{"Key":"1 call!","Fragments":[":-)"]},{"Key":"Looks weird","Fragments":["but"]},{"Key":"weird but","Fragments":["it"]},{"Key":"one off.","Fragments":["Lots"]},{"Key":"off. Lots","Fragments":["of"]},{"Key":"us complained.","Fragments":["Unfortunately"]},{"Key":"complained. Unfortunately","Fragments":["to"]},{"Key":"Unfortunately to","Fragments":["update"]},{"Key":"update a","Fragments":["test,"]},{"Key":"test, as","Fragments":["I"]},{"Key":"it, requires","Fragments":["adding"]},{"Key":"requires adding","Fragments":["it"]},{"Key":"go manage","Fragments":["the"]},{"Key":"themselves. Anyway","Fragments":["there"]},{"Key":"Anyway there","Fragments":["are"]},{"Key":"only 40","Fragments":["exercises"]},{"Key":"40 exercises","Fragments":["in","but"]},{"Key":"exercises in","Fragments":["the"]},{"Key":"c# stream","Fragments":["and"]},{"Key":"stream and","Fragments":["this"]},{"Key":"only test","Fragments":["issue","one"]},{"Key":"test issue","Fragments":["IIRC."]},{"Key":" Move","Fragments":["Math.Sqrt(number)"]},{"Key":"Move Math.Sqrt(number)","Fragments":["from"]},{"Key":"Math.Sqrt(number) from","Fragments":["being"]},{"Key":"being recalcualted","Fragments":["in"]},{"Key":"recalcualted in","Fragments":["each"]},{"Key":"Adding to","Fragments":["List","a"]},{"Key":"prime potentially","Fragments":["generates"]},{"Key":"potentially generates","Fragments":["many"]},{"Key":"generates many","Fragments":["List"]},{"Key":"many List","Fragments":["resizing/reallocations,"]},{"Key":"List resizing/reallocations,","Fragments":["can"]},{"Key":"resizing/reallocations, can","Fragments":["you"]},{"Key":"without such","Fragments":["overhead?"]},{"Key":"So, in","Fragments":["the"]},{"Key":"I fetch","Fragments":["the"]},{"Key":"problems again,","Fragments":["will"]},{"Key":"again, will","Fragments":["the"]},{"Key":"will the","Fragments":["test"]},{"Key":"test update","Fragments":["itself?"]},{"Key":"the Math.Pow()","Fragments":["call."]},{"Key":"know, but","Fragments":["you"]},{"Key":"for indexing,","Fragments":["Either","enumerate"]},{"Key":"indexing, Either","Fragments":["foreach"]},{"Key":"Either foreach","Fragments":["or,"]},{"Key":"foreach or,","Fragments":["better"]},{"Key":"or, better","Fragments":["IMHO,"]},{"Key":"better IMHO,","Fragments":["can"]},{"Key":"IMHO, can","Fragments":["do"]},{"Key":"using Aggregate","Fragments":["in","(actually"]},{"Key":"Aggregate in","Fragments":["1"]},{"Key":"for -\u003e","Fragments":[".Zip()"]},{"Key":"are one","Fragments":["of"]},{"Key":"the few","Fragments":["like","exercises"]},{"Key":"few like","Fragments":["me"]},{"Key":"like me","Fragments":["who"]},{"Key":"me who","Fragments":["kept"]},{"Key":"who kept","Fragments":["to"]},{"Key":"kept to","Fragments":["the"]},{"Key":"the cahllenge","Fragments":["rather"]},{"Key":"cahllenge rather","Fragments":["than"]},{"Key":"than used","Fragments":["the"]},{"Key":" Fascinating","Fragments":["solution"]},{"Key":" CheckSum","Fragments":["foreach"]},{"Key":"CheckSum foreach","Fragments":["-\u003e"]},{"Key":"foreach -\u003e","Fragments":[".Sum()"]},{"Key":" Create","Fragments":["if"]},{"Key":"Create if","Fragments":["-\u003e"]},{"Key":"if -\u003e","Fragments":["terniary"]},{"Key":"-\u003e terniary","Fragments":["operator"]},{"Key":" (then","Fragments":["we"]},{"Key":"(then we","Fragments":["can"]},{"Key":"can revisit","Fragments":["Addends)"]},{"Key":"Don't need","Fragments":["the"]},{"Key":"else given","Fragments":["it"]},{"Key":"looks ok...it's","Fragments":["very"]},{"Key":"ok...it's very","Fragments":["compact!"]},{"Key":" FizzBuzz","Fragments":["anyone?"]},{"Key":"misread this","Fragments":["one"]},{"Key":"the sieve","Fragments":["problem."]},{"Key":"A generator","Fragments":["is"]},{"Key":"generator is","Fragments":["what"]},{"Key":"suggest here","Fragments":["making"]},{"Key":"here making","Fragments":["this"]},{"Key":"method be","Fragments":["called"]},{"Key":"is becuase","Fragments":["I"]},{"Key":"becuase I","Fragments":["I"]},{"Key":"I I","Fragments":["see"]},{"Key":"new List()","Fragments":["(or"]},{"Key":"List() (or","Fragments":["any"]},{"Key":" end","Fragments":["method()"]},{"Key":"clearer as","Fragments":["to"]},{"Key":"effects especially","Fragments":["since"]},{"Key":"site can","Fragments":["decide"]},{"Key":"decide how","Fragments":["many"]},{"Key":"% factor","Fragments":["=="]},{"Key":"factor ==","Fragments":["0)"]},{"Key":"0) can","Fragments":["be"]},{"Key":"while and","Fragments":["then"]},{"Key":"that no-one","Fragments":["else"]},{"Key":"no-one else","Fragments":["did"]},{"Key":"else did","Fragments":["was"]},{"Key":"did was","Fragments":["factor"]},{"Key":"was factor","Fragments":["out"]},{"Key":"out 'i','a','o'","Fragments":["in"]},{"Key":"'i','a','o' in","Fragments":["Pl*ng..."]},{"Key":" @sierra","Fragments":["I"]},{"Key":"@sierra I","Fragments":["saw"]},{"Key":"saw that,","Fragments":["nice"]},{"Key":"that, nice","Fragments":["touch."]},{"Key":"trying not","Fragments":["to"]},{"Key":"use Wikipedia","Fragments":[":)"]},{"Key":"Actually, in","Fragments":["this"]},{"Key":"had completely","Fragments":["forgotten"]},{"Key":"completely forgotten","Fragments":["about"]},{"Key":"that trick,","Fragments":["so"]},{"Key":"trick, so","Fragments":["I"]},{"Key":"from scratch.","Fragments":["Since"]},{"Key":"scratch. Since","Fragments":["I'm"]},{"Key":"Since I'm","Fragments":["trying"]},{"Key":"trying a","Fragments":["more"]},{"Key":"functional approach","Fragments":["to"]},{"Key":"this exercises,","Fragments":["that's"]},{"Key":"exercises, that's","Fragments":["what"]},{"Key":"thought from","Fragments":["the"]},{"Key":"the leaptest.cs","Fragments":["it"]},{"Key":"leaptest.cs it","Fragments":["is"]},{"Key":"is passing","Fragments":["an"]},{"Key":"passing an","Fragments":["INT"]},{"Key":"an INT","Fragments":["param"]},{"Key":"INT param","Fragments":["so"]},{"Key":"param so","Fragments":["I"]},{"Key":"I casted","Fragments":["arg"]},{"Key":"casted arg","Fragments":["to"]},{"Key":"arg to","Fragments":["a"]},{"Key":"double within","Fragments":["constructor,"]},{"Key":"within constructor,","Fragments":["I"]},{"Key":"that habit","Fragments":["from"]},{"Key":"habit from","Fragments":["pawn"]},{"Key":"from pawn","Fragments":["but"]},{"Key":"pawn but","Fragments":["it"]},{"Key":"doesn't appear","Fragments":["to","to","necessary","to","to","to"]},{"Key":"a simpler/shorter","Fragments":["way"]},{"Key":"simpler/shorter way","Fragments":["of"]},{"Key":"implementing this","Fragments":["logic"]},{"Key":"this logic","Fragments":["but"]},{"Key":"any right","Fragments":["now."]},{"Key":"Thanks! The","Fragments":["problem"]},{"Key":"being clever","Fragments":["is"]},{"Key":"clever is","Fragments":["sometimes"]},{"Key":"is sometimes","Fragments":["that"]},{"Key":"sometimes that","Fragments":["is"]},{"Key":"is can","Fragments":["easily"]},{"Key":"easily become","Fragments":["unreadable"]},{"Key":"become unreadable","Fragments":[":)"]},{"Key":"unreadable :)","Fragments":["I"]},{"Key":"to circumvent","Fragments":["this"]},{"Key":"circumvent this","Fragments":["by"]},{"Key":"using name","Fragments":["capture"]},{"Key":"name capture","Fragments":["groups."]},{"Key":"Like them","Fragments":["(named"]},{"Key":"them (named","Fragments":["capture"]},{"Key":"(named capture","Fragments":["groups)"]},{"Key":"capture groups)","Fragments":["they"]},{"Key":"groups) they","Fragments":["do"]},{"Key":"this regex","Fragments":["intelligible"]},{"Key":"regex intelligible","Fragments":["to"]},{"Key":"intelligible to","Fragments":["us"]},{"Key":"to us","Fragments":["mortals"]},{"Key":"the MSDN","Fragments":["docs,"]},{"Key":"MSDN docs,","Fragments":["and"]},{"Key":"docs, and","Fragments":["I"]},{"Key":"use String.Concat()...","Fragments":["could"]},{"Key":"String.Concat()... could","Fragments":["you"]},{"Key":"please enlighten","Fragments":["me?"]},{"Key":"foreach loop...","Fragments":["how"]},{"Key":"loop... how","Fragments":["would"]},{"Key":"I know.","Fragments":["I"]},{"Key":"a dumb","Fragments":["problem"]},{"Key":"dumb problem","Fragments":["so"]},{"Key":"problem so","Fragments":["I"]},{"Key":"bother making","Fragments":["a"]},{"Key":"a properly","Fragments":["organized"]},{"Key":"properly organized","Fragments":["solution."]},{"Key":"organized solution.","Fragments":["Maybe"]},{"Key":"solution. Maybe","Fragments":["I'll"]},{"Key":"Maybe I'll","Fragments":["fix"]},{"Key":"I'll fix","Fragments":["it"]},{"Key":"fix it","Fragments":["in"]},{"Key":" Dividing","Fragments":["a"]},{"Key":"Dividing a","Fragments":["string"]},{"Key":"string into","Fragments":["words"]},{"Key":"into words","Fragments":["as"]},{"Key":"words as","Fragments":["separated"]},{"Key":"as separated","Fragments":["by"]},{"Key":"by spaces","Fragments":["can"]},{"Key":"spaces can","Fragments":["also"]},{"Key":"done through","Fragments":["the"]},{"Key":"not pretty,","Fragments":["but"]},{"Key":"pretty, but","Fragments":["I"]},{"Key":"just keen","Fragments":["to"]},{"Key":"keen to","Fragments":["get"]},{"Key":"get something","Fragments":["working"]},{"Key":"something working","Fragments":["so"]},{"Key":"working so","Fragments":["I"]},{"Key":"could submit","Fragments":["it"]},{"Key":"submit it","Fragments":["and"]},{"Key":"others had","Fragments":["done."]},{"Key":"had done.","Fragments":["The"]},{"Key":"The hardest","Fragments":["one"]},{"Key":"hardest one","Fragments":["so"]},{"Key":"far I","Fragments":["think."]},{"Key":" something","Fragments":["like"]},{"Key":" Aggregate","Fragments":["is"]},{"Key":"Aggregate is","Fragments":["better"]},{"Key":"with **StringBuilder**","Fragments":["accumulator"]},{"Key":"**StringBuilder** accumulator","Fragments":["for"]},{"Key":"accumulator for","Fragments":["longer"]},{"Key":"I follow,","Fragments":["can"]},{"Key":"follow, can","Fragments":["you"]},{"Key":"might improve","Fragments":["my"]},{"Key":"methods using","Fragments":["Array"]},{"Key":"using Array","Fragments":["or"]},{"Key":"And note","Fragments":["ForImpl"]},{"Key":"note ForImpl","Fragments":["is"]},{"Key":"ForImpl is","Fragments":["a"]},{"Key":"In TrimWord,","Fragments":["what"]},{"Key":"TrimWord, what","Fragments":["is"]},{"Key":"with .Replace()","Fragments":["and,"]},{"Key":".Replace() and,","Fragments":["unlike"]},{"Key":"and, unlike","Fragments":["the"]},{"Key":"unlike the","Fragments":["use"]},{"Key":"of TrimWord(),","Fragments":["you"]},{"Key":"TrimWord(), you","Fragments":["can"]},{"Key":"once too.","Fragments":["It"]},{"Key":"also much","Fragments":["simpler"]},{"Key":"simpler so","Fragments":["more"]},{"Key":"so more","Fragments":["bug"]},{"Key":"more bug","Fragments":["proof"]},{"Key":"bug proof","Fragments":["and"]},{"Key":"you completely","Fragments":["at"]},{"Key":"completely at","Fragments":["first."]},{"Key":"at first.","Fragments":["No"]},{"Key":"first. No","Fragments":["native"]},{"Key":"No native","Fragments":["english"]},{"Key":"native english","Fragments":["speaker"]},{"Key":"english speaker","Fragments":["here."]},{"Key":"speaker here.","Fragments":["But"]},{"Key":"here. But","Fragments":["then"]},{"Key":"a glimpse","Fragments":["at"]},{"Key":"glimpse at","Fragments":["your"]},{"Key":"feedback. It","Fragments":["def."]},{"Key":"It def.","Fragments":["looks"]},{"Key":"def. looks","Fragments":["a"]},{"Key":"cleaner in","Fragments":["your"]},{"Key":"it. Much","Fragments":["appreciated."]},{"Key":"out asap.","Fragments":["The"]},{"Key":"asap. The","Fragments":["only"]},{"Key":"have with","Fragments":["the"]},{"Key":"far is","Fragments":["-"]},{"Key":"is -","Fragments":["I"]},{"Key":"think -","Fragments":["if"]},{"Key":"- if","Fragments":["I"]},{"Key":" input.Replace(\"","Fragments":["'\",\""]},{"Key":"input.Replace(\" '\",\"","Fragments":["\");"]},{"Key":" it","Fragments":["will"]},{"Key":"only eliminate","Fragments":["one"]},{"Key":"eliminate one","Fragments":["'"]},{"Key":"one '","Fragments":["at"]},{"Key":"' at","Fragments":["the"]},{"Key":"word. So","Fragments":["it"]},{"Key":"would account","Fragments":["for"]},{"Key":"for \u003e\u003etock'\u003c\u003c","Fragments":["but"]},{"Key":"\u003e\u003etock'\u003c\u003c but","Fragments":["not"]},{"Key":"for \u003e\u003etock''\u003c\u003c","Fragments":["(two"]},{"Key":"\u003e\u003etock''\u003c\u003c (two","Fragments":["or"]},{"Key":"(two or","Fragments":["more"]},{"Key":"more '","Fragments":[")"]},{"Key":"that correct","Fragments":["or"]},{"Key":"correct or","Fragments":["would"]},{"Key":"or would","Fragments":["it"]},{"Key":"Oh! OK...","Fragments":["Thanks!"]},{"Key":"OK... Thanks!","Fragments":["I'll"]},{"Key":" See","Fragments":["question","my"]},{"Key":"See question","Fragments":["at"]},{"Key":"question at","Fragments":["the"]},{"Key":"lines probably","Fragments":["wouldn't"]},{"Key":"wouldn't improve","Fragments":["clarity"]},{"Key":"improve clarity","Fragments":["enough"]},{"Key":"clarity enough","Fragments":["to"]},{"Key":" \u003eWhy","Fragments":["not"]},{"Key":"\u003eWhy not","Fragments":["just"]},{"Key":"link I","Fragments":["can"]},{"Key":"read to","Fragments":["clarify"]},{"Key":"nice linq","Fragments":["implementation"]},{"Key":"linq implementation","Fragments":["of"]},{"Key":"of sort","Fragments":["\u0026"]},{"Key":"sort \u0026","Fragments":["compare"]},{"Key":"\u0026 compare","Fragments":["over"]},{"Key":"compare over","Fragments":["there."]},{"Key":"over there.","Fragments":[":)"]},{"Key":"one. The","Fragments":["two"]},{"Key":"to RandomChar","Fragments":["are","(though"]},{"Key":"RandomChar are","Fragments":["nicely"]},{"Key":"are nicely","Fragments":["hidden"]},{"Key":"nicely hidden","Fragments":["inside"]},{"Key":"hidden inside","Fragments":["the"]},{"Key":"the GenerateName","Fragments":["function."]},{"Key":"GenerateName function.","Fragments":["To"]},{"Key":"To convert","Fragments":["that"]},{"Key":"convert that","Fragments":["into"]},{"Key":"call would","Fragments":["require"]},{"Key":"1) Extending","Fragments":["the"]},{"Key":"Extending the","Fragments":["RandomChar"]},{"Key":"the RandomChar","Fragments":["function"]},{"Key":"RandomChar function","Fragments":["to"]},{"Key":"a length","Fragments":["argument,","argument"]},{"Key":"length argument,","Fragments":["which"]},{"Key":"argument, which","Fragments":["would"]},{"Key":"would dirty","Fragments":["up"]},{"Key":"dirty up","Fragments":["that"]},{"Key":"that function;","Fragments":["or"]},{"Key":"2) Creating","Fragments":["a"]},{"Key":"a wrapper","Fragments":["function"]},{"Key":"wrapper function","Fragments":["for"]},{"Key":"for RandomChar","Fragments":["that"]},{"Key":"RandomChar that","Fragments":["takes"]},{"Key":"length argument","Fragments":["and"]},{"Key":"makes multiple","Fragments":["calls"]},{"Key":"RandomChar (though","Fragments":["now"]},{"Key":"(though now","Fragments":["in"]},{"Key":"now in","Fragments":["a"]},{"Key":" Alternatively,","Fragments":["I"]},{"Key":"Alternatively, I","Fragments":["could"]},{"Key":"change GenerateName","Fragments":["like"]},{"Key":"GenerateName like","Fragments":["this:"]},{"Key":"\u003c 2;","Fragments":["i++)"]},{"Key":"2; i++)","Fragments":["{"]},{"Key":"i++) {","Fragments":["builder.Append(RandomChar());"]},{"Key":"{ builder.Append(RandomChar());","Fragments":["}```"]},{"Key":"Which, properly","Fragments":["formatted,"]},{"Key":"properly formatted,","Fragments":["is"]},{"Key":"formatted, is","Fragments":["3"]},{"Key":"is 3","Fragments":["lines"]},{"Key":"code, replacing","Fragments":["the"]},{"Key":"think, applying","Fragments":["the"]},{"Key":"applying the","Fragments":["YAGNI"]},{"Key":"the YAGNI","Fragments":["principle,"]},{"Key":"YAGNI principle,","Fragments":["that"]},{"Key":"principle, that","Fragments":["extending"]},{"Key":"that extending","Fragments":["the"]},{"Key":"you describe","Fragments":["would"]},{"Key":"describe would","Fragments":["make"]},{"Key":"tried for","Fragments":["a"]},{"Key":"use regex,","Fragments":["but"]},{"Key":"regex, but","Fragments":["the"]},{"Key":"apostrophes got","Fragments":["me."]},{"Key":"using GropuBy()","Fragments":["too"]},{"Key":"Nice that","Fragments":["you"]},{"Key":"1 linq","Fragments":["expression."]},{"Key":"use TrimFirst()","Fragments":["and"]},{"Key":"TrimFirst() and","Fragments":["TrimLast()"]},{"Key":"and TrimLast()","Fragments":["to"]},{"Key":"TrimLast() to","Fragments":["simplify"]},{"Key":"Tuple -","Fragments":["a"]},{"Key":"stack -","Fragments":["rather"]},{"Key":"- rather","Fragments":["than"]},{"Key":"than KeyValuePair()","Fragments":["object"]},{"Key":"KeyValuePair() object","Fragments":["on"]},{"Key":"object on","Fragments":["heap"]},{"Key":"on heap","Fragments":["involving"]},{"Key":"heap involving","Fragments":["GC"]},{"Key":"involving GC","Fragments":["in"]},{"Key":"GC in","Fragments":["the"]},{"Key":"long solution.","Fragments":["Sure"]},{"Key":"solution. Sure","Fragments":["you"]},{"Key":"Sure you","Fragments":["can"]},{"Key":"loops making","Fragments":["it"]},{"Key":"not lookup","Fragments":["a"]},{"Key":"lookup a","Fragments":["dictionary"]},{"Key":"dictionary keyed","Fragments":["by","on"]},{"Key":"keyed by","Fragments":["arabic"]},{"Key":"by arabic","Fragments":["numeral?"]},{"Key":"Dont like","Fragments":["the"]},{"Key":"the ref","Fragments":["number"]},{"Key":"ref number","Fragments":["in"]},{"Key":"in Select,","Fragments":["this"]},{"Key":"Select, this","Fragments":["is"]},{"Key":"effect which","Fragments":["should"]},{"Key":"happen in","Fragments":["Select.."]},{"Key":"in Select..","Fragments":["Can"]},{"Key":"Select.. Can","Fragments":["do"]},{"Key":"Can do","Fragments":["this"]},{"Key":"without side","Fragments":["effect"]},{"Key":"effect in","Fragments":["Aggregate?"]},{"Key":"Agree about","Fragments":["the"]},{"Key":"lambda. Just","Fragments":["wanted"]},{"Key":"Just wanted","Fragments":["to"]},{"Key":"to discuss","Fragments":["the"]},{"Key":"rest before","Fragments":["breaking"]},{"Key":"before breaking","Fragments":["the"]},{"Key":"the thread","Fragments":["with"]},{"Key":"thread with","Fragments":["a"]},{"Key":"a Enum","Fragments":["with"]},{"Key":"Enum with","Fragments":["the"]},{"Key":"the FlagAttribute,","Fragments":["but"]},{"Key":"FlagAttribute, but","Fragments":["since"]},{"Key":"use strings","Fragments":["I"]},{"Key":"strings I","Fragments":["went"]},{"Key":" Playing","Fragments":["about"]},{"Key":"Playing about","Fragments":["with"]},{"Key":" Readability","Fragments":["is"]},{"Key":"Readability is","Fragments":["really"]},{"Key":"really in","Fragments":["the"]},{"Key":"eye of","Fragments":["the"]},{"Key":"the beholder.","Fragments":["When"]},{"Key":"beholder. When","Fragments":["I"]},{"Key":"my submission,","Fragments":["I"]},{"Key":"submission, I","Fragments":["couldn't"]},{"Key":"couldn't care","Fragments":["less"]},{"Key":"care less","Fragments":["what"]},{"Key":"less what","Fragments":["the"]},{"Key":"letters mean,","Fragments":["only"]},{"Key":"mean, only","Fragments":["that"]},{"Key":"I process","Fragments":["the"]},{"Key":"valid ones.","Fragments":["With"]},{"Key":"ones. With","Fragments":["that"]},{"Key":"that mindset,","Fragments":["I"]},{"Key":"mindset, I","Fragments":["find"]},{"Key":"extra constants","Fragments":["noisy."]},{"Key":"call `ToDictionary()`","Fragments":["immediately"]},{"Key":"`ToDictionary()` immediately","Fragments":["after"]},{"Key":"immediately after","Fragments":["`GroupBy()`."]},{"Key":"after `GroupBy()`.","Fragments":["Not"]},{"Key":"`GroupBy()`. Not","Fragments":["sure"]},{"Key":"readable, though.","Fragments":["But"]},{"Key":"though. But","Fragments":["separating"]},{"Key":"But separating","Fragments":["Linq-methods"]},{"Key":"separating Linq-methods","Fragments":["on"]},{"Key":"Linq-methods on","Fragments":["different"]},{"Key":" _counts","Fragments":["=","="]},{"Key":"_counts =","Fragments":["sequence","sequence"]},{"Key":" .GroupBy(x","Fragments":["=\u003e","=\u003e"]},{"Key":".GroupBy(x =\u003e","Fragments":["x)","x)"]},{"Key":" .Select(group","Fragments":["=\u003e"]},{"Key":".Select(group =\u003e","Fragments":["new"]},{"Key":"{ Tag","Fragments":["="]},{"Key":"Tag =","Fragments":["group.Key,"]},{"Key":"= group.Key,","Fragments":["Count"]},{"Key":"group.Key, Count","Fragments":["="]},{"Key":"= group.Count()","Fragments":["})"]},{"Key":" .ToDictionary(x","Fragments":["=\u003e"]},{"Key":".ToDictionary(x =\u003e","Fragments":["x.Tag,"]},{"Key":"=\u003e x.Tag,","Fragments":["x"]},{"Key":"x.Tag, x","Fragments":["=\u003e"]},{"Key":"x =\u003e","Fragments":["x.Count);"]},{"Key":" .ToDictionary(g","Fragments":["=\u003e"]},{"Key":".ToDictionary(g =\u003e","Fragments":["g.Key,"]},{"Key":"=\u003e g.Key,","Fragments":["g"]},{"Key":"g.Key, g","Fragments":["=\u003e"]},{"Key":"several one-liner","Fragments":["blocks"]},{"Key":"one-liner blocks","Fragments":["without"]},{"Key":"blocks without","Fragments":["curly"]},{"Key":"without curly","Fragments":["braces."]},{"Key":"braces. In","Fragments":["my"]},{"Key":"opinion, if","Fragments":["you"]},{"Key":"break a","Fragments":["one-liner"]},{"Key":"one-liner over","Fragments":["several"]},{"Key":"several lines,","Fragments":["you"]},{"Key":"lines, you","Fragments":["should"]},{"Key":"to also","Fragments":["add"]},{"Key":"the braces.","Fragments":["It"]},{"Key":"braces. It","Fragments":["is"]},{"Key":"block later","Fragments":["on"]},{"Key":"on while","Fragments":["forgetting"]},{"Key":"while forgetting","Fragments":["to"]},{"Key":"So favor","Fragments":["this:"]},{"Key":" if(!NucleotideCounts.ContainsKey(nucleotide))","Fragments":["return"]},{"Key":"if(!NucleotideCounts.ContainsKey(nucleotide)) return","Fragments":["0;"]},{"Key":" over","Fragments":["this:"]},{"Key":"first constructor,","Fragments":["`public"]},{"Key":"constructor, `public","Fragments":["DNA(char"]},{"Key":"`public DNA(char","Fragments":["dna)`,"]},{"Key":"DNA(char dna)`,","Fragments":["do"]},{"Key":"dna)`, do","Fragments":["you"]},{"Key":"+1 to","Fragments":["martinfreedman."]},{"Key":"to martinfreedman.","Fragments":["Updated"]},{"Key":"martinfreedman. Updated","Fragments":["to"]},{"Key":"just invert","Fragments":["the","bool"]},{"Key":"bool instead","Fragments":["of"]},{"Key":"a turniary","Fragments":["for"]},{"Key":"turniary for","Fragments":["the"]},{"Key":"Surely there's","Fragments":["a"]},{"Key":"express this","Fragments":["in"]},{"Key":"linq expression","Fragments":["by"]},{"Key":"expression by","Fragments":["preparing"]},{"Key":"by preparing","Fragments":["the"]},{"Key":"preparing the","Fragments":["input"]},{"Key":"clean tokens","Fragments":["with"]},{"Key":"tokens with","Fragments":["a"]},{"Key":"loop first","Fragments":["then"]},{"Key":"the group","Fragments":["\u0026"]},{"Key":"group \u0026","Fragments":["count."]},{"Key":"\u0026 count.","Fragments":["I"]},{"Key":"count. I","Fragments":["could"]},{"Key":"have crafted","Fragments":["a"]},{"Key":"crafted a","Fragments":["regex"]},{"Key":"regex but","Fragments":["it"]},{"Key":"have felt","Fragments":["a"]},{"Key":"like coding","Fragments":["specifically"]},{"Key":"coding specifically","Fragments":["to"]},{"Key":"specifically to","Fragments":["the"]},{"Key":"tests (too","Fragments":["focused"]},{"Key":"(too focused","Fragments":["and"]},{"Key":"focused and","Fragments":["brittle)"]},{"Key":"and brittle)","Fragments":["plus"]},{"Key":"brittle) plus","Fragments":["regex"]},{"Key":"plus regex","Fragments":["syntax"]},{"Key":"regex syntax","Fragments":["takes"]},{"Key":"syntax takes","Fragments":["a"]},{"Key":"mental unpacking","Fragments":["for"]},{"Key":"unpacking for","Fragments":["anything"]},{"Key":"anything more","Fragments":["than"]},{"Key":"than slightly","Fragments":["complex."]},{"Key":"if some","Fragments":["smart"]},{"Key":"some smart","Fragments":["alec"]},{"Key":"smart alec","Fragments":["feeds"]},{"Key":"alec feeds","Fragments":["proper"]},{"Key":"feeds proper","Fragments":["\""]},{"Key":"proper \"","Fragments":["\""]},{"Key":"\" quotes","Fragments":["into"]},{"Key":"quotes into","Fragments":["this"]},{"Key":"fail miserably","Fragments":["anyway."]},{"Key":"be \"Year\"","Fragments":["and"]},{"Key":"\"Year\" and","Fragments":["the"]},{"Key":"called \"IsLeap\".","Fragments":["Running"]},{"Key":"\"IsLeap\". Running","Fragments":["the"]},{"Key":"Running the","Fragments":["file"]},{"Key":"file as","Fragments":["is"]},{"Key":"local it","Fragments":["doesn't"]},{"Key":"the testsuite","Fragments":["or"]},{"Key":"testsuite or","Fragments":["compile"]},{"Key":"or compile","Fragments":["correctly."]},{"Key":"The leap","Fragments":["value"]},{"Key":"leap value","Fragments":["appears"]},{"Key":"value appears","Fragments":["to"]},{"Key":"declared twice.","Fragments":["Once"]},{"Key":"twice. Once","Fragments":["as"]},{"Key":"Once as","Fragments":["a"]},{"Key":"a returnMessage","Fragments":["which"]},{"Key":"returnMessage which","Fragments":["doesn't"]},{"Key":"which doesn't","Fragments":["appear","appear"]},{"Key":"once as","Fragments":["a"]},{"Key":"local bool.","Fragments":["That"]},{"Key":"bool. That","Fragments":["local"]},{"Key":"That local","Fragments":["bool"]},{"Key":"local bool","Fragments":["should"]},{"Key":"bool should","Fragments":["be"]},{"Key":"getting returned","Fragments":["at"]},{"Key":"returned at","Fragments":["the"]},{"Key":"isLeap method,","Fragments":["but"]},{"Key":"be and","Fragments":["that"]},{"Key":"causing compile","Fragments":["time"]},{"Key":"time issues.","Fragments":["To"]},{"Key":"issues. To","Fragments":["avoid"]},{"Key":"avoid boxing","Fragments":["or"]},{"Key":"boxing or","Fragments":["unboxing"]},{"Key":"or unboxing","Fragments":["of"]},{"Key":"unboxing of","Fragments":["the"]},{"Key":"variable value","Fragments":["I"]},{"Key":"also either","Fragments":["make"]},{"Key":"either make","Fragments":["leap"]},{"Key":"make leap","Fragments":["a"]},{"Key":"leap a","Fragments":["Boolean"]},{"Key":"value or","Fragments":["make"]},{"Key":"behind determining","Fragments":["the"]},{"Key":"year doesn't","Fragments":["appear"]},{"Key":"correct either.","Fragments":["It"]},{"Key":"goes into","Fragments":["4,","400."]},{"Key":"into 4,","Fragments":["100"]},{"Key":"4, 100","Fragments":["and"]},{"Key":"400. So","Fragments":["if"]},{"Key":"cases then","Fragments":["it"]},{"Key":"year. Here","Fragments":["if","it"]},{"Key":"Here if","Fragments":["it"]},{"Key":"it evenly","Fragments":["divides"]},{"Key":"evenly divides","Fragments":["into"]},{"Key":"divides into","Fragments":["100"]},{"Key":"into 100","Fragments":["it"]},{"Key":"automatically determined","Fragments":["to"]},{"Key":"determined to","Fragments":["not"]},{"Key":"year even","Fragments":["if"]},{"Key":"into 400.","Fragments":["This"]},{"Key":"400. This","Fragments":["fails"]},{"Key":"This fails","Fragments":["the"]},{"Key":"test laid","Fragments":["out"]},{"Key":"Very short","Fragments":["and"]},{"Key":"but inefficient","Fragments":["using"]},{"Key":"inefficient using","Fragments":["strings,"]},{"Key":"using strings,","Fragments":["string.concat"]},{"Key":"strings, string.concat","Fragments":["and"]},{"Key":"string.concat and","Fragments":["string.join"]},{"Key":"loops not","Fragments":["foreach"]},{"Key":"not foreach","Fragments":["loops,"]},{"Key":"loops, there","Fragments":["no"]},{"Key":"there no","Fragments":["need"]},{"Key":"indexing, enumerate","Fragments":["over"]},{"Key":"over these","Fragments":["lists"]},{"Key":"these lists","Fragments":["instead."]},{"Key":"previous iteration.","Fragments":["I"]},{"Key":"I now,","Fragments":["having"]},{"Key":"now, having","Fragments":["discovered"]},{"Key":"having discovered","Fragments":["String.Concat"]},{"Key":"discovered String.Concat","Fragments":["on"]},{"Key":"String.Concat on","Fragments":["this"]},{"Key":"site (I","Fragments":["used"]},{"Key":"(I used","Fragments":["to"]},{"Key":"use String.Join(\"\",...)),","Fragments":["I"]},{"Key":"String.Join(\"\",...)), I","Fragments":["realise"]},{"Key":"I realise","Fragments":["some"]},{"Key":"realise some","Fragments":["of"]},{"Key":"its issues","Fragments":["although"]},{"Key":"issues although","Fragments":["it"]},{"Key":"useful quick","Fragments":["too"]},{"Key":"quick too","Fragments":["to"]},{"Key":"too to","Fragments":["use."]},{"Key":"to use.","Fragments":["Not"]},{"Key":"use. Not","Fragments":["efficient"]},{"Key":"Not efficient","Fragments":["like"]},{"Key":"efficient like","Fragments":["StringBuilder"]},{"Key":"like StringBuilder","Fragments":["and"]},{"Key":"StringBuilder and","Fragments":["not"]},{"Key":"is such","Fragments":["a"]},{"Key":"trick here","Fragments":["was"]},{"Key":" http://msdn.microsoft.com/en-us/library/ms132151(v=vs.110).aspx","Fragments":["whicb"]},{"Key":"http://msdn.microsoft.com/en-us/library/ms132151(v=vs.110).aspx whicb","Fragments":["you"]},{"Key":"whicb you","Fragments":["use"]},{"Key":"use here","Fragments":["but","looks"]},{"Key":"built you","Fragments":["don't"]},{"Key":"need customisation","Fragments":["at"]},{"Key":"customisation at","Fragments":["all"]},{"Key":"is tha","Fragments":["a"]},{"Key":"tha a","Fragments":["string"]},{"Key":"is enumerated","Fragments":["as"]},{"Key":"enumerated as","Fragments":["chars"]},{"Key":"as chars","Fragments":["in"]},{"Key":"in linq","Fragments":["and"]},{"Key":" RandomChar","Fragments":["could"]},{"Key":"RandomChar could","Fragments":["be"]},{"Key":"generator just","Fragments":["one"]},{"Key":"extra line","Fragments":["and"]},{"Key":"one off","Fragments":["in"]},{"Key":"in GenerateName","Fragments":["-"]},{"Key":"GenerateName -","Fragments":["so"]},{"Key":"so net","Fragments":["the"]},{"Key":"net the","Fragments":["same"]},{"Key":"might \"dirty","Fragments":["up\""]},{"Key":"\"dirty up\"","Fragments":["the"]},{"Key":"up\" the","Fragments":["function"]},{"Key":"but negligably","Fragments":["and"]},{"Key":"negligably and","Fragments":["it"]},{"Key":"with RandomInt","Fragments":["in"]},{"Key":"RandomInt in","Fragments":["producing"]},{"Key":"in producing","Fragments":["more"]},{"Key":"producing more","Fragments":["than"]},{"Key":"and wiht","Fragments":["one"]},{"Key":"wiht one","Fragments":["call"]},{"Key":"to each.","Fragments":["it"]},{"Key":"each. it","Fragments":["would"]},{"Key":"also \"clean","Fragments":["up\""]},{"Key":"\"clean up\"","Fragments":["GenerateName"]},{"Key":"up\" GenerateName","Fragments":["by"]},{"Key":"GenerateName by","Fragments":["one"]},{"Key":"by one","Fragments":["line"]},{"Key":"line which","Fragments":["is"]},{"Key":"an obvious","Fragments":["refactor."]},{"Key":"think GenerateName()","Fragments":["can"]},{"Key":"GenerateName() can","Fragments":["be"]},{"Key":"shorter although","Fragments":["it"]},{"Key":"Anyway YMMV","Fragments":[":-)"]},{"Key":"Actually want","Fragments":["to"]},{"Key":"with Aggregate","Fragments":["and"]},{"Key":"Aggregate and","Fragments":["StringBuilder"]},{"Key":"regex word","Fragments":["boundary"]},{"Key":"word boundary","Fragments":["anchor?"]},{"Key":"boundary anchor?","Fragments":["I"]},{"Key":"anchor? I","Fragments":["don't"]},{"Key":"don't recall","Fragments":["the"]},{"Key":"recall the","Fragments":["specific"]},{"Key":"specific behavior","Fragments":["of"]},{"Key":"behavior of","Fragments":["the"]},{"Key":"like ```/(\\b')?([a-z])('\\b)?/```","Fragments":["should"]},{"Key":"```/(\\b')?([a-z])('\\b)?/``` should","Fragments":["let"]},{"Key":"should let","Fragments":["you"]},{"Key":"you capture","Fragments":["the"]},{"Key":"the interior","Fragments":["word"]},{"Key":"interior word","Fragments":["in"]},{"Key":"second capture","Fragments":["and"]},{"Key":"capture and","Fragments":["discard"]},{"Key":"and discard","Fragments":["the"]},{"Key":"leading and/or","Fragments":["trailing"]},{"Key":"and/or trailing","Fragments":["apostrophes."]},{"Key":"Then again,","Fragments":["it's"]},{"Key":"apostrophes that","Fragments":["gave"]},{"Key":"a headache,","Fragments":["perhaps"]},{"Key":"headache, perhaps","Fragments":["that"]},{"Key":"perhaps that","Fragments":["wasn't"]},{"Key":"that wasn't","Fragments":["what"]},{"Key":"wasn't what","Fragments":["you"]},{"Key":"you meant.","Fragments":[":)"]},{"Key":"you replace","Fragments":["a"]},{"Key":"replace a","Fragments":["hardcoded"]},{"Key":"a hardcoded","Fragments":["set"]},{"Key":"hardcoded set","Fragments":["of"]},{"Key":"of symbols","Fragments":["with"]},{"Key":"symbols with","Fragments":["spaces"]},{"Key":"spaces in","Fragments":["line"]},{"Key":"line 22-26","Fragments":["but"]},{"Key":"22-26 but","Fragments":["you"]},{"Key":"you pick","Fragments":["out"]},{"Key":"pick out","Fragments":["all"]},{"Key":"21 and","Fragments":["```Trim()```"]},{"Key":"and ```Trim()```","Fragments":["it"]},{"Key":"```Trim()``` it","Fragments":["in","out"]},{"Key":"line 27","Fragments":["as","since"]},{"Key":"27 as","Fragments":["a"]},{"Key":"separate process.","Fragments":["First,"]},{"Key":"process. First,","Fragments":["to"]},{"Key":"First, to","Fragments":["nitpick,"]},{"Key":"nitpick, line","Fragments":["21"]},{"Key":"be closer","Fragments":["to"]},{"Key":"27 since","Fragments":["none"]},{"Key":"since none","Fragments":["of"]},{"Key":"the intervening","Fragments":["code"]},{"Key":"intervening code","Fragments":["relies"]},{"Key":"code relies","Fragments":["on"]},{"Key":"and that'd","Fragments":["make"]},{"Key":"that'd make","Fragments":["it"]},{"Key":"read through.","Fragments":["But"]},{"Key":"through. But","Fragments":["more"]},{"Key":"more importantly,","Fragments":["why"]},{"Key":"importantly, why","Fragments":["didn't"]},{"Key":"didn't you","Fragments":["include"]},{"Key":"your ```foreach```","Fragments":["since"]},{"Key":"to ```Trim()```","Fragments":["it"]},{"Key":"out anyway?","Fragments":["Or"]},{"Key":"anyway? Or","Fragments":["vice"]},{"Key":"Or vice","Fragments":["versa,"]},{"Key":"vice versa,","Fragments":["letting"]},{"Key":"versa, letting","Fragments":["```Trim()```"]},{"Key":"letting ```Trim()```","Fragments":["remove"]},{"Key":"```Trim()``` remove","Fragments":["the"]},{"Key":"other thing,","Fragments":["you"]},{"Key":"thing, you","Fragments":["could"]},{"Key":"line 39","Fragments":["by"]},{"Key":"39 by","Fragments":["using"]},{"Key":"like ```words","Fragments":["="]},{"Key":"```words =","Fragments":["words.Where(word"]},{"Key":"= words.Where(word","Fragments":["=\u003e"]},{"Key":"words.Where(word =\u003e","Fragments":["word.Any(Char.IsLetterOrDigit))```"]},{"Key":"=\u003e word.Any(Char.IsLetterOrDigit))```","Fragments":["to"]},{"Key":"word.Any(Char.IsLetterOrDigit))``` to","Fragments":["throw"]},{"Key":"throw out","Fragments":["empty"]},{"Key":"out empty","Fragments":["strings"]},{"Key":"and strings","Fragments":["with"]},{"Key":"strings with","Fragments":["just"]},{"Key":"just punctuation","Fragments":["prior"]},{"Key":"punctuation prior","Fragments":["to"]},{"Key":"to entering","Fragments":["the"]},{"Key":"Heh, linq","Fragments":["again."]},{"Key":"linq again.","Fragments":["The"]},{"Key":"again. The","Fragments":["ToUpper()s"]},{"Key":"The ToUpper()s","Fragments":["make"]},{"Key":"ToUpper()s make","Fragments":["my"]},{"Key":"brain cry,","Fragments":["but"]},{"Key":"cry, but","Fragments":["I"]},{"Key":"can't decide","Fragments":["what"]},{"Key":"it (if","Fragments":["anything)."]},{"Key":"(if anything).","Fragments":["I"]},{"Key":"anything). I","Fragments":["was"]},{"Key":"considering extension","Fragments":["methods"]},{"Key":"for OrderBy()","Fragments":["and"]},{"Key":"OrderBy() and","Fragments":["Contains()"]},{"Key":"and Contains()","Fragments":["which"]},{"Key":"Contains() which","Fragments":["would"]},{"Key":"take StringComparison.OrdinalIgnoreCase","Fragments":["as"]},{"Key":"StringComparison.OrdinalIgnoreCase as","Fragments":["a"]},{"Key":"foreach replaces","Fragments":["the"]},{"Key":"replaces the","Fragments":["need"]},{"Key":"Anyway you","Fragments":["could"]},{"Key":"your too","Fragments":["loop"]},{"Key":"too loop","Fragments":["with"]},{"Key":"with Sum()","Fragments":["with"]},{"Key":"Sum() with","Fragments":["a"]},{"Key":"a captured","Fragments":["variable"]},{"Key":"captured variable","Fragments":["or"]},{"Key":"use Aggregate","Fragments":["or","as"]},{"Key":"Aggregate or","Fragments":["Select"]},{"Key":"or Select","Fragments":["adding"]},{"Key":"Select adding","Fragments":["index"]},{"Key":"adding index","Fragments":["tuple"]},{"Key":"index tuple","Fragments":["with"]},{"Key":"tuple with","Fragments":["sum"]},{"Key":" Uses","Fragments":["String.Format","`BitArray`"]},{"Key":"Uses String.Format","Fragments":["and"]},{"Key":"String.Format and","Fragments":["StringBuilder"]},{"Key":"this premature","Fragments":["optimisation?"]},{"Key":"premature optimisation?","Fragments":["(See"]},{"Key":"optimisation? (See","Fragments":["previous"]},{"Key":"(See previous","Fragments":["iteration"]},{"Key":"for simpler","Fragments":["but"]},{"Key":"simpler but","Fragments":["less"]},{"Key":"less efficeint","Fragments":["soltuoin)."]},{"Key":"exercises i","Fragments":["do"]},{"Key":"was part","Fragments":["of"]},{"Key":"Anyway what","Fragments":["about"]},{"Key":"about HashSet","Fragments":["rather"]},{"Key":"HashSet rather","Fragments":["than"]},{"Key":"than List","Fragments":["to"]},{"Key":"the String.Concat()","Fragments":["and"]},{"Key":"String.Concat() and","Fragments":["the","now"]},{"Key":"Trim() with","Fragments":["String.Join(\""]},{"Key":"with String.Join(\"","Fragments":["\","]},{"Key":"String.Join(\" \",","Fragments":["...)"]},{"Key":"have revised","Fragments":["my"]},{"Key":"revised my","Fragments":["view"]},{"Key":"my view","Fragments":["on"]},{"Key":"view on","Fragments":["this."]},{"Key":"String.Concat is","Fragments":["not","not","inefficient"]},{"Key":"not linq","Fragments":["so"]},{"Key":"linq so","Fragments":["I"]},{"Key":"prefer on","Fragments":["using"]},{"Key":"Aggregate (actually","Fragments":["I"]},{"Key":"(actually I","Fragments":["use"]},{"Key":"custom extension).","Fragments":["Certainly"]},{"Key":"extension). Certainly","Fragments":["overkill"]},{"Key":"Certainly overkill","Fragments":["to"]},{"Key":"StringBuilder here","Fragments":["but"]},{"Key":"used, in","Fragments":["say."]},{"Key":"in say.","Fragments":["twelve-days."]},{"Key":"Zip can","Fragments":["be"]},{"Key":"simplified e.g.","Fragments":["Count"]},{"Key":"e.g. Count","Fragments":["for"]},{"Key":"Count for","Fragments":["true"]},{"Key":"for true","Fragments":["(or"]},{"Key":"true (or","Fragments":["false)"]},{"Key":"(or false)","Fragments":["rather"]},{"Key":"false) rather","Fragments":["than"]},{"Key":"than sum","Fragments":["and"]},{"Key":"sum and","Fragments":["terniary"]},{"Key":"and terniary","Fragments":["lambda"]},{"Key":"no tests","Fragments":["nor"]},{"Key":"tests nor","Fragments":["rules"]},{"Key":"nor rules","Fragments":["to"]},{"Key":"rules to","Fragments":["do"]},{"Key":"with unequal","Fragments":["length"]},{"Key":"unequal length","Fragments":["strings,"]},{"Key":"length strings,","Fragments":["therefore"]},{"Key":"strings, therefore","Fragments":["IMHO"]},{"Key":"therefore IMHO","Fragments":["you"]},{"Key":"no basis","Fragments":["to","in"]},{"Key":"basis to","Fragments":["decide"]},{"Key":"decide as","Fragments":["you"]},{"Key":"this complicates","Fragments":["the"]},{"Key":"complicates the","Fragments":["code."]},{"Key":"In next","Fragments":["iteration"]},{"Key":"iteration !","Fragments":["added"]},{"Key":"! added","Fragments":["simple"]},{"Key":"added simple","Fragments":["StringConcat"]},{"Key":"simple StringConcat","Fragments":["extensions"]},{"Key":"StringConcat extensions","Fragments":["method"]},{"Key":"extensions method","Fragments":["using"]},{"Key":"Good start.","Fragments":["Can"]},{"Key":"start. Can","Fragments":["refactor"]},{"Key":"Can refactor","Fragments":["the"]},{"Key":"Where() so","Fragments":["there"]},{"Key":"no top","Fragments":["level"]},{"Key":"top level","Fragments":["if..the..else","to"]},{"Key":"level if..the..else","Fragments":["and"]},{"Key":"if..the..else and","Fragments":["only"]},{"Key":"one 2","Fragments":["or"]},{"Key":"level for","Fragments":["loop"]},{"Key":"loop (2","Fragments":["is"]},{"Key":"(2 is","Fragments":["better"]},{"Key":"whole process","Fragments":["with"]},{"Key":"process with","Fragments":["two(nested)"]},{"Key":"with two(nested)","Fragments":["loops"]},{"Key":"two(nested) loops","Fragments":["whilst"]},{"Key":"loops whilst","Fragments":["you"]},{"Key":"whilst you","Fragments":["have"]},{"Key":" Further","Fragments":["you","you"]},{"Key":"Further you","Fragments":["are","use"]},{"Key":"generating 2","Fragments":["function"]},{"Key":"2 function","Fragments":["calls"]},{"Key":"calls (","Fragments":["each"]},{"Key":"( each","Fragments":["with"]},{"Key":"each with","Fragments":["their"]},{"Key":"own loop)","Fragments":["for"]},{"Key":"loop) for","Fragments":["each"]},{"Key":"each prime.","Fragments":["This"]},{"Key":"prime. This","Fragments":["all"]},{"Key":"This all","Fragments":["looks"]},{"Key":"all looks","Fragments":["very"]},{"Key":"inefficient. (Hint","Fragments":["you"]},{"Key":"(Hint you","Fragments":["can"]},{"Key":"without either","Fragments":["of"]},{"Key":"either of","Fragments":["those"]},{"Key":"Finally but","Fragments":["minor"]},{"Key":"but minor","Fragments":["in"]},{"Key":"minor in","Fragments":["comparison"]},{"Key":"in comparison","Fragments":["at"]},{"Key":"comparison at","Fragments":["this"]},{"Key":"stage of","Fragments":["your"]},{"Key":"your implementation,","Fragments":["I"]},{"Key":"would switch","Fragments":["to"]},{"Key":"a BitArray","Fragments":["over"]},{"Key":"BitArray over","Fragments":["bool[]"]},{"Key":"over bool[]","Fragments":["as"]},{"Key":"bool[] as","Fragments":["that"]},{"Key":"that saves","Fragments":["around"]},{"Key":"saves around","Fragments":["83%"]},{"Key":"around 83%","Fragments":["of"]},{"Key":"83% of","Fragments":["storage"]},{"Key":"created StringJoin","Fragments":["extension"]},{"Key":"StringJoin extension","Fragments":["method"]},{"Key":"instead, actually","Fragments":["will"]},{"Key":"actually will","Fragments":["do"]},{"Key":"Refactored GetNumbers","Fragments":["and"]},{"Key":"GetNumbers and","Fragments":["GetLetters"]},{"Key":"and GetLetters","Fragments":["-"]},{"Key":"GetLetters -","Fragments":["much"]},{"Key":"the misunderstanding.","Fragments":["submited"]},{"Key":"misunderstanding. submited","Fragments":["a"]},{"Key":"submited a","Fragments":["new"]},{"Key":"expecting ````Dictionary\u003cstring,","Fragments":["int\u003e````"]},{"Key":"````Dictionary\u003cstring, int\u003e````","Fragments":["not"]},{"Key":"int\u003e```` not","Fragments":["````List\u003cKeyValuePair\u003cint,"]},{"Key":"not ````List\u003cKeyValuePair\u003cint,","Fragments":["string\u003e\u003e````"]},{"Key":"not linq,","Fragments":["prefer"]},{"Key":"linq, prefer","Fragments":["aggregate"]},{"Key":"prefer aggregate","Fragments":["now."]},{"Key":"aggregate now.","Fragments":["No"]},{"Key":"now. No","Fragments":["need"]},{"Key":"for StringBuilder","Fragments":["for"]},{"Key":"StringBuilder for","Fragments":["these"]},{"Key":"like use","Fragments":["of"]},{"Key":"of String.Concat","Fragments":["and"]},{"Key":"String.Concat and","Fragments":["enabled"]},{"Key":"and enabled","Fragments":["a"]},{"Key":"enabled a","Fragments":["refactor"]},{"Key":"a refactor","Fragments":["too"]},{"Key":"need terniary","Fragments":["operator,"]},{"Key":"terniary operator,","Fragments":["just"]},{"Key":"operator, just","Fragments":["invert"]},{"Key":"invert bool","Fragments":["state"]},{"Key":"the Transforms_a_full_dataset()","Fragments":["old"]},{"Key":"Transforms_a_full_dataset() old","Fragments":["Dictionary"]},{"Key":"old Dictionary","Fragments":["in"]},{"Key":"some overloads,","Fragments":["but"]},{"Key":"overloads, but","Fragments":["for"]},{"Key":"IEnumerable it","Fragments":["does"]},{"Key":"does use","Fragments":["a"]},{"Key":"a StringBuilder.","Fragments":["Check"]},{"Key":"StringBuilder. Check","Fragments":["[string.cs](http://referencesource.microsoft.com/#mscorlib/system/string.cs,630a858d9b6f4c5d)"]},{"Key":"by foreach","Fragments":["which"]},{"Key":"foreach which","Fragments":["IMHO"]},{"Key":"IMHO is","Fragments":["more"]},{"Key":"Dont bother","Fragments":["with"]},{"Key":"with empty","Fragments":["checks"]},{"Key":"empty checks","Fragments":["they"]},{"Key":"checks they","Fragments":["are"]},{"Key":"not dealt","Fragments":["with"]},{"Key":"dealt with","Fragments":["in"]},{"Key":"with in","Fragments":["the"]},{"Key":"code look","Fragments":["more"]},{"Key":"look more","Fragments":["complicated"]},{"Key":"Be aware","Fragments":["that"]},{"Key":"that String.Concat","Fragments":["is","use"]},{"Key":"is inefficient","Fragments":["and","generating"]},{"Key":"inefficient and","Fragments":["does"]},{"Key":"StringBuilder interally","Fragments":["see"]},{"Key":"interally see","Fragments":["my"]},{"Key":"for alternative","Fragments":["http://exercism.io/submissions/c316bd25bc0447b8b438e0e9f3a3796e"]},{"Key":" ToUpper","Fragments":["is"]},{"Key":"ToUpper is","Fragments":["fine"]},{"Key":"fine AFAICS.","Fragments":["I"]},{"Key":"AFAICS. I","Fragments":["have"]},{"Key":"have issues","Fragments":["wiht"]},{"Key":"issues wiht","Fragments":["String.Concat"]},{"Key":"wiht String.Concat","Fragments":["I"]},{"Key":"String.Concat I","Fragments":["(now)"]},{"Key":"I (now)","Fragments":["tend"]},{"Key":"(now) tend","Fragments":["to"]},{"Key":"Aggregate as","Fragments":["more"]},{"Key":"more Linq","Fragments":["like."]},{"Key":" Custom","Fragments":["extension"]},{"Key":"Custom extension","Fragments":["methods"]},{"Key":"methods overkill","Fragments":["here"]},{"Key":"overkill here","Fragments":["IMHO"]},{"Key":"one refactor","Fragments":["possible"]},{"Key":"refactor possible","Fragments":["for"]},{"Key":"possible for","Fragments":["orderUpperGiven"]},{"Key":"for orderUpperGiven","Fragments":["also"]},{"Key":"orderUpperGiven also","Fragments":["within"]},{"Key":"also within","Fragments":["Match()."]},{"Key":" Fixes","Fragments":["typo"]},{"Key":"Fixes typo","Fragments":["in"]},{"Key":"in comment","Fragments":["from"]},{"Key":"comment from","Fragments":["previous"]},{"Key":"Wow well","Fragments":["spotted!"]},{"Key":"well spotted!","Fragments":["I"]},{"Key":"spotted! I","Fragments":["read"]},{"Key":"read otherwise","Fragments":["thanks"]},{"Key":"otherwise thanks","Fragments":["to"]},{"Key":"to John","Fragments":["Skeet"]},{"Key":"John Skeet","Fragments":["on"]},{"Key":"Skeet on","Fragments":["StackOverflow"]},{"Key":"on StackOverflow","Fragments":["but"]},{"Key":"StackOverflow but","Fragments":["maybe"]},{"Key":"maybe that","Fragments":["was"]},{"Key":"Still like","Fragments":["a"]},{"Key":"a extension","Fragments":["method"]},{"Key":"for String.Concat()","Fragments":["and"]},{"Key":"out then","Fragments":["that"]},{"Key":"string StringConcat(this","Fragments":["IEnumerable\u003cT\u003e"]},{"Key":"StringConcat(this IEnumerable\u003cT\u003e","Fragments":["seq)"]},{"Key":"this being","Fragments":["a"]},{"Key":"learning site.","Fragments":["The"]},{"Key":"site. The","Fragments":["tests"]},{"Key":"not comprehensive","Fragments":["sometimes.."]},{"Key":"comprehensive sometimes..","Fragments":["sometimes.."]},{"Key":"sometimes.. sometimes..","Fragments":["by"]},{"Key":"sometimes.. by","Fragments":["design,"]},{"Key":"by design,","Fragments":["as"]},{"Key":"design, as","Fragments":["noted"]},{"Key":"as noted","Fragments":["in"]},{"Key":"noted in","Fragments":["some"]},{"Key":"Also some","Fragments":["of"]},{"Key":"tests here","Fragments":["is"]},{"Key":"is often","Fragments":["to"]},{"Key":"a coder","Fragments":["to"]},{"Key":"coder to","Fragments":["a"]},{"Key":"solution exposing","Fragments":["steps"]},{"Key":"exposing steps","Fragments":["that"]},{"Key":"steps that","Fragments":["should"]},{"Key":"should otherwise","Fragments":["be"]},{"Key":"otherwise be","Fragments":["private"]},{"Key":"not unit","Fragments":["tested"]},{"Key":"unit tested","Fragments":["in"]},{"Key":"tested in","Fragments":["normal"]},{"Key":" Dunno","Fragments":["who"]},{"Key":"these 40","Fragments":["exercises"]},{"Key":"exercises but","Fragments":["not"]},{"Key":"a coding","Fragments":["note"]},{"Key":"coding note","Fragments":["here"]},{"Key":"note here","Fragments":["I"]},{"Key":"would recommend,","Fragments":["in"]},{"Key":"recommend, in","Fragments":["select,"]},{"Key":"in select,","Fragments":["using"]},{"Key":"select, using","Fragments":["a"]},{"Key":"Tuple over","Fragments":["an"]},{"Key":"type (or","Fragments":["KeyvaluePair()"]},{"Key":"(or KeyvaluePair()","Fragments":[")"]},{"Key":"KeyvaluePair() )","Fragments":["there"]},{"Key":") there","Fragments":["are"]},{"Key":"no heap","Fragments":["or"]},{"Key":"heap or","Fragments":["GC"]},{"Key":"or GC","Fragments":["issues."]},{"Key":" looks","Fragments":["good"]},{"Key":"call `multiples.Clear()`","Fragments":["in"]},{"Key":"`multiples.Clear()` in","Fragments":["the"]},{"Key":"constructor. The","Fragments":["list"]},{"Key":"be empty","Fragments":["at"]},{"Key":"empty at","Fragments":["that"]},{"Key":"return truelogic1","Fragments":["||"]},{"Key":"truelogic1 ||","Fragments":["truelogic2"]},{"Key":"|| truelogic2","Fragments":["\u0026\u0026"]},{"Key":"truelogic2 \u0026\u0026","Fragments":["truelogic"]},{"Key":"\u0026\u0026 truelogic","Fragments":["3"]},{"Key":"One day","Fragments":["past...It"]},{"Key":"day past...It","Fragments":["looks"]},{"Key":"past...It looks","Fragments":["too"]},{"Key":"complex to","Fragments":["read."]},{"Key":"nice Linq","Fragments":["solution!"]},{"Key":"Check mine","Fragments":["http://exercism.io/submissions/849dabc1def64bb4baa440238d7f27b2"]},{"Key":"mine http://exercism.io/submissions/849dabc1def64bb4baa440238d7f27b2","Fragments":["for"]},{"Key":"http://exercism.io/submissions/849dabc1def64bb4baa440238d7f27b2 for","Fragments":["two"]},{"Key":"for two","Fragments":["other"]},{"Key":"two other","Fragments":["solutions."]},{"Key":"the containsLetters","Fragments":["function"]},{"Key":"containsLetters function","Fragments":["I"]},{"Key":"function I","Fragments":["was"]},{"Key":"foreach iterating","Fragments":["through"]},{"Key":"the Char.IsLetter()","Fragments":["function"]},{"Key":"Char.IsLetter() function","Fragments":["to"]},{"Key":"it matched","Fragments":["any"]},{"Key":"matched any","Fragments":["of"]},{"Key":"with numbers.","Fragments":["Wanted"]},{"Key":"numbers. Wanted","Fragments":["to"]},{"Key":"to practice","Fragments":["doing"]},{"Key":"practice doing","Fragments":["some"]},{"Key":"simple regex","Fragments":["matches"]},{"Key":"regex matches","Fragments":["in"]},{"Key":"matches in","Fragments":["csharp"]},{"Key":"csharp though","Fragments":["so"]},{"Key":"I adjusted","Fragments":["to"]},{"Key":"adjusted to","Fragments":["search"]},{"Key":"to search","Fragments":["for"]},{"Key":"letters using","Fragments":["regex"]},{"Key":"better or","Fragments":["worse?"]},{"Key":" Tidied","Fragments":["up"]},{"Key":"Tidied up","Fragments":["GenerateName,"]},{"Key":"up GenerateName,","Fragments":["and"]},{"Key":"GenerateName, and","Fragments":["reformatted"]},{"Key":"and reformatted","Fragments":["so"]},{"Key":"reformatted so","Fragments":["it"]},{"Key":"it displays","Fragments":["better"]},{"Key":"displays better","Fragments":["in"]},{"Key":" Unequal","Fragments":["strings"]},{"Key":"Unequal strings","Fragments":["are"]},{"Key":"are explicitly","Fragments":["left"]},{"Key":"explicitly left","Fragments":["undefined"]},{"Key":"left undefined","Fragments":["in"]},{"Key":"undefined in","Fragments":["the"]},{"Key":"description so","Fragments":["I"]},{"Key":"problem by","Fragments":["truncating."]},{"Key":"by truncating.","Fragments":["If"]},{"Key":"truncating. If","Fragments":["I"]},{"Key":"other directive","Fragments":["for"]},{"Key":"directive for","Fragments":["handling"]},{"Key":"handling them","Fragments":["(say,"]},{"Key":"them (say,","Fragments":["count"]},{"Key":"(say, count","Fragments":["the"]},{"Key":"Hamming difference)","Fragments":["then"]},{"Key":"difference) then","Fragments":["I'd"]},{"Key":"that. There","Fragments":["is"]},{"Key":"really no","Fragments":["basis"]},{"Key":"basis in","Fragments":["the"]},{"Key":"description for","Fragments":["*any*"]},{"Key":"for *any*","Fragments":["decision"]},{"Key":"*any* decision","Fragments":["on"]},{"Key":"handling this","Fragments":["case."]},{"Key":"case. The","Fragments":["safest"]},{"Key":"The safest","Fragments":["answer"]},{"Key":"safest answer","Fragments":["is"]},{"Key":"probably to","Fragments":["```throw```"]},{"Key":"to ```throw```","Fragments":["something."]},{"Key":"think cleaning","Fragments":["the"]},{"Key":"cleaning the","Fragments":["input"]},{"Key":"input at","Fragments":["the"]},{"Key":"function adds","Fragments":["a"]},{"Key":"a significant","Fragments":["amount"]},{"Key":"significant amount","Fragments":["of"]},{"Key":"of complexity","Fragments":["even"]},{"Key":"complexity even","Fragments":["with"]},{"Key":"even with","Fragments":["the"]},{"Key":"Added StringBuilder","Fragments":["fluent"]},{"Key":"StringBuilder fluent","Fragments":["alternative"]},{"Key":"fluent alternative","Fragments":["to"]},{"Key":"refactor out","Fragments":["the"]},{"Key":"the SortedString","Fragments":["pattern"]},{"Key":"SortedString pattern","Fragments":["in"]},{"Key":"pattern in","Fragments":["Match"]},{"Key":"Match foreach","Fragments":["reusing"]},{"Key":"foreach reusing","Fragments":["your"]},{"Key":"reusing your","Fragments":["private"]},{"Key":"not compile","Fragments":["and"]},{"Key":" @alfred:","Fragments":["There"]},{"Key":"@alfred: There","Fragments":["you"]},{"Key":"Now you","Fragments":["can"]},{"Key":"if clause","Fragments":["into"]},{"Key":"clause into","Fragments":["the"]},{"Key":"the terniary","Fragments":["operation","operation"]},{"Key":"simplify into","Fragments":["terniary"]},{"Key":"into terniary","Fragments":["expression"]},{"Key":"So, ```.ToDictionary(group","Fragments":["=\u003e"]},{"Key":"```.ToDictionary(group =\u003e","Fragments":["group.Key,"]},{"Key":"=\u003e group.Key,","Fragments":["group"]},{"Key":"group.Key, group","Fragments":["=\u003e"]},{"Key":"group =\u003e","Fragments":["group.Count())```"]},{"Key":"Probably requires","Fragments":["specifying"]},{"Key":"select line,","Fragments":["using"]},{"Key":"line, using","Fragments":["an"]},{"Key":"additional enumerator","Fragments":["and"]},{"Key":"enumerator and","Fragments":["creation"]},{"Key":"and creation","Fragments":["of"]},{"Key":"of n","Fragments":["structs,"]},{"Key":"n structs,","Fragments":["prior"]},{"Key":"structs, prior","Fragments":["to"]},{"Key":"to ToDictionary(),","Fragments":["you"]},{"Key":"ToDictionary(), you","Fragments":["can"]},{"Key":"in ToDictionary().","Fragments":["(I"]},{"Key":"ToDictionary(). (I","Fragments":["have"]},{"Key":"been guilty","Fragments":["of"]},{"Key":"guilty of","Fragments":["this"]},{"Key":"pattern many","Fragments":["times"]},{"Key":"times myself","Fragments":["...but"]},{"Key":"myself ...but","Fragments":["when"]},{"Key":"...but when","Fragments":["you"]},{"Key":"do need","Fragments":["it"]},{"Key":"it Tuple","Fragments":["is"]},{"Key":"Tuple is","Fragments":["better"]},{"Key":"type or","Fragments":["KeyValuePair())"]},{"Key":"done far","Fragments":["more"]},{"Key":"more simply.","Fragments":["I"]},{"Key":"simply. I","Fragments":["return"]},{"Key":"I return","Fragments":["0"]},{"Key":"probably better","Fragments":["to"]},{"Key":"Either way","Fragments":["it"]},{"Key":"far simpler","Fragments":["than"]},{"Key":"than yours.","Fragments":["http://exercism.io/submissions/10079f24cc24dba6cdb9c28e"]},{"Key":"your simpler","Fragments":["first,"]},{"Key":"simpler first,","Fragments":["then"]},{"Key":"then look","Fragments":["at"]},{"Key":"terniary operation","Fragments":["in"]},{"Key":"operation in","Fragments":["the"]},{"Key":" once","Fragments":["you"]},{"Key":"eliminate 2","Fragments":["factor"]},{"Key":"2 factor","Fragments":["the"]},{"Key":"factor the","Fragments":["while"]},{"Key":"loop (with","Fragments":["a"]},{"Key":"(with a","Fragments":["different"]},{"Key":"different test)","Fragments":["need"]},{"Key":"test) need","Fragments":["only"]},{"Key":"need only","Fragments":["look"]},{"Key":"only look","Fragments":["at"]},{"Key":"at odd","Fragments":["numbers"]},{"Key":"odd numbers","Fragments":["i.e."]},{"Key":"numbers i.e.","Fragments":["divisor"]},{"Key":"i.e. divisor","Fragments":["+=2"]},{"Key":"divisor +=2","Fragments":["(starting"]},{"Key":"+=2 (starting","Fragments":["from"]},{"Key":" mmm,","Fragments":["I"]},{"Key":"mmm, I","Fragments":["agree"]},{"Key":"of HashSet","Fragments":["here"]},{"Key":"HashSet here","Fragments":["is"]},{"Key":"true if","Fragments":["the"]},{"Key":"the item","Fragments":["is"]},{"Key":"in HashSet","Fragments":["and"]},{"Key":"if not.","Fragments":["So"]},{"Key":"not. So","Fragments":["you"]},{"Key":"simplify Reset()...(I","Fragments":["missed"]},{"Key":"Reset()...(I missed","Fragments":["this"]},{"Key":"this myself","Fragments":["the"]},{"Key":"myself the","Fragments":["first"]},{"Key":"Still think","Fragments":["you"]},{"Key":"two random","Fragments":["calls"]},{"Key":"random calls","Fragments":["more"]},{"Key":"calls more","Fragments":["consistent,"]},{"Key":"more consistent,","Fragments":["see"]},{"Key":"consistent, see","Fragments":["my"]},{"Key":"made your","Fragments":["StringBuilder()"]},{"Key":"your StringBuilder()","Fragments":["fluent,"]},{"Key":"StringBuilder() fluent,","Fragments":["good"]},{"Key":"fluent, good","Fragments":["to"]},{"Key":"return new","Fragments":["StringBuilder().Append(GetLetters(2).Concat(GetNumbers(3)).ToArray()).ToString();"]},{"Key":" not","Fragments":["sure"]},{"Key":"readable. This","Fragments":["is"]},{"Key":"that issue","Fragments":["is"]},{"Key":"is negligible","Fragments":["here"]},{"Key":"letters line","Fragments":["that"]},{"Key":"line that","Fragments":["can"]},{"Key":"be included","Fragments":["in"]},{"Key":"two foreach","Fragments":["enumerations"]},{"Key":"foreach enumerations","Fragments":["then"]},{"Key":"enumerations then","Fragments":["this"]},{"Key":"pattern looks","Fragments":["like"]},{"Key":"like better","Fragments":["suited"]},{"Key":"better suited","Fragments":["as"]},{"Key":"suited as","Fragments":["a"]},{"Key":"i.e. a","Fragments":["IEnumerable\u003cTuple\u003cstring,int\u003e"]},{"Key":"a IEnumerable\u003cTuple\u003cstring,int\u003e","Fragments":["TransformImp()"]},{"Key":"IEnumerable\u003cTuple\u003cstring,int\u003e TransformImp()","Fragments":["called"]},{"Key":"TransformImp() called","Fragments":["by"]},{"Key":"or try","Fragments":["Linq"]},{"Key":"Linq fluent","Fragments":["or"]},{"Key":"fluent or","Fragments":["query"]},{"Key":"or query","Fragments":["syntax"]},{"Key":" @palma,","Fragments":["do"]},{"Key":"@palma, do","Fragments":["you"]},{"Key":"have numbers","Fragments":["on"]},{"Key":"numbers on","Fragments":["that"]},{"Key":"that claim?","Fragments":["`ContainsKey()`"]},{"Key":"claim? `ContainsKey()`","Fragments":["costs,"]},{"Key":"`ContainsKey()` costs,","Fragments":["yes."]},{"Key":"costs, yes.","Fragments":["But"]},{"Key":"yes. But","Fragments":["I"]},{"Key":"believe exceptions","Fragments":["costs"]},{"Key":"exceptions costs","Fragments":["way"]},{"Key":"costs way","Fragments":["more."]},{"Key":" @ericka,","Fragments":["good"]},{"Key":"@ericka, good","Fragments":["point."]},{"Key":"point. Should","Fragments":["have"]},{"Key":"comments before","Fragments":["I"]},{"Key":"added my","Fragments":["own."]},{"Key":"Still issues","Fragments":["with"]},{"Key":"you length","Fragments":["checking"]},{"Key":"checking given","Fragments":["there"]},{"Key":"given there","Fragments":["is"]},{"Key":"zero guidance","Fragments":["for"]},{"Key":"guidance for","Fragments":["readme"]},{"Key":"for readme","Fragments":["or"]},{"Key":"readme or","Fragments":["tests."]},{"Key":"In particular","Fragments":["massaging"]},{"Key":"Use reflection","Fragments":["to"]},{"Key":"all Onxxx.()","Fragments":["CalculateAge()"]},{"Key":"Onxxx.() CalculateAge()","Fragments":["method"]},{"Key":"CalculateAge() method","Fragments":["calls"]},{"Key":"exercise surely","Fragments":["requires"]},{"Key":"surely requires","Fragments":["using"]},{"Key":"requires using","Fragments":["reflection"]},{"Key":"using reflection","Fragments":["(and","making"]},{"Key":"reflection (and","Fragments":["a"]},{"Key":"a type","Fragments":["alias"]},{"Key":"type alias","Fragments":["in"]},{"Key":"opinion) otherwise","Fragments":["it"]},{"Key":"is plain","Fragments":["silly"]},{"Key":" Déjà","Fragments":["vu!"]},{"Key":"Actually, there","Fragments":["is"]},{"Key":"all, since","Fragments":["the"]},{"Key":"first branch","Fragments":["returns."]},{"Key":"branch returns.","Fragments":["So"]},{"Key":"returns. So","Fragments":["it"]},{"Key":"about preference","Fragments":["if"]},{"Key":"preference if","Fragments":["we"]},{"Key":"and throw,","Fragments":["or"]},{"Key":"throw, or","Fragments":["test"]},{"Key":"with @lyric,","Fragments":["you"]},{"Key":"@lyric, you","Fragments":["should"]},{"Key":"use generics","Fragments":["to"]},{"Key":"generics to","Fragments":["make"]},{"Key":"all types.","Fragments":["It"]},{"Key":"will cleanup","Fragments":["your"]},{"Key":"cleanup your","Fragments":["code"]},{"Key":"your `ToString()`","Fragments":["method,"]},{"Key":"`ToString()` method,","Fragments":["you"]},{"Key":"the `string.Format()`","Fragments":["method"]},{"Key":"`string.Format()` method","Fragments":["to"]},{"Key":"things clearer.","Fragments":["This"]},{"Key":"clearer. This","Fragments":["would"]},{"Key":"the \"prefix","Fragments":["with"]},{"Key":"\"prefix with","Fragments":["0\""]},{"Key":"with 0\"","Fragments":["by"]},{"Key":"0\" by","Fragments":["using"]},{"Key":"number format","Fragments":["modifier."]},{"Key":" Generate","Fragments":["is"]},{"Key":"Generate is","Fragments":["now"]},{"Key":"now a","Fragments":["1"]},{"Key":"using non-fluent","Fragments":["String.Concat"]},{"Key":"non-fluent String.Concat","Fragments":["(which"]},{"Key":"String.Concat (which","Fragments":["uses"]},{"Key":"(which uses","Fragments":["StringBuilder"]},{"Key":"uses StringBuilder","Fragments":["internally)."]},{"Key":"change two","Fragments":["things:"]},{"Key":"* reduce","Fragments":["`if`"]},{"Key":"reduce `if`","Fragments":["nesting"]},{"Key":"* remove","Fragments":["all"]},{"Key":"all comments,","Fragments":["as"]},{"Key":"comments, as","Fragments":["they"]},{"Key":"they add","Fragments":["no"]},{"Key":"add no","Fragments":["value"]},{"Key":"no value","Fragments":["in"]},{"Key":"version pass","Fragments":["all"]},{"Key":"the tests?","Fragments":["I","I"]},{"Key":"tests? I","Fragments":["tried","wouldn't"]},{"Key":"same, `Enumerable.Range(0,","Fragments":["limit)`,"]},{"Key":"`Enumerable.Range(0, limit)`,","Fragments":["but"]},{"Key":"limit)`, but","Fragments":["that"]},{"Key":"that failed.","Fragments":["I"]},{"Key":"failed. I","Fragments":["had"]},{"Key":" Enumerable.Range(1,","Fragments":["limit"]},{"Key":"try converting","Fragments":["the"]},{"Key":"existing methods","Fragments":["to"]},{"Key":"generic method,","Fragments":["as"]},{"Key":"collection is","Fragments":["not"]},{"Key":"Furthermore, why","Fragments":["not"]},{"Key":"not replace","Fragments":["`LinkedList`"]},{"Key":"replace `LinkedList`","Fragments":["and"]},{"Key":"`LinkedList` and","Fragments":["`HashSet`"]},{"Key":"and `HashSet`","Fragments":["with"]},{"Key":"`HashSet` with","Fragments":["an"]},{"Key":"Refactored common","Fragments":["behaviour."]},{"Key":" Anyway,","Fragments":["putting"]},{"Key":"Anyway, putting","Fragments":["comment"]},{"Key":"putting comment","Fragments":["is"]},{"Key":"The C#","Fragments":["guidelines"]},{"Key":"C# guidelines","Fragments":["say"]},{"Key":"guidelines say","Fragments":["that"]},{"Key":"a descripting","Fragments":["generic"]},{"Key":"descripting generic","Fragments":["type"]},{"Key":"type name,","Fragments":["you"]},{"Key":"name, you","Fragments":["should"]},{"Key":"single letter.","Fragments":["See"]},{"Key":"letter. See","Fragments":["[this"]},{"Key":"See [this","Fragments":["article](http://msdn.microsoft.com/en-us/library/0zk36dx2.aspx)."]},{"Key":"your case,","Fragments":["that"]},{"Key":"case, that","Fragments":["means"]},{"Key":"the `Type`","Fragments":["generic"]},{"Key":"`Type` generic","Fragments":["type"]},{"Key":"type could","Fragments":["be"]},{"Key":"Definitely could.","Fragments":["I"]},{"Key":"just fighting","Fragments":["myself"]},{"Key":"fighting myself","Fragments":["to"]},{"Key":"multiple lines.","Fragments":[":)"]},{"Key":"lines. :)","Fragments":["Swapped"]},{"Key":":) Swapped","Fragments":["it"]},{"Key":"Swapped it","Fragments":["over"]},{"Key":"Uses `BitArray`","Fragments":["instead"]},{"Key":"`BitArray` instead","Fragments":["of"]},{"Key":"Getting a","Fragments":["dictionary"]},{"Key":"dictionary comparer","Fragments":["for"]},{"Key":"comparer for","Fragments":["the"]},{"Key":"file was","Fragments":["an"]},{"Key":"magnitude harder","Fragments":["than"]},{"Key":"comparing by","Fragments":["hand"]},{"Key":"by hand","Fragments":["in"]},{"Key":"in debug","Fragments":["mode."]},{"Key":"your number","Fragments":["cleaning"]},{"Key":"number cleaning","Fragments":["method"]},{"Key":"cleaning method","Fragments":["to"]},{"Key":"keep digits,","Fragments":["using"]},{"Key":"digits, using","Fragments":["it"]},{"Key":"with letters","Fragments":["let"]},{"Key":"letters let","Fragments":["them"]},{"Key":"let them","Fragments":["through"]},{"Key":"them through","Fragments":["which"]},{"Key":"through which","Fragments":["is"]},{"Key":" number.where(c","Fragments":["=\u003e"]},{"Key":"number.where(c =\u003e","Fragments":["char.IsDigit(c))"]},{"Key":"No, actually","Fragments":["because"]},{"Key":"actually because","Fragments":["I"]},{"Key":"the 3","Fragments":["sides,"]},{"Key":"3 sides,","Fragments":["so"]},{"Key":"sides, so","Fragments":["that"]},{"Key":"that _sides[0]","Fragments":["and"]},{"Key":"_sides[0] and","Fragments":["_sides[1]"]},{"Key":"and _sides[1]","Fragments":["will"]},{"Key":"_sides[1] will","Fragments":["be"]},{"Key":"shorter two","Fragments":["sides"]},{"Key":"two sides","Fragments":["and"]},{"Key":"and _sides[2]","Fragments":["will"]},{"Key":"_sides[2] will","Fragments":["be"]},{"Key":"the longest","Fragments":["side."]},{"Key":"longest side.","Fragments":["This"]},{"Key":"side. This","Fragments":["way"]},{"Key":"condition checks","Fragments":["that"]},{"Key":"I don't.","Fragments":["Good"]},{"Key":"don't. Good","Fragments":["catch."]},{"Key":"you converting","Fragments":["the"]},{"Key":"input into","Fragments":["an"]},{"Key":"to query?","Fragments":["If"]},{"Key":"query? If","Fragments":["so,"]},{"Key":"so, LINQ","Fragments":["can"]},{"Key":"LINQ can","Fragments":["be","be"]},{"Key":"to query","Fragments":["and","strings"]},{"Key":"query and","Fragments":["transform"]},{"Key":"and transform","Fragments":["strings"]},{"Key":"transform strings","Fragments":["and"]},{"Key":"and collections","Fragments":["of"]},{"Key":"of strings.","Fragments":["No"]},{"Key":"strings. No","Fragments":["need"]},{"Key":"call ToCharArray","Fragments":["or"]},{"Key":"ToCharArray or","Fragments":["ToList."]},{"Key":" Were","Fragments":["none"]},{"Key":"Were none","Fragments":["of"]},{"Key":"years before","Fragments":["0"]},{"Key":"before 0","Fragments":["leap"]},{"Key":"0 leap","Fragments":["years?"]},{"Key":"years? I","Fragments":["would"]},{"Key":"they still","Fragments":["would"]},{"Key":"helpful, but","Fragments":["you"]},{"Key":"can convey","Fragments":["the"]},{"Key":"convey the","Fragments":["same"]},{"Key":"same information","Fragments":["using"]},{"Key":"information using","Fragments":["method"]},{"Key":"using method","Fragments":["names."]},{"Key":"method names.","Fragments":["I"]},{"Key":"less comments","Fragments":["is"]},{"Key":"read. If","Fragments":["you"]},{"Key":"methods properly","Fragments":["it's"]},{"Key":"properly it's","Fragments":["possible"]},{"Key":"a top-level","Fragments":["method"]},{"Key":"top-level method","Fragments":["that"]},{"Key":"all at","Fragments":["the"]},{"Key":"same level","Fragments":["of"]},{"Key":"abstraction that","Fragments":["expresses"]},{"Key":"that expresses","Fragments":["clearly"]},{"Key":"expresses clearly","Fragments":["what"]},{"Key":"clearly what","Fragments":["makes"]},{"Key":"what makes","Fragments":["a","a"]},{"Key":"mixed levels","Fragments":["of"]},{"Key":"of abstraction.","Fragments":["The"]},{"Key":"abstraction. The","Fragments":["IsLeap"]},{"Key":"The IsLeap","Fragments":["method"]},{"Key":"know at","Fragments":["a"]},{"Key":"high level","Fragments":["what"]},{"Key":"level what","Fragments":["makes"]},{"Key":"Here it","Fragments":["not"]},{"Key":"only knows","Fragments":["that"]},{"Key":"knows that","Fragments":["a"]},{"Key":"also knows","Fragments":["how"]},{"Key":"perform that","Fragments":["calculation."]},{"Key":"For an","Fragments":["exercise"]},{"Key":"this trivial","Fragments":["it's"]},{"Key":"trivial it's","Fragments":["not"]},{"Key":"big issue,","Fragments":["but"]},{"Key":"issue, but","Fragments":["for"]},{"Key":"with higher","Fragments":["complexity"]},{"Key":"higher complexity","Fragments":["it"]},{"Key":"complexity it","Fragments":["really"]},{"Key":"wouldn't think","Fragments":["it"]},{"Key":"would compile,","Fragments":["the"]},{"Key":"compile, the","Fragments":["tests"]},{"Key":"called `IsLeap`","Fragments":["which"]},{"Key":"to exist","Fragments":["here."]},{"Key":"This algorithm","Fragments":["is"]},{"Key":"very interesting.","Fragments":["I"]},{"Key":"interesting. I","Fragments":["think"]},{"Key":"Why call","Fragments":["ToCharArray?"]},{"Key":"call ToCharArray?","Fragments":["is"]},{"Key":"ToCharArray? is","Fragments":["there"]},{"Key":"performance gain?","Fragments":["LINQ"]},{"Key":"gain? LINQ","Fragments":["can"]},{"Key":"query strings","Fragments":["."]},{"Key":"have since","Fragments":["noticed"]},{"Key":"since noticed","Fragments":["it"]},{"Key":"refactored using","Fragments":["reflection"]},{"Key":"reflection making","Fragments":["this"]},{"Key":"this repetitive","Fragments":["code"]},{"Key":"repetitive code","Fragments":["much"]},{"Key":"much simpler.If","Fragments":["there"]},{"Key":"simpler.If there","Fragments":["is"]},{"Key":"any point","Fragments":["tot"]},{"Key":"point tot","Fragments":["this"]},{"Key":"tot this","Fragments":["exercise"]},{"Key":"Somehow just","Fragments":["discovered"]},{"Key":"discovered previous","Fragments":["iterations"]},{"Key":"iterations were","Fragments":["failing"]},{"Key":"were failing","Fragments":["Grade_returns_an_empty_list_if_there_are_no_students_in_that_grade()"]},{"Key":"failing Grade_returns_an_empty_list_if_there_are_no_students_in_that_grade()","Fragments":["which"]},{"Key":"Grade_returns_an_empty_list_if_there_are_no_students_in_that_grade() which","Fragments":["is"]},{"Key":"now fixed","Fragments":["here"]},{"Key":"test one","Fragments":["of"]},{"Key":"three inequalities","Fragments":["to"]},{"Key":"inequalities to","Fragments":["generate"]},{"Key":"your Equilateral","Fragments":["and"]},{"Key":"and Isosceles","Fragments":["tests"]},{"Key":"Isosceles tests","Fragments":["more"]},{"Key":"tests more","Fragments":["readable"]},{"Key":"Thanks @kali","Fragments":["see"]},{"Key":"@kali see","Fragments":["next"]},{"Key":"see next","Fragments":["iteration"]},{"Key":"list here","Fragments":["is"]},{"Key":"inefficient generating","Fragments":["list"]},{"Key":"generating list","Fragments":["resizes."]},{"Key":"list resizes.","Fragments":["and"]},{"Key":"resizes. and","Fragments":["you"]},{"Key":"need 1","Fragments":["master"]},{"Key":"1 master","Fragments":["for"]},{"Key":"master for","Fragments":["loop"]},{"Key":"loop not","Fragments":["two"]},{"Key":"test did","Fragments":["you."]},{"Key":"did you.","Fragments":["e.g."]},{"Key":"you. e.g.","Fragments":["if"]},{"Key":"e.g. if","Fragments":["you"]},{"Key":"see Roster","Fragments":["is"]},{"Key":"still externally","Fragments":["writeable"]},{"Key":"externally writeable","Fragments":["e.g.:-"]},{"Key":"And surely","Fragments":["ContainsKey()"]},{"Key":"surely ContainsKey()","Fragments":["test"]},{"Key":"ContainsKey() test","Fragments":["is"]},{"Key":"than try/catch","Fragments":["handling"]},{"Key":"try/catch handling","Fragments":["in"]},{"Key":"handling in","Fragments":["Grade(),"]},{"Key":"Grade(), you","Fragments":["already"]},{"Key":"Now avoids","Fragments":["an"]},{"Key":"avoids an","Fragments":["object"]},{"Key":"object instantiation","Fragments":["as"]},{"Key":"instantiation as","Fragments":["pointed"]},{"Key":"as pointed","Fragments":["out"]},{"Key":"This did","Fragments":["not"]},{"Key":"would pass","Fragments":["all","and"]},{"Key":"tests and,","Fragments":["checking,"]},{"Key":"and, checking,","Fragments":["it"]},{"Key":"checking, it","Fragments":["does"]},{"Key":"pass Detect_Anagrams()","Fragments":["nor"]},{"Key":"Detect_Anagrams() nor","Fragments":["Detect_multiple_anagrams()"]},{"Key":"sorted word","Fragments":["code"]},{"Key":"word code","Fragments":["twice"]},{"Key":"code twice","Fragments":["and"]},{"Key":"twice and","Fragments":["that"]},{"Key":"String.Concat use","Fragments":["here"]},{"Key":"here looks","Fragments":["fine"]},{"Key":"fine (especially","Fragments":["since"]},{"Key":"(especially since","Fragments":["is"]},{"Key":"since is","Fragments":["uses"]},{"Key":"is uses","Fragments":["a"]},{"Key":"StringBuilder internally,","Fragments":["I"]},{"Key":"internally, I","Fragments":["was"]},{"Key":"was misled","Fragments":["by"]},{"Key":"misled by","Fragments":["various"]},{"Key":"by various","Fragments":["StackOverflow"]},{"Key":"various StackOverflow","Fragments":["comments"]},{"Key":"StackOverflow comments","Fragments":["saying"]},{"Key":"Keep learning","Fragments":["that's"]},{"Key":"learning that's","Fragments":["important"]},{"Key":"that's important","Fragments":[":)"]},{"Key":"show all","Fragments":["the"]},{"Key":"the reasonable","Fragments":["ways"]},{"Key":"reasonable ways","Fragments":["to"]},{"Key":" ````Array\u003cint\u003e,","Fragments":["Array\u003cbool\u003e,"]},{"Key":"````Array\u003cint\u003e, Array\u003cbool\u003e,","Fragments":["BitArray````"]},{"Key":"Array\u003cbool\u003e, BitArray````","Fragments":["and"]},{"Key":"BitArray```` and","Fragments":["two"]},{"Key":"and two","Fragments":["Linq"]},{"Key":"two Linq","Fragments":["solutions"]},{"Key":"Linq solutions","Fragments":["using"]},{"Key":"using Aggregate.","Fragments":["I"]},{"Key":"Aggregate. I","Fragments":["like"]},{"Key":"like LinqBit","Fragments":["the"]},{"Key":"LinqBit the","Fragments":["best"]},{"Key":" **None**","Fragments":["require"]},{"Key":"**None** require","Fragments":["removal"]},{"Key":"require removal","Fragments":["of"]},{"Key":"removal of","Fragments":["any"]},{"Key":"any element","Fragments":["in"]},{"Key":" *This","Fragments":["is"]},{"Key":"*This is","Fragments":["one"]},{"Key":"few exercises","Fragments":["where"]},{"Key":"exercises where","Fragments":["a*"]},{"Key":"where a*","Fragments":["**for"]},{"Key":"a* **for","Fragments":["loop"]},{"Key":"**for loop","Fragments":["is"]},{"Key":"is justified**,","Fragments":["since"]},{"Key":"justified**, since","Fragments":["this"]},{"Key":"this involves","Fragments":["mutation"]},{"Key":"involves mutation","Fragments":["of"]},{"Key":"and none","Fragments":["obvious"]},{"Key":"none obvious","Fragments":["indexing."]},{"Key":"still directly","Fragments":["modifiable"]},{"Key":"for that,","Fragments":["I've"]},{"Key":"that, I've","Fragments":["removed"]},{"Key":"I've removed","Fragments":["the"]},{"Key":"unnecessary ToCharArray()","Fragments":["in"]},{"Key":"ToCharArray() in","Fragments":["the"]},{"Key":" Renamed","Fragments":["the"]},{"Key":"Renamed the","Fragments":["Dictionary"]},{"Key":"Dictionary so","Fragments":["it"]},{"Key":"Thought using","Fragments":["the"]},{"Key":"the ASCII","Fragments":["table"]},{"Key":"ASCII table","Fragments":["would"]},{"Key":"to start.","Fragments":["Going"]},{"Key":"start. Going","Fragments":["to"]},{"Key":"to refine","Fragments":["this"]},{"Key":"refine this","Fragments":["further."]},{"Key":"good, if","Fragments":["a"]},{"Key":"complicated. Nice","Fragments":["work"]},{"Key":"Nice work","Fragments":["over","and"]},{"Key":"work and","Fragments":["nice"]},{"Key":"and nice","Fragments":["use"]},{"Key":"good. My","Fragments":["only"]},{"Key":"```else``` on","Fragments":["the"]},{"Key":"and readable,","Fragments":["but"]},{"Key":" Note","Fragments":["that"]},{"Key":" returns","Fragments":["a"]},{"Key":"feedback, askingalot.","Fragments":["Those"]},{"Key":"askingalot. Those","Fragments":["are"]},{"Key":"consider. I","Fragments":["started"]},{"Key":"see them","Fragments":["after"]},{"Key":"them after","Fragments":["I"]},{"Key":"have single","Fragments":["method"]},{"Key":"math calculations,","Fragments":["as"]},{"Key":"calculations, as","Fragments":["well."]},{"Key":"well. (See","Fragments":["my"]},{"Key":"(See my","Fragments":["next"]},{"Key":"1) It's","Fragments":["generally"]},{"Key":"considered undesirable","Fragments":["to"]},{"Key":"undesirable to","Fragments":["create"]},{"Key":"public field.","Fragments":["The"]},{"Key":"field. The","Fragments":["idiomatic"]},{"Key":"The idiomatic","Fragments":["C#"]},{"Key":"C# style","Fragments":["is"]},{"Key":"is create","Fragments":["a"]},{"Key":"property with","Fragments":["a"]},{"Key":"getter and","Fragments":["a"]},{"Key":"a setter.","Fragments":["One"]},{"Key":"setter. One","Fragments":["benefit"]},{"Key":"One benefit","Fragments":["of"]},{"Key":"this style","Fragments":["is"]},{"Key":"is protecting","Fragments":["the"]},{"Key":"protecting the","Fragments":["internal"]},{"Key":"internal state","Fragments":["of"]},{"Key":"object. In","Fragments":["this"]},{"Key":"case, for","Fragments":["instance,"]},{"Key":"for instance,","Fragments":["if"]},{"Key":"if ```Seconds```","Fragments":["where"]},{"Key":"```Seconds``` where","Fragments":["a"]},{"Key":"a property,","Fragments":["you"]},{"Key":"property, you","Fragments":["could"]},{"Key":"could expose","Fragments":["the"]},{"Key":"expose the","Fragments":["value"]},{"Key":"of seconds","Fragments":["with"]},{"Key":"public getter,","Fragments":["but"]},{"Key":"getter, but","Fragments":["protect"]},{"Key":"but protect","Fragments":["the"]},{"Key":"being set","Fragments":["with"]},{"Key":"set with","Fragments":["a"]},{"Key":"number ```31557600```","Fragments":["is"]},{"Key":"```31557600``` is","Fragments":["used"]},{"Key":"in several","Fragments":["places"]},{"Key":"several places","Fragments":["throughout"]},{"Key":"places throughout","Fragments":["this"]},{"Key":"throughout this","Fragments":["class."]},{"Key":"this class.","Fragments":["What"]},{"Key":"class. What","Fragments":["does"]},{"Key":"it mean?","Fragments":["Is"]},{"Key":"mean? Is","Fragments":["there"]},{"Key":"Hamming distances","Fragments":["can"]},{"Key":"distances can","Fragments":["only"]},{"Key":"calculated on","Fragments":["strands"]},{"Key":"on strands","Fragments":["of"]},{"Key":"only kind","Fragments":["of"]},{"Key":"of acceptable","Fragments":["input"]},{"Key":"acceptable input","Fragments":["to"]},{"Key":"the ```Compute```","Fragments":["function"]},{"Key":"```Compute``` function","Fragments":["is"]},{"Key":"2 non-null","Fragments":["strings"]},{"Key":"non-null strings","Fragments":["of"]},{"Key":"call your","Fragments":["code"]},{"Key":"see below,","Fragments":["I"]},{"Key":"below, I","Fragments":["would"]},{"Key":"a ```0```","Fragments":["back"]},{"Key":"```0``` back","Fragments":["as"]},{"Key":"back as","Fragments":["the"]},{"Key":"the distance,","Fragments":["and"]},{"Key":"distance, and","Fragments":["I"]},{"Key":"I would,","Fragments":["incorrectly,"]},{"Key":"would, incorrectly,","Fragments":["think"]},{"Key":"incorrectly, think","Fragments":["the"]},{"Key":"var distance","Fragments":["="]},{"Key":"distance =","Fragments":["Hamming.Compute(\"coding"]},{"Key":"= Hamming.Compute(\"coding","Fragments":["is\","]},{"Key":"Hamming.Compute(\"coding is\",","Fragments":["\"fun\");"]},{"Key":"if (distance","Fragments":["=="]},{"Key":"(distance ==","Fragments":["0)"]},{"Key":"how succinct","Fragments":["your"]},{"Key":"succinct your","Fragments":["solution"]},{"Key":"two nitpicks","Fragments":["I'd"]},{"Key":"nitpicks I'd","Fragments":["have,"]},{"Key":"I'd have,","Fragments":["though,"]},{"Key":"have, though,","Fragments":["would"]},{"Key":"though, would","Fragments":["be"]},{"Key":"unnecessary using","Fragments":["statements,"]},{"Key":"of comments.","Fragments":["These"]},{"Key":"comments. These","Fragments":["are"]},{"Key":"both completely","Fragments":["personal"]},{"Key":"completely personal","Fragments":["preference,"]},{"Key":"version shows","Fragments":["real"]},{"Key":"shows real","Fragments":["improvement."]},{"Key":"real improvement.","Fragments":["I"]},{"Key":"improvement. I","Fragments":["like"]},{"Key":"private enum","Fragments":["and"]},{"Key":"lookup dictionary.","Fragments":["While"]},{"Key":"dictionary. While","Fragments":["they"]},{"Key":"private fields","Fragments":["for"]},{"Key":"fields for","Fragments":["each"]},{"Key":"each ratio,","Fragments":["I"]},{"Key":"ratio, I","Fragments":["think"]},{"Key":"have here","Fragments":["is"]},{"Key":"better separation","Fragments":["of"]},{"Key":"names you've","Fragments":["used"]},{"Key":"used throughout.","Fragments":["They"]},{"Key":"throughout. They","Fragments":["are"]},{"Key":"are clear","Fragments":["and"]},{"Key":"generally like","Fragments":["to"]},{"Key":"the class's","Fragments":["public"]},{"Key":"class's public","Fragments":["properties"]},{"Key":"public properties","Fragments":["and"]},{"Key":"methods at","Fragments":["the"]},{"Key":"top and","Fragments":["move"]},{"Key":"the private,","Fragments":["\"helper\""]},{"Key":"private, \"helper\"","Fragments":["items"]},{"Key":"\"helper\" items","Fragments":["toward"]},{"Key":"items toward","Fragments":["the"]},{"Key":"toward the","Fragments":["bottom."]},{"Key":"bottom. I","Fragments":["think"]},{"Key":"by letting","Fragments":["the"]},{"Key":"letting the","Fragments":["reader"]},{"Key":"reader \"drill-down\"","Fragments":["from"]},{"Key":"\"drill-down\" from","Fragments":["the"]},{"Key":"level to","Fragments":["the"]},{"Key":"the lower","Fragments":["levels."]},{"Key":"Thanks. You","Fragments":["are"]},{"Key":"hope North","Fragments":["Korea"]},{"Key":"North Korea","Fragments":["doesn't"]},{"Key":"Korea doesn't","Fragments":["use"]},{"Key":"just focused","Fragments":["on"]},{"Key":"existing Unit","Fragments":["Tests"]},{"Key":"Unit Tests","Fragments":["pass,"]},{"Key":"Tests pass,","Fragments":["which"]},{"Key":"pass, which","Fragments":["I"]},{"Key":"did. But","Fragments":["I"]},{"Key":"more based","Fragments":["on"]},{"Key":" Assert.That(Hamming.Compute(\"coding","Fragments":["is\","]},{"Key":"Assert.That(Hamming.Compute(\"coding is\",","Fragments":["\"fun\"),"]},{"Key":"is\", \"fun\"),","Fragments":["Is.EqualTo(-1));"]},{"Key":"I submit","Fragments":["will"]},{"Key":"submit will","Fragments":["make"]},{"Key":"Removed TE","Fragments":["method"]},{"Key":"TE method","Fragments":["and"]},{"Key":"and ordered","Fragments":["edges"]},{"Key":"ordered edges","Fragments":["to"]},{"Key":"edges to","Fragments":["make"]},{"Key":"make TriangleException","Fragments":["test"]},{"Key":"TriangleException test","Fragments":["simpler"]},{"Key":"are correct,","Fragments":["dunno"]},{"Key":"correct, dunno","Fragments":["what"]},{"Key":"dunno what","Fragments":["test"]},{"Key":"what test","Fragments":["I"]},{"Key":"test I","Fragments":["thought"]},{"Key":"simpler as","Fragments":["a"]},{"Key":"point, like","Fragments":["it,"]},{"Key":"it, updated","Fragments":["my"]},{"Key":"Following @leland's","Fragments":["sugestion"]},{"Key":"operations management","Fragments":["from"]},{"Key":"management from","Fragments":["````if"]},{"Key":"from ````if","Fragments":["(idPos.Count"]},{"Key":"````if (idPos.Count","Fragments":["=="]},{"Key":"(idPos.Count ==","Fragments":["1)````"]},{"Key":"be replced","Fragments":["with"]},{"Key":"replced with","Fragments":["a"]},{"Key":"keyed on","Fragments":["text"]},{"Key":"on text","Fragments":["and"]},{"Key":"text and","Fragments":["value"]},{"Key":"lambda containing","Fragments":["the"]},{"Key":"whole conversation","Fragments":["is"]},{"Key":"conversation is","Fragments":["null"]},{"Key":"or whitespace","Fragments":["could"]},{"Key":"whitespace could","Fragments":["be"]},{"Key":"top. There's","Fragments":["no"]},{"Key":"logic if","Fragments":["you've"]},{"Key":"you've been","Fragments":["passed"]},{"Key":"been passed","Fragments":["any"]},{"Key":"passed any","Fragments":["empty"]},{"Key":"any empty","Fragments":["string."]},{"Key":"whitespace before","Fragments":["trimming"]},{"Key":"before trimming","Fragments":["a"]},{"Key":"trimming a","Fragments":["string."]},{"Key":"is trailing","Fragments":["whitespace"]},{"Key":"trailing whitespace","Fragments":["TrimEnd()"]},{"Key":"whitespace TrimEnd()","Fragments":["will"]},{"Key":"TrimEnd() will","Fragments":["remove"]},{"Key":"remove them,","Fragments":["if"]},{"Key":"them, if","Fragments":["not,"]},{"Key":"Your IsInt()","Fragments":["logic"]},{"Key":"IsInt() logic","Fragments":["is"]},{"Key":"quite specific","Fragments":["to"]},{"Key":"strings containing","Fragments":["numbers"]},{"Key":"containing numbers","Fragments":["from"]},{"Key":"numbers from","Fragments":["the"]},{"Key":"include commas,","Fragments":["for"]},{"Key":"commas, for","Fragments":["example."]},{"Key":"Ultimately, your","Fragments":["IsCaps()"]},{"Key":"your IsCaps()","Fragments":["logic","function"]},{"Key":"IsCaps() logic","Fragments":["shouldn't"]},{"Key":"logic shouldn't","Fragments":["care"]},{"Key":"shouldn't care","Fragments":["if"]},{"Key":"are ints","Fragments":["in"]},{"Key":"letters within","Fragments":["it"]},{"Key":"upper case.","Fragments":["Try"]},{"Key":"case. Try","Fragments":["reworking"]},{"Key":"Try reworking","Fragments":["your"]},{"Key":"reworking your","Fragments":["IsCaps()"]},{"Key":"IsCaps() function","Fragments":["that"]},{"Key":"you'll find","Fragments":["it"]},{"Key":"Resharper ain't","Fragments":["perfect!"]},{"Key":"small piece","Fragments":["of"]},{"Key":"2. for","Fragments":["readability"]},{"Key":"readability i","Fragments":["introduced"]},{"Key":"i introduced","Fragments":["the"]},{"Key":"logic instead","Fragments":["of"]},{"Key":"of if-clauses","Fragments":["to"]},{"Key":"if-clauses to","Fragments":["achieve"]},{"Key":"achieve readability","Fragments":["and"]},{"Key":"quite sure,","Fragments":["if"]},{"Key":"sure, if","Fragments":["this"]},{"Key":"any bugs","Fragments":["etc."]},{"Key":"bugs etc.","Fragments":["The"]},{"Key":"etc. The","Fragments":["TestSuite"]},{"Key":"The TestSuite","Fragments":["said"]},{"Key":"TestSuite said","Fragments":["no"]},{"Key":"said no","Fragments":[".."]},{"Key":"no ..","Fragments":["I"]},{"Key":".. I","Fragments":["even"]},{"Key":"I even","Fragments":["successfully"]},{"Key":"even successfully","Fragments":["tried"]},{"Key":"successfully tried","Fragments":["another"]},{"Key":"tried another","Fragments":["testcase"]},{"Key":"another testcase","Fragments":["(Year"]},{"Key":"testcase (Year","Fragments":["2000)"]},{"Key":"forward for","Fragments":["comments,"]},{"Key":"for comments,","Fragments":["hints"]},{"Key":"comments, hints","Fragments":["..."]},{"Key":"try working","Fragments":["on"]},{"Key":"whitespace to","Fragments":["make"]},{"Key":"readable. Other","Fragments":["than"]},{"Key":"inner parentheses","Fragments":["if"]},{"Key":"parentheses if","Fragments":["you"]},{"Key":"this \"year","Fragments":["%"]},{"Key":"!= 0\"","Fragments":["instead"]},{"Key":"0\" instead","Fragments":["of"]},{"Key":"this \"!(year","Fragments":["%"]},{"Key":"\"!(year %","Fragments":["100"]},{"Key":"bool variable.","Fragments":["Just"]},{"Key":"variable. Just","Fragments":["place"]},{"Key":"Just place","Fragments":["return"]},{"Key":"place return","Fragments":["true/false;"]},{"Key":"return true/false;","Fragments":["at"]},{"Key":"true/false; at","Fragments":["the"]},{"Key":"Nice Code!!","Fragments":["It"]},{"Key":"Code!! It","Fragments":["is"]},{"Key":"lot longer","Fragments":["than"]},{"Key":"for sake","Fragments":["of"]},{"Key":"at cost","Fragments":["of"]},{"Key":"of verbosity.","Fragments":["I"]},{"Key":"verbosity. I","Fragments":["like"]},{"Key":"like `NotDivisibleBy`as","Fragments":["I"]},{"Key":"`NotDivisibleBy`as I","Fragments":["think"]},{"Key":"think `year.NotDivisibleBy(100)`","Fragments":["is"]},{"Key":"`year.NotDivisibleBy(100)` is","Fragments":["easier"]},{"Key":"scan than","Fragments":["`!year.DivisibleBy(100)`."]},{"Key":"If being","Fragments":["more"]},{"Key":"more strict","Fragments":["would"]},{"Key":"strict would","Fragments":["move"]},{"Key":"move helper","Fragments":["methods"]},{"Key":"class since","Fragments":["are"]},{"Key":"since are","Fragments":["not"]},{"Key":"not specific","Fragments":["to"]},{"Key":"to Year,","Fragments":["but"]},{"Key":"Year, but","Fragments":["not"]},{"Key":"really worth","Fragments":["it"]}],"prefix_len":2}