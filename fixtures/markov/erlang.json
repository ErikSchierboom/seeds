{"Nodes":[{"Key":" ","Fragments":["Looks","You","While","*","*","@elissa,","A","One","I'm","@aniyah","Should","Are","I","The","Wow.","are","*","*","Looks","That","Could","leap_year(Year)","case","{true,","{true,","_","end.","Slightly","misc","I","```erlang","leap_year(Year)","leap_year(Year)","leap_year(Year)","```","In","OK.","I","Example","```erlang","leap_year(Year)","divisible_by(Year,","and","or","divisible_by(Number,","Number","```","Example","```erlang","leap_year(Year)","leap_year(Year)","leap_year(Year)","leap_year(_)","```","In","Sorry,","Btw.","I","```erlang","%","%","%","divisible_by(Year,","andalso","orelse","```","Also","Other","Simple","The","Interesting","Good","The","Removed","I","Removed","Your","I","Also,","Should","This","Wow,","Actually","Finally","I","Realizing","i","You","I","1.","2.","Also","Pretty","This","Personally,","So","I'll","records","The","If","```erlang","start_link()","gen_server:start_link(?MODULE,","```","The","```erlang","direction(Robot)","gen_server:call(Robot,","position(Robot)","gen_server:call(Robot,","place(Robot,","gen_server:cast(Robot,","left(Robot)","gen_server:cast(Robot,","right(Robot)","gen_server:cast(Robot,","advance(Robot)","gen_server:cast(Robot,","control(Robot,","gen_server:call(Robot,","```","The","```erlang","handle_call(direction,","Reply","{reply,","handle_call(position,","Reply","{reply,","handle_call({control,","{NowFacing,","{reply,","```","And","```erlang","handle_cast({place,","{noreply,","handle_cast({turn,","NowFacing","{noreply,","handle_cast(advance,","NewPosition","{noreply,","```","This","```erlang","turn(left,","turn(left,","turn(left,","turn(left,","turn(right,","turn(right,","turn(right,","turn(right,","forward(north,","forward(south,","forward(east,","forward(west,","```","And","```erlang","parse(Plan)","plan_to_command(Plan,","plan_to_command([],","plan_to_command([$R|Rest],","plan_to_command([$L|Rest],","plan_to_command([$A|Rest],","plan_to_command(_,","```","If","I","I'm","When","-","-","Very","This","It","@grady","-","-","I","Since","On","This","`if`","Also,","```erlang","if","Year","%%","end.","```","Looks","I","This","See","RE:","The","Will","I","You","When","If","I","Since","I","When","Bottom","Second:","Third:","Fourth:","Me:","I","I","Looks","It","Rewritten","I","First","I","Essentially","*","*","There","The","Actually","I","As","Thank","I'd","leap_year(Y)","case","{0,","...","end.","Or","leap_year(Y)","when","Y","leap_year(Y)","when","Y","I'm","If","This","lists:map(F,","Or","accumulate(F,","@sydni","As","Thanks","I'd","That","to_rna(\"C\")","I","@janelle,","I","The","to_rna(STR)","?","By","Just","Nice","You","@tanner,","I","Works.","Interesting","I","Good","Good","*","*","Are","AFAIK","cool.","Yeah,","Interesting","Like","I","That's","Take","You","So","`in","called","in","I","Oops.","The","You","This","Zip","[1]:","Instead","```","sumOfMultiples(_Ms,","```","Works,","This","isMutipleOf","Aww,","Ditto","Really","Really","I'd","Maybe","Substituted","I","This","My","Have","Hi!","This","My","I've","Tail","You","@althea","Textbook","I","I","Looks","Documentation,","I","@laura,","The","WIP,","Bumping","oh","this","You","While","On","It's","Why","Don't","If","Nice","The","{ok,","{error,","Initial","Reverted","Maybe","Hmmmm,","Ah,","I","You","I","```erl","-define(is_trinary_digit(D),","to_decimal([],","to_decimal([H|T],","{H1,","DigitCtrbt","to_decimal(T,","to_decimal(_,","```","Why","LOL","erlang","This","Excellent","Why","@oral,","I","@marta","If","@samanta,","ahh...","Ahh","Did","I'm","You","I","I","Something","```","next_date({Year,","erlang:insert_element(1,","...","next_date({Year,","%","add_seconds_to(Date,","```","I","Giving","C","Lines","It's","Keep","I","The","This","I","Wouldn't","I","I'm","All","As","I'm","@estella","I","@ollie","@emilio,","I'll","Guards","Here","@mckenna","Here","```","1\u003e","[1,2,3]","2\u003e","[1,2,3,4]","3\u003e","[1,2,3]","4\u003e","[1,2,3]","5\u003e","[1,2,3]","6\u003e","**","erl_eval:'-inside-an-interpreted-fun-'(4)","7\u003e","```","That","@ervin","Guards","For","@alexandra,","@dillan,","In","How","@zoey,","I","You","-","-","-","[list","I","Koekelas,","But","A","They're","More","You","*","*","Pattern","I","I","1.","2.","@madge","I","But","The","If","```erlang","\u003c{AreaCode,ExchangeName,Remain}\u003e","let","%%","[45|Remain]","in","%%","call","(ExchangeName,","in","%%","[32|_cor3]","in","%%","[41|_cor4]","in","%%","call","(AreaCode,","in","[40|_cor6]","```","We","Thank","i'd","TIL","Infinitely","Here's","I","I","Hard","Good","`io_lib:format`","Astute","Hah!","In","What","Wow,","Mainly","https://twitter.com/macintux/status/633052736221806592","I","Amazed","Looking","Also,","For","Is","I've","@abdullah","`-spec","Means","returns","For","http://learnyousomeerlang.com/dialyzer","http://erlang.org/doc/reference_manual/typespec.html","Here","http://exercism.io/submissions/85327a4f24ac48d291572cc5e3307dd3","To","```erlang","1\u003e","#Fun\u003cerl_eval.6.54118792\u003e","2\u003e","3","3\u003e","**","```","versus","```erlang","4\u003e","#Fun\u003cerl_eval.6.54118792\u003e","5\u003e","**","in","called","```","Thanks","I'll","Regarding","The","@shannon","Reopening","Why","It","Liking","I","I","Yes","Lazy","I'll","Passes","@margaret","I","Also","Also","erlang","I've","@ilene","Consider","Why","@tracy,","```erl","-spec","cons(H,","```","So","A","Thanks","I","I","@dylan","Now","There's","I","Only","No","Is","Looks","I","I","Erlang","It","```","to_rna([H|T])","to_rna([])","roll($G)","roll($C)","roll($T)","roll($A)","```","Several","*","*","*","*","Further","*","*","Thanks!","I","At","Another,","```","to_rna(L)","```","This","Ah,","*","*","The","Also,","I","Yeah,","@easton","@hillary,","The","@archibald","I","`-compile(export_all).`","Your","Was","@keara,","What","Thank","I'm","Nice","Nice","Like","Very","Since","```erlang","map_dna_to_rna($G)","$C;","...","```","Also","```","to_rna([H|T])","```","Never","Alternative","Alternative","@heidi","Also","In","Also","```erlang","1\u003e","[101,769,233]","```","Thank","As","I","I","I","@gia","Passing","I","Went","Is","It","*","*","*","Experimented","Found","@esperanza","Added","Isn't","You'd","You","To","```erlang","accumulate(Fn,","accumulate(Fn,","```","I'll","can","Yup","Also","@joesph","Using","There's","The","The","Then","This","Unfortunately,","big","This","This","As","It's","In","*","*","This","Yes.","I'm","Show","My","I","I","I","My","Nothing","Very","Your","`timer:tc(accumulate,","{16942580,","[1,8,27,64,125,216,343,512,729,1000,1331,1728,2197,2744,","3375,4096,4913,5832,6859,8000,9261,10648,12167,13824,15625,","17576,19683|...]}`","My","`timer:tc(accumulate,","{8698354,","[1,8,27,64,125,216,343,512,729,1000,1331,1728,2197,2744,","3375,4096,4913,5832,6859,8000,9261,10648,12167,13824,15625,","17576,19683|...]}`","Given","*","*","Use","Alternative","Here","I","Need","I","Calculate","Yes,","Setup:","Stepping","Nice","Yes,","This","I","Did","If","I","So","The","How","Why","I'm","You","You","Take","I","What","Try","Try","Do","I","It's","How","@everardo,","Why","@alfredo,","@annabell","Can","@elisa,","*","*","use","Exactly","Looks","Thanks","List","It's","@alicia","I","Thanks","This","to_rna_char($G)","to_rna_char($C)","...","This","Hi,","Try","@cheyanne","silencing","I","1)","2)","And","I","*","*","*","*","*","Each","The","The","|","|--------------------|---------------|---------------|","|","|","|","|","|","####","*","*","*","*","*","@vickie","I've","The","Thank","The","The","\"Equal\"","hd_rec","hd_rec2","hd_fold","hd_lc","hd_fl","\"First","hd_rec","hd_rec2","hd_fold","hd_lc","hd_fl","\"Last","hd_rec","hd_rec2","hd_fold","hd_lc","hd_fl","The","@jessika","@jefferey","@godfrey","I","[Here](http://pastebin.com/nRKYJJxr)","@adelbert","But","AAAAA","I","That's","`test(\"All","\"All","hd_rec","hd_rec2","hd_fold","hd_lc","hd_fl","@monty","Implementation|(last","-------------------|------------------","hd_rec|80","hd_rec2|aborted","hd_fold|863","hd_lc|757","hd_fl|881","@katherine","```","hdFl","```","While","Results","hdRec","hdFold","hdLc","hdFl","update","*","*","use","Shortcut","And","\u003e","―","To","Some","@stuart,","Regarding","Not","\u003e","I","\u003e","`Accumulator`","No","Additionally,","Thanks","re:","re:","Thanks","If","In","That's","Honestly","Also,","I'm","`complement/1`","While","Have","I","If","http://www.erlang.org/doc/man/lists.html#filter-2","http://www.erlang.org/doc/man/lists.html#sum-1","Given","updated","Haskell","Feedback","Creating","Also,","\u003e","This","@claire,","*","*","D'oh,","With","Erlang","In","I","@winona,","Could","This","Look","I","Within","I","The","Edit:","Use","```","\u003e\u003e","!!","false","```","```","\u003e\u003e","false","```","rather","Ok,","This","The","FunEval","The","http://www.erlang.org/doc/efficiency_guide/myths.html","See","After","I","Non","The","The","However","I","For","When","In","Nice","I","```erlang","leap_year(Year)","evenly_divisible(Year,","andalso","orelse","```","Thanks","Task","The","The","Not","```erlang","leap_year(Year)","```","While","```","leap_year(Year)","true;","...","```","Bonus","Nice.","Have","@freddie","I","This","However,","Obviously","Why","\u003etail","problem","thanks","Yeah,","the","It","Another","Can","I","Otherwise","Good","Simplify","This","```","to_rna([First|Rest])","Rna","to_rna(Rest,","```","Refactored","1.","2.","Erlang","Nicely","Thanks!","I","Probably","There","I","Hi","To","*","```erlang","leap_year(Year)","%%","leap_year(Year)","%%","```","*","```erlang","case","{0,","{_,","end","```","Thank","You","Previous","Keep","provided","Solve","Hi.","Dryed","It's","Better","We","Okay,","Also,","`[Candidate|keep(Fn,","Like","I","how","The","I","Good","Usually","In","The","Happy","-----","_This","*","*","Nice","-","-","-","you","*","*","After","Would","Nice","Wow,","If","Also","This","Consider","I","It","Code","On","Taking","Looking","I","First,","Now","*","*","*","Since","I'd","thank","I","`is_silence`","Having","```erlang","case","{true,","end.","```","Yeah,","*","*","*","I","The","Very","Thanks.","\u003e","–","With","See","-","-","[1]:","[2]:","[3]:","I","\u003e","I","Consider","Two","1.","2.","You","The","I","I","If","Checking","*","*","*","*","I","Added","Consider","Don't","More","I'd","The","This","erlang","Ok,","This","@margret","I'm","Usually","In","The","Happy","-----","_This","Doing","Oh,","Looks","@halie","I","It","It's","`","@cody,","While","I","I","There","One","Usually","In","The","Happy","-----","_This","Nice.","Does","Using","Why","@stacey,","maybe","1.","2.","Any","The","This","@wilhelm","Out","Nice,","So","Instead","Hi,","case","true","false","end,","When","On","Using","I","Great","Your","i","There","I","Besides","I","`lists:reverse`","Nice,","Consider","erlang","I","I'm","Do","@dwight","Couple","On","`convert/2`","I'm","I","Good","`Ls`","Why","```erlang","leap_year(Year)","((Year","```","Also,","-","-","Thanks!","Catch","Consider","Also,","I","Nice","I","I","Also,","One","Maybe","This","For","You","Add","Because","Also","you","Why","How","As","You","Hint:","`square/1`","```","10\u003e","{12,18446744073709551615}","11\u003e","{8,18446744073709551615}","```","*","*","*","*","*","I","No","Bad","Good","The","This","Cool","Only","Naming!","Have","None","Why","Thanks","Overall,","Still","Compared","Using","Personally","*","*","Hah,","You","That","Nice.","Should","Yeah,","Is","`string()`","Your","The","But","Will","I","I","@kallie","Nice,","Good","Do","Great","I","```","fun(X)","```","I","I","I","I","If","A","-","-","-","I","Doesn't","At","Add","Yeah,","I","I","@javier","*","*","*","*","TIL","Indeed","As","There","As","The","You","hi,","use","I","@orpha","Nice","@haylee","erlang","You","Thanks","```","dna_tests.erl:11:","dna_tests.erl:12:","dna_tests.erl:12:","```","I","Allow","Update:","do","answered","As","More","Using","Bit","Supports","Reopening","Best","This","@viva","I","Well,","The","```erlang","encode_numbers_test()","?assertEqual(\"gvhgr","encode(\"Testing,","```","Decoded","@salma","use","Reopening","This","TODO:","-","-","-","\u003e","And","TODO:","Maybe","Why","Good","Re:","Any","You","I've","Note","In","You","```","edoc:file(\"robot_simulator.erl\",","```","I","Thanks!","I","Thanks","Other","How","Newer","I","We","[1]:","[2]:","Ah,","An","Cool.","Rough","Clean,","I","That's","I","I","Yes,","Mostly","*","*","Indeed.","(It","I","Changes:","*","*","You","@nat","Consider","A","What","There","For","Even","Those","Hard","Looking","I","Can","Reopening","Thought","Thanks","added","solved","better","Reopening","You","I","For","It","Would","I","-","-","-","Consider","Good","isn't","erlang","Add","I'm","But","```erl","divides(M,","M","leap_year(Year)","(divides(Year,","true;","lea_year(_Year)","```","This","```erl","leap_year(Year)","case","true","false","end","```","Producing","Feel","@maybelle","Guards","So","If","This","@torey","The","So","@ophelia","So","```erl","square(X)","```","Or,","erlang","@howard","Hadn't","This","I","Of","http://erlang.org/doc/reference_manual/typespec.html","But","Very","@christophe","This","Lots","@vidal:","Concatenating","Doing","So,","You'll","Yeah,","Do","This","Adding","@rahsaan","@jonatan,","@trinity","It's","Yeah,","`is_divider`","Maybe","Exported","What","@braden","You","```erl","-export_type([rna/0,","```","Yeah,","You","I","On","$G","Add","*","*","*","you","Thanks","@juliet,","@kyra","*","Quoting","\u003e","anyone","@cordia","I","Give","I","It's","```haskell","4","```","since","Thanks,","@sierra","I","What","@santina","Usually","In","The","Happy","-----","_This","This","This","No","Thank","@ron","This","Good","Although","A","is","Don't","yes,","This","my","There","Yeah,","@fleta","I","Do","I","Small","I","`elem_a()`","I","-spec","A","accumulate:accumulate(fun","[\"1\",\"2\",\"3\"]","Your","```erl","badfu","accumulate:accumulate(fun","A","end,","```","That","And,","ok,","Unfortunately","-spec","Thats","`integer()`","You","I","OK,","Can","Also,","I","I","Are","Or","`square()`","I'm","Nice","Note","You","Looking","I","For","I'm","Closed","I","Of","Nice,","Nice.","Wonderful!","`nucleotide_counts`","Vastly","Do","Thinking","Given","Maybe","Oh,","Dramatically","You","I","is","Did","Hi","As","cool","Since","By","Also","Usually","In","The","Happy","-----","_This","I","Only","I","yea,","Looks","I","Appending","Sometimes","Using","Also,","Thanks,","This","You","Could","You","Take","When","Check","I","It's","I","I","The","Maybe","```erlang","case","{true,","...","end","```","I","Take","Trying","This","I","It","hamm_distance([H","hamm_distance([_","Using","@jerad","`","A","Nice,","Nicely","Nice","Crap!","Did","Looks","Extra","I","Best","I","Check","```case","$G","etc...","```","I","Not","Ah,","The","This","Interesting","There","1.","2.","I","There","I","While","Okay,","Just","Well,","Need","Comments","Did","Your","```","case","{true,_,_}","{_,true,_}","{_,_,true}","{_,_,_}","end.","```","@trey,","Thanks","Also,","You","```erlang","get_response(Statement,","```","I","@jackie","I","I'm","Best","Success,","I","I","This","Thanks","I","Personally","Despite","Fixed","In","This","I","Interesting","I","My","I","You","Trivially:","The","Getting","If","```","{AreaCode,","{Exchange,","{AreaCode,","```","I","This","Good","Is","Usually","In","The","Happy","-----","_This","Why","Perhaps","Because","According","According","```plain","Integer","|","|","```","This","Additionally","\u003e","\u003e","\u003e","\u003e","\u003e","\u003e","\u003e","Considering","Anyway,","In","```erlang","-module(leap).","-export([leap_year/1]).","-spec","%%","leap_year(Year)","```","@sidney","@jedediah","Usually","In","The","Happy","-----","_This","The","Nit:","`classify_char`","Do","I","Thanks,","I","It","Additional","Can","I","```leap_year(_)-\u003efalse.","```?assertNot(leap:leap_year(\"2400\"))```","I","the","I","You","I","This","Adding","I","Nice,","Although","A","Really","Only","Hi","http://learnyousomeerlang.com/dialyzer","Thanks","hadn't","Had","I","To","Nice","```leap_year(_)-\u003efalse.","```?assertNot(leap:leap_year(\"2400\"))```","Now","Thanks","I'm","I","Nice","Usually","In","The","Happy","-----","_This","A","May","Silently","(I","Why","This","Erlang","Interesting","Spot","@taurean-Zhou","@elvie,","Thank","How","Made","Removed","I","Get","No","Function","Maybe","Fine,","A","[Function(X)","Good","Great","I","What","That's","TODO:","instead","*","*","*","I","I","Maybe","\u003eKeep","List","Either","Well","You","you","I'm","Usually","In","The","Happy","-----","_This","Usually","In","The","Happy","-----","_This","I","Consider","you","*","*","*","When","Yeah,","In","Its","Pretty","I","Good","i","-","I","```","leap_year(Year)","true;","....","```","I","http://learnyousomeerlang.com/syntax-in-functions","I'm"]},{"Key":" Looks","Fragments":["good.","great,","nice","like","good","very","good.","really","good,","good."]},{"Key":"Looks good.","Fragments":[":heart:","You"]},{"Key":"good. :heart:","Fragments":["list"]},{"Key":":heart: list","Fragments":["comprehensions."]},{"Key":" You","Fragments":["are","are","can","can","could","can","might","realise","could","can","seem","might","may","don't","might","should","could","can","are","sort","have","could","probably","can","should","could","are","can","should","might","could","can","can","could","define","should","should"]},{"Key":"You are","Fragments":["appending","doing","right.","iterating","totally"]},{"Key":"are appending","Fragments":["n-times"]},{"Key":"appending n-times","Fragments":["to"]},{"Key":"n-times to","Fragments":["`Acc`"]},{"Key":"to `Acc`","Fragments":["where","on"]},{"Key":"`Acc` where","Fragments":["n"]},{"Key":"where n","Fragments":["is","is","is"]},{"Key":"n is","Fragments":["the","the","the"]},{"Key":"is the","Fragments":["length","use","better","canonical","number.","canonical","fact","caller)?","rationale","same","length","good","latter","culprit?","best","core","convention","base","rationale","reason","best","size","caller","reason","same","benefit","most","length","new","one"]},{"Key":"the length","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"length of","Fragments":["`Ls`","the","the","my","the","the","the","the"]},{"Key":"of `Ls`","Fragments":["and"]},{"Key":"`Ls` and","Fragments":["append"]},{"Key":"and append","Fragments":["is"]},{"Key":"append is","Fragments":["an","O(n)."]},{"Key":"is an","Fragments":["O(n)","exception.","example.","example","instance","automated","optimization","automated","automated","excellent","interesting","automated","automated","expensive","automated","automated","automated","automated","automated"]},{"Key":"an O(n)","Fragments":["operation","length","operation,"]},{"Key":"O(n) operation","Fragments":["which"]},{"Key":"operation which","Fragments":["makes"]},{"Key":"which makes","Fragments":["your","them","your"]},{"Key":"makes your","Fragments":["`accumulate/2`","implementation","function","accumulate"]},{"Key":"your `accumulate/2`","Fragments":["O(n²).","would"]},{"Key":"`accumulate/2` O(n²).","Fragments":["There"]},{"Key":"O(n²). There","Fragments":["are"]},{"Key":"There are","Fragments":["ways","several","some","ongoing","various","a","more"]},{"Key":"are ways","Fragments":["to"]},{"Key":"ways to","Fragments":["implement","improve","write"]},{"Key":"to implement","Fragments":["it","myself.","it","the"]},{"Key":"implement it","Fragments":["in","using","O(n)","as:"]},{"Key":"it in","Fragments":["O(n).","LFE,","a","future,","the","the","the","the","a","conjunction","less"]},{"Key":" While","Fragments":["I","there's","the","there","not","it's","\u003cstrong\u003e++\u003c/strong\u003e"]},{"Key":"While I","Fragments":["think","am","have"]},{"Key":"I think","Fragments":["`is_anagram/1`","using","you","this","this","you","a","your","you","the","is","using","using","the","I","the","of","about","about","one","that","they","it","my","it","there's","this","that","I","in","I","it","recursive","one","the","records","what","it'd","this","`NewStatus`","are","solution","this","there","`value/2`","this","this","this","to_rna/2","it's","it","the","you'll","this","there's","this","you","this","I","it's","it's","`list(dna_char)`","this","you'll","one","the","I","this","this","it","this","it's","you","the","terminology","it's","this","there","expressing","it","this","it's","the","I","you","i'd"]},{"Key":"think `is_anagram/1`","Fragments":["is"]},{"Key":"`is_anagram/1` is","Fragments":["rather"]},{"Key":"is rather","Fragments":["cute,"]},{"Key":"rather cute,","Fragments":["I"]},{"Key":"cute, I","Fragments":["see"]},{"Key":"I see","Fragments":["two","from","no","that","the","a","`Ls`","`Ls`","now","most","a","guards","that","that"]},{"Key":"see two","Fragments":["problems"]},{"Key":"two problems","Fragments":["with"]},{"Key":"problems with","Fragments":["it:","the","implementing"]},{"Key":" *","Fragments":["You're","You're","When","For","`count/3`","Implementing","You","Instead","Please","Also","length(Str)","You","You","You","In","If","In","Can","Implemented","Length","Apparently,","For","As","Made","Simplified","Consider","Consider","`hd_rec`","`hd_rec2`","`hd_fold`","`hd_lc`","`hd_fl`","The","Both","I","Letting","The","For","As","You","Regenerating","use","you","Have","Personally","Patternmatching","Everytime","While","`extract_alphanumeric/1`","`encode`","use","matching","_Year","returned","used","coded","exported","The","Maps","suggest:","Converting","suggest:","https://github.com/inaka/erlang_guidelines#avoid-if-expressions","https://github.com/inaka/erlang_guidelines#avoid-boolean-parameters","replaced","added","Instead","Also","Added","Added","Replaced","Calculate","Using","You","Is","Added","within","rather","use","Why","Why","And"]},{"Key":"* You're","Fragments":["leaking","doing"]},{"Key":"You're leaking","Fragments":["implementation"]},{"Key":"leaking implementation","Fragments":["details:"]},{"Key":"implementation details:","Fragments":["`find/3`"]},{"Key":"details: `find/3`","Fragments":["needs"]},{"Key":"`find/3` needs","Fragments":["to"]},{"Key":"needs to","Fragments":["know","throw","pushed","keep","pass","be","be"]},{"Key":"to know","Fragments":["`is_anagram/1`","how","the"]},{"Key":"know `is_anagram/1`","Fragments":["only"]},{"Key":"`is_anagram/1` only","Fragments":["works"]},{"Key":"only works","Fragments":["with","for"]},{"Key":"works with","Fragments":["a"]},{"Key":"with a","Fragments":["lowercase","case","tail","not","better","better","cleverer","char","little","list","single","lowercase","billion","tail","tail","helper","question","tail","comment.","tail","lower-cased","string"]},{"Key":"a lowercase","Fragments":["subject","letter,"]},{"Key":"lowercase subject","Fragments":["and"]},{"Key":"subject and","Fragments":["candidate;"]},{"Key":"You're doing","Fragments":["duplicate"]},{"Key":"doing duplicate","Fragments":["work:"]},{"Key":"duplicate work:","Fragments":["the"]},{"Key":"work: the","Fragments":["subject"]},{"Key":"the subject","Fragments":["is"]},{"Key":"subject is","Fragments":["lowercased"]},{"Key":"is lowercased","Fragments":["and"]},{"Key":"lowercased and","Fragments":["sorted","sorted"]},{"Key":"and sorted","Fragments":["for","version"]},{"Key":"sorted for","Fragments":["every"]},{"Key":"for every","Fragments":["candidate.","candidate?","single","function"]},{"Key":" @elissa,","Fragments":["it"]},{"Key":"@elissa, it","Fragments":["seems"]},{"Key":"it seems","Fragments":["that","that"]},{"Key":"seems that","Fragments":["this","`allergies(2)`"]},{"Key":"that this","Fragments":["submission","is","code","actually","is","program","week,","is","example","is","is"]},{"Key":"this submission","Fragments":["is"]},{"Key":"submission is","Fragments":["against","3"]},{"Key":"is against","Fragments":["an"]},{"Key":"against an","Fragments":["older"]},{"Key":"an older","Fragments":["version"]},{"Key":"older version","Fragments":["of"]},{"Key":"version of","Fragments":["the","your","Erlang","a"]},{"Key":"of the","Fragments":["tests,","parentheses","work","following","robot","gen_server","repetitiveness.","exercise.","idiom.","expression","predicates","list.","function","input","possible","list","list","key.","exercise.","story.","letter","second.","\"is","Erlang","function","callers","Erlang","following","list","names","perils","roman","real","problem","fail","result","list.","string.","string,","changing","characters","list.","recursion","sequence.","question.","foldl.","function-clauses","*intent*","code","factors,","result","queue!","names","list","performance","sequences).","sequences","recursive","time","mapping","mapping","noise","record","very","Atbash","call","current","list.","problem","guard","maximum","docs,","problem","erlang","recursive","empty","other.","function","guard","form,","same","encoded","list","differences","list","unicode","problem","raw","fact","challenge.","key","taught","return","first","list","sequence","module.","function.","code","given","same","same","same","`InputList`,","problem;","key","type","value.","same","greatest","patterns","sum_list/1","function","lists:filter/2","integer","nested","checks","Gregorian","arguments","expression","boolean","given","problem.","combination","stupid","standard","language.","first"]},{"Key":"the tests,","Fragments":["that","but","but"]},{"Key":"tests, that","Fragments":["didn't"]},{"Key":"that didn't","Fragments":["test"]},{"Key":"didn't test","Fragments":["for"]},{"Key":"test for","Fragments":["the","a","leap","leap"]},{"Key":"for the","Fragments":["spacing.","other","mapping","empty","list","same","exported","comment!","above","sake","eye","feedback.","failure).","failure.","review.","composition","detailed","function,","help","heads","follow-up","function","11","guard?","two","solution","tail","simple","entire","recursive","`is_integer`","feedback!","nitpick,","1st","comment,","feedback.","feedback,","review.","sake","extra","first","total,","bit","all","second","tip!","4","recursion","map","base","planets","man","Riak","record.","bit-shifting","year.","comment!","define","feedback","feedback!","wrong","translation"]},{"Key":" A","Fragments":["constant","few","snoc","few","key","more","and","+","couple","more","little","list"]},{"Key":"A constant","Fragments":["(in"]},{"Key":"constant (in","Fragments":["terms"]},{"Key":"(in terms","Fragments":["of"]},{"Key":"terms of","Fragments":["`-define`)","`count/2`","one","\"Erlanginess\"?","the","the","`keep`."]},{"Key":"of `-define`)","Fragments":["can"]},{"Key":"`-define`) can","Fragments":["not"]},{"Key":"can not","Fragments":["be"]},{"Key":"not be","Fragments":["exportet,","enough","compared.","worth","considered","obvious","as","as","as"]},{"Key":"be exportet,","Fragments":["but"]},{"Key":"exportet, but","Fragments":["some"]},{"Key":"but some","Fragments":["`version/0`"]},{"Key":"some `version/0`","Fragments":["which"]},{"Key":"`version/0` which","Fragments":["just"]},{"Key":"which just","Fragments":["returns"]},{"Key":"just returns","Fragments":["a"]},{"Key":"returns a","Fragments":["constant","boolean.","list,","list","list","`list()`.","character."]},{"Key":"a constant","Fragments":["value"]},{"Key":"constant value","Fragments":["can"]},{"Key":"value can","Fragments":["be"]},{"Key":"can be","Fragments":["exported","cleaned","collapsed","solved","empty,","conned","collapsed.","named","negativ.","used","supported","reordered","written","extremely","thought","replaced","a"]},{"Key":"be exported","Fragments":["of","as","as"]},{"Key":"exported of","Fragments":["course."]},{"Key":" One","Fragments":["could","thing","other"]},{"Key":"One could","Fragments":["open","argue"]},{"Key":"could open","Fragments":["an"]},{"Key":"open an","Fragments":["issue"]},{"Key":"an issue","Fragments":["on","now"]},{"Key":"issue on","Fragments":["https://github.com/exercism/xerlang"]},{"Key":" I'm","Fragments":["on","not","not","not","not","not","by","newbie","not","find","struggling","not","aware","with","not","not","somewhat","not","not","still"]},{"Key":"I'm on","Fragments":["mobile,"]},{"Key":"on mobile,","Fragments":["so"]},{"Key":"mobile, so","Fragments":["I"]},{"Key":"so I","Fragments":["prefer","didn't","will","omitted","renamed","wouldn't","cannot","certainly","\"corrected\"","suppose","hope","transfered","hope","rarely","refactored","could","included"]},{"Key":"I prefer","Fragments":["to","these","the","the","this","an","your","the"]},{"Key":"prefer to","Fragments":["don't","have","fail"]},{"Key":"to don't","Fragments":["do"]},{"Key":"don't do","Fragments":["it","it"]},{"Key":"do it","Fragments":["right","recursively.","correctly,","manually.","serially,","in"]},{"Key":"it right","Fragments":["now","now.","above"]},{"Key":"right now","Fragments":[";)"]},{"Key":" @aniyah","Fragments":["I'm"]},{"Key":"@aniyah I'm","Fragments":["doing"]},{"Key":"I'm doing","Fragments":["the","these"]},{"Key":"doing the","Fragments":["ruby","spacing?","work","manual","math","census,","exercises"]},{"Key":"the ruby","Fragments":["track"]},{"Key":"ruby track","Fragments":["as"]},{"Key":"track as","Fragments":["well."]},{"Key":"as well.","Fragments":["There","I"]},{"Key":"well. There","Fragments":["they"]},{"Key":"There they","Fragments":["use"]},{"Key":"they use","Fragments":["constant","`吗`"]},{"Key":"use constant","Fragments":["VERSION"]},{"Key":"constant VERSION","Fragments":["for"]},{"Key":"VERSION for","Fragments":["matters"]},{"Key":"for matters","Fragments":["like"]},{"Key":"matters like","Fragments":["this."]},{"Key":" Should","Fragments":["the","the","the"]},{"Key":"Should the","Fragments":["erlang","individual","base","comment"]},{"Key":"the erlang","Fragments":["do","runtime","docs](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67021),"]},{"Key":"erlang do","Fragments":["something"]},{"Key":"do something","Fragments":["like","similar","similar","more"]},{"Key":"something like","Fragments":["that?","`divisible_by(Number,","[[[[[\"A\"],","the","this:","`when"]},{"Key":" Are","Fragments":["constants","there","there"]},{"Key":"Are constants","Fragments":["exportable"]},{"Key":"constants exportable","Fragments":["or"]},{"Key":"exportable or","Fragments":["would"]},{"Key":"or would","Fragments":["it"]},{"Key":"would it","Fragments":["be","make"]},{"Key":"it be","Fragments":["better","cleaner"]},{"Key":"be better","Fragments":["to","for","split","to","to","than","instead"]},{"Key":"better to","Fragments":["just","be","use","just","not","use","crash"]},{"Key":"to just","Fragments":["export","write:","hardcode"]},{"Key":"just export","Fragments":["a"]},{"Key":"export a","Fragments":["version"]},{"Key":"a version","Fragments":["method","that"]},{"Key":"version method","Fragments":["that"]},{"Key":"method that","Fragments":["just","you"]},{"Key":"that just","Fragments":["returned"]},{"Key":"just returned","Fragments":["an"]},{"Key":"returned an","Fragments":["integer?"]},{"Key":" I","Fragments":["have","think","think","would","could","added","thought","wasn't","have","did","liked","think","think","like","feel","did","really","altered","changed","would","decided","like","used","could","see","believe","felt","would","like","like","often","had","think","like","also","like","think","don't","really","wasn't","tend","really","wasn't","know","wasn't","can't","just","agree","believe","wanted","have","was","love","like","like","like","really","don't","suspect","must","might","should","would","hear","think","did","like","find","think","see","don't","decided","think","did","will","hope","didn't","think","used","considered","agree","tested","tried","like","think","think","tried","do","didn't","would","feel","wonder","like","agree","learned","feel","would","believe","agree","think","get","don't","cleaned","like","will","like","should","wouldn't","think","like","wasn't","wanted","should","started","really","think","like","think","think","don't","think","wouldn't","considered","got","don't","use","was","think","saw","guess","believe","really","think","see","think","love","rarely","don't","haven't","think","always","also","thought","think","know","wonder","also","mostly","like","wasn't","just","think","agree","don't","realized","noticed","like","realize","found","dislike","like","have","do","think","was","couldn't","feel","missed","need","like","did","tried","might","absolutely","feel","totally","opted","find","like","can","like","like","like","am","considered","did","think","find"]},{"Key":"I have","Fragments":["filled","plans","some","any","guards","to","noticed","something","them","seen","with","suitable","multiple","a","been","a","seen","ever","to","one","a","refactored"]},{"Key":"have filled","Fragments":["an"]},{"Key":"filled an","Fragments":["issue"]},{"Key":"issue now","Fragments":["(https://github.com/exercism/xerlang/issues/73),"]},{"Key":"now (https://github.com/exercism/xerlang/issues/73),","Fragments":["let's"]},{"Key":"(https://github.com/exercism/xerlang/issues/73), let's","Fragments":["see"]},{"Key":"let's see","Fragments":["what"]},{"Key":"see what","Fragments":["the","it's","I","would","this"]},{"Key":"what the","Fragments":["answer","tradeoff","designer","purpose","bounds","mapping"]},{"Key":"the answer","Fragments":["will"]},{"Key":"answer will","Fragments":["be,"]},{"Key":"will be,","Fragments":["but"]},{"Key":"be, but","Fragments":["I","I"]},{"Key":"but I","Fragments":["fear","do","found","used","think","want","wonder","love","really","think","see","am","like","will","could","understand","think","feel","wonder","respectfully","didn't","don't","get","don't","think","think","am","personally","wanted","prefer","think","understood","agree","do","don't","like","would","don't","prefer","agree"]},{"Key":"I fear","Fragments":["that"]},{"Key":"fear that","Fragments":["there"]},{"Key":"that there","Fragments":["won't","are","could","would"]},{"Key":"there won't","Fragments":["be"]},{"Key":"won't be","Fragments":["happen","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging","encouraging"]},{"Key":"be happen","Fragments":["that"]},{"Key":"happen that","Fragments":["much."]},{"Key":" The","Fragments":["last","similarity","main","biggest","public","calls","solution","function","accumulate","use","tests","only","use","way","function","assignement","reason","exported","base","only","first","second","lesson","obvious","results","lesson","nested","reason","good","list","tail","first","second","use","next","motivation","core","commented","next","next","reason","first","spec","smallest","readme","terminology","next","next","nested","solution","split","next","next","motivation","next","next","next"]},{"Key":"The last","Fragments":["real","test"]},{"Key":"last real","Fragments":["commit"]},{"Key":"real commit","Fragments":["to"]},{"Key":"commit to","Fragments":["xerlang"]},{"Key":"to xerlang","Fragments":["has"]},{"Key":"xerlang has","Fragments":["been"]},{"Key":"has been","Fragments":["a","an"]},{"Key":"been a","Fragments":["while,"]},{"Key":"a while,","Fragments":["also"]},{"Key":"while, also","Fragments":["my"]},{"Key":"also my","Fragments":["PR"]},{"Key":"my PR","Fragments":["from"]},{"Key":"PR from","Fragments":["3"]},{"Key":"from 3","Fragments":["days"]},{"Key":"3 days","Fragments":["ago"]},{"Key":"days ago","Fragments":["is"]},{"Key":"ago is","Fragments":["still"]},{"Key":"is still","Fragments":["pending","generated","only","too"]},{"Key":"still pending","Fragments":["and"]},{"Key":"pending and","Fragments":["uncommented"]},{"Key":"and uncommented","Fragments":[":("]},{"Key":" Wow.","Fragments":["much"]},{"Key":"Wow. much","Fragments":["cleaner"]},{"Key":"much cleaner","Fragments":["then","and","using"]},{"Key":"cleaner then","Fragments":["my"]},{"Key":"then my","Fragments":["solution."]},{"Key":" are","Fragments":["you"]},{"Key":"are you","Fragments":["doing","using","liking","sure","uploading"]},{"Key":"you doing","Fragments":["the"]},{"Key":"* When","Fragments":["calling"]},{"Key":"When calling","Fragments":["`square(4)`"]},{"Key":"calling `square(4)`","Fragments":["it"]},{"Key":"`square(4)` it","Fragments":["gets"]},{"Key":"it gets","Fragments":["“expanded”","there,"]},{"Key":"gets “expanded”","Fragments":["to"]},{"Key":"“expanded” to","Fragments":["`2"]},{"Key":"to `2","Fragments":["*"]},{"Key":"`2 *","Fragments":["2"]},{"Key":"* 2","Fragments":["*","*"]},{"Key":"2 *","Fragments":["2","1`"]},{"Key":"* 1`","Fragments":["which"]},{"Key":"1` which","Fragments":["you"]},{"Key":"which you","Fragments":["can","might"]},{"Key":"you can","Fragments":["write","see","call","just","accomplish","just","do","make","assume","avoid","do","specify","write","get","call","improve","improve","always","do","see","just","assume","replace","add","make","forgive","filter","use","use","pattern","get","use","specify","filter","add","work"]},{"Key":"can write","Fragments":["as","it"]},{"Key":"write as","Fragments":["`2^3"]},{"Key":"as `2^3","Fragments":["*"]},{"Key":"`2^3 *","Fragments":["1`,"]},{"Key":"* 1`,","Fragments":["which"]},{"Key":"1`, which","Fragments":["again"]},{"Key":"which again","Fragments":["is"]},{"Key":"again is","Fragments":["simply"]},{"Key":"is simply","Fragments":["`2^3`.","desugared"]},{"Key":"simply `2^3`.","Fragments":["Can"]},{"Key":"`2^3`. Can","Fragments":["you"]},{"Key":"Can you","Fragments":["use","revise","think","think","come","think","make","imagine","come","see","come","think","fix","imagine","come","get","add","come"]},{"Key":"you use","Fragments":["this","the","two.","`if`","`HiPE`.","an","types"]},{"Key":"use this","Fragments":["fact","to"]},{"Key":"this fact","Fragments":["to"]},{"Key":"fact to","Fragments":["make"]},{"Key":"to make","Fragments":["your","one","for","this","the","sure","this","the","sure","sure","the","the","everything","the","the","sure","those","sure","sure","a","sure","sure","sure","sure","sure","sure"]},{"Key":"make your","Fragments":["`square/1`"]},{"Key":"your `square/1`","Fragments":["`O(1)`"]},{"Key":"`square/1` `O(1)`","Fragments":["instead"]},{"Key":"`O(1)` instead","Fragments":["of"]},{"Key":"instead of","Fragments":["your","`trunc(math:pow(2,","just","reversing,","`string:concat(to_rna([Nucleotide]),","`\"G\"`","`++`?","case","on","matching","a","`lists:keyfind/3`.","the","`?`.","65","integers.","65","integer()","a","an","the","filter","`lists:filter/2`","silently","`lists:last()`.","say","`$9`.","`and`","`case`","case.","tail","hash.","string:join.","a","`71","rolling","last.","the","a","`gb_trees`","scanning","using","adding","just","a","16#47","building","being","`integer()`.","if,","the","the","lists:foldl/3.","last.","line","the","using","`N`,","if"]},{"Key":"of your","Fragments":["current","subject","module.","code","benchmark","solution","string","exported"]},{"Key":"your current","Fragments":["`O(n)`?"]},{"Key":"* For","Fragments":["`total/0`","integers","integers"]},{"Key":"For `total/0`","Fragments":["there"]},{"Key":"`total/0` there","Fragments":["is"]},{"Key":"there is","Fragments":["also","a","only","no","more","a","a","a","a","nothing","a","an","a","no"]},{"Key":"is also","Fragments":["a","evenly","a","very","an","a"]},{"Key":"also a","Fragments":["much","list,","good","little","number,"]},{"Key":"a much","Fragments":["faster"]},{"Key":"much faster","Fragments":["solution","than"]},{"Key":"faster solution","Fragments":["available."]},{"Key":"solution available.","Fragments":["To"]},{"Key":"available. To","Fragments":["find"]},{"Key":"To find","Fragments":["it,"]},{"Key":"find it,","Fragments":["try"]},{"Key":"it, try","Fragments":["it"]},{"Key":"try it","Fragments":["for"]},{"Key":"it for","Fragments":["yourself","the","the"]},{"Key":"for yourself","Fragments":["and"]},{"Key":"yourself and","Fragments":["“expand”"]},{"Key":"and “expand”","Fragments":["it"]},{"Key":"“expand” it","Fragments":["as"]},{"Key":"it as","Fragments":["above","a","simple","small","a","the"]},{"Key":"as above","Fragments":["for"]},{"Key":"above for","Fragments":["a"]},{"Key":"for a","Fragments":["simplified","good","case,","function","while","`case`,","guard.","very","purely","function","solution","very","reason,","catch","single-character","list"]},{"Key":"a simplified","Fragments":["(4"]},{"Key":"simplified (4","Fragments":["square)"]},{"Key":"(4 square)","Fragments":["chessboard."]},{"Key":"square) chessboard.","Fragments":["Perhaps"]},{"Key":"chessboard. Perhaps","Fragments":["you"]},{"Key":"Perhaps you","Fragments":["can","could"]},{"Key":"can see","Fragments":["it","that","we","`16#47`","from","your"]},{"Key":"see it","Fragments":["then."]},{"Key":"Looks great,","Fragments":["but"]},{"Key":"great, but","Fragments":["you"]},{"Key":"but you","Fragments":["could","could","can","could","could","basically","can","could","should"]},{"Key":"you could","Fragments":["consider","specify","be","still","comment","add","still","shorten","have","argue","use","have","just","implement","get","have","also","add","really","have","get","throw","use","use","use","have","have"]},{"Key":"could consider","Fragments":["using","renaming"]},{"Key":"consider using","Fragments":["`1","lists:sort/1","lists:map","`lists:map`.","`lists:zip`","`lists:map`","guards."]},{"Key":"using `1","Fragments":["bsl"]},{"Key":"`1 bsl","Fragments":["X`"]},{"Key":"bsl X`","Fragments":["instead","holds","holds"]},{"Key":"X` instead","Fragments":["of"]},{"Key":"of `trunc(math:pow(2,","Fragments":["X))`."]},{"Key":" That","Fragments":["is","is,","said","way","is"]},{"Key":"That is","Fragments":["really","the","a","a"]},{"Key":"is really","Fragments":["quite","just"]},{"Key":"really quite","Fragments":["complicated."]},{"Key":"quite complicated.","Fragments":["Did"]},{"Key":"complicated. Did","Fragments":["you"]},{"Key":"Did you","Fragments":["consider","know","notice","try","think","have"]},{"Key":"you consider","Fragments":["using","negative"]},{"Key":"using lists:sort/1","Fragments":["?"]},{"Key":" Could","Fragments":["have","you","I"]},{"Key":"Could have","Fragments":["also"]},{"Key":"have also","Fragments":["write"]},{"Key":"also write","Fragments":["it"]},{"Key":"write it","Fragments":["like:","like:","as"]},{"Key":" leap_year(Year)","Fragments":["-\u003e","when","when","-\u003e","-\u003e","when","when","when","-\u003e","when","when","when","when","-\u003e","when","-\u003e","-\u003e","when"]},{"Key":" case","Fragments":["{Year","{Y","{Year","{is_silence(S),","is_multiples_of(L,","(divides(Year,","{","{IsSilence,"]},{"Key":"case {Year","Fragments":["rem","rem"]},{"Key":"{Year rem","Fragments":["4","400,"]},{"Key":"rem 4","Fragments":["=:=","=:=","==","==","==","==","=:="]},{"Key":"4 =:=","Fragments":["0,","0.","0"]},{"Key":"=:= 0,","Fragments":["Year","Year"]},{"Key":"0, Year","Fragments":["rem","rem"]},{"Key":"Year rem","Fragments":["100","400","400","100","4","400","100","4","400","100","400","400","400","4","4}","x`","4","400","400"]},{"Key":"rem 100","Fragments":["=:=","=:=","==","==","=:=","=/=","=/="]},{"Key":"100 =:=","Fragments":["0,","0","0"]},{"Key":"rem 400","Fragments":["=:=","=:=","==","==","==","=/=","=:=","==","=:=","=:=","=="]},{"Key":"400 =:=","Fragments":["0}","0","0","0)).","0)."]},{"Key":"=:= 0}","Fragments":["of"]},{"Key":" {true,","Fragments":["false,","true,","_,","_,"]},{"Key":"{true, false,","Fragments":["_}"]},{"Key":"false, _}","Fragments":["-\u003e"]},{"Key":"_} -\u003e","Fragments":["true;","....."]},{"Key":"{true, true,","Fragments":["true}"]},{"Key":"true, true}","Fragments":["-\u003e"]},{"Key":"true} -\u003e","Fragments":["true;"]},{"Key":" _","Fragments":["-\u003e"]},{"Key":"_ -\u003e","Fragments":["false"]},{"Key":" Slightly","Fragments":["outside"]},{"Key":"Slightly outside","Fragments":["the"]},{"Key":"outside the","Fragments":["test"]},{"Key":"the test","Fragments":["case","suite.","file.","is","also.","suite","made","cases","suite","suite.","suite,","with","provided.","cases","over","cases.","suite"]},{"Key":"test case","Fragments":["but","that","ignore_non_allergen_score_parts_test()"]},{"Key":"case but","Fragments":["what"]},{"Key":"but what","Fragments":["happens"]},{"Key":"what happens","Fragments":["for","if","when","when"]},{"Key":"happens for","Fragments":["non-integer"]},{"Key":"for non-integer","Fragments":["arguments"]},{"Key":"non-integer arguments","Fragments":["to"]},{"Key":"arguments to","Fragments":["`leap_year`?","be"]},{"Key":"think using","Fragments":["a","`lists:map`","a"]},{"Key":"using a","Fragments":["case","state","case","list","fun","closure","list","common","guard,","`fold`.","closure","`case`","map","key-value","list","map"]},{"Key":"a case","Fragments":["statement","expression:","expression.","statement.","statement"]},{"Key":"case statement","Fragments":["in","would","it"]},{"Key":"statement in","Fragments":["this"]},{"Key":"in this","Fragments":["way","case","case.","case","case?","case","place","scenario.","situation.","case","case","case?","case","case.","case).","case,","case."]},{"Key":"this way","Fragments":["is"]},{"Key":"way is","Fragments":["a","more"]},{"Key":"is a","Fragments":["bad","bit","big","negative.","nicer","solution","list","nice","leap","more","pain","list.","1-arg","question","type","char","great","nice","convention","closed","leap","tail","strong","closed","better","perfect","perfectly","lot","special","bit","better","nice","bit","poor","reasonable","translation","very","lot","leap","unicode","great","good","leading","function","valid","function","somewhat","valid","bit","fixed","Dialyzer","map","very","more","more","list","list","string,","little","leap_year","bit","valid","good"]},{"Key":"a bad","Fragments":["idea,","thing.","command,","fit.","idea","name,"]},{"Key":"bad idea,","Fragments":["because"]},{"Key":"idea, because","Fragments":["the"]},{"Key":"because the","Fragments":["code","to_rna","performance","[book","sum","gregorian","exercise"]},{"Key":"the code","Fragments":["is","a","to","the","for","points","more","(even","remains","structure","more","would","more","is","becomes","easier","calling","when","(including","is","would","look"]},{"Key":"code is","Fragments":["very","not","first","going","rubbish","good"]},{"Key":"is very","Fragments":["confusing","Erlang-y.","clean.","inefficient.","good.","large.","generic.","concise.","clear."]},{"Key":"very confusing","Fragments":["to"]},{"Key":"confusing to","Fragments":["read."]},{"Key":"to read.","Fragments":["A"]},{"Key":"read. A","Fragments":["better"]},{"Key":"A better","Fragments":["choice"]},{"Key":"better choice","Fragments":["would"]},{"Key":"choice would","Fragments":["have","have"]},{"Key":"would have","Fragments":["been","likely","split","been","to","thought","been","saved"]},{"Key":"have been","Fragments":["to","ported","better","1,","bitten","elsewhere.","more"]},{"Key":"been to","Fragments":["use"]},{"Key":"to use","Fragments":["multiple","`lists:any`","it.","the","BIFs","guards","guards.","lists","the","multiple","it","the","both","$A","it","injection","a","lists:filter?","`spawn/1`","`io_lib:format`.","the","something/what's","four","more","function","math","\"if\"","pattern","Erlang's","the","a","pattern","`andalso`","library","maps","`lists:map/2`.","a","it","the","it","pattern","it","the","`lists:member/2`.","Macro","a","pattern"]},{"Key":"use multiple","Fragments":["function","function"]},{"Key":"multiple function","Fragments":["definitions","clauses","clauses","clauses","definitions"]},{"Key":"function definitions","Fragments":["with","with"]},{"Key":"definitions with","Fragments":["guard","guard"]},{"Key":"with guard","Fragments":["clauses:","clauses:","blocks","clauses."]},{"Key":"leap_year(Year) when","Fragments":["Year","Year","Year","Year","Year","Year","Year","Year","Year","Year"]},{"Key":"when Year","Fragments":["rem","rem","rem","rem","rem","rem","rem","rem","rem","rem"]},{"Key":"=:= 0","Fragments":["-\u003e","-\u003e","andalso","-\u003e","andalso"]},{"Key":"0 -\u003e","Fragments":["true;","false;","true;","false;","true;","true;","true;","false;","false;"]},{"Key":"leap_year(Year) -\u003e","Fragments":["Year","Year"]},{"Key":"-\u003e Year","Fragments":["rem","rem"]},{"Key":" In","Fragments":["addition","my","my","this","Erlang","retrospect,","this","this","summary","the","the","the","a","the","the","line","the","that","the","the","the","the","my"]},{"Key":"In addition","Fragments":["the"]},{"Key":"addition the","Fragments":["`count`"]},{"Key":"the `count`","Fragments":["method"]},{"Key":"`count` method","Fragments":["is"]},{"Key":"method is","Fragments":["poorly","just"]},{"Key":"is poorly","Fragments":["named"]},{"Key":"poorly named","Fragments":["and"]},{"Key":"named and","Fragments":["doesn't"]},{"Key":"and doesn't","Fragments":["make","help","teach"]},{"Key":"doesn't make","Fragments":["much","much"]},{"Key":"make much","Fragments":["sense","sense"]},{"Key":"much sense","Fragments":["like","to"]},{"Key":"sense like","Fragments":["this"]},{"Key":"like this","Fragments":["when","one","one","pattern","solution","solution","is","and","you'd","often","--","problem"]},{"Key":"this when","Fragments":["all","I","I"]},{"Key":"when all","Fragments":["the"]},{"Key":"all the","Fragments":["other","extra","tests.","slices","index-from-1/index-from-0","languages","conditional","ways","time","strange","list","different","\"reinvent","things","other","tests.","test","`is_...`","logic"]},{"Key":"the other","Fragments":["module","modulo","solutions","only","way","end.","implementations).","hand,","responses."]},{"Key":"other module","Fragments":["operations"]},{"Key":"module operations","Fragments":["are"]},{"Key":"operations are","Fragments":["inlined."]},{"Key":"are inlined.","Fragments":["Try"]},{"Key":"inlined. Try","Fragments":["replacing"]},{"Key":"Try replacing","Fragments":["it"]},{"Key":"replacing it","Fragments":["with"]},{"Key":"it with","Fragments":["something","its"]},{"Key":"with something","Fragments":["like","other"]},{"Key":"like `divisible_by(Number,","Fragments":["Divisor)`"]},{"Key":"`divisible_by(Number, Divisor)`","Fragments":["and"]},{"Key":"Divisor)` and","Fragments":["reuse"]},{"Key":"and reuse","Fragments":["it","it"]},{"Key":"reuse it","Fragments":["for","especially"]},{"Key":"other modulo","Fragments":["checks."]},{"Key":"think you","Fragments":["should","might","could","should","should","need","necessarily"]},{"Key":"you should","Fragments":["leave","consider","still","compare","get","change","never","not","probably","not","probably","use","consider","consider","add","find","take","use"]},{"Key":"should leave","Fragments":["the"]},{"Key":"leave the","Fragments":["comparison"]},{"Key":"the comparison","Fragments":["inside","of"]},{"Key":"comparison inside","Fragments":["the"]},{"Key":"inside the","Fragments":["divisible_by","`handle_call`,","function","function","function"]},{"Key":"the divisible_by","Fragments":["function,"]},{"Key":"divisible_by function,","Fragments":["so","because"]},{"Key":"function, so","Fragments":["it"]},{"Key":"so it","Fragments":["returns","accepts","does","can","is"]},{"Key":"it returns","Fragments":["a","a","false"]},{"Key":"a boolean.","Fragments":["I"]},{"Key":"boolean. I","Fragments":["also"]},{"Key":"I also","Fragments":["wouldn't","try","really","tend","had","doubt","personally","know","reordered"]},{"Key":"also wouldn't","Fragments":["combine"]},{"Key":"wouldn't combine","Fragments":["guard"]},{"Key":"combine guard","Fragments":["clauses"]},{"Key":"guard clauses","Fragments":["and","on"]},{"Key":"clauses and","Fragments":["the"]},{"Key":"and the","Fragments":["separate","use","types","other","idea","callee.","error","second","standard","tail","tests.","reader","rest","function","contract","test","mutating","ability","stack","like.","name","match","tests","function.","list"]},{"Key":"the separate","Fragments":["divisible_by"]},{"Key":"separate divisible_by","Fragments":["function,"]},{"Key":"function, because","Fragments":["you"]},{"Key":"because you","Fragments":["can","can","can't","don't","didn't","don't","didn't"]},{"Key":"can call","Fragments":["the","me","`roll/1`"]},{"Key":"call the","Fragments":["function"]},{"Key":"the function","Fragments":["inside","level","call","and","into","clauses,","name","responsible","`nucleotides_count/1`","(it","arity?","head","`lists:map/2`","tail","even","head:","and","clause","to","would","call.","definition","is.","expects","body?","as","head","is","to","itself?","arguments,","has","takes.","it","head","referenced","definition","argument","head"]},{"Key":"function inside","Fragments":["a"]},{"Key":"inside a","Fragments":["guard"]},{"Key":"a guard","Fragments":["clause.","what","to","over","and","for","that","only","that","that","that"]},{"Key":" Example","Fragments":["with","with"]},{"Key":"Example with","Fragments":["divisible_by:","guard"]},{"Key":" divisible_by(Year,","Fragments":["4)","4)"]},{"Key":" and","Fragments":["not"]},{"Key":"and not","Fragments":["divisible_by(Year,","have","in","replacement","what","`if`-expressions.","a","helping"]},{"Key":"not divisible_by(Year,","Fragments":["100)","100)"]},{"Key":" or","Fragments":["divisible_by(Year,"]},{"Key":"or divisible_by(Year,","Fragments":["400)."]},{"Key":" divisible_by(Number,","Fragments":["Divisor)"]},{"Key":"divisible_by(Number, Divisor)","Fragments":["-\u003e"]},{"Key":" Number","Fragments":["rem"]},{"Key":"Number rem","Fragments":["Divisor"]},{"Key":"rem Divisor","Fragments":["=:="]},{"Key":"Divisor =:=","Fragments":["0."]},{"Key":"400 ==","Fragments":["0","0","0","0","0"]},{"Key":"== 0","Fragments":["-\u003e","-\u003e","-\u003e","-\u003e","-\u003e","-\u003e","-\u003e","-\u003e","-\u003e"]},{"Key":"100 ==","Fragments":["0","0"]},{"Key":"4 ==","Fragments":["0","0,","0,","0"]},{"Key":" leap_year(_)","Fragments":["-\u003e"]},{"Key":"leap_year(_) -\u003e","Fragments":["false."]},{"Key":"In my","Fragments":["first","experience,","solution","opinion"]},{"Key":"my first","Fragments":["nitpick","ever","attempt.","love.","explanation.","solution","submission","iteration","pass,","iteration"]},{"Key":"first nitpick","Fragments":["I"]},{"Key":"nitpick I","Fragments":["combined"]},{"Key":"I combined","Fragments":["line"]},{"Key":"combined line","Fragments":["3"]},{"Key":"line 3","Fragments":["and"]},{"Key":"3 and","Fragments":["4"]},{"Key":"and 4","Fragments":["into"]},{"Key":"4 into","Fragments":["a"]},{"Key":"into a","Fragments":["single","single","single","macro","private","macro","separate","new","\"proper\"","function.","bound"]},{"Key":"a single","Fragments":["statement,","function","pass.","constant,","pass.","DNA","pass!","integer","guard","mapped","element","function.","condition.","left-to-right","`lists:foldl`","integer.","line","item,","pass,","integral"]},{"Key":"single statement,","Fragments":["this"]},{"Key":"statement, this","Fragments":["is"]},{"Key":"this is","Fragments":["a","a","very","conceptually","the","hard","probably","much","called","probably","that","hard","due","manual","probably","not","a","in","called","a","pretty","especially","an","an","great","the","pretty","strongly","fine","better","such","probably","allowed.","nice","a"]},{"Key":"a bit","Fragments":["clearer.","more","more","more","using","trying","less","complicated","easier","nicer","more","confusing","mashed","obscure.","hasty","broad","more","more","hard","ugly.","better.","hard"]},{"Key":" Sorry,","Fragments":["if"]},{"Key":"Sorry, if","Fragments":["my"]},{"Key":"if my","Fragments":["original"]},{"Key":"my original","Fragments":["nitpick","goal"]},{"Key":"original nitpick","Fragments":["wasn't"]},{"Key":"nitpick wasn't","Fragments":["clear"]},{"Key":"wasn't clear","Fragments":["about"]},{"Key":"clear about","Fragments":["the"]},{"Key":"about the","Fragments":["fact","tuple","plan","directions,","map,","`if`-expression?","commutativity","guards","user","use","difference","click","character","filter","shortcomings.","essentially","structure"]},{"Key":"the fact","Fragments":["that","that","that","that","that","that"]},{"Key":"fact that","Fragments":["these","I","you","the","the","I"]},{"Key":"that these","Fragments":["two"]},{"Key":"these two","Fragments":["options"]},{"Key":"two options","Fragments":["were"]},{"Key":"options were","Fragments":["an"]},{"Key":"were an","Fragments":["either/or"]},{"Key":"an either/or","Fragments":["proposition."]},{"Key":" Btw.","Fragments":["for"]},{"Key":"Btw. for","Fragments":["a"]},{"Key":"a good","Fragments":["example","chance","call,","idea","name.","habit","idea","case?","handle","argument","way","recursive","deal.","chance","overview","way"]},{"Key":"good example","Fragments":["of"]},{"Key":"example of","Fragments":["using"]},{"Key":"of using","Fragments":["`case`","a","higher","substr/3","lists:filter/2,","a","a","list","\u003cstrong\u003elists:zip\u003c/strong\u003e","the"]},{"Key":"using `case`","Fragments":["try"]},{"Key":"`case` try","Fragments":["the"]},{"Key":"try the","Fragments":["next"]},{"Key":"the next","Fragments":["erlang","definition?","step","exercise","step","exercise","step","exercise","iteration.","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise","step","exercise"]},{"Key":"next erlang","Fragments":["example"]},{"Key":"erlang example","Fragments":["**rna_transcription**."]},{"Key":"I would","Fragments":["probably","make","make","probably","have","split","expect","like","keep","suggest","additionally","simplify","use","be","only","be","agree","rather","love","suggest","have","get","pick","change","start","be","be","avoid","just","also","give","avoid","move"]},{"Key":"would probably","Fragments":["reorder","do","yield","use"]},{"Key":"probably reorder","Fragments":["the"]},{"Key":"reorder the","Fragments":["checks","logic"]},{"Key":"the checks","Fragments":["to","without","and","doesn't"]},{"Key":"checks to","Fragments":["more","make"]},{"Key":"to more","Fragments":["closely"]},{"Key":"more closely","Fragments":["resemble"]},{"Key":"closely resemble","Fragments":["the"]},{"Key":"resemble the","Fragments":["spec:"]},{"Key":" %","Fragments":["on","except","unless","add_seconds_to"]},{"Key":"% on","Fragments":["every"]},{"Key":"on every","Fragments":["year","function","iteration"]},{"Key":"every year","Fragments":["that","that"]},{"Key":"year that","Fragments":["is","is"]},{"Key":"that is","Fragments":["evenly","evenly","splitting","slightly","commented","currently","showing","consed","the","better","a","divided.","a","valid?"]},{"Key":"is evenly","Fragments":["divisible","divisible","divisible"]},{"Key":"evenly divisible","Fragments":["by","by","by","by"]},{"Key":"divisible by","Fragments":["4","100","400","four","100,","400","400,","4","both","400","400","100,"]},{"Key":"% except","Fragments":["every"]},{"Key":"except every","Fragments":["year"]},{"Key":"% unless","Fragments":["the"]},{"Key":"unless the","Fragments":["year"]},{"Key":"the year","Fragments":["is","MUST","is"]},{"Key":"year is","Fragments":["also","how","a","divisible","divisble","a"]},{"Key":"also evenly","Fragments":["divisible"]},{"Key":" andalso","Fragments":["not","not"]},{"Key":"andalso not","Fragments":["divisible_by(Year,","evenly_divisible(Year,"]},{"Key":" orelse","Fragments":["divisible_by(Year,","evenly_divisible(Year,"]},{"Key":"orelse divisible_by(Year,","Fragments":["400)"]},{"Key":" Also","Fragments":["some","if","I","I","the","this","you","Learn","I","you","in"]},{"Key":"Also some","Fragments":["of"]},{"Key":"some of","Fragments":["the","the","the","the","the","the","the","the","these"]},{"Key":"the parentheses","Fragments":["seem","a"]},{"Key":"parentheses seem","Fragments":["unneeded,"]},{"Key":"seem unneeded,","Fragments":["because"]},{"Key":"unneeded, because","Fragments":["`andalso`"]},{"Key":"because `andalso`","Fragments":["has"]},{"Key":"`andalso` has","Fragments":["a"]},{"Key":"has a","Fragments":["higher","chapter","downside","bug;","1","really","solution","billion"]},{"Key":"a higher","Fragments":["precedence","level"]},{"Key":"higher precedence","Fragments":["than"]},{"Key":"precedence than","Fragments":["`orelse`."]},{"Key":" Other","Fragments":["than","than"]},{"Key":"Other than","Fragments":["that,","erlang.org"]},{"Key":"than that,","Fragments":["I","you"]},{"Key":"that, I","Fragments":["think","do","would"]},{"Key":"think this","Fragments":["is","is","problem","suffers","was","is","is","exercise","is","would","is","solution","is","is","is","is","creates"]},{"Key":"a big","Fragments":["improvement","win.","fan"]},{"Key":"big improvement","Fragments":["over"]},{"Key":"improvement over","Fragments":["the","your"]},{"Key":"over the","Fragments":["previous","previous","input","more","length","input","literals","list","strand","input,","input"]},{"Key":"the previous","Fragments":["iterations!","iteration.","paragraph.","iteration."]},{"Key":" Simple","Fragments":["map"]},{"Key":"The similarity","Fragments":["of"]},{"Key":"similarity of","Fragments":["`isUpper`,"]},{"Key":"of `isUpper`,","Fragments":["`isAlpha`,"]},{"Key":"`isUpper`, `isAlpha`,","Fragments":["and"]},{"Key":"`isAlpha`, and","Fragments":["`isSpace`"]},{"Key":"and `isSpace`","Fragments":["suggests"]},{"Key":"`isSpace` suggests","Fragments":["a"]},{"Key":"suggests a","Fragments":["potential"]},{"Key":"a potential","Fragments":["refactor"]},{"Key":"potential refactor","Fragments":["into"]},{"Key":"refactor into","Fragments":["a"]},{"Key":"single function","Fragments":["that"]},{"Key":"function that","Fragments":["takes","acts","calls","has","gains","can","receives"]},{"Key":"that takes","Fragments":["the"]},{"Key":"takes the","Fragments":["regular"]},{"Key":"the regular","Fragments":["expression","structure"]},{"Key":"regular expression","Fragments":["as"]},{"Key":"expression as","Fragments":["an"]},{"Key":"as an","Fragments":["argument.","alternative.","interface","input.","anonymous","iterative","alternative.","alternate","invalid","exercise."]},{"Key":" Interesting","Fragments":["use","approach.","use","approach,","approach.","approach."]},{"Key":"Interesting use","Fragments":["of","of"]},{"Key":"use of","Fragments":["a","the","records.","the","pattern","```-spec```","macros,","types","`++`","pattern","list","`fifth`","pattern","variable","matching.","macros","`case`","extra","the","magic","`list","list","List","guard","function","the","\u003cstrong\u003ekeep\u003c/strong\u003e","\u003cstrong\u003elists:subtract\u003c/strong\u003e","list","pattern","`bxor`","pattern","`lists:map`","built","'List","`map`","lists","```-spec```!","remove_duplicates/1.","function","\u003cstrong\u003ekeep\u003c/strong\u003e","bit"]},{"Key":"of a","Fragments":["state","given","list","number","way","patternmatch","way","function.","guarding","record,","list","lists:map/2","way","way","list","few","more","trinary","`case`?","few","way","map","boolean.","polynomial?","word/anagram."]},{"Key":"a state","Fragments":["record","was"]},{"Key":"state record","Fragments":["to"]},{"Key":"record to","Fragments":["track"]},{"Key":"to track","Fragments":["progress.","the"]},{"Key":"track progress.","Fragments":["It"]},{"Key":"progress. It","Fragments":["feels"]},{"Key":"It feels","Fragments":["verbose","like","like"]},{"Key":"feels verbose","Fragments":["to"]},{"Key":"verbose to","Fragments":["me,"]},{"Key":"to me,","Fragments":["but"]},{"Key":"me, but","Fragments":["that","currently"]},{"Key":"but that","Fragments":["isn't","would"]},{"Key":"that isn't","Fragments":["necessarily","numeric"]},{"Key":"isn't necessarily","Fragments":["a"]},{"Key":"necessarily a","Fragments":["bad"]},{"Key":" Good","Fragments":["point","solution.","code!","to","code!","code!","thinking","catch.","catch,","point","point","call.","code!","code","point"]},{"Key":"Good point","Fragments":["on","on","I","on"]},{"Key":"point on","Fragments":["the","the","the","the"]},{"Key":"on the","Fragments":["refactor,","function","order","tail","test","return","(non-empty)","list","order","arguments.","spec.","number","basis","list","first","theme.","use","idea","stack","test","try/catch.","stack,","GC","conversion","first","length","same","comment","readability","validity","file.","argument"]},{"Key":"the refactor,","Fragments":["though"]},{"Key":"refactor, though","Fragments":["I"]},{"Key":"though I","Fragments":["probably","explicitly"]},{"Key":"I probably","Fragments":["won't","wasn't"]},{"Key":"probably won't","Fragments":["make"]},{"Key":"won't make","Fragments":["such"]},{"Key":"make such","Fragments":["a"]},{"Key":"such a","Fragments":["change","predicate","trivial","simple","small"]},{"Key":"a change","Fragments":["at"]},{"Key":"change at","Fragments":["this"]},{"Key":"at this","Fragments":["point.","now,","kind","months"]},{"Key":"The main","Fragments":["point","thing"]},{"Key":"main point","Fragments":["of"]},{"Key":"point of","Fragments":["using","the"]},{"Key":"state was","Fragments":["to"]},{"Key":"was to","Fragments":["process","immediately","literal"]},{"Key":"to process","Fragments":["the"]},{"Key":"process the","Fragments":["entire"]},{"Key":"the entire","Fragments":["string","state","execution,"]},{"Key":"entire string","Fragments":["in"]},{"Key":"string in","Fragments":["a","the"]},{"Key":"in a","Fragments":["single","String","more","key-value-list","list.","single","single","conversation?","comment","`gen_server`","human-readable","better","language","statically","single","gist.","float","tail","function),","problem","few","few","comment,","char,","single"]},{"Key":"single pass.","Fragments":["I"]},{"Key":"pass. I","Fragments":["could"]},{"Key":"I could","Fragments":["have","also","have","be","write","not","actually","get","just","do","have","return","have","wrap","break"]},{"Key":"could have","Fragments":["used","implemented","used","picked","used","passed","left","something","used","used","made","used","used"]},{"Key":"have used","Fragments":["regular","a","multiple","a","a","`true","a","a"]},{"Key":"used regular","Fragments":["expressions"]},{"Key":"regular expressions","Fragments":["or","since"]},{"Key":"expressions or","Fragments":["other"]},{"Key":"or other","Fragments":["functions"]},{"Key":"other functions","Fragments":["to","with"]},{"Key":"functions to","Fragments":["check","at"]},{"Key":"to check","Fragments":["the","one","that","that","every","for","for","my","the","for","for","out"]},{"Key":"check the","Fragments":["string,","function","type.","type"]},{"Key":"the string,","Fragments":["but","multiplying","at","and","observe","collecting","so"]},{"Key":"string, but","Fragments":["that"]},{"Key":"that would","Fragments":["have","lead","lose","order","be","necessarily","help"]},{"Key":"have likely","Fragments":["caused"]},{"Key":"likely caused","Fragments":["the"]},{"Key":"caused the","Fragments":["string"]},{"Key":"the string","Fragments":["to","\"2004\").","generation.","is","in","contains","only"]},{"Key":"string to","Fragments":["be","`group/2`","`is_anagram`"]},{"Key":"to be","Fragments":["processed","pedantic","\"go","really","confused","more","less","avoided.","explicit.","more","supported.","to","the","unidiomatic","tail","slow](http://exercism.io/submissions/9f2e762bbee849d199925a8975370c1b).","a","aware","visible","visible","free","discovered).","simpler","tail","readable","evaluated","used.","the","a","separate?","experimental","creating","processed","O(n²),","more","more","much","more","reversed,","of","the","ambiguous","called,","explicit"]},{"Key":"be processed","Fragments":["more","grows."]},{"Key":"processed more","Fragments":["than"]},{"Key":"more than","Fragments":["once.","one","11"]},{"Key":"than once.","Fragments":["This"]},{"Key":"once. This","Fragments":["method"]},{"Key":"This method","Fragments":["will"]},{"Key":"method will","Fragments":["avoid"]},{"Key":"will avoid","Fragments":["that."]},{"Key":" Removed","Fragments":["duplication","trailing","the"]},{"Key":"Removed duplication","Fragments":["throughout"]},{"Key":"duplication throughout","Fragments":["the"]},{"Key":"throughout the","Fragments":["code."]},{"Key":"could also","Fragments":["collapse","use"]},{"Key":"also collapse","Fragments":["`$a"]},{"Key":"collapse `$a","Fragments":["+"]},{"Key":"`$a +","Fragments":["$z`"]},{"Key":"+ $z`","Fragments":["into"]},{"Key":"$z` into","Fragments":["a"]},{"Key":"single constant,","Fragments":["as"]},{"Key":"constant, as","Fragments":["well"]},{"Key":"as well","Fragments":["as","use"]},{"Key":"well as","Fragments":["its"]},{"Key":"as its","Fragments":["capital","body,"]},{"Key":"its capital","Fragments":["counterpart,"]},{"Key":"capital counterpart,","Fragments":["but"]},{"Key":"counterpart, but","Fragments":["I"]},{"Key":"I do","Fragments":["think","rely","this:","like","like","like","think"]},{"Key":"do think","Fragments":["the","it"]},{"Key":"think the","Fragments":["current","order","\"largest","extra","`exercism`","adverse","decision","approach","numbers","choice"]},{"Key":"the current","Fragments":["version","state","behaviour","version,","stack","stack","solution.","state"]},{"Key":"current version","Fragments":["does"]},{"Key":"version does","Fragments":["make"]},{"Key":"does make","Fragments":["a"]},{"Key":"make a","Fragments":["little","very","bit","good","different"]},{"Key":"a little","Fragments":["bit","myself","more","complicated,","bit:","bug","room","overwhelming.","bit","less","confusing","critical","bit.","strange.","bit","more","bit"]},{"Key":"little bit","Fragments":["more","hard","in","verbose…","mor"]},{"Key":"bit more","Fragments":["clear","Erlang-idiomatic","interesting","difficult","erlangy,","idiomatic.","concise."]},{"Key":"more clear","Fragments":["whats","with"]},{"Key":"clear whats","Fragments":["going"]},{"Key":"whats going","Fragments":["on"]},{"Key":"going on","Fragments":["in","and"]},{"Key":"on in","Fragments":["atbash"]},{"Key":"in atbash","Fragments":["and"]},{"Key":"atbash and","Fragments":["I"]},{"Key":"and I","Fragments":["do","don't","didn't","find","didn't","agree","think","decided","think","would","suspect","can","liked"]},{"Key":"do rely","Fragments":["on"]},{"Key":"rely on","Fragments":["optimisation","`math:pow/2`.","specific"]},{"Key":"on optimisation","Fragments":["during","level"]},{"Key":"optimisation during","Fragments":["compiletime."]},{"Key":"Removed trailing","Fragments":["whitespace."]},{"Key":" Your","Fragments":["guards","spec","neat","`validate/1`","right.","signature","list"]},{"Key":"Your guards","Fragments":["don't"]},{"Key":"guards don't","Fragments":["fit","hold."]},{"Key":"don't fit","Fragments":["your"]},{"Key":"fit your","Fragments":["typespec."]},{"Key":"your typespec.","Fragments":["Perhaps"]},{"Key":"typespec. Perhaps","Fragments":["you"]},{"Key":"could specify","Fragments":["`Square`"]},{"Key":"specify `Square`","Fragments":["as"]},{"Key":"`Square` as","Fragments":["a"]},{"Key":"as a","Fragments":["range","result.","more","character).","guard:","standard","form","+","`dna_sequence()`.","fold","refinement","separate","simple","single","conversation","conversation","conversation","helper","named","guard","type","conversation","conversation","singleton","conversation","conversation","conversation","list","conversation","conversation"]},{"Key":"a range","Fragments":["instead?"]},{"Key":"I added","Fragments":["some","guards,"]},{"Key":"added some","Fragments":["type","guards"]},{"Key":"some type","Fragments":["and"]},{"Key":"type and","Fragments":["spec","reuse","returns","a"]},{"Key":"and spec","Fragments":["annotations."]},{"Key":" Also,","Fragments":["after","it","I","I","I","you","I","instead","for","do","why","when","the"]},{"Key":"Also, after","Fragments":["I"]},{"Key":"after I","Fragments":["thought"]},{"Key":"I thought","Fragments":["that","of","they","that","of","that","of"]},{"Key":"thought that","Fragments":["I","going","my"]},{"Key":"that I","Fragments":["can't","would","often","look","had","bind","accept","have","tend","think","will","won't","find","iterated","could","missed","think","came","don't"]},{"Key":"I can't","Fragments":["use","remember","seem","say","think","read","help"]},{"Key":"can't use","Fragments":["a","functions","functions"]},{"Key":"use a","Fragments":["behaviour","tuple","list-comprehension.","list","more","better","guard","list","build","list","reference."]},{"Key":"a behaviour","Fragments":["here,"]},{"Key":"behaviour here,","Fragments":["I"]},{"Key":"here, I","Fragments":["already","think"]},{"Key":"I already","Fragments":["changed","told"]},{"Key":"already changed","Fragments":["my"]},{"Key":"changed my","Fragments":["mind"]},{"Key":"my mind","Fragments":["and"]},{"Key":"mind and","Fragments":["am","do"]},{"Key":"and am","Fragments":["working"]},{"Key":"am working","Fragments":["on"]},{"Key":"working on","Fragments":["a","accumulate,","them,"]},{"Key":"on a","Fragments":["new","bad","\"raw","different","first","line","machine"]},{"Key":"a new","Fragments":["version.","version","line","iteration","submission","name,","head"]},{"Key":"the individual","Fragments":["nucleotide"]},{"Key":"individual nucleotide","Fragments":["translation"]},{"Key":"nucleotide translation","Fragments":["be"]},{"Key":"translation be","Fragments":["a"]},{"Key":"be a","Fragments":["separate","bit","big","`number()`","slightly","bad","problem","leap","one","feature).","more","bit","matter","great"]},{"Key":"a separate","Fragments":["function?","process","function","function","function."]},{"Key":" This","Fragments":["seems","solution","could","is","code","is","is","implementation","one","is","is","submission","one","essentially","is","is","is","feels","does","is","would","was","looks","still","looks","part","is","is","shores","is","is","is","version","is","would","is","trades","exercism","fails","is","script","implementation","implementation","certainly","is","code","shows","solution","one","reads","is","is"]},{"Key":"This seems","Fragments":["very"]},{"Key":"seems very","Fragments":["un-erlang."]},{"Key":"very un-erlang.","Fragments":["IMO,"]},{"Key":"un-erlang. IMO,","Fragments":["a"]},{"Key":"IMO, a","Fragments":["comprehension"]},{"Key":"a comprehension","Fragments":["should","instead.","instead"]},{"Key":"comprehension should","Fragments":["be"]},{"Key":"should be","Fragments":["used","O(n)","able","acceptable.","able","much","much","type-annotations","the","much","safe","private","in","pointing","exported","a","recognizable","documented","acceptable?","to_rna([H|T])"]},{"Key":"be used","Fragments":["but","(but","on"]},{"Key":"used but","Fragments":["I'm"]},{"Key":"but I'm","Fragments":["not","not","not","not","interested","no"]},{"Key":"I'm not","Fragments":["sure","so","very","able","sure","an","sure","a","sure","specifically","sure","a","saying","a","sure","sure","sure","sure","a","sure","sure","allowed","a","a","happy","much","sure"]},{"Key":"not sure","Fragments":["how","how","if","how","about","whether","I","I","how","I","that","how","if","how","why","when","what","about","if","what","using"]},{"Key":"sure how","Fragments":["to","best","the","they","to","to","did","I"]},{"Key":"how to","Fragments":["use","do","do","use","use","get","properly","handle","map","check","annotate","get"]},{"Key":"use `lists:any`","Fragments":["in"]},{"Key":"`lists:any` in","Fragments":["one."]},{"Key":" Wow,","Fragments":["nice","cheat","very"]},{"Key":"Wow, nice","Fragments":["job!"]},{"Key":"nice job!","Fragments":["I","++"]},{"Key":"job! I","Fragments":["think"]},{"Key":"very Erlang-y.","Fragments":["This"]},{"Key":"Erlang-y. This","Fragments":["is"]},{"Key":"This is","Fragments":["about","my","better","the","pretty","much","time","part","not","so","clearly","good.","a","called","a","such","a","dangerous!","a","not","a","horribly","more","not","the","more","used","a","a","okay,","much","hard","correct"]},{"Key":"is about","Fragments":["as","counting"]},{"Key":"about as","Fragments":["concise"]},{"Key":"as concise","Fragments":["and"]},{"Key":"concise and","Fragments":["understandable","maybe"]},{"Key":"and understandable","Fragments":["as"]},{"Key":"understandable as","Fragments":["it"]},{"Key":"as it","Fragments":["could","were,","might"]},{"Key":"it could","Fragments":["possibly","be","be","be"]},{"Key":"could possibly","Fragments":["be."]},{"Key":" Actually","Fragments":["quite","[H|T]"]},{"Key":"Actually quite","Fragments":["happy"]},{"Key":"quite happy","Fragments":["with"]},{"Key":"happy with","Fragments":["how","some","what","the"]},{"Key":"with how","Fragments":["simple"]},{"Key":"how simple","Fragments":["this"]},{"Key":"simple this","Fragments":["came"]},{"Key":"this came","Fragments":["out."]},{"Key":"came out.","Fragments":["I"]},{"Key":"out. I","Fragments":["might","built"]},{"Key":"I might","Fragments":["like","be","try","try","catch"]},{"Key":"might like","Fragments":["to","what"]},{"Key":"like to","Fragments":["figure","use","compress","name","make","end"]},{"Key":"to figure","Fragments":["out","out"]},{"Key":"figure out","Fragments":["a","list","the","how"]},{"Key":"out a","Fragments":["better"]},{"Key":"a better","Fragments":["way","way;","specification,","name","name","way","way?","name","name","implementation.","name,"]},{"Key":"better way","Fragments":["of","to"]},{"Key":"way of","Fragments":["writing","approaching","handling","defining","approaching","approaching"]},{"Key":"of writing","Fragments":["`pretty_print/1`","function"]},{"Key":"writing `pretty_print/1`","Fragments":["some"]},{"Key":"`pretty_print/1` some","Fragments":["time"]},{"Key":"some time","Fragments":["but","to"]},{"Key":"time but","Fragments":["the"]},{"Key":"but the","Fragments":["rest","corresponding","less","other","use","longer"]},{"Key":"the rest","Fragments":["I'm","(and","of","of","this","so"]},{"Key":"rest I'm","Fragments":["pleased"]},{"Key":"I'm pleased","Fragments":["with."]},{"Key":" Finally","Fragments":["understanding"]},{"Key":"Finally understanding","Fragments":["list"]},{"Key":"understanding list","Fragments":["comprehensions,"]},{"Key":"list comprehensions,","Fragments":["also.","it's","and","actually,","http://learnyousomeerlang.com/starting-out-for-real#list-comprehensions.","http://learnyousomeerlang.com/starting-out-for-real#list-comprehensions."]},{"Key":"thought of","Fragments":["that,","using","using"]},{"Key":"of that,","Fragments":["and"]},{"Key":"that, and","Fragments":["almost"]},{"Key":"and almost","Fragments":["wrote"]},{"Key":"almost wrote","Fragments":["the"]},{"Key":"wrote the","Fragments":["line","first","code."]},{"Key":"the line","Fragments":["in","to"]},{"Key":"line in","Fragments":["`pretty_print/1`"]},{"Key":"in `pretty_print/1`","Fragments":["as"]},{"Key":"`pretty_print/1` as","Fragments":["`Area"]},{"Key":"as `Area","Fragments":["="]},{"Key":"`Area =","Fragments":["lists:sublist(Phone,"]},{"Key":"= lists:sublist(Phone,","Fragments":["e)`."]},{"Key":"lists:sublist(Phone, e)`.","Fragments":["Ultimately"]},{"Key":"e)`. Ultimately","Fragments":["decided"]},{"Key":"Ultimately decided","Fragments":["against"]},{"Key":"decided against","Fragments":["it"]},{"Key":"against it","Fragments":["because"]},{"Key":"it because","Fragments":["this","I"]},{"Key":"because this","Fragments":["is","strikes","was"]},{"Key":"is conceptually","Fragments":["cleaner"]},{"Key":"conceptually cleaner","Fragments":["to"]},{"Key":"cleaner to","Fragments":["me.","me"]},{"Key":" Realizing","Fragments":["that"]},{"Key":"Realizing that","Fragments":["there's"]},{"Key":"that there's","Fragments":["also"]},{"Key":"there's also","Fragments":["inconsistency"]},{"Key":"also inconsistency","Fragments":["between"]},{"Key":"inconsistency between","Fragments":["using"]},{"Key":"between using","Fragments":["`lists:sublist`","recursion"]},{"Key":"using `lists:sublist`","Fragments":["and"]},{"Key":"`lists:sublist` and","Fragments":["`string:sub_string`"]},{"Key":"and `string:sub_string`","Fragments":["when"]},{"Key":"`string:sub_string` when","Fragments":["they"]},{"Key":"when they","Fragments":["seem","do"]},{"Key":"they seem","Fragments":["to"]},{"Key":"seem to","Fragments":["do","find","have","be","have","lack"]},{"Key":"to do","Fragments":["similar","a","the","so","\"chars\".","an","that","it","this","it.","some","this","something","some","for","for","normalization.","this","this","it","this","this","the","with","something","is"]},{"Key":"do similar","Fragments":["jobs"]},{"Key":"similar jobs","Fragments":["in"]},{"Key":"jobs in","Fragments":["most"]},{"Key":"in most","Fragments":["cases."]},{"Key":"most cases.","Fragments":["(Maybe"]},{"Key":"cases. (Maybe","Fragments":["the"]},{"Key":"(Maybe the","Fragments":["`lists:sublist`"]},{"Key":"the `lists:sublist`","Fragments":["doesn't"]},{"Key":"`lists:sublist` doesn't","Fragments":["handle"]},{"Key":"doesn't handle","Fragments":["the"]},{"Key":"handle the","Fragments":["4-6","`first`"]},{"Key":"the 4-6","Fragments":["substring"]},{"Key":"4-6 substring","Fragments":["I"]},{"Key":"substring I","Fragments":["can't"]},{"Key":"can't remember","Fragments":["off"]},{"Key":"remember off","Fragments":["the"]},{"Key":"off the","Fragments":["top","ranch,","wire,"]},{"Key":"the top","Fragments":["of","or"]},{"Key":"top of","Fragments":["my"]},{"Key":"of my","Fragments":["head?)","initial","recent","solution,","Python","FP","overloaded"]},{"Key":" i","Fragments":["like","like","came"]},{"Key":"i like","Fragments":["the","that"]},{"Key":"like the","Fragments":["list","guard","combination","fix","Erlang","implementation","tokenization","defined","idea","idea","logic,","way","use","solution.","guards.","`group`","way","use","use","fact","use","definition","flow","idea","wrong","way","character","conversion","second","guard","approach","method","use"]},{"Key":"the list","Fragments":["comprehension.","instead","onto","by","comprehension","on","once","presumably","to","and","backwards.","in","in","comprehension,","returned","unique","operations?","comprehension","comprehension","thrice","of","comprehension","up","comprehension","approach","left","your","which","in","handling.","were","components"]},{"Key":"are doing","Fragments":["some"]},{"Key":"doing some","Fragments":["of"]},{"Key":"the work","Fragments":["twice.","once?"]},{"Key":"work twice.","Fragments":["pretty_print"]},{"Key":"twice. pretty_print","Fragments":["calls"]},{"Key":"pretty_print calls","Fragments":["number"]},{"Key":"calls number","Fragments":["directly"]},{"Key":"number directly","Fragments":["and"]},{"Key":"directly and","Fragments":["areacode"]},{"Key":"and areacode","Fragments":["calls"]},{"Key":"areacode calls","Fragments":["it"]},{"Key":"calls it","Fragments":["again."]},{"Key":"it again.","Fragments":["Can"]},{"Key":"again. Can","Fragments":["you"]},{"Key":"you revise","Fragments":["so"]},{"Key":"revise so","Fragments":["that"]},{"Key":"so that","Fragments":["you","400","the","they","other","the","the"]},{"Key":"that you","Fragments":["are","would","mention","made","consider","can","return","aren't","have","have","are","can't","suggest","where","abstracted","reverse","use","can","are","always","mention"]},{"Key":"you are","Fragments":["only","mixing","working","correct.","effectively","going","representing","using","not","consing","iterating","sorting","guaranteed","looking","right","looking","using","parsing","counting","getting","communicating","right","interested"]},{"Key":"are only","Fragments":["doing","*expanded*","two","64"]},{"Key":"only doing","Fragments":["the"]},{"Key":"I wasn't","Fragments":["able","suggesting","able","happy","able","100%","sure","really","sure"]},{"Key":"wasn't able","Fragments":["to","to","to"]},{"Key":"able to","Fragments":["find","check","clean-up","find","be","do","deal","reduce","compare","achieve"]},{"Key":"to find","Fragments":["anything","a","anything","type","`lists:seq/3`.","problems."]},{"Key":"find anything","Fragments":["about","about"]},{"Key":"anything about","Fragments":["`++`s","`++`s"]},{"Key":"about `++`s","Fragments":["fixity.","fixity."]},{"Key":"`++`s fixity.","Fragments":["So","So"]},{"Key":"fixity. So","Fragments":["could","could"]},{"Key":"So could","Fragments":["you","you"]},{"Key":"could you","Fragments":["enlighten","explain?","enlighten","enlighten","make","do","do"]},{"Key":"you enlighten","Fragments":["me","me","me?"]},{"Key":"enlighten me","Fragments":["which","which"]},{"Key":"me which","Fragments":["one","one"]},{"Key":"which one","Fragments":["of","of","wins?"]},{"Key":"one of","Fragments":["the","them.","the","the","my","the","the","the","the","Erlang's","the"]},{"Key":"the following","Fragments":["actually","actually","links:","improvements:","snippet","three"]},{"Key":"following actually","Fragments":["happens?","happens?"]},{"Key":" 1.","Fragments":["`((((((\"(\"","`((((((\"(\"","The","`f/1`","To","use"]},{"Key":"1. `((((((\"(\"","Fragments":["++","++"]},{"Key":"`((((((\"(\" ++","Fragments":["AreaCode)","AreaCode)"]},{"Key":"++ AreaCode)","Fragments":["++","++"]},{"Key":"AreaCode) ++","Fragments":["\")\")","\")\")"]},{"Key":"++ \")\")","Fragments":["++","++"]},{"Key":"\")\") ++","Fragments":["\"","\""]},{"Key":"++ \"","Fragments":["\")","\")"]},{"Key":"\" \")","Fragments":["++","++"]},{"Key":"\") ++","Fragments":["ExchangeName)","ExchangeName)"]},{"Key":"++ ExchangeName)","Fragments":["++","++"]},{"Key":"ExchangeName) ++","Fragments":["\"-\")","\"-\")"]},{"Key":"++ \"-\")","Fragments":["++","++"]},{"Key":"\"-\") ++","Fragments":["Remain)`","Remain)`"]},{"Key":" 2.","Fragments":["`(\"(\"","`(\"(\"","I","I","To","Better"]},{"Key":"2. `(\"(\"","Fragments":["++","++"]},{"Key":"`(\"(\" ++","Fragments":["(AreaCode","(AreaCode"]},{"Key":"++ (AreaCode","Fragments":["++","++"]},{"Key":"(AreaCode ++","Fragments":["(\")\"","(\")\""]},{"Key":"++ (\")\"","Fragments":["++","++"]},{"Key":"(\")\" ++","Fragments":["(\"","(\""]},{"Key":"++ (\"","Fragments":["\"","\""]},{"Key":"(\" \"","Fragments":["++","++"]},{"Key":"\" ++","Fragments":["(ExchangeName","(ExchangeName"]},{"Key":"++ (ExchangeName","Fragments":["++","++"]},{"Key":"(ExchangeName ++","Fragments":["(\"-\"","(\"-\""]},{"Key":"++ (\"-\"","Fragments":["++","++"]},{"Key":"(\"-\" ++","Fragments":["Remain))))))`","Remain))))))`"]},{"Key":"Also if","Fragments":["someone"]},{"Key":"if someone","Fragments":["wants","throws","passes","inputs"]},{"Key":"someone wants","Fragments":["to"]},{"Key":"wants to","Fragments":["fool"]},{"Key":"to fool","Fragments":["you,"]},{"Key":"fool you,","Fragments":["he"]},{"Key":"you, he","Fragments":["just"]},{"Key":"he just","Fragments":["needs"]},{"Key":"just needs","Fragments":["to"]},{"Key":"to throw","Fragments":["in"]},{"Key":"throw in","Fragments":["a"]},{"Key":"a String","Fragments":["with"]},{"Key":"String with","Fragments":["1"]},{"Key":"with 1","Fragments":["Billion"]},{"Key":"1 Billion","Fragments":["random"]},{"Key":"Billion random","Fragments":["digits."]},{"Key":"random digits.","Fragments":["Your"]},{"Key":"digits. Your","Fragments":["sollution"]},{"Key":"Your sollution","Fragments":["will"]},{"Key":"sollution will","Fragments":["count"]},{"Key":"will count","Fragments":["them"]},{"Key":"count them","Fragments":["twice"]},{"Key":"them twice","Fragments":["before"]},{"Key":"twice before","Fragments":["deciding"]},{"Key":"before deciding","Fragments":["that"]},{"Key":"deciding that","Fragments":["its"]},{"Key":"that its","Fragments":["invalid."]},{"Key":" Pretty","Fragments":["sure","much"]},{"Key":"Pretty sure","Fragments":["a"]},{"Key":"sure a","Fragments":["lot"]},{"Key":"a lot","Fragments":["of","for","cleaner","of","of","of","of","for","of","shorter","cleaner","of","of","but","on","here","better","on","better."]},{"Key":"lot of","Fragments":["the","garbage","work","cursing","sense","this","memory.","duplication","information,"]},{"Key":"the robot","Fragments":["message"]},{"Key":"robot message","Fragments":["responses"]},{"Key":"message responses","Fragments":["(the"]},{"Key":"responses (the","Fragments":["`ok`s)"]},{"Key":"(the `ok`s)","Fragments":["are"]},{"Key":"`ok`s) are","Fragments":["unnecessary."]},{"Key":"This solution","Fragments":["looks","does"]},{"Key":"solution looks","Fragments":["pretty"]},{"Key":"looks pretty","Fragments":["clean,"]},{"Key":"pretty clean,","Fragments":["overall!"]},{"Key":"clean, overall!","Fragments":["I"]},{"Key":"overall! I","Fragments":["think"]},{"Key":"you might","Fragments":["like","have","consider","find","consider"]},{"Key":"like what","Fragments":["gen_fsm"]},{"Key":"what gen_fsm","Fragments":["has"]},{"Key":"gen_fsm has","Fragments":["to"]},{"Key":"has to","Fragments":["offer,","copy","keep","create","be","parse","iterate","be,","issue"]},{"Key":"to offer,","Fragments":["though:"]},{"Key":"offer, though:","Fragments":["http://www.erlang.org/documentation/doc-4.8.2/doc/design_principles/fsm.html"]},{"Key":" Personally,","Fragments":["I"]},{"Key":"Personally, I","Fragments":["like"]},{"Key":"I like","Fragments":["keeping","this","this","that","how","that","the","the","your","the","the","the","this","that.","the","the","the","it..","your","to","how","the","the","the","all","your","the","it!","that","this","the","it.","the","it.","how","how","the","that","my"]},{"Key":"like keeping","Fragments":["atoms"]},{"Key":"keeping atoms","Fragments":["around"]},{"Key":"atoms around","Fragments":["when"]},{"Key":"around when","Fragments":["you're"]},{"Key":"when you're","Fragments":["describing","trying"]},{"Key":"you're describing","Fragments":["things"]},{"Key":"describing things","Fragments":["like"]},{"Key":"things like","Fragments":["state","the"]},{"Key":"like state","Fragments":["changes,"]},{"Key":"state changes,","Fragments":["etc."]},{"Key":"changes, etc.","Fragments":["I"]},{"Key":"etc. I","Fragments":["generally"]},{"Key":"I generally","Fragments":["prefer"]},{"Key":"generally prefer","Fragments":["that"]},{"Key":"prefer that","Fragments":["they"]},{"Key":"that they","Fragments":["be","have","accept","found","walk"]},{"Key":"they be","Fragments":["the","sped"]},{"Key":"be the","Fragments":["first","last","empty","style","same,"]},{"Key":"the first","Fragments":["item","list","time","character.","N","function","character.","position).","character","clause","case","covering","function","two","clause.","iteration.","argument).","thing","thing","list","step","line's","step","4"]},{"Key":"first item","Fragments":["in"]},{"Key":"item in","Fragments":["the","the"]},{"Key":"in the","Fragments":["tuple,","commands","spirit","spec","end","spirit","test","tests","ass","arbitrary","simplest","stack","right","test","function","type","last","list","starting","case","general","habit","wrong","Erlang","function.","description.","habit","head","interest","right","general","average","average","first","last","first","first","first","second","last","vestiges","function","case","construction","spec","catch","list,","previous","case","books","expression.","same","version","parameter.","parameter.","test","discard","`square/1`","trace","following?","last","last","usual","typespec","replace","atom","range","type.","map.","type","function","if","end!","domain","function","call","context","correct","sequence.","right","recursion.","long","function"]},{"Key":"the tuple,","Fragments":["though."]},{"Key":" So","Fragments":["for","I","you","we","this","the","yes.","you"]},{"Key":"So for","Fragments":["example"]},{"Key":"for example","Fragments":["you'd","consider","length)."]},{"Key":"example you'd","Fragments":["use"]},{"Key":"you'd use","Fragments":["a","`[Hd|Tl]`"]},{"Key":"a tuple","Fragments":["like","of"]},{"Key":"tuple like","Fragments":["`{ok,","`{bc,"]},{"Key":"like `{ok,","Fragments":["self()}`"]},{"Key":"`{ok, self()}`","Fragments":["as"]},{"Key":"self()}` as","Fragments":["the"]},{"Key":"as the","Fragments":["response","ones","body","`range`","remaining","rest","best","first","base","intermediate","dna","second","underlying","software","\"typical","problem"]},{"Key":"the response","Fragments":["from"]},{"Key":"response from","Fragments":["a"]},{"Key":"from a","Fragments":["left","caller","comprehensibility"]},{"Key":"a left","Fragments":["or"]},{"Key":"left or","Fragments":["right"]},{"Key":"or right","Fragments":["command?"]},{"Key":"right command?","Fragments":["What"]},{"Key":"command? What","Fragments":["about"]},{"Key":"What about","Fragments":["the","a"]},{"Key":"the tuple","Fragments":["ordering","of"]},{"Key":"tuple ordering","Fragments":["in"]},{"Key":"ordering in","Fragments":["the"]},{"Key":"the commands","Fragments":["themselves,"]},{"Key":"commands themselves,","Fragments":["would"]},{"Key":"themselves, would","Fragments":["it"]},{"Key":"it make","Fragments":["sense"]},{"Key":"make sense","Fragments":["to","for","to"]},{"Key":"sense to","Fragments":["have","me.","me","keep"]},{"Key":"to have","Fragments":["them","in","missed","a","to","a","complete","a","a","a","to","a","the","a","an","a","a","a","a","a","a"]},{"Key":"have them","Fragments":["structured","available."]},{"Key":"them structured","Fragments":["like"]},{"Key":"structured like","Fragments":["`{left,"]},{"Key":"like `{left,","Fragments":["From}`?"]},{"Key":" I'll","Fragments":["definitely","try","try","see","let"]},{"Key":"I'll definitely","Fragments":["look","add"]},{"Key":"definitely look","Fragments":["at"]},{"Key":"look at","Fragments":["gen_fsm,","```lists:map/2```","the","list","your","it,","`lists:filter`","others'","[Joe","list","this.","your","regexes","the","http://erlang.org/doc/reference_manual/typespec.html","`lists:filter`.","guard","list","list","them","more"]},{"Key":"at gen_fsm,","Fragments":["if"]},{"Key":"gen_fsm, if","Fragments":["only"]},{"Key":"if only","Fragments":["to","the"]},{"Key":"only to","Fragments":["see","check"]},{"Key":"to see","Fragments":["what","how","whats","what","why","why","what","if"]},{"Key":"what it's","Fragments":["like"]},{"Key":"it's like","Fragments":["to"]},{"Key":" records","Fragments":["are"]},{"Key":"records are","Fragments":["essentially","the"]},{"Key":"are essentially","Fragments":["a"]},{"Key":"essentially a","Fragments":["hacked"]},{"Key":"a hacked","Fragments":["tuple,"]},{"Key":"hacked tuple,","Fragments":["but"]},{"Key":"tuple, but","Fragments":["I"]},{"Key":"I found","Fragments":["this","the","this","it"]},{"Key":"found this","Fragments":["exercise","code"]},{"Key":"this exercise","Fragments":["was","a","is","is"]},{"Key":"exercise was","Fragments":["a","really"]},{"Key":"was a","Fragments":["good","bug","clever","lazy","point","reason.","good"]},{"Key":"good chance","Fragments":["to","to"]},{"Key":"chance to","Fragments":["try","contribute.","try"]},{"Key":"to try","Fragments":["them","to","out","\"tail"]},{"Key":"try them","Fragments":["out."]},{"Key":"The biggest","Fragments":["changes"]},{"Key":"biggest changes","Fragments":["that"]},{"Key":"changes that","Fragments":["I"]},{"Key":"would make","Fragments":["to","would","a","sense"]},{"Key":"make to","Fragments":["this"]},{"Key":"to this","Fragments":["is","point","(awful,","approach?","problem"]},{"Key":"the use","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"the gen_server","Fragments":["behavior","behavior"]},{"Key":"gen_server behavior","Fragments":["and","then"]},{"Key":"behavior and","Fragments":["the"]},{"Key":"of records.","Fragments":["It"]},{"Key":"records. It","Fragments":["would"]},{"Key":"It would","Fragments":["help","be","require"]},{"Key":"would help","Fragments":["to","a","the","this"]},{"Key":"help to","Fragments":["reduce"]},{"Key":"to reduce","Fragments":["some","the","your","the","the","the"]},{"Key":"reduce some","Fragments":["of"]},{"Key":" If","Fragments":["you","you","I","no","I","you","we","you're","I","you","I","there","you","I","you"]},{"Key":"If you","Fragments":["were","have","wanted","want","don't","are","use","are","make","don't","expect","wanted","wanted","had","are"]},{"Key":"you were","Fragments":["to","encouraged","running"]},{"Key":"were to","Fragments":["use"]},{"Key":"use the","Fragments":["gen_server","conditionals","extra","strengths","supplied","function","macros,","stdlib","same","same","same","`++`","map?","approach","`-spec`","iterative","`-spec`","integer"]},{"Key":"behavior then","Fragments":["the"]},{"Key":"then the","Fragments":["create","sum"]},{"Key":"the create","Fragments":["method"]},{"Key":"create method","Fragments":["could"]},{"Key":"method could","Fragments":["become"]},{"Key":" start_link()","Fragments":["-\u003e"]},{"Key":" gen_server:start_link(?MODULE,","Fragments":["[],"]},{"Key":"gen_server:start_link(?MODULE, [],","Fragments":["[])."]},{"Key":"The public","Fragments":["API"]},{"Key":"public API","Fragments":["could"]},{"Key":"API could","Fragments":["look"]},{"Key":"could look","Fragments":["like","like:"]},{"Key":"look like","Fragments":["this:","in","with"]},{"Key":" direction(Robot)","Fragments":["-\u003e"]},{"Key":" gen_server:call(Robot,","Fragments":["direction).","position).","{control,"]},{"Key":" position(Robot)","Fragments":["-\u003e"]},{"Key":" place(Robot,","Fragments":["Facing,"]},{"Key":"place(Robot, Facing,","Fragments":["Position)"]},{"Key":"Facing, Position)","Fragments":["-\u003e"]},{"Key":" gen_server:cast(Robot,","Fragments":["{place,","{turn,","{turn,","advance)."]},{"Key":"gen_server:cast(Robot, {place,","Fragments":["Facing,"]},{"Key":"{place, Facing,","Fragments":["Position})."]},{"Key":" left(Robot)","Fragments":["-\u003e"]},{"Key":"gen_server:cast(Robot, {turn,","Fragments":["left}).","right})."]},{"Key":" right(Robot)","Fragments":["-\u003e"]},{"Key":" advance(Robot)","Fragments":["-\u003e"]},{"Key":" control(Robot,","Fragments":["Plan)"]},{"Key":"control(Robot, Plan)","Fragments":["-\u003e"]},{"Key":"gen_server:call(Robot, {control,","Fragments":["Plan})."]},{"Key":"The calls","Fragments":["that"]},{"Key":"calls that","Fragments":["must"]},{"Key":"that must","Fragments":["be"]},{"Key":"must be","Fragments":["synchronous","either","written","of","an"]},{"Key":"be synchronous","Fragments":["could"]},{"Key":"synchronous could","Fragments":["look"]},{"Key":" handle_call(direction,","Fragments":["_From,"]},{"Key":"handle_call(direction, _From,","Fragments":["State)"]},{"Key":"_From, State)","Fragments":["-\u003e","-\u003e"]},{"Key":" Reply","Fragments":["=","="]},{"Key":"Reply =","Fragments":["State#state.direction,","State#state.position,"]},{"Key":" {reply,","Fragments":["Reply,","Reply,","ok,"]},{"Key":"{reply, Reply,","Fragments":["State};","State};"]},{"Key":" handle_call(position,","Fragments":["_From,"]},{"Key":"handle_call(position, _From,","Fragments":["State)"]},{"Key":" handle_call({control,","Fragments":["Plan},"]},{"Key":"handle_call({control, Plan},","Fragments":["_From,"]},{"Key":"Plan}, _From,","Fragments":["State=#state{direction=Facing,"]},{"Key":"_From, State=#state{direction=Facing,","Fragments":["position=Position})"]},{"Key":"State=#state{direction=Facing, position=Position})","Fragments":["-\u003e"]},{"Key":" {NowFacing,","Fragments":["NewPosition}"]},{"Key":"{NowFacing, NewPosition}","Fragments":["="]},{"Key":"NewPosition} =","Fragments":["control(Plan,"]},{"Key":"= control(Plan,","Fragments":["Facing,"]},{"Key":"control(Plan, Facing,","Fragments":["Position),"]},{"Key":"{reply, ok,","Fragments":["State#state{direction=NowFacing,"]},{"Key":"ok, State#state{direction=NowFacing,","Fragments":["position=NewPosition}}."]},{"Key":" And","Fragments":["the","the","the","the","now..."]},{"Key":"And the","Fragments":["asynchronous","final","first","list"]},{"Key":"the asynchronous","Fragments":["calls"]},{"Key":"asynchronous calls","Fragments":["can"]},{"Key":"calls can","Fragments":["look"]},{"Key":"can look","Fragments":["like:"]},{"Key":" handle_cast({place,","Fragments":["Facing,"]},{"Key":"handle_cast({place, Facing,","Fragments":["Position},"]},{"Key":"Facing, Position},","Fragments":["State)"]},{"Key":"Position}, State)","Fragments":["-\u003e"]},{"Key":" {noreply,","Fragments":["State#state{direction=Facing,","State#state{direction=NowFacing}};","State#state{position=NewPosition}}."]},{"Key":"{noreply, State#state{direction=Facing,","Fragments":["position=Position}};"]},{"Key":" handle_cast({turn,","Fragments":["Direction},"]},{"Key":"handle_cast({turn, Direction},","Fragments":["State=#state{direction=Facing})"]},{"Key":"Direction}, State=#state{direction=Facing})","Fragments":["-\u003e"]},{"Key":" NowFacing","Fragments":["="]},{"Key":"NowFacing =","Fragments":["turn(Direction,"]},{"Key":"= turn(Direction,","Fragments":["Facing),"]},{"Key":" handle_cast(advance,","Fragments":["State=#state{direction=Direction,"]},{"Key":"handle_cast(advance, State=#state{direction=Direction,","Fragments":["position=Position})"]},{"Key":"State=#state{direction=Direction, position=Position})","Fragments":["-\u003e"]},{"Key":" NewPosition","Fragments":["="]},{"Key":"NewPosition =","Fragments":["forward(Direction,"]},{"Key":"= forward(Direction,","Fragments":["Position),"]},{"Key":"This could","Fragments":["make"]},{"Key":"could make","Fragments":["the"]},{"Key":"make the","Fragments":["turn","function","function","list","singletonlist","code","logic","code","code","argument","spec"]},{"Key":"the turn","Fragments":["and"]},{"Key":"turn and","Fragments":["forward"]},{"Key":"and forward","Fragments":["functions"]},{"Key":"forward functions","Fragments":["look"]},{"Key":"functions look","Fragments":["something"]},{"Key":"look something","Fragments":["like:"]},{"Key":" turn(left,","Fragments":["north)","east)","south)","west)"]},{"Key":"turn(left, north)","Fragments":["-\u003e"]},{"Key":"north) -\u003e","Fragments":["west;","east;"]},{"Key":"turn(left, east)","Fragments":["-\u003e"]},{"Key":"east) -\u003e","Fragments":["north;","south;"]},{"Key":"turn(left, south)","Fragments":["-\u003e"]},{"Key":"south) -\u003e","Fragments":["east;","west;"]},{"Key":"turn(left, west)","Fragments":["-\u003e"]},{"Key":"west) -\u003e","Fragments":["south;","north."]},{"Key":" turn(right,","Fragments":["north)","east)","south)","west)"]},{"Key":"turn(right, north)","Fragments":["-\u003e"]},{"Key":"turn(right, east)","Fragments":["-\u003e"]},{"Key":"turn(right, south)","Fragments":["-\u003e"]},{"Key":"turn(right, west)","Fragments":["-\u003e"]},{"Key":" forward(north,","Fragments":["{X,"]},{"Key":"forward(north, {X,","Fragments":["Y})"]},{"Key":"{X, Y})","Fragments":["-\u003e","-\u003e","-\u003e","-\u003e"]},{"Key":"Y}) -\u003e","Fragments":["{X,","{X,","{X","{X"]},{"Key":"-\u003e {X,","Fragments":["Y","Y"]},{"Key":"{X, Y","Fragments":["+","-"]},{"Key":"Y +","Fragments":["1};"]},{"Key":" forward(south,","Fragments":["{X,"]},{"Key":"forward(south, {X,","Fragments":["Y})"]},{"Key":"Y -","Fragments":["1};"]},{"Key":" forward(east,","Fragments":["{X,"]},{"Key":"forward(east, {X,","Fragments":["Y})"]},{"Key":"-\u003e {X","Fragments":["+","-"]},{"Key":"{X +","Fragments":["1,"]},{"Key":"+ 1,","Fragments":["Y};"]},{"Key":" forward(west,","Fragments":["{X,"]},{"Key":"forward(west, {X,","Fragments":["Y})"]},{"Key":"{X -","Fragments":["1,"]},{"Key":"- 1,","Fragments":["Y}."]},{"Key":"the final","Fragments":["change","function"]},{"Key":"final change","Fragments":["I"]},{"Key":"change I","Fragments":["would"]},{"Key":"make would","Fragments":["be"]},{"Key":"would be","Fragments":["to","something","to","better","very","a","nice","exercises","more","nice...","more","better","just","grateful","to","glad","clearer","better","far","more","expected.","to","0.","better,","interested","interested","obvious","to","easier","too","normalizing","nice","great!","much","particularly","better","to","accepted","better","nice","more","good","good"]},{"Key":"be to","Fragments":["the","use","use","use","skip","replace","be"]},{"Key":"to the","Fragments":["parse","exception,","next","problem.","single","Haskell","implementation","caller.","function.","users","head","correct","right","accumulator,","last","original,","code","Julian","power","Unicode","algorithm","case","nearest","amount","end","provided","n^2","problem","outside,","outside,","front","irritating","problem,","problem.","site.","website","old","site.","website","tail","site.","website","limites","inlined","problem,","accumulator,","first","typespec","point.","caller.","site.","website","function","test","site.","website","function","macro.","case","tests","site.","website","grammar","type","site.","website","guard.","site.","website","bottom.","site.","website","site.","website","realization"]},{"Key":"the parse","Fragments":["and"]},{"Key":"parse and","Fragments":["plan_to_command"]},{"Key":"and plan_to_command","Fragments":["functions."]},{"Key":"plan_to_command functions.","Fragments":["I"]},{"Key":"functions. I","Fragments":["would"]},{"Key":"probably do","Fragments":["something"]},{"Key":"something similar","Fragments":["to:","but","with"]},{"Key":" parse(Plan)","Fragments":["-\u003e"]},{"Key":" plan_to_command(Plan,","Fragments":["[])."]},{"Key":" plan_to_command([],","Fragments":["Commands)"]},{"Key":"plan_to_command([], Commands)","Fragments":["-\u003e"]},{"Key":"Commands) -\u003e","Fragments":["lists:reverse(Commands);","plan_to_command(Rest,","plan_to_command(Rest,","plan_to_command(Rest,"]},{"Key":" plan_to_command([$R|Rest],","Fragments":["Commands)"]},{"Key":"plan_to_command([$R|Rest], Commands)","Fragments":["-\u003e"]},{"Key":"-\u003e plan_to_command(Rest,","Fragments":["[right","[left","[advance"]},{"Key":"plan_to_command(Rest, [right","Fragments":["|"]},{"Key":"[right |","Fragments":["Commands]);"]},{"Key":" plan_to_command([$L|Rest],","Fragments":["Commands)"]},{"Key":"plan_to_command([$L|Rest], Commands)","Fragments":["-\u003e"]},{"Key":"plan_to_command(Rest, [left","Fragments":["|"]},{"Key":"[left |","Fragments":["Commands]);"]},{"Key":" plan_to_command([$A|Rest],","Fragments":["Commands)"]},{"Key":"plan_to_command([$A|Rest], Commands)","Fragments":["-\u003e"]},{"Key":"plan_to_command(Rest, [advance","Fragments":["|"]},{"Key":"[advance |","Fragments":["Commands]);"]},{"Key":" plan_to_command(_,","Fragments":["_)"]},{"Key":"plan_to_command(_, _)","Fragments":["-\u003e"]},{"Key":"_) -\u003e","Fragments":["[].","0."]},{"Key":"you have","Fragments":["any","the","guards","analyzed","placed","additional","already","the","in","a","a","any","effectively","seen"]},{"Key":"have any","Fragments":["questions,","good","other","rule","evidence","particular"]},{"Key":"any questions,","Fragments":["please"]},{"Key":"questions, please","Fragments":["let"]},{"Key":"please let","Fragments":["me"]},{"Key":"let me","Fragments":["know.","see"]},{"Key":"have plans","Fragments":["to"]},{"Key":"plans to","Fragments":["redo"]},{"Key":"to redo","Fragments":["this"]},{"Key":"redo this","Fragments":["using"]},{"Key":"this using","Fragments":["either","`gen_server`"]},{"Key":"using either","Fragments":["gen_fsm"]},{"Key":"either gen_fsm","Fragments":["or"]},{"Key":"gen_fsm or","Fragments":["gen_server,"]},{"Key":"or gen_server,","Fragments":["I"]},{"Key":"gen_server, I","Fragments":["wanted"]},{"Key":"I wanted","Fragments":["to","to","to","to","to","to","to"]},{"Key":"wanted to","Fragments":["do","be","be","implement","understand","take","use","normalize","protect","make","make","make","use","see","make","make","improve","do","make","make","make","make","make"]},{"Key":"do a","Fragments":["little","`case","second"]},{"Key":"little myself","Fragments":["for"]},{"Key":"myself for","Fragments":["practice"]},{"Key":"for practice","Fragments":["first."]},{"Key":"practice first.","Fragments":["Part"]},{"Key":"first. Part","Fragments":["of"]},{"Key":"Part of","Fragments":["that"]},{"Key":"of that","Fragments":["is","story,","function.","fold","implementation","`f([])"]},{"Key":"is splitting","Fragments":["up"]},{"Key":"splitting up","Fragments":["the"]},{"Key":"up the","Fragments":["turn/movement","logic","significance","result.","guards","[test","result","if","functions.","code"]},{"Key":"the turn/movement","Fragments":["functions"]},{"Key":"turn/movement functions","Fragments":["so"]},{"Key":"functions so","Fragments":["they"]},{"Key":"so they","Fragments":["don't","match"]},{"Key":"they don't","Fragments":["deal","always"]},{"Key":"don't deal","Fragments":["with"]},{"Key":"deal with","Fragments":["the","splitting","uppercase","the","edge"]},{"Key":"with the","Fragments":["entire","details","most-specific","tail","empty","naming","average","comment","same","RNA","YAGNI","first","implementation","empty","other","size","following","spirit","solo","cases","main","test","comments","explicit","`ok`","lowest","input","fold.","name","2nd","fact","`find_multiples_under`","guard.","named","error","original","length","call","shorthand","concept."]},{"Key":"entire state","Fragments":["at"]},{"Key":"state at","Fragments":["once."]},{"Key":"not so","Fragments":["sure","good"]},{"Key":"so sure","Fragments":["about"]},{"Key":"sure about","Fragments":["the","its","is,"]},{"Key":"the plan","Fragments":["parsing."]},{"Key":"plan parsing.","Fragments":["I"]},{"Key":"parsing. I","Fragments":["used"]},{"Key":"I used","Fragments":["to","a","a","lists:sum","a","a","them"]},{"Key":"used to","Fragments":["roll","guards,","using","doing","concatenate"]},{"Key":"to roll","Fragments":["my"]},{"Key":"roll my","Fragments":["own"]},{"Key":"my own","Fragments":["loops","code","question"]},{"Key":"own loops","Fragments":["constructs"]},{"Key":"loops constructs","Fragments":["like"]},{"Key":"constructs like","Fragments":["that","`is_valid_instruction($L)"]},{"Key":"like that","Fragments":["but","you","your","you","you","technique,","the"]},{"Key":"that but","Fragments":["been"]},{"Key":"but been","Fragments":["trying"]},{"Key":"been trying","Fragments":["to","to.","to"]},{"Key":"trying to","Fragments":["use","tell","not","sort","wrap","find","recover","use","match","tell"]},{"Key":"use BIFs","Fragments":["for"]},{"Key":"BIFs for","Fragments":["lists"]},{"Key":"for lists","Fragments":["more"]},{"Key":"lists more","Fragments":["recently."]},{"Key":"more recently.","Fragments":["Can"]},{"Key":"recently. Can","Fragments":["see"]},{"Key":"Can see","Fragments":["how"]},{"Key":"see how","Fragments":["that","the"]},{"Key":"how that","Fragments":["is"]},{"Key":"is slightly","Fragments":["simpler"]},{"Key":"slightly simpler","Fragments":["for"]},{"Key":"simpler for","Fragments":["bailing"]},{"Key":"for bailing","Fragments":["early"]},{"Key":"bailing early","Fragments":["on"]},{"Key":"early on","Fragments":["a"]},{"Key":"bad command,","Fragments":["compared"]},{"Key":"command, compared","Fragments":["to"]},{"Key":"compared to","Fragments":["the","building"]},{"Key":"the exception,","Fragments":["so"]},{"Key":"exception, so","Fragments":["that's"]},{"Key":"so that's","Fragments":["something"]},{"Key":"that's something","Fragments":["I'll"]},{"Key":"something I'll","Fragments":["consider."]},{"Key":" When","Fragments":["writing","I","looking","I","I","I","I"]},{"Key":"When writing","Fragments":["Erlang"]},{"Key":"writing Erlang","Fragments":["I"]},{"Key":"Erlang I","Fragments":["try"]},{"Key":"I try","Fragments":["my","to","something"]},{"Key":"try my","Fragments":["best"]},{"Key":"my best","Fragments":["to"]},{"Key":"best to","Fragments":["avoid","indent"]},{"Key":"to avoid","Fragments":["throwing","it.","`if`-expressions","non-strict","function","building","returning","duplication","errors,","the","reversing","this?","unnecessary","duplicates.","calling","some"]},{"Key":"avoid throwing","Fragments":["exceptions"]},{"Key":"throwing exceptions","Fragments":["and"]},{"Key":"exceptions and","Fragments":["using"]},{"Key":"and using","Fragments":["if/case","those","the"]},{"Key":"using if/case","Fragments":["statements."]},{"Key":"if/case statements.","Fragments":["I"]},{"Key":"statements. I","Fragments":["also"]},{"Key":"also try","Fragments":["to"]},{"Key":"try to","Fragments":["use","approach","explain","update","read","get","make","avoid","do"]},{"Key":"use guards","Fragments":["to","!","(it"]},{"Key":"guards to","Fragments":["prevent","your","your","name","make","every","check","make","check"]},{"Key":"to prevent","Fragments":["functions","bad"]},{"Key":"prevent functions","Fragments":["from"]},{"Key":"functions from","Fragments":["being","`lists`-module?"]},{"Key":"from being","Fragments":["called"]},{"Key":"being called","Fragments":["with"]},{"Key":"called with","Fragments":["invalid","the","parameter"]},{"Key":"with invalid","Fragments":["data."]},{"Key":"invalid data.","Fragments":["It"]},{"Key":"data. It","Fragments":["doesn't"]},{"Key":"It doesn't","Fragments":["always","get","make","have"]},{"Key":"doesn't always","Fragments":["work"]},{"Key":"always work","Fragments":["that"]},{"Key":"work that","Fragments":["way,"]},{"Key":"that way,","Fragments":["but"]},{"Key":"way, but","Fragments":["that's"]},{"Key":"but that's","Fragments":["how"]},{"Key":"that's how","Fragments":["I","it"]},{"Key":"how I","Fragments":["try","feel","might"]},{"Key":"to approach","Fragments":["the"]},{"Key":"approach the","Fragments":["code."]},{"Key":" -","Fragments":["learn","Why","you","for","Nice","I","This","Find","Use","Provide","[Write","[Stack","`and`","`andalso`","`to_rna`","Use","The","\"Let","Update","and...","Why","You","Missing","Renamed"]},{"Key":"- learn","Fragments":["about"]},{"Key":"learn about","Fragments":["lists:map","`update_counter`,"]},{"Key":"about lists:map","Fragments":["and"]},{"Key":"lists:map and","Fragments":["list"]},{"Key":"and list","Fragments":["comprehension"]},{"Key":"list comprehension","Fragments":["rather","rather","logic","its","you","is","or","is","to","as","to","version","is","and","have","for","approaches","here","in","syntax,","for","rather","filter","than","would","is"]},{"Key":"comprehension rather","Fragments":["than","than","than"]},{"Key":"rather than","Fragments":["doing","matching","inefficiently","projection.","nesting","case","8","`lists:append/2`","guards","on","an","to_rna/1","list"]},{"Key":"than doing","Fragments":["this","nothing?","join."]},{"Key":"doing this","Fragments":["yourself","yourself","manually"]},{"Key":"this yourself","Fragments":["inefficiently","(your"]},{"Key":"- Why","Fragments":["do","are"]},{"Key":"Why do","Fragments":["a","you","you","you","you"]},{"Key":"a `case","Fragments":["[X]`","of`"]},{"Key":"`case [X]`","Fragments":["instead"]},{"Key":"[X]` instead","Fragments":["of"]},{"Key":"of just","Fragments":["`case","fixing"]},{"Key":"just `case","Fragments":["X`?"]},{"Key":"`case X`?","Fragments":["Use"]},{"Key":"X`? Use","Fragments":["character"]},{"Key":"Use character","Fragments":["values"]},{"Key":"character values","Fragments":["`$A`,"]},{"Key":"values `$A`,","Fragments":["`$T`,"]},{"Key":"`$A`, `$T`,","Fragments":["etc"]},{"Key":"`$T`, etc","Fragments":["rather"]},{"Key":"etc rather","Fragments":["than"]},{"Key":"than matching","Fragments":["strings","on","on"]},{"Key":"matching strings","Fragments":["`\"A\"`,"]},{"Key":"strings `\"A\"`,","Fragments":["`\"T\"`etc."]},{"Key":" Very","Fragments":["much","compact,","neat","nice,","interesting!"]},{"Key":"Very much","Fragments":["in"]},{"Key":"much in","Fragments":["the","erlang,"]},{"Key":"the spirit","Fragments":["of","of","of","of"]},{"Key":"spirit of","Fragments":["the","the","the","the"]},{"Key":"the exercise.","Fragments":["In","Nice"]},{"Key":"exercise. In","Fragments":["real"]},{"Key":"In real","Fragments":["code","life"]},{"Key":"real code","Fragments":["of","base."]},{"Key":"code of","Fragments":["course,"]},{"Key":"of course,","Fragments":["we'd"]},{"Key":"course, we'd","Fragments":["just"]},{"Key":"we'd just","Fragments":["use"]},{"Key":"just use","Fragments":["a","the","lists:map"]},{"Key":"is my","Fragments":["first","benchmark"]},{"Key":"first ever","Fragments":["Elang..."]},{"Key":" It","Fragments":["is","doesn't","feels","is","took","needs","should","is","might","*might*","feels"]},{"Key":"It is","Fragments":["probably","more","way","classically","readable"]},{"Key":"is probably","Fragments":["Erlang","more","more","a","more","a"]},{"Key":"probably Erlang","Fragments":["baby-talk,"]},{"Key":"Erlang baby-talk,","Fragments":["it"]},{"Key":"baby-talk, it","Fragments":["will"]},{"Key":"it will","Fragments":["be","allow","always","break","increase","crash!","return","match"]},{"Key":"will be","Fragments":["interesting","allowed","O(n)","(1","easier","in","fine"]},{"Key":"be interesting","Fragments":["to"]},{"Key":"interesting to","Fragments":["see","do"]},{"Key":"how the","Fragments":["other","compiler","exercises","read-only"]},{"Key":"other solutions","Fragments":["make","(at","here,","without","I"]},{"Key":"solutions make","Fragments":["use"]},{"Key":"make use","Fragments":["of"]},{"Key":" @grady","Fragments":["Add"]},{"Key":"@grady Add","Fragments":["type"]},{"Key":"Add type","Fragments":["specs"]},{"Key":"type specs","Fragments":["(type","(type","first."]},{"Key":"specs (type","Fragments":["checking)","checking).","checking)"]},{"Key":"(type checking)","Fragments":["and","and"]},{"Key":"checking) and","Fragments":["guard","guards"]},{"Key":"and guard","Fragments":["(fail"]},{"Key":"guard (fail","Fragments":["fast)."]},{"Key":"- you","Fragments":["are"]},{"Key":"are mixing","Fragments":["the"]},{"Key":"mixing the","Fragments":["mapping"]},{"Key":"the mapping","Fragments":["functionality","bit","out","function.","is","is","is.","yourself,","and"]},{"Key":"mapping functionality","Fragments":["with"]},{"Key":"functionality with","Fragments":["the"]},{"Key":"the details","Fragments":["of","of"]},{"Key":"details of","Fragments":["how","real-world","the"]},{"Key":"of how","Fragments":["values","the","to"]},{"Key":"how values","Fragments":["are"]},{"Key":"values are","Fragments":["mapped;","already"]},{"Key":"are mapped;","Fragments":["I"]},{"Key":"mapped; I","Fragments":["suggest"]},{"Key":"I suggest","Fragments":["you"]},{"Key":"suggest you","Fragments":["separate"]},{"Key":"you separate","Fragments":["the"]},{"Key":"separate the","Fragments":["two","clauses","circular_buffer_server","data"]},{"Key":"- for","Fragments":["the"]},{"Key":"mapping bit","Fragments":["consider"]},{"Key":"bit consider","Fragments":["using"]},{"Key":"using lists:map","Fragments":["or"]},{"Key":"lists:map or","Fragments":["just","some"]},{"Key":"or just","Fragments":["list"]},{"Key":"just list","Fragments":["comprehension"]},{"Key":"than inefficiently","Fragments":["doing"]},{"Key":"inefficiently doing","Fragments":["this"]},{"Key":"yourself (your","Fragments":["solution"]},{"Key":"(your solution","Fragments":["is"]},{"Key":"solution is","Fragments":["O(n²)","to","clearly","very","better.","probably"]},{"Key":"is O(n²)","Fragments":["where"]},{"Key":"O(n²) where","Fragments":["it"]},{"Key":"where it","Fragments":["should","failed"]},{"Key":"it should","Fragments":["be","read","return","be","be","probably","consider","return"]},{"Key":"I did","Fragments":["this","make","this,","it","that","not","some","not","not","not","that","without","that","this","name"]},{"Key":"did this","Fragments":["in","if_else","in"]},{"Key":"this in","Fragments":["LFE,","`count/2`","one","Haskell","Erlang.","Erlang","any","Erlang.","Erlang.","Erlang.","Erlang.","other"]},{"Key":"in LFE,","Fragments":["because,","why"]},{"Key":"LFE, because,","Fragments":["why"]},{"Key":"because, why","Fragments":["not?"]},{"Key":" Since","Fragments":["you're","`rem`","you're","the","I"]},{"Key":"Since you're","Fragments":["doing","using"]},{"Key":"you're doing","Fragments":["it","first","here"]},{"Key":"doing it","Fragments":["in","in","then","pattern","always."]},{"Key":"LFE, why","Fragments":["not"]},{"Key":"why not","Fragments":["a","`max/2`?","use","call","accumulate","define","a","specify","use"]},{"Key":"not a","Fragments":["macro","valid","fan","list,","had-fast","huge","fan","great","fan","very","fan","big","floating","list).","spec"]},{"Key":"a macro","Fragments":["to","so","to"]},{"Key":"macro to","Fragments":["reduce","use"]},{"Key":"reduce the","Fragments":["boilerplate","problem","number","number","need"]},{"Key":"the boilerplate","Fragments":["in"]},{"Key":"boilerplate in","Fragments":["`secondsInYear`?"]},{"Key":" On","Fragments":["inspection","the","the","a","line","a"]},{"Key":"On inspection","Fragments":["I"]},{"Key":"inspection I","Fragments":["think"]},{"Key":"think a","Fragments":["string","named"]},{"Key":"a string","Fragments":["like","-","into","with","or","which","that"]},{"Key":"string like","Fragments":["\"01001bagel11011\""]},{"Key":"like \"01001bagel11011\"","Fragments":["would"]},{"Key":"\"01001bagel11011\" would","Fragments":["do"]},{"Key":"would do","Fragments":["weird","the"]},{"Key":"do weird","Fragments":["things."]},{"Key":"weird things.","Fragments":["Should"]},{"Key":"things. Should","Fragments":["fix"]},{"Key":"Should fix","Fragments":["that."]},{"Key":"This code","Fragments":["have","pisses"]},{"Key":"code have","Fragments":["many"]},{"Key":"have many","Fragments":["level"]},{"Key":"many level","Fragments":["of"]},{"Key":"level of","Fragments":["nesting."]},{"Key":"of nesting.","Fragments":["Use"]},{"Key":"nesting. Use","Fragments":["pattern"]},{"Key":"Use pattern","Fragments":["matchin"]},{"Key":"pattern matchin","Fragments":["on"]},{"Key":"matchin on","Fragments":["the"]},{"Key":"function level","Fragments":["instead"]},{"Key":"level instead","Fragments":["pattern"]},{"Key":"instead pattern","Fragments":["matching"]},{"Key":"pattern matching","Fragments":["in","in","is","in","as","in","to","to","then","/","in","copied","and","is","because","performance","instead","here","and","in",":)","to","and","suffices.","in","in"]},{"Key":"matching in","Fragments":["case","lambda","the","`anagram_checker`.","the","the","the","functions"]},{"Key":" `if`","Fragments":["might"]},{"Key":"`if` might","Fragments":["be"]},{"Key":"might be","Fragments":["better","able","more","wrong,","a","much","better.","because","nice","more","useful","useful","clearer","slightly"]},{"Key":"better for","Fragments":["this","longer"]},{"Key":"for this","Fragments":["problem","exercise","that","nice","kind","is","robot","iteration."]},{"Key":"this problem","Fragments":["than","needs","makes","that","in","(e.g.,","and"]},{"Key":"problem than","Fragments":["`case`"]},{"Key":"than `case`","Fragments":["because"]},{"Key":"`case` because","Fragments":["you"]},{"Key":"can just","Fragments":["use","do:","call","reuse","check"]},{"Key":"the conditionals","Fragments":["without"]},{"Key":"conditionals without","Fragments":["all"]},{"Key":"without all","Fragments":["the"]},{"Key":"the extra","Fragments":["boilerplate.","accumulator","handling","guards,","quotes.","function","test?"]},{"Key":"Also, it","Fragments":["may"]},{"Key":"it may","Fragments":["just","not","not","not"]},{"Key":"may just","Fragments":["be"]},{"Key":"just be","Fragments":["me"]},{"Key":"be me","Fragments":["being"]},{"Key":"me being","Fragments":["nitpicky"]},{"Key":"being nitpicky","Fragments":["but"]},{"Key":"nitpicky but","Fragments":["dividing"]},{"Key":"but dividing","Fragments":["up"]},{"Key":"dividing up","Fragments":["the"]},{"Key":"the logic","Fragments":["between","again","a","around","from","more","quite","such","into","here"]},{"Key":"logic between","Fragments":["function"]},{"Key":"between function","Fragments":["guards"]},{"Key":"function guards","Fragments":["and","is"]},{"Key":"guards and","Fragments":["case","typespecs.","typespecs.","specs.","a","a","spelled","a"]},{"Key":"and case","Fragments":["clauses"]},{"Key":"case clauses","Fragments":["seems","in"]},{"Key":"clauses seems","Fragments":["dirty"]},{"Key":"seems dirty","Fragments":["somehow."]},{"Key":" Year","Fragments":["rem"]},{"Key":" %%","Fragments":["etc","Line","Line","Line","Line","Line","do","do","Return"]},{"Key":"Looks nice","Fragments":["and"]},{"Key":"nice and","Fragments":["clean,","terse.","clean,","clean","clean.","concise."]},{"Key":"and clean,","Fragments":["but","actually."]},{"Key":"clean, but","Fragments":["still"]},{"Key":"but still","Fragments":["some","`char()`","find"]},{"Key":"still some","Fragments":["evil"]},{"Key":"some evil","Fragments":["persons"]},{"Key":"evil persons","Fragments":["could"]},{"Key":"persons could","Fragments":["fake"]},{"Key":"could fake","Fragments":["your"]},{"Key":"fake your","Fragments":["`is_equal/2`"]},{"Key":"your `is_equal/2`","Fragments":["-\u003e"]},{"Key":"`is_equal/2` -\u003e","Fragments":["`is_equal({clock,"]},{"Key":"-\u003e `is_equal({clock,","Fragments":["1.0,"]},{"Key":"`is_equal({clock, 1.0,","Fragments":["10},"]},{"Key":"1.0, 10},","Fragments":["{clock,"]},{"Key":"10}, {clock,","Fragments":["1,"]},{"Key":"{clock, 1,","Fragments":["10})`."]},{"Key":"I liked","Fragments":["how","that"]},{"Key":"liked how","Fragments":["this"]},{"Key":"how this","Fragments":["translated","chain"]},{"Key":"this translated","Fragments":["almost"]},{"Key":"translated almost","Fragments":["directly"]},{"Key":"almost directly","Fragments":["from"]},{"Key":"directly from","Fragments":["the"]},{"Key":"from the","Fragments":["description","bottom","bottom","point","processing","lists","README.","spec.","same","module.","problem","Julian"]},{"Key":"the description","Fragments":["into"]},{"Key":"description into","Fragments":["boolean"]},{"Key":"into boolean","Fragments":["logic,"]},{"Key":"boolean logic,","Fragments":["but","have","contrary"]},{"Key":"logic, but","Fragments":["it"]},{"Key":"but it","Fragments":["needs","is","still","did","doesn't","helps","seemed","looks","might","would","is","should","works","will","would","does","does","will","tells","could","doesn't","fails"]},{"Key":"it needs","Fragments":["more"]},{"Key":"needs more","Fragments":["polish"]},{"Key":"more polish","Fragments":["for"]},{"Key":"polish for","Fragments":["clarity."]},{"Key":"is better","Fragments":["than","now.","readable,","described","to","solution","for","than"]},{"Key":"better than","Fragments":["attempt","your","mine.","repeating","my","ilst","the","the","this"]},{"Key":"than attempt","Fragments":["2,"]},{"Key":"attempt 2,","Fragments":["and"]},{"Key":"2, and","Fragments":["it","then"]},{"Key":"and it","Fragments":["does","is","still","uses"]},{"Key":"it does","Fragments":["read","not","not","waste","waste"]},{"Key":"does read","Fragments":["a"]},{"Key":"read a","Fragments":["little"]},{"Key":"little more","Fragments":["like","compact."]},{"Key":"more like","Fragments":["it.","a"]},{"Key":"like it.","Fragments":["However,","(And"]},{"Key":"it. However,","Fragments":["nested"]},{"Key":"However, nested","Fragments":["conditionals"]},{"Key":"nested conditionals","Fragments":["make"]},{"Key":"conditionals make","Fragments":["it"]},{"Key":"make it","Fragments":["more","easy","a","tail","more","more","two"]},{"Key":"it more","Fragments":["complex","compact.","difficult","readable,","similar","clear"]},{"Key":"more complex","Fragments":["for","since","to"]},{"Key":"complex for","Fragments":["me"]},{"Key":"for me","Fragments":["to","to","to","is","is","is","the"]},{"Key":"me to","Fragments":["keep","ask","fail","tell","expose","mentally","have","documentation","use"]},{"Key":"to keep","Fragments":["the","each","the","a","it,","hold","the","track","consistency","the","that,"]},{"Key":"keep the","Fragments":["current","`case","guard.","current","return"]},{"Key":"current state","Fragments":["of","of"]},{"Key":"state of","Fragments":["the","the"]},{"Key":"the expression","Fragments":["in","spanning"]},{"Key":"expression in","Fragments":["my","the","there"]},{"Key":"in my","Fragments":["head.","solution","first","code,","opinion,","benchmark","previous","opinion.","life!","first","head.","head","first"]},{"Key":" See","Fragments":["```lists:map/2```","section","also:"]},{"Key":"See ```lists:map/2```","Fragments":["as","for"]},{"Key":"```lists:map/2``` as","Fragments":["an","an"]},{"Key":"an alternative.","Fragments":["It"]},{"Key":"alternative. It","Fragments":["will"]},{"Key":"It will","Fragments":["handle","make"]},{"Key":"will handle","Fragments":["list"]},{"Key":"handle list","Fragments":["comprehension"]},{"Key":"comprehension logic","Fragments":["for"]},{"Key":"logic for","Fragments":["you"]},{"Key":"for you","Fragments":["in"]},{"Key":"you in","Fragments":["a"]},{"Key":"a more","Fragments":["general","concise","natural","concise","concise","general","traditional","useful","specific","mathematical","terse","idiomatic","idiomatic","descriptive"]},{"Key":"more general","Fragments":["way.","optimisation","than"]},{"Key":"general way.","Fragments":["```convert_nucleotide/1```"]},{"Key":"way. ```convert_nucleotide/1```","Fragments":["can"]},{"Key":"```convert_nucleotide/1``` can","Fragments":["still"]},{"Key":"can still","Fragments":["be"]},{"Key":"still be","Fragments":["used"]},{"Key":"used (but","Fragments":["see"]},{"Key":"(but see","Fragments":["my"]},{"Key":"see my","Fragments":["next"]},{"Key":"my next","Fragments":["comment).","iteration."]},{"Key":" RE:","Fragments":["line"]},{"Key":"RE: line","Fragments":["10,"]},{"Key":"line 10,","Fragments":["```true"]},{"Key":"10, ```true","Fragments":["-\u003e"]},{"Key":"```true -\u003e","Fragments":["oops```,"]},{"Key":"-\u003e oops```,","Fragments":["\"let"]},{"Key":"oops```, \"let","Fragments":["it"]},{"Key":"\"let it","Fragments":["crash\"!"]},{"Key":"it crash\"!","Fragments":["i.e.,"]},{"Key":"crash\"! i.e.,","Fragments":["remove"]},{"Key":"i.e., remove","Fragments":["this"]},{"Key":"remove this","Fragments":["line"]},{"Key":"this line","Fragments":["and"]},{"Key":"line and","Fragments":["let"]},{"Key":"and let","Fragments":["the"]},{"Key":"let the","Fragments":["function","recursion","outer"]},{"Key":"function call","Fragments":["fail","and","has"]},{"Key":"call fail","Fragments":["with"]},{"Key":"fail with","Fragments":["```**error:{case_clause...}```."]},{"Key":"with ```**error:{case_clause...}```.","Fragments":["Returning"]},{"Key":"```**error:{case_clause...}```. Returning","Fragments":["\"oops\""]},{"Key":"Returning \"oops\"","Fragments":["will"]},{"Key":"\"oops\" will","Fragments":["either"]},{"Key":"will either","Fragments":["mask"]},{"Key":"either mask","Fragments":["that"]},{"Key":"mask that","Fragments":["an"]},{"Key":"that an","Fragments":["invalid"]},{"Key":"an invalid","Fragments":["input","return","type,","pid,","sequence,"]},{"Key":"invalid input","Fragments":["was","produces","is"]},{"Key":"input was","Fragments":["provided"]},{"Key":"was provided","Fragments":["or"]},{"Key":"provided or","Fragments":["give"]},{"Key":"or give","Fragments":["the"]},{"Key":"give the","Fragments":["caller"]},{"Key":"the caller","Fragments":["an","and","from","inadvertently","should","directly."]},{"Key":"caller an","Fragments":["invalid"]},{"Key":"invalid return","Fragments":["value"]},{"Key":"return value","Fragments":["that","on","of","must","of"]},{"Key":"value that","Fragments":["they"]},{"Key":"they have","Fragments":["to"]},{"Key":"have to","Fragments":["deal","create","use","check","rework","make","work","reverse","correct","read","check","look","be","use","much","be","go","look","mess","do","work","have","be","admit","change"]},{"Key":"to deal","Fragments":["with,","with","with"]},{"Key":"deal with,","Fragments":["or"]},{"Key":"with, or","Fragments":["more"]},{"Key":"or more","Fragments":["likely","prime"]},{"Key":"more likely","Fragments":["not"]},{"Key":"likely not","Fragments":["even"]},{"Key":"not even","Fragments":["notice","think"]},{"Key":"even notice","Fragments":["-"]},{"Key":"notice -","Fragments":["leading"]},{"Key":"- leading","Fragments":["to"]},{"Key":"leading to","Fragments":["other"]},{"Key":"to other","Fragments":["problems.","modules"]},{"Key":"other problems.","Fragments":["Let"]},{"Key":"problems. Let","Fragments":["it"]},{"Key":"Let it","Fragments":["crash"]},{"Key":"it crash","Fragments":["is"]},{"Key":"crash is","Fragments":["the"]},{"Key":"the better","Fragments":["approach"]},{"Key":"better approach","Fragments":["in"]},{"Key":"approach in","Fragments":["that","Erlang"]},{"Key":"in that","Fragments":["it","case.","direction!","it","even","case."]},{"Key":"that it","Fragments":["makes","feels","is","works","should","was","is","simply","would","might","is","should","flows","won't"]},{"Key":"it makes","Fragments":["the","it","the"]},{"Key":"makes the","Fragments":["error","problem","`lists:map/2`"]},{"Key":"the error","Fragments":["explicit.","`\"Invalid","context,","return"]},{"Key":"The solution","Fragments":["depends","becomes"]},{"Key":"solution depends","Fragments":["on"]},{"Key":"depends on","Fragments":["the","your"]},{"Key":"the order","Fragments":["of","requirement","of","of","of","of"]},{"Key":"order of","Fragments":["the","the","`N`.","the","arguments","the","the"]},{"Key":"the predicates","Fragments":["(yelling"]},{"Key":"predicates (yelling","Fragments":["takes"]},{"Key":"(yelling takes","Fragments":["precedence"]},{"Key":"takes precedence","Fragments":["over"]},{"Key":"precedence over","Fragments":["asking)."]},{"Key":" Will","Fragments":["calculate","fix"]},{"Key":"Will calculate","Fragments":["modulo"]},{"Key":"calculate modulo","Fragments":["100"]},{"Key":"modulo 100","Fragments":["even"]},{"Key":"100 even","Fragments":["if"]},{"Key":"even if","Fragments":["modulo","I","you","it","I"]},{"Key":"if modulo","Fragments":["4"]},{"Key":"modulo 4","Fragments":["does"]},{"Key":"4 does","Fragments":["not"]},{"Key":"does not","Fragments":["pass.","really","provide","guarantee","look","memoize","feel","really","express","follow","short","solve"]},{"Key":"not pass.","Fragments":["Chose"]},{"Key":"pass. Chose","Fragments":["to"]},{"Key":"Chose to","Fragments":["prefer"]},{"Key":"to prefer","Fragments":["brevity","`lists:map`"]},{"Key":"prefer brevity","Fragments":["over"]},{"Key":"brevity over","Fragments":["performance."]},{"Key":"think your","Fragments":["algorithm"]},{"Key":"your algorithm","Fragments":["will","will"]},{"Key":"algorithm will","Fragments":["also","be"]},{"Key":"will also","Fragments":["work","do"]},{"Key":"also work","Fragments":["for","with"]},{"Key":"work for","Fragments":["negative","string,","`encode/1`,"]},{"Key":"for negative","Fragments":["years."]},{"Key":"You can","Fragments":["avoid","reference","solve","rewrite","refactor","have","make","however","check","create","enhance","invoke","see","use","use","use"]},{"Key":"can avoid","Fragments":["the","many"]},{"Key":"avoid the","Fragments":["`lists:reverse/1`","conflation","cost","`_DnaChar=$G`"]},{"Key":"the `lists:reverse/1`","Fragments":["at"]},{"Key":"`lists:reverse/1` at","Fragments":["the","the"]},{"Key":"at the","Fragments":["end","macros","code,","end","stack","API","cost","same","end.","glance","same","end","end","top,","`divide/2`","end","first","top","end.","end","date","implementation.","first","bottom","function"]},{"Key":"the end","Fragments":["if","i","I","result","of","is","which","will","of","to"]},{"Key":"end if","Fragments":["you"]},{"Key":"if you","Fragments":["simply","want","get","have","want","plan","get","get","implement","think","had","have","use","use","use","add","choose","do","factored","could","don't","are","are"]},{"Key":"you simply","Fragments":["call","create"]},{"Key":"simply call","Fragments":["`accumulate/2`"]},{"Key":"call `accumulate/2`","Fragments":["directly"]},{"Key":"`accumulate/2` directly","Fragments":["on"]},{"Key":"directly on","Fragments":["the","line"]},{"Key":"the tail","Fragments":["of","of","unless","recursive","(`Rest`)","recursion."]},{"Key":"tail of","Fragments":["the","the"]},{"Key":"the list.","Fragments":["That","So","Thus"]},{"Key":"list. That","Fragments":["will"]},{"Key":"That will","Fragments":["simplify"]},{"Key":"will simplify","Fragments":["the"]},{"Key":"simplify the","Fragments":["code"]},{"Key":"code a","Fragments":["lot","bit"]},{"Key":"lot for","Fragments":["you.","the"]},{"Key":"When I","Fragments":["read","think","read","bumped","saw","read","read","just","was","read"]},{"Key":"I read","Fragments":["this","the","[this](http://learnyousomeerlang.com/recursion#more-recursive-functions):","the","your","it","so","this"]},{"Key":"read this","Fragments":["problem,","I"]},{"Key":"this problem,","Fragments":["I","I"]},{"Key":"problem, I","Fragments":["said","hadn't","think"]},{"Key":"I said","Fragments":["to","the","anything,","in"]},{"Key":"said to","Fragments":["my"]},{"Key":"to my","Fragments":["self,","code","old"]},{"Key":"my self,","Fragments":["\"seriously?!?!?!\""]},{"Key":"self, \"seriously?!?!?!\"","Fragments":["Maybe"]},{"Key":"\"seriously?!?!?!\" Maybe","Fragments":["this"]},{"Key":"Maybe this","Fragments":["is","would","being"]},{"Key":"is hard","Fragments":["in","but","to"]},{"Key":"hard in","Fragments":["other"]},{"Key":"in other","Fragments":["languages","languages,","opinions.","languages,"]},{"Key":"other languages","Fragments":["but"]},{"Key":"languages but","Fragments":["it"]},{"Key":"it is","Fragments":["bread-and-butter","divisible","divisible","divisible","not","to","executed","this","much","good","not","a","evenly","not","better","not","the","the","a","unfortunate","internally","not","not","not","very","a","typing.","totally","an","a","valid","a"]},{"Key":"is bread-and-butter","Fragments":["in"]},{"Key":"bread-and-butter in","Fragments":["Erlang."]},{"Key":"If I","Fragments":["really","wanted","sound","don't","am","were","have","can","feed","see","send"]},{"Key":"I really","Fragments":["wanted","like","like","dislike","appreciate","like","dislike","like","don't","derived","liked","dislike","appreciate","like","don't","need"]},{"Key":"really wanted","Fragments":["to"]},{"Key":"be pedantic","Fragments":["about"]},{"Key":"pedantic about","Fragments":["the"]},{"Key":"the directions,","Fragments":["I"]},{"Key":"directions, I","Fragments":["could"]},{"Key":"have implemented","Fragments":["this"]},{"Key":"implemented this","Fragments":["with"]},{"Key":"this with","Fragments":["recursion","a","fewer","an","an"]},{"Key":"with recursion","Fragments":["instead."]},{"Key":"could be","Fragments":["more","off","considered","beneficial","a","written","pattern","more","useful.","clearer.","solved","better,","an","a","faster","more","hard","much","any","either"]},{"Key":"be more","Fragments":["specific","syntactically","clever","efficient","space","specific","succinct","succinct.","idiomatic","readable","understandable","difficult.","readable,","strict","precise","statements","idiomatic"]},{"Key":"more specific","Fragments":["in","using","type","as"]},{"Key":"specific in","Fragments":["the"]},{"Key":"the spec","Fragments":["regarding","for","declarations?","more","I","because"]},{"Key":"spec regarding","Fragments":["the"]},{"Key":"regarding the","Fragments":["type","specs"]},{"Key":"the type","Fragments":["of","spec","of","of","string()","declaration","of","so","should","spec","to","language"]},{"Key":"type of","Fragments":["the","contract","errors","static","a","`Year`","`Year`","`F`","`rna_transcription:to_rna/1`.","my"]},{"Key":"function and","Fragments":["the","if","a","reversing","other","just","using"]},{"Key":"the types","Fragments":["of","and","could","should"]},{"Key":"types of","Fragments":["the"]},{"Key":"the input","Fragments":["and","sequence","is","as","as","in","and","the","size","and"]},{"Key":"input and","Fragments":["output","output.","output.","change"]},{"Key":"and output","Fragments":["lists."]},{"Key":"Since `rem`","Fragments":["and"]},{"Key":"`rem` and","Fragments":["`==`","`div`."]},{"Key":"and `==`","Fragments":["are"]},{"Key":"`==` are","Fragments":["guard"]},{"Key":"are guard","Fragments":["functions,"]},{"Key":"guard functions,","Fragments":["we"]},{"Key":"functions, we","Fragments":["can"]},{"Key":"we can","Fragments":["use","ask","just","potentially","step"]},{"Key":"can use","Fragments":["them","variables","them.","pattern","this","`=:=`","the","lists:any/2"]},{"Key":"use them","Fragments":["to","all."]},{"Key":"them to","Fragments":["keep","the","be","all"]},{"Key":"keep each","Fragments":["of"]},{"Key":"each of","Fragments":["the","the"]},{"Key":"the possible","Fragments":["cases"]},{"Key":"possible cases","Fragments":["separate."]},{"Key":"cases separate.","Fragments":["Unfortunately,"]},{"Key":"separate. Unfortunately,","Fragments":["since"]},{"Key":"Unfortunately, since","Fragments":["clauses"]},{"Key":"since clauses","Fragments":["having"]},{"Key":"clauses having","Fragments":["overlapping"]},{"Key":"having overlapping","Fragments":["domains"]},{"Key":"overlapping domains","Fragments":["must"]},{"Key":"domains must","Fragments":["come"]},{"Key":"must come","Fragments":["with"]},{"Key":"come with","Fragments":["the"]},{"Key":"the most-specific","Fragments":["one"]},{"Key":"most-specific one","Fragments":["first,"]},{"Key":"one first,","Fragments":["I"]},{"Key":"first, I","Fragments":["had"]},{"Key":"I had","Fragments":["to","problems","a","to","meant","been","to","meant","done","a","done"]},{"Key":"had to","Fragments":["reorder","jump","define","read","be","have"]},{"Key":"to reorder","Fragments":["the"]},{"Key":"logic again","Fragments":["so"]},{"Key":"again so","Fragments":["that"]},{"Key":"that 400","Fragments":["comes"]},{"Key":"400 comes","Fragments":["first."]},{"Key":"comes first.","Fragments":["I"]},{"Key":"first. I","Fragments":["moved","think"]},{"Key":"I moved","Fragments":["the"]},{"Key":"moved the","Fragments":["divisibility","guards"]},{"Key":"the divisibility","Fragments":["test","test"]},{"Key":"divisibility test","Fragments":["into","here?"]},{"Key":"test into","Fragments":["a"]},{"Key":"macro so","Fragments":["that"]},{"Key":"that the","Fragments":["guards","year","regular","blame","input","non-strict","compiler","implementation","current","erlang","mapping","pattern","down","code","tests","final","function","fall-through","usage","code","code","result","`(module:function","guard","logic"]},{"Key":"the guards","Fragments":["read","into","I","don't","for","on","by","and"]},{"Key":"guards read","Fragments":["more"]},{"Key":"read more","Fragments":["cleanly."]},{"Key":"this one","Fragments":["the",":)","yourself","is","yourself","soon.","more","yourself"]},{"Key":"one the","Fragments":["best,"]},{"Key":"the best,","Fragments":["I"]},{"Key":"best, I","Fragments":["think."]},{"Key":"I think.","Fragments":["I'm"]},{"Key":"think. I'm","Fragments":["a"]},{"Key":"I'm a","Fragments":["fan","little","deeply"]},{"Key":"a fan","Fragments":["of","of","of","of","of","of","of"]},{"Key":"fan of","Fragments":["guard","the","the","some","the","extracting","Clojure's","magic","list","anonymous"]},{"Key":"of guard","Fragments":["clauses,","clauses."]},{"Key":"guard clauses,","Fragments":["and"]},{"Key":"clauses, and","Fragments":["I"]},{"Key":"I don't","Fragments":["think","separate","mind","think","like","put","know.","really","use","need","think","want","think","really","have","think","like","think","understand","like","like","know","treat","have","like","like","like","know","need","think","get","think","agree","like","think","use"]},{"Key":"don't think","Fragments":["the","I","it's","Erlang","it","I","it","you","that's"]},{"Key":"order requirement","Fragments":["is"]},{"Key":"requirement is","Fragments":["a"]},{"Key":"a negative.","Fragments":["In"]},{"Key":"negative. In","Fragments":["fact,"]},{"Key":"In fact,","Fragments":["I"]},{"Key":"fact, I","Fragments":["think"]},{"Key":"the \"largest","Fragments":["rule"]},{"Key":"\"largest rule","Fragments":["to"]},{"Key":"rule to","Fragments":["smallest"]},{"Key":"to smallest","Fragments":["rule\""]},{"Key":"smallest rule\"","Fragments":["ordering"]},{"Key":"rule\" ordering","Fragments":["helps"]},{"Key":"ordering helps","Fragments":["make"]},{"Key":"helps make","Fragments":["sense.","it"]},{"Key":"When looking","Fragments":["at"]},{"Key":"looking at","Fragments":["code","the","yours).","a","@issac's","the","this"]},{"Key":"at code","Fragments":["like"]},{"Key":"code like","Fragments":["this,"]},{"Key":"like this,","Fragments":["I"]},{"Key":"this, I","Fragments":["fall","think"]},{"Key":"I fall","Fragments":["back"]},{"Key":"fall back","Fragments":["on"]},{"Key":"back on","Fragments":["my","this,"]},{"Key":"on my","Fragments":["XSLT","`lynch`","to-do","other","first"]},{"Key":"my XSLT","Fragments":["background,"]},{"Key":"XSLT background,","Fragments":["which"]},{"Key":"background, which","Fragments":["tended"]},{"Key":"which tended","Fragments":["to"]},{"Key":"tended to","Fragments":["be"]},{"Key":"be \"go","Fragments":["from"]},{"Key":"\"go from","Fragments":["the"]},{"Key":"the bottom","Fragments":["until","helps","of"]},{"Key":"bottom until","Fragments":["you"]},{"Key":"until you","Fragments":["find"]},{"Key":"you find","Fragments":["a","bugs","out"]},{"Key":"find a","Fragments":["template","satisfactory"]},{"Key":"a template","Fragments":["that"]},{"Key":"template that","Fragments":["matches.\""]},{"Key":"that matches.\"","Fragments":["Erlang"]},{"Key":"matches.\" Erlang","Fragments":["is"]},{"Key":"Erlang is","Fragments":["top-down,","also","not),","Guard","just"]},{"Key":"is top-down,","Fragments":["but"]},{"Key":"top-down, but","Fragments":["reading"]},{"Key":"but reading","Fragments":["from"]},{"Key":"reading from","Fragments":["the"]},{"Key":"bottom helps","Fragments":["me"]},{"Key":"helps me","Fragments":["think."]},{"Key":"me think.","Fragments":["Example:"]},{"Key":" Bottom","Fragments":["line:"]},{"Key":"Bottom line:","Fragments":["my"]},{"Key":"line: my","Fragments":["year"]},{"Key":"my year","Fragments":["isn't"]},{"Key":"year isn't","Fragments":["a"]},{"Key":"isn't a","Fragments":["leap","distinct","good","bit","known"]},{"Key":"a leap","Fragments":["year","year.","year","year,","year,"]},{"Key":" Second:","Fragments":["Oh,"]},{"Key":"Second: Oh,","Fragments":["unless"]},{"Key":"Oh, unless","Fragments":["it"]},{"Key":"unless it","Fragments":["is","is"]},{"Key":"is divisible","Fragments":["by","by","by","by","by"]},{"Key":" Third:","Fragments":["Oh,"]},{"Key":"Third: Oh,","Fragments":["if"]},{"Key":"Oh, if","Fragments":["it"]},{"Key":"if it","Fragments":["is","is","would","passed","isn't","isn't","really","could","really","wasn't"]},{"Key":"by 100,","Fragments":["then","so"]},{"Key":"100, then","Fragments":["it","4"]},{"Key":"then it","Fragments":["isn't","would","really"]},{"Key":" Fourth:","Fragments":["Ah,"]},{"Key":"Fourth: Ah,","Fragments":["unless"]},{"Key":"Ah, unless","Fragments":["it"]},{"Key":" Me:","Fragments":["Leap"]},{"Key":"Me: Leap","Fragments":["years"]},{"Key":"Leap years","Fragments":["rules"]},{"Key":"years rules","Fragments":["are"]},{"Key":"rules are","Fragments":["crazy!"]},{"Key":"I feel","Fragments":["like","a","multiple","like,","like","`transcode/1`","that","ya","like","in","you.","confused.","one","about","a","better"]},{"Key":"feel like","Fragments":["Erlang","I","Line","a","spending"]},{"Key":"like Erlang","Fragments":["excels"]},{"Key":"Erlang excels","Fragments":["at","at"]},{"Key":"excels at","Fragments":["these","this"]},{"Key":"at these","Fragments":["translation-table"]},{"Key":"these translation-table","Fragments":["problems."]},{"Key":"translation-table problems.","Fragments":["Instead"]},{"Key":"problems. Instead","Fragments":["of"]},{"Key":"Instead of","Fragments":["having","a","having","using","storing","`case`ing"]},{"Key":"of having","Fragments":["to","a","to"]},{"Key":"having to","Fragments":["create","then","add","do","keep"]},{"Key":"to create","Fragments":["a","another","a","the","lots"]},{"Key":"create a","Fragments":["bunch","lot","solution,","solution,","solution,","more","solution,","solution,","solution,","solution,","solution,","mapping","solution,","solution,"]},{"Key":"a bunch","Fragments":["of","of"]},{"Key":"bunch of","Fragments":["conditionals,","new"]},{"Key":"of conditionals,","Fragments":["you"]},{"Key":"conditionals, you","Fragments":["simply"]},{"Key":"simply create","Fragments":["\"this"]},{"Key":"create \"this","Fragments":["is"]},{"Key":"\"this is","Fragments":["that\""]},{"Key":"is that\"","Fragments":["as"]},{"Key":"that\" as","Fragments":["function"]},{"Key":"as function","Fragments":["clauses.","clauses"]},{"Key":"function clauses.","Fragments":["Super","They"]},{"Key":"clauses. Super","Fragments":["clean!"]},{"Key":"did make","Fragments":["an","it"]},{"Key":"make an","Fragments":["assumption"]},{"Key":"an assumption","Fragments":["so"]},{"Key":"assumption so","Fragments":["I"]},{"Key":"I didn't","Fragments":["have","notice","want","like","find","know","find","think","get","know","do","think","really","notice"]},{"Key":"didn't have","Fragments":["to"]},{"Key":"create another","Fragments":["function;"]},{"Key":"another function;","Fragments":["namely"]},{"Key":"function; namely","Fragments":["that"]},{"Key":"namely that","Fragments":["nothing"]},{"Key":"that nothing","Fragments":["was"]},{"Key":"nothing was","Fragments":["going"]},{"Key":"was going","Fragments":["to","for.)"]},{"Key":"going to","Fragments":["call","create","fail,","be","improve","be","fail"]},{"Key":"to call","Fragments":["`to_rna/1`"]},{"Key":"call `to_rna/1`","Fragments":["with"]},{"Key":"`to_rna/1` with","Fragments":["something"]},{"Key":"something other","Fragments":["than"]},{"Key":"other than","Fragments":["a"]},{"Key":"than a","Fragments":["string.","list","minute."]},{"Key":"a string.","Fragments":["If","This"]},{"Key":"string. If","Fragments":["I"]},{"Key":"be really","Fragments":["safe,"]},{"Key":"really safe,","Fragments":["I"]},{"Key":"safe, I","Fragments":["would"]},{"Key":"have split","Fragments":["those"]},{"Key":"split those","Fragments":["last"]},{"Key":"those last","Fragments":["four"]},{"Key":"last four","Fragments":["clauses"]},{"Key":"four clauses","Fragments":["out"]},{"Key":"clauses out","Fragments":["into"]},{"Key":"out into","Fragments":["a","its"]},{"Key":"a private","Fragments":["function."]},{"Key":"Looks like","Fragments":["you've","you","you","dialyzer","cool"]},{"Key":"like you've","Fragments":["got"]},{"Key":"you've got","Fragments":["it"]},{"Key":"got it","Fragments":["all"]},{"Key":"it all","Fragments":["turned"]},{"Key":"all turned","Fragments":["inside"]},{"Key":"turned inside","Fragments":["out"]},{"Key":"inside out","Fragments":["here."]},{"Key":"out here.","Fragments":["Call"]},{"Key":"here. Call","Fragments":["`accumulate`"]},{"Key":"Call `accumulate`","Fragments":["with"]},{"Key":"`accumulate` with","Fragments":["the"]},{"Key":"list instead","Fragments":["of","to"]},{"Key":"of reversing,","Fragments":["and"]},{"Key":"reversing, and","Fragments":["cons"]},{"Key":"and cons","Fragments":["the","("]},{"Key":"cons the","Fragments":["head"]},{"Key":"the head","Fragments":["of","of","of"]},{"Key":"head of","Fragments":["the","the","`response_for`","the"]},{"Key":"list onto","Fragments":["that.","the"]},{"Key":"doesn't get","Fragments":["any"]},{"Key":"get any","Fragments":["more"]},{"Key":"any more","Fragments":["expressive"]},{"Key":"more expressive","Fragments":["than"]},{"Key":"expressive than","Fragments":["this."]},{"Key":" Rewritten","Fragments":["to"]},{"Key":"Rewritten to","Fragments":["use"]},{"Key":"really like","Fragments":["the","how","the","the","your","the","the","the"]},{"Key":"the guard","Fragments":["mechanism","sections,","in","check","check","expression","is","sequence","clause"]},{"Key":"guard mechanism","Fragments":["over"]},{"Key":"mechanism over","Fragments":["the"]},{"Key":"previous iteration.","Fragments":["The","Still"]},{"Key":"iteration. The","Fragments":["unification"]},{"Key":"The unification","Fragments":["(pattern"]},{"Key":"unification (pattern","Fragments":["matching)"]},{"Key":"(pattern matching)","Fragments":["is"]},{"Key":"matching) is","Fragments":["much"]},{"Key":"is much","Fragments":["cleaner.","cleaner","better","more","slower","the","harder","better","better."]},{"Key":"much cleaner.","Fragments":["The"]},{"Key":"cleaner. The","Fragments":["only"]},{"Key":"The only","Fragments":["suggestion","nit","way","nit"]},{"Key":"only suggestion","Fragments":["I"]},{"Key":"suggestion I","Fragments":["can"]},{"Key":"I can","Fragments":["make","however","think","supply","follow","remember.","bring","bring","think","take","think","tweak","see","only","see"]},{"Key":"can make","Fragments":["is","compromises","the","the"]},{"Key":"make is","Fragments":["to"]},{"Key":"is to","Fragments":["look","`accumulate/2`.","the","fail","return","use","always","always","learn","have","fetch","have","fetch","let","have","fetch","do","have","fetch","start","have","fetch","have","fetch","have","fetch","walk","start","have","fetch","build","have","fetch","have","fetch"]},{"Key":"to look","Fragments":["into","inside","\"strange\"","twice","inside"]},{"Key":"look into","Fragments":["type","other","the","using","```lists:map/2```."]},{"Key":"into type","Fragments":["signatures,"]},{"Key":"type signatures,","Fragments":["and"]},{"Key":"signatures, and","Fragments":["possibly"]},{"Key":"and possibly","Fragments":["handle"]},{"Key":"possibly handle","Fragments":["bad"]},{"Key":"handle bad","Fragments":["input"]},{"Key":"bad input","Fragments":["(e.g.","when"]},{"Key":"input (e.g.","Fragments":["what"]},{"Key":"(e.g. what","Fragments":["would"]},{"Key":"what would","Fragments":["happen","happen","happen.","be"]},{"Key":"would happen","Fragments":["if","if"]},{"Key":"happen if","Fragments":["I","there"]},{"Key":"if I","Fragments":["passed","have","have","add","only","am","pass","can","ignore","use","used"]},{"Key":"I passed","Fragments":["the"]},{"Key":"passed the","Fragments":["string","tests.","lower-cased"]},{"Key":" First","Fragments":["Erlang"]},{"Key":"First Erlang","Fragments":["code"]},{"Key":"Erlang code","Fragments":["I've","out"]},{"Key":"code I've","Fragments":["written."]},{"Key":"I've written.","Fragments":["Any"]},{"Key":"written. Any","Fragments":["and"]},{"Key":"Any and","Fragments":["all"]},{"Key":"and all","Fragments":["advice","by"]},{"Key":"all advice","Fragments":["appreciated!"]},{"Key":"I altered","Fragments":["the"]},{"Key":"altered the","Fragments":["tests"]},{"Key":"the tests","Fragments":["a","does","for","omit","to","still","when","is"]},{"Key":"tests a","Fragments":["bit,"]},{"Key":"a bit,","Fragments":["so"]},{"Key":"bit, so","Fragments":["that"]},{"Key":"they accept","Fragments":["my"]},{"Key":"accept my","Fragments":["resulting"]},{"Key":"my resulting","Fragments":["list,"]},{"Key":"resulting list,","Fragments":["which"]},{"Key":"list, which","Fragments":["is"]},{"Key":"which is","Fragments":["sorted","a","obviously","a","worse).","beneficial.","the","expensive","not","pretty","also","the","one","also","a"]},{"Key":"is sorted","Fragments":["by"]},{"Key":"sorted by","Fragments":["lexical"]},{"Key":"by lexical","Fragments":["order"]},{"Key":"lexical order","Fragments":["of"]},{"Key":"the key.","Fragments":["I"]},{"Key":"key. I","Fragments":["did"]},{"Key":"did this,","Fragments":["because"]},{"Key":"this, because","Fragments":["I"]},{"Key":"because I","Fragments":["think,","think","don't","thought","was","wrote","think"]},{"Key":"I think,","Fragments":["that","human"]},{"Key":"think, that","Fragments":["order"]},{"Key":"that order","Fragments":["in"]},{"Key":"order in","Fragments":["a"]},{"Key":"a key-value-list","Fragments":["should"]},{"Key":"key-value-list should","Fragments":["not"]},{"Key":"should not","Fragments":["matter.","export","export"]},{"Key":" Essentially","Fragments":["a"]},{"Key":"Essentially a","Fragments":["map"]},{"Key":"a map","Fragments":["operation,","and","greatly","over","literal,","for"]},{"Key":"map operation,","Fragments":["I"]},{"Key":"operation, I","Fragments":["could've"]},{"Key":"I could've","Fragments":["used"]},{"Key":"could've used","Fragments":["lists:map"]},{"Key":"used lists:map","Fragments":["or"]},{"Key":"or some","Fragments":["other"]},{"Key":"some other","Fragments":["but"]},{"Key":"other but","Fragments":["I"]},{"Key":"used a","Fragments":["comprehension","list","case","negative","ring","property","\"case\"","map","map","map","map","map"]},{"Key":"* `count/3`","Fragments":["is"]},{"Key":"`count/3` is","Fragments":["about"]},{"Key":"about counting","Fragments":["the"]},{"Key":"counting the","Fragments":["occurrences"]},{"Key":"the occurrences","Fragments":["of"]},{"Key":"occurrences of","Fragments":["a"]},{"Key":"a given","Fragments":["element"]},{"Key":"given element","Fragments":["in"]},{"Key":"element in","Fragments":["a","the"]},{"Key":"a list.","Fragments":["Think","Then","Is","That's"]},{"Key":"list. Think","Fragments":["about"]},{"Key":"Think about","Fragments":["how","what","how"]},{"Key":"about how","Fragments":["you","to","you"]},{"Key":"how you","Fragments":["can","do","reduce","check","can"]},{"Key":"can accomplish","Fragments":["this"]},{"Key":"accomplish this","Fragments":["without"]},{"Key":"this without","Fragments":["hardcoding","tail"]},{"Key":"without hardcoding","Fragments":["all"]},{"Key":"hardcoding all","Fragments":["possible"]},{"Key":"all possible","Fragments":["elements."]},{"Key":"possible elements.","Fragments":["(You"]},{"Key":"elements. (You","Fragments":["do"]},{"Key":"(You do","Fragments":["need"]},{"Key":"do need","Fragments":["this","them."]},{"Key":"need this","Fragments":["in"]},{"Key":"in `count/2`","Fragments":["for"]},{"Key":"`count/2` for","Fragments":["error"]},{"Key":"for error","Fragments":["checking,"]},{"Key":"error checking,","Fragments":["but"]},{"Key":"checking, but","Fragments":["not"]},{"Key":"but not","Fragments":["in","*evaluated*","tail","tail","for","tail","100)","sure","tail"]},{"Key":"not in","Fragments":["`count/3`.)","percentage","run","spirit"]},{"Key":"* Implementing","Fragments":["`nucleotide_counts/1`"]},{"Key":"Implementing `nucleotide_counts/1`","Fragments":["in"]},{"Key":"`nucleotide_counts/1` in","Fragments":["terms"]},{"Key":"in terms","Fragments":["of","of","of","of","of","of"]},{"Key":"of `count/2`","Fragments":["requires"]},{"Key":"`count/2` requires","Fragments":["iterating"]},{"Key":"requires iterating","Fragments":["over"]},{"Key":"iterating over","Fragments":["the","the","`Converted_Section`"]},{"Key":"input sequence","Fragments":["four"]},{"Key":"sequence four","Fragments":["times."]},{"Key":"four times.","Fragments":["Consider","Can"]},{"Key":"times. Consider","Fragments":["doing"]},{"Key":"Consider doing","Fragments":["it"]},{"Key":" There","Fragments":["is","are","is","is","are","are","is","are","are"]},{"Key":"There is","Fragments":["a","a","actually","no"]},{"Key":"a nicer","Fragments":["way","precedence;"]},{"Key":"nicer way","Fragments":["to"]},{"Key":"way to","Fragments":["write","avoid","get","do","handle","many","hold","make","represent","reduce","utilize","go?","implement","avoid","do,","refactor","a","avoid","decompose","infix","build","get","keep","get"]},{"Key":"to write","Fragments":["this,","specs","another","body-recursive","body-recursive","my","`$X`","Erlang","a"]},{"Key":"write this,","Fragments":["by"]},{"Key":"this, by","Fragments":["splitting"]},{"Key":"by splitting","Fragments":["into"]},{"Key":"splitting into","Fragments":["two"]},{"Key":"into two","Fragments":["functions."]},{"Key":"two functions.","Fragments":["One"]},{"Key":"functions. One","Fragments":["converts"]},{"Key":"One converts","Fragments":["a"]},{"Key":"converts a","Fragments":["single"]},{"Key":"single DNA","Fragments":["base"]},{"Key":"DNA base","Fragments":["into"]},{"Key":"base into","Fragments":["RNA"]},{"Key":"into RNA","Fragments":["bases."]},{"Key":"RNA bases.","Fragments":["The"]},{"Key":"bases. The","Fragments":["other"]},{"Key":"The other","Fragments":["function","does","half"]},{"Key":"other function","Fragments":["works"]},{"Key":"function works","Fragments":["the"]},{"Key":"works the","Fragments":["list"]},{"Key":"list by","Fragments":["recursion."]},{"Key":"The function","Fragments":["fails","is"]},{"Key":"function fails","Fragments":["if"]},{"Key":"fails if","Fragments":["called","someone"]},{"Key":"if called","Fragments":["with"]},{"Key":"the empty","Fragments":["DNA","string,","string.","list","case?","case!","case"]},{"Key":"empty DNA","Fragments":["string"]},{"Key":"DNA string","Fragments":["`[]`.","just","4"]},{"Key":"string `[]`.","Fragments":["That"]},{"Key":"`[]`. That","Fragments":["should"]},{"Key":"That should","Fragments":["probably"]},{"Key":"should probably","Fragments":["be","figure","add","add","be"]},{"Key":"probably be","Fragments":["fixed.","exported"]},{"Key":"be fixed.","Fragments":["And"]},{"Key":"fixed. And","Fragments":["you"]},{"Key":"And you","Fragments":["don't"]},{"Key":"you don't","Fragments":["have","need","expect","do","need","need","have","have","mind","want","need","need","talk","need"]},{"Key":"don't have","Fragments":["to","a","a","to","the","to","to"]},{"Key":"use lists","Fragments":["append","foldl"]},{"Key":"lists append","Fragments":["there."]},{"Key":"append there.","Fragments":["Something"]},{"Key":"there. Something","Fragments":["like"]},{"Key":"Something like","Fragments":["`[to_rna(H)","this:"]},{"Key":"like `[to_rna(H)","Fragments":["|"]},{"Key":"`[to_rna(H) |","Fragments":["to_tna(T)]`"]},{"Key":"| to_tna(T)]`","Fragments":["would"]},{"Key":"to_tna(T)]` would","Fragments":["work"]},{"Key":"would work","Fragments":["equally"]},{"Key":"work equally","Fragments":["well"]},{"Key":"equally well","Fragments":["and"]},{"Key":"well and","Fragments":["be"]},{"Key":"and be","Fragments":["a"]},{"Key":"more Erlang-idiomatic","Fragments":["I"]},{"Key":"Erlang-idiomatic I","Fragments":["think."]},{"Key":"Actually [H|T]","Fragments":["doesn't"]},{"Key":"[H|T] doesn't","Fragments":["work"]},{"Key":"doesn't work","Fragments":["for"]},{"Key":"for string,","Fragments":["tryied"]},{"Key":"string, tryied","Fragments":["that"]},{"Key":"tryied that","Fragments":["out."]},{"Key":"that out.","Fragments":["Thats","You"]},{"Key":"out. Thats","Fragments":["because"]},{"Key":"Thats because","Fragments":["the"]},{"Key":"the to_rna","Fragments":["returns"]},{"Key":"to_rna returns","Fragments":["a"]},{"Key":"a list,","Fragments":["so","right?","so"]},{"Key":"list, so","Fragments":["in","you"]},{"Key":"so in","Fragments":["the","my"]},{"Key":"end i","Fragments":["get"]},{"Key":"i get","Fragments":["something"]},{"Key":"get something","Fragments":["like"]},{"Key":"like [[[[[\"A\"],","Fragments":["\"B\"],"]},{"Key":"[[[[[\"A\"], \"B\"],","Fragments":["....]"]},{"Key":"I changed","Fragments":["to"]},{"Key":"changed to","Fragments":["string:concat"]},{"Key":"to string:concat","Fragments":["to"]},{"Key":"string:concat to","Fragments":["get"]},{"Key":"to get","Fragments":["more","the","the","the","that","into.","sidetracked","in","the","some","into","the","better","more","into","the","better","at","the","into","it","a","pretty"]},{"Key":"get more","Fragments":["verbose.","concise","comfortable"]},{"Key":" As","Fragments":["for","for","mentioned","to","written","long","for","for","far","for"]},{"Key":"As for","Fragments":["the","the","`square/1`","`square/1`","the","the","using"]},{"Key":"empty string,","Fragments":["I'll"]},{"Key":"string, I'll","Fragments":["fix"]},{"Key":"I'll fix","Fragments":["it"]},{"Key":"fix it","Fragments":["now."]},{"Key":" Thank","Fragments":["you","you","you","you","you","you","you.","you"]},{"Key":"Thank you","Fragments":["@lennie.",":D","for","@forest","for","for","for","again","for","for","very","for","for","for"]},{"Key":" I'd","Fragments":["probably","still","only","prefer","prefer"]},{"Key":"I'd probably","Fragments":["just","break"]},{"Key":"probably just","Fragments":["drive","want"]},{"Key":"just drive","Fragments":["this"]},{"Key":"drive this","Fragments":["with"]},{"Key":" leap_year(Y)","Fragments":["-\u003e"]},{"Key":"case {Y","Fragments":["rem"]},{"Key":"{Y rem","Fragments":["4,"]},{"Key":"rem 4,","Fragments":["Y"]},{"Key":"4, Y","Fragments":["rem"]},{"Key":"Y rem","Fragments":["100,","400}","4","400","4","100"]},{"Key":"rem 100,","Fragments":["Y"]},{"Key":"100, Y","Fragments":["rem"]},{"Key":"rem 400}","Fragments":["of"]},{"Key":" {0,","Fragments":["_,","0}"]},{"Key":"{0, _,","Fragments":["0}"]},{"Key":"_, 0}","Fragments":["=\u003e"]},{"Key":"0} =\u003e","Fragments":["true;"]},{"Key":" Or","Fragments":["simply","simply","rather"]},{"Key":"Or simply","Fragments":["move","defining"]},{"Key":"simply move","Fragments":["everything"]},{"Key":"move everything","Fragments":["into"]},{"Key":"everything into","Fragments":["guards:"]},{"Key":" when","Fragments":["Y","Y"]},{"Key":"when Y","Fragments":["rem","rem"]},{"Key":" Y","Fragments":["rem","rem"]},{"Key":"not very","Fragments":["used"]},{"Key":"very used","Fragments":["to"]},{"Key":"to guards,","Fragments":["It"]},{"Key":"guards, It","Fragments":["seems"]},{"Key":"It seems","Fragments":["really","like"]},{"Key":"seems really","Fragments":["better."]},{"Key":"If no","Fragments":["guards"]},{"Key":"no guards","Fragments":["are"]},{"Key":"guards are","Fragments":["matched"]},{"Key":"are matched","Fragments":["it"]},{"Key":"matched it","Fragments":["goes"]},{"Key":"it goes","Fragments":["to"]},{"Key":"goes to","Fragments":["the"]},{"Key":"the canonical","Fragments":["body-recursive","method"]},{"Key":"canonical body-recursive","Fragments":["solution"]},{"Key":"body-recursive solution","Fragments":["to"]},{"Key":"solution to","Fragments":["the","what","the","the","the","the","be","the","the","the","the","the","the","the"]},{"Key":"the problem.","Fragments":["Alternatives","Not"]},{"Key":"problem. Alternatives","Fragments":["are:"]},{"Key":" lists:map(F,","Fragments":["L)."]},{"Key":"simply defining","Fragments":["it"]},{"Key":"defining it","Fragments":["via"]},{"Key":"it via","Fragments":["a"]},{"Key":"via a","Fragments":["list"]},{"Key":"a list","Fragments":["comprehension:","containing","comprehension,","comprehension","comprehension","comprehension.","comprehension.","of","of","comprehension","containing","of","is","as","comprehension.","comprehension:","of","containing","comprehension","comprehension.","of","of","of","comprehension,","comprehension.","of","comprehension","is","takes","with","n-times,","and","with","that","comprehension","comprehension","of","containing","of","comprehension.","-","comprehension","of"]},{"Key":" accumulate(F,","Fragments":["L)"]},{"Key":"accumulate(F, L)","Fragments":["-\u003e"]},{"Key":"L) -\u003e","Fragments":["[F(X)"]},{"Key":"-\u003e [F(X)","Fragments":["||"]},{"Key":"[F(X) ||","Fragments":["X"]},{"Key":"|| X","Fragments":["\u003c-","\u003c-","\u003c-","\u003c-"]},{"Key":"X \u003c-","Fragments":["L].","L,","L2,","L]`","List]"]},{"Key":" @sydni","Fragments":["I"]},{"Key":"@sydni I","Fragments":["knew"]},{"Key":"I knew","Fragments":["about"]},{"Key":"knew about","Fragments":["the"]},{"Key":"the map,","Fragments":["thank"]},{"Key":"map, thank","Fragments":["you"]},{"Key":"thank you","Fragments":["anyway,","for","for","for","for","for"]},{"Key":"you anyway,","Fragments":["just"]},{"Key":"anyway, just","Fragments":["wanted"]},{"Key":"just wanted","Fragments":["to","to"]},{"Key":"comprehension its","Fragments":["awesome,"]},{"Key":"its awesome,","Fragments":["I've"]},{"Key":"awesome, I've","Fragments":["seen"]},{"Key":"I've seen","Fragments":["this","and"]},{"Key":"seen this","Fragments":["when"]},{"Key":"when I","Fragments":["was","write","have","was","wrote","see","wrote","see","want","have","read","get","wrote"]},{"Key":"I was","Fragments":["first","still","digging,","thinking","told","thinking","leaning","getting","about","thinking","thinking","under","getting","probably","writing","able"]},{"Key":"was first","Fragments":["learning"]},{"Key":"first learning","Fragments":["erlang"]},{"Key":"learning erlang","Fragments":["but","so"]},{"Key":"erlang but","Fragments":["totally"]},{"Key":"but totally","Fragments":["forgot"]},{"Key":"totally forgot","Fragments":["about","about"]},{"Key":"forgot about","Fragments":["that.","this."]},{"Key":"about that.","Fragments":["Thank"]},{"Key":"that. Thank","Fragments":["you"]},{"Key":" Thanks","Fragments":["for","for","a","for","for","for","again!","for","for","to","for","for","@juliet,","for","for","@christine.","for"]},{"Key":"Thanks for","Fragments":["@haskell.","the","that.","the","suggestion.","your","the","the","the","the","the","the","the","the","the","the","the"]},{"Key":"for @haskell.","Fragments":["I"]},{"Key":"@haskell. I","Fragments":["think"]},{"Key":"think is","Fragments":["better"]},{"Key":"better now.","Fragments":[":D"]},{"Key":"I'd still","Fragments":["split"]},{"Key":"still split","Fragments":["the"]},{"Key":"split the","Fragments":["function"]},{"Key":"function into","Fragments":["two.","a"]},{"Key":"into two.","Fragments":["One"]},{"Key":"two. One","Fragments":["which"]},{"Key":"One which","Fragments":["handles"]},{"Key":"which handles","Fragments":["the"]},{"Key":"handles the","Fragments":["conversion."]},{"Key":"the conversion.","Fragments":["The"]},{"Key":"conversion. The","Fragments":["other"]},{"Key":"other does","Fragments":["the"]},{"Key":"does the","Fragments":["processing.","difference","lists:map/2,"]},{"Key":"the processing.","Fragments":["Also,"]},{"Key":"processing. Also,","Fragments":["since"]},{"Key":"Also, since","Fragments":["you"]},{"Key":"since you","Fragments":["are","have","do"]},{"Key":"are working","Fragments":["on"]},{"Key":"on accumulate,","Fragments":["there"]},{"Key":"accumulate, there","Fragments":["is"]},{"Key":"a solution","Fragments":["by","to","that","to","to","as","to","to","that's","to","to","to","to","to"]},{"Key":"solution by","Fragments":["using","the"]},{"Key":"by using","Fragments":["accumulate","some","them","short-circuit","a"]},{"Key":"using accumulate","Fragments":[":)"]},{"Key":"That is,","Fragments":["I"]},{"Key":"is, I","Fragments":["would","believe,"]},{"Key":"would split","Fragments":["it"]},{"Key":"split it","Fragments":["such"]},{"Key":"it such","Fragments":["that","that"]},{"Key":"such that","Fragments":["one","you","it"]},{"Key":"that one","Fragments":["only","and","start","is"]},{"Key":"one only","Fragments":["operates"]},{"Key":"only operates","Fragments":["on"]},{"Key":"operates on","Fragments":["lists"]},{"Key":"on lists","Fragments":["and","using"]},{"Key":"lists and","Fragments":["the"]},{"Key":"other only","Fragments":["on"]},{"Key":"only on","Fragments":["DNA."]},{"Key":"on DNA.","Fragments":["Suppose"]},{"Key":"DNA. Suppose","Fragments":["I"]},{"Key":"Suppose I","Fragments":["do"]},{"Key":"would expect","Fragments":["that"]},{"Key":"expect that","Fragments":["to"]},{"Key":"that to","Fragments":["crash.","avoid"]},{"Key":" @janelle,","Fragments":["to_rna(\"C\")"]},{"Key":"@janelle, to_rna(\"C\")","Fragments":["is"]},{"Key":"to_rna(\"C\") is","Fragments":["on"]},{"Key":"is on","Fragments":["the","my","line"]},{"Key":"test suite.","Fragments":["Not","You"]},{"Key":"suite. Not","Fragments":["crashing."]},{"Key":"Not crashing.","Fragments":["If"]},{"Key":"crashing. If","Fragments":["i"]},{"Key":"If i","Fragments":["do"]},{"Key":"i do","Fragments":["to_rna(\"J\"),"]},{"Key":"do to_rna(\"J\"),","Fragments":["i.e."]},{"Key":"to_rna(\"J\"), i.e.","Fragments":["it"]},{"Key":"i.e. it","Fragments":["crashes."]},{"Key":"I decided","Fragments":["to","to","to","that","to","to","not","that","to","to","to"]},{"Key":"decided to","Fragments":["not","only","allow","use","use","copy","use","split","use"]},{"Key":"to not","Fragments":["create","have","write","interfere","break","use"]},{"Key":"not create","Fragments":["something"]},{"Key":"create something","Fragments":["for"]},{"Key":"something for","Fragments":["those"]},{"Key":"for those","Fragments":["cases"]},{"Key":"those cases","Fragments":["since"]},{"Key":"cases since","Fragments":["J","there"]},{"Key":"since J","Fragments":["is"]},{"Key":"J is","Fragments":["not"]},{"Key":"is not","Fragments":["a","tail-recursive.","worth","perfect","possible","necessary.","required","a","helpful","tail","as","all","only","the","properly","tail","making","a","necessary:","right.","correct","the","TCO","the","split.","yet","tail","defensive","tail-recursive.","tail-recursive.","available","a","valid","allowed.","part"]},{"Key":"a valid","Fragments":["input.","typespec?","solution","invocation","program","phone"]},{"Key":"The accumulate","Fragments":["would"]},{"Key":"accumulate would","Fragments":["be"]},{"Key":"be something","Fragments":["like"]},{"Key":" to_rna(STR)","Fragments":["-\u003e"]},{"Key":"to_rna(STR) -\u003e","Fragments":["accumulate(map_to_rna,STR)."]},{"Key":" By","Fragments":["the","using"]},{"Key":"By the","Fragments":["way,"]},{"Key":"the way,","Fragments":["thank","nice"]},{"Key":"way, thank","Fragments":["you"]},{"Key":"you for","Fragments":["helping","the","your","the","taking","your","nitpick.","your","highlighting","taking","your","the","it.","taking","advices","taking"]},{"Key":"for helping","Fragments":["me."]},{"Key":"helping me.","Fragments":[":D"]},{"Key":" Just","Fragments":["saw","discovered"]},{"Key":"Just saw","Fragments":["@kariane'"]},{"Key":"saw @kariane'","Fragments":["solution"]},{"Key":"@kariane' solution","Fragments":["and"]},{"Key":"solution and","Fragments":["moved","I","I","definitely"]},{"Key":"and moved","Fragments":["the","it"]},{"Key":"guards into","Fragments":["pattern"]},{"Key":"into pattern","Fragments":["matching."]},{"Key":"pattern matching.","Fragments":["Much","Always","Any"]},{"Key":"matching. Much","Fragments":["better."]},{"Key":" Nice","Fragments":["use","use","terse","code!","use","use","clean","use","and","implementation","use","use","clean","use"]},{"Key":"Nice use","Fragments":["of","of","of","of","of","of","of","of","of"]},{"Key":"of pattern","Fragments":["matching.","matching.","matching","matching.","matching","matched","matching"]},{"Key":"can reference","Fragments":["single","the"]},{"Key":"reference single","Fragments":["characters"]},{"Key":"single characters","Fragments":["using","in","and","as"]},{"Key":"characters using","Fragments":["the"]},{"Key":"using the","Fragments":["\"$\"","`char`","list","method","`math:pow`","`[H","concept","sorted","shorthand","you"]},{"Key":"the \"$\"","Fragments":["notation"]},{"Key":"\"$\" notation","Fragments":["-"]},{"Key":"notation -","Fragments":["e.g.,"]},{"Key":"- e.g.,","Fragments":["$G"]},{"Key":"e.g., $G","Fragments":["refers"]},{"Key":"$G refers","Fragments":["to"]},{"Key":"refers to","Fragments":["the"]},{"Key":"the single","Fragments":["character","quotes"]},{"Key":"single character","Fragments":["G."]},{"Key":"character G.","Fragments":["Not","Also"]},{"Key":"G. Not","Fragments":["to"]},{"Key":"Not to","Fragments":["be"]},{"Key":"be confused","Fragments":["with"]},{"Key":"confused with","Fragments":["\"G\""]},{"Key":"with \"G\"","Fragments":["which"]},{"Key":"\"G\" which","Fragments":["is"]},{"Key":"list containing","Fragments":["the","any","the","the"]},{"Key":"containing the","Fragments":["character","empty","character"]},{"Key":"the character","Fragments":["G.","literal","codes","matching,","'G'","'G')."]},{"Key":"G. Also","Fragments":["look"]},{"Key":"Also look","Fragments":["at","into"]},{"Key":" @tanner,","Fragments":["what"]},{"Key":"@tanner, what","Fragments":["do"]},{"Key":"what do","Fragments":["you"]},{"Key":"do you","Fragments":["think","differentiate","see","prefer?","prepend","think","feel","need","prefer","really","have","want","suggest","have","think"]},{"Key":"you think","Fragments":["now?","that","of","of","about","it","of","of","it'd","about","only"]},{"Key":"think now?","Fragments":[":D"]},{"Key":"one :)","Fragments":["Usually"]},{"Key":":) Usually","Fragments":["when"]},{"Key":"Usually when","Fragments":["I"]},{"Key":"I write","Fragments":["multiple","this"]},{"Key":"write multiple","Fragments":["clauses"]},{"Key":"multiple clauses","Fragments":["for","with"]},{"Key":"clauses for","Fragments":["the"]},{"Key":"the same","Fragments":["function,","thing.","as","type","guards?","time","grapheme","as","as","algorithms","mapping!","'should","time","function","amount","amount","thing","smells.","spec.","way","way,","as","type,","type.","type:","type.","type","page,","implementation"]},{"Key":"same function,","Fragments":["I"]},{"Key":"function, I","Fragments":["don't"]},{"Key":"don't separate","Fragments":["the"]},{"Key":"the clauses","Fragments":["with"]},{"Key":"clauses with","Fragments":["an","the"]},{"Key":"with an","Fragments":["empty","empty","appropriate","accumulator/iterative","`eheap_alloc`","accumulator","accumulator"]},{"Key":"an empty","Fragments":["line","list","sequence","string.","string","list","list.","solution.","pattern"]},{"Key":"empty line","Fragments":["like"]},{"Key":"line like","Fragments":["you"]},{"Key":"like you","Fragments":["do.","figured","thought","are","could"]},{"Key":"you do.","Fragments":["But"]},{"Key":"do. But","Fragments":["there"]},{"Key":"But there","Fragments":["are"]},{"Key":"there are","Fragments":["others","long","several","only","no","only"]},{"Key":"are others","Fragments":["for"]},{"Key":"others for","Fragments":["which"]},{"Key":"for which","Fragments":["this","use"]},{"Key":"which this","Fragments":["style"]},{"Key":"this style","Fragments":["is"]},{"Key":"style is","Fragments":["their"]},{"Key":"is their","Fragments":["preferred"]},{"Key":"their preferred","Fragments":["one."]},{"Key":" Works.","Fragments":["I"]},{"Key":"Works. I","Fragments":["find"]},{"Key":"I find","Fragments":["it","that","the","the","this","your","the","that","the","Erlang's","them","there's","the","that"]},{"Key":"find it","Fragments":["tricky","to"]},{"Key":"it tricky","Fragments":["to"]},{"Key":"tricky to","Fragments":["work"]},{"Key":"to work","Fragments":["with","backwards","my","in"]},{"Key":"work with","Fragments":["strings","many","Unicode","further."]},{"Key":"with strings","Fragments":["in"]},{"Key":"strings in","Fragments":["erlang"]},{"Key":"in erlang","Fragments":["though.","is"]},{"Key":"Interesting approach.","Fragments":["See","I","Look"]},{"Key":"approach. See","Fragments":["```lists:map/2```"]},{"Key":"```lists:map/2``` for","Fragments":["an","an"]},{"Key":"for an","Fragments":["alternative.","obscure","exercise","SMS","alternative."]},{"Key":"list comprehension,","Fragments":["but","the","a"]},{"Key":"comprehension, but","Fragments":["this"]},{"Key":"but this","Fragments":["is","looks","time","solution","works.","code","is","code"]},{"Key":"probably more","Fragments":["in","efficient","in"]},{"Key":"more in","Fragments":["the","keeping"]},{"Key":"exercise. Nice","Fragments":["use"]},{"Key":"Good solution.","Fragments":["I"]},{"Key":"solution. I","Fragments":["didn't","always"]},{"Key":"didn't notice","Fragments":["that","that!"]},{"Key":"notice that","Fragments":["you"]},{"Key":"you would","Fragments":["only"]},{"Key":"would only","Fragments":["have","be","make","be","walk","be"]},{"Key":"only have","Fragments":["to","to"]},{"Key":"check one","Fragments":["case"]},{"Key":"one case","Fragments":["for"]},{"Key":"case for","Fragments":["each","`hd_rec2`,","`length`","such."]},{"Key":"for each","Fragments":["and","of","character","character","call","input","candidate?","square","element","list"]},{"Key":"each and","Fragments":["on"]},{"Key":"and on","Fragments":["mine","purpose"]},{"Key":"on mine","Fragments":["checked"]},{"Key":"mine checked","Fragments":["\"is"]},{"Key":"checked \"is","Fragments":["it"]},{"Key":"\"is it","Fragments":["divisible"]},{"Key":"it divisible","Fragments":["by"]},{"Key":"by 400,","Fragments":["100,","then"]},{"Key":"400, 100,","Fragments":["AND"]},{"Key":"100, AND","Fragments":["4\"."]},{"Key":"AND 4\".","Fragments":["Yours"]},{"Key":"4\". Yours","Fragments":["looks"]},{"Key":"Yours looks","Fragments":["a"]},{"Key":"looks a","Fragments":["lot"]},{"Key":"lot cleaner","Fragments":["as","to"]},{"Key":"cleaner as","Fragments":["a"]},{"Key":"* You","Fragments":["should","avoid","avoid","avoid","do","should"]},{"Key":"You should","Fragments":["provide","however","read","add","add","provide","add","consider","find","add","provide"]},{"Key":"should provide","Fragments":["typespecs","typespecs","some"]},{"Key":"provide typespecs","Fragments":["at","for"]},{"Key":"typespecs at","Fragments":["least"]},{"Key":"at least","Fragments":["for","always","document","one","check","I","add","to","bounds"]},{"Key":"least for","Fragments":["`export`ed","`response_for/1`)?"]},{"Key":"for `export`ed","Fragments":["functions.","functions."]},{"Key":"* Instead","Fragments":["of","of"]},{"Key":"comprehension you","Fragments":["should"]},{"Key":"should consider","Fragments":["using","a","to","using","the"]},{"Key":"Are there","Fragments":["performance","any"]},{"Key":"there performance","Fragments":["considerations"]},{"Key":"performance considerations","Fragments":["that"]},{"Key":"considerations that","Fragments":["would"]},{"Key":"would lead","Fragments":["one","to"]},{"Key":"lead one","Fragments":["to"]},{"Key":"one to","Fragments":["prefer","the"]},{"Key":"prefer `lists:map`","Fragments":["over","instead"]},{"Key":"`lists:map` over","Fragments":["list"]},{"Key":"over list","Fragments":["comprehensions?","comprehension"]},{"Key":"list comprehensions?","Fragments":["or"]},{"Key":"comprehensions? or","Fragments":["is"]},{"Key":"or is","Fragments":["it"]},{"Key":"is it","Fragments":["just","tries"]},{"Key":"it just","Fragments":["a"]},{"Key":"just a","Fragments":["style","185M","matter","shorthand"]},{"Key":"a style","Fragments":["thing?"]},{"Key":" AFAIK","Fragments":["a"]},{"Key":"AFAIK a","Fragments":["list"]},{"Key":"comprehension is","Fragments":["simply","a","the","not","not"]},{"Key":"simply desugared","Fragments":["to"]},{"Key":"desugared to","Fragments":["`lists:map`"]},{"Key":"to `lists:map`","Fragments":["and"]},{"Key":"`lists:map` and","Fragments":["eventually","`lists:filter`"]},{"Key":"and eventually","Fragments":["`lists:filter`."]},{"Key":"eventually `lists:filter`.","Fragments":["So"]},{"Key":"`lists:filter`. So","Fragments":["there"]},{"Key":"So there","Fragments":["shouldn't"]},{"Key":"there shouldn't","Fragments":["be"]},{"Key":"shouldn't be","Fragments":["any","passed?"]},{"Key":"be any","Fragments":["performance","better."]},{"Key":"any performance","Fragments":["differences,"]},{"Key":"performance differences,","Fragments":["but"]},{"Key":"differences, but","Fragments":["I"]},{"Key":"using `lists:map`","Fragments":["and","with"]},{"Key":"and `lists:filter`","Fragments":["is","to"]},{"Key":"`lists:filter` is","Fragments":["better"]},{"Key":"better readable,","Fragments":["because"]},{"Key":"readable, because","Fragments":["one"]},{"Key":"because one","Fragments":["has","iteration"]},{"Key":"one has","Fragments":["not"]},{"Key":"has not","Fragments":["to"]},{"Key":"not to","Fragments":["jump","use","itself,","\"U\".","use","go","use"]},{"Key":"to jump","Fragments":["around","through"]},{"Key":"jump around","Fragments":["the"]},{"Key":"around the","Fragments":["line","conditions.","problem."]},{"Key":"line to","Fragments":["see","clearer"]},{"Key":"see whats","Fragments":["happening,"]},{"Key":"whats happening,","Fragments":["so,"]},{"Key":"happening, so,","Fragments":["yes,"]},{"Key":"so, yes,","Fragments":["call"]},{"Key":"yes, call","Fragments":["it"]},{"Key":"call it","Fragments":["“personal","practice","qualified"]},{"Key":"it “personal","Fragments":["style”."]},{"Key":" cool.","Fragments":["i"]},{"Key":"cool. i","Fragments":["hadn't"]},{"Key":"i hadn't","Fragments":["thought"]},{"Key":"hadn't thought","Fragments":["bout"]},{"Key":"thought bout","Fragments":["pattern","pattern"]},{"Key":"bout pattern","Fragments":["matching","matching"]},{"Key":"in lambda","Fragments":["functions"]},{"Key":" Yeah,","Fragments":["anonymous","I","the","I","I","I","without","I","that","old","but"]},{"Key":"Yeah, anonymous","Fragments":["functions"]},{"Key":"anonymous functions","Fragments":["in","if","/","where"]},{"Key":"functions in","Fragments":["Erlang","them","guards","`lists`-module","guards,"]},{"Key":"in Erlang","Fragments":["are","(and","as","to","is","without","since","is","R17",":-).","is"]},{"Key":"Erlang are","Fragments":["powerful"]},{"Key":"are powerful","Fragments":["but"]},{"Key":"powerful but","Fragments":["verbose"]},{"Key":"but verbose","Fragments":["if"]},{"Key":"verbose if","Fragments":["compare"]},{"Key":"if compare","Fragments":["them"]},{"Key":"compare them","Fragments":["to"]},{"Key":"the Haskell","Fragments":["counterparts"]},{"Key":"Haskell counterparts","Fragments":["for"]},{"Key":"counterparts for","Fragments":["example."]},{"Key":"of macros,","Fragments":["why"]},{"Key":"macros, why","Fragments":["that"]},{"Key":"why that","Fragments":["over","line","works."]},{"Key":"that over","Fragments":["simple"]},{"Key":"over simple","Fragments":["function"]},{"Key":"simple function","Fragments":["definitions?"]},{"Key":" Like","Fragments":["the","the","the"]},{"Key":"Like the","Fragments":["use","idea","use"]},{"Key":"of types","Fragments":["and","looking"]},{"Key":"types and","Fragments":["specs","input","a"]},{"Key":"and specs","Fragments":["for","(type","are","and"]},{"Key":"specs for","Fragments":["the","all","dialyzer"]},{"Key":"the exported","Fragments":["functions."]},{"Key":"be off","Fragments":["the"]},{"Key":"the ranch,","Fragments":["but"]},{"Key":"ranch, but","Fragments":["I"]},{"Key":"I want","Fragments":["the","to.","to"]},{"Key":"want the","Fragments":["code"]},{"Key":"code to","Fragments":["tell","pass","break","meet"]},{"Key":"to tell","Fragments":["a","for","me","me."]},{"Key":"tell a","Fragments":["story."]},{"Key":"a story.","Fragments":["Extracting"]},{"Key":"story. Extracting","Fragments":["parts"]},{"Key":"Extracting parts","Fragments":["of"]},{"Key":"parts of","Fragments":["a"]},{"Key":"a number","Fragments":["are","is","of"]},{"Key":"number are","Fragments":["not"]},{"Key":"are not","Fragments":["part","the","replacements","so","obvious","familiar"]},{"Key":"not part","Fragments":["of","of"]},{"Key":"part of","Fragments":["that","the","the","your","the","code","the","standard","this","the","the"]},{"Key":"that story,","Fragments":["and"]},{"Key":"story, and","Fragments":["I"]},{"Key":"didn't want","Fragments":["to"]},{"Key":"want to","Fragments":["dirty","keep","protect","put","catch","have","know","get","have","keep","think","reach","be","be","encode/decode","avoid","DRY","use","implement","bother","return","fail","have","use","try","check"]},{"Key":"to dirty","Fragments":["the"]},{"Key":"dirty the","Fragments":["narrative."]},{"Key":"the narrative.","Fragments":["One"]},{"Key":"narrative. One","Fragments":["glance"]},{"Key":"One glance","Fragments":["at"]},{"Key":"glance at","Fragments":["the"]},{"Key":"the macros","Fragments":["and","because"]},{"Key":"macros and","Fragments":["you"]},{"Key":"and you","Fragments":["have","should","should"]},{"Key":"have the","Fragments":["concept","laziness","spec","chance","same"]},{"Key":"the concept","Fragments":["of","of"]},{"Key":"concept of","Fragments":["AC,","uppercase/lowercase","a"]},{"Key":"of AC,","Fragments":["Ext,"]},{"Key":"AC, Ext,","Fragments":["etc."]},{"Key":"Ext, etc.","Fragments":["and"]},{"Key":"etc. and","Fragments":["now"]},{"Key":"and now","Fragments":["when"]},{"Key":"now when","Fragments":["you"]},{"Key":"when you","Fragments":["look","receive","change","start","look","sort","pass","start","are","encounter","are","pass","pass"]},{"Key":"you look","Fragments":["at","at"]},{"Key":"the code,","Fragments":["the"]},{"Key":"code, the","Fragments":["narrative"]},{"Key":"the narrative","Fragments":["isn't"]},{"Key":"narrative isn't","Fragments":["muddied"]},{"Key":"isn't muddied","Fragments":["by"]},{"Key":"muddied by","Fragments":["calls"]},{"Key":"by calls","Fragments":["to"]},{"Key":"calls to","Fragments":["functions","divisible"]},{"Key":"to functions","Fragments":["that"]},{"Key":"functions that","Fragments":["extract","are","directly"]},{"Key":"that extract","Fragments":["substring"]},{"Key":"extract substring","Fragments":["-"]},{"Key":"substring -","Fragments":["which"]},{"Key":"- which","Fragments":["isn't"]},{"Key":"which isn't","Fragments":["the"]},{"Key":"isn't the","Fragments":["main"]},{"Key":"the main","Fragments":["part","logic"]},{"Key":"main part","Fragments":["of"]},{"Key":" That's","Fragments":["cool,","what","fair.","basically","a"]},{"Key":"That's cool,","Fragments":["just"]},{"Key":"cool, just","Fragments":["wanted"]},{"Key":"to understand","Fragments":["the","to"]},{"Key":"understand the","Fragments":["thinking","boolean","dialyzer"]},{"Key":"the thinking","Fragments":["behind"]},{"Key":"thinking behind","Fragments":["that,"]},{"Key":"behind that,","Fragments":["especially"]},{"Key":"that, especially","Fragments":["since"]},{"Key":"especially since","Fragments":["it's","future","Erlang"]},{"Key":"since it's","Fragments":["a"]},{"Key":"it's a","Fragments":["different","good","bit","tab","definite","bit","little","list","list","bit"]},{"Key":"a different","Fragments":["solution","name,","machine","approach:","submission","approach."]},{"Key":"different solution","Fragments":["to"]},{"Key":"to what","Fragments":["I'd","you","is"]},{"Key":"what I'd","Fragments":["have"]},{"Key":"I'd have","Fragments":["written."]},{"Key":"have written.","Fragments":["Cheers"]},{"Key":"written. Cheers","Fragments":[":-)"]},{"Key":" Take","Fragments":["a","the","a","a"]},{"Key":"Take a","Fragments":["look","look","look"]},{"Key":"a look","Fragments":["at","at","at","at","at","into","at","at","at","at","at","at"]},{"Key":"at list","Fragments":["comprehensions","comprehensions.","comprehensions,","comprehensions,"]},{"Key":"list comprehensions","Fragments":["as","you","is"]},{"Key":"comprehensions as","Fragments":["a"]},{"Key":"more concise","Fragments":["way","approach","solution,","by","function","solution.","than","and"]},{"Key":"concise way","Fragments":["of"]},{"Key":"of approaching","Fragments":["this","this","this"]},{"Key":"approaching this","Fragments":["problem.","problem.","problem."]},{"Key":"this problem.","Fragments":["@lottie","This"]},{"Key":"problem. @lottie","Fragments":["has"]},{"Key":"@lottie has","Fragments":["an"]},{"Key":"has an","Fragments":["even","result"]},{"Key":"an even","Fragments":["more","simpler,","more"]},{"Key":"even more","Fragments":["concise","idiomatic","concise","conditions.","concise","speed"]},{"Key":"concise approach","Fragments":["at"]},{"Key":"approach at","Fragments":["http://exercism.io/submissions/b25797fc52f43837bd4449cc."]},{"Key":"You could","Fragments":["use","collapse","improve","reduce","consider","have","shorten","probably","collapse","clean"]},{"Key":"could use","Fragments":["`[to_rna(Nucleotide)|to_rna(Remaining)]`","`lists:last()`","a","[`lists:map/2`](http://www.erlang.org/doc/man/lists.html#map-2)","a","a","two","`spec`."]},{"Key":"use `[to_rna(Nucleotide)|to_rna(Remaining)]`","Fragments":["instead"]},{"Key":"`[to_rna(Nucleotide)|to_rna(Remaining)]` instead","Fragments":["of"]},{"Key":"of `string:concat(to_rna([Nucleotide]),","Fragments":["to_rna(Remaining))`."]},{"Key":"So I","Fragments":["tried"]},{"Key":"I tried","Fragments":["that","to","on","to","this","various"]},{"Key":"tried that","Fragments":["and"]},{"Key":"that and","Fragments":["I'm"]},{"Key":"and I'm","Fragments":["back","not","tired","still"]},{"Key":"I'm back","Fragments":["to"]},{"Key":"back to","Fragments":["getting"]},{"Key":"to getting","Fragments":["character"]},{"Key":"getting character","Fragments":["vs"]},{"Key":"character vs","Fragments":["integer"]},{"Key":"vs integer","Fragments":["problems:"]},{"Key":" `in","Fragments":["function"]},{"Key":"`in function","Fragments":["rna_transcription:to_rna/1"]},{"Key":"function rna_transcription:to_rna/1","Fragments":["(rna_transcription.erl,"]},{"Key":"rna_transcription:to_rna/1 (rna_transcription.erl,","Fragments":["line","line"]},{"Key":"(rna_transcription.erl, line","Fragments":["4)","8)`"]},{"Key":" called","Fragments":["as","as"]},{"Key":"called as","Fragments":["to_rna(65)","a"]},{"Key":" in","Fragments":["call","let","let","let","let","%%","operator"]},{"Key":"in call","Fragments":["from"]},{"Key":"call from","Fragments":["rna_transcription:to_rna/1"]},{"Key":"from rna_transcription:to_rna/1","Fragments":["(rna_transcription.erl,"]},{"Key":"see from","Fragments":["your","others."]},{"Key":"from your","Fragments":["solution","code.","`sequence`?"]},{"Key":"your solution","Fragments":["you","doesn't","and","and","I","is,"]},{"Key":"solution you","Fragments":["used"]},{"Key":"you used","Fragments":["`$G`","a","`lists:reverse()`"]},{"Key":"used `$G`","Fragments":["instead"]},{"Key":"`$G` instead","Fragments":["of"]},{"Key":"of `\"G\"`","Fragments":["and"]},{"Key":"`\"G\"` and","Fragments":["so"]},{"Key":"and so","Fragments":["forth,","consumes","on","on.","on"]},{"Key":"so forth,","Fragments":["so"]},{"Key":"forth, so","Fragments":["I"]},{"Key":"I will","Fragments":["look","see","have","change","not","post","say","change","say","change","go"]},{"Key":"will look","Fragments":["up"]},{"Key":"look up","Fragments":["the"]},{"Key":"the significance","Fragments":["of"]},{"Key":"significance of","Fragments":["that."]},{"Key":"of that.","Fragments":["Thanks!"]},{"Key":" Oops.","Fragments":["Missed"]},{"Key":"Oops. Missed","Fragments":["that"]},{"Key":"Missed that","Fragments":["detail."]},{"Key":"that detail.","Fragments":["Yes,"]},{"Key":"detail. Yes,","Fragments":["`$G`"]},{"Key":"Yes, `$G`","Fragments":["represents"]},{"Key":"`$G` represents","Fragments":["the"]},{"Key":"represents the","Fragments":["ASCII"]},{"Key":"the ASCII","Fragments":["value"]},{"Key":"ASCII value","Fragments":["of"]},{"Key":"value of","Fragments":["the","the","`analyze/3`,"]},{"Key":"the letter","Fragments":["G."]},{"Key":"letter G.","Fragments":["Using"]},{"Key":"G. Using","Fragments":["`$G`"]},{"Key":"Using `$G`","Fragments":["is"]},{"Key":"`$G` is","Fragments":["sort"]},{"Key":"is sort","Fragments":["of"]},{"Key":"sort of","Fragments":["like","manually","type"]},{"Key":"of like","Fragments":["using"]},{"Key":"like using","Fragments":["the","GPS","\"L\""]},{"Key":"the `char`","Fragments":["data"]},{"Key":"`char` data","Fragments":["type"]},{"Key":"data type","Fragments":["in","introduced"]},{"Key":"type in","Fragments":["other"]},{"Key":"other languages,","Fragments":["but","I"]},{"Key":"languages, but","Fragments":["in"]},{"Key":"but in","Fragments":["erlang","the","the","the"]},{"Key":"erlang is","Fragments":["really"]},{"Key":"really just","Fragments":["an"]},{"Key":"just an","Fragments":["`int`."]},{"Key":"an `int`.","Fragments":["So"]},{"Key":"`int`. So","Fragments":["`$G`"]},{"Key":"So `$G`","Fragments":["and"]},{"Key":"`$G` and","Fragments":["`\"G\"`"]},{"Key":"and `\"G\"`","Fragments":["are","are"]},{"Key":"`\"G\"` are","Fragments":["not","equivalent."]},{"Key":"not the","Fragments":["same","most","coolest","most","case","whole"]},{"Key":"same thing.","Fragments":["However,"]},{"Key":"thing. However,","Fragments":["`[$G]`"]},{"Key":"However, `[$G]`","Fragments":["and"]},{"Key":"`[$G]` and","Fragments":["`\"G\"`"]},{"Key":"are equivalent.","Fragments":["Looks"]},{"Key":"equivalent. Looks","Fragments":["like"]},{"Key":"you figured","Fragments":["it"]},{"Key":"figured it","Fragments":["out"]},{"Key":"it out","Fragments":["on"]},{"Key":"out on","Fragments":["your"]},{"Key":"on your","Fragments":["second","code,","solution.","solution.","solution.","solution.","solution.","solution.","solution.","suggestions;","solution.","prior","solution.","solution."]},{"Key":"your second","Fragments":["iteration.","question."]},{"Key":"The use","Fragments":["of","of","of","of"]},{"Key":"of `++`","Fragments":["is"]},{"Key":"`++` is","Fragments":["going","used"]},{"Key":"is going","Fragments":["to","to","to"]},{"Key":"of garbage","Fragments":["terms"]},{"Key":"garbage terms","Fragments":["because"]},{"Key":"terms because","Fragments":["it"]},{"Key":"because it","Fragments":["has","will","can","seemed","holds","requires","traverses"]},{"Key":"it has","Fragments":["to","a","to"]},{"Key":"to copy","Fragments":["the","it."]},{"Key":"copy the","Fragments":["first"]},{"Key":"first list","Fragments":["onto","(i.e."]},{"Key":"onto the","Fragments":["front","function","stack","result"]},{"Key":"the front","Fragments":["of","list","of"]},{"Key":"front of","Fragments":["the","the"]},{"Key":"the second.","Fragments":["Could"]},{"Key":"second. Could","Fragments":["you"]},{"Key":"Could you","Fragments":["simplify","give","come","come","abstract","elaborate","steer"]},{"Key":"you simplify","Fragments":["it"]},{"Key":"simplify it","Fragments":["not","a"]},{"Key":"it not","Fragments":["to"]},{"Key":"extra accumulator","Fragments":["list,"]},{"Key":"accumulator list,","Fragments":["and"]},{"Key":"list, and","Fragments":["cons","`maps:keys`"]},{"Key":"cons (","Fragments":["`["]},{"Key":"( `[","Fragments":["|"]},{"Key":"`[ |","Fragments":["]`"]},{"Key":"| ]`","Fragments":[")"]},{"Key":"]` )","Fragments":["instead"]},{"Key":") instead","Fragments":["of"]},{"Key":"can solve","Fragments":["this"]},{"Key":"solve this","Fragments":["in"]},{"Key":"in one","Fragments":["method","pass,","module/file","pass?","pass?","location,"]},{"Key":"one method","Fragments":["without"]},{"Key":"method without","Fragments":["splitting"]},{"Key":"without splitting","Fragments":["the"]},{"Key":"splitting the","Fragments":["list","number"]},{"Key":"list on","Fragments":["`Head`"]},{"Key":"on `Head`","Fragments":["and"]},{"Key":"`Head` and","Fragments":["`Tail`.","then"]},{"Key":"This implementation","Fragments":["is","is","is"]},{"Key":"implementation is","Fragments":["pretty","pretty","pretty"]},{"Key":"is pretty","Fragments":["straight","close","clever.","much","impressive,","much","good.","much","straight","straight"]},{"Key":"pretty straight","Fragments":["forward","forward,","forward,"]},{"Key":"straight forward","Fragments":["but","than"]},{"Key":"forward but","Fragments":["does"]},{"Key":"but does","Fragments":["waste"]},{"Key":"does waste","Fragments":["stack,","stack,","stack"]},{"Key":"waste stack,","Fragments":["since","since"]},{"Key":"stack, since","Fragments":["it","it"]},{"Key":"since it","Fragments":["is","starts","involves","is","is"]},{"Key":" Zip","Fragments":["and"]},{"Key":"Zip and","Fragments":["foldl"]},{"Key":"and foldl","Fragments":["in"]},{"Key":"foldl in","Fragments":["a"]},{"Key":"single pass!","Fragments":["(See"]},{"Key":"pass! (See","Fragments":["also:"]},{"Key":"(See also:","Fragments":["[LFE"]},{"Key":"also: [LFE","Fragments":["gist][1])"]},{"Key":" [1]:","Fragments":["https://gist.github.com/yurrriq/a66462e4c12603522052","http://www.erlang.org/doc/efficiency_guide/myths.html","http://clojure.org/java_interop#toc7"]},{"Key":" Instead","Fragments":["of","of"]},{"Key":"having a","Fragments":["conditional","performance","performance","helper"]},{"Key":"a conditional","Fragments":["clause"]},{"Key":"conditional clause","Fragments":["on"]},{"Key":"clause on","Fragments":["line","line","line","line"]},{"Key":"on line","Fragments":["13,","six","four.","eight","14","4","four","6","5).","7.","five.","18.","17","11.","4","8?"]},{"Key":"line 13,","Fragments":["you"]},{"Key":"13, you","Fragments":["can"]},{"Key":" sumOfMultiples(_Ms,","Fragments":["0,"]},{"Key":"sumOfMultiples(_Ms, 0,","Fragments":["Res)"]},{"Key":"0, Res)","Fragments":["-\u003e"]},{"Key":" Works,","Fragments":["but"]},{"Key":"Works, but","Fragments":["doesn't"]},{"Key":"but doesn't","Fragments":["pass"]},{"Key":"doesn't pass","Fragments":["the","the","all","all"]},{"Key":"pass the","Fragments":["tricky","tests","buffer","tests.","tests"]},{"Key":"the tricky","Fragments":["test"]},{"Key":"tricky test","Fragments":["that"]},{"Key":"test that","Fragments":["is"]},{"Key":"is commented","Fragments":["in"]},{"Key":"commented in","Fragments":["the"]},{"Key":"This one","Fragments":["passes","is","does"]},{"Key":"one passes","Fragments":["all"]},{"Key":"passes all","Fragments":["the"]},{"Key":"the tests.","Fragments":["Tricky","Checking","Generally"]},{"Key":"tests. Tricky","Fragments":["unicode"]},{"Key":"Tricky unicode","Fragments":["regexps..."]},{"Key":" isMutipleOf","Fragments":["not"]},{"Key":"isMutipleOf not","Fragments":["longer"]},{"Key":"not longer","Fragments":["exposed"]},{"Key":"longer exposed","Fragments":["to"]},{"Key":"exposed to","Fragments":["other"]},{"Key":" Aww,","Fragments":["yes."]},{"Key":"Aww, yes.","Fragments":["I"]},{"Key":"yes. I","Fragments":["had"]},{"Key":"had problems","Fragments":["with"]},{"Key":"the naming","Fragments":["here,"]},{"Key":"naming here,","Fragments":["at"]},{"Key":"here, at","Fragments":["the"]},{"Key":"end I","Fragments":["switched"]},{"Key":"I switched","Fragments":["two"]},{"Key":"switched two","Fragments":["names"]},{"Key":"two names","Fragments":["and"]},{"Key":"names and","Fragments":["tests"]},{"Key":"and tests","Fragments":["passed"]},{"Key":"tests passed","Fragments":["and"]},{"Key":"passed and","Fragments":["submitted,"]},{"Key":"and submitted,","Fragments":["but"]},{"Key":"submitted, but","Fragments":["now"]},{"Key":"but now","Fragments":["that"]},{"Key":"now that","Fragments":["you","the","this"]},{"Key":"you mention","Fragments":["it,","it,"]},{"Key":"mention it,","Fragments":["it","while"]},{"Key":"it, it","Fragments":["looks"]},{"Key":"it looks","Fragments":["like","like","really","like","like"]},{"Key":"looks like","Fragments":["I","you","the","the","x-mas","`string:strip()`","if","an"]},{"Key":"like I","Fragments":["did","said","just"]},{"Key":"did it","Fragments":["worse"]},{"Key":"it worse","Fragments":[":)"]},{"Key":"worse :)","Fragments":["Thanks"]},{"Key":":) Thanks","Fragments":["for"]},{"Key":" Ditto","Fragments":["@yasmin,"]},{"Key":"Ditto @yasmin,","Fragments":["nice"]},{"Key":"@yasmin, nice","Fragments":["job!"]},{"Key":"job! ++","Fragments":["his"]},{"Key":"++ his","Fragments":["comments"]},{"Key":"his comments","Fragments":["on"]},{"Key":"comments on","Fragments":["parameter","my"]},{"Key":"on parameter","Fragments":["names"]},{"Key":"parameter names","Fragments":["too."]},{"Key":" Really","Fragments":["nice!","like","different"]},{"Key":"Really like","Fragments":["the"]},{"Key":"the combination","Fragments":["of","of"]},{"Key":"combination of","Fragments":["lists:filter","filter","`zipwith`"]},{"Key":"of lists:filter","Fragments":["and"]},{"Key":"lists:filter and","Fragments":["lists:sum."]},{"Key":"and lists:sum.","Fragments":[":D"]},{"Key":"I'd only","Fragments":["change"]},{"Key":"only change","Fragments":["some"]},{"Key":"change some","Fragments":["names,"]},{"Key":"some names,","Fragments":["because"]},{"Key":"names, because","Fragments":["on"]},{"Key":"because on","Fragments":["sumOfMultiples"]},{"Key":"on sumOfMultiples","Fragments":["Candidates"]},{"Key":"sumOfMultiples Candidates","Fragments":["are"]},{"Key":"Candidates are","Fragments":["the"]},{"Key":"are the","Fragments":["base,","right","brain-dead","advantages?"]},{"Key":"the base,","Fragments":["then"]},{"Key":"base, then","Fragments":["on"]},{"Key":"then on","Fragments":["isMultipleOf"]},{"Key":"on isMultipleOf","Fragments":["Candidate"]},{"Key":"isMultipleOf Candidate","Fragments":["is"]},{"Key":"Candidate is","Fragments":["the"]},{"Key":" Maybe","Fragments":["sumOfMultiples(Bases,","this","consider","TODO:","add","I'll","think","you","not"]},{"Key":"Maybe sumOfMultiples(Bases,","Fragments":["Num)"]},{"Key":"sumOfMultiples(Bases, Num)","Fragments":["and"]},{"Key":"Num) and","Fragments":["isMultpleOf(Bases,"]},{"Key":"and isMultpleOf(Bases,","Fragments":["Num)?"]},{"Key":" Substituted","Fragments":["the"]},{"Key":"Substituted the","Fragments":["if"]},{"Key":"the if","Fragments":["for","guards","statement."]},{"Key":"if for","Fragments":["a"]},{"Key":"a case,","Fragments":["making"]},{"Key":"case, making","Fragments":["it"]},{"Key":"making it","Fragments":["more","tail","more","a","a"]},{"Key":"I believe","Fragments":["this","in","that","the","this"]},{"Key":"believe this","Fragments":["is","version"]},{"Key":"cleaner and","Fragments":["easier"]},{"Key":"and easier","Fragments":["to","to"]},{"Key":"easier to","Fragments":["follow","debug","read","understand.","read","verify.","read","read","read."]},{"Key":"to follow","Fragments":["than","vs.","when"]},{"Key":"follow than","Fragments":["my"]},{"Key":"than my","Fragments":["previous","solution.","solution","solution"]},{"Key":"my previous","Fragments":["submission,","comment"]},{"Key":"previous submission,","Fragments":["but"]},{"Key":"submission, but","Fragments":["I"]},{"Key":"I wonder","Fragments":["if","if","if","if","though","if","if","how","if","if","if","if","how"]},{"Key":"wonder if","Fragments":["this","it's","it","one","`lists:mapfoldr/3`","there","`is_question/1`","it","you","your"]},{"Key":"if this","Fragments":["can","function","violates"]},{"Key":"this can","Fragments":["be"]},{"Key":"be cleaned","Fragments":["up"]},{"Key":"cleaned up","Fragments":["further","the"]},{"Key":"up further","Fragments":["through","and"]},{"Key":"further through","Fragments":["the"]},{"Key":"through the","Fragments":["use","string,","whole","use","(sometimes","(sometimes","(sometimes","string,","multiples","(sometimes","(sometimes","DNA","(sometimes","(sometimes","(sometimes","(sometimes","(sometimes"]},{"Key":"pretty close","Fragments":["to"]},{"Key":"close to","Fragments":["every","the"]},{"Key":"to every","Fragments":["other","function"]},{"Key":"every other","Fragments":["submission"]},{"Key":"other submission","Fragments":["I've"]},{"Key":"submission I've","Fragments":["seen"]},{"Key":"seen and","Fragments":["is"]},{"Key":"and is","Fragments":["very","very"]},{"Key":" My","Fragments":["personal","only","first","code","convoluted","way"]},{"Key":"My personal","Fragments":["preference"]},{"Key":"personal preference","Fragments":["would"]},{"Key":"preference would","Fragments":["be"]},{"Key":"function clauses","Fragments":["instead","make","is","or","approach","such","instead","yields"]},{"Key":"clauses instead","Fragments":["of","of"]},{"Key":"of case","Fragments":["clauses"]},{"Key":"clauses in","Fragments":["`translate_element/1`,"]},{"Key":"in `translate_element/1`,","Fragments":["but"]},{"Key":"`translate_element/1`, but","Fragments":["there's"]},{"Key":"but there's","Fragments":["no"]},{"Key":"there's no","Fragments":["explicit","need","need"]},{"Key":"no explicit","Fragments":["reason"]},{"Key":"explicit reason","Fragments":["to."]},{"Key":" Have","Fragments":["you","you","you","you"]},{"Key":"Have you","Fragments":["actually","though","considered","considered","tried"]},{"Key":"you actually","Fragments":["run"]},{"Key":"actually run","Fragments":["the"]},{"Key":"run the","Fragments":["testsuite?"]},{"Key":"the testsuite?","Fragments":["On"]},{"Key":"testsuite? On","Fragments":["a"]},{"Key":"On a","Fragments":["first","side","different"]},{"Key":"a first","Fragments":["look","generation"]},{"Key":"first look","Fragments":["on"]},{"Key":"look on","Fragments":["your"]},{"Key":"your code,","Fragments":["it","namely","I"]},{"Key":"code, it","Fragments":["seems"]},{"Key":"that `allergies(2)`","Fragments":["would"]},{"Key":"`allergies(2)` would","Fragments":["answer"]},{"Key":"would answer","Fragments":["with"]},{"Key":"answer with","Fragments":["`[eggs]`,"]},{"Key":"with `[eggs]`,","Fragments":["which"]},{"Key":"`[eggs]`, which","Fragments":["is"]},{"Key":"is obviously","Fragments":["wrong."]},{"Key":"obviously wrong.","Fragments":["Sadly"]},{"Key":"wrong. Sadly","Fragments":["I'm"]},{"Key":"Sadly I'm","Fragments":["not"]},{"Key":"not able","Fragments":["to"]},{"Key":"check that","Fragments":["by","the","out.","it's"]},{"Key":"that by","Fragments":["myself"]},{"Key":"by myself","Fragments":["right"]},{"Key":"myself right","Fragments":["now…"]},{"Key":"much better","Fragments":["than","readable."]},{"Key":"than your","Fragments":["first","lambda."]},{"Key":"your first","Fragments":["version,","submission)","approach"]},{"Key":"first version,","Fragments":["it"]},{"Key":"version, it","Fragments":["looks"]},{"Key":"you thought","Fragments":["it"]},{"Key":"thought it","Fragments":["through"]},{"Key":"it through","Fragments":["more","an"]},{"Key":"through more","Fragments":["carefully."]},{"Key":"more carefully.","Fragments":["I"]},{"Key":"carefully. I","Fragments":["like"]},{"Key":"you made","Fragments":["the"]},{"Key":"made the","Fragments":["\"translation","choice","readability","suggested"]},{"Key":"the \"translation","Fragments":["table\""]},{"Key":"\"translation table\"","Fragments":["very"]},{"Key":"table\" very","Fragments":["explicit"]},{"Key":"very explicit","Fragments":["using"]},{"Key":"explicit using","Fragments":["a"]},{"Key":"My only","Fragments":["nitpick","concern"]},{"Key":"only nitpick","Fragments":["is"]},{"Key":"nitpick is","Fragments":["that"]},{"Key":"is that","Fragments":["`lists:map/2`","if","you","data","in","that","you","years","it","you","you","this","your","the","you're","we","pros","since","the"]},{"Key":"that `lists:map/2`","Fragments":["is"]},{"Key":"`lists:map/2` is","Fragments":["less"]},{"Key":"is less","Fragments":["conventional"]},{"Key":"less conventional","Fragments":["than"]},{"Key":"conventional than","Fragments":["a"]},{"Key":"list comprehension.","Fragments":["There's","I","Try"]},{"Key":"comprehension. There's","Fragments":["nothing"]},{"Key":"There's nothing","Fragments":["wrong","wrong"]},{"Key":"nothing wrong","Fragments":["with","with","with"]},{"Key":"wrong with","Fragments":["it,","boolean","this","being","creating"]},{"Key":"with it,","Fragments":["I"]},{"Key":"it, I","Fragments":["just","don't"]},{"Key":"I just","Fragments":["find","filed","leveled","ran","submitted","learned...","found","forgot","had","gave","did"]},{"Key":"just find","Fragments":["it"]},{"Key":"it to","Fragments":["be","build","that.","be","the","the","the","O(n)?","the","express.","a","the","the","the","the","the","the"]},{"Key":"more syntactically","Fragments":["noisy"]},{"Key":"syntactically noisy","Fragments":["than"]},{"Key":"noisy than","Fragments":["the"]},{"Key":"than the","Fragments":["LC","comparison","classic","current","second","previous","string","multiple"]},{"Key":"the LC","Fragments":["version."]},{"Key":" I've","Fragments":["done","never","been","should","dabbled"]},{"Key":"I've done","Fragments":["a"]},{"Key":"done a","Fragments":["new"]},{"Key":"new version","Fragments":["using"]},{"Key":"version using","Fragments":["a"]},{"Key":"comprehension. I","Fragments":["don't"]},{"Key":"don't mind","Fragments":["either","me"]},{"Key":"mind either","Fragments":["approach"]},{"Key":"either approach","Fragments":["really.","is"]},{"Key":"approach really.","Fragments":["I"]},{"Key":"really. I","Fragments":["guess"]},{"Key":"I guess","Fragments":["I'm","I","that","the","in"]},{"Key":"guess I'm","Fragments":["just"]},{"Key":"I'm just","Fragments":["more","not","getting"]},{"Key":"just more","Fragments":["used","idiomatic"]},{"Key":"more used","Fragments":["to"]},{"Key":"to using","Fragments":["map!","\u003cstrong\u003elists:foldl/3\u003c/strong\u003e,"]},{"Key":" Tail","Fragments":["recursive"]},{"Key":"Tail recursive","Fragments":["version."]},{"Key":"recursive version.","Fragments":["Seems"]},{"Key":"version. Seems","Fragments":["a"]},{"Key":"Seems a","Fragments":["shame"]},{"Key":"a shame","Fragments":["having"]},{"Key":"shame having","Fragments":["to"]},{"Key":"to then","Fragments":["reverse"]},{"Key":"then reverse","Fragments":["the"]},{"Key":"reverse the","Fragments":["list","list","list","whole","predicate","list"]},{"Key":"list once","Fragments":["done,"]},{"Key":"once done,","Fragments":["but"]},{"Key":"done, but","Fragments":["don't"]},{"Key":"but don't","Fragments":["know"]},{"Key":"don't know","Fragments":["of","why","whether","if","that"]},{"Key":"know of","Fragments":["a"]},{"Key":"a way","Fragments":["to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"You might","Fragments":["consider","think","want","be","want","think","want","consider"]},{"Key":"might consider","Fragments":["calling","implementing","making","taking"]},{"Key":"consider calling","Fragments":["`lists:reverse`"]},{"Key":"calling `lists:reverse`","Fragments":["on"]},{"Key":"`lists:reverse` on","Fragments":["the"]},{"Key":"the return","Fragments":["value","value,","value","type"]},{"Key":"value on","Fragments":["line"]},{"Key":"line six","Fragments":["instead"]},{"Key":"six instead","Fragments":["of"]},{"Key":"of on","Fragments":["line"]},{"Key":"line four.","Fragments":["It"]},{"Key":"four. It","Fragments":["is"]},{"Key":"is more","Fragments":["directly","like","flexible","than","implicit","Erlangy,","reasonable:","erlangesque,","optimal.","idiomatic.","readable,","about","general"]},{"Key":"more directly","Fragments":["related"]},{"Key":"directly related","Fragments":["to"]},{"Key":"related to","Fragments":["the"]},{"Key":"the implementation","Fragments":["of","of","has","(is","details.","note","of"]},{"Key":"implementation of","Fragments":["`accumulate/3`","`add_seconds_to/2`","the","map"]},{"Key":"of `accumulate/3`","Fragments":["than"]},{"Key":"`accumulate/3` than","Fragments":["it"]},{"Key":"than it","Fragments":["is","has"]},{"Key":" @althea","Fragments":["That's"]},{"Key":"@althea That's","Fragments":["a"]},{"Key":"That's a","Fragments":["good","lot"]},{"Key":"good call,","Fragments":["thanks"]},{"Key":" Textbook","Fragments":["map"]},{"Key":"Textbook map","Fragments":["Implementation."]},{"Key":"I felt","Fragments":["pretty"]},{"Key":"felt pretty","Fragments":["good"]},{"Key":"pretty good","Fragments":["about","shape:"]},{"Key":"good about","Fragments":["this."]},{"Key":"would like","Fragments":["to","for"]},{"Key":"to compress","Fragments":["the"]},{"Key":"compress the","Fragments":["single_change"]},{"Key":"the single_change","Fragments":["bit"]},{"Key":"single_change bit","Fragments":["to"]},{"Key":"bit to","Fragments":["be"]},{"Key":"be less","Fragments":["repetitious."]},{"Key":"less repetitious.","Fragments":["Surely"]},{"Key":"repetitious. Surely","Fragments":["I"]},{"Key":"Surely I","Fragments":["should've"]},{"Key":"I should've","Fragments":["used"]},{"Key":"should've used","Fragments":["a"]},{"Key":"case statement.","Fragments":["I'll","That"]},{"Key":"statement. I'll","Fragments":["have","revise"]},{"Key":"I'll have","Fragments":["to","to","to","the"]},{"Key":"to rework","Fragments":["that…"]},{"Key":"Looks good","Fragments":["but","how"]},{"Key":"good but","Fragments":["you"]},{"Key":"could still","Fragments":["improve","write"]},{"Key":"still improve","Fragments":["it"]},{"Key":"improve it","Fragments":["by","by","by"]},{"Key":"it by","Fragments":["adding","adding","adding"]},{"Key":"by adding","Fragments":["a","guards.","a","an"]},{"Key":"adding a","Fragments":["spec","guard","spec?","typespec","guard","spec","typespec","-spec"]},{"Key":"a spec","Fragments":["and","for","so","on","on","also.","annotation?","and","for","for","for"]},{"Key":"spec and","Fragments":["a","guards!","guards."]},{"Key":"and a","Fragments":["guard.","friend","lambda.","tail","linear","tail-recursive","typespec","typespec.","lists:reverse","typespec","final","more","spec","typespec."]},{"Key":" Documentation,","Fragments":["spec"]},{"Key":"Documentation, spec","Fragments":["and"]},{"Key":"and guards!","Fragments":["\\m/"]},{"Key":"like how","Fragments":["you","you","clearly","clean","clear"]},{"Key":"you do","Fragments":["it","to","to","that","two","it"]},{"Key":"it recursively.","Fragments":["I"]},{"Key":"recursively. I","Fragments":["used"]},{"Key":"used lists:sum","Fragments":["+"]},{"Key":"lists:sum +","Fragments":["lists:filter"]},{"Key":"+ lists:filter","Fragments":["on"]},{"Key":"lists:filter on","Fragments":["this"]},{"Key":"on this","Fragments":["one.","one,"]},{"Key":" @laura,","Fragments":["I"]},{"Key":"@laura, I","Fragments":["did"]},{"Key":"did that","Fragments":["way","either...","to"]},{"Key":"that way","Fragments":["to"]},{"Key":"get the","Fragments":["advantage","nucleotide","feets","job","result.","list","feeling","regex","counts","power"]},{"Key":"the advantage","Fragments":["of"]},{"Key":"advantage of","Fragments":["tail-recursion","suitable","Erlang's","the"]},{"Key":"of tail-recursion","Fragments":["optimization,"]},{"Key":"tail-recursion optimization,","Fragments":["but"]},{"Key":"optimization, but","Fragments":["using"]},{"Key":"but using","Fragments":["lists:sum"]},{"Key":"using lists:sum","Fragments":["seems"]},{"Key":"lists:sum seems","Fragments":["better."]},{"Key":"seems better.","Fragments":[":D"]},{"Key":"The tests","Fragments":["are"]},{"Key":"tests are","Fragments":["aksing"]},{"Key":"are aksing","Fragments":["for"]},{"Key":"aksing for","Fragments":["a"]},{"Key":"a function","Fragments":["`charge/2`","with","to","like","call","from","calling","clause","without","not","over","returning","in","argument."]},{"Key":"function `charge/2`","Fragments":["but"]},{"Key":"`charge/2` but","Fragments":["the"]},{"Key":"the corresponding","Fragments":["tests"]},{"Key":"corresponding tests","Fragments":["look"]},{"Key":"tests look","Fragments":["exactly"]},{"Key":"look exactly","Fragments":["the"]},{"Key":"exactly the","Fragments":["same"]},{"Key":"same as","Fragments":["the","version","I","your","`16#47`"]},{"Key":"the ones","Fragments":["for","I"]},{"Key":"ones for","Fragments":["`withdraw/2`,"]},{"Key":"for `withdraw/2`,","Fragments":["so"]},{"Key":"`withdraw/2`, so","Fragments":["I"]},{"Key":"I omitted","Fragments":["that"]},{"Key":"omitted that","Fragments":["function"]},{"Key":"that function","Fragments":["until","is"]},{"Key":"function until","Fragments":["someone"]},{"Key":"until someone","Fragments":["shows"]},{"Key":"someone shows","Fragments":["me"]},{"Key":"shows me","Fragments":["the"]},{"Key":"me the","Fragments":["purpose","guard","most"]},{"Key":"the purpose","Fragments":["of","of"]},{"Key":"purpose of","Fragments":["that","the"]},{"Key":" WIP,","Fragments":["please"]},{"Key":"WIP, please","Fragments":["ignore."]},{"Key":" Bumping","Fragments":["for"]},{"Key":"Bumping for","Fragments":["encouragement"]},{"Key":"for encouragement","Fragments":[":-)"]},{"Key":" oh","Fragments":["hey,"]},{"Key":"oh hey,","Fragments":["totally"]},{"Key":"hey, totally","Fragments":["forgot"]},{"Key":"about this.","Fragments":["if"]},{"Key":"this. if","Fragments":["you"]},{"Key":"you want","Fragments":["you","to","to","to","to","to","to","your","to","it","to"]},{"Key":"want you","Fragments":["could"]},{"Key":"could comment","Fragments":["on"]},{"Key":"comment on","Fragments":["my","this"]},{"Key":"my `lynch`","Fragments":["project"]},{"Key":"`lynch` project","Fragments":["on"]},{"Key":"project on","Fragments":["GitHub"]},{"Key":"on GitHub","Fragments":[":)"]},{"Key":" this","Fragments":["is"]},{"Key":"is called","Fragments":["MVP","tail-call","nitpicking","with"]},{"Key":"called MVP","Fragments":["(minimal"]},{"Key":"MVP (minimal","Fragments":["viable"]},{"Key":"(minimal viable","Fragments":["product),"]},{"Key":"viable product),","Fragments":["afaik"]},{"Key":"product), afaik","Fragments":[":-D"]},{"Key":"You realise","Fragments":["you're"]},{"Key":"realise you're","Fragments":["calculating"]},{"Key":"you're calculating","Fragments":["the"]},{"Key":"calculating the","Fragments":["lowercased"]},{"Key":"the lowercased","Fragments":["and"]},{"Key":"sorted version","Fragments":["of","of"]},{"Key":"your subject","Fragments":["for"]},{"Key":"subject for","Fragments":["every"]},{"Key":"While there's","Fragments":["noting"]},{"Key":"there's noting","Fragments":["wrong"]},{"Key":"noting wrong","Fragments":["with"]},{"Key":"with boolean","Fragments":["logic,"]},{"Key":"logic, have","Fragments":["you"]},{"Key":"have you","Fragments":["considered","the"]},{"Key":"you considered","Fragments":["implementing","somehow","adding"]},{"Key":"considered implementing","Fragments":["`isAnagram()`"]},{"Key":"implementing `isAnagram()`","Fragments":["using"]},{"Key":"`isAnagram()` using","Fragments":["pattern"]},{"Key":"using pattern","Fragments":["matching?","matching","matching"]},{"Key":"On the","Fragments":["topic","other"]},{"Key":"the topic","Fragments":["of"]},{"Key":"topic of","Fragments":["boolean"]},{"Key":"of boolean","Fragments":["logic,"]},{"Key":"logic, contrary","Fragments":["to"]},{"Key":"contrary to","Fragments":["`and`,"]},{"Key":"to `and`,","Fragments":["`andalso`"]},{"Key":"`and`, `andalso`","Fragments":["short-circuits."]},{"Key":" It's","Fragments":["my","not","a","considered","same","1/4th","hard","not","too","more"]},{"Key":"It's my","Fragments":["impression"]},{"Key":"my impression","Fragments":["that"]},{"Key":"impression that","Fragments":["in"]},{"Key":"that in","Fragments":["Erlang,","some","certain","many","mind,"]},{"Key":"in Erlang,","Fragments":["snake_case","snake_case","so"]},{"Key":"Erlang, snake_case","Fragments":["for","of"]},{"Key":"snake_case for","Fragments":["function","function"]},{"Key":"for function","Fragments":["names","names"]},{"Key":"function names","Fragments":["is","if","so"]},{"Key":"names is","Fragments":["preferred"]},{"Key":"is preferred","Fragments":["as","now,"]},{"Key":"preferred as","Fragments":["is"]},{"Key":"as is","Fragments":["evident"]},{"Key":"is evident","Fragments":["by"]},{"Key":"evident by","Fragments":["the"]},{"Key":"by the","Fragments":["standard","tests,","way.","nonequal","record","caller.","syntax","way,"]},{"Key":"the standard","Fragments":["function","library","library,","recursive","recursive","library"]},{"Key":"standard function","Fragments":["`string:to_lower()`."]},{"Key":" Why","Fragments":["not","are","do","not","do","an","did","is","have","not","do","import","not","do","don't"]},{"Key":"Why not","Fragments":["continue","type","move","walk","define","define","have"]},{"Key":"not continue","Fragments":["the"]},{"Key":"continue the","Fragments":["nice"]},{"Key":"the nice","Fragments":["rhythm","terseness"]},{"Key":"nice rhythm","Fragments":["for"]},{"Key":"rhythm for","Fragments":["variable"]},{"Key":"for variable","Fragments":["names"]},{"Key":"variable names","Fragments":["(`Word`","to"]},{"Key":"names (`Word`","Fragments":["\u0026"]},{"Key":"(`Word` \u0026","Fragments":["`Candidate`)"]},{"Key":"\u0026 `Candidate`)","Fragments":["you"]},{"Key":"`Candidate`) you","Fragments":["started"]},{"Key":"you started","Fragments":["in"]},{"Key":"started in","Fragments":["`find()`"]},{"Key":"in `find()`","Fragments":["in"]},{"Key":"`find()` in","Fragments":["`isAnagram()`?"]},{"Key":" Don't","Fragments":["be","know","you"]},{"Key":"Don't be","Fragments":["afraid"]},{"Key":"be afraid","Fragments":["to"]},{"Key":"afraid to","Fragments":["hit"]},{"Key":"to hit","Fragments":["the"]},{"Key":"hit the","Fragments":["enter"]},{"Key":"the enter","Fragments":["key"]},{"Key":"enter key","Fragments":["to"]},{"Key":"key to","Fragments":["break"]},{"Key":"to break","Fragments":["lines.","or","when"]},{"Key":"I sound","Fragments":["\"stern\","]},{"Key":"sound \"stern\",","Fragments":["know"]},{"Key":"\"stern\", know","Fragments":["that's"]},{"Key":"know that's","Fragments":["not"]},{"Key":"that's not","Fragments":["my","the"]},{"Key":"not my","Fragments":["intention,","intention"]},{"Key":"my intention,","Fragments":["English"]},{"Key":"intention, English","Fragments":["isn't"]},{"Key":"English isn't","Fragments":["my"]},{"Key":"isn't my","Fragments":["native"]},{"Key":"my native","Fragments":["language"]},{"Key":"native language","Fragments":["and"]},{"Key":"language and","Fragments":["I"]},{"Key":"find that","Fragments":["I","when","most","using","Haskell","I"]},{"Key":"I often","Fragments":["times","do"]},{"Key":"often times","Fragments":["lack"]},{"Key":"times lack","Fragments":["the"]},{"Key":"lack the","Fragments":["vocabulary"]},{"Key":"the vocabulary","Fragments":["to"]},{"Key":"vocabulary to","Fragments":["express"]},{"Key":"to express","Fragments":["myself","the"]},{"Key":"express myself","Fragments":["the"]},{"Key":"myself the","Fragments":["way"]},{"Key":"the way","Fragments":["I","you're","the","you've","you","the","this"]},{"Key":"way I","Fragments":["want","could"]},{"Key":"of list","Fragments":["completions!","`[Acc|F(H)]`.","heads","comprehensions.","comprehensions","or","comprehensions;"]},{"Key":"only nit","Fragments":["I","I"]},{"Key":"nit I","Fragments":["have,","have"]},{"Key":"I have,","Fragments":["is"]},{"Key":"have, is","Fragments":["that"]},{"Key":"that if","Fragments":["you","a","you"]},{"Key":"you get","Fragments":["an","`sort`","much","used","the"]},{"Key":"get an","Fragments":["undefined"]},{"Key":"an undefined","Fragments":["symbol"]},{"Key":"undefined symbol","Fragments":["it"]},{"Key":"symbol it","Fragments":["returns"]},{"Key":"list of","Fragments":["integers","values","chars.","chars","those","lists.","lists.","possibilities","functions","200,000,000","Multiples","lists.","the","chars?","characters","characters,"]},{"Key":"of integers","Fragments":["(because"]},{"Key":"integers (because","Fragments":["the"]},{"Key":"(because the","Fragments":["atom"]},{"Key":"the atom","Fragments":["returned","`a`"]},{"Key":"atom returned","Fragments":["cannot"]},{"Key":"returned cannot","Fragments":["be"]},{"Key":"cannot be","Fragments":["interpreted"]},{"Key":"be interpreted","Fragments":["as"]},{"Key":"interpreted as","Fragments":["a"]},{"Key":"a character).","Fragments":["You"]},{"Key":"character). You","Fragments":["might"]},{"Key":"might think","Fragments":["about","passing","I'm"]},{"Key":"think about","Fragments":["returning","a","it,","the","making","using","using","what","the","something","it.","trying","doing","that"]},{"Key":"about returning","Fragments":["something"]},{"Key":"returning something","Fragments":["like"]},{"Key":" {ok,","Fragments":["Result}"]},{"Key":"{ok, Result}","Fragments":["or"]},{"Key":" {error,","Fragments":["Result,"]},{"Key":"{error, Result,","Fragments":["{undefined_symbol,"]},{"Key":"Result, {undefined_symbol,","Fragments":["DnaChar}}"]},{"Key":" Initial","Fragments":["non-tail-recursive"]},{"Key":"Initial non-tail-recursive","Fragments":["version"]},{"Key":"non-tail-recursive version","Fragments":["(I"]},{"Key":"version (I","Fragments":["think"]},{"Key":"(I think","Fragments":["I'm","I"]},{"Key":"think I'm","Fragments":["right","crazy"]},{"Key":"I'm right","Fragments":["in"]},{"Key":"right in","Fragments":["saying"]},{"Key":"in saying","Fragments":["that"]},{"Key":"saying that","Fragments":["Erlang"]},{"Key":"that Erlang","Fragments":["doesn't"]},{"Key":"Erlang doesn't","Fragments":["do","have","have","do"]},{"Key":"doesn't do","Fragments":["tail","any"]},{"Key":"do tail","Fragments":["recursion"]},{"Key":"tail recursion","Fragments":["modulo","as","is","comment.","to","instead","rather","is"]},{"Key":"recursion modulo","Fragments":["cons?)."]},{"Key":" Reverted","Fragments":["to"]},{"Key":"Reverted to","Fragments":["letting"]},{"Key":"to letting","Fragments":["the"]},{"Key":"letting the","Fragments":["recursion","mistake"]},{"Key":"the recursion","Fragments":["run","in","run","run","vs","with"]},{"Key":"recursion run","Fragments":["its","to","until"]},{"Key":"run its","Fragments":["course"]},{"Key":"its course","Fragments":["instead"]},{"Key":"course instead","Fragments":["of"]},{"Key":"of matching","Fragments":["on"]},{"Key":"matching on","Fragments":["the","equality","concatenated"]},{"Key":"the (non-empty)","Fragments":["tail"]},{"Key":"(non-empty) tail","Fragments":["because"]},{"Key":"tail because","Fragments":["the"]},{"Key":"the performance","Fragments":["gain","(some","dramatically"]},{"Key":"performance gain","Fragments":["for"]},{"Key":"gain for","Fragments":["long"]},{"Key":"for long","Fragments":["matching","input","lists.","lists.","lists.","lists."]},{"Key":"long matching","Fragments":["tails","tails."]},{"Key":"matching tails","Fragments":["is"]},{"Key":"tails is","Fragments":["not"]},{"Key":"not worth","Fragments":["it"]},{"Key":"worth it","Fragments":["when"]},{"Key":"it when","Fragments":["compared","it's"]},{"Key":"when compared","Fragments":["with","with","to"]},{"Key":"compared with","Fragments":["the","the"]},{"Key":"the average","Fragments":["case","case","case"]},{"Key":"average case","Fragments":["(as","because","so"]},{"Key":"case (as","Fragments":["more"]},{"Key":"(as more","Fragments":["testing"]},{"Key":"more testing","Fragments":["showed)."]},{"Key":"this would","Fragments":["be","be","only","do","read","look"]},{"Key":"better split","Fragments":["onto"]},{"Key":"split onto","Fragments":["multiple"]},{"Key":"onto multiple","Fragments":["lines,"]},{"Key":"multiple lines,","Fragments":["but"]},{"Key":"lines, but","Fragments":["I'm"]},{"Key":"how best","Fragments":["to"]},{"Key":"to indent","Fragments":["it."]},{"Key":" Hmmmm,","Fragments":["this"]},{"Key":"Hmmmm, this","Fragments":["doesn't"]},{"Key":"this doesn't","Fragments":["pass"]},{"Key":"tests does","Fragments":["it?"]},{"Key":"does it?","Fragments":["E.g.,","Absent"]},{"Key":"it? E.g.,","Fragments":["\"G\""]},{"Key":"E.g., \"G\"","Fragments":["maps"]},{"Key":"\"G\" maps","Fragments":["to"]},{"Key":"maps to","Fragments":["\"C\",","\"A\",","the","keep"]},{"Key":"to \"C\",","Fragments":["not"]},{"Key":"\"C\", not","Fragments":["to"]},{"Key":"to itself,","Fragments":["and"]},{"Key":"itself, and","Fragments":["\"T\""]},{"Key":"and \"T\"","Fragments":["maps"]},{"Key":"\"T\" maps","Fragments":["to"]},{"Key":"to \"A\",","Fragments":["not"]},{"Key":"\"A\", not","Fragments":["to"]},{"Key":" Ah,","Fragments":["there","that","fair","can"]},{"Key":"Ah, there","Fragments":["was"]},{"Key":"there was","Fragments":["a","a","an"]},{"Key":"a bug","Fragments":["in","in"]},{"Key":"bug in","Fragments":["the","`group/2`","the"]},{"Key":"tests for","Fragments":["this","me"]},{"Key":"exercise a","Fragments":["while"]},{"Key":"a while","Fragments":["ago","and","to"]},{"Key":"while ago","Fragments":["-"]},{"Key":"ago -","Fragments":["looks"]},{"Key":"- looks","Fragments":["like"]},{"Key":"the fix","Fragments":["has"]},{"Key":"fix has","Fragments":["made"]},{"Key":"has made","Fragments":["it"]},{"Key":"made it","Fragments":["into","better.","a","more"]},{"Key":"it into","Fragments":["production.","number","the","some"]},{"Key":"into production.","Fragments":["New"]},{"Key":"production. New","Fragments":["version"]},{"Key":"New version","Fragments":["submitted"]},{"Key":"version submitted","Fragments":["that"]},{"Key":"submitted that","Fragments":["passes"]},{"Key":"that passes","Fragments":["the"]},{"Key":"passes the","Fragments":["fixed"]},{"Key":"the fixed","Fragments":["tests"]},{"Key":"fixed tests","Fragments":[":-)"]},{"Key":"that your","Fragments":["solution","functions"]},{"Key":"solution doesn't","Fragments":["rely"]},{"Key":"doesn't rely","Fragments":["on"]},{"Key":"could collapse","Fragments":["`is_trinary_digit/1`","lines"]},{"Key":"collapse `is_trinary_digit/1`","Fragments":["into"]},{"Key":"`is_trinary_digit/1` into","Fragments":["the"]},{"Key":"into the","Fragments":["function","last","function.","game","result.","habit","predicate","habit","function","testsuite.","habit","proper","Gregorian","habit"]},{"Key":"function clauses,","Fragments":["although"]},{"Key":"clauses, although","Fragments":["that"]},{"Key":"although that","Fragments":["would"]},{"Key":"would lose","Fragments":["the"]},{"Key":"lose the","Fragments":["clarity","import"]},{"Key":"the clarity","Fragments":["of","a"]},{"Key":"clarity of","Fragments":["the","intent"]},{"Key":"the \"is","Fragments":["trinary"]},{"Key":"\"is trinary","Fragments":["digit\""]},{"Key":"trinary digit\"","Fragments":["function"]},{"Key":"digit\" function","Fragments":["name."]},{"Key":"often do","Fragments":["transform"]},{"Key":"do transform","Fragments":["such"]},{"Key":"transform such","Fragments":["a"]},{"Key":"a predicate","Fragments":["into","but"]},{"Key":"predicate into","Fragments":["a"]},{"Key":"use it","Fragments":["as","to","in","in","in","in"]},{"Key":" -define(is_trinary_digit(D),","Fragments":["(D"]},{"Key":"-define(is_trinary_digit(D), (D","Fragments":["\u003e="]},{"Key":"(D \u003e=","Fragments":["$0)"]},{"Key":"\u003e= $0)","Fragments":["andalso"]},{"Key":"$0) andalso","Fragments":["(D"]},{"Key":"andalso (D","Fragments":["=\u003c"]},{"Key":"(D =\u003c","Fragments":["$2))."]},{"Key":" to_decimal([],","Fragments":["_Base,"]},{"Key":"to_decimal([], _Base,","Fragments":["Accu)"]},{"Key":"_Base, Accu)","Fragments":["-\u003e"]},{"Key":"Accu) -\u003e","Fragments":["Accu;"]},{"Key":" to_decimal([H|T],","Fragments":["Base,"]},{"Key":"to_decimal([H|T], Base,","Fragments":["Accu)"]},{"Key":"Base, Accu)","Fragments":["when"]},{"Key":"Accu) when","Fragments":["?is_trinary_digit(H)"]},{"Key":"when ?is_trinary_digit(H)","Fragments":["-\u003e"]},{"Key":" {H1,","Fragments":["_}"]},{"Key":"{H1, _}","Fragments":["="]},{"Key":"_} =","Fragments":["string:to_integer([H]),"]},{"Key":" DigitCtrbt","Fragments":["="]},{"Key":"DigitCtrbt =","Fragments":["Base*H1,"]},{"Key":" to_decimal(T,","Fragments":["Base*3,"]},{"Key":"to_decimal(T, Base*3,","Fragments":["Accu"]},{"Key":"Base*3, Accu","Fragments":["+"]},{"Key":"Accu +","Fragments":["DigitCtrbt);","Ceil);","Ceil)"]},{"Key":" to_decimal(_,","Fragments":["_,"]},{"Key":"to_decimal(_, _,","Fragments":["_)"]},{"Key":"_, _)","Fragments":["-\u003e"]},{"Key":"Why are","Fragments":["you","you"]},{"Key":"you using","Fragments":["guards"]},{"Key":"using guards","Fragments":["instead","and/or"]},{"Key":"guards instead","Fragments":["of"]},{"Key":"a patternmatch","Fragments":["in"]},{"Key":"patternmatch in","Fragments":["`convert/1`?"]},{"Key":" LOL","Fragments":["don't"]},{"Key":"LOL don't","Fragments":["use"]},{"Key":"don't use","Fragments":["guards","them","==","pattern","if"]},{"Key":" erlang","Fragments":["has","has","has","has","has","has","has"]},{"Key":"erlang has","Fragments":["maps","maps","maps","maps","maps","maps","maps"]},{"Key":"has maps","Fragments":["in","in","in","in","in","in","in"]},{"Key":"maps in","Fragments":["v","v","v","v","v","v","v"]},{"Key":"in v","Fragments":["18","18","18","18","18","18","18"]},{"Key":"This submission","Fragments":["is"]},{"Key":"is 3","Fragments":["months"]},{"Key":"3 months","Fragments":["old,"]},{"Key":"months old,","Fragments":["18"]},{"Key":"old, 18","Fragments":["wasn't"]},{"Key":"18 wasn't","Fragments":["released"]},{"Key":"wasn't released","Fragments":["then"]},{"Key":" Excellent","Fragments":["implementation."]},{"Key":"you differentiate","Fragments":["between"]},{"Key":"differentiate between","Fragments":["lines"]},{"Key":"between lines","Fragments":["18"]},{"Key":"lines 18","Fragments":["and"]},{"Key":"18 and","Fragments":["20?"]},{"Key":"and 20?","Fragments":["Is"]},{"Key":"20? Is","Fragments":["this"]},{"Key":"Is this","Fragments":["really","common"]},{"Key":"this really","Fragments":["necessary?"]},{"Key":" @oral,","Fragments":["when"]},{"Key":"@oral, when","Fragments":["was"]},{"Key":"when was","Fragments":["the"]},{"Key":"was the","Fragments":["last","only"]},{"Key":"the last","Fragments":["time","two","one.","step...","element","expression","position","character","call","step.","step."]},{"Key":"last time","Fragments":["you"]},{"Key":"time you","Fragments":["used"]},{"Key":"a negative","Fragments":["year","year","`N`?","year"]},{"Key":"negative year","Fragments":["in","is","for"]},{"Key":"year in","Fragments":["a"]},{"Key":"a conversation?","Fragments":["Don't"]},{"Key":"conversation? Don't","Fragments":["you"]},{"Key":"Don't you","Fragments":["think","think"]},{"Key":"think that","Fragments":["familiarity","sort","`total/0`"]},{"Key":"that familiarity","Fragments":["is"]},{"Key":"familiarity is","Fragments":["a"]},{"Key":"a nice","Fragments":["thing","solution.","optimization"]},{"Key":"nice thing","Fragments":["to"]},{"Key":"thing to","Fragments":["have","the","consider","consider:","be"]},{"Key":"have in","Fragments":["an","mind?"]},{"Key":"in an","Fragments":["API?","empty","anonymous","awkward","alternative"]},{"Key":"an API?","Fragments":["Ultimately,"]},{"Key":"API? Ultimately,","Fragments":["I"]},{"Key":"Ultimately, I","Fragments":["feel"]},{"Key":"feel a","Fragments":["single","lot"]},{"Key":"single integer","Fragments":["might"]},{"Key":"integer might","Fragments":["not"]},{"Key":"might not","Fragments":["be","be","really","be","really"]},{"Key":"be enough","Fragments":["to"]},{"Key":"enough to","Fragments":["represent","prevent"]},{"Key":"to represent","Fragments":["a","BC","the"]},{"Key":"represent a","Fragments":["year."]},{"Key":"had a","Fragments":["look","look","docs","hard"]},{"Key":"at your","Fragments":["solution","solution"]},{"Key":"didn't like","Fragments":["it"]},{"Key":"like it","Fragments":["for","calculates","you're","would"]},{"Key":"the above","Fragments":["reason.","code,"]},{"Key":"above reason.","Fragments":["Just"]},{"Key":"reason. Just","Fragments":["for"]},{"Key":"Just for","Fragments":["the"]},{"Key":"the sake","Fragments":["of","of"]},{"Key":"sake of","Fragments":["argument,","simplicity."]},{"Key":"of argument,","Fragments":["I"]},{"Key":"argument, I","Fragments":["modified"]},{"Key":"I modified","Fragments":["my"]},{"Key":"modified my","Fragments":["code"]},{"Key":"my code","Fragments":["so","instead","looks","today,","is"]},{"Key":"code so","Fragments":["it","you"]},{"Key":"it accepts","Fragments":["negative"]},{"Key":"accepts negative","Fragments":["years."]},{"Key":"negative years.","Fragments":["It"]},{"Key":"years. It","Fragments":["has"]},{"Key":"It has","Fragments":["other"]},{"Key":"has other","Fragments":["drawbacks"]},{"Key":"other drawbacks","Fragments":["tough"]},{"Key":"drawbacks tough","Fragments":["but"]},{"Key":"tough but","Fragments":["I"]},{"Key":"I love","Fragments":["to","it!","the"]},{"Key":"love to","Fragments":["hear","look."]},{"Key":"to hear","Fragments":["what","if"]},{"Key":"hear what","Fragments":["you"]},{"Key":"what you","Fragments":["think.","expect","expect:","did","need","mean","suggested.","want"]},{"Key":" @marta","Fragments":["I"]},{"Key":"@marta I","Fragments":["don't"]},{"Key":"think I","Fragments":["understand","like","would","really","saw","sould","was","can","stole"]},{"Key":"I understand","Fragments":["`is_leap_year(Year","that","that's","it"]},{"Key":"understand `is_leap_year(Year","Fragments":["*"]},{"Key":"`is_leap_year(Year *","Fragments":["-1"]},{"Key":"* -1","Fragments":["-","-"]},{"Key":"-1 -","Fragments":["1)`","1)"]},{"Key":"- 1)`","Fragments":["could"]},{"Key":"1)` could","Fragments":["you"]},{"Key":"you explain?","Fragments":["My"]},{"Key":"explain? My","Fragments":["guess"]},{"Key":"My guess","Fragments":["is"]},{"Key":"guess is","Fragments":["that"]},{"Key":"consider negative","Fragments":["numbers"]},{"Key":"negative numbers","Fragments":["to","using"]},{"Key":"numbers to","Fragments":["represent"]},{"Key":"represent BC","Fragments":["years."]},{"Key":"BC years.","Fragments":["For"]},{"Key":"years. For","Fragments":["example"]},{"Key":"For example","Fragments":["-100","in","in()"]},{"Key":"example -100","Fragments":["="]},{"Key":"-100 =","Fragments":["100"]},{"Key":"= 100","Fragments":["BC."]},{"Key":"100 BC.","Fragments":["Personally"]},{"Key":"BC. Personally","Fragments":["I"]},{"Key":"Personally I","Fragments":["would","prefer"]},{"Key":"would keep","Fragments":["it"]},{"Key":"keep it","Fragments":["simple"]},{"Key":"it simple","Fragments":["and"]},{"Key":"simple and","Fragments":["not","efficient."]},{"Key":"not have","Fragments":["this","specs","a"]},{"Key":"have this","Fragments":["extra"]},{"Key":"this extra","Fragments":["logic"]},{"Key":"extra logic","Fragments":["and"]},{"Key":"logic and","Fragments":["just","program"]},{"Key":"and just","Fragments":["say","started","calling","wrote"]},{"Key":"just say","Fragments":["that","a"]},{"Key":"say that","Fragments":["the","for","the"]},{"Key":"year MUST","Fragments":["be"]},{"Key":"MUST be","Fragments":["in"]},{"Key":"be in","Fragments":["AD.","Erlang","pretty"]},{"Key":"in AD.","Fragments":["Negative"]},{"Key":"AD. Negative","Fragments":["years"]},{"Key":"Negative years","Fragments":["are"]},{"Key":"years are","Fragments":["mostly"]},{"Key":"are mostly","Fragments":["for"]},{"Key":"mostly for","Fragments":["computation"]},{"Key":"for computation","Fragments":["no"]},{"Key":"computation no","Fragments":["so"]},{"Key":"no so","Fragments":["much"]},{"Key":"so much","Fragments":["for","shorter","(a","ceremony"]},{"Key":"much for","Fragments":["people.","the"]},{"Key":"you wanted","Fragments":["to","to","to"]},{"Key":"to take","Fragments":["years","another"]},{"Key":"take years","Fragments":["as"]},{"Key":"years as","Fragments":["BC","invalid"]},{"Key":"as BC","Fragments":["ideally"]},{"Key":"BC ideally","Fragments":["the"]},{"Key":"ideally the","Fragments":["interface"]},{"Key":"the interface","Fragments":["would"]},{"Key":"interface would","Fragments":["take"]},{"Key":"would take","Fragments":["a"]},{"Key":"take a","Fragments":["tagged","look","look","look"]},{"Key":"a tagged","Fragments":["tuple"]},{"Key":"tagged tuple","Fragments":["like"]},{"Key":"like `{bc,","Fragments":["100}`"]},{"Key":"`{bc, 100}`","Fragments":["or"]},{"Key":"100}` or","Fragments":["`{ad,"]},{"Key":"or `{ad,","Fragments":["1995}`."]},{"Key":"`{ad, 1995}`.","Fragments":["The"]},{"Key":"1995}`. The","Fragments":["test"]},{"Key":"The test","Fragments":["doesn't","suite"]},{"Key":"test doesn't","Fragments":["take"]},{"Key":"doesn't take","Fragments":["this"]},{"Key":"take this","Fragments":["into"]},{"Key":"this into","Fragments":["consideration","a"]},{"Key":"into consideration","Fragments":["however"]},{"Key":"consideration however","Fragments":["so"]},{"Key":"however so","Fragments":["in"]},{"Key":"my solution","Fragments":["I","I","which","as","but"]},{"Key":"solution I","Fragments":["decided","simply","think"]},{"Key":"to only","Fragments":["allow","return"]},{"Key":"only allow","Fragments":["AD."]},{"Key":" @samanta,","Fragments":["you"]},{"Key":"@samanta, you","Fragments":["are"]},{"Key":"are correct.","Fragments":["`-1`"]},{"Key":"correct. `-1`","Fragments":["(1"]},{"Key":"`-1` (1","Fragments":["BC)"]},{"Key":"(1 BC)","Fragments":["translates"]},{"Key":"BC) translates","Fragments":["to"]},{"Key":"translates to","Fragments":["`0`"]},{"Key":"to `0`","Fragments":["(-1"]},{"Key":"`0` (-1","Fragments":["*"]},{"Key":"(-1 *","Fragments":["-1"]},{"Key":"- 1)","Fragments":["which"]},{"Key":"1) which","Fragments":["is"]},{"Key":" ahh...","Fragments":["the"]},{"Key":"ahh... the","Fragments":["test"]},{"Key":"test is","Fragments":["testing"]},{"Key":"is testing","Fragments":["value"]},{"Key":"testing value","Fragments":["sorting..."]},{"Key":"value sorting...","Fragments":["guess"]},{"Key":"sorting... guess","Fragments":["i"]},{"Key":"guess i","Fragments":["got"]},{"Key":"i got","Fragments":["lucky"]},{"Key":"got lucky","Fragments":["in"]},{"Key":"lucky in","Fragments":["my"]},{"Key":" Ahh","Fragments":["append..."]},{"Key":"Ahh append...","Fragments":["i"]},{"Key":"append... i","Fragments":["missed"]},{"Key":"i missed","Fragments":["that"]},{"Key":"missed that","Fragments":["one"]},{"Key":"one and","Fragments":["was"]},{"Key":"and was","Fragments":["doing"]},{"Key":"was doing","Fragments":["the"]},{"Key":"the manual","Fragments":["[Name|","tail"]},{"Key":"manual [Name|","Fragments":["Tail]"]},{"Key":"[Name| Tail]","Fragments":["stuff."]},{"Key":" Did","Fragments":["you","you","you","you","some"]},{"Key":"you know","Fragments":["that","the","is"]},{"Key":"know that","Fragments":["orddicts","it","this","opinion","is"]},{"Key":"that orddicts","Fragments":["are"]},{"Key":"orddicts are","Fragments":["sorted?"]},{"Key":"are sorted?","Fragments":["So"]},{"Key":"sorted? So","Fragments":["you"]},{"Key":"So you","Fragments":["get","can","don't"]},{"Key":"get `sort`","Fragments":["for"]},{"Key":"`sort` for","Fragments":["free."]},{"Key":"not an","Fragments":["Erlang","expression."]},{"Key":"an Erlang","Fragments":["expert,","expert,","shell."]},{"Key":"Erlang expert,","Fragments":["but","but"]},{"Key":"expert, but","Fragments":["this","I"]},{"Key":"this looks","Fragments":["like","good!"]},{"Key":"the Erlang","Fragments":["equivalent","book:","fail","standard","track"]},{"Key":"Erlang equivalent","Fragments":["of"]},{"Key":"equivalent of","Fragments":["nested-if"]},{"Key":"of nested-if","Fragments":["hell."]},{"Key":"nested-if hell.","Fragments":["Can"]},{"Key":"hell. Can","Fragments":["you"]},{"Key":"think of","Fragments":["a","declarative","a","to","better","a","anything.","a","a","it","using"]},{"Key":"do the","Fragments":["checks","cases","trick","normalization","contract","append"]},{"Key":"checks without","Fragments":["deep"]},{"Key":"without deep","Fragments":["nesting"]},{"Key":"deep nesting","Fragments":["(e.g.,"]},{"Key":"nesting (e.g.,","Fragments":["using"]},{"Key":"(e.g., using","Fragments":["lists"]},{"Key":"using lists","Fragments":["or"]},{"Key":"lists or","Fragments":["tuples)?"]},{"Key":"can rewrite","Fragments":["this"]},{"Key":"rewrite this","Fragments":["to","using"]},{"Key":"this to","Fragments":["use","simplify","short"]},{"Key":"the strengths","Fragments":["of"]},{"Key":"strengths of","Fragments":["Erlang."]},{"Key":"of Erlang.","Fragments":["See"]},{"Key":"Erlang. See","Fragments":["this"]},{"Key":"See this","Fragments":["chapter"]},{"Key":"this chapter","Fragments":["of","of"]},{"Key":"chapter of","Fragments":["the","\"Learn"]},{"Key":"Erlang book:","Fragments":["http://www.erlang.org/doc/getting_started/seq_prog.html#id62552"]},{"Key":"a fun","Fragments":["is"]},{"Key":"fun is","Fragments":["creative,"]},{"Key":"is creative,","Fragments":["but"]},{"Key":"creative, but","Fragments":["ultimately"]},{"Key":"but ultimately","Fragments":["unnecessary","I"]},{"Key":"ultimately unnecessary","Fragments":["and"]},{"Key":"unnecessary and","Fragments":["gives"]},{"Key":"and gives","Fragments":["one"]},{"Key":"gives one","Fragments":["a"]},{"Key":"one a","Fragments":["feeling","single"]},{"Key":"a feeling","Fragments":["of","it"]},{"Key":"feeling of","Fragments":["\"surprise\""]},{"Key":"of \"surprise\"","Fragments":["which"]},{"Key":"\"surprise\" which","Fragments":["ought"]},{"Key":"which ought","Fragments":["to"]},{"Key":"ought to","Fragments":["be"]},{"Key":"of `add_seconds_to/2`","Fragments":["and"]},{"Key":"`add_seconds_to/2` and","Fragments":["I"]},{"Key":"I agree","Fragments":["with","with","with","with","that","the","with","with","with","that","it's","RE:"]},{"Key":"agree with","Fragments":["the","what's","@laverne,","you","all","both","@alexis,","your"]},{"Key":"the comment","Fragments":["that","about","at","but"]},{"Key":"comment that","Fragments":["the"]},{"Key":"regular structure","Fragments":["helps"]},{"Key":"structure helps","Fragments":["make"]},{"Key":"it easy","Fragments":["to"]},{"Key":"easy to","Fragments":["check.","do","get","understand","comprehend."]},{"Key":"to check.","Fragments":["I"]},{"Key":"check. I","Fragments":["wonder"]},{"Key":"if it's","Fragments":["possible","not"]},{"Key":"it's possible","Fragments":["to","that","to"]},{"Key":"possible to","Fragments":["abstract","cut","write"]},{"Key":"to abstract","Fragments":["out"]},{"Key":"abstract out","Fragments":["the"]},{"Key":"out the","Fragments":["\"next","left?","following","other","rest","syntax","grouping","`m:f`","guards","result","same.","`0","binary"]},{"Key":"the \"next","Fragments":["day"]},{"Key":"\"next day","Fragments":["of"]},{"Key":"day of","Fragments":["month\""]},{"Key":"of month\"","Fragments":["aspect,"]},{"Key":"month\" aspect,","Fragments":["though,"]},{"Key":"aspect, though,","Fragments":["so"]},{"Key":"though, so","Fragments":["there's","I'll"]},{"Key":"so there's","Fragments":["less","no","no"]},{"Key":"there's less","Fragments":["for"]},{"Key":"less for","Fragments":["the"]},{"Key":"the eye","Fragments":["to"]},{"Key":"eye to","Fragments":["wander"]},{"Key":"to wander","Fragments":["over."]},{"Key":" Something","Fragments":["like"]},{"Key":" next_date({Year,","Fragments":["2,","Month,"]},{"Key":"next_date({Year, 2,","Fragments":["28})"]},{"Key":"2, 28})","Fragments":["-\u003e"]},{"Key":" erlang:insert_element(1,","Fragments":["feb_29th(calendar:is_leap_year(Year)),"]},{"Key":"erlang:insert_element(1, feb_29th(calendar:is_leap_year(Year)),","Fragments":["Year);"]},{"Key":"next_date({Year, Month,","Fragments":["Day})"]},{"Key":"Month, Day})","Fragments":["-\u003e"]},{"Key":"Day}) -\u003e","Fragments":["{Year,"]},{"Key":"-\u003e {Year,","Fragments":["Month,"]},{"Key":"{Year, Month,","Fragments":["Day+1}."]},{"Key":"% add_seconds_to","Fragments":["guard"]},{"Key":"add_seconds_to guard","Fragments":["clause"]},{"Key":"guard clause","Fragments":["before","and","on"]},{"Key":"clause before","Fragments":["this"]},{"Key":" add_seconds_to(Date,","Fragments":["S)"]},{"Key":"add_seconds_to(Date, S)","Fragments":["-\u003e"]},{"Key":"S) -\u003e","Fragments":["add_seconds_to(next_date(Date),"]},{"Key":"-\u003e add_seconds_to(next_date(Date),","Fragments":["S"]},{"Key":"add_seconds_to(next_date(Date), S","Fragments":["-"]},{"Key":"S -","Fragments":["?SECONDS_IN_DAY)."]},{"Key":"also really","Fragments":["like"]},{"Key":"you reduce","Fragments":["the"]},{"Key":"the problem","Fragments":["to","trivial.","associated","at","immediately.","is","statement","(e.g.,","statement.","definition.","using","statement.","description:","to","statement?","is"]},{"Key":"problem to","Fragments":["working","code"]},{"Key":"to working","Fragments":["in"]},{"Key":"working in","Fragments":["days"]},{"Key":"in days","Fragments":["early"]},{"Key":"days early","Fragments":["on."]},{"Key":" Giving","Fragments":["this"]},{"Key":"Giving this","Fragments":["the"]},{"Key":"this the","Fragments":["thumbs"]},{"Key":"the thumbs","Fragments":["up"]},{"Key":"thumbs up","Fragments":["even","since"]},{"Key":"up even","Fragments":["if"]},{"Key":"have some","Fragments":["qualms"]},{"Key":"some qualms","Fragments":["about"]},{"Key":"qualms about","Fragments":["using"]},{"Key":"about using","Fragments":["C","pattern-matching","a","the"]},{"Key":"using C","Fragments":["in"]},{"Key":"C in","Fragments":["a"]},{"Key":"a comment","Fragments":["to","to"]},{"Key":"comment to","Fragments":["document","let"]},{"Key":"to document","Fragments":["a"]},{"Key":"document a","Fragments":["map!"]},{"Key":"a map!","Fragments":[";-)"]},{"Key":" C","Fragments":["will"]},{"Key":"C will","Fragments":["always"]},{"Key":"will always","Fragments":["be","return","be"]},{"Key":"always be","Fragments":["my","divisible"]},{"Key":"be my","Fragments":["first"]},{"Key":"first love.","Fragments":[":-)"]},{"Key":" Lines","Fragments":["23-28"]},{"Key":"Lines 23-28","Fragments":["--"]},{"Key":"23-28 --","Fragments":["why"]},{"Key":"-- why","Fragments":["not","not"]},{"Key":"It's not","Fragments":["clear","that","necessary","clear"]},{"Key":"not clear","Fragments":["to","to"]},{"Key":"clear to","Fragments":["me","me"]},{"Key":"to me","Fragments":["that","like","that","either.","if","that","is","yet.","is"]},{"Key":"me that","Fragments":["it's","my","this"]},{"Key":"that it's","Fragments":["worth","an","unlikely","very","a","less"]},{"Key":"it's worth","Fragments":["generating","pointing"]},{"Key":"worth generating","Fragments":["all"]},{"Key":"generating all","Fragments":["the"]},{"Key":"the slices","Fragments":["in"]},{"Key":"slices in","Fragments":["advance"]},{"Key":"in advance","Fragments":["before"]},{"Key":"advance before","Fragments":["working"]},{"Key":"before working","Fragments":["on"]},{"Key":"on them,","Fragments":["but"]},{"Key":"them, but","Fragments":["I"]},{"Key":"the tokenization","Fragments":["by"]},{"Key":"tokenization by","Fragments":["0"]},{"Key":"by 0","Fragments":["trick."]},{"Key":"0 trick.","Fragments":["That's"]},{"Key":"trick. That's","Fragments":["very"]},{"Key":"That's very","Fragments":["clever."]},{"Key":" Keep","Fragments":["in","your"]},{"Key":"Keep in","Fragments":["mind"]},{"Key":"in mind","Fragments":["that","`discard/2`,"]},{"Key":"mind that","Fragments":["`length/1`"]},{"Key":"that `length/1`","Fragments":["is"]},{"Key":"`length/1` is","Fragments":["O(n),"]},{"Key":"is O(n),","Fragments":["so"]},{"Key":"O(n), so","Fragments":["consider"]},{"Key":"so consider","Fragments":["an"]},{"Key":"consider an","Fragments":["alternative"]},{"Key":"an alternative","Fragments":["to","approach,"]},{"Key":"alternative to","Fragments":["calculating","the"]},{"Key":"to calculating","Fragments":["it"]},{"Key":"calculating it","Fragments":["over"]},{"Key":"it over","Fragments":["and"]},{"Key":"over and","Fragments":["over","over.","over"]},{"Key":"and over","Fragments":["again.","is"]},{"Key":"the defined","Fragments":["proplists"]},{"Key":"defined proplists","Fragments":["although"]},{"Key":"proplists although","Fragments":["I"]},{"Key":"although I","Fragments":["tend","wonder","still","suppose","can't"]},{"Key":"I tend","Fragments":["to","to","to"]},{"Key":"tend to","Fragments":["feel","avoid","avoid","forget","overthink","do"]},{"Key":"to feel","Fragments":["that,"]},{"Key":"feel that,","Fragments":["for"]},{"Key":"that, for","Fragments":["small"]},{"Key":"for small","Fragments":["sets","cases"]},{"Key":"small sets","Fragments":["of"]},{"Key":"sets of","Fragments":["symbols,"]},{"Key":"of symbols,","Fragments":["function"]},{"Key":"symbols, function","Fragments":["pattern"]},{"Key":"function pattern","Fragments":["matching","matching."]},{"Key":"matching is","Fragments":["a","more","good"]},{"Key":"more natural","Fragments":["approach","way"]},{"Key":"natural approach","Fragments":["in"]},{"Key":"Erlang (and","Fragments":["lookups"]},{"Key":"(and lookups","Fragments":["have"]},{"Key":"lookups have","Fragments":["less"]},{"Key":"have less","Fragments":["boilerplate).","issues"]},{"Key":"less boilerplate).","Fragments":["Consider"]},{"Key":"boilerplate). Consider","Fragments":["also"]},{"Key":"Consider also","Fragments":["`proplists:get_value/2`"]},{"Key":"also `proplists:get_value/2`","Fragments":["instead"]},{"Key":"`proplists:get_value/2` instead","Fragments":["of"]},{"Key":"of `fifth`","Fragments":["is"]},{"Key":"`fifth` is","Fragments":["pretty"]},{"Key":"pretty clever.","Fragments":["I"]},{"Key":"clever. I","Fragments":["find"]},{"Key":"find the","Fragments":["logic","function","tuple","parentheses","solution","logic","name"]},{"Key":"logic a","Fragments":["little"]},{"Key":"little complicated,","Fragments":["especially"]},{"Key":"complicated, especially","Fragments":["introducing"]},{"Key":"especially introducing","Fragments":["this"]},{"Key":"introducing this","Fragments":["new"]},{"Key":"this new","Fragments":["term"]},{"Key":"new term","Fragments":["and"]},{"Key":"term and","Fragments":["the"]},{"Key":"the idea","Fragments":["of","of","of","of","that","of"]},{"Key":"idea of","Fragments":["\"descriptors\"","a","defining","using","constructing"]},{"Key":"of \"descriptors\"","Fragments":["which"]},{"Key":"\"descriptors\" which","Fragments":["are"]},{"Key":"which are","Fragments":["really","not","projection","predicated","really"]},{"Key":"are really","Fragments":["a","elegant.","updated"]},{"Key":"really a","Fragments":["week"]},{"Key":"a week","Fragments":["index."]},{"Key":"week index.","Fragments":["Now"]},{"Key":"index. Now","Fragments":["that"]},{"Key":"Now that","Fragments":["I","you"]},{"Key":"I look","Fragments":["at"]},{"Key":"at it,","Fragments":["is"]},{"Key":"it, is","Fragments":["there","not"]},{"Key":"is there","Fragments":["any","documentation"]},{"Key":"there any","Fragments":["way","good","drawback","reason","advantages"]},{"Key":"any way","Fragments":["to"]},{"Key":"to handle","Fragments":["the","this.","input","DNA"]},{"Key":"the `first`","Fragments":["case"]},{"Key":"`first` case","Fragments":["in"]},{"Key":"case in","Fragments":["your","`to_rna`?"]},{"Key":"in your","Fragments":["final","code,","sequence?","sequence?","specs.","gist."]},{"Key":"your final","Fragments":["`calculate/4`"]},{"Key":"final `calculate/4`","Fragments":["case?"]},{"Key":"`calculate/4` case?","Fragments":["Special-casing"]},{"Key":"case? Special-casing","Fragments":["`last`"]},{"Key":"Special-casing `last`","Fragments":["and"]},{"Key":"`last` and","Fragments":["`teenth`"]},{"Key":"and `teenth`","Fragments":["makes"]},{"Key":"`teenth` makes","Fragments":["sense,"]},{"Key":"makes sense,","Fragments":["but","given"]},{"Key":"sense, but","Fragments":["I"]},{"Key":"extra handling","Fragments":["of"]},{"Key":"handling of","Fragments":["`first`"]},{"Key":"of `first`","Fragments":["obscures"]},{"Key":"`first` obscures","Fragments":["things"]},{"Key":"obscures things","Fragments":["a"]},{"Key":"things a","Fragments":["bit."]},{"Key":"one is","Fragments":["a","that","more","unlikely","easy"]},{"Key":"a pain","Fragments":["in"]},{"Key":"pain in","Fragments":["the"]},{"Key":"the ass","Fragments":["because"]},{"Key":"ass because","Fragments":["of"]},{"Key":"because of","Fragments":["all","its","the"]},{"Key":"of all","Fragments":["the","non-zero","parenthesis","the","three?"]},{"Key":"the index-from-1/index-from-0","Fragments":["hassles."]},{"Key":"index-from-1/index-from-0 hassles.","Fragments":["I'm"]},{"Key":"hassles. I'm","Fragments":["not"]},{"Key":"sure if","Fragments":["I","this","the","it","it"]},{"Key":"any good","Fragments":["suggestions,","examples"]},{"Key":"good suggestions,","Fragments":["except"]},{"Key":"suggestions, except","Fragments":["that"]},{"Key":"except that","Fragments":["it"]},{"Key":"it feels","Fragments":["to"]},{"Key":"feels to","Fragments":["me"]},{"Key":"me like","Fragments":["there's"]},{"Key":"like there's","Fragments":["probably"]},{"Key":"there's probably","Fragments":["an"]},{"Key":"probably an","Fragments":["even"]},{"Key":"even simpler,","Fragments":["unifying"]},{"Key":"simpler, unifying","Fragments":["concept"]},{"Key":"unifying concept","Fragments":["for"]},{"Key":"concept for","Fragments":["this"]},{"Key":"this that","Fragments":["I've","could"]},{"Key":"that I've","Fragments":["missed.","got"]},{"Key":"I've missed.","Fragments":["I'm"]},{"Key":"missed. I'm","Fragments":["all"]},{"Key":"I'm all","Fragments":["ears"]},{"Key":"all ears","Fragments":["for"]},{"Key":"ears for","Fragments":["suggestions!"]},{"Key":"like your","Fragments":["choice","`ageOn/2`","but","solution","inlined","proposed","check"]},{"Key":"your choice","Fragments":["of"]},{"Key":"choice of","Fragments":["names"]},{"Key":"of names","Fragments":["better"]},{"Key":"names better","Fragments":["than"]},{"Key":" Wouldn't","Fragments":["it"]},{"Key":"Wouldn't it","Fragments":["be"]},{"Key":"be cleaner","Fragments":["if"]},{"Key":"cleaner if","Fragments":["`OrbitalPeriod`"]},{"Key":"if `OrbitalPeriod`","Fragments":["in"]},{"Key":"`OrbitalPeriod` in","Fragments":["`ageInOrbitalPeriod()`"]},{"Key":"in `ageInOrbitalPeriod()`","Fragments":["was"]},{"Key":"`ageInOrbitalPeriod()` was","Fragments":["in"]},{"Key":"was in","Fragments":["seconds"]},{"Key":"in seconds","Fragments":["and"]},{"Key":"seconds and","Fragments":["not","the"]},{"Key":"in percentage","Fragments":["orbital"]},{"Key":"percentage orbital","Fragments":["time"]},{"Key":"orbital time","Fragments":["earth?"]},{"Key":"don't like","Fragments":["seeing","the","it","using","this","this","about","my","this"]},{"Key":"like seeing","Fragments":["a"]},{"Key":"seeing a","Fragments":["`case"]},{"Key":"`case of`","Fragments":["on"]},{"Key":"of` on","Fragments":["a"]},{"Key":"a \"raw","Fragments":["input"]},{"Key":"\"raw input","Fragments":["variable\""]},{"Key":"input variable\"","Fragments":["as"]},{"Key":"variable\" as","Fragments":["the"]},{"Key":"the body","Fragments":["of"]},{"Key":"body of","Fragments":["a"]},{"Key":"a function.","Fragments":["To","I"]},{"Key":"function. To","Fragments":["me,","do"]},{"Key":"To me,","Fragments":["multiple"]},{"Key":"me, multiple","Fragments":["function"]},{"Key":"clauses make","Fragments":["more"]},{"Key":"make more","Fragments":["sense."]},{"Key":"more sense.","Fragments":["If"]},{"Key":"sense. If","Fragments":["you"]},{"Key":"the `case","Fragments":["of`,"]},{"Key":"`case of`,","Fragments":["remember"]},{"Key":"of`, remember","Fragments":["that"]},{"Key":"remember that","Fragments":["it's"]},{"Key":"it's an","Fragments":["expression."]},{"Key":"an expression.","Fragments":["You"]},{"Key":"expression. You","Fragments":["can"]},{"Key":"can refactor","Fragments":["it"]},{"Key":"refactor it","Fragments":["so","to"]},{"Key":"it so","Fragments":["you"]},{"Key":"so you","Fragments":["only","need","are","can","will","could","don't","don't","do","have"]},{"Key":"you only","Fragments":["have"]},{"Key":"make one","Fragments":["call"]},{"Key":"one call","Fragments":["to"]},{"Key":"call to","Fragments":["`ageInOrbitalPeriod()`.","`encode`","accumulate(Function,","accumulate.","`extract_alphanumeric/1`","`map`,"]},{"Key":"function name","Fragments":["`ageInOrbitalPeriod`.","with"]},{"Key":"name `ageInOrbitalPeriod`.","Fragments":["It"]},{"Key":"`ageInOrbitalPeriod`. It","Fragments":["sounds"]},{"Key":"It sounds","Fragments":["like"]},{"Key":"sounds like","Fragments":["it","the","a","it"]},{"Key":"it calculates","Fragments":["something"]},{"Key":"calculates something","Fragments":["else."]},{"Key":" All","Fragments":["those"]},{"Key":"All those","Fragments":["magic"]},{"Key":"those magic","Fragments":["numbers"]},{"Key":"magic numbers","Fragments":["make","(`[3,","(number"]},{"Key":"numbers make","Fragments":["me"]},{"Key":"make me","Fragments":["sad."]},{"Key":"As mentioned","Fragments":["in"]},{"Key":"mentioned in","Fragments":["another","a"]},{"Key":"in another","Fragments":["nitpick,"]},{"Key":"another nitpick,","Fragments":["I"]},{"Key":"nitpick, I","Fragments":["believe","agree","personally"]},{"Key":"believe in","Fragments":["Erlang,"]},{"Key":"snake_case of","Fragments":["function"]},{"Key":"of function","Fragments":["names","heads","heads"]},{"Key":"names if","Fragments":["preferred."]},{"Key":"the compiler","Fragments":["optimizes","recognizes"]},{"Key":"compiler optimizes","Fragments":["the"]},{"Key":"optimizes the","Fragments":["guard"]},{"Key":"guard sections,","Fragments":["but"]},{"Key":"sections, but","Fragments":["you"]},{"Key":"can do","Fragments":["this","`cons($F,","several"]},{"Key":"do this","Fragments":["with","in","in","in","in","in","in"]},{"Key":"with fewer","Fragments":["guard"]},{"Key":"fewer guard","Fragments":["conditions"]},{"Key":"guard conditions","Fragments":["for"]},{"Key":"conditions for","Fragments":["sure."]},{"Key":"for sure.","Fragments":["Also,"]},{"Key":"sure. Also,","Fragments":["the"]},{"Key":"Also, the","Fragments":["last","`case`"]},{"Key":"last two","Fragments":["cases"]},{"Key":"two cases","Fragments":["can"]},{"Key":"cases can","Fragments":["be"]},{"Key":"be collapsed","Fragments":["into"]},{"Key":"collapsed into","Fragments":["the"]},{"Key":" @estella","Fragments":["I"]},{"Key":"@estella I","Fragments":["think"]},{"Key":"the `exercism`","Fragments":["app"]},{"Key":"`exercism` app","Fragments":["allows"]},{"Key":"app allows","Fragments":["uploading"]},{"Key":"allows uploading","Fragments":["the"]},{"Key":"uploading the","Fragments":["test"]},{"Key":"test also.","Fragments":["Consider"]},{"Key":"also. Consider","Fragments":["adding"]},{"Key":"Consider adding","Fragments":["better","type","guards","type","a","guards","guards","a","a"]},{"Key":"adding better","Fragments":["specs"]},{"Key":"better specs","Fragments":["and"]},{"Key":"specs and","Fragments":["guards.","specs","not","will","guards"]},{"Key":"really dislike","Fragments":["the","is","non"]},{"Key":"dislike the","Fragments":["hoops"]},{"Key":"the hoops","Fragments":["that"]},{"Key":"hoops that","Fragments":["I"]},{"Key":"jump through","Fragments":["in"]},{"Key":"through in","Fragments":["order"]},{"Key":"in order","Fragments":["to","to"]},{"Key":"order to","Fragments":["get","fail"]},{"Key":"the nucleotide","Fragments":["counts"]},{"Key":"nucleotide counts","Fragments":["in"]},{"Key":"counts in","Fragments":["the","one"]},{"Key":"the arbitrary","Fragments":["order"]},{"Key":"arbitrary order","Fragments":["expected"]},{"Key":"order expected","Fragments":["by"]},{"Key":"expected by","Fragments":["the"]},{"Key":"tests, but","Fragments":["I","maps"]},{"Key":"see no","Fragments":["way"]},{"Key":"no way","Fragments":["around","to"]},{"Key":"way around","Fragments":["it.","this"]},{"Key":"around it.","Fragments":[":-/"]},{"Key":" @ollie","Fragments":["Add"]},{"Key":"@ollie Add","Fragments":["guards"]},{"Key":"Add guards","Fragments":["(fail","and","on"]},{"Key":"guards (fail","Fragments":["fast)"]},{"Key":"(fail fast)","Fragments":["and"]},{"Key":"fast) and","Fragments":["specs"]},{"Key":" @emilio,","Fragments":["thank"]},{"Key":"@emilio, thank","Fragments":["you"]},{"Key":"the feedback.","Fragments":["Allow"]},{"Key":"feedback. Allow","Fragments":["me"]},{"Key":"Allow me","Fragments":["to"]},{"Key":"to ask","Fragments":["an"]},{"Key":"ask an","Fragments":["annoying"]},{"Key":"an annoying","Fragments":["question"]},{"Key":"annoying question","Fragments":["I"]},{"Key":"question I","Fragments":["can't"]},{"Key":"can't seem","Fragments":["to"]},{"Key":"a satisfactory","Fragments":["answer"]},{"Key":"satisfactory answer","Fragments":["on."]},{"Key":"answer on.","Fragments":["Guards"]},{"Key":"on. Guards","Fragments":["or"]},{"Key":"Guards or","Fragments":["no"]},{"Key":"or no","Fragments":["guards,"]},{"Key":"no guards,","Fragments":["the"]},{"Key":"guards, the","Fragments":["end"]},{"Key":"end result","Fragments":["is"]},{"Key":"result is","Fragments":["an"]},{"Key":"an exception.","Fragments":["How"]},{"Key":"exception. How","Fragments":["is"]},{"Key":"How is","Fragments":["adding"]},{"Key":"is adding","Fragments":["guards"]},{"Key":"adding guards","Fragments":["better?","and","to","and","and"]},{"Key":"I'll try","Fragments":["to","to","to"]},{"Key":"to explain","Fragments":["in","how"]},{"Key":"explain in","Fragments":["the"]},{"Key":"the simplest","Fragments":["way"]},{"Key":"simplest way","Fragments":["possible."]},{"Key":" Guards","Fragments":["are","are","are"]},{"Key":"Guards are","Fragments":["a","not","like"]},{"Key":"are a","Fragments":["type","few","couple"]},{"Key":"a type","Fragments":["of","and","of","signature","spec","because"]},{"Key":"of contract","Fragments":["between"]},{"Key":"contract between","Fragments":["the"]},{"Key":"between the","Fragments":["caller","README","2"]},{"Key":"caller and","Fragments":["the","it's"]},{"Key":"the callee.","Fragments":["Contracts"]},{"Key":"callee. Contracts","Fragments":["are"]},{"Key":"Contracts are","Fragments":["useful"]},{"Key":"are useful","Fragments":["for","for"]},{"Key":"useful for","Fragments":["**assigning","two"]},{"Key":"for **assigning","Fragments":["blame**."]},{"Key":"**assigning blame**.","Fragments":["So"]},{"Key":"blame**. So","Fragments":["when"]},{"Key":"So when","Fragments":["you","you"]},{"Key":"you receive","Fragments":["a"]},{"Key":"receive a","Fragments":["value"]},{"Key":"a value","Fragments":["from"]},{"Key":"value from","Fragments":["a"]},{"Key":"a caller","Fragments":["and"]},{"Key":"and it's","Fragments":["not"]},{"Key":"it's not","Fragments":["what","taken","my","coming","tail"]},{"Key":"not what","Fragments":["you","I","the","you"]},{"Key":"you expect","Fragments":["who","type"]},{"Key":"expect who","Fragments":["should"]},{"Key":"who should","Fragments":["you"]},{"Key":"should you","Fragments":["assign"]},{"Key":"you assign","Fragments":["the"]},{"Key":"assign the","Fragments":["blame"]},{"Key":"the blame","Fragments":["to?","(first"]},{"Key":"blame to?","Fragments":["The"]},{"Key":"to? The","Fragments":["answer"]},{"Key":"The answer","Fragments":["is","is"]},{"Key":"answer is","Fragments":["to","the"]},{"Key":" Here","Fragments":["is","is","is","are"]},{"Key":"Here is","Fragments":["why.","an","an"]},{"Key":"is why.","Fragments":["If"]},{"Key":"why. If","Fragments":["I"]},{"Key":"don't put","Fragments":["a"]},{"Key":"put a","Fragments":["guard","spec","spec"]},{"Key":"guard what","Fragments":["will"]},{"Key":"what will","Fragments":["happen"]},{"Key":"will happen","Fragments":["is"]},{"Key":"happen is","Fragments":["that"]},{"Key":"that data","Fragments":["will"]},{"Key":"data will","Fragments":["be"]},{"Key":"be allowed","Fragments":["to"]},{"Key":"allowed to","Fragments":["propagate","write"]},{"Key":"to propagate","Fragments":["into","spec"]},{"Key":"propagate into","Fragments":["lower"]},{"Key":"into lower","Fragments":["level"]},{"Key":"lower level","Fragments":["functions"]},{"Key":"level functions","Fragments":["and"]},{"Key":"functions and","Fragments":["may","recur"]},{"Key":"and may","Fragments":["crash"]},{"Key":"may crash","Fragments":["somewhere"]},{"Key":"crash somewhere","Fragments":["else"]},{"Key":"somewhere else","Fragments":["(or"]},{"Key":"else (or","Fragments":["not"]},{"Key":"(or not","Fragments":["crash"]},{"Key":"not crash","Fragments":["which"]},{"Key":"crash which","Fragments":["is"]},{"Key":"is worse).","Fragments":["If"]},{"Key":"worse). If","Fragments":["I"]},{"Key":"I am","Fragments":["then","not","asking","so","siding","aware","passing","right","questioning","a","really","not","indeed","quite","getting","also","more","learning","not","running","pretty"]},{"Key":"am then","Fragments":["looking"]},{"Key":"then looking","Fragments":["at"]},{"Key":"the stack","Fragments":["trace","trace)","so","in","problems"]},{"Key":"stack trace","Fragments":["I","the"]},{"Key":"trace I","Fragments":["will"]},{"Key":"will see","Fragments":["that"]},{"Key":"see that","Fragments":["the","the","they","it","I","it"]},{"Key":"blame (first","Fragments":["item"]},{"Key":"(first item","Fragments":["in"]},{"Key":"stack trace)","Fragments":["is"]},{"Key":"trace) is","Fragments":["assigned"]},{"Key":"is assigned","Fragments":["to"]},{"Key":"assigned to","Fragments":["my"]},{"Key":"code instead","Fragments":["of"]},{"Key":"the callers","Fragments":["(which"]},{"Key":"callers (which","Fragments":["is"]},{"Key":"(which is","Fragments":["responsible","why","what","what"]},{"Key":"is responsible","Fragments":["for"]},{"Key":"responsible for","Fragments":["the","the"]},{"Key":"the failure).","Fragments":["This"]},{"Key":"failure). This","Fragments":["means"]},{"Key":"This means","Fragments":["I","that","invalid"]},{"Key":"means I","Fragments":["will"]},{"Key":"will have","Fragments":["to","to"]},{"Key":"work backwards","Fragments":["from"]},{"Key":"backwards from","Fragments":["the"]},{"Key":"the point","Fragments":["where"]},{"Key":"point where","Fragments":["it","I"]},{"Key":"it failed","Fragments":["before"]},{"Key":"failed before","Fragments":["I"]},{"Key":"before I","Fragments":["find"]},{"Key":"function responsible","Fragments":["for"]},{"Key":"the failure.","Fragments":["This"]},{"Key":"failure. This","Fragments":["is"]},{"Key":"is time","Fragments":["consuming"]},{"Key":"time consuming","Fragments":["and"]},{"Key":"consuming and","Fragments":["dangerous"]},{"Key":"and dangerous","Fragments":["for"]},{"Key":"dangerous for","Fragments":["system"]},{"Key":"for system","Fragments":["stability."]},{"Key":" @mckenna","Fragments":["You"]},{"Key":"@mckenna You","Fragments":["don't"]},{"Key":"You don't","Fragments":["need","need"]},{"Key":"don't need","Fragments":["to","to","the","to","to","to","it","to","to","it","them.","to","them."]},{"Key":"need to","Fragments":["validate","guard","update","use","look","create","give","do","start","wrap","do","do","check","include","include","braincompile","translate?","translate?","look","think","give","get","separate","track","be"]},{"Key":"to validate","Fragments":["everything"]},{"Key":"validate everything","Fragments":["just"]},{"Key":"everything just","Fragments":["enough"]},{"Key":"just enough","Fragments":["to"]},{"Key":"prevent bad","Fragments":["input"]},{"Key":"input when","Fragments":["it's"]},{"Key":"when it's","Fragments":["easy","so"]},{"Key":"it's easy","Fragments":["to"]},{"Key":"do so","Fragments":["(pattern"]},{"Key":"so (pattern","Fragments":["matching"]},{"Key":"(pattern matching","Fragments":["can"]},{"Key":"matching can","Fragments":["really"]},{"Key":"can really","Fragments":["help)."]},{"Key":"really help).","Fragments":["This"]},{"Key":"help). This","Fragments":["is"]},{"Key":"is part","Fragments":["of"]},{"Key":"Erlang fail","Fragments":["fast"]},{"Key":"fail fast","Fragments":["philosophy.","so","by","philosophy.","guards"]},{"Key":"fast philosophy.","Fragments":["You","If"]},{"Key":"philosophy. You","Fragments":["almost"]},{"Key":"You almost","Fragments":["always"]},{"Key":"almost always","Fragments":["want","a","do","struggle","do"]},{"Key":"always want","Fragments":["to"]},{"Key":"to protect","Fragments":["exported","against"]},{"Key":"protect exported","Fragments":["functions."]},{"Key":"exported functions.","Fragments":["For"]},{"Key":"functions. For","Fragments":["internal"]},{"Key":"For internal","Fragments":["functions"]},{"Key":"internal functions","Fragments":["you"]},{"Key":"functions you","Fragments":["don't"]},{"Key":"to guard","Fragments":["if","only","exported"]},{"Key":"guard if","Fragments":["the"]},{"Key":"if the","Fragments":["values","platform","logic","string","nucleotides","caller","year","incoming","two","goal","code","string","resulting","list"]},{"Key":"the values","Fragments":["are"]},{"Key":"are already","Fragments":["guarded"]},{"Key":"already guarded","Fragments":["by"]},{"Key":"guarded by","Fragments":["a"]},{"Key":"by a","Fragments":["higher"]},{"Key":"higher level","Fragments":["function."]},{"Key":"level function.","Fragments":["But"]},{"Key":"function. But","Fragments":["like"]},{"Key":"But like","Fragments":["I"]},{"Key":"said the","Fragments":["goal","we"]},{"Key":"the goal","Fragments":["is","includes"]},{"Key":"goal is","Fragments":["to"]},{"Key":"to fail","Fragments":["fast","fast","as","on","as","when"]},{"Key":"fast so","Fragments":["it's"]},{"Key":"so it's","Fragments":["your","a"]},{"Key":"it's your","Fragments":["job"]},{"Key":"your job","Fragments":["to"]},{"Key":"job to","Fragments":["decide"]},{"Key":"to decide","Fragments":["what"]},{"Key":"decide what","Fragments":["the"]},{"Key":"the tradeoff","Fragments":["between"]},{"Key":"tradeoff between","Fragments":["simplicity"]},{"Key":"between simplicity","Fragments":["and"]},{"Key":"simplicity and","Fragments":["failure"]},{"Key":"and failure","Fragments":["handling"]},{"Key":"failure handling","Fragments":["will"]},{"Key":"handling will","Fragments":["be."]},{"Key":"an example.","Fragments":["Lets"]},{"Key":"example. Lets","Fragments":["say"]},{"Key":"Lets say","Fragments":["I"]},{"Key":"say I","Fragments":["expect"]},{"Key":"I expect","Fragments":["a"]},{"Key":"expect a","Fragments":["list"]},{"Key":"of values","Fragments":["which"]},{"Key":"values which","Fragments":["must","are"]},{"Key":"which must","Fragments":["be"]},{"Key":"be either","Fragments":["1,","`lists:split(3,"]},{"Key":"either 1,","Fragments":["2"]},{"Key":"1, 2","Fragments":["or"]},{"Key":"2 or","Fragments":["3."]},{"Key":"or 3.","Fragments":["I"]},{"Key":"3. I","Fragments":["may"]},{"Key":"I may","Fragments":["decide","not"]},{"Key":"may decide","Fragments":["to"]},{"Key":"decide to","Fragments":["guard"]},{"Key":"guard only","Fragments":["to","BIFs"]},{"Key":"input is","Fragments":["a","passed"]},{"Key":"list. Then","Fragments":["inside"]},{"Key":"Then inside","Fragments":["my","the"]},{"Key":"inside my","Fragments":["function"]},{"Key":"my function","Fragments":["where"]},{"Key":"function where","Fragments":["I"]},{"Key":"where I","Fragments":["perform","am","was","could"]},{"Key":"I perform","Fragments":["some"]},{"Key":"perform some","Fragments":["operation"]},{"Key":"some operation","Fragments":["on"]},{"Key":"operation on","Fragments":["the"]},{"Key":"list presumably","Fragments":["with"]},{"Key":"presumably with","Fragments":["either"]},{"Key":"with either","Fragments":["a"]},{"Key":"either a","Fragments":["list","`filtered`"]},{"Key":"comprehension or","Fragments":["a"]},{"Key":"or a","Fragments":["`lists:map/2`","list","single","list-comprehension.","string","fully","string?"]},{"Key":"a `lists:map/2`","Fragments":["I"]},{"Key":"`lists:map/2` I","Fragments":["opt"]},{"Key":"I opt","Fragments":["for"]},{"Key":"opt for","Fragments":["`lists:map/2`"]},{"Key":"for `lists:map/2`","Fragments":["because"]},{"Key":"`lists:map/2` because","Fragments":["it"]},{"Key":"will allow","Fragments":["me"]},{"Key":"allow me","Fragments":["to"]},{"Key":"fast by","Fragments":["just"]},{"Key":"by just","Fragments":["adding","putting"]},{"Key":"just adding","Fragments":["a"]},{"Key":"guard to","Fragments":["the"]},{"Key":"the function.","Fragments":["Now","This","To","Still","Maybe"]},{"Key":"function. Now","Fragments":["the"]},{"Key":"Now the","Fragments":["contract"]},{"Key":"the contract","Fragments":["is","on","(dna_sequence(),dna_sequence())","is","**serves","was"]},{"Key":"contract is","Fragments":["not","(dna_sequence(),[dna_nucleotide(),...])"]},{"Key":"not perfect","Fragments":["but"]},{"Key":"perfect but","Fragments":["it"]},{"Key":"it still","Fragments":["fails","doesn't"]},{"Key":"still fails","Fragments":["reasonably"]},{"Key":"fails reasonably","Fragments":["fast."]},{"Key":" 1\u003e","Fragments":["L","F","\"éé\"."]},{"Key":"1\u003e L","Fragments":["="]},{"Key":"L =","Fragments":["[1,2,3]."]},{"Key":" 2\u003e","Fragments":["L2","F(2)."]},{"Key":"2\u003e L2","Fragments":["="]},{"Key":"L2 =","Fragments":["[1,2,3,4]."]},{"Key":" 3\u003e","Fragments":["[X","F(a)."]},{"Key":"3\u003e [X","Fragments":["||"]},{"Key":"[X ||","Fragments":["X","X"]},{"Key":"\u003c- L,","Fragments":["(X"]},{"Key":"L, (X","Fragments":["\u003e="]},{"Key":"(X \u003e=","Fragments":["1)","1)"]},{"Key":"\u003e= 1)","Fragments":["and","and"]},{"Key":"1) and","Fragments":["(X","(X"]},{"Key":"and (X","Fragments":["=\u003c","=\u003c"]},{"Key":"(X =\u003c","Fragments":["3)].","3)]."]},{"Key":" 4\u003e","Fragments":["[X","F2"]},{"Key":"4\u003e [X","Fragments":["||"]},{"Key":"\u003c- L2,","Fragments":["(X"]},{"Key":"L2, (X","Fragments":["\u003e="]},{"Key":" 5\u003e","Fragments":["lists:map(fun(X)","F2(a)."]},{"Key":"5\u003e lists:map(fun(X)","Fragments":["when"]},{"Key":"lists:map(fun(X) when","Fragments":["X","X"]},{"Key":"when X","Fragments":["\u003e=","\u003e="]},{"Key":"X \u003e=","Fragments":["1,","1,","$0"]},{"Key":"\u003e= 1,","Fragments":["X","X"]},{"Key":"1, X","Fragments":["=\u003c","=\u003c"]},{"Key":"X =\u003c","Fragments":["3","3","$9"]},{"Key":"=\u003c 3","Fragments":["-\u003e","-\u003e"]},{"Key":"3 -\u003e","Fragments":["X","X"]},{"Key":"-\u003e X","Fragments":["end,","end,","\u003e=","*"]},{"Key":"X end,","Fragments":["L).","L2)."]},{"Key":" 6\u003e","Fragments":["lists:map(fun(X)"]},{"Key":"6\u003e lists:map(fun(X)","Fragments":["when"]},{"Key":" **","Fragments":["exception","exception","exception"]},{"Key":"** exception","Fragments":["error:","error:","error:"]},{"Key":"exception error:","Fragments":["no","no","an"]},{"Key":"error: no","Fragments":["function","function"]},{"Key":"no function","Fragments":["clause","clause"]},{"Key":"function clause","Fragments":["matching","matching","option","for","is","error","as","is","and","versus","and"]},{"Key":"That said","Fragments":["you"]},{"Key":"said you","Fragments":["should"]},{"Key":"should still","Fragments":["add"]},{"Key":"still add","Fragments":["specs"]},{"Key":"add specs","Fragments":["even"]},{"Key":"specs even","Fragments":["if","for"]},{"Key":"have guards","Fragments":["they","but"]},{"Key":"guards they","Fragments":["will"]},{"Key":"they will","Fragments":["uncover"]},{"Key":"will uncover","Fragments":["type"]},{"Key":"uncover type","Fragments":["errors"]},{"Key":"type errors","Fragments":["prior","in"]},{"Key":"errors prior","Fragments":["to"]},{"Key":"prior to","Fragments":["runtime","comparing"]},{"Key":"to runtime","Fragments":["which"]},{"Key":"runtime which","Fragments":["is"]},{"Key":"is beneficial.","Fragments":["Here"]},{"Key":"beneficial. Here","Fragments":["you"]},{"Key":"Here you","Fragments":["may"]},{"Key":"you may","Fragments":["want","want"]},{"Key":"may want","Fragments":["to","to"]},{"Key":"to put","Fragments":["more","it","your"]},{"Key":"put more","Fragments":["effort","code"]},{"Key":"more effort","Fragments":["to"]},{"Key":"effort to","Fragments":["fully"]},{"Key":"to fully","Fragments":["define"]},{"Key":"fully define","Fragments":["the"]},{"Key":"define the","Fragments":["types","`allergies()`"]},{"Key":"and input","Fragments":["if"]},{"Key":"input if","Fragments":["you"]},{"Key":"to catch","Fragments":["as"]},{"Key":"catch as","Fragments":["many"]},{"Key":"as many","Fragments":["errors"]},{"Key":"many errors","Fragments":["as"]},{"Key":"errors as","Fragments":["possible."]},{"Key":"as possible.","Fragments":["Again","This","I"]},{"Key":"possible. Again","Fragments":["you"]},{"Key":"Again you","Fragments":["can"]},{"Key":"make compromises","Fragments":["here"]},{"Key":"compromises here","Fragments":["but"]},{"Key":"here but","Fragments":["the"]},{"Key":"the less","Fragments":["compromises"]},{"Key":"less compromises","Fragments":["you"]},{"Key":"compromises you","Fragments":["make"]},{"Key":"you make","Fragments":["in","them","a","the"]},{"Key":"make in","Fragments":["specs"]},{"Key":"in specs","Fragments":["the"]},{"Key":"specs the","Fragments":["more"]},{"Key":"the more","Fragments":["bugs","compact"]},{"Key":"more bugs","Fragments":["you"]},{"Key":"bugs you","Fragments":["find."]},{"Key":"you find.","Fragments":["You"]},{"Key":"find. You","Fragments":["should"]},{"Key":"should however","Fragments":["at"]},{"Key":"however at","Fragments":["least"]},{"Key":"least always","Fragments":["have"]},{"Key":"always have","Fragments":["a"]},{"Key":"have a","Fragments":["spec","guarding","look","concept","beginning","function","full","look","good","case","lot","conversation","conversation","conversation","problem","knack","feeling","nicer","conversation","tailrecursive","spec","look","string,","conversation","tendency","slight","conversation","conversation","flag","conversation","conversation","conversation"]},{"Key":"spec for","Fragments":["exported","`to_rna`.","dialyzer.","`map_nucleotide`","`accumulate/2`,","`isAllergicTo`,","`allergies`?"]},{"Key":"for exported","Fragments":["functions","functions,","functions."]},{"Key":"exported functions","Fragments":["since","(fail","well","(some","at"]},{"Key":"functions since","Fragments":["they"]},{"Key":"since they","Fragments":["additionally","don't","support"]},{"Key":"they additionally","Fragments":["serve"]},{"Key":"additionally serve","Fragments":["as"]},{"Key":"serve as","Fragments":["documentation","nice"]},{"Key":"as documentation","Fragments":["to"]},{"Key":"documentation to","Fragments":["the"]},{"Key":"the users","Fragments":["of"]},{"Key":"users of","Fragments":["your"]},{"Key":" @ervin","Fragments":["It"]},{"Key":"@ervin It","Fragments":["works"]},{"Key":"It works","Fragments":["just","for","but"]},{"Key":"works just","Fragments":["fine"]},{"Key":"just fine","Fragments":["when"]},{"Key":"fine when","Fragments":["refactoring"]},{"Key":"when refactoring","Fragments":["or"]},{"Key":"refactoring or","Fragments":["adding"]},{"Key":"or adding","Fragments":["code."]},{"Key":"adding code.","Fragments":["Guards"]},{"Key":"code. Guards","Fragments":["and"]},{"Key":"Guards and","Fragments":["specs"]},{"Key":"specs are","Fragments":["part","used"]},{"Key":"are part","Fragments":["of"]},{"Key":"your code","Fragments":["so","by","if","doesn't","and","and","and","to","and","and","--","and","and","and","and","and"]},{"Key":"you need","Fragments":["to","to","to","to","to","to","in","to","the"]},{"Key":"to update","Fragments":["them","all"]},{"Key":"update them","Fragments":["when"]},{"Key":"them when","Fragments":["you"]},{"Key":"you change","Fragments":["the","your"]},{"Key":"change the","Fragments":["implementation."]},{"Key":"the implementation.","Fragments":["In"]},{"Key":"implementation. In","Fragments":["practice"]},{"Key":"In practice","Fragments":["I"]},{"Key":"practice I","Fragments":["didn't"]},{"Key":"didn't find","Fragments":["this","those"]},{"Key":"find this","Fragments":["has","more"]},{"Key":"this has","Fragments":["been"]},{"Key":"been an","Fragments":["issue."]},{"Key":"an issue.","Fragments":["For"]},{"Key":"issue. For","Fragments":["specs"]},{"Key":"For specs","Fragments":["it's"]},{"Key":"specs it's","Fragments":["a"]},{"Key":"good idea","Fragments":["to","to"]},{"Key":"idea to","Fragments":["define","get"]},{"Key":"to define","Fragments":["a","`discard/2`","`discard`"]},{"Key":"define a","Fragments":["type"]},{"Key":"it especially","Fragments":["if"]},{"Key":"especially if","Fragments":["you"]},{"Key":"you plan","Fragments":["on"]},{"Key":"plan on","Fragments":["changing"]},{"Key":"on changing","Fragments":["it."]},{"Key":"not replacements","Fragments":["for"]},{"Key":"replacements for","Fragments":["specs"]},{"Key":"for specs","Fragments":["and"]},{"Key":"not replacement","Fragments":["for"]},{"Key":"replacement for","Fragments":["guards.","guards"]},{"Key":"for guards.","Fragments":["Ideally"]},{"Key":"guards. Ideally","Fragments":["you"]},{"Key":"Ideally you","Fragments":["need"]},{"Key":"use both","Fragments":["since"]},{"Key":"both since","Fragments":["they"]},{"Key":"don't always","Fragments":["catch"]},{"Key":"always catch","Fragments":["the"]},{"Key":"catch the","Fragments":["same"]},{"Key":"same type","Fragments":["of","(e.g.,"]},{"Key":"of errors","Fragments":["in"]},{"Key":"errors in","Fragments":["all","Erlang"]},{"Key":"in all","Fragments":["circumstances."]},{"Key":" For","Fragments":["\"error","perhaps","more","2,000,000","`to_rna_map/1`","example,","even","the"]},{"Key":"For \"error","Fragments":["clauses\""]},{"Key":"\"error clauses\"","Fragments":["a","so"]},{"Key":"clauses\" a","Fragments":["single"]},{"Key":"single guard","Fragments":["is"]},{"Key":"guard is","Fragments":["usually","`true`"]},{"Key":"is usually","Fragments":["better"]},{"Key":"usually better","Fragments":["than","to"]},{"Key":"than repeating","Fragments":["a"]},{"Key":"repeating a","Fragments":["guard"]},{"Key":"guard over","Fragments":["and"]},{"Key":"and over.","Fragments":["But"]},{"Key":"over. But","Fragments":["sometimes"]},{"Key":"But sometimes","Fragments":["people"]},{"Key":"sometimes people","Fragments":["(myself"]},{"Key":"people (myself","Fragments":["included)"]},{"Key":"(myself included)","Fragments":["get"]},{"Key":"included) get","Fragments":["lazy"]},{"Key":"get lazy","Fragments":["and"]},{"Key":"lazy and","Fragments":["forget"]},{"Key":"and forget","Fragments":["to"]},{"Key":"forget to","Fragments":["refactor"]},{"Key":"to refactor","Fragments":["that","it"]},{"Key":"refactor that","Fragments":["out."]},{"Key":"out. You","Fragments":["can"]},{"Key":"can have","Fragments":["a"]},{"Key":"a guarding","Fragments":["function","function,"]},{"Key":"guarding function","Fragments":["that"]},{"Key":"that acts","Fragments":["as"]},{"Key":"acts as","Fragments":["an"]},{"Key":"an interface","Fragments":["to"]},{"Key":"interface to","Fragments":["your"]},{"Key":"to your","Fragments":["internal","`ageOne/2`","`ageOne/2`","exported","links","source","example.","problem.","`leap_year/1`","spec,"]},{"Key":"your internal","Fragments":["function."]},{"Key":"internal function.","Fragments":["For"]},{"Key":"function. For","Fragments":["example","the"]},{"Key":"example in","Fragments":["a"]},{"Key":"a `gen_server`","Fragments":["callback"]},{"Key":"`gen_server` callback","Fragments":["module"]},{"Key":"callback module","Fragments":["you"]},{"Key":"module you","Fragments":["might"]},{"Key":"might have","Fragments":["an","been"]},{"Key":"have an","Fragments":["API","easy","extra"]},{"Key":"an API","Fragments":["(exported"]},{"Key":"API (exported","Fragments":["functions)"]},{"Key":"(exported functions)","Fragments":["which"]},{"Key":"functions) which","Fragments":["guard"]},{"Key":"which guard","Fragments":["on"]},{"Key":"guard on","Fragments":["various","that","`is_uppercase_letter/1`"]},{"Key":"on various","Fragments":["things"]},{"Key":"various things","Fragments":["and"]},{"Key":"things and","Fragments":["provide"]},{"Key":"and provide","Fragments":["some"]},{"Key":"provide some","Fragments":["spec.","typespecs"]},{"Key":"some spec.","Fragments":["Then"]},{"Key":"spec. Then","Fragments":["inside"]},{"Key":"the `handle_call`,","Fragments":["`handle_cast`"]},{"Key":"`handle_call`, `handle_cast`","Fragments":["etc"]},{"Key":"`handle_cast` etc","Fragments":["you"]},{"Key":"etc you","Fragments":["can"]},{"Key":"can assume","Fragments":["these","for"]},{"Key":"assume these","Fragments":["aspects"]},{"Key":"these aspects","Fragments":["are"]},{"Key":"aspects are","Fragments":["taken"]},{"Key":"are taken","Fragments":["care"]},{"Key":"taken care","Fragments":["of.","of"]},{"Key":"care of.","Fragments":["Of"]},{"Key":"of. Of","Fragments":["course"]},{"Key":"Of course","Fragments":["you","you","I"]},{"Key":"course you","Fragments":["still","are"]},{"Key":"you still","Fragments":["setup"]},{"Key":"still setup","Fragments":["road"]},{"Key":"setup road","Fragments":["blocks"]},{"Key":"road blocks","Fragments":["for"]},{"Key":"blocks for","Fragments":["things"]},{"Key":"for things","Fragments":["you","like"]},{"Key":"things you","Fragments":["don't"]},{"Key":"don't expect","Fragments":["if"]},{"Key":"expect if","Fragments":["it's"]},{"Key":"not taken","Fragments":["care"]},{"Key":"care of","Fragments":["at"]},{"Key":"of at","Fragments":["the"]},{"Key":"the API","Fragments":["level"]},{"Key":"API level","Fragments":["already."]},{"Key":" @alexandra,","Fragments":["I"]},{"Key":"@alexandra, I","Fragments":["like"]},{"Key":"guarding function,","Fragments":["I'll"]},{"Key":"function, I'll","Fragments":["try"]},{"Key":"update all","Fragments":["my"]},{"Key":"all my","Fragments":["solutions"]},{"Key":"my solutions","Fragments":["and"]},{"Key":"solutions and","Fragments":["play","see"]},{"Key":"and play","Fragments":["with"]},{"Key":"play with","Fragments":["it"]},{"Key":"with it","Fragments":["a"]},{"Key":"it a","Fragments":["bit.","bit","conscious","good","separate","named","char","module","go","little"]},{"Key":"a bit.","Fragments":["Thank","Guards"]},{"Key":"bit. Thank","Fragments":["you"]},{"Key":"for your","Fragments":["time,","comments!","comment!","comment.","feedback","convinience:"]},{"Key":"your time,","Fragments":["your"]},{"Key":"time, your","Fragments":["patience"]},{"Key":"your patience","Fragments":["and"]},{"Key":"patience and","Fragments":["your"]},{"Key":"and your","Fragments":["insights.","input"]},{"Key":" @dillan,","Fragments":["know"]},{"Key":"@dillan, know","Fragments":["it's"]},{"Key":"know it's","Fragments":["not"]},{"Key":"my intention","Fragments":["to"]},{"Key":"intention to","Fragments":["prove"]},{"Key":"to prove","Fragments":["you"]},{"Key":"prove you","Fragments":["wrong,"]},{"Key":"you wrong,","Fragments":["I"]},{"Key":"wrong, I","Fragments":["really","haven't"]},{"Key":"really appreciate","Fragments":["you","your"]},{"Key":"appreciate you","Fragments":["taking"]},{"Key":"you taking","Fragments":["the"]},{"Key":"taking the","Fragments":["time","time","time","time","time"]},{"Key":"the time","Fragments":["to","to","as","to","when","to","and","to","to"]},{"Key":"time to","Fragments":["help","nitpick","[implement](http://lpaste.net/144903)","nitpick","comment.","figure","nitpick"]},{"Key":"to help","Fragments":["me","you"]},{"Key":"help me","Fragments":["out.","learn"]},{"Key":"my experience,","Fragments":["and"]},{"Key":"experience, and","Fragments":["I'm"]},{"Key":"not specifically","Fragments":["talking"]},{"Key":"specifically talking","Fragments":["about"]},{"Key":"talking about","Fragments":["Erlang"]},{"Key":"about Erlang","Fragments":["here,"]},{"Key":"Erlang here,","Fragments":["correctly"]},{"Key":"here, correctly","Fragments":["white-listing"]},{"Key":"correctly white-listing","Fragments":["input"]},{"Key":"white-listing input","Fragments":["gets"]},{"Key":"input gets","Fragments":["really"]},{"Key":"gets really","Fragments":["messy"]},{"Key":"really messy","Fragments":["really"]},{"Key":"messy really","Fragments":["fast."]},{"Key":"really fast.","Fragments":["If"]},{"Key":"fast. If","Fragments":["you"]},{"Key":"it correctly,","Fragments":["you"]},{"Key":"correctly, you","Fragments":["gain"]},{"Key":"you gain","Fragments":["absolutely"]},{"Key":"gain absolutely","Fragments":["nothing"]},{"Key":"absolutely nothing","Fragments":["because"]},{"Key":"nothing because","Fragments":["you"]},{"Key":"you can't","Fragments":["trust","call","use"]},{"Key":"can't trust","Fragments":["it"]},{"Key":"trust it","Fragments":["but"]},{"Key":"it but","Fragments":["it's"]},{"Key":"but it's","Fragments":["still","good"]},{"Key":"it's still","Fragments":["a"]},{"Key":"still a","Fragments":["lot"]},{"Key":"of work","Fragments":["to","done"]},{"Key":"work to","Fragments":["implement."]},{"Key":" How","Fragments":["do","would","are","do","do","would"]},{"Key":"How do","Fragments":["you","you","the","I","you"]},{"Key":"you see","Fragments":["implementing","a"]},{"Key":"see implementing","Fragments":["guards?"]},{"Key":"implementing guards?","Fragments":["What"]},{"Key":"guards? What","Fragments":["do"]},{"Key":"What do","Fragments":["I","you"]},{"Key":"do I","Fragments":["test?","generate"]},{"Key":"I test?","Fragments":["What","Every"]},{"Key":"test? What","Fragments":["don't"]},{"Key":"What don't","Fragments":["I"]},{"Key":"don't I","Fragments":["test?"]},{"Key":"test? Every","Fragments":["function"]},{"Key":"Every function","Fragments":["or"]},{"Key":"function or","Fragments":["only"]},{"Key":"or only","Fragments":["those"]},{"Key":"only those","Fragments":["you","you","you"]},{"Key":"those you","Fragments":["export?","want","want"]},{"Key":"you export?","Fragments":["An"]},{"Key":"export? An","Fragments":["error"]},{"Key":"An error","Fragments":["clause"]},{"Key":"error clause","Fragments":["or"]},{"Key":"clause or","Fragments":["every"]},{"Key":"or every","Fragments":["clause"]},{"Key":"every clause","Fragments":["individually?"]},{"Key":"clause individually?","Fragments":["Do"]},{"Key":"individually? Do","Fragments":["I"]},{"Key":"Do I","Fragments":["still"]},{"Key":"I still","Fragments":["need","think","when","think"]},{"Key":"still need","Fragments":["guards"]},{"Key":"need guards","Fragments":["if"]},{"Key":"guards if","Fragments":["I"]},{"Key":"I add","Fragments":["specs?"]},{"Key":" @zoey,","Fragments":["how"]},{"Key":"@zoey, how","Fragments":["does"]},{"Key":"how does","Fragments":["that"]},{"Key":"does that","Fragments":["strategy"]},{"Key":"that strategy","Fragments":["hold"]},{"Key":"strategy hold","Fragments":["up"]},{"Key":"hold up","Fragments":["when"]},{"Key":"up when","Fragments":["you"]},{"Key":"you start","Fragments":["adding/refactoring","a"]},{"Key":"start adding/refactoring","Fragments":["code?"]},{"Key":"adding/refactoring code?","Fragments":["What"]},{"Key":"code? What","Fragments":["if"]},{"Key":"What if","Fragments":["I","we"]},{"Key":"I only","Fragments":["check","like"]},{"Key":"only check","Fragments":["what"]},{"Key":"check what","Fragments":["I"]},{"Key":"what I","Fragments":["use","pass?","wrote.","come","was","said","had","mean.","had","took"]},{"Key":"I use","Fragments":["and","records,","rebar","correct"]},{"Key":"use and","Fragments":["not"]},{"Key":"wasn't suggesting","Fragments":["to"]},{"Key":"suggesting to","Fragments":["not"]},{"Key":"have specs","Fragments":["when"]},{"Key":"specs when","Fragments":["I"]},{"Key":"guards but","Fragments":["the","was"]},{"Key":"other way","Fragments":["around."]},{"Key":"way around.","Fragments":["In"]},{"Key":"around. In","Fragments":["other"]},{"Key":"In other","Fragments":["words,","words","words,"]},{"Key":"other words,","Fragments":["are","other"]},{"Key":"words, are","Fragments":["specs"]},{"Key":"are specs","Fragments":["a"]},{"Key":"specs a","Fragments":["full"]},{"Key":"a full","Fragments":["replacement","queue"]},{"Key":"full replacement","Fragments":["for"]},{"Key":"for guards","Fragments":["when"]},{"Key":"guards when","Fragments":["they're"]},{"Key":"when they're","Fragments":["used"]},{"Key":"they're used","Fragments":["for"]},{"Key":"used for","Fragments":["\"type-checking\"?","static"]},{"Key":"You seem","Fragments":["to"]},{"Key":"have missed","Fragments":["my","to"]},{"Key":"missed my","Fragments":["question"]},{"Key":"my question","Fragments":["on"]},{"Key":"question on","Fragments":["\"error"]},{"Key":"on \"error","Fragments":["clauses\""]},{"Key":"clauses\" so","Fragments":["I'll"]},{"Key":"so I'll","Fragments":["ask","do"]},{"Key":"I'll ask","Fragments":["again."]},{"Key":"ask again.","Fragments":["Which"]},{"Key":"again. Which","Fragments":["do"]},{"Key":"Which do","Fragments":["you"]},{"Key":"you prefer?","Fragments":["A"]},{"Key":"prefer? A","Fragments":["single"]},{"Key":"A single","Fragments":["\"error"]},{"Key":"single \"error","Fragments":["clause\""]},{"Key":"\"error clause\"","Fragments":["or"]},{"Key":"clause\" or","Fragments":["multiple"]},{"Key":"or multiple","Fragments":["clauses"]},{"Key":"same guards?","Fragments":["Do"]},{"Key":"guards? Do","Fragments":["you"]},{"Key":"Do you","Fragments":["feel","know","need","really","realize","really","keep","feel","even"]},{"Key":"you feel","Fragments":["the","about","all","on"]},{"Key":"feel the","Fragments":["later"]},{"Key":"the later","Fragments":["violates"]},{"Key":"later violates","Fragments":["DRY?"]},{"Key":"- Nice","Fragments":["definitions"]},{"Key":"Nice definitions","Fragments":["of"]},{"Key":"definitions of","Fragments":["`compose/2`"]},{"Key":"of `compose/2`","Fragments":["and"]},{"Key":"`compose/2` and","Fragments":["`negate/1`.","`negate/1`"]},{"Key":"- I","Fragments":["like","was","am"]},{"Key":"of defining","Fragments":["`keep/2`","a"]},{"Key":"defining `keep/2`","Fragments":["and"]},{"Key":"`keep/2` and","Fragments":["`discard/2`"]},{"Key":"and `discard/2`","Fragments":["in"]},{"Key":"`discard/2` in","Fragments":["terms","function"]},{"Key":"of one","Fragments":["of"]},{"Key":"- This","Fragments":["problem"]},{"Key":"This problem","Fragments":["can"]},{"Key":"problem can","Fragments":["be"]},{"Key":"be solved","Fragments":["much","much"]},{"Key":"solved much","Fragments":["more","more"]},{"Key":"much more","Fragments":["succinctly","complicated.","time","experience","clarity,","simply","sane.","efficient","compact","readable"]},{"Key":"more succinctly","Fragments":["using"]},{"Key":"succinctly using","Fragments":["[list"]},{"Key":"using [list","Fragments":["comprehensions][]"]},{"Key":" [list","Fragments":["comprehensions]:"]},{"Key":"[list comprehensions]:","Fragments":["http://learnyousomeerlang.com/starting-out-for-real#list-comprehensions"]},{"Key":"avoid `if`-expressions","Fragments":["in"]},{"Key":"`if`-expressions in","Fragments":["Erlang"]},{"Key":"Erlang as","Fragments":["they're"]},{"Key":"as they're","Fragments":["kind"]},{"Key":"they're kind","Fragments":["of"]},{"Key":"kind of","Fragments":["funky.","problem.","tasks.","list","wish"]},{"Key":"of funky.","Fragments":["I"]},{"Key":"funky. I","Fragments":["also"]},{"Key":"also tend","Fragments":["to"]},{"Key":"avoid non-strict","Fragments":["equality"]},{"Key":"non-strict equality","Fragments":["operators","operators"]},{"Key":"equality operators","Fragments":["as","[coerce"]},{"Key":"operators as","Fragments":["I've"]},{"Key":"as I've","Fragments":["been"]},{"Key":"I've been","Fragments":["bitten","thinking","trying","using","being"]},{"Key":"been bitten","Fragments":["by","by"]},{"Key":"bitten by","Fragments":["them","them"]},{"Key":"by them","Fragments":["way","way"]},{"Key":"them way","Fragments":["to","too"]},{"Key":"to many","Fragments":["times."]},{"Key":"many times.","Fragments":["Having"]},{"Key":"times. Having","Fragments":["said"]},{"Key":"Having said","Fragments":["that,"]},{"Key":"said that,","Fragments":["I"]},{"Key":"do like","Fragments":["the","the","your","that"]},{"Key":"the logic,","Fragments":["it"]},{"Key":"logic, it","Fragments":["looks"]},{"Key":"looks really","Fragments":["nice."]},{"Key":" Koekelas,","Fragments":["thanks"]},{"Key":"Koekelas, thanks","Fragments":["for"]},{"Key":"thanks for","Fragments":["the","pointing","review=)","pointing","calling","stealing"]},{"Key":"the review.","Fragments":["Now"]},{"Key":"review. Now","Fragments":["I"]},{"Key":"Now I","Fragments":["understand","wasn't","see"]},{"Key":"understand that","Fragments":["the"]},{"Key":"the non-strict","Fragments":["equality"]},{"Key":"operators [coerce","Fragments":["ints"]},{"Key":"[coerce ints","Fragments":["to"]},{"Key":"ints to","Fragments":["floats](http://erlang.org/pipermail/erlang-questions/2007-December/032076.html)."]},{"Key":"to floats](http://erlang.org/pipermail/erlang-questions/2007-December/032076.html).","Fragments":["Do"]},{"Key":"floats](http://erlang.org/pipermail/erlang-questions/2007-December/032076.html). Do","Fragments":["=="]},{"Key":"Do ==","Fragments":["and"]},{"Key":"== and","Fragments":["/="]},{"Key":"and /=","Fragments":["come"]},{"Key":"/= come","Fragments":["from"]},{"Key":"come from","Fragments":["[Erlang:"]},{"Key":"from [Erlang:","Fragments":["The"]},{"Key":"[Erlang: The","Fragments":["Bad"]},{"Key":"The Bad","Fragments":["Parts](http://archive.oreilly.com/pub/a/javascript/excerpts/javascript-good-parts/bad-parts.html)?","Parts,"]},{"Key":"Bad Parts](http://archive.oreilly.com/pub/a/javascript/excerpts/javascript-good-parts/bad-parts.html)?","Fragments":[":)"]},{"Key":" But","Fragments":["what","still","if","thanks","why","I"]},{"Key":"But what","Fragments":["is"]},{"Key":"what is","Fragments":["\"funky\"","the","the","the","the","actually","written"]},{"Key":"is \"funky\"","Fragments":["about"]},{"Key":"\"funky\" about","Fragments":["the"]},{"Key":"the `if`-expression?","Fragments":["Is"]},{"Key":"`if`-expression? Is","Fragments":["pattern-matching"]},{"Key":"Is pattern-matching","Fragments":["(like"]},{"Key":"pattern-matching (like","Fragments":["your"]},{"Key":"(like your","Fragments":["solution)"]},{"Key":"your solution)","Fragments":["just"]},{"Key":"solution) just","Fragments":["more"]},{"Key":"more idiomatic","Fragments":["or","solution","with","Erlang","way","way","Erlang","Erlang"]},{"Key":"idiomatic or","Fragments":["does"]},{"Key":"or does","Fragments":["it"]},{"Key":"does it","Fragments":["have","actually"]},{"Key":"it have","Fragments":["any","any"]},{"Key":"any other","Fragments":["advantages?","solutions","spec/info"]},{"Key":"A few","Fragments":["years","things:"]},{"Key":"few years","Fragments":["back,"]},{"Key":"years back,","Fragments":["when"]},{"Key":"back, when","Fragments":["I"]},{"Key":"was still","Fragments":["studying,"]},{"Key":"still studying,","Fragments":["me"]},{"Key":"studying, me","Fragments":["and"]},{"Key":"me and","Fragments":["a"]},{"Key":"a friend","Fragments":["had"]},{"Key":"friend had","Fragments":["days"]},{"Key":"had days","Fragments":["of"]},{"Key":"days of","Fragments":["\"fun\""]},{"Key":"of \"fun\"","Fragments":["fixing"]},{"Key":"\"fun\" fixing","Fragments":["dozens"]},{"Key":"fixing dozens","Fragments":["of"]},{"Key":"dozens of","Fragments":["subtle"]},{"Key":"of subtle","Fragments":["bug"]},{"Key":"subtle bug","Fragments":["due"]},{"Key":"bug due","Fragments":["to"]},{"Key":"due to","Fragments":["type","comments","erlangs","the","the"]},{"Key":"to type","Fragments":["coercion.","check","check"]},{"Key":"type coercion.","Fragments":["I"]},{"Key":"coercion. I","Fragments":["won't"]},{"Key":"I won't","Fragments":["go","iterate,"]},{"Key":"won't go","Fragments":["into"]},{"Key":"go into","Fragments":["details","it"]},{"Key":"into details","Fragments":["but"]},{"Key":"details but","Fragments":["let's"]},{"Key":"but let's","Fragments":["just"]},{"Key":"let's just","Fragments":["say"]},{"Key":"say a","Fragments":["lot","function?"]},{"Key":"of cursing","Fragments":["was"]},{"Key":"cursing was","Fragments":["involved."]},{"Key":"was involved.","Fragments":["I"]},{"Key":"involved. I","Fragments":["agree"]},{"Key":"with what's","Fragments":["written"]},{"Key":"what's written","Fragments":["in"]},{"Key":"written in","Fragments":["The"]},{"Key":"in The","Fragments":["Bad"]},{"Key":"Bad Parts,","Fragments":["I've"]},{"Key":"Parts, I've","Fragments":["learned"]},{"Key":"I've learned","Fragments":["my"]},{"Key":"learned my","Fragments":["lessen,"]},{"Key":"my lessen,","Fragments":["better"]},{"Key":"lessen, better","Fragments":["to"]},{"Key":" They're","Fragments":["funky"]},{"Key":"They're funky","Fragments":["because"]},{"Key":"funky because","Fragments":["they're"]},{"Key":"because they're","Fragments":["guard-expressions"]},{"Key":"they're guard-expressions","Fragments":["and"]},{"Key":"guard-expressions and","Fragments":["not"]},{"Key":"not `if`-expressions.","Fragments":["Except"]},{"Key":"`if`-expressions. Except","Fragments":["for"]},{"Key":"Except for","Fragments":["some"]},{"Key":"for some","Fragments":["BIFs,"]},{"Key":"some BIFs,","Fragments":["you"]},{"Key":"BIFs, you","Fragments":["can't"]},{"Key":"can't call","Fragments":["functions"]},{"Key":"call functions","Fragments":["in"]},{"Key":"in them","Fragments":["which"]},{"Key":"them which","Fragments":["makes"]},{"Key":"makes them","Fragments":["awkward"]},{"Key":"them awkward","Fragments":["to"]},{"Key":"awkward to","Fragments":["use."]},{"Key":" More","Fragments":["idomatic?","Erlang","restrictive"]},{"Key":"More idomatic?","Fragments":["I"]},{"Key":"idomatic? I","Fragments":["don't"]},{"Key":"don't know.","Fragments":["When"]},{"Key":"know. When","Fragments":["I"]},{"Key":"of declarative","Fragments":["versus"]},{"Key":"declarative versus","Fragments":["imperative,"]},{"Key":"versus imperative,","Fragments":["I"]},{"Key":"imperative, I","Fragments":["think"]},{"Key":"about a","Fragments":["[block","very","guard","fold"]},{"Key":"a [block","Fragments":["puzzle](http://i01.i.aliimg.com/wsphoto/v0/32233139983_1/13-hole-puzzle-box-toys-shape-box-development-intelligence-toys-for-0-to-3-years-old.jpg)"]},{"Key":"[block puzzle](http://i01.i.aliimg.com/wsphoto/v0/32233139983_1/13-hole-puzzle-box-toys-shape-box-development-intelligence-toys-for-0-to-3-years-old.jpg)","Fragments":["versus"]},{"Key":"puzzle](http://i01.i.aliimg.com/wsphoto/v0/32233139983_1/13-hole-puzzle-box-toys-shape-box-development-intelligence-toys-for-0-to-3-years-old.jpg) versus","Fragments":["a"]},{"Key":"versus a","Fragments":["cookbook."]},{"Key":"a cookbook.","Fragments":["I"]},{"Key":"cookbook. I","Fragments":["feel"]},{"Key":"feel multiple","Fragments":["function"]},{"Key":"clauses is","Fragments":["more"]},{"Key":"like a","Fragments":["block","predicate","missed"]},{"Key":"a block","Fragments":["puzzle..."]},{"Key":"might want","Fragments":["to","to","to"]},{"Key":"at `lists:filter`","Fragments":["to"]},{"Key":"`lists:filter` to","Fragments":["simplify","build"]},{"Key":"to simplify","Fragments":["your","your"]},{"Key":"simplify your","Fragments":["`normalize`","code."]},{"Key":"your `normalize`","Fragments":["function."]},{"Key":"* Please","Fragments":["keep"]},{"Key":"Please keep","Fragments":["in"]},{"Key":"keep in","Fragments":["mind,","mind"]},{"Key":"in mind,","Fragments":["that","consider"]},{"Key":"mind, that","Fragments":["macros"]},{"Key":"that macros","Fragments":["are"]},{"Key":"macros are","Fragments":["only"]},{"Key":"only *expanded*","Fragments":["but"]},{"Key":"*expanded* but","Fragments":["not"]},{"Key":"not *evaluated*","Fragments":["at"]},{"Key":"*evaluated* at","Fragments":["compile"]},{"Key":"at compile","Fragments":["time,"]},{"Key":"compile time,","Fragments":["so"]},{"Key":"time, so","Fragments":["you"]},{"Key":"are effectively","Fragments":["recreating","identical."]},{"Key":"effectively recreating","Fragments":["your"]},{"Key":"recreating your","Fragments":["key-value-list"]},{"Key":"your key-value-list","Fragments":["for"]},{"Key":"key-value-list for","Fragments":["every"]},{"Key":"every single","Fragments":["char…","number"]},{"Key":"* Also","Fragments":["you","Appending"]},{"Key":"Also you","Fragments":["should","can","could","need","can"]},{"Key":"should compare","Fragments":["`lists:map(fun"]},{"Key":"compare `lists:map(fun","Fragments":["atbash_char/1,"]},{"Key":"`lists:map(fun atbash_char/1,","Fragments":["\"abcdefghijklmnopqrstuvwxyz\")`"]},{"Key":"atbash_char/1, \"abcdefghijklmnopqrstuvwxyz\")`","Fragments":["and"]},{"Key":"\"abcdefghijklmnopqrstuvwxyz\")` and","Fragments":["`lists:map(fun"]},{"Key":"and `lists:map(fun","Fragments":["plain_char/1,"]},{"Key":"`lists:map(fun plain_char/1,","Fragments":["\"abcdefghijklmnopqrstuvwxyz\")`"]},{"Key":" Pattern","Fragments":["matching"]},{"Key":"Pattern matching","Fragments":["is"]},{"Key":"more flexible","Fragments":["than"]},{"Key":"flexible than","Fragments":["that,"]},{"Key":"that, you","Fragments":["don't"]},{"Key":"need the","Fragments":["guards.","catch-all"]},{"Key":"the guards.","Fragments":["You","Just"]},{"Key":"guards. You","Fragments":["might"]},{"Key":"be able","Fragments":["to","to","to","to"]},{"Key":"to clean-up","Fragments":["`to_rna/1`"]},{"Key":"clean-up `to_rna/1`","Fragments":["by"]},{"Key":"`to_rna/1` by","Fragments":["researching"]},{"Key":"by researching","Fragments":["how"]},{"Key":"researching how","Fragments":["to"]},{"Key":"way you're","Fragments":["splitting"]},{"Key":"you're splitting","Fragments":["the"]},{"Key":"the number","Fragments":["into","of","of","of","of","of","of","of","of"]},{"Key":"number into","Fragments":["its"]},{"Key":"into its","Fragments":["constituent","own"]},{"Key":"its constituent","Fragments":["parts"]},{"Key":"constituent parts","Fragments":["here,"]},{"Key":"parts here,","Fragments":["that"]},{"Key":"here, that","Fragments":["makes"]},{"Key":"that makes","Fragments":["a"]},{"Key":"makes a","Fragments":["lot"]},{"Key":"of sense","Fragments":["to"]},{"Key":" @madge","Fragments":["it"]},{"Key":"@madge it","Fragments":["concats"]},{"Key":"it concats","Fragments":["lists."]},{"Key":"concats lists.","Fragments":["Starts"]},{"Key":"lists. Starts","Fragments":["from"]},{"Key":"Starts from","Fragments":["left"]},{"Key":"from left","Fragments":["to"]},{"Key":"left to","Fragments":["right.","right."]},{"Key":"to right.","Fragments":["Prevents"]},{"Key":"right. Prevents","Fragments":["me"]},{"Key":"Prevents me","Fragments":["from"]},{"Key":"me from","Fragments":["having","what"]},{"Key":"from having","Fragments":["to"]},{"Key":"to add","Fragments":["to","more","additional"]},{"Key":"add to","Fragments":["head"]},{"Key":"to head","Fragments":["and"]},{"Key":"head and","Fragments":["then"]},{"Key":"and then","Fragments":["reverse.","curse","make","list","averaged.","implement","submit","it","submit","recursively","submit","using","call","let","reversing","submit","evaluate","submit","did","using","return","submit","submit","submit","submit","submit"]},{"Key":"I know","Fragments":["what","doesn't","this",":-)","from","that","formulas"]},{"Key":"know what","Fragments":["`++`"]},{"Key":"what `++`","Fragments":["does,"]},{"Key":"`++` does,","Fragments":["but"]},{"Key":"does, but","Fragments":["I"]},{"Key":"am not","Fragments":["sure","sure","sure"]},{"Key":"about its","Fragments":["fixity."]},{"Key":"its fixity.","Fragments":["But"]},{"Key":"fixity. But","Fragments":["as"]},{"Key":"But as","Fragments":["I"]},{"Key":"as I","Fragments":["think","know","already","have=)","have","just","don't","know,","didn't"]},{"Key":"about it,","Fragments":["I"]},{"Key":"don't really","Fragments":["mean","like"]},{"Key":"really mean","Fragments":["fixity"]},{"Key":"mean fixity","Fragments":["but"]},{"Key":"fixity but","Fragments":["associativity."]},{"Key":"But still","Fragments":["I"]},{"Key":"still I","Fragments":["am"]},{"Key":"am asking","Fragments":["if"]},{"Key":"asking if","Fragments":["it"]},{"Key":"is executed","Fragments":["as"]},{"Key":"executed as","Fragments":["shown"]},{"Key":"as shown","Fragments":["in","in"]},{"Key":"shown in","Fragments":["1","2."]},{"Key":"in 1","Fragments":["or"]},{"Key":"1 or","Fragments":["as","2,"]},{"Key":"or as","Fragments":["shown","`-opaque`."]},{"Key":"in 2.","Fragments":["The"]},{"Key":"2. The","Fragments":["difference"]},{"Key":"The difference","Fragments":["wouldn't"]},{"Key":"difference wouldn't","Fragments":["even"]},{"Key":"wouldn't even","Fragments":["be"]},{"Key":"even be","Fragments":["noticable"]},{"Key":"be noticable","Fragments":["for"]},{"Key":"noticable for","Fragments":["that"]},{"Key":"for that","Fragments":["short","odd","clause."]},{"Key":"that short","Fragments":["lists"]},{"Key":"short lists","Fragments":["we"]},{"Key":"lists we","Fragments":["have"]},{"Key":"we have","Fragments":["here,","a","long","table"]},{"Key":"have here,","Fragments":["but"]},{"Key":"here, but","Fragments":["for","I"]},{"Key":"but for","Fragments":["longer","me","many","`isAllergicTo`"]},{"Key":"for longer","Fragments":["lists","lists...","lists."]},{"Key":"longer lists","Fragments":["version"]},{"Key":"lists version","Fragments":["1"]},{"Key":"version 1","Fragments":["would"]},{"Key":"1 would","Fragments":["be"]},{"Key":"be very","Fragments":["suboptimal!"]},{"Key":"The way","Fragments":["this","you"]},{"Key":"way this","Fragments":["code","solution"]},{"Key":"this code","Fragments":["works","would","for","wouldn't","will","differently","(which","a","because","(which"]},{"Key":"code works","Fragments":["is"]},{"Key":"works is","Fragments":["fine."]},{"Key":"If we","Fragments":["want","have"]},{"Key":"we want","Fragments":["to","to","because","as"]},{"Key":"know how","Fragments":["this","to"]},{"Key":"this chain","Fragments":["is"]},{"Key":"chain is","Fragments":["evaluated,"]},{"Key":"is evaluated,","Fragments":["we"]},{"Key":"evaluated, we","Fragments":["can"]},{"Key":"can ask","Fragments":["Erlang"]},{"Key":"ask Erlang","Fragments":["to"]},{"Key":"Erlang to","Fragments":["show","type","use","check","use"]},{"Key":"to show","Fragments":["us;","the"]},{"Key":"show us;","Fragments":["`c(phone,"]},{"Key":"us; `c(phone,","Fragments":["to_core).`"]},{"Key":"`c(phone, to_core).`","Fragments":["gives"]},{"Key":"to_core).` gives","Fragments":["us"]},{"Key":"gives us","Fragments":["a"]},{"Key":"us a","Fragments":["`erlc`'s","lot"]},{"Key":"a `erlc`'s","Fragments":["output"]},{"Key":"`erlc`'s output","Fragments":["in"]},{"Key":"output in","Fragments":["a"]},{"Key":"a human-readable","Fragments":["format:"]},{"Key":" \u003c{AreaCode,ExchangeName,Remain}\u003e","Fragments":["when"]},{"Key":"\u003c{AreaCode,ExchangeName,Remain}\u003e when","Fragments":["'true'"]},{"Key":"when 'true'","Fragments":["-\u003e"]},{"Key":" let","Fragments":["\u003c_cor2\u003e"]},{"Key":"let \u003c_cor2\u003e","Fragments":["="]},{"Key":"%% Line","Fragments":["24","24","24","24","24","24"]},{"Key":"in let","Fragments":["\u003c_cor3\u003e","\u003c_cor4\u003e","\u003c_cor5\u003e","\u003c_cor6\u003e"]},{"Key":"let \u003c_cor3\u003e","Fragments":["="]},{"Key":" call","Fragments":["'erlang':'++'","'erlang':'++'"]},{"Key":" (ExchangeName,","Fragments":["_cor2)"]},{"Key":"let \u003c_cor4\u003e","Fragments":["="]},{"Key":"let \u003c_cor5\u003e","Fragments":["="]},{"Key":"let \u003c_cor6\u003e","Fragments":["="]},{"Key":" (AreaCode,","Fragments":["_cor5)"]},{"Key":"in %%","Fragments":["Line"]},{"Key":" We","Fragments":["can","map","should"]},{"Key":"We can","Fragments":["see"]},{"Key":"compiler recognizes","Fragments":["what's"]},{"Key":"recognizes what's","Fragments":["going"]},{"Key":"what's going","Fragments":["on"]},{"Key":"on and","Fragments":["avoids","turn"]},{"Key":"and avoids","Fragments":["as"]},{"Key":"avoids as","Fragments":["much"]},{"Key":"as much","Fragments":["list"]},{"Key":"much list","Fragments":["traversal"]},{"Key":"list traversal","Fragments":["as"]},{"Key":"traversal as","Fragments":["possible"]},{"Key":"as possible","Fragments":["and","to","whenever"]},{"Key":"possible and","Fragments":["simply"]},{"Key":"and simply","Fragments":["adds"]},{"Key":"simply adds","Fragments":["elements"]},{"Key":"adds elements","Fragments":["to"]},{"Key":"elements to","Fragments":["the"]},{"Key":"list to","Fragments":["avoid","the","manage","calculate"]},{"Key":"avoid function","Fragments":["calls"]},{"Key":"function calls","Fragments":["wherever"]},{"Key":"calls wherever","Fragments":["possible."]},{"Key":"wherever possible.","Fragments":["This"]},{"Key":"possible. This","Fragments":["makes","will"]},{"Key":"This makes","Fragments":["sense,","it"]},{"Key":"sense, given","Fragments":["that"]},{"Key":"given that","Fragments":["*the"]},{"Key":"that *the","Fragments":["`++`"]},{"Key":"*the `++`","Fragments":["operator"]},{"Key":"`++` operator","Fragments":["is","here,"]},{"Key":"operator is","Fragments":["the"]},{"Key":"canonical method","Fragments":["of"]},{"Key":"method of","Fragments":["joining","giving"]},{"Key":"of joining","Fragments":["strings*."]},{"Key":"you @forest","Fragments":["for"]},{"Key":"@forest for","Fragments":["this"]},{"Key":"this nice","Fragments":["explanation,"]},{"Key":"nice explanation,","Fragments":["I"]},{"Key":"explanation, I","Fragments":["didn't"]},{"Key":"didn't know","Fragments":["that","about","about","about","about"]},{"Key":"is this","Fragments":["easy"]},{"Key":"this easy","Fragments":["to"]},{"Key":"the feets","Fragments":["into"]},{"Key":"feets into","Fragments":["core-code."]},{"Key":"into core-code.","Fragments":["When"]},{"Key":"core-code. When","Fragments":["trying"]},{"Key":"When trying","Fragments":["this"]},{"Key":"trying this","Fragments":["in"]},{"Key":"in Haskell","Fragments":["it","to","is:"]},{"Key":"Haskell it","Fragments":["is"]},{"Key":" i'd","Fragments":["like"]},{"Key":"i'd like","Fragments":["@mertie's"]},{"Key":"like @mertie's","Fragments":["comment"]},{"Key":"@mertie's comment","Fragments":["if"]},{"Key":"comment if","Fragments":["the"]},{"Key":"the platform","Fragments":["allowed!"]},{"Key":" TIL","Fragments":["to_core","that"]},{"Key":" Infinitely","Fragments":["more"]},{"Key":"Infinitely more","Fragments":["correct,"]},{"Key":"more correct,","Fragments":["and"]},{"Key":"correct, and","Fragments":["only"]},{"Key":"and only","Fragments":["about","incidentally"]},{"Key":"only about","Fragments":["twice"]},{"Key":"about twice","Fragments":["as"]},{"Key":"twice as","Fragments":["large,"]},{"Key":"as large,","Fragments":["mostly"]},{"Key":"large, mostly","Fragments":["due"]},{"Key":"mostly due","Fragments":["to"]},{"Key":"to comments","Fragments":["and"]},{"Key":"comments and","Fragments":["specs."]},{"Key":"and specs.","Fragments":["However,"]},{"Key":"specs. However,","Fragments":["one"]},{"Key":"However, one","Fragments":["thing"]},{"Key":"one thing","Fragments":["is","I"]},{"Key":"thing is","Fragments":["missing:","that","to"]},{"Key":"is missing:","Fragments":["we"]},{"Key":"missing: we","Fragments":["should"]},{"Key":"we should","Fragments":["be"]},{"Key":"more clever","Fragments":["about"]},{"Key":"clever about","Fragments":["the"]},{"Key":"the commutativity","Fragments":["of"]},{"Key":"commutativity of","Fragments":["multiplication"]},{"Key":"of multiplication","Fragments":["and"]},{"Key":"multiplication and","Fragments":["division."]},{"Key":"and division.","Fragments":["What"]},{"Key":"division. What","Fragments":["if"]},{"Key":"if we","Fragments":["used","have","know","don't"]},{"Key":"we used","Fragments":["a"]},{"Key":"a ring","Fragments":["buffer"]},{"Key":"ring buffer","Fragments":["as"]},{"Key":"buffer as","Fragments":["we","a"]},{"Key":"as we","Fragments":["walked","traverse","recently","want","want"]},{"Key":"we walked","Fragments":["the"]},{"Key":"walked the","Fragments":["string,"]},{"Key":"string, multiplying","Fragments":["by"]},{"Key":"multiplying by","Fragments":["numbers"]},{"Key":"by numbers","Fragments":["as"]},{"Key":"numbers as","Fragments":["they"]},{"Key":"as they","Fragments":["come","go"]},{"Key":"they come","Fragments":["in"]},{"Key":"come in","Fragments":["the"]},{"Key":"the right","Fragments":["side,","place","order","one","data","direction?"]},{"Key":"right side,","Fragments":["and"]},{"Key":"side, and","Fragments":["dividing"]},{"Key":"and dividing","Fragments":["as"]},{"Key":"dividing as","Fragments":["they"]},{"Key":"they go","Fragments":["out","to."]},{"Key":"go out","Fragments":["the"]},{"Key":"the left?","Fragments":["As"]},{"Key":"left? As","Fragments":["long"]},{"Key":"As long","Fragments":["as","as"]},{"Key":"long as","Fragments":["we're","you","its","I"]},{"Key":"as we're","Fragments":["careful"]},{"Key":"we're careful","Fragments":["about"]},{"Key":"careful about","Fragments":["zero,"]},{"Key":"about zero,","Fragments":["this"]},{"Key":"zero, this","Fragments":["should"]},{"Key":"this should","Fragments":["give","work:"]},{"Key":"should give","Fragments":["us"]},{"Key":"give us","Fragments":["only","a"]},{"Key":"us only","Fragments":["`length(S)`"]},{"Key":"only `length(S)`","Fragments":["comparisons"]},{"Key":"`length(S)` comparisons","Fragments":["plus"]},{"Key":"comparisons plus","Fragments":["some"]},{"Key":"plus some","Fragments":["extra"]},{"Key":"some extra","Fragments":["space"]},{"Key":"extra space","Fragments":["on"]},{"Key":"space on","Fragments":["the"]},{"Key":"of `N`.","Fragments":["For"]},{"Key":"`N`. For","Fragments":["small"]},{"Key":"For small","Fragments":["`N`"]},{"Key":"small `N`","Fragments":["and"]},{"Key":"`N` and","Fragments":["large"]},{"Key":"and large","Fragments":["`S`"]},{"Key":"large `S`","Fragments":["this"]},{"Key":"`S` this","Fragments":["would"]},{"Key":" Here's","Fragments":["a"]},{"Key":"Here's a","Fragments":["version","measurement"]},{"Key":"version that","Fragments":["avoids","used"]},{"Key":"that avoids","Fragments":["reversing"]},{"Key":"avoids reversing","Fragments":["the"]},{"Key":"reversing the","Fragments":["string,","lists","dependency","list."]},{"Key":"string, at","Fragments":["the"]},{"Key":"the cost","Fragments":["of","of","of"]},{"Key":"cost of","Fragments":["having","conversion.","doing"]},{"Key":"do an","Fragments":["append"]},{"Key":"an append","Fragments":["in"]},{"Key":"append in","Fragments":["`create/1`."]},{"Key":"in `create/1`.","Fragments":["Is"]},{"Key":"`create/1`. Is","Fragments":["it"]},{"Key":"Is it","Fragments":["worth"]},{"Key":"it worth","Fragments":["the"]},{"Key":"worth the","Fragments":["increase","effort."]},{"Key":"the increase","Fragments":["in"]},{"Key":"increase in","Fragments":["complexity?"]},{"Key":"in complexity?","Fragments":["It"]},{"Key":"complexity? It","Fragments":["would"]},{"Key":"be nice","Fragments":["to","to","to","(e.g.,"]},{"Key":"nice to","Fragments":["express","be","return","stick"]},{"Key":"express the","Fragments":["inner"]},{"Key":"the inner","Fragments":["function"]},{"Key":"inner function","Fragments":["of"]},{"Key":"function of","Fragments":["that","`keep/2`?"]},{"Key":"that fold","Fragments":["in"]},{"Key":"fold in","Fragments":["a"]},{"Key":"better way;","Fragments":["it"]},{"Key":"way; it","Fragments":["lacks"]},{"Key":"it lacks","Fragments":["a"]},{"Key":"lacks a","Fragments":["good"]},{"Key":"wasn't happy","Fragments":["with"]},{"Key":"with some","Fragments":["of","comments"]},{"Key":"the names","Fragments":["chosen","you've"]},{"Key":"names chosen","Fragments":["in"]},{"Key":"chosen in","Fragments":["the"]},{"Key":"test suite","Fragments":["so","function","calls","and"]},{"Key":"suite so","Fragments":["I"]},{"Key":"I renamed","Fragments":["the"]},{"Key":"renamed the","Fragments":["function"]},{"Key":"function `nucleotides_count/1`","Fragments":["to"]},{"Key":"`nucleotides_count/1` to","Fragments":["`count/1`"]},{"Key":"to `count/1`","Fragments":["and"]},{"Key":"`count/1` and","Fragments":["the"]},{"Key":"error `\"Invalid","Fragments":["nucleotide\"`"]},{"Key":"`\"Invalid nucleotide\"`","Fragments":["to"]},{"Key":"nucleotide\"` to","Fragments":["`bad_nucleotide`."]},{"Key":"can't say","Fragments":["I'm"]},{"Key":"say I'm","Fragments":["happy"]},{"Key":"I'm happy","Fragments":["with"]},{"Key":"with what","Fragments":["I"]},{"Key":"I wrote.","Fragments":["For"]},{"Key":"wrote. For","Fragments":["some"]},{"Key":"For some","Fragments":["reason,"]},{"Key":"some reason,","Fragments":["every"]},{"Key":"reason, every","Fragments":["time"]},{"Key":"every time","Fragments":["I"]},{"Key":"time I","Fragments":["use"]},{"Key":"use records,","Fragments":["my"]},{"Key":"records, my","Fragments":["code"]},{"Key":"code looks","Fragments":["butt","like"]},{"Key":"looks butt","Fragments":["ugly."]},{"Key":"butt ugly.","Fragments":["One"]},{"Key":"ugly. One","Fragments":["thing"]},{"Key":"One thing","Fragments":["I","to","to"]},{"Key":"thing I","Fragments":["really","would","don't","will"]},{"Key":"dislike is","Fragments":["the"]},{"Key":"I bind","Fragments":["all"]},{"Key":"bind all","Fragments":["fields"]},{"Key":"all fields","Fragments":["of"]},{"Key":"fields of","Fragments":["a"]},{"Key":"a record,","Fragments":["even"]},{"Key":"record, even","Fragments":["tough"]},{"Key":"even tough","Fragments":["I"]},{"Key":"tough I","Fragments":["don't"]},{"Key":"them all.","Fragments":["The"]},{"Key":"all. The","Fragments":["alternative"]},{"Key":"The alternative","Fragments":["however,"]},{"Key":"alternative however,","Fragments":["is"]},{"Key":"however, is","Fragments":["unreadable."]},{"Key":" Hard","Fragments":["to","to"]},{"Key":"Hard to","Fragments":["imagine","get"]},{"Key":"to imagine","Fragments":["a","what"]},{"Key":"imagine a","Fragments":["more","way","variety","line","way"]},{"Key":"concise solution,","Fragments":["but","well"]},{"Key":"solution, but","Fragments":["I'd","there","it","I","if"]},{"Key":"but I'd","Fragments":["argue","really"]},{"Key":"I'd argue","Fragments":["readability"]},{"Key":"argue readability","Fragments":["isn't"]},{"Key":"readability isn't","Fragments":["its"]},{"Key":"isn't its","Fragments":["strong"]},{"Key":"its strong","Fragments":["suit."]},{"Key":"Good to","Fragments":["learn"]},{"Key":"to learn","Fragments":["about","the","the"]},{"Key":"about `update_counter`,","Fragments":["thanks."]},{"Key":" `io_lib:format`","Fragments":["is"]},{"Key":"`io_lib:format` is","Fragments":["another"]},{"Key":"is another","Fragments":["way"]},{"Key":"another way","Fragments":["of","of","to"]},{"Key":"of handling","Fragments":["the","invalid"]},{"Key":"handling the","Fragments":["string"]},{"Key":" Astute","Fragments":["approach"]},{"Key":"Astute approach","Fragments":["to"]},{"Key":"approach to","Fragments":["avoiding","the","solving"]},{"Key":"to avoiding","Fragments":["negative"]},{"Key":"avoiding negative","Fragments":["numbers"]},{"Key":"numbers using","Fragments":["`rem`"]},{"Key":"using `rem`","Fragments":["and"]},{"Key":"and `div`.","Fragments":["I"]},{"Key":"`div`. I","Fragments":["always"]},{"Key":"I always","Fragments":["struggle","feel","forget","put","forget"]},{"Key":"always struggle","Fragments":["to","with"]},{"Key":"struggle to","Fragments":["remember"]},{"Key":"to remember","Fragments":["how"]},{"Key":"remember how","Fragments":["to"]},{"Key":"do that","Fragments":["properly.","during","for","once"]},{"Key":" Hah!","Fragments":["Yes,"]},{"Key":"Hah! Yes,","Fragments":["I"]},{"Key":"Yes, I","Fragments":["think","understand"]},{"Key":"think one","Fragments":["of","of","of"]},{"Key":"the perils","Fragments":["of"]},{"Key":"perils of","Fragments":["how"]},{"Key":"the exercises","Fragments":["have","i've"]},{"Key":"exercises have","Fragments":["been"]},{"Key":"been ported","Fragments":["between"]},{"Key":"ported between","Fragments":["all"]},{"Key":"between all","Fragments":["the"]},{"Key":"the languages","Fragments":["is"]},{"Key":"languages is","Fragments":["that"]},{"Key":"in some","Fragments":["languages,"]},{"Key":"some languages,","Fragments":["the"]},{"Key":"languages, the","Fragments":["standard"]},{"Key":"standard library","Fragments":["makes","but"]},{"Key":"library makes","Fragments":["the"]},{"Key":"problem trivial.","Fragments":["(For"]},{"Key":"trivial. (For","Fragments":["example,"]},{"Key":"(For example,","Fragments":["Common"]},{"Key":"example, Common","Fragments":["Lisp"]},{"Key":"Common Lisp","Fragments":["features"]},{"Key":"Lisp features","Fragments":["roman"]},{"Key":"features roman","Fragments":["numeral"]},{"Key":"roman numeral","Fragments":["printing"]},{"Key":"numeral printing","Fragments":["as"]},{"Key":"printing as","Fragments":["a"]},{"Key":"a standard","Fragments":["feature;","recursive","recursive"]},{"Key":"standard feature;","Fragments":["probably"]},{"Key":"feature; probably","Fragments":["not"]},{"Key":"probably not","Fragments":["what","what"]},{"Key":"the designer","Fragments":["of"]},{"Key":"designer of","Fragments":["the"]},{"Key":"the roman","Fragments":["numerals"]},{"Key":"roman numerals","Fragments":["problem"]},{"Key":"numerals problem","Fragments":["was"]},{"Key":"problem was","Fragments":["going"]},{"Key":"In this","Fragments":["case","specific","case","case,"]},{"Key":"this case","Fragments":["I","that","since","(pun","the","one","should","being"]},{"Key":"case I","Fragments":["feel"]},{"Key":"feel like,","Fragments":["without"]},{"Key":"like, without","Fragments":["a"]},{"Key":"without a","Fragments":["better","function"]},{"Key":"better specification,","Fragments":["one"]},{"Key":"specification, one","Fragments":["might"]},{"Key":"one might","Fragments":["as"]},{"Key":"might as","Fragments":["well"]},{"Key":"well use","Fragments":["the"]},{"Key":"the supplied","Fragments":["time"]},{"Key":"supplied time","Fragments":["functions."]},{"Key":"time functions.","Fragments":["Actually,"]},{"Key":"functions. Actually,","Fragments":["just"]},{"Key":"Actually, just","Fragments":["as"]},{"Key":"just as","Fragments":["useful","clear"]},{"Key":"as useful","Fragments":["as"]},{"Key":"useful as","Fragments":["exercises"]},{"Key":"as exercises","Fragments":["that"]},{"Key":"exercises that","Fragments":["encourage","encourage"]},{"Key":"that encourage","Fragments":["common","you"]},{"Key":"encourage common","Fragments":["patterns"]},{"Key":"common patterns","Fragments":["in"]},{"Key":"patterns in","Fragments":["a"]},{"Key":"a language","Fragments":["would"]},{"Key":"language would","Fragments":["be"]},{"Key":"be exercises","Fragments":["that"]},{"Key":"encourage you","Fragments":["to"]},{"Key":"you to","Fragments":["scour","add","not","break","assign"]},{"Key":"to scour","Fragments":["the"]},{"Key":"scour the","Fragments":["standard"]},{"Key":"standard library,","Fragments":["and"]},{"Key":"library, and","Fragments":["then"]},{"Key":"then curse","Fragments":["when"]},{"Key":"curse when","Fragments":["you"]},{"Key":"at others'","Fragments":["solutions"]},{"Key":"others' solutions","Fragments":["and"]},{"Key":"and see","Fragments":["that"]},{"Key":"they found","Fragments":["a"]},{"Key":"found a","Fragments":["use"]},{"Key":"a use","Fragments":["for"]},{"Key":"use for","Fragments":["an"]},{"Key":"an obscure","Fragments":["function"]},{"Key":"obscure function","Fragments":["you"]},{"Key":"function you","Fragments":["didn't"]},{"Key":"you didn't","Fragments":["know.","realize","put","know"]},{"Key":" What","Fragments":["this","do","happens","faster","I","kinds","about"]},{"Key":"What this","Fragments":["problem"]},{"Key":"problem needs","Fragments":["is"]},{"Key":"needs is","Fragments":["some"]},{"Key":"is some","Fragments":["of"]},{"Key":"the real","Fragments":["painful"]},{"Key":"real painful","Fragments":["details"]},{"Key":"painful details","Fragments":["of"]},{"Key":"of real-world","Fragments":["time"]},{"Key":"real-world time","Fragments":["handling,"]},{"Key":"time handling,","Fragments":["like"]},{"Key":"handling, like","Fragments":["using"]},{"Key":"using GPS","Fragments":["time,"]},{"Key":"GPS time,","Fragments":["accounting"]},{"Key":"time, accounting","Fragments":["for"]},{"Key":"accounting for","Fragments":["new"]},{"Key":"for new","Fragments":["leap"]},{"Key":"new leap","Fragments":["seconds,"]},{"Key":"leap seconds,","Fragments":["or"]},{"Key":"seconds, or","Fragments":["complicated"]},{"Key":"or complicated","Fragments":["time"]},{"Key":"complicated time","Fragments":["zones."]},{"Key":"Wow, cheat","Fragments":["much?"]},{"Key":"cheat much?","Fragments":["=)"]},{"Key":" Mainly","Fragments":["annoyed"]},{"Key":"Mainly annoyed","Fragments":["I"]},{"Key":"annoyed I","Fragments":["didn't"]},{"Key":"find those","Fragments":["library"]},{"Key":"those library","Fragments":["functions"]},{"Key":"library functions","Fragments":["while","like"]},{"Key":"functions while","Fragments":["I"]},{"Key":"while I","Fragments":["was","could"]},{"Key":"was digging,","Fragments":["but"]},{"Key":"digging, but","Fragments":["it"]},{"Key":"it did","Fragments":["make"]},{"Key":"more interesting","Fragments":["to"]},{"Key":"just filed","Fragments":["a"]},{"Key":"filed a","Fragments":["PR"]},{"Key":"a PR","Fragments":["for","to"]},{"Key":"PR for","Fragments":["that"]},{"Key":"that odd","Fragments":["`function_clause`"]},{"Key":"odd `function_clause`","Fragments":["exception."]},{"Key":" Amazed","Fragments":["you"]},{"Key":"Amazed you","Fragments":["created"]},{"Key":"you created","Fragments":["the"]},{"Key":"created the","Fragments":["`SLen`","macros"]},{"Key":"the `SLen`","Fragments":["binding."]},{"Key":"`SLen` binding.","Fragments":["`enotsufficientlyterse`"]},{"Key":" Looking","Fragments":["at","back","at","at"]},{"Key":"Looking at","Fragments":["this","other","other"]},{"Key":"this now,","Fragments":["I"]},{"Key":"now, I","Fragments":["wonder"]},{"Key":"it would","Fragments":["be","have","be","seem","be","make","be","be","be","be","be","return"]},{"Key":"more efficient","Fragments":["to","(at","list","approach","approach"]},{"Key":"efficient to","Fragments":["reverse","make"]},{"Key":"to reverse","Fragments":["the","the","the","a"]},{"Key":"list and","Fragments":["build","summing","having"]},{"Key":"and build","Fragments":["the"]},{"Key":"build the","Fragments":["subsets","list,"]},{"Key":"the subsets","Fragments":["all"]},{"Key":"subsets all","Fragments":["at"]},{"Key":"all at","Fragments":["once"]},{"Key":"at once","Fragments":["as"]},{"Key":"once as","Fragments":["we"]},{"Key":"we traverse","Fragments":["the"]},{"Key":"traverse the","Fragments":["list"]},{"Key":"list backwards.","Fragments":["It"]},{"Key":"backwards. It","Fragments":["definitely"]},{"Key":"It definitely","Fragments":["wouldn't"]},{"Key":"definitely wouldn't","Fragments":["be"]},{"Key":"wouldn't be","Fragments":["as"]},{"Key":"be as","Fragments":["clear","concise.","bright","memory"]},{"Key":"as clear","Fragments":["as","as"]},{"Key":"clear as","Fragments":["these","a"]},{"Key":"as these","Fragments":["`string:substr/3`"]},{"Key":"these `string:substr/3`","Fragments":["solutions."]},{"Key":"Also, I","Fragments":["think","think","struggled","see"]},{"Key":"that sort","Fragments":["is"]},{"Key":"sort is","Fragments":["unnecessary."]},{"Key":"is unnecessary.","Fragments":["Not"]},{"Key":"unnecessary. Not","Fragments":["enough"]},{"Key":"Not enough","Fragments":["tests"]},{"Key":"enough tests","Fragments":["for"]},{"Key":"tell for","Fragments":["sure."]},{"Key":"For perhaps","Fragments":["the"]},{"Key":"perhaps the","Fragments":["first"]},{"Key":"first time","Fragments":["ever,"]},{"Key":"time ever,","Fragments":["our"]},{"Key":"ever, our","Fragments":["solutions"]},{"Key":"our solutions","Fragments":["are"]},{"Key":"solutions are","Fragments":["effectively"]},{"Key":"effectively identical.","Fragments":["I"]},{"Key":"identical. I","Fragments":["feel"]},{"Key":"just leveled","Fragments":["up."]},{"Key":" Is","Fragments":["that","that","there","the","green"]},{"Key":"Is that","Fragments":["spec","canonical","even"]},{"Key":"that spec","Fragments":["annotation"]},{"Key":"spec annotation","Fragments":["right?"]},{"Key":"annotation right?","Fragments":["The"]},{"Key":"right? The","Fragments":["first"]},{"Key":"The first","Fragments":["element","test","clause","one","guard"]},{"Key":"first element","Fragments":["is"]},{"Key":"element is","Fragments":["a"]},{"Key":"a 1-arg","Fragments":["function"]},{"Key":"1-arg function","Fragments":["from"]},{"Key":"function from","Fragments":["any","I"]},{"Key":"from any","Fragments":["to"]},{"Key":"any to","Fragments":["any","list,"]},{"Key":"to any","Fragments":["bu"]},{"Key":"any bu","Fragments":["you"]},{"Key":"bu you","Fragments":["said"]},{"Key":"you said","Fragments":["any"]},{"Key":"said any","Fragments":["to"]},{"Key":"to list,","Fragments":["or"]},{"Key":"list, or","Fragments":["not?"]},{"Key":"I've never","Fragments":["seen"]},{"Key":"never seen","Fragments":["the"]},{"Key":"seen the","Fragments":["extra","solutions"]},{"Key":"extra guards,","Fragments":["effectively"]},{"Key":"guards, effectively","Fragments":["doing"]},{"Key":"effectively doing","Fragments":["precondition"]},{"Key":"doing precondition","Fragments":["checks"]},{"Key":"precondition checks","Fragments":["on"]},{"Key":"checks on","Fragments":["the"]},{"Key":"the arguments.","Fragments":["Is"]},{"Key":"arguments. Is","Fragments":["that"]},{"Key":"that canonical","Fragments":["Erlang?"]},{"Key":"canonical Erlang?","Fragments":["What's"]},{"Key":"Erlang? What's","Fragments":["the"]},{"Key":"What's the","Fragments":["effect"]},{"Key":"the effect","Fragments":["over"]},{"Key":"effect over","Fragments":["just"]},{"Key":"over just","Fragments":["letting"]},{"Key":"just letting","Fragments":["it"]},{"Key":"letting it","Fragments":["fail?"]},{"Key":"it fail?","Fragments":["Better"]},{"Key":"fail? Better","Fragments":["error"]},{"Key":"Better error","Fragments":["message"]},{"Key":"error message","Fragments":["on","when"]},{"Key":"message on","Fragments":["failure?"]},{"Key":" @abdullah","Fragments":["Specs"]},{"Key":"@abdullah Specs","Fragments":["are"]},{"Key":"Specs are","Fragments":["useful"]},{"Key":"for two","Fragments":["things."]},{"Key":"two things.","Fragments":["To"]},{"Key":"things. To","Fragments":["allow"]},{"Key":"To allow","Fragments":["Dialyzer,"]},{"Key":"allow Dialyzer,","Fragments":["a"]},{"Key":"Dialyzer, a","Fragments":["tool"]},{"Key":"a tool","Fragments":["to"]},{"Key":"tool to","Fragments":["find"]},{"Key":"find type","Fragments":["errors","errors."]},{"Key":"type check","Fragments":["your","my","the","or"]},{"Key":"check your","Fragments":["code."]},{"Key":"your code.","Fragments":["Also","But"]},{"Key":"code. Also","Fragments":["as"]},{"Key":"Also as","Fragments":["a"]},{"Key":"a form","Fragments":["of"]},{"Key":"form of","Fragments":["documentation."]},{"Key":"of documentation.","Fragments":["This"]},{"Key":"documentation. This","Fragments":["means"]},{"Key":"means that","Fragments":["you"]},{"Key":"avoid many","Fragments":["of"]},{"Key":"many of","Fragments":["the"]},{"Key":"problem associated","Fragments":["with"]},{"Key":"associated with","Fragments":["dynamically"]},{"Key":"with dynamically","Fragments":["typed"]},{"Key":"dynamically typed","Fragments":["languages."]},{"Key":" `-spec","Fragments":["accumulate(fun((any())"]},{"Key":"`-spec accumulate(fun((any())","Fragments":["-\u003e","-\u003e","-\u003e"]},{"Key":"accumulate(fun((any()) -\u003e","Fragments":["list()),","any()),","any()),"]},{"Key":"-\u003e list()),","Fragments":["list())"]},{"Key":"list()), list())","Fragments":["-\u003e"]},{"Key":"list()) -\u003e","Fragments":["list().`","list().`","list()."]},{"Key":" Means","Fragments":["accumulate"]},{"Key":"Means accumulate","Fragments":["takes"]},{"Key":"accumulate takes","Fragments":["a"]},{"Key":"takes a","Fragments":["function","second"]},{"Key":"function with","Fragments":["one","an"]},{"Key":"with one","Fragments":["argument"]},{"Key":"one argument","Fragments":["which"]},{"Key":"argument which","Fragments":["may"]},{"Key":"which may","Fragments":["be"]},{"Key":"may be","Fragments":["of","more","part"]},{"Key":"be of","Fragments":["any","the","the","the"]},{"Key":"of any","Fragments":["type"]},{"Key":"any type","Fragments":["and","(`list()`"]},{"Key":"and returns","Fragments":["a","false.","false.","a"]},{"Key":"containing any","Fragments":["type"]},{"Key":"type (`list()`","Fragments":["can"]},{"Key":"(`list()` can","Fragments":["be"]},{"Key":"be empty,","Fragments":["`list()`"]},{"Key":"empty, `list()`","Fragments":["is"]},{"Key":"`list()` is","Fragments":["equivalent"]},{"Key":"is equivalent","Fragments":["to","to","to"]},{"Key":"equivalent to","Fragments":["`[any()]`).","this:","`-spec"]},{"Key":"to `[any()]`).","Fragments":["`accumulate/2`"]},{"Key":"`[any()]`). `accumulate/2`","Fragments":["takes"]},{"Key":"`accumulate/2` takes","Fragments":["a"]},{"Key":"a second","Fragments":["parameter","submission","clause","walk"]},{"Key":"second parameter","Fragments":["of","to","have"]},{"Key":"parameter of","Fragments":["type"]},{"Key":"of type","Fragments":["`list()`","test?"]},{"Key":"type `list()`","Fragments":["(same"]},{"Key":"`list()` (same","Fragments":["as"]},{"Key":"(same as","Fragments":["`[any()]`)"]},{"Key":"as `[any()]`)","Fragments":["and"]},{"Key":" returns","Fragments":["a"]},{"Key":"For more","Fragments":["information"]},{"Key":"more information","Fragments":["check","on","on"]},{"Key":"information check","Fragments":["out"]},{"Key":"check out","Fragments":["the","Erlang's"]},{"Key":"an example","Fragments":["with","which"]},{"Key":"example with","Fragments":["the"]},{"Key":"the RNA","Fragments":["transcription"]},{"Key":"RNA transcription","Fragments":["problem:"]},{"Key":" To","Fragments":["answer","implement","clarify,","avoid","protect"]},{"Key":"To answer","Fragments":["your"]},{"Key":"answer your","Fragments":["second"]},{"Key":"second question.","Fragments":["It's"]},{"Key":"question. It's","Fragments":["part"]},{"Key":"It's part","Fragments":["of"]},{"Key":"the fail","Fragments":["fast"]},{"Key":"philosophy. If","Fragments":["you"]},{"Key":"are going","Fragments":["to"]},{"Key":"to fail,","Fragments":["fail"]},{"Key":"fail, fail","Fragments":["as"]},{"Key":"fail as","Fragments":["soon","early","soon"]},{"Key":"as soon","Fragments":["as","as","as","as"]},{"Key":"soon as","Fragments":["possible.","I","the","possible"]},{"Key":"This will","Fragments":["prevent","improve"]},{"Key":"will prevent","Fragments":["the"]},{"Key":"prevent the","Fragments":["caller"]},{"Key":"caller from","Fragments":["even"]},{"Key":"from even","Fragments":["getting"]},{"Key":"even getting","Fragments":["into"]},{"Key":"getting into","Fragments":["the","the","understanding","some"]},{"Key":"function. This","Fragments":["makes","approach"]},{"Key":"makes it","Fragments":["easier","another","easier"]},{"Key":"it easier","Fragments":["to","to"]},{"Key":"to debug","Fragments":["because"]},{"Key":"debug because","Fragments":["you"]},{"Key":"look inside","Fragments":["the","the"]},{"Key":"function (it","Fragments":["assigns"]},{"Key":"(it assigns","Fragments":["blame"]},{"Key":"assigns blame","Fragments":["to"]},{"Key":"blame to","Fragments":["the","the"]},{"Key":"the correct","Fragments":["piece","return","order,","range?"]},{"Key":"correct piece","Fragments":["of"]},{"Key":"piece of","Fragments":["code).","code"]},{"Key":"1\u003e F","Fragments":["="]},{"Key":"F =","Fragments":["fun(A)"]},{"Key":"= fun(A)","Fragments":["when","-\u003e"]},{"Key":"fun(A) when","Fragments":["is_integer(A)"]},{"Key":"when is_integer(A)","Fragments":["-\u003e"]},{"Key":"is_integer(A) -\u003e","Fragments":["A"]},{"Key":"-\u003e A","Fragments":["+","+"]},{"Key":"A +","Fragments":["1","1","1"]},{"Key":"+ 1","Fragments":["end.","end.","+","+","+","comparisons"]},{"Key":"clause matching","Fragments":["erl_eval:'-inside-an-interpreted-fun-'(a)"]},{"Key":"4\u003e F2","Fragments":["="]},{"Key":"F2 =","Fragments":["fun(A)"]},{"Key":"fun(A) -\u003e","Fragments":["A"]},{"Key":"error: an","Fragments":["error"]},{"Key":"an error","Fragments":["occurred","such"]},{"Key":"error occurred","Fragments":["when"]},{"Key":"occurred when","Fragments":["evaluating"]},{"Key":"when evaluating","Fragments":["an"]},{"Key":"evaluating an","Fragments":["arithmetic"]},{"Key":"an arithmetic","Fragments":["expression"]},{"Key":"in operator","Fragments":["+/2"]},{"Key":"a +","Fragments":["1"]},{"Key":"for that.","Fragments":["That"]},{"Key":"that. That","Fragments":["was"]},{"Key":"That was","Fragments":["roughly"]},{"Key":"was roughly","Fragments":["my"]},{"Key":"roughly my","Fragments":["understanding."]},{"Key":"to read","Fragments":["up","if","up","up","with","the","if","if","than","about."]},{"Key":"read up","Fragments":["more","on","on"]},{"Key":"up more","Fragments":["on"]},{"Key":"more on","Fragments":["the"]},{"Key":"the spec.","Fragments":["I","I'd"]},{"Key":"spec. I","Fragments":["am"]},{"Key":"am so","Fragments":["far"]},{"Key":"so far","Fragments":["completely","was"]},{"Key":"far completely","Fragments":["failing"]},{"Key":"completely failing","Fragments":["to"]},{"Key":"failing to","Fragments":["type"]},{"Key":"check my","Fragments":["stated","answer.","specs."]},{"Key":"my stated","Fragments":["specs"]},{"Key":"stated specs","Fragments":["--"]},{"Key":"specs --","Fragments":["I"]},{"Key":"-- I","Fragments":["could"]},{"Key":"could write","Fragments":["any"]},{"Key":"write any","Fragments":["rubbish"]},{"Key":"any rubbish","Fragments":["there"]},{"Key":"rubbish there","Fragments":["and"]},{"Key":"there and","Fragments":["would"]},{"Key":"and would","Fragments":["never"]},{"Key":"would never","Fragments":["know"]},{"Key":"never know","Fragments":["my"]},{"Key":"know my","Fragments":["spec"]},{"Key":"my spec","Fragments":["was"]},{"Key":"spec was","Fragments":["wrong."]},{"Key":" Regarding","Fragments":["yours:","the"]},{"Key":"Regarding yours:","Fragments":["I"]},{"Key":"yours: I","Fragments":["still"]},{"Key":"still think","Fragments":["it","for"]},{"Key":"think it","Fragments":["should","would","is","provides","is","matters.","will.","would","should","makes","is","is","might"]},{"Key":"should read","Fragments":["`-spec","http://unicode.org/reports/tr29/#Introduction"]},{"Key":"read `-spec","Fragments":["accumulate(fun((any())"]},{"Key":"-\u003e any()),","Fragments":["list())","[any()])"]},{"Key":"any()), list())","Fragments":["-\u003e"]},{"Key":"function is","Fragments":["to","a","better","a","buried","defined","doing"]},{"Key":"to return","Fragments":["only","when","single","the","the","`false`"]},{"Key":"return only","Fragments":["a"]},{"Key":"only a","Fragments":["single","single","single","subset"]},{"Key":"single mapped","Fragments":["element"]},{"Key":"mapped element","Fragments":["and"]},{"Key":"element and","Fragments":["not"]},{"Key":" @shannon","Fragments":["You"]},{"Key":"@shannon You","Fragments":["are"]},{"Key":"are right.","Fragments":["I"]},{"Key":"right. I","Fragments":["will","was","had"]},{"Key":"will change","Fragments":["it.","it.","it."]},{"Key":" Reopening","Fragments":["to","to","to","to","to"]},{"Key":"Reopening to","Fragments":["remind","remind","remind","remind","remind"]},{"Key":"to remind","Fragments":["myself","myself","myself","myself","myself"]},{"Key":"remind myself","Fragments":["to","to","to","to","to"]},{"Key":"myself to","Fragments":["do","write","write","do","do","do","do"]},{"Key":"not type","Fragments":["check"]},{"Key":"function arity?","Fragments":["Also"]},{"Key":"arity? Also","Fragments":["why"]},{"Key":"Also why","Fragments":["not"]},{"Key":"not use","Fragments":["guards","the","built-in","those"]},{"Key":"guards (it","Fragments":["allows"]},{"Key":"(it allows","Fragments":["to"]},{"Key":"allows to","Fragments":["assign"]},{"Key":"to assign","Fragments":["blame","blame**.","blame."]},{"Key":"assign blame","Fragments":["to"]},{"Key":"right place","Fragments":["which"]},{"Key":"place which","Fragments":["is"]},{"Key":"feels like","Fragments":["it'd","an","it's","`16#c0`"]},{"Key":"like it'd","Fragments":["be"]},{"Key":"it'd be","Fragments":["clearer","more"]},{"Key":"be clearer","Fragments":["to","than","when/if"]},{"Key":"clearer to","Fragments":["read"]},{"Key":"read if","Fragments":["the","you","they"]},{"Key":"logic around","Fragments":["checking"]},{"Key":"around checking","Fragments":["if"]},{"Key":"checking if","Fragments":["the"]},{"Key":"string is","Fragments":["a"]},{"Key":"a question","Fragments":["or","mark."]},{"Key":"question or","Fragments":["shouting"]},{"Key":"or shouting","Fragments":["were"]},{"Key":"shouting were","Fragments":["extracted"]},{"Key":"were extracted","Fragments":["into"]},{"Key":"extracted into","Fragments":["individual"]},{"Key":"into individual","Fragments":["functions"]},{"Key":"individual functions","Fragments":["like"]},{"Key":"functions like","Fragments":["`is_question(String)`","this.","folds,","map.","this","this"]},{"Key":" Liking","Fragments":["the"]},{"Key":"Liking the","Fragments":["use"]},{"Key":"function head","Fragments":["of","for","itself,","e.g."]},{"Key":"with @laverne,","Fragments":["nice"]},{"Key":"@laverne, nice","Fragments":["job."]},{"Key":"believe that","Fragments":["building"]},{"Key":"that building","Fragments":["the"]},{"Key":"building the","Fragments":["sequence","new","list"]},{"Key":"the sequence","Fragments":["list","outside"]},{"Key":"sequence list","Fragments":["is"]},{"Key":"list is","Fragments":["somewhat","expected.","large","defined","just"]},{"Key":"is somewhat","Fragments":["suboptimal","inefficient"]},{"Key":"somewhat suboptimal","Fragments":["for"]},{"Key":"suboptimal for","Fragments":["this"]},{"Key":"this kind","Fragments":["of","of"]},{"Key":"of problem.","Fragments":["It"]},{"Key":"problem. It","Fragments":["might"]},{"Key":"It might","Fragments":["get","be"]},{"Key":"might get","Fragments":["problematic","inlined"]},{"Key":"get problematic","Fragments":["if"]},{"Key":"problematic if","Fragments":["you"]},{"Key":"get much","Fragments":["bigger"]},{"Key":"much bigger","Fragments":["number"]},{"Key":"bigger number","Fragments":["as"]},{"Key":"number as","Fragments":["an"]},{"Key":" Yes","Fragments":["I"]},{"Key":"Yes I","Fragments":["see."]},{"Key":"I see.","Fragments":["The"]},{"Key":"see. The","Fragments":["sad"]},{"Key":"The sad","Fragments":["thing"]},{"Key":"sad thing","Fragments":["is"]},{"Key":"that that","Fragments":["will"]},{"Key":"that will","Fragments":["intermingle","occur"]},{"Key":"will intermingle","Fragments":["the"]},{"Key":"intermingle the","Fragments":["loop,"]},{"Key":"the loop,","Fragments":["filtering"]},{"Key":"loop, filtering","Fragments":["and"]},{"Key":"filtering and","Fragments":["reducing","counting."]},{"Key":"and reducing","Fragments":["of"]},{"Key":"reducing of","Fragments":["the"]},{"Key":"the result","Fragments":["to","to","for","list,","of","of","for","to","in","directly,","list."]},{"Key":"result to","Fragments":["make","the","accumulator"]},{"Key":"make for","Fragments":["much"]},{"Key":"for much","Fragments":["less"]},{"Key":"much less","Fragments":["readable"]},{"Key":"less readable","Fragments":["code."]},{"Key":" Lazy","Fragments":["lists"]},{"Key":"Lazy lists","Fragments":["would"]},{"Key":"lists would","Fragments":["be"]},{"Key":"I'll see","Fragments":["what"]},{"Key":"I come","Fragments":["up"]},{"Key":"come up","Fragments":["with.","with","with","with","with","with","with","with"]},{"Key":" Passes","Fragments":["all"]},{"Key":"Passes all","Fragments":["tests"]},{"Key":"all tests","Fragments":["(including"]},{"Key":"tests (including","Fragments":["the"]},{"Key":"(including the","Fragments":["commented","`ignores`"]},{"Key":"the commented","Fragments":["out"]},{"Key":"commented out","Fragments":["responds_to_other_whitespace_test)."]},{"Key":"out responds_to_other_whitespace_test).","Fragments":["Should"]},{"Key":"responds_to_other_whitespace_test). Should","Fragments":["also"]},{"Key":"Should also","Fragments":["work"]},{"Key":"with many","Fragments":["other"]},{"Key":"many other","Fragments":["languages.","recursive"]},{"Key":"other languages.","Fragments":["Currently"]},{"Key":"languages. Currently","Fragments":["Chinese"]},{"Key":"Currently Chinese","Fragments":["wouldn't"]},{"Key":"Chinese wouldn't","Fragments":["work"]},{"Key":"wouldn't work","Fragments":["because","with"]},{"Key":"work because","Fragments":["I"]},{"Key":"think they","Fragments":["use"]},{"Key":"use `吗`","Fragments":["instead"]},{"Key":"`吗` instead","Fragments":["of"]},{"Key":"of `?`.","Fragments":["Also"]},{"Key":"`?`. Also","Fragments":["Chinese"]},{"Key":"Also Chinese","Fragments":["as"]},{"Key":"Chinese as","Fragments":["far"]},{"Key":"as far","Fragments":["as","as","as"]},{"Key":"far as","Fragments":["I","I","we","we"]},{"Key":"know doesn't","Fragments":["have"]},{"Key":"doesn't have","Fragments":["a","to","to","binary","an","syntactic"]},{"Key":"a concept","Fragments":["of"]},{"Key":"of uppercase/lowercase","Fragments":["letters."]},{"Key":" @margaret","Fragments":["Nice"]},{"Key":"@margaret Nice","Fragments":["solution!"]},{"Key":"Nice solution!","Fragments":["How"]},{"Key":"solution! How","Fragments":["about"]},{"Key":"How about","Fragments":["adding","defining"]},{"Key":"about adding","Fragments":["unicode","some","some"]},{"Key":"adding unicode","Fragments":["support?"]},{"Key":"use $A","Fragments":["instead"]},{"Key":"$A instead","Fragments":["of"]},{"Key":"of 65","Fragments":["etc...","etc."]},{"Key":"65 etc...","Fragments":["in"]},{"Key":"etc... in","Fragments":["the"]},{"Key":"type spec","Fragments":["but","--","for","annotations.","private"]},{"Key":"spec but","Fragments":["it","I've"]},{"Key":"it doesn't","Fragments":["seem","pass","add"]},{"Key":"doesn't seem","Fragments":["to"]},{"Key":"be supported.","Fragments":["Used"]},{"Key":"supported. Used","Fragments":["documentation"]},{"Key":"Used documentation","Fragments":["instead"]},{"Key":"documentation instead","Fragments":["to"]},{"Key":"instead to","Fragments":["fill","avoid"]},{"Key":"to fill","Fragments":["the"]},{"Key":"fill the","Fragments":["gap."]},{"Key":"the gap.","Fragments":["Kept"]},{"Key":"gap. Kept","Fragments":["it"]},{"Key":"Kept it","Fragments":["as"]},{"Key":"as simple","Fragments":["as","map","as"]},{"Key":"simple as","Fragments":["possible.","possible."]},{"Key":"Also I","Fragments":["decided","decided","think","decided"]},{"Key":"to allow","Fragments":["empty","for"]},{"Key":"allow empty","Fragments":["sequences."]},{"Key":"empty sequences.","Fragments":["I"]},{"Key":"sequences. I","Fragments":["tried"]},{"Key":"tried to","Fragments":["imagine","use"]},{"Key":"imagine what","Fragments":["this"]},{"Key":"what this","Fragments":["code","would"]},{"Key":"code would","Fragments":["look","be","only"]},{"Key":"would look","Fragments":["like","like"]},{"Key":"like in","Fragments":["a","the","your"]},{"Key":"a statically","Fragments":["typed"]},{"Key":"statically typed","Fragments":["language."]},{"Key":"typed language.","Fragments":["While"]},{"Key":"language. While","Fragments":["it's"]},{"Key":"While it's","Fragments":["possible","a"]},{"Key":"possible that","Fragments":["someone","in"]},{"Key":"that someone","Fragments":["can"]},{"Key":"someone can","Fragments":["call"]},{"Key":"call me","Fragments":["with"]},{"Key":"me with","Fragments":["an","a"]},{"Key":"empty list","Fragments":["not","instead","as","thing"]},{"Key":"list not","Fragments":["initially"]},{"Key":"not initially","Fragments":["intended"]},{"Key":"initially intended","Fragments":["as"]},{"Key":"intended as","Fragments":["a"]},{"Key":"a `dna_sequence()`.","Fragments":["It's"]},{"Key":"`dna_sequence()`. It's","Fragments":["also"]},{"Key":"It's also","Fragments":["possible"]},{"Key":"also possible","Fragments":["that"]},{"Key":"in certain","Fragments":["cases"]},{"Key":"certain cases","Fragments":["an"]},{"Key":"cases an","Fragments":["empty"]},{"Key":"empty sequence","Fragments":["could"]},{"Key":"sequence could","Fragments":["be","be"]},{"Key":"be considered","Fragments":["valid.","idiomatic."]},{"Key":"considered valid.","Fragments":["So"]},{"Key":"valid. So","Fragments":["instead"]},{"Key":"So instead","Fragments":["I"]},{"Key":"instead I","Fragments":["am"]},{"Key":"am siding","Fragments":["with"]},{"Key":"siding with","Fragments":["the"]},{"Key":"the YAGNI","Fragments":["principle."]},{"Key":"decided that","Fragments":["exporting","this"]},{"Key":"that exporting","Fragments":["the"]},{"Key":"exporting the","Fragments":["types","type"]},{"Key":"types could","Fragments":["be"]},{"Key":"be beneficial","Fragments":["for"]},{"Key":"beneficial for","Fragments":["the"]},{"Key":"the composition","Fragments":["of"]},{"Key":"composition of","Fragments":["high"]},{"Key":"of high","Fragments":["level"]},{"Key":"high level","Fragments":["functions."]},{"Key":"been thinking","Fragments":["about"]},{"Key":"thinking about","Fragments":["this","a"]},{"Key":"about this","Fragments":["code","experiment._","approach!","experiment._","experiment._","family","`fun((A)-\u003eB),","experiment._","experiment._","snippet.","one,","experiment._","experiment._","experiment._","experiment._","experiment._","though."]},{"Key":"code for","Fragments":["a","character"]},{"Key":"while and","Fragments":["I"]},{"Key":"been better","Fragments":["if"]},{"Key":"better if","Fragments":["the","you"]},{"Key":"the nucleotides","Fragments":["used"]},{"Key":"nucleotides used","Fragments":["atoms"]},{"Key":"used atoms","Fragments":["instead"]},{"Key":"atoms instead","Fragments":["of"]},{"Key":"of integers.","Fragments":["Unfortunately"]},{"Key":"integers. Unfortunately","Fragments":["the"]},{"Key":"Unfortunately the","Fragments":["test"]},{"Key":"test made","Fragments":["the"]},{"Key":"the choice","Fragments":["for","between"]},{"Key":"choice for","Fragments":["me."]},{"Key":" @ilene","Fragments":["I"]},{"Key":"@ilene I","Fragments":["think"]},{"Key":"think my","Fragments":["version"]},{"Key":"my version","Fragments":["has"]},{"Key":"version has","Fragments":["better"]},{"Key":"has better","Fragments":["performance."]},{"Key":"better performance.","Fragments":["I"]},{"Key":"performance. I","Fragments":["don't"]},{"Key":"create the","Fragments":["map"]},{"Key":"the map","Fragments":["each","operation"]},{"Key":"map each","Fragments":["time"]},{"Key":"each time","Fragments":["`to_rna/1`"]},{"Key":"time `to_rna/1`","Fragments":["is"]},{"Key":"`to_rna/1` is","Fragments":["called."]},{"Key":"is called.","Fragments":["A"]},{"Key":"called. A","Fragments":["function"]},{"Key":"A function","Fragments":["is"]},{"Key":"of static","Fragments":["map"]},{"Key":"static map","Fragments":["by"]},{"Key":"map by","Fragments":["the"]},{"Key":" Consider","Fragments":["guards","adding","reimplementing","folding","getting","avoiding","adding","use","adding"]},{"Key":"Consider guards","Fragments":["and"]},{"Key":"you prepend","Fragments":["the"]},{"Key":"prepend the","Fragments":["result","result"]},{"Key":"the accumulator,","Fragments":["instead","but"]},{"Key":"accumulator, instead","Fragments":["adding"]},{"Key":"instead adding","Fragments":["it"]},{"Key":"adding it","Fragments":["add"]},{"Key":"it add","Fragments":["the"]},{"Key":"add the","Fragments":["end","guards"]},{"Key":"end of","Fragments":["list","another"]},{"Key":"list `[Acc|F(H)]`.","Fragments":["This"]},{"Key":"`[Acc|F(H)]`. This","Fragments":["way"]},{"Key":"This way","Fragments":["you"]},{"Key":"way you","Fragments":["won't","wrote","intermingle","structured"]},{"Key":"you won't","Fragments":["have"]},{"Key":"won't have","Fragments":["to"]},{"Key":"list in","Fragments":["the","the","reverse"]},{"Key":" @tracy,","Fragments":["because"]},{"Key":"@tracy, because","Fragments":["that's"]},{"Key":"because that's","Fragments":["the"]},{"Key":"that's the","Fragments":["way"]},{"Key":"way the","Fragments":["cons-operator","type"]},{"Key":"the cons-operator","Fragments":["works."]},{"Key":"cons-operator works.","Fragments":["I'll"]},{"Key":"works. I'll","Fragments":["rewrite"]},{"Key":"I'll rewrite","Fragments":["it"]},{"Key":"rewrite it","Fragments":["as"]},{"Key":"as small","Fragments":["function:"]},{"Key":" -spec","Fragments":["cons(any(),","accumulate(fun((A)","accumulate(fun((A)","leap_year(1582..)"]},{"Key":"-spec cons(any(),","Fragments":["list())"]},{"Key":"cons(any(), list())","Fragments":["-\u003e"]},{"Key":" cons(H,","Fragments":["T)"]},{"Key":"cons(H, T)","Fragments":["-\u003e"]},{"Key":"T) -\u003e","Fragments":["[H|T]"]},{"Key":"do `cons($F,","Fragments":["\"oo\")`."]},{"Key":"`cons($F, \"oo\")`.","Fragments":["Since"]},{"Key":"\"oo\")`. Since","Fragments":["`$F`"]},{"Key":"Since `$F`","Fragments":["is"]},{"Key":"`$F` is","Fragments":["a"]},{"Key":"a char","Fragments":["and","(L9).","wasn't","or"]},{"Key":"char and","Fragments":["`\"oo\"`"]},{"Key":"and `\"oo\"`","Fragments":["a"]},{"Key":"`\"oo\"` a","Fragments":["list"]},{"Key":"of chars.","Fragments":["But"]},{"Key":"chars. But","Fragments":["you"]},{"Key":"But you","Fragments":["cant"]},{"Key":"you cant","Fragments":["do"]},{"Key":"cant do","Fragments":["`cons(\"Fo\","]},{"Key":"do `cons(\"Fo\",","Fragments":["$o)`"]},{"Key":"`cons(\"Fo\", $o)`","Fragments":["because","will"]},{"Key":"$o)` because","Fragments":["there"]},{"Key":"because there","Fragments":["is","is","isn't","wasn't"]},{"Key":"is only","Fragments":["a","4"]},{"Key":"single element","Fragments":["where"]},{"Key":"element where","Fragments":["a"]},{"Key":"where a","Fragments":["list"]},{"Key":"A snoc","Fragments":["as"]},{"Key":"snoc as","Fragments":["you"]},{"Key":"as you","Fragments":["suggest","discover","are","match","did.","wrote","suggest."]},{"Key":"you suggest","Fragments":["it,","with","to"]},{"Key":"suggest it,","Fragments":["is"]},{"Key":"not possible","Fragments":["in"]},{"Key":"possible in","Fragments":["erlang,"]},{"Key":"in erlang,","Fragments":["since","preferring"]},{"Key":"erlang, since","Fragments":["there"]},{"Key":"since there","Fragments":["is","is"]},{"Key":"is no","Fragments":["way","need","need"]},{"Key":"to hold","Fragments":["a"]},{"Key":"hold a","Fragments":["reference"]},{"Key":"a reference","Fragments":["to"]},{"Key":"reference to","Fragments":["the"]},{"Key":"last element","Fragments":["in"]},{"Key":"the starting","Fragments":["point"]},{"Key":"starting point","Fragments":["of"]},{"Key":"list. So","Fragments":["a"]},{"Key":"So a","Fragments":["snoc","negative"]},{"Key":"a snoc","Fragments":["is"]},{"Key":"snoc is","Fragments":["often"]},{"Key":"is often","Fragments":["emulated"]},{"Key":"often emulated","Fragments":["by"]},{"Key":"emulated by","Fragments":["appending"]},{"Key":"by appending","Fragments":["a","to"]},{"Key":"appending a","Fragments":["singleton","new"]},{"Key":"a singleton","Fragments":["list","list"]},{"Key":"singleton list","Fragments":["to","and"]},{"Key":"the original,","Fragments":["but"]},{"Key":"original, but","Fragments":["as"]},{"Key":"but as","Fragments":["I"]},{"Key":"already told","Fragments":["you,"]},{"Key":"told you,","Fragments":["append"]},{"Key":"you, append","Fragments":["is"]},{"Key":"Thanks a","Fragments":["lot","lot!"]},{"Key":"the detailed","Fragments":["explanation."]},{"Key":"to correct","Fragments":["me"]},{"Key":"correct me","Fragments":["a"]},{"Key":"me a","Fragments":["little","while","hint,","moment."]},{"Key":"little bit:","Fragments":["`cons($F,"]},{"Key":"bit: `cons($F,","Fragments":["\"oo\")`"]},{"Key":"`cons($F, \"oo\")`","Fragments":["results"]},{"Key":"\"oo\")` results","Fragments":["in"]},{"Key":"results in","Fragments":["`\"Foo\"`","more"]},{"Key":"in `\"Foo\"`","Fragments":["as"]},{"Key":"`\"Foo\"` as","Fragments":["expected,"]},{"Key":"as expected,","Fragments":["but"]},{"Key":"expected, but","Fragments":["due"]},{"Key":"but due","Fragments":["to"]},{"Key":"to erlangs","Fragments":["dynamic"]},{"Key":"erlangs dynamic","Fragments":["typing"]},{"Key":"dynamic typing","Fragments":["`cons(\"Fo\","]},{"Key":"typing `cons(\"Fo\",","Fragments":["$o)`"]},{"Key":"$o)` will","Fragments":["actually"]},{"Key":"will actually","Fragments":["do"]},{"Key":"actually do","Fragments":["something,"]},{"Key":"do something,","Fragments":["but"]},{"Key":"something, but","Fragments":["probably"]},{"Key":"but probably","Fragments":["not"]},{"Key":"you expect:","Fragments":["`[\"Fo\","]},{"Key":"expect: `[\"Fo\",","Fragments":["$o]`"]},{"Key":"`[\"Fo\", $o]`","Fragments":["(or"]},{"Key":"$o]` (or","Fragments":["since"]},{"Key":"(or since","Fragments":["erlangs"]},{"Key":"since erlangs","Fragments":["strings"]},{"Key":"erlangs strings","Fragments":["are"]},{"Key":"strings are","Fragments":["list"]},{"Key":"are list","Fragments":["of"]},{"Key":"of chars","Fragments":["`[[$F,","on"]},{"Key":"chars `[[$F,","Fragments":["$o],"]},{"Key":"`[[$F, $o],","Fragments":["$o]`)."]},{"Key":"was thinking","Fragments":["too","there.","about","that"]},{"Key":"thinking too","Fragments":["much"]},{"Key":"too much","Fragments":["haskell","time"]},{"Key":"much haskell","Fragments":["when"]},{"Key":"haskell when","Fragments":["I"]},{"Key":"I wrote","Fragments":["my","and","this","that,","the"]},{"Key":"wrote my","Fragments":["first"]},{"Key":" @dylan","Fragments":["Very"]},{"Key":"@dylan Very","Fragments":["nice"]},{"Key":"Very nice","Fragments":["implementation.","I","and"]},{"Key":"nice implementation.","Fragments":["I"]},{"Key":"implementation. I","Fragments":["really"]},{"Key":"your `ageOn/2`","Fragments":["function"]},{"Key":"`ageOn/2` function","Fragments":["the"]},{"Key":"function the","Fragments":["use","same"]},{"Key":"of variable","Fragments":["for"]},{"Key":"variable for","Fragments":["documentation"]},{"Key":"for documentation","Fragments":["is"]},{"Key":"documentation is","Fragments":["quite"]},{"Key":"is quite","Fragments":["good.","clever,"]},{"Key":"quite good.","Fragments":["I"]},{"Key":"good. I","Fragments":["can","just"]},{"Key":"can however","Fragments":["still","use"]},{"Key":"however still","Fragments":["suggest"]},{"Key":"still suggest","Fragments":["a"]},{"Key":"suggest a","Fragments":["few","different"]},{"Key":"a few","Fragments":["improvements.","variations","*hours*","things","improvements","issues.","other","places:"]},{"Key":"few improvements.","Fragments":["I"]},{"Key":"improvements. I","Fragments":["would"]},{"Key":"would suggest","Fragments":["firstly","the"]},{"Key":"suggest firstly","Fragments":["to"]},{"Key":"firstly to","Fragments":["align"]},{"Key":"to align","Fragments":["the"]},{"Key":"align the","Fragments":["numbers"]},{"Key":"the numbers","Fragments":["in","in","grow."]},{"Key":"numbers in","Fragments":["`planetYearLength/1`","the"]},{"Key":"in `planetYearLength/1`","Fragments":["for"]},{"Key":"`planetYearLength/1` for","Fragments":["easier"]},{"Key":"for easier","Fragments":["visibility."]},{"Key":"easier visibility.","Fragments":["One"]},{"Key":"visibility. One","Fragments":["mistake"]},{"Key":"One mistake","Fragments":["I"]},{"Key":"mistake I","Fragments":["have"]},{"Key":"have noticed","Fragments":["is"]},{"Key":"noticed is","Fragments":["that"]},{"Key":"you return","Fragments":["a","`T`"]},{"Key":"return a","Fragments":["`number()`","`float()`.","list","single","tuple","valid"]},{"Key":"a `number()`","Fragments":["when","what"]},{"Key":"`number()` when","Fragments":["in"]},{"Key":"when in","Fragments":["fact"]},{"Key":"in fact","Fragments":["you"]},{"Key":"fact you","Fragments":["will"]},{"Key":"you will","Fragments":["always","prepared","get"]},{"Key":"always return","Fragments":["a","`false`,"]},{"Key":"a `float()`.","Fragments":["Also"]},{"Key":"`float()`. Also","Fragments":["the"]},{"Key":"Also the","Fragments":["second","matching","function","valid"]},{"Key":"the second","Fragments":["parameter","case","for","one.","argument","iteration","function"]},{"Key":"parameter to","Fragments":["your","carry"]},{"Key":"your `ageOne/2`","Fragments":["function","function."]},{"Key":"`ageOne/2` function","Fragments":["could"]},{"Key":"function could","Fragments":["be"]},{"Key":"`number()` what","Fragments":["is"]},{"Key":"the rationale","Fragments":["for","for"]},{"Key":"rationale for","Fragments":["using","using"]},{"Key":"for using","Fragments":["an","maps","a"]},{"Key":"using an","Fragments":["`integer()`?","external"]},{"Key":"an `integer()`?","Fragments":["I"]},{"Key":"`integer()`? I","Fragments":["would"]},{"Key":"would additionally","Fragments":["add"]},{"Key":"additionally add","Fragments":["some"]},{"Key":"add some","Fragments":["guards"]},{"Key":"some guards","Fragments":["to","(at","to"]},{"Key":" Now","Fragments":["`census`","for","that"]},{"Key":"Now `census`","Fragments":["could"]},{"Key":"`census` could","Fragments":["be"]},{"Key":"be written","Fragments":["as","for","much"]},{"Key":"written as","Fragments":["a"]},{"Key":"a fold","Fragments":["and","instead"]},{"Key":"fold and","Fragments":["a"]},{"Key":" There's","Fragments":["definitely","nothing"]},{"Key":"There's definitely","Fragments":["another"]},{"Key":"definitely another","Fragments":["pass"]},{"Key":"another pass","Fragments":["over"]},{"Key":"pass over","Fragments":["this"]},{"Key":"over this","Fragments":["that"]},{"Key":"that could","Fragments":["clean","be"]},{"Key":"could clean","Fragments":["it","this"]},{"Key":"clean it","Fragments":["up"]},{"Key":"it up","Fragments":["further","to","a"]},{"Key":"further and","Fragments":["improve"]},{"Key":"and improve","Fragments":["the"]},{"Key":"improve the","Fragments":["names,","clarity","code","error","performance"]},{"Key":"the names,","Fragments":["which"]},{"Key":"names, which","Fragments":["are"]},{"Key":"so good","Fragments":["now"]},{"Key":"good now","Fragments":["that"]},{"Key":"implementation has","Fragments":["shifted."]},{"Key":" Only","Fragments":["thing:","nit:","added","nitpick,"]},{"Key":"Only thing:","Fragments":["why"]},{"Key":"thing: why","Fragments":["no"]},{"Key":"why no","Fragments":["match"]},{"Key":"no match","Fragments":["`other`"]},{"Key":"match `other`","Fragments":["explicitly"]},{"Key":"`other` explicitly","Fragments":["in"]},{"Key":"explicitly in","Fragments":["`response_for`."]},{"Key":"in `response_for`.","Fragments":["That"]},{"Key":"`response_for`. That","Fragments":["way"]},{"Key":"That way","Fragments":["you'll","you","when"]},{"Key":"way you'll","Fragments":["catch"]},{"Key":"you'll catch","Fragments":["things"]},{"Key":"catch things","Fragments":["early"]},{"Key":"things early","Fragments":["when"]},{"Key":"early when","Fragments":["`analyze`will"]},{"Key":"when `analyze`will","Fragments":["return"]},{"Key":"`analyze`will return","Fragments":["things"]},{"Key":"return things","Fragments":["that"]},{"Key":"things that","Fragments":["aren't"]},{"Key":"that aren't","Fragments":["handled"]},{"Key":"aren't handled","Fragments":["yet"]},{"Key":"handled yet","Fragments":["there."]},{"Key":" No","Fragments":["need","need","specs,","problems","validation?"]},{"Key":"No need","Fragments":["to","for","for"]},{"Key":"to give","Fragments":["your","`accumulate_tail/3`"]},{"Key":"give your","Fragments":["helper"]},{"Key":"your helper","Fragments":["a"]},{"Key":"helper a","Fragments":["different"]},{"Key":"different name,","Fragments":["two"]},{"Key":"name, two","Fragments":["functions"]},{"Key":"two functions","Fragments":["`f`"]},{"Key":"functions `f`","Fragments":["with"]},{"Key":"`f` with","Fragments":["arity"]},{"Key":"with arity","Fragments":["`a`"]},{"Key":"arity `a`","Fragments":["and"]},{"Key":"`a` and","Fragments":["`b`"]},{"Key":"and `b`","Fragments":["are"]},{"Key":"`b` are","Fragments":["considered"]},{"Key":"are considered","Fragments":["different","to"]},{"Key":"considered different","Fragments":["functions,"]},{"Key":"different functions,","Fragments":["`f/a`"]},{"Key":"functions, `f/a`","Fragments":["and"]},{"Key":"`f/a` and","Fragments":["`f/b`."]},{"Key":"that even","Fragments":["a","non-numeric"]},{"Key":"even a","Fragments":["valid"]},{"Key":"valid typespec?","Fragments":["Don't"]},{"Key":"typespec? Don't","Fragments":["the"]},{"Key":"Don't the","Fragments":["need"]},{"Key":"the need","Fragments":["parens","to","of"]},{"Key":"need parens","Fragments":["in"]},{"Key":"parens in","Fragments":["there?"]},{"Key":"in there?","Fragments":["Also"]},{"Key":"there? Also","Fragments":["you"]},{"Key":"can specify","Fragments":["the","integers"]},{"Key":"specify the","Fragments":["type","correct"]},{"Key":"list as","Fragments":["in","end"]},{"Key":"as in","Fragments":["`list(any())`","`list(A)`.","`valid/1`"]},{"Key":"in `list(any())`","Fragments":["or"]},{"Key":"`list(any())` or","Fragments":["even"]},{"Key":"or even","Fragments":["use"]},{"Key":"even use","Fragments":["typevariables"]},{"Key":"use typevariables","Fragments":["as"]},{"Key":"typevariables as","Fragments":["in"]},{"Key":"in `list(A)`.","Fragments":["Combining"]},{"Key":"`list(A)`. Combining","Fragments":["this"]},{"Key":"Combining this","Fragments":["with"]},{"Key":"an appropriate","Fragments":["type"]},{"Key":"appropriate type","Fragments":["for"]},{"Key":"type for","Fragments":["the"]},{"Key":"the function,","Fragments":["would"]},{"Key":"function, would","Fragments":["make"]},{"Key":"a very","Fragments":["good","long","concise","good","clear","expensive","good","creative"]},{"Key":"very good","Fragments":["typespec!","solution.","name."]},{"Key":"Looks very","Fragments":["clean"]},{"Key":"very clean","Fragments":["and"]},{"Key":"clean and","Fragments":["get","efficient"]},{"Key":"and get","Fragments":["the"]},{"Key":"the job","Fragments":["done."]},{"Key":"job done.","Fragments":["Nice!"]},{"Key":"of matching.","Fragments":["it'll"]},{"Key":"matching. it'll","Fragments":["allow"]},{"Key":"it'll allow","Fragments":["you"]},{"Key":"allow you","Fragments":["to","to"]},{"Key":"add more","Fragments":["clauses","checks"]},{"Key":"more clauses","Fragments":["as"]},{"Key":"clauses as","Fragments":["you"]},{"Key":"you discover","Fragments":["them."]},{"Key":"this pattern","Fragments":["matching","to"]},{"Key":"matching as","Fragments":["well."]},{"Key":"well. I","Fragments":["prefer"]},{"Key":"prefer these","Fragments":["solutions"]},{"Key":"these solutions","Fragments":["over"]},{"Key":"solutions over","Fragments":["the"]},{"Key":"more compact","Fragments":["single","using"]},{"Key":"compact single","Fragments":["boolean"]},{"Key":"single boolean","Fragments":["expression"]},{"Key":"boolean expression","Fragments":["solutions."]},{"Key":"expression solutions.","Fragments":["When"]},{"Key":"solutions. When","Fragments":["I"]},{"Key":"read the","Fragments":["code","contract","rules"]},{"Key":"code the","Fragments":["cases"]},{"Key":"the cases","Fragments":["are","of","on","since"]},{"Key":"cases are","Fragments":["explicit,"]},{"Key":"are explicit,","Fragments":["I"]},{"Key":"explicit, I","Fragments":["like"]},{"Key":" Erlang","Fragments":["pattern-matching","does","excels","can"]},{"Key":"Erlang pattern-matching","Fragments":["seems"]},{"Key":"pattern-matching seems","Fragments":["cool."]},{"Key":"seems cool.","Fragments":["Hoping"]},{"Key":"cool. Hoping","Fragments":["to"]},{"Key":"Hoping to","Fragments":["use"]},{"Key":"to build","Fragments":["a","up","up","up","the","it"]},{"Key":"build a","Fragments":["New","step"]},{"Key":"a New","Fragments":["Kids"]},{"Key":"New Kids","Fragments":["on"]},{"Key":"Kids on","Fragments":["The"]},{"Key":"on The","Fragments":["Block"]},{"Key":"The Block","Fragments":["1-900"]},{"Key":"Block 1-900","Fragments":["number"]},{"Key":"1-900 number","Fragments":["routing"]},{"Key":"number routing","Fragments":["system."]},{"Key":"is way","Fragments":["better"]},{"Key":"way better","Fragments":["to"]},{"Key":"use injection","Fragments":["rather"]},{"Key":"injection rather","Fragments":["than"]},{"Key":"than projection.","Fragments":["A"]},{"Key":"projection. A","Fragments":["`string`"]},{"Key":"A `string`","Fragments":["in"]},{"Key":"`string` in","Fragments":["Erlang"]},{"Key":" to_rna([H|T])","Fragments":["-\u003e","-\u003e"]},{"Key":"to_rna([H|T]) -\u003e","Fragments":["[roll(H)","..."]},{"Key":"-\u003e [roll(H)","Fragments":["|"]},{"Key":"[roll(H) |","Fragments":["to_rna(T)];"]},{"Key":" to_rna([])","Fragments":["-\u003e"]},{"Key":"to_rna([]) -\u003e","Fragments":["[]."]},{"Key":" roll($G)","Fragments":["-\u003e"]},{"Key":"roll($G) -\u003e","Fragments":["$C;"]},{"Key":" roll($C)","Fragments":["-\u003e"]},{"Key":"roll($C) -\u003e","Fragments":["$G;"]},{"Key":" roll($T)","Fragments":["-\u003e"]},{"Key":"roll($T) -\u003e","Fragments":["$A;"]},{"Key":" roll($A)","Fragments":["-\u003e"]},{"Key":"roll($A) -\u003e","Fragments":["$U."]},{"Key":" Several","Fragments":["advantages:"]},{"Key":"* length(Str)","Fragments":["is"]},{"Key":"length(Str) is","Fragments":["O(n)"]},{"Key":"is O(n)","Fragments":["over","which","in"]},{"Key":"O(n) over","Fragments":["the"]},{"Key":"You avoid","Fragments":["++","hd/tl","the"]},{"Key":"avoid ++","Fragments":["which"]},{"Key":"++ which","Fragments":["is"]},{"Key":"is expensive","Fragments":["in"]},{"Key":"expensive in","Fragments":["the"]},{"Key":"the case","Fragments":["where","expression","statement","becomes","of","of","of","statement.","now.","of","of","expression","of","of","of","of","of"]},{"Key":"case where","Fragments":["the"]},{"Key":"where the","Fragments":["front"]},{"Key":"front list","Fragments":["is"]},{"Key":"is large","Fragments":["(it"]},{"Key":"large (it","Fragments":["isn't"]},{"Key":"(it isn't","Fragments":["here)."]},{"Key":"avoid hd/tl","Fragments":["which"]},{"Key":"hd/tl which","Fragments":["are"]},{"Key":"are projection","Fragments":["out"]},{"Key":"projection out","Fragments":["of"]},{"Key":"out of","Fragments":["the","the","the","stack"]},{"Key":"string, and","Fragments":["employ"]},{"Key":"and employ","Fragments":["pattern"]},{"Key":"employ pattern","Fragments":["matching."]},{"Key":"matching. Always","Fragments":["try"]},{"Key":"Always try","Fragments":["to"]},{"Key":"get that","Fragments":["into"]},{"Key":"that into","Fragments":["the"]},{"Key":"the game","Fragments":["if"]},{"Key":"game if","Fragments":["possible."]},{"Key":"the conflation","Fragments":["of"]},{"Key":"conflation of","Fragments":["the"]},{"Key":"the changing","Fragments":["of"]},{"Key":"changing of","Fragments":["the"]},{"Key":"the characters","Fragments":["from","to"]},{"Key":"characters from","Fragments":["the"]},{"Key":"the processing","Fragments":["of"]},{"Key":"processing of","Fragments":["the"]},{"Key":" Further","Fragments":["suggestions:"]},{"Key":"* In","Fragments":["the","Erlang,"]},{"Key":"In the","Fragments":["above","first","current","case","case","case","case","case","case","case","case","case","case"]},{"Key":"above code,","Fragments":["to_rna"]},{"Key":"code, to_rna","Fragments":["is"]},{"Key":"to_rna is","Fragments":["an"]},{"Key":"an instance","Fragments":["of"]},{"Key":"instance of","Fragments":["a"]},{"Key":"a lists:map/2","Fragments":["or"]},{"Key":"lists:map/2 or","Fragments":["a"]},{"Key":"comprehension. Try","Fragments":["changing"]},{"Key":"Try changing","Fragments":["it"]},{"Key":"changing it","Fragments":["to"]},{"Key":"* If","Fragments":["using"]},{"Key":"If using","Fragments":["the"]},{"Key":"comprehension, the","Fragments":["roll/1"]},{"Key":"the roll/1","Fragments":["function"]},{"Key":"roll/1 function","Fragments":["is"]},{"Key":"better described","Fragments":["as"]},{"Key":"described as","Fragments":["an"]},{"Key":"an anonymous","Fragments":["`fun","function."]},{"Key":"anonymous `fun","Fragments":["(...)"]},{"Key":"`fun (...)","Fragments":["-\u003e"]},{"Key":"(...) -\u003e","Fragments":["..."]},{"Key":"-\u003e ...","Fragments":["end`"]},{"Key":"... end`","Fragments":["function"]},{"Key":"end` function","Fragments":["construction."]},{"Key":" Thanks!","Fragments":["Your","Indeed,","I","I"]},{"Key":"Thanks! Your","Fragments":["feedback"]},{"Key":"Your feedback","Fragments":["was"]},{"Key":"feedback was","Fragments":["really"]},{"Key":"was really","Fragments":["helpful","helpful"]},{"Key":"really helpful","Fragments":[":D","for"]},{"Key":"the solution.","Fragments":["It"]},{"Key":"solution. It","Fragments":["is"]},{"Key":"is classically","Fragments":["recursive,"]},{"Key":"classically recursive,","Fragments":["in"]},{"Key":"recursive, in","Fragments":["the"]},{"Key":"the general","Fragments":["case","case.","reader"]},{"Key":"general case","Fragments":["it"]},{"Key":"case it","Fragments":["might","grows","is"]},{"Key":"it might","Fragments":["be","be","be","make","have","not","get","be"]},{"Key":"more space","Fragments":["efficient"]},{"Key":"space efficient","Fragments":["to"]},{"Key":"make this","Fragments":["iterative.","a","tail","a","a"]},{"Key":" At","Fragments":["this","least"]},{"Key":"At this","Fragments":["point,"]},{"Key":"this point,","Fragments":["you"]},{"Key":"point, you","Fragments":["can"]},{"Key":"can get","Fragments":["rid","by"]},{"Key":"get rid","Fragments":["of","of","of","of"]},{"Key":"rid of","Fragments":["the","`lists:filter/2`","the","all"]},{"Key":"recursion in","Fragments":["`to_rna/1`."]},{"Key":"in `to_rna/1`.","Fragments":["If"]},{"Key":"`to_rna/1`. If","Fragments":["you"]},{"Key":"function `lists:map/2`","Fragments":["from"]},{"Key":"`lists:map/2` from","Fragments":["the"]},{"Key":"the lists","Fragments":["module,","entirely;"]},{"Key":"lists module,","Fragments":["you"]},{"Key":"module, you","Fragments":["can"]},{"Key":"call `roll/1`","Fragments":["on"]},{"Key":"`roll/1` on","Fragments":["each"]},{"Key":"on each","Fragments":["element","step","function"]},{"Key":"each element","Fragments":["of","of"]},{"Key":"element of","Fragments":["the","the"]},{"Key":" Another,","Fragments":["perhaps"]},{"Key":"Another, perhaps","Fragments":["even"]},{"Key":"perhaps even","Fragments":["more"]},{"Key":"idiomatic solution","Fragments":["is"]},{"Key":" to_rna(L)","Fragments":["-\u003e"]},{"Key":"to_rna(L) -\u003e","Fragments":["[E"]},{"Key":"-\u003e [E","Fragments":["||"]},{"Key":"[E ||","Fragments":["E"]},{"Key":"|| E","Fragments":["\u003c-"]},{"Key":"E \u003c-","Fragments":["L]."]},{"Key":"This essentially","Fragments":["says:"]},{"Key":"essentially says:","Fragments":["Pick"]},{"Key":"says: Pick","Fragments":["out"]},{"Key":"Pick out","Fragments":["E's"]},{"Key":"out E's","Fragments":["from"]},{"Key":"E's from","Fragments":["L"]},{"Key":"from L","Fragments":["and"]},{"Key":"L and","Fragments":["return"]},{"Key":"and return","Fragments":["a","`{ok,","value"]},{"Key":"of those","Fragments":["E's."]},{"Key":"those E's.","Fragments":["Should"]},{"Key":"E's. Should","Fragments":["be"]},{"Key":"Should be","Fragments":["easily"]},{"Key":"be easily","Fragments":["changed"]},{"Key":"easily changed","Fragments":["into"]},{"Key":"changed into","Fragments":["something"]},{"Key":"into something","Fragments":["which"]},{"Key":"something which","Fragments":["solves"]},{"Key":"which solves","Fragments":["the"]},{"Key":"solves the","Fragments":["problem"]},{"Key":"problem at","Fragments":["hand."]},{"Key":"Ah, that","Fragments":["list"]},{"Key":"that list","Fragments":["comprehension","to"]},{"Key":"a great","Fragments":["idea!","name","saving.","approach"]},{"Key":"great idea!","Fragments":["Thanks"]},{"Key":"idea! Thanks","Fragments":["again"]},{"Key":"Thanks again","Fragments":["for"]},{"Key":"again for","Fragments":["the"]},{"Key":"the help","Fragments":[":D"]},{"Key":"In Erlang,","Fragments":["`$C`"]},{"Key":"Erlang, `$C`","Fragments":["evaluates"]},{"Key":"`$C` evaluates","Fragments":["to"]},{"Key":"evaluates to","Fragments":["the","leap","false."]},{"Key":"for character","Fragments":["C."]},{"Key":"character C.","Fragments":["Thus"]},{"Key":"C. Thus","Fragments":["you"]},{"Key":"Thus you","Fragments":["can"]},{"Key":"can improve","Fragments":["readability","the"]},{"Key":"improve readability","Fragments":["by"]},{"Key":"readability by","Fragments":["writing"]},{"Key":"by writing","Fragments":["`$A`"]},{"Key":"writing `$A`","Fragments":["instead"]},{"Key":"`$A` instead","Fragments":["of"]},{"Key":"* Can","Fragments":["you"]},{"Key":"function tail","Fragments":["recursive"]},{"Key":"tail recursive","Fragments":["to","version?","which","implimentation.","(see","implementation","version","version","function","in","and","and","version?","and","version?","implementation.","function","helper","and","version?","and","version?","which"]},{"Key":"recursive to","Fragments":["avoid"]},{"Key":"avoid building","Fragments":["up"]},{"Key":"building up","Fragments":["a"]},{"Key":"up a","Fragments":["large","bit.","list"]},{"Key":"a large","Fragments":["stack","enough","number"]},{"Key":"large stack","Fragments":["for"]},{"Key":"stack for","Fragments":["long","every"]},{"Key":"long input","Fragments":["sequences?"]},{"Key":"The assignement","Fragments":["on"]},{"Key":"assignement on","Fragments":["L5"]},{"Key":"on L5","Fragments":["is"]},{"Key":"L5 is","Fragments":["not"]},{"Key":"not necessary.","Fragments":["You"]},{"Key":"necessary. You","Fragments":["can"]},{"Key":"function even","Fragments":["more"]},{"Key":"concise by","Fragments":["simply"]},{"Key":"by simply","Fragments":["returning"]},{"Key":"simply returning","Fragments":["`true`"]},{"Key":"returning `true`","Fragments":["for"]},{"Key":"`true` for","Fragments":["that"]},{"Key":"is good","Fragments":["practice","erlang.","otherwise."]},{"Key":"good practice","Fragments":["to","to","to"]},{"Key":"practice to","Fragments":["write","guard","name"]},{"Key":"write specs","Fragments":["for"]},{"Key":"for all","Fragments":["functions","the","uppercase"]},{"Key":"all functions","Fragments":["to","but","but"]},{"Key":"to at","Fragments":["least"]},{"Key":"least document","Fragments":["the"]},{"Key":"document the","Fragments":["expected"]},{"Key":"the expected","Fragments":["types"]},{"Key":"expected types","Fragments":["for"]},{"Key":"types for","Fragments":["functions","dialyzer,","RNA"]},{"Key":"for functions","Fragments":["even"]},{"Key":"functions even","Fragments":["though"]},{"Key":"even though","Fragments":["it","this","this","I","it","there's"]},{"Key":"though it","Fragments":["is","may"]},{"Key":"not required","Fragments":["in"]},{"Key":"required in","Fragments":["Erlang."]},{"Key":"in Erlang.","Fragments":["Just"]},{"Key":"Erlang. Just","Fragments":["a"]},{"Key":"Just a","Fragments":["good"]},{"Key":"good habit","Fragments":["to"]},{"Key":"habit to","Fragments":["get"]},{"Key":"really don't","Fragments":["know","like"]},{"Key":"know why","Fragments":["that","the"]},{"Key":"that line","Fragments":["5"]},{"Key":"line 5","Fragments":["is","instead"]},{"Key":"5 is","Fragments":["there."]},{"Key":"is there.","Fragments":["\u003e.\u003c"]},{"Key":"Yeah, I","Fragments":["haven't","saw","think","don't","agree"]},{"Key":"I haven't","Fragments":["been","tested","decided","really","had","thought","noticed","use"]},{"Key":"haven't been","Fragments":["in"]},{"Key":"been in","Fragments":["the"]},{"Key":"the habit","Fragments":["of","of","of","of","of","of"]},{"Key":"habit of","Fragments":["including","writing","doing","adding","adding","empty","adding"]},{"Key":"of including","Fragments":["spec"]},{"Key":"including spec","Fragments":["but"]},{"Key":"but I've","Fragments":["been"]},{"Key":"trying to.","Fragments":["Thanks"]},{"Key":"to. Thanks","Fragments":["for"]},{"Key":"the heads","Fragments":["up."]},{"Key":" @easton","Fragments":["Much"]},{"Key":"@easton Much","Fragments":["better"]},{"Key":"Much better","Fragments":["however"]},{"Key":"better however","Fragments":["why"]},{"Key":"however why","Fragments":["prevent"]},{"Key":"why prevent","Fragments":["years"]},{"Key":"prevent years","Fragments":["before","before"]},{"Key":"years before","Fragments":["1?","one","one"]},{"Key":"before 1?","Fragments":["Also"]},{"Key":"1? Also","Fragments":["you"]},{"Key":"could add","Fragments":["a","a"]},{"Key":"add a","Fragments":["spec","\"-spec","spec","newline","typespec.","comment","guard","`-spec`"]},{"Key":"spec so","Fragments":["dialyzer"]},{"Key":"so dialyzer","Fragments":["can"]},{"Key":"dialyzer can","Fragments":["find"]},{"Key":"can find","Fragments":["type"]},{"Key":" @hillary,","Fragments":["thank"]},{"Key":"@hillary, thank","Fragments":["you"]},{"Key":"the follow-up","Fragments":["feedback."]},{"Key":"follow-up feedback.","Fragments":["Dialyzer"]},{"Key":"feedback. Dialyzer","Fragments":["is"]},{"Key":"Dialyzer is","Fragments":["on"]},{"Key":"my to-do","Fragments":["once"]},{"Key":"to-do once","Fragments":["I"]},{"Key":"once I","Fragments":["get"]},{"Key":"I get","Fragments":["comfortable","really","the","around","`false`?"]},{"Key":"get comfortable","Fragments":["with"]},{"Key":"comfortable with","Fragments":["\"vanilla\"","them."]},{"Key":"with \"vanilla\"","Fragments":["Erlang."]},{"Key":"The reason","Fragments":["I","is","I","why"]},{"Key":"reason I","Fragments":["prevent","did","opted"]},{"Key":"I prevent","Fragments":["years"]},{"Key":"before one","Fragments":["is","don't"]},{"Key":"that years","Fragments":["before"]},{"Key":"one don't","Fragments":["exist."]},{"Key":"don't exist.","Fragments":["Besides,"]},{"Key":"exist. Besides,","Fragments":["people"]},{"Key":"Besides, people","Fragments":["might"]},{"Key":"people might","Fragments":["think"]},{"Key":"think passing","Fragments":["a"]},{"Key":"passing a","Fragments":["negative","string"]},{"Key":"is how","Fragments":["you"]},{"Key":"you check","Fragments":["a"]},{"Key":"check a","Fragments":["year"]},{"Key":"a year","Fragments":["BC,","is","from"]},{"Key":"year BC,","Fragments":["which"]},{"Key":"BC, which","Fragments":["will"]},{"Key":"which will","Fragments":["result"]},{"Key":"will result","Fragments":["in"]},{"Key":"result in","Fragments":["the","surprisingly","a","O(n)?"]},{"Key":"the wrong","Fragments":["answer.","name.","defined"]},{"Key":"wrong answer.","Fragments":["I'm"]},{"Key":"answer. I'm","Fragments":["guessing"]},{"Key":"I'm guessing","Fragments":["you're"]},{"Key":"guessing you're","Fragments":["trying"]},{"Key":"you're trying","Fragments":["to","to","to"]},{"Key":"tell me","Fragments":["I"]},{"Key":"me I","Fragments":["should"]},{"Key":"I should","Fragments":["fix","probably","have","have"]},{"Key":"should fix","Fragments":["that?"]},{"Key":"think it's","Fragments":["correct.","the","nice","already","good","worth","nice,"]},{"Key":"it's correct.","Fragments":["The"]},{"Key":"correct. The","Fragments":["Gregorian"]},{"Key":"The Gregorian","Fragments":["calendar"]},{"Key":"Gregorian calendar","Fragments":["appeared","and","can"]},{"Key":"calendar appeared","Fragments":["in"]},{"Key":"appeared in","Fragments":["1582"]},{"Key":"in 1582","Fragments":["as","(but"]},{"Key":"1582 as","Fragments":["a"]},{"Key":"a refinement","Fragments":["to"]},{"Key":"refinement to","Fragments":["the"]},{"Key":"the Julian","Fragments":["calendar","calendar"]},{"Key":"Julian calendar","Fragments":["(however","in"]},{"Key":"calendar (however","Fragments":["it"]},{"Key":"(however it","Fragments":["wasn't"]},{"Key":"it wasn't","Fragments":["adopted","going"]},{"Key":"wasn't adopted","Fragments":["at"]},{"Key":"adopted at","Fragments":["the"]},{"Key":"same time","Fragments":["everywhere","with"]},{"Key":"time everywhere","Fragments":["so"]},{"Key":"everywhere so","Fragments":["I"]},{"Key":"I wouldn't","Fragments":["guard","swallow","penalize","export"]},{"Key":"wouldn't guard","Fragments":["on"]},{"Key":"on that","Fragments":["date).","list","is"]},{"Key":"that date).","Fragments":["Technically"]},{"Key":"date). Technically","Fragments":["speaking"]},{"Key":"Technically speaking","Fragments":["calendars"]},{"Key":"speaking calendars","Fragments":["don't"]},{"Key":"calendars don't","Fragments":["usually"]},{"Key":"don't usually","Fragments":["have"]},{"Key":"usually have","Fragments":["a"]},{"Key":"a beginning","Fragments":["or"]},{"Key":"beginning or","Fragments":["end"]},{"Key":"or end","Fragments":["(the"]},{"Key":"end (the","Fragments":["Maya"]},{"Key":"(the Maya","Fragments":["calendar"]},{"Key":"Maya calendar","Fragments":["being"]},{"Key":"calendar being","Fragments":["a"]},{"Key":"being a","Fragments":["notable","separate","number"]},{"Key":"a notable","Fragments":["exception)."]},{"Key":"notable exception).","Fragments":["So"]},{"Key":"exception). So","Fragments":["technically"]},{"Key":"So technically","Fragments":["as"]},{"Key":"technically as","Fragments":["long"]},{"Key":"as long","Fragments":["as","as","at"]},{"Key":"are representing","Fragments":["dates"]},{"Key":"representing dates","Fragments":["as"]},{"Key":"dates as","Fragments":["Anno"]},{"Key":"as Anno","Fragments":["Domini,"]},{"Key":"Anno Domini,","Fragments":["zero"]},{"Key":"Domini, zero","Fragments":["and"]},{"Key":"zero and","Fragments":["negative"]},{"Key":"and negative","Fragments":["values"]},{"Key":"negative values","Fragments":["should"]},{"Key":"values should","Fragments":["be","be"]},{"Key":"be acceptable.","Fragments":["In"]},{"Key":"acceptable. In","Fragments":["my"]},{"Key":"I simply","Fragments":["indicated"]},{"Key":"simply indicated","Fragments":["that"]},{"Key":"indicated that","Fragments":["I"]},{"Key":"I accept","Fragments":["years"]},{"Key":"accept years","Fragments":["only"]},{"Key":"years only","Fragments":["in"]},{"Key":"only in","Fragments":["AD.","the","the","the"]},{"Key":" `-compile(export_all).`","Fragments":["is"]},{"Key":"`-compile(export_all).` is","Fragments":["considered"]},{"Key":"is considered","Fragments":["bad"]},{"Key":"considered bad","Fragments":["style,"]},{"Key":"bad style,","Fragments":["because"]},{"Key":"style, because","Fragments":["it"]},{"Key":"it can","Fragments":["cause","join","be","be","go"]},{"Key":"can cause","Fragments":["a"]},{"Key":"cause a","Fragments":["leak"]},{"Key":"a leak","Fragments":["of"]},{"Key":"leak of","Fragments":["functions"]},{"Key":"of functions","Fragments":["that","and"]},{"Key":"that are","Fragments":["meant"]},{"Key":"are meant","Fragments":["private"]},{"Key":"meant private","Fragments":["on"]},{"Key":"private on","Fragments":["bigger"]},{"Key":"on bigger","Fragments":["projects."]},{"Key":"bigger projects.","Fragments":["AFAIR"]},{"Key":"projects. AFAIR","Fragments":["you"]},{"Key":"AFAIR you","Fragments":["should"]},{"Key":"should get","Fragments":["a"]},{"Key":"get a","Fragments":["warning","list."]},{"Key":"a warning","Fragments":["when"]},{"Key":"warning when","Fragments":["compiling."]},{"Key":"when compiling.","Fragments":["Otherwise"]},{"Key":"compiling. Otherwise","Fragments":["it"]},{"Key":"Otherwise it","Fragments":["is"]},{"Key":"Your spec","Fragments":["would","is"]},{"Key":"spec would","Fragments":["be","allow"]},{"Key":"specific using","Fragments":["non_neg_integer()"]},{"Key":"using non_neg_integer()","Fragments":["instead"]},{"Key":"non_neg_integer() instead","Fragments":["of"]},{"Key":" Was","Fragments":["it"]},{"Key":"Was it","Fragments":["a"]},{"Key":"a conscious","Fragments":["decision"]},{"Key":"conscious decision","Fragments":["not"]},{"Key":"decision not","Fragments":["to"]},{"Key":" @keara,","Fragments":["you're"]},{"Key":"@keara, you're","Fragments":["absolutely"]},{"Key":"you're absolutely","Fragments":["right."]},{"Key":"absolutely right.","Fragments":["It's"]},{"Key":"right. It's","Fragments":["not"]},{"Key":"not that","Fragments":["I"]},{"Key":"have something","Fragments":["against","similar"]},{"Key":"something against","Fragments":["list"]},{"Key":"against list","Fragments":["comprehensions,"]},{"Key":"comprehensions, it's","Fragments":["just"]},{"Key":"it's just","Fragments":["that","nice"]},{"Key":"just that","Fragments":["I","effectively)"]},{"Key":"to forget","Fragments":["I"]},{"Key":"forget I","Fragments":["have","said"]},{"Key":"guards I","Fragments":["added?"]},{"Key":"I added?","Fragments":["How"]},{"Key":"added? How","Fragments":["do"]},{"Key":"feel about","Fragments":["type","this"]},{"Key":"about type","Fragments":["checking"]},{"Key":"type checking","Fragments":["and","in"]},{"Key":"checking and","Fragments":["dynamic"]},{"Key":"and dynamic","Fragments":["languages"]},{"Key":"dynamic languages","Fragments":["in"]},{"Key":"languages in","Fragments":["general?"]},{"Key":"for taking","Fragments":["the","the","the","the"]},{"Key":"to nitpick","Fragments":["my","my","my"]},{"Key":"nitpick my","Fragments":["submission.","solution.","submission."]},{"Key":"I'm by","Fragments":["no"]},{"Key":"by no","Fragments":["means"]},{"Key":"no means","Fragments":["an"]},{"Key":"means an","Fragments":["Erlang","`integer()`"]},{"Key":"guards. Just","Fragments":["keep"]},{"Key":"Just keep","Fragments":["in"]},{"Key":"mind `discard/2`,","Fragments":["`keep/2`,"]},{"Key":"`discard/2`, `keep/2`,","Fragments":["`compose/2`"]},{"Key":"`keep/2`, `compose/2`","Fragments":["and"]},{"Key":"and `negate/1`","Fragments":["will"]},{"Key":"`negate/1` will","Fragments":["throw"]},{"Key":"will throw","Fragments":["a"]},{"Key":"throw a","Fragments":["`function_clause`","runtime","custom"]},{"Key":"a `function_clause`","Fragments":["error"]},{"Key":"`function_clause` error","Fragments":["when"]},{"Key":"error when","Fragments":["the"]},{"Key":"when the","Fragments":["guards","virtual","guard","key","numbers"]},{"Key":"Nice terse","Fragments":["code."]},{"Key":"using higher","Fragments":["order"]},{"Key":"higher order","Fragments":["functions","functions","functions"]},{"Key":"Very compact,","Fragments":["though"]},{"Key":"compact, though","Fragments":["not"]},{"Key":"though not","Fragments":["tail"]},{"Key":"not tail","Fragments":["recursive.","recursive","recursion?","recursive","recursive","recursive,","recursive","recursive","recursive.","recursive"]},{"Key":"tail recursive.","Fragments":["Can","Good","See"]},{"Key":"recursive. Can","Fragments":["you"]},{"Key":"you come","Fragments":["up","up","up","up","up","up","up"]},{"Key":"up with","Fragments":["a","a","a","a","a","O(n²)","this","a","code","a"]},{"Key":"a tail","Fragments":["recursive","recursive","recursive","position","recursive","recursive","recursive","recursive","recursive"]},{"Key":"you're using","Fragments":["guard"]},{"Key":"using guard","Fragments":["clauses"]},{"Key":"clauses on","Fragments":["every"]},{"Key":"every function","Fragments":["head,","call","clause"]},{"Key":"function head,","Fragments":["it"]},{"Key":"head, it","Fragments":["would"]},{"Key":" map_dna_to_rna($G)","Fragments":["-\u003e"]},{"Key":"the matching","Fragments":["you're"]},{"Key":"matching you're","Fragments":["doing"]},{"Key":"doing first","Fragments":["thing"]},{"Key":"first thing","Fragments":["in","that","in"]},{"Key":"thing in","Fragments":["`to_rna`","the"]},{"Key":"in `to_rna`","Fragments":["could"]},{"Key":"`to_rna` could","Fragments":["better"]},{"Key":"could better","Fragments":["be"]},{"Key":"better be","Fragments":["done"]},{"Key":"be done","Fragments":["inside"]},{"Key":"done inside","Fragments":["the"]},{"Key":" Never","Fragments":["considered"]},{"Key":"Never considered","Fragments":["reusing"]},{"Key":"considered reusing","Fragments":["the"]},{"Key":"reusing the","Fragments":["method","count/2"]},{"Key":"the method","Fragments":["name.","that","of"]},{"Key":"method name.","Fragments":["I"]},{"Key":"name. I","Fragments":["see","would"]},{"Key":"it works","Fragments":["now","for"]},{"Key":"works now","Fragments":["due"]},{"Key":"now due","Fragments":["to"]},{"Key":"the power","Fragments":["of","of"]},{"Key":"power of","Fragments":["pattern","2,","2"]},{"Key":"matching. Any","Fragments":["thoughts"]},{"Key":"Any thoughts","Fragments":["on"]},{"Key":"thoughts on","Fragments":["readability?"]},{"Key":"on readability?","Fragments":["Is"]},{"Key":"readability? Is","Fragments":["this"]},{"Key":"this common","Fragments":["in"]},{"Key":"common in","Fragments":["erlang?"]},{"Key":"in erlang?","Fragments":["I'm","My"]},{"Key":"erlang? I'm","Fragments":["new..."]},{"Key":" Alternative","Fragments":["solution","for","solution"]},{"Key":"Alternative solution","Fragments":["using","using"]},{"Key":"solution using","Fragments":["pattern","list"]},{"Key":"in `anagram_checker`.","Fragments":["I'm"]},{"Key":"`anagram_checker`. I'm","Fragments":["not"]},{"Key":"sure whether","Fragments":["I"]},{"Key":"whether I","Fragments":["find"]},{"Key":"this more","Fragments":["or"]},{"Key":"more or","Fragments":["less"]},{"Key":"or less","Fragments":["readable."]},{"Key":"Alternative for","Fragments":["`find`"]},{"Key":"for `find`","Fragments":["using"]},{"Key":"`find` using","Fragments":["list"]},{"Key":"using list","Fragments":["comprehension.","comprehension.","constructors","comprehension","comprehension"]},{"Key":" @heidi","Fragments":["Consider"]},{"Key":"@heidi Consider","Fragments":["adding"]},{"Key":"adding type","Fragments":["specs","spec","spec"]},{"Key":"and guards","Fragments":["to","to","could"]},{"Key":"your exported","Fragments":["functions","function."]},{"Key":"functions (fail","Fragments":["fast)."]},{"Key":"Also this","Fragments":["code"]},{"Key":"code wouldn't","Fragments":["work"]},{"Key":"with Unicode","Fragments":["because"]},{"Key":"Unicode because","Fragments":["you"]},{"Key":"didn't realize","Fragments":["that"]},{"Key":"realize that","Fragments":["a","encoding","I"]},{"Key":"that a","Fragments":["Unicode","feasible,","typical"]},{"Key":"a Unicode","Fragments":["code"]},{"Key":"Unicode code","Fragments":["point"]},{"Key":"code point","Fragments":["isn't"]},{"Key":"point isn't","Fragments":["equal"]},{"Key":"isn't equal","Fragments":["to"]},{"Key":"equal to","Fragments":["a","3."]},{"Key":"to a","Fragments":["user","function","better","variable.)","function","List","computer","list","list","more","polynomial","list"]},{"Key":"a user","Fragments":["perceived"]},{"Key":"user perceived","Fragments":["character","characters."]},{"Key":"perceived character","Fragments":["(a"]},{"Key":"character (a","Fragments":["grapheme)."]},{"Key":"(a grapheme).","Fragments":["So"]},{"Key":"grapheme). So","Fragments":["when"]},{"Key":"you sort","Fragments":["the"]},{"Key":"sort the","Fragments":["code"]},{"Key":"code points","Fragments":["you","for"]},{"Key":"points you","Fragments":["destroy"]},{"Key":"you destroy","Fragments":["information"]},{"Key":"destroy information","Fragments":["about"]},{"Key":"information about","Fragments":["the"]},{"Key":"the user","Fragments":["perceived","that"]},{"Key":"perceived characters.","Fragments":["For"]},{"Key":"characters. For","Fragments":["examples"]},{"Key":"For examples","Fragments":["of"]},{"Key":"examples of","Fragments":["where","how"]},{"Key":"of where","Fragments":["this"]},{"Key":"where this","Fragments":["assumption"]},{"Key":"this assumption","Fragments":["breaks"]},{"Key":"assumption breaks","Fragments":["down"]},{"Key":"breaks down","Fragments":["see"]},{"Key":"down see","Fragments":["Combining"]},{"Key":"see Combining","Fragments":["Diacritical"]},{"Key":"Combining Diacritical","Fragments":["Marks"]},{"Key":"Diacritical Marks","Fragments":["and"]},{"Key":"Marks and","Fragments":["Conjoining"]},{"Key":"and Conjoining","Fragments":["Jamos."]},{"Key":"Conjoining Jamos.","Fragments":["You"]},{"Key":"Jamos. You","Fragments":["should"]},{"Key":"read http://unicode.org/reports/tr29/#Introduction","Fragments":["for"]},{"Key":"http://unicode.org/reports/tr29/#Introduction for","Fragments":["more"]},{"Key":"for more","Fragments":["information","information","statements"]},{"Key":"information on","Fragments":["this.","this."]},{"Key":"In Erlang","Fragments":["it's"]},{"Key":"Erlang it's","Fragments":["a"]},{"Key":"more difficult","Fragments":["to","then"]},{"Key":"difficult to","Fragments":["deal","understand."]},{"Key":"with splitting","Fragments":["by"]},{"Key":"splitting by","Fragments":["grapheme"]},{"Key":"by grapheme","Fragments":["because"]},{"Key":"grapheme because","Fragments":["you"]},{"Key":"function to","Fragments":["do","be","propagate","know"]},{"Key":"do it.","Fragments":["You"]},{"Key":"it. You","Fragments":["can"]},{"Key":"however use","Fragments":["regular"]},{"Key":"use regular","Fragments":["expressions"]},{"Key":"expressions since","Fragments":["they"]},{"Key":"they support","Fragments":["Unicode"]},{"Key":"support Unicode","Fragments":["see"]},{"Key":"Unicode see","Fragments":["`\\X`."]},{"Key":"do some","Fragments":["Unicode","of"]},{"Key":"some Unicode","Fragments":["normalization"]},{"Key":"Unicode normalization","Fragments":["prior"]},{"Key":"normalization prior","Fragments":["to"]},{"Key":"to comparing","Fragments":["the"]},{"Key":"comparing the","Fragments":["sorted"]},{"Key":"the sorted","Fragments":["graphemes","version"]},{"Key":"sorted graphemes","Fragments":["because"]},{"Key":"graphemes because","Fragments":["there"]},{"Key":"than one","Fragments":["way"]},{"Key":"one way","Fragments":["to"]},{"Key":"represent the","Fragments":["same"]},{"Key":"same grapheme","Fragments":["using"]},{"Key":"grapheme using","Fragments":["different"]},{"Key":"using different","Fragments":["code"]},{"Key":"different code","Fragments":["points"]},{"Key":"points for","Fragments":["example","handling"]},{"Key":"example consider","Fragments":["`é`"]},{"Key":"consider `é`","Fragments":["vs"]},{"Key":"`é` vs","Fragments":["`e\\u301`"]},{"Key":"vs `e\\u301`","Fragments":["both"]},{"Key":"`e\\u301` both","Fragments":["displaying"]},{"Key":"both displaying","Fragments":["as"]},{"Key":"displaying as","Fragments":["`é`"]},{"Key":"as `é`","Fragments":["(see"]},{"Key":"`é` (see","Fragments":["http://unicode.org/reports/tr15/"]},{"Key":"(see http://unicode.org/reports/tr15/","Fragments":[")."]},{"Key":"http://unicode.org/reports/tr15/ ).","Fragments":["Now"]},{"Key":"). Now","Fragments":["I"]},{"Key":"Erlang without","Fragments":["using"]},{"Key":"without using","Fragments":["an","map,"]},{"Key":"an external","Fragments":["library"]},{"Key":"external library","Fragments":["and"]},{"Key":"library and","Fragments":["doing"]},{"Key":"and doing","Fragments":["this"]},{"Key":"this manually","Fragments":["is"]},{"Key":"manually is","Fragments":["pretty"]},{"Key":"pretty much","Fragments":["out","unreadable,","optimized"]},{"Key":"much out","Fragments":["of"]},{"Key":"your comments!","Fragments":["I"]},{"Key":"comments! I","Fragments":["added"]},{"Key":"added guards,","Fragments":["but"]},{"Key":"guards, but","Fragments":["I'll"]},{"Key":"but I'll","Fragments":["have","admit","clarify"]},{"Key":"up on","Fragments":["type","it.","for"]},{"Key":"on type","Fragments":["specs"]},{"Key":"As to","Fragments":["the"]},{"Key":"the Unicode","Fragments":["angle,"]},{"Key":"Unicode angle,","Fragments":["I"]},{"Key":"angle, I","Fragments":["am"]},{"Key":"am aware","Fragments":["of"]},{"Key":"aware of","Fragments":["this,","pros/cons"]},{"Key":"of this,","Fragments":["but"]},{"Key":"this, but","Fragments":["I"]},{"Key":"will not","Fragments":["go","be","need","work"]},{"Key":"not go","Fragments":["into"]},{"Key":"into it","Fragments":["because"]},{"Key":"don't want","Fragments":["to","to","to"]},{"Key":"get sidetracked","Fragments":["from"]},{"Key":"sidetracked from","Fragments":["learning"]},{"Key":"from learning","Fragments":["the","erlang"]},{"Key":"learning the","Fragments":["language."]},{"Key":"I suspect","Fragments":["something","a"]},{"Key":"suspect something","Fragments":["like"]},{"Key":"the `group`","Fragments":["function"]},{"Key":"`group` function","Fragments":["already"]},{"Key":"function already","Fragments":["exists"]},{"Key":"already exists","Fragments":["somewhere,"]},{"Key":"exists somewhere,","Fragments":["but"]},{"Key":"somewhere, but","Fragments":["I"]},{"Key":"could not","Fragments":["find"]},{"Key":"not find","Fragments":["it."]},{"Key":"I must","Fragments":["say,"]},{"Key":"must say,","Fragments":["rather"]},{"Key":"say, rather","Fragments":["nice."]},{"Key":"rather nice.","Fragments":["Conceptually,"]},{"Key":"nice. Conceptually,","Fragments":["I"]},{"Key":"Conceptually, I","Fragments":["feel"]},{"Key":"feel `transcode/1`","Fragments":["on"]},{"Key":"`transcode/1` on","Fragments":["line"]},{"Key":"line eight","Fragments":["should"]},{"Key":"eight should","Fragments":["be"]},{"Key":"with uppercase","Fragments":["chars."]},{"Key":"uppercase chars.","Fragments":["I'm"]},{"Key":"chars. I'm","Fragments":["less"]},{"Key":"I'm less","Fragments":["enthusiastic"]},{"Key":"less enthusiastic","Fragments":["about"]},{"Key":"enthusiastic about","Fragments":["the"]},{"Key":"of macros","Fragments":["for"]},{"Key":"macros for","Fragments":["anything","all"]},{"Key":"for anything","Fragments":["else"]},{"Key":"anything else","Fragments":["then"]},{"Key":"else then","Fragments":["magic"]},{"Key":"then magic","Fragments":["numbers,"]},{"Key":"magic numbers,","Fragments":["but"]},{"Key":"numbers, but","Fragments":["I"]},{"Key":"understand that's","Fragments":["very"]},{"Key":"that's very","Fragments":["much"]},{"Key":"very much","Fragments":["a","for","in"]},{"Key":"much a","Fragments":["personal","fan"]},{"Key":"a personal","Fragments":["thing."]},{"Key":"be wrong,","Fragments":["I"]},{"Key":"haven't tested","Fragments":["it,"]},{"Key":"tested it,","Fragments":["but"]},{"Key":"it, but","Fragments":["I","you","I"]},{"Key":"think there's","Fragments":["a","a"]},{"Key":"there's a","Fragments":["little","way","reasonable","lot"]},{"Key":"little bug","Fragments":["in"]},{"Key":"in `group/2`","Fragments":["when"]},{"Key":"`group/2` when","Fragments":["you"]},{"Key":"you pass","Fragments":["in","is","in","it"]},{"Key":"pass in","Fragments":["an","a"]},{"Key":" @gia","Fragments":["I"]},{"Key":"@gia I","Fragments":["wanted"]},{"Key":"to normalize","Fragments":["the"]},{"Key":"normalize the","Fragments":["input"]},{"Key":"input as","Fragments":["early","`Ls`.","`float()`"]},{"Key":"as early","Fragments":["as","as"]},{"Key":"early as","Fragments":["possible","possible."]},{"Key":"to cut","Fragments":["down"]},{"Key":"cut down","Fragments":["on"]},{"Key":"down on","Fragments":["the"]},{"Key":"number of","Fragments":["cases","minutes","zeroes","cases","cases","words","multiples","times","operations","operations","lower/upper","memory"]},{"Key":"of cases","Fragments":["in","in","essentially"]},{"Key":"cases in","Fragments":["inner","lines"]},{"Key":"in inner","Fragments":["functions"]},{"Key":"inner functions","Fragments":["on"]},{"Key":"functions on","Fragments":["the"]},{"Key":"the basis","Fragments":["that"]},{"Key":"basis that","Fragments":["this"]},{"Key":"efficient (at","Fragments":["least"]},{"Key":"(at least","Fragments":["in","the","for","conceptually)"]},{"Key":"least in","Fragments":["code","Scheme,"]},{"Key":"in code","Fragments":["size"]},{"Key":"code size","Fragments":["if"]},{"Key":"size if","Fragments":["not"]},{"Key":"if not","Fragments":["in","more,"]},{"Key":"in run","Fragments":["time)."]},{"Key":" Passing","Fragments":["an"]},{"Key":"Passing an","Fragments":["empty"]},{"Key":"empty string","Fragments":["to"]},{"Key":"to `group/2`","Fragments":["returns","at"]},{"Key":"`group/2` returns","Fragments":["`[[]]`,"]},{"Key":"returns `[[]]`,","Fragments":["i.e.,"]},{"Key":"`[[]]`, i.e.,","Fragments":["a"]},{"Key":"i.e., a","Fragments":["list"]},{"Key":"empty string.","Fragments":["One"]},{"Key":"string. One","Fragments":["could"]},{"Key":"could argue","Fragments":["that","the"]},{"Key":"argue that","Fragments":["it"]},{"Key":"should return","Fragments":["an","false"]},{"Key":"return an","Fragments":["empty"]},{"Key":"avoid returning","Fragments":["empty"]},{"Key":"returning empty","Fragments":["groups,"]},{"Key":"empty groups,","Fragments":["but"]},{"Key":"groups, but","Fragments":["I"]},{"Key":"feel that","Fragments":["the","using"]},{"Key":"current behaviour","Fragments":["is"]},{"Key":"behaviour is","Fragments":["consistent,"]},{"Key":"is consistent,","Fragments":["too,"]},{"Key":"consistent, too,","Fragments":["because"]},{"Key":"too, because","Fragments":["if"]},{"Key":"because if","Fragments":["I"]},{"Key":"am passing","Fragments":["a"]},{"Key":"string -","Fragments":["any","to"]},{"Key":"- any","Fragments":["string"]},{"Key":"any string","Fragments":["-"]},{"Key":"- to","Fragments":["`group/2`"]},{"Key":"`group/2` at","Fragments":["least"]},{"Key":"least one","Fragments":["string"]},{"Key":"one string","Fragments":["should","operation"]},{"Key":"string should","Fragments":["come"]},{"Key":"should come","Fragments":["out"]},{"Key":"come out","Fragments":["the"]},{"Key":"other end.","Fragments":["Both"]},{"Key":"end. Both","Fragments":["behaviours"]},{"Key":"Both behaviours","Fragments":["work"]},{"Key":"behaviours work","Fragments":["for"]},{"Key":"for `encode/1`,","Fragments":["so"]},{"Key":"`encode/1`, so","Fragments":["it"]},{"Key":"not really","Fragments":["matter.","matter,","matter","matter"]},{"Key":"probably figure","Fragments":["out"]},{"Key":"out list","Fragments":["comprehensions."]},{"Key":" Went","Fragments":["to"]},{"Key":"Went to","Fragments":["some"]},{"Key":"to some","Fragments":["trouble","external","sort","what"]},{"Key":"some trouble","Fragments":["to"]},{"Key":"trouble to","Fragments":["avoid"]},{"Key":"avoid duplication","Fragments":["of"]},{"Key":"duplication of","Fragments":["string"]},{"Key":"of string","Fragments":["parts"]},{"Key":"string parts","Fragments":["(for"]},{"Key":"parts (for","Fragments":["the"]},{"Key":"(for the","Fragments":["exercise)."]},{"Key":"Is there","Fragments":["really","a","a","any","any","a","a"]},{"Key":"there really","Fragments":["no"]},{"Key":"really no","Fragments":["such"]},{"Key":"no such","Fragments":["thing"]},{"Key":"such thing","Fragments":["as"]},{"Key":"thing as","Fragments":["the"]},{"Key":"the `range`","Fragments":["function"]},{"Key":"`range` function","Fragments":["in"]},{"Key":"function in","Fragments":["the","this"]},{"Key":"Erlang standard","Fragments":["library?"]},{"Key":"It took","Fragments":["me"]},{"Key":"took me","Fragments":["a"]},{"Key":"while to","Fragments":["find"]},{"Key":"* Implemented","Fragments":["buffer"]},{"Key":"Implemented buffer","Fragments":["as"]},{"Key":"separate process","Fragments":["that"]},{"Key":"process that","Fragments":["uses"]},{"Key":"that uses","Fragments":["a","an","the"]},{"Key":"uses a","Fragments":["queue","pattern","minimum"]},{"Key":"a queue","Fragments":["internally.","with"]},{"Key":"* Length","Fragments":["is"]},{"Key":"Length is","Fragments":["tracked"]},{"Key":"is tracked","Fragments":["manually"]},{"Key":"tracked manually","Fragments":["because"]},{"Key":"manually because","Fragments":["queue"]},{"Key":"because queue","Fragments":["does"]},{"Key":"queue does","Fragments":["not"]},{"Key":"not provide","Fragments":["an"]},{"Key":"provide an","Fragments":["O(n)"]},{"Key":"O(n) length","Fragments":["function."]},{"Key":"* Apparently,","Fragments":["`spawn/3`"]},{"Key":"Apparently, `spawn/3`","Fragments":["only"]},{"Key":"`spawn/3` only","Fragments":["works"]},{"Key":"works for","Fragments":["exported","my","now"]},{"Key":"exported functions,","Fragments":["which"]},{"Key":"functions, which","Fragments":["would"]},{"Key":"which would","Fragments":["require","return"]},{"Key":"would require","Fragments":["me","changing","that"]},{"Key":"require me","Fragments":["to"]},{"Key":"to expose","Fragments":["`buffer_service`."]},{"Key":"expose `buffer_service`.","Fragments":["The"]},{"Key":"`buffer_service`. The","Fragments":["only"]},{"Key":"only way","Fragments":["around","I"]},{"Key":"around this","Fragments":["seems"]},{"Key":"this seems","Fragments":["to","unnecessary"]},{"Key":"seems to","Fragments":["be","be","imply"]},{"Key":"use `spawn/1`","Fragments":["on"]},{"Key":"`spawn/1` on","Fragments":["`buffer_service_init/0`"]},{"Key":"on `buffer_service_init/0`","Fragments":["and"]},{"Key":"`buffer_service_init/0` and","Fragments":["to"]},{"Key":"and to","Fragments":["pass"]},{"Key":"to pass","Fragments":["the","a","the","around"]},{"Key":"the buffer","Fragments":["size"]},{"Key":"buffer size","Fragments":["in"]},{"Key":"size in","Fragments":["afterwards."]},{"Key":" Experimented","Fragments":["with"]},{"Key":"Experimented with","Fragments":["records."]},{"Key":"with records.","Fragments":["Storing"]},{"Key":"records. Storing","Fragments":["the"]},{"Key":"Storing the","Fragments":["time"]},{"Key":"time as","Fragments":["a"]},{"Key":"a simple","Fragments":["number","transposition","cons"]},{"Key":"simple number","Fragments":["of"]},{"Key":"of minutes","Fragments":["would"]},{"Key":"minutes would","Fragments":["simplify"]},{"Key":"would simplify","Fragments":["things","and"]},{"Key":"simplify things","Fragments":["enormously,","quite"]},{"Key":"things enormously,","Fragments":["no"]},{"Key":"enormously, no","Fragments":["doubt."]},{"Key":" Found","Fragments":["out"]},{"Key":"Found out","Fragments":["how"]},{"Key":"out how","Fragments":["to","it"]},{"Key":" @esperanza","Fragments":["Good"]},{"Key":"@esperanza Good","Fragments":["idea"]},{"Key":"Good idea","Fragments":["using"]},{"Key":"idea using","Fragments":["a"]},{"Key":"a closure","Fragments":["for","to"]},{"Key":"closure for","Fragments":["this."]},{"Key":" Added","Fragments":["typespecs.","a"]},{"Key":" Isn't","Fragments":["the"]},{"Key":"Isn't the","Fragments":["clause"]},{"Key":"the clause","Fragments":["on","currently"]},{"Key":"line 14","Fragments":["duplicating"]},{"Key":"14 duplicating","Fragments":["a"]},{"Key":"duplicating a","Fragments":["failed"]},{"Key":"a failed","Fragments":["pattern"]},{"Key":"failed pattern","Fragments":["match?"]},{"Key":"pattern match?","Fragments":["I"]},{"Key":"match? I","Fragments":["think"]},{"Key":"problem makes","Fragments":["more"]},{"Key":"makes more","Fragments":["sense"]},{"Key":"more sense","Fragments":["as"]},{"Key":"sense as","Fragments":["simple"]},{"Key":"simple map","Fragments":["to"]},{"Key":"map to","Fragments":["a"]},{"Key":"function like","Fragments":["`transcribe`"]},{"Key":"like `transcribe`","Fragments":["which"]},{"Key":"`transcribe` which","Fragments":["uses"]},{"Key":"which uses","Fragments":["a"]},{"Key":"a pattern","Fragments":["to"]},{"Key":"pattern to","Fragments":["select","extract","a"]},{"Key":"to select","Fragments":["the"]},{"Key":"select the","Fragments":["correct","right"]},{"Key":"correct return","Fragments":["value."]},{"Key":" You'd","Fragments":["be"]},{"Key":"You'd be","Fragments":["able"]},{"Key":"reduce your","Fragments":["code"]},{"Key":"code by","Fragments":["implementing"]},{"Key":"by implementing","Fragments":["```list"]},{"Key":"implementing ```list","Fragments":["comprehensions```."]},{"Key":"You may","Fragments":["think"]},{"Key":"may think","Fragments":["about"]},{"Key":"about making","Fragments":["this","it"]},{"Key":"making this","Fragments":["tail"]},{"Key":"this tail","Fragments":["call","recursive."]},{"Key":"tail call","Fragments":["recursive.","recursion,"]},{"Key":"call recursive.","Fragments":["The"]},{"Key":"recursive. The","Fragments":["way"]},{"Key":"you wrote","Fragments":["it","it,"]},{"Key":"wrote it","Fragments":["the"]},{"Key":"it the","Fragments":["VM"]},{"Key":"the VM","Fragments":["has"]},{"Key":"VM has","Fragments":["to"]},{"Key":"keep a","Fragments":["stack"]},{"Key":"a stack","Fragments":["for","trace"]},{"Key":"call and","Fragments":["has"]},{"Key":"and has","Fragments":["to"]},{"Key":"create lots","Fragments":["of"]},{"Key":"lots of","Fragments":["intermediate","places)"]},{"Key":"of intermediate","Fragments":["lists"]},{"Key":"intermediate lists","Fragments":["to","is","grow","in"]},{"Key":"lists to","Fragments":["before"]},{"Key":"to before","Fragments":["it"]},{"Key":"before it","Fragments":["can","gets"]},{"Key":"can join","Fragments":["them"]},{"Key":"join them","Fragments":["into"]},{"Key":"them into","Fragments":["the"]},{"Key":"To implement","Fragments":["tail"]},{"Key":"implement tail","Fragments":["call"]},{"Key":"call recursion,","Fragments":["a"]},{"Key":"recursion, a","Fragments":["function"]},{"Key":"call has","Fragments":["to"]},{"Key":"last expression","Fragments":["in","to"]},{"Key":"To do","Fragments":["this,"]},{"Key":"do this,","Fragments":["you"]},{"Key":"this, you","Fragments":["typically"]},{"Key":"you typically","Fragments":["add"]},{"Key":"typically add","Fragments":["an"]},{"Key":"add an","Fragments":["extra"]},{"Key":"an extra","Fragments":["function","function","param."]},{"Key":"extra function","Fragments":["parameter","clause","head:"]},{"Key":"function parameter","Fragments":["to"]},{"Key":"to carry","Fragments":["the"]},{"Key":"carry the","Fragments":["result"]},{"Key":"result for","Fragments":["you:","each"]},{"Key":" accumulate(Fn,","Fragments":["[H|T],","T,"]},{"Key":"accumulate(Fn, [H|T],","Fragments":["Result)"]},{"Key":"[H|T], Result)","Fragments":["-\u003e"]},{"Key":"accumulate(Fn, T,","Fragments":["Result"]},{"Key":"T, Result","Fragments":["++"]},{"Key":"Result ++","Fragments":["Fn(H))."]},{"Key":"I'll let","Fragments":["you"]},{"Key":"let you","Fragments":["figure"]},{"Key":"you figure","Fragments":["out"]},{"Key":"rest (and","Fragments":["that"]},{"Key":"(and that","Fragments":["last"]},{"Key":"that last","Fragments":["line","catch-all"]},{"Key":"last line","Fragments":["can"]},{"Key":"line can","Fragments":["also"]},{"Key":"can also","Fragments":["be"]},{"Key":"also be","Fragments":["improved)","exported.","a"]},{"Key":" can","Fragments":["you"]},{"Key":"can you","Fragments":["point","modify","post","point"]},{"Key":"you point","Fragments":["me","me"]},{"Key":"point me","Fragments":["at","to"]},{"Key":"me at","Fragments":["documentation"]},{"Key":"at documentation","Fragments":["for"]},{"Key":"documentation for","Fragments":["`spec`?"]},{"Key":"for `spec`?","Fragments":["Like"]},{"Key":"`spec`? Like","Fragments":["to"]},{"Key":"Like to","Fragments":["read"]},{"Key":"on it.","Fragments":["Its"]},{"Key":"it. Its","Fragments":["new"]},{"Key":"Its new","Fragments":["to"]},{"Key":"new to","Fragments":["me.","Erlang,","Erlang,","erlang.","Erlang","Erlang,"]},{"Key":" Yup","Fragments":["[Erlang"]},{"Key":"Yup [Erlang","Fragments":["reference"]},{"Key":"[Erlang reference","Fragments":["section"]},{"Key":"reference section","Fragments":["7.5"]},{"Key":"section 7.5","Fragments":["Specifications"]},{"Key":"7.5 Specifications","Fragments":["for"]},{"Key":"Specifications for","Fragments":["Functions](http://erlang.org/doc/reference_manual/typespec.html#id78926)"]},{"Key":"Also Learn","Fragments":["You"]},{"Key":"Learn You","Fragments":["Some","Some"]},{"Key":"You Some","Fragments":["Erlang","Erlang","Erlang"]},{"Key":"Some Erlang","Fragments":["for","so","For"]},{"Key":"Erlang for","Fragments":["Great"]},{"Key":"for Great","Fragments":["Good"]},{"Key":"Great Good","Fragments":["has"]},{"Key":"Good has","Fragments":["a"]},{"Key":"a chapter","Fragments":["[Type"]},{"Key":"chapter [Type","Fragments":["Specifications"]},{"Key":"[Type Specifications","Fragments":["and"]},{"Key":"Specifications and","Fragments":["Erlang](http://learnyousomeerlang.com/dialyzer)"]},{"Key":" @joesph","Fragments":["thanks!"]},{"Key":" Using","Fragments":["tail","list","function","`io_lib:format/2`","a","cons","erlang"]},{"Key":"Using tail","Fragments":["recursion"]},{"Key":"recursion as","Fragments":["suggested","seen"]},{"Key":"as suggested","Fragments":["by","use"]},{"Key":"suggested by","Fragments":["@tiara."]},{"Key":"with this","Fragments":["solution,","is","myself","class","problem"]},{"Key":"this solution,","Fragments":["but","but"]},{"Key":"but there","Fragments":["is"]},{"Key":"a convention","Fragments":["that"]},{"Key":"convention that","Fragments":["would"]},{"Key":"would order","Fragments":["these"]},{"Key":"order these","Fragments":["functions"]},{"Key":"these functions","Fragments":["differently."]},{"Key":"The exported","Fragments":["accumulate/2"]},{"Key":"exported accumulate/2","Fragments":["first"]},{"Key":"The base","Fragments":["case"]},{"Key":"base case","Fragments":["that","listed"]},{"Key":"case that","Fragments":["is","clarity","have"]},{"Key":"is currently","Fragments":["line","scoped."]},{"Key":"currently line","Fragments":["7"]},{"Key":"line 7","Fragments":["next"]},{"Key":" Then","Fragments":["the"]},{"Key":"Then the","Fragments":["clause"]},{"Key":"clause currently","Fragments":["on"]},{"Key":"currently on","Fragments":["line"]},{"Key":"a had-fast","Fragments":["rule,"]},{"Key":"had-fast rule,","Fragments":["but"]},{"Key":"rule, but","Fragments":["is"]},{"Key":"but is","Fragments":["most","a","much"]},{"Key":"is most","Fragments":["often"]},{"Key":"most often","Fragments":["what","in"]},{"Key":"often what","Fragments":["one"]},{"Key":"what one","Fragments":["would"]},{"Key":"one would","Fragments":["see.","like"]},{"Key":" Unfortunately,","Fragments":["the"]},{"Key":"Unfortunately, the","Fragments":["test"]},{"Key":"test cases","Fragments":["impose","rely","specify"]},{"Key":"cases impose","Fragments":["an"]},{"Key":"impose an","Fragments":["order"]},{"Key":"an order","Fragments":["on"]},{"Key":"order on","Fragments":["the"]},{"Key":"list returned","Fragments":["by"]},{"Key":"returned by","Fragments":["`nucleotide_counts`,"]},{"Key":"by `nucleotide_counts`,","Fragments":["so"]},{"Key":"`nucleotide_counts`, so","Fragments":["I"]},{"Key":"I cannot","Fragments":["simply"]},{"Key":"cannot simply","Fragments":["use"]},{"Key":"simply use","Fragments":["`orddict`."]},{"Key":" big","Fragments":["fan"]},{"Key":"big fan","Fragments":["of","of"]},{"Key":"the foldl.","Fragments":["my"]},{"Key":"foldl. my","Fragments":["attempt"]},{"Key":"my attempt","Fragments":["iterates"]},{"Key":"attempt iterates","Fragments":["multiple"]},{"Key":"iterates multiple","Fragments":["times"]},{"Key":"multiple times","Fragments":["over"]},{"Key":"times over","Fragments":["sequence."]},{"Key":"is so","Fragments":["much","trivial","*rarely*"]},{"Key":"much shorter","Fragments":["than"]},{"Key":"shorter than","Fragments":["mine.","my"]},{"Key":"than mine.","Fragments":["After","But"]},{"Key":"mine. After","Fragments":["reading"]},{"Key":"After reading","Fragments":["yours","this","[section"]},{"Key":"reading yours","Fragments":["I"]},{"Key":"yours I","Fragments":["could"]},{"Key":"could actually","Fragments":["understand","start"]},{"Key":"actually understand","Fragments":["the"]},{"Key":"the boolean","Fragments":["logic.","in"]},{"Key":"boolean logic.","Fragments":["It"]},{"Key":"logic. It","Fragments":["was"]},{"Key":"It was","Fragments":["very"]},{"Key":"was very","Fragments":["hard"]},{"Key":"very hard","Fragments":["for"]},{"Key":"hard for","Fragments":["me"]},{"Key":"to mentally","Fragments":["parse"]},{"Key":"mentally parse","Fragments":["the"]},{"Key":"parse the","Fragments":["except"]},{"Key":"the except","Fragments":["followed"]},{"Key":"except followed","Fragments":["by"]},{"Key":"followed by","Fragments":["unless","the"]},{"Key":"by unless","Fragments":["in"]},{"Key":"unless in","Fragments":["the"]},{"Key":"is clearly","Fragments":["good","enough."]},{"Key":"clearly good","Fragments":["Erlang"]},{"Key":"good Erlang","Fragments":["code,"]},{"Key":"Erlang code,","Fragments":["but"]},{"Key":"code, but","Fragments":["I","the"]},{"Key":"if one","Fragments":["were"]},{"Key":"one were","Fragments":["interested"]},{"Key":"were interested","Fragments":["in"]},{"Key":"interested in","Fragments":["readability,","capturing,","other","an"]},{"Key":"in readability,","Fragments":["or"]},{"Key":"readability, or","Fragments":["telling"]},{"Key":"or telling","Fragments":["a"]},{"Key":"telling a","Fragments":["story"]},{"Key":"a story","Fragments":["as"]},{"Key":"story as","Fragments":["it"]},{"Key":"it were,","Fragments":["if"]},{"Key":"were, if","Fragments":["there"]},{"Key":"if there","Fragments":["might","were","isn't","was","was"]},{"Key":"there might","Fragments":["be"]},{"Key":"a slightly","Fragments":["less"]},{"Key":"slightly less","Fragments":["compact"]},{"Key":"less compact","Fragments":["implementation..."]},{"Key":"compact implementation...","Fragments":["perhaps"]},{"Key":"implementation... perhaps","Fragments":["that"]},{"Key":"perhaps that","Fragments":["would"]},{"Key":"be just","Fragments":["overkill,"]},{"Key":"just overkill,","Fragments":["though."]},{"Key":"As written","Fragments":["the"]},{"Key":"written the","Fragments":["`leap_year`"]},{"Key":"the `leap_year`","Fragments":["function"]},{"Key":"`leap_year` function","Fragments":["basically"]},{"Key":"function basically","Fragments":["serves"]},{"Key":"basically serves","Fragments":["no"]},{"Key":"serves no","Fragments":["purpose."]},{"Key":"no purpose.","Fragments":["I"]},{"Key":"purpose. I","Fragments":["would"]},{"Key":"simplify and","Fragments":["write"]},{"Key":"and write","Fragments":["it"]},{"Key":"It's a","Fragments":["good","bad","clever"]},{"Key":"get in","Fragments":["the"]},{"Key":"writing function","Fragments":["specs"]},{"Key":"function specs","Fragments":["even"]},{"Key":"even for","Fragments":["simple","10"]},{"Key":"for simple","Fragments":["functions"]},{"Key":"simple functions","Fragments":["like"]},{"Key":"like this.","Fragments":["They","Is"]},{"Key":"this. They","Fragments":["serve"]},{"Key":"They serve","Fragments":["as"]},{"Key":"as nice","Fragments":["documentation"]},{"Key":"nice documentation","Fragments":["of"]},{"Key":"documentation of","Fragments":["what"]},{"Key":"of what","Fragments":["types","would","I"]},{"Key":"what types","Fragments":["you"]},{"Key":"types you","Fragments":["intend"]},{"Key":"you intend","Fragments":["for"]},{"Key":"intend for","Fragments":["the"]},{"Key":"and if","Fragments":["you"]},{"Key":"get used","Fragments":["to"]},{"Key":"to doing","Fragments":["it"]},{"Key":"it then","Fragments":["you"]},{"Key":"then you","Fragments":["will"]},{"Key":"will prepared","Fragments":["to"]},{"Key":"prepared to","Fragments":["run"]},{"Key":"to run","Fragments":["dialyzer"]},{"Key":"run dialyzer","Fragments":["to"]},{"Key":"dialyzer to","Fragments":["help"]},{"Key":"help you","Fragments":["find"]},{"Key":"find bugs","Fragments":["when"]},{"Key":"bugs when","Fragments":["you"]},{"Key":"start a","Fragments":["real"]},{"Key":"a real","Fragments":["code"]},{"Key":"In retrospect,","Fragments":["I","I"]},{"Key":"retrospect, I","Fragments":["think","think"]},{"Key":"that `total/0`","Fragments":["can"]},{"Key":"`total/0` can","Fragments":["just"]},{"Key":"just call","Fragments":["`total/2`"]},{"Key":"call `total/2`","Fragments":["directly"]},{"Key":"`total/2` directly","Fragments":["with"]},{"Key":"directly with","Fragments":["64,"]},{"Key":"with 64,","Fragments":["and"]},{"Key":"64, and","Fragments":["0"]},{"Key":"and 0","Fragments":["as"]},{"Key":"0 as","Fragments":["arguments."]},{"Key":"For integers","Fragments":["`trunc(math:pow(2,","`trunc(math:pow(2,"]},{"Key":"integers `trunc(math:pow(2,","Fragments":["X))","X))"]},{"Key":"`trunc(math:pow(2, X))","Fragments":["=:=","=:="]},{"Key":"X)) =:=","Fragments":["1","1"]},{"Key":"=:= 1","Fragments":["bsl","bsl"]},{"Key":"1 bsl","Fragments":["X`","X`"]},{"Key":"X` holds","Fragments":["and","and"]},{"Key":"holds and","Fragments":["should","should"]},{"Key":"and should","Fragments":["be","be"]},{"Key":"be much","Fragments":["faster.","faster.","faster","more","simpler","nicer","more"]},{"Key":"* As","Fragments":["for","for"]},{"Key":"for `square/1`","Fragments":["there","there"]},{"Key":"`square/1` there","Fragments":["is","is"]},{"Key":"a closed","Fragments":["form","form"]},{"Key":"closed form","Fragments":["solution","solution","solutions"]},{"Key":"form solution","Fragments":["for","for"]},{"Key":"solution for","Fragments":["`total/0`","`total/0`"]},{"Key":"for `total/0`","Fragments":["available.","available."]},{"Key":"This feels","Fragments":["like"]},{"Key":"like an","Fragments":["imperative","attempt"]},{"Key":"an imperative","Fragments":["approach."]},{"Key":"imperative approach.","Fragments":["Instead"]},{"Key":"approach. Instead","Fragments":["of"]},{"Key":"using substr/3","Fragments":["think"]},{"Key":"substr/3 think","Fragments":["about"]},{"Key":"using pattern-matching","Fragments":["in"]},{"Key":"pattern-matching in","Fragments":["the","the"]},{"Key":"the function-clauses","Fragments":["combined"]},{"Key":"function-clauses combined","Fragments":["with"]},{"Key":"combined with","Fragments":["an"]},{"Key":"an accumulator/iterative","Fragments":["pattern"]},{"Key":"accumulator/iterative pattern","Fragments":["to"]},{"Key":"to extract","Fragments":["and","digits."]},{"Key":"extract and","Fragments":["match"]},{"Key":"and match","Fragments":["on"]},{"Key":"match on","Fragments":["the","them","`$G`,","specific"]},{"Key":" Yes.","Fragments":["It's"]},{"Key":"Yes. It's","Fragments":["very"]},{"Key":"It's very","Fragments":["bad"]},{"Key":"very bad","Fragments":["code"]},{"Key":"bad code","Fragments":["i"]},{"Key":"code i","Fragments":["think."]},{"Key":"I'm newbie","Fragments":["in"]},{"Key":"newbie in","Fragments":["erlang."]},{"Key":"in erlang.","Fragments":["Now"]},{"Key":"erlang. Now","Fragments":["i'm"]},{"Key":"Now i'm","Fragments":["using"]},{"Key":"i'm using","Fragments":["map()"]},{"Key":" Show","Fragments":["us"]},{"Key":"Show us","Fragments":["the"]},{"Key":"us the","Fragments":["version"]},{"Key":"the version","Fragments":["with","of"]},{"Key":"version with","Fragments":["map!"]},{"Key":"My first","Fragments":["version"]},{"Key":"first version","Fragments":["did"]},{"Key":"version did","Fragments":["not"]},{"Key":"did not","Fragments":["use","want","take","put","even","know"]},{"Key":"the macros,","Fragments":["but"]},{"Key":"macros, but","Fragments":["in"]},{"Key":"the interest","Fragments":["of"]},{"Key":"interest of","Fragments":["readability"]},{"Key":"of readability","Fragments":["I","-"]},{"Key":"readability I","Fragments":["created"]},{"Key":"I created","Fragments":["the"]},{"Key":"macros because","Fragments":["I"]},{"Key":"thought they","Fragments":["made"]},{"Key":"they made","Fragments":["the"]},{"Key":"the readability","Fragments":["of","here;"]},{"Key":"readability of","Fragments":["the"]},{"Key":"the *intent*","Fragments":["of"]},{"Key":"*intent* of","Fragments":["the"]},{"Key":"code more","Fragments":["clear","idiomatic.","Erlang-y?"]},{"Key":"would use","Fragments":["macros"]},{"Key":"use macros","Fragments":["for"]},{"Key":"the conditional","Fragments":["checks"]},{"Key":"conditional checks","Fragments":["or","and"]},{"Key":"checks or","Fragments":["none"]},{"Key":"or none","Fragments":["of"]},{"Key":"none of","Fragments":["them."]},{"Key":"of them.","Fragments":["Also,"]},{"Key":"them. Also,","Fragments":["if"]},{"Key":"Also, if","Fragments":["you"]},{"Key":"you implement","Fragments":["the"]},{"Key":"implement the","Fragments":["condition","mapping"]},{"Key":"the condition","Fragments":["checks"]},{"Key":"condition checks","Fragments":["in"]},{"Key":"checks in","Fragments":["the"]},{"Key":"right order","Fragments":["you"]},{"Key":"order you","Fragments":["can"]},{"Key":"clarity a","Fragments":["bit"]},{"Key":"bit using","Fragments":["guarded"]},{"Key":"using guarded","Fragments":["function"]},{"Key":"guarded function","Fragments":["clauses","clauses.","clauses"]},{"Key":"clauses or","Fragments":["`case`"]},{"Key":"or `case`","Fragments":["clauses"]},{"Key":"`case` clauses","Fragments":["that"]},{"Key":"clauses that","Fragments":["each"]},{"Key":"that each","Fragments":["check"]},{"Key":"each check","Fragments":["only"]},{"Key":"check only","Fragments":["a"]},{"Key":"single condition.","Fragments":["I"]},{"Key":"condition. I","Fragments":["prefer"]},{"Key":"prefer the","Fragments":["function","tail","closed","way"]},{"Key":"clause option","Fragments":["in"]},{"Key":"option in","Fragments":["my"]},{"Key":"my code,","Fragments":["but"]},{"Key":"of `case`","Fragments":["is","in"]},{"Key":"`case` is","Fragments":["perfectly","just"]},{"Key":"is perfectly","Fragments":["acceptable"]},{"Key":"perfectly acceptable","Fragments":["too."]},{"Key":"I hear","Fragments":["you,"]},{"Key":"hear you,","Fragments":["@elva"]},{"Key":"you, @elva","Fragments":[","]},{"Key":"@elva ,","Fragments":["but"]},{"Key":", but","Fragments":["I"]},{"Key":"I respectfully","Fragments":["don't"]},{"Key":"respectfully don't","Fragments":["totally"]},{"Key":"don't totally","Fragments":["agree."]},{"Key":"totally agree.","Fragments":["I"]},{"Key":"agree. I","Fragments":["have"]},{"Key":"have seen","Fragments":["the","use","any"]},{"Key":"the solutions","Fragments":["that"]},{"Key":"solutions that","Fragments":["use"]},{"Key":"that use","Fragments":["carefully"]},{"Key":"use carefully","Fragments":["ordered"]},{"Key":"carefully ordered","Fragments":["conditional"]},{"Key":"ordered conditional","Fragments":["checks"]},{"Key":"checks and","Fragments":["guarded","maybe"]},{"Key":"and guarded","Fragments":["function"]},{"Key":"clauses. They","Fragments":["are"]},{"Key":"They are","Fragments":["correct","semantically"]},{"Key":"are correct","Fragments":["and"]},{"Key":"correct and","Fragments":["elegant,"]},{"Key":"and elegant,","Fragments":["but"]},{"Key":"elegant, but","Fragments":["they"]},{"Key":"but they","Fragments":["are","may"]},{"Key":"they are","Fragments":["not","empty."]},{"Key":"not obvious","Fragments":["with"]},{"Key":"obvious with","Fragments":["respect"]},{"Key":"with respect","Fragments":["to","to"]},{"Key":"respect to","Fragments":["the","functional"]},{"Key":"the algorithm","Fragments":["being","(is","correct)","correctly","with","theory","(divisible"]},{"Key":"algorithm being","Fragments":["used."]},{"Key":"being used.","Fragments":["If"]},{"Key":"used. If","Fragments":["I"]},{"Key":"I were","Fragments":["a","able"]},{"Key":"were a","Fragments":["developer"]},{"Key":"a developer","Fragments":["being"]},{"Key":"developer being","Fragments":["asked"]},{"Key":"being asked","Fragments":["to"]},{"Key":"asked to","Fragments":["maintain"]},{"Key":"to maintain","Fragments":["someone"]},{"Key":"maintain someone","Fragments":["else's"]},{"Key":"someone else's","Fragments":["code,"]},{"Key":"else's code,","Fragments":["I"]},{"Key":"code, I","Fragments":["think","feel"]},{"Key":"be grateful","Fragments":["for"]},{"Key":"grateful for","Fragments":["my"]},{"Key":"for my","Fragments":["version.","emacs.","implementation,","next"]},{"Key":"think in","Fragments":["this"]},{"Key":"that clarity","Fragments":["in"]},{"Key":"clarity in","Fragments":["understanding","this"]},{"Key":"in understanding","Fragments":["the"]},{"Key":"understanding the","Fragments":["algorithm","implementation"]},{"Key":"algorithm (is","Fragments":["the"]},{"Key":"(is the","Fragments":["algorithm","algorithm"]},{"Key":"algorithm correct)","Fragments":["AND"]},{"Key":"correct) AND","Fragments":["understanding"]},{"Key":"AND understanding","Fragments":["the"]},{"Key":"implementation (is","Fragments":["the"]},{"Key":"algorithm correctly","Fragments":["implemented)"]},{"Key":"correctly implemented)","Fragments":["are"]},{"Key":"implemented) are","Fragments":["paramount."]},{"Key":"My code","Fragments":["says:"]},{"Key":"code says:","Fragments":["\"A"]},{"Key":"says: \"A","Fragments":["year"]},{"Key":"\"A year","Fragments":["is"]},{"Key":"leap year","Fragments":["iff","before"]},{"Key":"year iff","Fragments":["it"]},{"Key":"iff it","Fragments":["is"]},{"Key":"by 4","Fragments":["and","but"]},{"Key":"4 and","Fragments":["either","go"]},{"Key":"and either","Fragments":["not"]},{"Key":"either not","Fragments":["divisibly"]},{"Key":"not divisibly","Fragments":["by"]},{"Key":"divisibly by","Fragments":["100"]},{"Key":"by 100","Fragments":["or"]},{"Key":"100 or","Fragments":["divisible"]},{"Key":"or divisible","Fragments":["by"]},{"Key":"by both","Fragments":["100"]},{"Key":"both 100","Fragments":["and"]},{"Key":"100 and","Fragments":["400."]},{"Key":" Nothing","Fragments":["wrong"]},{"Key":"Nothing wrong","Fragments":["with"]},{"Key":"with being","Fragments":["explicit"]},{"Key":"being explicit","Fragments":["if"]},{"Key":"explicit if","Fragments":["you"]},{"Key":"it provides","Fragments":["greater"]},{"Key":"provides greater","Fragments":["clarity."]},{"Key":"greater clarity.","Fragments":["The"]},{"Key":"clarity. The","Fragments":["guarded"]},{"Key":"The guarded","Fragments":["function"]},{"Key":"clauses approach","Fragments":["is"]},{"Key":"approach is","Fragments":["more","that","idiomatic.","quite"]},{"Key":"more implicit","Fragments":["to"]},{"Key":"implicit to","Fragments":["say"]},{"Key":"to say","Fragments":["that","\"list"]},{"Key":"that for","Fragments":["instance","workloads","each","my"]},{"Key":"for instance","Fragments":["if"]},{"Key":"instance if","Fragments":["a"]},{"Key":"if a","Fragments":["number","standard","year"]},{"Key":"number is","Fragments":["divisible","a"]},{"Key":"by 400","Fragments":["it's","then","it"]},{"Key":"400 it's","Fragments":["also"]},{"Key":"it's also","Fragments":["divislbe"]},{"Key":"also divislbe","Fragments":["by"]},{"Key":"divislbe by","Fragments":["4."]},{"Key":"by 4.","Fragments":["At"]},{"Key":"4. At","Fragments":["a"]},{"Key":"At a","Fragments":["certain"]},{"Key":"a certain","Fragments":["point"]},{"Key":"certain point","Fragments":["it"]},{"Key":"point it","Fragments":["comes"]},{"Key":"it comes","Fragments":["down"]},{"Key":"comes down","Fragments":["to"]},{"Key":"down to","Fragments":["subjectivity","tail","something"]},{"Key":"to subjectivity","Fragments":["so"]},{"Key":"subjectivity so","Fragments":["I"]},{"Key":"I certainly","Fragments":["see"]},{"Key":"certainly see","Fragments":["your"]},{"Key":"see your","Fragments":["point.","point"]},{"Key":"Very neat","Fragments":["solution,"]},{"Key":"neat solution,","Fragments":["much"]},{"Key":"solution, much","Fragments":["nicer"]},{"Key":"much nicer","Fragments":["than","if"]},{"Key":"nicer than","Fragments":["mine.","mine."]},{"Key":"mine. But","Fragments":["it","yours"]},{"Key":"But it","Fragments":["has"]},{"Key":"a downside","Fragments":["in"]},{"Key":"downside in","Fragments":["being"]},{"Key":"in being","Fragments":["(twice"]},{"Key":"being (twice","Fragments":["as)"]},{"Key":"(twice as)","Fragments":["slower."]},{"Key":"as) slower.","Fragments":["Here's"]},{"Key":"slower. Here's","Fragments":["a"]},{"Key":"a measurement","Fragments":["with"]},{"Key":"measurement with","Fragments":["`timer:tc/3`"]},{"Key":"with `timer:tc/3`","Fragments":["when"]},{"Key":"`timer:tc/3` when","Fragments":["cubing"]},{"Key":"when cubing","Fragments":["5"]},{"Key":"cubing 5","Fragments":["*"]},{"Key":"5 *","Fragments":["10^6"]},{"Key":"* 10^6","Fragments":["numbers"]},{"Key":"10^6 numbers","Fragments":["with"]},{"Key":"numbers with","Fragments":["`Cube"]},{"Key":"with `Cube","Fragments":["="]},{"Key":"`Cube =","Fragments":["fun"]},{"Key":"= fun","Fragments":["(X)"]},{"Key":"fun (X)","Fragments":["-\u003e"]},{"Key":"(X) -\u003e","Fragments":["X*X*X"]},{"Key":"-\u003e X*X*X","Fragments":["end.`"]},{"Key":"Your neat","Fragments":["solution"]},{"Key":"neat solution","Fragments":["clocks"]},{"Key":"solution clocks","Fragments":["up","up"]},{"Key":"clocks up","Fragments":["16942580","8698354"]},{"Key":"up 16942580","Fragments":["us:"]},{"Key":" `timer:tc(accumulate,","Fragments":["accumulate_your_solution,","accumulate_my_solution,"]},{"Key":"`timer:tc(accumulate, accumulate_your_solution,","Fragments":["[Cube,"]},{"Key":"accumulate_your_solution, [Cube,","Fragments":["lists:seq(1,5000000)])."]},{"Key":"My convoluted","Fragments":["solution"]},{"Key":"convoluted solution","Fragments":["clocks"]},{"Key":"up 8698354","Fragments":["us:"]},{"Key":"`timer:tc(accumulate, accumulate_my_solution,","Fragments":["[Cube,"]},{"Key":"accumulate_my_solution, [Cube,","Fragments":["lists:seq(1,5000000)])."]},{"Key":" Given","Fragments":["the","you","our"]},{"Key":"Given the","Fragments":["[docs","argument"]},{"Key":"the [docs","Fragments":["on"]},{"Key":"[docs on","Fragments":["list"]},{"Key":"on list","Fragments":["comprehension](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67562),"]},{"Key":"list comprehension](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67562),","Fragments":["does"]},{"Key":"comprehension](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67562), does","Fragments":["the"]},{"Key":"the difference","Fragments":["then","between","is","between"]},{"Key":"difference then","Fragments":["come"]},{"Key":"then come","Fragments":["down"]},{"Key":"come down","Fragments":["to"]},{"Key":"to tail","Fragments":["recursion?","recursive"]},{"Key":"* Made","Fragments":["the"]},{"Key":"Made the","Fragments":["filter"]},{"Key":"the filter","Fragments":["predicate","function!","function"]},{"Key":"filter predicate","Fragments":["shorter."]},{"Key":"* Simplified","Fragments":["`validate_number`"]},{"Key":"Simplified `validate_number`","Fragments":["for"]},{"Key":"`validate_number` for","Fragments":["the"]},{"Key":"the 11","Fragments":["digit"]},{"Key":"11 digit","Fragments":["case."]},{"Key":" Use","Fragments":["list","```andalso```"]},{"Key":"Use list","Fragments":["comprehension"]},{"Key":"comprehension to","Fragments":["extract","filter"]},{"Key":"Here are","Fragments":["a"]},{"Key":"few variations","Fragments":["on"]},{"Key":"variations on","Fragments":["the"]},{"Key":"the theme.","Fragments":["Wondering"]},{"Key":"theme. Wondering","Fragments":["how"]},{"Key":"Wondering how","Fragments":["they"]},{"Key":"how they","Fragments":["compare","behave"]},{"Key":"they compare","Fragments":["in"]},{"Key":"compare in","Fragments":["terms"]},{"Key":"not want","Fragments":["to"]},{"Key":"check every","Fragments":["single"]},{"Key":"single number","Fragments":["between"]},{"Key":"number between","Fragments":["1"]},{"Key":"between 1","Fragments":["and"]},{"Key":"1 and","Fragments":["N"]},{"Key":"and N","Fragments":["because"]},{"Key":"N because","Fragments":["this"]},{"Key":"this strikes","Fragments":["me"]},{"Key":"strikes me","Fragments":["as"]},{"Key":"me as","Fragments":["wasteful"]},{"Key":"as wasteful","Fragments":["in"]},{"Key":"wasteful in","Fragments":["the"]},{"Key":"general case.","Fragments":["Instead"]},{"Key":"case. Instead","Fragments":["I"]},{"Key":"Instead I","Fragments":["build"]},{"Key":"I build","Fragments":["a"]},{"Key":"a step","Fragments":["sequence"]},{"Key":"step sequence","Fragments":["for"]},{"Key":"sequence for","Fragments":["each"]},{"Key":"the factors,","Fragments":["concatenate"]},{"Key":"factors, concatenate","Fragments":["them,"]},{"Key":"concatenate them,","Fragments":["and"]},{"Key":"them, and","Fragments":["then"]},{"Key":"then make","Fragments":["the"]},{"Key":"list unique","Fragments":["by"]},{"Key":"unique by","Fragments":["passing"]},{"Key":"by passing","Fragments":["it"]},{"Key":"passing it","Fragments":["through"]},{"Key":"through an","Fragments":["ordset."]},{"Key":" Need","Fragments":["sorting","to"]},{"Key":"Need sorting","Fragments":["in"]},{"Key":"sorting in","Fragments":["`allergies`"]},{"Key":"in `allergies`","Fragments":["because"]},{"Key":"`allergies` because","Fragments":["test"]},{"Key":"because test","Fragments":["cases"]},{"Key":"cases rely","Fragments":["on"]},{"Key":"on specific","Fragments":["order","value"]},{"Key":"specific order","Fragments":["of"]},{"Key":"result list,","Fragments":["and"]},{"Key":"and `maps:keys`","Fragments":["does"]},{"Key":"`maps:keys` does","Fragments":["not"]},{"Key":"not guarantee","Fragments":["any"]},{"Key":"guarantee any","Fragments":["particular"]},{"Key":"any particular","Fragments":["order.","reason"]},{"Key":"way you've","Fragments":["done"]},{"Key":"you've done","Fragments":["`norm/1`"]},{"Key":"done `norm/1`","Fragments":["and"]},{"Key":"`norm/1` and","Fragments":["`step/3`."]},{"Key":"and `step/3`.","Fragments":["I"]},{"Key":"`step/3`. I","Fragments":["find"]},{"Key":"find your","Fragments":["use"]},{"Key":"your use","Fragments":["of"]},{"Key":"of extra","Fragments":["guards"]},{"Key":"extra guards","Fragments":["such"]},{"Key":"guards such","Fragments":["as"]},{"Key":"such as","Fragments":["in","an"]},{"Key":"in `valid/1`","Fragments":["and"]},{"Key":"`valid/1` and","Fragments":["`create/1`"]},{"Key":"and `create/1`","Fragments":["to"]},{"Key":"`create/1` to","Fragments":["be"]},{"Key":"be unidiomatic","Fragments":["however."]},{"Key":" Calculate","Fragments":["the"]},{"Key":"Calculate the","Fragments":["checksum","target"]},{"Key":"the checksum","Fragments":["in"]},{"Key":"checksum in","Fragments":["a"]},{"Key":"single left-to-right","Fragments":["pass."]},{"Key":"left-to-right pass.","Fragments":["We"]},{"Key":"pass. We","Fragments":["don't"]},{"Key":"We don't","Fragments":["know"]},{"Key":"know whether","Fragments":["we"]},{"Key":"whether we","Fragments":["need"]},{"Key":"we need","Fragments":["to","to"]},{"Key":"to start","Fragments":["with","adding","checking","checking"]},{"Key":"start with","Fragments":["factor","these"]},{"Key":"with factor","Fragments":["1"]},{"Key":"factor 1","Fragments":["or"]},{"Key":"or 2,","Fragments":["so"]},{"Key":"2, so","Fragments":["we"]},{"Key":"so we","Fragments":["calculate"]},{"Key":"we calculate","Fragments":["both"]},{"Key":"calculate both","Fragments":["variants"]},{"Key":"both variants","Fragments":["simultaneously"]},{"Key":"variants simultaneously","Fragments":["and"]},{"Key":"simultaneously and","Fragments":["select"]},{"Key":"and select","Fragments":["the"]},{"Key":"right one","Fragments":["at"]},{"Key":"one at","Fragments":["the"]},{"Key":" Yes,","Fragments":["well,","the","it's"]},{"Key":"Yes, well,","Fragments":["I"]},{"Key":"well, I","Fragments":["put"]},{"Key":"I put","Fragments":["them"]},{"Key":"put them","Fragments":["in"]},{"Key":"them in","Fragments":["because"]},{"Key":"in because","Fragments":["I"]},{"Key":"was told","Fragments":["elsewhere"]},{"Key":"told elsewhere","Fragments":["that"]},{"Key":"elsewhere that","Fragments":["it"]},{"Key":"it was","Fragments":["good","a"]},{"Key":"was good","Fragments":["practice"]},{"Key":"guard exported","Fragments":["functions"]},{"Key":"functions well","Fragments":["in"]},{"Key":"well in","Fragments":["order"]},{"Key":" Setup:","Fragments":["Fill"]},{"Key":"Setup: Fill","Fragments":["a"]},{"Key":"Fill a","Fragments":["queue"]},{"Key":"queue with","Fragments":["the"]},{"Key":"first N","Fragments":["digits"]},{"Key":"N digits","Fragments":["and"]},{"Key":"digits and","Fragments":["calculate"]},{"Key":"and calculate","Fragments":["the"]},{"Key":"calculate the","Fragments":["product","check","Hamming","result"]},{"Key":"the product","Fragments":["of"]},{"Key":"product of","Fragments":["all"]},{"Key":"all non-zero","Fragments":["digits"]},{"Key":"non-zero digits","Fragments":["among"]},{"Key":"digits among","Fragments":["them."]},{"Key":"among them.","Fragments":["Also"]},{"Key":"them. Also","Fragments":["remember"]},{"Key":"Also remember","Fragments":["the"]},{"Key":"remember the","Fragments":["number"]},{"Key":"of zeroes","Fragments":["encountered."]},{"Key":" Stepping","Fragments":["through"]},{"Key":"Stepping through","Fragments":["the"]},{"Key":"string, observe","Fragments":["which"]},{"Key":"observe which","Fragments":["digit"]},{"Key":"which digit","Fragments":["enters","leaves"]},{"Key":"digit enters","Fragments":["the"]},{"Key":"enters the","Fragments":["queue"]},{"Key":"the queue","Fragments":["and","and"]},{"Key":"queue and","Fragments":["which","update","no"]},{"Key":"and which","Fragments":["digit"]},{"Key":"digit leaves","Fragments":["the"]},{"Key":"leaves the","Fragments":["queue"]},{"Key":"and update","Fragments":["the"]},{"Key":"update the","Fragments":["non-zero","maximum"]},{"Key":"the non-zero","Fragments":["product"]},{"Key":"non-zero product","Fragments":["and"]},{"Key":"product and","Fragments":["our"]},{"Key":"and our","Fragments":["zero"]},{"Key":"our zero","Fragments":["count"]},{"Key":"zero count","Fragments":["accordingly."]},{"Key":"count accordingly.","Fragments":["If"]},{"Key":"accordingly. If","Fragments":["we"]},{"Key":"full queue","Fragments":["and"]},{"Key":"and no","Fragments":["zero"]},{"Key":"no zero","Fragments":["digits,"]},{"Key":"zero digits,","Fragments":["update"]},{"Key":"digits, update","Fragments":["the"]},{"Key":"the maximum","Fragments":["product.","value."]},{"Key":"the queue!","Fragments":["I"]},{"Key":"queue! I","Fragments":["had"]},{"Key":"had meant","Fragments":["to","to"]},{"Key":"meant to","Fragments":["do","go"]},{"Key":"similar but","Fragments":["I","uses","I"]},{"Key":"didn't think","Fragments":["to","long","of","to"]},{"Key":"think to","Fragments":["use","use"]},{"Key":"the stdlib","Fragments":["queue."]},{"Key":"stdlib queue.","Fragments":["I"]},{"Key":"queue. I","Fragments":["wonder"]},{"Key":"wonder though","Fragments":["if"]},{"Key":"though if","Fragments":["there's"]},{"Key":"if there's","Fragments":["a"]},{"Key":"in lines","Fragments":["26-38."]},{"Key":"Yes, the","Fragments":["case"]},{"Key":"case expression","Fragments":["does","and"]},{"Key":"expression does","Fragments":["look"]},{"Key":"does look","Fragments":["awfully"]},{"Key":"look awfully","Fragments":["verbose."]},{"Key":"awfully verbose.","Fragments":["A"]},{"Key":"verbose. A","Fragments":["concise"]},{"Key":"A concise","Fragments":["ternary"]},{"Key":"concise ternary","Fragments":["operator"]},{"Key":"ternary operator","Fragments":["could"]},{"Key":"operator could","Fragments":["do"]},{"Key":"could do","Fragments":["wonders","with","with"]},{"Key":"do wonders","Fragments":["here,"]},{"Key":"wonders here,","Fragments":["but"]},{"Key":"think Erlang","Fragments":["has"]},{"Key":"Erlang has","Fragments":["one,","no"]},{"Key":"has one,","Fragments":["does"]},{"Key":"one, does","Fragments":["it?"]},{"Key":"it? Absent","Fragments":["that,"]},{"Key":"Absent that,","Fragments":["all"]},{"Key":"that, all","Fragments":["the"]},{"Key":"the ways","Fragments":["I"]},{"Key":"ways I","Fragments":["can"]},{"Key":"can think","Fragments":["of","of","of"]},{"Key":"of to","Fragments":["reduce"]},{"Key":"cases essentially","Fragments":["involve"]},{"Key":"essentially involve","Fragments":["moving"]},{"Key":"involve moving","Fragments":["them"]},{"Key":"moving them","Fragments":["elsewhere."]},{"Key":"This does","Fragments":["not"]},{"Key":"not look","Fragments":["as"]},{"Key":"look as","Fragments":["if"]},{"Key":"as if","Fragments":["it","only"]},{"Key":"it passed","Fragments":["the"]},{"Key":"tests. Checking","Fragments":["for"]},{"Key":"Checking for","Fragments":["remainder"]},{"Key":"for remainder","Fragments":["1"]},{"Key":"remainder 1","Fragments":["is"]},{"Key":"1 is","Fragments":["not","neutral"]},{"Key":"not helpful","Fragments":["in"]},{"Key":"helpful in","Fragments":["this"]},{"Key":"tuple of","Fragments":["types","all"]},{"Key":"types looking","Fragments":["rather"]},{"Key":"looking rather","Fragments":["busy"]},{"Key":"rather busy","Fragments":["and"]},{"Key":"busy and","Fragments":["not"]},{"Key":"not helping","Fragments":["in"]},{"Key":"helping in","Fragments":["explaining"]},{"Key":"in explaining","Fragments":["the"]},{"Key":"explaining the","Fragments":["logic.","maths"]},{"Key":"you notice","Fragments":["you're"]},{"Key":"notice you're","Fragments":["making"]},{"Key":"you're making","Fragments":["the"]},{"Key":"making the","Fragments":["\"same\"","memory","translation"]},{"Key":"the \"same\"","Fragments":["call"]},{"Key":"\"same\" call","Fragments":["four"]},{"Key":"call four","Fragments":["times?"]},{"Key":"If you're","Fragments":["not"]},{"Key":"you're not","Fragments":["interested"]},{"Key":"not interested","Fragments":["in"]},{"Key":"in capturing,","Fragments":["you"]},{"Key":"capturing, you","Fragments":["can"]},{"Key":"can always","Fragments":["pass"]},{"Key":"always pass","Fragments":["`{capture,"]},{"Key":"pass `{capture,","Fragments":["none}`."]},{"Key":"really derived","Fragments":["the"]},{"Key":"derived the","Fragments":["logic"]},{"Key":"logic from","Fragments":["the"]},{"Key":"the README.","Fragments":["I"]},{"Key":"README. I","Fragments":["thought"]},{"Key":"that going","Fragments":["backwards"]},{"Key":"going backwards","Fragments":["by"]},{"Key":"backwards by","Fragments":["first"]},{"Key":"by first","Fragments":["dividing"]},{"Key":"first dividing","Fragments":["by"]},{"Key":"dividing by","Fragments":["400,"]},{"Key":"400, then","Fragments":["100,"]},{"Key":"then 100,","Fragments":["then"]},{"Key":"then 4","Fragments":["was"]},{"Key":"4 was","Fragments":["a"]},{"Key":"a clever","Fragments":["idea.","solution"]},{"Key":"clever idea.","Fragments":["But"]},{"Key":"idea. But","Fragments":["now"]},{"Key":"But now","Fragments":["I"]},{"Key":"now I","Fragments":["see"]},{"Key":"see the","Fragments":["obvious"]},{"Key":"the obvious","Fragments":["issue"]},{"Key":"obvious issue","Fragments":["that"]},{"Key":"issue that","Fragments":["this","I"]},{"Key":"code will","Fragments":["do"]},{"Key":"will do","Fragments":["three","that"]},{"Key":"do three","Fragments":["divisions","division","division"]},{"Key":"three divisions","Fragments":["more"]},{"Key":"divisions more","Fragments":["often"]},{"Key":"more often","Fragments":["than"]},{"Key":"often than","Fragments":["not."]},{"Key":"So we","Fragments":["could"]},{"Key":"we could","Fragments":["actually","have","assume"]},{"Key":"actually start","Fragments":["by"]},{"Key":"start by","Fragments":["checking","pulling"]},{"Key":"by checking","Fragments":["divisibility","equality"]},{"Key":"checking divisibility","Fragments":["with"]},{"Key":"divisibility with","Fragments":["4"]},{"Key":"with 4","Fragments":["and"]},{"Key":"and go","Fragments":["upwards,"]},{"Key":"go upwards,","Fragments":["thus"]},{"Key":"upwards, thus","Fragments":["reducing"]},{"Key":"thus reducing","Fragments":["the"]},{"Key":"reducing the","Fragments":["probability"]},{"Key":"the probability","Fragments":["of"]},{"Key":"probability of","Fragments":["three"]},{"Key":"of three","Fragments":["divisions."]},{"Key":"have with","Fragments":["this"]},{"Key":"recursive which","Fragments":["is","means"]},{"Key":"not as","Fragments":["stack"]},{"Key":"as stack","Fragments":["efficient"]},{"Key":"stack efficient","Fragments":["as"]},{"Key":"efficient as","Fragments":["an","one"]},{"Key":"an iterative","Fragments":["/","function","function."]},{"Key":"iterative /","Fragments":["tail"]},{"Key":"/ tail","Fragments":["recursive"]},{"Key":"How would","Fragments":["you","the"]},{"Key":"would you","Fragments":["change","recommend"]},{"Key":"change your","Fragments":["code","mind"]},{"Key":"code if","Fragments":["you"]},{"Key":"you had","Fragments":["to","a","them"]},{"Key":"define `discard/2`","Fragments":["in"]},{"Key":"in function","Fragments":["of","sumOfMultiples.","clause?"]},{"Key":"Why an","Fragments":["extra"]},{"Key":"clause for","Fragments":["the","the"]},{"Key":"the guard?","Fragments":["In"]},{"Key":"guard? In","Fragments":["case"]},{"Key":"In case","Fragments":["you"]},{"Key":"case you","Fragments":["want","later"]},{"Key":"keep it,","Fragments":["why"]},{"Key":"it, why","Fragments":["don't"]},{"Key":"why don't","Fragments":["you","you"]},{"Key":"don't you","Fragments":["throw","remove","return","move","pattern"]},{"Key":"you throw","Fragments":["a"]},{"Key":"a runtime","Fragments":["exception?"]},{"Key":"a huge","Fragments":["fan"]},{"Key":"huge fan","Fragments":["of"]},{"Key":"of some","Fragments":["of"]},{"Key":"names you've","Fragments":["chosen"]},{"Key":"you've chosen","Fragments":["like"]},{"Key":"chosen like","Fragments":["`process`"]},{"Key":"like `process`","Fragments":["and"]},{"Key":"`process` and","Fragments":["`Guard`."]},{"Key":"to wrap","Fragments":["function","my","all"]},{"Key":"wrap function","Fragments":["references"]},{"Key":"function references","Fragments":["in"]},{"Key":"references in","Fragments":["an"]},{"Key":"to think","Fragments":["about","of","or","about"]},{"Key":"comprehension as","Fragments":["opposed"]},{"Key":"as opposed","Fragments":["to","to","to"]},{"Key":"opposed to","Fragments":["an","prepending","making"]},{"Key":"to an","Fragments":["iterative"]},{"Key":"Take the","Fragments":["example..."]},{"Key":"the example...","Fragments":["`dna:hamming_distance(\"GAGCCTACTAACGGGAT\","]},{"Key":"example... `dna:hamming_distance(\"GAGCCTACTAACGGGAT\",","Fragments":["\"GAGCCTACTAACGGGAT\")`"]},{"Key":"`dna:hamming_distance(\"GAGCCTACTAACGGGAT\", \"GAGCCTACTAACGGGAT\")`","Fragments":["can"]},{"Key":"\"GAGCCTACTAACGGGAT\")` can","Fragments":["you"]},{"Key":"you modify","Fragments":["it"]},{"Key":"modify it","Fragments":["such"]},{"Key":"you aren't","Fragments":["recursing"]},{"Key":"aren't recursing","Fragments":["through"]},{"Key":"recursing through","Fragments":["the"]},{"Key":"the whole","Fragments":["string","stripe","result.","thing","input.","alphabet"]},{"Key":"whole string","Fragments":["verifying?"]},{"Key":"see a","Fragments":["common","way","few"]},{"Key":"a common","Fragments":["pattern","'transcoding'"]},{"Key":"common pattern","Fragments":["in"]},{"Key":"pattern in","Fragments":["your"]},{"Key":"code, namely","Fragments":["a"]},{"Key":"namely a","Fragments":["fold."]},{"Key":"What happens","Fragments":["if"]},{"Key":"happens if","Fragments":["I","the"]},{"Key":"I pass","Fragments":["a"]},{"Key":"pass a","Fragments":["negative","list."]},{"Key":" Try","Fragments":["to","to","to"]},{"Key":"Try to","Fragments":["think","pull","solve"]},{"Key":"of better","Fragments":["names,"]},{"Key":"better names,","Fragments":["I"]},{"Key":"names, I","Fragments":["know"]},{"Key":"know this","Fragments":["is"]},{"Key":"hard but","Fragments":["it"]},{"Key":"it helps","Fragments":["to"]},{"Key":"helps to","Fragments":["explain"]},{"Key":"explain how","Fragments":["to"]},{"Key":"use something/what's","Fragments":["it"]},{"Key":"something/what's it","Fragments":["doing."]},{"Key":"it doing.","Fragments":["For"]},{"Key":"doing. For","Fragments":["example,"]},{"Key":"For example,","Fragments":["on","the","if"]},{"Key":"example, on","Fragments":["line"]},{"Key":"line four","Fragments":["and"]},{"Key":"four and","Fragments":["seven,"]},{"Key":"and seven,","Fragments":["why"]},{"Key":"seven, why","Fragments":["not"]},{"Key":"not call","Fragments":["`N`"]},{"Key":"call `N`","Fragments":["`Limit`?"]},{"Key":"to pull","Fragments":["out"]},{"Key":"pull out","Fragments":["anonymous"]},{"Key":"out anonymous","Fragments":["functions"]},{"Key":"functions if","Fragments":["they're"]},{"Key":"if they're","Fragments":["somewhat"]},{"Key":"they're somewhat","Fragments":["general,"]},{"Key":"somewhat general,","Fragments":["same"]},{"Key":"general, same","Fragments":["reason."]},{"Key":"same reason.","Fragments":["On"]},{"Key":"reason. On","Fragments":["line"]},{"Key":"On line","Fragments":["nine,","5,"]},{"Key":"line nine,","Fragments":["wouldn't"]},{"Key":"nine, wouldn't","Fragments":["you"]},{"Key":"wouldn't you","Fragments":["rather"]},{"Key":"you rather","Fragments":["read"]},{"Key":"rather read","Fragments":["`case"]},{"Key":"read `case","Fragments":["is_multiple(Multiples,"]},{"Key":"`case is_multiple(Multiples,","Fragments":["Candidate)`?"]},{"Key":" Do","Fragments":["you","you","you","you","you","you","you"]},{"Key":"know the","Fragments":["difference","contract"]},{"Key":"difference between","Fragments":["`==`","`create_dicitionary(?ALPHABET)`"]},{"Key":"between `==`","Fragments":["and"]},{"Key":"`==` and","Fragments":["`=:=`?"]},{"Key":"of magic","Fragments":["numbers","numbers"]},{"Key":"numbers (`[3,","Fragments":["5]`)."]},{"Key":"It's considered","Fragments":["good"]},{"Key":"considered good","Fragments":["practice"]},{"Key":"to name","Fragments":["\"don't","my","the"]},{"Key":"name \"don't","Fragments":["care\""]},{"Key":"\"don't care\"","Fragments":["variables"]},{"Key":"care\" variables","Fragments":["just"]},{"Key":"variables just","Fragments":["in"]},{"Key":"just in","Fragments":["case"]},{"Key":"in case","Fragments":["you"]},{"Key":"you later","Fragments":["change"]},{"Key":"later change","Fragments":["your"]},{"Key":"your mind","Fragments":["and"]},{"Key":"and do","Fragments":["need"]},{"Key":"How are","Fragments":["you"]},{"Key":"you liking","Fragments":["the"]},{"Key":"liking the","Fragments":["test"]},{"Key":"suite function","Fragments":["names?"]},{"Key":" @everardo,","Fragments":["I'm"]},{"Key":"@everardo, I'm","Fragments":["using"]},{"Key":"I'm using","Fragments":["four"]},{"Key":"using four","Fragments":["because","spaces?"]},{"Key":"four because","Fragments":["the"]},{"Key":"the [book","Fragments":["I'm"]},{"Key":"[book I'm","Fragments":["reading](https://www.nostarch.com/erlang)"]},{"Key":"I'm reading](https://www.nostarch.com/erlang)","Fragments":["uses"]},{"Key":"reading](https://www.nostarch.com/erlang) uses","Fragments":["four."]},{"Key":"uses four.","Fragments":["I"]},{"Key":"four. I","Fragments":["also"]},{"Key":"also had","Fragments":["a"]},{"Key":"at [Joe","Fragments":["Armstrong's"]},{"Key":"[Joe Armstrong's","Fragments":["book](https://pragprog.com/book/jaerlang2/programming-erlang)"]},{"Key":"Armstrong's book](https://pragprog.com/book/jaerlang2/programming-erlang)","Fragments":["and"]},{"Key":"book](https://pragprog.com/book/jaerlang2/programming-erlang) and","Fragments":["he's"]},{"Key":"and he's","Fragments":["also"]},{"Key":"he's also","Fragments":["using"]},{"Key":"also using","Fragments":["four."]},{"Key":"using four.","Fragments":["Tab"]},{"Key":"four. Tab","Fragments":["width"]},{"Key":"Tab width","Fragments":["doesn't"]},{"Key":"width doesn't","Fragments":["really"]},{"Key":"doesn't really","Fragments":["matter,"]},{"Key":"really matter,","Fragments":["just","you"]},{"Key":"matter, just","Fragments":["make"]},{"Key":"just make","Fragments":["sure"]},{"Key":"make sure","Fragments":["it's","you","it","you","you","you","you","`square/1`","you","you","it","you","you","you"]},{"Key":"sure it's","Fragments":["clear","some"]},{"Key":"it's clear","Fragments":["it's"]},{"Key":"clear it's","Fragments":["a"]},{"Key":"a tab","Fragments":["and"]},{"Key":"tab and","Fragments":["you're"]},{"Key":"and you're","Fragments":["being","probably","supplying"]},{"Key":"you're being","Fragments":["consistent."]},{"Key":"being consistent.","Fragments":["Unlike"]},{"Key":"consistent. Unlike","Fragments":["function"]},{"Key":"Unlike function","Fragments":["names,"]},{"Key":"function names,","Fragments":["your"]},{"Key":"names, your","Fragments":["code"]},{"Key":"code doesn't","Fragments":["have"]},{"Key":"look \"strange\"","Fragments":["because"]},{"Key":"\"strange\" because","Fragments":["you're"]},{"Key":"because you're","Fragments":["calling"]},{"Key":"you're calling","Fragments":["a"]},{"Key":"calling a","Fragments":["function"]},{"Key":"from I","Fragments":["library"]},{"Key":"I library","Fragments":["I"]},{"Key":"library I","Fragments":["wrote"]},{"Key":"wrote and","Fragments":["I"]},{"Key":"use four","Fragments":["spaces"]},{"Key":"four spaces","Fragments":["while"]},{"Key":"spaces while","Fragments":["you"]},{"Key":"while you","Fragments":["use"]},{"Key":"Why did","Fragments":["you","you"]},{"Key":"did you","Fragments":["export","pick","came","find"]},{"Key":"you export","Fragments":["`age_on`?"]},{"Key":"export `age_on`?","Fragments":["The"]},{"Key":"`age_on`? The","Fragments":["test"]},{"Key":"suite calls","Fragments":["`ageOn`."]},{"Key":" @alfredo,","Fragments":["Erlang,"]},{"Key":"@alfredo, Erlang,","Fragments":["by"]},{"Key":"Erlang, by","Fragments":["convention,"]},{"Key":"by convention,","Fragments":["uses"]},{"Key":"convention, uses","Fragments":["snake_case"]},{"Key":"uses snake_case","Fragments":["for"]},{"Key":"names so","Fragments":["I"]},{"Key":"I \"corrected\"","Fragments":["the"]},{"Key":"\"corrected\" the","Fragments":["test"]},{"Key":"suite. You","Fragments":["might"]},{"Key":"I'm crazy","Fragments":["but"]},{"Key":"crazy but","Fragments":["I"]},{"Key":"get really","Fragments":["annoyed"]},{"Key":"really annoyed","Fragments":["by"]},{"Key":"annoyed by","Fragments":["such"]},{"Key":"by such","Fragments":["things."]},{"Key":" @annabell","Fragments":["nope,"]},{"Key":"@annabell nope,","Fragments":["good"]},{"Key":"nope, good","Fragments":["to"]},{"Key":"good to","Fragments":["know.","get","allow"]},{"Key":"to know.","Fragments":["Whats"]},{"Key":"know. Whats","Fragments":["the"]},{"Key":"Whats the","Fragments":["convention"]},{"Key":"the convention","Fragments":["on","of","of"]},{"Key":"convention on","Fragments":["spaces."]},{"Key":"on spaces.","Fragments":["Looks"]},{"Key":"spaces. Looks","Fragments":["like"]},{"Key":"are using","Fragments":["four","`maps:get/2`"]},{"Key":" Can","Fragments":["you","you","you","you","you"]},{"Key":"to utilize","Fragments":["erlang's"]},{"Key":"utilize erlang's","Fragments":["pattern"]},{"Key":"erlang's pattern","Fragments":["matching"]},{"Key":"matching to","Fragments":["reduce","determine","clean"]},{"Key":" @elisa,","Fragments":["while"]},{"Key":"@elisa, while","Fragments":["I"]},{"Key":"could get","Fragments":["rid","rid","away"]},{"Key":"of `lists:filter/2`","Fragments":["and","then"]},{"Key":"`lists:filter/2` and","Fragments":["`lists/sort/1`"]},{"Key":"and `lists/sort/1`","Fragments":["I"]},{"Key":"`lists/sort/1` I","Fragments":["would"]},{"Key":"only be","Fragments":["recreating","a","a"]},{"Key":"be recreating","Fragments":["them."]},{"Key":"recreating them.","Fragments":["No,"]},{"Key":"them. No,","Fragments":["I"]},{"Key":"No, I","Fragments":["can't"]},{"Key":"can't think","Fragments":["of"]},{"Key":"of anything.","Fragments":["Could"]},{"Key":"anything. Could","Fragments":["you"]},{"Key":"you give","Fragments":["me"]},{"Key":"give me","Fragments":["a"]},{"Key":"a hint,","Fragments":["could"]},{"Key":"hint, could","Fragments":["you"]},{"Key":"enlighten me?","Fragments":["Thank"]},{"Key":"me? Thank","Fragments":["you"]},{"Key":"* Consider","Fragments":["using","rewriting"]},{"Key":"Consider using","Fragments":["pattern","a"]},{"Key":"to determine","Fragments":["equality"]},{"Key":"determine equality","Fragments":["of"]},{"Key":"equality of","Fragments":["list"]},{"Key":"list heads","Fragments":["on"]},{"Key":"heads on","Fragments":["line"]},{"Key":"line 6","Fragments":["(analogous"]},{"Key":"6 (analogous","Fragments":["to"]},{"Key":"(analogous to","Fragments":["what","the"]},{"Key":"you did","Fragments":["on"]},{"Key":"did on","Fragments":["line"]},{"Key":"Consider rewriting","Fragments":["the"]},{"Key":"rewriting the","Fragments":["function"]},{"Key":"be tail","Fragments":["recursive","recursive"]},{"Key":"recursive (see","Fragments":["[here](http://learnyousomeerlang.com/recursion#length-tail-recursion))."]},{"Key":" use","Fragments":["of","lists","of","of"]},{"Key":"of `list","Fragments":["comprehensions'"]},{"Key":"`list comprehensions'","Fragments":["is"]},{"Key":"comprehensions' is","Fragments":["great"]},{"Key":"is great","Fragments":["idea.","idea.","idea"]},{"Key":" Exactly","Fragments":["the"]},{"Key":"Exactly the","Fragments":["same"]},{"Key":"as version","Fragments":["three"]},{"Key":"version three","Fragments":["but"]},{"Key":"three but","Fragments":["this"]},{"Key":"this time","Fragments":["correctly"]},{"Key":"time correctly","Fragments":["indented."]},{"Key":"good. You","Fragments":["could"]},{"Key":"could improve","Fragments":["it","this."]},{"Key":"adding guards.","Fragments":["Maybe"]},{"Key":"guards. Maybe","Fragments":["have"]},{"Key":"Maybe have","Fragments":["a"]},{"Key":"for suggestion.","Fragments":["I'll"]},{"Key":"suggestion. I'll","Fragments":["definitely"]},{"Key":"definitely add","Fragments":["the"]},{"Key":"guards for","Fragments":["`Fun`","the","`response_for/1`?"]},{"Key":"for `Fun`","Fragments":["and"]},{"Key":"`Fun` and","Fragments":["`Ls`."]},{"Key":" List","Fragments":["comprehension","comprehension"]},{"Key":"List comprehension","Fragments":["are","is"]},{"Key":"comprehension are","Fragments":["certainly"]},{"Key":"are certainly","Fragments":["more"]},{"Key":"certainly more","Fragments":["readable,"]},{"Key":"more readable,","Fragments":["but","but","but","personally."]},{"Key":"readable, but","Fragments":["[I","it","it"]},{"Key":"but [I","Fragments":["found"]},{"Key":"[I found","Fragments":["list-generator"]},{"Key":"found list-generator","Fragments":["to"]},{"Key":"list-generator to","Fragments":["be"]},{"Key":"be slow](http://exercism.io/submissions/9f2e762bbee849d199925a8975370c1b).","Fragments":["Can"]},{"Key":"slow](http://exercism.io/submissions/9f2e762bbee849d199925a8975370c1b). Can","Fragments":["they"]},{"Key":"Can they","Fragments":["be"]},{"Key":"be sped","Fragments":["up"]},{"Key":"sped up","Fragments":["(while"]},{"Key":"up (while","Fragments":["keeping"]},{"Key":"(while keeping","Fragments":["their"]},{"Key":"keeping their","Fragments":["succinctness)?"]},{"Key":"It's same","Fragments":["as"]},{"Key":"I have=)","Fragments":["But"]},{"Key":"have=) But","Fragments":["this"]},{"Key":"But this","Fragments":["solution","is"]},{"Key":"this solution","Fragments":["have","is","might","at","at","strikes","reads."]},{"Key":"solution have","Fragments":["one"]},{"Key":"have one","Fragments":["(big","really"]},{"Key":"one (big","Fragments":["if"]},{"Key":"(big if","Fragments":["is"]},{"Key":"if is","Fragments":["list"]},{"Key":"is list","Fragments":["big;))"]},{"Key":"list big;))","Fragments":["problem"]},{"Key":"big;)) problem","Fragments":["-"]},{"Key":"problem -","Fragments":["this"]},{"Key":"- this","Fragments":["isn't","seems"]},{"Key":"this isn't","Fragments":["tail"]},{"Key":"isn't tail","Fragments":["recursion.","recursive."]},{"Key":" @alicia","Fragments":["I"]},{"Key":"@alicia I","Fragments":["know"]},{"Key":"use more","Fragments":["natural"]},{"Key":"natural way","Fragments":["because"]},{"Key":"way because","Fragments":["I"]},{"Key":"wrote this","Fragments":["function"]},{"Key":"this function","Fragments":["too","is","naming"]},{"Key":"function too","Fragments":["many"]},{"Key":"too many","Fragments":["times","lines."]},{"Key":"many times","Fragments":["and"]},{"Key":"times and","Fragments":["I'm"]},{"Key":"I'm tired","Fragments":["of"]},{"Key":"tired of","Fragments":["it)"]},{"Key":"is good.","Fragments":["An"]},{"Key":"good. An","Fragments":["alternative"]},{"Key":"An alternative","Fragments":["to"]},{"Key":"statement would","Fragments":["be"]},{"Key":"use function","Fragments":["clauses","clause","clauses"]},{"Key":"clauses such","Fragments":["as:"]},{"Key":" to_rna_char($G)","Fragments":["-\u003e"]},{"Key":"to_rna_char($G) -\u003e","Fragments":["$C;"]},{"Key":" to_rna_char($C)","Fragments":["-\u003e"]},{"Key":"to_rna_char($C) -\u003e","Fragments":["$G;"]},{"Key":"This would","Fragments":["be,","have","be","compile"]},{"Key":"would be,","Fragments":["in"]},{"Key":"be, in","Fragments":["my"]},{"Key":"my opinion,","Fragments":["more","I"]},{"Key":"opinion, more","Fragments":["idiomatic"]},{"Key":"idiomatic with","Fragments":["respect"]},{"Key":"to functional","Fragments":["programming","languages"]},{"Key":" Hi,","Fragments":["nice","@rubye"]},{"Key":"Hi, nice","Fragments":["concise"]},{"Key":"nice concise","Fragments":["one!"]},{"Key":"concise one!","Fragments":["I"]},{"Key":"one! I","Fragments":["like"]},{"Key":"to solve","Fragments":["extended","the"]},{"Key":"solve extended","Fragments":["test.."]},{"Key":" @cheyanne","Fragments":["how"]},{"Key":"@cheyanne how","Fragments":["is"]},{"Key":"how is","Fragments":["this?","the"]},{"Key":" silencing","Fragments":["the"]},{"Key":"silencing the","Fragments":["unused"]},{"Key":"the unused","Fragments":["warning"]},{"Key":"not write","Fragments":["such"]},{"Key":"write such","Fragments":["recursive"]},{"Key":"such recursive","Fragments":["functions"]},{"Key":"recursive functions","Fragments":["for","are","now"]},{"Key":"functions for","Fragments":["the"]},{"Key":"the two","Fragments":["reasons:","arguments"]},{"Key":" 1)","Fragments":["Standard"]},{"Key":"1) Standard","Fragments":["functions"]},{"Key":"Standard functions","Fragments":["like"]},{"Key":"like folds,","Fragments":["map,"]},{"Key":"folds, map,","Fragments":["filter,"]},{"Key":"map, filter,","Fragments":["zip,"]},{"Key":"filter, zip,","Fragments":["etc"]},{"Key":"zip, etc","Fragments":["allow"]},{"Key":"etc allow","Fragments":["you"]},{"Key":"not interfere","Fragments":["the"]},{"Key":"interfere the","Fragments":["algorithm"]},{"Key":"algorithm with","Fragments":["the"]},{"Key":" 2)","Fragments":["These"]},{"Key":"2) These","Fragments":["functions"]},{"Key":"These functions","Fragments":["are"]},{"Key":"functions are","Fragments":["tuned","really","guaranteed"]},{"Key":"are tuned","Fragments":["in"]},{"Key":"tuned in","Fragments":["terms"]},{"Key":"performance (some","Fragments":["of"]},{"Key":"(some of","Fragments":["them"]},{"Key":"of them","Fragments":["are"]},{"Key":"them are","Fragments":["even"]},{"Key":"are even","Fragments":["BIFs,"]},{"Key":"even BIFs,","Fragments":["for"]},{"Key":"BIFs, for","Fragments":["example"]},{"Key":"first function","Fragments":["clause","clause,"]},{"Key":"clause is","Fragments":["sacrificing","if","true"]},{"Key":"is sacrificing","Fragments":["performance"]},{"Key":"sacrificing performance","Fragments":["in"]},{"Key":"performance in","Fragments":["the"]},{"Key":"case because","Fragments":["list"]},{"Key":"because list","Fragments":["equality"]},{"Key":"list equality","Fragments":["comparison"]},{"Key":"equality comparison","Fragments":["takes"]},{"Key":"comparison takes","Fragments":["O(n)"]},{"Key":"takes O(n)","Fragments":["time"]},{"Key":"O(n) time","Fragments":["and","for"]},{"Key":"time and","Fragments":["there","you're"]},{"Key":"and there","Fragments":["will"]},{"Key":"there will","Fragments":["be"]},{"Key":"be O(n)","Fragments":["such"]},{"Key":"O(n) such","Fragments":["comparisons"]},{"Key":"such comparisons","Fragments":["in"]},{"Key":"comparisons in","Fragments":["the","the"]},{"Key":"case so","Fragments":["you"]},{"Key":"will get","Fragments":["O(n^2).","slower"]},{"Key":"get O(n^2).","Fragments":["But"]},{"Key":"O(n^2). But","Fragments":["O(n)"]},{"Key":"But O(n)","Fragments":["time"]},{"Key":"time for","Fragments":["the"]},{"Key":"the solution","Fragments":["is","to"]},{"Key":"did some","Fragments":["measuring"]},{"Key":"some measuring","Fragments":["for"]},{"Key":"measuring for","Fragments":["5"]},{"Key":"for 5","Fragments":["implementations"]},{"Key":"5 implementations","Fragments":["and"]},{"Key":"implementations and","Fragments":["two"]},{"Key":"and two","Fragments":["cases."]},{"Key":"* `hd_rec`","Fragments":["is"]},{"Key":"`hd_rec` is","Fragments":["a"]},{"Key":"recursive implementation","Fragments":["like"]},{"Key":"implementation like","Fragments":["yours,"]},{"Key":"like yours,","Fragments":["but"]},{"Key":"yours, but","Fragments":["with"]},{"Key":"but with","Fragments":["the"]},{"Key":"as end","Fragments":["condition."]},{"Key":"* `hd_rec2`","Fragments":["is"]},{"Key":"`hd_rec2` is","Fragments":["the"]},{"Key":"as your","Fragments":["implementation.","accumulator"]},{"Key":"* `hd_fold`","Fragments":["uses"]},{"Key":"`hd_fold` uses","Fragments":["`lists:zip`"]},{"Key":"uses `lists:zip`","Fragments":["and","and"]},{"Key":"`lists:zip` and","Fragments":["`lists:foldl`","then","`lists:filter`"]},{"Key":"and `lists:foldl`","Fragments":["to"]},{"Key":"`lists:foldl` to","Fragments":["count"]},{"Key":"to count","Fragments":["differences."]},{"Key":"* `hd_lc`","Fragments":["uses"]},{"Key":"`hd_lc` uses","Fragments":["`lists:zip`"]},{"Key":"then list","Fragments":["comprehension"]},{"Key":"to filter","Fragments":["and"]},{"Key":"filter and","Fragments":["`length`","any"]},{"Key":"and `length`","Fragments":["to"]},{"Key":"`length` to","Fragments":["get"]},{"Key":"* `hd_fl`","Fragments":["uses"]},{"Key":"`hd_fl` uses","Fragments":["is"]},{"Key":"uses is","Fragments":["similar"]},{"Key":"is similar","Fragments":["but","to"]},{"Key":"but uses","Fragments":["`lists:filter`"]},{"Key":"uses `lists:filter`","Fragments":["instead"]},{"Key":"`lists:filter` instead","Fragments":["of"]},{"Key":" Each","Fragments":["test"]},{"Key":"Each test","Fragments":["was"]},{"Key":"test was","Fragments":["done"]},{"Key":"was done","Fragments":["with"]},{"Key":"done with","Fragments":["sequences"]},{"Key":"with sequences","Fragments":["of"]},{"Key":"sequences of","Fragments":["10'000'000"]},{"Key":"of 10'000'000","Fragments":["characters,"]},{"Key":"10'000'000 characters,","Fragments":["measured"]},{"Key":"characters, measured","Fragments":["100"]},{"Key":"measured 100","Fragments":["times"]},{"Key":"100 times","Fragments":["using"]},{"Key":"times using","Fragments":["`timer:tc`"]},{"Key":"using `timer:tc`","Fragments":["and"]},{"Key":"`timer:tc` and","Fragments":["then"]},{"Key":"then averaged.","Fragments":["Results"]},{"Key":"averaged. Results","Fragments":["are"]},{"Key":"Results are","Fragments":["rounded","similar"]},{"Key":"are rounded","Fragments":["to"]},{"Key":"rounded to","Fragments":["the"]},{"Key":"the nearest","Fragments":["millisecond."]},{"Key":"first test","Fragments":["used"]},{"Key":"test used","Fragments":["sequences","sequences"]},{"Key":"used sequences","Fragments":["which","where"]},{"Key":"sequences which","Fragments":["differed"]},{"Key":"which differed","Fragments":["only"]},{"Key":"differed only","Fragments":["in"]},{"Key":"The second","Fragments":["test","and"]},{"Key":"second test","Fragments":["used"]},{"Key":"sequences where","Fragments":["all"]},{"Key":"where all","Fragments":["characters"]},{"Key":"all characters","Fragments":["were"]},{"Key":"characters were","Fragments":["different."]},{"Key":" |","Fragments":["Implementation","hd_rec","hd_rec2","hd_fold","hd_lc","hd_fl","Erlang_Integer","Erlang_Integer..Erlang_Integer"]},{"Key":"| Implementation","Fragments":["|"]},{"Key":"Implementation |","Fragments":["(1"]},{"Key":"| (1","Fragments":["different)"]},{"Key":"(1 different)","Fragments":["|"]},{"Key":"different) |","Fragments":["(all"]},{"Key":"| (all","Fragments":["different)"]},{"Key":"(all different)","Fragments":["|"]},{"Key":"| hd_rec","Fragments":["|"]},{"Key":"hd_rec |","Fragments":["79"]},{"Key":"| 79","Fragments":["|"]},{"Key":"79 |","Fragments":["**112**"]},{"Key":"| **112**","Fragments":["|"]},{"Key":"| hd_rec2","Fragments":["|"]},{"Key":"hd_rec2 |","Fragments":["**41**"]},{"Key":"| **41**","Fragments":["|"]},{"Key":"**41** |","Fragments":["210"]},{"Key":"| 210","Fragments":["|"]},{"Key":"| hd_fold","Fragments":["|"]},{"Key":"hd_fold |","Fragments":["499"]},{"Key":"| 499","Fragments":["|"]},{"Key":"499 |","Fragments":["562"]},{"Key":"| 562","Fragments":["|"]},{"Key":"| hd_lc","Fragments":["|"]},{"Key":"hd_lc |","Fragments":["1'102"]},{"Key":"| 1'102","Fragments":["|"]},{"Key":"1'102 |","Fragments":["1'177"]},{"Key":"| 1'177","Fragments":["|"]},{"Key":"| hd_fl","Fragments":["|"]},{"Key":"hd_fl |","Fragments":["1'292"]},{"Key":"| 1'292","Fragments":["|"]},{"Key":"1'292 |","Fragments":["892"]},{"Key":"| 892","Fragments":["|"]},{"Key":" ####","Fragments":["Conclusions:"]},{"Key":"* The","Fragments":["implementation","lesson","performance"]},{"Key":"The implementation","Fragments":["based"]},{"Key":"implementation based","Fragments":["on","on"]},{"Key":"based on","Fragments":["fold","filtering","the","your","the"]},{"Key":"on fold","Fragments":["was"]},{"Key":"fold was","Fragments":["significantly"]},{"Key":"was significantly","Fragments":["faster"]},{"Key":"significantly faster","Fragments":["than","than"]},{"Key":"faster than","Fragments":["those","those","matching","matching","doing"]},{"Key":"than those","Fragments":["based","using"]},{"Key":"those based","Fragments":["on"]},{"Key":"on filtering","Fragments":["and"]},{"Key":"* Both","Fragments":["recursive"]},{"Key":"Both recursive","Fragments":["implementations"]},{"Key":"recursive implementations","Fragments":["were"]},{"Key":"implementations were","Fragments":["significantly"]},{"Key":"were significantly","Fragments":["faster"]},{"Key":"those using","Fragments":["standard"]},{"Key":"using standard","Fragments":["functions."]},{"Key":"* I","Fragments":["*assume*"]},{"Key":"I *assume*","Fragments":["this"]},{"Key":"*assume* this","Fragments":["is"]},{"Key":"is due","Fragments":["to"]},{"Key":"the amount","Fragments":["of"]},{"Key":"amount of","Fragments":["work","equal","memory.","space","code"]},{"Key":"work done","Fragments":["on"]},{"Key":"done on","Fragments":["intermediate"]},{"Key":"on intermediate","Fragments":["lists."]},{"Key":"* Letting","Fragments":["the"]},{"Key":"Letting the","Fragments":["recursion"]},{"Key":"run to","Fragments":["the"]},{"Key":"end is","Fragments":["faster"]},{"Key":"is faster","Fragments":["than"]},{"Key":"on equality","Fragments":["for"]},{"Key":"equality for","Fragments":["the"]},{"Key":"tail unless","Fragments":["there"]},{"Key":"unless there","Fragments":["is"]},{"Key":"a strong","Fragments":["probability"]},{"Key":"strong probability","Fragments":["that"]},{"Key":"probability that","Fragments":["there"]},{"Key":"are long","Fragments":["matching"]},{"Key":"matching tails.","Fragments":["(But"]},{"Key":"tails. (But","Fragments":["even"]},{"Key":"(But even","Fragments":["for"]},{"Key":"for 10","Fragments":["million"]},{"Key":"10 million","Fragments":["characters"]},{"Key":"million characters","Fragments":["the"]},{"Key":"characters the","Fragments":["difference"]},{"Key":"difference is","Fragments":["not"]},{"Key":"not all","Fragments":["that"]},{"Key":"all that","Fragments":["great"]},{"Key":"that great","Fragments":["when"]},{"Key":"great when","Fragments":["compared"]},{"Key":"The lesson","Fragments":["for","for","for"]},{"Key":"lesson for","Fragments":["me","me","me"]},{"Key":"me is","Fragments":["to","to","to","to","to"]},{"Key":"to always","Fragments":["measure","provide"]},{"Key":"always measure","Fragments":["before"]},{"Key":"measure before","Fragments":["recommending"]},{"Key":"before recommending","Fragments":["specific"]},{"Key":"recommending specific","Fragments":["solutions"]},{"Key":"specific solutions","Fragments":["(even"]},{"Key":"solutions (even","Fragments":["standard"]},{"Key":"(even standard","Fragments":["functions)."]},{"Key":" @vickie","Fragments":["thank"]},{"Key":"@vickie thank","Fragments":["you"]},{"Key":"I've should","Fragments":["to"]},{"Key":"should to","Fragments":["reproduce"]},{"Key":"to reproduce","Fragments":["your"]},{"Key":"reproduce your","Fragments":["[benchmark](http://pastebin.com/GTXbQBnQ)"]},{"Key":"your [benchmark](http://pastebin.com/GTXbQBnQ)","Fragments":["to"]},{"Key":"[benchmark](http://pastebin.com/GTXbQBnQ) to","Fragments":["test"]},{"Key":"to test","Fragments":["it","for","for","some"]},{"Key":"test it","Fragments":["myself."]},{"Key":"always provide","Fragments":["the"]},{"Key":"provide the","Fragments":["sources"]},{"Key":"the sources","Fragments":["of"]},{"Key":"sources of","Fragments":["your"]},{"Key":"your benchmark","Fragments":["so"]},{"Key":"benchmark so","Fragments":["that"]},{"Key":"that other","Fragments":["people"]},{"Key":"other people","Fragments":["can"]},{"Key":"people can","Fragments":["check"]},{"Key":"can check","Fragments":["it.","my"]},{"Key":"you again","Fragments":["because"]},{"Key":"again because","Fragments":["that"]},{"Key":"because that","Fragments":["is","is","one"]},{"Key":"is showing","Fragments":["to"]},{"Key":"showing to","Fragments":["me"]},{"Key":"that my","Fragments":["intuition","intuition","type"]},{"Key":"my intuition","Fragments":["about","\"use"]},{"Key":"intuition about","Fragments":["more"]},{"Key":"about more","Fragments":["effective"]},{"Key":"more effective","Fragments":["optimisations"]},{"Key":"effective optimisations","Fragments":["for"]},{"Key":"optimisations for","Fragments":["standard"]},{"Key":"for standard","Fragments":["functions"]},{"Key":"standard functions","Fragments":["were"]},{"Key":"functions were","Fragments":["wrong"]},{"Key":"were wrong","Fragments":["in"]},{"Key":"wrong in","Fragments":["that"]},{"Key":"The obvious","Fragments":["problem"]},{"Key":"obvious problem","Fragments":["with"]},{"Key":"problem with","Fragments":["your","tail"]},{"Key":"with your","Fragments":["approach","error","implementation.","translator","spec"]},{"Key":"your approach","Fragments":["is"]},{"Key":"have analyzed","Fragments":["only"]},{"Key":"analyzed only","Fragments":["the"]},{"Key":"only the","Fragments":["good","generic"]},{"Key":"the good","Fragments":["cases","case"]},{"Key":"good cases","Fragments":["for"]},{"Key":"cases for","Fragments":["`hd_rec2`"]},{"Key":"for `hd_rec2`","Fragments":["implementation."]},{"Key":"`hd_rec2` implementation.","Fragments":["Every"]},{"Key":"implementation. Every","Fragments":["test"]},{"Key":"Every test","Fragments":["case"]},{"Key":"that have","Fragments":["significant"]},{"Key":"have significant","Fragments":["amount"]},{"Key":"significant amount","Fragments":["of"]},{"Key":"of equal","Fragments":["pairs","pairs"]},{"Key":"equal pairs","Fragments":["followed","ending"]},{"Key":"pairs followed","Fragments":["by"]},{"Key":"the nonequal","Fragments":["one"]},{"Key":"nonequal one","Fragments":["will"]},{"Key":"one will","Fragments":["show"]},{"Key":"will show","Fragments":["asymptotically"]},{"Key":"show asymptotically","Fragments":["bad"]},{"Key":"asymptotically bad","Fragments":["performance"]},{"Key":"bad performance","Fragments":["of"]},{"Key":"performance of","Fragments":["that","maps:get","the"]},{"Key":"that implementation","Fragments":["(O("]},{"Key":"implementation (O(","Fragments":["n^2"]},{"Key":"(O( n^2","Fragments":[")"]},{"Key":"n^2 )","Fragments":["where"]},{"Key":") where","Fragments":["n"]},{"Key":"the sequences).","Fragments":["The"]},{"Key":"sequences). The","Fragments":["last"]},{"Key":"last test","Fragments":["in"]},{"Key":"test in","Fragments":["my"]},{"Key":"my benchmark","Fragments":["above","code","code.","results"]},{"Key":"benchmark above","Fragments":["has"]},{"Key":"above has","Fragments":["only"]},{"Key":"has only","Fragments":["1"]},{"Key":"only 1","Fragments":["different"]},{"Key":"1 different","Fragments":["element"]},{"Key":"different element","Fragments":["just"]},{"Key":"element just","Fragments":["like"]},{"Key":"just like","Fragments":["your"]},{"Key":"your but","Fragments":["in"]},{"Key":"last position","Fragments":["(according"]},{"Key":"position (according","Fragments":["to"]},{"Key":"(according to","Fragments":["the"]},{"Key":"the provided","Fragments":["results"]},{"Key":"provided results","Fragments":["I"]},{"Key":"results I","Fragments":["suppose"]},{"Key":"I suppose","Fragments":["that","`Acc`","if"]},{"Key":"suppose that","Fragments":["you"]},{"Key":"have placed","Fragments":["different"]},{"Key":"placed different","Fragments":["elements"]},{"Key":"different elements","Fragments":["in"]},{"Key":"elements in","Fragments":["the"]},{"Key":"The results","Fragments":["that"]},{"Key":"results that","Fragments":["I've"]},{"Key":"I've got","Fragments":["are:","with"]},{"Key":" hd_rec","Fragments":["843.5","850.4","**830.8**","1081.1"]},{"Key":" hd_rec2","Fragments":["210.5","227.4","**9640007.9**","1747.7"]},{"Key":" hd_fold","Fragments":["5034.7","5403.6","5143.2","4247.4"]},{"Key":" hd_lc","Fragments":["3473.9","3792.3","3833.1","5154.1"]},{"Key":" hd_fl","Fragments":["4216.7","4751.7","4842.1","6283.5"]},{"Key":" \"First","Fragments":["are"]},{"Key":"\"First are","Fragments":["different\""]},{"Key":" \"Last","Fragments":["are"]},{"Key":"\"Last are","Fragments":["different\""]},{"Key":"learn the","Fragments":["algorithm","hard"]},{"Key":"algorithm theory","Fragments":["before"]},{"Key":"theory before","Fragments":["measuring"]},{"Key":"before measuring","Fragments":["and"]},{"Key":"measuring and","Fragments":["even"]},{"Key":"and even","Fragments":["writing"]},{"Key":"even writing","Fragments":["the"]},{"Key":"writing the","Fragments":["code","spec"]},{"Key":"code (even","Fragments":["for"]},{"Key":"(even for","Fragments":["the"]},{"Key":"the simple","Fragments":["at","problem"]},{"Key":"simple at","Fragments":["the"]},{"Key":"the glance","Fragments":["problems)."]},{"Key":" @jessika","Fragments":["\\"]},{"Key":"@jessika \\","Fragments":["@jessika"]},{"Key":"\\ @jessika","Fragments":["can"]},{"Key":"@jessika can","Fragments":["you"]},{"Key":"you post","Fragments":["your"]},{"Key":"post your","Fragments":["benchmarks"]},{"Key":"your benchmarks","Fragments":["in"]},{"Key":"benchmarks in","Fragments":["a"]},{"Key":"a gist.","Fragments":["I'd"]},{"Key":"gist. I'd","Fragments":["love"]},{"Key":"I'd love","Fragments":["to"]},{"Key":" @jefferey","Fragments":["I've"]},{"Key":"@jefferey I've","Fragments":["provided"]},{"Key":"I've provided","Fragments":["the"]},{"Key":"provided the","Fragments":["[link](http://pastebin.com/GTXbQBnQ)"]},{"Key":"the [link](http://pastebin.com/GTXbQBnQ)","Fragments":["in"]},{"Key":"[link](http://pastebin.com/GTXbQBnQ) in","Fragments":["my"]},{"Key":"previous comment","Fragments":[";-)"]},{"Key":" @godfrey","Fragments":["I"]},{"Key":"@godfrey I","Fragments":["tested"]},{"Key":"I tested","Fragments":["with","a"]},{"Key":"tested with","Fragments":["2"]},{"Key":"with 2","Fragments":["sequences","sequences"]},{"Key":"2 sequences","Fragments":["differing","that"]},{"Key":"sequences differing","Fragments":["only","only"]},{"Key":"differing only","Fragments":["in","in"]},{"Key":"first character","Fragments":["and"]},{"Key":"character and","Fragments":["with","returns"]},{"Key":"and with","Fragments":["2"]},{"Key":"sequences that","Fragments":["were"]},{"Key":"that were","Fragments":["completely"]},{"Key":"were completely","Fragments":["different."]},{"Key":"completely different.","Fragments":["The"]},{"Key":"different. The","Fragments":["former"]},{"Key":"The former","Fragments":["is"]},{"Key":"former is","Fragments":["the"]},{"Key":"good case","Fragments":["for"]},{"Key":"for `hd_rec2`,","Fragments":["but"]},{"Key":"`hd_rec2`, but","Fragments":["how"]},{"Key":"but how","Fragments":["is"]},{"Key":"the latter","Fragments":["also","commented"]},{"Key":"latter also","Fragments":["a"]},{"Key":"will post","Fragments":["my"]},{"Key":"post my","Fragments":["benchmark"]},{"Key":"benchmark code","Fragments":["as"]},{"Key":"code as","Fragments":["soon"]},{"Key":"have suitable","Fragments":["connection"]},{"Key":"suitable connection","Fragments":["(sharing"]},{"Key":"connection (sharing","Fragments":["sites"]},{"Key":"(sharing sites","Fragments":["are"]},{"Key":"sites are","Fragments":["blocked"]},{"Key":"are blocked","Fragments":["where"]},{"Key":"blocked where","Fragments":["I"]},{"Key":"am right","Fragments":["now)."]},{"Key":" [Here](http://pastebin.com/nRKYJJxr)","Fragments":["is"]},{"Key":"[Here](http://pastebin.com/nRKYJJxr) is","Fragments":["my"]},{"Key":"benchmark code.","Fragments":["I"]},{"Key":"code. I","Fragments":["just"]},{"Key":"just ran","Fragments":["it"]},{"Key":"ran it","Fragments":["on"]},{"Key":"it on","Fragments":["a","my"]},{"Key":"different machine","Fragments":["with"]},{"Key":"machine with","Fragments":["similar"]},{"Key":"with similar","Fragments":["results."]},{"Key":" @adelbert","Fragments":["if"]},{"Key":"@adelbert if","Fragments":["sequences"]},{"Key":"if sequences","Fragments":["are"]},{"Key":"sequences are","Fragments":["totally"]},{"Key":"are totally","Fragments":["different","right."]},{"Key":"totally different","Fragments":["then"]},{"Key":"different then","Fragments":["their","intended"]},{"Key":"then their","Fragments":["comparison"]},{"Key":"their comparison","Fragments":["will"]},{"Key":"comparison will","Fragments":["take"]},{"Key":"will take","Fragments":["no"]},{"Key":"take no","Fragments":["much"]},{"Key":"no much","Fragments":["more"]},{"Key":"more time","Fragments":["than"]},{"Key":"time than","Fragments":["the"]},{"Key":"comparison of","Fragments":["their"]},{"Key":"of their","Fragments":["first"]},{"Key":"their first","Fragments":["elements"]},{"Key":"first elements","Fragments":["-"]},{"Key":"elements -","Fragments":["these"]},{"Key":"- these","Fragments":["elements"]},{"Key":"these elements","Fragments":["are"]},{"Key":"elements are","Fragments":["different"]},{"Key":"are different","Fragments":["so"]},{"Key":"different so","Fragments":["the"]},{"Key":"so the","Fragments":["rest"]},{"Key":"rest of","Fragments":["the","my"]},{"Key":"the sequences","Fragments":["will"]},{"Key":"sequences will","Fragments":["not"]},{"Key":"But if","Fragments":["we"]},{"Key":"have long","Fragments":["stripe"]},{"Key":"long stripe","Fragments":["of"]},{"Key":"stripe of","Fragments":["equal"]},{"Key":"pairs ending","Fragments":["with"]},{"Key":"ending with","Fragments":["a"]},{"Key":"a not","Fragments":["equal"]},{"Key":"not equal","Fragments":["one"]},{"Key":"equal one","Fragments":["we"]},{"Key":"one we","Fragments":["will"]},{"Key":"we will","Fragments":["compare"]},{"Key":"will compare","Fragments":["the"]},{"Key":"compare the","Fragments":["whole"]},{"Key":"whole stripe","Fragments":["on"]},{"Key":"stripe on","Fragments":["each"]},{"Key":"each step","Fragments":["for"]},{"Key":"step for","Fragments":["nothing."]},{"Key":" AAAAA","Fragments":["and"]},{"Key":"AAAAA and","Fragments":["BBBBB","AAAAB"]},{"Key":"and BBBBB","Fragments":["will"]},{"Key":"BBBBB will","Fragments":["give"]},{"Key":"will give","Fragments":["1","5"]},{"Key":"give 1","Fragments":["+"]},{"Key":"1 +","Fragments":["1","1","1","1"]},{"Key":"1 comparisons","Fragments":["in"]},{"Key":"first clause","Fragments":["for","is"]},{"Key":"entire execution,","Fragments":["but"]},{"Key":"execution, but","Fragments":["AAAAA"]},{"Key":"but AAAAA","Fragments":["and"]},{"Key":"and AAAAB","Fragments":["will"]},{"Key":"AAAAB will","Fragments":["give"]},{"Key":"give 5","Fragments":["+"]},{"Key":"5 +","Fragments":["4"]},{"Key":"+ 4","Fragments":["+"]},{"Key":"4 +","Fragments":["3"]},{"Key":"+ 3","Fragments":["+"]},{"Key":"3 +","Fragments":["2"]},{"Key":"+ 2","Fragments":["+"]},{"Key":"2 +","Fragments":["1."]},{"Key":"+ 1.","Fragments":["In"]},{"Key":"1. In","Fragments":["the"]},{"Key":"first case","Fragments":["run"]},{"Key":"case run","Fragments":["time"]},{"Key":"run time","Fragments":["grows"]},{"Key":"time grows","Fragments":["linearly"]},{"Key":"grows linearly","Fragments":["with"]},{"Key":"linearly with","Fragments":["the"]},{"Key":"the size","Fragments":["of","of"]},{"Key":"size of","Fragments":["input,","`N`"]},{"Key":"of input,","Fragments":["but"]},{"Key":"input, but","Fragments":["in"]},{"Key":"second case","Fragments":["it"]},{"Key":"it grows","Fragments":["proportionally"]},{"Key":"grows proportionally","Fragments":["to"]},{"Key":"proportionally to","Fragments":["the"]},{"Key":"the n^2","Fragments":["because"]},{"Key":"n^2 because","Fragments":["the"]},{"Key":"the sum","Fragments":["of","would"]},{"Key":"sum of","Fragments":["arithmetic","no"]},{"Key":"of arithmetic","Fragments":["progression"]},{"Key":"arithmetic progression","Fragments":["will"]},{"Key":"progression will","Fragments":["be"]},{"Key":"be (1","Fragments":["+"]},{"Key":"(1 +","Fragments":["n)"]},{"Key":"+ n)","Fragments":["*"]},{"Key":"n) *","Fragments":["n"]},{"Key":"* n","Fragments":["/"]},{"Key":"n /","Fragments":["2."]},{"Key":"I hope","Fragments":["explanation","you","you"]},{"Key":"hope explanation","Fragments":["is"]},{"Key":"explanation is","Fragments":["clear"]},{"Key":"is clear","Fragments":["enough,","while"]},{"Key":"clear enough,","Fragments":["if"]},{"Key":"enough, if","Fragments":["you"]},{"Key":"have additional","Fragments":["questions"]},{"Key":"additional questions","Fragments":["I"]},{"Key":"questions I","Fragments":["would"]},{"Key":"be glad","Fragments":["to"]},{"Key":"glad to","Fragments":["help."]},{"Key":"That's what","Fragments":["I've"]},{"Key":"what I've","Fragments":["got"]},{"Key":"got with","Fragments":["that"]},{"Key":"with that","Fragments":["test","compact"]},{"Key":"that test","Fragments":["case:"]},{"Key":" `test(\"All","Fragments":["different\","]},{"Key":"`test(\"All different\",","Fragments":["lists:duplicate(Len,"]},{"Key":"different\", lists:duplicate(Len,","Fragments":["42),"]},{"Key":"lists:duplicate(Len, 42),","Fragments":["lists:duplicate(Len,"]},{"Key":"42), lists:duplicate(Len,","Fragments":["43)),`"]},{"Key":" \"All","Fragments":["different\""]},{"Key":" @monty","Fragments":["I"]},{"Key":"@monty I","Fragments":["see;"]},{"Key":"I see;","Fragments":["I"]},{"Key":"see; I","Fragments":["did"]},{"Key":"not take","Fragments":["the"]},{"Key":"take the","Fragments":["worst"]},{"Key":"the worst","Fragments":["case"]},{"Key":"worst case","Fragments":["for"]},{"Key":"for `length`","Fragments":["into"]},{"Key":"`length` into","Fragments":["account."]},{"Key":"into account.","Fragments":["Thank"]},{"Key":"account. Thank","Fragments":["you"]},{"Key":"for highlighting","Fragments":["this!"]},{"Key":"highlighting this!","Fragments":["For"]},{"Key":"this! For","Fragments":["completeness'"]},{"Key":"For completeness'","Fragments":["sake:"]},{"Key":"completeness' sake:","Fragments":["my"]},{"Key":"sake: my","Fragments":["benchmark"]},{"Key":"benchmark results","Fragments":["for"]},{"Key":"results for","Fragments":["sequences"]},{"Key":"for sequences","Fragments":["differing","with"]},{"Key":"last character","Fragments":["are:"]},{"Key":" Implementation|(last","Fragments":["different;"]},{"Key":"Implementation|(last different;","Fragments":["in"]},{"Key":"different; in","Fragments":["ms)"]},{"Key":" hd_rec2|aborted","Fragments":["after"]},{"Key":"hd_rec2|aborted after","Fragments":["a"]},{"Key":"after a","Fragments":["few"]},{"Key":" @katherine","Fragments":["At"]},{"Key":"@katherine At","Fragments":["last"]},{"Key":"At last","Fragments":["I"]},{"Key":"last I","Fragments":["found"]},{"Key":"found the","Fragments":["time"]},{"Key":"to [implement](http://lpaste.net/144903)","Fragments":["the"]},{"Key":"[implement](http://lpaste.net/144903) the","Fragments":["same"]},{"Key":"same algorithms","Fragments":["in"]},{"Key":"algorithms in","Fragments":["Haskell"]},{"Key":"Haskell to","Fragments":["ensure"]},{"Key":"to ensure","Fragments":["that"]},{"Key":"ensure that","Fragments":["my"]},{"Key":"intuition \"use","Fragments":["standard"]},{"Key":"\"use standard","Fragments":["functions\""]},{"Key":"standard functions\"","Fragments":["works"]},{"Key":"functions\" works","Fragments":["there"]},{"Key":"works there","Fragments":[":-)"]},{"Key":"there :-)","Fragments":["(I"]},{"Key":":-) (I","Fragments":["have"]},{"Key":"(I have","Fragments":["much"]},{"Key":"have much","Fragments":["more"]},{"Key":"more experience","Fragments":["with"]},{"Key":"experience with","Fragments":["Haskell"]},{"Key":"with Haskell","Fragments":["than"]},{"Key":"Haskell than","Fragments":["Erlang"]},{"Key":"than Erlang","Fragments":["by"]},{"Key":"Erlang by","Fragments":["now)."]},{"Key":"by now).","Fragments":["The"]},{"Key":"now). The","Fragments":["fastest"]},{"Key":"The fastest","Fragments":["version"]},{"Key":"fastest version","Fragments":["in"]},{"Key":"version in","Fragments":["Haskell"]},{"Key":" hdFl","Fragments":["xs","0.05"]},{"Key":"hdFl xs","Fragments":["ys"]},{"Key":"xs ys","Fragments":["="]},{"Key":"ys =","Fragments":["length"]},{"Key":"= length","Fragments":["$"]},{"Key":"length $","Fragments":["filter"]},{"Key":"$ filter","Fragments":["(uncurry"]},{"Key":"filter (uncurry","Fragments":["(/=))"]},{"Key":"(uncurry (/=))","Fragments":["$"]},{"Key":"(/=)) $","Fragments":["zip"]},{"Key":"$ zip","Fragments":["xs"]},{"Key":"zip xs","Fragments":["ys"]},{"Key":"While the","Fragments":["manual"]},{"Key":"manual tail","Fragments":["recursion"]},{"Key":"recursion is","Fragments":["almost","preffered","a"]},{"Key":"is almost","Fragments":["20","always","as","immediately"]},{"Key":"almost 20","Fragments":["times"]},{"Key":"20 times","Fragments":["slower."]},{"Key":" Results","Fragments":["are"]},{"Key":"are similar","Fragments":["for"]},{"Key":"similar for","Fragments":["different"]},{"Key":"for different","Fragments":["inputs:"]},{"Key":" hdRec","Fragments":["0.9"]},{"Key":"hdRec 0.9","Fragments":["sec"]},{"Key":"0.9 sec","Fragments":["400","400"]},{"Key":"sec 400","Fragments":["mb","mb"]},{"Key":" hdFold","Fragments":["0.9"]},{"Key":"hdFold 0.9","Fragments":["sec"]},{"Key":" hdLc","Fragments":["0.3"]},{"Key":"hdLc 0.3","Fragments":["200"]},{"Key":"0.3 200","Fragments":["mb"]},{"Key":"hdFl 0.05","Fragments":["120"]},{"Key":"0.05 120","Fragments":["mb"]},{"Key":" update","Fragments":["to"]},{"Key":"update to","Fragments":["use"]},{"Key":"use math","Fragments":["module"]},{"Key":"lists foldl","Fragments":["and"]},{"Key":"foldl and","Fragments":["seq"]},{"Key":"and seq","Fragments":["for"]},{"Key":"seq for","Fragments":["total"]},{"Key":" Shortcut","Fragments":["for"]},{"Key":"Shortcut for","Fragments":["the"]},{"Key":"the recursive","Fragments":["version:","versions.","deal"]},{"Key":"recursive version:","Fragments":["terminate"]},{"Key":"version: terminate","Fragments":["as"]},{"Key":"terminate as","Fragments":["soon"]},{"Key":"the remaining","Fragments":["tails"]},{"Key":"remaining tails","Fragments":["are"]},{"Key":"tails are","Fragments":["equal;"]},{"Key":"are equal;","Fragments":["do"]},{"Key":"equal; do","Fragments":["not"]},{"Key":"do not","Fragments":["let"]},{"Key":"not let","Fragments":["the"]},{"Key":"run until","Fragments":["they"]},{"Key":"until they","Fragments":["are"]},{"Key":"are empty.","Fragments":["Testing"]},{"Key":"empty. Testing","Fragments":["shows"]},{"Key":"Testing shows","Fragments":["that"]},{"Key":"shows that","Fragments":["this"]},{"Key":"this actually","Fragments":["speeds"]},{"Key":"actually speeds","Fragments":["things"]},{"Key":"speeds things","Fragments":["up"]},{"Key":"things up","Fragments":["considerably"]},{"Key":"up considerably","Fragments":["for"]},{"Key":"considerably for","Fragments":["sequences"]},{"Key":"sequences with","Fragments":["long"]},{"Key":"with long","Fragments":["commong","guard"]},{"Key":"long commong","Fragments":["tails."]},{"Key":"comprehension version","Fragments":["is"]},{"Key":"version is","Fragments":["much","not"]},{"Key":"much slower","Fragments":["than"]},{"Key":"slower than","Fragments":["either","pattern-matching,"]},{"Key":"than either","Fragments":["of"]},{"Key":"either of","Fragments":["the"]},{"Key":" \u003e","Fragments":["Programs","Also,","Could","Also,","In","I'm","Why","Keep","In","|","|------------|----------|","|","|","|"]},{"Key":"\u003e Programs","Fragments":["must"]},{"Key":"Programs must","Fragments":["be"]},{"Key":"written for","Fragments":["people"]},{"Key":"for people","Fragments":["to"]},{"Key":"people to","Fragments":["read,"]},{"Key":"to read,","Fragments":["and"]},{"Key":"read, and","Fragments":["only"]},{"Key":"only incidentally","Fragments":["for"]},{"Key":"incidentally for","Fragments":["machines"]},{"Key":"for machines","Fragments":["to"]},{"Key":"machines to","Fragments":["execute."]},{"Key":" ―","Fragments":["Harold"]},{"Key":"― Harold","Fragments":["Abelson,"]},{"Key":"Harold Abelson,","Fragments":["Structure"]},{"Key":"Abelson, Structure","Fragments":["and"]},{"Key":"Structure and","Fragments":["Interpretation"]},{"Key":"and Interpretation","Fragments":["of"]},{"Key":"Interpretation of","Fragments":["Computer"]},{"Key":"of Computer","Fragments":["Programs"]},{"Key":"To clarify,","Fragments":["I'm"]},{"Key":"clarify, I'm","Fragments":["not"]},{"Key":"not saying","Fragments":["you"]},{"Key":"saying you","Fragments":["should"]},{"Key":"should change","Fragments":["anything,"]},{"Key":"change anything,","Fragments":["I"]},{"Key":"anything, I","Fragments":["like","probably"]},{"Key":"think recursive","Fragments":["functions"]},{"Key":"really elegant.","Fragments":["I"]},{"Key":"elegant. I","Fragments":["am"]},{"Key":"am questioning","Fragments":["your"]},{"Key":"questioning your","Fragments":["stance"]},{"Key":"your stance","Fragments":["on"]},{"Key":"stance on","Fragments":["the"]},{"Key":"list comprehensions.","Fragments":["Let"]},{"Key":"comprehensions. Let","Fragments":["me"]},{"Key":"Let me","Fragments":["put","suggest"]},{"Key":"me put","Fragments":["this"]},{"Key":"put this","Fragments":["another"]},{"Key":"this another","Fragments":["way."]},{"Key":"another way.","Fragments":["Are"]},{"Key":"way. Are","Fragments":["you"]},{"Key":"Are you","Fragments":["having","referring"]},{"Key":"you having","Fragments":["a"]},{"Key":"a performance","Fragments":["problem","problem,"]},{"Key":"performance problem","Fragments":["and"]},{"Key":"problem and","Fragments":["are","don't"]},{"Key":"and are","Fragments":["you"]},{"Key":"you sure","Fragments":["the"]},{"Key":"sure the","Fragments":["list"]},{"Key":" Some","Fragments":["really"]},{"Key":"Some really","Fragments":["minor"]},{"Key":"really minor","Fragments":["things."]},{"Key":"minor things.","Fragments":["I"]},{"Key":"things. I","Fragments":["like"]},{"Key":"name my","Fragments":["\"I"]},{"Key":"my \"I","Fragments":["don't"]},{"Key":"\"I don't","Fragments":["care\""]},{"Key":"don't care\"","Fragments":["variables."]},{"Key":"care\" variables.","Fragments":["Also,"]},{"Key":"variables. Also,","Fragments":["when"]},{"Key":"Also, when","Fragments":["I","I","possible,"]},{"Key":"see `Ls`","Fragments":["I","I"]},{"Key":"`Ls` I","Fragments":["immediately","immediately"]},{"Key":"I immediately","Fragments":["think","think"]},{"Key":"immediately think","Fragments":["list","list"]},{"Key":"think list","Fragments":["of","of"]},{"Key":"of lists.","Fragments":["Could","Looks"]},{"Key":"lists. Could","Fragments":["you"]},{"Key":"better name","Fragments":["for","for","than","would"]},{"Key":"name for","Fragments":["`Current`?","`Current`?","return"]},{"Key":" @stuart,","Fragments":["absolutely,"]},{"Key":"@stuart, absolutely,","Fragments":["you"]},{"Key":"absolutely, you","Fragments":["should"]},{"Key":"should never","Fragments":["choose"]},{"Key":"never choose","Fragments":["something"]},{"Key":"choose something","Fragments":["you"]},{"Key":"something you","Fragments":["know"]},{"Key":"know is","Fragments":["going"]},{"Key":"Regarding the","Fragments":["`Ls`,"]},{"Key":"the `Ls`,","Fragments":["forget"]},{"Key":"`Ls`, forget","Fragments":["I"]},{"Key":"said anything,","Fragments":["I"]},{"Key":"probably wasn't","Fragments":["completely"]},{"Key":"wasn't completely","Fragments":["awake"]},{"Key":"completely awake","Fragments":["when"]},{"Key":"awake when","Fragments":["I"]},{"Key":"wrote that,","Fragments":["sorry."]},{"Key":" Not","Fragments":["having","much","sure"]},{"Key":"Not having","Fragments":["a"]},{"Key":"performance problem,","Fragments":["it's"]},{"Key":"problem, it's","Fragments":["just"]},{"Key":"just nice","Fragments":["to"]},{"Key":"be aware","Fragments":["of"]},{"Key":"of pros/cons","Fragments":["of"]},{"Key":"pros/cons of","Fragments":["each"]},{"Key":"of each","Fragments":["approach.","number,"]},{"Key":"each approach.","Fragments":["I"]},{"Key":"approach. I","Fragments":["also","like"]},{"Key":"also doubt","Fragments":["that"]},{"Key":"doubt that","Fragments":["anyone"]},{"Key":"that anyone","Fragments":["on"]},{"Key":"anyone on","Fragments":["`exercism.io`,"]},{"Key":"on `exercism.io`,","Fragments":["where"]},{"Key":"`exercism.io`, where","Fragments":["new"]},{"Key":"where new","Fragments":["languages"]},{"Key":"new languages","Fragments":["are"]},{"Key":"languages are","Fragments":["being"]},{"Key":"are being","Fragments":["tried"]},{"Key":"being tried","Fragments":["out,"]},{"Key":"tried out,","Fragments":["are"]},{"Key":"out, are","Fragments":["running"]},{"Key":"are running","Fragments":["into"]},{"Key":"running into","Fragments":["performance"]},{"Key":"into performance","Fragments":["problems"]},{"Key":"performance problems","Fragments":["in"]},{"Key":"problems in","Fragments":["production."]},{"Key":"in production.","Fragments":[":)"]},{"Key":"\u003e Also,","Fragments":["when","you"]},{"Key":"didn't get","Fragments":["that."]},{"Key":"get that.","Fragments":["Aren't"]},{"Key":"that. Aren't","Fragments":["the"]},{"Key":"Aren't the","Fragments":["inputs"]},{"Key":"the inputs","Fragments":["lists?"]},{"Key":"inputs lists?","Fragments":["The"]},{"Key":"lists? The","Fragments":["`_tests.erl`"]},{"Key":"The `_tests.erl`","Fragments":["labels"]},{"Key":"`_tests.erl` labels","Fragments":["the"]},{"Key":"labels the","Fragments":["input"]},{"Key":"\u003e Could","Fragments":["you"]},{"Key":" `Accumulator`","Fragments":["seems"]},{"Key":"`Accumulator` seems","Fragments":["verbose,"]},{"Key":"seems verbose,","Fragments":["so"]},{"Key":"verbose, so","Fragments":["I"]},{"Key":"suppose `Acc`","Fragments":["is"]},{"Key":"`Acc` is","Fragments":["conventionally"]},{"Key":"is conventionally","Fragments":["used?"]},{"Key":"need for","Fragments":["the","the","nesting.","guards,","conversions"]},{"Key":"the `is_integer`","Fragments":["guard"]},{"Key":"`is_integer` guard","Fragments":["---"]},{"Key":"guard ---","Fragments":["it's"]},{"Key":"--- it's","Fragments":["okay"]},{"Key":"it's okay","Fragments":["for"]},{"Key":"okay for","Fragments":["erlang"]},{"Key":"for erlang","Fragments":["to","this"]},{"Key":"erlang to","Fragments":["crash!"]},{"Key":" Additionally,","Fragments":["a"]},{"Key":"Additionally, a","Fragments":["minor,"]},{"Key":"a minor,","Fragments":["stylistic"]},{"Key":"minor, stylistic","Fragments":["nit:"]},{"Key":"stylistic nit:","Fragments":["I"]},{"Key":"nit: I","Fragments":["find"]},{"Key":"that when","Fragments":["I"]},{"Key":"to reach","Fragments":["for"]},{"Key":"reach for","Fragments":["a"]},{"Key":"a `case`,","Fragments":["I"]},{"Key":"`case`, I","Fragments":["actually"]},{"Key":"I actually","Fragments":["end","thought","find","did!"]},{"Key":"actually end","Fragments":["up"]},{"Key":"end up","Fragments":["wanting"]},{"Key":"up wanting","Fragments":["to"]},{"Key":"wanting to","Fragments":["write"]},{"Key":"write another","Fragments":["function."]},{"Key":" re:","Fragments":["the","the"]},{"Key":"re: the","Fragments":["guard,","`case`,"]},{"Key":"the guard,","Fragments":["for"]},{"Key":"guard, for","Fragments":["which"]},{"Key":"which use","Fragments":["cases"]},{"Key":"use cases","Fragments":["would"]},{"Key":"cases would","Fragments":["you"]},{"Key":"you recommend","Fragments":["using"]},{"Key":"recommend using","Fragments":["one?"]},{"Key":"the `case`,","Fragments":["yeah"]},{"Key":"`case`, yeah","Fragments":["I"]},{"Key":"yeah I","Fragments":["feel"]},{"Key":"feel ya","Fragments":["there"]},{"Key":"ya there","Fragments":[":)"]},{"Key":"have multiple","Fragments":["discrete"]},{"Key":"multiple discrete","Fragments":["code"]},{"Key":"discrete code","Fragments":["paths"]},{"Key":"code paths","Fragments":["which"]},{"Key":"paths which","Fragments":["are"]},{"Key":"are predicated","Fragments":["upon"]},{"Key":"predicated upon","Fragments":["the"]},{"Key":"upon the","Fragments":["type"]},{"Key":"of `Year`","Fragments":["(e.g.","in"]},{"Key":"`Year` (e.g.","Fragments":["integer"]},{"Key":"(e.g. integer","Fragments":["vs"]},{"Key":"integer vs","Fragments":["float)"]},{"Key":"vs float)","Fragments":["I'd"]},{"Key":"float) I'd","Fragments":["consider"]},{"Key":"I'd consider","Fragments":["reaching"]},{"Key":"consider reaching","Fragments":["for"]},{"Key":"reaching for","Fragments":["a"]},{"Key":"this specific","Fragments":["case"]},{"Key":"specific case","Fragments":["it"]},{"Key":"not only","Fragments":["OK"]},{"Key":"only OK","Fragments":["to"]},{"Key":"OK to","Fragments":["crash,"]},{"Key":"to crash,","Fragments":["it"]},{"Key":"crash, it","Fragments":["is"]},{"Key":"the best","Fragments":["way","solution,","example,","practice","functional"]},{"Key":"best way","Fragments":["in"]},{"Key":"way in","Fragments":["my"]},{"Key":"my opinion.","Fragments":["Think"]},{"Key":"opinion. Think","Fragments":["about"]},{"Key":"about what","Fragments":["happens","you","you"]},{"Key":"caller inadvertently","Fragments":["passes"]},{"Key":"inadvertently passes","Fragments":["in"]},{"Key":"passes in","Fragments":["a"]},{"Key":"a float","Fragments":["instead"]},{"Key":"float instead","Fragments":["of"]},{"Key":"of an","Fragments":["integer."]},{"Key":"an integer.","Fragments":["In"]},{"Key":"integer. In","Fragments":["the"]},{"Key":"current version,","Fragments":["the"]},{"Key":"version, the","Fragments":["function"]},{"Key":"function would","Fragments":["always","be","help","step"]},{"Key":"would always","Fragments":["return"]},{"Key":"return `false`,","Fragments":["letting"]},{"Key":"`false`, letting","Fragments":["the"]},{"Key":"the mistake","Fragments":["go"]},{"Key":"mistake go","Fragments":["unnoticed"]},{"Key":"go unnoticed","Fragments":["-"]},{"Key":"unnoticed -","Fragments":["potentially"]},{"Key":"- potentially","Fragments":["for"]},{"Key":"potentially for","Fragments":["a"]},{"Key":"very long","Fragments":["time"]},{"Key":"long time","Fragments":["-"]},{"Key":"time -","Fragments":["and"]},{"Key":"- and","Fragments":["propagating","a"]},{"Key":"and propagating","Fragments":["erroneous"]},{"Key":"propagating erroneous","Fragments":["values,"]},{"Key":"erroneous values,","Fragments":["whereas"]},{"Key":"values, whereas","Fragments":["a"]},{"Key":"whereas a","Fragments":["crash"]},{"Key":"a crash","Fragments":["would"]},{"Key":"crash would","Fragments":["draw"]},{"Key":"would draw","Fragments":["attention"]},{"Key":"draw attention","Fragments":["to"]},{"Key":"attention to","Fragments":["the"]},{"Key":"That's fair.","Fragments":["I'm"]},{"Key":"fair. I'm","Fragments":["still"]},{"Key":"I'm still","Fragments":["covered","trying","hoping","quite","not","pretty"]},{"Key":"still covered","Fragments":["in"]},{"Key":"covered in","Fragments":["the"]},{"Key":"the vestiges","Fragments":["of"]},{"Key":"vestiges of","Fragments":["OOP"]},{"Key":"of OOP","Fragments":["garb"]},{"Key":"OOP garb","Fragments":[":)"]},{"Key":" Honestly","Fragments":["I"]},{"Key":"Honestly I","Fragments":["don't"]},{"Key":"good handle","Fragments":["on"]},{"Key":"handle on","Fragments":["Erlang"]},{"Key":"on Erlang","Fragments":["error-handling/etc."]},{"Key":"Erlang error-handling/etc.","Fragments":["yet,"]},{"Key":"error-handling/etc. yet,","Fragments":["so"]},{"Key":"yet, so","Fragments":["thanks"]},{"Key":"so thanks","Fragments":["for"]},{"Key":"for pointing","Fragments":["me","me","this"]},{"Key":"pointing me","Fragments":["in","my"]},{"Key":"me in","Fragments":["that","the"]},{"Key":"I struggled","Fragments":["a"]},{"Key":"struggled a","Fragments":["bit"]},{"Key":"bit trying","Fragments":["to"]},{"Key":"not break","Fragments":["`complement`"]},{"Key":"break `complement`","Fragments":["out"]},{"Key":"`complement` out","Fragments":["into"]},{"Key":"its own","Fragments":["function."]},{"Key":"own function.","Fragments":["I'm"]},{"Key":"function. I'm","Fragments":["still"]},{"Key":"still trying","Fragments":["to"]},{"Key":"to sort","Fragments":["out"]},{"Key":"sort out","Fragments":["the"]},{"Key":"the syntax","Fragments":["of","|"]},{"Key":"syntax of","Fragments":["a"]},{"Key":"few things","Fragments":["around"]},{"Key":"things around","Fragments":["anonymous"]},{"Key":"around anonymous","Fragments":["functions"]},{"Key":"functions /","Fragments":["etc."]},{"Key":"/ etc.","Fragments":["Maybe"]},{"Key":"etc. Maybe","Fragments":["this"]},{"Key":"this being","Fragments":["a"]},{"Key":"separate function","Fragments":["is","and"]},{"Key":"I'm find","Fragments":["that"]},{"Key":"that most","Fragments":["of"]},{"Key":"most of","Fragments":["the","my","stdlib."]},{"Key":"time when","Fragments":["I"]},{"Key":"statement it","Fragments":["could"]},{"Key":"be pattern","Fragments":["matching,"]},{"Key":"pattern matching,","Fragments":["`complement/1`","maybe","which"]},{"Key":"matching, `complement/1`","Fragments":["is"]},{"Key":"`complement/1` is","Fragments":["a","a"]},{"Key":"a perfect","Fragments":["use"]},{"Key":"perfect use","Fragments":["case"]},{"Key":"use case","Fragments":["for"]},{"Key":"for such.","Fragments":["There's"]},{"Key":"such. There's","Fragments":["also"]},{"Key":"There's also","Fragments":["a"]},{"Key":"little room","Fragments":["for"]},{"Key":"room for","Fragments":["unknown","confusion"]},{"Key":"for unknown","Fragments":["nucleotides"]},{"Key":"unknown nucleotides","Fragments":["returning"]},{"Key":"nucleotides returning","Fragments":["an"]},{"Key":"returning an","Fragments":["`error`","`ok`","integer"]},{"Key":"an `error`","Fragments":["atom."]},{"Key":" `complement/1`","Fragments":["is"]},{"Key":"a perfectly","Fragments":["good"]},{"Key":"perfectly good","Fragments":["standalone"]},{"Key":"good standalone","Fragments":["function,"]},{"Key":"standalone function,","Fragments":["but"]},{"Key":"function, but","Fragments":["functions"]},{"Key":"but functions","Fragments":["pattern"]},{"Key":"functions pattern","Fragments":["match"]},{"Key":"pattern match","Fragments":["too","keeps","on","or","for","on,","in"]},{"Key":"match too","Fragments":["not"]},{"Key":"too not","Fragments":["just"]},{"Key":"not just","Fragments":["case"]},{"Key":"just case","Fragments":["statements."]},{"Key":"case statements.","Fragments":["In"]},{"Key":"statements. In","Fragments":["this"]},{"Key":"case since","Fragments":["*all*","we"]},{"Key":"since *all*","Fragments":["it's"]},{"Key":"*all* it's","Fragments":["doing"]},{"Key":"it's doing","Fragments":["it"]},{"Key":"it pattern","Fragments":["matching"]},{"Key":"matching then","Fragments":["a"]},{"Key":"then a","Fragments":["list"]},{"Key":"of possibilities","Fragments":["like"]},{"Key":"possibilities like","Fragments":["`complement($G)"]},{"Key":"like `complement($G)","Fragments":["-\u003e"]},{"Key":"`complement($G) -\u003e","Fragments":["$C`"]},{"Key":"-\u003e $C`","Fragments":["is","to"]},{"Key":"$C` is","Fragments":["appropriate."]},{"Key":"While there","Fragments":["is"]},{"Key":"is nothing","Fragments":["wrong"]},{"Key":"with creating","Fragments":["an"]},{"Key":"creating an","Fragments":["accumulator"]},{"Key":"an accumulator","Fragments":["and","to","variable","even","and"]},{"Key":"accumulator and","Fragments":["summing","a","a","reverse","returning"]},{"Key":"and summing","Fragments":["it,","it"]},{"Key":"summing it,","Fragments":["other"]},{"Key":"it, other","Fragments":["approaches"]},{"Key":"other approaches","Fragments":["may"]},{"Key":"approaches may","Fragments":["be"]},{"Key":"more succinct","Fragments":["and"]},{"Key":"succinct and","Fragments":["more","readable."]},{"Key":"and more","Fragments":["readable.","readable."]},{"Key":"you though","Fragments":["about"]},{"Key":"though about","Fragments":["summing"]},{"Key":"about summing","Fragments":["either"]},{"Key":"summing either","Fragments":["a"]},{"Key":"a `filtered`","Fragments":["list"]},{"Key":"`filtered` list","Fragments":["or"]},{"Key":"list or","Fragments":["`list","string?"]},{"Key":"or `list","Fragments":["comprehension`?"]},{"Key":"my initial","Fragments":["comments"]},{"Key":"initial comments","Fragments":["on"]},{"Key":"my other","Fragments":["exercises"]},{"Key":"other exercises","Fragments":["is"]},{"Key":"exercises is","Fragments":["\"I"]},{"Key":"is \"I","Fragments":["should"]},{"Key":"\"I should","Fragments":["really"]},{"Key":"should really","Fragments":["learn"]},{"Key":"really learn","Fragments":["list"]},{"Key":"learn list","Fragments":["comprehensions\"."]},{"Key":"list comprehensions\".","Fragments":["A"]},{"Key":"comprehensions\". A","Fragments":["lot"]},{"Key":"A lot","Fragments":["of"]},{"Key":"of this","Fragments":["is","solution.","exercise","solution,","problem","problem.","is","problem,","exercise.","one,"]},{"Key":"is manual","Fragments":["implementation,"]},{"Key":"manual implementation,","Fragments":["and"]},{"Key":"implementation, and","Fragments":["I"]},{"Key":"would agree","Fragments":["could"]},{"Key":"agree could","Fragments":["be"]},{"Key":"not familiar","Fragments":["with"]},{"Key":"familiar with","Fragments":["list","the"]},{"Key":"with list","Fragments":["comprehensions","comprehension."]},{"Key":"comprehensions you","Fragments":["could"]},{"Key":"still write","Fragments":["a"]},{"Key":"write a","Fragments":["more","list"]},{"Key":"concise function","Fragments":["using"]},{"Key":"Given you","Fragments":["have"]},{"Key":"have already","Fragments":["written"]},{"Key":"already written","Fragments":["a"]},{"Key":"written a","Fragments":["`Factor`"]},{"Key":"a `Factor`","Fragments":["predicate"]},{"Key":"`Factor` predicate","Fragments":["that"]},{"Key":"predicate that","Fragments":["filter/2"]},{"Key":"that filter/2","Fragments":["could"]},{"Key":"filter/2 could","Fragments":["use."]},{"Key":" updated","Fragments":["to"]},{"Key":"updated to","Fragments":["remove"]},{"Key":"to remove","Fragments":["list","that","whitespace"]},{"Key":"remove list","Fragments":["reversing"]},{"Key":"list reversing","Fragments":["from"]},{"Key":"reversing from","Fragments":["nucleotide_counts"]},{"Key":"from nucleotide_counts","Fragments":["base"]},{"Key":"nucleotide_counts base","Fragments":["condition"]},{"Key":" Haskell","Fragments":["+"]},{"Key":"Haskell +","Fragments":["Clojure"]},{"Key":"+ Clojure","Fragments":["="]},{"Key":"Clojure =","Fragments":["non-idiomatic"]},{"Key":"= non-idiomatic","Fragments":["Erlang"]},{"Key":" Feedback","Fragments":["wanted!"]},{"Key":" Creating","Fragments":["intermediate"]},{"Key":"Creating intermediate","Fragments":["lists"]},{"Key":"lists is","Fragments":["not"]},{"Key":"the most","Fragments":["efficient","concise","common","obvious","expressive","readable"]},{"Key":"most efficient","Fragments":["operation"]},{"Key":"efficient operation","Fragments":["(in"]},{"Key":"operation (in","Fragments":["any"]},{"Key":"(in any","Fragments":["language)."]},{"Key":"any language).","Fragments":["Let"]},{"Key":"language). Let","Fragments":["me"]},{"Key":"me suggest","Fragments":["a"]},{"Key":"different approach:","Fragments":["imagine"]},{"Key":"approach: imagine","Fragments":["iterating"]},{"Key":"imagine iterating","Fragments":["over"]},{"Key":"input in","Fragments":["one"]},{"Key":"one pass,","Fragments":["think"]},{"Key":"pass, think","Fragments":["about"]},{"Key":"do for","Fragments":["each","now."]},{"Key":"each character","Fragments":["to","you"]},{"Key":"character to","Fragments":["calculate"]},{"Key":"to calculate","Fragments":["the","the","the"]},{"Key":"the check","Fragments":["digit,","for"]},{"Key":"check digit,","Fragments":["and"]},{"Key":"digit, and","Fragments":["then"]},{"Key":"then implement","Fragments":["it"]},{"Key":"it using","Fragments":["tail"]},{"Key":"using tail","Fragments":["recursion."]},{"Key":"tail recursion.","Fragments":["This","I'll"]},{"Key":"recursion. This","Fragments":["can"]},{"Key":"This can","Fragments":["result"]},{"Key":"can result","Fragments":["in"]},{"Key":"in surprisingly","Fragments":["short"]},{"Key":"surprisingly short","Fragments":["code"]},{"Key":"short code","Fragments":["that"]},{"Key":"code that","Fragments":["runs"]},{"Key":"that runs","Fragments":["much"]},{"Key":"runs much","Fragments":["faster."]},{"Key":"Also, you","Fragments":["should","should","don't","might"]},{"Key":"not export","Fragments":["all","all"]},{"Key":"export all","Fragments":["functions","functions"]},{"Key":"functions but","Fragments":["only","only"]},{"Key":"but only","Fragments":["those","those","after"]},{"Key":"be visible","Fragments":["to","to"]},{"Key":"visible to","Fragments":["the","the"]},{"Key":"the outside,","Fragments":["and","and"]},{"Key":"outside, and","Fragments":["you","you"]},{"Key":"probably add","Fragments":["typespecs","typespecs"]},{"Key":"add typespecs","Fragments":["for","for","to"]},{"Key":"typespecs for","Fragments":["dialyzer.","dialyzer.","`export`ed"]},{"Key":"This was","Fragments":["a"]},{"Key":"a lazy","Fragments":["oversight."]},{"Key":"lazy oversight.","Fragments":["Thanks!"]},{"Key":" @claire,","Fragments":["thanks,"]},{"Key":"@claire, thanks,","Fragments":["I'll"]},{"Key":"thanks, I'll","Fragments":["take"]},{"Key":"I'll take","Fragments":["another"]},{"Key":"take another","Fragments":["look","crack"]},{"Key":"another look","Fragments":["at"]},{"Key":"You do","Fragments":["realize","that"]},{"Key":"do realize","Fragments":["that"]},{"Key":"that encoding","Fragments":["and"]},{"Key":"encoding and","Fragments":["decoding"]},{"Key":"and decoding","Fragments":["uses"]},{"Key":"decoding uses","Fragments":["the"]},{"Key":"uses the","Fragments":["*same*","pattern"]},{"Key":"the *same*","Fragments":["mapping?"]},{"Key":"*same* mapping?","Fragments":["Consider"]},{"Key":"mapping? Consider","Fragments":["using"]},{"Key":"common 'transcoding'","Fragments":["function"]},{"Key":"'transcoding' function","Fragments":["for"]},{"Key":"function for","Fragments":["both"]},{"Key":"for both","Fragments":["operations.","these","the"]},{"Key":"* Regenerating","Fragments":["the"]},{"Key":"Regenerating the","Fragments":["complete"]},{"Key":"the complete","Fragments":["mapping"]},{"Key":"complete mapping","Fragments":["for"]},{"Key":"mapping for","Fragments":["each"]},{"Key":"character you","Fragments":["want"]},{"Key":"to encode/decode","Fragments":["is"]},{"Key":"encode/decode is","Fragments":["very"]},{"Key":"very inefficient.","Fragments":["Consider"]},{"Key":"inefficient. Consider","Fragments":["moving"]},{"Key":"Consider moving","Fragments":["construction"]},{"Key":"moving construction","Fragments":["of"]},{"Key":"construction of","Fragments":["the","\u003cstrong\u003eResult\u003c/strong\u003e."]},{"Key":"mapping out","Fragments":["of"]},{"Key":" D'oh,","Fragments":["of"]},{"Key":"D'oh, of","Fragments":["course"]},{"Key":"of course","Fragments":["it's"]},{"Key":"course it's","Fragments":["the"]},{"Key":"it's the","Fragments":["same","fastest"]},{"Key":"same mapping!","Fragments":["Not"]},{"Key":"mapping! Not","Fragments":["sure"]},{"Key":"Not sure","Fragments":["what","why","if","how"]},{"Key":"sure what","Fragments":["I","my","to"]},{"Key":" With","Fragments":["the","that"]},{"Key":"With the","Fragments":["cipher"]},{"Key":"the cipher","Fragments":["map"]},{"Key":"cipher map","Fragments":["regeneration"]},{"Key":"map regeneration","Fragments":["-"]},{"Key":"regeneration -","Fragments":["I"]},{"Key":"was leaning","Fragments":["on","towards"]},{"Key":"leaning on","Fragments":["the"]},{"Key":"idea that","Fragments":["the"]},{"Key":"erlang runtime","Fragments":["could"]},{"Key":"runtime could","Fragments":["memoize"]},{"Key":"could memoize","Fragments":["that"]},{"Key":"memoize that","Fragments":["generation"]},{"Key":"that generation","Fragments":["and"]},{"Key":"generation and","Fragments":["avoid"]},{"Key":"and avoid","Fragments":["cluttering"]},{"Key":"avoid cluttering","Fragments":["my"]},{"Key":"cluttering my","Fragments":["own"]},{"Key":"own code","Fragments":["with"]},{"Key":"code with","Fragments":["doing"]},{"Key":"with doing","Fragments":["so"]},{"Key":"doing so","Fragments":["manually."]},{"Key":"so manually.","Fragments":["I've"]},{"Key":"manually. I've","Fragments":["no"]},{"Key":"I've no","Fragments":["idea"]},{"Key":"no idea","Fragments":["if"]},{"Key":"idea if","Fragments":["that"]},{"Key":"if that","Fragments":["will","would"]},{"Key":"will occur","Fragments":["though,"]},{"Key":"occur though,","Fragments":["so"]},{"Key":"I'll do","Fragments":["a"]},{"Key":"second submission","Fragments":["that"]},{"Key":"submission that","Fragments":["does"]},{"Key":"that does","Fragments":["manual"]},{"Key":"does manual","Fragments":["memoizing."]},{"Key":"Erlang does","Fragments":["not"]},{"Key":"not memoize","Fragments":["anything"]},{"Key":"memoize anything","Fragments":["automatically."]},{"Key":"anything automatically.","Fragments":["Auto-memoizing"]},{"Key":"automatically. Auto-memoizing","Fragments":["would"]},{"Key":"Auto-memoizing would","Fragments":["only"]},{"Key":"only make","Fragments":["sense"]},{"Key":"sense for","Fragments":["a"]},{"Key":"a purely","Fragments":["functional"]},{"Key":"purely functional","Fragments":["language"]},{"Key":"functional language","Fragments":["(which"]},{"Key":"language (which","Fragments":["Erlang"]},{"Key":"(which Erlang","Fragments":["is"]},{"Key":"is not),","Fragments":["in"]},{"Key":"not), in","Fragments":["which"]},{"Key":"in which","Fragments":["functions"]},{"Key":"which functions","Fragments":["are"]},{"Key":"are guaranteed","Fragments":["to","much"]},{"Key":"guaranteed to","Fragments":["be"]},{"Key":"be free","Fragments":["of"]},{"Key":"free of","Fragments":["side"]},{"Key":"of side","Fragments":["effects."]},{"Key":"this case,","Fragments":["I","it"]},{"Key":"case, I","Fragments":["would"]},{"Key":"would rather","Fragments":["do"]},{"Key":"rather do","Fragments":["without"]},{"Key":"do without","Fragments":["records."]},{"Key":"without records.","Fragments":["I"]},{"Key":"records. I","Fragments":["think"]},{"Key":"the adverse","Fragments":["effects"]},{"Key":"adverse effects","Fragments":["of"]},{"Key":"effects of","Fragments":["the"]},{"Key":"the noise","Fragments":["introduced"]},{"Key":"noise introduced","Fragments":["by"]},{"Key":"introduced by","Fragments":["the"]},{"Key":"the record","Fragments":["syntax","syntax"]},{"Key":"record syntax","Fragments":["far","myself,"]},{"Key":"syntax far","Fragments":["outweigh"]},{"Key":"far outweigh","Fragments":["the"]},{"Key":"outweigh the","Fragments":["benefits,"]},{"Key":"the benefits,","Fragments":["especially"]},{"Key":"benefits, especially","Fragments":["since"]},{"Key":"since future","Fragments":["structural"]},{"Key":"future structural","Fragments":["extensions"]},{"Key":"structural extensions","Fragments":["are"]},{"Key":"extensions are","Fragments":["very"]},{"Key":"are very","Fragments":["unlikely"]},{"Key":"very unlikely","Fragments":["(new","to"]},{"Key":"unlikely (new","Fragments":["nucleotides"]},{"Key":"(new nucleotides","Fragments":["would"]},{"Key":"nucleotides would","Fragments":["have"]},{"Key":"a property","Fragments":["list"]},{"Key":"property list","Fragments":["to"]},{"Key":"to manage","Fragments":["the"]},{"Key":"manage the","Fragments":["counts"]},{"Key":"the counts","Fragments":["myself,","in"]},{"Key":"counts myself,","Fragments":["even"]},{"Key":"myself, even","Fragments":["though"]},{"Key":"though this","Fragments":["is","could"]},{"Key":"probably a","Fragments":["bit","bit","brute"]},{"Key":"bit less","Fragments":["efficient."]},{"Key":" @winona,","Fragments":["while"]},{"Key":"@winona, while","Fragments":["I'm"]},{"Key":"while I'm","Fragments":["not"]},{"Key":"syntax myself,","Fragments":["I"]},{"Key":"myself, I","Fragments":["think"]},{"Key":"think records","Fragments":["are"]},{"Key":"right data","Fragments":["structure."]},{"Key":"data structure.","Fragments":["I"]},{"Key":"structure. I","Fragments":["haven't"]},{"Key":"haven't decided","Fragments":["how"]},{"Key":"decided how","Fragments":["I'm"]},{"Key":"how I'm","Fragments":["going"]},{"Key":"I'm going","Fragments":["to"]},{"Key":"to improve","Fragments":["this","the","it?","the"]},{"Key":"improve this","Fragments":["and"]},{"Key":"this and","Fragments":["I'm","the"]},{"Key":"still hoping","Fragments":["to"]},{"Key":"hoping to","Fragments":["get"]},{"Key":"get some","Fragments":["more"]},{"Key":"some more","Fragments":["feedback."]},{"Key":"more feedback.","Fragments":["Thank"]},{"Key":"feedback. Thank","Fragments":["you"]},{"Key":"you abstract","Fragments":["the"]},{"Key":"abstract the","Fragments":["divisibility"]},{"Key":"test here?","Fragments":["I"]},{"Key":"here? I","Fragments":["find","am"]},{"Key":"parentheses a","Fragments":["little"]},{"Key":"little overwhelming.","Fragments":["Otherwise"]},{"Key":"overwhelming. Otherwise","Fragments":["it's"]},{"Key":"Otherwise it's","Fragments":["nice"]},{"Key":"it's nice","Fragments":["and","and","and"]},{"Key":"This looks","Fragments":["better.","great,"]},{"Key":"looks better.","Fragments":["However,"]},{"Key":"better. However,","Fragments":["the"]},{"Key":"However, the","Fragments":["mapping"]},{"Key":"mapping is","Fragments":["still","constant"]},{"Key":"still generated","Fragments":["anew"]},{"Key":"generated anew","Fragments":["for"]},{"Key":"anew for","Fragments":["each"]},{"Key":"each call","Fragments":["to"]},{"Key":"to `encode`","Fragments":["or"]},{"Key":"`encode` or","Fragments":["`decode`."]},{"Key":"or `decode`.","Fragments":["Given"]},{"Key":"`decode`. Given","Fragments":["that"]},{"Key":"Given that","Fragments":["the"]},{"Key":"is constant","Fragments":["-"]},{"Key":"constant -","Fragments":["it"]},{"Key":"- it","Fragments":["is"]},{"Key":"the core","Fragments":["of","algorithm,"]},{"Key":"core of","Fragments":["the","your"]},{"Key":"the very","Fragments":["definition"]},{"Key":"very definition","Fragments":["of"]},{"Key":"definition of","Fragments":["the","`is_question`"]},{"Key":"the Atbash","Fragments":["cipher"]},{"Key":"Atbash cipher","Fragments":["and"]},{"Key":"cipher and","Fragments":["will"]},{"Key":"and will","Fragments":["thus","do"]},{"Key":"will thus","Fragments":["never"]},{"Key":"thus never","Fragments":["change"]},{"Key":"never change","Fragments":["-"]},{"Key":"change -","Fragments":["this"]},{"Key":"seems unnecessary","Fragments":["to"]},{"Key":"unnecessary to","Fragments":["me."]},{"Key":" Look","Fragments":["into"]},{"Key":"Look into","Fragments":["```lists:map/2```."]},{"Key":"into ```lists:map/2```.","Fragments":["It"]},{"Key":"```lists:map/2```. It","Fragments":["can","will"]},{"Key":"It can","Fragments":["simplify"]},{"Key":"can simplify","Fragments":["things"]},{"Key":"things quite","Fragments":["a"]},{"Key":"quite a","Fragments":["bit."]},{"Key":"I considered","Fragments":["not","doing","adding","it,"]},{"Key":"considered not","Fragments":["using"]},{"Key":"not using","Fragments":["a"]},{"Key":"a guard,","Fragments":["but"]},{"Key":"guard, but","Fragments":["it"]},{"Key":"it seemed","Fragments":["more","more"]},{"Key":"seemed more","Fragments":["straightforward","straightforward"]},{"Key":"more straightforward","Fragments":["to","than","solutions"]},{"Key":"straightforward to","Fragments":["show"]},{"Key":"show the","Fragments":["2","decision"]},{"Key":"the 2","Fragments":["base","approaches"]},{"Key":"2 base","Fragments":["cases,"]},{"Key":"base cases,","Fragments":["the"]},{"Key":"cases, the","Fragments":["first"]},{"Key":"first covering","Fragments":["candidate"]},{"Key":"covering candidate","Fragments":["leap"]},{"Key":"candidate leap","Fragments":["years","year,"]},{"Key":"leap years","Fragments":["and"]},{"Key":"years and","Fragments":["the"]},{"Key":"second for","Fragments":["obvious"]},{"Key":"for obvious","Fragments":["non-leap"]},{"Key":"obvious non-leap","Fragments":["years."]},{"Key":" Within","Fragments":["the"]},{"Key":"Within the","Fragments":["first"]},{"Key":"function clause,","Fragments":["candidate"]},{"Key":"clause, candidate","Fragments":["leap"]},{"Key":"leap year,","Fragments":["I","then","I"]},{"Key":"year, I","Fragments":["used","always"]},{"Key":"a \"case\"","Fragments":["expression"]},{"Key":"\"case\" expression","Fragments":["because"]},{"Key":"expression because","Fragments":["it"]},{"Key":"straightforward than","Fragments":["an"]},{"Key":"than an","Fragments":["equivalent","iterative"]},{"Key":"an equivalent","Fragments":["\"if\""]},{"Key":"equivalent \"if\"","Fragments":["expression."]},{"Key":"\"if\" expression.","Fragments":["I"]},{"Key":"expression. I","Fragments":["find"]},{"Key":"find Erlang's","Fragments":["\"if\""]},{"Key":"Erlang's \"if\"","Fragments":["expression"]},{"Key":"\"if\" expression","Fragments":["a"]},{"Key":"expression a","Fragments":["bit"]},{"Key":"bit complicated","Fragments":["and"]},{"Key":"complicated and","Fragments":["in","it"]},{"Key":"and in","Fragments":["this"]},{"Key":"case (pun","Fragments":["intended),"]},{"Key":"(pun intended),","Fragments":["\"case\""]},{"Key":"intended), \"case\"","Fragments":["seemed"]},{"Key":"\"case\" seemed","Fragments":["to"]},{"Key":"seemed to","Fragments":["be"]},{"Key":"be simpler","Fragments":["to"]},{"Key":"simpler to","Fragments":["me."]},{"Key":"with you","Fragments":["about","regarding"]},{"Key":"you about","Fragments":["erlang's"]},{"Key":"about erlang's","Fragments":["\"if\"."]},{"Key":"erlang's \"if\".","Fragments":["It"]},{"Key":"\"if\". It","Fragments":["doesn't"]},{"Key":"The nested","Fragments":["cases","case"]},{"Key":"nested cases","Fragments":["make"]},{"Key":"cases make","Fragments":["this"]},{"Key":"this a","Fragments":["little","very","bit"]},{"Key":"bit hard","Fragments":["to","to","to"]},{"Key":"hard to","Fragments":["follow.","say","digest.","follow","follow","follow."]},{"Key":"to follow.","Fragments":["Imagine","I'll"]},{"Key":"follow. Imagine","Fragments":["what"]},{"Key":"Imagine what","Fragments":["would"]},{"Key":"there were","Fragments":["even"]},{"Key":"were even","Fragments":["more"]},{"Key":"more conditions.","Fragments":["Yikes!"]},{"Key":" Edit:","Fragments":["Also,"]},{"Key":"Edit: Also,","Fragments":["you"]},{"Key":"use \"if\"","Fragments":["or"]},{"Key":"\"if\" or","Fragments":["\"case\"."]},{"Key":"or \"case\".","Fragments":["Simple"]},{"Key":"\"case\". Simple","Fragments":["conditionals"]},{"Key":"Simple conditionals","Fragments":["will"]},{"Key":"conditionals will","Fragments":["evaluate"]},{"Key":"will evaluate","Fragments":["to"]},{"Key":"evaluate to","Fragments":["\"true\""]},{"Key":"to \"true\"","Fragments":["or"]},{"Key":"\"true\" or","Fragments":["\"false\"."]},{"Key":"Use ```andalso```","Fragments":["instead"]},{"Key":"```andalso``` instead","Fragments":["```and```,"]},{"Key":"instead ```and```,","Fragments":["Example:"]},{"Key":" \u003e\u003e","Fragments":["false","false"]},{"Key":"\u003e\u003e false","Fragments":["and","andalso"]},{"Key":"false and","Fragments":["(io:format(\"!!~n\")"]},{"Key":"and (io:format(\"!!~n\")","Fragments":["=="]},{"Key":"(io:format(\"!!~n\") ==","Fragments":["ok).","ok)."]},{"Key":"false andalso","Fragments":["(io:format(\"!!~n\")"]},{"Key":"andalso (io:format(\"!!~n\")","Fragments":["=="]},{"Key":" rather","Fragments":["than"]},{"Key":"than nesting","Fragments":["the"]},{"Key":"nesting the","Fragments":["functions"]},{"Key":"the functions","Fragments":["could"]},{"Key":"functions could","Fragments":["you"]},{"Key":"make them","Fragments":["a"]},{"Key":"them a","Fragments":["list"]},{"Key":"and recur","Fragments":["through"]},{"Key":"recur through","Fragments":["them?"]},{"Key":" Ok,","Fragments":["after","this"]},{"Key":"Ok, after","Fragments":["look"]},{"Key":"after look","Fragments":["at"]},{"Key":"think what","Fragments":["you"]},{"Key":"you mean","Fragments":["-","the"]},{"Key":"mean -","Fragments":["thanks,"]},{"Key":"- thanks,","Fragments":["I"]},{"Key":"thanks, I","Fragments":["try"]},{"Key":"try something","Fragments":["similar..."]},{"Key":"This still","Fragments":["isn't"]},{"Key":"still isn't","Fragments":["tail"]},{"Key":"reason is","Fragments":["that"]},{"Key":"are consing","Fragments":["onto"]},{"Key":"consing onto","Fragments":["the"]},{"Key":" FunEval","Fragments":["needs"]},{"Key":"FunEval needs","Fragments":["to"]},{"Key":"to pushed","Fragments":["onto"]},{"Key":"pushed onto","Fragments":["the"]},{"Key":"stack so","Fragments":["it"]},{"Key":"be conned","Fragments":["onto"]},{"Key":"conned onto","Fragments":["the"]},{"Key":"result of","Fragments":["the","`lists:seq`"]},{"Key":"the call","Fragments":["to","to","to","they"]},{"Key":"to accumulate(Function,","Fragments":["Tile)."]},{"Key":"The good","Fragments":["news"]},{"Key":"good news","Fragments":["is"]},{"Key":"news is","Fragments":["I"]},{"Key":"is I","Fragments":["don't","did"]},{"Key":"it matters.","Fragments":["I"]},{"Key":"matters. I","Fragments":["came"]},{"Key":"I came","Fragments":["across","up"]},{"Key":"came across","Fragments":["this"]},{"Key":"across this","Fragments":["article."]},{"Key":"See section","Fragments":["2.3"]},{"Key":" After","Fragments":["reading","reading"]},{"Key":"reading this","Fragments":["I"]},{"Key":"this I","Fragments":["ran","wasn't"]},{"Key":"I ran","Fragments":["a"]},{"Key":"ran a","Fragments":["test","\"dialyzer\""]},{"Key":"a test","Fragments":["doubling"]},{"Key":"test doubling","Fragments":["a"]},{"Key":"doubling a","Fragments":["list"]},{"Key":"of 200,000,000","Fragments":["items."]},{"Key":"tested a","Fragments":["list"]},{"Key":"comprehension, a","Fragments":["standard"]},{"Key":"standard recursive","Fragments":["function","function","function","function"]},{"Key":"recursive function","Fragments":["(that","ran","took","53","gives","to"]},{"Key":"function (that","Fragments":["wasn't"]},{"Key":"(that wasn't","Fragments":["tail"]},{"Key":"wasn't tail","Fragments":["recursive)"]},{"Key":"tail recursive)","Fragments":["and"]},{"Key":"recursive) and","Fragments":["a"]},{"Key":"recursive version","Fragments":["that","ran"]},{"Key":"that used","Fragments":["an"]},{"Key":"used an","Fragments":["accumulator"]},{"Key":"accumulator to","Fragments":["build"]},{"Key":"build up","Fragments":["the","a","the"]},{"Key":" Non","Fragments":["crashed"]},{"Key":"Non crashed","Fragments":["from"]},{"Key":"crashed from","Fragments":["exhausting"]},{"Key":"from exhausting","Fragments":["the"]},{"Key":"exhausting the","Fragments":["stack."]},{"Key":"The list","Fragments":["comprehension"]},{"Key":"comprehension and","Fragments":["the"]},{"Key":"function ran","Fragments":["in"]},{"Key":"ran in","Fragments":["about","7.5"]},{"Key":"in about","Fragments":["18"]},{"Key":"about 18","Fragments":["minutes."]},{"Key":"The tail","Fragments":["recursive"]},{"Key":"version ran","Fragments":["in"]},{"Key":"in 7.5","Fragments":["minutes."]},{"Key":" However","Fragments":["the"]},{"Key":"However the","Fragments":["laptop"]},{"Key":"the laptop","Fragments":["does"]},{"Key":"laptop does","Fragments":["have"]},{"Key":"does have","Fragments":["a"]},{"Key":"tried on","Fragments":["a"]},{"Key":"first generation","Fragments":["raspberry"]},{"Key":"generation raspberry","Fragments":["pi"]},{"Key":"raspberry pi","Fragments":["with"]},{"Key":"pi with","Fragments":["just"]},{"Key":"with just","Fragments":["a"]},{"Key":"a 185M","Fragments":["of"]},{"Key":"185M of","Fragments":["memory"]},{"Key":"of memory","Fragments":["to","allocations"]},{"Key":"memory to","Fragments":["see"]},{"Key":"For 2,000,000","Fragments":["records"]},{"Key":"2,000,000 records","Fragments":["the"]},{"Key":"records the","Fragments":["standard"]},{"Key":"function took","Fragments":["112"]},{"Key":"took 112","Fragments":["seconds"]},{"Key":"112 seconds","Fragments":["and"]},{"Key":"function 53","Fragments":["seconds."]},{"Key":"I bumped","Fragments":["it"]},{"Key":"bumped it","Fragments":["up"]},{"Key":"up to","Fragments":["20,000,000","2"]},{"Key":"to 20,000,000","Fragments":["records"]},{"Key":"20,000,000 records","Fragments":["both"]},{"Key":"records both","Fragments":["functions"]},{"Key":"both functions","Fragments":["failed"]},{"Key":"functions failed","Fragments":["with"]},{"Key":"failed with","Fragments":["an"]},{"Key":"an `eheap_alloc`","Fragments":["error"]},{"Key":"`eheap_alloc` error","Fragments":["message."]},{"Key":"In summary","Fragments":["it"]},{"Key":"summary it","Fragments":["would"]},{"Key":"would seem","Fragments":["that"]},{"Key":"seem that","Fragments":["if"]},{"Key":"function gives","Fragments":["much"]},{"Key":"gives much","Fragments":["more"]},{"Key":"more clarity,","Fragments":["it"]},{"Key":"clarity, it","Fragments":["may"]},{"Key":"may not","Fragments":["be","(for","be","be","be"]},{"Key":"be worth","Fragments":["while"]},{"Key":"worth while","Fragments":["rewriting"]},{"Key":"while rewriting","Fragments":["it"]},{"Key":"rewriting it","Fragments":["to"]},{"Key":"recursive in","Fragments":["Erlang."]},{"Key":"of List","Fragments":["comprehensions."]},{"Key":"List comprehensions.","Fragments":["Check"]},{"Key":"comprehensions. Check","Fragments":["out"]},{"Key":"Check out","Fragments":["```lists:map/2```","```lists:map/2```.","```lists:map/2```."]},{"Key":"out ```lists:map/2```","Fragments":["as"]},{"Key":"how clearly","Fragments":["this"]},{"Key":"clearly this","Fragments":["mirrors"]},{"Key":"this mirrors","Fragments":["the"]},{"Key":"mirrors the","Fragments":["original"]},{"Key":"the original","Fragments":["description","problem"]},{"Key":"original description","Fragments":["from"]},{"Key":"description from","Fragments":["the"]},{"Key":"spec. I'd","Fragments":["probably"]},{"Key":"probably break","Fragments":["the"]},{"Key":"break the","Fragments":["orelse","test"]},{"Key":"the orelse","Fragments":["condition"]},{"Key":"orelse condition","Fragments":["onto"]},{"Key":"condition onto","Fragments":["a"]},{"Key":"onto a","Fragments":["new"]},{"Key":"new line","Fragments":["to"]},{"Key":"to clearer","Fragments":["show"]},{"Key":"clearer show","Fragments":["the"]},{"Key":"the decision","Fragments":["tree:","logic"]},{"Key":" evenly_divisible(Year,","Fragments":["4)"]},{"Key":"not evenly_divisible(Year,","Fragments":["100)"]},{"Key":"orelse evenly_divisible(Year,","Fragments":["400)."]},{"Key":"the nitpick,","Fragments":["I"]},{"Key":"agree that","Fragments":["reads","it's"]},{"Key":"that reads","Fragments":["much"]},{"Key":"reads much","Fragments":["better."]},{"Key":"much better.","Fragments":["I've","No"]},{"Key":"better. I've","Fragments":["made"]},{"Key":"I've made","Fragments":["the"]},{"Key":"the suggested","Fragments":["change"]},{"Key":"suggested change","Fragments":[":)"]},{"Key":" Task","Fragments":["completed"]},{"Key":"Task completed","Fragments":["through"]},{"Key":"completed through","Fragments":["the"]},{"Key":"is if","Fragments":["the"]},{"Key":"400 then","Fragments":["this"]},{"Key":"then this","Fragments":["evaluates"]},{"Key":"this evaluates","Fragments":["to"]},{"Key":"to leap","Fragments":["year."]},{"Key":"leap year.","Fragments":["Since"]},{"Key":"year. Since","Fragments":["if"]},{"Key":"Since if","Fragments":["year"]},{"Key":"if year","Fragments":["is"]},{"Key":"is divisble","Fragments":["by"]},{"Key":"divisble by","Fragments":["400"]},{"Key":"400 it","Fragments":["will"]},{"Key":"be divisible","Fragments":["by"]},{"Key":"100, so","Fragments":["there's"]},{"Key":"no need","Fragments":["to","for","to","for","for"]},{"Key":"check for","Fragments":["both","`is_list(DNA)`.","all","`$2`","things","equal","equality"]},{"Key":"both these","Fragments":["conditions."]},{"Key":"second and","Fragments":["third"]},{"Key":"and third","Fragments":["clauses"]},{"Key":"third clauses","Fragments":["are"]},{"Key":"clauses are","Fragments":["self"]},{"Key":"are self","Fragments":["explanatory."]},{"Key":"self explanatory.","Fragments":["Anything"]},{"Key":"explanatory. Anything","Fragments":["else"]},{"Key":"Anything else","Fragments":["evaluates"]},{"Key":"else evaluates","Fragments":["to"]},{"Key":"Not much","Fragments":["difference"]},{"Key":"much difference","Fragments":["but"]},{"Key":"difference but","Fragments":["you"]},{"Key":"could shorten","Fragments":["the","the"]},{"Key":"shorten the","Fragments":["checks","`is_divisible_by`"]},{"Key":"and maybe","Fragments":["also","a"]},{"Key":"maybe also","Fragments":["make"]},{"Key":"also make","Fragments":["a"]},{"Key":"bit easier","Fragments":["to"]},{"Key":"read with","Fragments":["the"]},{"Key":"0 andalso","Fragments":["Year","(Year"]},{"Key":"andalso Year","Fragments":["rem"]},{"Key":"400 =/=","Fragments":["0"]},{"Key":"=/= 0","Fragments":["-\u003e","orelse"]},{"Key":"While not","Fragments":["incorrect,"]},{"Key":"not incorrect,","Fragments":["I"]},{"Key":"incorrect, I","Fragments":["think"]},{"Key":"think it'd","Fragments":["be","look"]},{"Key":"idiomatic Erlang","Fragments":["to","to","to"]},{"Key":"use pattern","Fragments":["matching","matching,","matching","matching","matching","matching","matching,","matching"]},{"Key":"matching /","Fragments":["guards"]},{"Key":"/ guards","Fragments":["in"]},{"Key":"guards in","Fragments":["the"]},{"Key":"function definition","Fragments":["like","level?"]},{"Key":"definition like","Fragments":["so"]},{"Key":" Bonus","Fragments":["points"]},{"Key":"Bonus points","Fragments":["for"]},{"Key":"for handling","Fragments":["non-integer"]},{"Key":"handling non-integer","Fragments":["arguments,"]},{"Key":"non-integer arguments,","Fragments":["hint"]},{"Key":"arguments, hint","Fragments":["`is_integer`."]},{"Key":" Nice.","Fragments":["This","I","I"]},{"Key":"Nice. This","Fragments":["is"]},{"Key":"lot shorter","Fragments":["than"]},{"Key":"considered somehow","Fragments":["having"]},{"Key":"somehow having","Fragments":["`Question`,"]},{"Key":"having `Question`,","Fragments":["`Yell`."]},{"Key":"`Question`, `Yell`.","Fragments":["and"]},{"Key":"`Yell`. and","Fragments":["`Spaces`"]},{"Key":"and `Spaces`","Fragments":["to"]},{"Key":"`Spaces` to","Fragments":["be"]},{"Key":"be readable","Fragments":["atoms"]},{"Key":"readable atoms","Fragments":["(`question`,"]},{"Key":"atoms (`question`,","Fragments":["`no_question`,"]},{"Key":"(`question`, `no_question`,","Fragments":["...)"]},{"Key":"`no_question`, ...)","Fragments":["so"]},{"Key":"...) so","Fragments":["that"]},{"Key":"the pattern","Fragments":["matching","I"]},{"Key":"case becomes","Fragments":["more"]},{"Key":"becomes more","Fragments":["readable?","readable."]},{"Key":" @freddie","Fragments":["Nice"]},{"Key":"@freddie Nice","Fragments":["answer."]},{"Key":"Nice answer.","Fragments":["Consider"]},{"Key":"answer. Consider","Fragments":["adding"]},{"Key":"this suffers","Fragments":["from"]},{"Key":"suffers from","Fragments":["the"]},{"Key":"same 'should","Fragments":["be"]},{"Key":"'should be","Fragments":["filtering"]},{"Key":"be filtering","Fragments":["the"]},{"Key":"filtering the","Fragments":["list'"]},{"Key":"the list'","Fragments":["as"]},{"Key":"list' as","Fragments":["the"]},{"Key":"my recent","Fragments":["ones."]},{"Key":"recent ones.","Fragments":["Maybe"]},{"Key":"ones. Maybe","Fragments":["I'll"]},{"Key":"Maybe I'll","Fragments":["call","write"]},{"Key":"I'll call","Fragments":["it"]},{"Key":"it practice","Fragments":["in"]},{"Key":"practice in","Fragments":["thinking"]},{"Key":"in thinking","Fragments":["tail-recursively."]},{"Key":"looks great,","Fragments":["my"]},{"Key":"great, my","Fragments":["first"]},{"Key":"first solution","Fragments":["was"]},{"Key":"solution was","Fragments":["similar"]},{"Key":"was similar","Fragments":["to"]},{"Key":"similar to","Fragments":["this.","your","`-type`"]},{"Key":" However,","Fragments":["I"]},{"Key":"However, I","Fragments":["discovered"]},{"Key":"I discovered","Fragments":["that"]},{"Key":"discovered that","Fragments":["the","i"]},{"Key":"the down","Fragments":["side"]},{"Key":"down side","Fragments":["is"]},{"Key":"side is","Fragments":["that"]},{"Key":"not properly","Fragments":["tail"]},{"Key":"properly tail","Fragments":["recursive"]},{"Key":"recursive and","Fragments":["so","therefore","therefore","therefore","therefore"]},{"Key":"so consumes","Fragments":["the"]},{"Key":"consumes the","Fragments":["stack."]},{"Key":" Obviously","Fragments":["this"]},{"Key":"Obviously this","Fragments":["would"]},{"Key":"a problem","Fragments":["if","with","for"]},{"Key":"problem if","Fragments":["your"]},{"Key":"if your","Fragments":["list","`analyze`"]},{"Key":"your list","Fragments":["was"]},{"Key":"list was","Fragments":["sufficiently"]},{"Key":"was sufficiently","Fragments":["large."]},{"Key":"Why is","Fragments":["not"]},{"Key":"tail recursion?","Fragments":["I","Or"]},{"Key":"recursion? I","Fragments":["read"]},{"Key":" \u003etail","Fragments":["recursion"]},{"Key":"\u003etail recursion","Fragments":["as"]},{"Key":"as seen","Fragments":["here"]},{"Key":"seen here","Fragments":["is"]},{"Key":"here is","Fragments":["not","that","the","pretty","to","very"]},{"Key":"not making","Fragments":["the"]},{"Key":"the memory","Fragments":["grow"]},{"Key":"memory grow","Fragments":["because"]},{"Key":"grow because","Fragments":["when"]},{"Key":"because when","Fragments":["the"]},{"Key":"the virtual","Fragments":["machine"]},{"Key":"virtual machine","Fragments":["sees"]},{"Key":"machine sees","Fragments":["a"]},{"Key":"sees a","Fragments":["function"]},{"Key":"function calling","Fragments":["itself"]},{"Key":"calling itself","Fragments":["in"]},{"Key":"itself in","Fragments":["a"]},{"Key":"tail position","Fragments":["(the"]},{"Key":"position (the","Fragments":["last"]},{"Key":"(the last","Fragments":["expression"]},{"Key":"expression to","Fragments":["be"]},{"Key":"be evaluated","Fragments":["in"]},{"Key":"evaluated in","Fragments":["a"]},{"Key":"a function),","Fragments":["it"]},{"Key":"function), it","Fragments":["eliminates"]},{"Key":"it eliminates","Fragments":["the"]},{"Key":"eliminates the","Fragments":["current"]},{"Key":"current stack","Fragments":["frame.","frame"]},{"Key":"stack frame.","Fragments":["This"]},{"Key":"frame. This","Fragments":["is"]},{"Key":"called tail-call","Fragments":["optimisation"]},{"Key":"tail-call optimisation","Fragments":["(TCO)"]},{"Key":"optimisation (TCO)","Fragments":["and"]},{"Key":"(TCO) and","Fragments":["it"]},{"Key":"a special","Fragments":["case"]},{"Key":"special case","Fragments":["of"]},{"Key":"case of","Fragments":["a","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello","_hello"]},{"Key":"general optimisation","Fragments":["named"]},{"Key":"optimisation named","Fragments":["Last"]},{"Key":"named Last","Fragments":["Call"]},{"Key":"Last Call","Fragments":["Optimisation"]},{"Key":"Call Optimisation","Fragments":["(LCO)."]},{"Key":" problem","Fragments":["is"]},{"Key":"problem is","Fragments":["call","on","that","currently"]},{"Key":"is call","Fragments":["of"]},{"Key":"call of","Fragments":["`Function`"]},{"Key":"of `Function`","Fragments":["in"]},{"Key":"`Function` in","Fragments":["line"]},{"Key":"in line","Fragments":["7?","12,"]},{"Key":" thanks","Fragments":["for"]},{"Key":"Yeah, the","Fragments":["problem"]},{"Key":" the","Fragments":["last","stream"]},{"Key":"last call","Fragments":["isn't"]},{"Key":"call isn't","Fragments":["a"]},{"Key":"a distinct","Fragments":["call"]},{"Key":"distinct call","Fragments":["to"]},{"Key":"It needs","Fragments":["to"]},{"Key":"keep hold","Fragments":["of"]},{"Key":"hold of","Fragments":["the"]},{"Key":"stack frame","Fragments":["because"]},{"Key":"frame because","Fragments":["it"]},{"Key":"it holds","Fragments":["the"]},{"Key":"holds the","Fragments":["`Function(Head)`"]},{"Key":"the `Function(Head)`","Fragments":["information"]},{"Key":"`Function(Head)` information","Fragments":["that"]},{"Key":"information that","Fragments":["is"]},{"Key":"is consed","Fragments":["(pushed)"]},{"Key":"consed (pushed)","Fragments":["on"]},{"Key":"(pushed) on","Fragments":["to"]},{"Key":"on to","Fragments":["the"]},{"Key":" Another","Fragments":["exercise"]},{"Key":"Another exercise","Fragments":["caught"]},{"Key":"exercise caught","Fragments":["between"]},{"Key":"caught between","Fragments":["the"]},{"Key":"the README","Fragments":["and"]},{"Key":"README and","Fragments":["the"]},{"Key":"good argument","Fragments":["for"]},{"Key":"argument for","Fragments":["sending","re-ordering","either"]},{"Key":"for sending","Fragments":["a"]},{"Key":"sending a","Fragments":["unique"]},{"Key":"a unique","Fragments":["request"]},{"Key":"unique request","Fragments":["ID"]},{"Key":"request ID","Fragments":["in"]},{"Key":"ID in","Fragments":["this"]},{"Key":"this case?","Fragments":["Because"]},{"Key":"case? Because","Fragments":["you"]},{"Key":"Because you","Fragments":["support"]},{"Key":"you support","Fragments":["timeouts,"]},{"Key":"support timeouts,","Fragments":["I"]},{"Key":"timeouts, I","Fragments":["guess?"]},{"Key":"think `NewStatus`","Fragments":["is"]},{"Key":"`NewStatus` is","Fragments":["not"]},{"Key":"great name","Fragments":["for"]},{"Key":"for return","Fragments":["values"]},{"Key":"return values","Fragments":["which"]},{"Key":"really updated","Fragments":["state."]},{"Key":" Otherwise","Fragments":["this"]},{"Key":"Otherwise this","Fragments":["looks"]},{"Key":"looks good!","Fragments":["Your"]},{"Key":"good! Your","Fragments":["solution"]},{"Key":"Your solution","Fragments":["to"]},{"Key":"the irritating","Fragments":["test"]},{"Key":"irritating test","Fragments":["for"]},{"Key":"clause error","Fragments":["is"]},{"Key":"error is","Fragments":["a"]},{"Key":"bit nicer","Fragments":["than"]},{"Key":" Simplify","Fragments":["code"]},{"Key":"Simplify code","Fragments":["using"]},{"Key":"code using","Fragments":["lists:map."]},{"Key":"This part","Fragments":["of"]},{"Key":"of code","Fragments":["is","I","to"]},{"Key":" to_rna([First|Rest])","Fragments":["-\u003e"]},{"Key":" Rna","Fragments":["="]},{"Key":"Rna =","Fragments":["to_rna([First]),"]},{"Key":" to_rna(Rest,","Fragments":["Rna)."]},{"Key":" Refactored","Fragments":["my"]},{"Key":"Refactored my","Fragments":["first"]},{"Key":"first submission","Fragments":["because:"]},{"Key":"1. The","Fragments":["first"]},{"Key":"first one","Fragments":["probably"]},{"Key":"one probably","Fragments":["missed"]},{"Key":"probably missed","Fragments":["the"]},{"Key":"missed the","Fragments":["spirit"]},{"Key":"problem statement","Fragments":["to"]},{"Key":"statement to","Fragments":["not"]},{"Key":"use built-in","Fragments":["capabilities"]},{"Key":"built-in capabilities","Fragments":["to"]},{"Key":"capabilities to","Fragments":["solve"]},{"Key":"solve the","Fragments":["problem","problem"]},{"Key":"problem (e.g.,","Fragments":["List","@marion)."]},{"Key":"(e.g., List","Fragments":["Comprehensions)."]},{"Key":"2. I","Fragments":["really","would"]},{"Key":"really liked","Fragments":["@dane's"]},{"Key":"liked @dane's","Fragments":["approach"]},{"Key":"@dane's approach","Fragments":["and"]},{"Key":"approach and","Fragments":["decided"]},{"Key":"and decided","Fragments":["to"]},{"Key":"of tasks.","Fragments":["I"]},{"Key":"tasks. I","Fragments":["wanted"]},{"Key":"protect against","Fragments":["lists","non_integer","giving"]},{"Key":"against lists","Fragments":["of"]},{"Key":"lists of","Fragments":["different"]},{"Key":"of different","Fragments":["lengths."]},{"Key":" Nicely","Fragments":["done,","done."]},{"Key":"Nicely done,","Fragments":["really"]},{"Key":"done, really","Fragments":["like"]},{"Key":"function heads","Fragments":["and","with"]},{"Key":"heads and","Fragments":["guards."]},{"Key":"and guards.","Fragments":["This","Also"]},{"Key":"guards. This","Fragments":["gets"]},{"Key":"This gets","Fragments":["my","my"]},{"Key":"gets my","Fragments":["vote","vote"]},{"Key":"my vote","Fragments":["for","as"]},{"Key":"vote for","Fragments":["the"]},{"Key":"the 1st","Fragments":["best"]},{"Key":"1st best","Fragments":["solution,"]},{"Key":"best solution,","Fragments":["tied","so"]},{"Key":"solution, tied","Fragments":["with"]},{"Key":"tied with","Fragments":["@taya'"]},{"Key":"with @taya'","Fragments":["solution."]},{"Key":"Thanks! Indeed,","Fragments":["@loyce'"]},{"Key":"Indeed, @loyce'","Fragments":["solution"]},{"Key":"@loyce' solution","Fragments":["is"]},{"Key":"very good.","Fragments":["I"]},{"Key":"just submitted","Fragments":["a"]},{"Key":"submitted a","Fragments":["new","PR"]},{"Key":"new iteration","Fragments":["with"]},{"Key":"iteration with","Fragments":["a"]},{"Key":"a cleverer","Fragments":["pattern"]},{"Key":"cleverer pattern","Fragments":["matching"]},{"Key":"matching copied","Fragments":["from"]},{"Key":"copied from","Fragments":["him"]},{"Key":"from him","Fragments":[":)"]},{"Key":"use Erlang's","Fragments":["guard"]},{"Key":"Erlang's guard","Fragments":["expressions."]},{"Key":"guard expressions.","Fragments":["I"]},{"Key":"expressions. I","Fragments":["don't","don't"]},{"Key":"use functions","Fragments":["in","in"]},{"Key":"in guards","Fragments":["to"]},{"Key":"name the","Fragments":["modulo","function"]},{"Key":"the modulo","Fragments":["operations"]},{"Key":"modulo operations","Fragments":["so"]},{"Key":"operations so","Fragments":["that"]},{"Key":"code remains","Fragments":["understandable."]},{"Key":"remains understandable.","Fragments":["Perhaps"]},{"Key":"understandable. Perhaps","Fragments":["there"]},{"Key":"Perhaps there","Fragments":["is"]},{"Key":" Probably","Fragments":["the"]},{"Key":"Probably the","Fragments":["most"]},{"Key":"most concise","Fragments":["solution."]},{"Key":"concise solution.","Fragments":["Any"]},{"Key":"solution. Any","Fragments":["other"]},{"Key":"Any other","Fragments":["changes"]},{"Key":"other changes","Fragments":["are"]},{"Key":"changes are","Fragments":["just"]},{"Key":"are just","Fragments":["a"]},{"Key":"a matter","Fragments":["of","of"]},{"Key":"matter of","Fragments":["taste,","adding"]},{"Key":"of taste,","Fragments":["I"]},{"Key":"taste, I","Fragments":["think."]},{"Key":"are several","Fragments":["solutions,","tech"]},{"Key":"several solutions,","Fragments":["which"]},{"Key":"solutions, which","Fragments":["all"]},{"Key":"which all","Fragments":["take"]},{"Key":"all take","Fragments":["different"]},{"Key":"take different","Fragments":["approaches"]},{"Key":"different approaches","Fragments":["to"]},{"Key":"approaches to","Fragments":["the","these","this","consider."]},{"Key":"the problem,","Fragments":["that","but"]},{"Key":"problem, that","Fragments":["I"]},{"Key":"think are","Fragments":["simpler,"]},{"Key":"are simpler,","Fragments":["shorter,"]},{"Key":"simpler, shorter,","Fragments":["and"]},{"Key":"shorter, and","Fragments":["easier"]},{"Key":"to understand.","Fragments":["I'd","I"]},{"Key":"understand. I'd","Fragments":["recommend"]},{"Key":"I'd recommend","Fragments":["reviewing"]},{"Key":"recommend reviewing","Fragments":["them"]},{"Key":"reviewing them","Fragments":["and"]},{"Key":"them and","Fragments":["rethinking","reconsidering","on"]},{"Key":"and rethinking","Fragments":["your"]},{"Key":"rethinking your","Fragments":["approach."]},{"Key":"guard in","Fragments":["factor/2"]},{"Key":"in factor/2","Fragments":["though."]},{"Key":"factor/2 though.","Fragments":["This"]},{"Key":"though. This","Fragments":["is"]},{"Key":"nice optimization","Fragments":["for"]},{"Key":"optimization for","Fragments":["larger"]},{"Key":"for larger","Fragments":["values","trinary"]},{"Key":"larger values","Fragments":["of"]},{"Key":"values of","Fragments":["\u003cstrong\u003eUpToNumber\u003c/strong\u003e.","`M`,","`M`,"]},{"Key":"of \u003cstrong\u003eUpToNumber\u003c/strong\u003e.","Fragments":["I"]},{"Key":"\u003cstrong\u003eUpToNumber\u003c/strong\u003e. I","Fragments":["don't"]},{"Key":"I saw","Fragments":["this","someone","defndaines's","another"]},{"Key":"saw this","Fragments":["in"]},{"Key":"in any","Fragments":["other","of"]},{"Key":"solutions (at","Fragments":["least"]},{"Key":"least the","Fragments":["ones"]},{"Key":"ones I","Fragments":["looked"]},{"Key":"I looked","Fragments":["at","into"]},{"Key":"looked at","Fragments":["before"]},{"Key":"at before","Fragments":["looking"]},{"Key":"before looking","Fragments":["at"]},{"Key":" Hi","Fragments":["there!","@murl","@hollis"]},{"Key":"Hi there!","Fragments":["The"]},{"Key":"there! The","Fragments":["most"]},{"Key":"The most","Fragments":["common"]},{"Key":"most common","Fragments":["problem","case"]},{"Key":"common problem","Fragments":["of"]},{"Key":"problem of","Fragments":["erlang"]},{"Key":"of erlang","Fragments":["novice"]},{"Key":"erlang novice","Fragments":["is"]},{"Key":"novice is","Fragments":["deeply"]},{"Key":"is deeply","Fragments":["nested"]},{"Key":"deeply nested","Fragments":["case"]},{"Key":"nested case","Fragments":["clauses.","statements"]},{"Key":"case clauses.","Fragments":["More"]},{"Key":"clauses. More","Fragments":["logic"]},{"Key":"More logic","Fragments":["you"]},{"Key":"logic you","Fragments":["put"]},{"Key":"you put","Fragments":["more"]},{"Key":"more code","Fragments":["looks"]},{"Key":"like x-mas","Fragments":["tree."]},{"Key":"To avoid","Fragments":["these"]},{"Key":"avoid these","Fragments":["there"]},{"Key":"these there","Fragments":["are"]},{"Key":"several tech","Fragments":["technics:"]},{"Key":"* use","Fragments":["function","of","tail"]},{"Key":"clause as","Fragments":["case"]},{"Key":"as case","Fragments":["clause:"]},{"Key":"%% do","Fragments":["stuff","another","stuff","another"]},{"Key":"do another","Fragments":["stuff","stuff"]},{"Key":"another stuff","Fragments":["and"]},{"Key":"stuff and","Fragments":["so"]},{"Key":"* you","Fragments":["can"]},{"Key":"do several","Fragments":["check"]},{"Key":"several check","Fragments":["at"]},{"Key":"check at","Fragments":["the"]},{"Key":"time with","Fragments":["tuple"]},{"Key":"with tuple","Fragments":["help:"]},{"Key":"rem 400,","Fragments":["Year"]},{"Key":"400, Year","Fragments":["rem"]},{"Key":"rem 4}","Fragments":["of"]},{"Key":"{0, 0}","Fragments":["-\u003e"]},{"Key":"0} -\u003e","Fragments":["%%","%%"]},{"Key":"-\u003e %%","Fragments":["do","do"]},{"Key":" {_,","Fragments":["0}"]},{"Key":"{_, 0}","Fragments":["-\u003e"]},{"Key":"you very","Fragments":["much"]},{"Key":"the comment,","Fragments":["really"]},{"Key":"comment, really","Fragments":["useful"]},{"Key":"really useful","Fragments":["to"]},{"Key":"useful to","Fragments":["improve","start","read"]},{"Key":"code structure","Fragments":["and"]},{"Key":"structure and","Fragments":["readibility"]},{"Key":"should add","Fragments":["guards,","a","a","typespecs","guards"]},{"Key":"add guards,","Fragments":["a"]},{"Key":"guards, a","Fragments":["spec."]},{"Key":"a spec.","Fragments":["Also"]},{"Key":"spec. Also","Fragments":["don't"]},{"Key":"Also don't","Fragments":["use"]},{"Key":"use ==","Fragments":["as"]},{"Key":"== as","Fragments":["suggested"]},{"Key":"suggested use","Fragments":["=:="]},{"Key":"use =:=","Fragments":["."]},{"Key":"=:= .","Fragments":["Comments"]},{"Key":". Comments","Fragments":["could"]},{"Key":"Comments could","Fragments":["be"]},{"Key":" Previous","Fragments":["solution"]},{"Key":"Previous solution","Fragments":["is"]},{"Key":"is better.","Fragments":["Read"]},{"Key":"better. Read","Fragments":["in"]},{"Key":"Read in","Fragments":["readme:"]},{"Key":"Keep your","Fragments":["hands","hands"]},{"Key":"your hands","Fragments":["off","off","off"]},{"Key":"hands off","Fragments":["that","that","that"]},{"Key":"off that","Fragments":["collect/map/fmap/whatchamacallit","filter/reject/whatchamacallit","filter/reject/whatchamacallit"]},{"Key":"that collect/map/fmap/whatchamacallit","Fragments":["functionality"]},{"Key":" provided","Fragments":["by"]},{"Key":"provided by","Fragments":["your","your","your"]},{"Key":"by your","Fragments":["standard","standard","standard"]},{"Key":"your standard","Fragments":["library!","library!","library!"]},{"Key":" Solve","Fragments":["this"]},{"Key":"Solve this","Fragments":["one","one","one"]},{"Key":"one yourself","Fragments":["using","using","using"]},{"Key":"yourself using","Fragments":["other","other","other"]},{"Key":"using other","Fragments":["basic","basic","basic"]},{"Key":"other basic","Fragments":["tools","tools","tools"]},{"Key":"basic tools","Fragments":["instead.","instead.","instead."]},{"Key":" Hi.","Fragments":["Nice"]},{"Key":"Hi. Nice","Fragments":["concise"]},{"Key":"Nice concise","Fragments":["one."]},{"Key":"concise one.","Fragments":["I"]},{"Key":"one. I","Fragments":["think"]},{"Key":"think solution","Fragments":["couldn't"]},{"Key":"solution couldn't","Fragments":["be"]},{"Key":"couldn't be","Fragments":["better.","a","made"]},{"Key":" Dryed","Fragments":["up"]},{"Key":"Dryed up","Fragments":["`count/3`."]},{"Key":"up `count/3`.","Fragments":["Reviewed"]},{"Key":"`count/3`. Reviewed","Fragments":["@domingo"]},{"Key":"Reviewed @domingo","Fragments":["submission"]},{"Key":"@domingo submission","Fragments":["and"]},{"Key":"submission and","Fragments":["learned"]},{"Key":"and learned","Fragments":["bout"]},{"Key":"learned bout","Fragments":["dissecting"]},{"Key":"bout dissecting","Fragments":["a"]},{"Key":"dissecting a","Fragments":["string"]},{"Key":"string into","Fragments":["list"]},{"Key":"into list","Fragments":["with"]},{"Key":"list with","Fragments":["a","unique","`is_list/1`","(`lists:append/2`"]},{"Key":"char (L9).","Fragments":["thanks"]},{"Key":"(L9). thanks","Fragments":["@domingo!"]},{"Key":"It's 1/4th","Fragments":["the"]},{"Key":"1/4th the","Fragments":["length"]},{"Key":"my solution,","Fragments":["which"]},{"Key":"solution, which","Fragments":["is"]},{"Key":"pretty impressive,","Fragments":["but"]},{"Key":"impressive, but","Fragments":["I'll"]},{"Key":"I'll admit","Fragments":["I","that"]},{"Key":"admit I","Fragments":["can't"]},{"Key":"can't read","Fragments":["it."]},{"Key":" Better","Fragments":["naming"]},{"Key":"Better naming","Fragments":["would"]},{"Key":"naming would","Fragments":["really"]},{"Key":"would really","Fragments":["help!"]},{"Key":"really help!","Fragments":["I"]},{"Key":"help! I","Fragments":["think"]},{"Key":"this was","Fragments":["a","the"]},{"Key":"a point","Fragments":["where"]},{"Key":"was getting","Fragments":["bored","fed"]},{"Key":"getting bored","Fragments":["of"]},{"Key":"bored of","Fragments":["being"]},{"Key":"of being","Fragments":["the","a"]},{"Key":"being the","Fragments":["only"]},{"Key":"the only","Fragments":["one","way"]},{"Key":"only one","Fragments":["\"on"]},{"Key":"one \"on","Fragments":["the"]},{"Key":"\"on the","Fragments":["board\""]},{"Key":"the board\"","Fragments":["with"]},{"Key":"board\" with","Fragments":["these"]},{"Key":"with these","Fragments":["problems","right"]},{"Key":"these problems","Fragments":["and","actually"]},{"Key":"problems and","Fragments":["just","just"]},{"Key":"just started","Fragments":["blazing"]},{"Key":"started blazing","Fragments":["through"]},{"Key":"blazing through","Fragments":["them."]},{"Key":"We map","Fragments":["`mul`"]},{"Key":"map `mul`","Fragments":["across"]},{"Key":"`mul` across","Fragments":["N"]},{"Key":"across N","Fragments":["digit"]},{"Key":"N digit","Fragments":["slices"]},{"Key":"digit slices","Fragments":["of"]},{"Key":"slices of","Fragments":["our"]},{"Key":"of our","Fragments":["string"]},{"Key":"our string","Fragments":["of"]},{"Key":"string of","Fragments":["digits,"]},{"Key":"of digits,","Fragments":["keeping"]},{"Key":"digits, keeping","Fragments":["track"]},{"Key":"keeping track","Fragments":["of"]},{"Key":"track of","Fragments":["the","all"]},{"Key":"maximum value.","Fragments":["I"]},{"Key":"value. I","Fragments":["wonder"]},{"Key":"if `lists:mapfoldr/3`","Fragments":["would"]},{"Key":"`lists:mapfoldr/3` would","Fragments":["be"]},{"Key":"clearer than","Fragments":["our"]},{"Key":"than our","Fragments":["own"]},{"Key":"our own","Fragments":["`maplistmax/3`."]},{"Key":" Okay,","Fragments":["let","that's"]},{"Key":"Okay, let","Fragments":["me"]},{"Key":"me see","Fragments":["if"]},{"Key":"see if","Fragments":["I","the"]},{"Key":"can supply","Fragments":["something"]},{"Key":"supply something","Fragments":["clearer"]},{"Key":"something clearer","Fragments":["that"]},{"Key":"clearer that","Fragments":["retains"]},{"Key":"that retains","Fragments":["the"]},{"Key":"retains the","Fragments":["nice"]},{"Key":"nice terseness","Fragments":["of"]},{"Key":"terseness of","Fragments":["this"]},{"Key":"this solution.","Fragments":["Also,"]},{"Key":"solution. Also,","Fragments":["an"]},{"Key":"Also, an","Fragments":["efficiency"]},{"Key":"an efficiency","Fragments":["comment"]},{"Key":"efficiency comment","Fragments":["--"]},{"Key":"comment --","Fragments":["a"]},{"Key":"-- a","Fragments":["really"]},{"Key":"a really","Fragments":["clever","nice"]},{"Key":"really clever","Fragments":["solution"]},{"Key":"clever solution","Fragments":["would","and"]},{"Key":"solution would","Fragments":["only"]},{"Key":"only walk","Fragments":["`length(S)`"]},{"Key":"walk `length(S)`","Fragments":["digits,"]},{"Key":"`length(S)` digits,","Fragments":["not"]},{"Key":"digits, not","Fragments":["~`N*length(S)`"]},{"Key":"not ~`N*length(S)`","Fragments":["digits."]},{"Key":"see now","Fragments":["that"]},{"Key":"this program","Fragments":["has"]},{"Key":"program has","Fragments":["a"]},{"Key":"a bug;","Fragments":["it"]},{"Key":"bug; it","Fragments":["is"]},{"Key":"is unfortunate","Fragments":["that"]},{"Key":"unfortunate that","Fragments":["the"]},{"Key":"tests omit","Fragments":["it."]},{"Key":"omit it.","Fragments":["Consider"]},{"Key":"it. Consider","Fragments":["`from_string(\"909\","]},{"Key":"Consider `from_string(\"909\",","Fragments":["3).`"]},{"Key":"`from_string(\"909\", 3).`","Fragments":["for"]},{"Key":"3).` for","Fragments":["example."]},{"Key":"for example.","Fragments":["In"]},{"Key":"example. In","Fragments":["attempting"]},{"Key":"In attempting","Fragments":["to"]},{"Key":"attempting to","Fragments":["avoid"]},{"Key":"avoid errors,","Fragments":["I've"]},{"Key":"errors, I've","Fragments":["missed"]},{"Key":"I've missed","Fragments":["an"]},{"Key":"missed an","Fragments":["important"]},{"Key":"an important","Fragments":["case."]},{"Key":" `[Candidate|keep(Fn,","Fragments":["Rest)]`"]},{"Key":"`[Candidate|keep(Fn, Rest)]`","Fragments":["is"]},{"Key":"Rest)]` is","Fragments":["a"]},{"Key":"more erlangy,","Fragments":["I"]},{"Key":"erlangy, I","Fragments":["think"]},{"Key":"of \u003cstrong\u003ekeep\u003c/strong\u003e","Fragments":["in","in"]},{"Key":"\u003cstrong\u003ekeep\u003c/strong\u003e in","Fragments":["the","creating"]},{"Key":"the construction","Fragments":["of"]},{"Key":"of \u003cstrong\u003eResult\u003c/strong\u003e.","Fragments":["Using"]},{"Key":"\u003cstrong\u003eResult\u003c/strong\u003e. Using","Fragments":["\u003cstrong\u003e++\u003c/strong\u003e"]},{"Key":"Using \u003cstrong\u003e++\u003c/strong\u003e","Fragments":["(in"]},{"Key":"\u003cstrong\u003e++\u003c/strong\u003e (in","Fragments":["your"]},{"Key":"(in your","Fragments":["first"]},{"Key":"first submission)","Fragments":["is"]},{"Key":"submission) is","Fragments":["almost"]},{"Key":"always a","Fragments":["bad"]},{"Key":"bad idea","Fragments":["(see"]},{"Key":"idea (see","Fragments":["http://www.erlang.org/doc/efficiency_guide/listHandling.html)."]},{"Key":"(see http://www.erlang.org/doc/efficiency_guide/listHandling.html).","Fragments":["The"]},{"Key":"http://www.erlang.org/doc/efficiency_guide/listHandling.html). The","Fragments":["use"]},{"Key":"of \u003cstrong\u003elists:subtract\u003c/strong\u003e","Fragments":["is"]},{"Key":"\u003cstrong\u003elists:subtract\u003c/strong\u003e is","Fragments":["also"]},{"Key":"also very","Fragments":["nice."]},{"Key":"very nice.","Fragments":["Good"]},{"Key":"nice. Good","Fragments":["job!"]},{"Key":"Good job!","Fragments":["This"]},{"Key":"job! This","Fragments":["gets"]},{"Key":"vote as","Fragments":["the"]},{"Key":"solution, so","Fragments":["far,"]},{"Key":"so far,","Fragments":["to"]},{"Key":"far, to","Fragments":["the"]},{"Key":"know about","Fragments":["that","`lists:last()`","the","`rebar","the"]},{"Key":"about that","Fragments":["part","some"]},{"Key":"that part","Fragments":["of"]},{"Key":"the docs,","Fragments":["very"]},{"Key":"docs, very","Fragments":["interesting"]},{"Key":"very interesting","Fragments":["read"]},{"Key":"interesting read","Fragments":["and"]},{"Key":"read and","Fragments":["very"]},{"Key":"and very","Fragments":["useful"]},{"Key":"very useful","Fragments":["resource."]},{"Key":"useful resource.","Fragments":["Thanks"]},{"Key":"resource. Thanks","Fragments":["a"]},{"Key":" how","Fragments":["about"]},{"Key":"how about","Fragments":["use","adding","using","adding"]},{"Key":"about use","Fragments":["-spec"]},{"Key":"use -spec","Fragments":["check_year(integer())"]},{"Key":"-spec check_year(integer())","Fragments":["-\u003e"]},{"Key":"check_year(integer()) -\u003e","Fragments":["boolean()."]},{"Key":"comprehensions is","Fragments":["more"]},{"Key":"more Erlangy,","Fragments":["but"]},{"Key":"Erlangy, but","Fragments":["this"]},{"Key":"in keeping","Fragments":["with"]},{"Key":"keeping with","Fragments":["the"]},{"Key":"would love","Fragments":["feedback"]},{"Key":"love feedback","Fragments":["on"]},{"Key":"feedback on","Fragments":["this."]},{"Key":"on this.","Fragments":["I"]},{"Key":"this. I","Fragments":["wasn't","originally"]},{"Key":"wasn't 100%","Fragments":["whether"]},{"Key":"100% whether","Fragments":["it"]},{"Key":"whether it","Fragments":["would"]},{"Key":"same function","Fragments":["name"]},{"Key":"name with","Fragments":["long","different"]},{"Key":"long guard","Fragments":["blocks"]},{"Key":"guard blocks","Fragments":["or","or"]},{"Key":"blocks or","Fragments":["have","to"]},{"Key":"or have","Fragments":["functions"]},{"Key":"have functions","Fragments":["calling"]},{"Key":"functions calling","Fragments":["other"]},{"Key":"calling other","Fragments":["functions"]},{"Key":"functions with","Fragments":["guard"]},{"Key":"or to","Fragments":["use"]},{"Key":"more traditional","Fragments":["if"]},{"Key":"traditional if","Fragments":["else"]},{"Key":"if else","Fragments":["statement."]},{"Key":" Usually","Fragments":["the","the","the","the","the","the","the","the","the","the"]},{"Key":"Usually the","Fragments":["next","next","next","next","next","next","next","next","next","next"]},{"Key":"next step","Fragments":["is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is"]},{"Key":"step is","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"a conversation","Fragments":["about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter.","about","starter."]},{"Key":"conversation about","Fragments":["your","your","your","your","your","your","your","your","your","your"]},{"Key":"about your","Fragments":["code","code","code","code","code","code","code","code","code","code"]},{"Key":"code and","Fragments":["iterate","iterate","iterate","iterate","that","realizing","iterate","iterate","iterate","iterate","iterate","iterate"]},{"Key":"and iterate","Fragments":["on","on","on","on","on","on","on","on","on","on"]},{"Key":"iterate on","Fragments":["your","your","your","your","your","your","your","your","your","your"]},{"Key":"of _hello","Fragments":["world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,","world_,"]},{"Key":"_hello world_,","Fragments":["however,","however,","however,","however,","however,","however,","however,","however,","however,","however,"]},{"Key":"world_, however,","Fragments":["we","we","we","we","we","we","we","we","we","we"]},{"Key":"however, we","Fragments":["won't","won't","won't","won't","won't","won't","won't","won't","won't","won't"]},{"Key":"we won't","Fragments":["be","be","be","be","be","be","be","be","be","be"]},{"Key":"be encouraging","Fragments":["conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations","conversations"]},{"Key":"encouraging conversations","Fragments":["and","and","and","and","and","and","and","and","and","and"]},{"Key":"conversations and","Fragments":["iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations.","iterations."]},{"Key":"and iterations.","Fragments":["We","We","We","We","We","We","We","We","We","We"]},{"Key":"iterations. We","Fragments":["simply","simply","simply","simply","simply","simply","simply","simply","simply","simply"]},{"Key":"We simply","Fragments":["wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted","wanted"]},{"Key":"simply wanted","Fragments":["to","to","to","to","to","to","to","to","to","to"]},{"Key":"sure you","Fragments":["got","got","got","got","got","got","got","got","got","got"]},{"Key":"you got","Fragments":["through","through","through","through","through","through","through","through","through","through"]},{"Key":"got through","Fragments":["the","the","the","the","the","the","the","the","the","the"]},{"Key":"the (sometimes","Fragments":["fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)","fiddly)"]},{"Key":"(sometimes fiddly)","Fragments":["process","process","process","process","process","process","process","process","process","process"]},{"Key":"fiddly) process","Fragments":["of","of","of","of","of","of","of","of","of","of"]},{"Key":"process of","Fragments":["fetching,","fetching,","fetching,","avoiding","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,","fetching,"]},{"Key":"of fetching,","Fragments":["running","running","running","running","running","running","running","running","running","running"]},{"Key":"fetching, running","Fragments":["some","some","some","some","some","some","some","some","some","some"]},{"Key":"running some","Fragments":["tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,","tests,"]},{"Key":"some tests,","Fragments":["and","and","and","and","and","and","and","and","and","and"]},{"Key":"tests, and","Fragments":["submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting","submitting"]},{"Key":"and submitting","Fragments":["a","a","a","a","a","a","a","a","a","a"]},{"Key":"submitting a","Fragments":["solution","solution","solution","solution","solution","solution","solution","solution","solution","solution"]},{"Key":"The next","Fragments":["step","step","step","step","step","step","step","step","step","step"]},{"Key":"to fetch","Fragments":["the","the","the","the","the","the","the","the","the","the"]},{"Key":"fetch the","Fragments":["next","next","next","next","next","next","next","next","next","next"]},{"Key":"next exercise","Fragments":["(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism","(`exercism"]},{"Key":"exercise (`exercism","Fragments":["fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),","fetch`),"]},{"Key":"(`exercism fetch`),","Fragments":["create","create","create","create","create","create","create","create","create","create"]},{"Key":"fetch`), create","Fragments":["a","a","a","a","a","a","a","a","a","a"]},{"Key":"a solution,","Fragments":["and","and","and","and","and","and","and","and","and","and"]},{"Key":"solution, and","Fragments":["then","then","then","then","then","then","then","then","then","then"]},{"Key":"then submit","Fragments":["it","it","it","it","it","it","it","it","it","it"]},{"Key":"submit it","Fragments":["to","to","to","to","to","to","to","to","to","to"]},{"Key":"the website","Fragments":["as","as","as","as","as","as","as","as","as","as"]},{"Key":"website as","Fragments":["a","a","a","a","a","a","a","a","a","a"]},{"Key":" Happy","Fragments":["hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!","hacking!"]},{"Key":" _This","Fragments":["is","is","is","is","is","is","is","is","is","is"]},{"Key":"_This is","Fragments":["an","an","an","an","an","an","an","an","an","an"]},{"Key":"an automated","Fragments":["nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick.","nitpick."]},{"Key":"automated nitpick.","Fragments":["[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read","[Read"]},{"Key":"nitpick. [Read","Fragments":["more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)","more](http://exercism.io/rikki)"]},{"Key":"[Read more](http://exercism.io/rikki)","Fragments":["about","about","about","about","about","about","about","about","about","about"]},{"Key":"more](http://exercism.io/rikki) about","Fragments":["this","this","this","this","this","this","this","this","this","this"]},{"Key":"* Have","Fragments":["you"]},{"Key":"considered adding","Fragments":["a","a"]},{"Key":"* Personally","Fragments":["I'd"]},{"Key":"Personally I'd","Fragments":["think"]},{"Key":"I'd think","Fragments":["a"]},{"Key":"a named","Fragments":["function","function.","function?"]},{"Key":"named function","Fragments":["would"]},{"Key":"be far","Fragments":["more"]},{"Key":"far more","Fragments":["readable"]},{"Key":"more readable","Fragments":["than","with","body-recursive","as","than"]},{"Key":"readable than","Fragments":["your","the"]},{"Key":"Nice clean","Fragments":["solution.","solution"]},{"Key":"clean solution.","Fragments":["However","Did"]},{"Key":"solution. However","Fragments":["I"]},{"Key":"However I","Fragments":["would"]},{"Key":"suggest the","Fragments":["following"]},{"Key":"- Find","Fragments":["a"]},{"Key":"Find a","Fragments":["better"]},{"Key":"name than","Fragments":["`rna/1`"]},{"Key":"- Use","Fragments":["guards","library"]},{"Key":"- Provide","Fragments":["a"]},{"Key":"Provide a","Fragments":["typespec"]},{"Key":"a typespec","Fragments":["(potentially","and","for","however.","for"]},{"Key":"typespec (potentially","Fragments":["defining"]},{"Key":"(potentially defining","Fragments":["types)"]},{"Key":" you","Fragments":["could","could","could","could","could"]},{"Key":"* Patternmatching","Fragments":["on"]},{"Key":"Patternmatching on","Fragments":["lists"]},{"Key":"lists using","Fragments":["list"]},{"Key":"list constructors","Fragments":["(`[$G|Rest]`)"]},{"Key":"constructors (`[$G|Rest]`)","Fragments":["might"]},{"Key":"(`[$G|Rest]`) might","Fragments":["be"]},{"Key":"on concatenated","Fragments":["lists."]},{"Key":"* Everytime","Fragments":["appending"]},{"Key":"Everytime appending","Fragments":["the"]},{"Key":"appending the","Fragments":["new","characters"]},{"Key":"the new","Fragments":["one","list","key-value"]},{"Key":"new one","Fragments":["to"]},{"Key":"the old","Fragments":["one"]},{"Key":"old one","Fragments":["makes"]},{"Key":"one makes","Fragments":["your"]},{"Key":"your implementation","Fragments":["O(n²)."]},{"Key":"implementation O(n²).","Fragments":["Can"]},{"Key":"O(n²). Can","Fragments":["you"]},{"Key":"you imagine","Fragments":["a","a"]},{"Key":"it O(n)","Fragments":["by"]},{"Key":"O(n) by","Fragments":["using"]},{"Key":"using some","Fragments":["higher","simple"]},{"Key":"some higher","Fragments":["order"]},{"Key":"order functions","Fragments":["from","in"]},{"Key":"reading [section","Fragments":["5.4"]},{"Key":"[section 5.4","Fragments":["of"]},{"Key":"5.4 of","Fragments":["the"]},{"Key":"erlang docs](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67021),","Fragments":["I"]},{"Key":"docs](http://www.erlang.org/doc/efficiency_guide/listHandling.html#id67021), I","Fragments":["take"]},{"Key":"I take","Fragments":["back"]},{"Key":"take back","Fragments":["my"]},{"Key":"back my","Fragments":["tail"]},{"Key":"my tail","Fragments":["recursion"]},{"Key":" Would","Fragments":["like","be"]},{"Key":"Would like","Fragments":["to"]},{"Key":"Wow, very","Fragments":["concise!"]},{"Key":"very concise!","Fragments":[":+1:"]},{"Key":"can follow","Fragments":["you"]},{"Key":"follow you","Fragments":["code"]},{"Key":"you code","Fragments":["correctly"]},{"Key":"code correctly","Fragments":["you"]},{"Key":"correctly you","Fragments":["are"]},{"Key":"are iterating","Fragments":["the","over"]},{"Key":"iterating the","Fragments":["list"]},{"Key":"list thrice","Fragments":["(`zip`,"]},{"Key":"thrice (`zip`,","Fragments":["`filter`,"]},{"Key":"(`zip`, `filter`,","Fragments":["`length`)."]},{"Key":"`filter`, `length`).","Fragments":["You"]},{"Key":"`length`). You","Fragments":["could"]},{"Key":"could reduce","Fragments":["this"]},{"Key":"reduce this","Fragments":["by"]},{"Key":"this by","Fragments":["one"]},{"Key":"by one","Fragments":["when"]},{"Key":"one when","Fragments":["using"]},{"Key":"when using","Fragments":["a"]},{"Key":"think there","Fragments":["should","other,"]},{"Key":"there should","Fragments":["be","be"]},{"Key":"be type-annotations","Fragments":["for"]},{"Key":"type-annotations for","Fragments":["public"]},{"Key":"for public","Fragments":["functions"]},{"Key":"public functions","Fragments":["at"]},{"Key":"functions at","Fragments":["least.","least!"]},{"Key":"is such","Fragments":["a","a"]},{"Key":"a trivial","Fragments":["problem,"]},{"Key":"trivial problem,","Fragments":["I"]},{"Key":"I hadn't","Fragments":["even"]},{"Key":"hadn't even","Fragments":["thought"]},{"Key":"even thought","Fragments":["about"]},{"Key":"thought about","Fragments":["making","this","what","that,"]},{"Key":"it tail","Fragments":["recursive.","recursive?"]},{"Key":"recursive. Good","Fragments":["call."]},{"Key":"spec --","Fragments":["just"]},{"Key":"-- just","Fragments":["to"]},{"Key":"just to","Fragments":["get"]},{"Key":"get into","Fragments":["the","habit","the"]},{"Key":"of doing","Fragments":["it","`rem","the"]},{"Key":"like Line","Fragments":["4"]},{"Key":"Line 4","Fragments":["is"]},{"Key":"4 is","Fragments":["not"]},{"Key":"not right.","Fragments":["Should"]},{"Key":"right. Should","Fragments":["the"]},{"Key":"the base","Fragments":["condition","for","case.","case"]},{"Key":"base condition","Fragments":["of"]},{"Key":"condition of","Fragments":["the"]},{"Key":"recursive deal","Fragments":["with"]},{"Key":"the solo","Fragments":["case"]},{"Key":"solo case","Fragments":["instead"]},{"Key":"case instead","Fragments":["of"]},{"Key":"empty case?","Fragments":["Should"]},{"Key":"case? Should","Fragments":["I"]},{"Key":"Should I","Fragments":["write"]},{"Key":"write this","Fragments":["with"]},{"Key":"accumulator variable","Fragments":["and"]},{"Key":"variable and","Fragments":["make","follows"]},{"Key":"and make","Fragments":["it"]},{"Key":"It should","Fragments":["be"]},{"Key":"empty case!","Fragments":["If"]},{"Key":"case! If","Fragments":["you"]},{"Key":"the singletonlist","Fragments":["the"]},{"Key":"singletonlist the","Fragments":["basecase"]},{"Key":"the basecase","Fragments":["your"]},{"Key":"basecase your","Fragments":["`accumulate/2`"]},{"Key":"`accumulate/2` would","Fragments":["fail"]},{"Key":"would fail","Fragments":["on"]},{"Key":"fail on","Fragments":["an","invalid-chars"]},{"Key":"on an","Fragments":["empty"]},{"Key":" Code","Fragments":["feels"]},{"Key":"Code feels","Fragments":["a"]},{"Key":"feels a","Fragments":["lot"]},{"Key":"me if","Fragments":["the","I"]},{"Key":"the incoming","Fragments":["arguments"]},{"Key":"incoming arguments","Fragments":["are"]},{"Key":"arguments are","Fragments":["converted","equal."]},{"Key":"are converted","Fragments":["to"]},{"Key":"converted to","Fragments":["integers;"]},{"Key":"to integers;","Fragments":["this"]},{"Key":"integers; this","Fragments":["gets"]},{"Key":"this gets","Fragments":["a"]},{"Key":"gets a","Fragments":["bit"]},{"Key":"bit confusing","Fragments":["switching"]},{"Key":"confusing switching","Fragments":["back"]},{"Key":"switching back","Fragments":["and"]},{"Key":"back and","Fragments":["forth.","re-use"]},{"Key":"other hand,","Fragments":["big"]},{"Key":"hand, big","Fragments":["props"]},{"Key":"big props","Fragments":["for"]},{"Key":"props for","Fragments":["first"]},{"Key":"for first","Fragments":["use"]},{"Key":"first use","Fragments":["of"]},{"Key":"of `bxor`","Fragments":["I"]},{"Key":"`bxor` I","Fragments":["can"]},{"Key":" Taking","Fragments":["advantage"]},{"Key":"Taking advantage","Fragments":["of"]},{"Key":"of suitable","Fragments":["representations"]},{"Key":"suitable representations","Fragments":["always"]},{"Key":"representations always","Fragments":["helps"]},{"Key":"always helps","Fragments":["clarity,"]},{"Key":"helps clarity,","Fragments":["but"]},{"Key":"clarity, but","Fragments":["sometimes"]},{"Key":"but sometimes","Fragments":["we"]},{"Key":"sometimes we","Fragments":["want"]},{"Key":"of conversion.","Fragments":["OTOH,"]},{"Key":"conversion. OTOH,","Fragments":["you"]},{"Key":"OTOH, you","Fragments":["could"]},{"Key":"argue the","Fragments":["additional"]},{"Key":"the additional","Fragments":["memory"]},{"Key":"additional memory","Fragments":["pressure"]},{"Key":"memory pressure","Fragments":["of"]},{"Key":"pressure of","Fragments":["`lists:reverse/1`"]},{"Key":"of `lists:reverse/1`","Fragments":["outweighs"]},{"Key":"`lists:reverse/1` outweighs","Fragments":["the"]},{"Key":"outweighs the","Fragments":["cost"]},{"Key":"doing `rem","Fragments":["10`"]},{"Key":"`rem 10`","Fragments":["all"]},{"Key":"10` all","Fragments":["the"]},{"Key":"you're probably","Fragments":["right","already"]},{"Key":"probably right","Fragments":["on"]},{"Key":"right on","Fragments":["modern"]},{"Key":"on modern","Fragments":["enough","runtimes](http://stackoverflow.com/a/6179634)."]},{"Key":"modern enough","Fragments":["hardware."]},{"Key":"Looking back","Fragments":["on"]},{"Key":"on this,","Fragments":["I"]},{"Key":"think `value/2`","Fragments":["could"]},{"Key":"`value/2` could","Fragments":["be"]},{"Key":"be clearer.","Fragments":["It's"]},{"Key":"clearer. It's","Fragments":["a"]},{"Key":"bad name,","Fragments":["and"]},{"Key":"name, and","Fragments":["I"]},{"Key":"suspect a","Fragments":["better"]},{"Key":"name would","Fragments":["lead","be"]},{"Key":"lead to","Fragments":["a"]},{"Key":"there isn't","Fragments":["a","really"]},{"Key":"good way","Fragments":["to","to"]},{"Key":"avoid reversing","Fragments":["the"]},{"Key":"lists entirely;","Fragments":["there"]},{"Key":"entirely; there","Fragments":["are"]},{"Key":"only two","Fragments":["possibilities"]},{"Key":"two possibilities","Fragments":["for"]},{"Key":"possibilities for","Fragments":["parity"]},{"Key":"for parity","Fragments":["--"]},{"Key":"parity --","Fragments":["why"]},{"Key":"not accumulate","Fragments":["sums"]},{"Key":"accumulate sums","Fragments":["for"]},{"Key":"sums for","Fragments":["both,"]},{"Key":"for both,","Fragments":["and"]},{"Key":"both, and","Fragments":["decide"]},{"Key":"and decide","Fragments":["at"]},{"Key":"decide at","Fragments":["the"]},{"Key":"end which","Fragments":["one"]},{"Key":" First,","Fragments":["a"]},{"Key":"First, a","Fragments":["general"]},{"Key":"a general","Fragments":["remark:"]},{"Key":"general remark:","Fragments":["using"]},{"Key":"remark: using","Fragments":["maps"]},{"Key":"using maps","Fragments":["for","here"]},{"Key":"maps for","Fragments":["such"]},{"Key":"for such","Fragments":["a"]},{"Key":"simple transposition","Fragments":["exercise"]},{"Key":"transposition exercise","Fragments":["seems"]},{"Key":"exercise seems","Fragments":["overkill"]},{"Key":"seems overkill","Fragments":["to"]},{"Key":"overkill to","Fragments":["me."]},{"Key":"to me.","Fragments":["Consider","It"]},{"Key":"me. Consider","Fragments":["taking"]},{"Key":"Consider taking","Fragments":["advantage"]},{"Key":"taking advantage","Fragments":["of","of"]},{"Key":"of Erlang's","Fragments":["powerful","strengths?"]},{"Key":"Erlang's powerful","Fragments":["pattern"]},{"Key":"powerful pattern","Fragments":["matching"]},{"Key":"matching and","Fragments":["guards","the","when"]},{"Key":"Now for","Fragments":["specific"]},{"Key":"for specific","Fragments":["nitpicks"]},{"Key":"specific nitpicks","Fragments":["regarding"]},{"Key":"nitpicks regarding","Fragments":["your"]},{"Key":"regarding your","Fragments":["chosen"]},{"Key":"your chosen","Fragments":["solution:"]},{"Key":"* While","Fragments":["I"]},{"Key":"am a","Fragments":["fan"]},{"Key":"of extracting","Fragments":["generic"]},{"Key":"extracting generic","Fragments":["functionality,"]},{"Key":"generic functionality,","Fragments":["I"]},{"Key":"functionality, I","Fragments":["feel"]},{"Key":"feel in","Fragments":["this"]},{"Key":"case the","Fragments":["code"]},{"Key":"readable with","Fragments":["a"]},{"Key":"little less","Fragments":["decomposition."]},{"Key":"less decomposition.","Fragments":["For"]},{"Key":"decomposition. For","Fragments":["example,"]},{"Key":"example, the","Fragments":["call"]},{"Key":"to `extract_alphanumeric/1`","Fragments":["is"]},{"Key":"`extract_alphanumeric/1` is","Fragments":["almost","somewhat"]},{"Key":"almost as","Fragments":["long"]},{"Key":"its body,","Fragments":["and"]},{"Key":"body, and","Fragments":["the"]},{"Key":"the reader","Fragments":["has"]},{"Key":"reader has","Fragments":["to"]},{"Key":"to parse","Fragments":["an","in"]},{"Key":"parse an","Fragments":["additional"]},{"Key":"an additional","Fragments":["function."]},{"Key":"* `extract_alphanumeric/1`","Fragments":["is"]},{"Key":"somewhat inefficient","Fragments":["because"]},{"Key":"inefficient because","Fragments":["it"]},{"Key":"it requires","Fragments":["multiple"]},{"Key":"requires multiple","Fragments":["list"]},{"Key":"multiple list","Fragments":["construction"]},{"Key":"list construction","Fragments":["and","using","rather"]},{"Key":"construction and","Fragments":["concatenation"]},{"Key":"and concatenation","Fragments":["(line"]},{"Key":"concatenation (line","Fragments":["26)"]},{"Key":"(line 26)","Fragments":["to"]},{"Key":"26) to","Fragments":["set"]},{"Key":"to set","Fragments":["up"]},{"Key":"set up","Fragments":["and"]},{"Key":"up and","Fragments":["a","had"]},{"Key":"a linear","Fragments":["search"]},{"Key":"linear search","Fragments":["through"]},{"Key":"search through","Fragments":["a"]},{"Key":"through a","Fragments":["62"]},{"Key":"a 62","Fragments":["element"]},{"Key":"62 element","Fragments":["list"]},{"Key":"element list","Fragments":["(line"]},{"Key":"list (line","Fragments":["28)"]},{"Key":"(line 28)","Fragments":["for"]},{"Key":"28) for","Fragments":["each"]},{"Key":"each input","Fragments":["character."]},{"Key":"input character.","Fragments":["It"]},{"Key":"character. It","Fragments":["also"]},{"Key":"It also","Fragments":["does"]},{"Key":"also does","Fragments":["not"]},{"Key":"not feel","Fragments":["particularly"]},{"Key":"feel particularly","Fragments":["\"Erlangy\"."]},{"Key":"* `encode`","Fragments":["and"]},{"Key":"`encode` and","Fragments":["`decode`"]},{"Key":"and `decode`","Fragments":["are"]},{"Key":"`decode` are","Fragments":["so"]},{"Key":"are so","Fragments":["similar,"]},{"Key":"so similar,","Fragments":["you"]},{"Key":"similar, you","Fragments":["might"]},{"Key":"consider implementing","Fragments":["one"]},{"Key":"implementing one","Fragments":["in"]},{"Key":"one in","Fragments":["terms"]},{"Key":"the other.","Fragments":["Hint:"]},{"Key":"other. Hint:","Fragments":["think"]},{"Key":"Hint: think","Fragments":["about"]},{"Key":"between `create_dicitionary(?ALPHABET)`","Fragments":["and"]},{"Key":"`create_dicitionary(?ALPHABET)` and","Fragments":["`create_dicitionary(lists:reverse(?ALPHABET))`."]},{"Key":"Since the","Fragments":["name"]},{"Key":"the name","Fragments":["of","\"divides\"","\"normalize\";","`transcribe`"]},{"Key":"name of","Fragments":["this"]},{"Key":"exercise is","Fragments":["\"accumulate\",","to","to"]},{"Key":"is \"accumulate\",","Fragments":["I"]},{"Key":"\"accumulate\", I","Fragments":["went"]},{"Key":"I went","Fragments":["for"]},{"Key":"went for","Fragments":["a"]},{"Key":"solution that","Fragments":["uses","uses"]},{"Key":"uses an","Fragments":["accumulator"]},{"Key":"accumulator even","Fragments":["though"]},{"Key":"this could","Fragments":["be"]},{"Key":"more simply","Fragments":["with"]},{"Key":"simply with","Fragments":["a"]},{"Key":"I'd prefer","Fragments":["to","to"]},{"Key":"have complete","Fragments":["new"]},{"Key":"complete new","Fragments":["types"]},{"Key":"new types","Fragments":["over"]},{"Key":"types over","Fragments":["the"]},{"Key":"the literals","Fragments":["in"]},{"Key":"literals in","Fragments":["the","the"]},{"Key":" thank","Fragments":["you"]},{"Key":"the definition","Fragments":["of","should"]},{"Key":"of `is_question`","Fragments":["so"]},{"Key":"`is_question` so","Fragments":["they"]},{"Key":"they match","Fragments":["the"]},{"Key":"match the","Fragments":["problem"]},{"Key":" `is_silence`","Fragments":["could"]},{"Key":"`is_silence` could","Fragments":["use"]},{"Key":"use `lists:last()`","Fragments":["as"]},{"Key":"`lists:last()` as","Fragments":["an"]},{"Key":"an alternate","Fragments":["implementation."]},{"Key":" Having","Fragments":["the"]},{"Key":"Having the","Fragments":["multiple"]},{"Key":"the multiple","Fragments":["`response_for_`","`when`"]},{"Key":"multiple `response_for_`","Fragments":["functions"]},{"Key":"`response_for_` functions","Fragments":["feels"]},{"Key":"functions feels","Fragments":["like"]},{"Key":"like it's","Fragments":["missing"]},{"Key":"it's missing","Fragments":["an"]},{"Key":"missing an","Fragments":["opportunity"]},{"Key":"an opportunity","Fragments":["to"]},{"Key":"opportunity to","Fragments":["use","use"]},{"Key":"matching, maybe","Fragments":["think"]},{"Key":"maybe think","Fragments":["about"]},{"Key":"about something","Fragments":["like"]},{"Key":"case {is_silence(S),","Fragments":["is_shout(S),"]},{"Key":"{is_silence(S), is_shout(S),","Fragments":["is_question(S)}"]},{"Key":"is_shout(S), is_question(S)}","Fragments":["of"]},{"Key":"{true, _,","Fragments":["_}","false}"]},{"Key":"_, _}","Fragments":["-\u003e"]},{"Key":"saw someone","Fragments":["solve"]},{"Key":"someone solve","Fragments":["the"]},{"Key":"problem using","Fragments":["the"]},{"Key":"suggest with","Fragments":["the"]},{"Key":"cases of","Fragments":["pattern","`to_rna`"]},{"Key":"pattern matched","Fragments":["tuples."]},{"Key":"matched tuples.","Fragments":["It's"]},{"Key":"tuples. It's","Fragments":["a"]},{"Key":"and definitely","Fragments":["shorter"]},{"Key":"definitely shorter","Fragments":["and"]},{"Key":"shorter and","Fragments":["more"]},{"Key":"* matching","Fragments":["could"]},{"Key":"matching could","Fragments":["be"]},{"Key":"be better,","Fragments":["ie","but"]},{"Key":"better, ie","Fragments":["running"]},{"Key":"ie running","Fragments":["from"]},{"Key":"running from","Fragments":["most"]},{"Key":"from most","Fragments":["specific","specific"]},{"Key":"most specific","Fragments":["(rem","to"]},{"Key":"specific (rem","Fragments":["400)"]},{"Key":"(rem 400)","Fragments":["to"]},{"Key":"400) to","Fragments":["least"]},{"Key":"to least","Fragments":["specific,","specific"]},{"Key":"least specific,","Fragments":["but"]},{"Key":"specific, but","Fragments":["this"]},{"Key":"* _Year","Fragments":["in"]},{"Key":"_Year in","Fragments":["the"]},{"Key":"the catch","Fragments":["all"]},{"Key":"catch all","Fragments":["pattern","case."]},{"Key":"all pattern","Fragments":["match"]},{"Key":"match keeps","Fragments":["the"]},{"Key":"keeps the","Fragments":["param"]},{"Key":"the param","Fragments":["meaningful,"]},{"Key":"param meaningful,","Fragments":["very"]},{"Key":"meaningful, very","Fragments":["nice."]},{"Key":"agree the","Fragments":["match"]},{"Key":"the match","Fragments":["is","tuples."]},{"Key":"match is","Fragments":["in"]},{"Key":"is in","Fragments":["an","Erlang."]},{"Key":"an awkward","Fragments":["order;"]},{"Key":"awkward order;","Fragments":["the"]},{"Key":"order; the","Fragments":["fact"]},{"Key":"final function","Fragments":["clause"]},{"Key":"is true","Fragments":["is"]},{"Key":"true is","Fragments":["much"]},{"Key":"much the","Fragments":["inverse","same"]},{"Key":"the inverse","Fragments":["of"]},{"Key":"inverse of","Fragments":["what"]},{"Key":"The motivation","Fragments":["was","here"]},{"Key":"motivation was","Fragments":["to"]},{"Key":"to immediately","Fragments":["discard"]},{"Key":"immediately discard","Fragments":["anything"]},{"Key":"discard anything","Fragments":["that"]},{"Key":"anything that","Fragments":["couldn't"]},{"Key":"that couldn't","Fragments":["be"]},{"Key":"year, then","Fragments":["deal"]},{"Key":"then deal","Fragments":["with"]},{"Key":"with edge","Fragments":["cases."]},{"Key":"edge cases.","Fragments":["In"]},{"Key":"cases. In","Fragments":["retrospect,"]},{"Key":"a poor","Fragments":["solution"]},{"Key":"poor solution","Fragments":["from"]},{"Key":"solution from","Fragments":["a"]},{"Key":"a comprehensibility","Fragments":["standpoint."]},{"Key":"Very nice,","Fragments":["I"]},{"Key":"nice, I","Fragments":["wish"]},{"Key":"I wish","Fragments":["I"]},{"Key":"wish I","Fragments":["would","could"]},{"Key":"have thought","Fragments":["about"]},{"Key":"this approach!","Fragments":["I"]},{"Key":"approach! I","Fragments":["thought"]},{"Key":"using lists:filter/2,","Fragments":["but"]},{"Key":"lists:filter/2, but","Fragments":["didn't"]},{"Key":"but didn't","Fragments":["think","know","think"]},{"Key":"think long","Fragments":["enough"]},{"Key":"long enough","Fragments":["about"]},{"Key":"enough about","Fragments":["how"]},{"Key":"of Multiples","Fragments":["into"]},{"Key":"Multiples into","Fragments":["the"]},{"Key":"the predicate","Fragments":["function.","although","in"]},{"Key":"predicate function.","Fragments":["This"]},{"Key":"This approach","Fragments":["makes"]},{"Key":"approach makes","Fragments":["for"]},{"Key":"makes for","Fragments":["a"]},{"Key":"very concise","Fragments":["solution,"]},{"Key":"solution, well","Fragments":["done."]},{"Key":" Thanks.","Fragments":["Using"]},{"Key":"Thanks. Using","Fragments":["a"]},{"Key":"Using a","Fragments":["comprehension","proplist","helper"]},{"Key":"comprehension instead","Fragments":["of"]},{"Key":"of filter","Fragments":["would","and","(i.e,"]},{"Key":"filter would","Fragments":["probably"]},{"Key":"probably yield","Fragments":["an"]},{"Key":"yield an","Fragments":["even"]},{"Key":"\u003e In","Fragments":["R12B","addition,"]},{"Key":"In R12B","Fragments":["and"]},{"Key":"R12B and","Fragments":["later"]},{"Key":"and later","Fragments":["releases,"]},{"Key":"later releases,","Fragments":["there"]},{"Key":"releases, there","Fragments":["is"]},{"Key":"an optimization","Fragments":["that"]},{"Key":"optimization that","Fragments":["in"]},{"Key":"in many","Fragments":["cases","cases."]},{"Key":"many cases","Fragments":["reduces"]},{"Key":"cases reduces","Fragments":["the"]},{"Key":"reduces the","Fragments":["number","unecessary"]},{"Key":"of words","Fragments":["used"]},{"Key":"words used","Fragments":["on"]},{"Key":"used on","Fragments":["the","line"]},{"Key":"stack in","Fragments":["body-recursive"]},{"Key":"in body-recursive","Fragments":["calls."]},{"Key":"body-recursive calls.","Fragments":["A"]},{"Key":"calls. A","Fragments":["body-recursive"]},{"Key":"A body-recursive","Fragments":["list"]},{"Key":"body-recursive list","Fragments":["function"]},{"Key":"list function","Fragments":["and"]},{"Key":"a tail-recursive","Fragments":["function"]},{"Key":"tail-recursive function","Fragments":["that"]},{"Key":"that calls","Fragments":["lists:reverse/1"]},{"Key":"calls lists:reverse/1","Fragments":["at"]},{"Key":"lists:reverse/1 at","Fragments":["the"]},{"Key":"end will","Fragments":["use"]},{"Key":"will use","Fragments":["the","a"]},{"Key":"same amount","Fragments":["of","of"]},{"Key":"of memory.","Fragments":["lists:map/2,"]},{"Key":"memory. lists:map/2,","Fragments":["lists:filter/2,"]},{"Key":"lists:map/2, lists:filter/2,","Fragments":["list"]},{"Key":"lists:filter/2, list","Fragments":["comprehensions,"]},{"Key":"comprehensions, and","Fragments":["many"]},{"Key":"and many","Fragments":["other"]},{"Key":"other recursive","Fragments":["functions"]},{"Key":"functions now","Fragments":["use"]},{"Key":"now use","Fragments":["the"]},{"Key":"of space","Fragments":["as"]},{"Key":"space as","Fragments":["their"]},{"Key":"as their","Fragments":["tail-recursive"]},{"Key":"their tail-recursive","Fragments":["equivalents."]},{"Key":" –","Fragments":["[The"]},{"Key":"– [The","Fragments":["Eight"]},{"Key":"[The Eight","Fragments":["Myths"]},{"Key":"Eight Myths","Fragments":["of"]},{"Key":"Myths of","Fragments":["Erlang"]},{"Key":"of Erlang","Fragments":["Performance][1]","coding","I'm"]},{"Key":"With that","Fragments":["in"]},{"Key":"mind, consider","Fragments":["a"]},{"Key":"consider a","Fragments":["subjectively","tail"]},{"Key":"a subjectively","Fragments":["more"]},{"Key":"subjectively more","Fragments":["readable"]},{"Key":"readable body-recursive","Fragments":["`accumulate/3`."]},{"Key":"- [Write","Fragments":["Code"]},{"Key":"[Write Code","Fragments":["for"]},{"Key":"Code for","Fragments":["Humans"]},{"Key":"for Humans","Fragments":["not"]},{"Key":"Humans not","Fragments":["Machines][2]"]},{"Key":"- [Stack","Fragments":["Overflow"]},{"Key":"[Stack Overflow","Fragments":["answer][3]"]},{"Key":" [2]:","Fragments":["http://programmer.97things.oreilly.com/wiki/index.php/Write_Code_for_Humans_not_Machines","https://github.com/lfex/xlfe"]},{"Key":" [3]:","Fragments":["http://stackoverflow.com/a/522907/1793234"]},{"Key":"I learned","Fragments":["that","something"]},{"Key":"learned that","Fragments":["this"]},{"Key":"this week,","Fragments":["but"]},{"Key":"week, but","Fragments":["I'm"]},{"Key":"sure I","Fragments":["can","can","made"]},{"Key":"can bring","Fragments":["myself","myself"]},{"Key":"bring myself","Fragments":["to","to"]},{"Key":"write body-recursive","Fragments":["functions!","functions!"]},{"Key":"body-recursive functions!","Fragments":["Thanks"]},{"Key":"functions! Thanks","Fragments":["for"]},{"Key":"\u003e I'm","Fragments":["not"]},{"Key":"Consider reimplementing","Fragments":["`sumOfMultiples/2`"]},{"Key":"reimplementing `sumOfMultiples/2`","Fragments":["with"]},{"Key":"`sumOfMultiples/2` with","Fragments":["a"]},{"Key":"single `lists:foldl`","Fragments":["instead"]},{"Key":"`lists:foldl` instead","Fragments":["of"]},{"Key":"`lists:filter/2` then","Fragments":["`lists:sum/1`."]},{"Key":" Two","Fragments":["ideas:"]},{"Key":"1. `f/1`","Fragments":["could"]},{"Key":"`f/1` could","Fragments":["use"]},{"Key":"better name,","Fragments":["even"]},{"Key":"name, even","Fragments":["if"]},{"Key":"it isn't","Fragments":["exported","a"]},{"Key":"isn't exported","Fragments":["from"]},{"Key":"exported from","Fragments":["the"]},{"Key":"the module.","Fragments":["The"]},{"Key":"module. The","Fragments":["name"]},{"Key":"The name","Fragments":["should"]},{"Key":"name should","Fragments":["make"]},{"Key":"should make","Fragments":["clear"]},{"Key":"make clear","Fragments":["what"]},{"Key":"clear what","Fragments":["the"]},{"Key":"would get","Fragments":["rid"]},{"Key":"guard check","Fragments":["for","in"]},{"Key":"for `is_list(DNA)`.","Fragments":["The"]},{"Key":"`is_list(DNA)`. The","Fragments":["spec"]},{"Key":"The spec","Fragments":["tells","for"]},{"Key":"spec tells","Fragments":["users"]},{"Key":"tells users","Fragments":["that"]},{"Key":"users that","Fragments":["the"]},{"Key":"function expects","Fragments":["a"]},{"Key":"expects a","Fragments":["string,"]},{"Key":"a string,","Fragments":["the","you're","`++`"]},{"Key":"string, the","Fragments":["use"]},{"Key":"of `lists:map`","Fragments":["tells"]},{"Key":"`lists:map` tells","Fragments":["the"]},{"Key":"tells the","Fragments":["user"]},{"Key":"user that","Fragments":["he"]},{"Key":"that he","Fragments":["needs"]},{"Key":"he needs","Fragments":["to"]},{"Key":"list. Is","Fragments":["there"]},{"Key":"there a","Fragments":["second","way","way","compelling"]},{"Key":"second clause","Fragments":["that"]},{"Key":"clause that","Fragments":["handles","checks"]},{"Key":"that handles","Fragments":["non-lists?"]},{"Key":"handles non-lists?","Fragments":["To"]},{"Key":"non-lists? To","Fragments":["me"]},{"Key":"To me","Fragments":["the"]},{"Key":"check in","Fragments":["this"]},{"Key":"this place","Fragments":["just"]},{"Key":"place just","Fragments":["adds"]},{"Key":"just adds","Fragments":["redundancy"]},{"Key":"adds redundancy","Fragments":["and"]},{"Key":"redundancy and","Fragments":["noise."]},{"Key":"consider renaming","Fragments":["`f`"]},{"Key":"renaming `f`","Fragments":["to"]},{"Key":"`f` to","Fragments":["`to_rna`"]},{"Key":"to `to_rna`","Fragments":["and"]},{"Key":"`to_rna` and","Fragments":["then"]},{"Key":"The core","Fragments":["of"]},{"Key":"solution is,","Fragments":["I"]},{"Key":"I believe,","Fragments":["the"]},{"Key":"believe, the","Fragments":["ideal"]},{"Key":"the ideal","Fragments":["solution."]},{"Key":"ideal solution.","Fragments":["You"]},{"Key":"solution. You","Fragments":["used"]},{"Key":"You used","Fragments":["the"]},{"Key":"used the","Fragments":["`lists`"]},{"Key":"the `lists`","Fragments":["module"]},{"Key":"`lists` module","Fragments":["to"]},{"Key":"module to","Fragments":["full"]},{"Key":"to full","Fragments":["effect."]},{"Key":"would pick","Fragments":["a"]},{"Key":"pick a","Fragments":["nit,"]},{"Key":"a nit,","Fragments":["however,"]},{"Key":"nit, however,","Fragments":["with"]},{"Key":"however, with","Fragments":["your"]},{"Key":"your error","Fragments":["checking"]},{"Key":"error checking","Fragments":["on"]},{"Key":"checking on","Fragments":["`sumOfMultiples`."]},{"Key":"believe the","Fragments":["idiomatic"]},{"Key":"the idiomatic","Fragments":["approach"]},{"Key":"idiomatic approach","Fragments":["would"]},{"Key":"approach would","Fragments":["be","require"]},{"Key":"to skip","Fragments":["both"]},{"Key":"skip both","Fragments":["the"]},{"Key":"both the","Fragments":["first","mapping"]},{"Key":"first two","Fragments":["function"]},{"Key":"two function","Fragments":["clauses."]},{"Key":"If there","Fragments":["are"]},{"Key":"are no","Fragments":["values"]},{"Key":"no values","Fragments":["supplied","being"]},{"Key":"values supplied","Fragments":["in"]},{"Key":"supplied in","Fragments":["the"]},{"Key":"the list,","Fragments":["then","since"]},{"Key":"list, then","Fragments":["the"]},{"Key":"sum would","Fragments":["be"]},{"Key":"be 0.","Fragments":["This"]},{"Key":"0. This","Fragments":["is"]},{"Key":"a reasonable","Fragments":["response","argument"]},{"Key":"reasonable response","Fragments":["if"]},{"Key":"response if","Fragments":["this"]},{"Key":"is buried","Fragments":["within"]},{"Key":"buried within","Fragments":["a"]},{"Key":"within a","Fragments":["call"]},{"Key":"a call","Fragments":["chain,"]},{"Key":"call chain,","Fragments":["and"]},{"Key":"chain, and","Fragments":["whatever"]},{"Key":"and whatever","Fragments":["processing"]},{"Key":"whatever processing","Fragments":["led"]},{"Key":"processing led","Fragments":["to"]},{"Key":"led to","Fragments":["this"]},{"Key":"this point","Fragments":["resulted"]},{"Key":"point resulted","Fragments":["in"]},{"Key":"resulted in","Fragments":["no","submission"]},{"Key":"in no","Fragments":["values"]},{"Key":"values being","Fragments":["supplied."]},{"Key":"being supplied.","Fragments":["The"]},{"Key":"supplied. The","Fragments":["sum"]},{"Key":"The sum","Fragments":["of"]},{"Key":"of no","Fragments":["multiples"]},{"Key":"no multiples","Fragments":["is"]},{"Key":"multiples is","Fragments":["0."]},{"Key":" Checking","Fragments":["the"]},{"Key":"Checking the","Fragments":["2nd"]},{"Key":"the 2nd","Fragments":["parameter","revision"]},{"Key":"2nd parameter","Fragments":["is"]},{"Key":"parameter is","Fragments":["more"]},{"Key":"more reasonable:","Fragments":["the"]},{"Key":"reasonable: the","Fragments":["process"]},{"Key":"the process","Fragments":["will"]},{"Key":"process will","Fragments":["crash"]},{"Key":"will crash","Fragments":["either"]},{"Key":"crash either","Fragments":["way,"]},{"Key":"either way,","Fragments":["and"]},{"Key":"way, and","Fragments":["you're"]},{"Key":"you're supplying","Fragments":["a"]},{"Key":"supplying a","Fragments":["more"]},{"Key":"more useful","Fragments":["error"]},{"Key":"useful error","Fragments":["message"]},{"Key":"message when","Fragments":["it"]},{"Key":"when it","Fragments":["does.","receives","feeds"]},{"Key":"it does.","Fragments":["However,"]},{"Key":"does. However,","Fragments":["such"]},{"Key":"However, such","Fragments":["defensive"]},{"Key":"such defensive","Fragments":["programming"]},{"Key":"defensive programming","Fragments":["is","it's"]},{"Key":"programming is","Fragments":["relatively"]},{"Key":"is relatively","Fragments":["uncommon"]},{"Key":"relatively uncommon","Fragments":["in"]},{"Key":"uncommon in","Fragments":["Erlang."]},{"Key":"* returned","Fragments":["true"]},{"Key":"returned true","Fragments":["or"]},{"Key":"true or","Fragments":["false"]},{"Key":"or false","Fragments":["based"]},{"Key":"false based","Fragments":["on"]},{"Key":"test suite,","Fragments":["but"]},{"Key":"suite, but","Fragments":["would"]},{"Key":"but would","Fragments":["prefer"]},{"Key":"would prefer","Fragments":["{ok,"]},{"Key":"prefer {ok,","Fragments":["true|false}"]},{"Key":"{ok, true|false}","Fragments":["|"]},{"Key":"true|false} |","Fragments":["{error,"]},{"Key":"| {error,","Fragments":["ErrorMsg}","ErrorMsg}`."]},{"Key":"{error, ErrorMsg}","Fragments":["to"]},{"Key":"ErrorMsg} to","Fragments":["provide"]},{"Key":"to provide","Fragments":["a"]},{"Key":"provide a","Fragments":["means"]},{"Key":"a means","Fragments":["to"]},{"Key":"means to","Fragments":["communicate"]},{"Key":"to communicate","Fragments":["an"]},{"Key":"communicate an","Fragments":["error"]},{"Key":"error such","Fragments":["as"]},{"Key":"invalid type,","Fragments":["ie"]},{"Key":"type, ie","Fragments":["\"100"]},{"Key":"ie \"100","Fragments":["BC\"."]},{"Key":"* used","Fragments":["when"]},{"Key":"used when","Fragments":["clauses"]},{"Key":"when clauses","Fragments":["rather"]},{"Key":"clauses rather","Fragments":["than"]},{"Key":"than case","Fragments":["to"]},{"Key":"case to","Fragments":["highlight"]},{"Key":"to highlight","Fragments":["the"]},{"Key":"highlight the","Fragments":["variants."]},{"Key":"* coded","Fragments":["from"]},{"Key":"coded from","Fragments":["most"]},{"Key":"specific to","Fragments":["least"]},{"Key":"least specific","Fragments":["pattern"]},{"Key":"specific pattern","Fragments":["matching"]},{"Key":"matching because","Fragments":["well,"]},{"Key":"because well,","Fragments":["that's"]},{"Key":"well, that's","Fragments":["how"]},{"Key":"how it","Fragments":["works.","worked"]},{"Key":"* exported","Fragments":["and"]},{"Key":"exported and","Fragments":["implemented"]},{"Key":"and implemented","Fragments":["minimum"]},{"Key":"implemented minimum","Fragments":["code"]},{"Key":"minimum code","Fragments":["to"]},{"Key":"with all","Fragments":["your"]},{"Key":"all your","Fragments":["commentary.","specs"]},{"Key":"your commentary.","Fragments":["Maybe"]},{"Key":"commentary. Maybe","Fragments":["the"]},{"Key":"Maybe the","Fragments":["Erlang"]},{"Key":"Erlang track","Fragments":["maintainers"]},{"Key":"track maintainers","Fragments":["would"]},{"Key":"maintainers would","Fragments":["consider"]},{"Key":"would consider","Fragments":["modifying"]},{"Key":"consider modifying","Fragments":["the"]},{"Key":"modifying the","Fragments":["tests"]},{"Key":"tests to","Fragments":["expect"]},{"Key":"to expect","Fragments":["results"]},{"Key":"expect results","Fragments":["of"]},{"Key":"results of","Fragments":["the"]},{"Key":"the form,","Fragments":["`{ok,"]},{"Key":"form, `{ok,","Fragments":["true"]},{"Key":"`{ok, true","Fragments":["|"]},{"Key":"true |","Fragments":["false}"]},{"Key":"| false}","Fragments":["|"]},{"Key":"false} |","Fragments":["{error,"]},{"Key":"Added a","Fragments":["type","guard"]},{"Key":"type signature","Fragments":["on","is"]},{"Key":"signature on","Fragments":["@reina"]},{"Key":"on @reina","Fragments":["'s"]},{"Key":"@reina 's","Fragments":["advice."]},{"Key":"Consider folding","Fragments":["the"]},{"Key":"folding the","Fragments":["functionality"]},{"Key":"the functionality","Fragments":["of"]},{"Key":"functionality of","Fragments":["`century`"]},{"Key":"of `century`","Fragments":["into"]},{"Key":"`century` into","Fragments":["clauses"]},{"Key":"into clauses","Fragments":["of"]},{"Key":"clauses of","Fragments":["`leap_year`."]},{"Key":"Don't know","Fragments":["why"]},{"Key":"why the","Fragments":["indent","exception"]},{"Key":"the indent","Fragments":["dosen't"]},{"Key":"indent dosen't","Fragments":["apply"]},{"Key":"dosen't apply","Fragments":["to"]},{"Key":"apply to","Fragments":["line"]},{"Key":"to line","Fragments":["10","5"]},{"Key":"line 10","Fragments":["and"]},{"Key":"10 and","Fragments":["11."]},{"Key":"and 11.","Fragments":["It"]},{"Key":"11. It","Fragments":["works"]},{"Key":"More Erlang","Fragments":["style"]},{"Key":"Erlang style","Fragments":["coding."]},{"Key":"on invalid-chars","Fragments":["instead"]},{"Key":"invalid-chars instead","Fragments":["of"]},{"Key":"of silently","Fragments":["ignoring"]},{"Key":"silently ignoring","Fragments":["them."]},{"Key":"ignoring them.","Fragments":["Consider"]},{"Key":"them. Consider","Fragments":["`to_rna(\"TAU\")`"]},{"Key":"Consider `to_rna(\"TAU\")`","Fragments":["which"]},{"Key":"`to_rna(\"TAU\")` which","Fragments":["would"]},{"Key":"would return","Fragments":["`\"AUU\"`","a","either"]},{"Key":"return `\"AUU\"`","Fragments":["with"]},{"Key":"`\"AUU\"` with","Fragments":["your"]},{"Key":"your implementation.","Fragments":["This"]},{"Key":"implementation. This","Fragments":["means"]},{"Key":"means invalid","Fragments":["input"]},{"Key":"input produces","Fragments":["valid"]},{"Key":"produces valid","Fragments":["output."]},{"Key":"valid output.","Fragments":["This"]},{"Key":"output. This","Fragments":["is"]},{"Key":"The commented","Fragments":["code"]},{"Key":"commented code","Fragments":["is"]},{"Key":"is first","Fragments":["solution."]},{"Key":"first solution.","Fragments":["But"]},{"Key":"solution. But","Fragments":["logically,"]},{"Key":"But logically,","Fragments":["you"]},{"Key":"logically, you","Fragments":["can"]},{"Key":"see we","Fragments":["can"]},{"Key":"just reuse","Fragments":["the"]},{"Key":"reuse the","Fragments":["keep"]},{"Key":"the keep","Fragments":["function."]},{"Key":"a translation","Fragments":["of"]},{"Key":"translation of","Fragments":["my","the"]},{"Key":"my Python","Fragments":["program."]},{"Key":"Python program.","Fragments":["The"]},{"Key":"program. The","Fragments":["`response_for_stripped`"]},{"Key":"The `response_for_stripped`","Fragments":["catch-all"]},{"Key":"`response_for_stripped` catch-all","Fragments":["seems"]},{"Key":"catch-all seems","Fragments":["unwieldy"]},{"Key":"seems unwieldy","Fragments":["for"]},{"Key":"unwieldy for","Fragments":["how"]},{"Key":"for how","Fragments":["easy"]},{"Key":"how easy","Fragments":["the"]},{"Key":"easy the","Fragments":["rest"]},{"Key":"rest this","Fragments":["is"]},{"Key":"Ok, this","Fragments":["cleans"]},{"Key":"this cleans","Fragments":["it"]},{"Key":"cleans it","Fragments":["up"]},{"Key":"bit. Guards","Fragments":["make"]},{"Key":"Guards make","Fragments":["sure"]},{"Key":"sure it","Fragments":["fails","returns"]},{"Key":"it fails","Fragments":["when","if"]},{"Key":"fails when","Fragments":["it","the"]},{"Key":"it receives","Fragments":["nonsense."]},{"Key":"This shores","Fragments":["up"]},{"Key":"shores up","Fragments":["the"]},{"Key":"guards on","Fragments":["each","`to_rna/1`."]},{"Key":"each function","Fragments":["clause"]},{"Key":"clause and","Fragments":["adds","\"when\"","then"]},{"Key":"and adds","Fragments":["a"]},{"Key":"adds a","Fragments":["dialyzer"]},{"Key":"a dialyzer","Fragments":["spec."]},{"Key":" @margret","Fragments":["I"]},{"Key":"@margret I","Fragments":["was"]},{"Key":"was about","Fragments":["the"]},{"Key":"the click","Fragments":["the"]},{"Key":"click the","Fragments":["\"Looks"]},{"Key":"the \"Looks","Fragments":["great!\""]},{"Key":"\"Looks great!\"","Fragments":["but"]},{"Key":"great!\" but","Fragments":["I"]},{"Key":"don't understand","Fragments":["why"]},{"Key":"understand why","Fragments":["you","peanuts"]},{"Key":"why you","Fragments":["guard","didn't","used","exported"]},{"Key":"you guard","Fragments":["against"]},{"Key":"guard against","Fragments":["`Year`","negative"]},{"Key":"against `Year`","Fragments":["being"]},{"Key":"`Year` being","Fragments":["greater"]},{"Key":"being greater","Fragments":["than"]},{"Key":"greater than","Fragments":["1?"]},{"Key":"I'm struggling","Fragments":["with"]},{"Key":"struggling with","Fragments":["this"]},{"Key":"this myself","Fragments":["so"]},{"Key":"myself so","Fragments":["I"]},{"Key":"hope you","Fragments":["don't","can"]},{"Key":"mind me","Fragments":["asking."]},{"Key":"me asking.","Fragments":["What"]},{"Key":"asking. What","Fragments":["made"]},{"Key":"What made","Fragments":["you"]},{"Key":"made you","Fragments":["choose","choose"]},{"Key":"you choose","Fragments":["adding","`orddict`","`lists:foldl()`?"]},{"Key":"choose adding","Fragments":["guards"]},{"Key":"clause versus","Fragments":["adding"]},{"Key":"versus adding","Fragments":["one"]},{"Key":"adding one","Fragments":["extra"]},{"Key":"one extra","Fragments":["clause"]},{"Key":"extra clause","Fragments":["that"]},{"Key":"that checks","Fragments":["for","type"]},{"Key":"checks for","Fragments":["`not"]},{"Key":"for `not","Fragments":["is_integer(Year),"]},{"Key":"`not is_integer(Year),","Fragments":["Year"]},{"Key":"is_integer(Year), Year","Fragments":["\u003c"]},{"Key":"Year \u003c","Fragments":["1`?"]},{"Key":" Doing","Fragments":["something","a"]},{"Key":"Doing something","Fragments":["with"]},{"Key":"something with","Fragments":["`Head`"]},{"Key":"with `Head`","Fragments":["and"]},{"Key":"then recursively","Fragments":["applying"]},{"Key":"recursively applying","Fragments":["the"]},{"Key":"applying the","Fragments":["same","function."]},{"Key":"same thing","Fragments":["to"]},{"Key":"tail (`Rest`)","Fragments":["smells"]},{"Key":"(`Rest`) smells","Fragments":["like"]},{"Key":"smells like","Fragments":["you","this"]},{"Key":"use [`lists:map/2`](http://www.erlang.org/doc/man/lists.html#map-2)","Fragments":["for"]},{"Key":"[`lists:map/2`](http://www.erlang.org/doc/man/lists.html#map-2) for","Fragments":["that"]},{"Key":" Oh,","Fragments":["I've","a"]},{"Key":"Oh, I've","Fragments":["forgot"]},{"Key":"I've forgot","Fragments":["the"]},{"Key":"forgot the","Fragments":["remove"]},{"Key":"the remove","Fragments":["the"]},{"Key":"remove the","Fragments":["empty","macro"]},{"Key":"empty case","Fragments":["since","first."]},{"Key":"since we","Fragments":["don't","don't"]},{"Key":"we don't","Fragments":["need","have","use","want","need"]},{"Key":"need it","Fragments":["anymore","here."]},{"Key":"it anymore","Fragments":["with"]},{"Key":"anymore with","Fragments":["list"]},{"Key":"Looks really","Fragments":["nice."]},{"Key":"really nice.","Fragments":["Only"]},{"Key":"nice. Only","Fragments":["thing"]},{"Key":"Only thing","Fragments":["I"]},{"Key":"would change","Fragments":["is"]},{"Key":"change is","Fragments":["rename"]},{"Key":"is rename","Fragments":["`X`"]},{"Key":"rename `X`","Fragments":["to"]},{"Key":"`X` to","Fragments":["`Xs`"]},{"Key":"to `Xs`","Fragments":["in"]},{"Key":"`Xs` in","Fragments":["`discard()`."]},{"Key":"in `discard()`.","Fragments":["Sorry,"]},{"Key":"`discard()`. Sorry,","Fragments":["I"]},{"Key":"Sorry, I","Fragments":["couldn't"]},{"Key":"I couldn't","Fragments":["resist,","resist","decide"]},{"Key":"couldn't resist,","Fragments":["this"]},{"Key":"resist, this","Fragments":["is"]},{"Key":"called nitpicking","Fragments":["for"]},{"Key":"nitpicking for","Fragments":["a"]},{"Key":"a reason,","Fragments":["right?"]},{"Key":" @halie","Fragments":["Add"]},{"Key":"@halie Add","Fragments":["guards"]},{"Key":"is readable","Fragments":["and"]},{"Key":"readable and","Fragments":["concise,"]},{"Key":"and concise,","Fragments":["and"]},{"Key":"concise, and","Fragments":["all"]},{"Key":"all by","Fragments":["utilizing"]},{"Key":"by utilizing","Fragments":["erlangs"]},{"Key":"utilizing erlangs","Fragments":["unique"]},{"Key":"erlangs unique","Fragments":["capabilities."]},{"Key":"It's hard","Fragments":["to"]},{"Key":"say \"list","Fragments":["comprehension\"is"]},{"Key":"\"list comprehension\"is","Fragments":["part"]},{"Key":"comprehension\"is part","Fragments":["of"]},{"Key":"of standard","Fragments":["library."]},{"Key":"standard library.","Fragments":["But"]},{"Key":"library. But","Fragments":["I"]},{"Key":"But I","Fragments":["think","decided","wouldn't","decided","read","decided","can"]},{"Key":"to let","Fragments":["us","readers"]},{"Key":"let us","Fragments":["to"]},{"Key":"us to","Fragments":["practice"]},{"Key":"to practice","Fragments":["the"]},{"Key":"practice the","Fragments":["recursion,"]},{"Key":"the recursion,","Fragments":["and"]},{"Key":"recursion, and","Fragments":["prefer"]},{"Key":"and prefer","Fragments":["the"]},{"Key":" `","Fragments":["$a"]},{"Key":"` $a","Fragments":["+"]},{"Key":"$a +","Fragments":["($z"]},{"Key":"+ ($z","Fragments":["-"]},{"Key":"($z -","Fragments":["Char);`"]},{"Key":"- Char);`","Fragments":[":+1:"]},{"Key":"Char);` :+1:","Fragments":["I"]},{"Key":":+1: I","Fragments":["had"]},{"Key":"had been","Fragments":["trying"]},{"Key":"wrap my","Fragments":["head","end"]},{"Key":"my head","Fragments":["around","around","when"]},{"Key":"head around","Fragments":["doing","the"]},{"Key":"around doing","Fragments":["the"]},{"Key":" @cody,","Fragments":["while"]},{"Key":"@cody, while","Fragments":["revisiting"]},{"Key":"while revisiting","Fragments":["my"]},{"Key":"revisiting my","Fragments":["code"]},{"Key":"code today,","Fragments":["I"]},{"Key":"today, I","Fragments":["identified"]},{"Key":"I identified","Fragments":["some","a"]},{"Key":"identified some","Fragments":["of"]},{"Key":"same smells.","Fragments":["I"]},{"Key":"smells. I","Fragments":["sometimes"]},{"Key":"I sometimes","Fragments":["tend"]},{"Key":"sometimes tend","Fragments":["to"]},{"Key":"to overthink","Fragments":["things."]},{"Key":"overthink things.","Fragments":["This"]},{"Key":"things. This","Fragments":["version"]},{"Key":"This version","Fragments":["should","goes"]},{"Key":"version should","Fragments":["be"]},{"Key":"more sane.","Fragments":["Thank"]},{"Key":"sane. Thank","Fragments":["you"]},{"Key":"the feedback,","Fragments":["it's"]},{"Key":"feedback, it's","Fragments":["greatly"]},{"Key":"it's greatly","Fragments":["appreciated."]},{"Key":"a definite","Fragments":["improvement"]},{"Key":"definite improvement","Fragments":["over"]},{"Key":"over your","Fragments":["previous"]},{"Key":"your previous","Fragments":["version,"]},{"Key":"previous version,","Fragments":["my"]},{"Key":"version, my","Fragments":["overall"]},{"Key":"my overall","Fragments":["impression"]},{"Key":"overall impression","Fragments":["is"]},{"Key":"impression is","Fragments":["that"]},{"Key":"your functions","Fragments":["have"]},{"Key":"functions have","Fragments":["to"]},{"Key":"to much","Fragments":["responsibilities."]},{"Key":"much responsibilities.","Fragments":["I"]},{"Key":"responsibilities. I","Fragments":["would"]},{"Key":"would start","Fragments":["by"]},{"Key":"by pulling","Fragments":["out"]},{"Key":"pulling out","Fragments":["the"]},{"Key":"the grouping","Fragments":["of"]},{"Key":"grouping of","Fragments":["the"]},{"Key":"the encoded","Fragments":["text"]},{"Key":"encoded text","Fragments":["into","is"]},{"Key":"text into","Fragments":["a"]},{"Key":"and reversing","Fragments":["the"]},{"Key":"the dependency","Fragments":["of"]},{"Key":"dependency of","Fragments":["`decode/2`"]},{"Key":"of `decode/2`","Fragments":["on"]},{"Key":"`decode/2` on","Fragments":["`encode/3`."]},{"Key":"the feeling","Fragments":["that"]},{"Key":"feeling that","Fragments":["you"]},{"Key":"you where","Fragments":["having"]},{"Key":"where having","Fragments":["trouble"]},{"Key":"having trouble","Fragments":["deciding"]},{"Key":"trouble deciding","Fragments":["on"]},{"Key":"deciding on","Fragments":["what"]},{"Key":"on what","Fragments":["to"]},{"Key":"what to","Fragments":["return","do"]},{"Key":"return when","Fragments":["a"]},{"Key":"when a","Fragments":["char"]},{"Key":"char wasn't","Fragments":["an"]},{"Key":"wasn't an","Fragments":["alphanumeric"]},{"Key":"an alphanumeric","Fragments":["char"]},{"Key":"alphanumeric char","Fragments":["in"]},{"Key":"char in","Fragments":["`cipher/1`."]},{"Key":"in `cipher/1`.","Fragments":["Why?"]},{"Key":"`cipher/1`. Why?","Fragments":["Think"]},{"Key":"Why? Think","Fragments":["of"]},{"Key":"Think of","Fragments":["what"]},{"Key":"said in","Fragments":["the"]},{"Key":"it you're","Fragments":["breaking"]},{"Key":"you're breaking","Fragments":["the"]},{"Key":"breaking the","Fragments":["illusion"]},{"Key":"the illusion","Fragments":["of"]},{"Key":"illusion of","Fragments":["chars"]},{"Key":"chars on","Fragments":["line"]},{"Key":"of duplication","Fragments":["between"]},{"Key":"duplication between","Fragments":["encode"]},{"Key":"between encode","Fragments":["and"]},{"Key":"encode and","Fragments":["decode"]},{"Key":"and decode","Fragments":["which"]},{"Key":"decode which","Fragments":["i"]},{"Key":"which i","Fragments":["want"]},{"Key":"i want","Fragments":["to"]},{"Key":"to DRY","Fragments":["up."]},{"Key":"DRY up.","Fragments":["Thanks"]},{"Key":"up. Thanks","Fragments":["for"]},{"Key":"to consider","Fragments":["is"]},{"Key":"consider is","Fragments":["that"]},{"Key":"the fall-through","Fragments":["case"]},{"Key":"fall-through case","Fragments":["(lines"]},{"Key":"case (lines","Fragments":["10-11)"]},{"Key":"(lines 10-11)","Fragments":["is"]},{"Key":"10-11) is","Fragments":["actually"]},{"Key":"is actually","Fragments":["the","a","happening,","valid."]},{"Key":"actually the","Fragments":["most"]},{"Key":"common case","Fragments":["(75%)."]},{"Key":"case (75%).","Fragments":["That"]},{"Key":"(75%). That","Fragments":["could"]},{"Key":"That could","Fragments":["be"]},{"Key":"be an","Fragments":["argument","integer?"]},{"Key":"an argument","Fragments":["for"]},{"Key":"for re-ordering","Fragments":["to"]},{"Key":"re-ordering to","Fragments":["put"]},{"Key":"put it","Fragments":["as","right"]},{"Key":" Does","Fragments":["the"]},{"Key":"Does the","Fragments":["list"]},{"Key":"comprehension have","Fragments":["a"]},{"Key":"with tail","Fragments":["recursion?","recursion.","recursion"]},{"Key":"recursion? Or","Fragments":["would"]},{"Key":"Or would","Fragments":["this"]},{"Key":"would this","Fragments":["safely"]},{"Key":"this safely","Fragments":["never"]},{"Key":"safely never","Fragments":["blow"]},{"Key":"never blow","Fragments":["the"]},{"Key":"blow the","Fragments":["stack?","stack,"]},{"Key":"the stack?","Fragments":["I'm"]},{"Key":"stack? I'm","Fragments":["just"]},{"Key":"just not","Fragments":["sure"]},{"Key":"they behave","Fragments":["in","though!"]},{"Key":"behave in","Fragments":["this"]},{"Key":"Using list","Fragments":["comprehension"]},{"Key":"comprehension for","Fragments":["the","this."]},{"Key":"Why have","Fragments":["you"]},{"Key":"you the","Fragments":["single"]},{"Key":"single quotes","Fragments":["in"]},{"Key":"quotes in","Fragments":["`-module('accumulate')`?"]},{"Key":"in `-module('accumulate')`?","Fragments":["`accumulate`"]},{"Key":"`-module('accumulate')`? `accumulate`","Fragments":["is"]},{"Key":"`accumulate` is","Fragments":["already"]},{"Key":"is already","Fragments":["a","an"]},{"Key":"already a","Fragments":["symbol"]},{"Key":"a symbol","Fragments":["since"]},{"Key":"symbol since","Fragments":["it"]},{"Key":"it starts","Fragments":["with"]},{"Key":"starts with","Fragments":["a"]},{"Key":"lowercase letter,","Fragments":["so"]},{"Key":"letter, so","Fragments":["there's"]},{"Key":" @stacey,","Fragments":["I'm"]},{"Key":"@stacey, I'm","Fragments":["new"]},{"Key":"I'm new","Fragments":["to","to"]},{"Key":"to Erlang,","Fragments":["and","I'm","but","but"]},{"Key":"Erlang, and","Fragments":["don't"]},{"Key":"and don't","Fragments":["even","feel"]},{"Key":"don't even","Fragments":["know"]},{"Key":"even know","Fragments":["if"]},{"Key":"know if","Fragments":["I'll","that"]},{"Key":"if I'll","Fragments":["use"]},{"Key":"I'll use","Fragments":["it"]},{"Key":"in future,","Fragments":["thnx"]},{"Key":"future, thnx","Fragments":["for"]},{"Key":"thnx for","Fragments":["pointing"]},{"Key":"me my","Fragments":["mistake"]},{"Key":" maybe","Fragments":["add"]},{"Key":"maybe add","Fragments":["a"]},{"Key":"a \"-spec","Fragments":["to_rna....\""]},{"Key":"\"-spec to_rna....\"","Fragments":["would"]},{"Key":"to_rna....\" would","Fragments":["be"]},{"Key":"better, but","Fragments":["it's"]},{"Key":"it's good","Fragments":["at","that"]},{"Key":"good at","Fragments":["its"]},{"Key":"at its","Fragments":["consiceness.","internals."]},{"Key":"1. To","Fragments":["use"]},{"Key":"To use","Fragments":["tail","\"-type\"s"]},{"Key":"use tail","Fragments":["recursion","recursion","recursion"]},{"Key":"recursion to","Fragments":["get"]},{"Key":"get better","Fragments":["performance,","at"]},{"Key":"better performance,","Fragments":["so"]},{"Key":"performance, so","Fragments":["lists:reverse"]},{"Key":"so lists:reverse","Fragments":["needs"]},{"Key":"lists:reverse needs","Fragments":["to"]},{"Key":"2. To","Fragments":["use"]},{"Key":"use \"-type\"s","Fragments":["to"]},{"Key":"\"-type\"s to","Fragments":["enable"]},{"Key":"to enable","Fragments":["dialyzer"]},{"Key":"enable dialyzer","Fragments":["check"]},{"Key":" Any","Fragments":["reason","edoc"]},{"Key":"Any reason","Fragments":["why"]},{"Key":"reason why","Fragments":["you","is","you"]},{"Key":"didn't put","Fragments":["a"]},{"Key":"spec on","Fragments":["`to_rna/2`?","to_ran/2"]},{"Key":"not put","Fragments":["a"]},{"Key":"on to_ran/2","Fragments":["is"]},{"Key":"to_ran/2 is","Fragments":["I"]},{"Key":"even think","Fragments":["about"]},{"Key":"about it.","Fragments":["When"]},{"Key":"it. When","Fragments":["I"]},{"Key":"saw defndaines's","Fragments":["comment"]},{"Key":"defndaines's comment","Fragments":["on"]},{"Key":"this one,","Fragments":["I","having","especially"]},{"Key":"one, I","Fragments":["think"]},{"Key":"think to_rna/2","Fragments":["and"]},{"Key":"to_rna/2 and","Fragments":["to_rna/1"]},{"Key":"and to_rna/1","Fragments":["share"]},{"Key":"to_rna/1 share","Fragments":["the"]},{"Key":"share the","Fragments":["same"]},{"Key":"same spec.","Fragments":["So,"]},{"Key":"spec. So,","Fragments":["it"]},{"Key":"So, it","Fragments":["should"]},{"Key":"be safe","Fragments":["for"]},{"Key":"safe for","Fragments":["not"]},{"Key":"for not","Fragments":["putting"]},{"Key":"not putting","Fragments":["a"]},{"Key":"putting a","Fragments":["spec(But"]},{"Key":"a spec(But","Fragments":["what"]},{"Key":"spec(But what","Fragments":["is"]},{"Key":"convention of","Fragments":["Erlang","naming"]},{"Key":"Erlang coding","Fragments":["style,"]},{"Key":"coding style,","Fragments":["dose"]},{"Key":"style, dose","Fragments":["it"]},{"Key":"dose it","Fragments":["have"]},{"Key":"any rule","Fragments":["for"]},{"Key":"rule for","Fragments":["that)."]},{"Key":"for that).","Fragments":["But"]},{"Key":"that). But","Fragments":["the"]},{"Key":"But the","Fragments":["dna_string()"]},{"Key":"the dna_string()","Fragments":["is"]},{"Key":"dna_string() is","Fragments":["not"]},{"Key":"not correct","Fragments":["for"]},{"Key":"correct for","Fragments":["the"]},{"Key":"the coolest","Fragments":["way"]},{"Key":"coolest way","Fragments":["to"]},{"Key":"to do,","Fragments":["but"]},{"Key":"do, but","Fragments":["I"]},{"Key":"the fastest","Fragments":["(except"]},{"Key":"fastest (except","Fragments":["for"]},{"Key":"(except for","Fragments":["the"]},{"Key":"the total,","Fragments":["where"]},{"Key":"total, where","Fragments":["I"]},{"Key":"could just","Fragments":["write","recurse"]},{"Key":"just write","Fragments":["the"]},{"Key":"write the","Fragments":["total"]},{"Key":"the total","Fragments":["manually)","is"]},{"Key":" @wilhelm","Fragments":["Nice"]},{"Key":"@wilhelm Nice","Fragments":["implementation"]},{"Key":"Nice implementation","Fragments":["could","but","but"]},{"Key":"implementation could","Fragments":["use"]},{"Key":"guard and","Fragments":["perhaps"]},{"Key":"and perhaps","Fragments":["a","some"]},{"Key":"perhaps a","Fragments":["type"]},{"Key":" Out","Fragments":["of"]},{"Key":"Out of","Fragments":["interest:"]},{"Key":"of interest:","Fragments":["Why"]},{"Key":"interest: Why","Fragments":["did"]},{"Key":"you pick","Fragments":["2"]},{"Key":"pick 2","Fragments":["as"]},{"Key":"2 as","Fragments":["the"]},{"Key":"base for","Fragments":["the"]},{"Key":"the bit","Fragments":["operations?"]},{"Key":"bit operations?","Fragments":["I"]},{"Key":"operations? I","Fragments":["mean,"]},{"Key":"I mean,","Fragments":["it"]},{"Key":"mean, it","Fragments":["does"]},{"Key":"matter, you","Fragments":["could"]},{"Key":"have picked","Fragments":["any"]},{"Key":"picked any","Fragments":["power"]},{"Key":"any power","Fragments":["of"]},{"Key":"of 2,","Fragments":["but"]},{"Key":"2, but","Fragments":["for"]},{"Key":"most obvious","Fragments":["choice"]},{"Key":"obvious choice","Fragments":["would"]},{"Key":"been 1,","Fragments":["because"]},{"Key":"1, because","Fragments":["that"]},{"Key":" Nice,","Fragments":["I","but","but","but","I","but"]},{"Key":"Nice, I","Fragments":["had","especially"]},{"Key":"contract on","Fragments":["`lists:subtract/2`"]},{"Key":"on `lists:subtract/2`","Fragments":["to"]},{"Key":"`lists:subtract/2` to","Fragments":["see"]},{"Key":"see why","Fragments":["that","you"]},{"Key":"So this","Fragments":["one"]},{"Key":"more erlangesque,","Fragments":["I"]},{"Key":"erlangesque, I","Fragments":["guess,"]},{"Key":"I guess,","Fragments":["stole"]},{"Key":"guess, stole","Fragments":["it"]},{"Key":"stole it","Fragments":["from","too"]},{"Key":"it from","Fragments":["JeetKunDoug","first"]},{"Key":"of storing","Fragments":["Accu1,"]},{"Key":"storing Accu1,","Fragments":["you"]},{"Key":"Accu1, you","Fragments":["could"]},{"Key":"just recurse","Fragments":["inline"]},{"Key":"recurse inline","Fragments":["in"]},{"Key":"inline in","Fragments":["the"]},{"Key":"statement. That","Fragments":["seems","would"]},{"Key":"That seems","Fragments":["to"]},{"Key":"the style","Fragments":["I"]},{"Key":"style I","Fragments":["see"]},{"Key":"see most","Fragments":["often"]},{"Key":"often in","Fragments":["the"]},{"Key":"the books","Fragments":["and"]},{"Key":"books and","Fragments":["tutorials."]},{"Key":"Hi, @rubye","Fragments":[","]},{"Key":"@rubye ,","Fragments":["I"]},{"Key":", I","Fragments":["actually"]},{"Key":"actually thought","Fragments":["about"]},{"Key":"you suggested.","Fragments":["But"]},{"Key":"suggested. But","Fragments":["I"]},{"Key":"decided not","Fragments":["to"]},{"Key":"to go","Fragments":["that","refactor!","back"]},{"Key":"go that","Fragments":["way."]},{"Key":"that way.","Fragments":["Because"]},{"Key":"way. Because","Fragments":["I"]},{"Key":"Because I","Fragments":["don't"]},{"Key":"using \"L\"","Fragments":["and"]},{"Key":"\"L\" and","Fragments":["\"Ceil-1\""]},{"Key":"and \"Ceil-1\"","Fragments":["twice"]},{"Key":"\"Ceil-1\" twice","Fragments":["in"]},{"Key":"twice in","Fragments":["function"]},{"Key":"case is_multiples_of(L,","Fragments":["Ceil)"]},{"Key":"is_multiples_of(L, Ceil)","Fragments":["of"]},{"Key":" true","Fragments":["-\u003e","-\u003e"]},{"Key":"true -\u003e","Fragments":["sumOfMultiples(L,","true;"]},{"Key":"-\u003e sumOfMultiples(L,","Fragments":["Ceil-1,","Ceil-1,"]},{"Key":"sumOfMultiples(L, Ceil-1,","Fragments":["Accu","Accu"]},{"Key":"Ceil-1, Accu","Fragments":["+","+"]},{"Key":" false","Fragments":["-\u003e","-\u003e"]},{"Key":"false -\u003e","Fragments":["sumOfMultiples(L,","false;"]},{"Key":"the rules","Fragments":["for","for"]},{"Key":"rules for","Fragments":["determining","valid"]},{"Key":"for determining","Fragments":["if"]},{"Key":"determining if","Fragments":["a"]},{"Key":"always feel","Fragments":["confused."]},{"Key":"feel confused.","Fragments":["The","Yes,"]},{"Key":"confused. The","Fragments":["reason"]},{"Key":"why is","Fragments":["because"]},{"Key":"is because","Fragments":["those"]},{"Key":"because those","Fragments":["that"]},{"Key":"those that","Fragments":["write"]},{"Key":"that write","Fragments":["down"]},{"Key":"write down","Fragments":["those"]},{"Key":"down those","Fragments":["rules"]},{"Key":"those rules","Fragments":["seem"]},{"Key":"rules seem","Fragments":["to"]},{"Key":"a knack","Fragments":["for"]},{"Key":"knack for","Fragments":["making"]},{"Key":"for making","Fragments":["it","the"]},{"Key":"difficult then","Fragments":["it"]},{"Key":"it really","Fragments":["is.","matches","was","depends"]},{"Key":"really is.","Fragments":["When"]},{"Key":"is. When","Fragments":["I"]},{"Key":"read your","Fragments":["code,"]},{"Key":"confused. Yes,","Fragments":["I"]},{"Key":"understand it","Fragments":["today"]},{"Key":"it today","Fragments":["but"]},{"Key":"today but","Fragments":["will"]},{"Key":"but will","Fragments":["I"]},{"Key":"will I","Fragments":["still"]},{"Key":"still when","Fragments":["I"]},{"Key":"read it","Fragments":["half"]},{"Key":"it half","Fragments":["a"]},{"Key":"half a","Fragments":["year"]},{"Key":"year from","Fragments":["know"]},{"Key":"from know","Fragments":["and"]},{"Key":"know and","Fragments":["have"]},{"Key":"and have","Fragments":["forgotten","to"]},{"Key":"have forgotten","Fragments":["those"]},{"Key":"forgotten those","Fragments":["rules?"]},{"Key":"those rules?","Fragments":["What"]},{"Key":"rules? What","Fragments":["could"]},{"Key":"What could","Fragments":["you","you","be"]},{"Key":"do to","Fragments":["make","make"]},{"Key":"logic more","Fragments":["clear?"]},{"Key":"more clear?","Fragments":["What"]},{"Key":"clear? What","Fragments":["could"]},{"Key":"more Erlang-y?","Fragments":["It"]},{"Key":"Erlang-y? It","Fragments":["doesn't"]},{"Key":"a one","Fragments":["liner."]},{"Key":"a side","Fragments":["note,"]},{"Key":"side note,","Fragments":["I"]},{"Key":"note, I","Fragments":["really"]},{"Key":"dislike non","Fragments":["strict"]},{"Key":"non strict","Fragments":["equality"]},{"Key":"strict equality","Fragments":["operators."]},{"Key":"equality operators.","Fragments":["I"]},{"Key":"operators. I","Fragments":["guess"]},{"Key":"guess I","Fragments":["have"]},{"Key":"way too","Fragments":["much."]},{"Key":"Using function","Fragments":["clause"]},{"Key":"and \"when\"","Fragments":["guard"]},{"Key":"\"when\" guard","Fragments":["might"]},{"Key":"guard might","Fragments":["be"]},{"Key":"be better.","Fragments":["You"]},{"Key":"better. You","Fragments":["can"]},{"Key":"I cleaned","Fragments":["up"]},{"Key":"the [test","Fragments":["suite](http://pastebin.com/YkD5CSQJ)"]},{"Key":"[test suite](http://pastebin.com/YkD5CSQJ)","Fragments":["but"]},{"Key":"suite](http://pastebin.com/YkD5CSQJ) but","Fragments":["since"]},{"Key":"but since","Fragments":["I'm"]},{"Key":"since I'm","Fragments":["new","not"]},{"Key":"Erlang, I'm","Fragments":["not"]},{"Key":"I made","Fragments":["it","to"]},{"Key":" Great","Fragments":["commentary","point","job."]},{"Key":"Great commentary","Fragments":["and"]},{"Key":"commentary and","Fragments":["character"]},{"Key":"and character","Fragments":["ranges."]},{"Key":"Your `validate/1`","Fragments":["does"]},{"Key":"`validate/1` does","Fragments":["count"]},{"Key":"does count","Fragments":["the"]},{"Key":"count the","Fragments":["length"]},{"Key":"list up","Fragments":["to"]},{"Key":"to 2","Fragments":["times."]},{"Key":"2 times.","Fragments":["Can"]},{"Key":"times. Can","Fragments":["get","you"]},{"Key":"Can get","Fragments":["very"]},{"Key":"get very","Fragments":["nasty"]},{"Key":"very nasty","Fragments":["if"]},{"Key":"nasty if","Fragments":["someone"]},{"Key":"someone throws","Fragments":["a"]},{"Key":"throws a","Fragments":["string"]},{"Key":"string with","Fragments":["a"]},{"Key":"a billion","Fragments":["digits","of"]},{"Key":"billion digits","Fragments":["at"]},{"Key":"digits at","Fragments":["you"]},{"Key":"at you","Fragments":[";)"]},{"Key":"you abstracted","Fragments":["validate"]},{"Key":"abstracted validate","Fragments":["out."]},{"Key":"validate out.","Fragments":["I"]},{"Key":"I built","Fragments":["it"]},{"Key":"built it","Fragments":["into"]},{"Key":"into number","Fragments":["which"]},{"Key":"number which","Fragments":["wasn't"]},{"Key":"which wasn't","Fragments":["as"]},{"Key":"wasn't as","Fragments":["clean."]},{"Key":"as clean.","Fragments":["Good"]},{"Key":"clean. Good","Fragments":["use"]},{"Key":"Good use","Fragments":["of"]},{"Key":"of built","Fragments":["in"]},{"Key":"built in","Fragments":["fun.","libraries"]},{"Key":"in fun.","Fragments":["I"]},{"Key":"fun. I","Fragments":["keep"]},{"Key":"I keep","Fragments":["forgetting","the"]},{"Key":"keep forgetting","Fragments":["and"]},{"Key":"forgetting and","Fragments":["lean"]},{"Key":"and lean","Fragments":["on"]},{"Key":"lean on","Fragments":["tail","maps"]},{"Key":"on tail","Fragments":["recursion."]},{"Key":"recursion. I'll","Fragments":["have"]},{"Key":"actually a","Fragments":["`lists:sum`"]},{"Key":"a `lists:sum`","Fragments":["as"]},{"Key":"`lists:sum` as","Fragments":["I"]},{"Key":"the flow","Fragments":["of"]},{"Key":"flow of","Fragments":["this"]},{"Key":"like `string:strip()`","Fragments":["doesn't"]},{"Key":"`string:strip()` doesn't","Fragments":["strip"]},{"Key":"doesn't strip","Fragments":["the"]},{"Key":"strip the","Fragments":["whitespace"]},{"Key":"the whitespace","Fragments":["in","response"]},{"Key":"whitespace in","Fragments":["`responds_to_other_whitespace_test`"]},{"Key":"in `responds_to_other_whitespace_test`","Fragments":["(maybe"]},{"Key":"`responds_to_other_whitespace_test` (maybe","Fragments":["there"]},{"Key":"(maybe there","Fragments":["is"]},{"Key":"a unicode","Fragments":["flag?)."]},{"Key":" Besides","Fragments":["that,"]},{"Key":"Besides that,","Fragments":["I"]},{"Key":"be interested","Fragments":["to","to"]},{"Key":"interested to","Fragments":["see","hear"]},{"Key":"used `lists:reverse()`","Fragments":["instead"]},{"Key":"`lists:reverse()` instead","Fragments":["of"]},{"Key":"of `lists:last()`.","Fragments":["While"]},{"Key":"`lists:last()`. While","Fragments":["I"]},{"Key":"feeling it","Fragments":["might"]},{"Key":"be because","Fragments":["you"]},{"Key":"about `lists:last()`","Fragments":["I"]},{"Key":"`lists:last()` I","Fragments":["would"]},{"Key":"hear if","Fragments":["there"]},{"Key":"will say","Fragments":["that","for"]},{"Key":"the usage","Fragments":["of"]},{"Key":"usage of","Fragments":["`to_upper`"]},{"Key":"of `to_upper`","Fragments":["and"]},{"Key":"`to_upper` and","Fragments":["`to_lower`"]},{"Key":"and `to_lower`","Fragments":["to","are"]},{"Key":"`to_lower` to","Fragments":["check"]},{"Key":"all uppercase","Fragments":["and"]},{"Key":"uppercase and","Fragments":["for"]},{"Key":"and for","Fragments":["the"]},{"Key":"the all","Fragments":["numbers"]},{"Key":"all numbers","Fragments":["case"]},{"Key":"numbers case","Fragments":["is"]},{"Key":"case is","Fragments":["clear"]},{"Key":"clear while","Fragments":["handling"]},{"Key":"while handling","Fragments":["all"]},{"Key":"handling all","Fragments":["the"]},{"Key":"the strange","Fragments":["cases."]},{"Key":"strange cases.","Fragments":["Nice!"]},{"Key":" `lists:reverse`","Fragments":["is"]},{"Key":"`lists:reverse` is","Fragments":["mostly"]},{"Key":"is mostly","Fragments":["force"]},{"Key":"mostly force","Fragments":["of"]},{"Key":"force of","Fragments":["habit"]},{"Key":"of habit","Fragments":["from"]},{"Key":"habit from","Fragments":["using"]},{"Key":"from using","Fragments":["really"]},{"Key":"using really","Fragments":["old"]},{"Key":"really old","Fragments":["Erlang"]},{"Key":"old Erlang","Fragments":["versions"]},{"Key":"Erlang versions","Fragments":["where"]},{"Key":"versions where","Fragments":["you"]},{"Key":"where you","Fragments":["were","were","already"]},{"Key":"were encouraged","Fragments":["to"]},{"Key":"encouraged to","Fragments":["try"]},{"Key":"make everything","Fragments":["tail"]},{"Key":"everything tail","Fragments":["recursive."]},{"Key":"Nice, but","Fragments":["not","not","not","not"]},{"Key":"and therefore","Fragments":["not","not","not","not"]},{"Key":"therefore not","Fragments":["good","good","good","good"]},{"Key":"not good","Fragments":["for","for","for","for"]},{"Key":"good for","Fragments":["long","long","long","long"]},{"Key":"long lists.","Fragments":["Can","Can","Can","Can"]},{"Key":"lists. Can","Fragments":["you","you","you","you"]},{"Key":"Consider getting","Fragments":["into"]},{"Key":"of adding","Fragments":["type","them","them","to","specs"]},{"Key":"of constructing","Fragments":["the"]},{"Key":"constructing the","Fragments":["predicate"]},{"Key":"predicate although","Fragments":["I"]},{"Key":"wonder how","Fragments":["reusable","I"]},{"Key":"how reusable","Fragments":["that"]},{"Key":"reusable that","Fragments":["abstraction"]},{"Key":"that abstraction","Fragments":["will"]},{"Key":"abstraction will","Fragments":["be."]},{"Key":"sure that","Fragments":["omitting"]},{"Key":"that omitting","Fragments":["the"]},{"Key":"omitting the","Fragments":["`i`"]},{"Key":"the `i`","Fragments":["in"]},{"Key":"`i` in","Fragments":["`MultplesOf`"]},{"Key":"in `MultplesOf`","Fragments":["is"]},{"Key":"`MultplesOf` is","Fragments":["a"]},{"Key":"to include","Fragments":["0","0"]},{"Key":"include 0","Fragments":["in","in"]},{"Key":"0 in","Fragments":["your","your"]},{"Key":" @dwight","Fragments":["Consider"]},{"Key":"@dwight Consider","Fragments":["adding"]},{"Key":"typespec and","Fragments":["guards."]},{"Key":"guards. Also","Fragments":["what"]},{"Key":"Also what","Fragments":["is"]},{"Key":"maps here","Fragments":["instead"]},{"Key":"here instead","Fragments":["of"]},{"Key":"of say","Fragments":["a"]},{"Key":" Couple","Fragments":["things:"]},{"Key":"line 5,","Fragments":["you"]},{"Key":"5, you","Fragments":["can"]},{"Key":"just check","Fragments":["for"]},{"Key":"for `$2`","Fragments":["instead"]},{"Key":"`$2` instead","Fragments":["of"]},{"Key":"of `$9`.","Fragments":["Doesn't"]},{"Key":"`$9`. Doesn't","Fragments":["affect"]},{"Key":"Doesn't affect","Fragments":["the"]},{"Key":"affect the","Fragments":["tests,"]},{"Key":"but maps","Fragments":["to"]},{"Key":"the limites","Fragments":["of"]},{"Key":"limites of","Fragments":["a"]},{"Key":"a trinary","Fragments":["number."]},{"Key":" `convert/2`","Fragments":["is"]},{"Key":"`convert/2` is","Fragments":["not"]},{"Key":"not TCO","Fragments":["(Tail-call"]},{"Key":"TCO (Tail-call","Fragments":["optimized)."]},{"Key":"(Tail-call optimized).","Fragments":["For"]},{"Key":"optimized). For","Fragments":["these"]},{"Key":"For these","Fragments":["test"]},{"Key":"these test","Fragments":["cases,"]},{"Key":"test cases,","Fragments":["it"]},{"Key":"cases, it","Fragments":["won't"]},{"Key":"it won't","Fragments":["blow","because"]},{"Key":"won't blow","Fragments":["the"]},{"Key":"the stack,","Fragments":["but","this"]},{"Key":"stack, but","Fragments":["given"]},{"Key":"but given","Fragments":["a"]},{"Key":"given a","Fragments":["large"]},{"Key":"large enough","Fragments":["number,"]},{"Key":"enough number,","Fragments":["I"]},{"Key":"number, I","Fragments":["think"]},{"Key":"I'm aware","Fragments":["that"]},{"Key":"aware that","Fragments":["this"]},{"Key":"much unreadable,","Fragments":["I'm"]},{"Key":"unreadable, I'm","Fragments":["still"]},{"Key":"still quite","Fragments":["new"]},{"Key":"quite new","Fragments":["to"]},{"Key":"should have","Fragments":["used","separated","extracted","exported","made"]},{"Key":"used multiple","Fragments":["function"]},{"Key":"Good thinking","Fragments":["to"]},{"Key":"thinking to","Fragments":["define"]},{"Key":"define `discard`","Fragments":["in"]},{"Key":"`discard` in","Fragments":["terms"]},{"Key":" `Ls`","Fragments":["seems"]},{"Key":"`Ls` seems","Fragments":["to"]},{"Key":"to imply","Fragments":["list"]},{"Key":"imply list","Fragments":["of"]},{"Key":"lists. Looks","Fragments":["good."]},{"Key":"not move","Fragments":["the"]},{"Key":"move the","Fragments":["guard"]},{"Key":"guard expression","Fragments":["into"]},{"Key":"expression into","Fragments":["the"]},{"Key":"function body?","Fragments":["`leap_year`"]},{"Key":"body? `leap_year`","Fragments":["returns"]},{"Key":"`leap_year` returns","Fragments":["`true`"]},{"Key":"returns `true`","Fragments":["only"]},{"Key":"`true` only","Fragments":["when"]},{"Key":"only when","Fragments":["the"]},{"Key":"is `true`","Fragments":["so"]},{"Key":"`true` so","Fragments":["you"]},{"Key":"could implement","Fragments":["it"]},{"Key":" ((Year","Fragments":["rem"]},{"Key":"((Year rem","Fragments":["4)","100"]},{"Key":"rem 4)","Fragments":["=="]},{"Key":"4) ==","Fragments":["0)"]},{"Key":"== 0)","Fragments":["and"]},{"Key":"0) and","Fragments":["((Year"]},{"Key":"and ((Year","Fragments":["rem"]},{"Key":"100 =/=","Fragments":["0)","0"]},{"Key":"=/= 0)","Fragments":["or"]},{"Key":"0) or","Fragments":["(Year"]},{"Key":"or (Year","Fragments":["rem"]},{"Key":"(Year rem","Fragments":["400","100"]},{"Key":"Also, instead","Fragments":["of"]},{"Key":"of `and`","Fragments":["and"]},{"Key":"`and` and","Fragments":["`or`","`or`"]},{"Key":"and `or`","Fragments":["you","aren't"]},{"Key":"`or` you","Fragments":["probably"]},{"Key":"you probably","Fragments":["want","just"]},{"Key":"probably want","Fragments":["to"]},{"Key":"use `andalso`","Fragments":["and"]},{"Key":"`andalso` and","Fragments":["`orelse`:","`orelse`"]},{"Key":"- `and`","Fragments":["and"]},{"Key":"`or` aren't","Fragments":["short-circuit"]},{"Key":"aren't short-circuit","Fragments":["operators,"]},{"Key":"- `andalso`","Fragments":["and"]},{"Key":"and `orelse`","Fragments":["have"]},{"Key":"`orelse` have","Fragments":["a"]},{"Key":"nicer precedence;","Fragments":["by"]},{"Key":"precedence; by","Fragments":["using"]},{"Key":"using them","Fragments":["you"]},{"Key":"them you","Fragments":["could"]},{"Key":"all parenthesis","Fragments":["in"]},{"Key":"parenthesis in","Fragments":["the"]},{"Key":"Thanks! I","Fragments":["really","ended","learned"]},{"Key":"appreciate your","Fragments":["feedback."]},{"Key":"your feedback.","Fragments":["I"]},{"Key":"feedback. I","Fragments":["incorporated"]},{"Key":"I incorporated","Fragments":["your"]},{"Key":"incorporated your","Fragments":["comments"]},{"Key":"your comments","Fragments":["into"]},{"Key":"comments into","Fragments":["a"]},{"Key":"new submission","Fragments":["=)"]},{"Key":" Catch","Fragments":["all"]},{"Key":"Catch all","Fragments":["clause"]},{"Key":"all clause","Fragments":["should"]},{"Key":"clause should","Fragments":["at"]},{"Key":"should at","Fragments":["least"]},{"Key":"least check","Fragments":["the"]},{"Key":"the type.","Fragments":["You","Remember,"]},{"Key":"type. You","Fragments":["should"]},{"Key":"Consider avoiding","Fragments":["the"]},{"Key":"avoiding the","Fragments":["`++`"]},{"Key":"the `++`","Fragments":["operator","operator;"]},{"Key":"operator here,","Fragments":["per"]},{"Key":"here, per","Fragments":["http://www.erlang.org/doc/efficiency_guide/listHandling.html"]},{"Key":"Also, for","Fragments":["consistency,"]},{"Key":"for consistency,","Fragments":["it"]},{"Key":"consistency, it","Fragments":["might"]},{"Key":"return single","Fragments":["characters"]},{"Key":"characters in","Fragments":["the"]},{"Key":"same way","Fragments":["as"]},{"Key":"way as","Fragments":["you"]},{"Key":"you match","Fragments":["on"]},{"Key":"on them","Fragments":["(with"]},{"Key":"them (with","Fragments":["the"]},{"Key":"(with the","Fragments":["`$C`","latter"]},{"Key":"the `$C`","Fragments":["syntax)."]},{"Key":"wouldn't swallow","Fragments":["an"]},{"Key":"swallow an","Fragments":["illegal"]},{"Key":"an illegal","Fragments":["char"]},{"Key":"illegal char","Fragments":["but"]},{"Key":"char but","Fragments":["blow"]},{"Key":"but blow","Fragments":["up"]},{"Key":"blow up","Fragments":["instead,"]},{"Key":"up instead,","Fragments":["i.e."]},{"Key":"instead, i.e.","Fragments":["why"]},{"Key":"i.e. why","Fragments":["have"]},{"Key":"why have","Fragments":["that"]},{"Key":"have that","Fragments":["last"]},{"Key":"last catch-all","Fragments":["case"]},{"Key":"catch-all case","Fragments":["in"]},{"Key":"Nice and","Fragments":["clean."]},{"Key":"and clean.","Fragments":["I","Maybe"]},{"Key":"clean. I","Fragments":["wonder"]},{"Key":"if `is_question/1`","Fragments":["couldn't"]},{"Key":"`is_question/1` couldn't","Fragments":["be"]},{"Key":"be made","Fragments":["even","a"]},{"Key":"made even","Fragments":["simpler"]},{"Key":"even simpler","Fragments":["by"]},{"Key":"simpler by","Fragments":["using"]},{"Key":"using short-circuit","Fragments":["expressions."]},{"Key":"short-circuit expressions.","Fragments":["I"]},{"Key":"would necessarily","Fragments":["make"]},{"Key":"necessarily make","Fragments":["it"]},{"Key":"might make","Fragments":["it"]},{"Key":"more similar","Fragments":["in"]},{"Key":"similar in","Fragments":["style"]},{"Key":"in style","Fragments":["to"]},{"Key":"style to","Fragments":["`is_shout/1`.","lean"]},{"Key":"to `is_shout/1`.","Fragments":["(Also,"]},{"Key":"`is_shout/1`. (Also,","Fragments":["consider"]},{"Key":"(Also, consider","Fragments":["binding"]},{"Key":"consider binding","Fragments":["a"]},{"Key":"binding a","Fragments":["reused"]},{"Key":"a reused","Fragments":["expression"]},{"Key":"reused expression","Fragments":["in"]},{"Key":"in there","Fragments":["to"]},{"Key":"there to","Fragments":["a"]},{"Key":"decision logic","Fragments":["will"]},{"Key":"logic will","Fragments":["be"]},{"Key":"be easier","Fragments":["to","to"]},{"Key":"use `if`","Fragments":["instead"]},{"Key":"`if` instead","Fragments":["of","of"]},{"Key":"`case` in","Fragments":["`response_for`."]},{"Key":"like all","Fragments":["the"]},{"Key":"comprehension approaches","Fragments":["to"]},{"Key":"to these","Fragments":["problems,"]},{"Key":"these problems,","Fragments":["although"]},{"Key":"problems, although","Fragments":["I'm"]},{"Key":"although I'm","Fragments":["wondering"]},{"Key":"I'm wondering","Fragments":["how"]},{"Key":"wondering how","Fragments":["efficient"]},{"Key":"how efficient","Fragments":["this"]},{"Key":"efficient this","Fragments":["will","is,"]},{"Key":"this will","Fragments":["be","get"]},{"Key":"Erlang since","Fragments":["we"]},{"Key":"the laziness","Fragments":["of"]},{"Key":"laziness of","Fragments":["Haskell."]},{"Key":"Also, do","Fragments":["you"]},{"Key":"One other","Fragments":["trivial"]},{"Key":"other trivial","Fragments":["nitpick:"]},{"Key":"trivial nitpick:","Fragments":["`O`"]},{"Key":"nitpick: `O`","Fragments":["and"]},{"Key":"`O` and","Fragments":["`0`"]},{"Key":"and `0`","Fragments":["are"]},{"Key":"`0` are","Fragments":["pretty"]},{"Key":"are pretty","Fragments":["similar"]},{"Key":"pretty similar","Fragments":["and"]},{"Key":"similar and","Fragments":["caused"]},{"Key":"and caused","Fragments":["me"]},{"Key":"caused me","Fragments":["to"]},{"Key":"look twice","Fragments":["at"]},{"Key":"twice at","Fragments":["that"]},{"Key":"at that","Fragments":["comprehension."]},{"Key":"Maybe consider","Fragments":["using","list"]},{"Key":"using `lists:zip`","Fragments":["and"]},{"Key":"the differences","Fragments":["between"]},{"Key":"differences between","Fragments":["each"]},{"Key":"between each","Fragments":["strand,"]},{"Key":"each strand,","Fragments":["and"]},{"Key":"strand, and","Fragments":["then"]},{"Key":"then using","Fragments":["`length`","\u003cstrong\u003elists:reverse/1\u003c/strong\u003e"]},{"Key":"using `length`","Fragments":["on"]},{"Key":"`length` on","Fragments":["that"]},{"Key":"the Hamming","Fragments":["distance."]},{"Key":"good recursive","Fragments":["solution,"]},{"Key":"recursive solution,","Fragments":["but"]},{"Key":"think you'll","Fragments":["find","find"]},{"Key":"you'll find","Fragments":["that","the"]},{"Key":"that using","Fragments":["some","recursion","`foldl`"]},{"Key":"some simple","Fragments":["math"]},{"Key":"simple math","Fragments":["could"]},{"Key":"math could","Fragments":["simplify"]},{"Key":"could simplify","Fragments":["it"]},{"Key":"good deal.","Fragments":["Specifically,"]},{"Key":"deal. Specifically,","Fragments":["using"]},{"Key":"Specifically, using","Fragments":["the"]},{"Key":"the `math:pow`","Fragments":["function"]},{"Key":"`math:pow` function","Fragments":["would"]},{"Key":"help a","Fragments":["lot."]},{"Key":"For `to_rna_map/1`","Fragments":["you"]},{"Key":"`to_rna_map/1` you","Fragments":["should"]},{"Key":"should use","Fragments":["function","`byte()`","`lists:map/2`"]},{"Key":"can create","Fragments":["a"]},{"Key":"specific type","Fragments":["than","declaration."]},{"Key":"type than","Fragments":["string()"]},{"Key":"than string()","Fragments":["and"]},{"Key":"string() and","Fragments":["your"]},{"Key":"your input","Fragments":["and"]},{"Key":"and output.","Fragments":["How"]},{"Key":"output. How","Fragments":["about"]},{"Key":"about defining","Fragments":["your"]},{"Key":"defining your","Fragments":["own"]},{"Key":"your own","Fragments":["type?","simple","type?"]},{"Key":" Add","Fragments":["guards","some","a","typespec,"]},{"Key":" Because","Fragments":["we","he"]},{"Key":"Because we","Fragments":["need"]},{"Key":"to braincompile","Fragments":["that"]},{"Key":"braincompile that","Fragments":["code."]},{"Key":"that code.","Fragments":["`lists:map`"]},{"Key":"code. `lists:map`","Fragments":["would"]},{"Key":"`lists:map` would","Fragments":["be"]},{"Key":"be obvious","Fragments":["what","to"]},{"Key":"obvious what","Fragments":["happens,"]},{"Key":"what happens,","Fragments":["while"]},{"Key":"happens, while","Fragments":["literally"]},{"Key":"while literally","Fragments":["reimplementing"]},{"Key":"literally reimplementing","Fragments":["it"]},{"Key":"reimplementing it","Fragments":["specialised"]},{"Key":"it specialised","Fragments":["does"]},{"Key":"specialised does","Fragments":["increase"]},{"Key":"does increase","Fragments":["the"]},{"Key":"increase the","Fragments":["mental"]},{"Key":"the mental","Fragments":["noise"]},{"Key":"mental noise","Fragments":["for"]},{"Key":"noise for","Fragments":["reviewers."]},{"Key":"assume for","Fragments":["nearly"]},{"Key":"for nearly","Fragments":["every"]},{"Key":"nearly every","Fragments":["language"]},{"Key":"every language","Fragments":["that"]},{"Key":"language that","Fragments":["stdlib"]},{"Key":"that stdlib","Fragments":["gets"]},{"Key":"stdlib gets","Fragments":["special"]},{"Key":"gets special","Fragments":["treatement"]},{"Key":"special treatement","Fragments":["when"]},{"Key":"treatement when","Fragments":["optimisation"]},{"Key":"when optimisation","Fragments":["kicks"]},{"Key":"optimisation kicks","Fragments":["in,"]},{"Key":"kicks in,","Fragments":["for"]},{"Key":"in, for","Fragments":["erlang"]},{"Key":"erlang this","Fragments":["is"]},{"Key":"is especially","Fragments":["true"]},{"Key":"especially true","Fragments":["if"]},{"Key":"true if","Fragments":["you","`Year`"]},{"Key":"map and","Fragments":["lists:map","what"]},{"Key":"you prefer","Fragments":["`lists:map`"]},{"Key":"`lists:map` instead","Fragments":["of"]},{"Key":"of tail","Fragments":["recursion?"]},{"Key":"cases on","Fragments":["lines"]},{"Key":"on lines","Fragments":["8"]},{"Key":"lines 8","Fragments":["and"]},{"Key":"8 and","Fragments":["10"]},{"Key":"and 10","Fragments":["differ?"]},{"Key":"10 differ?","Fragments":["Do"]},{"Key":"differ? Do","Fragments":["you"]},{"Key":"you really","Fragments":["need","need","want"]},{"Key":"really need","Fragments":["them","is_function,","nits"]},{"Key":"need them","Fragments":["to"]},{"Key":"don't treat","Fragments":["them"]},{"Key":"treat them","Fragments":["as"]},{"Key":"them as","Fragments":["lists"]},{"Key":"as lists","Fragments":["but"]},{"Key":"lists but","Fragments":["rather"]},{"Key":"but rather","Fragments":["as"]},{"Key":"rather as","Fragments":["terms,"]},{"Key":"as terms,","Fragments":["you're"]},{"Key":"terms, you're","Fragments":["right,"]},{"Key":"you're right,","Fragments":["they"]},{"Key":"right, they","Fragments":["can"]},{"Key":"they can","Fragments":["be"]},{"Key":"over `Converted_Section`","Fragments":["in"]},{"Key":"`Converted_Section` in","Fragments":["every"]},{"Key":"in every","Fragments":["recursive"]},{"Key":"every recursive","Fragments":["step,"]},{"Key":"recursive step,","Fragments":["this"]},{"Key":"step, this","Fragments":["makes"]},{"Key":"this makes","Fragments":["your"]},{"Key":"your function","Fragments":["O(n²)"]},{"Key":"function O(n²)","Fragments":["(if"]},{"Key":"O(n²) (if","Fragments":["I"]},{"Key":"(if I","Fragments":["counted"]},{"Key":"I counted","Fragments":["right).","up"]},{"Key":"counted right).","Fragments":["Can"]},{"Key":"right). Can","Fragments":["you"]},{"Key":" Hint:","Fragments":["There"]},{"Key":"Hint: There","Fragments":["are"]},{"Key":"are some","Fragments":["pretty","off-the-cuff"]},{"Key":"some pretty","Fragments":["higher"]},{"Key":"pretty higher","Fragments":["order"]},{"Key":"in `lists`-module","Fragments":["can"]},{"Key":"`lists`-module can","Fragments":["help"]},{"Key":"can help","Fragments":["you."]},{"Key":" `square/1`","Fragments":["and"]},{"Key":"`square/1` and","Fragments":["`total/0`"]},{"Key":"and `total/0`","Fragments":["are"]},{"Key":"`total/0` are","Fragments":["the"]},{"Key":"the brain-dead","Fragments":["versions."]},{"Key":"brain-dead versions.","Fragments":["Decided"]},{"Key":"versions. Decided","Fragments":["to"]},{"Key":"Decided to","Fragments":["recurse"]},{"Key":"to recurse","Fragments":["my"]},{"Key":"recurse my","Fragments":["way"]},{"Key":"my way","Fragments":["to","back"]},{"Key":"function without","Fragments":["redundancy"]},{"Key":"without redundancy","Fragments":["with"]},{"Key":"redundancy with","Fragments":["`total_ground_up/0`,"]},{"Key":"with `total_ground_up/0`,","Fragments":["looks"]},{"Key":"`total_ground_up/0`, looks","Fragments":["faster:"]},{"Key":" 10\u003e","Fragments":["timer:tc(grains,"]},{"Key":"10\u003e timer:tc(grains,","Fragments":["total,"]},{"Key":"timer:tc(grains, total,","Fragments":["[])."]},{"Key":" 11\u003e","Fragments":["timer:tc(grains,"]},{"Key":"11\u003e timer:tc(grains,","Fragments":["total_ground_up,"]},{"Key":"timer:tc(grains, total_ground_up,","Fragments":["[])."]},{"Key":"The performance","Fragments":["of","of"]},{"Key":"of maps:get","Fragments":["is"]},{"Key":"maps:get is","Fragments":["O(1),"]},{"Key":"is O(1),","Fragments":["but"]},{"Key":"O(1), but","Fragments":["pattern"]},{"Key":"but pattern","Fragments":["matching"]},{"Key":"matching performance","Fragments":["is"]},{"Key":"performance is","Fragments":["more","slower"]},{"Key":"* Maps","Fragments":["are"]},{"Key":"Maps are","Fragments":["considered"]},{"Key":"considered to","Fragments":["be"]},{"Key":"be experimental","Fragments":["during"]},{"Key":"experimental during","Fragments":["Erlang/OTP"]},{"Key":"during Erlang/OTP","Fragments":["R17."]},{"Key":"* suggest:","Fragments":["use","use"]},{"Key":"suggest: use","Fragments":["pattern","tail"]},{"Key":"matching instead","Fragments":["of"]},{"Key":"* Converting","Fragments":["from"]},{"Key":"Converting from","Fragments":["char"]},{"Key":"from char","Fragments":["to","mapping"]},{"Key":"char to","Fragments":["string"]},{"Key":"to string","Fragments":["(list"]},{"Key":"string (list","Fragments":["of"]},{"Key":"(list of","Fragments":["char)"]},{"Key":"of char)","Fragments":["is"]},{"Key":"char) is","Fragments":["a"]},{"Key":"a leading","Fragments":["indicator"]},{"Key":"leading indicator","Fragments":["that"]},{"Key":"indicator that","Fragments":["the"]},{"Key":"be creating","Fragments":["and"]},{"Key":"creating and","Fragments":["joining"]},{"Key":"and joining","Fragments":["lists."]},{"Key":"joining lists.","Fragments":["The"]},{"Key":"lists. The","Fragments":["performance"]},{"Key":"list approach","Fragments":["degrades","is"]},{"Key":"approach degrades","Fragments":["dramatically"]},{"Key":"degrades dramatically","Fragments":["as"]},{"Key":"dramatically as","Fragments":["the","unicode:characters_to_list/2"]},{"Key":"the intermediate","Fragments":["lists"]},{"Key":"lists grow","Fragments":["as"]},{"Key":"grow as","Fragments":["the"]},{"Key":"the dna","Fragments":["strand"]},{"Key":"dna strand","Fragments":["length"]},{"Key":"strand length","Fragments":["to"]},{"Key":"length to","Fragments":["be"]},{"Key":"recursion instead","Fragments":["of"]},{"Key":"wasn't sure","Fragments":["how","if"]},{"Key":"to properly","Fragments":["separate"]},{"Key":"properly separate","Fragments":["the"]},{"Key":"the circular_buffer_server","Fragments":["and"]},{"Key":"circular_buffer_server and","Fragments":["the"]},{"Key":"rest so","Fragments":["it's"]},{"Key":"bit mashed","Fragments":["up"]},{"Key":"mashed up","Fragments":["together"]},{"Key":"up together","Fragments":["in"]},{"Key":"together in","Fragments":["one"]},{"Key":"one module/file","Fragments":["(given"]},{"Key":"module/file (given","Fragments":["exercism's"]},{"Key":"(given exercism's","Fragments":["single-file"]},{"Key":"exercism's single-file","Fragments":["submission)"]},{"Key":"No specs,","Fragments":["no"]},{"Key":"specs, no","Fragments":["guards?"]},{"Key":" Bad","Fragments":["practic"]},{"Key":"Bad practic","Fragments":["with"]},{"Key":"practic with","Fragments":["```-compile(export_all).```"]},{"Key":"Good catch.","Fragments":["I"]},{"Key":"catch. I","Fragments":["expected"]},{"Key":"I expected","Fragments":["to"]},{"Key":"expected to","Fragments":["remove"]},{"Key":"remove that","Fragments":["before","`1"]},{"Key":"that before","Fragments":["publishing.","submitting."]},{"Key":"first guard","Fragments":["on"]},{"Key":"on `is_uppercase_letter/1`","Fragments":["might"]},{"Key":"`is_uppercase_letter/1` might","Fragments":["be"]},{"Key":"more understandable","Fragments":["using"]},{"Key":"understandable using","Fragments":["`$A`"]},{"Key":"using `$A`","Fragments":["and"]},{"Key":"`$A` and","Fragments":["`$Z`."]},{"Key":"and `$Z`.","Fragments":["Nice"]},{"Key":"`$Z`. Nice","Fragments":["thought"]},{"Key":"Nice thought","Fragments":["including"]},{"Key":"thought including","Fragments":["the"]},{"Key":"including the","Fragments":["non-ascii"]},{"Key":"the non-ascii","Fragments":["ranges"]},{"Key":"non-ascii ranges","Fragments":["for"]},{"Key":"ranges for","Fragments":["the"]},{"Key":"second one.","Fragments":["Maybe"]},{"Key":"one. Maybe","Fragments":["comment"]},{"Key":"Maybe comment","Fragments":["what"]},{"Key":"comment what","Fragments":["the"]},{"Key":"the bounds","Fragments":["are?"]},{"Key":"is horribly","Fragments":["broken"]},{"Key":"horribly broken","Fragments":["..."]},{"Key":"broken ...","Fragments":["not"]},{"Key":"... not","Fragments":["sure"]},{"Key":"handle this.","Fragments":["Gonna"]},{"Key":"this. Gonna","Fragments":["look"]},{"Key":"Gonna look","Fragments":["at"]},{"Key":"at regexes","Fragments":["next."]},{"Key":" Cool","Fragments":["solution."]},{"Key":"Cool solution.","Fragments":["I"]},{"Key":"always forget","Fragments":["about","they"]},{"Key":"forget about","Fragments":["list"]},{"Key":"about list","Fragments":["comprehension...","comprehensions,"]},{"Key":"list comprehension...","Fragments":["not"]},{"Key":"comprehension... not","Fragments":["sure"]},{"Key":"this violates","Fragments":["in"]},{"Key":"violates in","Fragments":["spirit"]},{"Key":"in spirit","Fragments":["the","but"]},{"Key":"spirit the","Fragments":["stipulation"]},{"Key":"the stipulation","Fragments":["not"]},{"Key":"stipulation not","Fragments":["to"]},{"Key":"use library","Fragments":["functions"]},{"Key":"Only nit:","Fragments":["`Expr`"]},{"Key":"nit: `Expr`","Fragments":["sounds"]},{"Key":"`Expr` sounds","Fragments":["like"]},{"Key":"wrong name.","Fragments":["What"]},{"Key":"name. What","Fragments":["you"]},{"Key":"What you","Fragments":["pass"]},{"Key":"pass is","Fragments":["a"]},{"Key":"function not","Fragments":["an"]},{"Key":" Naming!","Fragments":["`Q`"]},{"Key":"Naming! `Q`","Fragments":["for"]},{"Key":"`Q` for","Fragments":["\"is_all_spaces\"?"]},{"Key":"you tried","Fragments":["what"]},{"Key":"tried what","Fragments":["it"]},{"Key":"what it","Fragments":["looks","will"]},{"Key":"like if","Fragments":["you"]},{"Key":"use an","Fragments":["`if`"]},{"Key":"an `if`","Fragments":["instead"]},{"Key":"a `case`?","Fragments":["I'd"]},{"Key":"`case`? I'd","Fragments":["suspect"]},{"Key":"I'd suspect","Fragments":["that"]},{"Key":"suspect that","Fragments":["the"]},{"Key":"code becomes","Fragments":["more"]},{"Key":" None","Fragments":["of"]},{"Key":"None of","Fragments":["your"]},{"Key":"your string","Fragments":["or"]},{"Key":"string or","Fragments":["lists","a"]},{"Key":"or lists","Fragments":["imports"]},{"Key":"lists imports","Fragments":["are"]},{"Key":"imports are","Fragments":["needed"]},{"Key":"are needed","Fragments":["any"]},{"Key":"needed any","Fragments":["more."]},{"Key":"Why import","Fragments":["`re:run/2`"]},{"Key":"import `re:run/2`","Fragments":["and"]},{"Key":"`re:run/2` and","Fragments":["then"]},{"Key":"then call","Fragments":["it"]},{"Key":"it qualified","Fragments":["via"]},{"Key":"qualified via","Fragments":["the"]},{"Key":"via the","Fragments":["module"]},{"Key":"the module","Fragments":["name"]},{"Key":"module name","Fragments":["after"]},{"Key":"name after","Fragments":["all?"]},{"Key":"after all?","Fragments":["I'd"]},{"Key":"all? I'd","Fragments":["lose"]},{"Key":"I'd lose","Fragments":["the"]},{"Key":"the import","Fragments":["altogether."]},{"Key":"the tip!","Fragments":["I'm"]},{"Key":"tip! I'm","Fragments":["very"]},{"Key":"I'm very","Fragments":["new"]},{"Key":"very new","Fragments":["to"]},{"Key":"to Erlang","Fragments":["and"]},{"Key":"Erlang and","Fragments":["didn't"]},{"Key":"and didn't","Fragments":["know"]},{"Key":"character literal","Fragments":["syntax."]},{"Key":" Overall,","Fragments":["I"]},{"Key":"Overall, I","Fragments":["think"]},{"Key":"an excellent","Fragments":["approach:"]},{"Key":"excellent approach:","Fragments":["very"]},{"Key":"approach: very","Fragments":["succinct"]},{"Key":"very succinct","Fragments":["and"]},{"Key":"and readable.","Fragments":["One"]},{"Key":"readable. One","Fragments":["small"]},{"Key":"One small","Fragments":["suggestion"]},{"Key":"small suggestion","Fragments":["would"]},{"Key":"suggestion would","Fragments":["be"]},{"Key":"to replace","Fragments":["the"]},{"Key":"replace the","Fragments":["character","guards"]},{"Key":"character codes","Fragments":["with"]},{"Key":"codes with","Fragments":["dollar"]},{"Key":"with dollar","Fragments":["sign"]},{"Key":"dollar sign","Fragments":["representation,"]},{"Key":"sign representation,","Fragments":["e.g."]},{"Key":"representation, e.g.","Fragments":["instead"]},{"Key":"e.g. instead","Fragments":["of"]},{"Key":"of `71","Fragments":["-\u003e"]},{"Key":"`71 -\u003e","Fragments":["67`"]},{"Key":"-\u003e 67`","Fragments":["use"]},{"Key":"67` use","Fragments":["`$G"]},{"Key":"use `$G","Fragments":["-\u003e"]},{"Key":"`$G -\u003e","Fragments":["$C`"]},{"Key":"$C` to","Fragments":["make"]},{"Key":"code easier","Fragments":["to"]},{"Key":" Still","Fragments":["cant"]},{"Key":"Still cant","Fragments":["match"]},{"Key":"cant match","Fragments":["one"]},{"Key":"match one","Fragments":["of","of"]},{"Key":"the unicode","Fragments":["statements"]},{"Key":"unicode statements","Fragments":[":("]},{"Key":"statements :(","Fragments":["But"]},{"Key":":( But","Fragments":["at"]},{"Key":"But at","Fragments":["least"]},{"Key":"least I","Fragments":["don't"]},{"Key":"to mess","Fragments":["with"]},{"Key":"mess with","Fragments":["the"]},{"Key":"main logic","Fragments":["and"]},{"Key":"and program","Fragments":["flow"]},{"Key":"program flow","Fragments":["to"]},{"Key":"flow to","Fragments":["add"]},{"Key":"add additional","Fragments":["patterns"]},{"Key":"additional patterns","Fragments":["and"]},{"Key":"patterns and","Fragments":["matches."]},{"Key":"and matches.","Fragments":["Which"]},{"Key":"matches. Which","Fragments":["is"]},{"Key":"Which is","Fragments":["good."]},{"Key":" Compared","Fragments":["to"]},{"Key":"Compared to","Fragments":["this,"]},{"Key":"to this,","Fragments":["mine"]},{"Key":"this, mine","Fragments":["is"]},{"Key":"mine is","Fragments":["positively"]},{"Key":"is positively","Fragments":["brute"]},{"Key":"positively brute","Fragments":["force."]},{"Key":"brute force.","Fragments":["Very"]},{"Key":"force. Very","Fragments":["elegant,"]},{"Key":"Very elegant,","Fragments":["very"]},{"Key":"elegant, very","Fragments":["nice."]},{"Key":"Using `io_lib:format/2`","Fragments":["for"]},{"Key":"`io_lib:format/2` for","Fragments":["`to_string/1`"]},{"Key":"for `to_string/1`","Fragments":["now,"]},{"Key":"`to_string/1` now,","Fragments":["but"]},{"Key":"now, but","Fragments":["I"]},{"Key":"am really","Fragments":["unhappy"]},{"Key":"really unhappy","Fragments":["with"]},{"Key":"unhappy with","Fragments":["`clock_from_minutes_since_midnight/1`…"]},{"Key":" Personally","Fragments":["I've","I"]},{"Key":"Personally I've","Fragments":["been"]},{"Key":"been using","Fragments":["https://github.com/inaka/erlang_guidelines"]},{"Key":"using https://github.com/inaka/erlang_guidelines","Fragments":["to"]},{"Key":"https://github.com/inaka/erlang_guidelines to","Fragments":["guide"]},{"Key":"to guide","Fragments":["my"]},{"Key":"guide my","Fragments":["Erlang"]},{"Key":"my Erlang","Fragments":["style,"]},{"Key":"Erlang style,","Fragments":["and"]},{"Key":"style, and","Fragments":["this"]},{"Key":"and this","Fragments":["solution","method"]},{"Key":"solution might","Fragments":["not"]},{"Key":"considered idiomatic.","Fragments":["In"]},{"Key":"idiomatic. In","Fragments":["particular:"]},{"Key":" Hah,","Fragments":["totally"]},{"Key":"Hah, totally","Fragments":["right."]},{"Key":"totally right.","Fragments":["I","But"]},{"Key":"very clear","Fragments":["translation"]},{"Key":"clear translation","Fragments":["of"]},{"Key":"problem statement.","Fragments":["I'll"]},{"Key":"I'll revise","Fragments":["that."]},{"Key":"You sort","Fragments":["of"]},{"Key":"of manually","Fragments":["wrote"]},{"Key":"manually wrote","Fragments":["down"]},{"Key":"wrote down","Fragments":["the"]},{"Key":"down the","Fragments":["lists:map"]},{"Key":"the lists:map","Fragments":["function"]},{"Key":"lists:map function","Fragments":["there..."]},{"Key":"you intermingle","Fragments":["how"]},{"Key":"intermingle how","Fragments":["to"]},{"Key":"to map","Fragments":["and","response"]},{"Key":"and what","Fragments":["the"]},{"Key":"Nice. I","Fragments":["like","just","didn't"]},{"Key":"your inlined","Fragments":["mapping"]},{"Key":"inlined mapping","Fragments":["function"]},{"Key":"mapping function","Fragments":["better","through","that"]},{"Key":"function better","Fragments":["than"]},{"Key":"solution which","Fragments":["made"]},{"Key":"which made","Fragments":["it"]},{"Key":"comment about","Fragments":["intentionally"]},{"Key":"about intentionally","Fragments":["failing"]},{"Key":"intentionally failing","Fragments":["other"]},{"Key":"failing other","Fragments":["matched"]},{"Key":"other matched","Fragments":["be"]},{"Key":"matched be","Fragments":["closer"]},{"Key":"be closer","Fragments":["to"]},{"Key":"closer to","Fragments":["the"]},{"Key":"the inlined","Fragments":["function"]},{"Key":"inlined function","Fragments":["though?"]},{"Key":"reasonable argument","Fragments":["for"]},{"Key":"for either","Fragments":["putting"]},{"Key":"either putting","Fragments":["the"]},{"Key":"putting the","Fragments":["comment","literal"]},{"Key":"comment at","Fragments":["the"]},{"Key":"the top,","Fragments":["or"]},{"Key":"top, or","Fragments":["on"]},{"Key":"or on","Fragments":["a"]},{"Key":"a line","Fragments":["immediately","3.5:"]},{"Key":"line immediately","Fragments":["before"]},{"Key":"immediately before","Fragments":["the"]},{"Key":"before the","Fragments":["`fun`'s"]},{"Key":"the `fun`'s","Fragments":["`end`."]},{"Key":"Is the","Fragments":["type"]},{"Key":"type string()","Fragments":["too"]},{"Key":"string() too","Fragments":["generic?"]},{"Key":" `string()`","Fragments":["is"]},{"Key":"`string()` is","Fragments":["defined","defined"]},{"Key":"is defined","Fragments":["as","as","well","like","as"]},{"Key":"defined as","Fragments":["`[char()]`","`0..16#10ffff`","`[char()]`."]},{"Key":"as `[char()]`","Fragments":["where"]},{"Key":"`[char()]` where","Fragments":["`char()`"]},{"Key":"where `char()`","Fragments":["is"]},{"Key":"`char()` is","Fragments":["defined"]},{"Key":"as `0..16#10ffff`","Fragments":["."]},{"Key":"Your right.","Fragments":["I"]},{"Key":"go back","Fragments":["and","as","as"]},{"Key":"and re-use","Fragments":["your"]},{"Key":"re-use your","Fragments":["specific"]},{"Key":"your specific","Fragments":["type"]},{"Key":"for `map_nucleotide`","Fragments":["is"]},{"Key":"`map_nucleotide` is","Fragments":["even"]},{"Key":"is even","Fragments":["completely"]},{"Key":"even completely","Fragments":["wrong."]},{"Key":"But thanks","Fragments":["to"]},{"Key":"thanks to","Fragments":["your","feedback"]},{"Key":"your links","Fragments":["I've"]},{"Key":"links I've","Fragments":["now"]},{"Key":"I've now","Fragments":["learned"]},{"Key":"now learned","Fragments":["how"]},{"Key":"learned how","Fragments":["to"]},{"Key":"Will fix","Fragments":["this"]},{"Key":"fix this","Fragments":["when","for"]},{"Key":"get around","Fragments":["to"]},{"Key":"around to","Fragments":["it."]},{"Key":"use maps","Fragments":["to"]},{"Key":"keep track","Fragments":["of"]},{"Key":"the different","Fragments":["orbital"]},{"Key":"different orbital","Fragments":["periods."]},{"Key":"orbital periods.","Fragments":["The"]},{"Key":"periods. The","Fragments":["shortcut"]},{"Key":"The shortcut","Fragments":["syntax"]},{"Key":"shortcut syntax","Fragments":["isn't"]},{"Key":"syntax isn't","Fragments":["available"]},{"Key":"isn't available","Fragments":["in"]},{"Key":"available in","Fragments":["the","their","the"]},{"Key":"Erlang I'm","Fragments":["running"]},{"Key":"I'm running","Fragments":["with."]},{"Key":"have separated","Fragments":["the"]},{"Key":"separated the","Fragments":["data"]},{"Key":"the data","Fragments":["and","and"]},{"Key":"data and","Fragments":["the","the"]},{"Key":"function as","Fragments":["you","a"]},{"Key":" @kallie","Fragments":["Looks"]},{"Key":"@kallie Looks","Fragments":["good!"]},{"Key":"Looks good!","Fragments":["I"]},{"Key":"good! I","Fragments":["can"]},{"Key":"few improvements","Fragments":["however."]},{"Key":"improvements however.","Fragments":["First"]},{"Key":"however. First","Fragments":["you"]},{"Key":"First you","Fragments":["can"]},{"Key":"can replace","Fragments":["the"]},{"Key":"guards by","Fragments":["just"]},{"Key":"just putting","Fragments":["the"]},{"Key":"the literal","Fragments":["directly"]},{"Key":"literal directly","Fragments":["in"]},{"Key":"directly in","Fragments":["the"]},{"Key":"the parameter.","Fragments":["Second"]},{"Key":"parameter. Second","Fragments":["you"]},{"Key":"Second you","Fragments":["can"]},{"Key":"can add","Fragments":["types","something","`"]},{"Key":"add types","Fragments":["and"]},{"Key":"typespec for","Fragments":["dialyzer.","dialyzer"]},{"Key":"Good catch,","Fragments":["thanks."]},{"Key":"catch, thanks.","Fragments":["Submitted"]},{"Key":"thanks. Submitted","Fragments":["a"]},{"Key":"Submitted a","Fragments":["revision."]},{"Key":"you realize","Fragments":["you"]},{"Key":"realize you","Fragments":["are"]},{"Key":"are sorting","Fragments":["`Word`"]},{"Key":"sorting `Word`","Fragments":["once"]},{"Key":"`Word` once","Fragments":["for"]},{"Key":"once for","Fragments":["each","each"]},{"Key":"each candidate?","Fragments":["Can"]},{"Key":"candidate? Can","Fragments":["you"]},{"Key":"Great point","Fragments":["about"]},{"Key":"point about","Fragments":["the"]},{"Key":"filter function!","Fragments":["That's"]},{"Key":"function! That's","Fragments":["funny,"]},{"Key":"That's funny,","Fragments":["functions"]},{"Key":"funny, functions","Fragments":["that"]},{"Key":"that directly","Fragments":["return"]},{"Key":"directly return","Fragments":["true"]},{"Key":"return true","Fragments":["and"]},{"Key":"true and","Fragments":["false"]},{"Key":"and false","Fragments":["are"]},{"Key":"false are","Fragments":["usually"]},{"Key":"are usually","Fragments":["a"]},{"Key":"usually a","Fragments":["smell"]},{"Key":"a smell","Fragments":["I"]},{"Key":"smell I","Fragments":["pick"]},{"Key":"I pick","Fragments":["up"]},{"Key":"pick up","Fragments":["on"]},{"Key":"on for","Fragments":["exactly"]},{"Key":"for exactly","Fragments":["that"]},{"Key":"exactly that","Fragments":["reason."]},{"Key":"I started","Fragments":["to"]},{"Key":"started to","Fragments":["write"]},{"Key":"write my","Fragments":["filter"]},{"Key":"my filter","Fragments":["function"]},{"Key":"filter function","Fragments":["the","as","that"]},{"Key":"same way,","Fragments":["then"]},{"Key":"way, then","Fragments":["I"]},{"Key":"then I","Fragments":["realized","think"]},{"Key":"I realized","Fragments":["this","the"]},{"Key":"realized this","Fragments":["would","as"]},{"Key":"the trick","Fragments":["without"]},{"Key":"trick without","Fragments":["the"]},{"Key":"without the","Fragments":["extra"]},{"Key":" fun(X)","Fragments":["-\u003e"]},{"Key":"fun(X) -\u003e","Fragments":["X"]},{"Key":"\u003e= $0","Fragments":["andalso"]},{"Key":"$0 andalso","Fragments":["X"]},{"Key":"andalso X","Fragments":["=\u003c"]},{"Key":"=\u003c $9","Fragments":["end"]},{"Key":"you structured","Fragments":["`sanitize_number`."]},{"Key":"structured `sanitize_number`.","Fragments":["Mine"]},{"Key":"`sanitize_number`. Mine","Fragments":["is"]},{"Key":"Mine is","Fragments":["much"]},{"Key":"much harder","Fragments":["to"]},{"Key":"harder to","Fragments":["read."]},{"Key":"would read","Fragments":["better"]},{"Key":"read better","Fragments":["if"]},{"Key":"you add","Fragments":["a","more"]},{"Key":"a newline","Fragments":["and"]},{"Key":"newline and","Fragments":["indent"]},{"Key":"and indent","Fragments":["after"]},{"Key":"indent after","Fragments":["the"]},{"Key":"after the","Fragments":["\"-\u003e\""]},{"Key":"the \"-\u003e\"","Fragments":["in"]},{"Key":"\"-\u003e\" in","Fragments":["to_rna"]},{"Key":"character matching,","Fragments":["although"]},{"Key":"matching, although","Fragments":["it's"]},{"Key":"although it's","Fragments":["a","less"]},{"Key":"little confusing","Fragments":["that"]},{"Key":"confusing that","Fragments":["to_rna/1"]},{"Key":"that to_rna/1","Fragments":["supports"]},{"Key":"to_rna/1 supports","Fragments":["both"]},{"Key":"supports both","Fragments":["single"]},{"Key":"both single","Fragments":["characters"]},{"Key":"characters and","Fragments":["strings"]},{"Key":"and strings","Fragments":["(but","and"]},{"Key":"strings (but","Fragments":["that"]},{"Key":"(but that","Fragments":["could"]},{"Key":"recursive implementation.","Fragments":["It's"]},{"Key":"implementation. It's","Fragments":["not"]},{"Key":"not necessary","Fragments":["to"]},{"Key":"necessary to","Fragments":["pass"]},{"Key":"pass around","Fragments":["an"]},{"Key":"around an","Fragments":["accumulator,"]},{"Key":"an accumulator,","Fragments":["or"]},{"Key":"accumulator, or","Fragments":["use"]},{"Key":"or use","Fragments":["the"]},{"Key":"`++` operator;","Fragments":["you"]},{"Key":"operator; you","Fragments":["are"]},{"Key":"guaranteed much","Fragments":["more"]},{"Key":"efficient list","Fragments":["construction"]},{"Key":"construction using","Fragments":["the"]},{"Key":"the `[H","Fragments":["|"]},{"Key":"`[H |","Fragments":["T]`"]},{"Key":"| T]`","Fragments":["consing"]},{"Key":"T]` consing","Fragments":["form."]},{"Key":"consing form.","Fragments":["(Per"]},{"Key":"form. (Per","Fragments":["http://www.erlang.org/doc/efficiency_guide/listHandling.html)"]},{"Key":"mapping yourself,","Fragments":["consider"]},{"Key":"yourself, consider","Fragments":["using"]},{"Key":"`lists:map` with","Fragments":["your"]},{"Key":"your translator","Fragments":["for"]},{"Key":"translator for","Fragments":["single"]},{"Key":"for single","Fragments":["characters."]},{"Key":"- `to_rna`","Fragments":["serves"]},{"Key":"`to_rna` serves","Fragments":["a"]},{"Key":"serves a","Fragments":["dual"]},{"Key":"a dual","Fragments":["purpose,"]},{"Key":"dual purpose,","Fragments":["either"]},{"Key":"purpose, either","Fragments":["for"]},{"Key":"either for","Fragments":["mapping"]},{"Key":"for mapping","Fragments":["a"]},{"Key":"mapping a","Fragments":["string","function"]},{"Key":"single integer.","Fragments":["They"]},{"Key":"integer. They","Fragments":["are"]},{"Key":"are semantically","Fragments":["very"]},{"Key":"semantically very","Fragments":["similar"]},{"Key":"very similar","Fragments":["but"]},{"Key":"I personally","Fragments":["would","find"]},{"Key":"personally would","Fragments":["still"]},{"Key":"would still","Fragments":["make"]},{"Key":"still make","Fragments":["it"]},{"Key":"it two","Fragments":["separte"]},{"Key":"two separte","Fragments":["functions"]},{"Key":"Use library","Fragments":["functions;"]},{"Key":"library functions;","Fragments":["just"]},{"Key":"functions; just","Fragments":["use"]},{"Key":"use lists:map","Fragments":["instead"]},{"Key":"lists:map instead","Fragments":["of"]},{"Key":"of rolling","Fragments":["your"]},{"Key":"rolling your","Fragments":["own"]},{"Key":"- The","Fragments":["single-character"]},{"Key":"The single-character","Fragments":["cases"]},{"Key":"single-character cases","Fragments":["of"]},{"Key":"of `to_rna`","Fragments":["would"]},{"Key":"`to_rna` would","Fragments":["be"]},{"Key":"if they","Fragments":["were","should"]},{"Key":"they were","Fragments":["one"]},{"Key":"were one","Fragments":["a"]},{"Key":"single line","Fragments":["per"]},{"Key":"line per","Fragments":["case,"]},{"Key":"per case,","Fragments":["i.e."]},{"Key":"case, i.e.","Fragments":["4"]},{"Key":"i.e. 4","Fragments":["lines"]},{"Key":"4 lines","Fragments":["for"]},{"Key":"lines for","Fragments":["the"]},{"Key":"the 4","Fragments":["cases"]},{"Key":"4 cases","Fragments":["rather"]},{"Key":"cases rather","Fragments":["than"]},{"Key":"an interesting","Fragments":["approach"]},{"Key":"interesting approach","Fragments":["to"]},{"Key":"problem, but","Fragments":["ultimately"]},{"Key":"ultimately I","Fragments":["wonder"]},{"Key":"bit obscure.","Fragments":["One"]},{"Key":"obscure. One","Fragments":["thing"]},{"Key":"to consider:","Fragments":["would"]},{"Key":"consider: would","Fragments":["`is_leap/3`"]},{"Key":"would `is_leap/3`","Fragments":["make"]},{"Key":"`is_leap/3` make","Fragments":["any"]},{"Key":"make any","Fragments":["sense"]},{"Key":"any sense","Fragments":["being"]},{"Key":"sense being","Fragments":["used"]},{"Key":"being used","Fragments":["by"]},{"Key":"used by","Fragments":["anything","[Dialyzer](http://learnyousomeerlang.com/dialyzer)"]},{"Key":"by anything","Fragments":["but"]},{"Key":"anything but","Fragments":["`leap_year/1`?"]},{"Key":"but `leap_year/1`?","Fragments":["Particularly,"]},{"Key":"`leap_year/1`? Particularly,","Fragments":["the"]},{"Key":"Particularly, the","Fragments":["arguments"]},{"Key":"the arguments","Fragments":["of","and"]},{"Key":"arguments of","Fragments":["`is_leap/3`"]},{"Key":"of `is_leap/3`","Fragments":["don't"]},{"Key":"`is_leap/3` don't","Fragments":["give"]},{"Key":"don't give","Fragments":["us"]},{"Key":"of information,","Fragments":["so"]},{"Key":"information, so","Fragments":["maybe"]},{"Key":"so maybe","Fragments":["a"]},{"Key":"maybe a","Fragments":["`case`","misuse"]},{"Key":"a `case`","Fragments":["is","statement."]},{"Key":"is just","Fragments":["as","that","a","as,"]},{"Key":"a helper","Fragments":["function","function","function","routine","to"]},{"Key":"helper function","Fragments":["here.","with","that","that"]},{"Key":"function here.","Fragments":["Is"]},{"Key":"here. Is","Fragments":["there"]},{"Key":"to decompose","Fragments":["this"]},{"Key":"decompose this","Fragments":["code"]},{"Key":"code differently","Fragments":["that"]},{"Key":"differently that","Fragments":["results"]},{"Key":"that results","Fragments":["in"]},{"Key":"in more","Fragments":["reusable"]},{"Key":"more reusable","Fragments":["pieces?"]},{"Key":" Doesn't","Fragments":["the"]},{"Key":"Doesn't the","Fragments":["O"]},{"Key":"the O","Fragments":["++"]},{"Key":"O ++","Fragments":["[F(H)]"]},{"Key":"++ [F(H)]","Fragments":["make"]},{"Key":"[F(H)] make","Fragments":["this"]},{"Key":"very expensive","Fragments":["O(N^2)"]},{"Key":"expensive O(N^2)","Fragments":["overall"]},{"Key":"O(N^2) overall","Fragments":["function?"]},{"Key":"At least","Fragments":["in"]},{"Key":"in Scheme,","Fragments":["one"]},{"Key":"Scheme, one","Fragments":["does"]},{"Key":"one does","Fragments":["a","only"]},{"Key":"does a","Fragments":["simple"]},{"Key":"simple cons","Fragments":["(i.e."]},{"Key":"cons (i.e.","Fragments":["[F(H)"]},{"Key":"(i.e. [F(H)","Fragments":["|"]},{"Key":"[F(H) |","Fragments":["O])"]},{"Key":"| O])","Fragments":["and"]},{"Key":"O]) and","Fragments":["then"]},{"Key":"then let","Fragments":["the"]},{"Key":"the outer","Fragments":["function"]},{"Key":"outer function","Fragments":["reverse"]},{"Key":"function reverse","Fragments":["the"]},{"Key":"Add some","Fragments":["comments?"]},{"Key":"some comments?","Fragments":["`BASE`"]},{"Key":"comments? `BASE`","Fragments":["is"]},{"Key":"`BASE` is","Fragments":["not"]},{"Key":"most expressive","Fragments":["name."]},{"Key":"solution at","Fragments":["all.","all."]},{"Key":"at all.","Fragments":["I","Can"]},{"Key":"all. I","Fragments":["think"]},{"Key":"I sould","Fragments":["extract"]},{"Key":"sould extract","Fragments":["the"]},{"Key":"extract the","Fragments":["calculation"]},{"Key":"the calculation","Fragments":["to"]},{"Key":"calculation to","Fragments":["some"]},{"Key":"some external","Fragments":["method"]},{"Key":"external method","Fragments":["and"]},{"Key":"method and","Fragments":["remove"]},{"Key":"and remove","Fragments":["the"]},{"Key":"the macro","Fragments":["at","of"]},{"Key":"macro at","Fragments":["all."]},{"Key":"all. Can","Fragments":["anyone"]},{"Key":"Can anyone","Fragments":["suggest"]},{"Key":"anyone suggest","Fragments":["some"]},{"Key":"suggest some","Fragments":["ways"]},{"Key":"some ways","Fragments":["to"]},{"Key":"clean, actually.","Fragments":["The"]},{"Key":"actually. The","Fragments":["main"]},{"Key":"main thing","Fragments":["I"]},{"Key":"like about","Fragments":["this"]},{"Key":"this family","Fragments":["of"]},{"Key":"family of","Fragments":["approaches"]},{"Key":"of approaches","Fragments":["to","in"]},{"Key":"this (awful,","Fragments":["underspecified"]},{"Key":"(awful, underspecified","Fragments":["problem)"]},{"Key":"underspecified problem)","Fragments":["is"]},{"Key":"problem) is","Fragments":["that"]},{"Key":"that you're","Fragments":["repeatedly"]},{"Key":"you're repeatedly","Fragments":["re-scanning"]},{"Key":"repeatedly re-scanning","Fragments":["the"]},{"Key":"re-scanning the","Fragments":["string."]},{"Key":"the string.","Fragments":["Why"]},{"Key":"string. Why","Fragments":["not"]},{"Key":"not walk","Fragments":["through"]},{"Key":"walk through","Fragments":["the"]},{"Key":"string, collecting","Fragments":["everything"]},{"Key":"collecting everything","Fragments":["you"]},{"Key":"everything you","Fragments":["need"]},{"Key":"need in","Fragments":["one"]},{"Key":"one pass?","Fragments":["I'll"]},{"Key":"pass? I'll","Fragments":["admit"]},{"Key":"admit that","Fragments":["it's","I"]},{"Key":"it's unlikely","Fragments":["to"]},{"Key":"unlikely to","Fragments":["yield","ever","make"]},{"Key":"to yield","Fragments":["as"]},{"Key":"yield as","Fragments":["terse"]},{"Key":"as terse","Fragments":["a"]},{"Key":"terse a","Fragments":["solution"]},{"Key":"solution as","Fragments":["this.","well."]},{"Key":" @javier","Fragments":["Very"]},{"Key":"@javier Very","Fragments":["nice"]},{"Key":"nice I","Fragments":["like"]},{"Key":"like it!","Fragments":["I"]},{"Key":"it! I","Fragments":["would"]},{"Key":"would avoid","Fragments":["the","reusing"]},{"Key":"the `_DnaChar=$G`","Fragments":["stuff"]},{"Key":"`_DnaChar=$G` stuff","Fragments":["because"]},{"Key":"stuff because","Fragments":["I"]},{"Key":"it's already","Fragments":["clear"]},{"Key":"already clear","Fragments":["enough"]},{"Key":"clear enough","Fragments":["from"]},{"Key":"enough from","Fragments":["your"]},{"Key":"code. But","Fragments":["I"]},{"Key":"wouldn't penalize","Fragments":["you"]},{"Key":"penalize you","Fragments":["for"]},{"Key":"for it.","Fragments":["One"]},{"Key":"it. One","Fragments":["more"]},{"Key":"One more","Fragments":["thing"]},{"Key":"more thing","Fragments":["however"]},{"Key":"thing however","Fragments":["I"]},{"Key":"however I","Fragments":["think","think"]},{"Key":"think `list(dna_char)`","Fragments":["is"]},{"Key":"`list(dna_char)` is","Fragments":["invalid."]},{"Key":"is invalid.","Fragments":["You"]},{"Key":"invalid. You","Fragments":["want"]},{"Key":"You want","Fragments":["`list(dna_char())`"]},{"Key":"want `list(dna_char())`","Fragments":["or"]},{"Key":"`list(dna_char())` or","Fragments":["`[dna_char()]`."]},{"Key":"* replaced","Fragments":["guards"]},{"Key":"replaced guards","Fragments":["with"]},{"Key":"guards with","Fragments":["literals"]},{"Key":"with literals","Fragments":["in"]},{"Key":"* added","Fragments":["types"]},{"Key":"added types","Fragments":["for"]},{"Key":"for dialyzer,","Fragments":["changing"]},{"Key":"dialyzer, changing","Fragments":["to"]},{"Key":"changing to","Fragments":["tail"]},{"Key":"propagate spec","Fragments":["through"]},{"Key":"spec through","Fragments":["from"]},{"Key":"through from","Fragments":["char"]},{"Key":"char mapping","Fragments":["function"]},{"Key":"function through","Fragments":["list"]},{"Key":"through list","Fragments":["processing"]},{"Key":"list processing","Fragments":["function."]},{"Key":"of `case`ing","Fragments":["over"]},{"Key":"`case`ing over","Fragments":["`[S]`"]},{"Key":"over `[S]`","Fragments":["you"]},{"Key":"`[S]` you","Fragments":["could"]},{"Key":"also use","Fragments":["only"]},{"Key":"use only","Fragments":["`S`"]},{"Key":"only `S`","Fragments":["and"]},{"Key":"`S` and","Fragments":["pattern"]},{"Key":"and pattern","Fragments":["match"]},{"Key":"on `$G`,","Fragments":["`$C`"]},{"Key":"`$G`, `$C`","Fragments":["and"]},{"Key":"`$C` and","Fragments":["so"]},{"Key":"Also Appending","Fragments":["to"]},{"Key":"Appending to","Fragments":["`Acc`","a"]},{"Key":"`Acc` on","Fragments":["every"]},{"Key":"every iteration","Fragments":["(you"]},{"Key":"iteration (you","Fragments":["have"]},{"Key":"(you have","Fragments":["n"]},{"Key":"have n","Fragments":["of"]},{"Key":"n of","Fragments":["them),"]},{"Key":"of them),","Fragments":["you"]},{"Key":"them), you","Fragments":["should"]},{"Key":"consider to","Fragments":["use"]},{"Key":"use `lists:map/2`.","Fragments":["You"]},{"Key":"`lists:map/2`. You","Fragments":["can"]},{"Key":"can enhance","Fragments":["your"]},{"Key":"enhance your","Fragments":["runtime"]},{"Key":"your runtime","Fragments":["from"]},{"Key":"runtime from","Fragments":["O(n²)"]},{"Key":"from O(n²)","Fragments":["to"]},{"Key":"O(n²) to","Fragments":["O(n)."]},{"Key":"TIL that","Fragments":["appending"]},{"Key":"that appending","Fragments":["to"]},{"Key":"appending to","Fragments":["a","accumulator","`ListSoFar`"]},{"Key":"a List","Fragments":["actually"]},{"Key":"List actually","Fragments":["is"]},{"Key":"actually is","Fragments":["causing"]},{"Key":"is causing","Fragments":["the"]},{"Key":"causing the","Fragments":["whole"]},{"Key":"whole thing","Fragments":["to"]},{"Key":"be O(n²),","Fragments":["as"]},{"Key":"O(n²), as","Fragments":["opposed"]},{"Key":"to prepending","Fragments":["and"]},{"Key":"prepending and","Fragments":["then"]},{"Key":"then reversing","Fragments":["the"]},{"Key":"list. Thus","Fragments":["the"]},{"Key":"Thus the","Fragments":["next"]},{"Key":"next iteration.","Fragments":[":-)"]},{"Key":" Indeed","Fragments":["`$X`"]},{"Key":"Indeed `$X`","Fragments":["seems"]},{"Key":"`$X` seems","Fragments":["more"]},{"Key":"seems more","Fragments":["suitable"]},{"Key":"more suitable","Fragments":["here,","were"]},{"Key":"suitable here,","Fragments":["thanks"]},{"Key":"here, thanks","Fragments":["for"]},{"Key":"pointing this","Fragments":["out."]},{"Key":"recursion vs","Fragments":["map"]},{"Key":"vs map","Fragments":["-"]},{"Key":"map -","Fragments":["I"]},{"Key":"how did","Fragments":["you"]},{"Key":"you came","Fragments":["up"]},{"Key":"came up","Fragments":["with","with,"]},{"Key":"with O(n²)","Fragments":["complexity"]},{"Key":"O(n²) complexity","Fragments":["here?"]},{"Key":"complexity here?","Fragments":["I"]},{"Key":"am indeed","Fragments":["appending"]},{"Key":"indeed appending","Fragments":["the"]},{"Key":"characters to","Fragments":["the"]},{"Key":"accumulator, but","Fragments":["so"]},{"Key":"but so","Fragments":["does"]},{"Key":"so does","Fragments":["the"]},{"Key":"the lists:map/2,","Fragments":["while"]},{"Key":"lists:map/2, while","Fragments":["it"]},{"Key":"while it","Fragments":["is","should"]},{"Key":"is internally","Fragments":["building"]},{"Key":"internally building","Fragments":["the"]},{"Key":"new list","Fragments":["while"]},{"Key":"list while","Fragments":["applying"]},{"Key":"while applying","Fragments":["the"]},{"Key":"are ongoing","Fragments":["discussions"]},{"Key":"ongoing discussions","Fragments":["(various"]},{"Key":"discussions (various","Fragments":["SO"]},{"Key":"(various SO","Fragments":["threads)"]},{"Key":"SO threads)","Fragments":["on"]},{"Key":"threads) on","Fragments":["which"]},{"Key":"on which","Fragments":["solution"]},{"Key":"which solution","Fragments":["(iteration"]},{"Key":"solution (iteration","Fragments":["or"]},{"Key":"(iteration or","Fragments":["tail"]},{"Key":"or tail","Fragments":["recursion)"]},{"Key":"tail recursion)","Fragments":["is"]},{"Key":"recursion) is","Fragments":["better"]},{"Key":"better solution","Fragments":["overall."]},{"Key":"solution overall.","Fragments":["I"]},{"Key":"overall. I","Fragments":["am"]},{"Key":"am quite","Fragments":["novice"]},{"Key":"quite novice","Fragments":["to"]},{"Key":"novice to","Fragments":["Erlang,"]},{"Key":"Erlang, but","Fragments":["from","I"]},{"Key":"but from","Fragments":["various"]},{"Key":"from various","Fragments":["sources"]},{"Key":"various sources","Fragments":["I"]},{"Key":"sources I","Fragments":["am"]},{"Key":"am getting","Fragments":["the"]},{"Key":"getting the","Fragments":["feeling,","impression,"]},{"Key":"the feeling,","Fragments":["that"]},{"Key":"feeling, that","Fragments":["using"]},{"Key":"using recursion","Fragments":["is","over","or"]},{"Key":"is preffered","Fragments":["in"]},{"Key":"preffered in","Fragments":["many"]},{"Key":"map operation","Fragments":["itself,"]},{"Key":"operation itself,","Fragments":["I"]},{"Key":"itself, I","Fragments":["am"]},{"Key":"am also","Fragments":["getting"]},{"Key":"also getting","Fragments":["the"]},{"Key":"the impression,","Fragments":["that"]},{"Key":"impression, that","Fragments":["instead"]},{"Key":"that instead","Fragments":["`lists:map/2`"]},{"Key":"instead `lists:map/2`","Fragments":["the"]},{"Key":"`lists:map/2` the","Fragments":["`["]},{"Key":"the `[","Fragments":["fun(X)"]},{"Key":"`[ fun(X)","Fragments":["||"]},{"Key":"fun(X) ||","Fragments":["X"]},{"Key":"\u003c- L]`","Fragments":["is"]},{"Key":"L]` is","Fragments":["more"]},{"Key":"The smallest","Fragments":["of"]},{"Key":"smallest of","Fragments":["nits:"]},{"Key":"of nits:","Fragments":["I"]},{"Key":"nits: I","Fragments":["am"]},{"Key":"am more","Fragments":["accustomed"]},{"Key":"more accustomed","Fragments":["to"]},{"Key":"accustomed to","Fragments":["seeing"]},{"Key":"to seeing","Fragments":["the"]},{"Key":"seeing the","Fragments":["function"]},{"Key":"head for","Fragments":["the"]},{"Key":"case listed","Fragments":["first"]},{"Key":"listed first","Fragments":["instead"]},{"Key":"first instead","Fragments":["of"]},{"Key":"of last.","Fragments":["I","You"]},{"Key":"last. I","Fragments":["don't,"]},{"Key":"I don't,","Fragments":["however,"]},{"Key":"don't, however,","Fragments":["have"]},{"Key":"however, have","Fragments":["any"]},{"Key":"any evidence","Fragments":["that"]},{"Key":"evidence that","Fragments":["either"]},{"Key":"that either","Fragments":["approach"]},{"Key":"You have","Fragments":["missed"]},{"Key":"missed to","Fragments":["export"]},{"Key":"to export","Fragments":["your"]},{"Key":"export your","Fragments":["types"]},{"Key":"your types","Fragments":[";)"]},{"Key":"types ;)","Fragments":["`-export_type([foo/0])`"]},{"Key":"of 'List","Fragments":["Comprehensions'"]},{"Key":"'List Comprehensions'","Fragments":["for"]},{"Key":"Comprehensions' for","Fragments":["this"]},{"Key":"wouldn't export","Fragments":["`dna_rna_map`."]},{"Key":"export `dna_rna_map`.","Fragments":["Why?"]},{"Key":"`dna_rna_map`. Why?","Fragments":["Because"]},{"Key":"Why? Because","Fragments":["task"]},{"Key":"Because task","Fragments":["say"]},{"Key":"task say","Fragments":["'to_rna'"]},{"Key":"say 'to_rna'","Fragments":["function"]},{"Key":"'to_rna' function","Fragments":["and"]},{"Key":"and other","Fragments":["should"]},{"Key":"other should","Fragments":["be"]},{"Key":"be private","Fragments":["I"]},{"Key":"private I","Fragments":["think."]},{"Key":" @orpha","Fragments":["agreed."]},{"Key":"@orpha agreed.","Fragments":["thanks."]},{"Key":"implementation but","Fragments":["you","I"]},{"Key":" @haylee","Fragments":["Consider"]},{"Key":"@haylee Consider","Fragments":["adding"]},{"Key":"have passed","Fragments":["the"]},{"Key":"the lower-cased","Fragments":["string"]},{"Key":"lower-cased string","Fragments":["to"]},{"Key":"to `is_anagram`","Fragments":["as"]},{"Key":"`is_anagram` as","Fragments":["the"]},{"Key":"second argument","Fragments":["instead"]},{"Key":"argument instead","Fragments":["of"]},{"Key":"the raw","Fragments":["original."]},{"Key":"raw original.","Fragments":["This"]},{"Key":"original. This","Fragments":["would"]},{"Key":"have saved","Fragments":["you"]},{"Key":"saved you","Fragments":["one"]},{"Key":"you one","Fragments":["string"]},{"Key":"string operation","Fragments":["per"]},{"Key":"operation per","Fragments":["candidate"]},{"Key":"per candidate","Fragments":["(analogous"]},{"Key":"candidate (analogous","Fragments":["to"]},{"Key":"Thanks to","Fragments":["the"]},{"Key":"the typespec","Fragments":["I","but"]},{"Key":"typespec I","Fragments":["identified"]},{"Key":"identified a","Fragments":["bug"]},{"Key":"test with","Fragments":["dialyzer."]},{"Key":" dna_tests.erl:11:","Fragments":["Function"]},{"Key":"dna_tests.erl:11: Function","Fragments":["all_different_test/0"]},{"Key":"Function all_different_test/0","Fragments":["has"]},{"Key":"all_different_test/0 has","Fragments":["no"]},{"Key":"has no","Fragments":["local","local","built"]},{"Key":"no local","Fragments":["return","return"]},{"Key":" dna_tests.erl:12:","Fragments":["The","The"]},{"Key":"dna_tests.erl:12: The","Fragments":["created","call"]},{"Key":"The created","Fragments":["fun"]},{"Key":"created fun","Fragments":["has"]},{"Key":"fun has","Fragments":["no"]},{"Key":"The call","Fragments":["dna:hamming_distance(\"GAGCCTACTAACGGGAT\",[70,...])","dna:count(\"GACT\",[88,...])"]},{"Key":"call dna:hamming_distance(\"GAGCCTACTAACGGGAT\",[70,...])","Fragments":["breaks"]},{"Key":"dna:hamming_distance(\"GAGCCTACTAACGGGAT\",[70,...]) breaks","Fragments":["the"]},{"Key":"breaks the","Fragments":["contract"]},{"Key":"contract (dna_sequence(),dna_sequence())","Fragments":["-\u003e"]},{"Key":"(dna_sequence(),dna_sequence()) -\u003e","Fragments":["non_neg_integer()"]},{"Key":"considered doing","Fragments":["code"]},{"Key":"doing code","Fragments":["reuse"]},{"Key":"code reuse","Fragments":["by"]},{"Key":"reuse by","Fragments":["using"]},{"Key":"closure to","Fragments":["reverse"]},{"Key":"predicate in","Fragments":["the"]},{"Key":"the discard","Fragments":["function"]},{"Key":"discard function","Fragments":["and"]},{"Key":"just calling","Fragments":["keep."]},{"Key":"calling keep.","Fragments":["But"]},{"Key":"keep. But","Fragments":["I"]},{"Key":"this example","Fragments":["is"]},{"Key":"example is","Fragments":["so"]},{"Key":"so trivial","Fragments":["that"]},{"Key":"trivial that","Fragments":["it"]},{"Key":"it simply","Fragments":["isn't"]},{"Key":"simply isn't","Fragments":["worth"]},{"Key":"isn't worth","Fragments":["the"]},{"Key":"the effort.","Fragments":["Also"]},{"Key":"effort. Also","Fragments":["the"]},{"Key":"defined well","Fragments":["enough"]},{"Key":"well enough","Fragments":["that"]},{"Key":"enough that","Fragments":["it's"]},{"Key":"it's very","Fragments":["unlikely"]},{"Key":"to ever","Fragments":["change."]},{"Key":"ever change.","Fragments":["Also"]},{"Key":"change. Also","Fragments":["I"]},{"Key":"comprehension here","Fragments":["because"]},{"Key":"here because","Fragments":["we"]},{"Key":"because we","Fragments":["don't"]},{"Key":"matching here","Fragments":["(`X"]},{"Key":"here (`X","Fragments":["\u003c-"]},{"Key":"(`X \u003c-","Fragments":["List`)."]},{"Key":" Allow","Fragments":["input"]},{"Key":"Allow input","Fragments":["as"]},{"Key":"as `float()`","Fragments":["or"]},{"Key":"`float()` or","Fragments":["`integer()`"]},{"Key":"or `integer()`","Fragments":["negative"]},{"Key":"`integer()` negative","Fragments":["to"]},{"Key":"negative to","Fragments":["positive,"]},{"Key":"to positive,","Fragments":["define"]},{"Key":"positive, define","Fragments":["appropriate"]},{"Key":"define appropriate","Fragments":["types,"]},{"Key":"appropriate types,","Fragments":["keep"]},{"Key":"types, keep","Fragments":["as"]},{"Key":"keep as","Fragments":["simple"]},{"Key":"possible. I","Fragments":["considered"]},{"Key":"guard for","Fragments":["the","catch"]},{"Key":"the planets","Fragments":["but"]},{"Key":"planets but","Fragments":["it"]},{"Key":"be too","Fragments":["long"]},{"Key":"too long","Fragments":["so"]},{"Key":"long so","Fragments":["`is_atom(Planet)`"]},{"Key":"so `is_atom(Planet)`","Fragments":["will"]},{"Key":"`is_atom(Planet)` will","Fragments":["have"]},{"Key":" Update:","Fragments":["Now"]},{"Key":"Update: Now","Fragments":["taking"]},{"Key":"Now taking","Fragments":["advantage"]},{"Key":"of `lists:seq`","Fragments":["is"]},{"Key":"`lists:seq` is","Fragments":["already"]},{"Key":"already an","Fragments":["ordered"]},{"Key":"an ordered","Fragments":["list"]},{"Key":"ordered list","Fragments":["with"]},{"Key":"with unique","Fragments":["elements."]},{"Key":" do","Fragments":["you"]},{"Key":"need is_function,","Fragments":["is_list"]},{"Key":"is_function, is_list","Fragments":["guards"]},{"Key":"is_list guards","Fragments":["since"]},{"Key":"guards since","Fragments":["you"]},{"Key":" answered","Fragments":["my"]},{"Key":"answered my","Fragments":["own"]},{"Key":"own question","Fragments":["through"]},{"Key":"question through","Fragments":["trial."]},{"Key":"through trial.","Fragments":["Are"]},{"Key":"trial. Are","Fragments":["`spec`"]},{"Key":"Are `spec`","Fragments":["for"]},{"Key":"`spec` for","Fragments":["the"]},{"Key":"the man","Fragments":["entries?"]},{"Key":"As far","Fragments":["as"]},{"Key":"I know,","Fragments":["specs"]},{"Key":"know, specs","Fragments":["are"]},{"Key":"are used","Fragments":["for"]},{"Key":"for static","Fragments":["type"]},{"Key":"static type","Fragments":["checking."]},{"Key":"type checking.","Fragments":["I"]},{"Key":"checking. I","Fragments":["haven't"]},{"Key":"haven't really","Fragments":["looked"]},{"Key":"really looked","Fragments":["into"]},{"Key":"looked into","Fragments":["this","the"]},{"Key":"into this","Fragments":["yet."]},{"Key":"More restrictive","Fragments":["guards."]},{"Key":"a proplist","Fragments":["instead"]},{"Key":"proplist instead","Fragments":["of"]},{"Key":"map greatly","Fragments":["simplified"]},{"Key":"greatly simplified","Fragments":["things."]},{"Key":" Bit","Fragments":["shifting"]},{"Key":"Bit shifting","Fragments":["is"]},{"Key":"shifting is","Fragments":["incredibly"]},{"Key":"is incredibly","Fragments":["fast"]},{"Key":"incredibly fast","Fragments":["and"]},{"Key":"fast and","Fragments":["easy"]},{"Key":"and easy","Fragments":["to"]},{"Key":"understand to","Fragments":["a"]},{"Key":"a computer","Fragments":["scientist."]},{"Key":"computer scientist.","Fragments":["That"]},{"Key":"scientist. That","Fragments":["is"]},{"Key":"the reason","Fragments":["I","for"]},{"Key":"I opted","Fragments":["to","to","to"]},{"Key":"opted to","Fragments":["use","just","wrap"]},{"Key":"the `square/1`","Fragments":["function."]},{"Key":"`square/1` function.","Fragments":["For"]},{"Key":"For the","Fragments":["`total/0`","CS"]},{"Key":"the `total/0`","Fragments":["function"]},{"Key":"`total/0` function","Fragments":["I"]},{"Key":"function I","Fragments":["couldn't"]},{"Key":"couldn't resist","Fragments":["just"]},{"Key":"resist just","Fragments":["returning"]},{"Key":"just returning","Fragments":["the"]},{"Key":"returning the","Fragments":["number."]},{"Key":"the number.","Fragments":["What"]},{"Key":"number. What","Fragments":["could"]},{"Key":"be faster","Fragments":["than","and"]},{"Key":"doing nothing?","Fragments":["I"]},{"Key":"nothing? I","Fragments":["think"]},{"Key":"solution strikes","Fragments":["a"]},{"Key":"strikes a","Fragments":["balance"]},{"Key":"a balance","Fragments":["between"]},{"Key":"balance between","Fragments":["readability"]},{"Key":"between readability","Fragments":["and"]},{"Key":"readability and","Fragments":["performance."]},{"Key":" Supports","Fragments":["unicode"]},{"Key":"Supports unicode","Fragments":["(which"]},{"Key":"unicode (which","Fragments":["is"]},{"Key":"is why","Fragments":["it's"]},{"Key":"why it's","Fragments":["slightly"]},{"Key":"it's slightly","Fragments":["more"]},{"Key":"slightly more","Fragments":["complex","clarity"]},{"Key":"complex since","Fragments":["it"]},{"Key":"it involves","Fragments":["sorting"]},{"Key":"involves sorting","Fragments":["graphemes)."]},{"Key":"sorting graphemes).","Fragments":["I"]},{"Key":"graphemes). I","Fragments":["didn't"]},{"Key":"didn't do","Fragments":["the"]},{"Key":"the normalization","Fragments":["because"]},{"Key":"normalization because","Fragments":["Erlang"]},{"Key":"because Erlang","Fragments":["has"]},{"Key":"no built","Fragments":["in"]},{"Key":"in libraries","Fragments":["to"]},{"Key":"libraries to","Fragments":["do"]},{"Key":" Best","Fragments":["I","yet,","of"]},{"Key":"Best I","Fragments":["could"]},{"Key":"do with","Fragments":["the","this","some"]},{"Key":"test provided.","Fragments":["Looks"]},{"Key":"provided. Looks","Fragments":["like"]},{"Key":"like dialyzer","Fragments":["is"]},{"Key":"dialyzer is","Fragments":["doing"]},{"Key":"is doing","Fragments":["its","than"]},{"Key":"doing its","Fragments":["job"]},{"Key":"its job","Fragments":["`dna_tests.erl:15:"]},{"Key":"job `dna_tests.erl:15:","Fragments":["The"]},{"Key":"`dna_tests.erl:15: The","Fragments":["call"]},{"Key":"call dna:count(\"GACT\",[88,...])","Fragments":["will"]},{"Key":"dna:count(\"GACT\",[88,...]) will","Fragments":["never"]},{"Key":"will never","Fragments":["return","terminate."]},{"Key":"never return","Fragments":["since"]},{"Key":"return since","Fragments":["the"]},{"Key":"since the","Fragments":["success","non-eager"]},{"Key":"the success","Fragments":["typing"]},{"Key":"success typing","Fragments":["is"]},{"Key":"typing is","Fragments":["([any()],[65"]},{"Key":"is ([any()],[65","Fragments":["|"]},{"Key":"([any()],[65 |","Fragments":["67"]},{"Key":"| 67","Fragments":["|"]},{"Key":"67 |","Fragments":["71"]},{"Key":"| 71","Fragments":["|"]},{"Key":"71 |","Fragments":["84,...])"]},{"Key":"| 84,...])","Fragments":["-\u003e"]},{"Key":"84,...]) -\u003e","Fragments":["number()"]},{"Key":"-\u003e number()","Fragments":["and"]},{"Key":"number() and","Fragments":["the"]},{"Key":"is (dna_sequence(),[dna_nucleotide(),...])","Fragments":["-\u003e"]},{"Key":"(dna_sequence(),[dna_nucleotide(),...]) -\u003e","Fragments":["non_neg_integer()"]},{"Key":"-\u003e non_neg_integer()","Fragments":["|"]},{"Key":"non_neg_integer() |","Fragments":["no_return()`.","0.."]},{"Key":"version goes","Fragments":["over"]},{"Key":"goes over","Fragments":["the"]},{"Key":"list left","Fragments":["to"]},{"Key":" @viva","Fragments":["Normalize"]},{"Key":"@viva Normalize","Fragments":["for"]},{"Key":"Normalize for","Fragments":["what"]},{"Key":"for what","Fragments":["purpose?"]},{"Key":"what purpose?","Fragments":["This"]},{"Key":"purpose? This","Fragments":["has"]},{"Key":"This has","Fragments":["a"]},{"Key":"a 1","Fragments":["to"]},{"Key":"1 to","Fragments":["1"]},{"Key":"to 1","Fragments":["correspondence"]},{"Key":"1 correspondence","Fragments":["in"]},{"Key":"correspondence in","Fragments":["both"]},{"Key":"in both","Fragments":["direction."]},{"Key":"I got","Fragments":["lazy"]},{"Key":"got lazy","Fragments":["with"]},{"Key":"lazy with","Fragments":["the"]},{"Key":"the comments","Fragments":["this"]},{"Key":"comments this","Fragments":["time."]},{"Key":"this time.","Fragments":["The"]},{"Key":"time. The","Fragments":["challenge"]},{"Key":"The challenge","Fragments":["needs"]},{"Key":"challenge needs","Fragments":["to"]},{"Key":" Well,","Fragments":["you","I"]},{"Key":"Well, you","Fragments":["solved"]},{"Key":"you solved","Fragments":["half"]},{"Key":"solved half","Fragments":["of"]},{"Key":"half of","Fragments":["the"]},{"Key":"the challenge.","Fragments":["The"]},{"Key":"challenge. The","Fragments":["other"]},{"Key":"other half","Fragments":["would"]},{"Key":"half would","Fragments":["be"]},{"Key":"be normalizing","Fragments":["the"]},{"Key":"normalizing the","Fragments":["input"]},{"Key":"The readme","Fragments":["and"]},{"Key":"readme and","Fragments":["the"]},{"Key":"cases specify","Fragments":["that"]},{"Key":"specify that","Fragments":["encoded","`Year`"]},{"Key":"that encoded","Fragments":["text"]},{"Key":"text is","Fragments":["lower-cased","not"]},{"Key":"is lower-cased","Fragments":["and"]},{"Key":"lower-cased and","Fragments":["split"]},{"Key":"and split","Fragments":["into"]},{"Key":"split into","Fragments":["5-character"]},{"Key":"into 5-character","Fragments":["groups,"]},{"Key":"5-character groups,","Fragments":["e.g.:"]},{"Key":" encode_numbers_test()","Fragments":["-\u003e"]},{"Key":" ?assertEqual(\"gvhgr","Fragments":["mt123"]},{"Key":"?assertEqual(\"gvhgr mt123","Fragments":["gvhgr"]},{"Key":"mt123 gvhgr","Fragments":["mt\","]},{"Key":" encode(\"Testing,","Fragments":["1"]},{"Key":"encode(\"Testing, 1","Fragments":["2"]},{"Key":"1 2","Fragments":["3,"]},{"Key":"2 3,","Fragments":["testing.\"))."]},{"Key":" Decoded","Fragments":["text"]},{"Key":"Decoded text","Fragments":["is"]},{"Key":" @salma","Fragments":["You're"]},{"Key":"@salma You're","Fragments":["right"]},{"Key":"You're right","Fragments":["I"]},{"Key":"right I","Fragments":["will","didn't"]},{"Key":"of `map`","Fragments":["is","is"]},{"Key":"`map` is","Fragments":["great","kinda"]},{"Key":"not yet","Fragments":["tail"]},{"Key":"yet tail","Fragments":["recursive."]},{"Key":"recursive. See","Fragments":["[here](http://learnyousomeerlang.com/recursion#length-tail-recursion)"]},{"Key":"See [here](http://learnyousomeerlang.com/recursion#length-tail-recursion)","Fragments":["for"]},{"Key":"[here](http://learnyousomeerlang.com/recursion#length-tail-recursion) for","Fragments":["more"]},{"Key":"- \"Let","Fragments":["it"]},{"Key":"\"Let it","Fragments":["fail\""]},{"Key":"- Update","Fragments":["to"]},{"Key":"Update to","Fragments":["recent","recent","follow..."]},{"Key":"to recent","Fragments":["style","style"]},{"Key":"recent style","Fragments":["(section","(section"]},{"Key":"style (section","Fragments":["headers,","headers,"]},{"Key":"(section headers,","Fragments":["etc)","etc)."]},{"Key":"\u003e Why","Fragments":["not"]},{"Key":"not define","Fragments":["handle_call","handle_call","your"]},{"Key":"define handle_call","Fragments":["direction","direction"]},{"Key":"handle_call direction","Fragments":["and","and"]},{"Key":"direction and","Fragments":["position","position"]},{"Key":"and position","Fragments":["to","to"]},{"Key":"position to","Fragments":["return","return"]},{"Key":"return the","Fragments":["value","value"]},{"Key":"the value","Fragments":["without","without","in"]},{"Key":"value without","Fragments":["an","an"]},{"Key":"without an","Fragments":["ok","ok"]},{"Key":"an ok","Fragments":["tuple","tuple"]},{"Key":"ok tuple","Fragments":["so","so"]},{"Key":"tuple so","Fragments":["you","you"]},{"Key":"And now...","Fragments":["a"]},{"Key":"now... a","Fragments":["(hackish)"]},{"Key":"a (hackish)","Fragments":["`gen_server`"]},{"Key":"(hackish) `gen_server`","Fragments":["version!"]},{"Key":" TODO:","Fragments":["edoc","Update"]},{"Key":"Maybe TODO:","Fragments":["mention"]},{"Key":"TODO: mention","Fragments":["in"]},{"Key":"mention in","Fragments":["comments/docs"]},{"Key":"in comments/docs","Fragments":["how"]},{"Key":"comments/docs how","Fragments":["the"]},{"Key":"the read-only","Fragments":["API"]},{"Key":"read-only API","Fragments":["is"]},{"Key":"API is","Fragments":["synchronous","asynchronous"]},{"Key":"is synchronous","Fragments":["(`gen_server:call/2`)"]},{"Key":"synchronous (`gen_server:call/2`)","Fragments":["and"]},{"Key":"(`gen_server:call/2`) and","Fragments":["the"]},{"Key":"the mutating","Fragments":["API"]},{"Key":"mutating API","Fragments":["is"]},{"Key":"is asynchronous","Fragments":["(`gen_server:cast/2`)."]},{"Key":"to translate?","Fragments":["Also"]},{"Key":"translate? Also","Fragments":["not"]},{"Key":"Also not","Fragments":["sure"]},{"Key":"sure why","Fragments":["the","I"]},{"Key":"the exception","Fragments":["handling;"]},{"Key":"exception handling;","Fragments":["if"]},{"Key":"handling; if","Fragments":["someone"]},{"Key":"someone passes","Fragments":["an","an"]},{"Key":"passes an","Fragments":["invalid","invalid"]},{"Key":"invalid pid,","Fragments":["usually"]},{"Key":"pid, usually","Fragments":["better"]},{"Key":"to crash","Fragments":["with","with"]},{"Key":"crash with","Fragments":["the","`case_clause`."]},{"Key":"the explicit","Fragments":["error."]},{"Key":"the try/catch.","Fragments":["Not"]},{"Key":"try/catch. Not","Fragments":["sure"]},{"Key":"why I","Fragments":["did","keep"]},{"Key":"that either...","Fragments":["I'll"]},{"Key":"either... I'll","Fragments":["remove"]},{"Key":"I'll remove","Fragments":["it."]},{"Key":" Re:","Fragments":["`handle_call`"]},{"Key":"Re: `handle_call`","Fragments":["returning"]},{"Key":"`handle_call` returning","Fragments":["an"]},{"Key":"an `ok`","Fragments":["tuple,"]},{"Key":"`ok` tuple,","Fragments":["I"]},{"Key":"tuple, I","Fragments":["was"]},{"Key":"thinking that","Fragments":["it"]},{"Key":"to stick","Fragments":["with"]},{"Key":"stick with","Fragments":["the"]},{"Key":"the `ok`","Fragments":["convention,"]},{"Key":"`ok` convention,","Fragments":["even"]},{"Key":"convention, even","Fragments":["though"]},{"Key":"I explicitly","Fragments":["don't"]},{"Key":"explicitly don't","Fragments":["need"]},{"Key":"it here.","Fragments":["The"]},{"Key":"here. The","Fragments":["idea"]},{"Key":"The idea","Fragments":["was"]},{"Key":"idea was","Fragments":["that"]},{"Key":"was that","Fragments":["maybe"]},{"Key":"that maybe","Fragments":["I'd"]},{"Key":"maybe I'd","Fragments":["write"]},{"Key":"I'd write","Fragments":["`rs-sup.erl`"]},{"Key":"write `rs-sup.erl`","Fragments":["and"]},{"Key":"`rs-sup.erl` and","Fragments":["so"]},{"Key":"so on","Fragments":["and"]},{"Key":"and turn","Fragments":["this"]},{"Key":"turn this","Fragments":["into"]},{"Key":"a \"proper\"","Fragments":["OTP"]},{"Key":"\"proper\" OTP","Fragments":["application."]},{"Key":"Any edoc","Fragments":["gurus"]},{"Key":"edoc gurus","Fragments":["out"]},{"Key":"gurus out","Fragments":["there?"]},{"Key":"You probably","Fragments":["realized"]},{"Key":"probably realized","Fragments":["this"]},{"Key":"this as","Fragments":["you"]},{"Key":"wrote it,","Fragments":["but"]},{"Key":"you basically","Fragments":["implemented"]},{"Key":"basically implemented","Fragments":["your"]},{"Key":"implemented your","Fragments":["own"]},{"Key":"own simple","Fragments":["`gen_server`."]},{"Key":"simple `gen_server`.","Fragments":["Very"]},{"Key":"`gen_server`. Very","Fragments":["clean,"]},{"Key":"Very clean,","Fragments":["nice"]},{"Key":"clean, nice","Fragments":["work,"]},{"Key":"nice work,","Fragments":["arguably"]},{"Key":"work, arguably","Fragments":["easier"]},{"Key":"arguably easier","Fragments":["to"]},{"Key":"read than","Fragments":["using"]},{"Key":"than using","Fragments":["OTP."]},{"Key":"I've dabbled","Fragments":["in"]},{"Key":"dabbled in","Fragments":["edoc"]},{"Key":"in edoc","Fragments":["a"]},{"Key":"edoc a","Fragments":["fair"]},{"Key":"a fair","Fragments":["bit;"]},{"Key":"fair bit;","Fragments":["what's"]},{"Key":"bit; what's","Fragments":["up?"]},{"Key":" Note","Fragments":["to","that"]},{"Key":"Note to","Fragments":["self:"]},{"Key":"to self:","Fragments":["rewrite"]},{"Key":"self: rewrite","Fragments":["this"]},{"Key":"using `gen_server`","Fragments":["as"]},{"Key":"`gen_server` as","Fragments":["an"]},{"Key":"In a","Fragments":["project,"]},{"Key":"a project,","Fragments":["typically"]},{"Key":"project, typically","Fragments":["developers"]},{"Key":"typically developers","Fragments":["will"]},{"Key":"developers will","Fragments":["use"]},{"Key":"a build","Fragments":["tool"]},{"Key":"build tool","Fragments":["like"]},{"Key":"tool like","Fragments":["`rebar`;"]},{"Key":"like `rebar`;","Fragments":["`rebar"]},{"Key":"`rebar`; `rebar","Fragments":["doc`"]},{"Key":"`rebar doc`","Fragments":["can"]},{"Key":"doc` can","Fragments":["build"]},{"Key":"can build","Fragments":["edoc"]},{"Key":"build edoc","Fragments":["output."]},{"Key":"can invoke","Fragments":["edoc"]},{"Key":"invoke edoc","Fragments":["direction"]},{"Key":"edoc direction","Fragments":["from"]},{"Key":"direction from","Fragments":["an"]},{"Key":"from an","Fragments":["Erlang"]},{"Key":"Erlang shell.","Fragments":["If,"]},{"Key":"shell. If,","Fragments":["for"]},{"Key":"If, for","Fragments":["example,"]},{"Key":"for example,","Fragments":["you"]},{"Key":"example, you","Fragments":["had"]},{"Key":"a docs","Fragments":["directory"]},{"Key":"docs directory","Fragments":["parallel"]},{"Key":"directory parallel","Fragments":["to"]},{"Key":"parallel to","Fragments":["your"]},{"Key":"your source","Fragments":["directory"]},{"Key":"source directory","Fragments":["where"]},{"Key":"directory where","Fragments":["you"]},{"Key":"were running","Fragments":["the"]},{"Key":"running the","Fragments":["shell,"]},{"Key":"the shell,","Fragments":["this"]},{"Key":"shell, this","Fragments":["should"]},{"Key":" edoc:file(\"robot_simulator.erl\",","Fragments":["[{dir,"]},{"Key":"edoc:file(\"robot_simulator.erl\", [{dir,","Fragments":["\"../docs\"}])."]},{"Key":"best example,","Fragments":["but"]},{"Key":"example, but","Fragments":["it"]},{"Key":"in pretty","Fragments":["good"]},{"Key":"good shape:","Fragments":["[Riak"]},{"Key":"shape: [Riak","Fragments":["Pipe](https://github.com/basho/riak_pipe)"]},{"Key":"[Riak Pipe](https://github.com/basho/riak_pipe)","Fragments":["uses"]},{"Key":"Pipe](https://github.com/basho/riak_pipe) uses","Fragments":["edoc"]},{"Key":"uses edoc","Fragments":["fairly"]},{"Key":"edoc fairly","Fragments":["heavily."]},{"Key":"I ended","Fragments":["up","up"]},{"Key":"ended up","Fragments":["scouring","with"]},{"Key":"up scouring","Fragments":["the"]},{"Key":"scouring the","Fragments":["doc"]},{"Key":"the doc","Fragments":["manual"]},{"Key":"doc manual","Fragments":["and"]},{"Key":"manual and","Fragments":["running"]},{"Key":"and running","Fragments":["code"]},{"Key":"running code","Fragments":["quite"]},{"Key":"code quite","Fragments":["similar"]},{"Key":"quite similar","Fragments":["to"]},{"Key":"use rebar","Fragments":["a"]},{"Key":"rebar a","Fragments":["lot"]},{"Key":"lot but","Fragments":["didn't"]},{"Key":"about `rebar","Fragments":["doc`."]},{"Key":"`rebar doc`.","Fragments":["Cool."]},{"Key":"the Riak","Fragments":["Pipe"]},{"Key":"Riak Pipe","Fragments":["example."]},{"Key":"Pipe example.","Fragments":["Looks"]},{"Key":"example. Looks","Fragments":["like"]},{"Key":"like cool","Fragments":["project"]},{"Key":"cool project","Fragments":["too."]},{"Key":"than erlang.org","Fragments":["are"]},{"Key":"erlang.org are","Fragments":["there"]},{"Key":"are there","Fragments":["any"]},{"Key":"good examples","Fragments":["of"]},{"Key":"to annotate","Fragments":["Erlang"]},{"Key":"annotate Erlang","Fragments":["code"]},{"Key":"code out","Fragments":["there?"]},{"Key":"I generate","Fragments":["the"]},{"Key":"generate the","Fragments":["docs"]},{"Key":"the docs","Fragments":["once"]},{"Key":"docs once","Fragments":["I've"]},{"Key":"once I've","Fragments":["annotated"]},{"Key":"I've annotated","Fragments":["the"]},{"Key":"annotated the","Fragments":["code?"]},{"Key":" Newer","Fragments":["versions"]},{"Key":"Newer versions","Fragments":["of"]},{"Key":"versions of","Fragments":["LFE"]},{"Key":"of LFE","Fragments":["support"]},{"Key":"LFE support","Fragments":["`(foo:bar)`"]},{"Key":"support `(foo:bar)`","Fragments":["in"]},{"Key":"`(foo:bar)` in","Fragments":["place"]},{"Key":"in place","Fragments":["of","of"]},{"Key":"place of","Fragments":["`(:","`map`"]},{"Key":"of `(:","Fragments":["foo"]},{"Key":"`(: foo","Fragments":["bar)`"]},{"Key":"foo bar)`","Fragments":["which"]},{"Key":"bar)` which","Fragments":["you"]},{"Key":"might find","Fragments":["more"]},{"Key":"find more","Fragments":["readable."]},{"Key":"was under","Fragments":["the"]},{"Key":"under the","Fragments":["assumption"]},{"Key":"the assumption","Fragments":["that"]},{"Key":"assumption that","Fragments":["the"]},{"Key":"the `(module:function","Fragments":["...)`"]},{"Key":"`(module:function ...)`","Fragments":["syntax"]},{"Key":"...)` syntax","Fragments":["incurred"]},{"Key":"syntax incurred","Fragments":["some"]},{"Key":"incurred some","Fragments":["overhead"]},{"Key":"some overhead","Fragments":["cost."]},{"Key":"overhead cost.","Fragments":["Maybe"]},{"Key":"cost. Maybe","Fragments":["that's"]},{"Key":"Maybe that's","Fragments":["not"]},{"Key":"case now.","Fragments":["Either"]},{"Key":"now. Either","Fragments":["way,"]},{"Key":"Either way,","Fragments":["coming","re-implementing"]},{"Key":"way, coming","Fragments":["from"]},{"Key":"coming from","Fragments":["[Clojure's"]},{"Key":"from [Clojure's","Fragments":["Dot"]},{"Key":"[Clojure's Dot","Fragments":["special"]},{"Key":"Dot special","Fragments":["form][1],"]},{"Key":"special form][1],","Fragments":["I"]},{"Key":"form][1], I","Fragments":["actually"]},{"Key":"actually find","Fragments":["`(:"]},{"Key":"find `(:","Fragments":["module"]},{"Key":"`(: module","Fragments":["function"]},{"Key":"module function","Fragments":["...)`","and"]},{"Key":"function ...)`","Fragments":["to"]},{"Key":"...)` to","Fragments":["be"]},{"Key":"We should","Fragments":["talk"]},{"Key":"should talk","Fragments":["about"]},{"Key":"talk about","Fragments":["[xlfe][2],","a"]},{"Key":"about [xlfe][2],","Fragments":["if"]},{"Key":"[xlfe][2], if","Fragments":["you're"]},{"Key":"if you're","Fragments":["interested."]},{"Key":"Ah, fair","Fragments":["enough;"]},{"Key":"fair enough;","Fragments":["I'm"]},{"Key":"enough; I'm","Fragments":["not"]},{"Key":"of Clojure's","Fragments":["dot"]},{"Key":"Clojure's dot","Fragments":["syntax,"]},{"Key":"dot syntax,","Fragments":["while"]},{"Key":"syntax, while","Fragments":["CL"]},{"Key":"while CL","Fragments":["style"]},{"Key":"CL style","Fragments":["package:symbol"]},{"Key":"style package:symbol","Fragments":["notation"]},{"Key":"package:symbol notation","Fragments":["is"]},{"Key":"notation is","Fragments":["natural"]},{"Key":"is natural","Fragments":["to"]},{"Key":"natural to","Fragments":["me."]},{"Key":" An","Fragments":["LFE"]},{"Key":"An LFE","Fragments":["track"]},{"Key":"LFE track","Fragments":["would"]},{"Key":"track would","Fragments":["be"]},{"Key":"be great!","Fragments":["I'm"]},{"Key":"great! I'm","Fragments":["watching"]},{"Key":"I'm watching","Fragments":["the"]},{"Key":"watching the","Fragments":["repo"]},{"Key":"the repo","Fragments":["but"]},{"Key":"repo but","Fragments":["I'm"]},{"Key":"sure when","Fragments":["I'll"]},{"Key":"when I'll","Fragments":["have"]},{"Key":"the chance","Fragments":["to"]},{"Key":" Cool.","Fragments":["It"]},{"Key":"Cool. It","Fragments":["turns"]},{"Key":"It turns","Fragments":["out"]},{"Key":"turns out","Fragments":["the"]},{"Key":"the `m:f`","Fragments":["syntax"]},{"Key":"`m:f` syntax","Fragments":["is"]},{"Key":"syntax is","Fragments":["preferred","a"]},{"Key":"preferred now,","Fragments":["for"]},{"Key":"now, for","Fragments":["the"]},{"Key":" Rough","Fragments":["first"]},{"Key":"Rough first","Fragments":["draft"]},{"Key":"first draft","Fragments":["in"]},{"Key":"draft in","Fragments":["LFE."]},{"Key":" Clean,","Fragments":["to"]},{"Key":"Clean, to","Fragments":["the"]},{"Key":"the point.","Fragments":["+1"]},{"Key":"much simpler","Fragments":["if"]},{"Key":"simpler if","Fragments":["you"]},{"Key":"choose `orddict`","Fragments":["instead"]},{"Key":"`orddict` instead","Fragments":["of"]},{"Key":"of `gb_trees`","Fragments":["as"]},{"Key":"`gb_trees` as","Fragments":["the"]},{"Key":"the underlying","Fragments":["data"]},{"Key":"underlying data","Fragments":["structure."]},{"Key":"That's basically","Fragments":["my"]},{"Key":"basically my","Fragments":["solution"]},{"Key":"saw another","Fragments":["solution"]},{"Key":"another solution","Fragments":["that"]},{"Key":"pattern I","Fragments":["know"]},{"Key":"know from","Fragments":["Scheme:"]},{"Key":"from Scheme:","Fragments":["have"]},{"Key":"Scheme: have","Fragments":["tail"]},{"Key":"have tail","Fragments":["recursive"]},{"Key":"recursive helper","Fragments":["function"]},{"Key":"a lists:reverse","Fragments":["call"]},{"Key":"lists:reverse call","Fragments":["on"]},{"Key":"call on","Fragments":["its","line"]},{"Key":"on its","Fragments":["result."]},{"Key":"guess that","Fragments":["is"]},{"Key":"longer lists...","Fragments":["any"]},{"Key":"lists... any","Fragments":["opinion"]},{"Key":"any opinion","Fragments":["on"]},{"Key":"opinion on","Fragments":["this?","that?","that"]},{"Key":"Yes, it's","Fragments":["too"]},{"Key":"it's too","Fragments":["bad"]},{"Key":"too bad","Fragments":["there","Erlang"]},{"Key":"bad there","Fragments":["aren't"]},{"Key":"there aren't","Fragments":["tests"]},{"Key":"aren't tests","Fragments":["as"]},{"Key":"tests as","Fragments":["part"]},{"Key":"as part","Fragments":["of"]},{"Key":"problem that","Fragments":["expose"]},{"Key":"that expose","Fragments":["the"]},{"Key":"expose the","Fragments":["problems"]},{"Key":"the problems","Fragments":["with"]},{"Key":"with implementing","Fragments":["this"]},{"Key":"implementing this","Fragments":["without"]},{"Key":"without tail","Fragments":["recursion."]},{"Key":" Mostly","Fragments":["here"]},{"Key":"Mostly here","Fragments":["my"]},{"Key":"here my","Fragments":["eyes"]},{"Key":"my eyes","Fragments":["were"]},{"Key":"eyes were","Fragments":["glazing"]},{"Key":"were glazing","Fragments":["over"]},{"Key":"glazing over","Fragments":["from"]},{"Key":"over from","Fragments":["all"]},{"Key":"from all","Fragments":["the"]},{"Key":"the \"reinvent","Fragments":["your"]},{"Key":"\"reinvent your","Fragments":["language's"]},{"Key":"your language's","Fragments":["built-in"]},{"Key":"language's built-in","Fragments":["functions\""]},{"Key":"built-in functions\"","Fragments":["problems,"]},{"Key":"functions\" problems,","Fragments":["but"]},{"Key":"problems, but","Fragments":["you"]},{"Key":"the argument","Fragments":["that","is","naming."]},{"Key":"argument that","Fragments":["for"]},{"Key":"for workloads","Fragments":["that"]},{"Key":"workloads that","Fragments":["fit"]},{"Key":"that fit","Fragments":["on"]},{"Key":"fit on","Fragments":["the"]},{"Key":"stack, this","Fragments":["implementation"]},{"Key":"this implementation","Fragments":["will"]},{"Key":"implementation will","Fragments":["often"]},{"Key":"will often","Fragments":["be"]},{"Key":"often be","Fragments":["faster"]},{"Key":"faster and","Fragments":["puts"]},{"Key":"and puts","Fragments":["less"]},{"Key":"puts less","Fragments":["pressure"]},{"Key":"less pressure","Fragments":["on"]},{"Key":"pressure on","Fragments":["the"]},{"Key":"the GC","Fragments":["than"]},{"Key":"GC than","Fragments":["the"]},{"Key":"the classic","Fragments":["\"accumulate-and-reverse\""]},{"Key":"classic \"accumulate-and-reverse\"","Fragments":["approach."]},{"Key":"* Added","Fragments":["`-spec`s","a","guards"]},{"Key":"guard that","Fragments":["checks","replaces","validates","`N`"]},{"Key":"checks type","Fragments":["of"]},{"Key":"`Year` in","Fragments":["`leap_year/1`"]},{"Key":" Indeed.","Fragments":["I"]},{"Key":"Indeed. I","Fragments":["was"]},{"Key":"getting fed","Fragments":["up"]},{"Key":"fed up","Fragments":["with"]},{"Key":"this class","Fragments":["of"]},{"Key":"class of","Fragments":["problems"]},{"Key":"of problems","Fragments":["and"]},{"Key":"just wrote","Fragments":["the"]},{"Key":"thing that","Fragments":["came"]},{"Key":"that came","Fragments":["to"]},{"Key":"came to","Fragments":["mind.","the"]},{"Key":"to mind.","Fragments":["Thanks."]},{"Key":" (It","Fragments":["would"]},{"Key":"(It would","Fragments":["be"]},{"Key":"nicer if","Fragments":["these","you"]},{"Key":"if these","Fragments":["problems"]},{"Key":"problems actually","Fragments":["had"]},{"Key":"actually had","Fragments":["tests"]},{"Key":"had tests","Fragments":["that"]},{"Key":"tests that","Fragments":["exposed"]},{"Key":"that exposed","Fragments":["some"]},{"Key":"exposed some","Fragments":["of"]},{"Key":"of these","Fragments":["considerations!)"]},{"Key":"this version","Fragments":["is"]},{"Key":"tail recursive,","Fragments":["which"]},{"Key":"recursive, which","Fragments":["might"]},{"Key":"which might","Fragments":["result","be"]},{"Key":"might result","Fragments":["in"]},{"Key":"problem for","Fragments":["longer"]},{"Key":"* Replaced","Fragments":["map"]},{"Key":"Replaced map","Fragments":["macros"]},{"Key":"map macros","Fragments":["with"]},{"Key":"macros with","Fragments":["function"]},{"Key":"with function","Fragments":["pattern","guards"]},{"Key":"* Calculate","Fragments":["the"]},{"Key":"the target","Fragments":["date"]},{"Key":"target date","Fragments":["instead"]},{"Key":"date instead","Fragments":["of"]},{"Key":"of scanning","Fragments":["for"]},{"Key":"scanning for","Fragments":["it"]},{"Key":"for it","Fragments":["iteratively."]},{"Key":" @nat","Fragments":["Nice"]},{"Key":"@nat Nice","Fragments":["total"]},{"Key":"Nice total","Fragments":["function."]},{"Key":"total function.","Fragments":["I"]},{"Key":"function. I","Fragments":["opted","I","also"]},{"Key":"just hardcode","Fragments":["the"]},{"Key":"hardcode the","Fragments":["value"]},{"Key":"value in","Fragments":["mine."]},{"Key":"in mine.","Fragments":["But"]},{"Key":"But yours","Fragments":["looks"]},{"Key":"yours looks","Fragments":["more"]},{"Key":"looks more","Fragments":["visually"]},{"Key":"more visually","Fragments":["appealing."]},{"Key":"A key","Fragments":["idea"]},{"Key":"key idea","Fragments":["here"]},{"Key":"idea here","Fragments":["is"]},{"Key":"that we","Fragments":["try"]},{"Key":"we try","Fragments":["to"]},{"Key":"avoid unnecessary","Fragments":["consing."]},{"Key":"unnecessary consing.","Fragments":["I"]},{"Key":"consing. I","Fragments":["think"]},{"Key":"the key","Fragments":["tradeoffs","is","value"]},{"Key":"key tradeoffs","Fragments":["here"]},{"Key":"tradeoffs here","Fragments":["is"]},{"Key":"of `N`","Fragments":["versus"]},{"Key":"`N` versus","Fragments":["the"]},{"Key":"versus the","Fragments":["number"]},{"Key":"of multiples","Fragments":["we're"]},{"Key":"multiples we're","Fragments":["checking."]},{"Key":"What faster","Fragments":["ways"]},{"Key":"faster ways","Fragments":["do"]},{"Key":"ways do","Fragments":["you"]},{"Key":"are various","Fragments":["ways"]},{"Key":"various ways","Fragments":["one","of"]},{"Key":"ways one","Fragments":["could"]},{"Key":"one could","Fragments":["exploit"]},{"Key":"could exploit","Fragments":["the"]},{"Key":"exploit the","Fragments":["numerical"]},{"Key":"the numerical","Fragments":["structure"]},{"Key":"numerical structure","Fragments":["of"]},{"Key":"structure of","Fragments":["this","this","the"]},{"Key":"problem. This","Fragments":["would"]},{"Key":"be particularly","Fragments":["important"]},{"Key":"particularly important","Fragments":["if"]},{"Key":"important if","Fragments":["`M`"]},{"Key":"if `M`","Fragments":["has"]},{"Key":"`M` has","Fragments":["few"]},{"Key":"has few","Fragments":["elements,"]},{"Key":"few elements,","Fragments":["but"]},{"Key":"elements, but","Fragments":["`N`"]},{"Key":"but `N`","Fragments":["is"]},{"Key":"`N` is","Fragments":["very","small"]},{"Key":"very large.","Fragments":["When"]},{"Key":"large. When","Fragments":["`N`"]},{"Key":"When `N`","Fragments":["is"]},{"Key":"is small","Fragments":["but"]},{"Key":"small but","Fragments":["`M`"]},{"Key":"but `M`","Fragments":["is"]},{"Key":"`M` is","Fragments":["potentially"]},{"Key":"is potentially","Fragments":["numerous,"]},{"Key":"potentially numerous,","Fragments":["I"]},{"Key":"numerous, I","Fragments":["think"]},{"Key":"the approach","Fragments":["implemented","with","of"]},{"Key":"approach implemented","Fragments":["here"]},{"Key":"implemented here","Fragments":["is"]},{"Key":"example, if","Fragments":["we"]},{"Key":"we know","Fragments":["our"]},{"Key":"know our","Fragments":["input"]},{"Key":"our input","Fragments":["will"]},{"Key":"input will","Fragments":["typically"]},{"Key":"will typically","Fragments":["share"]},{"Key":"typically share","Fragments":["one"]},{"Key":"share one","Fragments":["or"]},{"Key":"one or","Fragments":["more"]},{"Key":"more prime","Fragments":["factor,"]},{"Key":"prime factor,","Fragments":["we"]},{"Key":"factor, we","Fragments":["can"]},{"Key":"can potentially","Fragments":["step"]},{"Key":"potentially step","Fragments":["through"]},{"Key":"step through","Fragments":["the","repeated","the"]},{"Key":"the multiples","Fragments":["much"]},{"Key":"multiples much","Fragments":["faster."]},{"Key":" Even","Fragments":["if"]},{"Key":"Even if","Fragments":["we"]},{"Key":"to bother","Fragments":["factoring"]},{"Key":"bother factoring","Fragments":["the"]},{"Key":"factoring the","Fragments":["number,"]},{"Key":"the number,","Fragments":["but"]},{"Key":"number, but","Fragments":["we"]},{"Key":"but we","Fragments":["are"]},{"Key":"we are","Fragments":["on"]},{"Key":"are on","Fragments":["a"]},{"Key":"a machine","Fragments":["where"]},{"Key":"machine where","Fragments":["integer"]},{"Key":"where integer","Fragments":["division"]},{"Key":"integer division","Fragments":["is"]},{"Key":"division is","Fragments":["prohibitively"]},{"Key":"is prohibitively","Fragments":["expensive,"]},{"Key":"prohibitively expensive,","Fragments":["we"]},{"Key":"expensive, we","Fragments":["can"]},{"Key":"can step","Fragments":["through"]},{"Key":"through repeated","Fragments":["sums"]},{"Key":"repeated sums","Fragments":["of"]},{"Key":"sums of","Fragments":["each"]},{"Key":"each number,","Fragments":["taking"]},{"Key":"number, taking","Fragments":["care"]},{"Key":"taking care","Fragments":["to"]},{"Key":"care to","Fragments":["avoid"]},{"Key":"avoid duplicates.","Fragments":["The"]},{"Key":"duplicates. The","Fragments":["process"]},{"Key":"The process","Fragments":["of"]},{"Key":"of avoiding","Fragments":["duplicates"]},{"Key":"avoiding duplicates","Fragments":["has"]},{"Key":"duplicates has","Fragments":["itself"]},{"Key":"has itself","Fragments":["many"]},{"Key":"itself many","Fragments":["tradeoffs;"]},{"Key":"many tradeoffs;","Fragments":["for"]},{"Key":"tradeoffs; for","Fragments":["few"]},{"Key":"for few","Fragments":["values"]},{"Key":"few values","Fragments":["of"]},{"Key":"of `M`,","Fragments":["the","one"]},{"Key":"`M`, the","Fragments":["easiest"]},{"Key":"the easiest","Fragments":["thing"]},{"Key":"easiest thing","Fragments":["is"]},{"Key":"it serially,","Fragments":["always"]},{"Key":"serially, always","Fragments":["working"]},{"Key":"always working","Fragments":["with"]},{"Key":"working with","Fragments":["the","lists."]},{"Key":"the lowest","Fragments":["value,"]},{"Key":"lowest value,","Fragments":["but"]},{"Key":"value, but","Fragments":["for","a"]},{"Key":"for many","Fragments":["values"]},{"Key":"many values","Fragments":["of"]},{"Key":"`M`, one","Fragments":["can"]},{"Key":"one can","Fragments":["imagine"]},{"Key":"can imagine","Fragments":["a"]},{"Key":"a variety","Fragments":["of"]},{"Key":"variety of","Fragments":["approaches"]},{"Key":"approaches in","Fragments":["parallel."]},{"Key":" Those","Fragments":["are"]},{"Key":"Those are","Fragments":["some"]},{"Key":"some off-the-cuff","Fragments":["thoughts"]},{"Key":"off-the-cuff thoughts","Fragments":["since"]},{"Key":"thoughts since","Fragments":["I'm"]},{"Key":"what my","Fragments":["exact"]},{"Key":"my exact","Fragments":["line"]},{"Key":"exact line","Fragments":["of"]},{"Key":"line of","Fragments":["thinking"]},{"Key":"of thinking","Fragments":["was"]},{"Key":"thinking was","Fragments":["when"]},{"Key":"was when","Fragments":["I"]},{"Key":"concise than","Fragments":["this."]},{"Key":"than this.","Fragments":["Nice"]},{"Key":"this. Nice","Fragments":["work."]},{"Key":"at other","Fragments":["solutions","submissions"]},{"Key":"solutions here,","Fragments":["I"]},{"Key":"was probably","Fragments":["a"]},{"Key":"bit hasty","Fragments":["banging"]},{"Key":"hasty banging","Fragments":["this"]},{"Key":"banging this","Fragments":["out"]},{"Key":"this out","Fragments":["and"]},{"Key":"out and","Fragments":["probably"]},{"Key":"and probably","Fragments":["should"]},{"Key":"probably should","Fragments":["have"]},{"Key":"have extracted","Fragments":["the"]},{"Key":"extracted the","Fragments":["filter"]},{"Key":"named function.","Fragments":["The"]},{"Key":"function. The","Fragments":["one"]},{"Key":"The one","Fragments":["thing","with","with"]},{"Key":"say for","Fragments":["my"]},{"Key":"my implementation,","Fragments":["though,"]},{"Key":"implementation, though,","Fragments":["is"]},{"Key":"though, is","Fragments":["it"]},{"Key":"it tries","Fragments":["to"]},{"Key":"tries to","Fragments":["minimize"]},{"Key":"to minimize","Fragments":["the"]},{"Key":"minimize the","Fragments":["number"]},{"Key":"of times","Fragments":["`sort`"]},{"Key":"times `sort`","Fragments":["and"]},{"Key":"`sort` and","Fragments":["`to_lower`"]},{"Key":"`to_lower` are","Fragments":["called."]},{"Key":"like my","Fragments":["`semi_tails/2`","variable"]},{"Key":"my `semi_tails/2`","Fragments":["and"]},{"Key":"`semi_tails/2` and","Fragments":["`/4`,"]},{"Key":"and `/4`,","Fragments":["but"]},{"Key":"`/4`, but","Fragments":["it"]},{"Key":"for now","Fragments":["and"]},{"Key":"now and","Fragments":["I"]},{"Key":"can take","Fragments":["a"]},{"Key":"into other","Fragments":["solutions"]},{"Key":"solutions without","Fragments":["having"]},{"Key":"without having","Fragments":["an"]},{"Key":"having an","Fragments":["empty"]},{"Key":"you fix","Fragments":["this"]},{"Key":"this for","Fragments":["current"]},{"Key":"for current","Fragments":["testsuite?"]},{"Key":" Thought","Fragments":["it"]},{"Key":"Thought it","Fragments":["was"]},{"Key":"try out","Fragments":["some"]},{"Key":"out some","Fragments":["key"]},{"Key":"some key","Fragments":["value"]},{"Key":"key value","Fragments":["stores","data"]},{"Key":"value stores","Fragments":["in"]},{"Key":"stores in","Fragments":["erlang."]},{"Key":"the bit-shifting","Fragments":["idea,"]},{"Key":"bit-shifting idea,","Fragments":["@dane."]},{"Key":" added","Fragments":["specs"]},{"Key":" solved","Fragments":["using"]},{"Key":"solved using","Fragments":["list"]},{"Key":" better","Fragments":["bool"]},{"Key":"better bool","Fragments":["negation"]},{"Key":"the `is_divisible_by`","Fragments":["function"]},{"Key":"`is_divisible_by` function","Fragments":["by"]},{"Key":"function by","Fragments":["checking"]},{"Key":"checking equality","Fragments":["with"]},{"Key":"equality with","Fragments":["0"]},{"Key":"with 0","Fragments":["instead"]},{"Key":"0 instead","Fragments":["of"]},{"Key":"much optimized","Fragments":["for"]},{"Key":"optimized for","Fragments":["speed"]},{"Key":"for speed","Fragments":["*and*"]},{"Key":"speed *and*","Fragments":["readability."]},{"Key":"For even","Fragments":["more"]},{"Key":"more speed","Fragments":["I"]},{"Key":"speed I","Fragments":["could"]},{"Key":"have left","Fragments":["out"]},{"Key":"left out","Fragments":["the"]},{"Key":"and spelled","Fragments":["out"]},{"Key":"spelled out","Fragments":["the","the"]},{"Key":"each square","Fragments":["by"]},{"Key":"square by","Fragments":["hand,"]},{"Key":"by hand,","Fragments":["as"]},{"Key":"hand, as","Fragments":["there"]},{"Key":"as there","Fragments":["are"]},{"Key":"only 64","Fragments":["squares"]},{"Key":"64 squares","Fragments":["and"]},{"Key":"squares and","Fragments":["1"]},{"Key":"and 1","Fragments":["total."]},{"Key":"be useful","Fragments":["to","to"]},{"Key":"start adding","Fragments":["spec"]},{"Key":"adding spec","Fragments":["annotations."]},{"Key":"spec annotations.","Fragments":["My"]},{"Key":"annotations. My","Fragments":["understanding"]},{"Key":"My understanding","Fragments":["is","of"]},{"Key":"understanding is","Fragments":["that"]},{"Key":"that pros","Fragments":["suggest"]},{"Key":"pros suggest","Fragments":["that"]},{"Key":"suggest that","Fragments":["one"]},{"Key":"one start","Fragments":["with"]},{"Key":"these right","Fragments":["away"]},{"Key":"right away","Fragments":["instead"]},{"Key":"away instead","Fragments":["of"]},{"Key":"adding them","Fragments":["post-fact","to"]},{"Key":"them post-fact","Fragments":["when"]},{"Key":"post-fact when","Fragments":["trying"]},{"Key":"when trying","Fragments":["to"]},{"Key":"Would be","Fragments":["good"]},{"Key":"be good","Fragments":["to","to","too"]},{"Key":"into habit","Fragments":["of"]},{"Key":"to all","Fragments":["exported","exported"]},{"Key":"all exported","Fragments":["functions","functions?"]},{"Key":"functions (some","Fragments":["even"]},{"Key":"(some even","Fragments":["annotate"]},{"Key":"even annotate","Fragments":["all"]},{"Key":"annotate all","Fragments":["function)"]},{"Key":"you uploading","Fragments":["`leap_tests.erl`?"]},{"Key":"- You","Fragments":["cannot"]},{"Key":"You cannot","Fragments":["use"]},{"Key":"cannot use","Fragments":["`leap_year(X,400)`"]},{"Key":"use `leap_year(X,400)`","Fragments":["as"]},{"Key":"`leap_year(X,400)` as","Fragments":["a"]},{"Key":"only BIFs","Fragments":["are"]},{"Key":"BIFs are","Fragments":["allowed."]},{"Key":"- Missing","Fragments":["specs"]},{"Key":"Consider use","Fragments":["type"]},{"Key":"use type","Fragments":["vars"]},{"Key":"type vars","Fragments":["to"]},{"Key":"vars to","Fragments":["make"]},{"Key":"spec more","Fragments":["specific"]},{"Key":"specific as","Fragments":["we"]},{"Key":"we recently","Fragments":["learned"]},{"Key":"recently learned","Fragments":["to"]},{"Key":"learned to","Fragments":["do?"]},{"Key":"to do?","Fragments":["I.e."]},{"Key":"do? I.e.","Fragments":["`accumulate(fun((A)"]},{"Key":"I.e. `accumulate(fun((A)","Fragments":["-\u003e"]},{"Key":"`accumulate(fun((A) -\u003e","Fragments":["B),"]},{"Key":"-\u003e B),","Fragments":["[A])","list(A))","[A])"]},{"Key":"B), [A])","Fragments":["-\u003e","-\u003e"]},{"Key":"[A]) -\u003e","Fragments":["[B]`","[B]."]},{"Key":"point I","Fragments":["will"]},{"Key":" isn't","Fragments":["map"]},{"Key":"isn't map","Fragments":["better"]},{"Key":"map better","Fragments":["than"]},{"Key":"than ilst","Fragments":["comprehension"]},{"Key":"ilst comprehension","Fragments":["?"]},{"Key":"Add a","Fragments":["spec"]},{"Key":"I'm with","Fragments":["you"]},{"Key":"you regarding","Fragments":["the"]},{"Key":"the specs","Fragments":["and"]},{"Key":"that during","Fragments":["the"]},{"Key":"during the","Fragments":["week."]},{"Key":"But why","Fragments":["guards?"]},{"Key":"why guards?","Fragments":["Just"]},{"Key":"guards? Just","Fragments":["consider"]},{"Key":"Just consider","Fragments":["the"]},{"Key":"consider the","Fragments":["following","details"]},{"Key":"following snippet","Fragments":["beeing"]},{"Key":"snippet beeing","Fragments":["valid"]},{"Key":"beeing valid","Fragments":["syntax"]},{"Key":"valid syntax","Fragments":["(because","according"]},{"Key":"syntax (because","Fragments":["we"]},{"Key":"(because we","Fragments":["could"]},{"Key":"similar with","Fragments":["macros):"]},{"Key":" divides(M,","Fragments":["N)"]},{"Key":"divides(M, N)","Fragments":["-\u003e"]},{"Key":" M","Fragments":["rem"]},{"Key":"M rem","Fragments":["N"]},{"Key":"rem N","Fragments":["=="]},{"Key":"N ==","Fragments":["0."]},{"Key":" (divides(Year,","Fragments":["4))"]},{"Key":"(divides(Year, 4))","Fragments":["and","and"]},{"Key":"4)) and","Fragments":["(not","(not"]},{"Key":"and (not","Fragments":["divides(Year,","divides(Year,"]},{"Key":"(not divides(Year,","Fragments":["100))","100))"]},{"Key":"divides(Year, 100))","Fragments":["or","or"]},{"Key":"100)) or","Fragments":["(divides(Year,","(divides(Year,"]},{"Key":"or (divides(Year,","Fragments":["400))","400))"]},{"Key":"(divides(Year, 400))","Fragments":["-\u003e","of"]},{"Key":" lea_year(_Year)","Fragments":["-\u003e"]},{"Key":"lea_year(_Year) -\u003e","Fragments":["false."]},{"Key":"would compile","Fragments":["down"]},{"Key":"compile down","Fragments":["to"]},{"Key":"to something","Fragments":["like"]},{"Key":"case (divides(Year,","Fragments":["4))"]},{"Key":" Producing","Fragments":["something"]},{"Key":"Producing something","Fragments":["that"]},{"Key":"something that","Fragments":["smells","is"]},{"Key":"that smells","Fragments":["like"]},{"Key":"is strongly","Fragments":["discouraged"]},{"Key":"strongly discouraged","Fragments":["at"]},{"Key":"discouraged at","Fragments":["my"]},{"Key":"at my","Fragments":["university"]},{"Key":"my university","Fragments":["in"]},{"Key":"university in","Fragments":["any"]},{"Key":"any of","Fragments":["the","the","them?"]},{"Key":"the taught","Fragments":["languages"]},{"Key":"taught languages","Fragments":["(Pascal,"]},{"Key":"languages (Pascal,","Fragments":["Haskell,"]},{"Key":"(Pascal, Haskell,","Fragments":["Java,"]},{"Key":"Haskell, Java,","Fragments":["C,"]},{"Key":"Java, C,","Fragments":["JavaScript,"]},{"Key":"C, JavaScript,","Fragments":["PHP,"]},{"Key":"JavaScript, PHP,","Fragments":["and"]},{"Key":"PHP, and","Fragments":["anything"]},{"Key":"and anything","Fragments":["I"]},{"Key":"anything I","Fragments":["haven't"]},{"Key":"haven't had","Fragments":["lessons"]},{"Key":"had lessons","Fragments":["about,"]},{"Key":"lessons about,","Fragments":["still"]},{"Key":"about, still","Fragments":["3"]},{"Key":"still 3","Fragments":["semestres"]},{"Key":"3 semestres","Fragments":["to"]},{"Key":"semestres to","Fragments":["go),"]},{"Key":"to go),","Fragments":["so"]},{"Key":"go), so","Fragments":["I"]},{"Key":"I transfered","Fragments":["this"]},{"Key":"transfered this","Fragments":["discouragement"]},{"Key":"this discouragement","Fragments":["over"]},{"Key":"discouragement over","Fragments":["to"]},{"Key":"over to","Fragments":["erlang."]},{"Key":" Feel","Fragments":["free"]},{"Key":"Feel free","Fragments":["to"]},{"Key":"free to","Fragments":["convince"]},{"Key":"to convince","Fragments":["me,"]},{"Key":"convince me,","Fragments":["but"]},{"Key":"but currently","Fragments":["I"]},{"Key":"currently I","Fragments":["see"]},{"Key":"see guards","Fragments":["as"]},{"Key":"guards as","Fragments":["bad"]},{"Key":"as bad","Fragments":["style"]},{"Key":"bad style","Fragments":["in"]},{"Key":"style in","Fragments":["this"]},{"Key":"are like","Fragments":["contracts."]},{"Key":"like contracts.","Fragments":["If"]},{"Key":"contracts. If","Fragments":["everything"]},{"Key":"If everything","Fragments":["always"]},{"Key":"everything always","Fragments":["goes"]},{"Key":"always goes","Fragments":["perfectly"]},{"Key":"goes perfectly","Fragments":["we"]},{"Key":"perfectly we","Fragments":["don't"]},{"Key":"need them.","Fragments":["But"]},{"Key":"them. But","Fragments":["in"]},{"Key":"But in","Fragments":["reality"]},{"Key":"in reality","Fragments":["things"]},{"Key":"reality things","Fragments":["break"]},{"Key":"things break","Fragments":["and"]},{"Key":"break and","Fragments":["when"]},{"Key":"and when","Fragments":["they","instead"]},{"Key":"they do","Fragments":["the"]},{"Key":"contract **serves","Fragments":["to"]},{"Key":"**serves to","Fragments":["assign"]},{"Key":"So the","Fragments":["question"]},{"Key":"the question","Fragments":["is,","was"]},{"Key":"question is,","Fragments":["do"]},{"Key":"is, do","Fragments":["you"]},{"Key":"want your","Fragments":["code"]},{"Key":"break or","Fragments":["the"]},{"Key":"or the","Fragments":["code"]},{"Key":"code calling","Fragments":["you"]},{"Key":"calling you","Fragments":["to"]},{"Key":"break when","Fragments":["it"]},{"Key":"it feeds","Fragments":["you"]},{"Key":"feeds you","Fragments":["with"]},{"Key":"you with","Fragments":["bad"]},{"Key":"with bad","Fragments":["data?"]},{"Key":"bad data?","Fragments":["The"]},{"Key":"data? The","Fragments":["answer"]},{"Key":"caller should","Fragments":["break."]},{"Key":"should break.","Fragments":["That"]},{"Key":"break. That","Fragments":["way"]},{"Key":"way when","Fragments":["you"]},{"Key":"are looking","Fragments":["at","to"]},{"Key":"at a","Fragments":["stack","glance,"]},{"Key":"trace the","Fragments":["first"]},{"Key":"the trace","Fragments":["is"]},{"Key":"trace is","Fragments":["almost"]},{"Key":"almost immediately","Fragments":["relevant"]},{"Key":"immediately relevant","Fragments":["to"]},{"Key":"relevant to","Fragments":["your"]},{"Key":"your problem.","Fragments":["In"]},{"Key":"problem. In","Fragments":["other"]},{"Key":"other words","Fragments":["I"]},{"Key":"words I","Fragments":["don't"]},{"Key":"contract was","Fragments":["broken"]},{"Key":"was broken","Fragments":["by"]},{"Key":"broken by","Fragments":["the"]},{"Key":"I feed","Fragments":["bad"]},{"Key":"feed bad","Fragments":["data"]},{"Key":"bad data","Fragments":["to"]},{"Key":"data to","Fragments":["your"]},{"Key":"your `leap_year/1`","Fragments":["function"]},{"Key":"`leap_year/1` function","Fragments":["it"]},{"Key":"function it","Fragments":["will","is"]},{"Key":"will break","Fragments":["in"]},{"Key":"break in","Fragments":["`divide/2`."]},{"Key":"in `divide/2`.","Fragments":["If"]},{"Key":"`divide/2`. If","Fragments":["I"]},{"Key":"will go","Fragments":["look"]},{"Key":"go look","Fragments":["at"]},{"Key":"the `divide/2`","Fragments":["function"]},{"Key":"`divide/2` function","Fragments":["first"]},{"Key":"function first","Fragments":["and"]},{"Key":"first and","Fragments":["have","second"]},{"Key":"work my","Fragments":["way"]},{"Key":"way back","Fragments":["instead"]},{"Key":"back instead","Fragments":["of"]},{"Key":"just fixing","Fragments":["the"]},{"Key":"fixing the","Fragments":["caller"]},{"Key":"not defensive","Fragments":["programming"]},{"Key":"programming it's","Fragments":["failing"]},{"Key":"it's failing","Fragments":["fast."]},{"Key":"failing fast.","Fragments":["Defensive"]},{"Key":"fast. Defensive","Fragments":["programming"]},{"Key":"Defensive programming","Fragments":["would"]},{"Key":"programming would","Fragments":["mean"]},{"Key":"would mean","Fragments":["trying"]},{"Key":"mean trying","Fragments":["to"]},{"Key":"to recover","Fragments":["from"]},{"Key":"recover from","Fragments":["bad"]},{"Key":"from bad","Fragments":["data."]},{"Key":"The terminology","Fragments":["in"]},{"Key":"terminology in","Fragments":["Erlang"]},{"Key":"is Guard","Fragments":["(runtime"]},{"Key":"Guard (runtime","Fragments":["check)"]},{"Key":"(runtime check)","Fragments":["and"]},{"Key":"check) and","Fragments":["Spec"]},{"Key":"and Spec","Fragments":["(dialyzer"]},{"Key":"Spec (dialyzer","Fragments":["type"]},{"Key":"(dialyzer type","Fragments":["check"]},{"Key":"check or","Fragments":["typespec)."]},{"Key":" @ophelia","Fragments":["Consider"]},{"Key":"@ophelia Consider","Fragments":["adding"]},{"Key":"don't talk","Fragments":["about"]},{"Key":"that replaces","Fragments":["my"]},{"Key":"replaces my","Fragments":["calculation"]},{"Key":"my calculation","Fragments":["of"]},{"Key":"calculation of","Fragments":["the"]},{"Key":"return value,","Fragments":["but"]},{"Key":"but a","Fragments":["guard"]},{"Key":"that validates","Fragments":["input"]},{"Key":"validates input","Fragments":["like"]},{"Key":"input like","Fragments":["in"]},{"Key":" square(X)","Fragments":["when"]},{"Key":"square(X) when","Fragments":["is_integer(X)"]},{"Key":"when is_integer(X)","Fragments":["||"]},{"Key":"is_integer(X) ||","Fragments":["is_float(X)"]},{"Key":"|| is_float(X)","Fragments":["-\u003e"]},{"Key":"is_float(X) -\u003e","Fragments":["X"]},{"Key":"X *","Fragments":["X."]},{"Key":" Or,","Fragments":["other"]},{"Key":"Or, other","Fragments":["words:"]},{"Key":"other words:","Fragments":["runtime"]},{"Key":"words: runtime","Fragments":["checking"]},{"Key":"runtime checking","Fragments":["the"]},{"Key":"checking the","Fragments":["spec."]},{"Key":" @howard","Fragments":["How"]},{"Key":"@howard How","Fragments":["do"]},{"Key":"suggest to","Fragments":["use"]},{"Key":"the map?","Fragments":["I"]},{"Key":"map? I","Fragments":["don't"]},{"Key":" Hadn't","Fragments":["thought"]},{"Key":"Hadn't thought","Fragments":["bout"]},{"Key":"the ability","Fragments":["to"]},{"Key":"ability to","Fragments":["reuse"]},{"Key":"to reuse","Fragments":["method"]},{"Key":"reuse method","Fragments":["name"]},{"Key":"method name","Fragments":["with"]},{"Key":"with different","Fragments":["parameter"]},{"Key":"different parameter","Fragments":["set."]},{"Key":"parameter set.","Fragments":["Thanks!"]},{"Key":"set. Thanks!","Fragments":["I"]},{"Key":"learned something","Fragments":["today."]},{"Key":"This trades","Fragments":["simplicity"]},{"Key":"trades simplicity","Fragments":["for"]},{"Key":"simplicity for","Fragments":["stack"]},{"Key":"for stack","Fragments":["space."]},{"Key":"stack space.","Fragments":["Various"]},{"Key":"space. Various","Fragments":["other"]},{"Key":"Various other","Fragments":["solutions"]},{"Key":"solutions I","Fragments":["have","can"]},{"Key":"seen use","Fragments":["the"]},{"Key":"approach with","Fragments":["a","the"]},{"Key":"that has","Fragments":["an","a"]},{"Key":"an result","Fragments":["accumulator"]},{"Key":"result accumulator","Fragments":["and"]},{"Key":"a final","Fragments":["`lists:reverse`.","O(n)"]},{"Key":"is fine","Fragments":["for"]},{"Key":"fine for","Fragments":["an"]},{"Key":"an exercise","Fragments":["but"]},{"Key":"exercise but","Fragments":["maybe"]},{"Key":"but maybe","Fragments":["at"]},{"Key":"maybe at","Fragments":["least"]},{"Key":"least add","Fragments":["a"]},{"Key":"let readers","Fragments":["know"]},{"Key":"readers know","Fragments":["about"]},{"Key":"the shortcomings.","Fragments":["In"]},{"Key":"shortcomings. In","Fragments":["real"]},{"Key":"real life","Fragments":["one'd"]},{"Key":"life one'd","Fragments":["use"]},{"Key":"one'd use","Fragments":["`lists:map`"]},{"Key":"use `lists:map`","Fragments":["of"]},{"Key":"`lists:map` of","Fragments":["course..."]},{"Key":" Of","Fragments":["course","course"]},{"Key":"are right","Fragments":["about","I"]},{"Key":"right about","Fragments":["stack-space.","`string:strip`"]},{"Key":"about stack-space.","Fragments":["I"]},{"Key":"stack-space. I","Fragments":["haven't"]},{"Key":"haven't thought","Fragments":["about"]},{"Key":"about that,","Fragments":["because"]},{"Key":"that, because","Fragments":["most"]},{"Key":"because most","Fragments":["of"]},{"Key":"my FP","Fragments":["experience"]},{"Key":"FP experience","Fragments":["so"]},{"Key":"experience so","Fragments":["far"]},{"Key":"far was","Fragments":["gained"]},{"Key":"was gained","Fragments":["in"]},{"Key":"gained in","Fragments":["Haskell,"]},{"Key":"in Haskell,","Fragments":["where"]},{"Key":"Haskell, where","Fragments":["mapping"]},{"Key":"where mapping","Fragments":["a"]},{"Key":"function over","Fragments":["a"]},{"Key":"over a","Fragments":["list","function"]},{"Key":"defined like","Fragments":["this"]},{"Key":"stack problems","Fragments":["don't"]},{"Key":"problems don't","Fragments":["happen"]},{"Key":"don't happen","Fragments":["there"]},{"Key":"happen there","Fragments":["because"]},{"Key":"there because","Fragments":["of"]},{"Key":"of its","Fragments":["lazyness."]},{"Key":" http://erlang.org/doc/reference_manual/typespec.html","Fragments":["mentions"]},{"Key":"http://erlang.org/doc/reference_manual/typespec.html mentions","Fragments":["these"]},{"Key":"mentions these","Fragments":["things"]},{"Key":"these things","Fragments":["IIRC."]},{"Key":"read so","Fragments":["much"]},{"Key":"much (a","Fragments":["little"]},{"Key":"(a little","Fragments":["bit"]},{"Key":"bit in","Fragments":["lots"]},{"Key":"in lots","Fragments":["of"]},{"Key":"of places)","Fragments":["that"]},{"Key":"places) that","Fragments":["it"]},{"Key":"Very interesting!","Fragments":["Where"]},{"Key":"interesting! Where","Fragments":["did"]},{"Key":"Where did","Fragments":["you"]},{"Key":"find out","Fragments":["about"]},{"Key":"out about","Fragments":["this","three","three"]},{"Key":"this `fun((A)-\u003eB),","Fragments":["list(A)`"]},{"Key":"`fun((A)-\u003eB), list(A)`","Fragments":["?"]},{"Key":" @christophe","Fragments":["Nice."]},{"Key":"@christophe Nice.","Fragments":["I"]},{"Key":"just found","Fragments":["it."]},{"Key":"This exercism","Fragments":["thing"]},{"Key":"exercism thing","Fragments":["really"]},{"Key":"thing really","Fragments":["works"]},{"Key":"really works","Fragments":["I"]},{"Key":"works I","Fragments":["am"]},{"Key":"am learning","Fragments":["a"]},{"Key":"learning a","Fragments":["bunch"]},{"Key":"of new","Fragments":["tricks."]},{"Key":" Lots","Fragments":["of"]},{"Key":"Lots of","Fragments":["solutions"]},{"Key":"of solutions","Fragments":["here"]},{"Key":"solutions here","Fragments":["prepend"]},{"Key":"here prepend","Fragments":["the"]},{"Key":"to accumulator","Fragments":["and","and"]},{"Key":"and reverse","Fragments":["it"]},{"Key":"reverse it","Fragments":["in"]},{"Key":"last step.","Fragments":["What","Is"]},{"Key":"step. What","Fragments":["is"]},{"Key":"What is","Fragments":["the"]},{"Key":"reason for","Fragments":["that?","making"]},{"Key":"for that?","Fragments":["I"]},{"Key":"that? I","Fragments":["would"]},{"Key":"would just","Fragments":["go"]},{"Key":"just go","Fragments":["for"]},{"Key":"go for","Fragments":["appending"]},{"Key":"for appending","Fragments":["to"]},{"Key":"and returning","Fragments":["it"]},{"Key":"returning it","Fragments":["in"]},{"Key":"step. Is","Fragments":["there"]},{"Key":"any drawback","Fragments":["to"]},{"Key":"drawback to","Fragments":["this"]},{"Key":" @vidal:","Fragments":["That"]},{"Key":"@vidal: That","Fragments":["is"]},{"Key":"valid solution","Fragments":["but"]},{"Key":"solution but","Fragments":["an","I"]},{"Key":"but an","Fragments":["inefficient"]},{"Key":"an inefficient","Fragments":["one."]},{"Key":" Concatenating","Fragments":["two"]},{"Key":"Concatenating two","Fragments":["list"]},{"Key":"two list","Fragments":["(and"]},{"Key":"list (and","Fragments":["appending"]},{"Key":"(and appending","Fragments":["an"]},{"Key":"appending an","Fragments":["element"]},{"Key":"an element","Fragments":["at"]},{"Key":"element at","Fragments":["the"]},{"Key":"of another","Fragments":["list"]},{"Key":"another list","Fragments":["is"]},{"Key":"that effectively)","Fragments":["has"]},{"Key":"effectively) has","Fragments":["to"]},{"Key":"to iterate","Fragments":["over"]},{"Key":"iterate over","Fragments":["all"]},{"Key":"over all","Fragments":["elements"]},{"Key":"all elements","Fragments":["of"]},{"Key":"elements of","Fragments":["the"]},{"Key":"list (i.e.","Fragments":["it's"]},{"Key":"(i.e. it's","Fragments":["O(n)"]},{"Key":"it's O(n)","Fragments":["in"]},{"Key":"O(n) in","Fragments":["the","Erlang,"]},{"Key":"the usual","Fragments":["complexity"]},{"Key":"usual complexity","Fragments":["notation)."]},{"Key":"complexity notation).","Fragments":["if"]},{"Key":"notation). if","Fragments":["you"]},{"Key":"list your","Fragments":["operation"]},{"Key":"your operation","Fragments":["is"]},{"Key":"operation is","Fragments":["then"]},{"Key":"is then","Fragments":["quadratic"]},{"Key":"then quadratic","Fragments":["in"]},{"Key":"quadratic in","Fragments":["performance,"]},{"Key":"in performance,","Fragments":["i.e."]},{"Key":"performance, i.e.","Fragments":["O(n²)."]},{"Key":"i.e. O(n²).","Fragments":["For"]},{"Key":"O(n²). For","Fragments":["short"]},{"Key":"For short","Fragments":["inputs"]},{"Key":"short inputs","Fragments":["your"]},{"Key":"inputs your","Fragments":["algorithm"]},{"Key":"be fine","Fragments":["but"]},{"Key":"fine but","Fragments":["the"]},{"Key":"the longer","Fragments":["the"]},{"Key":"longer the","Fragments":["input"]},{"Key":"input the","Fragments":["slower"]},{"Key":"the slower","Fragments":["calculation."]},{"Key":"Doing a","Fragments":["pre-prending"]},{"Key":"a pre-prending","Fragments":["to"]},{"Key":"pre-prending to","Fragments":["a"]},{"Key":"list takes","Fragments":["constant"]},{"Key":"takes constant","Fragments":["time"]},{"Key":"constant time","Fragments":["(i.e."]},{"Key":"time (i.e.","Fragments":["O(1)"]},{"Key":"(i.e. O(1)","Fragments":[")."]},{"Key":"O(1) ).","Fragments":["You"]},{"Key":"). You","Fragments":["do"]},{"Key":"that once","Fragments":["for"]},{"Key":"each list","Fragments":["element,"]},{"Key":"list element,","Fragments":["i.e."]},{"Key":"element, i.e.","Fragments":["the"]},{"Key":"i.e. the","Fragments":["total"]},{"Key":"total is","Fragments":["O(n)."]},{"Key":"is O(n).","Fragments":["After"]},{"Key":"O(n). After","Fragments":["that"]},{"Key":"After that","Fragments":["you"]},{"Key":"you reverse","Fragments":["the"]},{"Key":"list which","Fragments":["is"]},{"Key":"also an","Fragments":["O(n)"]},{"Key":"O(n) operation,","Fragments":["so"]},{"Key":"operation, so","Fragments":["you"]},{"Key":"do two","Fragments":["O(n)"]},{"Key":"two O(n)","Fragments":["operations"]},{"Key":"O(n) operations","Fragments":["which"]},{"Key":"operations which","Fragments":["altogether"]},{"Key":"which altogether","Fragments":["is"]},{"Key":"altogether is","Fragments":["still"]},{"Key":"still only","Fragments":["O(n)."]},{"Key":" So,","Fragments":["this"]},{"Key":"So, this","Fragments":["will"]},{"Key":"get slower","Fragments":["with"]},{"Key":"slower with","Fragments":["longer"]},{"Key":"with longer","Fragments":["inputs"]},{"Key":"longer inputs","Fragments":["as"]},{"Key":"inputs as","Fragments":["well,"]},{"Key":"as well,","Fragments":["but","since","but"]},{"Key":"well, but","Fragments":["it","didn't"]},{"Key":"will increase","Fragments":["linear"]},{"Key":"increase linear","Fragments":["with"]},{"Key":"linear with","Fragments":["the"]},{"Key":"input size","Fragments":["not"]},{"Key":"size not","Fragments":["quadratic"]},{"Key":"not quadratic","Fragments":["like"]},{"Key":"quadratic like","Fragments":["your"]},{"Key":"your proposed","Fragments":["solution."]},{"Key":" You'll","Fragments":["find"]},{"Key":"You'll find","Fragments":["that"]},{"Key":"that Haskell","Fragments":["people"]},{"Key":"Haskell people","Fragments":["etc."]},{"Key":"people etc.","Fragments":["tend"]},{"Key":"etc. tend","Fragments":["to"]},{"Key":"the append","Fragments":["solution"]},{"Key":"append solution","Fragments":["since"]},{"Key":"solution since","Fragments":["the"]},{"Key":"the non-eager","Fragments":["evaluation"]},{"Key":"non-eager evaluation","Fragments":["of"]},{"Key":"evaluation of","Fragments":["Haskell"]},{"Key":"of Haskell","Fragments":["makes"]},{"Key":"Haskell makes","Fragments":["that"]},{"Key":"makes that","Fragments":["a"]},{"Key":"a feasible,","Fragments":["O(n)"]},{"Key":"feasible, O(n)","Fragments":["operation."]},{"Key":"Yeah, without","Fragments":["any"]},{"Key":"without any","Fragments":["other"]},{"Key":"other spec/info","Fragments":["I"]},{"Key":"spec/info I","Fragments":["guess"]},{"Key":"guess the","Fragments":["best"]},{"Key":"best practice","Fragments":["would"]},{"Key":"practice would","Fragments":["be"]},{"Key":"more strict","Fragments":["about"]},{"Key":"strict about","Fragments":["input."]},{"Key":"about input.","Fragments":["I"]},{"Key":"input. I","Fragments":["guess"]},{"Key":"guess in","Fragments":["this"]},{"Key":"case one","Fragments":["should"]},{"Key":"one should","Fragments":["also"]},{"Key":"should also","Fragments":["guard","be"]},{"Key":"also guard","Fragments":["against"]},{"Key":"against negative","Fragments":["numbers."]},{"Key":"really want","Fragments":["to"]},{"Key":"return `false`","Fragments":["on"]},{"Key":"`false` on","Fragments":["`leap_year(\"foo\")`?"]},{"Key":"This fails","Fragments":["the"]},{"Key":"fails the","Fragments":["hidden"]},{"Key":"the hidden","Fragments":["challenge."]},{"Key":"hidden challenge.","Fragments":["I"]},{"Key":"challenge. I","Fragments":["haven't"]},{"Key":"haven't noticed","Fragments":["that"]},{"Key":"noticed that","Fragments":["before","some"]},{"Key":" Adding","Fragments":["some","specs"]},{"Key":"Adding some","Fragments":["comments"]},{"Key":"some comments","Fragments":["explaining","what"]},{"Key":"comments explaining","Fragments":["the"]},{"Key":"the maths","Fragments":["would"]},{"Key":"maths would","Fragments":["help"]},{"Key":"help the","Fragments":["general"]},{"Key":"general reader","Fragments":["who"]},{"Key":"reader who","Fragments":["doesn't"]},{"Key":"who doesn't","Fragments":["have"]},{"Key":"have binary","Fragments":["maths"]},{"Key":"binary maths","Fragments":["readily"]},{"Key":"maths readily","Fragments":["available"]},{"Key":"readily available","Fragments":["in"]},{"Key":"in their","Fragments":["head."]},{"Key":" @rahsaan","Fragments":["Nice"]},{"Key":"@rahsaan Nice","Fragments":["but"]},{"Key":"Nice but","Fragments":["you"]},{"Key":"could really","Fragments":["improve"]},{"Key":"really improve","Fragments":["it"]},{"Key":"for dialyzer","Fragments":["and","and","typespecs."]},{"Key":"dialyzer and","Fragments":["adding","the","perhaps"]},{"Key":"and adding","Fragments":["fail"]},{"Key":"adding fail","Fragments":["fast"]},{"Key":"fast guards","Fragments":["for"]},{"Key":" @jonatan,","Fragments":["I'm"]},{"Key":"@jonatan, I'm","Fragments":["doing"]},{"Key":"doing these","Fragments":["exercises"]},{"Key":"these exercises","Fragments":["while"]},{"Key":"exercises while","Fragments":["reading"]},{"Key":"while reading","Fragments":["Learn"]},{"Key":"reading Learn","Fragments":["You"]},{"Key":"Erlang so","Fragments":["I"]},{"Key":"can forgive","Fragments":["me"]},{"Key":"forgive me","Fragments":["if"]},{"Key":"I ignore","Fragments":["Dialyzer"]},{"Key":"ignore Dialyzer","Fragments":["for"]},{"Key":"Dialyzer for","Fragments":["now."]},{"Key":"for now.","Fragments":["Could"]},{"Key":"now. Could","Fragments":["you"]},{"Key":"you elaborate","Fragments":["on"]},{"Key":"elaborate on","Fragments":["\"fail"]},{"Key":"on \"fail","Fragments":["fast"]},{"Key":"\"fail fast","Fragments":["guards\"?"]},{"Key":"fast guards\"?","Fragments":["Are"]},{"Key":"guards\"? Are","Fragments":["you"]},{"Key":"you referring","Fragments":["to"]},{"Key":"referring to","Fragments":["some"]},{"Key":"some sort","Fragments":["of"]},{"Key":"type test?","Fragments":["Thank"]},{"Key":"test? Thank","Fragments":["you"]},{"Key":" @trinity","Fragments":["Yes"]},{"Key":"@trinity Yes","Fragments":["essentially"]},{"Key":"Yes essentially","Fragments":["you"]},{"Key":"essentially you","Fragments":["want"]},{"Key":"possible whenever","Fragments":["invalid"]},{"Key":"whenever invalid","Fragments":["input"]},{"Key":"is passed","Fragments":["(you"]},{"Key":"passed (you","Fragments":["can"]},{"Key":"(you can","Fragments":["add"]},{"Key":"add something","Fragments":["like"]},{"Key":"like `when","Fragments":["is_integer(Year)`)."]},{"Key":"`when is_integer(Year)`).","Fragments":["Like"]},{"Key":"is_integer(Year)`). Like","Fragments":["a"]},{"Key":"Like a","Fragments":["contract"]},{"Key":"a contract","Fragments":["it"]},{"Key":"contract it","Fragments":["allows"]},{"Key":"it allows","Fragments":["you"]},{"Key":"allows you","Fragments":["to"]},{"Key":"assign blame.","Fragments":["The"]},{"Key":"blame. The","Fragments":["blame"]},{"Key":"The blame","Fragments":["in"]},{"Key":"blame in","Fragments":["this"]},{"Key":"case should","Fragments":["be"]},{"Key":"be pointing","Fragments":["to"]},{"Key":"pointing to","Fragments":["the"]},{"Key":"second iteration","Fragments":["(it's"]},{"Key":"iteration (it's","Fragments":["certainly"]},{"Key":"(it's certainly","Fragments":["less"]},{"Key":"certainly less","Fragments":["efficient)"]},{"Key":"less efficient)","Fragments":["but"]},{"Key":"efficient) but","Fragments":["I"]},{"Key":"like with","Fragments":["the"]},{"Key":"with both","Fragments":["comments."]},{"Key":" `is_divider`","Fragments":["sounds"]},{"Key":"`is_divider` sounds","Fragments":["like"]},{"Key":"predicate but","Fragments":["is"]},{"Key":"function returning","Fragments":["an"]},{"Key":"an integer","Fragments":["instead","range"]},{"Key":"integer instead","Fragments":["of"]},{"Key":"Maybe add","Fragments":["a"]},{"Key":"that `N`","Fragments":["/"]},{"Key":"`N` /","Fragments":["`Number`"]},{"Key":"/ `Number`","Fragments":["strictly"]},{"Key":"`Number` strictly","Fragments":["positive"]},{"Key":"strictly positive","Fragments":["or"]},{"Key":"positive or","Fragments":["your"]},{"Key":"or your","Fragments":["\"loop\""]},{"Key":"your \"loop\"","Fragments":["will"]},{"Key":"\"loop\" will","Fragments":["never"]},{"Key":" Exported","Fragments":["functions"]},{"Key":"Exported functions","Fragments":["should"]},{"Key":"functions should","Fragments":["have"]},{"Key":"have exported","Fragments":["types."]},{"Key":"exported types.","Fragments":["Thats"]},{"Key":"types. Thats","Fragments":["my"]},{"Key":"Thats my","Fragments":["opinion,"]},{"Key":"opinion, I","Fragments":["just"]},{"Key":"just forgot","Fragments":["that"]},{"Key":"forgot that","Fragments":["line."]},{"Key":"What I","Fragments":["am"]},{"Key":"about is,","Fragments":["if"]},{"Key":"is, if","Fragments":["they"]},{"Key":"they should","Fragments":["be"]},{"Key":"exported as","Fragments":["`-type`","a"]},{"Key":"as `-type`","Fragments":["or"]},{"Key":"`-type` or","Fragments":["as"]},{"Key":" @braden","Fragments":["I"]},{"Key":"@braden I","Fragments":["think"]},{"Key":"type because","Fragments":["there"]},{"Key":"isn't really","Fragments":["any"]},{"Key":"really any","Fragments":["reason"]},{"Key":"any reason","Fragments":["to","why"]},{"Key":"reason to","Fragments":["discourage"]},{"Key":"to discourage","Fragments":["modification"]},{"Key":"discourage modification","Fragments":["of"]},{"Key":"modification of","Fragments":["the"]},{"Key":"sequence outside","Fragments":["of"]},{"Key":"outside of","Fragments":["the"]},{"Key":"right. But","Fragments":["this"]},{"Key":"a small","Fragments":["issue"]},{"Key":"small issue","Fragments":["that"]},{"Key":"won't iterate,","Fragments":["just"]},{"Key":"iterate, just","Fragments":["imagine"]},{"Key":"just imagine","Fragments":["a"]},{"Key":" -export_type([rna/0,","Fragments":["dna/0,"]},{"Key":"-export_type([rna/0, dna/0,","Fragments":["rna_nucleotide/0,"]},{"Key":"dna/0, rna_nucleotide/0,","Fragments":["dna_nucleotide/0])."]},{"Key":"Yeah, that","Fragments":["is"]},{"Key":"a somewhat","Fragments":["hairy"]},{"Key":"somewhat hairy","Fragments":["issue"]},{"Key":"hairy issue","Fragments":["you"]},{"Key":"issue you","Fragments":["address"]},{"Key":"you address","Fragments":["here."]},{"Key":"address here.","Fragments":["I'm"]},{"Key":"here. I'm","Fragments":["not"]},{"Key":"not allowed","Fragments":["to"]},{"Key":"write `$X`","Fragments":["in"]},{"Key":"`$X` in","Fragments":["the"]},{"Key":"typespec but","Fragments":["it"]},{"Key":"be accepted","Fragments":["by"]},{"Key":"accepted by","Fragments":["`dialyzer`"]},{"Key":"by `dialyzer`","Fragments":["as"]},{"Key":"`dialyzer` as","Fragments":["return"]},{"Key":"as return","Fragments":["value"]},{"Key":"function. Still","Fragments":["I"]},{"Key":"Still I","Fragments":["think,"]},{"Key":"think, human","Fragments":["have"]},{"Key":"human have","Fragments":["less"]},{"Key":"less issues","Fragments":["to"]},{"Key":"issues to","Fragments":["confirm"]},{"Key":"to confirm","Fragments":["typecorrectness"]},{"Key":"confirm typecorrectness","Fragments":["of"]},{"Key":"typecorrectness of","Fragments":["the"]},{"Key":"code when","Fragments":["returnvalue"]},{"Key":"when returnvalue","Fragments":["and"]},{"Key":"returnvalue and","Fragments":["types"]},{"Key":"and types","Fragments":["are"]},{"Key":"types are","Fragments":["spelled"]},{"Key":"are spelled","Fragments":["out"]},{"Key":"see `16#47`","Fragments":["is"]},{"Key":"`16#47` is","Fragments":["the"]},{"Key":"as `16#47`","Fragments":["at"]},{"Key":"`16#47` at","Fragments":["a"]},{"Key":"a glance,","Fragments":["but"]},{"Key":"glance, but","Fragments":["when"]},{"Key":"but when","Fragments":["you"]},{"Key":"you encounter","Fragments":["`$G`"]},{"Key":"encounter `$G`","Fragments":["you"]},{"Key":"`$G` you","Fragments":["need"]},{"Key":"think or","Fragments":["lookup"]},{"Key":"or lookup","Fragments":["if"]},{"Key":"lookup if","Fragments":["it"]},{"Key":"really matches","Fragments":["one"]},{"Key":"matches one","Fragments":["of"]},{"Key":"the given","Fragments":["types.","input"]},{"Key":"love the","Fragments":["way"]},{"Key":"type declaration","Fragments":["is"]},{"Key":"declaration is","Fragments":["formatted."]},{"Key":"different submission","Fragments":["the"]},{"Key":"submission the","Fragments":["question"]},{"Key":"question was","Fragments":["raised"]},{"Key":"was raised","Fragments":["whether"]},{"Key":"raised whether","Fragments":["the"]},{"Key":"whether the","Fragments":["types"]},{"Key":"types should","Fragments":["also"]},{"Key":"be exported.","Fragments":["Any"]},{"Key":"exported. Any","Fragments":["opinion"]},{"Key":"Any opinion","Fragments":["on"]},{"Key":" $G","Fragments":["would","-\u003e"]},{"Key":"$G would","Fragments":["be"]},{"Key":"better instead","Fragments":["of"]},{"Key":"Add typespec,","Fragments":["improve"]},{"Key":"typespec, improve","Fragments":["efficiency,"]},{"Key":"improve efficiency,","Fragments":["add"]},{"Key":"efficiency, add","Fragments":["guard"]},{"Key":"add guard","Fragments":["for"]},{"Key":"for catch","Fragments":["all."]},{"Key":"* Using","Fragments":["a"]},{"Key":"that gains","Fragments":["profit"]},{"Key":"gains profit","Fragments":["from"]},{"Key":"profit from","Fragments":["TCO"]},{"Key":"from TCO","Fragments":["and"]},{"Key":"TCO and","Fragments":["saves"]},{"Key":"and saves","Fragments":["stack"]},{"Key":"saves stack","Fragments":["space"]},{"Key":"a `-spec`","Fragments":["at"]},{"Key":"`-spec` at","Fragments":["least"]},{"Key":"least to","Fragments":["exported"]},{"Key":"to exported","Fragments":["functions","functions"]},{"Key":"* Is","Fragments":["there"]},{"Key":"you exported","Fragments":["`rna_it/1`?"]},{"Key":"Thanks @juliet,","Fragments":["I'm"]},{"Key":"@juliet, I'm","Fragments":["just"]},{"Key":"just getting","Fragments":["into"]},{"Key":"into understanding","Fragments":["dialyzer"]},{"Key":"understanding dialyzer","Fragments":["and"]},{"Key":"the like.","Fragments":["Will"]},{"Key":"like. Will","Fragments":["add"]},{"Key":"Will add","Fragments":["specs."]},{"Key":" @juliet,","Fragments":["what"]},{"Key":"@juliet, what","Fragments":["is"]},{"Key":"the benefit","Fragments":["of"]},{"Key":"benefit of","Fragments":["using"]},{"Key":"map over","Fragments":["a"]},{"Key":" @kyra","Fragments":["/"]},{"Key":"@kyra /","Fragments":["@kyra"]},{"Key":"/ @kyra","Fragments":["can"]},{"Key":"@kyra can","Fragments":["you"]},{"Key":"to documentation","Fragments":["on"]},{"Key":"documentation on","Fragments":["`spec`","dialyzer?"]},{"Key":"on `spec`","Fragments":["?"]},{"Key":"Added guards","Fragments":["to"]},{"Key":"of `F`","Fragments":["and"]},{"Key":"`F` and","Fragments":["`List`."]},{"Key":" Quoting","Fragments":["from"]},{"Key":"Quoting from","Fragments":["the"]},{"Key":"\u003e Keep","Fragments":["your"]},{"Key":"that filter/reject/whatchamacallit","Fragments":["functionality","functionality"]},{"Key":"filter/reject/whatchamacallit functionality","Fragments":["provided","provided"]},{"Key":"functionality provided","Fragments":["by","by"]},{"Key":"standard library!","Fragments":["Solve","Solve"]},{"Key":"library! Solve","Fragments":["this","this"]},{"Key":" anyone","Fragments":["know"]},{"Key":"anyone know","Fragments":["how"]},{"Key":"the regex","Fragments":["\\p{L}"]},{"Key":"regex \\p{L}","Fragments":["to"]},{"Key":"\\p{L} to","Fragments":["work"]},{"Key":"work in","Fragments":["erlang?","the"]},{"Key":"erlang? My","Fragments":["attempts"]},{"Key":"My attempts","Fragments":["are"]},{"Key":"attempts are","Fragments":["failing"]},{"Key":"are failing","Fragments":["while"]},{"Key":"failing while","Fragments":["trying"]},{"Key":"while trying","Fragments":["to"]},{"Key":"the replace","Fragments":["method."]},{"Key":"replace method.","Fragments":["It"]},{"Key":"method. It","Fragments":["just","seems"]},{"Key":"It just","Fragments":["spaces"]},{"Key":"just spaces","Fragments":["the"]},{"Key":"spaces the","Fragments":["whole"]},{"Key":" @cordia","Fragments":["Very"]},{"Key":"@cordia Very","Fragments":["nice"]},{"Key":"and clean","Fragments":["solution."]},{"Key":"solution. Did","Fragments":["you"]},{"Key":"you try","Fragments":["uncommenting"]},{"Key":"try uncommenting","Fragments":["the"]},{"Key":"uncommenting the","Fragments":["extra"]},{"Key":"I rarely","Fragments":["look","use"]},{"Key":"rarely look","Fragments":["into"]},{"Key":" Give","Fragments":["me"]},{"Key":"Give me","Fragments":["a"]},{"Key":"don't get","Fragments":["it"]},{"Key":"get it","Fragments":["right","into"]},{"Key":"right now.","Fragments":["Perhaps"]},{"Key":"now. Perhaps","Fragments":["another"]},{"Key":"Perhaps another","Fragments":["day…"]},{"Key":"It's too","Fragments":["bad"]},{"Key":"bad Erlang","Fragments":["doesn't"]},{"Key":"an easy","Fragments":["way"]},{"Key":"easy way","Fragments":["to"]},{"Key":"to infix","Fragments":["a"]},{"Key":"infix a","Fragments":["function,"]},{"Key":"a function,","Fragments":["like"]},{"Key":"function, like","Fragments":["Haskell:"]},{"Key":" 4","Fragments":["`divides`"]},{"Key":"4 `divides`","Fragments":["Year"]},{"Key":" since","Fragments":["that"]},{"Key":"since that","Fragments":["would"]},{"Key":"help this","Fragments":["function"]},{"Key":"function naming","Fragments":["read"]},{"Key":"naming read","Fragments":["better."]},{"Key":" Thanks,","Fragments":["will","that's","you're"]},{"Key":"Thanks, will","Fragments":["check"]},{"Key":"will check","Fragments":["it"]},{"Key":"check it","Fragments":["out!"]},{"Key":" @sierra","Fragments":["Looks"]},{"Key":"@sierra Looks","Fragments":["good"]},{"Key":"good how","Fragments":["about"]},{"Key":"adding some","Fragments":["specs","`-spec`s?"]},{"Key":"some specs","Fragments":["for"]},{"Key":"perhaps some","Fragments":["guards"]},{"Key":"guards (at","Fragments":["least"]},{"Key":"haven't use","Fragments":["dialyzer"]},{"Key":"use dialyzer","Fragments":["yet,"]},{"Key":"dialyzer yet,","Fragments":["I'll"]},{"Key":"yet, I'll","Fragments":["check"]},{"Key":"I'll check","Fragments":["that"]},{"Key":"What kinds","Fragments":["of"]},{"Key":"kinds of","Fragments":["guards","generalizations"]},{"Key":"of guards","Fragments":["for"]},{"Key":"for `response_for/1`?","Fragments":["All"]},{"Key":"`response_for/1`? All","Fragments":["I"]},{"Key":"All I","Fragments":["can"]},{"Key":"of it","Fragments":["making","here"]},{"Key":"it making","Fragments":["sure"]},{"Key":"making sure","Fragments":["it's"]},{"Key":"it's some","Fragments":["kind"]},{"Key":"some kind","Fragments":["of"]},{"Key":" @santina","Fragments":["If"]},{"Key":"@santina If","Fragments":["you"]},{"Key":"expect type","Fragments":["`string()`"]},{"Key":"type `string()`","Fragments":["then"]},{"Key":"`string()` then","Fragments":["check"]},{"Key":"then check","Fragments":["that"]},{"Key":"with `is_list/1`","Fragments":["of"]},{"Key":"`is_list/1` of","Fragments":["your"]},{"Key":"exported function.","Fragments":["See"]},{"Key":"function. See","Fragments":["http://erlang.org/doc/reference_manual/typespec.html"]},{"Key":"See http://erlang.org/doc/reference_manual/typespec.html","Fragments":["for"]},{"Key":"http://erlang.org/doc/reference_manual/typespec.html for","Fragments":["dialyzer"]},{"Key":"most readable","Fragments":["piece"]},{"Key":"readable piece","Fragments":["of"]},{"Key":"code I","Fragments":["have"]},{"Key":"have ever","Fragments":["seen"]},{"Key":"ever seen","Fragments":["in"]},{"Key":"seen in","Fragments":["my"]},{"Key":"This script","Fragments":["crashes"]},{"Key":"script crashes","Fragments":["the"]},{"Key":"crashes the","Fragments":["interpreter,"]},{"Key":"the interpreter,","Fragments":["but"]},{"Key":"interpreter, but","Fragments":["only"]},{"Key":"only after","Fragments":["passing"]},{"Key":"after passing","Fragments":["all"]},{"Key":"passing all","Fragments":["four"]},{"Key":"all four","Fragments":["tests..."]},{"Key":"four tests...","Fragments":["Anyone"]},{"Key":"tests... Anyone","Fragments":["know"]},{"Key":"Anyone know","Fragments":["why?"]},{"Key":"No problems","Fragments":["here."]},{"Key":"problems here.","Fragments":["I"]},{"Key":"here. I","Fragments":["am"]},{"Key":"am running","Fragments":["Erlang"]},{"Key":"running Erlang","Fragments":["18"]},{"Key":"Erlang 18","Fragments":["on"]},{"Key":"18 on","Fragments":["Mac"]},{"Key":"on Mac","Fragments":["OS"]},{"Key":"Mac OS","Fragments":["X"]},{"Key":"Thank you.","Fragments":["I've"]},{"Key":"you. I've","Fragments":["already"]},{"Key":"I've already","Fragments":["included"]},{"Key":"already included","Fragments":["typespecs"]},{"Key":"included typespecs","Fragments":["in"]},{"Key":"typespecs in","Fragments":["a"]},{"Key":"few other","Fragments":["submissions;"]},{"Key":"other submissions;","Fragments":["i'll"]},{"Key":"submissions; i'll","Fragments":["update"]},{"Key":"i'll update","Fragments":["this"]},{"Key":"update this","Fragments":["one"]},{"Key":" @ron","Fragments":["For"]},{"Key":"@ron For","Fragments":["typespecs"]},{"Key":"For typespecs","Fragments":["take"]},{"Key":"typespecs take","Fragments":["a"]},{"Key":"at http://erlang.org/doc/reference_manual/typespec.html","Fragments":["and"]},{"Key":"http://erlang.org/doc/reference_manual/typespec.html and","Fragments":["http://learnyousomeerlang.com/dialyzer"]},{"Key":"and http://learnyousomeerlang.com/dialyzer","Fragments":["."]},{"Key":"straight forward,","Fragments":["but","but"]},{"Key":"forward, but","Fragments":["it","it"]},{"Key":" Although","Fragments":["this","this"]},{"Key":"Although this","Fragments":["might","might"]},{"Key":"this might","Fragments":["not","not"]},{"Key":"really matter","Fragments":["a","a"]},{"Key":"matter a","Fragments":["lot","lot"]},{"Key":"lot on","Fragments":["today's","today's"]},{"Key":"on today's","Fragments":["fast","fast"]},{"Key":"today's fast","Fragments":["machines,","machines,"]},{"Key":"fast machines,","Fragments":["but","but"]},{"Key":"machines, but","Fragments":["this","this"]},{"Key":"code (which","Fragments":["is","is"]},{"Key":"is what","Fragments":["I","I"]},{"Key":"had done","Fragments":["in","in"]},{"Key":"done in","Fragments":["my","my"]},{"Key":"first iteration","Fragments":["too)","too)"]},{"Key":"iteration too)","Fragments":["will","will"]},{"Key":"too) will","Fragments":["almost","almost"]},{"Key":"will almost","Fragments":["always","always"]},{"Key":"always do","Fragments":["three","three"]},{"Key":"three division","Fragments":["operations","operations"]},{"Key":"division operations","Fragments":["to","to"]},{"Key":"operations to","Fragments":["test","test"]},{"Key":"for leap","Fragments":["year.","year."]},{"Key":"A more","Fragments":["efficient","efficient"]},{"Key":"efficient approach","Fragments":["according","according"]},{"Key":"approach according","Fragments":["to","to"]},{"Key":"according to","Fragments":["me","your","the","me"]},{"Key":"start checking","Fragments":["with","with"]},{"Key":"checking with","Fragments":["4.","4."]},{"Key":"with 4.","Fragments":["That","That"]},{"Key":"4. That","Fragments":["way,","way,"]},{"Key":"That way,","Fragments":["you","you"]},{"Key":"way, you","Fragments":["can","can"]},{"Key":"can filter","Fragments":["out","out"]},{"Key":"filter out","Fragments":["about","about"]},{"Key":"about three","Fragments":["quarters","quarters"]},{"Key":"three quarters","Fragments":["of","of"]},{"Key":"quarters of","Fragments":["input","input"]},{"Key":"of input","Fragments":["values","values"]},{"Key":"input values","Fragments":["at","at"]},{"Key":"values at","Fragments":["the","the"]},{"Key":"first step","Fragments":["itself.","itself."]},{"Key":" is","Fragments":["`foldl`","opaque"]},{"Key":"is `foldl`","Fragments":["the"]},{"Key":"`foldl` the","Fragments":["best"]},{"Key":"best functional","Fragments":["abstraction"]},{"Key":"functional abstraction","Fragments":["when"]},{"Key":"abstraction when","Fragments":["you"]},{"Key":"looking to","Fragments":["`filter`"]},{"Key":"to `filter`","Fragments":["qualifying"]},{"Key":"`filter` qualifying","Fragments":["numbers"]},{"Key":"qualifying numbers","Fragments":["from"]},{"Key":"numbers from","Fragments":["your"]},{"Key":"it'd look","Fragments":["nicer"]},{"Key":"look nicer","Fragments":["if"]},{"Key":"you factored","Fragments":["out"]},{"Key":"factored out","Fragments":["the"]},{"Key":"the `0","Fragments":["=:="]},{"Key":"`0 =:=","Fragments":["Year"]},{"Key":"=:= Year","Fragments":["rem"]},{"Key":"rem x`","Fragments":["functionality?"]},{"Key":" yes,","Fragments":["I"]},{"Key":"yes, I","Fragments":["agree"]},{"Key":"waste stack","Fragments":["since"]},{"Key":"stack since","Fragments":["it"]},{"Key":" my","Fragments":["code"]},{"Key":"give `accumulate_tail/3`","Fragments":["a"]},{"Key":"`accumulate_tail/3` a","Fragments":["new"]},{"Key":"new name,","Fragments":["it"]},{"Key":"name, it","Fragments":["can"]},{"Key":"be named","Fragments":["`accumulate`"]},{"Key":"named `accumulate`","Fragments":["as"]},{"Key":"`accumulate` as","Fragments":["well,"]},{"Key":"well, since","Fragments":["its"]},{"Key":"since its","Fragments":["arity"]},{"Key":"its arity","Fragments":["of"]},{"Key":"arity of","Fragments":["3"]},{"Key":"of 3","Fragments":["makes"]},{"Key":"3 makes","Fragments":["it"]},{"Key":"it another","Fragments":["function,"]},{"Key":"another function,","Fragments":["also"]},{"Key":"function, also","Fragments":["you"]},{"Key":"also you","Fragments":["should"]},{"Key":"typespecs to","Fragments":["exported"]},{"Key":"Yeah, old","Fragments":["habit."]},{"Key":"old habit.","Fragments":["And"]},{"Key":"habit. And","Fragments":["I"]},{"Key":"And I","Fragments":["should,"]},{"Key":"I should,","Fragments":["I've"]},{"Key":"should, I've","Fragments":["been"]},{"Key":"been being","Fragments":["lazy"]},{"Key":"being lazy","Fragments":["because"]},{"Key":"lazy because","Fragments":["\"it's"]},{"Key":"because \"it's","Fragments":["not"]},{"Key":"\"it's not","Fragments":["prod\","]},{"Key":"not prod\",","Fragments":["heh."]},{"Key":"prod\", heh.","Fragments":[":)"]},{"Key":" @fleta","Fragments":["If"]},{"Key":"@fleta If","Fragments":["I"]},{"Key":"I send","Fragments":["in"]},{"Key":"send in","Fragments":["the"]},{"Key":"atom `a`","Fragments":["should"]},{"Key":"`a` should","Fragments":["I"]},{"Key":"should I","Fragments":["get"]},{"Key":"a brute","Fragments":["force"]},{"Key":"brute force","Fragments":["method."]},{"Key":"force method.","Fragments":["It"]},{"Key":"seems like","Fragments":["there"]},{"Key":"like there","Fragments":["should"]},{"Key":"more mathematical","Fragments":["solution,"]},{"Key":"mathematical solution,","Fragments":["given"]},{"Key":"solution, given","Fragments":["4,"]},{"Key":"given 4,","Fragments":["100,"]},{"Key":"4, 100,","Fragments":["and"]},{"Key":"100, and","Fragments":["400"]},{"Key":"and 400","Fragments":["are"]},{"Key":"400 are","Fragments":["all"]},{"Key":"are all","Fragments":["related."]},{"Key":"all related.","Fragments":["However"]},{"Key":"related. However","Fragments":["it's"]},{"Key":"However it's","Fragments":["not"]},{"Key":"not coming","Fragments":["to"]},{"Key":"coming to","Fragments":["me"]},{"Key":"you keep","Fragments":["all"]},{"Key":"keep all","Fragments":["your"]},{"Key":"your specs","Fragments":["at"]},{"Key":"specs at","Fragments":["the"]},{"Key":"top or","Fragments":["close"]},{"Key":"or close","Fragments":["to"]},{"Key":"always put","Fragments":["it"]},{"Key":"right above","Fragments":["the"]},{"Key":"above the","Fragments":["function..."]},{"Key":" Small","Fragments":["nit:"]},{"Key":"Small nit:","Fragments":["with"]},{"Key":"nit: with","Fragments":["the"]},{"Key":"name \"divides\"","Fragments":["I'd"]},{"Key":"\"divides\" I'd","Fragments":["expect"]},{"Key":"I'd expect","Fragments":["the"]},{"Key":"expect the","Fragments":["order"]},{"Key":"of arguments","Fragments":["to"]},{"Key":"be reversed,","Fragments":["i.e."]},{"Key":"reversed, i.e.","Fragments":["I'd"]},{"Key":"i.e. I'd","Fragments":["read"]},{"Key":"I'd read","Fragments":["`divides(Year,"]},{"Key":"read `divides(Year,","Fragments":["4)`"]},{"Key":"`divides(Year, 4)`","Fragments":["as"]},{"Key":"4)` as","Fragments":["\"Year"]},{"Key":"as \"Year","Fragments":["divides"]},{"Key":"\"Year divides","Fragments":["4\""]},{"Key":"divides 4\"","Fragments":["whereas"]},{"Key":"4\" whereas","Fragments":["you"]},{"Key":"whereas you","Fragments":["mean"]},{"Key":"mean the","Fragments":["opposite"]},{"Key":"the opposite","Fragments":["(\"4"]},{"Key":"opposite (\"4","Fragments":["divides"]},{"Key":"(\"4 divides","Fragments":["Year\")."]},{"Key":"also personally","Fragments":["like"]},{"Key":"personally like","Fragments":["to"]},{"Key":"to end","Fragments":["predicates"]},{"Key":"end predicates","Fragments":["with"]},{"Key":"predicates with","Fragments":["a"]},{"Key":"question mark.","Fragments":["I"]},{"Key":"mark. I","Fragments":["know"]},{"Key":"that opinion","Fragments":["on"]},{"Key":" `elem_a()`","Fragments":["and"]},{"Key":"`elem_a()` and","Fragments":["`elem_b()`"]},{"Key":"and `elem_b()`","Fragments":["are"]},{"Key":"`elem_b()` are","Fragments":["of"]},{"Key":"are of","Fragments":["the"]},{"Key":"same type,","Fragments":["`any()`,"]},{"Key":"type, `any()`,","Fragments":["so"]},{"Key":"`any()`, so","Fragments":["your"]},{"Key":"so your","Fragments":["typesignature"]},{"Key":"your typesignature","Fragments":["does"]},{"Key":"typesignature does","Fragments":["not","show"]},{"Key":"not express","Fragments":["what"]},{"Key":"express what","Fragments":["you"]},{"Key":"want it","Fragments":["to"]},{"Key":"to express.","Fragments":["You"]},{"Key":"express. You","Fragments":["can"]},{"Key":"use variables","Fragments":["in"]},{"Key":"variables in","Fragments":["typesignatures"]},{"Key":"in typesignatures","Fragments":["as"]},{"Key":"typesignatures as","Fragments":["well:"]},{"Key":"as well:","Fragments":["`-spec"]},{"Key":"well: `-spec","Fragments":["equals(A,"]},{"Key":"`-spec equals(A,","Fragments":["A)"]},{"Key":"equals(A, A)","Fragments":["-\u003e"]},{"Key":"A) -\u003e","Fragments":["bool`"]},{"Key":"-\u003e bool`","Fragments":["here","in"]},{"Key":"bool` here","Fragments":["the"]},{"Key":"here the","Fragments":["typesignature"]},{"Key":"the typesignature","Fragments":["does"]},{"Key":"does show","Fragments":["us,"]},{"Key":"show us,","Fragments":["whatever"]},{"Key":"us, whatever","Fragments":["comes"]},{"Key":"whatever comes","Fragments":["in"]},{"Key":"comes in","Fragments":["as"]},{"Key":"in as","Fragments":["first"]},{"Key":"as first","Fragments":["and"]},{"Key":"and second","Fragments":["parameter"]},{"Key":"parameter have","Fragments":["to"]},{"Key":"same type.","Fragments":["When"]},{"Key":"type. When","Fragments":["I"]},{"Key":"just had","Fragments":["written"]},{"Key":"had written","Fragments":["`any()`"]},{"Key":"written `any()`","Fragments":["instead,"]},{"Key":"`any()` instead,","Fragments":["I"]},{"Key":"instead, I","Fragments":["were"]},{"Key":"were able","Fragments":["to"]},{"Key":"to compare","Fragments":["lists"]},{"Key":"compare lists","Fragments":["with"]},{"Key":"lists with","Fragments":["atoms."]},{"Key":"my type","Fragments":["signature"]},{"Key":"signature is","Fragments":["equivalent","equivalent"]},{"Key":"-spec accumulate(fun((A)","Fragments":["-\u003e","-\u003e"]},{"Key":"accumulate(fun((A) -\u003e","Fragments":["B),","B),"]},{"Key":"B), list(A))","Fragments":["-\u003e"]},{"Key":"list(A)) -\u003e","Fragments":["list(B)."]},{"Key":"A and","Fragments":["B"]},{"Key":"and B","Fragments":["don't"]},{"Key":"B don't","Fragments":["have"]},{"Key":" accumulate:accumulate(fun","Fragments":["erlang:integer_to_list/1,","(A)"]},{"Key":"accumulate:accumulate(fun erlang:integer_to_list/1,","Fragments":["[1,2,3])."]},{"Key":"Your signature","Fragments":["is"]},{"Key":"to `-spec","Fragments":["accumulate(fun((any())"]},{"Key":"any()), [any()])","Fragments":["-\u003e"]},{"Key":"[any()]) -\u003e","Fragments":["[any()]`,"]},{"Key":"-\u003e [any()]`,","Fragments":["so"]},{"Key":"[any()]`, so","Fragments":["it"]},{"Key":"very generic.","Fragments":["This"]},{"Key":"generic. This","Fragments":["spec"]},{"Key":"This spec","Fragments":["would"]},{"Key":"would allow","Fragments":["the"]},{"Key":"allow the","Fragments":["following:"]},{"Key":" badfu","Fragments":["-\u003e"]},{"Key":"accumulate:accumulate(fun (A)","Fragments":["-\u003e"]},{"Key":" end,","Fragments":["[a,"]},{"Key":"end, [a,","Fragments":["b,"]},{"Key":"[a, b,","Fragments":["c])."]},{"Key":"valid invocation","Fragments":["according"]},{"Key":"invocation according","Fragments":["to"]},{"Key":"your spec,","Fragments":["but"]},{"Key":"spec, but","Fragments":["it"]},{"Key":" And,","Fragments":["I"]},{"Key":"And, I","Fragments":["never"]},{"Key":"I never","Fragments":["told,","even"]},{"Key":"never told,","Fragments":["that"]},{"Key":"told, that","Fragments":["any"]},{"Key":"that any","Fragments":["types"]},{"Key":"any types","Fragments":["in"]},{"Key":"types in","Fragments":["accumulate"]},{"Key":"in accumulate","Fragments":["had"]},{"Key":"accumulate had","Fragments":["to"]},{"Key":"the same,","Fragments":["I"]},{"Key":"same, I","Fragments":["just"]},{"Key":"just gave","Fragments":["you"]},{"Key":"gave you","Fragments":["an"]},{"Key":"you an","Fragments":["example"]},{"Key":"example which","Fragments":["had"]},{"Key":"which had","Fragments":["by"]},{"Key":"had by","Fragments":["“accident”"]},{"Key":"by “accident”","Fragments":["two"]},{"Key":"“accident” two","Fragments":["arguments"]},{"Key":"two arguments","Fragments":["which","are"]},{"Key":"arguments which","Fragments":["shall"]},{"Key":"which shall","Fragments":["be"]},{"Key":"shall be","Fragments":["of"]},{"Key":" ok,","Fragments":["I"]},{"Key":"ok, I","Fragments":["see."]},{"Key":" Unfortunately","Fragments":["dialyzer"]},{"Key":"Unfortunately dialyzer","Fragments":["doesn't"]},{"Key":"dialyzer doesn't","Fragments":["complain"]},{"Key":"doesn't complain","Fragments":["about"]},{"Key":"complain about","Fragments":["badfu()"]},{"Key":"about badfu()","Fragments":["even"]},{"Key":"badfu() even","Fragments":["if"]},{"Key":"use correct","Fragments":["type"]},{"Key":"correct type","Fragments":["specification."]},{"Key":" Thats","Fragments":["weird…"]},{"Key":" `integer()`","Fragments":["is"]},{"Key":"`integer()` is","Fragments":["a"]},{"Key":"bit broad","Fragments":["as"]},{"Key":"broad as","Fragments":["type."]},{"Key":"as type.","Fragments":["`integer()`"]},{"Key":"type. `integer()`","Fragments":["can"]},{"Key":"`integer()` can","Fragments":["be"]},{"Key":"be negativ.","Fragments":["Far"]},{"Key":"negativ. Far","Fragments":["more"]},{"Key":"Far more","Fragments":["suitable"]},{"Key":"suitable were","Fragments":["`char()`,"]},{"Key":"were `char()`,","Fragments":["which"]},{"Key":"`char()`, which","Fragments":["at"]},{"Key":"which at","Fragments":["least"]},{"Key":"least bounds","Fragments":["to"]},{"Key":"bounds to","Fragments":["positive"]},{"Key":"to positive","Fragments":["values,"]},{"Key":"positive values,","Fragments":["but"]},{"Key":"values, but","Fragments":["still"]},{"Key":"still `char()`","Fragments":["means"]},{"Key":"`char()` means","Fragments":["an"]},{"Key":"an `integer()`","Fragments":["in"]},{"Key":"`integer()` in","Fragments":["the"]},{"Key":"the range","Fragments":["`0..16#10ffff`,"]},{"Key":"range `0..16#10ffff`,","Fragments":["where"]},{"Key":"`0..16#10ffff`, where","Fragments":["for"]},{"Key":"where for","Fragments":["real"]},{"Key":"for real","Fragments":["only"]},{"Key":"real only","Fragments":["a"]},{"Key":"a subset","Fragments":["of"]},{"Key":"subset of","Fragments":["this"]},{"Key":"is allowed.","Fragments":["To"]},{"Key":"allowed. To","Fragments":["be"]},{"Key":"To be","Fragments":["exact"]},{"Key":"be exact","Fragments":["the"]},{"Key":"exact the","Fragments":["subset"]},{"Key":"the subset","Fragments":["is"]},{"Key":"subset is","Fragments":["only"]},{"Key":"only 4","Fragments":["chars"]},{"Key":"4 chars","Fragments":["big."]},{"Key":"chars big.","Fragments":["Also"]},{"Key":"big. Also","Fragments":["the"]},{"Key":"the valid","Fragments":["output"]},{"Key":"valid output","Fragments":["does"]},{"Key":"output does","Fragments":["not"]},{"Key":"not follow","Fragments":["the"]},{"Key":"follow the","Fragments":["rules"]},{"Key":"for valid","Fragments":["input,"]},{"Key":"valid input,","Fragments":["that"]},{"Key":"input, that","Fragments":["fact"]},{"Key":"that fact","Fragments":["should"]},{"Key":"fact should","Fragments":["be"]},{"Key":"be recognizable","Fragments":["in"]},{"Key":"recognizable in","Fragments":["the"]},{"Key":"type. Remember,","Fragments":["you"]},{"Key":"Remember, you","Fragments":["are"]},{"Key":"using `maps:get/2`","Fragments":["which"]},{"Key":"`maps:get/2` which","Fragments":["fails"]},{"Key":"which fails","Fragments":["when"]},{"Key":"key is","Fragments":["not"]},{"Key":"not available","Fragments":["in"]},{"Key":"good that","Fragments":["you"]},{"Key":"use types","Fragments":["however"]},{"Key":"types however","Fragments":["I"]},{"Key":"should find","Fragments":["better","another"]},{"Key":"find better","Fragments":["names."]},{"Key":"better names.","Fragments":["For"]},{"Key":"names. For","Fragments":["example"]},{"Key":"example in()","Fragments":["and"]},{"Key":"in() and","Fragments":["out()"]},{"Key":"and out()","Fragments":["is"]},{"Key":"out() is","Fragments":["not"]},{"Key":"good name.","Fragments":["I"]},{"Key":"would also","Fragments":["consider","be"]},{"Key":"also consider","Fragments":["exporting"]},{"Key":"consider exporting","Fragments":["the"]},{"Key":"type so","Fragments":["other"]},{"Key":"so other","Fragments":["modules"]},{"Key":"other modules","Fragments":["can","can"]},{"Key":"modules can","Fragments":["use","reference"]},{"Key":"use them.","Fragments":["Finally"]},{"Key":"them. Finally","Fragments":["I"]},{"Key":"Finally I","Fragments":["think"]},{"Key":"type should","Fragments":["be"]},{"Key":"be documented","Fragments":["as"]},{"Key":"documented as","Fragments":["it"]},{"Key":"obvious to","Fragments":["some"]},{"Key":"some what","Fragments":["they"]},{"Key":"what they","Fragments":["represent."]},{"Key":" OK,","Fragments":["you"]},{"Key":"OK, you","Fragments":["have"]},{"Key":"a tailrecursive","Fragments":["version"]},{"Key":"tailrecursive version","Fragments":["to"]},{"Key":"version to","Fragments":["save"]},{"Key":"to save","Fragments":["stackspace,"]},{"Key":"save stackspace,","Fragments":["but"]},{"Key":"stackspace, but","Fragments":["by"]},{"Key":"but by","Fragments":["appending"]},{"Key":"to `ListSoFar`","Fragments":["everytime"]},{"Key":"`ListSoFar` everytime","Fragments":["you"]},{"Key":"everytime you","Fragments":["call"]},{"Key":"you call","Fragments":["`accumulate/3`"]},{"Key":"call `accumulate/3`","Fragments":["recursively,"]},{"Key":"`accumulate/3` recursively,","Fragments":["you"]},{"Key":"recursively, you","Fragments":["append"]},{"Key":"you append","Fragments":["to"]},{"Key":"append to","Fragments":["a"]},{"Key":"list n-times,","Fragments":["where"]},{"Key":"n-times, where","Fragments":["n"]},{"Key":"the `InputList`,","Fragments":["also"]},{"Key":"`InputList`, also","Fragments":["the"]},{"Key":"also the","Fragments":["append-operator"]},{"Key":"the append-operator","Fragments":["is"]},{"Key":"append-operator is","Fragments":["O(n)"]},{"Key":"O(n) which","Fragments":["makes"]},{"Key":"your accumulate","Fragments":["O(n²)."]},{"Key":"Also, why","Fragments":["do"]},{"Key":"why do","Fragments":["you"]},{"Key":"for `accumulate/2`,","Fragments":["but"]},{"Key":"`accumulate/2`, but","Fragments":["not"]},{"Key":"not for","Fragments":["`accumulate/3`?"]},{"Key":"know formulas","Fragments":["exist"]},{"Key":"formulas exist","Fragments":["to"]},{"Key":"exist to","Fragments":["calculate"]},{"Key":"result directly,","Fragments":["but"]},{"Key":"directly, but","Fragments":["arithmetic"]},{"Key":"but arithmetic","Fragments":["is"]},{"Key":"arithmetic is","Fragments":["boring"]},{"Key":"is boring","Fragments":["and"]},{"Key":"boring and","Fragments":["doesn't","doesn't"]},{"Key":"doesn't help","Fragments":["me"]},{"Key":"me learn","Fragments":["as"]},{"Key":"learn as","Fragments":["much."]},{"Key":"get away","Fragments":["with"]},{"Key":"away with","Fragments":["keeping"]},{"Key":"with keeping","Fragments":["a"]},{"Key":"keeping a","Fragments":["sum"]},{"Key":"a sum","Fragments":["as"]},{"Key":"sum as","Fragments":["your"]},{"Key":"your accumulator","Fragments":["in"]},{"Key":"accumulator in","Fragments":["`luhn/2`"]},{"Key":"in `luhn/2`","Fragments":["instead"]},{"Key":"`luhn/2` instead","Fragments":["of"]},{"Key":"of building","Fragments":["a"]},{"Key":"building a","Fragments":["list","list"]},{"Key":"summing it","Fragments":["at"]},{"Key":"it at","Fragments":["the"]},{"Key":"any advantages","Fragments":["using"]},{"Key":"advantages using","Fragments":["recursion"]},{"Key":"recursion over","Fragments":["list"]},{"Key":"comprehension in","Fragments":["erlang?"]},{"Key":"Or rather","Fragments":["what"]},{"Key":"rather what","Fragments":["are"]},{"Key":"what are","Fragments":["the"]},{"Key":" `square()`","Fragments":["has"]},{"Key":"`square()` has","Fragments":["a"]},{"Key":"really nice","Fragments":["recursive"]},{"Key":"nice recursive","Fragments":["definition,"]},{"Key":"recursive definition,","Fragments":["what"]},{"Key":"definition, what","Fragments":["made"]},{"Key":"what made","Fragments":["you"]},{"Key":"numbers (number","Fragments":["of"]},{"Key":"(number of","Fragments":["squares)."]},{"Key":"of lists","Fragments":["comprehensions."]},{"Key":"lists comprehensions.","Fragments":["I"]},{"Key":"comprehensions. I","Fragments":["always"]},{"Key":"forget they","Fragments":["exist"]},{"Key":"they exist","Fragments":["so"]},{"Key":"exist so","Fragments":["I"]},{"Key":"rarely use","Fragments":["them."]},{"Key":"Note that","Fragments":["you"]},{"Key":"function arguments,","Fragments":["e.g.,"]},{"Key":"arguments, e.g.,","Fragments":["`f(A,"]},{"Key":"e.g., `f(A,","Fragments":["A)`"]},{"Key":"`f(A, A)`","Fragments":["will"]},{"Key":"A)` will","Fragments":["only"]},{"Key":"will only","Fragments":["match"]},{"Key":"only match","Fragments":["if"]},{"Key":"match if","Fragments":["the"]},{"Key":"are equal.","Fragments":["Think"]},{"Key":"equal. Think","Fragments":["about"]},{"Key":"other submissions","Fragments":["i"]},{"Key":"submissions i","Fragments":["realize"]},{"Key":"i realize","Fragments":["now"]},{"Key":"realize now","Fragments":["i"]},{"Key":"now i","Fragments":["was"]},{"Key":"i was","Fragments":["to"]},{"Key":"to literal","Fragments":["transcribing"]},{"Key":"literal transcribing","Fragments":["the"]},{"Key":"transcribing the","Fragments":["problem"]},{"Key":"to code","Fragments":["and"]},{"Key":"and that","Fragments":["i"]},{"Key":"that i","Fragments":["need","can't"]},{"Key":"i need","Fragments":["to"]},{"Key":"better at","Fragments":["pattern"]},{"Key":"at pattern","Fragments":["matching"]},{"Key":"also know","Fragments":["i"]},{"Key":"know i","Fragments":["could"]},{"Key":"i could","Fragments":["have"]},{"Key":"used `true","Fragments":["-\u003e"]},{"Key":"`true -\u003e","Fragments":["bool`"]},{"Key":"bool` in","Fragments":["the"]},{"Key":"if guards","Fragments":["but"]},{"Key":"but was","Fragments":["leaning"]},{"Key":"leaning towards","Fragments":["being"]},{"Key":"towards being","Fragments":["explicit."]},{"Key":"the CS","Fragments":["illiterate"]},{"Key":"CS illiterate","Fragments":["among"]},{"Key":"illiterate among","Fragments":["us:"]},{"Key":"among us:","Fragments":["\"closed"]},{"Key":"us: \"closed","Fragments":["form\"?"]},{"Key":"list comprehensions;","Fragments":["I"]},{"Key":"comprehensions; I","Fragments":["almost"]},{"Key":"I almost","Fragments":["always"]},{"Key":"struggle with","Fragments":["reading"]},{"Key":"with reading","Fragments":["non-trivial"]},{"Key":"reading non-trivial","Fragments":["examples."]},{"Key":"non-trivial examples.","Fragments":["Although"]},{"Key":"examples. Although","Fragments":["if"]},{"Key":"Although if","Fragments":["I"]},{"Key":"used them","Fragments":["more","and"]},{"Key":"them more","Fragments":["I'd"]},{"Key":"more I'd","Fragments":["get"]},{"Key":"I'd get","Fragments":["more"]},{"Key":"more comfortable","Fragments":["with"]},{"Key":" Closed","Fragments":["form"]},{"Key":"Closed form","Fragments":["in"]},{"Key":"form in","Fragments":["this"]},{"Key":"case being","Fragments":["something"]},{"Key":"being something","Fragments":["that"]},{"Key":"a fixed","Fragments":["number"]},{"Key":"fixed number","Fragments":["of"]},{"Key":"of operations","Fragments":["instead","dependent"]},{"Key":"operations instead","Fragments":["of"]},{"Key":"operations dependent","Fragments":["on"]},{"Key":"dependent on","Fragments":["N;"]},{"Key":"on N;","Fragments":["sometimes"]},{"Key":"N; sometimes","Fragments":["called"]},{"Key":"sometimes called","Fragments":["an"]},{"Key":"called an","Fragments":["analytic"]},{"Key":"an analytic","Fragments":["solution."]},{"Key":"I mostly","Fragments":["agree"]},{"Key":"mostly agree","Fragments":["about"]},{"Key":"agree about","Fragments":["list"]},{"Key":"comprehensions, actually,","Fragments":["especially"]},{"Key":"actually, especially","Fragments":["since"]},{"Key":"since Erlang","Fragments":["doesn't","doesn't"]},{"Key":"have syntactic","Fragments":["sugar"]},{"Key":"syntactic sugar","Fragments":["for"]},{"Key":"sugar for","Fragments":["lists:seq"]},{"Key":"for lists:seq","Fragments":["in"]},{"Key":"lists:seq in","Fragments":["them,"]},{"Key":"in them,","Fragments":["although"]},{"Key":"them, although","Fragments":["I"]},{"Key":"think for","Fragments":["small"]},{"Key":"small cases","Fragments":["I"]},{"Key":"cases I","Fragments":["find"]},{"Key":"find them","Fragments":["clearer."]},{"Key":"course I","Fragments":["prefer"]},{"Key":"the closed","Fragments":["form"]},{"Key":"form solutions","Fragments":["but"]},{"Key":"solutions but","Fragments":["this"]},{"Key":"is nice","Fragments":["and"]},{"Key":"clean. Maybe","Fragments":["consider"]},{"Key":"consider list","Fragments":["comprehension"]},{"Key":"comprehension syntax,","Fragments":["though."]},{"Key":" Wonderful!","Fragments":["I"]},{"Key":"Wonderful! I","Fragments":["learnt"]},{"Key":"I learnt","Fragments":["that"]},{"Key":"learnt that","Fragments":["there"]},{"Key":"there could","Fragments":["be"]},{"Key":"more precise","Fragments":["ways"]},{"Key":"precise ways","Fragments":["to"]},{"Key":"write Erlang","Fragments":["code."]},{"Key":"Erlang code.","Fragments":["Thanks!"]},{"Key":" `nucleotide_counts`","Fragments":["iterates"]},{"Key":"`nucleotide_counts` iterates","Fragments":["over"]},{"Key":"iterates over","Fragments":["the"]},{"Key":"the strand","Fragments":["four"]},{"Key":"strand four","Fragments":["times."]},{"Key":" Vastly","Fragments":["less"]},{"Key":"Vastly less","Fragments":["stupid"]},{"Key":"less stupid","Fragments":["than"]},{"Key":"stupid than","Fragments":["the"]},{"Key":"iteration. Still","Fragments":["much"]},{"Key":"Still much","Fragments":["wordier"]},{"Key":"much wordier","Fragments":["than"]},{"Key":"wordier than","Fragments":["it"]},{"Key":"to be,","Fragments":["but"]},{"Key":"prefer this","Fragments":["pattern"]},{"Key":"more terse","Fragments":["character-driven"]},{"Key":"terse character-driven","Fragments":["approach"]},{"Key":"character-driven approach","Fragments":["(cough,"]},{"Key":"approach (cough,","Fragments":["@susanna)"]},{"Key":"feel all","Fragments":["the"]},{"Key":"the things","Fragments":["you're"]},{"Key":"things you're","Fragments":["doing"]},{"Key":"doing here","Fragments":["reflect"]},{"Key":"here reflect","Fragments":["the"]},{"Key":"reflect the","Fragments":["problem"]},{"Key":"problem statement?","Fragments":["I"]},{"Key":"statement? I","Fragments":["have"]},{"Key":"to admit","Fragments":["that"]},{"Key":"find there's","Fragments":["a"]},{"Key":"lot here","Fragments":["that"]},{"Key":"here that","Fragments":["distracts"]},{"Key":"that distracts","Fragments":["me"]},{"Key":"distracts me","Fragments":["from"]},{"Key":"from what","Fragments":["is"]},{"Key":"actually happening,","Fragments":["like"]},{"Key":"happening, like","Fragments":["the"]},{"Key":"the conversion","Fragments":["to","to"]},{"Key":"conversion to","Fragments":["base-10","integer,"]},{"Key":"to base-10","Fragments":["(possibly"]},{"Key":"base-10 (possibly","Fragments":["a"]},{"Key":"(possibly a","Fragments":["bignum"]},{"Key":"a bignum","Fragments":["for","might"]},{"Key":"bignum for","Fragments":["larger"]},{"Key":"larger trinary","Fragments":["numbers),"]},{"Key":"trinary numbers),","Fragments":["and"]},{"Key":"numbers), and","Fragments":["the"]},{"Key":"name \"normalize\";","Fragments":["what"]},{"Key":"\"normalize\"; what","Fragments":["normal"]},{"Key":"what normal","Fragments":["form"]},{"Key":"normal form","Fragments":["does"]},{"Key":"form does","Fragments":["it"]},{"Key":"it actually","Fragments":["produce?"]},{"Key":" Thinking","Fragments":["about"]},{"Key":"Thinking about","Fragments":["less-terse"]},{"Key":"about less-terse","Fragments":["ways"]},{"Key":"less-terse ways","Fragments":["of"]},{"Key":"ways of","Fragments":["revealing","doing"]},{"Key":"of revealing","Fragments":["the"]},{"Key":"revealing the","Fragments":["essence"]},{"Key":"the essence","Fragments":["of"]},{"Key":"essence of","Fragments":["this"]},{"Key":"think terminology","Fragments":["may"]},{"Key":"terminology may","Fragments":["be"]},{"Key":"be part","Fragments":["of"]},{"Key":"the problem;","Fragments":["how"]},{"Key":"problem; how","Fragments":["about"]},{"Key":"Given our","Fragments":["input,"]},{"Key":"our input,","Fragments":["we"]},{"Key":"input, we","Fragments":["(at"]},{"Key":"we (at","Fragments":["least"]},{"Key":"least conceptually)","Fragments":["convert"]},{"Key":"conceptually) convert","Fragments":["it"]},{"Key":"convert it","Fragments":["to"]},{"Key":"a polynomial","Fragments":["where"]},{"Key":"polynomial where","Fragments":["no"]},{"Key":"where no","Fragments":["coefficient"]},{"Key":"no coefficient","Fragments":["exceeds"]},{"Key":"coefficient exceeds","Fragments":["2,"]},{"Key":"exceeds 2,","Fragments":["and"]},{"Key":"then evaluate","Fragments":["it"]},{"Key":"evaluate it","Fragments":["with"]},{"Key":"with its","Fragments":["variable"]},{"Key":"its variable","Fragments":["equal"]},{"Key":"variable equal","Fragments":["to"]},{"Key":"I'll write","Fragments":["an"]},{"Key":"write an","Fragments":["implementation"]},{"Key":"an implementation","Fragments":["that","of"]},{"Key":"implementation that","Fragments":["demonstrates","I"]},{"Key":"that demonstrates","Fragments":["what"]},{"Key":"demonstrates what","Fragments":["I"]},{"Key":"I mean.","Fragments":["The"]},{"Key":"mean. The","Fragments":["problem"]},{"Key":"The problem","Fragments":["is"]},{"Key":"that since","Fragments":["Erlang"]},{"Key":"do any","Fragments":["deforestation"]},{"Key":"any deforestation","Fragments":["or"]},{"Key":"deforestation or","Fragments":["interprocedural"]},{"Key":"or interprocedural","Fragments":["optimization,"]},{"Key":"interprocedural optimization,","Fragments":["I"]},{"Key":"optimization, I","Fragments":["feel"]},{"Key":"feel one","Fragments":["is"]},{"Key":"is unlikely","Fragments":["to"]},{"Key":"make those","Fragments":["kinds"]},{"Key":"those kinds","Fragments":["of"]},{"Key":"of generalizations","Fragments":["in"]},{"Key":"generalizations in","Fragments":["practice"]},{"Key":"in practice","Fragments":["if"]},{"Key":"practice if","Fragments":["you"]},{"Key":"Oh, a","Fragments":["note"]},{"Key":"a note","Fragments":["on"]},{"Key":"note on","Fragments":["the"]},{"Key":"to integer,","Fragments":["since"]},{"Key":"integer, since","Fragments":["you"]},{"Key":"few places:","Fragments":["though"]},{"Key":"places: though","Fragments":["I'm"]},{"Key":"though I'm","Fragments":["a"]},{"Key":"little critical","Fragments":["of"]},{"Key":"critical of","Fragments":["it"]},{"Key":"it here","Fragments":["where"]},{"Key":"here where","Fragments":["you"]},{"Key":"you already","Fragments":["have"]},{"Key":"already have","Fragments":["a"]},{"Key":"string, you're","Fragments":["probably"]},{"Key":"probably already","Fragments":["aware"]},{"Key":"already aware","Fragments":["but"]},{"Key":"aware but","Fragments":["I"]},{"Key":"worth pointing","Fragments":["out"]},{"Key":"pointing out","Fragments":["that"]},{"Key":"out that","Fragments":["if"]},{"Key":"are parsing","Fragments":["bytes"]},{"Key":"parsing bytes","Fragments":["off"]},{"Key":"bytes off","Fragments":["the"]},{"Key":"the wire,","Fragments":["a"]},{"Key":"wire, a","Fragments":["bignum"]},{"Key":"bignum might","Fragments":["end"]},{"Key":"might end","Fragments":["having"]},{"Key":"end having","Fragments":["fewer"]},{"Key":"having fewer","Fragments":["allocations"]},{"Key":"fewer allocations","Fragments":["than"]},{"Key":"allocations than","Fragments":["the"]},{"Key":" Dramatically","Fragments":["simplified"]},{"Key":"Dramatically simplified","Fragments":["`validate/1`"]},{"Key":"simplified `validate/1`","Fragments":["with"]},{"Key":"`validate/1` with","Fragments":["the"]},{"Key":"2nd revision","Fragments":["after"]},{"Key":"revision after","Fragments":["looking"]},{"Key":"after looking","Fragments":["at"]},{"Key":"at @issac's","Fragments":["code"]},{"Key":"@issac's code","Fragments":["and"]},{"Key":"and realizing","Fragments":["how"]},{"Key":"realizing how","Fragments":["awful"]},{"Key":"how awful","Fragments":["mine"]},{"Key":"awful mine","Fragments":["was."]},{"Key":"could probably","Fragments":["use"]},{"Key":"probably use","Fragments":["pattern","the"]},{"Key":"to clean","Fragments":["up"]},{"Key":"clean up","Fragments":["the"]},{"Key":"if statement.","Fragments":["That"]},{"Key":"That would","Fragments":["also"]},{"Key":"are counting","Fragments":["down."]},{"Key":"counting down.","Fragments":["I"]},{"Key":"down. I","Fragments":["counted"]},{"Key":"counted up","Fragments":["and"]},{"Key":"and had","Fragments":["to"]},{"Key":"is opaque","Fragments":["another"]},{"Key":"opaque another","Fragments":["way"]},{"Key":"defining a","Fragments":["record?"]},{"Key":"about trying","Fragments":["out"]},{"Key":"trying out","Fragments":["any"]},{"Key":"out any","Fragments":["of"]},{"Key":"value data","Fragments":["types?"]},{"Key":"data types?","Fragments":["proplist,"]},{"Key":"types? proplist,","Fragments":["orddict,"]},{"Key":"proplist, orddict,","Fragments":["dict?"]},{"Key":"Hi @murl","Fragments":[","]},{"Key":"@murl ,","Fragments":["`-opaque`"]},{"Key":", `-opaque`","Fragments":["is"]},{"Key":"`-opaque` is","Fragments":["similar"]},{"Key":"to `-type`","Fragments":["in"]},{"Key":"`-type` in","Fragments":["that"]},{"Key":"a Dialyzer","Fragments":["type"]},{"Key":"Dialyzer type","Fragments":["specification,"]},{"Key":"type specification,","Fragments":["but"]},{"Key":"specification, but","Fragments":["it"]},{"Key":"it tells","Fragments":["Dialyzer"]},{"Key":"tells Dialyzer","Fragments":["that"]},{"Key":"Dialyzer that","Fragments":["it"]},{"Key":"spec private","Fragments":["from"]},{"Key":"private from","Fragments":["other"]},{"Key":"from other","Fragments":["modules."]},{"Key":"other modules.","Fragments":["In"]},{"Key":"modules. In","Fragments":["other"]},{"Key":"words, other","Fragments":["modules"]},{"Key":"reference the","Fragments":["`school`"]},{"Key":"the `school`","Fragments":["type"]},{"Key":"`school` type","Fragments":["by"]},{"Key":"type by","Fragments":["name,"]},{"Key":"by name,","Fragments":["but"]},{"Key":"name, but","Fragments":["they"]},{"Key":"they may","Fragments":["not"]},{"Key":"not (for","Fragments":["example)"]},{"Key":"(for example)","Fragments":["pattern"]},{"Key":"example) pattern","Fragments":["match"]},{"Key":"match or","Fragments":["destructure"]},{"Key":"or destructure","Fragments":["the"]},{"Key":"destructure the","Fragments":["type"]},{"Key":"type to","Fragments":["get"]},{"Key":"get at","Fragments":["its"]},{"Key":"a key-value","Fragments":["data"]},{"Key":"key-value data","Fragments":["type,","type"]},{"Key":"data type,","Fragments":["I"]},{"Key":"type, I","Fragments":["actually"]},{"Key":"actually did!","Fragments":["The"]},{"Key":"did! The","Fragments":["`#{...}`"]},{"Key":"The `#{...}`","Fragments":["syntax"]},{"Key":"`#{...}` syntax","Fragments":["is"]},{"Key":"map literal,","Fragments":["which"]},{"Key":"literal, which","Fragments":["is"]},{"Key":"new key-value","Fragments":["data"]},{"Key":"type introduced","Fragments":["in"]},{"Key":"introduced in","Fragments":["Erlang"]},{"Key":"Erlang R17","Fragments":["release."]},{"Key":" cool","Fragments":["thanks!"]},{"Key":"Since I","Fragments":["stumbled"]},{"Key":"I stumbled","Fragments":["upon"]},{"Key":"stumbled upon","Fragments":["that"]},{"Key":"upon that","Fragments":["empty"]},{"Key":"that empty","Fragments":["list"]},{"Key":"list thing","Fragments":["you"]},{"Key":"thing you","Fragments":["mentioned"]},{"Key":"you mentioned","Fragments":["in"]},{"Key":"a comment,","Fragments":["I"]},{"Key":"comment, I","Fragments":["submitted"]},{"Key":"I submitted","Fragments":["a"]},{"Key":"PR to","Fragments":["the"]},{"Key":"test over","Fragments":["on"]},{"Key":"over on","Fragments":["github:"]},{"Key":"on github:","Fragments":["https://github.com/exercism/xerlang/pull/72"]},{"Key":"By using","Fragments":["`math:pow/2`"]},{"Key":"using `math:pow/2`","Fragments":["you"]},{"Key":"`math:pow/2` you","Fragments":["are"]},{"Key":"are getting","Fragments":["into"]},{"Key":"into some","Fragments":["floatingpoint","sane"]},{"Key":"some floatingpoint","Fragments":["issues"]},{"Key":"floatingpoint issues","Fragments":["when"]},{"Key":"issues when","Fragments":["the"]},{"Key":"numbers grow.","Fragments":["You"]},{"Key":"grow. You","Fragments":["should"]},{"Key":"find another","Fragments":["way"]},{"Key":"of 2","Fragments":["which"]},{"Key":"2 which","Fragments":["stays"]},{"Key":"which stays","Fragments":["in"]},{"Key":"stays in","Fragments":["the"]},{"Key":"the domain","Fragments":["of"]},{"Key":"domain of","Fragments":["integers."]},{"Key":"Also in","Fragments":["line"]},{"Key":"line 12,","Fragments":["why"]},{"Key":"12, why","Fragments":["don't"]},{"Key":"you remove","Fragments":["that"]},{"Key":"that `1","Fragments":["*"]},{"Key":"`1 *","Fragments":["…`?"]},{"Key":"* …`?","Fragments":["1"]},{"Key":"…`? 1","Fragments":["is"]},{"Key":"is neutral","Fragments":["for"]},{"Key":"neutral for","Fragments":["multiplication!"]},{"Key":"wasn't really","Fragments":["satisfied"]},{"Key":"really satisfied","Fragments":["with"]},{"Key":"satisfied with","Fragments":["the"]},{"Key":"I iterated","Fragments":["twice"]},{"Key":"iterated twice","Fragments":["over"]},{"Key":"twice over","Fragments":["the"]},{"Key":"the input,","Fragments":["so"]},{"Key":"input, so","Fragments":["I"]},{"Key":"I refactored","Fragments":["a"]},{"Key":"refactored a","Fragments":["little"]},{"Key":"Only added","Fragments":["some"]},{"Key":"sure `square/1`","Fragments":["is"]},{"Key":"`square/1` is","Fragments":["called"]},{"Key":"with parameter","Fragments":["in"]},{"Key":"parameter in","Fragments":["bounds."]},{"Key":"just did","Fragments":["a"]},{"Key":"did a","Fragments":["basic"]},{"Key":"a basic","Fragments":["guard","tool"]},{"Key":"basic guard","Fragments":["clause"]},{"Key":"then did","Fragments":["an"]},{"Key":"did an","Fragments":["empty"]},{"Key":"empty pattern","Fragments":["match"]},{"Key":"match for","Fragments":["a"]},{"Key":"a catch","Fragments":["all"]},{"Key":"all case.","Fragments":["It's"]},{"Key":"case. It's","Fragments":["readable,"]},{"Key":"It's readable,","Fragments":["simple"]},{"Key":"readable, simple","Fragments":["and"]},{"Key":" yea,","Fragments":["thanks"]},{"Key":"yea, thanks","Fragments":["you"]},{"Key":"thanks you","Fragments":["for"]},{"Key":"Looks good,","Fragments":["but"]},{"Key":"good, but","Fragments":["you"]},{"Key":"should take","Fragments":["a"]},{"Key":"at guard","Fragments":["clauses."]},{"Key":"very creative","Fragments":["solution,"]},{"Key":"creative solution,","Fragments":["but"]},{"Key":"but if","Fragments":["the"]},{"Key":"goal includes","Fragments":["ease"]},{"Key":"includes ease","Fragments":["of"]},{"Key":"ease of","Fragments":["readability"]},{"Key":"readability -","Fragments":["if"]},{"Key":"- if","Fragments":["you"]},{"Key":"are communicating","Fragments":["with"]},{"Key":"communicating with","Fragments":["other"]},{"Key":"with other","Fragments":["developers"]},{"Key":"other developers","Fragments":["via"]},{"Key":"developers via","Fragments":["your"]},{"Key":"via your","Fragments":["code"]},{"Key":"code --","Fragments":["then"]},{"Key":"-- then","Fragments":["I"]},{"Key":"there other,","Fragments":["more"]},{"Key":"other, more","Fragments":["conventional,"]},{"Key":"more conventional,","Fragments":["implementations"]},{"Key":" Appending","Fragments":["to"]},{"Key":"with (`lists:append/2`","Fragments":["or"]},{"Key":"(`lists:append/2` or","Fragments":["`++`)"]},{"Key":"or `++`)","Fragments":["is"]},{"Key":"`++`) is","Fragments":["O(n)"]},{"Key":"Erlang, so","Fragments":["typically"]},{"Key":"so typically","Fragments":["in"]},{"Key":"typically in","Fragments":["functions"]},{"Key":"in functions","Fragments":["like","or"]},{"Key":"this you'd","Fragments":["use"]},{"Key":"use `[Hd|Tl]`","Fragments":["to"]},{"Key":"`[Hd|Tl]` to","Fragments":["build"]},{"Key":"list, since","Fragments":["appending"]},{"Key":"since appending","Fragments":["a"]},{"Key":"new head","Fragments":["is"]},{"Key":"head is","Fragments":["O(1)."]},{"Key":"is O(1).","Fragments":["(This"]},{"Key":"O(1). (This","Fragments":["is"]},{"Key":"(This is","Fragments":["Lisp's"]},{"Key":"is Lisp's","Fragments":["`cons`.)"]},{"Key":" Sometimes","Fragments":["this"]},{"Key":"Sometimes this","Fragments":["means"]},{"Key":"this means","Fragments":["the"]},{"Key":"means the","Fragments":["function"]},{"Key":"function has","Fragments":["to"]},{"Key":"to issue","Fragments":["a"]},{"Key":"issue a","Fragments":["final"]},{"Key":"final O(n)","Fragments":["`lists:reverse/1`"]},{"Key":"O(n) `lists:reverse/1`","Fragments":["at"]},{"Key":"end to","Fragments":["reverse"]},{"Key":"reverse a","Fragments":["list"]},{"Key":"list that","Fragments":["was"]},{"Key":"that was","Fragments":["built"]},{"Key":"was built","Fragments":["backwards,"]},{"Key":"built backwards,","Fragments":["but"]},{"Key":"backwards, but","Fragments":["(solution"]},{"Key":"but (solution","Fragments":["spoiler"]},{"Key":"(solution spoiler","Fragments":["alert!)"]},{"Key":"spoiler alert!)","Fragments":["[this"]},{"Key":"alert!) [this","Fragments":["isn't"]},{"Key":"[this isn't","Fragments":["necessary"]},{"Key":"isn't necessary","Fragments":["on"]},{"Key":"necessary on","Fragments":["modern"]},{"Key":"Using cons","Fragments":["list"]},{"Key":"cons list","Fragments":["construction"]},{"Key":"construction rather","Fragments":["than"]},{"Key":"than `lists:append/2`","Fragments":["might"]},{"Key":"`lists:append/2` might","Fragments":["address"]},{"Key":"might address","Fragments":["the"]},{"Key":"address the","Fragments":["weirdness"]},{"Key":"the weirdness","Fragments":["you"]},{"Key":"weirdness you","Fragments":["feel"]},{"Key":"feel on","Fragments":["the"]},{"Key":"first line's","Fragments":["set"]},{"Key":"line's set","Fragments":["of"]},{"Key":"set of","Fragments":["additional"]},{"Key":"of additional","Fragments":["brackets."]},{"Key":"when possible,","Fragments":["functions"]},{"Key":"possible, functions","Fragments":["like"]},{"Key":"this often","Fragments":["use"]},{"Key":"often use","Fragments":["pattern-matching"]},{"Key":"use pattern-matching","Fragments":["rather"]},{"Key":"pattern-matching rather","Fragments":["than"]},{"Key":"than guards","Fragments":["to"]},{"Key":"second function","Fragments":["body"]},{"Key":"function body","Fragments":["(e.g.,"]},{"Key":"body (e.g.,","Fragments":["match"]},{"Key":"(e.g., match","Fragments":["on"]},{"Key":"specific value","Fragments":["or"]},{"Key":"value or","Fragments":["unpacked"]},{"Key":"or unpacked","Fragments":["structure"]},{"Key":"unpacked structure","Fragments":["rather"]},{"Key":"structure rather","Fragments":["than"]},{"Key":"than on","Fragments":["the"]},{"Key":"the value.","Fragments":["This"]},{"Key":"value. This","Fragments":["is"]},{"Key":"more about","Fragments":["clarity"]},{"Key":"about clarity","Fragments":["of"]},{"Key":"of intent","Fragments":["than"]},{"Key":"intent than","Fragments":["performance,"]},{"Key":"than performance,","Fragments":["and"]},{"Key":"performance, and","Fragments":["since"]},{"Key":"and since","Fragments":["guards"]},{"Key":"since guards","Fragments":["have"]},{"Key":"guards have","Fragments":["a"]},{"Key":"a tendency","Fragments":["to"]},{"Key":"tendency to","Fragments":["grow"]},{"Key":"to grow","Fragments":["in"]},{"Key":"grow in","Fragments":["complexity"]},{"Key":"in complexity","Fragments":["as"]},{"Key":"complexity as","Fragments":["the"]},{"Key":"the software","Fragments":["is"]},{"Key":"software is","Fragments":["updated.)"]},{"Key":"Thanks, that's","Fragments":["super"]},{"Key":"that's super","Fragments":["helpful!"]},{"Key":"super helpful!","Fragments":[":D"]},{"Key":"This certainly","Fragments":["works"]},{"Key":"certainly works","Fragments":["and"]},{"Key":"works and","Fragments":["is"]},{"Key":"very concise.","Fragments":["My"]},{"Key":"concise. My","Fragments":["only"]},{"Key":"only concern","Fragments":["is"]},{"Key":"concern is","Fragments":["that"]},{"Key":"guard sequence","Fragments":["could"]},{"Key":"be hard","Fragments":["to"]},{"Key":"to digest.","Fragments":["I"]},{"Key":"digest. I","Fragments":["think"]},{"Key":"think expressing","Fragments":["the"]},{"Key":"expressing the","Fragments":["conditions"]},{"Key":"the conditions","Fragments":["as"]},{"Key":"conditions as","Fragments":["function"]},{"Key":"clauses yields","Fragments":["slightly"]},{"Key":"yields slightly","Fragments":["more"]},{"Key":"more clarity","Fragments":["in"]},{"Key":"use `=:=`","Fragments":["to"]},{"Key":"`=:=` to","Fragments":["indicate"]},{"Key":"to indicate","Fragments":["the","what"]},{"Key":"indicate the","Fragments":["return"]},{"Key":"value must","Fragments":["be"]},{"Key":"type (e.g.,","Fragments":["not"]},{"Key":"(e.g., not","Fragments":["a"]},{"Key":"a floating","Fragments":["point"]},{"Key":"floating point","Fragments":["in"]},{"Key":"point in","Fragments":["this"]},{"Key":"Could I","Fragments":["specify"]},{"Key":"I specify","Fragments":["that"]},{"Key":"that `Year`","Fragments":["must"]},{"Key":"`Year` must","Fragments":["be"]},{"Key":"the `-spec`","Fragments":["directive","`-type`"]},{"Key":"`-spec` directive","Fragments":["to"]},{"Key":"directive to","Fragments":["indicate"]},{"Key":"indicate what","Fragments":["inputs"]},{"Key":"what inputs","Fragments":["the"]},{"Key":"inputs the","Fragments":["function"]},{"Key":"function takes.","Fragments":["This"]},{"Key":"takes. This","Fragments":["is"]},{"Key":"is used","Fragments":["by","to"]},{"Key":"by [Dialyzer](http://learnyousomeerlang.com/dialyzer)","Fragments":["which"]},{"Key":"[Dialyzer](http://learnyousomeerlang.com/dialyzer) which","Fragments":["might"]},{"Key":"comprehensions, http://learnyousomeerlang.com/starting-out-for-real#list-comprehensions.","Fragments":["This","This"]},{"Key":"http://learnyousomeerlang.com/starting-out-for-real#list-comprehensions. This","Fragments":["is","is"]},{"Key":"idiomatic way","Fragments":["of","of"]},{"Key":"was writing","Fragments":["the"]},{"Key":"spec I","Fragments":["decided"]},{"Key":"to split","Fragments":["up"]},{"Key":"split up","Fragments":["the"]},{"Key":"the functions.","Fragments":["Probably"]},{"Key":"functions. Probably","Fragments":["should"]},{"Key":"Probably should","Fragments":["use"]},{"Key":"use `byte()`","Fragments":["instead"]},{"Key":"`byte()` instead","Fragments":["of"]},{"Key":" Check","Fragments":["out","out"]},{"Key":"out ```lists:map/2```.","Fragments":["It","Also"]},{"Key":"will make","Fragments":["this"]},{"Key":"more concise.","Fragments":["Love"]},{"Key":"concise. Love","Fragments":["the"]},{"Key":"Love the","Fragments":["use"]},{"Key":"with @alexis,","Fragments":["you"]},{"Key":"@alexis, you","Fragments":["should"]},{"Key":"use `lists:map/2`","Fragments":["or"]},{"Key":"`lists:map/2` or","Fragments":["a"]},{"Key":"a list-comprehension.","Fragments":["Manual"]},{"Key":"list-comprehension. Manual","Fragments":["recursion"]},{"Key":"Manual recursion","Fragments":["(iteration)"]},{"Key":"recursion (iteration)","Fragments":["is"]},{"Key":"(iteration) is","Fragments":["so"]},{"Key":"so *rarely*","Fragments":["necessary"]},{"Key":"*rarely* necessary","Fragments":["when"]},{"Key":"necessary when","Fragments":["working"]},{"Key":"when working","Fragments":["with"]},{"Key":"It's more","Fragments":["conventional"]},{"Key":"more conventional","Fragments":["to"]},{"Key":"conventional to","Fragments":["put"]},{"Key":"put your","Fragments":["spec"]},{"Key":"your spec","Fragments":["declarations","`string()`"]},{"Key":"spec declarations","Fragments":["directly"]},{"Key":"declarations directly","Fragments":["next"]},{"Key":"directly next","Fragments":["to"]},{"Key":"next to","Fragments":["the"]},{"Key":"is typing.","Fragments":["Also,"]},{"Key":"typing. Also,","Fragments":["you"]},{"Key":"consider making","Fragments":["custom"]},{"Key":"making custom","Fragments":["types"]},{"Key":"custom types","Fragments":["for"]},{"Key":"for RNA","Fragments":["and"]},{"Key":"RNA and","Fragments":["DNA"]},{"Key":"and DNA","Fragments":["and"]},{"Key":"DNA and","Fragments":["using"]},{"Key":"using those","Fragments":["in"]},{"Key":"those in","Fragments":["your"]},{"Key":"the catch-all","Fragments":["clause"]},{"Key":"catch-all clause","Fragments":["on"]},{"Key":"line 18.","Fragments":["If"]},{"Key":"18. If","Fragments":["someone"]},{"Key":"If someone","Fragments":["passes"]},{"Key":"invalid sequence,","Fragments":["it"]},{"Key":"sequence, it","Fragments":["is"]},{"Key":"is totally","Fragments":["ok"]},{"Key":"totally ok","Fragments":["to"]},{"Key":"ok to","Fragments":["crash"]},{"Key":"with `case_clause`.","Fragments":["If"]},{"Key":"`case_clause`. If","Fragments":["you"]},{"Key":"error context,","Fragments":["you"]},{"Key":"context, you","Fragments":["could"]},{"Key":"could throw","Fragments":["a"]},{"Key":"a custom","Fragments":["term"]},{"Key":"custom term","Fragments":["instead."]},{"Key":"realized the","Fragments":["`categorize`"]},{"Key":"the `categorize`","Fragments":["function"]},{"Key":"`categorize` function","Fragments":["saved"]},{"Key":"function saved","Fragments":["me"]},{"Key":"saved me","Fragments":["repeating"]},{"Key":"me repeating","Fragments":["the"]},{"Key":"repeating the","Fragments":["whitespace"]},{"Key":"whitespace response","Fragments":["in"]},{"Key":"response in","Fragments":["one"]},{"Key":"one location,","Fragments":["but"]},{"Key":"location, but","Fragments":["repeated"]},{"Key":"but repeated","Fragments":["all"]},{"Key":"repeated all","Fragments":["the"]},{"Key":"case statements","Fragments":["feel"]},{"Key":"statements feel","Fragments":["like"]},{"Key":"a missed","Fragments":["opportunity"]},{"Key":"missed opportunity","Fragments":["to"]},{"Key":"matching, which","Fragments":["is"]},{"Key":"is one","Fragments":["of"]},{"Key":"the greatest","Fragments":["things"]},{"Key":"greatest things","Fragments":["in"]},{"Key":"things in","Fragments":["Erlang"]},{"Key":"Maybe think","Fragments":["about"]},{"Key":"about doing","Fragments":["something"]},{"Key":"doing something","Fragments":["like"]},{"Key":"case {","Fragments":["re_shout(Question),"]},{"Key":"{ re_shout(Question),","Fragments":["lists:last(Question),"]},{"Key":"re_shout(Question), lists:last(Question),","Fragments":["re_whitespace(Message)"]},{"Key":"lists:last(Question), re_whitespace(Message)","Fragments":["}"]},{"Key":"re_whitespace(Message) }","Fragments":["of"]},{"Key":"_, false}","Fragments":["-\u003e"]},{"Key":"I noticed","Fragments":["that"]},{"Key":"that some","Fragments":["changes","more."]},{"Key":"some changes","Fragments":["I"]},{"Key":"changes I","Fragments":["made"]},{"Key":"made to","Fragments":["speed"]},{"Key":"to speed","Fragments":["up"]},{"Key":"speed up","Fragments":["the"]},{"Key":"code (including","Fragments":["the"]},{"Key":"the `ignores`","Fragments":["with"]},{"Key":"`ignores` with","Fragments":["the"]},{"Key":"the `find_multiples_under`","Fragments":["function)"]},{"Key":"`find_multiples_under` function)","Fragments":["rendered"]},{"Key":"function) rendered","Fragments":["my"]},{"Key":"rendered my","Fragments":["`list_of_multiples`"]},{"Key":"my `list_of_multiples`","Fragments":["unnecessary"]},{"Key":"`list_of_multiples` unnecessary","Fragments":["so"]},{"Key":"unnecessary so","Fragments":["I"]},{"Key":"could return","Fragments":["to"]},{"Key":"return to","Fragments":["my"]},{"Key":"my old","Fragments":["sumOfMultiples"]},{"Key":"old sumOfMultiples","Fragments":["design."]},{"Key":" Trying","Fragments":["to"]},{"Key":"Trying to","Fragments":["get"]},{"Key":"of empty","Fragments":["case"]},{"Key":"case first.","Fragments":["I"]},{"Key":"is okay,","Fragments":["but"]},{"Key":"okay, but","Fragments":["it"]},{"Key":"compact using","Fragments":["a"]},{"Key":"this --","Fragments":["the"]},{"Key":"-- the","Fragments":["check"]},{"Key":"for equal","Fragments":["size"]},{"Key":"equal size","Fragments":["strings"]},{"Key":"size strings","Fragments":["was"]},{"Key":"strings was","Fragments":["smart"]},{"Key":"was smart","Fragments":["although"]},{"Key":"smart although","Fragments":["the"]},{"Key":"although the","Fragments":["implementation"]},{"Key":"implementation note","Fragments":["said"]},{"Key":"note said","Fragments":["the"]},{"Key":"the we","Fragments":["could"]},{"Key":"could assume","Fragments":["it."]},{"Key":"It *might*","Fragments":["have"]},{"Key":"*might* have","Fragments":["been"]},{"Key":"been more","Fragments":["idiomatic"]},{"Key":"for equality","Fragments":["via"]},{"Key":"equality via","Fragments":["pattern-matching"]},{"Key":"via pattern-matching","Fragments":["in"]},{"Key":"head itself,","Fragments":["as"]},{"Key":"itself, as","Fragments":["in:"]},{"Key":" hamm_distance([H","Fragments":["|TailS1],"]},{"Key":"hamm_distance([H |TailS1],","Fragments":["[H"]},{"Key":"|TailS1], [H","Fragments":["|"]},{"Key":"[H |","Fragments":["TailS2],"]},{"Key":"| TailS2],","Fragments":["Dist)","Dist)"]},{"Key":"TailS2], Dist)","Fragments":["-\u003e","-\u003e"]},{"Key":"Dist) -\u003e","Fragments":["hamm_distance(TailS1,","hamm_distance(TailS1,"]},{"Key":"-\u003e hamm_distance(TailS1,","Fragments":["TailS2,","TailS2,"]},{"Key":"hamm_distance(TailS1, TailS2,","Fragments":["Dist);","Dist+1);"]},{"Key":" hamm_distance([_","Fragments":["|TailS1],"]},{"Key":"hamm_distance([_ |TailS1],","Fragments":["[_"]},{"Key":"|TailS1], [_","Fragments":["|"]},{"Key":"[_ |","Fragments":["TailS2],"]},{"Key":"Using erlang","Fragments":["pattern"]},{"Key":"erlang pattern","Fragments":["matching"]},{"Key":"when instead","Fragments":["of"]},{"Key":"of if,","Fragments":["I"]},{"Key":"if, I","Fragments":["think"]},{"Key":"this creates","Fragments":["a"]},{"Key":"creates a","Fragments":["cleaner"]},{"Key":"a cleaner","Fragments":["erlang"]},{"Key":"cleaner erlang","Fragments":["code,"]},{"Key":"erlang code,","Fragments":["obviously"]},{"Key":"code, obviously","Fragments":["the"]},{"Key":"obviously the","Fragments":["order"]},{"Key":"the patterns","Fragments":["is"]},{"Key":"patterns is","Fragments":["the"]},{"Key":"the one","Fragments":["that"]},{"Key":"one that","Fragments":["implements"]},{"Key":"that implements","Fragments":["the"]},{"Key":"implements the","Fragments":["algorithm"]},{"Key":"algorithm (divisible","Fragments":["by"]},{"Key":"(divisible by","Fragments":["4","400)."]},{"Key":"4 but","Fragments":["not"]},{"Key":"not 100)","Fragments":["or"]},{"Key":"100) or","Fragments":["(divisible"]},{"Key":"or (divisible","Fragments":["by"]},{"Key":" @jerad","Fragments":["I"]},{"Key":"@jerad I","Fragments":["don't"]},{"Key":"don't agree","Fragments":["with"]},{"Key":"spec `string()`","Fragments":["is"]},{"Key":"as `[char()]`.","Fragments":["And"]},{"Key":"`[char()]`. And","Fragments":["`byte()`"]},{"Key":"And `byte()`","Fragments":["is"]},{"Key":"`byte()` is","Fragments":["still"]},{"Key":"still too","Fragments":["general"]},{"Key":"too general","Fragments":["`0..255`"]},{"Key":"general `0..255`","Fragments":["why"]},{"Key":"`0..255` why","Fragments":["not"]},{"Key":"define your","Fragments":["own"]},{"Key":"A couple","Fragments":["of"]},{"Key":"couple of","Fragments":["small","alternative"]},{"Key":"of small","Fragments":["changes"]},{"Key":"small changes","Fragments":["would"]},{"Key":"changes would","Fragments":["simply"]},{"Key":"would simply","Fragments":["this."]},{"Key":"simply this.","Fragments":["First,"]},{"Key":"this. First,","Fragments":["use"]},{"Key":"First, use","Fragments":["lists:sum/1"]},{"Key":"use lists:sum/1","Fragments":["instead"]},{"Key":"lists:sum/1 instead","Fragments":["of"]},{"Key":"the sum_list/1","Fragments":["function"]},{"Key":"sum_list/1 function","Fragments":["(line"]},{"Key":"function (line","Fragments":["13)."]},{"Key":"(line 13).","Fragments":["Second,"]},{"Key":"13). Second,","Fragments":["it's"]},{"Key":"Second, it's","Fragments":["possible"]},{"Key":"comprehension filter","Fragments":["function"]},{"Key":"that can","Fragments":["be"]},{"Key":"line 17","Fragments":["that"]},{"Key":"17 that","Fragments":["wouldn't"]},{"Key":"that wouldn't","Fragments":["require"]},{"Key":"wouldn't require","Fragments":["the"]},{"Key":"require the","Fragments":["use"]},{"Key":"I especially","Fragments":["like"]},{"Key":"especially like","Fragments":["\"Truthiness\""]},{"Key":"like \"Truthiness\"","Fragments":[":)"]},{"Key":"Nicely done.","Fragments":["I"]},{"Key":"done. I","Fragments":["thought"]},{"Key":"using \u003cstrong\u003elists:zip\u003c/strong\u003e","Fragments":["as"]},{"Key":"\u003cstrong\u003elists:zip\u003c/strong\u003e as","Fragments":["well,"]},{"Key":"in conjunction","Fragments":["with"]},{"Key":"conjunction with","Fragments":["\u003cstrong\u003elists:foldl\u003c/strong\u003e."]},{"Key":"heads with","Fragments":["the"]},{"Key":" Crap!","Fragments":["I"]},{"Key":"Crap! I","Fragments":["never"]},{"Key":"never even","Fragments":["considered"]},{"Key":"even considered","Fragments":["using"]},{"Key":"considered using","Fragments":["the"]},{"Key":"a word/anagram.","Fragments":["Really"]},{"Key":"word/anagram. Really","Fragments":["cool"]},{"Key":"particular reason","Fragments":["for"]},{"Key":"the translation","Fragments":["function","would"]},{"Key":"translation function","Fragments":["a"]},{"Key":"function a","Fragments":["lambda"]},{"Key":"a lambda","Fragments":["expression"]},{"Key":"lambda expression","Fragments":["embedded"]},{"Key":"expression embedded","Fragments":["in"]},{"Key":"embedded in","Fragments":["the"]},{"Key":"to `map`,","Fragments":["as"]},{"Key":"`map`, as","Fragments":["opposed"]},{"Key":"to making","Fragments":["it"]},{"Key":" Extra","Fragments":["idea,"]},{"Key":"Extra idea,","Fragments":["what"]},{"Key":"idea, what","Fragments":["happens","happens"]},{"Key":"happens when","Fragments":["you","you"]},{"Key":"a char,","Fragments":["which"]},{"Key":"char, which","Fragments":["is"]},{"Key":"a number,","Fragments":["or"]},{"Key":"number, or","Fragments":["a"]},{"Key":"string which","Fragments":["is"]},{"Key":"I realize","Fragments":["that"]},{"Key":"have made","Fragments":["nucleotide_counts/1","it"]},{"Key":"made nucleotide_counts/1","Fragments":["use"]},{"Key":"nucleotide_counts/1 use","Fragments":["count/2."]},{"Key":"use count/2.","Fragments":["But"]},{"Key":"count/2. But","Fragments":["I"]},{"Key":"the iterative","Fragments":["nucleotide_counts/1"]},{"Key":"iterative nucleotide_counts/1","Fragments":["instead"]},{"Key":"nucleotide_counts/1 instead","Fragments":["because"]},{"Key":"instead because","Fragments":["it"]},{"Key":"it traverses","Fragments":["the"]},{"Key":"traverses the","Fragments":["DNA"]},{"Key":"the DNA","Fragments":["string","string"]},{"Key":"string just","Fragments":["once,"]},{"Key":"just once,","Fragments":["where"]},{"Key":"once, where","Fragments":["reusing"]},{"Key":"where reusing","Fragments":["the"]},{"Key":"the count/2","Fragments":["function"]},{"Key":"count/2 function","Fragments":["would"]},{"Key":"would step","Fragments":["through"]},{"Key":"string 4","Fragments":["times."]},{"Key":"Best yet,","Fragments":["nice!"]},{"Key":"follow vs.","Fragments":["the"]},{"Key":"vs. the","Fragments":["similar"]},{"Key":"the similar","Fragments":["submission"]},{"Key":"similar submission","Fragments":["made"]},{"Key":"submission made","Fragments":["by"]},{"Key":"made by","Fragments":["@golden."]},{"Key":"by @golden.","Fragments":["In"]},{"Key":"@golden. In","Fragments":["particular,"]},{"Key":"In particular,","Fragments":["the"]},{"Key":"particular, the","Fragments":["implementation"]},{"Key":"function referenced","Fragments":["by"]},{"Key":"referenced by","Fragments":["multipleValidator"]},{"Key":"by multipleValidator","Fragments":["took"]},{"Key":"multipleValidator took","Fragments":["some"]},{"Key":"took some","Fragments":["time"]},{"Key":"it worked","Fragments":["in"]},{"Key":"worked in","Fragments":["the"]},{"Key":"the context","Fragments":["of"]},{"Key":"context of","Fragments":["the"]},{"Key":"the lists:filter/2","Fragments":["call"]},{"Key":"lists:filter/2 call","Fragments":["on"]},{"Key":"line 11.","Fragments":["Otherwise,"]},{"Key":"11. Otherwise,","Fragments":["nice"]},{"Key":"Otherwise, nice","Fragments":["job!"]},{"Key":"```lists:map/2```. Also","Fragments":["look"]},{"Key":"into using","Fragments":["$CHAR"]},{"Key":"using $CHAR","Fragments":["notation"]},{"Key":"$CHAR notation","Fragments":["instead"]},{"Key":"notation instead","Fragments":["of"]},{"Key":"the integer","Fragments":["equivalent","equivalent"]},{"Key":"integer equivalent","Fragments":["(e.g.,","for"]},{"Key":"equivalent (e.g.,","Fragments":["$G"]},{"Key":"(e.g., $G","Fragments":["references"]},{"Key":"$G references","Fragments":["the"]},{"Key":"references the","Fragments":["character"]},{"Key":"character 'G'","Fragments":["whereas"]},{"Key":"'G' whereas","Fragments":["\"G\""]},{"Key":"whereas \"G\"","Fragments":["is"]},{"Key":"\"G\" is","Fragments":["a"]},{"Key":"character 'G').","Fragments":["So,"]},{"Key":"'G'). So,","Fragments":["you"]},{"Key":"So, you","Fragments":["can"]},{"Key":"can pattern","Fragments":["match"]},{"Key":"match on,","Fragments":["and"]},{"Key":"on, and","Fragments":["return,"]},{"Key":"and return,","Fragments":["single"]},{"Key":"return, single","Fragments":["characters"]},{"Key":"characters as","Fragments":["in"]},{"Key":" ```case","Fragments":["H"]},{"Key":"```case H","Fragments":["of"]},{"Key":"$G -\u003e","Fragments":["$C"]},{"Key":"I dislike","Fragments":["this"]},{"Key":"dislike this","Fragments":["code"]},{"Key":"code because","Fragments":["of","this"]},{"Key":"the nested","Fragments":["guard"]},{"Key":"nested guard","Fragments":["clauses."]},{"Key":"guard clauses.","Fragments":["I"]},{"Key":"clauses. I","Fragments":["had"]},{"Key":"a hard","Fragments":["time"]},{"Key":"hard time","Fragments":["myself"]},{"Key":"time myself","Fragments":["getting"]},{"Key":"myself getting","Fragments":["my"]},{"Key":"getting my","Fragments":["head"]},{"Key":"the conditions.","Fragments":["I"]},{"Key":"conditions. I","Fragments":["only"]},{"Key":"only like","Fragments":["the"]},{"Key":"line 4","Fragments":["because"]},{"Key":"4 because","Fragments":["that"]},{"Key":"is easy","Fragments":["to"]},{"Key":"to comprehend.","Fragments":["I"]},{"Key":"comprehend. I","Fragments":["ended"]},{"Key":"with code","Fragments":["because"]},{"Key":"could wrap","Fragments":["my"]},{"Key":"my end","Fragments":["around"]},{"Key":"end around","Fragments":["the"]},{"Key":"problem. Not","Fragments":["sure"]},{"Key":"this snippet.","Fragments":["It"]},{"Key":"snippet. It","Fragments":["works"]},{"Key":"works but","Fragments":["not"]},{"Key":"any better.","Fragments":["It's"]},{"Key":"better. It's","Fragments":["essentially"]},{"Key":"It's essentially","Fragments":["an"]},{"Key":"essentially an","Fragments":["implementation"]},{"Key":"of map","Fragments":["without"]},{"Key":"map without","Fragments":["a"]},{"Key":"function argument.","Fragments":["Given"]},{"Key":"argument. Given","Fragments":["the"]},{"Key":"argument is","Fragments":["a"]},{"Key":"string, `++`","Fragments":["is"]},{"Key":"to concatenate","Fragments":["a"]},{"Key":"concatenate a","Fragments":["string."]},{"Key":"string. This","Fragments":["seemed"]},{"Key":"This seemed","Fragments":["easier"]},{"Key":"seemed easier","Fragments":["than"]},{"Key":"easier than","Fragments":["building"]},{"Key":"than building","Fragments":["a"]},{"Key":"of characters","Fragments":["than"]},{"Key":"characters than","Fragments":["doing"]},{"Key":"Ah, can","Fragments":["collapse"]},{"Key":"can collapse","Fragments":["the"]},{"Key":"collapse the","Fragments":["cases"]},{"Key":"for nesting.","Fragments":["Added"]},{"Key":"nesting. Added","Fragments":["the"]},{"Key":"Added the","Fragments":["spec"]},{"Key":"spec because","Fragments":["contracts"]},{"Key":"because contracts","Fragments":["matter."]},{"Key":"solution becomes","Fragments":["much"]},{"Key":"becomes much","Fragments":["cleaner"]},{"Key":"cleaner using","Fragments":["map."]},{"Key":"code pisses","Fragments":["me"]},{"Key":"pisses me","Fragments":["off"]},{"Key":"me off","Fragments":["because"]},{"Key":"off because","Fragments":["is"]},{"Key":"because is","Fragments":["requires"]},{"Key":"is requires","Fragments":["so"]},{"Key":"requires so","Fragments":["much"]},{"Key":"much ceremony","Fragments":["to"]},{"Key":"ceremony to","Fragments":["map"]},{"Key":"map response","Fragments":["values"]},{"Key":"response values","Fragments":["using"]},{"Key":"values using","Fragments":["regexps."]},{"Key":"using regexps.","Fragments":["Also"]},{"Key":"regexps. Also","Fragments":["it"]},{"Key":"Also it","Fragments":["doesn't"]},{"Key":"pass all","Fragments":["the","the"]},{"Key":"tests. Generally","Fragments":["not"]},{"Key":"Generally not","Fragments":["sure"]},{"Key":"problem in","Fragments":["erlang."]},{"Key":"Interesting approach,","Fragments":["it's"]},{"Key":"approach, it's","Fragments":["nice"]},{"Key":"and concise.","Fragments":["But..."]},{"Key":"concise. But...","Fragments":["I"]},{"Key":"But... I","Fragments":["found"]},{"Key":"found it","Fragments":["difficult"]},{"Key":"it difficult","Fragments":["to"]},{"Key":"understand. I","Fragments":["prefer"]},{"Key":"prefer an","Fragments":["approach"]},{"Key":"an approach","Fragments":["that"]},{"Key":"approach that","Fragments":["a"]},{"Key":"a typical","Fragments":["developer"]},{"Key":"typical developer","Fragments":["could"]},{"Key":"developer could","Fragments":["follow,"]},{"Key":"could follow,","Fragments":["and"]},{"Key":"follow, and","Fragments":["debug,"]},{"Key":"and debug,","Fragments":["even"]},{"Key":"debug, even","Fragments":["though"]},{"Key":"as concise.","Fragments":["E.g.,"]},{"Key":"concise. E.g.,","Fragments":["@izaiah"]},{"Key":"E.g., @izaiah","Fragments":["has"]},{"Key":"@izaiah has","Fragments":["a"]},{"Key":"solution that's","Fragments":["only"]},{"Key":"that's only","Fragments":["3"]},{"Key":"only 3","Fragments":["lines"]},{"Key":"3 lines","Fragments":["longer"]},{"Key":"lines longer","Fragments":["but"]},{"Key":"longer but","Fragments":["I"]},{"Key":"I understood","Fragments":["it"]},{"Key":"understood it","Fragments":["in"]},{"Key":"in less","Fragments":["than"]},{"Key":"less than","Fragments":["a"]},{"Key":"a minute.","Fragments":["Of"]},{"Key":"minute. Of","Fragments":["course,"]},{"Key":"Of course,","Fragments":["I"]},{"Key":"course, I","Fragments":["may"]},{"Key":"as bright","Fragments":["as"]},{"Key":"bright as","Fragments":["the"]},{"Key":"the \"typical","Fragments":["developer\""]},{"Key":"\"typical developer\"","Fragments":[":)"]},{"Key":"a couple","Fragments":["of"]},{"Key":"of alternative","Fragments":["approaches"]},{"Key":"alternative approaches","Fragments":["to"]},{"Key":"1. use","Fragments":["List"]},{"Key":"use List","Fragments":["Comprehensions"]},{"Key":"List Comprehensions","Fragments":["(http://learnyousomeerlang.com/starting-out-for-real#list-comprehensions)."]},{"Key":"2. Better","Fragments":["yet,"]},{"Key":"Better yet,","Fragments":["look"]},{"Key":"yet, look","Fragments":["into"]},{"Key":"approach of","Fragments":["presorting"]},{"Key":"of presorting","Fragments":["the"]},{"Key":"presorting the","Fragments":["options."]},{"Key":"are more","Fragments":["straightforward"]},{"Key":"straightforward solutions","Fragments":["to"]},{"Key":"solutions to","Fragments":["this"]},{"Key":"(e.g., @marion).","Fragments":["You"]},{"Key":"@marion). You","Fragments":["might"]},{"Key":"consider taking","Fragments":["a"]},{"Key":"taking a","Fragments":["look"]},{"Key":"at them","Fragments":["and"]},{"Key":"and reconsidering","Fragments":["your"]},{"Key":"reconsidering your","Fragments":["approach."]},{"Key":"your approach.","Fragments":["E.g.,"]},{"Key":"approach. E.g.,","Fragments":["you"]},{"Key":"E.g., you","Fragments":["can"]},{"Key":"get by","Fragments":["without"]},{"Key":"by without","Fragments":["using"]},{"Key":"using map,","Fragments":["flatten,"]},{"Key":"map, flatten,","Fragments":["or"]},{"Key":"flatten, or","Fragments":["usort;"]},{"Key":"or usort;","Fragments":["a"]},{"Key":"usort; a","Fragments":["combination"]},{"Key":"a combination","Fragments":["of"]},{"Key":"and any","Fragments":["is"]},{"Key":"any is","Fragments":["sufficient."]},{"Key":"is sufficient.","Fragments":["Or"]},{"Key":"sufficient. Or","Fragments":["you"]},{"Key":"Or you","Fragments":["could"]},{"Key":"one really","Fragments":["nitpicky"]},{"Key":"really nitpicky","Fragments":["comments"]},{"Key":"nitpicky comments","Fragments":["-"]},{"Key":"comments -","Fragments":["\"Array\""]},{"Key":"- \"Array\"","Fragments":["isn't"]},{"Key":"\"Array\" isn't","Fragments":["an"]},{"Key":"isn't an","Fragments":["array,"]},{"Key":"an array,","Fragments":["it's"]},{"Key":"array, it's","Fragments":["a"]},{"Key":"list -","Fragments":["and"]},{"Key":"more descriptive","Fragments":["name"]},{"Key":"descriptive name","Fragments":["would"]},{"Key":"nice (e.g.,","Fragments":["Divisors)."]},{"Key":"While \u003cstrong\u003e++\u003c/strong\u003e","Fragments":["creates"]},{"Key":"\u003cstrong\u003e++\u003c/strong\u003e creates","Fragments":["the"]},{"Key":"creates the","Fragments":["Result"]},{"Key":"the Result","Fragments":["in"]},{"Key":"Result in","Fragments":["the"]},{"Key":"correct order,","Fragments":["it"]},{"Key":"order, it","Fragments":["is"]},{"Key":"an expensive","Fragments":["operation"]},{"Key":"expensive operation","Fragments":["when"]},{"Key":"operation when","Fragments":["compared"]},{"Key":"to building","Fragments":["the"]},{"Key":"in reverse","Fragments":["order"]},{"Key":"reverse order","Fragments":["and"]},{"Key":"order and","Fragments":["then"]},{"Key":"using \u003cstrong\u003elists:reverse/1\u003c/strong\u003e","Fragments":["to"]},{"Key":"\u003cstrong\u003elists:reverse/1\u003c/strong\u003e to","Fragments":["get"]},{"Key":"the proper","Fragments":["order"]},{"Key":"proper order","Fragments":["(see"]},{"Key":"order (see","Fragments":["http://www.erlang.org/doc/efficiency_guide/listHandling.html)."]},{"Key":"Okay, that's","Fragments":["horrible."]},{"Key":"that's horrible.","Fragments":["I"]},{"Key":"horrible. I","Fragments":["did"]},{"Key":"did without","Fragments":["regex"]},{"Key":"without regex","Fragments":["to"]},{"Key":"regex to","Fragments":["make"]},{"Key":"different approach.","Fragments":["hahaha"]},{"Key":"Just discovered","Fragments":["that"]},{"Key":"i can't","Fragments":["use"]},{"Key":"in guards,","Fragments":["than"]},{"Key":"guards, than","Fragments":["i"]},{"Key":"than i","Fragments":["did"]},{"Key":"i did","Fragments":["this"]},{"Key":"this if_else","Fragments":["function."]},{"Key":"if_else function.","Fragments":["I"]},{"Key":"I I","Fragments":["I","think"]},{"Key":"it's nice,","Fragments":["actually."]},{"Key":"nice, actually.","Fragments":["HAHAHA"]},{"Key":"Well, I","Fragments":["really"]},{"Key":"need nits","Fragments":["here."]},{"Key":"nits here.","Fragments":[":X"]},{"Key":"Need to","Fragments":["take"]},{"Key":"another crack","Fragments":["at"]},{"Key":"crack at","Fragments":["this."]},{"Key":"at this.","Fragments":["I"]},{"Key":"I originally","Fragments":["thought"]},{"Key":"originally thought","Fragments":["regexs"]},{"Key":"thought regexs","Fragments":["by"]},{"Key":"regexs by","Fragments":["themselves"]},{"Key":"by themselves","Fragments":["would"]},{"Key":"themselves would","Fragments":["work,"]},{"Key":"would work,","Fragments":["and"]},{"Key":"work, and","Fragments":["I"]},{"Key":"liked that","Fragments":["extending"]},{"Key":"that extending","Fragments":["the"]},{"Key":"extending the","Fragments":["code"]},{"Key":"adding to","Fragments":["the"]},{"Key":"the macro.","Fragments":["Alas,"]},{"Key":"macro. Alas,","Fragments":["the"]},{"Key":"Alas, the","Fragments":["regexs"]},{"Key":"the regexs","Fragments":["are"]},{"Key":"regexs are","Fragments":["too"]},{"Key":"are too","Fragments":["complicated"]},{"Key":"too complicated","Fragments":["and"]},{"Key":"still doesn't","Fragments":["pass"]},{"Key":" Comments","Fragments":["still"]},{"Key":"Comments still","Fragments":["welcome!"]},{"Key":"Did some","Fragments":["minor"]},{"Key":"some minor","Fragments":["refactoring"]},{"Key":"minor refactoring","Fragments":["that"]},{"Key":"refactoring that","Fragments":["resulted"]},{"Key":"that resulted","Fragments":["in"]},{"Key":"in submission","Fragments":["#3."]},{"Key":"Your list","Fragments":["approach"]},{"Key":"quite clever,","Fragments":["although"]},{"Key":"clever, although","Fragments":["it's"]},{"Key":"it's less","Fragments":["straight","straightforward"]},{"Key":"less straight","Fragments":["forward"]},{"Key":"forward than","Fragments":["just"]},{"Key":"than just","Fragments":["using"]},{"Key":"just using","Fragments":["cases."]},{"Key":"using cases.","Fragments":["Something"]},{"Key":"cases. Something","Fragments":["like"]},{"Key":"case {IsSilence,","Fragments":["IsShout,"]},{"Key":"{IsSilence, IsShout,","Fragments":["IsQuestion}"]},{"Key":"IsShout, IsQuestion}","Fragments":["of"]},{"Key":" {true,_,_}","Fragments":["-\u003e"]},{"Key":"{true,_,_} -\u003e","Fragments":["\"Fine,"]},{"Key":"-\u003e \"Fine,","Fragments":["..."]},{"Key":" {_,true,_}","Fragments":["-\u003e"]},{"Key":"{_,true,_} -\u003e","Fragments":["\"Whoa..."]},{"Key":" {_,_,true}","Fragments":["-\u003e"]},{"Key":"{_,_,true} -\u003e","Fragments":["\"Sure..."]},{"Key":" {_,_,_}","Fragments":["-\u003e"]},{"Key":"{_,_,_} -\u003e","Fragments":["\"Whatever.\""]},{"Key":" @trey,","Fragments":["I"]},{"Key":"@trey, I","Fragments":["agree"]},{"Key":"less straightforward","Fragments":["as"]},{"Key":"straightforward as","Fragments":["the"]},{"Key":"currently scoped.","Fragments":["I"]},{"Key":"scoped. I","Fragments":["think"]},{"Key":"choice between","Fragments":["the"]},{"Key":"2 approaches","Fragments":["would"]},{"Key":"approaches would","Fragments":["shift"]},{"Key":"would shift","Fragments":["if"]},{"Key":"shift if","Fragments":["there"]},{"Key":"was an","Fragments":["expectation"]},{"Key":"an expectation","Fragments":["that"]},{"Key":"expectation that","Fragments":["there"]},{"Key":"there would","Fragments":["be"]},{"Key":"more statements","Fragments":["or","is"]},{"Key":"statements or","Fragments":["not."]},{"Key":"or not.","Fragments":["The"]},{"Key":"not. The","Fragments":["case"]},{"Key":"The case","Fragments":["approach"]},{"Key":"case approach","Fragments":["would"]},{"Key":"require changing","Fragments":["the"]},{"Key":"changing the","Fragments":["core","source"]},{"Key":"core algorithm,","Fragments":["i.e.,"]},{"Key":"algorithm, i.e.,","Fragments":["adding"]},{"Key":"i.e., adding","Fragments":["more"]},{"Key":"adding more","Fragments":["entries"]},{"Key":"more entries","Fragments":["to"]},{"Key":"entries to","Fragments":["the"]},{"Key":"expression and","Fragments":["the"]},{"Key":"match tuples.","Fragments":["My"]},{"Key":"tuples. My","Fragments":["approach"]},{"Key":"My approach","Fragments":["wouldn't"]},{"Key":"approach wouldn't","Fragments":["and"]},{"Key":"wouldn't and","Fragments":["might"]},{"Key":"and might","Fragments":["be"]},{"Key":"clearer when/if","Fragments":["support"]},{"Key":"when/if support","Fragments":["for"]},{"Key":"support for","Fragments":["more"]},{"Key":"statements is","Fragments":["required."]},{"Key":"the `case`","Fragments":["approach"]},{"Key":"`case` approach","Fragments":["does"]},{"Key":"approach does","Fragments":["not"]},{"Key":"not short","Fragments":["circuit."]},{"Key":"short circuit.","Fragments":["It"]},{"Key":"circuit. It","Fragments":["would"]},{"Key":"require that","Fragments":["you"]},{"Key":"you always","Fragments":["evaluate"]},{"Key":"always evaluate","Fragments":["all"]},{"Key":"evaluate all","Fragments":["the"]},{"Key":"the `is_...`","Fragments":["functions."]},{"Key":"collapse lines","Fragments":["24"]},{"Key":"lines 24","Fragments":["and","\u0026"]},{"Key":"24 and","Fragments":["25"]},{"Key":"and 25","Fragments":["into"]},{"Key":"25 into","Fragments":["one"]},{"Key":"into one","Fragments":["statement:","function,"]},{"Key":" get_response(Statement,","Fragments":["[{MatchFun,"]},{"Key":"get_response(Statement, [{MatchFun,","Fragments":["Response}"]},{"Key":"[{MatchFun, Response}","Fragments":["|"]},{"Key":"Response} |","Fragments":["Tail])"]},{"Key":"| Tail])","Fragments":["-\u003e"]},{"Key":"your check","Fragments":["to"]},{"Key":"check to","Fragments":["see"]},{"Key":"string contains","Fragments":["alpha"]},{"Key":"contains alpha","Fragments":["chars,"]},{"Key":"alpha chars,","Fragments":["`string:to_upper(Statement)"]},{"Key":"chars, `string:to_upper(Statement)","Fragments":["=/="]},{"Key":"`string:to_upper(Statement) =/=","Fragments":["string:to_lower(Statement)`."]},{"Key":"=/= string:to_lower(Statement)`.","Fragments":["Stealing"]},{"Key":"string:to_lower(Statement)`. Stealing","Fragments":["that"]},{"Key":"Stealing that","Fragments":[":)"]},{"Key":" @jackie","Fragments":["Great"]},{"Key":"@jackie Great","Fragments":["comments,"]},{"Key":"Great comments,","Fragments":["thanks!"]},{"Key":"can tweak","Fragments":["this"]},{"Key":"tweak this","Fragments":["to"]},{"Key":"to short","Fragments":["circuit"]},{"Key":"short circuit","Fragments":["the"]},{"Key":"circuit the","Fragments":["\u003ccode\u003ecase\u003c/code\u003e"]},{"Key":"the \u003ccode\u003ecase\u003c/code\u003e","Fragments":["statement"]},{"Key":"\u003ccode\u003ecase\u003c/code\u003e statement","Fragments":["as"]},{"Key":"statement as","Fragments":["you"]},{"Key":"you suggest.","Fragments":["Going"]},{"Key":"suggest. Going","Fragments":["to"]},{"Key":"Going to","Fragments":["think"]},{"Key":"I'm somewhat","Fragments":["chagrined"]},{"Key":"somewhat chagrined","Fragments":["that"]},{"Key":"chagrined that","Fragments":["I"]},{"Key":"I missed","Fragments":["collapsing","it"]},{"Key":"missed collapsing","Fragments":["lines"]},{"Key":"collapsing lines","Fragments":["24"]},{"Key":"24 \u0026","Fragments":["25,"]},{"Key":"\u0026 25,","Fragments":["thanks"]},{"Key":"25, thanks","Fragments":["for"]},{"Key":"for calling","Fragments":["that"]},{"Key":"calling that","Fragments":["out."]},{"Key":"Best of","Fragments":["all,"]},{"Key":"of all,","Fragments":["thanks"]},{"Key":"all, thanks","Fragments":["for"]},{"Key":"for stealing","Fragments":["the"]},{"Key":"stealing the","Fragments":["alpha"]},{"Key":"the alpha","Fragments":["check"]},{"Key":"alpha check","Fragments":[":)"]},{"Key":"check :)","Fragments":["(I"]},{"Key":":) (I","Fragments":["think"]},{"Key":"I stole","Fragments":["it"]},{"Key":"it too","Fragments":[";\u003e)"]},{"Key":" Success,","Fragments":["no"]},{"Key":"Success, no","Fragments":["more"]},{"Key":"no more","Fragments":["complicated"]},{"Key":"more complicated","Fragments":["regexs!"]},{"Key":"was able","Fragments":["to"]},{"Key":"to achieve","Fragments":["my"]},{"Key":"achieve my","Fragments":["original"]},{"Key":"original goal","Fragments":["of"]},{"Key":"goal of","Fragments":["creating"]},{"Key":"of creating","Fragments":["a"]},{"Key":"creating a","Fragments":["module"]},{"Key":"a module","Fragments":["whose","function"]},{"Key":"module whose","Fragments":["basic"]},{"Key":"whose basic","Fragments":["algorithm"]},{"Key":"basic algorithm","Fragments":["(\u003cem\u003eresponse_for/1\u003c/em\u003e"]},{"Key":"algorithm (\u003cem\u003eresponse_for/1\u003c/em\u003e","Fragments":["\u0026"]},{"Key":"(\u003cem\u003eresponse_for/1\u003c/em\u003e \u0026","Fragments":["\u003cem\u003eget_response/2\u003c/em\u003e)"]},{"Key":"\u0026 \u003cem\u003eget_response/2\u003c/em\u003e)","Fragments":["wouldn't"]},{"Key":"\u003cem\u003eget_response/2\u003c/em\u003e) wouldn't","Fragments":["have"]},{"Key":"wouldn't have","Fragments":["to"]},{"Key":"to change","Fragments":["if"]},{"Key":"change if","Fragments":["new"]},{"Key":"if new","Fragments":["requirements"]},{"Key":"new requirements","Fragments":["were"]},{"Key":"requirements were","Fragments":["added,"]},{"Key":"were added,","Fragments":["hence"]},{"Key":"added, hence","Fragments":["the"]},{"Key":"hence the","Fragments":["recursion"]},{"Key":"recursion with","Fragments":["\u003cem\u003eget_response/2\u003c/em\u003e."]},{"Key":"with \u003cem\u003eget_response/2\u003c/em\u003e.","Fragments":["A"]},{"Key":"\u003cem\u003eget_response/2\u003c/em\u003e. A","Fragments":["new"]},{"Key":"A new","Fragments":["requirement"]},{"Key":"new requirement","Fragments":["can"]},{"Key":"requirement can","Fragments":["be"]},{"Key":"be supported","Fragments":["by"]},{"Key":"supported by","Fragments":["adding"]},{"Key":"adding an","Fragments":["entry"]},{"Key":"an entry","Fragments":["to"]},{"Key":"entry to","Fragments":["RESPONSE_TYPES."]},{"Key":"to RESPONSE_TYPES.","Fragments":["In"]},{"Key":"RESPONSE_TYPES. In","Fragments":["addition,"]},{"Key":"In addition,","Fragments":["the","the"]},{"Key":"addition, the","Fragments":["order","following"]},{"Key":"checks doesn't","Fragments":["matter"]},{"Key":"doesn't matter","Fragments":["(i.e.,"]},{"Key":"matter (i.e.,","Fragments":["the"]},{"Key":"(i.e., the","Fragments":["RESPONSE_TYPES"]},{"Key":"the RESPONSE_TYPES","Fragments":["list"]},{"Key":"RESPONSE_TYPES list","Fragments":["items"]},{"Key":"list items","Fragments":["can"]},{"Key":"items can","Fragments":["be"]},{"Key":"be reordered","Fragments":["and"]},{"Key":"reordered and","Fragments":["the"]},{"Key":"tests still","Fragments":["pass)."]},{"Key":"couldn't decide","Fragments":["between"]},{"Key":"decide between","Fragments":["using"]},{"Key":"recursion or","Fragments":["\u003cstrong\u003elists:foldl/3\u003c/strong\u003e,"]},{"Key":"or \u003cstrong\u003elists:foldl/3\u003c/strong\u003e,","Fragments":["so"]},{"Key":"\u003cstrong\u003elists:foldl/3\u003c/strong\u003e, so","Fragments":["I"]},{"Key":"I included","Fragments":["both"]},{"Key":"included both","Fragments":["(with"]},{"Key":"both (with","Fragments":["the"]},{"Key":"latter commented","Fragments":["out)."]},{"Key":"commented out).","Fragments":["I"]},{"Key":"out). I","Fragments":["have"]},{"Key":"a slight","Fragments":["preference"]},{"Key":"slight preference","Fragments":["to"]},{"Key":"preference to","Fragments":["using"]},{"Key":"using \u003cstrong\u003elists:foldl/3\u003c/strong\u003e,","Fragments":["but"]},{"Key":"\u003cstrong\u003elists:foldl/3\u003c/strong\u003e, but","Fragments":["I'm"]},{"Key":"I'm interested","Fragments":["in"]},{"Key":"This shows","Fragments":["2"]},{"Key":"shows 2","Fragments":["approaches."]},{"Key":"2 approaches.","Fragments":["The"]},{"Key":"approaches. The","Fragments":["one"]},{"Key":"one with","Fragments":["filter","function"]},{"Key":"with filter","Fragments":["is"]},{"Key":"filter is","Fragments":["perhaps"]},{"Key":"is perhaps","Fragments":["more","more"]},{"Key":"perhaps more","Fragments":["concise","understandable."]},{"Key":"a misuse","Fragments":["of"]},{"Key":"misuse of","Fragments":["filter"]},{"Key":"filter (i.e,","Fragments":["it's"]},{"Key":"(i.e, it's","Fragments":["intended"]},{"Key":"it's intended","Fragments":["to"]},{"Key":"intended to","Fragments":["only"]},{"Key":"only return","Fragments":["a"]},{"Key":"single item,","Fragments":["not"]},{"Key":"item, not","Fragments":["a"]},{"Key":"a list).","Fragments":["The"]},{"Key":"list). The","Fragments":["one"]},{"Key":"guards is","Fragments":["perhaps"]},{"Key":"the define","Fragments":["macro"]},{"Key":"define macro","Fragments":["command,"]},{"Key":"macro command,","Fragments":["I"]},{"Key":"command, I","Fragments":["have"]},{"Key":"have refactored","Fragments":["my"]},{"Key":"refactored my","Fragments":["code."]},{"Key":"lot better","Fragments":["about"]},{"Key":"better about","Fragments":["this","the"]},{"Key":"one, having","Fragments":["replaced"]},{"Key":"having replaced","Fragments":["a"]},{"Key":"replaced a","Fragments":["helper"]},{"Key":"helper routine","Fragments":["with"]},{"Key":"routine with","Fragments":["that"]},{"Key":"that compact","Fragments":["little"]},{"Key":"compact little","Fragments":["`case`"]},{"Key":"little `case`","Fragments":["construct."]},{"Key":"prefer your","Fragments":["first"]},{"Key":"first approach","Fragments":["with"]},{"Key":"the named","Fragments":["function,"]},{"Key":"named function,","Fragments":["depending"]},{"Key":"function, depending","Fragments":["on"]},{"Key":"depending on","Fragments":["optimisation","the"]},{"Key":"optimisation level","Fragments":["it"]},{"Key":"level it","Fragments":["might"]},{"Key":"get inlined","Fragments":["anyway"]},{"Key":"inlined anyway","Fragments":["but"]},{"Key":"anyway but","Fragments":["is"]},{"Key":" Despite","Fragments":["of"]},{"Key":"Despite of","Fragments":["that"]},{"Key":"that `f([])","Fragments":["-\u003e"]},{"Key":"`f([]) -\u003e","Fragments":["[];"]},{"Key":"-\u003e [];","Fragments":["f([H|T])"]},{"Key":"[]; f([H|T])","Fragments":["-\u003e"]},{"Key":"f([H|T]) -\u003e","Fragments":["[g(H)|f(T)].`"]},{"Key":"-\u003e [g(H)|f(T)].`","Fragments":["can"]},{"Key":"[g(H)|f(T)].` can","Fragments":["be"]},{"Key":"written much","Fragments":["more"]},{"Key":"readable as","Fragments":["`f(L)"]},{"Key":"as `f(L)","Fragments":["-\u003e"]},{"Key":"`f(L) -\u003e","Fragments":["lists:map(fun"]},{"Key":"-\u003e lists:map(fun","Fragments":["g/1,"]},{"Key":"lists:map(fun g/1,","Fragments":["L)`."]},{"Key":"g/1, L)`.","Fragments":["At"]},{"Key":"L)`. At","Fragments":["least,"]},{"Key":"At least,","Fragments":["thats"]},{"Key":"least, thats","Fragments":["my"]},{"Key":"thats my","Fragments":["opinion."]},{"Key":" Fixed","Fragments":["type"]},{"Key":"Fixed type","Fragments":["of"]},{"Key":"of `rna_transcription:to_rna/1`.","Fragments":["I"]},{"Key":"`rna_transcription:to_rna/1`. I","Fragments":["kind"]},{"Key":"I kind","Fragments":["of"]},{"Key":"of wish","Fragments":["I"]},{"Key":"could break","Fragments":["the"]},{"Key":"suite and","Fragments":["return"]},{"Key":"return `{ok,","Fragments":["string()}`"]},{"Key":"`{ok, string()}`","Fragments":["to"]},{"Key":"string()}` to","Fragments":["keep"]},{"Key":"keep consistency","Fragments":["with"]},{"Key":"consistency with","Fragments":["most"]},{"Key":"with most","Fragments":["of"]},{"Key":"of stdlib.","Fragments":["That"]},{"Key":"stdlib. That","Fragments":["being"]},{"Key":"That being","Fragments":["said"]},{"Key":"being said","Fragments":["I"]},{"Key":"said I","Fragments":["took"]},{"Key":"I took","Fragments":["liberties","away"]},{"Key":"took liberties","Fragments":["with"]},{"Key":"liberties with","Fragments":["the"]},{"Key":"error return","Fragments":["case"]},{"Key":"return case","Fragments":["(DNA"]},{"Key":"case (DNA","Fragments":["strings"]},{"Key":"(DNA strings","Fragments":["can"]},{"Key":"strings can","Fragments":["be"]},{"Key":"be extremely","Fragments":["large)"]},{"Key":"extremely large)","Fragments":["assumed"]},{"Key":"large) assumed","Fragments":["it"]},{"Key":"assumed it","Fragments":["would"]},{"Key":"allow for","Fragments":["encoding"]},{"Key":"for encoding","Fragments":["errors"]},{"Key":"encoding errors","Fragments":["without"]},{"Key":"errors without","Fragments":["throwing"]},{"Key":"without throwing","Fragments":["away"]},{"Key":"throwing away","Fragments":["progress."]},{"Key":"In line","Fragments":["7,"]},{"Key":"line 7,","Fragments":["you"]},{"Key":"7, you","Fragments":["can"]},{"Key":"use lists:any/2","Fragments":["instead"]},{"Key":"lists:any/2 instead","Fragments":["of"]},{"Key":"solution does","Fragments":["not"]},{"Key":"not solve","Fragments":["test"]},{"Key":"solve test","Fragments":["case"]},{"Key":"case ignore_non_allergen_score_parts_test()","Fragments":["as"]},{"Key":"ignore_non_allergen_score_parts_test() as","Fragments":["I"]},{"Key":"didn't really","Fragments":["understand"]},{"Key":"really understand","Fragments":["why"]},{"Key":"why peanuts","Fragments":["got"]},{"Key":"peanuts got","Fragments":["excluded."]},{"Key":"missed it","Fragments":["on"]},{"Key":"first pass,","Fragments":["too,"]},{"Key":"pass, too,","Fragments":["but"]},{"Key":"too, but","Fragments":["for"]},{"Key":"for `isAllergicTo`","Fragments":["you"]},{"Key":"`isAllergicTo` you","Fragments":["probably"]},{"Key":"just want","Fragments":["to"]},{"Key":"I need","Fragments":["to"]},{"Key":"to separate","Fragments":["the"]},{"Key":"function. Maybe","Fragments":["to"]},{"Key":"Maybe to","Fragments":["use"]},{"Key":"My way","Fragments":["is"]},{"Key":"general than","Fragments":["some"]},{"Key":"than some","Fragments":["solutions"]},{"Key":"some solutions","Fragments":["I"]},{"Key":"from others.","Fragments":["My"]},{"Key":"others. My","Fragments":["understanding"]},{"Key":"understanding of","Fragments":["Bob's"]},{"Key":"of Bob's","Fragments":["responses"]},{"Key":"Bob's responses","Fragments":["may"]},{"Key":"responses may","Fragments":["vary"]},{"Key":"may vary","Fragments":["from"]},{"Key":"vary from","Fragments":["this"]},{"Key":"from this","Fragments":["designer's"]},{"Key":"this designer's","Fragments":["intention"]},{"Key":"designer's intention","Fragments":["of"]},{"Key":"intention of","Fragments":["this"]},{"Key":"this exercise.","Fragments":["But"]},{"Key":"exercise. But","Fragments":["I"]},{"Key":"can only","Fragments":["modify"]},{"Key":"only modify","Fragments":["the"]},{"Key":"modify the","Fragments":["macro"]},{"Key":"macro of","Fragments":["BOB."]},{"Key":"of BOB.","Fragments":["Without"]},{"Key":"BOB. Without","Fragments":["changing"]},{"Key":"Without changing","Fragments":["the"]},{"Key":"the source","Fragments":["code."]},{"Key":"of giving","Fragments":["each"]},{"Key":"giving each","Fragments":["value"]},{"Key":"each value","Fragments":["as"]},{"Key":"value as","Fragments":["a"]},{"Key":"and having","Fragments":["a"]},{"Key":"helper to","Fragments":["walk"]},{"Key":"to walk","Fragments":["the","the"]},{"Key":"walk the","Fragments":["bits","string"]},{"Key":"the bits","Fragments":["if"]},{"Key":"bits if","Fragments":["`Score`"]},{"Key":"if `Score`","Fragments":["isn't"]},{"Key":"`Score` isn't","Fragments":["a"]},{"Key":"a known","Fragments":["value."]},{"Key":"You define","Fragments":["the"]},{"Key":"the `allergies()`","Fragments":["type"]},{"Key":"`allergies()` type","Fragments":["and"]},{"Key":"for `isAllergicTo`,","Fragments":["so"]},{"Key":"`isAllergicTo`, so","Fragments":["why"]},{"Key":"so why","Fragments":["not"]},{"Key":" Trivially:","Fragments":["the"]},{"Key":"Trivially: the","Fragments":["indentation,"]},{"Key":"the indentation,","Fragments":["spacing,"]},{"Key":"indentation, spacing,","Fragments":["and"]},{"Key":"spacing, and","Fragments":["alignment"]},{"Key":"and alignment","Fragments":["seems"]},{"Key":"alignment seems","Fragments":["a"]},{"Key":"seems a","Fragments":["little"]},{"Key":"The split","Fragments":["is"]},{"Key":"split is","Fragments":["weird"]},{"Key":"is weird","Fragments":["to"]},{"Key":"weird to","Fragments":["me."]},{"Key":"me. It","Fragments":["looks"]},{"Key":"It looks","Fragments":["like"]},{"Key":"an attempt","Fragments":["at"]},{"Key":"attempt at","Fragments":["re-use,"]},{"Key":"at re-use,","Fragments":["but"]},{"Key":"re-use, but","Fragments":["it"]},{"Key":"doesn't add","Fragments":["clarity"]},{"Key":"add clarity","Fragments":["for"]},{"Key":"clarity for","Fragments":["me."]},{"Key":" Getting","Fragments":["the"]},{"Key":"Getting the","Fragments":["area"]},{"Key":"the area","Fragments":["code"]},{"Key":"area code","Fragments":["could"]},{"Key":"code could","Fragments":["be"]},{"Key":"either `lists:split(3,","Fragments":["Phone)`"]},{"Key":"`lists:split(3, Phone)`","Fragments":["or"]},{"Key":"Phone)` or","Fragments":["`lists:sublist(Phone,"]},{"Key":"or `lists:sublist(Phone,","Fragments":["3)`"]},{"Key":"`lists:sublist(Phone, 3)`","Fragments":["by"]},{"Key":"3)` by","Fragments":["itself."]},{"Key":"something more","Fragments":["comprehensive"]},{"Key":"more comprehensive","Fragments":["for"]},{"Key":"comprehensive for","Fragments":["re-use,"]},{"Key":"for re-use,","Fragments":["maybe"]},{"Key":"re-use, maybe","Fragments":["you"]},{"Key":"maybe you","Fragments":["could"]},{"Key":"use two","Fragments":["splits"]},{"Key":"two splits","Fragments":["and"]},{"Key":"splits and","Fragments":["then"]},{"Key":"then return","Fragments":["a"]},{"Key":" {AreaCode,","Fragments":["Rest}","Exchange,"]},{"Key":"{AreaCode, Rest}","Fragments":["="]},{"Key":"Rest} =","Fragments":["lists:split(3,"]},{"Key":"= lists:split(3,","Fragments":["\"1234567890\"),","Rest),"]},{"Key":" {Exchange,","Fragments":["Number}"]},{"Key":"{Exchange, Number}","Fragments":["="]},{"Key":"Number} =","Fragments":["lists:split(3,"]},{"Key":"{AreaCode, Exchange,","Fragments":["Number}."]},{"Key":"avoid calling","Fragments":["split"]},{"Key":"calling split","Fragments":["twice,"]},{"Key":"split twice,","Fragments":["but"]},{"Key":"twice, but","Fragments":["I"]},{"Key":"agree it's","Fragments":["a"]},{"Key":"does only","Fragments":["pass"]},{"Key":"only pass","Fragments":["the"]},{"Key":"tests when","Fragments":["my"]},{"Key":"when my","Fragments":["submitted"]},{"Key":"my submitted","Fragments":["[pull"]},{"Key":"submitted [pull","Fragments":["request](https://github.com/exercism/xerlang/pull/72)"]},{"Key":"[pull request](https://github.com/exercism/xerlang/pull/72)","Fragments":["to"]},{"Key":"request](https://github.com/exercism/xerlang/pull/72) to","Fragments":["the"]},{"Key":"tests is","Fragments":["applied!"]},{"Key":"Is green","Fragments":["on"]},{"Key":"green on","Fragments":["current"]},{"Key":"on current","Fragments":["testsuite"]},{"Key":"current testsuite","Fragments":["and"]},{"Key":"testsuite and","Fragments":["does"]},{"Key":"and does","Fragments":["everything"]},{"Key":"does everything","Fragments":["in"]},{"Key":"everything in","Fragments":["a"]},{"Key":"single pass,","Fragments":["but"]},{"Key":"pass, but","Fragments":["I"]},{"Key":"think only","Fragments":["positive"]},{"Key":"only positive","Fragments":["values"]},{"Key":"positive values","Fragments":["should"]},{"Key":" Perhaps","Fragments":["because"]},{"Key":"Perhaps because","Fragments":["there"]},{"Key":"there wasn't","Fragments":["any"]},{"Key":"wasn't any","Fragments":["leap"]},{"Key":"any leap","Fragments":["year"]},{"Key":"year before","Fragments":["[the"]},{"Key":"before [the","Fragments":["gregorian"]},{"Key":"[the gregorian","Fragments":["calender"]},{"Key":"gregorian calender","Fragments":["which"]},{"Key":"calender which","Fragments":["was"]},{"Key":"which was","Fragments":["introduced"]},{"Key":"was introduced","Fragments":["1582](https://en.wikipedia.org/wiki/Gregorian_calendar)?"]},{"Key":"Because he","Fragments":["did"]},{"Key":"he did","Fragments":["not"]},{"Key":"not know","Fragments":["that"]},{"Key":" According","Fragments":["to","to"]},{"Key":"According to","Fragments":["what","the"]},{"Key":"is written","Fragments":["on"]},{"Key":"written on","Fragments":["http://erlang.org/doc/reference_manual/typespec.html,"]},{"Key":"on http://erlang.org/doc/reference_manual/typespec.html,","Fragments":["I"]},{"Key":"http://erlang.org/doc/reference_manual/typespec.html, I","Fragments":["don'"]},{"Key":"I don'","Fragments":["think"]},{"Key":"don' think","Fragments":["it"]},{"Key":"is valid","Fragments":["either."]},{"Key":"the grammar","Fragments":["you"]},{"Key":"grammar you","Fragments":["can"]},{"Key":"specify integers","Fragments":["as"]},{"Key":"integers as","Fragments":["follows:"]},{"Key":" Integer","Fragments":["::"]},{"Key":"Integer ::","Fragments":["integer()"]},{"Key":"| Erlang_Integer","Fragments":["%%"]},{"Key":"Erlang_Integer %%","Fragments":["...,"]},{"Key":"%% ...,","Fragments":["-1,"]},{"Key":"..., -1,","Fragments":["0,"]},{"Key":"-1, 0,","Fragments":["1,"]},{"Key":"0, 1,","Fragments":["..."]},{"Key":"1, ...","Fragments":["42"]},{"Key":"... 42","Fragments":["..."]},{"Key":"| Erlang_Integer..Erlang_Integer","Fragments":["%%"]},{"Key":"Erlang_Integer..Erlang_Integer %%","Fragments":["specifies"]},{"Key":"%% specifies","Fragments":["an"]},{"Key":"specifies an","Fragments":["integer"]},{"Key":"This reads","Fragments":["as"]},{"Key":"reads as","Fragments":["if"]},{"Key":"the generic","Fragments":["type"]},{"Key":"generic type","Fragments":["`integer()`,"]},{"Key":"type `integer()`,","Fragments":["a"]},{"Key":"`integer()`, a","Fragments":["single"]},{"Key":"single integral","Fragments":["value,"]},{"Key":"integral value,","Fragments":["or"]},{"Key":"value, or","Fragments":["a"]},{"Key":"a fully","Fragments":["specified"]},{"Key":"fully specified","Fragments":["range"]},{"Key":"specified range","Fragments":["are"]},{"Key":"range are","Fragments":["allowed."]},{"Key":" Additionally","Fragments":["we"]},{"Key":"Additionally we","Fragments":["have"]},{"Key":"have table","Fragments":["7.2"]},{"Key":"table 7.2","Fragments":["on"]},{"Key":"7.2 on","Fragments":["the"]},{"Key":"same page,","Fragments":["pasted"]},{"Key":"page, pasted","Fragments":["here"]},{"Key":"pasted here","Fragments":["some"]},{"Key":"here some","Fragments":["text"]},{"Key":"some text","Fragments":["including"]},{"Key":"text including","Fragments":["for"]},{"Key":"including for","Fragments":["your"]},{"Key":"following three","Fragments":["built-in"]},{"Key":"three built-in","Fragments":["types"]},{"Key":"built-in types","Fragments":["exist"]},{"Key":"types exist","Fragments":["and"]},{"Key":"exist and","Fragments":["can"]},{"Key":"and can","Fragments":["be"]},{"Key":"be thought","Fragments":["as","defined"]},{"Key":"thought as","Fragments":["defined"]},{"Key":"as defined","Fragments":["below,"]},{"Key":"defined below,","Fragments":["though"]},{"Key":"below, though","Fragments":["strictly"]},{"Key":"though strictly","Fragments":["their"]},{"Key":"strictly their","Fragments":["\"type"]},{"Key":"their \"type","Fragments":["definition\""]},{"Key":"\"type definition\"","Fragments":["is"]},{"Key":"definition\" is","Fragments":["not"]},{"Key":"not valid","Fragments":["syntax"]},{"Key":"syntax according","Fragments":["to"]},{"Key":"type language","Fragments":["defined"]},{"Key":"language defined","Fragments":["above."]},{"Key":"\u003e |","Fragments":["Built-in","non_neg_integer()","pos_integer()","neg_integer()"]},{"Key":"| Built-in","Fragments":["type"]},{"Key":"Built-in type","Fragments":["|"]},{"Key":"type |","Fragments":["Can"]},{"Key":"| Can","Fragments":["be"]},{"Key":"Can be","Fragments":["thought"]},{"Key":"thought defined","Fragments":["by"]},{"Key":"defined by","Fragments":["the"]},{"Key":"| non_neg_integer()","Fragments":["|"]},{"Key":"| 0..","Fragments":["|"]},{"Key":"| pos_integer()","Fragments":["|"]},{"Key":"pos_integer() |","Fragments":["1.."]},{"Key":"| 1..","Fragments":["|"]},{"Key":"| neg_integer()","Fragments":["|"]},{"Key":"neg_integer() |","Fragments":["..-1"]},{"Key":"| ..-1","Fragments":["|"]},{"Key":" Considering","Fragments":["all"]},{"Key":"Considering all","Fragments":["this"]},{"Key":"all this","Fragments":["information:"]},{"Key":"this information:","Fragments":["Your"]},{"Key":"information: Your","Fragments":["spec"]},{"Key":"spec is","Fragments":["invalid."]},{"Key":" Anyway,","Fragments":["if"]},{"Key":"Anyway, if","Fragments":["it"]},{"Key":"really was","Fragments":["@anissa"]},{"Key":"was @anissa","Fragments":["indention"]},{"Key":"@anissa indention","Fragments":["to"]},{"Key":"indention to","Fragments":["render"]},{"Key":"to render","Fragments":["negative"]},{"Key":"render negative","Fragments":["years"]},{"Key":"negative years","Fragments":["as"]},{"Key":"as invalid","Fragments":["because"]},{"Key":"invalid because","Fragments":["the"]},{"Key":"the gregorian","Fragments":["calendar,"]},{"Key":"gregorian calendar,","Fragments":["he"]},{"Key":"calendar, he","Fragments":["should"]},{"Key":"he should","Fragments":["have"]},{"Key":"clear with","Fragments":["a"]},{"Key":"In that","Fragments":["case"]},{"Key":"that case","Fragments":["why"]},{"Key":"case why","Fragments":["not"]},{"Key":"not specify","Fragments":["the"]},{"Key":"-spec leap_year(1582..)","Fragments":["-\u003e"]},{"Key":"leap_year(1582..) -\u003e","Fragments":["boolean()."]},{"Key":"%% Return","Fragments":["true"]},{"Key":"Return true","Fragments":["if"]},{"Key":"if `Year`","Fragments":["is"]},{"Key":"`Year` is","Fragments":["a"]},{"Key":"andalso (Year","Fragments":["rem"]},{"Key":"0 orelse","Fragments":["Year"]},{"Key":"orelse Year","Fragments":["rem"]},{"Key":" @sidney","Fragments":["Oh"]},{"Key":"@sidney Oh","Fragments":["yes"]},{"Key":"Oh yes","Fragments":["you"]},{"Key":"yes you","Fragments":["are"]},{"Key":"notice that!","Fragments":["Good"]},{"Key":"that! Good","Fragments":["catch!"]},{"Key":" @jedediah","Fragments":["I"]},{"Key":"@jedediah I","Fragments":["looked"]},{"Key":"the Gregorian","Fragments":["calendar","calendar"]},{"Key":"calendar and","Fragments":["actually"]},{"Key":"and actually","Fragments":["it"]},{"Key":"actually it","Fragments":["can"]},{"Key":"can go","Fragments":["back","back"]},{"Key":"back as","Fragments":["far","far"]},{"Key":"want because","Fragments":["people"]},{"Key":"because people","Fragments":["started"]},{"Key":"people started","Fragments":["switching"]},{"Key":"started switching","Fragments":["from"]},{"Key":"switching from","Fragments":["the"]},{"Key":"calendar in","Fragments":["1582"]},{"Key":"1582 (but","Fragments":["in"]},{"Key":"(but in","Fragments":["later"]},{"Key":"in later","Fragments":["years"]},{"Key":"later years","Fragments":["in"]},{"Key":"years in","Fragments":["various"]},{"Key":"in various","Fragments":["places)."]},{"Key":"various places).","Fragments":["The"]},{"Key":"places). The","Fragments":["range"]},{"Key":"The range","Fragments":["of"]},{"Key":"range of","Fragments":["the"]},{"Key":"calendar can","Fragments":["go"]},{"Key":"want as","Fragments":["long"]},{"Key":"long at","Fragments":["the"]},{"Key":"the date","Fragments":["is"]},{"Key":"date is","Fragments":["represented"]},{"Key":"is represented","Fragments":["as"]},{"Key":"represented as","Fragments":["Gregorian"]},{"Key":"as Gregorian","Fragments":["Anno"]},{"Key":"Gregorian Anno","Fragments":["Domini"]},{"Key":"Anno Domini","Fragments":["(BC"]},{"Key":"Domini (BC","Fragments":["excluded"]},{"Key":"(BC excluded","Fragments":["because"]},{"Key":"excluded because","Fragments":["year"]},{"Key":"because year","Fragments":["0"]},{"Key":"year 0","Fragments":["was"]},{"Key":"0 was","Fragments":["missing)."]},{"Key":"was missing).","Fragments":["So"]},{"Key":"missing). So","Fragments":["a"]},{"Key":"year for","Fragments":["leap_year"]},{"Key":"for leap_year","Fragments":["is"]},{"Key":"leap_year is","Fragments":["actually"]},{"Key":"motivation here","Fragments":["is"]},{"Key":"string only","Fragments":["once."]},{"Key":"only once.","Fragments":["I'm"]},{"Key":"once. I'm","Fragments":["not"]},{"Key":"not happy","Fragments":["about","with"]},{"Key":"happy about","Fragments":["the"]},{"Key":"the essentially","Fragments":["arbitrary"]},{"Key":"essentially arbitrary","Fragments":["nature"]},{"Key":"arbitrary nature","Fragments":["of"]},{"Key":"nature of","Fragments":["the"]},{"Key":"arguments and","Fragments":["return"]},{"Key":"of `analyze/3`,","Fragments":["but"]},{"Key":"`analyze/3`, but","Fragments":["I"]},{"Key":"don't feel","Fragments":["like"]},{"Key":"like spending","Fragments":["too"]},{"Key":"spending too","Fragments":["much"]},{"Key":"much time","Fragments":["on"]},{"Key":"time on","Fragments":["it"]},{"Key":"on it","Fragments":["when"]},{"Key":"it's so","Fragments":["poorly"]},{"Key":"so poorly","Fragments":["specified."]},{"Key":" Nit:","Fragments":["`string:strip`"]},{"Key":"Nit: `string:strip`","Fragments":["will"]},{"Key":"`string:strip` will","Fragments":["also"]},{"Key":"also do","Fragments":["one"]},{"Key":"do one","Fragments":["walk"]},{"Key":"one walk","Fragments":["across"]},{"Key":"walk across","Fragments":["the"]},{"Key":"across the","Fragments":["string,"]},{"Key":"string, so","Fragments":["you"]},{"Key":"have effectively","Fragments":["two."]},{"Key":" `classify_char`","Fragments":["could"]},{"Key":"`classify_char` could","Fragments":["do"]},{"Key":"comments what","Fragments":["`16xc0`"]},{"Key":"what `16xc0`","Fragments":["etc."]},{"Key":"`16xc0` etc.","Fragments":["are."]},{"Key":"you even","Fragments":["need"]},{"Key":"even need","Fragments":["to"]},{"Key":"track the","Fragments":["number"]},{"Key":"of lower/upper","Fragments":["characters?"]},{"Key":"lower/upper characters?","Fragments":["Why"]},{"Key":"characters? Why","Fragments":["not"]},{"Key":"a flag","Fragments":["whether"]},{"Key":"flag whether","Fragments":["you"]},{"Key":"whether you","Fragments":["have"]},{"Key":"seen any","Fragments":["of"]},{"Key":"tried this","Fragments":["(https://gist.github.com/hdurer/21d6055b7e9abbc35049)"]},{"Key":"this (https://gist.github.com/hdurer/21d6055b7e9abbc35049)","Fragments":["and"]},{"Key":"(https://gist.github.com/hdurer/21d6055b7e9abbc35049) and","Fragments":["think"]},{"Key":"and think","Fragments":["it"]},{"Key":"be slightly","Fragments":["better"]},{"Key":"slightly better","Fragments":["than"]},{"Key":"than this","Fragments":["but"]},{"Key":"this but","Fragments":["still"]},{"Key":"still find","Fragments":["the"]},{"Key":"logic quite","Fragments":["unclear"]},{"Key":"quite unclear","Fragments":["to"]},{"Key":"unclear to","Fragments":["read."]},{"Key":"Thanks, you're","Fragments":["right"]},{"Key":"you're right","Fragments":["about"]},{"Key":"about `string:strip`","Fragments":["contradicting"]},{"Key":"`string:strip` contradicting","Fragments":["my"]},{"Key":"contradicting my","Fragments":["intention."]},{"Key":"my intention.","Fragments":["As"]},{"Key":"intention. As","Fragments":["I"]},{"Key":"As I","Fragments":["did"]},{"Key":"languages, I","Fragments":["tried"]},{"Key":"tried various","Fragments":["ways"]},{"Key":"the census,","Fragments":["indeed"]},{"Key":"census, indeed","Fragments":["avoiding"]},{"Key":"indeed avoiding","Fragments":["a"]},{"Key":"avoiding a","Fragments":["second"]},{"Key":"second walk","Fragments":["to"]},{"Key":"walk to","Fragments":["remove"]},{"Key":"remove whitespace","Fragments":["like"]},{"Key":"whitespace like","Fragments":["in"]},{"Key":"might try","Fragments":["another","to"]},{"Key":"try another","Fragments":["implementation"]},{"Key":"another implementation","Fragments":["based"]},{"Key":"your suggestions;","Fragments":["I"]},{"Key":"suggestions; I","Fragments":["wonder"]},{"Key":"your `analyze`","Fragments":["function"]},{"Key":"`analyze` function","Fragments":["can't"]},{"Key":"function can't","Fragments":["be"]},{"Key":"can't be","Fragments":["made"]},{"Key":"made a","Fragments":["little"]},{"Key":"like `16#c0`","Fragments":["et"]},{"Key":"`16#c0` et","Fragments":["cetera"]},{"Key":"et cetera","Fragments":["are"]},{"Key":"cetera are","Fragments":["\"clearly\""]},{"Key":"are \"clearly\"","Fragments":["the"]},{"Key":"\"clearly\" the","Fragments":["Latin1"]},{"Key":"the Latin1","Fragments":["letter"]},{"Key":"Latin1 letter","Fragments":["block"]},{"Key":"letter block","Fragments":["based"]},{"Key":"block based","Fragments":["on"]},{"Key":"comment but","Fragments":["I'll"]},{"Key":"I'll clarify","Fragments":["that."]},{"Key":" Additional","Fragments":["idea,"]},{"Key":"Additional idea,","Fragments":["what"]},{"Key":"pass it","Fragments":["a"]},{"Key":"char or","Fragments":["a"]},{"Key":"more checks","Fragments":["to"]},{"Key":"returns false","Fragments":["in"]},{"Key":"false in","Fragments":["those"]},{"Key":"in those","Fragments":["cases?"]},{"Key":"I absolutely","Fragments":["disagree"]},{"Key":"absolutely disagree","Fragments":["with"]},{"Key":"disagree with","Fragments":["tmcgilchrist's"]},{"Key":"with tmcgilchrist's","Fragments":["suggestion."]},{"Key":"tmcgilchrist's suggestion.","Fragments":["Is"]},{"Key":"suggestion. Is","Fragments":["char"]},{"Key":"Is char","Fragments":["a"]},{"Key":"char a","Fragments":["year?"]},{"Key":"a year?","Fragments":["Is","Then"]},{"Key":"year? Is","Fragments":["string"]},{"Key":"Is string","Fragments":["a"]},{"Key":"string a","Fragments":["year?"]},{"Key":"year? Then","Fragments":["why"]},{"Key":"Then why","Fragments":["should"]},{"Key":"why should","Fragments":["code"]},{"Key":"should code","Fragments":["be"]},{"Key":"code be","Fragments":["added"]},{"Key":"be added","Fragments":["to"]},{"Key":"added to","Fragments":["handle"]},{"Key":"handle input","Fragments":["that"]},{"Key":"input that","Fragments":["shouldn't","isn't"]},{"Key":"that shouldn't","Fragments":["be"]},{"Key":" ```leap_year(_)-\u003efalse.","Fragments":["```","```"]},{"Key":"```leap_year(_)-\u003efalse. ```","Fragments":["catches","catches"]},{"Key":"``` catches","Fragments":["the","the"]},{"Key":"catches the","Fragments":["non-integer","non-integer"]},{"Key":"the non-integer","Fragments":["cases","cases"]},{"Key":"non-integer cases","Fragments":["and","and"]},{"Key":"cases and","Fragments":["returns","returns"]},{"Key":"returns false.","Fragments":["E.g.,","E.g.,"]},{"Key":" ```?assertNot(leap:leap_year(\"2400\"))```","Fragments":["passes","passes"]},{"Key":"feel better","Fragments":["about"]},{"Key":"the structure","Fragments":["of"]},{"Key":"one, especially","Fragments":["the"]},{"Key":"especially the","Fragments":["separation"]},{"Key":"the separation","Fragments":["of"]},{"Key":"separation of","Fragments":["divisible","concerns."]},{"Key":"of divisible","Fragments":["into"]},{"Key":"divisible into","Fragments":["a"]},{"Key":"also reordered","Fragments":["the"]},{"Key":"reordered the","Fragments":["logic"]},{"Key":"logic such","Fragments":["that"]},{"Key":"it flows","Fragments":["with"]},{"Key":"flows with","Fragments":["the"]},{"Key":"original problem","Fragments":["a"]},{"Key":"problem a","Fragments":["bit"]},{"Key":"bit better.","Fragments":["I'm"]},{"Key":"better. I'm","Fragments":["still"]},{"Key":"still not","Fragments":["happy"]},{"Key":"expression spanning","Fragments":["multiple"]},{"Key":"spanning multiple","Fragments":["lines."]},{"Key":"the stream","Fragments":["of"]},{"Key":"stream of","Fragments":["andalso/not/orelese"]},{"Key":"of andalso/not/orelese","Fragments":["makes"]},{"Key":"andalso/not/orelese makes","Fragments":["this"]},{"Key":"makes this","Fragments":["one"]},{"Key":"one more","Fragments":["complex"]},{"Key":"complex to","Fragments":["parse"]},{"Key":"parse in","Fragments":["my"]},{"Key":"my head.","Fragments":["I'm"]},{"Key":"head. I'm","Fragments":["also"]},{"Key":"I'm also","Fragments":["having"]},{"Key":"also having","Fragments":["to"]},{"Key":"boolean in","Fragments":["my"]},{"Key":"head when","Fragments":["I'm"]},{"Key":"when I'm","Fragments":["moving"]},{"Key":"I'm moving","Fragments":["through"]},{"Key":"moving through","Fragments":["calls"]},{"Key":"through calls","Fragments":["to"]},{"Key":"to divisible","Fragments":["in"]},{"Key":"divisible in","Fragments":["the"]},{"Key":"I totally","Fragments":["agree."]},{"Key":"add guards","Fragments":["and"]},{"Key":"a typespec.","Fragments":["If"]},{"Key":"typespec. If","Fragments":["you"]},{"Key":"had them","Fragments":["I"]},{"Key":"them I","Fragments":["would"]},{"Key":"would give","Fragments":["you"]},{"Key":"give you","Fragments":["a"]},{"Key":"you a","Fragments":["thumbs"]},{"Key":"a thumbs","Fragments":["up"]},{"Key":"up since","Fragments":["everything"]},{"Key":"since everything","Fragments":["else"]},{"Key":"everything else","Fragments":["looks"]},{"Key":"else looks","Fragments":["awesome."]},{"Key":"wrap all","Fragments":["the"]},{"Key":"logic into","Fragments":["one"]},{"Key":"one function,","Fragments":["choosing"]},{"Key":"function, choosing","Fragments":["readability"]},{"Key":"choosing readability","Fragments":["over"]},{"Key":"readability over","Fragments":["potential"]},{"Key":"over potential","Fragments":["brevity/efficiency."]},{"Key":"better. No","Fragments":["need"]},{"Key":"for guards,","Fragments":["pattern"]},{"Key":"guards, pattern","Fragments":["matching"]},{"Key":"matching suffices.","Fragments":["Also,"]},{"Key":"suffices. Also,","Fragments":["no"]},{"Key":"Also, no","Fragments":["need"]},{"Key":"for conversions","Fragments":["between"]},{"Key":"conversions between","Fragments":["chars"]},{"Key":"between chars","Fragments":["and"]},{"Key":"chars and","Fragments":["strings"]},{"Key":"strings and","Fragments":["joining."]},{"Key":"Adding specs","Fragments":["and"]},{"Key":"guards could","Fragments":["improve"]},{"Key":"name `transcribe`","Fragments":["to"]},{"Key":"`transcribe` to","Fragments":["be"]},{"Key":"be ambiguous","Fragments":["without"]},{"Key":"ambiguous without","Fragments":["looking"]},{"Key":"without looking","Fragments":["at"]},{"Key":"Really different","Fragments":["than"]},{"Key":"different than","Fragments":["my"]},{"Key":"it. (And","Fragments":["finally"]},{"Key":"(And finally","Fragments":["understand"]},{"Key":"finally understand","Fragments":["the"]},{"Key":"the dialyzer","Fragments":["specs,"]},{"Key":"dialyzer specs,","Fragments":["too)"]},{"Key":"Only nitpick,","Fragments":["I"]},{"Key":"personally find","Fragments":["constructs"]},{"Key":"find constructs","Fragments":["like"]},{"Key":"like `is_valid_instruction($L)","Fragments":["-\u003e"]},{"Key":"`is_valid_instruction($L) -\u003e","Fragments":["true.`"]},{"Key":"-\u003e true.`","Fragments":["more"]},{"Key":"true.` more","Fragments":["readable"]},{"Key":"multiple `when`","Fragments":["clauses."]},{"Key":"`when` clauses.","Fragments":["No"]},{"Key":"clauses. No","Fragments":["idea"]},{"Key":"No idea","Fragments":["how"]},{"Key":"idea how","Fragments":["differently"]},{"Key":"how differently","Fragments":["they"]},{"Key":"differently they","Fragments":["behave"]},{"Key":"Hi @hollis","Fragments":[","]},{"Key":"@hollis ,","Fragments":["this"]},{"Key":", this","Fragments":["chapter"]},{"Key":"of \"Learn","Fragments":["You"]},{"Key":"\"Learn You","Fragments":["Some"]},{"Key":"Erlang For","Fragments":["Great"]},{"Key":"For Great","Fragments":["Good\""]},{"Key":"Great Good\"","Fragments":["provides"]},{"Key":"Good\" provides","Fragments":["a"]},{"Key":"provides a","Fragments":["good"]},{"Key":"good overview","Fragments":["of"]},{"Key":"overview of","Fragments":["Dialyzer"]},{"Key":"of Dialyzer","Fragments":["and"]},{"Key":"Dialyzer and","Fragments":["type"]},{"Key":"and type","Fragments":["checking"]},{"Key":"checking in","Fragments":["Erlang:"]},{"Key":"Thanks @christine.","Fragments":["Been"]},{"Key":"@christine. Been","Fragments":["reading"]},{"Key":"Been reading","Fragments":["that."]},{"Key":"reading that.","Fragments":["The"]},{"Key":"that. The","Fragments":["fridge"]},{"Key":"The fridge","Fragments":["exercise"]},{"Key":"fridge exercise","Fragments":["was"]},{"Key":"helpful for","Fragments":["this"]},{"Key":"this robot","Fragments":["one!"]},{"Key":" hadn't","Fragments":["dawned"]},{"Key":"hadn't dawned","Fragments":["on"]},{"Key":"dawned on","Fragments":["me"]},{"Key":"on me","Fragments":["to"]},{"Key":"a reference.","Fragments":["is"]},{"Key":"reference. is","Fragments":["there"]},{"Key":"there documentation","Fragments":["on"]},{"Key":"on dialyzer?","Fragments":["While"]},{"Key":"dialyzer? While","Fragments":["doing"]},{"Key":"While doing","Fragments":["the"]},{"Key":"exercises i've","Fragments":["seen"]},{"Key":"i've seen","Fragments":["others"]},{"Key":"seen others","Fragments":["use"]},{"Key":"others use","Fragments":["the"]},{"Key":"`-spec` `-type`","Fragments":["and"]},{"Key":"`-type` and","Fragments":["such"]},{"Key":"and such","Fragments":["but"]},{"Key":"such but","Fragments":["i"]},{"Key":"but i","Fragments":["haven't"]},{"Key":"i haven't","Fragments":["groked"]},{"Key":"haven't groked","Fragments":["the"]},{"Key":"groked the","Fragments":["advantage."]},{"Key":"the advantage.","Fragments":["I've"]},{"Key":"advantage. I've","Fragments":["used"]},{"Key":"I've used","Fragments":["them","before.)"]},{"Key":"on purpose","Fragments":["made"]},{"Key":"purpose made","Fragments":["then"]},{"Key":"made then","Fragments":["report"]},{"Key":"then report","Fragments":["different"]},{"Key":"report different","Fragments":["then"]},{"Key":"then intended","Fragments":["and"]},{"Key":"intended and","Fragments":["still"]},{"Key":"and still","Fragments":["had"]},{"Key":"still had","Fragments":["no"]},{"Key":"had no","Fragments":["problem"]},{"Key":"no problem","Fragments":["compiling"]},{"Key":"problem compiling","Fragments":["or"]},{"Key":"compiling or","Fragments":["running."]},{"Key":"or running.","Fragments":["Are"]},{"Key":"running. Are","Fragments":["they"]},{"Key":"Are they","Fragments":["solely"]},{"Key":"they solely","Fragments":["for"]},{"Key":"solely for","Fragments":["readability?"]},{"Key":" Had","Fragments":["to"]},{"Key":"Had to","Fragments":["learn"]},{"Key":"the hard","Fragments":["way"]},{"Key":"hard way","Fragments":["that"]},{"Key":"way that","Fragments":["variables"]},{"Key":"that variables","Fragments":["can't"]},{"Key":"variables can't","Fragments":["belong"]},{"Key":"can't belong","Fragments":["with"]},{"Key":"belong with","Fragments":["a"]},{"Key":"a lower-cased","Fragments":["letter."]},{"Key":"how clean","Fragments":["and"]},{"Key":"and efficient","Fragments":["this"]},{"Key":"this is,","Fragments":["and"]},{"Key":"is, and","Fragments":["it"]},{"Key":"it uses","Fragments":["a"]},{"Key":"a minimum","Fragments":["amount"]},{"Key":"minimum amount","Fragments":["of"]},{"Key":"to meet","Fragments":["the"]},{"Key":"meet the","Fragments":["requested"]},{"Key":"the requested","Fragments":["specs."]},{"Key":"requested specs.","Fragments":["It"]},{"Key":"specs. It","Fragments":["does"]},{"Key":"It does","Fragments":["seem"]},{"Key":"does seem","Fragments":["to"]},{"Key":"to lack","Fragments":["some"]},{"Key":"lack some","Fragments":["error"]},{"Key":"some error","Fragments":["handling,"]},{"Key":"error handling,","Fragments":["though,"]},{"Key":"handling, though,","Fragments":["in"]},{"Key":"though, in","Fragments":["that"]},{"Key":"even non-numeric","Fragments":["input"]},{"Key":"non-numeric input","Fragments":["would"]},{"Key":"input would","Fragments":["return"]},{"Key":"valid program","Fragments":["exit"]},{"Key":"program exit","Fragments":["condition."]},{"Key":"exit condition.","Fragments":["But"]},{"Key":"condition. But","Fragments":["maybe"]},{"Key":"But maybe","Fragments":["that's"]},{"Key":"maybe that's","Fragments":["one"]},{"Key":"that's one","Fragments":["of"]},{"Key":"To protect","Fragments":["against"]},{"Key":"against non_integer","Fragments":["input,"]},{"Key":"non_integer input,","Fragments":["you"]},{"Key":"input, you","Fragments":["can"]},{"Key":"add `","Fragments":["and"]},{"Key":"` and","Fragments":["is_integer(Y)`"]},{"Key":"and is_integer(Y)`","Fragments":["to"]},{"Key":"is_integer(Y)` to","Fragments":["the"]},{"Key":"clean solution","Fragments":["by"]},{"Key":"way, nice","Fragments":["work."]},{"Key":"it, while","Fragments":["it"]},{"Key":"return false","Fragments":["for"]},{"Key":"false for","Fragments":["most"]},{"Key":"for most","Fragments":["input"]},{"Key":"most input","Fragments":["that"]},{"Key":"isn't numeric","Fragments":["(which"]},{"Key":"numeric (which","Fragments":["seems"]},{"Key":"(which seems","Fragments":["reasonable),"]},{"Key":"seems reasonable),","Fragments":["I'm"]},{"Key":"reasonable), I'm","Fragments":["curious"]},{"Key":"I'm curious","Fragments":["what"]},{"Key":"curious what","Fragments":["it"]},{"Key":"will return","Fragments":["for"]},{"Key":"return for","Fragments":["\"string\""]},{"Key":"for \"string\"","Fragments":["input,"]},{"Key":"\"string\" input,","Fragments":["since"]},{"Key":"input, since","Fragments":["erlang"]},{"Key":"since erlang","Fragments":["would"]},{"Key":"erlang would","Fragments":["probably"]},{"Key":"equivalent for","Fragments":["a"]},{"Key":"a single-character","Fragments":["\"string\"."]},{"Key":"single-character \"string\".","Fragments":["It"]},{"Key":"\"string\". It","Fragments":["certainly"]},{"Key":"It certainly","Fragments":["needs"]},{"Key":"certainly needs","Fragments":["protect"]},{"Key":"needs protect","Fragments":["against"]},{"Key":"against giving","Fragments":["false"]},{"Key":"giving false","Fragments":["positives"]},{"Key":"false positives","Fragments":["in"]},{"Key":"positives in","Fragments":["that"]},{"Key":"not much","Fragments":["a","exposure","room"]},{"Key":"of anonymous","Fragments":["functions"]},{"Key":"functions where","Fragments":["they"]},{"Key":"where they","Fragments":["aren't"]},{"Key":"they aren't","Fragments":["strictly"]},{"Key":"aren't strictly","Fragments":["necessary."]},{"Key":"strictly necessary.","Fragments":["Especially"]},{"Key":"necessary. Especially","Fragments":["in"]},{"Key":"Especially in","Fragments":["this"]},{"Key":"case, it","Fragments":["makes"]},{"Key":"the `lists:map/2`","Fragments":["call"]},{"Key":"`lists:map/2` call","Fragments":["span"]},{"Key":"call span","Fragments":["too"]},{"Key":"span too","Fragments":["many"]},{"Key":"many lines.","Fragments":["This"]},{"Key":"lines. This","Fragments":["is"]},{"Key":"follow when","Fragments":["you're"]},{"Key":"to match","Fragments":["up"]},{"Key":"match up","Fragments":["arguments"]},{"Key":"up arguments","Fragments":["with"]},{"Key":"arguments with","Fragments":["the"]},{"Key":"call they","Fragments":["go"]},{"Key":"go to.","Fragments":["Honestly,"]},{"Key":"to. Honestly,","Fragments":["that's"]},{"Key":"Honestly, that's","Fragments":["partly"]},{"Key":"that's partly","Fragments":["Erlang's"]},{"Key":"partly Erlang's","Fragments":["fault"]},{"Key":"Erlang's fault","Fragments":["for"]},{"Key":"fault for","Fragments":["having"]},{"Key":"for having","Fragments":["the"]},{"Key":"having the","Fragments":["fun"]},{"Key":"the fun","Fragments":["always"]},{"Key":"fun always","Fragments":["go"]},{"Key":"always go","Fragments":["first,"]},{"Key":"go first,","Fragments":["instead"]},{"Key":"first, instead","Fragments":["of"]},{"Key":"last. You","Fragments":["could"]},{"Key":"clean this","Fragments":["up"]},{"Key":"this up","Fragments":["by"]},{"Key":"up by","Fragments":["either"]},{"Key":"by either","Fragments":["moving"]},{"Key":"either moving","Fragments":["the"]},{"Key":"moving the","Fragments":["anonymous"]},{"Key":"the anonymous","Fragments":["function"]},{"Key":"anonymous function","Fragments":["into"]},{"Key":"a bound","Fragments":["variable,"]},{"Key":"bound variable,","Fragments":["or"]},{"Key":"variable, or","Fragments":["making"]},{"Key":"or making","Fragments":["it"]},{"Key":"the shorthand","Fragments":["version","module"]},{"Key":"shorthand version","Fragments":["like"]},{"Key":"version like","Fragments":["`fun"]},{"Key":"like `fun","Fragments":["translate_element/1`."]},{"Key":"your point","Fragments":["on"]},{"Key":"readability here;","Fragments":["looking"]},{"Key":"here; looking","Fragments":["at"]},{"Key":"this months","Fragments":["later"]},{"Key":"months later","Fragments":["it"]},{"Key":"later it","Fragments":["is"]},{"Key":"follow. I'll","Fragments":["give"]},{"Key":"I'll give","Fragments":["it"]},{"Key":"give it","Fragments":["a"]},{"Key":"a go","Fragments":["with"]},{"Key":"go with","Fragments":["the"]},{"Key":"shorthand module","Fragments":["function."]},{"Key":"module function.","Fragments":["Thanks"]},{"Key":"function. Thanks","Fragments":["for"]},{"Key":"in creating","Fragments":["the"]},{"Key":"creating the","Fragments":["result"]},{"Key":"A little","Fragments":["cleaner"]},{"Key":"little cleaner","Fragments":["thanks"]},{"Key":"cleaner thanks","Fragments":["to"]},{"Key":"to feedback","Fragments":["from"]},{"Key":"feedback from","Fragments":["@nella."]},{"Key":"from @nella.","Fragments":["Also,"]},{"Key":"@nella. Also,","Fragments":["\"validate\""]},{"Key":"Also, \"validate\"","Fragments":["communicates"]},{"Key":"\"validate\" communicates","Fragments":["better"]},{"Key":"communicates better","Fragments":["what"]},{"Key":"better what","Fragments":["that"]},{"Key":"what that","Fragments":["function"]},{"Key":"doing than","Fragments":["\"sanitize\"."]},{"Key":" May","Fragments":["be"]},{"Key":"May be","Fragments":["personal"]},{"Key":"be personal","Fragments":["gusto,"]},{"Key":"personal gusto,","Fragments":["but"]},{"Key":"gusto, but","Fragments":["I'd"]},{"Key":"I'd really","Fragments":["prefer"]},{"Key":"really prefer","Fragments":["`sanitize`"]},{"Key":"prefer `sanitize`","Fragments":["over"]},{"Key":"`sanitize` over","Fragments":["`validate`"]},{"Key":"over `validate`","Fragments":["here."]},{"Key":"`validate` here.","Fragments":["`validate`"]},{"Key":"here. `validate`","Fragments":["sounds"]},{"Key":"`validate` sounds","Fragments":["like"]},{"Key":"return either","Fragments":["`true`"]},{"Key":"either `true`","Fragments":["or"]},{"Key":"`true` or","Fragments":["`false`"]},{"Key":"or `false`","Fragments":["depending"]},{"Key":"`false` depending","Fragments":["on"]},{"Key":"the validity","Fragments":["of"]},{"Key":"validity of","Fragments":["the"]},{"Key":"given input","Fragments":["while"]},{"Key":"input while","Fragments":["sanitize"]},{"Key":"while sanitize","Fragments":["(or"]},{"Key":"sanitize (or","Fragments":["normalize)"]},{"Key":"(or normalize)","Fragments":["would"]},{"Key":"normalize) would","Fragments":["clearly"]},{"Key":"would clearly","Fragments":["communicate"]},{"Key":"clearly communicate","Fragments":["that"]},{"Key":"communicate that","Fragments":["they"]},{"Key":"they walk","Fragments":["over"]},{"Key":"walk over","Fragments":["the"]},{"Key":"and change","Fragments":["it"]},{"Key":"change it","Fragments":["into"]},{"Key":"some sane","Fragments":["or"]},{"Key":"sane or","Fragments":["normalized"]},{"Key":"or normalized","Fragments":["form"]},{"Key":"normalized form","Fragments":["you"]},{"Key":"form you","Fragments":["can"]},{"Key":"can work","Fragments":["with"]},{"Key":" Silently","Fragments":["stripping"]},{"Key":"Silently stripping","Fragments":["letters"]},{"Key":"stripping letters","Fragments":["seems"]},{"Key":"letters seems","Fragments":["risky"]},{"Key":"seems risky","Fragments":["for"]},{"Key":"risky for","Fragments":["an"]},{"Key":"an SMS","Fragments":["application,"]},{"Key":"SMS application,","Fragments":["although"]},{"Key":"application, although","Fragments":["I"]},{"Key":"suppose if","Fragments":["the"]},{"Key":"the resulting","Fragments":["number"]},{"Key":"resulting number","Fragments":["is"]},{"Key":"valid phone","Fragments":["number,"]},{"Key":"phone number,","Fragments":["it's"]},{"Key":"number, it's","Fragments":["safe-ish."]},{"Key":" (I","Fragments":["do"]},{"Key":"(I do","Fragments":["like"]},{"Key":"that technique,","Fragments":["though,"]},{"Key":"technique, though,","Fragments":["different"]},{"Key":"though, different","Fragments":["role"]},{"Key":"different role","Fragments":["for"]},{"Key":"role for","Fragments":["a"]},{"Key":"comprehension than","Fragments":["I've"]},{"Key":"than I've","Fragments":["used"]},{"Key":"Why don't","Fragments":["you","you","you"]},{"Key":"return `T`","Fragments":["directly"]},{"Key":"`T` directly","Fragments":["on"]},{"Key":"is correct","Fragments":["but"]},{"Key":"correct but","Fragments":["unidiomatic"]},{"Key":"but unidiomatic","Fragments":["for"]},{"Key":"unidiomatic for","Fragments":["one"]},{"Key":"for one","Fragments":["key"]},{"Key":"one key","Fragments":["reason:"]},{"Key":"key reason:","Fragments":["it's"]},{"Key":"reason: it's","Fragments":["not"]},{"Key":"Erlang can","Fragments":["optimize"]},{"Key":"can optimize","Fragments":["out"]},{"Key":"optimize out","Fragments":["unused"]},{"Key":"out unused","Fragments":["stack"]},{"Key":"unused stack","Fragments":["frames"]},{"Key":"stack frames","Fragments":["with"]},{"Key":"frames with","Fragments":["tail"]},{"Key":"approach. Look","Fragments":["at"]},{"Key":"Look at","Fragments":["```lists:map/2```"]},{"Key":"at ```lists:map/2```","Fragments":["for"]},{"Key":" Spot","Fragments":["2"]},{"Key":"Spot 2","Fragments":["wrong"]},{"Key":"2 wrong","Fragments":["type"]},{"Key":"wrong type","Fragments":["definitions,"]},{"Key":"type definitions,","Fragments":["then"]},{"Key":"definitions, then","Fragments":["ran"]},{"Key":"then ran","Fragments":["a"]},{"Key":"a \"dialyzer\"","Fragments":["on"]},{"Key":"\"dialyzer\" on","Fragments":["the"]},{"Key":"the file.","Fragments":["The"]},{"Key":"file. The","Fragments":["dialyzer"]},{"Key":"The dialyzer","Fragments":["complained"]},{"Key":"dialyzer complained","Fragments":["for"]},{"Key":"complained for","Fragments":["the"]},{"Key":"wrong defined","Fragments":["type"]},{"Key":"defined type","Fragments":["dna_string"]},{"Key":"type dna_string","Fragments":["and"]},{"Key":"dna_string and","Fragments":["rna_string."]},{"Key":"and rna_string.","Fragments":["Updated"]},{"Key":"rna_string. Updated","Fragments":["and"]},{"Key":"Updated and","Fragments":["verified"]},{"Key":"and verified","Fragments":["with"]},{"Key":"verified with","Fragments":["dialyzer"]},{"Key":"with dialyzer","Fragments":["for"]},{"Key":"dialyzer for","Fragments":["this"]},{"Key":" @taurean-Zhou","Fragments":["Nice"]},{"Key":"@taurean-Zhou Nice","Fragments":["implementation"]},{"Key":"avoid reusing","Fragments":["`to_rna/1`"]},{"Key":"reusing `to_rna/1`","Fragments":["for"]},{"Key":"`to_rna/1` for","Fragments":["both"]},{"Key":"mapping and","Fragments":["the"]},{"Key":"list handling.","Fragments":["It"]},{"Key":"handling. It","Fragments":["violates"]},{"Key":"It violates","Fragments":["the"]},{"Key":"violates the","Fragments":["principle"]},{"Key":"the principle","Fragments":["of"]},{"Key":"principle of","Fragments":["separation"]},{"Key":"of separation","Fragments":["of"]},{"Key":" @elvie,","Fragments":["I"]},{"Key":"@elvie, I","Fragments":["would"]},{"Key":"would move","Fragments":["`lists:reverse/1`"]},{"Key":"move `lists:reverse/1`","Fragments":["to"]},{"Key":"`lists:reverse/1` to","Fragments":["line"]},{"Key":"5 instead","Fragments":["of"]},{"Key":"of line","Fragments":["8"]},{"Key":"line 8","Fragments":["but"]},{"Key":"8 but","Fragments":["I"]},{"Key":"think that's","Fragments":["what"]},{"Key":"that's what","Fragments":["you're","I"]},{"Key":"what you're","Fragments":["trying"]},{"Key":"tell me.","Fragments":["Could"]},{"Key":"me. Could","Fragments":["you"]},{"Key":"you steer","Fragments":["me"]},{"Key":"steer me","Fragments":["in"]},{"Key":"would the","Fragments":["code"]},{"Key":"code look","Fragments":["if"]},{"Key":"look if","Fragments":["the"]},{"Key":"list were","Fragments":["reversed"]},{"Key":"were reversed","Fragments":["before"]},{"Key":"reversed before","Fragments":["being"]},{"Key":"before being","Fragments":["worked"]},{"Key":"being worked","Fragments":["on?"]},{"Key":" Made","Fragments":["it"]},{"Key":"Made it","Fragments":["a"]},{"Key":"bit mor","Fragments":["robust"]},{"Key":"mor robust","Fragments":["and"]},{"Key":"robust and","Fragments":["never"]},{"Key":"and never","Fragments":["look"]},{"Key":"never look","Fragments":["at"]},{"Key":"at more","Fragments":["than"]},{"Key":"than 11","Fragments":["digits"]},{"Key":"11 digits","Fragments":["to"]},{"Key":"digits to","Fragments":["avoid"]},{"Key":"avoid some","Fragments":["one"]},{"Key":"some one","Fragments":["coming"]},{"Key":"one coming","Fragments":["along"]},{"Key":"coming along","Fragments":["and"]},{"Key":"along and","Fragments":["fooling"]},{"Key":"and fooling","Fragments":["me"]},{"Key":"fooling me","Fragments":["with"]},{"Key":"string that","Fragments":["has"]},{"Key":"billion of","Fragments":["digits."]},{"Key":"Removed the","Fragments":["need"]},{"Key":"need of","Fragments":["handling"]},{"Key":"handling invalid","Fragments":["numbers"]},{"Key":"invalid numbers","Fragments":["on"]},{"Key":"numbers on","Fragments":["top"]},{"Key":"on top","Fragments":["and"]},{"Key":"top and","Fragments":["at"]},{"Key":"and at","Fragments":["the"]},{"Key":"bottom of","Fragments":["`number/4`s"]},{"Key":"of `number/4`s","Fragments":["pattern-match-clauses"]},{"Key":"`number/4`s pattern-match-clauses","Fragments":["and"]},{"Key":"pattern-match-clauses and","Fragments":["moved"]},{"Key":"moved it","Fragments":["completely"]},{"Key":"it completely","Fragments":["to"]},{"Key":"completely to","Fragments":["the"]},{"Key":"how clear","Fragments":["the"]},{"Key":"clear the","Fragments":["simple"]},{"Key":"simple problem","Fragments":["structure"]},{"Key":"problem structure","Fragments":["becomes"]},{"Key":"structure becomes","Fragments":["when"]},{"Key":"becomes when","Fragments":["presented"]},{"Key":"when presented","Fragments":["like"]},{"Key":"presented like","Fragments":["this."]},{"Key":"this. Is","Fragments":["there"]},{"Key":"keep that,","Fragments":["while"]},{"Key":"that, while","Fragments":["avoiding"]},{"Key":"while avoiding","Fragments":["repeatedly"]},{"Key":"avoiding repeatedly","Fragments":["sorting"]},{"Key":"repeatedly sorting","Fragments":["and"]},{"Key":"sorting and","Fragments":["downcasing"]},{"Key":"and downcasing","Fragments":["`Word`?"]},{"Key":"downcasing `Word`?","Fragments":["(Not"]},{"Key":"`Word`? (Not","Fragments":["that"]},{"Key":"(Not that","Fragments":["I"]},{"Key":"you necessarily","Fragments":["need"]},{"Key":"necessarily need","Fragments":["to.)"]},{"Key":" Get","Fragments":["into"]},{"Key":"Get into","Fragments":["the"]},{"Key":"adding specs","Fragments":["to"]},{"Key":"specs to","Fragments":["all"]},{"Key":"No validation?","Fragments":["No"]},{"Key":"validation? No","Fragments":["spec?"]},{"Key":" Function","Fragments":["process"]},{"Key":"Function process","Fragments":["can"]},{"Key":"process can","Fragments":["be"]},{"Key":"be replaced","Fragments":["by"]},{"Key":"replaced by","Fragments":["pretty"]},{"Key":"by pretty","Fragments":["lists:map"]},{"Key":"Maybe you","Fragments":["want"]},{"Key":"try \"tail","Fragments":["recursion\"?"]},{"Key":" Fine,","Fragments":["although"]},{"Key":"Fine, although","Fragments":["I"]},{"Key":"can't help","Fragments":["but"]},{"Key":"help but","Fragments":["feel"]},{"Key":"but feel","Fragments":["that"]},{"Key":"using `foldl`","Fragments":["in"]},{"Key":"`foldl` in","Fragments":["place"]},{"Key":"is kinda","Fragments":["cheating"]},{"Key":"kinda cheating","Fragments":["because"]},{"Key":"cheating because","Fragments":["the"]},{"Key":"the exercise","Fragments":["is"]},{"Key":"build it","Fragments":["from"]},{"Key":"from first","Fragments":["principles."]},{"Key":"A list","Fragments":["comprehension"]},{"Key":"comprehension would","Fragments":["be"]},{"Key":"good too","Fragments":[":)"]},{"Key":" [Function(X)","Fragments":["|"]},{"Key":"[Function(X) |","Fragments":["X"]},{"Key":"| X","Fragments":["\u003c-"]},{"Key":"Great job.","Fragments":["If"]},{"Key":"job. If","Fragments":["you"]},{"Key":"are interested","Fragments":["in"]},{"Key":"alternative approach,","Fragments":["you"]},{"Key":"approach, you","Fragments":["may"]},{"Key":"out Erlang's","Fragments":["\"when\"."]},{"Key":"Erlang's \"when\".","Fragments":["Using"]},{"Key":"\"when\". Using","Fragments":["guards"]},{"Key":"Using guards","Fragments":["can"]},{"Key":"guards can","Fragments":["be"]},{"Key":"great approach","Fragments":["to"]},{"Key":"to solving","Fragments":["problems"]},{"Key":"solving problems","Fragments":["like"]},{"Key":"problems like","Fragments":["this."]},{"Key":"of bit","Fragments":["syntax."]},{"Key":"bit syntax.","Fragments":["It"]},{"Key":"syntax. It","Fragments":["really"]},{"Key":"It really","Fragments":["brings"]},{"Key":"really brings","Fragments":["out"]},{"Key":"brings out","Fragments":["the"]},{"Key":"the binary","Fragments":["structure"]},{"Key":"binary structure","Fragments":["of"]},{"Key":"fold instead","Fragments":["of"]},{"Key":"of `zipwith`","Fragments":["and"]},{"Key":"`zipwith` and","Fragments":["`filter`?"]},{"Key":"lot better.","Fragments":["Did"]},{"Key":"better. Did","Fragments":["I"]},{"Key":"Did I","Fragments":["ever"]},{"Key":"I ever","Fragments":["mention"]},{"Key":"ever mention","Fragments":["I'm"]},{"Key":"mention I'm","Fragments":["a"]},{"Key":"a deeply","Fragments":["flawed"]},{"Key":"deeply flawed","Fragments":["human"]},{"Key":"flawed human","Fragments":["being?"]},{"Key":"human being?","Fragments":["One"]},{"Key":"being? One","Fragments":["of"]},{"Key":"One of","Fragments":["the"]},{"Key":"the stupid","Fragments":["things"]},{"Key":"stupid things","Fragments":["I"]},{"Key":"things I","Fragments":["might"]},{"Key":"do is","Fragments":["feed"]},{"Key":"is feed","Fragments":["`to_rna/1`"]},{"Key":"feed `to_rna/1`","Fragments":["a"]},{"Key":"`to_rna/1` a","Fragments":["\"char\""]},{"Key":"a \"char\"","Fragments":["and"]},{"Key":"\"char\" and","Fragments":["expect"]},{"Key":"and expect","Fragments":["to"]},{"Key":"expect to","Fragments":["get"]},{"Key":"list. That's","Fragments":["why"]},{"Key":"That's why","Fragments":["I"]},{"Key":"return type","Fragments":["of"]},{"Key":"my overloaded","Fragments":["functions"]},{"Key":"overloaded functions","Fragments":["the"]},{"Key":"functions the","Fragments":["same."]},{"Key":"TODO: Update","Fragments":["to"]},{"Key":" instead","Fragments":["of"]},{"Key":"the you","Fragments":["could"]},{"Key":"* within","Fragments":["to_rna(D),"]},{"Key":"within to_rna(D),","Fragments":["the"]},{"Key":"to_rna(D), the","Fragments":["definition"]},{"Key":"definition should","Fragments":["be"]},{"Key":"be to_rna([H|T])","Fragments":["as"]},{"Key":"to_rna([H|T]) as","Fragments":["this"]},{"Key":"as this","Fragments":["reduces"]},{"Key":"this reduces","Fragments":["the"]},{"Key":"the unecessary","Fragments":["D"]},{"Key":"unecessary D","Fragments":["variable"]},{"Key":"D variable","Fragments":["and"]},{"Key":"and follows","Fragments":["the"]},{"Key":"follows the","Fragments":["convention"]},{"Key":"of naming","Fragments":["the"]},{"Key":"naming the","Fragments":["list"]},{"Key":"list components","Fragments":["H(ead)"]},{"Key":"components H(ead)","Fragments":["and"]},{"Key":"H(ead) and","Fragments":["T(ail)."]},{"Key":"* rather","Fragments":["than"]},{"Key":"than to_rna/1","Fragments":["variants"]},{"Key":"to_rna/1 variants","Fragments":["that"]},{"Key":"variants that","Fragments":["handle"]},{"Key":"that handle","Fragments":["each"]},{"Key":"handle each","Fragments":["DNA"]},{"Key":"each DNA","Fragments":["letter"]},{"Key":"DNA letter","Fragments":["as"]},{"Key":"letter as","Fragments":["a"]},{"Key":"of characters,","Fragments":["create"]},{"Key":"characters, create","Fragments":["a"]},{"Key":"a mapping","Fragments":["function"]},{"Key":"that receives","Fragments":["a"]},{"Key":"receives a","Fragments":["character"]},{"Key":"a character","Fragments":["and"]},{"Key":"a character.","Fragments":["This"]},{"Key":"character. This","Fragments":["will"]},{"Key":"will improve","Fragments":["the"]},{"Key":"performance dramatically","Fragments":["as"]},{"Key":"as unicode:characters_to_list/2","Fragments":["will"]},{"Key":"unicode:characters_to_list/2 will","Fragments":["not"]},{"Key":"not need","Fragments":["to"]},{"Key":"be called,","Fragments":["reducing"]},{"Key":"called, reducing","Fragments":["memory"]},{"Key":"reducing memory","Fragments":["allocations."]},{"Key":"recursion rather","Fragments":["than"]},{"Key":"than list","Fragments":["concatenation."]},{"Key":"list concatenation.","Fragments":["list"]},{"Key":"concatenation. list","Fragments":["concatenation"]},{"Key":"list concatenation","Fragments":["as"]},{"Key":"concatenation as","Fragments":["coded"]},{"Key":"as coded","Fragments":["here"]},{"Key":"coded here","Fragments":["will"]},{"Key":"here will","Fragments":["generate"]},{"Key":"will generate","Fragments":["a"]},{"Key":"generate a","Fragments":["large"]},{"Key":"large number","Fragments":["of"]},{"Key":"memory allocations","Fragments":["for"]},{"Key":"allocations for","Fragments":["intermediate"]},{"Key":"for intermediate","Fragments":["lists"]},{"Key":"lists in","Fragments":["the"]},{"Key":"logic here","Fragments":["is"]},{"Key":"very clear.","Fragments":["However,"]},{"Key":"clear. However,","Fragments":["since"]},{"Key":"However, since","Fragments":["`if`"]},{"Key":"since `if`","Fragments":["in"]},{"Key":"`if` in","Fragments":["Erlang"]},{"Key":"a shorthand","Fragments":["to"]},{"Key":"shorthand to","Fragments":["test"]},{"Key":"test some","Fragments":["guards,"]},{"Key":"some guards,","Fragments":["why"]},{"Key":"guards, why","Fragments":["not"]},{"Key":"use those","Fragments":["guards"]},{"Key":"those guards","Fragments":["directly"]},{"Key":"guards directly","Fragments":["at"]},{"Key":"directly at","Fragments":["the"]},{"Key":"definition level?","Fragments":["Something"]},{"Key":"level? Something","Fragments":["to"]},{"Key":"Something to","Fragments":["consider."]},{"Key":"am pretty","Fragments":["sure"]},{"Key":"pretty sure","Fragments":["list"]},{"Key":"sure list","Fragments":["comprehension"]},{"Key":"Maybe not","Fragments":["in"]},{"Key":"spirit but","Fragments":["surely"]},{"Key":"but surely","Fragments":["in"]},{"Key":"surely in","Fragments":["letter:"]},{"Key":" \u003eKeep","Fragments":["your"]},{"Key":"\u003eKeep your","Fragments":["hands"]},{"Key":"library but","Fragments":["certainly"]},{"Key":"but certainly","Fragments":["a"]},{"Key":"certainly a","Fragments":["basic"]},{"Key":"basic tool","Fragments":["of"]},{"Key":"tool of","Fragments":["the"]},{"Key":" Either","Fragments":["way,"]},{"Key":"way, re-implementing","Fragments":["these"]},{"Key":"re-implementing these","Fragments":["basics"]},{"Key":"these basics","Fragments":["in"]},{"Key":"basics in","Fragments":["hand-written"]},{"Key":"in hand-written","Fragments":["loops"]},{"Key":"hand-written loops","Fragments":["over"]},{"Key":"loops over","Fragments":["and"]},{"Key":"over is","Fragments":["getting"]},{"Key":"is getting","Fragments":["boring"]},{"Key":"getting boring","Fragments":["and"]},{"Key":"doesn't teach","Fragments":["anything"]},{"Key":"teach anything","Fragments":["new."]},{"Key":" Well","Fragments":["it"]},{"Key":"Well it","Fragments":["really"]},{"Key":"really depends","Fragments":["on"]},{"Key":"your prior","Fragments":["experience."]},{"Key":"prior experience.","Fragments":["If"]},{"Key":"experience. If","Fragments":["one"]},{"Key":"If one","Fragments":["had"]},{"Key":"one had","Fragments":["not"]},{"Key":"had not","Fragments":["much"]},{"Key":"much exposure","Fragments":["to"]},{"Key":"exposure to","Fragments":["functional"]},{"Key":"functional languages","Fragments":["before,"]},{"Key":"languages before,","Fragments":["doing"]},{"Key":"before, doing","Fragments":["more"]},{"Key":"doing more","Fragments":["exerices"]},{"Key":"more exerices","Fragments":["with"]},{"Key":"exerices with","Fragments":["tail"]},{"Key":"get pretty","Fragments":["familiar"]},{"Key":"pretty familiar","Fragments":["with"]},{"Key":"some typespecs","Fragments":["(perhaps"]},{"Key":"typespecs (perhaps","Fragments":["also"]},{"Key":"(perhaps also","Fragments":["create"]},{"Key":"also create","Fragments":["types"]},{"Key":"create types","Fragments":["as"]},{"Key":"types as","Fragments":["needed)"]},{"Key":"as needed)","Fragments":["and"]},{"Key":"needed) and","Fragments":["use"]},{"Key":"and use","Fragments":["guards"]},{"Key":"sure using","Fragments":["a"]},{"Key":"map for","Fragments":["the"]},{"Key":"translation would","Fragments":["gain"]},{"Key":"would gain","Fragments":["anything"]},{"Key":"gain anything","Fragments":["--"]},{"Key":"anything --","Fragments":["performance"]},{"Key":"-- performance","Fragments":["is"]},{"Key":"is slower","Fragments":["than"]},{"Key":"than pattern-matching,","Fragments":["especially"]},{"Key":"pattern-matching, especially","Fragments":["before"]},{"Key":"especially before","Fragments":["R18,"]},{"Key":"before R18,","Fragments":["and"]},{"Key":"R18, and","Fragments":["this"]},{"Key":"this method","Fragments":["is"]},{"Key":"just as,","Fragments":["if"]},{"Key":"as, if","Fragments":["not"]},{"Key":"not more,","Fragments":["readable."]},{"Key":"considered it,","Fragments":["but"]},{"Key":"solution reads.","Fragments":["Is"]},{"Key":"reads. Is","Fragments":["there"]},{"Key":"a compelling","Fragments":["reason"]},{"Key":"compelling reason","Fragments":["beyond"]},{"Key":"reason beyond","Fragments":["style"]},{"Key":"beyond style","Fragments":["to"]},{"Key":"to lean","Fragments":["on"]},{"Key":"on maps","Fragments":["here?"]},{"Key":"a -spec","Fragments":["for"]},{"Key":"-spec for","Fragments":["exported"]},{"Key":"* Why","Fragments":["don't","don't"]},{"Key":"you move","Fragments":["`?EARTHYEAR`"]},{"Key":"move `?EARTHYEAR`","Fragments":["to"]},{"Key":"`?EARTHYEAR` to","Fragments":["`calculateAge/2`?"]},{"Key":"you pattern","Fragments":["match"]},{"Key":"match in","Fragments":["function"]},{"Key":"* And","Fragments":["how"]},{"Key":"And how","Fragments":["about"]},{"Key":"wasn't going","Fragments":["to"]},{"Key":"fail when","Fragments":["`T`"]},{"Key":"when `T`","Fragments":["is"]},{"Key":"`T` is","Fragments":["empty."]},{"Key":"is empty.","Fragments":["Now"]},{"Key":"empty. Now","Fragments":["I"]},{"Key":"won't because","Fragments":["one"]},{"Key":"one iteration","Fragments":["before"]},{"Key":"iteration before","Fragments":["it"]},{"Key":"gets there,","Fragments":["it"]},{"Key":"there, it","Fragments":["will"]},{"Key":"will match","Fragments":["one"]},{"Key":"first 4","Fragments":["clauses."]},{"Key":"4 clauses.","Fragments":["Still"]},{"Key":"clauses. Still","Fragments":["have"]},{"Key":"Still have","Fragments":["mixed"]},{"Key":"have mixed","Fragments":["feelings"]},{"Key":"mixed feelings","Fragments":["about"]},{"Key":"feelings about","Fragments":["this"]},{"Key":"Yeah, but","Fragments":["it"]},{"Key":"someone inputs","Fragments":["an"]},{"Key":"inputs an","Fragments":["unrecognised"]},{"Key":"an unrecognised","Fragments":["character,"]},{"Key":"unrecognised character,","Fragments":["right?"]},{"Key":"character, right?","Fragments":["I"]},{"Key":"right? I","Fragments":["wonder"]},{"Key":"might catch","Fragments":["that..."]},{"Key":"my opinion","Fragments":["you"]},{"Key":"opinion you","Fragments":["shouldn't,"]},{"Key":"you shouldn't,","Fragments":["that's"]},{"Key":"shouldn't, that's","Fragments":["what"]},{"Key":"took away","Fragments":["from"]},{"Key":"away from","Fragments":["learning"]},{"Key":"erlang so","Fragments":["far."]},{"Key":"so far.","Fragments":["It's"]},{"Key":"far. It's","Fragments":["supposed"]},{"Key":"It's supposed","Fragments":["to"]},{"Key":"supposed to","Fragments":["handle"]},{"Key":"handle DNA","Fragments":["strands,"]},{"Key":"DNA strands,","Fragments":["not"]},{"Key":"strands, not","Fragments":["the"]},{"Key":"whole alphabet","Fragments":[":D"]},{"Key":" Its","Fragments":["not"]},{"Key":"Its not","Fragments":["tail"]},{"Key":"which means","Fragments":["it"]},{"Key":"means it","Fragments":["may"]},{"Key":"as memory","Fragments":["efficient"]},{"Key":"memory efficient","Fragments":["as"]},{"Key":"as one","Fragments":["would"]},{"Key":"like for","Fragments":["really"]},{"Key":"for really","Fragments":["long"]},{"Key":"really long","Fragments":["strings"]},{"Key":"long strings","Fragments":["-"]},{"Key":"strings -","Fragments":["could"]},{"Key":"- could","Fragments":["even"]},{"Key":"could even","Fragments":["run"]},{"Key":"even run","Fragments":["out"]},{"Key":"run out","Fragments":["of"]},{"Key":"of stack","Fragments":["space"]},{"Key":"stack space","Fragments":["theoretically."]},{"Key":"Pretty much","Fragments":["the"]},{"Key":"same implementation","Fragments":["that"]},{"Key":"up with,","Fragments":["but"]},{"Key":"with, but","Fragments":["I'm"]},{"Key":"I'm no","Fragments":["Erlang"]},{"Key":"no Erlang","Fragments":["expert"]},{"Key":"Erlang expert","Fragments":[":)"]},{"Key":"did name","Fragments":["the"]},{"Key":"function argument","Fragments":["`Year`"]},{"Key":"argument `Year`","Fragments":["instead"]},{"Key":"`Year` instead","Fragments":["of"]},{"Key":"of `N`,","Fragments":["though."]},{"Key":"`N`, though.","Fragments":["I"]},{"Key":"though. I","Fragments":["like"]},{"Key":"my variable","Fragments":["names"]},{"Key":"names to","Fragments":["be"]},{"Key":"be explicit","Fragments":["about"]},{"Key":"explicit about","Fragments":["their"]},{"Key":"about their","Fragments":["purpose"]},{"Key":"their purpose","Fragments":["even"]},{"Key":"purpose even","Fragments":["though"]},{"Key":"though there's","Fragments":["not"]},{"Key":"there's not","Fragments":["much"]},{"Key":"much room","Fragments":["for"]},{"Key":"for confusion","Fragments":["in"]},{"Key":"confusion in","Fragments":["this"]},{"Key":"argument naming.","Fragments":["Changed"]},{"Key":"naming. Changed","Fragments":["that"]},{"Key":"Changed that","Fragments":["for"]},{"Key":"i came","Fragments":["to"]},{"Key":"the realization","Fragments":["that"]},{"Key":"realization that","Fragments":["sum"]},{"Key":"that sum","Fragments":["will"]},{"Key":"sum will","Fragments":["not"]},{"Key":"not work","Fragments":["in"]},{"Key":"the long","Fragments":["term."]},{"Key":"long term.","Fragments":["Update"]},{"Key":"term. Update","Fragments":["to"]},{"Key":"- Renamed","Fragments":["my"]},{"Key":"Renamed my","Fragments":["pattern"]},{"Key":"my pattern","Fragments":["(`Year`"]},{"Key":"pattern (`Year`","Fragments":["\u003e\u003e"]},{"Key":"(`Year` \u003e\u003e","Fragments":["`N`)"]},{"Key":"think i'd","Fragments":["be"]},{"Key":"i'd be","Fragments":["more"]},{"Key":"use if","Fragments":["very"]},{"Key":"if very","Fragments":["much"]},{"Key":"erlang, preferring","Fragments":["pattern"]},{"Key":"preferring pattern","Fragments":["matching"]},{"Key":"functions or","Fragments":["case"]},{"Key":"or case","Fragments":["statements."]},{"Key":"still pretty","Fragments":["new"]},{"Key":"pretty new","Fragments":["to"]},{"Key":"agree RE:","Fragments":["using"]},{"Key":"RE: using","Fragments":["guards"]},{"Key":"guards and/or","Fragments":["case"]},{"Key":"and/or case","Fragments":["expressions"]},{"Key":"case expressions","Fragments":["instead"]},{"Key":"expressions instead","Fragments":["of"]},{"Key":"of if","Fragments":["expressions."]}],"prefix_len":2}