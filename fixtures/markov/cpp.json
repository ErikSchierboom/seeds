{"Nodes":[{"Key":" ","Fragments":["I","Looks","I","Additionally,","After","The","How","I","You","You","You","There","-","-","-","-","-","-","-","This","-","-","Additionally,","-","-","-","I","Thank","For","The","I","Have","http://www.boost.org/doc/libs/1_56_0/libs/tokenizer/tokenizer.htm","While","Thanks!","Mostly","I","I","A","*","*","*","*","If","However,","I","Thank","Got","Integrated","You","What","Regarding:","using","I","Also,","Here","Also,","bool","bool","string","This","I","Some","1)","2)","3)","4)","5)","And","I","Switched","You","Can","Using","Testing","I","In","`split_words`","Nice!","I","I","namespace","std::string","};","```","I","Slightly","I'd","Also,","I've","I","Instead","if","you","if","Wasn't","There","Don't","whoops","What's","yep,","and","that's","can","I'm","Isn't","You","You","1.","1.","1.","*","*","I","I","You","The","I","I","-","Also,","I","I","What","I","You","Of","Cought","I'm","I","(I","I","Switched","I","As","I","`std::string`","C++11","```C++","for","//","}","```","Do","You're","I","We","This","We're","Some","I","Doesn't","Has","Just","I'm","I","In","`std::string`","I","a","boost/range/algorithm_ext/for_each.hpp","Of","both","quite","Nice","boost/range/algorithm_ext/for_each.hpp","binary","This","Since","If","Great!","Similarly,","The","thank","boost/tokenizer.hpp","Since","converting","seemed","However,","removing","is","I","Your","Not","```","if(","```","in","Funny,","occurs","This","I","However,","When","As","An","Switched","The","-","The","-","-","-","-","There","In","with","```C++","for","```","Have","without","I","Also,","Anyway,","`boost::tokenizer\u003c\u003e`","cool,","I","quite","understanding","But","Another","```C++","string","```","which","This","The","or","However,","Why","Looks","1)","2","for","```","in","Better!","What","The","Yeah,","I","Also,","Agreed!","I","But","`string",",","Also,","This","Removing","I","The","But","I","Indeed","Also","Nice","Two","*","*","What","It","Consider","So","But","I","```C++","const","```","One","It's","```C++","const","if","```","When","```C++","if","```","However,","```C++","namespace","bool","{","return","}","}","//","if","```","We","Doh!","The","So,","I","The","This","So","This","However,","There","One","Hi","here","1)","2)","For","```cpp","bool","```","That","3)","I'm","Your","A","One","I.e.,","I","Hi,","I","If","After","Try","I","-","*","-","*","*","The","My","I","Dialog(const","instead","Dialog(std::string","It","Running","Any","I","I","Let's","A","Nice","But","```cpp","int","return","```","There","Also,","Nice","Nice","Just","```cpp","auto","if","it-\u003esecond++;","}","acc[word]","}","```","into","```cpp","acc[word]","```","I","Have","1)","2)","I","I","However,","Made","Focused","Hi","Thanks","I","What","This","Good","There","I","your","This","```","namespace","std::string","//code","}","}","```","or,","```","class","public:","static","//code","}","};","```","This","Apparently,","And","Looks","This","Elected","I","Would","bob::hey","Iteration","This","Elected","I","Would","Not","Inital","In","I","I","The","I","The","You","I","Have","I'm","edit:","Alrighty","The","Looks","A","I","I","I","(I","I'm","The","```cpp","return","```","which","But","```cpp","const","const","return","query.find_first_of(","```","The","By","1.","2.","3.","-","-","4.","I","But","However,","Personally,","I'm","Almost..","it","```","std::string","```","which","@julie:","I","Good","One","Also,","Complete","Same","Suppose","Added","I'd","Since","I","In","Not","I'd","It","many","As","I","In","Try","Your","A","1)","string","of","e.g.","```bool","```","2)","For","```std::all_of(str.begin(),","```","Do","removed","very","props!","put","```","[`find_first_of`](http://example.com)","```","Fairly","*","Regarding","Generally","*","Use","It","It's","I","*","*","*","*","*","*","for","Another","Why","Some","a)","b)","c)","Why","You","My","I","Basically","To","I've","Since","The","Also","data","```for(","```","making","This","@elias","Looks","Two","1)","2)","I","It","Yes,","Two","1)","2)","I","Thanks,","I","In","Through","I'm","I","As","I","Then","I","Anyway,","Thanks,","I've","Using","So","The","You'll","Thanks","I","Hey,","It","I'm","Interesting","The","My","I","Only","I","I","else","return","}","I","I","There","I","If","return","I","Is","A","```c++","namespace","std::string","}","```","Hmm,","Maybe","char","Anyway,","Since","Fixed","What","@raoul","I've","If","This","Perhaps","I","I","(1)","(2)","```question.erase(","\u003ctab\u003estd::find_if(","\u003ctab\u003e\u003ctab\u003equestion.rbegin(),","\u003ctab\u003e\u003ctab\u003e[](std::string::value_type","\u003ctab\u003equestion.end());","```","(3)","Looking","@donnell-mad","Unfortunately","@donnell","Non-member","Checking","So","1)","2)","I","Your","(*","However,","(1)","(2)","(3)","(4)","1)","2)","Bob","Looks","What","I'm","I","Just","-","-","-","-","-","I","it","If","something","```","for","char","if","is_anything","}","```","could","```","for","is_anything","```","you","Ah,","-","-","-","I","1)","2)","Thanks","A","5","G","59","M","43","S","17","Y","67","I","http://en.wikipedia.org/wiki/Letter_frequency","Wanted","I","Yeah.","Thanks","I","Remember,","Also,","I","I","Wow.","Good","As","There","The","Secondly,","On","I","For","Line","I","I","Just","Also,","In","Note","for","I","I'm","And","Thanks","Moved","I","Stylistically,","Also,","I","Why","(minor","I","I","I","I'm","Thanks!","This","once","```","istringstream","map\u003cstring,","string","while","++count[word];","}","```","This","the","The","To","Inside","Ok","@nia","Thanks","I","Don't","Hmm,","Thanks","1)","2)","This","At","Though,","Also","The","I","This","Also,","Also,","I","Oh,","Bool","I","I","So","Your","I","```std::string","std::transform(word.begin(),","```","I","Something","(See","Your","And","Really","My","Just","Thats","Pulled","Thanks,","Should","I","oh","i","thanks","I","Ahoi","1)","2)","3)","4)","In","```cpp","void","for(int","s","std::cout","}","```","Say","But","After","To","Would","Looks","In","Also","Yes,","Sorting","Thoughts?","Neat,","removed","Adding","However","Hopefully","Nice,","One","I'd","Thanks.","Good","Guess","Moved","I","Perhaps","Can","There","I","The","statics","The","I","I","Good","The","Encapsulating","First,","Second,","@shaun","You","I","`namespace","string","//implementation","}","}`","That","Nobody's","this","I","I","At","It","thanks","Nicely","1.","2.","You","-","-","-","-","Thank","While","thanks","Yea","Kinda","A","But","This","I","I've","Also,","I'm","Ty,","Well,","Come","Hey","got","1)","2)","I","I","Example:","```","..!longword@,?...","^","start","```","Basically,","You","(Alternatively,","Hi,","You","It","I'd","One","An","If","I","Example:","```","..!longword@,?...","^","start","```","Basically,","You","@dixie","I","```cpp","void","std::string","for(int","s_func","std::cout","}","```","I","Clearly","Thanks","I","Now,","Commented","For","This","Have","Which","I","\u003e","Not","Yea,","You","You","Lastly,","Ahoi","couple","1)","2)","3)","Regarding","I","But","1)","2)","So","Getting","Your","C++","I","Use","I","std::transform","If","word.reserve(std::distance(start,","That","I","```","$","#include","#include","int","{","std::string","int","for(int","{","int","if","std::cout","last","s.push_back('x');","}","}","$","g++","$","0:","1:","2:","3:","5:","9:","17:","33:","65:","129:","257:","513:","```","@markus","You","```C++","std::all_of(str.begin(),","```","Pass","You","Why","Also,","Looks","Also,","Hello","I","I","1.","2.","In","to","Hope","Cheers!","Thanks","As","Ahoi","Personally,","I","Other","I","Hello,","I","Cheers!","edit:","Hi!","I'm","Why","You've","Use","A","No","Also,","`returnValue[wordBuffer]`","The","In","\u003e","the","`find_if`","```cpp","auto","//iterate","while(","//find","auto","//from","auto","//This","std::string","//increment","my_map[word]++;","//we've","//for","curr","}","```","You","Hmm,","I","Because","Have","[Here's](http://ideone.com/St5txW)","@delores","However","However","Thanks","Did","Yea,","One","If","Usually","But","Thanks,","uses","by","maybe","currently","C++","have","Did","Instead","e.g.","C++","Seriously","Hey","*One","\u003cul\u003e\u003cli\u003e","\u003c/ul\u003e","\u003c/br\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e`bob::hey`","\u003cli\u003e`evaluate`","\u003c/li\u003e","\u003cb\u003eiff\u003c/b\u003e","\u003cli\u003e","`isType(const","\u003c/li\u003e","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003eBecause","\u003cli\u003eBecause","__Changes","\u003cul\u003e","\u003cli\u003eCode","\u003c/ul\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e`bob::hey`","\u003cli\u003e`evaluate`","\u003c/li\u003e","\u003cb\u003eiff\u003c/b\u003e","\u003cli\u003e","`isType(const","\u003c/li\u003e","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003eBecause","\u003cli\u003eBecause","Yes","__Changes","\u003cul\u003e\u003cli\u003eHandles","\u003cul\u003e\u003cli\u003e`line","__Procedure__","\u003col\u003e","\u003cli\u003e","\u003cli\u003e","\u003cli\u003eIf","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003eBecause","\u003cli\u003e","\u003c/ul\u003e","\u003c/br\u003e","@eula,","__Procedure__","\u003col\u003e","\u003cli\u003e","\u003cli\u003e","\u003cli\u003eIf","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003eBecause","\u003cli\u003e","\u003c/ul\u003e","\u003c/br\u003e","At","if(not","I","Basically","Question","int","Is","__Changes","\u003cul\u003e\u003cli\u003eLarge","\u003cul\u003e\u003cli\u003e.cpp","\u003cli\u003eThe","has","\u003cli\u003eBetter","\u003cli\u003e`regex_search`","\u003cli\u003eExpressions","\u003cli\u003eQuicker","__Procedure__","\u003col\u003e","\u003cli\u003e`bob::hey`","\u003cli\u003e`evaluate`","\u003cli\u003e","`isType(const","__Tradeoffs__","\u003cul\u003e","\u003cli\u003eBecause","\u003cli\u003eBecause","Hey","Moved","I","With","__Changes","\u003cul\u003e\u003cli\u003e","\u003cli\u003e`enum","\u003cul\u003e\u003cli\u003eI","\u003cli\u003eReformatted","\u003cul\u003e\u003cli\u003eCode","\u003cli\u003e`sentence`","\u003c/ul\u003e\u003c/li\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e`bob::hey`","\u003cli\u003e","`isType(const","__Tradeoffs__","\u003cul\u003e","\u003cli\u003eBecause","\u003cli\u003eBecause","\u003cli\u003eBecause","Thanks","I","What","Iostream","http://www.cplusplus.com/reference/cctype/isupper/","You","Changes","*","*","Question:","```cpp","vector\u003cint\u003e","int","if","cout","}","else{","cout","}","```","EDIT:","Changes","*","*","Hi","You","http://exercism.io/submissions/ccd69a4e96bf6990d6d487fc","Cheers!","I","The","This","PS.:","Take","Thank","I","I","First","```cpp","std::string","std::transform(","```","Second","```cpp","std::string","word.reserve(","std::transform(","```","Third","```cpp","std::string","std::transform(","```","The","```","Character","Words1:","Time:","Max","Words2:","Time:","Max","Words3:","Time:","Max","```","Ran","Turns","I","Hi","Peronally","I","Cheers!","True,","But","`Bob.h`","I","```cpp","if","found_upper","}","```","It's","But","I","I","Looks","Trade","The","Had","```cpp","if","output_map[c]","}","else","++output_map[c];","}","```","to","```","++output_map[c];","```","But","Thanks","Now","I","I","remove","Yes.","Ahh","is","just","and","How","the","__Changes","\u003cul\u003e","\u003cli\u003eNote\u003cul\u003e\u003cli\u003eDue","\u003c/li\u003e\u003cli\u003eCompletely","\u003cul\u003e\u003cli\u003eAfter","\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e","\u003cli\u003e","\u003cli\u003eThe","\u003cli\u003eEach","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003e","\u003cli\u003eBecause","\u003c/br\u003e","I","I","~Rob","Hi,","Good","I","Thanks","Hi","__Too","I'm","This","__Procedure__","\u003col\u003e\u003cli\u003e","\u003cli\u003e","\u003cli\u003eThe","\u003c/ol\u003e","Starting","Why","The","You","You","You","Prefixing","You","Pass","Boost","The","Your","You","Ah,","Is","Wonderful.","The","What's","Also,","return","I","This","While","I","The","My","In","This","If","There","I","I","This","is","distance","I","I","Nice!","Shall","\u003cul\u003e","\u003cli\u003eIn","\u003cli\u003eIf","I","Do","\u003c/br\u003e","__REDACTED__","Looks","I","\u003cul\u003e\u003cli\u003econsider","`int","s1.length()","To","`int","\u003c/li\u003e\u003c/ul\u003e","Use","I","If","const","What","Thanks","-","-","When","Or","static","for","I","@florida","Re","and","http://msdn.microsoft.com/en-us/library/k0t5wee3.aspx","I","I","I","```","$","$","$","Character","Words1:","Time:","Max","Words2:","Time:","Max","Words3:","Time:","Max","```","The","First","For","I","```using","using","```","I","Secondly","Why","Other","I","I","It","There","1.","2.","Rob","I","Is","Thinking","I","```cpp","bool","static","return","}","```","Declaring","If","__Changes","\u003c/hr\u003e","**Took","\u003cul\u003e\u003cli\u003eMade","\u003cli\u003eRemoved","\u003cli\u003eMade","\u003c/ul\u003e\u003cul\u003e","\u003cli\u003e`diff`","__Procedure__","\u003col\u003e\u003cli\u003e","\u003cli\u003e","\u003cli\u003eThe","\u003c/ol\u003e","My","But","My","For","So","*Edit*","When","```cpp","for(","if(","else","}","```","The","*Edit2*","Did","I","One","Are","Nice","I'm","Grr.","I","Just","I'm","I","I","Although","Very","How","Your","I","I","-","-","-","-","I'm","Interesting.","```","std::string","word.resize(std::distance(start,","std::transform(start,","```","For","I","Also","I","Recommendation:","You","I","wanted","Hi!","In","[](char","You","std::none_of(message.begin(),","Cheers!","Yeah,","I","Ok,","Is","At","I","I","Thanks","Regarding","the","The","What","If","Very","-","-","-","`trim()`","At","Subsequently,","const","Thanks","Thanks","Here","I","Thanks","Following","```","Words1:","Words2:","Words3:","Words4:","```","I'm","`resize`","They","So","PS:","Now,","Iteration","I","It","I","Frankly,","And","So","In","Nothing","-I","-In","Thank","I","About","Regarding","Changed","-","-","-","Used","I","You","Object","Anyway,","the","The","And","Oh","I","I","Good","I","I","I","I","The","Would've","The","Just","added","This","It's","Usage","I","```++wordMap[wordToAdd]```","if","Thanks","As","This","I","Pretty","The","A","__THIS","*The","__Note:__","I","One","\u003cul\u003e\u003cli\u003eMy","\u003c/ul\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e","\u003cli\u003e","\u003cli\u003eif","\u003cli\u003eThe","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003e","\u003cli\u003eBecause","\u003c/br\u003e","__Changes","\u003cul\u003e","\u003cli\u003e","\u003cli\u003eAn","\u003c/ul\u003e","\u003c/br\u003e","__Note:__","I","One","\u003cul\u003e\u003cli\u003eMy","\u003c/ul\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e","\u003cli\u003e","\u003cli\u003eif","\u003cli\u003eThe","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003e","\u003cli\u003eBecause","\u003c/br\u003e","i","Hey","In","Got","Cleaned","Shortened","I","I","Maybe","Moved","Modified","######","*","######","*","*","*","I","Thanks","I","Solution","Where","Finished","However,","Looks","As","Also","Just","Also","Also","You","If","The","Also","I","Since","Made","After","The","@dasia","I","If","@jabari","Sure...","I","I","Whoops!","@orpha","Also,","PS.","Decided","I'm","By","__Changes","\u003cul\u003e","\u003cli\u003eThe","\u003cli\u003e`fillDictionary()`","\u003cli\u003eTransforming","\u003cli\u003e`m_anagram`","\u003c/ul\u003e","\u003c/br\u003e","__Note:__","I","One","\u003cul\u003e\u003cli\u003eMy","\u003c/ul\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e","\u003cli\u003e","\u003cli\u003eif","\u003cli\u003eThe","\u003c/ol\u003e","__Tradeoffs__","\u003cul\u003e","\u003cli\u003e","\u003cli\u003eBecause","\u003c/br\u003e","You","@lonzo","Your","I","I","Funny,","my","sort()","the","compare","Just","Very","Changed","I","@domenick","O(n^2","there","http://en.wikipedia.org/wiki/Sorting_algorithm","and","Wow!","I","I","__I","Infact,","Thanks","TAOCP","*","*","*","and","The","I","The","Added","Returning","Moved","is_question","It","Declaring","This","Perhaps","I","You","```","if(","```","The","Doesn't","You","Only","Thanks","Hi.","Just","...","Hi.","Also","Hi.","Do","Remember","yako","Your","If","Yikes!","I","It","hello","I","I'll","I","a","__Changes","\u003cul\u003e","\u003cli\u003e`std::sort`","\u003c/ul\u003e","\u003c/br\u003e","__Procedure__","\u003col\u003e","\u003cli\u003e","\u003cli\u003e","\u003cli\u003eif","\u003cli\u003eThe","\u003c/ol\u003e","Went","I","hi","if","maybe","so","```","if(letter","++numSpaces;","}","//Counting","else","```","either?","hello","it","if","line","you","Hi","Thanks","Your","I've","I've","I've","I","Hi","The","(int_char","(int_char","and","I'm","What","I","Yes,","Used","...well","@calista,","@hazle,","It","1)","2)","Following","There","Comments","About","What","(What","What","@marianna,","1st","2nd","a.","b.","now,","O(len(word))","which","in","*","*","and","input","Tried","Rather","I","Now,","oh!,","i","but","I've","if","then","won't","in","(conv.back()","to","letter","Instead","Regex","There","I","```C++","if","difference++;","```","instead","Now","This","use","I","Sooo","I","Oh","Converted","I","Realized","This","I","It's","My","This","Line","Lines","Lines","This","The","Also,","This","The","Next,","Lastly,","This","@maida","Thanks","It's","Next,","Last,","The","It's","Also,","It","Code","The","This","Thank","While","Your","One","I","Originally","Feedback","Thank","I","For","Wow","I'm","One","No","Almost:","And","(Then,","cctype","Thanks","I","I'm","While","Also,","Good","I","I","Also,","The","@giovani","I'm","True","It'd","The","Nice","I","Nice","I'm","Similarly,","Let","Great","Thanks","I","I'm","If","As","But","In","One","Looking","Hello","Reading","One","I","That","I","Changed","Trade","-=-=-=-=-=-=-","-xpressive","-added","-used","Nice","I","This","I","The","What","Nice","I","My","After","After","Nice","For","Coming","Nice","For","This","I","Now","`checkPoke`","`checkYell`","`checkQuestion`","Again,","Nice!","This","It's","If","\u003e","@alfonzo,","I","In","Nice","*","*","@leanna","I","I","PS","In","Nice","I","However,","That","I","Calling","Testing","Good","Using","I","I","Changed","Because","@mireya","Using","Kept","The","Your","Using","Your","The","I","Hi,","I","I","Thank","-","-","Looking","You","for","{","char","//etc.","}","as","for","{","//etc.","}","you","if","as","if","and","if(","{","return","}","return","as","return","This","The","P.S:","http://help.exercism.io/getting-started-with-cpp.html","I","You","I","From","Nice","The","The","I","In","-","-","Converted","http://stackoverflow.com/questions/1434937/namespace-functions-versus-static-methods-on-a-class","This","I'm","Now","Very","I","I","Regular","I","Nevertheless,","This","When","The","I","Essentially","On","I","As","I","This","The","I","Another","I","The","Looks","Also,","@elmo","I","@elwyn","However","I","@vella-au","The","I","Logic","Thanks.","You're","In","Anyway,","This","I","If","You","```std::sort(root_word.begin(),","Maybe","Also,","New","After","I","I","For","```c++","BOOST_AUTO_TEST_CASE(count_everything_just_once)","{","const","const","REQUIRE_EQUAL_CONTAINERS(","}","BOOST_AUTO_TEST_CASE(handles_cramped_list)","{","const","const","REQUIRE_EQUAL_CONTAINERS(","}","BOOST_AUTO_TEST_CASE(with_apostrophes)","{","const","const","REQUIRE_EQUAL_CONTAINERS(","}","BOOST_AUTO_TEST_CASE(with_free_standing_apostrophes)","{","const","const","REQUIRE_EQUAL_CONTAINERS(","}","BOOST_AUTO_TEST_CASE(with_apostrophes_as_quotes)","{","const","const","REQUIRE_EQUAL_CONTAINERS(","}","```","@marianne","It","Yes,","There's","Hmm,","Interesting.","I","Nice","That","I","Would","to_lower","I'd","I","¿Por","Buen","I'm","I","The","Really","Updated","Could","There's","Nice","It","A","The","Also","As","http://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier","Decided","Nice","Not","My","1.","2.","For","The","The","I","The","Thanks","The","```c++","(!std::isalpha(*it))","```","Is","```c++","!std::islower(*it)","```","This","Was","I","(See","It","You","Just","It's","I","I","I","Using","This","The","I","I","Just","My","Nice","You","Rather","You","Also,","Consider","Also","My","####","Firstly,","Your","While","####","In","If","You","Finally,","Nice","You","Consider","Don't","I","Thought","I","I","I'm","Just","Maintained","The","I","This","This","The","Thanks!","Yes,","You","The","A","Nice","Good","I","This","I","Nice","I","For","While","Replaced","Agree","The","I'll","Thank","I","Positive:","Read","Thought","Kept","Nice","I'm","I","The","Not","Thanks!","I","Good","I","I","Here","http://www.cplusplus.com/reference/random/random_device/","That","You","Just","The","I","I'm","Updated","All","Unfortunately","```~/exercism/cpp/nucleotide-count/nucleotide_count_test.cpp:24:25:","'const","```","```~/exercism/cpp/nucleotide-count/nucleotide_count.h:15:30:","```","Altering","I","So","Fix","I've","Consider","I","Your","Consider","If","You","Why","Good","I","If","The","C++11","Use","When","Nice","Also,","Great","I've","This","I","Did","-","-","-","I","I","I","Thanks","Thanks","Thanks","Correct","I","Thanks","Looks","I","I","The","If","Finally,","I","Thanks","Made","Why","You","Initialise","@erick","I","You","Good","Calling","```string.find_first_not_of()```","Thanks.","So","The","Do","@meggie-au","I","Other","You've","As","Thanks.","I","##","Make","page","the","by","I","For","When","I","Thanks","You're","Thank","To","-","-","-","At","I'm","I","As","Thanks","I'm","On","Here","Also","What","```counter::counter(const",":","{","}```","Be","Considering","As","@nannie-mad","Added","I","Used","D'oh,","Nice","Is","I'm","On","Then","Nice","In","For","Yeah","Using","I","Thank","In","The","@kaelyn","Just","I","Your","In","In","In","My","Nice.","Hi","I","Thank","With","I","What","And","I","using:","windows7","vs2013","After","I","You","http://mirkokiefer.com/blog/2013/03/cmake-by-example/","try","Made","So","@kaya","I've","Tried","The","\"The","So","Now","I","Your","Also,","clear","pros:","easier","cons:","requires","iterates","trim","actually","has","I","It","Is","Since","Have","isSilence","Final","I","hasLetter","Since","string.back()","Good","```C++","if","```","That","```C++","return","```","Why","I","Thanks","Nice","oops,","I","So","I","I'm","The","A","`hey`","Relatedly,","Finally,","Also,","Worrying.","I","Multiply","Changed","Your","Reverse","I","It","There","The","If","I","I","I'm","This","Now,","As","Hey,","I","Your","You","The","@keanu","Will","I","I","About","You","I","Need","Apparently","No","1.","2.","You","Yeah,","`long`","Should","-","-","-","-","-","`1e9`","Again,","I","#if","line","std::valarray","Almost","Line","@vicente-slm","Should","Should","To","EDIT:I","Since","The","\"The","that","of","Ignoring","This","New","@richard-C","It's","Rather","Edit:","Recursively","`for","\u003cb\u003e\u003ch1\u003e","Trimmed","made","Would","Appreciate","I","I","Really,","Work","This","This","I","Appreciate","Spent","The","Added","Looks","Small","Are","Looks","Since","A","I","My","This","I","You","Interesting","Minor","Hi","I","I'm","Good","Updated","No","Looking","You","In","To","I","The","You're","Have","Interesting","My","Removed","This","Changes","-","-","Wanted","`main()`","In","In","Okay,","Right","`hey()`","Last","thank","In","Used","Looks","Only","In","I","-","-","-","-","Thanks","First","As","In","I","That","Lines","What","What","I","I","Once","I","const","isYelling","isQuestion","isNothing's","Another","\u003ch1\u003eIteration","This","Some","I","Appreciate","Points","Thanks","nice","I","oh","There","What's","I","I","N.B.:","```","sing(int","```","in","Complete","String","Looks","IMHO:","-","-","Code","Looks","Also","To","Why","I","Good","Passing","You","```for","//","cout","}","````","Note","Just","Bit","In","You're","I","I","Yes,","`all_of`returns","Your","Might","I've","```","if","return","}","if","return","}","...","return","```","I","Keeps","I","I","Also,","Nice!","I","Also,","Hi","Also,","Nice","Thank","Now","I","Looks","The","I","I","Hmmm.","Not","The","This","Added","I","how","Although","Take","Ah,","Modulus","you","Seeing","This","I","You","````c++","namespace","{","unsigned","{","//etc","}","unsigned","{","//you","}","}","````","While","```cpp","for","```","It","On","```cpp","transform(dna,","```","All","```cpp","template","void","std::transform(begin(c),","}","```","Pushing","You","```cpp","//","std::string","for","c","```","Also,","```cpp","//","auto","```","It's","i","There's","I","So","Thanks.","But","Could","Thanks","I","It","I","```","Running","/Users/koenlek/exercism/cpp/word-count/word_count_test.cpp:121:","Mismatch","Mismatch","Collections","/Users/koenlek/exercism/cpp/word-count/word_count_test.cpp:137:","Mismatch","Mismatch","Mismatch","Mismatch","Mismatch","Mismatch","Collections","***","make[2]:","make[1]:","make:","```","I","Made","Not","I","My","Good","EDIT:Never","thanks","Looks","Looks","No","Not","maybe","Looks","I'm","Once","Not","I","The","Hmmmm.","The","Also,","My","modified","You","One","Look","Also,","Look","Check","Oh,","Also,","It","Look","Good","Look","Look","You","Check","This","Boost","The","Hamming.h","I","Now","Made","Have","With","1.","```cpp","using","```","2.","```cpp","anagram(const","...","}","```","3.","4.","```cpp","SubjectMap","for","++map[c];","```","5.","```cpp","for","```","6.","You","I","https://github.com/exercism/xcpp/issues/22","I","I","-","-","Thanks,","I'm","I","namespace","class","public:","anagram(std::string","}","}","it's","For","Three","1.","```cpp","using","StringVec","```","2.","```cpp","for","```","3.","```cpp","for","...","if","continue;","sort(...);","if","matches.push_back(word)","}","```","That","-","This","Thanks","anyway,","-","-","-","-","-","You're","Any","There","Using","To","JAC42,","I","And","Did","Looks","you","std::transform(lowerCaseCandidate.begin(),","to","Hi,","This","Whew,","Thank","This","You","```","[]","return","}","```","with","Same","Apostrophes","\u003e","This","So","Please","```","//","std::make_pair(1,","//","{1,","```","Please","Salvaging","I","Thanks","1.","2.","3.","Also","I"]},{"Key":" I","Fragments":["added","think","have","felt","realized","really","found","am","can't","like","tend","rethought","think","notice","took","enjoyed","considered","also","thought","pared","could","was","have","benchmarked","broke","see","really","like","thought","like","like","didn't","guess","find","think","don't","think","also","had","like","followed","guess","don't","decomposed","just","like","always","don't","don't","like","have","can't","figured","figured","could","like","would","like","guess","actually","could","can't","think","used","like","like","tried","would","tried","studied","ended","test","check","tried","really","first","think","only","think","could","didn't","personally","just","guess","learned","am","like","obtained","come","think","like","maximize","like","used","tried","like","like","like","don't","also","put","even","think","initially","agree,","got","only","like","understand","feel","believe","like","decided","had","was","decided","feel","moved","think","think","think","guess","understand","saw","figured","don't","don't","agree","wrote","have","have","also","like","think","know","tried","looked","practically","don't","could","was","think","would","wasn't","was","think","have","can","only","have","applied","hope","assume","thought","have","don't","like","believe","like","treid","think","used","also","don't","personalty","think","chose","moved","am","feel","haven't","don't","only","would","think","wanted","have","decided","can't","made","didn't","changed","got","always","think","totally","like","liked","chose","think","love","decided","programmed","think","also","found","found","personally","thought","don't","like","took","second","am","let","found","would","kept","mostly","took","just","used","suggest","didn't","might","could","totally","am","like","wasn't","had","tried","would","like","like","originally","do","have","initially","plan","believe","originally","like","didn't","like","find","have","like","believe","have","chose","actually","would","am","have","realize","was","find","agree","have","wasn't","thought","considered","looked","like","checked","like","really","think","really","do","did","like","don’t","also","actually","figured","like","just","believe","decided","altered","had","also","was","reworked","think","will","like","wrote","don't","agree","like","really","think","used","went","also","could","was","would","think","like","usually","think","like","will","originally","then","took","agree","agree","think","just","would","made","don't","stored","have","can't","might","will","like","really","like","like","simplified","think","considered","choose","went","copied","didn't","also","see","agree","meant","just","reworked","also","would","would","know","think","started","wrote","like","don't","like","don't","have","thought","think","admit","assume","tried","used","feel","don't","had","suppose","got","typically","used","like","decided","also","like","am","like","considered","could","have","was","had","don't","noticed","could","did","should"]},{"Key":"I added","Fragments":["a","a","a","the","unit"]},{"Key":"added a","Fragments":["commented-out","small","few","little","comment"]},{"Key":"a commented-out","Fragments":["copy"]},{"Key":"commented-out copy","Fragments":["of"]},{"Key":"copy of","Fragments":["the","the","the","its","the","both","the","it","it"]},{"Key":"of the","Fragments":["header","splitting","problem,","string.","directive","\"cctype\"","input","approach","test","reference","primes?","conditions","isYell()","cpp.","header.","same","problem","problem","class","candidates","count","time,","method,","problem","decisions","domain","problem.","implementation","problem.","characters","problem.","problem.","namespace!","algorithms","Bob","test","previous","functions","```auto```","input","benefits","input?","tests,","strings.","code","message","word,","using","function","map;","program.","implementation","bob","code","input","input","file","bob","responses","string","STL","check","text","text","way","for-loop.","functions","postfix-variant","map","[standard](http://www.cplusplus.com/reference/map/map/operator%5B%5D/)","ways","C++","program,","string","string","alphabet","match.\u003c/li\u003e\u003c/ol\u003e","for","match.\u003c/li\u003e\u003c/ol\u003e","times","`string`","operation","unnamed","check","time*.","time*,","word","key","`std::min`","operation","copy-construction","project","overhead","boost","ages","items.","i-th","characters","other.","two","testcases","string,","anonymous","stl","entire","any_of,","function,","code.","isAnagram()","reference","same","same","`copy_string_to_lower()`","vector\u003cchar\u003e","iterator.","code.","library","for","loop,","letters.\u003c/li\u003e","same","language","\"if\"","same","phraseType","switch","solutions","readme,","conditionals","first","second.","length","input","length","song,","situation","boost","global","word_count","work","start","isDNA","strings","code","file.","other","`bool`","loop,","verse.","program.","dispositions","logic","enum.","remark.","single-iteration","xpressive","standard","counts,","standard","std::regex","test","algorithm","functions:","strings","trial","primary),","features","C++","original","character","whole","character","class.","lowerCase","\"int","loop","```verse()```","'magic'","song","time","cases","explicit","test","above","for-loop","loops.","loop?","names","robot","characters","random","boost","list","boost","regex","mod","repetition","song.","input","tests,","for","`compute`","mismatched","functions.","bob","submission.","original","string","cases","```counter```","rest","code.","includes/helper","sieve","functions","very","song","hey","snippets","DB","roster","other","code,","domain_error","Python","program,","three","equation","expected","string","points","test","boost","for","string","random","same","object","type","tests,","problem","code","constructor,","container","program","solution","contract","word.","`make_pair`","original"]},{"Key":"the header","Fragments":["for","`\u003ccctype\u003e`","or","guards.","and","file,","files","file","file","file.","file.","file","with","file","files."]},{"Key":"header for","Fragments":["reference.","the"]},{"Key":" Looks","Fragments":["almost","great,","pretty","good.","good","weird","great!","very","good.","like","like","good.","pretty","good.","good,","good!","good","good:","good!","really","good","good.","Great!"]},{"Key":"Looks almost","Fragments":["good."]},{"Key":"almost good.","Fragments":["The"]},{"Key":"good. The","Fragments":["only"]},{"Key":"The only","Fragments":["last","function","place","change","downside","real","two","way","function","difference","characters","thing","nitpick","thing","trick","part"]},{"Key":"only last","Fragments":["problem"]},{"Key":"last problem","Fragments":["is"]},{"Key":"problem is","Fragments":["that","a","nice","bigger","in"]},{"Key":"is that","Fragments":["`is_upper`","you","it","I","I","```#include","c++11","you","you're","you're","`isGibberish`","it","it","`m_word`","it","using","the","if","some","you","it","a","if","you","I","I","this","you","your","function","you","it","C++","you've","the","removing"]},{"Key":"that `is_upper`","Fragments":["can"]},{"Key":"`is_upper` can","Fragments":["be","be"]},{"Key":"can be","Fragments":["confused","easily","implemented","made","`return","`return","`return","made","expensive","contained","called","made.","written","dangerous","found","written","a","short","used.","optimized","used","simplified","reused","performed.","done","replaced","found","checked","removed.","solved","fixed.","considered","distracting","unmaintainable)","tricky.","avoided.","computed","known","considerably","added","no","added","a","part","used"]},{"Key":"be confused","Fragments":["with"]},{"Key":"confused with","Fragments":["`isupper`","`isupper`"]},{"Key":"with `isupper`","Fragments":["in","in"]},{"Key":"`isupper` in","Fragments":["`cctype`","`cctype`"]},{"Key":"I think","Fragments":["that","that","it","it","is","I","the","if","this","splitting","that","the","regex","keeping","it","it","it","the","this","it","that","there","it","you","more","the","declaring","it","you","that","of","this","you","the","a","a","certain","using","size_t","regular","that","you","you","your","I'll","that","it","that","GNU's","this","the","in","that","it","that","however,","I","`\u003ccctype\u003e`","that","that","the","the","all","the","my","works","it's","it","it","it's","you're","is","if","I'd","my","something","your","you","you","it","it","your","this","a","I","the","`((std::isalpha(*it)","`!std::islower(*it)`","with","you","the","you","streams","the","you","that","the","you","this","I've","there's","it","what","ran","it","I","it","it","detecting","makes","only","our","it's","that's","that's","you","this","you","it","the","your","using","you","it","I"]},{"Key":"think that","Fragments":["`std::regex`","using","is","there","is","the","makes","you","the","people","cleans","boost","for","might","in","is","the"]},{"Key":"that `std::regex`","Fragments":["is"]},{"Key":"`std::regex` is","Fragments":["an"]},{"Key":"is an","Fragments":["overkill","address).","indirect","enum","overkill","iterator","alpha","empty","anagram;","anagram","anagram;","anagram","anagram;","anagram","anagram;","anagram","anagram.","interesting","issue","efficient,","alphabetic","interesting","important"]},{"Key":"an overkill","Fragments":["for","here."]},{"Key":"overkill for","Fragments":["this","simple"]},{"Key":"for this","Fragments":["job.","code.","function","case,","task.","task.","task","task.","exercise","exercise.","problem,","particular","example)","exercise.","exercise","variable.","kind","one,","first","enum.","exercise.","two","problem.","one","function","simple","example","application.","solution.","simple","check,","simple","simple","exercise.","case,","test","problem,","task.","issue","method"]},{"Key":"this job.","Fragments":["Regex"]},{"Key":"job. Regex","Fragments":["probably"]},{"Key":"Regex probably","Fragments":["should"]},{"Key":"probably should","Fragments":["be","not)","have","remove"]},{"Key":"should be","Fragments":["used","hidden","passed","continue,","able","declared","simplified.","slightly",":","replaced","a","private.","treated","referencing","avoided","avoided","receiving","avoided","able","considered","plural,","unreachable.","possible","an","insensitive.","going","comfortable","replaced","boost/algorithm/string.hpp.","passed","used","checked","careful","accessing","passed","done","punctuation","able","private","accessed","able","part"]},{"Key":"be used","Fragments":["for","as","alternatively,","in","to","carefully","to","(like"]},{"Key":"used for","Fragments":["complex","a"]},{"Key":"for complex","Fragments":["things,"]},{"Key":"complex things,","Fragments":["but"]},{"Key":"things, but","Fragments":["not","you're"]},{"Key":"but not","Fragments":["this.","both?","massively.","visible","least:","necessarily","```yelling```.","with","least,"]},{"Key":"not this.","Fragments":["It"]},{"Key":"this. It","Fragments":["makes"]},{"Key":"It makes","Fragments":["the","the","its","the","for"]},{"Key":"makes the","Fragments":["code","code","code","implementation.","implementation.","list","code","code","rest","code","final","design","implementation","process","code"]},{"Key":"the code","Fragments":["less","more","look","that","clearer.","so","clearer.","quite","easier","cleaner.","itself","simpler","a","much","quite","is","in","here","more","at","a","is","more","with","in","more","shorter.","flow","into","neater","better.","comment","because","to","tighter","up","and","now","returns","looks","self","display","as","clearer","a","is","clear","evolved","too","for","to","readability","for","as","does","clearer.","in","and","is","now,","slightly","more","harder","which","more","more/less","you","more","we","more"]},{"Key":"code less","Fragments":["readable,"]},{"Key":"less readable,","Fragments":["at"]},{"Key":"readable, at","Fragments":["least"]},{"Key":"at least","Fragments":["for","``\u003ccctype\u003e``.","to","80%","one","one","at","the","easier","in","one","one","be","2","64bit","32bit","16bit","in","one","one"]},{"Key":"least for","Fragments":["me."]},{"Key":" Additionally,","Fragments":["I","some"]},{"Key":"Additionally, I","Fragments":["think"]},{"Key":"that using","Fragments":["some","regular","a","sort()","multiple","anything"]},{"Key":"using some","Fragments":["helper","of","of","of","standard","OOP","OOP"]},{"Key":"some helper","Fragments":["functions","functions."]},{"Key":"helper functions","Fragments":["with","should","here","(or","or","you","each","are","as","don't","in","that","don't","have","as"]},{"Key":"functions with","Fragments":["descriptive","`isYell`","the"]},{"Key":"with descriptive","Fragments":["names"]},{"Key":"descriptive names","Fragments":["should"]},{"Key":"names should","Fragments":["make"]},{"Key":"should make","Fragments":["the"]},{"Key":"make the","Fragments":["code","code","categories","code","case","line","rest","line","rest","code","return","changes.","decisions.","code","code","default","regex","code","code","code","code","last","code","code","const","correct","string","string","```verses()```","code","compilation","code","program","code","text","code","code","code","code"]},{"Key":"code more","Fragments":["readable.","readable","complex","readable.","readable","concise.","readable","readable.","expressive).","expressive.","expressive.","expressive.","expressive.","generic","readable.","clear."]},{"Key":" After","Fragments":["reading","viewing","taking","some","some","looking","some","looking"]},{"Key":"After reading","Fragments":["my"]},{"Key":"reading my","Fragments":["own"]},{"Key":"my own","Fragments":["code,","projects.","submission","isupper(),","trim.","version"]},{"Key":"own code,","Fragments":["I"]},{"Key":"code, I","Fragments":["am","decided","made"]},{"Key":"I am","Fragments":["confused","wondering","iterating","quite","not","a","not","a","doing","not","always","currently","brand","supposed","copy-constructing","missing","wondering:","not","using","pretty","confused","using","not","overly","using","also","not","missing","not","not","aware","used","generally","not","having","sure","now","not","most","using","missing","curious"]},{"Key":"am confused","Fragments":["that","by"]},{"Key":"confused that","Fragments":["why"]},{"Key":"that why","Fragments":["does"]},{"Key":"why does","Fragments":["this"]},{"Key":"does this","Fragments":["even"]},{"Key":"this even","Fragments":["compile.","need"]},{"Key":" The","Fragments":["functions","`isUpperCasePresent`","header","helper","good:","bad:","predicate","loop","way","algorithm","only","yell_or_silence","has_only_digits","transform","conversion","isSilence","issue","library","first","code","first","`\u0026`","way","name","overall","next","entries","message","results","Boost","parens","using","STL","way","result","difference","new","way","biggest","best","check","other","definition","testing","code","function","code","last","isDNA","`using","instructions","`while`","main","thing","use","recusive","way","testing","comparison","basic","processing","second","reason","song","recursion","first","next","rest","indentation","iterator","use","formatting","biggest","in","aim","trade","way","next","only","maximum","end","function","code","last","spec","modulus","test","only","static","boost","deque","older"]},{"Key":"The functions","Fragments":["`all_of`,"]},{"Key":"functions `all_of`,","Fragments":["`none_of`"]},{"Key":"`all_of`, `none_of`","Fragments":["and"]},{"Key":"`none_of` and","Fragments":["`any_of`"]},{"Key":"and `any_of`","Fragments":["are"]},{"Key":"`any_of` are","Fragments":["in"]},{"Key":"are in","Fragments":["`namespace","`bob_test.cpp`","the","standard","a","an"]},{"Key":"in `namespace","Fragments":["std`."]},{"Key":"`namespace std`.","Fragments":["I"]},{"Key":"std`. I","Fragments":["didn't"]},{"Key":"I didn't","Fragments":["do","realize","expect","find","know","have","know","realize","understand","quite","know","need","want","know","think","know","know","feel","know","think","think","think","have","use","spend","see","need","even","think","even","really","realize","define","think","think","find","know","know","even","think","even"]},{"Key":"didn't do","Fragments":["`using"]},{"Key":"do `using","Fragments":["namespace"]},{"Key":"`using namespace","Fragments":["std`","std;`","std`","std`","std`.","std`","std`","std`","std`)","std`"]},{"Key":"namespace std`","Fragments":["but","because","or","can","is","is","here."]},{"Key":"std` but","Fragments":["just"]},{"Key":"but just","Fragments":["`using"]},{"Key":"just `using","Fragments":["std::string`."]},{"Key":" How","Fragments":["did","to","about"]},{"Key":"How did","Fragments":["the"]},{"Key":"did the","Fragments":["namespace","bare","extra"]},{"Key":"the namespace","Fragments":["look-up","correctly,","but","`bob`.","or","anagram."]},{"Key":"namespace look-up","Fragments":["find"]},{"Key":"look-up find","Fragments":["those"]},{"Key":"find those","Fragments":["functions?"]},{"Key":"those functions?","Fragments":["Am"]},{"Key":"functions? Am","Fragments":["I"]},{"Key":"Am I","Fragments":["using"]},{"Key":"I using","Fragments":["the"]},{"Key":"using the","Fragments":["`using`","C","Boost","switch","using","old","namespace","regex","heavy-handed","`'\\0'`","\u003calgorithm\u003e","struct","build","boost","specialized","imcrementor","\"else","else","functions","`switch`","private","compiler","`upper`","std::string.empty()","booleans","[]operator","regex","new","post-increment","double","new","CMake,","`min`","inline","standard","standard","boost","original"]},{"Key":"the `using`","Fragments":["statement","declarations","declarations","declaration","declaration"]},{"Key":"`using` statement","Fragments":["correctly?"]},{"Key":"I have","Fragments":["to","no","a","now","iostream","to","a","are","to","to","created","decided","3","3","3","3","a","tried","to","not","been","tried","since","a","a","no","a","Robert","uploaded","seen","incorporated","to","attempted","writen","a","a","pointers.","seen","always","come","a","not","the","read","never","to","the","the","found","is","considered","a","mixed","ever","to","reverted"]},{"Key":"have to","Fragments":["say,","do","do","test","write","comprehend","solve","loop","type","write","change","use","be","implement","be","change","concede","keep","modify","change","admit","integrate","write","change","build","do","keep","write","improve","put","loop","do","refer","admit,","check","remember","look","call","generate","make","combine","be","say","use","think","keep","resort","deal","be","change","be","throw","write","use","disagree","think"]},{"Key":"to say,","Fragments":["the"]},{"Key":"say, the","Fragments":["readme"]},{"Key":"the readme","Fragments":["files","and","included","should"]},{"Key":"readme files","Fragments":["for"]},{"Key":"files for","Fragments":["these","a"]},{"Key":"for these","Fragments":["exercises","exercises.","two","operations"]},{"Key":"these exercises","Fragments":["become","as","between"]},{"Key":"exercises become","Fragments":["worse."]},{"Key":"become worse.","Fragments":["Having"]},{"Key":"worse. Having","Fragments":["to"]},{"Key":"Having to","Fragments":["read"]},{"Key":"to read","Fragments":["the","http://help.exercism.io/getting-started-with-cpp.html","private","and","the","to","in","that","if","than","since","if","with","and","in"]},{"Key":"read the","Fragments":["unit","Kernighan","string","first","read-me","[getting","code"]},{"Key":"the unit","Fragments":["tests","tests","tests,","tests","tests","tests,","tests","test"]},{"Key":"unit tests","Fragments":["to","would","require","which","are","that","have"]},{"Key":"tests to","Fragments":["figure","pass"]},{"Key":"to figure","Fragments":["out","out","out","it","out","out","out"]},{"Key":"figure out","Fragments":["what","what","where","the","why,","how","how","how"]},{"Key":"out what","Fragments":["you","`islower`","the"]},{"Key":"what you","Fragments":["have","mean","are","want","wrote.","think!","think!","all","think","mean","are","pointed","are","mean","mean."]},{"Key":"you have","Fragments":["to","to","to","authors","to","'using","pre-processed","kept","this","a","trouble","to","are","to","a","```word=","quite","your","declared.","some","here","opportunities","duplicate","left","as","already","read","a","chosen","isQuestion","any","done","something","previously","`main()`,","the"]},{"Key":"to do","Fragments":["is","for","that","with","with","to","--","this","that","this,","basic","this","it","the","this","it,","it","declare","the","an","an","the","2","as","is","this","without","character","some","a","a","the","it","that,","the","it","it","with","it.","this.","that.","a","that,","is","it","bad","this,"]},{"Key":"do is","Fragments":["kind","check","take","use","check"]},{"Key":"is kind","Fragments":["of","of","of","of"]},{"Key":"kind of","Fragments":["stupid.","approach.","inflexible.","cool,","abusing","text`","a","cheating…","expensive.","sucks","thing.","weird,","borrowing","task.","things","criticism.","gets","conversion.","crappy","names","problem.","style","meaning."]},{"Key":" You","Fragments":["should","might","need","could","might","should","don't","should","first","could","should","could","rely","can","could","can","could","also","shouldn't","should","can","are","may","forgot","made","could","could","may","can","can","should","forgot","could","don't","should","can","could","could","could","could","can","test","could","can","can","are","might","only","could","could","still","don't","have","are","could","don't","could","should","need","may","can"]},{"Key":"You should","Fragments":["put","also","consider","put","also","check","avoid","have","look","be","not","just","prefer","use","look"]},{"Key":"should put","Fragments":["this","\"const"]},{"Key":"put this","Fragments":["in","in"]},{"Key":"this in","Fragments":["a","a","any","other","the"]},{"Key":"in a","Fragments":["namespace","header","header","header.","string:","string;","translation","separate","namespace,","class.","class","way","namespace","bob","class","readable","negative","hurry","default","given","header","couple","separate","const","macro","lot","helper","class","different","header","few","map","(possibly","real-world","way","nice","readable","readable","C++","readable","dictionary","sense","few","situation","single","debug","dictionary","different","while","future","c++","variable","constructor","case","random","pre-initialized","reference","negative","separate","flag.","git","string","few","round","string,","larger","bob","position","position","position","position","position","position","position","position","null","gregorian","number","bit.","register"]},{"Key":"a namespace","Fragments":["called","or","is","or","instead","in","called","as","instead.","thanks","but","for","\"bob\"","and","work,","and","rather","makes","to","containing","hamming","which","because"]},{"Key":"namespace called","Fragments":["`bob`","bob,"]},{"Key":"called `bob`","Fragments":["not"]},{"Key":"`bob` not","Fragments":["a"]},{"Key":"not a","Fragments":["class,","good","shout,","fan","letter.","modifier","yell","really","good","programmer","great","string","question","big","space"]},{"Key":"a class,","Fragments":["and","or","then","after","instead","and","when","so","but","but"]},{"Key":"class, and","Fragments":["put","defining","to","all"]},{"Key":"and put","Fragments":["those"]},{"Key":"put those","Fragments":["private"]},{"Key":"those private","Fragments":["functions","members"]},{"Key":"private functions","Fragments":["into"]},{"Key":"functions into","Fragments":["an"]},{"Key":"into an","Fragments":["anonymous","Intro","int","anonymous"]},{"Key":"an anonymous","Fragments":["namespace","namespace,","namespace","namespace?","namespace","namespace","namespace.","namespace.","namespace","namespace","`namespace`.","namespace","namespace.","namespace","namespace","name","namespace."]},{"Key":"anonymous namespace","Fragments":["instead.","in","is","in","wouldn't","(where","is","since","to","as","would","in"]},{"Key":"namespace instead.","Fragments":["That"]},{"Key":"instead. That","Fragments":["is","way"]},{"Key":"That is","Fragments":["how"]},{"Key":"is how","Fragments":["namespaces","a","a","a","a","the"]},{"Key":"how namespaces","Fragments":["are"]},{"Key":"namespaces are","Fragments":["used","the","Egyptian","not"]},{"Key":"You might","Fragments":["want","like","get","like","want","also","also","also","use","also","include","also","also","just"]},{"Key":"might want","Fragments":["to","to","to","to","to","to","to","to","to"]},{"Key":"want to","Fragments":["read","check","add","expose","check","prefix","do.","learn","loop","copy","prefer","check","present","use","omit","find","account","make","fail","restrict","save","change","avoid","learn","rename","consider","state","keep","call","rework","reposition","keep","make","copy","know","think","do","setup","\u003ci\u003ethrow\u003c/i\u003e","use","use","use","use","use","use","rethink","modify","have"]},{"Key":"You need","Fragments":["files","to","to","to"]},{"Key":"need files","Fragments":["named"]},{"Key":"files named","Fragments":["`bob.h`"]},{"Key":"named `bob.h`","Fragments":["and"]},{"Key":"`bob.h` and","Fragments":["`bob.cpp`."]},{"Key":"and `bob.cpp`.","Fragments":["The"]},{"Key":"`bob.cpp`. The","Fragments":["tests"]},{"Key":"The tests","Fragments":["are","were","don't"]},{"Key":"tests are","Fragments":["in","written","passing.","named","really","defined"]},{"Key":" There","Fragments":["are","are","is","is","probably","are","are","are","are","is","are","is","are","wasn't","is","is"]},{"Key":"There are","Fragments":["quite","a","no","also","a","certainly","two","three","some","plenty","a","a"]},{"Key":"are quite","Fragments":["some"]},{"Key":"quite some","Fragments":["flaws","in","room"]},{"Key":"some flaws","Fragments":["here,"]},{"Key":"flaws here,","Fragments":["ordered"]},{"Key":"here, ordered","Fragments":["roughly"]},{"Key":"ordered roughly","Fragments":["by"]},{"Key":"roughly by","Fragments":["priority:"]},{"Key":" -","Fragments":["`is_quiet`","`is_question`","`is_upper`","`using","`contains_alpha`","Maybe","Your","`isQuestion`","`isUpperCasePresent`","`isLowerCasePresent`","`isShouting`","`isQuestion`","`constexpr`","It's","is_shouting","The","std::string","indexing","If","To","increment","or","You","When","Include","You","It's","I've","I","I've","Each","I","Lines","Line","I'm","It","Moved","```#include```ed","changed","used","`#include","`what.back()`","your","I","Removing","Allowing","I","I","Continued","Made","there","trim","is_upper","The","The","The","Need","Loop?","`long","`long`","`int`","removed","fixed","It","try","Wrapping","you","A","...","is","is","Used","The","Used","Added","Considered","Iteratively"]},{"Key":"- `is_quiet`","Fragments":["should"]},{"Key":"`is_quiet` should","Fragments":["return"]},{"Key":"should return","Fragments":["a","false."]},{"Key":"return a","Fragments":["`bool`.","bool.","const.","copy","number)","map.","local","local","local","vector","string","```std::string```","copy.","value","value","`const","boolean"]},{"Key":"a `bool`.","Fragments":["As"]},{"Key":"`bool`. As","Fragments":["it"]},{"Key":"As it","Fragments":["stands,"]},{"Key":"it stands,","Fragments":["I"]},{"Key":"stands, I","Fragments":["don't"]},{"Key":"I don't","Fragments":["quite","want","feel","need","know","know,","think","think","think","think","see","have","feel","have","know","think","know","really","exactly","believe","think","think","see","specify","really","want","really","think","believe","particularly","have","think","really","understand","have","know,","really","think","know","like","think","have","really","know","have","think","really","really","believe","see","think","understand","like","think","see","see","believe","see","see","see","see","see","see","see","know","think","know"]},{"Key":"don't quite","Fragments":["understand"]},{"Key":"quite understand","Fragments":["what","it"]},{"Key":"understand what","Fragments":["it","exactly","they","he"]},{"Key":"what it","Fragments":["is","does.","could","is","does.","does"]},{"Key":"it is","Fragments":["supposed","not","in","not","the","side-effect","indeed","an","still","not","a","better","much","not","compatible","a","the","a","suppose","valid","a","considered","considered","shorter","deleted.","clearer.","not","probablty","better","because","optimized","found","an","an","the","an","an","the","that","empty.\u003c/li\u003e","an","an","the","huge","only","undefined","an","an","the","either","O(len(word)).","a","undefined","simply","as","only","stateful.","doing.","invariant.","a","possible","a","more","simple","something","a","implicit","more","not","important","better","nothing,","too","not.","more","called."]},{"Key":"is supposed","Fragments":["to","to","to","to","to","to"]},{"Key":"supposed to","Fragments":["do.","output","be","ignore","ignore","be","respond","do","iterate","make","just","be","keep","be","throw","throw","throw","throw","throw"]},{"Key":"to do.","Fragments":["`string(\u0026text[first],","When"]},{"Key":"do. `string(\u0026text[first],","Fragments":["\u0026text[last]);`"]},{"Key":"`string(\u0026text[first], \u0026text[last]);`","Fragments":["copies"]},{"Key":"\u0026text[last]);` copies","Fragments":["a"]},{"Key":"copies a","Fragments":["string"]},{"Key":"a string","Fragments":["starting","with","containing","containing","containing","and","as","into","to","in","object","array,","like","contains","with","of","with","into","of","past","iterator","or","containing","as","is","literal.","constructor","containing","return","that","just"]},{"Key":"string starting","Fragments":["from"]},{"Key":"starting from","Fragments":["`\u0026text[first]`","the"]},{"Key":"from `\u0026text[first]`","Fragments":["with"]},{"Key":"`\u0026text[first]` with","Fragments":["length"]},{"Key":"with length","Fragments":["of"]},{"Key":"length of","Fragments":["`\u0026text[last]`","the","less","the","the","the","zero,","4","strings.","the"]},{"Key":"of `\u0026text[last]`","Fragments":["(which"]},{"Key":"`\u0026text[last]` (which","Fragments":["is"]},{"Key":"(which is","Fragments":["an","expressed","O(n*log2(n)))","O(n^2","what"]},{"Key":"- `is_question`","Fragments":["is"]},{"Key":"`is_question` is","Fragments":["undefined"]},{"Key":"is undefined","Fragments":["behavior","behavior","behavior.","whether","behaviour"]},{"Key":"undefined behavior","Fragments":["when","when","or","when","if","if","to","if","on"]},{"Key":"behavior when","Fragments":["`text`","`statement`","query"]},{"Key":"when `text`","Fragments":["is"]},{"Key":"`text` is","Fragments":["empty."]},{"Key":"- `is_upper`","Fragments":["can"]},{"Key":"be easily","Fragments":["confused","readable.","rewritten"]},{"Key":"easily confused","Fragments":["with"]},{"Key":"- `using","Fragments":["namespace"]},{"Key":"namespace std;`","Fragments":["can"]},{"Key":"std;` can","Fragments":["cause"]},{"Key":"can cause","Fragments":["some","a"]},{"Key":"cause some","Fragments":["name"]},{"Key":"some name","Fragments":["clashes,"]},{"Key":"name clashes,","Fragments":["especially"]},{"Key":"clashes, especially","Fragments":["when"]},{"Key":"especially when","Fragments":["you"]},{"Key":"when you","Fragments":["use","find","don't","need","exit","are","have","update,","pass","look","add","call","need","could"]},{"Key":"you use","Fragments":["it","to_lower_copy","a","the","to","a","a","it","preincrementation","bool","erase/remove","call","a","`const","`const"]},{"Key":"use it","Fragments":["in","in","at","in","in","in","instead","anywhere"]},{"Key":"it in","Fragments":["a","another","the","live","for","case","the","this","a","the","headers","a","the","my","a","a","iteration","every","the"]},{"Key":"a header","Fragments":["file.","file","due","file.","file.","file.","file."]},{"Key":"- `contains_alpha`","Fragments":["can"]},{"Key":"`contains_alpha` can","Fragments":["be"]},{"Key":"be implemented","Fragments":["as","with"]},{"Key":"implemented as","Fragments":["a","a"]},{"Key":"as a","Fragments":["one-liner:","function","series","collection","comment","copy,","language","trivial","const","const","quick","shout.","bonus","const","grep","break.","\"best","singleton,","predicate","library.","class","rule","constant","separator.","const?","return","maximum.","single","closed","regex,","simplification","quizzical","reference","reference","const","boolean","MACRO","hard","compile","separate","question.","bit","reference.","way","header","reference","side-effect"]},{"Key":"a one-liner:","Fragments":["`any_of(begin(text),end(text),isalpha)`"]},{"Key":"- Maybe","Fragments":["put"]},{"Key":"Maybe put","Fragments":["in"]},{"Key":"put in","Fragments":["some","the","the","a","a","a","explicit"]},{"Key":"in some","Fragments":["`assert`s?","of","respects.","cases","other","string,"]},{"Key":"- Your","Fragments":["helper"]},{"Key":"Your helper","Fragments":["functions","functions"]},{"Key":"functions should","Fragments":["be","probably"]},{"Key":"be hidden","Fragments":["in"]},{"Key":"hidden in","Fragments":["an"]},{"Key":"in an","Fragments":["anonymous","implementation","inner","exclamation","anonymous","anonymous","anonymous","exclamation","onlinecompiler","array;","early","exclamation","assignment","else"]},{"Key":"anonymous namespace,","Fragments":["so","so"]},{"Key":"namespace, so","Fragments":["it","the","I"]},{"Key":"so it","Fragments":["would","is","makes","seems","probably","might","took","might","outputs"]},{"Key":"it would","Fragments":["be","result","make","be","make","make","be","have","be","work","be","be","be","perfect","be","also","not","be","never","be","be","be","still","be","help","be","be","be","be","be","be","be","be"]},{"Key":"would be","Fragments":["impossible","a","to","simpler","clearer","clearer","required,","the","considered","discarded","a","a","tokenized","something","better","useful","the","normal","greatly","better.....","a","a","significantly","cheaper","more","constant","faster.","faster","in","to","clearer.","much","to","checked","relatively","relatively","relatively","relatively","better.","a","to","something","to","caught","good","dangerous?","a","zero-initialized,","good","good.","higher","an","something","to","that","more","considered","happy","more","nice","better","better","defined","pretty","potentially","interested","a","overkill.","ok","neat","welcome.","to","the","a","sufficient.","better","nice","helpful.","helpful.","the","able","better","nice.","nice.","1","to","to","true)","false).","to","better","in","easier","to","a","required?","better","more","more","better"]},{"Key":"be impossible","Fragments":["to"]},{"Key":"impossible to","Fragments":["access"]},{"Key":"to access","Fragments":["it","isYell,"]},{"Key":"access it","Fragments":["from"]},{"Key":"it from","Fragments":["outside."]},{"Key":" This","Fragments":["code","will","is","is","exercise","is","seems","is","version","code","would","is","makes","makes","seemed","is","is","is","was","is","looks","is","would","is","passes","solution","solution","is","should","would","is","code","code","code","is","is","looks","seems","is","code","code","version","feels","code","looks","would","code","would","is","is","seemed","is","fails","is","handles","is","seemed","is","is","exercise","was","is","is","and","was"]},{"Key":"This code","Fragments":["has","does","would","is","is","uses","looks","is","is","will","is"]},{"Key":"code has","Fragments":["some"]},{"Key":"has some","Fragments":["subtle","merits.","\"shortcomings\":"]},{"Key":"some subtle","Fragments":["potential"]},{"Key":"subtle potential","Fragments":["bugs"]},{"Key":"potential bugs","Fragments":["here:"]},{"Key":"- `isQuestion`","Fragments":["will","can"]},{"Key":"`isQuestion` will","Fragments":["have"]},{"Key":"will have","Fragments":["undefined","comments.","to","access","to","to"]},{"Key":"have undefined","Fragments":["behavior"]},{"Key":"when `statement`","Fragments":["is"]},{"Key":"`statement` is","Fragments":["empty."]},{"Key":"is empty.","Fragments":["This","So","So"]},{"Key":"empty. This","Fragments":["happens"]},{"Key":"This happens","Fragments":["because"]},{"Key":"happens because","Fragments":["the"]},{"Key":"because the","Fragments":["`isSilence`","question","\u0026","unit","third","exact","regex","call","subject","trial","first","`if`","_the"]},{"Key":"the `isSilence`","Fragments":["check"]},{"Key":"`isSilence` check","Fragments":["happens"]},{"Key":"check happens","Fragments":["after"]},{"Key":"happens after","Fragments":["`isQuestion`"]},{"Key":"- `isUpperCasePresent`","Fragments":["is"]},{"Key":"`isUpperCasePresent` is","Fragments":["actually"]},{"Key":"is actually","Fragments":["`isAlphaPresent`","the","doing?","being","supported.","being","__slower__"]},{"Key":"Additionally, some","Fragments":["functions"]},{"Key":"some functions","Fragments":["can"]},{"Key":"functions can","Fragments":["be"]},{"Key":"be made","Fragments":["slightly","the","more","much","and"]},{"Key":"made slightly","Fragments":["more"]},{"Key":"slightly more","Fragments":["concise:","work","readable"]},{"Key":"- `isLowerCasePresent`","Fragments":["can"]},{"Key":"`isLowerCasePresent` can","Fragments":["be"]},{"Key":"be `return","Fragments":["std::any_of(statement.begin(),","isUpperCasePresent(statement)","statement.back()=='?'`"]},{"Key":"`return std::any_of(statement.begin(),","Fragments":["statement.end(),"]},{"Key":"std::any_of(statement.begin(), statement.end(),","Fragments":["islower);`"]},{"Key":"- `isShouting`","Fragments":["can"]},{"Key":"`isShouting` can","Fragments":["be"]},{"Key":"`return isUpperCasePresent(statement)","Fragments":["\u0026\u0026"]},{"Key":"isUpperCasePresent(statement) \u0026\u0026","Fragments":["!isLowerCasePresent(statement)`"]},{"Key":"`isQuestion` can","Fragments":["be"]},{"Key":"I felt","Fragments":["I","compelled","influenced","was"]},{"Key":"felt I","Fragments":["could"]},{"Key":"I could","Fragments":["have","directly","probably","probably","pass","use","be","iterate","put","not","use","not","use","have","just","have","potentially","potentially","change","probably","make","potentially","get","come","figure","write","change","be","help!","be","go","iterate","have","go","reject","have","make","just","use","probably","have","see","have","have","have","have","have","add","pass","optimize","have"]},{"Key":"could have","Fragments":["improved","used","problem","used","moved","used","used","used","a","been","used","used","messed","returned","moved","been","done","used","used","imported","changed","passed","passed","passed","passed","iterated","easily"]},{"Key":"have improved","Fragments":["the"]},{"Key":"improved the","Fragments":["shouting"]},{"Key":"the shouting","Fragments":["check,","case","test"]},{"Key":"shouting check,","Fragments":["but"]},{"Key":"check, but","Fragments":["ran","it's"]},{"Key":"but ran","Fragments":["out"]},{"Key":"ran out","Fragments":["of"]},{"Key":"out of","Fragments":["time.","me","the","`is_quiet`.","there","it","your","habit,","the","range\"","range\"","global","\"programming\"","your","sync","habit","date.","a","using","scope","the"]},{"Key":" Thank","Fragments":["you","you","you","you","you","you","you","you","you","you","you","you","you!","you"]},{"Key":"Thank you","Fragments":["for","for","for","for","for","for","fractalic.","for","for","for","for","for","mikedal.","so","for","for"]},{"Key":"you for","Fragments":["pointing","the","all","the","having","your","your","your","the","the","your","your","the","your","the","your","the"]},{"Key":"for pointing","Fragments":["this","this"]},{"Key":"pointing this","Fragments":["out.","out."]},{"Key":"this out.","Fragments":["This","Therefore,","Look"]},{"Key":"out. This","Fragments":["was"]},{"Key":"This was","Fragments":["helpful.","a","actually","an","pointed"]},{"Key":"was helpful.","Fragments":["Definitely"]},{"Key":"helpful. Definitely","Fragments":["more"]},{"Key":"Definitely more","Fragments":["concise."]},{"Key":" For","Fragments":["the","example,","example","the","checking","more","the","me","the","your","directly","extra","this","nitpicks,","me","me","the"]},{"Key":"For the","Fragments":["first","yelling","rest,","`back_inserter`","all","sake","input,","input,"]},{"Key":"the first","Fragments":["nitpick,","time","place","'a'","test!","character","passed","place.","or","iteration.","and","iteration:","place,","inserted","loop,","if","stack","time","and","alpha","bullet","iteration,","iteration","time","time","sequence","time","character","argument.","expression","character","default","thing","test","one..","character.","element","submission.","string","function.","time","letter","letter","letter."]},{"Key":"first nitpick,","Fragments":["the"]},{"Key":"nitpick, the","Fragments":["`'\\0'`"]},{"Key":"the `'\\0'`","Fragments":["represents","is"]},{"Key":"`'\\0'` represents","Fragments":["an"]},{"Key":"represents an","Fragments":["empty"]},{"Key":"an empty","Fragments":["string,","string","constructor","string","string.","string.","string,","string","string.","string.","string.","string,","string","member","string","file","string.","string,","string.","string?","string"]},{"Key":"empty string,","Fragments":["not","so","because","this"]},{"Key":"string, not","Fragments":["an"]},{"Key":"not an","Fragments":["int.","anagram","upper.","expert","expert","expert,"]},{"Key":"an int.","Fragments":["But","Other"]},{"Key":"int. But","Fragments":["I"]},{"Key":"But I","Fragments":["agree","don't","agree,","think","would","like","like","tested","would","wonder","have","can","suppose","do","still","didn't","did't","don't"]},{"Key":"I agree","Fragments":["with","that","that","with","that","that","with","that","it","that","that","that","about","with","is"]},{"Key":"agree with","Fragments":["the","you","you","you","using","your","that.","@dave.","you"]},{"Key":"with the","Fragments":["rest.","static","fact","default","strings","original","corrections","`find_first_of`","c++","gcc","basic","original","sorted","implementation","syntax","implementation","`returnValue[wordBuffer]++;`","template","module","problem.","string","string","`if","boost","vector","`using`","appropriate","`boost:regex`","arguments","longest","NULL","use","other.","standard.","string","number","arguments","new","new","serial","implementation.","slashes;","rest","update.","code.","isNumber","`isNumber`","size_t,","{}","triple","enclosing","structure","code.","usage"]},{"Key":"the rest.","Fragments":["Can"]},{"Key":"rest. Can","Fragments":["you"]},{"Key":"Can you","Fragments":["clarify","break","think","think","think","think","think","think","think","give","infer"]},{"Key":"you clarify","Fragments":["what"]},{"Key":"clarify what","Fragments":["you"]},{"Key":"you mean","Fragments":["with","in","about","when","by"]},{"Key":"mean with","Fragments":["`find_if`?"]},{"Key":"The `isUpperCasePresent`","Fragments":["function"]},{"Key":"`isUpperCasePresent` function","Fragments":["can"]},{"Key":"function can","Fragments":["be","be","be","return"]},{"Key":"made the","Fragments":["same","control","'hey'","changes","actual","same","program","same"]},{"Key":"the same","Fragments":["way","length","words.","as","header.","methods","semantic","executable","as","effect","semantic","expression","for","as","thing;","value","candidate","candidate","as","if","as","for","code","holds","string","number","way","logic","as","by","design","NameGenerator","logic.","object","length","number","performance-wise.","job","thing,","characters.","length","letters.\u003c/li\u003e","length","letters.\u003c/li\u003e","thing","length","letters.\u003c/li\u003e","length","characters.","length","amount","letters","as","and","elements","problem.","mapping","dictionary.","as","length).","thing","thing","thing.","but","as","exercise","decision","name","results","(in","mistake.","thing.","length,","length","size.","in","way","as"]},{"Key":"same way","Fragments":["as","as","you"]},{"Key":"way as","Fragments":["`isLowerCasePresent`.","you"]},{"Key":"as `isLowerCasePresent`.","Fragments":["That's"]},{"Key":"`isLowerCasePresent`. That's","Fragments":["probably"]},{"Key":"That's probably","Fragments":["the","where"]},{"Key":"probably the","Fragments":["last","fastest"]},{"Key":"the last","Fragments":["thing","character","char","character","character","statement","one)","unit","second.","\"else","condition","character?","character","character","character","iteration.","test,","test.","two","test,","test","submit:","character","character","character","character","test:"]},{"Key":"last thing","Fragments":["you","is"]},{"Key":"thing you","Fragments":["have","might","should","have","did"]},{"Key":"do for","Fragments":["this","me."]},{"Key":"I realized","Fragments":["that","this","I"]},{"Key":"realized that","Fragments":["rather","is","I"]},{"Key":"that rather","Fragments":["than"]},{"Key":"rather than","Fragments":["splitting","copying","by","explicit","the","a","the","checking","using","make","to","a","63","performance,","throw","`std::runtime_error`.","dropping","implementing","`O(n","allow","needing","write","from","perform","on","boost::format","punctuation","`auto","```const","streams","just","integers.","-1","throw","recompute","ignoring","simply","a","just","a","by"]},{"Key":"than splitting","Fragments":["the"]},{"Key":"splitting the","Fragments":["string"]},{"Key":"the string","Fragments":["into","(even","by","is","once","explicitly","in","in","told","is","into","is","must","as","contains","lenght","argumentsby","has","possibly","given","to","(copying","and","passed","first","than","once.","more","(though","letter","in","is","\"*\"","instead","like","library.","once,","each","(e.g.","has","and","and","you","to","until","successfully.","successfully.","is","is","indexing","was","that","(the","through","has","unnecessarily","using","to","is","programmatically","one","once","is","for","you","is","will","functions","and","to","and","first","length","lower","without","`const`","to","is","with","just","beforehand.","class,","as","is","expresses.","variable","is","class","class","to","but","to","and","to","isn't","should","if","length","yourself,","to","in","length","is","is","functions","only","and","into","should","every","multiple","was","is","is","only","has","and","\"?4\"","copy","make","for","and","passed"]},{"Key":"string into","Fragments":["a","lower","functions","words,","a"]},{"Key":"into a","Fragments":["vector,","predicate","functor.","predicate","separate","separate","std::for_each()","namespace","single","string","for-element","2-step","space","`vector`.\u003c/li\u003e","`memset`","map","vector","linear","linear","couple","single","separate","helper","new","running"]},{"Key":"a vector,","Fragments":["and"]},{"Key":"vector, and","Fragments":["the"]},{"Key":"and the","Fragments":["iterating","brevity","tests","map","input","tests","required","last","compiler","`accumulate`.","amount","word","word","evaluation","stackoverflow-originated","boolean","`at`","boolean","same","memcopy?","yell","specifics","accepted","would-be","overall","whole","function","number","functions","candidate","final","count()","return","problem","isupper()","```for```s,","last","convention","overheard","header"]},{"Key":"the iterating","Fragments":["over","type."]},{"Key":"iterating over","Fragments":["the","the","the","a","indices","two","all","the","the","it","the"]},{"Key":"over the","Fragments":["vector,","results","string.","string","elements","results","input","characters","string.","string","string","input","question","string","place","message","array","code.","input","input).","other.","whole","input","top,","C-string","string","top","passed","string,"]},{"Key":"the vector,","Fragments":["I"]},{"Key":"vector, I","Fragments":["could"]},{"Key":"could directly","Fragments":["iterate","implement"]},{"Key":"directly iterate","Fragments":["over"]},{"Key":"iterate over","Fragments":["the","the","every","and","the","the","the","the"]},{"Key":"the results","Fragments":["of","of","you"]},{"Key":"results of","Fragments":["the","calling"]},{"Key":"the splitting","Fragments":["regex."]},{"Key":" Have","Fragments":["you","you","you","you","you","you","some","you","you"]},{"Key":"Have you","Fragments":["considered","considered","considered","actually","taken","noticed","noticed","included","considered","considered"]},{"Key":"you considered","Fragments":["using","std::is_permutation()?","std::is_permutation?","using","iterators","using","using"]},{"Key":"considered using","Fragments":["boost::tokenizer?","regular","standard","a","the","c++11"]},{"Key":" While","Fragments":["it","I","this","I","this","using","I","`for_each`"]},{"Key":"While it","Fragments":["is","doesn't"]},{"Key":"is not","Fragments":["required","necessary.","empty.","permitted","defined","an","so","whitespace,","important","a","desirable)","done","in","needed","possible","empty","\"ill-formed\";","a","too","a","really","the","the","yet","yet","needed.","in","alpha-numeric","really","safe.","safe","a","an","pretty,","important,","guaranteed","detected","shy","empty,","a","accurate.","implemented","conveniently","the","enough","going","the","repeated.","marked","a","a","properly","stolen,","a","immediately","yelling.","defined","my","a","as","what"]},{"Key":"not required","Fragments":["by"]},{"Key":"required by","Fragments":["the"]},{"Key":"by the","Fragments":["tests,","test","way.","C++11","tests","way:","next","test","boost","shortest","shortest","algorithm","tests","regex","word","constructor.","```words()```","exercises.","colliding","\"auto\""]},{"Key":"the tests,","Fragments":["this","however","albeit","you","and","you"]},{"Key":"tests, this","Fragments":["version"]},{"Key":"this version","Fragments":["should","here","is","I","I"]},{"Key":"version should","Fragments":["support"]},{"Key":"should support","Fragments":["string"]},{"Key":"support string","Fragments":["as"]},{"Key":"string as","Fragments":["well","I've","a","it","a"]},{"Key":"as well","Fragments":["as","not","as","as","as","as","as","as","as","as","as","as","to","as","when","that","as","as","as","as","have","have"]},{"Key":"well as","Fragments":["u16string","making","the","range","uppercase,","references","const","the","shortening","incrementing","for","source","inherently","you","removing","the"]},{"Key":"as u16string","Fragments":["and"]},{"Key":"u16string and","Fragments":["u32string."]},{"Key":" Thanks!","Fragments":["Good"]},{"Key":"Thanks! Good","Fragments":["point."]},{"Key":" Mostly","Fragments":["agreed."]},{"Key":"Mostly agreed.","Fragments":["But"]},{"Key":"agreed. But","Fragments":["don't"]},{"Key":"But don't","Fragments":["you"]},{"Key":"don't you","Fragments":["feel","look","take"]},{"Key":"you feel","Fragments":["uneasy","like"]},{"Key":"feel uneasy","Fragments":["hard-coding"]},{"Key":"uneasy hard-coding","Fragments":["strings"]},{"Key":"hard-coding strings","Fragments":["as"]},{"Key":"strings as","Fragments":["return","const","global","const","constants","much","reference"]},{"Key":"as return","Fragments":["values?"]},{"Key":"return values?","Fragments":["But"]},{"Key":"values? But","Fragments":["OK,"]},{"Key":"But OK,","Fragments":["that's"]},{"Key":"OK, that's","Fragments":["not"]},{"Key":"that's not","Fragments":["such","the"]},{"Key":"not such","Fragments":["a"]},{"Key":"such a","Fragments":["big","degree","regex","text,","case,","string","case,"]},{"Key":"a big","Fragments":["deal","deal,"]},{"Key":"big deal","Fragments":["since"]},{"Key":"deal since","Fragments":["by"]},{"Key":"since by","Fragments":["adding"]},{"Key":"by adding","Fragments":["a","the","a"]},{"Key":"adding a","Fragments":["enum","constructor/destructor","bunch","`Disposition`,","corresponding","const"]},{"Key":"a enum","Fragments":["and"]},{"Key":"enum and","Fragments":["a","the","return","a"]},{"Key":"and a","Fragments":["map","struct","binary","single","check","exclamation","teensy","bigger","function","new","recurrent",".cpp,","new","namespace","while","loop","lambda","use","'getType'"]},{"Key":"a map","Fragments":["I","character","return","return","and","for","like","to","to"]},{"Key":"map I","Fragments":["just"]},{"Key":"I just","Fragments":["hard-coded","re-stumbled","tried","noticed","wanted","called","used","have","put","see","checked","don't","tried","declared","followed","looked","focused","need","wasn't","threw","kinda","went","installed","discovered).","thought","move","opened","type","returned","submitted","realized","double","ran","did","figured","used","haven't"]},{"Key":"just hard-coded","Fragments":["it"]},{"Key":"hard-coded it","Fragments":["in"]},{"Key":"in another","Fragments":["place...","unnamed"]},{"Key":"I really","Fragments":["would","like","love","like","like","like","like","like","will","like","like","like","liked","like","need","like","needed","appreciate","like"]},{"Key":"really would","Fragments":["like"]},{"Key":"would like","Fragments":["to","to","to","to","another"]},{"Key":"like to","Fragments":["use","use","know","look","factor","know","know","separate","get","know","investigate","fail","know","use","come"]},{"Key":"to use","Fragments":["`boost::erase_all(sth,","here.","regular","on","a","switch","pointer","that","the","split","this","#pragma","\"C\"","the","the","C++'s","a","string","two","`g++","a","variables","is*","back_inserter,","a","the","the","`regex_replace`","`fold`","only","foreach","static","regex","new","new","a","`bool`","names","the","them.","the","some","```std::array\u003csong_verse\u003e```.","```std::string::operator+()```","only","these","the","the","the","the","snprintf","the","any","range","the","them.","pointers","references","it","as","it.","preprocessor","long","```protected```","a","a","range","libraries","both","OOP","iterators","a","an","the","iterators","iterators","C++","std::list","-\u003e"]},{"Key":"use `boost::erase_all(sth,","Fragments":["\""]},{"Key":"`boost::erase_all(sth, \"","Fragments":["\").empty()`"]},{"Key":"\" \").empty()`","Fragments":["but"]},{"Key":"\").empty()` but","Fragments":["`erase_all`"]},{"Key":"but `erase_all`","Fragments":["modify"]},{"Key":"`erase_all` modify","Fragments":["its"]},{"Key":"modify its","Fragments":["argument","argument;","inputs."]},{"Key":"its argument","Fragments":["in"]},{"Key":"argument in","Fragments":["place"]},{"Key":"in place","Fragments":["and","of","modification"]},{"Key":"place and","Fragments":["return"]},{"Key":"and return","Fragments":["`void`","the","a","the","it.","as","a","which","a","0","0.","when"]},{"Key":"return `void`","Fragments":["=("]},{"Key":"I found","Fragments":["it","this","out","out","a","it","this","this","this","myself","useful","that","that","one."]},{"Key":"found it","Fragments":["most","matched","makes","to"]},{"Key":"it most","Fragments":["interesting"]},{"Key":"most interesting","Fragments":["your"]},{"Key":"interesting your","Fragments":["concerns"]},{"Key":"your concerns","Fragments":["about"]},{"Key":"concerns about","Fragments":["talking"]},{"Key":"about talking","Fragments":["more"]},{"Key":"talking more","Fragments":["in","in"]},{"Key":"more in","Fragments":["the","the","Knuth's"]},{"Key":"in the","Fragments":["domain","next","map.","`\u003clocale\u003e`","production","string,","header,","header?","implementation","standard","character","same","string","range","argument","`cpp`.","loop","loop","loop","initial",".cpp.","source","source","domain","sieve.","algorithm","static_cast","constructor,","constructor","problem","method","beginning","beginning","string.","habit,","message.","C++98,","string","process)","candidate","vector?","primes","first","implementation","main","long","sequence.","string","input","output","ass.","words.","size","candidate","hey","latter","map.","end","string","string","function?","function?","first","header","container,","guard.","next","first","second","first","middle","same","if-statement.","header?","problem","test","test","code,","words;","C++","first","code","test","source","main","line.","header","code,","right","comparison","`boost`","next","loop.","end.","book","latest","design.","original","would-be","function","correct","twoBeers","text,","text.","hamming","new","text.","string","prompt","string","new","value,","next","next","middle","string","string.","future","case","standard","case","function","sense","code.","end,","simple","more","simple","case","std::map","first","test","target","for","master","trial","result","constructor","```verse()```","```sing()```","C++","shout","correct","loop","loop","exercise","new","next","previous","body.","header","cpp","constructor.","header","string","string","code,","documentation","README:","middle.","minus()","class.","standard","worst","list.","problem","test","other","2nd","constructor","parentheses","test","if","header","header.","header:","loop","middle","Bob","STL","plus","tests.","next","boost","squares,","song","initialization","map.","works","namespace","range-for","loop,","following","test","boost","boost","middle","same","following","middle"]},{"Key":"the domain","Fragments":["of","of","of","of"]},{"Key":"domain of","Fragments":["the","the","the","discovering"]},{"Key":"the problem,","Fragments":["delegating"]},{"Key":"problem, delegating","Fragments":["low-levelness"]},{"Key":"delegating low-levelness","Fragments":["to"]},{"Key":"low-levelness to","Fragments":["helpers."]},{"Key":"to helpers.","Fragments":["That's"]},{"Key":"helpers. That's","Fragments":["a"]},{"Key":"That's a","Fragments":["very","great"]},{"Key":"a very","Fragments":["good","succinct","good","advanced","minor","good","elaborate","clear","tight","common"]},{"Key":"very good","Fragments":["point,","idea.","that","excuse","for","way"]},{"Key":"good point,","Fragments":["thank"]},{"Key":"point, thank","Fragments":["you!"]},{"Key":" A","Fragments":["few","switch","couple","question","couple","single","B","good","strings","few","few","'switch'","couple","very"]},{"Key":"A few","Fragments":["things","small","minor","general","things"]},{"Key":"few things","Fragments":["come","to"]},{"Key":"things come","Fragments":["to","to"]},{"Key":"come to","Fragments":["mind:","lean","mind"]},{"Key":" *","Fragments":["In","Do","Range-based","Oh,","`bob::hey()`","Bob's","While","For","Emptiness","We","Yells","instead","good","c-style","using","You","What","You","The","changed","move","The","changed","if","no","`currentWorld`","favor","it","you","the","sort()","is_permutation","It","I"]},{"Key":"* In","Fragments":["C++,"]},{"Key":"In C++,","Fragments":["a","the"]},{"Key":"C++, a","Fragments":["class"]},{"Key":"a class","Fragments":["is","also","as","declaration.","at","instead","seems","is","is","so","within","to","are","for","would","with","is","is","is","instance,","for","anagram","would"]},{"Key":"class is","Fragments":["per","designed","decidedly","named","to","unnecessary","used,","the","probably"]},{"Key":"is per","Fragments":["default","default"]},{"Key":"per default","Fragments":["private,","public."]},{"Key":"default private,","Fragments":["and"]},{"Key":"private, and","Fragments":["a"]},{"Key":"a struct","Fragments":["is"]},{"Key":"struct is","Fragments":["per"]},{"Key":"default public.","Fragments":["So"]},{"Key":"public. So","Fragments":["your"]},{"Key":"So your","Fragments":["`private:`","header"]},{"Key":"your `private:`","Fragments":["is"]},{"Key":"`private:` is","Fragments":["redundant."]},{"Key":"* Do","Fragments":["you"]},{"Key":"Do you","Fragments":["know","think","think","think","the","agree?","agree?","agree?","mean","have","really"]},{"Key":"you know","Fragments":["about","you","you","that","-","that","an","that"]},{"Key":"know about","Fragments":["boost::to_lower_copy?","std::isspace(...)","std::all_of,","islower","this","the","the","the","isalpha.","anonymous","splitting"]},{"Key":"* Range-based","Fragments":["for-loops"]},{"Key":"Range-based for-loops","Fragments":["are"]},{"Key":"for-loops are","Fragments":["a"]},{"Key":"are a","Fragments":["blessing","lot","couple","very","couple","few","few","bad","(string,","lot","few","number","bit","number"]},{"Key":"a blessing","Fragments":["in"]},{"Key":"blessing in","Fragments":["C++11,"]},{"Key":"in C++11,","Fragments":["use"]},{"Key":"C++11, use","Fragments":["them"]},{"Key":"use them","Fragments":["to","is","especially","and","as"]},{"Key":"them to","Fragments":["avoid","get","other","other","the","have.","get","something","upper","mark"]},{"Key":"to avoid","Fragments":["excessive","copying","\"using","a","`using","casting","costly","\"magic","potential","that","copying","your","undefined","namespace","the","using","using","`str.erase`,","behind-the-scenes","copying.","a","creating","undefined","unnecessary","side"]},{"Key":"avoid excessive","Fragments":["typing."]},{"Key":"* Oh,","Fragments":["and"]},{"Key":"Oh, and","Fragments":["have","by","you"]},{"Key":"and have","Fragments":["you","very","a","some","the","it","changed","tests"]},{"Key":"have you","Fragments":["considered","forgotten","considered"]},{"Key":" If","Fragments":["I","I","you","query.size()","anyone","you'd","you","you","Bob's","anyone","I","you","you","there","you","I","we","we","you're","you","you","you","it","you"]},{"Key":"If I","Fragments":["replace","include","understand","could","can,","had","change","wanted","understood","were","pass"]},{"Key":"I replace","Fragments":["the"]},{"Key":"replace the","Fragments":["map","string","body"]},{"Key":"the map","Fragments":["with","and","to","data","are","if","is","is","could","structure.","correctly.","with","or","[]"]},{"Key":"map with","Fragments":["a","at()."]},{"Key":"with a","Fragments":["plain","question","range","for-loop,","non-const","const","custom","default","negative","non-alphanumeric","question","question","question","clear,","boolean","twist:","namespace,","static","clear","single,","negated","\"single","regexp","regex","solution","second","more","single","question","helper","couple","match_reslt","grain","readme","range-based","static","compute"]},{"Key":"a plain","Fragments":["old"]},{"Key":"plain old","Fragments":["array"]},{"Key":"old array","Fragments":["of"]},{"Key":"array of","Fragments":["pairs,","any","pairs"]},{"Key":"of pairs,","Fragments":["the"]},{"Key":"pairs, the","Fragments":["executable"]},{"Key":"the executable","Fragments":["shrinks"]},{"Key":"executable shrinks","Fragments":["quite"]},{"Key":"shrinks quite","Fragments":["some"]},{"Key":"some in","Fragments":["size."]},{"Key":" However,","Fragments":["it","there","is_permutation","the","we","it","you","it","I","right","I'd"]},{"Key":"However, it","Fragments":["would","still","seems"]},{"Key":"would result","Fragments":["in"]},{"Key":"result in","Fragments":["broken","a","a"]},{"Key":"in broken","Fragments":["code"]},{"Key":"broken code","Fragments":["if"]},{"Key":"code if","Fragments":["anyone","they"]},{"Key":"if anyone","Fragments":["ever","told"]},{"Key":"anyone ever","Fragments":["changes"]},{"Key":"ever changes","Fragments":["the"]},{"Key":"changes the","Fragments":["table"]},{"Key":"the table","Fragments":["and"]},{"Key":"table and","Fragments":["forgets"]},{"Key":"and forgets","Fragments":["to"]},{"Key":"forgets to","Fragments":["keep","cover"]},{"Key":"to keep","Fragments":["the","this","this","this","track","track","the","the","in","the","them","function","track","the","a","this","commenting","them.","`bob::hey`","it","it","that"]},{"Key":"keep the","Fragments":["sorting","design","code","number","number","math","functions"]},{"Key":"the sorting","Fragments":["order.","up"]},{"Key":"am wondering","Fragments":["if"]},{"Key":"wondering if","Fragments":["there","this","\u003e=","it","you're"]},{"Key":"if there","Fragments":["is","is","are","are","is","is","is","are","are","is"]},{"Key":"there is","Fragments":["a","no","padding","a","a","the","already","a","no","not","whitespace","a","little","an","a","bound","a","no","nothing","no","only","no","no","no","some","no","a","always","a","an","ambiguity","no","no","some","no","some","trailing","also","only","no","no","to","no","a","always"]},{"Key":"is a","Fragments":["compile-time","header","[link](http://en.cppreference.com/w/cpp/string/byte/isspace)","lot","little","clearer","nice","scoped","namespace","strange","shout","majority","yell\"","bit","char*,","static","namespace.","sequence","very","good","quick","pretty","question.","separate","problem","class","good","question).","pretty","tricky","function","question","question.","bit","universal","good","question,","much","bit","clever","classical","pitty","rather","header","question,","lot","far","tokenizer","redundancy).","submition","_minor_","`string`","different","large","different","large","better","bit","relatively","start,","different","large","bit","nonsense","good","_linear_","great","bit","really","capital","little","good","little","little","good","layout","pretty","better","little","powerful","container","string,","reasonably","very","very","good","nice","good","small","known","mental","'?'","question.","link","link","bit","form","really","yell,","local","completely","huge","question","'!'","pointless","reference","more","good","bit","little","nice","bit","definitive","recent"]},{"Key":"a compile-time","Fragments":["sorted"]},{"Key":"compile-time sorted","Fragments":["map"]},{"Key":"sorted map","Fragments":["for"]},{"Key":"map for","Fragments":["C++,","the"]},{"Key":"for C++,","Fragments":["which"]},{"Key":"C++, which","Fragments":["is"]},{"Key":"which is","Fragments":["apparently","not","also","more","fairly","a","0","rather","good;","IMO","important","very","an","potentially","there","a","simple","still","mostly","better...","a","more","a","no","why","why","evaluated","unnecessary","why","when","much","passed"]},{"Key":"is apparently","Fragments":["what"]},{"Key":"apparently what","Fragments":["I'd"]},{"Key":"what I'd","Fragments":["actually"]},{"Key":"I'd actually","Fragments":["like"]},{"Key":"actually like","Fragments":["to"]},{"Key":"for the","Fragments":["feedback.","iterating","function","job.","interface","other","`isEmpty`","corrections.","advice!","implementation,","string","various","testcase.","exact","nitpick,","order,","existence","quiet","feedback.","`respond()`","arguments","auto","result","complicated","beginning","beginning","hamming","C","advice!","tips,","pass","start","tips,","return","corresponding","corresponding","feedback!","second","`boost::tokenizer`.","inspiration","character","for","minimum","version","hints","tip!","tip","optimized","`if`s","tip","first","nitpick,","`int`.","next","\"silence\"","nit!__","feedback,","\"==","alphanumeric","suggestion.","cases","extra","last","beginning","sake","feedback","tips.","comparison.","'NULL'","structure","master","test","feedback.","simplest","if","feedback.","entire","second","function","transformation.","local","regex","tips,","feedback.","feedback,","comments.","to_rna()","feedback","feedback!","inline","suggestion,","suggestion.","call","feedback.","job.","tip","```islower```","last","feedback!","compliments!","preprocessor","suggestion.","ch","feedback!","suggestions!","arg","newline","nits.","question","distance,","feedback.","Grains","feedback!","future."]},{"Key":"the feedback.","Fragments":["Going","I","There's","I","I"]},{"Key":"feedback. Going","Fragments":["to"]},{"Key":"Going to","Fragments":["admit"]},{"Key":"to admit","Fragments":["feeling","though,"]},{"Key":"admit feeling","Fragments":["pretty"]},{"Key":"feeling pretty","Fragments":["dumb,"]},{"Key":"pretty dumb,","Fragments":["but"]},{"Key":"dumb, but","Fragments":["I"]},{"Key":"but I","Fragments":["didn't","need","put","can't","don't","didn't","think","don't","love","did","can","don't","still","think","have","didn't","had","really","found","couldn't","think","think","think","thought","don't","don't","would","ended","ran","do","didn't","think","am","just","haven't","have","do","do","guess","tried","couldn't","think","don't","suppose","would","prefer","had","wanted","think","get","can","think","really","would","kept","wonder","think","think","don't","never","would","found","suspect","spotted","can","don't","prefer","would","am","can't","don't"]},{"Key":"didn't realize","Fragments":["that","that","I","that"]},{"Key":"realize that","Fragments":["would","`\u003cstring\u003e`","a","tokenizer's"]},{"Key":"that would","Fragments":["work.","work","be","allow","mean","help","be","throw","mean","handle","invoke","be","be","be","be","have","severely"]},{"Key":"would work.","Fragments":["Great"]},{"Key":"work. Great","Fragments":["point."]},{"Key":"Great point.","Fragments":["Will"]},{"Key":"point. Will","Fragments":["definitely"]},{"Key":"Will definitely","Fragments":["make"]},{"Key":"definitely make","Fragments":["that","sense"]},{"Key":"make that","Fragments":["change"]},{"Key":"that change","Fragments":["in"]},{"Key":"change in","Fragments":["the","the","the","the"]},{"Key":"the next","Fragments":["version.","one.","person.","word","iteration.","iteration.","iteration","stage","iteration.","iteration.","iteration.","test","iteration","line"]},{"Key":" Got","Fragments":["the","rid"]},{"Key":"Got the","Fragments":["ctype/imbue"]},{"Key":"the ctype/imbue","Fragments":["idea"]},{"Key":"ctype/imbue idea","Fragments":["from"]},{"Key":"idea from","Fragments":["stackoverflow;"]},{"Key":"from stackoverflow;","Fragments":["thought"]},{"Key":"stackoverflow; thought","Fragments":["it"]},{"Key":"thought it","Fragments":["was","was","kept","would","would"]},{"Key":"it was","Fragments":["pretty","luck","familiar","dumb","supposed","supposed","an","an","being","empty","alphanumerics,","fun","a","(to","a","any","short.","because","easy","pretty","a"]},{"Key":"was pretty","Fragments":["cute","straightforward","straightforward."]},{"Key":"pretty cute","Fragments":["but"]},{"Key":"cute but","Fragments":["can't"]},{"Key":"but can't","Fragments":["take","find"]},{"Key":"can't take","Fragments":["credit"]},{"Key":"take credit","Fragments":["for"]},{"Key":"credit for","Fragments":["it."]},{"Key":" Integrated","Fragments":["suggestion"]},{"Key":"Integrated suggestion","Fragments":["from"]},{"Key":"suggestion from","Fragments":["previous"]},{"Key":"from previous","Fragments":["round"]},{"Key":"previous round","Fragments":["to"]},{"Key":"round to","Fragments":["leverage"]},{"Key":"to leverage","Fragments":["default-value"]},{"Key":"leverage default-value","Fragments":["construction"]},{"Key":"default-value construction","Fragments":["in"]},{"Key":"construction in","Fragments":["the"]},{"Key":"You could","Fragments":["check","have","potentially","check","use","potentially","also","transform","probably","boost","possibly","boost","check","change","make","just","use","have","move","eliminate","break","check","even","use","use","remove","also","use","optimize","use","use","replace","just","rewrite"]},{"Key":"could check","Fragments":["for","for","if","for","that"]},{"Key":"check for","Fragments":["spaces","yelling","spaces","empty","\"yelling\".","a","all","spaces","a","a","a","un-flushed","its","tabs,","`ispunct()`","the","empty","anagram","size","each","alpha","null","empty","zero","equality;","any","any","the","any","random"]},{"Key":"for spaces","Fragments":["after","at","at","and"]},{"Key":"spaces after","Fragments":["the","the","the"]},{"Key":"after the","Fragments":["'?'","string","question","algorithm","question","?.","for","'?'","Bob","loop","```if```s","?.","`?`"]},{"Key":"the '?'","Fragments":["at","as"]},{"Key":"'?' at","Fragments":["the"]},{"Key":"at the","Fragments":["end","character","top","same","signatures","end.","same","definition","end","end","input,","last","end","end?","end","top.","functions","time.","top","expense","very","test","song","moment.","top,","beginning","beginning","beginning","multiline","last","problem","top","end","problem.","start","end","source","beginning.","last","other","begining","top","hamming_test.cpp","other","same","subtle","time","code","code.","onset.","end","test","end","test","test","test","test","test","test"]},{"Key":"the end","Fragments":["of","before","would","then","of","might","of","of","of","of","of","the","of","iterator,"]},{"Key":"end of","Fragments":["the","the","alpha-numerical","words","alpha-numerical","\"longword\"","words.","said","this,","the","every","the","either","a","it,"]},{"Key":"the string.","Fragments":["Otherwise,","Why","Change","Finally","For","Why"]},{"Key":"string. Otherwise,","Fragments":["looks"]},{"Key":"Otherwise, looks","Fragments":["fine."]},{"Key":" What","Fragments":["I","about","happens","happens","do","happens","if","comes","platform","do","is","do","I","are","I","was","if","if"]},{"Key":"What I","Fragments":["like","mean","think"]},{"Key":"I like","Fragments":["about","how","your","that","your","template","the","that","that","that","that","the","how","how","the","the","that","the","that","how","the","that","the","the","the","that.","the","your","the","it.","the","the","the","your","your","how","your","the","that","that","the","that","that","the","that","the","that","your","how","the","the","the","how","the","how","reading","that","your","the","your","to","your","that","the","replies","that","that","how","that","that","how","the","to","how","your","the","the","how"]},{"Key":"like about","Fragments":["your"]},{"Key":"about your","Fragments":["solution","private","way?"]},{"Key":"your solution","Fragments":["is","will","specifically","performs","is","handles","is","as","should"]},{"Key":"solution is","Fragments":["that","fairly","probably","suggested","longer","so","correct.","complete.","to"]},{"Key":"that you","Fragments":["didn't","should","really","included","extracted","used","need","ignore","used","rely","thought","had","use","made","separated","could","put","qualify","could","may","had","went","really","declare","reference","used","have","use","should","implemented","used","suggested.","have","shouldn't","hard-coded","didn't","might","run","work","can","could","should","return","can","are","did","are","use","are","still","can","are","don't","really","could","can't"]},{"Key":"you didn't","Fragments":["try","find","want","put","declare"]},{"Key":"didn't try","Fragments":["to"]},{"Key":"try to","Fragments":["put","use","avoid","keep","transform/accumulate","learn.","iterate","write","find","immediate","immediate","re-use","get","find","get","think","separate","apply","find","fix","catch","refrain","write"]},{"Key":"to put","Fragments":["it","all","into","into","them","it","it","another","it","the"]},{"Key":"put it","Fragments":["all","in","inside:","into","all","all","on","this"]},{"Key":"it all","Fragments":["into","in","in","out.","lowercase"]},{"Key":"all into","Fragments":["one"]},{"Key":"into one","Fragments":["giant","regex","procedural"]},{"Key":"one giant","Fragments":["function."]},{"Key":"giant function.","Fragments":["This"]},{"Key":"function. This","Fragments":["code","function"]},{"Key":"code does","Fragments":["not,","not","not","not"]},{"Key":"does not,","Fragments":["however,","it","it"]},{"Key":"not, however,","Fragments":["pass"]},{"Key":"however, pass","Fragments":["the"]},{"Key":"pass the","Fragments":["tests","first","test.","tests.","strings","two","strings","ones","tests","last","last"]},{"Key":"the tests","Fragments":["cases.","pass,","don't","as","to","*most","and","passed,","using","passed.","within","all","I'm","call","will","passing.","with","are","which","by","can","and","are","are","without","without","failed,"]},{"Key":"tests cases.","Fragments":["That's"]},{"Key":"cases. That's","Fragments":["just"]},{"Key":"That's just","Fragments":["due"]},{"Key":"just due","Fragments":["to"]},{"Key":"due to","Fragments":["a","the","a","the","something","having"]},{"Key":"to a","Fragments":["typo","static","static","function","lower","unary","(range)","string","lower-level","minimum,","wrong","word","namespace","result","result","0?","single","variable","namespace","`string`.","dictionary","c_string","single","while","minimum.","helper","C++","new","good","string.\"","more","buffer","regular","line","constructor,","reference","`response`"]},{"Key":"a typo","Fragments":["(Whoa"]},{"Key":"typo (Whoa","Fragments":["vs"]},{"Key":"(Whoa vs","Fragments":["Woah)."]},{"Key":"vs Woah).","Fragments":["I"]},{"Key":"Woah). I","Fragments":["do,"]},{"Key":"I do,","Fragments":["however,","with"]},{"Key":"do, however,","Fragments":["have"]},{"Key":"however, have","Fragments":["a"]},{"Key":"have a","Fragments":["few","normal","working","bunch","love/hate","question",".h","yell","revised","cleaner","little","null-terminated","function","principle","`randomName`","`random`","feeling","background","lot","working","very","better","look","separate","serious","type","few","feeling","length,","repeating","full","nitpick","window","bit","chance","couple","const","char","feeling","semicolon","\"throw"]},{"Key":"a few","Fragments":["general","machine","hours.","of","weeks","more","too","great","simplifications","details","optmizations?","cpu","words","special","lines","points","lines","comments,","helper","of","more","from","comments","comments","years."]},{"Key":"few general","Fragments":["C++","comments"]},{"Key":"general C++","Fragments":["tips","comment"]},{"Key":"C++ tips","Fragments":["for"]},{"Key":"tips for","Fragments":["you."]},{"Key":" using","Fragments":["namespace","std::map;","SubjectMap","StringVec"]},{"Key":"using namespace","Fragments":["std;"]},{"Key":"I can't","Fragments":["tell","think","even","test","think","tell","think","think","return","return","return","decide","tell","figure","distinguish","reproduce","seem","step","think","shake","see"]},{"Key":"can't tell","Fragments":["if","you","why"]},{"Key":"tell if","Fragments":["this"]},{"Key":"if this","Fragments":["is","were","pattern","is","were","passes","syntax","is"]},{"Key":"this is","Fragments":["a","the","undefined","neither","\"C\",","my","just","a","the","new","a","simpler","nicely","treated","a","a","the","the","called","better.","a","(slightly)","not","that","a","a","default","a","obviously","a","an","effectively","throw-away","never","ok","needlessly","that","fine","a","regular","better","left","ok","the","outside","the","not","my","ugly,","a","plainer","labeled","in"]},{"Key":"header file","Fragments":["or","is","but","since","to","along","has"]},{"Key":"file or","Fragments":["not","other"]},{"Key":"or not","Fragments":["(I","it","this","but","--","_","\"beer\"","to"]},{"Key":"not (I","Fragments":["submitted"]},{"Key":"(I submitted","Fragments":["my"]},{"Key":"submitted my","Fragments":["solution"]},{"Key":"my solution","Fragments":["in","counts","also","based","may"]},{"Key":"solution in","Fragments":["a","truth.","one","the"]},{"Key":"header due","Fragments":["to"]},{"Key":"to the","Fragments":["1","scope","correct","implementation","search","first","\"bob\"","vector","first","start","string","numbering.","method).","string","check","mutable","different","inside","code.\u003c/li\u003e","usage","constructor","`cctype`","difference.\u003c/li\u003e","source","source","ostream","problem.","difference.\u003c/li\u003e","test","problem","test","next","`hey`","word_count","eye,","whole","whole","same","words()","std::strtok","constructor","test,","total","bit-twiddling","point.","specification,","constructor","scale","specific","library","user","map","next","string","\"Whatever.\"","previous","sing","three","top","plus()","results","left","others.","beginning","last","last","exception","```std::string```","code).","end.","class'","new","\"always","tests."]},{"Key":"the 1","Fragments":["file"]},{"Key":"1 file","Fragments":["limit),","is"]},{"Key":"file limit),","Fragments":["but"]},{"Key":"limit), but","Fragments":["I"]},{"Key":"I need","Fragments":["to","the","to","two","to","to","to","to","my","to","some"]},{"Key":"need to","Fragments":["say","(potentially)","create","use","be","give","know","do","hold","implement","be","pass","return","ascertain","declare","be","add","make","parse","access","create","be","be","run","use","return","be","be","have","compare","test","use","modify","initialize","do","do","(and","compare","repeat","enable","end","actually","be","be","modify","throw","add","write","store","keep","use","initialise","create","have","specify","to","be","explicitly","be","store","make","combine","loop","wrap","test","persist","have","set","include","create","create","copy","know","route","pass,","evaluate","find","know","do","refine","provide","use","throw","throw","throw","look","create","a","trim"]},{"Key":"to say","Fragments":["that","that","that","with"]},{"Key":"say that","Fragments":["you","swapping","readability","regex","making","@penelope","you","it","a"]},{"Key":"you should","Fragments":["never","modify","be","pass","pass","copy","try","check","check","have","have","do","be","add","limit","never","not","store","not","check","be","just","see","just","only","go","do","consider"]},{"Key":"should never","Fragments":["ever","end","cause"]},{"Key":"never ever","Fragments":["type"]},{"Key":"ever type","Fragments":["this"]},{"Key":"type this","Fragments":["at"]},{"Key":"this at","Fragments":["global"]},{"Key":"at global","Fragments":["scope"]},{"Key":"global scope","Fragments":["in"]},{"Key":"scope in","Fragments":["a"]},{"Key":"a header.","Fragments":["Even"]},{"Key":"header. Even","Fragments":["if"]},{"Key":"Even if","Fragments":["it","it's","I"]},{"Key":"if it","Fragments":["is","is","would","read","passes","contradicts","does","ends","bothers","isn't","has","has","punctuation","is","is.\u003c/li\u003e","doesn't","is","is","is","is","is","made","was","is","is","is","is","is","might","didn't","passes","is","were","contains","isn't","was","appears"]},{"Key":"is in","Fragments":["an","an","professional","fact","x\\n\";","your","fact","that"]},{"Key":"an implementation","Fragments":["file","in","that"]},{"Key":"implementation file","Fragments":["(.cpp,"]},{"Key":"file (.cpp,","Fragments":[".cxx,"]},{"Key":"(.cpp, .cxx,","Fragments":[".C,"]},{"Key":".cxx, .C,","Fragments":["...),"]},{"Key":".C, ...),","Fragments":["there"]},{"Key":"...), there","Fragments":["is"]},{"Key":"is no","Fragments":["good","need","\"hey\"","benefit.","guarantee","need","reason","need","best","need","longer","fun","change","guarantee","way","need","boost/algorithm.hpp.","real","possible","extra","need","longer","real","gain","actual"]},{"Key":"no good","Fragments":["reason","reason"]},{"Key":"good reason","Fragments":["not","to","to"]},{"Key":"reason not","Fragments":["to"]},{"Key":"not to","Fragments":["move","be","nest","be","call","split","use","use","replace"]},{"Key":"to move","Fragments":["your","testing","the","your","the","the"]},{"Key":"move your","Fragments":["using","`using`"]},{"Key":"your using","Fragments":["directive"]},{"Key":"using directive","Fragments":["inside"]},{"Key":"directive inside","Fragments":["of"]},{"Key":"inside of","Fragments":["your","the","the","`const","the","the"]},{"Key":"of your","Fragments":["bob","suggestions","function:","approach.","code,","checks","string","arguments.","program","`bool`","function","members","functions.","use","functions"]},{"Key":"your bob","Fragments":["namespace."]},{"Key":"bob namespace.","Fragments":["That"]},{"Key":"namespace. That","Fragments":["way,"]},{"Key":"That way,","Fragments":["the","m1"]},{"Key":"way, the","Fragments":["effect"]},{"Key":"the effect","Fragments":["of"]},{"Key":"effect of","Fragments":["the","stopping"]},{"Key":"the directive","Fragments":["is"]},{"Key":"directive is","Fragments":["limited"]},{"Key":"is limited","Fragments":["to"]},{"Key":"limited to","Fragments":["the"]},{"Key":"the scope","Fragments":["of","of","of","of","of","operator","of"]},{"Key":"scope of","Fragments":["namespace","visibility.","visibility","variable","the","this"]},{"Key":"of namespace","Fragments":["bob.","bob,"]},{"Key":" Also,","Fragments":["you're","you're","absolutely","we","it's","as","in","someone","it","I","I","I","I've","I'm","I","functions","I'd","making","grade","the","strLenght","the","by","I","not","you","have","in","while","it's","I","the","I'm","casting","while","you","you"]},{"Key":"Also, you're","Fragments":["using","passing"]},{"Key":"you're using","Fragments":["the","a","in","them","a"]},{"Key":"the C","Fragments":["versions","standard","headers,","includes"]},{"Key":"C versions","Fragments":["of"]},{"Key":"versions of","Fragments":["the","these","the","the"]},{"Key":"the \"cctype\"","Fragments":["functions"]},{"Key":"\"cctype\" functions","Fragments":["(isupper,"]},{"Key":"functions (isupper,","Fragments":["toupper,"]},{"Key":"(isupper, toupper,","Fragments":["etc)."]},{"Key":"toupper, etc).","Fragments":["It"]},{"Key":"etc). It","Fragments":["would"]},{"Key":"It would","Fragments":["be","be","boost","improve","be","be","definitely","reduce","add","be","be","be"]},{"Key":"be a","Fragments":["good","performance","const","sign","static","typo.","yell,","good","class","lot","static","faster","better","good","good","way","loop","const","lot","more","bit","good","range","simple","yell,","bit","small","letter.","bit","shout","better","little","little","more","match","little","problem","good","potential","pretty","good","`const","bad","nice","bit","good"]},{"Key":"a good","Fragments":["idea","bit","tradeoff","way","idea","way","fit","old","reason","idea.","idea.","expressive","point.","move;","habit.","enough","chance","decision.","opportunity","name","point.","idea.","idea","knowledge","fit","link","suggestion,","overview","solution","thing!","example.","style","style","idea","start.","write","enough","place","practice).","choice."]},{"Key":"good idea","Fragments":["to","to","to","as","to"]},{"Key":"idea to","Fragments":["explicitly","narrow","imbue","use","use","map","stick"]},{"Key":"to explicitly","Fragments":["include","use"]},{"Key":"explicitly include","Fragments":["the"]},{"Key":"include the","Fragments":["header","proper","first","header,"]},{"Key":"header `\u003ccctype\u003e`","Fragments":["if"]},{"Key":"`\u003ccctype\u003e` if","Fragments":["you"]},{"Key":"if you","Fragments":["insist","set","used","use","use","start","test","have","would","want","detect","know","pass","use","didn't","are","don't","pass","were","use","see","wanted","get","insert","check","get","could","declare","swap","declared","reframe","ever","haven't","were","wanted.","feel","broke","apply","want","reverse","pass","want","get","wish.","need","do","are","are","used","want","think"]},{"Key":"you insist","Fragments":["on"]},{"Key":"insist on","Fragments":["using"]},{"Key":"on using","Fragments":["them.","some","const"]},{"Key":"using them.","Fragments":["Also"]},{"Key":"them. Also","Fragments":["be","your"]},{"Key":"Also be","Fragments":["aware"]},{"Key":"be aware","Fragments":["that","of","of."]},{"Key":"aware that","Fragments":["there","indexing"]},{"Key":"that there","Fragments":["are","is","would","is","is","are","is"]},{"Key":"there are","Fragments":["locale-aware","some","more","at","no","only","spaces","simply","some","library","64","a","a","other","any","some","a","a","alphanumeric","some","some","built","any","nine","other"]},{"Key":"are locale-aware","Fragments":["C++"]},{"Key":"locale-aware C++","Fragments":["versions"]},{"Key":"C++ versions","Fragments":["of"]},{"Key":"of these","Fragments":["functions","functions.","exercises","code","`break`s.","would","points","ugly"]},{"Key":"these functions","Fragments":["that","aren't","are","yourself."]},{"Key":"functions that","Fragments":["work","encapsulate","could","can","determine","are","extend","return","this","help","I","can","return","don't"]},{"Key":"that work","Fragments":["on"]},{"Key":"work on","Fragments":["multiple","is"]},{"Key":"on multiple","Fragments":["character"]},{"Key":"multiple character","Fragments":["types"]},{"Key":"character types","Fragments":["(we're"]},{"Key":"types (we're","Fragments":["talking"]},{"Key":"(we're talking","Fragments":["about"]},{"Key":"talking about","Fragments":["unicode","a","anonymous","the"]},{"Key":"about unicode","Fragments":["now)"]},{"Key":"unicode now)","Fragments":["defined"]},{"Key":"now) defined","Fragments":["in"]},{"Key":"defined in","Fragments":["the","my","the"]},{"Key":"the `\u003clocale\u003e`","Fragments":["header."]},{"Key":"`\u003clocale\u003e` header.","Fragments":["You"]},{"Key":"header. You","Fragments":["may"]},{"Key":"You may","Fragments":["want","also","be","want","also","also"]},{"Key":"may want","Fragments":["to","to","to","to","to","to","to","to","to"]},{"Key":"to check","Fragments":["those","if","for","for","for","the","for","if","if","2","if","if","if","if","each","each","Bob's","those","whether","for","out).","no_lowercase()","the","that","for","for","if","if","whether","if","for","for","if","boundries","for"]},{"Key":"check those","Fragments":["out.","conditions"]},{"Key":"those out.","Fragments":["You"]},{"Key":"out. You","Fragments":["may"]},{"Key":"may also","Fragments":["like","want","want"]},{"Key":"also like","Fragments":["to","how","the","the","how"]},{"Key":"to know","Fragments":["about","so","more","if","if","how","what","which","if","the","if","if","about","the","which","how","is"]},{"Key":"about std::isspace(...)","Fragments":["as"]},{"Key":"std::isspace(...) as","Fragments":["something"]},{"Key":"as something","Fragments":["you","like","like"]},{"Key":"something you","Fragments":["can"]},{"Key":"you can","Fragments":["use","google","simply","modify","do","get","*pretend*","save","turn","implement","make","make","use","replace","use","try","use","move","save","use","use","skip","have","make.","just","just","replace","simply","remove","use","use","just","in","use","modify","see","change","just","have","increment","use","eliminate","use","rewrite","rewrite","convert","use","initialise","simply","write","declare","get","simplify","just","see","imagine,","also","actually","take","generalize","write","get","directly","move","just","use"]},{"Key":"can use","Fragments":["instead","range-based","std::transform()","`isupper()`","the","an","[`islower`](http://www.cplusplus.com/reference/cctype/islower/).","[`!isdigit`](http://www.cplusplus.com/reference/cctype/isdigit/)","size_t","[`std::find_if`](http://www.cplusplus.com/reference/algorithm/find_if/)","[`std::find_if`](http://www.cplusplus.com/reference/algorithm/find_if/)","isupper(letter)","isspace(letter)","say","the","(that","regular","the","my","this"]},{"Key":"use instead","Fragments":["of"]},{"Key":"instead of","Fragments":["`ch","manually","a","comments?","iterators.","default","categorizing","a","forcing","\"one\"","splitting","trying","using","a","\"stdio.h\",","a","using","a","class.","using","``class``","`(tmp","int","using","simply","an","making","`string`,","`string","copying","just","checking","`regex_match`","`phrase[phrase.size()-1]`","returning","just","a","that","```\u003ccctype\u003e```","that","`char","having","`word","char*","string.","post","converting","character","line","a","just","using","using","`regex_search`).","checking","manual","a","just","outputting","the","calling","n","having","a","assignment","writing","copying","-1","looping","!isupper?","a","looping","creating","a","cctype.","pointers.","a","YELL),","the","only","double","`switch`","a","using","`iterator++`","using","looping","using","\"string::const_iterator\",","using","indexes.","indexes.","`int`","attempting","`int`"]},{"Key":"of `ch","Fragments":["=="]},{"Key":"`ch ==","Fragments":["'"]},{"Key":"== '","Fragments":["'`","'){"]},{"Key":"' '`","Fragments":["(it"]},{"Key":"'` (it","Fragments":["will"]},{"Key":"(it will","Fragments":["also"]},{"Key":"will also","Fragments":["detect","make","speed","have"]},{"Key":"also detect","Fragments":["tabs,"]},{"Key":"detect tabs,","Fragments":["newlines,"]},{"Key":"tabs, newlines,","Fragments":["etc.)","line"]},{"Key":" Here","Fragments":["is","is","is","is"]},{"Key":"Here is","Fragments":["a","a","some","a","a"]},{"Key":"a [link](http://en.cppreference.com/w/cpp/string/byte/isspace)","Fragments":["that"]},{"Key":"[link](http://en.cppreference.com/w/cpp/string/byte/isspace) that","Fragments":["might"]},{"Key":"that might","Fragments":["broaden","be","be","have","be","apply"]},{"Key":"might broaden","Fragments":["your"]},{"Key":"broaden your","Fragments":["knowledge"]},{"Key":"your knowledge","Fragments":["about"]},{"Key":"knowledge about","Fragments":["the"]},{"Key":"about the","Fragments":["isXYZ","2nd","STL","code,","`transform`","duplicates","`auto`","default","break","underscore","strings.","crash","OO","`std::tolower`","consequences","boring","80","performance","input","booleans","keyword","tests.","case","same","boost","definitions"]},{"Key":"the isXYZ","Fragments":["functions"]},{"Key":"isXYZ functions","Fragments":["in"]},{"Key":"functions in","Fragments":["`\u003ccctype\u003e`","[``\u003clocale\u003e``](http://en.cppreference.com/w/cpp/header/locale)","an","`hey`","```#\u003calgorithm\u003e```","\u003ccctype\u003e","the","terms","ctype.h."]},{"Key":"in `\u003ccctype\u003e`","Fragments":["/"]},{"Key":"`\u003ccctype\u003e` /","Fragments":["`\u003clocale\u003e`."]},{"Key":"you're passing","Fragments":["strings","strings"]},{"Key":"passing strings","Fragments":["by","by","by","by"]},{"Key":"strings by","Fragments":["value","value","const","pointer","const","reference"]},{"Key":"by value","Fragments":["in","/","-","as","and","and","instead"]},{"Key":"value in","Fragments":["every","the","the","more","the","a"]},{"Key":"in every","Fragments":["case.","situation,","iteration,"]},{"Key":"every case.","Fragments":["This"]},{"Key":"case. This","Fragments":["can"]},{"Key":"This can","Fragments":["lead","be"]},{"Key":"can lead","Fragments":["to","to","to"]},{"Key":"lead to","Fragments":["extra","a","problems","pollution","redundant","the","a"]},{"Key":"to extra","Fragments":["copies"]},{"Key":"extra copies","Fragments":["that"]},{"Key":"copies that","Fragments":["you"]},{"Key":"you really","Fragments":["don't","only","need","want","make","just","need"]},{"Key":"really don't","Fragments":["need.","need","understand"]},{"Key":"don't need.","Fragments":["When","So"]},{"Key":"need. When","Fragments":["you"]},{"Key":"When you","Fragments":["take","pass","say","see"]},{"Key":"you take","Fragments":["a","the","`hey()`"]},{"Key":"take a","Fragments":["non-trivial","look","look","step"]},{"Key":"a non-trivial","Fragments":["(pronounced:","bit"]},{"Key":"non-trivial (pronounced:","Fragments":["anything"]},{"Key":"(pronounced: anything","Fragments":["potentially"]},{"Key":"anything potentially","Fragments":["larger"]},{"Key":"potentially larger","Fragments":["than"]},{"Key":"larger than","Fragments":["a","the","15","10^4."]},{"Key":"than a","Fragments":["few","named","simple","value","search","class.","\"beer","range-based","couple","static","loop"]},{"Key":"few machine","Fragments":["words)"]},{"Key":"machine words)","Fragments":["type"]},{"Key":"words) type","Fragments":["as"]},{"Key":"type as","Fragments":["a"]},{"Key":"a function","Fragments":["parameter","in","named","always","which","that","that","```std::is_permutation```","to","that","only","called","name?","as","that","call.","pointer"]},{"Key":"function parameter","Fragments":["and"]},{"Key":"parameter and","Fragments":["you"]},{"Key":"and you","Fragments":["don't","don't","don't","don't","import","can","don't","run","might","don't"]},{"Key":"you don't","Fragments":["intend","actually","need","have","need","get","detect","have","need","modify","need","mean","write","know","have","have","need","need","need","mind,","really","need","need","want","need","have","need","need.","need","need","want","pass"]},{"Key":"don't intend","Fragments":["to"]},{"Key":"intend to","Fragments":["modify"]},{"Key":"to modify","Fragments":["it,","a","the","the","their","its","the","them?","it","it,"]},{"Key":"modify it,","Fragments":["said","and"]},{"Key":"it, said","Fragments":["parameter"]},{"Key":"said parameter","Fragments":["should"]},{"Key":"parameter should","Fragments":["be"]},{"Key":"be passed","Fragments":["by","to","through","as","a","by"]},{"Key":"passed by","Fragments":["const","const","reference","reference.","constant"]},{"Key":"by const","Fragments":["reference.","reference","reference.","ref.","reference?","reference.","reference","reference."]},{"Key":"const reference.","Fragments":["To","For","You"]},{"Key":"reference. To","Fragments":["be"]},{"Key":"To be","Fragments":["concrete,","a"]},{"Key":"be concrete,","Fragments":["you"]},{"Key":"concrete, you","Fragments":["should"]},{"Key":"should modify","Fragments":["your"]},{"Key":"modify your","Fragments":["prototypes"]},{"Key":"your prototypes","Fragments":["to:"]},{"Key":" bool","Fragments":["silence(string","isShout(string","is_silent(const","MapsEqual(const","isBlank(std::string"]},{"Key":"bool silence(string","Fragments":["const\u0026"]},{"Key":"silence(string const\u0026","Fragments":["s);"]},{"Key":"bool isShout(string","Fragments":["const\u0026"]},{"Key":"isShout(string const\u0026","Fragments":["s);"]},{"Key":" string","Fragments":["hey(string","sing(unsigned","in","word;","hey(string"]},{"Key":"string hey(string","Fragments":["const\u0026","words)","s)"]},{"Key":"hey(string const\u0026","Fragments":["s);"]},{"Key":"This will","Fragments":["avoid","be","also"]},{"Key":"will avoid","Fragments":["making","that"]},{"Key":"avoid making","Fragments":["copies"]},{"Key":"making copies","Fragments":["of"]},{"Key":"copies of","Fragments":["the","data","the","the","the"]},{"Key":"the input","Fragments":["string","string","string","string","string","is","string","by","a","string.","string","string","is","string","multiple","should","words","pattern,","has","string,","string,","is","of","phrase","strings","vector,","is","would-be","words.","string","\"I","(I.e.","arguments","'abc'","data.","strings.","is","in","and","string."]},{"Key":"input string","Fragments":["each","more","ends","is","to","a","is","always","is","length.","(you'll"]},{"Key":"string each","Fragments":["time","time"]},{"Key":"each time","Fragments":["you","(O(n^2)).","to","they","you","you"]},{"Key":"time you","Fragments":["call","spend","call","check","never","extract","find"]},{"Key":"you call","Fragments":["one","the","string::back()"]},{"Key":"call one","Fragments":["of"]},{"Key":"one of","Fragments":["these","them","the","the","the","you","them","the","them","the","the","the","the","the","C++","them.","my"]},{"Key":"these functions.","Fragments":["If","It's"]},{"Key":"functions. If","Fragments":["this"]},{"Key":"If this","Fragments":["seems","passed","was"]},{"Key":"this seems","Fragments":["mysterious,"]},{"Key":"seems mysterious,","Fragments":["you"]},{"Key":"mysterious, you","Fragments":["can"]},{"Key":"can google","Fragments":["\"cpp"]},{"Key":"google \"cpp","Fragments":["faq"]},{"Key":"\"cpp faq","Fragments":["lite"]},{"Key":"faq lite","Fragments":["references\""]},{"Key":"lite references\"","Fragments":["to"]},{"Key":"references\" to","Fragments":["learn"]},{"Key":"to learn","Fragments":["more","C++","that.","rather","assembly","more","C++","about","more"]},{"Key":"learn more","Fragments":["about","about","about"]},{"Key":"more about","Fragments":["pass","it.","the"]},{"Key":"about pass","Fragments":["by"]},{"Key":"pass by","Fragments":["value","{reference,pointer}.","reference/copy","reference","reference","value"]},{"Key":"value /","Fragments":["pass"]},{"Key":"/ pass","Fragments":["by"]},{"Key":"like how","Fragments":["you","your","short","short","you","you","you've","cleanly","you","clear","you","you","clean","you","you"]},{"Key":"how you","Fragments":["make","chose","could","create","made","attacked","could","can","classified","construct","end","decide","check","can","check","use","are","could","could","could","could","could","passed","do"]},{"Key":"you make","Fragments":["use","the"]},{"Key":"make use","Fragments":["of","of","of"]},{"Key":"use of","Fragments":["std::string","`std::regex`;","inner_product.","boost","boost","\"algorithm\"","its","boost::for_each.","C++'s","string::back(),","the","`int`","`using`","anonymous","string","static","string","`char*`","the","the","the","STL,","static","header","the","an","an","an","boost","the","STL,","exceptions","namespace.","anonymous","the","the","regex","iterators","global","Boost","a","`typedef`,","static","the","random","the","tokenizer.","the","mod","auto","all","`inline`","std","namespaces,","the","the","__sprintf__","iterators,","inner_product()"]},{"Key":"of std::string","Fragments":["and","is","but"]},{"Key":"std::string and","Fragments":["the"]},{"Key":"the brevity","Fragments":["of","of"]},{"Key":"brevity of","Fragments":["the","your"]},{"Key":"the approach","Fragments":["(less","I","of"]},{"Key":"approach (less","Fragments":["code"]},{"Key":"(less code","Fragments":["is"]},{"Key":"code is","Fragments":["better","clear","doing","very","very","a","difficult","because","less","very","on","incredibly","reasonably","nicely","state","pretty","really","and","obsolete,","compact","compiled","that","the","readable","littered"]},{"Key":"is better","Fragments":["code!).","than","to","than","than","and","to","to","C++","to","than","idea?","than"]},{"Key":"better code!).","Fragments":["I"]},{"Key":"code!). I","Fragments":["also"]},{"Key":"I also","Fragments":["like","considered","considered","don't","did","think","learned","think","streamlined","passes","tried","saw","could","agree","considered","wanted","like","should","would","changed","find","like","posted","don't","don't","disagree","think"]},{"Key":"how your","Fragments":["solution","Bob","test"]},{"Key":"solution will","Fragments":["work","probably"]},{"Key":"will work","Fragments":["even","fine","because","just"]},{"Key":"work even","Fragments":["if"]},{"Key":"even if","Fragments":["there","it","my","that","the","they"]},{"Key":"is padding","Fragments":["before"]},{"Key":"padding before","Fragments":["or"]},{"Key":"before or","Fragments":["after"]},{"Key":"or after","Fragments":["the"]},{"Key":"string (even","Fragments":["though"]},{"Key":"(even though","Fragments":["this"]},{"Key":"though this","Fragments":["was","\"works.\""]},{"Key":"this was","Fragments":["not","going","a","an","far","used","part","submitted"]},{"Key":"was not","Fragments":["part","quite","sure","divisable"]},{"Key":"not part","Fragments":["of","of","of","of"]},{"Key":"part of","Fragments":["the","the","a","a","the","the","my","the","doing","the","a","the","the","the","the","the","a","the"]},{"Key":"the test","Fragments":["suite).","cases!","required","file","suite,","suite.","cases","cases","then","cases","suite","client\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e","cases","suite,","suite,","suite","file.","cases","suite)","for","looks","cases.","description","cases","typedef.","suite","and","instance","case","suite","file","file","cases","cases","passing","input","cases.","framework","routine","file.","suite.","file.","suite.","suite.","suite,","suite.","suite.","suite.","file","file."]},{"Key":" Some","Fragments":["comments:","of","notes:","functions"]},{"Key":" 1)","Fragments":["You","You","You","You","If","You","Are","True,","Yea,","It","True,","You","`returnValue[wordBuffer]","You","You","The"]},{"Key":"1) You","Fragments":["don't","could","can","require","are","don't","have","construct"]},{"Key":"You don't","Fragments":["really","need","gain","have","need","need","need","need","use","want","need","ever","want","need","use"]},{"Key":"don't really","Fragments":["gain","lose","know","understand","know","add","know","understand","agree","need","go","like","like"]},{"Key":"really gain","Fragments":["anything"]},{"Key":"gain anything","Fragments":["here","by"]},{"Key":"anything here","Fragments":["by"]},{"Key":"here by","Fragments":["making"]},{"Key":"by making","Fragments":["bob"]},{"Key":"making bob","Fragments":["a"]},{"Key":"bob a","Fragments":["class,","static"]},{"Key":"class, or","Fragments":["adding","if"]},{"Key":"or adding","Fragments":["a"]},{"Key":"a constructor/destructor","Fragments":["definition."]},{"Key":"constructor/destructor definition.","Fragments":["You"]},{"Key":"definition. You","Fragments":["could"]},{"Key":"have used","Fragments":["a","a","the","a","a","regex","a","\u003calgorithm\u003e","a","`std::logic_error`","boost's","an","operator","string(10,","that","an"]},{"Key":"used a","Fragments":["namespace","namespace","namespace","switch","bunch","std::unordered_map","regex","regex","namespace","map","map","`map`","namespace","lambda","flag,","namespace","loop","couple","lot.","```using","lot,"]},{"Key":"namespace or","Fragments":["removed","the","importing"]},{"Key":"or removed","Fragments":["the"]},{"Key":"removed the","Fragments":["unreferenced","`strip_punctuation`","prototypes","need"]},{"Key":"the unreferenced","Fragments":["functions."]},{"Key":" 2)","Fragments":["I","When","Afaik,","Depending","Why","You","I","True.","What","If","You","As","Instead","Regexs","Can"]},{"Key":"2) I","Fragments":["bet","also"]},{"Key":"I bet","Fragments":["you"]},{"Key":"bet you","Fragments":["used"]},{"Key":"you used","Fragments":["iostream","a","the","these","the","a","which","iterators"]},{"Key":"used iostream","Fragments":["for"]},{"Key":"iostream for","Fragments":["debugging,"]},{"Key":"for debugging,","Fragments":["but"]},{"Key":"debugging, but","Fragments":["you"]},{"Key":"but you","Fragments":["don't","have","have","always","need","might"]},{"Key":"don't actually","Fragments":["use"]},{"Key":"actually use","Fragments":["it"]},{"Key":"the production","Fragments":["code"]},{"Key":"production code","Fragments":["-",":)"]},{"Key":"code -","Fragments":["you"]},{"Key":"- you","Fragments":["cold","can","can","should","know","don't","don't"]},{"Key":"you cold","Fragments":["remove"]},{"Key":"cold remove","Fragments":["the"]},{"Key":"remove the","Fragments":["header.","recursion","else","iostream-include","\u003ccstring\u003e","chance","`evaluate()`","\"inline\"","big","header","use","\"isSayingAnything\"-method.","debug","duplicate","need"]},{"Key":" 3)","Fragments":["In","std::map","Instead","I"]},{"Key":"3) In","Fragments":["general"]},{"Key":"In general","Fragments":["there","you","if","I"]},{"Key":"general there","Fragments":["is"]},{"Key":"a lot","Fragments":["of","of","for","less","of","faster.","easier","I","of","of","simpler.","of","nicer.","simpler!","of","of","of","of","of","of","of","easier","of","more","of","to","of","of","of","of","of"]},{"Key":"lot of","Fragments":["string","bool","room","cases.","comparisons","reallocations","things","setup","overhead","scrolling","processing","processing","processing","names","solutions","generally","clarity","time","\"anagram\"s,","maintainability"]},{"Key":"of string","Fragments":["copying","manipulation","constants","constants","to","objects","passed"]},{"Key":"string copying","Fragments":["that"]},{"Key":"copying that","Fragments":["could"]},{"Key":"that could","Fragments":["be","be","do","be","be","make","answer"]},{"Key":"could be","Fragments":["a","done","clearly","written","simply","made","a","`string","a","categorized","wrong.","rewritten","faster.","made","optimized","replaced","that","better","replaced","simpler","cleaned","read","replaced","done","improved:","replaced","replaced","generated","easily","a","simplified","done","split","accomplished","better","better?","more","wrong","offloaded","thought","wrong","used","a","an","improved.","moved","missed","expressed","pass","just","a","`if","a","done"]},{"Key":"a performance","Fragments":["concern","hit","analysis","point","benefits"]},{"Key":"performance concern","Fragments":["if"]},{"Key":"concern if","Fragments":["this"]},{"Key":"this were","Fragments":["in","a"]},{"Key":"were in","Fragments":["an"]},{"Key":"an inner","Fragments":["loop."]},{"Key":"inner loop.","Fragments":["For"]},{"Key":"loop. For","Fragments":["instance,"]},{"Key":"For instance,","Fragments":["the","acronyms"]},{"Key":"instance, the","Fragments":["spacesremoved.erase"]},{"Key":"the spacesremoved.erase","Fragments":["method"]},{"Key":"spacesremoved.erase method","Fragments":["will"]},{"Key":"method will","Fragments":["end"]},{"Key":"will end","Fragments":["up","up"]},{"Key":"end up","Fragments":["copying","predicting","interpreting","in","comparing"]},{"Key":"up copying","Fragments":["the"]},{"Key":"copying the","Fragments":["buffer","strings.","elements","input","string","string","whole","string","string.","code","string","whole"]},{"Key":"the buffer","Fragments":["each","length","size","size"]},{"Key":"buffer each","Fragments":["time"]},{"Key":"time (O(n^2)).","Fragments":["An"]},{"Key":"(O(n^2)). An","Fragments":["alternative"]},{"Key":"An alternative","Fragments":["would","form"]},{"Key":"alternative would","Fragments":["be"]},{"Key":"be to","Fragments":["specify","use","include","sort","store","remove","test","initialize","defer","move","look","change","parse."]},{"Key":"to specify","Fragments":["the","the"]},{"Key":"specify the","Fragments":["start","seperator"]},{"Key":"the start","Fragments":["index","would","and","and","and","and","to"]},{"Key":"start index","Fragments":["to"]},{"Key":"index to","Fragments":["search","make"]},{"Key":"to search","Fragments":["in","for","for","for","through","around"]},{"Key":"search in","Fragments":["the"]},{"Key":"the string,","Fragments":["updating","cutting","I","without","so","how","which","setting"]},{"Key":"string, updating","Fragments":["each"]},{"Key":"updating each","Fragments":["time."]},{"Key":" 4)","Fragments":["Also,","Instead"]},{"Key":"4) Also,","Fragments":["you"]},{"Key":"Also, you","Fragments":["are","might","don't","might","might"]},{"Key":"you are","Fragments":["passing","certain","already","trying","passing","not","a","iterating","familiar","with","explicitly","supposed","very","also","checking","using","correct,","dealing","not","only","going","coming","missing","really","doing","iterating","iterating","not","copying","supposted","iterating","checking","passing","not","writing","using","using","using","using","using"]},{"Key":"are passing","Fragments":["the","str","the"]},{"Key":"passing the","Fragments":["std::string","tests.","tests.","units","question_with_trailing_whitespace"]},{"Key":"the std::string","Fragments":["argument"]},{"Key":"std::string argument","Fragments":["by","could"]},{"Key":"argument by","Fragments":["value"]},{"Key":"value -","Fragments":["passing","you"]},{"Key":"- passing","Fragments":["by"]},{"Key":"passing by","Fragments":["reference","const","reference."]},{"Key":"by reference","Fragments":["would","(so,","would","so","```const","I","for","in","is","and"]},{"Key":"reference would","Fragments":["avoid","be"]},{"Key":"would avoid","Fragments":["a","stream","the","it"]},{"Key":"avoid a","Fragments":["temporary.","useless","copy."]},{"Key":" 5)","Fragments":["You"]},{"Key":"5) You","Fragments":["could"]},{"Key":"could potentially","Fragments":["reduce","improve","cause","copy","copy","copy","doing"]},{"Key":"potentially reduce","Fragments":["the"]},{"Key":"reduce the","Fragments":["amount","space","required","required","overall","number","number","string","complexity"]},{"Key":"the amount","Fragments":["of","of","of","of","of","of","of"]},{"Key":"amount of","Fragments":["time","whitespace,","checks","characters","possible","possible","data","data","possible","possible","data","letters","the"]},{"Key":"of time","Fragments":["you","randomly","to","looking"]},{"Key":"you spend","Fragments":["passing"]},{"Key":"spend passing","Fragments":["through"]},{"Key":"passing through","Fragments":["the"]},{"Key":"through the","Fragments":["string","string","characters","characters","string","string","elements","std","process","entire","string","input","string","string","input","string","strings.","matches.","string","string,","string","string","git","string","string.","setup,","string"]},{"Key":"string by","Fragments":["separating"]},{"Key":"by separating","Fragments":["the"]},{"Key":"separating the","Fragments":["checks"]},{"Key":"the checks","Fragments":["for","within","for"]},{"Key":"checks for","Fragments":["hasAlpha","special","a","each","each"]},{"Key":"for hasAlpha","Fragments":["and"]},{"Key":"hasAlpha and","Fragments":["isYelling"]},{"Key":"and isYelling","Fragments":["into","functions,"]},{"Key":"isYelling into","Fragments":["separate"]},{"Key":"into separate","Fragments":["loops","functions","functions","functions,"]},{"Key":"separate loops","Fragments":["(ie"]},{"Key":"loops (ie","Fragments":["if"]},{"Key":"(ie if","Fragments":["you"]},{"Key":"you set","Fragments":["hasAlpha=true","that"]},{"Key":"set hasAlpha=true","Fragments":["you"]},{"Key":"hasAlpha=true you","Fragments":["never"]},{"Key":"you never","Fragments":["have","use","know","initialize"]},{"Key":"never have","Fragments":["to"]},{"Key":"to test","Fragments":["for","Bob's","for","for","for","the","our","for","for"]},{"Key":"test for","Fragments":["it","silence","shouting?","silence.","emptyness","empty","each","3","(numSpaces","all","string","string","if","all","this","question","an","shouting.","a"]},{"Key":"for it","Fragments":["again;","to","as"]},{"Key":"it again;","Fragments":["likewise"]},{"Key":"again; likewise","Fragments":["with"]},{"Key":"likewise with","Fragments":["isYelling.)"]},{"Key":" And","Fragments":["if","yeah,","moving","I","indeed","feel","with","I","then"]},{"Key":"And if","Fragments":["hasAlpha=false,","you've"]},{"Key":"if hasAlpha=false,","Fragments":["isYelling=false"]},{"Key":"hasAlpha=false, isYelling=false","Fragments":["and"]},{"Key":"isYelling=false and","Fragments":["you"]},{"Key":"don't need","Fragments":["a","the","distinct","to","an","the","the","the","the","to","to","to","the","their","to","to","to","to","to","to","to","to","to","the","a","to","a"]},{"Key":"need a","Fragments":["separate","math","change","class","copy"]},{"Key":"a separate","Fragments":["check.","step?","function","function","method","function.","function","function.","function","function"]},{"Key":"I tend","Fragments":["to","to"]},{"Key":"tend to","Fragments":["prefer","prefer"]},{"Key":"to prefer","Fragments":["std::algorithms.","a","```using"]},{"Key":"prefer std::algorithms.","Fragments":["Here"]},{"Key":"std::algorithms. Here","Fragments":["the"]},{"Key":"Here the","Fragments":["check"]},{"Key":"the check","Fragments":["for","```word","to","at","for"]},{"Key":"for yelling","Fragments":["could"]},{"Key":"yelling could","Fragments":["be"]},{"Key":"be done","Fragments":["without","without","more","in","an","with","in"]},{"Key":"done without","Fragments":["the","using","a"]},{"Key":"without the","Fragments":["std::any_of,","```triangle::kind(int,","rvalue","redundancy.","need","nested","null,","reference.","need"]},{"Key":"the std::any_of,","Fragments":["but"]},{"Key":"std::any_of, but","Fragments":["it"]},{"Key":"but it","Fragments":["seems","modifies","seems","is","is","certainly","seems","works.","looks","makes","works.","does","could","also","seems","would","does","meets","was","works","fits","works.","felt","should","could've","should","works","doesn't"]},{"Key":"it seems","Fragments":["more","I","to","pretty","like","to","to","to","like","to","that","to","like","like","like","rather","plausible","to","the","to"]},{"Key":"seems more","Fragments":["logical","intuitive","elegant."]},{"Key":"more logical","Fragments":["to","using"]},{"Key":"logical to","Fragments":["me"]},{"Key":"to me","Fragments":["this","that","why","that","like","like","that","that","that","that","all","for","that","mainly","I","is","in"]},{"Key":"me this","Fragments":["way.","is","feels"]},{"Key":" Switched","Fragments":["from","to","to"]},{"Key":"Switched from","Fragments":["map"]},{"Key":"from map","Fragments":["to"]},{"Key":"map to","Fragments":["array","see","transcribe","check"]},{"Key":"to array","Fragments":["for"]},{"Key":"array for","Fragments":["improved"]},{"Key":"for improved","Fragments":["access"]},{"Key":"improved access","Fragments":["time."]},{"Key":"might like","Fragments":["to","to"]},{"Key":"to look","Fragments":["at","out","out","out","for","up","into","at"]},{"Key":"look at","Fragments":["the","what","your","[`find_first_of`](http://www.cplusplus.com/reference/string/string/find_first_of/)?","its","the","the","it,","using","my","this.","some","routines","the","Boost.","the","his","moving","the","const","the","this:","the","the","this","other"]},{"Key":"the character","Fragments":["classification","classification","is","classification","as","occurences","occurences","is","counts","'b'","part","is","is"]},{"Key":"character classification","Fragments":["functions","functions","functions"]},{"Key":"classification functions","Fragments":["in","and","(isalnum","outside"]},{"Key":"in [``\u003clocale\u003e``](http://en.cppreference.com/w/cpp/header/locale)","Fragments":["or"]},{"Key":"[``\u003clocale\u003e``](http://en.cppreference.com/w/cpp/header/locale) or","Fragments":["at"]},{"Key":"or at","Fragments":["least","least"]},{"Key":" Can","Fragments":["you","make"]},{"Key":"you break","Fragments":["the"]},{"Key":"break the","Fragments":["problem","loop"]},{"Key":"the problem","Fragments":["down","domain.","domain,","domain?","domain","domain","and","of","as","domain","statement,","isn't","of","is","this","is","can","purely","asks,","a","with","spec","and","(the","is"]},{"Key":"problem down","Fragments":["into"]},{"Key":"down into","Fragments":["something"]},{"Key":"into something","Fragments":["that"]},{"Key":"something that","Fragments":["doesn't","took","is","should","should","should"]},{"Key":"that doesn't","Fragments":["need","require","have","seem","match","match"]},{"Key":"doesn't need","Fragments":["to","to","to","to","to","it's","to","to"]},{"Key":"to (potentially)","Fragments":["scan","optimize"]},{"Key":"(potentially) scan","Fragments":["the"]},{"Key":"scan the","Fragments":["input"]},{"Key":"string more","Fragments":["than","times"]},{"Key":"more than","Fragments":["once?","a","for_each.","necessary.","mere","once.","once","the","one","2","99","a","absolutely"]},{"Key":" Using","Fragments":["a","`\u003calgorithm\u003e`","boost","stl","boost","`char","the","the"]},{"Key":"Using a","Fragments":["namespace","few"]},{"Key":"namespace is","Fragments":["much","considered","a","a"]},{"Key":"is much","Fragments":["cleaner","more","nicer","shorter","simpler.","cleaner","more","faster"]},{"Key":"much cleaner","Fragments":["than","if","and","on"]},{"Key":"cleaner than","Fragments":["having"]},{"Key":"than having","Fragments":["a","to"]},{"Key":"having a","Fragments":["full","look","global","look","one-line","look"]},{"Key":"a full","Fragments":["blown","version","description"]},{"Key":"full blown","Fragments":["class."]},{"Key":"blown class.","Fragments":["Intermediate"]},{"Key":"class. Intermediate","Fragments":["categorization"]},{"Key":"Intermediate categorization","Fragments":["with"]},{"Key":"categorization with","Fragments":["enums"]},{"Key":"with enums","Fragments":["is"]},{"Key":"enums is","Fragments":["not"]},{"Key":" Testing","Fragments":["exercism!","agains"]},{"Key":"Testing exercism!","Fragments":["It"]},{"Key":"exercism! It","Fragments":["is"]},{"Key":"It is","Fragments":["really","certainly","not","also","using","much","good","called","just","possible","pretty","succinct","succinct","more"]},{"Key":"is really","Fragments":["nice.","difficult","efficient","cool,","clean,"]},{"Key":"I rethought","Fragments":["finding"]},{"Key":"rethought finding","Fragments":["the"]},{"Key":"finding the","Fragments":["anagram"]},{"Key":"the anagram","Fragments":["based","into","of"]},{"Key":"anagram based","Fragments":["on"]},{"Key":"based on","Fragments":["seeing","your","your","the","the"]},{"Key":"on seeing","Fragments":["the"]},{"Key":"seeing the","Fragments":["entry","std::whatever"]},{"Key":"the entry","Fragments":["from"]},{"Key":"entry from","Fragments":["@bobbie."]},{"Key":" In","Fragments":["the","C++11","fact,","retrospect,","the","my","any","hey,","general","L13","the","fact,","essence","functions","fact,","what","`is_shout`","this","this","addition","that","your","addition","your","your","your","your","my","`nStringType`,","this","this","this","this","your"]},{"Key":"In the","Fragments":["constructor","exercism.io","second","\"hey\"","scope","process","end,"]},{"Key":"the constructor","Fragments":["I","appears","of","as","for","or","does","a","as"]},{"Key":"constructor I","Fragments":["now","was"]},{"Key":"I now","Fragments":["create","have"]},{"Key":"now create","Fragments":["an"]},{"Key":"create an","Fragments":["additional","empty"]},{"Key":"an additional","Fragments":["copy","check","character"]},{"Key":"additional copy","Fragments":["of"]},{"Key":"the reference","Fragments":["string","word","word."]},{"Key":"reference string","Fragments":["that","from"]},{"Key":"string that","Fragments":["is","is","I'm","is","contains"]},{"Key":"that is","Fragments":["sorted.","not","1-to-1","talking","as","(to","why","returned","not","the","a","definitive","all","demanded.","used","how","how","how","how","the","not","a","what","checked,","how","truly","not","alphabetic","still","more","a","acceptable.","not","not","not","it...","not","actually","needed","more"]},{"Key":"is sorted.","Fragments":["Then"]},{"Key":"sorted. Then","Fragments":["when"]},{"Key":"Then when","Fragments":["attempting"]},{"Key":"when attempting","Fragments":["to"]},{"Key":"attempting to","Fragments":["find","scan"]},{"Key":"to find","Fragments":["anagrams,","a","out","this","the","a","and","a","an","a","the","a","the","all","a"]},{"Key":"find anagrams,","Fragments":["I"]},{"Key":"anagrams, I","Fragments":["eliminate"]},{"Key":"I eliminate","Fragments":["comparison"]},{"Key":"eliminate comparison","Fragments":["words"]},{"Key":"comparison words","Fragments":["that"]},{"Key":"words that","Fragments":["aren't","I","are"]},{"Key":"that aren't","Fragments":["the","covered","used"]},{"Key":"aren't the","Fragments":["same"]},{"Key":"same length","Fragments":["or","and","as","as","as","and","as","too,"]},{"Key":"length or","Fragments":["are"]},{"Key":"or are","Fragments":["the"]},{"Key":"are the","Fragments":["same","preferred","same","right","loop","same","same","same","global","same","same","same"]},{"Key":"same words.","Fragments":["The"]},{"Key":"words. The","Fragments":["final"]},{"Key":"The final","Fragments":["check"]},{"Key":"final check","Fragments":["is"]},{"Key":"check is","Fragments":["if","redundant."]},{"Key":"is if","Fragments":["the","you","the"]},{"Key":"if the","Fragments":["sorted","input","input","current","last","first","string","string","key","input","input","same","string","condition","character","input","same","use","strings","two","map","map","same","`map`","phrase","string","word","string","grammer","character","whole","comparison","function","default","string","phrase","entire","string","selected","function","strands","std::chrono","previous","type","last","input","string","buffer","-std=c++11","string","character","alphabetical","string","strands","last","value","first","whole","last","string","string","test","name","current","two","two","sizes","two","two","two","sequences","two","two"]},{"Key":"the sorted","Fragments":["reference","comparison","version","reference","reference","string","order","string"]},{"Key":"sorted reference","Fragments":["word","string","word"]},{"Key":"reference word","Fragments":["is","and","and"]},{"Key":"word is","Fragments":["the","not","not","going","not","disqualified","inserted","inserted","inserted","inserted"]},{"Key":"is the","Fragments":["same","same,","purpose","first","obvious","same","preferred","way","most","C++11","**reference**","input","better","input","word","overhead","tokenizer,","separated","right","using","same","best","fastest.","length","anagram","right","meat","same","same","same","goal","same","first","purpose","most","main","'c'","one","number","new","kind","erroneous","best","same","preferred","common","best","same","default","third.","real","use","init","call","fastest"]},{"Key":"same as","Fragments":["the","boost::to_lower_copy","*acc[word]","lowercase","letter","another","push_back().","isNothing?","```boost::to_upper```.","a","'nth","your"]},{"Key":"as the","Fragments":["sorted","very","function","last","Romans","strings","beer","site","stored","stored","stored","stored","`std::equal`","loop","result","first","condition","solution","C-style","buffer","argument.","argument.","general","tests"]},{"Key":"sorted comparison","Fragments":["word."]},{"Key":"comparison word.","Fragments":["That"]},{"Key":"word. That","Fragments":["will"]},{"Key":"That will","Fragments":["indicate"]},{"Key":"will indicate","Fragments":["an"]},{"Key":"indicate an","Fragments":["anagram."]},{"Key":" `split_words`","Fragments":["is"]},{"Key":"`split_words` is","Fragments":["a"]},{"Key":"a little","Fragments":["simpler","cleaner,","more","bit","less","background","more","bit","simpler.","more","to","bit.","heavy","confusing.","awkward","clever","tricker,","messy","simpler.","'heavy'","simpler.","performance","longer,","hard","less","digging","better.","easier","bit","surprising."]},{"Key":"little simpler","Fragments":["now"]},{"Key":"simpler now","Fragments":["with"]},{"Key":"now with","Fragments":["`boost::tokenizer`.","100%"]},{"Key":" Nice!","Fragments":["I","I","I"]},{"Key":"Nice! I","Fragments":["had","like","went"]},{"Key":"I had","Fragments":["a","not","to","to","to","to","much","to","to","to","some","to","to","to","seen","no","the","to","considered","to","already","a","to","to","problems","a","a","exaugsted","to"]},{"Key":"had a","Fragments":["feeling","feeling","function","null","different","small","global","couple","\"ignore"]},{"Key":"a feeling","Fragments":["boost","there","I","your","something","that"]},{"Key":"feeling boost","Fragments":["must"]},{"Key":"boost must","Fragments":["have"]},{"Key":"must have","Fragments":["had"]},{"Key":"have had","Fragments":["something","separate"]},{"Key":"had something","Fragments":["to"]},{"Key":"something to","Fragments":["handle","\"figure","ensure","consider.","compare"]},{"Key":"to handle","Fragments":["this","the","states,","either","cases"]},{"Key":"handle this","Fragments":["better."]},{"Key":"think it","Fragments":["could","makes","makes","cold","should","could","might","would","would","looks","can","would","helps","clutters","is","would","should","should","is","is","boosts","should","would","doesn't."]},{"Key":"it could","Fragments":["have","simply","be","be","have","happen","possibly","be","make"]},{"Key":"have problem","Fragments":["if"]},{"Key":"problem if","Fragments":["a","one"]},{"Key":"if a","Fragments":["string","word","given","character","lower","string","function","letter","string"]},{"Key":"string with","Fragments":["only","spaces","upper,","your","that"]},{"Key":"with only","Fragments":["white","numbers","one","one","a","one"]},{"Key":"only white","Fragments":["spaces","space","space,"]},{"Key":"white spaces","Fragments":["is","and"]},{"Key":"spaces is","Fragments":["passed."]},{"Key":"is passed.","Fragments":["However,"]},{"Key":"passed. However,","Fragments":["I"]},{"Key":"However, I","Fragments":["don't","like","thought","notice","think","think","don't"]},{"Key":"don't want","Fragments":["to","to","anyone","to","to","to","to","to"]},{"Key":"to add","Fragments":["more","more","the","a","more","say","it"]},{"Key":"add more","Fragments":["checks","special","types."]},{"Key":"more checks","Fragments":["for"]},{"Key":"for special","Fragments":["situations,","characters?"]},{"Key":"special situations,","Fragments":["I'd"]},{"Key":"situations, I'd","Fragments":["just"]},{"Key":"I'd just","Fragments":["prefer"]},{"Key":"just prefer","Fragments":["something"]},{"Key":"prefer something","Fragments":["more"]},{"Key":"something more","Fragments":["robust."]},{"Key":"more robust.","Fragments":["Any"]},{"Key":"robust. Any","Fragments":["ideas?"]},{"Key":"I notice","Fragments":["now","that","is","that"]},{"Key":"notice now","Fragments":["that"]},{"Key":"now that","Fragments":["I've","I"]},{"Key":"that I've","Fragments":["uploaded","missed"]},{"Key":"I've uploaded","Fragments":["this:"]},{"Key":"uploaded this:","Fragments":["I"]},{"Key":"this: I","Fragments":["used"]},{"Key":"I used","Fragments":["cout","to","char","a","the","static","the","``namespace``","in","a","a","a","a","the","a","only","braces","GCC","a","the","it.","both","back()","the","`if`","an","protected","to"]},{"Key":"used cout","Fragments":["when"]},{"Key":"cout when","Fragments":["working,"]},{"Key":"when working,","Fragments":["but"]},{"Key":"working, but","Fragments":["forgot"]},{"Key":"but forgot","Fragments":["to"]},{"Key":"forgot to","Fragments":["remove","remove","remove","include","switch"]},{"Key":"to remove","Fragments":["```","trailing","the","the","the","your","the","it","those","all","the","the","the","a"]},{"Key":"remove ```","Fragments":["#include"]},{"Key":"``` #include","Fragments":["\u003ciostream\u003e"]},{"Key":"#include \u003ciostream\u003e","Fragments":["```"]},{"Key":"\u003ciostream\u003e ```","Fragments":["when"]},{"Key":"``` when","Fragments":["I"]},{"Key":"when I","Fragments":["was","tried","run","read","don't","say","was","have","find","decided","get","have","was","submitted","wanted","saw","decided","declare","copy","come","get","encounter","call","wrote"]},{"Key":"I was","Fragments":["done.","going","expecting","able","using","initially","a","using","running","looking","in","nitpicking","missing","doing","forced","forced","able","forced","forced","still","wondering","trying","using","getting","typing","going","getting","told","missing","using","thinking","thinking","unable","struck","thinking","expecting","able","solving","aiming","thinking","meaning","not","new","just","looking","thinking","probably","passing","storing","trying","stumped","able","getting","unable","thrown","calling,"]},{"Key":"was done.","Fragments":["bob.h"]},{"Key":"done. bob.h","Fragments":["contains:```"]},{"Key":" namespace","Fragments":["bob{","{","bob","bob","grains","anagram"]},{"Key":" std::string","Fragments":["hey(std::string","hey(const","hey(const","hey(std::string","s_func","s;","word","word;","word;","word(","word;","rna{dna};"]},{"Key":"std::string hey(std::string","Fragments":["str_in);","const"]},{"Key":"I took","Fragments":["any1's","some","one","the"]},{"Key":"took any1's","Fragments":["advice"]},{"Key":"any1's advice","Fragments":["and"]},{"Key":"advice and","Fragments":["replaced","change","it"]},{"Key":"and replaced","Fragments":["the"]},{"Key":"replaced the","Fragments":["comments","counter","rbegin()"]},{"Key":"the comments","Fragments":["with","about"]},{"Key":"comments with","Fragments":["sensibly-named"]},{"Key":"with sensibly-named","Fragments":["functions."]},{"Key":"sensibly-named functions.","Fragments":["I"]},{"Key":"functions. I","Fragments":["think","know"]},{"Key":"it makes","Fragments":["the","it","the","a","sense","the","the","a","it","it","an","the","sense.","```hey```","sense","little"]},{"Key":"code look","Fragments":["more","less"]},{"Key":"look more","Fragments":["concise,"]},{"Key":"more concise,","Fragments":["and"]},{"Key":"concise, and","Fragments":["hopefully","I"]},{"Key":"and hopefully","Fragments":["prevents"]},{"Key":"hopefully prevents","Fragments":["the"]},{"Key":"prevents the","Fragments":["TL;DR"]},{"Key":"the TL;DR","Fragments":["effect"]},{"Key":"TL;DR effect","Fragments":[":)"]},{"Key":" Slightly","Fragments":["wordier"]},{"Key":"Slightly wordier","Fragments":["than"]},{"Key":"wordier than","Fragments":["my"]},{"Key":"than my","Fragments":["solutions","earlier","method"]},{"Key":"my solutions","Fragments":["in","for"]},{"Key":"solutions in","Fragments":["other","other"]},{"Key":"in other","Fragments":["languages","languages.","functions","places:","words,","languages.","areas","solutions."]},{"Key":"other languages","Fragments":[":-).","plus"]},{"Key":" I'd","Fragments":["like","prefer","like","also","say","be"]},{"Key":"I'd like","Fragments":["to","to"]},{"Key":"to factor","Fragments":["out","each"]},{"Key":"factor out","Fragments":["the"]},{"Key":"out the","Fragments":["duplication","hard","whole","gcc's","basics,","need","performance","available","tokenizer","``str2Length``","longest/shortest","checks","three","algorythm","boost"]},{"Key":"the duplication","Fragments":["into"]},{"Key":"duplication into","Fragments":["some"]},{"Key":"into some","Fragments":["functional","STL"]},{"Key":"some functional","Fragments":["style"]},{"Key":"functional style","Fragments":["\"any?\""]},{"Key":"style \"any?\"","Fragments":["or"]},{"Key":"\"any?\" or","Fragments":["\"every?\""]},{"Key":"or \"every?\"","Fragments":["functions,"]},{"Key":"\"every?\" functions,","Fragments":["but"]},{"Key":"functions, but","Fragments":["I'm","decided"]},{"Key":"but I'm","Fragments":["a","not","just","not","uncertain","not","not","not"]},{"Key":"I'm a","Fragments":["way","pretty","bit","bit"]},{"Key":"a way","Fragments":["away","to","that","that","of","to","of","that's","where","to","of","to"]},{"Key":"way away","Fragments":["from"]},{"Key":"away from","Fragments":["understanding","the","other","the"]},{"Key":"from understanding","Fragments":["how"]},{"Key":"understanding how","Fragments":["to"]},{"Key":"how to","Fragments":["do","run","restructure","restructure","use","use","use","use","do","do","submit","solve","get","run","do","get","match","best","create","do","handle"]},{"Key":"do that","Fragments":["in","it","either,"]},{"Key":"that in","Fragments":["C++","the","your","the","your","a","the","mind.","my","an"]},{"Key":"in C++","Fragments":["yet.","terms","or","in","I"]},{"Key":"Also, absolutely","Fragments":["NO"]},{"Key":"absolutely NO","Fragments":["idea"]},{"Key":"NO idea","Fragments":["what"]},{"Key":"idea what","Fragments":["good","this"]},{"Key":"what good","Fragments":["C++"]},{"Key":"good C++","Fragments":["style"]},{"Key":"C++ style","Fragments":["is...","cast.","to"]},{"Key":" I've","Fragments":["forgotten","tried","dabbled","tried","certainly","removed","tried","allready","only","just","seen","update","seen"]},{"Key":"I've forgotten","Fragments":["a"]},{"Key":"forgotten a","Fragments":["good"]},{"Key":"good bit","Fragments":["of"]},{"Key":"bit of","Fragments":["C++","overhead","grepping.","C++.","efficiency","C.","overhead.","memory","an","simplification.","overkill,","cleanup.","cleanup.","an","work","unnecessary","code"]},{"Key":"of C++","Fragments":["i","'nice'","are","stipulate","advantages"]},{"Key":"C++ i","Fragments":["used"]},{"Key":"i used","Fragments":["to"]},{"Key":"used to","Fragments":["know","write","check","find","writing","this.","facilitate","them.","it.","so","using","the","C++"]},{"Key":"know so","Fragments":["getting"]},{"Key":"so getting","Fragments":["this"]},{"Key":"getting this","Fragments":["working"]},{"Key":"this working","Fragments":["took"]},{"Key":"working took","Fragments":["a"]},{"Key":"took a","Fragments":["few","string"]},{"Key":"I enjoyed","Fragments":["it"]},{"Key":"enjoyed it","Fragments":["and"]},{"Key":"it and","Fragments":["I","everything","perhaps","just","got","imitation"]},{"Key":"and I","Fragments":["know","find","should","think","would","assumed","absolutely","forgot","didn't","don't","think","think","think","forgot","didn't","don't","believe","believe","can't","believe","had","didn't","won't","like","like","don't","had","think","just","really","am","am","like","was","should","almost","learned","was","spend","have"]},{"Key":"I know","Fragments":["there's","of","```std::find```","which","that","this","I","you","this","this"]},{"Key":"know there's","Fragments":["no"]},{"Key":"there's no","Fragments":["comments.","namespace","clear","need","(english)"]},{"Key":"no comments.","Fragments":["Second"]},{"Key":"comments. Second","Fragments":["Iteration"]},{"Key":"Second Iteration","Fragments":["will"]},{"Key":"Iteration will","Fragments":["have"]},{"Key":" Instead","Fragments":["of:","of","of"]},{"Key":" if","Fragments":["(s_trimmed.substr","(s.back()","(spaceless","(boost::erase_all(sth,","(is_silent(sth))","(it","(c","(capacity","(i","(not","(output_map.count(c)","you","numAlphas==0,","you","you","(strand1[i]","(anyExpression","(anyExpression)","(message.empty())","(","(","(m_wordLower","(wordChars"]},{"Key":"if (s_trimmed.substr","Fragments":["(s_trimmed.size()-1,1)"]},{"Key":"(s_trimmed.substr (s_trimmed.size()-1,1)","Fragments":["=="]},{"Key":"(s_trimmed.size()-1,1) ==","Fragments":["\"?\")"]},{"Key":" you","Fragments":["can","should","know","can","made","can"]},{"Key":"can simply","Fragments":["write:","write","return"]},{"Key":"if (s.back()","Fragments":["=="]},{"Key":"(s.back() ==","Fragments":["\"?\")"]},{"Key":" Wasn't","Fragments":["sure"]},{"Key":"Wasn't sure","Fragments":["about"]},{"Key":"sure about","Fragments":["what","the","implementing","this"]},{"Key":"about what","Fragments":["to"]},{"Key":"what to","Fragments":["do","return"]},{"Key":"do with","Fragments":["sentences","letter","just","an","trim,"]},{"Key":"with sentences","Fragments":["with"]},{"Key":"sentences with","Fragments":["only"]},{"Key":"only numbers","Fragments":["that","and","with"]},{"Key":"numbers that","Fragments":["terminates"]},{"Key":"that terminates","Fragments":["on"]},{"Key":"terminates on","Fragments":["an"]},{"Key":"on an","Fragments":["exclamation","empty","empty","empty","exception","old","empty","empty"]},{"Key":"an exclamation","Fragments":["point;","point.","mark","mark","mark.","mark"]},{"Key":"exclamation point;","Fragments":["decided"]},{"Key":"point; decided","Fragments":["to"]},{"Key":"decided to","Fragments":["interpret","move","use","rewrite","check","remove","combine","crunch","go","work","use","first","check","do"]},{"Key":"to interpret","Fragments":["as"]},{"Key":"interpret as","Fragments":["'talking"]},{"Key":"as 'talking","Fragments":["forcefully'"]},{"Key":"'talking forcefully'","Fragments":["(as"]},{"Key":"forcefully' (as","Fragments":["in"]},{"Key":"(as in","Fragments":["test"]},{"Key":"in test","Fragments":["case","suite"]},{"Key":"test case","Fragments":["4).","and","missing","where","at","took","of"]},{"Key":"of bool","Fragments":["flags"]},{"Key":"bool flags","Fragments":["in"]},{"Key":"flags in","Fragments":["use"]},{"Key":"in use","Fragments":["here."]},{"Key":"use here.","Fragments":["Perhaps"]},{"Key":"here. Perhaps","Fragments":["there"]},{"Key":"Perhaps there","Fragments":["is"]},{"Key":"a clearer","Fragments":["way?"]},{"Key":" Don't","Fragments":["call","know","give"]},{"Key":"Don't call","Fragments":["\"back()\""]},{"Key":"call \"back()\"","Fragments":["method"]},{"Key":"\"back()\" method","Fragments":["on"]},{"Key":"method on","Fragments":["a","this"]},{"Key":"on a","Fragments":["std::string","first","daily","chessboard.","random","unrelated","passwordlist","run","standard","`char`","type","named","map","string"]},{"Key":"a std::string","Fragments":["unless","\u0026"]},{"Key":"std::string unless","Fragments":["you"]},{"Key":"unless you","Fragments":["are","need","will"]},{"Key":"are certain","Fragments":["the"]},{"Key":"certain the","Fragments":["string"]},{"Key":"string is","Fragments":["not","empty","\"HE","empty","a","all","ALL","a","analyzed","analyzed","the","pretty","empty","```word.clear();```","empty.","passed","capitals.","only","shorter","all","less","now","a","empty","very","undefined","null","null","null,","empty","capitalized).","uppercase","lower?","\"what's"]},{"Key":" whoops","Fragments":["that"]},{"Key":"whoops that","Fragments":["break"]},{"Key":"that break","Fragments":["should"]},{"Key":"break should","Fragments":["be"]},{"Key":"be continue,","Fragments":["i"]},{"Key":"continue, i","Fragments":["got"]},{"Key":"i got","Fragments":["lucky","this"]},{"Key":"got lucky","Fragments":["on"]},{"Key":"lucky on","Fragments":["the"]},{"Key":"on the","Fragments":["test","string","free","right","trailing","compiler","subject.","next","command","other","classes.","set","same","first","first","exercise","subject","(few)","code","`map\u003cstring,","heap","commenting","changing","compiler","string,","ignores_punctuation","function","stack","if","[exercism","use","respective","implementation","word_count_test.cpp","definition,","variable","string","input","website."]},{"Key":" What's","Fragments":["the","the","with"]},{"Key":"What's the","Fragments":["benefit","purpose","rule"]},{"Key":"the benefit","Fragments":["of","of","of","of"]},{"Key":"benefit of","Fragments":["passing","choosing","keyword","making"]},{"Key":"of passing","Fragments":["char"]},{"Key":"passing char","Fragments":["as"]},{"Key":"char as","Fragments":["const","an"]},{"Key":"as const","Fragments":["reference?","references","correctness","reference.","string","variables."]},{"Key":" yep,","Fragments":["I"]},{"Key":"yep, I","Fragments":["had"]},{"Key":"had not","Fragments":["read"]},{"Key":"not read","Fragments":["up"]},{"Key":"read up","Fragments":["on"]},{"Key":"up on","Fragments":["that","that"]},{"Key":"on that","Fragments":["yet","using","the","string.","particular","though."]},{"Key":"that yet","Fragments":[":)"]},{"Key":"yet :)","Fragments":["(I'm"]},{"Key":":) (I'm","Fragments":["limited"]},{"Key":"(I'm limited","Fragments":["in"]},{"Key":"limited in","Fragments":["c++11"]},{"Key":"in c++11","Fragments":["still)"]},{"Key":" and","Fragments":["holy","last","on","in","he","maybe","the","you"]},{"Key":"and holy","Fragments":["crap"]},{"Key":"holy crap","Fragments":["that"]},{"Key":"crap that","Fragments":["function"]},{"Key":"that function","Fragments":["argument","calls","could"]},{"Key":"function argument","Fragments":["initializer"]},{"Key":"argument initializer","Fragments":["syntax"]},{"Key":"initializer syntax","Fragments":["would"]},{"Key":"syntax would","Fragments":["have"]},{"Key":"would have","Fragments":["confused","been","been","done","to","done","added","used","changed","been","also","still","had","to","been","wrapped","just","required"]},{"Key":"have confused","Fragments":["the"]},{"Key":"confused the","Fragments":["hell"]},{"Key":"the hell","Fragments":["out"]},{"Key":"hell out","Fragments":["of"]},{"Key":"of me","Fragments":["if"]},{"Key":"me if","Fragments":["I","I","I'm"]},{"Key":"if I","Fragments":["first","use","missed","missed","prefer","didn't","should","am","need","can.","ever","could","agree","should","should","encountered","pushed","was","could","did,","would"]},{"Key":"I first","Fragments":["saw","thought","processed"]},{"Key":"first saw","Fragments":["it"]},{"Key":"saw it","Fragments":["in"]},{"Key":"in live","Fragments":["code"]},{"Key":"live code","Fragments":[":P"]},{"Key":" that's","Fragments":["a"]},{"Key":"that's a","Fragments":["really","good"]},{"Key":"a really","Fragments":["clever","good","elegant","good","dumb"]},{"Key":"really clever","Fragments":["idea."]},{"Key":" can","Fragments":["i"]},{"Key":"can i","Fragments":["ask,"]},{"Key":"i ask,","Fragments":["what's"]},{"Key":"ask, what's","Fragments":["the"]},{"Key":"what's the","Fragments":["thought"]},{"Key":"the thought","Fragments":["behind"]},{"Key":"thought behind","Fragments":["the"]},{"Key":"behind the","Fragments":["ordering"]},{"Key":"the ordering","Fragments":["of"]},{"Key":"ordering of","Fragments":["the"]},{"Key":" I'm","Fragments":["assuming","trying","rather","STUCKED!","kind","not","only","working","not","not","not","a","not","sorry","submitting","not","sorry,","not","surprised","working","new","happy","not","not","a","glad","not","just","not","not","not","conflicted","not","curious","learning","curious","not","also","also"]},{"Key":"I'm assuming","Fragments":["it's"]},{"Key":"assuming it's","Fragments":["to"]},{"Key":"it's to","Fragments":["do","such"]},{"Key":"with letter","Fragments":["usage"]},{"Key":"letter usage","Fragments":["frequency,"]},{"Key":"usage frequency,","Fragments":["and"]},{"Key":"frequency, and","Fragments":["keeping"]},{"Key":"and keeping","Fragments":["the"]},{"Key":"keeping the","Fragments":["product","code","same","class","helper"]},{"Key":"the product","Fragments":["low."]},{"Key":"product low.","Fragments":["I"]},{"Key":"low. I","Fragments":["can"]},{"Key":"I can","Fragments":["see","get.","still","look","better","see","see","replace","see","make.","handle","index","think","confirm","get","skip","use","use","change","easily","get","optimize","pass"]},{"Key":"can see","Fragments":["the","being","the","that","I'm","from"]},{"Key":"see the","Fragments":["vowels","necessity","benefit","benefit","flaw","bucket","song","DFA","point"]},{"Key":"the vowels","Fragments":["are"]},{"Key":"vowels are","Fragments":["low"]},{"Key":"are low","Fragments":["numbers,"]},{"Key":"low numbers,","Fragments":["but"]},{"Key":"numbers, but","Fragments":["am"]},{"Key":"but am","Fragments":["curious"]},{"Key":"am curious","Fragments":["how","why"]},{"Key":"curious how","Fragments":["you"]},{"Key":"you chose","Fragments":["the","to","it"]},{"Key":"chose the","Fragments":["order"]},{"Key":"the order","Fragments":["(why","of"]},{"Key":"order (why","Fragments":["e"]},{"Key":"(why e","Fragments":["isn't"]},{"Key":"e isn't","Fragments":["2)"]},{"Key":" Isn't","Fragments":["it"]},{"Key":"Isn't it","Fragments":["a"]},{"Key":"it a","Fragments":["bit","little","whole","lot","const.","try","little","try","little","little","different","bit","bit"]},{"Key":"a bit","Fragments":["of","more","of","unexpected","more","tricky.","annoying","weird.","curious","simpler","heavy-handed","icky.","torn","heavy","and","of","of","too","dubious","of","of","of","clearer","heavy-handed","iffy","of","odd","strange,","unclear..","shorter","mask","heavy","over","to","of","clearer.","convoluted.","shift","trying","frustrating","fudged","of","too","more","more,","more","difficult"]},{"Key":"of overhead","Fragments":["to","here,","if"]},{"Key":"overhead to","Fragments":["use"]},{"Key":"use regular","Fragments":["expressions","expressions","expressions"]},{"Key":"regular expressions","Fragments":["on","but","would","(regex)","improve","was","so","to","I","instead","are","can","as","for"]},{"Key":"expressions on","Fragments":["this"]},{"Key":"on this","Fragments":["simple","that","one.","code.","crap?","iteration,","one.","exercise","one.","one","one.","because","total,"]},{"Key":"this simple","Fragments":["example","it","algorithm","formatted","with","exercise","format","algorithm"]},{"Key":"simple example","Fragments":["?"]},{"Key":"should also","Fragments":["avoid","use"]},{"Key":"also avoid","Fragments":["having"]},{"Key":"avoid having","Fragments":["multiple","to"]},{"Key":"having multiple","Fragments":["exit"]},{"Key":"multiple exit","Fragments":["points"]},{"Key":"exit points","Fragments":["-"]},{"Key":"points -","Fragments":["for"]},{"Key":"- for","Fragments":["some"]},{"Key":"for some","Fragments":["standards","reason","of","of"]},{"Key":"some standards","Fragments":["it"]},{"Key":"standards it","Fragments":["is"]},{"Key":"not permitted","Fragments":["(like"]},{"Key":"permitted (like","Fragments":["MISRA)"]},{"Key":"need the","Fragments":["lambda",".h","intermediate","const","if","`is_numbers_only`","`i`","`break;`","test","saysNothing()","ch"]},{"Key":"the lambda","Fragments":["on"]},{"Key":"lambda on","Fragments":["line"]},{"Key":"on line","Fragments":["40,","25?","13.","13;","10.","16-18,","28","14","26,","9","15.","20,","21.","20,","34."]},{"Key":"line 40,","Fragments":["just"]},{"Key":"40, just","Fragments":["cast"]},{"Key":"just cast","Fragments":["to"]},{"Key":"cast to","Fragments":["the","make"]},{"Key":"the correct","Fragments":["overload","response","response","output","order","decision.","way","one.","indexed","order.","masks","index.","magnitude","point"]},{"Key":"correct overload","Fragments":["of"]},{"Key":"overload of","Fragments":["to_rna."]},{"Key":" 1.","Fragments":["This","This","The","Make","to","The","The","\"Bridge\"","simple","typedef","Take","I"]},{"Key":"1. This","Fragments":["is","seems"]},{"Key":"This is","Fragments":["my","what's","a","looking","looking","likely","likely","tested,","arguably","definitely","a","my","basically","nice","a","sort","very","a","the","pretty","nice","a","much","another","a","not","a","a","my","a","easy","because","just","also","a","a","my","a","bad.","a","also","much","the","way","an"]},{"Key":"is my","Fragments":["first","implementation","first","very","bane","oppinion:","first","first","first","first","upper"]},{"Key":"my first","Fragments":["stab","ever","time","incursion","submission","time","c++","encounter"]},{"Key":"first stab","Fragments":["at"]},{"Key":"stab at","Fragments":["using"]},{"Key":"at using","Fragments":["exercism,","`\u003calgorithm\u003e`'s"]},{"Key":"using exercism,","Fragments":["probably"]},{"Key":"exercism, probably","Fragments":["doing"]},{"Key":"probably doing","Fragments":["this"]},{"Key":"doing this","Fragments":["completely","way","is","but"]},{"Key":"this completely","Fragments":["wrong."]},{"Key":"This seems","Fragments":["sort","like","like"]},{"Key":"seems sort","Fragments":["of","of"]},{"Key":"sort of","Fragments":["dumb.","had","wondering","stupid.","response","depends","what","dispatch","feels","ambiguous,"]},{"Key":"of dumb.","Fragments":["I"]},{"Key":"dumb. I","Fragments":["seem"]},{"Key":"I seem","Fragments":["to"]},{"Key":"seem to","Fragments":["be","indicate","iterate","be","cover","be","get","matter.","be"]},{"Key":"to be","Fragments":["able","part","available","able","public","very","the","a","easily","removed","white","a","the","passed","highly","free","succinct/clever.","made","squeezing","safer,","more","used","made,","ejected","considered","false","aware","enlarged","changed","changed","significantly","implemented","optimized","sure.","more","0","a","included","called","const:","a","so","using","performed,","the","visible","active","something","the","challenging","challenging","0","challenging","static","first,","'?',","in","in","(conceptually)","way","present","pedantic,","sure","sure","around","a","called","calculated","going","a","able","0","the","unsafe","defined","called","exact","without","consistent","more","bad","passed","instantiated,","static","the","within","used.","thrown.","a","as","uppercase)","commented","accurate","increased.","true?","too","a","dereferenced"]},{"Key":"be able","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to)."]},{"Key":"able to","Fragments":["submit","run","call","pass","see","achieve","greatly","express","get","optimize.","use","upload","use","make","pass","get","get"]},{"Key":"to submit","Fragments":["either","the","if","multiple","one","two"]},{"Key":"submit either","Fragments":["the"]},{"Key":"either the","Fragments":["header","last"]},{"Key":"header or","Fragments":["the"]},{"Key":"or the","Fragments":["cpp,","static","new","'\\w'","result","whole"]},{"Key":"the cpp,","Fragments":["but"]},{"Key":"cpp, but","Fragments":["not"]},{"Key":"not both?","Fragments":["So"]},{"Key":"both? So","Fragments":["I"]},{"Key":"So I","Fragments":["put","need","split","need","would","just","wrestled","challenged","gone","implemented","use"]},{"Key":"I put","Fragments":["everything","it","a","in","the","in"]},{"Key":"put everything","Fragments":["in"]},{"Key":"everything in","Fragments":["the","`hey`","the"]},{"Key":"the header,","Fragments":["but","which"]},{"Key":"header, but","Fragments":["that's"]},{"Key":"but that's","Fragments":["somewhat","less","just"]},{"Key":"that's somewhat","Fragments":["bad"]},{"Key":"somewhat bad","Fragments":["form."]},{"Key":"1. The","Fragments":["test","code","hey","function"]},{"Key":"The test","Fragments":["suite","file","suite"]},{"Key":"test suite","Fragments":["demanded","you","required","is","that","doesn't","has","\"Master"]},{"Key":"suite demanded","Fragments":["a"]},{"Key":"demanded a","Fragments":["bob::"]},{"Key":"a bob::","Fragments":["qualifier;"]},{"Key":"bob:: qualifier;","Fragments":["could"]},{"Key":"qualifier; could","Fragments":["have"]},{"Key":"the static","Fragments":["class","class"]},{"Key":"static class","Fragments":["method","case,","method?","variables","members."]},{"Key":"class method","Fragments":["approach;"]},{"Key":"method approach;","Fragments":["not"]},{"Key":"approach; not","Fragments":["sure"]},{"Key":"not sure","Fragments":["what's","if","why","I","if","it's","why","if","about","why","what","if","how","if","if","whether","if","if","if","of","if","it","it's","if","your","it'll","I","if","if","how","if","was","it","if","exactly","if","I'm","what"]},{"Key":"sure what's","Fragments":["intended/desired,"]},{"Key":"what's intended/desired,","Fragments":["so"]},{"Key":"intended/desired, so","Fragments":["went"]},{"Key":"so went","Fragments":["with"]},{"Key":"went with","Fragments":["the","regexes","what","[]"]},{"Key":"class case,","Fragments":["I"]},{"Key":"case, I","Fragments":["guess.","want"]},{"Key":"* `bob::hey()`","Fragments":["avoids"]},{"Key":"`bob::hey()` avoids","Fragments":["multiple"]},{"Key":"avoids multiple","Fragments":["iterations"]},{"Key":"multiple iterations","Fragments":["over"]},{"Key":"iterations over","Fragments":["the","the","2"]},{"Key":"* Bob's","Fragments":["replies"]},{"Key":"Bob's replies","Fragments":["are"]},{"Key":"replies are","Fragments":["accessible"]},{"Key":"are accessible","Fragments":["as","to"]},{"Key":"accessible as","Fragments":["constants"]},{"Key":"as constants","Fragments":["to","and","at"]},{"Key":"constants to","Fragments":["make"]},{"Key":"to make","Fragments":["it","the","this","it","the","things","sure","a","it","sure","an","it","against","the","it","it","it","all","all","all","all","this","'hey'","the","this","the","better","it","sure","your","code","more","you","the","this","the","the","it","this","a","a","the","the","a","any","sure","sure","sure","bob","it","sure","it","this","it","it","a","at","the"]},{"Key":"make it","Fragments":["easy","a","clearer","more","reasonably","more","failed.","clear","easy","easer","look","shorter?","clearer","more","a","all","easier","better","so","fit","easier","return","look","more","easier"]},{"Key":"it easy","Fragments":["to","to","to"]},{"Key":"easy to","Fragments":["test","solve.","understand,","solve","scale","scale","scale","scale","index","read,","read.","understand.","understand","read,","do"]},{"Key":"test Bob's","Fragments":["response"]},{"Key":"Bob's response","Fragments":["(e.g.","from"]},{"Key":"response (e.g.","Fragments":["`if"]},{"Key":"(e.g. `if","Fragments":["(bob::hey(msg)"]},{"Key":"`if (bob::hey(msg)","Fragments":["=="]},{"Key":"(bob::hey(msg) ==","Fragments":["bob::REPLY_EMPTY)"]},{"Key":"== bob::REPLY_EMPTY)","Fragments":["{"]},{"Key":"bob::REPLY_EMPTY) {","Fragments":["}`)."]},{"Key":"{ }`).","Fragments":["If"]},{"Key":"}`). If","Fragments":["Bob"]},{"Key":"If Bob","Fragments":["changes"]},{"Key":"Bob changes","Fragments":["his"]},{"Key":"changes his","Fragments":["reply"]},{"Key":"his reply","Fragments":["string,"]},{"Key":"reply string,","Fragments":["the"]},{"Key":"string, the","Fragments":["code"]},{"Key":"code that","Fragments":["uses","all","would","will","use"]},{"Key":"that uses","Fragments":["these"]},{"Key":"uses these","Fragments":["constants"]},{"Key":"these constants","Fragments":["will","spill"]},{"Key":"constants will","Fragments":["still"]},{"Key":"will still","Fragments":["work.","go"]},{"Key":"I considered","Fragments":["using","using","whether","non-alpha"]},{"Key":"using regular","Fragments":["expressions","expressions","expressions","expression.","expressions.","expressions."]},{"Key":"expressions but","Fragments":["they"]},{"Key":"but they","Fragments":["would","are","might"]},{"Key":"they would","Fragments":["not","copy."]},{"Key":"would not","Fragments":["increase","pass","recommend","have","have","be","use","bring","be"]},{"Key":"not increase","Fragments":["readability"]},{"Key":"increase readability","Fragments":["in"]},{"Key":"readability in","Fragments":["my"]},{"Key":"in my","Fragments":["opinion.","code","translation","opinion.","own","opinion","former","code.","opinion","environment","second","program.","oppion.","code.","code.","editor","ruby","day","opinion","previous","system,","solution.","next","vim","implementation.","code."]},{"Key":"also considered","Fragments":["just","someone","trying"]},{"Key":"considered just","Fragments":["iterating"]},{"Key":"just iterating","Fragments":["over","through"]},{"Key":"string once","Fragments":["and","is","one"]},{"Key":"once and","Fragments":["checking","do"]},{"Key":"and checking","Fragments":["all","for","if","them","to"]},{"Key":"checking all","Fragments":["of"]},{"Key":"all of","Fragments":["the","your","the","them","update_word_count()","the","the","the","the","the","the"]},{"Key":"the conditions","Fragments":["at","for","for"]},{"Key":"conditions at","Fragments":["once."]},{"Key":"at once.","Fragments":["But","However,"]},{"Key":"once. But","Fragments":["I"]},{"Key":"don't feel","Fragments":["like","like"]},{"Key":"feel like","Fragments":["the","it's","the","using","it","doing","it.","I","sharing.","it"]},{"Key":"like the","Fragments":["strings","algorithm","perfect","way","boost","breakdown","for","brevity","fact","way","solution","boost","flow","use","overall","overall","efficiency","recursive","input","idea","use","design","lack","way","idea","explicit","new","insertion/increment","trinary","variable","idea","use","idea","verbosity","obvious","code's","to_lower_copy.","bucketizing","signatures","idea","approach","use","need","use","str.find_last_not_of.","neatness","way","use"]},{"Key":"the strings","Fragments":["expected","and","associated","directly.","get","by","and","weren't","as","is","length","they","as","at","for","on","succinctly,"]},{"Key":"strings expected","Fragments":["here"]},{"Key":"expected here","Fragments":["are"]},{"Key":"here are","Fragments":["long","a"]},{"Key":"are long","Fragments":["enough"]},{"Key":"long enough","Fragments":["to"]},{"Key":"enough to","Fragments":["consider","bother","hold","be","do","make","solve","get"]},{"Key":"to consider","Fragments":["this","that","is","using","here"]},{"Key":"consider this","Fragments":["micro-optimization.","a"]},{"Key":"should consider","Fragments":["using","error"]},{"Key":"consider using","Fragments":["`isalpha()`","an","an","iterators","iterators","an"]},{"Key":"using `isalpha()`","Fragments":["instead"]},{"Key":"`isalpha()` instead","Fragments":["of"]},{"Key":"of manually","Fragments":["checking"]},{"Key":"manually checking","Fragments":["ascii"]},{"Key":"checking ascii","Fragments":["ranges"]},{"Key":"ascii ranges","Fragments":["since"]},{"Key":"ranges since","Fragments":["you"]},{"Key":"since you","Fragments":["are","can","have","don't","can","are","seem","create","gave","are","are","are"]},{"Key":"are already","Fragments":["using","reserved"]},{"Key":"already using","Fragments":["`toupper()`"]},{"Key":"using `toupper()`","Fragments":["from"]},{"Key":"`toupper()` from","Fragments":["the"]},{"Key":"from the","Fragments":["same","test","C","very","sieve","vector","ends","ends","specification","decisions","isspace","helper","bob::hey","requirement","`hey`","original","person","outside","heap","overhead","\"check","end","prior","earlier","readme","simplicity","combinatorial","caller.","word","trial","primary","same","NitPicks","++","call","for","header","last","right","remaining","first","Linux","convert.","final","last","input","latter","last","anagram_test.cpp","requirements,"]},{"Key":"The header","Fragments":["file"]},{"Key":"file is","Fragments":["located","empty","bad"]},{"Key":"is located","Fragments":["in"]},{"Key":"located in","Fragments":["iteration"]},{"Key":"in iteration","Fragments":["2.","6,"]},{"Key":"I thought","Fragments":["of","using","the","it","if","of","that","this","I","that","that","was","an","of","one","I","the","it","that"]},{"Key":"thought of","Fragments":["this","using","making","it","as","using","using"]},{"Key":"of this","Fragments":["problem","exercise","algorithm","solution","argument.","code","application?","method,","ambiguity,","character","project.","in","problem","function","exercise.","writing.","function.","one","call"]},{"Key":"this problem","Fragments":["as","a","use","was","nicely.","but","other"]},{"Key":"problem as","Fragments":["a","follows:"]},{"Key":"a series","Fragments":["of","of"]},{"Key":"series of","Fragments":["4","functions","four"]},{"Key":"of 4","Fragments":["cases","meaning"]},{"Key":"4 cases","Fragments":["(silence,"]},{"Key":"cases (silence,","Fragments":["questions,"]},{"Key":"(silence, questions,","Fragments":["yelling,"]},{"Key":"questions, yelling,","Fragments":["and"]},{"Key":"yelling, and","Fragments":["everything","ends"]},{"Key":"and everything","Fragments":["else)","would","continue","is"]},{"Key":"everything else)","Fragments":["that"]},{"Key":"else) that","Fragments":["could"]},{"Key":"be clearly","Fragments":["defined"]},{"Key":"clearly defined","Fragments":["with"]},{"Key":"defined with","Fragments":["if"]},{"Key":"with if","Fragments":["statements.","the"]},{"Key":"if statements.","Fragments":["Silence","Is"]},{"Key":"statements. Silence","Fragments":["is"]},{"Key":"Silence is","Fragments":["defined"]},{"Key":"is defined","Fragments":["in","as","as","as","by","as","only"]},{"Key":"my code","Fragments":["as","nicer.","that","and","around","is","more","shows","shows","could","shows","lacks","which","in","and","to"]},{"Key":"code as","Fragments":["either","clean","my","readable","simple"]},{"Key":"as either","Fragments":["an"]},{"Key":"either an","Fragments":["empty"]},{"Key":"empty string","Fragments":["or","and","`\"\"`","would","-","(","-","to","\"\"","is","when"]},{"Key":"string or","Fragments":["a","not."]},{"Key":"or a","Fragments":["string","some","question?","for","grep","functional","number","number","private","recursive","namespace"]},{"Key":"string containing","Fragments":["only","capital","no","no","no"]},{"Key":"containing only","Fragments":["whitespace."]},{"Key":"only whitespace.","Fragments":["Questions"]},{"Key":"whitespace. Questions","Fragments":["are"]},{"Key":"Questions are","Fragments":["defined"]},{"Key":"are defined","Fragments":["as","to"]},{"Key":"defined as","Fragments":["any","yelling,","either:","any","size_t,","containing","a"]},{"Key":"as any","Fragments":["string","string"]},{"Key":"any string","Fragments":["that","which"]},{"Key":"not defined","Fragments":["as","imho"]},{"Key":"as yelling,","Fragments":["and"]},{"Key":"and ends","Fragments":["with"]},{"Key":"ends with","Fragments":["a","non-alphanum","a","a"]},{"Key":"a question","Fragments":["mark.","with","instead.","because","mark","mark,","mark","mark","mark.","mark","as","mark.","contains","mark.","and","mark,","mark","like:","passed"]},{"Key":"question mark.","Fragments":["Yelling","Normal","I","Also,"]},{"Key":"mark. Yelling","Fragments":["is"]},{"Key":"Yelling is","Fragments":["defined"]},{"Key":"as either:","Fragments":["a)"]},{"Key":"either: a)","Fragments":["a"]},{"Key":"a) a","Fragments":["string"]},{"Key":"containing capital","Fragments":["letters"]},{"Key":"capital letters","Fragments":["but","in"]},{"Key":"letters but","Fragments":["no","ending"]},{"Key":"but no","Fragments":["lower-case","lower","tests"]},{"Key":"no lower-case","Fragments":["letters,","letters."]},{"Key":"lower-case letters,","Fragments":["or"]},{"Key":"letters, or","Fragments":["b)"]},{"Key":"or b)","Fragments":["a"]},{"Key":"b) a","Fragments":["string"]},{"Key":"containing no","Fragments":["letters","lowercase","letters","letters"]},{"Key":"no letters","Fragments":["and","to","but","and"]},{"Key":"letters and","Fragments":["ending","uppercase","upper","that"]},{"Key":"and ending","Fragments":["in","in","of"]},{"Key":"ending in","Fragments":["an","an","an","'s'?"]},{"Key":"exclamation point.","Fragments":["The"]},{"Key":"point. The","Fragments":["'everything"]},{"Key":"The 'everything","Fragments":["else'"]},{"Key":"'everything else'","Fragments":["case"]},{"Key":"else' case","Fragments":["is"]},{"Key":"case is","Fragments":["defined","the","now"]},{"Key":"string which","Fragments":["does"]},{"Key":"which does","Fragments":["not","not","just"]},{"Key":"does not","Fragments":["fit","present","free","convert","use","need","need","match","have","need","have","need","modify","trigger","have","require","require","mention","pass","seem"]},{"Key":"not fit","Fragments":["the"]},{"Key":"fit the","Fragments":["previous","to"]},{"Key":"the previous","Fragments":["three","attempt.","classifications.","robot","implementation.","commit"]},{"Key":"previous three","Fragments":["definitions."]},{"Key":"I pared","Fragments":["down"]},{"Key":"pared down","Fragments":["the"]},{"Key":"down the","Fragments":["if","code","rabbit","road","three","test","fat.","route"]},{"Key":"the if","Fragments":["statements","statement","statement","statement.","with","condition."]},{"Key":"if statements","Fragments":["to","can"]},{"Key":"statements to","Fragments":["just","test"]},{"Key":"to just","Fragments":["the","assume","keep","do...","store","ignore","return","put"]},{"Key":"just the","Fragments":["necessary","content","absence","first","standard"]},{"Key":"the necessary","Fragments":["ones,","information"]},{"Key":"necessary ones,","Fragments":["and"]},{"Key":"ones, and","Fragments":["added"]},{"Key":"and added","Fragments":["comments","the","a"]},{"Key":"added comments","Fragments":["to"]},{"Key":"comments to","Fragments":["make","describe"]},{"Key":"- `constexpr`","Fragments":["needs"]},{"Key":"`constexpr` needs","Fragments":["`-std=c++14`"]},{"Key":"needs `-std=c++14`","Fragments":["(in"]},{"Key":"`-std=c++14` (in","Fragments":["`CMakeList.txt`)"]},{"Key":"Also, we","Fragments":["could"]},{"Key":"we could","Fragments":["do","avoid","write","just","use","take"]},{"Key":"could do","Fragments":["without","with","the","with"]},{"Key":"do without","Fragments":["the","being"]},{"Key":"the ```triangle::kind(int,","Fragments":["int,"]},{"Key":"```triangle::kind(int, int,","Fragments":["int)```"]},{"Key":"int, int)```","Fragments":["overload,"]},{"Key":"int)``` overload,","Fragments":["but"]},{"Key":"overload, but","Fragments":["I"]},{"Key":"in for","Fragments":["completeness.","each","loops."]},{"Key":"could probably","Fragments":["have","rewrite","drop","use","remove"]},{"Key":"probably have","Fragments":["used"]},{"Key":"used the","Fragments":["[`trim()`](http://www.boost.org/doc/libs/1_55_0/doc/html/boost/algorithm/trim.html)","boost","cstring","command","same","char*","_alphaFound_","boost","steps"]},{"Key":"the [`trim()`](http://www.boost.org/doc/libs/1_55_0/doc/html/boost/algorithm/trim.html)","Fragments":["algorithm"]},{"Key":"[`trim()`](http://www.boost.org/doc/libs/1_55_0/doc/html/boost/algorithm/trim.html) algorithm","Fragments":["from"]},{"Key":"algorithm from","Fragments":["boost,"]},{"Key":"from boost,","Fragments":["but"]},{"Key":"boost, but","Fragments":["it"]},{"Key":"it modifies","Fragments":["the"]},{"Key":"modifies the","Fragments":["argument","strings"]},{"Key":"the argument","Fragments":["in-place,","of","of","to","type","order"]},{"Key":"argument in-place,","Fragments":["so"]},{"Key":"in-place, so","Fragments":["I'd"]},{"Key":"so I'd","Fragments":["still"]},{"Key":"I'd still","Fragments":["have"]},{"Key":"still have","Fragments":["to","just","a","it.","to"]},{"Key":"to write","Fragments":["something","loops","a","an",":)","a","a","and","and","a","my","four","my","my","\"clever\"","due","just","`vector\u003cstring\u003e::const_iterator`,","functions"]},{"Key":"write something","Fragments":["that","just","like"]},{"Key":"that took","Fragments":["a"]},{"Key":"string and","Fragments":["returned","we","to","just","just","assign","then","then","with","we","make","trying","checking","check","then","find"]},{"Key":"and returned","Fragments":["a"]},{"Key":"returned a","Fragments":["string"]},{"Key":"as I've","Fragments":["written"]},{"Key":"I've written","Fragments":["it."]},{"Key":"written it.","Fragments":["I"]},{"Key":"it. I","Fragments":["suppose","get","think","would","opted","didn't","didn't","really","don't","still"]},{"Key":"I suppose","Fragments":["it","these","it","if","it's","the"]},{"Key":"suppose it","Fragments":["would","is"]},{"Key":"would make","Fragments":["it","the","the","the","the","the","everything","your","the","it","multiple","the","the"]},{"Key":"little cleaner,","Fragments":["but"]},{"Key":"cleaner, but","Fragments":["not"]},{"Key":"was going","Fragments":["to","to","after,","to"]},{"Key":"going to","Fragments":["have","be","leave","modify","say","be,","fix","call","make","be","re-write","be","be","further","learn","pull","be","get","see","go","modify","use","try","modify","kill","modify","make","get","happen."]},{"Key":"to have","Fragments":["a","them","a","a","a","the","{0,","it","always","a","word_hash,","different","to","seen","those.","a","it","the","done","these","to","explicit","it"]},{"Key":"a normal","Fragments":["class,","for-loop"]},{"Key":"normal class,","Fragments":["but"]},{"Key":"class, but","Fragments":["then","the","that"]},{"Key":"but then","Fragments":["I","I"]},{"Key":"then I","Fragments":["had","suggest","could","could","could","poked","can't","think","wonder","would"]},{"Key":"had to","Fragments":["switch","wrap","really","really","add","use","declare","manually","put","put","skip","nitpick","draw","draw","introduce","alter","handle","mess"]},{"Key":"to switch","Fragments":["to","the","back"]},{"Key":"switch to","Fragments":["a","isalpha"]},{"Key":"a static","Fragments":["implementation,","function","class","string","method","method","public","method","method","member","member","function","function","member","function.","member","member","compute"]},{"Key":"static implementation,","Fragments":["since"]},{"Key":"implementation, since","Fragments":["the"]},{"Key":"since the","Fragments":["test","file","problem","conditions","same","function","specification","majority","string","value","call","function"]},{"Key":"test required","Fragments":["that"]},{"Key":"required that","Fragments":["kind"]},{"Key":"that kind","Fragments":["of","of"]},{"Key":"What about","Fragments":["boost/tokenizer.hpp?","leading","the"]},{"Key":"about boost/tokenizer.hpp?","Fragments":["Does"]},{"Key":"boost/tokenizer.hpp? Does","Fragments":["exactly"]},{"Key":"Does exactly","Fragments":["what"]},{"Key":"exactly what","Fragments":["the","all","is","you"]},{"Key":"what the","Fragments":["exercise","code","purpose","pros","best","other"]},{"Key":"the exercise","Fragments":["requires,","requires","to","is","for","by"]},{"Key":"exercise requires,","Fragments":["minus"]},{"Key":"requires, minus","Fragments":["lower-casing"]},{"Key":"minus lower-casing","Fragments":["words"]},{"Key":"lower-casing words","Fragments":["before"]},{"Key":"words before","Fragments":["entering"]},{"Key":"before entering","Fragments":["into"]},{"Key":"entering into","Fragments":["the","the"]},{"Key":"into the","Fragments":["map.","documentation","function","map,","world","std::map.","std::map.","map","`return`","map","map",".h","global","header","match","match","match","match","section","global","global","domain","master","habit","string?","map","habit","match","problem.","range","testing","middle","function","vector."]},{"Key":"have no","Fragments":["idea","idea","letters","experience","access"]},{"Key":"no idea","Fragments":["how","what"]},{"Key":"idea how","Fragments":["to"]},{"Key":"to run","Fragments":["the","cmake","a","as","the","the","down"]},{"Key":"run the","Fragments":["test","string","tests,","tests"]},{"Key":"test file","Fragments":["to","defined","there","as","any"]},{"Key":"file to","Fragments":["even","make","the"]},{"Key":"to even","Fragments":["get"]},{"Key":"even get","Fragments":["started."]},{"Key":"get started.","Fragments":["When","Then"]},{"Key":"started. When","Fragments":["I"]},{"Key":"When I","Fragments":["run","went","run","back","did","declare","test","ran","run"]},{"Key":"I run","Fragments":["\"g++","\"make\"","the","your"]},{"Key":"run \"g++","Fragments":["bob_test.cpp\","]},{"Key":"\"g++ bob_test.cpp\",","Fragments":["it"]},{"Key":"bob_test.cpp\", it","Fragments":["says"]},{"Key":"it says","Fragments":["I","that"]},{"Key":"says I","Fragments":["need"]},{"Key":"the .h","Fragments":["header","part","file"]},{"Key":".h header","Fragments":["file."]},{"Key":"You first","Fragments":["need"]},{"Key":"first need","Fragments":["to"]},{"Key":"to create","Fragments":["a","a","a","temporaries","unique","initial","instances","the","variables","the","instances","instances","a","another"]},{"Key":"create a","Fragments":["file","namespace,","function","simple","mapping","copy","C-style","string","class"]},{"Key":"a file","Fragments":["bob.h,"]},{"Key":"file bob.h,","Fragments":["then"]},{"Key":"bob.h, then","Fragments":["you"]},{"Key":"then you","Fragments":["should","shouldn't","are","take"]},{"Key":" Of","Fragments":["course,","course,"]},{"Key":"Of course,","Fragments":["a","this","that","if"]},{"Key":"course, a","Fragments":["word"]},{"Key":"a word","Fragments":["is","with","was","and","and","and","you","if"]},{"Key":"an anagram","Fragments":["if","if","if","if","if","of"]},{"Key":"anagram if","Fragments":["it","it","it","it","it"]},{"Key":"the same,","Fragments":["minus","while"]},{"Key":"same, minus","Fragments":["case"]},{"Key":"minus case","Fragments":["insensitivity."]},{"Key":" Cought","Fragments":["this"]},{"Key":"Cought this","Fragments":["by"]},{"Key":"this by","Fragments":["looking"]},{"Key":"by looking","Fragments":["at","at","at"]},{"Key":"looking at","Fragments":["someone","the","this:","the","my","other","it","the","the","this.","the","[NebuPookin's](http://exercism.io/NebuPookins)","the","the","other","the","past","my"]},{"Key":"at someone","Fragments":["else's"]},{"Key":"someone else's","Fragments":["submission"]},{"Key":"I'm trying","Fragments":["to","to","to","to"]},{"Key":"trying to","Fragments":["incorporate","do","create","be","optimize","think","reacquaint","check","avoid","get","improve","pass","do,","address","slim","improve","come","figure","determine","figure","keep","fix","work","determine","optimize","work","incorporate","accomplish","check","check","adapt"]},{"Key":"to incorporate","Fragments":["the","because"]},{"Key":"incorporate the","Fragments":["algorithm"]},{"Key":"the algorithm","Fragments":["and","+","is","is","and","to","and","the"]},{"Key":"algorithm and","Fragments":["functional","avoid","std::string","is"]},{"Key":"and functional","Fragments":["libraries"]},{"Key":"functional libraries","Fragments":["into"]},{"Key":"libraries into","Fragments":["my"]},{"Key":"into my","Fragments":["coding","translation"]},{"Key":"my coding","Fragments":["practices."]},{"Key":"coding practices.","Fragments":["I"]},{"Key":"practices. I","Fragments":["used"]},{"Key":"write loops","Fragments":["by"]},{"Key":"loops by","Fragments":["hand"]},{"Key":"by hand","Fragments":["for"]},{"Key":"hand for","Fragments":["pretty"]},{"Key":"for pretty","Fragments":["much"]},{"Key":"pretty much","Fragments":["everything.","turned","guarenteed","everywhere","a","requires"]},{"Key":"I benchmarked","Fragments":["a"]},{"Key":"benchmarked a","Fragments":["few"]},{"Key":"few of","Fragments":["my","the"]},{"Key":"of my","Fragments":["iterations","functions","project,","code","recent","solutions"]},{"Key":"my iterations","Fragments":["to"]},{"Key":"iterations to","Fragments":["find"]},{"Key":"find a","Fragments":["good","layout","declaration","C++","more","better","1.","way"]},{"Key":"good tradeoff","Fragments":["between"]},{"Key":"tradeoff between","Fragments":["speed"]},{"Key":"between speed","Fragments":["and"]},{"Key":"speed and","Fragments":["readability."]},{"Key":"and readability.","Fragments":["This"]},{"Key":"readability. This","Fragments":["is"]},{"Key":"is what's","Fragments":["come"]},{"Key":"what's come","Fragments":["of"]},{"Key":"come of","Fragments":["it."]},{"Key":"of it.","Fragments":["I","A","The"]},{"Key":"I get","Fragments":["squeeze","home","rid","a","back."]},{"Key":"get squeeze","Fragments":["a"]},{"Key":"squeeze a","Fragments":["bit"]},{"Key":"bit more","Fragments":["performance","flexible","clear","clear"]},{"Key":"more performance","Fragments":["out"]},{"Key":"performance out","Fragments":["of"]},{"Key":"the isYell()","Fragments":["function"]},{"Key":"isYell() function","Fragments":["if"]},{"Key":"function if","Fragments":["I","you","you"]},{"Key":"I use","Fragments":["a","`else`","an","prefix-increments","the","a","a","a","them","VS2013","iterators","this","::tolower"]},{"Key":"use a","Fragments":["handwritten","range-based","library","class,","better","for-element","tokenizer","for-element","C++11","return","switch","fourth","dictionary","dictionary","dictionary","\"hamming","sort","recursive","new","std::string","lambda","switch","map","namespace"]},{"Key":"a handwritten","Fragments":["loop,"]},{"Key":"handwritten loop,","Fragments":["but"]},{"Key":"loop, but","Fragments":["this","I'm","it's"]},{"Key":"but this","Fragments":["version","way","is","became","is","seemed","is","is","is"]},{"Key":"version here","Fragments":["looks"]},{"Key":"here looks","Fragments":["much"]},{"Key":"looks much","Fragments":["cleaner.","better","prettier."]},{"Key":" (I","Fragments":["just","pushed"]},{"Key":"(I just","Fragments":["noticed"]},{"Key":"just noticed","Fragments":["that","a"]},{"Key":"noticed that","Fragments":["I've","I","no","the"]},{"Key":"I've missed","Fragments":["the"]},{"Key":"missed the","Fragments":["header","point"]},{"Key":"header guards.","Fragments":["Just"]},{"Key":"guards. Just","Fragments":["act"]},{"Key":"Just act","Fragments":["as"]},{"Key":"act as","Fragments":["if"]},{"Key":"as if","Fragments":["they","he","the","C++"]},{"Key":"if they","Fragments":["were","equaled","need","were","need","can","changed","are","person","are","make"]},{"Key":"they were","Fragments":["there","equal.","inserted"]},{"Key":"were there","Fragments":["\\^.\\^)"]},{"Key":"I broke","Fragments":["this","up"]},{"Key":"broke this","Fragments":["down"]},{"Key":"this down","Fragments":["procedurally"]},{"Key":"down procedurally","Fragments":["and"]},{"Key":"procedurally and","Fragments":["introduced","completely"]},{"Key":"and introduced","Fragments":["some"]},{"Key":"introduced some","Fragments":["intention-revealing"]},{"Key":"some intention-revealing","Fragments":["functions."]},{"Key":"intention-revealing functions.","Fragments":["I'm"]},{"Key":"functions. I'm","Fragments":["not"]},{"Key":"I'm not","Fragments":["sure","modifying","getting","so","using","really","sure","sure","a","sure","sure","familiar","sure","sure","really","sure","sure","sure","sure","too","sure","sure","sure","a","sure","sure","sure","sure","sure.","sure","convinced","sure","sure","convinced","sure","sure","sure","sure","sure","sure","sure","really","running","sure","considering","an","yet"]},{"Key":"sure if","Fragments":["it","I","this","there","`static`","there's","the","it","it's","I","counting","treating","you","`iends_with`","this","that","your","I","it","I"]},{"Key":"be simpler","Fragments":["if","if"]},{"Key":"simpler if","Fragments":["approached","your"]},{"Key":"if approached","Fragments":["as"]},{"Key":"approached as","Fragments":["a"]},{"Key":"a collection","Fragments":["of"]},{"Key":"collection of","Fragments":["objects."]},{"Key":"Switched to","Fragments":["using","using"]},{"Key":"to using","Fragments":["`boost::algorithm::split`","`trim_copy`","a","the","the","MinGW.","single"]},{"Key":"using `boost::algorithm::split`","Fragments":["to"]},{"Key":"`boost::algorithm::split` to","Fragments":["split"]},{"Key":"to split","Fragments":["words.","up","the"]},{"Key":"split words.","Fragments":["Feels"]},{"Key":"words. Feels","Fragments":["better."]},{"Key":"I see","Fragments":["that","a","two","I","there","right","that","it,","you","what"]},{"Key":"see that","Fragments":["you","`spaceless`","you","it","you","yelling","in","the"]},{"Key":"you included","Fragments":["your","the"]},{"Key":"included your","Fragments":["header"]},{"Key":"your header","Fragments":["as","file?","would"]},{"Key":"header as","Fragments":["a","well"]},{"Key":"a comment","Fragments":["at","there","would"]},{"Key":"comment at","Fragments":["the"]},{"Key":"the top","Fragments":["of","of","of","of","of","and"]},{"Key":"top of","Fragments":["the","the","the","the","it."]},{"Key":"the cpp.","Fragments":["This"]},{"Key":"cpp. This","Fragments":["is"]},{"Key":"a nice","Fragments":["reference","way","readable","concise","solution.","algorithm","challenging"]},{"Key":"nice reference","Fragments":["for"]},{"Key":"reference for","Fragments":["reading","some"]},{"Key":"for reading","Fragments":["the"]},{"Key":"reading the","Fragments":["`cpp`","public","README."]},{"Key":"the `cpp`","Fragments":["code."]},{"Key":"`cpp` code.","Fragments":["We're"]},{"Key":"code. We're","Fragments":["working"]},{"Key":"We're working","Fragments":["on"]},{"Key":"working on","Fragments":["allowing","an","this"]},{"Key":"on allowing","Fragments":["[multiple"]},{"Key":"allowing [multiple","Fragments":["file"]},{"Key":"[multiple file","Fragments":["submission](https://github.com/exercism/exercism.io/issues/1165)"]},{"Key":"file submission](https://github.com/exercism/exercism.io/issues/1165)","Fragments":["to"]},{"Key":"submission](https://github.com/exercism/exercism.io/issues/1165) to","Fragments":["make"]},{"Key":"make this","Fragments":["easier","clear","faster,","code","code","consistent...","easier.","substitution","a"]},{"Key":"this easier","Fragments":["going"]},{"Key":"easier going","Fragments":["forward."]},{"Key":" As","Fragments":["you","to","I","for","for","for","far","you","for","for","a","a","always","for","I","for"]},{"Key":"As you","Fragments":["noticed","might","can","can"]},{"Key":"you noticed","Fragments":["from","how","how"]},{"Key":"noticed from","Fragments":["the"]},{"Key":"test suite,","Fragments":["`hey`","but","if","you"]},{"Key":"suite, `hey`","Fragments":["is"]},{"Key":"`hey` is","Fragments":["a","operating","filled","called."]},{"Key":"a scoped","Fragments":["function."]},{"Key":"scoped function.","Fragments":["`bob::hey`"]},{"Key":"function. `bob::hey`","Fragments":["can"]},{"Key":"`bob::hey` can","Fragments":["either"]},{"Key":"can either","Fragments":["refer"]},{"Key":"either refer","Fragments":["to"]},{"Key":"refer to","Fragments":["a","a","all","Iteration","lines"]},{"Key":"static function","Fragments":["declared","inside","(only","within","of","at"]},{"Key":"function declared","Fragments":["in"]},{"Key":"declared in","Fragments":["class"]},{"Key":"in class","Fragments":["`bob`,"]},{"Key":"class `bob`,","Fragments":["or","since"]},{"Key":"`bob`, or","Fragments":["it"]},{"Key":"or it","Fragments":["can"]},{"Key":"it can","Fragments":["refer","be","more","set","get","never","never","have","be"]},{"Key":"can refer","Fragments":["to"]},{"Key":"function in","Fragments":["namespace","a","_cctype_","that","the"]},{"Key":"in namespace","Fragments":["`bob`.","`bob`","bob,","anagram"]},{"Key":"namespace `bob`.","Fragments":["Do"]},{"Key":"`bob`. Do","Fragments":["you"]},{"Key":"you think","Fragments":["your","of","of","your","of","of","of","of","of","`d.isEmpty()`","about","about","it","about"]},{"Key":"think your","Fragments":["code","code","code","implementation","test","solution","solution"]},{"Key":"your code","Fragments":["would","would","a","doesn't","is.","while","and","because","a","with","more","(I","if","isn't","instead","in","to","but","so","is","is.","is","is","more","more","more","more","more"]},{"Key":"code would","Fragments":["be","be","not","always","be"]},{"Key":"be clearer","Fragments":["if","in"]},{"Key":"clearer if","Fragments":["you"]},{"Key":"namespace instead","Fragments":["of","of","(beware"]},{"Key":"of a","Fragments":["static","way","method","better","for","way","class.","class","performance","class,","\"bob\"","namespace?","namespace?","way","difference.","larger","good","class?","class","mash","single","class","class)","`using","lot","tiny","function.","static","lambda","few","\"hamming","better","c-style","given","string","string","new","given","previous","switch","psudo-random","stylistic","constructor","cumbersome","class","list","function","typical","function","return","non-plural","`string`.","chess","class","word"]},{"Key":"really like","Fragments":["your","the","that","it.","the","the","this","this","your","the","this","the","how","it,","your"]},{"Key":"like your","Fragments":["intention","use","intention-revealing","use","use","use","solution","yelling()","naming","indentation","matches","use","use","use","`verse`","test","use"]},{"Key":"your intention","Fragments":["revealing","and"]},{"Key":"intention revealing","Fragments":["methods","functions"]},{"Key":"revealing methods","Fragments":["`is_question`,"]},{"Key":"methods `is_question`,","Fragments":["`is_shouting`,"]},{"Key":"`is_question`, `is_shouting`,","Fragments":["and"]},{"Key":"`is_shouting`, and","Fragments":["`is_silence`."]},{"Key":"and `is_silence`.","Fragments":["You"]},{"Key":"`is_silence`. You","Fragments":["have"]},{"Key":"You have","Fragments":["them","`if(question[question.size()-1]","a","to"]},{"Key":"have them","Fragments":["declared","available","inside"]},{"Key":"them declared","Fragments":["as"]},{"Key":"declared as","Fragments":["private","an","part"]},{"Key":"as private","Fragments":["methods"]},{"Key":"private methods","Fragments":["on","of"]},{"Key":"methods on","Fragments":["`bob`,","`std::string`"]},{"Key":"on `bob`,","Fragments":["but"]},{"Key":"`bob`, but","Fragments":["they"]},{"Key":"they are","Fragments":["completely","used.","used,","nice","simple","in","purely","syntactically","used","the","returning","the","more","not","is","a","at","the"]},{"Key":"are completely","Fragments":["internal"]},{"Key":"completely internal","Fragments":["to"]},{"Key":"internal to","Fragments":["the","the"]},{"Key":"the implementation","Fragments":["of","without","and","rather","in","details","details","since","of","it"]},{"Key":"implementation of","Fragments":["`hey`.","getLowerCase","the","std::allocator","isCaps,","GetNextWord()","isCaps,","`removeSpaces`.","the"]},{"Key":"of `hey`.","Fragments":["Can"]},{"Key":"`hey`. Can","Fragments":["you"]},{"Key":"think of","Fragments":["a","a","how","how","a","how","how","a","anything","a","a","one","doing","it,","ways","that.","is","how."]},{"Key":"way to","Fragments":["have","iterate","increase","deal","check","control","stop","use","tackle","go","do","strip","organize","speed","go","solve","do","check","go","do","determine","make","bucket","reinitialize","my","handle","do","go","know","go","do","remove","work","encapsulate","recognize","deal","do","fix","check","be"]},{"Key":"them available","Fragments":["to","in"]},{"Key":"available to","Fragments":["your","std::string,"]},{"Key":"to your","Fragments":["implementation,","file\u003e_INCLUDED.","function","question","magic"]},{"Key":"your implementation,","Fragments":["but"]},{"Key":"implementation, but","Fragments":["completely","an","it"]},{"Key":"but completely","Fragments":["omit"]},{"Key":"completely omit","Fragments":["mentioning"]},{"Key":"omit mentioning","Fragments":["them"]},{"Key":"mentioning them","Fragments":["in"]},{"Key":"them in","Fragments":["the","some","another","the","C++,","a","order"]},{"Key":"the header?","Fragments":["This"]},{"Key":"header? This","Fragments":["way"]},{"Key":"This way","Fragments":["you","you","you","you"]},{"Key":"way you","Fragments":["can","can","converted","don't","keep","avoid","process","incremented","save","separate","can","can","should","don't","are","could","create"]},{"Key":"can modify","Fragments":["their","the"]},{"Key":"modify their","Fragments":["signatures","arguments,"]},{"Key":"their signatures","Fragments":["or"]},{"Key":"signatures or","Fragments":["names"]},{"Key":"or names","Fragments":["in"]},{"Key":"names in","Fragments":["the"]},{"Key":"implementation without","Fragments":["forcing"]},{"Key":"without forcing","Fragments":["any"]},{"Key":"forcing any","Fragments":["recompilation"]},{"Key":"any recompilation","Fragments":["of"]},{"Key":"recompilation of","Fragments":["clients"]},{"Key":"of clients","Fragments":["of"]},{"Key":"clients of","Fragments":["the","`bob.h`"]},{"Key":" `std::string`","Fragments":["shares","has"]},{"Key":"`std::string` shares","Fragments":["many"]},{"Key":"shares many","Fragments":["of"]},{"Key":"many of","Fragments":["the","them"]},{"Key":"same methods","Fragments":["as"]},{"Key":"methods as","Fragments":["most","static."]},{"Key":"as most","Fragments":["container"]},{"Key":"most container","Fragments":["classes"]},{"Key":"container classes","Fragments":["in"]},{"Key":"classes in","Fragments":["the"]},{"Key":"the standard","Fragments":["library.","library","that","libraries.","C","facilities.","as","library","tool"]},{"Key":"standard library.","Fragments":["Can"]},{"Key":"library. Can","Fragments":["you"]},{"Key":"a method","Fragments":["that","for"]},{"Key":"method that","Fragments":["returns"]},{"Key":"that returns","Fragments":["the","false","the"]},{"Key":"returns the","Fragments":["last","shorter","result","result","result","boolean","boolean","'NULL'"]},{"Key":"last character","Fragments":["on","in","of","to","in","is","in","is","is","is"]},{"Key":"character on","Fragments":["the"]},{"Key":"string explicitly","Fragments":["to"]},{"Key":"explicitly to","Fragments":["use"]},{"Key":"use on","Fragments":["line"]},{"Key":" C++11","Fragments":["allows","allows"]},{"Key":"C++11 allows","Fragments":["us","definitions"]},{"Key":"allows us","Fragments":["to"]},{"Key":"us to","Fragments":["use"]},{"Key":"a range-based","Fragments":["for","for","for"]},{"Key":"range-based for","Fragments":["loop","loops","loop?","in"]},{"Key":"for loop","Fragments":["over","is","would","since","alot","could","completed.","iterating","in","is","to","conditional","on","not","is","to","would","will","after","construct","so","in","at","```for","over","in","with","indices","was"]},{"Key":"loop over","Fragments":["all","the","the","to"]},{"Key":"over all","Fragments":["the","characters","elements.","existing"]},{"Key":"all the","Fragments":["characters","boilerplate","way","tests.","necessary","other","```#include```","curly","relevant","other","ascii","ASCII","letters","methods","tests?","tests?","tests,","tests.","functions","punctuation","functions","Alpha","input","letters","constructors,","same","characters","logic","algorithms","input","heavy","punctuation.","unit","squares.","kings","tests.","tests","work.","boost","code","tests","string","characters","even","even","prime","prime","factors,","tests","tests","strings","names","correct","tests","tests.","tests","time.","work."]},{"Key":"the characters","Fragments":["in","in","were","in","(although","at","in","in","in","differ.","doesn't.","'ACGT'","escaping","of","are"]},{"Key":"characters in","Fragments":["a","a","the","the","the","natural","the","both","the","both","isUpper(I"]},{"Key":" for","Fragments":["(const","(auto","(const","(auto","(int","(auto\u0026","the","each","(","(char","(auto\u0026","(auto\u0026","(const","(const","(auto\u0026","(...)"]},{"Key":"for (const","Fragments":["char","auto\u0026","auto\u0026","auto\u0026"]},{"Key":"(const char","Fragments":["c"]},{"Key":"char c","Fragments":[":","=","="]},{"Key":"c :","Fragments":["msg)","*msg)`.","input)`","message","prompt)`","question)`","file","phrase)","str)`","text)","mSubject)"]},{"Key":": msg)","Fragments":["{"]},{"Key":" //","Fragments":["...","...","Do","if","static_cast\u003cchar(const","don't","do"]},{"Key":" Do","Fragments":["you","you","you","not","you"]},{"Key":"clearer in","Fragments":["`is_shouting`","the"]},{"Key":"in `is_shouting`","Fragments":["and"]},{"Key":"`is_shouting` and","Fragments":["`is_silence`"]},{"Key":"and `is_silence`","Fragments":["with"]},{"Key":"`is_silence` with","Fragments":["a"]},{"Key":"a range","Fragments":["based","based","that"]},{"Key":"range based","Fragments":["for","for","for","list","loop","for","loops","for","for"]},{"Key":"based for","Fragments":["loop?","loops","loops","is","loops","loop.","loop"]},{"Key":" You're","Fragments":["including","correct,","correct,","now","right","right."]},{"Key":"You're including","Fragments":["`\u003cstdlib.h\u003e`"]},{"Key":"including `\u003cstdlib.h\u003e`","Fragments":["from"]},{"Key":"`\u003cstdlib.h\u003e` from","Fragments":["the"]},{"Key":"C standard","Fragments":["library","library"]},{"Key":"standard library","Fragments":["to","headers","algorithms","had","provides","to","functions."]},{"Key":"library to","Fragments":["get","remove","use"]},{"Key":"to get","Fragments":["`isalpha`,","the","in","out","compilation","it","more","all","some","used","this","around","through","but","some","things","some","used","you","the","the","information","right.","used","started.","out","rid","the","the","lost.","you","code","a","a","this","everything","around","a"]},{"Key":"get `isalpha`,","Fragments":["etc."]},{"Key":"`isalpha`, etc.","Fragments":["In"]},{"Key":"etc. In","Fragments":["C++,","addition,"]},{"Key":"C++, the","Fragments":["preferred"]},{"Key":"the preferred","Fragments":["form","mechanism","way","C++"]},{"Key":"preferred form","Fragments":["for"]},{"Key":"form for","Fragments":["including"]},{"Key":"for including","Fragments":["a"]},{"Key":"including a","Fragments":["C"]},{"Key":"a C","Fragments":["standard","background,","programmer,","header","approach","program."]},{"Key":"library headers","Fragments":["is"]},{"Key":"headers is","Fragments":["to"]},{"Key":"is to","Fragments":["include","return","build","treat","be","use","use","search","search","use","simplify","sacrifice","count","move","move","look","pass","tokenize","ensure","`bob::hey()`,","initialize","provide"]},{"Key":"to include","Fragments":["`\u003ccstdlib\u003e`.","that","the","all","something","bob.h"]},{"Key":"include `\u003ccstdlib\u003e`.","Fragments":["Since"]},{"Key":"`\u003ccstdlib\u003e`. Since","Fragments":["we're"]},{"Key":"Since we're","Fragments":["only"]},{"Key":"we're only","Fragments":["interested","generating"]},{"Key":"only interested","Fragments":["in"]},{"Key":"interested in","Fragments":["the","switching","having","shortening","feedback","the","that"]},{"Key":"functions and","Fragments":["not","data","it"]},{"Key":"and not","Fragments":["the","only","at","change","native","alpha","the","some","rely","even","very","yelling,","0.","well","worrying"]},{"Key":"not the","Fragments":["other","case","same.","**address","same","declaritive.","approach","length","same","one"]},{"Key":"the other","Fragments":["stuff","approach.","two","hand,","stuff","bools","occurrences","submitions,","functions","is","characters.","hand,","hand,","code","issues","solutions","submissions","solutions","submissions"]},{"Key":"other stuff","Fragments":["brought","from"]},{"Key":"stuff brought","Fragments":["into"]},{"Key":"brought into","Fragments":["scope","the"]},{"Key":"into scope","Fragments":["by"]},{"Key":"scope by","Fragments":["`\u003cstdlib.h\u003e`,"]},{"Key":"by `\u003cstdlib.h\u003e`,","Fragments":["we"]},{"Key":"`\u003cstdlib.h\u003e`, we","Fragments":["can"]},{"Key":"we can","Fragments":["just","use","just","fit","turn","extend","really","submit","get"]},{"Key":"can just","Fragments":["include","use","return","use","tell","use","do","use","use"]},{"Key":"just include","Fragments":["`\u003ccctype\u003e`","bob"]},{"Key":"include `\u003ccctype\u003e`","Fragments":["and"]},{"Key":"`\u003ccctype\u003e` and","Fragments":["use"]},{"Key":"and use","Fragments":["`std::isalpha`,","std","prefix-increment","`regex_match`","```std::basic_string::compare```","the","various","them"]},{"Key":"use `std::isalpha`,","Fragments":["etc."]},{"Key":"your use","Fragments":["of","of","of","of","of","of","of","when","of"]},{"Key":"of `std::regex`;","Fragments":["when"]},{"Key":"`std::regex`; when","Fragments":["I"]},{"Key":"I tried","Fragments":["this","to","to","to","to","to","to","a","to","to","to","to","some","to","to"]},{"Key":"tried this","Fragments":["on","and"]},{"Key":"this on","Fragments":["gcc"]},{"Key":"on gcc","Fragments":["4.8,"]},{"Key":"gcc 4.8,","Fragments":["it"]},{"Key":"4.8, it","Fragments":["simply"]},{"Key":"it simply","Fragments":["failed","be"]},{"Key":"simply failed","Fragments":["because"]},{"Key":"failed because","Fragments":["they"]},{"Key":"because they","Fragments":["don't","do","make","are"]},{"Key":"they don't","Fragments":["have","belong.","cover"]},{"Key":"don't have","Fragments":["a","to","a","time","to","to","to","them","any","your","to","one","to","to","a","to"]},{"Key":"a working","Fragments":["regex","solution.","solution","function"]},{"Key":"working regex","Fragments":["in"]},{"Key":"regex in","Fragments":["that","a"]},{"Key":"in that","Fragments":["version.","way.","corner","area,","it","both","read;","name,"]},{"Key":" We","Fragments":["have","can"]},{"Key":"We have","Fragments":["lots"]},{"Key":"have lots","Fragments":["of"]},{"Key":"lots of","Fragments":["implementation","comments","obscure","good","`std::`s"]},{"Key":"of implementation","Fragments":["details"]},{"Key":"implementation details","Fragments":["surfacing","making","and","in","(like","from"]},{"Key":"details surfacing","Fragments":["in"]},{"Key":"surfacing in","Fragments":["this"]},{"Key":"in this","Fragments":["one","case","case;","case.)","scenario","situation.","seemed","way","context","situation.","case,","case.","case","particular","code","case.","exercise","style.","case","solution","specific","case","case.","case.","case","exercise,","case","task."]},{"Key":"this one","Fragments":["function.","are","should","works,","only","doesn't","not","has","a"]},{"Key":"one function.","Fragments":["Can"]},{"Key":"function. Can","Fragments":["you"]},{"Key":"of how","Fragments":["you","we","to","to","I","I","I","I","I","I","I","I","the","the","I'm","to"]},{"Key":"you could","Fragments":["restructure","consider:","make","use","do","simplify","use","make","just","just","use","encapsulate","count","use","not","remove","just","hide","consider","use","rely","instead","also","use","have","leave","solve","just","do","check","use","loop","just","save","use","change:","considering","move","consider","consider","scale","omit","define","directly","have","declare","initialize","possibly","use","combine","go","potentially","loop","reduce","have","have","pass","have","have","improve","(should!)","reuse","get","have"]},{"Key":"could restructure","Fragments":["it"]},{"Key":"restructure it","Fragments":["so","so"]},{"Key":"it so","Fragments":["that","that","many","I","I","that","that"]},{"Key":"so that","Fragments":["the","everything","it","I","it","the","ist","was","your","could","`algo.h`","the","I","the","you","\"Whatever\"","it","it","makes","a"]},{"Key":"that the","Fragments":["details","std::isXXX","remaining","used","address-of","first","input","input","triangle","use","`if(","other","enumeration","\"C","way","mismatched","difference","behavior","other","program","same","underscore","`using`","work","function","verse-building","min_len","length","compiler","compiler","default","`nameset`","tests","nth","program","tests","string","submitter","map","brute","tests","first","check","distance","string"]},{"Key":"the details","Fragments":["were"]},{"Key":"details were","Fragments":["pushed"]},{"Key":"were pushed","Fragments":["down"]},{"Key":"pushed down","Fragments":["to"]},{"Key":"down to","Fragments":["a","line","a","asking:","a","referencing","the"]},{"Key":"a lower","Fragments":["level?","case"]},{"Key":"is looking","Fragments":["better!","really"]},{"Key":" We're","Fragments":["passing"]},{"Key":"We're passing","Fragments":["strings"]},{"Key":"value as","Fragments":["arguments","soon"]},{"Key":"as arguments","Fragments":["to"]},{"Key":"arguments to","Fragments":["our","the","`compute`"]},{"Key":"to our","Fragments":["various","helper"]},{"Key":"our various","Fragments":["functions,"]},{"Key":"various functions,","Fragments":["which"]},{"Key":"functions, which","Fragments":["means","is"]},{"Key":"which means","Fragments":["some","you"]},{"Key":"means some","Fragments":["copying"]},{"Key":"some copying","Fragments":["of"]},{"Key":"copying of","Fragments":["their","your"]},{"Key":"of their","Fragments":["contents"]},{"Key":"their contents","Fragments":["on"]},{"Key":"contents on","Fragments":["the"]},{"Key":"the free","Fragments":["store","function"]},{"Key":"free store","Fragments":["when"]},{"Key":"store when","Fragments":["we"]},{"Key":"when we","Fragments":["don't","are","change","find"]},{"Key":"we don't","Fragments":["need","need.","want","want","have","care","extend"]},{"Key":"need distinct","Fragments":["copies."]},{"Key":"distinct copies.","Fragments":["Can"]},{"Key":"copies. Can","Fragments":["you"]},{"Key":"how we","Fragments":["could"]},{"Key":"could avoid","Fragments":["this?"]},{"Key":"Some of","Fragments":["my"]},{"Key":"my functions","Fragments":["have","because"]},{"Key":"functions have","Fragments":["a","become","been"]},{"Key":"a bunch","Fragments":["of","of","of","of","of","of","of","of","of"]},{"Key":"bunch of","Fragments":["if/else","private","simple","stuff","other","identifiers","errors:","imports","spaces)","time"]},{"Key":"of if/else","Fragments":["if"]},{"Key":"if/else if","Fragments":["statements."]},{"Key":"statements. Is","Fragments":["this"]},{"Key":"Is this","Fragments":["ugly"]},{"Key":"this ugly","Fragments":["looking"]},{"Key":"ugly looking","Fragments":["code?"]},{"Key":"looking code?","Fragments":["Should"]},{"Key":"code? Should","Fragments":["I"]},{"Key":"Should I","Fragments":["try"]},{"Key":"I try","Fragments":["to","to","to","to","develop","to"]},{"Key":"use switch","Fragments":["statements?","statement"]},{"Key":"thought using","Fragments":["an"]},{"Key":"using an","Fragments":["enum","if-break","assembly","old-fashioned","iterator","anonymous","iterator.","unsigned","unsigned","`int`"]},{"Key":"an enum","Fragments":["would","that","that","and","and"]},{"Key":"enum would","Fragments":["make"]},{"Key":"the categories","Fragments":["more"]},{"Key":"categories more","Fragments":["apparent."]},{"Key":" Doesn't","Fragments":["handle","look"]},{"Key":"Doesn't handle","Fragments":["the"]},{"Key":"handle the","Fragments":["case","additional","case","\"last","optimizations.","first"]},{"Key":"the case","Fragments":["where","either","where","where","I","all","individually","of","of","of","where","of","of"]},{"Key":"case where","Fragments":["only","the","there","there","the","I"]},{"Key":"where only","Fragments":["an"]},{"Key":"only an","Fragments":["explicative","algorithm."]},{"Key":"an explicative","Fragments":["\"*\u0026#@\u0026$\""]},{"Key":"explicative \"*\u0026#@\u0026$\"","Fragments":["is"]},{"Key":"\"*\u0026#@\u0026$\" is","Fragments":["directed"]},{"Key":"is directed","Fragments":["at"]},{"Key":"directed at","Fragments":["Bob."]},{"Key":"at Bob.","Fragments":["Does"]},{"Key":"Bob. Does","Fragments":["handle"]},{"Key":"Does handle","Fragments":["the"]},{"Key":"the additional","Fragments":["case"]},{"Key":"additional case","Fragments":["of"]},{"Key":"case of","Fragments":["shouting","exercism,","throwing","throwing","`is_question`,","`const`.","subject_","\u003e2","mismatched","1,2","a"]},{"Key":"of shouting","Fragments":["\"1,","to"]},{"Key":"shouting \"1,","Fragments":["2,"]},{"Key":"\"1, 2,","Fragments":["3,"]},{"Key":"2, 3,","Fragments":["4!\""]},{"Key":"3, 4!\"","Fragments":["at"]},{"Key":"4!\" at","Fragments":["Bob,"]},{"Key":"at Bob,","Fragments":["where"]},{"Key":"Bob, where","Fragments":["the"]},{"Key":"where the","Fragments":["exclamation","original","operators","extra","input","length","closing","buffer","first"]},{"Key":"the exclamation","Fragments":["is"]},{"Key":"exclamation is","Fragments":["required"]},{"Key":"is required","Fragments":["to","in","to"]},{"Key":"required to","Fragments":["understand","pass","value-initialize"]},{"Key":"to understand","Fragments":["this","what","at","your","what","some","the","solution.","than","the"]},{"Key":"understand this","Fragments":["as"]},{"Key":"this as","Fragments":["yelling.","an","simple","a","I"]},{"Key":" Has","Fragments":["just"]},{"Key":"Has just","Fragments":["two"]},{"Key":"just two","Fragments":["loops,","colons"]},{"Key":"two loops,","Fragments":["which"]},{"Key":"loops, which","Fragments":["I"]},{"Key":"which I","Fragments":["think","should","can","used","did","think","think","just","agree"]},{"Key":"think is","Fragments":["reasonable","inefficient,"]},{"Key":"is reasonable","Fragments":["for"]},{"Key":"reasonable for","Fragments":["readability."]},{"Key":" Just","Fragments":["testing","one","so","looking","another","a","a","a","a","a","a","my","wrote","fixing","did","a"]},{"Key":"Just testing","Fragments":["exercism."]},{"Key":"testing exercism.","Fragments":["It"]},{"Key":"exercism. It","Fragments":["seems"]},{"Key":"It seems","Fragments":["pretty","odd","the","like","a","more","like","strange","as","to"]},{"Key":"seems pretty","Fragments":["neat.","different"]},{"Key":"I'm rather","Fragments":["unhappy"]},{"Key":"rather unhappy","Fragments":["with"]},{"Key":"unhappy with","Fragments":["the"]},{"Key":"the fact","Fragments":["that","that","that","that","that","that","that"]},{"Key":"fact that","Fragments":["the","I","even","you","it's","they","the"]},{"Key":"the std::isXXX","Fragments":["series"]},{"Key":"std::isXXX series","Fragments":["of"]},{"Key":"of functions","Fragments":["don't","with","like"]},{"Key":"functions don't","Fragments":["take","need","need"]},{"Key":"don't take","Fragments":["char"]},{"Key":"take char","Fragments":["as"]},{"Key":"as an","Fragments":["argument.","rvalue","FSM/language","object","int","anagram","alternative","argument,"]},{"Key":"an argument.","Fragments":["I"]},{"Key":"argument. I","Fragments":["had","prefer"]},{"Key":"to wrap","Fragments":["them","functions"]},{"Key":"wrap them","Fragments":["to"]},{"Key":"get the","Fragments":["to","same","length","tests","point","class",".plus","job","chance","testing","test","picture","same","readability"]},{"Key":"the to","Fragments":["work","throw","lowercase"]},{"Key":"to work","Fragments":["with","properly.","with","on","without","out","with","out","out","out","using"]},{"Key":"work with","Fragments":["std::all_of.","C++.","regex","vectors"]},{"Key":"like that","Fragments":["you're","you","you","now","idea.","your","you","you","you","test","you","you","and","you","you've","the","it","that","you've","you've","you","you","you've","you've"]},{"Key":"that you're","Fragments":["passing","doing","not","not"]},{"Key":"const reference","Fragments":["to","in","to","rather","?","to","is","or","is","avoids","if"]},{"Key":"reference to","Fragments":["avoid","a","each","its","prevent","the","a","basic","it"]},{"Key":"avoid copying","Fragments":["string","the"]},{"Key":"copying string","Fragments":["values."]},{"Key":"string values.","Fragments":["I"]},{"Key":"values. I","Fragments":["like","think"]},{"Key":"your intention-revealing","Fragments":["methods"]},{"Key":"intention-revealing methods","Fragments":["`isQuestion`"]},{"Key":"methods `isQuestion`","Fragments":["and"]},{"Key":"`isQuestion` and","Fragments":["`isSilence`"]},{"Key":"and `isSilence`","Fragments":["as","shorter."]},{"Key":"`isSilence` as","Fragments":["they"]},{"Key":"as they","Fragments":["reveal","may","were","call","are"]},{"Key":"they reveal","Fragments":["aspects"]},{"Key":"reveal aspects","Fragments":["of"]},{"Key":"aspects of","Fragments":["the","this"]},{"Key":"problem domain.","Fragments":["`isAllCaps`"]},{"Key":"domain. `isAllCaps`","Fragments":["seems"]},{"Key":"`isAllCaps` seems","Fragments":["to"]},{"Key":"seems to","Fragments":["speak","be","be","start","me","me","perform","come","do","be","really","be","work.","sort","be","fail"]},{"Key":"to speak","Fragments":["more"]},{"Key":"speak more","Fragments":["to"]},{"Key":"more to","Fragments":["its"]},{"Key":"to its","Fragments":["implementation","mapped"]},{"Key":"its implementation","Fragments":["than"]},{"Key":"implementation than","Fragments":["the"]},{"Key":"than the","Fragments":["problem","number","header.","O(n","first","returned","complexity","second","problem","iterator","sorted","candidate.","number","simple","reverse)","second.","way","comparatively"]},{"Key":"problem domain,","Fragments":["however."]},{"Key":"domain, however.","Fragments":["Can"]},{"Key":"however. Can","Fragments":["you"]},{"Key":"a better","Fragments":["name","name","ordered","substitute","approach","approach","strategy","way","distribution","algorithm,","structure","way","way","solution","name","way","way","way"]},{"Key":"better name","Fragments":["for","for","for"]},{"Key":"name for","Fragments":["this","the","this","the","what"]},{"Key":"this function","Fragments":["that","should","if","to","will","is"]},{"Key":"function that","Fragments":["speaks","needs","ignores","is","fits","takes","then","returns","lowercases","generates","needs","checks","the","does"]},{"Key":"that speaks","Fragments":["in"]},{"Key":"speaks in","Fragments":["terms"]},{"Key":"in terms","Fragments":["of","of","of","of","of","of","of"]},{"Key":"terms of","Fragments":["the","the","performance,","matching","time/cpu","scalability,","the"]},{"Key":"In C++11","Fragments":["we"]},{"Key":"C++11 we","Fragments":["can"]},{"Key":"use range-based","Fragments":["for"]},{"Key":"for loops","Fragments":["to","lower","so","don't","seems","too,","before"]},{"Key":"loops to","Fragments":["walk"]},{"Key":"to walk","Fragments":["over"]},{"Key":"walk over","Fragments":["all"]},{"Key":"all characters","Fragments":["in","to"]},{"Key":"a string;","Fragments":["this"]},{"Key":"string; this","Fragments":["would"]},{"Key":"this would","Fragments":["simplify","lead","be","stop","be"]},{"Key":"would simplify","Fragments":["your"]},{"Key":"simplify your","Fragments":["loops","code?","yelling","code"]},{"Key":"your loops","Fragments":["on","as"]},{"Key":"loops on","Fragments":["line"]},{"Key":"`std::string` has","Fragments":["methods"]},{"Key":"has methods","Fragments":["`find_first_of`"]},{"Key":"methods `find_first_of`","Fragments":["and"]},{"Key":"`find_first_of` and","Fragments":["`find_last_of`"]},{"Key":"and `find_last_of`","Fragments":["that"]},{"Key":"`find_last_of` that","Fragments":["can"]},{"Key":"that can","Fragments":["simplify","be","generate","perform","help","handle","be","be"]},{"Key":"can simplify","Fragments":["`getTrimmedString`","`if(strInputSentence.empty())"]},{"Key":"simplify `getTrimmedString`","Fragments":["by"]},{"Key":"`getTrimmedString` by","Fragments":["eliminating"]},{"Key":"by eliminating","Fragments":["some","unnecessary"]},{"Key":"eliminating some","Fragments":["low-level"]},{"Key":"some low-level","Fragments":["looping","details"]},{"Key":"low-level looping","Fragments":["details."]},{"Key":"looping details.","Fragments":["Even"]},{"Key":"details. Even","Fragments":["better,"]},{"Key":"Even better,","Fragments":["the"]},{"Key":"better, the","Fragments":["boost"]},{"Key":"the boost","Fragments":["string","string","trim.","tokenizer?","functions","convention","unit","test","library.","libraries","regex","iostreams.","algorithms...","string","regex","tokenizer.","string","utilities!","builtin","libraries","tokenizer","library","string","library","library.","library"]},{"Key":"boost string","Fragments":["algorithm","algorithms.","algo","algorithms","routines","algorithms."]},{"Key":"string algorithm","Fragments":["[`boost::algorithm::trim`](http://www.boost.org/doc/libs/1_55_0/doc/html/boost/algorithm/trim.html)"]},{"Key":"algorithm [`boost::algorithm::trim`](http://www.boost.org/doc/libs/1_55_0/doc/html/boost/algorithm/trim.html)","Fragments":["will"]},{"Key":"[`boost::algorithm::trim`](http://www.boost.org/doc/libs/1_55_0/doc/html/boost/algorithm/trim.html) will","Fragments":["do"]},{"Key":"will do","Fragments":["all","the","it.","is","too."]},{"Key":"do all","Fragments":["this"]},{"Key":"all this","Fragments":["work"]},{"Key":"this work","Fragments":["for","for"]},{"Key":"work for","Fragments":["you.","shorter","the","you?","mismatch","given"]},{"Key":"like template","Fragments":["algorithms."]},{"Key":"template algorithms.","Fragments":["I"]},{"Key":"algorithms. I","Fragments":["sort","was"]},{"Key":"I sort","Fragments":["of","it"]},{"Key":"of had","Fragments":["a"]},{"Key":"feeling there","Fragments":["should"]},{"Key":"there should","Fragments":["be","probably"]},{"Key":" a","Fragments":["for_each-alike","string"]},{"Key":"a for_each-alike","Fragments":["that"]},{"Key":"for_each-alike that","Fragments":["takes"]},{"Key":"that takes","Fragments":["two","regex"]},{"Key":"takes two","Fragments":["ranges"]},{"Key":"two ranges","Fragments":["and"]},{"Key":"ranges and","Fragments":["a"]},{"Key":"a binary","Fragments":["function."]},{"Key":" boost/range/algorithm_ext/for_each.hpp","Fragments":["has","has"]},{"Key":"boost/range/algorithm_ext/for_each.hpp has","Fragments":["it,","an"]},{"Key":"has it,","Fragments":["found"]},{"Key":"it, found","Fragments":["after"]},{"Key":"found after","Fragments":["a"]},{"Key":"after a","Fragments":["bit","couple","day,","question"]},{"Key":"course, this","Fragments":["could"]},{"Key":"this could","Fragments":["be","be","possibly","be"]},{"Key":"be written","Fragments":["with","as","as","at","more"]},{"Key":"written with","Fragments":["a"]},{"Key":"a for-loop,","Fragments":["incrementing"]},{"Key":" both","Fragments":["iterators"]},{"Key":"both iterators","Fragments":["at"]},{"Key":"iterators at","Fragments":["once."]},{"Key":"once. However,","Fragments":["I"]},{"Key":"algorithm +","Fragments":["lambda"]},{"Key":"+ lambda","Fragments":["approach"]},{"Key":" quite","Fragments":["a","exactly"]},{"Key":"quite a","Fragments":["lot","bit.","lot","good","few","few","bit!"]},{"Key":"lot for","Fragments":["its"]},{"Key":"for its","Fragments":["clarity.","being","`islower()`","benefit"]},{"Key":" Nice","Fragments":["and","and","use","usage","idea","use","code!","code!","use","implementation!","code!","code!","code!","use","and","code!","code!","code!","work.","solution.","solution!","solution!","code!","work","work.","improvements","and","work!"]},{"Key":"Nice and","Fragments":["simple.","concise!","simple.","simple."]},{"Key":"has an","Fragments":["algorithm","alpha","isalnum","direct","error"]},{"Key":"an algorithm","Fragments":["to","for","analysis"]},{"Key":"algorithm to","Fragments":["run","minimum.","make"]},{"Key":" binary","Fragments":["function"]},{"Key":"binary function","Fragments":["over"]},{"Key":"function over","Fragments":["the"]},{"Key":"the elements","Fragments":["of","with","is","in"]},{"Key":"elements of","Fragments":["two"]},{"Key":"of two","Fragments":["containers.","values.","evils."]},{"Key":"looking really","Fragments":["good!"]},{"Key":"really good!","Fragments":["I"]},{"Key":"good! I","Fragments":["like","have"]},{"Key":"you extracted","Fragments":["intention"]},{"Key":"extracted intention","Fragments":["revealing"]},{"Key":"revealing functions","Fragments":["for"]},{"Key":"functions for","Fragments":["`is_quiet`","string","each"]},{"Key":"for `is_quiet`","Fragments":["and"]},{"Key":"`is_quiet` and","Fragments":["`is_question`."]},{"Key":"and `is_question`.","Fragments":["It"]},{"Key":"`is_question`. It","Fragments":["seems"]},{"Key":"seems odd","Fragments":["that"]},{"Key":"odd that","Fragments":["the"]},{"Key":"the remaining","Fragments":["case,","values"]},{"Key":"remaining case,","Fragments":["shouting,"]},{"Key":"case, shouting,","Fragments":["doesn't"]},{"Key":"shouting, doesn't","Fragments":["have"]},{"Key":"doesn't have","Fragments":["an","pointless","a","a"]},{"Key":"have an","Fragments":["intention-revealing"]},{"Key":"an intention-revealing","Fragments":["function"]},{"Key":"intention-revealing function","Fragments":["extracted"]},{"Key":"function extracted","Fragments":["for"]},{"Key":"extracted for","Fragments":["it."]},{"Key":"for it.","Fragments":["Similarly,"]},{"Key":"it. Similarly,","Fragments":["there"]},{"Key":"Similarly, there","Fragments":["are"]},{"Key":"are some","Fragments":["low-level","suggestions","things","specialized","extra","closed-form","very"]},{"Key":"low-level details","Fragments":["leaking","and"]},{"Key":"details leaking","Fragments":["out"]},{"Key":"leaking out","Fragments":["of"]},{"Key":"of `is_quiet`.","Fragments":["From"]},{"Key":"`is_quiet`. From","Fragments":["the"]},{"Key":"From the","Fragments":["name,"]},{"Key":"the name,","Fragments":["I"]},{"Key":"name, I","Fragments":["was"]},{"Key":"was expecting","Fragments":["`is_quiet`","to"]},{"Key":"expecting `is_quiet`","Fragments":["to"]},{"Key":"`is_quiet` to","Fragments":["return"]},{"Key":"to return","Fragments":["a","the","a","from","a","a","actual","the"]},{"Key":"a bool.","Fragments":["Can"]},{"Key":"bool. Can","Fragments":["you"]},{"Key":"to restructure","Fragments":["it","this"]},{"Key":"that everything","Fragments":["in"]},{"Key":"in `hey`","Fragments":["is","instead"]},{"Key":"is operating","Fragments":["at"]},{"Key":"operating at","Fragments":["the"]},{"Key":"same semantic","Fragments":["level?","level."]},{"Key":" Since","Fragments":["your","the","the","this","it","I","you","we","you","you've"]},{"Key":"Since your","Fragments":["implementation"]},{"Key":"your implementation","Fragments":["is","with","I","of","of"]},{"Key":"implementation is","Fragments":["header-only,","16.","more","simple"]},{"Key":"is header-only,","Fragments":["what"]},{"Key":"header-only, what","Fragments":["happens"]},{"Key":"what happens","Fragments":["if","when","is","during"]},{"Key":"happens if","Fragments":["multiple","we","the","it's","the","you"]},{"Key":"if multiple","Fragments":["translation"]},{"Key":"multiple translation","Fragments":["units"]},{"Key":"translation units","Fragments":["in"]},{"Key":"units in","Fragments":["the"]},{"Key":"same executable","Fragments":["include"]},{"Key":"executable include","Fragments":["this"]},{"Key":"include this","Fragments":["header?","header"]},{"Key":"I include","Fragments":["this","it?"]},{"Key":"this header","Fragments":["in"]},{"Key":"header in","Fragments":["my"]},{"Key":"my translation","Fragments":["unit,","unit."]},{"Key":"translation unit,","Fragments":["it","we","but"]},{"Key":"unit, it","Fragments":["has"]},{"Key":"it has","Fragments":["the","a","been","been","essentially","no","the","a","internal","a","a","to"]},{"Key":"has the","Fragments":["side-effect","problem","performance","right","ability","side","letters","potential"]},{"Key":"the side-effect","Fragments":["of","of"]},{"Key":"side-effect of","Fragments":["bringing","the","properly"]},{"Key":"of bringing","Fragments":["the"]},{"Key":"bringing the","Fragments":["`std`"]},{"Key":"the `std`","Fragments":["namespace"]},{"Key":"`std` namespace","Fragments":["into"]},{"Key":"namespace into","Fragments":["my"]},{"Key":"translation unit.","Fragments":["Can","As"]},{"Key":"unit. Can","Fragments":["you"]},{"Key":"restructure this","Fragments":["so"]},{"Key":"this so","Fragments":["that"]},{"Key":"that it","Fragments":["is","needn't","will","exists.","justifies","would","doesn't","matched","matched","might","is","only","takes","works","reduces","would","is","has","doesn't","builds","would","is","really","is","is","be","falls","improves","doesn't","produces","should","works"]},{"Key":"is side-effect","Fragments":["free"]},{"Key":"side-effect free","Fragments":["with"]},{"Key":"free with","Fragments":["respect"]},{"Key":"with respect","Fragments":["to"]},{"Key":"respect to","Fragments":["the"]},{"Key":"the search","Fragments":["order"]},{"Key":"search order","Fragments":["of"]},{"Key":"order of","Fragments":["namespaces?","global","operation","the"]},{"Key":" Great!","Fragments":["Now"]},{"Key":"Great! Now","Fragments":["we're"]},{"Key":"Now we're","Fragments":["passing"]},{"Key":"we're passing","Fragments":["strings"]},{"Key":"by pointer","Fragments":["so"]},{"Key":"pointer so","Fragments":["we're"]},{"Key":"so we're","Fragments":["not"]},{"Key":"we're not","Fragments":["copying","talking"]},{"Key":"not copying","Fragments":["the"]},{"Key":"the strings.","Fragments":["However,","One","C++","Happy","The","Using","It"]},{"Key":"strings. However,","Fragments":["we"]},{"Key":"However, we","Fragments":["aren't","lost"]},{"Key":"we aren't","Fragments":["modifying","modifying","modifying,"]},{"Key":"aren't modifying","Fragments":["those","the"]},{"Key":"modifying those","Fragments":["strings"]},{"Key":"those strings","Fragments":["and","manually"]},{"Key":"strings and","Fragments":["that","map","test","use","not"]},{"Key":"and that","Fragments":["isn't","empty","perhaps","saves","is","is","someone","eliminates","makes","the","made","is","makes","makes","makes","adds"]},{"Key":"that isn't","Fragments":["obvious","a","a","visible","a"]},{"Key":"isn't obvious","Fragments":["from"]},{"Key":"obvious from","Fragments":["looking","[the"]},{"Key":"from looking","Fragments":["at"]},{"Key":"the signatures","Fragments":["of","on"]},{"Key":"signatures of","Fragments":["our"]},{"Key":"of our","Fragments":["functions.","memory.","current"]},{"Key":"our functions.","Fragments":["We"]},{"Key":"functions. We","Fragments":["can"]},{"Key":"We can","Fragments":["make","reveal","do","stop"]},{"Key":"can make","Fragments":["this","the","the"]},{"Key":"this clear","Fragments":["by"]},{"Key":"clear by","Fragments":["passing"]},{"Key":"by passing","Fragments":["in","in"]},{"Key":"passing in","Fragments":["`const","values","the"]},{"Key":"in `const","Fragments":["string","string"]},{"Key":"`const string","Fragments":["*msg`.","\u0026msg`","\u0026","\u0026\u0026`"]},{"Key":"string *msg`.","Fragments":["We"]},{"Key":"*msg`. We","Fragments":["could"]},{"Key":"We could","Fragments":["also"]},{"Key":"could also","Fragments":["use","check","use","be","use"]},{"Key":"also use","Fragments":["const","proper","a","an","std::numeric_limits\u003c\u003e::max().","an"]},{"Key":"use const","Fragments":["references","strings"]},{"Key":"const references","Fragments":["and","whenever","are"]},{"Key":"references and","Fragments":["pass","pointers"]},{"Key":"and pass","Fragments":["in"]},{"Key":"pass in","Fragments":["`const","a","some","a","a","numbers","a","a","a","a"]},{"Key":"string \u0026msg`","Fragments":["and"]},{"Key":"\u0026msg` and","Fragments":["then"]},{"Key":"and then","Fragments":["we","simple","compared","counting","use","overwriting","switching","counting","negating","compare","call","convert","also","made","resize/remove","you","modify","calling","compile,","a","compare","push","have"]},{"Key":"then we","Fragments":["wouldn't","know"]},{"Key":"we wouldn't","Fragments":["need"]},{"Key":"wouldn't need","Fragments":["to","the"]},{"Key":"use pointer","Fragments":["dereferencing"]},{"Key":"pointer dereferencing","Fragments":["syntax."]},{"Key":" Similarly,","Fragments":["we","for"]},{"Key":"Similarly, we","Fragments":["aren't"]},{"Key":"modifying the","Fragments":["characters","elements","`word`.","tests"]},{"Key":"string in","Fragments":["the","the","your","as","that","the","the"]},{"Key":"the range","Fragments":["for","based","based"]},{"Key":"range for","Fragments":["loop,","would","loop.","syntax","loops","loop"]},{"Key":"for loop,","Fragments":["so","just","other","no","and","but"]},{"Key":"loop, so","Fragments":["we"]},{"Key":"so we","Fragments":["could","can"]},{"Key":"could write","Fragments":["`for","also"]},{"Key":"write `for","Fragments":["(char"]},{"Key":"`for (char","Fragments":["c"]},{"Key":"(char c","Fragments":[":",":",":"]},{"Key":": *msg)`.","Fragments":["The"]},{"Key":"*msg)`. The","Fragments":["main"]},{"Key":"The main","Fragments":["point","issue"]},{"Key":"main point","Fragments":["of"]},{"Key":"point of","Fragments":["using","view,","view","rejection.","view","this","copying"]},{"Key":"of using","Fragments":["by-reference","two","include","the","namespaces","`msg[i]","a","a","the","const","const","an","the","it","a","`if","a","a","the","a","stringstreams","a","the","a","a","indexes.","minLength,","indexes.","indexes."]},{"Key":"using by-reference","Fragments":["types"]},{"Key":"by-reference types","Fragments":["in"]},{"Key":"types in","Fragments":["the","bigger"]},{"Key":"argument of","Fragments":["a","0.","your","```isUppercase```"]},{"Key":"a for","Fragments":["loop","loop"]},{"Key":"loop is","Fragments":["when","non-standard.","a","more","bit","iterating"]},{"Key":"is when","Fragments":["we","I"]},{"Key":"we are","Fragments":["modifying","looking","not","in","dealing"]},{"Key":"are modifying","Fragments":["the"]},{"Key":"elements with","Fragments":["a"]},{"Key":"a non-const","Fragments":["reference,"]},{"Key":"non-const reference,","Fragments":["or"]},{"Key":"reference, or","Fragments":["when"]},{"Key":"or when","Fragments":["copying"]},{"Key":"when copying","Fragments":["the"]},{"Key":"elements is","Fragments":["expensive"]},{"Key":"is expensive","Fragments":["with"]},{"Key":"expensive with","Fragments":["a"]},{"Key":"a const","Fragments":["reference.","reference","reference","reference","reference.","reference","\u0026,","string\u0026,","reference","string","qualifier","reference","implementation."]},{"Key":"reference. For","Fragments":["simple"]},{"Key":"For simple","Fragments":["types"]},{"Key":"simple types","Fragments":["like"]},{"Key":"types like","Fragments":["`char`,"]},{"Key":"like `char`,","Fragments":["and"]},{"Key":"`char`, and","Fragments":["`int`"]},{"Key":"and `int`","Fragments":["that"]},{"Key":"`int` that","Fragments":["we"]},{"Key":"that we","Fragments":["aren't","don't","do","don't","care","care","are","are"]},{"Key":"aren't modifying,","Fragments":["using"]},{"Key":"modifying, using","Fragments":["a"]},{"Key":"using a","Fragments":["reference","namespace.","namespace,","map.","normal","C++11","regex","sledgehammer","double","RNG","series","ranged","class","namespace.","stringstream,","more",".h","class,","class.","class,","`for","while","counter-based","constructor","bit","map","`namespace","tuple.","c++11","string","char","vector","lambda,","static","reference"]},{"Key":"a reference","Fragments":["just","rather","to","to","thus","and","to","in","to","is"]},{"Key":"reference just","Fragments":["complicates"]},{"Key":"just complicates","Fragments":["things"]},{"Key":"complicates things","Fragments":["and"]},{"Key":"things and","Fragments":["involves","since","have"]},{"Key":"and involves","Fragments":["a"]},{"Key":"involves a","Fragments":["small"]},{"Key":"a small","Fragments":["performance","hack","boost","window","degree","overhead"]},{"Key":"small performance","Fragments":["penalty"]},{"Key":"performance penalty","Fragments":["that","of"]},{"Key":"penalty that","Fragments":["we"]},{"Key":"need. So","Fragments":["we"]},{"Key":"So we","Fragments":["can","might","should"]},{"Key":"just use","Fragments":["`char`","appropriately","speech.back().","const","`bob::hey`","library","the","namespace","[].","a","auto:"]},{"Key":"use `char`","Fragments":["for"]},{"Key":"`char` for","Fragments":["the"]},{"Key":"The helper","Fragments":["functions"]},{"Key":"functions here","Fragments":["don't"]},{"Key":"here don't","Fragments":["need"]},{"Key":"be part","Fragments":["of","of","of"]},{"Key":"the class","Fragments":["`bob`,","definition","definition","and","and","has","structure","but","definition","adds"]},{"Key":"`bob`, since","Fragments":["`bob`"]},{"Key":"since `bob`","Fragments":["serves"]},{"Key":"`bob` serves","Fragments":["as"]},{"Key":"serves as","Fragments":["nothing"]},{"Key":"as nothing","Fragments":["more"]},{"Key":"nothing more","Fragments":["than"]},{"Key":"a named","Fragments":["scope","lambda"]},{"Key":"named scope","Fragments":["for"]},{"Key":"scope for","Fragments":["the"]},{"Key":"the function","Fragments":["`hey`.","call","itself.","for","inserts","prototypes","as","as","is","mapping","isalnum()","starting","does","would","were","because","might","overloading","is","is","pointer.","declaration","was","returns","returns","shouldn't","everytime"]},{"Key":"function `hey`.","Fragments":["They"]},{"Key":"`hey`. They","Fragments":["could"]},{"Key":"They could","Fragments":["be"]},{"Key":"be simply","Fragments":["free"]},{"Key":"simply free","Fragments":["functions"]},{"Key":"free functions","Fragments":["in","`bool"]},{"Key":"namespace in","Fragments":["the","which","the","the"]},{"Key":"the `cpp`.","Fragments":["This"]},{"Key":"`cpp`. This","Fragments":["would"]},{"Key":"This would","Fragments":["prevent","be","express","be","also","be","avoid"]},{"Key":"would prevent","Fragments":["any"]},{"Key":"prevent any","Fragments":["clients"]},{"Key":"any clients","Fragments":["of"]},{"Key":"of `bob.h`","Fragments":["from"]},{"Key":"`bob.h` from","Fragments":["having"]},{"Key":"from having","Fragments":["to","to"]},{"Key":"having to","Fragments":["recompile","define","write","check","put","use","loop","scroll","reindex","understand"]},{"Key":"to recompile","Fragments":["when"]},{"Key":"recompile when","Fragments":["we"]},{"Key":"we change","Fragments":["their"]},{"Key":"change their","Fragments":["signatures."]},{"Key":" thank","Fragments":["you","you!"]},{"Key":"thank you","Fragments":["for","for","for","for"]},{"Key":"for all","Fragments":["of","uppercase","you","their","the","capitals","capital"]},{"Key":"your suggestions","Fragments":["for","at","in"]},{"Key":"suggestions for","Fragments":["making","making","you."]},{"Key":"for making","Fragments":["my","the"]},{"Key":"making my","Fragments":["code"]},{"Key":"code nicer.","Fragments":["But"]},{"Key":"nicer. But","Fragments":["what"]},{"Key":"But what","Fragments":["is"]},{"Key":"what is","Fragments":["the","expected","the","recommended.","being","different","the","in"]},{"Key":"the purpose","Fragments":["for","of","of","of","of","and","of"]},{"Key":"purpose for","Fragments":["having"]},{"Key":"for having","Fragments":["an","done","a","a"]},{"Key":"having an","Fragments":["anonymous"]},{"Key":"anonymous namespace?","Fragments":["this"]},{"Key":"namespace? this","Fragments":["is"]},{"Key":"first time","Fragments":["i've","the","`words[currentWord]`","I'","the","using","using","it"]},{"Key":"time i've","Fragments":["really"]},{"Key":"i've really","Fragments":["ever"]},{"Key":"really ever","Fragments":["heard"]},{"Key":"ever heard","Fragments":["of"]},{"Key":"heard of","Fragments":["them."]},{"Key":" boost/tokenizer.hpp","Fragments":["makes"]},{"Key":"boost/tokenizer.hpp makes","Fragments":["this"]},{"Key":"makes this","Fragments":["exercise","whole","an","a","quite","really","not","bit"]},{"Key":"this exercise","Fragments":["a","it","are","is","was","and","with","to","too","we're","for","using","way"]},{"Key":"exercise a","Fragments":["lot"]},{"Key":"lot less","Fragments":["verbose"]},{"Key":"less verbose","Fragments":["to","by"]},{"Key":"verbose to","Fragments":["solve."]},{"Key":"Since the","Fragments":["spec","input"]},{"Key":"the spec","Fragments":["does"]},{"Key":"spec does","Fragments":["not"]},{"Key":"not present","Fragments":["any"]},{"Key":"present any","Fragments":["case"]},{"Key":"any case","Fragments":["where"]},{"Key":"the original","Fragments":["word","to","word","string.","and","word.","word","string","word.","function","test"]},{"Key":"original word","Fragments":["would","and","```m_anagram```"]},{"Key":"word would","Fragments":["be"]},{"Key":" converting","Fragments":["the"]},{"Key":"converting the","Fragments":["word","ASCII","words"]},{"Key":"the word","Fragments":["into","isn't","extraction","with","string","string","into","is","is","is","is","is","count","being","count","rule"]},{"Key":"word into","Fragments":["a","the","a"]},{"Key":"a predicate","Fragments":["function","function:","that"]},{"Key":"predicate function","Fragments":["inside"]},{"Key":"function inside","Fragments":["the","a"]},{"Key":"inside the","Fragments":["constructor","translation","translation","bob","function's","function)","for","namespace","`for`","class","iterator."]},{"Key":" seemed","Fragments":["like"]},{"Key":"seemed like","Fragments":["a","a"]},{"Key":"like a","Fragments":["rather","rather","RegEx","pretty","very","check","foreach","for()","C","C","great","contortion","good","nice","problem","maintenance"]},{"Key":"a rather","Fragments":["elegant","roundabout","unusual"]},{"Key":"rather elegant","Fragments":["solution"]},{"Key":"elegant solution","Fragments":["to"]},{"Key":"solution to","Fragments":["me.","this","the","this","the","use","find"]},{"Key":"However, there","Fragments":["is","are"]},{"Key":"the obvious","Fragments":["problem","way"]},{"Key":"obvious problem","Fragments":["that"]},{"Key":"problem that","Fragments":["we"]},{"Key":"we do","Fragments":["a","that,","that,","this,","arrive"]},{"Key":"do a","Fragments":["copy","back()","calculation,","single","comparison."]},{"Key":"a copy","Fragments":["of","-","of","of","of","before","so","of","assigned","constructed","of"]},{"Key":"the candidates","Fragments":["container,"]},{"Key":" removing","Fragments":["from"]},{"Key":"removing from","Fragments":["it"]},{"Key":"from it","Fragments":["if"]},{"Key":"it if","Fragments":["necessary.","possible:"]},{"Key":"if necessary.","Fragments":["This","Finally,"]},{"Key":"necessary. This","Fragments":["can"]},{"Key":"be expensive","Fragments":["if"]},{"Key":"expensive if","Fragments":["the"]},{"Key":" is","Fragments":["large.","boost","straight"]},{"Key":"didn't expect","Fragments":["an"]},{"Key":"expect an","Fragments":["exercise"]},{"Key":"an exercise","Fragments":["in","I've"]},{"Key":"exercise in","Fragments":["cut","mind.","itself,"]},{"Key":"in cut","Fragments":["\u0026"]},{"Key":"cut \u0026","Fragments":["paste..."]},{"Key":" Your","Fragments":["to_lower","implementation","string","functions","code","use","include","verses","implementation","question","approach","solution","functions","implementation","function","flag","helper","solution","if's","`map`","functions","code"]},{"Key":"Your to_lower","Fragments":["helper"]},{"Key":"to_lower helper","Fragments":["is"]},{"Key":"helper is","Fragments":["the"]},{"Key":" Not","Fragments":["quite","sure","sure","to","sure","sure","sure","aware","sure","sure"]},{"Key":"Not quite","Fragments":["happy"]},{"Key":"quite happy","Fragments":["with"]},{"Key":"happy with","Fragments":["the","it."]},{"Key":" ```","Fragments":["cpp","const","const"]},{"Key":" if(","Fragments":["wordStart","rand()","numSpaces","containsAlpha"]},{"Key":"if( wordStart","Fragments":["=="]},{"Key":"wordStart ==","Fragments":["input.end()"]},{"Key":"== input.end()","Fragments":[")"]},{"Key":"input.end() )","Fragments":["break;"]},{"Key":" in","Fragments":["the","the","case","which","the"]},{"Key":"the loop","Fragments":["body.","is","instead","myself).","sooner,","on","and","variables","to","to","over","and","of","index","to","would","structure","body","terminated.","condition,","condition.","it","and","body"]},{"Key":"loop body.","Fragments":["I"]},{"Key":"body. I","Fragments":["only"]},{"Key":"I only","Fragments":["need","went","found","have","made","use","needed","cared"]},{"Key":"only need","Fragments":["it","to","to","string)"]},{"Key":"need it","Fragments":["in",":p"]},{"Key":"in case","Fragments":["the","the","the"]},{"Key":"case the","Fragments":["input","2nd","maximum","function","string","function","function"]},{"Key":"string ends","Fragments":["with"]},{"Key":"with non-alphanum","Fragments":["characters."]},{"Key":"non-alphanum characters.","Fragments":["It"]},{"Key":"characters. It","Fragments":["feels"]},{"Key":"It feels","Fragments":["like","like","like","like"]},{"Key":"feels like","Fragments":["I","something","`hey`","an","the","there's","a","it","I"]},{"Key":"like I","Fragments":["could","am","am","described","did","could"]},{"Key":"probably rewrite","Fragments":["the"]},{"Key":"rewrite the","Fragments":["code"]},{"Key":"code so","Fragments":["that","that"]},{"Key":"that I","Fragments":["don't","wasn't","could","called","like","could","ran","need","like,","actually","really","missed,","look","find","understand","first","only","may","submitted","thought","don't","could","think","saw","suspect","could","didn't","truly","found","could","could","think","needed","got","am","over","missed.","needed.","needed"]},{"Key":"need an","Fragments":["extra","else."]},{"Key":"an extra","Fragments":["break","ispunct","layer"]},{"Key":"extra break","Fragments":["condition"]},{"Key":"break condition","Fragments":["for"]},{"Key":"condition for","Fragments":["this"]},{"Key":"this case,","Fragments":["but","as","but"]},{"Key":"case, but","Fragments":["I","I'm","I","these"]},{"Key":"can't think","Fragments":["of","of","of","of","of"]},{"Key":"way that","Fragments":["wouldn't","you're","doesn't","you","you"]},{"Key":"that wouldn't","Fragments":["also","have"]},{"Key":"wouldn't also","Fragments":["add"]},{"Key":"also add","Fragments":["some"]},{"Key":"add some","Fragments":["extra","logic","extra"]},{"Key":"some extra","Fragments":["lines","statements.","logic"]},{"Key":"extra lines","Fragments":["of","of"]},{"Key":"lines of","Fragments":["code","code","code","comments.","code,","code","code"]},{"Key":"of code","Fragments":["at","after","that","is","out","compared","by","to","is","appear","are","and","is","slower,"]},{"Key":"code at","Fragments":["other","all."]},{"Key":"at other","Fragments":["places.","submissions","solutions,","people's","solutions."]},{"Key":" Funny,","Fragments":["I","I"]},{"Key":"Funny, I","Fragments":["just","did"]},{"Key":"just re-stumbled","Fragments":["across"]},{"Key":"re-stumbled across","Fragments":["boost::tokenizer"]},{"Key":"across boost::tokenizer","Fragments":["a"]},{"Key":"boost::tokenizer a","Fragments":["few"]},{"Key":"few weeks","Fragments":["ago,"]},{"Key":"weeks ago,","Fragments":["and"]},{"Key":"ago, and","Fragments":["was"]},{"Key":"and was","Fragments":["sort","trying"]},{"Key":"was sort","Fragments":["of","of"]},{"Key":"of wondering","Fragments":["if"]},{"Key":"this pattern","Fragments":["really","to"]},{"Key":" occurs","Fragments":["so"]},{"Key":"occurs so","Fragments":["often"]},{"Key":"so often","Fragments":["to"]},{"Key":"often to","Fragments":["explain"]},{"Key":"to explain","Fragments":["its","here.","my"]},{"Key":"explain its","Fragments":["existance"]},{"Key":"its existance","Fragments":["in"]},{"Key":"existance in","Fragments":["Boost."]},{"Key":"This exercise","Fragments":["just","was"]},{"Key":"exercise just","Fragments":["showed"]},{"Key":"just showed","Fragments":["to"]},{"Key":"showed to","Fragments":["me"]},{"Key":"me that","Fragments":["yes,","I","regular","one","the","it","it","`*phrase.rbegin()`"]},{"Key":"that yes,","Fragments":["it"]},{"Key":"yes, it","Fragments":["is"]},{"Key":"is indeed","Fragments":["rather"]},{"Key":"indeed rather","Fragments":["useful!"]},{"Key":"I guess","Fragments":["sort","referencing","it's","this","it's","I","I","the","you're","I","it","Range","really","I","in","it's","there"]},{"Key":"guess sort","Fragments":["and"]},{"Key":"sort and","Fragments":["compare","it","transform"]},{"Key":"and compare","Fragments":["would","it","things","that"]},{"Key":"compare would","Fragments":["be"]},{"Key":"be the","Fragments":["other","right","condition","most","only","most","last","[C++11","idea","hardest","prefered"]},{"Key":"However, is_permutation","Fragments":["seems"]},{"Key":"is_permutation seems","Fragments":["like"]},{"Key":"seems like","Fragments":["the","a","unnecessary,","kind","the","a","you","an","overkill","you","you","the","your","you'd","a"]},{"Key":"the perfect","Fragments":["fit"]},{"Key":"perfect fit","Fragments":["for","for"]},{"Key":"fit for","Fragments":["the","this"]},{"Key":" When","Fragments":["we","we","you","I","I","I'm","I"]},{"Key":"When we","Fragments":["have","do","do"]},{"Key":"we have","Fragments":["helper","two","a","a","to"]},{"Key":"have helper","Fragments":["functions"]},{"Key":"functions (or","Fragments":["classes)","use"]},{"Key":"(or classes)","Fragments":["in"]},{"Key":"classes) in","Fragments":["a"]},{"Key":"a translation","Fragments":["unit","unit"]},{"Key":"translation unit","Fragments":["that","to","containing","meant.","(eg."]},{"Key":"unit that","Fragments":["we"]},{"Key":"to expose","Fragments":["outside"]},{"Key":"expose outside","Fragments":["that"]},{"Key":"outside that","Fragments":["translation"]},{"Key":"that translation","Fragments":["unit,"]},{"Key":"unit, we","Fragments":["need"]},{"Key":"we need","Fragments":["to","the","to","only"]},{"Key":"to give","Fragments":["them","\"priorities\"","you","stringstreams"]},{"Key":"give them","Fragments":["\"internal","and"]},{"Key":"them \"internal","Fragments":["linkage\"."]},{"Key":"\"internal linkage\".","Fragments":["That"]},{"Key":"linkage\". That","Fragments":["is,"]},{"Key":"That is,","Fragments":["we","one"]},{"Key":"is, we","Fragments":["want"]},{"Key":"we want","Fragments":["those"]},{"Key":"want those","Fragments":["definitions"]},{"Key":"those definitions","Fragments":["to"]},{"Key":"definitions to","Fragments":["be"]},{"Key":"be available","Fragments":["inside"]},{"Key":"available inside","Fragments":["the"]},{"Key":"the translation","Fragments":["unit,","unit","unit"]},{"Key":"unit, but","Fragments":["we"]},{"Key":"but we","Fragments":["don't"]},{"Key":"want anyone","Fragments":["outside"]},{"Key":"anyone outside","Fragments":["the"]},{"Key":"outside the","Fragments":["translation","source","loop.","`for`","loop","scope"]},{"Key":"unit to","Fragments":["be"]},{"Key":"to call","Fragments":["them.","me","`tolower`","out","```string::compare```","it","```ss.str().empty()```","the","matches"]},{"Key":"As to","Fragments":["why"]},{"Key":"to why","Fragments":["an","you"]},{"Key":"why an","Fragments":["anonymous"]},{"Key":"is considered","Fragments":["better,","a","a","a"]},{"Key":"considered better,","Fragments":["see"]},{"Key":"better, see","Fragments":["this"]},{"Key":"see this","Fragments":["[stack"]},{"Key":"this [stack","Fragments":["overflow"]},{"Key":"[stack overflow","Fragments":["thread](http://stackoverflow.com/questions/4977252/why-unnamed-namespace-is-a-superior-alternative-to-static)."]},{"Key":"overflow thread](http://stackoverflow.com/questions/4977252/why-unnamed-namespace-is-a-superior-alternative-to-static).","Fragments":["Basically"]},{"Key":"thread](http://stackoverflow.com/questions/4977252/why-unnamed-namespace-is-a-superior-alternative-to-static). Basically","Fragments":["in"]},{"Key":"Basically in","Fragments":["C++11"]},{"Key":"in C++11","Fragments":["and"]},{"Key":"C++11 and","Fragments":["beyond,","more"]},{"Key":"and beyond,","Fragments":["namespaces"]},{"Key":"beyond, namespaces","Fragments":["are"]},{"Key":"preferred mechanism","Fragments":["for"]},{"Key":"mechanism for","Fragments":["controlling"]},{"Key":"for controlling","Fragments":["visibility."]},{"Key":" An","Fragments":["_anonymous_","issue"]},{"Key":"An _anonymous_","Fragments":["namespace"]},{"Key":"_anonymous_ namespace","Fragments":["is"]},{"Key":"in which","Fragments":["the","case","you've"]},{"Key":"which the","Fragments":["enclosed"]},{"Key":"the enclosed","Fragments":["definitions"]},{"Key":"enclosed definitions","Fragments":["are"]},{"Key":"definitions are","Fragments":["only"]},{"Key":"are only","Fragments":["visible","numbers","dealing"]},{"Key":"only visible","Fragments":["inside","within","within"]},{"Key":"visible inside","Fragments":["the"]},{"Key":"unit containing","Fragments":["the"]},{"Key":"containing the","Fragments":["anonymous","change"]},{"Key":"the anonymous","Fragments":["namespace.","namespace"]},{"Key":"using `trim_copy`","Fragments":["from"]},{"Key":"`trim_copy` from","Fragments":["Boost."]},{"Key":"- It's","Fragments":["quite","good"]},{"Key":"It's quite","Fragments":["short."]},{"Key":"- is_shouting","Fragments":["is"]},{"Key":"is_shouting is","Fragments":["fairly"]},{"Key":"is fairly","Fragments":["long","recent","robust."]},{"Key":"fairly long","Fragments":["and"]},{"Key":"long and","Fragments":["could","\"contains_alpha\"","\"contains_alpha\"","not"]},{"Key":"and could","Fragments":["be","use","have"]},{"Key":"made more","Fragments":["\"functional\""]},{"Key":"- The","Fragments":["only","'yelling'","'question'","'silence'","condition"]},{"Key":"only function","Fragments":["that","that"]},{"Key":"that needs","Fragments":["to","to","improvement,","to"]},{"Key":"needs to","Fragments":["be","make","be.","check","be","be","be","be","be"]},{"Key":"be public","Fragments":["is"]},{"Key":"public is","Fragments":["hey()."]},{"Key":"is hey().","Fragments":["Here"]},{"Key":"hey(). Here","Fragments":["everything"]},{"Key":"Here everything","Fragments":["is"]},{"Key":"everything is","Fragments":["public","readily","a"]},{"Key":"is public","Fragments":["so"]},{"Key":"public so","Fragments":["to"]},{"Key":"so to","Fragments":["speak."]},{"Key":"- std::string","Fragments":["argument"]},{"Key":"argument could","Fragments":["be","be"]},{"Key":"reference in","Fragments":["all","for","your","the"]},{"Key":"in all","Fragments":["cases","of","its"]},{"Key":"all cases","Fragments":["so"]},{"Key":"cases so","Fragments":["that","be"]},{"Key":"it needn't","Fragments":["be"]},{"Key":"needn't be","Fragments":["copied"]},{"Key":"be copied","Fragments":["or"]},{"Key":"copied or","Fragments":["moved."]},{"Key":"- indexing","Fragments":["the"]},{"Key":"indexing the","Fragments":["string"]},{"Key":"is non-standard.","Fragments":["prefer"]},{"Key":"non-standard. prefer","Fragments":["iterators."]},{"Key":"There is","Fragments":["no","an","one","some","no","no","a","no","no","no","a","also","a","no","no","probably"]},{"Key":"no need","Fragments":["for","for","for","to","to","for","for","for","to","for","to","to","for"]},{"Key":"need for","Fragments":["strip_punctuation","further","a","two","multiple","this","the","the","this","any","boost).","looping","the","iterators,","length","me"]},{"Key":"for strip_punctuation","Fragments":["as"]},{"Key":"strip_punctuation as","Fragments":["boost::tokenizer\u003c\u003e"]},{"Key":"as boost::tokenizer\u003c\u003e","Fragments":["already"]},{"Key":"boost::tokenizer\u003c\u003e already","Fragments":["takes"]},{"Key":"already takes","Fragments":["care"]},{"Key":"takes care","Fragments":["of"]},{"Key":"care of","Fragments":["that.","a"]},{"Key":"In fact,","Fragments":["if","you","the","I"]},{"Key":"fact, if","Fragments":["you"]},{"Key":"use to_lower_copy","Fragments":["inside"]},{"Key":"to_lower_copy inside","Fragments":["of"]},{"Key":"the count","Fragments":["index","`word_count[word]"]},{"Key":"count index","Fragments":["operator,"]},{"Key":"index operator,","Fragments":["you"]},{"Key":"operator, you","Fragments":["can"]},{"Key":"can do","Fragments":["away","the","it!"]},{"Key":" with","Fragments":["all","`isalpha`"]},{"Key":"with all","Fragments":["the","the"]},{"Key":"the boilerplate","Fragments":["and"]},{"Key":"boilerplate and","Fragments":["just"]},{"Key":"and just","Fragments":["iterate","ignore","ignore","use","chose","reverted","throw","added","removed"]},{"Key":"just iterate","Fragments":["over"]},{"Key":"of calling","Fragments":["boost::tokenizer\u003c\u003e","append"]},{"Key":"calling boost::tokenizer\u003c\u003e","Fragments":["directly."]},{"Key":"for (auto","Fragments":["\u0026\u0026word:","it","letter"]},{"Key":"(auto \u0026\u0026word:","Fragments":["tokenizer\u003c\u003e(text))"]},{"Key":"\u0026\u0026word: tokenizer\u003c\u003e(text))","Fragments":["count[to_lower_copy(word)]"]},{"Key":"tokenizer\u003c\u003e(text)) count[to_lower_copy(word)]","Fragments":["+="]},{"Key":"count[to_lower_copy(word)] +=","Fragments":["1;"]},{"Key":"considered std::is_permutation?","Fragments":["With"]},{"Key":"std::is_permutation? With","Fragments":["a"]},{"Key":"With a","Fragments":["custom","task"]},{"Key":"a custom","Fragments":["comparison","ctype.","class"]},{"Key":"custom comparison","Fragments":["function"]},{"Key":"comparison function","Fragments":["that"]},{"Key":"that ignores","Fragments":["case,"]},{"Key":"ignores case,","Fragments":["you"]},{"Key":"case, you","Fragments":["can","might"]},{"Key":"can get","Fragments":["the","away","a","dicey","all","challening","a","you"]},{"Key":"same effect","Fragments":["as"]},{"Key":"effect as","Fragments":["sorting,"]},{"Key":" without","Fragments":["requiring"]},{"Key":"without requiring","Fragments":["additional"]},{"Key":"requiring additional","Fragments":["storage."]},{"Key":"I find","Fragments":["the","the","this","better","this","it","it","iterators","your","it","that"]},{"Key":"find the","Fragments":["documentation","documentation","address","start","start","non-regex","full","shortest","right","shortest","correct","next"]},{"Key":"the documentation","Fragments":["for","is","to","of"]},{"Key":"documentation for","Fragments":["`tokenizer`"]},{"Key":"for `tokenizer`","Fragments":["to"]},{"Key":"`tokenizer` to","Fragments":["be"]},{"Key":"be very","Fragments":["formal","surprised"]},{"Key":"very formal","Fragments":["and"]},{"Key":"formal and","Fragments":["difficult"]},{"Key":"and difficult","Fragments":["to"]},{"Key":"difficult to","Fragments":["understand","read","read.","glance","verify","read","understand.","understand"]},{"Key":"what exactly","Fragments":["it"]},{"Key":"exactly it","Fragments":["means"]},{"Key":"it means","Fragments":["in"]},{"Key":"means in","Fragments":["practice."]},{"Key":"in practice.","Fragments":["I"]},{"Key":"practice. I","Fragments":["removed"]},{"Key":"I removed","Fragments":["the","my"]},{"Key":"the `strip_punctuation`","Fragments":["and"]},{"Key":"`strip_punctuation` and","Fragments":["the"]},{"Key":"tests pass,","Fragments":["but"]},{"Key":"pass, but","Fragments":["I","you","it's"]},{"Key":"don't know","Fragments":["that","how","regex","what","what","if","how","if","if"]},{"Key":"know that","Fragments":["things","you","you","the","it","perl","namespaced","they","gcc"]},{"Key":"that things","Fragments":["became"]},{"Key":"things became","Fragments":["\"clearer\""]},{"Key":"became \"clearer\"","Fragments":["for"]},{"Key":"\"clearer\" for","Fragments":["having"]},{"Key":"having done","Fragments":["that."]},{"Key":"done that.","Fragments":["It"]},{"Key":"that. It","Fragments":["depends"]},{"Key":"It depends","Fragments":["on"]},{"Key":"depends on","Fragments":["some","what","whether","your"]},{"Key":"on some","Fragments":["detailed"]},{"Key":"some detailed","Fragments":["knowledge"]},{"Key":"detailed knowledge","Fragments":["of"]},{"Key":"knowledge of","Fragments":["`boost::tokenizer`.","map's","the","C"]},{"Key":"Also, it's","Fragments":["not","great","good"]},{"Key":"it's not","Fragments":["clear","a","more","the","a","tested,","worth","so","important","immediately","part"]},{"Key":"not clear","Fragments":["to","from"]},{"Key":"clear to","Fragments":["me"]},{"Key":"me why","Fragments":["`word`","I"]},{"Key":"why `word`","Fragments":["should"]},{"Key":"`word` should","Fragments":["be"]},{"Key":"be declared","Fragments":["as"]},{"Key":"an rvalue","Fragments":["reference."]},{"Key":"rvalue reference.","Fragments":["I","I"]},{"Key":"reference. I","Fragments":["was","could"]},{"Key":"was able","Fragments":["to","to","to","to"]},{"Key":"to pass","Fragments":["all","a","the","the","the","all","was","as","one","one","arguments","one","the","each","in","but","in","the","in","a"]},{"Key":"pass all","Fragments":["tests","the","the","the","tests","tests?"]},{"Key":"all tests","Fragments":["without","without","here,"]},{"Key":"tests without","Fragments":["the","trimming","doing","it."]},{"Key":"the rvalue","Fragments":["reference."]},{"Key":"could pass","Fragments":["with","in","all"]},{"Key":"pass with","Fragments":["`auto"]},{"Key":"with `auto","Fragments":["word`"]},{"Key":"`auto word`","Fragments":["and"]},{"Key":"word` and","Fragments":["`auto"]},{"Key":"and `auto","Fragments":["const"]},{"Key":"`auto const","Fragments":["\u0026word`;"]},{"Key":"const \u0026word`;","Fragments":["I"]},{"Key":"\u0026word`; I","Fragments":["think"]},{"Key":"think I","Fragments":["prefer","will","tried","missed","would.","prefer"]},{"Key":"I prefer","Fragments":["the","my","less","the","callbacks","less","to","the","to","it."]},{"Key":"prefer the","Fragments":["latter","shorter","style:"]},{"Key":"the latter","Fragments":["because","you","(this"]},{"Key":"latter because","Fragments":["it"]},{"Key":"because it","Fragments":["makes","would","would","might","_reads_","was","is","actually","feels","does","extends","made","maintains","avoid","was","has","seems","won't","seemed"]},{"Key":"makes it","Fragments":["clear","a","clear","more","slightly","so","pass","a"]},{"Key":"it clear","Fragments":["I'm","what","when"]},{"Key":"clear I'm","Fragments":["not"]},{"Key":"not modifying","Fragments":["the","`input`'s"]},{"Key":" Anyway,","Fragments":["so","rip","this","since","I'm"]},{"Key":"Anyway, so","Fragments":["back"]},{"Key":"so back","Fragments":["to"]},{"Key":"back to","Fragments":["`tokenizer`.","the","one.","my","something","maintain"]},{"Key":"to `tokenizer`.","Fragments":["It"]},{"Key":"`tokenizer`. It","Fragments":["does"]},{"Key":"It does","Fragments":["make","look","the","the"]},{"Key":"does make","Fragments":["for"]},{"Key":"make for","Fragments":["smaller"]},{"Key":"for smaller","Fragments":["code,"]},{"Key":"smaller code,","Fragments":["but"]},{"Key":"code, but","Fragments":["you","that","while","it","lets"]},{"Key":"to comprehend","Fragments":["the"]},{"Key":"comprehend the","Fragments":["`tokenizer`"]},{"Key":"the `tokenizer`","Fragments":["class"]},{"Key":"`tokenizer` class","Fragments":["and"]},{"Key":"class and","Fragments":["I","not","using","all"]},{"Key":"documentation is","Fragments":["not"]},{"Key":"not so","Fragments":["great.","sure","clear.","much."]},{"Key":"so great.","Fragments":["I"]},{"Key":"great. I","Fragments":["had"]},{"Key":"to really","Fragments":["dig","dig","mean"]},{"Key":"really dig","Fragments":["deep","into"]},{"Key":"dig deep","Fragments":["to"]},{"Key":"deep to","Fragments":["find"]},{"Key":"find out","Fragments":["that","whether","how"]},{"Key":"out that","Fragments":["punctuation","for","you"]},{"Key":"that punctuation","Fragments":["would"]},{"Key":"punctuation would","Fragments":["be"]},{"Key":"be considered","Fragments":["a","speech","as","a","\"special\""]},{"Key":"considered a","Fragments":["delimiter","non-forceful","word","word","separator"]},{"Key":"a delimiter","Fragments":["by"]},{"Key":"delimiter by","Fragments":["default"]},{"Key":"by default","Fragments":["and","and"]},{"Key":"default and","Fragments":["that","a","copy"]},{"Key":"that empty","Fragments":["tokens"]},{"Key":"empty tokens","Fragments":["would","by"]},{"Key":"tokens would","Fragments":["be"]},{"Key":"be discarded","Fragments":["by"]},{"Key":"discarded by","Fragments":["default."]},{"Key":"by default.","Fragments":["So"]},{"Key":"default. So","Fragments":["I'm"]},{"Key":"So I'm","Fragments":["conflicted","actually"]},{"Key":"I'm conflicted","Fragments":["as","as","on"]},{"Key":"conflicted as","Fragments":["to","to"]},{"Key":"as to","Fragments":["whether","whether","how","avoid","avoid","why"]},{"Key":"to whether","Fragments":["or","or"]},{"Key":"whether or","Fragments":["not","not","not","not"]},{"Key":"not it","Fragments":["makes"]},{"Key":"code clearer.","Fragments":["If"]},{"Key":"clearer. If","Fragments":["you're"]},{"Key":"If you're","Fragments":["familiar","going"]},{"Key":"you're familiar","Fragments":["with"]},{"Key":"familiar with","Fragments":["boost.tokenizer,","the","them","it.","the","it.","that","the"]},{"Key":"with boost.tokenizer,","Fragments":["then"]},{"Key":"boost.tokenizer, then","Fragments":["yes,"]},{"Key":"then yes,","Fragments":["but"]},{"Key":"yes, but","Fragments":["otherwise,"]},{"Key":"but otherwise,","Fragments":["I"]},{"Key":"otherwise, I","Fragments":["think"]},{"Key":"think the","Fragments":["answer","code","last","solution","reason","use","best","isEmpty","upside","conv.empty()","solutiion","creation","new","erase-remove","sorted","test","enumeration"]},{"Key":"the answer","Fragments":["is","(e.g.,","to","here:"]},{"Key":"answer is","Fragments":["no."]},{"Key":" `boost::tokenizer\u003c\u003e`","Fragments":["splits"]},{"Key":"`boost::tokenizer\u003c\u003e` splits","Fragments":["on"]},{"Key":"splits on","Fragments":["whitespace"]},{"Key":"on whitespace","Fragments":["_and_"]},{"Key":"whitespace _and_","Fragments":["punctuation,"]},{"Key":"_and_ punctuation,","Fragments":["dropping"]},{"Key":"punctuation, dropping","Fragments":["empty"]},{"Key":"dropping empty","Fragments":["tokens"]},{"Key":"tokens by","Fragments":["default,"]},{"Key":"by default,","Fragments":["but","but"]},{"Key":"default, but","Fragments":["I","if"]},{"Key":"didn't find","Fragments":["this","the","out"]},{"Key":"find this","Fragments":["obvious","out.","exercise,","code","funny"]},{"Key":"this obvious","Fragments":["from"]},{"Key":"from [the","Fragments":["documentation](http://www.boost.org/doc/libs/1_55_0/libs/tokenizer/)"]},{"Key":"[the documentation](http://www.boost.org/doc/libs/1_55_0/libs/tokenizer/)","Fragments":["on"]},{"Key":"documentation](http://www.boost.org/doc/libs/1_55_0/libs/tokenizer/) on","Fragments":["a"]},{"Key":"a first","Fragments":["reading.","pass"]},{"Key":"first reading.","Fragments":["I"]},{"Key":"reading. I","Fragments":["had"]},{"Key":"dig into","Fragments":["the"]},{"Key":"documentation to","Fragments":["find","confirm"]},{"Key":"out. Therefore,","Fragments":["I'm"]},{"Key":"Therefore, I'm","Fragments":["conflicted"]},{"Key":"not this","Fragments":["version","one."]},{"Key":"version is","Fragments":["clearer","slower"]},{"Key":"is clearer","Fragments":["than","for"]},{"Key":"clearer than","Fragments":["my","this."]},{"Key":"my earlier","Fragments":["versions."]},{"Key":"earlier versions.","Fragments":["It"]},{"Key":"versions. It","Fragments":["is"]},{"Key":"is certainly","Fragments":["more"]},{"Key":"certainly more","Fragments":["concise."]},{"Key":" cool,","Fragments":["thank"]},{"Key":"cool, thank","Fragments":["you."]},{"Key":"think if","Fragments":["you","this"]},{"Key":"a library","Fragments":["function"]},{"Key":"library function","Fragments":["to"]},{"Key":"function to","Fragments":["solve","check","reduce","just","perform","normalise","modify","create","determine","determine"]},{"Key":"to solve","Fragments":["a","on","the","this","it","this","isShouting","this","this","the"]},{"Key":"solve a","Fragments":["problem"]},{"Key":"a problem","Fragments":["you'd","because","in","but","if"]},{"Key":"problem you'd","Fragments":["have"]},{"Key":"you'd have","Fragments":["to","to","a"]},{"Key":"solve on","Fragments":["your"]},{"Key":"on your","Fragments":["own","preferences","environment,","own,","libstdc++","suggestions.","machine,","suggestions."]},{"Key":"your own","Fragments":["otherwise,","calculations","implementation","string","helper."]},{"Key":"own otherwise,","Fragments":["you"]},{"Key":"otherwise, you","Fragments":["will"]},{"Key":"you will","Fragments":["always,","see","be","always","get","need","get","first","be"]},{"Key":"will always,","Fragments":["or"]},{"Key":"always, or","Fragments":["most"]},{"Key":"or most","Fragments":["of"]},{"Key":"most of","Fragments":["the","the","the","the","the"]},{"Key":"the time,","Fragments":["need"]},{"Key":"time, need","Fragments":["to"]},{"Key":"quite exactly","Fragments":["how"]},{"Key":"exactly how","Fragments":["to"]},{"Key":"use that","Fragments":["library","library"]},{"Key":"that library","Fragments":["function.","in"]},{"Key":"library function.","Fragments":["To"]},{"Key":"function. To","Fragments":["reuse"]},{"Key":"To reuse","Fragments":["someone"]},{"Key":"reuse someone","Fragments":["elses"]},{"Key":"someone elses","Fragments":["code"]},{"Key":"elses code","Fragments":["does"]},{"Key":"not free","Fragments":["you"]},{"Key":"free you","Fragments":["from"]},{"Key":" understanding","Fragments":["the"]},{"Key":"understanding the","Fragments":["problem"]},{"Key":"problem domain","Fragments":["and","very","better"]},{"Key":"domain and","Fragments":["knowing"]},{"Key":"and knowing","Fragments":["how"]},{"Key":"knowing how","Fragments":["to"]},{"Key":"use the","Fragments":["actual","`_copy`","C++11","gcc","boost","syntax:","new","bob::hey","*exercism","*exercism","range","unnamed","functional","same","_isalpha_","number","trinary","function","boost","std::transform","```top```","length","std::sort","member","boost","stringstream","new","resulting","increment","snprintf()","transform","relational","sizeof","```string::operator[]```","functions","variable","\"auto\""]},{"Key":"the actual","Fragments":["API","type.","time","`studentRoster`"]},{"Key":"actual API","Fragments":["that"]},{"Key":"API that","Fragments":["was"]},{"Key":"that was","Fragments":["given","getting","an","happening","not","to","something","silly"]},{"Key":"was given","Fragments":["to"]},{"Key":"given to","Fragments":["you.","the"]},{"Key":" But","Fragments":["I","let","why","let's","I","the","this","usually","I","it","that's","even","let","instead","then","I","I"]},{"Key":"I agree,","Fragments":["the","and"]},{"Key":"agree, the","Fragments":["boost::tokenizer\u003c\u003e"]},{"Key":"the boost::tokenizer\u003c\u003e","Fragments":["documentation"]},{"Key":"boost::tokenizer\u003c\u003e documentation","Fragments":["isn't"]},{"Key":"documentation isn't","Fragments":["particularily"]},{"Key":"isn't particularily","Fragments":["user"]},{"Key":"particularily user","Fragments":["friendly."]},{"Key":" Another","Fragments":["possibility","note:","interesting","note"]},{"Key":"Another possibility","Fragments":["for","would"]},{"Key":"possibility for","Fragments":["the"]},{"Key":"the interface","Fragments":["would"]},{"Key":"interface would","Fragments":["be"]},{"Key":"a sign","Fragments":["function","that"]},{"Key":"sign function","Fragments":["with"]},{"Key":"function with","Fragments":["default","the","another"]},{"Key":"with default","Fragments":["end","arguments."]},{"Key":"default end","Fragments":["argument"]},{"Key":"end argument","Fragments":["of"]},{"Key":"string sing(unsigned","Fragments":["begin,"]},{"Key":"sing(unsigned begin,","Fragments":["unsigned"]},{"Key":"begin, unsigned","Fragments":["end"]},{"Key":"unsigned end","Fragments":["="]},{"Key":"end =","Fragments":["0)"]},{"Key":" which","Fragments":["avoids","has","means","is"]},{"Key":"which avoids","Fragments":["having"]},{"Key":"avoids having","Fragments":["to"]},{"Key":"to define","Fragments":["the","several"]},{"Key":"define the","Fragments":["one-parameter","empty","returned"]},{"Key":"the one-parameter","Fragments":["version"]},{"Key":"one-parameter version","Fragments":["explicitly."]},{"Key":"is likely","Fragments":["my","my"]},{"Key":"likely my","Fragments":["final","final"]},{"Key":"my final","Fragments":["version.","version."]},{"Key":"The predicate","Fragments":["to"]},{"Key":"predicate to","Fragments":["copy_if"]},{"Key":"to copy_if","Fragments":["could"]},{"Key":"copy_if could","Fragments":["easily"]},{"Key":"could easily","Fragments":["be"]},{"Key":"easily be","Fragments":["extracted"]},{"Key":"be extracted","Fragments":["to"]},{"Key":"extracted to","Fragments":["a"]},{"Key":"a unary","Fragments":["(member)"]},{"Key":"unary (member)","Fragments":["function,"]},{"Key":" or","Fragments":["into"]},{"Key":"or into","Fragments":["the"]},{"Key":"function call","Fragments":["operator,"]},{"Key":"call operator,","Fragments":["making"]},{"Key":"operator, making","Fragments":["the"]},{"Key":"making the","Fragments":["anagram","code","code","default","deductions","whole","entire","other","comparision","song","code"]},{"Key":"anagram into","Fragments":["a"]},{"Key":"However, the","Fragments":["nested"]},{"Key":"the nested","Fragments":["lambda","loops."]},{"Key":"nested lambda","Fragments":["is"]},{"Key":"lambda is","Fragments":["nice","a"]},{"Key":"is nice","Fragments":["in","for","and","and","and"]},{"Key":"nice in","Fragments":["itself,"]},{"Key":"in itself,","Fragments":["so","it"]},{"Key":"itself, so","Fragments":["as"]},{"Key":"so as","Fragments":["said,","good","to","to"]},{"Key":"as said,","Fragments":["I"]},{"Key":"said, I","Fragments":["will","suggest","find","think"]},{"Key":"I will","Fragments":["likely","go","make","implement","switch","then","simply","do","take","admit","fix","revisit","look","still","fix","revisit"]},{"Key":"will likely","Fragments":["keep"]},{"Key":"likely keep","Fragments":["it"]},{"Key":"keep it","Fragments":["that","easy","simple","concise.","more"]},{"Key":"it that","Fragments":["way."]},{"Key":" Why","Fragments":["not","aren't","isn't","don't","are","do","are","not","did","do","not","did"]},{"Key":"Why not","Fragments":["use","check","just","use","use","tell","just"]},{"Key":"not use","Fragments":["appropriately","C++'s","the","\"algorithm\"","array","\"remark.back()\"","some","it","islower","`std::stoi`"]},{"Key":"use appropriately","Fragments":["named","named"]},{"Key":"appropriately named","Fragments":["functions","boolean"]},{"Key":"named functions","Fragments":["instead"]},{"Key":"functions instead","Fragments":["of","of"]},{"Key":"Looks great,","Fragments":["very"]},{"Key":"great, very","Fragments":["fast.","readable"]},{"Key":"very fast.","Fragments":["Two"]},{"Key":"fast. Two","Fragments":["very"]},{"Key":"Two very","Fragments":["minor"]},{"Key":"very minor","Fragments":["things:","thing,"]},{"Key":"spaces at","Fragments":["the","the","the"]},{"Key":" 2","Fragments":[")"]},{"Key":"2 )","Fragments":["You","c"]},{"Key":") You","Fragments":["could"]},{"Key":"could use","Fragments":["```","the","an","`using","regex","_stringstream_","regex","a","isspace(c)","a","it","to","some","the","some","an","the","boost::to_lower_copy","the","the","the","```islower```","```const"]},{"Key":"(const auto\u0026","Fragments":["value","c","word"]},{"Key":"auto\u0026 value","Fragments":[":"]},{"Key":"value :","Fragments":["msg)"]},{"Key":"loop instead","Fragments":["of","of"]},{"Key":" Better!","Fragments":["Now"]},{"Key":"Better! Now","Fragments":["`hey`"]},{"Key":"Now `hey`","Fragments":["has"]},{"Key":"`hey` has","Fragments":["code"]},{"Key":"has code","Fragments":["that"]},{"Key":"that all","Fragments":["operates","the","but"]},{"Key":"all operates","Fragments":["at"]},{"Key":"operates at","Fragments":["the"]},{"Key":"What happens","Fragments":["if","if","if","if","to","if"]},{"Key":"if we","Fragments":["test","did","do","just","don't","can","put"]},{"Key":"we test","Fragments":["for","for"]},{"Key":"for silence","Fragments":["before","and","and","first"]},{"Key":"silence before","Fragments":["we"]},{"Key":"before we","Fragments":["test","find"]},{"Key":"for shouting?","Fragments":["Do"]},{"Key":"shouting? Do","Fragments":["we"]},{"Key":"Do we","Fragments":["need"]},{"Key":"the intermediate","Fragments":["variable"]},{"Key":"intermediate variable","Fragments":["`testStatement`"]},{"Key":"variable `testStatement`","Fragments":["anymore?"]},{"Key":"`testStatement` anymore?","Fragments":["Trimming"]},{"Key":"anymore? Trimming","Fragments":["feels"]},{"Key":"Trimming feels","Fragments":["like"]},{"Key":"like something","Fragments":["we"]},{"Key":"something we","Fragments":["need"]},{"Key":"do to","Fragments":["test","avoid"]},{"Key":"The loop","Fragments":["in"]},{"Key":"loop in","Fragments":["lines","Python,","`shouting()`.","`verse`","the","c++11."]},{"Key":"in lines","Fragments":["13-20","5-6:"]},{"Key":"lines 13-20","Fragments":["has"]},{"Key":"13-20 has","Fragments":["pretty"]},{"Key":"has pretty","Fragments":["low","nice"]},{"Key":"pretty low","Fragments":["[cohesion](http://en.wikipedia.org/wiki/Cohesion_(computer_science))."]},{"Key":"low [cohesion](http://en.wikipedia.org/wiki/Cohesion_(computer_science)).","Fragments":["It's"]},{"Key":"[cohesion](http://en.wikipedia.org/wiki/Cohesion_(computer_science)). It's","Fragments":["doing"]},{"Key":"It's doing","Fragments":["two"]},{"Key":"doing two","Fragments":["tests","jobs:"]},{"Key":"two tests","Fragments":["one","are","if","I"]},{"Key":"tests one","Fragments":["one"]},{"Key":"one one","Fragments":["of"]},{"Key":"of them","Fragments":["causes","regex_match","is","in","is","to","are","return","I"]},{"Key":"them causes","Fragments":["an"]},{"Key":"causes an","Fragments":["early"]},{"Key":"an early","Fragments":["return.","revision.","return"]},{"Key":"early return.","Fragments":["Have"]},{"Key":"return. Have","Fragments":["you"]},{"Key":"using standard","Fragments":["library"]},{"Key":"library algorithms","Fragments":["or"]},{"Key":"algorithms or","Fragments":["methods"]},{"Key":"or methods","Fragments":["on"]},{"Key":"on `std::string`","Fragments":["to"]},{"Key":"`std::string` to","Fragments":["make"]},{"Key":"it clearer","Fragments":["and","when"]},{"Key":"clearer and","Fragments":["more","has"]},{"Key":"and more","Fragments":["cohesive?","modern","concise.","understandable","readable."]},{"Key":"more cohesive?","Fragments":["Sometimes"]},{"Key":"cohesive? Sometimes","Fragments":["two"]},{"Key":"Sometimes two","Fragments":["loops"]},{"Key":"two loops","Fragments":["that"]},{"Key":"loops that","Fragments":["do","you"]},{"Key":"that do","Fragments":["one"]},{"Key":"do one","Fragments":["thing","thing."]},{"Key":"one thing","Fragments":["each","for","can","about"]},{"Key":"thing each","Fragments":["leads"]},{"Key":"each leads","Fragments":["to"]},{"Key":"leads to","Fragments":["more","buffer"]},{"Key":"to more","Fragments":["expressive","quickly"]},{"Key":"more expressive","Fragments":["code","to","to","of","that","(it"]},{"Key":"expressive code","Fragments":["than"]},{"Key":"code than","Fragments":["one"]},{"Key":"than one","Fragments":["loop","file"]},{"Key":"one loop","Fragments":["that"]},{"Key":"loop that","Fragments":["does"]},{"Key":"that does","Fragments":["two","what","the"]},{"Key":"does two","Fragments":["things"]},{"Key":"two things","Fragments":["intertwined."]},{"Key":" Yeah,","Fragments":["I","this","you're"]},{"Key":"Yeah, I","Fragments":["have"]},{"Key":"a love/hate","Fragments":["relationship"]},{"Key":"love/hate relationship","Fragments":["with"]},{"Key":"relationship with","Fragments":["default"]},{"Key":"default arguments.","Fragments":["Over"]},{"Key":"arguments. Over","Fragments":["time"]},{"Key":"Over time","Fragments":["I've"]},{"Key":"time I've","Fragments":["come"]},{"Key":"I've come","Fragments":["to"]},{"Key":"to lean","Fragments":["on"]},{"Key":"lean on","Fragments":["explicit"]},{"Key":"on explicit","Fragments":["overloads"]},{"Key":"explicit overloads","Fragments":["instead"]},{"Key":"overloads instead","Fragments":["of"]},{"Key":"of default","Fragments":["arguments,"]},{"Key":"default arguments,","Fragments":["but"]},{"Key":"arguments, but","Fragments":["in"]},{"Key":"but in","Fragments":["this","a","VS2013+Boost,","terms","the","the"]},{"Key":"this case","Fragments":["it","only","it","(keeping","code","because","I","yet,","?"]},{"Key":"case it","Fragments":["might","may"]},{"Key":"it might","Fragments":["be","be","give","be","be","be","make","have","make","be","be","seem","be"]},{"Key":"might be","Fragments":["better","good","better","more","able","more","dangerous","wrong,","a","used","better","written","an","a","seen","interesting","worst","better","a","safe","more","worth","questionable.","nice","in"]},{"Key":"be better","Fragments":["with","??","by","to","practice/more","(or","because","that","suited","to","implemented","to","as","expressed","to","form.","C++"]},{"Key":"better with","Fragments":["the","style"]},{"Key":"the default","Fragments":["argument.","constructor","value","(std::allocator)","implementation","constructor","is","```boost::tokenizer\u003c\u003e```","constructor","response."]},{"Key":"don't know,","Fragments":["but","it"]},{"Key":"know, but","Fragments":["it"]},{"Key":"seems I","Fragments":["copy"]},{"Key":"I copy","Fragments":["to","it"]},{"Key":"copy to","Fragments":["mutch"]},{"Key":"to mutch","Fragments":["the"]},{"Key":"mutch the","Fragments":["string"]},{"Key":"string told","Fragments":["to"]},{"Key":"told to","Fragments":["Bob","avoid."]},{"Key":"to Bob","Fragments":["-","causes"]},{"Key":"Bob -","Fragments":["at","now"]},{"Key":"- at","Fragments":["least","least"]},{"Key":"least to","Fragments":["three"]},{"Key":"to three","Fragments":["different"]},{"Key":"three different","Fragments":["locations.","solutions:","places"]},{"Key":"different locations.","Fragments":["But"]},{"Key":"locations. But","Fragments":["I"]},{"Key":"think this","Fragments":["way","matches","code","is","is","solution","should","one","is","really","would"]},{"Key":"this way","Fragments":["what","is","I","at","the"]},{"Key":"way what","Fragments":["I'm"]},{"Key":"what I'm","Fragments":["doing"]},{"Key":"I'm doing","Fragments":["gets","something"]},{"Key":"doing gets","Fragments":["pretty"]},{"Key":"gets pretty","Fragments":["readable"]},{"Key":"pretty readable","Fragments":["and"]},{"Key":"readable and","Fragments":["understandable.","less","robust","straightforward","concise","concise","concise","concise.","also"]},{"Key":"Also, as","Fragments":["there"]},{"Key":"as there","Fragments":["is","are"]},{"Key":"is already","Fragments":["a","correct.","bool.","taken."]},{"Key":"already a","Fragments":["dependency"]},{"Key":"a dependency","Fragments":["on"]},{"Key":"dependency on","Fragments":["boost,","\u003cstring\u003e","Boost"]},{"Key":"on boost,","Fragments":["I've"]},{"Key":"boost, I've","Fragments":["used"]},{"Key":"I've used","Fragments":["its"]},{"Key":"used its","Fragments":["string"]},{"Key":"its string","Fragments":["algorithms","argument,"]},{"Key":"string algorithms","Fragments":["(which","which"]},{"Key":"algorithms (which","Fragments":["are"]},{"Key":"(which are","Fragments":["new"]},{"Key":"are new","Fragments":["to"]},{"Key":"new to","Fragments":["me,","C++,","namespaces","C++","this","it","cmake","c++,"]},{"Key":"to me,","Fragments":["indeed!).","but","but"]},{"Key":" Agreed!","Fragments":["Just"]},{"Key":"Agreed! Just","Fragments":["submitted"]},{"Key":"Just submitted","Fragments":["again"]},{"Key":"submitted again","Fragments":["fixing"]},{"Key":"again fixing","Fragments":["these"]},{"Key":"fixing these","Fragments":["problems."]},{"Key":"think splitting","Fragments":["tokenization"]},{"Key":"splitting tokenization","Fragments":["and"]},{"Key":"tokenization and","Fragments":["word"]},{"Key":"and word","Fragments":["counting"]},{"Key":"word counting","Fragments":["complicates"]},{"Key":"counting complicates","Fragments":["the"]},{"Key":"complicates the","Fragments":["code"]},{"Key":"code quite","Fragments":["a","a"]},{"Key":"But let","Fragments":["me","me"]},{"Key":"let me","Fragments":["do","know","move","know","drive","know!","know.","add"]},{"Key":"me do","Fragments":["what"]},{"Key":"do what","Fragments":["this","they","they","it","you"]},{"Key":"what this","Fragments":["site","program","part"]},{"Key":"this site","Fragments":["asks","is"]},{"Key":"site asks","Fragments":["for,"]},{"Key":"asks for,","Fragments":["nitpicking."]},{"Key":" `string","Fragments":["word"]},{"Key":"`string word","Fragments":["=","="]},{"Key":"word =","Fragments":["wordlist[wordlist.size()-1];`","wordlist.back();`","rit-\u003estr();`","rit++-\u003estr();`","std::string("]},{"Key":"= wordlist[wordlist.size()-1];`","Fragments":["could"]},{"Key":"wordlist[wordlist.size()-1];` could","Fragments":["be"]},{"Key":"be `string","Fragments":["word"]},{"Key":" ,","Fragments":["`"]},{"Key":", `","Fragments":["wordlist.erase(wordlist.end());`"]},{"Key":"` wordlist.erase(wordlist.end());`","Fragments":["seems"]},{"Key":"wordlist.erase(wordlist.end());` seems","Fragments":["wrong"]},{"Key":"seems wrong","Fragments":["and"]},{"Key":"wrong and","Fragments":["should","wasn't"]},{"Key":"and should","Fragments":["probably","be"]},{"Key":"should probably","Fragments":["be","be","get","be","put","check"]},{"Key":"probably be","Fragments":["`wordlist.erase(wordlist.end()-1);`","to","a","a","put","some"]},{"Key":"be `wordlist.erase(wordlist.end()-1);`","Fragments":["or"]},{"Key":"`wordlist.erase(wordlist.end()-1);` or","Fragments":["better"]},{"Key":"or better","Fragments":["yet","-"]},{"Key":"better yet","Fragments":["`wordlist.pop_back();`"]},{"Key":"Also, in","Fragments":["general","answer"]},{"Key":"in general","Fragments":["that","is","I"]},{"Key":"general that","Fragments":["while"]},{"Key":"that while","Fragments":["loop"]},{"Key":"while loop","Fragments":["is","can","and","instead"]},{"Key":"a strange","Fragments":["way"]},{"Key":"strange way","Fragments":["to"]},{"Key":"to iterate","Fragments":["over","over","over","over,","the","over"]},{"Key":"over every","Fragments":["element"]},{"Key":"every element","Fragments":["(there's"]},{"Key":"element (there's","Fragments":["no"]},{"Key":"(there's no","Fragments":["real"]},{"Key":"no real","Fragments":["reason","effort","need","benefit.","reason","alternative"]},{"Key":"real reason","Fragments":["to","to"]},{"Key":"reason to","Fragments":["delete","use","have","have","have","make","do","use"]},{"Key":"to delete","Fragments":["each","line"]},{"Key":"delete each","Fragments":["element)"]},{"Key":"rather roundabout","Fragments":["way"]},{"Key":"roundabout way","Fragments":["to"]},{"Key":"to increase","Fragments":["the","readability.","readability."]},{"Key":"increase the","Fragments":["count","distance"]},{"Key":"count `word_count[word]","Fragments":["="]},{"Key":"`word_count[word] =","Fragments":["(word_count.find(word)-\u003esecond"]},{"Key":"= (word_count.find(word)-\u003esecond","Fragments":["+"]},{"Key":"(word_count.find(word)-\u003esecond +","Fragments":["1);`,"]},{"Key":"+ 1);`,","Fragments":["I"]},{"Key":"1);`, I","Fragments":["couldn't"]},{"Key":"I couldn't","Fragments":["really","come","get"]},{"Key":"couldn't really","Fragments":["find"]},{"Key":"really find","Fragments":["out"]},{"Key":"out whether","Fragments":["this"]},{"Key":"whether this","Fragments":["is","is"]},{"Key":"behavior or","Fragments":["not"]},{"Key":"not but","Fragments":["the"]},{"Key":"but the","Fragments":["fact","number","exercise","concept","unit","gain","robot","one","way","fact","tests","way","function","string","very","trim","validity","`==","readme","rest"]},{"Key":"I wasn't","Fragments":["sure","even","sure","trying","sure","aware","familiar","able","sure","aware"]},{"Key":"wasn't sure","Fragments":["maybe","about","where","about"]},{"Key":"sure maybe","Fragments":["a"]},{"Key":"maybe a","Fragments":["sign"]},{"Key":"sign that","Fragments":["this"]},{"Key":"that this","Fragments":["should","would","has","solution","can","one","leaks","is","was","was","happens,"]},{"Key":"this should","Fragments":["be","be","be"]},{"Key":"be simplified.","Fragments":["The"]},{"Key":"simplified. The","Fragments":["expression"]},{"Key":"The expression","Fragments":["`word_count[word]`"]},{"Key":"expression `word_count[word]`","Fragments":["can"]},{"Key":"`word_count[word]` can","Fragments":["implicitly"]},{"Key":"can implicitly","Fragments":["insert"]},{"Key":"implicitly insert","Fragments":["`word`"]},{"Key":"insert `word`","Fragments":["into"]},{"Key":"`word` into","Fragments":["the"]},{"Key":"the map,","Fragments":["this"]},{"Key":"map, this","Fragments":["element"]},{"Key":"this element","Fragments":["is"]},{"Key":"element is","Fragments":["then","the"]},{"Key":"is then","Fragments":["read","pretty","checked"]},{"Key":"then read","Fragments":["withing"]},{"Key":"read withing","Fragments":["the"]},{"Key":"withing the","Fragments":["same"]},{"Key":"same expression","Fragments":["on"]},{"Key":"expression on","Fragments":["the","line"]},{"Key":"the right","Fragments":["side","way","choice","choice.","thing.","way","content","algorithm","direction,","regex","this"]},{"Key":"right side","Fragments":["`word_count.find(word)`."]},{"Key":" Removing","Fragments":["the"]},{"Key":"Removing the","Fragments":["spaces","C"]},{"Key":"the spaces","Fragments":["in","after"]},{"Key":"spaces in","Fragments":["the"]},{"Key":"the initial","Fragments":["string","```compute()```"]},{"Key":"initial string","Fragments":["has"]},{"Key":"string has","Fragments":["two","no","to","to","a","any"]},{"Key":"has two","Fragments":["advantages."]},{"Key":"two advantages.","Fragments":["First,"]},{"Key":"advantages. First,","Fragments":["it"]},{"Key":"First, it","Fragments":["simplifies"]},{"Key":"it simplifies","Fragments":["testing","the"]},{"Key":"simplifies testing","Fragments":["whether"]},{"Key":"testing whether","Fragments":["the"]},{"Key":"whether the","Fragments":["string","message","message","message","string","string","length"]},{"Key":"is empty","Fragments":["or","or","requiring","and","or","by","it"]},{"Key":"empty or","Fragments":["full","consists","an"]},{"Key":"or full","Fragments":["of"]},{"Key":"full of","Fragments":["spaces."]},{"Key":"of spaces.","Fragments":["Second,"]},{"Key":"spaces. Second,","Fragments":["it"]},{"Key":"Second, it","Fragments":["allows"]},{"Key":"it allows","Fragments":["to","to"]},{"Key":"allows to","Fragments":["have"]},{"Key":"question with","Fragments":["spaces"]},{"Key":"with spaces","Fragments":["after","and"]},{"Key":"the question","Fragments":["mark.","mark","first","test","test","twice",":(","has","response","in","mark","mark."]},{"Key":"considered someone","Fragments":["is"]},{"Key":"someone is","Fragments":["shouting","shouting.","shouting","yelling"]},{"Key":"is shouting","Fragments":["when","and","at"]},{"Key":"shouting when","Fragments":["there","I"]},{"Key":"when there","Fragments":["are","is","are","is"]},{"Key":"are more","Fragments":["upper","scalable","descriptive.","C++,"]},{"Key":"more upper","Fragments":["cases"]},{"Key":"upper cases","Fragments":["characters","characters.","characters."]},{"Key":"cases characters","Fragments":["than"]},{"Key":"characters than","Fragments":["lower"]},{"Key":"than lower","Fragments":["cases,"]},{"Key":"lower cases,","Fragments":["to"]},{"Key":"cases, to","Fragments":["allow"]},{"Key":"to allow","Fragments":["for"]},{"Key":"allow for","Fragments":["typos."]},{"Key":"The way","Fragments":["that","I","I","above,","these","you","that","I"]},{"Key":"you're doing","Fragments":["this,","is"]},{"Key":"doing this,","Fragments":["I'd","as"]},{"Key":"this, I'd","Fragments":["use"]},{"Key":"I'd use","Fragments":["switch","e.g."]},{"Key":"switch statement","Fragments":["in","to","to","instead","I","for"]},{"Key":"statement in","Fragments":["`hey`."]},{"Key":"But why","Fragments":["not"]},{"Key":"why not","Fragments":["just","use","to","make"]},{"Key":"not just","Fragments":["use","for","get","the","capacity.","return","use"]},{"Key":"named boolean","Fragments":["functions"]},{"Key":"boolean functions","Fragments":["in","are","and"]},{"Key":"`hey` instead","Fragments":["of"]},{"Key":"of categorizing","Fragments":["in"]},{"Key":"categorizing in","Fragments":["a"]},{"Key":"had much","Fragments":["fun"]},{"Key":"much fun","Fragments":["learning"]},{"Key":"fun learning","Fragments":["how"]},{"Key":"learning how","Fragments":["to"]},{"Key":"use split","Fragments":["and"]},{"Key":"split and","Fragments":["accumulate."]},{"Key":" Indeed","Fragments":["removing"]},{"Key":"Indeed removing","Fragments":["spaces"]},{"Key":"removing spaces","Fragments":["from"]},{"Key":"spaces from","Fragments":["the"]},{"Key":"the very","Fragments":["start","first","least","beginning","helpful"]},{"Key":"very start","Fragments":["seems"]},{"Key":"start seems","Fragments":["to"]},{"Key":"right way","Fragments":["to","to"]},{"Key":"to deal","Fragments":["with","with","with"]},{"Key":"deal with","Fragments":["this","spaces,","if","getting","it,","inputs"]},{"Key":"with this","Fragments":["(and","implementation,","particular","sites","exercise","code","one,","design.","implementation","one.","problem"]},{"Key":"this (and","Fragments":["not"]},{"Key":"(and not","Fragments":["only"]},{"Key":"not only","Fragments":["when","saying","ensures"]},{"Key":"only when","Fragments":["considering"]},{"Key":"when considering","Fragments":["asking"]},{"Key":"considering asking","Fragments":["nothing)."]},{"Key":" Also","Fragments":["you've","as","I","you","I","i","instead","you","a","you","you","you","if","why","appreciate"]},{"Key":"Also you've","Fragments":["found"]},{"Key":"you've found","Fragments":["a"]},{"Key":"found a","Fragments":["good","better","bit"]},{"Key":"good way","Fragments":["to","to","to"]},{"Key":"check if","Fragments":["one","the","for","someone","bob","the","`total_upper`","the","it's","a","the","it's","it's","a","the","the","the","only","all","```input```","both","the","the"]},{"Key":"if one","Fragments":["is","of","histogram","copy"]},{"Key":"one is","Fragments":["shouting","more","not"]},{"Key":"shouting and","Fragments":["not","shouting","if"]},{"Key":"only saying","Fragments":["punctuations"]},{"Key":"saying punctuations","Fragments":["marks"]},{"Key":"punctuations marks","Fragments":["(I"]},{"Key":"marks (I","Fragments":["mean"]},{"Key":"(I mean","Fragments":["nb_upper"]},{"Key":"mean nb_upper","Fragments":["\u003e"]},{"Key":"nb_upper \u003e","Fragments":["nb_lower)."]},{"Key":"and concise!","Fragments":["You","If"]},{"Key":"concise! You","Fragments":["could"]},{"Key":"potentially improve","Fragments":["perf"]},{"Key":"improve perf","Fragments":["by"]},{"Key":"perf by","Fragments":["returning"]},{"Key":"by returning","Fragments":["a"]},{"Key":"returning a","Fragments":["static","boolean"]},{"Key":"static string","Fragments":["for","hey(string"]},{"Key":"string for","Fragments":["responses","each","silence","every","trailing"]},{"Key":"for responses","Fragments":["rather"]},{"Key":"responses rather","Fragments":["than"]},{"Key":"than copying","Fragments":["each","the"]},{"Key":"copying each","Fragments":["time.","character"]},{"Key":" Two","Fragments":["things","things:","comments:"]},{"Key":"Two things","Fragments":["come"]},{"Key":"to mind","Fragments":["when"]},{"Key":"mind when","Fragments":["looking","I"]},{"Key":"when looking","Fragments":["at","at"]},{"Key":"* While","Fragments":["it"]},{"Key":"it doesn't","Fragments":["really","matter","work.","matter","need","need","really","need","seem","do","output","seem"]},{"Key":"doesn't really","Fragments":["matter","matter."]},{"Key":"really matter","Fragments":["how"]},{"Key":"matter how","Fragments":["you"]},{"Key":"you create","Fragments":["a","a","the"]},{"Key":"a namespace,","Fragments":["a","instead","i.e.","but"]},{"Key":"namespace, a","Fragments":["single"]},{"Key":"a single","Fragments":["function","call","task.","function,","match","function","uppercase","pass","execution","variable,","word","`for`","function","pass","call","pass-through","passage","iteration,","step.","character","value","incrementing"]},{"Key":"single function","Fragments":["without","at","so"]},{"Key":"function without","Fragments":["a"]},{"Key":"without a","Fragments":["need","clear","test","loop"]},{"Key":"a need","Fragments":["to"]},{"Key":"to hold","Fragments":["any","any","the"]},{"Key":"hold any","Fragments":["value","strings"]},{"Key":"any value","Fragments":["is"]},{"Key":"value is","Fragments":["probably","[value-initialized](http://en.cppreference.com/w/cpp/container/map/operator_at),","found."]},{"Key":"is probably","Fragments":["better","doable,","a","overkill","the","better","negligible","not","a","going","an"]},{"Key":"probably better","Fragments":["off","suited"]},{"Key":"better off","Fragments":["in"]},{"Key":"off in","Fragments":["a"]},{"Key":"namespace, instead","Fragments":["of"]},{"Key":"* For","Fragments":["good"]},{"Key":"For good","Fragments":["style,"]},{"Key":"good style,","Fragments":["try"]},{"Key":"style, try","Fragments":["to"]},{"Key":"avoid \"using","Fragments":["namespace"]},{"Key":"\"using namespace","Fragments":["...\"","std;\""]},{"Key":"namespace ...\"","Fragments":["in"]},{"Key":"...\" in","Fragments":["header"]},{"Key":"in header","Fragments":["files."]},{"Key":"header files.","Fragments":["Only"]},{"Key":"files. Only","Fragments":["implementations"]},{"Key":"Only implementations","Fragments":["should"]},{"Key":"implementations should","Fragments":["do"]},{"Key":"should do","Fragments":["that,","to","this","the"]},{"Key":"do that,","Fragments":["so","what","we","but","let"]},{"Key":"that, so","Fragments":["that"]},{"Key":"the used","Fragments":["namespace"]},{"Key":"used namespace","Fragments":["doesn't"]},{"Key":"namespace doesn't","Fragments":["propagate","need"]},{"Key":"doesn't propagate","Fragments":["to"]},{"Key":"propagate to","Fragments":["users"]},{"Key":"to users","Fragments":["of"]},{"Key":"users of","Fragments":["that"]},{"Key":"of that","Fragments":["header.","function.","versus","many","class.","`for`","sort","I"]},{"Key":"that header.","Fragments":["In"]},{"Key":"header. In","Fragments":["the"]},{"Key":"the exercism.io","Fragments":["exercises,"]},{"Key":"exercism.io exercises,","Fragments":["we"]},{"Key":"exercises, we","Fragments":["always"]},{"Key":"we always","Fragments":["submit"]},{"Key":"always submit","Fragments":["one"]},{"Key":"submit one","Fragments":["file.","which"]},{"Key":"one file.","Fragments":["So"]},{"Key":"file. So","Fragments":["strictly"]},{"Key":"So strictly","Fragments":["speaking,"]},{"Key":"strictly speaking,","Fragments":["this"]},{"Key":"speaking, this","Fragments":["doesn't"]},{"Key":"this doesn't","Fragments":["matter.","wrap"]},{"Key":"doesn't matter.","Fragments":["However,"]},{"Key":"matter. However,","Fragments":["try"]},{"Key":"However, try","Fragments":["to"]},{"Key":"keep this","Fragments":["issue","as","code","design"]},{"Key":"this issue","Fragments":["in","with",":"]},{"Key":"issue in","Fragments":["mind,"]},{"Key":"in mind,","Fragments":["it"]},{"Key":"mind, it","Fragments":["will"]},{"Key":"it will","Fragments":["bite","not","be","use","append","allocate","be","do","skip","return"]},{"Key":"will bite","Fragments":["you"]},{"Key":"bite you","Fragments":["if"]},{"Key":"you if","Fragments":["you"]},{"Key":"you start","Fragments":["to","unit_number","your"]},{"Key":"start to","Fragments":["define","look","find"]},{"Key":"define several","Fragments":["headers"]},{"Key":"several headers","Fragments":["and"]},{"Key":"headers and","Fragments":["cpp"]},{"Key":"and cpp","Fragments":["files"]},{"Key":"cpp files","Fragments":["for"]},{"Key":"for a","Fragments":["bigger","class,","non-alpha","simple","simple","static","super","shout,","shout","shout","question","question","shout","blank","given","extra","`std::string`","possible","looping","string","question","spec","more","maintenance","solution","Boost","\"highly","good","string","highly-readable","'true'","very","while","way","coding","reverse","couple","yell","function","question"]},{"Key":"a bigger","Fragments":["project.","one"]},{"Key":"bigger project.","Fragments":["In"]},{"Key":"project. In","Fragments":["case"]},{"Key":"In case","Fragments":["of"]},{"Key":"of exercism,","Fragments":["you"]},{"Key":"exercism, you","Fragments":["can"]},{"Key":"can *pretend*","Fragments":["to"]},{"Key":"*pretend* to","Fragments":["have"]},{"Key":"a .h","Fragments":["and","and"]},{"Key":".h and","Fragments":[".cpp","a",".cpp"]},{"Key":"and .cpp","Fragments":["file","as","file,"]},{"Key":".cpp file","Fragments":["by"]},{"Key":"file by","Fragments":["writing"]},{"Key":"by writing","Fragments":["the","my"]},{"Key":"writing the","Fragments":[".h"]},{"Key":".h part","Fragments":["first,"]},{"Key":"part first,","Fragments":["followed"]},{"Key":"first, followed","Fragments":["by"]},{"Key":"followed by","Fragments":["everything","a","an","```std::string.erase()```","your"]},{"Key":"by everything","Fragments":["that"]},{"Key":"everything that","Fragments":["you'd"]},{"Key":"that you'd","Fragments":["put"]},{"Key":"you'd put","Fragments":["in"]},{"Key":"is \"HE","Fragments":["IS"]},{"Key":"\"HE IS","Fragments":["wet\"."]},{"Key":"IS wet\".","Fragments":["That's"]},{"Key":"wet\". That's","Fragments":["not"]},{"Key":"That's not","Fragments":["shouting,","what"]},{"Key":"not shouting,","Fragments":["but"]},{"Key":"shouting, but","Fragments":["the"]},{"Key":"the number","Fragments":["of","of","of","of","(or","of","of","of","of","of","of","of","of","of","of","of","of","doesn't"]},{"Key":"number of","Fragments":["uppers","lowers.","grains","`true`s","other","letter","other","times","letters","occurences","letters","copies","upper","space","alphabetic","characters","working","times","times","tests","times","words.","times","simpler","choices","names,"]},{"Key":"of uppers","Fragments":["is"]},{"Key":"uppers is","Fragments":["larger"]},{"Key":"is larger","Fragments":["than","than"]},{"Key":" It","Fragments":["feels","looks","could","may","is","does","seemed","would","is","took","actually","was","looks","would","seems","was","would","had","was","does","actually","feels"]},{"Key":"like `hey`","Fragments":["is"]},{"Key":"is filled","Fragments":["with"]},{"Key":"filled with","Fragments":["low-level"]},{"Key":"with low-level","Fragments":["details"]},{"Key":"details and","Fragments":["doesn't","I"]},{"Key":"and doesn't","Fragments":["reveal"]},{"Key":"doesn't reveal","Fragments":["the"]},{"Key":"reveal the","Fragments":["problem","higher"]},{"Key":"domain very","Fragments":["well."]},{"Key":"very well.","Fragments":["What"]},{"Key":"well. What","Fragments":["if"]},{"Key":"What if","Fragments":["we","the","someone","the","the"]},{"Key":"we did","Fragments":["[Compose"]},{"Key":"did [Compose","Fragments":["Method](http://www.industriallogic.com/xp/refactoring/composeMethod.html)"]},{"Key":"[Compose Method](http://www.industriallogic.com/xp/refactoring/composeMethod.html)","Fragments":["on"]},{"Key":"Method](http://www.industriallogic.com/xp/refactoring/composeMethod.html) on","Fragments":["`hey`"]},{"Key":"on `hey`","Fragments":["to"]},{"Key":"`hey` to","Fragments":["reveal"]},{"Key":"to reveal","Fragments":["the"]},{"Key":"the higher","Fragments":["level"]},{"Key":"higher level","Fragments":["structure"]},{"Key":"level structure","Fragments":["more"]},{"Key":"structure more","Fragments":["readably"]},{"Key":"more readably","Fragments":["and"]},{"Key":"readably and","Fragments":["delegated"]},{"Key":"and delegated","Fragments":["details"]},{"Key":"delegated details","Fragments":["to"]},{"Key":"details to","Fragments":["helper"]},{"Key":"to helper","Fragments":["functions?","functions,","functions,"]},{"Key":" Consider","Fragments":["putting","changing","using","a","using"]},{"Key":"Consider putting","Fragments":["the","it"]},{"Key":"putting the","Fragments":["free","`currentWorld`"]},{"Key":"free function","Fragments":["`hey`"]},{"Key":"function `hey`","Fragments":["in"]},{"Key":"`hey` in","Fragments":["namespace"]},{"Key":"namespace `bob`","Fragments":["instead"]},{"Key":"`bob` instead","Fragments":["of"]},{"Key":"of forcing","Fragments":["it"]},{"Key":"forcing it","Fragments":["to"]},{"Key":"it to","Fragments":["be","false.","be","compile.","something","be","NOT","implement","the","work.","shreds.","the","learn","enable"]},{"Key":"static method","Fragments":["in","in","of","on"]},{"Key":"method in","Fragments":["a","a","namespace"]},{"Key":"a class.","Fragments":["Namespaces","I"]},{"Key":"class. Namespaces","Fragments":["are"]},{"Key":"Namespaces are","Fragments":["better"]},{"Key":"are better","Fragments":["for"]},{"Key":"better for","Fragments":["scoping","future","large"]},{"Key":"for scoping","Fragments":["visibility"]},{"Key":"scoping visibility","Fragments":["of"]},{"Key":"visibility of","Fragments":["functions;","the"]},{"Key":"of functions;","Fragments":["they"]},{"Key":"functions; they","Fragments":["make"]},{"Key":"they make","Fragments":["it","my","the","the"]},{"Key":"it more","Fragments":["explicit","readable.","readable.","readable","clear.","consistent","readable."]},{"Key":"more explicit","Fragments":["what"]},{"Key":"explicit what","Fragments":["you"]},{"Key":"are trying","Fragments":["to"]},{"Key":"do --","Fragments":["narrow"]},{"Key":"-- narrow","Fragments":["the"]},{"Key":"narrow the","Fragments":["scope","scope"]},{"Key":"of visibility.","Fragments":["Declaring"]},{"Key":"visibility. Declaring","Fragments":["a"]},{"Key":"Declaring a","Fragments":["static"]},{"Key":"class also","Fragments":["narrows"]},{"Key":"also narrows","Fragments":["the"]},{"Key":"narrows the","Fragments":["scope"]},{"Key":"of visibility","Fragments":["of"]},{"Key":"the method,","Fragments":["but"]},{"Key":"method, but","Fragments":["it","I"]},{"Key":"an indirect","Fragments":["way","solution."]},{"Key":"indirect way","Fragments":["of"]},{"Key":"way of","Fragments":["achieving","doing","doing","splitting","doing","making","making","doing","\"uncommenting\""]},{"Key":"of achieving","Fragments":["this"]},{"Key":"achieving this","Fragments":["and"]},{"Key":"this and","Fragments":["is","see","add","add","add","add","it"]},{"Key":"and is","Fragments":["less","more","a","now","guaranteed","therefore","no","shorter"]},{"Key":"is less","Fragments":["explicit.","readable","than","important:"]},{"Key":" So","Fragments":["if","we","I","I'm","you","I","my","here","I'll","I","made","what","in","I","const","to"]},{"Key":"So if","Fragments":["we","it's"]},{"Key":"that, what","Fragments":["about"]},{"Key":"what about","Fragments":["your","other"]},{"Key":"your private","Fragments":["members?"]},{"Key":"private members?","Fragments":["They"]},{"Key":"members? They","Fragments":["can"]},{"Key":"They can","Fragments":["be"]},{"Key":"be contained","Fragments":["in"]},{"Key":"contained in","Fragments":["an","the"]},{"Key":"the source","Fragments":["file,","file,","file.","file","file","file.","file"]},{"Key":"source file,","Fragments":["making","but","so"]},{"Key":"file, making","Fragments":["them"]},{"Key":"making them","Fragments":["available","```const"]},{"Key":"available in","Fragments":["the","the","the"]},{"Key":"file, but","Fragments":["not","I","ended"]},{"Key":"not visible","Fragments":["outside"]},{"Key":"visible outside","Fragments":["the"]},{"Key":"source file.","Fragments":["Using"]},{"Key":"file. Using","Fragments":["namespaces"]},{"Key":"Using namespaces","Fragments":["is"]},{"Key":"namespaces is","Fragments":["the"]},{"Key":"preferred way","Fragments":["to"]},{"Key":"to control","Fragments":["visibility"]},{"Key":"control visibility","Fragments":["in"]},{"Key":"visibility in","Fragments":["C++11."]},{"Key":"But let's","Fragments":["look"]},{"Key":"let's look","Fragments":["at"]},{"Key":"at what","Fragments":["those"]},{"Key":"what those","Fragments":["private"]},{"Key":"private members","Fragments":["are","of","are"]},{"Key":"members are","Fragments":["doing","hidden","static,"]},{"Key":"are doing","Fragments":["a","manually"]},{"Key":"doing a","Fragments":["little","find","brute","empty"]},{"Key":"little more","Fragments":["closely.","descriptive","C++"]},{"Key":"more closely.","Fragments":["There"]},{"Key":"closely. There","Fragments":["is"]},{"Key":"enum that","Fragments":["is","chooses"]},{"Key":"is 1-to-1","Fragments":["with"]},{"Key":"1-to-1 with","Fragments":["the"]},{"Key":"and map","Fragments":["that","is"]},{"Key":"map that","Fragments":["holds"]},{"Key":"that holds","Fragments":["the"]},{"Key":"holds the","Fragments":["strings"]},{"Key":"strings associated","Fragments":["with"]},{"Key":"associated with","Fragments":["each"]},{"Key":"with each","Fragments":["enum.","alphanumeric","call","other."]},{"Key":"each enum.","Fragments":["The"]},{"Key":"enum. The","Fragments":["only"]},{"Key":"only place","Fragments":["we"]},{"Key":"place we","Fragments":["use"]},{"Key":"we use","Fragments":["them","the","the"]},{"Key":"them is","Fragments":["to","unnecessary","the"]},{"Key":"return the","Fragments":["result","strings","string","appropriate","same","same","precomputed","equivalent","proper","nth"]},{"Key":"the result","Fragments":["string.","of","of","of","of","of","of","into","doesn't","map.","of","vector"]},{"Key":"result string.","Fragments":["It"]},{"Key":"string. It","Fragments":["seems","could"]},{"Key":"seems the","Fragments":["whole","test"]},{"Key":"the whole","Fragments":["thing","string","alphabet","string","C++","string","problem.","thing","string","thing","program","program","program","arrays.","string.","song","string.","```static_cast\u003c\u003e```","name.","song,","thing","string","string","string","thing","namespace"]},{"Key":"whole thing","Fragments":["would","is","is","to","in"]},{"Key":"thing would","Fragments":["read"]},{"Key":"would read","Fragments":["more"]},{"Key":"read more","Fragments":["clearly"]},{"Key":"more clearly","Fragments":["if","anyway.","that","indicates","be"]},{"Key":"clearly if","Fragments":["we"]},{"Key":"we just","Fragments":["eliminated","have"]},{"Key":"just eliminated","Fragments":["the"]},{"Key":"eliminated the","Fragments":["enum"]},{"Key":"the enum","Fragments":["and","value","value","value","value"]},{"Key":"map and","Fragments":["return","returning"]},{"Key":"string algorithms.","Fragments":["I"]},{"Key":"was using","Fragments":["them","all","the","a"]},{"Key":"using them","Fragments":["in","like","to"]},{"Key":"some of","Fragments":["these","the","C++","those","the","those","the","the","the","the","the","the","the","the","the","the","the","the","the","your","the","the"]},{"Key":"exercises as","Fragments":["you"]},{"Key":"as you","Fragments":["do","can","can","both","said,","know","have","shouldn't","are","keep","don't"]},{"Key":"you do","Fragments":["here","a","not","not","is","it","everything"]},{"Key":"do here","Fragments":["until"]},{"Key":"here until","Fragments":["someone"]},{"Key":"until someone","Fragments":["pointed"]},{"Key":"someone pointed","Fragments":["out"]},{"Key":"pointed out","Fragments":["to","that","to"]},{"Key":"out to","Fragments":["me","be","me"]},{"Key":"the `_copy`","Fragments":["variants,"]},{"Key":"`_copy` variants,","Fragments":["for"]},{"Key":"variants, for","Fragments":["instance:"]},{"Key":" const","Fragments":["string","string","char*","char*","is","unsigned","map\u003cstring,","auto","map\u003cstring,","auto","map\u003cstring,","auto","map\u003cstring,","auto","map\u003cstring,","auto","char"]},{"Key":"const string","Fragments":["upper","spaceless","references,","and"]},{"Key":"string upper","Fragments":["="]},{"Key":"upper =","Fragments":["boost::to_upper_copy(sth);","\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";","non_whitespace_chars"]},{"Key":" One","Fragments":["thing","more.","question","small","quick","thing","option","thing","thing","thing","thing","minor","last","other","thing","more"]},{"Key":"One thing","Fragments":["that","I","that","you","to","to","to","I","though,"]},{"Key":"thing that","Fragments":["makes","would","came","someone","causes"]},{"Key":"that makes","Fragments":["this","this","it","your","your","your","your","up"]},{"Key":"this whole","Fragments":["exercise"]},{"Key":"whole exercise","Fragments":["easier"]},{"Key":"exercise easier","Fragments":["is"]},{"Key":"easier is","Fragments":["if"]},{"Key":"you test","Fragments":["for","```"]},{"Key":"for emptyness","Fragments":["first","and","before"]},{"Key":"emptyness first","Fragments":[":)."]},{"Key":"first :).","Fragments":["I"]},{"Key":":). I","Fragments":["found"]},{"Key":"found this","Fragments":["out","project","project","project"]},{"Key":"this out","Fragments":["the","now,"]},{"Key":"the hard","Fragments":["way","part"]},{"Key":"hard way","Fragments":["myself"]},{"Key":"way myself","Fragments":["once"]},{"Key":"myself once","Fragments":["I"]},{"Key":"once I","Fragments":["started","remembered"]},{"Key":"I started","Fragments":["reviewing","using","off"]},{"Key":"started reviewing","Fragments":["solutions"]},{"Key":"reviewing solutions","Fragments":["in"]},{"Key":" It's","Fragments":["always","not","just","nice","really","cool","really","too","just","not","about"]},{"Key":"It's always","Fragments":["a"]},{"Key":"always a","Fragments":["good"]},{"Key":"to narrow","Fragments":["the"]},{"Key":"of variable","Fragments":["declarations","names"]},{"Key":"variable declarations","Fragments":["to","inside"]},{"Key":"declarations to","Fragments":["the"]},{"Key":"first place","Fragments":["where"]},{"Key":"place where","Fragments":["they"]},{"Key":"where they","Fragments":["are","are","don't","really","line"]},{"Key":"are used.","Fragments":["If"]},{"Key":"used. If","Fragments":["we","this"]},{"Key":"If we","Fragments":["localize","take","do","could"]},{"Key":"we localize","Fragments":["variables"]},{"Key":"localize variables","Fragments":["to"]},{"Key":"variables to","Fragments":["where","other","keep","lambda","namespace.","a","indicate"]},{"Key":"to where","Fragments":["they"]},{"Key":"are used,","Fragments":["then"]},{"Key":"used, then","Fragments":["`spaceless`"]},{"Key":"then `spaceless`","Fragments":["moves"]},{"Key":"`spaceless` moves","Fragments":["all"]},{"Key":"moves all","Fragments":["the"]},{"Key":"the way","Fragments":["down","we","you","to","that","you've","you","the","you","the","the","it","this","you","I"]},{"Key":"way down","Fragments":["to"]},{"Key":"to line","Fragments":["45:"]},{"Key":"string spaceless","Fragments":["="]},{"Key":"spaceless =","Fragments":["boost::erase_all(sth,"]},{"Key":"= boost::erase_all(sth,","Fragments":["\""]},{"Key":"boost::erase_all(sth, \"","Fragments":["\");","\").empty();"]},{"Key":"if (spaceless","Fragments":["=="]},{"Key":"(spaceless ==","Fragments":["\"\")"]},{"Key":"that, we","Fragments":["see"]},{"Key":"we see","Fragments":["that"]},{"Key":"that `spaceless`","Fragments":["is"]},{"Key":"`spaceless` is","Fragments":["only"]},{"Key":"is only","Fragments":["used","a","visible","a","the","visible","ASCII-aware.","white","defined"]},{"Key":"only used","Fragments":["to","twice,"]},{"Key":"for empty","Fragments":["string","(or","prompts","string","upfront","containers"]},{"Key":"and we","Fragments":["could","iterate"]},{"Key":"could just","Fragments":["as","return","return","sort","add","keep","return","do","change","put","be","as"]},{"Key":"just as","Fragments":["easily","`+xpr::space`","concise","valid","well","well","well"]},{"Key":"as easily","Fragments":["write:"]},{"Key":"if (boost::erase_all(sth,","Fragments":["\""]},{"Key":"(boost::erase_all(sth, \"","Fragments":["\").empty())"]},{"Key":"we lost","Fragments":["the"]},{"Key":"lost the","Fragments":["intention-revealing"]},{"Key":"the intention-revealing","Fragments":["name"]},{"Key":"intention-revealing name","Fragments":["`spaceless`"]},{"Key":"name `spaceless`","Fragments":["by"]},{"Key":"`spaceless` by","Fragments":["doing"]},{"Key":"by doing","Fragments":["this.","(range"]},{"Key":"doing this.","Fragments":["We"]},{"Key":"this. We","Fragments":["can"]},{"Key":"can reveal","Fragments":["that"]},{"Key":"reveal that","Fragments":["intention"]},{"Key":"that intention","Fragments":["again"]},{"Key":"intention again","Fragments":["by"]},{"Key":"again by","Fragments":["extracting"]},{"Key":"by extracting","Fragments":["this"]},{"Key":"extracting this","Fragments":["into"]},{"Key":"this into","Fragments":["a"]},{"Key":"bool is_silent(const","Fragments":["char*"]},{"Key":"is_silent(const char*","Fragments":["sth)"]},{"Key":" return","Fragments":["boost::erase_all(sth,","inner_product(a.begin(),","query.find_first_not_of(","query.find_first_of(","\"Whatever.\"","query.back()","roster_[grade];","std::regex_match(str,","false;","true;","containsAlpha;","true;","val1;","val2;","default;","isalpha(c);"]},{"Key":"return boost::erase_all(sth,","Fragments":["\""]},{"Key":"do the","Fragments":["same","work","job","same","memory","same","same","trick","refactoring","same","trick."]},{"Key":"same for","Fragments":["the","loop."]},{"Key":"other two","Fragments":["checks:"]},{"Key":"two checks:","Fragments":["localize"]},{"Key":"checks: localize","Fragments":["the"]},{"Key":"localize the","Fragments":["variables"]},{"Key":"the variables","Fragments":["and","as","isYelling,"]},{"Key":"variables and","Fragments":["extract","functions"]},{"Key":"and extract","Fragments":["helper"]},{"Key":"extract helper","Fragments":["predicates."]},{"Key":"helper predicates.","Fragments":["When"]},{"Key":"predicates. When","Fragments":["we"]},{"Key":"do this,","Fragments":["we'll","but","and"]},{"Key":"this, we'll","Fragments":["get"]},{"Key":"we'll get","Fragments":["a"]},{"Key":"get a","Fragments":["`hey`","length","little","much","bunch","return","precision","divide","positive","default","copy","result"]},{"Key":"a `hey`","Fragments":["function"]},{"Key":"`hey` function","Fragments":["that","by","can"]},{"Key":"is talking","Fragments":["more"]},{"Key":"problem and","Fragments":["less","realized","one"]},{"Key":"and less","Fragments":["in","realistically"]},{"Key":"less in","Fragments":["low-level"]},{"Key":"in low-level","Fragments":["implementation"]},{"Key":"low-level implementation","Fragments":["details"]},{"Key":"details making","Fragments":["the"]},{"Key":"code easier","Fragments":["to"]},{"Key":"easier to","Fragments":["understand","read","read","use.","write","'nitpick'.","understand.","read.","read","debug.","read,","read","read","compare","read","understand","maintain.","understand.","match"]},{"Key":"understand at","Fragments":["a"]},{"Key":"at a","Fragments":["glance.","time","sufficiently","minimum","local","time,","cost","time.","loss","minimum,"]},{"Key":" Doh!","Fragments":["While"]},{"Key":"Doh! While","Fragments":["I"]},{"Key":"While I","Fragments":["was","agree","don't","am"]},{"Key":"was initially","Fragments":["quite"]},{"Key":"initially quite","Fragments":["pleased"]},{"Key":"quite pleased","Fragments":["with"]},{"Key":"pleased with","Fragments":["this"]},{"Key":"this implementation,","Fragments":["it"]},{"Key":"implementation, it","Fragments":["has","takes"]},{"Key":"has a","Fragments":["glaring","defined","question","back()-method,","min","tolower(char)","corresponding","corresponding","better","single","O(word_len*log2(word_len)","trim()","spelling","default","function","check","lot","lot","bug","more","good","look"]},{"Key":"a glaring","Fragments":["performance"]},{"Key":"glaring performance","Fragments":["bug:"]},{"Key":"The algorithm","Fragments":["should","```boost::all()```"]},{"Key":"algorithm should","Fragments":["terminate"]},{"Key":"should terminate","Fragments":["if"]},{"Key":"terminate if","Fragments":["the"]},{"Key":"the current","Fragments":["prime","word","locale.","character","number","code"]},{"Key":"current prime","Fragments":["squared"]},{"Key":"prime squared","Fragments":["is"]},{"Key":"squared is","Fragments":["greater"]},{"Key":"is greater","Fragments":["then","than"]},{"Key":"greater then","Fragments":["the"]},{"Key":"then the","Fragments":["maximum","message","question","word","word","word","word"]},{"Key":"the maximum","Fragments":["number","string"]},{"Key":"maximum number","Fragments":["in"]},{"Key":"number in","Fragments":["the"]},{"Key":" So,","Fragments":["one"]},{"Key":"So, one","Fragments":["more"]},{"Key":"one more","Fragments":["iteration.","thing,"]},{"Key":"I followed","Fragments":["the","some"]},{"Key":"followed the","Fragments":["suggestion","test"]},{"Key":"the suggestion","Fragments":["of","about"]},{"Key":"suggestion of","Fragments":["LegalizeAdulthood"]},{"Key":"of LegalizeAdulthood","Fragments":["and"]},{"Key":"LegalizeAdulthood and","Fragments":["used"]},{"Key":"and used","Fragments":["functions","it"]},{"Key":"used functions","Fragments":["to"]},{"Key":"functions to","Fragments":["make","make","classify","the","prevent","an","aid","do","passing","analyze","make","std::string"]},{"Key":"code cleaner.","Fragments":["The"]},{"Key":"cleaner. The","Fragments":["first"]},{"Key":"The first","Fragments":["time,","part,","is","is","paragraph","cycle"]},{"Key":"first time,","Fragments":["I"]},{"Key":"time, I","Fragments":["aimed"]},{"Key":"I aimed","Fragments":["for"]},{"Key":"aimed for","Fragments":["shorter"]},{"Key":"for shorter","Fragments":["code,","sentence."]},{"Key":"shorter code,","Fragments":["which"]},{"Key":"code, which","Fragments":["proved"]},{"Key":"which proved","Fragments":["not"]},{"Key":"proved not","Fragments":["to"]},{"Key":"only change","Fragments":["in"]},{"Key":"algorithm is","Fragments":["the","done,","similar"]},{"Key":"way we","Fragments":["detect"]},{"Key":"we detect","Fragments":["someone"]},{"Key":"detect someone","Fragments":["is"]},{"Key":"is shouting.","Fragments":["I"]},{"Key":"shouting. I","Fragments":["assume"]},{"Key":"I assume","Fragments":["a","you","you've"]},{"Key":"assume a","Fragments":["sentence"]},{"Key":"a sentence","Fragments":["is"]},{"Key":"sentence is","Fragments":["a"]},{"Key":"a shout","Fragments":["when","happens","by","before","instead","first","or","or","(i.e."]},{"Key":"shout when","Fragments":["there"]},{"Key":"a majority","Fragments":["of"]},{"Key":"majority of","Fragments":["upper","a"]},{"Key":"of upper","Fragments":["cases","cases","case"]},{"Key":"cases characters.","Fragments":["This","The"]},{"Key":"characters. This","Fragments":["time,"]},{"Key":"This time,","Fragments":["the"]},{"Key":"time, the","Fragments":["constraint"]},{"Key":"the constraint","Fragments":["is"]},{"Key":"constraint is","Fragments":["stronger:"]},{"Key":"is stronger:","Fragments":["a"]},{"Key":"stronger: a","Fragments":["shout"]},{"Key":"shout happens","Fragments":["when"]},{"Key":"happens when","Fragments":["there","I"]},{"Key":"are at","Fragments":["least","the"]},{"Key":"least 80%","Fragments":["of"]},{"Key":"80% of","Fragments":["upper"]},{"Key":"characters. The","Fragments":["drawback"]},{"Key":"The drawback","Fragments":["is"]},{"Key":"drawback is","Fragments":["that"]},{"Key":"will not","Fragments":["work","be","match.","shorten"]},{"Key":"not work","Fragments":["for"]},{"Key":"shorter sentence.","Fragments":["For"]},{"Key":"sentence. For","Fragments":["example,"]},{"Key":"For example,","Fragments":["\"aAA\"","your","you","the","what","a","it","it"]},{"Key":"example, \"aAA\"","Fragments":["will"]},{"Key":"\"aAA\" will","Fragments":["not"]},{"Key":"not be","Fragments":["categorized","modified.","called","large","trivial","so","a","done","able","needed","aware","in","in","0","0","a","used","imposed"]},{"Key":"be categorized","Fragments":["as","as"]},{"Key":"categorized as","Fragments":["shouting,","shouting"]},{"Key":"as shouting,","Fragments":["even"]},{"Key":"shouting, even","Fragments":["though"]},{"Key":"even though","Fragments":["the","this","it's","it's","it's"]},{"Key":"though the","Fragments":["first"]},{"Key":"first 'a'","Fragments":["could"]},{"Key":"'a' could","Fragments":["be"]},{"Key":"final version.","Fragments":["It"]},{"Key":"version. It","Fragments":["exploits"]},{"Key":"It exploits","Fragments":["the"]},{"Key":"exploits the","Fragments":["fact"]},{"Key":"that even","Fragments":["numbers"]},{"Key":"even numbers","Fragments":["are"]},{"Key":"numbers are","Fragments":["immediately"]},{"Key":"are immediately","Fragments":["going"]},{"Key":"immediately going","Fragments":["to"]},{"Key":"be removed","Fragments":["from"]},{"Key":"removed from","Fragments":["the"]},{"Key":"the sieve","Fragments":["again.","from","and"]},{"Key":"we might","Fragments":["as"]},{"Key":"might as","Fragments":["well"]},{"Key":"well not","Fragments":["generate"]},{"Key":"not generate","Fragments":["them,"]},{"Key":"generate them,","Fragments":["and"]},{"Key":"them, and","Fragments":["save","since"]},{"Key":"and save","Fragments":["1/2","yourself"]},{"Key":"save 1/2","Fragments":["of"]},{"Key":"1/2 of","Fragments":["our"]},{"Key":"This version","Fragments":["only","might"]},{"Key":"version only","Fragments":["removes","modifies"]},{"Key":"only removes","Fragments":["elements"]},{"Key":"removes elements","Fragments":["from"]},{"Key":"elements from","Fragments":["the"]},{"Key":"the vector","Fragments":["after","and","from","from","of"]},{"Key":"vector after","Fragments":["the"]},{"Key":"is done,","Fragments":["which"]},{"Key":"done, which","Fragments":["should","could"]},{"Key":"which should","Fragments":["be","be"]},{"Key":"be slightly","Fragments":["faster."]},{"Key":"it still","Fragments":["has"]},{"Key":"still has","Fragments":["the"]},{"Key":"problem of","Fragments":["not","looking"]},{"Key":"of not","Fragments":["terminating"]},{"Key":"not terminating","Fragments":["early"]},{"Key":"terminating early","Fragments":["enough."]},{"Key":"is one","Fragments":["conditional","of","way"]},{"Key":"one conditional","Fragments":["missing."]},{"Key":" Hi","Fragments":["there,","JuBan1,","again.","there!","@nora,","absurdist,","DiagonalSlash,","All,","Chris.","Chaitanya-git"]},{"Key":" here","Fragments":["are"]},{"Key":"a couple","Fragments":["of","glances.","of","of","of","things","of","of","of","flags","of","tests","of","extra","things,","of","of","of"]},{"Key":"couple of","Fragments":["things","points.","things","reallocations","things","things:","two-line","characters","smaller","loops","tests","days.","unnecessary","questions","optional"]},{"Key":"of things","Fragments":["you","that","I","about","and"]},{"Key":"things you","Fragments":["could"]},{"Key":"You can","Fragments":["use","compare","leave","use","use","greatly","use","greatly","find","achive","use","just","read","cut","rewrite","compute","move","do","remove","more","now","replace","create"]},{"Key":"use std::transform()","Fragments":["or"]},{"Key":"std::transform() or","Fragments":["boost::to_lower_copy()"]},{"Key":"or boost::to_lower_copy()","Fragments":["to"]},{"Key":"boost::to_lower_copy() to","Fragments":["turn"]},{"Key":"to turn","Fragments":["a"]},{"Key":"turn a","Fragments":["string"]},{"Key":"into lower","Fragments":["case."]},{"Key":"lower case.","Fragments":["[More","It","Then","That","It'll"]},{"Key":"case. [More","Fragments":["info"]},{"Key":"[More info","Fragments":["here](http://stackoverflow.com/questions/313970/c-stdstring-to-lower-case).","here](http://www.learncpp.com/cpp-tutorial/73-passing-arguments-by-reference/)."]},{"Key":"info here](http://stackoverflow.com/questions/313970/c-stdstring-to-lower-case).","Fragments":["That"]},{"Key":"here](http://stackoverflow.com/questions/313970/c-stdstring-to-lower-case). That","Fragments":["way"]},{"Key":"That way","Fragments":["you","you","you","you","you","you","it"]},{"Key":"can save","Fragments":["yourself","yourself"]},{"Key":"save yourself","Fragments":["having","the","the"]},{"Key":"yourself having","Fragments":["to"]},{"Key":"write a","Fragments":["ToLower","generic","helper","lambda"]},{"Key":"a ToLower","Fragments":["function"]},{"Key":"ToLower function","Fragments":["yourself."]},{"Key":"2) When","Fragments":["you"]},{"Key":"you pass","Fragments":["variables","in","it","an","in","in","it"]},{"Key":"pass variables","Fragments":["to"]},{"Key":"to other","Fragments":["functions,","variables","variables","problem","projects,","instances"]},{"Key":"other functions,","Fragments":["they"]},{"Key":"functions, they","Fragments":["get"]},{"Key":"they get","Fragments":["copied."]},{"Key":"get copied.","Fragments":["For"]},{"Key":"copied. For","Fragments":["small"]},{"Key":"For small","Fragments":["objects"]},{"Key":"small objects","Fragments":["such"]},{"Key":"objects such","Fragments":["as"]},{"Key":"such as","Fragments":["integers","`any_of(str.begin(),","isupper(),","the","extracting","length()"]},{"Key":"as integers","Fragments":["this"]},{"Key":"integers this","Fragments":["isn't"]},{"Key":"this isn't","Fragments":["tragic.","necessarily","the"]},{"Key":"isn't tragic.","Fragments":["But"]},{"Key":"tragic. But","Fragments":["for"]},{"Key":"But for","Fragments":["large","me,"]},{"Key":"for large","Fragments":["objects","N."]},{"Key":"large objects","Fragments":["like"]},{"Key":"objects like","Fragments":["std::maps"]},{"Key":"like std::maps","Fragments":["(or"]},{"Key":"std::maps (or","Fragments":["even"]},{"Key":"(or even","Fragments":["std::strings)"]},{"Key":"even std::strings)","Fragments":["it"]},{"Key":"std::strings) it","Fragments":["costs"]},{"Key":"it costs","Fragments":["performance."]},{"Key":"costs performance.","Fragments":["That's"]},{"Key":"performance. That's","Fragments":["why"]},{"Key":"That's why","Fragments":["such","saysNothing","you'd","I"]},{"Key":"why such","Fragments":["objects"]},{"Key":"such objects","Fragments":["are"]},{"Key":"objects are","Fragments":["often"]},{"Key":"are often","Fragments":["passed","capitalized"]},{"Key":"often passed","Fragments":["by"]},{"Key":"example, your","Fragments":["MapsEqual"]},{"Key":"your MapsEqual","Fragments":["function"]},{"Key":"MapsEqual function","Fragments":["would"]},{"Key":"function would","Fragments":["look","make","return","be"]},{"Key":"would look","Fragments":["like","reasonably","at."]},{"Key":"look like","Fragments":["this","a","there","is:"]},{"Key":"bool MapsEqual(const","Fragments":["std::map\u003cchar,"]},{"Key":"MapsEqual(const std::map\u003cchar,","Fragments":["int\u003e\u0026"]},{"Key":"std::map\u003cchar, int\u003e\u0026","Fragments":["m1,","m2)","nucleotide_counts();```"]},{"Key":"int\u003e\u0026 m1,","Fragments":["const"]},{"Key":"m1, const","Fragments":["std::map\u003cchar,"]},{"Key":"const std::map\u003cchar,","Fragments":["int\u003e\u0026","int\u003e\u0026"]},{"Key":"int\u003e\u0026 m2)","Fragments":["{"]},{"Key":" That","Fragments":["way,","would","doesn't","phrase","said,","said,","being","piece","said,","way"]},{"Key":"way, m1","Fragments":["and"]},{"Key":"m1 and","Fragments":["m2"]},{"Key":"and m2","Fragments":["won't"]},{"Key":"m2 won't","Fragments":["be"]},{"Key":"won't be","Fragments":["needlessly","any"]},{"Key":"be needlessly","Fragments":["copied."]},{"Key":"needlessly copied.","Fragments":["[More"]},{"Key":"copied. [More","Fragments":["info"]},{"Key":"3) std::map","Fragments":["actually"]},{"Key":"std::map actually","Fragments":["has"]},{"Key":"actually has","Fragments":["a"]},{"Key":"a defined","Fragments":["comparison"]},{"Key":"defined comparison","Fragments":["operator."]},{"Key":"comparison operator.","Fragments":["So"]},{"Key":"operator. So","Fragments":["you"]},{"Key":"So you","Fragments":["don't","could","can","could","would","will","should","should","could"]},{"Key":"to loop","Fragments":["through","through","through","through","through","through"]},{"Key":"loop through","Fragments":["every","a","the","the","it","and","the","your"]},{"Key":"through every","Fragments":["map"]},{"Key":"every map","Fragments":["entry"]},{"Key":"map entry","Fragments":["and"]},{"Key":"entry and","Fragments":["compare"]},{"Key":"compare it","Fragments":["with","with"]},{"Key":"it with","Fragments":["another.","word.","a"]},{"Key":"with another.","Fragments":["You"]},{"Key":"another. You","Fragments":["can"]},{"Key":"can compare","Fragments":["two"]},{"Key":"compare two","Fragments":["maps"]},{"Key":"two maps","Fragments":["*a*","returns","could"]},{"Key":"maps *a*","Fragments":["and"]},{"Key":"*a* and","Fragments":["*b*"]},{"Key":"and *b*","Fragments":["by"]},{"Key":"*b* by","Fragments":["just"]},{"Key":"by just","Fragments":["writing","looking","examining"]},{"Key":"just writing","Fragments":["\"a"]},{"Key":"writing \"a","Fragments":["=="]},{"Key":"\"a ==","Fragments":["b\""]},{"Key":"== b\"","Fragments":["or"]},{"Key":"b\" or","Fragments":["\"a"]},{"Key":"or \"a","Fragments":["!="]},{"Key":"\"a !=","Fragments":["b\"."]},{"Key":"I'm STUCKED!","Fragments":["I"]},{"Key":"STUCKED! I","Fragments":["can't"]},{"Key":"can't even","Fragments":["pass"]},{"Key":"even pass","Fragments":["the"]},{"Key":"first test!","Fragments":["I"]},{"Key":"test! I","Fragments":["just"]},{"Key":"just tried","Fragments":["to","it","this"]},{"Key":"tried to","Fragments":["create","keep","separate","make","roll","explain","keep","minimize","find","keep","use","be","keep","do","make","avoid","do","compile","use","do","avoid"]},{"Key":"function named","Fragments":["\"hey\","]},{"Key":"named \"hey\",","Fragments":["but"]},{"Key":"\"hey\", but","Fragments":["when"]},{"Key":"but when","Fragments":["I","using"]},{"Key":"run \"make\"","Fragments":["it"]},{"Key":"\"make\" it","Fragments":["says"]},{"Key":"says that","Fragments":["there"]},{"Key":"no \"hey\"","Fragments":["function"]},{"Key":"\"hey\" function","Fragments":["matching","is","I"]},{"Key":"function matching","Fragments":["for"]},{"Key":"matching for","Fragments":["that"]},{"Key":"for that","Fragments":["test","reason.","case"]},{"Key":"that test","Fragments":["instace","would"]},{"Key":"test instace","Fragments":["in"]},{"Key":"instace in","Fragments":["bob"]},{"Key":"Your implementation","Fragments":["of","does","of"]},{"Key":"of getLowerCase","Fragments":["is"]},{"Key":"getLowerCase is","Fragments":["essentially"]},{"Key":"is essentially","Fragments":["a"]},{"Key":"essentially a","Fragments":["duplicate"]},{"Key":"a duplicate","Fragments":["of"]},{"Key":"duplicate of","Fragments":["boost::to_lower_copy."]},{"Key":"A switch","Fragments":["that"]},{"Key":"switch that","Fragments":["throws"]},{"Key":"that throws","Fragments":["by"]},{"Key":"throws by","Fragments":["default"]},{"Key":"single call","Fragments":["to","to"]},{"Key":"call to","Fragments":["a","yourself","hey,","`std::string`","```fill_map```-method","`.count()`","swap","boost::algorithm::to_lower","```std::transform```","```matches()```.","swap","find()","push_back","new","```std::pow```","yelling","```std::pow```","a","anagram::anagram(std::string)"]},{"Key":"a (range)","Fragments":["algorithm."]},{"Key":"(range) algorithm.","Fragments":["I"]},{"Key":"algorithm. I","Fragments":["think"]},{"Key":"is as","Fragments":["concise","straight-forward"]},{"Key":"as concise","Fragments":["as","and"]},{"Key":"concise as","Fragments":["I"]},{"Key":"as I","Fragments":["can","never","think","expected:","understand","don't","have","wasn't","wanted"]},{"Key":"One question","Fragments":["is"]},{"Key":"question is","Fragments":["unanswered","are","are","empty."]},{"Key":"is unanswered","Fragments":["though:"]},{"Key":"unanswered though:","Fragments":["Why"]},{"Key":"though: Why","Fragments":["exactly"]},{"Key":"Why exactly","Fragments":["is"]},{"Key":"exactly is","Fragments":["it,"]},{"Key":"is it,","Fragments":["that"]},{"Key":"it, that","Fragments":["the"]},{"Key":"the address-of","Fragments":["operator"]},{"Key":"address-of operator","Fragments":["in"]},{"Key":"operator in","Fragments":["the"]},{"Key":"the static_cast","Fragments":["argument","template"]},{"Key":"static_cast argument","Fragments":["is"]},{"Key":"argument is","Fragments":["optional?"]},{"Key":" I.e.,","Fragments":["(to_rna)"]},{"Key":"I.e., (to_rna)","Fragments":["and"]},{"Key":"(to_rna) and","Fragments":["(\u0026to_rna)"]},{"Key":"and (\u0026to_rna)","Fragments":["work"]},{"Key":"(\u0026to_rna) work","Fragments":["the"]},{"Key":"work the","Fragments":["same,"]},{"Key":"same, while","Fragments":["the"]},{"Key":"while the","Fragments":["static_cast","`ispunct`","class"]},{"Key":"static_cast template","Fragments":["argument"]},{"Key":"template argument","Fragments":["clearly"]},{"Key":"argument clearly","Fragments":["indicates"]},{"Key":"clearly indicates","Fragments":["a","the"]},{"Key":"indicates a","Fragments":["pointer."]},{"Key":"guess referencing","Fragments":["a"]},{"Key":"referencing a","Fragments":["function"]},{"Key":"function always","Fragments":["implicitly"]},{"Key":"always implicitly","Fragments":["returns"]},{"Key":"implicitly returns","Fragments":["a"]},{"Key":"returns a","Fragments":["pointer,","reference","void,","`MessageType`"]},{"Key":"a pointer,","Fragments":["but"]},{"Key":"pointer, but","Fragments":["it"]},{"Key":"is still","Fragments":["a","present","in","not"]},{"Key":"still a","Fragments":["bit"]},{"Key":"bit unexpected","Fragments":["behaviour."]},{"Key":"unexpected behaviour.","Fragments":["Would"]},{"Key":"behaviour. Would","Fragments":["like"]},{"Key":"Would like","Fragments":["to","to"]},{"Key":"know more","Fragments":["abou"]},{"Key":"more abou","Fragments":["it."]},{"Key":"don't think","Fragments":["this","I've","that's","it's","that","I've","using","I'm","`trim_left_copy(str)`","it's","it","you","anyone","this","you"]},{"Key":"this matches","Fragments":["what"]},{"Key":"matches what","Fragments":["is"]},{"Key":"is expected","Fragments":["by"]},{"Key":"expected by","Fragments":["the"]},{"Key":"If you","Fragments":["look","are","prefer","have","know","were","expect","declare","want","compare","remove","want","want","don't","are","want","are","don't","are","have","wanted","trim","look","look","really","find"]},{"Key":"you look","Fragments":["in","at","for","at","at","at","at"]},{"Key":"look in","Fragments":["bob_test.cpp"]},{"Key":"in bob_test.cpp","Fragments":["you"]},{"Key":"bob_test.cpp you","Fragments":["will"]},{"Key":"will see","Fragments":["that"]},{"Key":"you need","Fragments":["to","to","it.","cctype","a","integer.","to","to","to","to","to.","to","to","in","to"]},{"Key":"to implement","Fragments":["a","a","an","the","future","considering"]},{"Key":"implement a","Fragments":["function","simple"]},{"Key":"function which","Fragments":["can"]},{"Key":"which can","Fragments":["be","cause","help","have"]},{"Key":"be called","Fragments":["with","on","`isAllCaps`","from","with","externally"]},{"Key":"called with","Fragments":["bob::hey(\"Tom-ay-to,","the"]},{"Key":"with bob::hey(\"Tom-ay-to,","Fragments":["tom-aaaah-to.\")"]},{"Key":"After viewing","Fragments":["some"]},{"Key":"viewing some","Fragments":["other"]},{"Key":"some other","Fragments":["submissions,","method","context","way","point","flags","people's","submitters","people's"]},{"Key":"other submissions,","Fragments":["I"]},{"Key":"submissions, I","Fragments":["decided"]},{"Key":"I decided","Fragments":["to","to","to","to","the","early","to","instead","that","to","to","to","against"]},{"Key":"move testing","Fragments":["the"]},{"Key":"testing the","Fragments":["string","first"]},{"Key":"into functions","Fragments":["to","but","(or"]},{"Key":"make things","Fragments":["easier","clear,"]},{"Key":"things easier","Fragments":["to"]},{"Key":" Try","Fragments":["using","to"]},{"Key":"Try using","Fragments":["\"\\\\\\\\s+\""]},{"Key":"using \"\\\\\\\\s+\"","Fragments":["for"]},{"Key":"\"\\\\\\\\s+\" for","Fragments":["one"]},{"Key":"for one","Fragments":["or"]},{"Key":"one or","Fragments":["more"]},{"Key":"or more","Fragments":["spaces","spaces.","precisely","locations,"]},{"Key":"more spaces","Fragments":["or"]},{"Key":"spaces or","Fragments":["\"\\\\\\\\s*\""]},{"Key":"or \"\\\\\\\\s*\"","Fragments":["for"]},{"Key":"\"\\\\\\\\s*\" for","Fragments":["zero"]},{"Key":"for zero","Fragments":["or","and"]},{"Key":"zero or","Fragments":["more"]},{"Key":"I decomposed","Fragments":["the"]},{"Key":"decomposed the","Fragments":["problem"]},{"Key":"- If","Fragments":["the","I"]},{"Key":"If the","Fragments":["string","regex","same","iterator","number"]},{"Key":"or consists","Fragments":["solely"]},{"Key":"consists solely","Fragments":["of"]},{"Key":"solely of","Fragments":["whitespace,"]},{"Key":"of whitespace,","Fragments":["then","however"]},{"Key":"whitespace, then","Fragments":["the"]},{"Key":"the message","Fragments":["is","has","is","starts","but","types","string","string"]},{"Key":"message is","Fragments":["\"silent\"","all"]},{"Key":"* Emptiness","Fragments":["is"]},{"Key":"Emptiness is","Fragments":["trivial"]},{"Key":"is trivial","Fragments":["to"]},{"Key":"trivial to","Fragments":["check.","change","accept"]},{"Key":"to check.","Fragments":["Deciding"]},{"Key":"check. Deciding","Fragments":["all(whitespace)"]},{"Key":"Deciding all(whitespace)","Fragments":["requires"]},{"Key":"all(whitespace) requires","Fragments":["visiting"]},{"Key":"requires visiting","Fragments":["the"]},{"Key":"visiting the","Fragments":["whole"]},{"Key":"- To","Fragments":["be"]},{"Key":"a yell,","Fragments":["the","but","unless"]},{"Key":"yell, the","Fragments":["string"]},{"Key":"string must","Fragments":["contain"]},{"Key":"must contain","Fragments":["at"]},{"Key":"contain at","Fragments":["least"]},{"Key":"least one","Fragments":["alphabetic","upper-case","uppercase","char","upper","variable"]},{"Key":"one alphabetic","Fragments":["character"]},{"Key":"alphabetic character","Fragments":["and","before"]},{"Key":"character and","Fragments":["no"]},{"Key":"and no","Fragments":["lowercase","input","requirements","difference","lowercase","lower"]},{"Key":"no lowercase","Fragments":["alphabetic","letters,","letters","characters"]},{"Key":"lowercase alphabetic","Fragments":["characters."]},{"Key":"* We","Fragments":["can"]},{"Key":"can stop","Fragments":["iteration","iteration)."]},{"Key":"stop iteration","Fragments":["upon","(short"]},{"Key":"iteration upon","Fragments":["finding"]},{"Key":"upon finding","Fragments":["a"]},{"Key":"finding a","Fragments":["lowercase"]},{"Key":"a lowercase","Fragments":["char;","value","character."]},{"Key":"lowercase char;","Fragments":["it"]},{"Key":"char; it","Fragments":["is"]},{"Key":"not whitespace,","Fragments":["and"]},{"Key":"whitespace, and","Fragments":["it"]},{"Key":"and it","Fragments":["makes","does","didn't","seems","would","functionality","doesn't","would","turned","just","would","also","is","notifies","tripped","creates","looks","brought","can","would","works"]},{"Key":"makes a","Fragments":["yell","few","more"]},{"Key":"a yell","Fragments":["impossible","on","and","(as","(\"Whoa,"]},{"Key":"* Yells","Fragments":["take"]},{"Key":"Yells take","Fragments":["precedence"]},{"Key":"take precedence","Fragments":["over"]},{"Key":"precedence over","Fragments":["silence,","just"]},{"Key":"over silence,","Fragments":["so"]},{"Key":"silence, so","Fragments":["if"]},{"Key":"so if","Fragments":["we","it"]},{"Key":"yell on","Fragments":["our"]},{"Key":"on our","Fragments":["hands,"]},{"Key":"our hands,","Fragments":["just"]},{"Key":"hands, just","Fragments":["check"]},{"Key":"just check","Fragments":["if"]},{"Key":"last char","Fragments":["is"]},{"Key":"char is","Fragments":["?","a","lowercase","alphanumeric."]},{"Key":"The yell_or_silence","Fragments":["class"]},{"Key":"yell_or_silence class","Fragments":["is"]},{"Key":"is designed","Fragments":["for"]},{"Key":"designed for","Fragments":["use"]},{"Key":"for use","Fragments":["with"]},{"Key":"use with","Fragments":["std::find_if().","Bob."]},{"Key":"with std::find_if().","Fragments":["It"]},{"Key":"std::find_if(). It","Fragments":["observes"]},{"Key":"It observes","Fragments":["one"]},{"Key":"observes one","Fragments":["character"]},{"Key":"one character","Fragments":["at"]},{"Key":"character at","Fragments":["a","the"]},{"Key":"a time","Fragments":["and"]},{"Key":"time and","Fragments":["returns"]},{"Key":"and returns","Fragments":["true","a","the","the","the","the","the"]},{"Key":"returns true","Fragments":["(terminating","then","then","then","then","if"]},{"Key":"true (terminating","Fragments":["the"]},{"Key":"(terminating the","Fragments":["iteration)"]},{"Key":"the iteration)","Fragments":["if"]},{"Key":"iteration) if","Fragments":["one"]},{"Key":"the decisions","Fragments":["\"this","that"]},{"Key":"decisions \"this","Fragments":["is"]},{"Key":"\"this is","Fragments":["a","silence\"","a"]},{"Key":"a yell\"","Fragments":["or"]},{"Key":"yell\" or","Fragments":["\"this"]},{"Key":"or \"this","Fragments":["is"]},{"Key":"is silence\"","Fragments":["can"]},{"Key":"silence\" can","Fragments":["be"]},{"Key":"be made.","Fragments":["The"]},{"Key":"made. The","Fragments":["return"]},{"Key":"The return","Fragments":["value","short-circuits","of"]},{"Key":"return value","Fragments":["of","a","and","if","if","`mResponses.at(foo)`\u003c/ul\u003e\u003c/li\u003e","of","of","and","from","in","of","of"]},{"Key":"value of","Fragments":["std::find_if","0.","1","its","the","`words[currentWord]`","isSayingAnything","the","`hamming_diff`","`food_iter`","this","string::npos."]},{"Key":"of std::find_if","Fragments":["is"]},{"Key":"std::find_if is","Fragments":["not"]},{"Key":"not important","Fragments":["in","but"]},{"Key":"important in","Fragments":["this"]},{"Key":"this case;","Fragments":["we"]},{"Key":"case; we","Fragments":["don't"]},{"Key":"don't care","Fragments":["where","enough"]},{"Key":"care where","Fragments":["that"]},{"Key":"where that","Fragments":["character","would"]},{"Key":"that character","Fragments":["was,","appears"]},{"Key":"character was,","Fragments":["only"]},{"Key":"was, only","Fragments":["that"]},{"Key":"only that","Fragments":["it"]},{"Key":" My","Fragments":["initial","biggest","code","first","previous","first","guess","only","only","first","preferred","comments","very","other","first","only","initial"]},{"Key":"My initial","Fragments":["implementation","solutions"]},{"Key":"initial implementation","Fragments":["used"]},{"Key":"implementation used","Fragments":["std::for_each()"]},{"Key":"used std::for_each()","Fragments":["but"]},{"Key":"std::for_each() but","Fragments":["there"]},{"Key":"but there","Fragments":["is","are","are","were","is","is"]},{"Key":"to stop","Fragments":["iteration","early"]},{"Key":"iteration (short","Fragments":["of"]},{"Key":"(short of","Fragments":["throwing"]},{"Key":"of throwing","Fragments":["an","values","an"]},{"Key":"throwing an","Fragments":["exception,","exception,","exception","exception","exception"]},{"Key":"an exception,","Fragments":["which","stating"]},{"Key":"exception, which","Fragments":["is"]},{"Key":"not desirable)","Fragments":["once"]},{"Key":"desirable) once","Fragments":["the"]},{"Key":"once the","Fragments":["predicate"]},{"Key":"the predicate","Fragments":["object"]},{"Key":"predicate object","Fragments":["already"]},{"Key":"object already","Fragments":["knows"]},{"Key":"already knows","Fragments":["the"]},{"Key":"knows the","Fragments":["answer"]},{"Key":"answer (e.g.,","Fragments":["if"]},{"Key":"(e.g., if","Fragments":["the"]},{"Key":"first character","Fragments":["is","whether","of","compared"]},{"Key":"character is","Fragments":["lowercase,","probably","white","whitespace.","found","compared","compared","found?","uppercase.","found","a","alphabetical,","upper","a","a","uppercase","an"]},{"Key":"is lowercase,","Fragments":["we"]},{"Key":"lowercase, we","Fragments":["know"]},{"Key":"we know","Fragments":["this","someone","that"]},{"Key":"know this","Fragments":["is","is","is","should"]},{"Key":"is neither","Fragments":["silence"]},{"Key":"neither silence","Fragments":["nor"]},{"Key":"silence nor","Fragments":["a"]},{"Key":"nor a","Fragments":["yell"]},{"Key":"yell and","Fragments":["can"]},{"Key":"and can","Fragments":["stop","lead","immediately"]},{"Key":"noticed a","Fragments":["mistake"]},{"Key":"a mistake","Fragments":["in","while"]},{"Key":"mistake in","Fragments":["the"]},{"Key":"the constructor,","Fragments":["it","otherwise"]},{"Key":"constructor, it","Fragments":["should"]},{"Key":"it should","Fragments":["be","be","be,","be.\u003c/li\u003e","be.","be","be","be","look","work","return","not","be"]},{"Key":" Dialog(const","Fragments":["std::string"]},{"Key":"Dialog(const std::string","Fragments":["\u0026phrase)"]},{"Key":" instead","Fragments":["of","of"]},{"Key":" Dialog(std::string","Fragments":["phrase){"]},{"Key":"It looks","Fragments":["to","like","good!","a","like","like"]},{"Key":"looks to","Fragments":["me"]},{"Key":"me like","Fragments":["a","there'd"]},{"Key":"a RegEx","Fragments":["would"]},{"Key":"RegEx would","Fragments":["be"]},{"Key":"good fit","Fragments":["to","when"]},{"Key":"fit to","Fragments":["discern"]},{"Key":"to discern","Fragments":["the"]},{"Key":"discern the","Fragments":["various"]},{"Key":"the various","Fragments":["cases.","responses,"]},{"Key":"various cases.","Fragments":["However,"]},{"Key":"cases. However,","Fragments":["I'm"]},{"Key":"However, I'm","Fragments":["not"]},{"Key":"not getting","Fragments":["boost::regex"]},{"Key":"getting boost::regex","Fragments":["to"]},{"Key":"boost::regex to","Fragments":["work"]},{"Key":"work properly.","Fragments":["My"]},{"Key":"properly. My","Fragments":["first"]},{"Key":"My first","Fragments":["regex","attempt","guess","exercism.","experience"]},{"Key":"first regex","Fragments":["([\\s]),"]},{"Key":"regex ([\\s]),","Fragments":["with"]},{"Key":"([\\s]), with","Fragments":["\\"]},{"Key":"with \\","Fragments":["for"]},{"Key":"\\ for","Fragments":["escapes"]},{"Key":"for escapes","Fragments":["in"]},{"Key":"escapes in","Fragments":["C++,"]},{"Key":"in C++,","Fragments":["is","and","those"]},{"Key":"C++, is","Fragments":["intended"]},{"Key":"is intended","Fragments":["to"]},{"Key":"intended to","Fragments":["match"]},{"Key":"to match","Fragments":["any","the","it.","strings","the"]},{"Key":"match any","Fragments":["amount"]},{"Key":"any amount","Fragments":["of"]},{"Key":"whitespace, however","Fragments":["it"]},{"Key":"however it","Fragments":["doesn't.","has","seems"]},{"Key":" Running","Fragments":["this","13"]},{"Key":"Running this","Fragments":["code"]},{"Key":"this code","Fragments":["in","could","as","even","is.","now,","lucid","is","adheres","where","further.","interesting","is","I","properly"]},{"Key":"code in","Fragments":["Coliru,","a","any","an","C,","the","1","my","`main()`?"]},{"Key":"in Coliru,","Fragments":["I","we"]},{"Key":"Coliru, I","Fragments":["don't"]},{"Key":"think I've","Fragments":["gotten","ever","fallen"]},{"Key":"I've gotten","Fragments":["the"]},{"Key":"gotten the","Fragments":["regex","hang"]},{"Key":"the regex","Fragments":["to","library","searches","was","test","be.","which","for","idea.","iterator","separators","classes"]},{"Key":"regex to","Fragments":["load"]},{"Key":"to load","Fragments":["properly"]},{"Key":"load properly","Fragments":["at"]},{"Key":"properly at","Fragments":["all."]},{"Key":" Any","Fragments":["pointers","feed"]},{"Key":"Any pointers","Fragments":["welcome!"]},{"Key":"that now","Fragments":["when"]},{"Key":"now when","Fragments":["I"]},{"Key":"I read","Fragments":["`hey`","the","about"]},{"Key":"read `hey`","Fragments":["I"]},{"Key":"`hey` I","Fragments":["see"]},{"Key":"see a","Fragments":["straightforward","few","performance","real","linear"]},{"Key":"a straightforward","Fragments":["algorithm","exercise."]},{"Key":"straightforward algorithm","Fragments":["expressed"]},{"Key":"algorithm expressed","Fragments":["in"]},{"Key":"expressed in","Fragments":["terms"]},{"Key":"the problem.","Fragments":["Do","However,","One","You","A","Speciallly","Nice","Or"]},{"Key":"problem. Do","Fragments":["you"]},{"Key":"think `d.isEmpty()`","Fragments":["would"]},{"Key":"`d.isEmpty()` would","Fragments":["communicate"]},{"Key":"would communicate","Fragments":["the"]},{"Key":"communicate the","Fragments":["problem"]},{"Key":"domain better","Fragments":["if"]},{"Key":"better if","Fragments":["it"]},{"Key":"it read","Fragments":["`d.isSilent()`?"]},{"Key":"read `d.isSilent()`?","Fragments":["Being"]},{"Key":"`d.isSilent()`? Being","Fragments":["empty"]},{"Key":"Being empty","Fragments":["feels"]},{"Key":"empty feels","Fragments":["like"]},{"Key":"like an","Fragments":["expression","expression","actual","interesting"]},{"Key":"an expression","Fragments":["of","of"]},{"Key":"expression of","Fragments":["the","the","the","the"]},{"Key":"implementation and","Fragments":["being","this"]},{"Key":"and being","Fragments":["silent"]},{"Key":"being silent","Fragments":["feels"]},{"Key":"silent feels","Fragments":["more"]},{"Key":"feels more","Fragments":["like","straightforward"]},{"Key":"more like","Fragments":["an","a","you"]},{"Key":"I always","Fragments":["find","liked","put"]},{"Key":"always find","Fragments":["it"]},{"Key":"find it","Fragments":["weird","difficult","good","helps"]},{"Key":"it weird","Fragments":["to"]},{"Key":"weird to","Fragments":["read"]},{"Key":"read private","Fragments":["members"]},{"Key":"members of","Fragments":["a","'bob'","an"]},{"Key":"class as","Fragments":["the"]},{"Key":"very first","Fragments":["thing","serious","submission"]},{"Key":"first thing","Fragments":["when","that"]},{"Key":"thing when","Fragments":["I'm"]},{"Key":"when I'm","Fragments":["reading"]},{"Key":"I'm reading","Fragments":["a"]},{"Key":"reading a","Fragments":["class"]},{"Key":"class declaration.","Fragments":["To"]},{"Key":"declaration. To","Fragments":["me,"]},{"Key":"To me,","Fragments":["private"]},{"Key":"me, private","Fragments":["members"]},{"Key":"are hidden","Fragments":["implementation"]},{"Key":"hidden implementation","Fragments":["details"]},{"Key":"I should","Fragments":["first","check","have","use","have","assume","probably","use","have","be","by","definitely","use","have","probably","throw","probably","get","have","have"]},{"Key":"should first","Fragments":["be"]},{"Key":"first be","Fragments":["reading"]},{"Key":"be reading","Fragments":["the"]},{"Key":"the public","Fragments":["interface"]},{"Key":"public interface","Fragments":["for"]},{"Key":"interface for","Fragments":["a"]},{"Key":"class, then","Fragments":["protected"]},{"Key":"then protected","Fragments":["members,"]},{"Key":"protected members,","Fragments":["then"]},{"Key":"members, then","Fragments":["private"]},{"Key":"then private","Fragments":["members."]},{"Key":"private members.","Fragments":["I"]},{"Key":"members. I","Fragments":["wrote"]},{"Key":"I wrote","Fragments":["up","in","the","a","a","two","a","this.","it"]},{"Key":"wrote up","Fragments":["a"]},{"Key":"up a","Fragments":["refactoring","little.","bit,","bit.","bit.","bit,"]},{"Key":"a refactoring","Fragments":["on"]},{"Key":"refactoring on","Fragments":["this"]},{"Key":"this that","Fragments":["I"]},{"Key":"I called","Fragments":["[Sort","make"]},{"Key":"called [Sort","Fragments":["Members"]},{"Key":"[Sort Members","Fragments":["by"]},{"Key":"Members by","Fragments":["Visibility](http://legalizeadulthood.wordpress.com/2013/08/01/refactoring-sort-members-by-visibility/)."]},{"Key":" Let's","Fragments":["take"]},{"Key":"Let's take","Fragments":["a"]},{"Key":"a look","Fragments":["at","at","on","to","to","at","at","at","to","at","at","at","of"]},{"Key":"at your","Fragments":["class"]},{"Key":"your class","Fragments":["in","is"]},{"Key":"class in","Fragments":["more"]},{"Key":"in more","Fragments":["detail.","complicated","complex"]},{"Key":"more detail.","Fragments":["The"]},{"Key":"detail. The","Fragments":["work"]},{"Key":"The work","Fragments":["done"]},{"Key":"work done","Fragments":["in","by"]},{"Key":"done in","Fragments":["the","the","C.","O(max(len_i)),","argument","the"]},{"Key":"constructor appears","Fragments":["only"]},{"Key":"appears only","Fragments":["needed"]},{"Key":"only needed","Fragments":["for","to"]},{"Key":"needed for","Fragments":["the","this","'if'"]},{"Key":"the `isEmpty`","Fragments":["test."]},{"Key":"`isEmpty` test.","Fragments":["The"]},{"Key":"test. The","Fragments":["other"]},{"Key":"The other","Fragments":["tests","test"]},{"Key":"other tests","Fragments":["don't"]},{"Key":"tests don't","Fragments":["appear","cover","really"]},{"Key":"don't appear","Fragments":["to"]},{"Key":"appear to","Fragments":["be"]},{"Key":"be white","Fragments":["space"]},{"Key":"white space","Fragments":["sensitive.","you","with","after","exists","makes"]},{"Key":"space sensitive.","Fragments":["Does"]},{"Key":"sensitive. Does","Fragments":["this"]},{"Key":"Does this","Fragments":["even"]},{"Key":"even need","Fragments":["to","is_upper"]},{"Key":"class at","Fragments":["all?","a"]},{"Key":"at all?","Fragments":["Could"]},{"Key":"all? Could","Fragments":["it"]},{"Key":"Could it","Fragments":["simply"]},{"Key":"simply be","Fragments":["three"]},{"Key":"be three","Fragments":["free"]},{"Key":"three free","Fragments":["functions"]},{"Key":"functions `bool","Fragments":["isEmpty(std::string"]},{"Key":"`bool isEmpty(std::string","Fragments":["const"]},{"Key":"isEmpty(std::string const","Fragments":["\u0026text)`,"]},{"Key":"const \u0026text)`,","Fragments":["`bool"]},{"Key":"\u0026text)`, `bool","Fragments":["isShouting(std::string"]},{"Key":"`bool isShouting(std::string","Fragments":["const"]},{"Key":"isShouting(std::string const","Fragments":["\u0026text)`"]},{"Key":"const \u0026text)`","Fragments":["and"]},{"Key":"\u0026text)` and","Fragments":["`bool"]},{"Key":"and `bool","Fragments":["isAsking(std::string"]},{"Key":"`bool isAsking(std::string","Fragments":["const"]},{"Key":"isAsking(std::string const","Fragments":["\u0026text)`?"]},{"Key":"A couple","Fragments":["people","of","things","suggestions"]},{"Key":"couple people","Fragments":["have"]},{"Key":"people have","Fragments":["broadened"]},{"Key":"have broadened","Fragments":["the"]},{"Key":"broadened the","Fragments":["idea"]},{"Key":"the idea","Fragments":["of","to","was","of","of","of","of","since"]},{"Key":"idea of","Fragments":["shouting","using","using","trimming","needing"]},{"Key":"shouting to","Fragments":["be"]},{"Key":"the condition","Fragments":["where","Is","to","`shouting"]},{"Key":"condition where","Fragments":["some"]},{"Key":"where some","Fragments":["majority"]},{"Key":"some majority","Fragments":["fraction"]},{"Key":"majority fraction","Fragments":["of"]},{"Key":"fraction of","Fragments":["the"]},{"Key":"characters were","Fragments":["upper","capitalized","found,"]},{"Key":"were upper","Fragments":["case,"]},{"Key":"upper case,","Fragments":["but"]},{"Key":"so sure","Fragments":["that"]},{"Key":"sure that","Fragments":["I","the","query","at","anyone"]},{"Key":"that idea.","Fragments":["For"]},{"Key":"idea. For","Fragments":["instance,"]},{"Key":"instance, acronyms","Fragments":["are"]},{"Key":"acronyms are","Fragments":["often"]},{"Key":"often capitalized","Fragments":["and"]},{"Key":"capitalized and","Fragments":["then"]},{"Key":"then simple","Fragments":["statements"]},{"Key":"simple statements","Fragments":["about"]},{"Key":"statements about","Fragments":["acronyms"]},{"Key":"about acronyms","Fragments":["could"]},{"Key":"acronyms could","Fragments":["be"]},{"Key":"as shouting","Fragments":["when"]},{"Key":"think that's","Fragments":["the","an","another"]},{"Key":"that's the","Fragments":["intent"]},{"Key":"the intent","Fragments":["of","and"]},{"Key":"intent of","Fragments":["the"]},{"Key":"problem. However,","Fragments":["without"]},{"Key":"However, without","Fragments":["clarifying"]},{"Key":"without clarifying","Fragments":["information"]},{"Key":"clarifying information","Fragments":["in"]},{"Key":"information in","Fragments":["the"]},{"Key":"problem statement,","Fragments":["you"]},{"Key":"statement, you","Fragments":["could"]},{"Key":"could make","Fragments":["the","the","`checkQuestion`","the","this","it","the","it"]},{"Key":"case either","Fragments":["way,"]},{"Key":"either way,","Fragments":["so"]},{"Key":"way, so","Fragments":["I"]},{"Key":"so I","Fragments":["don't","could","didn't","check","am","broke","just","wrote","reverted","will","should","didn't","appreciate","pressed","read","will","could","just","replaced","wanted","might","left","used","got","still","can","suggest","have","create","just","am","can't","just","used","explicity","would","hardcoded","thought"]},{"Key":"think it's","Fragments":["wrong,","a","arguable","really","broken"]},{"Key":"it's wrong,","Fragments":["just"]},{"Key":"wrong, just","Fragments":["a"]},{"Key":"just a","Fragments":["different","trivial","namespace","comment?","benign","single","couple","fun","quirk","matter","good","matter"]},{"Key":"a different","Fragments":["interpretation","scope.","approach","job","dictionary","dictionary","dictionary","word.\u003c/li\u003e","format,","language","direction,","hamming_test.cpp"]},{"Key":"different interpretation","Fragments":["of"]},{"Key":"interpretation of","Fragments":["the","the"]},{"Key":"Nice use","Fragments":["of","of","of","of","of"]},{"Key":"of inner_product.","Fragments":["I"]},{"Key":"inner_product. I","Fragments":["didn't"]},{"Key":"didn't know","Fragments":["the","about","that","about","about","about","why.","about","that.","if","that"]},{"Key":"know the","Fragments":["standard","answer","complete"]},{"Key":"library had","Fragments":["a"]},{"Key":"that fits","Fragments":["so"]},{"Key":"fits so","Fragments":["perfectly"]},{"Key":"so perfectly","Fragments":["for"]},{"Key":"perfectly for","Fragments":["this"]},{"Key":"I would","Fragments":["say","not","like","recommend","like","guess","throw","consider","have","not","have","have","use","have","try","have","have","not","nitpick","look","agree","like","suggest.","agree","do","probably","sugest:","be","change","suggest","take","agree","be","suggest","separate","suggest","have","suggest","caution","interpret","call","prefer","use","also","avoid","rename","have","not","love","think","suggest","prefer","appreciate","suggest","declare","suggest","put","probably","avoid","argue","have","make","change"]},{"Key":"would say","Fragments":["that","to"]},{"Key":"that swapping","Fragments":["the"]},{"Key":"swapping the","Fragments":["two","arguments."]},{"Key":"the two","Fragments":["strings","variables","strings","approaches","to","strings","sorting","sequences","sequences","sequences","sequences","sequences","sizes","sequences","maps?"]},{"Key":"two strings","Fragments":["is","were","and","where"]},{"Key":"strings is","Fragments":["overly","really"]},{"Key":"is overly","Fragments":["complicated"]},{"Key":"overly complicated","Fragments":["for","the"]},{"Key":"complicated for","Fragments":["this"]},{"Key":"this task.","Fragments":["I'd","I","When"]},{"Key":"task. I'd","Fragments":["have"]},{"Key":"I'd have","Fragments":["written","no","put"]},{"Key":"have written","Fragments":["it"]},{"Key":"written it","Fragments":["like"]},{"Key":"it like","Fragments":["this","it"]},{"Key":" int","Fragments":["minLength","main(int","last","capacity","alphabet[26]","i"]},{"Key":"int minLength","Fragments":["="]},{"Key":"minLength =","Fragments":["std::min("]},{"Key":"= std::min(","Fragments":["a.length(),"]},{"Key":"std::min( a.length(),","Fragments":["b.length()"]},{"Key":"a.length(), b.length()","Fragments":[");"]},{"Key":"return inner_product(a.begin(),","Fragments":["a.begin()"]},{"Key":"inner_product(a.begin(), a.begin()","Fragments":["+"]},{"Key":"a.begin() +","Fragments":["minLength,"]},{"Key":"+ minLength,","Fragments":["b.begin(),"]},{"Key":"minLength, b.begin(),","Fragments":["0,"]},{"Key":"b.begin(), 0,","Fragments":["..."]},{"Key":"0, ...","Fragments":[");","}?"]},{"Key":"There probably","Fragments":["isn't"]},{"Key":"probably isn't","Fragments":["much","the"]},{"Key":"isn't much","Fragments":["of","of"]},{"Key":"much of","Fragments":["a","\"algorithm\"","a","the"]},{"Key":"performance hit","Fragments":["with","from"]},{"Key":"hit with","Fragments":["swap"]},{"Key":"with swap","Fragments":["since"]},{"Key":"swap since","Fragments":["strings"]},{"Key":"since strings","Fragments":["are"]},{"Key":"strings are","Fragments":["moveable,","constant."]},{"Key":"are moveable,","Fragments":["but"]},{"Key":"moveable, but","Fragments":["I"]},{"Key":"code itself","Fragments":["is"]},{"Key":"itself is","Fragments":["kept"]},{"Key":"is kept","Fragments":["simpler"]},{"Key":"kept simpler","Fragments":["with"]},{"Key":"simpler with","Fragments":["that"]},{"Key":"with that","Fragments":["change.","key","which","capability","name","return","syntax,","recommendation"]},{"Key":"Also, someone","Fragments":["might"]},{"Key":"someone might","Fragments":["look"]},{"Key":"might look","Fragments":["only","nice,","for"]},{"Key":"look only","Fragments":["at"]},{"Key":"only at","Fragments":["the"]},{"Key":"the definition","Fragments":["of"]},{"Key":"definition of","Fragments":["*compute(string","`yell`"]},{"Key":"of *compute(string","Fragments":["shortest,"]},{"Key":"*compute(string shortest,","Fragments":["string"]},{"Key":"shortest, string","Fragments":["longest)*"]},{"Key":"string longest)*","Fragments":["and"]},{"Key":"longest)* and","Fragments":["thinks"]},{"Key":"and thinks","Fragments":["that"]},{"Key":"thinks that","Fragments":["he"]},{"Key":"that he","Fragments":["needs"]},{"Key":"he needs","Fragments":["to"]},{"Key":"make sure","Fragments":["that","that","the","the","that","I","I"]},{"Key":"first passed","Fragments":["parameter"]},{"Key":"passed parameter","Fragments":["is"]},{"Key":"parameter is","Fragments":["actually","copying"]},{"Key":"actually the","Fragments":["shorter"]},{"Key":"the shorter","Fragments":["one.","of","code."]},{"Key":"Nice usage","Fragments":["of"]},{"Key":"usage of","Fragments":["the","brackets.","return","return","auto.","\"goto\""]},{"Key":"Nice idea","Fragments":["to"]},{"Key":"to imbue","Fragments":["your"]},{"Key":"imbue your","Fragments":["stringstring"]},{"Key":"your stringstring","Fragments":["with"]},{"Key":"stringstring with","Fragments":["a"]},{"Key":"Just one","Fragments":["remark"]},{"Key":"one remark","Fragments":["-"]},{"Key":"remark -","Fragments":["you"]},{"Key":"can turn","Fragments":["this","them"]},{"Key":" auto","Fragments":["it","curr","wordStart","wordEnd","translate"]},{"Key":"auto it","Fragments":["=",":"]},{"Key":"it =","Fragments":["acc.find(word);"]},{"Key":"if (it","Fragments":["!="]},{"Key":"(it !=","Fragments":["acc.end())","'"]},{"Key":"!= acc.end())","Fragments":["{"]},{"Key":" }","Fragments":["else"]},{"Key":"} else","Fragments":["{"]},{"Key":" acc[word]","Fragments":["=","+="]},{"Key":"acc[word] =","Fragments":["1;"]},{"Key":" into","Fragments":["this"]},{"Key":"acc[word] +=","Fragments":["1;"]},{"Key":"don't see","Fragments":["the","the","the","how","how","any","how","how","how","how","how","how","a"]},{"Key":"the necessity","Fragments":["of"]},{"Key":"necessity of","Fragments":["using"]},{"Key":"using two","Fragments":["different","of","global"]},{"Key":"two different","Fragments":["methods","word,"]},{"Key":"different methods","Fragments":["here."]},{"Key":"methods here.","Fragments":["(if"]},{"Key":"here. (if","Fragments":["the"]},{"Key":"(if the","Fragments":["word"]},{"Key":"word isn't","Fragments":["in"]},{"Key":"isn't in","Fragments":["acc"]},{"Key":"in acc","Fragments":["yet,"]},{"Key":"acc yet,","Fragments":["it's"]},{"Key":"yet, it's","Fragments":["constructed"]},{"Key":"it's constructed","Fragments":["with"]},{"Key":"constructed with","Fragments":["a"]},{"Key":"a default","Fragments":["value","case","cause","constructed"]},{"Key":"default value","Fragments":["of","and"]},{"Key":"of 0.","Fragments":["So"]},{"Key":"0. So","Fragments":["*acc[word]"]},{"Key":"So *acc[word]","Fragments":["+="]},{"Key":"*acc[word] +=","Fragments":["1*"]},{"Key":"+= 1*","Fragments":["does"]},{"Key":"1* does","Fragments":["the"]},{"Key":"does the","Fragments":["same","job","\"us\"","same","exact","same"]},{"Key":"as *acc[word]","Fragments":["="]},{"Key":"*acc[word] =","Fragments":["1*"]},{"Key":"= 1*","Fragments":["in"]},{"Key":"1* in","Fragments":["this"]},{"Key":"you actually","Fragments":["checked"]},{"Key":"actually checked","Fragments":["if"]},{"Key":"checked if","Fragments":["it"]},{"Key":"it passes","Fragments":["the","every"]},{"Key":"passes the","Fragments":["given","given","tests","rules"]},{"Key":"the given","Fragments":["tests?","tests"]},{"Key":"given tests?","Fragments":["I"]},{"Key":"tests? I","Fragments":["see","though","thought"]},{"Key":"see two","Fragments":["issues"]},{"Key":"two issues","Fragments":["here","I"]},{"Key":"issues here","Fragments":["(but"]},{"Key":"here (but","Fragments":["I"]},{"Key":"(but I","Fragments":["can't","guess"]},{"Key":"can't test","Fragments":["it"]},{"Key":"test it","Fragments":["myself,"]},{"Key":"it myself,","Fragments":["sadly."]},{"Key":"myself, sadly.","Fragments":["boost"]},{"Key":"sadly. boost","Fragments":["isn't"]},{"Key":"boost isn't","Fragments":["installed)."]},{"Key":"You require","Fragments":["a"]},{"Key":"require a","Fragments":["string\u0026","loop."]},{"Key":"a string\u0026","Fragments":["to"]},{"Key":"string\u0026 to","Fragments":["be"]},{"Key":"passed to","Fragments":["words().","bob::hey.","```hey```","`matches`","a"]},{"Key":"to words().","Fragments":["But"]},{"Key":"words(). But","Fragments":["the"]},{"Key":"But the","Fragments":["test","simplest","conditions","new"]},{"Key":"test cases","Fragments":["only","in","(in","and","that","test","and","are","have","you","have"]},{"Key":"cases only","Fragments":["pass"]},{"Key":"only pass","Fragments":["a","by"]},{"Key":"pass a","Fragments":["char*.","delimited","reference","custom"]},{"Key":"a char*.","Fragments":["Imo"]},{"Key":"char*. Imo","Fragments":["this"]},{"Key":"Imo this","Fragments":["function"]},{"Key":"function should","Fragments":["pass-by-value"]},{"Key":"should pass-by-value","Fragments":["so"]},{"Key":"pass-by-value so","Fragments":["passing"]},{"Key":"so passing","Fragments":["a"]},{"Key":"passing a","Fragments":["char*","negative"]},{"Key":"a char*","Fragments":["works."]},{"Key":"2) Afaik,","Fragments":["boost::tokenizer"]},{"Key":"Afaik, boost::tokenizer","Fragments":["only"]},{"Key":"boost::tokenizer only","Fragments":["splits"]},{"Key":"only splits","Fragments":["at"]},{"Key":"splits at","Fragments":["whitespaces"]},{"Key":"at whitespaces","Fragments":["(spaces,"]},{"Key":"whitespaces (spaces,","Fragments":["tabs,"]},{"Key":"(spaces, tabs,","Fragments":["newlines)"]},{"Key":"tabs, newlines)","Fragments":["but"]},{"Key":"newlines) but","Fragments":["the"]},{"Key":"exercise requires","Fragments":["that"]},{"Key":"requires that","Fragments":["you","the","its"]},{"Key":"you ignore","Fragments":["special"]},{"Key":"ignore special","Fragments":["characters"]},{"Key":"special characters","Fragments":["like"]},{"Key":"characters like","Fragments":[";","'###$!!\""]},{"Key":"like ;","Fragments":["."]},{"Key":"; .","Fragments":["/"]},{"Key":". /","Fragments":["@."]},{"Key":"/ @.","Fragments":["The"]},{"Key":"@. The","Fragments":["string"]},{"Key":"The string","Fragments":["\"one,","is"]},{"Key":"string \"one,","Fragments":["two,"]},{"Key":"\"one, two,","Fragments":["three\""]},{"Key":"two, three\"","Fragments":["would"]},{"Key":"three\" would","Fragments":["be"]},{"Key":"be tokenized","Fragments":["into"]},{"Key":"tokenized into","Fragments":["\"one,\""]},{"Key":"into \"one,\"","Fragments":["\"two,\""]},{"Key":"\"one,\" \"two,\"","Fragments":["\"three\","]},{"Key":"\"two,\" \"three\",","Fragments":["instead"]},{"Key":"\"three\", instead","Fragments":["of"]},{"Key":"of \"one\"","Fragments":["\"two\""]},{"Key":"\"one\" \"two\"","Fragments":["\"three\""]},{"Key":"\"two\" \"three\"","Fragments":["(note"]},{"Key":"\"three\" (note","Fragments":["the"]},{"Key":"(note the","Fragments":["missing"]},{"Key":"the missing","Fragments":["commas)."]},{"Key":"missing commas).","Fragments":["You"]},{"Key":"commas). You","Fragments":["need"]},{"Key":"a delimited","Fragments":["to"]},{"Key":"delimited to","Fragments":["tokenizer()."]},{"Key":"have time","Fragments":["to"]},{"Key":"time to","Fragments":["install","figure","check","parse","sort","take","assign"]},{"Key":"to install","Fragments":["boost"]},{"Key":"install boost","Fragments":["here,"]},{"Key":"boost here,","Fragments":["so"]},{"Key":"here, so","Fragments":["I"]},{"Key":"you converted","Fragments":["the"]},{"Key":"converted the","Fragments":["input"]},{"Key":"string to","Fragments":["all","avoid","start","reserve","char[].","see","class","be","simply","actually","lower","lower","`removeSpaces`,","determine","it's"]},{"Key":"to all","Fragments":["caps","your","existing"]},{"Key":"all caps","Fragments":["and","words","function","ending"]},{"Key":"caps and","Fragments":["then"]},{"Key":"then compared","Fragments":["that"]},{"Key":"compared that","Fragments":["with"]},{"Key":"that with","Fragments":["the"]},{"Key":"original to","Fragments":["check"]},{"Key":"However, you","Fragments":["might","could","may"]},{"Key":"you might","Fragments":["want","be","could","have","consider","since","want","find","be","want","want","see","consider","use","use","want","also","want","want","use","do","have"]},{"Key":"a non-alpha","Fragments":["input"]},{"Key":"non-alpha input","Fragments":["in"]},{"Key":"input in","Fragments":["a","your","this","as","the"]},{"Key":"doesn't require","Fragments":["typing"]},{"Key":"require typing","Fragments":["out"]},{"Key":"typing out","Fragments":["the"]},{"Key":"whole alphabet","Fragments":["twice."]},{"Key":"alphabet twice.","Fragments":["Seems"]},{"Key":"twice. Seems","Fragments":["to"]},{"Key":"Seems to","Fragments":["me","do","be"]},{"Key":"like there'd","Fragments":["be"]},{"Key":"there'd be","Fragments":["a"]},{"Key":"of room","Fragments":["for"]},{"Key":"room for","Fragments":["error","improvements,"]},{"Key":"for error","Fragments":["in"]},{"Key":"error in","Fragments":["the","\"silence\":","your","\"with_apostrophes\":","\"with_apostrophes_as_quotes\":"]},{"Key":"the method","Fragments":["you","signature"]},{"Key":"method you","Fragments":["chose."]},{"Key":" Made","Fragments":["it","sure","some","it","a","it"]},{"Key":"Made it","Fragments":["a","a","a"]},{"Key":"a whole","Fragments":["bunch"]},{"Key":"whole bunch","Fragments":["shorter"]},{"Key":"bunch shorter","Fragments":["after"]},{"Key":"shorter after","Fragments":["learning"]},{"Key":"after learning","Fragments":["about"]},{"Key":"learning about","Fragments":["map"]},{"Key":"about map","Fragments":["iterators."]},{"Key":" Focused","Fragments":["on"]},{"Key":"Focused on","Fragments":["trying"]},{"Key":"on trying","Fragments":["to"]},{"Key":"a simple","Fragments":["vector","program,","program,","namespace","`for`","case","helper","programming","Sieve","for"]},{"Key":"simple vector","Fragments":["of"]},{"Key":"vector of","Fragments":["words","those","words","words","words","words","string"]},{"Key":"of words","Fragments":["that","to","and","and","and","and"]},{"Key":"could iterate","Fragments":["over","over"]},{"Key":"over and","Fragments":["create"]},{"Key":"and create","Fragments":["my"]},{"Key":"create my","Fragments":["counter"]},{"Key":"my counter","Fragments":["map"]},{"Key":"counter map","Fragments":["with."]},{"Key":" Thanks","Fragments":["for","to","for","though!","for","so","for","again.","for","for","for","marzece!","Max!","for",":)","for","for","for","for","for","krOozer","for","for","fractalic,","@randi.","for","for","for","again","to","for","for","for","for","for","for","again,","chrishamilton.","for"]},{"Key":"Thanks for","Fragments":["the","the","the","the","your","your","the","the","the","the","the","the","the","the","the","the","the","looking","your","having","pointing","the","the","picking","the","the","explaning","your","the","the","copying","the","the","the","your","the","the","the","the","the","the"]},{"Key":"have now","Fragments":["made"]},{"Key":"now made","Fragments":["an"]},{"Key":"made an","Fragments":["iteration"]},{"Key":"an iteration","Fragments":["2","that"]},{"Key":"iteration 2","Fragments":["with","states"]},{"Key":"2 with","Fragments":["the"]},{"Key":"the corrections","Fragments":["you"]},{"Key":"corrections you","Fragments":["mentioned."]},{"Key":"What do","Fragments":["you","you","you","you","you"]},{"Key":"do you","Fragments":["think","think","think?","define","think?","need","keep","mean","start"]},{"Key":"think about","Fragments":["the","names","efficiency.","it","whether","a","the","how","it,","every"]},{"Key":"the 2nd","Fragments":["iteration?","step","and","bottle"]},{"Key":"not pass","Fragments":["the","it","all"]},{"Key":" Good","Fragments":["points,","call","use","call","comments","catch","encapsulation,","use","point,","use","catch","solution","solution","idea","point","use","job","job"]},{"Key":"Good points,","Fragments":["thanks."]},{"Key":"are no","Fragments":["private/public","lower-case"]},{"Key":"no private/public","Fragments":["functions"]},{"Key":"private/public functions","Fragments":["here,"]},{"Key":"functions here,","Fragments":["as"]},{"Key":"here, as","Fragments":["I'm","that","it"]},{"Key":"as I'm","Fragments":["not","certain","interested"]},{"Key":"not using","Fragments":["classes.","two","if"]},{"Key":"using classes.","Fragments":["hey()"]},{"Key":"classes. hey()","Fragments":["is"]},{"Key":"hey() is","Fragments":["exposed"]},{"Key":"is exposed","Fragments":["in"]},{"Key":"exposed in","Fragments":["namespace"]},{"Key":"namespace bob,","Fragments":["everything","which"]},{"Key":"bob, everything","Fragments":["else"]},{"Key":"everything else","Fragments":["is","in"]},{"Key":"else is","Fragments":["in","passed"]},{"Key":"anonymous namespace.","Fragments":["Is","This"]},{"Key":"namespace. Is","Fragments":["there"]},{"Key":"Is there","Fragments":["anything","a","a","an","an","any","a"]},{"Key":"there anything","Fragments":["wrong"]},{"Key":"anything wrong","Fragments":["with","with"]},{"Key":"wrong with","Fragments":["that?","what","just","that,"]},{"Key":"of anything","Fragments":["simpler"]},{"Key":"anything simpler","Fragments":["to"]},{"Key":"simpler to","Fragments":["accomplish","follow"]},{"Key":"to accomplish","Fragments":["the","the"]},{"Key":"accomplish the","Fragments":["task","same"]},{"Key":"the task","Fragments":["at","is","and"]},{"Key":"task at","Fragments":["hand."]},{"Key":" your","Fragments":["hey"]},{"Key":"your hey","Fragments":["function"]},{"Key":"hey function","Fragments":["must","could","looks","for","difficult"]},{"Key":"function must","Fragments":["be"]},{"Key":"must be","Fragments":["in","reliable,","a","kept","kept","kept","kept","compared"]},{"Key":"be in","Fragments":["a","this","global","the","response","sync","about","order."]},{"Key":"called bob,","Fragments":["or"]},{"Key":"bob, or","Fragments":["be"]},{"Key":"or be","Fragments":["a"]},{"Key":"static public","Fragments":["function"]},{"Key":"public function","Fragments":["in"]},{"Key":"a bob","Fragments":["class.","class.","namespace"]},{"Key":"be something","Fragments":["like:","you'd","wrong","like"]},{"Key":"namespace bob","Fragments":["{","{"]},{"Key":"std::string hey(const","Fragments":["std::string\u0026","std::string\u0026","std::string\u0026"]},{"Key":"hey(const std::string\u0026","Fragments":["something)","something)","str)"]},{"Key":"std::string\u0026 something)","Fragments":["{","{"]},{"Key":" //code","Fragments":["here","here"]},{"Key":" or,","Fragments":["using"]},{"Key":"or, using","Fragments":["classes"]},{"Key":" class","Fragments":["bob","anagram"]},{"Key":"class bob","Fragments":["{","was"]},{"Key":" static","Fragments":["std::string","std::regex","std::regex"]},{"Key":"static std::string","Fragments":["hey(const"]},{"Key":"is tested,","Fragments":["and"]},{"Key":"tested, and","Fragments":["passes"]},{"Key":"and passes","Fragments":["all"]},{"Key":"passes all","Fragments":["the","of","the","the"]},{"Key":" Apparently,","Fragments":["const"]},{"Key":"Apparently, const","Fragments":["char"]},{"Key":"const char","Fragments":["*","*argv[])","[]","reference","*chars"]},{"Key":"char *","Fragments":["converts","const"]},{"Key":"* converts","Fragments":["to"]},{"Key":"converts to","Fragments":["string"]},{"Key":"to string","Fragments":["const","\u0026.","member"]},{"Key":"string const","Fragments":["\u0026.","\u0026.","ALPHA)"]},{"Key":"And yeah,","Fragments":["boost::tokenizer"]},{"Key":"yeah, boost::tokenizer","Fragments":["DTRT"]},{"Key":"boost::tokenizer DTRT","Fragments":["here."]},{"Key":"Looks pretty","Fragments":["good.","good.","good,"]},{"Key":"pretty good.","Fragments":["How","I"]},{"Key":"good. How","Fragments":["should"]},{"Key":"How should","Fragments":["space"]},{"Key":"should space","Fragments":["after"]},{"Key":"space after","Fragments":["the","that","a","an"]},{"Key":"question mark","Fragments":["be","as","at","is","(which","or","elegantly","(if"]},{"Key":"mark be","Fragments":["handled?"]},{"Key":"be handled?","Fragments":["This"]},{"Key":"handled? This","Fragments":["is"]},{"Key":"is arguably","Fragments":["open"]},{"Key":"arguably open","Fragments":["to"]},{"Key":"open to","Fragments":["interpretation","any"]},{"Key":"to interpretation","Fragments":["but"]},{"Key":"interpretation but","Fragments":["IMO"]},{"Key":"but IMO","Fragments":["it"]},{"Key":"IMO it","Fragments":["makes"]},{"Key":"makes sense","Fragments":["to","but","to","for","but"]},{"Key":"sense to","Fragments":["consider","pass","just","pass","have"]},{"Key":"consider that","Fragments":["a","a","those","pow(2,","this"]},{"Key":"that a","Fragments":["question","pattern","shout","shout","char","substring","text","string","programmer","`string`","step","class","name","class","size"]},{"Key":"This makes","Fragments":["pretty","pretty"]},{"Key":"makes pretty","Fragments":["heavy","heavy"]},{"Key":"pretty heavy","Fragments":["use","use"]},{"Key":"heavy use","Fragments":["of","of"]},{"Key":"of boost","Fragments":["for","for","and"]},{"Key":"boost for","Fragments":["a","a","trimming."]},{"Key":"simple program,","Fragments":["maybe","maybe"]},{"Key":"program, maybe","Fragments":["too","too"]},{"Key":"maybe too","Fragments":["much.","much."]},{"Key":"too much.","Fragments":["But","But"]},{"Key":"much. But","Fragments":["I","I"]},{"Key":"how short","Fragments":["it","it","and"]},{"Key":"short it","Fragments":["makes","makes"]},{"Key":" Elected","Fragments":["to","to"]},{"Key":"Elected to","Fragments":["break","break"]},{"Key":"to break","Fragments":["contains_alpha()","contains_alpha()","it"]},{"Key":"break contains_alpha()","Fragments":["into","into"]},{"Key":"contains_alpha() into","Fragments":["a","a"]},{"Key":"separate function","Fragments":["because","because","calls","that","so","you"]},{"Key":"function because","Fragments":["it","it","I","that's"]},{"Key":"the line","Fragments":["too","too"]},{"Key":"line too","Fragments":["long","long"]},{"Key":"too long","Fragments":["and","and","and"]},{"Key":"and \"contains_alpha\"","Fragments":["helps","helps"]},{"Key":"\"contains_alpha\" helps","Fragments":["indicate","indicate"]},{"Key":"helps indicate","Fragments":["what","what"]},{"Key":"indicate what","Fragments":["we're","we're"]},{"Key":"what we're","Fragments":["doing","doing"]},{"Key":"we're doing","Fragments":["there.","there."]},{"Key":"I figured","Fragments":["trimming","trimming","a","that","a","the"]},{"Key":"figured trimming","Fragments":["whitespace","whitespace"]},{"Key":"trimming whitespace","Fragments":["from","from"]},{"Key":"whitespace from","Fragments":["the","the","the"]},{"Key":"the ends","Fragments":["in","in"]},{"Key":"ends in","Fragments":["the","the"]},{"Key":"the beginning","Fragments":["would","would","and","and","of","I","of","and","of"]},{"Key":"beginning would","Fragments":["make","make"]},{"Key":"the rest","Fragments":["easier.","easier.","of","of","of","of","of","of"]},{"Key":" Would","Fragments":["be","be","it","storing","like"]},{"Key":"Would be","Fragments":["interested","interested"]},{"Key":"be interested","Fragments":["to","to","in","in","to","to","if"]},{"Key":"interested to","Fragments":["know","know","know.","see"]},{"Key":"know if","Fragments":["I","I","I'm","I'm","there","the","I’m","the","the","there","I"]},{"Key":"I missed","Fragments":["any","any","removing","the"]},{"Key":"missed any","Fragments":["edge","edge"]},{"Key":"any edge","Fragments":["cases.","cases."]},{"Key":" bob::hey","Fragments":["doesn't"]},{"Key":"bob::hey doesn't","Fragments":["need"]},{"Key":"a const.","Fragments":["Since","Thanks"]},{"Key":"const. Since","Fragments":["you"]},{"Key":"Since you","Fragments":["return","are","have","have","already","are"]},{"Key":"you return","Fragments":["the","a"]},{"Key":"a copy,","Fragments":["you"]},{"Key":"copy, you","Fragments":["don't"]},{"Key":"the const","Fragments":["qualifier.","change"]},{"Key":"const qualifier.","Fragments":["On"]},{"Key":"qualifier. On","Fragments":["the"]},{"Key":"On the","Fragments":["other","plus","other,","other","other","plus"]},{"Key":"other hand,","Fragments":["you","for","the"]},{"Key":"hand, you","Fragments":["should"]},{"Key":"should pass","Fragments":["as","it"]},{"Key":"pass as","Fragments":["argument","ref."]},{"Key":"as argument","Fragments":["a"]},{"Key":"argument a","Fragments":["const"]},{"Key":"a useless","Fragments":["copy."]},{"Key":" Iteration","Fragments":["2:","1:"]},{"Key":"Iteration 2:","Fragments":["added"]},{"Key":"2: added","Fragments":["contents"]},{"Key":"added contents","Fragments":["of"]},{"Key":"contents of","Fragments":["bob.h","this","```input```."]},{"Key":"of bob.h","Fragments":["since"]},{"Key":"bob.h since","Fragments":["the"]},{"Key":"the file","Fragments":["can't","and","it's"]},{"Key":"file can't","Fragments":["be"]},{"Key":"can't be","Fragments":["included","shouting","negative).","less","less"]},{"Key":"be included","Fragments":["separately","just"]},{"Key":"included separately","Fragments":["yet."]},{"Key":"Not sure","Fragments":["if","this","if","if","what","the","I'm","how","if"]},{"Key":"prefer my","Fragments":["original"]},{"Key":"my original","Fragments":["std::for_each","iteration","submission"]},{"Key":"original std::for_each","Fragments":["version"]},{"Key":"std::for_each version","Fragments":["or"]},{"Key":"version or","Fragments":["this"]},{"Key":"or this","Fragments":["std::transform"]},{"Key":"this std::transform","Fragments":["which"]},{"Key":"std::transform which","Fragments":["makes","I"]},{"Key":"which makes","Fragments":["sense","this","them"]},{"Key":"sense but","Fragments":["has","looks"]},{"Key":"but has","Fragments":["weird","a"]},{"Key":"has weird","Fragments":["syntax..."]},{"Key":"weird syntax...","Fragments":["maybe"]},{"Key":"syntax... maybe","Fragments":["ultimately"]},{"Key":"maybe ultimately","Fragments":["a"]},{"Key":"ultimately a","Fragments":["good"]},{"Key":"good old","Fragments":["for"]},{"Key":"old for","Fragments":["loop"]},{"Key":"loop would","Fragments":["be","have","perform","help"]},{"Key":" Inital","Fragments":["version"]},{"Key":"Inital version","Fragments":["was"]},{"Key":"version was","Fragments":["consisted"]},{"Key":"was consisted","Fragments":["of"]},{"Key":"consisted of","Fragments":["a"]},{"Key":"class, after","Fragments":["seeing"]},{"Key":"after seeing","Fragments":["other","some"]},{"Key":"seeing other","Fragments":["submissions"]},{"Key":"other submissions","Fragments":["I","`any_of`,","for","look"]},{"Key":"submissions I","Fragments":["switched"]},{"Key":"I switched","Fragments":["to"]},{"Key":"switched to","Fragments":["using"]},{"Key":"a namespace.","Fragments":["As","I"]},{"Key":"namespace. As","Fragments":["the"]},{"Key":"As the","Fragments":["task"]},{"Key":"task is","Fragments":["quite"]},{"Key":"is quite","Fragments":["simple","safe,"]},{"Key":"quite simple","Fragments":["i","and"]},{"Key":"simple i","Fragments":["just"]},{"Key":"i just","Fragments":["used"]},{"Key":"just used","Fragments":["one","a","as","by","static"]},{"Key":"used one","Fragments":["\"big\""]},{"Key":"one \"big\"","Fragments":["method"]},{"Key":"\"big\" method","Fragments":["instead"]},{"Key":"method instead","Fragments":["of"]},{"Key":"of splitting","Fragments":["it","up","up"]},{"Key":"splitting it","Fragments":["up."]},{"Key":"In retrospect,","Fragments":["maybe"]},{"Key":"retrospect, maybe","Fragments":["I"]},{"Key":"maybe I","Fragments":["should"]},{"Key":"should check","Fragments":["the","for","if","if","against"]},{"Key":"check the","Fragments":["question","case","map","value","return"]},{"Key":"question first","Fragments":["since"]},{"Key":"first since","Fragments":["its"]},{"Key":"since its","Fragments":["a","misuse"]},{"Key":"its a","Fragments":["lot"]},{"Key":"could put","Fragments":["`std::string"]},{"Key":"put `std::string","Fragments":["word"]},{"Key":"`std::string word","Fragments":["=","="]},{"Key":"= rit-\u003estr();`","Fragments":["and"]},{"Key":"rit-\u003estr();` and","Fragments":["`++rit;`"]},{"Key":"and `++rit;`","Fragments":["into"]},{"Key":"`++rit;` into","Fragments":["`std::string"]},{"Key":"into `std::string","Fragments":["word"]},{"Key":"= rit++-\u003estr();`","Fragments":["but"]},{"Key":"rit++-\u003estr();` but","Fragments":["that's"]},{"Key":"that's less","Fragments":["readable"]},{"Key":"less readable","Fragments":["in","and","than"]},{"Key":"readable in","Fragments":["my"]},{"Key":"The has_only_digits","Fragments":["is"]},{"Key":"has_only_digits is","Fragments":["kind"]},{"Key":"of inflexible.","Fragments":["What"]},{"Key":"inflexible. What","Fragments":["if"]},{"Key":"string contains","Fragments":["'%$#'?","letters,"]},{"Key":"not recommend","Fragments":["checking"]},{"Key":"recommend checking","Fragments":["for","out"]},{"Key":"checking for","Fragments":["\"HELL\"","whitespace","\"allSpace\"","a","the","each","if","that","alphanumeric","matches.","anagrams","silence","shouting.","the"]},{"Key":"for \"HELL\"","Fragments":["in"]},{"Key":"\"HELL\" in","Fragments":["the"]},{"Key":"string. Why","Fragments":["not","not"]},{"Key":"not check","Fragments":["for","for"]},{"Key":"all uppercase","Fragments":["letters?"]},{"Key":"uppercase letters?","Fragments":["That"]},{"Key":"letters? That","Fragments":["usually"]},{"Key":"That usually","Fragments":["means"]},{"Key":"usually means","Fragments":["yelling"]},{"Key":"means yelling","Fragments":["in"]},{"Key":"yelling in","Fragments":["text."]},{"Key":"The transform","Fragments":["way"]},{"Key":"transform way","Fragments":["is"]},{"Key":"way is","Fragments":["kind","much"]},{"Key":"of cool,","Fragments":["although"]},{"Key":"cool, although","Fragments":["it"]},{"Key":"although it","Fragments":["makes","is"]},{"Key":"few more","Fragments":["writes","suggestions"]},{"Key":"more writes","Fragments":["than"]},{"Key":"writes than","Fragments":["necessary."]},{"Key":"also check","Fragments":["for","``str2.length()``"]},{"Key":"end before","Fragments":["checking"]},{"Key":"before checking","Fragments":["the","for","for","for"]},{"Key":"checking the","Fragments":["?","type","edit","strings.","last","letter"]},{"Key":"the breakdown","Fragments":["into"]},{"Key":"breakdown into","Fragments":["multiple"]},{"Key":"into multiple","Fragments":["small"]},{"Key":"multiple small","Fragments":["functions."]},{"Key":"you taken","Fragments":["a"]},{"Key":"taken a","Fragments":["look"]},{"Key":"at [`find_first_of`](http://www.cplusplus.com/reference/string/string/find_first_of/)?","Fragments":["This"]},{"Key":"[`find_first_of`](http://www.cplusplus.com/reference/string/string/find_first_of/)? This","Fragments":["might"]},{"Key":"This might","Fragments":["make","also"]},{"Key":"might make","Fragments":["`isYell`","the","it","an","more"]},{"Key":"make `isYell`","Fragments":["and"]},{"Key":"`isYell` and","Fragments":["`isSilence`"]},{"Key":"I'm kind","Fragments":["of","of"]},{"Key":"of abusing","Fragments":["`std::mismatch`,"]},{"Key":"abusing `std::mismatch`,","Fragments":["using"]},{"Key":"`std::mismatch`, using","Fragments":["`std::for_each`"]},{"Key":"using `std::for_each`","Fragments":["and"]},{"Key":"`std::for_each` and","Fragments":["`boost::make_zip_iterator`"]},{"Key":"and `boost::make_zip_iterator`","Fragments":["is"]},{"Key":"`boost::make_zip_iterator` is","Fragments":["semantically"]},{"Key":"is semantically","Fragments":["more"]},{"Key":"semantically more","Fragments":["clear","\"spot"]},{"Key":"more clear","Fragments":["but","that","that"]},{"Key":"clear but","Fragments":["I"]},{"Key":"like it's","Fragments":["to","not"]},{"Key":"to such","Fragments":["a"]},{"Key":"a degree","Fragments":["that"]},{"Key":"degree that","Fragments":["it"]},{"Key":"it justifies","Fragments":["including"]},{"Key":"justifies including","Fragments":["boost"]},{"Key":"including boost","Fragments":["just"]},{"Key":"boost just","Fragments":["for"]},{"Key":"just for","Fragments":["that.","the","debugging","`min()`","faster","faster"]},{"Key":" edit:","Fragments":["nvm,","Oh!"]},{"Key":"edit: nvm,","Fragments":["just"]},{"Key":"nvm, just","Fragments":["saw"]},{"Key":"just saw","Fragments":["that"]},{"Key":"saw that","Fragments":["`boost::for_each`","both"]},{"Key":"that `boost::for_each`","Fragments":["can"]},{"Key":"`boost::for_each` can","Fragments":["take"]},{"Key":"can take","Fragments":["multiple","what"]},{"Key":"take multiple","Fragments":["ranges,"]},{"Key":"multiple ranges,","Fragments":["seem"]},{"Key":"ranges, seem","Fragments":["like"]},{"Key":"seem like","Fragments":["that's","range","a","a","it's"]},{"Key":"like that's","Fragments":["practically"]},{"Key":"that's practically","Fragments":["tailor"]},{"Key":"practically tailor","Fragments":["made"]},{"Key":"tailor made","Fragments":["for"]},{"Key":"made for","Fragments":["this,"]},{"Key":"for this,","Fragments":["but"]},{"Key":"this, but","Fragments":["I'm","wondering","in"]},{"Key":"I'm just","Fragments":["going","more"]},{"Key":"just going","Fragments":["to"]},{"Key":"to leave","Fragments":["it"]},{"Key":"leave it","Fragments":["as"]},{"Key":"it as","Fragments":["is.","I'm","a","two","a","a","(essentially)","all","well.","a","simple"]},{"Key":" Alrighty","Fragments":["then."]},{"Key":"The conversion","Fragments":["to","between"]},{"Key":"conversion to","Fragments":["string\u0026"]},{"Key":"to string\u0026","Fragments":["boggles"]},{"Key":"string\u0026 boggles","Fragments":["my"]},{"Key":"boggles my","Fragments":["mind"]},{"Key":"my mind","Fragments":["because","at"]},{"Key":"mind because","Fragments":["I"]},{"Key":"because I","Fragments":["could've","can't","can't","can't","am","had","am","know","saw","wanted","find","passed","wanted","thought"]},{"Key":"I could've","Fragments":["sworn","using"]},{"Key":"could've sworn","Fragments":["that"]},{"Key":"sworn that","Fragments":["I"]},{"Key":"I ran","Fragments":["into","it","it","into","into"]},{"Key":"ran into","Fragments":["this","non-alphabetical","this"]},{"Key":"into this","Fragments":["problem","simple","issue"]},{"Key":"problem a","Fragments":["long","lot."]},{"Key":"a long","Fragments":["time","time","time"]},{"Key":"long time","Fragments":["ago.","since","to"]},{"Key":"time ago.","Fragments":["But"]},{"Key":"ago. But","Fragments":["I"]},{"Key":"I tested","Fragments":["it"]},{"Key":"tested it","Fragments":["just"]},{"Key":"it just","Fragments":["now","once,","feel","seems","that","reads"]},{"Key":"just now","Fragments":["and"]},{"Key":"now and","Fragments":["it","wanted"]},{"Key":"it does","Fragments":["indeed","is","not,","not","seem","have","more","expose","work","get","not","and","not,"]},{"Key":"does indeed","Fragments":["convert"]},{"Key":"indeed convert","Fragments":["properly."]},{"Key":"convert properly.","Fragments":["So"]},{"Key":"properly. So","Fragments":["either"]},{"Key":"So either","Fragments":["my"]},{"Key":"either my","Fragments":["memory"]},{"Key":"my memory","Fragments":["is","serves"]},{"Key":"memory is","Fragments":["bad","allocated."]},{"Key":"is bad","Fragments":["or","but"]},{"Key":"bad or","Fragments":["it's"]},{"Key":"or it's","Fragments":["been"]},{"Key":"it's been","Fragments":["a","years"]},{"Key":"been a","Fragments":["relatively","long"]},{"Key":"a relatively","Fragments":["recent","large"]},{"Key":"relatively recent","Fragments":["addition"]},{"Key":"recent addition","Fragments":["to","to"]},{"Key":"addition to","Fragments":["Cpp","spaces","making","the"]},{"Key":"to Cpp","Fragments":["(e.g."]},{"Key":"Cpp (e.g.","Fragments":["'11"]},{"Key":"(e.g. '11","Fragments":["or"]},{"Key":"'11 or","Fragments":["'14)."]},{"Key":"A question","Fragments":["though:"]},{"Key":"question though:","Fragments":["what"]},{"Key":"though: what","Fragments":["was"]},{"Key":"what was","Fragments":["your","available"]},{"Key":"was your","Fragments":["motivation"]},{"Key":"your motivation","Fragments":["to"]},{"Key":"motivation to","Fragments":["change"]},{"Key":"to change","Fragments":["\"for","much","anything","the","those","your","every","this","the","line","my"]},{"Key":"change \"for","Fragments":["(char"]},{"Key":"\"for (char","Fragments":["ch"]},{"Key":"(char ch","Fragments":[":",":"]},{"Key":"ch :","Fragments":["str)\"","input)"]},{"Key":": str)\"","Fragments":["into"]},{"Key":"str)\" into","Fragments":["a"]},{"Key":"a std::for_each()","Fragments":["call"]},{"Key":"std::for_each() call","Fragments":["in"]},{"Key":"call in","Fragments":["GetCharMap?"]},{"Key":"guess it's","Fragments":["a","mostly","still"]},{"Key":"it's a","Fragments":["matter","question,","bit","shout","valid","requirement","prolonged","C","matter","little","question,","waste","lot"]},{"Key":"a matter","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"matter of","Fragments":["preference,","principle","taste","style","getting","style","readability,","peeling"]},{"Key":"of preference,","Fragments":["but"]},{"Key":"preference, but","Fragments":["I"]},{"Key":"I love","Fragments":["the","it.","the","the","usng","how"]},{"Key":"love the","Fragments":["for","simplicity","use","OOP"]},{"Key":"the for","Fragments":["loop","loop","loop","loop,","loop,","loop","loop","loop,","loop","loop","loop.","loop","loop.","loop"]},{"Key":"loop since","Fragments":["I"]},{"Key":"since I","Fragments":["don't","wrote","have","haven't","used","feel"]},{"Key":"to type","Fragments":["begin()"]},{"Key":"type begin()","Fragments":["and"]},{"Key":"begin() and","Fragments":["end()"]},{"Key":"and end()","Fragments":["every"]},{"Key":"end() every","Fragments":["damn"]},{"Key":"every damn","Fragments":["time."]},{"Key":"I actually","Fragments":["also","do","feel","agree,","designed","had","made","think"]},{"Key":"actually also","Fragments":["like"]},{"Key":"loop alot","Fragments":["more"]},{"Key":"alot more","Fragments":["than"]},{"Key":"than for_each.","Fragments":["I"]},{"Key":"for_each. I","Fragments":["just"]},{"Key":"just wanted","Fragments":["to"]},{"Key":"wanted to","Fragments":["try","dive","use","use","keep","try","learn","add","avoid","keep","preallocate","try","give","know","reuse","submit","get","see"]},{"Key":"to try","Fragments":["this","using","it.","that","and"]},{"Key":"try this","Fragments":["new","tutorial,"]},{"Key":"this new","Fragments":["way","word"]},{"Key":"new way","Fragments":["of"]},{"Key":"of doing","Fragments":["things","it,","it","that.","the","this","this"]},{"Key":"doing things","Fragments":["with"]},{"Key":"things with","Fragments":["iterators"]},{"Key":"with iterators","Fragments":["and"]},{"Key":"iterators and","Fragments":["transform/for_each.","algorithm","a","went"]},{"Key":"could not","Fragments":["imagine","decide","pass"]},{"Key":"not imagine","Fragments":["using"]},{"Key":"imagine using","Fragments":["much"]},{"Key":"using much","Fragments":["of"]},{"Key":"of \"algorithm\"","Fragments":["in","is"]},{"Key":"\"algorithm\" in","Fragments":["my"]},{"Key":"own projects.","Fragments":["But"]},{"Key":"projects. But","Fragments":["I"]},{"Key":"know how","Fragments":["spread","to","std::transform","doing","I"]},{"Key":"how spread","Fragments":["the"]},{"Key":"spread the","Fragments":["use"]},{"Key":"the use","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"\"algorithm\" is","Fragments":["in"]},{"Key":"in professional","Fragments":["use?"]},{"Key":"(I pushed","Fragments":["a"]},{"Key":"pushed a","Fragments":["third"]},{"Key":"a third","Fragments":["submission"]},{"Key":"third submission","Fragments":["with"]},{"Key":"submission with","Fragments":["header"]},{"Key":"with header","Fragments":["guards"]},{"Key":"header guards","Fragments":["and"]},{"Key":"guards and","Fragments":["cleaner"]},{"Key":"and cleaner","Fragments":["isSilence)"]},{"Key":"not really","Fragments":["sure","the","sure","necessary","sure"]},{"Key":"really sure","Fragments":["how","what","how"]},{"Key":"sure how","Fragments":["`find_first_of`","familiar","to","domain_error","I"]},{"Key":"how `find_first_of`","Fragments":["could"]},{"Key":"`find_first_of` could","Fragments":["help"]},{"Key":"could help","Fragments":["me"]},{"Key":"help me","Fragments":["here.","in"]},{"Key":"The isSilence","Fragments":["could"]},{"Key":"isSilence could","Fragments":["be","have"]},{"Key":"be rewritten","Fragments":["as"]},{"Key":"return query.find_first_not_of(","Fragments":["\""]},{"Key":"query.find_first_not_of( \"","Fragments":["\\t\\n\""]},{"Key":"\" \\t\\n\"","Fragments":[")"]},{"Key":"\\t\\n\" )","Fragments":["=="]},{"Key":") ==","Fragments":["std::string::npos;","std::string::npos;"]},{"Key":"which has","Fragments":["some","a","a","much","the","one"]},{"Key":"the simplest","Fragments":["way","solution"]},{"Key":"simplest way","Fragments":["to"]},{"Key":"use this","Fragments":["set","short","header.","handrolled","to","code"]},{"Key":"this set","Fragments":["of"]},{"Key":"set of","Fragments":["functions","functions,","Boolean"]},{"Key":"with `isYell`","Fragments":["pretty"]},{"Key":"`isYell` pretty","Fragments":["much"]},{"Key":"much turned","Fragments":["out"]},{"Key":"turned out","Fragments":["like","it"]},{"Key":"out like","Fragments":["this:"]},{"Key":"const char*","Fragments":["lower","upper","and"]},{"Key":"char* lower","Fragments":["="]},{"Key":"lower =","Fragments":["\"abcdefghijklmnopqrstuvwxyz\";"]},{"Key":"char* upper","Fragments":["="]},{"Key":"return query.find_first_of(","Fragments":["upper"]},{"Key":"query.find_first_of( upper","Fragments":[")"]},{"Key":"upper )","Fragments":["!="]},{"Key":") !=","Fragments":["std::string::npos"]},{"Key":"!= std::string::npos","Fragments":["\u0026\u0026"]},{"Key":" query.find_first_of(","Fragments":["lower"]},{"Key":"query.find_first_of( lower","Fragments":[")"]},{"Key":"lower )","Fragments":["=="]},{"Key":"The issue","Fragments":["is"]},{"Key":"issue is","Fragments":["that","that","that","that"]},{"Key":"to ascertain","Fragments":["the"]},{"Key":"ascertain the","Fragments":["existence"]},{"Key":"the existence","Fragments":["of","of"]},{"Key":"existence of","Fragments":["at","a"]},{"Key":"of at","Fragments":["least"]},{"Key":"one upper-case","Fragments":["letter"]},{"Key":"upper-case letter","Fragments":["as"]},{"Key":"letter as","Fragments":["well"]},{"Key":"as making","Fragments":["sure","functions"]},{"Key":"making sure","Fragments":["there","the"]},{"Key":"sure there","Fragments":["are","must","is"]},{"Key":"lower-case letters.","Fragments":["So",":)"]},{"Key":"letters. So","Fragments":["I"]},{"Key":"need two","Fragments":["separate"]},{"Key":"two separate","Fragments":["function"]},{"Key":"function calls","Fragments":["one","or","like","from"]},{"Key":"calls one","Fragments":["way"]},{"Key":"one way","Fragments":["or","to"]},{"Key":"way or","Fragments":["another"]},{"Key":"or another","Fragments":["(unless"]},{"Key":"another (unless","Fragments":["I"]},{"Key":"(unless I","Fragments":["write"]},{"Key":"I write","Fragments":["the"]},{"Key":"write the","Fragments":["loop","\"?","function."]},{"Key":"loop myself).","Fragments":["And"]},{"Key":"myself). And","Fragments":["with"]},{"Key":"And with","Fragments":["`find_first_of`I","allCaps,"]},{"Key":"with `find_first_of`I","Fragments":["just"]},{"Key":"`find_first_of`I just","Fragments":["find"]},{"Key":"just find","Fragments":["myself"]},{"Key":"find myself","Fragments":["explicitely"]},{"Key":"myself explicitely","Fragments":["writing"]},{"Key":"explicitely writing","Fragments":["out"]},{"Key":"writing out","Fragments":["what"]},{"Key":"what `islower`","Fragments":["and"]},{"Key":"`islower` and","Fragments":["`isupper`"]},{"Key":"and `isupper`","Fragments":["already"]},{"Key":"`isupper` already","Fragments":["do"]},{"Key":"already do","Fragments":["for"]},{"Key":" By","Fragments":["the","the"]},{"Key":"By the","Fragments":["way,","way,"]},{"Key":"the way,","Fragments":["how","is"]},{"Key":"way, how","Fragments":["can"]},{"Key":"how can","Fragments":["I"]},{"Key":"can I","Fragments":["put","use","use"]},{"Key":"put a","Fragments":["link","block"]},{"Key":"a link","Fragments":["in","about","to"]},{"Key":"link in","Fragments":["`this"]},{"Key":"in `this","Fragments":["kind"]},{"Key":"`this kind","Fragments":["of"]},{"Key":"of text`","Fragments":["like"]},{"Key":"text` like","Fragments":["you've"]},{"Key":"like you've","Fragments":["done"]},{"Key":"you've done","Fragments":["with","and"]},{"Key":"done with","Fragments":["the","this","regex"]},{"Key":"the `find_first_of`","Fragments":["link"]},{"Key":"`find_first_of` link","Fragments":["to"]},{"Key":"link to","Fragments":["cplusplus?","for"]},{"Key":"to cplusplus?","Fragments":["`[the"]},{"Key":"cplusplus? `[the","Fragments":["usual"]},{"Key":"`[the usual","Fragments":["way](doesn't"]},{"Key":"usual way](doesn't","Fragments":["work)`."]},{"Key":"1. Make","Fragments":["text"]},{"Key":"Make text","Fragments":["contain"]},{"Key":"text contain","Fragments":["lowered"]},{"Key":"contain lowered","Fragments":["characters"]},{"Key":" 2.","Fragments":["Apply","to","I","Everything","Understand","compiler","initialize","The","I"]},{"Key":"2. Apply","Fragments":["regular"]},{"Key":"Apply regular","Fragments":["expression"]},{"Key":" 3.","Fragments":["Find","There's","I","I"]},{"Key":"3. Find","Fragments":["word"]},{"Key":"Find word","Fragments":["in"]},{"Key":"word in","Fragments":["map","the","the"]},{"Key":"in map","Fragments":["and","already?"]},{"Key":"- increment","Fragments":["its"]},{"Key":"increment its","Fragments":["counter","count."]},{"Key":"its counter","Fragments":["by"]},{"Key":"counter by","Fragments":["1"]},{"Key":"by 1","Fragments":["if"]},{"Key":"1 if","Fragments":["key","it's","the"]},{"Key":"if key","Fragments":["already"]},{"Key":"key already","Fragments":["exist","exists."]},{"Key":"- or","Fragments":["insert"]},{"Key":"or insert","Fragments":["this"]},{"Key":"insert this","Fragments":["new"]},{"Key":"new word","Fragments":["with"]},{"Key":"word with","Fragments":["paired","each","whitespace"]},{"Key":"with paired","Fragments":["value"]},{"Key":"paired value","Fragments":["of"]},{"Key":"of 1","Fragments":["instead."]},{"Key":" 4.","Fragments":["Done.","Operator[]"]},{"Key":"tell you","Fragments":["much"]},{"Key":"you much","Fragments":["about"]},{"Key":"much about","Fragments":["its","naming"]},{"Key":"about its","Fragments":["professional","functionality."]},{"Key":"its professional","Fragments":["use"]},{"Key":"professional use","Fragments":["since"]},{"Key":"use since","Fragments":["most"]},{"Key":"since most","Fragments":["large"]},{"Key":"most large","Fragments":["code"]},{"Key":"large code","Fragments":["bases"]},{"Key":"code bases","Fragments":["I've","were"]},{"Key":"bases I've","Fragments":["looked"]},{"Key":"I've looked","Fragments":["at"]},{"Key":"looked at","Fragments":["are","whether","the","it).","some","descending"]},{"Key":"at are","Fragments":["either"]},{"Key":"are either","Fragments":["mostly"]},{"Key":"either mostly","Fragments":["or"]},{"Key":"mostly or","Fragments":["completely"]},{"Key":"or completely","Fragments":["in"]},{"Key":"completely in","Fragments":["C"]},{"Key":"in C","Fragments":["or","before","Parts"]},{"Key":"C or","Fragments":["do"]},{"Key":"or do","Fragments":["not"]},{"Key":"do not","Fragments":["use","use","represent","check","improve","know","modify","see","use","need","even"]},{"Key":"use C++'s","Fragments":["standard","regex"]},{"Key":"C++'s standard","Fragments":["library."]},{"Key":"But this","Fragments":["isn't","is","is"]},{"Key":"isn't necessarily","Fragments":["an"]},{"Key":"necessarily an","Fragments":["accurate"]},{"Key":"an accurate","Fragments":["depiction"]},{"Key":"accurate depiction","Fragments":["is"]},{"Key":"depiction is","Fragments":["reality."]},{"Key":"is reality.","Fragments":["Most"]},{"Key":"reality. Most","Fragments":["of"]},{"Key":"Most of","Fragments":["these","my"]},{"Key":"these code","Fragments":["bases"]},{"Key":"bases were","Fragments":["started"]},{"Key":"were started","Fragments":["before"]},{"Key":"started before","Fragments":["the"]},{"Key":"before the","Fragments":["advent","string.","loop","question","for","loop.","loop.","body","new"]},{"Key":"the advent","Fragments":["of"]},{"Key":"advent of","Fragments":["C++11"]},{"Key":"of C++11","Fragments":["and","syntax."]},{"Key":"more modern","Fragments":["compilers."]},{"Key":"be highly","Fragments":["appreciated"]},{"Key":"highly appreciated","Fragments":["in"]},{"Key":"appreciated in","Fragments":["academic"]},{"Key":"in academic","Fragments":["circles."]},{"Key":"academic circles.","Fragments":["For"]},{"Key":"circles. For","Fragments":["example,"]},{"Key":"example, you","Fragments":["have"]},{"Key":"have authors","Fragments":["like"]},{"Key":"authors like","Fragments":["Josuttis"]},{"Key":"like Josuttis","Fragments":["or"]},{"Key":"Josuttis or","Fragments":["Meyers"]},{"Key":"or Meyers","Fragments":["writing"]},{"Key":"Meyers writing","Fragments":["whole"]},{"Key":"writing whole","Fragments":["books"]},{"Key":"whole books","Fragments":["about"]},{"Key":"books about","Fragments":["the"]},{"Key":"the STL","Fragments":["and","since","is"]},{"Key":"STL and","Fragments":["make","one"]},{"Key":"and make","Fragments":["great","some","it","it"]},{"Key":"make great","Fragments":["use"]},{"Key":"great use","Fragments":["of"]},{"Key":"of its","Fragments":["algorithm","length","translation","string","domain."]},{"Key":"its algorithm","Fragments":["part."]},{"Key":"algorithm part.","Fragments":["[Here](http://www.josuttis.com/libbook/algolist.pdf)"]},{"Key":"part. [Here](http://www.josuttis.com/libbook/algolist.pdf)","Fragments":["is"]},{"Key":"[Here](http://www.josuttis.com/libbook/algolist.pdf) is","Fragments":["Meyer's"]},{"Key":"is Meyer's","Fragments":["reference"]},{"Key":"Meyer's reference","Fragments":["card"]},{"Key":"reference card","Fragments":["for"]},{"Key":"card for","Fragments":["algorithm,"]},{"Key":"for algorithm,","Fragments":["by"]},{"Key":"algorithm, by","Fragments":["the"]},{"Key":" Personally,","Fragments":["I","I"]},{"Key":"Personally, I","Fragments":["love","wouldn't"]},{"Key":"love it.","Fragments":["I've"]},{"Key":"it. I've","Fragments":["revisited"]},{"Key":"I've revisited","Fragments":["some"]},{"Key":"revisited some","Fragments":["older"]},{"Key":"some older","Fragments":["code"]},{"Key":"older code","Fragments":["and"]},{"Key":"code and","Fragments":["looked","no","return","still","testing","not","giving","forgot","the"]},{"Key":"and looked","Fragments":["for"]},{"Key":"looked for","Fragments":["places"]},{"Key":"for places","Fragments":["to"]},{"Key":"places to","Fragments":["replace"]},{"Key":"to replace","Fragments":["my","```boost::algorithm::ends_with(str2,","some","namespaces.\""]},{"Key":"replace my","Fragments":["handwritten"]},{"Key":"my handwritten","Fragments":["code","stuff"]},{"Key":"handwritten code","Fragments":["with"]},{"Key":"code with","Fragments":["algorithm","this.","this.","and","that"]},{"Key":"with algorithm","Fragments":["calls."]},{"Key":"algorithm calls.","Fragments":["They're"]},{"Key":"calls. They're","Fragments":["usually"]},{"Key":"They're usually","Fragments":["faster,"]},{"Key":"usually faster,","Fragments":["smaller"]},{"Key":"faster, smaller","Fragments":["and"]},{"Key":"smaller and","Fragments":["more","more"]},{"Key":"more concise.","Fragments":["And","Getting","Can"]},{"Key":"concise. And","Fragments":["they're"]},{"Key":"And they're","Fragments":["pretty"]},{"Key":"they're pretty","Fragments":["much"]},{"Key":"much guarenteed","Fragments":["to"]},{"Key":"guarenteed to","Fragments":["be"]},{"Key":"be free","Fragments":["of"]},{"Key":"free of","Fragments":["bugs","heap"]},{"Key":"of bugs","Fragments":["-"]},{"Key":"bugs -","Fragments":["unless"]},{"Key":"- unless","Fragments":["my"]},{"Key":"unless my","Fragments":["handwritten"]},{"Key":"handwritten stuff","Fragments":[":)"]},{"Key":"I'm only","Fragments":["learning"]},{"Key":"only learning","Fragments":["the"]},{"Key":"learning the","Fragments":["ways"]},{"Key":"the ways","Fragments":["of","you"]},{"Key":"ways of","Fragments":["the","denoting","checking"]},{"Key":"the algorithms","Fragments":["myself.","are","offered"]},{"Key":"algorithms myself.","Fragments":["[Here](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1)"]},{"Key":"myself. [Here](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1)","Fragments":["is"]},{"Key":"[Here](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1) is","Fragments":["my"]},{"Key":"my implementation","Fragments":["of"]},{"Key":"the Bob","Fragments":["exercise,","question,","class."]},{"Key":"Bob exercise,","Fragments":["I"]},{"Key":"exercise, I","Fragments":["love","also"]},{"Key":"the simplicity","Fragments":["and","of"]},{"Key":"simplicity and","Fragments":["verbosity"]},{"Key":"and verbosity","Fragments":["of"]},{"Key":"verbosity of","Fragments":["it.","the"]},{"Key":"it. A","Fragments":["line"]},{"Key":"A line","Fragments":["such"]},{"Key":"line such","Fragments":["as"]},{"Key":"as `any_of(str.begin(),","Fragments":["str.end(),"]},{"Key":"`any_of(str.begin(), str.end(),","Fragments":["isupper)`"]},{"Key":"str.end(), isupper)`","Fragments":["immediately"]},{"Key":"isupper)` immediately","Fragments":["gives"]},{"Key":"immediately gives","Fragments":["you"]},{"Key":"gives you","Fragments":["all"]},{"Key":"you all","Fragments":["the","did"]},{"Key":"necessary information","Fragments":["to"]},{"Key":"information to","Fragments":["know"]},{"Key":"know what","Fragments":["it","the","you","that","you","kind"]},{"Key":" Almost..","Fragments":["you"]},{"Key":"Almost.. you","Fragments":["forgot"]},{"Key":"you forgot","Fragments":["the"]},{"Key":"forgot the","Fragments":["\u0026.","old,"]},{"Key":" it","Fragments":["should","would","looks"]},{"Key":"means you","Fragments":["are","gain","will"]},{"Key":"passing str","Fragments":["by"]},{"Key":"str by","Fragments":["reference"]},{"Key":"reference (so,","Fragments":["no"]},{"Key":"(so, no","Fragments":["copy),"]},{"Key":"no copy),","Fragments":["but"]},{"Key":"copy), but","Fragments":["its"]},{"Key":"but its","Fragments":["content","also"]},{"Key":"its content","Fragments":["cannot"]},{"Key":"content cannot","Fragments":["be"]},{"Key":"cannot be","Fragments":["modified","names","less","less"]},{"Key":" @julie:","Fragments":["Thanks!"]},{"Key":"@julie: Thanks!","Fragments":["I"]},{"Key":"Thanks! I","Fragments":["agree"]},{"Key":"agree that","Fragments":["checking","well","it's","the","fro","for","the","submitting","snprintf","there"]},{"Key":"that checking","Fragments":["for"]},{"Key":"for whitespace","Fragments":["at","after","and"]},{"Key":"whitespace at","Fragments":["the"]},{"Key":"end would","Fragments":["have","probably"]},{"Key":"have been","Fragments":["better","so","explicitly","apart","left","implemented.","easier","found,","enlightening.","more","made.","possible","using.","better","coded","tried","more","cool."]},{"Key":"been better","Fragments":["-","to"]},{"Key":"better -","Fragments":["I","this"]},{"Key":"- I","Fragments":["only","guess","use","do","think","sugest","made","used"]},{"Key":"only went","Fragments":["as"]},{"Key":"went as","Fragments":["far"]},{"Key":"as far","Fragments":["as"]},{"Key":"far as","Fragments":["required","the"]},{"Key":"as required","Fragments":["to"]},{"Key":"think regex","Fragments":["is"]},{"Key":"regex is","Fragments":["an","really","overkill","cheating","kind","a","right,"]},{"Key":"overkill here.","Fragments":["It"]},{"Key":"here. It","Fragments":["might","looks","only"]},{"Key":"It might","Fragments":["work","make","need"]},{"Key":"might work","Fragments":["but","(I"]},{"Key":"work but","Fragments":["it"]},{"Key":"it certainly","Fragments":["could"]},{"Key":"certainly could","Fragments":["be"]},{"Key":"Good call","Fragments":["on","on"]},{"Key":"call on","Fragments":["the","the","lines"]},{"Key":"the trailing","Fragments":["space."]},{"Key":"trailing space.","Fragments":["This"]},{"Key":"space. This","Fragments":["actually"]},{"Key":"This actually","Fragments":["fails"]},{"Key":"actually fails","Fragments":["most"]},{"Key":"fails most","Fragments":["of"]},{"Key":"cases in","Fragments":["retrospect;"]},{"Key":"in retrospect;","Fragments":["I"]},{"Key":"retrospect; I","Fragments":["goofed"]},{"Key":"I goofed","Fragments":["up"]},{"Key":"goofed up","Fragments":["in"]},{"Key":"up in","Fragments":["re-enabling","a","to","the"]},{"Key":"in re-enabling","Fragments":["the"]},{"Key":"re-enabling the","Fragments":["full"]},{"Key":"the full","Fragments":["suite.","source","text."]},{"Key":"full suite.","Fragments":["Will"]},{"Key":"suite. Will","Fragments":["be"]},{"Key":"Will be","Fragments":["starting"]},{"Key":"be starting","Fragments":["over"]},{"Key":"starting over","Fragments":["more"]},{"Key":"over more","Fragments":["or","lines."]},{"Key":"more or","Fragments":["less.","less"]},{"Key":"One small","Fragments":["thing:"]},{"Key":"small thing:","Fragments":["I"]},{"Key":"thing: I","Fragments":["would"]},{"Key":"would recommend","Fragments":["using"]},{"Key":"recommend using","Fragments":["nonmember"]},{"Key":"using nonmember","Fragments":["begin/end"]},{"Key":"nonmember begin/end","Fragments":["instead."]},{"Key":"begin/end instead.","Fragments":["It"]},{"Key":"instead. It","Fragments":["works"]},{"Key":"It works","Fragments":["with"]},{"Key":"works with","Fragments":["many"]},{"Key":"with many","Fragments":["more","people"]},{"Key":"many more","Fragments":["types"]},{"Key":"more types","Fragments":["and"]},{"Key":"types and","Fragments":["its"]},{"Key":"and its","Fragments":["good","calls"]},{"Key":"its good","Fragments":["to"]},{"Key":"good to","Fragments":["get","check","hear","see","me,"]},{"Key":"get in","Fragments":["the","the"]},{"Key":"the habit,","Fragments":["especially"]},{"Key":"habit, especially","Fragments":["since"]},{"Key":"especially since","Fragments":["it","there","this","If"]},{"Key":"since it","Fragments":["is","only","has","really","will","spreads","is","uses","is","has"]},{"Key":"more flexible","Fragments":["since"]},{"Key":"flexible since","Fragments":["you"]},{"Key":"can implement","Fragments":["begin/end"]},{"Key":"implement begin/end","Fragments":["for"]},{"Key":"begin/end for","Fragments":["any"]},{"Key":"for any","Fragments":["type","imaginable","further","of","lower","character","conditions"]},{"Key":"any type","Fragments":["without"]},{"Key":"type without","Fragments":["touching"]},{"Key":"without touching","Fragments":["the"]},{"Key":"touching the","Fragments":["actual","test"]},{"Key":"Also, it","Fragments":["might"]},{"Key":"be good","Fragments":["to",";-)","practice"]},{"Key":"where there","Fragments":["is","are","aren't"]},{"Key":"is whitespace","Fragments":["after"]},{"Key":"whitespace after","Fragments":["the","the","the"]},{"Key":" Complete","Fragments":["rewrite","apart"]},{"Key":"Complete rewrite","Fragments":["of"]},{"Key":"rewrite of","Fragments":["the"]},{"Key":"previous attempt.","Fragments":["Less"]},{"Key":"attempt. Less","Fragments":["succinct"]},{"Key":"Less succinct","Fragments":["and"]},{"Key":"succinct and","Fragments":["elegant,","works.","gets"]},{"Key":"and elegant,","Fragments":["perhaps,"]},{"Key":"elegant, perhaps,","Fragments":["but"]},{"Key":"perhaps, but","Fragments":["the"]},{"Key":"the concept","Fragments":["now"]},{"Key":"concept now","Fragments":["is"]},{"Key":"now is","Fragments":["to","branch"]},{"Key":"to build","Fragments":["a","either","objects,"]},{"Key":"build a","Fragments":["state","similar"]},{"Key":"a state","Fragments":["machine"]},{"Key":"state machine","Fragments":["and"]},{"Key":"machine and","Fragments":["treat"]},{"Key":"and treat","Fragments":["Bob"]},{"Key":"treat Bob","Fragments":["as"]},{"Key":"Bob as","Fragments":["a"]},{"Key":"a language","Fragments":["to"]},{"Key":"language to","Fragments":["parse,"]},{"Key":"to parse,","Fragments":["not"]},{"Key":"parse, not","Fragments":["as"]},{"Key":"not as","Fragments":["a","\"C++-esque\"","efficient"]},{"Key":"a trivial","Fragments":["coding","task,"]},{"Key":"trivial coding","Fragments":["exercise."]},{"Key":"coding exercise.","Fragments":["See"]},{"Key":"exercise. See","Fragments":["several"]},{"Key":"See several","Fragments":["dumb"]},{"Key":"several dumb","Fragments":["things"]},{"Key":"dumb things","Fragments":["now,"]},{"Key":"things now,","Fragments":["even"]},{"Key":"now, even","Fragments":["though"]},{"Key":"this \"works.\"","Fragments":["Will"]},{"Key":"\"works.\" Will","Fragments":["have"]},{"Key":"Will have","Fragments":["a"]},{"Key":"a revised","Fragments":["version"]},{"Key":"revised version","Fragments":["shortly."]},{"Key":" Same","Fragments":["as","for"]},{"Key":"Same as","Fragments":["last"]},{"Key":"as last","Fragments":["approach,"]},{"Key":"last approach,","Fragments":["without"]},{"Key":"approach, without","Fragments":["the"]},{"Key":"the redundancy.","Fragments":["Again,"]},{"Key":"redundancy. Again,","Fragments":["basic"]},{"Key":"Again, basic","Fragments":["idea"]},{"Key":"basic idea","Fragments":["is"]},{"Key":"idea is","Fragments":["to","to","use","that"]},{"Key":"to treat","Fragments":["this","functions","```input```"]},{"Key":"treat this","Fragments":["as"]},{"Key":"an FSM/language","Fragments":["instead"]},{"Key":"FSM/language instead","Fragments":["of"]},{"Key":"of trying","Fragments":["to"]},{"Key":"be succinct/clever.","Fragments":["Has"]},{"Key":"succinct/clever. Has","Fragments":["the"]},{"Key":"Has the","Fragments":["downside"]},{"Key":"the downside","Fragments":["of"]},{"Key":"downside of","Fragments":["potentially"]},{"Key":"of potentially","Fragments":["re-assigning"]},{"Key":"potentially re-assigning","Fragments":["the"]},{"Key":"re-assigning the","Fragments":["identical"]},{"Key":"the identical","Fragments":["state,"]},{"Key":"identical state,","Fragments":["but"]},{"Key":"state, but","Fragments":["we're"]},{"Key":"but we're","Fragments":["not"]},{"Key":"not talking","Fragments":["about"]},{"Key":"about a","Fragments":["material","case","better","potentially","direct"]},{"Key":"a material","Fragments":["about"]},{"Key":"material about","Fragments":["of"]},{"Key":"about of","Fragments":["overhead"]},{"Key":"overhead here,","Fragments":["and"]},{"Key":"here, and","Fragments":["I"]},{"Key":"think keeping","Fragments":["the","the"]},{"Key":"code simpler","Fragments":["is"]},{"Key":"simpler is","Fragments":["better"]},{"Key":"better than","Fragments":["trying","passing","the","my","a","throwing","map","the"]},{"Key":"than trying","Fragments":["to"]},{"Key":"to optimize","Fragments":["away","things","everyting."]},{"Key":"optimize away","Fragments":["a"]},{"Key":"away a","Fragments":["redundant"]},{"Key":"a redundant","Fragments":["assignment."]},{"Key":" Suppose","Fragments":["I"]},{"Key":"Suppose I","Fragments":["could"]},{"Key":"use an","Fragments":["unordered_map","auto","`istringstream`","unordered_map","if-elseif-else","enum","`unordered_map`","increment","anonymous","iterator","unsigned","unsigned","unsigned","unsigned","unsigned"]},{"Key":"an unordered_map","Fragments":["here","because"]},{"Key":"unordered_map here","Fragments":["instead,"]},{"Key":"here instead,","Fragments":["if"]},{"Key":"instead, if","Fragments":["need"]},{"Key":"if need","Fragments":["be."]},{"Key":" Added","Fragments":["boost::trim(words)","missing","the","a","two"]},{"Key":"Added boost::trim(words)","Fragments":["to"]},{"Key":"boost::trim(words) to","Fragments":["remove"]},{"Key":"remove trailing","Fragments":["white"]},{"Key":"trailing white","Fragments":["spaces","space","space"]},{"Key":"spaces and","Fragments":["a","newlines,","then"]},{"Key":"a check","Fragments":["on","_if","to","for","for"]},{"Key":"check on","Fragments":["empty"]},{"Key":"on empty","Fragments":["string.","strings.\"","string\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e","string.","string","string."]},{"Key":"I'd prefer","Fragments":["to","prefix"]},{"Key":"prefer to","Fragments":["remove","do","include","use","see"]},{"Key":"the recursion","Fragments":["though.","seems"]},{"Key":"input is","Fragments":["a","not","yelled","a","\"\".","not","empty","a"]},{"Key":"a char*,","Fragments":["I"]},{"Key":"char*, I","Fragments":["used"]},{"Key":"used char","Fragments":["array"]},{"Key":"char array","Fragments":["based"]},{"Key":"array based","Fragments":["functions"]},{"Key":"based functions","Fragments":["to"]},{"Key":"to classify","Fragments":["the"]},{"Key":"classify the","Fragments":["input."]},{"Key":"a switch","Fragments":["statement","statement","statement","statement","between"]},{"Key":"statement to","Fragments":["make","have","increase"]},{"Key":"make a","Fragments":["first","copy","local","working","copy","`createCharCountMap`"]},{"Key":"first pass","Fragments":["at"]},{"Key":"pass at","Fragments":["the"]},{"Key":"the input,","Fragments":["broadly","did","did"]},{"Key":"input, broadly","Fragments":["categorizing"]},{"Key":"broadly categorizing","Fragments":["questions,"]},{"Key":"categorizing questions,","Fragments":["yelled"]},{"Key":"questions, yelled","Fragments":["statements,"]},{"Key":"yelled statements,","Fragments":["and"]},{"Key":"statements, and","Fragments":["no"]},{"Key":"no input","Fragments":["by"]},{"Key":"input by","Fragments":["looking","value","reference."]},{"Key":"character in","Fragments":["the","both","the","a"]},{"Key":"the second","Fragments":["pass,","note","loop.","iteration!","version.","approach","iteration."]},{"Key":"second pass,","Fragments":["I"]},{"Key":"pass, I","Fragments":["looked"]},{"Key":"I looked","Fragments":["at","at","at","through"]},{"Key":"at whether","Fragments":["the"]},{"Key":"message has","Fragments":["mostly"]},{"Key":"has mostly","Fragments":["capital"]},{"Key":"mostly capital","Fragments":["letters,"]},{"Key":"capital letters,","Fragments":["which"]},{"Key":"letters, which","Fragments":["would"]},{"Key":"which would","Fragments":["seem","leave","also","increase","be","match","indicate"]},{"Key":"would seem","Fragments":["to"]},{"Key":"to indicate","Fragments":["a","when","the"]},{"Key":"indicate a","Fragments":["yelled","`shout'."]},{"Key":"a yelled","Fragments":["statement,"]},{"Key":"yelled statement,","Fragments":["or"]},{"Key":"statement, or","Fragments":["whether"]},{"Key":"or whether","Fragments":["the"]},{"Key":"is all","Fragments":["spaces.","capital","that","whitespace","upper"]},{"Key":"all spaces.","Fragments":["I"]},{"Key":"spaces. I","Fragments":["then"]},{"Key":"I then","Fragments":["checked","decided"]},{"Key":"then checked","Fragments":["for","for"]},{"Key":"checked for","Fragments":["whether","emptyness","emptyness","first,"]},{"Key":"for whether","Fragments":["the"]},{"Key":"message starts","Fragments":["with"]},{"Key":"starts with","Fragments":["\"Let's\""]},{"Key":"with \"Let's\"","Fragments":["and"]},{"Key":"\"Let's\" and","Fragments":["take"]},{"Key":"and take","Fragments":["this"]},{"Key":"take this","Fragments":["to"]},{"Key":"this to","Fragments":["mean","simplify","be","me?","work.","```strand2.length()","determine","be","work"]},{"Key":"to mean","Fragments":["a"]},{"Key":"mean a","Fragments":["suggestion,"]},{"Key":"a suggestion,","Fragments":["even"]},{"Key":"suggestion, even","Fragments":["if"]},{"Key":"it contradicts","Fragments":["the"]},{"Key":"contradicts the","Fragments":["previous"]},{"Key":"sure this","Fragments":["could"]},{"Key":"made much","Fragments":["simpler."]},{"Key":"much simpler.","Fragments":["Could","check"]},{"Key":"simpler. Could","Fragments":["try"]},{"Key":"Could try","Fragments":["to"]},{"Key":"to transform/accumulate","Fragments":["but"]},{"Key":"transform/accumulate but","Fragments":["that"]},{"Key":"but that","Fragments":["seems","was","is","really","kind","would","seemed","introduces","is","seemed","quickly","would"]},{"Key":"that seems","Fragments":["sort","more"]},{"Key":"to separate","Fragments":["the","control","implementation","functions.","the"]},{"Key":"separate the","Fragments":["header","final","bool"]},{"Key":"header and","Fragments":["implementation","body."]},{"Key":"and implementation","Fragments":["for"]},{"Key":"implementation for","Fragments":["this.","the"]},{"Key":"for this.","Fragments":["Otherwise"]},{"Key":"this. Otherwise","Fragments":["I'm"]},{"Key":"Otherwise I'm","Fragments":["pretty"]},{"Key":"I'm pretty","Fragments":["happy","new"]},{"Key":"pretty happy","Fragments":["with"]},{"Key":"It could","Fragments":["be","be","have"]},{"Key":"be optimized","Fragments":["as","out.","quite","out"]},{"Key":"optimized as","Fragments":["I'm"]},{"Key":"I'm certain","Fragments":["I"]},{"Key":"certain I","Fragments":["am"]},{"Key":"am iterating","Fragments":["over"]},{"Key":"string a","Fragments":["few"]},{"Key":" many","Fragments":["times"]},{"Key":"many times","Fragments":["but","to","that"]},{"Key":"times but","Fragments":["this"]},{"Key":"much more","Fragments":["readable","succinctly.","readable","easier.","messy"]},{"Key":"more readable","Fragments":["I","without","by","on","and","as","or","string","to","and"]},{"Key":"readable I","Fragments":["think."]},{"Key":"As I","Fragments":["learn","was"]},{"Key":"I learn","Fragments":["C++11"]},{"Key":"learn C++11","Fragments":["I"]},{"Key":"C++11 I","Fragments":["still"]},{"Key":"I still","Fragments":["can't","like","got","wouldn't","think","got","get","have","often"]},{"Key":"still can't","Fragments":["quite"]},{"Key":"can't quite","Fragments":["find"]},{"Key":"quite find","Fragments":["a"]},{"Key":"a layout","Fragments":["for","I"]},{"Key":"layout for","Fragments":["lambdas"]},{"Key":"for lambdas","Fragments":["that"]},{"Key":"lambdas that","Fragments":["I"]},{"Key":"I like,","Fragments":["any"]},{"Key":"like, any","Fragments":["good"]},{"Key":"any good","Fragments":["ideas?"]},{"Key":"that your","Fragments":["functions","loop","helper","total"]},{"Key":"your functions","Fragments":["only","accept","that"]},{"Key":"functions only","Fragments":["do"]},{"Key":"only do","Fragments":["one"]},{"Key":"one thing.","Fragments":["They"]},{"Key":"thing. They","Fragments":["do"]},{"Key":"They do","Fragments":["only"]},{"Key":"do only","Fragments":["what"]},{"Key":"only what","Fragments":["they","was"]},{"Key":"what they","Fragments":["say","say.","say","do(might","are"]},{"Key":"they say","Fragments":["they","they"]},{"Key":"say they","Fragments":["do.","would*."]},{"Key":"they do.","Fragments":["The"]},{"Key":"do. The","Fragments":["names"]},{"Key":"The names","Fragments":["are","`str'"]},{"Key":"names are","Fragments":["explicit","oddly","not","put","checked."]},{"Key":"are explicit","Fragments":["and"]},{"Key":"explicit and","Fragments":["correct."]},{"Key":"In my","Fragments":["exercise","opinion","head","original","example","version","original"]},{"Key":"my exercise","Fragments":["I"]},{"Key":"exercise I","Fragments":["was"]},{"Key":"was a","Fragments":["little","bit","pain","pointless","random","bit","functor,","false","bit","string","really","constructor"]},{"Key":"little bit","Fragments":["less","of","harder.","(streamlined"]},{"Key":"bit less","Fragments":["explicit."]},{"Key":"less explicit.","Fragments":["I"]},{"Key":"explicit. I","Fragments":["just"]},{"Key":"just called","Fragments":["them"]},{"Key":"called them","Fragments":["isQuestion,"]},{"Key":"them isQuestion,","Fragments":["isShout,"]},{"Key":"isQuestion, isShout,","Fragments":["etc;"]},{"Key":"isShout, etc;","Fragments":["which"]},{"Key":"etc; which","Fragments":["is"]},{"Key":"is also","Fragments":["fine","very","commented","a","built","an","potentially","not"]},{"Key":"also fine","Fragments":["because"]},{"Key":"fine because","Fragments":["they"]},{"Key":"they do","Fragments":["what","not"]},{"Key":"Try to","Fragments":["avoid","be"]},{"Key":"avoid `using","Fragments":["namespace"]},{"Key":"std` because","Fragments":["it"]},{"Key":"might give","Fragments":["you","it","you"]},{"Key":"give you","Fragments":["some","unique","more","a"]},{"Key":"you some","Fragments":["conflicting"]},{"Key":"some conflicting","Fragments":["types"]},{"Key":"conflicting types","Fragments":["in"]},{"Key":"in bigger","Fragments":["projects."]},{"Key":"bigger projects.","Fragments":["Here"]},{"Key":"projects. Here","Fragments":["you"]},{"Key":"Here you","Fragments":["could","could"]},{"Key":"use `using","Fragments":["std::string`"]},{"Key":"`using std::string`","Fragments":["instead.","within","to"]},{"Key":"std::string` instead.","Fragments":["That"]},{"Key":"don't get","Fragments":["all"]},{"Key":"get all","Fragments":["the","instances","your"]},{"Key":"stuff from","Fragments":["stl."]},{"Key":"Your string","Fragments":["arguments"]},{"Key":"string arguments","Fragments":["can"]},{"Key":"arguments can","Fragments":["(and"]},{"Key":"can (and","Fragments":["should)"]},{"Key":"(and should)","Fragments":["be"]},{"Key":"should) be","Fragments":["const"]},{"Key":"be const","Fragments":["references."]},{"Key":"const references.","Fragments":["This","It's"]},{"Key":"references. This","Fragments":["avoids"]},{"Key":"This avoids","Fragments":["unnecessary","the"]},{"Key":"avoids unnecessary","Fragments":["copying/moving."]},{"Key":"1) If","Fragments":["you"]},{"Key":"are not","Fragments":["going","needed","suitable","going","repeated.","to","yelling.","going","clonable","there.","removing","equal","equal.","equal"]},{"Key":"not going","Fragments":["to","to","to","to","to"]},{"Key":"modify a","Fragments":["string"]},{"Key":"in your","Fragments":["function","code:","for","example","function.","loops","program?","header","source","include","first","`checkPoke`","implementation","code","```verses()```","implementation","source","functions.","string.","code,","isSilence","bob.h","`hey`","implementation.","conditional","code.","\"hamming.h\"","answer.","solution?"]},{"Key":"your function","Fragments":["it","the","into","definition.","will"]},{"Key":"function it","Fragments":["is","is"]},{"Key":"better to","Fragments":["pass","use","implement","solve","remove","operate","calculate","assign","put","avoid","pass","just","be","break","call","just","use"]},{"Key":"in as","Fragments":["a","a","a"]},{"Key":"reference rather","Fragments":["than","than"]},{"Key":"than by","Fragments":["value.","design."]},{"Key":"by value.","Fragments":["That","Less"]},{"Key":"value. That","Fragments":["means"]},{"Key":"That means","Fragments":["you","having"]},{"Key":"you gain","Fragments":["a"]},{"Key":"gain a","Fragments":["bit"]},{"Key":" of","Fragments":["performance","equal"]},{"Key":"of performance","Fragments":["by"]},{"Key":"performance by","Fragments":["avoiding","eliminating"]},{"Key":"by avoiding","Fragments":["an"]},{"Key":"avoiding an","Fragments":["unnecessary"]},{"Key":"an unnecessary","Fragments":["copy.","conversion"]},{"Key":" e.g.","Fragments":["for","for"]},{"Key":"e.g. for","Fragments":["your","(size_t"]},{"Key":"for your","Fragments":["IsUpper","yelling","total.","comments.","comment.","explanation,","nitpick.","valuable","input.","feedback!","suggestions!","feedback!","suggestions!","names.","member","feedback.","comment.","general","nitpick!","input.","hamming","score.","count","\"length\"","\"diff\"","result","\"d\"","time."]},{"Key":"your IsUpper","Fragments":["function"]},{"Key":"IsUpper function","Fragments":["declare"]},{"Key":"function declare","Fragments":["it"]},{"Key":"declare it","Fragments":["as"]},{"Key":" ```bool","Fragments":["IsUpper(const"]},{"Key":"```bool IsUpper(const","Fragments":["std::string"]},{"Key":"IsUpper(const std::string","Fragments":["\u0026str)"]},{"Key":"2) Depending","Fragments":["on"]},{"Key":"Depending on","Fragments":["your"]},{"Key":"your preferences","Fragments":["you"]},{"Key":"preferences you","Fragments":["can"]},{"Key":"code a","Fragments":["little","bit","litte.","bit.","lot","little"]},{"Key":"little less","Fragments":["verbose","mystifying."]},{"Key":"verbose by","Fragments":["using"]},{"Key":"by using","Fragments":["some","more","regex","I/O","a","an","the","boost.","[]","an","some"]},{"Key":"the functions","Fragments":["in","available","the","members","i","isupper","you","in","it","small"]},{"Key":"in ```#\u003calgorithm\u003e```","Fragments":["rather","([see"]},{"Key":"```#\u003calgorithm\u003e``` rather","Fragments":["than"]},{"Key":"than explicit","Fragments":["loops."]},{"Key":"For example","Fragments":["your","'shouting_with_no_exclamation_mark'","have","my","consider","each","it"]},{"Key":"example your","Fragments":["IsEmpty"]},{"Key":"your IsEmpty","Fragments":["function"]},{"Key":"IsEmpty function","Fragments":["can"]},{"Key":"written as","Fragments":["one","```for("]},{"Key":"as one","Fragments":["line","of"]},{"Key":"one line","Fragments":["as","of","was","but,"]},{"Key":" ```std::all_of(str.begin(),","Fragments":["str.end(),"]},{"Key":"```std::all_of(str.begin(), str.end(),","Fragments":["isspace);"]},{"Key":"you the","Fragments":["to","distance()","longest"]},{"Key":"to throw","Fragments":["a","an","if","an","a","an","a","a","a","a","std::domain_error","a","a"]},{"Key":"throw a","Fragments":["std::domain_error","std::domain_error","std::domain_error","std::domain_error","std::domain_error","std::domain_error","std::domain_error","std::domain_error","std::domain_error"]},{"Key":"a std::domain_error","Fragments":["somewhere?","if","if","if","if","if","if","if","exception"]},{"Key":" removed","Fragments":["guard","`transform`"]},{"Key":"removed guard","Fragments":["conditions,"]},{"Key":"guard conditions,","Fragments":["not"]},{"Key":"conditions, not","Fragments":["needed"]},{"Key":" very","Fragments":["nice"]},{"Key":"very nice","Fragments":["and"]},{"Key":"nice and","Fragments":["clean.","efficient","clean.","tight,","terse.","clean,","simple","compact"]},{"Key":" put","Fragments":["it"]},{"Key":" Fairly","Fragments":["easy"]},{"Key":"Fairly easy","Fragments":["problem"]},{"Key":"easy problem","Fragments":["(though"]},{"Key":"problem (though","Fragments":["phone"]},{"Key":"(though phone","Fragments":["number"]},{"Key":"phone number","Fragments":["formatting"]},{"Key":"number formatting","Fragments":["in"]},{"Key":"formatting in","Fragments":["general"]},{"Key":"general is","Fragments":["%hard%)."]},{"Key":"is %hard%).","Fragments":["However,"]},{"Key":"%hard%). However,","Fragments":["I"]},{"Key":"thought the","Fragments":["need","`verses`","size-diff"]},{"Key":"the need","Fragments":["to","to","for","to","of","to","to","for","for","to","for"]},{"Key":"to declare","Fragments":["an","functions","a"]},{"Key":"declare an","Fragments":["explicit"]},{"Key":"an explicit","Fragments":["conversion","loop","for","conversion.","way"]},{"Key":"explicit conversion","Fragments":["operator","of"]},{"Key":"conversion operator","Fragments":["was","call"]},{"Key":"operator was","Fragments":["a"]},{"Key":"bit tricky.","Fragments":["A"]},{"Key":"tricky. A","Fragments":["hint"]},{"Key":"A hint","Fragments":["of"]},{"Key":"hint of","Fragments":["some"]},{"Key":"of some","Fragments":["kind","overhead.","object."]},{"Key":"some kind","Fragments":["would","of"]},{"Key":"kind would","Fragments":["be"]},{"Key":"be useful","Fragments":["here,"]},{"Key":"useful here,","Fragments":["as"]},{"Key":"as that","Fragments":["is","is"]},{"Key":"is (to","Fragments":["my"]},{"Key":"(to my","Fragments":["eyes","detriment)","mind","eyes)"]},{"Key":"my eyes","Fragments":["at"]},{"Key":"eyes at","Fragments":["least)"]},{"Key":"at least)","Fragments":["a","to"]},{"Key":"least) a","Fragments":["non-trivial"]},{"Key":"non-trivial bit","Fragments":["of"]},{"Key":"* instead","Fragments":["of"]},{"Key":"using include","Fragments":["guards,","guards"]},{"Key":"include guards,","Fragments":["try"]},{"Key":"guards, try","Fragments":["using"]},{"Key":"try using","Fragments":["[`#pragma","some","a"]},{"Key":"using [`#pragma","Fragments":["once`](https://en.wikipedia.org/wiki/Pragma_once)"]},{"Key":" Regarding","Fragments":["the","your","static","the"]},{"Key":"Regarding the","Fragments":["argument","`for`"]},{"Key":"your function:","Fragments":["you"]},{"Key":"function: you","Fragments":["should"]},{"Key":"pass it","Fragments":["by","as","by","an","anywhere.","in."]},{"Key":"it by","Fragments":["reference,","value.","value","value,"]},{"Key":"by reference,","Fragments":["and"]},{"Key":"reference, and","Fragments":["avoid"]},{"Key":"and avoid","Fragments":["it","having","static","doing"]},{"Key":"avoid it","Fragments":["be","if"]},{"Key":"it be","Fragments":["written:","okay","that,","more","better","better","all"]},{"Key":"be written:","Fragments":["use"]},{"Key":"written: use","Fragments":["\"std::string"]},{"Key":"use \"std::string","Fragments":["hey(const"]},{"Key":"\"std::string hey(const","Fragments":["std::string"]},{"Key":"hey(const std::string","Fragments":["\u0026string)\""]},{"Key":" Generally","Fragments":["speaking,"]},{"Key":"Generally speaking,","Fragments":["your"]},{"Key":"speaking, your","Fragments":["algorithm"]},{"Key":"your algorithm","Fragments":["is","return"]},{"Key":"is similar","Fragments":["to","to"]},{"Key":"similar to","Fragments":["mine.","`square()`","mine,","the","how","the"]},{"Key":"* good","Fragments":["idea"]},{"Key":"use #pragma","Fragments":["once."]},{"Key":"#pragma once.","Fragments":["Up"]},{"Key":"once. Up","Fragments":["until"]},{"Key":"Up until","Fragments":["now","now"]},{"Key":"until now","Fragments":["I've","I"]},{"Key":"now I've","Fragments":["been"]},{"Key":"I've been","Fragments":["using","using","looking"]},{"Key":"been using","Fragments":["include","C#"]},{"Key":" Use","Fragments":["of","prefix-","std::min","`isspace`","\u003climits\u003e"]},{"Key":"Use of","Fragments":["std::string"]},{"Key":"std::string is","Fragments":["far"]},{"Key":"is far","Fragments":["from"]},{"Key":"far from","Fragments":["optimal"]},{"Key":"from optimal","Fragments":["-"]},{"Key":"optimal -","Fragments":["perhaps"]},{"Key":"- perhaps","Fragments":["better"]},{"Key":"perhaps better","Fragments":["to"]},{"Key":"use \"C\"","Fragments":["in"]},{"Key":"\"C\" in","Fragments":["this"]},{"Key":"this scenario","Fragments":["since"]},{"Key":"scenario since","Fragments":["all"]},{"Key":"since all","Fragments":["strings","members"]},{"Key":"all strings","Fragments":["are"]},{"Key":"are constant.","Fragments":["More"]},{"Key":"constant. More","Fragments":["specifically:"]},{"Key":"More specifically:","Fragments":["re-constructing"]},{"Key":"specifically: re-constructing","Fragments":["the"]},{"Key":"re-constructing the","Fragments":["object"]},{"Key":"the object","Fragments":["might","and","returned"]},{"Key":"object might","Fragments":["have"]},{"Key":"might have","Fragments":["impact","a","been","noticed","some","been","been","included"]},{"Key":"have impact","Fragments":["-"]},{"Key":"impact -","Fragments":["I"]},{"Key":"guess this","Fragments":["will"]},{"Key":"this will","Fragments":["depend","be"]},{"Key":"will depend","Fragments":["on"]},{"Key":"depend on","Fragments":["the"]},{"Key":"the compiler","Fragments":["optimizations.","automatically","beforehand","looks","will","a","a","a","directions","will","to","may","(I","deal","to"]},{"Key":"It may","Fragments":["be","be"]},{"Key":"may be","Fragments":["possible","interested","easier","a","needed.","heavy","more","somewhat","preferable.","more"]},{"Key":"be possible","Fragments":["to","to"]},{"Key":"possible to","Fragments":["exit","avoid","make","determine","replace","not","submit","solve","make","pass"]},{"Key":"to exit","Fragments":["the"]},{"Key":"exit the","Fragments":["loop","loop,"]},{"Key":"loop sooner,","Fragments":["but"]},{"Key":"sooner, but","Fragments":["I"]},{"Key":"I did","Fragments":["not","this","not","not","it","this","not","this","make","need","not","with","not","not","to","without","it.","it.","the"]},{"Key":"did not","Fragments":["explore","know","know","know","and","know","seem","like","update","do","trim","have"]},{"Key":"not explore","Fragments":["this"]},{"Key":"explore this","Fragments":["scenario."]},{"Key":"It's not","Fragments":["clear","needed","in","for"]},{"Key":"clear from","Fragments":["the"]},{"Key":"the specification","Fragments":["if","for"]},{"Key":"specification if","Fragments":["\"hey\""]},{"Key":"if \"hey\"","Fragments":["is"]},{"Key":"\"hey\" is","Fragments":["a"]},{"Key":"method of","Fragments":["a","simultaneously","testing"]},{"Key":"a \"bob\"","Fragments":["class,"]},{"Key":"\"bob\" class,","Fragments":["or","I"]},{"Key":"or if","Fragments":["bob","it","my","there's","they","I","`0"]},{"Key":"if bob","Fragments":["is","_is","is"]},{"Key":"bob is","Fragments":["a","not"]},{"Key":"namespace. I","Fragments":["opted","didn't"]},{"Key":"I opted","Fragments":["for","for","to","not"]},{"Key":"opted for","Fragments":["a","a"]},{"Key":"your approach.","Fragments":["Some"]},{"Key":"approach. Some","Fragments":["comments:"]},{"Key":"* c-style","Fragments":["casts"]},{"Key":"c-style casts","Fragments":["(bool)islower(*it))"]},{"Key":"casts (bool)islower(*it))","Fragments":["should"]},{"Key":"(bool)islower(*it)) should","Fragments":["be"]},{"Key":"be replaced","Fragments":["with","by","by","with","with","with","by:","to","to","with"]},{"Key":"replaced with","Fragments":["the","something","```if","```ret[word]++;```.","its","`std::is_permutation`\u003c/li\u003e","the"]},{"Key":"the c++","Fragments":["versions"]},{"Key":"c++ versions","Fragments":["that"]},{"Key":"versions that","Fragments":["are"]},{"Key":"that are","Fragments":["safer","responsible","now","anagrams.","simpler","included"]},{"Key":"are safer","Fragments":["and"]},{"Key":"safer and","Fragments":["greppable"]},{"Key":"and greppable","Fragments":["(static_cast,"]},{"Key":"greppable (static_cast,","Fragments":["etc)"]},{"Key":"* using","Fragments":["statements"]},{"Key":"using statements","Fragments":["in","are."]},{"Key":"statements in","Fragments":["headers"]},{"Key":"in headers","Fragments":["can","though)."]},{"Key":"headers can","Fragments":["be"]},{"Key":"be dangerous","Fragments":["-","in"]},{"Key":"dangerous -","Fragments":["may"]},{"Key":"- may","Fragments":["want"]},{"Key":"to prefix","Fragments":["everything"]},{"Key":"prefix everything","Fragments":["with"]},{"Key":"everything with","Fragments":["std::"]},{"Key":"* You","Fragments":["deal","are"]},{"Key":"You deal","Fragments":["with"]},{"Key":"with spaces,","Fragments":["but"]},{"Key":"spaces, but","Fragments":["what"]},{"Key":"but what","Fragments":["about","happens","happens"]},{"Key":"about other","Fragments":["whitespace?"]},{"Key":"other whitespace?","Fragments":["/t"]},{"Key":"whitespace? /t","Fragments":["/n"]},{"Key":"/t /n","Fragments":["/r"]},{"Key":"/n /r","Fragments":["etc"]},{"Key":"* What","Fragments":["about"]},{"Key":"about leading","Fragments":["or"]},{"Key":"leading or","Fragments":["trailing"]},{"Key":"or trailing","Fragments":["space?"]},{"Key":"You are","Fragments":["copying","copying","correct,","right","absolutely","supposed","supposed","writing"]},{"Key":"are copying","Fragments":["the","the","contents"]},{"Key":"value and","Fragments":["return","not","I","parameter","handle","cause","`main()`"]},{"Key":"copy -","Fragments":["you"]},{"Key":"the return","Fragments":["value","value","value","type","value","strings.","strings","value","value","value","value"]},{"Key":"value a","Fragments":["constant"]},{"Key":"a constant","Fragments":["string","string","and"]},{"Key":"constant string","Fragments":["ref","for"]},{"Key":"string ref","Fragments":["or"]},{"Key":"ref or","Fragments":["const"]},{"Key":"or const","Fragments":["char*"]},{"Key":"char* and","Fragments":["the"]},{"Key":"input a","Fragments":["const"]},{"Key":"* The","Fragments":["for","length"]},{"Key":"The for","Fragments":["loop"]},{"Key":"loop could","Fragments":["be","however"]},{"Key":"replaced by","Fragments":["the","```question.back()```."]},{"Key":"(auto it","Fragments":[":"]},{"Key":"it :","Fragments":["input)","greeting)","message)"]},{"Key":"Another note:","Fragments":["you"]},{"Key":"note: you","Fragments":["checking"]},{"Key":"you checking","Fragments":["for"]},{"Key":"for \"allSpace\"","Fragments":["and"]},{"Key":"\"allSpace\" and","Fragments":["\"allNum\""]},{"Key":"and \"allNum\"","Fragments":["before"]},{"Key":"\"allNum\" before","Fragments":["eventually"]},{"Key":"before eventually","Fragments":["setting"]},{"Key":"eventually setting","Fragments":["it"]},{"Key":"setting it","Fragments":["to"]},{"Key":"to false.","Fragments":["It's"]},{"Key":"false. It's","Fragments":["not"]},{"Key":"not needed","Fragments":["at","for","for"]},{"Key":"needed at","Fragments":["all."]},{"Key":"Why aren't","Fragments":["you"]},{"Key":"aren't you","Fragments":["using"]},{"Key":"you using","Fragments":["\"std::isupper\"","the","the"]},{"Key":"using \"std::isupper\"","Fragments":["and"]},{"Key":"\"std::isupper\" and","Fragments":["\"std::islower\""]},{"Key":"and \"std::islower\"","Fragments":["?"]},{"Key":" a)","Fragments":["You"]},{"Key":"a) You","Fragments":["should"]},{"Key":"put \"const","Fragments":["char*\""]},{"Key":"\"const char*\"","Fragments":["on"]},{"Key":"char*\" on","Fragments":["all"]},{"Key":"on all","Fragments":["variable","point,"]},{"Key":"all variable","Fragments":["declarations,","declarations"]},{"Key":"variable declarations,","Fragments":["and"]},{"Key":"declarations, and","Fragments":["as"]},{"Key":"and as","Fragments":["well"]},{"Key":"function itself.","Fragments":["These"]},{"Key":"itself. These","Fragments":["are"]},{"Key":"These are","Fragments":["constants,","equivalent"]},{"Key":"are constants,","Fragments":["and"]},{"Key":"constants, and","Fragments":["may"]},{"Key":"and may","Fragments":["not","take","'anecdotally'"]},{"Key":"may not","Fragments":["be","be","make","be","be"]},{"Key":" b)","Fragments":["if"]},{"Key":"b) if","Fragments":["the"]},{"Key":"string lenght","Fragments":["is"]},{"Key":"lenght is","Fragments":["\"0\","]},{"Key":"is \"0\",","Fragments":["you"]},{"Key":"\"0\", you","Fragments":["will"]},{"Key":"will be","Fragments":["dereferencing","counted","a","present","anagrams.","O(n)","created","always","removed.","undefined","the","an","optimized","a","characters","implicitly","passed","incorrect.","treated","a","inserting"]},{"Key":"be dereferencing","Fragments":["\"msg\""]},{"Key":"dereferencing \"msg\"","Fragments":["with"]},{"Key":"\"msg\" with","Fragments":["a"]},{"Key":"a negative","Fragments":["value.","direction.","to","number?"]},{"Key":"negative value.","Fragments":["This"]},{"Key":"value. This","Fragments":["is"]},{"Key":"is definitely","Fragments":["not"]},{"Key":"definitely not","Fragments":["what"]},{"Key":"not what","Fragments":["you","a","makes"]},{"Key":"you want","Fragments":["to","to","in","to","them","to","to","to","to","to","to"]},{"Key":" c)","Fragments":["Overall,"]},{"Key":"c) Overall,","Fragments":["this"]},{"Key":"Overall, this","Fragments":["is"]},{"Key":"is \"C\",","Fragments":["not"]},{"Key":"\"C\", not","Fragments":["\"C++\"."]},{"Key":"Why isn't","Fragments":["the"]},{"Key":"isn't the","Fragments":["parameter","cleanest","best","best","best","most"]},{"Key":"the parameter","Fragments":["\"s\""]},{"Key":"parameter \"s\"","Fragments":["for"]},{"Key":"\"s\" for","Fragments":["\"hey()\""]},{"Key":"for \"hey()\"","Fragments":["also"]},{"Key":"\"hey()\" also","Fragments":["passed"]},{"Key":"also passed","Fragments":["as"]},{"Key":"passed as","Fragments":["a","well.","a"]},{"Key":"use proper","Fragments":["namespace"]},{"Key":"proper namespace","Fragments":["for"]},{"Key":"namespace for","Fragments":["isalpha","just","internals."]},{"Key":"for isalpha","Fragments":["and"]},{"Key":"isalpha and","Fragments":["isspace"]},{"Key":"and isspace","Fragments":["(std::isalpha"]},{"Key":"isspace (std::isalpha","Fragments":["and"]},{"Key":"(std::isalpha and","Fragments":["std::isspace)."]},{"Key":"My biggest","Fragments":["problem"]},{"Key":"biggest problem","Fragments":["here"]},{"Key":"problem here","Fragments":["is"]},{"Key":"here is","Fragments":["that","better.","my","that","breaking"]},{"Key":"actually do","Fragments":["not"]},{"Key":"the C++11","Fragments":["on","version.","`for`","```std::stoi```"]},{"Key":"C++11 on","Fragments":["a"]},{"Key":"a daily","Fragments":["basis."]},{"Key":"daily basis.","Fragments":["I"]},{"Key":"basis. I","Fragments":["am"]},{"Key":"am quite","Fragments":["buried"]},{"Key":"quite buried","Fragments":["in"]},{"Key":"buried in","Fragments":["the"]},{"Key":"the C++98,","Fragments":["and"]},{"Key":"C++98, and","Fragments":["I"]},{"Key":"get out","Fragments":["of","of"]},{"Key":"of there","Fragments":["-"]},{"Key":"there -","Fragments":["at"]},{"Key":"least at","Fragments":["home."]},{"Key":"at home.","Fragments":["I"]},{"Key":"home. I","Fragments":["would"]},{"Key":"would guess","Fragments":["that"]},{"Key":"guess that","Fragments":["is"]},{"Key":"is why","Fragments":["I","this","the","it"]},{"Key":"why I","Fragments":["could","have","choose","felt","should","fell","didn't","did","should"]},{"Key":"not decide","Fragments":["which"]},{"Key":"decide which","Fragments":["is","of"]},{"Key":"is more","Fragments":["elegant","expressive.","neat.","likely","readable,","clear.","readable","or","readily","expressive","expressive","expressive"]},{"Key":"more elegant","Fragments":["-","(i.e."]},{"Key":"elegant -","Fragments":["use"]},{"Key":"- use","Fragments":["an"]},{"Key":"an auto","Fragments":["iter,"]},{"Key":"auto iter,","Fragments":["or"]},{"Key":"iter, or","Fragments":["maybe"]},{"Key":"or maybe","Fragments":["std"]},{"Key":"maybe std","Fragments":["algorithm"]},{"Key":"std algorithm","Fragments":["all_of."]},{"Key":"as simple","Fragments":["as","as","as","as","as"]},{"Key":"simple as","Fragments":["possible","I","possible.","possible.","possible"]},{"Key":"as possible","Fragments":["and","and","in","to","and"]},{"Key":"possible and","Fragments":["use","they","tried"]},{"Key":"use std","Fragments":["library"]},{"Key":"std library","Fragments":["functions."]},{"Key":"library functions.","Fragments":["It's","Sorry"]},{"Key":"functions. It's","Fragments":["been","very"]},{"Key":"It's been","Fragments":["a"]},{"Key":"time since","Fragments":["I"]},{"Key":"wrote in","Fragments":["CPP."]},{"Key":" Basically","Fragments":["I","I"]},{"Key":"Basically I","Fragments":["tried","make"]},{"Key":"separate control","Fragments":["structure"]},{"Key":"control structure","Fragments":["from"]},{"Key":"structure from","Fragments":["the"]},{"Key":"decisions that","Fragments":["need"]},{"Key":"that need","Fragments":["to"]},{"Key":"made and","Fragments":["to"]},{"Key":"and to","Fragments":["factor","check","describe","restrict","the","search"]},{"Key":"factor each","Fragments":["function"]},{"Key":"each function","Fragments":["so","different?","I","you","returns."]},{"Key":"function so","Fragments":["that","I","checks"]},{"Key":"that ist","Fragments":["would"]},{"Key":"ist would","Fragments":["primarily"]},{"Key":"would primarily","Fragments":["accomplish"]},{"Key":"primarily accomplish","Fragments":["a"]},{"Key":"accomplish a","Fragments":["single"]},{"Key":" To","Fragments":["avoid","simplify","keep","make","prevent","prevent","me","summarize:"]},{"Key":"To avoid","Fragments":["adding","some"]},{"Key":"avoid adding","Fragments":["a"]},{"Key":"of private","Fragments":["static"]},{"Key":"private static","Fragments":["functions"]},{"Key":"static functions","Fragments":["to"]},{"Key":"the \"bob\"","Fragments":["class,"]},{"Key":"class, I","Fragments":["just"]},{"Key":"of simple","Fragments":["file-scoped"]},{"Key":"simple file-scoped","Fragments":["functions"]},{"Key":"file-scoped functions","Fragments":["and"]},{"Key":"and data","Fragments":["structures"]},{"Key":"data structures","Fragments":["to","and","it","that","it","that","it","that","it","that"]},{"Key":"structures to","Fragments":["complete"]},{"Key":"to complete","Fragments":["the"]},{"Key":"complete the","Fragments":["work."]},{"Key":"I've tried","Fragments":["to","to","to","serveral"]},{"Key":"it reasonably","Fragments":["efficient"]},{"Key":"reasonably efficient","Fragments":["-"]},{"Key":"efficient -","Fragments":["not"]},{"Key":"- not","Fragments":["too","using"]},{"Key":"not too","Fragments":["modular","concerned","complex.","concerned","familiar"]},{"Key":"too modular","Fragments":["and"]},{"Key":"modular and","Fragments":["avoiding","makes"]},{"Key":"and avoiding","Fragments":["some"]},{"Key":"avoiding some","Fragments":["of"]},{"Key":"C++ 'nice'","Fragments":["(slow)"]},{"Key":"'nice' (slow)","Fragments":["features."]},{"Key":"(slow) features.","Fragments":["I'm"]},{"Key":"features. I'm","Fragments":["from"]},{"Key":"I'm from","Fragments":["a"]},{"Key":"from a","Fragments":["C","Java","dictionary","class","callers","fixed","dictionary","raw","maintenance","single","single","PC"]},{"Key":"C background,","Fragments":["so"]},{"Key":"background, so","Fragments":["trying"]},{"Key":"so trying","Fragments":["to"]},{"Key":"to think","Fragments":["in","of","of","about","to","that","about.","about"]},{"Key":"think in","Fragments":["C++","terms"]},{"Key":"C++ terms","Fragments":["takes"]},{"Key":"terms takes","Fragments":["some"]},{"Key":"takes some","Fragments":["time."]},{"Key":"Since this","Fragments":["is"]},{"Key":"first ever","Fragments":["codpiece"]},{"Key":"ever codpiece","Fragments":["here"]},{"Key":"codpiece here","Fragments":["though"]},{"Key":"here though","Fragments":["that"]},{"Key":"though that","Fragments":["i","my"]},{"Key":"that i","Fragments":["would","assumed","think"]},{"Key":"i would","Fragments":["make"]},{"Key":"make everything","Fragments":["super-clear"]},{"Key":"everything super-clear","Fragments":["with"]},{"Key":"super-clear with","Fragments":["lots"]},{"Key":"with lots","Fragments":["of"]},{"Key":"of comments","Fragments":["and"]},{"Key":"comments and","Fragments":["clear","aptly"]},{"Key":"and clear","Fragments":["variable"]},{"Key":"clear variable","Fragments":["names."]},{"Key":"variable names.","Fragments":["Maybe","For"]},{"Key":"names. Maybe","Fragments":["i"]},{"Key":"Maybe i","Fragments":["went"]},{"Key":"i went","Fragments":["to"]},{"Key":"went to","Fragments":["far","use"]},{"Key":"to far","Fragments":["and"]},{"Key":"far and","Fragments":["lost"]},{"Key":"and lost","Fragments":["focus"]},{"Key":"lost focus","Fragments":["on"]},{"Key":"focus on","Fragments":["making"]},{"Key":"on making","Fragments":["a"]},{"Key":"making a","Fragments":["efficient","class,","mistake","copy"]},{"Key":"a efficient","Fragments":["implementation."]},{"Key":"efficient implementation.","Fragments":["However"]},{"Key":"implementation. However","Fragments":["this"]},{"Key":"However this","Fragments":["is"]},{"Key":"is just","Fragments":["a","used","a","to","an","as","a","a"]},{"Key":"trivial task,","Fragments":["and"]},{"Key":"task, and","Fragments":["no"]},{"Key":"no requirements","Fragments":["are"]},{"Key":"requirements are","Fragments":["specified."]},{"Key":"The library","Fragments":["functions"]},{"Key":"library functions","Fragments":["that","that","to"]},{"Key":"that encapsulate","Fragments":["those"]},{"Key":"encapsulate those","Fragments":["patterns"]},{"Key":"those patterns","Fragments":["can"]},{"Key":"patterns can","Fragments":["be"]},{"Key":"be found","Fragments":["in","in"]},{"Key":"found in","Fragments":["```#\u003calgorithm\u003e```","the","the","the"]},{"Key":"```#\u003calgorithm\u003e``` ([see","Fragments":["here](http://www.cplusplus.com/reference/algorithm/)"]},{"Key":"([see here](http://www.cplusplus.com/reference/algorithm/)","Fragments":[")."]},{"Key":"Also as","Fragments":["a"]},{"Key":"a quick","Fragments":["note","implementation","test","test","comment:"]},{"Key":"quick note","Fragments":["if"]},{"Key":"note if","Fragments":["you"]},{"Key":"write an","Fragments":["explicit"]},{"Key":"explicit loop","Fragments":["when"]},{"Key":"loop when","Fragments":["iterating"]},{"Key":"when iterating","Fragments":["over","through"]},{"Key":" data","Fragments":["structure"]},{"Key":"data structure","Fragments":["the","to","had"]},{"Key":"structure the","Fragments":["type","program"]},{"Key":"the type","Fragments":["deduction","of","is","of","you"]},{"Key":"type deduction","Fragments":["of"]},{"Key":"deduction of","Fragments":["the"]},{"Key":"the ```auto```","Fragments":["keyword","keyword"]},{"Key":"```auto``` keyword","Fragments":["as","and"]},{"Key":"keyword as","Fragments":["well"]},{"Key":"as range","Fragments":["based"]},{"Key":"loops lower","Fragments":["the"]},{"Key":"lower the","Fragments":["verbosity"]},{"Key":"the verbosity","Fragments":["significantly.","of"]},{"Key":"verbosity significantly.","Fragments":["(e.g."]},{"Key":"significantly. (e.g.","Fragments":["your"]},{"Key":"(e.g. your","Fragments":["line"]},{"Key":"your line","Fragments":["14"]},{"Key":"line 14","Fragments":["becomes)","has"]},{"Key":" ```for(","Fragments":["auto"]},{"Key":"```for( auto","Fragments":["it","c"]},{"Key":" making","Fragments":["the"]},{"Key":"code much","Fragments":["clearer"]},{"Key":"much clearer","Fragments":["IMHO","and"]},{"Key":"clearer IMHO","Fragments":[":)"]},{"Key":"This seemed","Fragments":["like","pretty","to"]},{"Key":"a pretty","Fragments":["straightforward","perfect","new","horrific","minor","straightforward"]},{"Key":"pretty straightforward","Fragments":["one.","exercise","getting"]},{"Key":"straightforward one.","Fragments":["Not"]},{"Key":"one. Not","Fragments":["much"]},{"Key":"Not much","Fragments":["to"]},{"Key":"much to","Fragments":["explain","see,","talk","see."]},{"Key":" @elias","Fragments":["Thanks"]},{"Key":"@elias Thanks","Fragments":["for"]},{"Key":"the advice!","Fragments":["I","That"]},{"Key":"advice! I","Fragments":["will"]},{"Key":"will go","Fragments":["in"]},{"Key":"go in","Fragments":["and"]},{"Key":"in and","Fragments":["make"]},{"Key":"make some","Fragments":["of"]},{"Key":"of those","Fragments":["changes!","to","methods.","words","pointless"]},{"Key":"those changes!","Fragments":["Im"]},{"Key":"changes! Im","Fragments":["not"]},{"Key":"Im not","Fragments":["sure"]},{"Key":"sure why","Fragments":["I","anagram","I"]},{"Key":"have iostream","Fragments":["included,"]},{"Key":"iostream included,","Fragments":["as"]},{"Key":"included, as","Fragments":["I"]},{"Key":"I never","Fragments":["used","use","used"]},{"Key":"never used","Fragments":["it","ranges","it"]},{"Key":"used it","Fragments":["for","correctly","before","to"]},{"Key":"it for","Fragments":["testing","less","completeness."]},{"Key":"for testing","Fragments":[":/"]},{"Key":"Looks good","Fragments":["and","and","though."]},{"Key":"good and","Fragments":["short!","quite","you've"]},{"Key":"string argumentsby","Fragments":["value"]},{"Key":"argumentsby value","Fragments":["-"]},{"Key":"should copy","Fragments":["by"]},{"Key":"copy by","Fragments":["reference"]},{"Key":"2) Why","Fragments":["is"]},{"Key":"Why is","Fragments":["this"]},{"Key":"is this","Fragments":["in","in"]},{"Key":"class instead","Fragments":["of"]},{"Key":"a namespace?","Fragments":["You"]},{"Key":"namespace? You","Fragments":["don't"]},{"Key":"don't gain","Fragments":["anything"]},{"Key":"anything by","Fragments":["it","itself,"]},{"Key":"by it","Fragments":["being"]},{"Key":"it being","Fragments":["a"]},{"Key":"being a","Fragments":["class.","different","beginner"]},{"Key":"would throw","Fragments":["in","an"]},{"Key":"throw in","Fragments":["`cctype`","all"]},{"Key":"in `cctype`","Fragments":["so"]},{"Key":"`cctype` so","Fragments":["you"]},{"Key":"so you","Fragments":["can","know,","could","can","may","don't","dont","could","could","could","may","still","could","can"]},{"Key":"use `isupper()`","Fragments":["and"]},{"Key":"`isupper()` and","Fragments":["`islower()`"]},{"Key":"and `islower()`","Fragments":["as"]},{"Key":"`islower()` as","Fragments":["opposed"]},{"Key":"as opposed","Fragments":["to"]},{"Key":"opposed to","Fragments":["`*it","run-time","coming","any"]},{"Key":"to `*it","Fragments":["\u003e="]},{"Key":"`*it \u003e=","Fragments":["'A'"]},{"Key":"\u003e= 'A'","Fragments":["\u0026\u0026","\u0026\u0026","\u0026\u0026"]},{"Key":"'A' \u0026\u0026","Fragments":["*it","msg[i]","\u003c="]},{"Key":"\u0026\u0026 *it","Fragments":["\u003c="]},{"Key":"*it \u003c=","Fragments":["'Z'`."]},{"Key":"\u003c= 'Z'`.","Fragments":["I","It's"]},{"Key":"'Z'`. I","Fragments":["think"]},{"Key":"lot easier","Fragments":["to","then"]},{"Key":"read and","Fragments":["generally","changed","everything"]},{"Key":"and generally","Fragments":["won't"]},{"Key":"generally won't","Fragments":["cause"]},{"Key":"won't cause","Fragments":["a","a"]},{"Key":"cause a","Fragments":["significant","heap","slight","buffer"]},{"Key":"a significant","Fragments":["performance"]},{"Key":"significant performance","Fragments":["hit."]},{"Key":"not done","Fragments":["yet."]},{"Key":" Yes,","Fragments":["it","you're","thats","that's","I","that's"]},{"Key":"Yes, it","Fragments":["is"]},{"Key":"much nicer","Fragments":[":)"]},{"Key":"1) Are","Fragments":["you"]},{"Key":"Are you","Fragments":["guaranteed","attempting","still"]},{"Key":"you guaranteed","Fragments":["that"]},{"Key":"guaranteed that","Fragments":["map[word]"]},{"Key":"that map[word]","Fragments":["=="]},{"Key":"map[word] ==","Fragments":["0"]},{"Key":"== 0","Fragments":["if"]},{"Key":"0 if","Fragments":["word","a.size()","it's","it"]},{"Key":"if word","Fragments":["is","is","length"]},{"Key":"not in","Fragments":["map","map,","x\\n\";","the","the"]},{"Key":"map already?","Fragments":["I"]},{"Key":"already? I","Fragments":["think"]},{"Key":"it cold","Fragments":["be"]},{"Key":"cold be","Fragments":["gibberish"]},{"Key":"be gibberish","Fragments":["outside"]},{"Key":"gibberish outside","Fragments":["of"]},{"Key":"outside of","Fragments":["debug","the","class","its","our","the","the","its"]},{"Key":"of debug","Fragments":["mode."]},{"Key":"2) You","Fragments":["could","don't"]},{"Key":"could transform","Fragments":["the"]},{"Key":"transform the","Fragments":["entire"]},{"Key":"the entire","Fragments":["string","song","string","if-statement","input","solution","string","phrase","string"]},{"Key":"entire string","Fragments":["up","lower_case","every","instead"]},{"Key":"string up","Fragments":["front"]},{"Key":"up front","Fragments":["in","is"]},{"Key":"front in","Fragments":["one"]},{"Key":"in one","Fragments":["go","line","file","file","loop.","file,","iteration","file","pass,","of"]},{"Key":"one go","Fragments":["-"]},{"Key":"go -","Fragments":["this"]},{"Key":"- this","Fragments":["could","is","is"]},{"Key":"could possibly","Fragments":["be","just","be.","reject"]},{"Key":"possibly be","Fragments":["more"]},{"Key":"be more","Fragments":["efficient.","c++,","readable","optimized","inclusive","readable","expressive","concise.","efficient","expressive","characters","appropriate","than","efficient","easily","C++","clear."]},{"Key":"to roll","Fragments":["both"]},{"Key":"roll both","Fragments":["shouting"]},{"Key":"both shouting","Fragments":["and"]},{"Key":"and shouting","Fragments":["numbers"]},{"Key":"shouting numbers","Fragments":["into"]},{"Key":"numbers into","Fragments":["one"]},{"Key":"one regex","Fragments":["string"]},{"Key":"regex string","Fragments":["but"]},{"Key":"string but","Fragments":["found","will"]},{"Key":"but found","Fragments":["it","it"]},{"Key":"it matched","Fragments":["only_numbers","the","the"]},{"Key":"matched only_numbers","Fragments":["and"]},{"Key":"only_numbers and","Fragments":["question_with_only_numbers,"]},{"Key":"and question_with_only_numbers,","Fragments":["my"]},{"Key":"question_with_only_numbers, my","Fragments":["regex"]},{"Key":"my regex","Fragments":["isn't"]},{"Key":"regex isn't","Fragments":["as"]},{"Key":"isn't as","Fragments":["good","clear"]},{"Key":"as good","Fragments":["as","practice,"]},{"Key":"good as","Fragments":["it"]},{"Key":"as it","Fragments":["probably","will","wouldn't","wouldn't","is","should","should","currently","could","returns","only","probably","removed","is","is","would","then","grows.","seems","can","can","is","cannot","cannot","relies"]},{"Key":"it probably","Fragments":["could","makes","has"]},{"Key":"probably could","Fragments":["be."]},{"Key":" Thanks,","Fragments":["I","@robert!","all!","it"]},{"Key":"Thanks, I","Fragments":["will"]},{"Key":"will make","Fragments":["the","the"]},{"Key":"I studied","Fragments":["C++"]},{"Key":"studied C++","Fragments":["waaaaay"]},{"Key":"C++ waaaaay","Fragments":["back"]},{"Key":"waaaaay back","Fragments":["in"]},{"Key":"back in","Fragments":["college"]},{"Key":"in college","Fragments":["but"]},{"Key":"college but","Fragments":["never"]},{"Key":"but never","Fragments":["got"]},{"Key":"never got","Fragments":["much"]},{"Key":"got much","Fragments":["use"]},{"Key":"much use","Fragments":["out"]},{"Key":"use out","Fragments":["of"]},{"Key":"of it","Fragments":["once","before,","is","in","into","in"]},{"Key":"it once","Fragments":["my","and","in"]},{"Key":"once my","Fragments":["career"]},{"Key":"my career","Fragments":["got"]},{"Key":"career got","Fragments":["off"]},{"Key":"got off","Fragments":["the"]},{"Key":"off the","Fragments":["ground.","bool","exercise","bat,","list"]},{"Key":"the ground.","Fragments":["I'm"]},{"Key":"ground. I'm","Fragments":["trying"]},{"Key":"to reacquaint","Fragments":["myself"]},{"Key":"reacquaint myself","Fragments":["with"]},{"Key":"myself with","Fragments":["it"]},{"Key":"with it","Fragments":["as"]},{"Key":"I'm interested","Fragments":["in","in","in"]},{"Key":"in switching","Fragments":["over"]},{"Key":"switching over","Fragments":["to"]},{"Key":"over to","Fragments":["game","C++.","range"]},{"Key":"to game","Fragments":["development"]},{"Key":"game development","Fragments":["from"]},{"Key":"development from","Fragments":["web"]},{"Key":"from web","Fragments":["development."]},{"Key":"web development.","Fragments":["Is"]},{"Key":"development. Is","Fragments":["C++"]},{"Key":"Is C++","Fragments":["the"]},{"Key":"C++ the","Fragments":["right"]},{"Key":"right choice","Fragments":["for"]},{"Key":"choice for","Fragments":["that?"]},{"Key":"for that?","Fragments":["I've"]},{"Key":"that? I've","Fragments":["heard"]},{"Key":"I've heard","Fragments":["differing"]},{"Key":"heard differing","Fragments":["opinions"]},{"Key":"differing opinions","Fragments":["on"]},{"Key":"opinions on","Fragments":["the"]},{"Key":"the subject.","Fragments":["Thoughts?"]},{"Key":"In any","Fragments":["case,"]},{"Key":"any case,","Fragments":["I"]},{"Key":"I want","Fragments":["to","to","to","to","in"]},{"Key":"learn C++","Fragments":["better","to:"]},{"Key":"C++ better","Fragments":["regardless."]},{"Key":" Through","Fragments":["the"]},{"Key":"Through the","Fragments":["course"]},{"Key":"the course","Fragments":["of"]},{"Key":"course of","Fragments":["this"]},{"Key":"exercise it","Fragments":["dawned"]},{"Key":"it dawned","Fragments":["on"]},{"Key":"dawned on","Fragments":["me"]},{"Key":"on me","Fragments":["that"]},{"Key":"that regular","Fragments":["expressions"]},{"Key":"expressions would","Fragments":["be"]},{"Key":"the most","Fragments":["efficient","readable","efficient","readable","efficient","other","common","readable","readable"]},{"Key":"most efficient","Fragments":["way","way","approach,"]},{"Key":"efficient way","Fragments":["to","of"]},{"Key":"to tackle","Fragments":["these"]},{"Key":"tackle these","Fragments":["unit"]},{"Key":"these unit","Fragments":["tests."]},{"Key":"unit tests.","Fragments":["At","I"]},{"Key":"tests. At","Fragments":["first"]},{"Key":"At first","Fragments":["I","I","sigh,"]},{"Key":"first I","Fragments":["was","went"]},{"Key":"using all","Fragments":["kinds","what"]},{"Key":"all kinds","Fragments":["of","of"]},{"Key":"kinds of","Fragments":["string","strange"]},{"Key":"string manipulation","Fragments":["functions"]},{"Key":"manipulation functions","Fragments":["but"]},{"Key":"functions but","Fragments":["that","`checkCaps`"]},{"Key":"was getting","Fragments":["really","a","a","reacquainted","close"]},{"Key":"getting really","Fragments":["cumbersome."]},{"Key":"I'm working","Fragments":["within","to"]},{"Key":"working within","Fragments":["an"]},{"Key":"within an","Fragments":["Ubuntu","anonymous","anonymous"]},{"Key":"an Ubuntu","Fragments":["linux"]},{"Key":"Ubuntu linux","Fragments":["environment"]},{"Key":"linux environment","Fragments":["so"]},{"Key":"environment so","Fragments":["using"]},{"Key":"so using","Fragments":["gcc"]},{"Key":"using gcc","Fragments":["as","version"]},{"Key":"gcc as","Fragments":["my"]},{"Key":"as my","Fragments":["compiler.","Python","\"magic"]},{"Key":"my compiler.","Fragments":["When"]},{"Key":"compiler. When","Fragments":["I"]},{"Key":"I went","Fragments":["to","with","for","the","ahead","with","ahead","ahead","through","with"]},{"Key":"the gcc","Fragments":["regex","regex"]},{"Key":"gcc regex","Fragments":["library,","library"]},{"Key":"regex library,","Fragments":["I"]},{"Key":"library, I","Fragments":["was"]},{"Key":"was running","Fragments":["into"]},{"Key":"running into","Fragments":["all"]},{"Key":"into all","Fragments":["kinds"]},{"Key":"of strange","Fragments":["errors."]},{"Key":"strange errors.","Fragments":["For"]},{"Key":"errors. For","Fragments":["example,"]},{"Key":"example, the","Fragments":["regex"]},{"Key":"regex library","Fragments":["was","which","so","yet."]},{"Key":"library was","Fragments":["throwing","up"]},{"Key":"was throwing","Fragments":["an"]},{"Key":"exception, stating","Fragments":["that"]},{"Key":"stating that","Fragments":["a","the"]},{"Key":"a pattern","Fragments":["like"]},{"Key":"pattern like","Fragments":["\"[a-z]\""]},{"Key":"like \"[a-z]\"","Fragments":["was"]},{"Key":"\"[a-z]\" was","Fragments":["an"]},{"Key":"was an","Fragments":["incorrect","interesting","char[].","accidental","any()","artifact","equivalent","exercise","interesting"]},{"Key":"an incorrect","Fragments":["usage"]},{"Key":"incorrect usage","Fragments":["of"]},{"Key":"of brackets.","Fragments":["Huh?"]},{"Key":"brackets. Huh?","Fragments":["After"]},{"Key":"Huh? After","Fragments":["searching"]},{"Key":"After searching","Fragments":["around,"]},{"Key":"searching around,","Fragments":["I"]},{"Key":"around, I","Fragments":["found"]},{"Key":"found out","Fragments":["the","you"]},{"Key":"the gcc's","Fragments":["regex"]},{"Key":"gcc's regex","Fragments":["implementation"]},{"Key":"regex implementation","Fragments":["isn't"]},{"Key":"implementation isn't","Fragments":["even"]},{"Key":"isn't even","Fragments":["finished."]},{"Key":"even finished.","Fragments":["I'm"]},{"Key":"finished. I'm","Fragments":["using"]},{"Key":"I'm using","Fragments":["gcc","the","only","a","all","only"]},{"Key":"gcc version","Fragments":["4.8.2,"]},{"Key":"version 4.8.2,","Fragments":["which"]},{"Key":"4.8.2, which","Fragments":["is"]},{"Key":"fairly recent","Fragments":["so"]},{"Key":"recent so","Fragments":["go"]},{"Key":"so go","Fragments":["figure."]},{"Key":"I ended","Fragments":["up","up"]},{"Key":"ended up","Fragments":["using","learning","that","the","not"]},{"Key":"up using","Fragments":["the","a"]},{"Key":"the Boost","Fragments":["regex","Regex"]},{"Key":"Boost regex","Fragments":["library"]},{"Key":"library which","Fragments":["shares"]},{"Key":"which shares","Fragments":["a"]},{"Key":"shares a","Fragments":["similar"]},{"Key":"a similar","Fragments":["interface","mapping."]},{"Key":"similar interface","Fragments":["with"]},{"Key":"interface with","Fragments":["the"]},{"Key":"library so","Fragments":["I"]},{"Key":"didn't have","Fragments":["to","to","a"]},{"Key":"change much","Fragments":["code."]},{"Key":"As for","Fragments":["the","traversing","the","`is_shout`","`is_shout`,","the","the","the","the"]},{"Key":"the implementation,","Fragments":["I"]},{"Key":"implementation, I","Fragments":["opted"]},{"Key":"a super","Fragments":["simple"]},{"Key":"super simple","Fragments":["approach."]},{"Key":"simple approach.","Fragments":["The"]},{"Key":"approach. The","Fragments":["default"]},{"Key":"The default","Fragments":["message","buffer","action"]},{"Key":"default message","Fragments":["that"]},{"Key":"message that","Fragments":["is"]},{"Key":"is returned","Fragments":["is"]},{"Key":"returned is","Fragments":["\"Whatever.\""]},{"Key":"is \"Whatever.\"","Fragments":["for","and"]},{"Key":"\"Whatever.\" for","Fragments":["non"]},{"Key":"for non","Fragments":["matches"]},{"Key":"non matches","Fragments":["against"]},{"Key":"matches against","Fragments":["tests"]},{"Key":"against tests","Fragments":["for"]},{"Key":"tests for","Fragments":["a"]},{"Key":"a shout,","Fragments":["question,","but"]},{"Key":"shout, question,","Fragments":["or"]},{"Key":"question, or","Fragments":["empty","nonsense;"]},{"Key":"or empty","Fragments":["string."]},{"Key":"I test","Fragments":["for","this"]},{"Key":"empty (or","Fragments":["blank)"]},{"Key":"(or blank)","Fragments":["string"]},{"Key":"blank) string","Fragments":["first"]},{"Key":"string first","Fragments":["and","would","then"]},{"Key":"first and","Fragments":["if","last","third"]},{"Key":"and if","Fragments":["that","all","it's","it's","that's","someone"]},{"Key":"if that","Fragments":["passes,","would","iteration","is","is","is"]},{"Key":"that passes,","Fragments":["just"]},{"Key":"passes, just","Fragments":["return"]},{"Key":"just return","Fragments":["the","`pow(2,","false","true","whatever","0.","0","0","a","the","the"]},{"Key":"the appropriate","Fragments":["message.","response","response","response"]},{"Key":"appropriate message.","Fragments":["No"]},{"Key":"message. No","Fragments":["need"]},{"Key":"No need","Fragments":["for","to","to","for"]},{"Key":"for further","Fragments":["tests,"]},{"Key":"further tests,","Fragments":["the"]},{"Key":"tests, the","Fragments":["string"]},{"Key":"has no","Fragments":["content","value","major","delete"]},{"Key":"no content","Fragments":["(none"]},{"Key":"content (none","Fragments":["that"]},{"Key":"(none that","Fragments":["we"]},{"Key":"we care","Fragments":["about","about"]},{"Key":"care about","Fragments":["anyway).","are"]},{"Key":" Then","Fragments":["I","you"]},{"Key":"Then I","Fragments":["check","remember"]},{"Key":"I check","Fragments":["for","for","for","whether"]},{"Key":"shout by","Fragments":["searching"]},{"Key":"by searching","Fragments":["for"]},{"Key":"searching for","Fragments":["lowercase","whitespace"]},{"Key":"for lowercase","Fragments":["letters"]},{"Key":"lowercase letters","Fragments":["and","regardless"]},{"Key":"and uppercase","Fragments":["letters."]},{"Key":"uppercase letters.","Fragments":["If"]},{"Key":"letters. If","Fragments":["the"]},{"Key":"regex searches","Fragments":["return"]},{"Key":"searches return","Fragments":["only"]},{"Key":"return only","Fragments":["upper"]},{"Key":"only upper","Fragments":["case","case"]},{"Key":"upper case","Fragments":["letters,","letters","and","letters","letters","letters","letters","rather","and"]},{"Key":"case letters,","Fragments":["then","but"]},{"Key":"letters, then","Fragments":["we"]},{"Key":"know someone","Fragments":["is"]},{"Key":"shouting at","Fragments":["poor"]},{"Key":"at poor","Fragments":["bob."]},{"Key":"poor bob.","Fragments":["If"]},{"Key":"bob. If","Fragments":["any"]},{"Key":"If any","Fragments":["lower"]},{"Key":"any lower","Fragments":["case","case.","case"]},{"Key":"lower case","Fragments":["letters","letters","character","initially","letters,","but","and","characters","characters"]},{"Key":"case letters","Fragments":["are","and","will","in","in","which"]},{"Key":"letters are","Fragments":["found","present"]},{"Key":"are found","Fragments":["as"]},{"Key":"found as","Fragments":["well"]},{"Key":"as uppercase,","Fragments":["then"]},{"Key":"uppercase, then","Fragments":["they"]},{"Key":"then they","Fragments":["can't"]},{"Key":"they can't","Fragments":["be"]},{"Key":"be shouting","Fragments":["too"]},{"Key":"shouting too","Fragments":["loudly."]},{"Key":"too loudly.","Fragments":["Only"]},{"Key":"loudly. Only","Fragments":["the"]},{"Key":"Only the","Fragments":["combination"]},{"Key":"the combination","Fragments":["of"]},{"Key":"combination of","Fragments":["no","searching","`\\r`"]},{"Key":"of no","Fragments":["lower"]},{"Key":"no lower","Fragments":["case","is","case"]},{"Key":"and upper","Fragments":["case"]},{"Key":"letters will","Fragments":["be"]},{"Key":"be counted","Fragments":["as"]},{"Key":"counted as","Fragments":["a","a"]},{"Key":"a shout.","Fragments":["Numbers"]},{"Key":"shout. Numbers","Fragments":["and"]},{"Key":"Numbers and","Fragments":["punctuation"]},{"Key":"and punctuation","Fragments":["are"]},{"Key":"punctuation are","Fragments":["ignored."]},{"Key":"shout before","Fragments":["checking"]},{"Key":"question because","Fragments":["the"]},{"Key":"question test","Fragments":["simply","passes."]},{"Key":"test simply","Fragments":["checks"]},{"Key":"simply checks","Fragments":["for"]},{"Key":"mark as","Fragments":["the"]},{"Key":"character of","Fragments":["the","the","the","the","the"]},{"Key":"input string.","Fragments":["It"]},{"Key":"be that","Fragments":["the","way","the"]},{"Key":"a sequence","Fragments":["of"]},{"Key":"sequence of","Fragments":["all","pairs"]},{"Key":"of all","Fragments":["caps","the","the","substrings","the","you","the","enviroment"]},{"Key":"caps words","Fragments":["followed"]},{"Key":"words followed","Fragments":["by"]},{"Key":"by a","Fragments":["question","little","great"]},{"Key":"question mark,","Fragments":["but","the"]},{"Key":"mark, but","Fragments":["the"]},{"Key":"tests would","Fragments":["consider"]},{"Key":"would consider","Fragments":["that","renaming"]},{"Key":"shout instead","Fragments":["so"]},{"Key":"instead so","Fragments":["I"]},{"Key":"shout first","Fragments":["for"]},{"Key":"first for","Fragments":["that"]},{"Key":"that reason.","Fragments":["If"]},{"Key":"reason. If","Fragments":["it's"]},{"Key":"If it's","Fragments":["not"]},{"Key":"shout, but","Fragments":["has"]},{"Key":"mark at","Fragments":["the","the"]},{"Key":"end then","Fragments":["the"]},{"Key":"Anyway, rip","Fragments":["it"]},{"Key":"rip it","Fragments":["apart","up."]},{"Key":"it apart","Fragments":["gurus!"]},{"Key":"Thanks, @robert!","Fragments":["New"]},{"Key":"@robert! New","Fragments":["version"]},{"Key":"New version","Fragments":["submitted"]},{"Key":"version submitted","Fragments":[":-)."]},{"Key":"I've dabbled","Fragments":["a"]},{"Key":"dabbled a","Fragments":["tiny"]},{"Key":"a tiny","Fragments":["bit","bit"]},{"Key":"tiny bit","Fragments":["in","of"]},{"Key":"bit in","Fragments":["C"]},{"Key":"C before","Fragments":["while"]},{"Key":"before while","Fragments":["starting"]},{"Key":"while starting","Fragments":["to"]},{"Key":"starting to","Fragments":["read","get"]},{"Key":"the Kernighan","Fragments":["and"]},{"Key":"Kernighan and","Fragments":["Ritchie"]},{"Key":"and Ritchie","Fragments":["book"]},{"Key":"Ritchie book","Fragments":["and"]},{"Key":"book and","Fragments":["I","the"]},{"Key":"I assumed","Fragments":["that","the"]},{"Key":"assumed that","Fragments":["C++","this"]},{"Key":"that C++","Fragments":["would","is"]},{"Key":"C++ would","Fragments":["look"]},{"Key":"look reasonably","Fragments":["similar..."]},{"Key":"reasonably similar...","Fragments":["but"]},{"Key":"similar... but","Fragments":["it"]},{"Key":"pretty different","Fragments":["in"]},{"Key":"different in","Fragments":["some"]},{"Key":"Using `\u003calgorithm\u003e`","Fragments":["cleans"]},{"Key":"`\u003calgorithm\u003e` cleans","Fragments":["up"]},{"Key":"cleans up","Fragments":["the"]},{"Key":"up the","Fragments":["code","namespace","compiler","compiler","compiler","code","operation","verse","order","way","constructor","development","documentation.","Scott","string","regular","good"]},{"Key":"lot I","Fragments":["think."]},{"Key":"I think.","Fragments":["However,"]},{"Key":"think. However,","Fragments":["I"]},{"Key":"notice that","Fragments":["`is_shouting`","you","you"]},{"Key":"that `is_shouting`","Fragments":["now"]},{"Key":"`is_shouting` now","Fragments":["has"]},{"Key":"now has","Fragments":["to"]},{"Key":"has to","Fragments":["traverse","be","return","be","be","grow","do","check","be","make","be"]},{"Key":"to traverse","Fragments":["the","the"]},{"Key":"traverse the","Fragments":["string","string"]},{"Key":"string possibly","Fragments":["more"]},{"Key":"possibly more","Fragments":["than"]},{"Key":"than necessary.","Fragments":["In"]},{"Key":"necessary. In","Fragments":["another"]},{"Key":"In another","Fragments":["language"]},{"Key":"another language","Fragments":["I","C++"]},{"Key":"language I","Fragments":["wouldn't","try"]},{"Key":"I wouldn't","Fragments":["be","really","have"]},{"Key":"wouldn't be","Fragments":["bothered,"]},{"Key":"be bothered,","Fragments":["but"]},{"Key":"bothered, but","Fragments":["given"]},{"Key":"but given","Fragments":["that"]},{"Key":"given that","Fragments":["one"]},{"Key":"that one","Fragments":["of","can"]},{"Key":"the benefits","Fragments":["of"]},{"Key":"benefits of","Fragments":["going","using","using"]},{"Key":"of going","Fragments":["down","from"]},{"Key":"going down","Fragments":["to","the"]},{"Key":"a lower-level","Fragments":["language"]},{"Key":"lower-level language","Fragments":["like"]},{"Key":"language like","Fragments":["C++"]},{"Key":"like C++","Fragments":["is"]},{"Key":"C++ is","Fragments":["meant","block"]},{"Key":"is meant","Fragments":["to"]},{"Key":"meant to","Fragments":["be","be","say","function"]},{"Key":"be squeezing","Fragments":["every"]},{"Key":"squeezing every","Fragments":["last"]},{"Key":"every last","Fragments":["bit"]},{"Key":"last bit","Fragments":["of"]},{"Key":"of efficiency","Fragments":["out"]},{"Key":"efficiency out","Fragments":["of"]},{"Key":"your code,","Fragments":["should","you"]},{"Key":"code, should","Fragments":["I"]},{"Key":"should I","Fragments":["be","declare"]},{"Key":"I be","Fragments":["bothered"]},{"Key":"be bothered","Fragments":["here?"]},{"Key":"I split","Fragments":["this"]},{"Key":"split this","Fragments":["up"]},{"Key":"this up","Fragments":["into"]},{"Key":"up into","Fragments":["2","functions","separate","your"]},{"Key":"into 2","Fragments":["parts"]},{"Key":"2 parts","Fragments":["for"]},{"Key":"parts for","Fragments":["readability's"]},{"Key":"for readability's","Fragments":["sake."]},{"Key":"first part,","Fragments":["_splitString_,"]},{"Key":"part, _splitString_,","Fragments":["iterates"]},{"Key":"_splitString_, iterates","Fragments":["over"]},{"Key":"iterates over","Fragments":["the","array"]},{"Key":"string given","Fragments":["as"]},{"Key":"given as","Fragments":["input.","a"]},{"Key":"as input.","Fragments":["It"]},{"Key":"input. It","Fragments":["builds"]},{"Key":"It builds","Fragments":["a"]},{"Key":"builds a","Fragments":["word"]},{"Key":"each alphanumeric","Fragments":["character,"]},{"Key":"alphanumeric character,","Fragments":["whenever"]},{"Key":"character, whenever","Fragments":["it"]},{"Key":"whenever it","Fragments":["hits"]},{"Key":"it hits","Fragments":["a"]},{"Key":"hits a","Fragments":["non-alphanumeric"]},{"Key":"a non-alphanumeric","Fragments":["character","character.","char","char"]},{"Key":"non-alphanumeric character","Fragments":["it"]},{"Key":"character it","Fragments":["flushes"]},{"Key":"it flushes","Fragments":["the"]},{"Key":"flushes the","Fragments":["current"]},{"Key":"current word","Fragments":["to"]},{"Key":"word to","Fragments":["the"]},{"Key":"vector and","Fragments":["clears","checking"]},{"Key":"and clears","Fragments":["the"]},{"Key":"clears the","Fragments":["string"]},{"Key":"to start","Fragments":["on","with","of","with:"]},{"Key":"start on","Fragments":["the"]},{"Key":" You'll","Fragments":["notice"]},{"Key":"You'll notice","Fragments":["at"]},{"Key":"notice at","Fragments":["line"]},{"Key":"at line","Fragments":["27,","42?"]},{"Key":"line 27,","Fragments":["I"]},{"Key":"27, I","Fragments":["added"]},{"Key":"small hack","Fragments":["to"]},{"Key":"hack to","Fragments":["guarantee"]},{"Key":"to guarantee","Fragments":["that"]},{"Key":"guarantee that","Fragments":["the","long"]},{"Key":"string always","Fragments":["ends"]},{"Key":"always ends","Fragments":["with"]},{"Key":"non-alphanumeric character.","Fragments":["I"]},{"Key":"character. I","Fragments":["did"]},{"Key":"did this","Fragments":["to","because","exercise,","challenge","for"]},{"Key":"to simplify","Fragments":["the","your","your"]},{"Key":"simplify the","Fragments":["algorithm","design"]},{"Key":"for un-flushed","Fragments":["words"]},{"Key":"un-flushed words","Fragments":["after"]},{"Key":"words after","Fragments":["the"]},{"Key":"Thanks to","Fragments":["our","feedback"]},{"Key":"our helper","Fragments":["function,"]},{"Key":"helper function,","Fragments":["_wordcount::words_"]},{"Key":"function, _wordcount::words_","Fragments":["becomes"]},{"Key":"_wordcount::words_ becomes","Fragments":["a"]},{"Key":"becomes a","Fragments":["straightforward","variable?"]},{"Key":"straightforward exercise.","Fragments":["All"]},{"Key":"exercise. All","Fragments":["it"]},{"Key":"All it","Fragments":["does"]},{"Key":"does is","Fragments":["check","call"]},{"Key":"is check","Fragments":["the","each","for"]},{"Key":"to see","Fragments":["if","if","what","for","how","if","what","if","knowledge","variable","if","if","what","comments.","a","an","other","the","the","the","where","a","someone","early","how","how","if","if","a"]},{"Key":"see if","Fragments":["the","they","am","the","all","it","string","functions","the","it","they","we"]},{"Key":"the key","Fragments":["already","and","of","word,"]},{"Key":"already exists.","Fragments":["if"]},{"Key":"exists. if","Fragments":["it"]},{"Key":"not, it","Fragments":["adds","calls"]},{"Key":"it adds","Fragments":["the"]},{"Key":"adds the","Fragments":["key"]},{"Key":"key and","Fragments":["initializes","returns"]},{"Key":"and initializes","Fragments":["the"]},{"Key":"initializes the","Fragments":["value,"]},{"Key":"the value,","Fragments":["otherwise","except"]},{"Key":"value, otherwise","Fragments":["it"]},{"Key":"otherwise it","Fragments":["increments"]},{"Key":"it increments","Fragments":["by"]},{"Key":"increments by","Fragments":["1."]},{"Key":"explain my","Fragments":["thought"]},{"Key":"my thought","Fragments":["process"]},{"Key":"thought process","Fragments":["with"]},{"Key":"process with","Fragments":["comments"]},{"Key":"with comments","Fragments":["within"]},{"Key":"comments within","Fragments":["the"]},{"Key":"within the","Fragments":["code.","std","bob","bob","file)","`bob`","hamming","full","class.","word_count","same","`isalpha`","loop","solution.","feature"]},{"Key":"the code.","Fragments":["This","Taking","++"]},{"Key":"code. This","Fragments":["probably"]},{"Key":"This probably","Fragments":["isn't"]},{"Key":"the cleanest","Fragments":["way"]},{"Key":"cleanest way","Fragments":["of"]},{"Key":"doing it,","Fragments":["but"]},{"Key":"it, but","Fragments":["it","expressions","looking","it"]},{"Key":" Hey,","Fragments":["where","it's"]},{"Key":"Hey, where","Fragments":["is"]},{"Key":"where is","Fragments":["`isalpha`"]},{"Key":"is `isalpha`","Fragments":["defined?"]},{"Key":"`isalpha` defined?","Fragments":["Also"]},{"Key":"defined? Also","Fragments":["can"]},{"Key":"Also can","Fragments":["you"]},{"Key":"can you","Fragments":["explain"]},{"Key":"you explain","Fragments":["what"]},{"Key":"explain what","Fragments":["contains_alpha"]},{"Key":"what contains_alpha","Fragments":["is"]},{"Key":"contains_alpha is","Fragments":["actually"]},{"Key":"does look","Fragments":["like"]},{"Key":"very succinct","Fragments":["solution."]},{"Key":"sure I","Fragments":["understand","understand","do","have"]},{"Key":"I understand","Fragments":["why","correctly,","it,","from","the","it!","it.","why"]},{"Key":"understand why","Fragments":["we","I","you","its","you","you"]},{"Key":"why we","Fragments":["have"]},{"Key":"have two","Fragments":["ways"]},{"Key":"two ways","Fragments":["of"]},{"Key":"of denoting","Fragments":["the"]},{"Key":"denoting the","Fragments":["same"]},{"Key":"same thing;","Fragments":["that"]},{"Key":"thing; that","Fragments":["the"]},{"Key":"the triangle","Fragments":["sides"]},{"Key":"triangle sides","Fragments":["input"]},{"Key":"sides input","Fragments":["do"]},{"Key":"input do","Fragments":["not"]},{"Key":"not represent","Fragments":["a"]},{"Key":"represent a","Fragments":["valid"]},{"Key":"a valid","Fragments":["triangle.","char.","regular"]},{"Key":" Interesting","Fragments":["way","use","implementation."]},{"Key":"Interesting way","Fragments":["of"]},{"Key":"splitting up","Fragments":["this","the"]},{"Key":"up this","Fragments":["function,"]},{"Key":"this function,","Fragments":["in"]},{"Key":"function, in","Fragments":["my"]},{"Key":"my opinion","Fragments":["it","they","private","get"]},{"Key":"opinion it","Fragments":["is"]},{"Key":"this task","Fragments":["but"]},{"Key":"task but","Fragments":["if"]},{"Key":"but if","Fragments":["you","it","a","more","there","you","it","you"]},{"Key":"you would","Fragments":["need","get","then","be","want.","re-implement","return"]},{"Key":"would need","Fragments":["to","to"]},{"Key":"more special","Fragments":["cases"]},{"Key":"special cases","Fragments":["this","at"]},{"Key":"cases this","Fragments":["is"]},{"Key":"The code","Fragments":["is","is","does","lacks","looks","is"]},{"Key":"is clear","Fragments":["and"]},{"Key":"clear and","Fragments":["has","readable","self-documenting."]},{"Key":"and has","Fragments":["comments,","negligible","functional"]},{"Key":"has comments,","Fragments":["but"]},{"Key":"comments, but","Fragments":["have"]},{"Key":"but have","Fragments":["you"]},{"Key":"you forgotten","Fragments":["the"]},{"Key":"forgotten the","Fragments":["case"]},{"Key":"numbers and","Fragments":["a"]},{"Key":"a exclamation","Fragments":["mark"]},{"Key":"exclamation mark","Fragments":["at","are","would","(a"]},{"Key":"My code","Fragments":["doesn't","wouldn't"]},{"Key":"code doesn't","Fragments":["feel","do"]},{"Key":"doesn't feel","Fragments":["as","right..."]},{"Key":"feel as","Fragments":["simple"]},{"Key":"should be,","Fragments":["what"]},{"Key":"be, what","Fragments":["are"]},{"Key":"what are","Fragments":["some","you","objects."]},{"Key":"some suggestions","Fragments":["on","for"]},{"Key":"suggestions on","Fragments":["optimizing/simplifying","my"]},{"Key":"on optimizing/simplifying","Fragments":["this"]},{"Key":"optimizing/simplifying this","Fragments":["code."]},{"Key":"this code.","Fragments":["Would","Also,","Do"]},{"Key":"code. Would","Fragments":["the"]},{"Key":"Would the","Fragments":["best"]},{"Key":"the best","Fragments":["route","alternative","I","solution","way","code","implementation","way","way","choice.","option"]},{"Key":"best route","Fragments":["be"]},{"Key":"route be","Fragments":["to"]},{"Key":"really love","Fragments":["how"]},{"Key":"love how","Fragments":["simple","you"]},{"Key":"how simple","Fragments":["this"]},{"Key":"simple this","Fragments":["looks"]},{"Key":"this looks","Fragments":["and"]},{"Key":"looks and","Fragments":["I"]},{"Key":"I absolutely","Fragments":["love"]},{"Key":"absolutely love","Fragments":["the"]},{"Key":"of boost::for_each.","Fragments":["The"]},{"Key":"boost::for_each. The","Fragments":["only"]},{"Key":"only downside","Fragments":["is"]},{"Key":"downside is","Fragments":["it"]},{"Key":"is it","Fragments":["isn't","better","enough","idiomatic","possible"]},{"Key":"it isn't","Fragments":["super","high-performance","there","the","present"]},{"Key":"isn't super","Fragments":["readable,"]},{"Key":"super readable,","Fragments":["but"]},{"Key":"readable, but","Fragments":["I"]},{"Key":"can still","Fragments":["figure"]},{"Key":"still figure","Fragments":["out"]},{"Key":"is doing","Fragments":["after"]},{"Key":"doing after","Fragments":["a"]},{"Key":"couple glances.","Fragments":["Great"]},{"Key":"glances. Great","Fragments":["Job!"]},{"Key":" Only","Fragments":["numbers","provide","nit"]},{"Key":"Only numbers","Fragments":["with"]},{"Key":"numbers with","Fragments":["a","an"]},{"Key":"mark is","Fragments":["considered"]},{"Key":"a non-forceful","Fragments":["question"]},{"Key":"non-forceful question","Fragments":["(\"Sure\"),"]},{"Key":"question (\"Sure\"),","Fragments":["same"]},{"Key":"(\"Sure\"), same","Fragments":["as"]},{"Key":"as lowercase","Fragments":["with"]},{"Key":"lowercase with","Fragments":["a"]},{"Key":"mark. Normal","Fragments":["sentences"]},{"Key":"Normal sentences","Fragments":["without"]},{"Key":"sentences without","Fragments":["all-caps"]},{"Key":"without all-caps","Fragments":["and"]},{"Key":"all-caps and","Fragments":["ending"]},{"Key":"mark are","Fragments":["considered"]},{"Key":"are considered","Fragments":["non-forceful"]},{"Key":"considered non-forceful","Fragments":["sentences."]},{"Key":"non-forceful sentences.","Fragments":["By"]},{"Key":"sentences. By","Fragments":["analogy,"]},{"Key":"By analogy,","Fragments":["only"]},{"Key":"analogy, only","Fragments":["numbers"]},{"Key":"with an","Fragments":["exclamation","explicit","access","underscore","instance","uppercase","empty","```!=```","conversion","empty","unsigned"]},{"Key":"mark would","Fragments":["be"]},{"Key":"be normal","Fragments":["sentences"]},{"Key":"normal sentences","Fragments":["(\"Whatever\")."]},{"Key":"first thought","Fragments":["of"]},{"Key":"the switch","Fragments":["statement","block","statement,"]},{"Key":"a cleaner","Fragments":["looking"]},{"Key":"cleaner looking","Fragments":["code"]},{"Key":"looking code","Fragments":["but"]},{"Key":"code but","Fragments":["realized","there","later"]},{"Key":"but realized","Fragments":["that"]},{"Key":"not possible","Fragments":["because"]},{"Key":"possible because","Fragments":["switch"]},{"Key":"because switch","Fragments":["only"]},{"Key":"switch only","Fragments":["takes"]},{"Key":"only takes","Fragments":["in"]},{"Key":"takes in","Fragments":["numerical"]},{"Key":"in numerical","Fragments":["values."]},{"Key":"numerical values.","Fragments":["Hence,"]},{"Key":"values. Hence,","Fragments":["I"]},{"Key":"Hence, I","Fragments":["came"]},{"Key":"I came","Fragments":["up","to"]},{"Key":"came up","Fragments":["with","with,"]},{"Key":"up with","Fragments":["the","anything","at","the","a","a","a","your","the"]},{"Key":"the basic","Fragments":["if-else","information"]},{"Key":"basic if-else","Fragments":["construction.."]},{"Key":"last statement","Fragments":["should"]},{"Key":"statement should","Fragments":["be"]},{"Key":" else","Fragments":["{","{","c"]},{"Key":"only found","Fragments":["that"]},{"Key":"found that","Fragments":["here","the","at"]},{"Key":"that here","Fragments":["while"]},{"Key":"here while","Fragments":["checking"]},{"Key":"while checking","Fragments":["my"]},{"Key":"checking my","Fragments":["code."]},{"Key":"code could","Fragments":["be","be"]},{"Key":"better by","Fragments":["being"]},{"Key":"by being","Fragments":["more"]},{"Key":"being more","Fragments":["C++","restrictive"]},{"Key":"more C++","Fragments":["-","11","to"]},{"Key":"C++ -","Fragments":["like"]},{"Key":"- like","Fragments":["using"]},{"Key":"like using","Fragments":["\\\u003ciostream\\\u003e","the"]},{"Key":"using \\\u003ciostream\\\u003e","Fragments":["and"]},{"Key":"\\\u003ciostream\\\u003e and","Fragments":["\\\u003cstring\\\u003e"]},{"Key":"and \\\u003cstring\\\u003e","Fragments":["instead"]},{"Key":"\\\u003cstring\\\u003e instead","Fragments":["of"]},{"Key":"of \"stdio.h\",","Fragments":["and"]},{"Key":"\"stdio.h\", and","Fragments":["letting"]},{"Key":"and letting","Fragments":["the"]},{"Key":"letting the","Fragments":["compiler"]},{"Key":"compiler automatically","Fragments":["create"]},{"Key":"automatically create","Fragments":["the","them"]},{"Key":"create the","Fragments":["constructor/destructor.","general","magnitude","maps:"]},{"Key":"are also","Fragments":["some","redundant.","using"]},{"Key":"also some","Fragments":["stylistic"]},{"Key":"some stylistic","Fragments":["tweaks,"]},{"Key":"stylistic tweaks,","Fragments":["for"]},{"Key":"tweaks, for","Fragments":["example"]},{"Key":"for example","Fragments":["the","`boost::algorithm::trim(str)`"]},{"Key":"example the","Fragments":["curly"]},{"Key":"the curly","Fragments":["braces","braces"]},{"Key":"curly braces","Fragments":["are","after"]},{"Key":"braces are","Fragments":["not"]},{"Key":"for 'if'","Fragments":["statements"]},{"Key":"'if' statements","Fragments":["with"]},{"Key":"statements with","Fragments":["only","only"]},{"Key":"only one","Fragments":["line","statement","for","thing","cycle","for","iteration"]},{"Key":"line of","Fragments":["code"]},{"Key":"code after","Fragments":["them,","3"]},{"Key":"after them,","Fragments":["and"]},{"Key":"and since","Fragments":["you","I'm"]},{"Key":"have 'using","Fragments":["namespace"]},{"Key":"'using namespace","Fragments":["std;'"]},{"Key":"namespace std;'","Fragments":["you"]},{"Key":"std;' you","Fragments":["can"]},{"Key":"can replace","Fragments":["'std::string'","lines","the"]},{"Key":"replace 'std::string'","Fragments":["with"]},{"Key":"'std::string' with","Fragments":["just"]},{"Key":"with just","Fragments":["'string'.","a","counts[word]","returning"]},{"Key":"use regex","Fragments":["instead","[like","for"]},{"Key":"regex instead","Fragments":["but"]},{"Key":"instead but","Fragments":["I"]},{"Key":"C++'s regex","Fragments":["library"]},{"Key":"library yet.","Fragments":["Doing"]},{"Key":"yet. Doing","Fragments":["this"]},{"Key":"Doing this","Fragments":["reminded"]},{"Key":"this reminded","Fragments":["me"]},{"Key":"reminded me","Fragments":["I"]},{"Key":"me I","Fragments":["ought","would"]},{"Key":"I ought","Fragments":["to"]},{"Key":"ought to","Fragments":["learn"]},{"Key":"If query.size()","Fragments":["=="]},{"Key":"query.size() ==","Fragments":["'?',"]},{"Key":"== '?',","Fragments":["then"]},{"Key":"'?', then","Fragments":["query.size"]},{"Key":"then query.size","Fragments":["is"]},{"Key":"query.size is","Fragments":["\u003e"]},{"Key":"is \u003e","Fragments":["0."]},{"Key":"\u003e 0.","Fragments":["I"]},{"Key":"0. I","Fragments":["think"]},{"Key":"could simply","Fragments":["be:"]},{"Key":"return query.back()","Fragments":["=="]},{"Key":"query.back() ==","Fragments":["'?'"]},{"Key":"about std::all_of,","Fragments":["any_of,"]},{"Key":"std::all_of, any_of,","Fragments":["and"]},{"Key":"any_of, and","Fragments":["none_of."]},{"Key":"and none_of.","Fragments":["I"]},{"Key":"none_of. I","Fragments":["like"]},{"Key":"used these","Fragments":["functions."]},{"Key":"It's very","Fragments":["readable."]},{"Key":"very readable.","Fragments":["For"]},{"Key":"readable. For","Fragments":["me,"]},{"Key":"For me,","Fragments":["this","it","things"]},{"Key":"me, this","Fragments":["is"]},{"Key":"most readable","Fragments":["implementation","way","solution","for"]},{"Key":"readable implementation","Fragments":["I've"]},{"Key":"implementation I've","Fragments":["seen."]},{"Key":" Is","Fragments":["there","that","there","there","there","a","it","not"]},{"Key":"there a","Fragments":["particular","way","reason","reason","reason","specific","reason"]},{"Key":"a particular","Fragments":["reason,","letter","design,"]},{"Key":"particular reason,","Fragments":["except"]},{"Key":"reason, except","Fragments":["for"]},{"Key":"except for","Fragments":["personal"]},{"Key":"for personal","Fragments":["preference,"]},{"Key":"personal preference,","Fragments":["to"]},{"Key":"preference, to","Fragments":["use"]},{"Key":"class, instead","Fragments":["of"]},{"Key":"A single","Fragments":["static","lower"]},{"Key":"single static","Fragments":["function"]},{"Key":"inside a","Fragments":["class","namespace"]},{"Key":"class seems","Fragments":["like"]},{"Key":"like unnecessary,","Fragments":["you"]},{"Key":"unnecessary, you","Fragments":["could"]},{"Key":"namespace as","Fragments":["well:","well"]},{"Key":"hey(std::string const","Fragments":["\u0026);"]},{"Key":" Hmm,","Fragments":["I","is","I","I"]},{"Key":"Hmm, I","Fragments":["am","guess","guess"]},{"Key":"am not","Fragments":["sure","going","too","modifying","sure","familiar","familiar","an","an","surprised"]},{"Key":"is new","Fragments":["in"]},{"Key":"new in","Fragments":["C++11."]},{"Key":" Maybe","Fragments":["you","I","there"]},{"Key":"Maybe you","Fragments":["were"]},{"Key":"you were","Fragments":["thinking","to","given","going","supposed","using"]},{"Key":"were thinking","Fragments":["about"]},{"Key":"thinking about","Fragments":["a","the","why"]},{"Key":"a case","Fragments":["without","like","like:"]},{"Key":"case without","Fragments":["const?"]},{"Key":" char","Fragments":["const","c","c"]},{"Key":"char const","Fragments":["*"]},{"Key":"const *","Fragments":["does","with"]},{"Key":"* does","Fragments":["not"]},{"Key":"not convert","Fragments":["to","length()"]},{"Key":"convert to","Fragments":["string","lower","hours"]},{"Key":"Anyway, this","Fragments":["is"]},{"Key":"use string","Fragments":["const"]},{"Key":"Since it","Fragments":["is"]},{"Key":"is compatible","Fragments":["to"]},{"Key":"compatible to","Fragments":["c-strings,"]},{"Key":"to c-strings,","Fragments":["and"]},{"Key":"c-strings, and","Fragments":["is"]},{"Key":" Fixed","Fragments":["lambda"]},{"Key":"Fixed lambda","Fragments":["function.."]},{"Key":"lambda function..","Fragments":["however"]},{"Key":"function.. however","Fragments":["this"]},{"Key":"however this","Fragments":["implies"]},{"Key":"this implies","Fragments":["an"]},{"Key":"implies an","Fragments":["implicit"]},{"Key":"an implicit","Fragments":["conversion"]},{"Key":"implicit conversion","Fragments":["from"]},{"Key":"conversion from","Fragments":["bool"]},{"Key":"from bool","Fragments":["to","to"]},{"Key":"bool to","Fragments":["unsigned,","make","int"]},{"Key":"to unsigned,","Fragments":["it's"]},{"Key":"unsigned, it's","Fragments":["fine,"]},{"Key":"it's fine,","Fragments":["but"]},{"Key":"fine, but","Fragments":["I'm"]},{"Key":"sure it's","Fragments":["the","really"]},{"Key":"it's the","Fragments":["way","return"]},{"Key":"if it's","Fragments":["a","not","a","a","shouting","silence","yelling","a","worth","unreachable,","worth","true","false.","true","not_.","uppercase,","lowercase,"]},{"Key":"a question,","Fragments":["but","and","shouting,","or","yell"]},{"Key":"question, but","Fragments":["there"]},{"Key":"are spaces","Fragments":["at"]},{"Key":" @raoul","Fragments":[":"]},{"Key":"@raoul :","Fragments":["Looks"]},{"Key":": Looks","Fragments":["like"]},{"Key":"Looks like","Fragments":["isalpha","you","i"]},{"Key":"like isalpha","Fragments":["it's"]},{"Key":"isalpha it's","Fragments":["getting"]},{"Key":"it's getting","Fragments":["pulled"]},{"Key":"getting pulled","Fragments":["in"]},{"Key":"pulled in","Fragments":["by"]},{"Key":"in by","Fragments":["`#include"]},{"Key":"by `#include","Fragments":["\u003cstring\u003e`."]},{"Key":"`#include \u003cstring\u003e`.","Fragments":["I"]},{"Key":"\u003cstring\u003e`. I","Fragments":["didn't"]},{"Key":"that `\u003cstring\u003e`","Fragments":["included"]},{"Key":"`\u003cstring\u003e` included","Fragments":["`\u003ccctype\u003e`."]},{"Key":"included `\u003ccctype\u003e`.","Fragments":["Good"]},{"Key":"`\u003ccctype\u003e`. Good","Fragments":["practice"]},{"Key":"Good practice","Fragments":["would"]},{"Key":"practice would","Fragments":["probably"]},{"Key":"would probably","Fragments":["be","be","be","benefit","declare","generate"]},{"Key":"include that","Fragments":["header."]},{"Key":"as clean","Fragments":["as"]},{"Key":"clean as","Fragments":["possible."]},{"Key":"as possible.","Fragments":["Whilst","That","The","Code's"]},{"Key":"possible. Whilst","Fragments":["I"]},{"Key":"Whilst I","Fragments":["think"]},{"Key":"there would","Fragments":["probably","be"]},{"Key":"a faster","Fragments":["way"]},{"Key":"faster way","Fragments":["to"]},{"Key":"do this","Fragments":["then","procedurally","would","without","exercise."]},{"Key":"this then","Fragments":["strip"]},{"Key":"then strip","Fragments":["the"]},{"Key":"strip the","Fragments":["string","punctuation"]},{"Key":"string (copying","Fragments":["it"]},{"Key":"(copying it","Fragments":["in"]},{"Key":"the process)","Fragments":["and"]},{"Key":"process) and","Fragments":["then"]},{"Key":"then counting","Fragments":["the","the"]},{"Key":"counting the","Fragments":["words,","occurrences","occurrences","non-matching"]},{"Key":"the words,","Fragments":["I"]},{"Key":"words, I","Fragments":["can't"]},{"Key":"doing it","Fragments":["which","word"]},{"Key":"it which","Fragments":["would"]},{"Key":"would leave","Fragments":["the","you"]},{"Key":"leave the","Fragments":["code"]},{"Key":"a readable","Fragments":["state.","and","and","and"]},{"Key":"If anyone","Fragments":["can","has"]},{"Key":"anyone can","Fragments":["give"]},{"Key":"can give","Fragments":["some"]},{"Key":"give some","Fragments":["pointers"]},{"Key":"some pointers","Fragments":["on"]},{"Key":"pointers on","Fragments":["how"]},{"Key":"on how","Fragments":["to","'abc'","to","trim"]},{"Key":"be greatly","Fragments":["appreciated."]},{"Key":"quick implementation","Fragments":["which"]},{"Key":"implementation which","Fragments":["passes"]},{"Key":"which passes","Fragments":["all"]},{"Key":"tests, however","Fragments":["is"]},{"Key":"however is","Fragments":["pretty","to"]},{"Key":"is pretty","Fragments":["ugly","much","clever.","straightforward.","C-like,","bad","minimal","clearly"]},{"Key":"pretty ugly","Fragments":["for"]},{"Key":"ugly for","Fragments":["c++11"]},{"Key":"for c++11","Fragments":["with"]},{"Key":"c++11 with","Fragments":["an"]},{"Key":"explicit for","Fragments":["loop"]},{"Key":"loop iterating","Fragments":["over"]},{"Key":"over indices","Fragments":["of"]},{"Key":"indices of","Fragments":["the","the"]},{"Key":" Perhaps","Fragments":["a","a","make"]},{"Key":"Perhaps a","Fragments":["boost::zip_iterator","very"]},{"Key":"a boost::zip_iterator","Fragments":["or"]},{"Key":"boost::zip_iterator or","Fragments":["a"]},{"Key":"a some","Fragments":["other"]},{"Key":"other method","Fragments":["of"]},{"Key":"of simultaneously","Fragments":["iterating"]},{"Key":"simultaneously iterating","Fragments":["over"]},{"Key":"over two","Fragments":["containers"]},{"Key":"two containers","Fragments":["would"]},{"Key":"containers would","Fragments":["be"]},{"Key":"I personally","Fragments":["like","think","like"]},{"Key":"personally like","Fragments":["the","the"]},{"Key":"you rely","Fragments":["on"]},{"Key":"rely on","Fragments":["std::algorithms","built-in","```int```'s","the"]},{"Key":"on std::algorithms","Fragments":["to"]},{"Key":"std::algorithms to","Fragments":["trim"]},{"Key":"to trim","Fragments":["the","the"]},{"Key":"trim the","Fragments":["string","message.","input"]},{"Key":"if for","Fragments":["lower-case"]},{"Key":"for lower-case","Fragments":["letters."]},{"Key":"letters. :)","Fragments":["It"]},{"Key":":) It","Fragments":["is","is"]},{"Key":"also very","Fragments":["good"]},{"Key":"good that","Fragments":["you","you","there","there's","you"]},{"Key":"you thought","Fragments":["of"]},{"Key":"of making","Fragments":["the","the","these","a","a","it","a"]},{"Key":"default constructor","Fragments":["private.","as","and","behavior","was"]},{"Key":"just have","Fragments":["three","to","to"]},{"Key":"have three","Fragments":["minor","distinct"]},{"Key":"three minor","Fragments":["suggestions:"]},{"Key":" (1)","Fragments":["Maybe","Why"]},{"Key":"(1) Maybe","Fragments":["\"message\""]},{"Key":"Maybe \"message\"","Fragments":["or"]},{"Key":"\"message\" or","Fragments":["\"request\""]},{"Key":"or \"request\"","Fragments":["would"]},{"Key":"\"request\" would","Fragments":["be"]},{"Key":"string passed","Fragments":["to","to","in"]},{"Key":" (2)","Fragments":["Concerning","To"]},{"Key":"(2) Concerning","Fragments":["your"]},{"Key":"Concerning your","Fragments":["lambda-expressions,"]},{"Key":"your lambda-expressions,","Fragments":["I"]},{"Key":"lambda-expressions, I","Fragments":["prefer"]},{"Key":"prefer less","Fragments":["indented","variables."]},{"Key":"less indented","Fragments":["code."]},{"Key":"indented code.","Fragments":["That"]},{"Key":"code. That","Fragments":["said,"]},{"Key":"That said,","Fragments":["I","in","I","I'll","I"]},{"Key":"I suggest","Fragments":["the","a","an","that","using","you","putting","referring","its"]},{"Key":"suggest the","Fragments":["format"]},{"Key":" \u003ctab\u003e\u003ctab\u003equestion.rbegin(),","Fragments":["question.rend(),"]},{"Key":" \u003ctab\u003e\u003ctab\u003e[](std::string::value_type","Fragments":["val)"]},{"Key":"\u003ctab\u003e\u003ctab\u003e[](std::string::value_type val)","Fragments":["{"]},{"Key":"val) {","Fragments":["return"]},{"Key":"{ return","Fragments":["!std::isspace(val);","std::islower(c);","to_rna(c);","to_rna(c);"]},{"Key":"return !std::isspace(val);","Fragments":["}).base(),"]},{"Key":" (3)","Fragments":["Since","Morevoer,"]},{"Key":"(3) Since","Fragments":["C++11,"]},{"Key":"Since C++11,","Fragments":["std::string"]},{"Key":"C++11, std::string","Fragments":["has"]},{"Key":"std::string has","Fragments":["a"]},{"Key":"a back()-method,","Fragments":["so"]},{"Key":"back()-method, so","Fragments":["```*question.rbegin()```"]},{"Key":"so ```*question.rbegin()```","Fragments":["could"]},{"Key":"```*question.rbegin()``` could","Fragments":["be"]},{"Key":" Looking","Fragments":["at","forward","good!","at"]},{"Key":"Looking at","Fragments":["some","other","the"]},{"Key":"at some","Fragments":["of","point","documentation","other","point","of"]},{"Key":"code here","Fragments":["I've","*/"]},{"Key":"here I've","Fragments":["found"]},{"Key":"I've found","Fragments":["std::inner_product"]},{"Key":"found std::inner_product","Fragments":["which"]},{"Key":"std::inner_product which","Fragments":["is"]},{"Key":"pretty perfect","Fragments":["fit"]},{"Key":" Unfortunately","Fragments":["query.back()","there"]},{"Key":"Unfortunately query.back()","Fragments":["causes"]},{"Key":"query.back() causes","Fragments":["undefined"]},{"Key":"causes undefined","Fragments":["behavior","behavior,"]},{"Key":"when query","Fragments":["is"]},{"Key":"query is","Fragments":["empty.","not"]},{"Key":"empty. So","Fragments":["I","calling"]},{"Key":"that query","Fragments":["is"]},{"Key":"not empty","Fragments":["before"]},{"Key":"empty before","Fragments":["I"]},{"Key":"before I","Fragments":["can","came","use","re-read"]},{"Key":"can look","Fragments":["at"]},{"Key":"at its","Fragments":["last"]},{"Key":"its last","Fragments":["element."]},{"Key":" Non-member","Fragments":["begin"]},{"Key":"Non-member begin","Fragments":["and"]},{"Key":"begin and","Fragments":["end"]},{"Key":"and end","Fragments":["would","of","of","of","of","of","of"]},{"Key":"good idea.","Fragments":["Although",":)","It"]},{"Key":"idea. Although","Fragments":["it's"]},{"Key":"Although it's","Fragments":["a"]},{"Key":"bit annoying","Fragments":["since"]},{"Key":"annoying since","Fragments":["it's"]},{"Key":"since it's","Fragments":["longer","only"]},{"Key":"it's longer","Fragments":["to"]},{"Key":"longer to","Fragments":["write","get","write"]},{"Key":" Checking","Fragments":["for"]},{"Key":"Checking for","Fragments":["whitespace"]},{"Key":"'?' as","Fragments":["well."]},{"Key":"as well.","Fragments":["But","(And","IE","Using"]},{"Key":"well. But","Fragments":["the"]},{"Key":"conditions for","Fragments":["this","yelling/question/silence"]},{"Key":"exercise are","Fragments":["stated"]},{"Key":"are stated","Fragments":["very"]},{"Key":"stated very","Fragments":["loosely."]},{"Key":"very loosely.","Fragments":["Without"]},{"Key":"loosely. Without","Fragments":["the"]},{"Key":"Without the","Fragments":["unit"]},{"Key":"unit tests,","Fragments":["I'd","then"]},{"Key":"tests, I'd","Fragments":["have"]},{"Key":"this program","Fragments":["is","does","only","only","only"]},{"Key":"program is","Fragments":["supposed","basically"]},{"Key":"to output","Fragments":["-"]},{"Key":"output -","Fragments":["and"]},{"Key":"- and","Fragments":["the","I"]},{"Key":"don't cover","Fragments":["a","namespaces,"]},{"Key":"cover a","Fragments":["lot","response"]},{"Key":"of cases.","Fragments":["For"]},{"Key":"cases. For","Fragments":["example,","example"]},{"Key":"example, what","Fragments":["happens"]},{"Key":"I say","Fragments":["\"HELLO?\"?"]},{"Key":"say \"HELLO?\"?","Fragments":["Is"]},{"Key":"\"HELLO?\"? Is","Fragments":["that"]},{"Key":"Is that","Fragments":["a","proper"]},{"Key":"shout or","Fragments":["a","not"]},{"Key":"I'm actually","Fragments":["not","going"]},{"Key":"actually not","Fragments":["too"]},{"Key":"too concerned","Fragments":["about","about"]},{"Key":"concerned about","Fragments":["cases","factoring"]},{"Key":"about cases","Fragments":["that"]},{"Key":"cases that","Fragments":["aren't","are"]},{"Key":"aren't covered","Fragments":["by"]},{"Key":"covered by","Fragments":["the"]},{"Key":"tests as","Fragments":["there"]},{"Key":"are simply","Fragments":["too"]},{"Key":"simply too","Fragments":["many"]},{"Key":"too many","Fragments":["to"]},{"Key":"many to","Fragments":["cover."]},{"Key":"1) True,","Fragments":["I","I"]},{"Key":"True, I","Fragments":["forgot","could","could"]},{"Key":"I forgot","Fragments":["about","to","the","to"]},{"Key":"forgot about","Fragments":["that."]},{"Key":"also don't","Fragments":["really","need","need","understand","see"]},{"Key":"really lose","Fragments":["anything."]},{"Key":"lose anything.","Fragments":["I'm"]},{"Key":"anything. I'm","Fragments":["not"]},{"Key":"a fan","Fragments":["of","of"]},{"Key":"fan of","Fragments":["using","algorithms,"]},{"Key":"using namespaces","Fragments":["in"]},{"Key":"namespaces in","Fragments":["that"]},{"Key":"that way.","Fragments":["For","so","I","You"]},{"Key":"way. For","Fragments":["a"]},{"Key":"For a","Fragments":["single","simple","full"]},{"Key":"single function,","Fragments":["there"]},{"Key":"function, there","Fragments":["isn't","are","is"]},{"Key":"there isn't","Fragments":["much","anything"]},{"Key":"a difference.","Fragments":["But"]},{"Key":"difference. But","Fragments":["if"]},{"Key":"But if","Fragments":["I'd"]},{"Key":"if I'd","Fragments":["ever"]},{"Key":"I'd ever","Fragments":["need"]},{"Key":"ever need","Fragments":["helper"]},{"Key":"need helper","Fragments":["functions"]},{"Key":"functions or","Fragments":["persistent"]},{"Key":"or persistent","Fragments":["variables,"]},{"Key":"persistent variables,","Fragments":["a"]},{"Key":"variables, a","Fragments":["class"]},{"Key":"is decidedly","Fragments":["the"]},{"Key":"decidedly the","Fragments":["better"]},{"Key":"the better","Fragments":["alternative.","approach."]},{"Key":"better alternative.","Fragments":["If"]},{"Key":"alternative. If","Fragments":["compute()"]},{"Key":"If compute()","Fragments":["were"]},{"Key":"compute() were","Fragments":["part"]},{"Key":"were part","Fragments":["of"]},{"Key":"a larger","Fragments":["set","binary","program."]},{"Key":"larger set","Fragments":["of"]},{"Key":"of functions,","Fragments":["I'd"]},{"Key":"functions, I'd","Fragments":["have"]},{"Key":"have put","Fragments":["it"]},{"Key":"it into","Fragments":["a","\"thisis\".","a","rna.","the"]},{"Key":"it's mostly","Fragments":["preference"]},{"Key":"mostly preference","Fragments":["since"]},{"Key":"preference since","Fragments":["neither"]},{"Key":"since neither","Fragments":["option"]},{"Key":"neither option","Fragments":["really"]},{"Key":"option really","Fragments":["does"]},{"Key":"really does","Fragments":["anything"]},{"Key":"does anything","Fragments":["in"]},{"Key":"anything in","Fragments":["this","performance."]},{"Key":"Your functions","Fragments":["are","are","take"]},{"Key":"functions are","Fragments":["short","right","accessible","internal","great,","empty()","named.","not.","in"]},{"Key":"are short","Fragments":["and"]},{"Key":"short and","Fragments":["do","concise","sweet.","to","simple"]},{"Key":"and do","Fragments":["what","both"]},{"Key":"they would*.","Fragments":["I"]},{"Key":"would*. I","Fragments":["also"]},{"Key":"also did","Fragments":["not"]},{"Key":"not know","Fragments":["about","before","how","about","about"]},{"Key":"about islower","Fragments":["and"]},{"Key":"islower and","Fragments":["isupper"]},{"Key":"and isupper","Fragments":["from"]},{"Key":"isupper from","Fragments":["\"cctype\"."]},{"Key":"from \"cctype\".","Fragments":["+1"]},{"Key":"\"cctype\". +1","Fragments":["for"]},{"Key":"+1 for","Fragments":["that."]},{"Key":"for that.","Fragments":[":)","Stealing"]},{"Key":" (*","Fragments":["if"]},{"Key":"(* if","Fragments":["the"]},{"Key":"not \"ill-formed\";","Fragments":["see"]},{"Key":"\"ill-formed\"; see","Fragments":["(2)"]},{"Key":"see (2)","Fragments":["and"]},{"Key":"(2) and","Fragments":["(3))"]},{"Key":"think there","Fragments":["are"]},{"Key":"some things","Fragments":["to","researching"]},{"Key":"things to","Fragments":["improve","take","think"]},{"Key":"to improve","Fragments":["in","it.","my","readability.","the","it."]},{"Key":"improve in","Fragments":["your"]},{"Key":"(1) Why","Fragments":["doesn't"]},{"Key":"Why doesn't","Fragments":["```return"]},{"Key":"doesn't ```return","Fragments":["!std::none_of(str.begin(),"]},{"Key":"```return !std::none_of(str.begin(),","Fragments":["str.end(),"]},{"Key":"!std::none_of(str.begin(), str.end(),","Fragments":["islower)```"]},{"Key":"str.end(), islower)```","Fragments":["suffice"]},{"Key":"islower)``` suffice","Fragments":["to"]},{"Key":"suffice to","Fragments":["check"]},{"Key":"if someone","Fragments":["is","provides","did"]},{"Key":"is yelling","Fragments":["at"]},{"Key":"yelling at","Fragments":["Bob?"]},{"Key":"(2) To","Fragments":["cite"]},{"Key":"To cite","Fragments":["cplusplus.com:"]},{"Key":"cite cplusplus.com:","Fragments":["\"This"]},{"Key":"cplusplus.com: \"This","Fragments":["function"]},{"Key":"\"This function","Fragments":["(\"back()\")"]},{"Key":"function (\"back()\")","Fragments":["shall"]},{"Key":"(\"back()\") shall","Fragments":["not"]},{"Key":"shall not","Fragments":["be"]},{"Key":"called on","Fragments":["empty","an"]},{"Key":"(3) Morevoer,","Fragments":["bob::is_asking(\"What"]},{"Key":"Morevoer, bob::is_asking(\"What","Fragments":["did"]},{"Key":"bob::is_asking(\"What did","Fragments":["you"]},{"Key":"did you","Fragments":["say?","run","use","choose","choose","use","use"]},{"Key":"you say?","Fragments":["\")"]},{"Key":"say? \")","Fragments":["evaluates"]},{"Key":"\") evaluates","Fragments":["to"]},{"Key":"evaluates to","Fragments":["false,"]},{"Key":"to false,","Fragments":["although"]},{"Key":"false, although","Fragments":["it"]},{"Key":"a question.","Fragments":["Since","This","But"]},{"Key":"question. Since","Fragments":["is_asking"]},{"Key":"Since is_asking","Fragments":["is"]},{"Key":"is_asking is","Fragments":["publically"]},{"Key":"is publically","Fragments":["accessible,"]},{"Key":"publically accessible,","Fragments":["it"]},{"Key":"accessible, it","Fragments":["must"]},{"Key":"it must","Fragments":["be","go"]},{"Key":"be reliable,","Fragments":["so"]},{"Key":"reliable, so","Fragments":["trimming"]},{"Key":"so trimming","Fragments":["the"]},{"Key":"trimming the","Fragments":["string","string"]},{"Key":"first would","Fragments":["be","help"]},{"Key":" (4)","Fragments":["I'd"]},{"Key":"(4) I'd","Fragments":["suggest"]},{"Key":"I'd suggest","Fragments":["to"]},{"Key":"suggest to","Fragments":["rename"]},{"Key":"to rename","Fragments":["your","the"]},{"Key":"rename your","Fragments":["functions.","expressions"]},{"Key":"your functions.","Fragments":["\"bob::is_asking\"","Others","The"]},{"Key":"functions. \"bob::is_asking\"","Fragments":["_could_"]},{"Key":"\"bob::is_asking\" _could_","Fragments":["be"]},{"Key":"_could_ be","Fragments":["misleading"]},{"Key":"be misleading","Fragments":["because"]},{"Key":"misleading because","Fragments":["it"]},{"Key":"it _reads_","Fragments":["like"]},{"Key":"_reads_ like","Fragments":["a"]},{"Key":"check _if","Fragments":["bob"]},{"Key":"_if bob","Fragments":["were"]},{"Key":"bob were","Fragments":["asking_,"]},{"Key":"were asking_,","Fragments":["but"]},{"Key":"asking_, but","Fragments":["what"]},{"Key":"happens is","Fragments":["you"]},{"Key":"is you","Fragments":["check"]},{"Key":"you check","Fragments":["if","whether","a","if","if"]},{"Key":"bob _is","Fragments":["asked_"]},{"Key":"_is asked_","Fragments":["about"]},{"Key":"asked_ about","Fragments":["something."]},{"Key":"about something.","Fragments":["So"]},{"Key":"something. So","Fragments":["what"]},{"Key":"So what","Fragments":["do","I","is"]},{"Key":"what do","Fragments":["you"]},{"Key":"about names","Fragments":["like"]},{"Key":"names like","Fragments":["\"is_yelled_at\",","'retval'","yelling,"]},{"Key":"like \"is_yelled_at\",","Fragments":["\"is_asked\"?"]},{"Key":"\"is_yelled_at\", \"is_asked\"?","Fragments":["Sadly,"]},{"Key":"\"is_asked\"? Sadly,","Fragments":["I"]},{"Key":"Sadly, I","Fragments":["can't"]},{"Key":"good expressive","Fragments":["name"]},{"Key":"expressive name","Fragments":["replacing"]},{"Key":"name replacing","Fragments":["\"is_mute\"."]},{"Key":"replacing \"is_mute\".","Fragments":["Any"]},{"Key":"\"is_mute\". Any","Fragments":["suggestions?"]},{"Key":"1) Yea,","Fragments":["the"]},{"Key":"Yea, the","Fragments":["mapped"]},{"Key":"the mapped","Fragments":["value","element"]},{"Key":"mapped value","Fragments":["is"]},{"Key":"is [value-initialized](http://en.cppreference.com/w/cpp/container/map/operator_at),","Fragments":["which"]},{"Key":"[value-initialized](http://en.cppreference.com/w/cpp/container/map/operator_at), which","Fragments":["is"]},{"Key":"is 0","Fragments":["for","and"]},{"Key":"0 for","Fragments":["ints."]},{"Key":"2) True.","Fragments":["Even"]},{"Key":"True. Even","Fragments":["if"]},{"Key":"not more","Fragments":["efficient,"]},{"Key":"more efficient,","Fragments":["it's"]},{"Key":"efficient, it's","Fragments":["probably"]},{"Key":"it's probably","Fragments":["cleaner","good"]},{"Key":"probably cleaner","Fragments":["to"]},{"Key":"cleaner to","Fragments":["have"]},{"Key":"have the","Fragments":["transform","same","same","advantage","same","initial","whole","3rd","latest","latest","string"]},{"Key":"the transform","Fragments":["outside","semantics."]},{"Key":"transform outside","Fragments":["the"]},{"Key":" Bob","Fragments":["-"]},{"Key":"- now","Fragments":["with"]},{"Key":"with 100%","Fragments":["more"]},{"Key":"100% more","Fragments":["std::begin()!"]},{"Key":"Looks weird","Fragments":["using"]},{"Key":"weird using","Fragments":["the"]},{"Key":"the using","Fragments":["declarations","statements","declaration","statement"]},{"Key":"using declarations","Fragments":["there;"]},{"Key":"declarations there;","Fragments":["probably"]},{"Key":"there; probably","Fragments":["not"]},{"Key":"probably not","Fragments":["worth","as","your"]},{"Key":"not worth","Fragments":["the","worrying"]},{"Key":"worth the","Fragments":["effort."]},{"Key":"someone provides","Fragments":["duplicates"]},{"Key":"provides duplicates","Fragments":["in"]},{"Key":"duplicates in","Fragments":["the","the"]},{"Key":"the candidate","Fragments":["list?","list","'abc'."]},{"Key":"candidate list?","Fragments":["Should"]},{"Key":"list? Should","Fragments":["your"]},{"Key":"Should your","Fragments":["algorithm","check"]},{"Key":"algorithm return","Fragments":["the"]},{"Key":"same value","Fragments":["twice?"]},{"Key":"why anagram","Fragments":["is"]},{"Key":"anagram is","Fragments":["a","the"]},{"Key":"separate method","Fragments":["in"]},{"Key":"namespace anagram","Fragments":["that","{"]},{"Key":"anagram that","Fragments":["just","exists"]},{"Key":"that just","Fragments":["returns","using","wraps"]},{"Key":"just returns","Fragments":["an"]},{"Key":"returns an","Fragments":["Anagrammer","`int`,"]},{"Key":"an Anagrammer","Fragments":["-"]},{"Key":"Anagrammer -","Fragments":["could"]},{"Key":"- could","Fragments":["be"]},{"Key":"if your","Fragments":["class","supposed","string"]},{"Key":"is named","Fragments":["anagram."]},{"Key":"I learned","Fragments":["C++","some"]},{"Key":"learned C++","Fragments":["regex"]},{"Key":"C++ regex","Fragments":["after"]},{"Key":"regex after","Fragments":["the"]},{"Key":"Bob question,","Fragments":["and"]},{"Key":"question, and","Fragments":["using","loop"]},{"Key":"and using","Fragments":["it","a","the"]},{"Key":"using it","Fragments":["in","in"]},{"Key":"this seemed","Fragments":["only","to"]},{"Key":"seemed only","Fragments":["natural."]},{"Key":"only natural.","Fragments":["A"]},{"Key":"natural. A","Fragments":["faster-running"]},{"Key":"A faster-running","Fragments":["solution"]},{"Key":"faster-running solution","Fragments":["involving"]},{"Key":"solution involving","Fragments":["checking"]},{"Key":"involving checking","Fragments":["the"]},{"Key":"type of","Fragments":["each","pattern","imput/output","prompt","this","idea","the"]},{"Key":"of each","Fragments":["character","of","other.","word.","letter","character,","function","message"]},{"Key":"each character","Fragments":["is","(though"]},{"Key":"probably doable,","Fragments":["but"]},{"Key":"doable, but","Fragments":["this"]},{"Key":"is simpler","Fragments":["and"]},{"Key":"simpler and","Fragments":["more"]},{"Key":"more understandable","Fragments":["imo."]},{"Key":"Just so","Fragments":["you"]},{"Key":"you know,","Fragments":["if"]},{"Key":"know, if","Fragments":["you"]},{"Key":"through a","Fragments":["string,","randomizer","particular"]},{"Key":"a string,","Fragments":["you","you","which"]},{"Key":"string, you","Fragments":["can","can","can"]},{"Key":"the syntax:","Fragments":["`for(char"]},{"Key":"syntax: `for(char","Fragments":["\u0026"]},{"Key":"`for(char \u0026","Fragments":["c:string)`."]},{"Key":"\u0026 c:string)`.","Fragments":["Same"]},{"Key":"c:string)`. Same","Fragments":["difference,"]},{"Key":"Same difference,","Fragments":["but"]},{"Key":"difference, but","Fragments":["that"]},{"Key":"- You","Fragments":["get","should"]},{"Key":"You get","Fragments":["the","the"]},{"Key":"the length","Fragments":["of","selection","of","of","of","is","function","of","of","with","wasn't","equals"]},{"Key":"message but","Fragments":["do"]},{"Key":"but do","Fragments":["not"]},{"Key":"its being","Fragments":["zero-length,"]},{"Key":"being zero-length,","Fragments":["then"]},{"Key":"zero-length, then","Fragments":["index"]},{"Key":"then index","Fragments":["into"]},{"Key":"index into","Fragments":["it"]},{"Key":"into it","Fragments":["in"]},{"Key":"negative direction.","Fragments":["If"]},{"Key":"direction. If","Fragments":["this"]},{"Key":"this passed","Fragments":["the"]},{"Key":"passed the","Fragments":["test"]},{"Key":"test then","Fragments":["it"]},{"Key":"then it","Fragments":["was","was","was","is","is","doesn't"]},{"Key":"was luck","Fragments":["that"]},{"Key":"luck that","Fragments":["you"]},{"Key":"you had","Fragments":["a","done","left","to"]},{"Key":"a null","Fragments":["byte","date."]},{"Key":"null byte","Fragments":["right"]},{"Key":"byte right","Fragments":["before"]},{"Key":"right before","Fragments":["the","you"]},{"Key":"string. Change","Fragments":["this"]},{"Key":"Change this","Fragments":["to"]},{"Key":"be safer,","Fragments":["or..."]},{"Key":"- When","Fragments":["in"]},{"Key":"When in","Fragments":["Rome,"]},{"Key":"in Rome,","Fragments":["do"]},{"Key":"Rome, do","Fragments":["as"]},{"Key":"do as","Fragments":["the","you"]},{"Key":"the Romans","Fragments":["do."]},{"Key":"Romans do.","Fragments":["Use"]},{"Key":"do. Use","Fragments":["C++"]},{"Key":"Use C++","Fragments":["functions,"]},{"Key":"C++ functions,","Fragments":["not"]},{"Key":"functions, not","Fragments":["C"]},{"Key":"not C","Fragments":["with"]},{"Key":"C with","Fragments":["classes."]},{"Key":"- Include","Fragments":["`cctype`"]},{"Key":"Include `cctype`","Fragments":["for"]},{"Key":"`cctype` for","Fragments":["its"]},{"Key":"its `islower()`","Fragments":["and"]},{"Key":"`islower()` and","Fragments":["`isupper()`"]},{"Key":"and `isupper()`","Fragments":["functions"]},{"Key":"`isupper()` functions","Fragments":["instead"]},{"Key":"using `msg[i]","Fragments":["\u003e="]},{"Key":"`msg[i] \u003e=","Fragments":["'A'"]},{"Key":"\u0026\u0026 msg[i]","Fragments":["\u003c="]},{"Key":"msg[i] \u003c=","Fragments":["'Z'`."]},{"Key":"'Z'`. It's","Fragments":["much"]},{"Key":"It's much","Fragments":["clearer"]},{"Key":"has negligible","Fragments":["performance"]},{"Key":"negligible performance","Fragments":["impact."]},{"Key":"for tabs,","Fragments":["newlines,"]},{"Key":"newlines, line","Fragments":["feeds,"]},{"Key":"line feeds,","Fragments":["etc."]},{"Key":"feeds, etc.","Fragments":["in"]},{"Key":"etc. in","Fragments":["addition","order"]},{"Key":"in addition","Fragments":["to"]},{"Key":"to spaces","Fragments":["for"]},{"Key":"spaces for","Fragments":["a"]},{"Key":"a blank","Fragments":["response."]},{"Key":"blank response.","Fragments":["`cctype`'s"]},{"Key":"response. `cctype`'s","Fragments":["`isspace()`"]},{"Key":"`cctype`'s `isspace()`","Fragments":["is"]},{"Key":"`isspace()` is","Fragments":["nice"]},{"Key":"nice for","Fragments":["this.","statically"]},{"Key":"It's good","Fragments":["practice"]},{"Key":"good practice","Fragments":["to","(but"]},{"Key":"practice to","Fragments":["const","put"]},{"Key":"to const","Fragments":["anything","referencing","variables.","std::string"]},{"Key":"const anything","Fragments":["that"]},{"Key":"anything that","Fragments":["shouldn't","isn't","doesn't"]},{"Key":"that shouldn't","Fragments":["change."]},{"Key":"shouldn't change.","Fragments":["Use"]},{"Key":"change. Use","Fragments":["`const"]},{"Key":"Use `const","Fragments":["char","std::string\u0026`"]},{"Key":"`const char","Fragments":["*"]},{"Key":"* const","Fragments":["string`"]},{"Key":"const string`","Fragments":["or"]},{"Key":"string` or","Fragments":["`const"]},{"Key":"or `const","Fragments":["char[]"]},{"Key":"`const char[]","Fragments":["string`"]},{"Key":"char[] string`","Fragments":["for"]},{"Key":"string` for","Fragments":["the"]},{"Key":"various responses,","Fragments":["or,"]},{"Key":"responses, or,","Fragments":["again,"]},{"Key":"or, again,","Fragments":["use"]},{"Key":"again, use","Fragments":["C++"]},{"Key":"use C++","Fragments":["strings.","you"]},{"Key":"am a","Fragments":["C","fan"]},{"Key":"C programmer,","Fragments":["and"]},{"Key":"programmer, and","Fragments":["subconsciously"]},{"Key":"and subconsciously","Fragments":["write"]},{"Key":"subconsciously write","Fragments":["C99-like"]},{"Key":"write C99-like","Fragments":["code"]},{"Key":"C99-like code","Fragments":["in"]},{"Key":"in any","Fragments":["language","way","way."]},{"Key":"any language","Fragments":["I"]},{"Key":"to learn.","Fragments":["Please"]},{"Key":"learn. Please","Fragments":["offer"]},{"Key":"Please offer","Fragments":["advice"]},{"Key":"offer advice","Fragments":["as"]},{"Key":"advice as","Fragments":["to"]},{"Key":"to how","Fragments":["I","it's","many","this"]},{"Key":"how I","Fragments":["can","approached","solved","created","created","created","created","implement","implement","implement","defined","grew","could","defined","coded,","can","was","can"]},{"Key":"can better","Fragments":["make"]},{"Key":"better make","Fragments":["use"]},{"Key":"of C++'s","Fragments":["OO/functional"]},{"Key":"C++'s OO/functional","Fragments":["features."]},{"Key":"been so","Fragments":["much"]},{"Key":"so much","Fragments":["cleaner","for","that"]},{"Key":"cleaner if","Fragments":["a"]},{"Key":"word was","Fragments":["considered"]},{"Key":"was considered","Fragments":["anagram"]},{"Key":"considered anagram","Fragments":["of"]},{"Key":"anagram of","Fragments":["itself.","the","'cca'.","'cca'."]},{"Key":"of itself.","Fragments":["Since"]},{"Key":"itself. Since","Fragments":["that's"]},{"Key":"Since that's","Fragments":["not"]},{"Key":"case I","Fragments":["have","find"]},{"Key":"use two","Fragments":["member"]},{"Key":"two member","Fragments":["variables,"]},{"Key":"member variables,","Fragments":["one","ouch."]},{"Key":"variables, one","Fragments":["with"]},{"Key":"one with","Fragments":["the","the","STL","Boost."]},{"Key":"word and","Fragments":["one","iterate","_then_","inserted","inserted","by","return"]},{"Key":"and one","Fragments":["with","in","with","problem"]},{"Key":"sorted version","Fragments":["of"]},{"Key":"version of","Fragments":["the","c++11,","the"]},{"Key":"the word,","Fragments":["in"]},{"Key":"word, in","Fragments":["this"]},{"Key":"way I","Fragments":["sort","understand","could","read","could","see","did"]},{"Key":"sort it","Fragments":["just","out."]},{"Key":"just once,","Fragments":["and"]},{"Key":"once, and","Fragments":["not"]},{"Key":"not at","Fragments":["every"]},{"Key":"at every","Fragments":["loop.."]},{"Key":"If you'd","Fragments":["like"]},{"Key":"you'd like","Fragments":["it"]},{"Key":"like it","Fragments":["to","was","...","should","isn't","is","might"]},{"Key":"more c++,","Fragments":["you"]},{"Key":"c++, you","Fragments":["can"]},{"Key":"can try","Fragments":["to"]},{"Key":" something","Fragments":["like"]},{"Key":"for (int","Fragments":["i"]},{"Key":"(int i","Fragments":["=","="]},{"Key":"i =","Fragments":["0;","0;","0;","0;","2;","0;","3,","words.begin();"]},{"Key":"= 0;","Fragments":["i","i","i","i","i"]},{"Key":"0; i","Fragments":["\u003c","\u003c","\u003c","\u003c","\u003c"]},{"Key":"i \u003c","Fragments":["message.length();","length;","question.size();","str1.length()","phrase.length();","word.length().","something.length()`."]},{"Key":"\u003c message.length();","Fragments":["i++)"]},{"Key":"message.length(); i++)","Fragments":["{"]},{"Key":"c =","Fragments":["message[i];","toupper(","tolower(","phrase.at(","to_rna(c);","to_rna(c);"]},{"Key":"if (c","Fragments":["!="]},{"Key":"(c !=","Fragments":["'"]},{"Key":"!= '","Fragments":["')","')"]},{"Key":"' ')","Fragments":["{"]},{"Key":" is_anything","Fragments":["=","=="]},{"Key":"is_anything =","Fragments":["true;"]},{"Key":" could","Fragments":["become"]},{"Key":"could become","Fragments":["something"]},{"Key":"become something","Fragments":["like:"]},{"Key":"for (auto\u0026","Fragments":["it","c:","c:","word"]},{"Key":"(auto\u0026 it","Fragments":[":"]},{"Key":"is_anything ==","Fragments":["(it"]},{"Key":"== (it","Fragments":["!="]},{"Key":"should try","Fragments":["to"]},{"Key":"a generic","Fragments":["code","name.","solution"]},{"Key":"generic code","Fragments":["that"]},{"Key":"would work","Fragments":["in","just"]},{"Key":"work in","Fragments":["every"]},{"Key":"every situation,","Fragments":["not"]},{"Key":"situation, not","Fragments":["just"]},{"Key":"the testcase.","Fragments":["Instead"]},{"Key":"testcase. Instead","Fragments":["of"]},{"Key":"Instead of","Fragments":["checking","using","`(tmp","speech.at(speech.size()-1)","`for(unsigned","using","doing","incorrectly","creating","a","using","copying"]},{"Key":"of checking","Fragments":["for","for","some","length"]},{"Key":"the exact","Fragments":["sentence,","amount","same","opposite","same"]},{"Key":"exact sentence,","Fragments":["you"]},{"Key":"sentence, you","Fragments":["should"]},{"Key":"all capital","Fragments":["(for","letters"]},{"Key":"capital (for","Fragments":["yelling),"]},{"Key":"(for yelling),","Fragments":["or"]},{"Key":"yelling), or","Fragments":["if"]},{"Key":"it ends","Fragments":["with"]},{"Key":"mark (which","Fragments":["represents"]},{"Key":"(which represents","Fragments":["a"]},{"Key":"represents a","Fragments":["question)."]},{"Key":" Ah,","Fragments":["I","ok.","I"]},{"Key":"Ah, I","Fragments":["was","didn't"]},{"Key":"was looking","Fragments":["at","at"]},{"Key":"at my","Fragments":["local","stuff!","solution,","local"]},{"Key":"my local","Fragments":["copy","copy,"]},{"Key":"local copy","Fragments":["and","before"]},{"Key":"copy and","Fragments":["it's","the"]},{"Key":"and it's","Fragments":["not","clear","Friday,","nice","used"]},{"Key":"the same.","Fragments":["My","I'll"]},{"Key":"same. My","Fragments":["mistake,"]},{"Key":"My mistake,","Fragments":["apologies."]},{"Key":"- I've","Fragments":["omitted","also","worked"]},{"Key":"I've omitted","Fragments":["braces"]},{"Key":"omitted braces","Fragments":["from"]},{"Key":"braces from","Fragments":["control"]},{"Key":"from control","Fragments":["statements"]},{"Key":"control statements","Fragments":["where"]},{"Key":"statements where","Fragments":["possible."]},{"Key":"use `else`","Fragments":["unnecessarily"]},{"Key":"`else` unnecessarily","Fragments":["in"]},{"Key":"unnecessarily in","Fragments":["`bob::hey`"]},{"Key":"in `bob::hey`","Fragments":["for"]},{"Key":"`bob::hey` for","Fragments":["better"]},{"Key":"for better","Fragments":["readability."]},{"Key":"I've also","Fragments":["factored"]},{"Key":"also factored","Fragments":["the"]},{"Key":"factored the","Fragments":["message"]},{"Key":"message types","Fragments":["out"]},{"Key":"types out","Fragments":["into"]},{"Key":"out into","Fragments":["individual","a","other","constants.","functions,","functions"]},{"Key":"into individual","Fragments":["functions;"]},{"Key":"individual functions;","Fragments":["the"]},{"Key":"functions; the","Fragments":["program"]},{"Key":"the program","Fragments":["would","better?","will","returns","should","quit","fail","(see","in"]},{"Key":"program would","Fragments":["be"]},{"Key":"be significantly","Fragments":["shorter","faster."]},{"Key":"significantly shorter","Fragments":["without"]},{"Key":"shorter without","Fragments":["them"]},{"Key":"without them","Fragments":["but"]},{"Key":"them but","Fragments":["also"]},{"Key":"but also","Fragments":["practically","numbers"]},{"Key":"also practically","Fragments":["illegible."]},{"Key":"you made","Fragments":["a","the","that","two"]},{"Key":"made a","Fragments":["helper","Makefile,","class","great","namespace","new","'hey'"]},{"Key":"a helper","Fragments":["class","function","function.","```compute_impl()```","function.","function."]},{"Key":"helper class","Fragments":["to"]},{"Key":"class to","Fragments":["abstract","a","the","perform"]},{"Key":"to abstract","Fragments":["away"]},{"Key":"abstract away","Fragments":["matching"]},{"Key":"away matching","Fragments":["anagrams."]},{"Key":"matching anagrams.","Fragments":["Some"]},{"Key":"anagrams. Some","Fragments":["comments:"]},{"Key":"1) It","Fragments":["would"]},{"Key":"be cheaper","Fragments":["to"]},{"Key":"cheaper to","Fragments":["preprocess"]},{"Key":"to preprocess","Fragments":["the"]},{"Key":"preprocess the","Fragments":["string"]},{"Key":"string than","Fragments":["to"]},{"Key":"than to","Fragments":["query","copy.","compare"]},{"Key":"to query","Fragments":["a"]},{"Key":"query a","Fragments":["map"]},{"Key":"map character","Fragments":["by"]},{"Key":"character by","Fragments":["character","character"]},{"Key":"by character","Fragments":["for","comparison."]},{"Key":"character for","Fragments":["each"]},{"Key":"for each","Fragments":["candidate","response","case.","test","function","of","of","one","one","of","one","one","N","task","trial","case:","condition","loops.","loop","individual"]},{"Key":"2) What","Fragments":["happens"]},{"Key":"same candidate","Fragments":["is","is"]},{"Key":"candidate is","Fragments":["present","present"]},{"Key":"is present","Fragments":["multiple","in"]},{"Key":"present multiple","Fragments":["times"]},{"Key":"multiple times","Fragments":["in","doesn't","in"]},{"Key":"times in","Fragments":["the","your"]},{"Key":"the nitpick,","Fragments":["absurdist.","I"]},{"Key":"nitpick, absurdist.","Fragments":["No"]},{"Key":"absurdist. No","Fragments":["particular"]},{"Key":"No particular","Fragments":["reason","reason."]},{"Key":"particular reason","Fragments":["for"]},{"Key":"reason for","Fragments":["the","the","it?"]},{"Key":"the order,","Fragments":["I"]},{"Key":"order, I","Fragments":["was"]},{"Key":"was in","Fragments":["a"]},{"Key":"a hurry","Fragments":["when"]},{"Key":"hurry when","Fragments":["coding"]},{"Key":"when coding","Fragments":["this"]},{"Key":"coding this","Fragments":["one."]},{"Key":"this one.","Fragments":["So","At","No","It","And"]},{"Key":"one. So","Fragments":["after"]},{"Key":"So after","Fragments":["aeiou,"]},{"Key":"after aeiou,","Fragments":["I"]},{"Key":"aeiou, I","Fragments":["just"]},{"Key":"just put","Fragments":["in","the","the","sString.back()","this"]},{"Key":"the primes","Fragments":["randomly."]},{"Key":"primes randomly.","Fragments":["Below"]},{"Key":"randomly. Below","Fragments":["is"]},{"Key":"Below is","Fragments":["probably"]},{"Key":"probably a","Fragments":["better","better"]},{"Key":"better ordered","Fragments":["array:"]},{"Key":"A B","Fragments":["C"]},{"Key":"B C","Fragments":["D"]},{"Key":"C D","Fragments":["E"]},{"Key":"D E","Fragments":["F"]},{"Key":" 5","Fragments":["71"]},{"Key":"5 71","Fragments":["37"]},{"Key":"71 37","Fragments":["31"]},{"Key":"37 31","Fragments":["2"]},{"Key":"31 2","Fragments":["47"]},{"Key":" G","Fragments":["H"]},{"Key":"G H","Fragments":["I"]},{"Key":"H I","Fragments":["J"]},{"Key":"I J","Fragments":["K"]},{"Key":"J K","Fragments":["L"]},{"Key":" 59","Fragments":["23"]},{"Key":"59 23","Fragments":["11"]},{"Key":"23 11","Fragments":["89"]},{"Key":"11 89","Fragments":["79"]},{"Key":"89 79","Fragments":["29"]},{"Key":" M","Fragments":["N"]},{"Key":"M N","Fragments":["O"]},{"Key":"N O","Fragments":["P"]},{"Key":"O P","Fragments":["Q"]},{"Key":"P Q","Fragments":["R"]},{"Key":" 43","Fragments":["13"]},{"Key":"43 13","Fragments":["7"]},{"Key":"13 7","Fragments":["53"]},{"Key":"7 53","Fragments":["97"]},{"Key":"53 97","Fragments":["19"]},{"Key":" S","Fragments":["T"]},{"Key":"S T","Fragments":["U"]},{"Key":"T U","Fragments":["V"]},{"Key":"U V","Fragments":["W"]},{"Key":"V W","Fragments":["X"]},{"Key":" 17","Fragments":["3"]},{"Key":"17 3","Fragments":["41"]},{"Key":"3 41","Fragments":["73"]},{"Key":"41 73","Fragments":["61"]},{"Key":"73 61","Fragments":["83"]},{"Key":" Y","Fragments":["Z"]},{"Key":" 67","Fragments":["101"]},{"Key":"I obtained","Fragments":["this"]},{"Key":"obtained this","Fragments":["frequency"]},{"Key":"this frequency","Fragments":["list"]},{"Key":"frequency list","Fragments":["from"]},{"Key":"list from","Fragments":["wikipedia"]},{"Key":"from wikipedia","Fragments":["which"]},{"Key":"wikipedia which","Fragments":["I"]},{"Key":"should have","Fragments":["done","`==","your","coded","been","dug","used","mentioned","done","used","failed.","been.","considered","probably"]},{"Key":"have done","Fragments":["in","in","differently,","a","it","better.","in"]},{"Key":" Wanted","Fragments":["to","this"]},{"Key":"Wanted to","Fragments":["make"]},{"Key":"make an","Fragments":["optimized","array","answer"]},{"Key":"an optimized","Fragments":["version"]},{"Key":"optimized version","Fragments":["that"]},{"Key":"version that","Fragments":["only","avoids"]},{"Key":"that only","Fragments":["runs"]},{"Key":"only runs","Fragments":["through","on","on","on"]},{"Key":"runs through","Fragments":["the"]},{"Key":"string once.","Fragments":["And"]},{"Key":"once. And","Fragments":["as"]},{"Key":"And as","Fragments":["a"]},{"Key":"a bonus","Fragments":["it"]},{"Key":"bonus it","Fragments":["does"]},{"Key":"use \"algorithm\"","Fragments":["header."]},{"Key":"I come","Fragments":["from","back","up","back"]},{"Key":"come from","Fragments":["a","the","the"]},{"Key":"a Java","Fragments":["background"]},{"Key":"Java background","Fragments":["and"]},{"Key":"background and","Fragments":["have"]},{"Key":"have very","Fragments":["limited"]},{"Key":"very limited","Fragments":["c++"]},{"Key":"limited c++","Fragments":["experience."]},{"Key":"c++ experience.","Fragments":["The"]},{"Key":"experience. The","Fragments":["exercise"]},{"Key":"The exercise","Fragments":["was"]},{"Key":"exercise was","Fragments":["relatively","readability","fun"]},{"Key":"was relatively","Fragments":["easy"]},{"Key":"relatively easy","Fragments":["to","to","to","to","to"]},{"Key":"to solve.","Fragments":["The","I"]},{"Key":"solve. The","Fragments":["only"]},{"Key":"only real","Fragments":["hurdle"]},{"Key":"real hurdle","Fragments":["was"]},{"Key":"hurdle was","Fragments":["dealing"]},{"Key":"was dealing","Fragments":["with"]},{"Key":"dealing with","Fragments":["queries","was","indices.","```std::string```","psuedo-random","here:"]},{"Key":"with queries","Fragments":["that"]},{"Key":"queries that","Fragments":["have"]},{"Key":"that have","Fragments":["no"]},{"Key":"letters to","Fragments":["evaluate"]},{"Key":"to evaluate","Fragments":["if","if"]},{"Key":"evaluate if","Fragments":["it's","that's"]},{"Key":"not --","Fragments":["just"]},{"Key":"-- just","Fragments":["needed"]},{"Key":"just needed","Fragments":["to"]},{"Key":"needed to","Fragments":["realize","write","eek","do","do","move","do.","make"]},{"Key":"to realize","Fragments":["that"]},{"Key":"a char","Fragments":["that","to","*.","for"]},{"Key":"char that","Fragments":["returns"]},{"Key":"returns false","Fragments":["when"]},{"Key":"false when","Fragments":["evaluating"]},{"Key":"when evaluating","Fragments":["both"]},{"Key":"evaluating both","Fragments":["its"]},{"Key":"both its","Fragments":["upper"]},{"Key":"its upper","Fragments":["and"]},{"Key":"upper and","Fragments":["lower","lower"]},{"Key":"and lower","Fragments":["cases"]},{"Key":"lower cases","Fragments":["is"]},{"Key":"cases is","Fragments":["not"]},{"Key":" Yeah.","Fragments":["I"]},{"Key":"Yeah. I","Fragments":["realized"]},{"Key":"realized this","Fragments":["when","was"]},{"Key":"this when","Fragments":["I"]},{"Key":"was nitpicking","Fragments":["other"]},{"Key":"nitpicking other","Fragments":["people's"]},{"Key":"other people's","Fragments":["code.","implementations","solutions.","opinions.","solutions"]},{"Key":"people's code.","Fragments":["I"]},{"Key":"code. I","Fragments":["guess","constantly"]},{"Key":"guess I","Fragments":["didn't","got","should","had"]},{"Key":"didn't understand","Fragments":["the"]},{"Key":"understand the","Fragments":["exercises","benefit","question","regular","flow"]},{"Key":"the exercises","Fragments":["very"]},{"Key":"exercises very","Fragments":["well."]},{"Key":"simple namespace","Fragments":["instead"]},{"Key":" Remember,","Fragments":["the"]},{"Key":"Remember, the","Fragments":["purpose"]},{"Key":"purpose of","Fragments":["a","the","the","the","shuffling","all"]},{"Key":"used as","Fragments":["an","a","a"]},{"Key":"an object","Fragments":["factory.","oriented","oriented","oriented","oriented","are","in"]},{"Key":"Also, I","Fragments":["think","didn't","think","think","had","think","initially","think","need","like","think"]},{"Key":"think you","Fragments":["are","could","can't","don't","never","don't","are","can","can","could","should","are","could","should","just","need"]},{"Key":"very advanced","Fragments":["programmer."]},{"Key":"the new","Fragments":["for-loop","fangled","iteration","iteration","approach.","iteration.","```std::array```","\"for\"","ranged","iteration","for","C++11","range","last","string.","name","one."]},{"Key":"new for-loop","Fragments":["constructs"]},{"Key":"for-loop constructs","Fragments":["in"]},{"Key":"constructs in","Fragments":["C++11."]},{"Key":"in C++11.","Fragments":["The","It","ie"]},{"Key":"C++11. The","Fragments":["code"]},{"Key":"is very","Fragments":["readable.","concise,","simple","good.","simple,","unprofessional.","C-like,","C-like.","clear.","C","elaborate.","concise,"]},{"Key":"I maximize","Fragments":["readability"]},{"Key":"maximize readability","Fragments":["on"]},{"Key":"readability on","Fragments":["this","this"]},{"Key":"code. Also,","Fragments":["I"]},{"Key":"didn't quite","Fragments":["understand"]},{"Key":"understand it","Fragments":["at"]},{"Key":"it at","Fragments":["first.","around"]},{"Key":" Wow.","Fragments":["Regex"]},{"Key":"Wow. Regex","Fragments":["is"]},{"Key":"Regex is","Fragments":["probably","a"]},{"Key":"probably overkill","Fragments":["but"]},{"Key":"overkill but","Fragments":["I"]},{"Key":"still like","Fragments":["the"]},{"Key":"the solution","Fragments":["though!","is","for","is","will","becomes","looks","just"]},{"Key":"solution though!","Fragments":["I"]},{"Key":"though! I","Fragments":["think"]},{"Key":"think more","Fragments":["code"]},{"Key":"more code","Fragments":["comments"]},{"Key":"code comments","Fragments":["would"]},{"Key":"comments would","Fragments":["help."]},{"Key":"would help.","Fragments":["In"]},{"Key":"help. In","Fragments":["general,"]},{"Key":"In general,","Fragments":["regex","try"]},{"Key":"general, regex","Fragments":["is"]},{"Key":"really difficult","Fragments":["to"]},{"Key":"read to","Fragments":["those"]},{"Key":"to those","Fragments":["who","unfamiliar","that"]},{"Key":"those who","Fragments":["don't"]},{"Key":"who don't","Fragments":["know"]},{"Key":"know regex","Fragments":["so"]},{"Key":"regex so","Fragments":["I"]},{"Key":"that readability","Fragments":["is"]},{"Key":"readability is","Fragments":["bad.","better"]},{"Key":"Good use","Fragments":["of","of","of","of"]},{"Key":"of string::back(),","Fragments":["I"]},{"Key":"string::back(), I","Fragments":["wasn't"]},{"Key":"wasn't even","Fragments":["aware"]},{"Key":"even aware","Fragments":["of"]},{"Key":"aware of","Fragments":["that","the","the","boost::trim,","any","this"]},{"Key":"for traversing","Fragments":["the"]},{"Key":"traversing the","Fragments":["string","string"]},{"Key":"more times","Fragments":["than"]},{"Key":"times than","Fragments":["necessary,"]},{"Key":"than necessary,","Fragments":["I"]},{"Key":"necessary, I","Fragments":["don't"]},{"Key":"problem because","Fragments":["any_of"]},{"Key":"because any_of","Fragments":["will"]},{"Key":"any_of will","Fragments":["return"]},{"Key":"will return","Fragments":["once","true","true","false","```string::npos```","false.","1","a","1","true"]},{"Key":"return once","Fragments":["a"]},{"Key":"once a","Fragments":["single"]},{"Key":"single match","Fragments":["is"]},{"Key":"match is","Fragments":["found."]},{"Key":"things that","Fragments":["bother"]},{"Key":"that bother","Fragments":["me"]},{"Key":"bother me","Fragments":["about"]},{"Key":"me about","Fragments":["this.","it:","10"]},{"Key":"first is","Fragments":["that","probably"]},{"Key":"that ```#include","Fragments":["\u003cmap\u003e```"]},{"Key":"```#include \u003cmap\u003e```","Fragments":["is"]},{"Key":"\u003cmap\u003e``` is","Fragments":["required"]},{"Key":"required in","Fragments":["word_count.h"]},{"Key":"in word_count.h","Fragments":["to"]},{"Key":"word_count.h to","Fragments":["get"]},{"Key":"get compilation","Fragments":["working"]},{"Key":"compilation working","Fragments":["-"]},{"Key":"working -","Fragments":["If"]},{"Key":"understand correctly,","Fragments":["it's"]},{"Key":"correctly, it's","Fragments":["best"]},{"Key":"it's best","Fragments":["practice"]},{"Key":"best practice","Fragments":["to"]},{"Key":"put all","Fragments":["the"]},{"Key":"the ```#include```","Fragments":["directives"]},{"Key":"```#include``` directives","Fragments":["in"]},{"Key":"directives in","Fragments":["the"]},{"Key":"implementation rather","Fragments":["than"]},{"Key":" Secondly,","Fragments":["I'm"]},{"Key":"Secondly, I'm","Fragments":["sure"]},{"Key":"I'm sure","Fragments":["there","it"]},{"Key":"there must","Fragments":["be"]},{"Key":"to strip","Fragments":["the"]},{"Key":"the punctuation","Fragments":["marks","and"]},{"Key":"punctuation marks","Fragments":["without","contains"]},{"Key":"marks without","Fragments":["looping"]},{"Key":"without looping","Fragments":["through"]},{"Key":"looping through","Fragments":["the","the","keys","the"]},{"Key":"characters (although","Fragments":["presumably"]},{"Key":"(although presumably","Fragments":["there"]},{"Key":"presumably there","Fragments":["will"]},{"Key":"there will","Fragments":["be"]},{"Key":"a loop","Fragments":["through","will","of","to","(optimizations!).","index"]},{"Key":"characters at","Fragments":["a","the"]},{"Key":"a sufficiently","Fragments":["low"]},{"Key":"sufficiently low","Fragments":["level)."]},{"Key":" On","Fragments":["the","the","the","topic,","a"]},{"Key":"the plus","Fragments":["side,","side","method"]},{"Key":"plus side,","Fragments":["I"]},{"Key":"side, I","Fragments":["really"]},{"Key":"boost functions","Fragments":["for"]},{"Key":"for string","Fragments":["manipulation.","length","length","of"]},{"Key":"string manipulation.","Fragments":["Presumably"]},{"Key":"manipulation. Presumably","Fragments":["they"]},{"Key":"Presumably they","Fragments":["are"]},{"Key":"are nice","Fragments":["and"]},{"Key":"and efficient","Fragments":["as"]},{"Key":"efficient as","Fragments":["the","it","making"]},{"Key":"strings get","Fragments":["longer."]},{"Key":"get longer.","Fragments":["Also,"]},{"Key":"longer. Also,","Fragments":["I'd"]},{"Key":"Also, I'd","Fragments":["not","prefer"]},{"Key":"I'd not","Fragments":["come"]},{"Key":"not come","Fragments":["across"]},{"Key":"come across","Fragments":["the"]},{"Key":"across the","Fragments":["map"]},{"Key":"map data","Fragments":["type"]},{"Key":"data type","Fragments":["before"]},{"Key":"type before","Fragments":["which"]},{"Key":"before which","Fragments":["I"]},{"Key":"see being","Fragments":["useful."]},{"Key":"the control","Fragments":["flow"]},{"Key":"control flow","Fragments":["clean","in","of","branches,"]},{"Key":"flow clean","Fragments":["and"]},{"Key":"clean and","Fragments":["separated","it's","consistent.","consistent.","consistent.","simple"]},{"Key":"and separated","Fragments":["it"]},{"Key":"separated it","Fragments":["out"]},{"Key":"it out","Fragments":["into","into"]},{"Key":"function at","Fragments":["the","all."]},{"Key":"the yelling","Fragments":["detection,"]},{"Key":"yelling detection,","Fragments":["it"]},{"Key":"detection, it","Fragments":["seems"]},{"Key":"like kind","Fragments":["of"]},{"Key":"a mash","Fragments":["of"]},{"Key":"mash of","Fragments":["control"]},{"Key":"of control","Fragments":["options."]},{"Key":"control options.","Fragments":["It"]},{"Key":"options. It","Fragments":["took"]},{"Key":"It took","Fragments":["me","me","me","me","me"]},{"Key":"took me","Fragments":["a","a","a","forever","considerably","about"]},{"Key":"me a","Fragments":["while","long","while","feeling","bit"]},{"Key":"a while","Fragments":["to","to","loop,","loop","loop","loop,","and","trying"]},{"Key":"while to","Fragments":["understand","figure"]},{"Key":"understand your","Fragments":["logic","code"]},{"Key":"your logic","Fragments":["here."]},{"Key":"logic here.","Fragments":["It"]},{"Key":"looks like","Fragments":["you're","you're","that","your","very","a","a","I've","whenever","it","g++","maybe","you're"]},{"Key":"like you're","Fragments":["trying","testing","calling","running"]},{"Key":"you're trying","Fragments":["to","to"]},{"Key":"check 2","Fragments":["conditions"]},{"Key":"2 conditions","Fragments":["in"]},{"Key":"conditions in","Fragments":["your","your"]},{"Key":"your for","Fragments":["loop.","loop","loop","loop","loop."]},{"Key":"for loop.","Fragments":["You","A","It","You"]},{"Key":"loop. You","Fragments":["detect","don't","don't"]},{"Key":"You detect","Fragments":["yelling"]},{"Key":"detect yelling","Fragments":["if"]},{"Key":"yelling if","Fragments":["you"]},{"Key":"you detect","Fragments":["upper"]},{"Key":"detect upper","Fragments":["case"]},{"Key":"case and","Fragments":["you","I","sorted).","sorted","no"]},{"Key":"don't detect","Fragments":["any"]},{"Key":"detect any","Fragments":["lower"]},{"Key":"case. It","Fragments":["seems"]},{"Key":"the flow","Fragments":["here","from"]},{"Key":"flow here","Fragments":["could"]},{"Key":"here could","Fragments":["be"]},{"Key":"be cleaned","Fragments":["up"]},{"Key":"cleaned up","Fragments":["a"]},{"Key":"a little.","Fragments":["I"]},{"Key":"little. I","Fragments":["would"]},{"Key":"consider renaming","Fragments":["your"]},{"Key":"renaming your","Fragments":["variables"]},{"Key":"your variables","Fragments":["at"]},{"Key":"variables at","Fragments":["a"]},{"Key":"a minimum","Fragments":["to"]},{"Key":"minimum to","Fragments":["make"]},{"Key":"more readable.","Fragments":["Right","Besides","Allow","You"]},{"Key":"readable. Right","Fragments":["now"]},{"Key":"Right now","Fragments":["the"]},{"Key":"now the","Fragments":["variable","code"]},{"Key":"the variable","Fragments":["names","names","naming","initialization.","name"]},{"Key":"variable names","Fragments":["read","more","like","that","would","than"]},{"Key":"names read","Fragments":["like"]},{"Key":"read like","Fragments":["you're"]},{"Key":"you're testing","Fragments":["for"]},{"Key":"testing for","Fragments":["the","outputs","either","the"]},{"Key":"single uppercase","Fragments":["letter."]},{"Key":" Line","Fragments":["64","6:","25"]},{"Key":"Line 64","Fragments":["in"]},{"Key":"64 in","Fragments":["silent"]},{"Key":"in silent","Fragments":["would"]},{"Key":"silent would","Fragments":["probably"]},{"Key":"probably benefit","Fragments":["from"]},{"Key":"benefit from","Fragments":["the"]},{"Key":"the isspace","Fragments":["function."]},{"Key":"the cstring","Fragments":["library"]},{"Key":"cstring library","Fragments":["because"]},{"Key":"library because","Fragments":["it","I"]},{"Key":"was familiar","Fragments":["and"]},{"Key":"familiar and","Fragments":["the"]},{"Key":"the required","Fragments":["functionality","code","code","functionality"]},{"Key":"required functionality","Fragments":["is","to"]},{"Key":"functionality is","Fragments":["not"]},{"Key":"too complex.","Fragments":["Using"]},{"Key":"complex. Using","Fragments":["strpbrk"]},{"Key":"Using strpbrk","Fragments":["means"]},{"Key":"strpbrk means","Fragments":["a"]},{"Key":"means a","Fragments":["lot"]},{"Key":"of comparisons","Fragments":["have"]},{"Key":"comparisons have","Fragments":["to"]},{"Key":"be made,","Fragments":["but"]},{"Key":"made, but","Fragments":["I","that"]},{"Key":"to minimize","Fragments":["the"]},{"Key":"minimize the","Fragments":["amount"]},{"Key":"of checks","Fragments":["to"]},{"Key":"checks to","Fragments":["make","make"]},{"Key":"make against","Fragments":["the"]},{"Key":"against the","Fragments":["string","string","string","reference","characters"]},{"Key":"string (though","Fragments":["I"]},{"Key":"(though I","Fragments":["see"]},{"Key":"see I","Fragments":["could"]},{"Key":"have moved","Fragments":["the","those"]},{"Key":"moved the","Fragments":["third"]},{"Key":"the third","Fragments":["check","version"]},{"Key":"third check","Fragments":["to"]},{"Key":"check to","Fragments":["the","the","reduce","see"]},{"Key":"first or","Fragments":["second"]},{"Key":"or second","Fragments":["position"]},{"Key":"second position","Fragments":["to"]},{"Key":"position to","Fragments":["reduce"]},{"Key":"to reduce","Fragments":["strpbrk","the","looping","the"]},{"Key":"reduce strpbrk","Fragments":["calls)."]},{"Key":"Just looking","Fragments":["this"]},{"Key":"looking this","Fragments":["over,"]},{"Key":"this over,","Fragments":["I"]},{"Key":"over, I","Fragments":["don't"]},{"Key":"statements are.","Fragments":["Typically"]},{"Key":"are. Typically","Fragments":["I"]},{"Key":"Typically I","Fragments":["just"]},{"Key":"just see","Fragments":["using"]},{"Key":"see using","Fragments":["in"]},{"Key":"using in","Fragments":["conjunction","your"]},{"Key":"in conjunction","Fragments":["with"]},{"Key":"conjunction with","Fragments":["using"]},{"Key":"with using","Fragments":["a","bool"]},{"Key":"namespace, i.e.","Fragments":["\"using"]},{"Key":"i.e. \"using","Fragments":["namespace"]},{"Key":"namespace std;\"","Fragments":["That"]},{"Key":"std;\" That","Fragments":["statement"]},{"Key":"That statement","Fragments":["alone"]},{"Key":"statement alone","Fragments":["might"]},{"Key":"alone might","Fragments":["accomplish"]},{"Key":"might accomplish","Fragments":["what"]},{"Key":"accomplish what","Fragments":["you're"]},{"Key":"what you're","Fragments":["hoping","trying"]},{"Key":"you're hoping","Fragments":["for."]},{"Key":"think declaring","Fragments":["yelling,"]},{"Key":"declaring yelling,","Fragments":["saysNothing"]},{"Key":"yelling, saysNothing","Fragments":["and"]},{"Key":"saysNothing and","Fragments":["questioning"]},{"Key":"and questioning","Fragments":["as"]},{"Key":"questioning as","Fragments":["static"]},{"Key":"as static","Fragments":["was","because","local","local","?","won't"]},{"Key":"static was","Fragments":["unnecessary."]},{"Key":"was unnecessary.","Fragments":["They're"]},{"Key":"unnecessary. They're","Fragments":["not"]},{"Key":"They're not","Fragments":["part"]},{"Key":"class so","Fragments":["static"]},{"Key":"so static","Fragments":["is"]},{"Key":"static is","Fragments":["not","probably"]},{"Key":"a modifier","Fragments":["that"]},{"Key":"modifier that","Fragments":["really"]},{"Key":"that really","Fragments":["applies.","depends","helps!"]},{"Key":"really applies.","Fragments":["You"]},{"Key":"applies. You","Fragments":["could"]},{"Key":"probably drop","Fragments":["it"]},{"Key":"drop it","Fragments":["and"]},{"Key":"everything would","Fragments":["continue"]},{"Key":"would continue","Fragments":["to"]},{"Key":"continue to","Fragments":["work.","work."]},{"Key":"In hey,","Fragments":["you"]},{"Key":"hey, you","Fragments":["could"]},{"Key":"could simplify","Fragments":["this"]},{"Key":"simplify this","Fragments":["statement"]},{"Key":"this statement","Fragments":["by"]},{"Key":"statement by","Fragments":["removing"]},{"Key":"by removing","Fragments":["the","punctuation","redundant"]},{"Key":"removing the","Fragments":["else","counts"]},{"Key":"the else","Fragments":["clauses.","statement,","if"]},{"Key":"else clauses.","Fragments":["An"]},{"Key":"clauses. An","Fragments":["'if'"]},{"Key":"An 'if'","Fragments":["statement"]},{"Key":"'if' statement","Fragments":["that"]},{"Key":"statement that","Fragments":["contains"]},{"Key":"that contains","Fragments":["a","all","all","all","non-dna"]},{"Key":"contains a","Fragments":["'return'"]},{"Key":"a 'return'","Fragments":["clause"]},{"Key":"'return' clause","Fragments":["in"]},{"Key":"clause in","Fragments":["the"]},{"Key":"the main","Fragments":["body","function.","reason)."]},{"Key":"main body","Fragments":["does"]},{"Key":"body does","Fragments":["not"]},{"Key":"not need","Fragments":["an","to","to","to","copies","to"]},{"Key":"an else.","Fragments":["The"]},{"Key":"else. The","Fragments":["return","only"]},{"Key":"return short-circuits","Fragments":["the"]},{"Key":"short-circuits the","Fragments":["rest"]},{"Key":"rest of","Fragments":["the","the","the","the","the","the","the","the"]},{"Key":"function for","Fragments":["free.","readability"]},{"Key":"for free.","Fragments":["Same"]},{"Key":"free. Same","Fragments":["comment"]},{"Key":"Same comment","Fragments":["for"]},{"Key":"comment for","Fragments":["your","you"]},{"Key":"your yelling","Fragments":["function.","function,"]},{"Key":" Note","Fragments":["that","you"]},{"Key":"Note that","Fragments":["I","this"]},{"Key":"you separated","Fragments":["your"]},{"Key":"separated your","Fragments":["control"]},{"Key":"your control","Fragments":["flow"]},{"Key":"flow in","Fragments":["hey"]},{"Key":"in hey","Fragments":["from"]},{"Key":"hey from","Fragments":["the"]},{"Key":"the helper","Fragments":["functions","functions","with","functions"]},{"Key":"functions you","Fragments":["use","have"]},{"Key":"use to","Fragments":["make","make"]},{"Key":"the decisions.","Fragments":["it's"]},{"Key":"decisions. it's","Fragments":["good"]},{"Key":"it's good","Fragments":["best","to","that","you"]},{"Key":"good best","Fragments":["practice."]},{"Key":"the quiet","Fragments":["thing,"]},{"Key":"quiet thing,","Fragments":["I"]},{"Key":"thing, I","Fragments":["didn't"]},{"Key":"use _stringstream_","Fragments":["that"]},{"Key":"_stringstream_ that","Fragments":["way."]},{"Key":"way. so","Fragments":["that"]},{"Key":"an interesting","Fragments":["implementation.","exercise","choice.","use","idea","container","introduction"]},{"Key":"the map;","Fragments":["it"]},{"Key":"map; it","Fragments":["makes"]},{"Key":"clear what","Fragments":["sort","this"]},{"Key":"what sort","Fragments":["of"]},{"Key":"of response","Fragments":["is","from"]},{"Key":"response is","Fragments":["supposed","\"Whatever.\""]},{"Key":"be ejected","Fragments":["for"]},{"Key":"ejected for","Fragments":["a"]},{"Key":"a given","Fragments":["case,","sequence","string","length","message"]},{"Key":"given case,","Fragments":["and"]},{"Key":"case, and","Fragments":["makes","another","once"]},{"Key":"and makes","Fragments":["the","more","it","good","the","the"]},{"Key":"the list","Fragments":["of","of","a","until"]},{"Key":"list of","Fragments":["responses","books","every","tests,","the"]},{"Key":"of responses","Fragments":["easily"]},{"Key":"responses easily","Fragments":["expandable."]},{"Key":"are library","Fragments":["functions"]},{"Key":"the work","Fragments":["of","currently","of","of","of","of","of"]},{"Key":"work of","Fragments":["looking","counting","analysing","parsing","parsing","splitting"]},{"Key":"of looking","Fragments":["through","for"]},{"Key":"looking through","Fragments":["the"]},{"Key":"string letter","Fragments":["by"]},{"Key":"letter by","Fragments":["letter?"]},{"Key":"And moving","Fragments":["the"]},{"Key":"moving the","Fragments":["isQuestion","word","actions","declaration"]},{"Key":"the isQuestion","Fragments":["check"]},{"Key":"isQuestion check","Fragments":["to"]},{"Key":"start would","Fragments":["eliminate"]},{"Key":"would eliminate","Fragments":["the"]},{"Key":"eliminate the","Fragments":["need","need","calls","performance","`switch`,","potential"]},{"Key":"to parse","Fragments":["through","the","at"]},{"Key":"parse through","Fragments":["the"]},{"Key":"that corner","Fragments":["case."]},{"Key":" Moved","Fragments":["to","to","the","normalized","FINE"]},{"Key":"Moved to","Fragments":["namespaces","the"]},{"Key":"to namespaces","Fragments":["instead","so"]},{"Key":"namespaces instead","Fragments":["of"]},{"Key":"of class.","Fragments":["Still"]},{"Key":"class. Still","Fragments":["using"]},{"Key":"Still using","Fragments":["the"]},{"Key":"the old","Fragments":["cstring.","data"]},{"Key":"old cstring.","Fragments":["Encapsulated"]},{"Key":"cstring. Encapsulated","Fragments":["functionality"]},{"Key":"Encapsulated functionality","Fragments":["away"]},{"Key":"functionality away","Fragments":["from"]},{"Key":"the bob::hey","Fragments":["code","function."]},{"Key":"the overall","Fragments":["organization","control","work","time","complexity","complexity"]},{"Key":"overall organization","Fragments":["here."]},{"Key":" Stylistically,","Fragments":["I"]},{"Key":"Stylistically, I","Fragments":["think"]},{"Key":"readable without","Fragments":["all"]},{"Key":"without all","Fragments":["the"]},{"Key":"braces after","Fragments":["if/for"]},{"Key":"after if/for","Fragments":["statements"]},{"Key":"if/for statements","Fragments":["with"]},{"Key":"one statement","Fragments":["inside."]},{"Key":"readable by","Fragments":["using"]},{"Key":"using more","Fragments":["std::string"]},{"Key":"more std::string","Fragments":["functions,"]},{"Key":"std::string functions,","Fragments":["like"]},{"Key":"functions, like","Fragments":["back()"]},{"Key":"like back()","Fragments":["for"]},{"Key":"back() for","Fragments":["example."]},{"Key":"overall control","Fragments":["flow"]},{"Key":"flow of","Fragments":["the"]},{"Key":"Why don't","Fragments":["you"]},{"Key":"functions available","Fragments":["to"]},{"Key":"to std::string,","Fragments":["and"]},{"Key":"std::string, and","Fragments":["try"]},{"Key":"and try","Fragments":["using","again.","and","to"]},{"Key":"those to","Fragments":["simplify"]},{"Key":" (minor","Fragments":["note:"]},{"Key":"(minor note:","Fragments":["it's"]},{"Key":"note: it's","Fragments":["spelled"]},{"Key":"it's spelled","Fragments":["'alphabet')"]},{"Key":"really know","Fragments":["if","which","regex,"]},{"Key":"if I'm","Fragments":["using","doing","wrong","mistaken!"]},{"Key":"namespace correctly,","Fragments":["or"]},{"Key":"correctly, or","Fragments":["if"]},{"Key":"if my","Fragments":["organization","input"]},{"Key":"my organization","Fragments":["of"]},{"Key":"organization of","Fragments":["declarations"]},{"Key":"of declarations","Fragments":["and"]},{"Key":"declarations and","Fragments":["functions"]},{"Key":"and functions","Fragments":["makes","are"]},{"Key":"functions makes","Fragments":["sense."]},{"Key":"also think","Fragments":["that","the","it"]},{"Key":"of `int`","Fragments":["accumulators","just","just"]},{"Key":"`int` accumulators","Fragments":["to"]},{"Key":"accumulators to","Fragments":["count"]},{"Key":"to count","Fragments":["the","the"]},{"Key":"count the","Fragments":["appearance","number","occurence","number"]},{"Key":"the appearance","Fragments":["of"]},{"Key":"appearance of","Fragments":["different"]},{"Key":"of different","Fragments":["characters","lengths."]},{"Key":"different characters","Fragments":["is"]},{"Key":"characters is","Fragments":["not"]},{"Key":"really the","Fragments":["most"]},{"Key":"the deductions","Fragments":["necessary."]},{"Key":"deductions necessary.","Fragments":["I"]},{"Key":"necessary. I","Fragments":["think"]},{"Key":"this an","Fragments":["O(n)"]},{"Key":"an O(n)","Fragments":["approach,"]},{"Key":"O(n) approach,","Fragments":["which"]},{"Key":"approach, which","Fragments":["doesn't"]},{"Key":"which doesn't","Fragments":["sound","support"]},{"Key":"doesn't sound","Fragments":["bad?"]},{"Key":"sound bad?","Fragments":["But"]},{"Key":"bad? But","Fragments":["perhaps"]},{"Key":"But perhaps","Fragments":["there's"]},{"Key":"perhaps there's","Fragments":["a"]},{"Key":"there's a","Fragments":["way","smarter","test","problem","potential","bug"]},{"Key":"making these","Fragments":["deductions"]},{"Key":"these deductions","Fragments":["in"]},{"Key":"deductions in","Fragments":["O(log"]},{"Key":"in O(log","Fragments":["n)"]},{"Key":"O(log n)","Fragments":["time."]},{"Key":"n) time.","Fragments":["I"]},{"Key":"time. I","Fragments":["wouldn't","can't"]},{"Key":"wouldn't really","Fragments":["know."]},{"Key":"default case","Fragments":["for"]},{"Key":"case for","Fragments":["the"]},{"Key":"the `respond()`","Fragments":["function"]},{"Key":"`respond()` function","Fragments":["out"]},{"Key":"function out","Fragments":["of"]},{"Key":"of habit,","Fragments":["but"]},{"Key":"habit, but","Fragments":["would"]},{"Key":"but would","Fragments":["it"]},{"Key":"would it","Fragments":["be","be"]},{"Key":"be okay","Fragments":["to"]},{"Key":"okay to","Fragments":["just"]},{"Key":"just assume","Fragments":["I'll"]},{"Key":"assume I'll","Fragments":["never"]},{"Key":"I'll never","Fragments":["call"]},{"Key":"never call","Fragments":["`respond()`",".back()"]},{"Key":"call `respond()`","Fragments":["without"]},{"Key":"`respond()` without","Fragments":["an"]},{"Key":"without an","Fragments":["appropriate","initialized"]},{"Key":"an appropriate","Fragments":["`enum","range"]},{"Key":"appropriate `enum","Fragments":["Response`?"]},{"Key":"pretty new","Fragments":["C++","to","to"]},{"Key":"new C++","Fragments":["programmer"]},{"Key":"C++ programmer","Fragments":["(I'm"]},{"Key":"programmer (I'm","Fragments":["5"]},{"Key":"(I'm 5","Fragments":["weeks"]},{"Key":"5 weeks","Fragments":["into"]},{"Key":"weeks into","Fragments":["an"]},{"Key":"an Intro","Fragments":["to"]},{"Key":"Intro to","Fragments":["C++"]},{"Key":"to C++","Fragments":["class","so","projects.","as"]},{"Key":"C++ class","Fragments":["at"]},{"Key":"a local","Fragments":["Community","reference","reference","reference","copy","variable"]},{"Key":"local Community","Fragments":["College)"]},{"Key":"Community College)","Fragments":["but"]},{"Key":"College) but","Fragments":["I"]},{"Key":"little background","Fragments":["in"]},{"Key":"background in","Fragments":["Java,","Java"]},{"Key":"in Java,","Fragments":["Python,"]},{"Key":"Java, Python,","Fragments":["and"]},{"Key":"Python, and","Fragments":["a"]},{"Key":"a teensy","Fragments":["bit"]},{"Key":"teensy bit","Fragments":["of"]},{"Key":"of C.","Fragments":["Please"]},{"Key":"C. Please","Fragments":["let"]},{"Key":"Please let","Fragments":["me","me"]},{"Key":"me know","Fragments":["if","what","what"]},{"Key":"doing something","Fragments":["that"]},{"Key":"is definitive","Fragments":["bad"]},{"Key":"definitive bad","Fragments":["practice,"]},{"Key":"bad practice,","Fragments":["or"]},{"Key":"practice, or","Fragments":["if"]},{"Key":"if there's","Fragments":["a","any","whitespace"]},{"Key":"a smarter","Fragments":["way"]},{"Key":"smarter way","Fragments":["to"]},{"Key":"to organize","Fragments":["my"]},{"Key":"organize my","Fragments":["code"]},{"Key":"that will","Fragments":["help","be","spell"]},{"Key":"will help","Fragments":["me","as"]},{"Key":"me in","Fragments":["the","one"]},{"Key":"the long","Fragments":["run."]},{"Key":"my very","Fragments":["first"]},{"Key":"first serious","Fragments":["program"]},{"Key":"serious program","Fragments":["written"]},{"Key":"program written","Fragments":["in"]},{"Key":"written in","Fragments":["C++."]},{"Key":"in C++.","Fragments":["I","You"]},{"Key":"C++. I","Fragments":["don't"]},{"Key":"don't exactly","Fragments":["know"]},{"Key":"exactly know","Fragments":["why"]},{"Key":"know why","Fragments":["`for(char\u0026"]},{"Key":"why `for(char\u0026","Fragments":["c"]},{"Key":"`for(char\u0026 c","Fragments":[":"]},{"Key":": input)`","Fragments":["works","is"]},{"Key":"input)` works","Fragments":["like"]},{"Key":"works like","Fragments":["a"]},{"Key":"a foreach","Fragments":["loop"]},{"Key":"foreach loop","Fragments":["like"]},{"Key":"loop like","Fragments":["in"]},{"Key":"like in","Fragments":["PHP"]},{"Key":"in PHP","Fragments":["or"]},{"Key":"PHP or","Fragments":["a"]},{"Key":"in Python,","Fragments":["especially"]},{"Key":"Python, especially","Fragments":["because"]},{"Key":"especially because","Fragments":["the"]},{"Key":"the \u0026","Fragments":["operator","says"]},{"Key":"\u0026 operator","Fragments":["is"]},{"Key":"operator is","Fragments":["used","now","the"]},{"Key":"is used","Fragments":["to","up","instead","storing","storing","storing","for"]},{"Key":"the address","Fragments":["of"]},{"Key":"address of","Fragments":["an"]},{"Key":"of an","Fragments":["object.","enum","application","indirect","entire","entire","entire","if..then..else","attempt","object"]},{"Key":"an object.","Fragments":["Can"]},{"Key":"object. Can","Fragments":["someone"]},{"Key":"Can someone","Fragments":["explain"]},{"Key":"someone explain","Fragments":["this"]},{"Key":"explain this","Fragments":["to"]},{"Key":" once","Fragments":["you"]},{"Key":"once you","Fragments":["have","have"]},{"Key":"have pre-processed","Fragments":["your"]},{"Key":"pre-processed your","Fragments":["string,"]},{"Key":"your string,","Fragments":["you"]},{"Key":"an `istringstream`","Fragments":["object"]},{"Key":"`istringstream` object","Fragments":["to"]},{"Key":"object to","Fragments":["read"]},{"Key":"read in","Fragments":["each","this"]},{"Key":"in each","Fragments":["word","function","verse,"]},{"Key":"each word","Fragments":["and","against"]},{"Key":"and iterate","Fragments":["the","backwards"]},{"Key":"iterate the","Fragments":["count.","object"]},{"Key":"the count.","Fragments":["It"]},{"Key":"count. It","Fragments":["ends"]},{"Key":"It ends","Fragments":["up"]},{"Key":"ends up","Fragments":["being","traversing"]},{"Key":"up being","Fragments":["incredibly"]},{"Key":"being incredibly","Fragments":["simple"]},{"Key":" istringstream","Fragments":["stream(wordNoPunct);"]},{"Key":" map\u003cstring,","Fragments":["int\u003e"]},{"Key":"map\u003cstring, int\u003e","Fragments":["count;","expected{{\"all\",","expected{{\"one\",","expected{{\"first\",","expected{{","expected{{\"she\","]},{"Key":" while","Fragments":["(stream"]},{"Key":"while (stream","Fragments":["\u003e\u003e"]},{"Key":"(stream \u003e\u003e","Fragments":["word)"]},{"Key":"\u003e\u003e word)","Fragments":["{"]},{"Key":"is basically","Fragments":["how","the"]},{"Key":"basically how","Fragments":["I"]},{"Key":"I approached","Fragments":["the"]},{"Key":"approached the","Fragments":["problem.","problem."]},{"Key":"problem. One","Fragments":["critique","thing"]},{"Key":"One critique","Fragments":["though."]},{"Key":"critique though.","Fragments":["The"]},{"Key":"though. The","Fragments":["total","idea","=="]},{"Key":"The total","Fragments":["number"]},{"Key":"total number","Fragments":["of"]},{"Key":"of grains","Fragments":["is"]},{"Key":"grains is","Fragments":["equal"]},{"Key":"is equal","Fragments":["to"]},{"Key":"equal to","Fragments":["2^64"]},{"Key":"to 2^64","Fragments":["since"]},{"Key":"2^64 since","Fragments":["there"]},{"Key":"since there","Fragments":["are","are","is"]},{"Key":"are 64","Fragments":["squares"]},{"Key":"64 squares","Fragments":["on"]},{"Key":"squares on","Fragments":["a"]},{"Key":"a chessboard.","Fragments":["So"]},{"Key":"chessboard. So","Fragments":["you"]},{"Key":"return `pow(2,","Fragments":["64)`"]},{"Key":"`pow(2, 64)`","Fragments":["for"]},{"Key":"64)` for","Fragments":["your"]},{"Key":" the","Fragments":["`for(char","function","problem","class","'equal'","occurence","basic"]},{"Key":"the `for(char","Fragments":["\u0026c"]},{"Key":"`for(char \u0026c","Fragments":[":"]},{"Key":"\u0026c :","Fragments":["input)`"]},{"Key":"input)` is","Fragments":["called"]},{"Key":"is called","Fragments":["a","the","nitpicking","`m_anagram`","for","to","and"]},{"Key":"called a","Fragments":["**range"]},{"Key":"a **range","Fragments":["for**"]},{"Key":"**range for**","Fragments":["statement,"]},{"Key":"for** statement,","Fragments":["which"]},{"Key":"statement, which","Fragments":["was"]},{"Key":"which was","Fragments":["introduced","unecessary","failing.","an"]},{"Key":"was introduced","Fragments":["in"]},{"Key":"introduced in","Fragments":["C++11."]},{"Key":"C++11. It","Fragments":["iterates"]},{"Key":"It iterates","Fragments":["through"]},{"Key":"iterates through","Fragments":["the"]},{"Key":"elements in","Fragments":["a","distinct","the"]},{"Key":"given sequence","Fragments":["and"]},{"Key":"sequence and","Fragments":["performs"]},{"Key":"and performs","Fragments":["an"]},{"Key":"performs an","Fragments":["operation"]},{"Key":"an operation","Fragments":["on"]},{"Key":"operation on","Fragments":["each"]},{"Key":"on each","Fragments":["value"]},{"Key":"each value","Fragments":["in"]},{"Key":"The `\u0026`","Fragments":["in"]},{"Key":"`\u0026` in","Fragments":["this"]},{"Key":"this context","Fragments":["is"]},{"Key":"context is","Fragments":["not"]},{"Key":"the **address","Fragments":["of**"]},{"Key":"**address of**","Fragments":["operator,"]},{"Key":"of** operator,","Fragments":["it"]},{"Key":"operator, it","Fragments":["is"]},{"Key":"the **reference**","Fragments":["operator."]},{"Key":"**reference** operator.","Fragments":["Thus"]},{"Key":"operator. Thus","Fragments":["you"]},{"Key":"Thus you","Fragments":["are"]},{"Key":"are iterating","Fragments":["through","over","the","through"]},{"Key":"iterating through","Fragments":["each","strings","two","your","by","the"]},{"Key":"through each","Fragments":["element","letter"]},{"Key":"each element","Fragments":["of","in"]},{"Key":"element of","Fragments":["input","in"]},{"Key":"of input","Fragments":["by"]},{"Key":"To simplify","Fragments":["your"]},{"Key":"yelling function,","Fragments":["you"]},{"Key":"function, you","Fragments":["could","could"]},{"Key":"return false","Fragments":["the","for","out"]},{"Key":"false the","Fragments":["moment"]},{"Key":"the moment","Fragments":["a","you"]},{"Key":"moment a","Fragments":["lowercase"]},{"Key":"lowercase value","Fragments":["is"]},{"Key":" Inside","Fragments":["`bob::check_yelling`"]},{"Key":"Inside `bob::check_yelling`","Fragments":["you"]},{"Key":"`bob::check_yelling` you","Fragments":["shouldn't"]},{"Key":"you shouldn't","Fragments":["check","lose","use","be"]},{"Key":"shouldn't check","Fragments":["if"]},{"Key":"if `total_upper`","Fragments":["is"]},{"Key":"`total_upper` is","Fragments":["greater"]},{"Key":"greater than","Fragments":["`total_lower,`","99?","64"]},{"Key":"than `total_lower,`","Fragments":["instead,"]},{"Key":"`total_lower,` instead,","Fragments":["you"]},{"Key":"instead, you","Fragments":["should"]},{"Key":"is ALL","Fragments":["UPPERCASE"]},{"Key":"ALL UPPERCASE","Fragments":["(like"]},{"Key":"UPPERCASE (like","Fragments":["that)."]},{"Key":" Ok","Fragments":["thanks"]},{"Key":"Thanks so","Fragments":["much"]},{"Key":"much for","Fragments":["looking","those"]},{"Key":"for looking","Fragments":["and","at"]},{"Key":"looking and","Fragments":["great"]},{"Key":"and great","Fragments":["catch"]},{"Key":"great catch","Fragments":["on"]},{"Key":"catch on","Fragments":["my","`empty`"]},{"Key":"on my","Fragments":["yelling","system","JS","sample.","list","approach","linux","mac"]},{"Key":"my yelling","Fragments":["function."]},{"Key":"yelling function.","Fragments":["It"]},{"Key":"function. It","Fragments":["needed","might"]},{"Key":"It needed","Fragments":["simplification.","the"]},{"Key":"needed simplification.","Fragments":["Not"]},{"Key":"simplification. Not","Fragments":["only"]},{"Key":"Not only","Fragments":["could"]},{"Key":"only could","Fragments":["I"]},{"Key":"could I","Fragments":["remove"]},{"Key":"I remove","Fragments":["the"]},{"Key":"else statement,","Fragments":["I"]},{"Key":"statement, I","Fragments":["didn't"]},{"Key":"didn't need","Fragments":["the","to","to"]},{"Key":"if statement","Fragments":["either.","for","starting"]},{"Key":"statement either.","Fragments":["I"]},{"Key":"either. I","Fragments":["saw"]},{"Key":"I saw","Fragments":["a","people","that","what","some","your"]},{"Key":"saw a","Fragments":["few"]},{"Key":"few great","Fragments":["implementations"]},{"Key":"great implementations","Fragments":["of"]},{"Key":"implementations of","Fragments":["yelling"]},{"Key":"of yelling","Fragments":["and"]},{"Key":"yelling and","Fragments":["saysNothing,","if","check"]},{"Key":"and saysNothing,","Fragments":["but"]},{"Key":"saysNothing, but","Fragments":["I"]},{"Key":"didn't want","Fragments":["to","used"]},{"Key":"to copy","Fragments":["them.","a","the","the","it,"]},{"Key":"copy them.","Fragments":["That's"]},{"Key":"them. That's","Fragments":["why"]},{"Key":"why saysNothing","Fragments":["got"]},{"Key":"saysNothing got","Fragments":["a"]},{"Key":"got a","Fragments":["bit","lot","couple","couple"]},{"Key":"bit weird.","Fragments":["I"]},{"Key":"weird. I","Fragments":["used"]},{"Key":"used static","Fragments":["for","class"]},{"Key":"static for","Fragments":["my"]},{"Key":"for my","Fragments":["functions","own"]},{"Key":"functions because","Fragments":["anonymous"]},{"Key":"because anonymous","Fragments":["namespace"]},{"Key":"namespace wouldn't","Fragments":["compile"]},{"Key":"wouldn't compile","Fragments":["with"]},{"Key":"compile with","Fragments":["the"]},{"Key":"implementation in","Fragments":["a","JS","my"]},{"Key":"I even","Fragments":["compiled"]},{"Key":"even compiled","Fragments":["boost"]},{"Key":"compiled boost","Fragments":["myself,"]},{"Key":"boost myself,","Fragments":["and"]},{"Key":"myself, and","Fragments":["it"]},{"Key":"it didn't","Fragments":["work","need"]},{"Key":"didn't work","Fragments":["until"]},{"Key":"work until","Fragments":["I"]},{"Key":"until I","Fragments":["used","wrote","saw","ran","got","had"]},{"Key":"the command","Fragments":["on","line..."]},{"Key":"command on","Fragments":["the"]},{"Key":"Don't know","Fragments":["why,"]},{"Key":"know why,","Fragments":["but"]},{"Key":"why, but","Fragments":["I"]},{"Key":"add the","Fragments":["BOOST_TEST..."]},{"Key":"the BOOST_TEST...","Fragments":["definition"]},{"Key":"BOOST_TEST... definition","Fragments":["to"]},{"Key":"definition to","Fragments":["get","the","avoid"]},{"Key":"get it","Fragments":["to"]},{"Key":"to compile.","Fragments":["Plus"]},{"Key":"compile. Plus","Fragments":["I"]},{"Key":"Plus I","Fragments":["had"]},{"Key":"use `g++","Fragments":["-std=c++0x"]},{"Key":"`g++ -std=c++0x","Fragments":["*.cpp"]},{"Key":"-std=c++0x *.cpp","Fragments":["-lboost_unit_test_framework`"]},{"Key":"*.cpp -lboost_unit_test_framework`","Fragments":["to"]},{"Key":"-lboost_unit_test_framework` to","Fragments":["compile"]},{"Key":"to compile","Fragments":["it.","it.","while"]},{"Key":"compile it.","Fragments":["`cmake`","Yeah"]},{"Key":"it. `cmake`","Fragments":["made"]},{"Key":"`cmake` made","Fragments":["a"]},{"Key":"a Makefile,","Fragments":["but"]},{"Key":"Makefile, but","Fragments":["every"]},{"Key":"but every","Fragments":["time"]},{"Key":"every time","Fragments":["I","`hey`","a","you","you","a","we"]},{"Key":"time I","Fragments":["called","needed"]},{"Key":"called make","Fragments":["it"]},{"Key":"it failed.","Fragments":["It"]},{"Key":"failed. It","Fragments":["needed"]},{"Key":"needed the","Fragments":["-lboost_unit_test"]},{"Key":"the -lboost_unit_test","Fragments":["in"]},{"Key":"-lboost_unit_test in","Fragments":["order"]},{"Key":"in order","Fragments":["to","to","to","is","to","to"]},{"Key":"order to","Fragments":["make.","boost","compare","satisfy","get"]},{"Key":"Hmm, is","Fragments":["`*`"]},{"Key":"is `*`","Fragments":["an"]},{"Key":"`*` an","Fragments":["upper/lower/digit?"]},{"Key":"an upper/lower/digit?","Fragments":["I"]},{"Key":"upper/lower/digit? I","Fragments":["don't"]},{"Key":"don't believe","Fragments":["so,","it's","it","I"]},{"Key":"believe so,","Fragments":["and"]},{"Key":"so, and","Fragments":["so"]},{"Key":"and so","Fragments":["by","on.","it"]},{"Key":"so by","Fragments":["this"]},{"Key":"by this","Fragments":["logic"]},{"Key":"this logic","Fragments":["bob"]},{"Key":"logic bob","Fragments":["might"]},{"Key":"bob might","Fragments":["respond"]},{"Key":"might respond","Fragments":["\"Fine."]},{"Key":"respond \"Fine.","Fragments":["Be"]},{"Key":"\"Fine. Be","Fragments":["that","that","that","that","that"]},{"Key":"Be that","Fragments":["way!\"","way!\"`,","way!\"","way!\";","way!\".","way!\""]},{"Key":"that way!\"","Fragments":["to","and"]},{"Key":"way!\" to","Fragments":["the"]},{"Key":"string \"*\"","Fragments":["or"]},{"Key":"\"*\" or","Fragments":["even"]},{"Key":"or even","Fragments":["possibly","`!std::islower(*it)`."]},{"Key":"even possibly","Fragments":["\"#^\u0026!\""]},{"Key":"possibly \"#^\u0026!\"","Fragments":["I"]},{"Key":"\"#^\u0026!\" I","Fragments":["do"]},{"Key":"I do","Fragments":["like","not","always","not","know","it","see","have","agree","think","recognise","it."]},{"Key":"do like","Fragments":["the"]},{"Key":"the efficiency","Fragments":["of"]},{"Key":"efficiency of","Fragments":["this","O(n)"]},{"Key":"this algorithm","Fragments":["though,"]},{"Key":"algorithm though,","Fragments":["you"]},{"Key":"though, you","Fragments":["run","don't"]},{"Key":"you run","Fragments":["through","this","boost::to_lower_copy(subject_)","back()"]},{"Key":"run through","Fragments":["it"]},{"Key":"through it","Fragments":["once,","once"]},{"Key":"it once,","Fragments":["extracting"]},{"Key":"once, extracting","Fragments":["all"]},{"Key":"extracting all","Fragments":["the"]},{"Key":"the relevant","Fragments":["bits","header"]},{"Key":"relevant bits","Fragments":["of"]},{"Key":"bits of","Fragments":["information"]},{"Key":"of information","Fragments":["and"]},{"Key":"information and","Fragments":["decide"]},{"Key":"and decide","Fragments":["what"]},{"Key":"decide what","Fragments":["to"]},{"Key":"return from","Fragments":["that.","the"]},{"Key":"just sort","Fragments":["the"]},{"Key":"sort the","Fragments":["characters","strings"]},{"Key":"string instead","Fragments":["of","of","of"]},{"Key":"2) If","Fragments":["the"]},{"Key":"present in","Fragments":["the","the","the","the","the"]},{"Key":"input multiple","Fragments":["times,"]},{"Key":"multiple times,","Fragments":["it"]},{"Key":"times, it","Fragments":["will"]},{"Key":"be present","Fragments":["in","in"]},{"Key":"the output","Fragments":["multiple","is"]},{"Key":"output multiple","Fragments":["times."]},{"Key":"a pain","Fragments":["in"]},{"Key":"pain in","Fragments":["the"]},{"Key":"the ass.","Fragments":["It"]},{"Key":"ass. It","Fragments":["took"]},{"Key":"out where","Fragments":["I"]},{"Key":"where I","Fragments":["was","am","check","did","could","break","can"]},{"Key":"was missing","Fragments":["a","the"]},{"Key":"missing a","Fragments":["new","more","parentheses"]},{"Key":"a new","Fragments":["line","character","(string,int)","element","version.","type","variable","iteration","iteration","state","test","sequence","state","``str1Length``","style.","C++11","project","program"]},{"Key":"new line","Fragments":["character."]},{"Key":" At","Fragments":["first","line","line","first","the","this"]},{"Key":"with regexes","Fragments":["but"]},{"Key":"regexes but","Fragments":["after"]},{"Key":"but after","Fragments":["looking","I"]},{"Key":"after looking","Fragments":["at"]},{"Key":"submissions `any_of`,","Fragments":["`all_of`"]},{"Key":"`any_of`, `all_of`","Fragments":[","]},{"Key":"`all_of` ,","Fragments":["and"]},{"Key":", and","Fragments":["`none_of`"]},{"Key":"and `none_of`","Fragments":["seemed"]},{"Key":"`none_of` seemed","Fragments":["better."]},{"Key":" Though,","Fragments":["now"]},{"Key":"Though, now","Fragments":["I"]},{"Key":"now I","Fragments":["think","have","have","have","have","thought"]},{"Key":"of one","Fragments":["generic"]},{"Key":"one generic","Fragments":["function"]},{"Key":"generic function","Fragments":["that"]},{"Key":"takes regex","Fragments":["list"]},{"Key":"regex list","Fragments":["and"]},{"Key":"list and","Fragments":["if"]},{"Key":"if all","Fragments":["of","the","the"]},{"Key":"them regex_match","Fragments":["it"]},{"Key":"regex_match it","Fragments":["returns"]},{"Key":"it returns","Fragments":["true.","the"]},{"Key":"Also I","Fragments":["used","am"]},{"Key":"used ``namespace``","Fragments":["instead"]},{"Key":"``namespace`` instead","Fragments":["of"]},{"Key":"of ``class``","Fragments":["for"]},{"Key":"``class`` for","Fragments":["`bob`,"]},{"Key":"for `bob`,","Fragments":["and"]},{"Key":"`bob`, and","Fragments":["`static`"]},{"Key":"and `static`","Fragments":["inner"]},{"Key":"`static` inner","Fragments":["functions"]},{"Key":"inner functions","Fragments":["to"]},{"Key":"to prevent","Fragments":["polluting","spending","some"]},{"Key":"prevent polluting","Fragments":["global"]},{"Key":"polluting global","Fragments":["scope."]},{"Key":"global scope.","Fragments":["Not","Consider"]},{"Key":"scope. Not","Fragments":["sure"]},{"Key":"if `static`","Fragments":["is"]},{"Key":"`static` is","Fragments":["proper"]},{"Key":"is proper","Fragments":["and"]},{"Key":"proper and","Fragments":["safe"]},{"Key":"and safe","Fragments":["here."]},{"Key":"understand it,","Fragments":["the"]},{"Key":"it, the","Fragments":["correct"]},{"Key":"correct response","Fragments":["to","rather"]},{"Key":"response to","Fragments":["`\"#\u0026!\"`","nonsense,"]},{"Key":"to `\"#\u0026!\"`","Fragments":["is"]},{"Key":"`\"#\u0026!\"` is","Fragments":["in"]},{"Key":"in fact","Fragments":["`\"Fine.","an"]},{"Key":"fact `\"Fine.","Fragments":["Be"]},{"Key":"`\"Fine. Be","Fragments":["that"]},{"Key":"that way!\"`,","Fragments":["since"]},{"Key":"way!\"`, since","Fragments":["nothing"]},{"Key":"since nothing","Fragments":["is"]},{"Key":"nothing is","Fragments":["actually","found."]},{"Key":"actually being","Fragments":["said.","printed"]},{"Key":"being said.","Fragments":["If"]},{"Key":"said. If","Fragments":["symbols"]},{"Key":"If symbols","Fragments":["are"]},{"Key":"symbols are","Fragments":["to"]},{"Key":"are to","Fragments":["be","build"]},{"Key":"considered speech","Fragments":["though,"]},{"Key":"speech though,","Fragments":["an"]},{"Key":"though, an","Fragments":["additional"]},{"Key":"additional check","Fragments":["for"]},{"Key":"for `ispunct()`","Fragments":["will"]},{"Key":"`ispunct()` will","Fragments":["fix"]},{"Key":"will fix","Fragments":["that.","that","it"]},{"Key":"is nicely","Fragments":["done","modular,"]},{"Key":"nicely done","Fragments":["and"]},{"Key":"done and","Fragments":["quite","what"]},{"Key":"and quite","Fragments":["natural","readable."]},{"Key":"quite natural","Fragments":["logic."]},{"Key":"natural logic.","Fragments":["One"]},{"Key":"logic. One","Fragments":["way"]},{"Key":"One way","Fragments":["to"]},{"Key":"to speed","Fragments":["it"]},{"Key":"speed it","Fragments":["up"]},{"Key":"it up","Fragments":["is","a","with","a"]},{"Key":"up is","Fragments":["to"]},{"Key":"better substitute","Fragments":["for"]},{"Key":"substitute for","Fragments":["`istringstream`,"]},{"Key":"for `istringstream`,","Fragments":["which"]},{"Key":"`istringstream`, which","Fragments":["is"]},{"Key":"is rather","Fragments":["slow."]},{"Key":"rather slow.","Fragments":["Or"]},{"Key":"slow. Or","Fragments":["you"]},{"Key":"Or you","Fragments":["could"]},{"Key":"regex [like","Fragments":["I"]},{"Key":"[like I","Fragments":["did](http://exercism.io/submissions/278a796dd396e748a2d3bc62),"]},{"Key":"I did](http://exercism.io/submissions/278a796dd396e748a2d3bc62),","Fragments":["it's"]},{"Key":"did](http://exercism.io/submissions/278a796dd396e748a2d3bc62), it's","Fragments":["readable"]},{"Key":"it's readable","Fragments":["if"]},{"Key":"readable if","Fragments":["nothing"]},{"Key":"if nothing","Fragments":["else.","is"]},{"Key":"and clean.","Fragments":["However,"]},{"Key":"clean. However,","Fragments":["you"]},{"Key":"could encapsulate","Fragments":["some"]},{"Key":"encapsulate some","Fragments":["of"]},{"Key":"details in","Fragments":["other"]},{"Key":"other functions","Fragments":["like","like","should"]},{"Key":"functions like","Fragments":["IsQuestion,","`isShouting`,","`isQuestion`","std::isalpha()","std::isalpha","std::strcmp","this."]},{"Key":"like IsQuestion,","Fragments":["IsYell,"]},{"Key":"IsQuestion, IsYell,","Fragments":["etc."]},{"Key":"IsYell, etc.","Fragments":["in"]},{"Key":"to boost","Fragments":["readability."]},{"Key":"Also, I've","Fragments":["seen"]},{"Key":"I've seen","Fragments":["some","a","the","people"]},{"Key":"seen some","Fragments":["others"]},{"Key":"some others","Fragments":["say"]},{"Key":"others say","Fragments":["that"]},{"Key":"that regex","Fragments":["is"]},{"Key":"is overkill","Fragments":["for"]},{"Key":"for simple","Fragments":["patterns"]},{"Key":"simple patterns","Fragments":["like"]},{"Key":"patterns like","Fragments":["these,"]},{"Key":"like these,","Fragments":["but"]},{"Key":"these, but","Fragments":["you"]},{"Key":"have kept","Fragments":["it's"]},{"Key":"kept it's","Fragments":["usage"]},{"Key":"it's usage","Fragments":["to"]},{"Key":"usage to","Fragments":["a"]},{"Key":"a minimum,","Fragments":["which","some"]},{"Key":"minimum, which","Fragments":["is"]},{"Key":"is good;","Fragments":["what's"]},{"Key":"good; what's","Fragments":["your"]},{"Key":"what's your","Fragments":["take"]},{"Key":"your take","Fragments":["on"]},{"Key":"take on","Fragments":["that?","the","the"]},{"Key":"Also, I'm","Fragments":["not","wondering"]},{"Key":"not familiar","Fragments":["with","with","enough","with"]},{"Key":"the syntax","Fragments":["on"]},{"Key":"syntax on","Fragments":["line"]},{"Key":"line 13;","Fragments":["it"]},{"Key":"13; it","Fragments":["looks"]},{"Key":"it looks","Fragments":["like","like","great.","far","more","like","like","off.","like","like","like","like"]},{"Key":"you're calling","Fragments":["a"]},{"Key":"calling a","Fragments":["function"]},{"Key":"that then","Fragments":["becomes"]},{"Key":"then becomes","Fragments":["a"]},{"Key":"I initially","Fragments":["thought","thought","thought"]},{"Key":"initially thought","Fragments":["about","of","the"]},{"Key":"thought about","Fragments":["checking"]},{"Key":"about checking","Fragments":["the","the"]},{"Key":"the edit","Fragments":["distance"]},{"Key":"edit distance","Fragments":["between"]},{"Key":"distance between","Fragments":["two"]},{"Key":"between two","Fragments":["DNA","maps"]},{"Key":"two DNA","Fragments":["sequences,"]},{"Key":"DNA sequences,","Fragments":["but..."]},{"Key":"sequences, but...","Fragments":["at"]},{"Key":"but... at","Fragments":["least"]},{"Key":"least the","Fragments":["test"]},{"Key":"cases (in","Fragments":["particular"]},{"Key":"(in particular","Fragments":["the"]},{"Key":"particular the","Fragments":["last"]},{"Key":"last one)","Fragments":["indicated"]},{"Key":"one) indicated","Fragments":["that"]},{"Key":"indicated that","Fragments":["this"]},{"Key":"would lead","Fragments":["to"]},{"Key":"a wrong","Fragments":["result."]},{"Key":" Oh,","Fragments":["and","and"]},{"Key":"and by","Fragments":["the","using","chance","short-circuiting","value."]},{"Key":"the way:","Fragments":["I"]},{"Key":"way: I","Fragments":["forgot"]},{"Key":"the iostream-include","Fragments":["which"]},{"Key":"iostream-include which","Fragments":["I"]},{"Key":"used in","Fragments":["my","the","some"]},{"Key":"my former","Fragments":["(wrong)"]},{"Key":"former (wrong)","Fragments":["edit-distance"]},{"Key":"(wrong) edit-distance","Fragments":["implementation."]},{"Key":"edit-distance implementation.","Fragments":["Just"]},{"Key":"implementation. Just","Fragments":["ignore"]},{"Key":"Just ignore","Fragments":["that."]},{"Key":"ignore that.","Fragments":[":)"]},{"Key":" Bool","Fragments":["to"]},{"Key":"Bool to","Fragments":["unsigned"]},{"Key":"to unsigned","Fragments":["conversion","integers."]},{"Key":"unsigned conversion","Fragments":["seems"]},{"Key":"conversion seems","Fragments":["fine"]},{"Key":"seems fine","Fragments":["to"]},{"Key":"fine to","Fragments":["me,","call"]},{"Key":"me, but","Fragments":["if","since"]},{"Key":"it bothers","Fragments":["you,"]},{"Key":"bothers you,","Fragments":["you"]},{"Key":"you, you","Fragments":["could"]},{"Key":"could count","Fragments":["the"]},{"Key":"of `true`s","Fragments":["instead."]},{"Key":"`true`s instead.","Fragments":["Something"]},{"Key":"instead. Something","Fragments":["else"]},{"Key":"Something else","Fragments":["bothers"]},{"Key":"else bothers","Fragments":["me"]},{"Key":"bothers me","Fragments":["though.","a"]},{"Key":"me though.","Fragments":["Are"]},{"Key":"though. Are","Fragments":["calls"]},{"Key":"Are calls","Fragments":["to"]},{"Key":"calls to","Fragments":["`transform`","strcopy"]},{"Key":"to `transform`","Fragments":["and"]},{"Key":"`transform` and","Fragments":["`accumulate`","the","`accumulate`."]},{"Key":"and `accumulate`","Fragments":["more"]},{"Key":"`accumulate` more","Fragments":["efficient"]},{"Key":"more efficient","Fragments":["than","overall","to","erase"]},{"Key":"efficient than","Fragments":["a"]},{"Key":"simple `for`","Fragments":["comparing"]},{"Key":"`for` comparing","Fragments":["each"]},{"Key":"comparing each","Fragments":["corresponding","character."]},{"Key":"each corresponding","Fragments":["character?"]},{"Key":"corresponding character?","Fragments":["If"]},{"Key":"character? If","Fragments":["not,"]},{"Key":"If not,","Fragments":["then","maybe"]},{"Key":"not, then","Fragments":["why"]},{"Key":"then why","Fragments":["use"]},{"Key":"why use","Fragments":["them?"]},{"Key":"use them?","Fragments":["In"]},{"Key":"them? In","Fragments":["my"]},{"Key":"opinion they","Fragments":["do"]},{"Key":"not improve","Fragments":["readability"]},{"Key":"improve readability","Fragments":["either.","if"]},{"Key":"agree, and","Fragments":["the"]},{"Key":"last unit","Fragments":["test"]},{"Key":"unit test","Fragments":["was","that"]},{"Key":"test was","Fragments":["a","ever"]},{"Key":"a pointless","Fragments":["tautology.","conversion."]},{"Key":"I got","Fragments":["this","too","very","rid","into","everything,","to","the","hung"]},{"Key":"got this","Fragments":["tip","thing"]},{"Key":"this tip","Fragments":["from"]},{"Key":"tip from","Fragments":["another"]},{"Key":"from another","Fragments":["nitpicker:","language"]},{"Key":"another nitpicker:","Fragments":["your"]},{"Key":"nitpicker: your","Fragments":["boolean"]},{"Key":"your boolean","Fragments":["functions"]},{"Key":"are right","Fragments":["now","that"]},{"Key":"right now","Fragments":["inside","they","there's","otherwise"]},{"Key":"now inside","Fragments":["the"]},{"Key":"the bob","Fragments":["namespace,","namespace","namespace,","function","class","problem."]},{"Key":"bob namespace,","Fragments":["but","to"]},{"Key":"namespace, but","Fragments":["any","very"]},{"Key":"but any","Fragments":["caller"]},{"Key":"any caller","Fragments":["aware"]},{"Key":"caller aware","Fragments":["of"]},{"Key":"bob namespace","Fragments":["doesn't","and"]},{"Key":"access isYell,","Fragments":["isQuestion."]},{"Key":"can move","Fragments":["those","all","the"]},{"Key":"move those","Fragments":["functions"]},{"Key":"those functions","Fragments":["to","might"]},{"Key":"to an","Fragments":["anonymous","int.","integer.","else","anonymous","anonymous","`unsigned","existing"]},{"Key":"namespace. This","Fragments":["keeps"]},{"Key":"This keeps","Fragments":["the"]},{"Key":"keeps the","Fragments":["implementation"]},{"Key":"details (like","Fragments":["private"]},{"Key":"(like private","Fragments":["methods"]},{"Key":"methods of","Fragments":["a"]},{"Key":"a class)","Fragments":["away"]},{"Key":"class) away","Fragments":["from"]},{"Key":"from other","Fragments":["pieces","part","solutions","peoples"]},{"Key":"other pieces","Fragments":["of"]},{"Key":"pieces of","Fragments":["code"]},{"Key":"that use","Fragments":["the","this"]},{"Key":"Your code","Fragments":["is","would","looks","fails"]},{"Key":"very concise,","Fragments":["yet","and"]},{"Key":"concise, yet","Fragments":["very"]},{"Key":"yet very","Fragments":["expressive."]},{"Key":"very expressive.","Fragments":["I"]},{"Key":"expressive. I","Fragments":["like"]},{"Key":"like that.","Fragments":[":)","Lesson","Thanks"]},{"Key":"that. :)","Fragments":["I"]},{"Key":":) I","Fragments":["also"]},{"Key":"also learned","Fragments":["about"]},{"Key":"learned about","Fragments":["std::transform"]},{"Key":"about std::transform","Fragments":["which"]},{"Key":"know before","Fragments":["(very"]},{"Key":"before (very","Fragments":["handy!)."]},{"Key":"only have","Fragments":["one","to"]},{"Key":"have one","Fragments":["tiny","this","suggestion,"]},{"Key":"one tiny","Fragments":["question"]},{"Key":"tiny question","Fragments":["about"]},{"Key":"question about","Fragments":["lines"]},{"Key":"about lines","Fragments":["21--22:"]},{"Key":"lines 21--22:","Fragments":["I"]},{"Key":"21--22: I","Fragments":["do"]},{"Key":"how std::transform","Fragments":["allocates"]},{"Key":"std::transform allocates","Fragments":["space"]},{"Key":"allocates space","Fragments":["in"]},{"Key":"space in","Fragments":["'word'.","isEmpty."]},{"Key":"in 'word'.","Fragments":["So"]},{"Key":"'word'. So","Fragments":["could"]},{"Key":"So could","Fragments":["it"]},{"Key":"could it","Fragments":["be"]},{"Key":"be that,","Fragments":["by"]},{"Key":"that, by","Fragments":["not"]},{"Key":"by not","Fragments":["telling"]},{"Key":"not telling","Fragments":["the"]},{"Key":"telling the","Fragments":["compiler"]},{"Key":"compiler beforehand","Fragments":["how"]},{"Key":"beforehand how","Fragments":["large"]},{"Key":"how large","Fragments":["word"]},{"Key":"large word","Fragments":["is"]},{"Key":"is going","Fragments":["to","to"]},{"Key":"to be,","Fragments":["these"]},{"Key":"be, these","Fragments":["two"]},{"Key":"these two","Fragments":["lines","counts","functions"]},{"Key":"two lines","Fragments":["could"]},{"Key":"lines could","Fragments":["result","be"]},{"Key":"could result","Fragments":["in"]},{"Key":"of reallocations","Fragments":["and","of"]},{"Key":"reallocations and","Fragments":["copy"]},{"Key":"and copy","Fragments":["operations","constructor."]},{"Key":"copy operations","Fragments":["to","using"]},{"Key":"operations to","Fragments":["fit"]},{"Key":"to fit","Fragments":["the"]},{"Key":"to lowercase","Fragments":["converted","if","is"]},{"Key":"lowercase converted","Fragments":["chars"]},{"Key":"converted chars","Fragments":["from"]},{"Key":"chars from","Fragments":["[start,stop)"]},{"Key":"from [start,stop)","Fragments":["into"]},{"Key":"[start,stop) into","Fragments":["'word'?"]},{"Key":"into 'word'?","Fragments":["My"]},{"Key":"'word'? My","Fragments":["suggestion"]},{"Key":"My suggestion","Fragments":["thus"]},{"Key":"suggestion thus","Fragments":["is"]},{"Key":"thus is","Fragments":["to","not"]},{"Key":" ```std::string","Fragments":["word(start,stop);"]},{"Key":" std::transform(word.begin(),","Fragments":["word.end(),"]},{"Key":"std::transform(word.begin(), word.end(),","Fragments":["word.begin(),"]},{"Key":"word.end(), word.begin(),","Fragments":["::tolower);","::tolower"]},{"Key":"the recursive","Fragments":["call"]},{"Key":"recursive call","Fragments":["to","to","swapping"]},{"Key":"to yourself","Fragments":["to"]},{"Key":"yourself to","Fragments":["adjust","using"]},{"Key":"to adjust","Fragments":["`str1.len"]},{"Key":"adjust `str1.len","Fragments":["\u003e"]},{"Key":"`str1.len \u003e","Fragments":["str2.len`"]},{"Key":" Something","Fragments":["called"]},{"Key":"Something called","Fragments":["Argument"]},{"Key":"called Argument","Fragments":["Dependent"]},{"Key":"Argument Dependent","Fragments":["Lookup"]},{"Key":"Dependent Lookup","Fragments":["is"]},{"Key":"Lookup is","Fragments":["saving"]},{"Key":"is saving","Fragments":["you"]},{"Key":"saving you","Fragments":["from"]},{"Key":"you from","Fragments":["the"]},{"Key":"the requirement","Fragments":["of"]},{"Key":"requirement of","Fragments":["a"]},{"Key":"a `using","Fragments":["namespace"]},{"Key":"std` or","Fragments":["`std::`"]},{"Key":"or `std::`","Fragments":["qualifier."]},{"Key":"`std::` qualifier.","Fragments":["The"]},{"Key":"qualifier. The","Fragments":["iterator"]},{"Key":"The iterator","Fragments":["returned","not"]},{"Key":"iterator returned","Fragments":["by"]},{"Key":"returned by","Fragments":["`begin()`","your"]},{"Key":"by `begin()`","Fragments":["is"]},{"Key":"`begin()` is","Fragments":["a"]},{"Key":"class within","Fragments":["the"]},{"Key":"the std","Fragments":["namespace,","namespace"]},{"Key":"std namespace,","Fragments":["so"]},{"Key":"so the","Fragments":["compiler","best","tests","func","class"]},{"Key":"compiler looks","Fragments":["through"]},{"Key":"looks through","Fragments":["the"]},{"Key":"std namespace","Fragments":["to"]},{"Key":"namespace to","Fragments":["find","keep","match"]},{"Key":"a declaration","Fragments":["for"]},{"Key":"declaration for","Fragments":["`all_of()`,"]},{"Key":"for `all_of()`,","Fragments":["etc."]},{"Key":" (See","Fragments":["http://stackoverflow.com/questions/26055646/functions-in-namespace-std-accessible-in-global-scope","https://stackoverflow.com/questions/236129/how-to-split-a-string-in-c"]},{"Key":"(See http://stackoverflow.com/questions/26055646/functions-in-namespace-std-accessible-in-global-scope","Fragments":["and"]},{"Key":"http://stackoverflow.com/questions/26055646/functions-in-namespace-std-accessible-in-global-scope and","Fragments":["http://stackoverflow.com/questions/25976267/interesting-behavior-of-compiler-with-namespaces)."]},{"Key":"Your use","Fragments":["of"]},{"Key":"of `using`","Fragments":["is"]},{"Key":"`using` is","Fragments":["otherwise"]},{"Key":"is otherwise","Fragments":["correct."]},{"Key":"And I","Fragments":["like","really","put","want","think"]},{"Key":"of anonymous","Fragments":["namespaces","namespace"]},{"Key":"anonymous namespaces","Fragments":["here"]},{"Key":"namespaces here","Fragments":["as"]},{"Key":"here as","Fragments":["well","anything"]},{"Key":"as references","Fragments":["to"]},{"Key":"references to","Fragments":["make","local"]},{"Key":"clear when","Fragments":["functions","reading"]},{"Key":"when functions","Fragments":["do"]},{"Key":"functions do","Fragments":["not"]},{"Key":"not modify","Fragments":["the","its","the"]},{"Key":"modify the","Fragments":["phrase","variable,","contents","argument","value","string,","string,","string.","string."]},{"Key":"the phrase","Fragments":["they","is","is"]},{"Key":"phrase they","Fragments":["receive."]},{"Key":"they receive.","Fragments":["You"]},{"Key":"receive. You","Fragments":["could"]},{"Key":"could boost","Fragments":["readability","your"]},{"Key":"boost readability","Fragments":["by","to"]},{"Key":"readability by","Fragments":["changing","this."]},{"Key":"by changing","Fragments":["the","`\u003c65`"]},{"Key":"changing the","Fragments":["\"s\"","`m`","return"]},{"Key":"the \"s\"","Fragments":["parameters"]},{"Key":"\"s\" parameters","Fragments":["to"]},{"Key":"parameters to","Fragments":["something","const"]},{"Key":"to something","Fragments":["like","that's","like","like","known","a","like"]},{"Key":"something like","Fragments":["\"text\"","for","this:","for(","`using","that,","that.","that","`xpr::bos","this","`::islower`","```const","inheritance","```wordsInSentence[word]++```.","```std::transform(...,","```const","this:"]},{"Key":"like \"text\"","Fragments":["or"]},{"Key":"\"text\" or","Fragments":["\"message\"."]},{"Key":" Really","Fragments":["small","nice"]},{"Key":"Really small","Fragments":["issue"]},{"Key":"small issue","Fragments":["but...you"]},{"Key":"issue but...you","Fragments":["could"]},{"Key":"but...you could","Fragments":["move"]},{"Key":"could move","Fragments":["the","the","`isDNA`"]},{"Key":"move the","Fragments":["length","sorted","class","`using`","factorization","sorting"]},{"Key":"length selection","Fragments":["outside"]},{"Key":"selection outside","Fragments":["the"]},{"Key":"the `for`","Fragments":["statement","in","and","loop.\u003c/li\u003e\u003c/ul\u003e","loops,"]},{"Key":"`for` statement","Fragments":["to"]},{"Key":"first attempt","Fragments":["to"]},{"Key":"attempt to","Fragments":["work","get"]},{"Key":"with C++.","Fragments":["I've"]},{"Key":"C++. I've","Fragments":["been"]},{"Key":"using C#","Fragments":["for"]},{"Key":"C# for","Fragments":["almost"]},{"Key":"for almost","Fragments":["5"]},{"Key":"almost 5","Fragments":["years"]},{"Key":"5 years","Fragments":["now"]},{"Key":"years now","Fragments":["and"]},{"Key":"and wanted","Fragments":["to"]},{"Key":"to dive","Fragments":["into"]},{"Key":"dive into","Fragments":["the"]},{"Key":"the world","Fragments":["of"]},{"Key":"world of","Fragments":["pointers"]},{"Key":"of pointers","Fragments":["and"]},{"Key":"pointers and","Fragments":["memory"]},{"Key":"and memory","Fragments":["management"]},{"Key":"memory management","Fragments":[":)"]},{"Key":"management :)","Fragments":["What"]},{"Key":":) What","Fragments":["do"]},{"Key":"you think?","Fragments":["Can"]},{"Key":"think? Can","Fragments":["I"]},{"Key":"Can I","Fragments":["structure","do"]},{"Key":"I structure","Fragments":["the"]},{"Key":"program better?","Fragments":["Any"]},{"Key":"better? Any","Fragments":["feedback"]},{"Key":"Any feedback","Fragments":["is","wil"]},{"Key":"feedback is","Fragments":["greatly","welcome."]},{"Key":"is greatly","Fragments":["appreciated!"]},{"Key":"Just another","Fragments":["point"]},{"Key":"another point","Fragments":["on"]},{"Key":"point on","Fragments":["why","the"]},{"Key":"on why","Fragments":["I","you"]},{"Key":"I choose","Fragments":["to","to"]},{"Key":"choose to","Fragments":["place","sieve","use","use"]},{"Key":"to place","Fragments":["all"]},{"Key":"place all","Fragments":["in"]},{"Key":"all in","Fragments":["one","one","one","one","one","c"]},{"Key":"line was","Fragments":["to"]},{"Key":"was to","Fragments":["eliminate","not","make","add","ensure","make","make"]},{"Key":"to eliminate","Fragments":["the","the","the"]},{"Key":"a extra","Fragments":["variable."]},{"Key":" Thats","Fragments":["a"]},{"Key":"Thats a","Fragments":["good"]},{"Key":"good point.","Fragments":["Sometimes","There"]},{"Key":"point. Sometimes","Fragments":["i"]},{"Key":"Sometimes i","Fragments":["forget"]},{"Key":"i forget","Fragments":["its"]},{"Key":"forget its","Fragments":["not"]},{"Key":"its not","Fragments":["all"]},{"Key":"not all","Fragments":["about"]},{"Key":"all about","Fragments":["how"]},{"Key":"about how","Fragments":["much","you","you","others","you"]},{"Key":"how much","Fragments":["we","this"]},{"Key":"much we","Fragments":["can"]},{"Key":"can fit","Fragments":["on"]},{"Key":"fit on","Fragments":["one"]},{"Key":"on one","Fragments":["line"]},{"Key":"line but,","Fragments":["how"]},{"Key":"but, how","Fragments":["well"]},{"Key":"how well","Fragments":["it","variables"]},{"Key":"well it","Fragments":["could"]},{"Key":"be read","Fragments":["by"]},{"Key":"read by","Fragments":["the"]},{"Key":" Pulled","Fragments":["out"]},{"Key":"Pulled out","Fragments":["ternary"]},{"Key":"out ternary","Fragments":["operator"]},{"Key":"ternary operator","Fragments":["to"]},{"Key":"operator to","Fragments":["increase","not"]},{"Key":"Thanks, all!","Fragments":["Implemented."]},{"Key":" Should","Fragments":["use","use","exclude","exclude"]},{"Key":"Should use","Fragments":["`emplace_back`.","std::random."]},{"Key":"understand from","Fragments":["reading"]},{"Key":"from reading","Fragments":["others"]},{"Key":"reading others","Fragments":["solution"]},{"Key":"others solution","Fragments":["to"]},{"Key":"to this","Fragments":["problem,","one.","example","solution.","exercise","site,","because","kind","bound."]},{"Key":"this problem,","Fragments":["passing","especially","I","using"]},{"Key":"problem, passing","Fragments":["references"]},{"Key":"passing references","Fragments":["is"]},{"Key":"references is","Fragments":["better"]},{"Key":"than passing","Fragments":["values."]},{"Key":"passing values.","Fragments":["It"]},{"Key":"values. It","Fragments":["seems"]},{"Key":"seems a","Fragments":["bit","bit"]},{"Key":"bit curious","Fragments":["to"]},{"Key":"curious to","Fragments":["me"]},{"Key":"one can","Fragments":["pass"]},{"Key":"can pass","Fragments":["a","in"]},{"Key":"a value","Fragments":["and","as","and","if"]},{"Key":"not change","Fragments":["the"]},{"Key":"change the","Fragments":["rest","method","`for(int","return","condition","string","whole"]},{"Key":" oh","Fragments":["thats'","good"]},{"Key":"oh thats'","Fragments":["funny,"]},{"Key":" i","Fragments":["thought","think","misread","like"]},{"Key":"i thought","Fragments":["you","they"]},{"Key":"thought you","Fragments":["method"]},{"Key":"you method","Fragments":["was"]},{"Key":"method was","Fragments":["so","actually"]},{"Key":"was so","Fragments":["clever"]},{"Key":"so clever","Fragments":["that"]},{"Key":"clever that","Fragments":["i"]},{"Key":"i assumed","Fragments":["there"]},{"Key":"assumed there","Fragments":["was"]},{"Key":"there was","Fragments":["more","an","very","a","no","no"]},{"Key":"was more","Fragments":["than"]},{"Key":"than mere","Fragments":["randomness"]},{"Key":"mere randomness","Fragments":["to"]},{"Key":"randomness to","Fragments":["the"]},{"Key":"the numbering.","Fragments":["I'd"]},{"Key":"numbering. I'd","Fragments":["considered"]},{"Key":"I'd considered","Fragments":["that"]},{"Key":"considered that","Fragments":["letter"]},{"Key":"that letter","Fragments":["frequency"]},{"Key":"letter frequency","Fragments":["in","in"]},{"Key":"frequency in","Fragments":["language","words"]},{"Key":"in language","Fragments":["is"]},{"Key":"language is","Fragments":["not"]},{"Key":"as letter","Fragments":["frequency"]},{"Key":"in words","Fragments":["-"]},{"Key":"words -","Fragments":["some"]},{"Key":"- some","Fragments":["words"]},{"Key":"some words","Fragments":["are","by"]},{"Key":"words are","Fragments":["used","the"]},{"Key":"are used","Fragments":["more","in","nowhere"]},{"Key":"used more","Fragments":["often,"]},{"Key":"more often,","Fragments":["and"]},{"Key":"often, and","Fragments":["that"]},{"Key":"that perhaps","Fragments":["you"]},{"Key":"perhaps you","Fragments":["had"]},{"Key":"had done","Fragments":["your"]},{"Key":"done your","Fragments":["own"]},{"Key":"own calculations","Fragments":["from"]},{"Key":"calculations from","Fragments":["a"]},{"Key":"a dictionary","Fragments":["list.","a","search","a","a","is","order.","has"]},{"Key":" thanks","Fragments":["for","@antonietta","@glenda","mharpe2"]},{"Key":"thanks for","Fragments":["letting","the","clarifying.","the","your"]},{"Key":"for letting","Fragments":["me"]},{"Key":"letting me","Fragments":["know."]},{"Key":"I feel","Fragments":["like","like","that","tipsy","this","the","like","current","like","this"]},{"Key":"input should","Fragments":["be"]},{"Key":"const \u0026,","Fragments":["but"]},{"Key":"\u0026, but","Fragments":["making"]},{"Key":"but making","Fragments":["that"]},{"Key":"making that","Fragments":["definition"]},{"Key":"that definition","Fragments":["breaks"]},{"Key":"definition breaks","Fragments":["the"]},{"Key":"breaks the","Fragments":["loop"]},{"Key":"loop on","Fragments":["line","line"]},{"Key":" Ahoi","Fragments":["there,","there,","there,"]},{"Key":"Ahoi there,","Fragments":["here's"]},{"Key":"there, here's","Fragments":["a"]},{"Key":"here's a","Fragments":["couple"]},{"Key":"things I","Fragments":["noticed:","would","would"]},{"Key":"implement an","Fragments":["empty"]},{"Key":"empty constructor","Fragments":["and"]},{"Key":"constructor and","Fragments":["destructor.","thus","destructor"]},{"Key":"and destructor.","Fragments":["You"]},{"Key":"destructor. You","Fragments":["can"]},{"Key":"can leave","Fragments":["them"]},{"Key":"leave them","Fragments":["away","as-is"]},{"Key":"them away","Fragments":["and"]},{"Key":"away and","Fragments":["the"]},{"Key":"compiler will","Fragments":["automatically","handle"]},{"Key":"will automatically","Fragments":["create"]},{"Key":"create them","Fragments":["for"]},{"Key":"them for","Fragments":["you"]},{"Key":"for you","Fragments":["implicitly.","the","to","to","just","comments."]},{"Key":"the `is_numbers_only`","Fragments":["variable."]},{"Key":"`is_numbers_only` variable.","Fragments":["It's"]},{"Key":"variable. It's","Fragments":["redundant."]},{"Key":"It's redundant.","Fragments":["If"]},{"Key":"redundant. If","Fragments":["`is_numbers_only`"]},{"Key":"If `is_numbers_only`","Fragments":["is"]},{"Key":"`is_numbers_only` is","Fragments":["true"]},{"Key":"is true","Fragments":["then","-"]},{"Key":"true then","Fragments":["all","the","the","the","the"]},{"Key":"then all","Fragments":["the"]},{"Key":"other bools","Fragments":["have"]},{"Key":"bools have","Fragments":["to"]},{"Key":"be false","Fragments":["(no"]},{"Key":"false (no","Fragments":["question,"]},{"Key":"(no question,","Fragments":["no"]},{"Key":"question, no","Fragments":["shouting,"]},{"Key":"no shouting,","Fragments":["no"]},{"Key":"shouting, no","Fragments":["blank),"]},{"Key":"no blank),","Fragments":["that"]},{"Key":"blank), that","Fragments":["means"]},{"Key":"that means","Fragments":["that"]},{"Key":"means that","Fragments":["the","code"]},{"Key":"the `if(","Fragments":["is_numbers_only"]},{"Key":"`if( is_numbers_only","Fragments":[")`"]},{"Key":"is_numbers_only )`","Fragments":["is"]},{"Key":")` is","Fragments":["unnecessary"]},{"Key":"is unnecessary","Fragments":["since","since","because","and","as"]},{"Key":"unnecessary since","Fragments":["your","you"]},{"Key":"since your","Fragments":["default","return"]},{"Key":"your default","Fragments":["`return"]},{"Key":"default `return","Fragments":["\"Whatever.\";`"]},{"Key":"`return \"Whatever.\";`","Fragments":["is"]},{"Key":"\"Whatever.\";` is","Fragments":["already"]},{"Key":"already correct.","Fragments":["You'll"]},{"Key":"correct. You'll","Fragments":["find"]},{"Key":"You'll find","Fragments":["that"]},{"Key":"find that","Fragments":["the","there","it","it's"]},{"Key":"other occurrences","Fragments":["of"]},{"Key":"occurrences of","Fragments":["`is_numbers_only`","each","each"]},{"Key":"of `is_numbers_only`","Fragments":["are"]},{"Key":"`is_numbers_only` are","Fragments":["also"]},{"Key":"3) Instead","Fragments":["of"]},{"Key":"normal for-loop","Fragments":["`for(int"]},{"Key":"for-loop `for(int","Fragments":["i"]},{"Key":"`for(int i","Fragments":["="]},{"Key":"\u003c length;","Fragments":["++i)"]},{"Key":"length; ++i)","Fragments":["{`"]},{"Key":"++i) {`","Fragments":["you"]},{"Key":"{` you","Fragments":["could"]},{"Key":"a for-element","Fragments":["loop:","loop","loop"]},{"Key":"for-element loop:","Fragments":["`for(char"]},{"Key":"loop: `for(char","Fragments":["tmp"]},{"Key":"`for(char tmp","Fragments":[":"]},{"Key":"tmp :","Fragments":["input)"]},{"Key":": input)","Fragments":["{`.","{"]},{"Key":"input) {`.","Fragments":["Then"]},{"Key":"{`. Then","Fragments":["you"]},{"Key":"Then you","Fragments":["can","can","would"]},{"Key":"yourself the","Fragments":["`i`","forward"]},{"Key":"the `i`","Fragments":["and","variable"]},{"Key":"`i` and","Fragments":["you'll","`length`"]},{"Key":"and you'll","Fragments":["be"]},{"Key":"you'll be","Fragments":["sure"]},{"Key":"be sure","Fragments":["to","that","you"]},{"Key":"sure to","Fragments":["not","implement"]},{"Key":"to not","Fragments":["make","paste","worry","detect","modify","duplicate"]},{"Key":"not make","Fragments":["any","much","a"]},{"Key":"make any","Fragments":["mistakes","copies"]},{"Key":"any mistakes","Fragments":["while"]},{"Key":"mistakes while","Fragments":["iterating"]},{"Key":"while iterating","Fragments":["over"]},{"Key":"4) Instead","Fragments":["of"]},{"Key":"of `(tmp","Fragments":["\u003e=","\u003c"]},{"Key":"`(tmp \u003e=","Fragments":["'a'"]},{"Key":"\u003e= 'a'","Fragments":["\u0026\u0026","..."]},{"Key":"'a' \u0026\u0026","Fragments":["tmp"]},{"Key":"\u0026\u0026 tmp","Fragments":["\u003c="]},{"Key":"tmp \u003c=","Fragments":["'z')`"]},{"Key":"\u003c= 'z')`","Fragments":["you"]},{"Key":"'z')` you","Fragments":["can"]},{"Key":"use [`islower`](http://www.cplusplus.com/reference/cctype/islower/).","Fragments":["And"]},{"Key":"[`islower`](http://www.cplusplus.com/reference/cctype/islower/). And","Fragments":["instead"]},{"Key":"And instead","Fragments":["of"]},{"Key":"`(tmp \u003c","Fragments":["'0'"]},{"Key":"\u003c '0'","Fragments":["||"]},{"Key":"'0' ||","Fragments":["tmp"]},{"Key":"|| tmp","Fragments":["\u003e"]},{"Key":"tmp \u003e","Fragments":["'9')`"]},{"Key":"\u003e '9')`","Fragments":["you"]},{"Key":"'9')` you","Fragments":["can"]},{"Key":"general you","Fragments":["don't"]},{"Key":"change anything","Fragments":["about","except"]},{"Key":"anything about","Fragments":["the"]},{"Key":"the code,","Fragments":["but","but","but","so","and"]},{"Key":"really depends","Fragments":["on"]},{"Key":"on what","Fragments":["you"]},{"Key":" void","Fragments":["func(std::string","func(std::string","transform(C\u0026"]},{"Key":"void func(std::string","Fragments":["s){","const"]},{"Key":" for(int","Fragments":["i=0;","i=0;","i=0;"]},{"Key":"for(int i=0;","Fragments":["i\u003c10;","i\u003c10;","i\u003c1024;"]},{"Key":"i=0; i\u003c10;","Fragments":["++i)","++i)"]},{"Key":" s","Fragments":["+="]},{"Key":"s +=","Fragments":["i;"]},{"Key":" std::cout","Fragments":["\u003c\u003c","\u003c\u003c","\u003c\u003c"]},{"Key":"std::cout \u003c\u003c","Fragments":["s;","s_func;","i"]},{"Key":" Say","Fragments":["you"]},{"Key":"Say you","Fragments":["have"]},{"Key":"have this","Fragments":["function.","problem."]},{"Key":"this function.","Fragments":["You","Check"]},{"Key":"function. You","Fragments":["modify","could"]},{"Key":"You modify","Fragments":["`s`"]},{"Key":"modify `s`","Fragments":["inside"]},{"Key":"`s` inside","Fragments":["the"]},{"Key":"the function's","Fragments":["body,"]},{"Key":"function's body,","Fragments":["so"]},{"Key":"body, so","Fragments":["you"]},{"Key":"const string\u0026,","Fragments":["because"]},{"Key":"string\u0026, because","Fragments":["then"]},{"Key":"because then","Fragments":["`s`"]},{"Key":"then `s`","Fragments":["would"]},{"Key":"`s` would","Fragments":["be"]},{"Key":"be constant","Fragments":["and"]},{"Key":"constant and","Fragments":["thus","not"]},{"Key":"and thus","Fragments":["unmodifiable.","inaccessible","is","there"]},{"Key":"But usually","Fragments":["we"]},{"Key":"usually we","Fragments":["treat"]},{"Key":"we treat","Fragments":["function"]},{"Key":"treat function","Fragments":["arguments"]},{"Key":"function arguments","Fragments":["as","and"]},{"Key":"arguments as","Fragments":["constant","const","'const"]},{"Key":"as constant","Fragments":["anyways"]},{"Key":"constant anyways","Fragments":["(we"]},{"Key":"anyways (we","Fragments":["usually"]},{"Key":"(we usually","Fragments":["don't"]},{"Key":"usually don't","Fragments":["have"]},{"Key":"them inside","Fragments":["the"]},{"Key":"the function)","Fragments":["so"]},{"Key":"function) so","Fragments":["we"]},{"Key":"turn them","Fragments":["into"]},{"Key":"them into","Fragments":["const\u0026","the","function"]},{"Key":"into const\u0026","Fragments":["without"]},{"Key":"const\u0026 without","Fragments":["issues"]},{"Key":"without issues","Fragments":["in"]},{"Key":"issues in","Fragments":["most"]},{"Key":"in most","Fragments":["cases."]},{"Key":"After taking","Fragments":["a"]},{"Key":"taking a","Fragments":["look"]},{"Key":"look on","Fragments":["the"]},{"Key":"other submitions,","Fragments":["I"]},{"Key":"submitions, I","Fragments":["feel"]},{"Key":"regex was","Fragments":["kind"]},{"Key":"was kind","Fragments":["of"]},{"Key":"To keep","Fragments":["it"]},{"Key":"to understand,","Fragments":["I"]},{"Key":"understand, I","Fragments":["put"]},{"Key":"put the","Fragments":["regex","includes","std::sort","call","validation"]},{"Key":"regex test","Fragments":["in"]},{"Key":"test in","Fragments":["a"]},{"Key":"separate function.","Fragments":["The"]},{"Key":"function. The","Fragments":["\"hey\"","conversion"]},{"Key":"The \"hey\"","Fragments":["function"]},{"Key":"function is","Fragments":["then","a","large.","called.","fine;","called","a","not","not","easy","very"]},{"Key":"then pretty","Fragments":["simple."]},{"Key":"Would it","Fragments":["be"]},{"Key":"more optimized","Fragments":["to"]},{"Key":"optimized to","Fragments":["parse"]},{"Key":"parse the","Fragments":["string"]},{"Key":"string like","Fragments":["other","\"hello,there\""]},{"Key":"like other","Fragments":["people"]},{"Key":"other people","Fragments":["did","using"]},{"Key":"people did","Fragments":["?"]},{"Key":"In L13","Fragments":["you"]},{"Key":"L13 you","Fragments":["can"]},{"Key":"can skip","Fragments":["the","the"]},{"Key":"skip the","Fragments":["comparison","if"]},{"Key":"the comparison","Fragments":["at","word,","between"]},{"Key":"comparison at","Fragments":["L14"]},{"Key":"at L14","Fragments":["if"]},{"Key":"L14 if","Fragments":["the"]},{"Key":"condition Is","Fragments":["true."]},{"Key":"Also you","Fragments":["could","can","test","have","will","have","can","might","don't"]},{"Key":"could remove","Fragments":["dependency","the","some"]},{"Key":"remove dependency","Fragments":["on"]},{"Key":"on \u003cstring\u003e","Fragments":["if"]},{"Key":"\u003cstring\u003e if","Fragments":["you"]},{"Key":"know you","Fragments":["have","have","can"]},{"Key":"a null-terminated","Fragments":["c"]},{"Key":"null-terminated c","Fragments":["string"]},{"Key":"c string","Fragments":["(using"]},{"Key":"string (using","Fragments":["the"]},{"Key":"(using the","Fragments":["test"]},{"Key":"suite you","Fragments":["need"]},{"Key":"create temporaries","Fragments":["for"]},{"Key":"temporaries for","Fragments":["the"]},{"Key":"the arguments","Fragments":["to","to","is","the","in"]},{"Key":"Yes, you're","Fragments":["right"]},{"Key":"you're right","Fragments":["about","about","in"]},{"Key":"right about","Fragments":["the","the","the"]},{"Key":"the `transform`","Fragments":["and"]},{"Key":"the `accumulate`.","Fragments":["I"]},{"Key":"`accumulate`. I","Fragments":["guess"]},{"Key":"got too","Fragments":["excited"]},{"Key":"too excited","Fragments":["about"]},{"Key":"excited about","Fragments":["them"]},{"Key":"about them","Fragments":["and","at"]},{"Key":"them and","Fragments":["I","when","try","let","comparing,"]},{"Key":"the old,","Fragments":["reliable"]},{"Key":"old, reliable","Fragments":["`for`"]},{"Key":"reliable `for`","Fragments":["loop."]},{"Key":"`for` loop.","Fragments":["I'm"]},{"Key":"loop. I'm","Fragments":["going"]},{"Key":"I'm going","Fragments":["to","to","to","to","to"]},{"Key":"to fix","Fragments":["it,","up","it.","it","that"]},{"Key":"fix it,","Fragments":["thanks"]},{"Key":" Sorting","Fragments":["seemed"]},{"Key":"Sorting seemed","Fragments":["simple"]},{"Key":"seemed simple","Fragments":["at"]},{"Key":"simple at","Fragments":["the"]},{"Key":"the time.","Fragments":["But","All"]},{"Key":"time. But","Fragments":["I"]},{"Key":"I wonder","Fragments":["if","if","if","if","how"]},{"Key":"wonder if","Fragments":["i","the","this","it's"]},{"Key":"if i","Fragments":["could"]},{"Key":"i could","Fragments":["just"]},{"Key":"just add","Fragments":["all"]},{"Key":"add all","Fragments":["the"]},{"Key":"the ascii","Fragments":["numbers","byte"]},{"Key":"ascii numbers","Fragments":["of"]},{"Key":"numbers of","Fragments":["both","both"]},{"Key":"of both","Fragments":["words","words","the","inputs"]},{"Key":"both words","Fragments":["to","won't"]},{"Key":"words to","Fragments":["see","put","lowercase,"]},{"Key":"they equaled","Fragments":["the"]},{"Key":"equaled the","Fragments":["same"]},{"Key":"same if","Fragments":["that"]},{"Key":" Neat,","Fragments":["thanks!"]},{"Key":"removed `transform`","Fragments":["and"]},{"Key":"and `accumulate`.","Fragments":["A"]},{"Key":"`accumulate`. A","Fragments":["simple"]},{"Key":"A simple","Fragments":["for","for"]},{"Key":"simple for","Fragments":["loop","loop,","loop","loop"]},{"Key":" Adding","Fragments":["all"]},{"Key":"Adding all","Fragments":["the"]},{"Key":"the ASCII","Fragments":["numbers","character"]},{"Key":"ASCII numbers","Fragments":["of"]},{"Key":"words won't","Fragments":["work"]},{"Key":"won't work","Fragments":["as"]},{"Key":"work as","Fragments":["you","expected."]},{"Key":"can have","Fragments":["degeneracies.","a","unwanted","either"]},{"Key":"have degeneracies.","Fragments":["(e,g,"]},{"Key":"degeneracies. (e,g,","Fragments":["'C'"]},{"Key":"(e,g, 'C'","Fragments":["+"]},{"Key":"'C' +","Fragments":["'D'"]},{"Key":"+ 'D'","Fragments":["="]},{"Key":"'D' =","Fragments":["'B'"]},{"Key":"= 'B'","Fragments":["+"]},{"Key":"'B' +","Fragments":["'E')"]},{"Key":" However","Fragments":["you","I","I'll","you"]},{"Key":"However you","Fragments":["could","could"]},{"Key":"just keep","Fragments":["track","everything"]},{"Key":"keep track","Fragments":["of","of","of","of"]},{"Key":"track of","Fragments":["frequencies","the","both","the"]},{"Key":"of frequencies","Fragments":["of"]},{"Key":"frequencies of","Fragments":["all"]},{"Key":"the letters","Fragments":["in","have","that","instead"]},{"Key":"letters in","Fragments":["the","the","the","the","the"]},{"Key":"the words.","Fragments":["If"]},{"Key":"words. If","Fragments":["a"]},{"Key":"If a","Fragments":["word's","standard"]},{"Key":"a word's","Fragments":["letter"]},{"Key":"word's letter","Fragments":["frequencies"]},{"Key":"letter frequencies","Fragments":["are"]},{"Key":"frequencies are","Fragments":["the"]},{"Key":"as another","Fragments":["they"]},{"Key":"another they","Fragments":["will"]},{"Key":"they will","Fragments":["be","not"]},{"Key":"be anagrams.","Fragments":["This"]},{"Key":"anagrams. This","Fragments":["will"]},{"Key":"be O(n)","Fragments":["in"]},{"Key":"O(n) in","Fragments":["the"]},{"Key":"the size","Fragments":["of","of","and"]},{"Key":"size of","Fragments":["each","the","your"]},{"Key":"each of","Fragments":["the","them.","your","regex,","the","the","the"]},{"Key":"input words","Fragments":["rather"]},{"Key":"words rather","Fragments":["than"]},{"Key":"the O(n","Fragments":["log(n))"]},{"Key":"O(n log(n))","Fragments":["you"]},{"Key":"log(n)) you","Fragments":["would"]},{"Key":"would get","Fragments":["by"]},{"Key":"get by","Fragments":["sorting"]},{"Key":"by sorting","Fragments":["each"]},{"Key":"sorting each","Fragments":["of"]},{"Key":" Hopefully","Fragments":["the"]},{"Key":"Hopefully the","Fragments":["readability"]},{"Key":"the readability","Fragments":["is","of","as"]},{"Key":" Nice,","Fragments":["but"]},{"Key":"Nice, but","Fragments":["there"]},{"Key":"few simplifications","Fragments":["you"]},{"Key":"simplifications you","Fragments":["can"]},{"Key":"can make.","Fragments":["You","Go"]},{"Key":"make. You","Fragments":["can"]},{"Key":"use size_t","Fragments":["instead"]},{"Key":"size_t instead","Fragments":["of"]},{"Key":"of int","Fragments":["to"]},{"Key":"int to","Fragments":["avoid"]},{"Key":"avoid casting","Fragments":["to"]},{"Key":"casting to","Fragments":["int."]},{"Key":"to int.","Fragments":["In"]},{"Key":"int. In","Fragments":["nothingIsSaid"]},{"Key":"In nothingIsSaid","Fragments":["you"]},{"Key":"nothingIsSaid you","Fragments":["can"]},{"Key":"return true","Fragments":["when","for","for","for","for","but"]},{"Key":"true when","Fragments":["you"]},{"Key":"you find","Fragments":["non-space.","the","that","any","yourself"]},{"Key":"find non-space.","Fragments":["Instead"]},{"Key":"non-space. Instead","Fragments":["of"]},{"Key":"of speech.at(speech.size()-1)","Fragments":["you"]},{"Key":"speech.at(speech.size()-1) you","Fragments":["can"]},{"Key":"One quick","Fragments":["thing"]},{"Key":"quick thing","Fragments":["is"]},{"Key":"thing is","Fragments":["that","much","not","less"]},{"Key":"that c++11","Fragments":["has"]},{"Key":"c++11 has","Fragments":["both"]},{"Key":"has both","Fragments":["the"]},{"Key":"both the","Fragments":["```auto```","word","auto","original","current"]},{"Key":"keyword and","Fragments":["range"]},{"Key":"and range","Fragments":["based"]},{"Key":"loops so","Fragments":["that"]},{"Key":"your loop","Fragments":["can","slightly","could","to","with.","you"]},{"Key":"loop can","Fragments":["be","be","be"]},{"Key":"as ```for(","Fragments":["auto"]},{"Key":"auto c","Fragments":[":"]},{"Key":": message","Fragments":[")```"]},{"Key":"message )```","Fragments":["which"]},{"Key":")``` which","Fragments":["is"]},{"Key":"is IMO","Fragments":["much"]},{"Key":"IMO much","Fragments":["cleaner."]},{"Key":"I'd also","Fragments":["split"]},{"Key":"also split","Fragments":["each"]},{"Key":"split each","Fragments":["of"]},{"Key":"your checks","Fragments":["into"]},{"Key":"checks into","Fragments":["separate","them"]},{"Key":"separate functions","Fragments":["to","that","for"]},{"Key":"to aid","Fragments":["readability."]},{"Key":"aid readability.","Fragments":["(i.e."]},{"Key":"readability. (i.e.","Fragments":["have"]},{"Key":"(i.e. have","Fragments":["separate"]},{"Key":"have separate","Fragments":["is_shouting,"]},{"Key":"separate is_shouting,","Fragments":["is_question"]},{"Key":"is_shouting, is_question","Fragments":["etc."]},{"Key":"is_question etc.","Fragments":["functions)"]},{"Key":"etc. functions)","Fragments":["if"]},{"Key":"functions) if","Fragments":["you"]},{"Key":"to each","Fragments":["then","one"]},{"Key":"each then","Fragments":["you"]},{"Key":"shouldn't lose","Fragments":["anything"]},{"Key":"lose anything","Fragments":["in"]},{"Key":" Thanks.","Fragments":["I","That's",":)","I","I'll"]},{"Key":"Thanks. I","Fragments":["am","think"]},{"Key":"of algorithms,","Fragments":["didn't"]},{"Key":"algorithms, didn't","Fragments":["know"]},{"Key":"about this","Fragments":["variant","and","though:","code","is","problem,","I","is","one,"]},{"Key":"this variant","Fragments":["of"]},{"Key":"variant of","Fragments":["for_each"]},{"Key":"of for_each","Fragments":["until"]},{"Key":"for_each until","Fragments":["I"]},{"Key":"wrote the","Fragments":["solution","first"]},{"Key":"solution for","Fragments":["this","what"]},{"Key":"this exercise.","Fragments":["Pretty","This","Makes","I"]},{"Key":"exercise. Pretty","Fragments":["handy."]},{"Key":" Guess","Fragments":["I'm"]},{"Key":"Guess I'm","Fragments":["not"]},{"Key":"the duplicates","Fragments":["in"]},{"Key":"candidate list","Fragments":["question;"]},{"Key":"list question;","Fragments":["sort"]},{"Key":"question; sort","Fragments":["of"]},{"Key":"of depends","Fragments":["on"]},{"Key":"on whether","Fragments":["this"]},{"Key":"is treated","Fragments":["as","as"]},{"Key":"treated as","Fragments":["a","shouting,","speech,","a"]},{"Key":"a grep","Fragments":["or","|"]},{"Key":"grep or","Fragments":["a"]},{"Key":"grep |","Fragments":["uniq?"]},{"Key":"string library.","Fragments":["Responses"]},{"Key":"library. Responses","Fragments":["no"]},{"Key":"Responses no","Fragments":["longer"]},{"Key":"no longer","Fragments":["redefined","a","need","passes","retarded"]},{"Key":"longer redefined","Fragments":["with"]},{"Key":"redefined with","Fragments":["each"]},{"Key":"each call","Fragments":["to","to"]},{"Key":"to hey,","Fragments":["replaced"]},{"Key":"hey, replaced","Fragments":["const"]},{"Key":"replaced const","Fragments":["*"]},{"Key":"* with","Fragments":["const"]},{"Key":"with const","Fragments":["\u0026.","reference"]},{"Key":"const \u0026.","Fragments":["Forgot"]},{"Key":"\u0026. Forgot","Fragments":["to"]},{"Key":"Forgot to","Fragments":["remove"]},{"Key":"the \u003ccstring\u003e","Fragments":["include."]},{"Key":"I believe","Fragments":["you","that","that","that","that","both","my","my","that","my","that","that","the"]},{"Key":"believe you","Fragments":["can"]},{"Key":"replace lines","Fragments":["17"]},{"Key":"lines 17","Fragments":["-"]},{"Key":"17 -","Fragments":["20"]},{"Key":"- 20","Fragments":["with"]},{"Key":"20 with","Fragments":["just"]},{"Key":"just counts[word]","Fragments":["+="]},{"Key":"counts[word] +=","Fragments":["1"]},{"Key":"+= 1","Fragments":["by"]},{"Key":"1 by","Fragments":["leveraging"]},{"Key":"by leveraging","Fragments":["default"]},{"Key":"leveraging default","Fragments":["construction."]},{"Key":"minor thing,","Fragments":["but"]},{"Key":"thing, but","Fragments":["may"]},{"Key":"but may","Fragments":["make"]},{"Key":"may make","Fragments":["sense"]},{"Key":"make sense","Fragments":["to","if"]},{"Key":"Can make","Fragments":["line"]},{"Key":"make line","Fragments":["29-31"]},{"Key":"line 29-31","Fragments":["more"]},{"Key":"29-31 more","Fragments":["succinct"]},{"Key":"more succinct","Fragments":["with"]},{"Key":"succinct with","Fragments":["something"]},{"Key":"with something","Fragments":["like","a","like"]},{"Key":"like for","Fragments":["(auto"]},{"Key":"(auto letter","Fragments":[":"]},{"Key":"letter :","Fragments":["sentence).","conv"]},{"Key":"are certainly","Fragments":["many"]},{"Key":"certainly many","Fragments":["different"]},{"Key":"many different","Fragments":["ways"]},{"Key":"different ways","Fragments":["to"]},{"Key":"ways to","Fragments":["do","shorten","tune","reject"]},{"Key":"but wondering","Fragments":["if"]},{"Key":"if \u003e=","Fragments":["'A'"]},{"Key":"\u0026\u0026 \u003c=","Fragments":["'Z'"]},{"Key":"\u003c= 'Z'","Fragments":["||","\u0026\u0026"]},{"Key":"'Z' ||","Fragments":["\u003e="]},{"Key":"|| \u003e=","Fragments":["'a'"]},{"Key":"'a' ...","Fragments":["would"]},{"Key":"... would","Fragments":["be"]},{"Key":"be faster","Fragments":["than"]},{"Key":"faster than","Fragments":["doing","using"]},{"Key":"than doing","Fragments":["a"]},{"Key":"a find","Fragments":["on"]},{"Key":"find on","Fragments":["the"]},{"Key":"the set","Fragments":["each","is"]},{"Key":"set each","Fragments":["time"]},{"Key":"use variables","Fragments":["to"]},{"Key":"input pattern,","Fragments":["however"]},{"Key":"pattern, however","Fragments":["you"]},{"Key":"however you","Fragments":["could"]},{"Key":"could hide","Fragments":["away"]},{"Key":"hide away","Fragments":["these"]},{"Key":"away these","Fragments":["implementation"]},{"Key":"these implementation","Fragments":["details"]},{"Key":"details from","Fragments":["the"]},{"Key":"the `hey`","Fragments":["function","function,"]},{"Key":"function by","Fragments":["defining","using","reference."]},{"Key":"by defining","Fragments":["functions"]},{"Key":"defining functions","Fragments":["like"]},{"Key":"like `isShouting`,","Fragments":["etc."]},{"Key":"`isShouting`, etc.","Fragments":["to"]},{"Key":"etc. to","Fragments":["perform","help"]},{"Key":"to perform","Fragments":["the","a","all","the","all"]},{"Key":"perform the","Fragments":["work","work","work","test"]},{"Key":"work currently","Fragments":["performed"]},{"Key":"currently performed","Fragments":["directly"]},{"Key":"performed directly","Fragments":["by"]},{"Key":"directly by","Fragments":["`hey`"]},{"Key":"The name","Fragments":["\"in\""]},{"Key":"name \"in\"","Fragments":["could"]},{"Key":"\"in\" could","Fragments":["be"]},{"Key":"something a","Fragments":["little","little"]},{"Key":"more descriptive","Fragments":["like","variable"]},{"Key":"descriptive like","Fragments":["\"phrase\""]},{"Key":"like \"phrase\"","Fragments":["or"]},{"Key":"\"phrase\" or","Fragments":["\"prompt\"."]},{"Key":" statics","Fragments":["removed."]},{"Key":"statics removed.","Fragments":["I"]},{"Key":"removed. I","Fragments":["just"]},{"Key":"just checked","Fragments":["others"]},{"Key":"checked others","Fragments":["solutions"]},{"Key":"others solutions","Fragments":["to"]},{"Key":"solutions to","Fragments":["see","see"]},{"Key":"see what","Fragments":["it","a","i","I","each","you","the"]},{"Key":"without using","Fragments":["statics.","regex,","\"ctype.h\","]},{"Key":"using statics.","Fragments":[":)"]},{"Key":"The overall","Fragments":["logic"]},{"Key":"overall logic","Fragments":["is"]},{"Key":"logic is","Fragments":["very"]},{"Key":"very simple","Fragments":["so"]},{"Key":"simple so","Fragments":["I"]},{"Key":"broke up","Fragments":["more","your"]},{"Key":"up more","Fragments":["complex"]},{"Key":"more complex","Fragments":["routines","than","objects","rules.","cases"]},{"Key":"complex routines","Fragments":["in"]},{"Key":"routines in","Fragments":["aux"]},{"Key":"in aux","Fragments":["functions."]},{"Key":"use is*","Fragments":["functions"]},{"Key":"is* functions","Fragments":["to"]},{"Key":"do basic","Fragments":["checking"]},{"Key":"basic checking","Fragments":["(is"]},{"Key":"checking (is","Fragments":["space,"]},{"Key":"(is space,","Fragments":["is"]},{"Key":"space, is","Fragments":["upper"]},{"Key":"is upper","Fragments":["etc)","case\"","case."]},{"Key":"upper etc)","Fragments":["and"]},{"Key":"etc) and","Fragments":["keep"]},{"Key":"and keep","Fragments":["code","yourself","the"]},{"Key":"keep code","Fragments":["cleaner."]},{"Key":"declare functions","Fragments":["as"]},{"Key":"functions as","Fragments":["static","`static","they","possible"]},{"Key":"static because","Fragments":["it's"]},{"Key":"because it's","Fragments":["a","encapsulated","easy","simpiler"]},{"Key":"a requirement","Fragments":["from"]},{"Key":"requirement from","Fragments":["bob_test.cpp"]},{"Key":"from bob_test.cpp","Fragments":["or"]},{"Key":"bob_test.cpp or","Fragments":["boost"]},{"Key":"or boost","Fragments":["to"]},{"Key":"boost to","Fragments":["execute"]},{"Key":"to execute","Fragments":["unit"]},{"Key":"execute unit","Fragments":["testing."]},{"Key":"Good comments","Fragments":["at"]},{"Key":"comments at","Fragments":["the"]},{"Key":"file and","Fragments":["in","run","noticed"]},{"Key":"and in","Fragments":["the","the"]},{"Key":"the hey","Fragments":["function.","function","function"]},{"Key":"hey function.","Fragments":["Also,"]},{"Key":"function. Also,","Fragments":["it's","`using"]},{"Key":"it's great","Fragments":["that"]},{"Key":"great that","Fragments":["you"]},{"Key":"you put","Fragments":["in"]},{"Key":"a macro","Fragments":["guard,","guard."]},{"Key":"macro guard,","Fragments":["which"]},{"Key":"guard, which","Fragments":["is"]},{"Key":"is important","Fragments":["for","to"]},{"Key":"important for","Fragments":["multi-file"]},{"Key":"for multi-file","Fragments":["projects,"]},{"Key":"multi-file projects,","Fragments":["and"]},{"Key":"projects, and","Fragments":["it's"]},{"Key":"it's clear","Fragments":["you're"]},{"Key":"clear you're","Fragments":["keeping"]},{"Key":"you're keeping","Fragments":["in"]},{"Key":"keeping in","Fragments":["mind"]},{"Key":"in mind","Fragments":["that","working","when","for"]},{"Key":"mind that","Fragments":["application"]},{"Key":"that application","Fragments":["code"]},{"Key":"application code","Fragments":["would"]},{"Key":"would always","Fragments":["be"]},{"Key":"always be","Fragments":["split"]},{"Key":"be split","Fragments":["between","up"]},{"Key":"split between","Fragments":["header"]},{"Key":"between header","Fragments":["and"]},{"Key":"The next","Fragments":["good","logical","test","ones","stem"]},{"Key":"next good","Fragments":["design"]},{"Key":"good design","Fragments":["choice"]},{"Key":"design choice","Fragments":["is"]},{"Key":"choice is","Fragments":["that"]},{"Key":"you qualify","Fragments":["each"]},{"Key":"qualify each","Fragments":["call"]},{"Key":"to `std::string`","Fragments":["instead"]},{"Key":"`std::string` instead","Fragments":["of"]},{"Key":"the heavy-handed","Fragments":["`using"]},{"Key":"heavy-handed `using","Fragments":["namespace"]},{"Key":"namespace std`.","Fragments":["Another"]},{"Key":"std`. Another","Fragments":["option"]},{"Key":"Another option","Fragments":["you","would"]},{"Key":"option you","Fragments":["could"]},{"Key":"could consider","Fragments":["is","restrictive","creating"]},{"Key":"consider is","Fragments":["`using","to"]},{"Key":"is `using","Fragments":["std::string`"]},{"Key":"std::string` within","Fragments":["the"]},{"Key":"namespace, to","Fragments":["save"]},{"Key":"to save","Fragments":["some","a"]},{"Key":"save some","Fragments":["typing."]},{"Key":" Encapsulating","Fragments":["the"]},{"Key":"Encapsulating the","Fragments":["parse"]},{"Key":"the parse","Fragments":["functionality","function","function"]},{"Key":"parse functionality","Fragments":["outside"]},{"Key":"functionality outside","Fragments":["of"]},{"Key":"bob function","Fragments":["is"]},{"Key":"good move;","Fragments":["however,"]},{"Key":"move; however,","Fragments":["there"]},{"Key":"however, there","Fragments":["are"]},{"Key":"few details","Fragments":["that"]},{"Key":"details that","Fragments":["could"]},{"Key":" First,","Fragments":["the"]},{"Key":"First, the","Fragments":["parse"]},{"Key":"parse function","Fragments":["has","is"]},{"Key":"function has","Fragments":["to","one"]},{"Key":"the responses","Fragments":["(it","instead","as"]},{"Key":"responses (it","Fragments":["has"]},{"Key":"(it has","Fragments":["to"]},{"Key":"a number)","Fragments":["instead"]},{"Key":"number) instead","Fragments":["of"]},{"Key":"of simply","Fragments":["returning"]},{"Key":"simply returning","Fragments":["a","if"]},{"Key":"a boolean","Fragments":["or","because","and","and"]},{"Key":"boolean or","Fragments":["enum"]},{"Key":"or enum","Fragments":["describing"]},{"Key":"enum describing","Fragments":["what"]},{"Key":"describing what","Fragments":["type"]},{"Key":"what type","Fragments":["of","of"]},{"Key":"of pattern","Fragments":["the"]},{"Key":"pattern the","Fragments":["input"]},{"Key":"input has","Fragments":["(ie.","numbers,"]},{"Key":"has (ie.","Fragments":["yell,"]},{"Key":"(ie. yell,","Fragments":["question,"]},{"Key":"yell, question,","Fragments":["etc.)."]},{"Key":" Second,","Fragments":["the"]},{"Key":"Second, the","Fragments":["parse"]},{"Key":"is large.","Fragments":["It"]},{"Key":"large. It","Fragments":["would"]},{"Key":"would boost","Fragments":["readability"]},{"Key":"readability to","Fragments":["encapsulate","use","encapsulate"]},{"Key":"to encapsulate","Fragments":["the","the","this"]},{"Key":"encapsulate the","Fragments":["checks","required"]},{"Key":"checks within","Fragments":["other"]},{"Key":"within other","Fragments":["helper"]},{"Key":"other helper","Fragments":["functions"]},{"Key":"functions each","Fragments":["with"]},{"Key":"each with","Fragments":["a","a"]},{"Key":"a clear,","Fragments":["defined"]},{"Key":"clear, defined","Fragments":["purpose"]},{"Key":"defined purpose","Fragments":["(eg."]},{"Key":"purpose (eg.","Fragments":["check"]},{"Key":"(eg. check","Fragments":["if"]},{"Key":"given string","Fragments":["is"]},{"Key":"a question).","Fragments":["Solving"]},{"Key":"question). Solving","Fragments":["the"]},{"Key":"Solving the","Fragments":["second"]},{"Key":"second note","Fragments":["will"]},{"Key":"note will","Fragments":["also"]},{"Key":"also make","Fragments":["it","the"]},{"Key":"solve the","Fragments":["first.","problem","problem."]},{"Key":" @shaun","Fragments":["all"]},{"Key":"@shaun all","Fragments":["good"]},{"Key":"all good","Fragments":["points."]},{"Key":"good points.","Fragments":["I"]},{"Key":"points. I","Fragments":["didn't"]},{"Key":"the `auto`","Fragments":["syntax,"]},{"Key":"`auto` syntax,","Fragments":["but"]},{"Key":"syntax, but","Fragments":["I"]},{"Key":"like it.","Fragments":["Thanks!","(Sorry,"]},{"Key":"possibly just","Fragments":["use"]},{"Key":"const strings","Fragments":["instead"]},{"Key":"strings instead","Fragments":["of"]},{"Key":"that chooses","Fragments":["a"]},{"Key":"chooses a","Fragments":["response."]},{"Key":"was doing","Fragments":["this"]},{"Key":"way at","Fragments":["first"]},{"Key":"at first","Fragments":["as","glance"]},{"Key":"first as","Fragments":["well,"]},{"Key":"as well,","Fragments":["but","bob","so","and"]},{"Key":"well, but","Fragments":["I"]},{"Key":"out you","Fragments":["can"]},{"Key":" `namespace","Fragments":["bob"]},{"Key":"`namespace bob","Fragments":["{"]},{"Key":"hey(string words)","Fragments":["{"]},{"Key":" }`","Fragments":["instead"]},{"Key":"}` instead","Fragments":["of"]},{"Key":"and defining","Fragments":["all"]},{"Key":"defining all","Fragments":["the"]},{"Key":"the methods","Fragments":["as"]},{"Key":"as static.","Fragments":["It"]},{"Key":"static. It","Fragments":["makes"]},{"Key":"bit simpler","Fragments":["to"]},{"Key":"to follow","Fragments":["for"]},{"Key":"follow for","Fragments":["these"]},{"Key":"That would","Fragments":["definitely","resolve"]},{"Key":"would definitely","Fragments":["be","be","make","want","incur"]},{"Key":"definitely be","Fragments":["a","a","guarding"]},{"Key":"lot simpler.","Fragments":["I'm"]},{"Key":"simpler. I'm","Fragments":["not"]},{"Key":"felt compelled","Fragments":["to"]},{"Key":"compelled to","Fragments":["write"]},{"Key":"helper function","Fragments":["and","would","to","within"]},{"Key":"function and","Fragments":["an","I","the","just","one","have","I","keep","then"]},{"Key":"and an","Fragments":["`enum`.","anonymous","interesting"]},{"Key":"an `enum`.","Fragments":["Thanks!"]},{"Key":" Nobody's","Fragments":["going"]},{"Key":"Nobody's going","Fragments":["to"]},{"Key":"call me","Fragments":["on"]},{"Key":"me on","Fragments":["this","my","my"]},{"Key":"this crap?","Fragments":["This"]},{"Key":"crap? This","Fragments":["is"]},{"Key":"pretty horrific","Fragments":["solution"]},{"Key":"horrific solution","Fragments":["in"]},{"Key":"in truth.","Fragments":[":P"]},{"Key":" this","Fragments":["exercise"]},{"Key":"exercise is","Fragments":["dumb,","just"]},{"Key":"is dumb,","Fragments":["I"]},{"Key":"dumb, I","Fragments":["just"]},{"Key":"just don't","Fragments":["care"]},{"Key":"care enough","Fragments":["to"]},{"Key":"to rewrite","Fragments":["this"]},{"Key":"rewrite this","Fragments":["using"]},{"Key":"this using","Fragments":["`const","string.pop_back()","`std::min`"]},{"Key":"using `const","Fragments":["char*`","unsigned"]},{"Key":"`const char*`","Fragments":["instead","variables,"]},{"Key":"char*` instead","Fragments":["of"]},{"Key":"of `string`,","Fragments":["since"]},{"Key":"`string`, since","Fragments":["the"]},{"Key":"problem isn't","Fragments":["solved"]},{"Key":"isn't solved","Fragments":["any"]},{"Key":"solved any","Fragments":["easier"]},{"Key":"any easier","Fragments":["(in"]},{"Key":"easier (in","Fragments":["this"]},{"Key":"(in this","Fragments":["approach)"]},{"Key":"this approach)","Fragments":["using"]},{"Key":"approach) using","Fragments":["`string`"]},{"Key":"using `string`","Fragments":["features,"]},{"Key":"`string` features,","Fragments":["and"]},{"Key":"features, and","Fragments":["that"]},{"Key":"that saves","Fragments":["us"]},{"Key":"saves us","Fragments":["a"]},{"Key":"us a","Fragments":["little"]},{"Key":"of overhead.","Fragments":["I"]},{"Key":"overhead. I","Fragments":["opted"]},{"Key":"opted to","Fragments":["do"]},{"Key":"this procedurally","Fragments":["and"]},{"Key":"and completely","Fragments":["self-contained,"]},{"Key":"completely self-contained,","Fragments":["and"]},{"Key":"self-contained, and","Fragments":["I'm"]},{"Key":"and I'm","Fragments":["not","kind","not","not","really","interested","trying","always"]},{"Key":"sure what","Fragments":["the","the","you","an"]},{"Key":"the pros","Fragments":["and"]},{"Key":"pros and","Fragments":["cons"]},{"Key":"and cons","Fragments":["of"]},{"Key":"cons of","Fragments":["that"]},{"Key":"that versus","Fragments":["using"]},{"Key":"versus using","Fragments":["pre-written"]},{"Key":"using pre-written","Fragments":["libraries"]},{"Key":"pre-written libraries","Fragments":["or"]},{"Key":"libraries or","Fragments":["a","anything."]},{"Key":"a functional","Fragments":["approach"]},{"Key":"functional approach","Fragments":["would"]},{"Key":"approach would","Fragments":["be","be.","be"]},{"Key":"feel that","Fragments":["this","might"]},{"Key":"this has","Fragments":["the","the"]},{"Key":"the performance","Fragments":["advantage","penalty","hit","(see"]},{"Key":"performance advantage","Fragments":["of"]},{"Key":"advantage of","Fragments":["only","preventing"]},{"Key":"of only","Fragments":["iterating","traversing","the"]},{"Key":"only iterating","Fragments":["over"]},{"Key":"string once,","Fragments":["whereas"]},{"Key":"once, whereas","Fragments":["other"]},{"Key":"whereas other","Fragments":["people's"]},{"Key":"people's implementations","Fragments":["seem"]},{"Key":"implementations seem","Fragments":["to"]},{"Key":"time they","Fragments":["look"]},{"Key":"they look","Fragments":["for"]},{"Key":"look for","Fragments":["properties","words.","the","only","a"]},{"Key":"for properties","Fragments":["of"]},{"Key":"properties of","Fragments":["the"]},{"Key":"string (e.g.","Fragments":["is_uppercase,"]},{"Key":"(e.g. is_uppercase,","Fragments":["is_empty,"]},{"Key":"is_uppercase, is_empty,","Fragments":["is_question)."]},{"Key":"At line","Fragments":["50","20"]},{"Key":"line 50","Fragments":["you"]},{"Key":"50 you","Fragments":["could"]},{"Key":"use isspace(c)","Fragments":["to"]},{"Key":"isspace(c) to","Fragments":["check"]},{"Key":"is white","Fragments":["space."]},{"Key":"It seemed","Fragments":["to"]},{"Key":"seemed to","Fragments":["me","work","be"]},{"Key":"the enumeration","Fragments":["clouded","and"]},{"Key":"enumeration clouded","Fragments":["up"]},{"Key":"clouded up","Fragments":["the"]},{"Key":"namespace but","Fragments":["since","I"]},{"Key":"but since","Fragments":["it","this"]},{"Key":"it only","Fragments":["exists","goes","needs","once?"]},{"Key":"only exists","Fragments":["within"]},{"Key":"exists within","Fragments":["the"]},{"Key":"bob class","Fragments":["I","and"]},{"Key":"class I","Fragments":["figure"]},{"Key":"I figure","Fragments":["it's","it's"]},{"Key":"figure it's","Fragments":["alright.","better"]},{"Key":"thanks @antonietta","Fragments":["that"]},{"Key":"@antonietta that","Fragments":["might"]},{"Key":"more inclusive","Fragments":["than"]},{"Key":"inclusive than","Fragments":["`'"]},{"Key":"than `'","Fragments":["'`"]},{"Key":"`' '`","Fragments":["and"]},{"Key":"'` and","Fragments":["`'\\t'`"]},{"Key":"and `'\\t'`","Fragments":["=)"]},{"Key":" Nicely","Fragments":["done."]},{"Key":"Nicely done.","Fragments":[":)"]},{"Key":"done. :)","Fragments":["The"]},{"Key":":) The","Fragments":["only","[]"]},{"Key":"only two","Fragments":["suggestions"]},{"Key":"two suggestions","Fragments":["I"]},{"Key":"suggestions I","Fragments":["have"]},{"Key":"1. to","Fragments":["replace"]},{"Key":"replace ```boost::algorithm::ends_with(str2,","Fragments":["\"?\")```"]},{"Key":"```boost::algorithm::ends_with(str2, \"?\")```","Fragments":["with"]},{"Key":"\"?\")``` with","Fragments":["```str2.back()"]},{"Key":"with ```str2.back()","Fragments":["=="]},{"Key":"```str2.back() ==","Fragments":["'?'```"]},{"Key":"== '?'```","Fragments":["because"]},{"Key":"'?'``` because","Fragments":["```back()```"]},{"Key":"because ```back()```","Fragments":["is"]},{"Key":"```back()``` is","Fragments":["part"]},{"Key":"is part","Fragments":["of"]},{"Key":"STL since","Fragments":["C++11,"]},{"Key":"since C++11,","Fragments":["and"]},{"Key":"2. to","Fragments":["change"]},{"Key":"method signature","Fragments":["to"]},{"Key":"signature to","Fragments":["```string"]},{"Key":"to ```string","Fragments":["str```"]},{"Key":"```string str```","Fragments":["(getting"]},{"Key":"str``` (getting","Fragments":["str"]},{"Key":"(getting str","Fragments":["by-value)"]},{"Key":"str by-value)","Fragments":["which"]},{"Key":"by-value) which","Fragments":["then"]},{"Key":"which then","Fragments":["allows"]},{"Key":"then allows","Fragments":["you"]},{"Key":"allows you","Fragments":["to"]},{"Key":"you to","Fragments":["delete","return","remove","only","learn","check","not","index","check","copy"]},{"Key":"delete line","Fragments":["#9."]},{"Key":"line #9.","Fragments":[":)"]},{"Key":"You rely","Fragments":["on"]},{"Key":"on built-in","Fragments":["data"]},{"Key":"built-in data","Fragments":["structures"]},{"Key":"structures and","Fragments":["functions,"]},{"Key":"and functions,","Fragments":["which","and"]},{"Key":"very good.","Fragments":[":)"]},{"Key":"good. :)","Fragments":["May"]},{"Key":":) May","Fragments":["I"]},{"Key":"May I","Fragments":["suggest","suggest"]},{"Key":"suggest a","Fragments":["few","better"]},{"Key":"- Each","Fragments":["call"]},{"Key":"Each call","Fragments":["to"]},{"Key":"to ```fill_map```-method","Fragments":["could"]},{"Key":"```fill_map```-method could","Fragments":["be"]},{"Key":"with ```if","Fragments":["(!word.empty())"]},{"Key":"```if (!word.empty())","Fragments":["ret[word]++;```"]},{"Key":"(!word.empty()) ret[word]++;```","Fragments":["because"]},{"Key":"do always","Fragments":["prefer"]},{"Key":"always prefer","Fragments":["```!word.empty()```"]},{"Key":"prefer ```!word.empty()```","Fragments":["to"]},{"Key":"```!word.empty()``` to","Fragments":["the"]},{"Key":"check ```word","Fragments":["!="]},{"Key":"```word !=","Fragments":["\"\"```"]},{"Key":"!= \"\"```","Fragments":["because"]},{"Key":"\"\"``` because","Fragments":["in"]},{"Key":"because in","Fragments":["the","C++,","the"]},{"Key":"latter you","Fragments":["first"]},{"Key":"you first","Fragments":["initialize"]},{"Key":"first initialize","Fragments":["a"]},{"Key":"initialize a","Fragments":["string"]},{"Key":"string object","Fragments":["in"]},{"Key":"object in","Fragments":["order","the"]},{"Key":"to compare","Fragments":["it","against","it.","outputs","the","length","against.","and","the"]},{"Key":"- Lines","Fragments":["43-46:"]},{"Key":"Lines 43-46:","Fragments":["Here"]},{"Key":"43-46: Here","Fragments":["you"]},{"Key":"could rely","Fragments":["on"]},{"Key":"on ```int```'s","Fragments":["default"]},{"Key":"```int```'s default","Fragments":["constructor,"]},{"Key":"default constructor,","Fragments":["which"]},{"Key":"constructor, which","Fragments":["initializes"]},{"Key":"which initializes","Fragments":["```ret[word]```"]},{"Key":"initializes ```ret[word]```","Fragments":["to"]},{"Key":"```ret[word]``` to","Fragments":["```0```"]},{"Key":"to ```0```","Fragments":["if"]},{"Key":"```0``` if","Fragments":["word"]},{"Key":"not yet","Fragments":["contained","optimal:","familiar"]},{"Key":"yet contained","Fragments":["in"]},{"Key":"the map.","Fragments":["Hence,","So"]},{"Key":"map. Hence,","Fragments":["these"]},{"Key":"Hence, these","Fragments":["four"]},{"Key":"these four","Fragments":["lines"]},{"Key":"four lines","Fragments":["could"]},{"Key":"- Line","Fragments":["31"]},{"Key":"Line 31","Fragments":["(and"]},{"Key":"31 (and","Fragments":["thus"]},{"Key":"(and thus","Fragments":["the"]},{"Key":"thus the","Fragments":["for-loop)"]},{"Key":"the for-loop)","Fragments":["is"]},{"Key":"for-loop) is","Fragments":["not"]},{"Key":"yet optimal:","Fragments":["Every"]},{"Key":"optimal: Every","Fragments":["time"]},{"Key":"Every time","Fragments":["```+=```"]},{"Key":"time ```+=```","Fragments":["is"]},{"Key":"```+=``` is","Fragments":["called"]},{"Key":"called the","Fragments":["string"]},{"Key":"be enlarged","Fragments":["by"]},{"Key":"enlarged by","Fragments":["one"]},{"Key":"by one","Fragments":["character,","instead","of"]},{"Key":"one character,","Fragments":["which"]},{"Key":"character, which","Fragments":["in"]},{"Key":"which in","Fragments":["the","my"]},{"Key":"end might","Fragments":["result"]},{"Key":"might result","Fragments":["in"]},{"Key":"reallocations of","Fragments":["memory."]},{"Key":"of memory.","Fragments":["If"]},{"Key":"memory. If","Fragments":["you"]},{"Key":"you prefer","Fragments":["to","one"]},{"Key":"do it","Fragments":["the","otherwise.","without","better.","without","once","in","as","right."]},{"Key":"it the","Fragments":["for-loop-way,","solution"]},{"Key":"the for-loop-way,","Fragments":["you"]},{"Key":"for-loop-way, you","Fragments":["could"]},{"Key":"could instead","Fragments":["remember"]},{"Key":"instead remember","Fragments":["the"]},{"Key":"remember the","Fragments":["first"]},{"Key":"and last","Fragments":["position","but"]},{"Key":"last position","Fragments":["that"]},{"Key":"position that","Fragments":["belongs"]},{"Key":"that belongs","Fragments":["to"]},{"Key":"belongs to","Fragments":["a"]},{"Key":"and _then_","Fragments":["construct"]},{"Key":"_then_ construct","Fragments":["it"]},{"Key":"construct it","Fragments":["after"]},{"Key":"it after","Fragments":["line"]},{"Key":"after line","Fragments":["26."]},{"Key":"the auto","Fragments":["and","lines,"]},{"Key":"auto and","Fragments":["loop"]},{"Key":"and loop","Fragments":["advice,","can","once"]},{"Key":"loop advice,","Fragments":["I'll"]},{"Key":"advice, I'll","Fragments":["definitely"]},{"Key":"I'll definitely","Fragments":["use"]},{"Key":"definitely use","Fragments":["these"]},{"Key":"use these","Fragments":["more.","lessons"]},{"Key":"that well","Fragments":["named"]},{"Key":"well named","Fragments":["test","variables"]},{"Key":"named test","Fragments":["functions"]},{"Key":"test functions","Fragments":["often"]},{"Key":"functions often","Fragments":["help"]},{"Key":"often help","Fragments":["readability,"]},{"Key":"help readability,","Fragments":["getting"]},{"Key":"readability, getting","Fragments":["a"]},{"Key":"getting a","Fragments":["reasonable","error","compiler"]},{"Key":"a reasonable","Fragments":["balance"]},{"Key":"reasonable balance","Fragments":["between"]},{"Key":"balance between","Fragments":["offloading","storing"]},{"Key":"between offloading","Fragments":["small"]},{"Key":"offloading small","Fragments":["checks"]},{"Key":"small checks","Fragments":["into"]},{"Key":"into them","Fragments":["at"]},{"Key":"them at","Fragments":["the","http://www.comeaucomputing.com/techtalk/#nostatic"]},{"Key":"the expense","Fragments":["of","of"]},{"Key":"expense of","Fragments":["greater","a"]},{"Key":"of greater","Fragments":["code"]},{"Key":"greater code","Fragments":["size,"]},{"Key":"code size,","Fragments":["and"]},{"Key":"size, and","Fragments":["instead"]},{"Key":"and instead","Fragments":["having","change","use"]},{"Key":"instead having","Fragments":["well"]},{"Key":"having well","Fragments":["named"]},{"Key":"named variables","Fragments":["for"]},{"Key":"variables for","Fragments":["the","the"]},{"Key":"result of","Fragments":["the","`evaluate(sentence)`\u003c/li\u003e","`const","`evaluate(sentence)`\u003c/li\u003e","`const","`evaluate(sentence)`\u003c/li\u003e","pre-increment","back()"]},{"Key":"the space","Fragments":["taken","after"]},{"Key":"space taken","Fragments":["by"]},{"Key":"taken by","Fragments":["any"]},{"Key":"by any","Fragments":["unit"]},{"Key":"any unit","Fragments":["of"]},{"Key":"unit of","Fragments":["code"]},{"Key":"a tricky","Fragments":["one."]},{"Key":"thanks @glenda","Fragments":["I"]},{"Key":"@glenda I","Fragments":["will"]},{"Key":"will implement","Fragments":["your"]},{"Key":"implement your","Fragments":["suggestions"]},{"Key":"suggestions at","Fragments":["some"]},{"Key":"some point","Fragments":["over","```s1[4]"]},{"Key":"point over","Fragments":["this"]},{"Key":"over this","Fragments":["weekend."]},{"Key":"this weekend.","Fragments":["They"]},{"Key":"weekend. They","Fragments":["all"]},{"Key":"They all","Fragments":["seem"]},{"Key":"all seem","Fragments":["very"]},{"Key":"seem very","Fragments":["valid.","C++"]},{"Key":"very valid.","Fragments":["I"]},{"Key":"valid. I","Fragments":["did"]},{"Key":"didn't think","Fragments":["about","through","about","of","too","they","to","I"]},{"Key":"about efficiency.","Fragments":["Remembering"]},{"Key":"efficiency. Remembering","Fragments":["indexes"]},{"Key":"Remembering indexes","Fragments":["would"]},{"Key":"indexes would","Fragments":["definitely"]},{"Key":"a more","Fragments":["optimal","careful","maintainable","definite","performant","elegant","restrictive","easily","consise","readable","c++","efficient","specific","refined","general"]},{"Key":"more optimal","Fragments":["way"]},{"Key":"optimal way","Fragments":["to"]},{"Key":"to go","Fragments":["about","about","for","about","down","about","down"]},{"Key":"go about","Fragments":["creating","checking","this","this"]},{"Key":"about creating","Fragments":["the"]},{"Key":"creating the","Fragments":["word.","names"]},{"Key":" Yea","Fragments":["well,"]},{"Key":"Yea well,","Fragments":["that"]},{"Key":"well, that","Fragments":["works"]},{"Key":"that works","Fragments":[":P"]},{"Key":" Kinda","Fragments":["the"]},{"Key":"Kinda the","Fragments":["idea"]},{"Key":"idea was","Fragments":["to"]},{"Key":"not paste","Fragments":["the"]},{"Key":"paste the","Fragments":["entire","crux"]},{"Key":"entire song","Fragments":["into"]},{"Key":"song into","Fragments":["a"]},{"Key":"string array,","Fragments":["but"]},{"Key":"array, but","Fragments":["to"]},{"Key":"but to","Fragments":["generate","be","anything"]},{"Key":"to generate","Fragments":["as","a"]},{"Key":"generate as","Fragments":["much"]},{"Key":"as much","Fragments":["of","c++11","as"]},{"Key":"the text","Fragments":["algorithmically","consists","could","that"]},{"Key":"text algorithmically","Fragments":["as"]},{"Key":"algorithmically as","Fragments":["feasible."]},{"Key":"A good","Fragments":["half"]},{"Key":"good half","Fragments":["of"]},{"Key":"half of","Fragments":["the"]},{"Key":"text consists","Fragments":["of"]},{"Key":"consists of","Fragments":["\"She"]},{"Key":"of \"She","Fragments":["swallowed"]},{"Key":"\"She swallowed","Fragments":["the"]},{"Key":"swallowed the","Fragments":["x"]},{"Key":"the x","Fragments":["to"]},{"Key":"x to","Fragments":["catch"]},{"Key":"to catch","Fragments":["the","questions"]},{"Key":"catch the","Fragments":["y\","]},{"Key":"the y\",","Fragments":["so"]},{"Key":"y\", so","Fragments":["that"]},{"Key":"be generated","Fragments":["through","in"]},{"Key":"generated through","Fragments":["code."]},{"Key":"to concede","Fragments":["that"]},{"Key":"concede that","Fragments":["this"]},{"Key":"this solution","Fragments":["is","couldn't","please","and","is"]},{"Key":"the fastest","Fragments":["one","running"]},{"Key":"fastest one","Fragments":["to"]},{"Key":"one to","Fragments":["write","nitpick"]},{"Key":"write and","Fragments":["run","possibly"]},{"Key":"and run","Fragments":[":D","cmake"]},{"Key":"This looks","Fragments":["clean,","pretty","like","clean,"]},{"Key":"looks clean,","Fragments":["concise","but"]},{"Key":"clean, concise","Fragments":["and"]},{"Key":"concise and","Fragments":["well-composed.","clean."]},{"Key":"and well-composed.","Fragments":["You"]},{"Key":"well-composed. You","Fragments":["could"]},{"Key":"boost your","Fragments":["encapsulation"]},{"Key":"your encapsulation","Fragments":["by"]},{"Key":"encapsulation by","Fragments":["perform"]},{"Key":"by perform","Fragments":["the"]},{"Key":"of counting","Fragments":["words"]},{"Key":"counting words","Fragments":["in"]},{"Key":"words in","Fragments":["a","the"]},{"Key":"helper function.","Fragments":["Also,","More"]},{"Key":"Also, `using","Fragments":["namespace"]},{"Key":"std` can","Fragments":["be"]},{"Key":"bit heavy-handed","Fragments":["and","and"]},{"Key":"heavy-handed and","Fragments":["pollute","can"]},{"Key":"and pollute","Fragments":["your"]},{"Key":"pollute your","Fragments":["global"]},{"Key":"your global","Fragments":["namespace"]},{"Key":"global namespace","Fragments":["with","pollution,"]},{"Key":"namespace with","Fragments":["unneeded"]},{"Key":"with unneeded","Fragments":["definitions."]},{"Key":"unneeded definitions.","Fragments":["Good"]},{"Key":"definitions. Good","Fragments":["you"]},{"Key":"Good you","Fragments":["also"]},{"Key":"you also","Fragments":["included","do"]},{"Key":"also included","Fragments":["a"]},{"Key":"included a","Fragments":["macro"]},{"Key":"I moved","Fragments":["everything","everything"]},{"Key":"moved everything","Fragments":["from","to"]},{"Key":"everything from","Fragments":["a"]},{"Key":"namespace thanks","Fragments":["to"]},{"Key":"thanks to","Fragments":["@sonia","everybody","@antonetta's","well-placed","the","feedback","good","feedback"]},{"Key":"to @sonia","Fragments":["."]},{"Key":"@sonia .","Fragments":["i"]},{"Key":". i","Fragments":["also"]},{"Key":"i also","Fragments":["changed"]},{"Key":"also changed","Fragments":["som","the"]},{"Key":"changed som","Fragments":["off"]},{"Key":"som off","Fragments":["the"]},{"Key":"the bool","Fragments":["to","expressions","variable","as","and"]},{"Key":"it easer","Fragments":["to"]},{"Key":"easer to","Fragments":["understand"]},{"Key":"they do(might","Fragments":["have"]},{"Key":"do(might have","Fragments":["added"]},{"Key":"have added","Fragments":["a","some"]},{"Key":"few cpu","Fragments":["cycles)"]},{"Key":"I've certainly","Fragments":["reimplemented"]},{"Key":"certainly reimplemented","Fragments":["some"]},{"Key":"reimplemented some","Fragments":["library"]},{"Key":"some library","Fragments":["functionality","functions"]},{"Key":"library functionality","Fragments":["with"]},{"Key":"functionality with","Fragments":["my"]},{"Key":"with my","Fragments":["character","class","machine."]},{"Key":"my character","Fragments":["matching"]},{"Key":"character matching","Fragments":["and","routine"]},{"Key":"matching and","Fragments":["stripping,"]},{"Key":"and stripping,","Fragments":["however"]},{"Key":"stripping, however","Fragments":["I'm"]},{"Key":"however I'm","Fragments":["not"]},{"Key":"best alternative","Fragments":["approach"]},{"Key":"alternative approach","Fragments":["would"]},{"Key":"would be.","Fragments":["Maybe"]},{"Key":"be. Maybe","Fragments":["loop"]},{"Key":"Maybe loop","Fragments":["the"]},{"Key":"loop the","Fragments":["the"]},{"Key":"the the","Fragments":["string,","\"Fine","song","old"]},{"Key":"string, cutting","Fragments":["out"]},{"Key":"cutting out","Fragments":["sections"]},{"Key":"out sections","Fragments":["containing"]},{"Key":"sections containing","Fragments":["undesired"]},{"Key":"containing undesired","Fragments":["chars?"]},{"Key":"had some","Fragments":["trouble","errors"]},{"Key":"some trouble","Fragments":["moving"]},{"Key":"trouble moving","Fragments":["the"]},{"Key":"word extraction","Fragments":["to"]},{"Key":"extraction to","Fragments":["it's"]},{"Key":"to it's","Fragments":["own","characters"]},{"Key":"it's own","Fragments":["function,","copy","translation","function"]},{"Key":"own function,","Fragments":["since"]},{"Key":"function, since","Fragments":["I"]},{"Key":"with whitespace","Fragments":["removed"]},{"Key":"whitespace removed","Fragments":["and"]},{"Key":"removed and","Fragments":["the","its","is"]},{"Key":"of characters","Fragments":["cut","to","which","change"]},{"Key":"characters cut","Fragments":["from"]},{"Key":"cut from","Fragments":["the"]},{"Key":"there's any","Fragments":["advantage","remainder,"]},{"Key":"any advantage","Fragments":["to"]},{"Key":"advantage to","Fragments":["making"]},{"Key":"to making","Fragments":["the","it"]},{"Key":"whole string","Fragments":["lowercase,","and","is","is","is","when"]},{"Key":"string lowercase,","Fragments":["or"]},{"Key":"lowercase, or","Fragments":["doing"]},{"Key":"or doing","Fragments":["it"]},{"Key":"it word","Fragments":["by"]},{"Key":"word by","Fragments":["word."]},{"Key":" Ty,","Fragments":["didn't"]},{"Key":"Ty, didn't","Fragments":["really"]},{"Key":"didn't really","Fragments":["think","like"]},{"Key":"really think","Fragments":["of"]},{"Key":"doing that.","Fragments":["going"]},{"Key":"that. going","Fragments":["to"]},{"Key":"it look","Fragments":["a","that"]},{"Key":"look a","Fragments":["lot"]},{"Key":" Well,","Fragments":["I"]},{"Key":"Well, I","Fragments":["think"]},{"Key":"you can't","Fragments":["use","remember"]},{"Key":"can't use","Fragments":["an"]},{"Key":"unordered_map because","Fragments":["the"]},{"Key":"tests require","Fragments":["you"]},{"Key":"require you","Fragments":["to"]},{"Key":" Come","Fragments":["to"]},{"Key":"Come to","Fragments":["think"]},{"Key":"of it,","Fragments":["I","but"]},{"Key":"it, I","Fragments":["don't","think"]},{"Key":"I've ever","Fragments":["used"]},{"Key":"ever used","Fragments":["a"]},{"Key":"a std::unordered_map","Fragments":["in"]},{"Key":"std::unordered_map in","Fragments":["my"]},{"Key":" Hey","Fragments":["there,","@leon,","@reba","man,"]},{"Key":" got","Fragments":["one"]},{"Key":"got one","Fragments":["smaller"]},{"Key":"one smaller","Fragments":["thing"]},{"Key":"smaller thing","Fragments":["and"]},{"Key":"thing and","Fragments":["a"]},{"Key":"bigger one","Fragments":["to"]},{"Key":"to nitpick","Fragments":["about","me","something,"]},{"Key":"nitpick about","Fragments":[":)"]},{"Key":"1) `returnValue[wordBuffer]","Fragments":["=="]},{"Key":"`returnValue[wordBuffer] ==","Fragments":["'\\0'`"]},{"Key":"== '\\0'`","Fragments":["here"]},{"Key":"'\\0'` here","Fragments":["you"]},{"Key":"here you","Fragments":["should"]},{"Key":"have `==","Fragments":["0`"]},{"Key":"`== 0`","Fragments":["instead."]},{"Key":"0` instead.","Fragments":["You're"]},{"Key":"instead. You're","Fragments":["comparing"]},{"Key":"You're comparing","Fragments":["a"]},{"Key":"comparing a","Fragments":["char"]},{"Key":"char to","Fragments":["an"]},{"Key":"2) As","Fragments":["you"]},{"Key":"see for","Fragments":["yourself..."]},{"Key":"for yourself...","Fragments":["the"]},{"Key":"yourself... the","Fragments":["code"]},{"Key":"is difficult","Fragments":["to"]},{"Key":"to read.","Fragments":["Lots","The"]},{"Key":"read. Lots","Fragments":["of"]},{"Key":"Lots of","Fragments":["ifs,"]},{"Key":"of ifs,","Fragments":["lots"]},{"Key":"ifs, lots","Fragments":["of"]},{"Key":"of obscure","Fragments":["conditions."]},{"Key":"obscure conditions.","Fragments":["And"]},{"Key":"conditions. And","Fragments":["you"]},{"Key":"And you","Fragments":["also"]},{"Key":"also do","Fragments":["certain"]},{"Key":"do certain","Fragments":["work"]},{"Key":"certain work","Fragments":["more"]},{"Key":"work more","Fragments":["than"]},{"Key":"than once.","Fragments":["For"]},{"Key":"once. For","Fragments":["example,"]},{"Key":"example, a","Fragments":["string"]},{"Key":"like \"hello,there\"","Fragments":["would"]},{"Key":"\"hello,there\" would","Fragments":["go"]},{"Key":"would go","Fragments":["through"]},{"Key":"go through","Fragments":["the","1"]},{"Key":"the process","Fragments":["of","is","of","more"]},{"Key":"process of","Fragments":["replacing","going"]},{"Key":"of replacing","Fragments":["non-alnum"]},{"Key":"replacing non-alnum","Fragments":["chars"]},{"Key":"non-alnum chars","Fragments":["with"]},{"Key":"chars with","Fragments":["whitespaces"]},{"Key":"with whitespaces","Fragments":["twice."]},{"Key":"the reason","Fragments":["for","I"]},{"Key":"the complicated","Fragments":["code"]},{"Key":"complicated code","Fragments":["is"]},{"Key":"is because","Fragments":["of","the","of","it"]},{"Key":"because of","Fragments":["the","these","dependency","this","how","indexing","the","line","the"]},{"Key":"way you've","Fragments":["approached"]},{"Key":"you've approached","Fragments":["the"]},{"Key":"problem. You","Fragments":["try"]},{"Key":"You try","Fragments":["to"]},{"Key":"find and","Fragments":["replace"]},{"Key":"and replace","Fragments":["any"]},{"Key":"replace any","Fragments":["punctuation"]},{"Key":"any punctuation","Fragments":["with"]},{"Key":"punctuation with","Fragments":["'"]},{"Key":"with '","Fragments":["'"]},{"Key":"' '","Fragments":["before"]},{"Key":"' before","Fragments":["you"]},{"Key":"before you","Fragments":["look","check","use","do"]},{"Key":"think a","Fragments":["better","better","\"beer"]},{"Key":"better approach","Fragments":["is","is"]},{"Key":"approach is","Fragments":["to","to"]},{"Key":"search for","Fragments":["the","the","uppercase","this","prime"]},{"Key":"beginning and","Fragments":["end","end","ending"]},{"Key":"of alpha-numerical","Fragments":["sequences","sequences"]},{"Key":"alpha-numerical sequences","Fragments":["in","in"]},{"Key":"sequences in","Fragments":["the","the"]},{"Key":"just ignore","Fragments":["any","any","the"]},{"Key":"ignore any","Fragments":["non-alphanum","non-alphanum"]},{"Key":"any non-alphanum","Fragments":["chars","chars"]},{"Key":"non-alphanum chars","Fragments":["completely.","completely."]},{"Key":"chars completely.","Fragments":["You","You"]},{"Key":"completely. You","Fragments":["can","can"]},{"Key":"use [`std::find_if`](http://www.cplusplus.com/reference/algorithm/find_if/)","Fragments":["for","for"]},{"Key":"[`std::find_if`](http://www.cplusplus.com/reference/algorithm/find_if/) for","Fragments":["that.","that,"]},{"Key":" ^","Fragments":["^","^"]},{"Key":" start","Fragments":["end","end"]},{"Key":" Basically,","Fragments":["if","if"]},{"Key":"Basically, if","Fragments":["`\"..!longword@,?\"`","`\"..!longword@,?\"`"]},{"Key":"if `\"..!longword@,?\"`","Fragments":["is","is"]},{"Key":"`\"..!longword@,?\"` is","Fragments":["the","the"]},{"Key":"input string,","Fragments":["you'd","you'd"]},{"Key":"string, you'd","Fragments":["try","try"]},{"Key":"you'd try","Fragments":["to","to"]},{"Key":"to immediate","Fragments":["find","find"]},{"Key":"immediate find","Fragments":["the","the"]},{"Key":"start and","Fragments":["end","end","end","end"]},{"Key":"put into","Fragments":["the","the","an"]},{"Key":"can greatly","Fragments":["reduce","reduce"]},{"Key":"greatly reduce","Fragments":["the","the"]},{"Key":"required code","Fragments":["with","with"]},{"Key":" (Alternatively,","Fragments":["you"]},{"Key":"(Alternatively, you","Fragments":["could"]},{"Key":"a tokenizer","Fragments":["like","already"]},{"Key":"tokenizer like","Fragments":["`boost::tokenizer`"]},{"Key":"like `boost::tokenizer`","Fragments":["to"]},{"Key":"`boost::tokenizer` to","Fragments":["do"]},{"Key":"the job","Fragments":["for","and","done","done."]},{"Key":"job for","Fragments":["you.)"]},{"Key":" Hi,","Fragments":["a","thank"]},{"Key":"Hi, a","Fragments":["suggestion.."]},{"Key":"it's shouting","Fragments":["and"]},{"Key":"it's silence","Fragments":["on"]},{"Key":"silence on","Fragments":["the"]},{"Key":"would improve","Fragments":["performance"]},{"Key":"improve performance","Fragments":["from"]},{"Key":"performance from","Fragments":["your"]},{"Key":"from your","Fragments":["code","first","first","previous"]},{"Key":"I'd say","Fragments":["that","that's","that","that","that"]},{"Key":"that making","Fragments":["the"]},{"Key":"string lower_case","Fragments":["at"]},{"Key":"lower_case at","Fragments":["once"]},{"Key":"at once","Fragments":["is","instead"]},{"Key":"once is","Fragments":["the","pretty"]},{"Key":"better approach.","Fragments":["This"]},{"Key":"approach. This","Fragments":["way"]},{"Key":"you keep","Fragments":["that","both","the"]},{"Key":"keep that","Fragments":["piece","in"]},{"Key":"that piece","Fragments":["of"]},{"Key":"piece of","Fragments":["code","code.","code","code","code"]},{"Key":"code out","Fragments":["of"]},{"Key":"thing I","Fragments":["notice","would","would","noticed","was","keep"]},{"Key":"notice is","Fragments":["that"]},{"Key":"you're not","Fragments":["using","correctly"]},{"Key":"two of","Fragments":["your"]},{"Key":"your string","Fragments":["globals","is","if"]},{"Key":"string globals","Fragments":["so"]},{"Key":"globals so","Fragments":["you"]},{"Key":"can remove","Fragments":["them.","the"]},{"Key":"An issue","Fragments":["is","I"]},{"Key":"not correctly","Fragments":["parsing"]},{"Key":"correctly parsing","Fragments":["things"]},{"Key":"parsing things","Fragments":["like"]},{"Key":"things like","Fragments":["`\"this,is\"`.","lookaheads","\"AAA\"","this","i,"]},{"Key":"like `\"this,is\"`.","Fragments":["Your"]},{"Key":"`\"this,is\"`. Your","Fragments":["program"]},{"Key":"Your program","Fragments":["doesn't"]},{"Key":"program doesn't","Fragments":["parse"]},{"Key":"doesn't parse","Fragments":["it"]},{"Key":"parse it","Fragments":["as"]},{"Key":"as two","Fragments":["different","tasks,"]},{"Key":"different word,","Fragments":["but"]},{"Key":"word, but","Fragments":["turns","on"]},{"Key":"but turns","Fragments":["it"]},{"Key":"turns it","Fragments":["into"]},{"Key":"have trouble","Fragments":["with"]},{"Key":"trouble with","Fragments":["removal"]},{"Key":"with removal","Fragments":["of"]},{"Key":"removal of","Fragments":["whitespace"]},{"Key":"of whitespace","Fragments":["and"]},{"Key":"whitespace and","Fragments":["other","not","alphanumeric"]},{"Key":"and other","Fragments":["undesirable","exercises.","things"]},{"Key":"other undesirable","Fragments":["chars,"]},{"Key":"undesirable chars,","Fragments":["then"]},{"Key":"chars, then","Fragments":["I"]},{"Key":"suggest an","Fragments":["alternative:"]},{"Key":"for that,","Fragments":["or"]},{"Key":"that, or","Fragments":["a"]},{"Key":"a number","Fragments":["of","of","of","at","of","of","times","to"]},{"Key":"of other","Fragments":["functions.","things.","errors.","people"]},{"Key":"of \"longword\"","Fragments":["to"]},{"Key":"\"longword\" to","Fragments":["put"]},{"Key":"the std::map.","Fragments":["Everything"]},{"Key":"std::map. Everything","Fragments":["that"]},{"Key":"Everything that","Fragments":["isn't"]},{"Key":"isn't a","Fragments":["number","yell).","date"]},{"Key":"of letter","Fragments":["is"]},{"Key":"letter is","Fragments":["of","upper/lower","a","the","uppercase"]},{"Key":"is of","Fragments":["absolutely"]},{"Key":"of absolutely","Fragments":["no"]},{"Key":"absolutely no","Fragments":["concern."]},{"Key":" @dixie","Fragments":["Thanks"]},{"Key":"@dixie Thanks","Fragments":["for"]},{"Key":"guess the","Fragments":["alternative"]},{"Key":"the alternative","Fragments":["to"]},{"Key":"alternative to","Fragments":["the","consider","indexing"]},{"Key":"the mutable","Fragments":["string","string"]},{"Key":"mutable string","Fragments":["input","input"]},{"Key":"string input","Fragments":["in","in"]},{"Key":"your example","Fragments":["is","disables)"]},{"Key":"example is","Fragments":["something"]},{"Key":"is something","Fragments":["like","like:","with"]},{"Key":"func(std::string const","Fragments":["\u0026s){"]},{"Key":"std::string s_func","Fragments":["="]},{"Key":"s_func =","Fragments":["s;"]},{"Key":" s_func","Fragments":["+="]},{"Key":"s_func +=","Fragments":["i;"]},{"Key":"of choosing","Fragments":["the"]},{"Key":"choosing the","Fragments":["mutable"]},{"Key":"case, as","Fragments":["it"]},{"Key":"will use","Fragments":["less"]},{"Key":"use less","Fragments":["memory."]},{"Key":"less memory.","Fragments":["My"]},{"Key":"memory. My","Fragments":["question"]},{"Key":"My question","Fragments":["is","is"]},{"Key":"is are","Fragments":["there","there"]},{"Key":"are there","Fragments":["any","any"]},{"Key":"there any","Fragments":["clear","clear","difference","reason"]},{"Key":"any clear","Fragments":["benefits","benefits"]},{"Key":"clear benefits","Fragments":["of","of"]},{"Key":"using const","Fragments":["inputs","inputs","char"]},{"Key":"const inputs","Fragments":["and","are","and"]},{"Key":"inputs and","Fragments":["copying","copying"]},{"Key":"and copying","Fragments":["them","them"]},{"Key":"copying them","Fragments":["to","to"]},{"Key":"other variables","Fragments":["if","if"]},{"Key":"variables if","Fragments":["they","they"]},{"Key":"they need","Fragments":["to","to","to"]},{"Key":"be changed","Fragments":["in","in"]},{"Key":"changed in","Fragments":["the","the","the"]},{"Key":" Clearly","Fragments":["for"]},{"Key":"Clearly for","Fragments":["the"]},{"Key":"the hamming","Fragments":["problem,","namespace,","class."]},{"Key":"hamming problem,","Fragments":["const"]},{"Key":"problem, const","Fragments":["inputs"]},{"Key":"inputs are","Fragments":["the"]},{"Key":"Thanks again.","Fragments":[":)"]},{"Key":"saw people","Fragments":["talking"]},{"Key":"people talking","Fragments":["about"]},{"Key":"about anonymous","Fragments":["namespace,","namespaces,"]},{"Key":"tried it","Fragments":["out."]},{"Key":" Now,","Fragments":["I'm","I","there","I"]},{"Key":"Now, I'm","Fragments":["using"]},{"Key":"using only","Fragments":["one","one"]},{"Key":"one for","Fragments":["loop","loop"]},{"Key":"loop to","Fragments":["check","the","happen","perform","examine","a","iterate"]},{"Key":"it's yelling","Fragments":["and"]},{"Key":"a prolonged","Fragments":["silence."]},{"Key":" Commented","Fragments":["code"]},{"Key":"Commented code","Fragments":["removed."]},{"Key":"For checking","Fragments":["if"]},{"Key":"checking if","Fragments":["each","the","the","the","the"]},{"Key":"if each","Fragments":["letter"]},{"Key":"each letter","Fragments":["is","of","of","is"]},{"Key":"is upper/lower","Fragments":["case"]},{"Key":"upper/lower case","Fragments":["you"]},{"Key":"case you","Fragments":["can","could"]},{"Key":"use isupper(letter)","Fragments":["or"]},{"Key":"isupper(letter) or","Fragments":["islower(letter)."]},{"Key":"or islower(letter).","Fragments":["Similarly"]},{"Key":"islower(letter). Similarly","Fragments":["you"]},{"Key":"Similarly you","Fragments":["can"]},{"Key":"use isspace(letter)","Fragments":["to"]},{"Key":"isspace(letter) to","Fragments":["check"]},{"Key":"a character","Fragments":["is","that","matching","by"]},{"Key":"is sort","Fragments":["of"]},{"Key":"of what","Fragments":["I"]},{"Key":"what I","Fragments":["would","mean.","am","expected.","do.","did.","needed.","think","was","do.","come","felt","would","have","want","did).","understand,"]},{"Key":"in C.","Fragments":["I","That"]},{"Key":"C. I","Fragments":["tried","guess"]},{"Key":"a C++","Fragments":["way","book.","style"]},{"Key":"C++ way","Fragments":["to","(which"]},{"Key":"solve this","Fragments":["but","as","problem.","assignment"]},{"Key":"this but","Fragments":["I","it"]},{"Key":"couldn't come","Fragments":["up"]},{"Key":"come up","Fragments":["with","with","with","with!"]},{"Key":"with anything","Fragments":["that's"]},{"Key":"anything that's","Fragments":["shorter"]},{"Key":"that's shorter","Fragments":["or"]},{"Key":"shorter or","Fragments":["clearer"]},{"Key":"or clearer","Fragments":["than"]},{"Key":"noticed how","Fragments":["isalpha,","it"]},{"Key":"how isalpha,","Fragments":["islower,"]},{"Key":"isalpha, islower,","Fragments":["etc."]},{"Key":"islower, etc.","Fragments":["are"]},{"Key":"etc. are","Fragments":["formed"]},{"Key":"are formed","Fragments":["as"]},{"Key":"formed as","Fragments":["assertions"]},{"Key":"as assertions","Fragments":["or"]},{"Key":"assertions or","Fragments":["questions?"]},{"Key":"or questions?","Fragments":["Have"]},{"Key":"questions? Have","Fragments":["you"]},{"Key":"how it","Fragments":["makes","allows"]},{"Key":"makes an","Fragments":["if-statement"]},{"Key":"an if-statement","Fragments":["look"]},{"Key":"if-statement look","Fragments":["almost"]},{"Key":"look almost","Fragments":["like"]},{"Key":"almost like","Fragments":["an"]},{"Key":"an actual","Fragments":["sentence?","person;"]},{"Key":" Which","Fragments":["makes"]},{"Key":"Which makes","Fragments":["more"]},{"Key":"makes more","Fragments":["sense","sense.\u003c/li\u003e","sense"]},{"Key":"more sense","Fragments":["when","in","to"]},{"Key":"sense when","Fragments":["read"]},{"Key":"when read","Fragments":["out"]},{"Key":"read out","Fragments":["loud:"]},{"Key":"out loud:","Fragments":["\"if"]},{"Key":"loud: \"if","Fragments":["is"]},{"Key":"\"if is","Fragments":["upper"]},{"Key":"upper case\"","Fragments":["or"]},{"Key":"case\" or","Fragments":["\"if"]},{"Key":"or \"if","Fragments":["check"]},{"Key":"\"if check","Fragments":["upper"]},{"Key":"check upper","Fragments":["case\"?"]},{"Key":"figured a","Fragments":["nice","single"]},{"Key":"nice way","Fragments":["to"]},{"Key":"to sort","Fragments":["the","just","it","correctly"]},{"Key":"and test","Fragments":["if","suite."]},{"Key":"test if","Fragments":["they","the","a"]},{"Key":"were equal.","Fragments":["Looking"]},{"Key":"equal. Looking","Fragments":["at"]},{"Key":"other solutions,","Fragments":["I"]},{"Key":"solutions, I","Fragments":["see"]},{"Key":"see there","Fragments":["is"]},{"Key":"function ```std::is_permutation```","Fragments":["from"]},{"Key":"```std::is_permutation``` from","Fragments":["algorithm,"]},{"Key":"from algorithm,","Fragments":["which"]},{"Key":"algorithm, which","Fragments":["would"]},{"Key":"would also","Fragments":["work","make","return","get"]},{"Key":"also work","Fragments":["nicely.","for"]},{"Key":" \u003e","Fragments":["My","If","`checkPoke`","For"]},{"Key":"\u003e My","Fragments":["question"]},{"Key":"Not to","Fragments":["my"]},{"Key":"to my","Fragments":["knowledge.","code.","unfortold","desktop","house","pushing","previous"]},{"Key":"my knowledge.","Fragments":["If"]},{"Key":"knowledge. If","Fragments":["you"]},{"Key":"the variable,","Fragments":["you"]},{"Key":"variable, you","Fragments":["better"]},{"Key":"you better","Fragments":["pass"]},{"Key":"better pass","Fragments":["it"]},{"Key":"value. Less","Fragments":["code"]},{"Key":"Less code","Fragments":["and"]},{"Key":"no difference","Fragments":["in"]},{"Key":"difference in","Fragments":["performance.","expressiveness."]},{"Key":" Yea,","Fragments":["in","I'm"]},{"Key":"Yea, in","Fragments":["my"]},{"Key":"opinion private","Fragments":["enums"]},{"Key":"private enums","Fragments":["in"]},{"Key":"enums in","Fragments":["a"]},{"Key":"class are","Fragments":["fine."]},{"Key":"could change","Fragments":["the","one","them"]},{"Key":"the `for(int","Fragments":["i=0;i\u003cprompt.size();++i)`"]},{"Key":"`for(int i=0;i\u003cprompt.size();++i)`","Fragments":["into"]},{"Key":"i=0;i\u003cprompt.size();++i)` into","Fragments":["a"]},{"Key":"for-element loop","Fragments":["`for(char","`for(char"]},{"Key":"loop `for(char","Fragments":["c","c"]},{"Key":"`for(char c","Fragments":[":",":"]},{"Key":": prompt)`","Fragments":["if"]},{"Key":"prompt)` if","Fragments":["you're"]},{"Key":"if you're","Fragments":["using","working","using","interested.","throwing"]},{"Key":"a C++11","Fragments":["compiler.","compiler."]},{"Key":"C++11 compiler.","Fragments":["That'll","That'll"]},{"Key":"compiler. That'll","Fragments":["remove","make"]},{"Key":"That'll remove","Fragments":["the"]},{"Key":"the chance","Fragments":["for","of","to","I"]},{"Key":"chance for","Fragments":["errors","confusion."]},{"Key":"for errors","Fragments":["during"]},{"Key":"errors during","Fragments":["the","link"]},{"Key":"during the","Fragments":["loop","objects"]},{"Key":"loop and","Fragments":["you","a","iterate","go","return"]},{"Key":"`i` variable","Fragments":["anymore."]},{"Key":"You also","Fragments":["don't","don't"]},{"Key":"the `break;`","Fragments":["in"]},{"Key":"`break;` in","Fragments":["`case"]},{"Key":"in `case","Fragments":["X:"]},{"Key":"`case X:","Fragments":["return"]},{"Key":"X: return","Fragments":["\"blah\";"]},{"Key":"return \"blah\";","Fragments":["break;`"]},{"Key":"\"blah\"; break;`","Fragments":["since"]},{"Key":"break;` since","Fragments":["a"]},{"Key":"since a","Fragments":["return"]},{"Key":"a return","Fragments":["statement","variable","statement","type;","value","forest"]},{"Key":"return statement","Fragments":["already","after"]},{"Key":"statement already","Fragments":["acts"]},{"Key":"already acts","Fragments":["as"]},{"Key":"acts as","Fragments":["a"]},{"Key":"a break.","Fragments":["I'd"]},{"Key":"break. I'd","Fragments":["say"]},{"Key":"say that's","Fragments":["up"]},{"Key":"that's up","Fragments":["to"]},{"Key":"up to","Fragments":["personal","the","this","me"]},{"Key":"to personal","Fragments":["preference"]},{"Key":"personal preference","Fragments":["but"]},{"Key":"preference but","Fragments":["I"]},{"Key":"think certain","Fragments":["compilers"]},{"Key":"certain compilers","Fragments":["actually"]},{"Key":"compilers actually","Fragments":["issue"]},{"Key":"actually issue","Fragments":["a"]},{"Key":"issue a","Fragments":["warning"]},{"Key":"a warning","Fragments":["for"]},{"Key":"warning for","Fragments":["unreachable"]},{"Key":"for unreachable","Fragments":["code"]},{"Key":"unreachable code","Fragments":["because"]},{"Key":"code because","Fragments":["of","at","a"]},{"Key":" Lastly,","Fragments":["you","is"]},{"Key":"Lastly, you","Fragments":["should"]},{"Key":"have your","Fragments":["functions","input","helper","hamming::compute()"]},{"Key":"functions accept","Fragments":["`const"]},{"Key":"accept `const","Fragments":["string\u0026"]},{"Key":"`const string\u0026","Fragments":["prompt`","sentence`","respond","sentence`","respond","respond(const","sentence`","respond(const","bob::hey(cosnt","sentence`"]},{"Key":"string\u0026 prompt`","Fragments":["instead"]},{"Key":"prompt` instead","Fragments":["of"]},{"Key":"of `string","Fragments":["promt`"]},{"Key":"`string promt`","Fragments":["since"]},{"Key":"promt` since","Fragments":["you"]},{"Key":"don't modify","Fragments":["`prompt`"]},{"Key":"modify `prompt`","Fragments":["in"]},{"Key":"`prompt` in","Fragments":["your"]},{"Key":"your function.","Fragments":["That"]},{"Key":"function. That","Fragments":["way"]},{"Key":"you avoid","Fragments":["unnecessary"]},{"Key":"avoid unnecessary","Fragments":["copying","extra"]},{"Key":"unnecessary copying","Fragments":["of"]},{"Key":" couple","Fragments":["of"]},{"Key":"have `if(question[question.size()-1]","Fragments":["=="]},{"Key":"`if(question[question.size()-1] ==","Fragments":["'?')`"]},{"Key":"== '?')`","Fragments":["before"]},{"Key":"'?')` before","Fragments":["you"]},{"Key":"check whether","Fragments":["question","the","`phrase[begin_word]","it's"]},{"Key":"whether question","Fragments":["is"]},{"Key":"So calling","Fragments":["`bob::hey(\"\")`"]},{"Key":"calling `bob::hey(\"\")`","Fragments":["currently"]},{"Key":"`bob::hey(\"\")` currently","Fragments":["crashes"]},{"Key":"currently crashes","Fragments":["with"]},{"Key":"crashes with","Fragments":["an"]},{"Key":"an access","Fragments":["violation."]},{"Key":"2) Instead","Fragments":["of"]},{"Key":"of `for(unsigned","Fragments":["int"]},{"Key":"`for(unsigned int","Fragments":["i"]},{"Key":"int i","Fragments":["=","="]},{"Key":"\u003c question.size();","Fragments":["i++)`"]},{"Key":"question.size(); i++)`","Fragments":["you"]},{"Key":"i++)` you","Fragments":["could"]},{"Key":": question)`","Fragments":["if"]},{"Key":"question)` if","Fragments":["you"]},{"Key":"That'll make","Fragments":["your"]},{"Key":"make your","Fragments":["loop","for","LowerCase","code"]},{"Key":"loop slightly","Fragments":["easier"]},{"Key":"slightly easier","Fragments":["and"]},{"Key":"easier and","Fragments":["removes"]},{"Key":"and removes","Fragments":["the"]},{"Key":"removes the","Fragments":["chance"]},{"Key":"chance of","Fragments":["making"]},{"Key":"mistake while","Fragments":["looping"]},{"Key":"while looping","Fragments":["(e.g."]},{"Key":"looping (e.g.","Fragments":["off-by-one"]},{"Key":"(e.g. off-by-one","Fragments":["errors)."]},{"Key":"3) I","Fragments":["think"]},{"Key":"think using","Fragments":["two","a","OOP"]},{"Key":"two global","Fragments":["variables","variables"]},{"Key":"global variables","Fragments":["`isYelling`","here;","is"]},{"Key":"variables `isYelling`","Fragments":["and"]},{"Key":"`isYelling` and","Fragments":["`isProlongedSilence`"]},{"Key":"and `isProlongedSilence`","Fragments":["are"]},{"Key":"`isProlongedSilence` are","Fragments":["a"]},{"Key":"a bad","Fragments":["idea.","idea."]},{"Key":"bad idea.","Fragments":["There's"]},{"Key":"idea. There's","Fragments":["no"]},{"Key":"There's no","Fragments":["need"]},{"Key":"for two","Fragments":["global","reasons."]},{"Key":"variables here;","Fragments":["it"]},{"Key":"here; it","Fragments":["makes"]},{"Key":"complex than","Fragments":["it"]},{"Key":"than it","Fragments":["needs","probobly"]},{"Key":"it needs","Fragments":["to"]},{"Key":"to be.","Fragments":["You"]},{"Key":"be. You","Fragments":["could"]},{"Key":"make `checkQuestion`","Fragments":["return"]},{"Key":"`checkQuestion` return","Fragments":["an"]},{"Key":"return an","Fragments":["enum,"]},{"Key":"an enum,","Fragments":["or"]},{"Key":"enum, or","Fragments":["pass"]},{"Key":"or pass","Fragments":["the","it"]},{"Key":"two variables","Fragments":["as"]},{"Key":"variables as","Fragments":["references,","size_t"]},{"Key":"as references,","Fragments":["or"]},{"Key":"references, or","Fragments":["a"]},{"Key":"Regarding your","Fragments":["comment"]},{"Key":"your comment","Fragments":["on"]},{"Key":"comment on","Fragments":["the","my","line","line"]},{"Key":"a regex","Fragments":["is","is","for","since","version","for"]},{"Key":"is cheating","Fragments":["per-se."]},{"Key":"cheating per-se.","Fragments":["It"]},{"Key":"per-se. It","Fragments":["does"]},{"Key":"job and","Fragments":["that"]},{"Key":"all that","Fragments":["is"]},{"Key":"But it","Fragments":["isn't","does","was"]},{"Key":"isn't high-performance","Fragments":["for"]},{"Key":"high-performance for","Fragments":["two"]},{"Key":"You construct","Fragments":["four"]},{"Key":"construct four","Fragments":["`std::regex`"]},{"Key":"four `std::regex`","Fragments":["objects"]},{"Key":"`std::regex` objects","Fragments":["every"]},{"Key":"objects every","Fragments":["time"]},{"Key":"time `hey`","Fragments":["is"]},{"Key":"is called.","Fragments":["Constructing","After"]},{"Key":"called. Constructing","Fragments":["such"]},{"Key":"Constructing such","Fragments":["a"]},{"Key":"of expensive.","Fragments":["That's"]},{"Key":"expensive. That's","Fragments":["why"]},{"Key":"why you'd","Fragments":["generally"]},{"Key":"you'd generally","Fragments":["try"]},{"Key":"generally try","Fragments":["to"]},{"Key":"to re-use","Fragments":["them"]},{"Key":"re-use them","Fragments":["(storing"]},{"Key":"them (storing","Fragments":["them"]},{"Key":"(storing them","Fragments":["as"]},{"Key":"them as","Fragments":["static","such.","```char*```"]},{"Key":"static local","Fragments":["variables,","variables\","]},{"Key":"local variables,","Fragments":["for"]},{"Key":"variables, for","Fragments":["example)."]},{"Key":"2) Regexs","Fragments":["in"]},{"Key":"Regexs in","Fragments":["itself"]},{"Key":"in itself","Fragments":["are"]},{"Key":"itself are","Fragments":["probably"]},{"Key":"are probably","Fragments":["slower"]},{"Key":"probably slower","Fragments":["than"]},{"Key":"slower than","Fragments":["a","copying","the","`ends_with`"]},{"Key":"a search","Fragments":["\"by"]},{"Key":"search \"by","Fragments":["hand\""]},{"Key":"\"by hand\"","Fragments":["since"]},{"Key":"hand\" since","Fragments":["they're"]},{"Key":"since they're","Fragments":["vastly"]},{"Key":"they're vastly","Fragments":["more"]},{"Key":"vastly more","Fragments":["complex."]},{"Key":"more complex.","Fragments":["If"]},{"Key":"complex. If","Fragments":["you"]},{"Key":"were to","Fragments":["benchmark","happen,","take"]},{"Key":"to benchmark","Fragments":["the","three"]},{"Key":"benchmark the","Fragments":["code"]},{"Key":"with and","Fragments":["without"]},{"Key":"and without","Fragments":["regexes,"]},{"Key":"without regexes,","Fragments":["I'd"]},{"Key":"regexes, I'd","Fragments":["be"]},{"Key":"I'd be","Fragments":["very","most","interested","taking","interested"]},{"Key":"very surprised","Fragments":["if"]},{"Key":"surprised if","Fragments":["you"]},{"Key":"the non-regex","Fragments":["code"]},{"Key":"non-regex code","Fragments":["to"]},{"Key":"code to","Fragments":["be","reconcile","improve","not","create","be","improve"]},{"Key":"not have","Fragments":["used","optimal","made","default","to","to","a"]},{"Key":"regex for","Fragments":["this","each","the","the","mine,","\"asking","\"shouting\"","`NOTYELLING`,"]},{"Key":"problem, especially","Fragments":["since"]},{"Key":"are other","Fragments":["good","patterns).","error"]},{"Key":"other good","Fragments":["alternatives"]},{"Key":"good alternatives","Fragments":["to"]},{"Key":"alternatives to","Fragments":["solve"]},{"Key":"solve it","Fragments":["[like"]},{"Key":"it [like","Fragments":["this](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1)"]},{"Key":"[like this](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1)","Fragments":["(shameless"]},{"Key":"this](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1) (shameless","Fragments":["plug"]},{"Key":"(shameless plug","Fragments":["for"]},{"Key":"plug for","Fragments":["my"]},{"Key":"own submission","Fragments":[":p"]},{"Key":"submission :p","Fragments":[")."]},{"Key":" Getting","Fragments":["the"]},{"Key":"Getting the","Fragments":["whole"]},{"Key":"whole C++","Fragments":["environment"]},{"Key":"C++ environment","Fragments":["set"]},{"Key":"environment set","Fragments":["up"]},{"Key":"set up","Fragments":["was"]},{"Key":"up was","Fragments":["the"]},{"Key":"was the","Fragments":["hard","questions","most","most","purpose","apostrophes--they"]},{"Key":"hard part","Fragments":["about"]},{"Key":"part about","Fragments":["this."]},{"Key":"about this.","Fragments":["For"]},{"Key":"this. For","Fragments":["the"]},{"Key":"the rest,","Fragments":["I"]},{"Key":"rest, I","Fragments":["basically"]},{"Key":"I basically","Fragments":["used","chose"]},{"Key":"basically used","Fragments":["the"]},{"Key":"same code","Fragments":["as"]},{"Key":"my Python","Fragments":["script,","implementation"]},{"Key":"Python script,","Fragments":["except"]},{"Key":"script, except","Fragments":["I"]},{"Key":"except I","Fragments":["had"]},{"Key":"to manually","Fragments":["write"]},{"Key":"manually write","Fragments":["some"]},{"Key":"write some","Fragments":["of"]},{"Key":"functions the","Fragments":["Python"]},{"Key":"the Python","Fragments":["provides.","is_upper()"]},{"Key":"Your include","Fragments":["guards"]},{"Key":"include guards","Fragments":["could"]},{"Key":"guards could","Fragments":["potentially"]},{"Key":"potentially cause","Fragments":["interference"]},{"Key":"cause interference","Fragments":["with"]},{"Key":"interference with","Fragments":["the"]},{"Key":"implementation since","Fragments":["identifiers"]},{"Key":"since identifiers","Fragments":["beginning"]},{"Key":"identifiers beginning","Fragments":["with"]},{"Key":"beginning with","Fragments":["an"]},{"Key":"an underscore","Fragments":["followed"]},{"Key":"underscore followed","Fragments":["by"]},{"Key":"by an","Fragments":["uppercase","exclamation"]},{"Key":"an uppercase","Fragments":["letter","letter"]},{"Key":"uppercase letter","Fragments":["are","is","and"]},{"Key":"letter are","Fragments":["always"]},{"Key":"are always","Fragments":["reserved"]},{"Key":"always reserved","Fragments":["(and"]},{"Key":"reserved (and","Fragments":["so"]},{"Key":"(and so","Fragments":["are"]},{"Key":"so are","Fragments":["other"]},{"Key":"other patterns).","Fragments":["I"]},{"Key":"patterns). I","Fragments":["recommend"]},{"Key":"I recommend","Fragments":["following"]},{"Key":"recommend following","Fragments":["the"]},{"Key":"following the","Fragments":["boost"]},{"Key":"boost convention","Fragments":["\u003c"]},{"Key":"convention \u003c","Fragments":["path"]},{"Key":"\u003c path","Fragments":["to"]},{"Key":"path to","Fragments":["your","recovery),","experiment"]},{"Key":" C++","Fragments":["provides","has","has"]},{"Key":"C++ provides","Fragments":["wrappers"]},{"Key":"provides wrappers","Fragments":["for"]},{"Key":"wrappers for","Fragments":["the"]},{"Key":"C headers,","Fragments":["prefer"]},{"Key":"headers, prefer","Fragments":["\u003c"]},{"Key":"prefer \u003c","Fragments":["cstring\u003e"]},{"Key":"\u003c cstring\u003e","Fragments":["over"]},{"Key":"cstring\u003e over","Fragments":["\u003c"]},{"Key":"over \u003c","Fragments":["string.h\u003e."]},{"Key":"of keyword","Fragments":["auto"]},{"Key":"keyword auto","Fragments":["in"]},{"Key":"auto in","Fragments":["line"]},{"Key":"in line","Fragments":["13.","8"]},{"Key":"line 13.","Fragments":["Although"]},{"Key":"13. Although","Fragments":["debatable,"]},{"Key":"Although debatable,","Fragments":["I"]},{"Key":"debatable, I","Fragments":["think"]},{"Key":"think size_t","Fragments":["would"]},{"Key":"size_t would","Fragments":["be"]},{"Key":"Use prefix-","Fragments":["over"]},{"Key":"prefix- over","Fragments":["postfix-increment"]},{"Key":"over postfix-increment","Fragments":["when"]},{"Key":"postfix-increment when","Fragments":["the"]},{"Key":"when the","Fragments":["side-effect","question","first","characters","simple","logic","default","length","robot","user"]},{"Key":"the postfix-variant","Fragments":["is"]},{"Key":"postfix-variant is","Fragments":["not"]},{"Key":"with you","Fragments":["that","about","about","on"]},{"Key":"you that","Fragments":["the"]},{"Key":"the \"C","Fragments":["way\""]},{"Key":"\"C way\"","Fragments":["is"]},{"Key":"way\" is","Fragments":["clearer"]},{"Key":"clearer for","Fragments":["this"]},{"Key":"this particular","Fragments":["problem.","exercise","case."]},{"Key":" std::transform","Fragments":["doesn't"]},{"Key":"std::transform doesn't","Fragments":["allocate"]},{"Key":"doesn't allocate","Fragments":["anything"]},{"Key":"allocate anything","Fragments":["by"]},{"Key":"by itself,","Fragments":["it's"]},{"Key":"itself, it's","Fragments":["only"]},{"Key":"it's only","Fragments":["an","used"]},{"Key":"an algorithm.","Fragments":["The"]},{"Key":"algorithm. The","Fragments":["trick"]},{"Key":"The trick","Fragments":["is"]},{"Key":"trick is","Fragments":["to","that"]},{"Key":"use back_inserter,","Fragments":["which"]},{"Key":"back_inserter, which","Fragments":["is"]},{"Key":"an iterator","Fragments":["on","since","to"]},{"Key":"iterator on","Fragments":["word,"]},{"Key":"on word,","Fragments":["but"]},{"Key":"but on","Fragments":["dereferencing"]},{"Key":"on dereferencing","Fragments":["it"]},{"Key":"dereferencing it","Fragments":["will"]},{"Key":"will append","Fragments":["a"]},{"Key":"append a","Fragments":["new"]},{"Key":"new character","Fragments":["to"]},{"Key":"character to","Fragments":["word.","an","be"]},{"Key":"to word.","Fragments":["Allocation"]},{"Key":"word. Allocation","Fragments":["is"]},{"Key":"Allocation is","Fragments":["handled"]},{"Key":"is handled","Fragments":["by"]},{"Key":"handled by","Fragments":["std::string,","the"]},{"Key":"by std::string,","Fragments":["or"]},{"Key":"std::string, or","Fragments":["more"]},{"Key":"more precisely","Fragments":["the"]},{"Key":"precisely the","Fragments":["string's"]},{"Key":"the string's","Fragments":["allocator."]},{"Key":"string's allocator.","Fragments":["Since"]},{"Key":"allocator. Since","Fragments":["I"]},{"Key":"Since I","Fragments":["don't","used","added","am"]},{"Key":"don't specify","Fragments":["an"]},{"Key":"specify an","Fragments":["allocator,"]},{"Key":"an allocator,","Fragments":["the"]},{"Key":"allocator, the","Fragments":["default"]},{"Key":"default (std::allocator)","Fragments":["is"]},{"Key":"(std::allocator) is","Fragments":["used."]},{"Key":"is used.","Fragments":["The"]},{"Key":"used. The","Fragments":["actual"]},{"Key":"The actual","Fragments":["implementation"]},{"Key":"actual implementation","Fragments":["of"]},{"Key":"of std::allocator","Fragments":["depends"]},{"Key":"std::allocator depends","Fragments":["on"]},{"Key":"your environment,","Fragments":["but"]},{"Key":"environment, but","Fragments":["IIRC"]},{"Key":"but IIRC","Fragments":["the"]},{"Key":"IIRC the","Fragments":["default"]},{"Key":"default implementation","Fragments":["usually"]},{"Key":"implementation usually","Fragments":["reserves"]},{"Key":"usually reserves","Fragments":["some"]},{"Key":"reserves some","Fragments":["initial"]},{"Key":"some initial","Fragments":["memory,"]},{"Key":"initial memory,","Fragments":["and"]},{"Key":"memory, and","Fragments":["when"]},{"Key":"and when","Fragments":["that","they","required.","you","to"]},{"Key":"when that","Fragments":["is"]},{"Key":"used up","Fragments":["it"]},{"Key":"up it","Fragments":["doubles"]},{"Key":"it doubles","Fragments":["the"]},{"Key":"doubles the","Fragments":["amount.","space"]},{"Key":"you expect","Fragments":["large"]},{"Key":"expect large","Fragments":["values"]},{"Key":"large values","Fragments":["for"]},{"Key":"values for","Fragments":["word,"]},{"Key":"for word,","Fragments":["instead"]},{"Key":"word, instead","Fragments":["of"]},{"Key":"of copying","Fragments":["the","the","the","a"]},{"Key":"string you","Fragments":["can","can"]},{"Key":"just tell","Fragments":["the"]},{"Key":"tell the","Fragments":["string"]},{"Key":"to reserve","Fragments":["enough"]},{"Key":"reserve enough","Fragments":["memory"]},{"Key":"enough memory","Fragments":["in"]},{"Key":"memory in","Fragments":["the"]},{"Key":"first place,","Fragments":["using:"]},{"Key":" word.reserve(std::distance(start,","Fragments":["stop));"]},{"Key":"That doesn't","Fragments":["even"]},{"Key":"doesn't even","Fragments":["compile."]},{"Key":"even compile.","Fragments":["I'm"]},{"Key":"compile. I'm","Fragments":["getting"]},{"Key":"I'm getting","Fragments":["`error:","tired"]},{"Key":"getting `error:","Fragments":["unable"]},{"Key":"`error: unable","Fragments":["to"]},{"Key":"unable to","Fragments":["decduce","get","solve.","get"]},{"Key":"to decduce","Fragments":["'auto'"]},{"Key":"decduce 'auto'","Fragments":["from"]},{"Key":"'auto' from","Fragments":["'\u003cexpression"]},{"Key":"from '\u003cexpression","Fragments":["error\u003e'"]},{"Key":"'\u003cexpression error\u003e'","Fragments":["`"]},{"Key":"error\u003e' `","Fragments":["on"]},{"Key":"` on","Fragments":["both"]},{"Key":"on both","Fragments":["the"]},{"Key":"auto lines,","Fragments":["plus"]},{"Key":"lines, plus","Fragments":["a"]},{"Key":"plus a","Fragments":["plethora","few"]},{"Key":"a plethora","Fragments":["of"]},{"Key":"plethora of","Fragments":["other"]},{"Key":"wrote a","Fragments":["quick","quick","return","couple"]},{"Key":"quick test","Fragments":["to","to"]},{"Key":"test to","Fragments":["see","benchmark"]},{"Key":"see how","Fragments":["the","it","they've","that","your","you","you","you","you","you","you","you"]},{"Key":"how the","Fragments":["allocator","set","code","loop"]},{"Key":"the allocator","Fragments":["in"]},{"Key":"allocator in","Fragments":["my"]},{"Key":"my environment","Fragments":["behaves,"]},{"Key":"environment behaves,","Fragments":["and"]},{"Key":"behaves, and","Fragments":["it"]},{"Key":"start with","Fragments":["no"]},{"Key":"with no","Fragments":["allocated","real","upper","relation","colisions"]},{"Key":"no allocated","Fragments":["space."]},{"Key":"allocated space.","Fragments":["It"]},{"Key":"space. It","Fragments":["allocates"]},{"Key":"It allocates","Fragments":["one"]},{"Key":"allocates one","Fragments":["element"]},{"Key":"one element","Fragments":["on"]},{"Key":"element on","Fragments":["the"]},{"Key":"first inserted","Fragments":["value,"]},{"Key":"inserted value,","Fragments":["and"]},{"Key":"value, and","Fragments":["doubles"]},{"Key":"and doubles","Fragments":["the"]},{"Key":"after that","Fragments":["as"]},{"Key":"that as","Fragments":["I","empty.","long"]},{"Key":" $","Fragments":["cat","make","./capacity","g++","ln","./test"]},{"Key":"$ cat","Fragments":["capacity.cpp"]},{"Key":" #include","Fragments":["\u003cstring\u003e","\u003ciostream\u003e"]},{"Key":"int main(int","Fragments":["argc,"]},{"Key":"main(int argc,","Fragments":["const"]},{"Key":"argc, const","Fragments":["char"]},{"Key":"int last","Fragments":["="]},{"Key":"last =","Fragments":["-1;","capacity;"]},{"Key":"i=0; i\u003c1024;","Fragments":["++i)"]},{"Key":"int capacity","Fragments":["="]},{"Key":"capacity =","Fragments":["s.capacity();"]},{"Key":"if (capacity","Fragments":["!="]},{"Key":"(capacity !=","Fragments":["last)"]},{"Key":"\u003c\u003c i","Fragments":["\u003c\u003c","\u003c\u003c"]},{"Key":"i \u003c\u003c","Fragments":["\":","endl;"]},{"Key":"\u003c\u003c \":","Fragments":["\""]},{"Key":"\": \"","Fragments":["\u003c\u003c"]},{"Key":"\" \u003c\u003c","Fragments":["capacity"]},{"Key":"\u003c\u003c capacity","Fragments":["\u003c\u003c"]},{"Key":"capacity \u003c\u003c","Fragments":["std::endl;"]},{"Key":" last","Fragments":["="]},{"Key":"$ make","Fragments":["capacity"]},{"Key":" g++","Fragments":["capacity.cpp"]},{"Key":"g++ capacity.cpp","Fragments":["-o"]},{"Key":"capacity.cpp -o","Fragments":["capacity"]},{"Key":" 0:","Fragments":["0"]},{"Key":" 1:","Fragments":["1"]},{"Key":" 2:","Fragments":["2"]},{"Key":" 3:","Fragments":["4"]},{"Key":" 5:","Fragments":["8"]},{"Key":" 9:","Fragments":["16"]},{"Key":" 17:","Fragments":["32"]},{"Key":" 33:","Fragments":["64"]},{"Key":" 65:","Fragments":["128"]},{"Key":" 129:","Fragments":["256"]},{"Key":" 257:","Fragments":["512"]},{"Key":" 513:","Fragments":["1024"]},{"Key":" @markus","Fragments":["Thanks"]},{"Key":"@markus Thanks","Fragments":["for"]},{"Key":"advice! That","Fragments":["definitely"]},{"Key":"That definitely","Fragments":["makes"]},{"Key":"definitely makes","Fragments":["this"]},{"Key":"this a","Fragments":["heck","sin.","function."]},{"Key":"a heck","Fragments":["of"]},{"Key":"heck of","Fragments":["a"]},{"Key":"You shouldn't","Fragments":["have."]},{"Key":"shouldn't have.","Fragments":["The"]},{"Key":"have. The","Fragments":["C++"]},{"Key":"The C++","Fragments":["standard"]},{"Key":"C++ standard","Fragments":["library","rather"]},{"Key":"library provides","Fragments":["building"]},{"Key":"provides building","Fragments":["blocks"]},{"Key":"building blocks","Fragments":["which"]},{"Key":"blocks which","Fragments":["allow"]},{"Key":"which allow","Fragments":["to"]},{"Key":"allow to","Fragments":["state"]},{"Key":"to state","Fragments":["your","as"]},{"Key":"state your","Fragments":["intent"]},{"Key":"your intent","Fragments":["much"]},{"Key":"intent much","Fragments":["more"]},{"Key":"more succinctly.","Fragments":["isAllWhite"]},{"Key":"succinctly. isAllWhite","Fragments":["could"]},{"Key":"isAllWhite could","Fragments":["be"]},{"Key":"easily rewritten","Fragments":["as:"]},{"Key":" std::all_of(str.begin(),","Fragments":["str.end(),"]},{"Key":"std::all_of(str.begin(), str.end(),","Fragments":["isspace);"]},{"Key":" Pass","Fragments":["your","strings"]},{"Key":"Pass your","Fragments":["strings"]},{"Key":"your strings","Fragments":["as","in"]},{"Key":"references whenever","Fragments":["possible","possible"]},{"Key":"whenever possible","Fragments":["to","instead"]},{"Key":"avoid costly","Fragments":["copies."]},{"Key":"should avoid","Fragments":["the"]},{"Key":"avoid the","Fragments":["function-style","iterator","more","bug","string"]},{"Key":"the function-style","Fragments":["casts"]},{"Key":"function-style casts","Fragments":["to"]},{"Key":"casts to","Fragments":["int"]},{"Key":"to int","Fragments":["in","unless","(rather"]},{"Key":"int in","Fragments":["your"]},{"Key":"loops as","Fragments":["they"]},{"Key":"they may","Fragments":["truncate.","not"]},{"Key":"may truncate.","Fragments":["Declare"]},{"Key":"truncate. Declare","Fragments":["the"]},{"Key":"Declare the","Fragments":["variables"]},{"Key":"as size_t","Fragments":["instead."]},{"Key":"Why are","Fragments":["the","you"]},{"Key":"loop variables","Fragments":["in"]},{"Key":"variables in","Fragments":["each","the"]},{"Key":"function different?","Fragments":["The"]},{"Key":"different? The","Fragments":["parameter"]},{"Key":"The parameter","Fragments":["names"]},{"Key":"parameter names","Fragments":["are","with"]},{"Key":"are oddly","Fragments":["chosen"]},{"Key":"oddly chosen","Fragments":["and"]},{"Key":"chosen and","Fragments":["different"]},{"Key":"and different","Fragments":["from"]},{"Key":"different from","Fragments":["one"]},{"Key":"from one","Fragments":["another"]},{"Key":"one another","Fragments":["too,"]},{"Key":"another too,","Fragments":["although"]},{"Key":"too, although","Fragments":["that's"]},{"Key":"although that's","Fragments":["by"]},{"Key":"that's by","Fragments":["no"]},{"Key":"by no","Fragments":["means"]},{"Key":"no means","Fragments":["necessary"]},{"Key":"means necessary","Fragments":["since"]},{"Key":"necessary since","Fragments":["each"]},{"Key":"since each","Fragments":["name","letter"]},{"Key":"each name","Fragments":["resides"]},{"Key":"name resides","Fragments":["in"]},{"Key":"resides in","Fragments":["a"]},{"Key":"Also, functions","Fragments":["isAllUpper,"]},{"Key":"functions isAllUpper,","Fragments":["isAllNum"]},{"Key":"isAllUpper, isAllNum","Fragments":["and"]},{"Key":"isAllNum and","Fragments":["isAllWhite"]},{"Key":"and isAllWhite","Fragments":["don't"]},{"Key":"isAllWhite don't","Fragments":["technically"]},{"Key":"don't technically","Fragments":["belong"]},{"Key":"technically belong","Fragments":["to"]},{"Key":"belong to","Fragments":["class","the"]},{"Key":"to class","Fragments":["bob.","level,"]},{"Key":"class bob.","Fragments":["Or"]},{"Key":"bob. Or","Fragments":["at"]},{"Key":"Or at","Fragments":["the","least,"]},{"Key":"very least","Fragments":["they"]},{"Key":"least they","Fragments":["should"]},{"Key":"they should","Fragments":["be"]},{"Key":"Looks very","Fragments":["good,"]},{"Key":"very good,","Fragments":["your"]},{"Key":"good, your","Fragments":["loop"]},{"Key":"could however","Fragments":["overflow"]},{"Key":"however overflow","Fragments":["since"]},{"Key":"overflow since","Fragments":["int"]},{"Key":"since int","Fragments":["might"]},{"Key":"int might","Fragments":["not"]},{"Key":"might not","Fragments":["be","work.","seem","be","be","be","be"]},{"Key":"be large","Fragments":["enough"]},{"Key":"large enough","Fragments":["to"]},{"Key":"any strings","Fragments":["length"]},{"Key":"strings length","Fragments":["(which","is","once"]},{"Key":"length (which","Fragments":["is"]},{"Key":"is expressed","Fragments":["as"]},{"Key":"expressed as","Fragments":["size_t).","`(!std::isalpha(*it))","hex"]},{"Key":"prefer prefix","Fragments":["increment"]},{"Key":"prefix increment","Fragments":["which"]},{"Key":"increment which","Fragments":["is"]},{"Key":"is potentially","Fragments":["faster"]},{"Key":"potentially faster","Fragments":["and","thought"]},{"Key":"faster and","Fragments":["semantically"]},{"Key":"and semantically","Fragments":["more"]},{"Key":"more \"spot","Fragments":["on\"."]},{"Key":" Hello","Fragments":["and"]},{"Key":"Hello and","Fragments":["thank"]},{"Key":"and thank","Fragments":["you"]},{"Key":"look to","Fragments":["my","this","it."]},{"Key":"have created","Fragments":["a"]},{"Key":"created a","Fragments":["constant"]},{"Key":"each response","Fragments":["trying","separately","that"]},{"Key":"response trying","Fragments":["to"]},{"Key":"avoid \"magic","Fragments":["numbers\""]},{"Key":"\"magic numbers\"","Fragments":["and"]},{"Key":"numbers\" and","Fragments":["a"]},{"Key":"check each","Fragments":["case.","input","element","char"]},{"Key":"have decided","Fragments":["to"]},{"Key":"each input","Fragments":["case"]},{"Key":"input case","Fragments":["using"]},{"Key":"case using","Fragments":["regular"]},{"Key":"expressions (regex)","Fragments":["because:"]},{"Key":"run as","Fragments":["fast"]},{"Key":"as fast","Fragments":["as"]},{"Key":"fast as","Fragments":["possible"]},{"Key":"and they","Fragments":["made","are"]},{"Key":"they made","Fragments":["my"]},{"Key":"made my","Fragments":["life","solution"]},{"Key":"my life","Fragments":["much"]},{"Key":"life much","Fragments":["easier."]},{"Key":"2. I","Fragments":["think","didn't"]},{"Key":"think regular","Fragments":["expressions"]},{"Key":"expressions improve","Fragments":["readability"]},{"Key":"readability if","Fragments":["you"]},{"Key":"are familiar","Fragments":["with"]},{"Key":"with them","Fragments":["and"]},{"Key":"when they","Fragments":["are"]},{"Key":"are simple","Fragments":["(like","enough"]},{"Key":"simple (like","Fragments":["these"]},{"Key":"(like these","Fragments":["ones)."]},{"Key":"the \"hey\"","Fragments":["function"]},{"Key":"function I","Fragments":["use","write)."]},{"Key":"an if-elseif-else","Fragments":["implementation"]},{"Key":"if-elseif-else implementation","Fragments":["to"]},{"Key":"implementation to","Fragments":["give"]},{"Key":" to","Fragments":["the","conver"]},{"Key":"the different","Fragments":["input"]},{"Key":"different input","Fragments":["cases."]},{"Key":"input cases.","Fragments":["This"]},{"Key":"cases. This","Fragments":["is,"]},{"Key":"This is,","Fragments":["if"]},{"Key":"is, if","Fragments":["the"]},{"Key":"is yelled","Fragments":["and"]},{"Key":"yelled and","Fragments":["is"]},{"Key":"question as","Fragments":["well,"]},{"Key":"well, bob","Fragments":["replies"]},{"Key":"bob replies","Fragments":["as"]},{"Key":"replies as","Fragments":["if"]},{"Key":"if he","Fragments":["was"]},{"Key":"he was","Fragments":["being"]},{"Key":"was being","Fragments":["yelle","operated"]},{"Key":"being yelle","Fragments":["even"]},{"Key":"yelle even","Fragments":["when"]},{"Key":"even when","Fragments":["it","there"]},{"Key":"when it","Fragments":["is","was"]},{"Key":" Hope","Fragments":["this"]},{"Key":"Hope this","Fragments":["makes"]},{"Key":"this makes","Fragments":["sense."]},{"Key":"the tips,","Fragments":["I","especially","I've"]},{"Key":"tips, I","Fragments":["didn't"]},{"Key":"the break","Fragments":["thing"]},{"Key":"break thing","Fragments":["or"]},{"Key":"thing or","Fragments":["the"]},{"Key":"new fangled","Fragments":["looping."]},{"Key":"the pass","Fragments":["by"]},{"Key":"by reference/copy","Fragments":["it"]},{"Key":"reference/copy it","Fragments":["seems"]},{"Key":"doesn't matter","Fragments":["too","for"]},{"Key":"matter too","Fragments":["much"]},{"Key":"too much","Fragments":["either","for","in","so","effort.","here.","visual"]},{"Key":"much either","Fragments":["way."]},{"Key":"either way.","Fragments":["But"]},{"Key":"way. But","Fragments":["I"]},{"Key":"making it","Fragments":["a","efficient","easier"]},{"Key":"const. Thanks","Fragments":["again."]},{"Key":"wouldn't have","Fragments":["used","worked"]},{"Key":"regex since","Fragments":["the"]},{"Key":"for yelling/question/silence","Fragments":["are"]},{"Key":"yelling/question/silence are","Fragments":["simple"]},{"Key":"simple enough","Fragments":["to","for"]},{"Key":"implemented with","Fragments":["\\\u003calgorithm\\\u003e."]},{"Key":"with \\\u003calgorithm\\\u003e.","Fragments":["[Here](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1)'s"]},{"Key":"\\\u003calgorithm\\\u003e. [Here](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1)'s","Fragments":["my"]},{"Key":"[Here](http://exercism.io/submissions/da0cce1b370149cfbe5b4ea1)'s my","Fragments":["take"]},{"Key":"my take","Fragments":["on"]},{"Key":"exercise to","Fragments":["show","see"]},{"Key":"to show","Fragments":["what","that"]},{"Key":"show what","Fragments":["I"]},{"Key":"string constants","Fragments":["(instead","is"]},{"Key":"constants (instead","Fragments":["of"]},{"Key":"(instead of","Fragments":["\"magic","coding"]},{"Key":"of \"magic","Fragments":["strings\")"]},{"Key":"\"magic strings\")","Fragments":["is"]},{"Key":"strings\") is","Fragments":["a"]},{"Key":"bit icky.","Fragments":["Since"]},{"Key":"icky. Since","Fragments":["they"]},{"Key":"Since they","Fragments":["are"]},{"Key":"header file,","Fragments":["these"]},{"Key":"file, these","Fragments":["constants"]},{"Key":"constants spill","Fragments":["out"]},{"Key":"spill out","Fragments":["into"]},{"Key":"into other","Fragments":["files"]},{"Key":"other files","Fragments":["where"]},{"Key":"files where","Fragments":["they"]},{"Key":"don't belong.","Fragments":["Also,"]},{"Key":"belong. Also,","Fragments":["they're"]},{"Key":"Also, they're","Fragments":["global"]},{"Key":"they're global","Fragments":["objects"]},{"Key":"global objects","Fragments":["and","into","isn't"]},{"Key":"objects and","Fragments":["not"]},{"Key":"not native","Fragments":["data"]},{"Key":"native data","Fragments":["types."]},{"Key":"data types.","Fragments":["So"]},{"Key":"types. So","Fragments":["that"]},{"Key":"So that","Fragments":["brings","doesn't"]},{"Key":"that brings","Fragments":["initialization"]},{"Key":"brings initialization","Fragments":["order"]},{"Key":"initialization order","Fragments":["of"]},{"Key":"of global","Fragments":["objects","scope.","variables"]},{"Key":"objects into","Fragments":["play."]},{"Key":" Other","Fragments":["than","then","than"]},{"Key":"Other than","Fragments":["that,","that","that,"]},{"Key":"than that,","Fragments":["I","a"]},{"Key":"that, I","Fragments":["like","think","was"]},{"Key":"of static","Fragments":["locals","regex.","variables"]},{"Key":"static locals","Fragments":["to"]},{"Key":"locals to","Fragments":["contain"]},{"Key":"to contain","Fragments":["the","the"]},{"Key":"contain the","Fragments":["regexes","entire"]},{"Key":"the regexes","Fragments":["in"]},{"Key":"regexes in","Fragments":["their"]},{"Key":"in their","Fragments":["function"]},{"Key":"their function","Fragments":["scope"]},{"Key":"function scope","Fragments":["as"]},{"Key":"scope as","Fragments":["well"]},{"Key":"const correctness","Fragments":["everywhere.","is"]},{"Key":" Hello,","Fragments":["Nice"]},{"Key":"Hello, Nice","Fragments":["code!"]},{"Key":"used regex","Fragments":["for"]},{"Key":"each case.","Fragments":["Your"]},{"Key":"case. Your","Fragments":["code"]},{"Key":"be much","Fragments":["smaller"]},{"Key":"much smaller","Fragments":["and"]},{"Key":"readable. Besides","Fragments":["that,"]},{"Key":"Besides that,","Fragments":["I"]},{"Key":"return variable","Fragments":["(ret)."]},{"Key":"variable (ret).","Fragments":["You"]},{"Key":"(ret). You","Fragments":["could"]},{"Key":"return whatever","Fragments":["you"]},{"Key":"whatever you","Fragments":["want"]},{"Key":"want in","Fragments":["those","my"]},{"Key":"in those","Fragments":["places"]},{"Key":"those places","Fragments":["you"]},{"Key":"places you","Fragments":["set"]},{"Key":"set that","Fragments":["variable."]},{"Key":"edit: Oh!","Fragments":["and"]},{"Key":"Oh! and","Fragments":["you"]},{"Key":"you import","Fragments":["iostream"]},{"Key":"import iostream","Fragments":["but"]},{"Key":"iostream but","Fragments":["I"]},{"Key":"never use","Fragments":["it!","the"]},{"Key":"I'm sorry","Fragments":["but"]},{"Key":"sorry but","Fragments":["I"]},{"Key":"doesn't do","Fragments":["what","it"]},{"Key":"is suppose","Fragments":["to."]},{"Key":"suppose to.","Fragments":["You"]},{"Key":"to. You","Fragments":["should"]},{"Key":"have coded","Fragments":["something"]},{"Key":"coded something","Fragments":["to"]},{"Key":"to \"figure","Fragments":["out\""]},{"Key":"\"figure out\"","Fragments":["the"]},{"Key":"out\" the","Fragments":["correct"]},{"Key":"response rather","Fragments":["than"]},{"Key":"than checking","Fragments":["for"]},{"Key":"each test","Fragments":["case...","if"]},{"Key":"Why do","Fragments":["you","you","you"]},{"Key":"you define","Fragments":["a","would"]},{"Key":"define a","Fragments":["class,"]},{"Key":"class, when","Fragments":["all"]},{"Key":"when all","Fragments":["you"]},{"Key":"all you","Fragments":["have","operations.\u003c/li\u003e","wanted","really"]},{"Key":"have are","Fragments":["static"]},{"Key":"are static","Fragments":["functions?"]},{"Key":" You've","Fragments":["named","crunched"]},{"Key":"You've named","Fragments":["your"]},{"Key":"named your","Fragments":["parameter"]},{"Key":"your parameter","Fragments":["names"]},{"Key":"names with","Fragments":["this","\"is\",","internal"]},{"Key":"particular exercise","Fragments":["in"]},{"Key":"in mind.","Fragments":["The","Old"]},{"Key":"mind. The","Fragments":["hamming","formatted"]},{"Key":"The hamming","Fragments":["distance"]},{"Key":"hamming distance","Fragments":["is"]},{"Key":"distance is","Fragments":["a","only","defined"]},{"Key":"a universal","Fragments":["concept"]},{"Key":"universal concept","Fragments":["for"]},{"Key":"concept for","Fragments":["sequences"]},{"Key":"for sequences","Fragments":["though,","of"]},{"Key":"sequences though,","Fragments":["so"]},{"Key":"though, so","Fragments":["you","you're"]},{"Key":"you may","Fragments":["want","consider","want","want","want","want","want"]},{"Key":"prefer a","Fragments":["generic"]},{"Key":"Use std::min","Fragments":["in"]},{"Key":"std::min in","Fragments":["line"]},{"Key":"line 8","Fragments":["and"]},{"Key":"8 and","Fragments":["use"]},{"Key":"use prefix-increment","Fragments":["when"]},{"Key":"prefix-increment when","Fragments":["you"]},{"Key":"don't mean","Fragments":["postfix-increment."]},{"Key":"A strings","Fragments":["length"]},{"Key":"length is","Fragments":["defined","larger","0","0,","one"]},{"Key":"as size_t,","Fragments":["which"]},{"Key":"size_t, which","Fragments":["may"]},{"Key":"which may","Fragments":["differ","not"]},{"Key":"may differ","Fragments":["in"]},{"Key":"differ in","Fragments":["size"]},{"Key":"in size","Fragments":["from"]},{"Key":"size from","Fragments":["int."]},{"Key":"from int.","Fragments":["Could"]},{"Key":"int. Could","Fragments":["this"]},{"Key":"Could this","Fragments":["lead"]},{"Key":"this lead","Fragments":["to"]},{"Key":"to problems","Fragments":["in"]},{"Key":"problems in","Fragments":["your"]},{"Key":" No","Fragments":["particular","problem!","need","real","real"]},{"Key":"particular reason.","Fragments":["I"]},{"Key":"reason. I","Fragments":["could"]},{"Key":"was dumb","Fragments":["to"]},{"Key":"dumb to","Fragments":["declare"]},{"Key":"declare a","Fragments":["namespace","(non-class)","namespace"]},{"Key":"for just","Fragments":["one","lower","solving"]},{"Key":"just one","Fragments":["public","pass","big"]},{"Key":"one public","Fragments":["function."]},{"Key":"Also, making","Fragments":["the","booleans"]},{"Key":"like `isQuestion`","Fragments":["private"]},{"Key":"`isQuestion` private","Fragments":["and"]},{"Key":"private and","Fragments":["thus","phone"]},{"Key":"thus inaccessible","Fragments":["from"]},{"Key":"inaccessible from","Fragments":["outside"]},{"Key":"from outside","Fragments":["is"]},{"Key":"outside is","Fragments":["easier"]},{"Key":"is easier","Fragments":["than","to"]},{"Key":"easier than","Fragments":["having","it"]},{"Key":"put them","Fragments":["in","into"]},{"Key":"another unnamed","Fragments":["namespace."]},{"Key":" `returnValue[wordBuffer]`","Fragments":["returns"]},{"Key":"`returnValue[wordBuffer]` returns","Fragments":["an"]},{"Key":"an `int`,","Fragments":["however."]},{"Key":"`int`, however.","Fragments":["You've"]},{"Key":"however. You've","Fragments":["used"]},{"Key":"You've used","Fragments":["it"]},{"Key":"it correctly","Fragments":["in"]},{"Key":"correctly in","Fragments":["other"]},{"Key":"other places:","Fragments":["`returnValue[wordBuffer]"]},{"Key":"places: `returnValue[wordBuffer]","Fragments":["="]},{"Key":"`returnValue[wordBuffer] =","Fragments":["1`."]},{"Key":"The entries","Fragments":["of"]},{"Key":"entries of","Fragments":["the"]},{"Key":"map are","Fragments":["a"]},{"Key":"a (string,","Fragments":["int)"]},{"Key":"(string, int)","Fragments":["pair."]},{"Key":"int) pair.","Fragments":["`returnValue[\u003cstring\u003e]"]},{"Key":"pair. `returnValue[\u003cstring\u003e]","Fragments":["="]},{"Key":"`returnValue[\u003cstring\u003e] =","Fragments":["\u003cint\u003e`."]},{"Key":"= \u003cint\u003e`.","Fragments":["So"]},{"Key":"\u003cint\u003e`. So","Fragments":["using"]},{"Key":"So using","Fragments":["the"]},{"Key":"`'\\0'` is","Fragments":["incorrect"]},{"Key":"is incorrect","Fragments":["here."]},{"Key":"incorrect here.","Fragments":["It"]},{"Key":"It only","Fragments":["works"]},{"Key":"only works","Fragments":["because"]},{"Key":"works because","Fragments":["C++","isSilence"]},{"Key":"because C++","Fragments":["implicitely"]},{"Key":"C++ implicitely","Fragments":["converts"]},{"Key":"implicitely converts","Fragments":["the"]},{"Key":"converts the","Fragments":["char"]},{"Key":"the char","Fragments":["`'\\0'`","by"]},{"Key":"char `'\\0'`","Fragments":["into"]},{"Key":"`'\\0'` into","Fragments":["an"]},{"Key":"an int","Fragments":["(0).","is","it"]},{"Key":"fact, you","Fragments":["could"]},{"Key":"could leave","Fragments":["away"]},{"Key":"leave away","Fragments":["the"]},{"Key":"away the","Fragments":["entire"]},{"Key":"entire if-statement","Fragments":["with"]},{"Key":"if-statement with","Fragments":["the"]},{"Key":"the `returnValue[wordBuffer]++;`","Fragments":["and"]},{"Key":"`returnValue[wordBuffer]++;` and","Fragments":["it"]},{"Key":"work just","Fragments":["fabulous","fine."]},{"Key":"just fabulous","Fragments":[":)"]},{"Key":"fabulous :)","Fragments":["The"]},{"Key":"The []","Fragments":["operator"]},{"Key":"[] operator","Fragments":["automatically","doesn't"]},{"Key":"operator automatically","Fragments":["inserts"]},{"Key":"automatically inserts","Fragments":["a"]},{"Key":"inserts a","Fragments":["new","new"]},{"Key":"new (string,int)","Fragments":["pair"]},{"Key":"(string,int) pair","Fragments":["into"]},{"Key":"pair into","Fragments":["the"]},{"Key":"map if","Fragments":["it"]},{"Key":"isn't there","Fragments":["already."]},{"Key":"there already.","Fragments":["It's"]},{"Key":"already. It's","Fragments":["part"]},{"Key":"It's part","Fragments":["of"]},{"Key":"the [standard](http://www.cplusplus.com/reference/map/map/operator%5B%5D/)","Fragments":["saying"]},{"Key":"\u003e If","Fragments":["k"]},{"Key":"If k","Fragments":["does"]},{"Key":"k does","Fragments":["not"]},{"Key":"not match","Fragments":["the"]},{"Key":"match the","Fragments":["key","scope","expected","messages"]},{"Key":"key of","Fragments":["any"]},{"Key":"of any","Fragments":["element","specific","number","tradeoffs"]},{"Key":"any element","Fragments":["in"]},{"Key":"element in","Fragments":["the","the"]},{"Key":"function inserts","Fragments":["a"]},{"Key":"new element","Fragments":["with"]},{"Key":"element with","Fragments":["that"]},{"Key":"that key","Fragments":["and"]},{"Key":"its mapped","Fragments":["value."]},{"Key":" `find_if`","Fragments":["is"]},{"Key":"`find_if` is","Fragments":["one"]},{"Key":"ways you","Fragments":["could"]},{"Key":"could solve","Fragments":["the"]},{"Key":"looking for","Fragments":["the","a","ways","full"]},{"Key":"of words.","Fragments":["I'm"]},{"Key":"words. I'm","Fragments":["not"]},{"Key":"how familiar","Fragments":["you"]},{"Key":"familiar you","Fragments":["are"]},{"Key":"are with","Fragments":["C++'s"]},{"Key":"with C++'s","Fragments":["iterators"]},{"Key":"C++'s iterators","Fragments":["and"]},{"Key":"and algorithm","Fragments":["functions,"]},{"Key":"algorithm functions,","Fragments":["so"]},{"Key":"functions, so","Fragments":["I'll"]},{"Key":"so I'll","Fragments":["just","definitley"]},{"Key":"I'll just","Fragments":["paste","get"]},{"Key":"just paste","Fragments":["the"]},{"Key":"the crux","Fragments":["of"]},{"Key":"crux of","Fragments":["how"]},{"Key":"I solved","Fragments":["it:"]},{"Key":"auto curr","Fragments":["="]},{"Key":"curr =","Fragments":["input.begin();","wordEnd;"]},{"Key":"= input.begin();","Fragments":["//curr"]},{"Key":"input.begin(); //curr","Fragments":["points"]},{"Key":"//curr points","Fragments":["to"]},{"Key":"points to","Fragments":["start","end(),"]},{"Key":"start of","Fragments":["string"]},{"Key":" //iterate","Fragments":["through"]},{"Key":"//iterate through","Fragments":["the"]},{"Key":" while(","Fragments":["curr"]},{"Key":"while( curr","Fragments":["!="]},{"Key":"curr !=","Fragments":["input.end()"]},{"Key":"!= input.end()","Fragments":["){"]},{"Key":" //find","Fragments":["beginning"]},{"Key":"//find beginning","Fragments":["of"]},{"Key":"beginning of","Fragments":["alphanumerical","those","the","a"]},{"Key":"of alphanumerical","Fragments":["sequence"]},{"Key":"auto wordStart","Fragments":["="]},{"Key":"wordStart =","Fragments":["std::find_if("]},{"Key":"= std::find_if(","Fragments":["curr,"]},{"Key":"std::find_if( curr,","Fragments":["input.end(),"]},{"Key":"curr, input.end(),","Fragments":["isalnum"]},{"Key":"input.end(), isalnum","Fragments":[");",");"]},{"Key":" //from","Fragments":["there,"]},{"Key":"//from there,","Fragments":["find"]},{"Key":"there, find","Fragments":["end"]},{"Key":"find end","Fragments":["of"]},{"Key":"of said","Fragments":["sequence","examples"]},{"Key":"auto wordEnd","Fragments":["="]},{"Key":"wordEnd =","Fragments":["std::find_if_not("]},{"Key":"= std::find_if_not(","Fragments":["wordStart,"]},{"Key":"std::find_if_not( wordStart,","Fragments":["input.end(),"]},{"Key":"wordStart, input.end(),","Fragments":["isalnum"]},{"Key":" //This","Fragments":["is"]},{"Key":"//This is","Fragments":["the"]},{"Key":"std::string word","Fragments":["="]},{"Key":"= std::string(","Fragments":["wordStart,"]},{"Key":"std::string( wordStart,","Fragments":["wordEnd"]},{"Key":"wordStart, wordEnd","Fragments":[");"]},{"Key":" //increment","Fragments":["word"]},{"Key":"//increment word","Fragments":["count."]},{"Key":"word count.","Fragments":["If"]},{"Key":"count. If","Fragments":["word"]},{"Key":"If word","Fragments":["not"]},{"Key":"word not","Fragments":["in"]},{"Key":"in map,","Fragments":["it'll"]},{"Key":"map, it'll","Fragments":["be"]},{"Key":"it'll be","Fragments":["added","invisible"]},{"Key":"be added","Fragments":["automatically","to.","to"]},{"Key":" //we've","Fragments":["read"]},{"Key":"//we've read","Fragments":["the"]},{"Key":"string until","Fragments":["wordEnd,"]},{"Key":"until wordEnd,","Fragments":["so"]},{"Key":"wordEnd, so","Fragments":["that's"]},{"Key":"so that's","Fragments":["where","what"]},{"Key":"that's where","Fragments":["we"]},{"Key":"where we","Fragments":["start"]},{"Key":"we start","Fragments":["to"]},{"Key":" //for","Fragments":["the"]},{"Key":"//for the","Fragments":["next"]},{"Key":" curr","Fragments":["="]},{"Key":"can find","Fragments":["the"]},{"Key":"full source","Fragments":["[here](http://exercism.io/submissions/be42f7cc0bfb132a4aa72458)."]},{"Key":"guess you're","Fragments":["right"]},{"Key":"the underscore","Fragments":["in","_"]},{"Key":"underscore in","Fragments":["the"]},{"Key":"know of","Fragments":["the"]},{"Key":"the C++","Fragments":["wrappers","way,","string","standard","way"]},{"Key":"C++ wrappers","Fragments":["but"]},{"Key":"wrappers but","Fragments":["I"]},{"Key":"really understand","Fragments":["why","what"]},{"Key":"should use","Fragments":["them.","boost","boost::to_lower_copy","std::string"]},{"Key":"use them.","Fragments":["The","I"]},{"Key":"them. The","Fragments":["\".h\""]},{"Key":"The \".h\"","Fragments":["extension"]},{"Key":"\".h\" extension","Fragments":["expresses"]},{"Key":"extension expresses","Fragments":["the"]},{"Key":"expresses the","Fragments":["fact"]},{"Key":"that it's","Fragments":["a","better","become","not","better","a"]},{"Key":"C header","Fragments":["more"]},{"Key":"header more","Fragments":["clearly"]},{"Key":" Because","Fragments":["`i`","the"]},{"Key":"Because `i`","Fragments":["and"]},{"Key":"and `length`","Fragments":["are"]},{"Key":"`length` are","Fragments":["both"]},{"Key":"are both","Fragments":["integers,","great"]},{"Key":"both integers,","Fragments":["the"]},{"Key":"integers, the","Fragments":["postfix-increment"]},{"Key":"the postfix-increment","Fragments":["is"]},{"Key":"postfix-increment is","Fragments":["going"]},{"Key":"optimized out.","Fragments":["I'm"]},{"Key":"out. I'm","Fragments":["not"]},{"Key":"same holds","Fragments":["for"]},{"Key":"holds for","Fragments":["classes"]},{"Key":"for classes","Fragments":["where"]},{"Key":"classes where","Fragments":["the"]},{"Key":"the operators","Fragments":["have"]},{"Key":"operators have","Fragments":["been"]},{"Key":"been explicitly","Fragments":["defined"]},{"Key":"explicitly defined","Fragments":["(e.g."]},{"Key":"defined (e.g.","Fragments":["iterators)."]},{"Key":"(e.g. iterators).","Fragments":["Usually"]},{"Key":"iterators). Usually","Fragments":["I"]},{"Key":"Usually I","Fragments":["use","try"]},{"Key":"use prefix-increments","Fragments":["on"]},{"Key":"prefix-increments on","Fragments":["them"]},{"Key":"on them","Fragments":["just"]},{"Key":"them just","Fragments":["to"]},{"Key":"just to","Fragments":["be","prevent","avoid","achieve"]},{"Key":"included the","Fragments":["relevant"]},{"Key":"relevant header","Fragments":["files"]},{"Key":"header files","Fragments":["(mostly","because","in"]},{"Key":"files (mostly","Fragments":["\\\u003calgorithm?\u003e)?"]},{"Key":" [Here's](http://ideone.com/St5txW)","Fragments":["the"]},{"Key":"[Here's](http://ideone.com/St5txW) the","Fragments":["code"]},{"Key":"an onlinecompiler","Fragments":["and"]},{"Key":"onlinecompiler and","Fragments":["compiles"]},{"Key":"and compiles","Fragments":["without"]},{"Key":"compiles without","Fragments":["errors."]},{"Key":"without errors.","Fragments":["So"]},{"Key":"errors. So","Fragments":["it"]},{"Key":"So it","Fragments":["is","could"]},{"Key":"is valid","Fragments":["C++11"]},{"Key":"valid C++11","Fragments":["code."]},{"Key":" @delores","Fragments":["Thank"]},{"Key":"@delores Thank","Fragments":["you!"]},{"Key":"Thank you!","Fragments":["I"]},{"Key":"you! I","Fragments":["personally"]},{"Key":"personally think","Fragments":["your"]},{"Key":"implementation with","Fragments":["\u003calgorithms\u003e"]},{"Key":"with \u003calgorithms\u003e","Fragments":["is"]},{"Key":"\u003calgorithms\u003e is","Fragments":["better"]},{"Key":"better and","Fragments":["by"]},{"Key":"using regex","Fragments":["I'm","libraries,","and","in"]},{"Key":"regex I'm","Fragments":["using"]},{"Key":"a sledgehammer","Fragments":["to"]},{"Key":"sledgehammer to","Fragments":["crack"]},{"Key":"to crack","Fragments":["a"]},{"Key":"crack a","Fragments":["nut."]},{"Key":"a nut.","Fragments":["I"]},{"Key":"nut. I","Fragments":["think"]},{"Key":"think I'll","Fragments":["use"]},{"Key":"I'll use","Fragments":["that"]},{"Key":"library in","Fragments":["my","a"]},{"Key":"my second","Fragments":["iteration."]},{"Key":"However I","Fragments":["wonder"]},{"Key":"constants is","Fragments":["a"]},{"Key":"good habit.","Fragments":["Imagine"]},{"Key":"habit. Imagine","Fragments":["I"]},{"Key":"Imagine I","Fragments":["want"]},{"Key":"check Bob's","Fragments":["response"]},{"Key":"response from","Fragments":["other","the"]},{"Key":"other part","Fragments":["of"]},{"Key":"my project,","Fragments":["I"]},{"Key":"project, I","Fragments":["expand"]},{"Key":"I expand","Fragments":["my"]},{"Key":"expand my","Fragments":["code"]},{"Key":"same string","Fragments":["from"]},{"Key":"string from","Fragments":["different","matches"]},{"Key":"from different","Fragments":["places"]},{"Key":"different places","Fragments":["(not","in"]},{"Key":"places (not","Fragments":["very"]},{"Key":"(not very","Fragments":["likely"]},{"Key":"very likely","Fragments":["for"]},{"Key":"likely for","Fragments":["this"]},{"Key":"this example)","Fragments":["and"]},{"Key":"example) and","Fragments":["his"]},{"Key":"and his","Fragments":["response"]},{"Key":"his response","Fragments":["changes"]},{"Key":"response changes","Fragments":["for"]},{"Key":"changes for","Fragments":["whatever"]},{"Key":"for whatever","Fragments":["reason..."]},{"Key":"whatever reason...","Fragments":["I"]},{"Key":"reason... I","Fragments":["would"]},{"Key":"change those","Fragments":["strings"]},{"Key":"strings manually","Fragments":["one"]},{"Key":"manually one","Fragments":["by"]},{"Key":"one by","Fragments":["one"]},{"Key":"one instead","Fragments":["of"]},{"Key":"of just","Fragments":["changing","coding","checking","saying"]},{"Key":"just changing","Fragments":["my"]},{"Key":"changing my","Fragments":["constant"]},{"Key":"my constant","Fragments":["."]},{"Key":"However I'll","Fragments":["try"]},{"Key":"I'll try","Fragments":["to","to","them","to"]},{"Key":"get more","Fragments":["feedback"]},{"Key":"more feedback","Fragments":["about"]},{"Key":"feedback about","Fragments":["this","how"]},{"Key":"and see","Fragments":["if","what"]},{"Key":"if am","Fragments":["doing"]},{"Key":"am doing","Fragments":["the","(this"]},{"Key":"doing the","Fragments":["right","substr","non-space","non-space","regex_search(es)","lowercasing","same","same"]},{"Key":"tips, especially","Fragments":["about"]},{"Key":"especially about","Fragments":["a"]},{"Key":"better strategy","Fragments":["for"]},{"Key":"strategy for","Fragments":["parsing"]},{"Key":"for parsing","Fragments":["the"]},{"Key":"parsing the","Fragments":["string.","text","string."]},{"Key":" Did","Fragments":["this","this","a","this","you"]},{"Key":"Did this","Fragments":["pass","pass","work","file"]},{"Key":"this pass","Fragments":["all","all"]},{"Key":"the tests?","Fragments":["I","I"]},{"Key":"I though","Fragments":["if"]},{"Key":"though if","Fragments":["the"]},{"Key":"strings weren't","Fragments":["equal"]},{"Key":"weren't equal","Fragments":["length"]},{"Key":"equal length","Fragments":["then","differently.\""]},{"Key":"length then","Fragments":["it","it"]},{"Key":"was supposed","Fragments":["to","to","to","to"]},{"Key":"to ignore","Fragments":["extra","the","the"]},{"Key":"ignore extra","Fragments":["chars.","length"]},{"Key":"extra chars.","Fragments":["Not","Not"]},{"Key":"chars. Not","Fragments":["just","just"]},{"Key":"Not just","Fragments":["return","return"]},{"Key":"Yea, I'm","Fragments":["a"]},{"Key":"bit torn","Fragments":["about"]},{"Key":"torn about","Fragments":["the"]},{"Key":"strings. One","Fragments":["the"]},{"Key":"One the","Fragments":["one"]},{"Key":"the one","Fragments":["hand,","of","that","on"]},{"Key":"one hand,","Fragments":["having"]},{"Key":"hand, having","Fragments":["a"]},{"Key":"a global","Fragments":["constant","`allRobotNames`"]},{"Key":"global constant","Fragments":["is"]},{"Key":"constant is","Fragments":["nice."]},{"Key":"is nice.","Fragments":["On"]},{"Key":"nice. On","Fragments":["the"]},{"Key":"the other,","Fragments":["having"]},{"Key":"other, having","Fragments":["global"]},{"Key":"having global","Fragments":["objects"]},{"Key":"objects isn't","Fragments":["so"]},{"Key":"isn't so","Fragments":["nice."]},{"Key":"One option","Fragments":["would"]},{"Key":"option would","Fragments":["be","be"]},{"Key":"to store","Fragments":["the","the","the","the","the","both","all"]},{"Key":"store the","Fragments":["strings","number","responses","longest","minutes","expressions","question","the"]},{"Key":"as global","Fragments":["`const"]},{"Key":"global `const","Fragments":["char*`"]},{"Key":"char*` variables,","Fragments":["but"]},{"Key":"variables, but","Fragments":["that","if"]},{"Key":"of sucks","Fragments":["too."]},{"Key":"If Bob's","Fragments":["responses"]},{"Key":"Bob's responses","Fragments":["would"]},{"Key":"responses would","Fragments":["be"]},{"Key":"be checked","Fragments":["by","by","and"]},{"Key":"checked by","Fragments":["another","numAlpha."]},{"Key":"by another","Fragments":["part"]},{"Key":"another part","Fragments":["of"]},{"Key":"the program,","Fragments":["I'd","refer"]},{"Key":"program, I'd","Fragments":["most"]},{"Key":"I'd most","Fragments":["likely"]},{"Key":"most likely","Fragments":["use","not","change"]},{"Key":"likely use","Fragments":["an"]},{"Key":"return it.","Fragments":["No"]},{"Key":"it. No","Fragments":["need"]},{"Key":"return actual","Fragments":["strings"]},{"Key":"actual strings","Fragments":["in"]},{"Key":"strings in","Fragments":["this","a","bob::hey?"]},{"Key":" Usually","Fragments":["I"]},{"Key":"find an","Fragments":["alternative","appropriate"]},{"Key":"an alternative","Fragments":["as","strategy","to"]},{"Key":"alternative as","Fragments":["soon"]},{"Key":"as soon","Fragments":["as","as","as"]},{"Key":"soon as","Fragments":["my","you","one"]},{"Key":"my \"magic","Fragments":["number\""]},{"Key":"\"magic number\"","Fragments":["appears","twice"]},{"Key":"number\" appears","Fragments":["more"]},{"Key":"appears more","Fragments":["than"]},{"Key":"than once","Fragments":["in"]},{"Key":"once in","Fragments":["my","case"]},{"Key":"my program.","Fragments":["Before"]},{"Key":"program. Before","Fragments":["that,"]},{"Key":"Before that,","Fragments":["I'm"]},{"Key":"that, I'm","Fragments":["not"]},{"Key":"about factoring","Fragments":["it"]},{"Key":"factoring it","Fragments":["out."]},{"Key":"But that's","Fragments":["my"]},{"Key":"that's my","Fragments":["personal"]},{"Key":"my personal","Fragments":["take"]},{"Key":"personal take","Fragments":["on"]},{"Key":"the subject","Fragments":["and","string","has"]},{"Key":"subject and","Fragments":["I"]},{"Key":"to present","Fragments":["it"]},{"Key":"present it","Fragments":["as"]},{"Key":"a \"best","Fragments":["practice\""]},{"Key":"\"best practice\"","Fragments":["kind"]},{"Key":"practice\" kind","Fragments":["of"]},{"Key":"Thanks, it","Fragments":["works"]},{"Key":"it works","Fragments":["now.","and","well.","alright","by","just"]},{"Key":" uses","Fragments":["a"]},{"Key":"uses a","Fragments":["single","combination","while"]},{"Key":"single pass","Fragments":["through","over"]},{"Key":"pass through","Fragments":["the"]},{"Key":" by","Fragments":["stepping","the"]},{"Key":"by stepping","Fragments":["backwards"]},{"Key":"stepping backwards","Fragments":["through"]},{"Key":"backwards through","Fragments":["string,","the"]},{"Key":"through string,","Fragments":["i"]},{"Key":"string, i","Fragments":["know"]},{"Key":"i know","Fragments":["from"]},{"Key":"know from","Fragments":["from"]},{"Key":"from from","Fragments":["first"]},{"Key":"from first","Fragments":["character"]},{"Key":"character whether","Fragments":["it"]},{"Key":"whether it","Fragments":["is"]},{"Key":"be short","Fragments":["circuited"]},{"Key":"short circuited","Fragments":["if"]},{"Key":"circuited if","Fragments":["a"]},{"Key":"case character","Fragments":["is"]},{"Key":" maybe","Fragments":["characters","you","line"]},{"Key":"maybe characters","Fragments":["like"]},{"Key":"like '###$!!\"","Fragments":["should"]},{"Key":"'###$!!\" should","Fragments":["be"]},{"Key":"be treated","Fragments":["as","as"]},{"Key":" currently","Fragments":["anything"]},{"Key":"currently anything","Fragments":["not"]},{"Key":"anything not","Fragments":["whitespace"]},{"Key":"not whitespace","Fragments":["and"]},{"Key":"not alpha","Fragments":["is"]},{"Key":"alpha is","Fragments":["treated"]},{"Key":"as speech,","Fragments":["but"]},{"Key":"speech, but","Fragments":["neither"]},{"Key":"but neither","Fragments":["quiet"]},{"Key":"neither quiet","Fragments":["nor"]},{"Key":"quiet nor","Fragments":["shouting"]},{"Key":"C++ has","Fragments":["a","a","pretty"]},{"Key":"a min","Fragments":["function"]},{"Key":"min function","Fragments":["that"]},{"Key":"shorter of","Fragments":["two"]},{"Key":"two values.","Fragments":["You"]},{"Key":"values. You","Fragments":["could"]},{"Key":"at around","Fragments":["line"]},{"Key":"around line","Fragments":["10"]},{"Key":"line 10","Fragments":["to"]},{"Key":"10 to","Fragments":["shorten"]},{"Key":"to shorten","Fragments":["things","or","overly"]},{"Key":"shorten things","Fragments":["a"]},{"Key":"things a","Fragments":["bit."]},{"Key":" have","Fragments":["decided,"]},{"Key":"have decided,","Fragments":["i'm"]},{"Key":"decided, i'm","Fragments":["going"]},{"Key":"i'm going","Fragments":["to"]},{"Key":"to re-write","Fragments":["this"]},{"Key":"re-write this","Fragments":["using"]},{"Key":"using string.pop_back()","Fragments":["instead"]},{"Key":"thought if","Fragments":["the"]},{"Key":"strings were","Fragments":["of","repeated"]},{"Key":"were of","Fragments":["unequal"]},{"Key":"of unequal","Fragments":["length"]},{"Key":"unequal length","Fragments":["then"]},{"Key":"ignore the","Fragments":["extra","extra","extra"]},{"Key":"the extra","Fragments":["chars.","time","type.","length,","lines","length.","length","credit"]},{"Key":"an if-break","Fragments":["inside"]},{"Key":"if-break inside","Fragments":["the"]},{"Key":"loop, just","Fragments":["make"]},{"Key":"just make","Fragments":["your"]},{"Key":"loop conditional","Fragments":["an"]},{"Key":"conditional an","Fragments":["\"and\""]},{"Key":"an \"and\"","Fragments":["conditional."]},{"Key":"for (size_t","Fragments":["i"]},{"Key":"(size_t i","Fragments":["="]},{"Key":"\u003c str1.length()","Fragments":["\u0026\u0026"]},{"Key":"str1.length() \u0026\u0026","Fragments":["str2Length"]},{"Key":"\u0026\u0026 str2Length","Fragments":["\u003c"]},{"Key":"str2Length \u003c","Fragments":["i;"]},{"Key":"\u003c i;","Fragments":["++i)"]},{"Key":"a tolower(char)","Fragments":["function."]},{"Key":"tolower(char) function.","Fragments":["Which"]},{"Key":"function. Which","Fragments":["would"]},{"Key":"Which would","Fragments":["make","solve\u003cul\u003e\u003cli\u003eMy"]},{"Key":"your LowerCase","Fragments":["function"]},{"Key":"LowerCase function","Fragments":["a"]},{"Key":"function a","Fragments":["little","member","bit"]},{"Key":" Seriously","Fragments":["how"]},{"Key":"Seriously how","Fragments":["does"]},{"Key":"how does","Fragments":["c++"]},{"Key":"does c++","Fragments":["not"]},{"Key":"c++ not","Fragments":["already"]},{"Key":"not already","Fragments":["have"]},{"Key":"already have","Fragments":["a"]},{"Key":"that lowercases","Fragments":["a"]},{"Key":"lowercases a","Fragments":["string?"]},{"Key":"Hey @leon,","Fragments":["First"]},{"Key":"@leon, First","Fragments":["off"]},{"Key":"First off","Fragments":["I"]},{"Key":"off I","Fragments":["love"]},{"Key":"the OOP","Fragments":["design"]},{"Key":"OOP design","Fragments":["and"]},{"Key":"design and","Fragments":["I"]},{"Key":"you process","Fragments":["the"]},{"Key":"process the","Fragments":["strings"]},{"Key":"really efficient","Fragments":["and"]},{"Key":"efficient and","Fragments":["clever."]},{"Key":" *One","Fragments":["thing"]},{"Key":"*One thing","Fragments":["I"]},{"Key":"done differently,","Fragments":["that"]},{"Key":"differently, that","Fragments":["you"]},{"Key":"may consider","Fragments":["is...*"]},{"Key":" \u003cul\u003e\u003cli\u003e","Fragments":["Use","`const"]},{"Key":"\u003cul\u003e\u003cli\u003e Use","Fragments":["`const"]},{"Key":"`const std::string\u0026`","Fragments":["for"]},{"Key":"std::string\u0026` for","Fragments":["the"]},{"Key":"and parameter","Fragments":["of"]},{"Key":"parameter of","Fragments":["`bob::hey`"]},{"Key":" \u003cli\u003e`bob::hey`","Fragments":["takes","takes","takes","takes"]},{"Key":"\u003cli\u003e`bob::hey` takes","Fragments":["a","a","a","a"]},{"Key":"takes a","Fragments":["`const","`const","phrase.","phrase.","`const","`const","phrase.","lot","vector","vector","vector","vector"]},{"Key":"a `const","Fragments":["string\u0026","string\u0026","string\u0026","string\u0026","string`","string"]},{"Key":"string\u0026 sentence`","Fragments":["and","and","and","and"]},{"Key":"sentence` and","Fragments":["returns","returns","returns","determines"]},{"Key":" \u003cli\u003e`evaluate`","Fragments":["determines","determines","determines"]},{"Key":"\u003cli\u003e`evaluate` determines","Fragments":["the","the","the"]},{"Key":"determines the","Fragments":["amount","amount","amount","amount","phraseType."]},{"Key":"of possible","Fragments":["responses","responses","responses","responses","improvement"]},{"Key":"possible responses","Fragments":["by","by","by","by"]},{"Key":"responses by","Fragments":["getting","getting","getting","getting"]},{"Key":"by getting","Fragments":["the","the","the","the"]},{"Key":"getting the","Fragments":["enum","enum","enum","enum","correct"]},{"Key":"enum value","Fragments":["`respond_to::length`","`respond_to::length`","`respond_to::length`\u003c/li\u003e","`respond_to::length`\u003c/li\u003e"]},{"Key":"value `respond_to::length`","Fragments":["and","and"]},{"Key":"`respond_to::length` and","Fragments":["compares","compares"]},{"Key":"and compares","Fragments":["the","the"]},{"Key":"compares the","Fragments":["sentence","sentence","sentence","sentence"]},{"Key":"the sentence","Fragments":["against","against","against","against"]},{"Key":"sentence against","Fragments":["each","each","a","a"]},{"Key":"against each","Fragments":["type","type"]},{"Key":"each type","Fragments":["returning","returning"]},{"Key":"type returning","Fragments":["the","the"]},{"Key":"returning the","Fragments":["result","result","information,","correct","reply"]},{"Key":"of `const","Fragments":["string\u0026","string\u0026","string\u0026"]},{"Key":"string\u0026 respond","Fragments":["(const","(const"]},{"Key":"respond (const","Fragments":["respond_to\u0026","respond_to\u0026"]},{"Key":"(const respond_to\u0026","Fragments":["type)`","type)`"]},{"Key":" `isType(const","Fragments":["string\u0026","string\u0026","string\u0026","string\u0026"]},{"Key":"`isType(const string\u0026","Fragments":["sentence,","sentence,","sentence,","sentence,"]},{"Key":"string\u0026 sentence,","Fragments":["const","const","const","const"]},{"Key":"sentence, const","Fragments":["respond_to\u0026","respond_to\u0026","respond_to\u0026","respond_to\u0026"]},{"Key":"const respond_to\u0026","Fragments":["type)`","type)`","type)`","type)`"]},{"Key":"respond_to\u0026 type)`","Fragments":["returns","returns","compares","compares"]},{"Key":"type)` returns","Fragments":["true;","true;"]},{"Key":"returns true;","Fragments":["meaning","meaning"]},{"Key":"true; meaning","Fragments":["that","that"]},{"Key":"meaning that","Fragments":["it","it","you"]},{"Key":"matched the","Fragments":["stored","stored"]},{"Key":"the stored","Fragments":["regex","regex","anagram","anagram","anagram","anagram"]},{"Key":"stored regex","Fragments":["for","for"]},{"Key":"the corresponding","Fragments":["type","type"]},{"Key":"corresponding type","Fragments":["against","against"]},{"Key":"type against","Fragments":["the","the"]},{"Key":" \u003cli\u003eBecause","Fragments":["I","of","I","of","we","we","I","of","I","I","of","I","of","of","of"]},{"Key":"\u003cli\u003eBecause I","Fragments":["chose","chose","chose","decided","chose","iterate"]},{"Key":"I chose","Fragments":["an","an","an","an","to","to","to","to"]},{"Key":"chose an","Fragments":["object","object","object","object"]},{"Key":"object oriented","Fragments":["approach,","approach,","approach,","approach,"]},{"Key":"oriented approach,","Fragments":["I","I","I","I"]},{"Key":"approach, I","Fragments":["was","was","was","was"]},{"Key":"was forced","Fragments":["to","to","to","to"]},{"Key":"forced to","Fragments":["make","make","make","make"]},{"Key":"make all","Fragments":["my","my","my","my","the"]},{"Key":"all my","Fragments":["methods","methods","methods","methods","code"]},{"Key":"my methods","Fragments":["`static`.","`static`.","`static`.","`static`."]},{"Key":"methods `static`.","Fragments":["Although","Although","Although","Although"]},{"Key":"`static`. Although","Fragments":["after","after","after","after"]},{"Key":"Although after","Fragments":["review,","review,","review,","review,"]},{"Key":"after review,","Fragments":["I","I","I","I"]},{"Key":"review, I","Fragments":["believe","believe","believe","believe"]},{"Key":"believe that","Fragments":["is","is","is","is","maintains","in","if"]},{"Key":"how a","Fragments":["true","true","true","true"]},{"Key":"a true","Fragments":["`bob`","`bob`","`bob`","`bob`"]},{"Key":"true `bob`","Fragments":["object","object","object","object"]},{"Key":"`bob` object","Fragments":["would","would","would","would"]},{"Key":"object would","Fragments":["work.\u003c/li\u003e","work.\u003c/li\u003e","work.\u003c/li\u003e","work.\u003c/li\u003e"]},{"Key":"\u003cli\u003eBecause of","Fragments":["how","how","how","how","how","how","how"]},{"Key":"I created","Fragments":["my","my","my","my"]},{"Key":"created my","Fragments":["data","data","data","data"]},{"Key":"my data","Fragments":["structures","structures","structures","structures"]},{"Key":"structures it","Fragments":["would","would","would","would"]},{"Key":"be relatively","Fragments":["easy","easy","easy","easy"]},{"Key":"to scale","Fragments":["this","this","this","this"]},{"Key":"scale this","Fragments":["and","and","and","and"]},{"Key":"and add","Fragments":["responses","responses","responses","responses"]},{"Key":"add responses","Fragments":["to","to","to","to"]},{"Key":"responses to","Fragments":["bob;","bob;","bob;","bob;"]},{"Key":"to bob;","Fragments":["however,","however,","however,","however,"]},{"Key":"bob; however,","Fragments":["now","now","now","now"]},{"Key":"however, now","Fragments":["I","I","I","I"]},{"Key":"have 3","Fragments":["different","different","different","different"]},{"Key":"3 different","Fragments":["data","data","data","data"]},{"Key":"different data","Fragments":["structures","structures","structures","structures"]},{"Key":"structures that","Fragments":["must","must","must","must"]},{"Key":"that must","Fragments":["be","be","be","be"]},{"Key":"be kept","Fragments":["in","in","in","in"]},{"Key":"kept in","Fragments":["sync","sync","sync","sync"]},{"Key":"in sync","Fragments":["\u003ci\u003ei.e.","\u003ci\u003ei.e.","\u003ci\u003ei.e.","\u003ci\u003ei.e.","with"]},{"Key":"sync \u003ci\u003ei.e.","Fragments":["`enum","`enum","`enum","`enum"]},{"Key":"\u003ci\u003ei.e. `enum","Fragments":["respond_to`","respond_to`","respond_to`","respond_to`"]},{"Key":"`enum respond_to`","Fragments":["`map","`map","`map","`map"]},{"Key":"respond_to` `map","Fragments":["mRegexes`","mRegexes`","mRegexes`","mRegexes`"]},{"Key":"`map mRegexes`","Fragments":["`map","`map","`map","`map"]},{"Key":"mRegexes` `map","Fragments":["mResponses`\u003c/i\u003e","mResponses`\u003c/i\u003e","mResponses`\u003c/i\u003e","mResponses`\u003c/i\u003e"]},{"Key":" __Changes","Fragments":["From","From","From","From","From","From","from","from","from"]},{"Key":"__Changes From","Fragments":["Iteration","Iteration","Iteration","Iteration","Iteration","Iteration"]},{"Key":"From Iteration","Fragments":["1__","1__","2__","3__","2__","2__"]},{"Key":" \u003cli\u003eCode","Fragments":["was"]},{"Key":"\u003cli\u003eCode was","Fragments":["formatted"]},{"Key":"was formatted","Fragments":["to"]},{"Key":"formatted to","Fragments":["be"]},{"Key":"readable on","Fragments":["exercism.io"]},{"Key":"on exercism.io","Fragments":["\u003c/li\u003e"]},{"Key":" Yes","Fragments":["I"]},{"Key":"Yes I","Fragments":["have."]},{"Key":"I have.","Fragments":["Was"]},{"Key":"have. Was","Fragments":["there"]},{"Key":"Was there","Fragments":["another"]},{"Key":"there another","Fragments":["underlaying"]},{"Key":"another underlaying","Fragments":["message"]},{"Key":"underlaying message","Fragments":["there"]},{"Key":"message there","Fragments":["that"]},{"Key":"there that","Fragments":["I","it's","you"]},{"Key":"I missed,","Fragments":["or"]},{"Key":"missed, or","Fragments":["just"]},{"Key":"or just","Fragments":["a","not"]},{"Key":" \u003cul\u003e\u003cli\u003eHandles","Fragments":["Special"]},{"Key":"\u003cul\u003e\u003cli\u003eHandles Special","Fragments":["characters"]},{"Key":"Special characters","Fragments":["better."]},{"Key":" \u003cul\u003e\u003cli\u003e`line","Fragments":["18:`"]},{"Key":"\u003cul\u003e\u003cli\u003e`line 18:`","Fragments":["changed"]},{"Key":"18:` changed","Fragments":["`!isspace(c)`"]},{"Key":"changed `!isspace(c)`","Fragments":["to"]},{"Key":"`!isspace(c)` to","Fragments":["`isalpha(c)`\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e"]},{"Key":" \u003cli\u003e","Fragments":["`const","Each","Because","`const","Each","Because","`const","Each","Because","Each","Each","`matches()`","A","Because","As","`matches()`","A","Because","`matches()`","A","Because","`matches()`","A"]},{"Key":"\u003cli\u003e `const","Fragments":["map\u003cstring,int\u003e","map\u003cstring,int\u003e","map\u003cstring,int\u003e"]},{"Key":"`const map\u003cstring,int\u003e","Fragments":["words(const","words(const","words(const"]},{"Key":"map\u003cstring,int\u003e words(const","Fragments":["string\u0026","string\u0026","string\u0026"]},{"Key":"words(const string\u0026","Fragments":["words)`","words)`","words)`"]},{"Key":"string\u0026 words)`","Fragments":["takes","takes","takes"]},{"Key":"words)` takes","Fragments":["a","a","a"]},{"Key":"a phrase.","Fragments":["\u003c/li\u003e","\u003c/li\u003e","\u003c/li\u003e"]},{"Key":"\u003cli\u003e Each","Fragments":["character","character","character","character","character"]},{"Key":"Each character","Fragments":["of","of","of","is","is"]},{"Key":"is analyzed","Fragments":["and","and","and"]},{"Key":"analyzed and","Fragments":["appended","appended","converted"]},{"Key":"and appended","Fragments":["to","to"]},{"Key":"appended to","Fragments":["a","a"]},{"Key":"a result","Fragments":["word","word"]},{"Key":"result word","Fragments":["if","if"]},{"Key":"word if","Fragments":["neccessary","neccessary","it"]},{"Key":"if neccessary","Fragments":["\u003c/li\u003e","\u003c/li\u003e"]},{"Key":" \u003cli\u003eIf","Fragments":["a","a","you"]},{"Key":"\u003cli\u003eIf a","Fragments":["non-alphabetic","space"]},{"Key":"a non-alphabetic","Fragments":["character"]},{"Key":"non-alphabetic character","Fragments":["or"]},{"Key":"character or","Fragments":["newline"]},{"Key":"or newline","Fragments":["is","is"]},{"Key":"newline is","Fragments":["encountered","encountered"]},{"Key":"is encountered","Fragments":["then","then"]},{"Key":"encountered then","Fragments":["it","it"]},{"Key":"and inserted","Fragments":["or","or","into"]},{"Key":"inserted or","Fragments":["counted","counted"]},{"Key":"or counted","Fragments":["depending","depending"]},{"Key":"counted depending","Fragments":["on","on"]},{"Key":"depending on","Fragments":["if","if","your","how"]},{"Key":"on if","Fragments":["it","it"]},{"Key":"has been","Fragments":["encountered","encountered","removed","implemented","done,","removed.\u003c/li\u003e","removed","replaced","purged","scrapped.","rewritten","used,"]},{"Key":"been encountered","Fragments":["before","before"]},{"Key":"encountered before","Fragments":["and","and"]},{"Key":"before and","Fragments":["the","the"]},{"Key":"word string","Fragments":["set","set"]},{"Key":"string set","Fragments":["to","to"]},{"Key":"set to","Fragments":["empty.\u003c/li\u003e","empty.\u003c/li\u003e"]},{"Key":"\u003cli\u003eBecause we","Fragments":["use","use"]},{"Key":"the *exercism","Fragments":["build","build"]},{"Key":"*exercism build","Fragments":["system*","system*"]},{"Key":"build system*","Fragments":["I","I"]},{"Key":"system* I","Fragments":["had","had"]},{"Key":"one file","Fragments":["as","as","(bob.h)","you","at","pretty"]},{"Key":"file as","Fragments":["it","it","a"]},{"Key":"it wouldn't","Fragments":["link","link"]},{"Key":"wouldn't link","Fragments":["separately.\u003c/li\u003e","separately.\u003c/li\u003e"]},{"Key":"\u003cli\u003e Because","Fragments":["I","I","I","I","I","I"]},{"Key":"Because I","Fragments":["used","used","used","use","use","use","wanted"]},{"Key":"map return","Fragments":["value","value"]},{"Key":"value if","Fragments":["the","the","the","it"]},{"Key":"map is","Fragments":["large","large","a"]},{"Key":"is large","Fragments":["then","then","then","enough,"]},{"Key":"large then","Fragments":["I","I","I"]},{"Key":"potentially copy","Fragments":["a","a","a"]},{"Key":"copy a","Fragments":["large","large","large","const"]},{"Key":"a large","Fragments":["amount","amount","amount","performance","performance","performance"]},{"Key":"large amount","Fragments":["of","of","of"]},{"Key":"of data","Fragments":["on","on","on","generated"]},{"Key":"data on","Fragments":["return","return","`return`"]},{"Key":"on return","Fragments":["but","but"]},{"Key":"return but","Fragments":["because","because"]},{"Key":"but because","Fragments":["I","I","I","I"]},{"Key":"can't return","Fragments":["a","a","a"]},{"Key":"local reference","Fragments":["without","without","without"]},{"Key":"reference without","Fragments":["beating","beating","beating"]},{"Key":"without beating","Fragments":["up","up","up"]},{"Key":"beating up","Fragments":["the","the","the"]},{"Key":"compiler a","Fragments":["bit,","bit,","bit,"]},{"Key":"a bit,","Fragments":["I","I","I","and","good"]},{"Key":"bit, I","Fragments":["gave","gave","gave"]},{"Key":"I gave","Fragments":["in.","in.","in.","@alfonzo","up"]},{"Key":"gave in.","Fragments":["\u003c/li\u003e","\u003c/li\u003e","\u003c/li\u003e"]},{"Key":" @eula,","Fragments":["yes"]},{"Key":"@eula, yes","Fragments":["it"]},{"Key":"yes it","Fragments":["happened"]},{"Key":"it happened","Fragments":["to"]},{"Key":"happened to","Fragments":["pass"]},{"Key":"tests, albeit","Fragments":["only"]},{"Key":"albeit only","Fragments":["by"]},{"Key":"only by","Fragments":["luck."]},{"Key":"by luck.","Fragments":["The"]},{"Key":"luck. The","Fragments":["tests"]},{"Key":"tests were","Fragments":["such"]},{"Key":"were such","Fragments":["that"]},{"Key":"such that","Fragments":["the"]},{"Key":"the mismatched","Fragments":["string","strings"]},{"Key":"mismatched string","Fragments":["sizes","size."]},{"Key":"string sizes","Fragments":["came"]},{"Key":"sizes came","Fragments":["out"]},{"Key":"came out","Fragments":["to","in"]},{"Key":"be 0","Fragments":["difference","on","anyway.","by","by"]},{"Key":"0 difference","Fragments":["anyways."]},{"Key":"difference anyways.","Fragments":["I'll"]},{"Key":"anyways. I'll","Fragments":["fix"]},{"Key":"I'll fix","Fragments":["it","that"]},{"Key":"fix it","Fragments":["in","and","a"]},{"Key":"a space","Fragments":["or","if","in"]},{"Key":"space or","Fragments":["newline"]},{"Key":"line 20","Fragments":["instead"]},{"Key":"20 instead","Fragments":["of"]},{"Key":"for if","Fragments":["it","the"]},{"Key":"it punctuation","Fragments":["or"]},{"Key":"punctuation or","Fragments":["white","numbers."]},{"Key":"or white","Fragments":["space","space"]},{"Key":"space you","Fragments":["could"]},{"Key":" if(not","Fragments":["alphanumeric)"]},{"Key":"tried a","Fragments":["different"]},{"Key":"different approach","Fragments":["to"]},{"Key":"approach to","Fragments":["this","this","tokenizing"]},{"Key":"one. At","Fragments":["the"]},{"Key":"At the","Fragments":["expense","end","end"]},{"Key":"of memory","Fragments":["(26*sizeof(int)"]},{"Key":"memory (26*sizeof(int)","Fragments":["bytes),"]},{"Key":"(26*sizeof(int) bytes),","Fragments":["I"]},{"Key":"bytes), I","Fragments":["was"]},{"Key":"to achieve","Fragments":["an","pattern"]},{"Key":"achieve an","Fragments":["efficiency"]},{"Key":"an efficiency","Fragments":["of"]},{"Key":"of O(n)","Fragments":["rather"]},{"Key":"O(n) rather","Fragments":["than"]},{"Key":"than using","Fragments":["a","a"]},{"Key":"a double","Fragments":["for-loop"]},{"Key":"double for-loop","Fragments":["resulting"]},{"Key":"for-loop resulting","Fragments":["in"]},{"Key":"resulting in","Fragments":["O(n^2"]},{"Key":"in O(n^2","Fragments":[")."]},{"Key":"I make","Fragments":["an"]},{"Key":"an array","Fragments":["the","of","of"]},{"Key":"array the","Fragments":["size"]},{"Key":"the alphabet","Fragments":["to"]},{"Key":"alphabet to","Fragments":["store"]},{"Key":"of times","Fragments":["a","\"a\"","\"a\"","the","you"]},{"Key":"times a","Fragments":["particular"]},{"Key":"particular letter","Fragments":["appears"]},{"Key":"letter appears","Fragments":["in"]},{"Key":"appears in","Fragments":["the","the","the","the"]},{"Key":"first loop,","Fragments":["then"]},{"Key":"loop, then","Fragments":["check"]},{"Key":"then check","Fragments":["if"]},{"Key":"same number","Fragments":["of","of"]},{"Key":"of letters","Fragments":["are","found.","is"]},{"Key":"are present","Fragments":["in"]},{"Key":" Question","Fragments":["about"]},{"Key":"Question about","Fragments":["this"]},{"Key":"int alphabet[26]","Fragments":["="]},{"Key":"alphabet[26] =","Fragments":["{};"]},{"Key":"that proper","Fragments":["technique"]},{"Key":"proper technique","Fragments":["to"]},{"Key":"technique to","Fragments":["get"]},{"Key":"all instances","Fragments":["to"]},{"Key":"instances to","Fragments":["a"]},{"Key":"a 0?","Fragments":["Or"]},{"Key":"0? Or","Fragments":["would"]},{"Key":"Or would","Fragments":["it"]},{"Key":"better practice/more","Fragments":["readable"]},{"Key":"practice/more readable","Fragments":["to"]},{"Key":"readable to","Fragments":["have","use"]},{"Key":"have {0,","Fragments":["0,"]},{"Key":"{0, 0,","Fragments":["0,"]},{"Key":"0, 0,","Fragments":["0,","..."]},{"Key":" \u003cul\u003e\u003cli\u003eLarge","Fragments":["Formatting"]},{"Key":"\u003cul\u003e\u003cli\u003eLarge Formatting","Fragments":["Redesign"]},{"Key":" \u003cul\u003e\u003cli\u003e.cpp","Fragments":["and"]},{"Key":"\u003cul\u003e\u003cli\u003e.cpp and","Fragments":[".h"]},{"Key":"and .h","Fragments":["are"]},{"Key":".h are","Fragments":["now"]},{"Key":"are now","Fragments":["one","passed"]},{"Key":"now one","Fragments":["file"]},{"Key":"file (bob.h)","Fragments":["and"]},{"Key":"(bob.h) and","Fragments":["co-operate"]},{"Key":"and co-operate","Fragments":["with"]},{"Key":"co-operate with","Fragments":["this"]},{"Key":"this sites","Fragments":["format.\u003c/li\u003e"]},{"Key":" \u003cli\u003eThe","Fragments":["convienience","string","difference","difference","match","match","`if`","match","match"]},{"Key":"\u003cli\u003eThe convienience","Fragments":["function"]},{"Key":"convienience function","Fragments":["`const"]},{"Key":"function `const","Fragments":["string\u0026"]},{"Key":"string\u0026 respond(const","Fragments":["respond_to\u0026)`","string\u0026)`is"]},{"Key":" has","Fragments":["been","a"]},{"Key":"been removed","Fragments":["and","and"]},{"Key":"its calls","Fragments":["replaced"]},{"Key":"calls replaced","Fragments":["with"]},{"Key":"with its","Fragments":["return","length"]},{"Key":"its return","Fragments":["value"]},{"Key":" \u003cli\u003eBetter","Fragments":["Regexes\u003cul\u003e"]},{"Key":" \u003cli\u003e`regex_search`","Fragments":["is"]},{"Key":"\u003cli\u003e`regex_search` is","Fragments":["used"]},{"Key":"used instead","Fragments":["of"]},{"Key":"of `regex_match`","Fragments":["to"]},{"Key":"`regex_match` to","Fragments":["facilitate"]},{"Key":"to facilitate","Fragments":["more","locale-awareness."]},{"Key":"facilitate more","Fragments":["accurate"]},{"Key":"more accurate","Fragments":["regexes\u003c/li\u003e"]},{"Key":" \u003cli\u003eExpressions","Fragments":["are"]},{"Key":"\u003cli\u003eExpressions are","Fragments":["more"]},{"Key":"more scalable","Fragments":["and"]},{"Key":"scalable and","Fragments":["applicable"]},{"Key":"and applicable","Fragments":["to"]},{"Key":"applicable to","Fragments":["responses","C++"]},{"Key":"to responses","Fragments":["not"]},{"Key":"responses not","Fragments":["included"]},{"Key":"not included","Fragments":["by"]},{"Key":"included by","Fragments":["the"]},{"Key":" \u003cli\u003eQuicker","Fragments":["Evaluation\u003cul\u003e\u003cli\u003eReturns"]},{"Key":"\u003cli\u003eQuicker Evaluation\u003cul\u003e\u003cli\u003eReturns","Fragments":["on"]},{"Key":"Evaluation\u003cul\u003e\u003cli\u003eReturns on","Fragments":["empty"]},{"Key":"type)` compares","Fragments":["the","the"]},{"Key":"against a","Fragments":["response","response"]},{"Key":"a response","Fragments":["type","type","for"]},{"Key":"response type","Fragments":["which","which"]},{"Key":"type which","Fragments":["has","has"]},{"Key":"a corresponding","Fragments":["regular","regular","`case`."]},{"Key":"corresponding regular","Fragments":["expression","expression"]},{"Key":"regular expression","Fragments":["and","and","that","itself."]},{"Key":"expression and","Fragments":["returns","returns"]},{"Key":"the boolean","Fragments":["expression","expression","result","result"]},{"Key":"boolean expression","Fragments":["of","of"]},{"Key":"Hey @reba","Fragments":["I"]},{"Key":"@reba I","Fragments":["really"]},{"Key":"the design","Fragments":["you've","as","or","consistent."]},{"Key":"design you've","Fragments":["chosen,"]},{"Key":"you've chosen,","Fragments":["its"]},{"Key":"chosen, its","Fragments":["intelligible"]},{"Key":"its intelligible","Fragments":["and"]},{"Key":"intelligible and","Fragments":["concise!"]},{"Key":"concise! If","Fragments":["I"]},{"Key":"change one","Fragments":["thing"]},{"Key":"thing for","Fragments":["its"]},{"Key":"its benefit","Fragments":["however,"]},{"Key":"benefit however,","Fragments":["I"]},{"Key":"however, I","Fragments":["would"]},{"Key":"would use","Fragments":["`phrase.back()`","an"]},{"Key":"use `phrase.back()`","Fragments":["on"]},{"Key":"`phrase.back()` on","Fragments":["`line"]},{"Key":"on `line","Fragments":["54`"]},{"Key":"`line 54`","Fragments":["instead"]},{"Key":"54` instead","Fragments":["of"]},{"Key":"of `phrase[phrase.size()-1]`","Fragments":["that"]},{"Key":"`phrase[phrase.size()-1]` that","Fragments":["would"]},{"Key":"would allow","Fragments":["you","me"]},{"Key":"allow you","Fragments":["to","to"]},{"Key":"remove your","Fragments":["`inline`"]},{"Key":"your `inline`","Fragments":["function"]},{"Key":"`inline` function","Fragments":["and"]},{"Key":"would perfect","Fragments":["this"]},{"Key":"perfect this","Fragments":["code."]},{"Key":"code. Do","Fragments":["you"]},{"Key":"Moved the","Fragments":["copied"]},{"Key":"the copied","Fragments":["logic"]},{"Key":"copied logic","Fragments":["that"]},{"Key":"logic that","Fragments":["was","processes"]},{"Key":"was happening","Fragments":["after"]},{"Key":"happening after","Fragments":["the"]},{"Key":"the inside","Fragments":["by"]},{"Key":"inside by","Fragments":["allowing"]},{"Key":"by allowing","Fragments":["the"]},{"Key":"allowing the","Fragments":["loop"]},{"Key":"to happen","Fragments":["once"]},{"Key":"happen once","Fragments":["more,"]},{"Key":"once more,","Fragments":["and"]},{"Key":"more, and","Fragments":["checking"]},{"Key":"that case","Fragments":["in"]},{"Key":"case in","Fragments":["the"]},{"Key":"first if","Fragments":["statement."]},{"Key":"if statement.","Fragments":["This","I"]},{"Key":"statement. This","Fragments":["also"]},{"Key":"This also","Fragments":["let"]},{"Key":"also let","Fragments":["me"]},{"Key":"me move","Fragments":["all"]},{"Key":"move all","Fragments":["variable","your"]},{"Key":"declarations inside","Fragments":["of"]},{"Key":"loop, other","Fragments":["than"]},{"Key":"other than","Fragments":["the","something","personal","a","that"]},{"Key":"the returned","Fragments":["map.","value:"]},{"Key":"cases and","Fragments":["built","functions,","compiler"]},{"Key":"and built","Fragments":["my"]},{"Key":"built my","Fragments":["code"]},{"Key":"code around","Fragments":["that."]},{"Key":" With","Fragments":["classes,","C++11","that"]},{"Key":"With classes,","Fragments":["you"]},{"Key":"classes, you","Fragments":["now"]},{"Key":"you now","Fragments":["expose"]},{"Key":"now expose","Fragments":["a"]},{"Key":"expose a","Fragments":["public"]},{"Key":"a public","Fragments":["default"]},{"Key":"public default","Fragments":["and"]},{"Key":"\u003cul\u003e\u003cli\u003e `const","Fragments":["string\u0026"]},{"Key":"respond(const string\u0026)`is","Fragments":["gone"]},{"Key":"string\u0026)`is gone","Fragments":["and"]},{"Key":"gone and","Fragments":["it"]},{"Key":"it functionality","Fragments":["has"]},{"Key":"functionality has","Fragments":["been"]},{"Key":"been implemented","Fragments":["inside"]},{"Key":"implemented inside","Fragments":["of"]},{"Key":"string\u0026 bob::hey(cosnt","Fragments":["string\u0026)`.\u003cul\u003e\u003cli\u003eI"]},{"Key":"bob::hey(cosnt string\u0026)`.\u003cul\u003e\u003cli\u003eI","Fragments":["don't"]},{"Key":"string\u0026)`.\u003cul\u003e\u003cli\u003eI don't","Fragments":["like"]},{"Key":"don't like","Fragments":["the","its","your"]},{"Key":"the lack","Fragments":["of"]},{"Key":"lack of","Fragments":["descriptiveness"]},{"Key":"of descriptiveness","Fragments":["with"]},{"Key":"descriptiveness with","Fragments":["`bob::hey`"]},{"Key":"with `bob::hey`","Fragments":["and"]},{"Key":"`bob::hey` and","Fragments":["I"]},{"Key":"that people","Fragments":["`evaluate`"]},{"Key":"people `evaluate`","Fragments":["things"]},{"Key":"`evaluate` things","Fragments":["privately"]},{"Key":"things privately","Fragments":["but"]},{"Key":"privately but","Fragments":["this"]},{"Key":"this became","Fragments":["a"]},{"Key":"became a","Fragments":["`respond`"]},{"Key":"a `respond`","Fragments":["function"]},{"Key":"`respond` function","Fragments":["and"]},{"Key":"the evaluation","Fragments":["was","at"]},{"Key":"evaluation was","Fragments":["moved"]},{"Key":"was moved","Fragments":["to"]},{"Key":"moved to","Fragments":["`isType`","the"]},{"Key":"to `isType`","Fragments":["so"]},{"Key":"`isType` so","Fragments":["decided"]},{"Key":"so decided","Fragments":["that"]},{"Key":"decided that","Fragments":["was","a"]},{"Key":"not quite","Fragments":["a"]},{"Key":"good enough","Fragments":["reason","balance"]},{"Key":"enough reason","Fragments":["to"]},{"Key":"have it","Fragments":["around.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e","done","directly","copied"]},{"Key":" \u003cli\u003e`enum","Fragments":["respond_to`"]},{"Key":"\u003cli\u003e`enum respond_to`","Fragments":["is"]},{"Key":"respond_to` is","Fragments":["once"]},{"Key":"is once","Fragments":["again"]},{"Key":"once again","Fragments":["a"]},{"Key":"again a","Fragments":["private"]},{"Key":"a private","Fragments":["member","method","variable."]},{"Key":"private member","Fragments":["of"]},{"Key":"member of","Fragments":["`bob`.","class"]},{"Key":" \u003cul\u003e\u003cli\u003eI","Fragments":["think"]},{"Key":"\u003cul\u003e\u003cli\u003eI think","Fragments":["this"]},{"Key":"a much","Fragments":["better","cleaner"]},{"Key":"much better","Fragments":["design","now.","time."]},{"Key":"better design","Fragments":["because"]},{"Key":"design because","Fragments":["it's"]},{"Key":"it's encapsulated","Fragments":["and"]},{"Key":"encapsulated and","Fragments":["emulates"]},{"Key":"and emulates","Fragments":["a"]},{"Key":"emulates a","Fragments":["real"]},{"Key":"a real","Fragments":["\"bob\"","difference"]},{"Key":"real \"bob\"","Fragments":["object.\u003c/li\u003e\u003c/ul\u003e"]},{"Key":" \u003cli\u003eReformatted","Fragments":["Code"]},{"Key":" \u003cul\u003e\u003cli\u003eCode","Fragments":["is"]},{"Key":"\u003cul\u003e\u003cli\u003eCode is","Fragments":["tighter"]},{"Key":"is tighter","Fragments":["and"]},{"Key":"tighter and","Fragments":["shortened","keep"]},{"Key":"and shortened","Fragments":["where"]},{"Key":"shortened where","Fragments":["logically"]},{"Key":"where logically","Fragments":["applicable\u003c/li\u003e"]},{"Key":" \u003cli\u003e`sentence`","Fragments":["variable"]},{"Key":"\u003cli\u003e`sentence` variable","Fragments":["is"]},{"Key":"variable is","Fragments":["now","already"]},{"Key":"is now","Fragments":["`phrase`","signalled","handled","handled","passed","comparing","in"]},{"Key":"now `phrase`","Fragments":["because"]},{"Key":"`phrase` because","Fragments":["it"]},{"Key":"is shorter","Fragments":["and","than","to"]},{"Key":"shorter and","Fragments":["makes","clearer."]},{"Key":"and determines","Fragments":["the"]},{"Key":"the `evaluate()`","Fragments":["function"]},{"Key":"`evaluate()` function","Fragments":["and"]},{"Key":"use `bob::hey`","Fragments":["my"]},{"Key":"`bob::hey` my","Fragments":["code"]},{"Key":"less realistically","Fragments":["emulate"]},{"Key":"realistically emulate","Fragments":["an"]},{"Key":"emulate an","Fragments":["actual"]},{"Key":"actual person;","Fragments":["however"]},{"Key":"person; however","Fragments":["it"]},{"Key":"has essentially","Fragments":["turned"]},{"Key":"essentially turned","Fragments":["a"]},{"Key":"turned a","Fragments":["3-step"]},{"Key":"a 3-step","Fragments":["procedure"]},{"Key":"3-step procedure","Fragments":["into"]},{"Key":"procedure into","Fragments":["a"]},{"Key":"a 2-step","Fragments":["procedure"]},{"Key":"2-step procedure","Fragments":["with"]},{"Key":"procedure with","Fragments":["no"]},{"Key":"real effort","Fragments":["or"]},{"Key":"effort or","Fragments":["negative"]},{"Key":"or negative","Fragments":["effect"]},{"Key":"negative effect","Fragments":["to"]},{"Key":"effect to","Fragments":["the"]},{"Key":"I practically","Fragments":["don't"]},{"Key":"practically don't","Fragments":["have"]},{"Key":"have any","Fragments":["previous","includes"]},{"Key":"any previous","Fragments":["experience"]},{"Key":"previous experience","Fragments":["in"]},{"Key":"experience in","Fragments":["using","C++"]},{"Key":"in using","Fragments":["regex","reference"]},{"Key":"regex libraries,","Fragments":["but"]},{"Key":"libraries, but","Fragments":["maybe"]},{"Key":"but maybe","Fragments":["this"]},{"Key":"maybe this","Fragments":["could"]},{"Key":"good chance","Fragments":["to"]},{"Key":"chance to","Fragments":["get","learn.\u003c/li\u003e","play","pick"]},{"Key":"get some","Fragments":["practise","memory","comments","suggestions"]},{"Key":"some practise","Fragments":["for"]},{"Key":"practise for","Fragments":["the"]},{"Key":"What comes","Fragments":["to"]},{"Key":"comes to","Fragments":["the"]},{"Key":"the usage","Fragments":["of","of","there,"]},{"Key":"of return","Fragments":["variable,","variables"]},{"Key":"return variable,","Fragments":["for"]},{"Key":"variable, for","Fragments":["some"]},{"Key":"some reason","Fragments":["I","I"]},{"Key":"reason I","Fragments":["have","used","thought"]},{"Key":"a principle","Fragments":["of"]},{"Key":"principle of","Fragments":["preferring"]},{"Key":"of preferring","Fragments":["it"]},{"Key":"preferring it","Fragments":["instead"]},{"Key":"it instead","Fragments":["of","of"]},{"Key":"of returning","Fragments":["in"]},{"Key":"returning in","Fragments":["the"]},{"Key":"the middle","Fragments":["of","of","of","of","of","even"]},{"Key":"middle of","Fragments":["a","an","the","the","the"]},{"Key":"a function.","Fragments":["Honestly,","All"]},{"Key":"function. Honestly,","Fragments":["I"]},{"Key":"Honestly, I","Fragments":["don't"]},{"Key":"know which","Fragments":["way","best","cases","'to_rna'"]},{"Key":"which way","Fragments":["has"]},{"Key":"way has","Fragments":["more"]},{"Key":"has more","Fragments":["advantages.","of"]},{"Key":" Iostream","Fragments":["was"]},{"Key":"Iostream was","Fragments":["added"]},{"Key":"was added","Fragments":["just"]},{"Key":"added just","Fragments":["for"]},{"Key":"for debugging","Fragments":["purposes"]},{"Key":"debugging purposes","Fragments":["and"]},{"Key":"purposes and","Fragments":["I"]},{"Key":"remove it","Fragments":[":)","until"]},{"Key":"are correct,","Fragments":["there","removing"]},{"Key":"correct, there","Fragments":["is."]},{"Key":" Changes","Fragments":["from","from","from"]},{"Key":"Changes from","Fragments":["iteration","iteration","the"]},{"Key":"from iteration","Fragments":["1:","2:","2__","3__","5__"]},{"Key":"* changed","Fragments":["the","```matches_out.insert(matches_out.end(),"]},{"Key":"changed the","Fragments":["loop","`string","`map\u003cstring,","loop"]},{"Key":"input of","Fragments":["matches","```const"]},{"Key":"of matches","Fragments":["to"]},{"Key":"matches to","Fragments":["be","the"]},{"Key":"* move","Fragments":["the"]},{"Key":"from matches","Fragments":["to"]},{"Key":"constructor of","Fragments":["AC.","a"]},{"Key":" Question:","Fragments":["can"]},{"Key":"Question: can","Fragments":["I"]},{"Key":"based loop","Fragments":["syntax"]},{"Key":"loop syntax","Fragments":["in"]},{"Key":"syntax in","Fragments":["if"]},{"Key":"in if","Fragments":["statements,"]},{"Key":"if statements,","Fragments":["in"]},{"Key":"statements, in","Fragments":["the"]},{"Key":"can in","Fragments":["python."]},{"Key":"in python.","Fragments":["For"]},{"Key":"python. For","Fragments":["example:"]},{"Key":" vector\u003cint\u003e","Fragments":["x"]},{"Key":"vector\u003cint\u003e x","Fragments":["="]},{"Key":"x =","Fragments":["{0,"]},{"Key":"= {0,","Fragments":["1,"]},{"Key":"{0, 1,","Fragments":["2};"]},{"Key":"if (i","Fragments":[":"]},{"Key":"(i :","Fragments":["x){"]},{"Key":" cout","Fragments":["\u003c\u003c","\u003c\u003c","\u003c\u003c"]},{"Key":"cout \u003c\u003c","Fragments":["\"i","\"i","i"]},{"Key":"\u003c\u003c \"i","Fragments":["is","is"]},{"Key":"\"i is","Fragments":["in","not"]},{"Key":" EDIT:","Fragments":["I've"]},{"Key":"EDIT: I've","Fragments":["just"]},{"Key":"I've just","Fragments":["tried","realised"]},{"Key":"doesn't work.","Fragments":["Is"]},{"Key":"work. Is","Fragments":["there"]},{"Key":"way that's","Fragments":["nicely"]},{"Key":"that's nicely","Fragments":["readable?"]},{"Key":"nicely readable?","Fragments":["I"]},{"Key":"readable? I","Fragments":["know"]},{"Key":"know ```std::find```","Fragments":["can"]},{"Key":"```std::find``` can","Fragments":["be"]},{"Key":"The length","Fragments":["check"]},{"Key":"length check","Fragments":["was"]},{"Key":"check was","Fragments":["redundant,"]},{"Key":"was redundant,","Fragments":["so"]},{"Key":"redundant, so","Fragments":["it"]},{"Key":"changed ```matches_out.insert(matches_out.end(),","Fragments":["i);```"]},{"Key":"```matches_out.insert(matches_out.end(), i);```","Fragments":["to"]},{"Key":"i);``` to","Fragments":["```matches_out.push_back(i);```"]},{"Key":"to ```matches_out.push_back(i);```","Fragments":["as"]},{"Key":"```matches_out.push_back(i);``` as","Fragments":["it"]},{"Key":"Hi again.","Fragments":["Yesterday"]},{"Key":"again. Yesterday","Fragments":["I"]},{"Key":"Yesterday I","Fragments":["found"]},{"Key":"better way","Fragments":["to","to","than","to","to","to"]},{"Key":"those conditions","Fragments":["without"]},{"Key":"conditions without","Fragments":["using"]},{"Key":"using regex,","Fragments":["which"]},{"Key":"regex, which","Fragments":["maybe"]},{"Key":"which maybe","Fragments":["is"]},{"Key":"maybe is","Fragments":["too"]},{"Key":"is too","Fragments":["much","long"]},{"Key":"for those","Fragments":["simple"]},{"Key":"those simple","Fragments":["cases."]},{"Key":"simple cases.","Fragments":["It"]},{"Key":"cases. It","Fragments":["is"]},{"Key":"is using","Fragments":["the"]},{"Key":"the \u003calgorithm\u003e","Fragments":["library."]},{"Key":"in having","Fragments":["a"]},{"Key":"this example","Fragments":["from","I","though,"]},{"Key":"example from","Fragments":["the"]},{"Key":"the person","Fragments":["who"]},{"Key":"person who","Fragments":["told"]},{"Key":"who told","Fragments":["me"]},{"Key":"told me","Fragments":["about","how"]},{"Key":"think I'm","Fragments":["using"]},{"Key":"all what","Fragments":["STL"]},{"Key":"what STL","Fragments":["can"]},{"Key":"STL can","Fragments":["do:"]},{"Key":"can do:","Fragments":["the"]},{"Key":"do: the","Fragments":["`for`"]},{"Key":"`for` in","Fragments":["`shouting`"]},{"Key":"in `shouting`","Fragments":["and"]},{"Key":"`shouting` and","Fragments":["the"]},{"Key":"the stackoverflow-originated","Fragments":["`trim`"]},{"Key":"stackoverflow-originated `trim`","Fragments":["looks"]},{"Key":"`trim` looks","Fragments":["ugly."]},{"Key":"The message","Fragments":["was"]},{"Key":"message was","Fragments":["this:"]},{"Key":"was this:","Fragments":["It's"]},{"Key":"this: It's","Fragments":["nice"]},{"Key":"It's nice","Fragments":["how","to"]},{"Key":"nice how","Fragments":["you've"]},{"Key":"how you've","Fragments":["split","split"]},{"Key":"you've split","Fragments":["things","up"]},{"Key":"split things","Fragments":["up"]},{"Key":"things up","Fragments":["into","a"]},{"Key":"but `checkCaps`","Fragments":["and"]},{"Key":"`checkCaps` and","Fragments":["`checkEmpty`"]},{"Key":"and `checkEmpty`","Fragments":["could"]},{"Key":"`checkEmpty` could","Fragments":["also"]},{"Key":"also be","Fragments":["called"]},{"Key":"called `isAllCaps`","Fragments":["and"]},{"Key":"`isAllCaps` and","Fragments":["`isEmpty`."]},{"Key":"would express","Fragments":["more"]},{"Key":"express more","Fragments":["clearly"]},{"Key":"clearly that","Fragments":["they"]},{"Key":"that they","Fragments":["are","aren't","both","are","may","both"]},{"Key":"are purely","Fragments":["boolean"]},{"Key":"purely boolean","Fragments":["functions"]},{"Key":" PS.:","Fragments":["`using"]},{"Key":"PS.: `using","Fragments":["namespace"]},{"Key":"std` is","Fragments":["a","a"]},{"Key":"bit heavy","Fragments":["handed;","to"]},{"Key":"heavy handed;","Fragments":["especially"]},{"Key":"handed; especially","Fragments":["in"]},{"Key":"especially in","Fragments":["a"]},{"Key":" Take","Fragments":["a","a"]},{"Key":"Take a","Fragments":["more","look","look","look"]},{"Key":"more careful","Fragments":["look"]},{"Key":"careful look","Fragments":["at"]},{"Key":"the song","Fragments":["structure!","from","assembly","be","lyrics.","data","verse","verse","(0"]},{"Key":"song structure!","Fragments":["The"]},{"Key":"structure! The","Fragments":["size"]},{"Key":"The size","Fragments":["of"]},{"Key":"your program","Fragments":["can"]},{"Key":"program can","Fragments":["be"]},{"Key":"optimized quite","Fragments":["considerably."]},{"Key":"your explanation,","Fragments":["I"]},{"Key":"explanation, I","Fragments":["was"]},{"Key":"was still","Fragments":["thinking"]},{"Key":"still thinking","Fragments":["in"]},{"Key":"thinking in","Fragments":["C."]},{"Key":"C. That","Fragments":["should"]},{"Key":"That should","Fragments":["corrected"]},{"Key":"should corrected","Fragments":["now."]},{"Key":"probably use","Fragments":["boost::format"]},{"Key":"use boost::format","Fragments":["to"]},{"Key":"boost::format to","Fragments":["make"]},{"Key":"this faster,","Fragments":["but"]},{"Key":"faster, but","Fragments":["I"]},{"Key":"believe it's","Fragments":["necessary."]},{"Key":"was wondering","Fragments":["about"]},{"Key":"wondering about","Fragments":["performance"]},{"Key":"about performance","Fragments":["as","in","in"]},{"Key":"performance as","Fragments":["well,"]},{"Key":"well, so","Fragments":["I"]},{"Key":"benchmark three","Fragments":["different"]},{"Key":" std::transform(","Fragments":["start,","start,","word.begin(),"]},{"Key":"std::transform( start,","Fragments":["stop,","stop,"]},{"Key":"start, stop,","Fragments":["back_inserter(","back_inserter("]},{"Key":"stop, back_inserter(","Fragments":["word","word"]},{"Key":"back_inserter( word","Fragments":["),","),"]},{"Key":"word ),","Fragments":["::tolower","::tolower"]},{"Key":"), ::tolower","Fragments":[");",");"]},{"Key":" word.reserve(","Fragments":["std::distance("]},{"Key":"word.reserve( std::distance(","Fragments":["start,"]},{"Key":"std::distance( start,","Fragments":["stop"]},{"Key":"start, stop","Fragments":[")",");"]},{"Key":"stop )","Fragments":[");"]},{"Key":"std::string word(","Fragments":["start,"]},{"Key":"word( start,","Fragments":["stop"]},{"Key":"std::transform( word.begin(),","Fragments":["word.end(),"]},{"Key":"word.begin(), word.end(),","Fragments":["word.begin(),"]},{"Key":"word.begin(), ::tolower","Fragments":[");"]},{"Key":"The results","Fragments":["are","are"]},{"Key":"results are","Fragments":["kind","reconstructed"]},{"Key":"are kind","Fragments":["of"]},{"Key":"of weird,","Fragments":["however:"]},{"Key":" Character","Fragments":["count:","count:"]},{"Key":"Character count:","Fragments":["3973995","477238"]},{"Key":" Time:","Fragments":["329018","485027","306017","65212","41459","42443"]},{"Key":"Time: 329018","Fragments":["microseconds."]},{"Key":" Max","Fragments":["element:","element:","element:","element:","element:","element:"]},{"Key":"Max element:","Fragments":["\"the\"","\"the\"","\"the\"","s","s","s"]},{"Key":"element: \"the\"","Fragments":["42033","42033","42033"]},{"Key":"Time: 485027","Fragments":["microseconds."]},{"Key":"Time: 306017","Fragments":["microseconds."]},{"Key":" Ran","Fragments":["with"]},{"Key":"Ran with","Fragments":["MSVC"]},{"Key":"with MSVC","Fragments":["and"]},{"Key":"MSVC and","Fragments":["full"]},{"Key":"and full","Fragments":["optimization."]},{"Key":"full optimization.","Fragments":["[Full"]},{"Key":"optimization. [Full","Fragments":["code"]},{"Key":"[Full code","Fragments":["here](http://pastebin.com/pHDFSGBZ)."]},{"Key":"code here](http://pastebin.com/pHDFSGBZ).","Fragments":["\"INPUT.txt\""]},{"Key":"here](http://pastebin.com/pHDFSGBZ). \"INPUT.txt\"","Fragments":["was"]},{"Key":"\"INPUT.txt\" was","Fragments":["a"]},{"Key":"a random","Fragments":["sci-fi","number","name","order."]},{"Key":"random sci-fi","Fragments":["novel"]},{"Key":"sci-fi novel","Fragments":["I've"]},{"Key":"novel I've","Fragments":["had"]},{"Key":"I've had","Fragments":["lying"]},{"Key":"had lying","Fragments":["around,"]},{"Key":"lying around,","Fragments":["in"]},{"Key":"around, in","Fragments":["plain"]},{"Key":"in plain","Fragments":["text"]},{"Key":"plain text","Fragments":["format."]},{"Key":"text format.","Fragments":["4"]},{"Key":"format. 4","Fragments":["million"]},{"Key":"4 million","Fragments":["characters,"]},{"Key":"million characters,","Fragments":["average"]},{"Key":"characters, average","Fragments":["word"]},{"Key":"average word","Fragments":["length","length"]},{"Key":"word length","Fragments":["5.7.","of","is"]},{"Key":" Turns","Fragments":["out"]},{"Key":"Turns out","Fragments":["that"]},{"Key":"that for","Fragments":["such","the","every","this"]},{"Key":"for such","Fragments":["a"]},{"Key":"a text,","Fragments":["calling"]},{"Key":"text, calling","Fragments":["`reserve`"]},{"Key":"calling `reserve`","Fragments":["is"]},{"Key":"`reserve` is","Fragments":["detrimental"]},{"Key":"is detrimental","Fragments":["to"]},{"Key":"detrimental to","Fragments":["performance."]},{"Key":"to performance.","Fragments":["The"]},{"Key":"performance. The","Fragments":["default"]},{"Key":"default buffer","Fragments":["size"]},{"Key":"buffer size","Fragments":["for","changes.","matches"]},{"Key":"size for","Fragments":["a"]},{"Key":"a `std::string`","Fragments":["in"]},{"Key":"`std::string` in","Fragments":["Microsoft's"]},{"Key":"in Microsoft's","Fragments":["implementation"]},{"Key":"Microsoft's implementation","Fragments":["is"]},{"Key":"is 16.","Fragments":["A"]},{"Key":"16. A","Fragments":["string"]},{"Key":"A string","Fragments":["smaller"]},{"Key":"string smaller","Fragments":["than"]},{"Key":"smaller than","Fragments":["that"]},{"Key":"than that","Fragments":["won't","of","as","implies"]},{"Key":"that won't","Fragments":["cause"]},{"Key":"a heap","Fragments":["allocation"]},{"Key":"heap allocation","Fragments":["at"]},{"Key":"allocation at","Fragments":["all."]},{"Key":"at all.","Fragments":["With","Which","I"]},{"Key":"all. With","Fragments":["an"]},{"Key":"With an","Fragments":["average"]},{"Key":"an average","Fragments":["word"]},{"Key":"of less","Fragments":["than"]},{"Key":"less than","Fragments":["6,","comparison","the","1,","zero","zero,","zero).","zero,","zero,","zero,"]},{"Key":"than 6,","Fragments":["the"]},{"Key":"6, the","Fragments":["process"]},{"Key":"process is","Fragments":["almost"]},{"Key":"is almost","Fragments":["free"]},{"Key":"almost free","Fragments":["of"]},{"Key":"of heap","Fragments":["allocs."]},{"Key":"heap allocs.","Fragments":["Calling"]},{"Key":"allocs. Calling","Fragments":["`reserve`"]},{"Key":"Calling `reserve`","Fragments":["in"]},{"Key":"`reserve` in","Fragments":["this"]},{"Key":"case only","Fragments":["adds"]},{"Key":"only adds","Fragments":["some"]},{"Key":"adds some","Fragments":["unnecessary"]},{"Key":"some unnecessary","Fragments":["overhead."]},{"Key":"think GNU's","Fragments":["stdlib"]},{"Key":"GNU's stdlib","Fragments":["implementation"]},{"Key":"stdlib implementation","Fragments":["doesn't"]},{"Key":"implementation doesn't","Fragments":["use"]},{"Key":"doesn't use","Fragments":["this"]},{"Key":"this short","Fragments":["string"]},{"Key":"short string","Fragments":["optimization,"]},{"Key":"string optimization,","Fragments":["so"]},{"Key":"optimization, so","Fragments":["results"]},{"Key":"so results","Fragments":["may"]},{"Key":"results may","Fragments":["very"]},{"Key":"may very","Fragments":["significantly."]},{"Key":"very significantly.","Fragments":["Maybe"]},{"Key":"significantly. Maybe","Fragments":["one"]},{"Key":"Maybe one","Fragments":["of"]},{"Key":"of you","Fragments":["guys"]},{"Key":"you guys","Fragments":["could"]},{"Key":"guys could","Fragments":["run"]},{"Key":"could run","Fragments":["it"]},{"Key":"run it","Fragments":["through"]},{"Key":"it through","Fragments":["gcc?"]},{"Key":"Hi there!","Fragments":["Nice"]},{"Key":"there! Nice","Fragments":["piece"]},{"Key":"Nice piece","Fragments":["of"]},{"Key":" Peronally","Fragments":["I"]},{"Key":"Peronally I","Fragments":["would"]},{"Key":"added some","Fragments":["comments"]},{"Key":"some comments","Fragments":["explaining","on"]},{"Key":"comments explaining","Fragments":["in","why"]},{"Key":"explaining in","Fragments":["a"]},{"Key":"few words","Fragments":["what"]},{"Key":"words what","Fragments":["I"]},{"Key":"doing (this","Fragments":["code"]},{"Key":"(this code","Fragments":["is"]},{"Key":"very simple,","Fragments":["but"]},{"Key":"simple, but","Fragments":["I"]},{"Key":"would try","Fragments":["to"]},{"Key":"get used","Fragments":["to","to","to","to."]},{"Key":"to writing","Fragments":["comments"]},{"Key":"writing comments","Fragments":["for"]},{"Key":"comments for","Fragments":["each"]},{"Key":"used \u003calgorithm\u003e","Fragments":["library"]},{"Key":"\u003calgorithm\u003e library","Fragments":["to"]},{"Key":"remove those","Fragments":["chars"]},{"Key":"those chars","Fragments":["whch"]},{"Key":"chars whch","Fragments":["aren't"]},{"Key":"whch aren't","Fragments":["alphanumeric."]},{"Key":"aren't alphanumeric.","Fragments":["Personally"]},{"Key":"alphanumeric. Personally","Fragments":["I"]},{"Key":"Personally I","Fragments":["love","prefer"]},{"Key":"love usng","Fragments":["the"]},{"Key":"usng the","Fragments":["stl"]},{"Key":"the stl","Fragments":["libraries","methods"]},{"Key":"stl libraries","Fragments":["because"]},{"Key":"libraries because","Fragments":["they"]},{"Key":"make my","Fragments":["code"]},{"Key":"and robust","Fragments":["(and"]},{"Key":"robust (and","Fragments":["most"]},{"Key":"(and most","Fragments":["of"]},{"Key":"the times","Fragments":["faster"]},{"Key":"times faster","Fragments":["as"]},{"Key":"faster as","Fragments":["well!)."]},{"Key":" True,","Fragments":["I"]},{"Key":"constructor as","Fragments":["deleted","it","well"]},{"Key":"as deleted","Fragments":["(or"]},{"Key":"deleted (or","Fragments":["private)."]},{"Key":"(or private).","Fragments":["That"]},{"Key":"private). That","Fragments":["would"]},{"Key":"would resolve","Fragments":["the"]},{"Key":"resolve the","Fragments":["issue."]},{"Key":"But even","Fragments":["so,"]},{"Key":"even so,","Fragments":["since"]},{"Key":"so, since","Fragments":["all"]},{"Key":"all members","Fragments":["are"]},{"Key":"are static,","Fragments":["there's"]},{"Key":"static, there's","Fragments":["literally"]},{"Key":"there's literally","Fragments":["nothing"]},{"Key":"literally nothing","Fragments":["you"]},{"Key":"nothing you","Fragments":["could"]},{"Key":"an instance","Fragments":["of"]},{"Key":"instance of","Fragments":["`bob`.","`isWord()`","the"]},{"Key":" `Bob.h`","Fragments":["just"]},{"Key":"`Bob.h` just","Fragments":["defines"]},{"Key":"just defines","Fragments":["the"]},{"Key":"defines the","Fragments":["function"]},{"Key":"function prototypes","Fragments":["inside"]},{"Key":"prototypes inside","Fragments":["the"]},{"Key":"about implementing","Fragments":["`is_shout`,"]},{"Key":"implementing `is_shout`,","Fragments":["it"]},{"Key":"`is_shout`, it","Fragments":["seems"]},{"Key":"expressive to","Fragments":["search","use"]},{"Key":"for uppercase","Fragments":["characters"]},{"Key":"uppercase characters","Fragments":["separately"]},{"Key":"characters separately","Fragments":["using"]},{"Key":"separately using","Fragments":["`any_of`."]},{"Key":"using `any_of`.","Fragments":["However"]},{"Key":"`any_of`. However","Fragments":["that"]},{"Key":"However that","Fragments":["would"]},{"Key":"would mean","Fragments":["iterating","looping"]},{"Key":"mean iterating","Fragments":["over"]},{"Key":"question twice","Fragments":["(alright,"]},{"Key":"twice (alright,","Fragments":["it"]},{"Key":"(alright, it","Fragments":["doesn't"]},{"Key":"matter for","Fragments":["any"]},{"Key":"any imaginable","Fragments":["question"]},{"Key":"imaginable question","Fragments":["but"]},{"Key":"question but","Fragments":["it's"]},{"Key":"but it's","Fragments":["a","unacceptably","also","probably","worth","looking"]},{"Key":"of principle","Fragments":[";))."]},{"Key":"principle ;)).","Fragments":["And"]},{"Key":";)). And","Fragments":["I"]},{"Key":"way the","Fragments":["following","data","way","unit"]},{"Key":"the following","Fragments":["code","error:","parts:","way:","way:"]},{"Key":"following code","Fragments":["snippet"]},{"Key":"code snippet","Fragments":["reads:"]},{"Key":"if (not","Fragments":["found_upper"]},{"Key":"(not found_upper","Fragments":["and"]},{"Key":"found_upper and","Fragments":["isupper(c))"]},{"Key":"and isupper(c))","Fragments":["{"]},{"Key":" found_upper","Fragments":["="]},{"Key":"found_upper =","Fragments":["true;"]},{"Key":"It's just","Fragments":["so","a","a"]},{"Key":"just so","Fragments":["clear","I"]},{"Key":"so clear","Fragments":["what","and"]},{"Key":"this part","Fragments":["does"]},{"Key":"part does","Fragments":[":)."]},{"Key":"was trying","Fragments":["to","around","for"]},{"Key":"get this","Fragments":["running","to","to"]},{"Key":"this running","Fragments":["with"]},{"Key":"running with","Fragments":["`#include"]},{"Key":"with `#include","Fragments":["\u003clocale\u003e`"]},{"Key":"`#include \u003clocale\u003e`","Fragments":["but"]},{"Key":"\u003clocale\u003e` but","Fragments":["there"]},{"Key":"there were","Fragments":["problems","no"]},{"Key":"were problems","Fragments":["with"]},{"Key":"problems with","Fragments":["the","your","the"]},{"Key":"the template","Fragments":["substitution"]},{"Key":"template substitution","Fragments":["in"]},{"Key":"substitution in","Fragments":["`none_of`."]},{"Key":"in `none_of`.","Fragments":["That's"]},{"Key":"`none_of`. That's","Fragments":["why"]},{"Key":"I fell","Fragments":["back"]},{"Key":"fell back","Fragments":["to"]},{"Key":"the `cctype`","Fragments":["include."]},{"Key":"solution couldn't","Fragments":["be"]},{"Key":"couldn't be","Fragments":["simpler."]},{"Key":"Looks good.","Fragments":["I","I'm","You","Making"]},{"Key":"good. I","Fragments":["like","need","wonder"]},{"Key":"the struct","Fragments":["to"]},{"Key":"struct to","Fragments":["store"]},{"Key":"responses instead","Fragments":["of"]},{"Key":"just coding","Fragments":["them"]},{"Key":"coding them","Fragments":["in"]},{"Key":"the if-statement.","Fragments":["Using"]},{"Key":"if-statement. Using","Fragments":["regex"]},{"Key":"Using regex","Fragments":["is"]},{"Key":"a clever","Fragments":["way"]},{"Key":"clever way","Fragments":["to"]},{"Key":"strings. C++","Fragments":["has"]},{"Key":"pretty nice","Fragments":["string"]},{"Key":"nice string","Fragments":["functions"]},{"Key":"string functions","Fragments":["that","like","trying","that","that"]},{"Key":"used alternatively,","Fragments":["such"]},{"Key":"alternatively, such","Fragments":["as"]},{"Key":"as isupper(),","Fragments":["islower(),"]},{"Key":"isupper(), islower(),","Fragments":["isalpha()"]},{"Key":"islower(), isalpha()","Fragments":["to"]},{"Key":"isalpha() to","Fragments":["name"]},{"Key":"to name","Fragments":["a"]},{"Key":"name a","Fragments":["few."]},{"Key":"a few.","Fragments":["Sometimes"]},{"Key":"few. Sometimes","Fragments":["these"]},{"Key":"Sometimes these","Fragments":["may"]},{"Key":"these may","Fragments":["be"]},{"Key":"be easier","Fragments":["to","to"]},{"Key":"to use.","Fragments":["Check","Ok,"]},{"Key":"use. Check","Fragments":["out"]},{"Key":"Check out","Fragments":["cctype"]},{"Key":"out cctype","Fragments":["(ctype.h)."]},{"Key":" Trade","Fragments":["offs","Offs"]},{"Key":"Trade offs","Fragments":["with"]},{"Key":"offs with","Fragments":["this"]},{"Key":"was readability","Fragments":["vs."]},{"Key":"readability vs.","Fragments":["performance."]},{"Key":"vs. performance.","Fragments":["There"]},{"Key":"performance. There","Fragments":["is"]},{"Key":"is some","Fragments":["duplication","other","more","possibility","deterministic"]},{"Key":"some duplication","Fragments":["in"]},{"Key":"duplication in","Fragments":["checking"]},{"Key":"in checking","Fragments":["values"]},{"Key":"checking values","Fragments":["according"]},{"Key":"values according","Fragments":["to"]},{"Key":"according to","Fragments":["requirements,","the"]},{"Key":"to requirements,","Fragments":["but"]},{"Key":"requirements, but","Fragments":["the"]},{"Key":"the gain","Fragments":["in"]},{"Key":"gain in","Fragments":["readability","using"]},{"Key":"in readability","Fragments":["makes"]},{"Key":"readability makes","Fragments":["a"]},{"Key":"more maintainable","Fragments":["solution."]},{"Key":"The Boost","Fragments":["Framework"]},{"Key":"Boost Framework","Fragments":["really"]},{"Key":"Framework really","Fragments":["helped."]},{"Key":"really helped.","Fragments":["The"]},{"Key":"helped. The","Fragments":["most"]},{"Key":"The most","Fragments":["worsts"]},{"Key":"most worsts","Fragments":["tests"]},{"Key":"worsts tests","Fragments":["was"]},{"Key":"tests was","Fragments":["the"]},{"Key":"the questions","Fragments":["with"]},{"Key":"questions with","Fragments":["numbers.","regex"]},{"Key":" Had","Fragments":["I"]},{"Key":"Had I","Fragments":["thought"]},{"Key":"it before,","Fragments":["I"]},{"Key":"before, I","Fragments":["would"]},{"Key":"have changed","Fragments":["lines","recently.","and","how","my"]},{"Key":"changed lines","Fragments":["30-35"]},{"Key":"lines 30-35","Fragments":["from"]},{"Key":"if (output_map.count(c)","Fragments":["=="]},{"Key":"(output_map.count(c) ==","Fragments":["0){"]},{"Key":" output_map[c]","Fragments":["="]},{"Key":"output_map[c] =","Fragments":["1;"]},{"Key":"But instead","Fragments":["I"]},{"Key":"instead I","Fragments":["went"]},{"Key":"went for","Fragments":["the","a","the"]},{"Key":" Now","Fragments":["that","that","for","we've","for","you","the"]},{"Key":"Now that","Fragments":["I","I"]},{"Key":"I look","Fragments":["at"]},{"Key":"at it,","Fragments":["it"]},{"Key":"it, it","Fragments":["does","causes"]},{"Key":"does seem","Fragments":["like"]},{"Key":"like range","Fragments":["for"]},{"Key":"for would","Fragments":["be"]},{"Key":"have tried","Fragments":["to","to"]},{"Key":"design as","Fragments":["simple","before,"]},{"Key":"string indexing","Fragments":["with"]},{"Key":"indexing with","Fragments":[".back()."]},{"Key":"with .back().","Fragments":["however"]},{"Key":".back(). however","Fragments":["I"]},{"Key":"however I","Fragments":["do"]},{"Key":"not see","Fragments":["how"]},{"Key":" remove","Fragments":["the"]},{"Key":"the \"inline\"","Fragments":["function,"]},{"Key":"\"inline\" function,","Fragments":["which"]},{"Key":"function, which","Fragments":["is","has"]},{"Key":"is there","Fragments":["only","a","any","a","something","a","a","an"]},{"Key":"there only","Fragments":["for"]},{"Key":"only for","Fragments":["explicit","this","string"]},{"Key":"for explicit","Fragments":["conversion"]},{"Key":"conversion of","Fragments":["const","string"]},{"Key":"of const","Fragments":["char","referencing"]},{"Key":"char []","Fragments":["to"]},{"Key":"[] to","Fragments":["std::string.","use"]},{"Key":" Yes.","Fragments":["I"]},{"Key":"Yes. I","Fragments":["have"]},{"Key":"admit though,","Fragments":["that"]},{"Key":"though, that","Fragments":["I"]},{"Key":"this exercise,","Fragments":["as","I","but"]},{"Key":"exercise, as","Fragments":["well"]},{"Key":"the beer","Fragments":["song"]},{"Key":"beer song","Fragments":["and"]},{"Key":"song and","Fragments":["bob,","returning"]},{"Key":"and bob,","Fragments":["rather"]},{"Key":"bob, rather","Fragments":["boring."]},{"Key":" Ahh","Fragments":["I"]},{"Key":"Ahh I","Fragments":["see,"]},{"Key":"I see,","Fragments":["I"]},{"Key":"see, I","Fragments":["thought"]},{"Key":"thought that","Fragments":["you","using","allCaps","if"]},{"Key":"had left","Fragments":["it"]},{"Key":"left it","Fragments":["there","out."]},{"Key":"it there","Fragments":["from"]},{"Key":"there from","Fragments":["earlier"]},{"Key":"from earlier","Fragments":["trials."]},{"Key":"earlier trials.","Fragments":["I"]},{"Key":"trials. I","Fragments":["like"]},{"Key":"the explicit","Fragments":["call","iterator","formulas"]},{"Key":"explicit call","Fragments":["now"]},{"Key":"call now","Fragments":["that"]},{"Key":"is boost","Fragments":["allowed?"]},{"Key":"boost allowed?","Fragments":[":-)"]},{"Key":" just","Fragments":["curious:"]},{"Key":"just curious:","Fragments":["in"]},{"Key":"curious: in","Fragments":["terms"]},{"Key":"of performance,","Fragments":["what"]},{"Key":"performance, what","Fragments":["is"]},{"Key":"the overhead","Fragments":["introduced","seems","of","of"]},{"Key":"overhead introduced","Fragments":["by"]},{"Key":"introduced by","Fragments":["boost?"]},{"Key":"last but","Fragments":["not"]},{"Key":"not least:","Fragments":["is"]},{"Key":"least: is","Fragments":["this"]},{"Key":"any way","Fragments":["debuggable?"]},{"Key":"How to","Fragments":["submit"]},{"Key":"submit the","Fragments":["\"word_count.h\""]},{"Key":"the \"word_count.h\"","Fragments":["file??"]},{"Key":"a classical","Fragments":["one;"]},{"Key":"classical one;","Fragments":["however"]},{"Key":"one; however","Fragments":["the"]},{"Key":"however the","Fragments":["solution"]},{"Key":"is suggested","Fragments":["by"]},{"Key":"suggested by","Fragments":["the","@hipolito)"]},{"Key":"boost unit","Fragments":["tests"]},{"Key":"tests which","Fragments":["is","might"]},{"Key":"a pitty","Fragments":["in"]},{"Key":"pitty in","Fragments":["my"]},{"Key":"my oppion.","Fragments":["the"]},{"Key":"oppion. the","Fragments":["only"]},{"Key":"the only","Fragments":["thing","thing","way","way","thing"]},{"Key":"only thing","Fragments":["to","influencing","I","I","that"]},{"Key":"thing to","Fragments":["work","look","look","look","me.","a","notice"]},{"Key":"on is","Fragments":["the"]},{"Key":"the tokenizer,","Fragments":["which"]},{"Key":"tokenizer, which","Fragments":["is"]},{"Key":"is simple","Fragments":["in","enough","printf()"]},{"Key":"simple in","Fragments":["this"]},{"Key":" \u003cli\u003eNote\u003cul\u003e\u003cli\u003eDue","Fragments":["to"]},{"Key":"\u003cli\u003eNote\u003cul\u003e\u003cli\u003eDue to","Fragments":["my"]},{"Key":"my unfortold","Fragments":["level"]},{"Key":"unfortold level","Fragments":["of"]},{"Key":"level of","Fragments":["dumbassery,","optimization."]},{"Key":"of dumbassery,","Fragments":["I"]},{"Key":"dumbassery, I","Fragments":["was"]},{"Key":"the build","Fragments":["system","process."]},{"Key":"build system","Fragments":["wrong"]},{"Key":"system wrong","Fragments":["and"]},{"Key":"and wasn't","Fragments":["passing"]},{"Key":"wasn't passing","Fragments":["all"]},{"Key":"passing all","Fragments":["the","tests."]},{"Key":"the tests.","Fragments":["Now","It","I'm","You","I","As","It","Note"]},{"Key":"tests. Now","Fragments":["I"]},{"Key":"Now I","Fragments":["do,"]},{"Key":"do, with","Fragments":["flying"]},{"Key":"with flying","Fragments":["colors"]},{"Key":"flying colors","Fragments":["might"]},{"Key":"colors might","Fragments":["I"]},{"Key":"might I","Fragments":["add.\u003c/li\u003e\u003c/ul\u003e"]},{"Key":" \u003c/li\u003e\u003cli\u003eCompletely","Fragments":["redone"]},{"Key":" \u003cul\u003e\u003cli\u003eAfter","Fragments":["reviewing"]},{"Key":"\u003cul\u003e\u003cli\u003eAfter reviewing","Fragments":["others"]},{"Key":"reviewing others","Fragments":["I"]},{"Key":"others I","Fragments":["added"]},{"Key":"C++ 11","Fragments":["flare","only"]},{"Key":"11 flare","Fragments":["to"]},{"Key":"flare to","Fragments":["mine,"]},{"Key":"to mine,","Fragments":["thanks","and"]},{"Key":"mine, thanks","Fragments":["to"]},{"Key":"to everybody","Fragments":["for"]},{"Key":"everybody for","Fragments":["the"]},{"Key":"the inspiration","Fragments":["and"]},{"Key":"inspiration and","Fragments":["chance"]},{"Key":"and chance","Fragments":["to"]},{"Key":"the `string`","Fragments":["is"]},{"Key":"`string` is","Fragments":["analyzed","then"]},{"Key":"and converted","Fragments":["into"]},{"Key":"converted into","Fragments":["a"]},{"Key":"space if","Fragments":["it"]},{"Key":"not alpha-numeric","Fragments":["or"]},{"Key":"alpha-numeric or","Fragments":["to"]},{"Key":"or to","Fragments":["lowercase","calculate","test"]},{"Key":"lowercase if","Fragments":["it"]},{"Key":"\u003cli\u003eThe string","Fragments":["is"]},{"Key":"the separated","Fragments":["by"]},{"Key":"separated by","Fragments":["spaces"]},{"Key":"by spaces","Fragments":["into"]},{"Key":"spaces into","Fragments":["a"]},{"Key":" \u003cli\u003eEach","Fragments":["separated"]},{"Key":"\u003cli\u003eEach separated","Fragments":["`string`"]},{"Key":"separated `string`","Fragments":["is"]},{"Key":"emptyness and","Fragments":["inserted"]},{"Key":"inserted into","Fragments":["the","the","the","the","the","each"]},{"Key":"the `return`","Fragments":["`map`\u003c/li\u003e"]},{"Key":"a `map`","Fragments":["`return`"]},{"Key":"`map` `return`","Fragments":["value"]},{"Key":"`return` value","Fragments":["if"]},{"Key":"the `map`","Fragments":["is"]},{"Key":"`map` is","Fragments":["large"]},{"Key":"on `return`","Fragments":["but"]},{"Key":"`return` but","Fragments":["because"]},{"Key":"I iterate","Fragments":["4"]},{"Key":"iterate 4","Fragments":["times"]},{"Key":"4 times","Fragments":["\u003ci\u003ei.e."]},{"Key":"times \u003ci\u003ei.e.","Fragments":["`std::transform`,"]},{"Key":"\u003ci\u003ei.e. `std::transform`,","Fragments":["`boost::split`,"]},{"Key":"`std::transform`, `boost::split`,","Fragments":["`boost::trim`"]},{"Key":"`boost::split`, `boost::trim`","Fragments":["and"]},{"Key":"`boost::trim` and","Fragments":["`for(auto"]},{"Key":"and `for(auto","Fragments":["s"]},{"Key":"`for(auto s","Fragments":[":"]},{"Key":"s :","Fragments":["word_list)`\u003c/i\u003e"]},{"Key":": word_list)`\u003c/i\u003e","Fragments":["this"]},{"Key":"word_list)`\u003c/i\u003e this","Fragments":["program"]},{"Key":"program does","Fragments":["not"]},{"Key":"have optimal","Fragments":["performance.\u003c/ul\u003e"]},{"Key":"only made","Fragments":["the"]},{"Key":"the 'hey'","Fragments":["function"]},{"Key":"'hey' function","Fragments":["a","instead"]},{"Key":"a member","Fragments":["of"]},{"Key":"of class","Fragments":["'bob'.","'bob'.","bob","LackadaisicalTeenager."]},{"Key":"class 'bob'.","Fragments":["So,","Otherwise"]},{"Key":"'bob'. So,","Fragments":["rather"]},{"Key":"So, rather","Fragments":["than"]},{"Key":"than make","Fragments":["all"]},{"Key":"functions members","Fragments":["of"]},{"Key":"of 'bob'","Fragments":["I"]},{"Key":"'bob' I","Fragments":["made"]},{"Key":"I made","Fragments":["them","it","use","sure","`findSubString`","the"]},{"Key":"made them","Fragments":["regular"]},{"Key":"them regular","Fragments":["functions."]},{"Key":"have not","Fragments":["used","tried"]},{"Key":"not used","Fragments":["boost","to"]},{"Key":"used boost","Fragments":["on"]},{"Key":"boost on","Fragments":["the"]},{"Key":"the (few)","Fragments":["C++"]},{"Key":"(few) C++","Fragments":["projects"]},{"Key":"C++ projects","Fragments":["I"]},{"Key":"projects I","Fragments":["have"]},{"Key":"been apart","Fragments":["of,"]},{"Key":"apart of,","Fragments":["I"]},{"Key":"of, I","Fragments":["am"]},{"Key":"too familiar","Fragments":["with"]},{"Key":"with it.","Fragments":["The","I","The"]},{"Key":"it. The","Fragments":["only","return","member","easiest"]},{"Key":"only way","Fragments":["I","to","to"]},{"Key":"could get","Fragments":["the","the"]},{"Key":"pass was","Fragments":["to"]},{"Key":"make 'hey'","Fragments":["a"]},{"Key":"'hey' a","Fragments":["static"]},{"Key":"static member","Fragments":["function","function,","variables,","function.","function,","function."]},{"Key":"member function","Fragments":["of","size()","'nucleotide_counts'"]},{"Key":"function of","Fragments":["class","namespace","the","the"]},{"Key":"'bob'. Otherwise","Fragments":["I"]},{"Key":"Otherwise I","Fragments":["would","would"]},{"Key":"have made","Fragments":["a"]},{"Key":"class for","Fragments":["this","grains"]},{"Key":"Good catch","Fragments":["about","on"]},{"Key":"catch about","Fragments":["the"]},{"Key":"the crash","Fragments":["on"]},{"Key":"crash on","Fragments":["empty"]},{"Key":"empty string.","Fragments":["I","It's","So","However,","You're","A"]},{"Key":"string. I","Fragments":["was","did"]},{"Key":"a error","Fragments":["on"]},{"Key":"error on","Fragments":["last"]},{"Key":"on last","Fragments":["test"]},{"Key":"last test","Fragments":["case","case","and"]},{"Key":"I applied","Fragments":["your"]},{"Key":"applied your","Fragments":["recommendations"]},{"Key":"your recommendations","Fragments":["and"]},{"Key":"recommendations and","Fragments":["submitted"]},{"Key":"and submitted","Fragments":["a","one"]},{"Key":"submitted a","Fragments":["new","second","3rd"]},{"Key":"Hi @nora,","Fragments":["I"]},{"Key":"@nora, I","Fragments":["like"]},{"Key":"of `char*`","Fragments":["and"]},{"Key":"`char*` and","Fragments":["how"]},{"Key":"and how","Fragments":["clean","you","well","broadly"]},{"Key":"how clean","Fragments":["your","your"]},{"Key":"clean your","Fragments":["code","code"]},{"Key":"code is.","Fragments":["A","Great"]},{"Key":"is. A","Fragments":["couple"]},{"Key":"couple things","Fragments":["I","I"]},{"Key":"would nitpick","Fragments":["that"]},{"Key":"nitpick that","Fragments":["could"]},{"Key":"code even","Fragments":["better"]},{"Key":"even better","Fragments":["is"]},{"Key":"better is","Fragments":["changing"]},{"Key":"is changing","Fragments":["the"]},{"Key":"the `m`","Fragments":["assignment"]},{"Key":"`m` assignment","Fragments":["so"]},{"Key":"assignment so","Fragments":["that"]},{"Key":"that `algo.h`","Fragments":["doesn't"]},{"Key":"`algo.h` doesn't","Fragments":["need"]},{"Key":"included just","Fragments":["for"]},{"Key":"for `min()`","Fragments":["as"]},{"Key":"`min()` as","Fragments":["well"]},{"Key":"as shortening","Fragments":["or"]},{"Key":"shortening or","Fragments":["clarifying"]},{"Key":"or clarifying","Fragments":["the"]},{"Key":"clarifying the","Fragments":["`for`"]},{"Key":"`for` and","Fragments":["`if`"]},{"Key":"and `if`","Fragments":["statement."]},{"Key":"`if` statement.","Fragments":["In"]},{"Key":"statement. In","Fragments":["general,"]},{"Key":"general, try","Fragments":["to"]},{"Key":"of ways","Fragments":["to"]},{"Key":"shorten or","Fragments":["rearrange"]},{"Key":"or rearrange","Fragments":["your"]},{"Key":"rearrange your","Fragments":["code"]},{"Key":"code while","Fragments":["keeping"]},{"Key":"while keeping","Fragments":["the","the"]},{"Key":"same logic","Fragments":["and"]},{"Key":"logic and","Fragments":["increasing"]},{"Key":"and increasing","Fragments":["readability."]},{"Key":" __Too","Fragments":["Many"]},{"Key":"__Too Many","Fragments":["`#include`'s__"]},{"Key":"I'm submitting","Fragments":["an"]},{"Key":"submitting an","Fragments":["iteration"]},{"Key":"iteration that","Fragments":["doesn't"]},{"Key":"have pointless","Fragments":["`#include`'s"]},{"Key":"pointless `#include`'s","Fragments":["now"]},{"Key":"very unprofessional.","Fragments":["I"]},{"Key":"unprofessional. I","Fragments":["feel"]},{"Key":"feel tipsy","Fragments":["now."]},{"Key":" \u003col\u003e\u003cli\u003e","Fragments":["The","The"]},{"Key":"\u003col\u003e\u003cli\u003e The","Fragments":["`size`","`size`"]},{"Key":"The `size`","Fragments":["of","of"]},{"Key":"`size` of","Fragments":["the","the"]},{"Key":"the operation","Fragments":["is","is","to"]},{"Key":"operation is","Fragments":["determined","determined"]},{"Key":"is determined","Fragments":["by","by"]},{"Key":"determined by","Fragments":["the","the"]},{"Key":"the shortest","Fragments":["length.\u003c/li\u003e","string","length.\u003c/li\u003e","one"]},{"Key":"is compared","Fragments":["and","and"]},{"Key":"compared and","Fragments":["the","the"]},{"Key":"boolean result","Fragments":["(`0`","(`0`"]},{"Key":"result (`0`","Fragments":["or","or"]},{"Key":"(`0` or","Fragments":["`1`)","`1`)"]},{"Key":"or `1`)","Fragments":["is","is"]},{"Key":"`1`) is","Fragments":["added","added"]},{"Key":"is added","Fragments":["to","to"]},{"Key":"added to","Fragments":["the","the","get"]},{"Key":"\u003cli\u003eThe difference","Fragments":["is","is"]},{"Key":"difference is","Fragments":["returned.\u003c/li\u003e","returned.\u003c/li\u003e","so","that"]},{"Key":" Starting","Fragments":["variables"]},{"Key":"Starting variables","Fragments":["with"]},{"Key":"variables with","Fragments":["an","`[\u0026]`","names"]},{"Key":"rather unusual","Fragments":["convention,"]},{"Key":"unusual convention,","Fragments":["most"]},{"Key":"convention, most","Fragments":["people"]},{"Key":"most people","Fragments":["capitalize"]},{"Key":"people capitalize","Fragments":["user"]},{"Key":"capitalize user","Fragments":["defined"]},{"Key":"user defined","Fragments":["types"]},{"Key":"defined types","Fragments":["instead."]},{"Key":"are you","Fragments":["taking","using","using","catching"]},{"Key":"you taking","Fragments":["the"]},{"Key":"taking the","Fragments":["argument"]},{"Key":"argument to","Fragments":["function","```const"]},{"Key":"to function","Fragments":["\"hey\"","(for"]},{"Key":"function \"hey\"","Fragments":["by"]},{"Key":"\"hey\" by","Fragments":["value?"]},{"Key":"The parens","Fragments":["in"]},{"Key":"parens in","Fragments":["is_yell"]},{"Key":"in is_yell","Fragments":["are"]},{"Key":"is_yell are","Fragments":["superfluous"]},{"Key":"are superfluous","Fragments":["and"]},{"Key":"superfluous and","Fragments":["don't"]},{"Key":"and don't","Fragments":["really","run"]},{"Key":"really add","Fragments":["to"]},{"Key":"add to","Fragments":["clarity"]},{"Key":"to clarity","Fragments":["imo."]},{"Key":"You forgot","Fragments":["to","a"]},{"Key":"the proper","Fragments":["header","type","response."]},{"Key":"proper header","Fragments":["for"]},{"Key":"functions (isalnum","Fragments":["etc.)."]},{"Key":"You made","Fragments":["a","the"]},{"Key":"a great","Fragments":["leap","solution","fantastic","stack","optimization.","style."]},{"Key":"great leap","Fragments":["from"]},{"Key":"leap from","Fragments":["your"]},{"Key":"your first","Fragments":["commit,","version","question","iteration."]},{"Key":"first commit,","Fragments":["I"]},{"Key":"commit, I","Fragments":["like"]},{"Key":"the unnamed","Fragments":["namespace","namespace"]},{"Key":"unnamed namespace","Fragments":["for","instead"]},{"Key":"namespace \"bob\"","Fragments":["instead"]},{"Key":"\"bob\" instead","Fragments":["of"]},{"Key":"member function,","Fragments":["they","but","or"]},{"Key":"function, they","Fragments":["are"]},{"Key":"are syntactically","Fragments":["equivalent"]},{"Key":"syntactically equivalent","Fragments":["from"]},{"Key":"equivalent from","Fragments":["a"]},{"Key":"a callers","Fragments":["perspective."]},{"Key":" Prefixing","Fragments":["utility"]},{"Key":"Prefixing utility","Fragments":["functions"]},{"Key":"utility functions","Fragments":["with"]},{"Key":"the module","Fragments":["name"]},{"Key":"module name","Fragments":["or"]},{"Key":"name or","Fragments":["whatever"]},{"Key":"or whatever","Fragments":["is"]},{"Key":"whatever is","Fragments":["very"]},{"Key":"very C-like,","Fragments":["you"]},{"Key":"C-like, you","Fragments":["may"]},{"Key":"instead (beware","Fragments":["of"]},{"Key":"(beware of","Fragments":["using"]},{"Key":"class definition","Fragments":["to","in","from"]},{"Key":"source file","Fragments":["too","while","it"]},{"Key":"file too","Fragments":["and"]},{"Key":"too and","Fragments":["save"]},{"Key":"the forward","Fragments":["declarations."]},{"Key":"forward declarations.","Fragments":["I"]},{"Key":"declarations. I","Fragments":["suppose"]},{"Key":"suppose these","Fragments":["functions"]},{"Key":"functions aren't","Fragments":["meant"]},{"Key":"aren't meant","Fragments":["to"]},{"Key":"called from","Fragments":["the"]},{"Key":"the outside","Fragments":["world"]},{"Key":"outside world","Fragments":["anyway,"]},{"Key":"world anyway,","Fragments":["or"]},{"Key":"anyway, or","Fragments":["why"]},{"Key":"or why","Fragments":["would"]},{"Key":"why would","Fragments":["you"]},{"Key":"would you","Fragments":["move","pass"]},{"Key":"you move","Fragments":["them"]},{"Key":"move them","Fragments":["to"]},{"Key":"file while","Fragments":["keeping"]},{"Key":"definition in","Fragments":["the"]},{"Key":"Pass strings","Fragments":["as"]},{"Key":" Boost","Fragments":["is","tokenizer"]},{"Key":"Boost is","Fragments":["not"]},{"Key":"really necessary","Fragments":["for","to"]},{"Key":"necessary for","Fragments":["this"]},{"Key":"exercise and","Fragments":["declaring"]},{"Key":"and declaring","Fragments":["the","it"]},{"Key":"declaring the","Fragments":["classification"]},{"Key":"the classification","Fragments":["functions"]},{"Key":"functions outside","Fragments":["of"]},{"Key":"bob was","Fragments":["certainly"]},{"Key":"was certainly","Fragments":["a"]},{"Key":"certainly a","Fragments":["good"]},{"Key":"The using","Fragments":["std::string"]},{"Key":"using std::string","Fragments":["clause","instead"]},{"Key":"std::string clause","Fragments":["belongs"]},{"Key":"clause belongs","Fragments":["within"]},{"Key":"belongs within","Fragments":["namespace"]},{"Key":"within namespace","Fragments":["bounds,"]},{"Key":"namespace bounds,","Fragments":["especially"]},{"Key":"bounds, especially","Fragments":["since"]},{"Key":"since this","Fragments":["is","is","was","is"]},{"Key":"Your verses","Fragments":["function"]},{"Key":"verses function","Fragments":["could"]},{"Key":"function could","Fragments":["be","be","be","be"]},{"Key":"be simplified","Fragments":["to","if"]},{"Key":"simplified to","Fragments":["a"]},{"Key":"single execution","Fragments":["path."]},{"Key":"to omit","Fragments":["the"]},{"Key":"omit the","Fragments":["array"]},{"Key":"the array","Fragments":["size","elements,"]},{"Key":"array size","Fragments":["in"]},{"Key":"size in","Fragments":["theVerse's"]},{"Key":"in theVerse's","Fragments":["definition"]},{"Key":"theVerse's definition","Fragments":["to"]},{"Key":"avoid potential","Fragments":["size"]},{"Key":"potential size","Fragments":["mismatches"]},{"Key":"size mismatches","Fragments":["which"]},{"Key":"mismatches which","Fragments":["could"]},{"Key":"which could","Fragments":["happen","be","be"]},{"Key":"could happen","Fragments":["easily","that"]},{"Key":"happen easily","Fragments":["once"]},{"Key":"easily once","Fragments":["verses"]},{"Key":"once verses","Fragments":["are"]},{"Key":"verses are","Fragments":["changed."]},{"Key":"are changed.","Fragments":["You"]},{"Key":"changed. You","Fragments":["may"]},{"Key":"also want","Fragments":["to","to","to","to"]},{"Key":"more definite","Fragments":["name"]},{"Key":"definite name","Fragments":["for"]},{"Key":"Ah, ok.","Fragments":["Thank"]},{"Key":"ok. Thank","Fragments":["you."]},{"Key":"there an","Fragments":["```isUpper```","easier","option"]},{"Key":"an ```isUpper```","Fragments":["for","function"]},{"Key":"```isUpper``` for","Fragments":["strings?"]},{"Key":" Wonderful.","Fragments":[":)"]},{"Key":"Wonderful. :)","Fragments":["It"]},{"Key":"much shorter","Fragments":["than"]},{"Key":"shorter than","Fragments":["your","that"]},{"Key":"than your","Fragments":["first","sequential"]},{"Key":"first version","Fragments":["yet"]},{"Key":"version yet","Fragments":["even"]},{"Key":"yet even","Fragments":["more"]},{"Key":"even more","Fragments":["readable.","in"]},{"Key":"readable. Allow","Fragments":["me"]},{"Key":"Allow me","Fragments":["one"]},{"Key":"me one","Fragments":["last"]},{"Key":"one last","Fragments":["remark","revision"]},{"Key":"last remark","Fragments":["concerning"]},{"Key":"remark concerning","Fragments":["the"]},{"Key":"concerning the","Fragments":["_using"]},{"Key":"the _using","Fragments":["directives_"]},{"Key":"_using directives_","Fragments":["in"]},{"Key":"directives_ in","Fragments":["lines"]},{"Key":"lines 5-6:","Fragments":["using"]},{"Key":"5-6: using","Fragments":["```using"]},{"Key":"using ```using","Fragments":["some::namespace```"]},{"Key":"```using some::namespace```","Fragments":["causes"]},{"Key":"some::namespace``` causes","Fragments":["namespace"]},{"Key":"causes namespace","Fragments":["pollution;"]},{"Key":"namespace pollution;","Fragments":["see"]},{"Key":"pollution; see","Fragments":["http://stackoverflow.com/questions/6973161/c-using-keyword"]},{"Key":"see http://stackoverflow.com/questions/6973161/c-using-keyword","Fragments":["(first"]},{"Key":"http://stackoverflow.com/questions/6973161/c-using-keyword (first","Fragments":["answer)"]},{"Key":"(first answer)","Fragments":["or"]},{"Key":"answer) or","Fragments":["http://programmers.stackexchange.com/questions/236404/what-is-using-namespace-pollution"]},{"Key":"or http://programmers.stackexchange.com/questions/236404/what-is-using-namespace-pollution","Fragments":["."]},{"Key":"The STL","Fragments":["provides"]},{"Key":"STL provides","Fragments":["an"]},{"Key":"provides an","Fragments":["algorithm"]},{"Key":"algorithm for","Fragments":["the","this"]},{"Key":"line 16-18,","Fragments":["check"]},{"Key":"16-18, check","Fragments":["std::transform()"]},{"Key":"check at","Fragments":["line"]},{"Key":"line 42?","Fragments":["If"]},{"Key":"42? If","Fragments":["the"]},{"Key":"the iterator","Fragments":["points","contortions","version."]},{"Key":"iterator points","Fragments":["to"]},{"Key":"to end(),","Fragments":["insert()"]},{"Key":"end(), insert()","Fragments":["will"]},{"Key":"insert() will","Fragments":["do"]},{"Key":"Also, grade","Fragments":["can"]},{"Key":"grade can","Fragments":["be"]},{"Key":"simplified if","Fragments":["it"]},{"Key":"I hope","Fragments":["you"]},{"Key":"hope you","Fragments":["don't"]},{"Key":"don't write","Fragments":["production"]},{"Key":"write production","Fragments":["code"]},{"Key":"This passes","Fragments":["the"]},{"Key":"given tests","Fragments":["*most"]},{"Key":"tests *most","Fragments":["of","of"]},{"Key":"*most of","Fragments":["the","the"]},{"Key":"the time*.","Fragments":["But"]},{"Key":"time*. But","Fragments":["relying"]},{"Key":"But relying","Fragments":["on"]},{"Key":"relying on","Fragments":["a"]},{"Key":"random number","Fragments":["generator"]},{"Key":"number generator","Fragments":["to"]},{"Key":"generator to","Fragments":["give"]},{"Key":"you unique","Fragments":["values"]},{"Key":"unique values","Fragments":["is"]},{"Key":"values is","Fragments":["not"]},{"Key":"While this","Fragments":["passes","implementation"]},{"Key":"this passes","Fragments":["the","all"]},{"Key":"the time*,","Fragments":["using"]},{"Key":"time*, using","Fragments":["a"]},{"Key":"a RNG","Fragments":["is"]},{"Key":"RNG is","Fragments":["not"]},{"Key":"not safe","Fragments":["to"]},{"Key":"safe to","Fragments":["create"]},{"Key":"create unique","Fragments":["values."]},{"Key":"assume you","Fragments":["start"]},{"Key":"start unit_number","Fragments":["at"]},{"Key":"unit_number at","Fragments":["100"]},{"Key":"at 100","Fragments":["to"]},{"Key":"100 to","Fragments":["have"]},{"Key":"have always","Fragments":["three-digit","found"]},{"Key":"always three-digit","Fragments":["numbers"]},{"Key":"three-digit numbers","Fragments":["when"]},{"Key":"numbers when","Fragments":["passing"]},{"Key":"when passing","Fragments":["to","an"]},{"Key":"passing to","Fragments":["the"]},{"Key":"the ostream","Fragments":["buff."]},{"Key":"ostream buff.","Fragments":["You"]},{"Key":"buff. You","Fragments":["can"]},{"Key":"can achive","Fragments":["the"]},{"Key":"achive the","Fragments":["same"]},{"Key":"same by","Fragments":["using"]},{"Key":"using I/O","Fragments":["manipulators"]},{"Key":"I/O manipulators","Fragments":["std::setfill('0')"]},{"Key":"manipulators std::setfill('0')","Fragments":["and"]},{"Key":"std::setfill('0') and","Fragments":["std::setw(3)."]},{"Key":"first stack","Fragments":["overflow"]},{"Key":"stack overflow","Fragments":["post,","answer:"]},{"Key":"overflow post,","Fragments":["`using"]},{"Key":"post, `using","Fragments":["a::b;`"]},{"Key":"`using a::b;`","Fragments":["is"]},{"Key":"a::b;` is","Fragments":["the"]},{"Key":"do it,","Fragments":["since"]},{"Key":"it, since","Fragments":["that"]},{"Key":"since that","Fragments":["is","would","is"]},{"Key":"using declaration","Fragments":["and"]},{"Key":"declaration and","Fragments":["not"]},{"Key":"the declaritive.","Fragments":["The"]},{"Key":"declaritive. The","Fragments":["second"]},{"Key":"The second","Fragments":["one","loop"]},{"Key":"second one","Fragments":["says"]},{"Key":"one says","Fragments":["to"]},{"Key":"says to","Fragments":["possibly","submit"]},{"Key":"to possibly","Fragments":["scope"]},{"Key":"possibly scope","Fragments":["it"]},{"Key":"scope it","Fragments":["out,"]},{"Key":"it out,","Fragments":["so","it's"]},{"Key":"out, so","Fragments":["`map`"]},{"Key":"so `map`","Fragments":["should"]},{"Key":"`map` should","Fragments":["have"]},{"Key":"been left","Fragments":["off"]},{"Key":"left off","Fragments":["since"]},{"Key":"off since","Fragments":["it's"]},{"Key":"used twice,","Fragments":["but","I"]},{"Key":"twice, but","Fragments":["string"]},{"Key":"but string","Fragments":["is"]},{"Key":"much everywhere","Fragments":["so"]},{"Key":"everywhere so","Fragments":["it"]},{"Key":"My previous","Fragments":["approach"]},{"Key":"previous approach","Fragments":["utilized"]},{"Key":"approach utilized","Fragments":["global"]},{"Key":"utilized global","Fragments":["state"]},{"Key":"global state","Fragments":["with"]},{"Key":"state with","Fragments":["static"]},{"Key":"with static","Fragments":["lifetime."]},{"Key":"static lifetime.","Fragments":["I"]},{"Key":"lifetime. I","Fragments":["figure"]},{"Key":"it's better","Fragments":["to","to","to","to"]},{"Key":"a singleton,","Fragments":["that"]},{"Key":"singleton, that","Fragments":["can"]},{"Key":"can generate","Fragments":["characters/numbers"]},{"Key":"generate characters/numbers","Fragments":["and"]},{"Key":"characters/numbers and","Fragments":["have"]},{"Key":"a `randomName`","Fragments":["function"]},{"Key":"`randomName` function","Fragments":["that"]},{"Key":"that generates","Fragments":["a"]},{"Key":"generates a","Fragments":["random"]},{"Key":"random name","Fragments":["using","collisions,"]},{"Key":"name using","Fragments":["that"]},{"Key":"using that","Fragments":["singleton."]},{"Key":"In essence","Fragments":["this"]},{"Key":"essence this","Fragments":["is"]},{"Key":"same design","Fragments":["as"]},{"Key":"as before,","Fragments":["but"]},{"Key":"before, but","Fragments":["the","not","I'd"]},{"Key":"the robot","Fragments":["class","name.","is"]},{"Key":"robot class","Fragments":["does"]},{"Key":"class does","Fragments":["not"]},{"Key":"a `random`","Fragments":["name"]},{"Key":"`random` name","Fragments":["function"]},{"Key":"name function","Fragments":["anymore."]},{"Key":"This solution","Fragments":["is","uses"]},{"Key":"is longer","Fragments":["by","than"]},{"Key":"longer by","Fragments":["about"]},{"Key":"by about","Fragments":["10"]},{"Key":"about 10","Fragments":["lines,","minutes"]},{"Key":"10 lines,","Fragments":["but"]},{"Key":"lines, but","Fragments":["feels"]},{"Key":"but feels","Fragments":["better,","cleaner."]},{"Key":"feels better,","Fragments":["since"]},{"Key":"better, since","Fragments":["the"]},{"Key":"same NameGenerator","Fragments":["can"]},{"Key":"NameGenerator can","Fragments":["be"]},{"Key":"be reused","Fragments":["in"]},{"Key":"reused in","Fragments":["different"]},{"Key":"in different","Fragments":["parts","methods,..."]},{"Key":"different parts","Fragments":["of"]},{"Key":"parts of","Fragments":["an","the","that"]},{"Key":"an application","Fragments":["(after"]},{"Key":"application (after","Fragments":["renaming)."]},{"Key":"anyone has","Fragments":["comments"]},{"Key":"has comments","Fragments":["about"]},{"Key":"comments about","Fragments":["the","the"]},{"Key":"the OO","Fragments":["aspects"]},{"Key":"OO aspects","Fragments":["of"]},{"Key":"solution please","Fragments":["write."]},{"Key":"please write.","Fragments":["I"]},{"Key":"write. I","Fragments":["am"]},{"Key":"am always","Fragments":["questioning"]},{"Key":"always questioning","Fragments":["my"]},{"Key":"questioning my","Fragments":["understanding"]},{"Key":"my understanding","Fragments":["of"]},{"Key":"understanding of","Fragments":["OO","exactly"]},{"Key":"of OO","Fragments":["and"]},{"Key":"OO and","Fragments":["trying"]},{"Key":"and trying","Fragments":["to","to","to","to"]},{"Key":"no benefit.","Fragments":["Nothing"]},{"Key":"benefit. Nothing","Fragments":["gained"]},{"Key":"Nothing gained","Fragments":["or"]},{"Key":"gained or","Fragments":["lost"]},{"Key":"or lost","Fragments":["by"]},{"Key":"lost by","Fragments":["trying"]},{"Key":"by trying","Fragments":["to"]},{"Key":"as ref.","Fragments":["It's"]},{"Key":"ref. It's","Fragments":["just"]},{"Key":"a benign","Fragments":["habit."]},{"Key":"thought this","Fragments":["was"]},{"Key":"simple case","Fragments":["of","before","before"]},{"Key":"throwing values","Fragments":["in"]},{"Key":"values in","Fragments":["a","the"]},{"Key":"and returning","Fragments":["them,","the"]},{"Key":"returning them,","Fragments":["but"]},{"Key":"them, but","Fragments":["I"]},{"Key":"up learning","Fragments":["a"]},{"Key":"learning a","Fragments":["lot"]},{"Key":"things about","Fragments":["const-ness"]},{"Key":"about const-ness","Fragments":["and"]},{"Key":"const-ness and","Fragments":["the"]},{"Key":"the `at`","Fragments":["operator."]},{"Key":"the functional","Fragments":["programming"]},{"Key":"functional programming","Fragments":["features","feel"]},{"Key":"programming features","Fragments":["of"]},{"Key":"features of","Fragments":["C++.","the"]},{"Key":"solution uses","Fragments":["std::mismatch()"]},{"Key":"uses std::mismatch()","Fragments":["algorithm"]},{"Key":"std::mismatch() algorithm","Fragments":["and"]},{"Key":"and std::string","Fragments":["iterators;"]},{"Key":"std::string iterators;","Fragments":["the"]},{"Key":"iterators; the","Fragments":["algorithm"]},{"Key":"is straight","Fragments":["forward:"]},{"Key":"straight forward:","Fragments":["every"]},{"Key":"forward: every","Fragments":["time"]},{"Key":"time a","Fragments":["mismatch","count"]},{"Key":"a mismatch","Fragments":["is"]},{"Key":"mismatch is","Fragments":["found,"]},{"Key":"is found,","Fragments":["update"]},{"Key":"found, update","Fragments":["the"]},{"Key":"update the","Fragments":["iterators,","other"]},{"Key":"the iterators,","Fragments":["increase"]},{"Key":"iterators, increase","Fragments":["the"]},{"Key":" distance","Fragments":["and"]},{"Key":"distance and","Fragments":["loop"]},{"Key":"loop once","Fragments":["more."]},{"Key":"don't particularly","Fragments":["like"]},{"Key":"particularly like","Fragments":["this"]},{"Key":"like this","Fragments":["solution,","might","exercise","is","solution","as","effort"]},{"Key":"this solution,","Fragments":["because"]},{"Key":"solution, because","Fragments":["of"]},{"Key":"of dependency","Fragments":["on"]},{"Key":"on Boost","Fragments":["and"]},{"Key":"Boost and","Fragments":["having"]},{"Key":"and having","Fragments":["to"]},{"Key":"use `regex_replace`","Fragments":["in"]},{"Key":"`regex_replace` in","Fragments":["each"]},{"Key":"each verse,","Fragments":["and"]},{"Key":"verse, and","Fragments":["twice"]},{"Key":"and twice","Fragments":["at"]},{"Key":"twice at","Fragments":["that."]},{"Key":"at that.","Fragments":["But"]},{"Key":"that. But","Fragments":["this","after"]},{"Key":"best I","Fragments":["could"]},{"Key":"could come","Fragments":["up"]},{"Key":"with at","Fragments":["the"]},{"Key":"you attacked","Fragments":["this"]},{"Key":"attacked this","Fragments":["problem."]},{"Key":"this problem.","Fragments":["One","In","In"]},{"Key":"would help","Fragments":["however","encapsulate","readability","in","this."]},{"Key":"help however","Fragments":["is"]},{"Key":"and still","Fragments":["retain"]},{"Key":"still retain","Fragments":["the"]},{"Key":"retain the","Fragments":["same"]},{"Key":"same logic.","Fragments":["Think"]},{"Key":"logic. Think","Fragments":["about"]},{"Key":"Think about","Fragments":["how","how"]},{"Key":"the minimum","Fragments":["while","input"]},{"Key":"minimum while","Fragments":["assigning"]},{"Key":"while assigning","Fragments":["to","to"]},{"Key":"assigning to","Fragments":["`l`.","isNothing."]},{"Key":"to `l`.","Fragments":["I"]},{"Key":"`l`. I","Fragments":["think"]},{"Key":"best solution","Fragments":["may"]},{"Key":"solution may","Fragments":["involve","look"]},{"Key":"may involve","Fragments":["a"]},{"Key":"involve a","Fragments":["`std`"]},{"Key":"a `std`","Fragments":["algorithm"]},{"Key":"`std` algorithm","Fragments":["or"]},{"Key":"algorithm or","Fragments":["ternary"]},{"Key":"or ternary","Fragments":["operator."]},{"Key":"ternary operator.","Fragments":["What"]},{"Key":"operator. What","Fragments":["do"]},{"Key":"solution specifically","Fragments":["how"]},{"Key":"specifically how","Fragments":["short"]},{"Key":"and concise","Fragments":["this","manner","manner","manner"]},{"Key":"concise this","Fragments":["code"]},{"Key":" Shall","Fragments":["we"]},{"Key":"Shall we","Fragments":["make"]},{"Key":"we make","Fragments":["it"]},{"Key":" \u003cli\u003eIn","Fragments":["your"]},{"Key":"\u003cli\u003eIn your","Fragments":["code"]},{"Key":"because at","Fragments":["all"]},{"Key":"at all","Fragments":["times","costs.\u003c/li\u003e.\u003c/ul\u003e","costs.\u003c/li\u003e.\u003c/ul\u003e","costs.\u003c/li\u003e.\u003c/ul\u003e"]},{"Key":"all times","Fragments":["`i"]},{"Key":"times `i","Fragments":["="]},{"Key":"`i =","Fragments":["j`"]},{"Key":"= j`","Fragments":["one"]},{"Key":"j` one","Fragments":["of"]},{"Key":"use say","Fragments":["just"]},{"Key":"say just","Fragments":["`i`"]},{"Key":"just `i`","Fragments":["for"]},{"Key":"`i` for","Fragments":["all"]},{"Key":"\u003cli\u003eIf you","Fragments":["find"]},{"Key":"shortest string","Fragments":["and"]},{"Key":"and assign","Fragments":["the"]},{"Key":"assign the","Fragments":["value"]},{"Key":"the value","Fragments":["of","of","of","in","will","in","in"]},{"Key":"its length","Fragments":["to","returned"]},{"Key":"length to","Fragments":["a","0."]},{"Key":"a variable","Fragments":["before","that"]},{"Key":"variable before","Fragments":["hand"]},{"Key":"before hand","Fragments":["this"]},{"Key":"hand this","Fragments":["would"]},{"Key":"would stop","Fragments":["the"]},{"Key":"stop the","Fragments":["need"]},{"Key":"compare against","Fragments":["both"]},{"Key":"against both","Fragments":["size"]},{"Key":"both size","Fragments":["values"]},{"Key":"size values","Fragments":["with"]},{"Key":"values with","Fragments":["two","```true/false```","your"]},{"Key":"with two","Fragments":["incrementers"]},{"Key":"two incrementers","Fragments":["inside"]},{"Key":"incrementers inside","Fragments":["the"]},{"Key":"believe both","Fragments":["of"]},{"Key":"both of","Fragments":["these","which","them","these"]},{"Key":"these would","Fragments":["drastically"]},{"Key":"would drastically","Fragments":["improve"]},{"Key":"drastically improve","Fragments":["readability."]},{"Key":"like you","Fragments":["already","recommmended.","could","should","could","have.","were"]},{"Key":"you already","Fragments":["did","used","wrote,"]},{"Key":"already did","Fragments":["it"]},{"Key":"did it","Fragments":["while","as","without","to"]},{"Key":"it while","Fragments":["I"]},{"Key":"while I","Fragments":["was"]},{"Key":"was typing","Fragments":["this."]},{"Key":"typing this.","Fragments":["Nice!"]},{"Key":"new iteration","Fragments":["a","accordingly.","when","based","though","form,"]},{"Key":"iteration a","Fragments":["lot!"]},{"Key":"a lot!","Fragments":["I"]},{"Key":"lot! I","Fragments":["hate"]},{"Key":"I hate","Fragments":["to"]},{"Key":"hate to","Fragments":["be"]},{"Key":"be so","Fragments":["picky","obvious"]},{"Key":"so picky","Fragments":["but"]},{"Key":"picky but","Fragments":["this"]},{"Key":"called nitpicking","Fragments":["so..."]},{"Key":" \u003cul\u003e\u003cli\u003econsider","Fragments":["changing"]},{"Key":" `int","Fragments":["l","l"]},{"Key":"`int l","Fragments":["=","="]},{"Key":"l =","Fragments":["0;","s2.length();`","s1.length()"]},{"Key":" s1.length()","Fragments":["\u003c"]},{"Key":"s1.length() \u003c","Fragments":["s2.length()?","s2.length()?"]},{"Key":"\u003c s2.length()?","Fragments":["l=s1.length()","s1.length()"]},{"Key":"s2.length()? l=s1.length()","Fragments":[":"]},{"Key":"l=s1.length() :","Fragments":["l"]},{"Key":": l","Fragments":["="]},{"Key":"= s1.length()","Fragments":["\u003c"]},{"Key":"s2.length()? s1.length()","Fragments":[":"]},{"Key":"s1.length() :","Fragments":["s2.length();`"]},{"Key":"Use `isspace`","Fragments":["without"]},{"Key":"`isspace` without","Fragments":["the"]},{"Key":"need of","Fragments":["a"]},{"Key":"a lambda","Fragments":["construct.","function","function","function","is","function"]},{"Key":"lambda construct.","Fragments":["Makes"]},{"Key":"construct. Makes","Fragments":["the"]},{"Key":"Makes the","Fragments":["code"]},{"Key":"I treid","Fragments":["a"]},{"Key":"treid a","Fragments":["namespace"]},{"Key":"namespace and","Fragments":["recieved","removed","avoid","made"]},{"Key":"and recieved","Fragments":["boost"]},{"Key":"recieved boost","Fragments":["errors."]},{"Key":"boost errors.","Fragments":["I"]},{"Key":"errors. I","Fragments":["assumed"]},{"Key":"assumed the","Fragments":["boost"]},{"Key":"boost test","Fragments":["suite"]},{"Key":"suite required","Fragments":["a"]},{"Key":"required a","Fragments":["class,"]},{"Key":"class, so","Fragments":["I"]},{"Key":"I reverted","Fragments":["back","to"]},{"Key":"reverted back","Fragments":["to"]},{"Key":"to one.","Fragments":["I"]},{"Key":"one. I","Fragments":["have","know","didn't"]},{"Key":"have since","Fragments":["made"]},{"Key":"since made","Fragments":["a"]},{"Key":"namespace work,","Fragments":["I"]},{"Key":"work, I","Fragments":["should"]},{"Key":"have dug","Fragments":["deeper."]},{"Key":"I can,","Fragments":["I"]},{"Key":"can, I","Fragments":["try"]},{"Key":"separate implementation","Fragments":["from"]},{"Key":"implementation from","Fragments":["declaration."]},{"Key":"from declaration.","Fragments":["With"]},{"Key":"declaration. With","Fragments":["a"]},{"Key":"a task","Fragments":["this"]},{"Key":"task this","Fragments":["simple"]},{"Key":"simple it","Fragments":["is"]},{"Key":"is probablty","Fragments":["overkill."]},{"Key":"const is","Fragments":["my"]},{"Key":"my bane","Fragments":["in"]},{"Key":"bane in","Fragments":["C++."]},{"Key":"What platform","Fragments":["did"]},{"Key":"platform did","Fragments":["you"]},{"Key":"run this","Fragments":["on?","with"]},{"Key":"this on?","Fragments":["There"]},{"Key":"on? There","Fragments":["is"]},{"Key":"no guarantee","Fragments":["that","in"]},{"Key":"that long","Fragments":["is"]},{"Key":"long is","Fragments":["large"]},{"Key":"large enough,","Fragments":["and"]},{"Key":"enough, and","Fragments":["on"]},{"Key":"and on","Fragments":["my","a"]},{"Key":"my system","Fragments":["(gcc,"]},{"Key":"system (gcc,","Fragments":["x86_64)"]},{"Key":"(gcc, x86_64)","Fragments":["this"]},{"Key":"x86_64) this","Fragments":["won't"]},{"Key":"this won't","Fragments":["work."]},{"Key":"Thanks Max!","Fragments":["Both"]},{"Key":"Max! Both","Fragments":["suggestions"]},{"Key":"Both suggestions","Fragments":["have"]},{"Key":"suggestions have","Fragments":["been"]},{"Key":"- I'm","Fragments":["not"]},{"Key":"remove all","Fragments":["the"]},{"Key":"punctuation and","Fragments":["convert","lowering"]},{"Key":"and convert","Fragments":["to"]},{"Key":"to lower","Fragments":["case","case","case.","case."]},{"Key":"case initially","Fragments":["possibly"]},{"Key":"initially possibly","Fragments":["simplifying"]},{"Key":"possibly simplifying","Fragments":["the"]},{"Key":"simplifying the","Fragments":["code"]},{"Key":"code flow","Fragments":["but"]},{"Key":"flow but","Fragments":["doing"]},{"Key":"but doing","Fragments":["possibly","the"]},{"Key":"doing possibly","Fragments":["slightly"]},{"Key":"possibly slightly","Fragments":["more"]},{"Key":"more work","Fragments":["algorithmically."]},{"Key":"work algorithmically.","Fragments":["Or"]},{"Key":"algorithmically. Or","Fragments":["is"]},{"Key":"Or is","Fragments":["it"]},{"Key":"it better","Fragments":["to","to","would"]},{"Key":"to operate","Fragments":["over"]},{"Key":"operate over","Fragments":["individual"]},{"Key":"over individual","Fragments":["words"]},{"Key":"individual words","Fragments":["like"]},{"Key":"words like","Fragments":["I","\"she's\"","\"she's\""]},{"Key":"am currently","Fragments":["doing?"]},{"Key":"- It","Fragments":["feels","looks"]},{"Key":"the insertion/increment","Fragments":["of"]},{"Key":"insertion/increment of","Fragments":["the"]},{"Key":"map could","Fragments":["be"]},{"Key":"done more","Fragments":["elegantly"]},{"Key":"more elegantly","Fragments":["but"]},{"Key":"elegantly but","Fragments":["I'm"]},{"Key":"I'm uncertain","Fragments":["how"]},{"Key":"uncertain how","Fragments":["to"]},{"Key":"you say","Fragments":["\"storing"]},{"Key":"say \"storing","Fragments":["[std::regex]"]},{"Key":"\"storing [std::regex]","Fragments":["as"]},{"Key":"[std::regex] as","Fragments":["static"]},{"Key":"local variables\",","Fragments":["is"]},{"Key":"variables\", is","Fragments":["it"]},{"Key":"it enough","Fragments":["to"]},{"Key":"do declare","Fragments":["the"]},{"Key":"declare the","Fragments":["function","bools","input"]},{"Key":"function as","Fragments":["static","static","static,","a","possible."]},{"Key":"static ?","Fragments":["(like"]},{"Key":"? (like","Fragments":["iteration"]},{"Key":"(like iteration","Fragments":["3)"]},{"Key":" Or","Fragments":["should"]},{"Key":"Or should","Fragments":["I"]},{"Key":"I declare","Fragments":[":","```lower_str```","`string"]},{"Key":"static std::regex","Fragments":["myRegex(\"…\");","reg(\"^"]},{"Key":"of regex,","Fragments":["and"]},{"Key":"regex, and","Fragments":["then"]},{"Key":"then use","Fragments":["it"]},{"Key":"a (possibly","Fragments":["static)"]},{"Key":"(possibly static)","Fragments":["function"]},{"Key":"static) function","Fragments":["?"]},{"Key":"of matching","Fragments":["the"]},{"Key":"matching the","Fragments":["responses"]},{"Key":"responses as","Fragments":["laid"]},{"Key":"as laid","Fragments":["out"]},{"Key":"laid out","Fragments":["in"]},{"Key":"out in","Fragments":["the","the","my"]},{"Key":"problem this","Fragments":["is"]},{"Key":"is better.","Fragments":["I","Both"]},{"Key":"better. I","Fragments":["realize"]},{"Key":"I realize","Fragments":["though","this"]},{"Key":"realize though","Fragments":["that"]},{"Key":"that my","Fragments":["last","yell-detection"]},{"Key":"my last","Fragments":["comment"]},{"Key":"last comment","Fragments":["was"]},{"Key":"comment was","Fragments":["misleading."]},{"Key":"was misleading.","Fragments":["An"]},{"Key":"misleading. An","Fragments":["issue"]},{"Key":"issue I","Fragments":["was","found"]},{"Key":"going after,","Fragments":["which"]},{"Key":"after, which","Fragments":["is"]},{"Key":"still present","Fragments":["here,"]},{"Key":"present here,","Fragments":["is"]},{"Key":"here, is","Fragments":["that"]},{"Key":"that `isGibberish`","Fragments":["seems"]},{"Key":"`isGibberish` seems","Fragments":["to"]},{"Key":"perform a","Fragments":["different"]},{"Key":"different job","Fragments":["than"]},{"Key":"job than","Fragments":["advertised:"]},{"Key":"than advertised:","Fragments":["really"]},{"Key":"advertised: really","Fragments":["it's"]},{"Key":"really it's","Fragments":["checking"]},{"Key":"it's checking","Fragments":["if","empty"]},{"Key":"phrase is","Fragments":["not","all","capitalized."]},{"Key":"yell (as","Fragments":["in,"]},{"Key":"(as in,","Fragments":["you've"]},{"Key":"in, you've","Fragments":["defined"]},{"Key":"you've defined","Fragments":["\"gibberish\""]},{"Key":"defined \"gibberish\"","Fragments":["here"]},{"Key":"\"gibberish\" here","Fragments":["as"]},{"Key":"as anything","Fragments":["that"]},{"Key":"a yell).","Fragments":["Also,","Then"]},{"Key":"yell). Also,","Fragments":["\"I"]},{"Key":"Also, \"I","Fragments":["GREATLY"]},{"Key":"\"I GREATLY","Fragments":["ENJOY"]},{"Key":"GREATLY ENJOY","Fragments":["COOKIES\""]},{"Key":"ENJOY COOKIES\"","Fragments":["would"]},{"Key":"COOKIES\" would","Fragments":["be"]},{"Key":"yell, but","Fragments":["it"]},{"Key":"test would","Fragments":["fail."]},{"Key":" @florida","Fragments":["is"]},{"Key":"@florida is","Fragments":["right."]},{"Key":" Re","Fragments":["read"]},{"Key":"Re read","Fragments":["the"]},{"Key":"the read-me","Fragments":["and"]},{"Key":"read-me and","Fragments":["try"]},{"Key":"a unrelated","Fragments":["note"]},{"Key":"unrelated note","Fragments":["to"]},{"Key":"note to","Fragments":["many"]},{"Key":"to many","Fragments":["\"if\"s,","others."]},{"Key":"many \"if\"s,","Fragments":["use"]},{"Key":"\"if\"s, use","Fragments":["a"]},{"Key":"statement instead","Fragments":["of"]},{"Key":"that many","Fragments":["\"if\"s."]},{"Key":"lambda function","Fragments":["to","like:","as","does","rather"]},{"Key":"reduce looping","Fragments":["through"]},{"Key":"input phrase","Fragments":["by"]},{"Key":"phrase by","Fragments":["removing"]},{"Key":"removing punctuation","Fragments":["and"]},{"Key":"and lowering","Fragments":["the"]},{"Key":"lowering the","Fragments":["case"]},{"Key":"case all","Fragments":["in"]},{"Key":"also streamlined","Fragments":["entering"]},{"Key":"streamlined entering","Fragments":["into"]},{"Key":"your input","Fragments":["file,"]},{"Key":"input file,","Fragments":["but"]},{"Key":"ran it","Fragments":["on","locally,"]},{"Key":"it on","Fragments":["a","my","an","empty"]},{"Key":"a passwordlist","Fragments":["that"]},{"Key":"passwordlist that","Fragments":["came"]},{"Key":"that came","Fragments":["with","to"]},{"Key":"came with","Fragments":["cracklib:"]},{"Key":"$ g++","Fragments":["-O3"]},{"Key":"g++ -O3","Fragments":["-std=c++11"]},{"Key":"-O3 -std=c++11","Fragments":["test.cpp"]},{"Key":"-std=c++11 test.cpp","Fragments":["-o"]},{"Key":"test.cpp -o","Fragments":["test"]},{"Key":"$ ln","Fragments":["-s"]},{"Key":"ln -s","Fragments":["/usr/share/dict/cracklib-small"]},{"Key":"-s /usr/share/dict/cracklib-small","Fragments":["INPUT.txt"]},{"Key":"Time: 65212","Fragments":["microseconds."]},{"Key":"element: s","Fragments":["3635","3635","3635"]},{"Key":"Time: 41459","Fragments":["microseconds."]},{"Key":"Time: 42443","Fragments":["microseconds."]},{"Key":"The result","Fragments":["is"]},{"Key":"result is","Fragments":["what","correct.","the"]},{"Key":"is what","Fragments":["I","is","I","I"]},{"Key":"I expected.","Fragments":["I'm"]},{"Key":"expected. I'm","Fragments":["curious"]},{"Key":"I'm curious","Fragments":["though","if","about","for"]},{"Key":"curious though","Fragments":["why"]},{"Key":"though why","Fragments":["for"]},{"Key":"why for","Fragments":["you"]},{"Key":"the distance()","Fragments":["version"]},{"Key":"distance() version","Fragments":["is"]},{"Key":"is slower","Fragments":["than","than"]},{"Key":"then overwriting","Fragments":["it"]},{"Key":"overwriting it","Fragments":["immediately?"]},{"Key":" First","Fragments":["of","off,"]},{"Key":"First of","Fragments":["to"]},{"Key":"of to","Fragments":["answer"]},{"Key":"to answer","Fragments":["your","your"]},{"Key":"answer your","Fragments":["question,","question,"]},{"Key":"your question,","Fragments":["since","using"]},{"Key":"question, since","Fragments":["exercism"]},{"Key":"since exercism","Fragments":["only"]},{"Key":"exercism only","Fragments":["support"]},{"Key":"only support","Fragments":["one"]},{"Key":"support one","Fragments":["file"]},{"Key":"file you","Fragments":["have"]},{"Key":"to integrate","Fragments":["the"]},{"Key":"integrate the","Fragments":["code"]},{"Key":"code into","Fragments":["the","it's"]},{"Key":".h file","Fragments":["or"]},{"Key":"or other","Fragments":["way","string."]},{"Key":"other way","Fragments":["around.","to"]},{"Key":"For more","Fragments":["info:"]},{"Key":"more info:","Fragments":["http://help.exercism.io/getting-started-with-cpp.html"]},{"Key":"I personalty","Fragments":["prefer"]},{"Key":"personalty prefer","Fragments":["to"]},{"Key":"include all","Fragments":["the"]},{"Key":"functions i","Fragments":["use"]},{"Key":"i use","Fragments":["at"]},{"Key":"use at","Fragments":["the"]},{"Key":"the top,","Fragments":["like","but"]},{"Key":"top, like","Fragments":["this"]},{"Key":" ```using","Fragments":["std::string;"]},{"Key":"that cleans","Fragments":["it"]},{"Key":"cleans it","Fragments":["up"]},{"Key":"bit, and","Fragments":["makes"]},{"Key":" Secondly","Fragments":["is"]},{"Key":"Secondly is","Fragments":["there"]},{"Key":"a reason","Fragments":["to","why","you","for"]},{"Key":"have word_hash,","Fragments":["and"]},{"Key":"word_hash, and","Fragments":["token_it"]},{"Key":"and token_it","Fragments":["static?"]},{"Key":"just get","Fragments":["some","rid","a"]},{"Key":"some memory","Fragments":["from"]},{"Key":"memory from","Fragments":["the"]},{"Key":"the heap","Fragments":["when","-"]},{"Key":"heap when","Fragments":["you"]},{"Key":"Other then","Fragments":["that"]},{"Key":"then that","Fragments":["i"]},{"Key":"i think","Fragments":["it","iteration","the"]},{"Key":"chose to","Fragments":["have","use","use","compare","pad","check"]},{"Key":"have different","Fragments":["versions"]},{"Key":"different versions","Fragments":["of"]},{"Key":"key word,","Fragments":["one"]},{"Key":"word, one","Fragments":["that's"]},{"Key":"one that's","Fragments":["only"]},{"Key":"that's only","Fragments":["lower"]},{"Key":"only lower","Fragments":["case,"]},{"Key":"lower case,","Fragments":["and"]},{"Key":"and another","Fragments":["that's"]},{"Key":"another that's","Fragments":["normalized"]},{"Key":"that's normalized","Fragments":["(lower"]},{"Key":"normalized (lower","Fragments":["case"]},{"Key":"(lower case","Fragments":["and"]},{"Key":"and sorted).","Fragments":["I"]},{"Key":"sorted). I","Fragments":["basically"]},{"Key":"basically chose","Fragments":["speed"]},{"Key":"chose speed","Fragments":["over"]},{"Key":"speed over","Fragments":["space"]},{"Key":"over space","Fragments":["here."]},{"Key":"everything to","Fragments":["a","lower","minutes","compile"]},{"Key":"and removed","Fragments":["an"]},{"Key":"removed an","Fragments":["unnecessary"]},{"Key":"unnecessary conversion","Fragments":["of"]},{"Key":"is good","Fragments":["that","and"]},{"Key":"you went","Fragments":["from"]},{"Key":"went from","Fragments":["a"]},{"Key":"a fixed","Fragments":["size"]},{"Key":"fixed size","Fragments":["char*"]},{"Key":"size char*","Fragments":["to"]},{"Key":"char* to","Fragments":["allocating"]},{"Key":"to allocating","Fragments":["memory."]},{"Key":"are two","Fragments":["issues"]},{"Key":"issues I","Fragments":["would"]},{"Key":"The hey","Fragments":["function"]},{"Key":"split up","Fragments":["into","the","sensing"]},{"Key":"that determine","Fragments":["if"]},{"Key":"determine if","Fragments":["input","a","the","non-whitespace","they","the","the","the","I"]},{"Key":"if input","Fragments":["is","is","or","comes"]},{"Key":"question, shouting,","Fragments":["empty,"]},{"Key":"shouting, empty,","Fragments":["etc."]},{"Key":"empty, etc.","Fragments":["If"]},{"Key":"etc. If","Fragments":["what"]},{"Key":"If what","Fragments":["constituted"]},{"Key":"what constituted","Fragments":["shouting"]},{"Key":"constituted shouting","Fragments":["changed"]},{"Key":"shouting changed","Fragments":["and"]},{"Key":"changed and","Fragments":["a","now"]},{"Key":"new type","Fragments":["of"]},{"Key":"of imput/output","Fragments":["was"]},{"Key":"imput/output was","Fragments":["defined"]},{"Key":"was defined","Fragments":["it"]},{"Key":"defined it","Fragments":["would","and"]},{"Key":"be trivial","Fragments":["to"]},{"Key":"change your","Fragments":["code.","isQuestion","method"]},{"Key":"your code.","Fragments":["Making","For","Please"]},{"Key":"code. Making","Fragments":["small"]},{"Key":"Making small","Fragments":["functions"]},{"Key":"small functions","Fragments":["that"]},{"Key":"are responsible","Fragments":["for"]},{"Key":"responsible for","Fragments":["only"]},{"Key":"for only","Fragments":["one","upper","the"]},{"Key":"thing can","Fragments":["reduce"]},{"Key":"can reduce","Fragments":["complexity."]},{"Key":"2. Everything","Fragments":["you"]},{"Key":"Everything you","Fragments":["used"]},{"Key":"the char*","Fragments":["for"]},{"Key":"char* for","Fragments":["could"]},{"Key":"for could","Fragments":["be"]},{"Key":"be accomplished","Fragments":["with"]},{"Key":"accomplished with","Fragments":["std::string."]},{"Key":"with std::string.","Fragments":["Try","Instead"]},{"Key":"std::string. Try","Fragments":["Iterators"]},{"Key":"Try Iterators","Fragments":["or"]},{"Key":"Iterators or","Fragments":["accessing"]},{"Key":"or accessing","Fragments":["it"]},{"Key":"accessing it","Fragments":["like"]},{"Key":"an char[].","Fragments":["You"]},{"Key":"char[]. You","Fragments":["could"]},{"Key":"could eliminate","Fragments":["the"]},{"Key":"the calls","Fragments":["to"]},{"Key":"to strcopy","Fragments":["and"]},{"Key":"strcopy and","Fragments":["new/delete."]},{"Key":"and new/delete.","Fragments":["Let"]},{"Key":"new/delete. Let","Fragments":["std::string"]},{"Key":"Let std::string","Fragments":["do"]},{"Key":"std::string do","Fragments":["the"]},{"Key":"the memory","Fragments":["allocation"]},{"Key":"memory allocation","Fragments":["for"]},{"Key":"allocation for","Fragments":["you."]},{"Key":"am brand","Fragments":["new"]},{"Key":"brand new","Fragments":["to"]},{"Key":"to C++,","Fragments":["I"]},{"Key":"C++, I","Fragments":["have","think"]},{"Key":"feeling I","Fragments":["am"]},{"Key":"am supposed","Fragments":["to"]},{"Key":"be using","Fragments":["memory"]},{"Key":"using memory","Fragments":["references"]},{"Key":"memory references","Fragments":["and"]},{"Key":"and pointers","Fragments":["but"]},{"Key":"pointers but","Fragments":["this"]},{"Key":"work without","Fragments":["them.","a"]},{"Key":"without them.","Fragments":["I"]},{"Key":"them. I","Fragments":["have","also","would","was"]},{"Key":"a background","Fragments":["in"]},{"Key":"in Java","Fragments":["and","that"]},{"Key":"Java and","Fragments":["C#"]},{"Key":"and C#","Fragments":["and"]},{"Key":"C# and","Fragments":["am"]},{"Key":"and am","Fragments":["definitely"]},{"Key":"am definitely","Fragments":["struggling"]},{"Key":"definitely struggling","Fragments":["with"]},{"Key":"struggling with","Fragments":["converting"]},{"Key":"with converting","Fragments":["those"]},{"Key":"converting those","Fragments":["ideas"]},{"Key":"those ideas","Fragments":["over"]},{"Key":"ideas over","Fragments":["to"]},{"Key":"an easier","Fragments":["way"]},{"Key":"easier way","Fragments":["to"]},{"Key":"to determine","Fragments":["if","the","if","a","if","the","the","if","if","if","if","the","if"]},{"Key":"contains letters,","Fragments":["only"]},{"Key":"letters, only","Fragments":["numbers,"]},{"Key":"only numbers,","Fragments":["or"]},{"Key":"numbers, or","Fragments":["is"]},{"Key":"or is","Fragments":["empty?","better"]},{"Key":"is empty?","Fragments":["I"]},{"Key":"empty? I","Fragments":["was"]},{"Key":"a compiler","Fragments":["error"]},{"Key":"compiler error","Fragments":["when","messages."]},{"Key":"error when","Fragments":["passing"]},{"Key":"passing an","Fragments":["empty"]},{"Key":"string `\"\"`","Fragments":["at"]},{"Key":"`\"\"` at","Fragments":["this"]},{"Key":"at this","Fragments":["line","exercise","point","again"]},{"Key":"this line","Fragments":["`std::string::npos"]},{"Key":"line `std::string::npos","Fragments":["!="]},{"Key":"`std::string::npos !=","Fragments":["message.find_first_of`,"]},{"Key":"!= message.find_first_of`,","Fragments":["so"]},{"Key":"message.find_first_of`, so","Fragments":["the"]},{"Key":"best way","Fragments":["I","of","to"]},{"Key":"could figure","Fragments":["to"]},{"Key":"figure to","Fragments":["avoid"]},{"Key":"avoid that","Fragments":["was","dependence"]},{"Key":"add a","Fragments":["check","touch","new"]},{"Key":"string was","Fragments":["empty","all"]},{"Key":"was empty","Fragments":["at","it"]},{"Key":"empty at","Fragments":["the"]},{"Key":" Thinking","Fragments":["about"]},{"Key":"Thinking about","Fragments":["this"]},{"Key":"code now,","Fragments":["it","there"]},{"Key":"now, it","Fragments":["seems"]},{"Key":"a for()","Fragments":["loop"]},{"Key":"for() loop","Fragments":["would"]},{"Key":"been easier","Fragments":["to"]},{"Key":"and possibly","Fragments":["read.","even"]},{"Key":"possibly read.","Fragments":["There"]},{"Key":"read. There","Fragments":["is"]},{"Key":"of setup","Fragments":["and"]},{"Key":"setup and","Fragments":["extra"]},{"Key":"and extra","Fragments":["work"]},{"Key":"extra work","Fragments":["to"]},{"Key":"work to","Fragments":["create","do."]},{"Key":"create initial","Fragments":["and"]},{"Key":"initial and","Fragments":["final"]},{"Key":"and final","Fragments":["pairs"]},{"Key":"final pairs","Fragments":["as"]},{"Key":"pairs as","Fragments":["well"]},{"Key":"as incrementing","Fragments":["the"]},{"Key":"incrementing the","Fragments":["mismatch"]},{"Key":"the mismatch","Fragments":["pair."]},{"Key":"feel this","Fragments":["is","is"]},{"Key":"a far","Fragments":["simpler"]},{"Key":"far simpler","Fragments":["but"]},{"Key":"simpler but","Fragments":["probably"]},{"Key":"but probably","Fragments":["not"]},{"Key":"as \"C++-esque\"","Fragments":["solution"]},{"Key":"\"C++-esque\" solution","Fragments":["to"]},{"Key":"problem. A","Fragments":["simple"]},{"Key":"loop, no","Fragments":["algorithmic"]},{"Key":"no algorithmic","Fragments":["iteration"]},{"Key":"algorithmic iteration","Fragments":["or"]},{"Key":"iteration or","Fragments":["pairs"]},{"Key":"or pairs","Fragments":["involved."]},{"Key":"bool isBlank(std::string","Fragments":["str)"]},{"Key":"isBlank(std::string str)","Fragments":["{"]},{"Key":"std::regex reg(\"^","Fragments":["*$\")"]},{"Key":"return std::regex_match(str,","Fragments":["reg);"]},{"Key":" Declaring","Fragments":["the","variables"]},{"Key":"Declaring the","Fragments":["function"]},{"Key":"static won't","Fragments":["make"]},{"Key":"won't make","Fragments":["the"]},{"Key":"regex be.","Fragments":["The"]},{"Key":"be. The","Fragments":["way"]},{"Key":"way above,","Fragments":["`reg`"]},{"Key":"above, `reg`","Fragments":["will"]},{"Key":"`reg` will","Fragments":["be"]},{"Key":"be created","Fragments":["the"]},{"Key":"created the","Fragments":["first"]},{"Key":"time the","Fragments":["function","requirements"]},{"Key":"called. After","Fragments":["that,"]},{"Key":"After that,","Fragments":["it'll","it"]},{"Key":"that, it'll","Fragments":["use"]},{"Key":"it'll use","Fragments":["the"]},{"Key":"same object","Fragments":["every"]},{"Key":"object every","Fragments":["time."]},{"Key":"you declare","Fragments":["a","your","your"]},{"Key":"a (non-class)","Fragments":["function"]},{"Key":"(non-class) function","Fragments":["as"]},{"Key":"as static,","Fragments":["it'll"]},{"Key":"static, it'll","Fragments":["be"]},{"Key":"be invisible","Fragments":["outside"]},{"Key":"invisible outside","Fragments":["of"]},{"Key":"its translation","Fragments":["unit.","unit)"]},{"Key":"unit. As","Fragments":["a"]},{"Key":"As a","Fragments":["rule","general","minor","matter","final","result,"]},{"Key":"a rule","Fragments":["of","of"]},{"Key":"rule of","Fragments":["thumb:","thumb,"]},{"Key":"of thumb:","Fragments":["if"]},{"Key":"thumb: if","Fragments":["you"]},{"Key":"what that","Fragments":["means,"]},{"Key":"that means,","Fragments":["you"]},{"Key":"means, you","Fragments":["won't"]},{"Key":"you won't","Fragments":["need"]},{"Key":"won't need","Fragments":["it"]},{"Key":" **Took","Fragments":["the"]},{"Key":"**Took the","Fragments":["advice"]},{"Key":"the advice","Fragments":["of"]},{"Key":"advice of","Fragments":["@isabell**"]},{"Key":" \u003cul\u003e\u003cli\u003eMade","Fragments":["the"]},{"Key":"\u003cul\u003e\u003cli\u003eMade the","Fragments":["variable"]},{"Key":"names more","Fragments":["generic\u003c/li\u003e"]},{"Key":" \u003cli\u003eRemoved","Fragments":["`size_t`"]},{"Key":"\u003cli\u003eRemoved `size_t`","Fragments":["instances"]},{"Key":"`size_t` instances","Fragments":["and"]},{"Key":"instances and","Fragments":["replced"]},{"Key":"and replced","Fragments":["them"]},{"Key":"replced them","Fragments":["with"]},{"Key":"them with","Fragments":["`uint`"]},{"Key":"with `uint`","Fragments":["\u003c/li\u003e"]},{"Key":" \u003cli\u003eMade","Fragments":["use"]},{"Key":"\u003cli\u003eMade use","Fragments":["of"]},{"Key":"the `std::min`","Fragments":["function.\u003c/li\u003e"]},{"Key":" \u003cli\u003e`diff`","Fragments":["is"]},{"Key":"\u003cli\u003e`diff` is","Fragments":["now"]},{"Key":"now signalled","Fragments":["for"]},{"Key":"signalled for","Fragments":["a"]},{"Key":"a possible","Fragments":["`register`"]},{"Key":"possible `register`","Fragments":["placement"]},{"Key":"`register` placement","Fragments":["which"]},{"Key":"placement which","Fragments":["would"]},{"Key":"would increase","Fragments":["performance"]},{"Key":"increase performance","Fragments":["especially"]},{"Key":"performance especially","Fragments":["with"]},{"Key":"especially with","Fragments":["large"]},{"Key":"with large","Fragments":["strings\u003c/li\u003e\u003c/ul\u003e"]},{"Key":"first guess","Fragments":["was"]},{"Key":"guess was","Fragments":["that"]},{"Key":"was that","Fragments":["it","we"]},{"Key":"third version","Fragments":["only"]},{"Key":"only modifies","Fragments":["the"]},{"Key":"length once","Fragments":["whereas"]},{"Key":"once whereas","Fragments":["back_inserter"]},{"Key":"whereas back_inserter","Fragments":["calls"]},{"Key":"back_inserter calls","Fragments":["push_back"]},{"Key":"calls push_back","Fragments":["once"]},{"Key":"push_back once","Fragments":["for"]},{"Key":"once for","Fragments":["every","the"]},{"Key":"for every","Fragments":["character.","element.","word","iteration","iteration,","possible","input.","word"]},{"Key":"every character.","Fragments":["MSVC"]},{"Key":"character. MSVC","Fragments":["might"]},{"Key":"MSVC might","Fragments":["have"]},{"Key":"overhead if","Fragments":["`length`"]},{"Key":"if `length`","Fragments":["changes."]},{"Key":"`length` changes.","Fragments":["Copy-construction"]},{"Key":"changes. Copy-construction","Fragments":["is"]},{"Key":"Copy-construction is","Fragments":["only"]},{"Key":"only a","Fragments":["memcpy.","matter","single"]},{"Key":"But then","Fragments":["I"]},{"Key":"I poked","Fragments":["around"]},{"Key":"poked around","Fragments":["a"]},{"Key":"around a","Fragments":["bit"]},{"Key":"bit and","Fragments":["it"]},{"Key":"it turned","Fragments":["out"]},{"Key":"out it","Fragments":["matters"]},{"Key":"it matters","Fragments":["whether","much"]},{"Key":"matters whether","Fragments":["the"]},{"Key":"that I'm","Fragments":["transforming","unable"]},{"Key":"I'm transforming","Fragments":["has"]},{"Key":"transforming has","Fragments":["the"]},{"Key":"right content","Fragments":["already."]},{"Key":"My guess","Fragments":["now"]},{"Key":"guess now","Fragments":["is"]},{"Key":"is branch","Fragments":["prediction."]},{"Key":"branch prediction.","Fragments":["Since"]},{"Key":"prediction. Since","Fragments":["most"]},{"Key":"Since most","Fragments":["characters"]},{"Key":"most characters","Fragments":["in"]},{"Key":"in natural","Fragments":["English"]},{"Key":"natural English","Fragments":["language"]},{"Key":"English language","Fragments":["are"]},{"Key":"language are","Fragments":["lower-case,"]},{"Key":"are lower-case,","Fragments":["the"]},{"Key":"lower-case, the","Fragments":["branch"]},{"Key":"the branch","Fragments":["prediction"]},{"Key":"branch prediction","Fragments":["will"]},{"Key":"prediction will","Fragments":["probably"]},{"Key":"will probably","Fragments":["end","appear"]},{"Key":"probably end","Fragments":["up"]},{"Key":"up predicting","Fragments":["that"]},{"Key":"predicting that","Fragments":["no"]},{"Key":"that no","Fragments":["memory","one"]},{"Key":"no memory","Fragments":["write"]},{"Key":"memory write","Fragments":["has"]},{"Key":"write has","Fragments":["to"]},{"Key":"be performed,","Fragments":["which"]},{"Key":"performed, which","Fragments":["is"]},{"Key":"is mostly","Fragments":["correct"]},{"Key":"mostly correct","Fragments":["for"]},{"Key":"correct for","Fragments":["the"]},{"Key":"the version","Fragments":["where"]},{"Key":"version where","Fragments":["I"]},{"Key":"am copy-constructing","Fragments":["the"]},{"Key":"copy-constructing the","Fragments":["string"]},{"Key":"string (the","Fragments":["ratio"]},{"Key":"(the ratio","Fragments":["of"]},{"Key":"ratio of","Fragments":["upper-case"]},{"Key":"of upper-case","Fragments":["to"]},{"Key":"upper-case to","Fragments":["lower-case"]},{"Key":"to lower-case","Fragments":["letters"]},{"Key":"lower-case letters","Fragments":["is"]},{"Key":"letters is","Fragments":["like","not"]},{"Key":"is like","Fragments":["1:40"]},{"Key":"like 1:40","Fragments":["or"]},{"Key":"1:40 or","Fragments":["so)."]},{"Key":"the `back_inserter`","Fragments":["method,"]},{"Key":"`back_inserter` method,","Fragments":["every"]},{"Key":"method, every","Fragments":["character"]},{"Key":"every character","Fragments":["will"]},{"Key":"character will","Fragments":["force"]},{"Key":"will force","Fragments":["a"]},{"Key":"force a","Fragments":["memory"]},{"Key":"a memory","Fragments":["write."]},{"Key":"So my","Fragments":["CPU"]},{"Key":"my CPU","Fragments":["might"]},{"Key":"CPU might","Fragments":["just"]},{"Key":"might just","Fragments":["be","as"]},{"Key":"just be","Fragments":["better","always","an"]},{"Key":"better (or","Fragments":["worse)"]},{"Key":"(or worse)","Fragments":["at"]},{"Key":"worse) at","Fragments":["exploiting"]},{"Key":"at exploiting","Fragments":["branches,"]},{"Key":"exploiting branches,","Fragments":["or"]},{"Key":"branches, or","Fragments":["your"]},{"Key":"or your","Fragments":["password","handspun"]},{"Key":"your password","Fragments":["file"]},{"Key":"password file","Fragments":["has"]},{"Key":"file has","Fragments":["a","also"]},{"Key":"better distribution","Fragments":["of"]},{"Key":"distribution of","Fragments":["upper-"]},{"Key":"of upper-","Fragments":["and"]},{"Key":"upper- and","Fragments":["lower-case"]},{"Key":"and lower-case","Fragments":["chars,"]},{"Key":"lower-case chars,","Fragments":["forcing"]},{"Key":"chars, forcing","Fragments":["your"]},{"Key":"forcing your","Fragments":["CPU","caller"]},{"Key":"your CPU","Fragments":["to"]},{"Key":"CPU to","Fragments":["flush"]},{"Key":"to flush","Fragments":["its"]},{"Key":"flush its","Fragments":["pipes"]},{"Key":"its pipes","Fragments":["more"]},{"Key":"pipes more","Fragments":["often."]},{"Key":"string through","Fragments":["a"]},{"Key":"a randomizer","Fragments":["to"]},{"Key":"randomizer to","Fragments":["confuse"]},{"Key":"to confuse","Fragments":["branch"]},{"Key":"confuse branch","Fragments":["prediction:"]},{"Key":" for(","Fragments":["char\u0026"]},{"Key":"for( char\u0026","Fragments":["c"]},{"Key":"char\u0026 c","Fragments":[":"]},{"Key":": file","Fragments":["){"]},{"Key":"if( rand()","Fragments":["%"]},{"Key":"rand() %","Fragments":["2"]},{"Key":"% 2","Fragments":[")"]},{"Key":") c","Fragments":["="]},{"Key":"= toupper(","Fragments":["c"]},{"Key":"toupper( c","Fragments":[");"]},{"Key":"else c","Fragments":["="]},{"Key":"= tolower(","Fragments":["c"]},{"Key":"tolower( c","Fragments":[");"]},{"Key":"The difference","Fragments":["between","with"]},{"Key":"difference between","Fragments":["the","a"]},{"Key":"between the","Fragments":["first","first"]},{"Key":"and third","Fragments":["test"]},{"Key":"third test","Fragments":["shrinks,"]},{"Key":"test shrinks,","Fragments":["but"]},{"Key":"shrinks, but","Fragments":["the"]},{"Key":"the copy-construction","Fragments":["still"]},{"Key":"copy-construction still","Fragments":["is"]},{"Key":"still is","Fragments":["the"]},{"Key":"the fastest.","Fragments":["So"]},{"Key":"fastest. So","Fragments":["that"]},{"Key":"doesn't seem","Fragments":["to","smart","that","very","to"]},{"Key":"thing influencing","Fragments":["it."]},{"Key":"Did a","Fragments":["performance"]},{"Key":"performance analysis","Fragments":["on"]},{"Key":"analysis on","Fragments":["a"]},{"Key":"a run","Fragments":["of"]},{"Key":"run of","Fragments":["the"]},{"Key":"the project","Fragments":["and","into"]},{"Key":"project and","Fragments":["dug"]},{"Key":"and dug","Fragments":["myself"]},{"Key":"dug myself","Fragments":["through"]},{"Key":"myself through","Fragments":["Microsoft's"]},{"Key":"through Microsoft's","Fragments":["string"]},{"Key":"Microsoft's string","Fragments":["implementation."]},{"Key":"string implementation.","Fragments":["The"]},{"Key":"implementation. The","Fragments":["rest"]},{"Key":"The rest","Fragments":["of","of"]},{"Key":"overhead seems","Fragments":["to"]},{"Key":"to come","Fragments":["from","with","up","back"]},{"Key":"overhead of","Fragments":["`back_inserter`","thinking"]},{"Key":"of `back_inserter`","Fragments":["calling"]},{"Key":"`back_inserter` calling","Fragments":["`push_back`"]},{"Key":"calling `push_back`","Fragments":["for"]},{"Key":"`push_back` for","Fragments":["every"]},{"Key":"every element.","Fragments":["Partly"]},{"Key":"element. Partly","Fragments":["because"]},{"Key":"Partly because","Fragments":["`push_back`"]},{"Key":"because `push_back`","Fragments":["needs"]},{"Key":"`push_back` needs","Fragments":["to"]},{"Key":"to grow","Fragments":["before"]},{"Key":"grow before","Fragments":["insertion"]},{"Key":"before insertion","Fragments":["can"]},{"Key":"insertion can","Fragments":["be"]},{"Key":"I haven't","Fragments":["done","gotten","spend","had","used","seen."]},{"Key":"haven't done","Fragments":["any"]},{"Key":"done any","Fragments":["really","C++,"]},{"Key":"any really","Fragments":["advanced"]},{"Key":"really advanced","Fragments":["programming,"]},{"Key":"advanced programming,","Fragments":["but"]},{"Key":"programming, but","Fragments":["the"]},{"Key":"you incremented","Fragments":["`i`"]},{"Key":"incremented `i`","Fragments":["in"]},{"Key":"`i` in","Fragments":["both"]},{"Key":"in both","Fragments":["loops","the","strings.","strings.","of"]},{"Key":"both loops","Fragments":["was"]},{"Key":"loops was","Fragments":["something"]},{"Key":"was something","Fragments":["I'd","I"]},{"Key":"something I'd","Fragments":["never"]},{"Key":"I'd never","Fragments":["really"]},{"Key":"never really","Fragments":["seen"]},{"Key":"really seen","Fragments":["before."]},{"Key":"seen before.","Fragments":["Neat."]},{"Key":"might could","Fragments":["use"]},{"Key":"code neater","Fragments":["would"]},{"Key":"neater would","Fragments":["be"]},{"Key":"the big","Fragments":["`std::transform()`"]},{"Key":"big `std::transform()`","Fragments":["call"]},{"Key":"`std::transform()` call","Fragments":["on"]},{"Key":"on lines","Fragments":["15/16"]},{"Key":"lines 15/16","Fragments":["and"]},{"Key":"15/16 and","Fragments":["instead"]},{"Key":"instead change","Fragments":["line"]},{"Key":"change line","Fragments":["11","24"]},{"Key":"line 11","Fragments":["to"]},{"Key":"11 to","Fragments":["`currentWord.append(1,"]},{"Key":"to `currentWord.append(1,","Fragments":["std::tolower(sentence[i]));`"]},{"Key":" Are","Fragments":["the","you"]},{"Key":"Are the","Fragments":["includes"]},{"Key":"the includes","Fragments":["for","in"]},{"Key":"includes for","Fragments":["`\u003cmap\u003e`,"]},{"Key":"for `\u003cmap\u003e`,","Fragments":["`\u003cstring\u003e`,"]},{"Key":"`\u003cmap\u003e`, `\u003cstring\u003e`,","Fragments":["and"]},{"Key":"`\u003cstring\u003e`, and","Fragments":["`\u003ccctype\u003e`"]},{"Key":"and `\u003ccctype\u003e`","Fragments":["in"]},{"Key":"`\u003ccctype\u003e` in","Fragments":["your"]},{"Key":"header file?","Fragments":["I"]},{"Key":"file? I","Fragments":["guess"]},{"Key":"should assume","Fragments":["so,"]},{"Key":"assume so,","Fragments":["but"]},{"Key":"so, but","Fragments":["the"]},{"Key":"they aren't","Fragments":["visible"]},{"Key":"aren't visible","Fragments":["in"]},{"Key":"visible in","Fragments":["your","its"]},{"Key":"your source","Fragments":["made","will"]},{"Key":"source made","Fragments":["me"]},{"Key":"made me","Fragments":["wonder.","have","use"]},{"Key":"me wonder.","Fragments":["It"]},{"Key":"wonder. It","Fragments":["seems"]},{"Key":"more intuitive","Fragments":["to"]},{"Key":"intuitive to","Fragments":["contain"]},{"Key":"entire solution","Fragments":["in"]},{"Key":"one file,","Fragments":["or"]},{"Key":"file, or","Fragments":["at"]},{"Key":"least easier","Fragments":["to"]},{"Key":"boost library.","Fragments":["Just","You"]},{"Key":"library. Just","Fragments":["remember"]},{"Key":"Just remember","Fragments":["that"]},{"Key":"remember that","Fragments":["`str.back()`"]},{"Key":"that `str.back()`","Fragments":["will"]},{"Key":"`str.back()` will","Fragments":["cause"]},{"Key":"will cause","Fragments":["undefined"]},{"Key":"cause undefined","Fragments":["behavior"]},{"Key":"behavior if","Fragments":["you","`what`","the"]},{"Key":"it an","Fragments":["empty"]},{"Key":"string. It's","Fragments":["not"]},{"Key":"suite, but","Fragments":["in"]},{"Key":"a real-world","Fragments":["application"]},{"Key":"real-world application","Fragments":["that"]},{"Key":"application that","Fragments":["would"]},{"Key":"something you'd","Fragments":["probably"]},{"Key":"you'd probably","Fragments":["want","get"]},{"Key":"probably want","Fragments":["to"]},{"Key":"to account","Fragments":["for."]},{"Key":"account for.","Fragments":["Also"]},{"Key":"for. Also","Fragments":["not"]},{"Key":"Also not","Fragments":["in"]},{"Key":"suite, if","Fragments":["you"]},{"Key":"were given","Fragments":["a"]},{"Key":"given a","Fragments":["string","disposition."]},{"Key":"and newlines,","Fragments":["I"]},{"Key":"newlines, I","Fragments":["don't"]},{"Key":"think `trim_left_copy(str)`","Fragments":["on"]},{"Key":"`trim_left_copy(str)` on","Fragments":["line"]},{"Key":"line 28","Fragments":["would"]},{"Key":"28 would","Fragments":["leave"]},{"Key":"leave you","Fragments":["with"]},{"Key":"you with","Fragments":["an"]},{"Key":"sure whether","Fragments":["it's"]},{"Key":"whether it's","Fragments":["better","a"]},{"Key":"to calculate","Fragments":["and","and"]},{"Key":"calculate and","Fragments":["store","return"]},{"Key":"and store","Fragments":["each"]},{"Key":"store each","Fragments":["of"]},{"Key":"the ages","Fragments":["on"]},{"Key":"ages on","Fragments":["instantiation"]},{"Key":"on instantiation","Fragments":["or"]},{"Key":"instantiation or","Fragments":["to"]},{"Key":"return as","Fragments":["and"]},{"Key":"as and","Fragments":["when"]},{"Key":" Grr.","Fragments":["Regex."]},{"Key":"Grr. Regex.","Fragments":["I"]},{"Key":"Regex. I","Fragments":["haven't"]},{"Key":"haven't gotten","Fragments":["the","around"]},{"Key":"the hang","Fragments":["of"]},{"Key":"hang of","Fragments":["them"]},{"Key":"C++, and","Fragments":["I'm"]},{"Key":"of borrowing","Fragments":["an"]},{"Key":"borrowing an","Fragments":["implementation"]},{"Key":"in JS","Fragments":["by"]},{"Key":"JS by","Fragments":["using"]},{"Key":"of four","Fragments":["if-else"]},{"Key":"four if-else","Fragments":["statements"]},{"Key":"if-else statements","Fragments":["to"]},{"Key":"know regex,","Fragments":["but"]},{"Key":"regex, but","Fragments":["I"]},{"Key":"do know","Fragments":["that"]},{"Key":"really only","Fragments":["need","cared"]},{"Key":"for 3","Fragments":["things."]},{"Key":"3 things.","Fragments":["One"]},{"Key":"things. One","Fragments":["other"]},{"Key":"One other","Fragments":["thing","thought;"]},{"Key":"other thing","Fragments":["you"]},{"Key":"string unnecessarily","Fragments":["is"]},{"Key":"unnecessarily is","Fragments":["pass"]},{"Key":"is pass","Fragments":["`input`"]},{"Key":"pass `input`","Fragments":["by"]},{"Key":"`input` by","Fragments":["reference."]},{"Key":"Just a","Fragments":["side","bit","couple","bit","bit","matter","quick","minor"]},{"Key":"a side","Fragments":["note,","note:"]},{"Key":"side note,","Fragments":["this"]},{"Key":"note, this","Fragments":["website"]},{"Key":"this website","Fragments":["expects"]},{"Key":"website expects","Fragments":["you"]},{"Key":"expects you","Fragments":["to"]},{"Key":"to only","Fragments":["submit","using"]},{"Key":"only submit","Fragments":["your"]},{"Key":"submit your","Fragments":["work","code"]},{"Key":"your work","Fragments":["once"]},{"Key":"work once","Fragments":["you"]},{"Key":"working solution.","Fragments":["In"]},{"Key":"solution. In","Fragments":["fact,"]},{"Key":"fact, the","Fragments":["site"]},{"Key":"the site","Fragments":["specifically","goes,"]},{"Key":"site specifically","Fragments":["hides"]},{"Key":"specifically hides","Fragments":["others'"]},{"Key":"hides others'","Fragments":["solutions"]},{"Key":"others' solutions","Fragments":["from"]},{"Key":"solutions from","Fragments":["you"]},{"Key":"from you","Fragments":["until"]},{"Key":"you until","Fragments":["you've"]},{"Key":"until you've","Fragments":["figured"]},{"Key":"you've figured","Fragments":["out"]},{"Key":"figured out","Fragments":["a"]},{"Key":"out a","Fragments":["working","range"]},{"Key":"working solution","Fragments":["on"]},{"Key":"solution on","Fragments":["your"]},{"Key":"your own,","Fragments":["to"]},{"Key":"own, to","Fragments":["encourage"]},{"Key":"to encourage","Fragments":["you"]},{"Key":"encourage you","Fragments":["to"]},{"Key":"learn rather","Fragments":["than"]},{"Key":"I'm sorry,","Fragments":["I"]},{"Key":"sorry, I","Fragments":["don't"]},{"Key":"don't understand","Fragments":["the","why","why","why"]},{"Key":"only use","Fragments":["\"using\"","the"]},{"Key":"use \"using\"","Fragments":["to"]},{"Key":"\"using\" to","Fragments":["shorten"]},{"Key":"shorten overly","Fragments":["long"]},{"Key":"overly long","Fragments":["namespaces,"]},{"Key":"long namespaces,","Fragments":["never"]},{"Key":"namespaces, never","Fragments":["to"]},{"Key":"never to","Fragments":["import"]},{"Key":"to import","Fragments":["into"]},{"Key":"import into","Fragments":["the"]},{"Key":"the global","Fragments":["namespace.","namespace,","scope.","namespace.","strings","used"]},{"Key":"would agree","Fragments":["about","about","that"]},{"Key":"agree about","Fragments":["more","the","the"]},{"Key":"about more","Fragments":["aptly"]},{"Key":"more aptly","Fragments":["named"]},{"Key":"aptly named","Fragments":["variables,"]},{"Key":"named variables,","Fragments":["but"]},{"Key":"function only","Fragments":["has"]},{"Key":"only has","Fragments":["a"]},{"Key":"single variable,","Fragments":["there"]},{"Key":"variable, there","Fragments":["is"]},{"Key":"is little","Fragments":["chance"]},{"Key":"little chance","Fragments":["for"]},{"Key":"for confusion.","Fragments":["In"]},{"Key":"confusion. In","Fragments":["anything"]},{"Key":"In anything","Fragments":["more"]},{"Key":"anything more","Fragments":["complex,"]},{"Key":"more complex,","Fragments":["I'd"]},{"Key":"complex, I'd","Fragments":["consider"]},{"Key":"I'd consider","Fragments":["this"]},{"Key":" Although","Fragments":["it","you're"]},{"Key":"Although it","Fragments":["is"]},{"Key":"is optimized","Fragments":["for"]},{"Key":"optimized for","Fragments":["speed,"]},{"Key":"for speed,","Fragments":["the"]},{"Key":"speed, the","Fragments":["solution"]},{"Key":"probably appear","Fragments":["'magical'"]},{"Key":"appear 'magical'","Fragments":["at"]},{"Key":"'magical' at","Fragments":["first"]},{"Key":"first glance","Fragments":["to"]},{"Key":"glance to","Fragments":["those"]},{"Key":"those unfamiliar","Fragments":["with"]},{"Key":"unfamiliar with","Fragments":["the"]},{"Key":"problem. Speciallly","Fragments":["for"]},{"Key":"Speciallly for","Fragments":["`total()`"]},{"Key":"for `total()`","Fragments":["which"]},{"Key":"`total()` which","Fragments":["uses"]},{"Key":"which uses","Fragments":["trickery"]},{"Key":"uses trickery","Fragments":["to"]},{"Key":"trickery to","Fragments":["get"]},{"Key":"get around","Fragments":["the","this?"]},{"Key":"around the","Fragments":["64"]},{"Key":"the 64","Fragments":["bit"]},{"Key":"64 bit","Fragments":["length"]},{"Key":"bit length","Fragments":["limitation."]},{"Key":"length limitation.","Fragments":["An"]},{"Key":"limitation. An","Fragments":["alternative"]},{"Key":"alternative form","Fragments":["is"]},{"Key":"form is","Fragments":["also"]},{"Key":"also commented","Fragments":["in"]},{"Key":"commented in","Fragments":["the"]},{"Key":"but while","Fragments":["it"]},{"Key":"while it","Fragments":["uses","looks"]},{"Key":"it uses","Fragments":["logic","the","a"]},{"Key":"uses logic","Fragments":["similar"]},{"Key":"logic similar","Fragments":["to"]},{"Key":"to `square()`","Fragments":["it"]},{"Key":"`square()` it","Fragments":["looks"]},{"Key":"looks far","Fragments":["more"]},{"Key":"far more","Fragments":["confusing."]},{"Key":"more confusing.","Fragments":["Possibly"]},{"Key":"confusing. Possibly","Fragments":["the"]},{"Key":"Possibly the","Fragments":["only"]},{"Key":"code lucid","Fragments":["is"]},{"Key":"lucid is","Fragments":["to"]},{"Key":"to sacrifice","Fragments":["speed"]},{"Key":"sacrifice speed","Fragments":["completely"]},{"Key":"speed completely","Fragments":["and"]},{"Key":"completely and","Fragments":["go"]},{"Key":"and go","Fragments":["for","with","directly"]},{"Key":"go for","Fragments":["a","code"]},{"Key":"a looping","Fragments":["approach."]},{"Key":" Very","Fragments":["clear","readable","nice,","nice."]},{"Key":"Very clear","Fragments":["and"]},{"Key":"and readable","Fragments":["implementation."]},{"Key":"How about","Fragments":["performance"]},{"Key":"performance in","Fragments":["terms","that"]},{"Key":"of time/cpu","Fragments":["complexity?"]},{"Key":"implementation does","Fragments":["sort()"]},{"Key":"does sort()","Fragments":["for"]},{"Key":"sort() for","Fragments":["every"]},{"Key":"every word","Fragments":["from","in","in","once."]},{"Key":"word from","Fragments":["the"]},{"Key":"the \"check","Fragments":["for"]},{"Key":"\"check for","Fragments":["anagram\""]},{"Key":"for anagram\"","Fragments":["list."]},{"Key":"anagram\" list.","Fragments":["If"]},{"Key":"list. If","Fragments":["len_i"]},{"Key":"If len_i","Fragments":["is"]},{"Key":"len_i is","Fragments":["the"]},{"Key":"the i-th","Fragments":["word,"]},{"Key":"i-th word,","Fragments":["than"]},{"Key":"word, than","Fragments":["the"]},{"Key":"the complexity","Fragments":["is","of"]},{"Key":"complexity is","Fragments":["O(max(len_i)ln(max(len_i)).","O(word_len),","something","no"]},{"Key":"in O(max(len_i)),","Fragments":["though."]},{"Key":"O(max(len_i)), though.","Fragments":["The"]},{"Key":"The idea","Fragments":["is","is"]},{"Key":"the occurence","Fragments":["of","of"]},{"Key":"occurence of","Fragments":["the","all"]},{"Key":"the words;","Fragments":["if"]},{"Key":"words; if","Fragments":["two"]},{"Key":"if two","Fragments":["words"]},{"Key":"two words","Fragments":["have","are"]},{"Key":"words have","Fragments":["the"]},{"Key":"length and","Fragments":["the","contain","buffer","use","comparing"]},{"Key":"of occurences","Fragments":["for"]},{"Key":"occurences for","Fragments":["all"]},{"Key":"all their","Fragments":["characters,"]},{"Key":"their characters,","Fragments":["one"]},{"Key":"characters, one","Fragments":["of"]},{"Key":"I wanted","Fragments":["to","a","to","to","to","to","to","to","to","to"]},{"Key":"use `fold`","Fragments":["(in"]},{"Key":"`fold` (in","Fragments":["C++"]},{"Key":"(in C++","Fragments":["`accumulate`)"]},{"Key":"C++ `accumulate`)","Fragments":["because"]},{"Key":"`accumulate`) because","Fragments":["it"]},{"Key":"it actually","Fragments":["is"]},{"Key":"actually is","Fragments":["the"]},{"Key":"right algorithm","Fragments":["for"]},{"Key":"this kind","Fragments":["of","of"]},{"Key":"- Moved","Fragments":["code"]},{"Key":"Moved code","Fragments":["checking"]},{"Key":"code checking","Fragments":["what"]},{"Key":"checking what","Fragments":["type"]},{"Key":"of prompt","Fragments":["was"]},{"Key":"prompt was","Fragments":["passed"]},{"Key":"was passed","Fragments":["to"]},{"Key":"to ```hey```","Fragments":["to","function"]},{"Key":"```hey``` to","Fragments":["separate"]},{"Key":"- ```#include```ed","Fragments":["```\u003clocale\u003e```"]},{"Key":"```#include```ed ```\u003clocale\u003e```","Fragments":["instead"]},{"Key":"```\u003clocale\u003e``` instead","Fragments":["of"]},{"Key":"of ```\u003ccctype\u003e```","Fragments":["to"]},{"Key":"```\u003ccctype\u003e``` to","Fragments":["provide"]},{"Key":"to provide","Fragments":["```isalpha```","the","an"]},{"Key":"provide ```isalpha```","Fragments":["and"]},{"Key":"```isalpha``` and","Fragments":["```islower```"]},{"Key":"- changed","Fragments":["```int```"]},{"Key":"changed ```int```","Fragments":["in"]},{"Key":"```int``` in","Fragments":["for-loops"]},{"Key":"in for-loops","Fragments":["iterating"]},{"Key":"for-loops iterating","Fragments":["through"]},{"Key":"through strings","Fragments":["to"]},{"Key":"strings to","Fragments":["```unsigned```","const","the"]},{"Key":"- used","Fragments":["```find_not_first_of('"]},{"Key":"used ```find_not_first_of('","Fragments":["')```"]},{"Key":"```find_not_first_of(' ')```","Fragments":["to"]},{"Key":"')``` to","Fragments":["check"]},{"Key":"it's worth","Fragments":["having","looking","understanding"]},{"Key":"worth having","Fragments":["a"]},{"Key":"a one-line","Fragments":["```isEmpty```"]},{"Key":"one-line ```isEmpty```","Fragments":["function"]},{"Key":"```isEmpty``` function","Fragments":["but"]},{"Key":"function but","Fragments":["it","I"]},{"Key":"makes ```hey```","Fragments":["more"]},{"Key":"```hey``` more","Fragments":["readable."]},{"Key":" Interesting.","Fragments":["How","I"]},{"Key":"Interesting. How","Fragments":["does"]},{"Key":"How does","Fragments":["it"]},{"Key":"does it","Fragments":["behave","need","return","lead"]},{"Key":"it behave","Fragments":["on"]},{"Key":"behave on","Fragments":["MSVC"]},{"Key":"on MSVC","Fragments":["if"]},{"Key":"MSVC if","Fragments":["you"]},{"Key":"a fourth","Fragments":["version"]},{"Key":"fourth version","Fragments":["that"]},{"Key":"that avoids","Fragments":["both"]},{"Key":"avoids both","Fragments":["back_inserter"]},{"Key":"both back_inserter","Fragments":["and"]},{"Key":"back_inserter and","Fragments":["the"]},{"Key":" word.resize(std::distance(start,","Fragments":["stop));"]},{"Key":" std::transform(start,","Fragments":["stop,"]},{"Key":"std::transform(start, stop,","Fragments":["word.begin(),"]},{"Key":"stop, word.begin(),","Fragments":["::tolower);"]},{"Key":"For me","Fragments":["this","on","on"]},{"Key":"is (slightly)","Fragments":["slower"]},{"Key":"(slightly) slower","Fragments":["than"]},{"Key":"second version.","Fragments":["But"]},{"Key":"version. But","Fragments":["I'm","it"]},{"Key":"But I'm","Fragments":["curious","really"]},{"Key":"curious if","Fragments":["you"]},{"Key":"you see","Fragments":["an","anagram::anagram,"]},{"Key":"see an","Fragments":["improvement.","implementation"]},{"Key":"no experience","Fragments":["with"]},{"Key":"experience with","Fragments":["c++"]},{"Key":"with c++","Fragments":["I","for"]},{"Key":"c++ I","Fragments":["would"]},{"Key":"which best","Fragments":["practices"]},{"Key":"best practices","Fragments":["I"]},{"Key":"practices I","Fragments":["am"]},{"Key":"am missing","Fragments":["to","a","something"]},{"Key":"missing to","Fragments":["make"]},{"Key":"am wondering:","Fragments":["Since"]},{"Key":"wondering: Since","Fragments":["I"]},{"Key":"the _alphaFound_","Fragments":["to"]},{"Key":"_alphaFound_ to","Fragments":["indicate"]},{"Key":"indicate when","Fragments":["the"]},{"Key":"question has","Fragments":["an"]},{"Key":"an alpha","Fragments":["char.","that"]},{"Key":"alpha char.","Fragments":["Is"]},{"Key":"char. Is","Fragments":["it"]},{"Key":"Is it","Fragments":["better","acceptable","possible"]},{"Key":"to assign","Fragments":["it","to"]},{"Key":"assign it","Fragments":["many"]},{"Key":"it many","Fragments":["times"]},{"Key":"times to","Fragments":["use"]},{"Key":"use only","Fragments":["one","what"]},{"Key":"one cycle","Fragments":["or"]},{"Key":"cycle or","Fragments":["is"]},{"Key":"put another","Fragments":["cycle"]},{"Key":"another cycle","Fragments":["that"]},{"Key":"cycle that","Fragments":["breaks"]},{"Key":"that breaks","Fragments":["when"]},{"Key":"breaks when","Fragments":["the"]},{"Key":"first alpha","Fragments":["character"]},{"Key":"alpha character","Fragments":["is","is"]},{"Key":"decided the","Fragments":["second"]},{"Key":"second approach","Fragments":["was"]},{"Key":"approach was","Fragments":["better","very","just"]},{"Key":"was better","Fragments":["after"]},{"Key":"better after","Fragments":["all."]},{"Key":"after all.","Fragments":["The"]},{"Key":"all. The","Fragments":["first"]},{"Key":"better suited","Fragments":["to","as"]},{"Key":"suited to","Fragments":["Python"]},{"Key":"to Python","Fragments":["or"]},{"Key":"Python or","Fragments":["Ruby."]},{"Key":" Recommendation:","Fragments":["You"]},{"Key":"Recommendation: You","Fragments":["could"]},{"Key":"could break","Fragments":["your"]},{"Key":"break your","Fragments":["cycle","implementation."]},{"Key":"your cycle","Fragments":["whenever"]},{"Key":"cycle whenever","Fragments":["you"]},{"Key":"whenever you","Fragments":["find","invoke"]},{"Key":"alpha that","Fragments":["is"]},{"Key":"an upper.","Fragments":["That"]},{"Key":"upper. That","Fragments":["way"]},{"Key":"you save","Fragments":["CPU"]},{"Key":"save CPU","Fragments":["time."]},{"Key":"the _isalpha_","Fragments":["function"]},{"Key":"_isalpha_ function","Fragments":["in"]},{"Key":"in _cctype_","Fragments":["to"]},{"Key":"_cctype_ to","Fragments":["avoid"]},{"Key":"avoid your","Fragments":["own"]},{"Key":"own implementation","Fragments":["as"]},{"Key":"implementation as","Fragments":["in","i"]},{"Key":"as in","Fragments":["_valid_word_char_","`isThisPattern`.","a"]},{"Key":"in _valid_word_char_","Fragments":["function."]},{"Key":"can't decide","Fragments":["which"]},{"Key":"which of","Fragments":["the"]},{"Key":"two approaches","Fragments":["here"]},{"Key":"approaches here","Fragments":["is"]},{"Key":"better. Both","Fragments":["are"]},{"Key":"Both are","Fragments":["the"]},{"Key":" wanted","Fragments":["to"]},{"Key":"use foreach","Fragments":["with"]},{"Key":"foreach with","Fragments":["lamda"]},{"Key":"with lamda","Fragments":["for"]},{"Key":"lamda for","Fragments":["this"]},{"Key":"this one,","Fragments":["but","this","but"]},{"Key":"one, but","Fragments":["can't","after"]},{"Key":"can't find","Fragments":["documentation"]},{"Key":"In functions","Fragments":["\"none_of\""]},{"Key":"functions \"none_of\"","Fragments":["and"]},{"Key":"\"none_of\" and","Fragments":["\"all_of\""]},{"Key":"and \"all_of\"","Fragments":["you"]},{"Key":"\"all_of\" you","Fragments":["don't"]},{"Key":" [](char","Fragments":["c)"]},{"Key":"[](char c)","Fragments":["{","{","{"]},{"Key":"c) {","Fragments":["return","return","return"]},{"Key":"return std::islower(c);","Fragments":["}"]},{"Key":"use library","Fragments":["cctype"]},{"Key":"library cctype","Fragments":["and"]},{"Key":"cctype and","Fragments":["type:"]},{"Key":" std::none_of(message.begin(),","Fragments":["message.end(),"]},{"Key":"std::none_of(message.begin(), message.end(),","Fragments":["islower);"]},{"Key":"Yeah, this","Fragments":["is"]},{"Key":"not pretty,","Fragments":["but"]},{"Key":"pretty, but","Fragments":["I","depending"]},{"Key":"didn't feel","Fragments":["like","like"]},{"Key":"it ...","Fragments":["."]},{"Key":"made it","Fragments":["short,","more"]},{"Key":"it short,","Fragments":["good"]},{"Key":"short, good","Fragments":["that"]},{"Key":"tokenizer already","Fragments":["available."]},{"Key":" Ok,","Fragments":["I"]},{"Key":"Ok, I","Fragments":["searched"]},{"Key":"I searched","Fragments":["a"]},{"Key":"searched a","Fragments":["little"]},{"Key":"little to","Fragments":["see"]},{"Key":"what a","Fragments":["translation","caller"]},{"Key":"any difference","Fragments":["between"]},{"Key":"between a","Fragments":["static"]},{"Key":"function (only","Fragments":["visible"]},{"Key":"(only visible","Fragments":["in"]},{"Key":"in its","Fragments":["translation","name."]},{"Key":"translation unit)","Fragments":["and"]},{"Key":"unit) and","Fragments":["an"]},{"Key":"namespace (where","Fragments":["the"]},{"Key":"(where the","Fragments":["content"]},{"Key":"the content","Fragments":["is","of"]},{"Key":"content is","Fragments":["only"]},{"Key":"visible within","Fragments":["the","it's"]},{"Key":"the file)","Fragments":["?"]},{"Key":"first sigh,","Fragments":["it"]},{"Key":"sigh, it","Fragments":["seems"]},{"Key":"same job","Fragments":["(and"]},{"Key":"job (and","Fragments":["if"]},{"Key":"(and if","Fragments":["so,"]},{"Key":"if so,","Fragments":["declaring"]},{"Key":"so, declaring","Fragments":["a"]},{"Key":"declaring a","Fragments":["static"]},{"Key":"function within","Fragments":["an","an"]},{"Key":"about isalpha.","Fragments":["If"]},{"Key":"isalpha. If","Fragments":["a"]},{"Key":"a standard","Fragments":["function","80x24","function"]},{"Key":"standard function","Fragments":["exists,","with"]},{"Key":"function exists,","Fragments":["that"]},{"Key":"exists, that","Fragments":["will"]},{"Key":"be always","Fragments":["preferable","opposite"]},{"Key":"always preferable","Fragments":["to"]},{"Key":"preferable to","Fragments":["own"]},{"Key":"to own","Fragments":["implementation,"]},{"Key":"own implementation,","Fragments":["except"]},{"Key":"implementation, except","Fragments":["when"]},{"Key":"except when","Fragments":["I","the"]},{"Key":"good excuse","Fragments":["to"]},{"Key":"excuse to","Fragments":["write"]},{"Key":"write my","Fragments":["own,","own","own"]},{"Key":"my own,","Fragments":["and"]},{"Key":"own, and","Fragments":["I"]},{"Key":"one this","Fragments":["time"]},{"Key":"this time","Fragments":["so","using"]},{"Key":"time so","Fragments":["I"]},{"Key":"will switch","Fragments":["to"]},{"Key":"to isalpha","Fragments":["in"]},{"Key":"isalpha in","Fragments":["next"]},{"Key":"in next","Fragments":["revision.","submit.","submit."]},{"Key":"I changed","Fragments":["the","the","my"]},{"Key":"the `string","Fragments":["input`"]},{"Key":"`string input`","Fragments":["to"]},{"Key":"input` to","Fragments":["`const"]},{"Key":"to `const","Fragments":["string"]},{"Key":"string \u0026","Fragments":["input`"]},{"Key":"\u0026 input`","Fragments":["because"]},{"Key":"input` because","Fragments":["I"]},{"Key":"modifying `input`'s","Fragments":["value."]},{"Key":"`input`'s value.","Fragments":["I"]},{"Key":"value. I","Fragments":["got"]},{"Key":"got very","Fragments":["large"]},{"Key":"very large","Fragments":["runtime"]},{"Key":"large runtime","Fragments":["speed"]},{"Key":"runtime speed","Fragments":["boosts."]},{"Key":"the hints","Fragments":["regarding"]},{"Key":"hints regarding","Fragments":["multiple"]},{"Key":"regarding multiple","Fragments":[".cpp/.h"]},{"Key":"multiple .cpp/.h","Fragments":["files."]},{"Key":"Regarding static","Fragments":["members;"]},{"Key":"static members;","Fragments":["I"]},{"Key":"members; I","Fragments":["think"]},{"Key":"that boost","Fragments":["uses","library."]},{"Key":"boost uses","Fragments":["for"]},{"Key":"uses for","Fragments":["some"]},{"Key":"the testcases","Fragments":["directly"]},{"Key":"not some","Fragments":["object"]},{"Key":"some object","Fragments":["of"]},{"Key":"object of","Fragments":["that"]},{"Key":"that class.","Fragments":["So,"]},{"Key":"class. So,","Fragments":["I","you"]},{"Key":"So, I","Fragments":["need"]},{"Key":"use static","Fragments":["members"]},{"Key":"static members","Fragments":["and"]},{"Key":"members and","Fragments":["methods."]},{"Key":"The new","Fragments":["range"]},{"Key":"new range","Fragments":["based","for"]},{"Key":"for is","Fragments":["pretty,"]},{"Key":"is pretty,","Fragments":["but"]},{"Key":"but depending","Fragments":["on"]},{"Key":"your libstdc++","Fragments":["implementation"]},{"Key":"libstdc++ implementation","Fragments":["std::transform"]},{"Key":"implementation std::transform","Fragments":["can"]},{"Key":"std::transform can","Fragments":["run"]},{"Key":"can run","Fragments":["in"]},{"Key":"run in","Fragments":["parallel."]},{"Key":"need cctype","Fragments":["for?"]},{"Key":"make better","Fragments":["use"]},{"Key":"better use","Fragments":["of"]},{"Key":"of STL,","Fragments":["maybe","though."]},{"Key":"STL, maybe","Fragments":["look"]},{"Key":"maybe look","Fragments":["at"]},{"Key":"using `\u003calgorithm\u003e`'s","Fragments":["`any_of()`"]},{"Key":"`\u003calgorithm\u003e`'s `any_of()`","Fragments":["instead"]},{"Key":"`any_of()` instead","Fragments":["of"]},{"Key":"that `for`","Fragments":["loop"]},{"Key":"`for` loop","Fragments":["in","style"]},{"Key":"in `shouting()`.","Fragments":["Sidenote:"]},{"Key":"`shouting()`. Sidenote:","Fragments":["you"]},{"Key":"Sidenote: you","Fragments":["should"]},{"Key":"be referencing","Fragments":["`ctype.h`"]},{"Key":"referencing `ctype.h`","Fragments":["in"]},{"Key":"`ctype.h` in","Fragments":["the"]},{"Key":"C++ way,","Fragments":["that"]},{"Key":"way, that","Fragments":["is:"]},{"Key":"that is:","Fragments":["`#include"]},{"Key":"is: `#include","Fragments":["\u003ccctype\u003e`"]},{"Key":"Very readable","Fragments":["and"]},{"Key":"and straightforward","Fragments":["implementation."]},{"Key":"straightforward implementation.","Fragments":["A"]},{"Key":"implementation. A","Fragments":["few"]},{"Key":"few small","Fragments":["things:"]},{"Key":"- `#include","Fragments":["\u003cciso646\u003e`"]},{"Key":"`#include \u003cciso646\u003e`","Fragments":["is"]},{"Key":"\u003cciso646\u003e` is","Fragments":["unnecessary"]},{"Key":"unnecessary because","Fragments":["in"]},{"Key":"C++, those","Fragments":["words"]},{"Key":"those words","Fragments":["(specifically","that"]},{"Key":"words (specifically","Fragments":["`and`)"]},{"Key":"(specifically `and`)","Fragments":["are"]},{"Key":"`and`) are","Fragments":["already"]},{"Key":"already reserved","Fragments":["to"]},{"Key":"reserved to","Fragments":["carry"]},{"Key":"to carry","Fragments":["the"]},{"Key":"carry the","Fragments":["meaning"]},{"Key":"the meaning","Fragments":["you"]},{"Key":"meaning you","Fragments":["want","compare"]},{"Key":"want them","Fragments":["to"]},{"Key":"- `what.back()`","Fragments":["on"]},{"Key":"`what.back()` on","Fragments":["line"]},{"Key":"14 has","Fragments":["undefined"]},{"Key":"has undefined","Fragments":["behavior","behavior"]},{"Key":"if `what`","Fragments":["is"]},{"Key":"`what` is","Fragments":["an"]},{"Key":"string, so","Fragments":["as","as"]},{"Key":"good practice,","Fragments":["you"]},{"Key":"practice, you","Fragments":["should"]},{"Key":"should add","Fragments":["some"]},{"Key":"some logic","Fragments":["to"]},{"Key":"logic to","Fragments":["ensure","remove","square"]},{"Key":"to ensure","Fragments":["`what`","`input.back()`","that","names","the"]},{"Key":"ensure `what`","Fragments":["isn't"]},{"Key":"`what` isn't","Fragments":["empty,"]},{"Key":"isn't empty,","Fragments":["especially"]},{"Key":"empty, especially","Fragments":["since..."]},{"Key":"- your","Fragments":["`is_*`"]},{"Key":"your `is_*`","Fragments":["functions"]},{"Key":"`is_*` functions","Fragments":["are"]},{"Key":"accessible to","Fragments":["external","the"]},{"Key":"to external","Fragments":["programs"]},{"Key":"external programs","Fragments":["that"]},{"Key":"programs that","Fragments":["use"]},{"Key":"this header.","Fragments":["The"]},{"Key":"header. The","Fragments":["only"]},{"Key":"be visible","Fragments":["to"]},{"Key":"visible to","Fragments":["the","the"]},{"Key":"suite is","Fragments":["`bob::hey`,"]},{"Key":"is `bob::hey`,","Fragments":["so"]},{"Key":"`bob::hey`, so","Fragments":["those"]},{"Key":"so those","Fragments":["other"]},{"Key":"those other","Fragments":["functions"]},{"Key":"be put","Fragments":["into"]},{"Key":" `trim()`","Fragments":["is"]},{"Key":"`trim()` is","Fragments":["also"]},{"Key":"also a","Fragments":["bit","regex","matter"]},{"Key":"indirect solution.","Fragments":["A"]},{"Key":"solution. A","Fragments":["more"]},{"Key":"A more","Fragments":["direct"]},{"Key":"more direct","Fragments":["approach"]},{"Key":"direct approach","Fragments":["would"]},{"Key":"test the","Fragments":["string"]},{"Key":"string using","Fragments":["`isblank()`"]},{"Key":"using `isblank()`","Fragments":["or"]},{"Key":"`isblank()` or","Fragments":["`isspace()`"]},{"Key":"or `isspace()`","Fragments":["(probably"]},{"Key":"`isspace()` (probably","Fragments":["the"]},{"Key":"(probably the","Fragments":["former)."]},{"Key":"of this,","Fragments":["I"]},{"Key":"this, I","Fragments":["realized","might"]},{"Key":"realized I","Fragments":["didn't"]},{"Key":"think through","Fragments":["a"]},{"Key":"particular design,","Fragments":["rather"]},{"Key":"design, rather","Fragments":["focused"]},{"Key":"rather focused","Fragments":["on"]},{"Key":"focused on","Fragments":["passing","passing"]},{"Key":"on passing","Fragments":["the","the"]},{"Key":"tests. It","Fragments":["ended","would"]},{"Key":"It ended","Fragments":["up"]},{"Key":"up that","Fragments":["I","memory"]},{"Key":"first processed","Fragments":["the"]},{"Key":"processed the","Fragments":["string"]},{"Key":"the Alpha","Fragments":["characters"]},{"Key":"Alpha characters","Fragments":["were"]},{"Key":"were capitalized","Fragments":["that"]},{"Key":"capitalized that","Fragments":["warrants"]},{"Key":"that warrants","Fragments":["a"]},{"Key":"warrants a","Fragments":["\"Whoa,"]},{"Key":"a \"Whoa,","Fragments":["chill"]},{"Key":"\"Whoa, chill","Fragments":["out!\""]},{"Key":"chill out!\"","Fragments":["response."]},{"Key":" Subsequently,","Fragments":["starting"]},{"Key":"Subsequently, starting","Fragments":["from"]},{"Key":"string, I","Fragments":["search"]},{"Key":"I search","Fragments":["for"]},{"Key":"this first","Fragments":["instances"]},{"Key":"first instances","Fragments":["of"]},{"Key":"instances of","Fragments":["(!,","the","some"]},{"Key":"of (!,","Fragments":["?,"]},{"Key":"(!, ?,","Fragments":["or"]},{"Key":"?, or","Fragments":[".)"]},{"Key":"or .)","Fragments":["to"]},{"Key":".) to","Fragments":["determine"]},{"Key":"determine the","Fragments":["appropriate","correct","reply","upper-bound"]},{"Key":"appropriate response","Fragments":["(\"Sure\"","given","string"]},{"Key":"response (\"Sure\"","Fragments":["and"]},{"Key":"(\"Sure\" and","Fragments":["\"Whatever\")."]},{"Key":"and \"Whatever\").","Fragments":["I"]},{"Key":"\"Whatever\"). I","Fragments":["used"]},{"Key":"a flag,","Fragments":["that"]},{"Key":"flag, that","Fragments":["if"]},{"Key":"that if","Fragments":["not","isSayingAnything","the","you","s2","block","there","I","it"]},{"Key":"if not","Fragments":["set,"]},{"Key":"not set,","Fragments":["denotes"]},{"Key":"set, denotes","Fragments":["the"]},{"Key":"denotes the","Fragments":["string"]},{"Key":"empty requiring","Fragments":["the"]},{"Key":"requiring the","Fragments":["the"]},{"Key":"the \"Fine","Fragments":["be"]},{"Key":"\"Fine be","Fragments":["that"]},{"Key":"that way","Fragments":["response.\"","because","(automatically"]},{"Key":"way response.\"","Fragments":["Everything"]},{"Key":"response.\" Everything","Fragments":["else"]},{"Key":"Everything else","Fragments":["receives","is"]},{"Key":"else receives","Fragments":["a"]},{"Key":"receives a","Fragments":["\"Whatever.\""]},{"Key":"a \"Whatever.\"","Fragments":["response"]},{"Key":"const unsigned","Fragments":["int\u0026"]},{"Key":"unsigned int\u0026","Fragments":["?"]},{"Key":"int\u0026 ?","Fragments":["Why"]},{"Key":"? Why","Fragments":["would"]},{"Key":"Why would","Fragments":["you"]},{"Key":"pass an","Fragments":["integral"]},{"Key":"an integral","Fragments":["type"]},{"Key":"integral type","Fragments":["by"]},{"Key":"type by","Fragments":["const"]},{"Key":"a submition","Fragments":["that"]},{"Key":"submition that","Fragments":["make"]},{"Key":"that make","Fragments":["use"]},{"Key":"got rid","Fragments":["of","of"]},{"Key":"rid of","Fragments":["the","the","those","the","the","them","these","it","the"]},{"Key":"namespace since","Fragments":["it"]},{"Key":"no value","Fragments":["anymore."]},{"Key":"the tip","Fragments":["in","about","@brook-au!"]},{"Key":"tip in","Fragments":["the"]},{"Key":"first bullet","Fragments":["point,"]},{"Key":"bullet point,","Fragments":["didn't"]},{"Key":"point, didn't","Fragments":["know"]},{"Key":"know that.","Fragments":["About"]},{"Key":"that. About","Fragments":["point"]},{"Key":"About point","Fragments":["number"]},{"Key":"point number","Fragments":["three:"]},{"Key":"number three:","Fragments":["I'm"]},{"Key":"three: I'm","Fragments":["new"]},{"Key":"I'm new","Fragments":["to","to"]},{"Key":"namespaces so","Fragments":["I"]},{"Key":"probably get","Fragments":["used","into"]},{"Key":"to this.","Fragments":["However"]},{"Key":"this. However","Fragments":["once"]},{"Key":"However once","Fragments":["that"]},{"Key":"once that","Fragments":["has"]},{"Key":"that has","Fragments":["been"]},{"Key":"been done,","Fragments":["an"]},{"Key":"done, an","Fragments":["empty"]},{"Key":"string would","Fragments":["be","crash"]},{"Key":"be caught","Fragments":["by"]},{"Key":"caught by","Fragments":["`is_silence`"]},{"Key":"by `is_silence`","Fragments":["before"]},{"Key":"`is_silence` before","Fragments":["it"]},{"Key":"before it","Fragments":["reaches","can"]},{"Key":"it reaches","Fragments":["`is_question`."]},{"Key":"reaches `is_question`.","Fragments":["But"]},{"Key":"`is_question`. But","Fragments":["in"]},{"Key":"But in","Fragments":["general"]},{"Key":"general I","Fragments":["agree","belong"]},{"Key":"avoid undefined","Fragments":["behavior.","behavior"]},{"Key":" Following","Fragments":["@andrew's","atifhans's"]},{"Key":"Following @andrew's","Fragments":["advice."]},{"Key":" Words1:","Fragments":["311017"]},{"Key":" Words2:","Fragments":["464026"]},{"Key":" Words3:","Fragments":["302017"]},{"Key":" Words4:","Fragments":["366020"]},{"Key":"I'm surprised","Fragments":["that"]},{"Key":"surprised that","Fragments":["the","your"]},{"Key":"the difference","Fragments":["is"]},{"Key":"is so","Fragments":["significant.","awesome!","clear"]},{"Key":" `resize`","Fragments":["is"]},{"Key":"`resize` is","Fragments":["required"]},{"Key":"to value-initialize","Fragments":["the"]},{"Key":"value-initialize the","Fragments":["added"]},{"Key":"the added","Fragments":["characters"]},{"Key":"added characters","Fragments":["which"]},{"Key":"characters which","Fragments":["translates","are","is"]},{"Key":"which translates","Fragments":["into"]},{"Key":"translates into","Fragments":["a"]},{"Key":"a `memset`","Fragments":["for"]},{"Key":"`memset` for","Fragments":["the"]},{"Key":"the optimized","Fragments":["build."]},{"Key":"optimized build.","Fragments":["And"]},{"Key":"build. And","Fragments":["there"]},{"Key":"And there","Fragments":["still"]},{"Key":"there still","Fragments":["are"]},{"Key":"still are","Fragments":["n"]},{"Key":"are n","Fragments":["assignments"]},{"Key":"n assignments","Fragments":["for"]},{"Key":"assignments for","Fragments":["a"]},{"Key":"string of","Fragments":["length","punctuation","the"]},{"Key":"of length","Fragments":["n"]},{"Key":"length n","Fragments":["since"]},{"Key":"n since","Fragments":["`transform`"]},{"Key":"since `transform`","Fragments":["is"]},{"Key":"`transform` is","Fragments":["guaranteed"]},{"Key":"is guaranteed","Fragments":["to","to"]},{"Key":"guaranteed to","Fragments":["have","be","be"]},{"Key":"change every","Fragments":["char."]},{"Key":"every char.","Fragments":["That's"]},{"Key":"char. That's","Fragments":["probably"]},{"Key":"probably where","Fragments":["the"]},{"Key":"extra time","Fragments":["is"]},{"Key":"time is","Fragments":["spent."]},{"Key":" They","Fragments":["are"]},{"Key":"They are","Fragments":["mostly","used"]},{"Key":"are mostly","Fragments":["the"]},{"Key":"mostly the","Fragments":["same"]},{"Key":"same thing,","Fragments":["although","and"]},{"Key":"thing, although","Fragments":["with"]},{"Key":"although with","Fragments":["small"]},{"Key":"with small","Fragments":["differences."]},{"Key":"small differences.","Fragments":["You"]},{"Key":"differences. You","Fragments":["can"]},{"Key":"can read","Fragments":["about"]},{"Key":"read about","Fragments":["it","them"]},{"Key":"about it","Fragments":["[here](http://stackoverflow.com/questions/154469/unnamed-anonymous-namespaces-vs-static-functions).","sooner."]},{"Key":"So here","Fragments":["it"]},{"Key":"here it","Fragments":["is.","is:"]},{"Key":"it is.","Fragments":["With","I"]},{"Key":"is. With","Fragments":["3"]},{"Key":"With 3","Fragments":["new"]},{"Key":"3 new","Fragments":["test"]},{"Key":"new test","Fragments":["cases","when"]},{"Key":"now passed","Fragments":["as","by"]},{"Key":"well. (And","Fragments":["some"]},{"Key":"(And some","Fragments":["minor"]},{"Key":"some minor","Fragments":["cosmetic"]},{"Key":"minor cosmetic","Fragments":["clean-up)."]},{"Key":" PS:","Fragments":["I'll"]},{"Key":"PS: I'll","Fragments":["do"]},{"Key":"I'll do","Fragments":["another"]},{"Key":"do another","Fragments":["iteration"]},{"Key":"another iteration","Fragments":["for"]},{"Key":"iteration for","Fragments":["not","comparison."]},{"Key":"for not","Fragments":["RTFM"]},{"Key":"not RTFM","Fragments":["of"]},{"Key":"RTFM of","Fragments":["exercism"]},{"Key":"of exercism","Fragments":[":)",":)"]},{"Key":"Now, I","Fragments":["hope,","think"]},{"Key":"I hope,","Fragments":["I"]},{"Key":"hope, I","Fragments":["also"]},{"Key":"also passes","Fragments":["the"]},{"Key":"the rules","Fragments":["of","say"]},{"Key":"rules of","Fragments":["exercism","C++"]},{"Key":"always liked","Fragments":["programming"]},{"Key":"liked programming","Fragments":["puzzles"]},{"Key":"programming puzzles","Fragments":["kind"]},{"Key":"puzzles kind","Fragments":["of"]},{"Key":"since I'm","Fragments":["currently"]},{"Key":"I'm currently","Fragments":["teaching"]},{"Key":"currently teaching","Fragments":["myself"]},{"Key":"teaching myself","Fragments":["some"]},{"Key":"myself some","Fragments":["C++"]},{"Key":"some C++","Fragments":["anyway"]},{"Key":"C++ anyway","Fragments":["and"]},{"Key":"anyway and","Fragments":["by"]},{"Key":"by chance","Fragments":["discovered"]},{"Key":"chance discovered","Fragments":["exercism"]},{"Key":"discovered exercism","Fragments":["I"]},{"Key":"exercism I","Fragments":["thought","just"]},{"Key":"thought I","Fragments":["might","was"]},{"Key":"I might","Fragments":["give","be","be","copy","try","make","see","look","need"]},{"Key":"give it","Fragments":["a"]},{"Key":"a try","Fragments":[":-)","on"]},{"Key":"the basics,","Fragments":["because"]},{"Key":"basics, because","Fragments":["so"]},{"Key":"because so","Fragments":["far"]},{"Key":"so far","Fragments":["I've","are"]},{"Key":"far I've","Fragments":["hardly"]},{"Key":"I've hardly","Fragments":["done"]},{"Key":"hardly done","Fragments":["any"]},{"Key":"any C++,","Fragments":["let"]},{"Key":"C++, let","Fragments":["alone"]},{"Key":"let alone","Fragments":["OOP"]},{"Key":"alone OOP","Fragments":["in"]},{"Key":"OOP in","Fragments":["C++"]},{"Key":"C++ or","Fragments":["using"]},{"Key":"or using","Fragments":["the","unnecessary"]},{"Key":"boost libraries","Fragments":["or","though,"]},{"Key":"or anything.","Fragments":["And"]},{"Key":"anything. And","Fragments":["then"]},{"Key":"And then","Fragments":["at","there"]},{"Key":"then at","Fragments":["the"]},{"Key":"beginning I","Fragments":["almost"]},{"Key":"I almost","Fragments":["began","went","forgot"]},{"Key":"almost began","Fragments":["over-engineering"]},{"Key":"began over-engineering","Fragments":["this"]},{"Key":"over-engineering this","Fragments":["before"]},{"Key":"this before","Fragments":["I"]},{"Key":"came to","Fragments":["this","mind.","the"]},{"Key":"think however,","Fragments":["there's"]},{"Key":"however, there's","Fragments":["a"]},{"Key":"a test","Fragments":["case","of"]},{"Key":"case missing","Fragments":["where"]},{"Key":"missing where","Fragments":["you"]},{"Key":"where you","Fragments":["yell","only"]},{"Key":"you yell","Fragments":["a"]},{"Key":"yell a","Fragments":["number"]},{"Key":"number at","Fragments":["Bob"]},{"Key":"at Bob","Fragments":["in"]},{"Key":"Bob in","Fragments":["a"]},{"Key":"way where","Fragments":["you"]},{"Key":"you only","Fragments":["use","compare"]},{"Key":"number (or","Fragments":["\"symbols\")"]},{"Key":"(or \"symbols\")","Fragments":["and"]},{"Key":"\"symbols\") and","Fragments":["the"]},{"Key":"the yell","Fragments":["is"]},{"Key":"yell is","Fragments":["defined"]},{"Key":"defined by","Fragments":["an"]},{"Key":"exclamation mark.","Fragments":["Something"]},{"Key":"mark. Something","Fragments":["like"]},{"Key":"Something like","Fragments":["\"4!\"."]},{"Key":"like \"4!\".","Fragments":["My"]},{"Key":"\"4!\". My","Fragments":["code"]},{"Key":"code wouldn't","Fragments":["pass"]},{"Key":"wouldn't pass","Fragments":["that"]},{"Key":"pass that","Fragments":["test."]},{"Key":" Frankly,","Fragments":["looking"]},{"Key":"Frankly, looking","Fragments":["at"]},{"Key":"at it","Fragments":["now,"]},{"Key":"it now,","Fragments":["after"]},{"Key":"now, after","Fragments":["a"]},{"Key":"a day,","Fragments":["I"]},{"Key":"day, I","Fragments":["doubt"]},{"Key":"I doubt","Fragments":["that"]},{"Key":"doubt that","Fragments":["my"]},{"Key":"my yell-detection","Fragments":["regex"]},{"Key":"yell-detection regex","Fragments":["is"]},{"Key":"is right,","Fragments":["despite"]},{"Key":"right, despite","Fragments":["passing"]},{"Key":"despite passing","Fragments":["all"]},{"Key":"And indeed","Fragments":["it"]},{"Key":"indeed it","Fragments":["doesn't."]},{"Key":"it doesn't.","Fragments":["Shouting"]},{"Key":"doesn't. Shouting","Fragments":["just"]},{"Key":"Shouting just","Fragments":["a"]},{"Key":"single word","Fragments":["without"]},{"Key":"word without","Fragments":["any"]},{"Key":"without any","Fragments":["following"]},{"Key":"any following","Fragments":["punctuation"]},{"Key":"following punctuation","Fragments":["also"]},{"Key":"punctuation also","Fragments":["fails."]},{"Key":"So I'll","Fragments":["soon"]},{"Key":"I'll soon","Fragments":["upload"]},{"Key":"soon upload","Fragments":["a"]},{"Key":"upload a","Fragments":["second","new","new"]},{"Key":"a second","Fragments":["iteration","function","function.","iteration"]},{"Key":"second iteration","Fragments":["with","and"]},{"Key":"iteration with","Fragments":["3"]},{"Key":"with 3","Fragments":["tests"]},{"Key":"3 tests","Fragments":["added"]},{"Key":"tests added","Fragments":["(also"]},{"Key":"added (also","Fragments":["in"]},{"Key":"(also in","Fragments":["the"]},{"Key":"code comment","Fragments":["for"]},{"Key":"fact, I","Fragments":["won't"]},{"Key":"I won't","Fragments":["remove","forget"]},{"Key":"won't remove","Fragments":["the"]},{"Key":"files because","Fragments":["they"]},{"Key":"test file.","Fragments":["I","You","Instead","G++","I'm"]},{"Key":"file. I","Fragments":["will","would"]},{"Key":"will then","Fragments":["just"]},{"Key":"then just","Fragments":["put"]},{"Key":"includes in","Fragments":["the","h"]},{"Key":" Nothing","Fragments":["dramatically"]},{"Key":"Nothing dramatically","Fragments":["changed"]},{"Key":"dramatically changed","Fragments":["on"]},{"Key":"changed on","Fragments":["this"]},{"Key":"this iteration,","Fragments":["the","simply","`isNumber`","polished","fixed"]},{"Key":"iteration, the","Fragments":["structure"]},{"Key":"the structure","Fragments":["of","it","of"]},{"Key":"structure of","Fragments":["program","the"]},{"Key":"of program","Fragments":["is"]},{"Key":"basically the","Fragments":["same."]},{"Key":" -I","Fragments":["ditched"]},{"Key":"-I ditched","Fragments":["the"]},{"Key":"ditched the","Fragments":["usage"]},{"Key":"return variables","Fragments":["in"]},{"Key":" -In","Fragments":["the"]},{"Key":"-In the","Fragments":["first"]},{"Key":"first iteration,","Fragments":["function"]},{"Key":"iteration, function","Fragments":["checkIfUpperCase"]},{"Key":"function checkIfUpperCase","Fragments":["counted"]},{"Key":"checkIfUpperCase counted","Fragments":["the"]},{"Key":"counted the","Fragments":["number"]},{"Key":"letters found.","Fragments":["I"]},{"Key":"found. I","Fragments":["replaced"]},{"Key":"I replaced","Fragments":["the","the"]},{"Key":"the counter","Fragments":["with"]},{"Key":"counter with","Fragments":["a"]},{"Key":"boolean because","Fragments":["the"]},{"Key":"exact amount","Fragments":["of"]},{"Key":"not important,","Fragments":["we"]},{"Key":"important, we","Fragments":["need"]},{"Key":"need only","Fragments":["to"]},{"Key":"only to","Fragments":["know","do"]},{"Key":"are any","Fragments":["or","parts"]},{"Key":"any or","Fragments":["none"]},{"Key":"or none","Fragments":["letters"]},{"Key":"none letters","Fragments":["in"]},{"Key":"I totally","Fragments":["agree","agree","agree"]},{"Key":"totally agree","Fragments":["with","with","that"]},{"Key":"you about","Fragments":["the","the"]},{"Key":"the `std::tolower`","Fragments":["part"]},{"Key":"`std::tolower` part","Fragments":["and"]},{"Key":"part and","Fragments":["can't"]},{"Key":"and can't","Fragments":["see"]},{"Key":"can't see","Fragments":["why","it,","any"]},{"Key":"see why","Fragments":["I"]},{"Key":"it sooner.","Fragments":["This"]},{"Key":"sooner. This","Fragments":["will"]},{"Key":"also speed","Fragments":["up"]},{"Key":"speed up","Fragments":["the"]},{"Key":"because a","Fragments":["loop"]},{"Key":"loop will","Fragments":["be","simply"]},{"Key":" About","Fragments":["the","your","the"]},{"Key":"About the","Fragments":["includes,","spaces"]},{"Key":"the includes,","Fragments":["I"]},{"Key":"includes, I","Fragments":["always"]},{"Key":"always put","Fragments":["them"]},{"Key":"file but","Fragments":["as"]},{"Key":"but as","Fragments":["we","you'll"]},{"Key":"as we","Fragments":["can't"]},{"Key":"we can't","Fragments":["see","submit"]},{"Key":"see it,","Fragments":["I","you're"]},{"Key":"will simply","Fragments":["remove","perform"]},{"Key":"simply remove","Fragments":["the"]},{"Key":"of header","Fragments":["files"]},{"Key":"files in","Fragments":["my","one"]},{"Key":"my code.","Fragments":["(And","I"]},{"Key":"code. (And","Fragments":["I"]},{"Key":"(And I","Fragments":["think"]},{"Key":"think `\u003ccctype\u003e`","Fragments":["is"]},{"Key":"`\u003ccctype\u003e` is","Fragments":["included"]},{"Key":"is included","Fragments":["with"]},{"Key":"included with","Fragments":["`\u003cstring\u003e`)"]},{"Key":"`for` loops,","Fragments":["theses"]},{"Key":"loops, theses","Fragments":["were"]},{"Key":"theses were","Fragments":["originally"]},{"Key":"were originally","Fragments":["both"]},{"Key":"originally both","Fragments":["`while`"]},{"Key":"both `while`","Fragments":["loops"]},{"Key":"`while` loops","Fragments":["until"]},{"Key":"loops until","Fragments":["I"]},{"Key":"that both","Fragments":["had","of"]},{"Key":"both had","Fragments":["an"]},{"Key":"had an","Fragments":["initialization","additional"]},{"Key":"an initialization","Fragments":["before"]},{"Key":"initialization before","Fragments":["the"]},{"Key":"a recurrent","Fragments":["incrementation."]},{"Key":" Changed","Fragments":["pass-by-value","\"ctype.h\"","up","to","bob"]},{"Key":"Changed pass-by-value","Fragments":["in"]},{"Key":"pass-by-value in","Fragments":["functions"]},{"Key":"in functions","Fragments":["to"]},{"Key":"to passing","Fragments":["by"]},{"Key":"the `if`s","Fragments":["you"]},{"Key":"`if`s you","Fragments":["could"]},{"Key":"use some","Fragments":["of","library","helper","of","OOP"]},{"Key":"stl methods","Fragments":["like"]},{"Key":"methods like","Fragments":["`std::islower`"]},{"Key":"like `std::islower`","Fragments":["or"]},{"Key":"`std::islower` or","Fragments":["`std::isblank`"]},{"Key":"or `std::isblank`","Fragments":["and"]},{"Key":"`std::isblank` and","Fragments":["so"]},{"Key":"so on.","Fragments":["That"]},{"Key":"on. That","Fragments":["could"]},{"Key":"That could","Fragments":["be"]},{"Key":"better because","Fragments":["these"]},{"Key":"because these","Fragments":["methods"]},{"Key":"these methods","Fragments":["uses"]},{"Key":"methods uses","Fragments":["the"]},{"Key":"uses the","Fragments":["current","ascii","input"]},{"Key":"- Removing","Fragments":["the"]},{"Key":"C includes","Fragments":["would"]},{"Key":"includes would","Fragments":["be"]},{"Key":"- Allowing","Fragments":["changes"]},{"Key":"Allowing changes","Fragments":["of"]},{"Key":"changes of","Fragments":["your"]},{"Key":"your `bool`","Fragments":["variables"]},{"Key":"`bool` variables","Fragments":["with"]},{"Key":"with `[\u0026]`","Fragments":["is"]},{"Key":"`[\u0026]` is","Fragments":["clever"]},{"Key":"is clever","Fragments":["but"]},{"Key":"clever but","Fragments":["I"]},{"Key":"dangerous in","Fragments":["some"]},{"Key":"some cases","Fragments":["so","by"]},{"Key":"so be","Fragments":["carfeul"]},{"Key":"be carfeul","Fragments":[";-)"]},{"Key":" Used","Fragments":["case","the","the","C++"]},{"Key":"Used case","Fragments":["insensitive"]},{"Key":"case insensitive","Fragments":["compare"]},{"Key":"insensitive compare","Fragments":["functions"]},{"Key":"compare functions","Fragments":["here."]},{"Key":"declare your","Fragments":["strings","char","```str2Length```"]},{"Key":"nice readable","Fragments":["way."]},{"Key":"readable way.","Fragments":["I"]},{"Key":"way. I","Fragments":["like","figured"]},{"Key":"you reference","Fragments":["which"]},{"Key":"reference which","Fragments":["STL"]},{"Key":"which STL","Fragments":["functions"]},{"Key":"STL functions","Fragments":["you're"]},{"Key":"functions you're","Fragments":["using"]},{"Key":"your include","Fragments":["statements."]},{"Key":"should look","Fragments":["into","like","at"]},{"Key":"look into","Fragments":["some","them.","the","the"]},{"Key":"some STL","Fragments":["string"]},{"Key":"STL string","Fragments":["functions"]},{"Key":"like std::isalpha()","Fragments":["and"]},{"Key":"std::isalpha() and","Fragments":["similar"]},{"Key":"and similar","Fragments":["character"]},{"Key":"similar character","Fragments":["handling"]},{"Key":"character handling","Fragments":["functions"]},{"Key":"handling functions","Fragments":["in"]},{"Key":"in \u003ccctype\u003e","Fragments":["(http://en.cppreference.com/w/cpp/string/byte/isalpha)"]},{"Key":"\u003ccctype\u003e (http://en.cppreference.com/w/cpp/string/byte/isalpha)","Fragments":["so"]},{"Key":"(http://en.cppreference.com/w/cpp/string/byte/isalpha) so","Fragments":["you"]},{"Key":"build either","Fragments":["your"]},{"Key":"either your","Fragments":["massive"]},{"Key":"your massive","Fragments":["reference"]},{"Key":"massive reference","Fragments":["strings/vectors"]},{"Key":"reference strings/vectors","Fragments":["(like"]},{"Key":"strings/vectors (like","Fragments":["string"]},{"Key":"(like string","Fragments":["const"]},{"Key":"const ALPHA)","Fragments":["or"]},{"Key":"ALPHA) or","Fragments":["your"]},{"Key":"your handspun","Fragments":["predicate"]},{"Key":"handspun predicate","Fragments":["functions"]},{"Key":"predicate functions","Fragments":["isCaps()"]},{"Key":"functions isCaps()","Fragments":["and"]},{"Key":"isCaps() and","Fragments":["isAlpha()."]},{"Key":" Object","Fragments":["oriented"]},{"Key":"Object oriented","Fragments":["and"]},{"Key":"oriented and","Fragments":["functional,"]},{"Key":"and functional,","Fragments":["what"]},{"Key":"functional, what","Fragments":["could"]},{"Key":"what could","Fragments":["be"]},{"Key":"Anyway, since","Fragments":["the"]},{"Key":"function mapping","Fragments":["capabilities"]},{"Key":"mapping capabilities","Fragments":["of"]},{"Key":"capabilities of","Fragments":["C++"]},{"Key":"C++ are","Fragments":["limited,"]},{"Key":"are limited,","Fragments":["I"]},{"Key":"limited, I","Fragments":["am"]},{"Key":"the 'equal'","Fragments":["algorithm"]},{"Key":"'equal' algorithm","Fragments":["with"]},{"Key":"algorithm with","Fragments":["a"]},{"Key":"a twist:","Fragments":["a"]},{"Key":"twist: a","Fragments":["lambda"]},{"Key":"predicate that","Fragments":["pretends"]},{"Key":"that pretends","Fragments":["that"]},{"Key":"pretends that","Fragments":["all"]},{"Key":"input strings","Fragments":["have","to"]},{"Key":"strings have","Fragments":["the"]},{"Key":"same characters.","Fragments":["Beware:","Whether"]},{"Key":"characters. Beware:","Fragments":["lambda"]},{"Key":"Beware: lambda","Fragments":["function"]},{"Key":"function does","Fragments":["its","not"]},{"Key":"does its","Fragments":["job"]},{"Key":"its job","Fragments":["by"]},{"Key":"job by","Fragments":["'capturing'"]},{"Key":"by 'capturing'","Fragments":["Hamming's"]},{"Key":"'capturing' Hamming's","Fragments":["distance."]},{"Key":"Hamming's distance.","Fragments":[":-)"]},{"Key":"way these","Fragments":["are"]},{"Key":"these are","Fragments":["set"]},{"Key":"are set","Fragments":["up,"]},{"Key":"set up,","Fragments":["I"]},{"Key":"up, I","Fragments":["found"]},{"Key":"keep everything","Fragments":["in"]},{"Key":"file since","Fragments":["it"]},{"Key":"it really","Fragments":["is","calculates","fits"]},{"Key":"really is","Fragments":["just"]},{"Key":"a library.","Fragments":["My"]},{"Key":"library. My","Fragments":["`[exercise].cpp`"]},{"Key":"My `[exercise].cpp`","Fragments":["file"]},{"Key":"`[exercise].cpp` file","Fragments":["is"]},{"Key":"empty and","Fragments":["never"]},{"Key":"and never","Fragments":["used."]},{"Key":"And feel","Fragments":["free"]},{"Key":"feel free","Fragments":["to"]},{"Key":"free to","Fragments":["poke","suggest"]},{"Key":"to poke","Fragments":["around"]},{"Key":"poke around","Fragments":["at"]},{"Key":"around at","Fragments":["my"]},{"Key":"my stuff!","Fragments":["I've"]},{"Key":"stuff! I've","Fragments":["tried"]},{"Key":"be active","Fragments":["about"]},{"Key":"active about","Fragments":["commenting"]},{"Key":"about commenting","Fragments":["on"]},{"Key":"commenting on","Fragments":["others'"]},{"Key":"on others'","Fragments":["work,"]},{"Key":"others' work,","Fragments":["but"]},{"Key":"work, but","Fragments":["I","you'll"]},{"Key":"am pretty","Fragments":["new"]},{"Key":"C++ so","Fragments":["there"]},{"Key":"so there","Fragments":["is","is","was","was"]},{"Key":"is bound","Fragments":["to"]},{"Key":"bound to","Fragments":["be"]},{"Key":"something wrong","Fragments":["with"]},{"Key":"with what","Fragments":["I","I"]},{"Key":" Oh","Fragments":["man,","cool"]},{"Key":"Oh man,","Fragments":["I"]},{"Key":"man, I","Fragments":["never"]},{"Key":"the trinary","Fragments":["if-then-else","operator"]},{"Key":"trinary if-then-else","Fragments":["operator"]},{"Key":"if-then-else operator","Fragments":["anymore."]},{"Key":"operator anymore.","Fragments":["Drives"]},{"Key":"anymore. Drives","Fragments":["me"]},{"Key":"Drives me","Fragments":["nuts."]},{"Key":"I liked","Fragments":["that"]},{"Key":"liked that","Fragments":["you"]},{"Key":"namespace rather","Fragments":["than"]},{"Key":"class. I","Fragments":["didn't","was","could"]},{"Key":"for mine,","Fragments":["didn't"]},{"Key":"mine, didn't","Fragments":["feel"]},{"Key":"like doing","Fragments":["a"]},{"Key":"a brute","Fragments":["force"]},{"Key":"brute force","Fragments":["through","method"]},{"Key":"force through","Fragments":["the"]},{"Key":"string programmatically","Fragments":[":)"]},{"Key":"programmatically :)","Fragments":["I'd"]},{"Key":":) I'd","Fragments":["bet"]},{"Key":"I'd bet","Fragments":["money"]},{"Key":"bet money","Fragments":["yours"]},{"Key":"money yours","Fragments":["is"]},{"Key":"yours is","Fragments":["faster"]},{"Key":"is faster","Fragments":["by"]},{"Key":"faster by","Fragments":["a"]},{"Key":"Good encapsulation,","Fragments":["using"]},{"Key":"encapsulation, using","Fragments":["the"]},{"Key":"the specialized","Fragments":["functions"]},{"Key":"specialized functions","Fragments":["to"]},{"Key":"to analyze","Fragments":["the"]},{"Key":"analyze the","Fragments":["string;"]},{"Key":"the string;","Fragments":["the"]},{"Key":"string; the","Fragments":["hey"]},{"Key":"function looks","Fragments":["really","odd"]},{"Key":"looks really","Fragments":["nice"]},{"Key":"really nice","Fragments":["now.","that"]},{"Key":"the isEmpty","Fragments":["function"]},{"Key":"isEmpty function","Fragments":["is"]},{"Key":"is fine;","Fragments":["however"]},{"Key":"fine; however","Fragments":["(and"]},{"Key":"however (and","Fragments":["this"]},{"Key":"(and this","Fragments":["applies"]},{"Key":"this applies","Fragments":["to"]},{"Key":"applies to","Fragments":["all"]},{"Key":"all your","Fragments":["new","iteration","errors","tests"]},{"Key":"your new","Fragments":["functions)"]},{"Key":"new functions)","Fragments":["it"]},{"Key":"functions) it","Fragments":["doesn't"]},{"Key":"need it's","Fragments":["own"]},{"Key":"own copy","Fragments":["of"]},{"Key":"string argument,","Fragments":["nor"]},{"Key":"argument, nor","Fragments":["does"]},{"Key":"nor does","Fragments":["it"]},{"Key":"it need","Fragments":["to"]},{"Key":"the contents","Fragments":["of"]},{"Key":"this argument.","Fragments":["Think"]},{"Key":"argument. Think","Fragments":["about"]},{"Key":"argument type","Fragments":["to"]},{"Key":"type to","Fragments":["eliminate"]},{"Key":"penalty of","Fragments":["making"]},{"Key":"string every","Fragments":["time","time"]},{"Key":"call the","Fragments":["function.","helper","first"]},{"Key":"you classified","Fragments":["things."]},{"Key":"classified things.","Fragments":["Can't"]},{"Key":"things. Can't","Fragments":["say"]},{"Key":"Can't say","Fragments":["I"]},{"Key":"say I","Fragments":["would've"]},{"Key":"I would've","Fragments":["done"]},{"Key":"would've done","Fragments":["it"]},{"Key":"done it","Fragments":["with","correct."]},{"Key":"but very","Fragments":["tidy"]},{"Key":"very tidy","Fragments":["and"]},{"Key":"tidy and","Fragments":["readable."]},{"Key":"and readable.","Fragments":["Shows","If"]},{"Key":"readable. Shows","Fragments":["some"]},{"Key":"Shows some","Fragments":["clever"]},{"Key":"some clever","Fragments":["use"]},{"Key":"clever use","Fragments":["of"]},{"Key":"the any_of,","Fragments":["none_of"]},{"Key":"any_of, none_of","Fragments":["and"]},{"Key":"none_of and","Fragments":["all_of."]},{"Key":"decided early","Fragments":["on"]},{"Key":"early on","Fragments":["that"]},{"Key":"expressions was","Fragments":["going"]},{"Key":"readable way","Fragments":["to"]},{"Key":"to bucket","Fragments":["the"]},{"Key":"bucket the","Fragments":["strings."]},{"Key":"strings. Happy","Fragments":["that"]},{"Key":"Happy that","Fragments":["I"]},{"Key":"write four","Fragments":["of"]},{"Key":"four of","Fragments":["them"]},{"Key":"get through","Fragments":["this."]},{"Key":"I programmed","Fragments":["way"]},{"Key":"programmed way","Fragments":["too"]},{"Key":"way too","Fragments":["much","high"]},{"Key":"much in","Fragments":["Perl,"]},{"Key":"in Perl,","Fragments":["so"]},{"Key":"Perl, so","Fragments":["regex"]},{"Key":"so regex","Fragments":["still"]},{"Key":"regex still","Fragments":["comes"]},{"Key":"still comes","Fragments":["pretty"]},{"Key":"comes pretty","Fragments":["easily"]},{"Key":"pretty easily","Fragments":["even"]},{"Key":"easily even","Fragments":["though"]},{"Key":"though it's","Fragments":["been","the","not"]},{"Key":"been years","Fragments":["since"]},{"Key":"years since","Fragments":["I've"]},{"Key":"since I've","Fragments":["coded"]},{"Key":"I've coded","Fragments":["in"]},{"Key":"coded in","Fragments":["it."]},{"Key":"The biggest","Fragments":["obstacle","issue"]},{"Key":"biggest obstacle","Fragments":["was"]},{"Key":"obstacle was","Fragments":["getting"]},{"Key":"getting reacquainted","Fragments":["with"]},{"Key":"reacquainted with","Fragments":["C++"]},{"Key":"with C++","Fragments":["and"]},{"Key":"C++ and","Fragments":["the","JS."]},{"Key":"the specifics","Fragments":["of"]},{"Key":"specifics of","Fragments":["C++11"]},{"Key":"C++11 syntax.","Fragments":["Initializing"]},{"Key":"syntax. Initializing","Fragments":["const"]},{"Key":"Initializing const","Fragments":["static"]},{"Key":"const static","Fragments":["member"]},{"Key":" Would've","Fragments":["liked"]},{"Key":"Would've liked","Fragments":["to"]},{"Key":"liked to","Fragments":["have"]},{"Key":"have seen","Fragments":["'?'","on","a"]},{"Key":"seen '?'","Fragments":["rather"]},{"Key":"'?' rather","Fragments":["than"]},{"Key":"than 63","Fragments":["in"]},{"Key":"63 in","Fragments":["the"]},{"Key":"The best","Fragments":["thing"]},{"Key":"best thing","Fragments":["about"]},{"Key":"thing about","Fragments":["this","exercism.io"]},{"Key":"only goes","Fragments":["through"]},{"Key":"goes through","Fragments":["the"]},{"Key":"string one","Fragments":["time."]},{"Key":"one time.","Fragments":["The"]},{"Key":"time. The","Fragments":["downside","\"for\"","verse_index"]},{"Key":"The downside","Fragments":["for"]},{"Key":"downside for","Fragments":["me"]},{"Key":"for me","Fragments":["is","to","to"]},{"Key":"me is","Fragments":["that","better)."]},{"Key":"it takes","Fragments":["a","no"]},{"Key":"of scrolling","Fragments":["up"]},{"Key":"scrolling up","Fragments":["and"]},{"Key":"up and","Fragments":["down","counting","I"]},{"Key":"and down","Fragments":["the"]},{"Key":"to reconcile","Fragments":["it"]},{"Key":"reconcile it","Fragments":["all."]},{"Key":"it all.","Fragments":["But"]},{"Key":"all. But","Fragments":["definitely"]},{"Key":"But definitely","Fragments":["I"]},{"Key":"definitely I","Fragments":["can"]},{"Key":"works and","Fragments":["while","meets","was"]},{"Key":"and while","Fragments":["it","handling"]},{"Key":"looks more","Fragments":["like"]},{"Key":"C approach","Fragments":["than"]},{"Key":"approach than","Fragments":["C++,"]},{"Key":"than C++,","Fragments":["I"]},{"Key":"the upside","Fragments":["of"]},{"Key":"upside of","Fragments":["only"]},{"Key":"only traversing","Fragments":["the"]},{"Key":" added","Fragments":[".h"]},{"Key":"added .h","Fragments":["as"]},{"Key":".h as","Fragments":["iteration"]},{"Key":"as iteration","Fragments":["1","2"]},{"Key":"iteration 1","Fragments":["and"]},{"Key":"1 and","Fragments":[".cpp","not"]},{"Key":".cpp as","Fragments":["iteration"]},{"Key":"a _minor_","Fragments":["nit,"]},{"Key":"_minor_ nit,","Fragments":["but"]},{"Key":"nit, but","Fragments":["there","look","I"]},{"Key":"a `string`","Fragments":["constructor","will"]},{"Key":"`string` constructor","Fragments":["that"]},{"Key":"constructor that","Fragments":["converts"]},{"Key":"that converts","Fragments":["a"]},{"Key":"converts a","Fragments":["`char"]},{"Key":"a `char","Fragments":["*`"]},{"Key":"`char *`","Fragments":["to"]},{"Key":"*` to","Fragments":["a"]},{"Key":"a `string`.","Fragments":["So","There's"]},{"Key":"`string`. So","Fragments":["I"]},{"Key":"just declared","Fragments":["the"]},{"Key":"declared the","Fragments":["arguments"]},{"Key":"to `compute`","Fragments":["as"]},{"Key":"`compute` as","Fragments":["`string`"]},{"Key":"as `string`","Fragments":["instead"]},{"Key":"`string` instead","Fragments":["of"]},{"Key":"of `char","Fragments":["*`,"]},{"Key":"`char *`,","Fragments":["so"]},{"Key":"*`, so","Fragments":["I"]},{"Key":"do an","Fragments":["explicit","extra"]},{"Key":"nice to","Fragments":["see","see","see","see","see","use"]},{"Key":"see knowledge","Fragments":["of"]},{"Key":"of map's","Fragments":["member"]},{"Key":"map's member","Fragments":["functions,"]},{"Key":"member functions,","Fragments":["and"]},{"Key":"functions, and","Fragments":["usage","simplified","I"]},{"Key":"and usage","Fragments":["of"]},{"Key":" Usage","Fragments":["of"]},{"Key":"Usage of","Fragments":["variable"]},{"Key":"like 'retval'","Fragments":["made"]},{"Key":"'retval' made","Fragments":["this"]},{"Key":"made this","Fragments":["somewhat","exercise"]},{"Key":"this somewhat","Fragments":["difficult"]},{"Key":"somewhat difficult","Fragments":["to"]},{"Key":"to glance","Fragments":["through,"]},{"Key":"glance through,","Fragments":["because"]},{"Key":"through, because","Fragments":["even"]},{"Key":"because even","Fragments":["though"]},{"Key":"the function,","Fragments":["it's"]},{"Key":"function, it's","Fragments":["nice"]},{"Key":"it's nice","Fragments":["to","to","and"]},{"Key":"see variable","Fragments":["names"]},{"Key":"names that","Fragments":["describe"]},{"Key":"that describe","Fragments":["the"]},{"Key":"describe the","Fragments":["data","task"]},{"Key":"the data","Fragments":["they","is","or"]},{"Key":"data they","Fragments":["represent."]},{"Key":"think all","Fragments":["of"]},{"Key":"of update_word_count()","Fragments":["can"]},{"Key":"update_word_count() can","Fragments":["be"]},{"Key":"you wanted","Fragments":["to","to","to"]},{"Key":"code tighter","Fragments":["and"]},{"Key":"keep yourself","Fragments":["from"]},{"Key":"yourself from","Fragments":["handing"]},{"Key":"from handing","Fragments":["a"]},{"Key":"handing a","Fragments":["bunch"]},{"Key":"of stuff","Fragments":["to"]},{"Key":"stuff to","Fragments":["that"]},{"Key":"to that","Fragments":["function.","in","function"]},{"Key":"tip about","Fragments":["passing"]},{"Key":"about passing","Fragments":["by"]},{"Key":"by reference.","Fragments":["IT's","When"]},{"Key":"reference. IT's","Fragments":["definitely"]},{"Key":"IT's definitely","Fragments":["something"]},{"Key":"definitely something","Fragments":["I'll"]},{"Key":"something I'll","Fragments":["have"]},{"Key":"I'll have","Fragments":["to","to","to"]},{"Key":"keep in","Fragments":["mind"]},{"Key":"mind working","Fragments":["through"]},{"Key":"working through","Fragments":["these"]},{"Key":"through these","Fragments":["exercises"]},{"Key":"exercises between","Fragments":["C++"]},{"Key":"between C++","Fragments":["and"]},{"Key":"and JS.","Fragments":["I'm"]},{"Key":"JS. I'm","Fragments":["also"]},{"Key":"I'm also","Fragments":["dropping","at","surprised","using"]},{"Key":"also dropping","Fragments":["regexes"]},{"Key":"dropping regexes","Fragments":["since"]},{"Key":"regexes since","Fragments":["right"]},{"Key":"since right","Fragments":["now"]},{"Key":"now they","Fragments":["seem"]},{"Key":"they seem","Fragments":["overly"]},{"Key":"seem overly","Fragments":["complicated."]},{"Key":"As far","Fragments":["as"]},{"Key":"site goes,","Fragments":["it"]},{"Key":"goes, it","Fragments":["also"]},{"Key":"it also","Fragments":["says","felt","helps","extends","becomes"]},{"Key":"also says","Fragments":["to"]},{"Key":"submit if","Fragments":["you"]},{"Key":"you get","Fragments":["stuck,","to","undefined","the"]},{"Key":"get stuck,","Fragments":["and"]},{"Key":"stuck, and","Fragments":["to"]},{"Key":"to describe","Fragments":["what","the"]},{"Key":"describe what","Fragments":["you've"]},{"Key":"what you've","Fragments":["done"]},{"Key":"and what","Fragments":["you're","are"]},{"Key":"to do,","Fragments":["so"]},{"Key":"do, so","Fragments":["that's"]},{"Key":"that's what","Fragments":["I","came"]},{"Key":"I did.","Fragments":["Getting"]},{"Key":"did. Getting","Fragments":["some"]},{"Key":"Getting some","Fragments":["feedback"]},{"Key":"some feedback","Fragments":["on"]},{"Key":"feedback on","Fragments":["my","this,"]},{"Key":"my JS","Fragments":["implementation"]},{"Key":"JS implementation","Fragments":["and"]},{"Key":"and this","Fragments":["one","one.","has","solution."]},{"Key":"one are","Fragments":["helping"]},{"Key":"are helping","Fragments":["me"]},{"Key":"helping me","Fragments":["get"]},{"Key":"me get","Fragments":["in"]},{"Key":"right direction,","Fragments":["so"]},{"Key":"direction, so","Fragments":["I"]},{"Key":"I appreciate","Fragments":["your","the"]},{"Key":"appreciate your","Fragments":["feedback,"]},{"Key":"your feedback,","Fragments":["@isaias."]},{"Key":"This should","Fragments":["reduce"]},{"Key":"should reduce","Fragments":["the"]},{"Key":"overall work","Fragments":["done"]},{"Key":"done by","Fragments":["first"]},{"Key":"by first","Fragments":["pre-computing"]},{"Key":"first pre-computing","Fragments":["the"]},{"Key":"pre-computing the","Fragments":["sorted"]},{"Key":"by short-circuiting","Fragments":["at"]},{"Key":"short-circuiting at","Fragments":["each"]},{"Key":"at each","Fragments":["test","iteration"]},{"Key":"is disqualified","Fragments":["as"]},{"Key":"disqualified as","Fragments":["being"]},{"Key":"as being","Fragments":["an"]},{"Key":"being an","Fragments":["anagram."]},{"Key":"also tried","Fragments":["to"]},{"Key":"of copies","Fragments":["of"]},{"Key":"data generated","Fragments":["by"]},{"Key":"generated by","Fragments":["the"]},{"Key":" Pretty","Fragments":["simple,"]},{"Key":"Pretty simple,","Fragments":["iterate"]},{"Key":"simple, iterate","Fragments":["through"]},{"Key":"iterate through","Fragments":["the","each"]},{"Key":"input vector,","Fragments":["compare"]},{"Key":"vector, compare","Fragments":["each"]},{"Key":"compare each","Fragments":["word"]},{"Key":"word against","Fragments":["the"]},{"Key":"a vector","Fragments":["of","of","of","of","of","-","and"]},{"Key":"The check","Fragments":["for"]},{"Key":"for anagram","Fragments":["is","use"]},{"Key":"the meat","Fragments":["of"]},{"Key":"meat of","Fragments":["the"]},{"Key":"code. Taking","Fragments":["care"]},{"Key":"Taking care","Fragments":["of"]},{"Key":"few special","Fragments":["cases"]},{"Key":"cases at","Fragments":["the"]},{"Key":"the isAnagram()","Fragments":["function."]},{"Key":"isAnagram() function.","Fragments":["Then"]},{"Key":"function. Then","Fragments":["iterate"]},{"Key":"Then iterate","Fragments":["through"]},{"Key":"letter of","Fragments":["the","the","the"]},{"Key":"reference word.","Fragments":["If"]},{"Key":"word. If","Fragments":["it"]},{"Key":"If it","Fragments":["is","was","is","does"]},{"Key":"is found","Fragments":["in","is"]},{"Key":"comparison word,","Fragments":["then"]},{"Key":"word, then","Fragments":["remove"]},{"Key":"then remove","Fragments":["it"]},{"Key":"it until","Fragments":["all"]},{"Key":"until all","Fragments":["the"]},{"Key":"letters have","Fragments":["been"]},{"Key":"been found,","Fragments":["returning"]},{"Key":"found, returning","Fragments":["early"]},{"Key":"returning early","Fragments":["if"]},{"Key":"early if","Fragments":["a"]},{"Key":"a letter","Fragments":["isn't"]},{"Key":"letter isn't","Fragments":["found."]},{"Key":"few minor","Fragments":["cleanups"]},{"Key":"minor cleanups","Fragments":["(naming"]},{"Key":"cleanups (naming","Fragments":["and"]},{"Key":"(naming and","Fragments":["remove"]},{"Key":"and remove","Fragments":["an"]},{"Key":"remove an","Fragments":["unused"]},{"Key":"an unused","Fragments":["header)","temporary"]},{"Key":"unused header)","Fragments":["between"]},{"Key":"header) between","Fragments":["the"]},{"Key":"first iteration","Fragments":["and"]},{"Key":"iteration and","Fragments":["this","added","it"]},{"Key":"one. No","Fragments":["algorithm"]},{"Key":"No algorithm","Fragments":["changes."]},{"Key":" __THIS","Fragments":["ITERATION"]},{"Key":"__THIS ITERATION","Fragments":["WAS"]},{"Key":"ITERATION WAS","Fragments":["ACCIDENTALLY"]},{"Key":"WAS ACCIDENTALLY","Fragments":["SUBMITTED__"]},{"Key":" *The","Fragments":["only"]},{"Key":"*The only","Fragments":["difference"]},{"Key":"only difference","Fragments":["is","would"]},{"Key":"that `m_word`","Fragments":["is"]},{"Key":"`m_word` is","Fragments":["called"]},{"Key":" __Note:__","Fragments":["*Nitpicks","*Nitpicks","*Nitpicks"]},{"Key":"__Note:__ *Nitpicks","Fragments":["Needed*","Needed*","Needed*"]},{"Key":"this project","Fragments":["to","to","to"]},{"Key":"project to","Fragments":["be","be","be","debug."]},{"Key":"be challenging","Fragments":["to","to","to"]},{"Key":"challenging to","Fragments":["express","express","express"]},{"Key":"to express","Fragments":["in","in","in","the","the"]},{"Key":"express in","Fragments":["a","a","a"]},{"Key":"concise manner","Fragments":["and","and","and"]},{"Key":"manner and","Fragments":["I","I","I"]},{"Key":"believe my","Fragments":["code","code","code"]},{"Key":"code shows","Fragments":["that","that","that"]},{"Key":"shows that","Fragments":["through","through","through"]},{"Key":"that through","Fragments":["complication.","complication.","complication."]},{"Key":"look out","Fragments":["for","for","for"]},{"Key":"out for","Fragments":["is:","is:","is:","copy_if."]},{"Key":" \u003cul\u003e\u003cli\u003eMy","Fragments":["use","use","use"]},{"Key":"\u003cul\u003e\u003cli\u003eMy use","Fragments":["of","of","of"]},{"Key":"an entire","Fragments":["dictionary","dictionary","dictionary"]},{"Key":"entire dictionary","Fragments":["to","to","to"]},{"Key":"dictionary to","Fragments":["pass","pass","pass"]},{"Key":"pass one","Fragments":["test;","test;","test;"]},{"Key":"one test;","Fragments":["how","how","how"]},{"Key":"test; how","Fragments":["could","could","could"]},{"Key":"how could","Fragments":["this","this","this"]},{"Key":"could this","Fragments":["be","be","be"]},{"Key":"this be","Fragments":["replaced?","replaced","replaced"]},{"Key":"be replaced?","Fragments":["Which"]},{"Key":"replaced? Which","Fragments":["would"]},{"Key":"would solve\u003cul\u003e\u003cli\u003eMy","Fragments":["platform"]},{"Key":"solve\u003cul\u003e\u003cli\u003eMy platform","Fragments":["dependecy\u003c/li\u003e\u003cli\u003eOver"]},{"Key":"platform dependecy\u003c/li\u003e\u003cli\u003eOver","Fragments":["complication","complication","complication"]},{"Key":"dependecy\u003c/li\u003e\u003cli\u003eOver complication","Fragments":["of","of","of"]},{"Key":"complication of","Fragments":["code\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e","code\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e","code\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e"]},{"Key":"\u003cli\u003e `matches()`","Fragments":["takes","takes","takes","takes"]},{"Key":"`matches()` takes","Fragments":["a","a","a","a"]},{"Key":"words and","Fragments":["for","for","for","for","I"]},{"Key":"and for","Fragments":["each","each","each","each","this"]},{"Key":"each one","Fragments":["checks","checks","checks","checks","is"]},{"Key":"one checks","Fragments":["if","if","if","if"]},{"Key":"checks if","Fragments":["`isValid()`.","`isValid()`.","`isValid()`.","`isValid()`.","input","the","the"]},{"Key":"if `isValid()`.","Fragments":["\u003c/li\u003e","\u003c/li\u003e","\u003c/li\u003e","\u003c/li\u003e"]},{"Key":"\u003cli\u003e A","Fragments":["`word`","`word`","`word`","`word`"]},{"Key":"A `word`","Fragments":["`isValid()`","`isValid()`","`isValid()`","`isValid()`"]},{"Key":"`word` `isValid()`","Fragments":["if","if","if","if"]},{"Key":"`isValid()` if","Fragments":["it","it","it","it"]},{"Key":"an anagram;","Fragments":["it","it","it","it"]},{"Key":"anagram; it","Fragments":["is","is","is","is"]},{"Key":"length as","Fragments":["the","the","the","the"]},{"Key":"stored anagram","Fragments":["but","but","but","and"]},{"Key":"anagram but","Fragments":["is","is","is"]},{"Key":"but is","Fragments":["a","a","a"]},{"Key":"different dictionary","Fragments":["word","word","word"]},{"Key":"dictionary word","Fragments":["that","that","that"]},{"Key":"word that","Fragments":["contains","contains","contains"]},{"Key":"contains all","Fragments":["of","of","of"]},{"Key":" \u003cli\u003eif","Fragments":["`isValid`","`isValid`","`isValid`","`isValid`"]},{"Key":"\u003cli\u003eif `isValid`","Fragments":["returns","returns","returns","returns"]},{"Key":"`isValid` returns","Fragments":["true","true","true","true"]},{"Key":"is inserted","Fragments":["into","into","into","into"]},{"Key":"the match","Fragments":["`vector`\u003c/li\u003e","`vector`\u003c/li\u003e","`vector`\u003c/li\u003e","`vector`\u003c/li\u003e","function,"]},{"Key":"\u003cli\u003eThe match","Fragments":["`vector`","`vector`","`vector`","`vector`"]},{"Key":"match `vector`","Fragments":["is","is","is","is"]},{"Key":"`vector` is","Fragments":["returned\u003c/li\u003e","returned\u003c/li\u003e","returned\u003c/li\u003e","returned\u003c/li\u003e"]},{"Key":"dictionary a","Fragments":["lot","lot","lot"]},{"Key":"of processing","Fragments":["power","power","power"]},{"Key":"processing power","Fragments":["is","is","is"]},{"Key":"power is","Fragments":["used","used","used"]},{"Key":"used storing","Fragments":["and","and","and"]},{"Key":"storing and","Fragments":["searching","searching","searching"]},{"Key":"and searching","Fragments":["it;","it;","it;"]},{"Key":"searching it;","Fragments":["this","this","this"]},{"Key":"it; this","Fragments":["is","is","is"]},{"Key":"large performance","Fragments":["bottleneck.\u003c/li\u003e","bottleneck.\u003c/li\u003e","benefit.","bottleneck.\u003c/li\u003e"]},{"Key":"I implement","Fragments":["my","my","my"]},{"Key":"implement my","Fragments":["dictionary,","dictionary,","dictionary,","own."]},{"Key":"my dictionary,","Fragments":["this","this","this"]},{"Key":"dictionary, this","Fragments":["program","program","program"]},{"Key":"program only","Fragments":["runs","runs","runs"]},{"Key":"runs on","Fragments":["*most","*most","*most"]},{"Key":"on *most","Fragments":["unix","unix","unix"]},{"Key":"*most unix","Fragments":["devices*","devices*","devices*"]},{"Key":"unix devices*","Fragments":["something","something","something"]},{"Key":"devices* something","Fragments":["that","that","that"]},{"Key":"that should","Fragments":["be","be","be"]},{"Key":"be avoided","Fragments":["at","at","at"]},{"Key":"avoided at","Fragments":["all","all","all"]},{"Key":"__Changes from","Fragments":["iteration","iteration","iteration"]},{"Key":"\u003cli\u003e As","Fragments":["iteration"]},{"Key":"As iteration","Fragments":["2"]},{"Key":"2 states","Fragments":["it"]},{"Key":"states it","Fragments":["was"]},{"Key":"an accidental","Fragments":["upload"]},{"Key":"accidental upload","Fragments":["only"]},{"Key":"upload only","Fragments":["containing"]},{"Key":"only containing","Fragments":["the"]},{"Key":"the change","Fragments":["of","would"]},{"Key":"change of","Fragments":["`m_word`"]},{"Key":"of `m_word`","Fragments":["to"]},{"Key":"`m_word` to","Fragments":["`m_anagram`"]},{"Key":"to `m_anagram`","Fragments":["to"]},{"Key":"`m_anagram` to","Fragments":["make","lowercase"]},{"Key":"clearer when","Fragments":["it"]},{"Key":"being operated","Fragments":["on.\u003c/li\u003e"]},{"Key":" \u003cli\u003eAn","Fragments":["instance"]},{"Key":"\u003cli\u003eAn instance","Fragments":["of"]},{"Key":"of `isWord()`","Fragments":["which"]},{"Key":"`isWord()` which","Fragments":["was"]},{"Key":"was unecessary","Fragments":["and"]},{"Key":"unecessary and","Fragments":["greatly"]},{"Key":"and greatly","Fragments":["reduced"]},{"Key":"greatly reduced","Fragments":["performance"]},{"Key":"reduced performance","Fragments":["due"]},{"Key":"performance due","Fragments":["to"]},{"Key":"dictionary search","Fragments":["has"]},{"Key":"search has","Fragments":["been"]},{"Key":"replaced to","Fragments":["help","help"]},{"Key":"to help","Fragments":["solve...\u003cul\u003e\u003cli\u003eMy","solve...\u003cul\u003e\u003cli\u003eMy","with"]},{"Key":"help solve...\u003cul\u003e\u003cli\u003eMy","Fragments":["platform","platform"]},{"Key":"solve...\u003cul\u003e\u003cli\u003eMy platform","Fragments":["dependecy\u003c/li\u003e\u003cli\u003eOver","dependecy\u003c/li\u003e\u003cli\u003eOver"]},{"Key":"think iteration","Fragments":["12"]},{"Key":"iteration 12","Fragments":["is"]},{"Key":"12 is","Fragments":["a"]},{"Key":"better algorithm,","Fragments":["but"]},{"Key":"algorithm, but","Fragments":["wanted"]},{"Key":"but wanted","Fragments":["to"]},{"Key":"a ranged","Fragments":["'for'"]},{"Key":"ranged 'for'","Fragments":["to"]},{"Key":"'for' to","Fragments":["see"]},{"Key":"it made","Fragments":["it","sense","my"]},{"Key":"Hey man,","Fragments":["just"]},{"Key":"man, just","Fragments":["thought"]},{"Key":"just thought","Fragments":["I'd","it"]},{"Key":"thought I'd","Fragments":["let"]},{"Key":"I'd let","Fragments":["you"]},{"Key":"let you","Fragments":["know"]},{"Key":"the behavior","Fragments":["of"]},{"Key":"behavior of","Fragments":["the"]},{"Key":"the `copy_string_to_lower()`","Fragments":["function"]},{"Key":"`copy_string_to_lower()` function","Fragments":["can"]},{"Key":"the `boost`","Fragments":["library"]},{"Key":"`boost` library","Fragments":["as"]},{"Key":"library as","Fragments":["`boost::to_lower_copy()`"]},{"Key":"as `boost::to_lower_copy()`","Fragments":["if"]},{"Key":"`boost::to_lower_copy()` if","Fragments":["you'd"]},{"Key":"if you'd","Fragments":["be"]},{"Key":"you'd be","Fragments":["interested"]},{"Key":"in shortening","Fragments":["your"]},{"Key":"shortening your","Fragments":["code"]},{"Key":"In what","Fragments":["case"]},{"Key":"what case","Fragments":["passing"]},{"Key":"case passing","Fragments":["scope"]},{"Key":"passing scope","Fragments":["variables"]},{"Key":"scope variables","Fragments":["to"]},{"Key":"to lambda","Fragments":["by"]},{"Key":"lambda by","Fragments":["reference"]},{"Key":"Got rid","Fragments":["of"]},{"Key":"the vector\u003cchar\u003e","Fragments":["in"]},{"Key":"vector\u003cchar\u003e in","Fragments":["favor"]},{"Key":"in favor","Fragments":["of"]},{"Key":"favor of","Fragments":["strings."]},{"Key":" Cleaned","Fragments":["the"]},{"Key":"Cleaned the","Fragments":["code"]},{"Key":"code up","Fragments":["a"]},{"Key":" Shortened","Fragments":["AnagramFinder"]},{"Key":"Shortened AnagramFinder","Fragments":["to"]},{"Key":"AnagramFinder to","Fragments":["Anagram."]},{"Key":"trinary operator","Fragments":[":)"]},{"Key":"operator :)","Fragments":["the"]},{"Key":":) the","Fragments":["nice"]},{"Key":"the nice","Fragments":["side"]},{"Key":"nice side","Fragments":["of"]},{"Key":"side of","Fragments":["it"]},{"Key":"it reduces","Fragments":["the"]},{"Key":"reduces the","Fragments":["lines"]},{"Key":"the lines","Fragments":["of"]},{"Key":"code compared","Fragments":["to"]},{"Key":"compared to","Fragments":["if-then-else","mine.","sorting","opt","other's"]},{"Key":"to if-then-else","Fragments":["structures."]},{"Key":"class would","Fragments":["be","even","have"]},{"Key":"bit too","Fragments":["heavy","complicated."]},{"Key":"too heavy","Fragments":["approach"]},{"Key":"heavy approach","Fragments":["to"]},{"Key":"exercise with","Fragments":["all"]},{"Key":"the constructors,","Fragments":["destructors"]},{"Key":"constructors, destructors","Fragments":["etc."]},{"Key":"destructors etc.","Fragments":["In"]},{"Key":"In addition,","Fragments":["there","the"]},{"Key":"addition, there","Fragments":["is"]},{"Key":"for multiple","Fragments":["instances."]},{"Key":"Maybe I","Fragments":["could","come"]},{"Key":"write also","Fragments":["a"]},{"Key":"regex version","Fragments":["in"]},{"Key":"version in","Fragments":["the"]},{"Key":"next iteration.","Fragments":["We'll","It'd"]},{"Key":"iteration. We'll","Fragments":["see."]},{"Key":"Moved normalized","Fragments":["string"]},{"Key":"normalized string","Fragments":["to"]},{"Key":"class level,","Fragments":["thanks"]},{"Key":"level, thanks","Fragments":["to"]},{"Key":"to @antonetta's","Fragments":["version."]},{"Key":" Modified","Fragments":["`matches`"]},{"Key":"Modified `matches`","Fragments":["algorithm."]},{"Key":" ######","Fragments":["Functionality","Style"]},{"Key":"###### Functionality","Fragments":["Issues"]},{"Key":"* if","Fragments":["you"]},{"Key":"you insert","Fragments":["word"]},{"Key":"insert word","Fragments":["into"]},{"Key":"time `words[currentWord]`","Fragments":["value"]},{"Key":"`words[currentWord]` value","Fragments":["will"]},{"Key":"value will","Fragments":["be","never"]},{"Key":"be undefined","Fragments":["thus,"]},{"Key":"undefined thus,","Fragments":["result"]},{"Key":"thus, result","Fragments":["of"]},{"Key":"of pre-increment","Fragments":["on"]},{"Key":"pre-increment on","Fragments":["value"]},{"Key":"on value","Fragments":["of"]},{"Key":"of `words[currentWord]`","Fragments":["is"]},{"Key":"`words[currentWord]` is","Fragments":["undefined."]},{"Key":"is undefined.","Fragments":["int"]},{"Key":"undefined. int","Fragments":["does"]},{"Key":"int does","Fragments":["not"]},{"Key":"have default","Fragments":["constructor"]},{"Key":"not guaranteed","Fragments":["to"]},{"Key":"0 on","Fragments":["initialization."]},{"Key":"###### Style","Fragments":["notes"]},{"Key":"* no","Fragments":["need"]},{"Key":"to initialize","Fragments":["std::string","bobsAnswer","all"]},{"Key":"initialize std::string","Fragments":["to"]},{"Key":"std::string to","Fragments":["empty"]},{"Key":"to empty","Fragments":["string"]},{"Key":"string -","Fragments":["this","it"]},{"Key":"is default","Fragments":["constructor"]},{"Key":"constructor behavior","Fragments":["(line"]},{"Key":"behavior (line","Fragments":["10)"]},{"Key":"* `currentWorld`","Fragments":["definition"]},{"Key":"`currentWorld` definition","Fragments":["should"]},{"Key":"definition should","Fragments":["match"]},{"Key":"should match","Fragments":["usage"]},{"Key":"match usage","Fragments":["scope:"]},{"Key":"usage scope:","Fragments":["right"]},{"Key":"scope: right","Fragments":["before"]},{"Key":"* favor","Fragments":["using"]},{"Key":"favor using","Fragments":["empty()"]},{"Key":"using empty()","Fragments":["over"]},{"Key":"empty() over","Fragments":["checking"]},{"Key":"over checking","Fragments":["container"]},{"Key":"checking container","Fragments":["value."]},{"Key":"container value.","Fragments":["`if(currentWord.empty())"]},{"Key":"value. `if(currentWord.empty())","Fragments":["...`"]},{"Key":"`if(currentWord.empty()) ...`","Fragments":["(line"]},{"Key":"...` (line","Fragments":["17)"]},{"Key":"know, it","Fragments":["just"]},{"Key":"just feel","Fragments":["like"]},{"Key":"it. (Sorry,","Fragments":["it's"]},{"Key":"(Sorry, it's","Fragments":["not"]},{"Key":"really good","Fragments":["point)","that","also","use","to"]},{"Key":"nitpick, I","Fragments":["will"]},{"Key":"variable naming","Fragments":["of"]},{"Key":"naming of","Fragments":["the"]},{"Key":"the iterator.","Fragments":["It","Most"]},{"Key":"iterator. It","Fragments":["makes"]},{"Key":"makes its","Fragments":["purpose"]},{"Key":"its purpose","Fragments":["very"]},{"Key":"purpose very","Fragments":["clear."]},{"Key":" Solution","Fragments":["to"]},{"Key":"Solution to","Fragments":["the"]},{"Key":"and tight,","Fragments":["well"]},{"Key":"tight, well","Fragments":["executed."]},{"Key":" Where","Fragments":["you"]},{"Key":"Where you","Fragments":["have"]},{"Key":"have ```word=","Fragments":["\"\";```,"]},{"Key":"```word= \"\";```,","Fragments":["perhaps"]},{"Key":"\"\";```, perhaps","Fragments":["the"]},{"Key":"perhaps the","Fragments":["more"]},{"Key":"the more","Fragments":["STL","general","straightforward"]},{"Key":"more STL","Fragments":["way"]},{"Key":"STL way","Fragments":["to"]},{"Key":"to reinitialize","Fragments":["the"]},{"Key":"reinitialize the","Fragments":["string"]},{"Key":" Finished","Fragments":["updating"]},{"Key":"Finished updating","Fragments":["cases"]},{"Key":"updating cases","Fragments":["and"]},{"Key":"and simplified","Fragments":["some"]},{"Key":"simplified some","Fragments":["cases"]},{"Key":"cases by","Fragments":["removing"]},{"Key":"removing redundant","Fragments":["and"]},{"Key":"redundant and","Fragments":["empty"]},{"Key":"and empty","Fragments":["conditions"]},{"Key":"empty conditions","Fragments":["from"]},{"Key":"conditions from","Fragments":["the"]},{"Key":"the prior","Fragments":["iteration."]},{"Key":"However, right","Fragments":["now"]},{"Key":"now there's","Fragments":["a"]},{"Key":"problem in","Fragments":["isSilence()"]},{"Key":"in isSilence()","Fragments":["regarding"]},{"Key":"isSilence() regarding","Fragments":["the"]},{"Key":"regarding the","Fragments":["14th"]},{"Key":"the 14th","Fragments":["test"]},{"Key":"14th test","Fragments":["case"]},{"Key":"is \"\".","Fragments":["Based"]},{"Key":"\"\". Based","Fragments":["on"]},{"Key":"Based on","Fragments":["the"]},{"Key":"and testing","Fragments":["in"]},{"Key":"testing in","Fragments":["Coliru,"]},{"Key":"Coliru, we","Fragments":["should"]},{"Key":"we should","Fragments":["be","definitely","certainly"]},{"Key":"be receiving","Fragments":["the"]},{"Key":"receiving the","Fragments":["correct"]},{"Key":"correct output","Fragments":["from"]},{"Key":"output from","Fragments":["hey(),"]},{"Key":"from hey(),","Fragments":["but"]},{"Key":"hey(), but","Fragments":["in"]},{"Key":"in VS2013+Boost,","Fragments":["we"]},{"Key":"VS2013+Boost, we","Fragments":["receive"]},{"Key":"we receive","Fragments":["an"]},{"Key":"receive an","Fragments":["\"Assertion"]},{"Key":"an \"Assertion","Fragments":["failed:"]},{"Key":"\"Assertion failed:","Fragments":["string"]},{"Key":"failed: string","Fragments":["subscript","subscript"]},{"Key":"string subscript","Fragments":["out","out"]},{"Key":"subscript out","Fragments":["of","of"]},{"Key":"of range\"","Fragments":["error.","and"]},{"Key":"range\" error.","Fragments":["Right"]},{"Key":"error. Right","Fragments":["now,"]},{"Key":"Right now,","Fragments":["I"]},{"Key":"now, I","Fragments":["can't"]},{"Key":"tell why","Fragments":["that's"]},{"Key":"why that's","Fragments":["being"]},{"Key":"that's being","Fragments":["thrown"]},{"Key":"being thrown","Fragments":["other"]},{"Key":"thrown other","Fragments":["than"]},{"Key":"than something","Fragments":["one"]},{"Key":"something one","Fragments":["compiler"]},{"Key":"one compiler","Fragments":["is"]},{"Key":"compiler is","Fragments":["picking"]},{"Key":"is picking","Fragments":["up"]},{"Key":"picking up","Fragments":["on"]},{"Key":"other is","Fragments":["not."]},{"Key":"is not.","Fragments":["Any","The"]},{"Key":"not. Any","Fragments":["thoughts?","specific"]},{"Key":"like i","Fragments":["got"]},{"Key":"this thing","Fragments":["\"differently\"..."]},{"Key":"thing \"differently\"...","Fragments":["May"]},{"Key":"\"differently\"... May","Fragments":["be"]},{"Key":"May be","Fragments":["will"]},{"Key":"be will","Fragments":["give"]},{"Key":"will give","Fragments":["another"]},{"Key":"give another","Fragments":["go"]},{"Key":"another go","Fragments":["later."]},{"Key":"see I'm","Fragments":["quite"]},{"Key":"I'm quite","Fragments":["newbie"]},{"Key":"quite newbie","Fragments":["with"]},{"Key":"newbie with","Fragments":["C++."]},{"Key":"Also i","Fragments":["should"]},{"Key":"i should","Fragments":["do"]},{"Key":"this without","Fragments":["that"]},{"Key":"without that","Fragments":["boost"]},{"Key":"would suggest.","Fragments":["Remove"]},{"Key":"suggest. Remove","Fragments":["the"]},{"Key":"Remove the","Fragments":["empty"]},{"Key":"the empty","Fragments":["else","string"]},{"Key":"empty else","Fragments":["statements."]},{"Key":"else statements.","Fragments":["There"]},{"Key":"statements. There","Fragments":["is"]},{"Key":"no reason","Fragments":["to","other","to"]},{"Key":"Also instead","Fragments":["of"]},{"Key":"of having","Fragments":["to","to"]},{"Key":"silence and","Fragments":["yelling,","yelling."]},{"Key":"and yelling,","Fragments":["you"]},{"Key":"yelling, you","Fragments":["could"]},{"Key":"could loop","Fragments":["through","over"]},{"Key":"do both","Fragments":["checks."]},{"Key":"both checks.","Fragments":["Small"]},{"Key":"checks. Small","Fragments":["optimization."]},{"Key":"can change","Fragments":["your","that"]},{"Key":"your isQuestion","Fragments":["function","will"]},{"Key":"isQuestion function","Fragments":["to"]},{"Key":"just do...","Fragments":["return"]},{"Key":"do... return","Fragments":["input.back()"]},{"Key":"return input.back()","Fragments":["=="]},{"Key":"input.back() ==","Fragments":["'?';"]},{"Key":"== '?';","Fragments":["You"]},{"Key":"'?'; You","Fragments":["don't"]},{"Key":"extra ispunct","Fragments":["check"]},{"Key":"ispunct check","Fragments":["since"]},{"Key":"check since","Fragments":["you"]},{"Key":"are explicitly","Fragments":["looking"]},{"Key":"explicitly looking","Fragments":["for"]},{"Key":"forgot a","Fragments":["case."]},{"Key":"If there","Fragments":["is","is"]},{"Key":"is nothing","Fragments":["said"]},{"Key":"nothing said","Fragments":["to"]},{"Key":"said to","Fragments":["bob"]},{"Key":"to bob","Fragments":["you","to"]},{"Key":"bob you","Fragments":["are"]},{"Key":"are supposed","Fragments":["to","to","to"]},{"Key":"to respond","Fragments":["with"]},{"Key":"respond with","Fragments":["\"Fine."]},{"Key":"with \"Fine.","Fragments":["Be"]},{"Key":"other test","Fragments":["cases"]},{"Key":"cases test","Fragments":["this."]},{"Key":"Also a","Fragments":["cool"]},{"Key":"a cool","Fragments":["thing"]},{"Key":"cool thing","Fragments":["with"]},{"Key":"thing with","Fragments":["std::string."]},{"Key":"std::string. Instead","Fragments":["of"]},{"Key":"the substr","Fragments":["with"]},{"Key":"substr with","Fragments":["the"]},{"Key":"just do","Fragments":["this."]},{"Key":"do this.","Fragments":["text.back()","Investigate"]},{"Key":"this. text.back()","Fragments":["=="]},{"Key":"text.back() ==","Fragments":["'?'"]},{"Key":"took some","Fragments":["advice"]},{"Key":"some advice","Fragments":["from"]},{"Key":"advice from","Fragments":["@jedidiah","@jedidiah"]},{"Key":"from @jedidiah","Fragments":["and","regarding"]},{"Key":"@jedidiah and","Fragments":["had"]},{"Key":"and had","Fragments":["`word`"]},{"Key":"had `word`","Fragments":["call"]},{"Key":"`word` call","Fragments":["`word.clear()`"]},{"Key":"call `word.clear()`","Fragments":["instead"]},{"Key":"`word.clear()` instead","Fragments":["of"]},{"Key":"of `word","Fragments":["="]},{"Key":"`word =","Fragments":["\"\"`."]},{"Key":"= \"\"`.","Fragments":["I"]},{"Key":"\"\"`. I","Fragments":["also"]},{"Key":"also saw","Fragments":["some"]},{"Key":"saw some","Fragments":["good","other"]},{"Key":"some good","Fragments":["advice"]},{"Key":"good advice","Fragments":["from"]},{"Key":"@jedidiah regarding","Fragments":["using"]},{"Key":"regarding using","Fragments":["the"]},{"Key":"the imcrementor","Fragments":["on"]},{"Key":"imcrementor on","Fragments":["the"]},{"Key":"the `map\u003cstring,","Fragments":["int\u003e`","int\u003e`"]},{"Key":"`map\u003cstring, int\u003e`","Fragments":["variable","variable"]},{"Key":"int\u003e` variable","Fragments":["without","from"]},{"Key":"variable without","Fragments":["an"]},{"Key":"an initialized","Fragments":["value"]},{"Key":"initialized value","Fragments":["for"]},{"Key":"value for","Fragments":["the"]},{"Key":"the `int`.","Fragments":["Instead"]},{"Key":"`int`. Instead","Fragments":["of"]},{"Key":"of incorrectly","Fragments":["assuming"]},{"Key":"incorrectly assuming","Fragments":["that"]},{"Key":"assuming that","Fragments":["it"]},{"Key":"be zero-initialized,","Fragments":["the"]},{"Key":"zero-initialized, the","Fragments":["code"]},{"Key":"code now","Fragments":["checks"]},{"Key":"now checks","Fragments":["to"]},{"Key":"sure the","Fragments":["mapped","silence","string","tests","character"]},{"Key":"mapped element","Fragments":["exists"]},{"Key":"element exists","Fragments":["before"]},{"Key":"exists before","Fragments":["incrementing,"]},{"Key":"before incrementing,","Fragments":["and"]},{"Key":"incrementing, and","Fragments":["initializing"]},{"Key":"and initializing","Fragments":["to"]},{"Key":"initializing to","Fragments":["1"]},{"Key":"to 1","Fragments":["otherwise."]},{"Key":"added the","Fragments":["call","logic"]},{"Key":"the call","Fragments":["to","to","to","to","to","is","to","to","out"]},{"Key":"to `.count()`","Fragments":["on"]},{"Key":"`.count()` on","Fragments":["line"]},{"Key":"line 26,","Fragments":["I"]},{"Key":"26, I","Fragments":["changed"]},{"Key":"variable from","Fragments":["`counts`"]},{"Key":"from `counts`","Fragments":["to"]},{"Key":"`counts` to","Fragments":["`tally`."]},{"Key":"to `tally`.","Fragments":["I"]},{"Key":"`tally`. I","Fragments":["believe"]},{"Key":"that maintains","Fragments":["the"]},{"Key":"maintains the","Fragments":["readability"]},{"Key":"readability of","Fragments":["the"]},{"Key":"Made sure","Fragments":["the"]},{"Key":"the silence","Fragments":["response"]},{"Key":"silence response","Fragments":["was"]},{"Key":"response was","Fragments":["before"]},{"Key":"was before","Fragments":["the"]},{"Key":"question response","Fragments":["so"]},{"Key":"response so","Fragments":["if"]},{"Key":"empty it","Fragments":["would","will"]},{"Key":"would never","Fragments":["call"]},{"Key":"call .back()","Fragments":["since"]},{"Key":".back() since","Fragments":["that"]},{"Key":"throw an","Fragments":["exception","exception.","exception","exception","error.","error","exception","exception","exception"]},{"Key":"an exception","Fragments":["if","should","in","anymore.","if","would","sounds","or","though","when","when","or"]},{"Key":"exception if","Fragments":["the","passed","the"]},{"Key":"After some","Fragments":["tests,","reading,","thoughts,"]},{"Key":"some tests,","Fragments":["I"]},{"Key":"tests, I","Fragments":["started"]},{"Key":"started using","Fragments":["`regex`"]},{"Key":"using `regex`","Fragments":["library"]},{"Key":"`regex` library","Fragments":["because"]},{"Key":"had seen","Fragments":["the"]},{"Key":"seen the","Fragments":["name","use"]},{"Key":"the name","Fragments":["of","is","(which"]},{"Key":"name of","Fragments":["the"]},{"Key":"the library","Fragments":["in","implementation"]},{"Key":"C++ book.","Fragments":["I"]},{"Key":"book. I","Fragments":["just"]},{"Key":"just followed","Fragments":["the"]},{"Key":"and compiler","Fragments":["error"]},{"Key":"The definition","Fragments":["of"]},{"Key":"of `yell`","Fragments":["is"]},{"Key":"`yell` is","Fragments":["a"]},{"Key":"bit dubious","Fragments":["to"]},{"Key":"dubious to","Fragments":["me."]},{"Key":" @dasia","Fragments":["while"]},{"Key":"@dasia while","Fragments":["the"]},{"Key":"the `ispunct`","Fragments":["call"]},{"Key":"`ispunct` call","Fragments":["is"]},{"Key":"call is","Fragments":["unnecessary,","to"]},{"Key":"is unnecessary,","Fragments":["it"]},{"Key":"unnecessary, it","Fragments":["would"]},{"Key":"practice (but","Fragments":["not"]},{"Key":"(but not","Fragments":["vital"]},{"Key":"not vital","Fragments":["with"]},{"Key":"vital with","Fragments":["reagards"]},{"Key":"with reagards","Fragments":["to"]},{"Key":"reagards to","Fragments":["the"]},{"Key":"test suite)","Fragments":["to"]},{"Key":"suite) to","Fragments":["include"]},{"Key":"include something","Fragments":["to"]},{"Key":"ensure `input.back()`","Fragments":["isn't"]},{"Key":"`input.back()` isn't","Fragments":["called"]},{"Key":"isn't called","Fragments":["when"]},{"Key":"called when","Fragments":["`input`"]},{"Key":"when `input`","Fragments":["is"]},{"Key":"`input` is","Fragments":["blank."]},{"Key":"is blank.","Fragments":["Referencing"]},{"Key":"blank. Referencing","Fragments":["\"last"]},{"Key":"Referencing \"last","Fragments":["character\""]},{"Key":"\"last character\"","Fragments":["using"]},{"Key":"character\" using","Fragments":["square"]},{"Key":"using square","Fragments":["brackets"]},{"Key":"square brackets","Fragments":["will"]},{"Key":"brackets will","Fragments":["also"]},{"Key":"also have","Fragments":["this","used"]},{"Key":"I second","Fragments":["the"]},{"Key":"second the","Fragments":["optimization"]},{"Key":"the optimization","Fragments":["suggestion"]},{"Key":"optimization suggestion","Fragments":["regarding"]},{"Key":"suggestion regarding","Fragments":["one"]},{"Key":"regarding one","Fragments":["read-through"]},{"Key":"one read-through","Fragments":["for"]},{"Key":"read-through for","Fragments":["silence"]},{"Key":"and yelling.","Fragments":["It"]},{"Key":"yelling. It","Fragments":["may"]},{"Key":"small boost","Fragments":["when"]},{"Key":"boost when","Fragments":["you're"]},{"Key":"when you're","Fragments":["only"]},{"Key":"you're only","Fragments":["running"]},{"Key":"only running","Fragments":["~10"]},{"Key":"running ~10","Fragments":["test"]},{"Key":"~10 test","Fragments":["cases,"]},{"Key":"test cases,","Fragments":["but","which"]},{"Key":"cases, but","Fragments":["in"]},{"Key":"of scalability,","Fragments":["that"]},{"Key":"scalability, that","Fragments":["is"]},{"Key":"relatively large","Fragments":["performance"]},{"Key":"you compare","Fragments":["your","at"]},{"Key":"compare your","Fragments":["code"]},{"Key":"that which","Fragments":["others"]},{"Key":"which others","Fragments":["have,"]},{"Key":"others have,","Fragments":["you'll"]},{"Key":"have, you'll","Fragments":["see"]},{"Key":"you'll see","Fragments":["that","all","from"]},{"Key":"have quite","Fragments":["some"]},{"Key":"some room","Fragments":["to"]},{"Key":"room to","Fragments":["make"]},{"Key":"concise. Getting","Fragments":["rid"]},{"Key":"Getting rid","Fragments":["of"]},{"Key":"those pointless","Fragments":["`else`"]},{"Key":"pointless `else`","Fragments":["sections"]},{"Key":"`else` sections","Fragments":["is"]},{"Key":"sections is","Fragments":["a"]},{"Key":"a start,","Fragments":["and"]},{"Key":"start, and","Fragments":["combining"]},{"Key":"and combining","Fragments":["iterations"]},{"Key":"combining iterations","Fragments":["over"]},{"Key":"string will","Fragments":["help"]},{"Key":"help as","Fragments":["well."]},{"Key":" @jabari","Fragments":["Does"]},{"Key":"@jabari Does","Fragments":["putting"]},{"Key":"Does putting","Fragments":["the"]},{"Key":"the `currentWorld`","Fragments":["declaration"]},{"Key":"`currentWorld` declaration","Fragments":["inside"]},{"Key":"declaration inside","Fragments":["of","of"]},{"Key":"loop not","Fragments":["mean"]},{"Key":"not mean","Fragments":["that"]},{"Key":"mean that","Fragments":["for"]},{"Key":"every iteration","Fragments":["of","of","which"]},{"Key":"iteration of","Fragments":["the","N","the","the"]},{"Key":"the loop,","Fragments":["the","even","less"]},{"Key":"loop, the","Fragments":["program"]},{"Key":"program will","Fragments":["allocate","call"]},{"Key":"will allocate","Fragments":["a","new"]},{"Key":"allocate a","Fragments":["new"]},{"Key":"new variable","Fragments":["for"]},{"Key":"variable for","Fragments":["`currentWord`?","\"sentence[i]\"","that."]},{"Key":"for `currentWord`?","Fragments":["I"]},{"Key":"`currentWord`? I","Fragments":["might"]},{"Key":"be wrong,","Fragments":["but"]},{"Key":"wrong, but","Fragments":["at"]},{"Key":"but at","Fragments":["least"]},{"Key":"least in","Fragments":["Java","this"]},{"Key":"Java that","Fragments":["was"]},{"Key":"something I","Fragments":["was","did"]},{"Key":"was told","Fragments":["to"]},{"Key":" Sure...","Fragments":["doing"]},{"Key":"Sure... doing","Fragments":["a"]},{"Key":"a empty","Fragments":["check"]},{"Key":"empty check","Fragments":["before"]},{"Key":"check before","Fragments":["you"]},{"Key":"a back()","Fragments":["would"]},{"Key":"back() would","Fragments":["be"]},{"Key":"be good.","Fragments":["I"]},{"Key":"same thing","Fragments":["in","without","what"]},{"Key":"thing in","Fragments":["my","a"]},{"Key":"confused by","Fragments":["your"]},{"Key":"by your","Fragments":["last","`hey`","initialisation","function"]},{"Key":"your last","Fragments":["paragraph.","suggestion."]},{"Key":"last paragraph.","Fragments":["You"]},{"Key":"paragraph. You","Fragments":["say"]},{"Key":"You say","Fragments":["my"]},{"Key":"say my","Fragments":["code"]},{"Key":"concise. Can","Fragments":["you"]},{"Key":"you give","Fragments":["examples","me"]},{"Key":"give examples","Fragments":["of"]},{"Key":"examples of","Fragments":["improvements","this"]},{"Key":"of improvements","Fragments":["I"]},{"Key":"improvements I","Fragments":["can"]},{"Key":"make. Go","Fragments":["ahead"]},{"Key":"Go ahead","Fragments":["and"]},{"Key":"ahead and","Fragments":["comment","implemented","boiled","submitted"]},{"Key":"and comment","Fragments":["on"]},{"Key":"I let","Fragments":["me"]},{"Key":"me drive","Fragments":["by"]},{"Key":"drive by","Fragments":["the"]},{"Key":"tests and","Fragments":["that's","that","the","checked","interpret"]},{"Key":"and that's","Fragments":["what","all","it,"]},{"Key":"what came","Fragments":["out"]},{"Key":" Whoops!","Fragments":["I"]},{"Key":"Whoops! I","Fragments":["meant"]},{"Key":"I meant","Fragments":["to","using"]},{"Key":"that @penelope","Fragments":["'s"]},{"Key":"@penelope 's","Fragments":["code"]},{"Key":"'s code","Fragments":["was"]},{"Key":"code was","Fragments":["very"]},{"Key":"was very","Fragments":["long.","similar","similar"]},{"Key":"very long.","Fragments":["I"]},{"Key":"long. I","Fragments":["wasn't"]},{"Key":"wasn't trying","Fragments":["to"]},{"Key":"to address","Fragments":["your"]},{"Key":"address your","Fragments":["code"]},{"Key":"code (I","Fragments":["haven't"]},{"Key":"(I haven't","Fragments":["actually"]},{"Key":"haven't actually","Fragments":["looked"]},{"Key":"actually looked","Fragments":["at"]},{"Key":"at it).","Fragments":["My"]},{"Key":"it). My","Fragments":["apologies."]},{"Key":" @orpha","Fragments":["The"]},{"Key":"@orpha The","Fragments":["program"]},{"Key":"The program","Fragments":["will"]},{"Key":"will call","Fragments":["constructor"]},{"Key":"call constructor","Fragments":["and"]},{"Key":"and destructor","Fragments":["of"]},{"Key":"destructor of","Fragments":["std::string"]},{"Key":"std::string but","Fragments":["not"]},{"Key":"not necessarily","Fragments":["allocate"]},{"Key":"necessarily allocate","Fragments":["and"]},{"Key":"allocate and","Fragments":["deallocate"]},{"Key":"and deallocate","Fragments":["memory."]},{"Key":"deallocate memory.","Fragments":["(If"]},{"Key":"memory. (If","Fragments":["my"]},{"Key":"(If my","Fragments":["memory"]},{"Key":"memory serves","Fragments":["me"]},{"Key":"serves me","Fragments":["right)"]},{"Key":"me right)","Fragments":["Only"]},{"Key":"right) Only","Fragments":["if"]},{"Key":"Only if","Fragments":["word"]},{"Key":"than 15","Fragments":["-"]},{"Key":"15 -","Fragments":["it"]},{"Key":"- it","Fragments":["will","is"]},{"Key":"allocate new","Fragments":["buffer."]},{"Key":"Also, the","Fragments":["focus","code","test","only"]},{"Key":"the focus","Fragments":["of"]},{"Key":"focus of","Fragments":["this"]},{"Key":"is on","Fragments":["cleanliness"]},{"Key":"on cleanliness","Fragments":["rather"]},{"Key":"cleanliness rather","Fragments":["than"]},{"Key":"than performance,","Fragments":["hence"]},{"Key":"performance, hence","Fragments":["the"]},{"Key":"hence the","Fragments":["comment"]},{"Key":"the comment","Fragments":["in"]},{"Key":"comment in","Fragments":["'Style","at"]},{"Key":"in 'Style","Fragments":["Notes'"]},{"Key":" PS.","Fragments":["Java"]},{"Key":"PS. Java","Fragments":["allocates"]},{"Key":"Java allocates","Fragments":["all"]},{"Key":"allocates all","Fragments":["objects"]},{"Key":"all objects","Fragments":["on"]},{"Key":"objects on","Fragments":["the"]},{"Key":"heap -","Fragments":["cost"]},{"Key":"- cost","Fragments":["of"]},{"Key":"cost of","Fragments":["such","some"]},{"Key":"of such","Fragments":["construct"]},{"Key":"such construct","Fragments":["in"]},{"Key":"construct in","Fragments":["java","C++11."]},{"Key":"in java","Fragments":["would"]},{"Key":"java would","Fragments":["be"]},{"Key":"be higher","Fragments":["than"]},{"Key":"higher than","Fragments":["in","the"]},{"Key":"than in","Fragments":["c++"]},{"Key":" Decided","Fragments":["to","to"]},{"Key":"Decided to","Fragments":["pass","use"]},{"Key":"pass arguments","Fragments":["as"]},{"Key":"string references,","Fragments":["accessed"]},{"Key":"references, accessed","Fragments":["strings"]},{"Key":"accessed strings","Fragments":["using"]},{"Key":"strings using","Fragments":["array"]},{"Key":"using array","Fragments":["notation."]},{"Key":"working to","Fragments":["take"]},{"Key":"to take","Fragments":["these","note","a","`dna`"]},{"Key":"take these","Fragments":["comments"]},{"Key":"these comments","Fragments":["into"]},{"Key":"comments into","Fragments":["account"]},{"Key":"into account","Fragments":["for","when"]},{"Key":"account for","Fragments":["the"]},{"Key":"next iteration","Fragments":["now.","and"]},{"Key":"iteration now.","Fragments":["I'll"]},{"Key":"now. I'll","Fragments":["post"]},{"Key":"I'll post","Fragments":["that"]},{"Key":"post that","Fragments":["once"]},{"Key":"that once","Fragments":["it's"]},{"Key":"once it's","Fragments":["complete."]},{"Key":"way, is","Fragments":["there"]},{"Key":"any reason","Fragments":["why"]},{"Key":"reason why","Fragments":["when","you"]},{"Key":"why when","Fragments":["testing"]},{"Key":"when testing","Fragments":["for"]},{"Key":"for outputs","Fragments":["in"]},{"Key":"outputs in","Fragments":["Coliru"]},{"Key":"in Coliru","Fragments":["the"]},{"Key":"Coliru the","Fragments":["code"]},{"Key":"code returns","Fragments":["as"]},{"Key":"returns as","Fragments":["expected,"]},{"Key":"as expected,","Fragments":["but"]},{"Key":"expected, but","Fragments":["when"]},{"Key":"when using","Fragments":["VS2013+Boost","string"]},{"Key":"using VS2013+Boost","Fragments":["it"]},{"Key":"VS2013+Boost it","Fragments":["fails"]},{"Key":"it fails","Fragments":["for"]},{"Key":"fails for","Fragments":["the"]},{"Key":"the \"silence\"","Fragments":["test?"]},{"Key":"\"silence\" test?","Fragments":["The"]},{"Key":"test? The","Fragments":["system"]},{"Key":"The system","Fragments":["keeps"]},{"Key":"system keeps","Fragments":["returning"]},{"Key":"keeps returning","Fragments":["\"unknown"]},{"Key":"returning \"unknown","Fragments":["location(0):"]},{"Key":"\"unknown location(0):","Fragments":["fatal"]},{"Key":"location(0): fatal","Fragments":["error"]},{"Key":"fatal error","Fragments":["in","in","in"]},{"Key":"in \"silence\":","Fragments":["C:\\Program"]},{"Key":"\"silence\": C:\\Program","Fragments":["Files"]},{"Key":"C:\\Program Files","Fragments":["(x86)\\Microsoft"]},{"Key":"Files (x86)\\Microsoft","Fragments":["Visual"]},{"Key":"(x86)\\Microsoft Visual","Fragments":["Studio"]},{"Key":"Visual Studio","Fragments":["12.0\\VC\\include\\xstring(1698)"]},{"Key":"Studio 12.0\\VC\\include\\xstring(1698)","Fragments":[":"]},{"Key":"12.0\\VC\\include\\xstring(1698) :","Fragments":["Assertion"]},{"Key":": Assertion","Fragments":["failed:"]},{"Key":"Assertion failed:","Fragments":["string"]},{"Key":"range\" and","Fragments":["I"]},{"Key":"can't figure","Fragments":["out"]},{"Key":"out why,","Fragments":["unless"]},{"Key":"why, unless","Fragments":["it's"]},{"Key":"unless it's","Fragments":["something"]},{"Key":"it's something","Fragments":["related","I"]},{"Key":"something related","Fragments":["to"]},{"Key":"related to","Fragments":["how","that"]},{"Key":"how it's","Fragments":["checking"]},{"Key":"checking empty","Fragments":["cases,"]},{"Key":"empty cases,","Fragments":["as"]},{"Key":"cases, as","Fragments":["you"]},{"Key":"you both","Fragments":["mentioned."]},{"Key":"\u003cli\u003eThe `if`","Fragments":["check"]},{"Key":"`if` check","Fragments":["for"]},{"Key":"for size","Fragments":["equality"]},{"Key":"size equality","Fragments":["which"]},{"Key":"equality which","Fragments":["ensures"]},{"Key":"which ensures","Fragments":["that"]},{"Key":"ensures that","Fragments":["a"]},{"Key":"a substring","Fragments":["is"]},{"Key":"substring is","Fragments":["not"]},{"Key":"not detected","Fragments":["has"]},{"Key":"detected has","Fragments":["been"]},{"Key":"now handled","Fragments":["by","in-class"]},{"Key":"regex which","Fragments":["check"]},{"Key":"which check","Fragments":["for"]},{"Key":" \u003cli\u003e`fillDictionary()`","Fragments":["now"]},{"Key":"\u003cli\u003e`fillDictionary()` now","Fragments":["throws"]},{"Key":"now throws","Fragments":["a"]},{"Key":"throws a","Fragments":["`std::logic_error`"]},{"Key":"a `std::logic_error`","Fragments":["when"]},{"Key":"`std::logic_error` when","Fragments":["a"]},{"Key":"when a","Fragments":["non-unix","question"]},{"Key":"a non-unix","Fragments":["system"]},{"Key":"non-unix system","Fragments":["is"]},{"Key":"system is","Fragments":["recognized.\u003c/li\u003e"]},{"Key":" \u003cli\u003eTransforming","Fragments":["`m_anagram`"]},{"Key":"\u003cli\u003eTransforming `m_anagram`","Fragments":["to"]},{"Key":"lowercase is","Fragments":["now"]},{"Key":"handled in-class","Fragments":["as"]},{"Key":"in-class as","Fragments":["it"]},{"Key":" \u003cli\u003e`m_anagram`","Fragments":["is"]},{"Key":"\u003cli\u003e`m_anagram` is","Fragments":["checked"]},{"Key":"is checked","Fragments":["for","for"]},{"Key":"emptyness before","Fragments":["any"]},{"Key":"before any","Fragments":["other"]},{"Key":"any other","Fragments":["operation;"]},{"Key":"other operation;","Fragments":["returning"]},{"Key":"operation; returning","Fragments":["if"]},{"Key":"returning if","Fragments":["it","any"]},{"Key":"check that","Fragments":["two","each","along"]},{"Key":"that two","Fragments":["words"]},{"Key":"and contain","Fragments":["all"]},{"Key":"contain all","Fragments":["the"]},{"Key":"characters. Whether","Fragments":["they're"]},{"Key":"Whether they're","Fragments":["in"]},{"Key":"they're in","Fragments":["a"]},{"Key":"dictionary is","Fragments":["beside"]},{"Key":"is beside","Fragments":["the"]},{"Key":"beside the","Fragments":["point."]},{"Key":" @lonzo","Fragments":["I've"]},{"Key":"@lonzo I've","Fragments":["grown"]},{"Key":"I've grown","Fragments":["accustomed"]},{"Key":"grown accustomed","Fragments":["to"]},{"Key":"accustomed to","Fragments":["const"]},{"Key":"const referencing","Fragments":["objects","primitives."]},{"Key":"referencing objects","Fragments":["that"]},{"Key":"objects that","Fragments":["it's"]},{"Key":"it's become","Fragments":["(to"]},{"Key":"become (to","Fragments":["my"]},{"Key":"my detriment)","Fragments":["second"]},{"Key":"detriment) second","Fragments":["nature"]},{"Key":"second nature","Fragments":["when"]},{"Key":"nature when","Fragments":["writing"]},{"Key":"when writing","Fragments":["function"]},{"Key":"writing function","Fragments":["parameters,"]},{"Key":"function parameters,","Fragments":["never"]},{"Key":"parameters, never","Fragments":["once"]},{"Key":"never once","Fragments":["thinking"]},{"Key":"once thinking","Fragments":["about"]},{"Key":"the consequences","Fragments":["of"]},{"Key":"consequences of","Fragments":["const"]},{"Key":"Your question","Fragments":["and"]},{"Key":"question and","Fragments":["the","not"]},{"Key":"the accepted","Fragments":["answer"]},{"Key":"accepted answer","Fragments":["to"]},{"Key":"answer to","Fragments":["[this](http://stackoverflow.com/questions/3009543/passing-integers-as-constant-references-versus-copying)","this:","your"]},{"Key":"to [this](http://stackoverflow.com/questions/3009543/passing-integers-as-constant-references-versus-copying)","Fragments":["Stack"]},{"Key":"[this](http://stackoverflow.com/questions/3009543/passing-integers-as-constant-references-versus-copying) Stack","Fragments":["Overflow"]},{"Key":"Stack Overflow","Fragments":["question"]},{"Key":"Overflow question","Fragments":["have"]},{"Key":"question have","Fragments":["been"]},{"Key":"the boring","Fragments":["part."]},{"Key":"boring part.","Fragments":["I"]},{"Key":"part. I","Fragments":["guess"]},{"Key":"guess it","Fragments":["boils"]},{"Key":"it boils","Fragments":["down"]},{"Key":"boils down","Fragments":["to"]},{"Key":"to asking:","Fragments":["What"]},{"Key":"asking: What","Fragments":["is"]},{"Key":"What is","Fragments":["the","the","wrong"]},{"Key":"the goal","Fragments":["of"]},{"Key":"goal of","Fragments":["this"]},{"Key":"this application?","Fragments":["To"]},{"Key":"application? To","Fragments":["learn"]},{"Key":"To learn","Fragments":["the"]},{"Key":"learn the","Fragments":["ins"]},{"Key":"the ins","Fragments":["and"]},{"Key":"ins and","Fragments":["outs"]},{"Key":"and outs","Fragments":["of"]},{"Key":"outs of","Fragments":["the"]},{"Key":"the language","Fragments":["or","better"]},{"Key":"language or","Fragments":["to"]},{"Key":"test our","Fragments":["algorithms"]},{"Key":"our algorithms","Fragments":["knowledge?"]},{"Key":"I kept","Fragments":["failing","the","the"]},{"Key":"kept failing","Fragments":["tests"]},{"Key":"failing tests","Fragments":["like"]},{"Key":"tests like","Fragments":["that"]},{"Key":"that and","Fragments":["figured"]},{"Key":"and figured","Fragments":["I"]},{"Key":"figured I","Fragments":["was"]},{"Key":"missing the","Fragments":["point"]},{"Key":"the point","Fragments":[":(","across).","of","of"]},{"Key":"point :(","Fragments":["When"]},{"Key":":( When","Fragments":["I"]},{"Key":"I back","Fragments":["to"]},{"Key":"my desktop","Fragments":["I'll"]},{"Key":"desktop I'll","Fragments":["upload"]},{"Key":"I'll upload","Fragments":["a","it","it"]},{"Key":"iteration accordingly.","Fragments":["__Thanks!__"]},{"Key":"class with","Fragments":["a","a"]},{"Key":"member function.","Fragments":["I"]},{"Key":"function. I","Fragments":["know,","don't"]},{"Key":"I know,","Fragments":["funky."]},{"Key":" my","Fragments":["impression"]},{"Key":"my impression","Fragments":["is"]},{"Key":"impression is","Fragments":["that"]},{"Key":"using sort()","Fragments":["in"]},{"Key":"sort() in","Fragments":["isValid()"]},{"Key":"in isValid()","Fragments":["is"]},{"Key":"isValid() is","Fragments":["a"]},{"Key":"of overkill,","Fragments":["isn't"]},{"Key":"overkill, isn't","Fragments":["it?"]},{"Key":" sort()","Fragments":["has"]},{"Key":"sort() has","Fragments":["a"]},{"Key":"a O(word_len*log2(word_len)","Fragments":["time"]},{"Key":"O(word_len*log2(word_len) time","Fragments":["complexity;"]},{"Key":"time complexity;","Fragments":["whereas"]},{"Key":"complexity; whereas","Fragments":["if"]},{"Key":"whereas if","Fragments":["you"]},{"Key":"original and","Fragments":["the"]},{"Key":"the would-be","Fragments":["anagram","anagram"]},{"Key":"would-be anagram","Fragments":["and","storing"]},{"Key":" compare","Fragments":["them,"]},{"Key":"compare them,","Fragments":["time"]},{"Key":"them, time","Fragments":["complexity"]},{"Key":"time complexity","Fragments":["is","of"]},{"Key":"is O(word_len),","Fragments":["which"]},{"Key":"O(word_len), which","Fragments":["is"]},{"Key":"Very nice,","Fragments":["but"]},{"Key":"nice, but","Fragments":["does"]},{"Key":"but does","Fragments":["it"]},{"Key":"it return","Fragments":["0","1;"]},{"Key":"return 0","Fragments":["if","if"]},{"Key":"if a.size()","Fragments":["!="]},{"Key":"a.size() !=","Fragments":["b.size()"]},{"Key":"!= b.size()","Fragments":["?"]},{"Key":"Changed \"ctype.h\"","Fragments":["to"]},{"Key":"\"ctype.h\" to","Fragments":["\"cctype\","]},{"Key":"to \"cctype\",","Fragments":["since"]},{"Key":"\"cctype\", since","Fragments":["that"]},{"Key":"is recommended.","Fragments":["Removed"]},{"Key":"recommended. Removed","Fragments":["hasAlpha,"]},{"Key":"Removed hasAlpha,","Fragments":["since"]},{"Key":"hasAlpha, since","Fragments":["same"]},{"Key":"since same","Fragments":["condition"]},{"Key":"same condition","Fragments":["can"]},{"Key":"condition can","Fragments":["be"]},{"Key":"by numAlpha.","Fragments":["Removed"]},{"Key":"numAlpha. Removed","Fragments":["the"]},{"Key":"Removed the","Fragments":["redundant","call"]},{"Key":"the redundant","Fragments":["condition"]},{"Key":"redundant condition","Fragments":["of"]},{"Key":"condition of","Fragments":["\"conv.empty()\""]},{"Key":"of \"conv.empty()\"","Fragments":["while"]},{"Key":"\"conv.empty()\" while","Fragments":["assigning"]},{"Key":"to isNothing.","Fragments":["Finally"]},{"Key":"isNothing. Finally","Fragments":["wrote"]},{"Key":"Finally wrote","Fragments":["a"]},{"Key":"statement after","Fragments":["each"]},{"Key":"after each","Fragments":["condition","test."]},{"Key":"each condition","Fragments":["that","into"]},{"Key":"condition that","Fragments":["is","makes"]},{"Key":"is checked,","Fragments":["so"]},{"Key":"checked, so","Fragments":["that"]},{"Key":"program returns","Fragments":["before"]},{"Key":"returns before","Fragments":["unnecessarily"]},{"Key":"before unnecessarily","Fragments":["checking"]},{"Key":"unnecessarily checking","Fragments":["other"]},{"Key":"checking other","Fragments":["conditions."]},{"Key":"other conditions.","Fragments":["Introducted"]},{"Key":"conditions. Introducted","Fragments":["char"]},{"Key":"Introducted char","Fragments":["variable"]},{"Key":"char variable","Fragments":["'letter',"]},{"Key":"variable 'letter',","Fragments":["to"]},{"Key":"'letter', to","Fragments":["make"]},{"Key":"make code","Fragments":["more"]},{"Key":"readable as","Fragments":["well","possible.","long"]},{"Key":"as for","Fragments":["reducing"]},{"Key":"for reducing","Fragments":["function"]},{"Key":"reducing function","Fragments":["calls."]},{"Key":"function calls.","Fragments":["Forgive"]},{"Key":"calls. Forgive","Fragments":["my"]},{"Key":"Forgive my","Fragments":["poor"]},{"Key":"my poor","Fragments":["english,"]},{"Key":"poor english,","Fragments":["if"]},{"Key":"english, if","Fragments":["the"]},{"Key":"the grammer","Fragments":["is"]},{"Key":"grammer is","Fragments":["bad."]},{"Key":"is bad.","Fragments":["Thanks.","You"]},{"Key":"I mostly","Fragments":["code"]},{"Key":"mostly code","Fragments":["in"]},{"Key":"in C,","Fragments":["so"]},{"Key":"C, so","Fragments":["am"]},{"Key":"so am","Fragments":["bit"]},{"Key":"am bit","Fragments":["unfamilier"]},{"Key":"bit unfamilier","Fragments":["with"]},{"Key":"unfamilier with","Fragments":["string"]},{"Key":"with string","Fragments":["class."]},{"Key":"string class.","Fragments":["Can"]},{"Key":"class. Can","Fragments":["I"]},{"Key":"it without","Fragments":["using","putting","the"]},{"Key":"using \"ctype.h\",","Fragments":["and"]},{"Key":"\"ctype.h\", and","Fragments":["will"]},{"Key":"and will","Fragments":["it"]},{"Key":"will it","Fragments":["be"]},{"Key":"better that","Fragments":["way.","way."]},{"Key":"figured that","Fragments":["I"]},{"Key":"I may","Fragments":["have"]},{"Key":"may have","Fragments":["to"]},{"Key":"own isupper(),","Fragments":["isalpha()"]},{"Key":"isupper(), isalpha()","Fragments":["if"]},{"Key":"isalpha() if","Fragments":["I"]},{"Key":"didn't use","Fragments":["it."]},{"Key":"use it.","Fragments":["I"]},{"Key":"the conv.empty()","Fragments":["check"]},{"Key":"conv.empty() check","Fragments":["is"]},{"Key":"is redundant.","Fragments":["Any"]},{"Key":"redundant. Any","Fragments":["feedback"]},{"Key":"feedback wil","Fragments":["be"]},{"Key":"wil be","Fragments":["good,"]},{"Key":"be good,","Fragments":["I"]},{"Key":"good, I","Fragments":["think"]},{"Key":"think my","Fragments":["code","use"]},{"Key":"code lacks","Fragments":["elegance","comments"]},{"Key":"lacks elegance","Fragments":["and"]},{"Key":"elegance and","Fragments":["hence"]},{"Key":"and hence","Fragments":["have"]},{"Key":"hence have","Fragments":["to"]},{"Key":"improve my","Fragments":["skills"]},{"Key":"my skills","Fragments":["a"]},{"Key":"skills a","Fragments":["lot."]},{"Key":"a lot.","Fragments":["Will","But"]},{"Key":"lot. Will","Fragments":["upload"]},{"Key":"Will upload","Fragments":["new"]},{"Key":"upload new","Fragments":["iteration"]},{"Key":"iteration when","Fragments":["I"]},{"Key":"find better","Fragments":["ways"]},{"Key":"better ways","Fragments":["of"]},{"Key":"checking some","Fragments":["conditions."]},{"Key":"some conditions.","Fragments":["Thanks."]},{"Key":" @domenick","Fragments":["as"]},{"Key":"@domenick as","Fragments":["a"]},{"Key":"of thumb,","Fragments":["worst"]},{"Key":"thumb, worst","Fragments":["case"]},{"Key":"worst case","Fragments":["time","complexity"]},{"Key":"case time","Fragments":["complexity"]},{"Key":"complexity of","Fragments":["sort","```O(N^2)```.","allUpper"]},{"Key":"of sort","Fragments":["algorithms"]},{"Key":"sort algorithms","Fragments":["is:"]},{"Key":" O(n^2","Fragments":[")"]},{"Key":"O(n^2 )","Fragments":["\u003e="]},{"Key":") \u003e=","Fragments":["sort_time_complexity"]},{"Key":"\u003e= sort_time_complexity","Fragments":["\u003e="]},{"Key":"sort_time_complexity \u003e=","Fragments":["O(n*log2(n))"]},{"Key":" there","Fragments":["are"]},{"Key":"some specialized","Fragments":["algorithms"]},{"Key":"specialized algorithms","Fragments":["which"]},{"Key":"algorithms which","Fragments":["perform","I"]},{"Key":"which perform","Fragments":["better"]},{"Key":"perform better","Fragments":["on"]},{"Key":"better on","Fragments":["specialized"]},{"Key":"on specialized","Fragments":["hardware,"]},{"Key":"specialized hardware,","Fragments":["paralled"]},{"Key":"hardware, paralled","Fragments":["architectures"]},{"Key":"paralled architectures","Fragments":["aso."]},{"Key":"architectures aso.","Fragments":["more"]},{"Key":"aso. more","Fragments":["details"]},{"Key":"more details","Fragments":["here:"]},{"Key":"the book","Fragments":["\"Introduction"]},{"Key":"book \"Introduction","Fragments":["to"]},{"Key":"\"Introduction to","Fragments":["algorithms\""]},{"Key":"to algorithms\"","Fragments":["Cormen,"]},{"Key":"algorithms\" Cormen,","Fragments":["Leiserson,"]},{"Key":"Cormen, Leiserson,","Fragments":["Rivest,"]},{"Key":"Leiserson, Rivest,","Fragments":["MIT"]},{"Key":"Rivest, MIT","Fragments":["Press;"]},{"Key":"MIT Press;","Fragments":["even"]},{"Key":"Press; even","Fragments":["more"]},{"Key":"in Knuth's","Fragments":["TAOCP."]},{"Key":" Wow!","Fragments":["I"]},{"Key":"Wow! I","Fragments":["had"]},{"Key":"had no","Fragments":["Idea"]},{"Key":"no Idea","Fragments":["but"]},{"Key":"Idea but","Fragments":["I"]},{"Key":"just looked","Fragments":["at"]},{"Key":"some documentation","Fragments":["to"]},{"Key":"to confirm","Fragments":["the"]},{"Key":"confirm the","Fragments":["speed"]},{"Key":"the speed","Fragments":["of"]},{"Key":"speed of","Fragments":["`sort`and"]},{"Key":"of `sort`and","Fragments":["you"]},{"Key":"`sort`and you","Fragments":["are"]},{"Key":"are very","Fragments":["correct.","common"]},{"Key":"very correct.","Fragments":["From"]},{"Key":"correct. From","Fragments":["now"]},{"Key":"From now","Fragments":["I'll"]},{"Key":"now I'll","Fragments":["research"]},{"Key":"I'll research","Fragments":["the"]},{"Key":"research the","Fragments":["`std::algorithm`'s"]},{"Key":"the `std::algorithm`'s","Fragments":["more"]},{"Key":"`std::algorithm`'s more","Fragments":["before"]},{"Key":"more before","Fragments":["I"]},{"Key":"them especially","Fragments":["concerning"]},{"Key":"especially concerning","Fragments":["big"]},{"Key":"concerning big","Fragments":["O."]},{"Key":"big O.","Fragments":["I'll"]},{"Key":"O. I'll","Fragments":["submit"]},{"Key":"I'll submit","Fragments":["a"]},{"Key":"submit a","Fragments":["more"]},{"Key":"more performant","Fragments":["iteration"]},{"Key":"performant iteration","Fragments":["later"]},{"Key":"iteration later","Fragments":["this"]},{"Key":"later this","Fragments":["evening.__Thanks"]},{"Key":"this evening.__Thanks","Fragments":["for"]},{"Key":"evening.__Thanks for","Fragments":["the"]},{"Key":"took one","Fragments":["test"]},{"Key":"one test","Fragments":["case"]},{"Key":"case at","Fragments":["a"]},{"Key":"a time,","Fragments":["and"]},{"Key":"time, and","Fragments":["added"]},{"Key":"the logic","Fragments":["as","into","out","over","becomes","to"]},{"Key":"logic as","Fragments":["needed."]},{"Key":"as needed.","Fragments":["So"]},{"Key":"needed. So","Fragments":["it"]},{"Key":"better structure","Fragments":["by"]},{"Key":"structure by","Fragments":["refactoring"]},{"Key":"by refactoring","Fragments":["but"]},{"Key":"refactoring but","Fragments":["I"]},{"Key":"haven't spend","Fragments":["that"]},{"Key":"spend that","Fragments":["much"]},{"Key":"that much","Fragments":["time"]},{"Key":"much time","Fragments":["in"]},{"Key":"time in","Fragments":["c++."]},{"Key":"in c++.","Fragments":["Fun.","I'll","I"]},{"Key":"just focused","Fragments":["on"]},{"Key":"tests. I'm","Fragments":["going"]},{"Key":"to further","Fragments":["refactor"]},{"Key":"further refactor","Fragments":["the"]},{"Key":"refactor the","Fragments":["codes"]},{"Key":"the codes","Fragments":["I"]},{"Key":"codes I","Fragments":["written"]},{"Key":"I written","Fragments":["to"]},{"Key":"written to","Fragments":["make"]},{"Key":"make more","Fragments":["readable.","sense?","sense"]},{"Key":" __I","Fragments":["appreciate"]},{"Key":"__I appreciate","Fragments":["the"]},{"Key":"appreciate the","Fragments":["resources!__","issue","help!","call"]},{"Key":" Infact,","Fragments":["Knuth's"]},{"Key":"Infact, Knuth's","Fragments":["work"]},{"Key":"Knuth's work","Fragments":["gets"]},{"Key":"work gets","Fragments":["recommended"]},{"Key":"gets recommended","Fragments":["to"]},{"Key":"recommended to","Fragments":["me"]},{"Key":"me all","Fragments":["too"]},{"Key":"all too","Fragments":["often"]},{"Key":"too often","Fragments":["so"]},{"Key":"often so","Fragments":["I'll"]},{"Key":"I'll definitley","Fragments":["have"]},{"Key":"definitley have","Fragments":["to"]},{"Key":"my list","Fragments":["of"]},{"Key":"of books","Fragments":["to"]},{"Key":"books to","Fragments":["get"]},{"Key":"get but","Fragments":["I"]},{"Key":"have Robert","Fragments":["Sedgewick's"]},{"Key":"Robert Sedgewick's","Fragments":["*Algorithms"]},{"Key":"Sedgewick's *Algorithms","Fragments":["in"]},{"Key":"*Algorithms in","Fragments":["C"]},{"Key":"C Parts","Fragments":["1-5*"]},{"Key":"Parts 1-5*","Fragments":["on"]},{"Key":"1-5* on","Fragments":["their"]},{"Key":"on their","Fragments":["way"]},{"Key":"their way","Fragments":["to"]},{"Key":"my house","Fragments":["right"]},{"Key":"house right","Fragments":["now"]},{"Key":"now otherwise","Fragments":["I'd"]},{"Key":"otherwise I'd","Fragments":["get"]},{"Key":"I'd get","Fragments":["*Intro"]},{"Key":"get *Intro","Fragments":["to"]},{"Key":"*Intro to","Fragments":["algorithms*"]},{"Key":"to algorithms*","Fragments":["like"]},{"Key":"algorithms* like","Fragments":["you"]},{"Key":"the feedback,","Fragments":["those","I"]},{"Key":"feedback, those","Fragments":["are"]},{"Key":"those are","Fragments":["both"]},{"Key":"both great","Fragments":["points."]},{"Key":"great points.","Fragments":["I'll"]},{"Key":"points. I'll","Fragments":["think"]},{"Key":"I'll think","Fragments":["about"]},{"Key":"about whether","Fragments":["I","we"]},{"Key":"whether I","Fragments":["can"]},{"Key":"can handle","Fragments":["those","the"]},{"Key":"handle those","Fragments":["edge"]},{"Key":"those edge","Fragments":["cases"]},{"Key":"edge cases","Fragments":["while"]},{"Key":"cases while","Fragments":["still"]},{"Key":"while still","Fragments":["keeping"]},{"Key":"still keeping","Fragments":["things"]},{"Key":"keeping things","Fragments":["nice"]},{"Key":"things nice","Fragments":["and"]},{"Key":" TAOCP","Fragments":["has"]},{"Key":"TAOCP has","Fragments":["some"]},{"Key":"* it","Fragments":["is"]},{"Key":"* you","Fragments":["need"]},{"Key":"a math","Fragments":["university"]},{"Key":"math university","Fragments":["degree"]},{"Key":"university degree","Fragments":["to"]},{"Key":"degree to","Fragments":["understand"]},{"Key":"understand some","Fragments":["chapters"]},{"Key":"some chapters","Fragments":["(I"]},{"Key":"chapters (I","Fragments":["had"]},{"Key":"(I had","Fragments":["to"]},{"Key":"to skip","Fragments":["these","processing"]},{"Key":"skip these","Fragments":["parts...)"]},{"Key":"* the","Fragments":["algorithms"]},{"Key":"algorithms are","Fragments":["implemented"]},{"Key":"are implemented","Fragments":["using"]},{"Key":"implemented using","Fragments":["an","something"]},{"Key":"an assembly","Fragments":["lang."]},{"Key":"assembly lang.","Fragments":["for"]},{"Key":"lang. for","Fragments":["an"]},{"Key":"for an","Fragments":["imaginary","ordered","normal","empty","algorithms","explanatory","inplace-transform"]},{"Key":"an imaginary","Fragments":["cpu;"]},{"Key":"and he","Fragments":["is"]},{"Key":"he is","Fragments":["not"]},{"Key":"not shy","Fragments":["of"]},{"Key":"shy of","Fragments":["extensive"]},{"Key":"of extensive","Fragments":["usage"]},{"Key":"extensive usage","Fragments":["of"]},{"Key":"of \"goto\"","Fragments":["-"]},{"Key":"\"goto\" -","Fragments":["imagine"]},{"Key":"- imagine","Fragments":["jumping"]},{"Key":"imagine jumping","Fragments":["with"]},{"Key":"jumping with","Fragments":["\"goto\""]},{"Key":"with \"goto\"","Fragments":["back"]},{"Key":"\"goto\" back","Fragments":["and"]},{"Key":"back and","Fragments":["forth","look"]},{"Key":"and forth","Fragments":["from"]},{"Key":"forth from","Fragments":["loops."]},{"Key":"The testing","Fragments":["routine","for"]},{"Key":"testing routine","Fragments":["expects"]},{"Key":"routine expects","Fragments":["hey"]},{"Key":"expects hey","Fragments":["to"]},{"Key":"hey to","Fragments":["be"]},{"Key":"be static","Fragments":["function","members,","since"]},{"Key":"bob, which","Fragments":["is"]},{"Key":"a nonsense","Fragments":["this"]},{"Key":"nonsense this","Fragments":["code"]},{"Key":"code adheres","Fragments":["to."]},{"Key":"adheres to.","Fragments":["Otherwise"]},{"Key":"to. Otherwise","Fragments":["I"]},{"Key":"would do","Fragments":["instance"]},{"Key":"do instance","Fragments":["bob"]},{"Key":"instance bob","Fragments":["of"]},{"Key":"bob of","Fragments":["class"]},{"Key":"used only","Fragments":["pure"]},{"Key":"only pure","Fragments":["and"]},{"Key":"pure and","Fragments":["simple"]},{"Key":"and simple","Fragments":["C++","implementation","but","to","solutions"]},{"Key":"simple C++","Fragments":["STL"]},{"Key":"C++ STL","Fragments":["functionality"]},{"Key":"STL functionality","Fragments":["(instead"]},{"Key":"functionality (instead","Fragments":["of"]},{"Key":"of coding","Fragments":["it"]},{"Key":"coding it","Fragments":["myself"]},{"Key":"it myself","Fragments":["or"]},{"Key":"myself or","Fragments":["using"]},{"Key":"using unnecessary","Fragments":["libraries)."]},{"Key":"unnecessary libraries).","Fragments":["Hopefuly"]},{"Key":"libraries). Hopefuly","Fragments":["I"]},{"Key":"Hopefuly I","Fragments":["achieved"]},{"Key":"I achieved","Fragments":["good"]},{"Key":"achieved good","Fragments":["readability"]},{"Key":"good readability","Fragments":["by"]},{"Key":"by this.","Fragments":["Using"]},{"Key":"this. Using","Fragments":["string"]},{"Key":"Using string","Fragments":["instead"]},{"Key":"of char*","Fragments":["si"]},{"Key":"char* si","Fragments":["probably"]},{"Key":"si probably","Fragments":["unnecessary,"]},{"Key":"probably unnecessary,","Fragments":["but"]},{"Key":"unnecessary, but","Fragments":["this"]},{"Key":"is obviously","Fragments":["no"]},{"Key":"obviously no","Fragments":["speed"]},{"Key":"no speed","Fragments":["optimized"]},{"Key":"speed optimized","Fragments":["code."]},{"Key":"lacks comments","Fragments":["because"]},{"Key":"comments because","Fragments":["-"]},{"Key":"because -","Fragments":["you"]},{"Key":"know -","Fragments":["nobody"]},{"Key":"- nobody","Fragments":["likes"]},{"Key":"nobody likes","Fragments":["those"]},{"Key":"likes those","Fragments":[":D."]},{"Key":"Added missing","Fragments":["include."]},{"Key":" Returning","Fragments":["as"]},{"Key":"Returning as","Fragments":["cstring"]},{"Key":"as cstring","Fragments":["literal"]},{"Key":"cstring literal","Fragments":["instead"]},{"Key":"literal instead","Fragments":["of"]},{"Key":"Moved FINE","Fragments":["testing"]},{"Key":"FINE testing","Fragments":["to"]},{"Key":"testing to","Fragments":["be","work."]},{"Key":"be first,","Fragments":["which"]},{"Key":"first, which","Fragments":["is"]},{"Key":"more likely","Fragments":["to"]},{"Key":"likely to","Fragments":["fail"]},{"Key":"to fail","Fragments":["and","noisily,","test","the"]},{"Key":"fail and","Fragments":["also"]},{"Key":"and also","Fragments":["to","this","include","that","just","by"]},{"Key":"also to","Fragments":["filter"]},{"Key":"to filter","Fragments":["out"]},{"Key":"filter out","Fragments":["(special"]},{"Key":"out (special","Fragments":["case"]},{"Key":"(special case","Fragments":["of)"]},{"Key":"case of)","Fragments":["empty"]},{"Key":"of) empty","Fragments":["string."]},{"Key":" is_question","Fragments":["does"]},{"Key":"is_question does","Fragments":["access"]},{"Key":"does access","Fragments":["wrong"]},{"Key":"access wrong","Fragments":["memory"]},{"Key":"wrong memory","Fragments":["for"]},{"Key":"memory for","Fragments":["empty"]},{"Key":"string (","Fragments":["input[input.length()"]},{"Key":"( input[input.length()","Fragments":["-"]},{"Key":"input[input.length() -","Fragments":["1]"]},{"Key":"- 1]","Fragments":["=","="]},{"Key":"1] =","Fragments":["input[0","input[-1]"]},{"Key":"= input[0","Fragments":["-"]},{"Key":"input[0 -","Fragments":["1]"]},{"Key":"= input[-1]","Fragments":[")."]},{"Key":"input[-1] ).","Fragments":["Maybe"]},{"Key":"). Maybe","Fragments":["when"]},{"Key":"Maybe when","Fragments":["using"]},{"Key":"using string","Fragments":["do","pointers."]},{"Key":"string do","Fragments":["not"]},{"Key":"use array","Fragments":["semantic"]},{"Key":"array semantic","Fragments":["but"]},{"Key":"semantic but","Fragments":["safer"]},{"Key":"but safer","Fragments":["string::at()"]},{"Key":"safer string::at()","Fragments":["function."]},{"Key":"It actually","Fragments":["looks","does"]},{"Key":"actually looks","Fragments":["good"]},{"Key":"looks good","Fragments":["enough."]},{"Key":"Declaring variables","Fragments":["up"]},{"Key":"variables up","Fragments":["front"]},{"Key":"front is","Fragments":["very"]},{"Key":"very C-like.","Fragments":["In"]},{"Key":"C-like. In","Fragments":["C++"]},{"Key":"In C++","Fragments":["I"]},{"Key":"C++ I","Fragments":["would","think"]},{"Key":"probably declare","Fragments":["the"]},{"Key":"the bools","Fragments":["on"]},{"Key":"bools on","Fragments":["initialization"]},{"Key":"on initialization","Fragments":["(on"]},{"Key":"initialization (on","Fragments":["lines"]},{"Key":"(on lines","Fragments":["38,","38,"]},{"Key":"lines 38,","Fragments":["42,","42,"]},{"Key":"38, 42,","Fragments":["46).","46)"]},{"Key":"be an","Fragments":["excellent","aggregate","amortized","attempt","less-than.","inequality","alias"]},{"Key":"an excellent","Fragments":["opportunity"]},{"Key":"excellent opportunity","Fragments":["to"]},{"Key":"opportunity to","Fragments":["use","use"]},{"Key":"use new","Fragments":["c++11","c++11"]},{"Key":"new c++11","Fragments":["range","range"]},{"Key":"c++11 range","Fragments":["for,","for"]},{"Key":"range for,","Fragments":["which"]},{"Key":"for, which","Fragments":["would"]},{"Key":"like for(","Fragments":["char"]},{"Key":"for( char","Fragments":["letter"]},{"Key":"char letter","Fragments":[":","before"]},{"Key":": conv","Fragments":["){}."]},{"Key":"Perhaps make","Fragments":["isupper"]},{"Key":"make isupper","Fragments":["\"if\""]},{"Key":"isupper \"if\"","Fragments":["also"]},{"Key":"\"if\" also","Fragments":["\"else"]},{"Key":"also \"else","Fragments":["if\""]},{"Key":"\"else if\"","Fragments":["-","for","just"]},{"Key":"if\" -","Fragments":["space"]},{"Key":"- space","Fragments":["will"]},{"Key":"space will","Fragments":["never"]},{"Key":"will never","Fragments":["be","convert","be"]},{"Key":"never be","Fragments":["a","more","less","less"]},{"Key":"suggest that","Fragments":["you"]},{"Key":"use preincrementation","Fragments":["(++i)"]},{"Key":"preincrementation (++i)","Fragments":["instead"]},{"Key":"(++i) instead","Fragments":["of"]},{"Key":"of post","Fragments":["(i++)."]},{"Key":"post (i++).","Fragments":["But"]},{"Key":"(i++). But","Fragments":["I"]},{"Key":"of taste","Fragments":["in"]},{"Key":"taste in","Fragments":["places"]},{"Key":"in places","Fragments":["without"]},{"Key":"places without","Fragments":["side-effects."]},{"Key":"to (and","Fragments":["probably"]},{"Key":"(and probably","Fragments":["should"]},{"Key":"should not)","Fragments":["write"]},{"Key":"not) write","Fragments":["the"]},{"Key":"the \"?","Fragments":["true"]},{"Key":"\"? true","Fragments":[":"]},{"Key":"true :","Fragments":["false\""]},{"Key":": false\"","Fragments":["(on"]},{"Key":"false\" (on","Fragments":["lines"]},{"Key":"42, 46)","Fragments":["-"]},{"Key":"46) -","Fragments":["the"]},{"Key":"- the","Fragments":["bool","bool"]},{"Key":"bool expressions","Fragments":["already"]},{"Key":"expressions already","Fragments":["are"]},{"Key":"already are","Fragments":["true"]},{"Key":"are true","Fragments":["or","to"]},{"Key":"true or","Fragments":["false.","break"]},{"Key":"or false.","Fragments":["The"]},{"Key":"false. The","Fragments":["same"]},{"Key":"The same","Fragments":["apply","concerns"]},{"Key":"same apply","Fragments":["for"]},{"Key":"apply for","Fragments":["the"]},{"Key":"the \"==","Fragments":["true\""]},{"Key":"\"== true\"","Fragments":["-"]},{"Key":"true\" -","Fragments":["the"]},{"Key":"bool variable","Fragments":["is","for"]},{"Key":"already bool.","Fragments":["no"]},{"Key":"bool. no","Fragments":["need"]},{"Key":"compare it.","Fragments":["I"]},{"Key":"if( numSpaces","Fragments":["=="]},{"Key":"numSpaces ==","Fragments":["conv.length()"]},{"Key":"== conv.length()","Fragments":[")"]},{"Key":"conv.length() )","Fragments":["return"]},{"Key":") return","Fragments":["\"Fine."]},{"Key":"return \"Fine.","Fragments":["Be"]},{"Key":"The function","Fragments":["equals","more","is"]},{"Key":"function equals","Fragments":["was"]},{"Key":"equals was","Fragments":["unnecessary."]},{"Key":"Doesn't look","Fragments":["like"]},{"Key":"like there","Fragments":["is,"]},{"Key":"there is,","Fragments":["sorry."]},{"Key":"is, sorry.","Fragments":["You'll"]},{"Key":"sorry. You'll","Fragments":["just"]},{"Key":"You'll just","Fragments":["have"]},{"Key":"through and","Fragments":["check"]},{"Key":"and check","Fragments":["all","that","if","each"]},{"Key":"check all","Fragments":["characters.","elements"]},{"Key":"to greatly","Fragments":["simplify"]},{"Key":"greatly simplify","Fragments":["food_chain::sing()"]},{"Key":"simplify food_chain::sing()","Fragments":["using"]},{"Key":"food_chain::sing() using","Fragments":["previously"]},{"Key":"using previously","Fragments":["defined"]},{"Key":"previously defined","Fragments":["functions."]},{"Key":"Only provide","Fragments":["output"]},{"Key":"provide output","Fragments":["for"]},{"Key":"output for","Fragments":["inputs","a"]},{"Key":"for inputs","Fragments":["in"]},{"Key":"inputs in","Fragments":["range"]},{"Key":"in range","Fragments":["{1"]},{"Key":"range {1","Fragments":["-"]},{"Key":"{1 -","Fragments":["8}."]},{"Key":"Thanks krOozer","Fragments":["for"]},{"Key":"krOozer for","Fragments":["your"]},{"Key":"your valuable","Fragments":["suggestions."]},{"Key":"valuable suggestions.","Fragments":["I"]},{"Key":"suggestions. I","Fragments":["have","feel"]},{"Key":"have uploaded","Fragments":["the","it)"]},{"Key":"uploaded the","Fragments":["new"]},{"Key":"iteration based","Fragments":["on"]},{"Key":"your suggestions.","Fragments":["I"]},{"Key":"feel the","Fragments":["code","erasing"]},{"Key":"code looks","Fragments":["much","great.","pretty","pretty"]},{"Key":"better now.","Fragments":["I"]},{"Key":"now. I","Fragments":["kept"]},{"Key":"kept the","Fragments":["variables","code","`substr`"]},{"Key":"variables isYelling,","Fragments":["isNothing,"]},{"Key":"isYelling, isNothing,","Fragments":["isQuestion,"]},{"Key":"isNothing, isQuestion,","Fragments":["because"]},{"Key":"isQuestion, because","Fragments":["i"]},{"Key":"because i","Fragments":["thought"]},{"Key":"thought they","Fragments":["make"]},{"Key":"code self","Fragments":["documenting."]},{"Key":" Hi.","Fragments":["Why","Very","You"]},{"Key":"Hi. Why","Fragments":["do"]},{"Key":"keep both","Fragments":["\"loud\""]},{"Key":"both \"loud\"","Fragments":["and"]},{"Key":"\"loud\" and","Fragments":["\"quiet\""]},{"Key":"and \"quiet\"","Fragments":["variables?"]},{"Key":"\"quiet\" variables?","Fragments":["They"]},{"Key":"variables? They","Fragments":["should"]},{"Key":"They should","Fragments":["just"]},{"Key":"should just","Fragments":["be","return","include","put"]},{"Key":"always opposite","Fragments":["of"]},{"Key":"opposite of","Fragments":["each"]},{"Key":"each other.","Fragments":["With","I"]},{"Key":"other. With","Fragments":["that"]},{"Key":"With that","Fragments":["said,","you"]},{"Key":"that said,","Fragments":["perhaps"]},{"Key":"said, perhaps","Fragments":["one"]},{"Key":"perhaps one","Fragments":["of"]},{"Key":"the \"if\"","Fragments":["in"]},{"Key":"\"if\" in","Fragments":["second"]},{"Key":"in second","Fragments":["while"]},{"Key":"second while","Fragments":["loop"]},{"Key":" ...","Fragments":["and"]},{"Key":"... and","Fragments":["some"]},{"Key":"and some","Fragments":["more","`static"]},{"Key":"some more","Fragments":["cleaning.","information"]},{"Key":"Hi. Very","Fragments":["concise,"]},{"Key":"Very concise,","Fragments":["just"]},{"Key":"concise, just","Fragments":["the"]},{"Key":"content of","Fragments":["for"]},{"Key":"of for","Fragments":["loop","loops"]},{"Key":"is bit","Fragments":["hairy."]},{"Key":"bit hairy.","Fragments":["Perhaps"]},{"Key":"hairy. Perhaps","Fragments":["use"]},{"Key":"Perhaps use","Fragments":["\"char"]},{"Key":"use \"char","Fragments":["c\""]},{"Key":"\"char c\"","Fragments":["variable"]},{"Key":"c\" variable","Fragments":["for"]},{"Key":"for \"sentence[i]\"","Fragments":["so"]},{"Key":"\"sentence[i]\" so","Fragments":["you"]},{"Key":"you dont","Fragments":["need"]},{"Key":"dont need","Fragments":["to"]},{"Key":"to repeat","Fragments":["it"]},{"Key":"repeat it","Fragments":["so"]},{"Key":"so many","Fragments":["times.","deeply"]},{"Key":"test ```","Fragments":["(sentence[i]"]},{"Key":"``` (sentence[i]","Fragments":["\u003c="]},{"Key":"(sentence[i] \u003c=","Fragments":["'z'","'Z'"]},{"Key":"\u003c= 'z'","Fragments":["\u0026\u0026"]},{"Key":"'z' \u0026\u0026","Fragments":["sentence[i]"]},{"Key":"\u0026\u0026 sentence[i]","Fragments":["\u003e=","\u003e="]},{"Key":"sentence[i] \u003e=","Fragments":["'a')","'A')"]},{"Key":"\u003e= 'a')","Fragments":["||"]},{"Key":"'a') ||","Fragments":["(sentence[i]"]},{"Key":"|| (sentence[i]","Fragments":["\u003c="]},{"Key":"'Z' \u0026\u0026","Fragments":["sentence[i]"]},{"Key":"\u003e= 'A')","Fragments":["```"]},{"Key":"'A') ```","Fragments":["twice"]},{"Key":"``` twice","Fragments":["-"]},{"Key":"twice -","Fragments":["I"]},{"Key":"I sugest","Fragments":["you"]},{"Key":"sugest you","Fragments":["use"]},{"Key":"use bool","Fragments":["variable"]},{"Key":"Hi. You","Fragments":["should"]},{"Key":"should not","Fragments":["use","be","have","need","be","be"]},{"Key":"use \"remark.back()\"","Fragments":["on"]},{"Key":"\"remark.back()\" on","Fragments":["empty"]},{"Key":"Do not","Fragments":["convert"]},{"Key":"convert length()","Fragments":["to"]},{"Key":"length() to","Fragments":["int","construct"]},{"Key":"int unless","Fragments":["you"]},{"Key":"need integer.","Fragments":["Use"]},{"Key":"integer. Use","Fragments":["the"]},{"Key":"Use the","Fragments":["proper"]},{"Key":"proper type","Fragments":["size_t"]},{"Key":"type size_t","Fragments":["or"]},{"Key":"size_t or","Fragments":["better"]},{"Key":"good opportunity","Fragments":["to"]},{"Key":" Remember","Fragments":["to"]},{"Key":"Remember to","Fragments":["nitpick"]},{"Key":"nitpick me","Fragments":["back"]},{"Key":"me back","Fragments":[";)","if"]},{"Key":"Your approach","Fragments":["was"]},{"Key":"very similar","Fragments":["to","to"]},{"Key":"mine, and","Fragments":["I"]},{"Key":"had the","Fragments":["exact","chance"]},{"Key":"exact same","Fragments":["performance","thing,"]},{"Key":"same performance","Fragments":["optimization"]},{"Key":"performance optimization","Fragments":["in"]},{"Key":"optimization in","Fragments":["mind"]},{"Key":"to combine","Fragments":["all","my","the"]},{"Key":"combine all","Fragments":["the"]},{"Key":"logic into","Fragments":["one"]},{"Key":"one procedural","Fragments":["function."]},{"Key":"procedural function.","Fragments":["Guess"]},{"Key":"function. Guess","Fragments":["great"]},{"Key":"Guess great","Fragments":["minds"]},{"Key":"great minds","Fragments":["think"]},{"Key":"minds think","Fragments":["alike!"]},{"Key":"think alike!","Fragments":[":P"]},{"Key":"nitpick something,","Fragments":["I'd"]},{"Key":"something, I'd","Fragments":["say"]},{"Key":"should limit","Fragments":["the"]},{"Key":"limit the","Fragments":["width"]},{"Key":"the width","Fragments":["of"]},{"Key":"width of","Fragments":["any"]},{"Key":"any specific","Fragments":["line"]},{"Key":"specific line","Fragments":["to"]},{"Key":"line to","Fragments":["80"]},{"Key":"to 80","Fragments":["characters"]},{"Key":"80 characters","Fragments":["or"]},{"Key":"characters or","Fragments":["less"]},{"Key":"or less","Fragments":["(I'm","readable"]},{"Key":"less (I'm","Fragments":["looking"]},{"Key":"(I'm looking","Fragments":["at"]},{"Key":"the multiline","Fragments":["comment"]},{"Key":"multiline comment","Fragments":["from"]},{"Key":"comment from","Fragments":["line"]},{"Key":"from line","Fragments":["4"]},{"Key":"line 4","Fragments":["-"]},{"Key":"4 -","Fragments":["line"]},{"Key":"- line","Fragments":["7)."]},{"Key":"line 7).","Fragments":["Just"]},{"Key":"7). Just","Fragments":["a"]},{"Key":"of style","Fragments":["preferences,","that","I"]},{"Key":"style preferences,","Fragments":["but"]},{"Key":"preferences, but","Fragments":["it"]},{"Key":"does have","Fragments":["the","a"]},{"Key":"the advantage","Fragments":["of"]},{"Key":"of preventing","Fragments":["others"]},{"Key":"preventing others","Fragments":["from"]},{"Key":"others from","Fragments":["having"]},{"Key":"to scroll","Fragments":["horizontally"]},{"Key":"scroll horizontally","Fragments":["to"]},{"Key":"horizontally to","Fragments":["read"]},{"Key":"read that","Fragments":["comment,","book"]},{"Key":"that comment,","Fragments":["and"]},{"Key":"comment, and","Fragments":["would"]},{"Key":"and would","Fragments":["make","check","not"]},{"Key":"code display","Fragments":["nicely"]},{"Key":"display nicely","Fragments":["on"]},{"Key":"nicely on","Fragments":["a"]},{"Key":"standard 80x24","Fragments":["terminal/editing"]},{"Key":"80x24 terminal/editing","Fragments":["environment."]},{"Key":" Yikes!","Fragments":["back"]},{"Key":"Yikes! back","Fragments":["jumps"]},{"Key":"back jumps","Fragments":["with"]},{"Key":"jumps with","Fragments":["goto?"]},{"Key":"with goto?","Fragments":["Maaaaaybe"]},{"Key":"goto? Maaaaaybe","Fragments":["not"]},{"Key":"Maaaaaybe not","Fragments":["especially"]},{"Key":"not especially","Fragments":["since"]},{"Key":"since If","Fragments":["I'm"]},{"Key":"If I'm","Fragments":["going"]},{"Key":"learn assembly","Fragments":["it'd"]},{"Key":"assembly it'd","Fragments":["be"]},{"Key":"it'd be","Fragments":["x86/ARM/MIPS","worth"]},{"Key":"be x86/ARM/MIPS","Fragments":["well"]},{"Key":"x86/ARM/MIPS well","Fragments":["before"]},{"Key":"well before","Fragments":["imaginary"]},{"Key":"before imaginary","Fragments":["haha."]},{"Key":"imaginary haha.","Fragments":["Tonight"]},{"Key":"haha. Tonight","Fragments":["I"]},{"Key":"Tonight I","Fragments":["really"]},{"Key":"really will","Fragments":["upload"]},{"Key":"will upload","Fragments":["a"]},{"Key":"iteration though","Fragments":[":P"]},{"Key":"didn't spend","Fragments":["much"]},{"Key":"spend much","Fragments":["(any)"]},{"Key":"much (any)","Fragments":["time"]},{"Key":"(any) time","Fragments":["looking"]},{"Key":"time looking","Fragments":["to","it"]},{"Key":"looking to","Fragments":["see"]},{"Key":"if string","Fragments":["has","is"]},{"Key":"a trim()","Fragments":["function"]},{"Key":"trim() function","Fragments":["yet","in"]},{"Key":"function yet","Fragments":["-"]},{"Key":"yet -","Fragments":["and"]},{"Key":"didn't see","Fragments":["if"]},{"Key":"if functions","Fragments":["already"]},{"Key":"functions already","Fragments":["exist"]},{"Key":"already exist","Fragments":["for","in"]},{"Key":"exist for","Fragments":["the"]},{"Key":"the alphanumeric","Fragments":["detection,"]},{"Key":"alphanumeric detection,","Fragments":["but"]},{"Key":"detection, but","Fragments":["the"]},{"Key":"tests passed,","Fragments":["and"]},{"Key":"passed, and","Fragments":["it's"]},{"Key":"it's Friday,","Fragments":["so"]},{"Key":"Friday, so","Fragments":["I"]},{"Key":"I pressed","Fragments":["the"]},{"Key":"pressed the","Fragments":["big-red-button."]},{"Key":"It was","Fragments":["fun","difficult","also"]},{"Key":"was fun","Fragments":["to","anyway.","enough."]},{"Key":"fun to","Fragments":["whip"]},{"Key":"to whip","Fragments":["this"]},{"Key":"whip this","Fragments":["out."]},{"Key":"out. Look","Fragments":["forward"]},{"Key":"Look forward","Fragments":["to"]},{"Key":"forward to","Fragments":["feedback","additional"]},{"Key":"to feedback","Fragments":["and","from","from","from"]},{"Key":"feedback and","Fragments":["other"]},{"Key":" hello","Fragments":["krooze,","k-mad."]},{"Key":"bit clearer","Fragments":["in"]},{"Key":"the latest","Fragments":["version,","tests","version"]},{"Key":" I'll","Fragments":["change","give"]},{"Key":"I'll change","Fragments":["them"]},{"Key":"change them","Fragments":["to","to"]},{"Key":"something that's","Fragments":["clearer"]},{"Key":"to upper","Fragments":["and"]},{"Key":"with upper,","Fragments":["but"]},{"Key":"upper, but","Fragments":["no"]},{"Key":"lower is","Fragments":["shouting"]},{"Key":" \u003cli\u003e`std::sort`","Fragments":["has"]},{"Key":"\u003cli\u003e`std::sort` has","Fragments":["been"]},{"Key":"been replaced","Fragments":["with"]},{"Key":"anagram and","Fragments":["contains"]},{"Key":"and contains","Fragments":["the","some"]},{"Key":"contains the","Fragments":["same","'guts'","name"]},{"Key":"same amount","Fragments":["of"]},{"Key":"same letters","Fragments":["while"]},{"Key":"letters while","Fragments":["being"]},{"Key":"while being","Fragments":["a"]},{"Key":" Went","Fragments":["a"]},{"Key":"Went a","Fragments":["little"]},{"Key":"little heavy","Fragments":["with"]},{"Key":"heavy with","Fragments":["the"]},{"Key":"functions trying","Fragments":["to"]},{"Key":"to slim","Fragments":["down"]},{"Key":"slim down","Fragments":["code"]},{"Key":"down code","Fragments":["and"]},{"Key":"not rely","Fragments":["too"]},{"Key":"rely too","Fragments":["heavily"]},{"Key":"too heavily","Fragments":["on"]},{"Key":"heavily on","Fragments":["loops"]},{"Key":"on loops","Fragments":["and"]},{"Key":"loops and","Fragments":["complex"]},{"Key":"and complex","Fragments":["checks."]},{"Key":"the 80","Fragments":["character","char"]},{"Key":"80 character","Fragments":["limit."]},{"Key":"character limit.","Fragments":["I"]},{"Key":"limit. I","Fragments":["threw"]},{"Key":"I threw","Fragments":["that"]},{"Key":"threw that","Fragments":["comment"]},{"Key":"that comment","Fragments":["in"]},{"Key":"in at","Fragments":["the"]},{"Key":"last second.","Fragments":["I"]},{"Key":"second. I","Fragments":["just"]},{"Key":"just need","Fragments":["to","to","to","to"]},{"Key":"to enable","Fragments":["the","you"]},{"Key":"enable the","Fragments":["80"]},{"Key":"80 char","Fragments":["line"]},{"Key":"char line","Fragments":["in"]},{"Key":"line in","Fragments":["my","the"]},{"Key":"my editor","Fragments":["and"]},{"Key":"editor and","Fragments":["I"]},{"Key":"won't forget","Fragments":["next"]},{"Key":"forget next","Fragments":["time."]},{"Key":" hi","Fragments":["atifhans,"]},{"Key":"if numAlphas==0,","Fragments":["is"]},{"Key":"numAlphas==0, is","Fragments":["that"]},{"Key":"maybe you","Fragments":["don't","don't"]},{"Key":"for (numSpaces","Fragments":["=="]},{"Key":"(numSpaces ==","Fragments":["conv.length());"]},{"Key":" so","Fragments":["maybe"]},{"Key":"so maybe","Fragments":["you"]},{"Key":" if(letter","Fragments":["=="]},{"Key":"if(letter ==","Fragments":["'"]},{"Key":" //Counting","Fragments":["the"]},{"Key":"//Counting the","Fragments":["number"]},{"Key":"your yelling()","Fragments":["method"]},{"Key":"yelling() method","Fragments":["almost"]},{"Key":"method almost","Fragments":["solves"]},{"Key":"almost solves","Fragments":["the"]},{"Key":"solves the","Fragments":["whole"]},{"Key":" line","Fragments":["58","down"]},{"Key":"line 58","Fragments":["return"]},{"Key":"58 return","Fragments":["alpha_found,"]},{"Key":"is either","Fragments":["yelling,"]},{"Key":"either yelling,","Fragments":["or"]},{"Key":"yelling, or","Fragments":["all"]},{"Key":"or all","Fragments":["white"]},{"Key":"all white","Fragments":["space,"]},{"Key":"white space,","Fragments":["if","you","for"]},{"Key":"space, if","Fragments":["you"]},{"Key":"just change","Fragments":["the"]},{"Key":"return type","Fragments":["of","for"]},{"Key":"this method,","Fragments":["you"]},{"Key":"method, you","Fragments":["wouldn't"]},{"Key":"you wouldn't","Fragments":["need"]},{"Key":"the saysNothing()","Fragments":["method"]},{"Key":"saysNothing() method","Fragments":["anymore."]},{"Key":"the suggestion.","Fragments":["\"numAlphas==0\"","I'll"]},{"Key":"suggestion. \"numAlphas==0\"","Fragments":["doesn't"]},{"Key":"\"numAlphas==0\" doesn't","Fragments":["work"]},{"Key":"doesn't work","Fragments":["for"]},{"Key":"the cases","Fragments":["when","seemed","are"]},{"Key":"cases when","Fragments":["input"]},{"Key":"when input","Fragments":["has"]},{"Key":"has numbers,","Fragments":["puntuations"]},{"Key":"numbers, puntuations","Fragments":["etc."]},{"Key":"puntuations etc.","Fragments":["Since"]},{"Key":"etc. Since","Fragments":["I"]},{"Key":"am using","Fragments":["isupper()","the","clang","OS"]},{"Key":"using isupper()","Fragments":["and"]},{"Key":"isupper() and","Fragments":["isalpha(),"]},{"Key":"and isalpha(),","Fragments":["both"]},{"Key":"isalpha(), both","Fragments":["of"]},{"Key":"of which","Fragments":["will"]},{"Key":"which will","Fragments":["return","return","allow","make","invariably"]},{"Key":"true for","Fragments":["alphabits","alphanumeric","non-letter","non-letter"]},{"Key":"for alphabits","Fragments":["only."]},{"Key":"alphabits only.","Fragments":["I"]},{"Key":"only. I","Fragments":["could've","just"]},{"Key":"could've using","Fragments":["isalnum(),"]},{"Key":"using isalnum(),","Fragments":["which"]},{"Key":"isalnum(), which","Fragments":["will"]},{"Key":"for alphanumeric","Fragments":["caracters,","characters"]},{"Key":"alphanumeric caracters,","Fragments":["but"]},{"Key":"caracters, but","Fragments":["then"]},{"Key":"can't distinguish","Fragments":["between"]},{"Key":"distinguish between","Fragments":["uppercase"]},{"Key":"between uppercase","Fragments":["and"]},{"Key":"uppercase and","Fragments":["lowercase","return"]},{"Key":"and lowercase","Fragments":["numbers,"]},{"Key":"lowercase numbers,","Fragments":["coz"]},{"Key":"numbers, coz","Fragments":["they"]},{"Key":"coz they","Fragments":["are"]},{"Key":"same and","Fragments":["isupper()"]},{"Key":"and isupper()","Fragments":["will"]},{"Key":"isupper() will","Fragments":["return"]},{"Key":"false for","Fragments":["them."]},{"Key":"for them.","Fragments":["So"]},{"Key":"them. So","Fragments":["even","I"]},{"Key":"So even","Fragments":["if"]},{"Key":"my input","Fragments":["is"]},{"Key":"not empty,","Fragments":["i"]},{"Key":"empty, i","Fragments":["will"]},{"Key":"i will","Fragments":["end"]},{"Key":"up interpreting","Fragments":["that"]},{"Key":"interpreting that","Fragments":["as"]},{"Key":"as empty.","Fragments":["Also"]},{"Key":"empty. Also","Fragments":["isNothing"]},{"Key":"Also isNothing","Fragments":["is"]},{"Key":"isNothing is","Fragments":["not"]},{"Key":"good name","Fragments":["I"]},{"Key":"name I","Fragments":["guess,"]},{"Key":"I guess,","Fragments":["coz"]},{"Key":"guess, coz","Fragments":["it"]},{"Key":"coz it","Fragments":["checks"]},{"Key":"it checks","Fragments":["if","if"]},{"Key":"or an","Fragments":["array"]},{"Key":"any number","Fragments":["of"]},{"Key":"of space","Fragments":["charaters."]},{"Key":"space charaters.","Fragments":["Thanks."]},{"Key":"Your solution","Fragments":["looks","looks"]},{"Key":"solution looks","Fragments":["so","good,","pretty"]},{"Key":"looks so","Fragments":["easy"]},{"Key":"so easy","Fragments":["compared","to"]},{"Key":"easy compared","Fragments":["to"]},{"Key":"to mine.","Fragments":["At"]},{"Key":"mine. At","Fragments":["least"]},{"Key":"At least","Fragments":["you"]},{"Key":"least you","Fragments":["are"]},{"Key":"also using","Fragments":["the","std::string","xubuntu"]},{"Key":"the \"else","Fragments":["if\""]},{"Key":"if\" for","Fragments":["phrases"]},{"Key":"for phrases","Fragments":["which"]},{"Key":"phrases which","Fragments":["would"]},{"Key":"would match","Fragments":["more"]},{"Key":"match more","Fragments":["then"]},{"Key":"more then","Fragments":["once."]},{"Key":"then once.","Fragments":["Seems"]},{"Key":"once. Seems","Fragments":["legal."]},{"Key":"Seems legal.","Fragments":["I"]},{"Key":"legal. I","Fragments":["like"]},{"Key":"you implemented","Fragments":["a"]},{"Key":"implemented a","Fragments":["bob","simple"]},{"Key":"bob class.","Fragments":["I"]},{"Key":"I've removed","Fragments":["phraseType","the"]},{"Key":"removed phraseType","Fragments":["like"]},{"Key":"phraseType like","Fragments":["suggested."]},{"Key":"like suggested.","Fragments":["There"]},{"Key":"suggested. There","Fragments":["was"]},{"Key":"There was","Fragments":["no"]},{"Key":"was no","Fragments":["need","need","real"]},{"Key":"this enum.","Fragments":["I've"]},{"Key":"enum. I've","Fragments":["removed"]},{"Key":"the prototypes","Fragments":["as"]},{"Key":"prototypes as","Fragments":["well."]},{"Key":"tried serveral","Fragments":["approaches"]},{"Key":"serveral approaches","Fragments":["for"]},{"Key":"approaches for","Fragments":["this"]},{"Key":"exercise. This","Fragments":["is"]},{"Key":"time I'","Fragments":["m"]},{"Key":"I' m","Fragments":["using"]},{"Key":"m using","Fragments":["regular"]},{"Key":"regular expression.","Fragments":["I"]},{"Key":"expression. I","Fragments":["still"]},{"Key":"still got","Fragments":["problems","a","a"]},{"Key":"got problems","Fragments":["to"]},{"Key":"problems to","Fragments":["find"]},{"Key":"right regex","Fragments":["for"]},{"Key":"for \"asking","Fragments":["a"]},{"Key":"\"asking a","Fragments":["question\""]},{"Key":"a question\"","Fragments":["and"]},{"Key":"question\" and","Fragments":["\"saying"]},{"Key":"and \"saying","Fragments":["anything\"."]},{"Key":"\"saying anything\".","Fragments":["I"]},{"Key":"anything\". I","Fragments":["trespassed"]},{"Key":"I trespassed","Fragments":["the"]},{"Key":"trespassed the","Fragments":["tests"]},{"Key":"tests using","Fragments":["the"]},{"Key":"else if","Fragments":["expressions"]},{"Key":"if expressions","Fragments":["because"]},{"Key":"expressions because","Fragments":["the"]},{"Key":"for \"shouting\"","Fragments":["and"]},{"Key":"\"shouting\" and","Fragments":["\"nothing\""]},{"Key":"and \"nothing\"","Fragments":["work"]},{"Key":"\"nothing\" work","Fragments":["as"]},{"Key":"I've allready","Fragments":["checked"]},{"Key":"allready checked","Fragments":["other"]},{"Key":"checked other","Fragments":["solutions"]},{"Key":"other solutions","Fragments":["and","that","I","to"]},{"Key":"solutions and","Fragments":["there"]},{"Key":"and there","Fragments":["are","are","to","are"]},{"Key":"easier then","Fragments":["mine."]},{"Key":"then mine.","Fragments":["Maybe"]},{"Key":"mine. Maybe","Fragments":["I'll"]},{"Key":"Maybe I'll","Fragments":["drop","come"]},{"Key":"I'll drop","Fragments":["the"]},{"Key":"drop the","Fragments":["regex"]},{"Key":"use boost","Fragments":["tokenizer."]},{"Key":"boost tokenizer.","Fragments":["With","I"]},{"Key":"tokenizer. With","Fragments":["it"]},{"Key":"With it","Fragments":["the"]},{"Key":"solution becomes","Fragments":["trivial."]},{"Key":"looks great.","Fragments":["Why"]},{"Key":"great. Why","Fragments":["not"]},{"Key":"make you","Fragments":["code"]},{"Key":"you code","Fragments":["look"]},{"Key":"look less","Fragments":["criptic."]},{"Key":"less criptic.","Fragments":["Like"]},{"Key":" (int_char","Fragments":["\u003e=","\u003e="]},{"Key":"(int_char \u003e=","Fragments":["65","97"]},{"Key":"\u003e= 65","Fragments":["\u0026\u0026"]},{"Key":"65 \u0026\u0026","Fragments":["int_char"]},{"Key":"\u0026\u0026 int_char","Fragments":["\u003c=","\u003c="]},{"Key":"int_char \u003c=","Fragments":["90)","122)"]},{"Key":"\u003c= 90)","Fragments":["--\u003e"]},{"Key":"90) --\u003e","Fragments":["isupper(prompt[i])"]},{"Key":"\u003e= 97","Fragments":["\u0026\u0026"]},{"Key":"97 \u0026\u0026","Fragments":["int_char"]},{"Key":"\u003c= 122)","Fragments":["--\u003e"]},{"Key":"122) --\u003e","Fragments":["isalpha(prompt[i])"]},{"Key":"and maybe","Fragments":["character"]},{"Key":"maybe character","Fragments":["codes"]},{"Key":"character codes","Fragments":["are"]},{"Key":"codes are","Fragments":["implementation"]},{"Key":"are implementation","Fragments":["dependent,"]},{"Key":"implementation dependent,","Fragments":["so"]},{"Key":"dependent, so","Fragments":["above"]},{"Key":"so above","Fragments":["will"]},{"Key":"above will","Fragments":["avoid"]},{"Key":"that dependence","Fragments":["too."]},{"Key":"this site,","Fragments":["so"]},{"Key":"site, so","Fragments":["forgive"]},{"Key":"so forgive","Fragments":["me"]},{"Key":"forgive me","Fragments":["if"]},{"Key":"am overly","Fragments":["nit-picky."]},{"Key":"the phraseType","Fragments":["type?"]},{"Key":"phraseType type?","Fragments":["It"]},{"Key":"type? It","Fragments":["seems"]},{"Key":"could save","Fragments":["quite"]},{"Key":"save quite","Fragments":["a"]},{"Key":"few lines","Fragments":["of","of"]},{"Key":"code by","Fragments":["moving"]},{"Key":"by moving","Fragments":["the"]},{"Key":"the actions","Fragments":["of"]},{"Key":"actions of","Fragments":["the"]},{"Key":"switch block","Fragments":["into"]},{"Key":"block into","Fragments":["the"]},{"Key":"the section","Fragments":["that"]},{"Key":"section that","Fragments":["determines"]},{"Key":"that determines","Fragments":["the"]},{"Key":"that you've","Fragments":["speeded","avoided","used","offloaded","got","kept"]},{"Key":"you've speeded","Fragments":["it"]},{"Key":"speeded it","Fragments":["up"]},{"Key":"the `if","Fragments":["(e.second.size()"]},{"Key":"`if (e.second.size()","Fragments":["=="]},{"Key":"(e.second.size() ==","Fragments":["1)`"]},{"Key":"== 1)`","Fragments":["bit"]},{"Key":"1)` bit","Fragments":["(I"]},{"Key":"bit (I","Fragments":["used"]},{"Key":"(I used","Fragments":["a"]},{"Key":"loop of","Fragments":["repeated","the"]},{"Key":"of repeated","Fragments":["subtraction"]},{"Key":"repeated subtraction","Fragments":["instead.)"]},{"Key":"Yes, thats","Fragments":["a"]},{"Key":"thats a","Fragments":["good"]},{"Key":"point. There","Fragments":["is"]},{"Key":"extra type.","Fragments":["Thank"]},{"Key":"type. Thank","Fragments":["you."]},{"Key":"Used the","Fragments":["sieve","explicit"]},{"Key":"sieve from","Fragments":["the"]},{"Key":"the earlier","Fragments":["problem,"]},{"Key":"earlier problem,","Fragments":["but"]},{"Key":"problem, but","Fragments":["it's"]},{"Key":"it's unacceptably","Fragments":["slow"]},{"Key":"unacceptably slow","Fragments":["for"]},{"Key":"slow for","Fragments":["numbers"]},{"Key":"for numbers","Fragments":["larger"]},{"Key":"numbers larger","Fragments":["than"]},{"Key":"than 10^4.","Fragments":["The"]},{"Key":"10^4. The","Fragments":["last"]},{"Key":"The last","Fragments":["test","point","thing"]},{"Key":"case took","Fragments":["several"]},{"Key":"took several","Fragments":["minutes"]},{"Key":"several minutes","Fragments":["to"]},{"Key":"minutes to","Fragments":["complete.","understand"]},{"Key":" ...well","Fragments":["that"]},{"Key":"...well that","Fragments":["was"]},{"Key":"was silly","Fragments":["of"]},{"Key":"silly of","Fragments":["me."]},{"Key":" @calista,","Fragments":["be"]},{"Key":"@calista, be","Fragments":["careful"]},{"Key":"be careful","Fragments":["O(N^2","not"]},{"Key":"careful O(N^2","Fragments":[")"]},{"Key":"O(N^2 )","Fragments":["is"]},{"Key":") is","Fragments":["_worse_"]},{"Key":"is _worse_","Fragments":["than"]},{"Key":"_worse_ than","Fragments":["O(N*log(N))."]},{"Key":"than O(N*log(N)).","Fragments":["imo"]},{"Key":"O(N*log(N)). imo","Fragments":["the"]},{"Key":"imo the","Fragments":["problem"]},{"Key":"problem can","Fragments":["be"]},{"Key":"be solved","Fragments":["in"]},{"Key":"solved in","Fragments":["O(N)."]},{"Key":"in O(N).","Fragments":["you"]},{"Key":"O(N). you","Fragments":["can"]},{"Key":"my solution,","Fragments":["which"]},{"Key":"solution, which","Fragments":["I"]},{"Key":"think works","Fragments":["in"]},{"Key":"works in","Fragments":["O(N)"]},{"Key":"in O(N)","Fragments":["time"]},{"Key":"O(N) time","Fragments":["complexity."]},{"Key":"time complexity.","Fragments":["one","it"]},{"Key":"complexity. one","Fragments":["more"]},{"Key":"more thing,","Fragments":["since","since"]},{"Key":"thing, since","Fragments":["my","you"]},{"Key":"since my","Fragments":["solution"]},{"Key":"solution counts","Fragments":["the"]},{"Key":"counts the","Fragments":["occurences"]},{"Key":"the occurences","Fragments":["of"]},{"Key":"occurences of","Fragments":["charactes,"]},{"Key":"of charactes,","Fragments":["it"]},{"Key":"charactes, it","Fragments":["uses"]},{"Key":"ascii byte","Fragments":["that"]},{"Key":"byte that","Fragments":["encodes"]},{"Key":"that encodes","Fragments":["the"]},{"Key":"encodes the","Fragments":["character"]},{"Key":"character as","Fragments":["_index_"]},{"Key":"as _index_","Fragments":["in"]},{"Key":"_index_ in","Fragments":["an"]},{"Key":"an array;","Fragments":["for"]},{"Key":"array; for","Fragments":["more"]},{"Key":"for more","Fragments":["complex","than"]},{"Key":"complex objects","Fragments":["a"]},{"Key":"objects a","Fragments":["map\u003c\u003e"]},{"Key":"a map\u003c\u003e","Fragments":["may"]},{"Key":"map\u003c\u003e may","Fragments":["be"]},{"Key":" @hazle,","Fragments":["finally"]},{"Key":"@hazle, finally","Fragments":["someone"]},{"Key":"finally someone","Fragments":["who"]},{"Key":"someone who","Fragments":["combines"]},{"Key":"who combines","Fragments":["c++"]},{"Key":"combines c++","Fragments":["features"]},{"Key":"c++ features","Fragments":["with"]},{"Key":"features with","Fragments":["fast"]},{"Key":"with fast","Fragments":["algorithms."]},{"Key":"fast algorithms.","Fragments":["most"]},{"Key":"algorithms. most","Fragments":["of"]},{"Key":"the solutions","Fragments":["I"]},{"Key":"solutions I","Fragments":["have","think","know"]},{"Key":"seen on","Fragments":["http://exercism.io"]},{"Key":"on http://exercism.io","Fragments":["for"]},{"Key":"http://exercism.io for","Fragments":["anagram"]},{"Key":"anagram use","Fragments":["either"]},{"Key":"use either","Fragments":["`algorithm::sort()`"]},{"Key":"either `algorithm::sort()`","Fragments":["(which"]},{"Key":"`algorithm::sort()` (which","Fragments":["is"]},{"Key":"is O(n*log2(n)))","Fragments":["or"]},{"Key":"O(n*log2(n))) or","Fragments":["`algorithm::is_permutation()`"]},{"Key":"or `algorithm::is_permutation()`","Fragments":["(which"]},{"Key":"`algorithm::is_permutation()` (which","Fragments":["is"]},{"Key":"is O(n^2","Fragments":["))"]},{"Key":"looks good!","Fragments":["Its"]},{"Key":"good! Its","Fragments":["very"]},{"Key":"Its very","Fragments":["modular"]},{"Key":"very modular","Fragments":["and"]},{"Key":"makes good","Fragments":["use"]},{"Key":"good use","Fragments":["of","of"]},{"Key":"boost and","Fragments":["std","go"]},{"Key":"and std","Fragments":["libraries."]},{"Key":"std libraries.","Fragments":["My"]},{"Key":"libraries. My","Fragments":["two"]},{"Key":"My two","Fragments":["nits"]},{"Key":"two nits","Fragments":["are:"]},{"Key":"1) The","Fragments":["comment"]},{"Key":"The comment","Fragments":["on"]},{"Key":"line 9","Fragments":["is"]},{"Key":"9 is","Fragments":["not"]},{"Key":"not accurate.","Fragments":["Shouting"]},{"Key":"accurate. Shouting","Fragments":["does"]},{"Key":"Shouting does","Fragments":["not"]},{"Key":"to end","Fragments":["in"]},{"Key":"end in","Fragments":["\"!\""]},{"Key":"in \"!\"","Fragments":["or"]},{"Key":"\"!\" or","Fragments":["\"?\"."]},{"Key":"2) Can","Fragments":["you"]},{"Key":"you infer","Fragments":["the"]},{"Key":"infer the","Fragments":["return"]},{"Key":"of isSayingAnything","Fragments":["from"]},{"Key":"isSayingAnything from","Fragments":["that"]},{"Key":"from that","Fragments":["of"]},{"Key":"that of","Fragments":["isNothingToSay?","the"]},{"Key":"of isNothingToSay?","Fragments":["Further,"]},{"Key":"isNothingToSay? Further,","Fragments":["could"]},{"Key":"Further, could","Fragments":["you"]},{"Key":"could you","Fragments":["make"]},{"Key":"last \"else","Fragments":["if\""]},{"Key":"if\" just","Fragments":["an"]},{"Key":"just an","Fragments":["\"else\"?","int"]},{"Key":"an \"else\"?","Fragments":["From"]},{"Key":"\"else\"? From","Fragments":["my"]},{"Key":"From my","Fragments":["interpretation"]},{"Key":"my interpretation","Fragments":["of"]},{"Key":"the readme,","Fragments":["Bob"]},{"Key":"readme, Bob","Fragments":["should"]},{"Key":"Bob should","Fragments":["still"]},{"Key":"should still","Fragments":["say"]},{"Key":"still say","Fragments":["\"Whatever.\""]},{"Key":"say \"Whatever.\"","Fragments":["if"]},{"Key":"\"Whatever.\" if","Fragments":["none","no"]},{"Key":"if none","Fragments":["of"]},{"Key":"none of","Fragments":["the"]},{"Key":"the conditionals","Fragments":["are","in"]},{"Key":"conditionals are","Fragments":["satisfied."]},{"Key":"Following atifhans's","Fragments":["suggestion,"]},{"Key":"atifhans's suggestion,","Fragments":["I"]},{"Key":"suggestion, I","Fragments":["am"]},{"Key":"functions isupper","Fragments":["and"]},{"Key":"isupper and","Fragments":["islower"]},{"Key":"and islower","Fragments":["instead"]},{"Key":"islower instead","Fragments":["of","of"]},{"Key":"of converting","Fragments":["the"]},{"Key":"ASCII character","Fragments":["to"]},{"Key":"an integer.","Fragments":["To"]},{"Key":"integer. To","Fragments":["avoid"]},{"Key":"avoid some","Fragments":["compiler"]},{"Key":"some compiler","Fragments":["warnings,"]},{"Key":"compiler warnings,","Fragments":["I"]},{"Key":"warnings, I","Fragments":["am"]},{"Key":"am also","Fragments":["using"]},{"Key":"std::string instead","Fragments":["of"]},{"Key":"of character","Fragments":["arrays."]},{"Key":"no best","Fragments":["case"]},{"Key":"best case","Fragments":["linear"]},{"Key":"case linear","Fragments":["solution"]},{"Key":"linear solution","Fragments":["to"]},{"Key":"this because","Fragments":["any","I","it"]},{"Key":"because any","Fragments":["iteration"]},{"Key":"any iteration","Fragments":["has"]},{"Key":"iteration has","Fragments":["to"]},{"Key":"do 2","Fragments":["iterations"]},{"Key":"2 iterations","Fragments":["over"]},{"Key":"over 2","Fragments":["sets"]},{"Key":"2 sets","Fragments":["of"]},{"Key":"sets of","Fragments":["N"]},{"Key":"of N","Fragments":["ofjects","compares"]},{"Key":"N ofjects","Fragments":["(N^(3))"]},{"Key":"ofjects (N^(3))","Fragments":["and"]},{"Key":"(N^(3)) and","Fragments":["even"]},{"Key":"and even","Fragments":["if","then"]},{"Key":"that iteration","Fragments":["it"]},{"Key":"iteration it","Fragments":["done","made"]},{"Key":"it done","Fragments":["once","several"]},{"Key":"done once","Fragments":["it"]},{"Key":"once it","Fragments":["must"]},{"Key":"must go","Fragments":["through"]},{"Key":"through 1","Fragments":["iteration"]},{"Key":"1 iteration","Fragments":["of"]},{"Key":"N compares","Fragments":["on"]},{"Key":"compares on","Fragments":["for"]},{"Key":"on for","Fragments":["each"]},{"Key":"each N","Fragments":["objects"]},{"Key":"N objects","Fragments":["against"]},{"Key":"objects against","Fragments":["(N^(2))"]},{"Key":"against (N^(2))","Fragments":["since"]},{"Key":"(N^(2)) since","Fragments":["each"]},{"Key":"first sequence","Fragments":["must"]},{"Key":"sequence must","Fragments":["be"]},{"Key":"be compared","Fragments":["with"]},{"Key":"compared with","Fragments":["every"]},{"Key":"with every","Fragments":["letter"]},{"Key":"every letter","Fragments":["of"]},{"Key":"the second.","Fragments":["The","There"]},{"Key":"second. The","Fragments":["difference"]},{"Key":"difference with","Fragments":["`std::is_permutation"]},{"Key":"with `std::is_permutation","Fragments":["`is"]},{"Key":"`std::is_permutation `is","Fragments":["that"]},{"Key":"`is that","Fragments":["it"]},{"Key":"the ability","Fragments":["to"]},{"Key":"ability to","Fragments":["stop"]},{"Key":"stop early","Fragments":["creating"]},{"Key":"early creating","Fragments":["linear"]},{"Key":"creating linear","Fragments":["time"]},{"Key":"linear time","Fragments":["if"]},{"Key":"time if","Fragments":["that"]},{"Key":"set is","Fragments":["arranged"]},{"Key":"is arranged","Fragments":["whereas"]},{"Key":"arranged whereas","Fragments":["sort"]},{"Key":"whereas sort","Fragments":["did"]},{"Key":"sort did","Fragments":["not"]},{"Key":"not and","Fragments":["would"]},{"Key":"would check","Fragments":["all"]},{"Key":"all elements","Fragments":["regardless."]},{"Key":"elements regardless.","Fragments":["Do"]},{"Key":"regardless. Do","Fragments":["you"]},{"Key":"you agree?","Fragments":["but"]},{"Key":"agree? but","Fragments":["I"]},{"Key":"do see","Fragments":["the"]},{"Key":"the flaw","Fragments":["in"]},{"Key":"flaw in","Fragments":["the"]},{"Key":"the design.","Fragments":["I'll"]},{"Key":"design. I'll","Fragments":["consider"]},{"Key":"I'll consider","Fragments":["different"]},{"Key":"consider different","Fragments":["algorithms"]},{"Key":"different algorithms","Fragments":["when"]},{"Key":"algorithms when","Fragments":["I"]},{"Key":"get home","Fragments":["such"]},{"Key":"home such","Fragments":["as"]},{"Key":"the `std::equal`","Fragments":["that"]},{"Key":"`std::equal` that","Fragments":["you"]},{"Key":"used which","Fragments":["has"]},{"Key":"has much","Fragments":["better"]},{"Key":"better time.","Fragments":["__Thanks!__"]},{"Key":" Comments","Fragments":["can"]},{"Key":"Comments can","Fragments":["be"]},{"Key":"be fixed.","Fragments":["No"]},{"Key":"fixed. No","Fragments":["problem."]},{"Key":"No problem.","Fragments":["Done."]},{"Key":"About your","Fragments":["second"]},{"Key":"your second","Fragments":["thought."]},{"Key":"second thought.","Fragments":["If"]},{"Key":"thought. If","Fragments":["I"]},{"Key":"I change","Fragments":["the"]},{"Key":"condition to","Fragments":["an"]},{"Key":"an else","Fragments":["I","that"]},{"Key":"else I","Fragments":["also"]},{"Key":"also could","Fragments":["remove"]},{"Key":"the \"isSayingAnything\"-method.","Fragments":["Another"]},{"Key":"\"isSayingAnything\"-method. Another","Fragments":["possibility"]},{"Key":"possibility would","Fragments":["be"]},{"Key":"initialize bobsAnswer","Fragments":["to"]},{"Key":"bobsAnswer to","Fragments":["\"Whatever.\","]},{"Key":"to \"Whatever.\",","Fragments":["then"]},{"Key":"\"Whatever.\", then","Fragments":["there"]},{"Key":"then there","Fragments":["is","is","is"]},{"Key":"last condition","Fragments":["at"]},{"Key":"condition at","Fragments":["all."]},{"Key":"mean in","Fragments":["your"]},{"Key":"first question","Fragments":["in"]},{"Key":"question in","Fragments":["2)?","a"]},{"Key":" (What","Fragments":["I"]},{"Key":"(What I","Fragments":["see"]},{"Key":"see right","Fragments":["now,"]},{"Key":"right now,","Fragments":["my"]},{"Key":"now, my","Fragments":["nameing"]},{"Key":"my nameing","Fragments":["isn't"]},{"Key":"nameing isn't","Fragments":["very"]},{"Key":"isn't very","Fragments":["good"]},{"Key":"good for","Fragments":["this"]},{"Key":"this two","Fragments":["conditions.)"]},{"Key":"I mean","Fragments":["is"]},{"Key":"mean is","Fragments":["that"]},{"Key":"if isSayingAnything","Fragments":["returns"]},{"Key":"isSayingAnything returns","Fragments":["true,"]},{"Key":"returns true,","Fragments":["then"]},{"Key":"true, then","Fragments":["isNothingToSay"]},{"Key":"then isNothingToSay","Fragments":["returns"]},{"Key":"isNothingToSay returns","Fragments":["false,"]},{"Key":"returns false,","Fragments":["and"]},{"Key":"false, and","Fragments":["vice"]},{"Key":"and vice","Fragments":["versa.","versa."]},{"Key":"vice versa.","Fragments":["I","As"]},{"Key":"versa. I","Fragments":["could"]},{"Key":"be wrong","Fragments":["because","about"]},{"Key":"wrong because","Fragments":["I"]},{"Key":"boost regex","Fragments":["syntax.","libraries."]},{"Key":"regex syntax.","Fragments":["If"]},{"Key":"syntax. If","Fragments":["you"]},{"Key":"you remove","Fragments":["that"]},{"Key":"remove that","Fragments":["method,"]},{"Key":"that method,","Fragments":["then"]},{"Key":"method, then","Fragments":["it"]},{"Key":" @marianna,","Fragments":["leaving"]},{"Key":"@marianna, leaving","Fragments":["apart"]},{"Key":"leaving apart","Fragments":["all"]},{"Key":"apart all","Fragments":["the"]},{"Key":"algorithms offered","Fragments":["by"]},{"Key":"offered by","Fragments":["c++"]},{"Key":"by c++","Fragments":["and"]},{"Key":"c++ and","Fragments":["looking"]},{"Key":"and looking","Fragments":["at"]},{"Key":"problem purely","Fragments":["from"]},{"Key":"purely from","Fragments":["an"]},{"Key":"from an","Fragments":["algorithm"]},{"Key":"algorithm analysis","Fragments":["point"]},{"Key":"analysis point","Fragments":["of"]},{"Key":"of view,","Fragments":["here"]},{"Key":"view, here","Fragments":["is"]},{"Key":" 1st","Fragments":["step:"]},{"Key":"1st step:","Fragments":["computing"]},{"Key":"step: computing","Fragments":["the"]},{"Key":"computing the","Fragments":["character","overall"]},{"Key":"character occurences","Fragments":["in","in"]},{"Key":"occurences in","Fragments":["the","the"]},{"Key":"original word.","Fragments":["this"]},{"Key":"word. this","Fragments":["can"]},{"Key":"this can","Fragments":["be","be"]},{"Key":"considered as","Fragments":["a"]},{"Key":"not even","Fragments":["taken","need"]},{"Key":"even taken","Fragments":["into"]},{"Key":"taken into","Fragments":["account"]},{"Key":"account when","Fragments":["computing"]},{"Key":"when computing","Fragments":["the"]},{"Key":"overall time","Fragments":["complexity."]},{"Key":"complexity. it","Fragments":["is"]},{"Key":" 2nd","Fragments":["step:"]},{"Key":"2nd step:","Fragments":["for"]},{"Key":"step: for","Fragments":["all"]},{"Key":"input would-be","Fragments":["anagrams"]},{"Key":"would-be anagrams","Fragments":["do:"]},{"Key":" a.","Fragments":["compute"]},{"Key":"a. compute","Fragments":["the"]},{"Key":"compute the","Fragments":["character"]},{"Key":"anagram storing","Fragments":["the"]},{"Key":"storing the","Fragments":["result","searches","whole","song","data","verses","value"]},{"Key":"result into","Fragments":["a"]},{"Key":"vector -","Fragments":["O(len(would-be"]},{"Key":"- O(len(would-be","Fragments":["anagram))","anagram))."]},{"Key":" b.","Fragments":["compare"]},{"Key":"b. compare","Fragments":["the"]},{"Key":"compare the","Fragments":["vector","two","whole","choices","two"]},{"Key":"vector from","Fragments":["1st","2nd"]},{"Key":"from 1st","Fragments":["step"]},{"Key":"1st step","Fragments":["with"]},{"Key":"step with","Fragments":["the"]},{"Key":"from 2nd","Fragments":["step,"]},{"Key":"2nd step,","Fragments":["a."]},{"Key":"step, a.","Fragments":["-"]},{"Key":"a. -","Fragments":["O(len(would-be"]},{"Key":"O(len(would-be anagram)).","Fragments":["if"]},{"Key":"anagram)). if","Fragments":["these"]},{"Key":"if these","Fragments":["vectors","strings"]},{"Key":"these vectors","Fragments":["are"]},{"Key":"vectors are","Fragments":["equal,"]},{"Key":"are equal,","Fragments":["this"]},{"Key":"equal, this","Fragments":["is"]},{"Key":" now,","Fragments":["the"]},{"Key":"now, the","Fragments":["overall"]},{"Key":"overall complexity","Fragments":["is","is"]},{"Key":" O(len(word))","Fragments":["+"]},{"Key":"O(len(word)) +","Fragments":["sum(O(len(would_be"]},{"Key":"+ sum(O(len(would_be","Fragments":["anagram_i))"]},{"Key":"a _linear_","Fragments":["function"]},{"Key":"_linear_ function","Fragments":["of"]},{"Key":"2nd step","Fragments":["above"]},{"Key":"step above","Fragments":["uses:"]},{"Key":"* sort()","Fragments":["-"]},{"Key":"sort() -","Fragments":["complexity"]},{"Key":"- complexity","Fragments":["becomes"]},{"Key":"complexity becomes","Fragments":["O(len(would_be"]},{"Key":"becomes O(len(would_be","Fragments":["anagram_i)*log2(len(would_be"]},{"Key":"O(len(would_be anagram_i)*log2(len(would_be","Fragments":["anagram_i)))"]},{"Key":"* is_permutation","Fragments":["-"]},{"Key":"is_permutation -","Fragments":["compexity"]},{"Key":"- compexity","Fragments":["becomes"]},{"Key":"compexity becomes","Fragments":["O(len^2"]},{"Key":"becomes O(len^2","Fragments":["(would_be_anagram_i))"]},{"Key":"longer a","Fragments":["linear"]},{"Key":"a linear","Fragments":["function","search.","search.`","logic"]},{"Key":"linear function","Fragments":["of"]},{"Key":" input","Fragments":["words..."]},{"Key":" Tried","Fragments":["to","to"]},{"Key":"Tried to","Fragments":["go","keep","replicate"]},{"Key":"for code","Fragments":["readability"]},{"Key":"code readability","Fragments":["on","a"]},{"Key":" Rather","Fragments":["than","than","than"]},{"Key":"Rather than","Fragments":["defining","have","introducing"]},{"Key":"than defining","Fragments":["your"]},{"Key":"defining your","Fragments":["own"]},{"Key":"own string","Fragments":["word_chars,"]},{"Key":"string word_chars,","Fragments":["you"]},{"Key":"word_chars, you","Fragments":["could"]},{"Key":"function isalnum()","Fragments":["to"]},{"Key":"isalnum() to","Fragments":["tell"]},{"Key":"to tell","Fragments":["whether"]},{"Key":"tell whether","Fragments":["something"]},{"Key":"whether something","Fragments":["is"]},{"Key":"something is","Fragments":["alphabetic,"]},{"Key":"is alphabetic,","Fragments":["numeric,"]},{"Key":"alphabetic, numeric,","Fragments":["or"]},{"Key":"numeric, or","Fragments":["something"]},{"Key":"or something","Fragments":["else.","like","similar."]},{"Key":"something else.","Fragments":["The"]},{"Key":"difference would","Fragments":["be"]},{"Key":"underscore _","Fragments":["is"]},{"Key":"_ is","Fragments":["counted"]},{"Key":"is counted","Fragments":["as"]},{"Key":"a separator.","Fragments":["Whether"]},{"Key":"separator. Whether","Fragments":["or"]},{"Key":"Whether or","Fragments":["not"]},{"Key":"not _","Fragments":["should"]},{"Key":"_ should","Fragments":["be"]},{"Key":"a separator","Fragments":["is"]},{"Key":"separator is","Fragments":["ambiguous"]},{"Key":"is ambiguous","Fragments":["from"]},{"Key":"ambiguous from","Fragments":["the"]},{"Key":"readme and","Fragments":["test"]},{"Key":"sure where","Fragments":["to"]},{"Key":"where to","Fragments":["put"]},{"Key":"the std::sort","Fragments":["(line","algorithm"]},{"Key":"std::sort (line","Fragments":["12"]},{"Key":"(line 12","Fragments":["here)."]},{"Key":"12 here).","Fragments":["It"]},{"Key":"here). It","Fragments":["would"]},{"Key":"efficient overall","Fragments":["(probably)"]},{"Key":"overall (probably)","Fragments":["to"]},{"Key":"(probably) to","Fragments":["sort"]},{"Key":"sort just","Fragments":["prior"]},{"Key":"just prior","Fragments":["to"]},{"Key":"prior to","Fragments":["returning","entering"]},{"Key":"to returning","Fragments":["the"]},{"Key":"the information,","Fragments":["but"]},{"Key":"information, but","Fragments":["that"]},{"Key":"mean looping","Fragments":["through"]},{"Key":"through keys","Fragments":["in"]},{"Key":"keys in","Fragments":["the"]},{"Key":"function starting","Fragments":["on"]},{"Key":"starting on","Fragments":["line","line"]},{"Key":"line 15.","Fragments":["Also,"]},{"Key":"15. Also,","Fragments":["this"]},{"Key":"Also, this","Fragments":["way"]},{"Key":"data is","Fragments":["stored"]},{"Key":"is stored","Fragments":["in"]},{"Key":"stored in","Fragments":["the"]},{"Key":"correct order","Fragments":["in"]},{"Key":"order in","Fragments":["memory."]},{"Key":"Now, there","Fragments":["is"]},{"Key":"only the","Fragments":["uncomplete","characters","first","first"]},{"Key":"the uncomplete","Fragments":["question-regex"]},{"Key":"uncomplete question-regex","Fragments":["left."]},{"Key":"question-regex left.","Fragments":["Thank"]},{"Key":"left. Thank","Fragments":["you"]},{"Key":"your input.","Fragments":["I'll"]},{"Key":"input. I'll","Fragments":["move"]},{"Key":"I'll move","Fragments":["up"]},{"Key":"move up","Fragments":["to"]},{"Key":"next stage","Fragments":["for"]},{"Key":"stage for","Fragments":["now."]},{"Key":"for now.","Fragments":["Maybe"]},{"Key":"now. Maybe","Fragments":["I"]},{"Key":"come back","Fragments":["later.","at","(that","and"]},{"Key":"i misread","Fragments":["that,"]},{"Key":"misread that,","Fragments":["I"]},{"Key":"was thinking","Fragments":["it","of.","there","of","\"how"]},{"Key":"thinking it","Fragments":["was"]},{"Key":"was alphanumerics,","Fragments":["no"]},{"Key":"alphanumerics, no","Fragments":["alphas,"]},{"Key":"no alphas,","Fragments":["my"]},{"Key":"alphas, my","Fragments":["mistake,"]},{"Key":"my mistake,","Fragments":["of"]},{"Key":"mistake, of","Fragments":["course"]},{"Key":"of course","Fragments":["that"]},{"Key":"course that","Fragments":["wouldn't"]},{"Key":"have worked","Fragments":["with"]},{"Key":"worked with","Fragments":["your","the","many"]},{"Key":"with your","Fragments":["test","naming","for-loop.","version?","code.","numeric","code","code"]},{"Key":"your test","Fragments":["for","for","for","for"]},{"Key":"all capitals","Fragments":["numAlphas"]},{"Key":"capitals numAlphas","Fragments":["=="]},{"Key":"numAlphas ==","Fragments":["numUppers"]},{"Key":" but","Fragments":["I"]},{"Key":"do have","Fragments":["one"]},{"Key":"one suggestion,","Fragments":["trivial"]},{"Key":"suggestion, trivial","Fragments":["but"]},{"Key":"trivial but","Fragments":["might"]},{"Key":"but might","Fragments":["look","at"]},{"Key":"I've only","Fragments":["recently"]},{"Key":"only recently","Fragments":["discovered"]},{"Key":"recently discovered","Fragments":["range"]},{"Key":"discovered range","Fragments":["based"]},{"Key":"based loops","Fragments":["in"]},{"Key":"loops in","Fragments":["c++,"]},{"Key":"in c++,","Fragments":["but"]},{"Key":"your char","Fragments":["letter"]},{"Key":"letter before","Fragments":["the"]},{"Key":" then","Fragments":["when"]},{"Key":"then when","Fragments":["you"]},{"Key":"you exit","Fragments":["the"]},{"Key":" won't","Fragments":["letter"]},{"Key":"won't letter","Fragments":["will"]},{"Key":"letter will","Fragments":["be"]},{"Key":"which case","Fragments":["you","the","the","the"]},{"Key":" (conv.back()","Fragments":["=="]},{"Key":"(conv.back() ==","Fragments":["'?');"]},{"Key":" letter","Fragments":["=="]},{"Key":"letter ==","Fragments":["'?'"]},{"Key":"of creating","Fragments":["a","an","the"]},{"Key":"creating a","Fragments":["method","second"]},{"Key":"method for","Fragments":["handling"]},{"Key":"for handling","Fragments":["whether"]},{"Key":"handling whether","Fragments":["or"]},{"Key":"not \"beer\"","Fragments":["should"]},{"Key":"\"beer\" should","Fragments":["be"]},{"Key":"be plural,","Fragments":["I"]},{"Key":"plural, I","Fragments":["handle"]},{"Key":"I handle","Fragments":["the"]},{"Key":"case individually","Fragments":["in"]},{"Key":"individually in","Fragments":["the"]},{"Key":"the twoBeers","Fragments":["string."]},{"Key":"twoBeers string.","Fragments":["I"]},{"Key":"which cases","Fragments":["would"]},{"Key":"cases would","Fragments":["be"]},{"Key":"considered \"special\"","Fragments":["outside"]},{"Key":"\"special\" outside","Fragments":["the"]},{"Key":"the song,","Fragments":["and"]},{"Key":"song, and","Fragments":["while"]},{"Key":"while handling","Fragments":["the"]},{"Key":"handling the","Fragments":["plurality","whitespace"]},{"Key":"the plurality","Fragments":["case"]},{"Key":"plurality case","Fragments":["seems"]},{"Key":"case seems","Fragments":["like"]},{"Key":"interesting exercise","Fragments":["in"]},{"Key":"itself, it","Fragments":["also"]},{"Key":"also felt","Fragments":["like"]},{"Key":"felt like","Fragments":["going"]},{"Key":"like going","Fragments":["down"]},{"Key":"the rabbit","Fragments":["hole"]},{"Key":"rabbit hole","Fragments":["a"]},{"Key":"hole a","Fragments":["little."]},{"Key":" Regex","Fragments":["is"]},{"Key":"great solution","Fragments":["here"]},{"Key":"solution here","Fragments":["-"]},{"Key":"here -","Fragments":["especially"]},{"Key":"- especially","Fragments":["if"]},{"Key":"especially if","Fragments":["Bob"]},{"Key":"if Bob","Fragments":["has"]},{"Key":"Bob has","Fragments":["scope"]},{"Key":"has scope","Fragments":["creep"]},{"Key":"scope creep","Fragments":["and"]},{"Key":"creep and","Fragments":["develops"]},{"Key":"and develops","Fragments":["more"]},{"Key":"develops more","Fragments":["complex"]},{"Key":"are three","Fragments":["different"]},{"Key":"places in","Fragments":["this"]},{"Key":"code where","Fragments":["I"]},{"Key":"whether `phrase[begin_word]","Fragments":["!="]},{"Key":"`phrase[begin_word] !=","Fragments":["'\\0'`."]},{"Key":"!= '\\0'`.","Fragments":["I"]},{"Key":"'\\0'`. I","Fragments":["feel"]},{"Key":"elegant (i.e.","Fragments":["less"]},{"Key":"(i.e. less","Fragments":["repetitive)"]},{"Key":"less repetitive)","Fragments":["solution."]},{"Key":"had considered","Fragments":["using"]},{"Key":"if (strand1[i]","Fragments":["!="]},{"Key":"(strand1[i] !=","Fragments":["strand2[i])"]},{"Key":"of line","Fragments":["12.","12."]},{"Key":"line 12.","Fragments":["While","So"]},{"Key":"12. While","Fragments":["that"]},{"Key":"While that","Fragments":["might"]},{"Key":"been more","Fragments":["readable,","clear."]},{"Key":"more readable,","Fragments":["I","in"]},{"Key":"readable, I","Fragments":["prefer"]},{"Key":"I submitted","Fragments":["I've","it,","a"]},{"Key":"submitted I've","Fragments":["seen"]},{"Key":"seen a","Fragments":["bunch","lot"]},{"Key":"people using","Fragments":["regex"]},{"Key":"regex and","Fragments":["other"]},{"Key":"other things","Fragments":["of"]},{"Key":"things of","Fragments":["that"]},{"Key":"that sort","Fragments":["and"]},{"Key":"just seems","Fragments":["like"]},{"Key":"like overkill","Fragments":["to"]},{"Key":"overkill to","Fragments":["me"]},{"Key":"me for","Fragments":["this"]},{"Key":"problem. In","Fragments":["the","my"]},{"Key":"the situation","Fragments":["it"]},{"Key":"situation it","Fragments":["seems"]},{"Key":"seems that","Fragments":["just"]},{"Key":"just using","Fragments":[".back()","a"]},{"Key":"using .back()","Fragments":["and"]},{"Key":".back() and","Fragments":["then"]},{"Key":"then switching","Fragments":["out"]},{"Key":"switching out","Fragments":["whatever"]},{"Key":"out whatever","Fragments":["punctuation(or"]},{"Key":"whatever punctuation(or","Fragments":["lack"]},{"Key":"punctuation(or lack","Fragments":["thereof)"]},{"Key":"lack thereof)","Fragments":["should"]},{"Key":"thereof) should","Fragments":["do"]},{"Key":"the trick","Fragments":["just"]},{"Key":"trick just","Fragments":["fine."]},{"Key":"pretty straightforward.","Fragments":["The","Pretty"]},{"Key":"straightforward. The","Fragments":["boost"]},{"Key":"The boost","Fragments":["library","gregorian"]},{"Key":"boost library","Fragments":["does","for","is","or"]},{"Key":"library does","Fragments":["all"]},{"Key":"does all","Fragments":["the","the"]},{"Key":"the heavy","Fragments":["lifting"]},{"Key":"heavy lifting","Fragments":["for"]},{"Key":"lifting for","Fragments":["me"]},{"Key":" use","Fragments":["boost::tokenizer"]},{"Key":"use boost::tokenizer","Fragments":["and"]},{"Key":"boost::tokenizer and","Fragments":["the"]},{"Key":"simpler. check","Fragments":["out"]},{"Key":"check out","Fragments":["my"]},{"Key":"out my","Fragments":["submission"]},{"Key":"my submission","Fragments":["on"]},{"Key":"submission on","Fragments":["this"]},{"Key":"what i","Fragments":["mean."]},{"Key":"you said,","Fragments":["but"]},{"Key":"said, but","Fragments":["I"]},{"Key":"guess Range","Fragments":["based"]},{"Key":"Range based","Fragments":["for"]},{"Key":"loops don't","Fragments":["support"]},{"Key":"don't support","Fragments":["declarations"]},{"Key":"support declarations","Fragments":["outside."]},{"Key":"declarations outside.","Fragments":["Anyways"]},{"Key":"outside. Anyways","Fragments":["I"]},{"Key":"Anyways I","Fragments":["feel"]},{"Key":"feel current","Fragments":["implementation"]},{"Key":"current implementation","Fragments":["is"]},{"Key":"readable, in","Fragments":["a"]},{"Key":"a sense","Fragments":["you"]},{"Key":"sense you","Fragments":["are"]},{"Key":"are checking","Fragments":["the","for"]},{"Key":"be '?',","Fragments":["which"]},{"Key":"'?', which","Fragments":["may"]},{"Key":"so obvious","Fragments":["when"]},{"Key":"obvious when","Fragments":["making"]},{"Key":"when making","Fragments":["the","one"]},{"Key":"the comparision","Fragments":["that"]},{"Key":"comparision that","Fragments":["you"]},{"Key":"you suggested.","Fragments":["Thanks."]},{"Key":" Sooo","Fragments":["I'm"]},{"Key":"Sooo I'm","Fragments":["not"]},{"Key":"a programmer","Fragments":["but","down"]},{"Key":"programmer but","Fragments":["I"]},{"Key":"as readable","Fragments":["as"]},{"Key":"be happy","Fragments":["about"]},{"Key":"happy about","Fragments":["any"]},{"Key":"about any","Fragments":["kind"]},{"Key":"any kind","Fragments":["of","of"]},{"Key":"Oh cool","Fragments":["I"]},{"Key":"cool I","Fragments":["can"]},{"Key":"can index","Fragments":["`string`s"]},{"Key":"index `string`s","Fragments":["directly"]},{"Key":" Converted","Fragments":["to","from"]},{"Key":"Converted to","Fragments":["a"]},{"Key":"a c_string","Fragments":["because"]},{"Key":"c_string because","Fragments":["it's"]},{"Key":"it's easy","Fragments":["to"]},{"Key":"to index","Fragments":["through","```s1[5]"]},{"Key":"index through","Fragments":["those."]},{"Key":"through those.","Fragments":["Definitely"]},{"Key":"those. Definitely","Fragments":["curious"]},{"Key":"Definitely curious","Fragments":["about"]},{"Key":"curious about","Fragments":["ways","whether"]},{"Key":"about ways","Fragments":["to"]},{"Key":"to tune","Fragments":["this"]},{"Key":"tune this","Fragments":["code"]},{"Key":"a stringstream,","Fragments":["but"]},{"Key":"stringstream, but","Fragments":["I"]},{"Key":"couldn't get","Fragments":["this"]},{"Key":"to work.","Fragments":["It","Please"]},{"Key":"work. It","Fragments":["failed"]},{"Key":"It failed","Fragments":["to"]},{"Key":"failed to","Fragments":["pull"]},{"Key":"to pull","Fragments":["out","it"]},{"Key":"pull out","Fragments":["all"]},{"Key":"out all","Fragments":["the"]},{"Key":"the punctuation.","Fragments":["Did"]},{"Key":"punctuation. Did","Fragments":["this"]},{"Key":"for you?","Fragments":["If"]},{"Key":"you? If","Fragments":["not,"]},{"Key":"not, maybe","Fragments":["we"]},{"Key":"maybe we","Fragments":["can"]},{"Key":"can extend","Fragments":["one"]},{"Key":"extend one","Fragments":["of"]},{"Key":" Realized","Fragments":["after"]},{"Key":"Realized after","Fragments":["submitting"]},{"Key":"after submitting","Fragments":["I"]},{"Key":"submitting I","Fragments":["didn't"]},{"Key":"to actually","Fragments":["calculate","have"]},{"Key":"actually calculate","Fragments":["the"]},{"Key":"calculate the","Fragments":["prime"]},{"Key":"the prime","Fragments":["factors...","factorizations","factors"]},{"Key":"is incredibly","Fragments":["expressive"]},{"Key":"incredibly expressive","Fragments":["and"]},{"Key":"expressive and","Fragments":["easy"]},{"Key":"and easy","Fragments":["to"]},{"Key":"to read,","Fragments":["thanks","but","it","thanks"]},{"Key":"read, thanks","Fragments":["to","to"]},{"Key":"to well-placed","Fragments":["comments"]},{"Key":"well-placed comments","Fragments":["and"]},{"Key":"and aptly","Fragments":["chosen"]},{"Key":"aptly chosen","Fragments":["variable"]},{"Key":"chosen variable","Fragments":["names."]},{"Key":"`using` declarations","Fragments":["are","within","within"]},{"Key":"declarations are","Fragments":["restrictive,"]},{"Key":"are restrictive,","Fragments":["avoiding"]},{"Key":"restrictive, avoiding","Fragments":["namespace"]},{"Key":"avoiding namespace","Fragments":["pollution."]},{"Key":"namespace pollution.","Fragments":["One"]},{"Key":"pollution. One","Fragments":["alternative"]},{"Key":"One alternative","Fragments":["to"]},{"Key":"declarations within","Fragments":["the","the"]},{"Key":"the `bob`","Fragments":["namespace."]},{"Key":"It's really","Fragments":["nice","good"]},{"Key":"nice that","Fragments":["the"]},{"Key":"of analysing","Fragments":["the"]},{"Key":"analysing the","Fragments":["message"]},{"Key":"message string","Fragments":["is","only"]},{"Key":"is passed","Fragments":["off","by","to"]},{"Key":"passed off","Fragments":["to"]},{"Key":"off to","Fragments":["helper","a"]},{"Key":"helper functions,","Fragments":["each","with"]},{"Key":"functions, each","Fragments":["with"]},{"Key":"a clear","Fragments":["purpose","benefit."]},{"Key":"clear purpose","Fragments":["and"]},{"Key":"purpose and","Fragments":["well-defined","output"]},{"Key":"and well-defined","Fragments":["outputs."]},{"Key":"well-defined outputs.","Fragments":["However,"]},{"Key":"outputs. However,","Fragments":["these"]},{"Key":"However, these","Fragments":["helper"]},{"Key":"these helper","Fragments":["functions"]},{"Key":"are internal","Fragments":["to"]},{"Key":"`hey` function,","Fragments":["so","because"]},{"Key":"function, so","Fragments":["you","all","it's"]},{"Key":"could considering","Fragments":["moving"]},{"Key":"considering moving","Fragments":["these"]},{"Key":"moving these","Fragments":["to"]},{"Key":"these to","Fragments":["an","your"]},{"Key":"keep them","Fragments":["out"]},{"Key":"them out","Fragments":["of","into","in"]},{"Key":"My only","Fragments":["suggestion","nitpick","nitpick","gripe"]},{"Key":"only suggestion","Fragments":["is","would"]},{"Key":"suggestion is","Fragments":["to"]},{"Key":"your `using`","Fragments":["declaration"]},{"Key":"`using` declaration","Fragments":["to","(eg.","imports"]},{"Key":"declaration to","Fragments":["within","```dna::counter"]},{"Key":"to within","Fragments":["the"]},{"Key":"hamming namespace,","Fragments":["and"]},{"Key":"namespace, and","Fragments":["to"]},{"Key":"to restrict","Fragments":["it","yourself"]},{"Key":"restrict it","Fragments":["to"]},{"Key":"like `using","Fragments":["std::string`"]},{"Key":"std::string` to","Fragments":["avoid"]},{"Key":"avoid namespace","Fragments":["pollution."]},{"Key":"is reasonably","Fragments":["clean"]},{"Key":"reasonably clean","Fragments":["and"]},{"Key":"see comments.","Fragments":["However,"]},{"Key":"comments. However,","Fragments":["there"]},{"Key":"few points","Fragments":["of"]},{"Key":"points of","Fragments":["possible"]},{"Key":"possible improvement","Fragments":["here:"]},{"Key":"Line 6:","Fragments":["`using"]},{"Key":"6: `using","Fragments":["namespace"]},{"Key":"to pollution","Fragments":["of"]},{"Key":"pollution of","Fragments":["the"]},{"Key":"global namespace,","Fragments":["where"]},{"Key":"namespace, where","Fragments":["a"]},{"Key":"where a","Fragments":["bunch","number-only"]},{"Key":"of identifiers","Fragments":["that"]},{"Key":"identifiers that","Fragments":["aren't"]},{"Key":"aren't used","Fragments":["are"]},{"Key":"used are","Fragments":["being"]},{"Key":"are being","Fragments":["brought"]},{"Key":"being brought","Fragments":["into"]},{"Key":"scope. Consider","Fragments":["being"]},{"Key":"Consider being","Fragments":["more"]},{"Key":"more restrictive","Fragments":["with","`using"]},{"Key":"restrictive with","Fragments":["the"]},{"Key":"declaration (eg.","Fragments":["`using"]},{"Key":"(eg. `using","Fragments":["std::string`),","namespace","std::string`)."]},{"Key":"`using std::string`),","Fragments":["and"]},{"Key":"std::string`), and","Fragments":["moving"]},{"Key":"and moving","Fragments":["the"]},{"Key":"the declaration","Fragments":["inside"]},{"Key":"the word_count","Fragments":["namespace.","function","namespace"]},{"Key":" Lines","Fragments":["30-31:","62-63:","61"]},{"Key":"Lines 30-31:","Fragments":["it's"]},{"Key":"30-31: it's","Fragments":["perfectly"]},{"Key":"it's perfectly","Fragments":["fine"]},{"Key":"perfectly fine","Fragments":["to"]},{"Key":"call `tolower`","Fragments":["without"]},{"Key":"`tolower` without","Fragments":["checking"]},{"Key":"without checking","Fragments":["if"]},{"Key":"Lines 62-63:","Fragments":["you"]},{"Key":"62-63: you","Fragments":["can"]},{"Key":"can increment","Fragments":["the"]},{"Key":"increment the","Fragments":["result[word]"]},{"Key":"the result[word]","Fragments":["directly"]},{"Key":"code uses","Fragments":["a"]},{"Key":"a combination","Fragments":["of"]},{"Key":"of searching","Fragments":["for"]},{"Key":"and alphanumeric","Fragments":["characters,"]},{"Key":"alphanumeric characters,","Fragments":["which"]},{"Key":"characters, which","Fragments":["can"]},{"Key":"a slight","Fragments":["loss"]},{"Key":"slight loss","Fragments":["of"]},{"Key":"loss of","Fragments":["generality"]},{"Key":"of generality","Fragments":["(for"]},{"Key":"generality (for","Fragments":["instance,"]},{"Key":"(for instance,","Fragments":["even"]},{"Key":"instance, even","Fragments":["though"]},{"Key":"not tested,","Fragments":["it's"]},{"Key":"tested, it's","Fragments":["reasonable"]},{"Key":"it's reasonable","Fragments":["to"]},{"Key":"reasonable to","Fragments":["assume"]},{"Key":"to assume","Fragments":["that"]},{"Key":"assume that","Fragments":["a"]},{"Key":"a text","Fragments":["given"]},{"Key":"text given","Fragments":["to"]},{"Key":"word_count function","Fragments":["might"]},{"Key":"function might","Fragments":["use","be","give"]},{"Key":"might use","Fragments":["any","some","an","an","an"]},{"Key":"use any","Fragments":["combination","int"]},{"Key":"any combination","Fragments":["of"]},{"Key":"of `\\r`","Fragments":["and"]},{"Key":"`\\r` and","Fragments":["`\\n`"]},{"Key":"and `\\n`","Fragments":["for"]},{"Key":"`\\n` for","Fragments":["newlines,"]},{"Key":"for newlines,","Fragments":["and"]},{"Key":"newlines, and","Fragments":["might"]},{"Key":"and might","Fragments":["contain","be"]},{"Key":"might contain","Fragments":["tabs."]},{"Key":"contain tabs.","Fragments":["The"]},{"Key":"tabs. The","Fragments":["only"]},{"Key":"only characters","Fragments":["that"]},{"Key":"characters that","Fragments":["we"]},{"Key":"about are","Fragments":["alphanumerics,"]},{"Key":"are alphanumerics,","Fragments":["so"]},{"Key":"alphanumerics, so","Fragments":["an"]},{"Key":"so an","Fragments":["alternative"]},{"Key":"alternative strategy","Fragments":["is"]},{"Key":"strategy is","Fragments":["to"]},{"Key":"ending of","Fragments":["alphanumeric"]},{"Key":"of alphanumeric","Fragments":["sequences"]},{"Key":"alphanumeric sequences","Fragments":["within"]},{"Key":"sequences within","Fragments":["the"]},{"Key":"last point","Fragments":["is"]},{"Key":"point is","Fragments":["that"]},{"Key":"that some","Fragments":["of"]},{"Key":"of parsing","Fragments":["the","the"]},{"Key":"text could","Fragments":["be"]},{"Key":"be offloaded","Fragments":["to"]},{"Key":"offloaded to","Fragments":["helper"]},{"Key":"functions, with","Fragments":["a"]},{"Key":"a single,","Fragments":["defined"]},{"Key":"single, defined","Fragments":["purpose,"]},{"Key":"defined purpose,","Fragments":["such"]},{"Key":"purpose, such","Fragments":["as"]},{"Key":"as extracting","Fragments":["a"]},{"Key":"extracting a","Fragments":["list"]},{"Key":"a list","Fragments":["of","because"]},{"Key":"of every","Fragments":["word","word"]},{"Key":"the text,","Fragments":["or"]},{"Key":"text, or","Fragments":["identifying"]},{"Key":"or identifying","Fragments":["the"]},{"Key":"identifying the","Fragments":["indices","words"]},{"Key":"the indices","Fragments":["of"]},{"Key":"Also, strLenght","Fragments":["has"]},{"Key":"strLenght has","Fragments":["a"]},{"Key":"a spelling","Fragments":["mistake"]},{"Key":"spelling mistake","Fragments":[";)"]},{"Key":"and clean,","Fragments":["and"]},{"Key":"clean, and","Fragments":["I"]},{"Key":"the isDNA","Fragments":["function,"]},{"Key":"isDNA function,","Fragments":["which"]},{"Key":"the side","Fragments":["effect"]},{"Key":"side effect","Fragments":["of"]},{"Key":"of stopping","Fragments":["the"]},{"Key":"stopping the","Fragments":["evaluation"]},{"Key":"evaluation at","Fragments":["invalid"]},{"Key":"at invalid","Fragments":["input."]},{"Key":"The isDNA","Fragments":["function"]},{"Key":"isDNA function","Fragments":["doesn't"]},{"Key":"function doesn't","Fragments":["need","seem","have"]},{"Key":"in global","Fragments":["scope,"]},{"Key":"global scope,","Fragments":["but"]},{"Key":"scope, but","Fragments":["it's"]},{"Key":"it's also","Fragments":["correct"]},{"Key":"also correct","Fragments":["that"]},{"Key":"correct that","Fragments":["it"]},{"Key":"hamming class.","Fragments":["So,"]},{"Key":"So, you","Fragments":["could","do"]},{"Key":"move `isDNA`","Fragments":["to"]},{"Key":"`isDNA` to","Fragments":["an"]},{"Key":" Next,","Fragments":["the","your"]},{"Key":"Next, the","Fragments":["`using`"]},{"Key":"declaration imports","Fragments":["a"]},{"Key":"imports a","Fragments":["lot"]},{"Key":"of names","Fragments":["into","your"]},{"Key":"names into","Fragments":["the"]},{"Key":"global namespace.","Fragments":["Consider"]},{"Key":"namespace. Consider","Fragments":["putting"]},{"Key":"putting it","Fragments":["inside"]},{"Key":"it inside","Fragments":["the"]},{"Key":"restrictive `using","Fragments":["std::string`."]},{"Key":"Lastly, is","Fragments":["there"]},{"Key":"why you","Fragments":["chose","didn't","invoke","would","would","made","did","chose"]},{"Key":"a \"hamming","Fragments":["class\"","namespace\"?"]},{"Key":"\"hamming class\"","Fragments":["instead"]},{"Key":"class\" instead","Fragments":["of"]},{"Key":"really elegant","Fragments":["solution,"]},{"Key":"elegant solution,","Fragments":["and"]},{"Key":"solution, and","Fragments":["I"]},{"Key":"it builds","Fragments":["the"]},{"Key":"builds the","Fragments":["song"]},{"Key":"song from","Fragments":["its"]},{"Key":"from its","Fragments":["component"]},{"Key":"its component","Fragments":["parts."]},{"Key":" @maida","Fragments":["Thanks"]},{"Key":"@maida Thanks","Fragments":["for"]},{"Key":"at this.","Fragments":["I'm","I"]},{"Key":"this. I'm","Fragments":["getting"]},{"Key":"getting tired","Fragments":["of"]},{"Key":"tired of","Fragments":["seeing"]},{"Key":"of seeing","Fragments":["the"]},{"Key":"the std::whatever","Fragments":["here"]},{"Key":"std::whatever here","Fragments":["so"]},{"Key":"here so","Fragments":["I'm"]},{"Key":"so I'm","Fragments":["going","not","happy","glad"]},{"Key":"pull it","Fragments":["all"]},{"Key":"all out.","Fragments":["And"]},{"Key":"out. And","Fragments":["I"]},{"Key":"your feedback!","Fragments":["In"]},{"Key":"feedback! In","Fragments":["fact"]},{"Key":"In fact","Fragments":["I'm"]},{"Key":"fact I'm","Fragments":["thinking"]},{"Key":"I'm thinking","Fragments":["to"]},{"Key":"thinking to","Fragments":["refactor"]},{"Key":"to refactor","Fragments":["all"]},{"Key":"refactor all","Fragments":["code"]},{"Key":"all code","Fragments":["to"]},{"Key":"improve readability.","Fragments":["Despite"]},{"Key":"readability. Despite","Fragments":["I'm"]},{"Key":"Despite I'm","Fragments":["using"]},{"Key":"perform all","Fragments":["operations","the"]},{"Key":"all operations","Fragments":["I"]},{"Key":"operations I","Fragments":["think"]},{"Key":"little confusing.","Fragments":["I'll"]},{"Key":"confusing. I'll","Fragments":["try"]},{"Key":"to apply","Fragments":["your"]},{"Key":"apply your","Fragments":["suggestions"]},{"Key":"suggestions in","Fragments":["the"]},{"Key":"It's cool","Fragments":["that"]},{"Key":"cool that","Fragments":["you"]},{"Key":"your helper","Fragments":["functions","functions","function"]},{"Key":"as `static","Fragments":["private`"]},{"Key":"`static private`","Fragments":["within"]},{"Key":"private` within","Fragments":["the"]},{"Key":"the class.","Fragments":["However,","I"]},{"Key":"class. However,","Fragments":["I"]},{"Key":"use `bool`","Fragments":["return"]},{"Key":"`bool` return","Fragments":["types,"]},{"Key":"return types,","Fragments":["since"]},{"Key":"types, since","Fragments":["this"]},{"Key":"is effectively","Fragments":["what"]},{"Key":"effectively what","Fragments":["they"]},{"Key":"are returning","Fragments":["now."]},{"Key":"returning now.","Fragments":["Also,"]},{"Key":"now. Also,","Fragments":["I"]},{"Key":"it helps","Fragments":["expressivity","others","me"]},{"Key":"helps expressivity","Fragments":["to"]},{"Key":"expressivity to","Fragments":["use"]},{"Key":"use names","Fragments":["with"]},{"Key":"with \"is\",","Fragments":["as"]},{"Key":"\"is\", as","Fragments":["in"]},{"Key":"Next, your","Fragments":["`allCaps`"]},{"Key":"your `allCaps`","Fragments":["function"]},{"Key":"`allCaps` function","Fragments":["seems"]},{"Key":"function seems","Fragments":["to"]},{"Key":"be (conceptually)","Fragments":["doing"]},{"Key":"(conceptually) doing","Fragments":["two"]},{"Key":"two jobs:","Fragments":["checking"]},{"Key":"jobs: checking","Fragments":["for"]},{"Key":"alphanumeric characters","Fragments":["and","in"]},{"Key":"characters and","Fragments":["checking","contains","compare"]},{"Key":"is capitals.","Fragments":["This"]},{"Key":"capitals. This","Fragments":["kind"]},{"Key":"This kind","Fragments":["of"]},{"Key":"of gets","Fragments":["into"]},{"Key":"gets into","Fragments":["debating"]},{"Key":"into debating","Fragments":["semantics,"]},{"Key":"debating semantics,","Fragments":["but"]},{"Key":"semantics, but","Fragments":["I"]},{"Key":"it's arguable","Fragments":["whether"]},{"Key":"arguable whether","Fragments":["a"]},{"Key":"whether a","Fragments":["non-alphanumeric","non-alphanumeric"]},{"Key":"non-alphanumeric char","Fragments":["is","is"]},{"Key":"a capital","Fragments":["or"]},{"Key":"capital or","Fragments":["not."]},{"Key":"or not.","Fragments":["It","But"]},{"Key":"not. It","Fragments":["might"]},{"Key":"code clearer","Fragments":["to"]},{"Key":"clearer to","Fragments":["have"]},{"Key":"that checks","Fragments":["that"]},{"Key":"checks that","Fragments":["there"]},{"Key":"are alphanumeric","Fragments":["characters"]},{"Key":" Last,","Fragments":["the"]},{"Key":"Last, the","Fragments":["helper"]},{"Key":"need their","Fragments":["own"]},{"Key":"their own","Fragments":["copies"]},{"Key":"own copies","Fragments":["of"]},{"Key":"strings they","Fragments":["analyse,"]},{"Key":"they analyse,","Fragments":["nor"]},{"Key":"analyse, nor","Fragments":["do"]},{"Key":"nor do","Fragments":["they"]},{"Key":"do they","Fragments":["need"]},{"Key":"their arguments,","Fragments":["so"]},{"Key":"arguments, so","Fragments":["think"]},{"Key":"so think","Fragments":["about"]},{"Key":"a potentially","Fragments":["better"]},{"Key":"potentially better","Fragments":["parameter"]},{"Key":"better parameter","Fragments":["type"]},{"Key":"parameter type","Fragments":["you"]},{"Key":"type you","Fragments":["can","mentioned"]},{"Key":"use (that","Fragments":["will"]},{"Key":"(that will","Fragments":["boost"]},{"Key":"will boost","Fragments":["performance"]},{"Key":"boost performance","Fragments":["by"]},{"Key":"eliminating unnecessary","Fragments":["copying)."]},{"Key":"The `using","Fragments":["WordMap`"]},{"Key":"`using WordMap`","Fragments":["declaration"]},{"Key":"WordMap` declaration","Fragments":["is"]},{"Key":"declaration is","Fragments":["really"]},{"Key":"really cool,","Fragments":["and"]},{"Key":"cool, and","Fragments":["makes"]},{"Key":"lot more","Fragments":["readable."]},{"Key":"that there's","Fragments":["no"]},{"Key":"no namespace","Fragments":["pollution"]},{"Key":"namespace pollution","Fragments":["here"]},{"Key":"pollution here","Fragments":["(eg."]},{"Key":"here (eg.","Fragments":["`using"]},{"Key":"namespace std`)","Fragments":["at"]},{"Key":"std`) at","Fragments":["the"]},{"Key":"the file.","Fragments":["However,"]},{"Key":"file. However,","Fragments":["seeing"]},{"Key":"However, seeing","Fragments":["`std::`s"]},{"Key":"seeing `std::`s","Fragments":["all"]},{"Key":"`std::`s all","Fragments":["over"]},{"Key":"all over","Fragments":["the"]},{"Key":"the place","Fragments":["can"]},{"Key":"place can","Fragments":["be"]},{"Key":"be distracting","Fragments":["to"]},{"Key":"distracting to","Fragments":["the"]},{"Key":"the eye,","Fragments":["so"]},{"Key":"eye, so","Fragments":["you"]},{"Key":"consider restrictive","Fragments":["`using`"]},{"Key":"restrictive `using`","Fragments":["declarations"]},{"Key":"word_count namespace","Fragments":["(eg."]},{"Key":"namespace (eg.","Fragments":["`using"]},{"Key":"nicely modular,","Fragments":["with"]},{"Key":"modular, with","Fragments":["separate"]},{"Key":"with separate","Fragments":["functions"]},{"Key":"each task","Fragments":["(splitting"]},{"Key":"task (splitting","Fragments":["a"]},{"Key":"(splitting a","Fragments":["string"]},{"Key":"into words,","Fragments":["and"]},{"Key":"words, and","Fragments":["counting"]},{"Key":"and counting","Fragments":["words).","the"]},{"Key":"be nice","Fragments":["to","if","to"]},{"Key":"few comments,","Fragments":["though."]},{"Key":" Code","Fragments":["was","is"]},{"Key":"Code was","Fragments":["completely"]},{"Key":"was completely","Fragments":["changed"]},{"Key":"completely changed","Fragments":["for"]},{"Key":"changed for","Fragments":["the"]},{"Key":"the sake","Fragments":["of","of"]},{"Key":"sake of","Fragments":["simplicity.","being"]},{"Key":"of simplicity.","Fragments":["Thanks"]},{"Key":"simplicity. Thanks","Fragments":["@bernice"]},{"Key":"Thanks @bernice","Fragments":["for"]},{"Key":"@bernice for","Fragments":["your"]},{"Key":"The instructions","Fragments":["for"]},{"Key":"instructions for","Fragments":["this"]},{"Key":"one should","Fragments":["maybe"]},{"Key":"should maybe","Fragments":["specify"]},{"Key":"maybe specify","Fragments":["that"]},{"Key":"specify that","Fragments":["you"]},{"Key":"shouldn't use","Fragments":["the"]},{"Key":"boost algorithms...","Fragments":["because"]},{"Key":"algorithms... because","Fragments":["otherwise,"]},{"Key":"because otherwise,","Fragments":["the"]},{"Key":"otherwise, the","Fragments":["exercise"]},{"Key":"of two-line","Fragments":["boost"]},{"Key":"two-line boost","Fragments":["calls,"]},{"Key":"boost calls,","Fragments":["which"]},{"Key":"calls, which","Fragments":["is"]},{"Key":"no fun","Fragments":["at"]},{"Key":"fun at","Fragments":["all."]},{"Key":"looks pretty","Fragments":["short","good,","clean","good!"]},{"Key":"pretty short","Fragments":["and"]},{"Key":"and sweet.","Fragments":["The"]},{"Key":"sweet. The","Fragments":["only"]},{"Key":"would change","Fragments":["is","anything"]},{"Key":"change is","Fragments":["to"]},{"Key":"constants and","Fragments":["by"]},{"Key":"you fractalic.","Fragments":["I"]},{"Key":"fractalic. I","Fragments":["did"]},{"Key":"anonymous namespaces,","Fragments":["so"]},{"Key":"namespaces, so","Fragments":["I"]},{"Key":"what he","Fragments":["means"]},{"Key":"he means","Fragments":["by"]},{"Key":"means by","Fragments":["\"template"]},{"Key":"by \"template","Fragments":["arguments"]},{"Key":"\"template arguments","Fragments":["cannot"]},{"Key":"arguments cannot","Fragments":["be"]},{"Key":"be names","Fragments":["with"]},{"Key":"with internal","Fragments":["linkage\","]},{"Key":"internal linkage\",","Fragments":["I"]},{"Key":"linkage\", I","Fragments":["appreciate"]},{"Key":"the issue","Fragments":["with"]},{"Key":"issue with","Fragments":["global","this","a"]},{"Key":"with global","Fragments":["namespace"]},{"Key":"namespace pollution,","Fragments":["so"]},{"Key":"pollution, so","Fragments":["I"]},{"Key":"will take","Fragments":["your"]},{"Key":"take your","Fragments":["advice"]},{"Key":"your advice","Fragments":["and","and"]},{"Key":"and change","Fragments":["my"]},{"Key":"change my","Fragments":["program","code!"]},{"Key":"my program","Fragments":["accordingly."]},{"Key":"are great,","Fragments":["very"]},{"Key":"very readable","Fragments":["and"]},{"Key":"and concise.","Fragments":["Well"]},{"Key":"concise. Well","Fragments":["done"]},{"Key":"Well done","Fragments":["on"]},{"Key":"done on","Fragments":["the"]},{"Key":"the commenting","Fragments":["as"]},{"Key":"commenting as","Fragments":["well."]},{"Key":"One minor","Fragments":["criticism"]},{"Key":"minor criticism","Fragments":["is"]},{"Key":"criticism is","Fragments":["that"]},{"Key":"you hard-coded","Fragments":["the"]},{"Key":"hard-coded the","Fragments":["return"]},{"Key":"return strings.","Fragments":["They"]},{"Key":"strings. They","Fragments":["would"]},{"Key":"They would","Fragments":["be"]},{"Key":"suited as","Fragments":["const"]},{"Key":"I originally","Fragments":["split","had","started","had"]},{"Key":"originally split","Fragments":["these"]},{"Key":"split these","Fragments":["up"]},{"Key":"these up","Fragments":["using"]},{"Key":"a .cpp,","Fragments":["but"]},{"Key":".cpp, but","Fragments":["exercism.io"]},{"Key":"but exercism.io","Fragments":["doesn't"]},{"Key":"exercism.io doesn't","Fragments":["like"]},{"Key":"doesn't like","Fragments":["that."]},{"Key":"that. Lesson","Fragments":["learned."]},{"Key":" Originally","Fragments":["I"]},{"Key":"Originally I","Fragments":["went"]},{"Key":"went the","Fragments":["Boost"]},{"Key":"Boost Regex","Fragments":["route,"]},{"Key":"Regex route,","Fragments":["but"]},{"Key":"route, but","Fragments":["found"]},{"Key":"be way","Fragments":["too"]},{"Key":"too high","Fragments":["powered"]},{"Key":"high powered","Fragments":["for"]},{"Key":"powered for","Fragments":["what"]},{"Key":"for what","Fragments":["I","I","it"]},{"Key":" Feedback","Fragments":["appreciated!"]},{"Key":"the feedback","Fragments":["fractalic!","dcook-au."]},{"Key":"feedback fractalic!","Fragments":["So"]},{"Key":"fractalic! So","Fragments":["what"]},{"Key":"think you're","Fragments":["hinting"]},{"Key":"you're hinting","Fragments":["at"]},{"Key":"hinting at","Fragments":["is"]},{"Key":"at is","Fragments":["that","JavaScript"]},{"Key":"pass each","Fragments":["parameter"]},{"Key":"each parameter","Fragments":["as"]},{"Key":"parameter as","Fragments":["a"]},{"Key":"do agree","Fragments":["with"]},{"Key":"using bool","Fragments":["as"]},{"Key":"bool as","Fragments":["a","an"]},{"Key":"return type;","Fragments":["that"]},{"Key":"type; that","Fragments":["seems"]},{"Key":"more elegant.","Fragments":["I"]},{"Key":"elegant. I","Fragments":["also"]},{"Key":"also agree","Fragments":["with"]},{"Key":"your naming","Fragments":["convention.","convention"]},{"Key":"naming convention.","Fragments":["I'm"]},{"Key":"convention. I'm","Fragments":["still"]},{"Key":"I'm still","Fragments":["trying","not","not"]},{"Key":"still trying","Fragments":["to","to"]},{"Key":"improve the","Fragments":["legibility","following"]},{"Key":"the legibility","Fragments":["of"]},{"Key":"legibility of","Fragments":["my"]},{"Key":"code which","Fragments":["is","required"]},{"Key":"why this","Fragments":["site"]},{"Key":"site is","Fragments":["so"]},{"Key":"the all","Fragments":["caps"]},{"Key":"caps function","Fragments":["it"]},{"Key":"little awkward","Fragments":["how"]},{"Key":"awkward how","Fragments":["I"]},{"Key":"I defined","Fragments":["it","the"]},{"Key":"and perhaps","Fragments":["another"]},{"Key":"perhaps another","Fragments":["helper"]},{"Key":"another helper","Fragments":["function"]},{"Key":"more clear.","Fragments":["In","Personally","Also,","I","I'll"]},{"Key":"clear. In","Fragments":["my"]},{"Key":"my head","Fragments":["I"]},{"Key":"head I","Fragments":["thought"]},{"Key":"that allCaps","Fragments":["would"]},{"Key":"allCaps would","Fragments":["be"]},{"Key":"be defined","Fragments":["as","in"]},{"Key":"as containing","Fragments":["no"]},{"Key":"lowercase letters,","Fragments":["however"]},{"Key":"letters, however","Fragments":["it"]},{"Key":"really mean","Fragments":["containing"]},{"Key":"mean containing","Fragments":["at"]},{"Key":"containing at","Fragments":["least"]},{"Key":"one uppercase","Fragments":["letter"]},{"Key":"letter and","Fragments":["no"]},{"Key":"letters regardless","Fragments":["of"]},{"Key":"regardless of","Fragments":["the"]},{"Key":" Wow","Fragments":["others"]},{"Key":"Wow others","Fragments":["did"]},{"Key":"others did","Fragments":["great"]},{"Key":"did great","Fragments":["job"]},{"Key":"great job","Fragments":["on"]},{"Key":"job on","Fragments":["this,"]},{"Key":"on this,","Fragments":["I","and"]},{"Key":"might copy","Fragments":["paste"]},{"Key":"copy paste","Fragments":["it"]},{"Key":"paste it","Fragments":["later."]},{"Key":"I'm happy","Fragments":["I","to","that"]},{"Key":"happy I","Fragments":["could"]},{"Key":"could help!","Fragments":["This"]},{"Key":"help! This","Fragments":["is"]},{"Key":"cleaner and","Fragments":["easier"]},{"Key":"and easier","Fragments":["to","to"]},{"Key":"One last","Fragments":["point:"]},{"Key":"last point:","Fragments":["the"]},{"Key":"point: the","Fragments":["tasks"]},{"Key":"the tasks","Fragments":["performed"]},{"Key":"tasks performed","Fragments":["by"]},{"Key":"performed by","Fragments":["the"]},{"Key":"word count","Fragments":["function","```wordCounts[foundWord]++```."]},{"Key":"count function","Fragments":["could"]},{"Key":"be thought","Fragments":["of"]},{"Key":"of as","Fragments":["two"]},{"Key":"two tasks,","Fragments":["which"]},{"Key":"tasks, which","Fragments":["are"]},{"Key":"which are","Fragments":["identifying","capitalized,","called","in"]},{"Key":"are identifying","Fragments":["the"]},{"Key":"the words","Fragments":["in","to"]},{"Key":"the occurrences","Fragments":["of","of"]},{"Key":"each word.","Fragments":["So"]},{"Key":"word. So","Fragments":["you"]},{"Key":"consider creating","Fragments":["a"]},{"Key":"second function","Fragments":["to"]},{"Key":" Almost:","Fragments":["const"]},{"Key":"Almost: const","Fragments":["reference"]},{"Key":"reference is","Fragments":["what","that","better","actually"]},{"Key":"thinking of.","Fragments":["const"]},{"Key":"of. const","Fragments":["to"]},{"Key":"const to","Fragments":["show"]},{"Key":"show that","Fragments":["the"]},{"Key":"its argument;","Fragments":["reference"]},{"Key":"argument; reference","Fragments":["to"]},{"Key":"prevent spending","Fragments":["cpu"]},{"Key":"spending cpu","Fragments":["cycles"]},{"Key":"cpu cycles","Fragments":["copying"]},{"Key":"cycles copying","Fragments":["each"]},{"Key":"character (though","Fragments":["the"]},{"Key":"(though the","Fragments":["actual"]},{"Key":"actual time","Fragments":["savings"]},{"Key":"time savings","Fragments":["is"]},{"Key":"savings is","Fragments":["probably"]},{"Key":"probably negligible","Fragments":["with"]},{"Key":"negligible with","Fragments":["such"]},{"Key":"with such","Fragments":["short"]},{"Key":"such short","Fragments":["strings)."]},{"Key":"with allCaps,","Fragments":["I'd"]},{"Key":"allCaps, I'd","Fragments":["say"]},{"Key":"undefined whether","Fragments":["a"]},{"Key":"is lowercase","Fragments":["or"]},{"Key":"lowercase or","Fragments":["uppercase,"]},{"Key":"or uppercase,","Fragments":["and"]},{"Key":"uppercase, and","Fragments":["because"]},{"Key":"and because","Fragments":["of","passing"]},{"Key":"this ambiguity,","Fragments":["it"]},{"Key":"ambiguity, it","Fragments":["helps"]},{"Key":"helps others","Fragments":["to"]},{"Key":"others to","Fragments":["more"]},{"Key":"more quickly","Fragments":["understand"]},{"Key":"quickly understand","Fragments":["your"]},{"Key":"they can","Fragments":["clearly"]},{"Key":"can clearly","Fragments":["see"]},{"Key":"clearly see","Fragments":["that"]},{"Key":"that yelling","Fragments":["requires"]},{"Key":"yelling requires","Fragments":["alphanumerics"]},{"Key":"requires alphanumerics","Fragments":["to"]},{"Key":"alphanumerics to","Fragments":["be"]},{"Key":"the prompt","Fragments":["message."]},{"Key":" (Then,","Fragments":["to"]},{"Key":"(Then, to","Fragments":["be"]},{"Key":"be pedantic,","Fragments":["all"]},{"Key":"pedantic, all","Fragments":["we"]},{"Key":"all we","Fragments":["can"]},{"Key":"can really","Fragments":["say"]},{"Key":"really say","Fragments":["is"]},{"Key":"say is","Fragments":["that"]},{"Key":"of punctuation","Fragments":["marks"]},{"Key":"marks contains","Fragments":["no"]},{"Key":"contains no","Fragments":["lowercase"]},{"Key":"lowercase characters","Fragments":["and"]},{"Key":"contains some","Fragments":["undefined-case"]},{"Key":"some undefined-case","Fragments":["characters,"]},{"Key":"undefined-case characters,","Fragments":["but"]},{"Key":"characters, but","Fragments":["I"]},{"Key":"it's really","Fragments":["necessary","better,","good"]},{"Key":"necessary to","Fragments":["check","make"]},{"Key":"check no_lowercase()","Fragments":["instead"]},{"Key":"no_lowercase() instead","Fragments":["of"]},{"Key":"just checking","Fragments":["all_caps()."]},{"Key":"checking all_caps().","Fragments":["They"]},{"Key":"all_caps(). They","Fragments":["both"]},{"Key":"They both","Fragments":["get"]},{"Key":"both get","Fragments":["the"]},{"Key":" cctype","Fragments":["(ctype.h)"]},{"Key":"cctype (ctype.h)","Fragments":["has"]},{"Key":"(ctype.h) has","Fragments":["an"]},{"Key":"an isalnum","Fragments":["function,"]},{"Key":"isalnum function,","Fragments":["so"]},{"Key":"so all","Fragments":["you'd"]},{"Key":"all you'd","Fragments":["have"]},{"Key":"that at","Fragments":["least","least"]},{"Key":"one char","Fragments":["is"]},{"Key":"have incorporated","Fragments":["your"]},{"Key":"incorporated your","Fragments":["suggestion"]},{"Key":"your suggestion","Fragments":["in"]},{"Key":"suggestion in","Fragments":["the"]},{"Key":"if counting","Fragments":["the"]},{"Key":"efficient approach,","Fragments":["and"]},{"Key":"approach, and","Fragments":["I"]},{"Key":"comparison between","Fragments":["two"]},{"Key":"maps returns","Fragments":["true"]},{"Key":"true if","Fragments":["both"]},{"Key":"if both","Fragments":["maps","are"]},{"Key":"both maps","Fragments":["have"]},{"Key":"maps have","Fragments":["the"]},{"Key":"same elements","Fragments":["in"]},{"Key":"in distinct","Fragments":["orders."]},{"Key":"this implementation","Fragments":["is","that"]},{"Key":"enough for","Fragments":["you","me\"."]},{"Key":"not worry","Fragments":["much"]},{"Key":"worry much","Fragments":["about"]},{"Key":"about naming","Fragments":["conventions,"]},{"Key":"naming conventions,","Fragments":["using"]},{"Key":"conventions, using","Fragments":["`min_len`"]},{"Key":"using `min_len`","Fragments":["suggests"]},{"Key":"`min_len` suggests","Fragments":["a"]},{"Key":"suggests a","Fragments":["\"minimum"]},{"Key":"a \"minimum","Fragments":["length\""]},{"Key":"\"minimum length\"","Fragments":["of"]},{"Key":"length\" of","Fragments":["characters"]},{"Key":"characters to","Fragments":["iterate","be"]},{"Key":"iterate over,","Fragments":["when"]},{"Key":"over, when","Fragments":["it's"]},{"Key":"when it's","Fragments":["actually"]},{"Key":"it's actually","Fragments":["used"]},{"Key":"actually used","Fragments":["as"]},{"Key":"Also, by","Fragments":["adding"]},{"Key":"adding the","Fragments":["cast"]},{"Key":"the cast","Fragments":["value"]},{"Key":"cast value","Fragments":["of"]},{"Key":"the `bool`","Fragments":["expression"]},{"Key":"`bool` expression","Fragments":["on"]},{"Key":"line 20,","Fragments":["instead","which"]},{"Key":"20, instead","Fragments":["of"]},{"Key":"using `if","Fragments":["(lhs[i]"]},{"Key":"`if (lhs[i]","Fragments":["!="]},{"Key":"(lhs[i] !=","Fragments":["rhs[i])`"]},{"Key":"!= rhs[i])`","Fragments":["or"]},{"Key":"rhs[i])` or","Fragments":["something"]},{"Key":"like that,","Fragments":["you"]},{"Key":"that, you","Fragments":["modify"]},{"Key":"you modify","Fragments":["the"]},{"Key":"of `hamming_diff`","Fragments":["every"]},{"Key":"`hamming_diff` every","Fragments":["iteration"]},{"Key":"loop, even","Fragments":["when"]},{"Key":"no change","Fragments":["in"]},{"Key":"value, except","Fragments":["when"]},{"Key":"characters differ.","Fragments":["I"]},{"Key":"differ. I","Fragments":["could"]},{"Key":"wrong about","Fragments":["performance"]},{"Key":"that area,","Fragments":["but"]},{"Key":"area, but","Fragments":["to"]},{"Key":"sure you","Fragments":["could","have"]},{"Key":"could scale","Fragments":["up"]},{"Key":"scale up","Fragments":["the"]},{"Key":"operation to","Fragments":["have"]},{"Key":"done several","Fragments":["thousands"]},{"Key":"several thousands","Fragments":["of"]},{"Key":"thousands of","Fragments":["times,"]},{"Key":"of times,","Fragments":["and"]},{"Key":"times, and","Fragments":["time"]},{"Key":"and time","Fragments":["each"]},{"Key":"time each","Fragments":["implementation."]},{"Key":"are written","Fragments":["requires"]},{"Key":"written requires","Fragments":["that"]},{"Key":"the verse-building","Fragments":["functions"]},{"Key":"verse-building functions","Fragments":["be"]},{"Key":"functions be","Fragments":["static"]},{"Key":"static members,","Fragments":["which"]},{"Key":"members, which","Fragments":["eliminates"]},{"Key":"which eliminates","Fragments":["any"]},{"Key":"eliminates any","Fragments":["advantages"]},{"Key":"any advantages","Fragments":["of"]},{"Key":"advantages of","Fragments":["using"]},{"Key":"I plan","Fragments":["to"]},{"Key":"plan to","Fragments":["split"]},{"Key":"the verse","Fragments":["function"]},{"Key":"verse function","Fragments":["into"]},{"Key":"function into","Fragments":["several","a"]},{"Key":"into several","Fragments":["helper"]},{"Key":"several helper","Fragments":["functions"]},{"Key":"iteration. It'd","Fragments":["be"]},{"Key":"It'd be","Fragments":["great","nicer","great"]},{"Key":"be great","Fragments":["to","to"]},{"Key":"great to","Fragments":["get","get"]},{"Key":"comments on","Fragments":["readability","this"]},{"Key":"on readability","Fragments":["and"]},{"Key":"readability and","Fragments":["efficiency."]},{"Key":"the `verses`","Fragments":["output"]},{"Key":"`verses` output","Fragments":["had"]},{"Key":"output had","Fragments":["a"]},{"Key":"different format,","Fragments":["which"]},{"Key":"format, which","Fragments":["is"]},{"Key":"why the","Fragments":["whole","roster"]},{"Key":"not implemented","Fragments":["as"]},{"Key":"single `for`","Fragments":["loop,"]},{"Key":"`for` loop,","Fragments":["and"]},{"Key":"loop, and","Fragments":["there","descends"]},{"Key":"extra statements.","Fragments":["I'll"]},{"Key":"statements. I'll","Fragments":["fix"]},{"Key":"fix that","Fragments":["in","in","would"]},{"Key":"The `while`","Fragments":["loop"]},{"Key":"`while` loop","Fragments":["in"]},{"Key":"in `verse`","Fragments":["has"]},{"Key":"`verse` has","Fragments":["to"]},{"Key":"of `food_iter`","Fragments":["twice"]},{"Key":"`food_iter` twice","Fragments":["for"]},{"Key":"twice for","Fragments":["every"]},{"Key":"every iteration,","Fragments":["which","you"]},{"Key":"iteration, which","Fragments":["I"]},{"Key":"is inefficient,","Fragments":["but"]},{"Key":"inefficient, but","Fragments":["I'm"]},{"Key":"sure of","Fragments":["a"]},{"Key":"the \"last","Fragments":["item\""]},{"Key":"\"last item\"","Fragments":["behaviour,"]},{"Key":"item\" behaviour,","Fragments":["which"]},{"Key":"behaviour, which","Fragments":["requires"]},{"Key":"which requires","Fragments":["that"]},{"Key":"that its","Fragments":["effect"]},{"Key":"its effect","Fragments":["be"]},{"Key":"effect be","Fragments":["written"]},{"Key":"written at","Fragments":["the"]},{"Key":" @giovani","Fragments":["Thanks"]},{"Key":"@giovani Thanks","Fragments":["for"]},{"Key":"this. I","Fragments":["totally"]},{"Key":"the min_len","Fragments":["name"]},{"Key":"min_len name","Fragments":["isn't"]},{"Key":"name isn't","Fragments":["as"]},{"Key":"as clear","Fragments":["as"]},{"Key":"clear as","Fragments":["it"]},{"Key":"should be.","Fragments":["I"]},{"Key":"be. I","Fragments":["didn't"]},{"Key":"didn't even","Fragments":["think","go","consider","consider"]},{"Key":"even think","Fragments":["about"]},{"Key":"hit from","Fragments":["unnecessarily"]},{"Key":"from unnecessarily","Fragments":["adding"]},{"Key":"unnecessarily adding","Fragments":["0"]},{"Key":"adding 0","Fragments":["to"]},{"Key":"0 to","Fragments":["hamming_diff.","top-1."]},{"Key":"if treating","Fragments":["the"]},{"Key":"treating the","Fragments":["bool"]},{"Key":"int is","Fragments":["a"]},{"Key":"idea. It","Fragments":["looks"]},{"Key":"looks a","Fragments":["little","bit"]},{"Key":"little clever","Fragments":["and"]},{"Key":"clever and","Fragments":["may"]},{"Key":"may take","Fragments":["away"]},{"Key":"take away","Fragments":["from"]},{"Key":"simplicity of","Fragments":["the"]},{"Key":" True","Fragments":["nitpick:"]},{"Key":"True nitpick:","Fragments":["it's"]},{"Key":"nitpick: it's","Fragments":["harder"]},{"Key":"it's harder","Fragments":["to"]},{"Key":"harder to","Fragments":["read","read","read."]},{"Key":"read if","Fragments":["you","you"]},{"Key":"you swap","Fragments":["line"]},{"Key":"swap line","Fragments":["break"]},{"Key":"line break","Fragments":["rules"]},{"Key":"break rules","Fragments":["in"]},{"Key":"rules in","Fragments":["the"]},{"Key":"an if..then..else","Fragments":["chain"]},{"Key":"if..then..else chain","Fragments":[":)"]},{"Key":" It'd","Fragments":["be"]},{"Key":"be nicer","Fragments":["if"]},{"Key":"nicer if","Fragments":["tabs"]},{"Key":"if tabs","Fragments":["and"]},{"Key":"tabs and","Fragments":["line","spaces"]},{"Key":"and line","Fragments":["breaks"]},{"Key":"line breaks","Fragments":["were"]},{"Key":"breaks were","Fragments":["trimmed"]},{"Key":"were trimmed","Fragments":["as"]},{"Key":"trimmed as","Fragments":["well"]},{"Key":"main issue","Fragments":["I"]},{"Key":"found myself","Fragments":["dealing"]},{"Key":"myself dealing","Fragments":["with"]},{"Key":"with was","Fragments":["boost::regex."]},{"Key":"was boost::regex.","Fragments":["I"]},{"Key":"boost::regex. I","Fragments":["was"]},{"Key":"was unable","Fragments":["to","to"]},{"Key":"get things","Fragments":["like"]},{"Key":"like lookaheads","Fragments":["and"]},{"Key":"lookaheads and","Fragments":["negative"]},{"Key":"and negative","Fragments":["lookaheads","drops"]},{"Key":"negative lookaheads","Fragments":["to"]},{"Key":"lookaheads to","Fragments":["work,"]},{"Key":"to work,","Fragments":["although"]},{"Key":"work, although","Fragments":["I"]},{"Key":"although I","Fragments":["know"]},{"Key":"that perl","Fragments":["regex,"]},{"Key":"perl regex,","Fragments":["to"]},{"Key":"regex, to","Fragments":["which"]},{"Key":"to which","Fragments":["boost::regex"]},{"Key":"which boost::regex","Fragments":["defaults,"]},{"Key":"boost::regex defaults,","Fragments":["supports"]},{"Key":"defaults, supports","Fragments":["them."]},{"Key":"supports them.","Fragments":["So"]},{"Key":"I wrestled","Fragments":["with"]},{"Key":"wrestled with","Fragments":["forming"]},{"Key":"with forming","Fragments":["a"]},{"Key":"forming a","Fragments":["valid"]},{"Key":"valid regular","Fragments":["expression"]},{"Key":"expression that","Fragments":["would"]},{"Key":"would handle","Fragments":["not"]},{"Key":"handle not","Fragments":["just"]},{"Key":"the absence","Fragments":["or"]},{"Key":"absence or","Fragments":["presence"]},{"Key":"or presence","Fragments":["of"]},{"Key":"presence of","Fragments":["lower"]},{"Key":"of lower","Fragments":["case"]},{"Key":"letters, but","Fragments":["also"]},{"Key":"also numbers","Fragments":["both"]},{"Key":"numbers both","Fragments":["with"]},{"Key":"both with","Fragments":["upper"]},{"Key":"with upper","Fragments":["case"]},{"Key":"and with","Fragments":["no","the"]},{"Key":"no upper","Fragments":["case"]},{"Key":"string. Finally","Fragments":["I"]},{"Key":"Finally I","Fragments":["decided"]},{"Key":"decided instead","Fragments":["to"]},{"Key":"instead to","Fragments":["sanitize"]},{"Key":"to sanitize","Fragments":["the"]},{"Key":"sanitize the","Fragments":["string"]},{"Key":"first then","Fragments":["look"]},{"Key":"then look","Fragments":["for"]},{"Key":"letters which","Fragments":["would"]},{"Key":"would indicate","Fragments":["a"]},{"Key":"Nice code!","Fragments":["I","I","Very","Your","I","It's","Your","Your","Your"]},{"Key":"code! I","Fragments":["like","like","like"]},{"Key":"naming convention","Fragments":["and"]},{"Key":"convention and","Fragments":["your"]},{"Key":"and your","Fragments":["general"]},{"Key":"your general","Fragments":["coding","information."]},{"Key":"general coding","Fragments":["style."]},{"Key":"coding style.","Fragments":["It","Of"]},{"Key":"style. It","Fragments":["looks"]},{"Key":"like very","Fragments":["idiomatic"]},{"Key":"very idiomatic","Fragments":["C++."]},{"Key":"your `checkPoke`","Fragments":["function,"]},{"Key":"`checkPoke` function,","Fragments":["you"]},{"Key":"could omit","Fragments":["checking"]},{"Key":"omit checking","Fragments":["that"]},{"Key":"checking that","Fragments":["the"]},{"Key":"0 and","Fragments":["it"]},{"Key":"would still","Fragments":["behave"]},{"Key":"still behave","Fragments":["correctly:"]},{"Key":"behave correctly:","Fragments":["`allSpaces`"]},{"Key":"correctly: `allSpaces`","Fragments":["is"]},{"Key":"`allSpaces` is","Fragments":["initialized"]},{"Key":"is initialized","Fragments":["to"]},{"Key":"initialized to","Fragments":["`true`,"]},{"Key":"to `true`,","Fragments":["the"]},{"Key":"`true`, the","Fragments":["for"]},{"Key":"would perform","Fragments":["zero"]},{"Key":"perform zero","Fragments":["iterations,"]},{"Key":"zero iterations,","Fragments":["and"]},{"Key":"iterations, and","Fragments":["the","thus"]},{"Key":"would return","Fragments":["`true`.","\"Whatever.\"","a"]},{"Key":"up sensing","Fragments":["a"]},{"Key":"sensing a","Fragments":["disposition"]},{"Key":"a disposition","Fragments":["from"]},{"Key":"disposition from","Fragments":["generating"]},{"Key":"from generating","Fragments":["the"]},{"Key":"generating the","Fragments":["appropriate","verses"]},{"Key":"response given","Fragments":["a"]},{"Key":"a disposition.","Fragments":["Very"]},{"Key":"disposition. Very","Fragments":["clever."]},{"Key":"bit iffy","Fragments":["on"]},{"Key":"iffy on","Fragments":["invoking"]},{"Key":"on invoking","Fragments":["`exit`"]},{"Key":"invoking `exit`","Fragments":["from"]},{"Key":"`exit` from","Fragments":["within"]},{"Key":"from within","Fragments":["your"]},{"Key":"within your","Fragments":["`hey`","for","function,"]},{"Key":"your `hey`","Fragments":["function,","function","function."]},{"Key":"function, because","Fragments":["it"]},{"Key":"it feels","Fragments":["like"]},{"Key":"like there's","Fragments":["a"]},{"Key":"a potential","Fragments":["for","source"]},{"Key":"potential for","Fragments":["a","a","errors,"]},{"Key":"a spec","Fragments":["violation"]},{"Key":"spec violation","Fragments":["there:"]},{"Key":"violation there:","Fragments":["The"]},{"Key":"there: The","Fragments":["specs"]},{"Key":"The specs","Fragments":["say"]},{"Key":"specs say","Fragments":["seem"]},{"Key":"say seem","Fragments":["to"]},{"Key":"to cover","Fragments":["a","his"]},{"Key":"response for","Fragments":["every"]},{"Key":"every possible","Fragments":["input"]},{"Key":"possible input","Fragments":["(because"]},{"Key":"input (because","Fragments":["it"]},{"Key":"(because it","Fragments":["has"]},{"Key":"default cause","Fragments":["of"]},{"Key":"cause of","Fragments":["saying"]},{"Key":"of saying","Fragments":["\"Whatever.\""]},{"Key":"saying \"Whatever.\"","Fragments":["if"]},{"Key":"if no","Fragments":["other"]},{"Key":"no other","Fragments":["case"]},{"Key":"other case","Fragments":["applies),"]},{"Key":"case applies),","Fragments":["and"]},{"Key":"applies), and","Fragments":["so"]},{"Key":"never end","Fragments":["up"]},{"Key":"a situation","Fragments":["where"]},{"Key":"situation where","Fragments":["talking"]},{"Key":"where talking","Fragments":["to"]},{"Key":"talking to","Fragments":["Bob"]},{"Key":"Bob causes","Fragments":["the"]},{"Key":"causes the","Fragments":["whole"]},{"Key":"whole program","Fragments":["to","(external","(internal"]},{"Key":"program to","Fragments":["shut"]},{"Key":"to shut","Fragments":["down."]},{"Key":"Similarly, for","Fragments":["`is_shout`"]},{"Key":"for `is_shout`","Fragments":["and","and"]},{"Key":"`is_shout` and","Fragments":["`is_question`,","`is_question`,"]},{"Key":"and `is_question`,","Fragments":["it","again"]},{"Key":"`is_question`, it","Fragments":["seems","is"]},{"Key":"could define","Fragments":["the"]},{"Key":"to simply","Fragments":["not"]},{"Key":"simply not","Fragments":["be"]},{"Key":"shout (i.e.","Fragments":["return"]},{"Key":"(i.e. return","Fragments":["false),"]},{"Key":"return false),","Fragments":["rather"]},{"Key":"false), rather","Fragments":["than"]},{"Key":"than throw","Fragments":["an","an"]},{"Key":" Let","Fragments":["me"]},{"Key":"Let me","Fragments":["know"]},{"Key":" Great","Fragments":["finds,","idea."]},{"Key":"Great finds,","Fragments":["thank"]},{"Key":"finds, thank","Fragments":["you!"]},{"Key":"thank you!","Fragments":["Changes","Great"]},{"Key":"you! Changes","Fragments":["have"]},{"Key":"Changes have","Fragments":["been"]},{"Key":"Thanks @randi.","Fragments":["I"]},{"Key":"@randi. I","Fragments":["actually"]},{"Key":"actually feel","Fragments":["I"]},{"Key":"feel I","Fragments":["could"]},{"Key":"could go","Fragments":["either","back,","with"]},{"Key":"go either","Fragments":["way"]},{"Key":"either way","Fragments":["on"]},{"Key":"way on","Fragments":["the"]},{"Key":"the changing","Fragments":["the"]},{"Key":"return strings","Fragments":["to"]},{"Key":"const variables.","Fragments":["It"]},{"Key":"variables. It","Fragments":["would"]},{"Key":"sense if","Fragments":["these"]},{"Key":"these strings","Fragments":["were"]},{"Key":"were repeated","Fragments":["in"]},{"Key":"repeated in","Fragments":["two"]},{"Key":"in two","Fragments":["or"]},{"Key":"two or","Fragments":["more"]},{"Key":"more locations,","Fragments":["or"]},{"Key":"locations, or","Fragments":["if"]},{"Key":"they changed","Fragments":["frequently."]},{"Key":"changed frequently.","Fragments":["I"]},{"Key":"frequently. I","Fragments":["think"]},{"Key":"were a","Fragments":["\"real"]},{"Key":"a \"real","Fragments":["life\""]},{"Key":"\"real life\"","Fragments":["project,"]},{"Key":"life\" project,","Fragments":["I've"]},{"Key":"project, I've","Fragments":["leave"]},{"Key":"I've leave","Fragments":["them"]},{"Key":"them as-is","Fragments":["for"]},{"Key":"as-is for","Fragments":["now,"]},{"Key":"for now,","Fragments":["and"]},{"Key":"now, and","Fragments":["upon","given"]},{"Key":"and upon","Fragments":["the"]},{"Key":"upon the","Fragments":["first"]},{"Key":"the requirements","Fragments":["change"]},{"Key":"requirements change","Fragments":["that"]},{"Key":"change that","Fragments":["affect","too"]},{"Key":"that affect","Fragments":["their"]},{"Key":"affect their","Fragments":["values,"]},{"Key":"their values,","Fragments":["I'd"]},{"Key":"values, I'd","Fragments":["do"]},{"Key":"I'd do","Fragments":["the"]},{"Key":"the refactoring","Fragments":["then"]},{"Key":"refactoring then","Fragments":["and"]},{"Key":"then and","Fragments":["there"]},{"Key":"there to","Fragments":["extract"]},{"Key":"to extract","Fragments":["them"]},{"Key":"extract them","Fragments":["out"]},{"Key":"originally had","Fragments":["this","some"]},{"Key":"had this","Fragments":["all"]},{"Key":"this all","Fragments":["broken"]},{"Key":"all broken","Fragments":["out"]},{"Key":"broken out","Fragments":["into"]},{"Key":"into functions,","Fragments":["but"]},{"Key":"but decided","Fragments":["to","to","it","to"]},{"Key":"to crunch","Fragments":["it"]},{"Key":"crunch it","Fragments":["down"]},{"Key":"it down","Fragments":["to","really","to"]},{"Key":"string only","Fragments":["once.","twice","to"]},{"Key":"only once.","Fragments":["I'm"]},{"Key":"once. I'm","Fragments":["not"]},{"Key":"sure it","Fragments":["sacrifices","is","matters"]},{"Key":"it sacrifices","Fragments":["much"]},{"Key":"sacrifices much","Fragments":["on"]},{"Key":"much on","Fragments":["readability,"]},{"Key":"on readability,","Fragments":["but"]},{"Key":"readability, but","Fragments":["if","I"]},{"Key":"if more","Fragments":["conditions"]},{"Key":"more conditions","Fragments":["get"]},{"Key":"conditions get","Fragments":["added,"]},{"Key":"get added,","Fragments":["and"]},{"Key":"added, and","Fragments":["speed","additional"]},{"Key":"and speed","Fragments":["isn't"]},{"Key":"speed isn't","Fragments":["an"]},{"Key":"isn't an","Fragments":["issue,"]},{"Key":"an issue,","Fragments":["I"]},{"Key":"issue, I","Fragments":["think"]},{"Key":"think I'd","Fragments":["move"]},{"Key":"I'd move","Fragments":["back"]},{"Key":"move back","Fragments":["to"]},{"Key":"I'm glad","Fragments":["you","it","you","you"]},{"Key":"glad you","Fragments":["liked","did,","pointed"]},{"Key":"you liked","Fragments":["the"]},{"Key":"liked the","Fragments":["tack","suggestion"]},{"Key":"the tack","Fragments":["I"]},{"Key":"tack I","Fragments":["took."]},{"Key":"we take","Fragments":["the"]},{"Key":"take the","Fragments":["stance","two","return"]},{"Key":"the stance","Fragments":["that"]},{"Key":"stance that","Fragments":["an"]},{"Key":"that an","Fragments":["exception"]},{"Key":"exception should","Fragments":["represent"]},{"Key":"should represent","Fragments":["an"]},{"Key":"represent an","Fragments":["event"]},{"Key":"an event","Fragments":["that"]},{"Key":"event that","Fragments":["is"]},{"Key":"is truly","Fragments":["exceptional,"]},{"Key":"truly exceptional,","Fragments":["and"]},{"Key":"exceptional, and","Fragments":["that"]},{"Key":"not conveniently","Fragments":["recoverable"]},{"Key":"conveniently recoverable","Fragments":["(or"]},{"Key":"recoverable (or","Fragments":["where"]},{"Key":"(or where","Fragments":["there's"]},{"Key":"where there's","Fragments":["no"]},{"Key":"no clear","Fragments":["path"]},{"Key":"clear path","Fragments":["to"]},{"Key":"to recovery),","Fragments":["then"]},{"Key":"recovery), then","Fragments":["I"]},{"Key":"my use","Fragments":["of"]},{"Key":"of exceptions","Fragments":["is"]},{"Key":"exceptions is","Fragments":["reasonable."]},{"Key":"is reasonable.","Fragments":["Consider"]},{"Key":"reasonable. Consider","Fragments":["first"]},{"Key":"Consider first","Fragments":["the"]},{"Key":"first the","Fragments":["case"]},{"Key":"exception in","Fragments":["`respond`."]},{"Key":"in `respond`.","Fragments":["The"]},{"Key":"`respond`. The","Fragments":["\"default\""]},{"Key":"The \"default\"","Fragments":["should"]},{"Key":"\"default\" should","Fragments":["be"]},{"Key":"be unreachable.","Fragments":["If"]},{"Key":"unreachable. If","Fragments":["we"]},{"Key":"do arrive","Fragments":["there,"]},{"Key":"arrive there,","Fragments":["we"]},{"Key":"there, we","Fragments":["have"]},{"Key":"a serious","Fragments":["problem."]},{"Key":"serious problem.","Fragments":["I"]},{"Key":"problem. I","Fragments":["probably","could","was"]},{"Key":"I probably","Fragments":["should","should"]},{"Key":"used `std::logic_error`","Fragments":["rather"]},{"Key":"`std::logic_error` rather","Fragments":["than"]},{"Key":"than `std::runtime_error`.","Fragments":["So"]},{"Key":"`std::runtime_error`. So","Fragments":["if"]},{"Key":"it's unreachable,","Fragments":["why"]},{"Key":"unreachable, why","Fragments":["did"]},{"Key":"why did","Fragments":["I","you"]},{"Key":"did I","Fragments":["include"]},{"Key":"include it?","Fragments":["Because"]},{"Key":"it? Because","Fragments":["I"]},{"Key":"wanted a","Fragments":["generalized"]},{"Key":"a generalized","Fragments":["solution;"]},{"Key":"generalized solution;","Fragments":["sure,"]},{"Key":"solution; sure,","Fragments":["this"]},{"Key":"sure, this","Fragments":["is"]},{"Key":"is throw-away","Fragments":["code,"]},{"Key":"throw-away code,","Fragments":["but"]},{"Key":"but lets","Fragments":["put"]},{"Key":"lets put","Fragments":["that"]},{"Key":"put that","Fragments":["aside"]},{"Key":"that aside","Fragments":["and"]},{"Key":"aside and","Fragments":["assume"]},{"Key":"and assume","Fragments":["it's"]},{"Key":"assume it's","Fragments":["going"]},{"Key":"it's going","Fragments":["to"]},{"Key":"be around","Fragments":["forever,"]},{"Key":"around forever,","Fragments":["and"]},{"Key":"forever, and","Fragments":["that"]},{"Key":"that someone","Fragments":["in","would","names"]},{"Key":"someone in","Fragments":["the"]},{"Key":"the future","Fragments":["may"]},{"Key":"future may","Fragments":["extend"]},{"Key":"may extend","Fragments":["it"]},{"Key":"extend it","Fragments":["for"]},{"Key":"for less","Fragments":["trivial","then"]},{"Key":"less trivial","Fragments":["use."]},{"Key":"trivial use.","Fragments":["In"]},{"Key":"use. In","Fragments":["such"]},{"Key":"In such","Fragments":["a","a"]},{"Key":"a case,","Fragments":["it","it"]},{"Key":"case, it","Fragments":["could","might"]},{"Key":"happen that","Fragments":["additional"]},{"Key":"that additional","Fragments":["`case`'s"]},{"Key":"additional `case`'s","Fragments":["are"]},{"Key":"`case`'s are","Fragments":["added,"]},{"Key":"are added,","Fragments":["and"]},{"Key":"and additional","Fragments":["`Disposition`"]},{"Key":"additional `Disposition`","Fragments":["entries"]},{"Key":"`Disposition` entries","Fragments":["are"]},{"Key":"entries are","Fragments":["added."]},{"Key":"are added.","Fragments":["If"]},{"Key":"added. If","Fragments":["that"]},{"Key":"If that","Fragments":["happens,","were"]},{"Key":"that happens,","Fragments":["it's"]},{"Key":"happens, it's","Fragments":["possible"]},{"Key":"it's possible","Fragments":["that"]},{"Key":"possible that","Fragments":["a"]},{"Key":"programmer down","Fragments":["the"]},{"Key":"the road","Fragments":["forgets"]},{"Key":"road forgets","Fragments":["to"]},{"Key":"cover his","Fragments":["bases;"]},{"Key":"his bases;","Fragments":["adding"]},{"Key":"bases; adding","Fragments":["a"]},{"Key":"a `Disposition`,","Fragments":["without"]},{"Key":"`Disposition`, without","Fragments":["adding"]},{"Key":"without adding","Fragments":["a"]},{"Key":"corresponding `case`.","Fragments":["If"]},{"Key":"`case`. If","Fragments":["that"]},{"Key":"that were","Fragments":["to"]},{"Key":"to happen,","Fragments":["we"]},{"Key":"happen, we","Fragments":["would"]},{"Key":"we would","Fragments":["definitely"]},{"Key":"definitely want","Fragments":["to"]},{"Key":"fail noisily,","Fragments":["rather"]},{"Key":"noisily, rather","Fragments":["than"]},{"Key":"than dropping","Fragments":["through"]},{"Key":"dropping through","Fragments":["silently."]},{"Key":"`is_question`, again","Fragments":["consider"]},{"Key":"again consider","Fragments":["that"]},{"Key":"that those","Fragments":["functions"]},{"Key":"functions might","Fragments":["be"]},{"Key":"other context","Fragments":["outside"]},{"Key":"context outside","Fragments":["of"]},{"Key":"our current","Fragments":["scheme."]},{"Key":"current scheme.","Fragments":["It"]},{"Key":"scheme. It","Fragments":["invokes"]},{"Key":"It invokes","Fragments":["undefined"]},{"Key":"invokes undefined","Fragments":["behavior"]},{"Key":"behavior to","Fragments":["hand"]},{"Key":"to hand","Fragments":["`s.back()`"]},{"Key":"hand `s.back()`","Fragments":["an"]},{"Key":"`s.back()` an","Fragments":["empty"]},{"Key":"string. So","Fragments":["we","the"]},{"Key":"should definitely","Fragments":["be","do"]},{"Key":"be guarding","Fragments":["against"]},{"Key":"guarding against","Fragments":["that"]},{"Key":"against that","Fragments":["by"]},{"Key":"that by","Fragments":["failing"]},{"Key":"by failing","Fragments":["noisily."]},{"Key":"failing noisily.","Fragments":["That"]},{"Key":"noisily. That","Fragments":["covers"]},{"Key":"That covers","Fragments":["`is_question`."]},{"Key":"covers `is_question`.","Fragments":["As"]},{"Key":"`is_question`. As","Fragments":["for"]},{"Key":"for `is_shout`,","Fragments":["an"]},{"Key":"`is_shout`, an","Fragments":["earlier"]},{"Key":"an earlier","Fragments":["implementation"]},{"Key":"earlier implementation","Fragments":["(prior"]},{"Key":"implementation (prior","Fragments":["to"]},{"Key":"(prior to","Fragments":["my"]},{"Key":"my pushing","Fragments":["it"]},{"Key":"pushing it","Fragments":["here)"]},{"Key":"it here)","Fragments":["would"]},{"Key":"here) would","Fragments":["have"]},{"Key":"have also","Fragments":["invoked"]},{"Key":"also invoked","Fragments":["undefined"]},{"Key":"invoked undefined","Fragments":["behavior"]},{"Key":"function were","Fragments":["handed"]},{"Key":"were handed","Fragments":["an"]},{"Key":"handed an","Fragments":["empty"]},{"Key":"string. However,","Fragments":["as"]},{"Key":"However, as","Fragments":["it"]},{"Key":"it currently","Fragments":["stands,","is"]},{"Key":"currently stands,","Fragments":["that"]},{"Key":"stands, that","Fragments":["potential"]},{"Key":"that potential","Fragments":["has"]},{"Key":"potential has","Fragments":["been"]},{"Key":"been purged","Fragments":["from"]},{"Key":"purged from","Fragments":["`is_shout`,"]},{"Key":"from `is_shout`,","Fragments":["so"]},{"Key":"`is_shout`, so","Fragments":["it"]},{"Key":"probably makes","Fragments":["sense"]},{"Key":"sense for","Fragments":["it"]},{"Key":"to NOT","Fragments":["throw"]},{"Key":"NOT throw","Fragments":["an"]},{"Key":"exception anymore.","Fragments":["I"]},{"Key":"anymore. I","Fragments":["probably"]},{"Key":"should remove","Fragments":["that."]},{"Key":"do think","Fragments":["that"]},{"Key":"of `is_question`,","Fragments":["it"]},{"Key":"is simply","Fragments":["good"]},{"Key":"simply good","Fragments":["defensive"]},{"Key":"good defensive","Fragments":["programming"]},{"Key":"defensive programming","Fragments":["to","tactic;"]},{"Key":"programming to","Fragments":["throw"]},{"Key":"if passed","Fragments":["a"]},{"Key":"passed a","Fragments":["parameter","copy"]},{"Key":"a parameter","Fragments":["that"]},{"Key":"parameter that","Fragments":["would"]},{"Key":"would invoke","Fragments":["undefined","UB"]},{"Key":"invoke undefined","Fragments":["behavior."]},{"Key":"In `is_shout`","Fragments":["you"]},{"Key":"`is_shout` you","Fragments":["might"]},{"Key":"have noticed","Fragments":["I'm"]},{"Key":"noticed I'm","Fragments":["explicitly"]},{"Key":"I'm explicitly","Fragments":["casting"]},{"Key":"explicitly casting","Fragments":["`ch`"]},{"Key":"casting `ch`","Fragments":["to"]},{"Key":"`ch` to","Fragments":["an"]},{"Key":"an `unsigned","Fragments":["char`."]},{"Key":"`unsigned char`.","Fragments":["This"]},{"Key":"char`. This","Fragments":["is"]},{"Key":"is another","Fragments":["defensive"]},{"Key":"another defensive","Fragments":["programming"]},{"Key":"programming tactic;","Fragments":["invoking"]},{"Key":"tactic; invoking","Fragments":["`::isupper`"]},{"Key":"invoking `::isupper`","Fragments":["on"]},{"Key":"`::isupper` on","Fragments":["a"]},{"Key":"a `char`","Fragments":["type"]},{"Key":"`char` type","Fragments":["is"]},{"Key":"type is","Fragments":["inherently","actually"]},{"Key":"is inherently","Fragments":["UB"]},{"Key":"inherently UB","Fragments":["because"]},{"Key":"UB because","Fragments":["there"]},{"Key":"because there","Fragments":["is","is","were"]},{"Key":"guarantee in","Fragments":["the"]},{"Key":"standard that","Fragments":["a"]},{"Key":"`string` will","Fragments":["be"]},{"Key":"an aggregate","Fragments":["of"]},{"Key":"aggregate of","Fragments":["unsigned"]},{"Key":"of unsigned","Fragments":["types..."]},{"Key":"unsigned types...","Fragments":["and"]},{"Key":"types... and","Fragments":["because"]},{"Key":"because passing","Fragments":["a"]},{"Key":"negative to","Fragments":["::isupper"]},{"Key":"to ::isupper","Fragments":["again"]},{"Key":"::isupper again","Fragments":["invokes"]},{"Key":"again invokes","Fragments":["UB."]},{"Key":"other thought;","Fragments":["I've"]},{"Key":"thought; I've","Fragments":["grappled"]},{"Key":"I've grappled","Fragments":["with"]},{"Key":"grappled with","Fragments":["possibly"]},{"Key":"with possibly","Fragments":["setting"]},{"Key":"possibly setting","Fragments":["up"]},{"Key":"setting up","Fragments":["an","the"]},{"Key":"up an","Fragments":["array"]},{"Key":"of pairs","Fragments":["instead","is"]},{"Key":"pairs instead","Fragments":["of"]},{"Key":"the `switch`","Fragments":["statement."]},{"Key":"`switch` statement.","Fragments":["`array\u003cpair\u003cDisposition,string\u003e\u003e`"]},{"Key":"statement. `array\u003cpair\u003cDisposition,string\u003e\u003e`","Fragments":["would"]},{"Key":"`array\u003cpair\u003cDisposition,string\u003e\u003e` would","Fragments":["allow"]},{"Key":"allow me","Fragments":["to"]},{"Key":"me to","Fragments":["eliminate","see","compare","re-create","either"]},{"Key":"the `switch`,","Fragments":["and"]},{"Key":"`switch`, and","Fragments":["instead"]},{"Key":"instead use","Fragments":["a"]},{"Key":"a sort","Fragments":["of"]},{"Key":"of dispatch","Fragments":["table,"]},{"Key":"dispatch table,","Fragments":["looping"]},{"Key":"table, looping","Fragments":["over"]},{"Key":"looping over","Fragments":["the","the"]},{"Key":"array elements,","Fragments":["and"]},{"Key":"elements, and","Fragments":["breaking"]},{"Key":"and breaking","Fragments":["out"]},{"Key":"breaking out","Fragments":["with","the"]},{"Key":"out with","Fragments":["the","any"]},{"Key":"response string","Fragments":["once"]},{"Key":"once one","Fragments":["of"]},{"Key":"the dispositions","Fragments":["matches."]},{"Key":"dispositions matches.","Fragments":["That"]},{"Key":"matches. That","Fragments":["pushes"]},{"Key":"That pushes","Fragments":["more"]},{"Key":"pushes more","Fragments":["of"]},{"Key":"more of","Fragments":["the","this","a"]},{"Key":"logic out","Fragments":["of"]},{"Key":"of \"programming\"","Fragments":["and"]},{"Key":"\"programming\" and","Fragments":["into"]},{"Key":"and into","Fragments":["\"data\","]},{"Key":"into \"data\",","Fragments":["providing"]},{"Key":"\"data\", providing","Fragments":["for"]},{"Key":"providing for","Fragments":["a"]},{"Key":"more easily","Fragments":["extensible","derive","parallelized."]},{"Key":"easily extensible","Fragments":["framework."]},{"Key":"extensible framework.","Fragments":["This"]},{"Key":"framework. This","Fragments":["might"]},{"Key":"might also","Fragments":["entirely","consider","consider","want","consider","use","want","have"]},{"Key":"also entirely","Fragments":["eliminate"]},{"Key":"entirely eliminate","Fragments":["the"]},{"Key":"the potential","Fragments":["for","to"]},{"Key":"a maintenance","Fragments":["programmer","point","nightmare"]},{"Key":"maintenance programmer","Fragments":["breaking"]},{"Key":"programmer breaking","Fragments":["the"]},{"Key":"breaking the","Fragments":["switch"]},{"Key":"switch statement,","Fragments":["and"]},{"Key":"statement, and","Fragments":["that"]},{"Key":"that eliminates","Fragments":["the"]},{"Key":"eliminates the","Fragments":["need"]},{"Key":"throw if","Fragments":["the"]},{"Key":"default is","Fragments":["hit."]},{"Key":"Looking forward","Fragments":["to"]},{"Key":"to additional","Fragments":["thoughts!"]},{"Key":"additional thoughts!","Fragments":[":)"]},{"Key":" Reading","Fragments":["through"]},{"Key":"Reading through","Fragments":["your"]},{"Key":"through your","Fragments":["implementation","string.","string"]},{"Key":"implementation I","Fragments":["was","should"]},{"Key":"was struck","Fragments":["by"]},{"Key":"struck by","Fragments":["how"]},{"Key":"by how","Fragments":["much"]},{"Key":"much this","Fragments":["reads"]},{"Key":"this reads","Fragments":["like"]},{"Key":"reads like","Fragments":["a"]},{"Key":"C program.","Fragments":[":)"]},{"Key":"I noticed","Fragments":["that","that","you"]},{"Key":"thought was","Fragments":["worth"]},{"Key":"was worth","Fragments":["mentioning"]},{"Key":"worth mentioning","Fragments":["are"]},{"Key":"mentioning are","Fragments":["the"]},{"Key":"global strings","Fragments":["you"]},{"Key":"strings you","Fragments":["have"]},{"Key":"have declared.","Fragments":["Since"]},{"Key":"declared. Since","Fragments":["you"]},{"Key":"are using","Fragments":["them","```std::min```,","C++","C++,","C++","C++,","C++,"]},{"Key":"them like","Fragments":["constants,"]},{"Key":"like constants,","Fragments":["you"]},{"Key":"constants, you","Fragments":["might"]},{"Key":"might consider","Fragments":["declaring","using"]},{"Key":"consider declaring","Fragments":["them"]},{"Key":"declaring them","Fragments":["as","outside"]},{"Key":"as such.","Fragments":["You"]},{"Key":"such. You","Fragments":["could"]},{"Key":"could even","Fragments":["take"]},{"Key":"even take","Fragments":["that"]},{"Key":"take that","Fragments":["a"]},{"Key":"a step","Fragments":["further","back,"]},{"Key":"step further","Fragments":["and"]},{"Key":"further and","Fragments":["declare"]},{"Key":"and declare","Fragments":["them"]},{"Key":"declare them","Fragments":["`constexpr`"]},{"Key":"them `constexpr`","Fragments":["which"]},{"Key":"`constexpr` which","Fragments":["is"]},{"Key":"is evaluated","Fragments":["at"]},{"Key":"evaluated at","Fragments":["compile"]},{"Key":"at compile","Fragments":["time","time."]},{"Key":"compile time","Fragments":["opposed"]},{"Key":"time opposed","Fragments":["to"]},{"Key":"to run-time","Fragments":["evaluation"]},{"Key":"run-time evaluation","Fragments":["in"]},{"Key":"evaluation in","Fragments":["the"]},{"Key":"of `const`.","Fragments":["In"]},{"Key":"`const`. In","Fragments":["either"]},{"Key":"In either","Fragments":["case"]},{"Key":"either case","Fragments":["this"]},{"Key":"case this","Fragments":["not"]},{"Key":"this not","Fragments":["only","difficult."]},{"Key":"only ensures","Fragments":["correctness"]},{"Key":"ensures correctness","Fragments":["throughout"]},{"Key":"correctness throughout","Fragments":["your"]},{"Key":"throughout your","Fragments":["program,"]},{"Key":"your program,","Fragments":["but"]},{"Key":"program, but","Fragments":["indicates"]},{"Key":"but indicates","Fragments":["intention"]},{"Key":"indicates intention","Fragments":["to"]},{"Key":"intention to","Fragments":["anyone"]},{"Key":"to anyone","Fragments":["reading"]},{"Key":"anyone reading","Fragments":["your"]},{"Key":"reading your","Fragments":["code.","solutions."]},{"Key":"of trimming","Fragments":["in"]},{"Key":"trimming in","Fragments":["`is_silence`."]},{"Key":"in `is_silence`.","Fragments":["Probably"]},{"Key":"`is_silence`. Probably","Fragments":["better"]},{"Key":"Probably better","Fragments":["than"]},{"Key":"my method","Fragments":["of"]},{"Key":"of testing","Fragments":["for"]},{"Key":"for either","Fragments":["a"]},{"Key":"either a","Fragments":["length","hamming"]},{"Key":"a length","Fragments":["of","of"]},{"Key":"of zero,","Fragments":["or"]},{"Key":"zero, or","Fragments":["space"]},{"Key":"or space","Fragments":["only."]},{"Key":"space only.","Fragments":["I"]},{"Key":"just wasn't","Fragments":["aware"]},{"Key":"wasn't aware","Fragments":["of","that","of"]},{"Key":"of boost::trim,","Fragments":["and"]},{"Key":"boost::trim, and","Fragments":["too"]},{"Key":"and too","Fragments":["lazy"]},{"Key":"too lazy","Fragments":["to"]},{"Key":"lazy to","Fragments":["write"]},{"Key":"own trim.","Fragments":[";)"]},{"Key":"That phrase","Fragments":["about"]},{"Key":"phrase about","Fragments":["internal"]},{"Key":"about internal","Fragments":["linkage"]},{"Key":"internal linkage","Fragments":["is"]},{"Key":"linkage is","Fragments":["just"]},{"Key":"prevent some","Fragments":["oddities"]},{"Key":"some oddities","Fragments":["from"]},{"Key":"oddities from","Fragments":["occurring,"]},{"Key":"from occurring,","Fragments":["as"]},{"Key":"occurring, as","Fragments":["I"]},{"Key":"understand it.","Fragments":["Imagine"]},{"Key":"it. Imagine","Fragments":["you"]},{"Key":"Imagine you","Fragments":["have","have"]},{"Key":"have some","Fragments":["template","performance","other","improvement"]},{"Key":"some template","Fragments":["class"]},{"Key":"template class","Fragments":["`abc`,"]},{"Key":"class `abc`,","Fragments":["and"]},{"Key":"`abc`, and","Fragments":["some"]},{"Key":"some `static","Fragments":["string"]},{"Key":"`static string","Fragments":["str`."]},{"Key":"string str`.","Fragments":["The"]},{"Key":"str`. The","Fragments":["string"]},{"Key":"within it's","Fragments":["own"]},{"Key":"own translation","Fragments":["unit"]},{"Key":"unit (eg.","Fragments":["the"]},{"Key":"(eg. the","Fragments":["file"]},{"Key":"file it's","Fragments":["declared"]},{"Key":"it's declared","Fragments":["in;"]},{"Key":"declared in;","Fragments":["it"]},{"Key":"in; it","Fragments":["has"]},{"Key":"has internal","Fragments":["linkage)"]},{"Key":"internal linkage)","Fragments":["while"]},{"Key":"linkage) while","Fragments":["the"]},{"Key":"class has","Fragments":["external","a"]},{"Key":"has external","Fragments":["linkage."]},{"Key":"external linkage.","Fragments":["Then"]},{"Key":"linkage. Then","Fragments":["if"]},{"Key":"Then if","Fragments":["you"]},{"Key":"you declared","Fragments":["another"]},{"Key":"declared another","Fragments":["variable"]},{"Key":"another variable","Fragments":["with"]},{"Key":"variable with","Fragments":["type","no"]},{"Key":"with type","Fragments":["`abc\u003cstr\u003e`"]},{"Key":"type `abc\u003cstr\u003e`","Fragments":["you'd"]},{"Key":"`abc\u003cstr\u003e` you'd","Fragments":["have"]},{"Key":"a type","Fragments":["accessible","that"]},{"Key":"type accessible","Fragments":["to"]},{"Key":"program (external","Fragments":["linkage)"]},{"Key":"(external linkage)","Fragments":["dependent"]},{"Key":"linkage) dependent","Fragments":["on"]},{"Key":"dependent on","Fragments":["a"]},{"Key":"type that","Fragments":["isn't"]},{"Key":"isn't visible","Fragments":["to"]},{"Key":"program (internal","Fragments":["linkage)."]},{"Key":"think too","Fragments":["deeply"]},{"Key":"too deeply","Fragments":["about"]},{"Key":"deeply about","Fragments":["this"]},{"Key":"problem, I","Fragments":["just"]},{"Key":"just threw","Fragments":["together"]},{"Key":"threw together","Fragments":["stuff"]},{"Key":"together stuff","Fragments":["until"]},{"Key":"stuff until","Fragments":["it"]},{"Key":"until it","Fragments":["worked."]},{"Key":"it worked.","Fragments":["That's"]},{"Key":"worked. That's","Fragments":["usually"]},{"Key":"That's usually","Fragments":["what"]},{"Key":"usually what","Fragments":["I"]},{"Key":"I do.","Fragments":["I"]},{"Key":"do. I","Fragments":["haven't"]},{"Key":"haven't had","Fragments":["the"]},{"Key":"to play","Fragments":["with","nice"]},{"Key":"play with","Fragments":["boost"]},{"Key":"with boost","Fragments":["yet,"]},{"Key":"boost yet,","Fragments":["I"]},{"Key":"yet, I","Fragments":["wished"]},{"Key":"I wished","Fragments":["there"]},{"Key":"wished there","Fragments":["was"]},{"Key":"an any()","Fragments":["predicate,"]},{"Key":"any() predicate,","Fragments":["is"]},{"Key":"predicate, is","Fragments":["there"]},{"Key":"there something","Fragments":["like"]},{"Key":"that that","Fragments":["didn't"]},{"Key":"that didn't","Fragments":["leap"]},{"Key":"didn't leap","Fragments":["out"]},{"Key":"leap out","Fragments":["at"]},{"Key":"out at","Fragments":["me?"]},{"Key":"at me?","Fragments":["I"]},{"Key":"me? I","Fragments":["guess"]},{"Key":"guess really","Fragments":["!all()"]},{"Key":"really !all()","Fragments":["with"]},{"Key":"!all() with","Fragments":["a"]},{"Key":"a negated","Fragments":["condition"]},{"Key":"negated condition","Fragments":["is"]},{"Key":"condition is","Fragments":["equivalent"]},{"Key":"is equivalent","Fragments":["to","to"]},{"Key":"equivalent to","Fragments":["any()","`(!std::isalpha(*it))"]},{"Key":"to any()","Fragments":["but"]},{"Key":"any() but","Fragments":["any()"]},{"Key":"but any()","Fragments":["is"]},{"Key":"any() is","Fragments":["nicer"]},{"Key":"is nicer","Fragments":["to"]},{"Key":"nicer to","Fragments":["read."]},{"Key":"Changed up","Fragments":["the"]},{"Key":"of operation","Fragments":["in"]},{"Key":"operation in","Fragments":["the"]},{"Key":"saw what","Fragments":["you"]},{"Key":"all did","Fragments":["there."]},{"Key":" -xpressive","Fragments":["was"]},{"Key":"-xpressive was","Fragments":["used"]},{"Key":"was used","Fragments":["because","a"]},{"Key":"used because","Fragments":["I"]},{"Key":" -added","Fragments":["`const"]},{"Key":"-added `const","Fragments":["bool`"]},{"Key":"`const bool`","Fragments":["inside"]},{"Key":"bool` inside","Fragments":["hey"]},{"Key":"inside hey","Fragments":["function"]},{"Key":"for readability","Fragments":["since"]},{"Key":"readability since","Fragments":["it"]},{"Key":"optimized out","Fragments":["with"]},{"Key":"with any","Fragments":["level"]},{"Key":"any level","Fragments":["of"]},{"Key":" -used","Fragments":["single"]},{"Key":"-used single","Fragments":["exit"]},{"Key":"single exit","Fragments":["from"]},{"Key":"exit from","Fragments":["function"]},{"Key":"from function","Fragments":["because"]},{"Key":"because that's","Fragments":["how"]},{"Key":"that's how","Fragments":["I"]},{"Key":"I grew","Fragments":["up."]},{"Key":"of namespace.","Fragments":["I"]},{"Key":"even go","Fragments":["there"]},{"Key":"go there","Fragments":["mentally"]},{"Key":"there mentally","Fragments":["when"]},{"Key":"mentally when","Fragments":["looking"]},{"Key":"problem. Nice","Fragments":["use"]},{"Key":"well to","Fragments":["keep","other"]},{"Key":"keep function","Fragments":["visibility"]},{"Key":"function visibility","Fragments":["local"]},{"Key":"visibility local","Fragments":["to"]},{"Key":"local to","Fragments":["file.","the"]},{"Key":"the enum.","Fragments":["It"]},{"Key":"enum. It","Fragments":["makes"]},{"Key":"code clear","Fragments":["when"]},{"Key":"when reading","Fragments":["over"]},{"Key":"reading over","Fragments":["the"]},{"Key":"code. ++","Fragments":["for"]},{"Key":"++ for","Fragments":["that."]},{"Key":"that. Stealing","Fragments":["this"]},{"Key":"Stealing this","Fragments":["thought"]},{"Key":"this thought","Fragments":["from"]},{"Key":"thought from","Fragments":["LegalizeAdulthood's"]},{"Key":"from LegalizeAdulthood's","Fragments":["implementation,"]},{"Key":"LegalizeAdulthood's implementation,","Fragments":["but"]},{"Key":"but an","Fragments":["anonymous"]},{"Key":"namespace would","Fragments":["help"]},{"Key":"help encapsulate","Fragments":["your"]},{"Key":"encapsulate your","Fragments":["methods"]},{"Key":"your methods","Fragments":["and"]},{"Key":"methods and","Fragments":["hide"]},{"Key":"and hide","Fragments":["functionality"]},{"Key":"hide functionality","Fragments":["that"]},{"Key":"functionality that","Fragments":["you"]},{"Key":"want used","Fragments":["outside"]},{"Key":"used outside","Fragments":["it's"]},{"Key":"outside it's","Fragments":["intended"]},{"Key":"it's intended","Fragments":["purpose."]},{"Key":"obvious way","Fragments":["to"]},{"Key":"exercise. Makes","Fragments":["me"]},{"Key":"Makes me","Fragments":["suspicious.."]},{"Key":"me suspicious..","Fragments":["There"]},{"Key":"suspicious.. There","Fragments":["has"]},{"Key":"There has","Fragments":["to"]},{"Key":"way than","Fragments":["comparing"]},{"Key":"than comparing","Fragments":["each"]},{"Key":"code interesting","Fragments":["because"]},{"Key":"interesting because","Fragments":["it"]},{"Key":"does more","Fragments":["than"]},{"Key":"problem asks,","Fragments":["in"]},{"Key":"asks, in","Fragments":["the"]},{"Key":"the sense","Fragments":["that"]},{"Key":"sense that","Fragments":["it"]},{"Key":"really calculates","Fragments":["the"]},{"Key":"calculates the","Fragments":["state"]},{"Key":"the state","Fragments":["of","or"]},{"Key":"state of","Fragments":["all"]},{"Key":"all substrings","Fragments":["that"]},{"Key":"substrings that","Fragments":["include"]},{"Key":"that include","Fragments":["the"]},{"Key":"the remark.","Fragments":["There"]},{"Key":"remark. There","Fragments":["are"]},{"Key":"some closed-form","Fragments":["rules"]},{"Key":"closed-form rules","Fragments":["that"]},{"Key":"rules that","Fragments":["are"]},{"Key":"are simpler","Fragments":["(to"]},{"Key":"simpler (to","Fragments":["my"]},{"Key":"mind at","Fragments":["least)"]},{"Key":"least) to","Fragments":["calculate,"]},{"Key":"to calculate,","Fragments":["i.e."]},{"Key":"calculate, i.e.","Fragments":["silence"]},{"Key":"i.e. silence","Fragments":["="]},{"Key":"silence =","Fragments":["no_nonwhitespace_chars,"]},{"Key":"= no_nonwhitespace_chars,","Fragments":["upper"]},{"Key":"no_nonwhitespace_chars, upper","Fragments":["="]},{"Key":"= non_whitespace_chars","Fragments":["\u0026\u0026"]},{"Key":"non_whitespace_chars \u0026\u0026","Fragments":["no_lower_alpha_chars,"]},{"Key":"\u0026\u0026 no_lower_alpha_chars,","Fragments":["etc."]},{"Key":"The thing","Fragments":["I'd","I","you"]},{"Key":"thing I'd","Fragments":["be"]},{"Key":"be most","Fragments":["worried"]},{"Key":"most worried","Fragments":["about"]},{"Key":"worried about","Fragments":["with"]},{"Key":"about with","Fragments":["this"]},{"Key":"is state","Fragments":["transition"]},{"Key":"state transition","Fragments":["explosion"]},{"Key":"transition explosion","Fragments":["if"]},{"Key":"explosion if","Fragments":["I"]},{"Key":"more types.","Fragments":["If"]},{"Key":"types. If","Fragments":["I"]},{"Key":"add say","Fragments":["emphatic"]},{"Key":"say emphatic","Fragments":["shouting"]},{"Key":"emphatic shouting","Fragments":["as"]},{"Key":"shouting as","Fragments":["all"]},{"Key":"as all","Fragments":["caps","lower"]},{"Key":"caps ending","Fragments":["with"]},{"Key":"ending with","Fragments":["double","a"]},{"Key":"with double","Fragments":["exclamation"]},{"Key":"double exclamation","Fragments":["point,"]},{"Key":"exclamation point,","Fragments":["taking"]},{"Key":"point, taking","Fragments":["precedence"]},{"Key":"taking precedence","Fragments":["over"]},{"Key":"over just","Fragments":["shouting,"]},{"Key":"just shouting,","Fragments":["as"]},{"Key":"shouting, as","Fragments":["a"]},{"Key":"a closed","Fragments":["form"]},{"Key":"closed form","Fragments":["rule"]},{"Key":"form rule","Fragments":["that"]},{"Key":"rule that","Fragments":["would"]},{"Key":"be pretty","Fragments":["easy,"]},{"Key":"pretty easy,","Fragments":["pretty"]},{"Key":"easy, pretty","Fragments":["much"]},{"Key":"much a","Fragments":["1-line"]},{"Key":"a 1-line","Fragments":["change."]},{"Key":"1-line change.","Fragments":["But"]},{"Key":"change. But","Fragments":["here"]},{"Key":"But here","Fragments":["the"]},{"Key":"here the","Fragments":["change"]},{"Key":"change would","Fragments":["be"]},{"Key":"be potentially","Fragments":["spread"]},{"Key":"potentially spread","Fragments":["out"]},{"Key":"spread out","Fragments":["over"]},{"Key":"out over","Fragments":["all"]},{"Key":"all existing","Fragments":["states,","states."]},{"Key":"existing states,","Fragments":["and"]},{"Key":"states, and","Fragments":["a"]},{"Key":"new state","Fragments":["will","variable"]},{"Key":"state will","Fragments":["have"]},{"Key":"to refer","Fragments":["to"]},{"Key":"What are","Fragments":["you"]},{"Key":"the private","Fragments":["`squares()`"]},{"Key":"private `squares()`","Fragments":["and"]},{"Key":"`squares()` and","Fragments":["`~squares()`"]},{"Key":"and `~squares()`","Fragments":["functions"]},{"Key":"`~squares()` functions","Fragments":["for?"]},{"Key":"functions for?","Fragments":["Also"]},{"Key":"for? Also","Fragments":["what"]},{"Key":"Also what","Fragments":["are"]},{"Key":"compiler directions","Fragments":["`define`"]},{"Key":"directions `define`","Fragments":["and"]},{"Key":"`define` and","Fragments":["`ifndef`"]},{"Key":"and `ifndef`","Fragments":["for?"]},{"Key":"`ifndef` for?","Fragments":["They"]},{"Key":"for? They","Fragments":["are"]},{"Key":"used nowhere","Fragments":["else"]},{"Key":"nowhere else","Fragments":["in"]},{"Key":"else in","Fragments":["the","place."]},{"Key":"Nice implementation!","Fragments":["When"]},{"Key":"implementation! When","Fragments":["I"]},{"Key":"considered trying","Fragments":["to"]},{"Key":"come with","Fragments":["a"]},{"Key":"a \"single","Fragments":["iteration\""]},{"Key":"\"single iteration\"","Fragments":["solution,"]},{"Key":"iteration\" solution,","Fragments":["but"]},{"Key":"solution, but","Fragments":["in","I","I"]},{"Key":"the end,","Fragments":["I","I"]},{"Key":"end, I","Fragments":["chickened","went"]},{"Key":"I chickened","Fragments":["out!"]},{"Key":"to admit,","Fragments":["I"]},{"Key":"admit, I","Fragments":["find"]},{"Key":"it difficult","Fragments":["to"]},{"Key":"to verify","Fragments":["the"]},{"Key":"verify the","Fragments":["correctness"]},{"Key":"the correctness","Fragments":["of"]},{"Key":"correctness of","Fragments":["the"]},{"Key":"the single-iteration","Fragments":["solution,"]},{"Key":"single-iteration solution,","Fragments":["but"]},{"Key":"suppose if","Fragments":["this"]},{"Key":"tests, then","Fragments":["that's"]},{"Key":"then that's","Fragments":["\"good"]},{"Key":"that's \"good","Fragments":["enough"]},{"Key":"\"good enough","Fragments":["for"]},{"Key":"only nitpick","Fragments":["for","I","is"]},{"Key":"nitpick for","Fragments":["you:"]},{"Key":"for you:","Fragments":["it"]},{"Key":"you: it","Fragments":["seems"]},{"Key":"your indentation","Fragments":["is","a"]},{"Key":"indentation is","Fragments":["inconsistent."]},{"Key":"some reading,","Fragments":["```constexpr```"]},{"Key":"reading, ```constexpr```","Fragments":["looks"]},{"Key":"```constexpr``` looks","Fragments":["like"]},{"Key":"great fantastic","Fragments":["feature."]},{"Key":"fantastic feature.","Fragments":["Unfortunately"]},{"Key":"feature. Unfortunately","Fragments":["I"]},{"Key":"Unfortunately I","Fragments":["use"]},{"Key":"use VS2013","Fragments":["which"]},{"Key":"VS2013 which","Fragments":["doesn't"]},{"Key":"doesn't support","Fragments":["that"]},{"Key":"support that","Fragments":["feature."]},{"Key":"that feature.","Fragments":["I"]},{"Key":"feature. I","Fragments":["did"]},{"Key":"did make","Fragments":["the"]},{"Key":"const change","Fragments":["though."]},{"Key":"change though.","Fragments":["Thank"]},{"Key":"though. Thank","Fragments":["you!"]},{"Key":"After looking","Fragments":["at","at"]},{"Key":"at [NebuPookin's](http://exercism.io/NebuPookins)","Fragments":["code,"]},{"Key":"[NebuPookin's](http://exercism.io/NebuPookins) code,","Fragments":["I"]},{"Key":"unnecessary and","Fragments":["a"]},{"Key":"namespace makes","Fragments":["more"]},{"Key":"sense in","Fragments":["this"]},{"Key":"code! Very","Fragments":["cool"]},{"Key":"Very cool","Fragments":["use"]},{"Key":"cool use","Fragments":["of"]},{"Key":"the xpressive","Fragments":["library."]},{"Key":"For your","Fragments":["`SILENT`,","purpose"]},{"Key":"your `SILENT`,","Fragments":["variable,"]},{"Key":"`SILENT`, variable,","Fragments":["it"]},{"Key":"variable, it","Fragments":["seems"]},{"Key":"seems rather","Fragments":["than"]},{"Key":"than implementing","Fragments":["it"]},{"Key":"implementing it","Fragments":["as"]},{"Key":"as (essentially)","Fragments":["`!NOTSILENT`,"]},{"Key":"(essentially) `!NOTSILENT`,","Fragments":["you"]},{"Key":"`!NOTSILENT`, you","Fragments":["could"]},{"Key":"directly implement","Fragments":["`SILENT`"]},{"Key":"implement `SILENT`","Fragments":["as"]},{"Key":"`SILENT` as","Fragments":["something"]},{"Key":"like `xpr::bos","Fragments":["\u003e\u003e"]},{"Key":"`xpr::bos \u003e\u003e","Fragments":["+xpr::space"]},{"Key":"\u003e\u003e +xpr::space","Fragments":["\u003e\u003e"]},{"Key":"+xpr::space \u003e\u003e","Fragments":["xpr:eos`"]},{"Key":"\u003e\u003e xpr:eos`","Fragments":["(or"]},{"Key":"xpr:eos` (or","Fragments":["just"]},{"Key":"(or just","Fragments":["as"]},{"Key":"as `+xpr::space`","Fragments":["and"]},{"Key":"`+xpr::space` and","Fragments":["use"]},{"Key":"use `regex_match`","Fragments":["instead"]},{"Key":"`regex_match` instead","Fragments":["of"]},{"Key":"of `regex_search`).","Fragments":["I'm"]},{"Key":"`regex_search`). I'm","Fragments":["guessing"]},{"Key":"I'm guessing","Fragments":["it"]},{"Key":"guessing it","Fragments":["ended"]},{"Key":"it ended","Fragments":["up"]},{"Key":"way it","Fragments":["currently","also"]},{"Key":"currently is","Fragments":["because"]},{"Key":"code evolved","Fragments":["from"]},{"Key":"evolved from","Fragments":["your"]},{"Key":" Coming","Fragments":["up"]},{"Key":"Coming up","Fragments":["with"]},{"Key":"a regexp","Fragments":["for"]},{"Key":"regexp for","Fragments":["`YELLING`"]},{"Key":"for `YELLING`","Fragments":["directly"]},{"Key":"`YELLING` directly","Fragments":["(as"]},{"Key":"directly (as","Fragments":["opposed"]},{"Key":"(as opposed","Fragments":["to"]},{"Key":"to coming","Fragments":["up"]},{"Key":"coming up","Fragments":["with"]},{"Key":"for `NOTYELLING`,","Fragments":["and"]},{"Key":"`NOTYELLING`, and","Fragments":["then"]},{"Key":"then negating","Fragments":["the"]},{"Key":"negating the","Fragments":["results)"]},{"Key":"the results)","Fragments":["is"]},{"Key":"results) is","Fragments":["a"]},{"Key":"little tricker,","Fragments":["and"]},{"Key":"tricker, and","Fragments":["I"]},{"Key":"to draw","Fragments":["a","a"]},{"Key":"draw a","Fragments":["DFA","DFA"]},{"Key":"a DFA","Fragments":["diagram","diagram"]},{"Key":"DFA diagram","Fragments":["to","to"]},{"Key":"diagram to","Fragments":["figure","figure"]},{"Key":"figure it","Fragments":["out:"]},{"Key":"it out:","Fragments":["`bos"]},{"Key":"out: `bos","Fragments":["\u003e\u003e"]},{"Key":"`bos \u003e\u003e","Fragments":["*~alpha"]},{"Key":"\u003e\u003e *~alpha","Fragments":["\u003e\u003e"]},{"Key":"*~alpha \u003e\u003e","Fragments":["upper"]},{"Key":"\u003e\u003e upper","Fragments":["\u003e\u003e"]},{"Key":"upper \u003e\u003e","Fragments":["*~lower"]},{"Key":"\u003e\u003e *~lower","Fragments":["\u003e\u003e"]},{"Key":"*~lower \u003e\u003e","Fragments":["eos`"]},{"Key":"code! Your","Fragments":["overall","style","style","style"]},{"Key":"Your overall","Fragments":["code"]},{"Key":"overall code","Fragments":["structure"]},{"Key":"code structure","Fragments":["is"]},{"Key":"structure is","Fragments":["very"]},{"Key":"For directly","Fragments":["implementing"]},{"Key":"directly implementing","Fragments":["isShout"]},{"Key":"implementing isShout","Fragments":["as"]},{"Key":"isShout as","Fragments":["a"]},{"Key":"a regex,","Fragments":["I"]},{"Key":"regex, I","Fragments":["think"]},{"Key":"think something","Fragments":["like"]},{"Key":"this might","Fragments":["work","not"]},{"Key":"work (I","Fragments":["didn't"]},{"Key":"(I didn't","Fragments":["test"]},{"Key":"didn't test","Fragments":["it):"]},{"Key":"test it):","Fragments":["`[^A-Za-z]*[[:upper:]][^[:lower:]]*`."]},{"Key":"it): `[^A-Za-z]*[[:upper:]][^[:lower:]]*`.","Fragments":["Of"]},{"Key":"`[^A-Za-z]*[[:upper:]][^[:lower:]]*`. Of","Fragments":["course,"]},{"Key":"course, that","Fragments":["assumes"]},{"Key":"that assumes","Fragments":["only"]},{"Key":"assumes only","Fragments":["ASCII"]},{"Key":"only ASCII","Fragments":["input."]},{"Key":"ASCII input.","Fragments":["If"]},{"Key":"input. If","Fragments":["you","you"]},{"Key":"restrict yourself","Fragments":["to"]},{"Key":"the `upper`","Fragments":["and"]},{"Key":"`upper` and","Fragments":["`lower`"]},{"Key":"and `lower`","Fragments":["character"]},{"Key":"`lower` character","Fragments":["classes"]},{"Key":"character classes","Fragments":["with"]},{"Key":"classes with","Fragments":["dropping"]},{"Key":"with dropping","Fragments":["down"]},{"Key":"dropping down","Fragments":["to"]},{"Key":"to referencing","Fragments":["`A-Z`"]},{"Key":"referencing `A-Z`","Fragments":["or"]},{"Key":"`A-Z` or","Fragments":["`a-z`,"]},{"Key":"or `a-z`,","Fragments":["then"]},{"Key":"`a-z`, then","Fragments":["I"]},{"Key":"this syntax","Fragments":["works?"]},{"Key":"syntax works?","Fragments":["`[^[:upper:][:lower:]]*[[:upper:]][^[:lower:]]*`"]},{"Key":"works? `[^[:upper:][:lower:]]*[[:upper:]][^[:lower:]]*`","Fragments":["I've"]},{"Key":"`[^[:upper:][:lower:]]*[[:upper:]][^[:lower:]]*` I've","Fragments":["not"]},{"Key":"I've not","Fragments":["worked"]},{"Key":"not worked","Fragments":["with"]},{"Key":"the `boost:regex`","Fragments":["library,"]},{"Key":"`boost:regex` library,","Fragments":["so"]},{"Key":"library, so","Fragments":["I'm"]},{"Key":"little messy","Fragments":["and"]},{"Key":"messy and","Fragments":["could"]},{"Key":"helper functions.","Fragments":["It'd"]},{"Key":"functions. It'd","Fragments":["be"]},{"Key":"song assembly","Fragments":["more"]},{"Key":"assembly more","Fragments":["readable"]},{"Key":"readable or","Fragments":["modular."]},{"Key":"the code's","Fragments":["simplicity;"]},{"Key":"code's simplicity;","Fragments":["it"]},{"Key":"simplicity; it","Fragments":["is"]},{"Key":"as straight-forward","Fragments":["as"]},{"Key":"straight-forward as","Fragments":["it"]},{"Key":"possibly be.","Fragments":["There's"]},{"Key":"be. There's","Fragments":["really"]},{"Key":"There's really","Fragments":["no","not","no","no"]},{"Key":"really no","Fragments":["need","reason","good"]},{"Key":"write \"clever\"","Fragments":["(which"]},{"Key":"\"clever\" (which","Fragments":["can"]},{"Key":"(which can","Fragments":["be"]},{"Key":"be unmaintainable)","Fragments":["code"]},{"Key":"unmaintainable) code","Fragments":["when"]},{"Key":"code when","Fragments":["the"]},{"Key":"the simple","Fragments":["solution","case","case","for","cases"]},{"Key":"simple solution","Fragments":["is"]},{"Key":"and self-documenting.","Fragments":["Kudos"]},{"Key":"self-documenting. Kudos","Fragments":["for"]},{"Key":"Kudos for","Fragments":["that!"]},{"Key":"Now for","Fragments":["picking","std::string"]},{"Key":"for picking","Fragments":["nits....","that"]},{"Key":" `checkPoke`","Fragments":["could"]},{"Key":"`checkPoke` could","Fragments":["test","test"]},{"Key":"could test","Fragments":["for","for"]},{"Key":"string length","Fragments":["before","before","is","at","and"]},{"Key":"length before","Fragments":["doing","doing"]},{"Key":"before doing","Fragments":["the","the"]},{"Key":"the non-space","Fragments":["test,","test,"]},{"Key":"non-space test,","Fragments":["optimizing","optimizing"]},{"Key":"test, optimizing","Fragments":["for","for"]},{"Key":"optimizing for","Fragments":["efficiency","efficiency"]},{"Key":"for efficiency","Fragments":["in","in"]},{"Key":"efficiency in","Fragments":["the","the"]},{"Key":"case before","Fragments":["diving","diving"]},{"Key":"before diving","Fragments":["into","into"]},{"Key":"diving into","Fragments":["a","a"]},{"Key":" `checkYell`","Fragments":["might"]},{"Key":"`checkYell` might","Fragments":["be"]},{"Key":"better implemented","Fragments":["using"]},{"Key":"using something","Fragments":["like","like"]},{"Key":"like `::islower`","Fragments":["and"]},{"Key":"`::islower` and","Fragments":["`::isupper`,"]},{"Key":"and `::isupper`,","Fragments":["which"]},{"Key":"`::isupper`, which","Fragments":["could"]},{"Key":"facilitate locale-awareness.","Fragments":["As"]},{"Key":"locale-awareness. As","Fragments":["implemented,"]},{"Key":"As implemented,","Fragments":["it"]},{"Key":"implemented, it","Fragments":["is"]},{"Key":"only ASCII-aware.","Fragments":["Probably"]},{"Key":"ASCII-aware. Probably","Fragments":["fine"]},{"Key":"Probably fine","Fragments":["for"]},{"Key":"fine for","Fragments":["something"]},{"Key":"for something","Fragments":["throwaway"]},{"Key":"something throwaway","Fragments":["like"]},{"Key":"throwaway like","Fragments":["this,"]},{"Key":"like this,","Fragments":["but"]},{"Key":"more general","Fragments":["sense,","```using"]},{"Key":"general sense,","Fragments":["in"]},{"Key":"sense, in","Fragments":["2014,"]},{"Key":"in 2014,","Fragments":["case"]},{"Key":"2014, case","Fragments":["mappings"]},{"Key":"case mappings","Fragments":["can"]},{"Key":"mappings can","Fragments":["be"]},{"Key":" `checkQuestion`","Fragments":["would"]},{"Key":"`checkQuestion` would","Fragments":["invoke"]},{"Key":"invoke UB","Fragments":["if"]},{"Key":"UB if","Fragments":["called"]},{"Key":"if called","Fragments":["on"]},{"Key":"string. You're","Fragments":["not"]},{"Key":"You're not","Fragments":["calling"]},{"Key":"not calling","Fragments":["it"]},{"Key":"calling it","Fragments":["on"]},{"Key":"string, because","Fragments":["you"]},{"Key":"because you","Fragments":["`checkPoke`","prefer","do","never"]},{"Key":"you `checkPoke`","Fragments":["first,"]},{"Key":"`checkPoke` first,","Fragments":["but"]},{"Key":"first, but","Fragments":["the","that","that"]},{"Key":"written more","Fragments":["robustly."]},{"Key":" Again,","Fragments":["it's","needs"]},{"Key":"Again, it's","Fragments":["refreshing","something"]},{"Key":"it's refreshing","Fragments":["to"]},{"Key":"refreshing to","Fragments":["see"]},{"Key":"implementation that","Fragments":["does","I'm","just"]},{"Key":"does what","Fragments":["it's"]},{"Key":"what it's","Fragments":["supposed"]},{"Key":"it's supposed","Fragments":["to"]},{"Key":"without being","Fragments":["flashy","altered."]},{"Key":"being flashy","Fragments":["or"]},{"Key":"flashy or","Fragments":["complicated."]},{"Key":"went ahead","Fragments":["and","and","and"]},{"Key":"and implemented","Fragments":["those"]},{"Key":"implemented those","Fragments":["regex"]},{"Key":"those regex","Fragments":["changes."]},{"Key":"regex changes.","Fragments":["Using"]},{"Key":"changes. Using","Fragments":["`xpr::space`"]},{"Key":"Using `xpr::space`","Fragments":["and"]},{"Key":"`xpr::space` and","Fragments":["`regex_match`"]},{"Key":"and `regex_match`","Fragments":["is"]},{"Key":"`regex_match` is","Fragments":["a"]},{"Key":"idea as","Fragments":["well."]},{"Key":"pretty good,","Fragments":["but","though"]},{"Key":"good, but","Fragments":["it","the"]},{"Key":"little simpler.","Fragments":["You","This"]},{"Key":"simpler. You","Fragments":["can"]},{"Key":"can cut","Fragments":["out"]},{"Key":"cut out","Fragments":["the"]},{"Key":"the longest","Fragments":["and","string","string"]},{"Key":"longest and","Fragments":["shortest"]},{"Key":"and shortest","Fragments":["strings,"]},{"Key":"shortest strings,","Fragments":["if"]},{"Key":"strings, if","Fragments":["you"]},{"Key":"you reframe","Fragments":["your"]},{"Key":"reframe your","Fragments":["loop"]},{"Key":"to examine","Fragments":["both"]},{"Key":"examine both","Fragments":["the"]},{"Key":"current character","Fragments":["in"]},{"Key":"both strings.","Fragments":["Or,"]},{"Key":"strings. Or,","Fragments":["you"]},{"Key":"Or, you","Fragments":["can"]},{"Key":"can eliminate","Fragments":["extra"]},{"Key":"eliminate extra","Fragments":["copy"]},{"Key":"extra copy","Fragments":["operations"]},{"Key":"operations using","Fragments":["string"]},{"Key":"It's too","Fragments":["bad"]},{"Key":"too bad","Fragments":["the","after"]},{"Key":"bad the","Fragments":["test"]},{"Key":"test looks","Fragments":["for"]},{"Key":"looks for","Fragments":["an"]},{"Key":"an ordered","Fragments":["container."]},{"Key":"ordered container.","Fragments":["I"]},{"Key":"container. I","Fragments":["am"]},{"Key":"familiar enough","Fragments":["with"]},{"Key":"enough with","Fragments":["Boost's"]},{"Key":"with Boost's","Fragments":["testing"]},{"Key":"Boost's testing","Fragments":["framework"]},{"Key":"testing framework","Fragments":["to"]},{"Key":"framework to","Fragments":["know","try"]},{"Key":"to this:","Fragments":["Does"]},{"Key":"this: Does","Fragments":["it"]},{"Key":"Does it","Fragments":["provide"]},{"Key":"it provide","Fragments":["a"]},{"Key":"provide a","Fragments":["means"]},{"Key":"a means","Fragments":["of"]},{"Key":"means of","Fragments":["comparing"]},{"Key":"of comparing","Fragments":["unordered"]},{"Key":"comparing unordered","Fragments":["containers?"]},{"Key":"an `unordered_map`","Fragments":["the"]},{"Key":"`unordered_map` the","Fragments":["counting"]},{"Key":"the counting","Fragments":["phase"]},{"Key":"counting phase","Fragments":["could"]},{"Key":"phase could","Fragments":["be"]},{"Key":"an amortized","Fragments":["`O(n)`"]},{"Key":"amortized `O(n)`","Fragments":["rather"]},{"Key":"`O(n)` rather","Fragments":["than"]},{"Key":"than `O(n","Fragments":["log"]},{"Key":"`O(n log","Fragments":["n)`."]},{"Key":"\u003e `checkPoke`","Fragments":["could"]},{"Key":" @alfonzo,","Fragments":["what's"]},{"Key":"@alfonzo, what's","Fragments":["funny"]},{"Key":"what's funny","Fragments":["is"]},{"Key":"funny is","Fragments":["I"]},{"Key":"is I","Fragments":["gave"]},{"Key":"gave @alfonzo","Fragments":["the"]},{"Key":"@alfonzo the","Fragments":["exact"]},{"Key":"exact opposite","Fragments":["nitpick"]},{"Key":"opposite nitpick","Fragments":["in"]},{"Key":"nitpick in","Fragments":["an"]},{"Key":"early revision.","Fragments":["lol!"]},{"Key":"is 0,","Fragments":["the"]},{"Key":"0, the","Fragments":["for"]},{"Key":"simply perform","Fragments":["0"]},{"Key":"perform 0","Fragments":["iterations,"]},{"Key":"0 iterations,","Fragments":["and"]},{"Key":"thus there","Fragments":["won't"]},{"Key":"there won't","Fragments":["be"]},{"Key":"be any","Fragments":["significant"]},{"Key":"any significant","Fragments":["efficiency"]},{"Key":"significant efficiency","Fragments":["lost."]},{"Key":"In this","Fragments":["version","case","version","exercise","case","iteration,","iteration,","iteration,","iteration,"]},{"Key":"version I","Fragments":["avoid","use"]},{"Key":"I avoid","Fragments":["the"]},{"Key":"iterator contortions","Fragments":["by"]},{"Key":"contortions by","Fragments":["using"]},{"Key":"an old-fashioned","Fragments":["C-style"]},{"Key":"old-fashioned C-style","Fragments":["for"]},{"Key":"C-style for","Fragments":["loop"]},{"Key":"loop after","Fragments":["detecting"]},{"Key":"after detecting","Fragments":["the"]},{"Key":"detecting the","Fragments":["minimum"]},{"Key":"minimum input","Fragments":["string"]},{"Key":"string length.","Fragments":["To"]},{"Key":"length. To","Fragments":["me"]},{"Key":"To me","Fragments":["this","the"]},{"Key":"this feels","Fragments":["more"]},{"Key":"more straightforward","Fragments":["than","approach"]},{"Key":"straightforward than","Fragments":["the"]},{"Key":"iterator version.","Fragments":["But"]},{"Key":"does expose","Fragments":["the"]},{"Key":"expose the","Fragments":["ugliness"]},{"Key":"the ugliness","Fragments":["of"]},{"Key":"ugliness of","Fragments":["playing"]},{"Key":"of playing","Fragments":["with"]},{"Key":"playing with","Fragments":["indices.","that"]},{"Key":"how cleanly","Fragments":["organized"]},{"Key":"cleanly organized","Fragments":["it"]},{"Key":"organized it","Fragments":["is."]},{"Key":"is. I","Fragments":["think"]},{"Key":"all whitespace","Fragments":["to","from","or"]},{"Key":"whitespace to","Fragments":["illustrate"]},{"Key":"to illustrate","Fragments":["a"]},{"Key":"illustrate a","Fragments":["good"]},{"Key":"good knowledge","Fragments":["of"]},{"Key":"standard libraries.","Fragments":["Here"]},{"Key":"libraries. Here","Fragments":["are"]},{"Key":"Here are","Fragments":["my"]},{"Key":"are my","Fragments":["nitpicks:"]},{"Key":"* It","Fragments":["seems"]},{"Key":"seems strange","Fragments":["to"]},{"Key":"strange to","Fragments":["me"]},{"Key":"that `*phrase.rbegin()`","Fragments":["needs"]},{"Key":"`*phrase.rbegin()` needs","Fragments":["an"]},{"Key":"needs an","Fragments":["asterix"]},{"Key":"an asterix","Fragments":["before"]},{"Key":"asterix before","Fragments":["it,"]},{"Key":"before it,","Fragments":["but"]},{"Key":"but expressions","Fragments":["locations"]},{"Key":"expressions locations","Fragments":["(e.g."]},{"Key":"locations (e.g.","Fragments":["`phrase.find_first_not_of`)"]},{"Key":"(e.g. `phrase.find_first_not_of`)","Fragments":["does"]},{"Key":"`phrase.find_first_not_of`) does","Fragments":["not."]},{"Key":"does not.","Fragments":["Seems"]},{"Key":"not. Seems","Fragments":["like"]},{"Key":"Seems like","Fragments":["it"]},{"Key":"* I","Fragments":["see"]},{"Key":"of isCaps,","Fragments":["you","and"]},{"Key":"isCaps, you","Fragments":["count"]},{"Key":"you count","Fragments":["the"]},{"Key":"of alphabetic","Fragments":["characters,"]},{"Key":"alphabetic characters,","Fragments":["and"]},{"Key":"characters, and","Fragments":["the"]},{"Key":"are capitalized,","Fragments":["and"]},{"Key":"capitalized, and","Fragments":["then"]},{"Key":"then compare","Fragments":["the","the"]},{"Key":"two to","Fragments":["determine"]},{"Key":"entire phrase","Fragments":["is"]},{"Key":"is capitalized.","Fragments":["However,"]},{"Key":"capitalized. However,","Fragments":["note"]},{"Key":"However, note","Fragments":["that"]},{"Key":"note that","Fragments":["if","using","if"]},{"Key":"you ever","Fragments":["encounter"]},{"Key":"ever encounter","Fragments":["a"]},{"Key":"encounter a","Fragments":["character","lowercase"]},{"Key":"character that","Fragments":["is","is"]},{"Key":"is alphabetic","Fragments":["but"]},{"Key":"alphabetic but","Fragments":["NOT"]},{"Key":"but NOT","Fragments":["capitalized,"]},{"Key":"NOT capitalized,","Fragments":["then"]},{"Key":"capitalized, then","Fragments":["there"]},{"Key":"no way","Fragments":["for"]},{"Key":"way for","Fragments":["these"]},{"Key":"two counts","Fragments":["to"]},{"Key":"counts to","Fragments":["ever"]},{"Key":"to ever","Fragments":["become"]},{"Key":"ever become","Fragments":["equal."]},{"Key":"become equal.","Fragments":["As"]},{"Key":"equal. As","Fragments":["such,"]},{"Key":"As such,","Fragments":["I"]},{"Key":"such, I","Fragments":["think"]},{"Key":"the counts,","Fragments":["and"]},{"Key":"counts, and","Fragments":["can"]},{"Key":"can immediately","Fragments":["return"]},{"Key":"immediately return","Fragments":["false"]},{"Key":"false out","Fragments":["of"]},{"Key":"function the","Fragments":["moment"]},{"Key":"moment you","Fragments":["encounter"]},{"Key":"you encounter","Fragments":["a"]},{"Key":" @leanna","Fragments":["Woops,"]},{"Key":"@leanna Woops,","Fragments":["you're"]},{"Key":"Woops, you're","Fragments":["right."]},{"Key":"you're right.","Fragments":[":D","empty()","And"]},{"Key":"right. :D","Fragments":["Zero-length;"]},{"Key":":D Zero-length;","Fragments":["no"]},{"Key":"Zero-length; no","Fragments":["iterations,"]},{"Key":"no iterations,","Fragments":["no"]},{"Key":"iterations, no","Fragments":["extra"]},{"Key":"no extra","Fragments":["work.","step."]},{"Key":"extra work.","Fragments":[":)"]},{"Key":"have attempted","Fragments":["to"]},{"Key":"attempted to","Fragments":["separate","catalog"]},{"Key":"the final","Fragments":["choice","logic","punctuation","result","two"]},{"Key":"final choice","Fragments":["of"]},{"Key":"choice of","Fragments":["response"]},{"Key":"the combinatorial","Fragments":["logic"]},{"Key":"combinatorial logic","Fragments":["that"]},{"Key":"that processes","Fragments":["the"]},{"Key":"processes the","Fragments":["input."]},{"Key":"the input.","Fragments":["Using"]},{"Key":"input. Using","Fragments":["a"]},{"Key":"few helper","Fragments":["functions"]},{"Key":"that extend","Fragments":["some"]},{"Key":"extend some","Fragments":["of"]},{"Key":"standard C","Fragments":["character"]},{"Key":"C character","Fragments":["functions"]},{"Key":"character functions","Fragments":["to"]},{"Key":"to std::string","Fragments":["versions"]},{"Key":"std::string versions","Fragments":["makes"]},{"Key":"versions makes","Fragments":["the"]},{"Key":"final logic","Fragments":["resonably"]},{"Key":"logic resonably","Fragments":["simple."]},{"Key":"compare outputs","Fragments":["of"]},{"Key":"outputs of","Fragments":["functions"]},{"Key":"like std::isalpha","Fragments":["against"]},{"Key":"std::isalpha against","Fragments":["0"]},{"Key":"against 0","Fragments":["rather"]},{"Key":"0 rather","Fragments":["than","than"]},{"Key":"than allow","Fragments":["implicit"]},{"Key":"allow implicit","Fragments":["bool"]},{"Key":"implicit bool","Fragments":["conversions"]},{"Key":"bool conversions","Fragments":["because"]},{"Key":"conversions because","Fragments":["I"]},{"Key":"it good","Fragments":["practise"]},{"Key":"good practise","Fragments":["to"]},{"Key":"practise to","Fragments":["treat"]},{"Key":"treat functions","Fragments":["that"]},{"Key":"that return","Fragments":["int","bool.","value.","a"]},{"Key":"return int","Fragments":["differently"]},{"Key":"int differently","Fragments":["to"]},{"Key":"differently to","Fragments":["those"]},{"Key":"those that","Fragments":["return"]},{"Key":"return bool.","Fragments":["In"]},{"Key":"bool. In","Fragments":["this"]},{"Key":"it may","Fragments":["not","be"]},{"Key":"make much","Fragments":["difference"]},{"Key":"much difference","Fragments":["but"]},{"Key":"difference but","Fragments":["it"]},{"Key":"also helps","Fragments":["in"]},{"Key":"helps in","Fragments":["remembering"]},{"Key":"in remembering","Fragments":["that"]},{"Key":"remembering that","Fragments":["functions"]},{"Key":"that functions","Fragments":["like"]},{"Key":"like std::strcmp","Fragments":["returns"]},{"Key":"std::strcmp returns","Fragments":["-1/0/1."]},{"Key":" PS","Fragments":["-"]},{"Key":"PS -","Fragments":["still"]},{"Key":"- still","Fragments":["trying"]},{"Key":"out how","Fragments":["to","to","to","to","to"]},{"Key":"submit multiple","Fragments":["files","files."]},{"Key":"multiple files","Fragments":["in"]},{"Key":"one iteration","Fragments":[":|","through"]},{"Key":"use iterators","Fragments":["and","instead","instead","instead"]},{"Key":"while loop,","Fragments":["which","but"]},{"Key":"loop, which","Fragments":["sort"]},{"Key":"which sort","Fragments":["of"]},{"Key":"of feels","Fragments":["like"]},{"Key":"a contortion","Fragments":["just"]},{"Key":"contortion just","Fragments":["to"]},{"Key":"straightforward approach","Fragments":["of"]},{"Key":"approach of","Fragments":["dealing","using"]},{"Key":"of dealing","Fragments":["with"]},{"Key":"the std::regex","Fragments":["library."]},{"Key":"std::regex library.","Fragments":["I"]},{"Key":"library. I","Fragments":["would"]},{"Key":"would suggest","Fragments":["using","refactoing","changing","changing","refactoring","using","trying"]},{"Key":"suggest using","Fragments":["the","the","a"]},{"Key":"the std::string.empty()","Fragments":["function"]},{"Key":"std::string.empty() function","Fragments":["instead"]},{"Key":"function instead","Fragments":["of","of"]},{"Key":"checking length","Fragments":["\u003c"]},{"Key":"length \u003c","Fragments":["1."]},{"Key":"\u003c 1.","Fragments":["The"]},{"Key":"function more","Fragments":["clearly"]},{"Key":"indicates the","Fragments":["intent"]},{"Key":"intent and","Fragments":["may"]},{"Key":"may 'anecdotally'","Fragments":["have"]},{"Key":"'anecdotally' have","Fragments":["some"]},{"Key":"some performance","Fragments":["differences"]},{"Key":"performance differences","Fragments":["(but"]},{"Key":"differences (but","Fragments":["clarity"]},{"Key":"(but clarity","Fragments":["is"]},{"Key":"clarity is","Fragments":["the"]},{"Key":"actually agree,","Fragments":["@harrison."]},{"Key":"agree, @harrison.","Fragments":["This"]},{"Key":"@harrison. This","Fragments":["is"]},{"Key":"approach I","Fragments":["would"]},{"Key":"would take","Fragments":["in"]},{"Key":"take in","Fragments":["\"real\""]},{"Key":"in \"real\"","Fragments":["code,"]},{"Key":"\"real\" code,","Fragments":["unless"]},{"Key":"code, unless","Fragments":["I"]},{"Key":"unless I","Fragments":["*really*"]},{"Key":"I *really*","Fragments":["needed"]},{"Key":"*really* needed","Fragments":["to"]},{"Key":"to eek","Fragments":["out"]},{"Key":"eek out","Fragments":["the"]},{"Key":"performance (see","Fragments":["below)."]},{"Key":"However, I'd","Fragments":["already"]},{"Key":"I'd already","Fragments":["done"]},{"Key":"already done","Fragments":["the"]},{"Key":"done the","Fragments":["straightforward"]},{"Key":"the straightforward","Fragments":["implementation"]},{"Key":"straightforward implementation","Fragments":["in"]},{"Key":"my ruby","Fragments":["solution"]},{"Key":"ruby solution","Fragments":["to"]},{"Key":"same problem.","Fragments":["So"]},{"Key":"problem. So","Fragments":["I"]},{"Key":"I challenged","Fragments":["myself"]},{"Key":"challenged myself","Fragments":["to"]},{"Key":"myself to","Fragments":["come","only"]},{"Key":"a solution","Fragments":["that","that","and"]},{"Key":"solution that","Fragments":["could","directly"]},{"Key":"could answer","Fragments":["the"]},{"Key":"answer the","Fragments":["question"]},{"Key":"pass over","Fragments":["the"]},{"Key":"string (you'll","Fragments":["note"]},{"Key":"(you'll note","Fragments":["that"]},{"Key":"using multiple","Fragments":["string::find"]},{"Key":"multiple string::find","Fragments":["conditions"]},{"Key":"string::find conditions","Fragments":["would"]},{"Key":"conditions would","Fragments":["make"]},{"Key":"make multiple","Fragments":["passes"]},{"Key":"multiple passes","Fragments":["over"]},{"Key":"passes over","Fragments":["the"]},{"Key":"said, in","Fragments":["the"]},{"Key":"did need","Fragments":["that"]},{"Key":"need that","Fragments":["performance"]},{"Key":"that performance","Fragments":["increase"]},{"Key":"performance increase","Fragments":["I"]},{"Key":"increase I","Fragments":["still"]},{"Key":"still wouldn't","Fragments":["use"]},{"Key":"wouldn't use","Fragments":["this"]},{"Key":"this handrolled","Fragments":["parser;"]},{"Key":"handrolled parser;","Fragments":["I'd"]},{"Key":"parser; I'd","Fragments":["use"]},{"Key":"use e.g.","Fragments":["ragel."]},{"Key":"e.g. ragel.","Fragments":["This"]},{"Key":"ragel. This","Fragments":["approach"]},{"Key":"This approach","Fragments":["was"]},{"Key":"was just","Fragments":["a","trying"]},{"Key":"a fun","Fragments":["self-imposed"]},{"Key":"fun self-imposed","Fragments":["constraint."]},{"Key":"that fro","Fragments":["this"]},{"Key":"fro this","Fragments":["problem"]},{"Key":"problem use","Fragments":["of"]},{"Key":"of regex","Fragments":["libraries"]},{"Key":"regex libraries","Fragments":["may","that"]},{"Key":"libraries may","Fragments":["be"]},{"Key":"be heavy","Fragments":["handed"]},{"Key":"heavy handed","Fragments":["however"]},{"Key":"handed however","Fragments":["your"]},{"Key":"however your","Fragments":["submission"]},{"Key":"your submission","Fragments":["still"]},{"Key":"submission still","Fragments":["fails"]},{"Key":"still fails","Fragments":["a"]},{"Key":"fails a","Fragments":["few"]},{"Key":"test cases.","Fragments":["For","I'll"]},{"Key":"example 'shouting_with_no_exclamation_mark'","Fragments":["uses"]},{"Key":"'shouting_with_no_exclamation_mark' uses","Fragments":["the"]},{"Key":"input \"I","Fragments":["HATE"]},{"Key":"\"I HATE","Fragments":["YOU\"."]},{"Key":"HATE YOU\".","Fragments":["So"]},{"Key":"YOU\". So","Fragments":["the"]},{"Key":"So the","Fragments":["final","`erase`","constructor","string"]},{"Key":"final punctuation","Fragments":["is"]},{"Key":"punctuation is","Fragments":["not"]},{"Key":"not enough","Fragments":["to"]},{"Key":" Calling","Fragments":["the","```string.back()```"]},{"Key":"Calling the","Fragments":["std::string.back"]},{"Key":"the std::string.back","Fragments":["function"]},{"Key":"std::string.back function","Fragments":["on"]},{"Key":"function on","Fragments":["an"]},{"Key":"string \"\"","Fragments":["should"]},{"Key":"\"\" should","Fragments":["not"]},{"Key":"done an","Fragments":["is"]},{"Key":"an is","Fragments":["underfined"]},{"Key":"is underfined","Fragments":["behaviour."]},{"Key":"underfined behaviour.","Fragments":["You"]},{"Key":"behaviour. You","Fragments":["might"]},{"Key":"might get","Fragments":["NULL"]},{"Key":"get NULL","Fragments":["in"]},{"Key":"NULL in","Fragments":["a"]},{"Key":"a debug","Fragments":["build"]},{"Key":"debug build","Fragments":["but"]},{"Key":"build but","Fragments":["this"]},{"Key":"is never","Fragments":["guaranteed.","assigned"]},{"Key":"Testing agains","Fragments":["the"]},{"Key":"agains the","Fragments":["NULL"]},{"Key":"the NULL","Fragments":["character","character."]},{"Key":"NULL character","Fragments":["'\\0'"]},{"Key":"character '\\0'","Fragments":["is"]},{"Key":"'\\0' is","Fragments":["probably"]},{"Key":"not your","Fragments":["intention"]},{"Key":"intention and","Fragments":["might"]},{"Key":"an attempt","Fragments":["at","to"]},{"Key":"attempt at","Fragments":["handling"]},{"Key":"at handling","Fragments":["the"]},{"Key":"the whitespace","Fragments":["input"]},{"Key":"whitespace input","Fragments":["\""]},{"Key":"input \"","Fragments":["\"."]},{"Key":"Good point,","Fragments":["doing"]},{"Key":"point, doing","Fragments":["each"]},{"Key":"doing each","Fragments":["response"]},{"Key":"response separately","Fragments":["would"]},{"Key":"separately would","Fragments":["definitely"]},{"Key":"definitely incur","Fragments":["multiple"]},{"Key":"incur multiple","Fragments":["passes."]},{"Key":"multiple passes.","Fragments":["It's"]},{"Key":"passes. It's","Fragments":["probably"]},{"Key":"It's probably","Fragments":["possible"]},{"Key":"probably possible","Fragments":["to"]},{"Key":"determine a","Fragments":["set"]},{"Key":"a set","Fragments":["of"]},{"Key":"of Boolean","Fragments":["values"]},{"Key":"Boolean values","Fragments":["about"]},{"Key":"values about","Fragments":["the"]},{"Key":"input (I.e.","Fragments":["has_lowercase_alpha,"]},{"Key":"(I.e. has_lowercase_alpha,","Fragments":["has_alpha,"]},{"Key":"has_lowercase_alpha, has_alpha,","Fragments":["last_non_whitespace_char_is_query,"]},{"Key":"has_alpha, last_non_whitespace_char_is_query,","Fragments":["etc)"]},{"Key":"last_non_whitespace_char_is_query, etc)","Fragments":["simultaneously"]},{"Key":"etc) simultaneously","Fragments":["so"]},{"Key":"simultaneously so","Fragments":["you'd"]},{"Key":"so you'd","Fragments":["still"]},{"Key":"you'd still","Fragments":["have"]},{"Key":"have just","Fragments":["one","been"]},{"Key":"one pass","Fragments":["but"]},{"Key":"pass but","Fragments":["be","the"]},{"Key":"but be","Fragments":["able"]},{"Key":"express the","Fragments":["decision","logic."]},{"Key":"the decision","Fragments":["using"]},{"Key":"decision using","Fragments":["the"]},{"Key":"the booleans","Fragments":["in","-"]},{"Key":"booleans in","Fragments":["place"]},{"Key":"place of","Fragments":["more"]},{"Key":"of more","Fragments":["expensive","common"]},{"Key":"more expensive","Fragments":["find"]},{"Key":"expensive find","Fragments":["calls."]},{"Key":"Using boost","Fragments":["'iequals'","for"]},{"Key":"boost 'iequals'","Fragments":["simplified"]},{"Key":"'iequals' simplified","Fragments":["the"]},{"Key":"simplified the","Fragments":["problem"]},{"Key":"lot. But","Fragments":["I"]},{"Key":"still think","Fragments":["the"]},{"Key":"the solutiion","Fragments":["looks"]},{"Key":"solutiion looks","Fragments":["too"]},{"Key":"looks too","Fragments":["patchy."]},{"Key":"too patchy.","Fragments":["Will"]},{"Key":"patchy. Will","Fragments":["try"]},{"Key":"Will try","Fragments":["to"]},{"Key":"better solution","Fragments":["if"]},{"Key":"solution if","Fragments":["I","it"]},{"Key":"an expert","Fragments":["with","in"]},{"Key":"expert with","Fragments":["regular"]},{"Key":"with regular","Fragments":["expressions"]},{"Key":"expressions so","Fragments":["this"]},{"Key":"so this","Fragments":["was"]},{"Key":"to them.","Fragments":["I"]},{"Key":"also wanted","Fragments":["to"]},{"Key":"avoid using","Fragments":["strtok","boost"]},{"Key":"using strtok","Fragments":["as"]},{"Key":"strtok as","Fragments":["I"]},{"Key":"like its","Fragments":["stateful"]},{"Key":"its stateful","Fragments":["nature"]},{"Key":"stateful nature","Fragments":["and"]},{"Key":"nature and","Fragments":["would"]},{"Key":"my day","Fragments":["to"]},{"Key":"day to","Fragments":["day"]},{"Key":"to day","Fragments":["work."]},{"Key":"have writen","Fragments":["a"]},{"Key":"writen a","Fragments":["simple"]},{"Key":"simple helper","Fragments":["function"]},{"Key":"to normalise","Fragments":["everything"]},{"Key":"normalise everything","Fragments":["to"]},{"Key":"case but","Fragments":["if"]},{"Key":"this I","Fragments":["would","think"]},{"Key":"to know.","Fragments":["I"]},{"Key":"know. I","Fragments":["am"]},{"Key":"am aware","Fragments":["you"]},{"Key":"aware you","Fragments":["can"]},{"Key":"expressions to","Fragments":["do","express"]},{"Key":"do character","Fragments":["replacement"]},{"Key":"character replacement","Fragments":["but"]},{"Key":"replacement but","Fragments":["feel"]},{"Key":"but feel","Fragments":["that"]},{"Key":"little 'heavy'","Fragments":["for"]},{"Key":"'heavy' for","Fragments":["just"]},{"Key":"just lower","Fragments":["casing"]},{"Key":"lower casing","Fragments":["everything."]},{"Key":"Changed to","Fragments":["use"]},{"Key":"the std::transform","Fragments":["algorithm","from"]},{"Key":"std::transform algorithm","Fragments":["to"]},{"Key":"string lower","Fragments":["case."]},{"Key":"Because the","Fragments":["value"]},{"Key":"the std::map","Fragments":["container"]},{"Key":"std::map container","Fragments":["is"]},{"Key":"container is","Fragments":["just"]},{"Key":"int it","Fragments":["can"]},{"Key":"can more","Fragments":["clearly","easily"]},{"Key":"clearly be","Fragments":["updated"]},{"Key":"be updated","Fragments":["using"]},{"Key":"updated using","Fragments":["the"]},{"Key":"the []operator","Fragments":["and"]},{"Key":"[]operator and","Fragments":["++operator"]},{"Key":"and ++operator","Fragments":["rather"]},{"Key":"++operator rather","Fragments":["than"]},{"Key":"than needing","Fragments":["the"]},{"Key":"needing the","Fragments":["insert()"]},{"Key":"the insert()","Fragments":["function."]},{"Key":" @mireya","Fragments":["thank"]},{"Key":"@mireya thank","Fragments":["you"]},{"Key":"the tips.","Fragments":["Submitted"]},{"Key":"tips. Submitted","Fragments":["new"]},{"Key":"Submitted new","Fragments":["version,"]},{"Key":"new version,","Fragments":["looks"]},{"Key":"version, looks","Fragments":["much"]},{"Key":"Using stl","Fragments":["algorithms"]},{"Key":"stl algorithms","Fragments":["instead"]},{"Key":"algorithms instead","Fragments":["of"]},{"Key":"of manual","Fragments":["checks"]},{"Key":"manual checks","Fragments":["(as"]},{"Key":"checks (as","Fragments":["suggested"]},{"Key":"(as suggested","Fragments":["by"]},{"Key":" Kept","Fragments":["this","this"]},{"Key":"Kept this","Fragments":["quite","simple"]},{"Key":"this quite","Fragments":["simple","easy"]},{"Key":"simple and","Fragments":["avoided","compare","limit"]},{"Key":"and avoided","Fragments":["the"]},{"Key":"avoided the","Fragments":["use"]},{"Key":"of iterators","Fragments":["and"]},{"Key":"and went","Fragments":["for"]},{"Key":"that directly","Fragments":["indexes"]},{"Key":"directly indexes","Fragments":["the"]},{"Key":"indexes the","Fragments":["strings."]},{"Key":"strings. The","Fragments":["std::min"]},{"Key":"The std::min","Fragments":["function"]},{"Key":"std::min function","Fragments":["ensures"]},{"Key":"function ensures","Fragments":["we"]},{"Key":"ensures we","Fragments":["don't"]},{"Key":"don't extend","Fragments":["past"]},{"Key":"extend past","Fragments":["the"]},{"Key":"past the","Fragments":["end"]},{"Key":"of either","Fragments":["string"]},{"Key":"either string","Fragments":["and","being"]},{"Key":"we iterate","Fragments":["backwards"]},{"Key":"iterate backwards","Fragments":["for","through"]},{"Key":"backwards for","Fragments":["the"]},{"Key":"The use","Fragments":["of","of","of"]},{"Key":"variables is","Fragments":["generally"]},{"Key":"is generally","Fragments":["discouraged","easier"]},{"Key":"generally discouraged","Fragments":["and"]},{"Key":"discouraged and","Fragments":["the"]},{"Key":"have here","Fragments":["really"]},{"Key":"here really","Fragments":["don't"]},{"Key":"suggest refactoing","Fragments":["them"]},{"Key":"refactoing them","Fragments":["into"]},{"Key":"into function","Fragments":["arguments"]},{"Key":"arguments and","Fragments":["made"]},{"Key":"and made","Fragments":["local","a"]},{"Key":"made local","Fragments":["to"]},{"Key":"the words()","Fragments":["function."]},{"Key":"of GetNextWord()","Fragments":["is"]},{"Key":"GetNextWord() is","Fragments":["similar"]},{"Key":"the std::strtok","Fragments":["function"]},{"Key":"std::strtok function","Fragments":["in"]},{"Key":"is stateful.","Fragments":["You"]},{"Key":"stateful. You","Fragments":["might"]},{"Key":"to investigate","Fragments":["this"]},{"Key":"investigate this","Fragments":["function"]},{"Key":"you haven't","Fragments":["already."]},{"Key":"for trimming.","Fragments":["Also"]},{"Key":"trimming. Also","Fragments":["passes"]},{"Key":"Also passes","Fragments":["a"]},{"Key":"passes a","Fragments":["new"]},{"Key":"test when","Fragments":["a"]},{"Key":"question contains","Fragments":["trailing"]},{"Key":"contains trailing","Fragments":["whitespaces."]},{"Key":"Your function","Fragments":["signature"]},{"Key":"function signature","Fragments":["could"]},{"Key":"signature could","Fragments":["declare"]},{"Key":"could declare","Fragments":["the","your"]},{"Key":"input arguments","Fragments":["as"]},{"Key":"as 'const","Fragments":["std::string"]},{"Key":"'const std::string","Fragments":["\u0026'"]},{"Key":"std::string \u0026'","Fragments":["since"]},{"Key":"\u0026' since","Fragments":["there"]},{"Key":"its inputs.","Fragments":["Avoids"]},{"Key":"inputs. Avoids","Fragments":["a"]},{"Key":"Avoids a","Fragments":["copy"]},{"Key":"both inputs","Fragments":["being"]},{"Key":"inputs being","Fragments":["made"]},{"Key":"being made","Fragments":["from"]},{"Key":"made from","Fragments":["the"]},{"Key":"The recusive","Fragments":["call"]},{"Key":"recusive call","Fragments":["to"]},{"Key":"to swap","Fragments":["the","the"]},{"Key":"swap the","Fragments":["arguments","argument"]},{"Key":"arguments is","Fragments":["an"]},{"Key":"interesting choice.","Fragments":["For"]},{"Key":"choice. For","Fragments":["clarity"]},{"Key":"For clarity","Fragments":["I"]},{"Key":"clarity I","Fragments":["would"]},{"Key":"would separate","Fragments":["this"]},{"Key":"separate this","Fragments":["with"]},{"Key":"this with","Fragments":["a","no"]},{"Key":"second function.","Fragments":["For"]},{"Key":"function. For","Fragments":["example","a"]},{"Key":"example have","Fragments":["your"]},{"Key":"your hamming::compute()","Fragments":["function"]},{"Key":"hamming::compute() function","Fragments":["perform"]},{"Key":"function perform","Fragments":["this","the"]},{"Key":"perform this","Fragments":["check","similar"]},{"Key":"this check","Fragments":["and","as"]},{"Key":"check and","Fragments":["then"]},{"Key":"then call","Fragments":["a","```size()```"]},{"Key":"call a","Fragments":["hamming::compute_impl()","good","function,"]},{"Key":"a hamming::compute_impl()","Fragments":["function"]},{"Key":"hamming::compute_impl() function","Fragments":["with"]},{"Key":"arguments the","Fragments":["correct"]},{"Key":"correct way","Fragments":["around."]},{"Key":"way around.","Fragments":["This"]},{"Key":"around. This","Fragments":["implementation"]},{"Key":"This implementation","Fragments":["function"]},{"Key":"implementation function","Fragments":["then"]},{"Key":"function then","Fragments":["contains"]},{"Key":"then contains","Fragments":["the"]},{"Key":"the 'guts'","Fragments":["of"]},{"Key":"'guts' of","Fragments":["the"]},{"Key":"longest string","Fragments":["in","for"]},{"Key":"realize this","Fragments":["isn't"]},{"Key":"best code","Fragments":["ever"]},{"Key":"code ever","Fragments":["here."]},{"Key":"ever here.","Fragments":["But"]},{"Key":"here. But","Fragments":["I"]},{"Key":"exercise too","Fragments":["much"]},{"Key":"much so","Fragments":["I"]},{"Key":"just kinda","Fragments":["did"]},{"Key":"kinda did","Fragments":["it"]},{"Key":"without putting","Fragments":["in"]},{"Key":"putting in","Fragments":["too"]},{"Key":"in too","Fragments":["much"]},{"Key":"much effort.","Fragments":["Maybe"]},{"Key":"effort. Maybe","Fragments":["I'll"]},{"Key":"I'll come","Fragments":["back"]},{"Key":"back at","Fragments":["some"]},{"Key":"other point","Fragments":["and"]},{"Key":"point and","Fragments":["clean"]},{"Key":"and clean","Fragments":["things"]},{"Key":"clean things","Fragments":["up"]},{"Key":"Hi, thank","Fragments":["you"]},{"Key":"thinking there","Fragments":["would"]},{"Key":"more consise","Fragments":["and"]},{"Key":"consise and","Fragments":["simple"]},{"Key":"simple implementation","Fragments":["of"]},{"Key":"isCaps, and","Fragments":["I"]},{"Key":"correct, removing","Fragments":["the"]},{"Key":"the counts","Fragments":["and"]},{"Key":"counts and","Fragments":["simply"]},{"Key":"and simply","Fragments":["returning"]},{"Key":"if any","Fragments":["lowercase"]},{"Key":"any lowercase","Fragments":["alpha","letters."]},{"Key":"lowercase alpha","Fragments":["character"]},{"Key":"found is","Fragments":["easier"]},{"Key":"find iterators","Fragments":["more"]},{"Key":"iterators more","Fragments":["difficult"]},{"Key":"more difficult","Fragments":["to"]},{"Key":"read than","Fragments":["function"]},{"Key":"than function","Fragments":["calls"]},{"Key":"calls or","Fragments":["indices"]},{"Key":"or indices","Fragments":["also,"]},{"Key":"indices also,","Fragments":["so"]},{"Key":"also, so","Fragments":["I"]},{"Key":"the rbegin()","Fragments":["call"]},{"Key":"rbegin() call","Fragments":["with"]},{"Key":"call with","Fragments":["a"]},{"Key":"readable string","Fragments":["function."]},{"Key":"made use","Fragments":["of"]},{"Key":"of Boost","Fragments":["to_upper_copy"]},{"Key":"Boost to_upper_copy","Fragments":["since"]},{"Key":"to_upper_copy since","Fragments":["boost"]},{"Key":"since boost","Fragments":["is"]},{"Key":"boost is","Fragments":["mandated"]},{"Key":"is mandated","Fragments":["in"]},{"Key":"mandated in","Fragments":["the"]},{"Key":"test description","Fragments":["anyway."]},{"Key":"used braces","Fragments":["even"]},{"Key":"braces even","Fragments":["for"]},{"Key":"even for","Fragments":["1"]},{"Key":"for 1","Fragments":["line"]},{"Key":"1 line","Fragments":["following"]},{"Key":"line following","Fragments":["an"]},{"Key":"following an","Fragments":["if"]},{"Key":"an if","Fragments":["statement"]},{"Key":"statement for","Fragments":["no","more"]},{"Key":"for no","Fragments":["reason","real"]},{"Key":"reason other","Fragments":["than"]},{"Key":"than personal","Fragments":["choice,"]},{"Key":"personal choice,","Fragments":["though"]},{"Key":"choice, though","Fragments":["I"]},{"Key":"though I","Fragments":["don't","notice","think"]},{"Key":"it clutters","Fragments":["the"]},{"Key":"clutters the","Fragments":["code"]},{"Key":"code too","Fragments":["much","for"]},{"Key":"Looking good!","Fragments":["I"]},{"Key":"more suggestions","Fragments":["for"]},{"Key":"for (","Fragments":["std::string::size_type"]},{"Key":"( std::string::size_type","Fragments":["i"]},{"Key":"std::string::size_type i","Fragments":["="]},{"Key":"\u003c phrase.length();","Fragments":["++i"]},{"Key":"phrase.length(); ++i","Fragments":[")"]},{"Key":"= phrase.at(","Fragments":["i"]},{"Key":"phrase.at( i","Fragments":[");"]},{"Key":"for (char","Fragments":["c"]},{"Key":"if (anyExpression","Fragments":["=="]},{"Key":"(anyExpression ==","Fragments":["true)"]},{"Key":"if( containsAlpha","Fragments":["=="]},{"Key":"containsAlpha ==","Fragments":["false"]},{"Key":"== false","Fragments":[")"]},{"Key":"pretty C-like,","Fragments":["and"]},{"Key":"C-like, and","Fragments":["that"]},{"Key":"it slightly","Fragments":["harder"]},{"Key":"slightly harder","Fragments":["to"]},{"Key":"read since","Fragments":["it"]},{"Key":"it spreads","Fragments":["the"]},{"Key":"spreads the","Fragments":["logic"]},{"Key":"logic over","Fragments":["more"]},{"Key":"more lines.","Fragments":["It"]},{"Key":"lines. It","Fragments":["could"]},{"Key":"been possible","Fragments":["to"]},{"Key":"replace some","Fragments":["of"]},{"Key":"the functions:","Fragments":["since"]},{"Key":"functions: since","Fragments":["the"]},{"Key":"specification for","Fragments":["C++"]},{"Key":"for C++","Fragments":["asks"]},{"Key":"C++ asks","Fragments":["for"]},{"Key":"asks for","Fragments":["a"]},{"Key":"a Boost","Fragments":["installation"]},{"Key":"Boost installation","Fragments":["to"]},{"Key":"installation to","Fragments":["run"]},{"Key":"tests, you","Fragments":["could","only","should"]},{"Key":"used boost's","Fragments":["to_upper"]},{"Key":"boost's to_upper","Fragments":["functions"]},{"Key":"to_upper functions","Fragments":["rather"]},{"Key":"functions rather","Fragments":["than"]},{"Key":"than write","Fragments":["your"]},{"Key":"write your","Fragments":["own."]},{"Key":"you separate","Fragments":["the"]},{"Key":"bool and","Fragments":["int"]},{"Key":"and int","Fragments":["comparisons"]},{"Key":"int comparisons","Fragments":["makes"]},{"Key":"comparisons makes","Fragments":["sense"]},{"Key":"but looks","Fragments":["a"]},{"Key":"bit odd","Fragments":["to"]},{"Key":"odd to","Fragments":["someone","me"]},{"Key":"to someone","Fragments":["not"]},{"Key":"someone not","Fragments":["used"]},{"Key":" P.S:","Fragments":["You"]},{"Key":"P.S: You","Fragments":["can't"]},{"Key":"You can't","Fragments":["submit"]},{"Key":"can't submit","Fragments":["more","*.h"]},{"Key":"submit more","Fragments":["than"]},{"Key":"file at","Fragments":["once!"]},{"Key":"at once!","Fragments":["The"]},{"Key":"once! The","Fragments":["first"]},{"Key":"first paragraph","Fragments":["here"]},{"Key":"paragraph here","Fragments":["explains"]},{"Key":"here explains","Fragments":["it:"]},{"Key":"simple algorithm","Fragments":["iterators","consider"]},{"Key":"algorithm iterators","Fragments":["don't"]},{"Key":"iterators don't","Fragments":["simplify"]},{"Key":"don't simplify","Fragments":["the"]},{"Key":"design or","Fragments":["interpretation."]},{"Key":"the ```top```","Fragments":["variable"]},{"Key":"```top``` variable","Fragments":["as"]},{"Key":"variable as","Fragments":["the","```const"]},{"Key":"loop index","Fragments":["to","\"i\","]},{"Key":"simpler. This","Fragments":["way"]},{"Key":"can convert","Fragments":["the"]},{"Key":"convert the","Fragments":["loop"]},{"Key":"strings. Using","Fragments":["```std::min()```"]},{"Key":"Using ```std::min()```","Fragments":["means"]},{"Key":"```std::min()``` means","Fragments":["you"]},{"Key":"will always","Fragments":["index"]},{"Key":"always index","Fragments":["valid"]},{"Key":"index valid","Fragments":["characters"]},{"Key":"valid characters","Fragments":["in"]},{"Key":"feeling your","Fragments":["code"]},{"Key":"code isn't","Fragments":["doing","able"]},{"Key":"isn't doing","Fragments":["what"]},{"Key":"doing what","Fragments":["you"]},{"Key":"is doing.","Fragments":["Calling"]},{"Key":"doing. Calling","Fragments":["```max(s1,s2).size()```"]},{"Key":"Calling ```max(s1,s2).size()```","Fragments":["is"]},{"Key":"```max(s1,s2).size()``` is","Fragments":["not"]},{"Key":"get you","Fragments":["the","started.","going."]},{"Key":"every input.","Fragments":["What"]},{"Key":"input. What","Fragments":["it"]},{"Key":"What it","Fragments":["will"]},{"Key":"is take","Fragments":["the"]},{"Key":"use ```std::basic_string::compare```","Fragments":["and"]},{"Key":"```std::basic_string::compare``` and","Fragments":["return"]},{"Key":"return which","Fragments":["one"]},{"Key":"which one","Fragments":["would","is"]},{"Key":"one would","Fragments":["come","have"]},{"Key":"would come","Fragments":["second"]},{"Key":"come second","Fragments":["in"]},{"Key":"second in","Fragments":["a"]},{"Key":"dictionary order.","Fragments":["So"]},{"Key":"order. So","Fragments":["you"]},{"Key":"would then","Fragments":["call"]},{"Key":"call ```size()```","Fragments":["on"]},{"Key":"```size()``` on","Fragments":["that"]},{"Key":"that string.","Fragments":["Unfortunately"]},{"Key":"string. Unfortunately","Fragments":["the"]},{"Key":"Unfortunately the","Fragments":["test"]},{"Key":"cases are","Fragments":["pretty","true"]},{"Key":"are pretty","Fragments":["simple"]},{"Key":"pretty simple","Fragments":["and"]},{"Key":"compare things","Fragments":["like"]},{"Key":"like \"AAA\"","Fragments":["with"]},{"Key":"\"AAA\" with","Fragments":["\"AAAG\"."]},{"Key":"with \"AAAG\".","Fragments":["So"]},{"Key":"\"AAAG\". So","Fragments":["you"]},{"Key":"will get","Fragments":["a","a"]},{"Key":"4 meaning","Fragments":["you"]},{"Key":"compare at","Fragments":["some"]},{"Key":"point ```s1[4]","Fragments":["!="]},{"Key":"```s1[4] !=","Fragments":["s2[4]```."]},{"Key":"!= s2[4]```.","Fragments":["Indexing"]},{"Key":"s2[4]```. Indexing","Fragments":["```s1```"]},{"Key":"Indexing ```s1```","Fragments":["like"]},{"Key":"```s1``` like","Fragments":["this"]},{"Key":"is ok","Fragments":["as","or"]},{"Key":"ok as","Fragments":["it"]},{"Key":"the 'NULL'","Fragments":["character","character"]},{"Key":"'NULL' character","Fragments":["but","```\\0```"]},{"Key":"character but","Fragments":["will"]},{"Key":"but will","Fragments":["increase","not"]},{"Key":"will increase","Fragments":["the"]},{"Key":"the distance","Fragments":["incorrectly.","is"]},{"Key":"distance incorrectly.","Fragments":["The"]},{"Key":"incorrectly. The","Fragments":["more"]},{"Key":"The more","Fragments":["important"]},{"Key":"more important","Fragments":["issue"]},{"Key":"important issue","Fragments":["is"]},{"Key":"if s2","Fragments":["was"]},{"Key":"s2 was","Fragments":["longer"]},{"Key":"was longer","Fragments":["(eg"]},{"Key":"longer (eg","Fragments":["\"AAAGG\")"]},{"Key":"(eg \"AAAGG\")","Fragments":["it"]},{"Key":"\"AAAGG\") it","Fragments":["causes"]},{"Key":"it causes","Fragments":["you","undefined"]},{"Key":"causes you","Fragments":["to"]},{"Key":"index ```s1[5]","Fragments":["!="]},{"Key":"```s1[5] !=","Fragments":["s2[5]```"]},{"Key":"!= s2[5]```","Fragments":["you"]},{"Key":"s2[5]``` you","Fragments":["get"]},{"Key":"get undefined","Fragments":["behaviour"]},{"Key":"undefined behaviour","Fragments":["because","so"]},{"Key":"behaviour because","Fragments":["of"]},{"Key":"of indexing","Fragments":["a"]},{"Key":"indexing a","Fragments":["string","```std::string```"]},{"Key":"string past","Fragments":["its"]},{"Key":"past its","Fragments":["length."]},{"Key":" From","Fragments":["a"]},{"Key":"From a","Fragments":["performance"]},{"Key":"performance point","Fragments":["of"]},{"Key":"of view","Fragments":["max()","iteration"]},{"Key":"view max()","Fragments":["and"]},{"Key":"max() and","Fragments":["size()"]},{"Key":"and size()","Fragments":["get"]},{"Key":"size() get","Fragments":["called"]},{"Key":"get called","Fragments":["every"]},{"Key":"called every","Fragments":["iteration"]},{"Key":"iteration which","Fragments":["is"]},{"Key":"unnecessary as","Fragments":["the"]},{"Key":"result doesn't","Fragments":["change."]},{"Key":"doesn't change.","Fragments":["You"]},{"Key":"change. You","Fragments":["can"]},{"Key":"can compute","Fragments":["this"]},{"Key":"compute this","Fragments":["once"]},{"Key":"this once","Fragments":["before"]},{"Key":"once before","Fragments":["the","the"]},{"Key":"and simple.","Fragments":["If","I"]},{"Key":"simple. If","Fragments":["you"]},{"Key":"save a","Fragments":["couple"]},{"Key":"characters change","Fragments":["to"]},{"Key":"change to","Fragments":["```++accum```.","that","a","unsigned"]},{"Key":"character ```\\0```","Fragments":["is"]},{"Key":"```\\0``` is","Fragments":["very"]},{"Key":"very C","Fragments":["like"]},{"Key":"C like","Fragments":["and"]},{"Key":"like and","Fragments":["when"]},{"Key":"are dealing","Fragments":["with","with"]},{"Key":"with ```std::string```","Fragments":["classes"]},{"Key":"```std::string``` classes","Fragments":["they"]},{"Key":"classes they","Fragments":["provide"]},{"Key":"they provide","Fragments":["enough"]},{"Key":"provide enough","Fragments":["functions"]},{"Key":"enough functions","Fragments":["that"]},{"Key":"be avoided.","Fragments":["I"]},{"Key":"avoided. I","Fragments":["would"]},{"Key":"suggest changing","Fragments":["to","from"]},{"Key":"changing to","Fragments":["use"]},{"Key":"length function","Fragments":["or"]},{"Key":"function or","Fragments":["iterators."]},{"Key":"The comparison","Fragments":["of"]},{"Key":"comparison of","Fragments":["the","string"]},{"Key":"strings at","Fragments":["the"]},{"Key":"shortest one","Fragments":["might"]},{"Key":"one might","Fragments":["not"]},{"Key":"not work.","Fragments":["a"]},{"Key":"work. a","Fragments":["comparison"]},{"Key":"a comparison","Fragments":["of"]},{"Key":"string objects","Fragments":["uses"]},{"Key":"objects uses","Fragments":["```std::basic_string::compare```"]},{"Key":"uses ```std::basic_string::compare```","Fragments":["which"]},{"Key":"```std::basic_string::compare``` which","Fragments":["compares"]},{"Key":"which compares","Fragments":["characters"]},{"Key":"compares characters","Fragments":["not"]},{"Key":"characters not","Fragments":["the"]},{"Key":"of strings.","Fragments":["You"]},{"Key":"strings. You","Fragments":["will"]},{"Key":"You will","Fragments":["want","have"]},{"Key":"will want","Fragments":["to"]},{"Key":"change this","Fragments":["to"]},{"Key":"to ```strand2.length()","Fragments":["\u003c"]},{"Key":"```strand2.length() \u003c","Fragments":["strand1.length()```"]},{"Key":"that indexing","Fragments":["a"]},{"Key":"a ```std::string```","Fragments":["with","object"]},{"Key":"```std::string``` with","Fragments":["its"]},{"Key":"length returned","Fragments":["NULL."]},{"Key":"returned NULL.","Fragments":["I"]},{"Key":"NULL. I","Fragments":["thought"]},{"Key":"thought an","Fragments":["exception"]},{"Key":"exception would","Fragments":["occur."]},{"Key":"would occur.","Fragments":["Thanks"]},{"Key":"occur. Thanks","Fragments":["for"]},{"Key":"In addition","Fragments":["you","to"]},{"Key":"addition you","Fragments":["could"]},{"Key":"your ```str2Length```","Fragments":["variable"]},{"Key":"```str2Length``` variable","Fragments":["as"]},{"Key":"as ```const","Fragments":["size_t"]},{"Key":"```const size_t","Fragments":["str2Length```"]},{"Key":"size_t str2Length```","Fragments":["since"]},{"Key":"str2Length``` since","Fragments":["it"]},{"Key":"- Continued","Fragments":["using"]},{"Key":"Continued using","Fragments":["xpressive"]},{"Key":"using xpressive","Fragments":["lib"]},{"Key":"xpressive lib","Fragments":["with"]},{"Key":"lib with","Fragments":["this"]},{"Key":"one, this","Fragments":["time"]},{"Key":"time using","Fragments":["the","regex","a"]},{"Key":"regex iterator","Fragments":["to"]},{"Key":"iterator to","Fragments":["loop","test","traverse"]},{"Key":"- Made","Fragments":["the"]},{"Key":"Made the","Fragments":["choice"]},{"Key":"the choice","Fragments":["to"]},{"Key":"choice to","Fragments":["copy"]},{"Key":"all lowercase","Fragments":["before"]},{"Key":"lowercase before","Fragments":["checking"]},{"Key":"for matches.","Fragments":["I"]},{"Key":"matches. I","Fragments":["could"]},{"Key":"used an","Fragments":["xpr::icase","enum","unsigned"]},{"Key":"an xpr::icase","Fragments":["to"]},{"Key":"xpr::icase to","Fragments":["search"]},{"Key":"search through","Fragments":["the"]},{"Key":"string without","Fragments":["changing"]},{"Key":"without changing","Fragments":["it"]},{"Key":"changing it","Fragments":["but"]},{"Key":"it but","Fragments":["I"]},{"Key":"have still","Fragments":["needed"]},{"Key":"still needed","Fragments":["to"]},{"Key":"do some","Fragments":["manipulation"]},{"Key":"some manipulation","Fragments":["to"]},{"Key":"manipulation to","Fragments":["populate"]},{"Key":"to populate","Fragments":["the"]},{"Key":"populate the","Fragments":["map"]},{"Key":"map correctly.","Fragments":["I"]},{"Key":"correctly. I","Fragments":["figured"]},{"Key":"to boost::algorithm::to_lower","Fragments":["was"]},{"Key":"boost::algorithm::to_lower was","Fragments":["cheapest"]},{"Key":"was cheapest","Fragments":["option."]},{"Key":"cheapest option.","Fragments":["Curious"]},{"Key":"option. Curious","Fragments":["to"]},{"Key":"Curious to","Fragments":["see"]},{"Key":"see other","Fragments":["creative"]},{"Key":"other creative","Fragments":["ways."]},{"Key":"Converted from","Fragments":["static"]},{"Key":"from static","Fragments":["class"]},{"Key":"class variables","Fragments":["to"]},{"Key":"to namespace.","Fragments":["Though"]},{"Key":"namespace. Though","Fragments":["it"]},{"Key":"Though it","Fragments":["makes"]},{"Key":"makes little","Fragments":["difference"]},{"Key":"little difference","Fragments":["for"]},{"Key":"difference for","Fragments":["this"]},{"Key":"example I","Fragments":["felt"]},{"Key":"felt influenced","Fragments":["by"]},{"Key":"influenced by","Fragments":["a"]},{"Key":"great stack","Fragments":["overflow"]},{"Key":"version might","Fragments":["be"]},{"Key":"be seen","Fragments":["as"]},{"Key":"seen as","Fragments":["a"]},{"Key":"a simplification","Fragments":["of"]},{"Key":"simplification of","Fragments":["iteration"]},{"Key":"of iteration","Fragments":["#2"]},{"Key":"iteration #2","Fragments":["since"]},{"Key":"#2 since","Fragments":["it"]},{"Key":"a c-style","Fragments":["for"]},{"Key":"c-style for","Fragments":["loop,"]},{"Key":"and descends","Fragments":["from"]},{"Key":"descends from","Fragments":["top-1"]},{"Key":"from top-1","Fragments":["to"]},{"Key":"top-1 to","Fragments":["0"]},{"Key":"to 0","Fragments":["rather"]},{"Key":"than from","Fragments":["0"]},{"Key":"from 0","Fragments":["to"]},{"Key":"really better,","Fragments":["but,"]},{"Key":"better, but,","Fragments":["well..."]},{"Key":"but, well...","Fragments":["possibly."]},{"Key":"well... possibly.","Fragments":[";)"]},{"Key":"Now we've","Fragments":["got"]},{"Key":"we've got","Fragments":["the"]},{"Key":"got the","Fragments":["2nd","framework"]},{"Key":"2nd and","Fragments":["3rd"]},{"Key":"and 3rd","Fragments":["iteration"]},{"Key":"3rd iteration","Fragments":["for"]},{"Key":"Very nice.","Fragments":["I"]},{"Key":"nice. I","Fragments":["also"]},{"Key":"the to_lower_copy.","Fragments":["Probably"]},{"Key":"to_lower_copy. Probably","Fragments":["get"]},{"Key":"Probably get","Fragments":["a"]},{"Key":"little performance","Fragments":["boost"]},{"Key":"performance boost","Fragments":["by"]},{"Key":"boost by","Fragments":["performing"]},{"Key":"by performing","Fragments":["the"]},{"Key":"performing the","Fragments":["lowercase"]},{"Key":"the lowercase","Fragments":["transformation"]},{"Key":"lowercase transformation","Fragments":["once"]},{"Key":"transformation once","Fragments":["before"]},{"Key":"that seemed","Fragments":["as","unneccessary."]},{"Key":"seemed as","Fragments":["though"]},{"Key":"as though","Fragments":["it"]},{"Key":"though it","Fragments":["would","does"]},{"Key":"be overkill.","Fragments":["The"]},{"Key":"overkill. The","Fragments":["next"]},{"Key":"next logical","Fragments":["step"]},{"Key":"logical step","Fragments":["was"]},{"Key":"step was","Fragments":["a"]},{"Key":"a functor,","Fragments":["but"]},{"Key":"functor, but","Fragments":["I"]},{"Key":"prefer callbacks","Fragments":["and"]},{"Key":"callbacks and","Fragments":["function"]},{"Key":"and function","Fragments":["pointers."]},{"Key":"function pointers.","Fragments":["I"]},{"Key":"pointers. I","Fragments":["finally"]},{"Key":"I finally","Fragments":["settled"]},{"Key":"finally settled","Fragments":["on"]},{"Key":"settled on","Fragments":["a"]},{"Key":"named lambda","Fragments":["inside"]},{"Key":"lambda inside","Fragments":["a"]},{"Key":"scope operator","Fragments":["usage."]},{"Key":"a `for","Fragments":["(auto"]},{"Key":"`for (auto","Fragments":["c","i"]},{"Key":"(auto c","Fragments":[":"]},{"Key":": str)`","Fragments":["iteration"]},{"Key":"str)` iteration","Fragments":["method,"]},{"Key":"iteration method,","Fragments":["but"]},{"Key":"had already","Fragments":["written"]},{"Key":"already written","Fragments":["the"]},{"Key":"written the","Fragments":["code"]},{"Key":"code for","Fragments":["pointer","the"]},{"Key":"for pointer","Fragments":["work."]},{"Key":"pointer work.","Fragments":["I"]},{"Key":"work. I","Fragments":["could"]},{"Key":"go back,","Fragments":["make"]},{"Key":"back, make","Fragments":["the"]},{"Key":"string `const`","Fragments":["and"]},{"Key":"`const` and","Fragments":["have"]},{"Key":"other flags","Fragments":["to"]},{"Key":"flags to","Fragments":["determine"]},{"Key":"if non-whitespace","Fragments":["characters"]},{"Key":"non-whitespace characters","Fragments":["were"]},{"Key":"were found,","Fragments":["but"]},{"Key":"found, but","Fragments":["I"]},{"Key":"of working","Fragments":["variables"]},{"Key":"working variables","Fragments":["to"]},{"Key":" Regular","Fragments":["expressions"]},{"Key":"Regular expressions","Fragments":["did"]},{"Key":"expressions did","Fragments":["not"]},{"Key":"not seem","Fragments":["like","like","to"]},{"Key":"fit when","Fragments":["I"]},{"Key":"at descending","Fragments":["using"]},{"Key":"descending using","Fragments":["a"]},{"Key":"not convinced","Fragments":["it","they"]},{"Key":"convinced it","Fragments":["simplifies"]},{"Key":"simplifies the","Fragments":["code."]},{"Key":" Nevertheless,","Fragments":["I'll"]},{"Key":"Nevertheless, I'll","Fragments":["upload"]},{"Key":"upload it","Fragments":["for","soon."]},{"Key":"This feels","Fragments":["like"]},{"Key":"best implementation","Fragments":["as"]},{"Key":"as i","Fragments":["feel"]},{"Key":"i feel","Fragments":["the"]},{"Key":"the erasing","Fragments":["characters"]},{"Key":"erasing characters","Fragments":["from"]},{"Key":"characters from","Fragments":["the"]},{"Key":"word being","Fragments":["checked"]},{"Key":"being checked","Fragments":["could"]},{"Key":"checked could","Fragments":["be"]},{"Key":"be improved.","Fragments":["I"]},{"Key":"improved. I","Fragments":["decided"]},{"Key":"go down","Fragments":["this","a"]},{"Key":"down this","Fragments":["path"]},{"Key":"this path","Fragments":["to"]},{"Key":"to experiment","Fragments":["with"]},{"Key":"experiment with","Fragments":["lambdas,"]},{"Key":"with lambdas,","Fragments":["but"]},{"Key":"lambdas, but","Fragments":["again"]},{"Key":"but again","Fragments":["the"]},{"Key":"again the","Fragments":["```std::string.find()```"]},{"Key":"the ```std::string.find()```","Fragments":["followed"]},{"Key":"```std::string.find()``` followed","Fragments":["by"]},{"Key":"by ```std::string.erase()```","Fragments":["feels"]},{"Key":"```std::string.erase()``` feels","Fragments":["inefficient."]},{"Key":"declare ```lower_str```","Fragments":["i"]},{"Key":"```lower_str``` i","Fragments":["wanted"]},{"Key":"i wanted","Fragments":["to"]},{"Key":"to preallocate","Fragments":["the"]},{"Key":"preallocate the","Fragments":["size"]},{"Key":"size and","Fragments":["just"]},{"Key":"just chose","Fragments":["to"]},{"Key":"to pad","Fragments":["with"]},{"Key":"pad with","Fragments":["the"]},{"Key":"NULL character.","Fragments":["Calling"]},{"Key":"character. Calling","Fragments":["```std::string.reserve()```"]},{"Key":"Calling ```std::string.reserve()```","Fragments":["isn't"]},{"Key":"```std::string.reserve()``` isn't","Fragments":["enough"]},{"Key":"isn't enough","Fragments":["because"]},{"Key":"enough because","Fragments":["the"]},{"Key":"to ```std::transform```","Fragments":["needs"]},{"Key":"```std::transform``` needs","Fragments":["the"]},{"Key":"needs the","Fragments":["string"]},{"Key":"actually have","Fragments":["a"]},{"Key":"a length,","Fragments":["not"]},{"Key":"length, not","Fragments":["just","just"]},{"Key":"The basic","Fragments":["algorithm:"]},{"Key":"basic algorithm:","Fragments":["Normalize"]},{"Key":"algorithm: Normalize","Fragments":["the"]},{"Key":"Normalize the","Fragments":["target"]},{"Key":"the target","Fragments":["string","word."]},{"Key":"target string","Fragments":["to"]},{"Key":"case. Then","Fragments":["create"]},{"Key":"Then create","Fragments":["a"]},{"Key":"a mapping","Fragments":["of"]},{"Key":"mapping of","Fragments":["each"]},{"Key":"each character,","Fragments":["to"]},{"Key":"character, to","Fragments":["how"]},{"Key":"how many","Fragments":["times"]},{"Key":"times that","Fragments":["character"]},{"Key":"character appears","Fragments":["in"]},{"Key":"target word.","Fragments":["Next,"]},{"Key":"word. Next,","Fragments":["for"]},{"Key":"Next, for","Fragments":["each"]},{"Key":"each trial","Fragments":["word,"]},{"Key":"trial word,","Fragments":["normalize"]},{"Key":"word, normalize","Fragments":["and"]},{"Key":"normalize and","Fragments":["build"]},{"Key":"and build","Fragments":["a"]},{"Key":"similar mapping.","Fragments":["Then"]},{"Key":"mapping. Then","Fragments":["we"]},{"Key":"Then we","Fragments":["just"]},{"Key":"that each","Fragments":["mapping"]},{"Key":"each mapping","Fragments":["from"]},{"Key":"mapping from","Fragments":["the","the"]},{"Key":"the trial","Fragments":["word","string","string,","string"]},{"Key":"trial word","Fragments":["fits"]},{"Key":"word fits","Fragments":["within"]},{"Key":"fits within","Fragments":["the"]},{"Key":"same mapping","Fragments":["from"]},{"Key":"the primary","Fragments":["word."]},{"Key":"the bucketizing","Fragments":["approach"]},{"Key":"bucketizing approach","Fragments":["because"]},{"Key":"approach because","Fragments":["it"]},{"Key":"it extends","Fragments":["well"]},{"Key":"extends well","Fragments":["to","into"]},{"Key":"other problem","Fragments":["areas"]},{"Key":"problem areas","Fragments":["that"]},{"Key":"areas that","Fragments":["sorting"]},{"Key":"that sorting","Fragments":["the"]},{"Key":"sorting the","Fragments":["characters"]},{"Key":"characters doesn't.","Fragments":["For"]},{"Key":"doesn't. For","Fragments":["example,"]},{"Key":"example, it","Fragments":["becomes","looks"]},{"Key":"it becomes","Fragments":["trivial"]},{"Key":"becomes trivial","Fragments":["to"]},{"Key":"to accept","Fragments":["short-anagrams"]},{"Key":"accept short-anagrams","Fragments":["(anagrams"]},{"Key":"short-anagrams (anagrams","Fragments":["where"]},{"Key":"(anagrams where","Fragments":["the"]},{"Key":"trial string","Fragments":["is","cannot"]},{"Key":"the primary),","Fragments":["and"]},{"Key":"primary), and","Fragments":["it"]},{"Key":"also extends","Fragments":["well"]},{"Key":"well into","Fragments":["the"]},{"Key":"of discovering","Fragments":["what"]},{"Key":"discovering what","Fragments":["word"]},{"Key":"what word","Fragments":["of"]},{"Key":"word of","Fragments":["a"]},{"Key":"given length","Fragments":["from"]},{"Key":"length from","Fragments":["a"]},{"Key":"dictionary has","Fragments":["the"]},{"Key":"letters that","Fragments":["will"]},{"Key":"will spell","Fragments":["the"]},{"Key":"spell the","Fragments":["most"]},{"Key":"most other","Fragments":["words"]},{"Key":"other words","Fragments":["(of"]},{"Key":"words (of","Fragments":["less"]},{"Key":"(of less","Fragments":["or"]},{"Key":"less or","Fragments":["equal"]},{"Key":"or equal","Fragments":["size)"]},{"Key":"equal size)","Fragments":["from"]},{"Key":"size) from","Fragments":["the"]},{"Key":" Essentially","Fragments":["this"]},{"Key":"Essentially this","Fragments":["approach"]},{"Key":"this approach","Fragments":["sees"]},{"Key":"approach sees","Fragments":["if"]},{"Key":"sees if","Fragments":["one"]},{"Key":"one histogram","Fragments":["fits"]},{"Key":"histogram fits","Fragments":["into"]},{"Key":"fits into","Fragments":["another","the"]},{"Key":"into another","Fragments":["histogram."]},{"Key":"hand, for","Fragments":["just"]},{"Key":"just solving","Fragments":["this"]},{"Key":"solving this","Fragments":["specific"]},{"Key":"this specific","Fragments":["problem,","case"]},{"Key":"specific problem,","Fragments":["compared"]},{"Key":"problem, compared","Fragments":["to"]},{"Key":"to sorting","Fragments":["and"]},{"Key":"sorting and","Fragments":["walking"]},{"Key":"and walking","Fragments":["the"]},{"Key":"walking the","Fragments":["pairs,"]},{"Key":"the pairs,","Fragments":["this"]},{"Key":"pairs, this","Fragments":["is"]},{"Key":"is needlessly","Fragments":["complex."]},{"Key":"needlessly complex.","Fragments":[";)"]},{"Key":"complex. ;)","Fragments":["But"]},{"Key":";) But","Fragments":["it"]},{"Key":"I checked","Fragments":["out"]},{"Key":"checked out","Fragments":["the"]},{"Key":"the available","Fragments":["boost"]},{"Key":"available boost","Fragments":["string"]},{"Key":"string algo","Fragments":["library"]},{"Key":"algo library","Fragments":["and"]},{"Key":"library and","Fragments":["there","even"]},{"Key":"some very","Fragments":["useful"]},{"Key":"very useful","Fragments":["methods."]},{"Key":"useful methods.","Fragments":["However"]},{"Key":"methods. However","Fragments":["many"]},{"Key":"However many","Fragments":["of"]},{"Key":"them are","Fragments":["not"]},{"Key":"not suitable","Fragments":["for"]},{"Key":"suitable for","Fragments":["this"]},{"Key":"this application.","Fragments":["For"]},{"Key":"application. For","Fragments":["example"]},{"Key":"example my","Fragments":["function"]},{"Key":"my function","Fragments":["```isupper_str()```"]},{"Key":"function ```isupper_str()```","Fragments":["is"]},{"Key":"```isupper_str()``` is","Fragments":["not"]},{"Key":"as ```boost::to_upper```.","Fragments":["Mine"]},{"Key":"```boost::to_upper```. Mine","Fragments":["checks"]},{"Key":"Mine checks","Fragments":["if"]},{"Key":"all upper","Fragments":["case"]},{"Key":"case rather","Fragments":["than"]},{"Key":"than perform","Fragments":["any"]},{"Key":"perform any","Fragments":["kind"]},{"Key":"of conversion.","Fragments":["The"]},{"Key":"conversion. The","Fragments":["algorithm"]},{"Key":"algorithm ```boost::all()```","Fragments":["might"]},{"Key":"```boost::all()``` might","Fragments":["be"]},{"Key":"be interesting","Fragments":["combined"]},{"Key":"interesting combined","Fragments":["with"]},{"Key":"combined with","Fragments":["some","alphas"]},{"Key":"with some","Fragments":["lambdas"]},{"Key":"some lambdas","Fragments":["however."]},{"Key":"lambdas however.","Fragments":["I"]},{"Key":"however. I","Fragments":["also"]},{"Key":"also should","Fragments":["have"]},{"Key":"have mentioned","Fragments":["I"]},{"Key":"mentioned I","Fragments":["tried"]},{"Key":"using boost","Fragments":["and","because"]},{"Key":"go with","Fragments":["standard","one"]},{"Key":"with standard","Fragments":["algorithms"]},{"Key":"standard algorithms","Fragments":["only"]},{"Key":"algorithms only","Fragments":["for"]},{"Key":"structure it","Fragments":["is"]},{"Key":"layout I","Fragments":["am"]},{"Key":"am used","Fragments":["to"]},{"Key":"to so","Fragments":["it's"]},{"Key":"so it's","Fragments":["good","just","hard"]},{"Key":"to hear","Fragments":["feedback"]},{"Key":"hear feedback","Fragments":["about"]},{"Key":"how others","Fragments":["feel"]},{"Key":"others feel","Fragments":["about"]},{"Key":"feel about","Fragments":["it."]},{"Key":"about it.","Fragments":["It"]},{"Key":"it. It","Fragments":["has"]},{"Key":"It has","Fragments":["served","a"]},{"Key":"has served","Fragments":["me"]},{"Key":"served me","Fragments":["well"]},{"Key":"me well","Fragments":["when"]},{"Key":"well when","Fragments":["the","the"]},{"Key":"logic becomes","Fragments":["very"]},{"Key":"becomes very","Fragments":["complicated."]},{"Key":"you construct","Fragments":["the"]},{"Key":"construct the","Fragments":["verses"]},{"Key":"the verses","Fragments":["instead","of","as"]},{"Key":"verses instead","Fragments":["of"]},{"Key":"just saying","Fragments":["them."]},{"Key":"saying them.","Fragments":["Also"]},{"Key":"Also your","Fragments":["comments"]},{"Key":"your comments","Fragments":["are"]},{"Key":"comments are","Fragments":["hilarious.","regarding"]},{"Key":"really clean,","Fragments":["but"]},{"Key":"clean, but","Fragments":["I","it"]},{"Key":"help readability","Fragments":["to"]},{"Key":"the features","Fragments":["of"]},{"Key":"C++ string","Fragments":["library"]},{"Key":"string library","Fragments":["(like"]},{"Key":"library (like","Fragments":["iterators)."]},{"Key":"The processing","Fragments":["of"]},{"Key":"processing of","Fragments":["the"]},{"Key":"word ```m_anagram```","Fragments":["could"]},{"Key":"```m_anagram``` could","Fragments":["be"]},{"Key":"be moved","Fragments":["to"]},{"Key":"only needs","Fragments":["to"]},{"Key":"be calculated","Fragments":["once,"]},{"Key":"calculated once,","Fragments":["rather"]},{"Key":"once, rather","Fragments":["than"]},{"Key":"than on","Fragments":["every"]},{"Key":"on every","Fragments":["call"]},{"Key":"every call","Fragments":["to"]},{"Key":"solution and","Fragments":["how","an","nice","find","explanation.","there's"]},{"Key":"you end","Fragments":["up"]},{"Key":"up comparing","Fragments":["'histograms'."]},{"Key":"comparing 'histograms'.","Fragments":["Should"]},{"Key":"'histograms'. Should","Fragments":["your"]},{"Key":"your check","Fragments":["of"]},{"Key":"check of","Fragments":["the"]},{"Key":"character counts","Fragments":["```found-\u003esecond"]},{"Key":"counts ```found-\u003esecond","Fragments":["\u003c"]},{"Key":"```found-\u003esecond \u003c","Fragments":["s.second```"]},{"Key":"\u003c s.second```","Fragments":["really"]},{"Key":"s.second``` really","Fragments":["be"]},{"Key":"really be","Fragments":["an"]},{"Key":"an less-than.","Fragments":["I"]},{"Key":"less-than. I","Fragments":["think"]},{"Key":"an inequality","Fragments":["```!=```."]},{"Key":"inequality ```!=```.","Fragments":["With"]},{"Key":"```!=```. With","Fragments":["yours"]},{"Key":"With yours","Fragments":["the"]},{"Key":"yours the","Fragments":["input"]},{"Key":"input 'abc'","Fragments":["is"]},{"Key":"'abc' is","Fragments":["anagram","reported"]},{"Key":"is anagram","Fragments":["of"]},{"Key":"Another interesting","Fragments":["implementation"]},{"Key":"interesting implementation","Fragments":["using"]},{"Key":"implementation using","Fragments":["```std::is_permutation()```"]},{"Key":"using ```std::is_permutation()```","Fragments":["after"]},{"Key":"```std::is_permutation()``` after","Fragments":["seeing"]},{"Key":"seeing some","Fragments":["other"]},{"Key":"people's solutions.","Fragments":["This"]},{"Key":"solutions. This","Fragments":["looks"]},{"Key":"nice concise","Fragments":["solution"]},{"Key":"concise solution","Fragments":["however"]},{"Key":"solution however","Fragments":["is_permutation","thanks"]},{"Key":"however is_permutation","Fragments":["has"]},{"Key":"is_permutation has","Fragments":["worst"]},{"Key":"has worst","Fragments":["case"]},{"Key":"case complexity","Fragments":["of"]},{"Key":"of ```O(N^2)```.","Fragments":["Which"]},{"Key":"```O(N^2)```. Which","Fragments":["might"]},{"Key":"Which might","Fragments":["be"]},{"Key":"be worst","Fragments":["than"]},{"Key":"worst than","Fragments":["the"]},{"Key":"sorted string","Fragments":["comparison","method"]},{"Key":"string comparison","Fragments":["method."]},{"Key":"solution performs","Fragments":["case"]},{"Key":"performs case","Fragments":["sensitive"]},{"Key":"case sensitive","Fragments":["checking"]},{"Key":"sensitive checking","Fragments":["for"]},{"Key":"for anagrams","Fragments":["where"]},{"Key":"anagrams where","Fragments":["they"]},{"Key":"they really","Fragments":["should","work"]},{"Key":"really should","Fragments":["be"]},{"Key":"be insensitive.","Fragments":["Also"]},{"Key":"insensitive. Also","Fragments":["you"]},{"Key":"have opportunities","Fragments":["to"]},{"Key":"opportunities to","Fragments":["skip"]},{"Key":"skip processing","Fragments":["some"]},{"Key":"processing some","Fragments":["words"]},{"Key":"words by","Fragments":["checking"]},{"Key":"by checking","Fragments":["lengths","its"]},{"Key":"checking lengths","Fragments":["(ie"]},{"Key":"lengths (ie","Fragments":["strings"]},{"Key":"(ie strings","Fragments":["could"]},{"Key":"strings could","Fragments":["only"]},{"Key":"could only","Fragments":["be"]},{"Key":"only be","Fragments":["anagrams"]},{"Key":"be anagrams","Fragments":["if"]},{"Key":"anagrams if","Fragments":["they"]},{"Key":"second loop","Fragments":["is"]},{"Key":"is iterating","Fragments":["from"]},{"Key":"iterating from","Fragments":["i=0"]},{"Key":"from i=0","Fragments":["to"]},{"Key":"i=0 to","Fragments":["i"]},{"Key":"to i","Fragments":["\u003c"]},{"Key":"\u003c word.length().","Fragments":["I"]},{"Key":"word.length(). I","Fragments":["think"]},{"Key":"be going","Fragments":["from","with"]},{"Key":"going from","Fragments":["[0..MAX_CHARS-1]","java"]},{"Key":"from [0..MAX_CHARS-1]","Fragments":["to"]},{"Key":"[0..MAX_CHARS-1] to","Fragments":["compare"]},{"Key":"whole arrays.","Fragments":["Also"]},{"Key":"arrays. Also","Fragments":["you"]},{"Key":"will need","Fragments":["to"]},{"Key":"to initialise","Fragments":["the"]},{"Key":"initialise the","Fragments":["arrays"]},{"Key":"the arrays","Fragments":["to"]},{"Key":"arrays to","Fragments":["something"]},{"Key":"something known","Fragments":["like"]},{"Key":"known like","Fragments":["0"]},{"Key":"like 0","Fragments":["or"]},{"Key":"0 or","Fragments":["they"]},{"Key":"or they","Fragments":["will"]},{"Key":"not match.","Fragments":["I"]},{"Key":"match. I","Fragments":["suggest"]},{"Key":"new ```std::array```","Fragments":["container"]},{"Key":"```std::array``` container","Fragments":["to"]},{"Key":"container to","Fragments":["make","hold"]},{"Key":"good. I'm","Fragments":["wondering,"]},{"Key":"I'm wondering,","Fragments":["though,"]},{"Key":"wondering, though,","Fragments":["why"]},{"Key":"though, why","Fragments":["you"]},{"Key":"didn't put","Fragments":["`auto"]},{"Key":"put `auto","Fragments":["itr"]},{"Key":"`auto itr","Fragments":["="]},{"Key":"itr =","Fragments":["str.begin();`"]},{"Key":"= str.begin();`","Fragments":["as"]},{"Key":"str.begin();` as","Fragments":["the"]},{"Key":"first expression","Fragments":["in"]},{"Key":"expression in","Fragments":["the"]},{"Key":"Also, not","Fragments":["sure"]},{"Key":"were going","Fragments":["for"]},{"Key":"going for","Fragments":["a","fewest"]},{"Key":"a \"highly","Fragments":["efficient\""]},{"Key":"\"highly efficient\"","Fragments":["implementation,"]},{"Key":"efficient\" implementation,","Fragments":["but"]},{"Key":"seems plausible","Fragments":["that"]},{"Key":"plausible that","Fragments":["you"]},{"Key":"might since","Fragments":["you"]},{"Key":"you seem","Fragments":["to"]},{"Key":"going with","Fragments":["a"]},{"Key":"single pass-through","Fragments":["the"]},{"Key":"pass-through the","Fragments":["string"]},{"Key":"your for-loop.","Fragments":["In"]},{"Key":"for-loop. In","Fragments":["that"]},{"Key":"In that","Fragments":["case,","algorithm"]},{"Key":"that case,","Fragments":["you"]},{"Key":"avoid `str.erase`,","Fragments":["as"]},{"Key":"`str.erase`, as","Fragments":["it"]},{"Key":"probably has","Fragments":["to"]},{"Key":" @elmo","Fragments":["What"]},{"Key":"@elmo What","Fragments":["does"]},{"Key":"What does","Fragments":["the"]},{"Key":"the \"us\"","Fragments":["in"]},{"Key":"\"us\" in","Fragments":["listus"]},{"Key":"in listus","Fragments":["and"]},{"Key":"listus and","Fragments":["complistus"]},{"Key":"and complistus","Fragments":["mean?"]},{"Key":"complistus mean?","Fragments":["Could"]},{"Key":"mean? Could","Fragments":["these"]},{"Key":"Could these","Fragments":["variables"]},{"Key":"these variables","Fragments":["have"]},{"Key":"variables have","Fragments":["better"]},{"Key":"have better","Fragments":["names?"]},{"Key":"your matches","Fragments":["method."]},{"Key":"matches method.","Fragments":["It's"]},{"Key":"method. It's","Fragments":["so"]},{"Key":"It's so","Fragments":["easy"]},{"Key":"read. The","Fragments":["only"]},{"Key":"nitpick I","Fragments":["can"]},{"Key":"can think","Fragments":["of"]},{"Key":"of is","Fragments":["that"]},{"Key":"run boost::to_lower_copy(subject_)","Fragments":["and"]},{"Key":"boost::to_lower_copy(subject_) and","Fragments":["key_.length()"]},{"Key":"and key_.length()","Fragments":["every"]},{"Key":"key_.length() every","Fragments":["time"]},{"Key":"check a","Fragments":["word."]},{"Key":"a word.","Fragments":["The"]},{"Key":"word. The","Fragments":["good"]},{"Key":"The good","Fragments":["part"]},{"Key":"good part","Fragments":["of"]},{"Key":"to remember","Fragments":["many","to"]},{"Key":"remember many","Fragments":["extra"]},{"Key":"many extra","Fragments":["variables"]},{"Key":"extra variables","Fragments":["like"]},{"Key":"variables like","Fragments":["subject_lower_."]},{"Key":"like subject_lower_.","Fragments":["On"]},{"Key":"subject_lower_. On","Fragments":["the"]},{"Key":"hand, the","Fragments":["case"]},{"Key":"of subject_","Fragments":["isn't"]},{"Key":"subject_ isn't","Fragments":["relevant"]},{"Key":"isn't relevant","Fragments":["to"]},{"Key":"relevant to","Fragments":["the"]},{"Key":"the test,","Fragments":["so"]},{"Key":"test, so","Fragments":["you"]},{"Key":"could initialize","Fragments":["it"]},{"Key":"initialize it","Fragments":["as"]},{"Key":"all lower","Fragments":["case."]},{"Key":"case. That","Fragments":["being"]},{"Key":"That being","Fragments":["said,","said"]},{"Key":"being said,","Fragments":["great"]},{"Key":"said, great","Fragments":["job."]},{"Key":"great job.","Fragments":["I"]},{"Key":"job. I","Fragments":["like"]},{"Key":"like reading","Fragments":["your"]},{"Key":" @elwyn","Fragments":["my"]},{"Key":"@elwyn my","Fragments":["apologies"]},{"Key":"my apologies","Fragments":["your"]},{"Key":"apologies your","Fragments":["solution"]},{"Key":"is correct.","Fragments":["I","However"]},{"Key":"correct. I","Fragments":["was"]},{"Key":"expecting to","Fragments":["see"]},{"Key":"the bucket","Fragments":["counts"]},{"Key":"bucket counts","Fragments":["tested"]},{"Key":"counts tested","Fragments":["with"]},{"Key":"tested with","Fragments":["```=="]},{"Key":"with ```==","Fragments":["or"]},{"Key":"```== or","Fragments":["!=```."]},{"Key":"or !=```.","Fragments":["Seeing"]},{"Key":"!=```. Seeing","Fragments":["the"]},{"Key":"Seeing the","Fragments":["less"]},{"Key":"the less","Fragments":["than"]},{"Key":"than comparison","Fragments":["gave"]},{"Key":"comparison gave","Fragments":["me"]},{"Key":"gave me","Fragments":["a"]},{"Key":"feeling something","Fragments":["could"]},{"Key":"something could","Fragments":["be"]},{"Key":"be missed","Fragments":["with"]},{"Key":"missed with","Fragments":["inputs"]},{"Key":"with inputs","Fragments":["like","outside"]},{"Key":"inputs like","Fragments":["I"]},{"Key":"I described","Fragments":["or"]},{"Key":"described or","Fragments":["like"]},{"Key":"or like","Fragments":["('abb','aab')"]},{"Key":"like ('abb','aab')","Fragments":["but"]},{"Key":"('abb','aab') but","Fragments":["your"]},{"Key":"but your","Fragments":["solution"]},{"Key":"solution handles","Fragments":["this."]},{"Key":"possibly reject","Fragments":["a"]},{"Key":"reject a","Fragments":["match","match.","match"]},{"Key":"a match","Fragments":["'sooner'","sooner.","for"]},{"Key":"match 'sooner'","Fragments":["with"]},{"Key":"'sooner' with","Fragments":["an"]},{"Key":"an ```!=```","Fragments":["test."]},{"Key":"```!=``` test.","Fragments":["For"]},{"Key":"test. For","Fragments":["example"]},{"Key":"example consider","Fragments":["the"]},{"Key":"consider the","Fragments":["subject"]},{"Key":"subject string","Fragments":["'cca'"]},{"Key":"string 'cca'","Fragments":["and"]},{"Key":"'cca' and","Fragments":["the"]},{"Key":"candidate 'abc'.","Fragments":["When"]},{"Key":"'abc'. When","Fragments":["I"]},{"Key":"test this","Fragments":["the"]},{"Key":"this the","Fragments":["first"]},{"Key":"character compared","Fragments":["is"]},{"Key":"compared is","Fragments":["the"]},{"Key":"the 'c'","Fragments":["(different"]},{"Key":"'c' (different","Fragments":["unordered_map"]},{"Key":"(different unordered_map","Fragments":["impl"]},{"Key":"unordered_map impl","Fragments":["my"]},{"Key":"impl my","Fragments":["be"]},{"Key":"my be","Fragments":["different)"]},{"Key":"be different)","Fragments":["which"]},{"Key":"different) which","Fragments":["does"]},{"Key":"not trigger","Fragments":["the"]},{"Key":"trigger the","Fragments":["rejection"]},{"Key":"the rejection","Fragments":["because"]},{"Key":"rejection because","Fragments":["the"]},{"Key":"subject has","Fragments":["more"]},{"Key":"this character","Fragments":["than"]},{"Key":"character than","Fragments":["the"]},{"Key":"the candidate.","Fragments":["The"]},{"Key":"candidate. The","Fragments":["next"]},{"Key":"next test","Fragments":["of","requires"]},{"Key":"test of","Fragments":["the","how"]},{"Key":"character 'b'","Fragments":["rejects"]},{"Key":"'b' rejects","Fragments":["the"]},{"Key":"rejects the","Fragments":["string"]},{"Key":"string just","Fragments":["fine","doesn't"]},{"Key":"just fine","Fragments":["and"]},{"Key":"fine and","Fragments":["the"]},{"Key":"final result","Fragments":["is"]},{"Key":"correct. However","Fragments":["it"]},{"Key":"However it","Fragments":["is"]},{"Key":"is possible","Fragments":["to","to"]},{"Key":"not detect","Fragments":["the"]},{"Key":"detect the","Fragments":["earliest"]},{"Key":"the earliest","Fragments":["point"]},{"Key":"earliest point","Fragments":["of"]},{"Key":"of rejection.","Fragments":["For"]},{"Key":"rejection. For","Fragments":["short"]},{"Key":"For short","Fragments":["strings"]},{"Key":"short strings","Fragments":["this"]},{"Key":"strings this","Fragments":["is"]},{"Key":"is fine","Fragments":["but"]},{"Key":"fine but","Fragments":["for"]},{"Key":"but for","Fragments":["longer","this"]},{"Key":"for longer","Fragments":["ones"]},{"Key":"longer ones","Fragments":["it"]},{"Key":"ones it","Fragments":["may"]},{"Key":"more characters","Fragments":["before"]},{"Key":"characters before","Fragments":["we"]},{"Key":"we find","Fragments":["the","a"]},{"Key":"do recognise","Fragments":["this"]},{"Key":"recognise this","Fragments":["is"]},{"Key":"pretty minor","Fragments":["nitpick."]},{"Key":" @vella-au","Fragments":["If"]},{"Key":"@vella-au If","Fragments":["you"]},{"Key":"don't mind,","Fragments":["please"]},{"Key":"mind, please","Fragments":["elaborate"]},{"Key":"please elaborate","Fragments":["on"]},{"Key":"elaborate on","Fragments":["how"]},{"Key":"how 'abc'","Fragments":["is"]},{"Key":"is reported","Fragments":["as"]},{"Key":"reported as","Fragments":["an"]},{"Key":"of 'cca'.","Fragments":["I"]},{"Key":"'cca'. I","Fragments":["can't"]},{"Key":"can't reproduce","Fragments":["that"]},{"Key":"reproduce that","Fragments":["behavior."]},{"Key":"The reason","Fragments":["that"]},{"Key":"reason that","Fragments":["less-than"]},{"Key":"that less-than","Fragments":["was"]},{"Key":"less-than was","Fragments":["chosen"]},{"Key":"was chosen","Fragments":["was"]},{"Key":"chosen was","Fragments":["that"]},{"Key":"are looking","Fragments":["for"]},{"Key":"for ways","Fragments":["to"]},{"Key":"to reject","Fragments":["a"]},{"Key":"a match.","Fragments":["If"]},{"Key":"match. If","Fragments":["the"]},{"Key":"times \"a\"","Fragments":["occurs","appears"]},{"Key":"\"a\" occurs","Fragments":["in"]},{"Key":"occurs in","Fragments":["the"]},{"Key":"the master","Fragments":["string","string's","word"]},{"Key":"master string","Fragments":["is"]},{"Key":"\"a\" appears","Fragments":["in"]},{"Key":"trial string,","Fragments":["we"]},{"Key":"string, we","Fragments":["should"]},{"Key":"should certainly","Fragments":["reject"]},{"Key":"certainly reject","Fragments":["that"]},{"Key":"reject that","Fragments":["match,"]},{"Key":"that match,","Fragments":["because"]},{"Key":"match, because","Fragments":["the"]},{"Key":"string cannot","Fragments":["fit"]},{"Key":"cannot fit","Fragments":["into"]},{"Key":"fit into","Fragments":["the"]},{"Key":"master string's","Fragments":["characters."]},{"Key":"not like","Fragments":["the"]},{"Key":"signatures on","Fragments":["this"]},{"Key":"one. It","Fragments":["took"]},{"Key":"me forever","Fragments":["to"]},{"Key":"forever to","Fragments":["get"]},{"Key":"class structure","Fragments":["right."]},{"Key":" Logic","Fragments":["wasn't"]},{"Key":"Logic wasn't","Fragments":["too"]},{"Key":"wasn't too","Fragments":["bad"]},{"Key":"bad after","Fragments":["I"]},{"Key":"after I","Fragments":["was","changed","wrote"]},{"Key":"the .plus","Fragments":["method"]},{"Key":".plus method","Fragments":["working."]},{"Key":"method working.","Fragments":["Found"]},{"Key":"working. Found","Fragments":["it"]},{"Key":"Found it","Fragments":["easiest"]},{"Key":"it easiest","Fragments":["to"]},{"Key":"easiest to","Fragments":["convert"]},{"Key":"to convert","Fragments":["everything","a"]},{"Key":"convert everything","Fragments":["to"]},{"Key":"to minutes","Fragments":["any"]},{"Key":"minutes any","Fragments":["time"]},{"Key":"any time","Fragments":["I"]},{"Key":"I needed","Fragments":["to","to","to"]},{"Key":"a calculation,","Fragments":["then"]},{"Key":"calculation, then","Fragments":["convert"]},{"Key":"then convert","Fragments":["it","to"]},{"Key":"convert it","Fragments":["back."]},{"Key":"it back.","Fragments":["Writing"]},{"Key":"back. Writing","Fragments":["this"]},{"Key":"Writing this","Fragments":["out"]},{"Key":"out now,","Fragments":["and"]},{"Key":"and given","Fragments":["the"]},{"Key":"given the","Fragments":["way"]},{"Key":"way this","Fragments":["class"]},{"Key":"this class","Fragments":["is"]},{"Key":"is used,","Fragments":["it"]},{"Key":"used, it","Fragments":["might"]},{"Key":"just store","Fragments":["the"]},{"Key":"the minutes","Fragments":["and"]},{"Key":"minutes and","Fragments":["then"]},{"Key":"to hours","Fragments":["as"]},{"Key":"hours as","Fragments":["needed."]},{"Key":"Thanks. That's","Fragments":["a"]},{"Key":"great optimization.","Fragments":["Didn't"]},{"Key":"optimization. Didn't","Fragments":["even"]},{"Key":"Didn't even","Fragments":["consider"]},{"Key":"even consider","Fragments":["that","that.","that"]},{"Key":"that pow(2,","Fragments":["64)"]},{"Key":"pow(2, 64)","Fragments":["-1"]},{"Key":"64) -1","Fragments":["was"]},{"Key":"-1 was","Fragments":["equivilant"]},{"Key":"was equivilant","Fragments":["to"]},{"Key":"equivilant to","Fragments":["the"]},{"Key":"the total","Fragments":["of"]},{"Key":"total of","Fragments":["all"]},{"Key":"You're correct,","Fragments":["that","thanks"]},{"Key":"correct, that","Fragments":["I"]},{"Key":"could reject","Fragments":["a"]},{"Key":"match sooner.","Fragments":["In"]},{"Key":"sooner. In","Fragments":["this"]},{"Key":"exercise we're","Fragments":["looking"]},{"Key":"we're looking","Fragments":["for"]},{"Key":"for full","Fragments":["anagrams."]},{"Key":"full anagrams.","Fragments":["I"]},{"Key":"anagrams. I","Fragments":["actually"]},{"Key":"actually designed","Fragments":["the"]},{"Key":"designed the","Fragments":["bucket-comparison"]},{"Key":"the bucket-comparison","Fragments":["algorithm"]},{"Key":"bucket-comparison algorithm","Fragments":["in"]},{"Key":"algorithm in","Fragments":["a","general,"]},{"Key":"different language","Fragments":["when"]},{"Key":"language when","Fragments":["I"]},{"Key":"was solving","Fragments":["the"]},{"Key":"solving the","Fragments":["\"eight"]},{"Key":"the \"eight","Fragments":["letters,"]},{"Key":"\"eight letters,","Fragments":["most"]},{"Key":"letters, most","Fragments":["words\""]},{"Key":"most words\"","Fragments":["problem:"]},{"Key":"words\" problem:","Fragments":["https://github.com/daoswald/eight-letters/blob/master/lib/EightLetters.pm"]},{"Key":"that algorithm","Fragments":["it's"]},{"Key":"algorithm it's","Fragments":["ok"]},{"Key":"it's ok","Fragments":["for"]},{"Key":"ok for","Fragments":["short-anagrams;","\"the\""]},{"Key":"for short-anagrams;","Fragments":["in"]},{"Key":"short-anagrams; in","Fragments":["other"]},{"Key":"other words,","Fragments":["it"]},{"Key":"words, it","Fragments":["would"]},{"Key":"be ok","Fragments":["for"]},{"Key":"for \"the\"","Fragments":["to"]},{"Key":"\"the\" to","Fragments":["be"]},{"Key":"match for","Fragments":["the"]},{"Key":"master word","Fragments":["\"them\"."]},{"Key":"word \"them\".","Fragments":["My"]},{"Key":"\"them\". My","Fragments":["implementation"]},{"Key":"My implementation","Fragments":["there"]},{"Key":"implementation there","Fragments":["was"]},{"Key":"how this","Fragments":["one"]},{"Key":"one works,","Fragments":["except"]},{"Key":"works, except","Fragments":["that"]},{"Key":"except that","Fragments":["this"]},{"Key":"one only","Fragments":["accepts"]},{"Key":"only accepts","Fragments":["full"]},{"Key":"accepts full","Fragments":["anagrams,"]},{"Key":"full anagrams,","Fragments":["and"]},{"Key":"anagrams, and","Fragments":["also"]},{"Key":"also this","Fragments":["one"]},{"Key":"one doesn't","Fragments":["resort"]},{"Key":"doesn't resort","Fragments":["to"]},{"Key":"resort to","Fragments":["the"]},{"Key":"the bit-twiddling","Fragments":["micro-optimization."]},{"Key":"bit-twiddling micro-optimization.","Fragments":[":)"]},{"Key":"Anyway, I'm","Fragments":["glad"]},{"Key":"glad it","Fragments":["was"]},{"Key":"a false","Fragments":["alarm"]},{"Key":"false alarm","Fragments":["on"]},{"Key":"alarm on","Fragments":["this"]},{"Key":"one not","Fragments":["working."]},{"Key":"be neat","Fragments":["to"]},{"Key":"neat to","Fragments":["see"]},{"Key":"song be","Fragments":["generated"]},{"Key":"generated in","Fragments":["pieces"]},{"Key":"in pieces","Fragments":["instead"]},{"Key":"pieces instead","Fragments":["of"]},{"Key":"of outputting","Fragments":["nearly"]},{"Key":"outputting nearly","Fragments":["complete"]},{"Key":"nearly complete","Fragments":["predefined"]},{"Key":"complete predefined","Fragments":["verses."]},{"Key":"predefined verses.","Fragments":["Also,"]},{"Key":"verses. Also,","Fragments":["I"]},{"Key":"a \"beer","Fragments":["namespace\"","class\","]},{"Key":"\"beer namespace\"","Fragments":["fits"]},{"Key":"namespace\" fits","Fragments":["better"]},{"Key":"fits better","Fragments":["than","with"]},{"Key":"\"beer class\",","Fragments":["since"]},{"Key":"class\", since","Fragments":["there's"]},{"Key":"since there's","Fragments":["no"]},{"Key":"create instances","Fragments":["of","of","for"]},{"Key":"you've avoided","Fragments":["`using"]},{"Key":"avoided `using","Fragments":["namespace"]},{"Key":"you're going","Fragments":["for","to"]},{"Key":"for fewest","Fragments":["lines"]},{"Key":"fewest lines","Fragments":["of"]},{"Key":"of code,","Fragments":["you"]},{"Key":"code, you","Fragments":["could","default"]},{"Key":"use boost::to_lower_copy","Fragments":["and","and"]},{"Key":"boost::to_lower_copy and","Fragments":["get","boost::tokenizer"]},{"Key":"and get","Fragments":["rid"]},{"Key":"get rid","Fragments":["of","of","of","of","of"]},{"Key":"the lowerCase","Fragments":["function."]},{"Key":"std::sort algorithm","Fragments":["if"]},{"Key":"algorithm if","Fragments":["you"]},{"Key":" ```std::sort(root_word.begin(),","Fragments":["root_word.end());```"]},{"Key":"Maybe there","Fragments":["is"]},{"Key":"test typedef.","Fragments":["Maybe"]},{"Key":"typedef. Maybe","Fragments":["str_vec?"]},{"Key":"might find","Fragments":["this"]},{"Key":"this funny","Fragments":["and"]},{"Key":"funny and","Fragments":["not"]},{"Key":"not very","Fragments":["helpful:","good","efficient"]},{"Key":"very helpful:","Fragments":["http://youtu.be/k4RRi_ntQc8"]},{"Key":" New","Fragments":["proposition,","implementation"]},{"Key":"New proposition,","Fragments":["with"]},{"Key":"proposition, with","Fragments":["the"]},{"Key":"string iterator","Fragments":["this"]},{"Key":"iterator this","Fragments":["time."]},{"Key":"this time.","Fragments":["The"]},{"Key":"The \"for\"","Fragments":["statement"]},{"Key":"\"for\" statement","Fragments":["is"]},{"Key":"statement is","Fragments":["a"]},{"Key":"little longer,","Fragments":["but"]},{"Key":"longer, but","Fragments":["I"]},{"Key":"the \"int","Fragments":["i\""]},{"Key":"\"int i\"","Fragments":["counter."]},{"Key":"some thoughts,","Fragments":["I"]},{"Key":"thoughts, I","Fragments":["tried"]},{"Key":"single passage","Fragments":["through"]},{"Key":"passage through","Fragments":["the"]},{"Key":"string, without","Fragments":["tokenizing"]},{"Key":"without tokenizing","Fragments":["the"]},{"Key":"tokenizing the","Fragments":["string","string"]},{"Key":"string beforehand.","Fragments":["I’m"]},{"Key":"beforehand. I’m","Fragments":["not"]},{"Key":"I’m not","Fragments":["satisfied"]},{"Key":"not satisfied","Fragments":["with"]},{"Key":"satisfied with","Fragments":["readability"]},{"Key":"with readability","Fragments":["though."]},{"Key":"I don’t","Fragments":["like"]},{"Key":"don’t like","Fragments":["the"]},{"Key":"of needing","Fragments":["a"]},{"Key":"needing a","Fragments":["counter"]},{"Key":"a counter","Fragments":["to"]},{"Key":"counter to","Fragments":["know"]},{"Key":"if I’m","Fragments":["at"]},{"Key":"I’m at","Fragments":["the"]},{"Key":"not. But","Fragments":["the"]},{"Key":"new \"for\"","Fragments":["syntax"]},{"Key":"\"for\" syntax","Fragments":["is"]},{"Key":"syntax is","Fragments":["cool"]},{"Key":"is cool","Fragments":["so"]},{"Key":"cool so","Fragments":["I"]},{"Key":"also would","Fragments":["like"]},{"Key":"like another","Fragments":["way"]},{"Key":"another way","Fragments":["to"]},{"Key":"the selected","Fragments":["word"]},{"Key":"selected word","Fragments":["already"]},{"Key":"word already","Fragments":["exist"]},{"Key":"exist in","Fragments":["the"]},{"Key":"result map.","Fragments":["Relying"]},{"Key":"map. Relying","Fragments":["on"]},{"Key":"Relying on","Fragments":["an"]},{"Key":"exception sounds","Fragments":["kind"]},{"Key":"sounds kind","Fragments":["of"]},{"Key":"of crappy","Fragments":["to"]},{"Key":"crappy to","Fragments":["me…"]},{"Key":"For extra","Fragments":["credit,"]},{"Key":"extra credit,","Fragments":["I"]},{"Key":"credit, I","Fragments":["added"]},{"Key":"added unit","Fragments":["tests"]},{"Key":"tests that","Fragments":["are","you"]},{"Key":"are included","Fragments":["in"]},{"Key":"included in","Fragments":["this","the"]},{"Key":"exercise for","Fragments":["other","instruction"]},{"Key":"for other","Fragments":["languages"]},{"Key":"languages plus","Fragments":["a"]},{"Key":"few from","Fragments":["the"]},{"Key":"the NitPicks","Fragments":["in"]},{"Key":"NitPicks in","Fragments":["other"]},{"Key":"const map\u003cstring,","Fragments":["int\u003e","int\u003e","int\u003e","int\u003e","int\u003e"]},{"Key":"int\u003e expected{{\"all\",","Fragments":["2},"]},{"Key":"expected{{\"all\", 2},","Fragments":["{\"the\","]},{"Key":"2}, {\"the\",","Fragments":["2},"]},{"Key":"{\"the\", 2},","Fragments":["{\"kings\","]},{"Key":"2}, {\"kings\",","Fragments":["2},"]},{"Key":"{\"kings\", 2},","Fragments":["{\"horses\","]},{"Key":"2}, {\"horses\",","Fragments":["1},"]},{"Key":"{\"horses\", 1},","Fragments":["{\"and\","]},{"Key":"1}, {\"and\",","Fragments":["1},"]},{"Key":"{\"and\", 1},","Fragments":["{\"men\","]},{"Key":"1}, {\"men\",","Fragments":["1}};"]},{"Key":"const auto","Fragments":["actual","actual","actual","actual","actual","actual"]},{"Key":"auto actual","Fragments":["=","=","=","=","=","="]},{"Key":"actual =","Fragments":["word_count::words(","word_count::words(","word_count::words(","word_count::words(","word_count::words(","dna.nucleotide_counts();```"]},{"Key":"= word_count::words(","Fragments":["\"all","\"one,two,three\"","\"First:","\"go","\"She"]},{"Key":"word_count::words( \"all","Fragments":["the"]},{"Key":"\"all the","Fragments":["kings"]},{"Key":"the kings","Fragments":["horses","men\");"]},{"Key":"kings horses","Fragments":["and"]},{"Key":"horses and","Fragments":["all"]},{"Key":"and all","Fragments":["the","will","of","we've","the"]},{"Key":" REQUIRE_EQUAL_CONTAINERS(","Fragments":["expected,","expected,","expected,","expected,","expected,"]},{"Key":"REQUIRE_EQUAL_CONTAINERS( expected,","Fragments":["actual","actual","actual","actual","actual"]},{"Key":"expected, actual","Fragments":[");",");",");",");",");"]},{"Key":"int\u003e expected{{\"one\",","Fragments":["1},"]},{"Key":"expected{{\"one\", 1},","Fragments":["{\"two\","]},{"Key":"1}, {\"two\",","Fragments":["1},"]},{"Key":"{\"two\", 1},","Fragments":["{\"three\","]},{"Key":"1}, {\"three\",","Fragments":["1}};"]},{"Key":"word_count::words( \"one,two,three\"","Fragments":[");"]},{"Key":"int\u003e expected{{\"first\",","Fragments":["1},"]},{"Key":"expected{{\"first\", 1},","Fragments":["{\"don't\","]},{"Key":"1}, {\"don't\",","Fragments":["2},"]},{"Key":"{\"don't\", 2},","Fragments":["{\"laugh\","]},{"Key":"2}, {\"laugh\",","Fragments":["1},"]},{"Key":"{\"laugh\", 1},","Fragments":["{\"then\","]},{"Key":"1}, {\"then\",","Fragments":["1},"]},{"Key":"{\"then\", 1},","Fragments":["{\"cry\","]},{"Key":"1}, {\"cry\",","Fragments":["1}};"]},{"Key":"word_count::words( \"First:","Fragments":["don't"]},{"Key":"\"First: don't","Fragments":["laugh."]},{"Key":"don't laugh.","Fragments":["Then:"]},{"Key":"laugh. Then:","Fragments":["don't"]},{"Key":"Then: don't","Fragments":["cry.\""]},{"Key":"don't cry.\"","Fragments":[");"]},{"Key":"int\u003e expected{{","Fragments":["\"go\","]},{"Key":"expected{{ \"go\",","Fragments":["3"]},{"Key":"\"go\", 3","Fragments":["}};"]},{"Key":"word_count::words( \"go","Fragments":["'"]},{"Key":"\"go '","Fragments":["Go"]},{"Key":"' Go","Fragments":["''"]},{"Key":"Go ''","Fragments":["GO\""]},{"Key":"'' GO\"","Fragments":[");"]},{"Key":"int\u003e expected{{\"she\",","Fragments":["1},"]},{"Key":"expected{{\"she\", 1},","Fragments":["{\"said\","]},{"Key":"1}, {\"said\",","Fragments":["1},"]},{"Key":"{\"said\", 1},","Fragments":["{\"let's\","]},{"Key":"1}, {\"let's\",","Fragments":["1},"]},{"Key":"{\"let's\", 1},","Fragments":["{\"meet\","]},{"Key":"1}, {\"meet\",","Fragments":["1},"]},{"Key":"{\"meet\", 1},","Fragments":["{\"at\","]},{"Key":"1}, {\"at\",","Fragments":["1},"]},{"Key":"{\"at\", 1},","Fragments":["{\"twelve\","]},{"Key":"1}, {\"twelve\",","Fragments":["1},"]},{"Key":"{\"twelve\", 1},","Fragments":["{\"o'clock\","]},{"Key":"1}, {\"o'clock\",","Fragments":["1}};"]},{"Key":"word_count::words( \"She","Fragments":["said,"]},{"Key":"\"She said,","Fragments":["'let's"]},{"Key":"said, 'let's","Fragments":["meet"]},{"Key":"'let's meet","Fragments":["at"]},{"Key":"meet at","Fragments":["twelve"]},{"Key":"at twelve","Fragments":["o'clock'\""]},{"Key":"twelve o'clock'\"","Fragments":[");"]},{"Key":" @marianne","Fragments":["thanks"]},{"Key":"@marianne thanks","Fragments":["for"]},{"Key":"feedback. I","Fragments":["think","agree","didn't","have"]},{"Key":"tried some","Fragments":["expressions"]},{"Key":"some expressions","Fragments":["that"]},{"Key":"expressions that","Fragments":["closely"]},{"Key":"that closely","Fragments":["resemble"]},{"Key":"closely resemble","Fragments":["your"]},{"Key":"resemble your","Fragments":["examples"]},{"Key":"your examples","Fragments":["above,"]},{"Key":"examples above,","Fragments":["but"]},{"Key":"above, but","Fragments":["were"]},{"Key":"but were","Fragments":["most"]},{"Key":"were most","Fragments":["likely"]},{"Key":"likely not","Fragments":["exactly"]},{"Key":"not exactly","Fragments":["the"]},{"Key":"exactly the","Fragments":["same.","reasons"]},{"Key":"same. I'll","Fragments":["give"]},{"Key":"I'll give","Fragments":["them","a"]},{"Key":"try and","Fragments":["see","avoid","use"]},{"Key":"seems as","Fragments":["if"]},{"Key":"function overloading","Fragments":["isn't"]},{"Key":"overloading isn't","Fragments":["the"]},{"Key":"does work","Fragments":["and"]},{"Key":"work and","Fragments":["appears"]},{"Key":"and appears","Fragments":["quite"]},{"Key":"appears quite","Fragments":["readable."]},{"Key":"Yes, that's","Fragments":["a","looking"]},{"Key":"good link","Fragments":["and"]},{"Key":"link and","Fragments":["there's","execute"]},{"Key":"and there's","Fragments":["lots","something"]},{"Key":"there's lots","Fragments":["of"]},{"Key":"of good","Fragments":["points"]},{"Key":"good points","Fragments":["in"]},{"Key":"points in","Fragments":["there."]},{"Key":" There's","Fragments":["quite","not","really"]},{"Key":"There's quite","Fragments":["a"]},{"Key":"few comments","Fragments":["in","explaining"]},{"Key":"comments in","Fragments":["there"]},{"Key":"in there","Fragments":["that","that","since","or"]},{"Key":"worth worrying","Fragments":["about"]},{"Key":"worrying about","Fragments":["and","(using"]},{"Key":"about and","Fragments":["that"]},{"Key":"will handle","Fragments":["the"]},{"Key":"the optimizations.","Fragments":["I"]},{"Key":"optimizations. I","Fragments":["don't"]},{"Key":"really agree","Fragments":["with"]},{"Key":"with that.","Fragments":["For"]},{"Key":"that. For","Fragments":["me,"]},{"Key":"me, it","Fragments":["doesn't"]},{"Key":"seem smart","Fragments":["to"]},{"Key":"smart to","Fragments":["rely"]},{"Key":"to rely","Fragments":["on"]},{"Key":"compiler to","Fragments":["optimize","treat","(potentially)"]},{"Key":"optimize things","Fragments":["for"]},{"Key":"things for","Fragments":["you"]},{"Key":"you just","Fragments":["because","need","need","might","get"]},{"Key":"just because","Fragments":["you"]},{"Key":"prefer one","Fragments":["style"]},{"Key":"one style","Fragments":["over"]},{"Key":"style over","Fragments":["the"]},{"Key":"the other.","Fragments":["The"]},{"Key":"other. The","Fragments":["pre-incremement"]},{"Key":"The pre-incremement","Fragments":["is"]},{"Key":"pre-incremement is","Fragments":["supposed"]},{"Key":"object and","Fragments":["using"]},{"Key":"the post-increment","Fragments":["is"]},{"Key":"post-increment is","Fragments":["supposed"]},{"Key":"copy before","Fragments":["incrementing","trimming"]},{"Key":"before incrementing","Fragments":["and"]},{"Key":"incrementing and","Fragments":["assigning,"]},{"Key":"and assigning,","Fragments":["so"]},{"Key":"assigning, so","Fragments":["explicity"]},{"Key":"so explicity","Fragments":["calling"]},{"Key":"explicity calling","Fragments":["that"]},{"Key":"calling that","Fragments":["out"]},{"Key":"that out","Fragments":["seems"]},{"Key":"out seems","Fragments":["like"]},{"Key":"like you'd","Fragments":["probably"]},{"Key":"get into","Fragments":["less","the"]},{"Key":"into less","Fragments":["trouble"]},{"Key":"less trouble","Fragments":["if"]},{"Key":"trouble if","Fragments":["you're"]},{"Key":"you're working","Fragments":["on"]},{"Key":"an old","Fragments":["compiler"]},{"Key":"old compiler","Fragments":["or"]},{"Key":"compiler or","Fragments":["with"]},{"Key":"or with","Fragments":["complex"]},{"Key":"with complex","Fragments":["classes"]},{"Key":"complex classes","Fragments":["that"]},{"Key":"classes that","Fragments":["the"]},{"Key":"compiler may","Fragments":["not"]},{"Key":"small window","Fragments":["with"]},{"Key":"window with","Fragments":["VIM."]},{"Key":"with VIM.","Fragments":["Cleaned"]},{"Key":"VIM. Cleaned","Fragments":["it"]},{"Key":"Cleaned it","Fragments":["up"]},{"Key":"bit, good","Fragments":["call."]},{"Key":"Interesting. I","Fragments":["used"]},{"Key":"used GCC","Fragments":["4.9"]},{"Key":"GCC 4.9","Fragments":["on"]},{"Key":"4.9 on","Fragments":["AMD64."]},{"Key":"on AMD64.","Fragments":["But"]},{"Key":"AMD64. But","Fragments":["for"]},{"Key":"for me,","Fragments":["the"]},{"Key":"me, the","Fragments":["tests"]},{"Key":"actually had","Fragments":["to"]},{"Key":"solve isShouting","Fragments":["using"]},{"Key":"isShouting using","Fragments":["just"]},{"Key":"using just","Fragments":["one","so"]},{"Key":"one big","Fragments":["regular"]},{"Key":"big regular","Fragments":["expression,"]},{"Key":"regular expression,","Fragments":["but"]},{"Key":"expression, but","Fragments":["I"]},{"Key":"can confirm","Fragments":["it's"]},{"Key":"confirm it's","Fragments":["definitely"]},{"Key":"it's definitely","Fragments":["possible."]},{"Key":"code! It's","Fragments":["short"]},{"Key":"It's short","Fragments":["and"]},{"Key":"find your","Fragments":["indentation"]},{"Key":"indentation a","Fragments":["bit"]},{"Key":"bit strange,","Fragments":["particularly"]},{"Key":"strange, particularly","Fragments":["for"]},{"Key":"particularly for","Fragments":["lines"]},{"Key":"for lines","Fragments":["14"]},{"Key":"lines 14","Fragments":["and"]},{"Key":"14 and","Fragments":["17."]},{"Key":"and 17.","Fragments":["What's"]},{"Key":"17. What's","Fragments":["the"]},{"Key":"the rule","Fragments":["for"]},{"Key":"rule for","Fragments":["how"]},{"Key":"for how","Fragments":["you"]},{"Key":"you decide","Fragments":["when"]},{"Key":"decide when","Fragments":["to"]},{"Key":"when to","Fragments":["insert","use"]},{"Key":"to insert","Fragments":["a"]},{"Key":"insert a","Fragments":["newline"]},{"Key":"a newline","Fragments":["there?"]},{"Key":"figured the","Fragments":["best"]},{"Key":"is regular","Fragments":["expressions,"]},{"Key":"regular expressions,","Fragments":["but"]},{"Key":"expressions, but","Fragments":["doing"]},{"Key":"the regex_search(es)","Fragments":["seemed"]},{"Key":"regex_search(es) seemed","Fragments":["a"]},{"Key":"seemed a","Fragments":["bit"]},{"Key":"Would storing","Fragments":["the"]},{"Key":"the searches","Fragments":["in"]},{"Key":"searches in","Fragments":["boolean"]},{"Key":"in boolean","Fragments":["values"]},{"Key":"boolean values","Fragments":["make","with"]},{"Key":"values make","Fragments":["more"]},{"Key":"more sense?","Fragments":["Or"]},{"Key":"sense? Or","Fragments":["does"]},{"Key":"Or does","Fragments":["it"]},{"Key":"it lead","Fragments":["to"]},{"Key":"to redundant","Fragments":["code?"]},{"Key":" to_lower","Fragments":["is"]},{"Key":"to_lower is","Fragments":["not"]},{"Key":"not repeated.","Fragments":["It","Since"]},{"Key":"repeated. It","Fragments":["is"]},{"Key":"called for","Fragments":["every"]},{"Key":"word once.","Fragments":["I"]},{"Key":"once. I","Fragments":["don't"]},{"Key":"how doing","Fragments":["the"]},{"Key":"the lowercasing","Fragments":["outside"]},{"Key":"lowercasing outside","Fragments":["of"]},{"Key":"help in","Fragments":["any"]},{"Key":"the DFA","Fragments":["you"]},{"Key":"DFA you","Fragments":["came"]},{"Key":"you came","Fragments":["up"]},{"Key":"up with,","Fragments":["if"]},{"Key":"with, if","Fragments":["you"]},{"Key":"of `typedef`,","Fragments":["but"]},{"Key":"`typedef`, but","Fragments":["I"]},{"Key":"the creation","Fragments":["of"]},{"Key":"creation of","Fragments":["a"]},{"Key":"new sequence","Fragments":["of"]},{"Key":"pairs is","Fragments":["excess"]},{"Key":"is excess","Fragments":["work"]},{"Key":"excess work","Fragments":["without"]},{"Key":" ¿Por","Fragments":["qué"]},{"Key":"¿Por qué","Fragments":["sería"]},{"Key":"qué sería","Fragments":["necesario"]},{"Key":"sería necesario","Fragments":["de"]},{"Key":"necesario de","Fragments":["tener"]},{"Key":"de tener","Fragments":["que"]},{"Key":"tener que","Fragments":["saber"]},{"Key":"que saber","Fragments":["algo"]},{"Key":"saber algo","Fragments":["sobre"]},{"Key":"algo sobre","Fragments":["bob"]},{"Key":"sobre bob","Fragments":["fuera"]},{"Key":"bob fuera","Fragments":["del"]},{"Key":"fuera del","Fragments":["contexto"]},{"Key":"del contexto","Fragments":["de"]},{"Key":"contexto de","Fragments":["bob?"]},{"Key":" Buen","Fragments":["idea"]},{"Key":"Buen idea","Fragments":["de"]},{"Key":"idea de","Fragments":["separar"]},{"Key":"de separar","Fragments":["bob"]},{"Key":"separar bob","Fragments":["y"]},{"Key":"bob y","Fragments":["el"]},{"Key":"y el","Fragments":["mensaje"]},{"Key":"el mensaje","Fragments":["-"]},{"Key":"mensaje -","Fragments":["pero"]},{"Key":"- pero","Fragments":["hay"]},{"Key":"pero hay","Fragments":["que"]},{"Key":"hay que","Fragments":["justificar"]},{"Key":"que justificar","Fragments":["cada"]},{"Key":"justificar cada","Fragments":["function"]},{"Key":"cada function","Fragments":["en"]},{"Key":"function en","Fragments":["tu"]},{"Key":"en tu","Fragments":["nueva"]},{"Key":"tu nueva","Fragments":["clase."]},{"Key":"nueva clase.","Fragments":["A"]},{"Key":"clase. A","Fragments":["mi"]},{"Key":"A mi","Fragments":["me"]},{"Key":"mi me","Fragments":["parece"]},{"Key":"me parece","Fragments":["que"]},{"Key":"parece que","Fragments":["bobresponse()"]},{"Key":"que bobresponse()","Fragments":["debe"]},{"Key":"bobresponse() debe","Fragments":["estar"]},{"Key":"debe estar","Fragments":["en"]},{"Key":"estar en","Fragments":["bob."]},{"Key":"just more","Fragments":["comfortable"]},{"Key":"more comfortable","Fragments":["with"]},{"Key":"comfortable with","Fragments":["classes","recusion"]},{"Key":"with classes","Fragments":["than"]},{"Key":"classes than","Fragments":["namespaces."]},{"Key":"just went","Fragments":["for"]},{"Key":"simplest solution","Fragments":["of"]},{"Key":"solution of","Fragments":["storing"]},{"Key":"of storing","Fragments":["the"]},{"Key":"whole song","Fragments":["and"]},{"Key":"correct indexed","Fragments":["verse."]},{"Key":"indexed verse.","Fragments":["I"]},{"Key":"verse. I","Fragments":["made"]},{"Key":"made sure","Fragments":["to"]},{"Key":"implement the","Fragments":["```song()```"]},{"Key":"the ```song()```","Fragments":["and"]},{"Key":"```song()``` and","Fragments":["```verses()```"]},{"Key":"and ```verses()```","Fragments":["functions"]},{"Key":"```verses()``` functions","Fragments":["in"]},{"Key":"the ```verse()```","Fragments":["function.","function"]},{"Key":"```verse()``` function.","Fragments":["The"]},{"Key":"conversion between","Fragments":["1"]},{"Key":"between 1","Fragments":["based"]},{"Key":"1 based","Fragments":["verse"]},{"Key":"based verse","Fragments":["indexing"]},{"Key":"verse indexing","Fragments":["and"]},{"Key":"indexing and","Fragments":["0"]},{"Key":"and 0","Fragments":["based","if","as"]},{"Key":"0 based","Fragments":["vector","indexing."]},{"Key":"based vector","Fragments":["indexing"]},{"Key":"vector indexing","Fragments":["might"]},{"Key":"indexing might","Fragments":["be"]},{"Key":"little hard","Fragments":["to"]},{"Key":"hard to","Fragments":["work","read,","get"]},{"Key":"work out","Fragments":["from","the","a","how","the"]},{"Key":"out from","Fragments":["the"]},{"Key":"the ++","Fragments":["operator."]},{"Key":"The song","Fragments":["does"]},{"Key":"song does","Fragments":["have"]},{"Key":"a repeating","Fragments":["pattern"]},{"Key":"repeating pattern","Fragments":["so"]},{"Key":"pattern so","Fragments":["I"]},{"Key":"might try","Fragments":["a"]},{"Key":"try a","Fragments":["dynamic"]},{"Key":"a dynamic","Fragments":["constructed"]},{"Key":"dynamic constructed","Fragments":["version"]},{"Key":"constructed version","Fragments":["later."]},{"Key":"Really nice","Fragments":["solution."]},{"Key":"nice solution.","Fragments":["I"]},{"Key":"solution. I","Fragments":["would","don't"]},{"Key":"changing from","Fragments":["a"]},{"Key":"a raw","Fragments":["array"]},{"Key":"raw array","Fragments":["[]"]},{"Key":"array []","Fragments":["to"]},{"Key":"use ```std::array\u003csong_verse\u003e```.","Fragments":["Then"]},{"Key":"```std::array\u003csong_verse\u003e```. Then","Fragments":["you"]},{"Key":"the member","Fragments":["function","```counted```.","variables"]},{"Key":"function size()","Fragments":["in"]},{"Key":"size() in","Fragments":["your"]},{"Key":"code instead","Fragments":["of"]},{"Key":"the 'magic'","Fragments":["numbers"]},{"Key":"'magic' numbers","Fragments":["7/8."]},{"Key":" Updated","Fragments":["solution","to","as"]},{"Key":"Updated solution","Fragments":["to"]},{"Key":"use ```std::string::operator+()```","Fragments":["instead"]},{"Key":"```std::string::operator+()``` instead","Fragments":["of"]},{"Key":"calling append","Fragments":["member"]},{"Key":"append member","Fragments":["functions."]},{"Key":"member functions.","Fragments":["To"]},{"Key":"functions. To","Fragments":["make"]},{"Key":"To make","Fragments":["the","things"]},{"Key":"the ```verses()```","Fragments":["function"]},{"Key":"```verses()``` function","Fragments":["a","might"]},{"Key":"bit shorter","Fragments":["and"]},{"Key":" Could","Fragments":["be","you"]},{"Key":"Could be","Fragments":["improved"]},{"Key":"be improved","Fragments":["with"]},{"Key":"improved with","Fragments":["extra"]},{"Key":"with extra","Fragments":["checks"]},{"Key":"extra checks","Fragments":["in"]},{"Key":"checks in","Fragments":["the"]},{"Key":"constructor for","Fragments":["only"]},{"Key":"characters 'ACGT'","Fragments":["but"]},{"Key":"'ACGT' but","Fragments":["no"]},{"Key":"no tests","Fragments":["required"]},{"Key":"tests required","Fragments":["it"]},{"Key":"required it","Fragments":["so"]},{"Key":"I left","Fragments":["it"]},{"Key":"There's not","Fragments":["much"]},{"Key":"not much","Fragments":["to","to","to"]},{"Key":"to see,","Fragments":["but"]},{"Key":"see, but","Fragments":["here"]},{"Key":"but here","Fragments":["it"]},{"Key":"it is:","Fragments":["http://imgur.com/W8XYqv3"]},{"Key":"Your style","Fragments":["is","is","is"]},{"Key":"style is","Fragments":["clean","clean","clean","good.","longer"]},{"Key":"is clean","Fragments":["and","and","and"]},{"Key":"was difficult","Fragments":["for"]},{"Key":"difficult for","Fragments":["me"]},{"Key":"see where","Fragments":["the"]},{"Key":"the closing","Fragments":["bracket"]},{"Key":"closing bracket","Fragments":["is"]},{"Key":"bracket is","Fragments":["for"]},{"Key":"is for","Fragments":["the"]},{"Key":"statement starting","Fragments":["on"]},{"Key":"line 21.","Fragments":["I'm"]},{"Key":"21. I'm","Fragments":["wondering"]},{"Key":"I'm wondering","Fragments":["if","if"]},{"Key":"it easier","Fragments":["to","to","to","to"]},{"Key":"you broke","Fragments":["up"]},{"Key":"up your","Fragments":["function"]},{"Key":"of smaller","Fragments":["functions?"]},{"Key":"general comments","Fragments":["on"]},{"Key":"The recursion","Fragments":["in"]},{"Key":"recursion in","Fragments":["your"]},{"Key":"your ```verses()```","Fragments":["function"]},{"Key":"you more","Fragments":["concise"]},{"Key":"more concise","Fragments":["code"]},{"Key":"concise code","Fragments":["but"]},{"Key":"is always","Fragments":["the","tail"]},{"Key":"always the","Fragments":["overhead"]},{"Key":"of thinking","Fragments":["recusively"]},{"Key":"thinking recusively","Fragments":["when"]},{"Key":"recusively when","Fragments":["going"]},{"Key":"when going","Fragments":["back"]},{"Key":"going back","Fragments":["to"]},{"Key":"to maintain","Fragments":["it."]},{"Key":"maintain it.","Fragments":["Now"]},{"Key":"it. Now","Fragments":["all"]},{"Key":"Now all","Fragments":["programmers"]},{"Key":"all programmers","Fragments":["should"]},{"Key":"programmers should","Fragments":["be"]},{"Key":"be comfortable","Fragments":["with"]},{"Key":"with recusion","Fragments":["and"]},{"Key":"recusion and","Fragments":["it"]},{"Key":"a powerful","Fragments":["tool"]},{"Key":"powerful tool","Fragments":["however"]},{"Key":"tool however","Fragments":["from"]},{"Key":"however from","Fragments":["a"]},{"Key":"maintenance point","Fragments":["of"]},{"Key":"view iteration","Fragments":["is"]},{"Key":"iteration is","Fragments":["generally"]},{"Key":"generally easier","Fragments":["to"]},{"Key":"have duplicate","Fragments":["copies"]},{"Key":"duplicate copies","Fragments":["of"]},{"Key":"song lyrics.","Fragments":["On"]},{"Key":"lyrics. On","Fragments":["copy"]},{"Key":"On copy","Fragments":["in"]},{"Key":"copy in","Fragments":["the"]},{"Key":"```verse()``` function","Fragments":["and"]},{"Key":"one in","Fragments":["the"]},{"Key":"the ```sing()```","Fragments":["function."]},{"Key":"```sing()``` function.","Fragments":["For"]},{"Key":"simple programming","Fragments":["exercise"]},{"Key":"programming exercise","Fragments":["this"]},{"Key":"exercise this","Fragments":["might"]},{"Key":"problem but","Fragments":["if","I"]},{"Key":"you apply","Fragments":["this"]},{"Key":"apply this","Fragments":["pattern"]},{"Key":"pattern to","Fragments":["other"]},{"Key":"other projects,","Fragments":["maintenance"]},{"Key":"projects, maintenance","Fragments":["will"]},{"Key":"maintenance will","Fragments":["be"]},{"Key":"one copy","Fragments":["changes"]},{"Key":"copy changes","Fragments":["out"]},{"Key":"changes out","Fragments":["of"]},{"Key":"of sync","Fragments":["with"]},{"Key":"sync with","Fragments":["the","each"]},{"Key":"a general","Fragments":["C++"]},{"Key":"C++ comment","Fragments":["I"]},{"Key":"comment I","Fragments":["would"]},{"Key":"would caution","Fragments":["against"]},{"Key":"caution against","Fragments":["getting"]},{"Key":"against getting","Fragments":["used"]},{"Key":"getting used","Fragments":["to"]},{"Key":"the double","Fragments":["leading"]},{"Key":"double leading","Fragments":["underscore"]},{"Key":"leading underscore","Fragments":["for"]},{"Key":"underscore for","Fragments":["your"]},{"Key":"your names.","Fragments":["While"]},{"Key":"names. While","Fragments":["you"]},{"Key":"While you","Fragments":["might"]},{"Key":"be safe","Fragments":["99%"]},{"Key":"safe 99%","Fragments":["of"]},{"Key":"99% of","Fragments":["the"]},{"Key":"the time","Fragments":["you","of"]},{"Key":"never know","Fragments":["what"]},{"Key":"what kind","Fragments":["of"]},{"Key":"names your","Fragments":["compiler/system"]},{"Key":"your compiler/system","Fragments":["implementation"]},{"Key":"compiler/system implementation","Fragments":["have"]},{"Key":"implementation have","Fragments":["been"]},{"Key":"been using.","Fragments":["Best"]},{"Key":"using. Best","Fragments":["to"]},{"Key":"Best to","Fragments":["develop"]},{"Key":"to develop","Fragments":["a"]},{"Key":"develop a","Fragments":["style"]},{"Key":"a style","Fragments":["that"]},{"Key":"style that","Fragments":["conforms","leads"]},{"Key":"that conforms","Fragments":["with"]},{"Key":"conforms with","Fragments":["the"]},{"Key":"was available","Fragments":["in"]},{"Key":"standard rather","Fragments":["than"]},{"Key":"than boost::format","Fragments":["or"]},{"Key":"boost::format or","Fragments":["something"]},{"Key":"something similar.","Fragments":["I"]},{"Key":"similar. I","Fragments":["wanted"]},{"Key":"give stringstreams","Fragments":["a"]},{"Key":"stringstreams a","Fragments":["go"]},{"Key":"a go","Fragments":["since"]},{"Key":"go since","Fragments":["I"]},{"Key":"haven't used","Fragments":["them"]},{"Key":"used them","Fragments":["in"]},{"Key":"while and","Fragments":["for"]},{"Key":"simple formatted","Fragments":["output"]},{"Key":"formatted output","Fragments":["they","by"]},{"Key":"output they","Fragments":["work"]},{"Key":"they work","Fragments":["quite"]},{"Key":"work quite","Fragments":["well."]},{"Key":"and consistent.","Fragments":["My"]},{"Key":"consistent. My","Fragments":["only"]},{"Key":"nitpick is","Fragments":["that"]},{"Key":"think `((std::isalpha(*it)","Fragments":["\u0026\u0026"]},{"Key":"`((std::isalpha(*it) \u0026\u0026","Fragments":["std::isupper(*it))"]},{"Key":"\u0026\u0026 std::isupper(*it))","Fragments":["||"]},{"Key":"std::isupper(*it)) ||","Fragments":["!std::isalpha(*it)`"]},{"Key":"|| !std::isalpha(*it)`","Fragments":["could"]},{"Key":"!std::isalpha(*it)` could","Fragments":["be"]},{"Key":"be expressed","Fragments":["as"]},{"Key":"as `(!std::isalpha(*it))","Fragments":["||"]},{"Key":"`(!std::isalpha(*it)) ||","Fragments":["std::isupper(*it)`,","std::isupper(*it)`"]},{"Key":"|| std::isupper(*it)`,","Fragments":["or"]},{"Key":"std::isupper(*it)`, or","Fragments":["even"]},{"Key":"if `iends_with`","Fragments":["is"]},{"Key":"`iends_with` is","Fragments":["slower"]},{"Key":"than `ends_with`","Fragments":["and"]},{"Key":"`ends_with` and","Fragments":["you"]},{"Key":"really need","Fragments":["case","in","to","dynamic"]},{"Key":"need case","Fragments":["insensitivity"]},{"Key":"case insensitivity","Fragments":["for"]},{"Key":"insensitivity for","Fragments":["this"]},{"Key":"this check,","Fragments":["but"]},{"Key":"probably good","Fragments":["enough."]},{"Key":"first exercism.","Fragments":["I"]},{"Key":"exercism. I","Fragments":["want"]},{"Key":"1. \"Bridge\"","Fragments":["my"]},{"Key":"\"Bridge\" my","Fragments":["knowledge"]},{"Key":"my knowledge","Fragments":["of"]},{"Key":"of C","Fragments":["and"]},{"Key":"C and","Fragments":["Java"]},{"Key":"2. Understand","Fragments":["the"]},{"Key":"Understand the","Fragments":["language"]},{"Key":"language better","Fragments":["to"]},{"Key":"these lessons","Fragments":["in"]},{"Key":"lessons in","Fragments":["other"]},{"Key":"For this","Fragments":["exercism","example"]},{"Key":"this exercism","Fragments":["I"]},{"Key":"just installed","Fragments":["the"]},{"Key":"installed the","Fragments":["tools"]},{"Key":"the tools","Fragments":["(exercism"]},{"Key":"tools (exercism","Fragments":["CLI,"]},{"Key":"(exercism CLI,","Fragments":["cmake"]},{"Key":"CLI, cmake","Fragments":["and"]},{"Key":"cmake and","Fragments":["boost"]},{"Key":"and boost","Fragments":["with","1.56.0."]},{"Key":"boost with","Fragments":["Homebrew)"]},{"Key":"with Homebrew)","Fragments":["and"]},{"Key":"Homebrew) and","Fragments":["started"]},{"Key":"and started","Fragments":["coding"]},{"Key":"started coding","Fragments":["after"]},{"Key":"coding after","Fragments":["reading"]},{"Key":"after reading","Fragments":["the"]},{"Key":"first cycle","Fragments":["was"]},{"Key":"cycle was","Fragments":["the"]},{"Key":"most common","Fragments":["response:"]},{"Key":"common response:","Fragments":["\"Whatever.\","]},{"Key":"response: \"Whatever.\",","Fragments":["hence"]},{"Key":"\"Whatever.\", hence","Fragments":["no"]},{"Key":"hence no","Fragments":["time"]},{"Key":"no time","Fragments":["spent","to"]},{"Key":"time spent","Fragments":["there."]},{"Key":"next ones","Fragments":["made"]},{"Key":"ones made","Fragments":["me"]},{"Key":"me have","Fragments":["to"]},{"Key":"look up","Fragments":["how","all"]},{"Key":"up how","Fragments":["to"]},{"Key":"get information","Fragments":["with"]},{"Key":"information with","Fragments":["the"]},{"Key":"string class,","Fragments":["and"]},{"Key":"search around","Fragments":["for"]},{"Key":"around for","Fragments":["using","a"]},{"Key":"for using","Fragments":["boost,"]},{"Key":"using boost,","Fragments":["too."]},{"Key":"believe the","Fragments":["shouting"]},{"Key":"shouting case","Fragments":["is"]},{"Key":"one that","Fragments":["needs"]},{"Key":"needs improvement,","Fragments":["since"]},{"Key":"improvement, since","Fragments":["I"]},{"Key":"couple flags","Fragments":["and"]},{"Key":"flags and","Fragments":["a"]},{"Key":"cases seemed","Fragments":["pretty"]},{"Key":"seemed pretty","Fragments":["straight","straightforward."]},{"Key":"pretty straight","Fragments":["forward,"]},{"Key":"straight forward,","Fragments":["but"]},{"Key":"forward, but","Fragments":["they"]},{"Key":"they might","Fragments":["have"]},{"Key":"some improvement","Fragments":["I"]},{"Key":"improvement I","Fragments":["haven't"]},{"Key":"haven't seen.","Fragments":["Please"]},{"Key":"seen. Please","Fragments":["let"]},{"Key":"feedback. There's","Fragments":["probably"]},{"Key":"There's probably","Fragments":["limited"]},{"Key":"probably limited","Fragments":["cases"]},{"Key":"limited cases","Fragments":["where"]},{"Key":"cases where","Fragments":["I'm","I","the","someone"]},{"Key":"where I'm","Fragments":["actually"]},{"Key":"actually going","Fragments":["to"]},{"Key":"performance benefits","Fragments":["from"]},{"Key":"benefits from","Fragments":["a"]},{"Key":"single iteration,","Fragments":["and"]},{"Key":"iteration, and","Fragments":["with"]},{"Key":"of tests","Fragments":["in","and"]},{"Key":"tests in","Fragments":["Bob,"]},{"Key":"in Bob,","Fragments":["there's"]},{"Key":"Bob, there's","Fragments":["probably"]},{"Key":"there's probably","Fragments":["many"]},{"Key":"probably many","Fragments":["cases"]},{"Key":"many cases","Fragments":["where"]},{"Key":"have messed","Fragments":["up"]},{"Key":"messed up","Fragments":["so"]},{"Key":"up so","Fragments":["it"]},{"Key":"break it","Fragments":["out"]},{"Key":"(or use","Fragments":["the"]},{"Key":"The indentation","Fragments":["looked"]},{"Key":"indentation looked","Fragments":["fine"]},{"Key":"looked fine","Fragments":["when"]},{"Key":"fine when","Fragments":["I"]},{"Key":"submitted it,","Fragments":["but"]},{"Key":"but looking","Fragments":["at"]},{"Key":"file it","Fragments":["looks"]},{"Key":"like I've","Fragments":["mixed"]},{"Key":"I've mixed","Fragments":["tabs"]},{"Key":"mixed tabs","Fragments":["and"]},{"Key":"and spaces","Fragments":["which"]},{"Key":"spaces which","Fragments":["is"]},{"Key":"why it","Fragments":["looks"]},{"Key":" (!std::isalpha(*it))","Fragments":["||"]},{"Key":"(!std::isalpha(*it)) ||","Fragments":["std::isupper(*it)"]},{"Key":"Is a","Fragments":["good"]},{"Key":"good suggestion,","Fragments":["I'll"]},{"Key":"suggestion, I'll","Fragments":["most","take"]},{"Key":"I'll most","Fragments":["likely"]},{"Key":"likely change","Fragments":["to"]},{"Key":"a future","Fragments":["revision."]},{"Key":"also return","Fragments":["true"]},{"Key":"for non-letter","Fragments":["characters","characters."]},{"Key":"non-letter characters","Fragments":["(spaces,"]},{"Key":"characters (spaces,","Fragments":["numbers,"]},{"Key":"(spaces, numbers,","Fragments":["etc)."]},{"Key":" Was","Fragments":["going"]},{"Key":"Was going","Fragments":["to"]},{"Key":"down a","Fragments":["character"]},{"Key":"matching routine","Fragments":["like"]},{"Key":"routine like","Fragments":["I"]},{"Key":"did with","Fragments":["Bob,"]},{"Key":"with Bob,","Fragments":["but"]},{"Key":"Bob, but","Fragments":["decided"]},{"Key":"with regex","Fragments":["libraries","matching.","but"]},{"Key":"libraries that","Fragments":["I"]},{"Key":"other submitters","Fragments":["use"]},{"Key":"submitters use","Fragments":["with"]},{"Key":"with Bob.","Fragments":["My"]},{"Key":"Bob. My","Fragments":["local"]},{"Key":"My local","Fragments":["gcc"]},{"Key":"local gcc","Fragments":["didn't"]},{"Key":"gcc didn't","Fragments":["have"]},{"Key":"full version","Fragments":["of"]},{"Key":"of c++11,","Fragments":["so"]},{"Key":"c++11, so","Fragments":["I"]},{"Key":"regex libraries.","Fragments":["This"]},{"Key":"libraries. This","Fragments":["was"]},{"Key":"was actually","Fragments":["my","performing"]},{"Key":"actually my","Fragments":["first"]},{"Key":"a c++","Fragments":["program,"]},{"Key":"c++ program,","Fragments":["so"]},{"Key":"program, so","Fragments":["it"]},{"Key":"it took","Fragments":["me"]},{"Key":"me considerably","Fragments":["longer"]},{"Key":"considerably longer","Fragments":["to"]},{"Key":"get right.","Fragments":["Any"]},{"Key":"right. Any","Fragments":["suggestions"]},{"Key":"Any suggestions","Fragments":["on"]},{"Key":"my approach","Fragments":["or"]},{"Key":"approach or","Fragments":["how"]},{"Key":"or how","Fragments":["I"]},{"Key":"better would","Fragments":["be"]},{"Key":"the stringstream","Fragments":["approach"]},{"Key":"stringstream approach","Fragments":["to"]},{"Key":"to tokenizing","Fragments":["the"]},{"Key":"it removed","Fragments":["the"]},{"Key":"any further","Fragments":["imports"]},{"Key":"further imports","Fragments":["(no"]},{"Key":"imports (no","Fragments":["need"]},{"Key":"(no need","Fragments":["for","for"]},{"Key":"(See https://stackoverflow.com/questions/236129/how-to-split-a-string-in-c","Fragments":["for"]},{"Key":"https://stackoverflow.com/questions/236129/how-to-split-a-string-in-c for","Fragments":["a"]},{"Key":"good overview","Fragments":["of"]},{"Key":"overview of","Fragments":["all"]},{"Key":"about splitting","Fragments":["strings)."]},{"Key":"would reduce","Fragments":["the"]},{"Key":"times the","Fragments":["function"]},{"Key":"called to","Fragments":["once"]},{"Key":"to once","Fragments":["for"]},{"Key":"of n","Fragments":["times"]},{"Key":"n times","Fragments":["where"]},{"Key":"times where","Fragments":["n"]},{"Key":"where n","Fragments":["is"]},{"Key":"n is","Fragments":["the"]},{"Key":"remove some","Fragments":["of","of"]},{"Key":"explicit iterator","Fragments":["declarations"]},{"Key":"iterator declarations","Fragments":["in"]},{"Key":"declarations in","Fragments":["the"]},{"Key":"the shout","Fragments":["function"]},{"Key":"shout function","Fragments":["by"]},{"Key":"new ranged","Fragments":["for"]},{"Key":"ranged for","Fragments":["loop"]},{"Key":"loop construct","Fragments":["in"]},{"Key":"C++11. ie","Fragments":["```for"]},{"Key":"ie ```for","Fragments":["(char"]},{"Key":"```for (char","Fragments":["c","ch"]},{"Key":": text)","Fragments":["{"]},{"Key":"text) {","Fragments":["..."]},{"Key":"{ ...","Fragments":["}```.","}```."]},{"Key":"quick comment:","Fragments":["according"]},{"Key":"comment: according","Fragments":["to"]},{"Key":"the specification,","Fragments":["if"]},{"Key":"specification, if","Fragments":["the"]},{"Key":"the strands","Fragments":["are","are"]},{"Key":"strands are","Fragments":["different","of"]},{"Key":"are different","Fragments":["lengths","sizes.","sizes."]},{"Key":"different lengths","Fragments":["you"]},{"Key":"lengths you","Fragments":["were"]},{"Key":"were supposed","Fragments":["to"]},{"Key":"extra length,","Fragments":["not"]},{"Key":"a quirk","Fragments":["of"]},{"Key":"quirk of","Fragments":["the"]},{"Key":"suite that","Fragments":["they"]},{"Key":"they both","Fragments":["happen","aren't"]},{"Key":"both happen","Fragments":["to"]},{"Key":"happen to","Fragments":["be"]},{"Key":"I altered","Fragments":["the"]},{"Key":"altered the","Fragments":["code"]},{"Key":"avoid behind-the-scenes","Fragments":["data"]},{"Key":"behind-the-scenes data","Fragments":["shuffling."]},{"Key":"data shuffling.","Fragments":["In"]},{"Key":"shuffling. In","Fragments":["addition,"]},{"Key":"addition, the","Fragments":["string"]},{"Key":"reference so","Fragments":["as"]},{"Key":"to introduce","Fragments":["a","recursion"]},{"Key":"introduce a","Fragments":["new"]},{"Key":"state variable","Fragments":["`empty`"]},{"Key":"variable `empty`","Fragments":["because"]},{"Key":"`empty` because","Fragments":["of"]},{"Key":"the above","Fragments":["changes."]},{"Key":"loop structure","Fragments":["to"]},{"Key":"structure to","Fragments":["use","add"]},{"Key":"iteration form,","Fragments":["while"]},{"Key":"form, while","Fragments":["modifying"]},{"Key":"while modifying","Fragments":["the"]},{"Key":"tests within","Fragments":["it."]},{"Key":"within it.","Fragments":["I"]},{"Key":"opted not","Fragments":["to"]},{"Key":"to nest","Fragments":["the"]},{"Key":"nest the","Fragments":["`islower`"]},{"Key":"the `islower`","Fragments":["test"]},{"Key":"`islower` test","Fragments":["within"]},{"Key":"test within","Fragments":["the"]},{"Key":"the `isalpha`","Fragments":["block,"]},{"Key":"`isalpha` block,","Fragments":["since"]},{"Key":"block, since","Fragments":["the"]},{"Key":"the majority","Fragments":["of"]},{"Key":"given message","Fragments":["will"]},{"Key":"message will","Fragments":["be"]},{"Key":"be characters","Fragments":["rather"]},{"Key":"characters rather","Fragments":["than"]},{"Key":"than punctuation","Fragments":["or"]},{"Key":"Using `char","Fragments":["c`"]},{"Key":"`char c`","Fragments":["rather"]},{"Key":"c` rather","Fragments":["than"]},{"Key":"than `auto","Fragments":["c`"]},{"Key":"`auto c`","Fragments":["has"]},{"Key":"c` has","Fragments":["no"]},{"Key":"no major","Fragments":["importance."]},{"Key":"major importance.","Fragments":["I"]},{"Key":"importance. I","Fragments":["just"]},{"Key":"it kept","Fragments":["the"]},{"Key":"readability a","Fragments":["small"]},{"Key":"small degree","Fragments":["higher."]},{"Key":"code will","Fragments":["print","work"]},{"Key":"will print","Fragments":["\"Sure.\""]},{"Key":"print \"Sure.\"","Fragments":["for"]},{"Key":"\"Sure.\" for","Fragments":["a"]},{"Key":"but ending","Fragments":["with"]},{"Key":"mark. I","Fragments":["would"]},{"Key":"would interpret","Fragments":["such"]},{"Key":"interpret such","Fragments":["a"]},{"Key":"a quizzical","Fragments":["look."]},{"Key":"iterator not","Fragments":["being"]},{"Key":"not being","Fragments":["declared"]},{"Key":"being declared","Fragments":["as"]},{"Key":"as part","Fragments":["of"]},{"Key":"the for-loop","Fragments":["was"]},{"Key":"for-loop was","Fragments":["an"]},{"Key":"an artifact","Fragments":["from"]},{"Key":"artifact from","Fragments":["when"]},{"Key":"from when","Fragments":["I"]},{"Key":"to reuse","Fragments":["the"]},{"Key":"reuse the","Fragments":["iterator.","code"]},{"Key":"iterator. Most","Fragments":["of"]},{"Key":"my recent","Fragments":["work"]},{"Key":"recent work","Fragments":["with"]},{"Key":"with vectors","Fragments":["required"]},{"Key":"vectors required","Fragments":["multiple"]},{"Key":"required multiple","Fragments":["passes,"]},{"Key":"multiple passes,","Fragments":["so"]},{"Key":"passes, so","Fragments":["I"]},{"Key":"got into","Fragments":["the"]},{"Key":"the habit","Fragments":["of","of"]},{"Key":"habit of","Fragments":["reusing","writing","commenting"]},{"Key":"of reusing","Fragments":["iterators"]},{"Key":"reusing iterators","Fragments":["by"]},{"Key":"iterators by","Fragments":["declaring"]},{"Key":"by declaring","Fragments":["them"]},{"Key":"them outside","Fragments":["of"]},{"Key":"was aiming","Fragments":["for"]},{"Key":"aiming for","Fragments":["a"]},{"Key":"a highly-readable","Fragments":["implementation."]},{"Key":"highly-readable implementation.","Fragments":["That"]},{"Key":"implementation. That","Fragments":["is,"]},{"Key":"is, one","Fragments":["being"]},{"Key":"one being","Fragments":["clear"]},{"Key":"being clear","Fragments":["about"]},{"Key":"clear about","Fragments":["its"]},{"Key":"I reworked","Fragments":["the","this"]},{"Key":"reworked the","Fragments":["code"]},{"Key":"Just my","Fragments":["2","bias"]},{"Key":"my 2","Fragments":["cents."]},{"Key":"2 cents.","Fragments":["I"]},{"Key":"cents. I","Fragments":["have"]},{"Key":"of solutions","Fragments":["on"]},{"Key":"solutions on","Fragments":["here"]},{"Key":"on here","Fragments":["use"]},{"Key":"here use","Fragments":["a","boost)."]},{"Key":"a recursive","Fragments":["call","call"]},{"Key":"argument order","Fragments":["like"]},{"Key":"order like","Fragments":["you"]},{"Key":"you have.","Fragments":["I"]},{"Key":"have. I","Fragments":["am"]},{"Key":"am generally","Fragments":["cautious"]},{"Key":"generally cautious","Fragments":["to"]},{"Key":"cautious to","Fragments":["introduce"]},{"Key":"introduce recursion","Fragments":["for"]},{"Key":"recursion for","Fragments":["things"]},{"Key":"for things","Fragments":["like"]},{"Key":"always found","Fragments":["maintaining"]},{"Key":"found maintaining","Fragments":["it"]},{"Key":"maintaining it","Fragments":["just"]},{"Key":"just that","Fragments":["little"]},{"Key":"that little","Fragments":["bit"]},{"Key":"bit harder.","Fragments":["This"]},{"Key":"harder. This","Fragments":["includes"]},{"Key":"This includes","Fragments":["code"]},{"Key":"includes code","Fragments":["written"]},{"Key":"code written","Fragments":["by"]},{"Key":"written by","Fragments":["myself"]},{"Key":"by myself","Fragments":["and"]},{"Key":"myself and","Fragments":["my"]},{"Key":"and my","Fragments":["peers"]},{"Key":"my peers","Fragments":["in"]},{"Key":"peers in","Fragments":["this"]},{"Key":"My preferred","Fragments":["choice"]},{"Key":"preferred choice","Fragments":["in"]},{"Key":"choice in","Fragments":["this"]},{"Key":"case (keeping","Fragments":["the"]},{"Key":"(keeping the","Fragments":["algorithm"]},{"Key":"algorithm the","Fragments":["same)"]},{"Key":"the same)","Fragments":["would"]},{"Key":"same) would","Fragments":["be"]},{"Key":"to defer","Fragments":["the"]},{"Key":"defer the","Fragments":["computation"]},{"Key":"the computation","Fragments":["to"]},{"Key":"computation to","Fragments":["a"]},{"Key":"helper ```compute_impl()```","Fragments":["function"]},{"Key":"```compute_impl()``` function","Fragments":["and"]},{"Key":"initial ```compute()```","Fragments":["function"]},{"Key":"```compute()``` function","Fragments":["perform"]},{"Key":"test and","Fragments":["call","I"]},{"Key":"and call","Fragments":["the"]},{"Key":"helper with","Fragments":["the"]},{"Key":"arguments in","Fragments":["the"]},{"Key":"Nice work.","Fragments":["As","You"]},{"Key":"work. As","Fragments":["a"]},{"Key":"a minor","Fragments":["maintenance","readability"]},{"Key":"minor maintenance","Fragments":["thing"]},{"Key":"maintenance thing","Fragments":["you"]},{"Key":"have left","Fragments":["in"]},{"Key":"left in","Fragments":["a"]},{"Key":"variable that","Fragments":["I"]},{"Key":"I suspect","Fragments":["was","that","it'll"]},{"Key":"suspect was","Fragments":["part"]},{"Key":"was part","Fragments":["of","of"]},{"Key":"a previous","Fragments":["attempt"]},{"Key":"previous attempt","Fragments":["```boost::smatch"]},{"Key":"attempt ```boost::smatch","Fragments":["results;```."]},{"Key":"an increment","Fragments":["operator"]},{"Key":"increment operator","Fragments":["when"]},{"Key":"operator when","Fragments":["increasing"]},{"Key":"when increasing","Fragments":["the"]},{"Key":"increasing the","Fragments":["word"]},{"Key":"than have","Fragments":["several"]},{"Key":"have several","Fragments":["of"]},{"Key":"several of","Fragments":["your"]},{"Key":"your members","Fragments":["perform"]},{"Key":"members perform","Fragments":["tests"]},{"Key":"perform tests","Fragments":["on"]},{"Key":"tests on","Fragments":["the"]},{"Key":"string, how","Fragments":["about"]},{"Key":"how about","Fragments":["iterating"]},{"Key":"about iterating","Fragments":["over"]},{"Key":"over it","Fragments":["only"]},{"Key":"your iteration","Fragments":["to"]},{"Key":"iteration to","Fragments":["the"]},{"Key":"constructor or","Fragments":["a"]},{"Key":"private method","Fragments":["called"]},{"Key":"method called","Fragments":["by"]},{"Key":"called by","Fragments":["the","your"]},{"Key":"the constructor.","Fragments":["From","The"]},{"Key":"constructor. From","Fragments":["within,"]},{"Key":"From within,","Fragments":["it"]},{"Key":"within, it","Fragments":["can"]},{"Key":"can set","Fragments":["some"]},{"Key":"set some","Fragments":["member"]},{"Key":"some member","Fragments":["variables"]},{"Key":"member variables","Fragments":["to","should"]},{"Key":"indicate the","Fragments":["qualities"]},{"Key":"the qualities","Fragments":["the"]},{"Key":"qualities the","Fragments":["string"]},{"Key":"string expresses.","Fragments":["Then"]},{"Key":"expresses. Then","Fragments":["your"]},{"Key":"Then your","Fragments":["helpers"]},{"Key":"your helpers","Fragments":["which"]},{"Key":"helpers which","Fragments":["are"]},{"Key":"are called","Fragments":["by"]},{"Key":"can return","Fragments":["simple"]},{"Key":"return simple","Fragments":["boolean"]},{"Key":"simple boolean","Fragments":["expressions."]},{"Key":"Also, have","Fragments":["you"]},{"Key":"considered iterators","Fragments":["as"]},{"Key":"iterators as","Fragments":["an"]},{"Key":"to indexing","Fragments":["into"]},{"Key":"indexing into","Fragments":["the"]},{"Key":"Consider changing","Fragments":["your"]},{"Key":"changing your","Fragments":["constructor"]},{"Key":"your constructor","Fragments":["argument","instead"]},{"Key":"constructor argument","Fragments":["to","could"]},{"Key":"to ```const","Fragments":["std::string"]},{"Key":"```const std::string","Fragments":["\u0026```","\u0026```"]},{"Key":"std::string \u0026```","Fragments":["as","to"]},{"Key":"\u0026``` as","Fragments":["this"]},{"Key":"as this","Fragments":["is","problem","trumps"]},{"Key":"better C++","Fragments":["style.","if"]},{"Key":"C++ style.","Fragments":["An"]},{"Key":"style. An","Fragments":["input"]},{"Key":"An input","Fragments":["of"]},{"Key":"of ```const","Fragments":["char"]},{"Key":"```const char","Fragments":["*```","*```."]},{"Key":"char *```","Fragments":["will"]},{"Key":"*``` will","Fragments":["be"]},{"Key":"be implicitly","Fragments":["converted"]},{"Key":"implicitly converted","Fragments":["so"]},{"Key":"converted so","Fragments":["the"]},{"Key":"tests all","Fragments":["work."]},{"Key":"all work.","Fragments":["You"]},{"Key":"work. You","Fragments":["then","should"]},{"Key":"You then","Fragments":["will"]},{"Key":"then will","Fragments":["have"]},{"Key":"have access","Fragments":["to"]},{"Key":"access to","Fragments":["string","the"]},{"Key":"string member","Fragments":["functions"]},{"Key":"member functions","Fragments":["such"]},{"Key":"functions such","Fragments":["as"]},{"Key":"as length()","Fragments":["to"]},{"Key":"to construct","Fragments":["your"]},{"Key":"construct your","Fragments":["loop"]},{"Key":"can initialise","Fragments":["```dnaResult```"]},{"Key":"initialise ```dnaResult```","Fragments":["in"]},{"Key":"```dnaResult``` in","Fragments":["a"]},{"Key":"a constructor","Fragments":["initialisation","initialization","initialiser","is","of","I"]},{"Key":"constructor initialisation","Fragments":["list."]},{"Key":"initialisation list.","Fragments":["```counter(const"]},{"Key":"list. ```counter(const","Fragments":["std::string"]},{"Key":"```counter(const std::string","Fragments":["\u0026strand)"]},{"Key":"std::string \u0026strand)","Fragments":[":"]},{"Key":"\u0026strand) :","Fragments":["dnaResult{{'A',0},...}"]},{"Key":": dnaResult{{'A',0},...}","Fragments":["{"]},{"Key":"dnaResult{{'A',0},...} {","Fragments":["/*"]},{"Key":"{ /*","Fragments":["other"]},{"Key":"/* other","Fragments":["code"]},{"Key":"other code","Fragments":["here","too"]},{"Key":"here */","Fragments":["}```."]},{"Key":"*/ }```.","Fragments":["This"]},{"Key":"}```. This","Fragments":["avoids"]},{"Key":"avoids the","Fragments":["first"]},{"Key":"first default","Fragments":["construction"]},{"Key":"default construction","Fragments":["followed"]},{"Key":"construction followed","Fragments":["by"]},{"Key":"your initialisation","Fragments":["into"]},{"Key":"initialisation into","Fragments":["a"]},{"Key":"My comments","Fragments":["are"]},{"Key":"are regarding","Fragments":["style"]},{"Key":"regarding style","Fragments":["more"]},{"Key":"style more","Fragments":["so"]},{"Key":"more so","Fragments":["than"]},{"Key":"so than","Fragments":["content,"]},{"Key":"than content,","Fragments":["due"]},{"Key":"content, due","Fragments":["to"]},{"Key":"the scale","Fragments":["of"]},{"Key":"scale of","Fragments":["this"]},{"Key":"this project.","Fragments":["Your"]},{"Key":"project. Your","Fragments":["code"]},{"Key":"pretty clean","Fragments":["overall."]},{"Key":" ####","Fragments":["Variables","Structure"]},{"Key":" Firstly,","Fragments":["you"]},{"Key":"Firstly, you","Fragments":["might"]},{"Key":"rename the","Fragments":["string"]},{"Key":"string variable","Fragments":["to"]},{"Key":"variable to","Fragments":["something","get"]},{"Key":"less mystifying.","Fragments":["The"]},{"Key":"mystifying. The","Fragments":["names"]},{"Key":"names `str'","Fragments":["and"]},{"Key":"`str' and","Fragments":["'msg'"]},{"Key":"and 'msg'","Fragments":["are"]},{"Key":"'msg' are","Fragments":["very"]},{"Key":"very common","Fragments":["in","task,"]},{"Key":"common in","Fragments":["code"]},{"Key":"in code","Fragments":["I","comment"]},{"Key":"code I","Fragments":["have","think","have"]},{"Key":"have come","Fragments":["across,"]},{"Key":"come across,","Fragments":["and"]},{"Key":"across, and","Fragments":["they"]},{"Key":"Your flag","Fragments":["`one_uppercase`"]},{"Key":"flag `one_uppercase`","Fragments":["may"]},{"Key":"`one_uppercase` may","Fragments":["be"]},{"Key":"be somewhat","Fragments":["misleading"]},{"Key":"somewhat misleading","Fragments":["in"]},{"Key":"misleading in","Fragments":["its"]},{"Key":"While using","Fragments":["a"]},{"Key":"a counter-based","Fragments":["for-loop"]},{"Key":"counter-based for-loop","Fragments":["is"]},{"Key":"for-loop is","Fragments":["perfectly"]},{"Key":"is perfectly","Fragments":["acceptable,"]},{"Key":"perfectly acceptable,","Fragments":["you"]},{"Key":"acceptable, you","Fragments":["might"]},{"Key":"iterator since","Fragments":["the"]},{"Key":"a container","Fragments":["object."]},{"Key":"container object.","Fragments":["Another"]},{"Key":"object. Another","Fragments":["option"]},{"Key":"the [C++11","Fragments":["range-based"]},{"Key":"[C++11 range-based","Fragments":["for-loop](http://en.wikipedia.org/wiki/C%2B%2B11#Range-based_for_loop)."]},{"Key":"In your","Fragments":["loop","constructor","checkQuestion","checkYell","checkSilence","```add()```"]},{"Key":"loop you","Fragments":["have"]},{"Key":"have as","Fragments":["the"]},{"Key":"condition `shouting","Fragments":["\u0026\u0026"]},{"Key":"`shouting \u0026\u0026","Fragments":["i"]},{"Key":"\u0026\u0026 i","Fragments":["\u003c"]},{"Key":"\u003c something.length()`.","Fragments":["Are"]},{"Key":"something.length()`. Are","Fragments":["you"]},{"Key":"you attempting","Fragments":["early"]},{"Key":"attempting early","Fragments":["termination"]},{"Key":"early termination","Fragments":["of"]},{"Key":"termination of","Fragments":["the"]},{"Key":"the loop?","Fragments":["If"]},{"Key":"loop? If","Fragments":["so,"]},{"Key":"If so,","Fragments":["a","is"]},{"Key":"so, a","Fragments":["`break`"]},{"Key":"a `break`","Fragments":["statement"]},{"Key":"`break` statement","Fragments":["within"]},{"Key":"statement within","Fragments":["the"]},{"Key":"loop body","Fragments":["may","makes"]},{"Key":"body may","Fragments":["be"]},{"Key":"string, which","Fragments":["seems","should"]},{"Key":"which seems","Fragments":["to"]},{"Key":"idea since","Fragments":["you"]},{"Key":"before trimming","Fragments":["whitespace,"]},{"Key":"trimming whitespace,","Fragments":["you"]},{"Key":"whitespace, you","Fragments":["may"]},{"Key":"state as","Fragments":["such"]},{"Key":"as such","Fragments":["by"]},{"Key":"such by","Fragments":["adding"]},{"Key":"const qualifier","Fragments":["to"]},{"Key":"qualifier to","Fragments":["your"]},{"Key":"You test","Fragments":["if"]},{"Key":"empty by","Fragments":["checking"]},{"Key":"checking its","Fragments":["length,"]},{"Key":"its length,","Fragments":["but"]},{"Key":"length, but","Fragments":["the"]},{"Key":"string class","Fragments":["has","constructor."]},{"Key":"function called","Fragments":["`empty()`"]},{"Key":"called `empty()`","Fragments":["which"]},{"Key":"`empty()` which","Fragments":["does"]},{"Key":"does just","Fragments":["that."]},{"Key":" Finally,","Fragments":["since","as","using"]},{"Key":"Finally, since","Fragments":["your","you","you"]},{"Key":"your return","Fragments":["type"]},{"Key":"type for","Fragments":["the"]},{"Key":"simply return","Fragments":["a","the","false."]},{"Key":"string literal.","Fragments":["It"]},{"Key":"literal. It","Fragments":["will"]},{"Key":"It will","Fragments":["be"]},{"Key":"passed through","Fragments":["the"]},{"Key":"Nice solution.","Fragments":["Two"]},{"Key":"solution. Two","Fragments":["small"]},{"Key":"Two small","Fragments":["suggestions."]},{"Key":"the resulting","Fragments":["iterator"]},{"Key":"resulting iterator","Fragments":["from"]},{"Key":"iterator from","Fragments":["the"]},{"Key":"to find()","Fragments":["instead"]},{"Key":"find() instead","Fragments":["of"]},{"Key":"to reindex","Fragments":["into"]},{"Key":"reindex into","Fragments":["the"]},{"Key":"Consider using","Fragments":["a","```std::transform(...,"]},{"Key":"constructor initialization","Fragments":["list"]},{"Key":"initialization list","Fragments":["to","of","you"]},{"Key":"list to","Fragments":["setup"]},{"Key":"to setup","Fragments":["the","your"]},{"Key":"setup the","Fragments":["member"]},{"Key":"Don't give","Fragments":["up,"]},{"Key":"give up,","Fragments":["ConorBrewster!"]},{"Key":"up, ConorBrewster!","Fragments":["You"]},{"Key":"ConorBrewster! You","Fragments":["can"]},{"Key":"think `!std::islower(*it)`","Fragments":["is"]},{"Key":"`!std::islower(*it)` is","Fragments":["equivalent"]},{"Key":"to `(!std::isalpha(*it))","Fragments":["||"]},{"Key":"|| std::isupper(*it)`","Fragments":["in"]},{"Key":"std::isupper(*it)` in","Fragments":["that"]},{"Key":"them return","Fragments":["true"]},{"Key":" Thought","Fragments":["I","I"]},{"Key":"Thought I","Fragments":["might","might"]},{"Key":"an answer","Fragments":["different"]},{"Key":"answer different","Fragments":["to"]},{"Key":"different to","Fragments":["many"]},{"Key":"many others.","Fragments":["This"]},{"Key":"others. This","Fragments":["isn't"]},{"Key":"This isn't","Fragments":["the"]},{"Key":"readable solution","Fragments":["however"]},{"Key":"however thanks","Fragments":["to"]},{"Key":"the specific","Fragments":["characters"]},{"Key":"specific characters","Fragments":["being"]},{"Key":"characters being","Fragments":["used"]},{"Key":"being used","Fragments":["there","twice,"]},{"Key":"used there","Fragments":["is"]},{"Key":"a reasonably","Fragments":["simple"]},{"Key":"reasonably simple","Fragments":["bit"]},{"Key":"simple bit","Fragments":["transformation"]},{"Key":"bit transformation","Fragments":["between"]},{"Key":"transformation between","Fragments":["them."]},{"Key":"between them.","Fragments":["Instead"]},{"Key":"them. Instead","Fragments":["of"]},{"Key":"statement I","Fragments":["can"]},{"Key":"get away","Fragments":["with"]},{"Key":"away with","Fragments":["only"]},{"Key":"single character","Fragments":["comparison"]},{"Key":"character comparison","Fragments":["to"]},{"Key":"comparison to","Fragments":["determine"]},{"Key":"correct masks","Fragments":["for"]},{"Key":"masks for","Fragments":["the"]},{"Key":"will admit","Fragments":["readability,"]},{"Key":"admit readability,","Fragments":["maintainability"]},{"Key":"readability, maintainability","Fragments":["and"]},{"Key":"maintainability and","Fragments":["extensibility"]},{"Key":"and extensibility","Fragments":["are"]},{"Key":"extensibility are","Fragments":["almost"]},{"Key":"are almost","Fragments":["impossible"]},{"Key":"almost impossible","Fragments":["with"]},{"Key":"impossible with","Fragments":["this"]},{"Key":"this design.","Fragments":["Comments"]},{"Key":"design. Comments","Fragments":["are"]},{"Key":"Comments are","Fragments":["still"]},{"Key":"are still","Fragments":["welcome."]},{"Key":"using stringstreams","Fragments":["and"]},{"Key":"stringstreams and","Fragments":["minimizing"]},{"Key":"and minimizing","Fragments":["library"]},{"Key":"minimizing library","Fragments":["dependencies"]},{"Key":"library dependencies","Fragments":["by"]},{"Key":"dependencies by","Fragments":["using"]},{"Key":"sure your","Fragments":["solution"]},{"Key":"is complete.","Fragments":["When"]},{"Key":"complete. When","Fragments":["I"]},{"Key":"it locally,","Fragments":["it"]},{"Key":"locally, it","Fragments":["get's"]},{"Key":"it get's","Fragments":["caught"]},{"Key":"get's caught","Fragments":["on"]},{"Key":"caught on","Fragments":["the"]},{"Key":"the ignores_punctuation","Fragments":["test"]},{"Key":"ignores_punctuation test","Fragments":["(test4),"]},{"Key":"test (test4),","Fragments":["and"]},{"Key":"(test4), and","Fragments":["I'm"]},{"Key":"sure it'll","Fragments":["pass"]},{"Key":"it'll pass","Fragments":["the"]},{"Key":"the ones","Fragments":["below"]},{"Key":"ones below","Fragments":["it"]},{"Key":"below it","Fragments":["either."]},{"Key":"Just wrote","Fragments":["the"]},{"Key":"to mind.","Fragments":["The"]},{"Key":"The formatted","Fragments":["output"]},{"Key":"output by","Fragments":["calling"]},{"Key":"by calling","Fragments":["```substr()```"]},{"Key":"calling ```substr()```","Fragments":["multiple"]},{"Key":"```substr()``` multiple","Fragments":["times"]},{"Key":"times doesn't","Fragments":["seem"]},{"Key":"seem that","Fragments":["great"]},{"Key":"that great","Fragments":["but"]},{"Key":"great but","Fragments":["might"]},{"Key":"might at","Fragments":["least"]},{"Key":"least be","Fragments":["clear."]},{"Key":" Maintained","Fragments":["the"]},{"Key":"Maintained the","Fragments":["sorted"]},{"Key":"sorted order","Fragments":["of"]},{"Key":"the names","Fragments":["as","from","it","up"]},{"Key":"names as","Fragments":["they"]},{"Key":"were inserted","Fragments":["into"]},{"Key":"into each","Fragments":["list."]},{"Key":"each list.","Fragments":["Used"]},{"Key":"list. Used","Fragments":["an"]},{"Key":"Used an","Fragments":["early"]},{"Key":"early return","Fragments":["from"]},{"Key":"loop so","Fragments":["that"]},{"Key":"to push_back","Fragments":["without"]},{"Key":"push_back without","Fragments":["a"]},{"Key":"static variables","Fragments":["for"]},{"Key":"the local","Fragments":["generate"]},{"Key":"local generate","Fragments":["function"]},{"Key":"generate function","Fragments":["doesn't"]},{"Key":"very C++","Fragments":["but"]},{"Key":"C++ but","Fragments":["it"]},{"Key":"it meets","Fragments":["the"]},{"Key":"meets the","Fragments":["requirements."]},{"Key":"the requirements.","Fragments":["Yes"]},{"Key":"requirements. Yes","Fragments":["this"]},{"Key":"Yes this","Fragments":["doesn't"]},{"Key":"doesn't wrap","Fragments":["the"]},{"Key":"wrap the","Fragments":["character"]},{"Key":"character part","Fragments":["of"]},{"Key":"wrote two","Fragments":["versions"]},{"Key":"two versions","Fragments":["one"]},{"Key":"versions one","Fragments":["with"]},{"Key":"with STL","Fragments":["and"]},{"Key":"with Boost.","Fragments":["Although"]},{"Key":"Boost. Although","Fragments":["they"]},{"Key":"Although they","Fragments":["pass"]},{"Key":"they pass","Fragments":["the"]},{"Key":"tests I'm","Fragments":["not"]},{"Key":"convinced they","Fragments":["really"]},{"Key":"really work","Fragments":["100%."]},{"Key":"work 100%.","Fragments":["Perhaps"]},{"Key":"100%. Perhaps","Fragments":["the"]},{"Key":"Perhaps the","Fragments":["strings"]},{"Key":"strings for","Fragments":["the"]},{"Key":"regex separators","Fragments":["need"]},{"Key":"separators need","Fragments":["some"]},{"Key":"need some","Fragments":["of","explanation"]},{"Key":"characters escaping","Fragments":["?"]},{"Key":"good solution","Fragments":["if"]},{"Key":"whole ```static_cast\u003c\u003e```","Fragments":["on"]},{"Key":"```static_cast\u003c\u003e``` on","Fragments":["the"]},{"Key":"function pointer.","Fragments":["I"]},{"Key":"pointer. I","Fragments":["think"]},{"Key":"think with","Fragments":["the"]},{"Key":"new for","Fragments":["range"]},{"Key":"for range","Fragments":["syntax"]},{"Key":"range syntax","Fragments":["you"]},{"Key":"syntax you","Fragments":["can"]},{"Key":"can write","Fragments":["something","very"]},{"Key":"something just","Fragments":["as"]},{"Key":"very elaborate","Fragments":["solution"]},{"Key":"elaborate solution","Fragments":["and"]},{"Key":"interesting use","Fragments":["of"]},{"Key":"the random","Fragments":["library.","nature"]},{"Key":"random library.","Fragments":["The"]},{"Key":"library. The","Fragments":["use"]},{"Key":"of random","Fragments":["device","numbers"]},{"Key":"random device","Fragments":["is"]},{"Key":"device is","Fragments":["questionable.","used"]},{"Key":"is questionable.","Fragments":["Random"]},{"Key":"questionable. Random","Fragments":["device"]},{"Key":"Random device","Fragments":["is"]},{"Key":"a 'true'","Fragments":["source"]},{"Key":"'true' source","Fragments":["of"]},{"Key":"source of","Fragments":["random","bugs."]},{"Key":"random numbers","Fragments":["instead"]},{"Key":"numbers instead","Fragments":["of"]},{"Key":"a psudo-random","Fragments":["set.","number"]},{"Key":"psudo-random set.","Fragments":["But"]},{"Key":"set. But","Fragments":["this"]},{"Key":"is left","Fragments":["to"]},{"Key":"left to","Fragments":["the"]},{"Key":"library implementation","Fragments":["so"]},{"Key":"implementation so","Fragments":["could"]},{"Key":"so could","Fragments":["just"]},{"Key":"an alias","Fragments":["for"]},{"Key":"alias for","Fragments":["an"]},{"Key":"an normal","Fragments":["generator"]},{"Key":"normal generator","Fragments":["anyway."]},{"Key":"The formatting","Fragments":["and"]},{"Key":"formatting and","Fragments":["heavy"]},{"Key":"and heavy","Fragments":["nesting"]},{"Key":"heavy nesting","Fragments":["of"]},{"Key":"nesting of","Fragments":["for"]},{"Key":"loops seems","Fragments":["like"]},{"Key":"maintenance nightmare","Fragments":["for"]},{"Key":"nightmare for","Fragments":["anyone"]},{"Key":"for anyone","Fragments":["who"]},{"Key":"anyone who","Fragments":["didn't"]},{"Key":"who didn't","Fragments":["write"]},{"Key":"didn't write","Fragments":["the"]},{"Key":"Yes, I","Fragments":["missed"]},{"Key":"missed removing","Fragments":["that"]},{"Key":"removing that","Fragments":["variable"]},{"Key":"that variable","Fragments":["during"]},{"Key":"variable during","Fragments":["clean"]},{"Key":"during clean","Fragments":["up."]},{"Key":"clean up.","Fragments":["Also"]},{"Key":"up. Also","Fragments":["didn't"]},{"Key":"Also didn't","Fragments":["realize"]},{"Key":"realize I","Fragments":["could"]},{"Key":"the increment","Fragments":["opperator"]},{"Key":"increment opperator","Fragments":["on"]},{"Key":"opperator on","Fragments":["a"]},{"Key":"map like","Fragments":["that."]},{"Key":"that. Thanks","Fragments":["for"]},{"Key":"tips, I've","Fragments":["made"]},{"Key":"I've made","Fragments":["the"]},{"Key":"the changes","Fragments":["locally","are"]},{"Key":"changes locally","Fragments":["and"]},{"Key":"locally and","Fragments":["everything"]},{"Key":"everything continue","Fragments":["to"]},{"Key":"the debug","Fragments":["```std::cout```"]},{"Key":"debug ```std::cout```","Fragments":["that"]},{"Key":"```std::cout``` that","Fragments":["is"]},{"Key":"still in","Fragments":["there."]},{"Key":"biggest issue","Fragments":["is"]},{"Key":"this leaks","Fragments":["memory."]},{"Key":"leaks memory.","Fragments":["The"]},{"Key":"memory. The","Fragments":["call"]},{"Key":"The call","Fragments":["to"]},{"Key":"to new","Fragments":["has"]},{"Key":"new has","Fragments":["no"]},{"Key":"no delete","Fragments":["to"]},{"Key":"delete to","Fragments":["match"]},{"Key":"match it.","Fragments":["You"]},{"Key":"it. You","Fragments":["should","duplicated"]},{"Key":"```std::string``` object","Fragments":["rather"]},{"Key":"object rather","Fragments":["than"]},{"Key":"than ```const","Fragments":["char"]},{"Key":"char *```.","Fragments":["That"]},{"Key":"*```. That","Fragments":["way"]},{"Key":"can declare","Fragments":["```retStrand```"]},{"Key":"declare ```retStrand```","Fragments":["on"]},{"Key":"```retStrand``` on","Fragments":["the"]},{"Key":"the stack","Fragments":["and"]},{"Key":"stack and","Fragments":["return"]},{"Key":"A 'switch'","Fragments":["statement"]},{"Key":"'switch' statement","Fragments":["may"]},{"Key":"statement may","Fragments":["be"]},{"Key":"more appropriate","Fragments":["here"]},{"Key":"appropriate here","Fragments":["than"]},{"Key":"here than","Fragments":["your"]},{"Key":"your sequential","Fragments":["'if'"]},{"Key":"sequential 'if'","Fragments":["conditions."]},{"Key":"tokenizer. I","Fragments":["spent"]},{"Key":"I spent","Fragments":["some","about"]},{"Key":"spent some","Fragments":["time"]},{"Key":"some time","Fragments":["playing"]},{"Key":"time playing","Fragments":["with"]},{"Key":"that capability","Fragments":["when"]},{"Key":"capability when","Fragments":["I"]},{"Key":"saw your","Fragments":["solution"]},{"Key":"solution as","Fragments":["I","the"]},{"Key":"wasn't familiar","Fragments":["with"]},{"Key":"that tokenizer's","Fragments":["default"]},{"Key":"tokenizer's default","Fragments":["option"]},{"Key":"default option","Fragments":["is"]},{"Key":"option is","Fragments":["to"]},{"Key":"to tokenize","Fragments":["on"]},{"Key":"tokenize on","Fragments":["words"]},{"Key":"on words","Fragments":["exactly"]},{"Key":"words exactly","Fragments":["as"]},{"Key":"exactly as","Fragments":["this"]},{"Key":"problem was","Fragments":["written."]},{"Key":"a nitpick","Fragments":["as"]},{"Key":"nitpick as","Fragments":["the"]},{"Key":"looks good,","Fragments":["works","but"]},{"Key":"good, works","Fragments":["and"]},{"Key":"and meets","Fragments":["all"]},{"Key":"meets all","Fragments":["the"]},{"Key":"tests. You","Fragments":["will"]},{"Key":"call out","Fragments":["the","for"]},{"Key":"the tokenizer","Fragments":["seperators"]},{"Key":"tokenizer seperators","Fragments":["specifically"]},{"Key":"seperators specifically","Fragments":["if"]},{"Key":"specifically if","Fragments":["tests"]},{"Key":"if tests","Fragments":["or"]},{"Key":"tests or","Fragments":["input"]},{"Key":"or input","Fragments":["start"]},{"Key":"input start","Fragments":["including"]},{"Key":"start including","Fragments":["words"]},{"Key":"including words","Fragments":["like"]},{"Key":"like \"she's\"","Fragments":["or","or"]},{"Key":"\"she's\" or","Fragments":["\"co-operate\"","\"co-operate\"."]},{"Key":"very clear","Fragments":["implementation,"]},{"Key":"clear implementation,","Fragments":["it"]},{"Key":"takes no","Fragments":["time"]},{"Key":"parse at","Fragments":["all."]},{"Key":"all. Which","Fragments":["is"]},{"Key":"Which is","Fragments":["a"]},{"Key":"with @dave.","Fragments":["It"]},{"Key":"@dave. It","Fragments":["would"]},{"Key":"would add","Fragments":["a"]},{"Key":"a touch","Fragments":["more"]},{"Key":"touch more","Fragments":["clarity."]},{"Key":"more clarity.","Fragments":["Either"]},{"Key":"clarity. Either","Fragments":["strip"]},{"Key":"Either strip","Fragments":["out"]},{"Key":"strip out","Fragments":["the"]},{"Key":"the ``str2Length``","Fragments":["variable"]},{"Key":"``str2Length`` variable","Fragments":["and"]},{"Key":"variable and","Fragments":["then","check"]},{"Key":"then also","Fragments":["check"]},{"Key":"check ``str2.length()``","Fragments":["in"]},{"Key":"``str2.length()`` in","Fragments":["the"]},{"Key":"loop condition,","Fragments":["or"]},{"Key":"condition, or","Fragments":["add"]},{"Key":"or add","Fragments":["a"]},{"Key":"new ``str1Length``","Fragments":["variable"]},{"Key":"``str1Length`` variable","Fragments":["and"]},{"Key":"that along","Fragments":["with"]},{"Key":"along with","Fragments":["``str2Length``","my","these"]},{"Key":"with ``str2Length``","Fragments":["in"]},{"Key":"``str2Length`` in","Fragments":["the"]},{"Key":"loop condition.","Fragments":["It's"]},{"Key":"condition. It's","Fragments":["debatable"]},{"Key":"It's debatable","Fragments":["which"]},{"Key":"debatable which","Fragments":["one"]},{"Key":"clear. Personally","Fragments":["I"]},{"Key":"Nice solution!","Fragments":["Concise,"]},{"Key":"solution! Concise,","Fragments":["and"]},{"Key":"Concise, and","Fragments":["very"]},{"Key":"and very","Fragments":["readable."]},{"Key":"of tokenizer.","Fragments":["The"]},{"Key":"tokenizer. The","Fragments":["default"]},{"Key":"default action","Fragments":["does"]},{"Key":"action does","Fragments":["exactly"]},{"Key":"does exactly","Fragments":["what"]},{"Key":"what all","Fragments":["the"]},{"Key":"tests call","Fragments":["for."]},{"Key":"call for.","Fragments":["While"]},{"Key":"for. While","Fragments":["not"]},{"Key":"While not","Fragments":["part"]},{"Key":"of tests,","Fragments":["you'll"]},{"Key":"tests, you'll","Fragments":["would"]},{"Key":"you'll would","Fragments":["need"]},{"Key":"the seperator","Fragments":["specificially"]},{"Key":"seperator specificially","Fragments":["if"]},{"Key":"specificially if","Fragments":["input"]},{"Key":"input or","Fragments":["tests"]},{"Key":"or tests","Fragments":["start"]},{"Key":"tests start","Fragments":["using"]},{"Key":"start using","Fragments":["words"]},{"Key":"using words","Fragments":["like"]},{"Key":"For nitpicks,","Fragments":["I"]},{"Key":"nitpicks, I","Fragments":["suggest"]},{"Key":"suggest you","Fragments":["look"]},{"Key":"string routines","Fragments":["to"]},{"Key":"routines to","Fragments":["switch"]},{"Key":"switch the","Fragments":["string"]},{"Key":"case. It'll","Fragments":["give"]},{"Key":"It'll give","Fragments":["you"]},{"Key":"you a","Fragments":["more"]},{"Key":"more c++","Fragments":["like"]},{"Key":"c++ like","Fragments":["solution."]},{"Key":"like solution.","Fragments":["Take"]},{"Key":"solution. Take","Fragments":["a"]},{"Key":"at routines","Fragments":["like"]},{"Key":"routines like","Fragments":["boost::to_lower"]},{"Key":"like boost::to_lower","Fragments":["or"]},{"Key":"boost::to_lower or","Fragments":["boost::to_lower_copy."]},{"Key":"expert in","Fragments":["regular"]},{"Key":"in regular","Fragments":["expressions"]},{"Key":"expressions I","Fragments":["think"]},{"Key":"cleaner on","Fragments":["using"]},{"Key":"regex classes","Fragments":["or"]},{"Key":"classes or","Fragments":["the"]},{"Key":"the '\\w'","Fragments":["placeholder."]},{"Key":"'\\w' placeholder.","Fragments":["Also"]},{"Key":"placeholder. Also","Fragments":["you"]},{"Key":"might see","Fragments":["from","if"]},{"Key":"see from","Fragments":["other","other","the"]},{"Key":"solutions that","Fragments":["the"]},{"Key":"default ```boost::tokenizer\u003c\u003e```","Fragments":["is"]},{"Key":"```boost::tokenizer\u003c\u003e``` is","Fragments":["enough"]},{"Key":"is enough","Fragments":["to"]},{"Key":" Replaced","Fragments":["my"]},{"Key":"Replaced my","Fragments":["hand"]},{"Key":"my hand","Fragments":["crafted"]},{"Key":"hand crafted","Fragments":["loop"]},{"Key":"crafted loop","Fragments":["with"]},{"Key":"loop with","Fragments":["```std::lower_bound()```","a"]},{"Key":"with ```std::lower_bound()```","Fragments":["since"]},{"Key":"```std::lower_bound()``` since","Fragments":["this"]},{"Key":"an equivalent","Fragments":["algorithm."]},{"Key":" Agree","Fragments":["with"]},{"Key":"Agree with","Fragments":["@lucile."]},{"Key":"with @lucile.","Fragments":["```rand()```"]},{"Key":"@lucile. ```rand()```","Fragments":["should"]},{"Key":"```rand()``` should","Fragments":["be"]},{"Key":"new C++11","Fragments":["\u003crandom\u003e","range"]},{"Key":"C++11 \u003crandom\u003e","Fragments":["library"]},{"Key":"\u003crandom\u003e library","Fragments":["and"]},{"Key":"even then","Fragments":["you"]},{"Key":"only dealing","Fragments":["with"]},{"Key":"with psuedo-random","Fragments":["numbers."]},{"Key":"psuedo-random numbers.","Fragments":["The"]},{"Key":"numbers. The","Fragments":["seed"]},{"Key":"The seed","Fragments":["is"]},{"Key":"seed is","Fragments":["everything"]},{"Key":"is everything","Fragments":["and"]},{"Key":"everything and","Fragments":["this"]},{"Key":"potential to","Fragments":["be"]},{"Key":"be unsafe","Fragments":["and"]},{"Key":"unsafe and","Fragments":["give"]},{"Key":"and give","Fragments":["non-unique"]},{"Key":"give non-unique","Fragments":["values."]},{"Key":"The in","Fragments":["place"]},{"Key":"place modification","Fragments":["using"]},{"Key":"modification using","Fragments":["```std::for_each```"]},{"Key":"using ```std::for_each```","Fragments":["and"]},{"Key":"```std::for_each``` and","Fragments":["a"]},{"Key":"give a","Fragments":["look"]},{"Key":"to it.","Fragments":["This"]},{"Key":"it. This","Fragments":["is"]},{"Key":"first incursion","Fragments":["into"]},{"Key":"incursion into","Fragments":["Boost"]},{"Key":"into Boost","Fragments":["so"]},{"Key":"Boost so","Fragments":["I"]},{"Key":"lot to","Fragments":["learn."]},{"Key":"the mod","Fragments":["operator"]},{"Key":"mod operator","Fragments":["with"]},{"Key":"operator with","Fragments":["the"]},{"Key":"the serial","Fragments":["number"]},{"Key":"serial number","Fragments":["to","and"]},{"Key":"number to","Fragments":["keep","any"]},{"Key":"keep a","Fragments":["single"]},{"Key":"single value","Fragments":["deriving"]},{"Key":"value deriving","Fragments":["the"]},{"Key":"deriving the","Fragments":["whole"]},{"Key":" Positive:","Fragments":["You"]},{"Key":"Positive: You","Fragments":["were"]},{"Key":"You were","Fragments":["able"]},{"Key":"were able","Fragments":["to"]},{"Key":"to upload","Fragments":["your"]},{"Key":"upload your","Fragments":["file"]},{"Key":"your file","Fragments":[":)"]},{"Key":" Read","Fragments":["the"]},{"Key":"Read the","Fragments":["readme"]},{"Key":"readme included","Fragments":["in"]},{"Key":"for instruction","Fragments":["and"]},{"Key":"instruction and","Fragments":["help"]},{"Key":"and help","Fragments":["on"]},{"Key":"help on","Fragments":["how"]},{"Key":"the std::chrono","Fragments":["library"]},{"Key":"std::chrono library","Fragments":["was"]},{"Key":"was up","Fragments":["to"]},{"Key":"of problem.","Fragments":["I"]},{"Key":"probably remove","Fragments":["some"]},{"Key":"the repetition","Fragments":["with"]},{"Key":"repetition with","Fragments":["a"]},{"Key":"simple with","Fragments":["a"]},{"Key":"of loops","Fragments":["over"]},{"Key":"loops over","Fragments":["the"]},{"Key":"input data.","Fragments":["I"]},{"Key":"data. I","Fragments":["think"]},{"Key":"for syntax","Fragments":["makes"]},{"Key":"syntax makes","Fragments":["this"]},{"Key":"quite easy","Fragments":["to"]},{"Key":"you invoke","Fragments":["both","`removeSpaces`,"]},{"Key":"invoke both","Fragments":["`erase`"]},{"Key":"both `erase`","Fragments":["and","and"]},{"Key":"`erase` and","Fragments":["`remove`","`remove`","`remove`"]},{"Key":"and `remove`","Fragments":["in","because","thing"]},{"Key":"`remove` in","Fragments":["your"]},{"Key":"simplify `if(strInputSentence.empty())","Fragments":["return"]},{"Key":"`if(strInputSentence.empty()) return","Fragments":["true;"]},{"Key":"return true;","Fragments":["return"]},{"Key":"true; return","Fragments":["false;`"]},{"Key":"return false;`","Fragments":["to"]},{"Key":"false;` to","Fragments":["`return"]},{"Key":"to `return","Fragments":["strInputSentence.empty();`."]},{"Key":"The aim","Fragments":["was"]},{"Key":"aim was","Fragments":["to"]},{"Key":"ensure that","Fragments":["a"]},{"Key":"a name","Fragments":["is"]},{"Key":"name is","Fragments":["never","assigned,","already"]},{"Key":"never assigned","Fragments":["twice,"]},{"Key":"assigned twice,","Fragments":["even"]},{"Key":"twice, even","Fragments":["if"]},{"Key":"previous robot","Fragments":["with"]},{"Key":"robot with","Fragments":["that"]},{"Key":"that name","Fragments":["has"]},{"Key":"name has","Fragments":["been"]},{"Key":"been scrapped.","Fragments":["I"]},{"Key":"scrapped. I","Fragments":["agree"]},{"Key":"the `nameset`","Fragments":["constructor"]},{"Key":"`nameset` constructor","Fragments":["has"]},{"Key":"constructor has","Fragments":["bad"]},{"Key":"has bad","Fragments":["formatting,"]},{"Key":"bad formatting,","Fragments":["but"]},{"Key":"formatting, but","Fragments":["it"]},{"Key":"was (to","Fragments":["my"]},{"Key":"my eyes)","Fragments":["the"]},{"Key":"eyes) the","Fragments":["lesser"]},{"Key":"the lesser","Fragments":["of"]},{"Key":"lesser of","Fragments":["two"]},{"Key":"two evils.","Fragments":["If"]},{"Key":"evils. If","Fragments":["possible,"]},{"Key":"If possible,","Fragments":["please"]},{"Key":"possible, please","Fragments":["suggest"]},{"Key":"please suggest","Fragments":["a"]},{"Key":"thing without","Fragments":["the"]},{"Key":"mean about","Fragments":["`random_device`."]},{"Key":"about `random_device`.","Fragments":["Eliminating"]},{"Key":"`random_device`. Eliminating","Fragments":["pseudo-randomness"]},{"Key":"Eliminating pseudo-randomness","Fragments":["was"]},{"Key":"pseudo-randomness was","Fragments":["indeed"]},{"Key":"was indeed","Fragments":["the"]},{"Key":"indeed the","Fragments":["reason"]},{"Key":"used both","Fragments":["`erase`"]},{"Key":"`remove` because","Fragments":["remove"]},{"Key":"because remove","Fragments":["only"]},{"Key":"remove only","Fragments":["rearranges"]},{"Key":"only rearranges","Fragments":["the"]},{"Key":"rearranges the","Fragments":["string"]},{"Key":"not shorten","Fragments":["it."]},{"Key":"shorten it.","Fragments":["The"]},{"Key":"return of","Fragments":["'remove'"]},{"Key":"of 'remove'","Fragments":["is"]},{"Key":"'remove' is","Fragments":["the"]},{"Key":"new last","Fragments":["element"]},{"Key":"last element","Fragments":["of"]},{"Key":"of in","Fragments":["the"]},{"Key":"new string.","Fragments":["So"]},{"Key":"the `erase`","Fragments":["then","and"]},{"Key":"`erase` then","Fragments":["shortens"]},{"Key":"then shortens","Fragments":["the"]},{"Key":"shortens the","Fragments":["string."]},{"Key":"on `empty`","Fragments":["being"]},{"Key":"`empty` being","Fragments":["boolian"]},{"Key":"being boolian","Fragments":["so"]},{"Key":"boolian so","Fragments":["I"]},{"Key":"statement. I","Fragments":["will"]},{"Key":"felt was","Fragments":["the"]},{"Key":"readable for","Fragments":["generating"]},{"Key":"for generating","Fragments":["the"]},{"Key":"verses of","Fragments":["the"]},{"Key":"also find","Fragments":["that"]},{"Key":"the snprintf()","Fragments":["function"]},{"Key":"snprintf() function","Fragments":["to"]},{"Key":"the general","Fragments":["case","case."]},{"Key":"general case","Fragments":["of"]},{"Key":"of \u003e2","Fragments":["bottles"]},{"Key":"\u003e2 bottles","Fragments":["of"]},{"Key":"bottles of","Fragments":["beer"]},{"Key":"of beer","Fragments":["since"]},{"Key":"beer since","Fragments":["it"]},{"Key":"simple printf()","Fragments":["formating"]},{"Key":"printf() formating","Fragments":["rather"]},{"Key":"formating rather","Fragments":["than"]},{"Key":"than streams","Fragments":["which"]},{"Key":"streams which","Fragments":["in"]},{"Key":"opinion get","Fragments":["pretty"]},{"Key":"get pretty","Fragments":["verbose"]},{"Key":"pretty verbose","Fragments":["in"]},{"Key":"verbose in","Fragments":["a"]},{"Key":"case like","Fragments":["this."]},{"Key":"more information","Fragments":["about"]},{"Key":"information about","Fragments":["```random_device```."]},{"Key":"about ```random_device```.","Fragments":["For"]},{"Key":"```random_device```. For","Fragments":["your"]},{"Key":"your purpose","Fragments":["of"]},{"Key":"of shuffling","Fragments":["the"]},{"Key":"shuffling the","Fragments":["list"]},{"Key":"list a","Fragments":["psudo-random"]},{"Key":"psudo-random number","Fragments":["would"]},{"Key":"number would","Fragments":["be"]},{"Key":"being said","Fragments":["all"]},{"Key":"said all","Fragments":["you"]},{"Key":"need in","Fragments":["this","this"]},{"Key":"ensure names","Fragments":["are"]},{"Key":"repeated. Since","Fragments":["you"]},{"Key":"have already","Fragments":["generated"]},{"Key":"already generated","Fragments":["all"]},{"Key":"generated all","Fragments":["possible"]},{"Key":"all possible","Fragments":["names"]},{"Key":"possible names","Fragments":["you"]},{"Key":"names you","Fragments":["don't"]},{"Key":"to to","Fragments":["then"]},{"Key":"to then","Fragments":["shuffle"]},{"Key":"then shuffle","Fragments":["the"]},{"Key":"shuffle the","Fragments":["list."]},{"Key":"the list.","Fragments":["Returning","Of"]},{"Key":"list. Returning","Fragments":["them"]},{"Key":"Returning them","Fragments":["in"]},{"Key":"order is","Fragments":["just"]},{"Key":"as valid","Fragments":["as"]},{"Key":"valid as","Fragments":["in"]},{"Key":"easily derive","Fragments":["the"]},{"Key":"derive the","Fragments":["names"]},{"Key":"names from","Fragments":["a"]},{"Key":"single incrementing","Fragments":["serial"]},{"Key":"incrementing serial","Fragments":["number"]},{"Key":"number and","Fragments":["a"]},{"Key":"a use","Fragments":["of"]},{"Key":"of mod","Fragments":["and"]},{"Key":"mod and","Fragments":["division."]},{"Key":"and division.","Fragments":["See"]},{"Key":"division. See","Fragments":["@clarissa"]},{"Key":"See @clarissa","Fragments":["solution"]},{"Key":"@clarissa solution","Fragments":["for"]},{"Key":"would call","Fragments":["a"]},{"Key":"Just fixing","Fragments":["some"]},{"Key":"fixing some","Fragments":["indexing"]},{"Key":"some indexing","Fragments":["checks,"]},{"Key":"indexing checks,","Fragments":["etc..."]},{"Key":"The trade","Fragments":["off"]},{"Key":"trade off","Fragments":["here"]},{"Key":"off here","Fragments":["was"]},{"Key":"here was","Fragments":["computational/code"]},{"Key":"was computational/code","Fragments":["complexity"]},{"Key":"computational/code complexity","Fragments":["versus"]},{"Key":"complexity versus","Fragments":["code"]},{"Key":"versus code","Fragments":["size."]},{"Key":"code size.","Fragments":["My"]},{"Key":"size. My","Fragments":["intent"]},{"Key":"My intent","Fragments":["was"]},{"Key":"intent was","Fragments":["to"]},{"Key":"possible. That","Fragments":["means"]},{"Key":"means having","Fragments":["the"]},{"Key":"having the","Fragments":["whole"]},{"Key":"whole song,","Fragments":["broken"]},{"Key":"song, broken","Fragments":["up"]},{"Key":"broken up","Fragments":["in"]},{"Key":"in to","Fragments":["verses"]},{"Key":"to verses","Fragments":["in"]},{"Key":"verses in","Fragments":["a"]},{"Key":"a pre-initialized","Fragments":["array."]},{"Key":"pre-initialized array.","Fragments":["This"]},{"Key":"array. This","Fragments":["creates"]},{"Key":"This creates","Fragments":["a"]},{"Key":"creates a","Fragments":["larger"]},{"Key":"larger binary","Fragments":["but"]},{"Key":"binary but","Fragments":["now"]},{"Key":"but now","Fragments":["the","it's"]},{"Key":"generate a","Fragments":["verse"]},{"Key":"a verse","Fragments":["dynamically."]},{"Key":"verse dynamically.","Fragments":["It"]},{"Key":"dynamically. It","Fragments":["is"]},{"Key":"of getting","Fragments":["the"]},{"Key":"have returned","Fragments":["the"]},{"Key":"returned the","Fragments":["strings"]},{"Key":"strings on","Fragments":["the"]},{"Key":"if with","Fragments":["booleans"]},{"Key":"with booleans","Fragments":["but"]},{"Key":"booleans but","Fragments":["did"]},{"Key":"but did","Fragments":["it"]},{"Key":"implement future","Fragments":["rules"]},{"Key":"future rules","Fragments":["if"]},{"Key":"rules if","Fragments":["I"]},{"Key":"I ever","Fragments":["had"]},{"Key":"ever had","Fragments":["too."]},{"Key":"ok or","Fragments":["just"]},{"Key":"just not","Fragments":["elegant"]},{"Key":"not elegant","Fragments":["code"]},{"Key":"elegant code","Fragments":[":("]},{"Key":"Updated to","Fragments":["use"]},{"Key":"transform semantics.","Fragments":["I'm"]},{"Key":"semantics. I'm","Fragments":["still"]},{"Key":"still not","Fragments":["sure","necessary,","sure"]},{"Key":"readable than","Fragments":["the"]},{"Key":" All","Fragments":["information","that"]},{"Key":"All information","Fragments":["can"]},{"Key":"information can","Fragments":["be"]},{"Key":"be computed","Fragments":["at"]},{"Key":"computed at","Fragments":["instance"]},{"Key":"at instance","Fragments":["instantiation"]},{"Key":"instance instantiation","Fragments":["time."]},{"Key":"instantiation time.","Fragments":["So"]},{"Key":"time. So","Fragments":["the"]},{"Key":"constructor does","Fragments":["all"]},{"Key":"the work.","Fragments":["The"]},{"Key":"work. The","Fragments":["nucleotide_counts()","test"]},{"Key":"The nucleotide_counts()","Fragments":["and"]},{"Key":"nucleotide_counts() and","Fragments":["the"]},{"Key":"the count()","Fragments":["function"]},{"Key":"count() function","Fragments":["simply"]},{"Key":"function simply","Fragments":["return"]},{"Key":"the precomputed","Fragments":["data."]},{"Key":"Unfortunately there","Fragments":["is"]},{"Key":"an issue","Fragments":["with","where","where"]},{"Key":"I'm unable","Fragments":["to"]},{"Key":"solve. I","Fragments":["had"]},{"Key":"to alter","Fragments":["the"]},{"Key":"alter the","Fragments":["nucleotide_count_test.cpp"]},{"Key":"the nucleotide_count_test.cpp","Fragments":["file"]},{"Key":"nucleotide_count_test.cpp file","Fragments":["to"]},{"Key":"the compilation","Fragments":["work."]},{"Key":"compilation work.","Fragments":["The"]},{"Key":"file defined","Fragments":["the"]},{"Key":"defined the","Fragments":["instance","class"]},{"Key":"the instance","Fragments":["as"]},{"Key":"instance as","Fragments":["something"]},{"Key":"like ```const","Fragments":["dna::counter","std::string\u0026"]},{"Key":"```const dna::counter","Fragments":["dna(\"GTAC\");```"]},{"Key":"dna::counter dna(\"GTAC\");```","Fragments":["and"]},{"Key":"dna(\"GTAC\");``` and","Fragments":["then"]},{"Key":"then made","Fragments":["calls"]},{"Key":"made calls","Fragments":["from"]},{"Key":"calls from","Fragments":["there.","the"]},{"Key":"from there.","Fragments":["However"]},{"Key":"there. However","Fragments":["the"]},{"Key":"However the","Fragments":["compiler"]},{"Key":"compiler (I","Fragments":["am"]},{"Key":"(I am","Fragments":["using"]},{"Key":"using clang","Fragments":["3.4)"]},{"Key":"clang 3.4)","Fragments":["would"]},{"Key":"3.4) would","Fragments":["give"]},{"Key":"would give","Fragments":["me"]},{"Key":"give me","Fragments":["the","an"]},{"Key":"me the","Fragments":["following","```clean_number()```"]},{"Key":" ```~/exercism/cpp/nucleotide-count/nucleotide_count_test.cpp:24:25:","Fragments":["error:"]},{"Key":"```~/exercism/cpp/nucleotide-count/nucleotide_count_test.cpp:24:25: error:","Fragments":["member"]},{"Key":"error: member","Fragments":["function"]},{"Key":"function 'nucleotide_counts'","Fragments":["not"]},{"Key":"'nucleotide_counts' not","Fragments":["viable:"]},{"Key":"not viable:","Fragments":["'this'"]},{"Key":"viable: 'this'","Fragments":["argument"]},{"Key":"'this' argument","Fragments":["has"]},{"Key":"argument has","Fragments":["type"]},{"Key":" 'const","Fragments":["dna::counter',"]},{"Key":"'const dna::counter',","Fragments":["but"]},{"Key":"dna::counter', but","Fragments":["function"]},{"Key":"but function","Fragments":["is"]},{"Key":"not marked","Fragments":["const```"]},{"Key":"``` const","Fragments":["auto","std::map\u003cchar,"]},{"Key":" ```~/exercism/cpp/nucleotide-count/nucleotide_count.h:15:30:","Fragments":["note:"]},{"Key":"```~/exercism/cpp/nucleotide-count/nucleotide_count.h:15:30: note:","Fragments":["'nucleotide_counts'"]},{"Key":"note: 'nucleotide_counts'","Fragments":["declared"]},{"Key":"'nucleotide_counts' declared","Fragments":["here```"]},{"Key":" Altering","Fragments":["the"]},{"Key":"Altering the","Fragments":["test"]},{"Key":"test instance","Fragments":["declaration"]},{"Key":"instance declaration","Fragments":["to"]},{"Key":"to ```dna::counter","Fragments":["dna(\"GTAC\");```"]},{"Key":"```dna::counter dna(\"GTAC\");```","Fragments":["fixed"]},{"Key":"dna(\"GTAC\");``` fixed","Fragments":["the"]},{"Key":"fixed the","Fragments":["issue."]},{"Key":"the issue.","Fragments":["I'm"]},{"Key":"issue. I'm","Fragments":["sure"]},{"Key":"something with","Fragments":["how"]},{"Key":"with how","Fragments":["I"]},{"Key":"class but","Fragments":["I'm"]},{"Key":"thinking of","Fragments":["using"]},{"Key":"bit mask","Fragments":["to"]},{"Key":"mask to","Fragments":["handle"]},{"Key":"handle states,","Fragments":["but"]},{"Key":"states, but","Fragments":["decided"]},{"Key":"decided it","Fragments":["was"]},{"Key":"heavy to","Fragments":["implement"]},{"Key":"implement considering","Fragments":["the"]},{"Key":"considering the","Fragments":["simple"]},{"Key":"simple cases","Fragments":["to"]},{"Key":"cases to","Fragments":["manage."]},{"Key":"I gone","Fragments":["with"]},{"Key":"gone with","Fragments":["booleans"]},{"Key":" Fix","Fragments":["the"]},{"Key":"Fix the","Fragments":["function"]},{"Key":"function declaration","Fragments":["so"]},{"Key":"declaration so","Fragments":["that"]},{"Key":"tests will","Fragments":["run"]},{"Key":"will run","Fragments":["without"]},{"Key":"run without","Fragments":["being"]},{"Key":"being altered.","Fragments":["Clean"]},{"Key":"altered. Clean","Fragments":["up"]},{"Key":"Clean up","Fragments":["the"]},{"Key":"constructor a","Fragments":["bit."]},{"Key":"just realised","Fragments":["that"]},{"Key":"realised that","Fragments":["I"]},{"Key":"didn't define","Fragments":["RUN_ALL_TESTS,"]},{"Key":"define RUN_ALL_TESTS,","Fragments":["actually"]},{"Key":"RUN_ALL_TESTS, actually","Fragments":["only"]},{"Key":"actually only","Fragments":["the"]},{"Key":"first test","Fragments":["was","for"]},{"Key":"was ever","Fragments":["run"]},{"Key":"ever run","Fragments":["by"]},{"Key":"run by","Fragments":["me."]},{"Key":"by me.","Fragments":["Thanks"]},{"Key":"me. Thanks","Fragments":["for"]},{"Key":"picking that","Fragments":["up,"]},{"Key":"that up,","Fragments":["time"]},{"Key":"up, time","Fragments":["to"]},{"Key":"Consider a","Fragments":["constructor"]},{"Key":"constructor initialiser","Fragments":["list","lists."]},{"Key":"initialiser list","Fragments":["for"]},{"Key":"list for","Fragments":["your"]},{"Key":"your member","Fragments":["variable"]},{"Key":"member variable","Fragments":["instead"]},{"Key":"variable instead","Fragments":["of"]},{"Key":"of assignment","Fragments":["in"]},{"Key":"assignment in","Fragments":["the","one"]},{"Key":"the body.","Fragments":["This"]},{"Key":"body. This","Fragments":["is"]},{"Key":"good style","Fragments":["to","to","as"]},{"Key":"style to","Fragments":["get","adopt.","have","adopt."]},{"Key":"used to.","Fragments":["There"]},{"Key":"to. There","Fragments":["is"]},{"Key":"small overhead","Fragments":["in"]},{"Key":"overhead in","Fragments":["constructing"]},{"Key":"in constructing","Fragments":["an"]},{"Key":"constructing an","Fragments":["empty"]},{"Key":"empty member","Fragments":["then"]},{"Key":"member then","Fragments":["assigning"]},{"Key":"then assigning","Fragments":["the"]},{"Key":"assigning the","Fragments":["value."]},{"Key":"would prefer","Fragments":["your","these"]},{"Key":"prefer your","Fragments":["previous"]},{"Key":"your previous","Fragments":["solution","iteration."]},{"Key":"previous solution","Fragments":["as"]},{"Key":"the C-style","Fragments":["cast"]},{"Key":"C-style cast","Fragments":["to"]},{"Key":"working function","Fragments":["pointer"]},{"Key":"function pointer","Fragments":["is","feels"]},{"Key":"pointer is","Fragments":["not"]},{"Key":"great style.","Fragments":["If"]},{"Key":"style. If","Fragments":["you"]},{"Key":"this design","Fragments":["then"]},{"Key":"design then","Fragments":["change"]},{"Key":"then change","Fragments":["to"]},{"Key":"header file.","Fragments":["I","It"]},{"Key":"the cpp","Fragments":["file"]},{"Key":"cpp file","Fragments":["for"]},{"Key":"file for","Fragments":["these."]},{"Key":"for these.","Fragments":["This"]},{"Key":"these. This","Fragments":["indicates"]},{"Key":"This indicates","Fragments":["to"]},{"Key":"indicates to","Fragments":["the"]},{"Key":"the user","Fragments":["that","typed"]},{"Key":"user that","Fragments":["they"]},{"Key":"called externally","Fragments":["and"]},{"Key":"externally and","Fragments":["are"]},{"Key":"and are","Fragments":["just"]},{"Key":"are just","Fragments":["used","the"]},{"Key":"used by","Fragments":["the"]},{"Key":"the ```words()```","Fragments":["function"]},{"Key":"```words()``` function","Fragments":["locally."]},{"Key":"using ```std::transform(...,","Fragments":["...,"]},{"Key":"```std::transform(..., ...,","Fragments":["...,"]},{"Key":"..., ...,","Fragments":["::tolower)```"]},{"Key":"..., ::tolower)```","Fragments":["instead"]},{"Key":"::tolower)``` instead","Fragments":["of"]},{"Key":"of writing","Fragments":["your","error"]},{"Key":"writing your","Fragments":["own"]},{"Key":"own helper.","Fragments":["There"]},{"Key":"helper. There","Fragments":["are"]},{"Key":"are plenty","Fragments":["of"]},{"Key":"plenty of","Fragments":["examples"]},{"Key":"of examples","Fragments":["of"]},{"Key":"are going","Fragments":["to","to"]},{"Key":"use snprintf","Fragments":["I"]},{"Key":"snprintf I","Fragments":["would"]},{"Key":"also get","Fragments":["into"]},{"Key":"writing error","Fragments":["handling"]},{"Key":"error handling","Fragments":["for"]},{"Key":"handling for","Fragments":["it"]},{"Key":"well. IE","Fragments":["check"]},{"Key":"IE check","Fragments":["the"]},{"Key":"and handle","Fragments":["appropriately."]},{"Key":"handle appropriately.","Fragments":["While"]},{"Key":"appropriately. While","Fragments":["for"]},{"Key":"While for","Fragments":["this"]},{"Key":"simple exercise","Fragments":["the"]},{"Key":"exercise the","Fragments":["output"]},{"Key":"output is","Fragments":["quite"]},{"Key":"quite safe,","Fragments":["this"]},{"Key":"safe, this","Fragments":["is"]},{"Key":"the kind","Fragments":["of"]},{"Key":"that leads","Fragments":["to"]},{"Key":"to buffer","Fragments":["overflows"]},{"Key":"buffer overflows","Fragments":["in","mostly"]},{"Key":"overflows in","Fragments":["more"]},{"Key":"more complicated","Fragments":["scenarios.","that"]},{"Key":"complicated scenarios.","Fragments":["Better"]},{"Key":"scenarios. Better","Fragments":["to"]},{"Key":"Better to","Fragments":["practise"]},{"Key":"to practise","Fragments":["a"]},{"Key":"practise a","Fragments":["safe"]},{"Key":"a safe","Fragments":["style"]},{"Key":"safe style","Fragments":["always."]},{"Key":"right that","Fragments":["string","it"]},{"Key":"that string","Fragments":["streams"]},{"Key":"string streams","Fragments":["become"]},{"Key":"streams become","Fragments":["verbose"]},{"Key":"become verbose","Fragments":["and"]},{"Key":"verbose and","Fragments":["hard"]},{"Key":"and hard","Fragments":["to"]},{"Key":"read, but","Fragments":["for"]},{"Key":"simple format","Fragments":["I"]},{"Key":"format I","Fragments":["think"]},{"Key":"think streams","Fragments":["are"]},{"Key":"streams are","Fragments":["ok"]},{"Key":"are ok","Fragments":["and"]},{"Key":"ok and","Fragments":["readable."]},{"Key":"readable. If","Fragments":["it"]},{"Key":"was any","Fragments":["more"]},{"Key":"any more","Fragments":["complicated","than"]},{"Key":"complicated that","Fragments":["inserting"]},{"Key":"that inserting","Fragments":["3"]},{"Key":"inserting 3","Fragments":["numbers"]},{"Key":"3 numbers","Fragments":["then"]},{"Key":"numbers then","Fragments":["I"]},{"Key":"avoid stream","Fragments":["formatting."]},{"Key":"Why did","Fragments":["you","you"]},{"Key":"use erase/remove","Fragments":["for"]},{"Key":"erase/remove for","Fragments":["spaces"]},{"Key":"then resize/remove","Fragments":["for"]},{"Key":"resize/remove for","Fragments":["special"]},{"Key":"special characters?","Fragments":["I"]},{"Key":"characters? I","Fragments":["think"]},{"Key":"the erase-remove","Fragments":["idiom"]},{"Key":"erase-remove idiom","Fragments":["in"]},{"Key":"idiom in","Fragments":["both"]},{"Key":"these points","Fragments":["would"]},{"Key":"points would","Fragments":["be"]},{"Key":"better as","Fragments":["it"]},{"Key":"a known","Fragments":["idiom"]},{"Key":"known idiom","Fragments":["and"]},{"Key":"idiom and","Fragments":["makes"]},{"Key":"Good solution","Fragments":["and","and"]},{"Key":"and nice","Fragments":["to"]},{"Key":"see someone","Fragments":["put"]},{"Key":"someone put","Fragments":["the"]},{"Key":"the validation","Fragments":["in"]},{"Key":"validation in","Fragments":["the"]},{"Key":"constructor. The","Fragments":["constructor"]},{"Key":"The constructor","Fragments":["argument"]},{"Key":"be pass","Fragments":["by"]},{"Key":"reference ```const","Fragments":["std::string"]},{"Key":"\u0026``` to","Fragments":["avoid"]},{"Key":"a copy.","Fragments":["Also"]},{"Key":"copy. Also","Fragments":["you"]},{"Key":"explicitly use","Fragments":["```this-\u003e```"]},{"Key":"use ```this-\u003e```","Fragments":["as"]},{"Key":"```this-\u003e``` as","Fragments":["it"]},{"Key":"is implicit","Fragments":["in"]},{"Key":"implicit in","Fragments":["C++."]},{"Key":"C++. You","Fragments":["only"]},{"Key":"You only","Fragments":["need","pass"]},{"Key":"be exact","Fragments":["if"]},{"Key":"exact if","Fragments":["there"]},{"Key":"is ambiguity","Fragments":["due"]},{"Key":"ambiguity due","Fragments":["to"]},{"Key":"like inheritance","Fragments":["or"]},{"Key":"inheritance or","Fragments":["variable/function"]},{"Key":"or variable/function","Fragments":["names."]},{"Key":"could combine","Fragments":["your"]},{"Key":"combine your","Fragments":["two"]},{"Key":"your two","Fragments":["functions"]},{"Key":"two functions","Fragments":["```generate_word_map_from_vector```","separate","that"]},{"Key":"functions ```generate_word_map_from_vector```","Fragments":["and"]},{"Key":"```generate_word_map_from_vector``` and","Fragments":["```extract_words_from_string```"]},{"Key":"and ```extract_words_from_string```","Fragments":["to"]},{"Key":"```extract_words_from_string``` to","Fragments":["reduce"]},{"Key":"times you","Fragments":["iterate"]},{"Key":"you iterate","Fragments":["and"]},{"Key":"iterate and","Fragments":["count"]},{"Key":"and count","Fragments":["words."]},{"Key":"count words.","Fragments":["For"]},{"Key":"words. For","Fragments":["example"]},{"Key":"example each","Fragments":["time"]},{"Key":"you extract","Fragments":["a"]},{"Key":"extract a","Fragments":["word"]},{"Key":"word you","Fragments":["immediately"]},{"Key":"you immediately","Fragments":["add"]},{"Key":"immediately add","Fragments":["it"]},{"Key":"add it","Fragments":["to","to"]},{"Key":"map or","Fragments":["increment"]},{"Key":"or increment","Fragments":["its"]},{"Key":"its count.","Fragments":["This"]},{"Key":"count. This","Fragments":["is"]},{"Key":"is easy","Fragments":["with","to"]},{"Key":"easy with","Fragments":["something"]},{"Key":"call ```string::compare```","Fragments":["explicitly"]},{"Key":"```string::compare``` explicitly","Fragments":["you"]},{"Key":"explicitly you","Fragments":["can"]},{"Key":"the relational","Fragments":["operators"]},{"Key":"relational operators","Fragments":["```if"]},{"Key":"operators ```if","Fragments":["(base_unsorted"]},{"Key":"```if (base_unsorted","Fragments":["=="]},{"Key":"(base_unsorted ==","Fragments":["tester)```."]},{"Key":"== tester)```.","Fragments":["These"]},{"Key":"tester)```. These","Fragments":["are"]},{"Key":"are equivalent","Fragments":["as"]},{"Key":"equivalent as","Fragments":["they"]},{"Key":"they call","Fragments":["compare"]},{"Key":"call compare","Fragments":["but"]},{"Key":"compare but","Fragments":["could"]},{"Key":"but could","Fragments":["make"]},{"Key":"you work","Fragments":["out"]},{"Key":"the longest/shortest","Fragments":["string"]},{"Key":"longest/shortest string","Fragments":["is"]},{"Key":"very elaborate.","Fragments":["There"]},{"Key":"elaborate. There","Fragments":["are"]},{"Key":"of simpler","Fragments":["choices"]},{"Key":"simpler choices","Fragments":["that"]},{"Key":"choices that","Fragments":["you","lead"]},{"Key":"other peoples","Fragments":["answers"]},{"Key":"peoples answers","Fragments":["here."]},{"Key":"answers here.","Fragments":["The"]},{"Key":"here. The","Fragments":["common"]},{"Key":"The common","Fragments":["ones"]},{"Key":"common ones","Fragments":["are"]},{"Key":"ones are","Fragments":["using"]},{"Key":"using ```std::min```,","Fragments":["using"]},{"Key":"```std::min```, using","Fragments":["```string::swap```"]},{"Key":"using ```string::swap```","Fragments":["or"]},{"Key":"```string::swap``` or","Fragments":["a"]},{"Key":"call swapping","Fragments":["the"]},{"Key":"the arguments.","Fragments":["Either"]},{"Key":"arguments. Either","Fragments":["way"]},{"Key":"Either way","Fragments":["you"]},{"Key":"any copies","Fragments":["of"]},{"Key":"allows definitions","Fragments":["of"]},{"Key":"definitions of","Fragments":["64bit","each"]},{"Key":"of 64bit","Fragments":["width"]},{"Key":"64bit width","Fragments":["integers"]},{"Key":"width integers","Fragments":["so"]},{"Key":"integers so","Fragments":["lets"]},{"Key":"so lets","Fragments":["use"]},{"Key":"lets use","Fragments":["them"]},{"Key":"and let","Fragments":["the"]},{"Key":"let the","Fragments":["compiler"]},{"Key":"compiler deal","Fragments":["with"]},{"Key":"Use \u003climits\u003e","Fragments":["to"]},{"Key":"\u003climits\u003e to","Fragments":["just"]},{"Key":"the equivalent","Fragments":["UINT64_MAX"]},{"Key":"equivalent UINT64_MAX","Fragments":["macro"]},{"Key":"UINT64_MAX macro","Fragments":["definition."]},{"Key":"When I'm","Fragments":["writing,"]},{"Key":"I'm writing,","Fragments":["I"]},{"Key":"writing, I","Fragments":["like"]},{"Key":"fail test","Fragments":["by"]},{"Key":"test by","Fragments":["test.","test"]},{"Key":"by test.","Fragments":["I"]},{"Key":"test. I","Fragments":["have"]},{"Key":"a window","Fragments":["open"]},{"Key":"window open","Fragments":["of"]},{"Key":"open of","Fragments":["the"]},{"Key":"tests, and","Fragments":["I"]},{"Key":"just move","Fragments":["that"]},{"Key":"move that","Fragments":["if"]},{"Key":"if block","Fragments":["down"]},{"Key":"block down","Fragments":["test"]},{"Key":"down test","Fragments":["by"]},{"Key":"by test","Fragments":["as"]},{"Key":"test as","Fragments":["each"]},{"Key":"as each","Fragments":["on","function"]},{"Key":"each on","Fragments":["passes."]},{"Key":"on passes.","Fragments":["Defining"]},{"Key":"passes. Defining","Fragments":["the"]},{"Key":"Defining the","Fragments":["RUN_ALL_TESTS"]},{"Key":"the RUN_ALL_TESTS","Fragments":["in"]},{"Key":"RUN_ALL_TESTS in","Fragments":["your"]},{"Key":"source will","Fragments":["work,"]},{"Key":"will work,","Fragments":["but"]},{"Key":"but you'll","Fragments":["see"]},{"Key":"see all","Fragments":["your"]},{"Key":"your errors","Fragments":["rather"]},{"Key":"errors rather","Fragments":["than"]},{"Key":"than just","Fragments":["the","'throw","using"]},{"Key":"first one..","Fragments":["Tradeoff"]},{"Key":"one.. Tradeoff","Fragments":["of"]},{"Key":"Tradeoff of","Fragments":["course,"]},{"Key":"of course,","Fragments":["is"]},{"Key":"course, is","Fragments":["that"]},{"Key":"with one","Fragments":["solution"]},{"Key":"one solution","Fragments":["and"]},{"Key":"and find","Fragments":["the","all","certain"]},{"Key":"test requires","Fragments":["a"]},{"Key":"requires a","Fragments":["different","bunch","domain_error"]},{"Key":"different direction,","Fragments":["but"]},{"Key":"direction, but","Fragments":["usually"]},{"Key":"but usually","Fragments":["the"]},{"Key":"usually the","Fragments":["differences"]},{"Key":"the differences","Fragments":["are"]},{"Key":"differences are","Fragments":["small."]},{"Key":"Nice work","Fragments":["using"]},{"Key":"work using","Fragments":["regular","the"]},{"Key":"regular expressions.","Fragments":["They"]},{"Key":"expressions. They","Fragments":["fit"]},{"Key":"They fit","Fragments":["this"]},{"Key":"fit this","Fragments":["problem"]},{"Key":"problem nicely.","Fragments":["As"]},{"Key":"nicely. As","Fragments":["a"]},{"Key":"style I","Fragments":["would"]},{"Key":"would rename","Fragments":["your"]},{"Key":"your expressions","Fragments":["to"]},{"Key":"the logic.","Fragments":["It"]},{"Key":"logic. It","Fragments":["would"]},{"Key":"nice if","Fragments":["I"]},{"Key":"could see","Fragments":["what"]},{"Key":"what each","Fragments":["expression"]},{"Key":"each expression","Fragments":["was"]},{"Key":"expression was","Fragments":["supposed"]},{"Key":"be without","Fragments":["having"]},{"Key":"without having","Fragments":["to"]},{"Key":"the regular","Fragments":["expression","expressions"]},{"Key":"expression itself.","Fragments":["Well"]},{"Key":"itself. Well","Fragments":["done."]},{"Key":"in answer","Fragments":["to"]},{"Key":"your question","Fragments":["I"]},{"Key":"question I","Fragments":["don't"]},{"Key":"should store","Fragments":["the"]},{"Key":"the expressions","Fragments":["as"]},{"Key":"expressions as","Fragments":["boolean","the"]},{"Key":"as boolean","Fragments":["values."]},{"Key":"boolean values.","Fragments":["I"]},{"Key":"a mental","Fragments":["optimization"]},{"Key":"mental optimization","Fragments":["that"]},{"Key":"optimization that","Fragments":["all"]},{"Key":"all but","Fragments":["the"]},{"Key":"very beginning","Fragments":["programmers"]},{"Key":"beginning programmers","Fragments":["will"]},{"Key":"programmers will","Fragments":["do."]},{"Key":"of auto","Fragments":["casting"]},{"Key":"auto casting","Fragments":["from"]},{"Key":"casting from","Fragments":["bool"]},{"Key":"int (rather","Fragments":["than"]},{"Key":"(rather than","Fragments":["the"]},{"Key":"the reverse)","Fragments":["be"]},{"Key":"reverse) be","Fragments":["quite"]},{"Key":"be quite","Fragments":["frowned"]},{"Key":"quite frowned","Fragments":["upon,"]},{"Key":"frowned upon,","Fragments":["though"]},{"Key":"upon, though","Fragments":["it"]},{"Key":"does get","Fragments":["the"]},{"Key":"job done","Fragments":["quite"]},{"Key":"done quite","Fragments":["succinctly"]},{"Key":"quite succinctly","Fragments":["here."]},{"Key":"succinctly here.","Fragments":["Again"]},{"Key":"here. Again","Fragments":["the"]},{"Key":"Again the","Fragments":["recursion"]},{"Key":"recursion seems","Fragments":["a"]},{"Key":"bit over","Fragments":["the"]},{"Key":"top, but","Fragments":["it"]},{"Key":"straightforward. Pretty","Fragments":["much"]},{"Key":"Pretty much","Fragments":["just"]},{"Key":"much just","Fragments":["iterating"]},{"Key":"through two","Fragments":["strings"]},{"Key":"strings where","Fragments":["they","the"]},{"Key":"they line","Fragments":["up"]},{"Key":"line up","Fragments":["and"]},{"Key":"the non-matching","Fragments":["characters."]},{"Key":"boost utilities!","Fragments":["It"]},{"Key":"utilities! It","Fragments":["makes"]},{"Key":"makes for","Fragments":["a"]},{"Key":"very tight","Fragments":["solution."]},{"Key":"this file","Fragments":["compile?"]},{"Key":"file compile?","Fragments":["Running"]},{"Key":"compile? Running","Fragments":["locally,"]},{"Key":"Running locally,","Fragments":["I"]},{"Key":"locally, I","Fragments":["get"]},{"Key":"- there","Fragments":["is"]},{"Key":"no boost/algorithm.hpp.","Fragments":["Perhaps"]},{"Key":"boost/algorithm.hpp. Perhaps","Fragments":["you"]},{"Key":"Perhaps you","Fragments":["meant"]},{"Key":"you meant","Fragments":["boost/algorithm/string.hpp?"]},{"Key":"- trim","Fragments":["returns"]},{"Key":"trim returns","Fragments":["a"]},{"Key":"a void,","Fragments":["not"]},{"Key":"void, not","Fragments":["a"]},{"Key":"- is_upper","Fragments":["returns"]},{"Key":"is_upper returns","Fragments":["some"]},{"Key":"returns some","Fragments":["erorrs"]},{"Key":"some erorrs","Fragments":["as"]},{"Key":"erorrs as","Fragments":["well."]},{"Key":"I usually","Fragments":["write","write"]},{"Key":"usually write","Fragments":["all","whole"]},{"Key":"write all","Fragments":["my"]},{"Key":"file. It","Fragments":["bothers"]},{"Key":"It bothers","Fragments":["me"]},{"Key":"bit to","Fragments":["do"]},{"Key":"that, but","Fragments":["exercism's","if"]},{"Key":"but exercism's","Fragments":["requirement"]},{"Key":"exercism's requirement","Fragments":["that"]},{"Key":"requirement that","Fragments":["it"]},{"Key":"be all","Fragments":["in"]},{"Key":"file pretty","Fragments":["much"]},{"Key":"much requires","Fragments":["it."]},{"Key":"string method","Fragments":["is"]},{"Key":"method is","Fragments":["an"]},{"Key":"an efficient,","Fragments":["easy"]},{"Key":"efficient, easy","Fragments":["to"]},{"Key":"understand solution.","Fragments":["Using"]},{"Key":"solution. Using","Fragments":["the"]},{"Key":"Using the","Fragments":["C++11","sort","boost"]},{"Key":"C++11 `for`","Fragments":["loop"]},{"Key":"loop style","Fragments":["is"]},{"Key":"is good.","Fragments":["To"]},{"Key":"good. To","Fragments":["my"]},{"Key":"To my","Fragments":["eye,"]},{"Key":"my eye,","Fragments":["lots"]},{"Key":"eye, lots","Fragments":["of"]},{"Key":"of `std::`s","Fragments":["is"]},{"Key":"`std::`s is","Fragments":["distracting,"]},{"Key":"is distracting,","Fragments":["so"]},{"Key":"distracting, so","Fragments":["I"]},{"Key":"suggest putting","Fragments":["some"]},{"Key":"putting some","Fragments":["`using`s."]},{"Key":"some `using`s.","Fragments":["Also,"]},{"Key":"`using`s. Also,","Fragments":["comments"]},{"Key":"Also, comments","Fragments":["to"]},{"Key":"task and","Fragments":["output"]},{"Key":"and output","Fragments":["of","of"]},{"Key":"output of","Fragments":["each","the"]},{"Key":"function you","Fragments":["define","should","resort"]},{"Key":"define would","Fragments":["be"]},{"Key":"you've used","Fragments":["prefix","a"]},{"Key":"used prefix","Fragments":["increments"]},{"Key":"prefix increments","Fragments":["to"]},{"Key":"increments to","Fragments":["avoid"]},{"Key":"avoid creating","Fragments":["an"]},{"Key":"creating an","Fragments":["unused","individual"]},{"Key":"unused temporary","Fragments":["variable"]},{"Key":"temporary variable","Fragments":["at"]},{"Key":"variable at","Fragments":["each"]},{"Key":"each iteration","Fragments":["of"]},{"Key":"loop. A","Fragments":["comment"]},{"Key":"A comment","Fragments":["describing","denoting"]},{"Key":"comment describing","Fragments":["the"]},{"Key":"describing the","Fragments":["purpose"]},{"Key":"the `compute`","Fragments":["function"]},{"Key":"`compute` function","Fragments":["would"]},{"Key":"feedback, I","Fragments":["submitted"]},{"Key":"comment there","Fragments":["(this"]},{"Key":"there (this","Fragments":["is"]},{"Key":"(this is","Fragments":["my"]},{"Key":"first submission","Fragments":["and","to"]},{"Key":"submission and","Fragments":["I'm"]},{"Key":"your supposed","Fragments":["to"]},{"Key":"keep commenting","Fragments":["here"]},{"Key":"commenting here","Fragments":["or"]},{"Key":"here or","Fragments":["move"]},{"Key":"or move","Fragments":["to"]},{"Key":"move to","Fragments":["the"]},{"Key":"it notifies","Fragments":["you)."]},{"Key":"the comments.","Fragments":["I"]},{"Key":"comments. I","Fragments":["really","admit","think"]},{"Key":"really liked","Fragments":["the"]},{"Key":"suggestion about","Fragments":["using"]},{"Key":"about using","Fragments":["an","namespaces."]},{"Key":"anonymous name","Fragments":["space."]},{"Key":"Thanks again","Fragments":["for"]},{"Key":"again for","Fragments":["you"]},{"Key":"you comments.","Fragments":["I"]},{"Key":"I admit","Fragments":["I","that"]},{"Key":"admit I","Fragments":["overly"]},{"Key":"I overly","Fragments":["complicated"]},{"Key":"complicated the","Fragments":["test"]},{"Key":"of mismatched","Fragments":["string"]},{"Key":"string size.","Fragments":["For"]},{"Key":"size. For","Fragments":["some"]},{"Key":"For some","Fragments":["reason"]},{"Key":"thought one","Fragments":["of"]},{"Key":"mismatched strings","Fragments":["had"]},{"Key":"strings had","Fragments":["an"]},{"Key":"additional character","Fragments":["at"]},{"Key":" Correct","Fragments":["me"]},{"Key":"Correct me","Fragments":["if"]},{"Key":"I'm wrong","Fragments":["but"]},{"Key":"wrong but","Fragments":["because"]},{"Key":"I passed","Fragments":["both"]},{"Key":"passed both","Fragments":["strings"]},{"Key":"both strings","Fragments":["by"]},{"Key":"reference I","Fragments":["didn't"]},{"Key":"think they","Fragments":["would"]},{"Key":"will revisit","Fragments":["this","this"]},{"Key":"revisit this","Fragments":["using","later."]},{"Key":"feedback from","Fragments":["@pattie-au,","@jacinto-au","@vallie"]},{"Key":"from @pattie-au,","Fragments":["I"]},{"Key":"@pattie-au, I","Fragments":["reverted"]},{"Key":"reverted to","Fragments":["my","using","using"]},{"Key":"my previous","Fragments":["implementation","implementation"]},{"Key":"previous implementation","Fragments":["for","I"]},{"Key":"the to_rna()","Fragments":["function"]},{"Key":"to_rna() function","Fragments":["since"]},{"Key":"function since","Fragments":["I"]},{"Key":"more readily","Fragments":["understandable."]},{"Key":"readily understandable.","Fragments":["I"]},{"Key":"understandable. I","Fragments":["guess"]},{"Key":"guess in","Fragments":["my"]},{"Key":"done a","Fragments":["case"]},{"Key":"case like:","Fragments":["```static_cast\u003cconst"]},{"Key":"like: ```static_cast\u003cconst","Fragments":["char"]},{"Key":"```static_cast\u003cconst char","Fragments":["(*)(const"]},{"Key":"char (*)(const","Fragments":["char)\u003e(to_rna)```"]},{"Key":"(*)(const char)\u003e(to_rna)```","Fragments":["to"]},{"Key":"char)\u003e(to_rna)``` to","Fragments":["have"]},{"Key":"worth looking","Fragments":["into"]},{"Key":"looking into","Fragments":["situations"]},{"Key":"into situations","Fragments":["where"]},{"Key":"situations where","Fragments":["it'd"]},{"Key":"where it'd","Fragments":["be"]},{"Key":"be worth","Fragments":["passing","checking"]},{"Key":"worth passing","Fragments":["around"]},{"Key":"passing around","Fragments":["references"]},{"Key":"around references","Fragments":["instead"]},{"Key":"references instead","Fragments":["of"]},{"Key":"string. For","Fragments":["example,"]},{"Key":"like whenever","Fragments":["you"]},{"Key":"invoke `removeSpaces`,","Fragments":["you"]},{"Key":"`removeSpaces`, you","Fragments":["pass"]},{"Key":"some string,","Fragments":["and"]},{"Key":"string, and","Fragments":["then"]},{"Key":"value from","Fragments":["`removeSpaces`"]},{"Key":"from `removeSpaces`","Fragments":["and"]},{"Key":"`removeSpaces` and","Fragments":["override"]},{"Key":"and override","Fragments":["the"]},{"Key":"override the","Fragments":["original"]},{"Key":"original string","Fragments":["with"]},{"Key":"return value.","Fragments":["In"]},{"Key":"value. In","Fragments":["such"]},{"Key":"to `removeSpaces`,","Fragments":["and"]},{"Key":"`removeSpaces`, and","Fragments":["have"]},{"Key":"it directly","Fragments":["modify"]},{"Key":"directly modify","Fragments":["the"]},{"Key":"originally started","Fragments":["off"]},{"Key":"started off","Fragments":["the","with"]},{"Key":"exercise by","Fragments":["just","others,"]},{"Key":"just looking","Fragments":["at"]},{"Key":"the reply","Fragments":["based","as"]},{"Key":"reply based","Fragments":["off"]},{"Key":"based off","Fragments":["that."]},{"Key":"off that.","Fragments":["I"]},{"Key":"that. I","Fragments":["quickly","don't"]},{"Key":"I quickly","Fragments":["realized"]},{"Key":"quickly realized","Fragments":["this"]},{"Key":"was far","Fragments":["too"]},{"Key":"far too","Fragments":["simple."]},{"Key":"then decided","Fragments":["to"]},{"Key":"to first","Fragments":["test"]},{"Key":"they person","Fragments":["was"]},{"Key":"person was","Fragments":["yelling,"]},{"Key":"was yelling,","Fragments":["as"]},{"Key":"yelling, as","Fragments":["this"]},{"Key":"this trumps","Fragments":["a"]},{"Key":"trumps a","Fragments":["question."]},{"Key":"question. This","Fragments":["worked"]},{"Key":"This worked","Fragments":["until"]},{"Key":"worked until","Fragments":["I"]},{"Key":"into non-alphabetical","Fragments":["characters"]},{"Key":"non-alphabetical characters","Fragments":["which"]},{"Key":"for alpha","Fragments":["up-front."]},{"Key":"next stem","Fragments":["was"]},{"Key":"stem was","Fragments":["to"]},{"Key":"string isn't","Fragments":["considered"]},{"Key":"isn't considered","Fragments":["yelling"]},{"Key":"considered yelling","Fragments":["and"]},{"Key":"a '?'","Fragments":["to"]},{"Key":"'?' to","Fragments":["determine"]},{"Key":"not yelling,","Fragments":["I"]},{"Key":"yelling, I","Fragments":["chose"]},{"Key":"for null","Fragments":["or"]},{"Key":"null or","Fragments":["white"]},{"Key":"space with","Fragments":["empty()"]},{"Key":"with empty()","Fragments":["and"]},{"Key":"empty() and","Fragments":["find_first_not_of(\""]},{"Key":"and find_first_not_of(\"","Fragments":["\")."]},{"Key":"Finally, as","Fragments":["it"]},{"Key":"the hardest","Fragments":["to"]},{"Key":"hardest to","Fragments":["accurately"]},{"Key":"to accurately","Fragments":["test"]},{"Key":"accurately test","Fragments":["for,"]},{"Key":"test for,","Fragments":["it"]},{"Key":"for, it","Fragments":["falls"]},{"Key":"it falls","Fragments":["through","out"]},{"Key":"falls through","Fragments":["to"]},{"Key":"through to","Fragments":["the"]},{"Key":"the \"Whatever.\"","Fragments":["response."]},{"Key":"took the","Fragments":["extra"]},{"Key":"create variables","Fragments":["with"]},{"Key":"with names","Fragments":["like"]},{"Key":"like yelling,","Fragments":["silence,"]},{"Key":"yelling, silence,","Fragments":["question,"]},{"Key":"silence, question,","Fragments":["etc."]},{"Key":"question, etc.","Fragments":["to"]},{"Key":"help with","Fragments":["understanding","readability."]},{"Key":"with understanding","Fragments":["of"]},{"Key":"of exactly","Fragments":["what"]},{"Key":"is being","Fragments":["tested"]},{"Key":"being tested","Fragments":["for."]},{"Key":"for explaning","Fragments":["the"]},{"Key":"explaning the","Fragments":["`erase`"]},{"Key":"`remove` thing","Fragments":["to"]},{"Key":"Made some","Fragments":["code"]},{"Key":"some code","Fragments":["changes"]},{"Key":"code changes","Fragments":["thanks"]},{"Key":"changes thanks","Fragments":["to"]},{"Key":"start your","Fragments":["for"]},{"Key":"loop at","Fragments":["1"]},{"Key":"at 1","Fragments":["and"]},{"Key":"not 0.","Fragments":["If"]},{"Key":"0. If","Fragments":["you"]},{"Key":"are coming","Fragments":["from"]},{"Key":"coming from","Fragments":["another"]},{"Key":"language C++","Fragments":["uses"]},{"Key":"C++ uses","Fragments":["0"]},{"Key":"uses 0","Fragments":["based"]},{"Key":"based indexing.","Fragments":["With"]},{"Key":"indexing. With","Fragments":["this"]},{"Key":"With this","Fragments":["I"]},{"Key":"are missing","Fragments":["testing"]},{"Key":"missing testing","Fragments":["the"]},{"Key":"to rework","Fragments":["the"]},{"Key":"rework the","Fragments":["logic"]},{"Key":"the duplicate","Fragments":["\"Fine."]},{"Key":"duplicate \"Fine.","Fragments":["Be"]},{"Key":" Initialise","Fragments":["boolean"]},{"Key":"Initialise boolean","Fragments":["values"]},{"Key":"with ```true/false```","Fragments":["rather"]},{"Key":"```true/false``` rather","Fragments":["than"]},{"Key":" @erick","Fragments":[":"]},{"Key":"@erick :","Fragments":["I"]},{"Key":": I","Fragments":["am"]},{"Key":"am having","Fragments":["issues"]},{"Key":"having issues","Fragments":["using"]},{"Key":"issues using","Fragments":["the"]},{"Key":"the CMake,","Fragments":["i"]},{"Key":"CMake, i","Fragments":["am"]},{"Key":"i am","Fragments":["really"]},{"Key":"am really","Fragments":["new"]},{"Key":"really new","Fragments":["to"]},{"Key":"to it","Fragments":["so","to"]},{"Key":"not tried","Fragments":["to"]},{"Key":"it. Yeah","Fragments":["I"]},{"Key":"Yeah I","Fragments":["agree","have"]},{"Key":"agree it","Fragments":["should"]},{"Key":"be boost/algorithm/string.hpp.","Fragments":["I"]},{"Key":"boost/algorithm/string.hpp. I","Fragments":["will"]},{"Key":"will look","Fragments":["at"]},{"Key":"too for","Fragments":["issues."]},{"Key":"for issues.","Fragments":["I"]},{"Key":"issues. I","Fragments":["did"]},{"Key":"not update","Fragments":["the"]},{"Key":"other issues","Fragments":["as"]},{"Key":"issues as","Fragments":["I"]},{"Key":"one which","Fragments":["works"]},{"Key":"which works","Fragments":["and"]},{"Key":"trying around","Fragments":["CMake."]},{"Key":"that submitting","Fragments":["all"]},{"Key":"submitting all","Fragments":["the"]},{"Key":"in 1","Fragments":["file"]},{"Key":"bad but","Fragments":["I"]},{"Key":"this effort","Fragments":["so"]},{"Key":"effort so","Fragments":["not"]},{"Key":"so not","Fragments":["complaining"]},{"Key":"not complaining","Fragments":["at"]},{"Key":"complaining at","Fragments":["that"]},{"Key":"at that","Fragments":["end"]},{"Key":"that end","Fragments":[":)."]},{"Key":"end :).","Fragments":["Normally,"]},{"Key":":). Normally,","Fragments":["I"]},{"Key":"Normally, I","Fragments":["would"]},{"Key":"had separate","Fragments":["header"]},{"Key":"separate header","Fragments":["as"]},{"Key":"as source","Fragments":["file."]},{"Key":"functions. Others","Fragments":["are"]},{"Key":"Others are","Fragments":["pass"]},{"Key":"are pass","Fragments":["by"]},{"Key":"and cause","Fragments":["copies."]},{"Key":"cause copies.","Fragments":["I"]},{"Key":"copies. I","Fragments":["was"]},{"Key":"was meaning","Fragments":["that"]},{"Key":"need copies","Fragments":["for"]},{"Key":"copies for","Fragments":["any"]},{"Key":"any of","Fragments":["the","how","your"]},{"Key":"and explanation.","Fragments":["Try"]},{"Key":"explanation. Try","Fragments":["to"]},{"Key":"be consistent","Fragments":["in"]},{"Key":"consistent in","Fragments":["initialisation"]},{"Key":"in initialisation","Fragments":["of"]},{"Key":"initialisation of","Fragments":["variables."]},{"Key":"of variables.","Fragments":["You"]},{"Key":"variables. You","Fragments":["initialise"]},{"Key":"You initialise","Fragments":["```silence```"]},{"Key":"initialise ```silence```","Fragments":["but"]},{"Key":"```silence``` but","Fragments":["not"]},{"Key":"Calling ```string.back()```","Fragments":["on"]},{"Key":"```string.back()``` on","Fragments":["an"]},{"Key":"behaviour so","Fragments":["you"]},{"Key":"to reposition","Fragments":["this."]},{"Key":"reposition this.","Fragments":["Perhaps"]},{"Key":"this. Perhaps","Fragments":["checking"]},{"Key":"Perhaps checking","Fragments":["for"]},{"Key":"silence first","Fragments":["would"]},{"Key":"help this.","Fragments":["Also"]},{"Key":"this. Also","Fragments":["there"]},{"Key":"Also there","Fragments":["is"]},{"Key":"real need","Fragments":["to"]},{"Key":"mark or","Fragments":["the"]},{"Key":"of back()","Fragments":["in"]},{"Key":"back() in","Fragments":["variables.","my"]},{"Key":"in variables.","Fragments":["Consider"]},{"Key":"variables. Consider","Fragments":["making"]},{"Key":"Consider making","Fragments":["them"]},{"Key":"them ```const","Fragments":["char```"]},{"Key":"```const char```","Fragments":["if"]},{"Key":"char``` if","Fragments":["you"]},{"Key":" ```string.find_first_not_of()```","Fragments":["will"]},{"Key":"```string.find_first_not_of()``` will","Fragments":["return"]},{"Key":"return ```string::npos```","Fragments":["if"]},{"Key":"```string::npos``` if","Fragments":["nothing"]},{"Key":"is found.","Fragments":["So"]},{"Key":"found. So","Fragments":["you"]},{"Key":"check against","Fragments":["this"]},{"Key":"against this","Fragments":["constant"]},{"Key":"this constant","Fragments":["rather"]},{"Key":"constant rather","Fragments":["than"]},{"Key":"than -1","Fragments":["explicitly."]},{"Key":"So made","Fragments":["changes"]},{"Key":"made changes","Fragments":["to"]},{"Key":"changes to","Fragments":["the"]},{"Key":"previous commit","Fragments":["which"]},{"Key":"commit which","Fragments":["was"]},{"Key":"was failing.","Fragments":["I"]},{"Key":"failing. I","Fragments":["think"]},{"Key":"one has","Fragments":["all"]},{"Key":"has all","Fragments":["the"]},{"Key":"tests passing.","Fragments":["Feel"]},{"Key":"passing. Feel","Fragments":["free"]},{"Key":"Feel free","Fragments":["to"]},{"Key":"to suggest","Fragments":["changes."]},{"Key":"sure was","Fragments":["if"]},{"Key":"was if","Fragments":["the"]},{"Key":"string should","Fragments":["be","be"]},{"Key":"reference thus","Fragments":["making"]},{"Key":"thus making","Fragments":["it"]},{"Key":"it efficient","Fragments":["to"]},{"Key":"efficient to","Fragments":["pass","do"]},{"Key":"the trim","Fragments":["will"]},{"Key":"trim will","Fragments":["change"]},{"Key":"will change","Fragments":["the"]},{"Key":"string if","Fragments":["that","you"]},{"Key":"mean when","Fragments":["I"]},{"Key":"declare `string","Fragments":["strand;`?"]},{"Key":" @meggie-au","Fragments":["-"]},{"Key":"@meggie-au -","Fragments":["Thank"]},{"Key":"- Thank","Fragments":["you"]},{"Key":"your feedback.","Fragments":["I"]},{"Key":"that snprintf","Fragments":["should"]},{"Key":"snprintf should","Fragments":["be"]},{"Key":"used carefully","Fragments":["and"]},{"Key":"carefully and","Fragments":["the"]},{"Key":"complex cases","Fragments":["should"]},{"Key":"cases should","Fragments":["be"]},{"Key":"checked and","Fragments":["handled","all"]},{"Key":"and handled","Fragments":["appropriately."]},{"Key":"handled appropriately.","Fragments":["However,"]},{"Key":"appropriately. However,","Fragments":["in"]},{"Key":"However, in","Fragments":["this"]},{"Key":"specific case","Fragments":["the"]},{"Key":"maximum string","Fragments":["size"]},{"Key":"string size","Fragments":["can"]},{"Key":"size can","Fragments":["be"]},{"Key":"be known","Fragments":["ahead"]},{"Key":"known ahead","Fragments":["of"]},{"Key":"ahead of","Fragments":["time."]},{"Key":"of time.","Fragments":["The"]},{"Key":"The verse_index","Fragments":["will"]},{"Key":"verse_index will","Fragments":["never"]},{"Key":"never convert","Fragments":["into"]},{"Key":"convert into","Fragments":["more"]},{"Key":"into more","Fragments":["than"]},{"Key":"than 2","Fragments":["characters"]},{"Key":"2 characters","Fragments":["since"]},{"Key":"characters since","Fragments":["the"]},{"Key":"than 99","Fragments":["because"]},{"Key":"99 because","Fragments":["of"]},{"Key":"12. So","Fragments":["the"]},{"Key":"length at","Fragments":["most"]},{"Key":"at most","Fragments":["be"]},{"Key":"most be","Fragments":["118"]},{"Key":"be 118","Fragments":["characters"]},{"Key":"118 characters","Fragments":["without"]},{"Key":"characters without","Fragments":["the"]},{"Key":"the null,","Fragments":["so"]},{"Key":"null, so","Fragments":["a"]},{"Key":"so a","Fragments":["120-char","comment","class"]},{"Key":"a 120-char","Fragments":["buffer"]},{"Key":"120-char buffer","Fragments":["is"]},{"Key":"buffer is","Fragments":["sufficent"]},{"Key":"is sufficent","Fragments":["for"]},{"Key":"sufficent for","Fragments":["this"]},{"Key":"some possibility","Fragments":["of"]},{"Key":"possibility of","Fragments":["buffer"]},{"Key":"of buffer","Fragments":["overflows"]},{"Key":"overflows mostly","Fragments":["in"]},{"Key":"mostly in","Fragments":["cases"]},{"Key":"in cases","Fragments":["where"]},{"Key":"buffer length","Fragments":["and"]},{"Key":"and buffer","Fragments":["pointer"]},{"Key":"buffer pointer","Fragments":["become"]},{"Key":"pointer become","Fragments":["disassociated."]},{"Key":"become disassociated.","Fragments":["I've"]},{"Key":"disassociated. I've","Fragments":["updated"]},{"Key":"I've updated","Fragments":["to"]},{"Key":"updated to","Fragments":["use"]},{"Key":"the sizeof","Fragments":["operator"]},{"Key":"sizeof operator","Fragments":["to"]},{"Key":"not duplicate","Fragments":["the"]},{"Key":"duplicate the","Fragments":["\"magic"]},{"Key":"the \"magic","Fragments":["number\""]},{"Key":"number\" twice","Fragments":["in"]},{"Key":"twice in","Fragments":["the","the"]},{"Key":"code, so","Fragments":["there"]},{"Key":"no possible","Fragments":["disassociated"]},{"Key":"possible disassociated","Fragments":["if"]},{"Key":"disassociated if","Fragments":["the"]},{"Key":"as long","Fragments":["as","as","as"]},{"Key":"long as","Fragments":["the","you","you"]},{"Key":"size matches","Fragments":["the"]},{"Key":"matches the","Fragments":["allocated"]},{"Key":"the allocated","Fragments":["space,"]},{"Key":"allocated space,","Fragments":["snprintf()"]},{"Key":"space, snprintf()","Fragments":["should"]},{"Key":"snprintf() should","Fragments":["never"]},{"Key":"never cause","Fragments":["a"]},{"Key":"a buffer","Fragments":["overflow","overflow."]},{"Key":"buffer overflow","Fragments":["nor"]},{"Key":"overflow nor","Fragments":["create"]},{"Key":"nor create","Fragments":["a"]},{"Key":"a C-style","Fragments":["string"]},{"Key":"C-style string","Fragments":["that"]},{"Key":"not properly","Fragments":["null"]},{"Key":"properly null","Fragments":["terminated."]},{"Key":"You've crunched","Fragments":["it"]},{"Key":"crunched it","Fragments":["down"]},{"Key":"down really","Fragments":["well!"]},{"Key":"really well!","Fragments":["Looks"]},{"Key":"well! Looks","Fragments":["good!"]},{"Key":"a final","Fragments":["nit,"]},{"Key":"final nit,","Fragments":["consider"]},{"Key":"nit, consider","Fragments":["your"]},{"Key":"consider your","Fragments":["boundry"]},{"Key":"your boundry","Fragments":["conditions"]},{"Key":"boundry conditions","Fragments":["in"]},{"Key":"functions. The","Fragments":["tests"]},{"Key":"really go","Fragments":["there,"]},{"Key":"go there,","Fragments":["but"]},{"Key":"there, but","Fragments":["you"]},{"Key":"you always","Fragments":["want"]},{"Key":"always want","Fragments":["to"]},{"Key":"that anyone","Fragments":["passing"]},{"Key":"anyone passing","Fragments":["in"]},{"Key":"in values","Fragments":["don't"]},{"Key":"values don't","Fragments":["break"]},{"Key":"don't break","Fragments":["your"]},{"Key":"your implementation.","Fragments":["What","I"]},{"Key":"implementation. What","Fragments":["happens"]},{"Key":"happens to","Fragments":["the"]},{"Key":"the sing","Fragments":["function"]},{"Key":"sing function","Fragments":["if"]},{"Key":"you reverse","Fragments":["to"]},{"Key":"reverse to","Fragments":["and"]},{"Key":"to and","Fragments":["from?"]},{"Key":"and from?","Fragments":["What"]},{"Key":"from? What","Fragments":["happens"]},{"Key":"negative number?","Fragments":["Is"]},{"Key":"number? Is","Fragments":["it"]},{"Key":"it acceptable","Fragments":["to"]},{"Key":"acceptable to","Fragments":["pass"]},{"Key":"in numbers","Fragments":["greater"]},{"Key":"numbers greater","Fragments":["than"]},{"Key":"than 99?","Fragments":["Just"]},{"Key":"99? Just","Fragments":["something"]},{"Key":"Just something","Fragments":["to"]},{"Key":"I've fallen","Fragments":["out"]},{"Key":"fallen out","Fragments":["of"]},{"Key":"of habit","Fragments":["of"]},{"Key":"of commenting","Fragments":["my"]},{"Key":"commenting my","Fragments":["code,"]},{"Key":"my code,","Fragments":["and"]},{"Key":"code, and","Fragments":["I","you're"]},{"Key":"think there's","Fragments":["a"]},{"Key":"a bug","Fragments":["in","to","to"]},{"Key":"bug in","Fragments":["the"]},{"Key":"documentation of","Fragments":["the"]},{"Key":"bob problem.","Fragments":["I"]},{"Key":"was new","Fragments":["to"]},{"Key":"to cmake","Fragments":["as"]},{"Key":"cmake as","Fragments":["well,"]},{"Key":"well, and","Fragments":["it"]},{"Key":"it tripped","Fragments":["me"]},{"Key":"tripped me","Fragments":["up"]},{"Key":"me up","Fragments":["for"]},{"Key":"up for","Fragments":["a"]},{"Key":"while trying","Fragments":["to"]},{"Key":"started. Then","Fragments":["in"]},{"Key":"Then in","Fragments":["later"]},{"Key":"in later","Fragments":["exercises,","exercises"]},{"Key":"later exercises,","Fragments":["this"]},{"Key":"exercises, this","Fragments":["block"]},{"Key":"this block","Fragments":["started"]},{"Key":"block started","Fragments":["showing"]},{"Key":"started showing","Fragments":["up"]},{"Key":"showing up","Fragments":["in"]},{"Key":" ##","Fragments":["Getting"]},{"Key":"## Getting","Fragments":["Started"]},{"Key":" Make","Fragments":["sure"]},{"Key":"Make sure","Fragments":["you"]},{"Key":"have read","Fragments":["the","that"]},{"Key":"the [getting","Fragments":["started"]},{"Key":"[getting started","Fragments":["with"]},{"Key":"started with","Fragments":["C++](http://help.exercism.io/getting-started-with-cpp.html)"]},{"Key":" page","Fragments":["on"]},{"Key":"page on","Fragments":["the"]},{"Key":"the [exercism","Fragments":["help"]},{"Key":"[exercism help","Fragments":["site](http://help.exercism.io/)."]},{"Key":"help site](http://help.exercism.io/).","Fragments":["This"]},{"Key":"site](http://help.exercism.io/). This","Fragments":["covers"]},{"Key":"basic information","Fragments":["on"]},{"Key":"information on","Fragments":["setting"]},{"Key":"on setting","Fragments":["up"]},{"Key":"the development","Fragments":["environment"]},{"Key":"development environment","Fragments":["expected"]},{"Key":"just opened","Fragments":["a"]},{"Key":"opened a","Fragments":["bug"]},{"Key":"bug to","Fragments":["fix","do"]},{"Key":"fix up","Fragments":["the"]},{"Key":"the documentation.","Fragments":["Hopefully"]},{"Key":"documentation. Hopefully","Fragments":["it"]},{"Key":"Hopefully it","Fragments":["gets"]},{"Key":"it gets","Fragments":["better"]},{"Key":"gets better","Fragments":["for"]},{"Key":"for future","Fragments":["developers."]},{"Key":"my linux","Fragments":["system,"]},{"Key":"linux system,","Fragments":["I"]},{"Key":"system, I","Fragments":["just","still"]},{"Key":"just type","Fragments":["\"cmake"]},{"Key":"type \"cmake","Fragments":["CMakeLists.txt\""]},{"Key":"\"cmake CMakeLists.txt\"","Fragments":["and"]},{"Key":"CMakeLists.txt\" and","Fragments":["it"]},{"Key":"it creates","Fragments":["everything."]},{"Key":"creates everything.","Fragments":["Then"]},{"Key":"everything. Then","Fragments":["I"]},{"Key":"I remember","Fragments":["I"]},{"Key":"remember I","Fragments":["need"]},{"Key":"need my","Fragments":["source"]},{"Key":"my source","Fragments":["file,"]},{"Key":"file, so","Fragments":["I"]},{"Key":"I create","Fragments":["an"]},{"Key":"empty file","Fragments":["and"]},{"Key":"run cmake","Fragments":["again."]},{"Key":"cmake again.","Fragments":["Seems"]},{"Key":"again. Seems","Fragments":["to"]},{"Key":"run your","Fragments":["code"]},{"Key":"my system,","Fragments":["I"]},{"Key":"still get","Fragments":["failures"]},{"Key":"get failures","Fragments":["on"]},{"Key":"failures on","Fragments":["\"only_numbers\""]},{"Key":"on \"only_numbers\"","Fragments":["and"]},{"Key":"\"only_numbers\" and","Fragments":["\"question_with_only_numbers\","]},{"Key":"and \"question_with_only_numbers\",","Fragments":["so"]},{"Key":"\"question_with_only_numbers\", so","Fragments":["you"]},{"Key":"you still","Fragments":["have","working","need"]},{"Key":"of work","Fragments":["to"]},{"Key":"not bring","Fragments":["input"]},{"Key":"bring input","Fragments":["in"]},{"Key":"reference and","Fragments":["then","modified"]},{"Key":"then modify","Fragments":["it."]},{"Key":"modify it.","Fragments":["That's"]},{"Key":"it. That's","Fragments":["not"]},{"Key":"a caller","Fragments":["would"]},{"Key":"caller would","Fragments":["expect"]},{"Key":"would expect","Fragments":["to"]},{"Key":"expect to","Fragments":["happen."]},{"Key":"to happen.","Fragments":["I'm"]},{"Key":"happen. I'm","Fragments":["not"]},{"Key":"matters much","Fragments":["if"]},{"Key":"much if","Fragments":["input"]},{"Key":"input comes","Fragments":["in"]},{"Key":"comes in","Fragments":["as"]},{"Key":"reference or","Fragments":["copy"]},{"Key":"or copy","Fragments":["constructor."]},{"Key":"copy constructor.","Fragments":["Both"]},{"Key":"constructor. Both","Fragments":["will"]},{"Key":"Both will","Fragments":["work"]},{"Key":"work fine","Fragments":["if"]},{"Key":"fine if","Fragments":["you"]},{"Key":"copy the","Fragments":["string","```input```"]},{"Key":"string yourself,","Fragments":["although"]},{"Key":"yourself, although","Fragments":["reading"]},{"Key":"although reading","Fragments":["through"]},{"Key":"reading through","Fragments":["some"]},{"Key":"through some","Fragments":["c++11"]},{"Key":"some c++11","Fragments":["docs"]},{"Key":"c++11 docs","Fragments":["it"]},{"Key":"docs it","Fragments":["looks"]},{"Key":"the reference.","Fragments":["If"]},{"Key":"reference. If","Fragments":["you"]},{"Key":"a chance","Fragments":["to"]},{"Key":"to pick","Fragments":["up"]},{"Key":"pick up","Fragments":["the"]},{"Key":"the Scott","Fragments":["Myers"]},{"Key":"Scott Myers","Fragments":["book"]},{"Key":"Myers book","Fragments":["on"]},{"Key":"book on","Fragments":["55"]},{"Key":"on 55","Fragments":["specific"]},{"Key":"55 specific","Fragments":["things,"]},{"Key":"specific things,","Fragments":["it"]},{"Key":"things, it","Fragments":["talks"]},{"Key":"it talks","Fragments":["about"]},{"Key":"talks about","Fragments":["const"]},{"Key":"about const","Fragments":["references."]},{"Key":"references. It's","Fragments":["worth"]},{"Key":"It's worth","Fragments":["a"]},{"Key":"worth a","Fragments":["read"]},{"Key":"a read","Fragments":["and"]},{"Key":"and changed","Fragments":["how"]},{"Key":"changed how","Fragments":["I","I"]},{"Key":"I coded,","Fragments":["although"]},{"Key":"coded, although","Fragments":["it's"]},{"Key":"although it's","Fragments":["starting"]},{"Key":"it's starting","Fragments":["to"]},{"Key":"your comment.","Fragments":["I'm"]},{"Key":"comment. I'm","Fragments":["going"]},{"Key":"try that","Fragments":["out."]},{"Key":"correct, thanks","Fragments":["for"]},{"Key":"feedback dcook-au.","Fragments":["I"]},{"Key":"dcook-au. I","Fragments":["went"]},{"Key":"and boiled","Fragments":["it"]},{"Key":"boiled it","Fragments":["down"]},{"Key":"the three","Fragments":["bools","bools","cases","cases,"]},{"Key":"three bools","Fragments":["that","to"]},{"Key":"bools that","Fragments":["I"]},{"Key":"I truly","Fragments":["cared"]},{"Key":"truly cared","Fragments":["about"]},{"Key":"cared about","Fragments":["all","3,","3,"]},{"Key":"about all","Fragments":["initialized"]},{"Key":"all initialized","Fragments":["as"]},{"Key":"initialized as","Fragments":["suggested."]},{"Key":"things clear,","Fragments":["I"]},{"Key":"clear, I","Fragments":["now"]},{"Key":"now have","Fragments":["three"]},{"Key":"three distinct","Fragments":["and"]},{"Key":"distinct and","Fragments":["separate"]},{"Key":"and separate","Fragments":["checks"]},{"Key":"separate checks","Fragments":["for"]},{"Key":"The 'yelling'","Fragments":["case"]},{"Key":"'yelling' case","Fragments":["remained"]},{"Key":"case remained","Fragments":["the"]},{"Key":"remained the","Fragments":["same"]},{"Key":"The 'question'","Fragments":["case"]},{"Key":"'question' case","Fragments":["has"]},{"Key":"case has","Fragments":["a"]},{"Key":"empty upfront","Fragments":["to"]},{"Key":"upfront to","Fragments":["avoid"]},{"Key":"The 'silence'","Fragments":["case"]},{"Key":"'silence' case","Fragments":["is"]},{"Key":"now comparing","Fragments":["to"]},{"Key":"comparing to","Fragments":["string::npos"]},{"Key":"to string::npos","Fragments":["instead"]},{"Key":"string::npos instead","Fragments":["of"]},{"Key":"At this","Fragments":["point"]},{"Key":"this point","Fragments":["I","we"]},{"Key":"point I","Fragments":["can"]},{"Key":"use my","Fragments":["if"]},{"Key":"my if","Fragments":["else"]},{"Key":"if else","Fragments":["to"]},{"Key":"else to","Fragments":["run"]},{"Key":"run down","Fragments":["the"]},{"Key":"bools to","Fragments":["return"]},{"Key":"conflicted on","Fragments":["the"]},{"Key":"of `inline`","Fragments":["here."]},{"Key":"`inline` here.","Fragments":["In"]},{"Key":"here. In","Fragments":["my"]},{"Key":"original iteration","Fragments":["it"]},{"Key":"made sense","Fragments":["to"]},{"Key":"have these","Fragments":["two"]},{"Key":"functions separate","Fragments":["from"]},{"Key":"separate from","Fragments":["`bob::hey`"]},{"Key":"from `bob::hey`","Fragments":["but"]},{"Key":"`bob::hey` but","Fragments":["now"]},{"Key":"now it's","Fragments":["not"]},{"Key":"so clear.","Fragments":["I"]},{"Key":"clear. I","Fragments":["included","think"]},{"Key":"I included","Fragments":["`inline`"]},{"Key":"included `inline`","Fragments":["to"]},{"Key":"`inline` to","Fragments":["keep"]},{"Key":"keep `bob::hey`","Fragments":["looking"]},{"Key":"`bob::hey` looking","Fragments":["clean"]},{"Key":"looking clean","Fragments":["and"]},{"Key":"simple but","Fragments":["I"]},{"Key":"would love","Fragments":["to"]},{"Key":"love to","Fragments":["here","use"]},{"Key":"to here","Fragments":["some"]},{"Key":"here some","Fragments":["other"]},{"Key":"made `findSubString`","Fragments":["more"]},{"Key":"`findSubString` more","Fragments":["logical"]},{"Key":"logical using","Fragments":["the"]},{"Key":"the `min`","Fragments":["function"]},{"Key":"`min` function","Fragments":["but"]},{"Key":"the `substr`","Fragments":["portion"]},{"Key":"`substr` portion","Fragments":["because"]},{"Key":"portion because","Fragments":["it"]},{"Key":"solution also","Fragments":["work"]},{"Key":"for mismatch","Fragments":["strings"]},{"Key":"mismatch strings","Fragments":["where"]},{"Key":"first element","Fragments":["is"]},{"Key":"the erroneous","Fragments":["one."]},{"Key":"erroneous one.","Fragments":["I"]},{"Key":"is outside","Fragments":["the"]},{"Key":"wonder how","Fragments":["to"]},{"Key":"match strings","Fragments":["which"]},{"Key":"strings which","Fragments":["include"]},{"Key":"which include","Fragments":["additional"]},{"Key":"include additional","Fragments":["characters"]},{"Key":"additional characters","Fragments":["at"]},{"Key":"the begining","Fragments":["or"]},{"Key":"begining or","Fragments":["end"]},{"Key":"or end","Fragments":["and"]},{"Key":"end and","Fragments":["also"]},{"Key":"also include","Fragments":["mismatched"]},{"Key":"include mismatched","Fragments":["elements"]},{"Key":"mismatched elements","Fragments":["in"]},{"Key":"As always","Fragments":["other"]},{"Key":"always other","Fragments":["feedback"]},{"Key":"other feedback","Fragments":["is"]},{"Key":"the feedback!","Fragments":["Changed","I'll"]},{"Key":"feedback! Changed","Fragments":["those"]},{"Key":"Changed those","Fragments":["names,"]},{"Key":"those names,","Fragments":["good"]},{"Key":"names, good","Fragments":["point."]},{"Key":"booleans -","Fragments":["I've"]},{"Key":"I've worked","Fragments":["with"]},{"Key":"many people","Fragments":["who"]},{"Key":"people who","Fragments":["love"]},{"Key":"who love","Fragments":["to"]},{"Key":"any int","Fragments":["as"]},{"Key":"int as","Fragments":["a"]},{"Key":"boolean and","Fragments":["vice","calling"]},{"Key":"versa. As","Fragments":["you"]},{"Key":"can imagine,","Fragments":["large"]},{"Key":"imagine, large","Fragments":["formulas"]},{"Key":"large formulas","Fragments":["can"]},{"Key":"formulas can","Fragments":["get"]},{"Key":"get dicey","Fragments":["pretty"]},{"Key":"dicey pretty","Fragments":["fast."]},{"Key":"plus side","Fragments":["-"]},{"Key":"side -","Fragments":["not"]},{"Key":"using if","Fragments":["statements"]},{"Key":"statements can","Fragments":["be"]},{"Key":"be considerably","Fragments":["quicker"]},{"Key":"considerably quicker","Fragments":["and"]},{"Key":"quicker and","Fragments":["possibly"]},{"Key":"possibly even","Fragments":["allow"]},{"Key":"even allow","Fragments":["your"]},{"Key":"allow your","Fragments":["code"]},{"Key":"easily parallelized.","Fragments":["For"]},{"Key":"parallelized. For","Fragments":["this"]},{"Key":"example though,","Fragments":["I"]},{"Key":"though, I","Fragments":["suppose"]},{"Key":"suppose it's","Fragments":["more"]},{"Key":"it's more","Fragments":["of"]},{"Key":"a stylistic","Fragments":["choice"]},{"Key":"stylistic choice","Fragments":[":)."]},{"Key":"link about","Fragments":["constructor","64bit"]},{"Key":"about constructor","Fragments":["initialiser"]},{"Key":"initialiser lists.","Fragments":["http://en.cppreference.com/w/cpp/language/initializer_list"]},{"Key":"Also if","Fragments":["you"]},{"Key":"chance I","Fragments":["suggest"]},{"Key":"suggest referring","Fragments":["to"]},{"Key":"referring to","Fragments":["Scott"]},{"Key":"to Scott","Fragments":["Meyers"]},{"Key":"Scott Meyers","Fragments":["book","has"]},{"Key":"Meyers book","Fragments":["\"Effective"]},{"Key":"book \"Effective","Fragments":["C++\"."]},{"Key":"\"Effective C++\".","Fragments":["I"]},{"Key":"C++\". I","Fragments":["have"]},{"Key":"the 3rd","Fragments":["edition"]},{"Key":"3rd edition","Fragments":["and"]},{"Key":"edition and","Fragments":["Chapter"]},{"Key":"and Chapter","Fragments":["1"]},{"Key":"Chapter 1","Fragments":["item"]},{"Key":"1 item","Fragments":["4"]},{"Key":"item 4","Fragments":["covers"]},{"Key":"4 covers","Fragments":["this"]},{"Key":"covers this","Fragments":["topic."]},{"Key":" ```counter::counter(const","Fragments":["string"]},{"Key":"```counter::counter(const string","Fragments":["\u0026inputStrand)"]},{"Key":" :","Fragments":["strand(inputStrand)"]},{"Key":" Be","Fragments":["careful"]},{"Key":"Be careful","Fragments":["of"]},{"Key":"careful of","Fragments":["your"]},{"Key":"use when","Fragments":["talking"]},{"Key":"when talking","Fragments":["about"]},{"Key":"the keyword","Fragments":["```inline```."]},{"Key":"keyword ```inline```.","Fragments":["I"]},{"Key":"```inline```. I","Fragments":["think"]},{"Key":"think what","Fragments":["you"]},{"Key":"are really","Fragments":["conflicted","sufficient"]},{"Key":"really conflicted","Fragments":["about"]},{"Key":"conflicted about","Fragments":["here"]},{"Key":"about here","Fragments":["is"]},{"Key":"have become","Fragments":["so"]},{"Key":"become so","Fragments":["simple"]},{"Key":"so simple","Fragments":["that"]},{"Key":"simple that","Fragments":["they"]},{"Key":"be needed","Fragments":["any"]},{"Key":"needed any","Fragments":["more."]},{"Key":"any more.","Fragments":["As"]},{"Key":"more. As","Fragments":["opposed"]},{"Key":"As opposed","Fragments":["to"]},{"Key":"to any","Fragments":["actual","feedback.","of"]},{"Key":"any actual","Fragments":["implication"]},{"Key":"actual implication","Fragments":["of"]},{"Key":"implication of","Fragments":["using"]},{"Key":"the inline","Fragments":["keyword.","keyword"]},{"Key":" Considering","Fragments":["the"]},{"Key":"Considering the","Fragments":["style"]},{"Key":"the style","Fragments":["you"]},{"Key":"style you","Fragments":["have"]},{"Key":"have chosen","Fragments":["for"]},{"Key":"chosen for","Fragments":["```bob::hey()```"]},{"Key":"for ```bob::hey()```","Fragments":["I"]},{"Key":"```bob::hey()``` I","Fragments":["would"]},{"Key":"would think","Fragments":["keeping"]},{"Key":"are is","Fragments":["the"]},{"Key":"best choice.","Fragments":["This"]},{"Key":"choice. This","Fragments":["is"]},{"Key":"it maintains","Fragments":["a"]},{"Key":"maintains a","Fragments":["consistent"]},{"Key":"a consistent","Fragments":["feel."]},{"Key":"consistent feel.","Fragments":["If"]},{"Key":"feel. If","Fragments":["you"]},{"Key":"them I","Fragments":["would"]},{"Key":"suggest refactoring","Fragments":["to"]},{"Key":"refactoring to","Fragments":["change"]},{"Key":"inline keyword","Fragments":["it"]},{"Key":"keyword it","Fragments":["has"]},{"Key":"of generally","Fragments":["mis-understood"]},{"Key":"generally mis-understood","Fragments":["and"]},{"Key":"mis-understood and","Fragments":["legacy"]},{"Key":"and legacy","Fragments":["behaviour."]},{"Key":"legacy behaviour.","Fragments":["Here"]},{"Key":"behaviour. Here","Fragments":["is"]},{"Key":"to for","Fragments":["your"]},{"Key":"general information.","Fragments":["http://stackoverflow.com/questions/1759300/when-should-i-write-the-keyword-inline-for-a-function-method"]},{"Key":" @nannie-mad","Fragments":["I"]},{"Key":"@nannie-mad I","Fragments":["was"]},{"Key":"just trying","Fragments":["to"]},{"Key":"it simple","Fragments":["and"]},{"Key":"and limit","Fragments":["myself"]},{"Key":"limit myself","Fragments":["to"]},{"Key":"only using","Fragments":["the"]},{"Key":"standard facilities.","Fragments":["Thanks"]},{"Key":"facilities. Thanks","Fragments":["for"]},{"Key":"the suggestion,","Fragments":["I'll"]},{"Key":"I'll take","Fragments":["a"]},{"Key":"Added the","Fragments":["class","comments"]},{"Key":"definition from","Fragments":["the"]},{"Key":"for looping","Fragments":["in"]},{"Key":"looping in","Fragments":["the"]},{"Key":"the minus()","Fragments":["function"]},{"Key":"minus() function","Fragments":["and"]},{"Key":"am sure","Fragments":["there"]},{"Key":"some deterministic","Fragments":["calculation"]},{"Key":"deterministic calculation","Fragments":["that"]},{"Key":"calculation that","Fragments":["can"]},{"Key":"can perform","Fragments":["this"]},{"Key":"this similar","Fragments":["to"]},{"Key":"the plus()","Fragments":["function."]},{"Key":"plus() function.","Fragments":["It"]},{"Key":"might need","Fragments":["a","to"]},{"Key":"a change","Fragments":["to"]},{"Key":"explicit formulas","Fragments":["for"]},{"Key":"formulas for","Fragments":["these"]},{"Key":"these operations","Fragments":["so"]},{"Key":"operations so","Fragments":["no"]},{"Key":"so no","Fragments":["looping"]},{"Key":"no looping","Fragments":["is"]},{"Key":"looping is","Fragments":["required."]},{"Key":" D'oh,","Fragments":["you're"]},{"Key":"D'oh, you're","Fragments":["right."]},{"Key":"right. empty()","Fragments":["is"]},{"Key":"empty() is","Fragments":["a"]},{"Key":"should prefer","Fragments":["calling"]},{"Key":"prefer calling","Fragments":["```string::empty()```"]},{"Key":"calling ```string::empty()```","Fragments":["over"]},{"Key":"```string::empty()``` over","Fragments":["comparing"]},{"Key":"over comparing","Fragments":["the"]},{"Key":"comparing the","Fragments":["length","strings."]},{"Key":"length with","Fragments":["0."]},{"Key":"with 0.","Fragments":["This"]},{"Key":"0. This","Fragments":["is"]},{"Key":"it possible","Fragments":["to","to"]},{"Key":"submit two","Fragments":["files?"]},{"Key":"two files?","Fragments":["Or"]},{"Key":"files? Or","Fragments":["will"]},{"Key":"Or will","Fragments":["I"]},{"Key":"will I","Fragments":["need"]},{"Key":"combine my","Fragments":["header"]},{"Key":"my header","Fragments":["file"]},{"Key":"file along","Fragments":["with"]},{"Key":"my class","Fragments":["definition?"]},{"Key":"whether we","Fragments":["can"]},{"Key":"can submit","Fragments":["multiple"]},{"Key":"multiple files.","Fragments":["Seems"]},{"Key":"files. Seems","Fragments":["to"]},{"Key":"be bad","Fragments":["style"]},{"Key":"bad style","Fragments":["to"]},{"Key":"combine the","Fragments":["header"]},{"Key":"header with","Fragments":["the"]},{"Key":"On topic,","Fragments":["is"]},{"Key":"topic, is","Fragments":["there"]},{"Key":"reason you","Fragments":["aren't"]},{"Key":"you aren't","Fragments":["using"]},{"Key":"aren't using","Fragments":["c++11?"]},{"Key":"using c++11?","Fragments":["I"]},{"Key":"c++11? I","Fragments":["used"]},{"Key":"used back()","Fragments":["in"]},{"Key":"use range","Fragments":["for","for:"]},{"Key":"loops too,","Fragments":["which"]},{"Key":"too, which","Fragments":["can"]},{"Key":"can help","Fragments":["with","accomplish"]},{"Key":"Nice improvements","Fragments":["from"]},{"Key":"improvements from","Fragments":["the"]},{"Key":"last iteration.","Fragments":["One"]},{"Key":"iteration. One","Fragments":["more"]},{"Key":"One more","Fragments":["possibility","thing,"]},{"Key":"more possibility","Fragments":["to"]},{"Key":"possibility to","Fragments":["consider"]},{"Key":"consider here","Fragments":["is"]},{"Key":"is breaking","Fragments":["out"]},{"Key":"condition into","Fragments":["a"]},{"Key":"read, it","Fragments":["could"]},{"Key":"know an","Fragments":["answer,"]},{"Key":"an answer,","Fragments":["and"]},{"Key":"answer, and","Fragments":["don't","I'm"]},{"Key":"don't run","Fragments":["unnecessary"]},{"Key":"run unnecessary","Fragments":["checks."]},{"Key":"my mac","Fragments":["this"]},{"Key":"mac this","Fragments":["code"]},{"Key":"think ran","Fragments":["successfully"]},{"Key":"ran successfully","Fragments":["I"]},{"Key":"successfully I","Fragments":["will"]},{"Key":"still go","Fragments":["thru"]},{"Key":"go thru","Fragments":["what"]},{"Key":"thru what","Fragments":["you"]},{"Key":"you pointed","Fragments":["and","it"]},{"Key":"pointed and","Fragments":["try"]},{"Key":"fix it.","Fragments":["Thanks"]},{"Key":"it. Thanks","Fragments":["for"]},{"Key":"for copying","Fragments":["the"]},{"Key":"and giving","Fragments":["it"]},{"Key":"giving it","Fragments":["a"]},{"Key":"try on","Fragments":["your"]},{"Key":"your machine,","Fragments":["appreciate"]},{"Key":"machine, appreciate","Fragments":["it."]},{"Key":" Yeah","Fragments":["I"]},{"Key":"that book","Fragments":["and"]},{"Key":"problem with","Fragments":["const","your"]},{"Key":"calls like","Fragments":["trim"]},{"Key":"like trim","Fragments":["and"]},{"Key":"trim and","Fragments":["all"]},{"Key":"all will","Fragments":["have"]},{"Key":"copy so","Fragments":["you"]},{"Key":"potentially doing","Fragments":["the"]},{"Key":"thing what","Fragments":["const"]},{"Key":"what const","Fragments":["reference"]},{"Key":"reference avoids","Fragments":["(making"]},{"Key":"avoids (making","Fragments":["copies)."]},{"Key":"the sort","Fragments":["and"]},{"Key":"and transform","Fragments":["algorithms,"]},{"Key":"transform algorithms,","Fragments":["I"]},{"Key":"algorithms, I","Fragments":["reduce"]},{"Key":"I reduce","Fragments":["the"]},{"Key":"it's characters","Fragments":["and"]},{"Key":"compare that","Fragments":["against"]},{"Key":"that against","Fragments":["the"]},{"Key":"characters of","Fragments":["the"]},{"Key":"I stored","Fragments":["the"]},{"Key":"stored the","Fragments":["lower"]},{"Key":"the lower","Fragments":["case"]},{"Key":"and sorted","Fragments":["versions"]},{"Key":"sorted versions","Fragments":["of"]},{"Key":"moved those","Fragments":["conversions"]},{"Key":"those conversions","Fragments":["into"]},{"Key":"conversions into","Fragments":["the"]},{"Key":"match function,","Fragments":["but"]},{"Key":"function, but","Fragments":["decided","that's"]},{"Key":"function was","Fragments":["called","also"]},{"Key":"was called","Fragments":["multiple"]},{"Key":"called multiple","Fragments":["times."]},{"Key":"you mikedal.","Fragments":["I"]},{"Key":"mikedal. I","Fragments":["went"]},{"Key":"submitted one","Fragments":["last"]},{"Key":"last revision","Fragments":["where"]},{"Key":"revision where","Fragments":["I"]},{"Key":"I break","Fragments":["out"]},{"Key":"break out","Fragments":["the"]},{"Key":"three cases","Fragments":["into"]},{"Key":"cases into","Fragments":["separate"]},{"Key":"separate functions,","Fragments":["and"]},{"Key":"am now","Fragments":["returning"]},{"Key":"now returning","Fragments":["the"]},{"Key":"reply as","Fragments":["soon"]},{"Key":"true to","Fragments":["avoid"]},{"Key":"unnecessary extra","Fragments":["processing"]},{"Key":"extra processing","Fragments":["time."]},{"Key":"constructor instead","Fragments":["of"]},{"Key":"of looping","Fragments":["over","through","using"]},{"Key":"the C-string","Fragments":["character"]},{"Key":"C-string character","Fragments":["array,"]},{"Key":"character array,","Fragments":["you"]},{"Key":"array, you","Fragments":["could"]},{"Key":"the ```string::operator[]```","Fragments":["or"]},{"Key":"```string::operator[]``` or","Fragments":["use"]},{"Key":"or use","Fragments":["a"]},{"Key":"C++11 range","Fragments":["for"]},{"Key":"loop ```for","Fragments":["(char"]},{"Key":"input) {","Fragments":["..."]},{"Key":"The maximum","Fragments":["64bit"]},{"Key":"maximum 64bit","Fragments":["number"]},{"Key":"64bit number","Fragments":["is"]},{"Key":"number is","Fragments":["defined"]},{"Key":"a MACRO","Fragments":["in"]},{"Key":"MACRO in","Fragments":["the"]},{"Key":"standard as","Fragments":["UINT64_MAX"]},{"Key":"as UINT64_MAX","Fragments":["or"]},{"Key":"UINT64_MAX or","Fragments":["you"]},{"Key":"or you","Fragments":["can"]},{"Key":"can also","Fragments":["use"]},{"Key":"use std::numeric_limits\u003c\u003e::max().","Fragments":["I"]},{"Key":"std::numeric_limits\u003c\u003e::max(). I","Fragments":["would"]},{"Key":"prefer these","Fragments":["to"]},{"Key":"your magic","Fragments":["number."]},{"Key":"magic number.","Fragments":["Even"]},{"Key":"number. Even","Fragments":["as"]},{"Key":"Even as","Fragments":["a"]},{"Key":"a hard","Fragments":["coded"]},{"Key":"hard coded","Fragments":["value"]},{"Key":"coded value","Fragments":["it"]},{"Key":"value it","Fragments":["would"]},{"Key":"better expressed","Fragments":["as"]},{"Key":"as hex","Fragments":["```0xFFFFFFFFFFFFFFFF```."]},{"Key":" @kaelyn","Fragments":["I"]},{"Key":"@kaelyn I","Fragments":["had"]},{"Key":"had problems","Fragments":["getting"]},{"Key":"problems getting","Fragments":["windows"]},{"Key":"getting windows","Fragments":["VS"]},{"Key":"windows VS","Fragments":["2013"]},{"Key":"VS 2013","Fragments":["to"]},{"Key":"2013 to","Fragments":["play"]},{"Key":"play nice","Fragments":["with"]},{"Key":"nice with","Fragments":["my"]},{"Key":"my machine.","Fragments":["It"]},{"Key":"machine. It","Fragments":["kept"]},{"Key":"It kept","Fragments":["giving"]},{"Key":"kept giving","Fragments":["me"]},{"Key":"giving me","Fragments":["errors"]},{"Key":"me errors","Fragments":["during"]},{"Key":"during link","Fragments":["about"]},{"Key":"about 64bit","Fragments":["target"]},{"Key":"64bit target","Fragments":["using"]},{"Key":"target using","Fragments":["32bit"]},{"Key":"using 32bit","Fragments":["libraries."]},{"Key":"32bit libraries.","Fragments":["I"]},{"Key":"libraries. I","Fragments":["gave"]},{"Key":"gave up","Fragments":["after"]},{"Key":"up after","Fragments":["an"]},{"Key":"after an","Fragments":["hour","```if```"]},{"Key":"an hour","Fragments":["trying","or"]},{"Key":"hour trying","Fragments":["to"]},{"Key":"just reverted","Fragments":["to"]},{"Key":"Just did","Fragments":["a"]},{"Key":"did a","Fragments":["little","fetch,"]},{"Key":"little digging","Fragments":["and"]},{"Key":"digging and","Fragments":["it"]},{"Key":"like g++","Fragments":["supports"]},{"Key":"g++ supports","Fragments":["c++11"]},{"Key":"supports c++11","Fragments":["features"]},{"Key":"c++11 features","Fragments":["if","in"]},{"Key":"features if","Fragments":["the"]},{"Key":"the -std=c++11","Fragments":["is"]},{"Key":"-std=c++11 is","Fragments":["given"]},{"Key":"is given","Fragments":["as"]},{"Key":"a compile","Fragments":["option."]},{"Key":"compile option.","Fragments":["The"]},{"Key":"option. The","Fragments":["back()"]},{"Key":"The back()","Fragments":["function"]},{"Key":"back() function","Fragments":["now"]},{"Key":"function now","Fragments":["seems"]},{"Key":"now seems","Fragments":["to"]},{"Key":"have never","Fragments":["used"]},{"Key":"used ranges","Fragments":["for"]},{"Key":"ranges for","Fragments":["loops"]},{"Key":"loops before","Fragments":["in"]},{"Key":"before in","Fragments":["c++.","c++."]},{"Key":"c++. I'll","Fragments":["look"]},{"Key":"I'll look","Fragments":["into","into"]},{"Key":"into them.","Fragments":["Thanks"]},{"Key":"them. Thanks","Fragments":["for"]},{"Key":"suggestion. I'll","Fragments":["try"]},{"Key":"try them","Fragments":["out"]},{"Key":"my next","Fragments":["iteration."]},{"Key":"pretty good!","Fragments":["A"]},{"Key":"good! A","Fragments":["few"]},{"Key":"take note","Fragments":["of:"]},{"Key":"your checkQuestion","Fragments":["function,"]},{"Key":"checkQuestion function,","Fragments":["if"]},{"Key":"function, if","Fragments":["your"]},{"Key":"is null","Fragments":["and","first."]},{"Key":"null and","Fragments":["you"]},{"Key":"run back()","Fragments":["on"]},{"Key":"back() on","Fragments":["it,"]},{"Key":"on it,","Fragments":["it"]},{"Key":"undefined behavior,","Fragments":["so"]},{"Key":"behavior, so","Fragments":["it"]},{"Key":"worth checking","Fragments":["if"]},{"Key":"null first.","Fragments":["Also,"]},{"Key":"first. Also,","Fragments":["the"]},{"Key":"suite doesn't","Fragments":["test"]},{"Key":"doesn't test","Fragments":["for"]},{"Key":"important to","Fragments":["note"]},{"Key":"to note","Fragments":["that"]},{"Key":"is trailing","Fragments":["white"]},{"Key":"mark, the","Fragments":["return"]},{"Key":"function will","Fragments":["be","return","be"]},{"Key":"your checkYell","Fragments":["function,"]},{"Key":"checkYell function,","Fragments":["there"]},{"Key":"are built","Fragments":["in"]},{"Key":"built in","Fragments":["string","string"]},{"Key":"in string","Fragments":["functions","functions"]},{"Key":"that help","Fragments":["do"]},{"Key":"help do","Fragments":["what"]},{"Key":"doing manually","Fragments":["when"]},{"Key":"manually when","Fragments":["iterating"]},{"Key":"your string.","Fragments":["The","If"]},{"Key":"string. The","Fragments":["two"]},{"Key":"The two","Fragments":["functions"]},{"Key":"found useful","Fragments":["for"]},{"Key":"useful for","Fragments":["this"]},{"Key":"this test","Fragments":["case,"]},{"Key":"test case,","Fragments":["were"]},{"Key":"case, were","Fragments":["the"]},{"Key":"were the","Fragments":["isalpha()"]},{"Key":"the isalpha()","Fragments":["function"]},{"Key":"isalpha() function","Fragments":["to"]},{"Key":"is alphabetical,","Fragments":["and"]},{"Key":"alphabetical, and","Fragments":["the"]},{"Key":"the isupper()","Fragments":["function"]},{"Key":"isupper() function","Fragments":["to"]},{"Key":"the alphabetical","Fragments":["character"]},{"Key":"alphabetical character","Fragments":["is"]},{"Key":"your checkSilence","Fragments":["function,"]},{"Key":"checkSilence function,","Fragments":["there"]},{"Key":"also built","Fragments":["in"]},{"Key":"help accomplish","Fragments":["your"]},{"Key":"accomplish your","Fragments":["goal"]},{"Key":"your goal","Fragments":["without"]},{"Key":"goal without","Fragments":["the"]},{"Key":"you wish.","Fragments":["These"]},{"Key":"wish. These","Fragments":["functions"]},{"Key":"These functions","Fragments":["are"]},{"Key":"are empty()","Fragments":["to"]},{"Key":"empty() to","Fragments":["check"]},{"Key":"is null,","Fragments":["and"]},{"Key":"null, and","Fragments":["find_first_not_of()"]},{"Key":"and find_first_not_of()","Fragments":["which"]},{"Key":"find_first_not_of() which","Fragments":["will"]},{"Key":"will allow","Fragments":["you"]},{"Key":"if only","Fragments":["white"]},{"Key":"space exists","Fragments":["in"]},{"Key":"exists in","Fragments":["your","the"]},{"Key":"string. If","Fragments":["there"]},{"Key":"space, you","Fragments":["will"]},{"Key":"My very","Fragments":["first"]},{"Key":"submission to","Fragments":["exercism,"]},{"Key":"to exercism,","Fragments":["all"]},{"Key":"exercism, all","Fragments":["comments"]},{"Key":"all comments","Fragments":["welcome."]},{"Key":" Nice.","Fragments":["Sum"]},{"Key":"Nice. Sum","Fragments":["of"]},{"Key":"Sum of","Fragments":["squares"]},{"Key":"of squares","Fragments":["also"]},{"Key":"squares also","Fragments":["has"]},{"Key":"also has","Fragments":["an"]},{"Key":"an direct","Fragments":["formula"]},{"Key":"direct formula","Fragments":["so"]},{"Key":"formula so","Fragments":["does"]},{"Key":"so does","Fragments":["not"]},{"Key":"not require","Fragments":["a","class"]},{"Key":"can't seem","Fragments":["to"]},{"Key":"the testing","Fragments":["to","procedures"]},{"Key":"work. Please","Fragments":["help!"]},{"Key":"Please help!","Fragments":["Thanks."]},{"Key":"you so","Fragments":["much"]},{"Key":"much that","Fragments":["really"]},{"Key":"With C++11","Fragments":["lambdas"]},{"Key":"C++11 lambdas","Fragments":["you"]},{"Key":"lambdas you","Fragments":["no"]},{"Key":"you no","Fragments":["longer"]},{"Key":"longer need","Fragments":["to"]},{"Key":"wrap functions","Fragments":["like"]},{"Key":"like this.","Fragments":["You"]},{"Key":"this. You","Fragments":["can"]},{"Key":"can now","Fragments":["write"]},{"Key":"now write","Fragments":["something"]},{"Key":"like ```std::transform(...,","Fragments":["[](char"]},{"Key":"```std::transform(..., [](char","Fragments":["c){"]},{"Key":"[](char c){","Fragments":["return"]},{"Key":"c){ return","Fragments":["to_rna(c);"]},{"Key":"return to_rna(c);","Fragments":["})```.","});","}"]},{"Key":"to ```std::pow```","Fragments":["to","thanks"]},{"Key":"```std::pow``` to","Fragments":["create"]},{"Key":"the magnitude","Fragments":["selection."]},{"Key":"What was","Fragments":["the"]},{"Key":"all enviroment","Fragments":["set."]},{"Key":"the complete","Fragments":["life"]},{"Key":"complete life","Fragments":["cycle."]},{"Key":" windows7","Fragments":["64bit"]},{"Key":"people's solutions","Fragments":["I"]},{"Key":"exercise. I","Fragments":["will"]},{"Key":"of std","Fragments":["algos,"]},{"Key":"std algos,","Fragments":["it's"]},{"Key":"algos, it's","Fragments":["really"]},{"Key":"good also","Fragments":["abstracting"]},{"Key":"also abstracting","Fragments":["each"]},{"Key":"abstracting each","Fragments":["check"]},{"Key":"each check","Fragments":["in"]},{"Key":"check in","Fragments":["a"]},{"Key":"so checks","Fragments":["related"]},{"Key":"checks related","Fragments":["to"]},{"Key":"be just","Fragments":["kept"]},{"Key":"just kept","Fragments":["to"]},{"Key":"kept to","Fragments":["it."]},{"Key":"could optimize","Fragments":["a","these"]},{"Key":"optimize a","Fragments":["call"]},{"Key":"a call","Fragments":["to"]},{"Key":"to yelling","Fragments":["by"]},{"Key":"yelling by","Fragments":["saving"]},{"Key":"by saving","Fragments":["it"]},{"Key":"saving it","Fragments":["in"]},{"Key":" try","Fragments":["this"]},{"Key":"this tutorial,","Fragments":["I"]},{"Key":"tutorial, I","Fragments":["used"]},{"Key":"the steps","Fragments":["in"]},{"Key":"steps in","Fragments":["it"]},{"Key":"in it","Fragments":["and"]},{"Key":"and got","Fragments":["it"]},{"Key":"got it","Fragments":["to"]},{"Key":"little easier","Fragments":["to"]},{"Key":"read with","Fragments":["a"]},{"Key":"a match_reslt","Fragments":["typedef"]},{"Key":"match_reslt typedef","Fragments":["so"]},{"Key":"typedef so","Fragments":["the"]},{"Key":"the func","Fragments":["sig"]},{"Key":"func sig","Fragments":["wasn't"]},{"Key":"sig wasn't","Fragments":["a"]},{"Key":"wasn't a","Fragments":["million"]},{"Key":"a million","Fragments":["chars"]},{"Key":"million chars","Fragments":["long."]},{"Key":"chars long.","Fragments":["Using"]},{"Key":"long. Using","Fragments":["boosts"]},{"Key":"Using boosts","Fragments":["to_lower_copy"]},{"Key":"boosts to_lower_copy","Fragments":["as"]},{"Key":"to_lower_copy as","Fragments":["it's"]},{"Key":"as it's","Fragments":["nice"]},{"Key":"simple to","Fragments":["use."]},{"Key":"use. Ok,","Fragments":["rip"]},{"Key":"Ok, rip","Fragments":["it"]},{"Key":"is different","Fragments":["about"]},{"Key":"different about","Fragments":["your"]},{"Key":"your way?","Fragments":["Is"]},{"Key":"way? Is","Fragments":["there"]},{"Key":"a specific","Fragments":["advantage?"]},{"Key":"specific advantage?","Fragments":["The"]},{"Key":"advantage? The","Fragments":["way"]},{"Key":"it, you're","Fragments":["essentially"]},{"Key":"you're essentially","Fragments":["doing"]},{"Key":"essentially doing","Fragments":["the"]},{"Key":" @kaya","Fragments":["Thanks"]},{"Key":"@kaya Thanks","Fragments":["for"]},{"Key":"think to","Fragments":["use","use"]},{"Key":"I've update","Fragments":["my"]},{"Key":"update my","Fragments":["solution"]},{"Key":"solution based","Fragments":["on"]},{"Key":"it concise.","Fragments":["Tear"]},{"Key":"concise. Tear","Fragments":["it"]},{"Key":"Tear it","Fragments":["to"]},{"Key":"The end","Fragments":["result"]},{"Key":"end result","Fragments":["is"]},{"Key":"same but","Fragments":["what"]},{"Key":"happens during","Fragments":["the"]},{"Key":"the objects","Fragments":["construction"]},{"Key":"objects construction","Fragments":["is"]},{"Key":"construction is","Fragments":["different."]},{"Key":"is different.","Fragments":["To"]},{"Key":"different. To","Fragments":["paraphrase"]},{"Key":"To paraphrase","Fragments":["from"]},{"Key":"paraphrase from","Fragments":["Scott"]},{"Key":"from Scott","Fragments":["Meyers:"]},{"Key":" \"The","Fragments":["rules","Hamming"]},{"Key":"\"The rules","Fragments":["of"]},{"Key":"C++ stipulate","Fragments":["that"]},{"Key":"stipulate that","Fragments":["data"]},{"Key":"that data","Fragments":["members"]},{"Key":"data members","Fragments":["of"]},{"Key":"object are","Fragments":["initialized"]},{"Key":"are initialized","Fragments":["before"]},{"Key":"initialized before","Fragments":["the"]},{"Key":"the body","Fragments":["of","of","of"]},{"Key":"body of","Fragments":["a","the","the"]},{"Key":"constructor is","Fragments":["entered."]},{"Key":"is entered.","Fragments":["Inside"]},{"Key":"entered. Inside","Fragments":["the"]},{"Key":"Inside the","Fragments":["```counter```"]},{"Key":"the ```counter```","Fragments":["constructor,","constructor.\""]},{"Key":"```counter``` constructor,","Fragments":["the"]},{"Key":"constructor, the","Fragments":["```strand```"]},{"Key":"the ```strand```","Fragments":["member"]},{"Key":"```strand``` member","Fragments":["isn't"]},{"Key":"member isn't","Fragments":["being"]},{"Key":"isn't being","Fragments":["initialized,"]},{"Key":"being initialized,","Fragments":["it's"]},{"Key":"initialized, it's","Fragments":["being"]},{"Key":"it's being","Fragments":["assigned."]},{"Key":"being assigned.","Fragments":["Initialization"]},{"Key":"assigned. Initialization","Fragments":["took"]},{"Key":"Initialization took","Fragments":["place"]},{"Key":"took place","Fragments":["earlier"]},{"Key":"place earlier","Fragments":["—"]},{"Key":"earlier —","Fragments":["when"]},{"Key":"— when","Fragments":["the"]},{"Key":"constructor was","Fragments":["automatically"]},{"Key":"was automatically","Fragments":["called"]},{"Key":"automatically called","Fragments":["prior"]},{"Key":"called prior","Fragments":["to"]},{"Key":"to entering","Fragments":["the"]},{"Key":"entering the","Fragments":["body"]},{"Key":"So in","Fragments":["your"]},{"Key":"you default","Fragments":["construct"]},{"Key":"default construct","Fragments":["```strand```"]},{"Key":"construct ```strand```","Fragments":["then"]},{"Key":"```strand``` then","Fragments":["assign"]},{"Key":"then assign","Fragments":["over"]},{"Key":"assign over","Fragments":["the"]},{"Key":"The member","Fragments":["initialisation"]},{"Key":"member initialisation","Fragments":["list"]},{"Key":"initialisation list","Fragments":["avoids"]},{"Key":"list avoids","Fragments":["this"]},{"Key":"avoids this","Fragments":["problem."]},{"Key":"my example","Fragments":["```strand```"]},{"Key":"example ```strand```","Fragments":["is"]},{"Key":"```strand``` is","Fragments":["copy-constructed"]},{"Key":"is copy-constructed","Fragments":["from"]},{"Key":"copy-constructed from","Fragments":["```inputStrand```."]},{"Key":"from ```inputStrand```.","Fragments":["Ie"]},{"Key":"```inputStrand```. Ie","Fragments":["there"]},{"Key":"Ie there","Fragments":["is"]},{"Key":"for std::string","Fragments":["it"]},{"Key":"std::string it","Fragments":["might"]},{"Key":"might seem","Fragments":["like"]},{"Key":"important but","Fragments":["this"]},{"Key":"preferred C++","Fragments":["style"]},{"Key":"how clear","Fragments":["the"]},{"Key":"clear the","Fragments":["code"]},{"Key":"is and","Fragments":["how"]},{"Key":"well variables","Fragments":["and"]},{"Key":"are named.","Fragments":["Everything"]},{"Key":"named. Everything","Fragments":["is"]},{"Key":"Everything is","Fragments":["carefully","implemented"]},{"Key":"is carefully","Fragments":["modularized"]},{"Key":"carefully modularized","Fragments":["and"]},{"Key":"modularized and","Fragments":["has"]},{"Key":"has functional","Fragments":["programming"]},{"Key":"programming feel","Fragments":["to"]},{"Key":"feel to","Fragments":["it,"]},{"Key":"to it,","Fragments":["const","so"]},{"Key":"it, const","Fragments":["references"]},{"Key":"references are","Fragments":["good"]},{"Key":"are good","Fragments":["style"]},{"Key":"style as","Fragments":["well."]},{"Key":"well. Using","Fragments":["reverse"]},{"Key":"Using reverse","Fragments":["iterator"]},{"Key":"reverse iterator","Fragments":["to"]},{"Key":"for question","Fragments":["mark"]},{"Key":"mark elegantly","Fragments":["bypasses"]},{"Key":"elegantly bypasses","Fragments":["need"]},{"Key":"bypasses need","Fragments":["to"]},{"Key":"Your if's","Fragments":["and"]},{"Key":"if's and","Fragments":["namespaces"]},{"Key":"and namespaces","Fragments":["are"]},{"Key":"are Egyptian","Fragments":["brackets,"]},{"Key":"Egyptian brackets,","Fragments":["but"]},{"Key":"brackets, but","Fragments":["functions"]},{"Key":"but functions","Fragments":["are"]},{"Key":"are not.","Fragments":["Any"]},{"Key":"Any specific","Fragments":["reason?"]},{"Key":"Also, while","Fragments":["this","it's"]},{"Key":"while this","Fragments":["style"]},{"Key":"this style","Fragments":["has"]},{"Key":"style has","Fragments":["a"]},{"Key":"of clarity","Fragments":["it"]},{"Key":"clarity it","Fragments":["comes"]},{"Key":"it comes","Fragments":["at"]},{"Key":"comes at","Fragments":["a"]},{"Key":"a cost","Fragments":["of"]},{"Key":" clear","Fragments":["compared"]},{"Key":"clear compared","Fragments":["to"]},{"Key":" easier","Fragments":["to"]},{"Key":"is readily","Fragments":["apparent"]},{"Key":" requires","Fragments":["a"]},{"Key":"of imports","Fragments":["(opt"]},{"Key":"imports (opt","Fragments":["only"]},{"Key":"(opt only","Fragments":["need"]},{"Key":" iterates","Fragments":["over"]},{"Key":"over array","Fragments":["at"]},{"Key":"array at","Fragments":["least"]},{"Key":"least 2","Fragments":["times"]},{"Key":"2 times","Fragments":["(possibly"]},{"Key":"times (possibly","Fragments":["3"]},{"Key":"(possibly 3","Fragments":["depending"]},{"Key":"3 depending","Fragments":["on"]},{"Key":"how trim","Fragments":["is"]},{"Key":"trim is","Fragments":["implemented)"]},{"Key":" trim","Fragments":["modifies"]},{"Key":"trim modifies","Fragments":["string"]},{"Key":"modifies string","Fragments":["(heap"]},{"Key":"string (heap","Fragments":["object"]},{"Key":"(heap object","Fragments":["creation?)"]},{"Key":" actually","Fragments":["took"]},{"Key":"actually took","Fragments":["3-4"]},{"Key":"took 3-4","Fragments":["longer"]},{"Key":"3-4 longer","Fragments":["to"]},{"Key":"write due","Fragments":["to"]},{"Key":"to having","Fragments":["look"]},{"Key":"having look","Fragments":["up"]},{"Key":"up all","Fragments":["the"]},{"Key":"with trim,","Fragments":["see"]},{"Key":"trim, see","Fragments":["in"]},{"Key":"see in","Fragments":["code"]},{"Key":"like replies","Fragments":["hardcoded"]},{"Key":"replies hardcoded","Fragments":["as"]},{"Key":"hardcoded as","Fragments":["constants"]},{"Key":"constants at","Fragments":["the"]},{"Key":"top and","Fragments":["C++"]},{"Key":"and C++","Fragments":["11"]},{"Key":"11 only","Fragments":["solution"]},{"Key":"only solution","Fragments":["(most"]},{"Key":"solution (most","Fragments":["others"]},{"Key":"(most others","Fragments":["here"]},{"Key":"others here","Fragments":["use"]},{"Key":"It had","Fragments":["been"]},{"Key":"had been","Fragments":["pointed"]},{"Key":"been pointed","Fragments":["out"]},{"Key":"can actually","Fragments":["just"]},{"Key":"actually just","Fragments":["use"]},{"Key":"use namespace","Fragments":["and"]},{"Key":"avoid static","Fragments":["function"]},{"Key":"all. I","Fragments":["did"]},{"Key":"not do","Fragments":["that"]},{"Key":"that either,","Fragments":["but"]},{"Key":"either, but","Fragments":["idea"]},{"Key":"but idea","Fragments":["is"]},{"Key":"is use","Fragments":["right","an"]},{"Key":"use right","Fragments":["tool"]},{"Key":"right tool","Fragments":["for"]},{"Key":"tool for","Fragments":["the","matching"]},{"Key":"the job.","Fragments":["This"]},{"Key":"job. This","Fragments":["task"]},{"Key":"This task","Fragments":["simply"]},{"Key":"task simply","Fragments":["does"]},{"Key":"simply does","Fragments":["not"]},{"Key":"require class","Fragments":["object"]},{"Key":"class object","Fragments":["because"]},{"Key":"object because","Fragments":["you"]},{"Key":"to persist","Fragments":["the"]},{"Key":"persist the","Fragments":["state"]},{"Key":"state or","Fragments":["pass"]},{"Key":"Is not","Fragments":["having"]},{"Key":"not having","Fragments":["static"]},{"Key":"having static","Fragments":["string"]},{"Key":"hey(string s)","Fragments":["an"]},{"Key":"s) an","Fragments":["informed"]},{"Key":"an informed","Fragments":["choice?"]},{"Key":"informed choice?","Fragments":["Everything"]},{"Key":"choice? Everything","Fragments":["else"]},{"Key":"have isQuestion","Fragments":["as"]},{"Key":"isQuestion as","Fragments":["a"]},{"Key":"careful not","Fragments":["to"]},{"Key":"call it","Fragments":["on"]},{"Key":"string. A","Fragments":["comment"]},{"Key":"comment denoting","Fragments":["that"]},{"Key":"denoting that","Fragments":["would"]},{"Key":"be nice.","Fragments":["In"]},{"Key":"nice. In","Fragments":["this"]},{"Key":"case code","Fragments":["will"]},{"Key":"work because","Fragments":["silence"]},{"Key":"because silence","Fragments":["is"]},{"Key":"silence is","Fragments":["checked"]},{"Key":"for first,","Fragments":["but"]},{"Key":"that introduces","Fragments":["subtle"]},{"Key":"introduces subtle","Fragments":["dependency"]},{"Key":"subtle dependency","Fragments":["that"]},{"Key":"dependency that","Fragments":["code"]},{"Key":"that code","Fragments":["maintainer","you"]},{"Key":"code maintainer","Fragments":["might"]},{"Key":"maintainer might","Fragments":["not"]},{"Key":"Have some","Fragments":["brownie"]},{"Key":"some brownie","Fragments":["points"]},{"Key":"brownie points","Fragments":["for"]},{"Key":"points for","Fragments":["giving"]},{"Key":"for giving","Fragments":["credit"]},{"Key":"giving credit","Fragments":["to"]},{"Key":"credit to","Fragments":["trim.","check"]},{"Key":"to trim.","Fragments":["Doing"]},{"Key":"trim. Doing","Fragments":["left"]},{"Key":"Doing left","Fragments":["trim"]},{"Key":"left trim","Fragments":["actually"]},{"Key":"trim actually","Fragments":["better"]},{"Key":"actually better","Fragments":["in"]},{"Key":"better in","Fragments":["this"]},{"Key":"case because","Fragments":["it"]},{"Key":"it avoid","Fragments":["the"]},{"Key":"the bug","Fragments":["on"]},{"Key":"bug on","Fragments":["\""]},{"Key":"on \"","Fragments":["?"]},{"Key":"\" ?","Fragments":["\""]},{"Key":"? \"","Fragments":["input."]},{"Key":"\" input.","Fragments":["If"]},{"Key":"you trim","Fragments":["from"]},{"Key":"trim from","Fragments":["the"]},{"Key":"right this","Fragments":["will"]},{"Key":"question. But","Fragments":["be"]},{"Key":"But be","Fragments":["aware,"]},{"Key":"be aware,","Fragments":["since"]},{"Key":"aware, since","Fragments":["you"]},{"Key":"you gave","Fragments":["attribution"]},{"Key":"gave attribution","Fragments":["this"]},{"Key":"attribution this","Fragments":["function"]},{"Key":"not stolen,","Fragments":["because"]},{"Key":"stolen, because","Fragments":["authors"]},{"Key":"because authors","Fragments":["still"]},{"Key":"authors still","Fragments":["have"]},{"Key":"have it.","Fragments":["You"]},{"Key":"You duplicated","Fragments":["it"]},{"Key":"duplicated it","Fragments":["and"]},{"Key":"and imitation","Fragments":["is"]},{"Key":"imitation is","Fragments":["a"]},{"Key":"a form","Fragments":["of"]},{"Key":"form of","Fragments":["flattery,"]},{"Key":"of flattery,","Fragments":["not"]},{"Key":"flattery, not","Fragments":["theft."]},{"Key":" isSilence","Fragments":["could"]},{"Key":"been coded","Fragments":["as"]},{"Key":"coded as","Fragments":["s.isEmpty(),"]},{"Key":"as s.isEmpty(),","Fragments":["this"]},{"Key":"s.isEmpty(), this","Fragments":["is"]},{"Key":"big deal,","Fragments":["but"]},{"Key":"deal, but","Fragments":["it"]},{"Key":"it fits","Fragments":["better"]},{"Key":"with style","Fragments":["of"]},{"Key":"style of","Fragments":["the"]},{"Key":" Final","Fragments":["thing"]},{"Key":"Final thing","Fragments":["to"]},{"Key":"to notice","Fragments":["that"]},{"Key":"the passed","Fragments":["string"]},{"Key":"passed string","Fragments":["many"]},{"Key":"string many","Fragments":["times."]},{"Key":"many times.","Fragments":["It"]},{"Key":"times. It","Fragments":["is"]},{"Key":"this assignment","Fragments":["in"]},{"Key":"one pass,","Fragments":["but"]},{"Key":"have explicit","Fragments":["loop."]},{"Key":"you did","Fragments":["not","of","`++iterator`","differently","this"]},{"Key":"not trim","Fragments":["the"]},{"Key":"the message.","Fragments":["Good"]},{"Key":"message. Good","Fragments":["thinking"]},{"Key":"Good thinking","Fragments":["on"]},{"Key":"thinking on","Fragments":["early"]},{"Key":"on early","Fragments":["stops"]},{"Key":"early stops","Fragments":["in"]},{"Key":"stops in","Fragments":["your"]},{"Key":"your isSilence","Fragments":["and"]},{"Key":"isSilence and","Fragments":["isYelling"]},{"Key":"isYelling functions,","Fragments":["although"]},{"Key":"functions, although","Fragments":["they"]},{"Key":"although they","Fragments":["are"]},{"Key":"bit convoluted.","Fragments":["Do"]},{"Key":"convoluted. Do","Fragments":["you"]},{"Key":"any includes","Fragments":["in"]},{"Key":"in h","Fragments":["file?"]},{"Key":" hasLetter","Fragments":["is"]},{"Key":"hasLetter is","Fragments":["pretty"]},{"Key":"pretty bad","Fragments":["variable"]},{"Key":"bad variable","Fragments":["name"]},{"Key":"variable name","Fragments":["for","```i```,"]},{"Key":"Since we","Fragments":["can't"]},{"Key":"submit *.h","Fragments":["files"]},{"Key":"*.h files","Fragments":["you"]},{"Key":"files you","Fragments":["should"]},{"Key":"include bob","Fragments":["class"]},{"Key":"the includes/helper","Fragments":["in"]},{"Key":"includes/helper in","Fragments":["*.cpp"]},{"Key":"in *.cpp","Fragments":["file."]},{"Key":" string.back()","Fragments":["has"]},{"Key":"string.back() has","Fragments":["undefined"]},{"Key":"behavior on","Fragments":["an"]},{"Key":"string, this","Fragments":["works"]},{"Key":"this works","Fragments":["because"]},{"Key":"because isSilence","Fragments":["executed"]},{"Key":"isSilence executed","Fragments":["first,"]},{"Key":"executed first,","Fragments":["but"]},{"Key":"not immediately","Fragments":["obvious","clear"]},{"Key":"immediately obvious","Fragments":["so"]},{"Key":"obvious so","Fragments":["a"]},{"Key":"comment would","Fragments":["be"]},{"Key":"Good idea","Fragments":["on"]},{"Key":"idea on","Fragments":["using"]},{"Key":"char reference","Fragments":["in"]},{"Key":"each loops.","Fragments":["Also"]},{"Key":"loops. Also","Fragments":["good"]},{"Key":"Also good","Fragments":["to"]},{"Key":"see early","Fragments":["stop"]},{"Key":"early stop","Fragments":["in"]},{"Key":"stop in","Fragments":["for"]},{"Key":"for loops.","Fragments":["I"]},{"Key":"loops. I","Fragments":["like"]},{"Key":"iterating the","Fragments":["string"]},{"Key":"only twice","Fragments":["in"]},{"Key":"the worst","Fragments":["case,"]},{"Key":"worst case,","Fragments":["and"]},{"Key":"and once","Fragments":["on"]},{"Key":"once on","Fragments":["average."]},{"Key":"if (message.empty())","Fragments":["return"]},{"Key":"(message.empty()) return","Fragments":["true;"]},{"Key":"That piece","Fragments":["of"]},{"Key":"is obsolete,","Fragments":["because"]},{"Key":"obsolete, because","Fragments":["if"]},{"Key":"because if","Fragments":["string"]},{"Key":"will skip","Fragments":["for"]},{"Key":"skip for","Fragments":["each"]},{"Key":"each loop","Fragments":["and"]},{"Key":"go directly","Fragments":["to"]},{"Key":"use islower","Fragments":["instead"]},{"Key":"of !isupper?","Fragments":["No"]},{"Key":"!isupper? No","Fragments":["need"]},{"Key":"to set","Fragments":["is_upper"]},{"Key":"set is_upper","Fragments":["="]},{"Key":"is_upper =","Fragments":["true"]},{"Key":"= true","Fragments":["or"]},{"Key":"or break","Fragments":["either,"]},{"Key":"break either,","Fragments":["simply"]},{"Key":"either, simply","Fragments":["return"]},{"Key":"return false.","Fragments":["A","Then"]},{"Key":"false. A","Fragments":["single"]},{"Key":"single lower","Fragments":["character"]},{"Key":"lower character","Fragments":["implies"]},{"Key":"character implies","Fragments":["that"]},{"Key":"implies that","Fragments":["we"]},{"Key":"not yelling.","Fragments":["So,"]},{"Key":"yelling. So,","Fragments":["you"]},{"Key":"need is_upper","Fragments":["variable."]},{"Key":"I simplified","Fragments":["this"]},{"Key":"simplified this","Fragments":["massively"]},{"Key":"this massively","Fragments":["using"]},{"Key":"massively using","Fragments":["a"]},{"Key":"to transcribe","Fragments":["the"]},{"Key":"transcribe the","Fragments":["letters"]},{"Key":"letters instead","Fragments":["of"]},{"Key":"a cumbersome","Fragments":["if...else"]},{"Key":"cumbersome if...else","Fragments":["if"]},{"Key":"if...else if","Fragments":["statement."]},{"Key":"tip @brook-au!","Fragments":["That"]},{"Key":"@brook-au! That","Fragments":["shortened"]},{"Key":"That shortened","Fragments":["it"]},{"Key":"shortened it","Fragments":["quite"]},{"Key":"it quite","Fragments":["a"]},{"Key":"a bit!","Fragments":[":)"]},{"Key":"simple. I","Fragments":["like"]},{"Key":"characters are","Fragments":["uppercase"]},{"Key":"are uppercase","Fragments":["at"]},{"Key":"uppercase at","Fragments":["once"]},{"Key":"once instead","Fragments":["of"]},{"Key":"checking them","Fragments":["one"]},{"Key":"them one","Fragments":["at"]},{"Key":"one at","Fragments":["a"]},{"Key":"a time.","Fragments":["One"]},{"Key":"time. One","Fragments":["thing"]},{"Key":"thing though,","Fragments":["you"]},{"Key":"include bob.h","Fragments":["in"]},{"Key":"bob.h in","Fragments":["your"]},{"Key":"your bob.h","Fragments":["file."]},{"Key":" oops,","Fragments":["that's"]},{"Key":"oops, that's","Fragments":["true!"]},{"Key":"that's true!","Fragments":[":)"]},{"Key":"call ```ss.str().empty()```","Fragments":["than"]},{"Key":"```ss.str().empty()``` than","Fragments":["to"]},{"Key":"compare length","Fragments":["to"]},{"Key":"I implemented","Fragments":["a"]},{"Key":"simple Sieve","Fragments":["of"]},{"Key":"Sieve of","Fragments":["Erastothenes."]},{"Key":"of Erastothenes.","Fragments":["There"]},{"Key":"Erastothenes. There","Fragments":["is"]},{"Key":"also an","Fragments":["explicit"]},{"Key":"explicit way","Fragments":["to"]},{"Key":"range that","Fragments":["the"]},{"Key":"the nth","Fragments":["prime","value"]},{"Key":"nth prime","Fragments":["will"]},{"Key":"prime will","Fragments":["fall"]},{"Key":"will fall","Fragments":["into."]},{"Key":"fall into.","Fragments":["So"]},{"Key":"into. So","Fragments":["I"]},{"Key":"the upper-bound","Fragments":["of"]},{"Key":"upper-bound of","Fragments":["the"]},{"Key":"sieve and","Fragments":["find"]},{"Key":"find all","Fragments":["primes","the"]},{"Key":"all primes","Fragments":["from"]},{"Key":"primes from","Fragments":["1"]},{"Key":"from 1","Fragments":["to"]},{"Key":"1 to","Fragments":["this"]},{"Key":"this bound.","Fragments":["Then"]},{"Key":"bound. Then","Fragments":["just"]},{"Key":"Then just","Fragments":["return"]},{"Key":"nth value","Fragments":["found."]},{"Key":"considered whether","Fragments":["or"]},{"Key":"split the","Fragments":["project"]},{"Key":"project into","Fragments":[".h"]},{"Key":"into .h","Fragments":["and"]},{"Key":".cpp file,","Fragments":["but"]},{"Key":"but ended","Fragments":["up"]},{"Key":"up not","Fragments":["because"]},{"Key":"not because","Fragments":["it"]},{"Key":"was short.","Fragments":["I'm"]},{"Key":"short. I'm","Fragments":["pretty"]},{"Key":"to c++,","Fragments":["and"]},{"Key":"c++, and","Fragments":["I'm"]},{"Key":"I'm really","Fragments":["don't","just"]},{"Key":"why its","Fragments":["necessary"]},{"Key":"its necessary","Fragments":["to"]},{"Key":"make bob","Fragments":["a"]},{"Key":"I'm learning","Fragments":["c++"]},{"Key":"learning c++","Fragments":["myself,"]},{"Key":"c++ myself,","Fragments":["so"]},{"Key":"myself, so","Fragments":["you"]},{"Key":"take what","Fragments":["I"]},{"Key":"say with","Fragments":["a"]},{"Key":"a grain","Fragments":["of"]},{"Key":"grain of","Fragments":["salt."]},{"Key":"of salt.","Fragments":["Its"]},{"Key":"salt. Its","Fragments":["an"]},{"Key":"Its an","Fragments":["interesting"]},{"Key":"interesting idea","Fragments":["to"]},{"Key":"to map","Fragments":["potential"]},{"Key":"map potential","Fragments":["input"]},{"Key":"potential input","Fragments":["strings"]},{"Key":"results you","Fragments":["would"]},{"Key":"would want.","Fragments":["However,"]},{"Key":"want. However,","Fragments":["you"]},{"Key":"can generalize","Fragments":["your"]},{"Key":"generalize your","Fragments":["code."]},{"Key":"code. For","Fragments":["each"]},{"Key":"For each","Fragments":["response"]},{"Key":"response that","Fragments":["bob"]},{"Key":"that bob","Fragments":["should"]},{"Key":"bob should","Fragments":["give,"]},{"Key":"should give,","Fragments":["what"]},{"Key":"give, what","Fragments":["is"]},{"Key":"the common","Fragments":["thing"]},{"Key":"common thing","Fragments":["that"]},{"Key":"someone would","Fragments":["say"]},{"Key":"say to","Fragments":["bob"]},{"Key":"bob to","Fragments":["elicit","reflect"]},{"Key":"to elicit","Fragments":["that"]},{"Key":"elicit that","Fragments":["response?"]},{"Key":"to good","Fragments":["variable"]},{"Key":"good variable","Fragments":["names."]},{"Key":"names. For","Fragments":["the"]},{"Key":"of being","Fragments":["argumentative,"]},{"Key":"being argumentative,","Fragments":["I'd"]},{"Key":"argumentative, I'd","Fragments":["say"]},{"Key":"best option","Fragments":["only"]},{"Key":"option only","Fragments":["if"]},{"Key":"only if","Fragments":["you","necessary."]},{"Key":"some object.","Fragments":["(I'm"]},{"Key":"object. (I'm","Fragments":["not"]},{"Key":"(I'm not","Fragments":["sure"]},{"Key":"sure exactly","Fragments":["what"]},{"Key":"mean by","Fragments":["persistent"]},{"Key":"by persistent","Fragments":["variables)."]},{"Key":"persistent variables).","Fragments":["There's"]},{"Key":"variables). There's","Fragments":["nothing"]},{"Key":"There's nothing","Fragments":["here"]},{"Key":"nothing here","Fragments":["that"]},{"Key":"here that","Fragments":["needs"]},{"Key":"be instantiated,","Fragments":["so"]},{"Key":"instantiated, so","Fragments":["the"]},{"Key":"class adds","Fragments":["structure"]},{"Key":"adds structure","Fragments":["that"]},{"Key":"structure that","Fragments":["doesn't"]},{"Key":"doesn't match","Fragments":["the","a"]},{"Key":"the expected","Fragments":["uses","output"]},{"Key":"expected uses","Fragments":["of"]},{"Key":"uses of","Fragments":["the"]},{"Key":"functions it","Fragments":["contains."]},{"Key":"couple suggestions","Fragments":["to"]},{"Key":"suggestions to","Fragments":["start"]},{"Key":" `hey`","Fragments":["needs"]},{"Key":"`hey` needs","Fragments":["to"]},{"Key":"static since","Fragments":["the"]},{"Key":"to `bob::hey()`,","Fragments":["instead"]},{"Key":"`bob::hey()`, instead","Fragments":["of"]},{"Key":"an individual","Fragments":["`bob`"]},{"Key":"individual `bob`","Fragments":["object,"]},{"Key":"`bob` object,","Fragments":["or"]},{"Key":"object, or","Fragments":["instance,"]},{"Key":"or instance,","Fragments":["and"]},{"Key":"instance, and","Fragments":["then"]},{"Key":"then calling","Fragments":["`hey`"]},{"Key":"calling `hey`","Fragments":["on"]},{"Key":"`hey` on","Fragments":["that"]},{"Key":"that particular","Fragments":["instance."]},{"Key":" Relatedly,","Fragments":["because"]},{"Key":"Relatedly, because","Fragments":["there"]},{"Key":"instances for","Fragments":["this"]},{"Key":"problem, using","Fragments":["a"]},{"Key":"a `namespace","Fragments":["bob`"]},{"Key":"`namespace bob`","Fragments":["instead"]},{"Key":"bob` instead","Fragments":["of"]},{"Key":"functionality to","Fragments":["solve"]},{"Key":"Finally, using","Fragments":["flags"]},{"Key":"using flags","Fragments":["like"]},{"Key":"flags like","Fragments":["`gibberish`"]},{"Key":"like `gibberish`","Fragments":["is"]},{"Key":"`gibberish` is","Fragments":["alright,"]},{"Key":"is alright,","Fragments":["but"]},{"Key":"alright, but","Fragments":["I"]},{"Key":"it boosts","Fragments":["readability"]},{"Key":"boosts readability","Fragments":["to"]},{"Key":"encapsulate this","Fragments":["check"]},{"Key":"check as","Fragments":["its"]},{"Key":"as its","Fragments":["own"]},{"Key":"its own","Fragments":["helper"]},{"Key":"own helper","Fragments":["function."]},{"Key":"use call","Fragments":["by"]},{"Key":"call by","Fragments":["reference"]},{"Key":"to sieve","Fragments":["the"]},{"Key":"sieve the","Fragments":["numbers"]},{"Key":"the numbers","Fragments":["out"]},{"Key":"numbers out","Fragments":["of"]},{"Key":"list because","Fragments":["it"]},{"Key":"efficient erase","Fragments":["function."]},{"Key":"erase function.","Fragments":["At"]},{"Key":"function. At","Fragments":["the"]},{"Key":"end the","Fragments":["result"]},{"Key":"result vector","Fragments":["is"]},{"Key":"vector is","Fragments":["constructed"]},{"Key":"is constructed","Fragments":["from"]},{"Key":"constructed from","Fragments":["the"]},{"Key":"remaining values","Fragments":["in"]},{"Key":" Multiply","Fragments":["by"]},{"Key":"Multiply by","Fragments":["2"]},{"Key":"by 2","Fragments":["is"]},{"Key":"2 is","Fragments":["the"]},{"Key":"bit shift","Fragments":["to"]},{"Key":"shift to","Fragments":["the"]},{"Key":"the left","Fragments":["```ret"]},{"Key":"left ```ret","Fragments":["\u003c\u003c="]},{"Key":"```ret \u003c\u003c=","Fragments":["1```."]},{"Key":"\u003c\u003c= 1```.","Fragments":["This"]},{"Key":"1```. This","Fragments":["is"]},{"Key":"also potentially","Fragments":["faster"]},{"Key":"faster thought","Fragments":["it"]},{"Key":"be 1","Fragments":["clock"]},{"Key":"1 clock","Fragments":["cycle"]},{"Key":"clock cycle","Fragments":["vs"]},{"Key":"cycle vs","Fragments":["2/3"]},{"Key":"vs 2/3","Fragments":["at"]},{"Key":"2/3 at","Fragments":["best."]},{"Key":"at best.","Fragments":["Optimiser"]},{"Key":"best. Optimiser","Fragments":["may"]},{"Key":"Optimiser may","Fragments":["even"]},{"Key":"may even","Fragments":["make"]},{"Key":"even make","Fragments":["this"]},{"Key":"this substitution","Fragments":["for"]},{"Key":"substitution for","Fragments":["you."]},{"Key":"Changed bob","Fragments":["to"]},{"Key":"to reflect","Fragments":["all"]},{"Key":"reflect all","Fragments":["of"]},{"Key":"very helpful","Fragments":["suggestions"]},{"Key":"helpful suggestions","Fragments":["from"]},{"Key":"suggestions from","Fragments":["the"]},{"Key":"first submission.","Fragments":["In"]},{"Key":"submission. In","Fragments":["the"]},{"Key":"from java","Fragments":["to"]},{"Key":"java to","Fragments":["c++"]},{"Key":"to c++","Fragments":["for"]},{"Key":"c++ for","Fragments":["an","less"]},{"Key":"an algorithms","Fragments":["class,"]},{"Key":"algorithms class,","Fragments":["and"]},{"Key":"all we've","Fragments":["used"]},{"Key":"we've used","Fragments":["so"]},{"Key":"used so","Fragments":["far"]},{"Key":"far are","Fragments":["classes"]},{"Key":"are classes","Fragments":["and"]},{"Key":"classes and","Fragments":["structs,"]},{"Key":"and structs,","Fragments":["so"]},{"Key":"structs, so","Fragments":["I'm"]},{"Key":"happy to","Fragments":["learn"]},{"Key":"learn about","Fragments":["using"]},{"Key":"Your `map`","Fragments":["function"]},{"Key":"`map` function","Fragments":["is"]},{"Key":"you've offloaded","Fragments":["the"]},{"Key":"offloaded the","Fragments":["work"]},{"Key":"function. More","Fragments":["descriptive"]},{"Key":"More descriptive","Fragments":["variable"]},{"Key":"descriptive variable","Fragments":["names","names"]},{"Key":"names would","Fragments":["greatly"]},{"Key":"would greatly","Fragments":["improve"]},{"Key":"greatly improve","Fragments":["readability,"]},{"Key":"improve readability,","Fragments":["as"]},{"Key":"readability, as","Fragments":["would"]},{"Key":"as would","Fragments":["a","more"]},{"Key":"would a","Fragments":["few"]},{"Key":"explaining why","Fragments":["certain"]},{"Key":"why certain","Fragments":["lines"]},{"Key":"certain lines","Fragments":["of"]},{"Key":"code appear","Fragments":["and"]},{"Key":"appear and","Fragments":["how"]},{"Key":"how broadly","Fragments":["how"]},{"Key":"broadly how","Fragments":["blocks"]},{"Key":"how blocks","Fragments":["of"]},{"Key":"blocks of","Fragments":["code"]},{"Key":"code are","Fragments":["meant"]},{"Key":"are meant","Fragments":["to"]},{"Key":"function (for","Fragments":["example,"]},{"Key":"(for example,","Fragments":["it's"]},{"Key":"example, it's","Fragments":["not"]},{"Key":"immediately clear","Fragments":["what's"]},{"Key":"clear what's","Fragments":["going"]},{"Key":"what's going","Fragments":["on"]},{"Key":"going on","Fragments":["with"]},{"Key":"on with","Fragments":["the"]},{"Key":"the slashes;","Fragments":["it"]},{"Key":"slashes; it","Fragments":["looks"]},{"Key":"like maybe","Fragments":["you're"]},{"Key":"maybe you're","Fragments":["using"]},{"Key":"to mark","Fragments":["word"]},{"Key":"mark word","Fragments":["boundaries,"]},{"Key":"word boundaries,","Fragments":["or"]},{"Key":"boundaries, or","Fragments":["something)."]},{"Key":" Reverse","Fragments":["iteration"]},{"Key":"Reverse iteration","Fragments":["over"]},{"Key":"iteration over","Fragments":["the"]},{"Key":"string, setting","Fragments":["the"]},{"Key":"setting the","Fragments":["correct"]},{"Key":"correct magnitude","Fragments":["bit"]},{"Key":"magnitude bit","Fragments":["when"]},{"Key":"bit when","Fragments":["we"]},{"Key":"went through","Fragments":["several"]},{"Key":"through several","Fragments":["iterations"]},{"Key":"several iterations","Fragments":["trying"]},{"Key":"iterations trying","Fragments":["to"]},{"Key":"to best","Fragments":["store"]},{"Key":"best store","Fragments":["the"]},{"Key":"song data","Fragments":["and"]},{"Key":"data and","Fragments":["trying"]},{"Key":"be accessing","Fragments":["parts"]},{"Key":"accessing parts","Fragments":["of"]},{"Key":"song verse","Fragments":["by","data"]},{"Key":"verse by","Fragments":["using"]},{"Key":"using []","Fragments":["or"]},{"Key":"[] or","Fragments":["if"]},{"Key":"should by","Fragments":["iterating"]},{"Key":"by iterating","Fragments":["through"]},{"Key":"through by","Fragments":["using"]},{"Key":"an iterator.","Fragments":["In"]},{"Key":"iterator. In","Fragments":["the"]},{"Key":"with []","Fragments":["and"]},{"Key":"[] and","Fragments":["this"]},{"Key":"this solution.","Fragments":["I"]},{"Key":"like it,","Fragments":["or"]},{"Key":"it, or","Fragments":["really"]},{"Key":"or really","Fragments":["any"]},{"Key":"really any","Fragments":["of"]},{"Key":"how I'm","Fragments":["storing"]},{"Key":"I'm storing","Fragments":["the"]},{"Key":"verse data","Fragments":["but"]},{"Key":"data but","Fragments":["it"]},{"Key":"was also","Fragments":["my","a"]},{"Key":"also my","Fragments":["first"]},{"Key":"a tuple.","Fragments":["Appreciate"]},{"Key":"tuple. Appreciate","Fragments":["any"]},{"Key":"Appreciate any","Fragments":["comments"]},{"Key":"any comments","Fragments":["if"]},{"Key":"comments if","Fragments":["there"]},{"Key":"any parts","Fragments":["of"]},{"Key":"There wasn't","Fragments":["any"]},{"Key":"wasn't any","Fragments":["tests"]},{"Key":"any tests","Fragments":["with"]},{"Key":"tests with","Fragments":["bad","words"]},{"Key":"with bad","Fragments":["input,"]},{"Key":"bad input,","Fragments":["so"]},{"Key":"input, so","Fragments":["I"]},{"Key":"just returned","Fragments":["blank"]},{"Key":"returned blank","Fragments":["if"]},{"Key":"blank if","Fragments":["I"]},{"Key":"I encountered","Fragments":["it."]},{"Key":"is compact","Fragments":["and"]},{"Key":"compact and","Fragments":["well"]},{"Key":"and well","Fragments":["written,"]},{"Key":"well written,","Fragments":["although"]},{"Key":"written, although","Fragments":["I'm"]},{"Key":"although I'm","Fragments":["not"]},{"Key":"passes every","Fragments":["test"]},{"Key":"every test","Fragments":["case."]},{"Key":"the hamming_test.cpp","Fragments":["file,"]},{"Key":"hamming_test.cpp file,","Fragments":["you"]},{"Key":"file, you","Fragments":["should"]},{"Key":"should see","Fragments":["that"]},{"Key":"program should","Fragments":["simply"]},{"Key":"should simply","Fragments":["ignore"]},{"Key":"simply ignore","Fragments":["extra"]},{"Key":"extra length","Fragments":["on","and"]},{"Key":"length on","Fragments":["the"]},{"Key":"the respective","Fragments":["strand,"]},{"Key":"respective strand,","Fragments":["rather"]},{"Key":"strand, rather","Fragments":["than"]},{"Key":"I copied","Fragments":["the"]},{"Key":"copied the","Fragments":["std::transform"]},{"Key":"std::transform from","Fragments":["StackOverflow,"]},{"Key":"from StackOverflow,","Fragments":["why"]},{"Key":"StackOverflow, why","Fragments":["can"]},{"Key":"why can","Fragments":["I"]},{"Key":"use ::tolower","Fragments":["here"]},{"Key":"::tolower here","Fragments":["without"]},{"Key":"here without","Fragments":["specifying"]},{"Key":"without specifying","Fragments":["the"]},{"Key":"specifying the","Fragments":["namespace"]},{"Key":"or importing","Fragments":["cctype?"]},{"Key":"importing cctype?","Fragments":["In"]},{"Key":"cctype? In","Fragments":["which"]},{"Key":"In which","Fragments":["other"]},{"Key":"which other","Fragments":["situations"]},{"Key":"other situations","Fragments":["is"]},{"Key":"situations is","Fragments":["it"]},{"Key":"it idiomatic","Fragments":["to"]},{"Key":"idiomatic to","Fragments":["write"]},{"Key":"write just","Fragments":["two"]},{"Key":"two colons","Fragments":["in"]},{"Key":"colons in","Fragments":["front"]},{"Key":"in front","Fragments":["of"]},{"Key":"front of","Fragments":["a"]},{"Key":"string constructor","Fragments":["to"]},{"Key":"constructor to","Fragments":["pass"]},{"Key":"last test,","Fragments":["now","I"]},{"Key":"test, now","Fragments":["by"]},{"Key":"now by","Fragments":["looking"]},{"Key":"know I","Fragments":["could"]},{"Key":"used operator","Fragments":["string()"]},{"Key":"operator string()","Fragments":["and"]},{"Key":"string() and","Fragments":["also"]},{"Key":"also that","Fragments":["I"]},{"Key":"used string(10,","Fragments":["'0'),"]},{"Key":"string(10, '0'),","Fragments":["which"]},{"Key":"'0'), which","Fragments":["is"]},{"Key":"also just","Fragments":[".substr(1)"]},{"Key":"just .substr(1)","Fragments":["and"]},{"Key":".substr(1) and","Fragments":["could"]},{"Key":"have imported","Fragments":["locale"]},{"Key":"imported locale","Fragments":["instead"]},{"Key":"locale instead","Fragments":["of"]},{"Key":"curious for","Fragments":["which"]},{"Key":"for which","Fragments":["use"]},{"Key":"which use","Fragments":["cases"]},{"Key":"use cases","Fragments":["returning"]},{"Key":"cases returning","Fragments":["ten"]},{"Key":"returning ten","Fragments":["zeros"]},{"Key":"ten zeros","Fragments":["is"]},{"Key":"zeros is","Fragments":["better"]},{"Key":"than throwing","Fragments":["an"]},{"Key":"exception or","Fragments":["returning","return"]},{"Key":"or returning","Fragments":["an"]},{"Key":"returning an","Fragments":["empty"]},{"Key":"of namespaces,","Fragments":["especially"]},{"Key":"namespaces, especially","Fragments":["nesting"]},{"Key":"especially nesting","Fragments":["your"]},{"Key":"nesting your","Fragments":["helper"]},{"Key":"think detecting","Fragments":["gibberish"]},{"Key":"detecting gibberish","Fragments":["makes"]},{"Key":"gibberish makes","Fragments":["the"]},{"Key":"function difficult","Fragments":["to"]},{"Key":"to understand.","Fragments":["Consider"]},{"Key":"understand. Consider","Fragments":["that"]},{"Key":"Consider that","Fragments":["based"]},{"Key":"that based","Fragments":["on","on"]},{"Key":"implementation it","Fragments":["appears"]},{"Key":"it appears","Fragments":["bob","in"]},{"Key":"appears bob","Fragments":["will"]},{"Key":"bob will","Fragments":["assume"]},{"Key":"will assume","Fragments":["everything"]},{"Key":"assume everything","Fragments":["is"]},{"Key":"yell, unless","Fragments":["it"]},{"Key":"unless it","Fragments":["is"]},{"Key":"is nothing,","Fragments":["a"]},{"Key":"nothing, a","Fragments":["question,"]},{"Key":"or nonsense;","Fragments":["whereas"]},{"Key":"nonsense; whereas","Fragments":["in"]},{"Key":"whereas in","Fragments":["the"]},{"Key":"problem spec","Fragments":["his"]},{"Key":"spec his","Fragments":["default"]},{"Key":"his default","Fragments":["response"]},{"Key":"default response","Fragments":["is"]},{"Key":"\"Whatever.\" and","Fragments":["need"]},{"Key":"and need","Fragments":["not"]},{"Key":"need not","Fragments":["be"]},{"Key":"in response","Fragments":["to"]},{"Key":"to nonsense,","Fragments":["but"]},{"Key":"nonsense, but","Fragments":["to"]},{"Key":"to anything","Fragments":["that"]},{"Key":"match a","Fragments":["more"]},{"Key":"more specific","Fragments":["condition."]},{"Key":"specific condition.","Fragments":["Effectively,"]},{"Key":"condition. Effectively,","Fragments":["`isGibberish`"]},{"Key":"Effectively, `isGibberish`","Fragments":["is"]},{"Key":"`isGibberish` is","Fragments":["currently"]},{"Key":"is currently","Fragments":["detecting"]},{"Key":"currently detecting","Fragments":["if"]},{"Key":"detecting if","Fragments":["bob"]},{"Key":"at past","Fragments":["attempts"]},{"Key":"past attempts","Fragments":["at"]},{"Key":"attempts at","Fragments":["the"]},{"Key":"same exercise","Fragments":["by"]},{"Key":"by others,","Fragments":["I"]},{"Key":"others, I","Fragments":["noticed"]},{"Key":"no one","Fragments":["was"]},{"Key":"one was","Fragments":["taking"]},{"Key":"was taking","Fragments":["apostrophes"]},{"Key":"taking apostrophes","Fragments":["into"]},{"Key":"apostrophes into","Fragments":["consideration"]},{"Key":"into consideration","Fragments":["when"]},{"Key":"consideration when","Fragments":["parsing"]},{"Key":"when parsing","Fragments":["for"]},{"Key":"parsing for","Fragments":["words"]},{"Key":"for words","Fragments":["and"]},{"Key":"thinking \"how","Fragments":["are"]},{"Key":"\"how are","Fragments":["these"]},{"Key":"are these","Fragments":["passing"]},{"Key":"these passing","Fragments":["the"]},{"Key":"the units","Fragments":["tests?\"."]},{"Key":"units tests?\".","Fragments":["I"]},{"Key":"tests?\". I","Fragments":["looked"]},{"Key":"looked through","Fragments":["the"]},{"Key":"the git","Fragments":["history"]},{"Key":"git history","Fragments":["on"]},{"Key":"history on","Fragments":["the"]},{"Key":"the word_count_test.cpp","Fragments":["file"]},{"Key":"word_count_test.cpp file","Fragments":["and"]},{"Key":"and noticed","Fragments":["that"]},{"Key":"with words","Fragments":["containing"]},{"Key":"words containing","Fragments":["apostrophes"]},{"Key":"containing apostrophes","Fragments":["were"]},{"Key":"apostrophes were","Fragments":["added"]},{"Key":"were added","Fragments":["much"]},{"Key":"added much","Fragments":["later."]},{"Key":"much later.","Fragments":["As"]},{"Key":"later. As","Fragments":["a"]},{"Key":"a result,","Fragments":["my"]},{"Key":"result, my","Fragments":["solution"]},{"Key":"may look","Fragments":["unnecessarily"]},{"Key":"look unnecessarily","Fragments":["complicated"]},{"Key":"unnecessarily complicated","Fragments":["compared"]},{"Key":"complicated compared","Fragments":["to"]},{"Key":"to other's","Fragments":["solutions."]},{"Key":"Hey, it's","Fragments":["good"]},{"Key":"good you","Fragments":["got"]},{"Key":"you got","Fragments":["rid"]},{"Key":"these ugly","Fragments":["hexes"]},{"Key":"ugly hexes","Fragments":["from"]},{"Key":"hexes from","Fragments":["your"]},{"Key":"if ```input```","Fragments":["is"]},{"Key":"```input``` is","Fragments":["blank"]},{"Key":"is blank","Fragments":["with"]},{"Key":"blank with","Fragments":["lambda"]},{"Key":"with lambda","Fragments":["```isBlank```"]},{"Key":"lambda ```isBlank```","Fragments":["function."]},{"Key":"functions take","Fragments":["```std::string```"]},{"Key":"take ```std::string```","Fragments":["as"]},{"Key":"```std::string``` as","Fragments":["an"]},{"Key":"an argument,","Fragments":["but"]},{"Key":"argument, but","Fragments":["surely"]},{"Key":"but surely","Fragments":["they"]},{"Key":"surely they","Fragments":["shouldn't"]},{"Key":"they shouldn't","Fragments":["modify"]},{"Key":"shouldn't modify","Fragments":["the"]},{"Key":"not tell","Fragments":["compiler"]},{"Key":"tell compiler","Fragments":["explicitely"]},{"Key":"compiler explicitely","Fragments":["that"]},{"Key":"explicitely that","Fragments":["you"]},{"Key":"modify them?","Fragments":["You"]},{"Key":"them? You","Fragments":["also"]},{"Key":"the ```input```","Fragments":["string"]},{"Key":"```input``` string","Fragments":["when"]},{"Key":"string when","Fragments":["entering","you","I"]},{"Key":"when entering","Fragments":["each"]},{"Key":"entering each","Fragments":["function."]},{"Key":"each function.","Fragments":["Maybe"]},{"Key":"function. Maybe","Fragments":["passing"]},{"Key":"Maybe passing","Fragments":["```input```"]},{"Key":"passing ```input```","Fragments":["by"]},{"Key":"```input``` by","Fragments":["reference"]},{"Key":"use ```islower```","Fragments":["and"]},{"Key":"```islower``` and","Fragments":["```isupper```","```isupper```"]},{"Key":"and ```isupper```","Fragments":["functions.","use,"]},{"Key":"```isupper``` functions.","Fragments":["I"]},{"Key":"write very","Fragments":["short"]},{"Key":"very short","Fragments":["and"]},{"Key":"simple solutions","Fragments":["for"]},{"Key":"solutions for","Fragments":["checking","the"]},{"Key":"for checking","Fragments":["the"]},{"Key":"the letter","Fragments":["case,"]},{"Key":"letter case,","Fragments":["but"]},{"Key":"but these","Fragments":["functions"]},{"Key":"in standard","Fragments":["library"]},{"Key":"less important:","Fragments":["I"]},{"Key":"important: I","Fragments":["see"]},{"Key":"see you","Fragments":["sometimes"]},{"Key":"you sometimes","Fragments":["put"]},{"Key":"sometimes put","Fragments":["space"]},{"Key":"put space","Fragments":["after"]},{"Key":"an ```if```","Fragments":["or"]},{"Key":"```if``` or","Fragments":["```for```"]},{"Key":"or ```for```","Fragments":["and"]},{"Key":"```for``` and","Fragments":["sometimes"]},{"Key":"and sometimes","Fragments":["not."]},{"Key":"sometimes not.","Fragments":["It's"]},{"Key":"not. It's","Fragments":["a"]},{"Key":"It's a","Fragments":["good"]},{"Key":"to stick","Fragments":["to"]},{"Key":"stick to","Fragments":["one","std::vectors."]},{"Key":"to one","Fragments":["style."]},{"Key":" @keanu","Fragments":["ah,"]},{"Key":"@keanu ah,","Fragments":["I"]},{"Key":"ah, I","Fragments":["was"]},{"Key":"was probably","Fragments":["mixing"]},{"Key":"probably mixing","Fragments":["up"]},{"Key":"mixing up","Fragments":["coding"]},{"Key":"up coding","Fragments":["standards."]},{"Key":"coding standards.","Fragments":["The"]},{"Key":"standards. The","Fragments":["aligned"]},{"Key":"The aligned","Fragments":["braces"]},{"Key":"aligned braces","Fragments":["for"]},{"Key":"braces for","Fragments":["functions"]},{"Key":"for functions","Fragments":["come"]},{"Key":"functions come","Fragments":["from"]},{"Key":"the Linux","Fragments":["kernel"]},{"Key":"Linux kernel","Fragments":["coding","drivers"]},{"Key":"kernel coding","Fragments":["style."]},{"Key":"style. Of","Fragments":["course"]},{"Key":"Of course","Fragments":["they"]},{"Key":"course they","Fragments":["don't"]},{"Key":"cover namespaces,","Fragments":["being"]},{"Key":"namespaces, being","Fragments":["C-based!"]},{"Key":" Will","Fragments":["hunt"]},{"Key":"Will hunt","Fragments":["around"]},{"Key":"hunt around","Fragments":["for"]},{"Key":"a coding","Fragments":["style"]},{"Key":"coding style","Fragments":["that's","is"]},{"Key":"style that's","Fragments":["applicable"]},{"Key":"that's applicable","Fragments":["to"]},{"Key":"C++ projects.","Fragments":["Bizarrely"]},{"Key":"projects. Bizarrely","Fragments":["http://qt-project.org/wiki/Qt_Coding_Style"]},{"Key":"Bizarrely http://qt-project.org/wiki/Qt_Coding_Style","Fragments":["doesn't"]},{"Key":"http://qt-project.org/wiki/Qt_Coding_Style doesn't","Fragments":["mention"]},{"Key":"doesn't mention","Fragments":["namespaces"]},{"Key":"mention namespaces","Fragments":["either!"]},{"Key":"you mean.","Fragments":["I"]},{"Key":"mean. I","Fragments":["just"]},{"Key":"just submitted","Fragments":["a"]},{"Key":"a 3rd","Fragments":["iterations"]},{"Key":"3rd iterations","Fragments":["that"]},{"Key":"iterations that","Fragments":["I"]},{"Key":"think makes","Fragments":["it"]},{"Key":"that \"Whatever\"","Fragments":["is"]},{"Key":"\"Whatever\" is","Fragments":["the"]},{"Key":"you on","Fragments":["all"]},{"Key":"all point,","Fragments":["including"]},{"Key":"point, including","Fragments":["the"]},{"Key":"including the","Fragments":["fact","whole"]},{"Key":"by constant","Fragments":["reference."]},{"Key":"constant reference.","Fragments":["As"]},{"Key":"reference. As","Fragments":["for"]},{"Key":"the ```islower```","Fragments":["and"]},{"Key":"```isupper``` use,","Fragments":["it"]},{"Key":"use, it","Fragments":["was"]},{"Key":"was because","Fragments":["in"]},{"Key":"file there","Fragments":["was"]},{"Key":"that made","Fragments":["me"]},{"Key":"me use","Fragments":["that."]},{"Key":"use that.","Fragments":["But"]},{"Key":"But after","Fragments":["I"]},{"Key":"changed my","Fragments":["code","code"]},{"Key":"and forgot","Fragments":["to"]},{"Key":"switch back","Fragments":["using"]},{"Key":"back using","Fragments":["the"]},{"Key":"functions. Sorry","Fragments":["about"]},{"Key":"Sorry about","Fragments":["that."]},{"Key":"the ```if```s","Fragments":["and"]},{"Key":"```if```s and","Fragments":["the"]},{"Key":"the ```for```s,","Fragments":["it's"]},{"Key":"```for```s, it's","Fragments":["because"]},{"Key":"it's because","Fragments":["of","each"]},{"Key":"the snippets","Fragments":["in"]},{"Key":"snippets in","Fragments":["my"]},{"Key":"my vim","Fragments":["config"]},{"Key":"vim config","Fragments":["which"]},{"Key":"config which","Fragments":["are"]},{"Key":"a git","Fragments":["submodule"]},{"Key":"git submodule","Fragments":["(so"]},{"Key":"submodule (so","Fragments":["the"]},{"Key":"(so the","Fragments":["changes"]},{"Key":"changes are","Fragments":["not"]},{"Key":"not clonable","Fragments":["from"]},{"Key":"clonable from","Fragments":["a"]},{"Key":"a PC","Fragments":["to"]},{"Key":"PC to","Fragments":["another)"]},{"Key":"to another)","Fragments":["but"]},{"Key":"another) but","Fragments":["you're"]},{"Key":"but you're","Fragments":["still","off"]},{"Key":"you're still","Fragments":["right"]},{"Key":"still right","Fragments":["and"]},{"Key":"right and","Fragments":["I"]},{"Key":"definitely do","Fragments":["something"]},{"Key":"do something","Fragments":["about"]},{"Key":"something about","Fragments":["that."]},{"Key":"about that.","Fragments":["Thank"]},{"Key":"that. Thank","Fragments":["you"]},{"Key":"You still","Fragments":["don't"]},{"Key":"still don't","Fragments":["pass"]},{"Key":"don't pass","Fragments":["```input```","references"]},{"Key":"pass ```input```","Fragments":["to"]},{"Key":"```input``` to","Fragments":["```hey```"]},{"Key":"```hey``` function","Fragments":["by"]},{"Key":"reference. When","Fragments":["entering"]},{"Key":"When entering","Fragments":["```hey```"]},{"Key":"entering ```hey```","Fragments":["you"]},{"Key":"```hey``` you","Fragments":["are"]},{"Key":"copying contents","Fragments":["of"]},{"Key":"meant using","Fragments":["something"]},{"Key":"```const std::string\u0026","Fragments":["input```","str```"]},{"Key":"std::string\u0026 input```","Fragments":["as"]},{"Key":"input``` as","Fragments":["the"]},{"Key":"the argument.","Fragments":["The","I"]},{"Key":"argument. The","Fragments":["```\u0026```"]},{"Key":"The ```\u0026```","Fragments":["symbol"]},{"Key":"```\u0026``` symbol","Fragments":["tells"]},{"Key":"symbol tells","Fragments":["compiler"]},{"Key":"tells compiler","Fragments":["to"]},{"Key":"treat ```input```","Fragments":["as"]},{"Key":"```input``` as","Fragments":["a"]},{"Key":"a reference.","Fragments":["This"]},{"Key":"reference. This","Fragments":["way"]},{"Key":"use pointers","Fragments":["as"]},{"Key":"pointers as","Fragments":["you"]},{"Key":"in argument","Fragments":["of"]},{"Key":"of ```isUppercase```","Fragments":["function."]},{"Key":"```isUppercase``` function.","Fragments":["You"]},{"Key":"use ```const","Fragments":["std::string\u0026"]},{"Key":"std::string\u0026 str```","Fragments":["as"]},{"Key":"str``` as","Fragments":["the"]},{"Key":"use references","Fragments":["whenever"]},{"Key":"possible instead","Fragments":["of"]},{"Key":"of pointers.","Fragments":["It's"]},{"Key":"pointers. It's","Fragments":["one"]},{"Key":"It's one","Fragments":["of"]},{"Key":"C++ advantages","Fragments":["over"]},{"Key":"advantages over","Fragments":["C."]},{"Key":" Need","Fragments":["a"]},{"Key":"Need a","Fragments":["better"]},{"Key":"to recognize","Fragments":["quotes.","any"]},{"Key":" Apparently","Fragments":["I"]},{"Key":"Apparently I","Fragments":["should"]},{"Key":"for iterators,","Fragments":["just"]},{"Key":"iterators, just","Fragments":["use"]},{"Key":"1. simple","Fragments":["\"switch-case\""]},{"Key":"simple \"switch-case\"","Fragments":["is"]},{"Key":"\"switch-case\" is","Fragments":["better"]},{"Key":"2. compiler","Fragments":["need"]},{"Key":"compiler need","Fragments":["to"]},{"Key":"which 'to_rna'","Fragments":["to"]},{"Key":"'to_rna' to","Fragments":["use."]},{"Key":"to route","Fragments":["tests"]},{"Key":"route tests","Fragments":["through"]},{"Key":"tests through","Fragments":["lambdas."]},{"Key":"through lambdas.","Fragments":["`static_cast\u003cint(*)(int)\u003e(islower))`"]},{"Key":"lambdas. `static_cast\u003cint(*)(int)\u003e(islower))`","Fragments":["will"]},{"Key":"`static_cast\u003cint(*)(int)\u003e(islower))` will","Fragments":["work"]},{"Key":"Yeah, you're","Fragments":["right."]},{"Key":"right. And","Fragments":["I"]},{"Key":"think only","Fragments":["::islower"]},{"Key":"only ::islower","Fragments":["will"]},{"Key":"::islower will","Fragments":["do"]},{"Key":" `long`","Fragments":["and"]},{"Key":"`long` and","Fragments":["`int`"]},{"Key":"- Need","Fragments":["add"]},{"Key":"Need add","Fragments":["`random`"]},{"Key":"add `random`","Fragments":["to"]},{"Key":"`random` to","Fragments":["`find_package(Boost"]},{"Key":"to `find_package(Boost","Fragments":["1.55"]},{"Key":"`find_package(Boost 1.55","Fragments":["REQUIRED"]},{"Key":"1.55 REQUIRED","Fragments":["COMPONENTS"]},{"Key":"REQUIRED COMPONENTS","Fragments":["unit_test_framework"]},{"Key":"COMPONENTS unit_test_framework","Fragments":["date_time"]},{"Key":"unit_test_framework date_time","Fragments":["regex"]},{"Key":"date_time regex","Fragments":["random)`"]},{"Key":"- `long","Fragments":["long`"]},{"Key":"`long long`","Fragments":["at"]},{"Key":"long` at","Fragments":["least"]},{"Key":"- `long`","Fragments":["at"]},{"Key":"`long` at","Fragments":["least"]},{"Key":"- `int`","Fragments":["and"]},{"Key":"`int` and","Fragments":["`short`"]},{"Key":"and `short`","Fragments":["at"]},{"Key":"`short` at","Fragments":["least"]},{"Key":" `1e9`","Fragments":["is"]},{"Key":"`1e9` is","Fragments":["double,"]},{"Key":"is double,","Fragments":["not"]},{"Key":"double, not","Fragments":["integer."]},{"Key":"Again, needs","Fragments":["`-std=c++14`."]},{"Key":"just realized","Fragments":["that"]},{"Key":" #if","Fragments":["defined(EXERCISM_RUN_ALL_TESTS)"]},{"Key":"line down","Fragments":["the"]},{"Key":"of \"uncommenting\"","Fragments":["each"]},{"Key":"\"uncommenting\" each","Fragments":["test."]},{"Key":"each test.","Fragments":["Up"]},{"Key":"test. Up","Fragments":["until"]},{"Key":"was passing","Fragments":["them"]},{"Key":"passing them","Fragments":["all."]},{"Key":" std::valarray","Fragments":["\u0026"]},{"Key":"std::valarray \u0026","Fragments":["std::iota"]},{"Key":" Almost","Fragments":["same"]},{"Key":"Almost same","Fragments":["as"]},{"Key":"as 'nth","Fragments":["prime'."]},{"Key":"Line 25","Fragments":["is"]},{"Key":"25 is","Fragments":["still"]},{"Key":"not necessary,","Fragments":["otherwise"]},{"Key":"necessary, otherwise","Fragments":["looks"]},{"Key":"otherwise looks","Fragments":["great."]},{"Key":" @vicente-slm","Fragments":["It"]},{"Key":"@vicente-slm It","Fragments":["is"]},{"Key":"pretty minimal","Fragments":["and"]},{"Key":"minimal and","Fragments":["robust."]},{"Key":"and robust.","Fragments":["For"]},{"Key":"robust. For","Fragments":["example"]},{"Key":"example it","Fragments":["does"]},{"Key":"not mention","Fragments":["classes,"]},{"Key":"mention classes,","Fragments":["so"]},{"Key":"classes, so","Fragments":["I"]},{"Key":"not surprised","Fragments":["namespaces"]},{"Key":"surprised namespaces","Fragments":["are"]},{"Key":"not there.","Fragments":["In"]},{"Key":"there. In","Fragments":["general"]},{"Key":"general if","Fragments":["coding"]},{"Key":"if coding","Fragments":["style"]},{"Key":"longer than","Fragments":["3-4"]},{"Key":"than 3-4","Fragments":["pages"]},{"Key":"3-4 pages","Fragments":["it"]},{"Key":"pages it","Fragments":["is"]},{"Key":"not well","Fragments":["generalized."]},{"Key":"Should exclude","Fragments":["all","all"]},{"Key":"exclude all","Fragments":["the","the"]},{"Key":"the even","Fragments":["numbers.","numbers."]},{"Key":"To prevent","Fragments":["direct","the"]},{"Key":"prevent direct","Fragments":["mutation"]},{"Key":"direct mutation","Fragments":["of"]},{"Key":"mutation of","Fragments":["the"]},{"Key":"the DB","Fragments":["by"]},{"Key":"DB by","Fragments":["outside"]},{"Key":"by outside","Fragments":["code,"]},{"Key":"outside code,","Fragments":["I"]},{"Key":"actual `studentRoster`","Fragments":["a"]},{"Key":"`studentRoster` a","Fragments":["private"]},{"Key":"private variable.","Fragments":["Also,"]},{"Key":"variable. Also,","Fragments":["I"]},{"Key":"some explanation","Fragments":["of"]},{"Key":"explanation of","Fragments":["why"]},{"Key":"of why","Fragments":["the"]},{"Key":"the roster","Fragments":["is","is"]},{"Key":"roster is","Fragments":["seemingly","a"]},{"Key":"is seemingly","Fragments":["erased"]},{"Key":"seemingly erased","Fragments":["after"]},{"Key":"erased after","Fragments":["each"]},{"Key":" EDIT:I","Fragments":["figured"]},{"Key":"EDIT:I figured","Fragments":["it"]},{"Key":"figured it","Fragments":["out,"]},{"Key":"out, it's","Fragments":["because"]},{"Key":"because each","Fragments":["instance"]},{"Key":"each instance","Fragments":["of"]},{"Key":"local variable","Fragments":["with"]},{"Key":"no relation","Fragments":["to"]},{"Key":"relation to","Fragments":["the"]},{"Key":"already used","Fragments":["`std::hex`,"]},{"Key":"used `std::hex`,","Fragments":["why"]},{"Key":"`std::hex`, why","Fragments":["not"]},{"Key":"use `std::stoi`","Fragments":["instead,"]},{"Key":"`std::stoi` instead,","Fragments":["it's"]},{"Key":"instead, it's","Fragments":["much"]},{"Key":"it's much","Fragments":["more"]},{"Key":"The spec","Fragments":["says:"]},{"Key":"\"The Hamming","Fragments":["distance"]},{"Key":"Hamming distance","Fragments":["is"]},{"Key":"only defined","Fragments":["for"]},{"Key":"defined for","Fragments":["sequences"]},{"Key":"sequences of","Fragments":["equal"]},{"Key":"of equal","Fragments":["length.","length"]},{"Key":"equal length.","Fragments":["This"]},{"Key":"length. This","Fragments":["means"]},{"Key":" that","Fragments":["based"]},{"Key":"the definition,","Fragments":["each"]},{"Key":"definition, each","Fragments":["language"]},{"Key":"each language","Fragments":["could"]},{"Key":"language could","Fragments":["deal"]},{"Key":"could deal","Fragments":["with"]},{"Key":"with getting","Fragments":["sequences"]},{"Key":" Ignoring","Fragments":["different"]},{"Key":"Ignoring different","Fragments":["length"]},{"Key":"different length","Fragments":["is"]},{"Key":"with it,","Fragments":["although"]},{"Key":"it, although","Fragments":["returning"]},{"Key":"although returning","Fragments":["some"]},{"Key":"returning some","Fragments":["commonality"]},{"Key":"some commonality","Fragments":["for"]},{"Key":"commonality for","Fragments":["operation"]},{"Key":"for operation","Fragments":["that"]},{"Key":"operation that","Fragments":["is"]},{"Key":"defined imho","Fragments":["not"]},{"Key":"imho not","Fragments":["very"]},{"Key":"do it.","Fragments":["Returning"]},{"Key":"it. Returning","Fragments":["no"]},{"Key":"Returning no","Fragments":["commonality"]},{"Key":"no commonality","Fragments":["is"]},{"Key":"commonality is","Fragments":["another."]},{"Key":"is another.","Fragments":["Throwing"]},{"Key":"another. Throwing","Fragments":["exception"]},{"Key":"Throwing exception","Fragments":["is"]},{"Key":"exception is","Fragments":["the","a"]},{"Key":"This fails","Fragments":["the"]},{"Key":"fails the","Fragments":["two"]},{"Key":"two sorting","Fragments":["test"]},{"Key":"sorting test","Fragments":["cases,"]},{"Key":"cases, which","Fragments":["puzzles"]},{"Key":"which puzzles","Fragments":["me,"]},{"Key":"puzzles me,","Fragments":["because"]},{"Key":"me, because","Fragments":["it"]},{"Key":"sort correctly","Fragments":["when"]},{"Key":"correctly when","Fragments":["I"]},{"Key":"copy it","Fragments":["into"]},{"Key":"new project","Fragments":["to"]},{"Key":"New implementation","Fragments":["that"]},{"Key":"just wraps","Fragments":["the"]},{"Key":"wraps the","Fragments":["C++11"]},{"Key":"C++11 ```std::stoi```","Fragments":["which"]},{"Key":"```std::stoi``` which","Fragments":["makes"]},{"Key":"this really","Fragments":["easy.","improved"]},{"Key":" @richard-C","Fragments":["i"]},{"Key":"@richard-C i","Fragments":["think"]},{"Key":"cases have","Fragments":["changed","changed"]},{"Key":"changed recently.","Fragments":["When"]},{"Key":"recently. When","Fragments":["i"]},{"Key":"When i","Fragments":["did"]},{"Key":"i did","Fragments":["this"]},{"Key":"this challenge","Fragments":["you"]},{"Key":"challenge you","Fragments":["had"]},{"Key":"handle either","Fragments":["string"]},{"Key":"string being","Fragments":["short/long.","shorter/longer"]},{"Key":"being short/long.","Fragments":["If"]},{"Key":"short/long. If","Fragments":["you"]},{"Key":"at his","Fragments":["test"]},{"Key":"his test","Fragments":["cases"]},{"Key":"cases you","Fragments":["are"]},{"Key":"are supposted","Fragments":["to"]},{"Key":"supposted to","Fragments":["throw"]},{"Key":"an error","Fragments":["```std::domain_error```","in","condition."]},{"Key":"error ```std::domain_error```","Fragments":["if"]},{"Key":"```std::domain_error``` if","Fragments":["sizes"]},{"Key":"if sizes","Fragments":["don't"]},{"Key":"sizes don't","Fragments":["match."]},{"Key":"not for","Fragments":["C++."]},{"Key":"for C++.","Fragments":["I'm"]},{"Key":"C++. I'm","Fragments":["done"]},{"Key":"I'm done","Fragments":["with"]},{"Key":"than introducing","Fragments":["exceptions"]},{"Key":"introducing exceptions","Fragments":["into"]},{"Key":"exceptions into","Fragments":["this"]},{"Key":"algorithm consider","Fragments":["a"]},{"Key":"consider a","Fragments":["design","```using"]},{"Key":"a design","Fragments":["that"]},{"Key":"design that","Fragments":["can"]},{"Key":"first string","Fragments":["being"]},{"Key":"being shorter/longer","Fragments":["than"]},{"Key":"shorter/longer than","Fragments":["the"]},{"Key":"second. There","Fragments":["are"]},{"Key":"of choices","Fragments":["of"]},{"Key":"choices of","Fragments":["how"]},{"Key":"this. Investigate","Fragments":["some"]},{"Key":"Investigate some","Fragments":["of"]},{"Key":"submissions for","Fragments":["ideas."]},{"Key":" Edit:","Fragments":["I"]},{"Key":"Edit: I","Fragments":["retract"]},{"Key":"I retract","Fragments":["this"]},{"Key":"retract this","Fragments":["it"]},{"Key":"this it","Fragments":["seems"]},{"Key":"and now","Fragments":["require"]},{"Key":"now require","Fragments":["exceptions"]},{"Key":"require exceptions","Fragments":["if"]},{"Key":"exceptions if","Fragments":["lengths"]},{"Key":"if lengths","Fragments":["don't"]},{"Key":"lengths don't","Fragments":["match"]},{"Key":" Recursively","Fragments":["search"]},{"Key":"Recursively search","Fragments":["for"]},{"Key":"for prime","Fragments":["factors"]},{"Key":"prime factors","Fragments":["each","before"]},{"Key":"factors each","Fragments":["time"]},{"Key":"find any","Fragments":["factor."]},{"Key":"any factor.","Fragments":["This"]},{"Key":"factor. This","Fragments":["ends"]},{"Key":"This ends","Fragments":["up"]},{"Key":"up traversing","Fragments":["a"]},{"Key":"traversing a","Fragments":["prime"]},{"Key":"a prime","Fragments":["factor"]},{"Key":"prime factor","Fragments":["tree."]},{"Key":"factor tree.","Fragments":["The"]},{"Key":"tree. The","Fragments":["results"]},{"Key":"are reconstructed","Fragments":["as"]},{"Key":"reconstructed as","Fragments":["each"]},{"Key":" `for","Fragments":["(int"]},{"Key":"`for (int","Fragments":["i"]},{"Key":"= 3,","Fragments":["mag"]},{"Key":"3, mag","Fragments":["="]},{"Key":"mag =","Fragments":["1000;"]},{"Key":"= 1000;","Fragments":["i"]},{"Key":"1000; i","Fragments":["\u003e="]},{"Key":"i \u003e=","Fragments":["0;"]},{"Key":"\u003e= 0;","Fragments":["i--,"]},{"Key":"0; i--,","Fragments":["mag"]},{"Key":"i--, mag","Fragments":["/="]},{"Key":"mag /=","Fragments":["10)`"]},{"Key":" \u003cb\u003e\u003ch1\u003e","Fragments":["Iteration"]},{"Key":"\u003cb\u003e\u003ch1\u003e Iteration","Fragments":["2:\u003c/h1\u003e\u003c/b\u003e"]},{"Key":" Trimmed","Fragments":["down"]},{"Key":"Trimmed down","Fragments":["the"]},{"Key":"the fat.","Fragments":["removed"]},{"Key":"fat. removed","Fragments":["unnecessary"]},{"Key":"removed unnecessary","Fragments":["variables,"]},{"Key":" made","Fragments":["'if'"]},{"Key":"made 'if'","Fragments":["blocks"]},{"Key":"'if' blocks","Fragments":["smaller."]},{"Key":"code properly","Fragments":["as"]},{"Key":"properly as","Fragments":["a"]},{"Key":" Appreciate","Fragments":["the","the","the"]},{"Key":"Appreciate the","Fragments":["help!","help!","help!"]},{"Key":"the help!","Fragments":["Thanks."]},{"Key":"reworked this","Fragments":["one"]},{"Key":"one a","Fragments":["number"]},{"Key":"number times","Fragments":["trying"]},{"Key":"times trying","Fragments":["to"]},{"Key":"optimize everyting.","Fragments":["I'm"]},{"Key":"everyting. I'm","Fragments":["still"]},{"Key":"sure I'm","Fragments":["happy","missing"]},{"Key":"happy that","Fragments":["I"]},{"Key":"got everything,","Fragments":["but"]},{"Key":"everything, but","Fragments":["it"]},{"Key":"it felt","Fragments":["that"]},{"Key":"felt that","Fragments":["if"]},{"Key":"I pushed","Fragments":["any"]},{"Key":"pushed any","Fragments":["more,"]},{"Key":"any more,","Fragments":["I'd","but"]},{"Key":"more, I'd","Fragments":["be"]},{"Key":"be taking","Fragments":["out"]},{"Key":"taking out","Fragments":["single"]},{"Key":"out single","Fragments":["words"]},{"Key":"single words","Fragments":["for"]},{"Key":"words for","Fragments":["no"]},{"Key":"also posted","Fragments":["a"]},{"Key":"posted a","Fragments":["polymorphic"]},{"Key":"a polymorphic","Fragments":["solution,"]},{"Key":"polymorphic solution,","Fragments":["but"]},{"Key":"believe it","Fragments":["really","or"]},{"Key":"really fits","Fragments":["into"]},{"Key":"problem. Or","Fragments":["at"]},{"Key":"at least,","Fragments":["I"]},{"Key":"least, I","Fragments":["wasn't"]},{"Key":"wasn't able","Fragments":["to"]},{"Key":"it fit","Fragments":["within"]},{"Key":"fit within","Fragments":["the"]},{"Key":"the solution.","Fragments":["I'm"]},{"Key":"solution. I'm","Fragments":["interested"]},{"Key":"in feedback","Fragments":["on"]},{"Key":"this, and","Fragments":["I'm","I"]},{"Key":"how they've","Fragments":["brought"]},{"Key":"they've brought","Fragments":["something"]},{"Key":"brought something","Fragments":["up."]},{"Key":" Really,","Fragments":["I'm"]},{"Key":"Really, I'm","Fragments":["open"]},{"Key":"I'm open","Fragments":["to"]},{"Key":"any feedback.","Fragments":[":)"]},{"Key":" Work","Fragments":["in"]},{"Key":"Work in","Fragments":["Progress....."]},{"Key":"a completely","Fragments":["revamped"]},{"Key":"completely revamped","Fragments":["approach"]},{"Key":"revamped approach","Fragments":["at"]},{"Key":"approach at","Fragments":["this"]},{"Key":"exercise using","Fragments":["regular"]},{"Key":"This handles","Fragments":["most"]},{"Key":"handles most","Fragments":["cases"]},{"Key":"most cases","Fragments":["except"]},{"Key":"cases except","Fragments":["case"]},{"Key":"except case","Fragments":["12,17,32"]},{"Key":"case 12,17,32","Fragments":["and"]},{"Key":"12,17,32 and","Fragments":["37"]},{"Key":"and 37","Fragments":["in"]},{"Key":"37 in","Fragments":["bob_test.cpp."]},{"Key":"would appreciate","Fragments":["if"]},{"Key":"appreciate if","Fragments":["anyone"]},{"Key":"anyone told","Fragments":["me"]},{"Key":"me how","Fragments":["to"]},{"Key":"handle cases","Fragments":["where"]},{"Key":"where someone","Fragments":["yells"]},{"Key":"someone yells","Fragments":["at"]},{"Key":"yells at","Fragments":["bob"]},{"Key":"at bob","Fragments":["and"]},{"Key":"bob and","Fragments":["questions"]},{"Key":"and questions","Fragments":["with"]},{"Key":" Spent","Fragments":["a"]},{"Key":"Spent a","Fragments":["bit"]},{"Key":"bit trying","Fragments":["to"]},{"Key":"the algorythm","Fragments":["to"]},{"Key":"algorythm to","Fragments":["produce"]},{"Key":"to produce","Fragments":["all"]},{"Key":"produce all","Fragments":["the"]},{"Key":"prime factorizations","Fragments":["before"]},{"Key":"factorizations before","Fragments":["I"]},{"Key":"I re-read","Fragments":["the"]},{"Key":"re-read the","Fragments":["problem"]},{"Key":"and realized","Fragments":["we"]},{"Key":"realized we","Fragments":["really"]},{"Key":"we really","Fragments":["only"]},{"Key":"only cared","Fragments":["about","about"]},{"Key":"about 3,","Fragments":["5,","5"]},{"Key":"3, 5,","Fragments":["and"]},{"Key":"5, and","Fragments":["7."]},{"Key":"and 7.","Fragments":["sigh.","I'm"]},{"Key":"The modulus","Fragments":["operator"]},{"Key":"modulus operator","Fragments":["makes"]},{"Key":"operator makes","Fragments":["this"]},{"Key":"not difficult.","Fragments":["If"]},{"Key":"difficult. If","Fragments":["there's"]},{"Key":"If there's","Fragments":["any"]},{"Key":"any remainder,","Fragments":["the"]},{"Key":"remainder, the","Fragments":["number"]},{"Key":"number doesn't","Fragments":["divide"]},{"Key":"doesn't divide","Fragments":["equally."]},{"Key":"Added a","Fragments":["check"]},{"Key":"zero and","Fragments":["negative"]},{"Key":"negative drops","Fragments":["as"]},{"Key":"drops as","Fragments":["well."]},{"Key":"good. You","Fragments":["made"]},{"Key":"same decision","Fragments":["I"]},{"Key":"decision I","Fragments":["did"]},{"Key":"did to","Fragments":["store"]},{"Key":"store both","Fragments":["compare"]},{"Key":"both compare","Fragments":["versions"]},{"Key":"compare versions","Fragments":["rather"]},{"Key":"versions rather","Fragments":["than"]},{"Key":"than recompute","Fragments":["them"]},{"Key":"recompute them","Fragments":["each"]},{"Key":"them each","Fragments":["time."]},{"Key":" Small","Fragments":["nit,"]},{"Key":"Small nit,","Fragments":["but"]},{"Key":"but look","Fragments":["at"]},{"Key":"at moving","Fragments":["your"]},{"Key":"moving your","Fragments":["for"]},{"Key":"to range","Fragments":["based"]},{"Key":"loop. It","Fragments":["seems"]},{"Key":"the prefered","Fragments":["style"]},{"Key":"prefered style","Fragments":["if"]},{"Key":"style if","Fragments":["you're"]},{"Key":"a c++11","Fragments":["compatible"]},{"Key":"c++11 compatible","Fragments":["compiler."]},{"Key":"still working","Fragments":["on"]},{"Key":"it won't","Fragments":["pass"]},{"Key":"won't pass","Fragments":["the"]},{"Key":"last test.","Fragments":["Take"]},{"Key":"test. Take","Fragments":["a"]},{"Key":"the subtle","Fragments":["change"]},{"Key":"subtle change","Fragments":["in"]},{"Key":"2nd bottle","Fragments":["of"]},{"Key":"bottle of","Fragments":["beer."]},{"Key":"Looks good,","Fragments":["and"]},{"Key":"good, and","Fragments":["I"]},{"Key":"almost went","Fragments":["down"]},{"Key":"went down","Fragments":["the"]},{"Key":"the route","Fragments":["you"]},{"Key":"route you","Fragments":["did"]},{"Key":"did of","Fragments":["calculating"]},{"Key":"of calculating","Fragments":["all"]},{"Key":"calculating all","Fragments":["the"]},{"Key":"factors before","Fragments":["realizing"]},{"Key":"before realizing","Fragments":["I"]},{"Key":"realizing I","Fragments":["only"]},{"Key":"3, 5","Fragments":["and"]},{"Key":"5 and","Fragments":["7."]},{"Key":"7. I'm","Fragments":["glad"]},{"Key":"you did,","Fragments":["because"]},{"Key":"did, because","Fragments":["I"]},{"Key":"how that","Fragments":["logic","might"]},{"Key":"that logic","Fragments":["played"]},{"Key":"logic played","Fragments":["out."]},{"Key":"Since you've","Fragments":["determined"]},{"Key":"you've determined","Fragments":["a"]},{"Key":"determined a","Fragments":["generic"]},{"Key":"generic solution","Fragments":["to"]},{"Key":"the factors,","Fragments":["my"]},{"Key":"factors, my","Fragments":["only"]},{"Key":"my only","Fragments":["suggestion"]},{"Key":"suggestion would","Fragments":["be","be"]},{"Key":"the factorization","Fragments":["code"]},{"Key":"factorization code","Fragments":["into"]},{"Key":"into it's","Fragments":["own"]},{"Key":"own function","Fragments":["and"]},{"Key":"the math","Fragments":["seperate","to"]},{"Key":"math seperate","Fragments":["from"]},{"Key":"seperate from","Fragments":["the"]},{"Key":"A very","Fragments":["c"]},{"Key":"very c","Fragments":["answer!"]},{"Key":"string return","Fragments":["type."]},{"Key":"return type.","Fragments":["It'll"]},{"Key":"type. It'll","Fragments":["keep"]},{"Key":"It'll keep","Fragments":["it"]},{"Key":"more consistent","Fragments":["with"]},{"Key":"consistent with","Fragments":["the"]},{"Key":"and you're","Fragments":["unlikely"]},{"Key":"you're unlikely","Fragments":["to"]},{"Key":"unlikely to","Fragments":["recognize"]},{"Key":"recognize any","Fragments":["performance"]},{"Key":"any performance","Fragments":["gains"]},{"Key":"performance gains","Fragments":["out"]},{"Key":"gains out","Fragments":["of"]},{"Key":"char *.","Fragments":["You're"]},{"Key":"*. You're","Fragments":["also"]},{"Key":"You're also","Fragments":["forcing","missing"]},{"Key":"also forcing","Fragments":["your"]},{"Key":"your caller","Fragments":["to"]},{"Key":"caller to","Fragments":["remember"]},{"Key":"remember to","Fragments":["free"]},{"Key":"to free","Fragments":["up"]},{"Key":"free up","Fragments":["that"]},{"Key":"that memory","Fragments":["when"]},{"Key":"memory when","Fragments":["they're"]},{"Key":"when they're","Fragments":["done,"]},{"Key":"they're done,","Fragments":["which"]},{"Key":"potential source","Fragments":["of"]},{"Key":"My other","Fragments":["suggestion"]},{"Key":"other suggestion","Fragments":["would"]},{"Key":"in c++11.","Fragments":["I"]},{"Key":"c++11. I","Fragments":["still"]},{"Key":"a typical","Fragments":["for"]},{"Key":"typical for","Fragments":["loop,"]},{"Key":"worth understanding","Fragments":["and"]},{"Key":"understanding and","Fragments":["trying"]},{"Key":"incorporate because","Fragments":["it's"]},{"Key":"it's simpiler","Fragments":["with"]},{"Key":"simpiler with","Fragments":["less"]},{"Key":"with less","Fragments":["potential"]},{"Key":"less potential","Fragments":["for"]},{"Key":"for errors,","Fragments":["and"]},{"Key":"errors, and","Fragments":["it's"]},{"Key":"it's used","Fragments":["a"]},{"Key":"first c++","Fragments":["code"]},{"Key":"c++ code","Fragments":["after"]},{"Key":"after 3","Fragments":["years"]},{"Key":"3 years","Fragments":["developing"]},{"Key":"years developing","Fragments":["Linux"]},{"Key":"developing Linux","Fragments":["kernel"]},{"Key":"kernel drivers","Fragments":["and"]},{"Key":"drivers and","Fragments":["bare"]},{"Key":"and bare","Fragments":["metal"]},{"Key":"bare metal","Fragments":["on"]},{"Key":"metal on","Fragments":["arm,"]},{"Key":"on arm,","Fragments":["pic"]},{"Key":"arm, pic","Fragments":["and"]},{"Key":"pic and","Fragments":["avr,"]},{"Key":"and avr,","Fragments":["all"]},{"Key":"avr, all","Fragments":["in"]},{"Key":"in c","Fragments":["or"]},{"Key":"c or","Fragments":["asm..."]},{"Key":"or asm...","Fragments":["So"]},{"Key":"asm... So","Fragments":["be"]},{"Key":"So be","Fragments":["gentle."]},{"Key":"be gentle.","Fragments":["I"]},{"Key":"gentle. I","Fragments":["almost"]},{"Key":"almost forgot","Fragments":["what"]},{"Key":"forgot what","Fragments":["class"]},{"Key":"what class","Fragments":["is,"]},{"Key":"class is,","Fragments":["and"]},{"Key":"is, and","Fragments":["what"]},{"Key":"are objects.","Fragments":["And"]},{"Key":"objects. And","Fragments":["this"]},{"Key":"And this","Fragments":["is"]},{"Key":"first encounter","Fragments":["with"]},{"Key":"encounter with","Fragments":["unit"]},{"Key":"with unit","Fragments":["tests."]},{"Key":"tests. I","Fragments":["usually","know","removed","like"]},{"Key":"write whole","Fragments":["application"]},{"Key":"whole application","Fragments":["and"]},{"Key":"application and","Fragments":["then"]},{"Key":"then compile,","Fragments":["fix"]},{"Key":"compile, fix","Fragments":["typos"]},{"Key":"fix typos","Fragments":["recompile,"]},{"Key":"typos recompile,","Fragments":["try"]},{"Key":"recompile, try","Fragments":["couple"]},{"Key":"try couple","Fragments":["of"]},{"Key":"is it...","Fragments":["If"]},{"Key":"it... If","Fragments":["problem"]},{"Key":"If problem","Fragments":["is"]},{"Key":"is bigger","Fragments":["I"]},{"Key":"bigger I","Fragments":["try"]},{"Key":"try develop","Fragments":["with"]},{"Key":"develop with","Fragments":["prototyping."]},{"Key":"with prototyping.","Fragments":["TDD"]},{"Key":"prototyping. TDD","Fragments":["is"]},{"Key":"TDD is","Fragments":["not"]},{"Key":"not my","Fragments":["cup"]},{"Key":"my cup","Fragments":["of"]},{"Key":"cup of","Fragments":["tee"]},{"Key":"of tee","Fragments":["I"]},{"Key":"tee I","Fragments":["sure"]},{"Key":"I sure","Fragments":["will"]},{"Key":"sure will","Fragments":["try"]},{"Key":"will try","Fragments":["my"]},{"Key":"try my","Fragments":["best."]},{"Key":"is ugly,","Fragments":["but"]},{"Key":"ugly, but","Fragments":["it"]},{"Key":"should work","Fragments":["for"]},{"Key":"for given","Fragments":["tests."]},{"Key":"given tests.","Fragments":["I"]},{"Key":"regex but","Fragments":["I"]},{"Key":"it before","Fragments":["in"]},{"Key":"c++. I","Fragments":["tried"]},{"Key":"use as","Fragments":["much"]},{"Key":"much c++11","Fragments":["functions"]},{"Key":"c++11 functions","Fragments":["as"]},{"Key":"possible in","Fragments":["such"]},{"Key":"in such","Fragments":["simple"]},{"Key":"such simple","Fragments":["problem."]},{"Key":"simple problem.","Fragments":["There"]},{"Key":"problem. There","Fragments":["is"]},{"Key":"a huge","Fragments":["room"]},{"Key":"huge room","Fragments":["for"]},{"Key":"for improvements,","Fragments":["like"]},{"Key":"improvements, like","Fragments":["put"]},{"Key":"like put","Fragments":["things"]},{"Key":"put things","Fragments":["in"]},{"Key":"things in","Fragments":["different","std"]},{"Key":"different methods,...","Fragments":["well"]},{"Key":"methods,... well","Fragments":["more"]},{"Key":"well more","Fragments":["object"]},{"Key":"more object","Fragments":["oriented."]},{"Key":"couple tests","Fragments":["that"]},{"Key":"still need","Fragments":["to"]},{"Key":"to pass,","Fragments":["but"]},{"Key":"it's looking","Fragments":["good"]},{"Key":"looking good","Fragments":["so"]},{"Key":"good so","Fragments":["far."]},{"Key":"so far.","Fragments":["I"]},{"Key":"far. I","Fragments":["originally"]},{"Key":"some errors","Fragments":["in"]},{"Key":"errors in","Fragments":["mine"]},{"Key":"in mine","Fragments":["as"]},{"Key":"mine as","Fragments":["well"]},{"Key":"length wasn't","Fragments":["equal,"]},{"Key":"wasn't equal,","Fragments":["but"]},{"Key":"equal, but","Fragments":["as"]},{"Key":"as you'll","Fragments":["see"]},{"Key":"final two","Fragments":["tests,"]},{"Key":"two tests,","Fragments":["you"]},{"Key":"only compare","Fragments":["when"]},{"Key":"compare when","Fragments":["you"]},{"Key":"have something","Fragments":["to"]},{"Key":"Interesting use","Fragments":["of"]},{"Key":"the domain_error","Fragments":["exception,"]},{"Key":"domain_error exception,","Fragments":["and"]},{"Key":"exception, and","Fragments":["I"]},{"Key":"learned some","Fragments":["things"]},{"Key":"things researching","Fragments":["what"]},{"Key":"researching what","Fragments":["it"]},{"Key":"does and","Fragments":["when"]},{"Key":" Minor","Fragments":["nit,"]},{"Key":"Minor nit,","Fragments":["but"]},{"Key":"would declare","Fragments":["i","something"]},{"Key":"declare i","Fragments":["within"]},{"Key":"i within","Fragments":["your"]},{"Key":"don't use","Fragments":["it","using","_that_"]},{"Key":"it anywhere","Fragments":["else"]},{"Key":"anywhere else","Fragments":["within"]},{"Key":"else within","Fragments":["your"]},{"Key":"your function,","Fragments":["so"]},{"Key":"it's just","Fragments":["as"]},{"Key":"well that","Fragments":["it"]},{"Key":"falls out","Fragments":["of"]},{"Key":"of scope","Fragments":["there."]},{"Key":"Hi Chris.","Fragments":["Thanks"]},{"Key":"Chris. Thanks","Fragments":["for"]},{"Key":"think our","Fragments":["hamming_test.cpp"]},{"Key":"our hamming_test.cpp","Fragments":["files"]},{"Key":"hamming_test.cpp files","Fragments":["might"]},{"Key":"files might","Fragments":["not"]},{"Key":"other. I","Fragments":["just"]},{"Key":"just double","Fragments":["checked"]},{"Key":"double checked","Fragments":["and"]},{"Key":"are passing.","Fragments":["In"]},{"Key":"passing. In","Fragments":["my"]},{"Key":"my version","Fragments":["there"]},{"Key":"version there","Fragments":["are"]},{"Key":"are nine","Fragments":["tests"]},{"Key":"nine tests","Fragments":["and"]},{"Key":"last two","Fragments":["tests"]},{"Key":"are named","Fragments":["\"large_hamming_distance\""]},{"Key":"named \"large_hamming_distance\"","Fragments":["and"]},{"Key":"\"large_hamming_distance\" and","Fragments":["\"hamming_distance_in_very_long_strand\"."]},{"Key":"and \"hamming_distance_in_very_long_strand\".","Fragments":["Does"]},{"Key":"\"hamming_distance_in_very_long_strand\". Does","Fragments":["that"]},{"Key":"Does that","Fragments":["match"]},{"Key":"that match","Fragments":["up"]},{"Key":"match up","Fragments":["with"]},{"Key":"your version?","Fragments":["I"]},{"Key":"version? I","Fragments":["just"]},{"Key":"just ran","Fragments":["\"exercism"]},{"Key":"ran \"exercism","Fragments":["fetch\""]},{"Key":"\"exercism fetch\"","Fragments":["to"]},{"Key":"fetch\" to","Fragments":["make"]},{"Key":"latest tests","Fragments":["and"]},{"Key":"and checked","Fragments":["the"]},{"Key":"checked the","Fragments":["github"]},{"Key":"the github","Fragments":["repo"]},{"Key":"github repo","Fragments":["too."]},{"Key":"repo too.","Fragments":["It"]},{"Key":"too. It","Fragments":["appears"]},{"Key":"It appears","Fragments":["I"]},{"Key":"appears I","Fragments":["have"]},{"Key":"latest version","Fragments":["at"]},{"Key":"version at","Fragments":["the"]},{"Key":"time of","Fragments":["this"]},{"Key":"this writing.","Fragments":["That's"]},{"Key":"writing. That's","Fragments":["one"]},{"Key":"That's one","Fragments":["thing"]},{"Key":"about exercism.io","Fragments":["I"]},{"Key":"exercism.io I","Fragments":["have"]},{"Key":"have found","Fragments":["a"]},{"Key":"bit frustrating","Fragments":["(but"]},{"Key":"frustrating (but","Fragments":["I"]},{"Key":"it's still","Fragments":["considered"]},{"Key":"still considered","Fragments":["to"]},{"Key":"considered to","Fragments":["be"]},{"Key":"be within","Fragments":["the"]},{"Key":"the feature","Fragments":["set)"]},{"Key":"feature set)","Fragments":["is"]},{"Key":"set) is","Fragments":["that"]},{"Key":"your tests","Fragments":["passing"]},{"Key":"tests passing","Fragments":["and"]},{"Key":"passing and","Fragments":["submit"]},{"Key":"and submit","Fragments":["your"]},{"Key":"but later","Fragments":["on,"]},{"Key":"later on,","Fragments":["when"]},{"Key":"on, when","Fragments":["you"]},{"Key":"you update,","Fragments":["the"]},{"Key":"update, the","Fragments":["unit"]},{"Key":"tests have","Fragments":["changed."]},{"Key":"have changed.","Fragments":["This"]},{"Key":"changed. This","Fragments":["means"]},{"Key":"This means","Fragments":["that"]},{"Key":"code you","Fragments":["have","already"]},{"Key":"have previously","Fragments":["submitted"]},{"Key":"previously submitted","Fragments":["no"]},{"Key":"submitted no","Fragments":["longer"]},{"Key":"longer passes","Fragments":["all"]},{"Key":"which might","Fragments":["lead"]},{"Key":"might lead","Fragments":["nitpickers"]},{"Key":"lead nitpickers","Fragments":["to"]},{"Key":"nitpickers to","Fragments":["think"]},{"Key":"the submitter","Fragments":["wasn't"]},{"Key":"submitter wasn't","Fragments":["paying"]},{"Key":"wasn't paying","Fragments":["attention"]},{"Key":"paying attention","Fragments":["or"]},{"Key":"attention or","Fragments":["what"]},{"Key":"or what","Fragments":["have"]},{"Key":"what have","Fragments":["you."]},{"Key":"have you.","Fragments":["Ok,"]},{"Key":"you. Ok,","Fragments":["rant"]},{"Key":"Ok, rant","Fragments":["over."]},{"Key":"how domain_error","Fragments":["is"]},{"Key":"domain_error is","Fragments":["supposed"]},{"Key":"be used.","Fragments":["I"]},{"Key":"used. I","Fragments":["followed"]},{"Key":"followed some","Fragments":["examples"]},{"Key":"some examples","Fragments":["online"]},{"Key":"examples online","Fragments":["but"]},{"Key":"online but","Fragments":["the"]},{"Key":"the validity","Fragments":["of"]},{"Key":"validity of","Fragments":["said"]},{"Key":"said examples","Fragments":["might"]},{"Key":"examples might","Fragments":["be"]},{"Key":"be questionable.","Fragments":["I"]},{"Key":"questionable. I","Fragments":["just"]},{"Key":"just did","Fragments":["the"]},{"Key":"the bare","Fragments":["minimum"]},{"Key":"bare minimum","Fragments":["in"]},{"Key":"minimum in","Fragments":["order"]},{"Key":"to satisfy","Fragments":["the"]},{"Key":"satisfy the","Fragments":["unit"]},{"Key":"test that","Fragments":["requires"]},{"Key":"that requires","Fragments":["a"]},{"Key":"a domain_error","Fragments":["to","rather"]},{"Key":"domain_error to","Fragments":["be"]},{"Key":"Good point","Fragments":["on"]},{"Key":"variable initialization.","Fragments":["The"]},{"Key":"initialization. The","Fragments":["language"]},{"Key":"The language","Fragments":["that"]},{"Key":"language that","Fragments":["I"]},{"Key":"am most","Fragments":["proficient"]},{"Key":"most proficient","Fragments":["at"]},{"Key":"proficient at","Fragments":["is"]},{"Key":"is JavaScript","Fragments":["and"]},{"Key":"JavaScript and","Fragments":["the"]},{"Key":"the convention","Fragments":["there"]},{"Key":"convention there","Fragments":["is"]},{"Key":"initialize all","Fragments":["variables"]},{"Key":"all variables","Fragments":["near"]},{"Key":"variables near","Fragments":["or"]},{"Key":"near or","Fragments":["as"]},{"Key":"or as","Fragments":["close"]},{"Key":"as close","Fragments":["to"]},{"Key":"close to","Fragments":["the","hitting"]},{"Key":"possible. The","Fragments":["idea"]},{"Key":"it improves","Fragments":["legibility"]},{"Key":"improves legibility","Fragments":["as"]},{"Key":"legibility as","Fragments":["well"]},{"Key":"as inherently","Fragments":["avoids"]},{"Key":"inherently avoids","Fragments":["some"]},{"Key":"avoids some","Fragments":["annoying"]},{"Key":"some annoying","Fragments":["JavaScript"]},{"Key":"annoying JavaScript","Fragments":["parsing"]},{"Key":"JavaScript parsing","Fragments":["quirks."]},{"Key":"parsing quirks.","Fragments":["The"]},{"Key":"quirks. The","Fragments":["thing"]},{"Key":"I keep","Fragments":["forgetting"]},{"Key":"keep forgetting","Fragments":["is"]},{"Key":"forgetting is","Fragments":["that"]},{"Key":"is block","Fragments":["scoped"]},{"Key":"block scoped","Fragments":["where"]},{"Key":"scoped where","Fragments":["as"]},{"Key":"where as","Fragments":["JavaScript"]},{"Key":"as JavaScript","Fragments":["is"]},{"Key":"JavaScript is","Fragments":["lexical"]},{"Key":"is lexical","Fragments":["with"]},{"Key":"lexical with","Fragments":["regard"]},{"Key":"with regard","Fragments":["to"]},{"Key":"regard to","Fragments":["scope."]},{"Key":"to scope.","Fragments":["I'll"]},{"Key":"scope. I'll","Fragments":["have"]},{"Key":"mind. Old","Fragments":["habits"]},{"Key":"Old habits","Fragments":["die"]},{"Key":"habits die","Fragments":["hard."]},{"Key":"Updated as","Fragments":["per"]},{"Key":"as per","Fragments":["user"]},{"Key":"per user","Fragments":["chrishamilton's"]},{"Key":"user chrishamilton's","Fragments":["suggestions."]},{"Key":"No real","Fragments":["issues","issues"]},{"Key":"real issues","Fragments":["with","once"]},{"Key":"issues with","Fragments":["this"]},{"Key":"problem other","Fragments":["then"]},{"Key":"other then","Fragments":["discovering"]},{"Key":"then discovering","Fragments":["that"]},{"Key":"discovering that","Fragments":["the"]},{"Key":"map []","Fragments":["operator"]},{"Key":"operator doesn't","Fragments":["have"]},{"Key":"const implementation.","Fragments":["I"]},{"Key":"implementation. I","Fragments":["could","would"]},{"Key":"was storing","Fragments":["the"]},{"Key":"data or","Fragments":["having"]},{"Key":"or having","Fragments":["it"]},{"Key":"having it","Fragments":["recompute"]},{"Key":"it recompute","Fragments":["on"]},{"Key":"recompute on","Fragments":["the"]},{"Key":"a count","Fragments":["call"]},{"Key":"count call","Fragments":["was"]},{"Key":"call was","Fragments":["made,"]},{"Key":"was made,","Fragments":["but"]},{"Key":"now, there","Fragments":["should"]},{"Key":"be some","Fragments":["error"]},{"Key":"some error","Fragments":["checking"]},{"Key":"error checking","Fragments":["on","your"]},{"Key":"checking on","Fragments":["the"]},{"Key":"shouldn't be","Fragments":["able"]},{"Key":"contains non-dna","Fragments":["thingys."]},{"Key":"are absolutely","Fragments":["right"]},{"Key":"absolutely right","Fragments":["about"]},{"Key":"removed my","Fragments":["hamming_test.cpp"]},{"Key":"my hamming_test.cpp","Fragments":["and"]},{"Key":"hamming_test.cpp and","Fragments":["did"]},{"Key":"and did","Fragments":["a"]},{"Key":"a fetch,","Fragments":["and"]},{"Key":"fetch, and","Fragments":["it"]},{"Key":"it brought","Fragments":["it"]},{"Key":"brought it","Fragments":["a"]},{"Key":"different hamming_test.cpp","Fragments":["than"]},{"Key":"hamming_test.cpp than","Fragments":["I"]},{"Key":"than I","Fragments":["had."]},{"Key":"I had.","Fragments":["One"]},{"Key":"had. One","Fragments":["that"]},{"Key":"One that","Fragments":["threw"]},{"Key":"that threw","Fragments":["a"]},{"Key":"threw a","Fragments":["domain_error"]},{"Key":"domain_error rather","Fragments":["than"]},{"Key":"than ignoring","Fragments":["the"]},{"Key":"ignoring the","Fragments":["extra"]},{"Key":"extra length.","Fragments":["My"]},{"Key":"length. My","Fragments":["appologies."]},{"Key":"My appologies.","Fragments":["Your"]},{"Key":"appologies. Your","Fragments":["tests"]},{"Key":"Your tests","Fragments":["run"]},{"Key":"tests run","Fragments":["perfect"]},{"Key":"run perfect","Fragments":["with"]},{"Key":"perfect with","Fragments":["the"]},{"Key":"the update.","Fragments":["I"]},{"Key":"update. I","Fragments":["ran"]},{"Key":"a readme","Fragments":["before,"]},{"Key":"readme before,","Fragments":["but"]},{"Key":"not with","Fragments":["the"]},{"Key":"original submission","Fragments":["I"]},{"Key":"submission I","Fragments":["attempted"]},{"Key":"I attempted","Fragments":["to"]},{"Key":"to catalog","Fragments":["all"]},{"Key":"catalog all","Fragments":["previous"]},{"Key":"all previous","Fragments":["primes"]},{"Key":"previous primes","Fragments":["to"]},{"Key":"primes to","Fragments":["ensure"]},{"Key":"ensure the","Fragments":["current"]},{"Key":"current number","Fragments":["was"]},{"Key":"number was","Fragments":["not"]},{"Key":"not divisable","Fragments":["by"]},{"Key":"divisable by","Fragments":["one"]},{"Key":"of them.","Fragments":["I"]},{"Key":"trying for","Fragments":["a"]},{"Key":"a reverse","Fragments":["Sieve"]},{"Key":"reverse Sieve","Fragments":["type"]},{"Key":"Sieve type","Fragments":["of"]},{"Key":"of idea","Fragments":["but"]},{"Key":"idea but","Fragments":["I"]},{"Key":"the brute","Fragments":["force"]},{"Key":"force method","Fragments":["was"]},{"Key":"actually performing","Fragments":["better"]},{"Key":"performing better","Fragments":["for"]},{"Key":"prevent the","Fragments":["same"]},{"Key":"same name","Fragments":["being"]},{"Key":"name being","Fragments":["used"]},{"Key":"twice, I","Fragments":["had"]},{"Key":"global `allRobotNames`","Fragments":["vector"]},{"Key":"`allRobotNames` vector","Fragments":["variable"]},{"Key":"vector variable","Fragments":["where"]},{"Key":"variable where","Fragments":["used"]},{"Key":"where used","Fragments":["names"]},{"Key":"used names","Fragments":["are","are"]},{"Key":"are put","Fragments":["into."]},{"Key":"put into.","Fragments":["Then,"]},{"Key":"into. Then,","Fragments":["when"]},{"Key":"Then, when","Fragments":["the"]},{"Key":"robot is","Fragments":["reset,"]},{"Key":"is reset,","Fragments":["before"]},{"Key":"reset, before","Fragments":["the"]},{"Key":"new name","Fragments":["is"]},{"Key":"is assigned,","Fragments":["the"]},{"Key":"assigned, the","Fragments":["global"]},{"Key":"global used","Fragments":["names"]},{"Key":"off with","Fragments":["simple"]},{"Key":"with simple","Fragments":["substitution,"]},{"Key":"simple substitution,","Fragments":["and"]},{"Key":"substitution, and","Fragments":["that's"]},{"Key":"that's all","Fragments":["I"]},{"Key":"all I","Fragments":["really"]},{"Key":"really needed","Fragments":["to"]},{"Key":"do. When","Fragments":["it"]},{"Key":"When it","Fragments":["came"]},{"Key":"it came","Fragments":["to"]},{"Key":"test, I","Fragments":["justhad"]},{"Key":"I justhad","Fragments":["to"]},{"Key":"justhad to","Fragments":["call"]},{"Key":"suite has","Fragments":["changed"]},{"Key":"has changed","Fragments":["recently","in"]},{"Key":"changed recently","Fragments":["and"]},{"Key":"recently and","Fragments":["I've"]},{"Key":"and I've","Fragments":["been"]},{"Key":"been looking","Fragments":["at"]},{"Key":"local copy,","Fragments":["not"]},{"Key":"copy, not","Fragments":["the"]},{"Key":"one on","Fragments":["the"]},{"Key":"You're now","Fragments":["supposed"]},{"Key":"now supposed","Fragments":["to"]},{"Key":"std::domain_error if","Fragments":["the","the","the","the","the","the","the","the","the"]},{"Key":"are of","Fragments":["different"]},{"Key":"boost builtin","Fragments":["functions?"]},{"Key":"Interesting implementation.","Fragments":["Looks"]},{"Key":"implementation. Looks","Fragments":["pretty"]},{"Key":"good, though","Fragments":["I"]},{"Key":"string multiple","Fragments":["times"]},{"Key":"suggest trying","Fragments":["to"]},{"Key":"same results","Fragments":["with"]},{"Key":"results with","Fragments":["only"]},{"Key":"iteration through","Fragments":["the"]},{"Key":"first experience","Fragments":["in"]},{"Key":"C++ in","Fragments":["a"]},{"Key":"few years.","Fragments":["Tried"]},{"Key":"years. Tried","Fragments":["to"]},{"Key":"to replicate","Fragments":["my"]},{"Key":"replicate my","Fragments":["Python"]},{"Key":"Python implementation","Fragments":["by"]},{"Key":"implementation by","Fragments":["writing"]},{"Key":"writing my","Fragments":["own"]},{"Key":"own version","Fragments":["of"]},{"Key":"Python is_upper()","Fragments":["method."]},{"Key":" Removed","Fragments":["the"]},{"Key":"```std::pow``` thanks","Fragments":["to"]},{"Key":"straightforward exercise","Fragments":["until"]},{"Key":"exercise until","Fragments":["I"]},{"Key":"got to","Fragments":["the"]},{"Key":"was stumped","Fragments":["for"]},{"Key":"stumped for","Fragments":["a"]},{"Key":"of days.","Fragments":["I"]},{"Key":"days. I","Fragments":["managed"]},{"Key":"I managed","Fragments":["to"]},{"Key":"managed to","Fragments":["get","store"]},{"Key":"test passing","Fragments":["with"]},{"Key":"passing with","Fragments":["an"]},{"Key":"an conversion","Fragments":["operator,"]},{"Key":"conversion operator,","Fragments":["but"]},{"Key":"operator, but","Fragments":["I"]},{"Key":"suspect that","Fragments":["I"]},{"Key":"I over","Fragments":["engineered"]},{"Key":"over engineered","Fragments":["a"]},{"Key":"engineered a","Fragments":["solution"]},{"Key":"there's something","Fragments":["simplier"]},{"Key":"something simplier","Fragments":["that"]},{"Key":"simplier that","Fragments":["I"]},{"Key":"- removed","Fragments":["some"]},{"Key":"removed some","Fragments":["debug"]},{"Key":"some debug","Fragments":["code"]},{"Key":"- fixed","Fragments":["up"]},{"Key":"fixed up","Fragments":["my"]},{"Key":"up my","Fragments":["conversion"]},{"Key":"my conversion","Fragments":["operator"]},{"Key":"operator call","Fragments":["so"]},{"Key":"call so","Fragments":["that"]},{"Key":"a round","Fragments":["about"]},{"Key":"round about","Fragments":["way"]},{"Key":"Wanted this","Fragments":["to"]},{"Key":"be as","Fragments":["straightforward"]},{"Key":"as straightforward","Fragments":["as"]},{"Key":"straightforward as","Fragments":["possible."]},{"Key":"possible. Code's","Fragments":["commented"]},{"Key":"Code's commented","Fragments":["or"]},{"Key":"commented or","Fragments":["otherwise"]},{"Key":"or otherwise","Fragments":["obvious,"]},{"Key":"otherwise obvious,","Fragments":["so"]},{"Key":"obvious, so","Fragments":["it's"]},{"Key":"it's hard","Fragments":["to"]},{"Key":" `main()`","Fragments":["starts"]},{"Key":"`main()` starts","Fragments":["declaring"]},{"Key":"starts declaring","Fragments":["`sInput`"]},{"Key":"declaring `sInput`","Fragments":["and"]},{"Key":"`sInput` and","Fragments":["taking"]},{"Key":"and taking","Fragments":["user","time"]},{"Key":"taking user","Fragments":["input."]},{"Key":"user input.","Fragments":["After"]},{"Key":"input. After","Fragments":["that,"]},{"Key":"that, it","Fragments":["strips"]},{"Key":"it strips","Fragments":["all"]},{"Key":"strips all","Fragments":["whitespace"]},{"Key":"input and","Fragments":["checks"]},{"Key":"and checks","Fragments":["whether"]},{"Key":"checks whether","Fragments":["the","either"]},{"Key":"length equals","Fragments":["zero"]},{"Key":"equals zero","Fragments":["(in"]},{"Key":"zero (in","Fragments":["which"]},{"Key":"(in which","Fragments":["case","case,","case","case"]},{"Key":"was all","Fragments":["whitespace"]},{"Key":"whitespace or","Fragments":["nothing"]},{"Key":"or nothing","Fragments":["at"]},{"Key":"nothing at","Fragments":["all,"]},{"Key":"at all,","Fragments":["so"]},{"Key":"all, so","Fragments":["it"]},{"Key":"it outputs","Fragments":["\"Fine."]},{"Key":"outputs \"Fine.","Fragments":["Be"]},{"Key":"way!\" and","Fragments":["awaits"]},{"Key":"and awaits","Fragments":["further"]},{"Key":"awaits further","Fragments":["input)."]},{"Key":"further input).","Fragments":["If"]},{"Key":"input). If","Fragments":["it"]},{"Key":"it calls","Fragments":["`nStringType(sInput)`"]},{"Key":"calls `nStringType(sInput)`","Fragments":["to"]},{"Key":"`nStringType(sInput)` to","Fragments":["check"]},{"Key":"question, yell","Fragments":["or"]},{"Key":"yell or","Fragments":["other"]},{"Key":"In `nStringType`,","Fragments":["we"]},{"Key":"`nStringType`, we","Fragments":["have"]},{"Key":"char for","Fragments":["the"]},{"Key":"be punctuation","Fragments":["(remember,"]},{"Key":"punctuation (remember,","Fragments":["main()"]},{"Key":"(remember, main()","Fragments":["stripped"]},{"Key":"main() stripped","Fragments":["the"]},{"Key":"stripped the","Fragments":["whitespace)."]},{"Key":"the whitespace).","Fragments":["Then"]},{"Key":"whitespace). Then","Fragments":["it"]},{"Key":"Then it","Fragments":["duplicates","checks"]},{"Key":"it duplicates","Fragments":["`sString`"]},{"Key":"duplicates `sString`","Fragments":["and"]},{"Key":"`sString` and","Fragments":["capitalizes"]},{"Key":"and capitalizes","Fragments":["`sStringUpper`,"]},{"Key":"capitalizes `sStringUpper`,","Fragments":["as"]},{"Key":"`sStringUpper`, as","Fragments":["well"]},{"Key":"as removing","Fragments":["numbers"]},{"Key":"removing numbers","Fragments":["from"]},{"Key":"numbers from","Fragments":["the"]},{"Key":"latter (this","Fragments":["makes"]},{"Key":"(this makes","Fragments":["number-only"]},{"Key":"makes number-only","Fragments":["strings"]},{"Key":"number-only strings","Fragments":["return"]},{"Key":"strings return","Fragments":["OTHER"]},{"Key":"return OTHER","Fragments":["instead"]},{"Key":"OTHER instead","Fragments":["of"]},{"Key":"of YELL),","Fragments":["to"]},{"Key":"YELL), to","Fragments":["later"]},{"Key":"to later","Fragments":["check"]},{"Key":"later check","Fragments":["if"]},{"Key":"both are","Fragments":["the"]},{"Key":"same (in","Fragments":["which"]},{"Key":"which case,","Fragments":["input"]},{"Key":"case, input","Fragments":["was"]},{"Key":"input was","Fragments":["CAPITALIZED"]},{"Key":"was CAPITALIZED","Fragments":["and"]},{"Key":"CAPITALIZED and","Fragments":["is"]},{"Key":"is therefore","Fragments":["a"]},{"Key":"therefore a","Fragments":["yell)."]},{"Key":"yell). Then","Fragments":["it"]},{"Key":"mark (if","Fragments":["true,"]},{"Key":"(if true,","Fragments":["returns"]},{"Key":"true, returns","Fragments":["question),"]},{"Key":"returns question),","Fragments":["and"]},{"Key":"question), and","Fragments":["if"]},{"Key":"if that's","Fragments":["false,","true,"]},{"Key":"that's false,","Fragments":["checks"]},{"Key":"false, checks","Fragments":["whether"]},{"Key":"whether either","Fragments":["the"]},{"Key":"a '!'","Fragments":["or"]},{"Key":"'!' or","Fragments":["the"]},{"Key":"is capitalized).","Fragments":["It"]},{"Key":"capitalized). It","Fragments":["then"]},{"Key":"It then","Fragments":["returns"]},{"Key":"then returns","Fragments":["YELL"]},{"Key":"returns YELL","Fragments":["if"]},{"Key":"YELL if","Fragments":["it's"]},{"Key":"it's true","Fragments":["and","and"]},{"Key":"true and","Fragments":["OTHER","0"]},{"Key":"and OTHER","Fragments":["if"]},{"Key":"OTHER if","Fragments":["it's"]},{"Key":"iteration, simply","Fragments":["made"]},{"Key":"simply made","Fragments":["the"]},{"Key":"program quit","Fragments":["when"]},{"Key":"quit when","Fragments":["the"]},{"Key":"user typed","Fragments":["\"/exit\"."]},{"Key":"typed \"/exit\".","Fragments":["For"]},{"Key":"\"/exit\". For","Fragments":["a"]},{"Key":"full description","Fragments":["of"]},{"Key":"description of","Fragments":["the"]},{"Key":"program, refer","Fragments":["to"]},{"Key":"to Iteration","Fragments":["#2"]},{"Key":" Okay,","Fragments":["so"]},{"Key":"Okay, so","Fragments":["being"]},{"Key":"so being","Fragments":["a"]},{"Key":"a beginner","Fragments":["myself,"]},{"Key":"beginner myself,","Fragments":["I"]},{"Key":"myself, I","Fragments":["might've"]},{"Key":"I might've","Fragments":["missed"]},{"Key":"might've missed","Fragments":["some"]},{"Key":"missed some","Fragments":["stuff,"]},{"Key":"some stuff,","Fragments":["but"]},{"Key":"stuff, but","Fragments":["I"]},{"Key":"I spotted","Fragments":["some"]},{"Key":"spotted some","Fragments":["problems"]},{"Key":"some problems","Fragments":["with"]},{"Key":"code. Please","Fragments":["don't"]},{"Key":"Please don't","Fragments":["hesitate"]},{"Key":"don't hesitate","Fragments":["to"]},{"Key":"hesitate to","Fragments":["correct"]},{"Key":"to correct","Fragments":["me"]},{"Key":"correct me","Fragments":["back"]},{"Key":"back if","Fragments":["I'm"]},{"Key":" Right","Fragments":["off"]},{"Key":"Right off","Fragments":["the"]},{"Key":"the bat,","Fragments":["`"]},{"Key":"bat, `","Fragments":["isWhitespace`"]},{"Key":"` isWhitespace`","Fragments":["looks"]},{"Key":"isWhitespace` looks","Fragments":["weird."]},{"Key":"looks weird.","Fragments":["It'll"]},{"Key":"weird. It'll","Fragments":["always"]},{"Key":"It'll always","Fragments":["return"]},{"Key":"always return","Fragments":["false,"]},{"Key":"return false,","Fragments":["because"]},{"Key":"false, because","Fragments":["the"]},{"Key":"time it","Fragments":["runs"]},{"Key":"it runs","Fragments":["the"]},{"Key":"runs the","Fragments":["loop"]},{"Key":"loop it","Fragments":["will"]},{"Key":"false. Then","Fragments":["there's"]},{"Key":"Then there's","Fragments":["`isUpper`,"]},{"Key":"there's `isUpper`,","Fragments":["in"]},{"Key":"`isUpper`, in","Fragments":["which"]},{"Key":"which you've","Fragments":["made"]},{"Key":"you've made","Fragments":["the"]},{"Key":" `hey()`","Fragments":["looks"]},{"Key":"`hey()` looks","Fragments":["good,"]},{"Key":"the `==","Fragments":["true`"]},{"Key":"`== true`","Fragments":["is"]},{"Key":"true` is","Fragments":["redundant"]},{"Key":"is redundant","Fragments":["in"]},{"Key":"redundant in","Fragments":["all"]},{"Key":"three cases,","Fragments":["because"]},{"Key":"cases, because","Fragments":["the"]},{"Key":"the `if`","Fragments":["statement"]},{"Key":"`if` statement","Fragments":["will"]},{"Key":"statement will","Fragments":["execute"]},{"Key":"will execute","Fragments":["if"]},{"Key":"execute if","Fragments":["the"]},{"Key":"the parentheses","Fragments":["is"]},{"Key":"parentheses is","Fragments":["true"]},{"Key":"true -","Fragments":["you"]},{"Key":"that's true,","Fragments":["because"]},{"Key":"true, because","Fragments":["the"]},{"Key":"the _the","Fragments":["boolean"]},{"Key":"_the boolean","Fragments":["function"]},{"Key":"boolean function","Fragments":["will"]},{"Key":"return 1","Fragments":["if","if"]},{"Key":"it's not_.","Fragments":["You're"]},{"Key":"not_. You're","Fragments":["just"]},{"Key":"You're just","Fragments":["asking"]},{"Key":"just asking","Fragments":["if"]},{"Key":"asking if","Fragments":["`1"]},{"Key":"if `1","Fragments":["=="]},{"Key":"`1 ==","Fragments":["1`"]},{"Key":"== 1`","Fragments":["(in","(in"]},{"Key":"1` (in","Fragments":["which","which"]},{"Key":"function returns","Fragments":["1,","0,"]},{"Key":"returns 1,","Fragments":["and"]},{"Key":"1, and","Fragments":["both"]},{"Key":"and both","Fragments":["would","would"]},{"Key":"both would","Fragments":["be","be"]},{"Key":"be true)","Fragments":["or"]},{"Key":"true) or","Fragments":["if"]},{"Key":"if `0","Fragments":["=="]},{"Key":"`0 ==","Fragments":["1`"]},{"Key":"returns 0,","Fragments":["and"]},{"Key":"0, and","Fragments":["both"]},{"Key":"be false).","Fragments":["You're"]},{"Key":"false). You're","Fragments":["also"]},{"Key":"also missing","Fragments":["a"]},{"Key":"a parentheses","Fragments":["on"]},{"Key":"parentheses on","Fragments":["line"]},{"Key":"20, which","Fragments":["will"]},{"Key":"program fail","Fragments":["to"]},{"Key":"fail to","Fragments":["compile."]},{"Key":" Last","Fragments":["but"]},{"Key":"Last but","Fragments":["not"]},{"Key":"not least,","Fragments":["you"]},{"Key":"least, you","Fragments":["have"]},{"Key":"have `main()`,","Fragments":["which"]},{"Key":"`main()`, which","Fragments":["has"]},{"Key":"has one","Fragments":["problem","`switch`"]},{"Key":"one problem","Fragments":["and","only:"]},{"Key":"problem only:","Fragments":["it"]},{"Key":"only: it","Fragments":["doesn't"]},{"Key":"doesn't output","Fragments":["anything."]},{"Key":"output anything.","Fragments":["`hey()`"]},{"Key":"anything. `hey()`","Fragments":["is"]},{"Key":"`hey()` is","Fragments":["called"]},{"Key":"called and","Fragments":["that's"]},{"Key":"that's it,","Fragments":["nothing"]},{"Key":"it, nothing","Fragments":["else"]},{"Key":"nothing else","Fragments":["happens."]},{"Key":"else happens.","Fragments":["`hey()`"]},{"Key":"happens. `hey()`","Fragments":["will"]},{"Key":"`hey()` will","Fragments":["return"]},{"Key":"and `main()`","Fragments":["won't"]},{"Key":"`main()` won't","Fragments":["do"]},{"Key":"won't do","Fragments":["anything"]},{"Key":"do anything","Fragments":["with"]},{"Key":"anything with","Fragments":["it."]},{"Key":"The easiest","Fragments":["way"]},{"Key":"easiest way","Fragments":["to"]},{"Key":"line 24","Fragments":["to"]},{"Key":"24 to","Fragments":["`std::cout"]},{"Key":"to `std::cout","Fragments":["\u003c\u003c"]},{"Key":"`std::cout \u003c\u003c","Fragments":["hey();`"]},{"Key":"\u003c\u003c hey();`","Fragments":["instead,"]},{"Key":"hey();` instead,","Fragments":["but"]},{"Key":"instead, but","Fragments":["I'd"]},{"Key":"but I'd","Fragments":["recommend","definitely"]},{"Key":"I'd recommend","Fragments":["against"]},{"Key":"recommend against","Fragments":["it."]},{"Key":"against it.","Fragments":["If"]},{"Key":"it. If","Fragments":["all","I"]},{"Key":"If all","Fragments":["`main()`"]},{"Key":"all `main()`","Fragments":["does"]},{"Key":"`main()` does","Fragments":["is"]},{"Key":"is call","Fragments":["a"]},{"Key":"a function,","Fragments":["why"]},{"Key":"function, why","Fragments":["don't"]},{"Key":"why don't","Fragments":["you"]},{"Key":"take `hey()`","Fragments":["out"]},{"Key":"`hey()` out","Fragments":["of"]},{"Key":"the equation","Fragments":["and"]},{"Key":"equation and","Fragments":["just"]},{"Key":"just throw","Fragments":["in"]},{"Key":"all its","Fragments":["code"]},{"Key":"its code","Fragments":["in"]},{"Key":"you! Great","Fragments":["tips"]},{"Key":"iteration, `isNumber`","Fragments":["has"]},{"Key":"`isNumber` has","Fragments":["been"]},{"Key":"been rewritten","Fragments":["and"]},{"Key":"rewritten and","Fragments":["is"]},{"Key":"longer retarded","Fragments":["(it"]},{"Key":"retarded (it","Fragments":["was"]},{"Key":"(it was","Fragments":["a"]},{"Key":"really dumb","Fragments":["function"]},{"Key":"dumb function","Fragments":["-"]},{"Key":"function -","Fragments":["functional"]},{"Key":"- functional","Fragments":["but"]},{"Key":"functional but","Fragments":["badly"]},{"Key":"but badly","Fragments":["written)."]},{"Key":"Used C++","Fragments":["strings"]},{"Key":"C++ strings","Fragments":["as"]},{"Key":"much as","Fragments":["possible"]},{"Key":"compare and","Fragments":["use"]},{"Key":"use various","Fragments":["functions"]},{"Key":"Looks good!","Fragments":["Good,"]},{"Key":"good! Good,","Fragments":["tight"]},{"Key":"Good, tight","Fragments":["solution."]},{"Key":"Only nit","Fragments":["I"]},{"Key":"nit I","Fragments":["have"]},{"Key":"have is","Fragments":["that"]},{"Key":"you've got","Fragments":["a","so"]},{"Key":"couple extra","Fragments":["headers"]},{"Key":"extra headers","Fragments":["in"]},{"Key":"headers in","Fragments":["there"]},{"Key":"iteration, polished","Fragments":["code"]},{"Key":"polished code","Fragments":["a"]},{"Key":"bit (streamlined","Fragments":["nStringType,"]},{"Key":"(streamlined nStringType,","Fragments":["mostly)"]},{"Key":"nStringType, mostly)","Fragments":["and"]},{"Key":"mostly) and","Fragments":["fixed"]},{"Key":"and fixed","Fragments":["an"]},{"Key":"fixed an","Fragments":["issue","issue"]},{"Key":"issue where","Fragments":["inputting","a"]},{"Key":"where inputting","Fragments":["a"]},{"Key":"inputting a","Fragments":["number-only"]},{"Key":"a number-only","Fragments":["string","string"]},{"Key":"number-only string","Fragments":["would","ending"]},{"Key":"would crash","Fragments":["the"]},{"Key":"crash the","Fragments":["program"]},{"Key":"program (see","Fragments":["lines"]},{"Key":"(see lines","Fragments":["19-24"]},{"Key":"lines 19-24","Fragments":["for"]},{"Key":"19-24 for","Fragments":["details)."]},{"Key":"couple things,","Fragments":["but"]},{"Key":"you're off","Fragments":["to"]},{"Key":"good start.","Fragments":["I"]},{"Key":"start. I","Fragments":["like"]},{"Key":"you've kept","Fragments":["improving"]},{"Key":"kept improving","Fragments":["the"]},{"Key":"improving the","Fragments":["code."]},{"Key":"you're running","Fragments":["the"]},{"Key":"running the","Fragments":["tests"]},{"Key":"tests by","Fragments":["passing"]},{"Key":"test input","Fragments":["into"]},{"Key":"input into","Fragments":["a"]},{"Key":"a running","Fragments":["program."]},{"Key":"running program.","Fragments":["You"]},{"Key":"program. You","Fragments":["don't"]},{"Key":"do that.","Fragments":["You"]},{"Key":"that. You","Fragments":["want"]},{"Key":"You want","Fragments":["to"]},{"Key":"setup your","Fragments":["code"]},{"Key":"it produces","Fragments":["a"]},{"Key":"produces a","Fragments":["function"]},{"Key":"tests can","Fragments":["link"]},{"Key":"can link","Fragments":["and"]},{"Key":"and execute","Fragments":["against."]},{"Key":"execute against.","Fragments":["I'm"]},{"Key":"against. I'm","Fragments":["not"]},{"Key":"not running","Fragments":["Visual"]},{"Key":"running Visual","Fragments":["Studio,"]},{"Key":"Visual Studio,","Fragments":["so"]},{"Key":"Studio, so","Fragments":["I"]},{"Key":"can't step","Fragments":["you"]},{"Key":"step you","Fragments":["through"]},{"Key":"you through","Fragments":["the"]},{"Key":"the setup,","Fragments":["but"]},{"Key":"setup, but","Fragments":["the"]},{"Key":"readme should","Fragments":["be"]},{"Key":"- try","Fragments":["not"]},{"Key":"try not","Fragments":["to"]},{"Key":"use preprocessor","Fragments":["define's."]},{"Key":"preprocessor define's.","Fragments":["If"]},{"Key":"define's. If","Fragments":["you"]},{"Key":"really want","Fragments":["that"]},{"Key":"want that","Fragments":["capability,"]},{"Key":"that capability,","Fragments":["look"]},{"Key":"capability, look","Fragments":["at"]},{"Key":"at const","Fragments":["or"]},{"Key":"const or","Fragments":["enum."]},{"Key":"or enum.","Fragments":["When"]},{"Key":"enum. When","Fragments":["your"]},{"Key":"When your","Fragments":["code"]},{"Key":"is compiled","Fragments":["it"]},{"Key":"compiled it","Fragments":["substitues"]},{"Key":"it substitues","Fragments":["those"]},{"Key":"substitues those","Fragments":["values"]},{"Key":"those values","Fragments":["with"]},{"Key":"your numeric","Fragments":["values"]},{"Key":"numeric values","Fragments":["and"]},{"Key":"values and","Fragments":["it"]},{"Key":"get challening","Fragments":["to"]},{"Key":"challening to","Fragments":["debug."]},{"Key":"to debug.","Fragments":["Scott"]},{"Key":"debug. Scott","Fragments":["Meyers"]},{"Key":"Meyers has","Fragments":["a"]},{"Key":"good write","Fragments":["up"]},{"Key":"write up","Fragments":["if"]},{"Key":"up if","Fragments":["you're"]},{"Key":"- Wrapping","Fragments":["isdigit"]},{"Key":"Wrapping isdigit","Fragments":["with"]},{"Key":"isdigit with","Fragments":["the"]},{"Key":"the isNumber","Fragments":["function"]},{"Key":"isNumber function","Fragments":["looks"]},{"Key":"looks odd","Fragments":["to"]},{"Key":"me mainly","Fragments":["because"]},{"Key":"mainly because","Fragments":["you're"]},{"Key":"because you're","Fragments":["wrapping"]},{"Key":"you're wrapping","Fragments":["a"]},{"Key":"wrapping a","Fragments":["standard"]},{"Key":"with another","Fragments":["function"]},{"Key":"another function","Fragments":["that"]},{"Key":"the ch","Fragments":["variable,","variable,"]},{"Key":"ch variable,","Fragments":["and","I'll"]},{"Key":"variable, and","Fragments":["it"]},{"Key":"put sString.back()","Fragments":["=="]},{"Key":"sString.back() ==","Fragments":["'?'"]},{"Key":"== '?'","Fragments":["in"]},{"Key":"'?' in","Fragments":["your"]},{"Key":"your conditional","Fragments":["statement."]},{"Key":"feedback! I'll","Fragments":["address"]},{"Key":"I'll address","Fragments":["these"]},{"Key":"address these","Fragments":["issues"]},{"Key":"these issues","Fragments":["when"]},{"Key":"issues when","Fragments":["I"]},{"Key":"back (that","Fragments":["would"]},{"Key":"(that would","Fragments":["be"]},{"Key":"in about","Fragments":["an","4"]},{"Key":"about an","Fragments":["hour"]},{"Key":"hour or","Fragments":["so)."]},{"Key":"First off,","Fragments":["thanks"]},{"Key":"off, thanks","Fragments":["for"]},{"Key":"the compliments!","Fragments":["I"]},{"Key":"compliments! I","Fragments":["really"]},{"Key":"really appreciate","Fragments":["them."]},{"Key":"appreciate them.","Fragments":["That"]},{"Key":"them. That","Fragments":["said,"]},{"Key":"said, I'll","Fragments":["look"]},{"Key":"testing procedures","Fragments":["you've"]},{"Key":"procedures you've","Fragments":["suggested"]},{"Key":"you've suggested","Fragments":["later.As"]},{"Key":"suggested later.As","Fragments":["for"]},{"Key":"later.As for","Fragments":["the"]},{"Key":"the preprocessor","Fragments":["defines,"]},{"Key":"preprocessor defines,","Fragments":["I'm"]},{"Key":"defines, I'm","Fragments":["definitely"]},{"Key":"I'm definitely","Fragments":["interested"]},{"Key":"definitely interested","Fragments":["in"]},{"Key":"that read;","Fragments":["I"]},{"Key":"read; I","Fragments":["just"]},{"Key":"just figured","Fragments":["they"]},{"Key":"figured they","Fragments":["significantly"]},{"Key":"they significantly","Fragments":["improved"]},{"Key":"significantly improved","Fragments":["code"]},{"Key":"improved code","Fragments":["readability,"]},{"Key":"code readability,","Fragments":["at"]},{"Key":"readability, at","Fragments":["least"]},{"Key":"this case.","Fragments":["Wrapping"]},{"Key":"case. Wrapping","Fragments":["`isdigit`"]},{"Key":"Wrapping `isdigit`","Fragments":["with"]},{"Key":"`isdigit` with","Fragments":["the"]},{"Key":"the `isNumber`","Fragments":["function"]},{"Key":"`isNumber` function","Fragments":["was"]},{"Key":"of readability,","Fragments":["but"]},{"Key":"that too","Fragments":["when"]},{"Key":"too when","Fragments":["I"]},{"Key":"get back.","Fragments":["Thanks"]},{"Key":"back. Thanks","Fragments":["for"]},{"Key":"variable, I'll","Fragments":["just"]},{"Key":"iteration 6,","Fragments":["along"]},{"Key":"6, along","Fragments":["with"]},{"Key":"with these","Fragments":["other"]},{"Key":"these other","Fragments":["issues."]},{"Key":"other issues.","Fragments":["Thanks"]},{"Key":"issues. Thanks","Fragments":["for"]},{"Key":"iteration, fixed","Fragments":["an"]},{"Key":"string ending","Fragments":["in"]},{"Key":"mark (a","Fragments":["yell)"]},{"Key":"(a yell)","Fragments":["would"]},{"Key":"yell) would","Fragments":["return"]},{"Key":"return \"Whatever.\"","Fragments":["instead"]},{"Key":"\"Whatever.\" instead","Fragments":["of"]},{"Key":"expected output","Fragments":["for"]},{"Key":"yell (\"Whoa,","Fragments":["chill"]},{"Key":"(\"Whoa, chill","Fragments":["out!\")."]},{"Key":"chill out!\").","Fragments":["Please"]},{"Key":"out!\"). Please","Fragments":["refer"]},{"Key":"Please refer","Fragments":["to"]},{"Key":"to lines","Fragments":["35-43"]},{"Key":"lines 35-43","Fragments":["for"]},{"Key":"35-43 for","Fragments":["an"]},{"Key":"an explanatory","Fragments":["comment"]},{"Key":"explanatory comment","Fragments":["on"]},{"Key":"is. Great","Fragments":["job!"]},{"Key":"it's broken","Fragments":["(sorry)."]},{"Key":"broken (sorry).","Fragments":["If"]},{"Key":"(sorry). If","Fragments":["I"]},{"Key":"I understood","Fragments":["it"]},{"Key":"understood it","Fragments":["correctly,"]},{"Key":"it correctly,","Fragments":["`CheckCaps`"]},{"Key":"correctly, `CheckCaps`","Fragments":["will"]},{"Key":"`CheckCaps` will","Fragments":["return"]},{"Key":"first letter","Fragments":["is","it"]},{"Key":"is uppercase","Fragments":["and","instead","but"]},{"Key":"not. The","Fragments":["problem"]},{"Key":"The problem","Fragments":["with"]},{"Key":"letter it","Fragments":["encounters"]},{"Key":"it encounters","Fragments":["will"]},{"Key":"encounters will","Fragments":["define"]},{"Key":"will define","Fragments":["the"]},{"Key":"returned value:","Fragments":["if"]},{"Key":"value: if","Fragments":["it's"]},{"Key":"it's uppercase,","Fragments":["it'll"]},{"Key":"uppercase, it'll","Fragments":["increment"]},{"Key":"it'll increment","Fragments":["`count`"]},{"Key":"increment `count`","Fragments":["by"]},{"Key":"`count` by","Fragments":["one,"]},{"Key":"by one,","Fragments":["which"]},{"Key":"one, which","Fragments":["will"]},{"Key":"will invariably","Fragments":["make"]},{"Key":"invariably make","Fragments":["it"]},{"Key":"return 1;","Fragments":["if"]},{"Key":"1; if","Fragments":["it's"]},{"Key":"it's lowercase,","Fragments":["it'll"]},{"Key":"lowercase, it'll","Fragments":["break"]},{"Key":"it'll break","Fragments":["the"]},{"Key":"return 0.","Fragments":["You'd"]},{"Key":"0. You'd","Fragments":["need"]},{"Key":"You'd need","Fragments":["to"]},{"Key":"uppercase instead","Fragments":["of"]},{"Key":"Lines 61","Fragments":["to"]},{"Key":"61 to","Fragments":["65"]},{"Key":"to 65","Fragments":["are"]},{"Key":"65 are","Fragments":["clever"]},{"Key":"are clever","Fragments":["(good"]},{"Key":"clever (good","Fragments":["job),"]},{"Key":"(good job),","Fragments":["but"]},{"Key":"job), but","Fragments":["it"]},{"Key":"it could've","Fragments":["been"]},{"Key":"could've been","Fragments":["done"]},{"Key":"been done","Fragments":["without"]},{"Key":"loop (optimizations!).","Fragments":["i.e.:"]},{"Key":"(optimizations!). i.e.:","Fragments":["`if"]},{"Key":"i.e.: `if","Fragments":["(str.length()"]},{"Key":"`if (str.length()","Fragments":["=="]},{"Key":"(str.length() ==","Fragments":["0)"]},{"Key":"== 0)","Fragments":["break;`"]},{"Key":"uppercase but","Fragments":["the"]},{"Key":"is lower?","Fragments":["I"]},{"Key":"lower? I","Fragments":["think"]},{"Key":"that's an","Fragments":["error"]},{"Key":"is \"what's","Fragments":["up?"]},{"Key":"\"what's up?","Fragments":["\"."]},{"Key":"up? \".","Fragments":["Spaces"]},{"Key":"\". Spaces","Fragments":["after"]},{"Key":"Spaces after","Fragments":["the"]},{"Key":"the ?.","Fragments":["I"]},{"Key":"?. I","Fragments":["think"]},{"Key":"that's another","Fragments":["problem."]},{"Key":"a comparison.","Fragments":["All"]},{"Key":"comparison. All","Fragments":["you"]},{"Key":"All you","Fragments":["need","need","do"]},{"Key":"know is","Fragments":["if"]},{"Key":"has any","Fragments":["lowercase"]},{"Key":"lowercase letters.","Fragments":["I"]},{"Key":"letters. I","Fragments":["think"]},{"Key":"could reduce","Fragments":["the"]},{"Key":"of allUpper","Fragments":["by"]},{"Key":"allUpper by","Fragments":["just"]},{"Key":"just examining","Fragments":["the"]},{"Key":"examining the","Fragments":["string."]},{"Key":"the str.find_last_not_of.","Fragments":["I"]},{"Key":"str.find_last_not_of. I","Fragments":["should"]},{"Key":"used that","Fragments":["in"]},{"Key":" Once","Fragments":["I","I"]},{"Key":"Once I","Fragments":["got","recognized"]},{"Key":"the framework","Fragments":["right,"]},{"Key":"framework right,","Fragments":["was"]},{"Key":"right, was","Fragments":["pretty"]},{"Key":"straightforward getting","Fragments":["everything"]},{"Key":"getting everything","Fragments":["else"]},{"Key":"think anyone","Fragments":["could"]},{"Key":"anyone could","Fragments":["manipulate"]},{"Key":"could manipulate","Fragments":["the","the"]},{"Key":"manipulate the","Fragments":["internal","data."]},{"Key":"the internal","Fragments":["database."]},{"Key":"internal database.","Fragments":["If"]},{"Key":"database. If","Fragments":["anyones"]},{"Key":"If anyones","Fragments":["sees"]},{"Key":"anyones sees","Fragments":["an"]},{"Key":"sees an","Fragments":["oppourtunity"]},{"Key":"an oppourtunity","Fragments":["to"]},{"Key":"oppourtunity to","Fragments":["do"]},{"Key":"that, let","Fragments":["me"]},{"Key":"char *chars","Fragments":["="]},{"Key":"*chars =","Fragments":["statement.c_str();"]},{"Key":"= statement.c_str();","Fragments":["Why"]},{"Key":"statement.c_str(); Why","Fragments":["not"]},{"Key":"std::string \u0026","Fragments":["?","str.","statement."]},{"Key":"\u0026 ?","Fragments":["This"]},{"Key":"? This","Fragments":["is"]},{"Key":"pointless conversion.","Fragments":["Just"]},{"Key":"conversion. Just","Fragments":["change"]},{"Key":"Just change","Fragments":["your"]},{"Key":"your method","Fragments":["parameters"]},{"Key":"method parameters","Fragments":["to"]},{"Key":"const std::string","Fragments":["\u0026"]},{"Key":" isYelling","Fragments":["is"]},{"Key":"isYelling is","Fragments":["correct"]},{"Key":"is correct","Fragments":["but"]},{"Key":"correct but","Fragments":["I"]},{"Key":"would re-implement","Fragments":["this."]},{"Key":"re-implement this.","Fragments":["All"]},{"Key":"this. All","Fragments":["you"]},{"Key":"each char","Fragments":["\"isalpha(c)"]},{"Key":"char \"isalpha(c)","Fragments":["islower(c)\"."]},{"Key":"\"isalpha(c) islower(c)\".","Fragments":["See"]},{"Key":"islower(c)\". See","Fragments":["std::string::iterator"]},{"Key":" isQuestion","Fragments":["has"]},{"Key":"isQuestion has","Fragments":["an"]},{"Key":"error condition.","Fragments":["Imagine"]},{"Key":"condition. Imagine","Fragments":["you"]},{"Key":"string \"?4\"","Fragments":["then"]},{"Key":"\"?4\" then","Fragments":["your"]},{"Key":"then your","Fragments":["isQuestion"]},{"Key":"isQuestion will","Fragments":["return"]},{"Key":"true but","Fragments":["it"]},{"Key":" isNothing's","Fragments":["parameter"]},{"Key":"isNothing's parameter","Fragments":["is"]},{"Key":"is copying","Fragments":["the"]},{"Key":"it in.","Fragments":["This"]},{"Key":"in. This","Fragments":["is"]},{"Key":"bad. You","Fragments":["should"]},{"Key":"use std::string","Fragments":["\u0026"]},{"Key":"\u0026 statement.","Fragments":["the"]},{"Key":"statement. the","Fragments":["\u0026"]},{"Key":"\u0026 says","Fragments":["\"this"]},{"Key":"says \"this","Fragments":["is"]},{"Key":"Another note","Fragments":["about"]},{"Key":"note about","Fragments":["isNothing."]},{"Key":"about isNothing.","Fragments":["There"]},{"Key":"isNothing. There","Fragments":["is"]},{"Key":"function. All","Fragments":["you"]},{"Key":"for equality;","Fragments":["you"]},{"Key":"equality; you","Fragments":["should"]},{"Key":"if condition.","Fragments":["This"]},{"Key":"condition. This","Fragments":["would"]},{"Key":"string copy","Fragments":["and"]},{"Key":"the overheard","Fragments":["of"]},{"Key":"overheard of","Fragments":["allocating"]},{"Key":"of allocating","Fragments":["stack"]},{"Key":"allocating stack","Fragments":["frames"]},{"Key":"stack frames","Fragments":["etc"]},{"Key":"frames etc","Fragments":["for"]},{"Key":"etc for","Fragments":["a"]},{"Key":" \u003ch1\u003eIteration","Fragments":["3\u003c/h1\u003e"]},{"Key":"\u003ch1\u003eIteration 3\u003c/h1\u003e","Fragments":["\u003ci\u003e(Somewhat"]},{"Key":"3\u003c/h1\u003e \u003ci\u003e(Somewhat","Fragments":["works)\u003c/i\u003e"]},{"Key":"more refined","Fragments":["piece"]},{"Key":"refined piece","Fragments":["of"]},{"Key":"has also","Fragments":["been"]},{"Key":"also been","Fragments":["included."]},{"Key":"Some functions","Fragments":["have"]},{"Key":"been tried","Fragments":["in"]},{"Key":"tried in","Fragments":["new"]},{"Key":"in new","Fragments":["ways,"]},{"Key":"new ways,","Fragments":["by"]},{"Key":"ways, by","Fragments":["using"]},{"Key":"some standard","Fragments":["functions"]},{"Key":"standard functions","Fragments":["found"]},{"Key":"functions found","Fragments":["in"]},{"Key":"have considered","Fragments":["some","when"]},{"Key":"considered some","Fragments":["of"]},{"Key":"the points","Fragments":["made"]},{"Key":"points made","Fragments":["earlier"]},{"Key":"made earlier","Fragments":["and"]},{"Key":"earlier and","Fragments":["have"]},{"Key":"improve it.","Fragments":["Please"]},{"Key":"it. Please","Fragments":["provide"]},{"Key":"Please provide","Fragments":["any"]},{"Key":"provide any","Fragments":["suggestions."]},{"Key":" Points","Fragments":["taken."]},{"Key":"Points taken.","Fragments":["Actually"]},{"Key":"taken. Actually","Fragments":["I"]},{"Key":"Actually I","Fragments":["hadn't"]},{"Key":"I hadn't","Fragments":["actually"]},{"Key":"hadn't actually","Fragments":["understood"]},{"Key":"actually understood","Fragments":["the"]},{"Key":"understood the","Fragments":["build"]},{"Key":"build process.","Fragments":["I"]},{"Key":"process. I","Fragments":["actually"]},{"Key":"actually made","Fragments":["a"]},{"Key":"new program","Fragments":["that"]},{"Key":"program that","Fragments":["passes"]},{"Key":"that passes","Fragments":["around"]},{"Key":"passes around","Fragments":["8"]},{"Key":"around 8","Fragments":["of"]},{"Key":"8 of","Fragments":["the"]},{"Key":"cases. I'll","Fragments":["upload"]},{"Key":"it soon.","Fragments":["The"]},{"Key":"soon. The","Fragments":["isUpper"]},{"Key":"The isUpper","Fragments":["and"]},{"Key":"isUpper and","Fragments":["isEmpty"]},{"Key":"and isEmpty","Fragments":["are"]},{"Key":"isEmpty are","Fragments":["that"]},{"Key":"are that","Fragments":["way"]},{"Key":"way because","Fragments":["I'm"]},{"Key":"because I'm","Fragments":["trying"]},{"Key":"case characters","Fragments":["in","constituted"]},{"Key":"in isUpper(I","Fragments":["want"]},{"Key":"isUpper(I want","Fragments":["all"]},{"Key":"want all","Fragments":["characters"]},{"Key":"be uppercase)","Fragments":["and"]},{"Key":"uppercase) and","Fragments":["I'm"]},{"Key":"any character","Fragments":["that"]},{"Key":" nice","Fragments":["iterator-based"]},{"Key":"nice iterator-based","Fragments":["solution"]},{"Key":"iterator-based solution","Fragments":[":)"]},{"Key":"the size-diff","Fragments":["was"]},{"Key":"size-diff was","Fragments":["supposed"]},{"Key":"oh good","Fragments":["catch"]},{"Key":"good catch","Fragments":["with"]},{"Key":"catch with","Fragments":["the"]},{"Key":"the size_t,","Fragments":["i"]},{"Key":"size_t, i","Fragments":["always"]},{"Key":"i always","Fragments":["forget"]},{"Key":"always forget","Fragments":["that."]},{"Key":"forget that.","Fragments":["what's"]},{"Key":"that. what's","Fragments":["up"]},{"Key":"what's up","Fragments":["with"]},{"Key":"the {}","Fragments":["for"]},{"Key":"{} for","Fragments":["the"]},{"Key":"the arg","Fragments":["to"]},{"Key":"arg to","Fragments":["the"]},{"Key":"the exception","Fragments":["constructor","code"]},{"Key":"exception constructor","Fragments":["though?"]},{"Key":"constructor though?","Fragments":["i'm"]},{"Key":"though? i'm","Fragments":["not"]},{"Key":"i'm not","Fragments":["familiar"]},{"Key":"that syntax,","Fragments":["is"]},{"Key":"syntax, is","Fragments":["there"]},{"Key":"no gain","Fragments":["in"]},{"Key":"using reference","Fragments":["to"]},{"Key":"to basic","Fragments":["types."]},{"Key":"basic types.","Fragments":["Furthermore,"]},{"Key":"types. Furthermore,","Fragments":["why"]},{"Key":"Furthermore, why","Fragments":["not"]},{"Key":"use long","Fragments":["instead"]},{"Key":"long instead","Fragments":["of"]},{"Key":"of double","Fragments":["for"]},{"Key":"double for","Fragments":["integer"]},{"Key":"for integer","Fragments":["seconds?"]},{"Key":"What's with","Fragments":["the"]},{"Key":"the triple","Fragments":["i's?"]},{"Key":"enough balance","Fragments":["between"]},{"Key":"between storing","Fragments":["the"]},{"Key":"verses as","Fragments":["strings"]},{"Key":"as strings","Fragments":["and"]},{"Key":"not worrying","Fragments":["about"]},{"Key":"about (using","Fragments":["ternary"]},{"Key":"(using ternary","Fragments":["operators"]},{"Key":"ternary operators","Fragments":["etc.)"]},{"Key":"operators etc.)","Fragments":["trying"]},{"Key":"etc.) trying","Fragments":["to"]},{"Key":"to adapt","Fragments":["for"]},{"Key":"adapt for","Fragments":["each"]},{"Key":"each individual","Fragments":["case"]},{"Key":"individual case","Fragments":["of"]},{"Key":"of 1,2","Fragments":["and"]},{"Key":"1,2 and","Fragments":["0"]},{"Key":"0 as","Fragments":["well"]},{"Key":"admit that","Fragments":["the"]},{"Key":"the newline","Fragments":["in"]},{"Key":"newline in","Fragments":["sing()"]},{"Key":"in sing()","Fragments":["is"]},{"Key":"sing() is","Fragments":["a"]},{"Key":"bit fudged","Fragments":["though."]},{"Key":" N.B.:","Fragments":["sing"]},{"Key":"N.B.: sing","Fragments":["is"]},{"Key":"sing is","Fragments":["defined"]},{"Key":" sing(int","Fragments":["start,"]},{"Key":"sing(int start,","Fragments":["int"]},{"Key":"start, int","Fragments":["end=0)"]},{"Key":"Complete apart","Fragments":["from"]},{"Key":"apart from","Fragments":["the"]},{"Key":"last test:","Fragments":["how"]},{"Key":"test: how","Fragments":["is"]},{"Key":"how is","Fragments":["it"]},{"Key":"custom class","Fragments":["to"]},{"Key":"the ```std::string```","Fragments":["constructor?"]},{"Key":" String","Fragments":["operator"]},{"Key":"String operator","Fragments":["is"]},{"Key":"now in","Fragments":["place."]},{"Key":"in place.","Fragments":["Something"]},{"Key":"place. Something","Fragments":["I've"]},{"Key":"Something I've","Fragments":["learned"]},{"Key":"I've learned","Fragments":["today!"]},{"Key":"quite readable.","Fragments":["I"]},{"Key":"readable. I","Fragments":["tend"]},{"Key":"prefer ```using","Fragments":["std::string```"]},{"Key":"```using std::string```","Fragments":["to","would","directive"]},{"Key":"std::string``` to","Fragments":["a"]},{"Key":"general ```using","Fragments":["namespace"]},{"Key":"```using namespace","Fragments":["std```,","std;```"]},{"Key":"namespace std```,","Fragments":["and"]},{"Key":"std```, and","Fragments":["you've"]},{"Key":"and you've","Fragments":["still","managed"]},{"Key":"you've still","Fragments":["got"]},{"Key":"of unnecessary","Fragments":["```std::```s","typing"]},{"Key":"unnecessary ```std::```s","Fragments":["towards"]},{"Key":"```std::```s towards","Fragments":["the"]},{"Key":"towards the","Fragments":["bottom."]},{"Key":"- A","Fragments":["```using"]},{"Key":"A ```using","Fragments":["std::string```"]},{"Key":"std::string``` would","Fragments":["make"]},{"Key":"code slightly","Fragments":["more"]},{"Key":"- ...","Fragments":["as"]},{"Key":"... as","Fragments":["would"]},{"Key":"would more","Fragments":["descriptive"]},{"Key":"names than","Fragments":["simply"]},{"Key":"than simply","Fragments":["```s```","```private```?"]},{"Key":"Code is","Fragments":["good"]},{"Key":"you've managed","Fragments":["to"]},{"Key":"store all","Fragments":["the"]},{"Key":"strings succinctly,","Fragments":["without"]},{"Key":"succinctly, without","Fragments":["taking"]},{"Key":"without taking","Fragments":["up"]},{"Key":"taking up","Fragments":["too"]},{"Key":"up too","Fragments":["much"]},{"Key":"much visual","Fragments":["space"]},{"Key":"visual space","Fragments":["when"]},{"Key":"space when","Fragments":["you"]},{"Key":"Looks good:","Fragments":["consider"]},{"Key":"good: consider","Fragments":["a"]},{"Key":"a ```using","Fragments":["std::string```","namespace"]},{"Key":"std::string``` directive","Fragments":["to"]},{"Key":"directive to","Fragments":["remove"]},{"Key":"remove a","Fragments":["bit"]},{"Key":"unnecessary typing","Fragments":["and"]},{"Key":"typing and","Fragments":["make"]},{"Key":"look that","Fragments":["bit"]},{"Key":"that bit","Fragments":["cleaner."]},{"Key":"Also why","Fragments":["did"]},{"Key":"you choose","Fragments":["to","to"]},{"Key":"use ```protected```","Fragments":["rather"]},{"Key":"```protected``` rather","Fragments":["than"]},{"Key":"the ```clean_number()```","Fragments":["function"]},{"Key":"```clean_number()``` function","Fragments":["needs"]},{"Key":"function needs","Fragments":["to"]},{"Key":"be commented","Fragments":["to"]},{"Key":"commented to","Fragments":["make"]},{"Key":"function rather","Fragments":["than","than"]},{"Key":"for loop?","Fragments":["(not"]},{"Key":"loop? (not","Fragments":["a"]},{"Key":"(not a","Fragments":["criticism,"]},{"Key":"a criticism,","Fragments":["I"]},{"Key":"criticism, I","Fragments":["find"]},{"Key":"helps me","Fragments":["to"]},{"Key":"the choices","Fragments":["that"]},{"Key":"that lead","Fragments":["to"]},{"Key":"assume you've","Fragments":["used"]},{"Key":"namespace std;```","Fragments":["in"]},{"Key":"std;``` in","Fragments":["the"]},{"Key":"the header:","Fragments":["try"]},{"Key":"header: try","Fragments":["and"]},{"Key":"avoid doing","Fragments":["this,"]},{"Key":"this, as","Fragments":["it"]},{"Key":"it then","Fragments":["includes"]},{"Key":"then includes","Fragments":["the"]},{"Key":"includes the","Fragments":["using"]},{"Key":"using statement","Fragments":["wherever"]},{"Key":"statement wherever","Fragments":["you"]},{"Key":"wherever you","Fragments":["include"]},{"Key":"you include","Fragments":["the"]},{"Key":"header, which","Fragments":["can"]},{"Key":"have unwanted","Fragments":["effects"]},{"Key":"unwanted effects","Fragments":["in"]},{"Key":"effects in","Fragments":["a"]},{"Key":"libraries though,","Fragments":["nice"]},{"Key":"though, nice","Fragments":["and"]},{"Key":"and compact","Fragments":["code."]},{"Key":" Passing","Fragments":["strings"]},{"Key":"Passing strings","Fragments":["as"]},{"Key":"as reference","Fragments":["caused"]},{"Key":"reference caused","Fragments":["the"]},{"Key":"caused the","Fragments":["test"]},{"Key":"test framework","Fragments":["to"]},{"Key":"as ```char*```","Fragments":["strings,"]},{"Key":"```char*``` strings,","Fragments":["causing"]},{"Key":"strings, causing","Fragments":["numerous"]},{"Key":"causing numerous","Fragments":["errors."]},{"Key":"could replace","Fragments":["the"]},{"Key":"for in","Fragments":["C++11:"]},{"Key":" ```for","Fragments":["(auto"]},{"Key":"```for (auto","Fragments":["\u0026i"]},{"Key":"(auto \u0026i","Fragments":[":"]},{"Key":"\u0026i :","Fragments":["line)"]},{"Key":": line)","Fragments":["{"]},{"Key":"// Do","Fragments":["something..."]},{"Key":"Note you","Fragments":["can"]},{"Key":"can directly","Fragments":["use"]},{"Key":"directly use","Fragments":["the"]},{"Key":"name ```i```,","Fragments":["and"]},{"Key":"```i```, and","Fragments":["declaring"]},{"Key":"declaring it","Fragments":["as"]},{"Key":"body makes","Fragments":["the"]},{"Key":"process more","Fragments":["efficient."]},{"Key":"minor readability","Fragments":["enhancement."]},{"Key":" Bit","Fragments":["of"]},{"Key":"Bit of","Fragments":["a"]},{"Key":"return forest","Fragments":["but"]},{"Key":"forest but","Fragments":["it"]},{"Key":"works alright","Fragments":[":)"]},{"Key":"your ```add()```","Fragments":["function"]},{"Key":"```add()``` function","Fragments":["you"]},{"Key":"you resort","Fragments":["every"]},{"Key":"resort every","Fragments":["grade."]},{"Key":"every grade.","Fragments":["I"]},{"Key":"grade. I","Fragments":["think"]},{"Key":"should only","Fragments":["have"]},{"Key":"to resort","Fragments":["when"]},{"Key":"resort when","Fragments":["you"]},{"Key":"you add","Fragments":["additional"]},{"Key":"add additional","Fragments":["names"]},{"Key":"additional names","Fragments":["to"]},{"Key":"names to","Fragments":["an"]},{"Key":"an existing","Fragments":["grade."]},{"Key":"existing grade.","Fragments":["Ie"]},{"Key":"grade. Ie","Fragments":["you"]},{"Key":"Ie you","Fragments":["can"]},{"Key":"sorting up","Fragments":["into"]},{"Key":"into your","Fragments":["else"]},{"Key":"your else","Fragments":["statement."]},{"Key":"You're right","Fragments":["that"]},{"Key":"0 by","Fragments":["default,","default."]},{"Key":"it were","Fragments":["up"]},{"Key":"were up","Fragments":["to"]},{"Key":"would put","Fragments":["an"]},{"Key":"put an","Fragments":["assert"]},{"Key":"an assert","Fragments":["for"]},{"Key":"assert for","Fragments":["equal"]},{"Key":"for equal","Fragments":["lengths"]},{"Key":"equal lengths","Fragments":["in"]},{"Key":"lengths in","Fragments":["there"]},{"Key":"there since","Fragments":["the"]},{"Key":"function shouldn't","Fragments":["have"]},{"Key":"shouldn't have","Fragments":["to"]},{"Key":"inputs outside","Fragments":["of"]},{"Key":"and tried","Fragments":["to"]},{"Key":"avoid side","Fragments":["effects"]},{"Key":"side effects","Fragments":["throughout"]},{"Key":"effects throughout","Fragments":["the"]},{"Key":"throughout the","Fragments":["code."]},{"Key":"used `if`","Fragments":["statements"]},{"Key":"`if` statements","Fragments":["instead"]},{"Key":"statements instead","Fragments":["of"]},{"Key":"of `switch`","Fragments":["because"]},{"Key":"`switch` because","Fragments":["I"]},{"Key":"that's looking","Fragments":["cleaner."]},{"Key":"looking cleaner.","Fragments":["Some"]},{"Key":"cleaner. Some","Fragments":["more"]},{"Key":"Some more","Fragments":["little"]},{"Key":"more little","Fragments":["nits"]},{"Key":"little nits","Fragments":["though"]},{"Key":"nits though","Fragments":["..."]},{"Key":" `all_of`returns","Fragments":["`true`"]},{"Key":"`all_of`returns `true`","Fragments":["for"]},{"Key":"`true` for","Fragments":["empty"]},{"Key":"empty containers","Fragments":["(no"]},{"Key":"containers (no","Fragments":["need"]},{"Key":"for length","Fragments":["test)."]},{"Key":"code fails","Fragments":["if"]},{"Key":"fails if","Fragments":["there's"]},{"Key":"there's whitespace","Fragments":["after"]},{"Key":" Might","Fragments":["the"]},{"Key":"Might the","Fragments":["shouting"]},{"Key":"shouting test","Fragments":["be"]},{"Key":"test be","Fragments":["simplified?"]},{"Key":"be simplified?","Fragments":["I"]},{"Key":"simplified? I","Fragments":["found"]},{"Key":"one upper","Fragments":["case"]},{"Key":"characters constituted","Fragments":["a"]},{"Key":"constituted a","Fragments":["shout."]},{"Key":"seen people","Fragments":["argue"]},{"Key":"people argue","Fragments":["otherwise,"]},{"Key":"argue otherwise,","Fragments":["but"]},{"Key":"otherwise, but","Fragments":["I"]},{"Key":"if (","Fragments":["test1","test2"]},{"Key":"( test1","Fragments":[")"]},{"Key":"test1 )","Fragments":["{"]},{"Key":"( test2","Fragments":[")"]},{"Key":"test2 )","Fragments":["{"]},{"Key":"is plainer","Fragments":["and"]},{"Key":"plainer and","Fragments":["easier"]},{"Key":"understand than","Fragments":["nested"]},{"Key":"than nested","Fragments":["`else"]},{"Key":"nested `else","Fragments":["if`."]},{"Key":" Keeps","Fragments":["namespace"]},{"Key":"Keeps namespace","Fragments":["clear"]},{"Key":"namespace clear","Fragments":["of"]},{"Key":"clear of","Fragments":["more"]},{"Key":"more common","Fragments":["names."]},{"Key":"common names.","Fragments":["Trick"]},{"Key":"names. Trick","Fragments":["recommended"]},{"Key":"Trick recommended","Fragments":["by"]},{"Key":"recommended by","Fragments":["\u003ca"]},{"Key":"by \u003ca","Fragments":["href=http://www.learncpp.com/\u003elearncpp\u003c/a\u003e."]},{"Key":"your `verse`","Fragments":["function,"]},{"Key":"`verse` function,","Fragments":["the"]},{"Key":"function, the","Fragments":["conditionals"]},{"Key":"conditionals in","Fragments":["the"]},{"Key":"string make","Fragments":["the"]},{"Key":"text that","Fragments":["is"]},{"Key":"being printed","Fragments":["very"]},{"Key":"printed very","Fragments":["fuzzy."]},{"Key":"very fuzzy.","Fragments":["Perhaps"]},{"Key":"fuzzy. Perhaps","Fragments":["consider"]},{"Key":"Perhaps consider","Fragments":["separating"]},{"Key":"consider separating","Fragments":["formatting"]},{"Key":"separating formatting","Fragments":["from"]},{"Key":"formatting from","Fragments":["logic."]},{"Key":"of questions","Fragments":["at"]},{"Key":"questions at","Fragments":["the"]},{"Key":"the onset.","Fragments":["I"]},{"Key":"onset. I","Fragments":["didn't"]},{"Key":"test routine","Fragments":["file"]},{"Key":"routine file","Fragments":["should"]},{"Key":"file should","Fragments":["create"]},{"Key":"should create","Fragments":["a"]},{"Key":"class instance,","Fragments":["so"]},{"Key":"instance, so","Fragments":["I"]},{"Key":"of optional","Fragments":["control"]},{"Key":"optional control","Fragments":["flow"]},{"Key":"flow branches,","Fragments":["so"]},{"Key":"branches, so","Fragments":["I"]},{"Key":"a 'getType'","Fragments":["function."]},{"Key":"'getType' function.","Fragments":["I"]},{"Key":"really improved","Fragments":["clarity"]},{"Key":"improved clarity","Fragments":["and"]},{"Key":"clarity and","Fragments":["just"]},{"Key":"just added","Fragments":["an"]},{"Key":"added an","Fragments":["extra"]},{"Key":"extra layer","Fragments":["of"]},{"Key":"layer of","Fragments":["complexity"]},{"Key":"of complexity","Fragments":["(and"]},{"Key":"complexity (and","Fragments":["redundancy)."]},{"Key":"suppose the","Fragments":["word"]},{"Key":"word rule","Fragments":["with"]},{"Key":"rule with","Fragments":["symbols"]},{"Key":"with symbols","Fragments":["combined"]},{"Key":"symbols combined","Fragments":["with"]},{"Key":"with alphas","Fragments":["was"]},{"Key":"alphas was","Fragments":["sort"]},{"Key":"of ambiguous,","Fragments":["wrt"]},{"Key":"ambiguous, wrt","Fragments":["how"]},{"Key":"wrt how","Fragments":["that"]},{"Key":"might apply","Fragments":["to"]},{"Key":"apply to","Fragments":["other"]},{"Key":"other instances","Fragments":["(symbols"]},{"Key":"instances (symbols","Fragments":["at"]},{"Key":"(symbols at","Fragments":["beginning,"]},{"Key":"at beginning,","Fragments":["in"]},{"Key":"beginning, in","Fragments":["middle,"]},{"Key":"in middle,","Fragments":["etc)."]},{"Key":"middle, etc).","Fragments":["Though"]},{"Key":"etc). Though","Fragments":["the"]},{"Key":"Though the","Fragments":["rules"]},{"Key":"rules say","Fragments":["you"]},{"Key":"say you","Fragments":["should"]},{"Key":"should go","Fragments":["beyond"]},{"Key":"go beyond","Fragments":["the"]},{"Key":"beyond the","Fragments":["tests"]},{"Key":"and interpret","Fragments":["the"]},{"Key":"interpret the","Fragments":["rules,"]},{"Key":"the rules,","Fragments":["there's"]},{"Key":"rules, there's","Fragments":["no"]},{"Key":"no (english)","Fragments":["rule"]},{"Key":"(english) rule","Fragments":["about"]},{"Key":"rule about","Fragments":["this."]},{"Key":"be accurate","Fragments":["with"]},{"Key":"accurate with","Fragments":["the"]},{"Key":"the enclosing","Fragments":["apostrophes"]},{"Key":"enclosing apostrophes","Fragments":["test/rule"]},{"Key":"apostrophes test/rule","Fragments":["would"]},{"Key":"test/rule would","Fragments":["be"]},{"Key":"to parse.","Fragments":["What"]},{"Key":"parse. What","Fragments":["about"]},{"Key":"a non-plural","Fragments":["possessive"]},{"Key":"non-plural possessive","Fragments":["ending"]},{"Key":"possessive ending","Fragments":["in"]},{"Key":"in 's'?","Fragments":["(such"]},{"Key":"'s'? (such","Fragments":["as"]},{"Key":"(such as","Fragments":["'Jesus'"]},{"Key":"as 'Jesus'","Fragments":["bag')?"]},{"Key":"'Jesus' bag')?","Fragments":["I"]},{"Key":"bag')? I","Fragments":["cheated"]},{"Key":"I cheated","Fragments":["and"]},{"Key":"cheated and","Fragments":["just"]},{"Key":"just removed","Fragments":["all"]},{"Key":"removed all","Fragments":["outer"]},{"Key":"all outer","Fragments":["apostrophes."]},{"Key":"Hi Chaitanya-git","Fragments":["--"]},{"Key":"Chaitanya-git --","Fragments":["you"]},{"Key":"-- you","Fragments":["just"]},{"Key":"to refine","Fragments":["how"]},{"Key":"refine how","Fragments":["your"]},{"Key":"your Bob","Fragments":["responds"]},{"Key":"Bob responds","Fragments":["to"]},{"Key":"responds to","Fragments":["yelling."]},{"Key":"to yelling.","Fragments":["Also,"]},{"Key":"yelling. Also,","Fragments":["are"]},{"Key":"Also, are","Fragments":["you"]},{"Key":"you catching","Fragments":["a"]},{"Key":"catching a","Fragments":["question"]},{"Key":"question like:","Fragments":["\"Say"]},{"Key":"like: \"Say","Fragments":["what?"]},{"Key":"\"Say what?","Fragments":["\"?"]},{"Key":"you're throwing","Fragments":["an"]},{"Key":"exception when","Fragments":["you","I"]},{"Key":"call string::back()","Fragments":["with","?"]},{"Key":"string::back() with","Fragments":["an"]},{"Key":"Now you","Fragments":["just"]},{"Key":"provide the","Fragments":["exception"]},{"Key":"exception code","Fragments":["--"]},{"Key":"code --","Fragments":["(hint:"]},{"Key":"-- (hint:","Fragments":["you"]},{"Key":"(hint: you","Fragments":["may"]},{"Key":"to \u003ci\u003ethrow\u003c/i\u003e","Fragments":["some"]},{"Key":"\u003ci\u003ethrow\u003c/i\u003e some","Fragments":["ideas"]},{"Key":"some ideas","Fragments":["around)"]},{"Key":"got hung","Fragments":["up"]},{"Key":"hung up","Fragments":["calling"]},{"Key":"up calling","Fragments":["'throw"]},{"Key":"calling 'throw","Fragments":["\u003ci\u003enew\u003c/i\u003e"]},{"Key":"'throw \u003ci\u003enew\u003c/i\u003e","Fragments":["domain_error'"]},{"Key":"\u003ci\u003enew\u003c/i\u003e domain_error'","Fragments":["rather"]},{"Key":"domain_error' rather","Fragments":["than"]},{"Key":"just 'throw","Fragments":["domain_error'"]},{"Key":"'throw domain_error'","Fragments":["."]},{"Key":"domain_error' .","Fragments":["."]},{"Key":". .","Fragments":["."]},{"Key":"only trick","Fragments":["is"]},{"Key":"that removing","Fragments":["trailing"]},{"Key":"removing trailing","Fragments":["white","whitespace"]},{"Key":"space makes","Fragments":["it"]},{"Key":"it pass","Fragments":["two"]},{"Key":"pass two","Fragments":["tests"]},{"Key":"tests if","Fragments":["you"]},{"Key":"it right.","Fragments":["\"Prolonged"]},{"Key":"right. \"Prolonged","Fragments":["silence\""]},{"Key":"\"Prolonged silence\"","Fragments":["(a"]},{"Key":"silence\" (a","Fragments":["bunch"]},{"Key":"(a bunch","Fragments":["of"]},{"Key":"of spaces)","Fragments":["is"]},{"Key":"spaces) is","Fragments":["turned"]},{"Key":"is turned","Fragments":["into"]},{"Key":"turned into","Fragments":["\"silence\""]},{"Key":"into \"silence\"","Fragments":["(an"]},{"Key":"\"silence\" (an","Fragments":["empty"]},{"Key":"(an empty","Fragments":["string)."]},{"Key":"empty string).","Fragments":["Everything"]},{"Key":"string). Everything","Fragments":["is"]},{"Key":"is implemented","Fragments":["in"]},{"Key":"implemented in","Fragments":["the"]},{"Key":"I typically","Fragments":["don't"]},{"Key":"typically don't","Fragments":["use"]},{"Key":"use using","Fragments":["just"]},{"Key":"I explicity","Fragments":["bring"]},{"Key":"explicity bring","Fragments":["in"]},{"Key":"bring in","Fragments":["what"]},{"Key":"in what","Fragments":["I"]},{"Key":"I constantly","Fragments":["get"]},{"Key":"constantly get","Fragments":["hit"]},{"Key":"get hit","Fragments":["by"]},{"Key":"hit by","Fragments":["compile"]},{"Key":"by compile","Fragments":["errors"]},{"Key":"compile errors","Fragments":["though,"]},{"Key":"errors though,","Fragments":["so"]},{"Key":"so you're","Fragments":["right,"]},{"Key":"you're right,","Fragments":["I'm"]},{"Key":"right, I'm","Fragments":["probably"]},{"Key":"I'm probably","Fragments":["just"]},{"Key":"probably just","Fragments":["creating"]},{"Key":"just creating","Fragments":["extra"]},{"Key":"creating extra","Fragments":["typing"]},{"Key":"extra typing","Fragments":["for"]},{"Key":"typing for","Fragments":["myself."]},{"Key":"used protected","Fragments":["so"]},{"Key":"protected so","Fragments":["inherited"]},{"Key":"so inherited","Fragments":["classes"]},{"Key":"inherited classes","Fragments":["could"]},{"Key":"classes could","Fragments":["manipulate"]},{"Key":"the data.","Fragments":["Again,"]},{"Key":"data. Again,","Fragments":["it's"]},{"Key":"did without","Fragments":["thinking"]},{"Key":"without thinking","Fragments":["about"]},{"Key":"about why","Fragments":["I"]},{"Key":"did it.","Fragments":["If","I"]},{"Key":"I were","Fragments":["to"]},{"Key":"step back,","Fragments":["I'm"]},{"Key":"back, I'm","Fragments":["not"]},{"Key":"what an","Fragments":["inherited"]},{"Key":"an inherited","Fragments":["class"]},{"Key":"inherited class","Fragments":["would"]},{"Key":"would even","Fragments":["do,"]},{"Key":"even do,","Fragments":["and"]},{"Key":"do, and","Fragments":["if"]},{"Key":"someone did","Fragments":["inherit,"]},{"Key":"did inherit,","Fragments":["the"]},{"Key":"inherit, the","Fragments":["member"]},{"Key":"variables should","Fragments":["be"]},{"Key":"be private","Fragments":["and"]},{"Key":"and phone","Fragments":["numbers"]},{"Key":"phone numbers","Fragments":["should"]},{"Key":"numbers should","Fragments":["be"]},{"Key":"be accessed","Fragments":["through"]},{"Key":"accessed through","Fragments":["function"]},{"Key":"through function","Fragments":["calls."]},{"Key":" Hmmm.","Fragments":["Thanks"]},{"Key":"Hmmm. Thanks","Fragments":["for"]},{"Key":"the nits.","Fragments":["You've"]},{"Key":"nits. You've","Fragments":["given"]},{"Key":"You've given","Fragments":["me"]},{"Key":"given me","Fragments":["things"]},{"Key":"me things","Fragments":["to"]},{"Key":"really sufficient","Fragments":["for"]},{"Key":"sufficient for","Fragments":["this"]},{"Key":"task. I","Fragments":["was"]},{"Key":"get code","Fragments":["working"]},{"Key":"code working","Fragments":["very"]},{"Key":"working very","Fragments":["quickly,"]},{"Key":"very quickly,","Fragments":["but"]},{"Key":"quickly, but","Fragments":["becuase"]},{"Key":"but becuase","Fragments":["of"]},{"Key":"becuase of","Fragments":["the"]},{"Key":"random nature","Fragments":["of"]},{"Key":"nature of","Fragments":["creating"]},{"Key":"names it","Fragments":["was"]},{"Key":"was easy","Fragments":["to"]},{"Key":"do bad","Fragments":["things"]},{"Key":"bad things","Fragments":["and","are"]},{"Key":"have tests","Fragments":["pass."]},{"Key":"The static","Fragments":["is"]},{"Key":"probably going","Fragments":["to"]},{"Key":"to kill","Fragments":["thread"]},{"Key":"kill thread","Fragments":["safety."]},{"Key":"thread safety.","Fragments":["I"]},{"Key":"safety. I","Fragments":["should"]},{"Key":"probably put","Fragments":["a"]},{"Key":"a block","Fragments":["in"]},{"Key":"block in","Fragments":["there"]},{"Key":"there or","Fragments":["something."]},{"Key":"also not","Fragments":["very"]},{"Key":"very efficient","Fragments":["as"]},{"Key":"it grows.","Fragments":["I"]},{"Key":"grows. I","Fragments":["can"]},{"Key":"can easily","Fragments":["run"]},{"Key":"easily run","Fragments":["this"]},{"Key":"no colisions","Fragments":["if"]},{"Key":"colisions if","Fragments":["we're"]},{"Key":"if we're","Fragments":["only","going"]},{"Key":"only generating","Fragments":["1000"]},{"Key":"generating 1000","Fragments":["names,"]},{"Key":"1000 names,","Fragments":["but"]},{"Key":"names, but","Fragments":["that"]},{"Key":"that quickly","Fragments":["goes"]},{"Key":"quickly goes","Fragments":["up"]},{"Key":"goes up","Fragments":["and"]},{"Key":"I spend","Fragments":["a"]},{"Key":"spend a","Fragments":["lot"]},{"Key":"time randomly","Fragments":["guessing"]},{"Key":"randomly guessing","Fragments":["what"]},{"Key":"guessing what","Fragments":["hasn't"]},{"Key":"what hasn't","Fragments":["been"]},{"Key":"hasn't been","Fragments":["used."]},{"Key":"been used.","Fragments":["If"]},{"Key":"a lot,","Fragments":["I"]},{"Key":"lot, I","Fragments":["would"]},{"Key":"probably generate","Fragments":["all"]},{"Key":"generate all","Fragments":["the"]},{"Key":"names up","Fragments":["front,"]},{"Key":"up front,","Fragments":["and"]},{"Key":"front, and","Fragments":["randomly"]},{"Key":"and randomly","Fragments":["pull"]},{"Key":"randomly pull","Fragments":["them"]},{"Key":"pull them","Fragments":["off"]},{"Key":"them off","Fragments":["the"]},{"Key":"list until","Fragments":["I"]},{"Key":"had exaugsted","Fragments":["the"]},{"Key":"exaugsted the","Fragments":["list."]},{"Key":"list. Of","Fragments":["course,"]},{"Key":"course, if","Fragments":["I"]},{"Key":"getting close","Fragments":["to"]},{"Key":"to hitting","Fragments":["the"]},{"Key":"hitting the","Fragments":["max"]},{"Key":"the max","Fragments":["number"]},{"Key":"max number","Fragments":["of"]},{"Key":"of names,","Fragments":["the"]},{"Key":"names, the","Fragments":["naming"]},{"Key":"the naming","Fragments":["format"]},{"Key":"naming format","Fragments":["would"]},{"Key":"format would","Fragments":["have"]},{"Key":"Added two","Fragments":["tests"]},{"Key":"tests I","Fragments":["used"]},{"Key":"already taken.","Fragments":["This"]},{"Key":"taken. This","Fragments":["is"]},{"Key":"much faster","Fragments":["than"]},{"Key":"checking to","Fragments":["see"]},{"Key":"it contains","Fragments":["the"]},{"Key":"name (which","Fragments":["is"]},{"Key":"I did).","Fragments":["Guess"]},{"Key":"did). Guess","Fragments":["I'll"]},{"Key":"Guess I'll","Fragments":["have"]},{"Key":" how","Fragments":["did"]},{"Key":"how did","Fragments":["anyone"]},{"Key":"did anyone","Fragments":["else"]},{"Key":"anyone else","Fragments":["do"]},{"Key":"else do","Fragments":["this?"]},{"Key":"Although you're","Fragments":["right"]},{"Key":"right in","Fragments":["stating"]},{"Key":"in stating","Fragments":["that"]},{"Key":"defined only","Fragments":["for"]},{"Key":"same length,","Fragments":["the"]},{"Key":"length, the","Fragments":["tests"]},{"Key":"defined to","Fragments":["ignore"]},{"Key":"and comparing","Fragments":["the","two"]},{"Key":"strings. It","Fragments":["should"]},{"Key":"It should","Fragments":["not"]},{"Key":"at this:","Fragments":["http://www.stroustrup.com/C++11FAQ.html#uniform-init"]},{"Key":"that namespaced","Fragments":["functions,"]},{"Key":"namespaced functions,","Fragments":["in"]},{"Key":"functions, in","Fragments":["contrast"]},{"Key":"in contrast","Fragments":["to"]},{"Key":"contrast to","Fragments":["static"]},{"Key":"to static","Fragments":["methods,"]},{"Key":"static methods,","Fragments":["unless"]},{"Key":"methods, unless","Fragments":["declared"]},{"Key":"unless declared","Fragments":["\"friend\","]},{"Key":"declared \"friend\",","Fragments":["have"]},{"Key":"\"friend\", have","Fragments":["no"]},{"Key":"no access","Fragments":["to"]},{"Key":"the class'","Fragments":["internals,"]},{"Key":"class' internals,","Fragments":["which"]},{"Key":"internals, which","Fragments":["makes"]},{"Key":"makes them","Fragments":["easier"]},{"Key":"them easier","Fragments":["to"]},{"Key":"to maintain.","Fragments":["Makes"]},{"Key":"maintain. Makes","Fragments":["sense,"]},{"Key":"Makes sense,","Fragments":["thanks!"]},{"Key":" Modulus","Fragments":["operator"]},{"Key":"Modulus operator","Fragments":["is"]},{"Key":"the real","Fragments":["star"]},{"Key":"real star","Fragments":["of"]},{"Key":"star of","Fragments":["this"]},{"Key":"function. Check","Fragments":["the"]},{"Key":"Check the","Fragments":["remainder","test","test"]},{"Key":"the remainder","Fragments":["and"]},{"Key":"remainder and","Fragments":["return"]},{"Key":"return when","Fragments":["you"]},{"Key":"made that","Fragments":["look"]},{"Key":"that look","Fragments":["pretty"]},{"Key":"look pretty","Fragments":["easy"]},{"Key":" Seeing","Fragments":["there"]},{"Key":"Seeing there","Fragments":["is"]},{"Key":"no actual","Fragments":["string"]},{"Key":"actual string","Fragments":["trim()"]},{"Key":"string trim()","Fragments":["function"]},{"Key":"STL is","Fragments":["a"]},{"Key":"little surprising.","Fragments":["It"]},{"Key":"surprising. It","Fragments":["has"]},{"Key":"look of","Fragments":["neat"]},{"Key":"of neat","Fragments":["features."]},{"Key":"decided against","Fragments":["using"]},{"Key":"against using","Fragments":["modulo,"]},{"Key":"using modulo,","Fragments":["division"]},{"Key":"modulo, division","Fragments":["or"]},{"Key":"division or","Fragments":["multiplication"]},{"Key":"or multiplication","Fragments":["in"]},{"Key":"multiplication in","Fragments":["the"]},{"Key":"plus method","Fragments":["to"]},{"Key":"method to","Fragments":["make"]},{"Key":"for grains","Fragments":["because"]},{"Key":"grains because","Fragments":["you"]},{"Key":"never initialize","Fragments":["an"]},{"Key":"initialize an","Fragments":["object"]},{"Key":"tests. As","Fragments":["\u003ca"]},{"Key":"As \u003ca","Fragments":["href=\"http://stackoverflow.com/a/1435105/2691079\"\u003ethis\u003c/a\u003e"]},{"Key":"\u003ca href=\"http://stackoverflow.com/a/1435105/2691079\"\u003ethis\u003c/a\u003e","Fragments":["stackoverflow"]},{"Key":"href=\"http://stackoverflow.com/a/1435105/2691079\"\u003ethis\u003c/a\u003e stackoverflow","Fragments":["answer"]},{"Key":"stackoverflow answer","Fragments":["says:"]},{"Key":"answer says:","Fragments":["\"Classes"]},{"Key":"says: \"Classes","Fragments":["are"]},{"Key":"\"Classes are","Fragments":["to"]},{"Key":"build objects,","Fragments":["not"]},{"Key":"objects, not","Fragments":["to"]},{"Key":"replace namespaces.\"","Fragments":["So"]},{"Key":"namespaces.\" So","Fragments":["you"]},{"Key":" unsigned","Fragments":["long","long"]},{"Key":"unsigned long","Fragments":["long","long"]},{"Key":"long long","Fragments":["int","int"]},{"Key":"long int","Fragments":["square(int","total()"]},{"Key":"int square(int","Fragments":["n)"]},{"Key":" //you","Fragments":["get"]},{"Key":"//you get","Fragments":["the"]},{"Key":"While `for_each`","Fragments":["is"]},{"Key":"`for_each` is","Fragments":["a"]},{"Key":"nice algorithm","Fragments":["in"]},{"Key":"in general,","Fragments":["in"]},{"Key":"general, in","Fragments":["this"]},{"Key":"(auto\u0026 c:","Fragments":["dna)","rna)"]},{"Key":"c: dna)","Fragments":["c"]},{"Key":"dna) c","Fragments":["="]},{"Key":"thing, and","Fragments":["is"]},{"Key":"shorter to","Fragments":["write."]},{"Key":"On a","Fragments":["side"]},{"Key":"side note:","Fragments":["I"]},{"Key":"note: I","Fragments":["actually"]},{"Key":"actually think","Fragments":["this"]},{"Key":"good place","Fragments":["for"]},{"Key":"place for","Fragments":["an"]},{"Key":"an inplace-transform","Fragments":["algorithm,"]},{"Key":"inplace-transform algorithm,","Fragments":["smth"]},{"Key":"algorithm, smth","Fragments":["like:"]},{"Key":" transform(dna,","Fragments":["[](char"]},{"Key":"transform(dna, [](char","Fragments":["c)"]},{"Key":"All that","Fragments":["is"]},{"Key":"is needed","Fragments":["is"]},{"Key":"needed is","Fragments":["to"]},{"Key":"provide an","Fragments":["overload"]},{"Key":"an overload","Fragments":["(wrapper)"]},{"Key":"overload (wrapper)","Fragments":["for"]},{"Key":"(wrapper) for","Fragments":["std::transform"]},{"Key":"for std::transform","Fragments":["somewhere"]},{"Key":" template","Fragments":["\u003cclass"]},{"Key":"template \u003cclass","Fragments":["C,"]},{"Key":"\u003cclass C,","Fragments":["class"]},{"Key":"C, class","Fragments":["F\u003e"]},{"Key":"void transform(C\u0026","Fragments":["c,"]},{"Key":"transform(C\u0026 c,","Fragments":["F"]},{"Key":"c, F","Fragments":["f)"]},{"Key":"F f)","Fragments":["{"]},{"Key":" std::transform(begin(c),","Fragments":["end(c),"]},{"Key":"std::transform(begin(c), end(c),","Fragments":["begin(c),"]},{"Key":"end(c), begin(c),","Fragments":["f);"]},{"Key":" Pushing","Fragments":["back"]},{"Key":"Pushing back","Fragments":["on"]},{"Key":"back on","Fragments":["a"]},{"Key":"just doesn't","Fragments":["feel"]},{"Key":"well have","Fragments":["taken","implemented"]},{"Key":"have taken","Fragments":["the"]},{"Key":"taken the","Fragments":["char"]},{"Key":"char by","Fragments":["reference"]},{"Key":"and modified","Fragments":["it"]},{"Key":"modified it","Fragments":["inplace."]},{"Key":"// if","Fragments":["we're"]},{"Key":"we're going","Fragments":["to"]},{"Key":"modify it","Fragments":["inplace,"]},{"Key":"it inplace,","Fragments":["we"]},{"Key":"inplace, we","Fragments":["could"]},{"Key":"could take","Fragments":["it"]},{"Key":"take it","Fragments":["by"]},{"Key":" c","Fragments":["="]},{"Key":"Also, casting","Fragments":["a"]},{"Key":"casting a","Fragments":["function"]},{"Key":"pointer feels","Fragments":["much"]},{"Key":"feels much","Fragments":["more"]},{"Key":"more messy","Fragments":["than"]},{"Key":"messy than","Fragments":["just"]},{"Key":"a lambda,","Fragments":["so"]},{"Key":"lambda, so","Fragments":["I"]},{"Key":"// static_cast\u003cchar(const","Fragments":["char)\u003e(to_rna)"]},{"Key":"auto translate","Fragments":["="]},{"Key":"translate =","Fragments":["[](char"]},{"Key":"= [](char","Fragments":["c)"]},{"Key":"It's about","Fragments":["the"]},{"Key":"length too,","Fragments":["but"]},{"Key":"too, but","Fragments":["feels"]},{"Key":"i like","Fragments":["the"]},{"Key":"the neatness","Fragments":["of"]},{"Key":"neatness of","Fragments":["this"]},{"Key":"really not","Fragments":["much"]},{"Key":"to talk","Fragments":["about"]},{"Key":"talk about","Fragments":["in"]},{"Key":"about in","Fragments":["this"]},{"Key":"exercise, but","Fragments":["I"]},{"Key":"would argue","Fragments":["that"]},{"Key":"argue that","Fragments":["it's"]},{"Key":"a waste","Fragments":["of"]},{"Key":"waste of","Fragments":["time"]},{"Key":"take `dna`","Fragments":["by"]},{"Key":"`dna` by","Fragments":["const"]},{"Key":"reference if","Fragments":["in"]},{"Key":"if in","Fragments":["the"]},{"Key":"next line","Fragments":["you're"]},{"Key":"line you're","Fragments":["going"]},{"Key":"into rna.","Fragments":["Take"]},{"Key":"rna. Take","Fragments":["it"]},{"Key":"Take it","Fragments":["by"]},{"Key":"by value,","Fragments":["the"]},{"Key":"value, the","Fragments":["copy"]},{"Key":"the copy","Fragments":["(or"]},{"Key":"copy (or","Fragments":["move!,"]},{"Key":"(or move!,","Fragments":["which"]},{"Key":"move!, which","Fragments":["your"]},{"Key":"which your","Fragments":["example"]},{"Key":"example disables)","Fragments":["gets"]},{"Key":"disables) gets","Fragments":["done"]},{"Key":"gets done","Fragments":["for"]},{"Key":"done for","Fragments":["you."]},{"Key":"`const string`","Fragments":["instead"]},{"Key":"string` instead","Fragments":["of"]},{"Key":"`string`. There's","Fragments":["really"]},{"Key":"feeling that","Fragments":["in","it"]},{"Key":"an assignment","Fragments":["the"]},{"Key":"assignment the","Fragments":["type"]},{"Key":"object returned","Fragments":["by"]},{"Key":"string \u0026\u0026`","Fragments":["which"]},{"Key":"\u0026\u0026` which","Fragments":["also"]},{"Key":"which also","Fragments":["inhibits"]},{"Key":"also inhibits","Fragments":["moving."]},{"Key":"So const","Fragments":["correctness"]},{"Key":"correctness is","Fragments":["cool,"]},{"Key":"is cool,","Fragments":["but"]},{"Key":"cool, but","Fragments":["don't"]},{"Key":"but don't","Fragments":["overdo"]},{"Key":"don't overdo","Fragments":["it."]},{"Key":"Thanks. I'll","Fragments":["try"]},{"Key":"catch questions","Fragments":["of"]},{"Key":"questions of","Fragments":["the"]},{"Key":"you mentioned","Fragments":["if"]},{"Key":"mentioned if","Fragments":["the"]},{"Key":"current code","Fragments":["isn't"]},{"Key":"isn't able","Fragments":["to(I"]},{"Key":"able to(I","Fragments":["haven't"]},{"Key":"to(I haven't","Fragments":["tested"]},{"Key":"haven't tested","Fragments":["this"]},{"Key":"tested this","Fragments":["case"]},{"Key":"case yet,","Fragments":["though"]},{"Key":"yet, though","Fragments":["I"]},{"Key":"I did't","Fragments":["quite"]},{"Key":"did't quite","Fragments":["get"]},{"Key":"quite get","Fragments":["your"]},{"Key":"get your","Fragments":["last"]},{"Key":"last suggestion.","Fragments":["Could"]},{"Key":"suggestion. Could","Fragments":["you"]},{"Key":"Could you","Fragments":["please","give"]},{"Key":"you please","Fragments":["tell"]},{"Key":"please tell","Fragments":["me"]},{"Key":"tell me","Fragments":["why","you"]},{"Key":"should throw","Fragments":["an"]},{"Key":"I encounter","Fragments":["an"]},{"Key":"encounter an","Fragments":["empty"]},{"Key":"I call","Fragments":["string::back()"]},{"Key":"me an","Fragments":["example"]},{"Key":"an example","Fragments":["where"]},{"Key":"example where","Fragments":["that"]},{"Key":"Thanks again,","Fragments":["appreciate"]},{"Key":"again, appreciate","Fragments":["the"]},{"Key":"for shouting.","Fragments":["It","It"]},{"Key":"shouting. It","Fragments":["is","is"]},{"Key":"is succinct","Fragments":["and","and"]},{"Key":"and works.","Fragments":["However,"]},{"Key":"works. However,","Fragments":["I"]},{"Key":"question passed","Fragments":["all"]},{"Key":"passed all","Fragments":["tests","the","tests!","tests.","the","the"]},{"Key":"without trimming","Fragments":["the"]},{"Key":"for trailing","Fragments":["whitespace."]},{"Key":"trailing whitespace.","Fragments":["The"]},{"Key":"whitespace. The","Fragments":["question_with_trailing_whitespace"]},{"Key":"The question_with_trailing_whitespace","Fragments":["test"]},{"Key":"question_with_trailing_whitespace test","Fragments":["should"]},{"Key":"test should","Fragments":["have"]},{"Key":"have failed.","Fragments":["I'm"]},{"Key":"failed. I'm","Fragments":["also"]},{"Key":"also at","Fragments":["a"]},{"Key":"a loss","Fragments":["as"]},{"Key":"loss as","Fragments":["to"]},{"Key":"made two","Fragments":["classes"]},{"Key":"two classes","Fragments":["when"]},{"Key":"classes when","Fragments":["making"]},{"Key":"making one","Fragments":["would"]},{"Key":"clear. Also,","Fragments":["making"]},{"Key":"making booleans","Fragments":["and"]},{"Key":"booleans and","Fragments":["taking"]},{"Key":"taking time","Fragments":["to"]},{"Key":"assign to","Fragments":["each"]},{"Key":"as efficient","Fragments":["as"]},{"Key":"making functions","Fragments":["that"]},{"Key":"and calling","Fragments":["them"]},{"Key":"calling them","Fragments":["only"]},{"Key":"them only","Fragments":["if"]},{"Key":"necessary. Finally,","Fragments":["I"]},{"Key":"Finally, I","Fragments":["would"]},{"Key":"have wrapped","Fragments":["the"]},{"Key":"wrapped the","Fragments":["whole"]},{"Key":"a 'hey'","Fragments":["function"]},{"Key":"that's just","Fragments":["me."]},{"Key":"actually does","Fragments":["not"]},{"Key":"tests here,","Fragments":["as"]},{"Key":"fail the","Fragments":["apostrophes."]},{"Key":"the apostrophes.","Fragments":["See"]},{"Key":"apostrophes. See","Fragments":["errors"]},{"Key":"See errors","Fragments":["at"]},{"Key":"errors at","Fragments":["bottom."]},{"Key":"at bottom.","Fragments":["Maybe"]},{"Key":"bottom. Maybe","Fragments":["something"]},{"Key":"Maybe something","Fragments":["has"]},{"Key":"something has","Fragments":["changed"]},{"Key":"boost tokenizer","Fragments":["recently?"]},{"Key":"using OS","Fragments":["X"]},{"Key":"OS X","Fragments":["10.10.1,"]},{"Key":"X 10.10.1,","Fragments":["with"]},{"Key":"10.10.1, with","Fragments":["Xcode"]},{"Key":"with Xcode","Fragments":["6.1"]},{"Key":"Xcode 6.1","Fragments":["and"]},{"Key":"6.1 and","Fragments":["boost"]},{"Key":"Running 13","Fragments":["test"]},{"Key":"13 test","Fragments":["cases..."]},{"Key":" /Users/koenlek/exercism/cpp/word-count/word_count_test.cpp:121:","Fragments":["fatal"]},{"Key":"/Users/koenlek/exercism/cpp/word-count/word_count_test.cpp:121: fatal","Fragments":["error"]},{"Key":"in \"with_apostrophes\":","Fragments":["critical"]},{"Key":"\"with_apostrophes\": critical","Fragments":["check"]},{"Key":"critical check","Fragments":["{","{"]},{"Key":"check {","Fragments":["expected.begin(),","expected.begin(),"]},{"Key":"{ expected.begin(),","Fragments":["expected.end()","expected.end()"]},{"Key":"expected.begin(), expected.end()","Fragments":["}","}"]},{"Key":"expected.end() }","Fragments":["==","=="]},{"Key":"} ==","Fragments":["{","{"]},{"Key":"== {","Fragments":["actual.begin(),","actual.begin(),"]},{"Key":"{ actual.begin(),","Fragments":["actual.end()","actual.end()"]},{"Key":"actual.begin(), actual.end()","Fragments":["}","}"]},{"Key":"actual.end() }","Fragments":["failed.","failed."]},{"Key":" Mismatch","Fragments":["in","in","in","in","in","in","in","in"]},{"Key":"Mismatch in","Fragments":["a","a","a","a","a","a","a","a"]},{"Key":"a position","Fragments":["1:","4:","1:","2:","3:","4:","5:","6:"]},{"Key":"position 1:","Fragments":["\u003cdon't,2\u003e","\u003clet's,1\u003e"]},{"Key":"1: \u003cdon't,2\u003e","Fragments":["!="]},{"Key":"\u003cdon't,2\u003e !=","Fragments":["\u003cdon,2\u003e"]},{"Key":"position 4:","Fragments":["\u003cthen,1\u003e","\u003csaid,1\u003e"]},{"Key":"4: \u003cthen,1\u003e","Fragments":["!="]},{"Key":"\u003cthen,1\u003e !=","Fragments":["\u003ct,2\u003e"]},{"Key":" Collections","Fragments":["size","size"]},{"Key":"Collections size","Fragments":["mismatch:","mismatch:"]},{"Key":"size mismatch:","Fragments":["5","7"]},{"Key":"mismatch: 5","Fragments":["!="]},{"Key":"5 !=","Fragments":["6"]},{"Key":" /Users/koenlek/exercism/cpp/word-count/word_count_test.cpp:137:","Fragments":["fatal"]},{"Key":"/Users/koenlek/exercism/cpp/word-count/word_count_test.cpp:137: fatal","Fragments":["error"]},{"Key":"in \"with_apostrophes_as_quotes\":","Fragments":["critical"]},{"Key":"\"with_apostrophes_as_quotes\": critical","Fragments":["check"]},{"Key":"1: \u003clet's,1\u003e","Fragments":["!="]},{"Key":"\u003clet's,1\u003e !=","Fragments":["\u003cclock,1\u003e"]},{"Key":"position 2:","Fragments":["\u003cmeet,1\u003e"]},{"Key":"2: \u003cmeet,1\u003e","Fragments":["!="]},{"Key":"\u003cmeet,1\u003e !=","Fragments":["\u003clet,1\u003e"]},{"Key":"position 3:","Fragments":["\u003co'clock,1\u003e"]},{"Key":"3: \u003co'clock,1\u003e","Fragments":["!="]},{"Key":"\u003co'clock,1\u003e !=","Fragments":["\u003cmeet,1\u003e"]},{"Key":"4: \u003csaid,1\u003e","Fragments":["!="]},{"Key":"\u003csaid,1\u003e !=","Fragments":["\u003co,1\u003e"]},{"Key":"position 5:","Fragments":["\u003cshe,1\u003e"]},{"Key":"5: \u003cshe,1\u003e","Fragments":["!="]},{"Key":"\u003cshe,1\u003e !=","Fragments":["\u003cs,1\u003e"]},{"Key":"position 6:","Fragments":["\u003ctwelve,1\u003e"]},{"Key":"6: \u003ctwelve,1\u003e","Fragments":["!="]},{"Key":"\u003ctwelve,1\u003e !=","Fragments":["\u003csaid,1\u003e"]},{"Key":"mismatch: 7","Fragments":["!="]},{"Key":"7 !=","Fragments":["9"]},{"Key":" ***","Fragments":["2"]},{"Key":"*** 2","Fragments":["failures"]},{"Key":"2 failures","Fragments":["detected"]},{"Key":"failures detected","Fragments":["in"]},{"Key":"detected in","Fragments":["test"]},{"Key":"suite \"Master","Fragments":["Test"]},{"Key":"\"Master Test","Fragments":["Suite\""]},{"Key":" make[2]:","Fragments":["***"]},{"Key":"make[2]: ***","Fragments":["[word-count]"]},{"Key":"*** [word-count]","Fragments":["Error"]},{"Key":"[word-count] Error","Fragments":["201"]},{"Key":" make[1]:","Fragments":["***"]},{"Key":"make[1]: ***","Fragments":["[CMakeFiles/word-count.dir/all]"]},{"Key":"*** [CMakeFiles/word-count.dir/all]","Fragments":["Error"]},{"Key":"[CMakeFiles/word-count.dir/all] Error","Fragments":["2"]},{"Key":" make:","Fragments":["***"]},{"Key":"make: ***","Fragments":["[all]"]},{"Key":"*** [all]","Fragments":["Error"]},{"Key":"[all] Error","Fragments":["2"]},{"Key":"and gets","Fragments":["the"]},{"Key":"gets the","Fragments":["job"]},{"Key":"job done.","Fragments":["I"]},{"Key":"done. I","Fragments":["am"]},{"Key":"missing something","Fragments":["though."]},{"Key":"something though.","Fragments":["The"]},{"Key":"The ==","Fragments":["operator"]},{"Key":"== operator","Fragments":["on"]},{"Key":"operator on","Fragments":["strings"]},{"Key":"on strings","Fragments":["does"]},{"Key":"strings does","Fragments":["a"]},{"Key":"does a","Fragments":["character"]},{"Key":"character comparison.","Fragments":["if"]},{"Key":"comparison. if","Fragments":["\"sth"]},{"Key":"if \"sth","Fragments":["=="]},{"Key":"\"sth ==","Fragments":["upper\""]},{"Key":"== upper\"","Fragments":["is"]},{"Key":"upper\" is","Fragments":["true,"]},{"Key":"is true,","Fragments":["doesn't"]},{"Key":"true, doesn't","Fragments":["\"sth"]},{"Key":"doesn't \"sth","Fragments":["!="]},{"Key":"\"sth !=","Fragments":["lower\""]},{"Key":"!= lower\"","Fragments":["have"]},{"Key":"lower\" have","Fragments":["to"]},{"Key":"be true?","Fragments":["I"]},{"Key":"true? I","Fragments":["also"]},{"Key":"the question_with_trailing_whitespace","Fragments":["test,"]},{"Key":"question_with_trailing_whitespace test,","Fragments":["as"]},{"Key":"test, as","Fragments":["you"]},{"Key":"not removing","Fragments":["trailing"]},{"Key":"trailing whitespace","Fragments":["before"]},{"Key":"whitespace before","Fragments":["checking"]},{"Key":"mark. Also,","Fragments":["I"]},{"Key":"enumeration and","Fragments":["map"]},{"Key":"too complicated.","Fragments":["What"]},{"Key":"complicated. What","Fragments":["is"]},{"Key":"is wrong","Fragments":["with"]},{"Key":"just returning","Fragments":["strings"]},{"Key":"returning strings","Fragments":["in"]},{"Key":"in bob::hey?","Fragments":["Finally,"]},{"Key":"bob::hey? Finally,","Fragments":["if"]},{"Key":"Finally, if","Fragments":["you","you"]},{"Key":"are writing","Fragments":["in","as"]},{"Key":"writing in","Fragments":["C++"]},{"Key":"solution should","Fragments":["include"]},{"Key":"should include","Fragments":["an"]},{"Key":"include an","Fragments":["OOP"]},{"Key":"an OOP","Fragments":["solution."]},{"Key":"Made a","Fragments":["mistake."]},{"Key":"a mistake.","Fragments":["Please"]},{"Key":"mistake. Please","Fragments":["disregard"]},{"Key":"Please disregard","Fragments":["iteration"]},{"Key":"disregard iteration","Fragments":["2!"]},{"Key":"iteration 2!","Fragments":["(shouldn't"]},{"Key":"2! (shouldn't","Fragments":["have"]},{"Key":"(shouldn't have","Fragments":["uploaded"]},{"Key":"Not aware","Fragments":["of"]},{"Key":"any tradeoffs","Fragments":["that"]},{"Key":"tradeoffs that","Fragments":["I"]},{"Key":"I needed.","Fragments":["Was"]},{"Key":"needed. Was","Fragments":["just"]},{"Key":"Was just","Fragments":["a"]},{"Key":"of peeling","Fragments":["open"]},{"Key":"peeling open","Fragments":["the"]},{"Key":"open the","Fragments":["the"]},{"Key":"old data","Fragments":["structure","structure"]},{"Key":"new one.","Fragments":["The"]},{"Key":"one. The","Fragments":["old"]},{"Key":"The old","Fragments":["data"]},{"Key":"structure had","Fragments":["all"]},{"Key":"had all","Fragments":["the"]},{"Key":"correct point","Fragments":["values,"]},{"Key":"point values,","Fragments":["so"]},{"Key":"values, so","Fragments":["there"]},{"Key":"to re-create","Fragments":["it."]},{"Key":"considered non-alpha","Fragments":["characters"]},{"Key":"non-alpha characters","Fragments":["coming"]},{"Key":"characters coming","Fragments":["in"]},{"Key":"coming in","Fragments":["too."]},{"Key":"in too.","Fragments":["I'd"]},{"Key":"too. I'd","Fragments":["be"]},{"Key":"interested if","Fragments":["there"]},{"Key":"other error","Fragments":["situations"]},{"Key":"error situations","Fragments":["I'm"]},{"Key":"situations I'm","Fragments":["not"]},{"Key":"not considering","Fragments":["as"]},{"Key":"considering as","Fragments":["well."]},{"Key":"only gripe","Fragments":["with"]},{"Key":"gripe with","Fragments":["your"]},{"Key":"of __sprintf__","Fragments":["since"]},{"Key":"__sprintf__ since","Fragments":["its"]},{"Key":"its misuse","Fragments":["can"]},{"Key":"misuse can","Fragments":["lead"]},{"Key":"buffer overflow.","Fragments":["May"]},{"Key":"overflow. May","Fragments":["I"]},{"Key":"suggest its","Fragments":["safer"]},{"Key":"its safer","Fragments":["counterpart:"]},{"Key":"safer counterpart:","Fragments":["[__snprintf__](http://en.cppreference.com/w/cpp/io/c/fprintf)."]},{"Key":"Good job","Fragments":["with","in"]},{"Key":"job with","Fragments":["making"]},{"Key":"with making","Fragments":["sure"]},{"Key":"an alphabetic","Fragments":["character"]},{"Key":"character before","Fragments":["adding"]},{"Key":"before adding","Fragments":["it."]},{"Key":"adding it.","Fragments":["I"]},{"Key":"consider that.","Fragments":["I"]},{"Key":"see any","Fragments":["problems,","problems"]},{"Key":"any problems,","Fragments":["but"]},{"Key":"problems, but","Fragments":["I"]},{"Key":"curious why","Fragments":["you"]},{"Key":"did `++iterator`","Fragments":["instead"]},{"Key":"`++iterator` instead","Fragments":["of"]},{"Key":" EDIT:Never","Fragments":["mind,"]},{"Key":"EDIT:Never mind,","Fragments":["found"]},{"Key":"mind, found","Fragments":["the"]},{"Key":"found the","Fragments":["answer"]},{"Key":"answer here:","Fragments":["http://stackoverflow.com/questions/24853/what-is-the-difference-between-i-and-i"]},{"Key":"Looks really","Fragments":["good"]},{"Key":"is labeled","Fragments":["\"nitpick,\""]},{"Key":"labeled \"nitpick,\"","Fragments":["maybe"]},{"Key":"\"nitpick,\" maybe","Fragments":["I'll"]},{"Key":"maybe I'll","Fragments":["recommend"]},{"Key":"I'll recommend","Fragments":["checking"]},{"Key":"checking out","Fragments":["the"]},{"Key":"library for","Fragments":["common"]},{"Key":"for common","Fragments":["tasks"]},{"Key":"common tasks","Fragments":["like"]},{"Key":"tasks like","Fragments":["stripping"]},{"Key":"like stripping","Fragments":["white"]},{"Key":"stripping white","Fragments":["space,"]},{"Key":"space, for","Fragments":["example"]},{"Key":"example `boost::algorithm::trim(str)`","Fragments":["is"]},{"Key":"`boost::algorithm::trim(str)` is","Fragments":["useful."]},{"Key":"issues once","Fragments":["I"]},{"Key":"I remembered","Fragments":["that"]},{"Key":"remembered that","Fragments":["I"]},{"Key":"make at","Fragments":["least"]},{"Key":"one variable","Fragments":["a"]},{"Key":"variable a","Fragments":["precision"]},{"Key":"a precision","Fragments":["variable","result."]},{"Key":"precision variable","Fragments":["to"]},{"Key":"I'm missing","Fragments":["any"]},{"Key":"missing any","Fragments":["error"]},{"Key":"any error","Fragments":["conditions."]},{"Key":"error conditions.","Fragments":["I"]},{"Key":"conditions. I","Fragments":["don't"]},{"Key":"believe I","Fragments":["can"]},{"Key":"a divide","Fragments":["by"]},{"Key":"divide by","Fragments":["zero"]},{"Key":"by zero","Fragments":["answer,"]},{"Key":"zero answer,","Fragments":["and"]},{"Key":"I'm always","Fragments":["going"]},{"Key":"always going","Fragments":["to"]},{"Key":"a positive","Fragments":["age"]},{"Key":"positive age","Fragments":["in"]},{"Key":"age in","Fragments":["seconds"]},{"Key":"in seconds","Fragments":["with"]},{"Key":"seconds with","Fragments":["an"]},{"Key":"an unsigned","Fragments":["input.","int","int","integer","int","int","int","int","int"]},{"Key":"maybe line","Fragments":["36"]},{"Key":"line 36","Fragments":["could"]},{"Key":"36 could","Fragments":["be"]},{"Key":"be `if","Fragments":["(lowercaseLetterCount"]},{"Key":"`if (lowercaseLetterCount","Fragments":["=="]},{"Key":"(lowercaseLetterCount ==","Fragments":["0)`"]},{"Key":"== 0)`","Fragments":["since"]},{"Key":"0)` since","Fragments":["at"]},{"Key":"since at","Fragments":["this"]},{"Key":"point we","Fragments":["know"]},{"Key":"both aren't","Fragments":["zero,"]},{"Key":"aren't zero,","Fragments":["since"]},{"Key":"zero, since","Fragments":["we"]},{"Key":"since we","Fragments":["are"]},{"Key":"else that","Fragments":["excludes"]},{"Key":"that excludes","Fragments":["that"]},{"Key":"excludes that","Fragments":["possibility."]},{"Key":"good. Making","Fragments":["i\u003c=64"]},{"Key":"Making i\u003c=64","Fragments":["makes"]},{"Key":"i\u003c=64 makes","Fragments":["it"]},{"Key":"clear that","Fragments":["64","64","this"]},{"Key":"that 64","Fragments":["is","is"]},{"Key":"64 is","Fragments":["your","my"]},{"Key":"is your","Fragments":["upper"]},{"Key":"your upper","Fragments":["bound"]},{"Key":"upper bound","Fragments":["than","by"]},{"Key":"bound than","Fragments":["i\u003c65."]},{"Key":"than i\u003c65.","Fragments":["But"]},{"Key":"i\u003c65. But","Fragments":["I'm"]},{"Key":"really just","Fragments":["reaching","need"]},{"Key":"just reaching","Fragments":["for"]},{"Key":"reaching for","Fragments":["something."]},{"Key":"also surprised","Fragments":["that"]},{"Key":"your total","Fragments":["function"]},{"Key":"total function","Fragments":["doesn't"]},{"Key":"a semicolon","Fragments":["at"]},{"Key":"semicolon at","Fragments":["the"]},{"Key":"I recognized","Fragments":["the"]},{"Key":"recognized the","Fragments":["power"]},{"Key":"the power","Fragments":["of"]},{"Key":"power of","Fragments":["2"]},{"Key":"of 2","Fragments":["in"]},{"Key":"2 in","Fragments":["the"]},{"Key":"the squares,","Fragments":["it"]},{"Key":"squares, it","Fragments":["was"]},{"Key":"can optimize","Fragments":["this"]},{"Key":"optimize this","Fragments":["any"]},{"Key":"this any","Fragments":["more,"]},{"Key":"more, but","Fragments":["I'll","I"]},{"Key":"but I'll","Fragments":["see"]},{"Key":"I'll see","Fragments":["what"]},{"Key":"submissions look","Fragments":["like."]},{"Key":"could add","Fragments":["some"]},{"Key":"extra logic","Fragments":["to"]},{"Key":"to square","Fragments":["to"]},{"Key":"square to","Fragments":["check"]},{"Key":"check boundries","Fragments":["of"]},{"Key":"boundries of","Fragments":["a"]},{"Key":"a chess","Fragments":["square."]},{"Key":"chess square.","Fragments":["Nothing"]},{"Key":"square. Nothing","Fragments":["less"]},{"Key":"Nothing less","Fragments":["than"]},{"Key":"than 1,","Fragments":["or"]},{"Key":"1, or","Fragments":["greater"]},{"Key":"or greater","Fragments":["than"]},{"Key":"than 64","Fragments":["otherwise"]},{"Key":"64 otherwise","Fragments":["throw"]},{"Key":"otherwise throw","Fragments":["an"]},{"Key":"or return","Fragments":["0."]},{"Key":"boost gregorian","Fragments":["date"]},{"Key":"gregorian date","Fragments":["would","that"]},{"Key":"date would","Fragments":["only"]},{"Key":"would only","Fragments":["let"]},{"Key":"only let","Fragments":["me"]},{"Key":"me add","Fragments":["days"]},{"Key":"add days","Fragments":["to"]},{"Key":"days to","Fragments":["it,"]},{"Key":"it, so","Fragments":["I"]},{"Key":"I hardcoded","Fragments":["the"]},{"Key":"hardcoded the","Fragments":["math"]},{"Key":"math to","Fragments":["convert"]},{"Key":"convert a","Fragments":["billion"]},{"Key":"a billion","Fragments":["seconds"]},{"Key":"billion seconds","Fragments":["to"]},{"Key":"seconds to","Fragments":["days."]},{"Key":" Hmmmm.","Fragments":["Not"]},{"Key":"Hmmmm. Not","Fragments":["sure"]},{"Key":"null date.","Fragments":["I"]},{"Key":"date. I","Fragments":["should"]},{"Key":"probably check","Fragments":["for"]},{"Key":"any conditions","Fragments":["where"]},{"Key":"conditions where","Fragments":["I"]},{"Key":"a gregorian","Fragments":["date"]},{"Key":"date that","Fragments":["isn't","can"]},{"Key":"a date","Fragments":["that"]},{"Key":"The deque","Fragments":["is"]},{"Key":"deque is","Fragments":["an"]},{"Key":"interesting container","Fragments":["to"]},{"Key":"hold the","Fragments":["lyrics."]},{"Key":"the lyrics.","Fragments":["Any"]},{"Key":"lyrics. Any","Fragments":["thoughts"]},{"Key":"Any thoughts","Fragments":["on"]},{"Key":"thoughts on","Fragments":["why"]},{"Key":"chose it","Fragments":["over"]},{"Key":"it over","Fragments":["appending"]},{"Key":"over appending","Fragments":["to"]},{"Key":"appending to","Fragments":["a"]},{"Key":"a regular","Fragments":["string?","pointer),"]},{"Key":"while it's","Fragments":["not"]},{"Key":"consider error","Fragments":["checking"]},{"Key":"checking your","Fragments":["inputs"]},{"Key":"your inputs","Fragments":["If"]},{"Key":"inputs If","Fragments":["I"]},{"Key":"I pass","Fragments":["in"]},{"Key":"that don't","Fragments":["correspond"]},{"Key":"don't correspond","Fragments":["to"]},{"Key":"correspond to","Fragments":["a"]},{"Key":"a line","Fragments":["in"]},{"Key":"song (0","Fragments":["or"]},{"Key":"(0 or","Fragments":["less,"]},{"Key":"or less,","Fragments":["9"]},{"Key":"less, 9","Fragments":["or"]},{"Key":"9 or","Fragments":["more)"]},{"Key":"or more)","Fragments":["it'll"]},{"Key":"more) it'll","Fragments":["compile"]},{"Key":"it'll compile","Fragments":["but"]},{"Key":"compile but","Fragments":["bad"]},{"Key":"but bad","Fragments":["things"]},{"Key":"things are","Fragments":["going"]},{"Key":"initial solutions","Fragments":["will"]},{"Key":"solutions will","Fragments":["consider"]},{"Key":"will consider","Fragments":["\"aaaaa,ARE"]},{"Key":"consider \"aaaaa,ARE","Fragments":["YOU"]},{"Key":"\"aaaaa,ARE YOU","Fragments":["OK?\""]},{"Key":"YOU OK?\"","Fragments":["as"]},{"Key":"OK?\" as","Fragments":["shouting."]},{"Key":" modified","Fragments":["to"]},{"Key":"modified to","Fragments":["use"]},{"Key":"use libraries","Fragments":["to"]},{"Key":"libraries to","Fragments":["make"]},{"Key":"file. You","Fragments":["have"]},{"Key":"two sequences","Fragments":["are","are","are","are","are","are"]},{"Key":"sequences are","Fragments":["not","not","unequal.","different","different","unequal","not"]},{"Key":"not equal","Fragments":["in","in"]},{"Key":"equal in","Fragments":["size.","size."]},{"Key":"in size.","Fragments":["I","You"]},{"Key":"size. I","Fragments":["don't","also"]},{"Key":"have passed","Fragments":["all","all","all","all"]},{"Key":"without doing","Fragments":["so."]},{"Key":"doing so.","Fragments":["Also,"]},{"Key":"so. Also,","Fragments":["you"]},{"Key":"use both","Fragments":["sequences"]},{"Key":"both sequences","Fragments":["to"]},{"Key":"sequences to","Fragments":["see"]},{"Key":"end iterator,","Fragments":["since"]},{"Key":"iterator, since","Fragments":["they"]},{"Key":"since they","Fragments":["are"]},{"Key":"same size.","Fragments":["Finally,"]},{"Key":"size. Finally,","Fragments":["you"]},{"Key":"Finally, you","Fragments":["might","might","might"]},{"Key":"unsigned int","Fragments":["for","for","for","for","for","for","for"]},{"Key":"int for","Fragments":["the","your","your","your","your","your","your"]},{"Key":"the distance,","Fragments":["as"]},{"Key":"distance, as","Fragments":["that"]},{"Key":"expressive of","Fragments":["the"]},{"Key":"problem (the","Fragments":["distance"]},{"Key":"(the distance","Fragments":["can't"]},{"Key":"distance can't","Fragments":["be"]},{"Key":"using C++","Fragments":["you","using"]},{"Key":"C++ you","Fragments":["might","might"]},{"Key":"some OOP","Fragments":["techniques.","techniques","techniques","techniques","techniques"]},{"Key":"OOP techniques.","Fragments":["It"]},{"Key":"techniques. It","Fragments":["would"]},{"Key":" Look","Fragments":["at","at","at","at","at"]},{"Key":"Look at","Fragments":["the","the","the","the","the"]},{"Key":"test suite.","Fragments":["You","You","You","It's","You","You"]},{"Key":"suite. You","Fragments":["must","need","must","are","are"]},{"Key":"You must","Fragments":["throw","throw"]},{"Key":"must throw","Fragments":["a","std::domain_error"]},{"Key":"not equal.","Fragments":["I"]},{"Key":"equal. I","Fragments":["don't"]},{"Key":"all tests!","Fragments":["Since"]},{"Key":"tests! Since","Fragments":["you"]},{"Key":"using C++,","Fragments":["it","some","using"]},{"Key":"C++, it","Fragments":["might"]},{"Key":"use OOP","Fragments":["techniques"]},{"Key":"OOP techniques","Fragments":["a","might","might","might","would","in"]},{"Key":"techniques a","Fragments":["bit."]},{"Key":"a bit.","Fragments":["Finally,","I"]},{"Key":"bit. Finally,","Fragments":["you"]},{"Key":"your hamming","Fragments":["variable,"]},{"Key":"hamming variable,","Fragments":["as"]},{"Key":"variable, as","Fragments":["it","it","it","it","it"]},{"Key":"can never","Fragments":["be","be"]},{"Key":"be less","Fragments":["than","than","than","than","than","than"]},{"Key":"than zero","Fragments":["(makes"]},{"Key":"zero (makes","Fragments":["your"]},{"Key":"(makes your","Fragments":["code"]},{"Key":"iterators instead","Fragments":["of","of","of","of","of","of"]},{"Key":"using indexes.","Fragments":["Just","Finally,","You"]},{"Key":"indexes. Just","Fragments":["my"]},{"Key":"my bias","Fragments":["on"]},{"Key":"bias on","Fragments":["that"]},{"Key":"that though.","Fragments":["Iterators"]},{"Key":"though. Iterators","Fragments":["are"]},{"Key":"Iterators are","Fragments":["more"]},{"Key":"more C++,","Fragments":["while"]},{"Key":"C++, while","Fragments":["you"]},{"Key":"while you","Fragments":["write"]},{"Key":"you write","Fragments":["more"]},{"Key":"write more","Fragments":["like"]},{"Key":"were using","Fragments":["C."]},{"Key":"file. Instead","Fragments":["of"]},{"Key":"using minLength,","Fragments":["you"]},{"Key":"minLength, you","Fragments":["need"]},{"Key":"the sizes","Fragments":["are"]},{"Key":"sizes are","Fragments":["unequal.","unequal."]},{"Key":"are unequal.","Fragments":["You","I","I"]},{"Key":"unequal. You","Fragments":["might"]},{"Key":"also consider","Fragments":["using","using","using"]},{"Key":"using iterators","Fragments":["instead","instead"]},{"Key":"looping using","Fragments":["indexes"]},{"Key":"using indexes","Fragments":["and"]},{"Key":"indexes and","Fragments":["etc."]},{"Key":"and etc.","Fragments":["Finally,"]},{"Key":"etc. Finally,","Fragments":["if"]},{"Key":"C++ using","Fragments":["some"]},{"Key":"techniques might","Fragments":["not","be","have"]},{"Key":" Check","Fragments":["the","the"]},{"Key":"unequal. I","Fragments":["don't","don't"]},{"Key":"all tests?","Fragments":["You"]},{"Key":"tests? You","Fragments":["might"]},{"Key":"indexes. Finally,","Fragments":["since"]},{"Key":"C++, some","Fragments":["OOP"]},{"Key":"namespace containing","Fragments":["a"]},{"Key":"containing a","Fragments":["compute"]},{"Key":"a compute","Fragments":["function","functions."]},{"Key":"compute function","Fragments":["rather"]},{"Key":"unsigned integer","Fragments":["for"]},{"Key":"integer for","Fragments":["your"]},{"Key":"your score.","Fragments":["It"]},{"Key":"score. It","Fragments":["is"]},{"Key":"expressive that","Fragments":["way"]},{"Key":"way (automatically","Fragments":["know"]},{"Key":"(automatically know","Fragments":["there"]},{"Key":"know there","Fragments":["can"]},{"Key":"there can","Fragments":["be"]},{"Key":"be no","Fragments":["negative"]},{"Key":"no negative","Fragments":["scores)."]},{"Key":"optimize these","Fragments":["conditions"]},{"Key":"these conditions","Fragments":["a"]},{"Key":"conditions a","Fragments":["bit"]},{"Key":"bit more,","Fragments":["but"]},{"Key":"of how.","Fragments":["Even"]},{"Key":"how. Even","Fragments":["if"]},{"Key":"I did,","Fragments":["I"]},{"Key":"did, I","Fragments":["suspect"]},{"Key":"suspect it'll","Fragments":["start"]},{"Key":"it'll start","Fragments":["making"]},{"Key":"start making","Fragments":["the"]},{"Key":"code harder","Fragments":["to"]},{"Key":"throw std::domain_error","Fragments":["if","if"]},{"Key":"different sizes.","Fragments":["I","I"]},{"Key":"sizes. I","Fragments":["don't","don't"]},{"Key":"all tests.","Fragments":["I"]},{"Key":"of iterators,","Fragments":["but"]},{"Key":"iterators, but","Fragments":["you"]},{"Key":"the \"auto\"","Fragments":["keyword","variable"]},{"Key":"\"auto\" keyword","Fragments":["instead"]},{"Key":"keyword instead","Fragments":["of"]},{"Key":"of \"string::const_iterator\",","Fragments":["it"]},{"Key":"\"string::const_iterator\", it","Fragments":["just"]},{"Key":"just reads","Fragments":["better"]},{"Key":"reads better","Fragments":["that"]},{"Key":"way. You","Fragments":["might"]},{"Key":"your count","Fragments":["variable,"]},{"Key":"count variable,","Fragments":["as"]},{"Key":"than zero,","Fragments":["and","and","and","so"]},{"Key":"zero, and","Fragments":["that","that","that"]},{"Key":"makes your","Fragments":["code","code","code","code"]},{"Key":"more expressive.","Fragments":["Finally,"]},{"Key":"expressive. Finally,","Fragments":["since"]},{"Key":"C++, using","Fragments":["some"]},{"Key":"job in","Fragments":["general."]},{"Key":"suite, you","Fragments":["need"]},{"Key":"C++ to","Fragments":["use"]},{"Key":"indexes. You","Fragments":["might","might","are"]},{"Key":"your \"length\"","Fragments":["variable,"]},{"Key":"\"length\" variable,","Fragments":["as"]},{"Key":"expressive (it","Fragments":["can't"]},{"Key":"(it can't","Fragments":["be"]},{"Key":"than zero).","Fragments":["I"]},{"Key":"zero). I","Fragments":["also"]},{"Key":"also disagree","Fragments":["with"]},{"Key":"disagree with","Fragments":["previous","that"]},{"Key":"with previous","Fragments":["comments."]},{"Key":"previous comments.","Fragments":["I"]},{"Key":"using OOP","Fragments":["techniques"]},{"Key":"techniques would","Fragments":["be"]},{"Key":"just might","Fragments":["not"]},{"Key":"C++ as","Fragments":["much."]},{"Key":"suite. It's","Fragments":["supposed"]},{"Key":"It's supposed","Fragments":["to"]},{"Key":"the sequences","Fragments":["are"]},{"Key":"are unequal","Fragments":["size."]},{"Key":"unequal size.","Fragments":["I"]},{"Key":"C++ if","Fragments":["you"]},{"Key":"used iterators","Fragments":["instead"]},{"Key":"of indexes.","Fragments":["You","You"]},{"Key":"your \"diff\"","Fragments":["variable,"]},{"Key":"\"diff\" variable,","Fragments":["as"]},{"Key":"it cannot","Fragments":["be","be"]},{"Key":"two sizes","Fragments":["are"]},{"Key":"you passed","Fragments":["all"]},{"Key":"without it.","Fragments":["I"]},{"Key":"of inner_product()","Fragments":["though."]},{"Key":"inner_product() though.","Fragments":["You"]},{"Key":"though. You","Fragments":["might"]},{"Key":"might include","Fragments":["in"]},{"Key":"include in","Fragments":["comments"]},{"Key":"in comments","Fragments":["what"]},{"Key":"comments what","Fragments":["is"]},{"Key":"your \"hamming.h\"","Fragments":["file."]},{"Key":"\"hamming.h\" file.","Fragments":["Finally,"]},{"Key":"file. Finally,","Fragments":["you"]},{"Key":"your result","Fragments":["variable,"]},{"Key":"result variable,","Fragments":["as"]},{"Key":"std::domain_error exception","Fragments":["if"]},{"Key":"size. You","Fragments":["might"]},{"Key":"writing as","Fragments":["if"]},{"Key":"if C++","Fragments":["were"]},{"Key":"C++ were","Fragments":["C."]},{"Key":"were C.","Fragments":["I"]},{"Key":"guess there","Fragments":["isn't"]},{"Key":"isn't anything","Fragments":["wrong"]},{"Key":"with that,","Fragments":["but"]},{"Key":"might do","Fragments":["things"]},{"Key":"do things","Fragments":["more"]},{"Key":"things more","Fragments":["the"]},{"Key":"more the","Fragments":["C++"]},{"Key":"way (which","Fragments":["to"]},{"Key":"(which to","Fragments":["me"]},{"Key":"is better).","Fragments":["Along"]},{"Key":"better). Along","Fragments":["those"]},{"Key":"Along those","Fragments":["lines,"]},{"Key":"those lines,","Fragments":["you"]},{"Key":"lines, you","Fragments":["might"]},{"Key":"have included","Fragments":["some"]},{"Key":"included some","Fragments":["OOP"]},{"Key":"techniques in","Fragments":["your"]},{"Key":"your answer.","Fragments":["You"]},{"Key":"answer. You","Fragments":["might"]},{"Key":"your \"d\"","Fragments":["variable."]},{"Key":"\"d\" variable.","Fragments":["It"]},{"Key":"variable. It","Fragments":["can't"]},{"Key":"It can't","Fragments":["be"]},{"Key":"zero, so","Fragments":["that"]},{"Key":"exercise I've","Fragments":["never"]},{"Key":"I've never","Fragments":["done"]},{"Key":"never done","Fragments":["before,"]},{"Key":"done before,","Fragments":["but"]},{"Key":"I'd definitely","Fragments":["like"]},{"Key":"definitely like","Fragments":["to"]},{"Key":"and look","Fragments":["at"]},{"Key":"this again","Fragments":["in"]},{"Key":"again in","Fragments":["a"]},{"Key":"bit. I","Fragments":["spent"]},{"Key":"spent about","Fragments":["20"]},{"Key":"about 20","Fragments":["minutes"]},{"Key":"20 minutes","Fragments":["on"]},{"Key":"minutes on","Fragments":["this"]},{"Key":"this total,","Fragments":["and"]},{"Key":"total, and","Fragments":["used"]},{"Key":"Boost tokenizer","Fragments":["made"]},{"Key":"tokenizer made","Fragments":["this"]},{"Key":"exercise way","Fragments":["easier"]},{"Key":"way easier","Fragments":["than"]},{"Key":"it probobly","Fragments":["should"]},{"Key":"probobly should","Fragments":["have"]},{"Key":"have been.","Fragments":["The"]},{"Key":"been. The","Fragments":["only"]},{"Key":"only part","Fragments":["of"]},{"Key":"which required","Fragments":["some"]},{"Key":"required some","Fragments":["fancy","odd"]},{"Key":"some fancy","Fragments":["work"]},{"Key":"fancy work","Fragments":["was"]},{"Key":"work was","Fragments":["the"]},{"Key":"the apostrophes--they","Fragments":["required"]},{"Key":"apostrophes--they required","Fragments":["some"]},{"Key":"some odd","Fragments":["checks"]},{"Key":"odd checks","Fragments":["inside"]},{"Key":"checks inside","Fragments":["the"]},{"Key":"The older","Fragments":["tests"]},{"Key":"older tests","Fragments":["against"]},{"Key":"tests against","Fragments":["which"]},{"Key":"against which","Fragments":["i"]},{"Key":"which i","Fragments":["coded"]},{"Key":"i coded","Fragments":["did"]},{"Key":"coded did","Fragments":["not"]},{"Key":"a \"throw","Fragments":["std::domain_error\""]},{"Key":"\"throw std::domain_error\"","Fragments":["case,"]},{"Key":"std::domain_error\" case,","Fragments":["they"]},{"Key":"case, they","Fragments":["had"]},{"Key":"they had","Fragments":["a"]},{"Key":"a \"ignore","Fragments":["additional"]},{"Key":"\"ignore additional","Fragments":["elements"]},{"Key":"additional elements","Fragments":["on"]},{"Key":"elements on","Fragments":["longer"]},{"Key":"on longer","Fragments":["string\""]},{"Key":"longer string\"","Fragments":["case."]},{"Key":" Hamming.h","Fragments":["does"]},{"Key":"Hamming.h does","Fragments":["not"]},{"Key":"be too","Fragments":["interesting:"]},{"Key":"too interesting:","Fragments":["it"]},{"Key":"interesting: it","Fragments":["can"]},{"Key":"have either","Fragments":["a"]},{"Key":"a hamming","Fragments":["class"]},{"Key":"hamming class","Fragments":["with"]},{"Key":"static compute","Fragments":["member"]},{"Key":"compute member","Fragments":["function,"]},{"Key":"function, or","Fragments":["a"]},{"Key":"namespace hamming","Fragments":["with"]},{"Key":"hamming with","Fragments":["a"]},{"Key":"compute functions.","Fragments":["Either"]},{"Key":"functions. Either","Fragments":["way,"]},{"Key":"Either way,","Fragments":["not"]},{"Key":"way, not","Fragments":["much"]},{"Key":"have mixed","Fragments":["feelings"]},{"Key":"mixed feelings","Fragments":["concerning"]},{"Key":"feelings concerning","Fragments":["your"]},{"Key":"concerning your","Fragments":["unsigned"]},{"Key":"your unsigned","Fragments":["suggestion."]},{"Key":"unsigned suggestion.","Fragments":["In"]},{"Key":"suggestion. In","Fragments":["general"]},{"Key":"I belong","Fragments":["to"]},{"Key":"the \"always","Fragments":["use"]},{"Key":"\"always use","Fragments":["int\""]},{"Key":"use int\"","Fragments":["club,"]},{"Key":"int\" club,","Fragments":["but"]},{"Key":"club, but","Fragments":["its"]},{"Key":"its also","Fragments":["true"]},{"Key":"also true","Fragments":["that"]},{"Key":"true that","Fragments":["distances"]},{"Key":"that distances","Fragments":["generally"]},{"Key":"distances generally","Fragments":["are"]},{"Key":"generally are","Fragments":["non-negative"]},{"Key":"are non-negative","Fragments":["by"]},{"Key":"non-negative by","Fragments":["definition."]},{"Key":"by definition.","Fragments":["But"]},{"Key":"definition. But","Fragments":["I"]},{"Key":"real difference","Fragments":["in"]},{"Key":"in expressiveness.","Fragments":["If"]},{"Key":"expressiveness. If","Fragments":["anything,"]},{"Key":"If anything,","Fragments":["I"]},{"Key":"anything, I","Fragments":["would"]},{"Key":"more generic","Fragments":["via"]},{"Key":"generic via","Fragments":["c++14"]},{"Key":"via c++14","Fragments":["features:"]},{"Key":"Now the","Fragments":["only"]},{"Key":"that causes","Fragments":["a"]},{"Key":"causes a","Fragments":["switch"]},{"Key":"switch between","Fragments":["signed/unsigned"]},{"Key":"between signed/unsigned","Fragments":["is"]},{"Key":"signed/unsigned is","Fragments":["the"]},{"Key":"the init","Fragments":["literal"]},{"Key":"init literal","Fragments":["`0`"]},{"Key":"literal `0`","Fragments":["or"]},{"Key":"`0` or","Fragments":["`0u`."]},{"Key":"or `0u`.","Fragments":["Now"]},{"Key":"`0u`. Now","Fragments":["if"]},{"Key":"Now if","Fragments":["you"]},{"Key":"about it,","Fragments":["does"]},{"Key":"it, does","Fragments":["that"]},{"Key":"does that","Fragments":["you"]},{"Key":"really make","Fragments":["the"]},{"Key":"code more/less","Fragments":["expressive?"]},{"Key":"more/less expressive?","Fragments":["I"]},{"Key":"expressive? I","Fragments":["think"]},{"Key":"my upper","Fragments":["bound"]},{"Key":"bound by","Fragments":["changing"]},{"Key":"changing `\u003c65`","Fragments":["to"]},{"Key":"`\u003c65` to","Fragments":["`\u003c=64`."]},{"Key":"using c++11","Fragments":["features"]},{"Key":"features in","Fragments":["your"]},{"Key":"could improve","Fragments":["the"]},{"Key":"1. typedef","Fragments":["=\u003e"]},{"Key":"typedef =\u003e","Fragments":["using,"]},{"Key":"=\u003e using,","Fragments":["reads"]},{"Key":"using, reads","Fragments":["much"]},{"Key":"reads much","Fragments":["cleaner:"]},{"Key":"using SubjectMap","Fragments":["="]},{"Key":"SubjectMap =","Fragments":["std::map\u003cchar,"]},{"Key":"= std::map\u003cchar,","Fragments":["int\u003e;"]},{"Key":"2. initialize","Fragments":["mSubject"]},{"Key":"initialize mSubject","Fragments":["in"]},{"Key":"mSubject in","Fragments":["the"]},{"Key":"the initialization","Fragments":["list","list"]},{"Key":"constructor, otherwise","Fragments":["you"]},{"Key":"otherwise you","Fragments":["will"]},{"Key":"will first","Fragments":["get"]},{"Key":"first get","Fragments":["a"]},{"Key":"default constructed","Fragments":["string"]},{"Key":"constructed string","Fragments":["and"]},{"Key":"then a","Fragments":["copy","week."]},{"Key":"copy assigned","Fragments":["one"]},{"Key":"assigned one","Fragments":["(not"]},{"Key":"one (not","Fragments":["c++11"]},{"Key":"(not c++11","Fragments":["but"]},{"Key":"c++11 but","Fragments":["a"]},{"Key":"but a","Fragments":["good"]},{"Key":"good practice).","Fragments":["With"]},{"Key":"practice). With","Fragments":["the"]},{"Key":"With the","Fragments":["initialization"]},{"Key":"list you","Fragments":["just"]},{"Key":"copy constructed","Fragments":["one."]},{"Key":" anagram(const","Fragments":["std::string\u0026"]},{"Key":"anagram(const std::string\u0026","Fragments":["subject)"]},{"Key":"std::string\u0026 subject)","Fragments":[":"]},{"Key":"subject) :","Fragments":["mSubject{subject}"]},{"Key":": mSubject{subject}","Fragments":["{"]},{"Key":"3. There's","Fragments":["really"]},{"Key":"use std::list","Fragments":["unless"]},{"Key":"std::list unless","Fragments":["you"]},{"Key":"be inserting","Fragments":["into"]},{"Key":"inserting into","Fragments":["the"]},{"Key":"the container","Fragments":["all"]},{"Key":"container all","Fragments":["the"]},{"Key":"time. All","Fragments":["you're"]},{"Key":"All you're","Fragments":["doing"]},{"Key":"doing is","Fragments":["pushing"]},{"Key":"is pushing","Fragments":["back,"]},{"Key":"pushing back,","Fragments":["so"]},{"Key":"back, so","Fragments":["just"]},{"Key":"so just","Fragments":["stick"]},{"Key":"just stick","Fragments":["to"]},{"Key":"4. Operator[]","Fragments":["of"]},{"Key":"Operator[] of","Fragments":["map"]},{"Key":"of map","Fragments":["defaut"]},{"Key":"map defaut","Fragments":["constructs"]},{"Key":"defaut constructs","Fragments":["a"]},{"Key":"constructs a","Fragments":["value"]},{"Key":"isn't present","Fragments":["in"]},{"Key":"map. So","Fragments":["you"]},{"Key":"could (should!)","Fragments":["simplify"]},{"Key":"(should!) simplify","Fragments":["that"]},{"Key":"simplify that","Fragments":["section"]},{"Key":"that section","Fragments":["of"]},{"Key":"section of","Fragments":["`matches`"]},{"Key":"of `matches`","Fragments":["by"]},{"Key":"`matches` by","Fragments":["doing","const"]},{"Key":"doing (range","Fragments":["for"]},{"Key":"(range for","Fragments":["loop):"]},{"Key":" SubjectMap","Fragments":["map;"]},{"Key":"auto\u0026 c","Fragments":[":"]},{"Key":" 5.","Fragments":["You"]},{"Key":"5. You","Fragments":["don't"]},{"Key":"don't ever","Fragments":["have"]},{"Key":"ever have","Fragments":["to"]},{"Key":"write `vector\u003cstring\u003e::const_iterator`,","Fragments":["you"]},{"Key":"`vector\u003cstring\u003e::const_iterator`, you","Fragments":["can"]},{"Key":"use auto:","Fragments":["`for"]},{"Key":"auto: `for","Fragments":["(auto"]},{"Key":"(auto i","Fragments":["="]},{"Key":"= words.begin();","Fragments":["..."]},{"Key":"words.begin(); ...","Fragments":[")`."]},{"Key":"... )`.","Fragments":["Or"]},{"Key":")`. Or","Fragments":["better"]},{"Key":"Or better","Fragments":["yet,"]},{"Key":"auto\u0026 word","Fragments":[":"]},{"Key":"word :","Fragments":["words)","wordList)"]},{"Key":" 6.","Fragments":["Instead"]},{"Key":"6. Instead","Fragments":["of"]},{"Key":"copying a","Fragments":["map,"]},{"Key":"a map,","Fragments":["and"]},{"Key":"map, and","Fragments":["removing"]},{"Key":"and removing","Fragments":["counts"]},{"Key":"removing counts","Fragments":["from"]},{"Key":"counts from","Fragments":["it,"]},{"Key":"from it,","Fragments":["why"]},{"Key":"it, why","Fragments":["not"]},{"Key":"a `createCharCountMap`","Fragments":["function"]},{"Key":"`createCharCountMap` function","Fragments":["and"]},{"Key":"two maps?","Fragments":["That"]},{"Key":"maps? That","Fragments":["way"]},{"Key":"could reuse","Fragments":["the"]},{"Key":"already wrote,","Fragments":["and"]},{"Key":"wrote, and","Fragments":["comparing"]},{"Key":"comparing two","Fragments":["maps"]},{"Key":"maps could","Fragments":["be"]},{"Key":"nice challenging","Fragments":["subroutine"]},{"Key":"challenging subroutine","Fragments":["to"]},{"Key":"subroutine to","Fragments":["write."]},{"Key":"to rethink","Fragments":["your"]},{"Key":"rethink your","Fragments":["algorithm."]},{"Key":"your algorithm.","Fragments":["By"]},{"Key":"algorithm. By","Fragments":["converting"]},{"Key":"By converting","Fragments":["the"]},{"Key":"to lowercase,","Fragments":["then"]},{"Key":"lowercase, then","Fragments":["sorting"]},{"Key":"then sorting","Fragments":["them"]},{"Key":"sorting them","Fragments":["and"]},{"Key":"and comparing,","Fragments":["you"]},{"Key":"comparing, you","Fragments":["could"]},{"Key":"same in","Fragments":["about"]},{"Key":"about 4","Fragments":["lines."]},{"Key":"original function","Fragments":["calls"]},{"Key":"the anagram_test.cpp","Fragments":["test"]},{"Key":"anagram_test.cpp test","Fragments":["file."]},{"Key":"file. G++","Fragments":["(v4.9.1"]},{"Key":"G++ (v4.9.1","Fragments":["on"]},{"Key":"(v4.9.1 on","Fragments":["XUbuntu)"]},{"Key":"on XUbuntu)","Fragments":["would"]},{"Key":"XUbuntu) would","Fragments":["complain"]},{"Key":"would complain","Fragments":["about"]},{"Key":"complain about","Fragments":["a"]},{"Key":"a direct","Fragments":["call"]},{"Key":"direct call","Fragments":["to"]},{"Key":"a constructor,","Fragments":["as"]},{"Key":"constructor, as","Fragments":["described"]},{"Key":"as described","Fragments":["here"]},{"Key":"described here","Fragments":[":"]},{"Key":"to mess","Fragments":["with"]},{"Key":"mess with","Fragments":["the"]},{"Key":"program in","Fragments":["order"]},{"Key":"get everything","Fragments":["to"]},{"Key":"compile while","Fragments":["not"]},{"Key":"while not","Fragments":["touching"]},{"Key":"not touching","Fragments":["the"]},{"Key":"file any","Fragments":["more"]},{"Key":"than absolutely","Fragments":["necessary."]},{"Key":"absolutely necessary.","Fragments":["It"]},{"Key":"necessary. It","Fragments":["still"]},{"Key":"It still","Fragments":["feels"]},{"Key":"still feels","Fragments":["weird"]},{"Key":"feels weird","Fragments":["though,"]},{"Key":"weird though,","Fragments":["particularly"]},{"Key":"though, particularly","Fragments":["regarding"]},{"Key":"particularly regarding","Fragments":["how"]},{"Key":"regarding how","Fragments":["memory"]},{"Key":"how memory","Fragments":["is"]},{"Key":"is allocated.","Fragments":["I"]},{"Key":"allocated. I","Fragments":["can't"]},{"Key":"can't shake","Fragments":["the"]},{"Key":"shake the","Fragments":["feeling"]},{"Key":"the feeling","Fragments":["that"]},{"Key":"works by","Fragments":["accident"]},{"Key":"by accident","Fragments":["rather"]},{"Key":"accident rather","Fragments":["than"]},{"Key":"a definitive","Fragments":["solution"]},{"Key":"definitive solution","Fragments":["in"]},{"Key":"the works","Fragments":["for"]},{"Key":"works for","Fragments":["this"]},{"Key":"- is","Fragments":["G++","the"]},{"Key":"is G++","Fragments":["too"]},{"Key":"G++ too","Fragments":["restrictive"]},{"Key":"too restrictive","Fragments":["in"]},{"Key":"restrictive in","Fragments":["this"]},{"Key":"case ?","Fragments":["If"]},{"Key":"? If","Fragments":["so,"]},{"Key":"so, is","Fragments":["there"]},{"Key":"an option","Fragments":["that"]},{"Key":"option that","Fragments":["can"]},{"Key":"to anagram::anagram(std::string)","Fragments":["considered"]},{"Key":"anagram::anagram(std::string) considered","Fragments":["\"idiomatic\""]},{"Key":"considered \"idiomatic\"","Fragments":["c++"]},{"Key":"\"idiomatic\" c++","Fragments":["?"]},{"Key":"using xubuntu","Fragments":["with"]},{"Key":"xubuntu with","Fragments":["gcc"]},{"Key":"with gcc","Fragments":["4.9.1."]},{"Key":"gcc 4.9.1.","Fragments":["I'm"]},{"Key":"4.9.1. I'm","Fragments":["not"]},{"Key":"an expert,","Fragments":["but"]},{"Key":"expert, but","Fragments":["let's"]},{"Key":"but let's","Fragments":["see"]},{"Key":"let's see","Fragments":["if"]},{"Key":"noticed you","Fragments":["didn't"]},{"Key":"didn't declare","Fragments":["a"]},{"Key":"namespace which","Fragments":["you"]},{"Key":"which you","Fragments":["need"]},{"Key":"task. When","Fragments":["you"]},{"Key":"see anagram::anagram,","Fragments":["you're"]},{"Key":"anagram::anagram, you're","Fragments":["seeing"]},{"Key":"you're seeing","Fragments":["a"]},{"Key":"seeing a","Fragments":["constructor"]},{"Key":"class anagram","Fragments":["that","{"]},{"Key":"that exists","Fragments":["in"]},{"Key":"namespace anagram.","Fragments":["So"]},{"Key":"anagram. So","Fragments":["your"]},{"Key":"header would","Fragments":["declare"]},{"Key":"declare something","Fragments":["like"]},{"Key":" anagram(std::string","Fragments":["word);"]},{"Key":" it's","Fragments":["a"]},{"Key":"of \"anagram\"s,","Fragments":["which"]},{"Key":"\"anagram\"s, which","Fragments":["I"]},{"Key":"agree is","Fragments":["confusing,"]},{"Key":"is confusing,","Fragments":["but"]},{"Key":"confusing, but","Fragments":["I"]},{"Key":"create another","Fragments":["matcher"]},{"Key":"another matcher","Fragments":["class"]},{"Key":"matcher class","Fragments":["to"]},{"Key":"input, did","Fragments":["you","you"]},{"Key":"use `const","Fragments":["unsigned","unsigned"]},{"Key":"`const unsigned","Fragments":["int\u0026`","int\u0026`","int\u0026`"]},{"Key":"unsigned int\u0026`","Fragments":["instead","instead","actually"]},{"Key":"int\u0026` instead","Fragments":["of","of"]},{"Key":"`int` just","Fragments":["for","for"]},{"Key":"for faster","Fragments":["run","run","access."]},{"Key":"faster run","Fragments":["times?","times?"]},{"Key":"run times?","Fragments":["Just","Just"]},{"Key":"times? Just","Fragments":["curious.","curious."]},{"Key":" Three","Fragments":["suggestions:"]},{"Key":"1. Take","Fragments":["the"]},{"Key":"Take the","Fragments":["vector"]},{"Key":"to `matches`","Fragments":["by"]},{"Key":"reference. You","Fragments":["don't"]},{"Key":"it, and","Fragments":["you"]},{"Key":"it copied","Fragments":["into"]},{"Key":"copied into","Fragments":["the"]},{"Key":"function everytime","Fragments":["it"]},{"Key":"everytime it","Fragments":["is"]},{"Key":"using StringVec","Fragments":["="]},{"Key":"StringVec =","Fragments":["std::vector\u003cstd::string\u003e"]},{"Key":" StringVec","Fragments":["anagram::matches(const"]},{"Key":"StringVec anagram::matches(const","Fragments":["StringVec\u0026"]},{"Key":"anagram::matches(const StringVec\u0026","Fragments":["wordList)"]},{"Key":"2. The","Fragments":["same"]},{"Key":"same concerns","Fragments":["the"]},{"Key":"concerns the","Fragments":["`word`"]},{"Key":"the `word`","Fragments":["in"]},{"Key":"`word` in","Fragments":["the"]},{"Key":"the range-for","Fragments":["loop."]},{"Key":"range-for loop.","Fragments":["You"]},{"Key":"iteration, you","Fragments":["really"]},{"Key":"enable you","Fragments":["to"]},{"Key":"copy it,","Fragments":["check"]},{"Key":"it, check","Fragments":["conditions"]},{"Key":"check conditions","Fragments":["and"]},{"Key":"conditions and","Fragments":["then"]},{"Key":"then push","Fragments":["it"]},{"Key":"push it","Fragments":["into"]},{"Key":"(auto\u0026 word","Fragments":[":"]},{"Key":"3. I","Fragments":["prefer","wasn't"]},{"Key":"linear logic","Fragments":["in"]},{"Key":"logic in","Fragments":["the"]},{"Key":"loop, less","Fragments":["nested"]},{"Key":"less nested","Fragments":["if"]},{"Key":"nested if","Fragments":["conditions."]},{"Key":"if conditions.","Fragments":["You"]},{"Key":"conditions. You","Fragments":["could"]},{"Key":"could rewrite","Fragments":["it"]},{"Key":"rewrite it","Fragments":["in"]},{"Key":"for (...)","Fragments":["{"]},{"Key":"if (m_wordLower","Fragments":["=="]},{"Key":"(m_wordLower ==","Fragments":["wordChars)"]},{"Key":"if (wordChars","Fragments":["=="]},{"Key":"(wordChars ==","Fragments":["m_wordSorted)"]},{"Key":"also becomes","Fragments":["clear"]},{"Key":"becomes clear","Fragments":["that"]},{"Key":"fact an","Fragments":["`algorithm`"]},{"Key":"an `algorithm`","Fragments":["call"]},{"Key":"`algorithm` call","Fragments":["we"]},{"Key":"call we","Fragments":["are"]},{"Key":"with here:","Fragments":["`std::copy_if`!"]},{"Key":"here: `std::copy_if`!","Fragments":["Neat."]},{"Key":"- Used","Fragments":["regular","a"]},{"Key":"Used regular","Fragments":["expressions"]},{"Key":"expressions instead","Fragments":["of"]},{"Key":"of attempting","Fragments":["to"]},{"Key":"to scan","Fragments":["through"]},{"Key":"scan through","Fragments":["the"]},{"Key":"find certain","Fragments":["characters"]},{"Key":"certain characters","Fragments":["because"]},{"Key":"characters because","Fragments":["it"]},{"Key":"it seemed","Fragments":["easier"]},{"Key":"seemed easier","Fragments":["to"]},{"Key":"the messages","Fragments":["this"]},{"Key":"messages this","Fragments":["way,"]},{"Key":"this way,","Fragments":["and"]},{"Key":"way, and","Fragments":["regular"]},{"Key":"and regular","Fragments":["expressions"]},{"Key":"expressions are","Fragments":["just"]},{"Key":"standard tool","Fragments":["for"]},{"Key":"for matching","Fragments":["strings"]},{"Key":"matching strings","Fragments":["like"]},{"Key":"strings like","Fragments":["this."]},{"Key":"fastest running","Fragments":["code"]},{"Key":"running code","Fragments":["I"]},{"Key":"have ever","Fragments":["seen,"]},{"Key":"ever seen,","Fragments":["seeing"]},{"Key":"seen, seeing","Fragments":["as"]},{"Key":"seeing as","Fragments":["it"]},{"Key":"it relies","Fragments":["on"]},{"Key":"relies on","Fragments":["bitwise"]},{"Key":"on bitwise","Fragments":["operations"]},{"Key":"bitwise operations","Fragments":["and"]},{"Key":"operations and","Fragments":["constexpr."]},{"Key":"and constexpr.","Fragments":["I"]},{"Key":"constexpr. I","Fragments":["like"]},{"Key":"do everything","Fragments":["at"]},{"Key":"everything at","Fragments":["compile"]},{"Key":"compile time.","Fragments":["I"]},{"Key":"any problems","Fragments":["with"]},{"Key":"Thanks chrishamilton.","Fragments":["I"]},{"Key":"chrishamilton. I","Fragments":["was"]},{"Key":"was thrown","Fragments":["off"]},{"Key":"thrown off","Fragments":["by"]},{"Key":"off by","Fragments":["the"]},{"Key":"the colliding","Fragments":["names,"]},{"Key":"colliding names,","Fragments":["and"]},{"Key":"names, and","Fragments":["also"]},{"Key":"also by","Fragments":["the"]},{"Key":"\"auto\" variable","Fragments":["in"]},{"Key":"variable in","Fragments":["the"]},{"Key":"file. I'm","Fragments":["not"]},{"Key":"yet familiar","Fragments":["with"]},{"Key":"usage there,","Fragments":["so"]},{"Key":"there, so","Fragments":["I"]},{"Key":"was calling,","Fragments":["I"]},{"Key":"calling, I","Fragments":["should"]},{"Key":"should get","Fragments":["an"]},{"Key":"get an","Fragments":["anagram*"]},{"Key":"an anagram*","Fragments":["back,"]},{"Key":"anagram* back,","Fragments":["and"]},{"Key":"back, and","Fragments":["then"]},{"Key":"then have","Fragments":["to"]},{"Key":"use -\u003e","Fragments":["to"]},{"Key":"-\u003e to","Fragments":["call"]},{"Key":"call matches","Fragments":["on"]},{"Key":"matches on","Fragments":["it;"]},{"Key":" anyway,","Fragments":["took"]},{"Key":"anyway, took","Fragments":["your"]},{"Key":"took your","Fragments":["advice"]},{"Key":"works just","Fragments":["fine,"]},{"Key":"just fine,","Fragments":["thanks"]},{"Key":"fine, thanks","Fragments":["for"]},{"Key":"The condition","Fragments":["that"]},{"Key":"makes up","Fragments":["most"]},{"Key":"up most","Fragments":["of"]},{"Key":"solution just","Fragments":["fell"]},{"Key":"just fell","Fragments":["out"]},{"Key":"fell out","Fragments":["naturally"]},{"Key":"out naturally","Fragments":["from"]},{"Key":"naturally from","Fragments":["the"]},{"Key":"the requirements,","Fragments":["so"]},{"Key":"requirements, so","Fragments":["there"]},{"Key":"real alternative","Fragments":["direction"]},{"Key":"alternative direction","Fragments":["to"]},{"Key":"direction to","Fragments":["consider"]},{"Key":"Used a","Fragments":["namespace"]},{"Key":"namespace because","Fragments":["there"]},{"Key":"were no","Fragments":["data"]},{"Key":"no data","Fragments":["members,"]},{"Key":"data members,","Fragments":["so"]},{"Key":"members, so","Fragments":["a"]},{"Key":"just been","Fragments":["unnecessary"]},{"Key":"been unnecessary","Fragments":["overhead"]},{"Key":"- Added","Fragments":["the"]},{"Key":"the definitions","Fragments":["of"]},{"Key":"each message","Fragments":["because"]},{"Key":"message because","Fragments":["regular"]},{"Key":"because regular","Fragments":["expressions"]},{"Key":"expressions can","Fragments":["be"]},{"Key":"bit difficult","Fragments":["to"]},{"Key":"- Considered","Fragments":["ensuring"]},{"Key":"Considered ensuring","Fragments":["that"]},{"Key":"ensuring that","Fragments":["the"]},{"Key":"passed in","Fragments":["was"]},{"Key":"in was","Fragments":["null"]},{"Key":"was null","Fragments":["terminated"]},{"Key":"null terminated","Fragments":["by"]},{"Key":"terminated by","Fragments":["imposing"]},{"Key":"by imposing","Fragments":["a"]},{"Key":"imposing a","Fragments":["size"]},{"Key":"a size","Fragments":["limit,","limit"]},{"Key":"size limit,","Fragments":["but"]},{"Key":"limit, but","Fragments":["instead"]},{"Key":"but instead","Fragments":["just"]},{"Key":"instead just","Fragments":["assumed"]},{"Key":"just assumed","Fragments":["that"]},{"Key":"the contract","Fragments":["for"]},{"Key":"contract for","Fragments":["this"]},{"Key":"this method","Fragments":["so"]},{"Key":"method so","Fragments":["that"]},{"Key":"size limit","Fragments":["would"]},{"Key":"limit would","Fragments":["not"]},{"Key":"- Iteratively","Fragments":["built"]},{"Key":"Iteratively built","Fragments":["up"]},{"Key":"built up","Fragments":["the"]},{"Key":"tests failed,","Fragments":["which"]},{"Key":"failed, which","Fragments":["was"]},{"Key":"interesting introduction","Fragments":["to"]},{"Key":"introduction to","Fragments":["TDD"]},{"Key":"You're right.","Fragments":["I"]},{"Key":"right. I","Fragments":["might"]},{"Key":"Any feed","Fragments":["back"]},{"Key":"feed back","Fragments":["is"]},{"Key":"back is","Fragments":["appreciated,"]},{"Key":"is appreciated,","Fragments":["been"]},{"Key":"appreciated, been","Fragments":["working"]},{"Key":"been working","Fragments":["with"]},{"Key":"working with","Fragments":["c++"]},{"Key":"less then","Fragments":["a"]},{"Key":"probably an","Fragments":["```isUpper```"]},{"Key":"```isUpper``` function","Fragments":["already"]},{"Key":"function already","Fragments":["defined."]},{"Key":"already defined.","Fragments":["Will"]},{"Key":"defined. Will","Fragments":["look"]},{"Key":"Will look","Fragments":["at"]},{"Key":"library is","Fragments":["not"]},{"Key":"what makes","Fragments":["the"]},{"Key":"readable. You","Fragments":["get"]},{"Key":"readability as","Fragments":["a"]},{"Key":"a side-effect","Fragments":["of"]},{"Key":"of properly","Fragments":["named"]},{"Key":"properly named","Fragments":["high"]},{"Key":"named high","Fragments":["level"]},{"Key":"high level","Fragments":["functions"]},{"Key":"level functions","Fragments":["being"]},{"Key":"functions being","Fragments":["available"]},{"Key":"being available","Fragments":["in"]},{"Key":"library. You","Fragments":["might"]},{"Key":"have implemented","Fragments":["these"]},{"Key":"implemented these","Fragments":["functions"]},{"Key":"To summarize:","Fragments":["Any"]},{"Key":"summarize: Any","Fragments":["piece"]},{"Key":"Any piece","Fragments":["of"]},{"Key":"is readable","Fragments":["as"]},{"Key":"functions small","Fragments":["and"]},{"Key":"small and","Fragments":["correctly"]},{"Key":"and correctly","Fragments":["named."]},{"Key":" JAC42,","Fragments":["The"]},{"Key":"JAC42, The","Fragments":["exception"]},{"Key":"The exception","Fragments":["is"]},{"Key":"a recent","Fragments":["addition"]},{"Key":"tests. Note","Fragments":["that"]},{"Key":"was submitted","Fragments":["3"]},{"Key":"submitted 3","Fragments":["months"]},{"Key":"3 months","Fragments":["ago."]},{"Key":"have iterated","Fragments":["over"]},{"Key":"iterated over","Fragments":["a"]},{"Key":"over a","Fragments":["range,"]},{"Key":"a range,","Fragments":["but"]},{"Key":"range, but","Fragments":["that"]},{"Key":"have required","Fragments":["me"]},{"Key":"required me","Fragments":["to"]},{"Key":"to either","Fragments":["find"]},{"Key":"either find","Fragments":["an"]},{"Key":"appropriate range","Fragments":["iterator"]},{"Key":"range iterator","Fragments":["generator"]},{"Key":"iterator generator","Fragments":["in"]},{"Key":"generator in","Fragments":["the"]},{"Key":"library or","Fragments":["implement"]},{"Key":"or implement","Fragments":["my"]},{"Key":"my own.","Fragments":["I"]},{"Key":"own. I","Fragments":["consider"]},{"Key":"I consider","Fragments":["neither"]},{"Key":"consider neither","Fragments":["to"]},{"Key":"neither to","Fragments":["be"]},{"Key":"good choice.","Fragments":["I"]},{"Key":"choice. I","Fragments":["try"]},{"Key":"to refrain","Fragments":["from"]},{"Key":"refrain from","Fragments":["using"]},{"Key":"from using","Fragments":["boost"]},{"Key":"boost because","Fragments":["that"]},{"Key":"because that","Fragments":["would"]},{"Key":"would severely","Fragments":["limit"]},{"Key":"severely limit","Fragments":["portability."]},{"Key":"always tail","Fragments":["recursion..."]},{"Key":"tail recursion...","Fragments":[";)"]},{"Key":"Did you","Fragments":["know"]},{"Key":"that gcc","Fragments":["does"]},{"Key":"gcc does","Fragments":["tail-call"]},{"Key":"does tail-call","Fragments":["optimization"]},{"Key":"tail-call optimization","Fragments":["as"]},{"Key":"optimization as","Fragments":["long"]},{"Key":"pass references","Fragments":["to"]},{"Key":"to local","Fragments":["variables?"]},{"Key":"Looks Great!","Fragments":["Keep"]},{"Key":"Great! Keep","Fragments":["up"]},{"Key":"Keep up","Fragments":["the"]},{"Key":"the good","Fragments":["work!"]},{"Key":" std::transform(lowerCaseCandidate.begin(),","Fragments":["lowerCaseCandidate.end(),"]},{"Key":"std::transform(lowerCaseCandidate.begin(), lowerCaseCandidate.end(),","Fragments":["lowerCaseCandidate.begin(),"]},{"Key":"lowerCaseCandidate.end(), lowerCaseCandidate.begin(),","Fragments":["std::tolower);"]},{"Key":"to conver","Fragments":["to"]},{"Key":"conver to","Fragments":["lowercase."]},{"Key":"is way","Fragments":["better","higher"]},{"Key":"way better","Fragments":["than"]},{"Key":"anything except","Fragments":["maybe"]},{"Key":"except maybe","Fragments":["including"]},{"Key":"maybe including","Fragments":["the"]},{"Key":"whole namespace","Fragments":["std"]},{"Key":"namespace std","Fragments":["when"]},{"Key":"std when","Fragments":["you"]},{"Key":"have easily","Fragments":["done"]},{"Key":"easily done","Fragments":["\"using"]},{"Key":"done \"using","Fragments":["std::string\""]},{"Key":"\"using std::string\"","Fragments":["etc."]},{"Key":"std::string\" etc.","Fragments":["You"]},{"Key":"etc. You","Fragments":["don't"]},{"Key":"use _that_","Fragments":["many"]},{"Key":"_that_ many","Fragments":["things"]},{"Key":"many things","Fragments":["in"]},{"Key":"in std","Fragments":["namespace."]},{"Key":"std namespace.","Fragments":["The"]},{"Key":"namespace. The","Fragments":["thing"]},{"Key":"did differently","Fragments":["than"]},{"Key":"differently than","Fragments":["me"]},{"Key":"than me","Fragments":["was"]},{"Key":"me was","Fragments":["use"]},{"Key":"was use","Fragments":["regular"]},{"Key":"expressions for","Fragments":["everything."]},{"Key":"for everything.","Fragments":["Good"]},{"Key":"everything. Good","Fragments":["job."]},{"Key":" Whew,","Fragments":["I"]},{"Key":"Whew, I","Fragments":["have"]},{"Key":"to disagree","Fragments":["with"]},{"Key":"that recommendation","Fragments":["pretty"]},{"Key":"recommendation pretty","Fragments":["strongly."]},{"Key":"pretty strongly.","Fragments":["If"]},{"Key":"strongly. If","Fragments":["you"]},{"Key":"find yourself","Fragments":["naming"]},{"Key":"yourself naming","Fragments":["something"]},{"Key":"naming something","Fragments":["other"]},{"Key":"something other","Fragments":["than"]},{"Key":"index \"i\",","Fragments":["the"]},{"Key":"\"i\", the","Fragments":["problem"]},{"Key":"that name,","Fragments":["not"]},{"Key":"name, not","Fragments":["this"]},{"Key":"one. And","Fragments":["if"]},{"Key":"if you've","Fragments":["got"]},{"Key":"got so","Fragments":["many"]},{"Key":"many deeply","Fragments":["nested"]},{"Key":"deeply nested","Fragments":["loops"]},{"Key":"nested loops","Fragments":["that"]},{"Key":"can't remember","Fragments":["if"]},{"Key":"remember if","Fragments":["\"i\""]},{"Key":"if \"i\"","Fragments":["has"]},{"Key":"\"i\" has","Fragments":["been"]},{"Key":"been used,","Fragments":["you"]},{"Key":"used, you","Fragments":["need,"]},{"Key":"you need,","Fragments":["at"]},{"Key":"need, at","Fragments":["a"]},{"Key":"minimum, some","Fragments":["sub-functions."]},{"Key":"some sub-functions.","Fragments":["For"]},{"Key":"sub-functions. For","Fragments":["me,"]},{"Key":"me, things","Fragments":["like"]},{"Key":"like i,","Fragments":["j,"]},{"Key":"i, j,","Fragments":["k,"]},{"Key":"j, k,","Fragments":["are"]},{"Key":"k, are","Fragments":["so"]},{"Key":"are so","Fragments":["ubiquitous"]},{"Key":"so ubiquitous","Fragments":["for"]},{"Key":"ubiquitous for","Fragments":["loop"]},{"Key":"loop indices","Fragments":["that"]},{"Key":"indices that","Fragments":["using"]},{"Key":"using anything","Fragments":["other"]},{"Key":"anything other","Fragments":["than"]},{"Key":"that implies","Fragments":["some"]},{"Key":"implies some","Fragments":["kind"]},{"Key":"of meaning.","Fragments":["While"]},{"Key":"meaning. While","Fragments":["iii"]},{"Key":"While iii","Fragments":["is"]},{"Key":"iii is","Fragments":["pretty"]},{"Key":"pretty clearly","Fragments":["meaningless,"]},{"Key":"clearly meaningless,","Fragments":["I'll"]},{"Key":"meaningless, I'll","Fragments":["grant"]},{"Key":"I'll grant","Fragments":["you,"]},{"Key":"grant you,","Fragments":["the"]},{"Key":"you, the","Fragments":["cost"]},{"Key":"the cost","Fragments":["in"]},{"Key":"cost in","Fragments":["reading"]},{"Key":"in reading","Fragments":["it,"]},{"Key":"reading it,","Fragments":["a"]},{"Key":"it, a","Fragments":["very"]},{"Key":"common task,","Fragments":["is"]},{"Key":"task, is","Fragments":["way"]},{"Key":"way higher","Fragments":["than"]},{"Key":"the comparatively","Fragments":["remote"]},{"Key":"comparatively remote","Fragments":["possibility"]},{"Key":"remote possibility","Fragments":["that"]},{"Key":"possibility that","Fragments":["someone"]},{"Key":"someone names","Fragments":["an"]},{"Key":"names an","Fragments":["otherwise"]},{"Key":"an otherwise","Fragments":["meaningful"]},{"Key":"otherwise meaningful","Fragments":["long-scoped"]},{"Key":"meaningful long-scoped","Fragments":["variable"]},{"Key":"long-scoped variable","Fragments":["\"i\"."]},{"Key":"variable \"i\".","Fragments":["Or"]},{"Key":"\"i\". Or","Fragments":["put"]},{"Key":"Or put","Fragments":["it"]},{"Key":"it this","Fragments":["way:"]},{"Key":"this way:","Fragments":["if"]},{"Key":"way: if","Fragments":["we"]},{"Key":"we put","Fragments":["in"]},{"Key":"in explicit","Fragments":["guards"]},{"Key":"explicit guards","Fragments":["against"]},{"Key":"guards against","Fragments":["every"]},{"Key":"against every","Fragments":["subtle"]},{"Key":"every subtle","Fragments":["code","code"]},{"Key":"subtle code","Fragments":["error,","error,"]},{"Key":"code error,","Fragments":["then","and"]},{"Key":"error, then","Fragments":["every"]},{"Key":"then every","Fragments":["time"]},{"Key":"time we","Fragments":["read"]},{"Key":"we read","Fragments":["the"]},{"Key":"code we","Fragments":["have"]},{"Key":"about every","Fragments":["subtle"]},{"Key":"error, and","Fragments":["that"]},{"Key":"that adds","Fragments":["a"]},{"Key":"adds a","Fragments":["lot"]},{"Key":"of maintainability","Fragments":["cost."]},{"Key":"have reverted","Fragments":["to"]},{"Key":"using single","Fragments":["letters"]},{"Key":"single letters","Fragments":["counters"]},{"Key":"letters counters","Fragments":["in"]},{"Key":"counters in","Fragments":["later"]},{"Key":"later exercises","Fragments":["for"]},{"Key":"exercises for","Fragments":["exactly"]},{"Key":"for exactly","Fragments":["the"]},{"Key":"the reasons","Fragments":["you"]},{"Key":"reasons you","Fragments":["listed,"]},{"Key":"you listed,","Fragments":["plus"]},{"Key":"listed, plus","Fragments":["the"]},{"Key":"plus the","Fragments":["slightly"]},{"Key":"the slightly","Fragments":["higher"]},{"Key":"slightly higher","Fragments":["cognitive"]},{"Key":"higher cognitive","Fragments":["load"]},{"Key":"cognitive load","Fragments":["while"]},{"Key":"load while","Fragments":["writing."]},{"Key":"This and","Fragments":["\u003ca"]},{"Key":"and \u003ca","Fragments":["href=http://www.learncpp.com/cpp-tutorial/29-hungarian-notation/\u003eHungarian"]},{"Key":"\u003ca href=http://www.learncpp.com/cpp-tutorial/29-hungarian-notation/\u003eHungarian","Fragments":["notation\u003c/a\u003e"]},{"Key":"href=http://www.learncpp.com/cpp-tutorial/29-hungarian-notation/\u003eHungarian notation\u003c/a\u003e","Fragments":["(e.g."]},{"Key":"notation\u003c/a\u003e (e.g.","Fragments":["```strFoo```,"]},{"Key":"(e.g. ```strFoo```,","Fragments":["```nBar```)"]},{"Key":"```strFoo```, ```nBar```)","Fragments":["were"]},{"Key":"```nBar```) were","Fragments":["experiments"]},{"Key":"were experiments","Fragments":["with"]},{"Key":"experiments with","Fragments":["new"]},{"Key":"with new","Fragments":["concepts."]},{"Key":"new concepts.","Fragments":["Hungarian"]},{"Key":"concepts. Hungarian","Fragments":["seems"]},{"Key":"Hungarian seems","Fragments":["nice"]},{"Key":"seems nice","Fragments":["for"]},{"Key":"for statically","Fragments":["typed"]},{"Key":"statically typed","Fragments":["languages,"]},{"Key":"typed languages,","Fragments":["```iii```'s"]},{"Key":"languages, ```iii```'s","Fragments":["not"]},{"Key":"```iii```'s not","Fragments":["so"]},{"Key":" []","Fragments":["(char"]},{"Key":"[] (char","Fragments":["c)"]},{"Key":"(char c)","Fragments":["{"]},{"Key":"Same for","Fragments":["`isspace`."]},{"Key":" Apostrophes","Fragments":["can"]},{"Key":"Apostrophes can","Fragments":["be"]},{"Key":"\u003e For","Fragments":["the"]},{"Key":"was pointed","Fragments":["out"]},{"Key":"the Grains","Fragments":["exercise."]},{"Key":"Grains exercise.","Fragments":["From"]},{"Key":"exercise. From","Fragments":["what"]},{"Key":"From what","Fragments":["I"]},{"Key":"I understand,","Fragments":["using"]},{"Key":"understand, using","Fragments":["a"]},{"Key":"actually __slower__","Fragments":["since"]},{"Key":"__slower__ since","Fragments":["it"]},{"Key":"be dereferenced","Fragments":["before"]},{"Key":"dereferenced before","Fragments":["it"]},{"Key":"used (like","Fragments":["a"]},{"Key":"(like a","Fragments":["regular"]},{"Key":"regular pointer),","Fragments":["while"]},{"Key":"pointer), while","Fragments":["using"]},{"Key":"while using","Fragments":["an"]},{"Key":"an `int`","Fragments":["(signed/unsigned)"]},{"Key":"`int` (signed/unsigned)","Fragments":["allows"]},{"Key":"(signed/unsigned) allows","Fragments":["the"]},{"Key":"allows the","Fragments":["compiler"]},{"Key":"(potentially) optimize","Fragments":["by"]},{"Key":"optimize by","Fragments":["storing"]},{"Key":"by storing","Fragments":["the"]},{"Key":"a register","Fragments":["for"]},{"Key":"register for","Fragments":["faster"]},{"Key":"So to","Fragments":["answer"]},{"Key":"question, using","Fragments":["`const"]},{"Key":"int\u0026` actually","Fragments":["makes"]},{"Key":"actually makes","Fragments":["this"]},{"Key":"this bit","Fragments":["of"]},{"Key":"code slower,","Fragments":["I"]},{"Key":"slower, I","Fragments":["just"]},{"Key":"just haven't","Fragments":["gotten"]},{"Key":"gotten around","Fragments":["to"]},{"Key":"around to","Fragments":["fixing"]},{"Key":"to fixing","Fragments":["my"]},{"Key":"fixing my","Fragments":["submissions"]},{"Key":"my submissions","Fragments":[":)"]},{"Key":" Please","Fragments":["get","tell"]},{"Key":"Please get","Fragments":["rid"]},{"Key":"the `make_pair`","Fragments":["everywhere."]},{"Key":"`make_pair` everywhere.","Fragments":["You"]},{"Key":"everywhere. You","Fragments":["can"]},{"Key":"can create","Fragments":["pairs"]},{"Key":"create pairs","Fragments":["in"]},{"Key":"pairs in","Fragments":["the"]},{"Key":"the maps:","Fragments":["brace"]},{"Key":"maps: brace","Fragments":["initialization:"]},{"Key":" std::make_pair(1,","Fragments":["\"fly\")"]},{"Key":" {1,","Fragments":["\"fly\"}"]},{"Key":"Please tell","Fragments":["me"]},{"Key":"me you","Fragments":["did"]},{"Key":"this for","Fragments":["fun."]},{"Key":"for fun.","Fragments":["It"]},{"Key":"fun. It","Fragments":["took"]},{"Key":"10 minutes","Fragments":["to"]},{"Key":"flow from","Fragments":["request"]},{"Key":"from request","Fragments":["to"]},{"Key":"request to","Fragments":["response."]},{"Key":"to response.","Fragments":["This"]},{"Key":"response. This","Fragments":["code"]},{"Key":"is littered","Fragments":["with"]},{"Key":"littered with","Fragments":["obfuscation,"]},{"Key":"with obfuscation,","Fragments":["two"]},{"Key":"obfuscation, two","Fragments":["class"]},{"Key":"two class","Fragments":["hierarachies,"]},{"Key":"class hierarachies,","Fragments":["and"]},{"Key":"hierarachies, and","Fragments":["boiler"]},{"Key":"and boiler","Fragments":["plate."]},{"Key":"boiler plate.","Fragments":["Do"]},{"Key":"plate. Do","Fragments":["you"]},{"Key":"need dynamic","Fragments":["dispatch"]},{"Key":"dynamic dispatch","Fragments":["just"]},{"Key":"dispatch just","Fragments":["to"]},{"Key":"achieve pattern","Fragments":["matching?"]},{"Key":" Salvaging","Fragments":["your"]},{"Key":"Salvaging your","Fragments":["approach"]},{"Key":"your approach","Fragments":["could"]},{"Key":"approach could","Fragments":["be"]},{"Key":"following way:","Fragments":["`classify`"]},{"Key":"way: `classify`","Fragments":["returns"]},{"Key":"`classify` returns","Fragments":["a"]},{"Key":"a `MessageType`","Fragments":["which"]},{"Key":"`MessageType` which","Fragments":["is"]},{"Key":"a `response`","Fragments":["function."]},{"Key":"`response` function.","Fragments":["This"]},{"Key":"This function","Fragments":["has"]},{"Key":"one `switch`","Fragments":["statement"]},{"Key":"`switch` statement","Fragments":["and"]},{"Key":"statement and","Fragments":["does"]},{"Key":"and does","Fragments":["the"]},{"Key":"as your","Fragments":["`Teenager`."]},{"Key":"your `Teenager`.","Fragments":["Much"]},{"Key":"`Teenager`. Much","Fragments":["nicer."]},{"Key":"extra credit","Fragments":["to"]},{"Key":"for random","Fragments":["name"]},{"Key":"name collisions,","Fragments":["and"]},{"Key":"collisions, and","Fragments":["believe"]},{"Key":"and believe","Fragments":["it"]},{"Key":"it or","Fragments":["not,"]},{"Key":"or not,","Fragments":["I"]},{"Key":"not, I","Fragments":["found"]},{"Key":"found one.","Fragments":["I"]},{"Key":"I would.","Fragments":["This"]},{"Key":"would. This","Fragments":["is"]},{"Key":"an important","Fragments":["point,"]},{"Key":"important point,","Fragments":["and"]},{"Key":"point, and","Fragments":["should"]},{"Key":"original test","Fragments":["suite!"]},{"Key":"1. I","Fragments":["should"]},{"Key":"considered when","Fragments":["I"]},{"Key":"wrote this.","Fragments":["Good"]},{"Key":"this. Good","Fragments":["catch."]},{"Key":"Good catch.","Fragments":["Addressed"]},{"Key":"catch. Addressed","Fragments":["in"]},{"Key":"Addressed in","Fragments":["next","next"]},{"Key":"this happens,","Fragments":["so"]},{"Key":"happens, so","Fragments":["I'm"]},{"Key":"pointed it","Fragments":["out."]},{"Key":"it out.","Fragments":["Addressed"]},{"Key":"out. Addressed","Fragments":["in"]},{"Key":"wrote it","Fragments":["I"]},{"Key":"it I","Fragments":["think"]},{"Key":"prefer it.","Fragments":["I"]},{"Key":"still often","Fragments":["try"]},{"Key":"often try","Fragments":["to"]},{"Key":"write functions","Fragments":["where"]},{"Key":"functions where","Fragments":["there"]},{"Key":"there aren't","Fragments":["breaks"]},{"Key":"aren't breaks","Fragments":["or"]},{"Key":"breaks or","Fragments":["returns"]},{"Key":"or returns","Fragments":["in"]},{"Key":"returns in","Fragments":["the"]},{"Key":"middle even","Fragments":["if"]},{"Key":"clear. I'll","Fragments":["keep"]},{"Key":"I'll keep","Fragments":["your"]},{"Key":"keep your","Fragments":["point"]},{"Key":"your point","Fragments":["in"]},{"Key":"point in","Fragments":["mind"]},{"Key":"mind for","Fragments":["the"]},{"Key":"Also appreciate","Fragments":["the"]},{"Key":"for copy_if.","Fragments":["I"]},{"Key":"copy_if. I","Fragments":["wasn't"]},{"Key":"this call","Fragments":["and"]},{"Key":"call and","Fragments":["spent"]},{"Key":"and spent","Fragments":["a"]},{"Key":"spent a","Fragments":["bunch"]},{"Key":"looking it","Fragments":["(and"]},{"Key":"it (and","Fragments":["function"]},{"Key":"(and function","Fragments":["pointers)."]},{"Key":"have probably","Fragments":["used"]},{"Key":"probably used","Fragments":["something"]},{"Key":"used something","Fragments":["bigger"]},{"Key":"something bigger","Fragments":["than"]},{"Key":"bigger than","Fragments":["an"]},{"Key":"than an","Fragments":["int."]},{"Key":"int. Other","Fragments":["than"]},{"Key":"that, a","Fragments":["simple"]},{"Key":"loop was","Fragments":["enough"]},{"Key":"was enough","Fragments":["to"]}],"prefix_len":2}