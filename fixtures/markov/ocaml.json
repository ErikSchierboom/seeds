{"Nodes":[{"Key":" ","Fragments":["Good","Ok,","Your","not","maybe","Your","Thanks!","Minor","Can","Ah,","Re:","Err,","The","One","Have","I","It's","Oh,","When","```","Warning","```","Any","Congratulations","From","```","val","is_suffix","```","The","The","That","Nice","Minor","-","-","Extra","I'm","I","I","on","...","fold","...","Btw","An","```","let","|","|","fold","```","Looks","Thanks","One","Also","Borrow","The","I","It","For","Good","```","$","...","Error:","Reference","...","```","I","Also","Thanks","If","let","Also","This","Can","Can","What's","What's","Why","This","The","Yeah,","Cleaned","It","Makes","Interestingly","While","You","I","(also,","It","Nice!","I","Did","It","Looks","1.","2.","Thanks!","I'd","The","I","The","```ocaml","let","|","|","```","Of","Is","I","I","This","Sure.","A","It","Removed","Let","I","*","*","`let...and`.","Personally","Strings","Well","I","Batteries","Well,","Some","#####","I","#####","My","Using","-","-","#####","Well,","Yes,","I","I","Yep,","My","Characters","That's","Personally","For","For","Other","Looks","I'm","No,","However,","Looks","A","It's","You","I","Well","Yeah,","True,","Is","FYI,","This","I","Looks","Why","Also,","Thank","Well","*","*","Looks","There's","There's","Your","I","I","The","The","-","-","Excellent!","Only","A","1.","2.","3.","One","First","Hi,","Not","Well,","I'm","Happy","Was","`factors_of","Note","Pieced","I","Apologies","Overall","You","```","let","|","|","```","Second","Stylistically","Thanks;","Any","Have","eg","```","\u003e","val","\u003e","-","\u003e","-","```","Great","I","It's","I","Nice.","-","-","-","-","This","How","Thanks","A","kind","```plain","on","except","unless","```","Very","Sometimes","```ocaml","let","|","|","```","Neither","Try","https://ocaml.janestreet.com/ocaml-core/109.08.00/doc/core/String.html","Perhaps,","Calling","Makes","I'm","I","Yes,","Er...","The","The","```ocaml","let","let","|","|","go","```","Hmm,","`let","let","|","|","go","Uhm,","And","Good","```ocaml","let","let","|","|","go","```","Certainly","val","is","val","You're","Let's","I'll","Ah,","I","Is","I'm","Did","I","I","OCaml","`let","```ocaml","let","let","let","```","These","Other","Indeed,","The","As","For","```ocaml","let","|","|","|","|","```","This","@jarrett","A","Good","`type","Indeed.","Just","I","The","I","@davon","This","Do","I","Your","About","In","Ok,","Thought","Looks","Tip:","```ocaml","let","|","|","```","Much","Note","Ah,","Instead","Is","Is","Good","`open","A","1.","2.","```ocaml","let","```","thanks","btw,","This","Wouldn't","It","That's","Another","I","That's","You've","The","Also","Not","Whoops,","I","That","So,","*","*","*","Once","This","That","I","Do","Personal","I","When","Take","There","I","The","Your","However","Good","Hi!","`isempty`","```","(*","let","```","or","```","let","```","Also,","And","If","https://ocaml.janestreet.com/ocaml-core/111.28.00/doc/core/#Core_string","I","But","In","Fold","Also","```","let","|","|","```","compiled","corebuild","Minor","Good","Only","Good","This","While","One","Instead","```","match","|","|","|","|","```","Additionally,","I","At","I","The","To","I","No","Btw,","I","This","I'd","You","Oh,","I've","The","Glad","My","I","The","Thanks!","I've","Core's","Yeah,","Does","I've","That's","To","What","Other","Isn't","I","Very","Have","I've","Hi!","I","You","I","It","If","Submitted","I'm","You","I","WRT","Doesn't","Concat","I","While","Looks"]},{"Key":" Good","Fragments":["point.","idea.","point,","point","point.","suggestion","to","point,"]},{"Key":"Good point.","Fragments":["I","Thanks!"]},{"Key":"point. I","Fragments":["guess"]},{"Key":"I guess","Fragments":["I","these","there's"]},{"Key":"guess I","Fragments":["was"]},{"Key":"I was","Fragments":["implementing","just","having","implementing","a","able","stuck","looking"]},{"Key":"was implementing","Fragments":["something","this!"]},{"Key":"implementing something","Fragments":["completely"]},{"Key":"something completely","Fragments":["stand-alone."]},{"Key":" Ok,","Fragments":["thanks,","fixed"]},{"Key":"Ok, thanks,","Fragments":["I"]},{"Key":"thanks, I","Fragments":["understand"]},{"Key":"I understand","Fragments":["now."]},{"Key":" Your","Fragments":["code","implementation","helper","pattern","solution"]},{"Key":"Your code","Fragments":["looks"]},{"Key":"code looks","Fragments":["good.","good","like"]},{"Key":"looks good.","Fragments":["One"]},{"Key":"good. One","Fragments":["question"]},{"Key":"One question","Fragments":["though:"]},{"Key":"question though:","Fragments":["why"]},{"Key":"though: why","Fragments":["do"]},{"Key":"why do","Fragments":["you"]},{"Key":"do you","Fragments":["have","use","mean"]},{"Key":"you have","Fragments":["a","experience","naming"]},{"Key":"have a","Fragments":["separate","lot","special","tendency","go"]},{"Key":"a separate","Fragments":["`Down`"]},{"Key":"separate `Down`","Fragments":["type"]},{"Key":"`Down` type","Fragments":["when"]},{"Key":"type when","Fragments":["it's"]},{"Key":"when it's","Fragments":["equivalent"]},{"Key":"it's equivalent","Fragments":["to"]},{"Key":"equivalent to","Fragments":["the"]},{"Key":"to the","Fragments":["`Tree.t`","Makefile.","example","problem","`@dagmar`","original.","length","code,","String"]},{"Key":"the `Tree.t`","Fragments":["type?"]},{"Key":" not","Fragments":["sure"]},{"Key":"not sure","Fragments":["why","how","of","compose","if","if"]},{"Key":"sure why","Fragments":["compiler","you"]},{"Key":"why compiler","Fragments":["complained"]},{"Key":"compiler complained","Fragments":["until"]},{"Key":"complained until","Fragments":["I"]},{"Key":"until I","Fragments":["put"]},{"Key":"I put","Fragments":["`to_rna'"]},{"Key":"put `to_rna'","Fragments":[":"]},{"Key":"`to_rna' :","Fragments":["dna"]},{"Key":": dna","Fragments":["-\u003e"]},{"Key":"dna -\u003e","Fragments":["rna`"]},{"Key":"-\u003e rna`","Fragments":["spec,"]},{"Key":" maybe","Fragments":["some"]},{"Key":"maybe some","Fragments":["one"]},{"Key":"some one","Fragments":["could"]},{"Key":"one could","Fragments":["explain"]},{"Key":"could explain","Fragments":["me?"]},{"Key":"Your implementation","Fragments":["of"]},{"Key":"implementation of","Fragments":["is_shouting","fold","`map`"]},{"Key":"of is_shouting","Fragments":["is"]},{"Key":"is_shouting is","Fragments":["brilliant."]},{"Key":"is brilliant.","Fragments":["Extremely"]},{"Key":"brilliant. Extremely","Fragments":["clever."]},{"Key":" Thanks!","Fragments":["If","I've","I"]},{"Key":"Thanks! If","Fragments":["OCaml"]},{"Key":"If OCaml","Fragments":["had"]},{"Key":"OCaml had","Fragments":["an"]},{"Key":"had an","Fragments":["`isAlpha`"]},{"Key":"an `isAlpha`","Fragments":["function,"]},{"Key":"`isAlpha` function,","Fragments":["it"]},{"Key":"function, it","Fragments":["would"]},{"Key":"it would","Fragments":["work","probably","be","not"]},{"Key":"would work","Fragments":["just"]},{"Key":"work just","Fragments":["as"]},{"Key":"just as","Fragments":["well"]},{"Key":"as well","Fragments":["alongside","use","as","have"]},{"Key":"well alongside","Fragments":["checking"]},{"Key":"alongside checking","Fragments":["the"]},{"Key":"checking the","Fragments":["string"]},{"Key":"the string","Fragments":["is","without","in","only","multiple","seems","need"]},{"Key":"string is","Fragments":["uppercase.","shouting?"]},{"Key":" Minor","Fragments":["style","nits:","issue"]},{"Key":"Minor style","Fragments":["point:"]},{"Key":"style point:","Fragments":["I"]},{"Key":"point: I","Fragments":["believe"]},{"Key":"I believe","Fragments":["lower_case_with_underscores","it's"]},{"Key":"believe lower_case_with_underscores","Fragments":["is"]},{"Key":"lower_case_with_underscores is","Fragments":["the"]},{"Key":"is the","Fragments":["preferred","inverse","library","n","meaning"]},{"Key":"the preferred","Fragments":["way"]},{"Key":"preferred way","Fragments":["in"]},{"Key":"way in","Fragments":["OCaml"]},{"Key":"in OCaml","Fragments":["for","source"]},{"Key":"OCaml for","Fragments":["functions)."]},{"Key":"for functions).","Fragments":["See"]},{"Key":"functions). See","Fragments":["for"]},{"Key":"See for","Fragments":["example"]},{"Key":"for example","Fragments":["[this"]},{"Key":"example [this","Fragments":["styleguide](http://caml.inria.fr/resources/doc/guides/guidelines.en.html)."]},{"Key":" Can","Fragments":["you","I","the"]},{"Key":"Can you","Fragments":["write","do","express"]},{"Key":"you write","Fragments":["this","`String.is_suffix","code"]},{"Key":"write this","Fragments":["without"]},{"Key":"this without","Fragments":["computing","regexp's"]},{"Key":"without computing","Fragments":["the"]},{"Key":"computing the","Fragments":["sorted"]},{"Key":"the sorted","Fragments":["lowercased"]},{"Key":"sorted lowercased","Fragments":["form"]},{"Key":"lowercased form","Fragments":["of"]},{"Key":"form of","Fragments":["`word`"]},{"Key":"of `word`","Fragments":["for","for"]},{"Key":"`word` for","Fragments":["every","every"]},{"Key":"for every","Fragments":["candidate?","candidate"]},{"Key":" Ah,","Fragments":["good","wait,","that's"]},{"Key":"Ah, good","Fragments":["point."]},{"Key":"good point.","Fragments":["Will"]},{"Key":"point. Will","Fragments":["switch"]},{"Key":"Will switch","Fragments":["to"]},{"Key":"switch to","Fragments":["snakecase."]},{"Key":" Re:","Fragments":["the"]},{"Key":"Re: the","Fragments":["recomputing"]},{"Key":"the recomputing","Fragments":["of"]},{"Key":"recomputing of","Fragments":["`word`"]},{"Key":"every candidate","Fragments":["-"]},{"Key":"candidate -","Fragments":["I"]},{"Key":"- I","Fragments":["think","think"]},{"Key":"I think","Fragments":["this","String.uppercase","we'd","I","I'll","that","you","it's","`String.is_empty","that's","it's","I'd","it","(but","I"]},{"Key":"think this","Fragments":["solution"]},{"Key":"this solution","Fragments":["already"]},{"Key":"solution already","Fragments":["prevents"]},{"Key":"already prevents","Fragments":["this,"]},{"Key":"prevents this,","Fragments":["unless"]},{"Key":"this, unless","Fragments":["I'm"]},{"Key":"unless I'm","Fragments":["missing"]},{"Key":"I'm missing","Fragments":["something?"]},{"Key":" Err,","Fragments":["yes,"]},{"Key":"Err, yes,","Fragments":["my"]},{"Key":"yes, my","Fragments":["bad."]},{"Key":" The","Fragments":["extensive","warning","Core","self-descriptive","only","if","if-else","`function`","only","long","rest","standard","blocking","most","lack","unit","~f","pattern"]},{"Key":"The extensive","Fragments":["use"]},{"Key":"extensive use","Fragments":["of"]},{"Key":"use of","Fragments":["pattern","`function`","polymorphic","labels","slicing"]},{"Key":"of pattern","Fragments":["matching","matching"]},{"Key":"pattern matching","Fragments":["makes","in","could","with","to","because"]},{"Key":"matching makes","Fragments":["each"]},{"Key":"makes each","Fragments":["function"]},{"Key":"each function","Fragments":["very","can"]},{"Key":"function very","Fragments":["clean"]},{"Key":"very clean","Fragments":["and"]},{"Key":"clean and","Fragments":["readable.","simple."]},{"Key":"and readable.","Fragments":["I"]},{"Key":"readable. I","Fragments":["like"]},{"Key":"I like","Fragments":["how","the","the","Batteries","the","how","how","your","it.","how","the"]},{"Key":"like how","Fragments":["easily","common","`divisable`","you"]},{"Key":"how easily","Fragments":["each"]},{"Key":"easily each","Fragments":["function"]},{"Key":"function can","Fragments":["be"]},{"Key":"can be","Fragments":["understood","tempting","confusing.","ended","written","an","left","written","written","replaced","rewritten","replaced"]},{"Key":"be understood","Fragments":["on"]},{"Key":"understood on","Fragments":["its"]},{"Key":"on its","Fragments":["own"]},{"Key":"its own","Fragments":["in","definition."]},{"Key":"own in","Fragments":["isolation."]},{"Key":"in isolation.","Fragments":["It"]},{"Key":"isolation. It","Fragments":["can"]},{"Key":"It can","Fragments":["be"]},{"Key":"be tempting","Fragments":["to"]},{"Key":"tempting to","Fragments":["extract"]},{"Key":"to extract","Fragments":["the"]},{"Key":"extract the","Fragments":["repetitious"]},{"Key":"the repetitious","Fragments":["code"]},{"Key":"repetitious code","Fragments":["into"]},{"Key":"code into","Fragments":["helper","the"]},{"Key":"into helper","Fragments":["functions","functions."]},{"Key":"helper functions","Fragments":["or","which","over","`question`"]},{"Key":"functions or","Fragments":["define"]},{"Key":"or define","Fragments":["more"]},{"Key":"define more","Fragments":["of"]},{"Key":"more of","Fragments":["these"]},{"Key":"of these","Fragments":["functions","functions","functions"]},{"Key":"these functions","Fragments":["in","in","are","can"]},{"Key":"functions in","Fragments":["terms","terms","terms","terms","this"]},{"Key":"in terms","Fragments":["of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"terms of","Fragments":["the","fold","`fold`...","`foldl`?","readability.","`fold`,","`fold`.","`fold`","fold.","that.","short-circuiting"]},{"Key":"of the","Fragments":["others,","coolest","other","sentence.","characters,","functions","responses.","alternative","stdlib","Galium","modules","`utils/`","machinery","lists","domain,","implementation","functions","challenges","string","logic","final","code.","file.","function","Option","first","file,","project,","time","problems","functions","other","list.","more","nested","`~f:`","available"]},{"Key":"the others,","Fragments":["but"]},{"Key":"others, but","Fragments":["the"]},{"Key":"but the","Fragments":["resulting","exercise"]},{"Key":"the resulting","Fragments":["code"]},{"Key":"resulting code","Fragments":["wouldn't"]},{"Key":"code wouldn't","Fragments":["be"]},{"Key":"wouldn't be","Fragments":["as"]},{"Key":"be as","Fragments":["readable"]},{"Key":"as readable","Fragments":["at"]},{"Key":"readable at","Fragments":["a"]},{"Key":"at a","Fragments":["glance.","time?","better"]},{"Key":" One","Fragments":["minor","thing","of","really"]},{"Key":"One minor","Fragments":["thing"]},{"Key":"minor thing","Fragments":["that"]},{"Key":"thing that","Fragments":["could","would"]},{"Key":"that could","Fragments":["improve","match","replace"]},{"Key":"could improve","Fragments":["readability"]},{"Key":"improve readability","Fragments":["a"]},{"Key":"readability a","Fragments":["bit","lot"]},{"Key":"a bit","Fragments":["more:","difficult","getting","of","ugly","with","more","curious","clunky","of","less","odd","more"]},{"Key":"bit more:","Fragments":["consider"]},{"Key":"more: consider","Fragments":["renaming"]},{"Key":"consider renaming","Fragments":["the"]},{"Key":"renaming the","Fragments":["`l`"]},{"Key":"the `l`","Fragments":["variables"]},{"Key":"`l` variables","Fragments":["to"]},{"Key":"variables to","Fragments":["something"]},{"Key":"to something","Fragments":["like","you"]},{"Key":"something like","Fragments":["`lst`","`String.for_all`","`Core.String`","`String.for_all"]},{"Key":"like `lst`","Fragments":["or"]},{"Key":"`lst` or","Fragments":["`xs`."]},{"Key":" Have","Fragments":["you","a","you"]},{"Key":"Have you","Fragments":["considered","considered","considered"]},{"Key":"you considered","Fragments":["calling","refactoring","moving"]},{"Key":"considered calling","Fragments":["your"]},{"Key":"calling your","Fragments":["own"]},{"Key":"your own","Fragments":["`append`"]},{"Key":"own `append`","Fragments":["function"]},{"Key":"`append` function","Fragments":["in"]},{"Key":"function in","Fragments":["`map`","contains_a_letter."]},{"Key":"in `map`","Fragments":["rather"]},{"Key":"`map` rather","Fragments":["than"]},{"Key":"rather than","Fragments":["`@`?","sentences).","throwing","if","*what"]},{"Key":"than `@`?","Fragments":["That"]},{"Key":"`@`? That","Fragments":["would"]},{"Key":"That would","Fragments":["help","provide"]},{"Key":"would help","Fragments":["reduce"]},{"Key":"help reduce","Fragments":["dependence","the"]},{"Key":"reduce dependence","Fragments":["on"]},{"Key":"dependence on","Fragments":["the"]},{"Key":"on the","Fragments":["pervasives.","helper","invariant","filter","other"]},{"Key":" I","Fragments":["used","also","found","noticed","wasn't","like","did","believe","started","compared","can't","do","see","didn't","never","feel","think","like","also","was","see","don't","think","just","can","haven't","have","have","would","rewrote","suspect","would","agree,","like","assume","thought","use","would","have","noticed","don't","modified","hope","see","tried"]},{"Key":"I used","Fragments":["exception","Core","this","a","Core's"]},{"Key":"used exception","Fragments":["to"]},{"Key":"exception to","Fragments":["complete"]},{"Key":"to complete","Fragments":["this"]},{"Key":"complete this","Fragments":["task,"]},{"Key":"this task,","Fragments":["I'd"]},{"Key":"task, I'd","Fragments":["better"]},{"Key":"I'd better","Fragments":["find"]},{"Key":"better find","Fragments":["another"]},{"Key":"find another","Fragments":["way."]},{"Key":" It's","Fragments":["a","common","simple."]},{"Key":"It's a","Fragments":["good","small"]},{"Key":"a good","Fragments":["solution,","thing...","idea","reason"]},{"Key":"good solution,","Fragments":["though"]},{"Key":"solution, though","Fragments":["not"]},{"Key":"though not","Fragments":["terribly"]},{"Key":"not terribly","Fragments":["efficient"]},{"Key":"terribly efficient","Fragments":["since"]},{"Key":"efficient since","Fragments":["you"]},{"Key":"since you","Fragments":["traverse"]},{"Key":"you traverse","Fragments":["(part"]},{"Key":"traverse (part","Fragments":["of)"]},{"Key":"(part of)","Fragments":["both"]},{"Key":"of) both","Fragments":["lists"]},{"Key":"both lists","Fragments":["twice","more"]},{"Key":"lists twice","Fragments":["(once"]},{"Key":"twice (once","Fragments":["for"]},{"Key":"(once for","Fragments":["count"]},{"Key":"for count","Fragments":["and"]},{"Key":"count and","Fragments":["once"]},{"Key":"and once","Fragments":["for"]},{"Key":"once for","Fragments":["take)."]},{"Key":"for take).","Fragments":["For"]},{"Key":"take). For","Fragments":["smaller"]},{"Key":"For smaller","Fragments":["lists"]},{"Key":"smaller lists","Fragments":["this"]},{"Key":"lists this","Fragments":["implementation"]},{"Key":"this implementation","Fragments":["is","because"]},{"Key":"implementation is","Fragments":["certainly","slow,"]},{"Key":"is certainly","Fragments":["better"]},{"Key":"certainly better","Fragments":["(because"]},{"Key":"better (because","Fragments":["easier"]},{"Key":"(because easier","Fragments":["to"]},{"Key":"easier to","Fragments":["read)","read.","learn","read","use"]},{"Key":"to read)","Fragments":["but"]},{"Key":"read) but","Fragments":["if"]},{"Key":"but if","Fragments":["this"]},{"Key":"if this","Fragments":["would","is","is"]},{"Key":"this would","Fragments":["really"]},{"Key":"would really","Fragments":["be"]},{"Key":"really be","Fragments":["used","useful"]},{"Key":"be used","Fragments":["on","with","functionally."]},{"Key":"used on","Fragments":["actual"]},{"Key":"on actual","Fragments":["full-chromosome-length"]},{"Key":"actual full-chromosome-length","Fragments":["DNA"]},{"Key":"full-chromosome-length DNA","Fragments":["sequences"]},{"Key":"DNA sequences","Fragments":["the"]},{"Key":"sequences the","Fragments":["efficiency"]},{"Key":"the efficiency","Fragments":["would"]},{"Key":"efficiency would","Fragments":["matter"]},{"Key":"would matter","Fragments":["greatly."]},{"Key":" Oh,","Fragments":["I","I"]},{"Key":"Oh, I","Fragments":["totally","was"]},{"Key":"I totally","Fragments":["didn't","forgot"]},{"Key":"totally didn't","Fragments":["notice"]},{"Key":"didn't notice","Fragments":["the"]},{"Key":"notice the","Fragments":["\"labels"]},{"Key":"the \"labels","Fragments":["omitted\""]},{"Key":"\"labels omitted\"","Fragments":["warning"]},{"Key":"omitted\" warning","Fragments":["on"]},{"Key":"warning on","Fragments":["my"]},{"Key":"on my","Fragments":["solution,"]},{"Key":"my solution,","Fragments":["probably"]},{"Key":"solution, probably","Fragments":["because"]},{"Key":"probably because","Fragments":["I"]},{"Key":"because I","Fragments":["was","think","couldn't"]},{"Key":"was just","Fragments":["so"]},{"Key":"just so","Fragments":["grateful"]},{"Key":"so grateful","Fragments":["for"]},{"Key":"grateful for","Fragments":["the"]},{"Key":"for the","Fragments":["tests","suggestion,","reasons","exercism","remarks.","tips.","type","nested","tip!","same","String"]},{"Key":"the tests","Fragments":["passing!","yet:","pass","when","in","do","just"]},{"Key":"tests passing!","Fragments":["OCaml"]},{"Key":"passing! OCaml","Fragments":["is"]},{"Key":"OCaml is","Fragments":["a","the","a","fast."]},{"Key":"is a","Fragments":["bit","`Char.is_alpha`","matter","nested-let","minor","strict","known","solution","cleaner","fundamental","label,"]},{"Key":"bit difficult","Fragments":["to"]},{"Key":"difficult to","Fragments":["wrap","read"]},{"Key":"to wrap","Fragments":["my"]},{"Key":"wrap my","Fragments":["head"]},{"Key":"my head","Fragments":["around,","against"]},{"Key":"head around,","Fragments":["but"]},{"Key":"around, but","Fragments":["I"]},{"Key":"but I","Fragments":["guess","found","see","like","like","get","couldn't","find"]},{"Key":"guess these","Fragments":["labels"]},{"Key":"these labels","Fragments":["are"]},{"Key":"labels are","Fragments":["a"]},{"Key":"are a","Fragments":["good"]},{"Key":" When","Fragments":["this","I"]},{"Key":"When this","Fragments":["first"]},{"Key":"this first","Fragments":["compiles"]},{"Key":"first compiles","Fragments":["I"]},{"Key":"compiles I","Fragments":["get"]},{"Key":"I get","Fragments":["a","the","in"]},{"Key":"get a","Fragments":["warning:"]},{"Key":" Warning","Fragments":["6:"]},{"Key":"Warning 6:","Fragments":["labels"]},{"Key":"6: labels","Fragments":["were"]},{"Key":"labels were","Fragments":["omitted"]},{"Key":"were omitted","Fragments":["in"]},{"Key":"omitted in","Fragments":["the"]},{"Key":"in the","Fragments":["application","application","`nucleotide_counts`","file","standard","last","Makefile","toplevel","language","language","correct","head","sake","sake","scope","track","pipeline","next"]},{"Key":"the application","Fragments":["of","of"]},{"Key":"application of","Fragments":["this","a"]},{"Key":"of this","Fragments":["function.","exercise."]},{"Key":" Any","Fragments":["idea","suggestions"]},{"Key":"Any idea","Fragments":["what"]},{"Key":"idea what","Fragments":["I","nice"]},{"Key":"what I","Fragments":["need","want","get"]},{"Key":"I need","Fragments":["to"]},{"Key":"need to","Fragments":["do","take","be","be","write"]},{"Key":"to do","Fragments":["to","that","that.","weird","this.","it","premature","the","that"]},{"Key":"do to","Fragments":["get"]},{"Key":"to get","Fragments":["rid","conflicts","around","all"]},{"Key":"get rid","Fragments":["of"]},{"Key":"rid of","Fragments":["this?"]},{"Key":"of this?","Fragments":["Is"]},{"Key":"this? Is","Fragments":["it"]},{"Key":"Is it","Fragments":["about","cheating"]},{"Key":"it about","Fragments":["type"]},{"Key":"about type","Fragments":["annotations"]},{"Key":"type annotations","Fragments":["on","or"]},{"Key":"annotations on","Fragments":["the"]},{"Key":"the helper","Fragments":["functions?"]},{"Key":" Congratulations","Fragments":["on"]},{"Key":"Congratulations on","Fragments":["being"]},{"Key":"on being","Fragments":["the"]},{"Key":"being the","Fragments":["first"]},{"Key":"the first","Fragments":["to","program","list).","predicate"]},{"Key":"first to","Fragments":["try"]},{"Key":"to try","Fragments":["an","out"]},{"Key":"try an","Fragments":["OCaml"]},{"Key":"an OCaml","Fragments":["exercise."]},{"Key":" From","Fragments":["the"]},{"Key":"From the","Fragments":["OCaml"]},{"Key":"the OCaml","Fragments":["[Core.String","doc"]},{"Key":"OCaml [Core.String","Fragments":["docs](https://ocaml.janestreet.com/ocaml-core/latest/doc/core_kernel/Core_string.html):"]},{"Key":" val","Fragments":["is_suffix","a","length","length"]},{"Key":"val is_suffix","Fragments":[":"]},{"Key":"is_suffix :","Fragments":["t"]},{"Key":": t","Fragments":["-\u003e"]},{"Key":"t -\u003e","Fragments":["suffix:t","go","go","go","lfold"]},{"Key":"-\u003e suffix:t","Fragments":["-\u003e"]},{"Key":"suffix:t -\u003e","Fragments":["bool"]},{"Key":" is_suffix","Fragments":["s"]},{"Key":"is_suffix s","Fragments":["~suffix"]},{"Key":"s ~suffix","Fragments":["returns"]},{"Key":"~suffix returns","Fragments":["true"]},{"Key":"returns true","Fragments":["if"]},{"Key":"true if","Fragments":["s"]},{"Key":"if s","Fragments":["ends"]},{"Key":"s ends","Fragments":["with"]},{"Key":"ends with","Fragments":["suffix."]},{"Key":"The warning","Fragments":["here"]},{"Key":"warning here","Fragments":["says"]},{"Key":"here says","Fragments":["you're"]},{"Key":"says you're","Fragments":["omitting"]},{"Key":"you're omitting","Fragments":["a"]},{"Key":"omitting a","Fragments":["label"]},{"Key":"a label","Fragments":["in"]},{"Key":"label in","Fragments":["the"]},{"Key":"of a","Fragments":["function","huge","cleaner","type","let","lot","DSL","(normal)"]},{"Key":"a function","Fragments":["and","that","comes","to","you"]},{"Key":"function and","Fragments":["that's"]},{"Key":"and that's","Fragments":["exactly","something","been"]},{"Key":"that's exactly","Fragments":["what"]},{"Key":"exactly what","Fragments":["you're"]},{"Key":"what you're","Fragments":["doing"]},{"Key":"you're doing","Fragments":["by"]},{"Key":"doing by","Fragments":["saying"]},{"Key":"by saying","Fragments":["`String.is_suffix"]},{"Key":"saying `String.is_suffix","Fragments":["s"]},{"Key":"`String.is_suffix s","Fragments":["\"?\"`,","~suffix:\"?\"`"]},{"Key":"s \"?\"`,","Fragments":["because"]},{"Key":"\"?\"`, because","Fragments":["you"]},{"Key":"because you","Fragments":["don't"]},{"Key":"you don't","Fragments":["pass","actually","have","really","seem"]},{"Key":"don't pass","Fragments":["`\"?\"`"]},{"Key":"pass `\"?\"`","Fragments":["using"]},{"Key":"`\"?\"` using","Fragments":["the"]},{"Key":"using the","Fragments":["label.","match","same","Std","Core"]},{"Key":"the label.","Fragments":["If"]},{"Key":"label. If","Fragments":["you"]},{"Key":"If you","Fragments":["write","define"]},{"Key":"write `String.is_suffix","Fragments":["s"]},{"Key":"s ~suffix:\"?\"`","Fragments":["the"]},{"Key":"~suffix:\"?\"` the","Fragments":["warning"]},{"Key":"the warning","Fragments":["goes","generated"]},{"Key":"warning goes","Fragments":["away."]},{"Key":"The Core","Fragments":["convention"]},{"Key":"Core convention","Fragments":["is"]},{"Key":"convention is","Fragments":["to"]},{"Key":"is to","Fragments":["be","never","never","never"]},{"Key":"to be","Fragments":["explicit","in","`ask`","slightly","able","used","seen","named","rather","trimmed","`go","so","harder","discouraged.","hard","working","matched.","a"]},{"Key":"be explicit","Fragments":["about"]},{"Key":"explicit about","Fragments":["labels"]},{"Key":"about labels","Fragments":["as"]},{"Key":"labels as","Fragments":["it"]},{"Key":"as it","Fragments":["makes","seems"]},{"Key":"it makes","Fragments":["code","code"]},{"Key":"makes code","Fragments":["easier","easier"]},{"Key":"code easier","Fragments":["to","to"]},{"Key":"to read.","Fragments":["It"]},{"Key":"read. It","Fragments":["takes"]},{"Key":"It takes","Fragments":["a"]},{"Key":"takes a","Fragments":["bit"]},{"Key":"bit getting","Fragments":["used"]},{"Key":"getting used","Fragments":["to","to..."]},{"Key":"used to","Fragments":["but"]},{"Key":"to but","Fragments":["it"]},{"Key":"but it","Fragments":["does","also","doesn't","makes"]},{"Key":"it does","Fragments":["make"]},{"Key":"does make","Fragments":["the"]},{"Key":"make the","Fragments":["meaning","solution","code","code"]},{"Key":"the meaning","Fragments":["of","of"]},{"Key":"meaning of","Fragments":["code","the"]},{"Key":"of code","Fragments":["much","I"]},{"Key":"code much","Fragments":["clearer."]},{"Key":"much clearer.","Fragments":["Labels"]},{"Key":"clearer. Labels","Fragments":["are"]},{"Key":"Labels are","Fragments":["one"]},{"Key":"are one","Fragments":["of"]},{"Key":"one of","Fragments":["the","the","the","them","the"]},{"Key":"the coolest","Fragments":["features"]},{"Key":"coolest features","Fragments":["of"]},{"Key":"features of","Fragments":["OCaml"]},{"Key":"of OCaml","Fragments":["btw"]},{"Key":"OCaml btw","Fragments":["as"]},{"Key":"btw as","Fragments":["they"]},{"Key":"as they","Fragments":["let"]},{"Key":"they let","Fragments":["you"]},{"Key":"let you","Fragments":["write"]},{"Key":"write code","Fragments":["like"]},{"Key":"code like","Fragments":["`s"]},{"Key":"like `s","Fragments":["|\u003e"]},{"Key":"`s |\u003e","Fragments":["String.is_suffix"]},{"Key":"|\u003e String.is_suffix","Fragments":["~suffix:\"?\"`"]},{"Key":"String.is_suffix ~suffix:\"?\"`","Fragments":["without"]},{"Key":"~suffix:\"?\"` without","Fragments":["always"]},{"Key":"without always","Fragments":["forcing"]},{"Key":"always forcing","Fragments":["the"]},{"Key":"forcing the","Fragments":["arguments"]},{"Key":"the arguments","Fragments":["of"]},{"Key":"arguments of","Fragments":["`String.is_suffix`"]},{"Key":"of `String.is_suffix`","Fragments":["to"]},{"Key":"`String.is_suffix` to","Fragments":["be"]},{"Key":"be in","Fragments":["a"]},{"Key":"in a","Fragments":["particular"]},{"Key":"a particular","Fragments":["order.","reason","reason"]},{"Key":" That","Fragments":["does","said,","said,"]},{"Key":"That does","Fragments":["look"]},{"Key":"does look","Fragments":["like"]},{"Key":"look like","Fragments":["it","it"]},{"Key":"like it","Fragments":["will","might","viable","has","should","does,"]},{"Key":"it will","Fragments":["take"]},{"Key":"will take","Fragments":["a"]},{"Key":"take a","Fragments":["bit","look","look"]},{"Key":"bit of","Fragments":["getting","trial"]},{"Key":"of getting","Fragments":["used","around"]},{"Key":"used to...","Fragments":["but"]},{"Key":"to... but","Fragments":["it"]},{"Key":"it also","Fragments":["looks","saves"]},{"Key":"also looks","Fragments":["like"]},{"Key":"looks like","Fragments":["it","I","so"]},{"Key":"it might","Fragments":["come"]},{"Key":"might come","Fragments":["in","in"]},{"Key":"come in","Fragments":["quite","handy."]},{"Key":"in quite","Fragments":["handy."]},{"Key":"quite handy.","Fragments":["Submitted"]},{"Key":"handy. Submitted","Fragments":["a"]},{"Key":"Submitted a","Fragments":["new"]},{"Key":"a new","Fragments":["version"]},{"Key":"new version","Fragments":["that"]},{"Key":"version that","Fragments":["makes"]},{"Key":"that makes","Fragments":["`is_silence`","a"]},{"Key":"makes `is_silence`","Fragments":["points-free"]},{"Key":"`is_silence` points-free","Fragments":["using"]},{"Key":"points-free using","Fragments":["a"]},{"Key":"using a","Fragments":["label.","type","different","higher","predicate"]},{"Key":" Nice","Fragments":["work."]},{"Key":"Nice work.","Fragments":["I"]},{"Key":"work. I","Fragments":["notice"]},{"Key":"I notice","Fragments":["you"]},{"Key":"notice you","Fragments":["even"]},{"Key":"you even","Fragments":["did"]},{"Key":"even did","Fragments":["`for_all`."]},{"Key":"did `for_all`.","Fragments":["Out"]},{"Key":"`for_all`. Out","Fragments":["of"]},{"Key":"Out of","Fragments":["curiosity"]},{"Key":"of curiosity","Fragments":["were"]},{"Key":"curiosity were","Fragments":["you"]},{"Key":"were you","Fragments":["intending"]},{"Key":"you intending","Fragments":["to"]},{"Key":"intending to","Fragments":["use"]},{"Key":"to use","Fragments":["it","`fold`","a","`float_of_int`","the","Re2","`function`.","the","`Core`.","the","`String.is_suffix`","it","it.","`if...else`"]},{"Key":"use it","Fragments":["to","for","as"]},{"Key":"it to","Fragments":["help","get"]},{"Key":"to help","Fragments":["implement","you.","me"]},{"Key":"help implement","Fragments":["one"]},{"Key":"implement one","Fragments":["of"]},{"Key":"the other","Fragments":["functions?","functions","hand","functions.","functions","functions","operations"]},{"Key":" -","Fragments":["Pattern","Avoid","Differentiate","Help","in","move",":",":","Your","Instead","You","I"]},{"Key":"- Pattern","Fragments":["matching"]},{"Key":"Pattern matching","Fragments":["could"]},{"Key":"matching could","Fragments":["be","benefit"]},{"Key":"could be","Fragments":["cleaner","words","written"]},{"Key":"be cleaner","Fragments":["with"]},{"Key":"cleaner with","Fragments":["the"]},{"Key":"with the","Fragments":["aid","Str","standard","other","year","standard","previously"]},{"Key":"the aid","Fragments":["of"]},{"Key":"aid of","Fragments":["`function`"]},{"Key":"of `function`","Fragments":["instead","for"]},{"Key":"`function` instead","Fragments":["of"]},{"Key":"instead of","Fragments":["`match`.","a","several","`BatString.fold_left`","`open","things","`List.fold","explicit","pattern","`\u003e\u003e|`"]},{"Key":"of `match`.","Fragments":["Currying"]},{"Key":"`match`. Currying","Fragments":["may"]},{"Key":"Currying may","Fragments":["help"]},{"Key":"may help","Fragments":["too.","avoid"]},{"Key":"- Avoid","Fragments":["using"]},{"Key":"Avoid using","Fragments":["`head`"]},{"Key":"using `head`","Fragments":["and"]},{"Key":"`head` and","Fragments":["`tail`"]},{"Key":"and `tail`","Fragments":["for"]},{"Key":"`tail` for","Fragments":["binding"]},{"Key":"for binding","Fragments":["names."]},{"Key":"binding names.","Fragments":["They're"]},{"Key":"names. They're","Fragments":["well-known"]},{"Key":"They're well-known","Fragments":["functions,"]},{"Key":"well-known functions,","Fragments":["so"]},{"Key":"functions, so","Fragments":["it"]},{"Key":"so it","Fragments":["can","looks"]},{"Key":"it can","Fragments":["be","be","look"]},{"Key":" Extra","Fragments":["credit:"]},{"Key":"Extra credit:","Fragments":["refactor"]},{"Key":"credit: refactor","Fragments":["your"]},{"Key":"refactor your","Fragments":["`rec`"]},{"Key":"your `rec`","Fragments":["functions"]},{"Key":"`rec` functions","Fragments":["to"]},{"Key":"functions to","Fragments":["use","help"]},{"Key":"use `fold`","Fragments":["instead"]},{"Key":"`fold` instead","Fragments":["(except"]},{"Key":"instead (except","Fragments":["`fold`"]},{"Key":"(except `fold`","Fragments":["of"]},{"Key":"`fold` of","Fragments":["course)."]},{"Key":" I'm","Fragments":["thoughtful","a","new","not","not","pretty"]},{"Key":"I'm thoughtful","Fragments":["about"]},{"Key":"thoughtful about","Fragments":["this"]},{"Key":"about this","Fragments":["implementation"]},{"Key":"implementation because","Fragments":["I"]},{"Key":"think String.uppercase","Fragments":["and"]},{"Key":"String.uppercase and","Fragments":["lowercase"]},{"Key":"and lowercase","Fragments":["only","on"]},{"Key":"lowercase only","Fragments":["handle"]},{"Key":"only handle","Fragments":["ASCII"]},{"Key":"handle ASCII","Fragments":["(maybe"]},{"Key":"ASCII (maybe","Fragments":["latin-1?"]},{"Key":"(maybe latin-1?","Fragments":["not"]},{"Key":"latin-1? not","Fragments":["sure)."]},{"Key":"not sure).","Fragments":["In"]},{"Key":"sure). In","Fragments":["a"]},{"Key":"In a","Fragments":["real"]},{"Key":"a real","Fragments":["app","project)"]},{"Key":"real app","Fragments":["I"]},{"Key":"app I","Fragments":["think"]},{"Key":"think we'd","Fragments":["want"]},{"Key":"we'd want","Fragments":["to"]},{"Key":"want to","Fragments":["use","do.","mention"]},{"Key":"use a","Fragments":["string","record","local"]},{"Key":"a string","Fragments":["library","is","does"]},{"Key":"string library","Fragments":["that"]},{"Key":"library that","Fragments":["supports"]},{"Key":"that supports","Fragments":["unicode."]},{"Key":"I also","Fragments":["tried","like","like"]},{"Key":"also tried","Fragments":["playing"]},{"Key":"tried playing","Fragments":["with"]},{"Key":"playing with","Fragments":["the"]},{"Key":"the Str","Fragments":["package,"]},{"Key":"Str package,","Fragments":["but"]},{"Key":"package, but","Fragments":["I"]},{"Key":"I found","Fragments":["that","the","Core's","`add_multi`"]},{"Key":"found that","Fragments":["required"]},{"Key":"that required","Fragments":["a"]},{"Key":"required a","Fragments":["tweak"]},{"Key":"a tweak","Fragments":["to"]},{"Key":"tweak to","Fragments":["the"]},{"Key":"the Makefile.","Fragments":["It"]},{"Key":"Makefile. It","Fragments":["also"]},{"Key":"It also","Fragments":["didn't"]},{"Key":"also didn't","Fragments":["make"]},{"Key":"didn't make","Fragments":["the"]},{"Key":"the solution","Fragments":["any"]},{"Key":"solution any","Fragments":["shorter."]},{"Key":"found the","Fragments":["idea","problems"]},{"Key":"the idea","Fragments":["of","of","of"]},{"Key":"idea of","Fragments":["using","using","`let"]},{"Key":"of using","Fragments":["to","`fold`","a","String.mem"]},{"Key":"using to","Fragments":["implement"]},{"Key":"to implement","Fragments":["all","each","most","them","it","`shouting`","it","the","this"]},{"Key":"implement all","Fragments":["the"]},{"Key":"all the","Fragments":["other","same,","tests","other","possible"]},{"Key":"other functions","Fragments":["in","in","in"]},{"Key":"of fold","Fragments":["very","could"]},{"Key":"fold very","Fragments":["instructive."]},{"Key":"very instructive.","Fragments":["I"]},{"Key":"instructive. I","Fragments":["also"]},{"Key":"also like","Fragments":["your","that"]},{"Key":"like your","Fragments":["code","approach"]},{"Key":"your code","Fragments":["layout"]},{"Key":"code layout","Fragments":["and"]},{"Key":"layout and","Fragments":["variable"]},{"Key":"and variable","Fragments":["names."]},{"Key":"variable names.","Fragments":["It's"]},{"Key":"names. It's","Fragments":["all"]},{"Key":"It's all","Fragments":["very"]},{"Key":"all very","Fragments":["elegantly"]},{"Key":"very elegantly","Fragments":["done."]},{"Key":" on","Fragments":["line","every"]},{"Key":"on line","Fragments":["8","26?"]},{"Key":"line 8","Fragments":["you"]},{"Key":"8 you","Fragments":["can"]},{"Key":"you can","Fragments":["use","use","declare","use","skip","use","indeed","waste","write","use","use","write","use","define"]},{"Key":"can use","Fragments":["field","different","in","String.exists","`~foo`","`Char.to_string`.","`function`"]},{"Key":"use field","Fragments":["punning"]},{"Key":"field punning","Fragments":["to"]},{"Key":"punning to","Fragments":["not"]},{"Key":"to not","Fragments":["duplicate"]},{"Key":"not duplicate","Fragments":["~f"]},{"Key":"duplicate ~f","Fragments":["twice:"]},{"Key":" fold","Fragments":["~init:(f","~init:(f"]},{"Key":"fold ~init:(f","Fragments":["accum","accum","init"]},{"Key":"~init:(f accum","Fragments":["x)","x)"]},{"Key":"accum x)","Fragments":["**~f**","~f:f"]},{"Key":"x) **~f**","Fragments":["xs'"]},{"Key":" Btw","Fragments":["I"]},{"Key":"Btw I","Fragments":["did"]},{"Key":"I did","Fragments":["not","this","not","this","same","almost"]},{"Key":"did not","Fragments":["know","consider"]},{"Key":"not know","Fragments":["that"]},{"Key":"know that","Fragments":["you"]},{"Key":"that you","Fragments":["can","can"]},{"Key":"use different","Fragments":["\"public\""]},{"Key":"different \"public\"","Fragments":["and"]},{"Key":"\"public\" and","Fragments":["\"private\""]},{"Key":"and \"private\"","Fragments":["name"]},{"Key":"\"private\" name","Fragments":["for"]},{"Key":"name for","Fragments":["function"]},{"Key":"for function","Fragments":["argument:"]},{"Key":"function argument:","Fragments":["`~init:accum`,"]},{"Key":"argument: `~init:accum`,","Fragments":["I"]},{"Key":"`~init:accum`, I","Fragments":["just"]},{"Key":"I just","Fragments":["use","took","read","guessed"]},{"Key":"just use","Fragments":["`init`","`String.is_suffix`"]},{"Key":"use `init`","Fragments":["everywhere"]},{"Key":" An","Fragments":["alternative"]},{"Key":"An alternative","Fragments":["implementation","is"]},{"Key":"alternative implementation","Fragments":["of"]},{"Key":"fold could","Fragments":["use"]},{"Key":"could use","Fragments":["`function`","in","the","the","something"]},{"Key":"use `function`","Fragments":["to","in"]},{"Key":"`function` to","Fragments":["combine"]},{"Key":"to combine","Fragments":["function","constructs"]},{"Key":"combine function","Fragments":["definition"]},{"Key":"function definition","Fragments":["and"]},{"Key":"definition and","Fragments":["the"]},{"Key":"and the","Fragments":["match","order","Bazaar","content","functions","like?","tests"]},{"Key":"the match","Fragments":["statement.","syntax"]},{"Key":"match statement.","Fragments":["e.g."]},{"Key":" let","Fragments":["rec","contains_a_letter","response_for","rec","rec","length","go","rec","length","go","f1","f2","f3","response_for","rec","is_question","isempty","isempty","rec"]},{"Key":"let rec","Fragments":["fold","..","binding","length","length","go","fold","lfold"]},{"Key":"rec fold","Fragments":["~init:accum","~init:init"]},{"Key":"fold ~init:accum","Fragments":["~f"]},{"Key":"~init:accum ~f","Fragments":["="]},{"Key":"~f =","Fragments":["function","function"]},{"Key":" |","Fragments":["[]","(x::xs)","s","s","[]","x::xs","[]","_","[]","_","[]","_","[]","_","\"\"","s","s","_","[]","x","[]","h","\"\"","input","input","_"]},{"Key":"| []","Fragments":["-\u003e","-\u003e","-\u003e","-\u003e","-\u003e","-\u003e","-\u003e","-\u003e"]},{"Key":"[] -\u003e","Fragments":["accum","0","0","acc","acc","acc","init","i"]},{"Key":"| (x::xs)","Fragments":["-\u003e"]},{"Key":"x) ~f:f","Fragments":["xs"]},{"Key":" Looks","Fragments":["good","good.","great.","good,","good.","pretty","good.","better."]},{"Key":"Looks good","Fragments":["to"]},{"Key":"good to","Fragments":["me","me"]},{"Key":"to me","Fragments":["otherwise.",":)"]},{"Key":" Thanks","Fragments":["for","for","for"]},{"Key":"Thanks for","Fragments":["the","taking","the","your","your"]},{"Key":"the suggestion,","Fragments":["@marcelino."]},{"Key":"suggestion, @marcelino.","Fragments":["I"]},{"Key":"@marcelino. I","Fragments":["totally"]},{"Key":"totally forgot","Fragments":["about"]},{"Key":"forgot about","Fragments":["the","it"]},{"Key":"about the","Fragments":["`function`","implementation","best","last","input"]},{"Key":"the `function`","Fragments":["feature.","keyword"]},{"Key":"`function` feature.","Fragments":["I"]},{"Key":"feature. I","Fragments":["decided"]},{"Key":"I decided","Fragments":["to","just","to","to","to"]},{"Key":"decided to","Fragments":["make","rewrite","implement","use"]},{"Key":"to make","Fragments":["that","the","this","them"]},{"Key":"make that","Fragments":["refactoring."]},{"Key":"One thing","Fragments":["I"]},{"Key":"thing I","Fragments":["feel","could"]},{"Key":"I feel","Fragments":["uncomfortable","like"]},{"Key":"feel uncomfortable","Fragments":["with"]},{"Key":"uncomfortable with","Fragments":["is"]},{"Key":"with is","Fragments":["is_yell"]},{"Key":"is is_yell","Fragments":["function."]},{"Key":"is_yell function.","Fragments":["There"]},{"Key":"function. There","Fragments":["could"]},{"Key":"There could","Fragments":["be"]},{"Key":"be words","Fragments":["only"]},{"Key":"words only","Fragments":["with"]},{"Key":"only with","Fragments":["one"]},{"Key":"with one","Fragments":["letter,"]},{"Key":"one letter,","Fragments":["like"]},{"Key":"letter, like","Fragments":["\"I\""]},{"Key":"like \"I\"","Fragments":["and"]},{"Key":"\"I\" and","Fragments":["this"]},{"Key":"and this","Fragments":["is"]},{"Key":"this is","Fragments":["not","somewhat","not","not","passing","what","a","so","just","currently"]},{"Key":"is not","Fragments":["an","the","tail","idiomatic:","in","included","among","easy"]},{"Key":"not an","Fragments":["yell.","experienced"]},{"Key":"an yell.","Fragments":["I"]},{"Key":"yell. I","Fragments":["thought,"]},{"Key":"I thought,","Fragments":["there"]},{"Key":"thought, there","Fragments":["are"]},{"Key":"there are","Fragments":["many","better"]},{"Key":"are many","Fragments":["other"]},{"Key":"many other","Fragments":["cases,"]},{"Key":"other cases,","Fragments":["like"]},{"Key":"cases, like","Fragments":["acronyms,"]},{"Key":"like acronyms,","Fragments":["which"]},{"Key":"acronyms, which","Fragments":["must"]},{"Key":"which must","Fragments":["not"]},{"Key":"must not","Fragments":["be"]},{"Key":"not be","Fragments":["considered","defined"]},{"Key":"be considered","Fragments":["as"]},{"Key":"considered as","Fragments":["shout"]},{"Key":"as shout","Fragments":["as"]},{"Key":"shout as","Fragments":["well."]},{"Key":"as well.","Fragments":["So"]},{"Key":"well. So","Fragments":["basically"]},{"Key":"So basically","Fragments":["without"]},{"Key":"basically without","Fragments":["some"]},{"Key":"without some","Fragments":["smart"]},{"Key":"some smart","Fragments":["system"]},{"Key":"smart system","Fragments":["with"]},{"Key":"system with","Fragments":["natural","my"]},{"Key":"with natural","Fragments":["language"]},{"Key":"natural language","Fragments":["knowledge"]},{"Key":"language knowledge","Fragments":["we"]},{"Key":"knowledge we","Fragments":["can"]},{"Key":"we can","Fragments":["not"]},{"Key":"can not","Fragments":["make"]},{"Key":"not make","Fragments":["any"]},{"Key":"make any","Fragments":["assumptions"]},{"Key":"any assumptions","Fragments":["about"]},{"Key":"assumptions about","Fragments":["emotional"]},{"Key":"about emotional","Fragments":["color"]},{"Key":"emotional color","Fragments":["of"]},{"Key":"color of","Fragments":["the"]},{"Key":" Also","Fragments":["`String.uppercase","I","your","thanks","you"]},{"Key":"Also `String.uppercase","Fragments":["s"]},{"Key":"`String.uppercase s","Fragments":["="]},{"Key":"s =","Fragments":["s`","Phone_number.of_sring","(s"]},{"Key":"= s`","Fragments":["is"]},{"Key":"s` is","Fragments":["not"]},{"Key":"not the","Fragments":["most","only"]},{"Key":"the most","Fragments":["efficient","popular"]},{"Key":"most efficient","Fragments":["way"]},{"Key":"efficient way","Fragments":["to"]},{"Key":"way to","Fragments":["discover","do","check","do","do","implement","test","do","accomplish","describe","reuse"]},{"Key":"to discover","Fragments":["lowercased"]},{"Key":"discover lowercased","Fragments":["chars"]},{"Key":"lowercased chars","Fragments":["in"]},{"Key":"chars in","Fragments":["string,"]},{"Key":"in string,","Fragments":["but"]},{"Key":"string, but","Fragments":["for"]},{"Key":"but for","Fragments":["this"]},{"Key":"for this","Fragments":["task","exercise?","track"]},{"Key":"this task","Fragments":["seems"]},{"Key":"task seems","Fragments":["like"]},{"Key":"seems like","Fragments":["it","a","there"]},{"Key":" Borrow","Fragments":["the"]},{"Key":"Borrow the","Fragments":["idea"]},{"Key":"using `fold`","Fragments":["everywhere"]},{"Key":"The self-descriptive","Fragments":["inner"]},{"Key":"self-descriptive inner","Fragments":["functions"]},{"Key":"inner functions","Fragments":["really"]},{"Key":"functions really","Fragments":["help"]},{"Key":"really help","Fragments":["reduce"]},{"Key":"reduce the","Fragments":["cognitive","noise.","repetitive"]},{"Key":"the cognitive","Fragments":["load"]},{"Key":"cognitive load","Fragments":["and"]},{"Key":"load and","Fragments":["make"]},{"Key":"and make","Fragments":["it"]},{"Key":"make it","Fragments":["more","slightly","appear","more"]},{"Key":"it more","Fragments":["readable.","readable?"]},{"Key":"I noticed","Fragments":["`a`","the"]},{"Key":"noticed `a`","Fragments":["values"]},{"Key":"`a` values","Fragments":["are"]},{"Key":"values are","Fragments":["always"]},{"Key":"are always","Fragments":["going"]},{"Key":"always going","Fragments":["to"]},{"Key":"going to","Fragments":["be"]},{"Key":"be `ask`","Fragments":["and"]},{"Key":"`ask` and","Fragments":["`ask`"]},{"Key":"and `ask`","Fragments":["is"]},{"Key":"`ask` is","Fragments":["in"]},{"Key":"is in","Fragments":["scope","the"]},{"Key":"in scope","Fragments":["wherever","inside","so"]},{"Key":"scope wherever","Fragments":["`a`s"]},{"Key":"wherever `a`s","Fragments":["are"]},{"Key":"`a`s are","Fragments":["used."]},{"Key":"are used.","Fragments":["Have","Thanks"]},{"Key":"used. Have","Fragments":["you"]},{"Key":"considered refactoring","Fragments":["the"]},{"Key":"refactoring the","Fragments":["`string"]},{"Key":"the `string","Fragments":["-\u003e"]},{"Key":"`string -\u003e","Fragments":["bool`"]},{"Key":"-\u003e bool`","Fragments":["values"]},{"Key":"bool` values","Fragments":["into"]},{"Key":"values into","Fragments":["plain"]},{"Key":"into plain","Fragments":["`bool`s?"]},{"Key":" It","Fragments":["may","appears","should","does","should","sure","seems"]},{"Key":"It may","Fragments":["also"]},{"Key":"may also","Fragments":["be"]},{"Key":"also be","Fragments":["worth"]},{"Key":"be worth","Fragments":["considering"]},{"Key":"worth considering","Fragments":["changing"]},{"Key":"considering changing","Fragments":["some"]},{"Key":"changing some","Fragments":["names"]},{"Key":"some names","Fragments":["like"]},{"Key":"names like","Fragments":["`only_spaces`","that."]},{"Key":"like `only_spaces`","Fragments":["to"]},{"Key":"`only_spaces` to","Fragments":["`is_silent`."]},{"Key":"to `is_silent`.","Fragments":["That"]},{"Key":"`is_silent`. That","Fragments":["would"]},{"Key":"would provide","Fragments":["more"]},{"Key":"provide more","Fragments":["context"]},{"Key":"more context","Fragments":["for"]},{"Key":"context for","Fragments":["Bob's"]},{"Key":"for Bob's","Fragments":["decision"]},{"Key":"Bob's decision","Fragments":["to"]},{"Key":"decision to","Fragments":["respond"]},{"Key":"to respond","Fragments":["with"]},{"Key":"respond with","Fragments":["\"Fine."]},{"Key":"with \"Fine.","Fragments":["Be"]},{"Key":"\"Fine. Be","Fragments":["that","that"]},{"Key":"Be that","Fragments":["way!\"","way!\""]},{"Key":" For","Fragments":["`accum_words`","`describe_nothing`","`describe_question`","`response_for`"]},{"Key":"For `accum_words`","Fragments":["maybe"]},{"Key":"`accum_words` maybe","Fragments":["`Map.change`"]},{"Key":"maybe `Map.change`","Fragments":["can"]},{"Key":"`Map.change` can","Fragments":["make"]},{"Key":"can make","Fragments":["it"]},{"Key":"it slightly","Fragments":["simpler?"]},{"Key":" $","Fragments":["corebuild"]},{"Key":"$ corebuild","Fragments":["word_count.byte"]},{"Key":" Error:","Fragments":["Error"]},{"Key":"Error: Error","Fragments":["while"]},{"Key":"Error while","Fragments":["linking"]},{"Key":"while linking","Fragments":["word_count.cmo:"]},{"Key":" Reference","Fragments":["to"]},{"Key":"Reference to","Fragments":["undefined"]},{"Key":"to undefined","Fragments":["global"]},{"Key":"undefined global","Fragments":["`Str'"]},{"Key":"I wasn't","Fragments":["sure"]},{"Key":"wasn't sure","Fragments":["how","if"]},{"Key":"sure how","Fragments":["to","to"]},{"Key":"how to","Fragments":["format","read","do","use","use"]},{"Key":"to format","Fragments":["the"]},{"Key":"format the","Fragments":["long"]},{"Key":"the long","Fragments":["anonymous","ones."]},{"Key":"long anonymous","Fragments":["function"]},{"Key":"anonymous function","Fragments":["in","is"]},{"Key":"in contains_a_letter.","Fragments":["Maybe"]},{"Key":"contains_a_letter. Maybe","Fragments":["I"]},{"Key":"Maybe I","Fragments":["should"]},{"Key":"I should","Fragments":["have"]},{"Key":"should have","Fragments":["put"]},{"Key":"have put","Fragments":["the"]},{"Key":"put the","Fragments":["matcher"]},{"Key":"the matcher","Fragments":["function"]},{"Key":"matcher function","Fragments":["a"]},{"Key":"function a","Fragments":["let"]},{"Key":"a let","Fragments":["binding?","rec"]},{"Key":"let binding?","Fragments":["Also"]},{"Key":"binding? Also","Fragments":["wasn't"]},{"Key":"Also wasn't","Fragments":["sure"]},{"Key":"sure if","Fragments":["there's","this","it's"]},{"Key":"if there's","Fragments":["already","a"]},{"Key":"there's already","Fragments":["a"]},{"Key":"already a","Fragments":["library","function"]},{"Key":"a library","Fragments":["function"]},{"Key":"library function","Fragments":["for","I"]},{"Key":"function for","Fragments":["that."]},{"Key":"Also I","Fragments":["wonder"]},{"Key":"I wonder","Fragments":["if","how"]},{"Key":"wonder if","Fragments":["there's"]},{"Key":"there's a","Fragments":["thing","lot"]},{"Key":"a thing","Fragments":["I"]},{"Key":"I could","Fragments":["use"]},{"Key":"use in","Fragments":["both","place"]},{"Key":"in both","Fragments":["all_caps"]},{"Key":"both all_caps","Fragments":["and"]},{"Key":"all_caps and","Fragments":["all_whitespace"]},{"Key":"and all_whitespace","Fragments":["that's"]},{"Key":"all_whitespace that's","Fragments":["basically:"]},{"Key":"that's basically:","Fragments":["fun"]},{"Key":"basically: fun","Fragments":["f"]},{"Key":"fun f","Fragments":["x","x"]},{"Key":"f x","Fragments":["y","=","-\u003e","=","y"]},{"Key":"x y","Fragments":["-\u003e","-\u003e","z`"]},{"Key":"y -\u003e","Fragments":["f","match"]},{"Key":"-\u003e f","Fragments":["x","x"]},{"Key":"x =","Fragments":["y","x"]},{"Key":"= y","Fragments":["or"]},{"Key":"y or","Fragments":["even"]},{"Key":"or even","Fragments":["fun"]},{"Key":"even fun","Fragments":["f"]},{"Key":"x -\u003e","Fragments":["f","x"]},{"Key":"for taking","Fragments":["a"]},{"Key":"taking a","Fragments":["look!"]},{"Key":" If","Fragments":["your","you're","you"]},{"Key":"If your","Fragments":["anonymous"]},{"Key":"your anonymous","Fragments":["function"]},{"Key":"function is","Fragments":["'big',","very","rather","`'a"]},{"Key":"is 'big',","Fragments":["consider"]},{"Key":"'big', consider","Fragments":["giving"]},{"Key":"consider giving","Fragments":["it","it"]},{"Key":"giving it","Fragments":["a","a"]},{"Key":"it a","Fragments":["name,","shot.","different"]},{"Key":"a name,","Fragments":["it"]},{"Key":"name, it","Fragments":["improves"]},{"Key":"it improves","Fragments":["readability."]},{"Key":"improves readability.","Fragments":["You"]},{"Key":"readability. You","Fragments":["asked"]},{"Key":"You asked","Fragments":["if"]},{"Key":"asked if","Fragments":["there"]},{"Key":"if there","Fragments":["already"]},{"Key":"there already","Fragments":["was"]},{"Key":"already was","Fragments":["a"]},{"Key":"was a","Fragments":["function","really","hell","little"]},{"Key":"function that","Fragments":["does","makes"]},{"Key":"that does","Fragments":["the"]},{"Key":"does the","Fragments":["same,","string"]},{"Key":"the same,","Fragments":["there","`let"]},{"Key":"same, there","Fragments":["is"]},{"Key":"there is","Fragments":["a","a"]},{"Key":"let contains_a_letter","Fragments":["input"]},{"Key":"contains_a_letter input","Fragments":["="]},{"Key":"input =","Fragments":["String.exists","match"]},{"Key":"= String.exists","Fragments":["~f:Char.is_alpha"]},{"Key":"String.exists ~f:Char.is_alpha","Fragments":["input"]},{"Key":"Also your","Fragments":["is_question,"]},{"Key":"your is_question,","Fragments":["create"]},{"Key":"is_question, create","Fragments":["a"]},{"Key":"create a","Fragments":["list"]},{"Key":"a list","Fragments":["of","of","of"]},{"Key":"list of","Fragments":["the","integers.","strings.","values."]},{"Key":"the characters,","Fragments":["but"]},{"Key":"characters, but","Fragments":["you"]},{"Key":"but you","Fragments":["could","could"]},{"Key":"you could","Fragments":["have","(in","try","consider","use","consider"]},{"Key":"could have","Fragments":["used","been"]},{"Key":"have used","Fragments":["`String.is_suffix","`add_multi`."]},{"Key":"used `String.is_suffix","Fragments":["~suffix:\"?\""]},{"Key":"`String.is_suffix ~suffix:\"?\"","Fragments":["input`"]},{"Key":" This","Fragments":["exercise","iteration","works,","seems","solution","avoids","is","is","is","is","looks"]},{"Key":"This exercise","Fragments":["mostly"]},{"Key":"exercise mostly","Fragments":["left"]},{"Key":"mostly left","Fragments":["me"]},{"Key":"left me","Fragments":["with"]},{"Key":"me with","Fragments":["questions:"]},{"Key":"Can I","Fragments":["pattern"]},{"Key":"I pattern","Fragments":["match"]},{"Key":"pattern match","Fragments":["multiple","in"]},{"Key":"match multiple","Fragments":["arguments"]},{"Key":"multiple arguments","Fragments":["at"]},{"Key":"arguments at","Fragments":["a"]},{"Key":"Can the","Fragments":["function"]},{"Key":"the function","Fragments":["keyword","being","is"]},{"Key":"function keyword","Fragments":["be"]},{"Key":"keyword be","Fragments":["used"]},{"Key":"used with","Fragments":["functions"]},{"Key":"with functions","Fragments":["with"]},{"Key":"functions with","Fragments":["multiple","postfixes"]},{"Key":"with multiple","Fragments":["args?"]},{"Key":" What's","Fragments":["the","the"]},{"Key":"What's the","Fragments":["naming","correct","first","response"]},{"Key":"the naming","Fragments":["convention"]},{"Key":"naming convention","Fragments":["for"]},{"Key":"convention for","Fragments":["helper"]},{"Key":"for helper","Fragments":["functions"]},{"Key":"functions which","Fragments":["are","use"]},{"Key":"which are","Fragments":["essentially","tail"]},{"Key":"are essentially","Fragments":["the"]},{"Key":"essentially the","Fragments":["same"]},{"Key":"the same","Fragments":["as","aside","functions","length","issue","names","things."]},{"Key":"same as","Fragments":["the","you."]},{"Key":"as the","Fragments":["top","numerator.","various"]},{"Key":"the top","Fragments":["level","level","level"]},{"Key":"top level","Fragments":["function","declaration.","and","(aside"]},{"Key":"level function","Fragments":["but"]},{"Key":"function but","Fragments":["with"]},{"Key":"but with","Fragments":["some","a"]},{"Key":"with some","Fragments":["extra","debatable"]},{"Key":"some extra","Fragments":["args","stuff"]},{"Key":"extra args","Fragments":["(such"]},{"Key":"args (such","Fragments":["as"]},{"Key":"(such as","Fragments":["an","non-tail-recursive"]},{"Key":"as an","Fragments":["accumulator)?"]},{"Key":"the correct","Fragments":["syntax","order"]},{"Key":"correct syntax","Fragments":["for:"]},{"Key":"syntax for:","Fragments":["fun"]},{"Key":"for: fun","Fragments":["x"]},{"Key":"fun x","Fragments":["y"]},{"Key":"-\u003e match","Fragments":["x"]},{"Key":"match x","Fragments":["with"]},{"Key":"x with","Fragments":["..."]},{"Key":"with ...","Fragments":["|"]},{"Key":"... |","Fragments":["...?"]},{"Key":" Why","Fragments":["did","the"]},{"Key":"Why did","Fragments":["the","you"]},{"Key":"did the","Fragments":["typechecker"]},{"Key":"the typechecker","Fragments":["yell"]},{"Key":"typechecker yell","Fragments":["at"]},{"Key":"yell at","Fragments":["me"]},{"Key":"at me","Fragments":["when"]},{"Key":"me when","Fragments":["I"]},{"Key":"when I","Fragments":["left","tried","was","try","can,","googled","developed"]},{"Key":"I left","Fragments":["off"]},{"Key":"left off","Fragments":["the"]},{"Key":"off the","Fragments":["~init"]},{"Key":"the ~init","Fragments":["label"]},{"Key":"~init label","Fragments":["on"]},{"Key":"label on","Fragments":["line"]},{"Key":"This iteration","Fragments":["made","_only_"]},{"Key":"iteration made","Fragments":["things"]},{"Key":"made things","Fragments":["a"]},{"Key":"things a","Fragments":["little"]},{"Key":"a little","Fragments":["less","meddling","miffed","bit"]},{"Key":"little less","Fragments":["readable,"]},{"Key":"less readable,","Fragments":["IMO,"]},{"Key":"readable, IMO,","Fragments":["but"]},{"Key":"IMO, but","Fragments":["it"]},{"Key":"it doesn't","Fragments":["make","work"]},{"Key":"doesn't make","Fragments":["redundant"]},{"Key":"make redundant","Fragments":["calls"]},{"Key":"redundant calls","Fragments":["to"]},{"Key":"calls to","Fragments":["sort","`Core.String`"]},{"Key":"to sort","Fragments":["and","it"]},{"Key":"sort and","Fragments":["lowercase"]},{"Key":"lowercase on","Fragments":["the"]},{"Key":"the invariant","Fragments":["parameter."]},{"Key":"The only","Fragments":["library","place","changes"]},{"Key":"only library","Fragments":["function"]},{"Key":"function I","Fragments":["needed"]},{"Key":"I needed","Fragments":["was"]},{"Key":"needed was","Fragments":["to"]},{"Key":"was to","Fragments":["convert"]},{"Key":"to convert","Fragments":["an"]},{"Key":"convert an","Fragments":["int"]},{"Key":"an int","Fragments":["to"]},{"Key":"int to","Fragments":["a"]},{"Key":"to a","Fragments":["float,","stack","large","person.","random","list"]},{"Key":"a float,","Fragments":["so"]},{"Key":"float, so","Fragments":["I"]},{"Key":"so I","Fragments":["decided","can't","decided","look"]},{"Key":"decided just","Fragments":["to"]},{"Key":"just to","Fragments":["use","change","try"]},{"Key":"use `float_of_int`","Fragments":["from"]},{"Key":"`float_of_int` from","Fragments":["the"]},{"Key":"from the","Fragments":["standard","example","error","left"]},{"Key":"the standard","Fragments":["OCaml","library","library","lib","lib.","library"]},{"Key":"standard OCaml","Fragments":["pervasives"]},{"Key":"OCaml pervasives","Fragments":["and"]},{"Key":"pervasives and","Fragments":["omit"]},{"Key":"and omit","Fragments":["the"]},{"Key":"omit the","Fragments":["Core"]},{"Key":"the Core","Fragments":["dependency.","library","reference","libraries).","library"]},{"Key":" Yeah,","Fragments":["in","I","the"]},{"Key":"Yeah, in","Fragments":["this"]},{"Key":"in this","Fragments":["case","instance.","example","case.","case."]},{"Key":"this case","Fragments":["Core"]},{"Key":"case Core","Fragments":["isn't"]},{"Key":"Core isn't","Fragments":["really"]},{"Key":"isn't really","Fragments":["useful."]},{"Key":" Cleaned","Fragments":["up"]},{"Key":"Cleaned up","Fragments":["version"]},{"Key":"up version","Fragments":["of"]},{"Key":"version of","Fragments":["my","this","String"]},{"Key":"of my","Fragments":["initial"]},{"Key":"my initial","Fragments":["submission."]},{"Key":"initial submission.","Fragments":["It's"]},{"Key":"submission. It's","Fragments":["not"]},{"Key":"It's not","Fragments":["a"]},{"Key":"not a","Fragments":["whole"]},{"Key":"a whole","Fragments":["lot"]},{"Key":"whole lot","Fragments":["different,"]},{"Key":"lot different,","Fragments":["but"]},{"Key":"different, but","Fragments":["I'm"]},{"Key":"but I'm","Fragments":["_much_","not","not"]},{"Key":"I'm _much_","Fragments":["happier"]},{"Key":"_much_ happier","Fragments":["with"]},{"Key":"happier with","Fragments":["it"]},{"Key":"with it","Fragments":["already."]},{"Key":"It appears","Fragments":["to"]},{"Key":"appears to","Fragments":["be"]},{"Key":"be slightly","Fragments":["more"]},{"Key":"slightly more","Fragments":["idiomatic"]},{"Key":"more idiomatic","Fragments":["to","to","OCaml"]},{"Key":"idiomatic to","Fragments":["write","pull"]},{"Key":"to write","Fragments":["`let","some","a","it","correctly)","your"]},{"Key":"write `let","Fragments":["number"]},{"Key":"`let number","Fragments":["s","="]},{"Key":"number s","Fragments":["="]},{"Key":"= Phone_number.of_sring","Fragments":["s"]},{"Key":"Phone_number.of_sring s","Fragments":["|\u003e"]},{"Key":"s |\u003e","Fragments":["Phone_number.number`","String.strip`"]},{"Key":"|\u003e Phone_number.number`","Fragments":["than"]},{"Key":"Phone_number.number` than","Fragments":["`let"]},{"Key":"than `let","Fragments":["number"]},{"Key":"number =","Fragments":["Fn.compose"]},{"Key":"= Fn.compose","Fragments":["Phone_number.number"]},{"Key":"Fn.compose Phone_number.number","Fragments":["Phone_number.of_string`."]},{"Key":"Phone_number.number Phone_number.of_string`.","Fragments":["Both"]},{"Key":"Phone_number.of_string`. Both","Fragments":["are"]},{"Key":"Both are","Fragments":["quite"]},{"Key":"are quite","Fragments":["correct"]},{"Key":"quite correct","Fragments":["though."]},{"Key":" Makes","Fragments":["sense","sense."]},{"Key":"Makes sense","Fragments":["to"]},{"Key":"sense to","Fragments":["me.","implement"]},{"Key":"to me.","Fragments":["My"]},{"Key":"me. My","Fragments":["functional"]},{"Key":"My functional","Fragments":["background"]},{"Key":"functional background","Fragments":["is"]},{"Key":"background is","Fragments":["mostly"]},{"Key":"is mostly","Fragments":["in"]},{"Key":"mostly in","Fragments":["Lisps,"]},{"Key":"in Lisps,","Fragments":["so"]},{"Key":"Lisps, so","Fragments":["\"(."]},{"Key":"so \"(.","Fragments":["f"]},{"Key":"\"(. f","Fragments":["g)"]},{"Key":"f g)","Fragments":["x\""]},{"Key":"g) x\"","Fragments":["comes"]},{"Key":"x\" comes","Fragments":["to"]},{"Key":"comes to","Fragments":["mind","strings."]},{"Key":"to mind","Fragments":["more"]},{"Key":"mind more","Fragments":["quickly"]},{"Key":"more quickly","Fragments":["than"]},{"Key":"quickly than","Fragments":["\"f"]},{"Key":"than \"f","Fragments":["x"]},{"Key":"\"f x","Fragments":["|\u003e"]},{"Key":"x |\u003e","Fragments":["g\","]},{"Key":"|\u003e g\",","Fragments":["but"]},{"Key":"g\", but","Fragments":["either"]},{"Key":"but either","Fragments":["seems"]},{"Key":"either seems","Fragments":["reasonable"]},{"Key":"seems reasonable","Fragments":["and"]},{"Key":"reasonable and","Fragments":["clear"]},{"Key":"and clear","Fragments":["in"]},{"Key":"clear in","Fragments":["this"]},{"Key":" Interestingly","Fragments":["in"]},{"Key":"Interestingly in","Fragments":["some"]},{"Key":"in some","Fragments":["lisps"]},{"Key":"some lisps","Fragments":["like"]},{"Key":"lisps like","Fragments":["Clojure"]},{"Key":"like Clojure","Fragments":["the"]},{"Key":"Clojure the","Fragments":["|\u003e"]},{"Key":"the |\u003e","Fragments":["style"]},{"Key":"|\u003e style","Fragments":["is"]},{"Key":"style is","Fragments":["becoming","to","to"]},{"Key":"is becoming","Fragments":["more"]},{"Key":"becoming more","Fragments":["popular"]},{"Key":"more popular","Fragments":["([thread-first](http://clojuredocs.org/clojure_core/clojure.core/-%3E)"]},{"Key":"popular ([thread-first](http://clojuredocs.org/clojure_core/clojure.core/-%3E)","Fragments":["and"]},{"Key":"([thread-first](http://clojuredocs.org/clojure_core/clojure.core/-%3E) and","Fragments":["[thread-last](http://clojuredocs.org/clojure_core/clojure.core/-%3E%3E))."]},{"Key":" While","Fragments":["the","this","I'm"]},{"Key":"While the","Fragments":["code"]},{"Key":"the code","Fragments":["looks","it","is","harder","read"]},{"Key":"looks good","Fragments":["and","but"]},{"Key":"good and","Fragments":["makes"]},{"Key":"and makes","Fragments":["nice"]},{"Key":"makes nice","Fragments":["use"]},{"Key":"nice use","Fragments":["of"]},{"Key":"`function` for","Fragments":["conciseness,"]},{"Key":"for conciseness,","Fragments":["it's"]},{"Key":"conciseness, it's","Fragments":["an"]},{"Key":"it's an","Fragments":["interesting"]},{"Key":"an interesting","Fragments":["exercise","exercise.","exercise"]},{"Key":"interesting exercise","Fragments":["to","try"]},{"Key":"exercise to","Fragments":["implement"]},{"Key":"implement each","Fragments":["of"]},{"Key":"each of","Fragments":["the","the","its"]},{"Key":"the functions","Fragments":["using","which","work","defined"]},{"Key":"functions using","Fragments":["just"]},{"Key":"using just","Fragments":["the","the"]},{"Key":"just the","Fragments":["`fold`","Core"]},{"Key":"the `fold`","Fragments":["you've"]},{"Key":"`fold` you've","Fragments":["provided."]},{"Key":" You","Fragments":["traverse","don't","can","could","told","also"]},{"Key":"You traverse","Fragments":["the"]},{"Key":"traverse the","Fragments":["strand"]},{"Key":"the strand","Fragments":["completely"]},{"Key":"strand completely","Fragments":["4"]},{"Key":"completely 4","Fragments":["times"]},{"Key":"4 times","Fragments":["in"]},{"Key":"times in","Fragments":["the"]},{"Key":"the `nucleotide_counts`","Fragments":["function."]},{"Key":"`nucleotide_counts` function.","Fragments":["Can"]},{"Key":"function. Can","Fragments":["you"]},{"Key":"you do","Fragments":["it","this","need"]},{"Key":"do it","Fragments":["with","that"]},{"Key":"it with","Fragments":["only","as","`List.fold`","`match`"]},{"Key":"with only","Fragments":["1","the"]},{"Key":"only 1","Fragments":["time?"]},{"Key":"like the","Fragments":["names","idea","fact","spec:","use","interface","moment","general"]},{"Key":"the names","Fragments":["of","like"]},{"Key":"names of","Fragments":["the"]},{"Key":"the responses.","Fragments":["A"]},{"Key":"responses. A","Fragments":["lot."]},{"Key":" (also,","Fragments":["can"]},{"Key":"(also, can","Fragments":["you"]},{"Key":"can you","Fragments":["do","access"]},{"Key":"do this","Fragments":["without"]},{"Key":"without regexp's","Fragments":["in"]},{"Key":"regexp's in","Fragments":["OCaml?)"]},{"Key":"It should","Fragments":["be","be"]},{"Key":"should be","Fragments":["relatively","possible.","a","a"]},{"Key":"be relatively","Fragments":["easy"]},{"Key":"relatively easy","Fragments":["to"]},{"Key":"easy to","Fragments":["replace","be","understand"]},{"Key":"to replace","Fragments":["these"]},{"Key":"replace these","Fragments":["regexps"]},{"Key":"these regexps","Fragments":["with"]},{"Key":"regexps with","Fragments":["more"]},{"Key":"with more","Fragments":["specialized"]},{"Key":"more specialized","Fragments":["checks."]},{"Key":"specialized checks.","Fragments":["Let"]},{"Key":"checks. Let","Fragments":["me"]},{"Key":"Let me","Fragments":["give","see","guess,"]},{"Key":"me give","Fragments":["it"]},{"Key":"give it","Fragments":["a"]},{"Key":" Nice!","Fragments":["I'm"]},{"Key":"Nice! I'm","Fragments":["starting"]},{"Key":"I'm starting","Fragments":["to"]},{"Key":"starting to","Fragments":["see"]},{"Key":"to see","Fragments":["better"]},{"Key":"see better","Fragments":["how"]},{"Key":"better how","Fragments":["to"]},{"Key":"to read","Fragments":["O'Caml.","as","and","and","(and","in"]},{"Key":"did this","Fragments":["one","in"]},{"Key":"this one","Fragments":["for","is","I"]},{"Key":"one for","Fragments":["Elixir"]},{"Key":"for Elixir","Fragments":["a"]},{"Key":"Elixir a","Fragments":["while"]},{"Key":"a while","Fragments":["back:"]},{"Key":"while back:","Fragments":["http://exercism.io/submissions/b68bd0c856e26cb4c116436c."]},{"Key":"back: http://exercism.io/submissions/b68bd0c856e26cb4c116436c.","Fragments":["Probably"]},{"Key":"http://exercism.io/submissions/b68bd0c856e26cb4c116436c. Probably","Fragments":["my"]},{"Key":"Probably my","Fragments":["favorite"]},{"Key":"my favorite","Fragments":["exercism"]},{"Key":"favorite exercism","Fragments":["so"]},{"Key":"exercism so","Fragments":["far."]},{"Key":" Did","Fragments":["this","the"]},{"Key":"Did this","Fragments":["test"]},{"Key":"this test","Fragments":["pass"]},{"Key":"test pass","Fragments":["the"]},{"Key":"pass the","Fragments":["test","test","tests","test"]},{"Key":"the test","Fragments":["suite","suite","run).","files","cases.","case","suite"]},{"Key":"test suite","Fragments":["for","for","work"]},{"Key":"suite for","Fragments":["you?","me,"]},{"Key":"for you?","Fragments":["Because","Because"]},{"Key":"you? Because","Fragments":["for","for"]},{"Key":"Because for","Fragments":["me","me"]},{"Key":"for me","Fragments":["it","they","as","to"]},{"Key":"me it","Fragments":["fails"]},{"Key":"it fails","Fragments":["with"]},{"Key":"fails with","Fragments":["a"]},{"Key":"with a","Fragments":["Stack_overflow","`match","few","stack"]},{"Key":"a Stack_overflow","Fragments":["on"]},{"Key":"Stack_overflow on","Fragments":["the"]},{"Key":"the filter","Fragments":["of"]},{"Key":"filter of","Fragments":["a"]},{"Key":"a huge","Fragments":["list"]},{"Key":"huge list","Fragments":["test."]},{"Key":"It does","Fragments":["pass"]},{"Key":"does pass","Fragments":["the"]},{"Key":"for me,","Fragments":["but","though"]},{"Key":"me, but","Fragments":["I"]},{"Key":"I see","Fragments":["where","now","it.","`List.map`","it","what"]},{"Key":"see where","Fragments":["filter"]},{"Key":"where filter","Fragments":["isn't"]},{"Key":"filter isn't","Fragments":["tail-recursive."]},{"Key":"isn't tail-recursive.","Fragments":["Let"]},{"Key":"tail-recursive. Let","Fragments":["me"]},{"Key":"me see","Fragments":["about"]},{"Key":"see about","Fragments":["rewriting"]},{"Key":"about rewriting","Fragments":["it."]},{"Key":"Looks good.","Fragments":["Just","A"]},{"Key":"good. Just","Fragments":["two"]},{"Key":"Just two","Fragments":["things:"]},{"Key":" 1.","Fragments":["`not","Try","I'd"]},{"Key":"1. `not","Fragments":["((String.lowercase"]},{"Key":"`not ((String.lowercase","Fragments":["l)"]},{"Key":"((String.lowercase l)","Fragments":["="]},{"Key":"l) =","Fragments":["(String.lowercase"]},{"Key":"= (String.lowercase","Fragments":["r))`"]},{"Key":"(String.lowercase r))`","Fragments":["could"]},{"Key":"r))` could","Fragments":["be"]},{"Key":"be written","Fragments":["as","in","as","as"]},{"Key":"written as","Fragments":["`String.lowercase","`let","`type"]},{"Key":"as `String.lowercase","Fragments":["l"]},{"Key":"`String.lowercase l","Fragments":["\u003c\u003e","="]},{"Key":"l \u003c\u003e","Fragments":["String.lowercase"]},{"Key":"\u003c\u003e String.lowercase","Fragments":["r`"]},{"Key":"String.lowercase r`","Fragments":["(`\u003c\u003e`","(function"]},{"Key":"r` (`\u003c\u003e`","Fragments":["is"]},{"Key":"(`\u003c\u003e` is","Fragments":["the"]},{"Key":"the inverse","Fragments":["of"]},{"Key":"inverse of","Fragments":["`=`)."]},{"Key":" 2.","Fragments":["You","The","opening"]},{"Key":"2. You","Fragments":["don't"]},{"Key":"You don't","Fragments":["need","need"]},{"Key":"don't need","Fragments":["parentheses","the"]},{"Key":"need parentheses","Fragments":["around"]},{"Key":"parentheses around","Fragments":["`Char.ascending`"]},{"Key":"around `Char.ascending`","Fragments":["(just"]},{"Key":"`Char.ascending` (just","Fragments":["a"]},{"Key":"(just a","Fragments":["single","matter"]},{"Key":"a single","Fragments":["value)","pass","pass"]},{"Key":"single value)","Fragments":["and"]},{"Key":"value) and","Fragments":["`String.lowercase"]},{"Key":"and `String.lowercase","Fragments":["l"]},{"Key":"l =","Fragments":["String.lowercase"]},{"Key":"= String.lowercase","Fragments":["r`"]},{"Key":"r` (function","Fragments":["application"]},{"Key":"(function application","Fragments":["goes"]},{"Key":"application goes","Fragments":["before"]},{"Key":"goes before","Fragments":["the"]},{"Key":"before the","Fragments":["equality"]},{"Key":"the equality","Fragments":["operator."]},{"Key":"Thanks! I've","Fragments":["made"]},{"Key":"I've made","Fragments":["those"]},{"Key":"made those","Fragments":["changes."]},{"Key":"those changes.","Fragments":["Good"]},{"Key":"changes. Good","Fragments":["to"]},{"Key":"Good to","Fragments":["know","know."]},{"Key":"to know","Fragments":["about"]},{"Key":"know about","Fragments":["\u003c\u003e"]},{"Key":"about \u003c\u003e","Fragments":["and"]},{"Key":"\u003c\u003e and","Fragments":["the"]},{"Key":"the order","Fragments":["of"]},{"Key":"order of","Fragments":["operations."]},{"Key":" I'd","Fragments":["like","just"]},{"Key":"I'd like","Fragments":["to"]},{"Key":"like to","Fragments":["be","OCaml"]},{"Key":"be able","Fragments":["to","to"]},{"Key":"able to","Fragments":["alias","find","get","improve"]},{"Key":"to alias","Fragments":["String"]},{"Key":"alias String","Fragments":["to"]},{"Key":"String to","Fragments":["S"]},{"Key":"to S","Fragments":["(or"]},{"Key":"S (or","Fragments":["something"]},{"Key":"(or something","Fragments":["else"]},{"Key":"something else","Fragments":["short)","going"]},{"Key":"else short)","Fragments":["but"]},{"Key":"short) but","Fragments":["I'm"]},{"Key":"I'm not","Fragments":["sure","sure","convinced","sure","behind","sure","an"]},{"Key":"do that","Fragments":["in","by","though."]},{"Key":"that in","Fragments":["ocaml."]},{"Key":"The if","Fragments":["else"]},{"Key":"if else","Fragments":["chain","sentence."]},{"Key":"else chain","Fragments":["looks"]},{"Key":"chain looks","Fragments":["inelegant"]},{"Key":"looks inelegant","Fragments":["to"]},{"Key":"inelegant to","Fragments":["my"]},{"Key":"to my","Fragments":["eyes","eyes","Elixir"]},{"Key":"my eyes","Fragments":["too","but"]},{"Key":"eyes too","Fragments":["but"]},{"Key":"too but","Fragments":["I'm"]},{"Key":"sure of","Fragments":["a"]},{"Key":"a cleaner","Fragments":["way","way"]},{"Key":"cleaner way","Fragments":["to","to"]},{"Key":"believe it's","Fragments":["`module"]},{"Key":"it's `module","Fragments":["S"]},{"Key":"`module S","Fragments":["="]},{"Key":"S =","Fragments":["String`"]},{"Key":"= String`","Fragments":["as"]},{"Key":"String` as","Fragments":["a"]},{"Key":"as a","Fragments":["top","shortcut","function?","value.","sequence","nested","mixture"]},{"Key":"a top","Fragments":["level"]},{"Key":"The if-else","Fragments":["is"]},{"Key":"if-else is","Fragments":["one"]},{"Key":"is one","Fragments":["good","of"]},{"Key":"one good","Fragments":["way."]},{"Key":"good way.","Fragments":["An"]},{"Key":"way. An","Fragments":["alternative"]},{"Key":"let response_for","Fragments":["=","input"]},{"Key":"response_for =","Fragments":["function"]},{"Key":"| s","Fragments":["when","when","when","when"]},{"Key":"s when","Fragments":["isAllSpaces","isShouting","is_yell","is_input"]},{"Key":"when isAllSpaces","Fragments":["s"]},{"Key":"isAllSpaces s","Fragments":["-\u003e"]},{"Key":"s -\u003e","Fragments":["\"Fine","...","\"Woah,","\"Sure\""]},{"Key":"-\u003e \"Fine","Fragments":["be"]},{"Key":"\"Fine be","Fragments":["that"]},{"Key":"be that","Fragments":["way.\""]},{"Key":"when isShouting","Fragments":["s"]},{"Key":"isShouting s","Fragments":["-\u003e"]},{"Key":" Of","Fragments":["course,"]},{"Key":"Of course,","Fragments":["I"]},{"Key":"course, I","Fragments":["always"]},{"Key":"I always","Fragments":["forget"]},{"Key":"always forget","Fragments":["you"]},{"Key":"forget you","Fragments":["can"]},{"Key":"can declare","Fragments":["functions"]},{"Key":"declare functions","Fragments":["like"]},{"Key":"functions like","Fragments":["that,","map,","`List.fold_left`","`fold_left`","`String.is_suffix`"]},{"Key":"like that,","Fragments":["cheers."]},{"Key":" Is","Fragments":["there","it","there","there","there"]},{"Key":"Is there","Fragments":["a","any","a","a"]},{"Key":"there a","Fragments":["reason","particular","particular","more"]},{"Key":"a reason","Fragments":["you","I"]},{"Key":"reason you","Fragments":["use","went","define"]},{"Key":"you use","Fragments":["a","the","it","something"]},{"Key":"a record","Fragments":["instead","fixed"]},{"Key":"record instead","Fragments":["of"]},{"Key":"a type","Fragments":["abbreviation","error","synonym"]},{"Key":"type abbreviation","Fragments":["(`type"]},{"Key":"abbreviation (`type","Fragments":["school"]},{"Key":"(`type school","Fragments":["="]},{"Key":"school =","Fragments":["string","string","(string","string"]},{"Key":"= string","Fragments":["list","list","list"]},{"Key":"string list","Fragments":["IMap.t`)?","IMap.t`","Int.Map.t`."]},{"Key":"I started","Fragments":["with","with","to"]},{"Key":"started with","Fragments":["`type","foldl"]},{"Key":"with `type","Fragments":["school"]},{"Key":"`type school","Fragments":["=","=","="]},{"Key":"list IMap.t`","Fragments":["and"]},{"Key":"IMap.t` and","Fragments":["had"]},{"Key":"and had","Fragments":["a"]},{"Key":"had a","Fragments":["type"]},{"Key":"type error","Fragments":["when"]},{"Key":"error when","Fragments":["I"]},{"Key":"I tried","Fragments":["to","to"]},{"Key":"tried to","Fragments":["compile","solve","find","limit"]},{"Key":"to compile","Fragments":["it."]},{"Key":"compile it.","Fragments":["Making"]},{"Key":"it. Making","Fragments":["`school`"]},{"Key":"Making `school`","Fragments":["a"]},{"Key":"`school` a","Fragments":["record"]},{"Key":"record fixed","Fragments":["that"]},{"Key":"fixed that","Fragments":["problem."]},{"Key":"that problem.","Fragments":["There"]},{"Key":"problem. There","Fragments":["was"]},{"Key":"There was","Fragments":["probably"]},{"Key":"was probably","Fragments":["something","a"]},{"Key":"probably something","Fragments":["else","simple,"]},{"Key":"else going","Fragments":["on"]},{"Key":"going on","Fragments":["that","somewhere."]},{"Key":"on that","Fragments":["caused"]},{"Key":"that caused","Fragments":["the"]},{"Key":"caused the","Fragments":["problem"]},{"Key":"the problem","Fragments":["and","works)","with","well"]},{"Key":"problem and","Fragments":["if"]},{"Key":"and if","Fragments":["I"]},{"Key":"if I","Fragments":["went","try","add","leave"]},{"Key":"I went","Fragments":["back","a","along."]},{"Key":"went back","Fragments":["and"]},{"Key":"back and","Fragments":["changed"]},{"Key":"and changed","Fragments":["the"]},{"Key":"changed the","Fragments":["code"]},{"Key":"code it","Fragments":["would"]},{"Key":"would probably","Fragments":["work"]},{"Key":"probably work","Fragments":["fine"]},{"Key":"work fine","Fragments":["now."]},{"Key":"I compared","Fragments":["your"]},{"Key":"compared your","Fragments":["submission"]},{"Key":"your submission","Fragments":["to"]},{"Key":"submission to","Fragments":["the"]},{"Key":"the example","Fragments":["and","using"]},{"Key":"example and","Fragments":["it's"]},{"Key":"and it's","Fragments":["basically"]},{"Key":"it's basically","Fragments":["the"]},{"Key":"basically the","Fragments":["same"]},{"Key":"same aside","Fragments":["from"]},{"Key":"aside from","Fragments":["the"]},{"Key":"example using","Fragments":["a"]},{"Key":"type synonym","Fragments":["and"]},{"Key":"synonym and","Fragments":["having"]},{"Key":"and having","Fragments":["`let"]},{"Key":"having `let","Fragments":["to_map"]},{"Key":"`let to_map","Fragments":["="]},{"Key":"to_map =","Fragments":["ident`."]},{"Key":"This works,","Fragments":["but"]},{"Key":"works, but","Fragments":["explicit"]},{"Key":"but explicit","Fragments":["recursion"]},{"Key":"explicit recursion","Fragments":["is","instead"]},{"Key":"recursion is","Fragments":["often"]},{"Key":"is often","Fragments":["considered"]},{"Key":"often considered","Fragments":["a"]},{"Key":"considered a","Fragments":["bit"]},{"Key":"bit ugly","Fragments":["(easy"]},{"Key":"ugly (easy","Fragments":["to"]},{"Key":"(easy to","Fragments":["accidentally"]},{"Key":"to accidentally","Fragments":["mess"]},{"Key":"accidentally mess","Fragments":["up)."]},{"Key":"mess up).","Fragments":["Can"]},{"Key":"up). Can","Fragments":["you"]},{"Key":"you express","Fragments":["this"]},{"Key":"express this","Fragments":["with"]},{"Key":"this with","Fragments":["higher-order"]},{"Key":"with higher-order","Fragments":["functions"]},{"Key":"higher-order functions","Fragments":["like"]},{"Key":"like map,","Fragments":["filter"]},{"Key":"map, filter","Fragments":["or"]},{"Key":"filter or","Fragments":["fold?"]},{"Key":" A","Fragments":["bit","few","few","few","nice","couple"]},{"Key":"A bit","Fragments":["briefer"]},{"Key":"bit briefer","Fragments":["than"]},{"Key":"briefer than","Fragments":["last"]},{"Key":"than last","Fragments":["time."]},{"Key":"last time.","Fragments":["I"]},{"Key":"time. I","Fragments":["don't"]},{"Key":"I don't","Fragments":["know","have","have","really","see","update","find","find","quite","have","know","think"]},{"Key":"don't know","Fragments":["if","why"]},{"Key":"know if","Fragments":["it"]},{"Key":"if it","Fragments":["would","is","does:"]},{"Key":"would be","Fragments":["possible","nicer","shorter,","more","better"]},{"Key":"be possible","Fragments":["to"]},{"Key":"possible to","Fragments":["redefine","reduce"]},{"Key":"to redefine","Fragments":["some"]},{"Key":"redefine some","Fragments":["of"]},{"Key":"some of","Fragments":["these","the"]},{"Key":"of `fold`...","Fragments":["I"]},{"Key":"`fold`... I","Fragments":["was"]},{"Key":"was having","Fragments":["some"]},{"Key":"having some","Fragments":["trouble"]},{"Key":"some trouble","Fragments":["getting","parsing"]},{"Key":"trouble getting","Fragments":["OCaml"]},{"Key":"getting OCaml","Fragments":["to"]},{"Key":"OCaml to","Fragments":["cooperate"]},{"Key":"to cooperate","Fragments":["with"]},{"Key":"cooperate with","Fragments":["such"]},{"Key":"with such","Fragments":["an"]},{"Key":"such an","Fragments":["approach."]},{"Key":"be possible.","Fragments":["That's"]},{"Key":"possible. That's","Fragments":["essentially"]},{"Key":"That's essentially","Fragments":["how"]},{"Key":"essentially how","Fragments":["these"]},{"Key":"how these","Fragments":["functions"]},{"Key":"functions are","Fragments":["implemented"]},{"Key":"are implemented","Fragments":["in"]},{"Key":"implemented in","Fragments":["Enum"]},{"Key":"in Enum","Fragments":["in"]},{"Key":"Enum in","Fragments":["Elixir"]},{"Key":"in Elixir","Fragments":["and"]},{"Key":"Elixir and","Fragments":["also"]},{"Key":"and also","Fragments":["how","the"]},{"Key":"also how","Fragments":["the"]},{"Key":"how the","Fragments":["Container.Make"]},{"Key":"the Container.Make","Fragments":["functor"]},{"Key":"Container.Make functor","Fragments":["works."]},{"Key":" Removed","Fragments":["the"]},{"Key":"Removed the","Fragments":["warning"]},{"Key":"warning generated","Fragments":["by"]},{"Key":"generated by","Fragments":["not"]},{"Key":"by not","Fragments":["labelling"]},{"Key":"not labelling","Fragments":["the"]},{"Key":"labelling the","Fragments":["suffix."]},{"Key":" Let","Fragments":["me"]},{"Key":"me guess,","Fragments":["you"]},{"Key":"guess, you","Fragments":["have"]},{"Key":"have experience","Fragments":["in"]},{"Key":"experience in","Fragments":["OCaml."]},{"Key":"in OCaml.","Fragments":[";)","I'm"]},{"Key":"I can't","Fragments":["help","say","check","seem"]},{"Key":"can't help","Fragments":["but"]},{"Key":"help but","Fragments":["feel"]},{"Key":"but feel","Fragments":["this"]},{"Key":"feel this","Fragments":["is"]},{"Key":"is somewhat","Fragments":["more"]},{"Key":"somewhat more","Fragments":["complicated"]},{"Key":"more complicated","Fragments":["and"]},{"Key":"complicated and","Fragments":["more"]},{"Key":"and more","Fragments":["imperative"]},{"Key":"more imperative","Fragments":["than"]},{"Key":"imperative than","Fragments":["it"]},{"Key":"than it","Fragments":["needs"]},{"Key":"it needs","Fragments":["to"]},{"Key":"needs to","Fragments":["be.","do"]},{"Key":"to be.","Fragments":["I"]},{"Key":"be. I","Fragments":["don't"]},{"Key":"don't have","Fragments":["time","to","to","much"]},{"Key":"have time","Fragments":["for"]},{"Key":"time for","Fragments":["a"]},{"Key":"for a","Fragments":["full","first","reason","while,","few","long,","while."]},{"Key":"a full","Fragments":["reaction"]},{"Key":"full reaction","Fragments":["right"]},{"Key":"reaction right","Fragments":["now"]},{"Key":"right now","Fragments":["but"]},{"Key":"now but","Fragments":["let"]},{"Key":"but let","Fragments":["me"]},{"Key":"let me","Fragments":["just"]},{"Key":"me just","Fragments":["ask"]},{"Key":"just ask","Fragments":["a"]},{"Key":"ask a","Fragments":["few"]},{"Key":"a few","Fragments":["questions:","rounds","tricks","reasons:"]},{"Key":" *","Fragments":["Why","Why","I","In","First,","Second,","Third,"]},{"Key":"* Why","Fragments":["let","the"]},{"Key":"Why let","Fragments":[".."]},{"Key":"let ..","Fragments":["and"]},{"Key":".. and","Fragments":["..","instead",".."]},{"Key":"and ..","Fragments":["and","and)?"]},{"Key":"and instead","Fragments":["of"]},{"Key":"of several","Fragments":["let"]},{"Key":"several let","Fragments":["bindings"]},{"Key":"let bindings","Fragments":["(I"]},{"Key":"bindings (I","Fragments":["usually"]},{"Key":"(I usually","Fragments":["only"]},{"Key":"usually only","Fragments":["see"]},{"Key":"only see","Fragments":["let","the"]},{"Key":"see let","Fragments":["rec"]},{"Key":"rec ..","Fragments":["and"]},{"Key":"Why the","Fragments":["imperative","`(Sring.compare"]},{"Key":"the imperative","Fragments":["algorithm"]},{"Key":"imperative algorithm","Fragments":["for"]},{"Key":"algorithm for","Fragments":["checking"]},{"Key":"for checking","Fragments":["if"]},{"Key":"checking if","Fragments":["a"]},{"Key":"if a","Fragments":["string","string"]},{"Key":"is shouting?","Fragments":["Isn't"]},{"Key":"shouting? Isn't","Fragments":["a"]},{"Key":"Isn't a","Fragments":["functional"]},{"Key":"a functional","Fragments":["algorithm"]},{"Key":"functional algorithm","Fragments":["shorter"]},{"Key":"algorithm shorter","Fragments":["here?"]},{"Key":" `let...and`.","Fragments":["Good"]},{"Key":"`let...and`. Good","Fragments":["answer,"]},{"Key":"Good answer,","Fragments":["you"]},{"Key":"answer, you","Fragments":["clearly"]},{"Key":"you clearly","Fragments":["understand"]},{"Key":"clearly understand","Fragments":["what's"]},{"Key":"understand what's","Fragments":["going"]},{"Key":"what's going","Fragments":["on."]},{"Key":"going on.","Fragments":["Counter"]},{"Key":"on. Counter","Fragments":["arguments"]},{"Key":"Counter arguments","Fragments":["are"]},{"Key":"arguments are","Fragments":["that"]},{"Key":"are that","Fragments":["always"]},{"Key":"that always","Fragments":["using"]},{"Key":"always using","Fragments":["`let"]},{"Key":"using `let","Fragments":["...`"]},{"Key":"`let ...`","Fragments":["makes"]},{"Key":"...` makes","Fragments":["refactoring"]},{"Key":"makes refactoring","Fragments":["somewhat"]},{"Key":"refactoring somewhat","Fragments":["easier,"]},{"Key":"somewhat easier,","Fragments":["that"]},{"Key":"easier, that","Fragments":["`and"]},{"Key":"that `and","Fragments":["...`"]},{"Key":"`and ...`","Fragments":["may"]},{"Key":"...` may","Fragments":["make"]},{"Key":"may make","Fragments":["it"]},{"Key":"it appear","Fragments":["that"]},{"Key":"appear that","Fragments":["something"]},{"Key":"that something","Fragments":["is"]},{"Key":"something is","Fragments":["part"]},{"Key":"is part","Fragments":["of","of"]},{"Key":"part of","Fragments":["a","the","`Core.Std`"]},{"Key":"rec binding","Fragments":["if"]},{"Key":"binding if","Fragments":["it"]},{"Key":"it is","Fragments":["out","is","not","Real"]},{"Key":"is out","Fragments":["of"]},{"Key":"out of","Fragments":["scope","the"]},{"Key":"of scope","Fragments":["and"]},{"Key":"scope and","Fragments":["that"]},{"Key":"and that","Fragments":["`let","it","only"]},{"Key":"that `let","Fragments":["..."]},{"Key":"`let ...","Fragments":["in","and","="]},{"Key":"... in","Fragments":["let"]},{"Key":"in let","Fragments":["..."]},{"Key":"let ...","Fragments":["in`"]},{"Key":"... in`","Fragments":["is","expression"]},{"Key":"in` is","Fragments":["more"]},{"Key":"is more","Fragments":["regular.","idiomatic,"]},{"Key":"more regular.","Fragments":["What"]},{"Key":"regular. What","Fragments":["arguments"]},{"Key":"What arguments","Fragments":["weigh"]},{"Key":"arguments weigh","Fragments":["strongest"]},{"Key":"weigh strongest","Fragments":["is"]},{"Key":"strongest is","Fragments":["a"]},{"Key":"a matter","Fragments":["of","of","of","of"]},{"Key":"matter of","Fragments":["personal","personal","preference","taste"]},{"Key":"of personal","Fragments":["style.","style."]},{"Key":" Personally","Fragments":["I","I"]},{"Key":"Personally I","Fragments":["think","prefer"]},{"Key":"think I","Fragments":["separate","actually"]},{"Key":"I separate","Fragments":["let's"]},{"Key":"separate let's","Fragments":["at"]},{"Key":"let's at","Fragments":["the"]},{"Key":"at the","Fragments":["module","bottom.","top","top","difference","end","moment","wrong"]},{"Key":"the module","Fragments":["level","we","name"]},{"Key":"module level","Fragments":["but"]},{"Key":"level but","Fragments":["I"]},{"Key":"of `let","Fragments":["...",".."]},{"Key":"... and","Fragments":["..."]},{"Key":"and ...","Fragments":["and`"]},{"Key":"... and`","Fragments":["for"]},{"Key":"and` for","Fragments":["values"]},{"Key":"for values","Fragments":["inside"]},{"Key":"values inside","Fragments":["functions"]},{"Key":"inside functions","Fragments":["for"]},{"Key":"functions for","Fragments":["the","writing"]},{"Key":"the reasons","Fragments":["you"]},{"Key":"reasons you","Fragments":["mentioned"]},{"Key":"you mentioned","Fragments":["and"]},{"Key":"mentioned and","Fragments":["because"]},{"Key":"and because","Fragments":["it"]},{"Key":"because it","Fragments":["means","doesn't"]},{"Key":"it means","Fragments":["I"]},{"Key":"means I","Fragments":["don't"]},{"Key":"have to","Fragments":["type","write","lowercase","admit"]},{"Key":"to type","Fragments":["'in'"]},{"Key":"type 'in'","Fragments":["after"]},{"Key":"'in' after","Fragments":["every"]},{"Key":"after every","Fragments":["variable"]},{"Key":"every variable","Fragments":["binding."]},{"Key":" Strings","Fragments":["being"]},{"Key":"Strings being","Fragments":["imperative:"]},{"Key":"being imperative:","Fragments":["yes"]},{"Key":"imperative: yes","Fragments":["and"]},{"Key":"yes and","Fragments":["no."]},{"Key":"and no.","Fragments":["Strings"]},{"Key":"no. Strings","Fragments":["are"]},{"Key":"Strings are","Fragments":["mutable"]},{"Key":"are mutable","Fragments":["though"]},{"Key":"mutable though","Fragments":["I"]},{"Key":"though I","Fragments":["rarely"]},{"Key":"I rarely","Fragments":["see"]},{"Key":"rarely see","Fragments":["them"]},{"Key":"see them","Fragments":["being"]},{"Key":"them being","Fragments":["used"]},{"Key":"being used","Fragments":["that","correctly"]},{"Key":"used that","Fragments":["way."]},{"Key":"that way.","Fragments":["And"]},{"Key":"way. And","Fragments":["the"]},{"Key":"And the","Fragments":["standard"]},{"Key":"standard library","Fragments":["doesn't","is","wrappers","is","there"]},{"Key":"library doesn't","Fragments":["really"]},{"Key":"doesn't really","Fragments":["have"]},{"Key":"really have","Fragments":["any","any"]},{"Key":"have any","Fragments":["nice","experience"]},{"Key":"any nice","Fragments":["functions"]},{"Key":"nice functions","Fragments":["such"]},{"Key":"functions such","Fragments":["as"]},{"Key":"such as","Fragments":["`fold_left`","[Batteries](http://batteries.forge.ocamlcore.org/)"]},{"Key":"as `fold_left`","Fragments":["for"]},{"Key":"`fold_left` for","Fragments":["strings."]},{"Key":"for strings.","Fragments":["But"]},{"Key":"strings. But","Fragments":["the"]},{"Key":"But the","Fragments":["standard"]},{"Key":"library is","Fragments":["rather,","rather","[re](https://github.com/ocaml/ocaml-re)."]},{"Key":"is rather,","Fragments":["ahem,"]},{"Key":"rather, ahem,","Fragments":["limited"]},{"Key":"ahem, limited","Fragments":["with"]},{"Key":"limited with","Fragments":["some"]},{"Key":"some debatable","Fragments":["design"]},{"Key":"debatable design","Fragments":["decisions"]},{"Key":"design decisions","Fragments":["(such"]},{"Key":"decisions (such","Fragments":["as"]},{"Key":"as non-tail-recursive","Fragments":["list"]},{"Key":"non-tail-recursive list","Fragments":["functions"]},{"Key":"list functions","Fragments":["that"]},{"Key":"functions that","Fragments":["will","could"]},{"Key":"that will","Fragments":["fail"]},{"Key":"will fail","Fragments":["if"]},{"Key":"fail if","Fragments":["you"]},{"Key":"if you","Fragments":["pass","want.","have"]},{"Key":"you pass","Fragments":["a"]},{"Key":"pass a","Fragments":["large"]},{"Key":"a large","Fragments":["enough","project,"]},{"Key":"large enough","Fragments":["list)"]},{"Key":"enough list)","Fragments":["and"]},{"Key":"list) and","Fragments":["many"]},{"Key":"and many","Fragments":["people"]},{"Key":"many people","Fragments":["either"]},{"Key":"people either","Fragments":["use"]},{"Key":"either use","Fragments":["one"]},{"Key":"use one","Fragments":["of"]},{"Key":"the alternative","Fragments":["standard"]},{"Key":"alternative standard","Fragments":["library"]},{"Key":"library wrappers","Fragments":["such"]},{"Key":"wrappers such","Fragments":["as"]},{"Key":"as [Batteries](http://batteries.forge.ocamlcore.org/)","Fragments":["or"]},{"Key":"[Batteries](http://batteries.forge.ocamlcore.org/) or","Fragments":["[Core](https://ocaml.janestreet.com/ocaml-core/latest/doc/)"]},{"Key":"or [Core](https://ocaml.janestreet.com/ocaml-core/latest/doc/)","Fragments":["or"]},{"Key":"[Core](https://ocaml.janestreet.com/ocaml-core/latest/doc/) or","Fragments":["gradually"]},{"Key":"or gradually","Fragments":["build"]},{"Key":"gradually build","Fragments":["a"]},{"Key":"build a","Fragments":["set"]},{"Key":"a set","Fragments":["of"]},{"Key":"set of","Fragments":["their","conditions?"]},{"Key":"of their","Fragments":["own"]},{"Key":"their own","Fragments":["helper"]},{"Key":"own helper","Fragments":["functions"]},{"Key":"functions over","Fragments":["time."]},{"Key":"over time.","Fragments":["Both"]},{"Key":"time. Both","Fragments":["Batteries"]},{"Key":"Both Batteries","Fragments":["and"]},{"Key":"Batteries and","Fragments":["Core"]},{"Key":"and Core","Fragments":["extend"]},{"Key":"Core extend","Fragments":["the"]},{"Key":"extend the","Fragments":["String"]},{"Key":"the String","Fragments":["module","module!","module,"]},{"Key":"String module","Fragments":["to","has"]},{"Key":"module to","Fragments":["allow"]},{"Key":"to allow","Fragments":["strings"]},{"Key":"allow strings","Fragments":["to"]},{"Key":"strings to","Fragments":["be"]},{"Key":" Well","Fragments":["I","there's","it's"]},{"Key":"Well I","Fragments":["don't"]},{"Key":"don't really","Fragments":["have","use."]},{"Key":"any experience","Fragments":["with"]},{"Key":"experience with","Fragments":["Extlib,"]},{"Key":"with Extlib,","Fragments":["only"]},{"Key":"Extlib, only","Fragments":["a"]},{"Key":"only a","Fragments":["bit","single"]},{"Key":"bit with","Fragments":["Core"]},{"Key":"with Core","Fragments":["(mostly"]},{"Key":"Core (mostly","Fragments":["building"]},{"Key":"(mostly building","Fragments":["this"]},{"Key":"building this","Fragments":["exercism"]},{"Key":"this exercism","Fragments":["track)"]},{"Key":"exercism track)","Fragments":["and"]},{"Key":"track) and","Fragments":["Batteries."]},{"Key":"and Batteries.","Fragments":["I"]},{"Key":"Batteries. I","Fragments":["used","will"]},{"Key":"used Core","Fragments":["for"]},{"Key":"Core for","Fragments":["the","these"]},{"Key":"the exercism","Fragments":["OCaml"]},{"Key":"exercism OCaml","Fragments":["unit"]},{"Key":"OCaml unit","Fragments":["tests"]},{"Key":"unit tests","Fragments":["because"]},{"Key":"tests because","Fragments":["Real"]},{"Key":"because Real","Fragments":["World"]},{"Key":"Real World","Fragments":["OCaml","OCaml,"]},{"Key":"World OCaml","Fragments":["used"]},{"Key":"OCaml used","Fragments":["it"]},{"Key":"used it","Fragments":["and"]},{"Key":"it and","Fragments":["it","occasionally","then"]},{"Key":"and it","Fragments":["felt","took","is"]},{"Key":"it felt","Fragments":["like"]},{"Key":"felt like","Fragments":["a"]},{"Key":"like a","Fragments":["well","horrible"]},{"Key":"a well","Fragments":["designed"]},{"Key":"well designed","Fragments":["lib.","but"]},{"Key":"I do","Fragments":["still","have"]},{"Key":"do still","Fragments":["think"]},{"Key":"still think","Fragments":["Core"]},{"Key":"think Core","Fragments":["is"]},{"Key":"Core is","Fragments":["well","about"]},{"Key":"is well","Fragments":["designed"]},{"Key":"designed but","Fragments":["I"]},{"Key":"like Batteries","Fragments":["better"]},{"Key":"Batteries better","Fragments":["simply"]},{"Key":"better simply","Fragments":["on"]},{"Key":"simply on","Fragments":["gut"]},{"Key":"on gut","Fragments":["feeling."]},{"Key":"gut feeling.","Fragments":["Core"]},{"Key":"feeling. Core","Fragments":["feels"]},{"Key":"Core feels","Fragments":["more"]},{"Key":"feels more","Fragments":["limited"]},{"Key":"more limited","Fragments":["in"]},{"Key":"limited in","Fragments":["scope,"]},{"Key":"in scope,","Fragments":["more"]},{"Key":"scope, more","Fragments":["basic"]},{"Key":"more basic","Fragments":["data"]},{"Key":"basic data","Fragments":["structures"]},{"Key":"data structures","Fragments":["and"]},{"Key":"structures and","Fragments":["Comparable"]},{"Key":"and Comparable","Fragments":["and"]},{"Key":"Comparable and","Fragments":["such."]},{"Key":"and such.","Fragments":["Core_extended"]},{"Key":"such. Core_extended","Fragments":["has"]},{"Key":"Core_extended has","Fragments":["some"]},{"Key":"has some","Fragments":["extra"]},{"Key":"extra stuff","Fragments":["but"]},{"Key":"stuff but","Fragments":["I"]},{"Key":"get the","Fragments":["impression"]},{"Key":"the impression","Fragments":["it"]},{"Key":"impression it","Fragments":["mostly"]},{"Key":"it mostly","Fragments":["serves"]},{"Key":"mostly serves","Fragments":["to"]},{"Key":"serves to","Fragments":["support"]},{"Key":"to support","Fragments":["Async."]},{"Key":"support Async.","Fragments":["Core's"]},{"Key":"Async. Core's","Fragments":["documentation"]},{"Key":"Core's documentation","Fragments":["often","could"]},{"Key":"documentation often","Fragments":["feels"]},{"Key":"often feels","Fragments":["incomplete,"]},{"Key":"feels incomplete,","Fragments":["which"]},{"Key":"incomplete, which","Fragments":["makes"]},{"Key":"which makes","Fragments":["it"]},{"Key":"makes it","Fragments":["hard"]},{"Key":"it hard","Fragments":["to"]},{"Key":"hard to","Fragments":["learn","tell","follow.","follow.","understand).","read"]},{"Key":"to learn","Fragments":["it.","(less","about"]},{"Key":" Batteries","Fragments":["on"]},{"Key":"Batteries on","Fragments":["the"]},{"Key":"other hand","Fragments":["feels"]},{"Key":"hand feels","Fragments":["a"]},{"Key":"feels a","Fragments":["bit","bit"]},{"Key":"bit more","Fragments":["like","readable,"]},{"Key":"more like","Fragments":["it"]},{"Key":"it has","Fragments":["grown","stuff"]},{"Key":"has grown","Fragments":["by"]},{"Key":"grown by","Fragments":["people"]},{"Key":"by people","Fragments":["adding"]},{"Key":"people adding","Fragments":["stuff"]},{"Key":"adding stuff","Fragments":["to"]},{"Key":"stuff to","Fragments":["it"]},{"Key":"to it","Fragments":["and"]},{"Key":"and occasionally","Fragments":["refactoring"]},{"Key":"occasionally refactoring","Fragments":["to"]},{"Key":"refactoring to","Fragments":["keep"]},{"Key":"to keep","Fragments":["things","this"]},{"Key":"keep things","Fragments":["somewhat"]},{"Key":"things somewhat","Fragments":["consistent."]},{"Key":"somewhat consistent.","Fragments":["In"]},{"Key":"consistent. In","Fragments":["this"]},{"Key":"In this","Fragments":["aspect"]},{"Key":"this aspect","Fragments":["Core"]},{"Key":"aspect Core","Fragments":["and"]},{"Key":"Core and","Fragments":["Batteries","that"]},{"Key":"and Batteries","Fragments":["are"]},{"Key":"Batteries are","Fragments":["the"]},{"Key":"are the","Fragments":["whole","issue."]},{"Key":"the whole","Fragments":["Cathedral"]},{"Key":"whole Cathedral","Fragments":["and"]},{"Key":"Cathedral and","Fragments":["the"]},{"Key":"the Bazaar","Fragments":["thing"]},{"Key":"Bazaar thing","Fragments":["again."]},{"Key":"thing again.","Fragments":["I"]},{"Key":"again. I","Fragments":["like"]},{"Key":"the fact","Fragments":["that","that"]},{"Key":"fact that","Fragments":["Batteries","running"]},{"Key":"that Batteries","Fragments":["is"]},{"Key":"Batteries is","Fragments":["easier","quite","almost"]},{"Key":"is easier","Fragments":["to"]},{"Key":"learn (less","Fragments":["module"]},{"Key":"(less module","Fragments":["madness),"]},{"Key":"module madness),","Fragments":["less"]},{"Key":"madness), less","Fragments":["of"]},{"Key":"less of","Fragments":["it's"]},{"Key":"of it's","Fragments":["own"]},{"Key":"it's own","Fragments":["world","function."]},{"Key":"own world","Fragments":["than"]},{"Key":"world than","Fragments":["Core"]},{"Key":"than Core","Fragments":["and"]},{"Key":"that it","Fragments":["has","fits","probably"]},{"Key":"has stuff","Fragments":["like"]},{"Key":"stuff like","Fragments":["UTF-8","`'_a`"]},{"Key":"like UTF-8","Fragments":["Text"]},{"Key":"UTF-8 Text","Fragments":["strings."]},{"Key":"Text strings.","Fragments":["The"]},{"Key":"strings. The","Fragments":["documentation"]},{"Key":"The documentation","Fragments":["of"]},{"Key":"documentation of","Fragments":["Batteries"]},{"Key":"of Batteries","Fragments":["is"]},{"Key":"is quite","Fragments":["good,","standard"]},{"Key":"quite good,","Fragments":["every"]},{"Key":"good, every","Fragments":["function"]},{"Key":"every function","Fragments":["seems"]},{"Key":"function seems","Fragments":["to"]},{"Key":"seems to","Fragments":["have","be","be","be","need","be","take"]},{"Key":"to have","Fragments":["at","solved"]},{"Key":"have at","Fragments":["least"]},{"Key":"at least","Fragments":["one","this"]},{"Key":"least one","Fragments":["line"]},{"Key":"one line","Fragments":["that"]},{"Key":"line that","Fragments":["says"]},{"Key":"that says","Fragments":["what","so."]},{"Key":"says what","Fragments":["it"]},{"Key":"what it","Fragments":["does.","is","looked"]},{"Key":" Well,","Fragments":["I","string","I"]},{"Key":"Well, I","Fragments":["can't","think"]},{"Key":"can't say","Fragments":["I"]},{"Key":"say I","Fragments":["have"]},{"Key":"I have","Fragments":["no","no","done","a","to","cleaned","tried","*no*"]},{"Key":"have no","Fragments":["experience.","*pratical*"]},{"Key":"no experience.","Fragments":["However,"]},{"Key":"experience. However,","Fragments":["I"]},{"Key":"However, I","Fragments":["have"]},{"Key":"no *pratical*","Fragments":["experience,"]},{"Key":"*pratical* experience,","Fragments":["that's"]},{"Key":"experience, that's","Fragments":["why"]},{"Key":"that's why","Fragments":["I"]},{"Key":"why I","Fragments":["am","used"]},{"Key":"I am","Fragments":["eager","emulating","a","trying"]},{"Key":"am eager","Fragments":["for"]},{"Key":"eager for","Fragments":["feedback"]},{"Key":"for feedback","Fragments":["by"]},{"Key":"feedback by","Fragments":["ocaml"]},{"Key":"by ocaml","Fragments":["veterans."]},{"Key":" Some","Fragments":["answers:"]},{"Key":" #####","Fragments":["About","About","About"]},{"Key":"##### About","Fragments":["complexity","let...and","describe_yielding"]},{"Key":"see now","Fragments":["that"]},{"Key":"now that","Fragments":["I"]},{"Key":"that I","Fragments":["am","don't"]},{"Key":"am emulating","Fragments":["the"]},{"Key":"emulating the","Fragments":["guard"]},{"Key":"the guard","Fragments":["system"]},{"Key":"guard system","Fragments":["with"]},{"Key":"with my","Fragments":["typesum.","own"]},{"Key":"my typesum.","Fragments":["Will"]},{"Key":"typesum. Will","Fragments":["change"]},{"Key":"Will change","Fragments":["that"]},{"Key":"change that","Fragments":["and"]},{"Key":"that and","Fragments":["things"]},{"Key":"and things","Fragments":["should"]},{"Key":"things should","Fragments":["get"]},{"Key":"should get","Fragments":["simpler."]},{"Key":" My","Fragments":["point","personal","solution"]},{"Key":"My point","Fragments":["of"]},{"Key":"point of","Fragments":["view","feedback:"]},{"Key":"of view","Fragments":["is"]},{"Key":"view is","Fragments":["that"]},{"Key":"is that","Fragments":["functional","strings"]},{"Key":"that functional","Fragments":["programming"]},{"Key":"functional programming","Fragments":["is"]},{"Key":"programming is","Fragments":["all"]},{"Key":"is all","Fragments":["about"]},{"Key":"all about","Fragments":["scopes"]},{"Key":"about scopes","Fragments":["and"]},{"Key":"scopes and","Fragments":["lifespan."]},{"Key":"and lifespan.","Fragments":["Furthermore,"]},{"Key":"lifespan. Furthermore,","Fragments":["the"]},{"Key":"Furthermore, the","Fragments":["lack"]},{"Key":"the lack","Fragments":["of"]},{"Key":"lack of","Fragments":["prototypes","`String.split"]},{"Key":"of prototypes","Fragments":["force"]},{"Key":"prototypes force","Fragments":["us"]},{"Key":"force us","Fragments":["to"]},{"Key":"us to","Fragments":["push"]},{"Key":"to push","Fragments":["intermediate"]},{"Key":"push intermediate","Fragments":["functions"]},{"Key":"intermediate functions","Fragments":["ahead"]},{"Key":"functions ahead","Fragments":["in"]},{"Key":"ahead in","Fragments":["the"]},{"Key":"the file","Fragments":["while"]},{"Key":"file while","Fragments":["the"]},{"Key":"while the","Fragments":["one"]},{"Key":"the one","Fragments":["that"]},{"Key":"one that","Fragments":["really","uses"]},{"Key":"that really","Fragments":["matters"]},{"Key":"really matters","Fragments":["is"]},{"Key":"matters is","Fragments":["at"]},{"Key":"is at","Fragments":["the"]},{"Key":" Using","Fragments":["let...and"]},{"Key":"Using let...and","Fragments":["explicitly:"]},{"Key":"- Differentiate","Fragments":["the"]},{"Key":"Differentiate the","Fragments":["different"]},{"Key":"the different","Fragments":["levels"]},{"Key":"different levels","Fragments":["of"]},{"Key":"levels of","Fragments":["forward"]},{"Key":"of forward","Fragments":["declarations"]},{"Key":"- Help","Fragments":["to"]},{"Key":"Help to","Fragments":["think"]},{"Key":"to think","Fragments":["about"]},{"Key":"think about","Fragments":["scoping,","strings"]},{"Key":"about scoping,","Fragments":["what's"]},{"Key":"scoping, what's","Fragments":["inside"]},{"Key":"what's inside","Fragments":["what."]},{"Key":"Well, string","Fragments":["in"]},{"Key":"string in","Fragments":["Ocaml","certain"]},{"Key":"in Ocaml","Fragments":["are"]},{"Key":"Ocaml are","Fragments":["imperative"]},{"Key":"are imperative","Fragments":["per"]},{"Key":"imperative per","Fragments":["se,"]},{"Key":"per se,","Fragments":["isn't"]},{"Key":"se, isn't","Fragments":["it"]},{"Key":"isn't it","Fragments":["?"]},{"Key":"it ?","Fragments":["Furthermore,"]},{"Key":"? Furthermore,","Fragments":["I"]},{"Key":"Furthermore, I","Fragments":["don't","personally"]},{"Key":"don't see","Fragments":["any"]},{"Key":"see any","Fragments":["simple"]},{"Key":"any simple","Fragments":["way"]},{"Key":"simple way","Fragments":["to"]},{"Key":"to check","Fragments":["the"]},{"Key":"check the","Fragments":["string"]},{"Key":"string without","Fragments":["iterating"]},{"Key":"without iterating","Fragments":["twice."]},{"Key":" Yes,","Fragments":["the","the"]},{"Key":"Yes, the","Fragments":["non-tail-recursive","compose"]},{"Key":"the non-tail-recursive","Fragments":["functions","functions"]},{"Key":"non-tail-recursive functions","Fragments":["of","and"]},{"Key":"functions of","Fragments":["the"]},{"Key":"the stdlib","Fragments":["has"]},{"Key":"stdlib has","Fragments":["to"]},{"Key":"has to","Fragments":["be"]},{"Key":"be seen","Fragments":["under"]},{"Key":"seen under","Fragments":["the"]},{"Key":"under the","Fragments":["sieve"]},{"Key":"the sieve","Fragments":["of"]},{"Key":"sieve of","Fragments":["history."]},{"Key":"of history.","Fragments":["Making"]},{"Key":"history. Making","Fragments":["an"]},{"Key":"Making an","Fragments":["ML"]},{"Key":"an ML","Fragments":["language"]},{"Key":"ML language","Fragments":["as-fast-as-C"]},{"Key":"language as-fast-as-C","Fragments":["was"]},{"Key":"as-fast-as-C was","Fragments":["a"]},{"Key":"a really","Fragments":["strong"]},{"Key":"really strong","Fragments":["goal"]},{"Key":"strong goal","Fragments":["of"]},{"Key":"goal of","Fragments":["the"]},{"Key":"the Galium","Fragments":["team"]},{"Key":"Galium team","Fragments":["at"]},{"Key":"team at","Fragments":["this"]},{"Key":"at this","Fragments":["time..."]},{"Key":"I didn't","Fragments":["thought","like","use","think"]},{"Key":"didn't thought","Fragments":["about"]},{"Key":"thought about","Fragments":["using","them","using"]},{"Key":"about using","Fragments":["Battery/Corelib.","pattern"]},{"Key":"I never","Fragments":["used"]},{"Key":"never used","Fragments":["Corelib,"]},{"Key":"used Corelib,","Fragments":["only"]},{"Key":"Corelib, only","Fragments":["Extlib"]},{"Key":"only Extlib","Fragments":["then"]},{"Key":"Extlib then","Fragments":["Batteries"]},{"Key":"then Batteries","Fragments":["mainly"]},{"Key":"Batteries mainly","Fragments":["for"]},{"Key":"mainly for","Fragments":["political"]},{"Key":"for political","Fragments":["reasons"]},{"Key":"political reasons","Fragments":["as"]},{"Key":"reasons as","Fragments":["I"]},{"Key":"as I","Fragments":["am","see","went","made"]},{"Key":"am a","Fragments":["FLOSS"]},{"Key":"a FLOSS","Fragments":["dev."]},{"Key":"FLOSS dev.","Fragments":["What"]},{"Key":"dev. What","Fragments":["are"]},{"Key":"What are","Fragments":["your"]},{"Key":"are your","Fragments":["thought"]},{"Key":"your thought","Fragments":["about"]},{"Key":"about them","Fragments":["?"]},{"Key":"them ?","Fragments":["What's"]},{"Key":"? What's","Fragments":["your"]},{"Key":"What's your","Fragments":["preference"]},{"Key":"your preference","Fragments":["?"]},{"Key":" Yep,","Fragments":["I"]},{"Key":"Yep, I","Fragments":["don't"]},{"Key":"don't update","Fragments":["my"]},{"Key":"update my","Fragments":["code"]},{"Key":"my code","Fragments":["in"]},{"Key":"code in","Fragments":["order"]},{"Key":"in order","Fragments":["to"]},{"Key":"order to","Fragments":["reduce"]},{"Key":"to reduce","Fragments":["the","the","how"]},{"Key":"the noise.","Fragments":["but"]},{"Key":"noise. but","Fragments":["that's"]},{"Key":"but that's","Fragments":["a","a"]},{"Key":"that's a","Fragments":["nice","matter"]},{"Key":"a nice","Fragments":["input.","day!"]},{"Key":"nice input.","Fragments":["Thanks"]},{"Key":"input. Thanks","Fragments":["!"]},{"Key":"My personal","Fragments":["coding"]},{"Key":"personal coding","Fragments":["style","style"]},{"Key":"coding style","Fragments":["is","is"]},{"Key":"to never","Fragments":["open","hide","`open`"]},{"Key":"never open","Fragments":["anything"]},{"Key":"open anything","Fragments":["that's"]},{"Key":"anything that's","Fragments":["external"]},{"Key":"that's external","Fragments":["nor"]},{"Key":"external nor","Fragments":["referenced"]},{"Key":"nor referenced","Fragments":["by"]},{"Key":"referenced by","Fragments":["\u003e50%","half"]},{"Key":"by \u003e50%","Fragments":["of"]},{"Key":"\u003e50% of","Fragments":["the"]},{"Key":"the modules","Fragments":["(usually"]},{"Key":"modules (usually","Fragments":["type.ml,"]},{"Key":"(usually type.ml,","Fragments":["common.ml,"]},{"Key":"type.ml, common.ml,","Fragments":["and"]},{"Key":"common.ml, and","Fragments":["the"]},{"Key":"the content","Fragments":["of"]},{"Key":"content of","Fragments":["the"]},{"Key":"the `utils/`","Fragments":["dir)."]},{"Key":" Characters","Fragments":["are"]},{"Key":"Characters are","Fragments":["cheap,"]},{"Key":"are cheap,","Fragments":["so"]},{"Key":"cheap, so","Fragments":["telling"]},{"Key":"so telling","Fragments":["explicitly"]},{"Key":"telling explicitly","Fragments":["the"]},{"Key":"explicitly the","Fragments":["module"]},{"Key":"module we","Fragments":["use"]},{"Key":"we use","Fragments":["doesn't"]},{"Key":"use doesn't","Fragments":["cost"]},{"Key":"doesn't cost","Fragments":["anything"]},{"Key":"cost anything","Fragments":["and"]},{"Key":"anything and","Fragments":["improve"]},{"Key":"and improve","Fragments":["readability,"]},{"Key":"improve readability,","Fragments":["as"]},{"Key":"readability, as","Fragments":["I"]},{"Key":"see it.","Fragments":[";-)"]},{"Key":" That's","Fragments":["certainly","a","certainly","odd,"]},{"Key":"That's certainly","Fragments":["a","an"]},{"Key":"certainly a","Fragments":["sensible"]},{"Key":"a sensible","Fragments":["policy."]},{"Key":"sensible policy.","Fragments":["Arguably"]},{"Key":"policy. Arguably","Fragments":["though"]},{"Key":"Arguably though","Fragments":["`open"]},{"Key":"though `open","Fragments":["Batteries`"]},{"Key":"`open Batteries`","Fragments":["is","at","won't"]},{"Key":"Batteries` is","Fragments":["\"less"]},{"Key":"is \"less","Fragments":["worse\""]},{"Key":"\"less worse\"","Fragments":["than"]},{"Key":"worse\" than","Fragments":["most"]},{"Key":"than most","Fragments":["opens"]},{"Key":"most opens","Fragments":["in"]},{"Key":"opens in","Fragments":["that"]},{"Key":"in that","Fragments":["it's"]},{"Key":"that it's","Fragments":["part","possible"]},{"Key":"it's part","Fragments":["of"]},{"Key":"the machinery","Fragments":["of"]},{"Key":"machinery of","Fragments":["using"]},{"Key":"a different","Fragments":["standard","name"]},{"Key":"different standard","Fragments":["lib."]},{"Key":"standard lib.","Fragments":["But"]},{"Key":"lib. But","Fragments":["it's"]},{"Key":"But it's","Fragments":["a"]},{"Key":"it's a","Fragments":["matter"]},{"Key":"I prefer","Fragments":["`open","not"]},{"Key":"prefer `open","Fragments":["Batteries`"]},{"Key":"Batteries` at","Fragments":["the"]},{"Key":"level and","Fragments":["`String.fold_left`"]},{"Key":"and `String.fold_left`","Fragments":["instead"]},{"Key":"`String.fold_left` instead","Fragments":["of"]},{"Key":"of `BatString.fold_left`","Fragments":["but"]},{"Key":"`BatString.fold_left` but","Fragments":["that's"]},{"Key":"of preference","Fragments":["I"]},{"Key":"preference I","Fragments":["guess."]},{"Key":"I guess.","Fragments":["Batteries"]},{"Key":"guess. Batteries","Fragments":["is"]},{"Key":"is almost","Fragments":["fully"]},{"Key":"almost fully","Fragments":["compatible"]},{"Key":"fully compatible","Fragments":["with"]},{"Key":"compatible with","Fragments":["the"]},{"Key":"standard lib","Fragments":["(there"]},{"Key":"lib (there","Fragments":["are"]},{"Key":"(there are","Fragments":["some"]},{"Key":"are some","Fragments":["overrides"]},{"Key":"some overrides","Fragments":["related"]},{"Key":"overrides related","Fragments":["to"]},{"Key":"related to","Fragments":["channels)"]},{"Key":"to channels)","Fragments":["so"]},{"Key":"channels) so","Fragments":["`open"]},{"Key":"so `open","Fragments":["Batteries`"]},{"Key":"Batteries` won't","Fragments":["lose"]},{"Key":"won't lose","Fragments":["any"]},{"Key":"lose any","Fragments":["functionality"]},{"Key":"any functionality","Fragments":["that's"]},{"Key":"functionality that's","Fragments":["in"]},{"Key":"that's in","Fragments":["the"]},{"Key":"For `describe_nothing`","Fragments":["I'd"]},{"Key":"`describe_nothing` I'd","Fragments":["go"]},{"Key":"I'd go","Fragments":["with"]},{"Key":"go with","Fragments":["`BatString.is_empty`.","`List.map`"]},{"Key":"For `describe_question`","Fragments":["`BatString.ends_with`"]},{"Key":"`describe_question` `BatString.ends_with`","Fragments":["might"]},{"Key":"`BatString.ends_with` might","Fragments":["come"]},{"Key":" Other","Fragments":["than","than","than"]},{"Key":"Other than","Fragments":["that,","that","that,"]},{"Key":"than that,","Fragments":["looks","very"]},{"Key":"that, looks","Fragments":["good."]},{"Key":"Looks great.","Fragments":["No"]},{"Key":"great. No","Fragments":["tail"]},{"Key":"No tail","Fragments":["call"]},{"Key":"tail call","Fragments":["recursion"]},{"Key":"call recursion","Fragments":["problems"]},{"Key":"recursion problems","Fragments":["and"]},{"Key":"problems and","Fragments":["a"]},{"Key":"and a","Fragments":["very","very","`~default:[]`","tail"]},{"Key":"a very","Fragments":["functional","very","inefficient"]},{"Key":"very functional","Fragments":["approach"]},{"Key":"functional approach","Fragments":["by"]},{"Key":"approach by","Fragments":["using"]},{"Key":"by using","Fragments":["a","what's","partial","functions"]},{"Key":"a higher","Fragments":["order"]},{"Key":"higher order","Fragments":["function","functions"]},{"Key":"order function","Fragments":["to"]},{"Key":"function to","Fragments":["implement","split"]},{"Key":"implement most","Fragments":["others."]},{"Key":"I'm a","Fragments":["bit"]},{"Key":"bit curious","Fragments":["about"]},{"Key":"curious about","Fragments":["the"]},{"Key":"the implementation","Fragments":["of","(it","uses"]},{"Key":"of `map`","Fragments":["and"]},{"Key":"`map` and","Fragments":["`filter`.","`filter`","`reduce`)."]},{"Key":"and `filter`.","Fragments":["Why"]},{"Key":"`filter`. Why","Fragments":["did"]},{"Key":"did you","Fragments":["chose"]},{"Key":"you chose","Fragments":["to"]},{"Key":"chose to","Fragments":["implement"]},{"Key":"implement them","Fragments":["in"]},{"Key":"them in","Fragments":["terms"]},{"Key":"of `foldl`?","Fragments":["Did"]},{"Key":"`foldl`? Did","Fragments":["you"]},{"Key":"Did you","Fragments":["consider"]},{"Key":"you consider","Fragments":["`foldr`?"]},{"Key":" No,","Fragments":["I"]},{"Key":"No, I","Fragments":["did"]},{"Key":"not consider","Fragments":["to"]},{"Key":"consider to","Fragments":["implement"]},{"Key":"implement it","Fragments":["using","the"]},{"Key":"it using","Fragments":["foldr,"]},{"Key":"using foldr,","Fragments":["since"]},{"Key":"foldr, since","Fragments":["I"]},{"Key":"since I","Fragments":["started","used"]},{"Key":"with foldl","Fragments":["and"]},{"Key":"foldl and","Fragments":["then"]},{"Key":"and then","Fragments":["ran","fail","implement","rewrote"]},{"Key":"then ran","Fragments":["into"]},{"Key":"ran into","Fragments":["massive"]},{"Key":"into massive","Fragments":["problems"]},{"Key":"massive problems","Fragments":["concerning"]},{"Key":"problems concerning","Fragments":["the"]},{"Key":"concerning the","Fragments":["running"]},{"Key":"the running","Fragments":["time"]},{"Key":"running time","Fragments":["when"]},{"Key":"time when","Fragments":["implementing"]},{"Key":"when implementing","Fragments":["concat."]},{"Key":"implementing concat.","Fragments":["After"]},{"Key":"concat. After","Fragments":["a"]},{"Key":"After a","Fragments":["little"]},{"Key":"little meddling","Fragments":["with"]},{"Key":"meddling with","Fragments":["different"]},{"Key":"with different","Fragments":["variations"]},{"Key":"different variations","Fragments":["of"]},{"Key":"variations of","Fragments":["append"]},{"Key":"of append","Fragments":["and"]},{"Key":"append and","Fragments":["concat"]},{"Key":"and concat","Fragments":["I"]},{"Key":"concat I","Fragments":["started"]},{"Key":"started to","Fragments":["use"]},{"Key":"use the","Fragments":["foldr","toplevel","type","`function`","operators","module","regex","String.is_empty"]},{"Key":"the foldr","Fragments":["for"]},{"Key":"foldr for","Fragments":["them;"]},{"Key":"for them;","Fragments":["see"]},{"Key":"them; see","Fragments":["the"]},{"Key":"see the","Fragments":["last","test"]},{"Key":"the last","Fragments":["published","iteration","character","line,","exercise"]},{"Key":"last published","Fragments":["version"]},{"Key":"published version","Fragments":["of"]},{"Key":" However,","Fragments":["you"]},{"Key":"However, you","Fragments":["are","could","might"]},{"Key":"you are","Fragments":["right"]},{"Key":"are right","Fragments":["filter"]},{"Key":"right filter","Fragments":["and"]},{"Key":"filter and","Fragments":["map"]},{"Key":"and map","Fragments":["would"]},{"Key":"map would","Fragments":["be"]},{"Key":"be nicer","Fragments":["as"]},{"Key":"nicer as","Fragments":["foldr"]},{"Key":"as foldr","Fragments":["and"]},{"Key":"foldr and","Fragments":["in"]},{"Key":"and in","Fragments":["the"]},{"Key":"last iteration","Fragments":["they"]},{"Key":"iteration they","Fragments":["are"]},{"Key":"they are","Fragments":["used.","letters","small.","fantastic),"]},{"Key":"used. Thanks","Fragments":["for"]},{"Key":"Looks good,","Fragments":["the"]},{"Key":"good, the","Fragments":["code"]},{"Key":"code is","Fragments":["understandable","using"]},{"Key":"is understandable","Fragments":["and"]},{"Key":"understandable and","Fragments":["doesn't"]},{"Key":"and doesn't","Fragments":["seem"]},{"Key":"doesn't seem","Fragments":["to","to"]},{"Key":"seem to","Fragments":["do","match","work","have","find"]},{"Key":"do weird","Fragments":["things."]},{"Key":"A few","Fragments":["stylistic","small","point","things."]},{"Key":"few stylistic","Fragments":["pointers:"]},{"Key":"It's common","Fragments":["to"]},{"Key":"common to","Fragments":["call"]},{"Key":"to call","Fragments":["`String.is_empty`"]},{"Key":"call `String.is_empty`","Fragments":["(`open"]},{"Key":"`String.is_empty` (`open","Fragments":["Core`"]},{"Key":"(`open Core`","Fragments":["makes"]},{"Key":"Core` makes","Fragments":["`Core_string`"]},{"Key":"makes `Core_string`","Fragments":["available"]},{"Key":"`Core_string` available","Fragments":["as"]},{"Key":"available as","Fragments":["just"]},{"Key":"as just","Fragments":["`String`)"]},{"Key":"just `String`)","Fragments":["instead"]},{"Key":"`String`) instead","Fragments":["of"]},{"Key":"of `open","Fragments":["Core.Core_string.is_empty`."]},{"Key":"`open Core.Core_string.is_empty`.","Fragments":["Opens"]},{"Key":"Core.Core_string.is_empty`. Opens","Fragments":["at"]},{"Key":"Opens at","Fragments":["the"]},{"Key":"level (aside","Fragments":["from"]},{"Key":"(aside from","Fragments":["stuff"]},{"Key":"from stuff","Fragments":["explicitly"]},{"Key":"stuff explicitly","Fragments":["intended"]},{"Key":"explicitly intended","Fragments":["for"]},{"Key":"intended for","Fragments":["it"]},{"Key":"for it","Fragments":["like","is"]},{"Key":"it like","Fragments":["`Core.Std`)"]},{"Key":"like `Core.Std`)","Fragments":["make"]},{"Key":"`Core.Std`) make","Fragments":["the"]},{"Key":"code harder","Fragments":["to"]},{"Key":"harder to","Fragments":["read","read","write"]},{"Key":"read as","Fragments":["it's"]},{"Key":"as it's","Fragments":["less","own"]},{"Key":"it's less","Fragments":["obvious"]},{"Key":"less obvious","Fragments":["where"]},{"Key":"obvious where","Fragments":["a"]},{"Key":"where a","Fragments":["function"]},{"Key":"function comes","Fragments":["from."]},{"Key":"comes from.","Fragments":["Also"]},{"Key":"from. Also","Fragments":["many"]},{"Key":"Also many","Fragments":["modules"]},{"Key":"many modules","Fragments":["export"]},{"Key":"modules export","Fragments":["the"]},{"Key":"export the","Fragments":["same"]},{"Key":"same functions","Fragments":["so"]},{"Key":"functions so","Fragments":["you're"]},{"Key":"so you're","Fragments":["more"]},{"Key":"you're more","Fragments":["likely"]},{"Key":"more likely","Fragments":["to"]},{"Key":"likely to","Fragments":["get"]},{"Key":"get conflicts","Fragments":["this"]},{"Key":"conflicts this","Fragments":["way."]},{"Key":"need the","Fragments":["`;;`.","double"]},{"Key":"the `;;`.","Fragments":["That's"]},{"Key":"`;;`. That's","Fragments":["only"]},{"Key":"That's only","Fragments":["for"]},{"Key":"only for","Fragments":["when"]},{"Key":"for when","Fragments":["you"]},{"Key":"when you","Fragments":["use","don't"]},{"Key":"the toplevel","Fragments":["(`ocaml`","when","(the"]},{"Key":"toplevel (`ocaml`","Fragments":["or"]},{"Key":"(`ocaml` or","Fragments":["`utop`"]},{"Key":"or `utop`","Fragments":["program)","program)"]},{"Key":"`utop` program)","Fragments":["to","to"]},{"Key":"program) to","Fragments":["tell","let"]},{"Key":"to tell","Fragments":["the","what","if","which"]},{"Key":"tell the","Fragments":["toplevel"]},{"Key":"toplevel when","Fragments":["to"]},{"Key":"when to","Fragments":["start"]},{"Key":"to start","Fragments":["executing"]},{"Key":"start executing","Fragments":["your"]},{"Key":"executing your","Fragments":["input."]},{"Key":"your input.","Fragments":["You"]},{"Key":"input. You","Fragments":["can"]},{"Key":"You can","Fragments":["just","write","convert"]},{"Key":"can just","Fragments":["leave"]},{"Key":"just leave","Fragments":["the"]},{"Key":"leave the","Fragments":["`;;`"]},{"Key":"the `;;`","Fragments":["off"]},{"Key":"`;;` off","Fragments":["in"]},{"Key":"off in","Fragments":["OCaml"]},{"Key":"OCaml source","Fragments":["code."]},{"Key":"feel like","Fragments":["there"]},{"Key":"like there","Fragments":["should","should"]},{"Key":"there should","Fragments":["be","be"]},{"Key":"be a","Fragments":["better","similar","_lot_","way"]},{"Key":"a better","Fragments":["way","version."]},{"Key":"better way","Fragments":["to"]},{"Key":"Well there's","Fragments":["`List.zip`,"]},{"Key":"there's `List.zip`,","Fragments":["though"]},{"Key":"`List.zip`, though","Fragments":["you'll"]},{"Key":"though you'll","Fragments":["have"]},{"Key":"you'll have","Fragments":["to"]},{"Key":"write some","Fragments":["code","more"]},{"Key":"some code","Fragments":["around"]},{"Key":"code around","Fragments":["it"]},{"Key":"around it","Fragments":["to"]},{"Key":"get around","Fragments":["the"]},{"Key":"around the","Fragments":["same"]},{"Key":"same length","Fragments":["of"]},{"Key":"length of","Fragments":["list","the"]},{"Key":"of list","Fragments":["limitation."]},{"Key":"Yeah, I","Fragments":["went"]},{"Key":"went a","Fragments":["few"]},{"Key":"few rounds","Fragments":["with"]},{"Key":"rounds with","Fragments":["`zip`"]},{"Key":"with `zip`","Fragments":["(that's"]},{"Key":"`zip` (that's","Fragments":["how"]},{"Key":"(that's how","Fragments":["my"]},{"Key":"how my","Fragments":["Ruby"]},{"Key":"my Ruby","Fragments":["solution"]},{"Key":"Ruby solution","Fragments":["to"]},{"Key":"solution to","Fragments":["the"]},{"Key":"problem works)","Fragments":["but"]},{"Key":"works) but","Fragments":["I"]},{"Key":"I couldn't","Fragments":["figure","figure","find"]},{"Key":"couldn't figure","Fragments":["out","out"]},{"Key":"figure out","Fragments":["a","how"]},{"Key":"out a","Fragments":["way"]},{"Key":"a way","Fragments":["to","to","to"]},{"Key":"it that","Fragments":["didn't"]},{"Key":"that didn't","Fragments":["involve"]},{"Key":"didn't involve","Fragments":["traversing"]},{"Key":"involve traversing","Fragments":["both"]},{"Key":"traversing both","Fragments":["lists"]},{"Key":"lists more","Fragments":["than"]},{"Key":"more than","Fragments":["once."]},{"Key":"than once.","Fragments":["And"]},{"Key":"once. And","Fragments":["it"]},{"Key":"And it","Fragments":["was"]},{"Key":"it was","Fragments":["a","probably"]},{"Key":"a hell","Fragments":["of"]},{"Key":"hell of","Fragments":["a"]},{"Key":"a lot","Fragments":["uglier","to","of","of","too--I","more","of","of","of"]},{"Key":"lot uglier","Fragments":["than"]},{"Key":"uglier than","Fragments":["this."]},{"Key":" True,","Fragments":["you"]},{"Key":"True, you","Fragments":["do"]},{"Key":"do need","Fragments":["to"]},{"Key":"to take","Fragments":["the","like"]},{"Key":"take the","Fragments":["lengths"]},{"Key":"the lengths","Fragments":["of"]},{"Key":"lengths of","Fragments":["the"]},{"Key":"the lists","Fragments":["to"]},{"Key":"lists to","Fragments":["equalize"]},{"Key":"to equalize","Fragments":["them"]},{"Key":"equalize them","Fragments":["for"]},{"Key":"them for","Fragments":["zip,"]},{"Key":"for zip,","Fragments":["so"]},{"Key":"zip, so","Fragments":["there's"]},{"Key":"so there's","Fragments":["indeed"]},{"Key":"there's indeed","Fragments":["an"]},{"Key":"indeed an","Fragments":["unnecessary"]},{"Key":"an unnecessary","Fragments":["traversal"]},{"Key":"unnecessary traversal","Fragments":["there."]},{"Key":"it cheating","Fragments":["to"]},{"Key":"cheating to","Fragments":["use"]},{"Key":"use Re2","Fragments":["for"]},{"Key":"Re2 for","Fragments":["this"]},{"Key":"this exercise?","Fragments":["My","I"]},{"Key":"exercise? My","Fragments":["attempt"]},{"Key":"My attempt","Fragments":["using"]},{"Key":"attempt using","Fragments":["just"]},{"Key":"Core library","Fragments":["seemed","and"]},{"Key":"library seemed","Fragments":["cumbersome."]},{"Key":" FYI,","Fragments":["add"]},{"Key":"FYI, add","Fragments":["`-pkg"]},{"Key":"add `-pkg","Fragments":["re2`"]},{"Key":"`-pkg re2`","Fragments":["to"]},{"Key":"re2` to","Fragments":["the"]},{"Key":"the `@dagmar`","Fragments":["in"]},{"Key":"`@dagmar` in","Fragments":["the"]},{"Key":"the Makefile","Fragments":["to"]},{"Key":"Makefile to","Fragments":["build"]},{"Key":"to build","Fragments":["this"]},{"Key":"build this","Fragments":["example."]},{"Key":"This seems","Fragments":["like"]},{"Key":"a horrible","Fragments":["hack"]},{"Key":"horrible hack","Fragments":["having"]},{"Key":"hack having","Fragments":["to"]},{"Key":"having to","Fragments":["write","repeat"]},{"Key":"write a","Fragments":["function"]},{"Key":"to split","Fragments":["strings"]},{"Key":"split strings","Fragments":["using"]},{"Key":"strings using","Fragments":["a"]},{"Key":"a predicate","Fragments":["function."]},{"Key":"predicate function.","Fragments":["Am"]},{"Key":"function. Am","Fragments":["I"]},{"Key":"Am I","Fragments":["missing","missing"]},{"Key":"I missing","Fragments":["something","something?"]},{"Key":"missing something","Fragments":["simple"]},{"Key":"something simple","Fragments":["here?"]},{"Key":"think I'll","Fragments":["try"]},{"Key":"I'll try","Fragments":["this"]},{"Key":"try this","Fragments":["again"]},{"Key":"this again","Fragments":["using"]},{"Key":"again using","Fragments":["regular"]},{"Key":"using regular","Fragments":["expressions"]},{"Key":"regular expressions","Fragments":["from","are","can"]},{"Key":"expressions from","Fragments":["Re2."]},{"Key":"good. A","Fragments":["few"]},{"Key":"few small","Fragments":["things:"]},{"Key":"the `(Sring.compare","Fragments":["\"\""]},{"Key":"`(Sring.compare \"\"","Fragments":["trimed)"]},{"Key":"\"\" trimed)","Fragments":["=="]},{"Key":"trimed) ==","Fragments":["0`"]},{"Key":"== 0`","Fragments":["though?"]},{"Key":"0` though?","Fragments":["Wouldn't"]},{"Key":"though? Wouldn't","Fragments":["`trimed"]},{"Key":"Wouldn't `trimed","Fragments":["="]},{"Key":"`trimed =","Fragments":["\"\"`"]},{"Key":"= \"\"`","Fragments":["do?"]},{"Key":" Also,","Fragments":["you","I"]},{"Key":"Also, you","Fragments":["don't"]},{"Key":"don't actually","Fragments":["need"]},{"Key":"actually need","Fragments":["`;;`."]},{"Key":"need `;;`.","Fragments":["The"]},{"Key":"`;;`. The","Fragments":["only"]},{"Key":"only place","Fragments":["where"]},{"Key":"place where","Fragments":["you"]},{"Key":"where you","Fragments":["need","would"]},{"Key":"you need","Fragments":["that","them","the"]},{"Key":"need that","Fragments":["is"]},{"Key":"that is","Fragments":["in","evenly","evenly"]},{"Key":"toplevel (the","Fragments":["`ocaml`"]},{"Key":"(the `ocaml`","Fragments":["or"]},{"Key":"`ocaml` or","Fragments":["`utop`"]},{"Key":"to let","Fragments":["it"]},{"Key":"let it","Fragments":["know"]},{"Key":"it know","Fragments":["when"]},{"Key":"know when","Fragments":["an"]},{"Key":"when an","Fragments":["expression"]},{"Key":"an expression","Fragments":["is"]},{"Key":"expression is","Fragments":["complete."]},{"Key":"is complete.","Fragments":["In"]},{"Key":"complete. In","Fragments":["source"]},{"Key":"In source","Fragments":["files"]},{"Key":"source files","Fragments":["expressions"]},{"Key":"files expressions","Fragments":["can"]},{"Key":"expressions can","Fragments":["be","be"]},{"Key":"be ended","Fragments":["with"]},{"Key":"ended with","Fragments":["just"]},{"Key":"with just","Fragments":["newlines."]},{"Key":" Thank","Fragments":["you"]},{"Key":"Thank you","Fragments":["for"]},{"Key":"you for","Fragments":["the"]},{"Key":"the tips.","Fragments":["This"]},{"Key":"tips. This","Fragments":["was"]},{"Key":"This was","Fragments":["the"]},{"Key":"was the","Fragments":["first","`concat`"]},{"Key":"first program","Fragments":["i've"]},{"Key":"program i've","Fragments":["written"]},{"Key":"i've written","Fragments":["in"]},{"Key":"written in","Fragments":["```ocaml```","terms"]},{"Key":"in ```ocaml```","Fragments":["so"]},{"Key":"```ocaml``` so","Fragments":["it"]},{"Key":"it looks","Fragments":["like","very","cleaner."]},{"Key":"like I","Fragments":["still","did:"]},{"Key":"I still","Fragments":["have","have"]},{"Key":"still have","Fragments":["a","trouble"]},{"Key":"lot to","Fragments":["learn"]},{"Key":"learn about","Fragments":["it."]},{"Key":"Well it's","Fragments":["certainly"]},{"Key":"it's certainly","Fragments":["not"]},{"Key":"certainly not","Fragments":["bad"]},{"Key":"not bad","Fragments":["for"]},{"Key":"bad for","Fragments":["a"]},{"Key":"a first","Fragments":["try,"]},{"Key":"first try,","Fragments":["you"]},{"Key":"try, you","Fragments":["got"]},{"Key":"you got","Fragments":["the","here"]},{"Key":"got the","Fragments":["let...in"]},{"Key":"the let...in","Fragments":["style"]},{"Key":"let...in style","Fragments":["right"]},{"Key":"style right","Fragments":["and"]},{"Key":"right and","Fragments":["know"]},{"Key":"and know","Fragments":["how"]},{"Key":"know how","Fragments":["to"]},{"Key":"use `function`.","Fragments":["Those"]},{"Key":"`function`. Those","Fragments":["are"]},{"Key":"Those are","Fragments":["things","documented"]},{"Key":"are things","Fragments":["that"]},{"Key":"things that","Fragments":["trip"]},{"Key":"that trip","Fragments":["a"]},{"Key":"trip a","Fragments":["lot"]},{"Key":"lot of","Fragments":["people","mileage--nice","clumsy","`if`","time."]},{"Key":"of people","Fragments":["up."]},{"Key":"* I","Fragments":["don't"]},{"Key":"don't find","Fragments":["the","an"]},{"Key":"find the","Fragments":["\"Let\"-part"]},{"Key":"the \"Let\"-part","Fragments":["very"]},{"Key":"\"Let\"-part very","Fragments":["pretty."]},{"Key":"* In","Fragments":["e.g."]},{"Key":"In e.g.","Fragments":["Haskell,"]},{"Key":"e.g. Haskell,","Fragments":["has_suffix"]},{"Key":"Haskell, has_suffix","Fragments":["could"]},{"Key":"has_suffix could","Fragments":["have"]},{"Key":"have been","Fragments":["written","clever"]},{"Key":"been written","Fragments":["pointfree."]},{"Key":"written pointfree.","Fragments":["I"]},{"Key":"pointfree. I","Fragments":["think"]},{"Key":"think that","Fragments":["would"]},{"Key":"that would","Fragments":["look","clean"]},{"Key":"would look","Fragments":["better"]},{"Key":"look better","Fragments":["here"]},{"Key":"better here","Fragments":["too."]},{"Key":"Looks pretty","Fragments":["good."]},{"Key":" There's","Fragments":["already","also"]},{"Key":"There's already","Fragments":["a"]},{"Key":"function you","Fragments":["can"]},{"Key":"in place","Fragments":["of"]},{"Key":"place of","Fragments":["your"]},{"Key":"of your","Fragments":["`has_suffix`:","solution."]},{"Key":"your `has_suffix`:","Fragments":["`String.is_suffix`."]},{"Key":"There's also","Fragments":["a"]},{"Key":"also a","Fragments":["more"]},{"Key":"a more","Fragments":["succinct","specific"]},{"Key":"more succinct","Fragments":["way"]},{"Key":"succinct way","Fragments":["to"]},{"Key":"implement `shouting`","Fragments":["by"]},{"Key":"`shouting` by","Fragments":["transforming"]},{"Key":"by transforming","Fragments":["the"]},{"Key":"transforming the","Fragments":["string"]},{"Key":"in certain","Fragments":["ways"]},{"Key":"certain ways","Fragments":["and"]},{"Key":"ways and","Fragments":["comparing"]},{"Key":"and comparing","Fragments":["the"]},{"Key":"comparing the","Fragments":["transformations"]},{"Key":"the transformations","Fragments":["to"]},{"Key":"transformations to","Fragments":["the"]},{"Key":"Your helper","Fragments":["functions"]},{"Key":"functions `question`","Fragments":["and"]},{"Key":"`question` and","Fragments":["`shouting`"]},{"Key":"and `shouting`","Fragments":["are"]},{"Key":"`shouting` are","Fragments":["both"]},{"Key":"are both","Fragments":["named"]},{"Key":"both named","Fragments":["in"]},{"Key":"named in","Fragments":["the"]},{"Key":"the language","Fragments":["of","of"]},{"Key":"language of","Fragments":["the","the"]},{"Key":"the domain,","Fragments":["which"]},{"Key":"domain, which","Fragments":["I"]},{"Key":"which I","Fragments":["like,"]},{"Key":"I like,","Fragments":["but"]},{"Key":"like, but","Fragments":["`empty`"]},{"Key":"but `empty`","Fragments":["seems"]},{"Key":"`empty` seems","Fragments":["to"]},{"Key":"be named","Fragments":["more"]},{"Key":"named more","Fragments":["in"]},{"Key":"more in","Fragments":["the"]},{"Key":"implementation (it","Fragments":["refers"]},{"Key":"(it refers","Fragments":["to"]},{"Key":"refers to","Fragments":["strings"]},{"Key":"to strings","Fragments":["rather"]},{"Key":"strings rather","Fragments":["than"]},{"Key":"than sentences).","Fragments":["You"]},{"Key":"sentences). You","Fragments":["could"]},{"Key":"You could","Fragments":["consider","use","use","maybe"]},{"Key":"could consider","Fragments":["giving","something","using"]},{"Key":"different name","Fragments":["so"]},{"Key":"name so","Fragments":["that"]},{"Key":"so that","Fragments":["it","OCaml","if"]},{"Key":"it fits","Fragments":["better"]},{"Key":"fits better","Fragments":["with"]},{"Key":"better with","Fragments":["the"]},{"Key":"how common","Fragments":["logic"]},{"Key":"common logic","Fragments":["was"]},{"Key":"logic was","Fragments":["extracted"]},{"Key":"was extracted","Fragments":["into"]},{"Key":"extracted into","Fragments":["reusable"]},{"Key":"into reusable","Fragments":["functions,"]},{"Key":"reusable functions,","Fragments":["like"]},{"Key":"functions, like","Fragments":["`foldl`"]},{"Key":"like `foldl`","Fragments":["and"]},{"Key":"`foldl` and","Fragments":["`foldr`."]},{"Key":"and `foldr`.","Fragments":["Each"]},{"Key":"`foldr`. Each","Fragments":["function"]},{"Key":"Each function","Fragments":["is"]},{"Key":"is very","Fragments":["readable","straightforward"]},{"Key":"very readable","Fragments":["and"]},{"Key":"readable and","Fragments":["concise."]},{"Key":"and concise.","Fragments":["Even"]},{"Key":"concise. Even","Fragments":["though"]},{"Key":"Even though","Fragments":["`foldr`"]},{"Key":"though `foldr`","Fragments":["wasn't"]},{"Key":"`foldr` wasn't","Fragments":["necessary"]},{"Key":"wasn't necessary","Fragments":["it"]},{"Key":"necessary it","Fragments":["buys"]},{"Key":"it buys","Fragments":["you"]},{"Key":"buys you","Fragments":["a"]},{"Key":"you a","Fragments":["lot"]},{"Key":"of mileage--nice","Fragments":["work."]},{"Key":"like that","Fragments":["`cons`"]},{"Key":"that `cons`","Fragments":["and"]},{"Key":"`cons` and","Fragments":["`cons_if`"]},{"Key":"and `cons_if`","Fragments":["are"]},{"Key":"`cons_if` are","Fragments":["named"]},{"Key":"are named","Fragments":["functions"]},{"Key":"named functions","Fragments":["(rather"]},{"Key":"functions (rather","Fragments":["than"]},{"Key":"(rather than","Fragments":["anonymous)"]},{"Key":"than anonymous)","Fragments":["even"]},{"Key":"anonymous) even","Fragments":["though"]},{"Key":"even though","Fragments":["they're"]},{"Key":"though they're","Fragments":["only"]},{"Key":"they're only","Fragments":["used"]},{"Key":"only used","Fragments":["once."]},{"Key":"used once.","Fragments":["It"]},{"Key":"once. It","Fragments":["improves"]},{"Key":"It improves","Fragments":["readability."]},{"Key":"The `function`","Fragments":["matching"]},{"Key":"`function` matching","Fragments":["expression"]},{"Key":"matching expression","Fragments":["helps"]},{"Key":"expression helps","Fragments":["readability"]},{"Key":"helps readability","Fragments":["a"]},{"Key":"lot too--I","Fragments":["completely"]},{"Key":"too--I completely","Fragments":["forgot"]},{"Key":"completely forgot","Fragments":["about"]},{"Key":"about it","Fragments":["when"]},{"Key":"it when","Fragments":["I"]},{"Key":"only changes","Fragments":["I'd"]},{"Key":"changes I'd","Fragments":["consider"]},{"Key":"I'd consider","Fragments":["making"]},{"Key":"consider making","Fragments":["are:"]},{"Key":"- in","Fragments":["`length`"]},{"Key":"in `length`","Fragments":["change"]},{"Key":"`length` change","Fragments":["`fun"]},{"Key":"change `fun","Fragments":["n"]},{"Key":"`fun n","Fragments":["_"]},{"Key":"n _","Fragments":["-\u003e"]},{"Key":"_ -\u003e","Fragments":["1","\"Whatever.\"","(*"]},{"Key":"-\u003e 1","Fragments":["+","+","+"]},{"Key":"1 +","Fragments":["n`","length","length"]},{"Key":"+ n`","Fragments":["to"]},{"Key":"n` to","Fragments":["`(+)"]},{"Key":"to `(+)","Fragments":["1`"]},{"Key":"- move","Fragments":["all"]},{"Key":"move all","Fragments":["single-use"]},{"Key":"all single-use","Fragments":["\"helper"]},{"Key":"single-use \"helper","Fragments":["functions\""]},{"Key":"\"helper functions\"","Fragments":["like"]},{"Key":"functions\" like","Fragments":["`reverse'`,"]},{"Key":"like `reverse'`,","Fragments":["`cons_if`,"]},{"Key":"`reverse'`, `cons_if`,","Fragments":["and"]},{"Key":"`cons_if`, and","Fragments":["`cons`"]},{"Key":"and `cons`","Fragments":["inside"]},{"Key":"`cons` inside","Fragments":["of"]},{"Key":"inside of","Fragments":["the"]},{"Key":"which use","Fragments":["them"]},{"Key":"use them","Fragments":["via"]},{"Key":"them via","Fragments":["the"]},{"Key":"via the","Fragments":["`let"]},{"Key":"the `let","Fragments":["..."]},{"Key":"... =","Fragments":["..."]},{"Key":"= ...","Fragments":["in`"]},{"Key":" Excellent!","Fragments":["I"]},{"Key":"Excellent! I","Fragments":["like"]},{"Key":"how `divisable`","Fragments":["is"]},{"Key":"`divisable` is","Fragments":["a"]},{"Key":"a nested-let","Fragments":["with"]},{"Key":"nested-let with","Fragments":["the"]},{"Key":"the year","Fragments":["fixed","is"]},{"Key":"year fixed","Fragments":["as"]},{"Key":"fixed as","Fragments":["the"]},{"Key":"the numerator.","Fragments":["The"]},{"Key":"numerator. The","Fragments":["boolean"]},{"Key":"The boolean","Fragments":["logic"]},{"Key":"boolean logic","Fragments":["is"]},{"Key":"logic is","Fragments":["very","pretty"]},{"Key":"very straightforward","Fragments":["too."]},{"Key":" Only","Fragments":["super","nitpick"]},{"Key":"Only super","Fragments":["minor"]},{"Key":"super minor","Fragments":["nitpick"]},{"Key":"minor nitpick","Fragments":["is"]},{"Key":"nitpick is","Fragments":["spelling."]},{"Key":"is spelling.","Fragments":["Change"]},{"Key":"spelling. Change","Fragments":["the"]},{"Key":"Change the","Fragments":["'a'"]},{"Key":"the 'a'","Fragments":["in"]},{"Key":"'a' in","Fragments":["`divisable`"]},{"Key":"in `divisable`","Fragments":["to"]},{"Key":"`divisable` to","Fragments":["an"]},{"Key":"to an","Fragments":["'i'."]},{"Key":"few point","Fragments":["of"]},{"Key":"1. Try","Fragments":["writing"]},{"Key":"Try writing","Fragments":["`response_for`","the"]},{"Key":"writing `response_for`","Fragments":["using"]},{"Key":"`response_for` using","Fragments":["`match`"]},{"Key":"2. The","Fragments":["`check_uppercase`"]},{"Key":"The `check_uppercase`","Fragments":["function"]},{"Key":"`check_uppercase` function","Fragments":["is"]},{"Key":"is rather","Fragments":["imperative,","limited,"]},{"Key":"rather imperative,","Fragments":["try"]},{"Key":"imperative, try","Fragments":["using"]},{"Key":"try using","Fragments":["something"]},{"Key":"using something","Fragments":["like"]},{"Key":"like `String.for_all`","Fragments":["etc"]},{"Key":"`String.for_all` etc","Fragments":["from"]},{"Key":"etc from","Fragments":["https://ocaml.janestreet.com/ocaml-core/111.03.00/doc/core/#Std.String"]},{"Key":" 3.","Fragments":["The"]},{"Key":"3. The","Fragments":["functions"]},{"Key":"The functions","Fragments":["with"]},{"Key":"with postfixes","Fragments":["of"]},{"Key":"postfixes of","Fragments":["`_exn`"]},{"Key":"of `_exn`","Fragments":["will"]},{"Key":"`_exn` will","Fragments":["throw"]},{"Key":"will throw","Fragments":["exceptions,"]},{"Key":"throw exceptions,","Fragments":["it's"]},{"Key":"exceptions, it's","Fragments":["good"]},{"Key":"it's good","Fragments":["FP","practice"]},{"Key":"good FP","Fragments":["practice"]},{"Key":"FP practice","Fragments":["to"]},{"Key":"practice to","Fragments":["use","reimplement"]},{"Key":"the type","Fragments":["system","mismatch","of","checker."]},{"Key":"type system","Fragments":["rather"]},{"Key":"system rather","Fragments":["than"]},{"Key":"than throwing","Fragments":["exceptions."]},{"Key":"throwing exceptions.","Fragments":["Try"]},{"Key":"exceptions. Try","Fragments":["either"]},{"Key":"Try either","Fragments":["using"]},{"Key":"either using","Fragments":["`Option`"]},{"Key":"using `Option`","Fragments":["or"]},{"Key":"`Option` or","Fragments":["rewrite"]},{"Key":"or rewrite","Fragments":["them"]},{"Key":"rewrite them","Fragments":["using"]},{"Key":"them using","Fragments":["functions"]},{"Key":"using functions","Fragments":["from","like","like"]},{"Key":"functions from","Fragments":["`Core.String`"]},{"Key":"from `Core.String`","Fragments":["module."]},{"Key":"One of","Fragments":["the"]},{"Key":"the challenges","Fragments":["I've"]},{"Key":"challenges I've","Fragments":["found"]},{"Key":"I've found","Fragments":["in","and"]},{"Key":"found in","Fragments":["using"]},{"Key":"in using","Fragments":["OCaml"]},{"Key":"using OCaml","Fragments":["is"]},{"Key":"the library","Fragments":["documentation"]},{"Key":"library documentation","Fragments":["--"]},{"Key":"documentation --","Fragments":["Jane"]},{"Key":"-- Jane","Fragments":["Street"]},{"Key":"Jane Street","Fragments":["Core"]},{"Key":"Street Core","Fragments":["is"]},{"Key":"is about","Fragments":["the"]},{"Key":"the best","Fragments":["I've","doc"]},{"Key":"best I've","Fragments":["found"]},{"Key":"found and","Fragments":["I"]},{"Key":"and I","Fragments":["still","will","can"]},{"Key":"have trouble","Fragments":["finding"]},{"Key":"trouble finding","Fragments":["appropriate"]},{"Key":"finding appropriate","Fragments":["modules/functions"]},{"Key":"appropriate modules/functions","Fragments":["for"]},{"Key":"modules/functions for","Fragments":["what"]},{"Key":"for what","Fragments":["I"]},{"Key":"I want","Fragments":["to"]},{"Key":"to do.","Fragments":["Experience"]},{"Key":"do. Experience","Fragments":["matters,"]},{"Key":"Experience matters,","Fragments":["I"]},{"Key":"matters, I","Fragments":["guess..."]},{"Key":" First","Fragments":["submission"]},{"Key":"First submission","Fragments":["was"]},{"Key":"submission was","Fragments":["too"]},{"Key":"was too","Fragments":["clever","slow."]},{"Key":"too clever","Fragments":["--"]},{"Key":"clever --","Fragments":["simpler"]},{"Key":"-- simpler","Fragments":["to"]},{"Key":"simpler to","Fragments":["just"]},{"Key":"to just","Fragments":["compare","get"]},{"Key":"just compare","Fragments":["sorted"]},{"Key":"compare sorted","Fragments":["char"]},{"Key":"sorted char","Fragments":["lists"]},{"Key":" Hi,","Fragments":["just"]},{"Key":"Hi, just","Fragments":["want"]},{"Key":"just want","Fragments":["to"]},{"Key":"to mention","Fragments":["that"]},{"Key":"mention that","Fragments":["you"]},{"Key":"can skip","Fragments":["`dna_sequence`"]},{"Key":"skip `dna_sequence`","Fragments":["param"]},{"Key":"`dna_sequence` param","Fragments":["at"]},{"Key":"param at","Fragments":["all"]},{"Key":"at all","Fragments":["b/c"]},{"Key":"all b/c","Fragments":["of"]},{"Key":"b/c of","Fragments":["partial"]},{"Key":"of partial","Fragments":["application,","application"]},{"Key":"partial application,","Fragments":["take"]},{"Key":"application, take","Fragments":["a"]},{"Key":"a look","Fragments":["at","at","at","using","at"]},{"Key":"look at","Fragments":["my","something","the","this,","some"]},{"Key":"at my","Fragments":["almost"]},{"Key":"my almost","Fragments":["identical"]},{"Key":"almost identical","Fragments":["solution.","to"]},{"Key":" Not","Fragments":["sure","quite"]},{"Key":"Not sure","Fragments":["is"]},{"Key":"sure is","Fragments":["it"]},{"Key":"is it","Fragments":["make"]},{"Key":"it make","Fragments":["sense"]},{"Key":"make sense","Fragments":["or"]},{"Key":"sense or","Fragments":["not"]},{"Key":"or not","Fragments":["in"]},{"Key":"not in","Fragments":["terms","scope"]},{"Key":"think you","Fragments":["already","need"]},{"Key":"you already","Fragments":["know"]},{"Key":"already know","Fragments":["what's"]},{"Key":"know what's","Fragments":["bad"]},{"Key":"what's bad","Fragments":["on"]},{"Key":"bad on","Fragments":["your"]},{"Key":"on your","Fragments":["implementation."]},{"Key":"your implementation.","Fragments":[":)"]},{"Key":"I'm new","Fragments":["to"]},{"Key":"new to","Fragments":["OCaml,","OCaml","OCaml"]},{"Key":"to OCaml,","Fragments":["and"]},{"Key":"OCaml, and","Fragments":["it","that"]},{"Key":"it took","Fragments":["me"]},{"Key":"took me","Fragments":["a"]},{"Key":"me a","Fragments":["fair"]},{"Key":"a fair","Fragments":["amount"]},{"Key":"fair amount","Fragments":["of"]},{"Key":"amount of","Fragments":["time"]},{"Key":"of time","Fragments":["to"]},{"Key":"time to","Fragments":["just"]},{"Key":"just get","Fragments":["my"]},{"Key":"get my","Fragments":["environment"]},{"Key":"my environment","Fragments":["set"]},{"Key":"environment set","Fragments":["up"]},{"Key":"set up","Fragments":["properly"]},{"Key":"up properly","Fragments":["for"]},{"Key":"properly for","Fragments":["this."]},{"Key":"for this.","Fragments":["This"]},{"Key":"this. This","Fragments":["iteration"]},{"Key":"iteration _only_","Fragments":["covers"]},{"Key":"_only_ covers","Fragments":["the"]},{"Key":"covers the","Fragments":["exact"]},{"Key":"the exact","Fragments":["cases"]},{"Key":"exact cases","Fragments":["tested"]},{"Key":"cases tested","Fragments":["for."]},{"Key":"tested for.","Fragments":[":("]},{"Key":" Happy","Fragments":["to"]},{"Key":"Happy to","Fragments":["receive"]},{"Key":"to receive","Fragments":["many"]},{"Key":"receive many","Fragments":["nits"]},{"Key":"many nits","Fragments":["about"]},{"Key":"nits about","Fragments":["style"]},{"Key":"about style","Fragments":["and"]},{"Key":"style and","Fragments":["approach."]},{"Key":" Was","Fragments":["my"]},{"Key":"Was my","Fragments":["mistake"]},{"Key":"my mistake","Fragments":["to"]},{"Key":"mistake to","Fragments":["do"]},{"Key":"do premature","Fragments":["optimization."]},{"Key":" `factors_of","Fragments":["93819012551L`"]},{"Key":"`factors_of 93819012551L`","Fragments":["runs"]},{"Key":"93819012551L` runs","Fragments":["377.00s."]},{"Key":"runs 377.00s.","Fragments":["When"]},{"Key":"377.00s. When","Fragments":["2nd"]},{"Key":"When 2nd","Fragments":["version"]},{"Key":"2nd version","Fragments":["only"]},{"Key":"version only","Fragments":["24.9071ms!"]},{"Key":" Note","Fragments":["that","that"]},{"Key":"Note that","Fragments":["this","as"]},{"Key":"that this","Fragments":["is"]},{"Key":"not tail","Fragments":["recursive"]},{"Key":"tail recursive","Fragments":["function.","and","append","aux"]},{"Key":" Pieced","Fragments":["this"]},{"Key":"Pieced this","Fragments":["together"]},{"Key":"this together","Fragments":["after"]},{"Key":"together after","Fragments":["reading"]},{"Key":"after reading","Fragments":["the"]},{"Key":"reading the","Fragments":["introductory"]},{"Key":"the introductory","Fragments":["guide"]},{"Key":"introductory guide","Fragments":["in"]},{"Key":"guide in","Fragments":["*Real"]},{"Key":"in *Real","Fragments":["World"]},{"Key":"*Real World","Fragments":["OCaml*"]},{"Key":"World OCaml*","Fragments":["and"]},{"Key":"OCaml* and","Fragments":["picking"]},{"Key":"and picking","Fragments":["through"]},{"Key":"picking through","Fragments":["the"]},{"Key":"through the","Fragments":["Core","long","Core"]},{"Key":"Core reference","Fragments":["as"]},{"Key":"reference as","Fragments":["I"]},{"Key":"little miffed","Fragments":["at"]},{"Key":"miffed at","Fragments":["not"]},{"Key":"at not","Fragments":["being"]},{"Key":"not being","Fragments":["able"]},{"Key":"being able","Fragments":["to"]},{"Key":"to find","Fragments":["a","a","anything"]},{"Key":"find a","Fragments":["```cond```","built-in","convenient"]},{"Key":"a ```cond```","Fragments":["like"]},{"Key":"```cond``` like","Fragments":["structure"]},{"Key":"like structure","Fragments":["that"]},{"Key":"structure that","Fragments":["could"]},{"Key":"could match","Fragments":["over"]},{"Key":"match over","Fragments":["predicates."]},{"Key":" Apologies","Fragments":["if"]},{"Key":"Apologies if","Fragments":["this"]},{"Key":"not idiomatic:","Fragments":["I'm"]},{"Key":"idiomatic: I'm","Fragments":["very"]},{"Key":"I'm very","Fragments":["new"]},{"Key":"very new","Fragments":["to"]},{"Key":"to OCaml","Fragments":["and","the","using"]},{"Key":"OCaml and","Fragments":["am"]},{"Key":"and am","Fragments":["trying"]},{"Key":"am trying","Fragments":["to","to"]},{"Key":"trying to","Fragments":["sort","keep","make","reduce"]},{"Key":"sort it","Fragments":["all"]},{"Key":"it all","Fragments":["out."]},{"Key":" Overall","Fragments":["it"]},{"Key":"Overall it","Fragments":["looks"]},{"Key":"looks very","Fragments":["good."]},{"Key":"can write","Fragments":["`function`","`fold`","it"]},{"Key":"write `function`","Fragments":["like"]},{"Key":"`function` like","Fragments":["so"]},{"Key":"like so","Fragments":["which","please"]},{"Key":"so which","Fragments":["reads"]},{"Key":"which reads","Fragments":["better"]},{"Key":"reads better","Fragments":["to"]},{"Key":"better to","Fragments":["my","leave"]},{"Key":"eyes but","Fragments":["really"]},{"Key":"but really","Fragments":["is"]},{"Key":"really is","Fragments":["a"]},{"Key":"a minor","Fragments":["nitpick."]},{"Key":"rec length","Fragments":["=","="]},{"Key":"length =","Fragments":["function","function"]},{"Key":"| x::xs","Fragments":["-\u003e"]},{"Key":"x::xs -\u003e","Fragments":["1"]},{"Key":"+ length","Fragments":["xs","is"]},{"Key":" Second","Fragments":["most"]},{"Key":"Second most","Fragments":["of"]},{"Key":"most of","Fragments":["these","which"]},{"Key":"functions can","Fragments":["be"]},{"Key":"of `fold`,","Fragments":["which"]},{"Key":"`fold`, which","Fragments":["can"]},{"Key":"which can","Fragments":["be","change"]},{"Key":"be an","Fragments":["interesting"]},{"Key":" Stylistically","Fragments":["I'd"]},{"Key":"Stylistically I'd","Fragments":["try"]},{"Key":"I'd try","Fragments":["breaking"]},{"Key":"try breaking","Fragments":["up"]},{"Key":"breaking up","Fragments":["`response_for`"]},{"Key":"up `response_for`","Fragments":["into","into"]},{"Key":"`response_for` into","Fragments":["smaller","smaller"]},{"Key":"into smaller","Fragments":["functions","functions"]},{"Key":"smaller functions","Fragments":["and","e.g."]},{"Key":"functions and","Fragments":["perhaps","made"]},{"Key":"and perhaps","Fragments":["look"]},{"Key":"perhaps look","Fragments":["at"]},{"Key":"at something","Fragments":["like"]},{"Key":"like `Core.String`","Fragments":["for"]},{"Key":"`Core.String` for","Fragments":["functions"]},{"Key":"for functions","Fragments":["that"]},{"Key":"could replace","Fragments":["the"]},{"Key":"replace the","Fragments":["need"]},{"Key":"the need","Fragments":["for"]},{"Key":"need for","Fragments":["`loop`."]},{"Key":" Thanks;","Fragments":["I"]},{"Key":"Thanks; I","Fragments":["prefer"]},{"Key":"prefer not","Fragments":["to"]},{"Key":"not to","Fragments":["use","use","lean"]},{"Key":"use `Core`.","Fragments":["Also,"]},{"Key":"`Core`. Also,","Fragments":["I"]},{"Key":"Also, I","Fragments":["am","think"]},{"Key":"keep this","Fragments":["iterating"]},{"Key":"this iterating","Fragments":["over"]},{"Key":"iterating over","Fragments":["the"]},{"Key":"over the","Fragments":["string","string."]},{"Key":"string only","Fragments":["once."]},{"Key":"only once.","Fragments":["A"]},{"Key":"once. A","Fragments":["solution"]},{"Key":"A solution","Fragments":["that"]},{"Key":"solution that","Fragments":["scans"]},{"Key":"that scans","Fragments":["the"]},{"Key":"scans the","Fragments":["string"]},{"Key":"string multiple","Fragments":["times,"]},{"Key":"multiple times,","Fragments":["or"]},{"Key":"times, or","Fragments":["one"]},{"Key":"or one","Fragments":["that"]},{"Key":"that uses","Fragments":["regular"]},{"Key":"uses regular","Fragments":["expressions,"]},{"Key":"regular expressions,","Fragments":["would"]},{"Key":"expressions, would","Fragments":["be"]},{"Key":"be shorter,","Fragments":["of"]},{"Key":"shorter, of","Fragments":["course."]},{"Key":"Any suggestions","Fragments":["on"]},{"Key":"suggestions on","Fragments":["factoring"]},{"Key":"on factoring","Fragments":["the"]},{"Key":"factoring the","Fragments":["final"]},{"Key":"the final","Fragments":["set","`bob.ml`"]},{"Key":"final set","Fragments":["of"]},{"Key":"Have a","Fragments":["look","nice"]},{"Key":"the difference","Fragments":["between","for"]},{"Key":"difference between","Fragments":["`==`,"]},{"Key":"between `==`,","Fragments":["`=`"]},{"Key":"`==`, `=`","Fragments":["and"]},{"Key":"`=` and","Fragments":["`compare`"]},{"Key":"and `compare`","Fragments":["in"]},{"Key":"`compare` in","Fragments":["OCaml."]},{"Key":"OCaml. I'm","Fragments":["not"]},{"Key":"not convinced","Fragments":["they're"]},{"Key":"convinced they're","Fragments":["being"]},{"Key":"they're being","Fragments":["used"]},{"Key":"used correctly","Fragments":["here."]},{"Key":" ```","Fragments":["ocaml"]},{"Key":" \u003e","Fragments":["let","a","a"]},{"Key":"\u003e let","Fragments":["a"]},{"Key":"let a","Fragments":["="]},{"Key":"a =","Fragments":["\"\";;","\"\";;","(fun","match"]},{"Key":"val a","Fragments":[":"]},{"Key":"a :","Fragments":["bytes"]},{"Key":": bytes","Fragments":["="]},{"Key":"bytes =","Fragments":["\"\""]},{"Key":"\u003e a","Fragments":["==","="]},{"Key":"a ==","Fragments":["\"\";;"]},{"Key":"- :","Fragments":["bool","bool"]},{"Key":": bool","Fragments":["=","="]},{"Key":"bool =","Fragments":["false","true"]},{"Key":" Great","Fragments":["use"]},{"Key":"Great use","Fragments":["of"]},{"Key":"of polymorphic","Fragments":["variants."]},{"Key":"polymorphic variants.","Fragments":["Simple"]},{"Key":"variants. Simple","Fragments":["yet"]},{"Key":"Simple yet","Fragments":["expressive."]},{"Key":"see `List.map`","Fragments":["duplication"]},{"Key":"`List.map` duplication","Fragments":["in"]},{"Key":"duplication in","Fragments":["`to_rna`."]},{"Key":"in `to_rna`.","Fragments":["While"]},{"Key":"`to_rna`. While","Fragments":["it's"]},{"Key":"While it's","Fragments":["good"]},{"Key":"good practice","Fragments":["to"]},{"Key":"to reimplement","Fragments":["built-in"]},{"Key":"reimplement built-in","Fragments":["functions,"]},{"Key":"built-in functions,","Fragments":["you"]},{"Key":"functions, you","Fragments":["may"]},{"Key":"you may","Fragments":["get","use","as"]},{"Key":"may get","Fragments":["more"]},{"Key":"get more","Fragments":["mileage"]},{"Key":"more mileage","Fragments":["(and"]},{"Key":"mileage (and","Fragments":["readability)"]},{"Key":"(and readability)","Fragments":["by"]},{"Key":"readability) by","Fragments":["using"]},{"Key":"using what's","Fragments":["available."]},{"Key":"what's available.","Fragments":["Consider"]},{"Key":"available. Consider","Fragments":["using"]},{"Key":"Consider using","Fragments":["`function`"]},{"Key":"using `function`","Fragments":["pattern"]},{"Key":"`function` pattern","Fragments":["matching"]},{"Key":"matching in","Fragments":["`transcribe`"]},{"Key":"in `transcribe`","Fragments":["too."]},{"Key":"find an","Fragments":["easier"]},{"Key":"an easier","Fragments":["way"]},{"Key":"easier way","Fragments":["to"]},{"Key":"to test","Fragments":["if","if","it"]},{"Key":"test if","Fragments":["the","they"]},{"Key":"if the","Fragments":["sentence","implementation"]},{"Key":"the sentence","Fragments":["has"]},{"Key":"sentence has","Fragments":["letters"]},{"Key":"has letters","Fragments":["in"]},{"Key":"letters in","Fragments":["it."]},{"Key":"in it.","Fragments":["Also","So","I"]},{"Key":"it. Also","Fragments":["getting"]},{"Key":"Also getting","Fragments":["the"]},{"Key":"getting the","Fragments":["last"]},{"Key":"last character","Fragments":["of"]},{"Key":"character of","Fragments":["the"]},{"Key":"string seems","Fragments":["cumbersome"]},{"Key":"seems cumbersome","Fragments":["-\u003e"]},{"Key":"cumbersome -\u003e","Fragments":["`List.hd"]},{"Key":"-\u003e `List.hd","Fragments":["of"]},{"Key":"`List.hd of","Fragments":["List.rev`"]},{"Key":"of List.rev`","Fragments":["All"]},{"Key":"List.rev` All","Fragments":["in"]},{"Key":"All in","Fragments":["all"]},{"Key":"in all","Fragments":["OCaml"]},{"Key":"all OCaml","Fragments":["seems","programmers."]},{"Key":"OCaml seems","Fragments":["to"]},{"Key":"be rather","Fragments":["laborious"]},{"Key":"rather laborious","Fragments":["(I"]},{"Key":"laborious (I","Fragments":["deliberately"]},{"Key":"(I deliberately","Fragments":["tried"]},{"Key":"deliberately tried","Fragments":["to"]},{"Key":"to solve","Fragments":["the"]},{"Key":"solve the","Fragments":["problem"]},{"Key":"problem with","Fragments":["only","OCaml."]},{"Key":"only the","Fragments":["base"]},{"Key":"the base","Fragments":["libraries"]},{"Key":"base libraries","Fragments":["in"]},{"Key":"libraries in","Fragments":["it."]},{"Key":"it. So","Fragments":["no"]},{"Key":"So no","Fragments":["Str.regexp"]},{"Key":"no Str.regexp","Fragments":["for"]},{"Key":"Str.regexp for","Fragments":["example.)."]},{"Key":" Nice.","Fragments":["Some"]},{"Key":"Nice. Some","Fragments":["notes:"]},{"Key":"- Your","Fragments":["string_to_list"]},{"Key":"Your string_to_list","Fragments":["function"]},{"Key":"string_to_list function","Fragments":["exists"]},{"Key":"function exists","Fragments":["in"]},{"Key":"exists in","Fragments":["Core"]},{"Key":"in Core","Fragments":["as"]},{"Key":"Core as","Fragments":["String.to_list."]},{"Key":"- Instead","Fragments":["of"]},{"Key":"Instead of","Fragments":["using","`string_of_char`","`chars_to_string`,","the"]},{"Key":"using String.mem","Fragments":["true"]},{"Key":"String.mem true","Fragments":["..."]},{"Key":"true ...","Fragments":["you"]},{"Key":"... you","Fragments":["can"]},{"Key":"- You","Fragments":["can"]},{"Key":"can convert","Fragments":["characters"]},{"Key":"convert characters","Fragments":["to"]},{"Key":"characters to","Fragments":["ASCII"]},{"Key":"to ASCII","Fragments":["codes"]},{"Key":"ASCII codes","Fragments":["and"]},{"Key":"codes and","Fragments":["compare"]},{"Key":"and compare","Fragments":["to"]},{"Key":"compare to","Fragments":["test"]},{"Key":"if they","Fragments":["are"]},{"Key":"are letters","Fragments":["with"]},{"Key":"letters with","Fragments":["Char.code."]},{"Key":"with Char.code.","Fragments":["That"]},{"Key":"Char.code. That","Fragments":["way"]},{"Key":"That way","Fragments":["you","you"]},{"Key":"way you","Fragments":["don't","could"]},{"Key":"to lowercase","Fragments":["everything"]},{"Key":"lowercase everything","Fragments":["first."]},{"Key":"think it's","Fragments":["more","confusing."]},{"Key":"it's more","Fragments":["idiomatic"]},{"Key":"to pull","Fragments":["much"]},{"Key":"pull much","Fragments":["of"]},{"Key":"much of","Fragments":["the","the","an"]},{"Key":"the logic","Fragments":["in","is","in"]},{"Key":"logic in","Fragments":["your","terms"]},{"Key":"in your","Fragments":["'let'"]},{"Key":"your 'let'","Fragments":["declarations"]},{"Key":"'let' declarations","Fragments":["out"]},{"Key":"declarations out","Fragments":["into"]},{"Key":"out into","Fragments":["helper"]},{"Key":"helper functions.","Fragments":["That"]},{"Key":"functions. That","Fragments":["way"]},{"Key":"could (in","Fragments":["a"]},{"Key":"(in a","Fragments":["real"]},{"Key":"real project)","Fragments":["re-use"]},{"Key":"project) re-use","Fragments":["them"]},{"Key":"re-use them","Fragments":["as"]},{"Key":"them as","Fragments":["basic"]},{"Key":"as basic","Fragments":["building"]},{"Key":"basic building","Fragments":["blocks"]},{"Key":"building blocks","Fragments":["so"]},{"Key":"blocks so","Fragments":["that"]},{"Key":"that OCaml","Fragments":["starts"]},{"Key":"OCaml starts","Fragments":["to"]},{"Key":"starts to","Fragments":["feel"]},{"Key":"to feel","Fragments":["less"]},{"Key":"feel less","Fragments":["laborious"]},{"Key":"less laborious","Fragments":[":)"]},{"Key":"This solution","Fragments":["is"]},{"Key":"solution is","Fragments":["impressively"]},{"Key":"is impressively","Fragments":["concise."]},{"Key":"impressively concise.","Fragments":["Nice"]},{"Key":"concise. Nice","Fragments":["work."]},{"Key":" How","Fragments":["could"]},{"Key":"How could","Fragments":["you"]},{"Key":"could you","Fragments":["make"]},{"Key":"you make","Fragments":["it"]},{"Key":"more readable?","Fragments":["Imagine"]},{"Key":"readable? Imagine","Fragments":["this"]},{"Key":"Imagine this","Fragments":["function"]},{"Key":"this function","Fragments":["was","`is_contain_alpha`","because"]},{"Key":"function was","Fragments":["mixed"]},{"Key":"was mixed","Fragments":["in"]},{"Key":"mixed in","Fragments":["with"]},{"Key":"in with","Fragments":["several"]},{"Key":"with several","Fragments":["hundred"]},{"Key":"several hundred","Fragments":["more"]},{"Key":"hundred more","Fragments":["lines"]},{"Key":"more lines","Fragments":["of"]},{"Key":"lines of","Fragments":["code,"]},{"Key":"of code,","Fragments":["and"]},{"Key":"code, and","Fragments":["you"]},{"Key":"and you","Fragments":["really"]},{"Key":"you really","Fragments":["want"]},{"Key":"really want","Fragments":["future"]},{"Key":"want future","Fragments":["maintainers"]},{"Key":"future maintainers","Fragments":["to"]},{"Key":"maintainers to","Fragments":["understand"]},{"Key":"to understand","Fragments":["the","to"]},{"Key":"understand the","Fragments":["intent"]},{"Key":"the intent","Fragments":["of"]},{"Key":"intent of","Fragments":["each"]},{"Key":"of each","Fragments":["line."]},{"Key":"each line.","Fragments":["For"]},{"Key":"line. For","Fragments":["instance,"]},{"Key":"For instance,","Fragments":["why","the"]},{"Key":"instance, why","Fragments":["does"]},{"Key":"why does","Fragments":["the"]},{"Key":"string need","Fragments":["to"]},{"Key":"be trimmed","Fragments":["and"]},{"Key":"trimmed and","Fragments":["what's"]},{"Key":"and what's","Fragments":["the"]},{"Key":"what's the","Fragments":["significance"]},{"Key":"the significance","Fragments":["of"]},{"Key":"significance of","Fragments":["upper-"]},{"Key":"of upper-","Fragments":["and"]},{"Key":"upper- and","Fragments":["lower-case"]},{"Key":"and lower-case","Fragments":["strings?"]},{"Key":"for your","Fragments":["advise.","code,","advise."]},{"Key":"few things.","Fragments":["You"]},{"Key":"things. You","Fragments":["only"]},{"Key":"You only","Fragments":["need"]},{"Key":"only need","Fragments":["`;;`"]},{"Key":"need `;;`","Fragments":["for"]},{"Key":"`;;` for","Fragments":["copying"]},{"Key":"for copying","Fragments":["code"]},{"Key":"copying code","Fragments":["into"]},{"Key":"into the","Fragments":["repl,"]},{"Key":"the repl,","Fragments":["it"]},{"Key":"repl, it","Fragments":["can"]},{"Key":"be left","Fragments":["out"]},{"Key":"left out","Fragments":["of"]},{"Key":"final `bob.ml`","Fragments":["file"]},{"Key":"`bob.ml` file","Fragments":["if"]},{"Key":"file if","Fragments":["you"]},{"Key":"you want.","Fragments":["Try"]},{"Key":"want. Try","Fragments":["writing"]},{"Key":"writing the","Fragments":["response_for","regex"]},{"Key":"the response_for","Fragments":["function"]},{"Key":"response_for function","Fragments":["using"]},{"Key":"function using","Fragments":["`match`"]},{"Key":"using `match`","Fragments":["rather"]},{"Key":"`match` rather","Fragments":["than"]},{"Key":"than if","Fragments":["/"]},{"Key":"if /","Fragments":["else,","else"]},{"Key":"/ else,","Fragments":["while"]},{"Key":"else, while","Fragments":["not"]},{"Key":"while not","Fragments":["wrong"]},{"Key":"not wrong","Fragments":["using"]},{"Key":"wrong using","Fragments":["match"]},{"Key":"using match","Fragments":["would"]},{"Key":"match would","Fragments":["be"]},{"Key":"be more","Fragments":["idiomatic"]},{"Key":"idiomatic OCaml","Fragments":["code."]},{"Key":" kind","Fragments":["of"]},{"Key":"kind of","Fragments":["a"]},{"Key":"a DSL","Fragments":["approach,"]},{"Key":"DSL approach,","Fragments":["trying"]},{"Key":"approach, trying","Fragments":["to"]},{"Key":"code read","Fragments":["like"]},{"Key":"read like","Fragments":["the"]},{"Key":"on every","Fragments":["year"]},{"Key":"every year","Fragments":["that","that"]},{"Key":"year that","Fragments":["is","is"]},{"Key":"is evenly","Fragments":["divisible","divisible"]},{"Key":"evenly divisible","Fragments":["by","by","by"]},{"Key":"divisible by","Fragments":["4","100","400"]},{"Key":" except","Fragments":["every"]},{"Key":"except every","Fragments":["year"]},{"Key":" unless","Fragments":["the"]},{"Key":"unless the","Fragments":["year"]},{"Key":"year is","Fragments":["also"]},{"Key":"is also","Fragments":["evenly"]},{"Key":"also evenly","Fragments":["divisible"]},{"Key":" Very","Fragments":["cool.","clean"]},{"Key":"Very cool.","Fragments":["Thank"]},{"Key":"cool. Thank","Fragments":["you!"]},{"Key":" Sometimes","Fragments":["it's"]},{"Key":"Sometimes it's","Fragments":["nice"]},{"Key":"it's nice","Fragments":["to"]},{"Key":"nice to","Fragments":["use"]},{"Key":"`function` keyword","Fragments":["to"]},{"Key":"keyword to","Fragments":["make"]},{"Key":"make this","Fragments":["style"]},{"Key":"this style","Fragments":["of"]},{"Key":"style of","Fragments":["function"]},{"Key":"of function","Fragments":["shorter,"]},{"Key":"function shorter,","Fragments":["it"]},{"Key":"shorter, it","Fragments":["also"]},{"Key":"also saves","Fragments":["giving"]},{"Key":"saves giving","Fragments":["a"]},{"Key":"giving a","Fragments":["name"]},{"Key":"a name","Fragments":["to"]},{"Key":"name to","Fragments":["something"]},{"Key":"something you","Fragments":["don't"]},{"Key":"really use.","Fragments":["e.g."]},{"Key":"| _","Fragments":["::","::","::","::","-\u003e","-\u003e"]},{"Key":"_ ::","Fragments":["is","t","t","t"]},{"Key":":: is","Fragments":["-\u003e"]},{"Key":"is -\u003e","Fragments":["1"]},{"Key":" Neither","Fragments":["the"]},{"Key":"Neither the","Fragments":["regular"]},{"Key":"the regular","Fragments":["expression"]},{"Key":"regular expression","Fragments":["stuff"]},{"Key":"expression stuff","Fragments":["nor"]},{"Key":"stuff nor","Fragments":["the"]},{"Key":"nor the","Fragments":["if/else"]},{"Key":"the if/else","Fragments":["ladder"]},{"Key":"if/else ladder","Fragments":["feel"]},{"Key":"ladder feel","Fragments":["particularly"]},{"Key":"feel particularly","Fragments":["great,"]},{"Key":"particularly great,","Fragments":["but"]},{"Key":"great, but","Fragments":["they"]},{"Key":"but they","Fragments":["seem"]},{"Key":"they seem","Fragments":["to"]},{"Key":"to match","Fragments":["the"]},{"Key":"match the","Fragments":["problem"]},{"Key":"problem well","Fragments":["enough."]},{"Key":" Try","Fragments":["replacing"]},{"Key":"Try replacing","Fragments":["the"]},{"Key":"replacing the","Fragments":["if"]},{"Key":"the if","Fragments":["/"]},{"Key":"/ else","Fragments":["with"]},{"Key":"else with","Fragments":["a"]},{"Key":"a `match","Fragments":["`"]},{"Key":"`match `","Fragments":["block"]},{"Key":"` block","Fragments":["using"]},{"Key":"block using","Fragments":["`when`"]},{"Key":"using `when`","Fragments":["it'll"]},{"Key":"`when` it'll","Fragments":["yield"]},{"Key":"it'll yield","Fragments":["a"]},{"Key":"yield a","Fragments":["nicer"]},{"Key":"a nicer","Fragments":["OCaml"]},{"Key":"nicer OCaml","Fragments":["style"]},{"Key":"OCaml style","Fragments":["function."]},{"Key":"style function.","Fragments":["Also"]},{"Key":"function. Also","Fragments":["depending"]},{"Key":"Also depending","Fragments":["on"]},{"Key":"depending on","Fragments":["how","how"]},{"Key":"on how","Fragments":["you","OUnit"]},{"Key":"how you","Fragments":["like","found"]},{"Key":"you like","Fragments":["to"]},{"Key":"OCaml the","Fragments":["`Core`"]},{"Key":"the `Core`","Fragments":["String"]},{"Key":"`Core` String","Fragments":["module"]},{"Key":"module has","Fragments":["better"]},{"Key":"has better","Fragments":["functions"]},{"Key":"better functions","Fragments":["for"]},{"Key":"for writing","Fragments":["the"]},{"Key":"the regex","Fragments":["parts","one"]},{"Key":"regex parts","Fragments":["of"]},{"Key":"parts of","Fragments":["the"]},{"Key":" Perhaps,","Fragments":["try"]},{"Key":"Perhaps, try","Fragments":["rewriting"]},{"Key":"try rewriting","Fragments":["using"]},{"Key":"rewriting using","Fragments":["the"]},{"Key":"match syntax","Fragments":["you've"]},{"Key":"syntax you've","Fragments":["got"]},{"Key":"you've got","Fragments":["commented"]},{"Key":"got commented","Fragments":["out"]},{"Key":"commented out","Fragments":["at"]},{"Key":"out at","Fragments":["the"]},{"Key":"the end","Fragments":["of"]},{"Key":"end of","Fragments":["the"]},{"Key":"the file.","Fragments":["It'll"]},{"Key":"file. It'll","Fragments":["clean"]},{"Key":"It'll clean","Fragments":["up"]},{"Key":"clean up","Fragments":["match","this"]},{"Key":"up match","Fragments":["code"]},{"Key":"match code","Fragments":["and"]},{"Key":"code and","Fragments":["also"]},{"Key":"also the","Fragments":["shout/question/silence"]},{"Key":"the shout/question/silence","Fragments":["functions."]},{"Key":" Calling","Fragments":["all"]},{"Key":"Calling all","Fragments":["3"]},{"Key":"all 3","Fragments":["functions"]},{"Key":"3 functions","Fragments":["each","regardless"]},{"Key":"functions each","Fragments":["time"]},{"Key":"each time","Fragments":["is"]},{"Key":"time is","Fragments":["unnecessary","due"]},{"Key":"is unnecessary","Fragments":["and"]},{"Key":"unnecessary and","Fragments":["slow,"]},{"Key":"and slow,","Fragments":["since"]},{"Key":"slow, since","Fragments":["OCaml"]},{"Key":"since OCaml","Fragments":["is"]},{"Key":"a strict","Fragments":["language"]},{"Key":"strict language","Fragments":["and"]},{"Key":"language and","Fragments":["will"]},{"Key":"and will","Fragments":["always"]},{"Key":"will always","Fragments":["execute"]},{"Key":"always execute","Fragments":["those"]},{"Key":"execute those","Fragments":["3"]},{"Key":"those 3","Fragments":["functions"]},{"Key":"functions regardless","Fragments":["of"]},{"Key":"regardless of","Fragments":["whether"]},{"Key":"of whether","Fragments":["you"]},{"Key":"whether you","Fragments":["need"]},{"Key":"need them","Fragments":["later"]},{"Key":"them later","Fragments":["on."]},{"Key":"sure compose","Fragments":["is"]},{"Key":"compose is","Fragments":["so"]},{"Key":"is so","Fragments":["useful","slow."]},{"Key":"so useful","Fragments":["given"]},{"Key":"useful given","Fragments":["the"]},{"Key":"given the","Fragments":["heavy"]},{"Key":"the heavy","Fragments":["use"]},{"Key":"heavy use","Fragments":["of"]},{"Key":"of labels","Fragments":["and"]},{"Key":"labels and","Fragments":["optional"]},{"Key":"and optional","Fragments":["arguments"]},{"Key":"optional arguments","Fragments":["in"]},{"Key":"arguments in","Fragments":["Core."]},{"Key":"in Core.","Fragments":["Those"]},{"Key":"Core. Those","Fragments":["don't"]},{"Key":"Those don't","Fragments":["work"]},{"Key":"don't work","Fragments":["all"]},{"Key":"work all","Fragments":["that"]},{"Key":"all that","Fragments":["well"]},{"Key":"that well","Fragments":["with"]},{"Key":"well with","Fragments":["composition"]},{"Key":"with composition","Fragments":["I"]},{"Key":"composition I","Fragments":["fear."]},{"Key":"think `String.is_empty","Fragments":["s"]},{"Key":"`String.is_empty s","Fragments":["|\u003e"]},{"Key":"|\u003e String.strip`","Fragments":["is"]},{"Key":"String.strip` is","Fragments":["more"]},{"Key":"more idiomatic,","Fragments":["but"]},{"Key":"idiomatic, but","Fragments":["`Fn.compose`"]},{"Key":"but `Fn.compose`","Fragments":["works"]},{"Key":"`Fn.compose` works","Fragments":["as"]},{"Key":"works as","Fragments":["well."]},{"Key":"the compose","Fragments":["function"]},{"Key":"compose function","Fragments":["feels"]},{"Key":"function feels","Fragments":["a"]},{"Key":"bit clunky","Fragments":["unlike"]},{"Key":"clunky unlike","Fragments":["in"]},{"Key":"unlike in","Fragments":["Haskell."]},{"Key":"in Haskell.","Fragments":["Sad"]},{"Key":"Haskell. Sad","Fragments":["face."]},{"Key":" Er...","Fragments":["not"]},{"Key":"Er... not","Fragments":["sure"]},{"Key":"is passing","Fragments":["the"]},{"Key":"passing the","Fragments":["tests"]},{"Key":"tests yet:","Fragments":["when"]},{"Key":"yet: when","Fragments":["I"]},{"Key":"I try","Fragments":["to","to"]},{"Key":"try to","Fragments":["test","sum","avoid","write","squeeze"]},{"Key":"test it","Fragments":["it"]},{"Key":"it it","Fragments":["just"]},{"Key":"it just","Fragments":["hangs"]},{"Key":"just hangs","Fragments":["up!"]},{"Key":"hangs up!","Fragments":["Perhaps"]},{"Key":"up! Perhaps","Fragments":["I've"]},{"Key":"Perhaps I've","Fragments":["got"]},{"Key":"I've got","Fragments":["an"]},{"Key":"got an","Fragments":["infinite"]},{"Key":"an infinite","Fragments":["loop"]},{"Key":"infinite loop","Fragments":["somewhere?"]},{"Key":"loop somewhere?","Fragments":["Or"]},{"Key":"somewhere? Or","Fragments":["maybe"]},{"Key":"Or maybe","Fragments":["something"]},{"Key":"maybe something","Fragments":["here"]},{"Key":"something here","Fragments":["is"]},{"Key":"here is","Fragments":["just"]},{"Key":"is just","Fragments":["too","a","imho),"]},{"Key":"just too","Fragments":["slow?"]},{"Key":"too slow?","Fragments":["Having"]},{"Key":"slow? Having","Fragments":["said"]},{"Key":"Having said","Fragments":["that"]},{"Key":"said that","Fragments":["the"]},{"Key":"that the","Fragments":["logic"]},{"Key":"is pretty","Fragments":["close"]},{"Key":"pretty close","Fragments":["to"]},{"Key":"close to","Fragments":["my","how"]},{"Key":"my Elixir","Fragments":["submission"]},{"Key":"Elixir submission","Fragments":["and"]},{"Key":"submission and","Fragments":["the"]},{"Key":"functions work","Fragments":["at"]},{"Key":"work at","Fragments":["try.ocamlpro.com,"]},{"Key":"at try.ocamlpro.com,","Fragments":["apart"]},{"Key":"try.ocamlpro.com, apart","Fragments":["from"]},{"Key":"apart from","Fragments":["`fold`"]},{"Key":"from `fold`","Fragments":["which"]},{"Key":"`fold` which","Fragments":["gives"]},{"Key":"which gives","Fragments":["an"]},{"Key":"gives an","Fragments":["error"]},{"Key":"an error","Fragments":["(type"]},{"Key":"error (type","Fragments":["int,"]},{"Key":"(type int,","Fragments":["but"]},{"Key":"int, but","Fragments":["expecting"]},{"Key":"but expecting","Fragments":["type"]},{"Key":"expecting type","Fragments":["'a"]},{"Key":"type 'a","Fragments":["list)"]},{"Key":"'a list)","Fragments":["if"]},{"Key":"list) if","Fragments":["I"]},{"Key":"to sum","Fragments":["a"]},{"Key":"sum a","Fragments":["list"]},{"Key":"of integers.","Fragments":["Have"]},{"Key":"integers. Have","Fragments":["I"]},{"Key":"Have I","Fragments":["done"]},{"Key":"I done","Fragments":["something"]},{"Key":"done something","Fragments":["glaringly"]},{"Key":"something glaringly","Fragments":["wrong?"]},{"Key":"The long","Fragments":["time"]},{"Key":"long time","Fragments":["is","and"]},{"Key":"is due","Fragments":["to"]},{"Key":"due to","Fragments":["concat.","a","`use"]},{"Key":"to concat.","Fragments":["It's"]},{"Key":"concat. It's","Fragments":["the"]},{"Key":"It's the","Fragments":["same"]},{"Key":"same issue","Fragments":["as"]},{"Key":"issue as","Fragments":["here:"]},{"Key":"as here:","Fragments":["http://exercism.io/submissions/1ca0fd0a7cd273c45228d39d"]},{"Key":"The rest","Fragments":["looks"]},{"Key":"rest looks","Fragments":["good"]},{"Key":"good but","Fragments":["with"]},{"Key":"few tricks","Fragments":["it"]},{"Key":"tricks it","Fragments":["can"]},{"Key":"can look","Fragments":["better:"]},{"Key":"let length","Fragments":["n","="]},{"Key":"length n","Fragments":["=","="]},{"Key":"let go","Fragments":["acc","acc"]},{"Key":"go acc","Fragments":["=","=","=",":"]},{"Key":"acc =","Fragments":["function","function","function"]},{"Key":":: t","Fragments":["-\u003e","-\u003e","-\u003e","-\u003e"]},{"Key":"-\u003e go","Fragments":["(acc","(acc","(acc"]},{"Key":"go (acc","Fragments":["+","+","+"]},{"Key":"(acc +","Fragments":["1)","1)","1)"]},{"Key":"+ 1)","Fragments":["t","t","t","(List.range"]},{"Key":"1) t","Fragments":["in","in","in"]},{"Key":" go","Fragments":["0","0","0"]},{"Key":" Hmm,","Fragments":["that"]},{"Key":"Hmm, that","Fragments":["doesn't"]},{"Key":"that doesn't","Fragments":["seem"]},{"Key":"to work","Fragments":["for","more"]},{"Key":"work for","Fragments":["me,","you?"]},{"Key":"me, though","Fragments":["this"]},{"Key":"though this","Fragments":["does"]},{"Key":"this does","Fragments":["after"]},{"Key":"does after","Fragments":["a"]},{"Key":"after a","Fragments":["bit"]},{"Key":"of trial","Fragments":["and"]},{"Key":"trial and","Fragments":["error:"]},{"Key":" `let","Fragments":["length","make_valid_char"]},{"Key":"`let length","Fragments":["n"]},{"Key":"rec go","Fragments":["acc","acc"]},{"Key":"go 0","Fragments":["n`"]},{"Key":" Uhm,","Fragments":["yup,"]},{"Key":"Uhm, yup,","Fragments":["forgot"]},{"Key":"yup, forgot","Fragments":["a"]},{"Key":"forgot a","Fragments":["rec"]},{"Key":"a rec","Fragments":["there."]},{"Key":"rec there.","Fragments":["Without"]},{"Key":"there. Without","Fragments":["the"]},{"Key":"Without the","Fragments":["`rec`"]},{"Key":"the `rec`","Fragments":["the"]},{"Key":"`rec` the","Fragments":["function"]},{"Key":"function being","Fragments":["defined"]},{"Key":"being defined","Fragments":["is"]},{"Key":"defined is","Fragments":["not"]},{"Key":"scope inside","Fragments":["its"]},{"Key":"inside its","Fragments":["own"]},{"Key":" And","Fragments":["what","last"]},{"Key":"And what","Fragments":["about"]},{"Key":"what about","Fragments":["the"]},{"Key":"last line,","Fragments":["does"]},{"Key":"line, does","Fragments":["it"]},{"Key":"does it","Fragments":["need","do"]},{"Key":"it need","Fragments":["to"]},{"Key":"be `go","Fragments":["0"]},{"Key":"`go 0","Fragments":["n`"]},{"Key":"0 n`","Fragments":["or"]},{"Key":"n` or","Fragments":["is"]},{"Key":"or is","Fragments":["there","the"]},{"Key":"is there","Fragments":["any"]},{"Key":"there any","Fragments":["way","way"]},{"Key":"any way","Fragments":["of","of"]},{"Key":"way of","Fragments":["cancelling","getting"]},{"Key":"of cancelling","Fragments":["that"]},{"Key":"cancelling that","Fragments":["n"]},{"Key":"that n","Fragments":["out?"]},{"Key":"Good point,","Fragments":["you","thanks."]},{"Key":"point, you","Fragments":["can"]},{"Key":"can indeed","Fragments":["do"]},{"Key":"indeed do","Fragments":["that"]},{"Key":"that by","Fragments":["using"]},{"Key":"using partial","Fragments":["application:"]},{"Key":" Certainly","Fragments":["feels"]},{"Key":"Certainly feels","Fragments":["like"]},{"Key":"feels like","Fragments":["it"]},{"Key":"it should","Fragments":["work,"]},{"Key":"should work,","Fragments":["but"]},{"Key":"work, but","Fragments":["this"]},{"Key":"but this","Fragments":["is"]},{"Key":"is what","Fragments":["I","makes","it"]},{"Key":"get in","Fragments":["practice:"]},{"Key":"in practice:","Fragments":["`Values"]},{"Key":"practice: `Values","Fragments":["do"]},{"Key":"`Values do","Fragments":["not"]},{"Key":"do not","Fragments":["match:"]},{"Key":"val length","Fragments":[":",":"]},{"Key":"length :","Fragments":["'_a","'a"]},{"Key":": '_a","Fragments":["list"]},{"Key":"'_a list","Fragments":["-\u003e"]},{"Key":"list -\u003e","Fragments":["int","int`.","int',","int`.","into"]},{"Key":" is","Fragments":["not"]},{"Key":"not included","Fragments":["in"]},{"Key":": 'a","Fragments":["list"]},{"Key":"'a list","Fragments":["-\u003e","-\u003e"]},{"Key":"-\u003e int`.","Fragments":["I","So"]},{"Key":"int`. I","Fragments":["do"]},{"Key":"do have","Fragments":["some"]},{"Key":"have some","Fragments":["trouble","tail-recursion"]},{"Key":"trouble parsing","Fragments":["the"]},{"Key":"parsing the","Fragments":["type"]},{"Key":"type mismatch","Fragments":["error"]},{"Key":"mismatch error","Fragments":["messages..."]},{"Key":" You're","Fragments":["not"]},{"Key":"You're not","Fragments":["the"]},{"Key":"the only","Fragments":["one."]},{"Key":"only one.","Fragments":["And"]},{"Key":"one. And","Fragments":["this"]},{"Key":"And this","Fragments":["one"]},{"Key":"one is","Fragments":["particularly"]},{"Key":"is particularly","Fragments":["bad."]},{"Key":" Let's","Fragments":["see,"]},{"Key":"Let's see,","Fragments":["`'a`"]},{"Key":"see, `'a`","Fragments":["means"]},{"Key":"`'a` means","Fragments":["anything"]},{"Key":"means anything","Fragments":["(polymorphic)"]},{"Key":"anything (polymorphic)","Fragments":["and"]},{"Key":"(polymorphic) and","Fragments":["'_a"]},{"Key":"and '_a","Fragments":["means"]},{"Key":"'_a means","Fragments":["something"]},{"Key":"means something","Fragments":["but"]},{"Key":"something but","Fragments":["what"]},{"Key":"but what","Fragments":["it"]},{"Key":"is is","Fragments":["unknown."]},{"Key":"is unknown.","Fragments":["Usually"]},{"Key":"unknown. Usually","Fragments":["stuff"]},{"Key":"Usually stuff","Fragments":["like"]},{"Key":"like `'_a`","Fragments":["shows"]},{"Key":"`'_a` shows","Fragments":["up"]},{"Key":"shows up","Fragments":["in"]},{"Key":"up in","Fragments":["functions","the"]},{"Key":"in functions","Fragments":["doing"]},{"Key":"functions doing","Fragments":["IO,"]},{"Key":"doing IO,","Fragments":["for"]},{"Key":"IO, for","Fragments":["a"]},{"Key":"reason I","Fragments":["don't"]},{"Key":"don't quite","Fragments":["understand."]},{"Key":" I'll","Fragments":["take"]},{"Key":"I'll take","Fragments":["a"]},{"Key":"at this,","Fragments":["it's"]},{"Key":"this, it's","Fragments":["probably"]},{"Key":"it's probably","Fragments":["something"]},{"Key":"something simple,","Fragments":["but"]},{"Key":"simple, but","Fragments":["from"]},{"Key":"but from","Fragments":["the"]},{"Key":"the error","Fragments":["message"]},{"Key":"error message","Fragments":["it's"]},{"Key":"message it's","Fragments":["hard"]},{"Key":"it's hard","Fragments":["to"]},{"Key":"tell what","Fragments":["is"]},{"Key":"what is","Fragments":["wrong."]},{"Key":"Ah, wait,","Fragments":["this"]},{"Key":"wait, this","Fragments":["is"]},{"Key":"a known","Fragments":["problem"]},{"Key":"known problem","Fragments":["with"]},{"Key":"with OCaml.","Fragments":["Partial"]},{"Key":"OCaml. Partial","Fragments":["application"]},{"Key":"Partial application","Fragments":["(sometimes,"]},{"Key":"application (sometimes,","Fragments":["wrongly,"]},{"Key":"(sometimes, wrongly,","Fragments":["known"]},{"Key":"wrongly, known","Fragments":["as"]},{"Key":"known as","Fragments":["currying)"]},{"Key":"as currying)","Fragments":["can"]},{"Key":"currying) can","Fragments":["cause"]},{"Key":"can cause","Fragments":["this"]},{"Key":"cause this","Fragments":["problem."]},{"Key":"this problem.","Fragments":["It's"]},{"Key":"problem. It's","Fragments":["something"]},{"Key":"It's something","Fragments":["called"]},{"Key":"something called","Fragments":["the"]},{"Key":"called the","Fragments":["value"]},{"Key":"the value","Fragments":["restriction."]},{"Key":"value restriction.","Fragments":["See"]},{"Key":"restriction. See","Fragments":["http://caml.inria.fr/resources/doc/faq/core.en.html#eta-expansion"]},{"Key":"See http://caml.inria.fr/resources/doc/faq/core.en.html#eta-expansion","Fragments":["(EDIT:"]},{"Key":"http://caml.inria.fr/resources/doc/faq/core.en.html#eta-expansion (EDIT:","Fragments":["Might"]},{"Key":"(EDIT: Might","Fragments":["be"]},{"Key":"Might be","Fragments":["a"]},{"Key":"a similar","Fragments":["but"]},{"Key":"similar but","Fragments":["different"]},{"Key":"but different","Fragments":["issue)"]},{"Key":"just took","Fragments":["a"]},{"Key":"took a","Fragments":["look"]},{"Key":"look using","Fragments":["utop,"]},{"Key":"using utop,","Fragments":["if"]},{"Key":"utop, if","Fragments":["I"]},{"Key":"I add","Fragments":["the"]},{"Key":"add the","Fragments":["`n`"]},{"Key":"the `n`","Fragments":["variable"]},{"Key":"`n` variable","Fragments":["the"]},{"Key":"variable the","Fragments":["type"]},{"Key":"type of","Fragments":["the"]},{"Key":"is `'a","Fragments":["list"]},{"Key":"`'a list","Fragments":["-\u003e"]},{"Key":"-\u003e int',","Fragments":["if"]},{"Key":"int', if","Fragments":["I"]},{"Key":"I leave","Fragments":["it"]},{"Key":"leave it","Fragments":["it's"]},{"Key":"it it's","Fragments":["`'_a"]},{"Key":"it's `'_a","Fragments":["list"]},{"Key":"`'_a list","Fragments":["-\u003e"]},{"Key":"int`. So","Fragments":["the"]},{"Key":"So the","Fragments":["added"]},{"Key":"the added","Fragments":["`n`","complexity"]},{"Key":"added `n`","Fragments":["parameter"]},{"Key":"`n` parameter","Fragments":["is"]},{"Key":"parameter is","Fragments":["what"]},{"Key":"what makes","Fragments":["the"]},{"Key":"makes the","Fragments":["difference"]},{"Key":"difference for","Fragments":["the"]},{"Key":"getting around","Fragments":["this"]},{"Key":"around this","Fragments":["(by"]},{"Key":"this (by","Fragments":["explicit"]},{"Key":"(by explicit","Fragments":["type"]},{"Key":"explicit type","Fragments":["annotations"]},{"Key":"annotations or","Fragments":["whatever),"]},{"Key":"or whatever),","Fragments":["or"]},{"Key":"whatever), or","Fragments":["is"]},{"Key":"the n","Fragments":["parameter"]},{"Key":"n parameter","Fragments":["effectively"]},{"Key":"parameter effectively","Fragments":["compulsory,"]},{"Key":"effectively compulsory,","Fragments":["then?"]},{"Key":"not behind","Fragments":["a"]},{"Key":"behind a","Fragments":["computer"]},{"Key":"a computer","Fragments":["at"]},{"Key":"computer at","Fragments":["the"]},{"Key":"the moment","Fragments":["so","I"]},{"Key":"moment so","Fragments":["I"]},{"Key":"can't check","Fragments":["this"]},{"Key":"check this","Fragments":["but"]},{"Key":"this but","Fragments":["you"]},{"Key":"could try","Fragments":["`let"]},{"Key":"try `let","Fragments":["rec"]},{"Key":"`let rec","Fragments":["go"]},{"Key":"acc :","Fragments":["int"]},{"Key":": int","Fragments":["-\u003e"]},{"Key":"int -\u003e","Fragments":["'a"]},{"Key":"-\u003e 'a","Fragments":["list"]},{"Key":"-\u003e into","Fragments":["="]},{"Key":"into =","Fragments":["function`."]},{"Key":"Did the","Fragments":["tests"]},{"Key":"tests pass","Fragments":["for"]},{"Key":"pass for","Fragments":["you?"]},{"Key":"me they","Fragments":["(understandably)"]},{"Key":"they (understandably)","Fragments":["take"]},{"Key":"(understandably) take","Fragments":["very"]},{"Key":"take very","Fragments":["long"]},{"Key":"very long","Fragments":["with"]},{"Key":"long with","Fragments":["your"]},{"Key":"with your","Fragments":["implementation"]},{"Key":"your implementation","Fragments":["and"]},{"Key":"implementation and","Fragments":["then"]},{"Key":"then fail","Fragments":["due"]},{"Key":"fail due","Fragments":["to"]},{"Key":"a stack","Fragments":["overflow","overflow,","overflow"]},{"Key":"stack overflow","Fragments":["(or","if"]},{"Key":"overflow (or","Fragments":["they"]},{"Key":"(or they","Fragments":["fail"]},{"Key":"they fail","Fragments":["quickly"]},{"Key":"fail quickly","Fragments":["with"]},{"Key":"quickly with","Fragments":["a"]},{"Key":"stack overflow,","Fragments":["depending"]},{"Key":"overflow, depending","Fragments":["on"]},{"Key":"how OUnit","Fragments":["decides"]},{"Key":"OUnit decides","Fragments":["to"]},{"Key":"decides to","Fragments":["order"]},{"Key":"to order","Fragments":["the"]},{"Key":"order the","Fragments":["test"]},{"Key":"I can","Fragments":["only","only","proud","offer","mutate"]},{"Key":"can only","Fragments":["pass","see"]},{"Key":"only pass","Fragments":["the"]},{"Key":"tests when","Fragments":["they"]},{"Key":"when they","Fragments":["are"]},{"Key":"I haven't","Fragments":["had"]},{"Key":"haven't had","Fragments":["the"]},{"Key":"had the","Fragments":["patience"]},{"Key":"the patience","Fragments":["to"]},{"Key":"patience to","Fragments":["go"]},{"Key":"to go","Fragments":["through"]},{"Key":"go through","Fragments":["the"]},{"Key":"long ones.","Fragments":["Although"]},{"Key":"ones. Although","Fragments":["I"]},{"Key":"Although I","Fragments":["really"]},{"Key":"I really","Fragments":["don't","wanted","struggled"]},{"Key":"really don't","Fragments":["understand"]},{"Key":"don't understand","Fragments":["why"]},{"Key":"understand why","Fragments":["this","your"]},{"Key":"why this","Fragments":["is"]},{"Key":"so slow.","Fragments":["OCaml"]},{"Key":"slow. OCaml","Fragments":["has"]},{"Key":"OCaml has","Fragments":["a"]},{"Key":"has a","Fragments":["reputation","lot"]},{"Key":"a reputation","Fragments":["to"]},{"Key":"reputation to","Fragments":["be"]},{"Key":"be so","Fragments":["fast"]},{"Key":"so fast","Fragments":["..."]},{"Key":" OCaml","Fragments":["is"]},{"Key":"is fast.","Fragments":["These"]},{"Key":"fast. These","Fragments":["tests"]},{"Key":"These tests","Fragments":["are"]},{"Key":"tests are","Fragments":["the"]},{"Key":"the issue.","Fragments":["They"]},{"Key":"issue. They","Fragments":["are"]},{"Key":"They are","Fragments":["explicitly"]},{"Key":"are explicitly","Fragments":["designed"]},{"Key":"explicitly designed","Fragments":["to"]},{"Key":"designed to","Fragments":["trigger"]},{"Key":"to trigger","Fragments":["some","stack"]},{"Key":"trigger some","Fragments":["problems"]},{"Key":"some problems","Fragments":["(stack"]},{"Key":"problems (stack","Fragments":["overflows"]},{"Key":"(stack overflows","Fragments":["and"]},{"Key":"overflows and","Fragments":["a","left"]},{"Key":"very very","Fragments":["slow"]},{"Key":"very slow","Fragments":["concat)"]},{"Key":"slow concat)","Fragments":["if"]},{"Key":"concat) if","Fragments":["the"]},{"Key":"implementation uses","Fragments":["the"]},{"Key":"uses the","Fragments":["certain"]},{"Key":"the certain","Fragments":["obvious"]},{"Key":"certain obvious","Fragments":["but"]},{"Key":"obvious but","Fragments":["problematic"]},{"Key":"but problematic","Fragments":["techniques."]},{"Key":"`let make_valid_char","Fragments":["=","c"]},{"Key":"make_valid_char =","Fragments":["(fun"]},{"Key":"= (fun","Fragments":["c","a","b"]},{"Key":"(fun c","Fragments":["-\u003e"]},{"Key":"c -\u003e","Fragments":["if"]},{"Key":"-\u003e if","Fragments":["(Char.is_alphanum"]},{"Key":"if (Char.is_alphanum","Fragments":["c)","c)"]},{"Key":"(Char.is_alphanum c)","Fragments":["then","then"]},{"Key":"c) then","Fragments":["Char.lowercase","Char.lowercase"]},{"Key":"then Char.lowercase","Fragments":["c","c"]},{"Key":"Char.lowercase c","Fragments":["else","else"]},{"Key":"c else","Fragments":["'","'"]},{"Key":"else '","Fragments":["')`","'`."]},{"Key":"' ')`","Fragments":["can"]},{"Key":"')` can","Fragments":["be"]},{"Key":"as `let","Fragments":["make_valid_char"]},{"Key":"make_valid_char c","Fragments":["="]},{"Key":"c =","Fragments":["if"]},{"Key":"= if","Fragments":["(Char.is_alphanum"]},{"Key":"let f1","Fragments":["="]},{"Key":"f1 =","Fragments":["(fun"]},{"Key":"(fun a","Fragments":["-\u003e"]},{"Key":"a -\u003e","Fragments":["(fun"]},{"Key":"-\u003e (fun","Fragments":["b"]},{"Key":"(fun b","Fragments":["-\u003e","-\u003e"]},{"Key":"b -\u003e","Fragments":["a","a"]},{"Key":"-\u003e a","Fragments":["+","+"]},{"Key":"a +","Fragments":["b))","b)","b"]},{"Key":"let f2","Fragments":["a"]},{"Key":"f2 a","Fragments":["="]},{"Key":"let f3","Fragments":["a"]},{"Key":"f3 a","Fragments":["b"]},{"Key":"a b","Fragments":["="]},{"Key":"b =","Fragments":["a"]},{"Key":"= a","Fragments":["+"]},{"Key":" These","Fragments":["are"]},{"Key":"These are","Fragments":["all"]},{"Key":"are all","Fragments":["the"]},{"Key":"same, `let","Fragments":["f"]},{"Key":"`let f","Fragments":["x"]},{"Key":"y z`","Fragments":["is"]},{"Key":"z` is","Fragments":["just"]},{"Key":"just a","Fragments":["shorthand"]},{"Key":"a shorthand","Fragments":["for"]},{"Key":"shorthand for","Fragments":["the"]},{"Key":"the nested","Fragments":["funs.","`if`/`else`,"]},{"Key":"than that","Fragments":["I"]},{"Key":"have much","Fragments":["to"]},{"Key":"much to","Fragments":["remark."]},{"Key":" Indeed,","Fragments":["I"]},{"Key":"Indeed, I","Fragments":["knew"]},{"Key":"I knew","Fragments":["that,"]},{"Key":"knew that,","Fragments":["I"]},{"Key":"that, I","Fragments":["don't"]},{"Key":"know why","Fragments":["I"]},{"Key":"used this","Fragments":["notation"]},{"Key":"this notation","Fragments":["..."]},{"Key":"The standard","Fragments":["library"]},{"Key":"rather limited,","Fragments":["especially"]},{"Key":"limited, especially","Fragments":["when"]},{"Key":"especially when","Fragments":["it"]},{"Key":"when it","Fragments":["comes"]},{"Key":"it comes","Fragments":["to"]},{"Key":"to strings.","Fragments":["A"]},{"Key":"strings. A","Fragments":["library"]},{"Key":"A library","Fragments":["like"]},{"Key":"library like","Fragments":["[Core](https://github.com/janestreet/core)"]},{"Key":"like [Core](https://github.com/janestreet/core)","Fragments":["or"]},{"Key":"[Core](https://github.com/janestreet/core) or","Fragments":["[Batteries](http://batteries.forge.ocamlcore.org/)"]},{"Key":"or [Batteries](http://batteries.forge.ocamlcore.org/)","Fragments":["has"]},{"Key":"[Batteries](http://batteries.forge.ocamlcore.org/) has","Fragments":["a"]},{"Key":"lot more","Fragments":["functions"]},{"Key":"more functions","Fragments":["to"]},{"Key":"help you.","Fragments":["If"]},{"Key":"you. If","Fragments":["you're"]},{"Key":"If you're","Fragments":["new","pulling"]},{"Key":"you're new","Fragments":["to"]},{"Key":"OCaml using","Fragments":["one"]},{"Key":"using one","Fragments":["of"]},{"Key":"of them","Fragments":["is"]},{"Key":"them is","Fragments":["highly"]},{"Key":"is highly","Fragments":["recommended."]},{"Key":" As","Fragments":["for"]},{"Key":"As for","Fragments":["your"]},{"Key":"your code,","Fragments":["regular","realised"]},{"Key":"code, regular","Fragments":["expressions"]},{"Key":"expressions are","Fragments":["rather"]},{"Key":"are rather","Fragments":["overkill"]},{"Key":"rather overkill","Fragments":["here."]},{"Key":"overkill here.","Fragments":["Even"]},{"Key":"here. Even","Fragments":["with"]},{"Key":"Even with","Fragments":["the"]},{"Key":"library there","Fragments":["are"]},{"Key":"are better","Fragments":["solutions"]},{"Key":"better solutions","Fragments":["(though"]},{"Key":"solutions (though","Fragments":["they'll"]},{"Key":"(though they'll","Fragments":["probably"]},{"Key":"they'll probably","Fragments":["involve"]},{"Key":"probably involve","Fragments":["some"]},{"Key":"involve some","Fragments":["explicit"]},{"Key":"some explicit","Fragments":["loops)."]},{"Key":"For `response_for`","Fragments":["you"]},{"Key":"`response_for` you","Fragments":["could"]},{"Key":"consider something","Fragments":["along"]},{"Key":"something along","Fragments":["the"]},{"Key":"along the","Fragments":["lines"]},{"Key":"the lines","Fragments":["of"]},{"Key":"response_for input","Fragments":["="]},{"Key":"= match","Fragments":["String.trim","a"]},{"Key":"match String.trim","Fragments":["input"]},{"Key":"String.trim input","Fragments":["with"]},{"Key":"| \"\"","Fragments":["-\u003e","-\u003e"]},{"Key":"\"\" -\u003e","Fragments":["\"Fine.","(*"]},{"Key":"-\u003e \"Fine.","Fragments":["Be"]},{"Key":"when is_yell","Fragments":["s"]},{"Key":"is_yell s","Fragments":["-\u003e"]},{"Key":"-\u003e \"Woah,","Fragments":["chill"]},{"Key":"\"Woah, chill","Fragments":["out!\""]},{"Key":"when is_input","Fragments":["s"]},{"Key":"is_input s","Fragments":["-\u003e"]},{"Key":"This avoids","Fragments":["the"]},{"Key":"avoids the","Fragments":["`String.length`"]},{"Key":"the `String.length`","Fragments":["call"]},{"Key":"`String.length` call","Fragments":["and"]},{"Key":"call and","Fragments":["looks"]},{"Key":"and looks","Fragments":["much"]},{"Key":"looks much","Fragments":["nicer."]},{"Key":" @jarrett","Fragments":["Thanks"]},{"Key":"@jarrett Thanks","Fragments":["for"]},{"Key":"your advise.","Fragments":["I"]},{"Key":"advise. I","Fragments":["wonder"]},{"Key":"wonder how","Fragments":["can"]},{"Key":"how can","Fragments":["I","you"]},{"Key":"can I","Fragments":["make"]},{"Key":"I make","Fragments":["source"]},{"Key":"make source","Fragments":["better."]},{"Key":"source better.","Fragments":["Your"]},{"Key":"better. Your","Fragments":["advise"]},{"Key":"Your advise","Fragments":["is"]},{"Key":"advise is","Fragments":["good"]},{"Key":"is good","Fragments":["to"]},{"Key":"A nice","Fragments":["and"]},{"Key":"nice and","Fragments":["elegant"]},{"Key":"and elegant","Fragments":["solution."]},{"Key":"elegant solution.","Fragments":["I"]},{"Key":"solution. I","Fragments":["especially"]},{"Key":"I especially","Fragments":["like"]},{"Key":"especially like","Fragments":["the"]},{"Key":"the use","Fragments":["of"]},{"Key":"of slicing","Fragments":["with"]},{"Key":"slicing with","Fragments":["negative"]},{"Key":"with negative","Fragments":["numbers."]},{"Key":"negative numbers.","Fragments":["However,"]},{"Key":"numbers. However,","Fragments":["you"]},{"Key":"the operators","Fragments":["of"]},{"Key":"operators of","Fragments":["the"]},{"Key":"the Option","Fragments":["module(\u003e\u003e="]},{"Key":"Option module(\u003e\u003e=","Fragments":["and"]},{"Key":"module(\u003e\u003e= and","Fragments":["\u003e\u003e|)"]},{"Key":"and \u003e\u003e|)","Fragments":["to"]},{"Key":"\u003e\u003e|) to","Fragments":["hide"]},{"Key":"to hide","Fragments":["some"]},{"Key":"hide some","Fragments":["plumbing"]},{"Key":"some plumbing","Fragments":["in"]},{"Key":"plumbing in","Fragments":["area_code"]},{"Key":"in area_code","Fragments":["although"]},{"Key":"area_code although","Fragments":["here"]},{"Key":"although here","Fragments":["it"]},{"Key":"here it","Fragments":["would"]},{"Key":"would not","Fragments":["matter"]},{"Key":"not matter","Fragments":["too"]},{"Key":"matter too","Fragments":["much."]},{"Key":"Good point","Fragments":["..."]},{"Key":" `type","Fragments":["school"]},{"Key":"= (string","Fragments":["list)"]},{"Key":"(string list)","Fragments":["Int.Map.t`"]},{"Key":"list) Int.Map.t`","Fragments":["can"]},{"Key":"Int.Map.t` can","Fragments":["be"]},{"Key":"as `type","Fragments":["school"]},{"Key":"list Int.Map.t`.","Fragments":["The"]},{"Key":"Int.Map.t`. The","Fragments":["parentheses"]},{"Key":"The parentheses","Fragments":["aren't"]},{"Key":"parentheses aren't","Fragments":["needed."]},{"Key":" Indeed.","Fragments":["Due"]},{"Key":"Indeed. Due","Fragments":["to"]},{"Key":"Due to","Fragments":["tail"]},{"Key":"to tail","Fragments":["recursion"]},{"Key":"tail recursion","Fragments":["the","problems,"]},{"Key":"recursion the","Fragments":["`map`"]},{"Key":"the `map`","Fragments":["and"]},{"Key":"and `filter`","Fragments":["no"]},{"Key":"`filter` no","Fragments":["longer"]},{"Key":"no longer","Fragments":["cause"]},{"Key":"longer cause","Fragments":["stack"]},{"Key":"cause stack","Fragments":["overflows."]},{"Key":"stack overflows.","Fragments":["And"]},{"Key":"overflows. And","Fragments":["`concat`"]},{"Key":"And `concat`","Fragments":["needs"]},{"Key":"`concat` needs","Fragments":["to"]},{"Key":"do the","Fragments":["appends"]},{"Key":"the appends","Fragments":["in"]},{"Key":"appends in","Fragments":["the"]},{"Key":"correct order","Fragments":["because"]},{"Key":"order because","Fragments":["of"]},{"Key":"because of","Fragments":["how"]},{"Key":"of how","Fragments":["long"]},{"Key":"how long","Fragments":["`append`"]},{"Key":"long `append`","Fragments":["takes"]},{"Key":"`append` takes","Fragments":["(time"]},{"Key":"takes (time","Fragments":["proportional"]},{"Key":"(time proportional","Fragments":["to"]},{"Key":"proportional to","Fragments":["the"]},{"Key":"the length","Fragments":["of"]},{"Key":" Just","Fragments":["to"]},{"Key":"Just to","Fragments":["know,"]},{"Key":"to know,","Fragments":["how"]},{"Key":"know, how","Fragments":["can"]},{"Key":"you access","Fragments":["my"]},{"Key":"access my","Fragments":["submission"]},{"Key":"my submission","Fragments":["when"]},{"Key":"submission when","Fragments":["you"]},{"Key":"don't seem","Fragments":["to"]},{"Key":"have solved","Fragments":["this"]},{"Key":"solved this","Fragments":["exercise?"]},{"Key":"exercise? I","Fragments":["can"]},{"Key":"test files","Fragments":["for"]},{"Key":"files for","Fragments":["exercises"]},{"Key":"for exercises","Fragments":["I"]},{"Key":"exercises I","Fragments":["have"]},{"Key":"have done","Fragments":["..."]},{"Key":"a special","Fragments":["flag"]},{"Key":"special flag","Fragments":["for"]},{"Key":"flag for","Fragments":["this"]},{"Key":"this track","Fragments":["which"]},{"Key":"track which","Fragments":["allows"]},{"Key":"which allows","Fragments":["me"]},{"Key":"allows me","Fragments":["to"]},{"Key":"me to","Fragments":["nitpick","comb"]},{"Key":"to nitpick","Fragments":["every"]},{"Key":"nitpick every","Fragments":["exercise."]},{"Key":"every exercise.","Fragments":["Doing"]},{"Key":"exercise. Doing","Fragments":["the"]},{"Key":"Doing the","Fragments":["exercises"]},{"Key":"the exercises","Fragments":["wouldn't"]},{"Key":"exercises wouldn't","Fragments":["really"]},{"Key":"wouldn't really","Fragments":["be"]},{"Key":"be useful","Fragments":["for"]},{"Key":"useful for","Fragments":["me","me."]},{"Key":"me as","Fragments":["I"]},{"Key":"I made","Fragments":["this"]},{"Key":"made this","Fragments":["track."]},{"Key":"The blocking","Fragments":["test"]},{"Key":"blocking test","Fragments":["was"]},{"Key":"test was","Fragments":["the"]},{"Key":"the `concat`","Fragments":["one."]},{"Key":"`concat` one.","Fragments":["This"]},{"Key":"one. This","Fragments":["passes"]},{"Key":"This passes","Fragments":["all"]},{"Key":"passes all","Fragments":["the"]},{"Key":"tests in","Fragments":["0.21"]},{"Key":"in 0.21","Fragments":["seconds."]},{"Key":"to admit","Fragments":["I"]},{"Key":"admit I","Fragments":["find"]},{"Key":"I find","Fragments":["this","regexs"]},{"Key":"find this","Fragments":["code"]},{"Key":"this code","Fragments":["somewhat","is"]},{"Key":"code somewhat","Fragments":["hard"]},{"Key":"somewhat hard","Fragments":["to"]},{"Key":"to follow.","Fragments":["Could"]},{"Key":"follow. Could","Fragments":["you"]},{"Key":"Could you","Fragments":["perhaps"]},{"Key":"you perhaps","Fragments":["explain"]},{"Key":"perhaps explain","Fragments":["why"]},{"Key":"explain why","Fragments":["you've"]},{"Key":"why you've","Fragments":["chosen"]},{"Key":"you've chosen","Fragments":["this"]},{"Key":"chosen this","Fragments":["approach?"]},{"Key":" @davon","Fragments":["I"]},{"Key":"@davon I","Fragments":["have"]},{"Key":"have cleaned","Fragments":["a"]},{"Key":"cleaned a","Fragments":["bit,"]},{"Key":"a bit,","Fragments":["and"]},{"Key":"bit, and","Fragments":["added"]},{"Key":"and added","Fragments":["comments"]},{"Key":"added comments","Fragments":["to"]},{"Key":"comments to","Fragments":["the"]},{"Key":"the code,","Fragments":["I"]},{"Key":"code, I","Fragments":["hope"]},{"Key":"I hope","Fragments":["this","you"]},{"Key":"hope this","Fragments":["helps"]},{"Key":"This is","Fragments":["a","an","what","one"]},{"Key":"a solution","Fragments":["which"]},{"Key":"solution which","Fragments":["does"]},{"Key":"which does","Fragments":["a"]},{"Key":"does a","Fragments":["single"]},{"Key":"single pass","Fragments":["over","is"]},{"Key":"pass over","Fragments":["the"]},{"Key":"the string.","Fragments":["I'm"]},{"Key":"string. I'm","Fragments":["sure"]},{"Key":"I'm sure","Fragments":["there"]},{"Key":"sure there","Fragments":["is"]},{"Key":" Do","Fragments":["you","those"]},{"Key":"Do you","Fragments":["think","use"]},{"Key":"you think","Fragments":["the"]},{"Key":"think the","Fragments":["added"]},{"Key":"added complexity","Fragments":["of"]},{"Key":"complexity of","Fragments":["doing"]},{"Key":"of doing","Fragments":["only"]},{"Key":"doing only","Fragments":["a"]},{"Key":"pass is","Fragments":["worth"]},{"Key":"is worth","Fragments":["it"]},{"Key":"worth it","Fragments":["though?"]},{"Key":"I would","Fragments":["suggest","love,","go"]},{"Key":"would suggest","Fragments":["to"]},{"Key":"suggest to","Fragments":["follow"]},{"Key":"to follow","Fragments":["the"]},{"Key":"follow the","Fragments":["[Separation"]},{"Key":"the [Separation","Fragments":["of"]},{"Key":"[Separation of","Fragments":["Concerns](http://en.wikipedia.org/wiki/Separation_of_concerns)"]},{"Key":"of Concerns](http://en.wikipedia.org/wiki/Separation_of_concerns)","Fragments":["by"]},{"Key":"Concerns](http://en.wikipedia.org/wiki/Separation_of_concerns) by","Fragments":["breaking"]},{"Key":"by breaking","Fragments":["your"]},{"Key":"breaking your","Fragments":["big"]},{"Key":"your big","Fragments":["`update_accum`"]},{"Key":"big `update_accum`","Fragments":["in"]},{"Key":"`update_accum` in","Fragments":["smaller"]},{"Key":"in smaller","Fragments":["functions,"]},{"Key":"smaller functions,","Fragments":["and"]},{"Key":"functions, and","Fragments":["name"]},{"Key":"and name","Fragments":["these"]},{"Key":"name these","Fragments":["function"]},{"Key":"these function","Fragments":["by"]},{"Key":"function by","Fragments":["answering"]},{"Key":"by answering","Fragments":["*when"]},{"Key":"answering *when","Fragments":["should"]},{"Key":"*when should","Fragments":["I"]},{"Key":"should I","Fragments":["call"]},{"Key":"I call","Fragments":["this"]},{"Key":"call this","Fragments":["function*"]},{"Key":"this function*","Fragments":["rather"]},{"Key":"function* rather","Fragments":["than"]},{"Key":"than *what","Fragments":["does"]},{"Key":"*what does","Fragments":["it"]},{"Key":"it do","Fragments":["?*."]},{"Key":"Your pattern","Fragments":["matching"]},{"Key":"could benefit","Fragments":["from"]},{"Key":"benefit from","Fragments":["this"]},{"Key":"from this","Fragments":["separation."]},{"Key":"this separation.","Fragments":["Furthermore,"]},{"Key":"separation. Furthermore,","Fragments":["I"]},{"Key":"I personally","Fragments":["try"]},{"Key":"personally try","Fragments":["to"]},{"Key":"to avoid","Fragments":["nested"]},{"Key":"avoid nested","Fragments":["matching"]},{"Key":"nested matching","Fragments":["when"]},{"Key":"matching when","Fragments":["I"]},{"Key":"I can,","Fragments":["I"]},{"Key":"can, I","Fragments":["think"]},{"Key":"think that's","Fragments":["the"]},{"Key":"that's the","Fragments":["case"]},{"Key":"the case","Fragments":["here."]},{"Key":"case here.","Fragments":[";-)"]},{"Key":" About","Fragments":["the"]},{"Key":"About the","Fragments":["`open`"]},{"Key":"the `open`","Fragments":["line"]},{"Key":"`open` line","Fragments":["4,"]},{"Key":"line 4,","Fragments":["my"]},{"Key":"4, my","Fragments":["personal"]},{"Key":"my personal","Fragments":["taste","coding"]},{"Key":"personal taste","Fragments":["is"]},{"Key":"taste is","Fragments":["to"]},{"Key":"never hide","Fragments":["an"]},{"Key":"hide an","Fragments":["`open`"]},{"Key":"an `open`","Fragments":["statement."]},{"Key":"`open` statement.","Fragments":["As"]},{"Key":"statement. As","Fragments":["`open`"]},{"Key":"As `open`","Fragments":["has"]},{"Key":"`open` has","Fragments":["big"]},{"Key":"has big","Fragments":["side"]},{"Key":"big side","Fragments":["effects,"]},{"Key":"side effects,","Fragments":["I"]},{"Key":"effects, I","Fragments":["think"]},{"Key":"it's confusing.","Fragments":["I"]},{"Key":"confusing. I","Fragments":["recommend"]},{"Key":"I recommend","Fragments":["to"]},{"Key":"recommend to","Fragments":["put"]},{"Key":"to put","Fragments":["it"]},{"Key":"put it","Fragments":["in"]},{"Key":"it in","Fragments":["the"]},{"Key":"the head","Fragments":["of"]},{"Key":"head of","Fragments":["the"]},{"Key":"the file,","Fragments":["so"]},{"Key":"file, so","Fragments":["that"]},{"Key":"that if","Fragments":["you"]},{"Key":"have naming","Fragments":["conflicts,"]},{"Key":"naming conflicts,","Fragments":["better"]},{"Key":"conflicts, better","Fragments":["solve"]},{"Key":"better solve","Fragments":["them"]},{"Key":"solve them","Fragments":["explicitly."]},{"Key":" In","Fragments":["fact,","other"]},{"Key":"In fact,","Fragments":["my"]},{"Key":"fact, my","Fragments":["personal"]},{"Key":"never `open`","Fragments":["an"]},{"Key":"`open` an","Fragments":["**external"]},{"Key":"an **external","Fragments":["module**"]},{"Key":"**external module**","Fragments":["that"]},{"Key":"module** that","Fragments":["isn't"]},{"Key":"that isn't","Fragments":["referenced"]},{"Key":"isn't referenced","Fragments":["by"]},{"Key":"by half","Fragments":["of"]},{"Key":"half of","Fragments":["the"]},{"Key":"the project,","Fragments":["and"]},{"Key":"project, and","Fragments":["open"]},{"Key":"and open","Fragments":["**only"]},{"Key":"open **only","Fragments":["common"]},{"Key":"**only common","Fragments":["internal"]},{"Key":"common internal","Fragments":["modules**"]},{"Key":"internal modules**","Fragments":["(eg."]},{"Key":"modules** (eg.","Fragments":["the"]},{"Key":"(eg. the","Fragments":["type.ml"]},{"Key":"the type.ml","Fragments":["and"]},{"Key":"type.ml and","Fragments":["common.ml"]},{"Key":"and common.ml","Fragments":["files)."]},{"Key":"common.ml files).","Fragments":["I"]},{"Key":"files). I","Fragments":["dunno"]},{"Key":"I dunno","Fragments":["if"]},{"Key":"dunno if","Fragments":["that"]},{"Key":"if that","Fragments":["scale"]},{"Key":"that scale","Fragments":["to"]},{"Key":"scale to","Fragments":["a"]},{"Key":"large project,","Fragments":["but"]},{"Key":"project, but","Fragments":["eh,"]},{"Key":"but eh,","Fragments":["characters"]},{"Key":"eh, characters","Fragments":["are"]},{"Key":"characters are","Fragments":["cheap"]},{"Key":"are cheap","Fragments":["you"]},{"Key":"cheap you","Fragments":["can"]},{"Key":"can waste","Fragments":["them"]},{"Key":"waste them","Fragments":["!"]},{"Key":"them !","Fragments":[";-)"]},{"Key":"Ok, fixed","Fragments":["the"]},{"Key":"fixed the","Fragments":["non-tail-recursive"]},{"Key":"and made","Fragments":["`concat`"]},{"Key":"made `concat`","Fragments":["a"]},{"Key":"`concat` a","Fragments":["bit"]},{"Key":"bit less","Fragments":["horrifically"]},{"Key":"less horrifically","Fragments":["inefficient."]},{"Key":" Thought","Fragments":["it"]},{"Key":"Thought it","Fragments":["was"]},{"Key":"probably a","Fragments":["good"]},{"Key":"good idea","Fragments":["to"]},{"Key":"idea to","Fragments":["re-write"]},{"Key":"to re-write","Fragments":["all"]},{"Key":"re-write all","Fragments":["the"]},{"Key":" Tip:","Fragments":["you"]},{"Key":"Tip: you","Fragments":["can"]},{"Key":"write `fold`","Fragments":["like"]},{"Key":"`fold` like","Fragments":["this:"]},{"Key":"fold ~init:init","Fragments":["~f"]},{"Key":"~init:init ~f","Fragments":["="]},{"Key":"| x","Fragments":["::"]},{"Key":"x ::","Fragments":["xs"]},{"Key":":: xs","Fragments":["-\u003e"]},{"Key":"xs -\u003e","Fragments":["fold"]},{"Key":"-\u003e fold","Fragments":["~init:(f"]},{"Key":"~init:(f init","Fragments":["x)"]},{"Key":"init x)","Fragments":["~f"]},{"Key":"x) ~f","Fragments":["xs"]},{"Key":" Much","Fragments":["nicer,"]},{"Key":"Much nicer,","Fragments":["thanks"]},{"Key":"nicer, thanks","Fragments":["for"]},{"Key":"thanks for","Fragments":["the","`~f:((=)","`Fn.compose`!"]},{"Key":"that as","Fragments":["a"]},{"Key":"a shortcut","Fragments":["you"]},{"Key":"shortcut you","Fragments":["can"]},{"Key":"use `~foo`","Fragments":["where"]},{"Key":"`~foo` where","Fragments":["you"]},{"Key":"you would","Fragments":["write"]},{"Key":"would write","Fragments":["`~foo:foo`."]},{"Key":"write `~foo:foo`.","Fragments":["It's"]},{"Key":"`~foo:foo`. It's","Fragments":["a"]},{"Key":"a small","Fragments":["thing"]},{"Key":"small thing","Fragments":["but"]},{"Key":"thing but","Fragments":["it"]},{"Key":"read and","Fragments":["promotes","maintain"]},{"Key":"and promotes","Fragments":["using"]},{"Key":"promotes using","Fragments":["the"]},{"Key":"same names","Fragments":["for"]},{"Key":"names for","Fragments":["the"]},{"Key":"Ah, that's","Fragments":["nice."]},{"Key":"that's nice.","Fragments":["It"]},{"Key":"nice. It","Fragments":["did"]},{"Key":"It did","Fragments":["seem"]},{"Key":"did seem","Fragments":["a"]},{"Key":"seem a","Fragments":["bit"]},{"Key":"bit odd","Fragments":["having"]},{"Key":"odd having","Fragments":["to"]},{"Key":"to repeat","Fragments":["the"]},{"Key":"repeat the","Fragments":["names"]},{"Key":" Instead","Fragments":["of","of"]},{"Key":"of `string_of_char`","Fragments":["you"]},{"Key":"`string_of_char` you","Fragments":["can"]},{"Key":"use `Char.to_string`.","Fragments":["Instead"]},{"Key":"`Char.to_string`. Instead","Fragments":["of"]},{"Key":"of `chars_to_string`,","Fragments":["'String.of_char_list`."]},{"Key":"particular reason","Fragments":["you","you"]},{"Key":"you went","Fragments":["for"]},{"Key":"went for","Fragments":["explicit"]},{"Key":"for explicit","Fragments":["recursion"]},{"Key":"recursion instead","Fragments":["of"]},{"Key":"of things","Fragments":["like"]},{"Key":"things like","Fragments":["`String.for_all`?"]},{"Key":"you define","Fragments":["`is_nothing`","`rev_append`,"]},{"Key":"define `is_nothing`","Fragments":["as"]},{"Key":"`is_nothing` as","Fragments":["a"]},{"Key":"a function?","Fragments":["At"]},{"Key":"function? At","Fragments":["that"]},{"Key":"At that","Fragments":["point"]},{"Key":"that point","Fragments":["`s`"]},{"Key":"point `s`","Fragments":["is"]},{"Key":"`s` is","Fragments":["already"]},{"Key":"is already","Fragments":["in","quite"]},{"Key":"already in","Fragments":["scope","the"]},{"Key":"scope so","Fragments":["you"]},{"Key":"so you","Fragments":["can"]},{"Key":"write it","Fragments":["as","with","myself,"]},{"Key":"it as","Fragments":["`is_nothing","a","it"]},{"Key":"as `is_nothing","Fragments":["="]},{"Key":"`is_nothing =","Fragments":["...`"]},{"Key":"= ...`","Fragments":["and"]},{"Key":"...` and","Fragments":["just"]},{"Key":"and just","Fragments":["define"]},{"Key":"just define","Fragments":["it"]},{"Key":"define it","Fragments":["as"]},{"Key":" `open","Fragments":["Core.Core_string`"]},{"Key":"`open Core.Core_string`","Fragments":["and"]},{"Key":"Core.Core_string` and","Fragments":["`open"]},{"Key":"and `open","Fragments":["Core.Core_char`","Core.Std`"]},{"Key":"`open Core.Core_char`","Fragments":["confuse"]},{"Key":"Core.Core_char` confuse","Fragments":["me,"]},{"Key":"confuse me,","Fragments":["especially"]},{"Key":"me, especially","Fragments":["this"]},{"Key":"especially this","Fragments":["`get`"]},{"Key":"this `get`","Fragments":["without"]},{"Key":"`get` without","Fragments":["module"]},{"Key":"without module","Fragments":["prefix"]},{"Key":"module prefix","Fragments":["and"]},{"Key":"prefix and","Fragments":["others,"]},{"Key":"and others,","Fragments":["imho"]},{"Key":"others, imho","Fragments":["would"]},{"Key":"imho would","Fragments":["be"]},{"Key":"be better","Fragments":["to"]},{"Key":"to leave","Fragments":["module"]},{"Key":"leave module","Fragments":["name"]},{"Key":"module name","Fragments":["in","`Core.Core_string.get`"]},{"Key":"name in","Fragments":["the"]},{"Key":"the sake","Fragments":["of","of"]},{"Key":"sake of","Fragments":["readability.","readability"]},{"Key":"A couple","Fragments":["of"]},{"Key":"couple of","Fragments":["things:"]},{"Key":"1. I'd","Fragments":["break"]},{"Key":"I'd break","Fragments":["up"]},{"Key":"break up","Fragments":["`response_for`"]},{"Key":"functions e.g.","Fragments":["have"]},{"Key":"e.g. have","Fragments":["is_nothing"]},{"Key":"have is_nothing","Fragments":["as"]},{"Key":"is_nothing as","Fragments":["it's"]},{"Key":"own function.","Fragments":["All"]},{"Key":"function. All","Fragments":["the"]},{"Key":"All the","Fragments":["nesting"]},{"Key":"the nesting","Fragments":["of"]},{"Key":"nesting of","Fragments":["`let"]},{"Key":"`let ..","Fragments":["in`"]},{"Key":".. in`","Fragments":["gets"]},{"Key":"in` gets","Fragments":["hard"]},{"Key":"gets hard","Fragments":["to"]},{"Key":"2. opening","Fragments":["Core.Core_string"]},{"Key":"opening Core.Core_string","Fragments":["/"]},{"Key":"Core.Core_string /","Fragments":["Core_char"]},{"Key":"/ Core_char","Fragments":["isn't"]},{"Key":"Core_char isn't","Fragments":["your"]},{"Key":"isn't your","Fragments":["only"]},{"Key":"your only","Fragments":["option"]},{"Key":"only option","Fragments":["for"]},{"Key":"option for","Fragments":["pulling"]},{"Key":"for pulling","Fragments":["in"]},{"Key":"pulling in","Fragments":["`get`.","`Core.Std`"]},{"Key":"in `get`.","Fragments":["You"]},{"Key":"`get`. You","Fragments":["could"]},{"Key":"name `Core.Core_string.get`","Fragments":["or"]},{"Key":"`Core.Core_string.get` or","Fragments":["use"]},{"Key":"or use","Fragments":["a"]},{"Key":"a local","Fragments":["open"]},{"Key":"local open","Fragments":["e.g."]},{"Key":"let is_question","Fragments":["Core.Core_string.("]},{"Key":"is_question Core.Core_string.(","Fragments":["get"]},{"Key":"Core.Core_string.( get","Fragments":["stmt"]},{"Key":"get stmt","Fragments":["((length"]},{"Key":"stmt ((length","Fragments":["stmt)"]},{"Key":"((length stmt)","Fragments":["-"]},{"Key":"stmt) -","Fragments":["1))"]},{"Key":"- 1))","Fragments":["="]},{"Key":"1)) =","Fragments":["'?')"]},{"Key":" thanks","Fragments":["for"]},{"Key":"for `~f:((=)","Fragments":["c)`"]},{"Key":"`~f:((=) c)`","Fragments":["idea!"]},{"Key":" btw,","Fragments":["you"]},{"Key":"btw, you","Fragments":["may"]},{"Key":"may use","Fragments":["`String.fold`"]},{"Key":"use `String.fold`","Fragments":["instead"]},{"Key":"`String.fold` instead","Fragments":["of"]},{"Key":"of `List.fold","Fragments":["(String.to_list"]},{"Key":"`List.fold (String.to_list","Fragments":["strand)`"]},{"Key":"is an","Fragments":["attempt"]},{"Key":"an attempt","Fragments":["without"]},{"Key":"attempt without","Fragments":["using"]},{"Key":"without using","Fragments":["regexes.","regexes,"]},{"Key":"using regexes.","Fragments":["I"]},{"Key":"regexes. I","Fragments":["think"]},{"Key":"think I'd","Fragments":["use","ever"]},{"Key":"I'd use","Fragments":["the"]},{"Key":"regex one","Fragments":["in"]},{"Key":"one in","Fragments":["practice,"]},{"Key":"in practice,","Fragments":["but"]},{"Key":"practice, but","Fragments":["avoiding"]},{"Key":"but avoiding","Fragments":["them"]},{"Key":"avoiding them","Fragments":["made"]},{"Key":"them made","Fragments":["me"]},{"Key":"made me","Fragments":["write"]},{"Key":"me write","Fragments":["some","it"]},{"Key":"some more","Fragments":["recursive"]},{"Key":"more recursive","Fragments":["functions."]},{"Key":" Wouldn't","Fragments":["it"]},{"Key":"Wouldn't it","Fragments":["be"]},{"Key":"it be","Fragments":["easier"]},{"Key":"be easier","Fragments":["to"]},{"Key":"use `String.is_suffix`","Fragments":["and","for"]},{"Key":"`String.is_suffix` and","Fragments":["the","`String.exists`"]},{"Key":"the like?","Fragments":["Those"]},{"Key":"like? Those","Fragments":["are"]},{"Key":"are documented","Fragments":["at"]},{"Key":"documented at","Fragments":["[the"]},{"Key":"at [the","Fragments":["Core_kernel.Core_string"]},{"Key":"[the Core_kernel.Core_string","Fragments":["page](https://ocaml.janestreet.com/ocaml-core/111.21.00/doc/core_kernel/#Core_string)"]},{"Key":"Core_kernel.Core_string page](https://ocaml.janestreet.com/ocaml-core/111.21.00/doc/core_kernel/#Core_string)","Fragments":["and"]},{"Key":"page](https://ocaml.janestreet.com/ocaml-core/111.21.00/doc/core_kernel/#Core_string) and","Fragments":["are"]},{"Key":"and are","Fragments":["available","well"]},{"Key":"are available","Fragments":["through"]},{"Key":"available through","Fragments":["`String`"]},{"Key":"through `String`","Fragments":["due"]},{"Key":"`String` due","Fragments":["to"]},{"Key":"to `use","Fragments":["Core.Std`"]},{"Key":"`use Core.Std`","Fragments":["(which"]},{"Key":"Core.Std` (which","Fragments":["makes"]},{"Key":"(which makes","Fragments":["`String`"]},{"Key":"makes `String`","Fragments":["refer","(`Core.Core_string`)"]},{"Key":"`String` refer","Fragments":["to"]},{"Key":"refer to","Fragments":["`Core.Core_string`"]},{"Key":"to `Core.Core_string`","Fragments":["which"]},{"Key":"`Core.Core_string` which","Fragments":["in"]},{"Key":"which in","Fragments":["turn"]},{"Key":"in turn","Fragments":["includes"]},{"Key":"turn includes","Fragments":["`Core_kernel.Core_string`)."]},{"Key":"It sure","Fragments":["would."]},{"Key":"sure would.","Fragments":["When"]},{"Key":"would. When","Fragments":["I"]},{"Key":"When I","Fragments":["decided","did","read"]},{"Key":"to rewrite","Fragments":["it"]},{"Key":"rewrite it","Fragments":["without"]},{"Key":"it without","Fragments":["using"]},{"Key":"using regexes,","Fragments":["though,"]},{"Key":"regexes, though,","Fragments":["I"]},{"Key":"though, I","Fragments":["thought"]},{"Key":"I thought","Fragments":["I'd","about"]},{"Key":"thought I'd","Fragments":["also"]},{"Key":"I'd also","Fragments":["try"]},{"Key":"also try","Fragments":["to"]},{"Key":"with as","Fragments":["little"]},{"Key":"as little","Fragments":["of"]},{"Key":"little of","Fragments":["`String`"]},{"Key":"of `String`","Fragments":["as"]},{"Key":"`String` as","Fragments":["possible."]},{"Key":"That's a","Fragments":["valid"]},{"Key":"a valid","Fragments":["approach."]},{"Key":" Another","Fragments":["thing"]},{"Key":"Another thing","Fragments":["that"]},{"Key":"would clean","Fragments":["up"]},{"Key":"up this","Fragments":["code"]},{"Key":"is using","Fragments":["functions"]},{"Key":"like `List.fold_left`","Fragments":["instead"]},{"Key":"`List.fold_left` instead","Fragments":["of"]},{"Key":"of explicit","Fragments":["recursion."]},{"Key":"explicit recursion.","Fragments":["Explicit"]},{"Key":"recursion. Explicit","Fragments":["recursion"]},{"Key":"Explicit recursion","Fragments":["tends"]},{"Key":"recursion tends","Fragments":["to"]},{"Key":"tends to","Fragments":["be"]},{"Key":"be harder","Fragments":["to"]},{"Key":"and maintain","Fragments":["than"]},{"Key":"maintain than","Fragments":["higher"]},{"Key":"than higher","Fragments":["order"]},{"Key":"order functions","Fragments":["like"]},{"Key":"like `fold_left`","Fragments":["which"]},{"Key":"`fold_left` which","Fragments":["have"]},{"Key":"which have","Fragments":["descriptive"]},{"Key":"have descriptive","Fragments":["names"]},{"Key":"descriptive names","Fragments":["and"]},{"Key":"names and","Fragments":["are"]},{"Key":"are well","Fragments":["understood"]},{"Key":"well understood","Fragments":["by"]},{"Key":"understood by","Fragments":["all"]},{"Key":"by all","Fragments":["OCaml"]},{"Key":"I rewrote","Fragments":["`filter`","it"]},{"Key":"rewrote `filter`","Fragments":["in"]},{"Key":"`filter` in","Fragments":["terms"]},{"Key":"of `fold`","Fragments":["because"]},{"Key":"`fold` because","Fragments":["the"]},{"Key":"because the","Fragments":["previous"]},{"Key":"the previous","Fragments":["implementation"]},{"Key":"previous implementation","Fragments":["wasn't"]},{"Key":"implementation wasn't","Fragments":["tail-recursive."]},{"Key":"certainly an","Fragments":["improvement."]},{"Key":" You've","Fragments":["missed"]},{"Key":"You've missed","Fragments":["a"]},{"Key":"missed a","Fragments":["spot"]},{"Key":"a spot","Fragments":["though."]},{"Key":"spot though.","Fragments":[";)"]},{"Key":"though. ;)","Fragments":["`map`"]},{"Key":";) `map`","Fragments":["also"]},{"Key":"`map` also","Fragments":["isn't"]},{"Key":"also isn't","Fragments":["tail"]},{"Key":"isn't tail","Fragments":["recursive."]},{"Key":"The most","Fragments":["concise"]},{"Key":"most concise","Fragments":["solution"]},{"Key":"concise solution","Fragments":["I've"]},{"Key":"solution I've","Fragments":["seen"]},{"Key":"I've seen","Fragments":["so","for"]},{"Key":"seen so","Fragments":["far"]},{"Key":"so far","Fragments":["(except","have"]},{"Key":"far (except","Fragments":["Re2"]},{"Key":"(except Re2","Fragments":["thing,"]},{"Key":"Re2 thing,","Fragments":["which"]},{"Key":"thing, which","Fragments":["is"]},{"Key":"which is","Fragments":["probably"]},{"Key":"is probably","Fragments":["cheating"]},{"Key":"probably cheating","Fragments":[":D)"]},{"Key":"Also thanks","Fragments":["for"]},{"Key":"Not quite","Fragments":["sure"]},{"Key":"quite sure","Fragments":["why"]},{"Key":"why you","Fragments":["say"]},{"Key":"you say","Fragments":["that"]},{"Key":"say that","Fragments":["using"]},{"Key":"that using","Fragments":["the"]},{"Key":"the Std","Fragments":["module"]},{"Key":"Std module","Fragments":["seems"]},{"Key":"module seems","Fragments":["to"]},{"Key":"be discouraged.","Fragments":["Importing"]},{"Key":"discouraged. Importing","Fragments":["`Core.Std`"]},{"Key":"Importing `Core.Std`","Fragments":["is"]},{"Key":"`Core.Std` is","Fragments":["quite"]},{"Key":"quite standard","Fragments":["practice"]},{"Key":"standard practice","Fragments":["(if"]},{"Key":"practice (if","Fragments":["using"]},{"Key":"(if using","Fragments":["the"]},{"Key":" Whoops,","Fragments":["I"]},{"Key":"Whoops, I","Fragments":["meant"]},{"Key":"I meant","Fragments":["Str."]},{"Key":"meant Str.","Fragments":["Do"]},{"Key":"Str. Do","Fragments":["you"]},{"Key":"it for","Fragments":["regexps,"]},{"Key":"for regexps,","Fragments":["or"]},{"Key":"regexps, or","Fragments":["do"]},{"Key":"or do","Fragments":["you"]},{"Key":"use something","Fragments":["else?","like"]},{"Key":"something else?","Fragments":["I"]},{"Key":"else? I","Fragments":["couldn't"]},{"Key":"out how","Fragments":["to"]},{"Key":"it seems","Fragments":["to","the","to"]},{"Key":"to need","Fragments":["extra"]},{"Key":"need extra","Fragments":["build"]},{"Key":"extra build","Fragments":["flags,"]},{"Key":"build flags,","Fragments":["and"]},{"Key":"flags, and","Fragments":["when"]},{"Key":"and when","Fragments":["I"]},{"Key":"I googled","Fragments":["it"]},{"Key":"googled it","Fragments":["I"]},{"Key":"it I","Fragments":["stumbled"]},{"Key":"I stumbled","Fragments":["on"]},{"Key":"stumbled on","Fragments":["people"]},{"Key":"on people","Fragments":["recommending"]},{"Key":"people recommending","Fragments":["not"]},{"Key":"recommending not","Fragments":["to"]},{"Key":"I suspect","Fragments":["few"]},{"Key":"suspect few","Fragments":["people"]},{"Key":"few people","Fragments":["actually"]},{"Key":"people actually","Fragments":["use"]},{"Key":"actually use","Fragments":["`Str`."]},{"Key":"use `Str`.","Fragments":["Looking"]},{"Key":"`Str`. Looking","Fragments":["at"]},{"Key":"Looking at","Fragments":["https://opam.ocaml.org/packages/index-popularity.html"]},{"Key":"at https://opam.ocaml.org/packages/index-popularity.html","Fragments":["it"]},{"Key":"https://opam.ocaml.org/packages/index-popularity.html it","Fragments":["seems"]},{"Key":"seems the","Fragments":["most"]},{"Key":"most popular","Fragments":["regex"]},{"Key":"popular regex","Fragments":["library"]},{"Key":"regex library","Fragments":["is"]},{"Key":"That said,","Fragments":["much","although","since"]},{"Key":"said, much","Fragments":["of"]},{"Key":"the time","Fragments":["regular"]},{"Key":"time regular","Fragments":["expressions"]},{"Key":"be replaced","Fragments":["by","with"]},{"Key":"replaced by","Fragments":["just"]},{"Key":"by just","Fragments":["calls"]},{"Key":"just calls","Fragments":["to"]},{"Key":"to `Core.String`","Fragments":["without"]},{"Key":"`Core.String` without","Fragments":["losing"]},{"Key":"without losing","Fragments":["any"]},{"Key":"losing any","Fragments":["expressiveness"]},{"Key":"any expressiveness","Fragments":["(in"]},{"Key":"expressiveness (in","Fragments":["fact,"]},{"Key":"(in fact,","Fragments":["often"]},{"Key":"fact, often","Fragments":["gaining"]},{"Key":"often gaining","Fragments":["some,"]},{"Key":"gaining some,","Fragments":["regexes"]},{"Key":"some, regexes","Fragments":["have"]},{"Key":"regexes have","Fragments":["a"]},{"Key":"a tendency","Fragments":["to"]},{"Key":"tendency to","Fragments":["be"]},{"Key":"be hard","Fragments":["to"]},{"Key":" So,","Fragments":["this"]},{"Key":"So, this","Fragments":["one"]},{"Key":"one I","Fragments":["banged"]},{"Key":"I banged","Fragments":["my"]},{"Key":"banged my","Fragments":["head"]},{"Key":"head against","Fragments":["for"]},{"Key":"against for","Fragments":["a"]},{"Key":"a while,","Fragments":["for"]},{"Key":"while, for","Fragments":["a"]},{"Key":"* First,","Fragments":["I"]},{"Key":"First, I","Fragments":["didn't"]},{"Key":"didn't like","Fragments":["the"]},{"Key":"the interface","Fragments":["defined"]},{"Key":"interface defined","Fragments":["by"]},{"Key":"defined by","Fragments":["the"]},{"Key":"by the","Fragments":["problem,","test"]},{"Key":"the problem,","Fragments":["so"]},{"Key":"problem, so","Fragments":["I"]},{"Key":"it the","Fragments":["way"]},{"Key":"the way","Fragments":["I"]},{"Key":"way I","Fragments":["wanted"]},{"Key":"I wanted","Fragments":["it"]},{"Key":"wanted it","Fragments":["and"]},{"Key":"then implement","Fragments":["the","the"]},{"Key":"implement the","Fragments":["problem's","other","rest"]},{"Key":"the problem's","Fragments":["interface"]},{"Key":"problem's interface","Fragments":["in"]},{"Key":"interface in","Fragments":["those"]},{"Key":"in those","Fragments":["terms."]},{"Key":"* Second,","Fragments":["I"]},{"Key":"Second, I","Fragments":["really"]},{"Key":"really wanted","Fragments":["to"]},{"Key":"wanted to","Fragments":["work"]},{"Key":"work more","Fragments":["with"]},{"Key":"more with","Fragments":["my"]},{"Key":"my own","Fragments":["types,"]},{"Key":"own types,","Fragments":["which"]},{"Key":"types, which","Fragments":["few"]},{"Key":"which few","Fragments":["of"]},{"Key":"few of","Fragments":["the"]},{"Key":"the problems","Fragments":["so","with"]},{"Key":"problems so","Fragments":["far"]},{"Key":"far have","Fragments":["required."]},{"Key":"* Third,","Fragments":["swear"]},{"Key":"Third, swear","Fragments":["to"]},{"Key":"swear to","Fragments":["god,"]},{"Key":"to god,","Fragments":["I"]},{"Key":"god, I","Fragments":["mixed"]},{"Key":"I mixed","Fragments":["up"]},{"Key":"mixed up","Fragments":["'suffix'"]},{"Key":"up 'suffix'","Fragments":["and"]},{"Key":"'suffix' and","Fragments":["'prefix'"]},{"Key":"and 'prefix'","Fragments":["for"]},{"Key":"'prefix' for","Fragments":["a"]},{"Key":"a long,","Fragments":["long"]},{"Key":"long, long","Fragments":["time"]},{"Key":"time and","Fragments":["took"]},{"Key":"and took","Fragments":["way"]},{"Key":"took way","Fragments":["too"]},{"Key":"way too","Fragments":["long"]},{"Key":"too long","Fragments":["to"]},{"Key":"long to","Fragments":["figure"]},{"Key":"to figure","Fragments":["it"]},{"Key":"figure it","Fragments":["out."]},{"Key":" Once","Fragments":["I"]},{"Key":"Once I","Fragments":["fixed"]},{"Key":"I fixed","Fragments":["my"]},{"Key":"fixed my","Fragments":["idiot"]},{"Key":"my idiot","Fragments":["suffix/prefix"]},{"Key":"idiot suffix/prefix","Fragments":["issue"]},{"Key":"suffix/prefix issue","Fragments":["and"]},{"Key":"issue and","Fragments":["read"]},{"Key":"and read","Fragments":["up"]},{"Key":"read up","Fragments":["on"]},{"Key":"up on","Fragments":["OCaml's"]},{"Key":"on OCaml's","Fragments":["scanf/printf,"]},{"Key":"OCaml's scanf/printf,","Fragments":["things"]},{"Key":"scanf/printf, things","Fragments":["wrapped"]},{"Key":"things wrapped","Fragments":["up"]},{"Key":"wrapped up","Fragments":["very"]},{"Key":"up very","Fragments":["quickly."]},{"Key":"it looked","Fragments":["like"]},{"Key":"looked like","Fragments":["the"]},{"Key":"moment I","Fragments":["was"]},{"Key":"was able","Fragments":["to"]},{"Key":"get all","Fragments":["tests"]},{"Key":"all tests","Fragments":["to"]},{"Key":"tests to","Fragments":["pass.","fail..."]},{"Key":"to pass.","Fragments":["It"]},{"Key":"pass. It","Fragments":["has"]},{"Key":"It has","Fragments":["not"]},{"Key":"has not","Fragments":["been"]},{"Key":"not been","Fragments":["refactored"]},{"Key":"been refactored","Fragments":["or"]},{"Key":"refactored or","Fragments":["cleaned"]},{"Key":"or cleaned","Fragments":["whatsoever,"]},{"Key":"cleaned whatsoever,","Fragments":["and"]},{"Key":"whatsoever, and","Fragments":["I"]},{"Key":"I will","Fragments":["be","use"]},{"Key":"will be","Fragments":["doing","private."]},{"Key":"be doing","Fragments":["that"]},{"Key":"doing that","Fragments":["shortly."]},{"Key":"said, although","Fragments":["there's"]},{"Key":"although there's","Fragments":["a"]},{"Key":"of clumsy","Fragments":["thumbprints"]},{"Key":"clumsy thumbprints","Fragments":["on"]},{"Key":"thumbprints on","Fragments":["this"]},{"Key":"on this","Fragments":["one,","one."]},{"Key":"this one,","Fragments":["I"]},{"Key":"one, I","Fragments":["think"]},{"Key":"think it","Fragments":["reflects"]},{"Key":"it reflects","Fragments":["my"]},{"Key":"reflects my","Fragments":["intentions"]},{"Key":"my intentions","Fragments":["fairly"]},{"Key":"intentions fairly","Fragments":["well."]},{"Key":"would love,","Fragments":["love,"]},{"Key":"love, love,","Fragments":["love"]},{"Key":"love, love","Fragments":["tons"]},{"Key":"love tons","Fragments":["and"]},{"Key":"tons and","Fragments":["tons"]},{"Key":"and tons","Fragments":["of"]},{"Key":"tons of","Fragments":["feedback"]},{"Key":"of feedback","Fragments":["on"]},{"Key":"feedback on","Fragments":["this"]},{"Key":"Do those","Fragments":["regexs"]},{"Key":"those regexs","Fragments":["really"]},{"Key":"regexs really","Fragments":["cover"]},{"Key":"really cover","Fragments":["all"]},{"Key":"cover all","Fragments":["the"]},{"Key":"the possible","Fragments":["cases?"]},{"Key":"possible cases?","Fragments":["What"]},{"Key":"cases? What","Fragments":["about"]},{"Key":"What about","Fragments":["sentences","the"]},{"Key":"about sentences","Fragments":["that"]},{"Key":"sentences that","Fragments":["contain"]},{"Key":"that contain","Fragments":["numbers"]},{"Key":"contain numbers","Fragments":["or"]},{"Key":"numbers or","Fragments":["punctuation?"]},{"Key":" Personal","Fragments":["opinion"]},{"Key":"Personal opinion","Fragments":["here,"]},{"Key":"opinion here,","Fragments":["but"]},{"Key":"here, but","Fragments":["I"]},{"Key":"find regexs","Fragments":["hard"]},{"Key":"regexs hard","Fragments":["to"]},{"Key":"read (and","Fragments":["even"]},{"Key":"(and even","Fragments":["harder"]},{"Key":"even harder","Fragments":["to"]},{"Key":"write correctly)","Fragments":["so"]},{"Key":"correctly) so","Fragments":["I"]},{"Key":"I look","Fragments":["for"]},{"Key":"look for","Fragments":["other"]},{"Key":"for other","Fragments":["solutions"]},{"Key":"other solutions","Fragments":["first."]},{"Key":"I agree,","Fragments":["I"]},{"Key":"agree, I","Fragments":["really"]},{"Key":"really struggled","Fragments":["to"]},{"Key":"struggled to","Fragments":["pass"]},{"Key":"to pass","Fragments":["the"]},{"Key":"test cases.","Fragments":["Reordering"]},{"Key":"cases. Reordering","Fragments":["the"]},{"Key":"Reordering the","Fragments":["patter-matching"]},{"Key":"the patter-matching","Fragments":["clauses"]},{"Key":"patter-matching clauses","Fragments":["caused"]},{"Key":"clauses caused","Fragments":["some"]},{"Key":"caused some","Fragments":["tests"]},{"Key":"some tests","Fragments":["to"]},{"Key":"this in","Fragments":["Haskell"]},{"Key":"in Haskell","Fragments":["last"]},{"Key":"Haskell last","Fragments":["year"]},{"Key":"last year","Fragments":["I"]},{"Key":"year I","Fragments":["didn't"]},{"Key":"didn't use","Fragments":["any"]},{"Key":"use any","Fragments":["regex,"]},{"Key":"any regex,","Fragments":["but"]},{"Key":"regex, but","Fragments":["the"]},{"Key":"the exercise","Fragments":["has"]},{"Key":"exercise has","Fragments":["got"]},{"Key":"has got","Fragments":["a"]},{"Key":"got a","Fragments":["tad"]},{"Key":"a tad","Fragments":["more"]},{"Key":"tad more","Fragments":["complex..."]},{"Key":" Take","Fragments":["a"]},{"Key":"Take a","Fragments":["look"]},{"Key":"at some","Fragments":["of"]},{"Key":"functions defined","Fragments":["in"]},{"Key":"defined in","Fragments":["`Core.String`","the"]},{"Key":"in `Core.String`","Fragments":["and"]},{"Key":"`Core.String` and","Fragments":["`Core.Char`"]},{"Key":"and `Core.Char`","Fragments":["(e.g."]},{"Key":"`Core.Char` (e.g.","Fragments":["`String.exists`"]},{"Key":"(e.g. `String.exists`","Fragments":["and"]},{"Key":"`String.exists` and","Fragments":["Char.is_alpha)"]},{"Key":"and Char.is_alpha)","Fragments":["and"]},{"Key":"Char.is_alpha) and","Fragments":["think"]},{"Key":"and think","Fragments":["about"]},{"Key":"about strings","Fragments":["as"]},{"Key":"strings as","Fragments":["a"]},{"Key":"a sequence","Fragments":["of"]},{"Key":"sequence of","Fragments":["characters.","predicates"]},{"Key":" There","Fragments":["is"]},{"Key":"There is","Fragments":["`String.Map.change`"]},{"Key":"is `String.Map.change`","Fragments":["which"]},{"Key":"`String.Map.change` which","Fragments":["can"]},{"Key":"can change","Fragments":["existing|non"]},{"Key":"change existing|non","Fragments":["existing"]},{"Key":"existing|non existing","Fragments":["value"]},{"Key":"existing value","Fragments":["through"]},{"Key":"value through","Fragments":["one"]},{"Key":"through one","Fragments":["lookup."]},{"Key":"your approach","Fragments":["with"]},{"Key":"approach with","Fragments":["`List.find_exn","`fold`"]},{"Key":"with `List.find_exn","Fragments":["~f:decide_whether"]},{"Key":"`List.find_exn ~f:decide_whether","Fragments":["[...]`."]},{"Key":"The lack","Fragments":["of"]},{"Key":"of `String.split","Fragments":["~f`"]},{"Key":"`String.split ~f`","Fragments":["(where"]},{"Key":"~f` (where","Fragments":["`~f`"]},{"Key":"(where `~f`","Fragments":["can"]},{"Key":"`~f` can","Fragments":["decide"]},{"Key":"can decide","Fragments":["which"]},{"Key":"decide which","Fragments":["char"]},{"Key":"which char","Fragments":["is"]},{"Key":"char is","Fragments":["separator)"]},{"Key":"is separator)","Fragments":["force"]},{"Key":"separator) force","Fragments":["me"]},{"Key":"force me","Fragments":["write"]},{"Key":"it myself,","Fragments":["and"]},{"Key":"myself, and","Fragments":["it"]},{"Key":"not among","Fragments":["the"]},{"Key":"among the","Fragments":["pieces"]},{"Key":"the pieces","Fragments":["of"]},{"Key":"pieces of","Fragments":["code"]},{"Key":"code I","Fragments":["can"]},{"Key":"can proud","Fragments":["of."]},{"Key":"Your solution","Fragments":["really"]},{"Key":"solution really","Fragments":["simple,"]},{"Key":"really simple,","Fragments":["just"]},{"Key":"simple, just","Fragments":["to"]},{"Key":"to change","Fragments":["all"]},{"Key":"change all","Fragments":["not"]},{"Key":"all not","Fragments":["alphanum"]},{"Key":"not alphanum","Fragments":["chars"]},{"Key":"alphanum chars","Fragments":["to"]},{"Key":"chars to","Fragments":["spaces"]},{"Key":"to spaces","Fragments":["and"]},{"Key":"spaces and","Fragments":["split"]},{"Key":"and split","Fragments":["it"]},{"Key":"split it","Fragments":["on"]},{"Key":"it on","Fragments":["space,"]},{"Key":"on space,","Fragments":["simple"]},{"Key":"space, simple","Fragments":["and"]},{"Key":"simple and","Fragments":["effective,"]},{"Key":"and effective,","Fragments":["I"]},{"Key":"effective, I","Fragments":["like"]},{"Key":" However","Fragments":["last"]},{"Key":"However last","Fragments":["function"]},{"Key":"last function","Fragments":["namely"]},{"Key":"function namely","Fragments":["`counter`"]},{"Key":"namely `counter`","Fragments":["looks"]},{"Key":"`counter` looks","Fragments":["over"]},{"Key":"looks over","Fragments":["complicated,"]},{"Key":"over complicated,","Fragments":["try"]},{"Key":"complicated, try","Fragments":["to"]},{"Key":"to squeeze","Fragments":["it"]},{"Key":"squeeze it","Fragments":["with"]},{"Key":"with `List.fold`","Fragments":["and"]},{"Key":"`List.fold` and","Fragments":["`String.Map.change`."]},{"Key":"Good suggestion","Fragments":["for"]},{"Key":"suggestion for","Fragments":["`counter`."]},{"Key":"for `counter`.","Fragments":["I"]},{"Key":"`counter`. I","Fragments":["implemented"]},{"Key":"I implemented","Fragments":["it.","concat"]},{"Key":" `isempty`","Fragments":["may"]},{"Key":"`isempty` may","Fragments":["be"]},{"Key":"may be","Fragments":["implemented"]},{"Key":"be implemented","Fragments":["shorter"]},{"Key":"implemented shorter","Fragments":["(just"]},{"Key":"shorter (just","Fragments":["a"]},{"Key":"of taste","Fragments":["though):"]},{"Key":" (*","Fragments":["taken"]},{"Key":"(* taken","Fragments":["an"]},{"Key":"taken an","Fragments":["advantage"]},{"Key":"an advantage","Fragments":["of"]},{"Key":"advantage of","Fragments":["partial"]},{"Key":"partial application","Fragments":["*)"]},{"Key":"let isempty","Fragments":["=","s"]},{"Key":"isempty =","Fragments":["(=)"]},{"Key":"= (=)","Fragments":["\"\""]},{"Key":" or","Fragments":["the"]},{"Key":"or the","Fragments":["second"]},{"Key":"the second","Fragments":["variant,"]},{"Key":"second variant,","Fragments":["like"]},{"Key":"variant, like","Fragments":["I"]},{"Key":"isempty s","Fragments":["="]},{"Key":"= (s","Fragments":["="]},{"Key":"(s =","Fragments":["\"\")"]},{"Key":"think (but","Fragments":["this"]},{"Key":"(but this","Fragments":["is"]},{"Key":"just imho),","Fragments":["in"]},{"Key":"imho), in","Fragments":["the"]},{"Key":"of readability","Fragments":["all"]},{"Key":"readability all","Fragments":["this"]},{"Key":"all this","Fragments":["helpers"]},{"Key":"this helpers","Fragments":["should"]},{"Key":"helpers should","Fragments":["not"]},{"Key":"should not","Fragments":["be"]},{"Key":"be defined","Fragments":["in"]},{"Key":"the scope","Fragments":["of"]},{"Key":"scope of","Fragments":["`response_for`"]},{"Key":"of `response_for`","Fragments":["function."]},{"Key":"`response_for` function.","Fragments":["You"]},{"Key":"function. You","Fragments":["have"]},{"Key":"You have","Fragments":["interface"]},{"Key":"have interface","Fragments":["(`bob.mli`)"]},{"Key":"interface (`bob.mli`)","Fragments":["which"]},{"Key":"(`bob.mli`) which","Fragments":["clearly"]},{"Key":"which clearly","Fragments":["defines"]},{"Key":"clearly defines","Fragments":["external"]},{"Key":"defines external","Fragments":["functions,"]},{"Key":"external functions,","Fragments":["other"]},{"Key":"functions, other","Fragments":["function"]},{"Key":"other function","Fragments":["will"]},{"Key":"function will","Fragments":["be"]},{"Key":"And last","Fragments":["thing,"]},{"Key":"last thing,","Fragments":["firstly"]},{"Key":"thing, firstly","Fragments":["I"]},{"Key":"firstly I","Fragments":["did"]},{"Key":"did same","Fragments":["thing"]},{"Key":"same thing","Fragments":["as"]},{"Key":"thing as","Fragments":["you,"]},{"Key":"as you,","Fragments":["a"]},{"Key":"you, a","Fragments":["lot"]},{"Key":"of `if`","Fragments":["clauses"]},{"Key":"`if` clauses","Fragments":["with"]},{"Key":"clauses with","Fragments":["`isempty`"]},{"Key":"with `isempty`","Fragments":["and"]},{"Key":"`isempty` and","Fragments":["friends."]},{"Key":"and friends.","Fragments":["But"]},{"Key":"friends. But","Fragments":["then"]},{"Key":"But then","Fragments":["I"]},{"Key":"then I","Fragments":["rewrote"]},{"Key":"rewrote it","Fragments":["with","again."]},{"Key":"with `match`","Fragments":["clause"]},{"Key":"`match` clause","Fragments":["and"]},{"Key":"clause and","Fragments":["`when`"]},{"Key":"and `when`","Fragments":["guards."]},{"Key":"`when` guards.","Fragments":["Now"]},{"Key":"guards. Now","Fragments":["it"]},{"Key":"Now it","Fragments":["looks"]},{"Key":"you're pulling","Fragments":["in"]},{"Key":"in `Core.Std`","Fragments":["you"]},{"Key":"`Core.Std` you","Fragments":["may"]},{"Key":"may as","Fragments":["well"]},{"Key":"well use","Fragments":["the"]},{"Key":"the String.is_empty","Fragments":["from"]},{"Key":"String.is_empty from","Fragments":["there."]},{"Key":"I assume","Fragments":["that"]},{"Key":"assume that","Fragments":["`rfold`"]},{"Key":"that `rfold`","Fragments":["is"]},{"Key":"`rfold` is","Fragments":["similar"]},{"Key":"is similar","Fragments":["to"]},{"Key":"similar to","Fragments":["`List.fold_right`?"]},{"Key":" But","Fragments":["from"]},{"Key":"But from","Fragments":["implementation"]},{"Key":"from implementation","Fragments":["I"]},{"Key":"implementation I","Fragments":["see"]},{"Key":"see it","Fragments":["behaves"]},{"Key":"it behaves","Fragments":["like"]},{"Key":"behaves like","Fragments":["`fold_left`."]},{"Key":"In other","Fragments":["places"]},{"Key":"other places","Fragments":["I"]},{"Key":"places I","Fragments":["did"]},{"Key":"did almost","Fragments":["same"]},{"Key":"almost same","Fragments":["as"]},{"Key":"as you.","Fragments":["Then"]},{"Key":"you. Then","Fragments":["I"]},{"Key":"Then I","Fragments":["saw"]},{"Key":"I saw","Fragments":["approach"]},{"Key":"saw approach","Fragments":["with"]},{"Key":"with `fold`","Fragments":["and"]},{"Key":"`fold` and","Fragments":["rewrote"]},{"Key":"and rewrote","Fragments":["it"]},{"Key":" Fold","Fragments":["is"]},{"Key":"Fold is","Fragments":["a"]},{"Key":"a fundamental","Fragments":["operation"]},{"Key":"fundamental operation","Fragments":["on"]},{"Key":"operation on","Fragments":["lists,"]},{"Key":"on lists,","Fragments":["so"]},{"Key":"lists, so","Fragments":["each"]},{"Key":"so each","Fragments":["of"]},{"Key":"this example","Fragments":["can"]},{"Key":"example can","Fragments":["be"]},{"Key":"be rewritten","Fragments":["in"]},{"Key":"rewritten in","Fragments":["terms"]},{"Key":"of fold.","Fragments":["As"]},{"Key":"fold. As","Fragments":["an"]},{"Key":"As an","Fragments":["interesting"]},{"Key":"exercise try","Fragments":["writing"]},{"Key":"try writing","Fragments":["either"]},{"Key":"writing either","Fragments":["fold_left"]},{"Key":"either fold_left","Fragments":["or"]},{"Key":"fold_left or","Fragments":["fold_right"]},{"Key":"or fold_right","Fragments":["then"]},{"Key":"fold_right then","Fragments":["implement"]},{"Key":"other operations","Fragments":["in"]},{"Key":"operations in","Fragments":["terms"]},{"Key":"Also you","Fragments":["can"]},{"Key":"`function` in","Fragments":["ocaml"]},{"Key":"in ocaml","Fragments":["to"]},{"Key":"ocaml to","Fragments":["combine"]},{"Key":"combine constructs","Fragments":["like"]},{"Key":"constructs like","Fragments":["`let"]},{"Key":"like `let","Fragments":["name"]},{"Key":"`let name","Fragments":["a"]},{"Key":"name a","Fragments":["="]},{"Key":"match a","Fragments":["with"]},{"Key":"a with","Fragments":["...`"]},{"Key":"with ...`","Fragments":["e.g."]},{"Key":"rec lfold","Fragments":["~init:i"]},{"Key":"lfold ~init:i","Fragments":["~f:f"]},{"Key":"~init:i ~f:f","Fragments":["="]},{"Key":"~f:f =","Fragments":["function"]},{"Key":"| h","Fragments":["::"]},{"Key":"h ::","Fragments":["t"]},{"Key":"-\u003e lfold","Fragments":["~init:(f"]},{"Key":"lfold ~init:(f","Fragments":["h"]},{"Key":"~init:(f h","Fragments":["i)"]},{"Key":"h i)","Fragments":["~f:f"]},{"Key":"i) ~f:f","Fragments":["t"]},{"Key":" compiled","Fragments":["with"]},{"Key":" corebuild","Fragments":["-package"]},{"Key":"corebuild -package","Fragments":["str"]},{"Key":"-package str","Fragments":["test.native"]},{"Key":"Minor issue","Fragments":["but"]},{"Key":"issue but","Fragments":["Core's"]},{"Key":"but Core's","Fragments":["version"]},{"Key":"Core's version","Fragments":["of"]},{"Key":"of String","Fragments":["provides"]},{"Key":"String provides","Fragments":["an"]},{"Key":"provides an","Fragments":["`is_empty`"]},{"Key":"an `is_empty`","Fragments":["implementation"]},{"Key":"`is_empty` implementation","Fragments":["so"]},{"Key":"implementation so","Fragments":["no"]},{"Key":"so no","Fragments":["need"]},{"Key":"no need","Fragments":["to"]},{"Key":"write your","Fragments":["own."]},{"Key":"to know.","Fragments":["Thanks!"]},{"Key":"Only nitpick","Fragments":["I"]},{"Key":"nitpick I","Fragments":["can"]},{"Key":"can offer","Fragments":["is"]},{"Key":"offer is","Fragments":["I'd"]},{"Key":"is I'd","Fragments":["rename"]},{"Key":"I'd rename","Fragments":["fold"]},{"Key":"rename fold","Fragments":["as"]},{"Key":"fold as","Fragments":["fold_left"]},{"Key":"as fold_left","Fragments":["since"]},{"Key":"fold_left since","Fragments":["it"]},{"Key":"since it","Fragments":["seems"]},{"Key":"be working","Fragments":["from"]},{"Key":"working from","Fragments":["the"]},{"Key":"the left","Fragments":["of"]},{"Key":"left of","Fragments":["the"]},{"Key":"the list.","Fragments":["Otherwise"]},{"Key":"list. Otherwise","Fragments":["almost"]},{"Key":"Otherwise almost","Fragments":["identical"]},{"Key":"identical to","Fragments":["how"]},{"Key":"to how","Fragments":["I'd","I'd"]},{"Key":"how I'd","Fragments":["write","describe"]},{"Key":"I'd write","Fragments":["it."]},{"Key":"point, thanks.","Fragments":["I"]},{"Key":"thanks. I","Fragments":["think"]},{"Key":"I actually","Fragments":["based"]},{"Key":"actually based","Fragments":["it"]},{"Key":"based it","Fragments":["off"]},{"Key":"it off","Fragments":["yours."]},{"Key":"off yours.","Fragments":["I"]},{"Key":"yours. I","Fragments":["just"]},{"Key":"just read","Fragments":["your"]},{"Key":"read your","Fragments":["code,"]},{"Key":"code, realised","Fragments":["it"]},{"Key":"realised it","Fragments":["made"]},{"Key":"it made","Fragments":["sense"]},{"Key":"made sense","Fragments":["to"]},{"Key":"the rest","Fragments":["on"]},{"Key":"rest on","Fragments":["top"]},{"Key":"on top","Fragments":["of"]},{"Key":"top of","Fragments":["fold,"]},{"Key":"of fold,","Fragments":["and"]},{"Key":"fold, and","Fragments":["then"]},{"Key":"then rewrote","Fragments":["mine"]},{"Key":"rewrote mine","Fragments":["without"]},{"Key":"mine without","Fragments":["looking"]},{"Key":"without looking","Fragments":["again"]},{"Key":"looking again","Fragments":["haha."]},{"Key":"the more","Fragments":["intuitive"]},{"Key":"more intuitive","Fragments":["implementations"]},{"Key":"intuitive implementations","Fragments":["I've"]},{"Key":"implementations I've","Fragments":["seen"]},{"Key":"seen for","Fragments":["`is_shouting`."]},{"Key":"for `is_shouting`.","Fragments":["Comes"]},{"Key":"`is_shouting`. Comes","Fragments":["very"]},{"Key":"Comes very","Fragments":["close"]},{"Key":"very close","Fragments":["to"]},{"Key":"I'd describe","Fragments":["the"]},{"Key":"describe the","Fragments":["process","logic"]},{"Key":"the process","Fragments":["to"]},{"Key":"process to","Fragments":["a"]},{"Key":"While this","Fragments":["works"]},{"Key":"this works","Fragments":["and"]},{"Key":"works and","Fragments":["is"]},{"Key":"and is","Fragments":["already"]},{"Key":"already quite","Fragments":["readable,"]},{"Key":"quite readable,","Fragments":["you"]},{"Key":"readable, you","Fragments":["might"]},{"Key":"you might","Fragments":["consider","be"]},{"Key":"might consider","Fragments":["trying"]},{"Key":"consider trying","Fragments":["to"]},{"Key":"the repetitive","Fragments":["`t`s."]},{"Key":"repetitive `t`s.","Fragments":["Conceptually"]},{"Key":"`t`s. Conceptually","Fragments":["there's"]},{"Key":"Conceptually there's","Fragments":["an"]},{"Key":"there's an","Fragments":["ordered"]},{"Key":"an ordered","Fragments":["sequence"]},{"Key":"ordered sequence","Fragments":["of"]},{"Key":"of predicates","Fragments":["and"]},{"Key":"predicates and","Fragments":["for"]},{"Key":"and for","Fragments":["each"]},{"Key":"for each","Fragments":["an"]},{"Key":"each an","Fragments":["associated"]},{"Key":"an associated","Fragments":["response."]},{"Key":"associated response.","Fragments":["What's"]},{"Key":"response. What's","Fragments":["the"]},{"Key":"first predicate","Fragments":["satisfied"]},{"Key":"predicate satisfied","Fragments":["by"]},{"Key":"satisfied by","Fragments":["`t`?"]},{"Key":"by `t`?","Fragments":["What's"]},{"Key":"`t`? What's","Fragments":["the"]},{"Key":"the response","Fragments":["associated"]},{"Key":"response associated","Fragments":["with"]},{"Key":"associated with","Fragments":["that"]},{"Key":"with that","Fragments":["predicate?"]},{"Key":"One really","Fragments":["important"]},{"Key":"really important","Fragments":["thing"]},{"Key":"important thing","Fragments":["missed"]},{"Key":"thing missed","Fragments":["in"]},{"Key":"missed in","Fragments":["tests"]},{"Key":"in tests","Fragments":["is"]},{"Key":"tests is","Fragments":["that"]},{"Key":"that strings","Fragments":["are"]},{"Key":"strings are","Fragments":["mutable,"]},{"Key":"are mutable,","Fragments":["and"]},{"Key":"mutable, and","Fragments":["I"]},{"Key":"can mutate","Fragments":["original"]},{"Key":"mutate original","Fragments":["list"]},{"Key":"original list","Fragments":["of"]},{"Key":"of strings.","Fragments":["This"]},{"Key":"strings. This","Fragments":["must"]},{"Key":"This must","Fragments":["be"]},{"Key":"must be","Fragments":["checked"]},{"Key":"be checked","Fragments":["as"]},{"Key":"checked as","Fragments":["well."]},{"Key":"nested `if`/`else`,","Fragments":["you"]},{"Key":"`if`/`else`, you","Fragments":["could"]},{"Key":"consider using","Fragments":["pattern"]},{"Key":"using pattern","Fragments":["matching","matching"]},{"Key":"matching with","Fragments":["guard"]},{"Key":"with guard","Fragments":["clauses,"]},{"Key":"guard clauses,","Fragments":["like"]},{"Key":"clauses, like","Fragments":["so:"]},{"Key":" match","Fragments":["input"]},{"Key":"match input","Fragments":["with"]},{"Key":"-\u003e (*","Fragments":["Silent","Shouting","Question","Generic"]},{"Key":"(* Silent","Fragments":["response"]},{"Key":"Silent response","Fragments":["*)"]},{"Key":"| input","Fragments":["when","when"]},{"Key":"input when","Fragments":["is_shouting","is_question"]},{"Key":"when is_shouting","Fragments":["input"]},{"Key":"is_shouting input","Fragments":["-\u003e"]},{"Key":"input -\u003e","Fragments":["(*","(*"]},{"Key":"(* Shouting","Fragments":["response"]},{"Key":"Shouting response","Fragments":["*)"]},{"Key":"when is_question","Fragments":["input"]},{"Key":"is_question input","Fragments":["-\u003e"]},{"Key":"(* Question","Fragments":["response"]},{"Key":"Question response","Fragments":["*)"]},{"Key":"(* Generic","Fragments":["response"]},{"Key":"Generic response","Fragments":["*)"]},{"Key":" Additionally,","Fragments":["`String.trim`"]},{"Key":"Additionally, `String.trim`","Fragments":["may"]},{"Key":"`String.trim` may","Fragments":["help"]},{"Key":"help avoid","Fragments":["unnecessary"]},{"Key":"avoid unnecessary","Fragments":["recursion."]},{"Key":"matching to","Fragments":["construct"]},{"Key":"to construct","Fragments":["the"]},{"Key":"construct the","Fragments":["`response_for`"]},{"Key":"the `response_for`","Fragments":["for"]},{"Key":"`response_for` for","Fragments":["a"]},{"Key":"a while.","Fragments":["After"]},{"Key":"while. After","Fragments":["careful"]},{"Key":"After careful","Fragments":["consideration,"]},{"Key":"careful consideration,","Fragments":["I"]},{"Key":"consideration, I","Fragments":["decided"]},{"Key":"use `if...else`","Fragments":["control"]},{"Key":"`if...else` control","Fragments":["flow"]},{"Key":"control flow","Fragments":["instead"]},{"Key":"flow instead","Fragments":["of"]},{"Key":"matching because","Fragments":["`input`"]},{"Key":"because `input`","Fragments":["is"]},{"Key":"`input` is","Fragments":["not"]},{"Key":"not easy","Fragments":["to"]},{"Key":" At","Fragments":["first,"]},{"Key":"At first,","Fragments":["I"]},{"Key":"first, I","Fragments":["was"]},{"Key":"was stuck","Fragments":["by"]},{"Key":"stuck by","Fragments":["the"]},{"Key":"test case","Fragments":["`:)"]},{"Key":"case `:)","Fragments":["?`."]},{"Key":"`:) ?`.","Fragments":["There's"]},{"Key":"?`. There's","Fragments":["not"]},{"Key":"There's not","Fragments":["any"]},{"Key":"not any","Fragments":["alpha"]},{"Key":"any alpha","Fragments":["char","char."]},{"Key":"alpha char","Fragments":["in"]},{"Key":"char in","Fragments":["it."]},{"Key":"it. I","Fragments":["have"]},{"Key":"have tried","Fragments":["to"]},{"Key":"a built-in","Fragments":["method"]},{"Key":"built-in method","Fragments":["to"]},{"Key":"method to","Fragments":["tell"]},{"Key":"tell if","Fragments":["a"]},{"Key":"string does","Fragments":["not"]},{"Key":"does not","Fragments":["contain"]},{"Key":"not contain","Fragments":["any"]},{"Key":"contain any","Fragments":["alpha"]},{"Key":"alpha char.","Fragments":["Finally"]},{"Key":"char. Finally","Fragments":["I"]},{"Key":"Finally I","Fragments":["wrote"]},{"Key":"I wrote","Fragments":["this"]},{"Key":"wrote this","Fragments":["function"]},{"Key":"function `is_contain_alpha`","Fragments":["myself."]},{"Key":"`is_contain_alpha` myself.","Fragments":["I"]},{"Key":"myself. I","Fragments":["used"]},{"Key":"used a","Fragments":["auxiliary"]},{"Key":"a auxiliary","Fragments":["function"]},{"Key":"auxiliary function","Fragments":["`aux`"]},{"Key":"function `aux`","Fragments":["to"]},{"Key":"`aux` to","Fragments":["implement"]},{"Key":"implement this","Fragments":["function"]},{"Key":"function because","Fragments":["I"]},{"Key":"couldn't find","Fragments":["a"]},{"Key":"a convenient","Fragments":["way"]},{"Key":"convenient way","Fragments":["to"]},{"Key":"to accomplish","Fragments":["(Such"]},{"Key":"accomplish (Such","Fragments":["as"]},{"Key":"(Such as","Fragments":["`map`"]},{"Key":"as `map`","Fragments":["and"]},{"Key":"I use","Fragments":["[Dash](https://kapeli.com/dash)"]},{"Key":"use [Dash](https://kapeli.com/dash)","Fragments":["to"]},{"Key":"[Dash](https://kapeli.com/dash) to","Fragments":["help"]},{"Key":"help me","Fragments":["find"]},{"Key":"me find","Fragments":["OCaml's"]},{"Key":"find OCaml's","Fragments":["buit-in"]},{"Key":"OCaml's buit-in","Fragments":["method."]},{"Key":"buit-in method.","Fragments":["When"]},{"Key":"method. When","Fragments":["I"]},{"Key":"I read","Fragments":["other's"]},{"Key":"read other's","Fragments":["solution,"]},{"Key":"other's solution,","Fragments":["I"]},{"Key":"solution, I","Fragments":["found"]},{"Key":"found Core's","Fragments":["method"]},{"Key":"Core's method","Fragments":["`String.is_suffix`"]},{"Key":"method `String.is_suffix`","Fragments":["can"]},{"Key":"`String.is_suffix` can","Fragments":["replace"]},{"Key":"can replace","Fragments":["my"]},{"Key":"replace my","Fragments":["function"]},{"Key":"my function","Fragments":["`last_char`."]},{"Key":"The unit","Fragments":["test"]},{"Key":"unit test","Fragments":["of"]},{"Key":"test of","Fragments":["`concat`"]},{"Key":"of `concat`","Fragments":["spent"]},{"Key":"`concat` spent","Fragments":["a"]},{"Key":"spent a","Fragments":["lot"]},{"Key":" To","Fragments":["understand","be"]},{"Key":"To understand","Fragments":["why"]},{"Key":"why your","Fragments":["`concat`"]},{"Key":"your `concat`","Fragments":["implementation"]},{"Key":"`concat` implementation","Fragments":["is"]},{"Key":"is slow,","Fragments":["consider"]},{"Key":"slow, consider","Fragments":["what"]},{"Key":"consider what","Fragments":["`append`"]},{"Key":"what `append`","Fragments":["does"]},{"Key":"`append` does","Fragments":["with"]},{"Key":"does with","Fragments":["each"]},{"Key":"with each","Fragments":["of"]},{"Key":"of its","Fragments":["inputs."]},{"Key":"would go","Fragments":["with"]},{"Key":"with `List.map`","Fragments":["instead"]},{"Key":"`List.map` instead","Fragments":["of"]},{"Key":"of `\u003e\u003e|`","Fragments":["in"]},{"Key":"`\u003e\u003e|` in","Fragments":["this"]},{"Key":"this case.","Fragments":["`List.map`"]},{"Key":"case. `List.map`","Fragments":["is"]},{"Key":"`List.map` is","Fragments":["easy"]},{"Key":"is easy","Fragments":["to"]},{"Key":"understand to","Fragments":["a"]},{"Key":"a random","Fragments":["reader"]},{"Key":"random reader","Fragments":["while"]},{"Key":"reader while","Fragments":["`\u003e\u003e|`"]},{"Key":"while `\u003e\u003e|`","Fragments":["requires"]},{"Key":"`\u003e\u003e|` requires","Fragments":["looking"]},{"Key":"requires looking","Fragments":["up."]},{"Key":" No","Fragments":["more"]},{"Key":"No more","Fragments":["complaints."]},{"Key":"more complaints.","Fragments":[":)"]},{"Key":" Btw,","Fragments":["this"]},{"Key":"Btw, this","Fragments":["is"]},{"Key":"is currently","Fragments":["the"]},{"Key":"currently the","Fragments":["last"]},{"Key":"last exercise","Fragments":["in"]},{"Key":"exercise in","Fragments":["the"]},{"Key":"the track","Fragments":["but"]},{"Key":"track but","Fragments":["there's"]},{"Key":"but there's","Fragments":["one"]},{"Key":"there's one","Fragments":["more"]},{"Key":"one more","Fragments":["already"]},{"Key":"more already","Fragments":["in"]},{"Key":"the pipeline","Fragments":["which"]},{"Key":"pipeline which","Fragments":["probably"]},{"Key":"which probably","Fragments":["will"]},{"Key":"probably will","Fragments":["show"]},{"Key":"will show","Fragments":["up"]},{"Key":"show up","Fragments":["in"]},{"Key":"the next","Fragments":["few"]},{"Key":"next few","Fragments":["days."]},{"Key":"have *no*","Fragments":["idea"]},{"Key":"*no* idea","Fragments":["what"]},{"Key":"what nice","Fragments":["OCaml"]},{"Key":"nice OCaml","Fragments":["code"]},{"Key":"OCaml code","Fragments":["looks"]},{"Key":"so please","Fragments":["do"]},{"Key":"please do","Fragments":["advise"]},{"Key":"do advise","Fragments":["on"]},{"Key":"advise on","Fragments":["style!"]},{"Key":"This looks","Fragments":["pretty"]},{"Key":"looks pretty","Fragments":["good."]},{"Key":"I'd just","Fragments":["use"]},{"Key":"`String.is_suffix` for","Fragments":["`is_question`."]},{"Key":"like `String.for_all","Fragments":["~f:Char.is_whitespace`"]},{"Key":"`String.for_all ~f:Char.is_whitespace`","Fragments":["for"]},{"Key":"~f:Char.is_whitespace` for","Fragments":["`is_silence`,"]},{"Key":"for `is_silence`,","Fragments":["though"]},{"Key":"`is_silence`, though","Fragments":["I'm"]},{"Key":"though I'm","Fragments":["not"]},{"Key":"if it's","Fragments":["that"]},{"Key":"it's that","Fragments":["much"]},{"Key":"that much","Fragments":["of"]},{"Key":"of an","Fragments":["improvement."]},{"Key":"was looking","Fragments":["at"]},{"Key":"looking at","Fragments":["the"]},{"Key":"the wrong","Fragments":["doc"]},{"Key":"wrong doc","Fragments":["page"]},{"Key":"doc page","Fragments":["for"]},{"Key":"page for","Fragments":["the"]},{"Key":"String module!","Fragments":["`String.is_suffix`"]},{"Key":"module! `String.is_suffix`","Fragments":["improves"]},{"Key":"`String.is_suffix` improves","Fragments":["matters"]},{"Key":"improves matters","Fragments":["a"]},{"Key":"matters a","Fragments":["lot."]},{"Key":" I've","Fragments":["used","been","tested","used"]},{"Key":"I've used","Fragments":["your","pretty"]},{"Key":"used your","Fragments":["suggested"]},{"Key":"your suggested","Fragments":["amendment"]},{"Key":"suggested amendment","Fragments":["for"]},{"Key":"amendment for","Fragments":["`is_silence`"]},{"Key":"for `is_silence`","Fragments":["just"]},{"Key":"`is_silence` just","Fragments":["to"]},{"Key":"try out","Fragments":["more"]},{"Key":"out more","Fragments":["OCaml"]},{"Key":"more OCaml","Fragments":["constructions."]},{"Key":"OCaml constructions.","Fragments":["What"]},{"Key":"constructions. What","Fragments":["is"]},{"Key":"What is","Fragments":["the"]},{"Key":"the `~f:`","Fragments":["part?"]},{"Key":"The ~f","Fragments":["is"]},{"Key":"~f is","Fragments":["a"]},{"Key":"a label,","Fragments":["basically"]},{"Key":"label, basically","Fragments":["a"]},{"Key":"basically a","Fragments":["keyword"]},{"Key":"a keyword","Fragments":["argument."]},{"Key":"keyword argument.","Fragments":["See"]},{"Key":"argument. See","Fragments":["http://ocaml.org/learn/tutorials/labels.html#Labelledarguments"]},{"Key":" Glad","Fragments":["you"]},{"Key":"Glad you","Fragments":["got"]},{"Key":"got here","Fragments":["first"]},{"Key":"here first","Fragments":["and"]},{"Key":"first and","Fragments":["found"]},{"Key":"and found","Fragments":["the"]},{"Key":"problems with","Fragments":["this"]},{"Key":"with this","Fragments":["exercise."]},{"Key":"My solution","Fragments":["was"]},{"Key":"solution was","Fragments":["slightly"]},{"Key":"was slightly","Fragments":["different."]},{"Key":"noticed the","Fragments":["`Int.Map.add_multi`"]},{"Key":"the `Int.Map.add_multi`","Fragments":["function"]},{"Key":"`Int.Map.add_multi` function","Fragments":["that"]},{"Key":"makes a","Fragments":["\"multi"]},{"Key":"a \"multi","Fragments":["map\";"]},{"Key":"\"multi map\";","Fragments":["a"]},{"Key":"map\"; a","Fragments":["map"]},{"Key":"a map","Fragments":["from"]},{"Key":"map from","Fragments":["key"]},{"Key":"from key","Fragments":["to"]},{"Key":"key to","Fragments":["a"]},{"Key":"The pattern","Fragments":["match"]},{"Key":"match in","Fragments":["grade"]},{"Key":"in grade","Fragments":["can"]},{"Key":"grade can","Fragments":["be"]},{"Key":"replaced with","Fragments":["`Option.value`"]},{"Key":"with `Option.value`","Fragments":["and"]},{"Key":"`Option.value` and","Fragments":["a"]},{"Key":"Thanks! I","Fragments":["found"]},{"Key":"found `add_multi`","Fragments":["a"]},{"Key":"`add_multi` a","Fragments":["little"]},{"Key":"little bit","Fragments":["later,"]},{"Key":"bit later,","Fragments":["as"]},{"Key":"later, as","Fragments":["well"]},{"Key":"well as","Fragments":["the","general"]},{"Key":"the various","Fragments":["Option"]},{"Key":"various Option","Fragments":["sugar"]},{"Key":"Option sugar","Fragments":["that"]},{"Key":"sugar that","Fragments":["Core"]},{"Key":"that Core","Fragments":["provides."]},{"Key":"I've been","Fragments":["trying"]},{"Key":"been trying","Fragments":["not"]},{"Key":"trying not","Fragments":["to"]},{"Key":"to lean","Fragments":["too"]},{"Key":"lean too","Fragments":["heavily"]},{"Key":"too heavily","Fragments":["on"]},{"Key":"heavily on","Fragments":["Core"]},{"Key":"on Core","Fragments":["for"]},{"Key":"for these","Fragments":["exercises,"]},{"Key":"these exercises,","Fragments":["partly"]},{"Key":"exercises, partly","Fragments":["because"]},{"Key":"partly because","Fragments":["it"]},{"Key":"doesn't work","Fragments":["with"]},{"Key":"work with","Fragments":["js_of_ocaml."]},{"Key":"with js_of_ocaml.","Fragments":["That"]},{"Key":"js_of_ocaml. That","Fragments":["said,"]},{"Key":"said, since","Fragments":["I"]},{"Key":"used Core's","Fragments":["Maps"]},{"Key":"Core's Maps","Fragments":["here"]},{"Key":"Maps here","Fragments":["(and"]},{"Key":"here (and","Fragments":["they"]},{"Key":"(and they","Fragments":["are"]},{"Key":"are fantastic),","Fragments":["I"]},{"Key":"fantastic), I","Fragments":["might"]},{"Key":"I might","Fragments":["as"]},{"Key":"might as","Fragments":["well"]},{"Key":"well have","Fragments":["used"]},{"Key":" Core's","Fragments":["documentation"]},{"Key":"documentation could","Fragments":["stand"]},{"Key":"could stand","Fragments":["to"]},{"Key":"stand to","Fragments":["be"]},{"Key":"a _lot_","Fragments":["better."]},{"Key":"_lot_ better.","Fragments":["As"]},{"Key":"better. As","Fragments":["it"]},{"Key":"As it","Fragments":["is,"]},{"Key":"it is,","Fragments":["the"]},{"Key":"is, the","Fragments":["best"]},{"Key":"best doc","Fragments":["available"]},{"Key":"doc available","Fragments":["for"]},{"Key":"available for","Fragments":["it"]},{"Key":"is Real","Fragments":["World"]},{"Key":"World OCaml,","Fragments":["and"]},{"Key":"that only","Fragments":["covers"]},{"Key":"only covers","Fragments":["a"]},{"Key":"covers a","Fragments":["slice"]},{"Key":"a slice","Fragments":["of"]},{"Key":"slice of","Fragments":["the"]},{"Key":"the available","Fragments":["functionality."]},{"Key":"available functionality.","Fragments":["For"]},{"Key":"functionality. For","Fragments":["instance,"]},{"Key":"instance, the","Fragments":["chapter"]},{"Key":"the chapter","Fragments":["on"]},{"Key":"chapter on","Fragments":["maps"]},{"Key":"on maps","Fragments":["doesn't"]},{"Key":"maps doesn't","Fragments":["cover"]},{"Key":"doesn't cover","Fragments":["`add_multi`."]},{"Key":"Yeah, the","Fragments":["OCaml"]},{"Key":"OCaml doc","Fragments":["is"]},{"Key":"doc is","Fragments":["worse"]},{"Key":"is worse","Fragments":["even"]},{"Key":"worse even","Fragments":["than"]},{"Key":"even than","Fragments":["the"]},{"Key":"than the","Fragments":["Scala"]},{"Key":"the Scala","Fragments":["doc;"]},{"Key":"Scala doc;","Fragments":["and"]},{"Key":"doc; and","Fragments":["that's"]},{"Key":"that's something","Fragments":["I"]},{"Key":"something I","Fragments":["didn't"]},{"Key":"didn't think","Fragments":["I'd"]},{"Key":"I'd ever","Fragments":["say."]},{"Key":"ever say.","Fragments":["These"]},{"Key":"say. These","Fragments":["exercises"]},{"Key":"These exercises","Fragments":["have"]},{"Key":"exercises have","Fragments":["provided"]},{"Key":"have provided","Fragments":["a"]},{"Key":"provided a","Fragments":["good"]},{"Key":"good reason","Fragments":["for"]},{"Key":"reason for","Fragments":["me"]},{"Key":"to comb","Fragments":["through"]},{"Key":"comb through","Fragments":["the"]},{"Key":"library and","Fragments":["its"]},{"Key":"and its","Fragments":["documentation"]},{"Key":"its documentation","Fragments":["and"]},{"Key":"documentation and","Fragments":["that's"]},{"Key":"that's been","Fragments":["very"]},{"Key":"been very","Fragments":["useful"]},{"Key":"very useful","Fragments":["for"]},{"Key":" Does","Fragments":["the"]},{"Key":"Does the","Fragments":["test"]},{"Key":"suite work","Fragments":["for"]},{"Key":"I've tested","Fragments":["it"]},{"Key":"tested it","Fragments":["myself"]},{"Key":"it myself","Fragments":["and"]},{"Key":"myself and","Fragments":["the"]},{"Key":"tests do","Fragments":["pass..."]},{"Key":"That's odd,","Fragments":["when"]},{"Key":"odd, when","Fragments":["I"]},{"Key":"I developed","Fragments":["these"]},{"Key":"developed these","Fragments":["tests"]},{"Key":"these tests","Fragments":["non-tail-recursive"]},{"Key":"tests non-tail-recursive","Fragments":["functio"]},{"Key":"non-tail-recursive functio","Fragments":["ns"]},{"Key":"functio ns","Fragments":["seemed"]},{"Key":"ns seemed","Fragments":["to"]},{"Key":"seemed to","Fragments":["trigger"]},{"Key":"trigger stack","Fragments":["overflows"]},{"Key":"stack overflows","Fragments":["and"]},{"Key":"and left","Fragments":["folding"]},{"Key":"left folding","Fragments":["concat"]},{"Key":"folding concat","Fragments":["seems"]},{"Key":"concat seems","Fragments":["to"]},{"Key":"take like","Fragments":["forever."]},{"Key":"like forever.","Fragments":["Of"]},{"Key":"forever. Of","Fragments":["course"]},{"Key":"Of course","Fragments":["the"]},{"Key":"course the","Fragments":["compiler"]},{"Key":"the compiler","Fragments":["might"]},{"Key":"compiler might","Fragments":["have"]},{"Key":"might have","Fragments":["been"]},{"Key":"been clever","Fragments":["and"]},{"Key":"clever and","Fragments":["optimise"]},{"Key":"and optimise","Fragments":["stuff,"]},{"Key":"optimise stuff,","Fragments":["but"]},{"Key":"stuff, but","Fragments":["OCaml"]},{"Key":"but OCaml","Fragments":["isn't"]},{"Key":"OCaml isn't","Fragments":["known"]},{"Key":"isn't known","Fragments":["for"]},{"Key":"known for","Fragments":["that."]},{"Key":"To be","Fragments":["honest"]},{"Key":"be honest","Fragments":["I'm"]},{"Key":"honest I'm","Fragments":["struggling"]},{"Key":"I'm struggling","Fragments":["to"]},{"Key":"struggling to","Fragments":["tell"]},{"Key":"tell which","Fragments":["are"]},{"Key":"are tail","Fragments":["recursive"]},{"Key":"recursive and","Fragments":["which"]},{"Key":"and which","Fragments":["aren't"]},{"Key":"which aren't","Fragments":["ATM"]},{"Key":"aren't ATM","Fragments":["as"]},{"Key":"ATM as","Fragments":["I'm"]},{"Key":"as I'm","Fragments":["finding"]},{"Key":"I'm finding","Fragments":["them"]},{"Key":"finding them","Fragments":["pretty"]},{"Key":"them pretty","Fragments":["difficult"]},{"Key":"pretty difficult","Fragments":["to"]},{"Key":"read in","Fragments":["their"]},{"Key":"in their","Fragments":["current"]},{"Key":"their current","Fragments":["format."]},{"Key":"current format.","Fragments":["You"]},{"Key":"format. You","Fragments":["could"]},{"Key":"could maybe","Fragments":["consider"]},{"Key":"maybe consider","Fragments":["breaking"]},{"Key":"consider breaking","Fragments":["them"]},{"Key":"breaking them","Fragments":["onto"]},{"Key":"them onto","Fragments":["multiple"]},{"Key":"onto multiple","Fragments":["lines"]},{"Key":"multiple lines","Fragments":["and"]},{"Key":"lines and","Fragments":["using"]},{"Key":"and using","Fragments":["indentation"]},{"Key":"using indentation","Fragments":["to"]},{"Key":"indentation to","Fragments":["make"]},{"Key":"make them","Fragments":["a"]},{"Key":"them a","Fragments":["bit"]},{"Key":"more readable,","Fragments":["@barney"]},{"Key":"readable, @barney","Fragments":[":-)"]},{"Key":" What","Fragments":["about"]},{"Key":"the input","Fragments":["\"Is","or"]},{"Key":"input \"Is","Fragments":["this"]},{"Key":"\"Is this","Fragments":["question"]},{"Key":"this question","Fragments":["followed"]},{"Key":"question followed","Fragments":["by"]},{"Key":"followed by","Fragments":["whitespace?"]},{"Key":"by whitespace?","Fragments":["\""]},{"Key":"that, very","Fragments":["nice."]},{"Key":" Isn't","Fragments":["there"]},{"Key":"Isn't there","Fragments":["a"]},{"Key":"more specific","Fragments":["test"]},{"Key":"specific test","Fragments":["than"]},{"Key":"test than","Fragments":["`String.length"]},{"Key":"than `String.length","Fragments":["s"]},{"Key":"`String.length s","Fragments":["\u003e"]},{"Key":"s \u003e","Fragments":["0`?"]},{"Key":"don't think","Fragments":["you"]},{"Key":"the double","Fragments":["semicolons"]},{"Key":"double semicolons","Fragments":["after"]},{"Key":"semicolons after","Fragments":["the"]},{"Key":"after the","Fragments":["definitions"]},{"Key":"the definitions","Fragments":["in"]},{"Key":"definitions in","Fragments":["this"]},{"Key":"Very clean","Fragments":["and"]},{"Key":"and simple.","Fragments":["I"]},{"Key":"simple. I","Fragments":["like"]},{"Key":"you found","Fragments":["a"]},{"Key":"found a","Fragments":["way"]},{"Key":"to describe","Fragments":["the"]},{"Key":"of short-circuiting","Fragments":["`\u0026\u0026`"]},{"Key":"short-circuiting `\u0026\u0026`","Fragments":["and"]},{"Key":"`\u0026\u0026` and","Fragments":["`||`."]},{"Key":"considered moving","Fragments":["`is_div_by`"]},{"Key":"moving `is_div_by`","Fragments":["inside"]},{"Key":"`is_div_by` inside","Fragments":["`leap_year`"]},{"Key":"inside `leap_year`","Fragments":["as"]},{"Key":"`leap_year` as","Fragments":["a"]},{"Key":"a nested","Fragments":["let"]},{"Key":"nested let","Fragments":["expression?"]},{"Key":"let expression?","Fragments":["After"]},{"Key":"expression? After","Fragments":["that"]},{"Key":"After that","Fragments":["it's"]},{"Key":"it's possible","Fragments":["to"]},{"Key":"reduce how","Fragments":["often"]},{"Key":"how often","Fragments":["`y`"]},{"Key":"often `y`","Fragments":["is"]},{"Key":"`y` is","Fragments":["used."]},{"Key":"used pretty","Fragments":["straightforward"]},{"Key":"pretty straightforward","Fragments":["tail-recursive"]},{"Key":"straightforward tail-recursive","Fragments":["implementations,"]},{"Key":"tail-recursive implementations,","Fragments":["most"]},{"Key":"implementations, most","Fragments":["of"]},{"Key":"of which","Fragments":["require"]},{"Key":"which require","Fragments":["reversal"]},{"Key":"require reversal","Fragments":["of"]},{"Key":"reversal of","Fragments":["either"]},{"Key":"of either","Fragments":["the"]},{"Key":"either the","Fragments":["input"]},{"Key":"input or","Fragments":["output."]},{"Key":"or output.","Fragments":["As"]},{"Key":"output. As","Fragments":["well"]},{"Key":"As well","Fragments":["as"]},{"Key":"as general","Fragments":["style"]},{"Key":"general style","Fragments":["advice,"]},{"Key":"style advice,","Fragments":["I'm"]},{"Key":"advice, I'm","Fragments":["interested"]},{"Key":"I'm interested","Fragments":["in"]},{"Key":"interested in","Fragments":["alternative"]},{"Key":"in alternative","Fragments":["approaches"]},{"Key":"alternative approaches","Fragments":["with"]},{"Key":"approaches with","Fragments":["equivalent"]},{"Key":"with equivalent","Fragments":["or"]},{"Key":"equivalent or","Fragments":["better"]},{"Key":"or better","Fragments":["performance."]},{"Key":" Hi!","Fragments":["@magdalena."]},{"Key":"I modified","Fragments":["my"]},{"Key":"modified my","Fragments":["source"]},{"Key":"my source","Fragments":["like"]},{"Key":"source like","Fragments":["this."]},{"Key":"like this.","Fragments":["Remove"]},{"Key":"this. Remove","Fragments":["is_without"]},{"Key":"Remove is_without","Fragments":["function,"]},{"Key":"is_without function,","Fragments":["if"]},{"Key":"function, if","Fragments":["else"]},{"Key":"You told","Fragments":["about"]},{"Key":"told about","Fragments":["Core,"]},{"Key":"about Core,","Fragments":["Batteries."]},{"Key":"Core, Batteries.","Fragments":["I"]},{"Key":"will use","Fragments":["that"]},{"Key":"use that","Fragments":["next"]},{"Key":"that next","Fragments":["program."]},{"Key":"hope you","Fragments":["tell"]},{"Key":"you tell","Fragments":["me"]},{"Key":"tell me","Fragments":["more"]},{"Key":"me more","Fragments":["adivise."]},{"Key":"more adivise.","Fragments":["Have"]},{"Key":"adivise. Have","Fragments":["a"]},{"Key":"It seems","Fragments":["like"]},{"Key":"to reuse","Fragments":["`append`"]},{"Key":"reuse `append`","Fragments":["in"]},{"Key":"`append` in","Fragments":["`concat`"]},{"Key":"in `concat`","Fragments":["but"]},{"Key":"`concat` but","Fragments":["doing"]},{"Key":"but doing","Fragments":["so"]},{"Key":"doing so","Fragments":["breaks"]},{"Key":"so breaks","Fragments":["the"]},{"Key":"breaks the","Fragments":["tail"]},{"Key":"the tail","Fragments":["recursion.","recursion"]},{"Key":"tail recursion.","Fragments":["Am"]},{"Key":"recursion. Am","Fragments":["I"]},{"Key":"define `rev_append`,","Fragments":["you"]},{"Key":"`rev_append`, you","Fragments":["can"]},{"Key":"can define","Fragments":["both"]},{"Key":"define both","Fragments":["`append`"]},{"Key":"both `append`","Fragments":["and"]},{"Key":"`append` and","Fragments":["`concat`"]},{"Key":"and `concat`","Fragments":["in"]},{"Key":"`concat` in","Fragments":["its"]},{"Key":"in its","Fragments":["terms."]},{"Key":" Submitted","Fragments":["this"]},{"Key":"Submitted this","Fragments":["for"]},{"Key":"this for","Fragments":["now"]},{"Key":"for now","Fragments":["despite"]},{"Key":"now despite","Fragments":["the"]},{"Key":"despite the","Fragments":["fact"]},{"Key":"that running","Fragments":["the"]},{"Key":"running the","Fragments":["tests"]},{"Key":"tests just","Fragments":["hangs..."]},{"Key":"just hangs...","Fragments":["I"]},{"Key":"hangs... I","Fragments":["guess"]},{"Key":"guess there's","Fragments":["some"]},{"Key":"there's some","Fragments":["infinite"]},{"Key":"some infinite","Fragments":["recursion"]},{"Key":"infinite recursion","Fragments":["going"]},{"Key":"recursion going","Fragments":["on"]},{"Key":"I'm pretty","Fragments":["sure"]},{"Key":"pretty sure","Fragments":["it's"]},{"Key":"sure it's","Fragments":["not"]},{"Key":"it's not","Fragments":["infinite"]},{"Key":"not infinite","Fragments":["recursion,"]},{"Key":"infinite recursion,","Fragments":["merely"]},{"Key":"recursion, merely","Fragments":["a"]},{"Key":"merely a","Fragments":["very"]},{"Key":"very inefficient","Fragments":["`concat`."]},{"Key":"You also","Fragments":["have"]},{"Key":"also have","Fragments":["some"]},{"Key":"some tail-recursion","Fragments":["issues,"]},{"Key":"tail-recursion issues,","Fragments":["btw."]},{"Key":"see what","Fragments":["you"]},{"Key":"what you","Fragments":["mean"]},{"Key":"you mean","Fragments":["about","the"]},{"Key":"mean about","Fragments":["`concat`,"]},{"Key":"about `concat`,","Fragments":["will"]},{"Key":"`concat`, will","Fragments":["have"]},{"Key":"will have","Fragments":["a"]},{"Key":"a go","Fragments":["at"]},{"Key":"go at","Fragments":["a"]},{"Key":" WRT","Fragments":["the"]},{"Key":"WRT the","Fragments":["tail"]},{"Key":"recursion problems,","Fragments":["do"]},{"Key":"problems, do","Fragments":["you"]},{"Key":"mean the","Fragments":["calls"]},{"Key":"the calls","Fragments":["that"]},{"Key":"calls that","Fragments":["*cons*"]},{"Key":"that *cons*","Fragments":["after"]},{"Key":"*cons* after","Fragments":["recursing?"]},{"Key":"after recursing?","Fragments":["Does"]},{"Key":"recursing? Does","Fragments":["ocaml"]},{"Key":"Does ocaml","Fragments":["not"]},{"Key":"ocaml not","Fragments":["do"]},{"Key":"not do","Fragments":["[tail"]},{"Key":"do [tail","Fragments":["recursion"]},{"Key":"[tail recursion","Fragments":["modulo"]},{"Key":"recursion modulo","Fragments":["cons](http://en.wikipedia.org/wiki/Tail_call#Tail_recursion_modulo_cons)?"]},{"Key":"modulo cons](http://en.wikipedia.org/wiki/Tail_call#Tail_recursion_modulo_cons)?","Fragments":["I"]},{"Key":"cons](http://en.wikipedia.org/wiki/Tail_call#Tail_recursion_modulo_cons)? I","Fragments":["just"]},{"Key":"just guessed","Fragments":["that"]},{"Key":"guessed that","Fragments":["it"]},{"Key":"it probably","Fragments":["would,"]},{"Key":"probably would,","Fragments":["but"]},{"Key":"would, but","Fragments":["now"]},{"Key":"but now","Fragments":["I"]},{"Key":"now I","Fragments":["google"]},{"Key":"I google","Fragments":["I"]},{"Key":"google I","Fragments":["can't"]},{"Key":"can't seem","Fragments":["to"]},{"Key":"find anything","Fragments":["definitive"]},{"Key":"anything definitive","Fragments":["that"]},{"Key":"definitive that","Fragments":["says"]},{"Key":"says so.","Fragments":["If"]},{"Key":"so. If","Fragments":["not,"]},{"Key":"If not,","Fragments":["will"]},{"Key":"not, will","Fragments":["rewrite."]},{"Key":" Doesn't","Fragments":["look"]},{"Key":"Doesn't look","Fragments":["like"]},{"Key":"it does,","Fragments":["at"]},{"Key":"does, at","Fragments":["least"]},{"Key":"least this","Fragments":["wouldn't"]},{"Key":"this wouldn't","Fragments":["give"]},{"Key":"wouldn't give","Fragments":["a"]},{"Key":"give a","Fragments":["stack"]},{"Key":"overflow if","Fragments":["it"]},{"Key":"it does:","Fragments":["`map"]},{"Key":"does: `map","Fragments":["(fun"]},{"Key":"`map (fun","Fragments":["x"]},{"Key":"(fun x","Fragments":["-\u003e"]},{"Key":"-\u003e x","Fragments":["+"]},{"Key":"x +","Fragments":["1)"]},{"Key":"1) (List.range","Fragments":["1"]},{"Key":"(List.range 1","Fragments":["1000000);;`"]},{"Key":" Concat","Fragments":["with"]},{"Key":"Concat with","Fragments":["the"]},{"Key":"the previously","Fragments":["implemented"]},{"Key":"previously implemented","Fragments":["tail"]},{"Key":"implemented tail","Fragments":["recursive"]},{"Key":"recursive append","Fragments":["was"]},{"Key":"append was","Fragments":["too"]},{"Key":"too slow.","Fragments":["Therefore,"]},{"Key":"slow. Therefore,","Fragments":["I"]},{"Key":"Therefore, I","Fragments":["implemented"]},{"Key":"implemented concat","Fragments":["as"]},{"Key":"concat as","Fragments":["a"]},{"Key":"a mixture","Fragments":["of"]},{"Key":"mixture of","Fragments":["a"]},{"Key":"a (normal)","Fragments":["recursive"]},{"Key":"(normal) recursive","Fragments":["rev_append"]},{"Key":"recursive rev_append","Fragments":["and"]},{"Key":"rev_append and","Fragments":["a"]},{"Key":"a tail","Fragments":["recursive"]},{"Key":"recursive aux","Fragments":["function."]},{"Key":"to limit","Fragments":["library"]},{"Key":"limit library","Fragments":["usage"]},{"Key":"library usage","Fragments":["to"]},{"Key":"usage to","Fragments":["the"]},{"Key":"String module,","Fragments":["plus"]},{"Key":"module, plus","Fragments":["predicates"]},{"Key":"plus predicates","Fragments":["from"]},{"Key":"predicates from","Fragments":["Char."]},{"Key":"While I'm","Fragments":["not"]},{"Key":"an experienced","Fragments":["OCaml"]},{"Key":"experienced OCaml","Fragments":["programmer,"]},{"Key":"OCaml programmer,","Fragments":["I"]},{"Key":"programmer, I","Fragments":["like"]},{"Key":"the general","Fragments":["structure"]},{"Key":"general structure","Fragments":["of"]},{"Key":"structure of","Fragments":["your"]},{"Key":"your solution.","Fragments":["However,"]},{"Key":"solution. However,","Fragments":["you"]},{"Key":"might be","Fragments":["able"]},{"Key":"to improve","Fragments":["your"]},{"Key":"improve your","Fragments":["implementations"]},{"Key":"your implementations","Fragments":["of"]},{"Key":"implementations of","Fragments":["`is_yell`"]},{"Key":"of `is_yell`","Fragments":["and"]},{"Key":"`is_yell` and","Fragments":["`is_question`"]},{"Key":"and `is_question`","Fragments":["by"]},{"Key":"`is_question` by","Fragments":["using"]},{"Key":"like `String.is_suffix`","Fragments":["and"]},{"Key":"and `String.exists`","Fragments":["or"]},{"Key":"`String.exists` or","Fragments":["`String.for_all`."]},{"Key":"Looks better.","Fragments":["One"]},{"Key":"better. One","Fragments":["thing:"]},{"Key":"One thing:","Fragments":["`module"]},{"Key":"thing: `module","Fragments":["String"]},{"Key":"`module String","Fragments":["="]},{"Key":"String =","Fragments":["Core.Core_string`"]},{"Key":"= Core.Core_string`","Fragments":["isn't"]},{"Key":"Core.Core_string` isn't","Fragments":["needed"]},{"Key":"isn't needed","Fragments":["because"]},{"Key":"needed because","Fragments":["a"]},{"Key":"because a","Fragments":["line"]},{"Key":"a line","Fragments":["to"]},{"Key":"line to","Fragments":["that"]},{"Key":"to that","Fragments":["effect"]},{"Key":"that effect","Fragments":["is"]},{"Key":"effect is","Fragments":["part"]},{"Key":"of `Core.Std`","Fragments":["and"]},{"Key":"`Core.Std` and","Fragments":["`open"]},{"Key":"`open Core.Std`","Fragments":["makes"]},{"Key":"Core.Std` makes","Fragments":["`String`"]},{"Key":"`String` (`Core.Core_string`)","Fragments":["automatically"]},{"Key":"(`Core.Core_string`) automatically","Fragments":["available."]}],"prefix_len":2}