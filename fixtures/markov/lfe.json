{"Nodes":[{"Key":" ","Fragments":["Looks","Normally,","```common-lisp","(defmodule","(export","(g","(h","```","...","If","[1]:","I'm","I'm","```","\u003e","0","0","1","0","0","0","1","0","1","0","0","1","0","0","1","1","0","0","```","So","This","I","For","```common-lisp","(if","0","1)","```","As","**Note**:","The","1.","1.","1.","1.","1.","Something","```common-lisp",";;",";;","(defun","(defun","((x","((x","(defun","((x","((_","```","[1]:","[2]:","[3]:","I","[1]:","Thanks","Aha,","``lfe_io:format``","I","A","-","-","Oops.","Since","[1]:","[2]:","Kudos","FYI","[1]:","[2]:","~~`progn`","According","I","+1","[1]:","The","```responds-to-forceful-questions","in","**error:{assertEqual-failed,[{module,'bob-tests'},","{line,70},","{expression,\"(bob:response-for","{expected,\"Whoa,","{value,\"Sure.\"}]}```","and:","```responds-to-only-numbers","in","**error:{assertEqual-failed,[{module,'bob-tests'},","{line,70},","{expression,\"(bob:response-for","{expected,\"Whatever.\"},","{value,\"Whoa,","I'm","You","Here's","```common-lisp","#\\A","(\u003c","```",":)","```common-lisp","(=:=","```","For","```common-lisp","(=:=","```","Pretty","this","```ffdtm:leap","==\u003e","==\u003e","==\u003e","==\u003e","==\u003e","src/leap.lfe:4:","src/leap.lfe:4:","Compiling","ERROR:","```","I'm","This","changing","As","`=`","```lfe","(=","```","In","The","```haskell","t@(a,","```","[1]:","To","```lfe","(==","```","[1]:","Thanks","Check","[1]:","thanks!","Updated","@yasmeen:","@yasmeen:","I","In","I","I","Looks","One","```common-lisp","(lists:foldl","(lambda","(if","(+","sum))","0","(lists:seq","```","or","```common-lisp",";;","(flet","(if","(+","sum)))","(lists:foldl","```","Solved","The","I","I'll","As","[1]:","``flet``","An","```cl","(flet","```","The","```scheme","(let-function","```","Note","```cl","\u003e","(let-function","```","Update:","\u003e","Right.","\u003e","`andalso`","\u003e","I","Speaking","By","-----","A","I","```lfe","([x","...)","```","I","```lfe","(flet","...)","```","A","-","-","-","I","The","```lfe","(lists:map","```","Other","I","+1","I","Silly","Update:","@diana,","[1]:","I","So","```cl","(defun","(lists:map","((#\\G)","((#\\C)","((#\\T)","((#\\A)","dna))","```","```cl","\u003e","\"CUAAUGU\"","```","Again,","Consider","Yeah,","https://twitter.com/RichRogersHDS/status/607644268723728384/photo/1","For","[1]:","DRY'd","Since","`mapcar/2`","Assuming","```common-lisp","(defun","```","...","You","```common-lisp","(defun","(mapcar","```","...","```common-lisp","(defun",";;","([f",";;","([f","```","Though","[1]:","I","Makes","Running","I","```âžœ","==\u003e","==\u003e","==\u003e","==\u003e","==\u003e","src/accumulate.lfe:7:","src/accumulate.lfe:11:","src/accumulate.lfe:15:","Compiling","ERROR:","The","\u003e","Cool!","In","In","You","```lfe","(defun","(defun","```","[1]:","nm","Consider","Though","Looks","My","[1]:","Changes","Now","Also,","Quick","I","As","-----","####","-","```common-lisp","(f","(f","(f","(f","```","-","-","```","let","for","return","```","It","applying","`head`","My","Erlang","...","[1]:","Premature","Right?","I","A","-","-","Related","-","-","[1]:","[2]:","[3]:","[4]:","Good","```cl","(list-comp","(\u003c-","(\u003c-","(\u003c-","(list","```","swapped"]},{"Key":" Looks","Fragments":["great!","great!","good."]},{"Key":"Looks great!","Fragments":["If","I'm"]},{"Key":"great! If","Fragments":["you"]},{"Key":"If you","Fragments":["want,","get"]},{"Key":"you want,","Fragments":["you"]},{"Key":"want, you","Fragments":["can"]},{"Key":"you can","Fragments":["write","assume","define","see","either"]},{"Key":"can write","Fragments":["`list-comp`"]},{"Key":"write `list-comp`","Fragments":["as"]},{"Key":"`list-comp` as","Fragments":["`lc`."]},{"Key":" Normally,","Fragments":["my"]},{"Key":"Normally, my","Fragments":["`defmodule`"]},{"Key":"my `defmodule`","Fragments":["forms"]},{"Key":"`defmodule` forms","Fragments":["look"]},{"Key":"forms look","Fragments":["more"]},{"Key":"look more","Fragments":["like:","ugly."]},{"Key":" (defmodule","Fragments":["mod"]},{"Key":" (export","Fragments":["(f"]},{"Key":"(export (f","Fragments":["2)"]},{"Key":" (g","Fragments":["2)"]},{"Key":" (h","Fragments":["2))"]},{"Key":" ...","Fragments":["but","you","then","but"]},{"Key":"... but","Fragments":["I","yet"]},{"Key":"but I","Fragments":["definitely","thought","can","wasn't"]},{"Key":"I definitely","Fragments":["see"]},{"Key":"definitely see","Fragments":["the"]},{"Key":"see the","Fragments":["appeal"]},{"Key":"the appeal","Fragments":["of"]},{"Key":"appeal of","Fragments":["inlining"]},{"Key":"of inlining","Fragments":["a"]},{"Key":"inlining a","Fragments":["short"]},{"Key":"a short","Fragments":["one"]},{"Key":"short one","Fragments":["like"]},{"Key":"one like","Fragments":["this."]},{"Key":" If","Fragments":["you"]},{"Key":"you get","Fragments":["really"]},{"Key":"get really","Fragments":["stuck,"]},{"Key":"really stuck,","Fragments":["I"]},{"Key":"stuck, I","Fragments":["[toyed"]},{"Key":"I [toyed","Fragments":["around][1]"]},{"Key":"[toyed around][1]","Fragments":["with"]},{"Key":"around][1] with","Fragments":["this"]},{"Key":"with this","Fragments":["last","code,"]},{"Key":"this last","Fragments":["night."]},{"Key":"last night.","Fragments":["**WARNING**:"]},{"Key":"night. **WARNING**:","Fragments":["total"]},{"Key":"**WARNING**: total","Fragments":["spoilers."]},{"Key":" [1]:","Fragments":["https://gist.github.com/yurrriq/a66462e4c12603522052","http://www.erlang.org/doc/man/lists.html#foldl-3","http://hackage.haskell.org/package/ZipFold-0.1.4","http://exercism.io/submissions/bca623ba6d5142bab98c0a5430a37c95","https://github.com/exercism/xlfe/compare/master...leap-year","https://github.com/rvirding/lfe/blob/develop/doc/user_guide.txt","https://en.wikibooks.org/wiki/Haskell/Pattern_matching#As-patterns","http://c2.com/cgi/wiki?DontRepeatYourself","https://groups.google.com/d/msg/lisp-flavoured-erlang/k0x_kg7Odig/i8rxekeNAgAJ","https://github.com/rvirding/lfe/blob/5f3e147dee7ae3921d5c2bbd5e68dd2fc6995767/src/lfe_macro.erl#L795-L797","http://exercism.io/exercises/lfe/rna-transcription","http://mathworld.wolfram.com/Divides.html","http://www.lispworks.com/documentation/HyperSpec/Body/f_mapc_.htm#mapcar","https://en.wikipedia.org/wiki/LFE_(programming_language)#Guards","https://groups.google.com/forum/#!searchin/lisp-flavoured-erlang/andalso/lisp-flavoured-erlang/k0x_kg7Odig/ynYy4t_6AgAJ","http://www.manning.com/logan/","http://docs.lfe.io/style-guide/5.html"]},{"Key":" I'm","Fragments":["at","not","not","not"]},{"Key":"I'm at","Fragments":["a"]},{"Key":"at a","Fragments":["loss","time."]},{"Key":"a loss","Fragments":["here."]},{"Key":"I'm not","Fragments":["quite","quite","sure","sure"]},{"Key":"not quite","Fragments":["sure","sure","sure"]},{"Key":"quite sure","Fragments":["how","how","how"]},{"Key":"sure how","Fragments":["to","to","to","else"]},{"Key":"how to","Fragments":["implement","get","check"]},{"Key":"to implement","Fragments":["a"]},{"Key":"implement a","Fragments":["counter.","fixed"]},{"Key":"a counter.","Fragments":["I"]},{"Key":"counter. I","Fragments":["get"]},{"Key":"I get","Fragments":["this","this"]},{"Key":"get this","Fragments":["when","error"]},{"Key":"this when","Fragments":["I"]},{"Key":"when I","Fragments":["run"]},{"Key":"I run","Fragments":["the"]},{"Key":"run the","Fragments":["function"]},{"Key":"the function","Fragments":["in","should","(it","position","`3`"]},{"Key":"function in","Fragments":["the"]},{"Key":"in the","Fragments":["REPL:","face","right","LFE","right","this","same","REPL","reference","reference","function","list.","order"]},{"Key":" \u003e","Fragments":["(hamming-distance","(macroexpand","It","I","The","(-\u003erna","I"]},{"Key":"\u003e (hamming-distance","Fragments":["\"GAGCCTACTAACGGGAT\""]},{"Key":"(hamming-distance \"GAGCCTACTAACGGGAT\"","Fragments":["\"GAACCTCCCAAGGGATT\")"]},{"Key":" So","Fragments":["I'm","you"]},{"Key":"So I'm","Fragments":["able"]},{"Key":"I'm able","Fragments":["to"]},{"Key":"able to","Fragments":["compare","get"]},{"Key":"to compare","Fragments":["the"]},{"Key":"compare the","Fragments":["2"]},{"Key":"the 2","Fragments":["strings,"]},{"Key":"2 strings,","Fragments":["but"]},{"Key":"strings, but","Fragments":["am"]},{"Key":"but am","Fragments":["just"]},{"Key":"am just","Fragments":["not"]},{"Key":"just not","Fragments":["sure"]},{"Key":"not sure","Fragments":["how","what","why.","where"]},{"Key":"to get","Fragments":["the","you","`lists:foldl`"]},{"Key":"get the","Fragments":["total"]},{"Key":"the total","Fragments":["count."]},{"Key":" This","Fragments":["seemed","is"]},{"Key":"This seemed","Fragments":["like"]},{"Key":"seemed like","Fragments":["overkill"]},{"Key":"like overkill","Fragments":["for"]},{"Key":"overkill for","Fragments":["the","this."]},{"Key":"for the","Fragments":["exercise:","macros","Gregorian","feedback","terrible","same","presence","next"]},{"Key":"the exercise:","Fragments":["http://docs.lfe.io/tutorials/counter-app/2.html"]},{"Key":" I","Fragments":["agree,","had","now","tend","wonder","prefer","wondered","am","agree,","tend","also","like","like","need","like","submitted","get","like","like"]},{"Key":"I agree,","Fragments":["spawning","it's"]},{"Key":"agree, spawning","Fragments":["processes"]},{"Key":"spawning processes","Fragments":["and"]},{"Key":"processes and","Fragments":["passing"]},{"Key":"and passing","Fragments":["messages"]},{"Key":"passing messages","Fragments":["like"]},{"Key":"messages like","Fragments":["the"]},{"Key":"like the","Fragments":["example","scheme-like","scheme-like","`(m:f","use","definition"]},{"Key":"the example","Fragments":["you"]},{"Key":"example you","Fragments":["linked"]},{"Key":"you linked","Fragments":["is","in"]},{"Key":"linked is","Fragments":["overkill"]},{"Key":"is overkill","Fragments":["for"]},{"Key":" For","Fragments":["starters,","reference,","this"]},{"Key":"For starters,","Fragments":["what"]},{"Key":"starters, what","Fragments":["are"]},{"Key":"what are","Fragments":["you"]},{"Key":"are you","Fragments":["trying"]},{"Key":"you trying","Fragments":["to"]},{"Key":"trying to","Fragments":["achieve","compile"]},{"Key":"to achieve","Fragments":["with"]},{"Key":"achieve with","Fragments":["lines"]},{"Key":"with lines","Fragments":["7"]},{"Key":"lines 7","Fragments":["and"]},{"Key":"7 and","Fragments":["8?","8"]},{"Key":"and 8?","Fragments":["Why"]},{"Key":"8? Why","Fragments":["not"]},{"Key":"Why not","Fragments":["just"]},{"Key":"not just","Fragments":["return"]},{"Key":"just return","Fragments":["0"]},{"Key":"return 0","Fragments":["or"]},{"Key":"0 or","Fragments":["1,"]},{"Key":"or 1,","Fragments":["as"]},{"Key":"1, as","Fragments":["in:"]},{"Key":" (if","Fragments":["(=:=","(any-multiple?","(any-multiple?"]},{"Key":"(if (=:=","Fragments":["head"]},{"Key":"(=:= head","Fragments":["h)"]},{"Key":" As","Fragments":["far","Robert","for","far"]},{"Key":"As far","Fragments":["as","as"]},{"Key":"far as","Fragments":["implementing","I"]},{"Key":"as implementing","Fragments":["a"]},{"Key":"implementing a","Fragments":["counter,"]},{"Key":"a counter,","Fragments":["you"]},{"Key":"counter, you","Fragments":["could"]},{"Key":"you could","Fragments":["do","do","rename"]},{"Key":"could do","Fragments":["it","something"]},{"Key":"do it","Fragments":["with","with","with",":)"]},{"Key":"it with","Fragments":["[`lists:foldl/3`][1].","`lists:any`","`lists:any`."]},{"Key":"with [`lists:foldl/3`][1].","Fragments":["A"]},{"Key":"[`lists:foldl/3`][1]. A","Fragments":["couple"]},{"Key":"A couple","Fragments":["other","personal"]},{"Key":"couple other","Fragments":["functions"]},{"Key":"other functions","Fragments":["of"]},{"Key":"functions of","Fragments":["interest"]},{"Key":"of interest","Fragments":["from"]},{"Key":"interest from","Fragments":["the"]},{"Key":"from the","Fragments":["`lists`","`and`","`and`","other"]},{"Key":"the `lists`","Fragments":["module:"]},{"Key":"`lists` module:","Fragments":["[`lists:zipwith/3`][2]"]},{"Key":"module: [`lists:zipwith/3`][2]","Fragments":["and"]},{"Key":"[`lists:zipwith/3`][2] and","Fragments":["[`lists:sum/1`][3]."]},{"Key":" **Note**:","Fragments":["IIRC"]},{"Key":"**Note**: IIRC","Fragments":["you"]},{"Key":"IIRC you","Fragments":["can"]},{"Key":"can assume","Fragments":["all"]},{"Key":"assume all","Fragments":["inputs"]},{"Key":"all inputs","Fragments":["are"]},{"Key":"inputs are","Fragments":["of"]},{"Key":"are of","Fragments":["the"]},{"Key":"of the","Fragments":["same","more","filtered","predicate","LFE","best"]},{"Key":"the same","Fragments":["length,","name,","way.","sense","line","name","function."]},{"Key":"same length,","Fragments":["which"]},{"Key":"length, which","Fragments":["bodes"]},{"Key":"which bodes","Fragments":["well"]},{"Key":"bodes well","Fragments":["for"]},{"Key":"well for","Fragments":["`lists:zipwith/3`."]},{"Key":" The","Fragments":["basic","one","Haskell","book","same","modern","tests"]},{"Key":"The basic","Fragments":["idea"]},{"Key":"basic idea","Fragments":["in"]},{"Key":"idea in","Fragments":["this"]},{"Key":"in this","Fragments":["case"]},{"Key":"this case","Fragments":["would"]},{"Key":"case would","Fragments":["be"]},{"Key":"would be","Fragments":["something","appreciated.","to","to"]},{"Key":"be something","Fragments":["like:"]},{"Key":" 1.","Fragments":["Start","Take","If","Repeat","If"]},{"Key":"1. Start","Fragments":["with"]},{"Key":"Start with","Fragments":["a"]},{"Key":"with a","Fragments":["sum","mental","modulo","single"]},{"Key":"a sum","Fragments":["(accumulator)"]},{"Key":"sum (accumulator)","Fragments":["of"]},{"Key":"(accumulator) of","Fragments":["0"]},{"Key":"1. Take","Fragments":["the"]},{"Key":"Take the","Fragments":["first"]},{"Key":"the first","Fragments":["character"]},{"Key":"first character","Fragments":["from"]},{"Key":"character from","Fragments":["each"]},{"Key":"from each","Fragments":["list"]},{"Key":"1. If","Fragments":["they're","the"]},{"Key":"If they're","Fragments":["equal,"]},{"Key":"they're equal,","Fragments":["sum"]},{"Key":"equal, sum","Fragments":["+="]},{"Key":"sum +=","Fragments":["1,","0","num"]},{"Key":"+= 1,","Fragments":["otherwise"]},{"Key":"1, otherwise","Fragments":["sum"]},{"Key":"otherwise sum","Fragments":["+="]},{"Key":"1. Repeat","Fragments":["2-3"]},{"Key":"Repeat 2-3","Fragments":["until"]},{"Key":"2-3 until","Fragments":["the"]},{"Key":"until the","Fragments":["lists"]},{"Key":"the lists","Fragments":["are","are"]},{"Key":"lists are","Fragments":["empty","empty,"]},{"Key":"If the","Fragments":["lists","given"]},{"Key":"are empty,","Fragments":["return"]},{"Key":"empty, return","Fragments":["sum"]},{"Key":" Something","Fragments":["else"]},{"Key":"Something else","Fragments":["to"]},{"Key":"else to","Fragments":["keep"]},{"Key":"to keep","Fragments":["in"]},{"Key":"keep in","Fragments":["mind,"]},{"Key":"in mind,","Fragments":["you"]},{"Key":"mind, you","Fragments":["can"]},{"Key":"can define","Fragments":["multiple"]},{"Key":"define multiple","Fragments":["arities"]},{"Key":"multiple arities","Fragments":["for"]},{"Key":"arities for","Fragments":["a","the"]},{"Key":"for a","Fragments":["function","predicate,","predicate,","predicate,","capital"]},{"Key":"a function","Fragments":["with","that,"]},{"Key":"function with","Fragments":["the"]},{"Key":"with the","Fragments":["same","``-\u003e``","names!","name","same","argument"]},{"Key":"same name,","Fragments":["keeping"]},{"Key":"name, keeping","Fragments":["in"]},{"Key":"keeping in","Fragments":["mind"]},{"Key":"in mind","Fragments":["Erlang/LFE"]},{"Key":"mind Erlang/LFE","Fragments":["treats"]},{"Key":"Erlang/LFE treats","Fragments":["them"]},{"Key":"treats them","Fragments":["as"]},{"Key":"them as","Fragments":["distinct"]},{"Key":"as distinct","Fragments":["from"]},{"Key":"distinct from","Fragments":["one"]},{"Key":"from one","Fragments":["another."]},{"Key":" ;;","Fragments":["Defines","which,","Sorry","If","Otherwise,"]},{"Key":";; Defines","Fragments":["#'f/1,"]},{"Key":"Defines #'f/1,","Fragments":["#'f/2"]},{"Key":"#'f/1, #'f/2","Fragments":["and"]},{"Key":"#'f/2 and","Fragments":["#f'/3,"]},{"Key":";; which,","Fragments":["to"]},{"Key":"which, to","Fragments":["LFE,"]},{"Key":"to LFE,","Fragments":["are"]},{"Key":"LFE, are","Fragments":["entirely"]},{"Key":"are entirely","Fragments":["unrelated."]},{"Key":" (defun","Fragments":["f","f","f","-\u003erna","f","accumulate","mapcar","plus","plus"]},{"Key":"(defun f","Fragments":["(x)","(x)"]},{"Key":"f (x)","Fragments":["...)","x)"]},{"Key":" ((x","Fragments":["0)","y)","y"]},{"Key":"((x 0)","Fragments":["'zero)"]},{"Key":"((x y)","Fragments":["...))"]},{"Key":"((x y","Fragments":["z)"]},{"Key":"y z)","Fragments":["...)","(+"]},{"Key":" ((_","Fragments":["_"]},{"Key":"((_ _","Fragments":["_)"]},{"Key":"_ _)","Fragments":["...))"]},{"Key":" [2]:","Fragments":["http://www.erlang.org/doc/man/lists.html#zipwith-3","http://c2.com/cgi/wiki?PrematureOptimization","https://github.com/exercism/xlfe/issues/7","http://docs.lfe.io/style-guide/3.html"]},{"Key":" [3]:","Fragments":["http://www.erlang.org/doc/man/lists.html#sum-1","https://groups.google.com/forum/#!topic/lisp-flavoured-erlang/k0x_kg7Odig"]},{"Key":"I had","Fragments":["that"]},{"Key":"had that","Fragments":["nitpick"]},{"Key":"that nitpick","Fragments":["written"]},{"Key":"nitpick written","Fragments":["but"]},{"Key":"written but","Fragments":["\"unpicked\""]},{"Key":"but \"unpicked\"","Fragments":["for"]},{"Key":"\"unpicked\" for","Fragments":["quite"]},{"Key":"for quite","Fragments":["a"]},{"Key":"quite a","Fragments":["while,"]},{"Key":"a while,","Fragments":["oops."]},{"Key":"while, oops.","Fragments":["Got"]},{"Key":"oops. Got","Fragments":["sucked"]},{"Key":"Got sucked","Fragments":["into"]},{"Key":"sucked into","Fragments":["[ZipFold][1]"]},{"Key":"into [ZipFold][1]","Fragments":["and"]},{"Key":"[ZipFold][1] and","Fragments":["similar..."]},{"Key":" Thanks","Fragments":["-","for"]},{"Key":"Thanks -","Fragments":["I'll"]},{"Key":"- I'll","Fragments":["see"]},{"Key":"I'll see","Fragments":["what"]},{"Key":"see what","Fragments":["I"]},{"Key":"what I","Fragments":["can"]},{"Key":"I can","Fragments":["come","get","do","troubleshoot","only","tell,"]},{"Key":"can come","Fragments":["up"]},{"Key":"come up","Fragments":["with.","a"]},{"Key":"up with.","Fragments":["Lines"]},{"Key":"with. Lines","Fragments":["7"]},{"Key":"Lines 7","Fragments":["and"]},{"Key":"and 8","Fragments":["were"]},{"Key":"8 were","Fragments":["there"]},{"Key":"were there","Fragments":["for"]},{"Key":"there for","Fragments":["own"]},{"Key":"for own","Fragments":["my"]},{"Key":"own my","Fragments":["testing"]},{"Key":"my testing","Fragments":["-"]},{"Key":"testing -","Fragments":["I"]},{"Key":"- I","Fragments":["need","can","didn't","also","think","didn't"]},{"Key":"I need","Fragments":["to","to","to","to","to"]},{"Key":"need to","Fragments":["look","use","use","use","update","use","be"]},{"Key":"to look","Fragments":["into"]},{"Key":"look into","Fragments":["proper"]},{"Key":"into proper","Fragments":["debugging"]},{"Key":"proper debugging","Fragments":["for"]},{"Key":"debugging for","Fragments":["LFE."]},{"Key":" Aha,","Fragments":["for"]},{"Key":"Aha, for","Fragments":["debugging"]},{"Key":"for debugging","Fragments":["`io:format`"]},{"Key":"debugging `io:format`","Fragments":["is"]},{"Key":"`io:format` is","Fragments":["great."]},{"Key":"is great.","Fragments":["I"]},{"Key":"great. I","Fragments":["can't"]},{"Key":"I can't","Fragments":["recall"]},{"Key":"can't recall","Fragments":["the"]},{"Key":"recall the","Fragments":["difference"]},{"Key":"the difference","Fragments":["at"]},{"Key":"difference at","Fragments":["the"]},{"Key":"at the","Fragments":["moment,"]},{"Key":"the moment,","Fragments":["but"]},{"Key":"moment, but","Fragments":["there's"]},{"Key":"but there's","Fragments":["also"]},{"Key":"there's also","Fragments":["`lfe_io:format`."]},{"Key":"also `lfe_io:format`.","Fragments":["Maybe"]},{"Key":"`lfe_io:format`. Maybe","Fragments":["@audreanne"]},{"Key":"Maybe @audreanne","Fragments":["can"]},{"Key":"@audreanne can","Fragments":["chime"]},{"Key":"can chime","Fragments":["in."]},{"Key":" ``lfe_io:format``","Fragments":["renders"]},{"Key":"``lfe_io:format`` renders","Fragments":["things"]},{"Key":"renders things","Fragments":["in"]},{"Key":"things in","Fragments":["LFE"]},{"Key":"in LFE","Fragments":["syntax;"]},{"Key":"LFE syntax;","Fragments":["``io:format``"]},{"Key":"syntax; ``io:format``","Fragments":["renders"]},{"Key":"``io:format`` renders","Fragments":["them"]},{"Key":"renders them","Fragments":["in"]},{"Key":"them in","Fragments":["Erlang"]},{"Key":"in Erlang","Fragments":["syntax.","and"]},{"Key":"Erlang syntax.","Fragments":["It's"]},{"Key":"syntax. It's","Fragments":["nice"]},{"Key":"It's nice","Fragments":["to"]},{"Key":"nice to","Fragments":["use"]},{"Key":"to use","Fragments":["``lfe_io:format``","the","`(m:f","the","the","`(m:f","the","[guards][1]"]},{"Key":"use ``lfe_io:format``","Fragments":["to"]},{"Key":"``lfe_io:format`` to","Fragments":["display"]},{"Key":"to display","Fragments":["data"]},{"Key":"display data","Fragments":["structures,"]},{"Key":"data structures,","Fragments":["so"]},{"Key":"structures, so","Fragments":["you"]},{"Key":"so you","Fragments":["don't"]},{"Key":"you don't","Fragments":["get","need"]},{"Key":"don't get","Fragments":["slapped"]},{"Key":"get slapped","Fragments":["in"]},{"Key":"slapped in","Fragments":["the"]},{"Key":"the face","Fragments":["with"]},{"Key":"face with","Fragments":["a"]},{"Key":"a mental","Fragments":["context"]},{"Key":"mental context","Fragments":["switch"]},{"Key":"context switch","Fragments":[":-)"]},{"Key":"I now","Fragments":["changed"]},{"Key":"now changed","Fragments":["`or`"]},{"Key":"changed `or`","Fragments":["to"]},{"Key":"`or` to","Fragments":["`orelse`and"]},{"Key":"to `orelse`and","Fragments":["`and`"]},{"Key":"`orelse`and `and`","Fragments":["to"]},{"Key":"`and` to","Fragments":["`andalso`.","`andalso`"]},{"Key":"to `andalso`.","Fragments":["That"]},{"Key":"`andalso`. That","Fragments":["really"]},{"Key":"That really","Fragments":["makes"]},{"Key":"really makes","Fragments":["it"]},{"Key":"makes it","Fragments":["look"]},{"Key":"it look","Fragments":["more"]},{"Key":"more ugly.","Fragments":["I"]},{"Key":"ugly. I","Fragments":["asked"]},{"Key":"I asked","Fragments":["about"]},{"Key":"asked about","Fragments":["the"]},{"Key":"about the","Fragments":["choice"]},{"Key":"the choice","Fragments":["of"]},{"Key":"choice of","Fragments":["names"]},{"Key":"of names","Fragments":["for"]},{"Key":"names for","Fragments":["the","those"]},{"Key":"the macros","Fragments":["vs"]},{"Key":"macros vs","Fragments":["the"]},{"Key":"vs the","Fragments":["functions"]},{"Key":"the functions","Fragments":["on"]},{"Key":"functions on","Fragments":["IRC..."]},{"Key":" A","Fragments":["few","couple","few","few"]},{"Key":"A few","Fragments":["remaining","questions","nitpicks:"]},{"Key":"few remaining","Fragments":["questions"]},{"Key":"remaining questions","Fragments":["regarding"]},{"Key":"questions regarding","Fragments":["this","this:"]},{"Key":"regarding this","Fragments":["code:"]},{"Key":" -","Fragments":["It","The","It","I","The","Consider","Think","Since","`is_divisible_by`","Your","Check","More"]},{"Key":"- It","Fragments":["seems","seems"]},{"Key":"It seems","Fragments":["like","like","like"]},{"Key":"seems like","Fragments":["I","`progn`","I","I"]},{"Key":"like I","Fragments":["need","need","need"]},{"Key":"use the","Fragments":["multi-pattern","multi-pattern","multi-pattern","latest"]},{"Key":"the multi-pattern","Fragments":["form","form","form"]},{"Key":"multi-pattern form","Fragments":["of","of","of"]},{"Key":"form of","Fragments":["defun","`defun`","defun"]},{"Key":"of defun","Fragments":["if","if"]},{"Key":"defun if","Fragments":["I","I"]},{"Key":"if I","Fragments":["want","want","want"]},{"Key":"I want","Fragments":["to","to","to"]},{"Key":"want to","Fragments":["add","add","add"]},{"Key":"to add","Fragments":["a","a","a"]},{"Key":"add a","Fragments":["guard.","guard.","guard."]},{"Key":"a guard.","Fragments":["Is","Is","Is"]},{"Key":"guard. Is","Fragments":["that","that","that"]},{"Key":"Is that","Fragments":["right?","right?","right?"]},{"Key":"- The","Fragments":["name","name"]},{"Key":"The name","Fragments":["`leap-year`","leap-year","`leap-year`"]},{"Key":"name `leap-year`","Fragments":["is","is"]},{"Key":"`leap-year` is","Fragments":["not","not"]},{"Key":"is not","Fragments":["really","`#'=/2`","really","really"]},{"Key":"not really","Fragments":["well-chosen","well-chosen","well-chosen"]},{"Key":"really well-chosen","Fragments":["for","for","for"]},{"Key":"well-chosen for","Fragments":["a","a","a"]},{"Key":"a predicate,","Fragments":["is","is","is"]},{"Key":"predicate, is","Fragments":["it?","it?","it?"]},{"Key":"is it?","Fragments":["Did","Did"]},{"Key":"it? Did","Fragments":["exercism","exercism"]},{"Key":"Did exercism","Fragments":["require","require"]},{"Key":"exercism require","Fragments":["being","being"]},{"Key":"require being","Fragments":["consistent","consistent"]},{"Key":"being consistent","Fragments":["with","with"]},{"Key":"consistent with","Fragments":["other","other"]},{"Key":"with other","Fragments":["languages","languages"]},{"Key":"other languages","Fragments":["or","or"]},{"Key":"languages or","Fragments":["is","is"]},{"Key":"or is","Fragments":["this","this"]},{"Key":"is this","Fragments":["actually","actually"]},{"Key":"this actually","Fragments":["good","fails","good"]},{"Key":"actually good","Fragments":["style","style"]},{"Key":"good style","Fragments":["in","in"]},{"Key":"style in","Fragments":["LFE?","LFE?"]},{"Key":"in LFE?","Fragments":["I","I"]},{"Key":"LFE? I","Fragments":["personally","personally"]},{"Key":"I personally","Fragments":["like","like"]},{"Key":"personally like","Fragments":["the","the"]},{"Key":"the scheme-like","Fragments":["predicates","predicates"]},{"Key":"scheme-like predicates","Fragments":["with","with"]},{"Key":"predicates with","Fragments":["quesiton","quesiton"]},{"Key":"with quesiton","Fragments":["mark,","mark,"]},{"Key":"quesiton mark,","Fragments":["i.e.","i.e."]},{"Key":"mark, i.e.","Fragments":["`is-leap-year?`.","`is-leap-year?`."]},{"Key":"i.e. `is-leap-year?`.","Fragments":["But","But"]},{"Key":"`is-leap-year?`. But","Fragments":["why","why"]},{"Key":"But why","Fragments":["not","not"]},{"Key":"why not","Fragments":["have","have"]},{"Key":"not have","Fragments":["at","at"]},{"Key":"have at","Fragments":["least","least"]},{"Key":"at least","Fragments":["an","an"]},{"Key":"least an","Fragments":["`is-`","`is-`"]},{"Key":"an `is-`","Fragments":["prefix,","prefix,"]},{"Key":"`is-` prefix,","Fragments":["i.e.","i.e."]},{"Key":"prefix, i.e.","Fragments":["`is-leap-year`.","`is-leap-year`."]},{"Key":" Oops.","Fragments":["See"]},{"Key":"Oops. See","Fragments":["my"]},{"Key":"See my","Fragments":["answers"]},{"Key":"my answers","Fragments":["on"]},{"Key":"answers on","Fragments":["[the"]},{"Key":"on [the","Fragments":["previous"]},{"Key":"[the previous","Fragments":["iteration][1]."]},{"Key":" Since","Fragments":["`divided-by?`","`accumulate/2`"]},{"Key":"Since `divided-by?`","Fragments":["is"]},{"Key":"`divided-by?` is","Fragments":["such"]},{"Key":"is such","Fragments":["an","a"]},{"Key":"such an","Fragments":["inexpensive"]},{"Key":"an inexpensive","Fragments":["operation,"]},{"Key":"inexpensive operation,","Fragments":["I"]},{"Key":"operation, I","Fragments":["might"]},{"Key":"I might","Fragments":["avoid","rename","reverse"]},{"Key":"might avoid","Fragments":["[premature"]},{"Key":"avoid [premature","Fragments":["optimization][2]"]},{"Key":"[premature optimization][2]","Fragments":["in"]},{"Key":"optimization][2] in","Fragments":["favor"]},{"Key":"in favor","Fragments":["less"]},{"Key":"favor less","Fragments":["ugly"]},{"Key":"less ugly","Fragments":["code,"]},{"Key":"ugly code,","Fragments":["though"]},{"Key":"code, though","Fragments":["technically"]},{"Key":"though technically","Fragments":["this"]},{"Key":"technically this","Fragments":["iteration"]},{"Key":"this iteration","Fragments":["is"]},{"Key":"iteration is","Fragments":["ever-so-slightly"]},{"Key":"is ever-so-slightly","Fragments":["more"]},{"Key":"ever-so-slightly more","Fragments":["efficient."]},{"Key":" Kudos","Fragments":["on"]},{"Key":"Kudos on","Fragments":["checking"]},{"Key":"on checking","Fragments":["for"]},{"Key":"checking for","Fragments":["the","a"]},{"Key":"the Gregorian","Fragments":["calendar","start"]},{"Key":"Gregorian calendar","Fragments":["start"]},{"Key":"calendar start","Fragments":["date!"]},{"Key":"start date!","Fragments":["Perhaps"]},{"Key":"date! Perhaps","Fragments":["as"]},{"Key":"Perhaps as","Fragments":["an"]},{"Key":"as an","Fragments":["extra"]},{"Key":"an extra","Fragments":["credit"]},{"Key":"extra credit","Fragments":["feature"]},{"Key":"credit feature","Fragments":["the"]},{"Key":"feature the","Fragments":["function"]},{"Key":"function should","Fragments":["perform"]},{"Key":"should perform","Fragments":["the"]},{"Key":"perform the","Fragments":["check"]},{"Key":"the check","Fragments":["for"]},{"Key":"check for","Fragments":["Julian","the"]},{"Key":"for Julian","Fragments":["calendar"]},{"Key":"Julian calendar","Fragments":["years"]},{"Key":"calendar years","Fragments":["when"]},{"Key":"years when","Fragments":["the"]},{"Key":"when the","Fragments":["year"]},{"Key":"the year","Fragments":["is"]},{"Key":"year is","Fragments":["before"]},{"Key":"is before","Fragments":["the"]},{"Key":"before the","Fragments":["Gregorian"]},{"Key":"Gregorian start","Fragments":["date?"]},{"Key":" FYI","Fragments":["I"]},{"Key":"FYI I","Fragments":["have"]},{"Key":"I have","Fragments":["a","to"]},{"Key":"have a","Fragments":["branch"]},{"Key":"a branch","Fragments":["where"]},{"Key":"branch where","Fragments":["`leap-year`"]},{"Key":"where `leap-year`","Fragments":["has"]},{"Key":"`leap-year` has","Fragments":["been"]},{"Key":"has been","Fragments":["[renamed"]},{"Key":"been [renamed","Fragments":["to"]},{"Key":"[renamed to","Fragments":["`leap-year?`][1]."]},{"Key":"to `leap-year?`][1].","Fragments":["I'm"]},{"Key":"`leap-year?`][1]. I'm","Fragments":["holding"]},{"Key":"I'm holding","Fragments":["off"]},{"Key":"holding off","Fragments":["on"]},{"Key":"off on","Fragments":["merging"]},{"Key":"on merging","Fragments":["it"]},{"Key":"merging it","Fragments":["until"]},{"Key":"it until","Fragments":["we"]},{"Key":"until we","Fragments":["come"]},{"Key":"we come","Fragments":["to"]},{"Key":"come to","Fragments":["a"]},{"Key":"to a","Fragments":["conclusion","pre-Greogrian"]},{"Key":"a conclusion","Fragments":["re:"]},{"Key":"conclusion re:","Fragments":["pre-Gregorian"]},{"Key":"re: pre-Gregorian","Fragments":["dates/"]},{"Key":"pre-Gregorian dates/","Fragments":["I've"]},{"Key":"dates/ I've","Fragments":["opened"]},{"Key":"I've opened","Fragments":["[an"]},{"Key":"opened [an","Fragments":["issue][2]"]},{"Key":"[an issue][2]","Fragments":["for"]},{"Key":"issue][2] for","Fragments":["it."]},{"Key":"for it.","Fragments":["Feel"]},{"Key":"it. Feel","Fragments":["free"]},{"Key":"Feel free","Fragments":["to"]},{"Key":"free to","Fragments":["make"]},{"Key":"to make","Fragments":["a"]},{"Key":"make a","Fragments":["PR"]},{"Key":"a PR","Fragments":["or"]},{"Key":"PR or","Fragments":["provide"]},{"Key":"or provide","Fragments":["insight"]},{"Key":"provide insight","Fragments":["there."]},{"Key":"insight there.","Fragments":["Thanks!"]},{"Key":" ~~`progn`","Fragments":["should"]},{"Key":"~~`progn` should","Fragments":["be"]},{"Key":"should be","Fragments":["`andalso`","named"]},{"Key":"be `andalso`","Fragments":["too.~~"]},{"Key":" According","Fragments":["to"]},{"Key":"According to","Fragments":["[the"]},{"Key":"to [the","Fragments":["user"]},{"Key":"[the user","Fragments":["guide][1],"]},{"Key":"user guide][1],","Fragments":["`(progn"]},{"Key":"guide][1], `(progn","Fragments":["test"]},{"Key":"`(progn test","Fragments":["...)`"]},{"Key":"test ...)`","Fragments":["is"]},{"Key":"...)` is","Fragments":["treated"]},{"Key":"is treated","Fragments":["as"]},{"Key":"treated as","Fragments":["a"]},{"Key":"as a","Fragments":["sequence","``let-function``:","matter"]},{"Key":"a sequence","Fragments":["of"]},{"Key":"sequence of","Fragments":["guard"]},{"Key":"of guard","Fragments":["tests."]},{"Key":"guard tests.","Fragments":["Thanks"]},{"Key":"tests. Thanks","Fragments":["for"]},{"Key":"Thanks for","Fragments":["showing","the"]},{"Key":"for showing","Fragments":["me"]},{"Key":"showing me","Fragments":["that."]},{"Key":"I tend","Fragments":["to","to","to","to"]},{"Key":"tend to","Fragments":["prefer","prefer","put","inline","go"]},{"Key":"to prefer","Fragments":["`andalso`","`divides?`"]},{"Key":"prefer `andalso`","Fragments":["but"]},{"Key":"`andalso` but","Fragments":["it"]},{"Key":"but it","Fragments":["seems"]},{"Key":"it seems","Fragments":["like"]},{"Key":"like `progn`","Fragments":["is"]},{"Key":"`progn` is","Fragments":["effectively"]},{"Key":"is effectively","Fragments":["the"]},{"Key":"effectively the","Fragments":["same,"]},{"Key":"the same,","Fragments":["unless"]},{"Key":"same, unless","Fragments":["I've"]},{"Key":"unless I've","Fragments":["misunderstood."]},{"Key":" +1","Fragments":["to","on"]},{"Key":"+1 to","Fragments":["a"]},{"Key":"a pre-Greogrian","Fragments":["test."]},{"Key":"pre-Greogrian test.","Fragments":["I'll"]},{"Key":"test. I'll","Fragments":["investigate."]},{"Key":"The one","Fragments":["is"]},{"Key":"one is","Fragments":["tough"]},{"Key":"is tough","Fragments":["-"]},{"Key":"tough -","Fragments":["I"]},{"Key":"can get","Fragments":["all"]},{"Key":"get all","Fragments":["but"]},{"Key":"all but","Fragments":["two"]},{"Key":"but two","Fragments":["tests"]},{"Key":"two tests","Fragments":["to"]},{"Key":"tests to","Fragments":["pass:"]},{"Key":" ```responds-to-forceful-questions","Fragments":["............."]},{"Key":"```responds-to-forceful-questions .............","Fragments":["[failed]"]},{"Key":" in","Fragments":["function","function"]},{"Key":"in function","Fragments":["'bob-tests':'bob-responds'/2","'bob-tests':'bob-responds'/2"]},{"Key":"function 'bob-tests':'bob-responds'/2","Fragments":["(./test/bob-tests.lfe,","(./test/bob-tests.lfe,"]},{"Key":"'bob-tests':'bob-responds'/2 (./test/bob-tests.lfe,","Fragments":["line","line"]},{"Key":"(./test/bob-tests.lfe, line","Fragments":["70)","70)"]},{"Key":" {expression,\"(bob:response-for","Fragments":["question)\"},","question)\"},"]},{"Key":" {expected,\"Whoa,","Fragments":["chill"]},{"Key":"{expected,\"Whoa, chill","Fragments":["out!\"},"]},{"Key":" ```responds-to-only-numbers","Fragments":["..................."]},{"Key":"```responds-to-only-numbers ...................","Fragments":["[failed]"]},{"Key":" {value,\"Whoa,","Fragments":["chill"]},{"Key":"{value,\"Whoa, chill","Fragments":["out!\"}]}```"]},{"Key":"to check","Fragments":["if"]},{"Key":"check if","Fragments":["a"]},{"Key":"if a","Fragments":["string"]},{"Key":"a string","Fragments":["contains,","has"]},{"Key":"string contains,","Fragments":["say,"]},{"Key":"contains, say,","Fragments":["uppercase"]},{"Key":"say, uppercase","Fragments":["letters."]},{"Key":"uppercase letters.","Fragments":["I"]},{"Key":"letters. I","Fragments":["think"]},{"Key":"I think","Fragments":["I","it's","it's","I","I"]},{"Key":"think I","Fragments":["can","figured","figured"]},{"Key":"can do","Fragments":["it"]},{"Key":"with `lists:any`","Fragments":["-"]},{"Key":"`lists:any` -","Fragments":["but"]},{"Key":"- but","Fragments":["not","this"]},{"Key":"but not","Fragments":["sure"]},{"Key":"sure what","Fragments":["function"]},{"Key":"what function","Fragments":["to"]},{"Key":"function to","Fragments":["pass."]},{"Key":"to pass.","Fragments":["`re:run`"]},{"Key":"pass. `re:run`","Fragments":["doesn't"]},{"Key":"`re:run` doesn't","Fragments":["seem"]},{"Key":"doesn't seem","Fragments":["to"]},{"Key":"seem to","Fragments":["fit"]},{"Key":"to fit","Fragments":["the"]},{"Key":"fit the","Fragments":["bill."]},{"Key":" You","Fragments":["could","could,","can"]},{"Key":"You could","Fragments":["definitely"]},{"Key":"could definitely","Fragments":["do"]},{"Key":"definitely do","Fragments":["it"]},{"Key":" Here's","Fragments":["a"]},{"Key":"Here's a","Fragments":["hint"]},{"Key":"a hint","Fragments":["to"]},{"Key":"hint to","Fragments":["get"]},{"Key":"get you","Fragments":["pointed"]},{"Key":"you pointed","Fragments":["in"]},{"Key":"pointed in","Fragments":["the"]},{"Key":"the right","Fragments":["direction:","direction."]},{"Key":" #\\A","Fragments":[";"]},{"Key":"#\\A ;","Fragments":["\u003c="]},{"Key":"; \u003c=","Fragments":["Character","'true","'true","'true","'true,","'true,","'true,","'false,"]},{"Key":"\u003c= Character","Fragments":["literal"]},{"Key":"Character literal","Fragments":["of"]},{"Key":"literal of","Fragments":["A"]},{"Key":" (\u003c","Fragments":["#\\A"]},{"Key":"(\u003c #\\A","Fragments":["#\\B)"]},{"Key":"#\\A #\\B)","Fragments":[";"]},{"Key":"#\\B) ;","Fragments":["\u003c="]},{"Key":" :)","Fragments":["The"]},{"Key":":) The","Fragments":["character"]},{"Key":"The character","Fragments":["literals"]},{"Key":"character literals","Fragments":["evaluate","in",":-)"]},{"Key":"literals evaluate","Fragments":["to"]},{"Key":"evaluate to","Fragments":["their"]},{"Key":"to their","Fragments":["decimal","Erlang"]},{"Key":"their decimal","Fragments":["ASCII"]},{"Key":"decimal ASCII","Fragments":["equivalents,"]},{"Key":"ASCII equivalents,","Fragments":["e.g."]},{"Key":" (=:=","Fragments":["#\\A","\"ABC\""]},{"Key":"(=:= #\\A","Fragments":["65)"]},{"Key":"#\\A 65)","Fragments":[";"]},{"Key":"65) ;","Fragments":["\u003c="]},{"Key":"For reference,","Fragments":["strings"]},{"Key":"reference, strings","Fragments":["act"]},{"Key":"strings act","Fragments":["the"]},{"Key":"act the","Fragments":["same"]},{"Key":"same way.","Fragments":["They're"]},{"Key":"way. They're","Fragments":["just"]},{"Key":"They're just","Fragments":["\"pretty"]},{"Key":"just \"pretty","Fragments":["printed\""]},{"Key":"\"pretty printed\"","Fragments":["for"]},{"Key":"printed\" for","Fragments":["human-friendliness."]},{"Key":"(=:= \"ABC\"","Fragments":["(list"]},{"Key":"\"ABC\" (list","Fragments":["65"]},{"Key":"(list 65","Fragments":["66"]},{"Key":"65 66","Fragments":["67))"]},{"Key":"66 67))","Fragments":[";"]},{"Key":"67)) ;","Fragments":["\u003c="]},{"Key":" Pretty","Fragments":["cool,"]},{"Key":"Pretty cool,","Fragments":["would"]},{"Key":"cool, would","Fragments":["never"]},{"Key":"would never","Fragments":["have"]},{"Key":"never have","Fragments":["thought"]},{"Key":"have thought","Fragments":["to"]},{"Key":"thought to","Fragments":["do"]},{"Key":"to do","Fragments":["that.","it"]},{"Key":" this","Fragments":["actually"]},{"Key":"actually fails","Fragments":["to"]},{"Key":"fails to","Fragments":["compile,"]},{"Key":"to compile,","Fragments":["and"]},{"Key":"compile, and","Fragments":["I'm"]},{"Key":"and I'm","Fragments":["not"]},{"Key":"sure why.","Fragments":["Here's"]},{"Key":"why. Here's","Fragments":["the"]},{"Key":"Here's the","Fragments":["error:"]},{"Key":" ```ffdtm:leap","Fragments":["$"]},{"Key":"```ffdtm:leap $","Fragments":["rebar"]},{"Key":"$ rebar","Fragments":["compile"]},{"Key":" ==\u003e","Fragments":["lfe","lutil","color","ltest","leap","lfe","lutil","color","ltest","accumulate"]},{"Key":"==\u003e lfe","Fragments":["(compile)","(compile)"]},{"Key":"==\u003e lutil","Fragments":["(compile)","(compile)"]},{"Key":"==\u003e color","Fragments":["(compile)","(compile)"]},{"Key":"==\u003e ltest","Fragments":["(compile)","(compile)"]},{"Key":"==\u003e leap","Fragments":["(compile)"]},{"Key":" src/leap.lfe:4:","Fragments":["unbound","unbound"]},{"Key":"src/leap.lfe:4: unbound","Fragments":["function:","function:"]},{"Key":"unbound function:","Fragments":["#(=","#(="]},{"Key":"function: #(=","Fragments":["2)","2)","2)`"]},{"Key":" Compiling","Fragments":["src/leap.lfe","src/accumulate.lfe"]},{"Key":"Compiling src/leap.lfe","Fragments":["failed:"]},{"Key":" ERROR:","Fragments":["compile","compile"]},{"Key":"ERROR: compile","Fragments":["failed","failed"]},{"Key":"compile failed","Fragments":["while","while"]},{"Key":"failed while","Fragments":["processing","processing"]},{"Key":"while processing","Fragments":["~/exercism.io/lfe/leap:","/Users/floyd/Dropbox/Development/exercism.io/lfe/accumulate:"]},{"Key":"processing ~/exercism.io/lfe/leap:","Fragments":["rebar_abort"]},{"Key":"sure where","Fragments":["I'm"]},{"Key":"where I'm","Fragments":["going"]},{"Key":"I'm going","Fragments":["wrong,"]},{"Key":"going wrong,","Fragments":["and"]},{"Key":"wrong, and","Fragments":["not"]},{"Key":"and not","Fragments":["quite"]},{"Key":"how else","Fragments":["I"]},{"Key":"else I","Fragments":["can"]},{"Key":"can troubleshoot","Fragments":["it."]},{"Key":"troubleshoot it.","Fragments":["Any"]},{"Key":"it. Any","Fragments":["help"]},{"Key":"Any help","Fragments":["would"]},{"Key":"help would","Fragments":["be"]},{"Key":"This is","Fragments":["cross-posted"]},{"Key":"is cross-posted","Fragments":["to"]},{"Key":"cross-posted to","Fragments":["the"]},{"Key":"to the","Fragments":["LFE","elements","whole","fact","[LFE","latter,","LFE","passed","HyperSpec."]},{"Key":"the LFE","Fragments":["mailing","list,","mailing","docs","style"]},{"Key":"LFE mailing","Fragments":["list","list"]},{"Key":"mailing list","Fragments":["-","re:"]},{"Key":"list -","Fragments":["I"]},{"Key":"I didn't","Fragments":["realize","return"]},{"Key":"didn't realize","Fragments":["that"]},{"Key":"realize that","Fragments":["I"]},{"Key":"that I","Fragments":["could","have"]},{"Key":"I could","Fragments":["submit"]},{"Key":"could submit","Fragments":["non-working"]},{"Key":"submit non-working","Fragments":["code"]},{"Key":"non-working code","Fragments":["to"]},{"Key":"code to","Fragments":["exercism."]},{"Key":" changing","Fragments":["`=`"]},{"Key":"changing `=`","Fragments":["to"]},{"Key":"`=` to","Fragments":["`==`"]},{"Key":"to `==`","Fragments":["worked"]},{"Key":"`==` worked","Fragments":["-"]},{"Key":"worked -","Fragments":["the"]},{"Key":"- the","Fragments":["tests"]},{"Key":"the tests","Fragments":["pass."]},{"Key":"tests pass.","Fragments":["I"]},{"Key":"pass. I","Fragments":["saw"]},{"Key":"I saw","Fragments":["another"]},{"Key":"saw another","Fragments":["user's"]},{"Key":"another user's","Fragments":["solution,"]},{"Key":"user's solution,","Fragments":["and"]},{"Key":"solution, and","Fragments":["noticed"]},{"Key":"and noticed","Fragments":["that"]},{"Key":"noticed that","Fragments":["`==`"]},{"Key":"that `==`","Fragments":["was"]},{"Key":"`==` was","Fragments":["used"]},{"Key":"was used","Fragments":["-"]},{"Key":"used -","Fragments":["so"]},{"Key":"- so","Fragments":["pure"]},{"Key":"so pure","Fragments":["luck"]},{"Key":"pure luck","Fragments":["there."]},{"Key":"As Robert","Fragments":["mentioned"]},{"Key":"Robert mentioned","Fragments":["in"]},{"Key":"mentioned in","Fragments":["the"]},{"Key":"LFE list,","Fragments":["the"]},{"Key":"list, the","Fragments":["is"]},{"Key":"the is","Fragments":["not"]},{"Key":"not `#'=/2`","Fragments":["function"]},{"Key":"`#'=/2` function","Fragments":["thereby"]},{"Key":"function thereby","Fragments":["causing"]},{"Key":"thereby causing","Fragments":["the"]},{"Key":"causing the","Fragments":["`unbound"]},{"Key":"the `unbound","Fragments":["function:"]},{"Key":"`unbound function:","Fragments":["#(="]},{"Key":"#(= 2)`","Fragments":["error."]},{"Key":" `=`","Fragments":["is"]},{"Key":"`=` is","Fragments":["used"]},{"Key":"is used","Fragments":["in"]},{"Key":"used in","Fragments":["pattern"]},{"Key":"in pattern","Fragments":["matching"]},{"Key":"pattern matching","Fragments":["aliases,","and","and",":-)"]},{"Key":"matching aliases,","Fragments":["much"]},{"Key":"aliases, much","Fragments":["like"]},{"Key":"much like","Fragments":["[Haskell's"]},{"Key":"like [Haskell's","Fragments":["as-patterns][1]."]},{"Key":" (=","Fragments":["(tuple"]},{"Key":"(= (tuple","Fragments":["a"]},{"Key":"(tuple a","Fragments":["b"]},{"Key":"a b","Fragments":["c)"]},{"Key":"b c)","Fragments":["t)"]},{"Key":" In","Fragments":["this","my","your","order"]},{"Key":"In this","Fragments":["context,"]},{"Key":"this context,","Fragments":["`=`"]},{"Key":"context, `=`","Fragments":["means"]},{"Key":"`=` means","Fragments":["\"match"]},{"Key":"means \"match","Fragments":["that"]},{"Key":"\"match that","Fragments":["the"]},{"Key":"that the","Fragments":["data","former"]},{"Key":"the data","Fragments":["is"]},{"Key":"data is","Fragments":["a"]},{"Key":"is a","Fragments":["tuple","solid","multiple","multiple","multiple","multiple"]},{"Key":"a tuple","Fragments":["and"]},{"Key":"tuple and","Fragments":["bind"]},{"Key":"and bind","Fragments":["`a`,","`t`"]},{"Key":"bind `a`,","Fragments":["`b`"]},{"Key":"`a`, `b`","Fragments":["and"]},{"Key":"`b` and","Fragments":["`c`"]},{"Key":"and `c`","Fragments":["to"]},{"Key":"`c` to","Fragments":["the"]},{"Key":"the elements","Fragments":["and"]},{"Key":"elements and","Fragments":["bind"]},{"Key":"bind `t`","Fragments":["to"]},{"Key":"`t` to","Fragments":["the"]},{"Key":"the whole","Fragments":["tuple.\""]},{"Key":"The Haskell","Fragments":["analog:"]},{"Key":" t@(a,","Fragments":["b,"]},{"Key":"t@(a, b,","Fragments":["c)"]},{"Key":" To","Fragments":["[avoid"]},{"Key":"To [avoid","Fragments":["repeating"]},{"Key":"[avoid repeating","Fragments":["yourself][1],"]},{"Key":"repeating yourself][1],","Fragments":["you"]},{"Key":"yourself][1], you","Fragments":["might"]},{"Key":"you might","Fragments":["consider","rewrite","rework","accomplish"]},{"Key":"might consider","Fragments":["abstracting"]},{"Key":"consider abstracting","Fragments":["away"]},{"Key":"abstracting away","Fragments":["the"]},{"Key":"away the","Fragments":["repeated"]},{"Key":"the repeated","Fragments":["pattern:"]},{"Key":" (==","Fragments":["(rem"]},{"Key":"(== (rem","Fragments":["x"]},{"Key":"(rem x","Fragments":["y)"]},{"Key":"x y)","Fragments":["0)","(\u003e","(=\u003c"]},{"Key":"the feedback","Fragments":["(and"]},{"Key":"feedback (and","Fragments":["clarification)!"]},{"Key":" Check","Fragments":["out"]},{"Key":"Check out","Fragments":["[Robert's","[this","[section","[this"]},{"Key":"out [Robert's","Fragments":["thoughts][1]"]},{"Key":"[Robert's thoughts][1]","Fragments":["on"]},{"Key":"thoughts][1] on","Fragments":["the"]},{"Key":"on the","Fragments":["LFE","`let-function`","same","great","[HyperSpec][1]"]},{"Key":"list re:","Fragments":["`and`/`andalso`/`or`/`orelse`."]},{"Key":" Updated","Fragments":["syntax"]},{"Key":"Updated syntax","Fragments":["on"]},{"Key":"syntax on","Fragments":["line"]},{"Key":"on line","Fragments":["12","16.","6"]},{"Key":"line 12","Fragments":["to","would"]},{"Key":"12 to","Fragments":["use"]},{"Key":"use `(m:f","Fragments":["a)`","a)`"]},{"Key":"`(m:f a)`","Fragments":["vs","syntax,","syntax"]},{"Key":"a)` vs","Fragments":["`(:"]},{"Key":"vs `(:","Fragments":["m"]},{"Key":"`(: m","Fragments":["f","f"]},{"Key":"m f","Fragments":["a)`.","a)`,"]},{"Key":" @yasmeen:","Fragments":["yeah,","this"]},{"Key":"@yasmeen: yeah,","Fragments":["that"]},{"Key":"yeah, that","Fragments":["tends"]},{"Key":"that tends","Fragments":["to"]},{"Key":"tends to","Fragments":["be"]},{"Key":"to be","Fragments":["the","`(andalso","to"]},{"Key":"be the","Fragments":["Erlang/LFE"]},{"Key":"the Erlang/LFE","Fragments":["convention."]},{"Key":"@yasmeen: this","Fragments":["is"]},{"Key":"this is","Fragments":["possible","fun","such"]},{"Key":"is possible","Fragments":["due"]},{"Key":"possible due","Fragments":["to"]},{"Key":"due to","Fragments":["the"]},{"Key":"the fact","Fragments":["that"]},{"Key":"fact that","Fragments":["Erlang"]},{"Key":"that Erlang","Fragments":["has"]},{"Key":"Erlang has","Fragments":["a"]},{"Key":"has a","Fragments":["multi-pass","clear"]},{"Key":"a multi-pass","Fragments":["compiler,"]},{"Key":"multi-pass compiler,","Fragments":["so"]},{"Key":"compiler, so","Fragments":["order"]},{"Key":"so order","Fragments":["of"]},{"Key":"order of","Fragments":["code","your","specificity."]},{"Key":"of code","Fragments":["placed"]},{"Key":"code placed","Fragments":["in"]},{"Key":"placed in","Fragments":["files"]},{"Key":"in files","Fragments":["has"]},{"Key":"files has","Fragments":["no"]},{"Key":"has no","Fragments":["impact"]},{"Key":"no impact","Fragments":["on"]},{"Key":"impact on","Fragments":["if"]},{"Key":"on if","Fragments":["one"]},{"Key":"if one","Fragments":["function"]},{"Key":"one function","Fragments":["can"]},{"Key":"function can","Fragments":["see"]},{"Key":"can see","Fragments":["another.","this"]},{"Key":"I wonder","Fragments":["if"]},{"Key":"wonder if","Fragments":["there"]},{"Key":"if there","Fragments":["is"]},{"Key":"there is","Fragments":["any","`let-function`,"]},{"Key":"is any","Fragments":["canonical"]},{"Key":"any canonical","Fragments":["style"]},{"Key":"canonical style","Fragments":["of"]},{"Key":"style of","Fragments":["ordering"]},{"Key":"of ordering","Fragments":["your"]},{"Key":"ordering your","Fragments":["functions."]},{"Key":"In my","Fragments":["solution"]},{"Key":"my solution","Fragments":["the"]},{"Key":"solution the","Fragments":["exported"]},{"Key":"the exported","Fragments":["function"]},{"Key":"exported function","Fragments":["is"]},{"Key":"function is","Fragments":["first","named"]},{"Key":"is first","Fragments":["and"]},{"Key":"first and","Fragments":["the"]},{"Key":"and the","Fragments":["helper"]},{"Key":"the helper","Fragments":["function"]},{"Key":"helper function","Fragments":["follows;"]},{"Key":"function follows;","Fragments":["you"]},{"Key":"follows; you","Fragments":["chose"]},{"Key":"you chose","Fragments":["the"]},{"Key":"chose the","Fragments":["inverse"]},{"Key":"the inverse","Fragments":["order."]},{"Key":"I prefer","Fragments":["mine"]},{"Key":"prefer mine","Fragments":["because"]},{"Key":"mine because","Fragments":["it"]},{"Key":"because it","Fragments":["matches"]},{"Key":"it matches","Fragments":["how"]},{"Key":"matches how","Fragments":["I'd"]},{"Key":"how I'd","Fragments":["read"]},{"Key":"I'd read","Fragments":["the"]},{"Key":"read the","Fragments":["code"]},{"Key":"the code","Fragments":["but","on"]},{"Key":"code but","Fragments":["it's"]},{"Key":"but it's","Fragments":["obviously"]},{"Key":"it's obviously","Fragments":["a"]},{"Key":"obviously a","Fragments":["style"]},{"Key":"a style","Fragments":["question."]},{"Key":"I wondered","Fragments":["about"]},{"Key":"wondered about","Fragments":["that,"]},{"Key":"about that,","Fragments":["too"]},{"Key":"that, too","Fragments":["-"]},{"Key":"too -","Fragments":["good"]},{"Key":"- good","Fragments":["to"]},{"Key":"good to","Fragments":["know."]},{"Key":"great! I'm","Fragments":["glad"]},{"Key":"I'm glad","Fragments":["my"]},{"Key":"glad my","Fragments":["psuedocode"]},{"Key":"my psuedocode","Fragments":["pointed"]},{"Key":"psuedocode pointed","Fragments":["you"]},{"Key":"pointed you","Fragments":["in"]},{"Key":"you in","Fragments":["the"]},{"Key":" One","Fragments":["minor"]},{"Key":"One minor","Fragments":["nitpick,"]},{"Key":"minor nitpick,","Fragments":["the"]},{"Key":"nitpick, the","Fragments":["fold"]},{"Key":"the fold","Fragments":["in"]},{"Key":"fold in","Fragments":["`sum-of-multiples`"]},{"Key":"in `sum-of-multiples`","Fragments":["would"]},{"Key":"`sum-of-multiples` would","Fragments":["normally"]},{"Key":"would normally","Fragments":["be"]},{"Key":"normally be","Fragments":["indented"]},{"Key":"be indented","Fragments":["like"]},{"Key":"indented like","Fragments":["this:"]},{"Key":" (lambda","Fragments":["(x"]},{"Key":"(lambda (x","Fragments":["sum)"]},{"Key":"(if (any-multiple?","Fragments":["multiples","multiples"]},{"Key":"(any-multiple? multiples","Fragments":["x)","x)"]},{"Key":" (+","Fragments":["sum","sum"]},{"Key":"(+ sum","Fragments":["x)","x)"]},{"Key":" (lists:seq","Fragments":["1"]},{"Key":"(lists:seq 1","Fragments":["(-","(-"]},{"Key":"1 (-","Fragments":["limit","limit"]},{"Key":"(- limit","Fragments":["1)))","1))))"]},{"Key":" or","Fragments":["you"]},{"Key":"or you","Fragments":["could"]},{"Key":"do something","Fragments":["like"]},{"Key":"something like","Fragments":["this:"]},{"Key":";; Sorry","Fragments":["for"]},{"Key":"Sorry for","Fragments":["the"]},{"Key":"the terrible","Fragments":["function"]},{"Key":"terrible function","Fragments":["name..."]},{"Key":" (flet","Fragments":["((add-iff-any-multiple","((id","((divided-by?"]},{"Key":"(flet ((add-iff-any-multiple","Fragments":["(x"]},{"Key":"((add-iff-any-multiple (x","Fragments":["sum)"]},{"Key":" (lists:foldl","Fragments":["#'add-iff-any-multiple/2"]},{"Key":"(lists:foldl #'add-iff-any-multiple/2","Fragments":["0"]},{"Key":"#'add-iff-any-multiple/2 0","Fragments":["(lists:seq"]},{"Key":"0 (lists:seq","Fragments":["1"]},{"Key":" Solved","Fragments":["by"]},{"Key":"Solved by","Fragments":["guessing"]},{"Key":"by guessing","Fragments":["and"]},{"Key":"guessing and","Fragments":["furious"]},{"Key":"and furious","Fragments":["googling."]},{"Key":"The book","Fragments":["(http://lfe.gitbooks.io/reference-guide/)"]},{"Key":"book (http://lfe.gitbooks.io/reference-guide/)","Fragments":["seems"]},{"Key":"(http://lfe.gitbooks.io/reference-guide/) seems","Fragments":["to"]},{"Key":"seems to","Fragments":["say","be"]},{"Key":"to say","Fragments":["there"]},{"Key":"say there","Fragments":["is"]},{"Key":"is `let-function`,","Fragments":["and"]},{"Key":"`let-function`, and","Fragments":["`flet`."]},{"Key":"and `flet`.","Fragments":["Is"]},{"Key":"`flet`. Is","Fragments":["one"]},{"Key":"Is one","Fragments":["better"]},{"Key":"one better","Fragments":["than"]},{"Key":"better than","Fragments":["the"]},{"Key":"than the","Fragments":["other","former."]},{"Key":"the other","Fragments":["in","languages."]},{"Key":"other in","Fragments":["some"]},{"Key":"in some","Fragments":["way?"]},{"Key":"I am","Fragments":["personally"]},{"Key":"am personally","Fragments":["undecided"]},{"Key":"personally undecided","Fragments":["about"]},{"Key":"undecided about","Fragments":["closing"]},{"Key":"about closing","Fragments":["over"]},{"Key":"closing over","Fragments":["`year`","`year`,","``year``:"]},{"Key":"over `year`","Fragments":["in"]},{"Key":"`year` in","Fragments":["`divisible-by`"]},{"Key":"in `divisible-by`","Fragments":["-"]},{"Key":"`divisible-by` -","Fragments":["what"]},{"Key":"- what","Fragments":["do"]},{"Key":"what do","Fragments":["people"]},{"Key":"do people","Fragments":["think?"]},{"Key":" I'll","Fragments":["have"]},{"Key":"I'll have","Fragments":["to"]},{"Key":"have to","Fragments":["defer","change","traverse","do"]},{"Key":"to defer","Fragments":["to"]},{"Key":"defer to","Fragments":["@jaquelin"]},{"Key":"to @jaquelin","Fragments":["on"]},{"Key":"@jaquelin on","Fragments":["the"]},{"Key":"the `let-function`","Fragments":["vs"]},{"Key":"`let-function` vs","Fragments":["`flet`"]},{"Key":"vs `flet`","Fragments":["question,"]},{"Key":"`flet` question,","Fragments":["though"]},{"Key":"question, though","Fragments":["a"]},{"Key":"though a","Fragments":["quick"]},{"Key":"a quick","Fragments":["dive"]},{"Key":"quick dive","Fragments":["in"]},{"Key":"dive in","Fragments":["to"]},{"Key":"in to","Fragments":["the"]},{"Key":"the [LFE","Fragments":["source"]},{"Key":"[LFE source","Fragments":["code][1]"]},{"Key":"source code][1]","Fragments":["leads"]},{"Key":"code][1] leads","Fragments":["me"]},{"Key":"leads me","Fragments":["to"]},{"Key":"me to","Fragments":["believe"]},{"Key":"to believe","Fragments":["they're"]},{"Key":"believe they're","Fragments":["synonyms."]},{"Key":"As for","Fragments":["closing"]},{"Key":"for closing","Fragments":["over","over"]},{"Key":"over `year`,","Fragments":["I"]},{"Key":"`year`, I","Fragments":["think"]},{"Key":"think it's","Fragments":["a","a"]},{"Key":"it's a","Fragments":["fine","great","Lisp,"]},{"Key":"a fine","Fragments":["choice"]},{"Key":"fine choice","Fragments":["in"]},{"Key":"choice in","Fragments":["the"]},{"Key":"the this","Fragments":["case."]},{"Key":" ``flet``","Fragments":["is"]},{"Key":"``flet`` is","Fragments":["probably","perfect"]},{"Key":"is probably","Fragments":["the"]},{"Key":"probably the","Fragments":["way"]},{"Key":"the way","Fragments":["to","you"]},{"Key":"way to","Fragments":["go"]},{"Key":"to go","Fragments":["in","with"]},{"Key":"go in","Fragments":["the"]},{"Key":"same sense","Fragments":["that"]},{"Key":"sense that","Fragments":["``defun``"]},{"Key":"that ``defun``","Fragments":["is"]},{"Key":"``defun`` is","Fragments":["preferred"]},{"Key":"is preferred","Fragments":["over","over"]},{"Key":"preferred over","Fragments":["``define``","`(fun"]},{"Key":"over ``define``","Fragments":["in"]},{"Key":"``define`` in","Fragments":["LFE."]},{"Key":"in LFE.","Fragments":["You","This","That"]},{"Key":"LFE. You","Fragments":["can"]},{"Key":"You can","Fragments":["use","(read:"]},{"Key":"can use","Fragments":["either,"]},{"Key":"use either,","Fragments":["and"]},{"Key":"either, and","Fragments":["old"]},{"Key":"and old","Fragments":["Schemers"]},{"Key":"old Schemers","Fragments":["pay"]},{"Key":"Schemers pay","Fragments":["prefer"]},{"Key":"pay prefer","Fragments":["``let-function``,"]},{"Key":"prefer ``let-function``,","Fragments":["since"]},{"Key":"``let-function``, since","Fragments":["it"]},{"Key":"since it","Fragments":["uses"]},{"Key":"it uses","Fragments":["``lambda``"]},{"Key":"uses ``lambda``","Fragments":["to"]},{"Key":"``lambda`` to","Fragments":["define"]},{"Key":"to define","Fragments":["the","`mapcar`","different","base","cases"]},{"Key":"define the","Fragments":["function"]},{"Key":"function (it","Fragments":["will"]},{"Key":"(it will","Fragments":["feel"]},{"Key":"will feel","Fragments":["quite"]},{"Key":"feel quite","Fragments":["comfortable"]},{"Key":"quite comfortable","Fragments":["to"]},{"Key":"comfortable to","Fragments":["them)."]},{"Key":" An","Fragments":["identity"]},{"Key":"An identity","Fragments":["``flet``:"]},{"Key":"(flet ((id","Fragments":["(x)"]},{"Key":"((id (x)","Fragments":["x))","x))"]},{"Key":"(x) x))","Fragments":["(id","(id"]},{"Key":"x)) (id","Fragments":["'a))","'a))"]},{"Key":"The same","Fragments":["as"]},{"Key":"same as","Fragments":["a"]},{"Key":" (let-function","Fragments":["((id","((id"]},{"Key":"(let-function ((id","Fragments":["(lambda","(lambda"]},{"Key":"((id (lambda","Fragments":["(x)","(x)"]},{"Key":"(lambda (x)","Fragments":["x)))","x)))"]},{"Key":"(x) x)))","Fragments":["(id","(id"]},{"Key":"x))) (id","Fragments":["'a))","'a))"]},{"Key":" Note","Fragments":["that"]},{"Key":"Note that","Fragments":["the"]},{"Key":"the former","Fragments":["expands"]},{"Key":"former expands","Fragments":["to"]},{"Key":"expands to","Fragments":["the"]},{"Key":"the latter,","Fragments":["and"]},{"Key":"latter, and","Fragments":["you"]},{"Key":"and you","Fragments":["can"]},{"Key":"see this","Fragments":["in"]},{"Key":"this in","Fragments":["action"]},{"Key":"in action","Fragments":["in"]},{"Key":"action in","Fragments":["the"]},{"Key":"the REPL","Fragments":["by"]},{"Key":"REPL by","Fragments":["calling"]},{"Key":"by calling","Fragments":["``macroexpand``:"]},{"Key":"\u003e (macroexpand","Fragments":["'(flet"]},{"Key":"(macroexpand '(flet","Fragments":["((id"]},{"Key":"'(flet ((id","Fragments":["(x)"]},{"Key":"(id 'a))","Fragments":["$ENV)"]},{"Key":" Update:","Fragments":["as","I've"]},{"Key":"Update: as","Fragments":["for"]},{"Key":"as for","Fragments":["closing"]},{"Key":"over ``year``:","Fragments":["that's"]},{"Key":"``year``: that's","Fragments":["exactly"]},{"Key":"that's exactly","Fragments":["the"]},{"Key":"exactly the","Fragments":["sort"]},{"Key":"the sort","Fragments":["of"]},{"Key":"sort of","Fragments":["use"]},{"Key":"of use","Fragments":["that"]},{"Key":"use that","Fragments":["``flet``"]},{"Key":"that ``flet``","Fragments":["is"]},{"Key":"is perfect","Fragments":["for"]},{"Key":"perfect for","Fragments":["--"]},{"Key":"for --","Fragments":["I"]},{"Key":"-- I","Fragments":["think"]},{"Key":"a great","Fragments":["choice"]},{"Key":"great choice","Fragments":["here."]},{"Key":"\u003e It","Fragments":["seems"]},{"Key":"of `defun`","Fragments":["if"]},{"Key":"`defun` if","Fragments":["I"]},{"Key":"\u003e I","Fragments":["also","think"]},{"Key":"I also","Fragments":["notice","tend","notice"]},{"Key":"also notice","Fragments":["in","in"]},{"Key":"notice in","Fragments":["the","the"]},{"Key":"the reference","Fragments":["manual","manual"]},{"Key":"reference manual","Fragments":["that","that"]},{"Key":"manual that","Fragments":["there","there"]},{"Key":"that there","Fragments":["are","are"]},{"Key":"there are","Fragments":["`andalso`","`andalso`"]},{"Key":"are `andalso`","Fragments":["and","and"]},{"Key":"`andalso` and","Fragments":["`orelse`","`orelse`","`orelse`","`or`"]},{"Key":"and `orelse`","Fragments":["macros.","are","macros."]},{"Key":"`orelse` macros.","Fragments":["Are","Are"]},{"Key":"macros. Are","Fragments":["these","these"]},{"Key":"Are these","Fragments":["different","different"]},{"Key":"these different","Fragments":["from","from"]},{"Key":"different from","Fragments":["the","the"]},{"Key":"the `and`","Fragments":["and","and"]},{"Key":"`and` and","Fragments":["`or`","`or`,","`or`"]},{"Key":"and `or`","Fragments":["used","used","vs"]},{"Key":"`or` used","Fragments":["here?","here?"]},{"Key":" `andalso`","Fragments":["and"]},{"Key":"`orelse` are","Fragments":["true"]},{"Key":"are true","Fragments":["to"]},{"Key":"true to","Fragments":["their"]},{"Key":"their Erlang","Fragments":["analogs"]},{"Key":"Erlang analogs","Fragments":["and"]},{"Key":"analogs and","Fragments":["are"]},{"Key":"and are","Fragments":["normal-order/short-circuiting,"]},{"Key":"are normal-order/short-circuiting,","Fragments":["while"]},{"Key":"normal-order/short-circuiting, while","Fragments":["`and`"]},{"Key":"while `and`","Fragments":["and"]},{"Key":"and `or`,","Fragments":["in"]},{"Key":"`or`, in","Fragments":["contrast"]},{"Key":"in contrast","Fragments":["to"]},{"Key":"contrast to","Fragments":["other"]},{"Key":"to other","Fragments":["Lisps,"]},{"Key":"other Lisps,","Fragments":["are"]},{"Key":"Lisps, are","Fragments":["applicative-order."]},{"Key":"are applicative-order.","Fragments":["(Correct"]},{"Key":"applicative-order. (Correct","Fragments":["me"]},{"Key":"(Correct me","Fragments":["if"]},{"Key":"me if","Fragments":["I'm"]},{"Key":"if I'm","Fragments":["wrong,"]},{"Key":"I'm wrong,","Fragments":["@gussie)"]},{"Key":"\u003e The","Fragments":["name"]},{"Key":"name leap-year","Fragments":["is"]},{"Key":"leap-year is","Fragments":["not"]},{"Key":"agree, it's","Fragments":["not"]},{"Key":"it's not","Fragments":["the","a"]},{"Key":"not the","Fragments":["best"]},{"Key":"the best","Fragments":["in","ways"]},{"Key":"best in","Fragments":["LFE."]},{"Key":"LFE. This","Fragments":["general"]},{"Key":"This general","Fragments":["issue"]},{"Key":"general issue","Fragments":["has"]},{"Key":"issue has","Fragments":["come"]},{"Key":"has come","Fragments":["up"]},{"Key":"up a","Fragments":["couple"]},{"Key":"a couple","Fragments":["times"]},{"Key":"couple times","Fragments":["now"]},{"Key":"times now","Fragments":["and"]},{"Key":"now and","Fragments":["I"]},{"Key":"and I","Fragments":["lean"]},{"Key":"I lean","Fragments":["toward"]},{"Key":"lean toward","Fragments":["renaming"]},{"Key":"toward renaming","Fragments":["things"]},{"Key":"renaming things","Fragments":["more"]},{"Key":"things more","Fragments":["LFE-y."]},{"Key":" Speaking","Fragments":["of"]},{"Key":"Speaking of","Fragments":["naming"]},{"Key":"of naming","Fragments":["things,"]},{"Key":"naming things,","Fragments":["I"]},{"Key":"things, I","Fragments":["tend"]},{"Key":"prefer `divides?`","Fragments":["for"]},{"Key":"`divides?` for","Fragments":["your"]},{"Key":"for your","Fragments":["`divided-by?`"]},{"Key":"your `divided-by?`","Fragments":["predicate."]},{"Key":" By","Fragments":["the"]},{"Key":"By the","Fragments":["way,"]},{"Key":"the way,","Fragments":["I"]},{"Key":"way, I","Fragments":["love"]},{"Key":"I love","Fragments":["your"]},{"Key":"love your","Fragments":["guard"]},{"Key":"your guard","Fragments":["and"]},{"Key":"guard and","Fragments":["hadn't"]},{"Key":"and hadn't","Fragments":["thought"]},{"Key":"hadn't thought","Fragments":["of","of"]},{"Key":"thought of","Fragments":["that","doing"]},{"Key":"of that","Fragments":["before."]},{"Key":"couple personal","Fragments":["preference/style"]},{"Key":"personal preference/style","Fragments":["points:"]},{"Key":"to put","Fragments":["guards"]},{"Key":"put guards","Fragments":["on"]},{"Key":"guards on","Fragments":["the"]},{"Key":"same line","Fragments":["as"]},{"Key":"line as","Fragments":["the"]},{"Key":"as the","Fragments":["args","errors"]},{"Key":"the args","Fragments":["list,"]},{"Key":"args list,","Fragments":["as"]},{"Key":"list, as","Fragments":["in:"]},{"Key":" ([x","Fragments":["y"]},{"Key":"([x y","Fragments":["z]"]},{"Key":"y z]","Fragments":["(when"]},{"Key":"z] (when","Fragments":["(andalso"]},{"Key":"(when (andalso","Fragments":["(\u003e"]},{"Key":"(andalso (\u003e","Fragments":["x"]},{"Key":"(\u003e x","Fragments":["y)"]},{"Key":"y) (\u003e","Fragments":["y"]},{"Key":"(\u003e y","Fragments":["z)))"]},{"Key":"also tend","Fragments":["to"]},{"Key":"to inline","Fragments":["short"]},{"Key":"inline short","Fragments":["functions,"]},{"Key":"short functions,","Fragments":["as"]},{"Key":"functions, as","Fragments":["in:"]},{"Key":"(flet ((divided-by?","Fragments":["(n)"]},{"Key":"((divided-by? (n)","Fragments":["(=="]},{"Key":"(n) (==","Fragments":["0"]},{"Key":"(== 0","Fragments":["(rem"]},{"Key":"0 (rem","Fragments":["year"]},{"Key":"(rem year","Fragments":["n))))"]},{"Key":"few questions","Fragments":["regarding"]},{"Key":"I like","Fragments":["the","the","to","your","how","the"]},{"Key":"the `(m:f","Fragments":["a)`"]},{"Key":"a)` syntax,","Fragments":["and"]},{"Key":"syntax, and","Fragments":["`lambda-match`"]},{"Key":"and `lambda-match`","Fragments":["is"]},{"Key":"`lambda-match` is","Fragments":["cool"]},{"Key":"is cool","Fragments":[":-)"]},{"Key":"The modern","Fragments":["convention"]},{"Key":"modern convention","Fragments":["is"]},{"Key":"convention is","Fragments":["to"]},{"Key":"is to","Fragments":["use","*filter*"]},{"Key":"a)` syntax","Fragments":["instead"]},{"Key":"syntax instead","Fragments":["of"]},{"Key":"instead of","Fragments":["`(:","``lc``"]},{"Key":"of `(:","Fragments":["m"]},{"Key":"f a)`,","Fragments":["so"]},{"Key":"a)`, so","Fragments":["line"]},{"Key":"so line","Fragments":["12"]},{"Key":"12 would","Fragments":["look"]},{"Key":"would look","Fragments":["like:"]},{"Key":" (lists:map","Fragments":["#'day-\u003erna/1","(match-lambda"]},{"Key":"(lists:map #'day-\u003erna/1","Fragments":["dna)"]},{"Key":" Other","Fragments":["than"]},{"Key":"Other than","Fragments":["that,"]},{"Key":"than that,","Fragments":["this"]},{"Key":"that, this","Fragments":["looks"]},{"Key":"this looks","Fragments":["great."]},{"Key":"looks great.","Fragments":["`#'function-name/arity`"]},{"Key":"great. `#'function-name/arity`","Fragments":["is"]},{"Key":"`#'function-name/arity` is","Fragments":["preferred"]},{"Key":"over `(fun","Fragments":["function-name"]},{"Key":"`(fun function-name","Fragments":["arity)`"]},{"Key":"function-name arity)`","Fragments":["so"]},{"Key":"arity)` so","Fragments":["you've"]},{"Key":"so you've","Fragments":["already"]},{"Key":"you've already","Fragments":["got"]},{"Key":"already got","Fragments":["that"]},{"Key":"got that","Fragments":["down."]},{"Key":"the use","Fragments":["of"]},{"Key":"use of","Fragments":["pattern","pattern"]},{"Key":"of pattern","Fragments":["matching","matching"]},{"Key":"matching and","Fragments":["character","character"]},{"Key":"and character","Fragments":["literals","literals"]},{"Key":"literals in","Fragments":["particular."]},{"Key":"+1 on","Fragments":["the"]},{"Key":"the great","Fragments":["use"]},{"Key":"great use","Fragments":["of"]},{"Key":"to update","Fragments":["that"]},{"Key":"update that","Fragments":["docs"]},{"Key":"that docs","Fragments":["page"]},{"Key":"docs page","Fragments":["to"]},{"Key":"page to","Fragments":["use"]},{"Key":"the latest","Fragments":["syntax,"]},{"Key":"latest syntax,","Fragments":["so"]},{"Key":"syntax, so","Fragments":["it"]},{"Key":"so it","Fragments":["doesn't"]},{"Key":"it doesn't","Fragments":["lead"]},{"Key":"doesn't lead","Fragments":["folks"]},{"Key":"lead folks","Fragments":["astray"]},{"Key":"folks astray","Fragments":["..."]},{"Key":" Silly","Fragments":["idea:"]},{"Key":"Silly idea:","Fragments":["in"]},{"Key":"idea: in","Fragments":["keeping"]},{"Key":"in keeping","Fragments":["with"]},{"Key":"keeping with","Fragments":["the"]},{"Key":"the ``-\u003e``","Fragments":["naming"]},{"Key":"``-\u003e`` naming","Fragments":["convention"]},{"Key":"naming convention","Fragments":["you've"]},{"Key":"convention you've","Fragments":["established"]},{"Key":"you've established","Fragments":["in"]},{"Key":"established in","Fragments":["``dna-\u003erna``,"]},{"Key":"in ``dna-\u003erna``,","Fragments":["I"]},{"Key":"``dna-\u003erna``, I","Fragments":["might"]},{"Key":"might rename","Fragments":["``to-rna``"]},{"Key":"rename ``to-rna``","Fragments":["as"]},{"Key":"``to-rna`` as","Fragments":["``-\u003erna``"]},{"Key":"as ``-\u003erna``","Fragments":["--"]},{"Key":"``-\u003erna`` --","Fragments":["it's"]},{"Key":"-- it's","Fragments":["a"]},{"Key":"a Lisp,","Fragments":["go"]},{"Key":"Lisp, go","Fragments":["crazy"]},{"Key":"go crazy","Fragments":["with"]},{"Key":"crazy with","Fragments":["the"]},{"Key":"Update: I've","Fragments":["pushed"]},{"Key":"I've pushed","Fragments":["up"]},{"Key":"pushed up","Fragments":["changes"]},{"Key":"up changes","Fragments":["to"]},{"Key":"changes to","Fragments":["the"]},{"Key":"LFE docs","Fragments":["(in"]},{"Key":"docs (in","Fragments":["particular,"]},{"Key":"(in particular,","Fragments":["the"]},{"Key":"particular, the","Fragments":["page"]},{"Key":"the page","Fragments":["you"]},{"Key":"page you","Fragments":["linked"]},{"Key":"linked in","Fragments":["your"]},{"Key":"in your","Fragments":["example)","`filter-multiples`"]},{"Key":"your example)","Fragments":["to"]},{"Key":"example) to","Fragments":["reflect"]},{"Key":"to reflect","Fragments":["the"]},{"Key":"reflect the","Fragments":["current"]},{"Key":"the current","Fragments":["recommended"]},{"Key":"current recommended","Fragments":["call"]},{"Key":"recommended call","Fragments":["syntax"]},{"Key":"call syntax","Fragments":["of"]},{"Key":"syntax of","Fragments":["``(mod:func"]},{"Key":"of ``(mod:func","Fragments":["...)``"]},{"Key":" @diana,","Fragments":["[the"]},{"Key":"@diana, [the","Fragments":["tests][1]"]},{"Key":"[the tests][1]","Fragments":["expect"]},{"Key":"tests][1] expect","Fragments":["`rna-transcription:to-rna`"]},{"Key":"expect `rna-transcription:to-rna`","Fragments":["so"]},{"Key":"`rna-transcription:to-rna` so","Fragments":["we'd"]},{"Key":"so we'd","Fragments":["have"]},{"Key":"we'd have","Fragments":["to"]},{"Key":"to change","Fragments":["that"]},{"Key":"change that","Fragments":["too"]},{"Key":"that too","Fragments":["and"]},{"Key":"too and","Fragments":["it"]},{"Key":"and it","Fragments":["would"]},{"Key":"it would","Fragments":["set"]},{"Key":"would set","Fragments":["LFE"]},{"Key":"set LFE","Fragments":["apart"]},{"Key":"LFE apart","Fragments":["from"]},{"Key":"apart from","Fragments":["the"]},{"Key":"other languages.","Fragments":["I'm"]},{"Key":"languages. I'm","Fragments":["into"]},{"Key":"I'm into","Fragments":["it"]},{"Key":"into it","Fragments":["though."]},{"Key":"like to","Fragments":["split"]},{"Key":"to split","Fragments":["functions"]},{"Key":"split functions","Fragments":["out"]},{"Key":"functions out","Fragments":["like"]},{"Key":"out like","Fragments":["you"]},{"Key":"like you","Fragments":["did"]},{"Key":"you did","Fragments":["here,","--"]},{"Key":"did here,","Fragments":["but"]},{"Key":"here, but","Fragments":["I"]},{"Key":"I thought","Fragments":["I'd"]},{"Key":"thought I'd","Fragments":["take"]},{"Key":"I'd take","Fragments":["this"]},{"Key":"take this","Fragments":["opportunity"]},{"Key":"this opportunity","Fragments":["to"]},{"Key":"opportunity to","Fragments":["show"]},{"Key":"to show","Fragments":["off"]},{"Key":"show off","Fragments":["a"]},{"Key":"off a","Fragments":["unique"]},{"Key":"a unique","Fragments":["feature"]},{"Key":"unique feature","Fragments":["of"]},{"Key":"feature of","Fragments":["LFE:"]},{"Key":"of LFE:","Fragments":["it's"]},{"Key":"LFE: it's","Fragments":["``lambda``s"]},{"Key":"it's ``lambda``s","Fragments":["have"]},{"Key":"``lambda``s have","Fragments":["pattern"]},{"Key":"have pattern","Fragments":["matching"]},{"Key":"So you","Fragments":["*could*"]},{"Key":"you *could*","Fragments":["do"]},{"Key":"*could* do","Fragments":["this"]},{"Key":"do this","Fragments":["if"]},{"Key":"this if","Fragments":["you"]},{"Key":"if you","Fragments":["wanted","had","reversed"]},{"Key":"you wanted","Fragments":["to:"]},{"Key":"(defun -\u003erna","Fragments":["(dna)"]},{"Key":" ((#\\G)","Fragments":["#\\C)"]},{"Key":" ((#\\C)","Fragments":["#\\G)"]},{"Key":" ((#\\T)","Fragments":["#\\A)"]},{"Key":" ((#\\A)","Fragments":["#\\U))"]},{"Key":"\u003e (-\u003erna","Fragments":["\"GATTACA\")"]},{"Key":" Again,","Fragments":["I'd"]},{"Key":"Again, I'd","Fragments":["write"]},{"Key":"I'd write","Fragments":["mine"]},{"Key":"write mine","Fragments":["the"]},{"Key":"mine the","Fragments":["way"]},{"Key":"way you","Fragments":["did"]},{"Key":"did --","Fragments":["but"]},{"Key":"-- but","Fragments":["this"]},{"Key":"but this","Fragments":["is","is"]},{"Key":"is fun","Fragments":["too"]},{"Key":"fun too","Fragments":[":-)"]},{"Key":" Consider","Fragments":["using","how"]},{"Key":"Consider using","Fragments":["names"]},{"Key":"using names","Fragments":["that"]},{"Key":"names that","Fragments":["describe"]},{"Key":"that describe","Fragments":["*what*"]},{"Key":"describe *what*","Fragments":["they"]},{"Key":"*what* they","Fragments":["do"]},{"Key":"they do","Fragments":["not","it."]},{"Key":"do not","Fragments":["*how*"]},{"Key":"not *how*","Fragments":["they"]},{"Key":"*how* they","Fragments":["do"]},{"Key":"do it.","Fragments":["`rem-is-zero?`"]},{"Key":"it. `rem-is-zero?`","Fragments":["is"]},{"Key":"`rem-is-zero?` is","Fragments":["more"]},{"Key":"is more","Fragments":["the"]},{"Key":"more the","Fragments":["latter"]},{"Key":"the latter","Fragments":["than"]},{"Key":"latter than","Fragments":["the"]},{"Key":" Yeah,","Fragments":["I"]},{"Key":"Yeah, I","Fragments":["struggled"]},{"Key":"I struggled","Fragments":["with"]},{"Key":"struggled with","Fragments":["the"]},{"Key":"the name","Fragments":["here;"]},{"Key":"name here;","Fragments":["reminds"]},{"Key":"here; reminds","Fragments":["me"]},{"Key":"reminds me","Fragments":["of"]},{"Key":"me of","Fragments":["this:"]},{"Key":"For this","Fragments":["function"]},{"Key":"this function","Fragments":["I"]},{"Key":"function I","Fragments":["tend"]},{"Key":"go with","Fragments":["[`divides?`][1]."]},{"Key":" DRY'd","Fragments":["it"]},{"Key":"DRY'd it","Fragments":["off"]},{"Key":"it off","Fragments":["with"]},{"Key":"off with","Fragments":["a"]},{"Key":"a modulo","Fragments":["function."]},{"Key":"Since `accumulate/2`","Fragments":["and"]},{"Key":"`accumulate/2` and","Fragments":["`do-accumulate/3`","then"]},{"Key":"and `do-accumulate/3`","Fragments":["have"]},{"Key":"`do-accumulate/3` have","Fragments":["different"]},{"Key":"have different","Fragments":["arities,"]},{"Key":"different arities,","Fragments":["you"]},{"Key":"arities, you","Fragments":["could"]},{"Key":"could rename","Fragments":["`do-accumulate`"]},{"Key":"rename `do-accumulate`","Fragments":["to"]},{"Key":"`do-accumulate` to","Fragments":["`accumulate`,"]},{"Key":"to `accumulate`,","Fragments":["thereby"]},{"Key":"`accumulate`, thereby","Fragments":["defining"]},{"Key":"thereby defining","Fragments":["`accumulate/2`"]},{"Key":"defining `accumulate/2`","Fragments":["as"]},{"Key":"`accumulate/2` as","Fragments":["well"]},{"Key":"as well","Fragments":["as"]},{"Key":"well as","Fragments":["`accumulate/3`."]},{"Key":" `mapcar/2`","Fragments":["is"]},{"Key":"`mapcar/2` is","Fragments":["undefined"]},{"Key":"is undefined","Fragments":["as"]},{"Key":"undefined as","Fragments":["is"]},{"Key":"as is","Fragments":["`f/1`"]},{"Key":"is `f/1`","Fragments":["therefore"]},{"Key":"`f/1` therefore","Fragments":["this"]},{"Key":"therefore this","Fragments":["code"]},{"Key":"this code","Fragments":["can't"]},{"Key":"code can't","Fragments":["run."]},{"Key":" Assuming","Fragments":["`mapcar/2`"]},{"Key":"Assuming `mapcar/2`","Fragments":["was"]},{"Key":"`mapcar/2` was","Fragments":["defined,"]},{"Key":"was defined,","Fragments":["you"]},{"Key":"defined, you","Fragments":["would"]},{"Key":"you would","Fragments":["refer","refer"]},{"Key":"would refer","Fragments":["to","to"]},{"Key":"refer to","Fragments":["the","it"]},{"Key":"the passed","Fragments":["function"]},{"Key":"passed function","Fragments":["`f`"]},{"Key":"function `f`","Fragments":["simply"]},{"Key":"`f` simply","Fragments":["as"]},{"Key":"simply as","Fragments":["`f`"]},{"Key":"as `f`","Fragments":["not"]},{"Key":"`f` not","Fragments":["`#'f/1`."]},{"Key":"not `#'f/1`.","Fragments":["On"]},{"Key":"`#'f/1`. On","Fragments":["the"]},{"Key":"On the","Fragments":["hand,"]},{"Key":"the hand,","Fragments":["if"]},{"Key":"hand, if","Fragments":["you"]},{"Key":"you had","Fragments":["defined"]},{"Key":"had defined","Fragments":["`f`"]},{"Key":"defined `f`","Fragments":["like"]},{"Key":"`f` like","Fragments":["this:"]},{"Key":"... you","Fragments":["would"]},{"Key":"to it","Fragments":["as"]},{"Key":"it as","Fragments":["`#'f/1`."]},{"Key":"You could,","Fragments":["however,"]},{"Key":"could, however,","Fragments":["redefine"]},{"Key":"however, redefine","Fragments":["`accumulate`"]},{"Key":"redefine `accumulate`","Fragments":["as"]},{"Key":"`accumulate` as","Fragments":["follows:"]},{"Key":"(defun accumulate","Fragments":["(f"]},{"Key":"accumulate (f","Fragments":["lst)"]},{"Key":" (mapcar","Fragments":["f"]},{"Key":"(mapcar f","Fragments":["lst))"]},{"Key":"... then","Fragments":["implement"]},{"Key":"then implement","Fragments":["a"]},{"Key":"a fixed","Fragments":["arity"]},{"Key":"fixed arity","Fragments":["`mapcar`"]},{"Key":"arity `mapcar`","Fragments":["based"]},{"Key":"`mapcar` based","Fragments":["on"]},{"Key":"based on","Fragments":["the","recent"]},{"Key":"the [HyperSpec][1]","Fragments":["using"]},{"Key":"[HyperSpec][1] using","Fragments":["pattern"]},{"Key":"using pattern","Fragments":["matching:"]},{"Key":";; If","Fragments":["the"]},{"Key":"the given","Fragments":["list"]},{"Key":"given list","Fragments":["is"]},{"Key":"list is","Fragments":["the"]},{"Key":"is the","Fragments":["empty","root","root","root"]},{"Key":"the empty","Fragments":["list,","list","list"]},{"Key":"empty list,","Fragments":["return"]},{"Key":"list, return","Fragments":["it."]},{"Key":" ([f","Fragments":["'()]","lst]"]},{"Key":"([f '()]","Fragments":["'())"]},{"Key":";; Otherwise,","Fragments":["perform"]},{"Key":"Otherwise, perform","Fragments":["`mapcar`"]},{"Key":"perform `mapcar`","Fragments":["according"]},{"Key":"`mapcar` according","Fragments":["to"]},{"Key":"according to","Fragments":["the"]},{"Key":"([f lst]","Fragments":["...))"]},{"Key":" Though","Fragments":["the","it's"]},{"Key":"Though the","Fragments":["point"]},{"Key":"the point","Fragments":["of"]},{"Key":"point of","Fragments":["this"]},{"Key":"of this","Fragments":["exercise"]},{"Key":"this exercise","Fragments":["is"]},{"Key":"exercise is","Fragments":["basically"]},{"Key":"is basically","Fragments":["to"]},{"Key":"basically to","Fragments":["define"]},{"Key":"define `mapcar`","Fragments":["and"]},{"Key":"`mapcar` and","Fragments":["call"]},{"Key":"and call","Fragments":["it"]},{"Key":"call it","Fragments":["`accumulate`."]},{"Key":"I submitted","Fragments":["the"]},{"Key":"submitted the","Fragments":["wrong"]},{"Key":"the wrong","Fragments":["code"]},{"Key":"wrong code","Fragments":["-"]},{"Key":"code -","Fragments":["was"]},{"Key":"- was","Fragments":["playing"]},{"Key":"was playing","Fragments":["around"]},{"Key":"playing around","Fragments":["after"]},{"Key":"around after","Fragments":["my"]},{"Key":"after my","Fragments":["tests"]},{"Key":"my tests","Fragments":["passed."]},{"Key":" Makes","Fragments":["sense."]},{"Key":" Running","Fragments":["into"]},{"Key":"Running into","Fragments":["an"]},{"Key":"into an","Fragments":["issue"]},{"Key":"an issue","Fragments":["here"]},{"Key":"issue here","Fragments":["-"]},{"Key":"here -","Fragments":["each"]},{"Key":"- each","Fragments":["completed"]},{"Key":"each completed","Fragments":["function"]},{"Key":"completed function","Fragments":["passes"]},{"Key":"function passes","Fragments":["their"]},{"Key":"passes their","Fragments":["respective"]},{"Key":"their respective","Fragments":["tests,"]},{"Key":"respective tests,","Fragments":["but"]},{"Key":"tests, but","Fragments":["I"]},{"Key":"can only","Fragments":["compile"]},{"Key":"only compile","Fragments":["one"]},{"Key":"compile one","Fragments":["at"]},{"Key":"one at","Fragments":["a"]},{"Key":"this error","Fragments":["when"]},{"Key":"error when","Fragments":["trying"]},{"Key":"when trying","Fragments":["to"]},{"Key":"to compile","Fragments":["with"]},{"Key":"compile with","Fragments":["all"]},{"Key":"with all","Fragments":["functions:"]},{"Key":" ```âžœ","Fragments":["accumulate"]},{"Key":"```âžœ accumulate","Fragments":["rebar"]},{"Key":"accumulate rebar","Fragments":["compile"]},{"Key":"==\u003e accumulate","Fragments":["(compile)"]},{"Key":" src/accumulate.lfe:7:","Fragments":["redefining"]},{"Key":"src/accumulate.lfe:7: redefining","Fragments":["function:"]},{"Key":"redefining function:","Fragments":["#(accumulate","#(accumulate","#(accumulate"]},{"Key":"function: #(accumulate","Fragments":["2)","2)","2)"]},{"Key":" src/accumulate.lfe:11:","Fragments":["redefining"]},{"Key":"src/accumulate.lfe:11: redefining","Fragments":["function:"]},{"Key":" src/accumulate.lfe:15:","Fragments":["redefining"]},{"Key":"src/accumulate.lfe:15: redefining","Fragments":["function:"]},{"Key":"Compiling src/accumulate.lfe","Fragments":["failed:"]},{"Key":"processing /Users/floyd/Dropbox/Development/exercism.io/lfe/accumulate:","Fragments":["rebar_abort```"]},{"Key":"The tests","Fragments":["require"]},{"Key":"tests require","Fragments":["that"]},{"Key":"require that","Fragments":["each"]},{"Key":"that each","Fragments":["function"]},{"Key":"each function","Fragments":["is"]},{"Key":"is named","Fragments":["`accumulate`"]},{"Key":"named `accumulate`","Fragments":["-"]},{"Key":"`accumulate` -","Fragments":["how"]},{"Key":"- how","Fragments":["do"]},{"Key":"how do","Fragments":["I"]},{"Key":"do I","Fragments":["this?"]},{"Key":"I figured","Fragments":["it","it"]},{"Key":"figured it","Fragments":["out.","out."]},{"Key":" Cool!","Fragments":["I"]},{"Key":"Cool! I","Fragments":["look"]},{"Key":"I look","Fragments":["forward"]},{"Key":"look forward","Fragments":["to"]},{"Key":"forward to","Fragments":["your"]},{"Key":"to your","Fragments":["next"]},{"Key":"your next","Fragments":["iteration."]},{"Key":"In your","Fragments":["code"]},{"Key":"your code","Fragments":["now,"]},{"Key":"code now,","Fragments":["as"]},{"Key":"now, as","Fragments":["the"]},{"Key":"the errors","Fragments":["suggest,"]},{"Key":"errors suggest,","Fragments":["you"]},{"Key":"suggest, you","Fragments":["define"]},{"Key":"you define","Fragments":["`accumulate/2`"]},{"Key":"define `accumulate/2`","Fragments":["and"]},{"Key":"and then","Fragments":["try"]},{"Key":"then try","Fragments":["to"]},{"Key":"try to","Fragments":["redefine"]},{"Key":"to redefine","Fragments":["it"]},{"Key":"redefine it","Fragments":["three"]},{"Key":"it three","Fragments":["times."]},{"Key":"In order","Fragments":["to"]},{"Key":"order to","Fragments":["have"]},{"Key":"to have","Fragments":["multiple"]},{"Key":"have multiple","Fragments":["definitions"]},{"Key":"multiple definitions","Fragments":["(read:"]},{"Key":"definitions (read:","Fragments":["`defun`"]},{"Key":"(read: `defun`","Fragments":["forms)"]},{"Key":"`defun` forms)","Fragments":["with"]},{"Key":"forms) with","Fragments":["the"]},{"Key":"same name","Fragments":["and"]},{"Key":"name and","Fragments":["arity,"]},{"Key":"and arity,","Fragments":["you"]},{"Key":"arity, you","Fragments":["need"]},{"Key":"you need","Fragments":["to"]},{"Key":"use [guards][1]","Fragments":["to"]},{"Key":"[guards][1] to","Fragments":["disambiguate."]},{"Key":"can (read:","Fragments":["must),"]},{"Key":"(read: must),","Fragments":["however,"]},{"Key":"must), however,","Fragments":["use"]},{"Key":"however, use","Fragments":["multiple"]},{"Key":"use multiple","Fragments":["`defun`"]},{"Key":"multiple `defun`","Fragments":["forms"]},{"Key":"`defun` forms","Fragments":["to"]},{"Key":"forms to","Fragments":["define"]},{"Key":"define different","Fragments":["arities"]},{"Key":"different arities","Fragments":["for"]},{"Key":"same function.","Fragments":["A"]},{"Key":"function. A","Fragments":["silly"]},{"Key":"A silly","Fragments":["example:"]},{"Key":"(defun plus","Fragments":["(x","(x"]},{"Key":"plus (x","Fragments":["y)","y"]},{"Key":"(x y)","Fragments":["(+"]},{"Key":"y) (+","Fragments":["x"]},{"Key":"(+ x","Fragments":["y))","y"]},{"Key":"(x y","Fragments":["z)"]},{"Key":"z) (+","Fragments":["x"]},{"Key":"x y","Fragments":["z))","z)`"]},{"Key":" nm","Fragments":["-"]},{"Key":"nm -","Fragments":["I"]},{"Key":"Consider how","Fragments":["you"]},{"Key":"how you","Fragments":["might","might","might"]},{"Key":"might rewrite","Fragments":["it"]},{"Key":"rewrite it","Fragments":["without"]},{"Key":"it without","Fragments":["explicitly"]},{"Key":"without explicitly","Fragments":["mentioning"]},{"Key":"explicitly mentioning","Fragments":["`accu`"]},{"Key":"mentioning `accu`","Fragments":["and"]},{"Key":"`accu` and","Fragments":["later"]},{"Key":"and later","Fragments":["calling"]},{"Key":"later calling","Fragments":["`lists:reverse`."]},{"Key":"Though it's","Fragments":["completely"]},{"Key":"it's completely","Fragments":["acceptable"]},{"Key":"completely acceptable","Fragments":["with"]},{"Key":"acceptable with","Fragments":["LFE"]},{"Key":"with LFE","Fragments":["being"]},{"Key":"LFE being","Fragments":["a"]},{"Key":"being a","Fragments":["Lisp-2+"]},{"Key":"a Lisp-2+","Fragments":["and"]},{"Key":"Lisp-2+ and","Fragments":["all,"]},{"Key":"and all,","Fragments":["as"]},{"Key":"all, as","Fragments":["a"]},{"Key":"a matter","Fragments":["of"]},{"Key":"matter of","Fragments":["personal"]},{"Key":"of personal","Fragments":["taste,"]},{"Key":"personal taste,","Fragments":["I"]},{"Key":"taste, I","Fragments":["would"]},{"Key":"I would","Fragments":["avoid"]},{"Key":"would avoid","Fragments":["binding"]},{"Key":"avoid binding","Fragments":["values"]},{"Key":"binding values","Fragments":["to"]},{"Key":"values to","Fragments":["`car`"]},{"Key":"to `car`","Fragments":["and"]},{"Key":"`car` and","Fragments":["`cdr`."]},{"Key":"Looks good.","Fragments":["I"]},{"Key":"good. I","Fragments":["like"]},{"Key":"like your","Fragments":["lambda"]},{"Key":"your lambda","Fragments":["to"]},{"Key":"lambda to","Fragments":["determine"]},{"Key":"to determine","Fragments":["whether"]},{"Key":"determine whether","Fragments":["a"]},{"Key":"whether a","Fragments":["string"]},{"Key":"string has","Fragments":["any"]},{"Key":"has any","Fragments":["capital"]},{"Key":"any capital","Fragments":["letters."]},{"Key":" My","Fragments":["only","final"]},{"Key":"My only","Fragments":["nitpick"]},{"Key":"only nitpick","Fragments":["would"]},{"Key":"nitpick would","Fragments":["be"]},{"Key":"be to","Fragments":["suggest","suggest","define"]},{"Key":"to suggest","Fragments":["`andalso`","swapping"]},{"Key":"suggest `andalso`","Fragments":["in"]},{"Key":"`andalso` in","Fragments":["place"]},{"Key":"in place","Fragments":["of"]},{"Key":"place of","Fragments":["`and`"]},{"Key":"of `and`","Fragments":["on"]},{"Key":"`and` on","Fragments":["lines"]},{"Key":"on lines","Fragments":["15"]},{"Key":"lines 15","Fragments":["and"]},{"Key":"15 and","Fragments":["16."]},{"Key":"and 16.","Fragments":["Check"]},{"Key":"16. Check","Fragments":["out"]},{"Key":"out [this","Fragments":["discussion][1]","discussion][3]"]},{"Key":"[this discussion][1]","Fragments":["of"]},{"Key":"discussion][1] of","Fragments":["their"]},{"Key":"of their","Fragments":["relative"]},{"Key":"their relative","Fragments":["merits"]},{"Key":"relative merits","Fragments":["for"]},{"Key":"merits for","Fragments":["more"]},{"Key":"for more","Fragments":["info.","info.","info."]},{"Key":" Changes","Fragments":["`and`"]},{"Key":"Changes `and`","Fragments":["to"]},{"Key":"to `andalso`","Fragments":["per"]},{"Key":"`andalso` per","Fragments":["@cleora's"]},{"Key":"per @cleora's","Fragments":["suggestion."]},{"Key":"@cleora's suggestion.","Fragments":["Condensed"]},{"Key":"suggestion. Condensed","Fragments":["the"]},{"Key":"Condensed the","Fragments":["comparison"]},{"Key":"the comparison","Fragments":["for"]},{"Key":"comparison for","Fragments":["capital"]},{"Key":"for capital","Fragments":["letters."]},{"Key":" Now","Fragments":["that"]},{"Key":"Now that","Fragments":["there's"]},{"Key":"that there's","Fragments":["only"]},{"Key":"there's only","Fragments":["one"]},{"Key":"only one","Fragments":["test"]},{"Key":"one test","Fragments":["clause,"]},{"Key":"test clause,","Fragments":["you"]},{"Key":"clause, you","Fragments":["don't"]},{"Key":"don't need","Fragments":["`andalso`"]},{"Key":"need `andalso`","Fragments":["on"]},{"Key":"`andalso` on","Fragments":["line"]},{"Key":" Also,","Fragments":["I"]},{"Key":"Also, I","Fragments":["might"]},{"Key":"might reverse","Fragments":["the"]},{"Key":"reverse the","Fragments":["clauses,"]},{"Key":"the clauses,","Fragments":["as"]},{"Key":"clauses, as","Fragments":["in,"]},{"Key":"as in,","Fragments":["check"]},{"Key":"in, check","Fragments":["for"]},{"Key":"the presence","Fragments":["of"]},{"Key":"presence of","Fragments":["a"]},{"Key":"of a","Fragments":["capital"]},{"Key":"a capital","Fragments":["letter","letter"]},{"Key":"capital letter","Fragments":["before","might"]},{"Key":"letter before","Fragments":["comparing"]},{"Key":"before comparing","Fragments":["`phrase`"]},{"Key":"comparing `phrase`","Fragments":["to"]},{"Key":"`phrase` to","Fragments":["`(string:to_upper"]},{"Key":"to `(string:to_upper","Fragments":["phrase)`"]},{"Key":"`(string:to_upper phrase)`","Fragments":["since"]},{"Key":"phrase)` since","Fragments":["checking"]},{"Key":"since checking","Fragments":["for"]},{"Key":"letter might","Fragments":["only"]},{"Key":"might only","Fragments":["have"]},{"Key":"only have","Fragments":["to"]},{"Key":"to traverse","Fragments":["as"]},{"Key":"traverse as","Fragments":["few"]},{"Key":"as few","Fragments":["as"]},{"Key":"few as","Fragments":["one"]},{"Key":"as one","Fragments":["character."]},{"Key":"one character.","Fragments":["But"]},{"Key":"character. But","Fragments":["\"premature"]},{"Key":"But \"premature","Fragments":["optimization"]},{"Key":"\"premature optimization","Fragments":["is"]},{"Key":"optimization is","Fragments":["the","the","the"]},{"Key":"the root","Fragments":["of","of","of"]},{"Key":"root of","Fragments":["all","all","all"]},{"Key":"of all","Fragments":["evil.\"","evil.\"","evil"]},{"Key":" Quick","Fragments":["reminder"]},{"Key":"Quick reminder","Fragments":["of"]},{"Key":"reminder of","Fragments":["something"]},{"Key":"of something","Fragments":["I"]},{"Key":"something I","Fragments":["often"]},{"Key":"I often","Fragments":["forget"]},{"Key":"often forget","Fragments":["and"]},{"Key":"forget and","Fragments":["long"]},{"Key":"and long","Fragments":["for:"]},{"Key":"long for:","Fragments":["`(=\u003c"]},{"Key":"for: `(=\u003c","Fragments":["x"]},{"Key":"`(=\u003c x","Fragments":["y"]},{"Key":"y z)`","Fragments":["is"]},{"Key":"z)` is","Fragments":["illegal"]},{"Key":"is illegal","Fragments":["in"]},{"Key":"illegal in","Fragments":["guards"]},{"Key":"in guards","Fragments":["and"]},{"Key":"guards and","Fragments":["would"]},{"Key":"and would","Fragments":["need"]},{"Key":"would need","Fragments":["to"]},{"Key":"be `(andalso","Fragments":["(=\u003c"]},{"Key":"`(andalso (=\u003c","Fragments":["x"]},{"Key":"(=\u003c x","Fragments":["y)"]},{"Key":"y) (=\u003c","Fragments":["y"]},{"Key":"(=\u003c y","Fragments":["z))`."]},{"Key":"y z))`.","Fragments":["Your"]},{"Key":"z))`. Your","Fragments":["code"]},{"Key":"Your code","Fragments":["here"]},{"Key":"code here","Fragments":["is"]},{"Key":"here is","Fragments":["fine,","to"]},{"Key":"is fine,","Fragments":["if"]},{"Key":"fine, if","Fragments":["not"]},{"Key":"if not","Fragments":["preferable,"]},{"Key":"not preferable,","Fragments":["since"]},{"Key":"preferable, since","Fragments":["it's"]},{"Key":"since it's","Fragments":["not"]},{"Key":"not a","Fragments":["guard."]},{"Key":"like how","Fragments":["you've"]},{"Key":"how you've","Fragments":["defined"]},{"Key":"you've defined","Fragments":["the"]},{"Key":"defined the","Fragments":["default"]},{"Key":"the default","Fragments":["case"]},{"Key":"default case","Fragments":["in"]},{"Key":"case in","Fragments":["terms"]},{"Key":"in terms","Fragments":["of"]},{"Key":"terms of","Fragments":["the"]},{"Key":"the more","Fragments":["configurable"]},{"Key":"more configurable","Fragments":["case."]},{"Key":"configurable case.","Fragments":["And"]},{"Key":"case. And","Fragments":["the"]},{"Key":"And the","Fragments":["`lambda`"]},{"Key":"the `lambda`","Fragments":["in"]},{"Key":"`lambda` in","Fragments":["your"]},{"Key":"your `filter-multiples`","Fragments":["is"]},{"Key":"`filter-multiples` is","Fragments":["a"]},{"Key":"a solid","Fragments":["approach."]},{"Key":"as I","Fragments":["can"]},{"Key":"can tell,","Fragments":["the"]},{"Key":"tell, the","Fragments":["code"]},{"Key":"code on","Fragments":["line"]},{"Key":"line 6","Fragments":["won't"]},{"Key":"6 won't","Fragments":["compile,"]},{"Key":"won't compile,","Fragments":["since"]},{"Key":"compile, since","Fragments":["`3`"]},{"Key":"since `3`","Fragments":["is"]},{"Key":"`3` is","Fragments":["in"]},{"Key":"is in","Fragments":["the"]},{"Key":"function position","Fragments":["of"]},{"Key":"position of","Fragments":["`(3"]},{"Key":"of `(3","Fragments":["5)`"]},{"Key":"`(3 5)`","Fragments":["which"]},{"Key":"5)` which","Fragments":["tells"]},{"Key":"which tells","Fragments":["LFE"]},{"Key":"tells LFE","Fragments":["to"]},{"Key":"LFE to","Fragments":["call"]},{"Key":"to call","Fragments":["the","so"]},{"Key":"call the","Fragments":["function"]},{"Key":"function `3`","Fragments":["with"]},{"Key":"`3` with","Fragments":["the"]},{"Key":"the argument","Fragments":["`5`."]},{"Key":"argument `5`.","Fragments":["To"]},{"Key":"`5`. To","Fragments":["fix"]},{"Key":"To fix","Fragments":["this,"]},{"Key":"fix this,","Fragments":["you"]},{"Key":"this, you","Fragments":["can"]},{"Key":"can either","Fragments":["use"]},{"Key":"either use","Fragments":["`list`"]},{"Key":"use `list`","Fragments":["or"]},{"Key":"`list` or","Fragments":["quote"]},{"Key":"or quote","Fragments":["the"]},{"Key":"quote the","Fragments":["form,"]},{"Key":"the form,","Fragments":["as"]},{"Key":"form, as","Fragments":["in"]},{"Key":"as in","Fragments":["`(list"]},{"Key":"in `(list","Fragments":["3"]},{"Key":"`(list 3","Fragments":["5)`"]},{"Key":"3 5)`","Fragments":["or"]},{"Key":"5)` or","Fragments":["`'(3"]},{"Key":"or `'(3","Fragments":["5)`."]},{"Key":" ####","Fragments":["Some"]},{"Key":"#### Some","Fragments":["ideas"]},{"Key":"Some ideas","Fragments":["for"]},{"Key":"ideas for","Fragments":["the"]},{"Key":"the next","Fragments":["iteration"]},{"Key":"- Consider","Fragments":["writing"]},{"Key":"Consider writing","Fragments":["a"]},{"Key":"writing a","Fragments":["function"]},{"Key":"function that,","Fragments":["given"]},{"Key":"that, given","Fragments":["a"]},{"Key":"given a","Fragments":["list","list"]},{"Key":"a list","Fragments":["of","and","of"]},{"Key":"list of","Fragments":["numbers","*n*"]},{"Key":"of numbers","Fragments":["(e.g."]},{"Key":"numbers (e.g.","Fragments":["`'(3"]},{"Key":"(e.g. `'(3","Fragments":["5)`)"]},{"Key":"`'(3 5)`)","Fragments":["and"]},{"Key":"5)`) and","Fragments":["a"]},{"Key":"and a","Fragments":["number","succinct,"]},{"Key":"a number","Fragments":["`n`,"]},{"Key":"number `n`,","Fragments":["returns"]},{"Key":"`n`, returns","Fragments":["true"]},{"Key":"returns true","Fragments":["if"]},{"Key":"true if","Fragments":["`n`"]},{"Key":"if `n`","Fragments":["is"]},{"Key":"`n` is","Fragments":["a"]},{"Key":"a multiple","Fragments":["of","of","of","of","of"]},{"Key":"multiple of","Fragments":["any","3","3","5","3"]},{"Key":"of any","Fragments":["number"]},{"Key":"any number","Fragments":["in"]},{"Key":"number in","Fragments":["the"]},{"Key":" (f","Fragments":["'(3","'(3","'(3","'(3"]},{"Key":"(f '(3","Fragments":["5)","5)","5)","5)"]},{"Key":"'(3 5)","Fragments":["9)","15)","25)","16)"]},{"Key":"5) 9)","Fragments":[";"]},{"Key":"9) ;","Fragments":["\u003c="]},{"Key":"\u003c= 'true,","Fragments":["since","since","since"]},{"Key":"'true, since","Fragments":["9","15","25"]},{"Key":"since 9","Fragments":["is"]},{"Key":"9 is","Fragments":["a"]},{"Key":"5) 15)","Fragments":[";"]},{"Key":"15) ;","Fragments":["\u003c="]},{"Key":"since 15","Fragments":["is"]},{"Key":"15 is","Fragments":["a"]},{"Key":"5) 25)","Fragments":[";"]},{"Key":"25) ;","Fragments":["\u003c="]},{"Key":"since 25","Fragments":["is"]},{"Key":"25 is","Fragments":["a"]},{"Key":"5) 16)","Fragments":[";"]},{"Key":"16) ;","Fragments":["\u003c="]},{"Key":"\u003c= 'false,","Fragments":["since"]},{"Key":"'false, since","Fragments":["16"]},{"Key":"since 16","Fragments":["is"]},{"Key":"16 is","Fragments":["neither"]},{"Key":"is neither","Fragments":["a"]},{"Key":"neither a","Fragments":["multiple"]},{"Key":"of 3","Fragments":["nor"]},{"Key":"3 nor","Fragments":["5"]},{"Key":"- Think","Fragments":["about"]},{"Key":"Think about","Fragments":["how"]},{"Key":"about how","Fragments":["you"]},{"Key":"might rework","Fragments":["this"]},{"Key":"rework this","Fragments":["to"]},{"Key":"this to","Fragments":["avoid"]},{"Key":"to avoid","Fragments":["calling"]},{"Key":"avoid calling","Fragments":["`lists:usort`."]},{"Key":"calling `lists:usort`.","Fragments":["Implementing"]},{"Key":"`lists:usort`. Implementing","Fragments":["the"]},{"Key":"Implementing the","Fragments":["previous"]},{"Key":"the previous","Fragments":["suggestion"]},{"Key":"previous suggestion","Fragments":["can"]},{"Key":"suggestion can","Fragments":["accomplish"]},{"Key":"can accomplish","Fragments":["this."]},{"Key":"- Since","Fragments":["the"]},{"Key":"Since the","Fragments":["main"]},{"Key":"the main","Fragments":["goal"]},{"Key":"main goal","Fragments":["here"]},{"Key":"goal here","Fragments":["is"]},{"Key":"to *filter*","Fragments":["a"]},{"Key":"*filter* a","Fragments":["list"]},{"Key":"list and","Fragments":["calculate"]},{"Key":"and calculate","Fragments":["the"]},{"Key":"calculate the","Fragments":["*sum*"]},{"Key":"the *sum*","Fragments":["of"]},{"Key":"*sum* of","Fragments":["the"]},{"Key":"the filtered","Fragments":["elements,"]},{"Key":"filtered elements,","Fragments":["consider"]},{"Key":"elements, consider","Fragments":["how"]},{"Key":"consider how","Fragments":["you"]},{"Key":"might accomplish","Fragments":["that"]},{"Key":"accomplish that","Fragments":["in"]},{"Key":"that in","Fragments":["one"]},{"Key":"in one","Fragments":["pass,"]},{"Key":"one pass,","Fragments":["i.e."]},{"Key":"pass, i.e.","Fragments":["*filter*"]},{"Key":"i.e. *filter*","Fragments":["and"]},{"Key":"*filter* and","Fragments":["*sum*"]},{"Key":"and *sum*","Fragments":["with"]},{"Key":"*sum* with","Fragments":["a"]},{"Key":"a single","Fragments":["*fold*."]},{"Key":"single *fold*.","Fragments":["Some"]},{"Key":"*fold*. Some","Fragments":["pseudocode"]},{"Key":"Some pseudocode","Fragments":["detailing"]},{"Key":"pseudocode detailing","Fragments":["the"]},{"Key":"detailing the","Fragments":["idea:"]},{"Key":" let","Fragments":["sum"]},{"Key":"let sum","Fragments":["="]},{"Key":"sum =","Fragments":["0"]},{"Key":" for","Fragments":["num"]},{"Key":"for num","Fragments":["in"]},{"Key":"num in","Fragments":["nums:"]},{"Key":"in nums:","Fragments":["sum"]},{"Key":"nums: sum","Fragments":["+="]},{"Key":"+= num","Fragments":["iff"]},{"Key":"num iff","Fragments":["(ok?"]},{"Key":"iff (ok?","Fragments":["num)"]},{"Key":" return","Fragments":["sum"]},{"Key":" It","Fragments":["seemed"]},{"Key":"It seemed","Fragments":["hacky"]},{"Key":"seemed hacky","Fragments":["to"]},{"Key":"hacky to","Fragments":["call"]},{"Key":"call so","Fragments":["many"]},{"Key":"so many","Fragments":["`list:`"]},{"Key":"many `list:`","Fragments":["functions,"]},{"Key":"`list:` functions,","Fragments":["but"]},{"Key":"functions, but","Fragments":["I"]},{"Key":"I wasn't","Fragments":["able"]},{"Key":"wasn't able","Fragments":["to"]},{"Key":"get `lists:foldl`","Fragments":["to"]},{"Key":"`lists:foldl` to","Fragments":["work."]},{"Key":"to work.","Fragments":["Your"]},{"Key":"work. Your","Fragments":["pseudocode"]},{"Key":"Your pseudocode","Fragments":["helps"]},{"Key":"pseudocode helps","Fragments":["-"]},{"Key":"helps -","Fragments":["I"]},{"Key":"didn't return","Fragments":["`sum`."]},{"Key":" applying","Fragments":["@dejah's"]},{"Key":"applying @dejah's","Fragments":["suggestions"]},{"Key":"@dejah's suggestions","Fragments":["from"]},{"Key":"suggestions from","Fragments":["my"]},{"Key":"from my","Fragments":["2nd"]},{"Key":"my 2nd","Fragments":["and"]},{"Key":"2nd and","Fragments":["3rd"]},{"Key":"and 3rd","Fragments":["submissions."]},{"Key":" `head`","Fragments":["and"]},{"Key":"`head` and","Fragments":["`tail`"]},{"Key":"and `tail`","Fragments":["are"]},{"Key":"`tail` are","Fragments":["great"]},{"Key":"are great","Fragments":["names"]},{"Key":"great names","Fragments":["for"]},{"Key":"for those","Fragments":["variables."]},{"Key":"those variables.","Fragments":["I"]},{"Key":"variables. I","Fragments":["typically"]},{"Key":"I typically","Fragments":["use"]},{"Key":"typically use","Fragments":["`h`"]},{"Key":"use `h`","Fragments":["and"]},{"Key":"`h` and","Fragments":["`t`,"]},{"Key":"and `t`,","Fragments":["but"]},{"Key":"`t`, but","Fragments":["being"]},{"Key":"but being","Fragments":["more"]},{"Key":"being more","Fragments":["explicit"]},{"Key":"more explicit","Fragments":["is"]},{"Key":"explicit is","Fragments":["generally"]},{"Key":"is generally","Fragments":["better."]},{"Key":"generally better.","Fragments":["Now"]},{"Key":"better. Now","Fragments":["your"]},{"Key":"Now your","Fragments":["definition"]},{"Key":"your definition","Fragments":["of"]},{"Key":"definition of","Fragments":["accumulate","the"]},{"Key":"of accumulate","Fragments":["is"]},{"Key":"accumulate is","Fragments":["perfectly"]},{"Key":"is perfectly","Fragments":["clear."]},{"Key":"perfectly clear.","Fragments":["It"]},{"Key":"clear. It","Fragments":["has"]},{"Key":"It has","Fragments":["a"]},{"Key":"a clear","Fragments":["base"]},{"Key":"clear base","Fragments":["case,"]},{"Key":"base case,","Fragments":["and"]},{"Key":"case, and","Fragments":["a"]},{"Key":"a succinct,","Fragments":["*body-recursive*"]},{"Key":"succinct, *body-recursive*","Fragments":["recursive"]},{"Key":"*body-recursive* recursive","Fragments":["case."]},{"Key":"My final","Fragments":["nitpick,"]},{"Key":"final nitpick,","Fragments":["based"]},{"Key":"nitpick, based","Fragments":["on"]},{"Key":"on recent","Fragments":["reading"]},{"Key":"recent reading","Fragments":["in"]},{"Key":"reading in","Fragments":["[Erlang"]},{"Key":"in [Erlang","Fragments":["and"]},{"Key":"[Erlang and","Fragments":["OTP"]},{"Key":"and OTP","Fragments":["in","in"]},{"Key":"OTP in","Fragments":["Action][1],","Action"]},{"Key":"in Action][1],","Fragments":["would"]},{"Key":"Action][1], would","Fragments":["be"]},{"Key":"suggest swapping","Fragments":["the"]},{"Key":"swapping the","Fragments":["order"]},{"Key":"the order","Fragments":["of","they're"]},{"Key":"of your","Fragments":["cases."]},{"Key":" Erlang","Fragments":["(and"]},{"Key":"Erlang (and","Fragments":["thus","LFE)"]},{"Key":"(and thus","Fragments":["LFE)"]},{"Key":"thus LFE)","Fragments":["evaluates"]},{"Key":"LFE) evaluates","Fragments":["patterns"]},{"Key":"evaluates patterns","Fragments":["in"]},{"Key":"patterns in","Fragments":["the"]},{"Key":"order they're","Fragments":["given,"]},{"Key":"they're given,","Fragments":["so"]},{"Key":"given, so","Fragments":["with"]},{"Key":"so with","Fragments":["this"]},{"Key":"this code,","Fragments":["given"]},{"Key":"code, given","Fragments":["a"]},{"Key":"of *n*","Fragments":["elements,"]},{"Key":"*n* elements,","Fragments":["the"]},{"Key":"elements, the","Fragments":["empty"]},{"Key":"empty list","Fragments":["pattern","pattern"]},{"Key":"list pattern","Fragments":["will","would","only"]},{"Key":"pattern will","Fragments":["fail"]},{"Key":"will fail","Fragments":["to"]},{"Key":"fail to","Fragments":["match"]},{"Key":"to match","Fragments":["*n-1*"]},{"Key":"match *n-1*","Fragments":["times","times"]},{"Key":"*n-1* times","Fragments":["and","and"]},{"Key":"times and","Fragments":["succeed","fail"]},{"Key":"and succeed","Fragments":["once."]},{"Key":"succeed once.","Fragments":["Whereas,"]},{"Key":"once. Whereas,","Fragments":["if"]},{"Key":"Whereas, if","Fragments":["you"]},{"Key":"you reversed","Fragments":["the"]},{"Key":"reversed the","Fragments":["order,"]},{"Key":"the order,","Fragments":["the"]},{"Key":"order, the","Fragments":["nonempty"]},{"Key":"the nonempty","Fragments":["list"]},{"Key":"nonempty list","Fragments":["pattern"]},{"Key":"pattern would","Fragments":["match"]},{"Key":"would match","Fragments":["*n-1*","the"]},{"Key":"and fail","Fragments":["once,"]},{"Key":"fail once,","Fragments":["at"]},{"Key":"once, at","Fragments":["which"]},{"Key":"at which","Fragments":["time"]},{"Key":"which time","Fragments":["Erlang"]},{"Key":"time Erlang","Fragments":["would"]},{"Key":"Erlang would","Fragments":["match"]},{"Key":"match the","Fragments":["empty"]},{"Key":"pattern only","Fragments":["once."]},{"Key":"but yet","Fragments":["again"]},{"Key":"yet again","Fragments":["I'm"]},{"Key":"again I'm","Fragments":["reminded"]},{"Key":"I'm reminded","Fragments":["of"]},{"Key":"reminded of","Fragments":["one"]},{"Key":"of one","Fragments":["of"]},{"Key":"one of","Fragments":["my","the"]},{"Key":"of my","Fragments":["favorite"]},{"Key":"my favorite","Fragments":["Knuth"]},{"Key":"favorite Knuth","Fragments":["quotes,"]},{"Key":"Knuth quotes,","Fragments":["\"..."]},{"Key":"quotes, \"...","Fragments":["premature"]},{"Key":"\"... premature","Fragments":["optimization"]},{"Key":"premature optimization","Fragments":["is"]},{"Key":" Premature","Fragments":["optimization"]},{"Key":"Premature optimization","Fragments":["is"]},{"Key":"all evil","Fragments":["-"]},{"Key":"evil -","Fragments":["but"]},{"Key":"such a","Fragments":["simple"]},{"Key":"a simple","Fragments":["and"]},{"Key":"simple and","Fragments":["clear"]},{"Key":"and clear","Fragments":["optimization"]},{"Key":"clear optimization","Fragments":["that"]},{"Key":"optimization that","Fragments":["I"]},{"Key":"it :)","Fragments":["Not"]},{"Key":":) Not","Fragments":["to"]},{"Key":"Not to","Fragments":["mention"]},{"Key":"to mention","Fragments":["that"]},{"Key":"mention that","Fragments":["it"]},{"Key":"that it","Fragments":["reinforces"]},{"Key":"it reinforces","Fragments":["good"]},{"Key":"reinforces good","Fragments":["coding"]},{"Key":"good coding","Fragments":["practices."]},{"Key":" Right?","Fragments":["The"]},{"Key":"Right? The","Fragments":["Erlang"]},{"Key":"The Erlang","Fragments":["(and"]},{"Key":"(and LFE)","Fragments":["way"]},{"Key":"LFE) way","Fragments":["seems"]},{"Key":"way seems","Fragments":["to"]},{"Key":"define base","Fragments":["cases"]},{"Key":"base cases","Fragments":["last,"]},{"Key":"cases last,","Fragments":["or"]},{"Key":"last, or","Fragments":["more"]},{"Key":"or more","Fragments":["explictly,"]},{"Key":"more explictly,","Fragments":["to"]},{"Key":"explictly, to","Fragments":["define"]},{"Key":"define cases","Fragments":["in"]},{"Key":"cases in","Fragments":["decreasing"]},{"Key":"in decreasing","Fragments":["order"]},{"Key":"decreasing order","Fragments":["of"]},{"Key":"of specificity.","Fragments":["After"]},{"Key":"specificity. After","Fragments":["reading"]},{"Key":"After reading","Fragments":["that"]},{"Key":"reading that","Fragments":["paragraph"]},{"Key":"that paragraph","Fragments":["in"]},{"Key":"paragraph in","Fragments":["Erlang"]},{"Key":"Erlang and","Fragments":["OTP"]},{"Key":"in Action","Fragments":["it"]},{"Key":"Action it","Fragments":["made"]},{"Key":"it made","Fragments":["me"]},{"Key":"made me","Fragments":["wonder"]},{"Key":"me wonder","Fragments":["why"]},{"Key":"wonder why","Fragments":["I"]},{"Key":"why I","Fragments":["hadn't"]},{"Key":"I hadn't","Fragments":["thought"]},{"Key":"of doing","Fragments":["that"]},{"Key":"doing that","Fragments":["before.."]},{"Key":"the definition","Fragments":["of"]},{"Key":"the predicate","Fragments":["and"]},{"Key":"predicate and","Fragments":["boolean"]},{"Key":"and boolean","Fragments":["logic"]},{"Key":"boolean logic","Fragments":["in"]},{"Key":"logic in","Fragments":["general."]},{"Key":"- `is_divisible_by`","Fragments":["should"]},{"Key":"`is_divisible_by` should","Fragments":["be"]},{"Key":"be named","Fragments":["`divisible-by?`"]},{"Key":"named `divisible-by?`","Fragments":["or"]},{"Key":"`divisible-by?` or","Fragments":["`divisible-by-p`."]},{"Key":"or `divisible-by-p`.","Fragments":["Check"]},{"Key":"`divisible-by-p`. Check","Fragments":["out"]},{"Key":"out [section","Fragments":["5.4][1]","3][2]"]},{"Key":"[section 5.4][1]","Fragments":["of"]},{"Key":"5.4][1] of","Fragments":["the"]},{"Key":"LFE style","Fragments":["guide"]},{"Key":"style guide","Fragments":["for"]},{"Key":"guide for","Fragments":["more"]},{"Key":"- Your","Fragments":["indentation"]},{"Key":"Your indentation","Fragments":["is"]},{"Key":"indentation is","Fragments":["non-standard."]},{"Key":"is non-standard.","Fragments":["check"]},{"Key":"non-standard. check","Fragments":["out"]},{"Key":"check out","Fragments":["[section"]},{"Key":"[section 3][2]","Fragments":["for"]},{"Key":"3][2] for","Fragments":["more"]},{"Key":" Related","Fragments":["resources:"]},{"Key":"- Check","Fragments":["out"]},{"Key":"[this discussion][3]","Fragments":["on"]},{"Key":"discussion][3] on","Fragments":["`and`"]},{"Key":"on `and`","Fragments":["vs"]},{"Key":"`and` vs","Fragments":["`andalso`"]},{"Key":"vs `andalso`","Fragments":["and"]},{"Key":"`or` vs","Fragments":["`orelse`."]},{"Key":"- More","Fragments":["info"]},{"Key":"More info","Fragments":["on"]},{"Key":"info on","Fragments":["[pattern"]},{"Key":"on [pattern","Fragments":["matching][4]"]},{"Key":" [4]:","Fragments":["http://docs.lfe.io/user-guide/diving/5.html"]},{"Key":" Good","Fragments":["call"]},{"Key":"Good call","Fragments":["on"]},{"Key":"call on","Fragments":["``using"]},{"Key":"on ``using","Fragments":["lists:map``"]},{"Key":"``using lists:map``","Fragments":["instead"]},{"Key":"lists:map`` instead","Fragments":["of"]},{"Key":"of ``lc``","Fragments":[":-)"]},{"Key":"``lc`` :-)","Fragments":["It's"]},{"Key":":-) It's","Fragments":["so"]},{"Key":"It's so","Fragments":["much"]},{"Key":"so much","Fragments":["more"]},{"Key":"much more","Fragments":["readable"]},{"Key":"more readable","Fragments":["in"]},{"Key":"readable in","Fragments":["LFE."]},{"Key":"LFE. That","Fragments":["being"]},{"Key":"That being","Fragments":["said,"]},{"Key":"being said,","Fragments":["one"]},{"Key":"said, one","Fragments":["of"]},{"Key":"best ways","Fragments":["to"]},{"Key":"ways to","Fragments":["simultaneously"]},{"Key":"to simultaneously","Fragments":["iterate"]},{"Key":"simultaneously iterate","Fragments":["over"]},{"Key":"iterate over","Fragments":["multiple"]},{"Key":"over multiple","Fragments":["variables"]},{"Key":"multiple variables","Fragments":["is"]},{"Key":"variables is","Fragments":["with"]},{"Key":"is with","Fragments":["``lc``/``list-comp``,"]},{"Key":"with ``lc``/``list-comp``,","Fragments":["in"]},{"Key":"``lc``/``list-comp``, in","Fragments":["which"]},{"Key":"in which","Fragments":["case"]},{"Key":"which case","Fragments":["I'll"]},{"Key":"case I'll","Fragments":["use"]},{"Key":"I'll use","Fragments":["it:"]},{"Key":" (list-comp","Fragments":["((\u003c-"]},{"Key":"(list-comp ((\u003c-","Fragments":["l"]},{"Key":"((\u003c- l","Fragments":["(lists:seq"]},{"Key":"l (lists:seq","Fragments":["0"]},{"Key":"(lists:seq 0","Fragments":["3))","4))","5))","6)))"]},{"Key":" (\u003c-","Fragments":["m","n","o"]},{"Key":"(\u003c- m","Fragments":["(lists:seq"]},{"Key":"m (lists:seq","Fragments":["0"]},{"Key":"(\u003c- n","Fragments":["(lists:seq"]},{"Key":"n (lists:seq","Fragments":["0"]},{"Key":"(\u003c- o","Fragments":["(lists:seq"]},{"Key":"o (lists:seq","Fragments":["0"]},{"Key":" (list","Fragments":["l"]},{"Key":"(list l","Fragments":["m"]},{"Key":"l m","Fragments":["n"]},{"Key":"m n","Fragments":["o))"]},{"Key":" swapped","Fragments":["the"]},{"Key":"swapped the","Fragments":["case"]},{"Key":"the case","Fragments":["order"]}],"prefix_len":2}