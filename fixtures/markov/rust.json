{"Nodes":[{"Key":" ","Fragments":["I","Too","Pretty","Pretty","Well,","Pretty","@dianna","You're","Cool,","I","I","Cool,","There's","Using","Nice","What","`.sum()`","Graphically","Thanks","I","This","It's","m'kay","sosqs","sqos","The","Note","I","In","Then","Assuming","Do","String","As","You","In","You","Looks","I","-","~~~","let","~~~","but","you","This","This","In","I","Since","let","s.add(3,","let","println!(\"names1:","s.add(3,","println!(\"names2:","But","tests\\grade-school.rs:52:5:","is","tests\\grade-school.rs:52","^","tests\\grade-school.rs:50:17:","immutable","borrow","tests\\grade-school.rs:50","^","tests\\grade-school.rs:54:2:","tests\\grade-school.rs:47","...","tests\\grade-school.rs:54","Making","Might","`s.ends_with(c)`","Two","1.)","2.)","Otherwise","No","Thanks","I","@emilio","Well,","minor","It's","Brackets","I","This","I'd","Looks","`all`","You","Ah","Whilst","I've","But","Rust","Ah,","@sister","Nice","Maybe","I","Good","Note","Ah,","This","I","Iteration","Code","Not","Nice","Lines","46","Can","When","1.","2.","You","\"doesn't","Version","Here","Hat","```map_text```","Well,","fn","let","true","false","});","let","for","*map.entry(c).or_insert(0)","}","map","}","...But","lol.","I","Have","I'm","Also,","I","is_divisible_by","Better","You","Thanks!","`if","I","I","how","*","*","Thanks!","No","working!","I","We","Could","pub","self.0","}","No","nit","Thanks","I","I","You","You","The","Thank","Imperative","Functional","A","Making","Also","The","I","Yeah","Instead","That","Could","@issac","I","```rust","if","```","with","```rust","year","```","More","@vada","I","eg.","```rust","///","///","//","//","pub","let","let","//","//","value","}","```","If","Thanks","added","done!","First","I","Rationale","At","Followed","I","As","If","Then","So","Could","You","To","There's","You","What","@columbus","Thanks","As","Why","Good","I","It'd","_","=\u003e","_","=\u003e","_","=\u003e","vs:","'0'","'1'","'2'","'3'","'4'","'5'","'6'","'7'","'8'","'9'","'a'","'b'","'c'","'d'","'e'","'f'","All","You","Hi","don't","1.","2.","3.","1.","2.","3.","That","Just","Using","If","You","Do","I'm","What","I","Btw.","Man,","Yeah","Interesting","That","Instead","Or,","```to_lowercase```","The","There","Also","Thanks","Wow,","I","Anyway,","Is","If","Here","For","```","0","0","_","}","```","as","```","if","true","}","false","}","```","which","```","year","```","Like","Right.","Better","You","These","Straightforward","P.S.","Notice","Thanks","If","I","There","```rust","if","match","Some(o)","_","};","}","//","piece","if","match","Some(o)","_","};","}","```","That","The","Good","Yes,","That's","can","It's","You","Nice","Pretty","PS.","I'm","```","let","self.0","```","I","For","The","How","This","I've","You","Hex","I","There's","I","The","You","Notice","Clear","One","You","I","to","I'm","I'll","Thanks","Incorrect","I","Yup,","Can","Lines","Do","Some","Small","Nice","Nice!","I","fewer","You","Didn't","Functional,","You","I","Thanks","You're","Rust","@kathleen","This","Googling","A","Alternatively,","You","Nice","You","```","pub","```","Pretty","Note:","Is","pub","let","`(*allergen","That","Ah,","I","You","In","Switched","I'm","I'm","You","That","So","!","I","Use","There's","A","There","Also,","Why","Allocating","Another","As","@brennan","I","...I","In","At","I","Good","For","I","I","Using","I","This","Also","I'm","There's","You","I","I","Sounds","I","I","```\u0026str```","I've","I","I","It","One","Also,","What","Getting","I","This","I","Also,","Using","You","Let","Yes.","I've","Instead","I've","```nucleotide_count```","I","```","test","test","test","test","```","Looks","@hollie","In","look","For","```","//","#![feature(test)]","extern","extern","use","static","//","static","#[bench]","fn","b.iter(||","let","test::black_box(y)","});","}","#[bench]","fn","b.iter(||","let","test::black_box(y)","});","}","```","I","I've","With","error:","solved","#[derive(Clone,","though","error:","solved","#[derive(Clone,","though","I","This","Hell,","The","...I","I","\u003e","The","Seeing","\u003e","I","Take","1.","*","*","2.","*","1.","2.","The","got","Unicode","I","Is","No,","Do","You're","Instead","```","counts.insert(n,","```","you","```","Your","Thanks,","I'm","The","You","Hi","Beautiful","I'll","You","I","`gen_range(low,","Good","One","Yeah,","Nice","You","```","let","for","res[n","}","```","alternate","Would","It","On","The","Totally","Don't","I","Let","Plus,","\u003e","You","So,","I","The","The","Also","Yes,","I'm","Ok.","I","Range","I","gen_range","(I","Thanks","Small","What's","Well,","...I",":)","In","I","Also","Agreed,","I","oops,","I","You","That's","Now","I","small","String","It","This","```","std::collections::BTreeSet::\u003c()\u003e::new()","```","causes","```","*","frame","```","Several","Improve","There","I","marked.iter().enumerate().fold(vec![],","acc.push(x.iter().enumerate().fold(String::new(),","if","let",".expect(\"adj","match","'0'","_","};","}","else","string.push('*');","}","string","}));","acc","})","Apply","Did","Opted","The","In","Thanks","Actually,","As","You","Pretty","You","Thanks","No","I've","As","Thanks","I","It","My","This","It'll","A","improved","Notice","You","Thanks","Hmm,","Replaced","Yes","http://exercism.io/submissions/a9268bd58969449eb9ce3e12795d76da","The","Your","I've","I","Thanks","Thanks,","Awesome","I","There","I","`read`","`write`","It","If","Thanks","Notes","But","However,","`contents`","I","```rust","let","for","string.push(c)","}","string","```","could","line","@bobby","Thanks","When","Your","Thanks","Realized","Followed","Hi,","Notice","Whenever","I","While","You","On","I","No","Thanks!","I","You","I","The","```","impl\u003c'a,","type","...","fn","where","//","//","...","```","My","```","fn","let","{","//","let","let","let","println!(\"{}\",","}","{","//","let","let","let","println!(\"{}\",","}","{","//","let","let","let","//println!(\"{}\",","}","}","```","Thought","Notice","rustdoc","I","Seem","The","```","if","is_factor(year,","}","else","is_factor(year,","}","```","Or","```","(is_factor(year,100)","```","You","```","let","(is_factor(100)","```","Now","seems","You","```","pub","Eggs","Peanuts","Shellfish","Strawberries","Tomatoes","Chocolate","Pollen","Cats","}","```","I","I","I","The","You","The","It's","Basically,","I'm","Nucleotide","I","There","1.","2.","3.","Doing","I","The","For","Initially","Yeah","Good","Although","I'm","I","I","I'd","This","It","For","Hi,","for","Notice","Sitting","Here's","I","As","Hi,","I","Maybe","Yes,","Is","BTW,","Very","```rust","#![feature(test)]","extern","use","pub","a.chars().zip(b.chars()).fold(0,","}","pub","a.chars().zip(b.chars()).filter(|\u0026(a,","}","static","static","#[bench]","fn","b.bytes","b.iter(||","hamming_distance_fold(VAR1,","});","}","#[bench]","fn","b.bytes","b.iter(||","hamming_distance_filter(VAR1,","});","}","```","The","```","Running","running","test","test","test","```","So","There's","I","What's","Yeah","This","Seems","`map(|\u0026w|","I","Hi,","Easier","There","Thanks","README","checking","Interesting.","Hmm.","Nice","Hint:","Nice","I","Hi,","It","here's","That's","Wow.","Paranoidal","@candace","Looks","The","I","Take","Thanks","In","I","Anyway,","...This","Props","`threadpool`","http://doc.rust-lang.org/threadpool/threadpool/struct.ThreadPool.html","Good","A","I","ok,","Using","Correct","No","`if","Yup,","There","First,","Second,","It","Nice","I'm","I","Let's","```","pub","Eggs","Peanuts","Shellfish","...","```","While","Incorporated","-","-","If","How","~~~~{.rust}","(1..n+1).fold(0,","~~~~","?","I","I","-","-","I'm","I","If","Pretty","@waldo","and","surprised","Thanks","I","Ok,","This","ahah","I'm","Also,","Not","Will","Ascii","\u003e","\u003e","\u003e","Since","I","I've","You","This","I","And","yes","Try","You","You","I","Math","I","I","I","I","Also,","True.","Is","let","`.into_iter()`","Can","I","I","Also,","Yeah","Thanks","I","Since","I'd","Thanks","Square","I'm","I'm","Procedural,","Cool,","someone","`tmp`","While","`mod_is_zero`","Nice","Formatting","The","As","On","I've","I","I'm","nit","I","```rust","loop","match","Some(x)","None","}","}","```","You","```rust","for","tmp.push(c);","}","```","Redid","Clean,","Few","*","*","@belle","I","Thanks!","Yeah","Ran","Oh.","An","There","redefines","I","Yeah,","Simple","The","Think","If","I","Usually","As","So","But","```rs","fn","if","//","}","```","Also","But","This","Preferably,","Just","Forgot","I'm","I","As","Thanks","As","Line","The","The","```rust","match","Vacant(placeholder)","Occupied(value)","}","```","So","Saw","Nice","Maybe","The","```rust",".map(|c|","```","part","I","```rust","list.into_iter().map(|e|","if","```","but","You","why","Also,","Might","```gen_range```","You","If",":)","I","There","I","@willa","I'm","Nice","As","Remember","Few","In","But","I","I","Using","Not","I","This","I'm","Also","This","Nice,","I","So","I'm","I","If","Something","I","The","Instead","Made","Can","I","(year","But","\"Expression","For","It","@winifred","But","Oh,","I","Honestly,","It's","If","```","#[stable(feature","pub","let","s.extend(self.chars().flat_map(|c|","return","}","```","Regarding","I'm","These","I","This","My","`u16`","I","Just","Obstacles","*","*","*","*","*","As","You","This","Now","At","Now","The","Now","Final","Every","I","This","Now","You","I'd","```","if","true","}","```",";)","@bennie,","@bennie","`if","Fair","The","Heh.","This","New","The","New","*","*","I","You","```definition.len()","Instead","You","I","Other","I","I","I","Turns","By","How's","An","For","(We","There","```","+-+-+","|","+-+-+","```","For","The","realised","Yup,","I'm","Yes,","Maybe","The","A","This","Nice!","Very","You","Style","}","I'd","...","}","true","}","false","}","...","Great","I'm","I","I'm","As","That","Whatever","`.cloned()`","Returning","As","A","OK,","Thanks,","In","```e@zachary(_)","but","I","```rust","try![writer.write_all(format!(\"{:\u003c30}","team,","stats.played().to_string(),","stats.wins.to_string(),","stats.draws.to_string(),","stats.losses.to_string(),","stats.score().to_string()",").as_bytes())];","```","I","```rust","fn","(self.score(),","}","```","Due","I","*","*","Good","Also","I'm","Also,","Is","To","If","Also,","In","This","Well","on","Instead","You","You","As","You","I","Making","Changed","I","Feels","You","I'd","Maybe","The","Check","Good","Few","*","*","You","No","Good","You","There's","try","This","Taking","Simplified","This","Anyone","It","I","let","let","let","//","div_by_4","How","And","```rust","divisible(year,","```","If","I","Removed","The","Sorting","Will","I","```String```","Yes,","You","Try","This","Thanks","I","Use","There's","Thanks","In","Thanks,","nucleotide_counts","In","I","Thanks","Is","Good","Using","```rust","let","let","```","As","```rust","let","let","```","Looks","Just","I","Otherwise","It'll","I","Ah","Explicit","And","You","Remarkably","Then","Even","I","If","I","Both","So","I","b","There's","I'm","I","I","It","```","word.to_lowercase().chars()","```","Otherwise,","Looks","I","http://exercism.io/submissions/c397705650ad4828aaadcc9ab651ea38","*","*","*","Option","You","Thanks,","I","I","I've","You","@braden","Rust","Nice","Others","you","If","I'm","Is","I","It's","I","I","I","I","But","While","///","///","///","///","Oh,","Notice","Using","I'm","Not","There","Check","As","I'm","You","Since","now","Maybe","Yes","Nice","I","You","You","Absolutely","Thanks","You","From","Thanks.","Comments","Notice","Notice","Ah,","The","Notice","I","Notice","Thanks,","Wrong","Just","Same","Very","*","*","*","One-liners","Yeah","Ah,","(Oh,","I","nice","Very","Could","@royal","Nice","The","```rust","match","0","_","}","```","An","There","I'm","In","```","sumOfSquares","sumOfSquares","```","And","So,","```","fn","/*","}","```","So","There","(I've","The","I","I","right,","Quite","match","You","Besides","Use","Use","Note","You","Yes,","You","Yes,","I","I","I","why","Because","I'm","I","I","nice","In","```rust","pub","Eggs","Peanuts","...","}","```","Not","I","My","You","I","You","You","Better","A","You","Take","There's","It's","I","You","The","Instead","```rust","for","...","```","You","```rust","*words.entry(lowercase_word).or_insert(0)","```","Finally","You","```","return","}","return","to","```","The","Because","You","Other","I","At","You","Sure","More","Rust","Reduced","I","As","How","Char","This","I","What","Would","Agree","Maybe","Bit","0001,","0010,","0100,","1000,","1111,","...and","Basically,","Edit:","Here's","pub","//","//","//","self.0","}","So","One","Another","So","I","Here","And,","Minor","small","I","copied","i'm","if","You","Also","You","The","Hi,","why","also","Just","@alessandro","And","And","Take","You","....","num","}","Same","I","I","Used","The","I","I","Enough","Seems","Now","Thanks","You","Minor","```accumulate```","This","Yes","You","e.g.","You're","```map_word```","I","gen_range","This","When","Then","Inspired","This","The","You","The","I","I","This","randomize","`randomize`","I","The","I","You","This","How","I","I","Also","I","To","the","```rust","let","for","sum","}","sum.pow(2)","```","(more","I","I","But","@efren","Thank","It's","The","This","I","I","*","*","*","If","Does","No,","You","The","Looks","Interesting","I","Agreed.","It's","You","When","...Obviously,","This","One","You","I","You","my","the","In","```","[dependencies]","unicode-segmentation","```","There's","I","The","Nice","@richard","Nice","nice","Quite","Few","1.","2.","Hi!","Interesting","But","```","*hm.entry(nucleotide).or_insert(0)","```","Pretty","This","I","**Super","For","```rust","fn","string.chars().all(|c|","}","```","Your","However,","1.","2.","To","```rust","fn","message.chars().all(|c|","}","```","There","```rust","//","extern","use","//","message.is_whitespace()","```","Hope","Cheers!","Hi,","rust","Also","Guess","I","However,","1.","1.","2.","2.","My","See","Let","Hope","Thanks","Looks","You","Pretty","PS.","Nice,","Notice","Someone","I","You","Thanks","Could","I","I","And","You","There","Cool,","You","I","I","~~~~{.rust}","list.iter().cloned()","~~~~","instead","Yes,","More","Notice","The","Notice","Very","First,","As","Passes","I","Ah,","I","I","I","Hi,","thanks","You're","I","Initializing","Another","Hey,","I'm","Also,","To","I","I","And","I","Nice","PS.","Tests","I","I","Almost","Fixed:","Ok,","It","And","This","Another","Also","A","Also","Yeah","Yes,","Found","Pretty","Btw,","Honestly,","Although","I","You","You","Also,","@lurline","Notice","Hello!","Thanks","I","It's","\\o/","Got","Seems","Also","This","I","Seems","Is","Hi","I","#[test]","fn","let","let","assert_eq!(anagram::anagrams_for(\"đἁ\",","}","Āἑ","*","//","`candidates.into_iter()`","candidates.iter()",".filter(|e|",".cloned()",".collect()","*","sb.sort_by(|a,b|","tb.sort_by(|a,b|","`sort`","sb.sort()","tb.sort()","*","On","*","//","str.chars().into_iter().map(|c|","No","str.chars()",".map(|c|",".collect()","lower(source.to_string());","lower(test.to_string());","These","fn","your","lower(source);","lower(test);","Thanks","@tavares","Also","candidates.into_iter().map(|e|","You","error:","Note","candidates.iter().map(AsRef::as_ref)","Instead.","fn","`str`","fn","let","let","This","let","let","Lookg","This","fn","let","s.extend(source.chars().flat_map(|c|","s","}","In","if","return","}","//","into","if","//","Helps","-","-","Nice","Using","In","Is","Why","I","I","That's","So","Nice,","Use","The","I","`join_paths`","Thank","Love","Notice","I'm","`if","I","For","@berniece","This","Ooh,","Why","There's","I'd","If","Suggestions?","@triston","I","If","1.","1.","1.","While","Why","Nice","Maybe","@brisa","This","Other","match","(true,","(false,","(false,","}","Decided","The","All","Strange","```","+-","|","-+","```","Despite","Consider","Slightly","You","Thanks","If","```rust","pub","year","}","```","Thanks","I","I","First,","Taking","In","That's","I'm","Using","You","I","This","Requires","```","[dependencies]","enum_primitive","num","```","Ok,","Having","That's","What","https://doc.rust-lang.org/std/collections/#when-should-you-use-which-collection?","It","I","Good,","`if","You","Why","Reassignment","Interesting...","If","I","I","Sing","This","Same","All","Changed","Still","Another"]},{"Key":" I","Fragments":["think","think","notice","think","just","didn't","was","like","think","think","used","tend","tried","like","know","didn't","think","think","wonder","meant,","think","am","trade","wrote","like","don't","used","have","saw","think","don't","think","hope","don't","wanted","had","thought","suppose","really","totally","like","couldn't","can","don't","saw","actually","also","could","wish","have","can","like","don't","need","should","find","scrapped","reworked","don't","never","probably","think","don't","am","got","don't","have","see","notice","think","\"cheated\"","am","real","agree,","like","suppose","like","did","generally","have","need","realized","think","don't","like","feel","think","would","didn't","feel","can't","think","am","think","actually","used","think","remember","bet","spend","also","would","got","struggled","replaced","think","feel","think","also","confess","think","originally","guess","think","guess","agree","think","don't","do","like","considered","don't","very","think","think","think","think","think","think","got","believe","think","like","also","actually","like","think","am","didn't","think","don't","think","found","thought","think","made","really","feel","pretty","really","like","don't","opted","*think*","wanted","don't","applied","usually","think","guess","had","still","think","think","agree","think","can't","don't","can't","notice","think","don't","hate","don't","think","like","think","have","suggest","was","was","like","took","could","think","think","think","do","considered","wrote","think","wanted","like","haven't","like","am","changed","was","agree","think","have","like","believe","don't","also","challenged","avoided","replaced","could","didn't","have","iterated","like","like","just","think","don't","really","don't","prefer","took","forgot","changed","presume","applaud"]},{"Key":"I think","Fragments":["that","in","I'm","it","`!c.is_alphanumeric()`","galaxy","for","this","creating","you","it's","your","the","it","line","I'd","the","your","in","this","it's","you","it","it's","it","I","that","that's","this","it'll","my","it","the","`collect`","in","`if`","that's","braces","using","it's","you","sorting","this","that","the","it","the","you","I'll","using","you","it's","I'm","factoring","it","this","less","you","the","this","this","it's","I","the","it","it","the","you","you","another","the","that","I'll","my","some","the","using","`const`","the","both","the","I","giving","`sum_loop()`","I'm","this","both","your","there's","those","0.10","\"why","you","I","maximum","that"]},{"Key":"think that","Fragments":["just","might","makes","should","it","is"]},{"Key":"that just","Fragments":["storing","isn't","using"]},{"Key":"just storing","Fragments":["the"]},{"Key":"storing the","Fragments":["list"]},{"Key":"the list","Fragments":["of","of",":)"]},{"Key":"list of","Fragments":["each","all","allergens.","letters","allergies"]},{"Key":"of each","Fragments":["teams","digit,","and"]},{"Key":"each teams","Fragments":["results"]},{"Key":"teams results","Fragments":["and"]},{"Key":"results and","Fragments":["re-analysing"]},{"Key":"and re-analysing","Fragments":["them"]},{"Key":"re-analysing them","Fragments":["each"]},{"Key":"them each","Fragments":["time"]},{"Key":"each time","Fragments":["you","which"]},{"Key":"time you","Fragments":["call"]},{"Key":"you call","Fragments":["points,","it."]},{"Key":"call points,","Fragments":["wins"]},{"Key":"points, wins","Fragments":["etc."]},{"Key":"wins etc.","Fragments":["is"]},{"Key":"etc. is","Fragments":["going"]},{"Key":"is going","Fragments":["to","to"]},{"Key":"going to","Fragments":["be","be","fail","be","be","have","write","look","overflow","agree","be","ask","output.","look","experiment","admit","do"]},{"Key":"to be","Fragments":["inefficient.","iterated","more","the","need","at","acknowledged;","about","expensive.","there.","faster.","able","a","low","the","tested","added","collapsed","iterated","rewrriten","able","pub.","a","\u0026str.","interesting","set","one","public.","able","more","public","a","equivalent.","an","None.","simpler","1","had","used","generic","positive.","executed","more","signed.","honest:","added","a","confident","able","unsafe","a","any","faster","n","kept","public?","used","faster","public?","clearer.","your","a","over-complicated","a","even.","avoided.","a"]},{"Key":"be inefficient.","Fragments":["Especially"]},{"Key":"inefficient. Especially","Fragments":["because"]},{"Key":"Especially because","Fragments":["the"]},{"Key":"because the","Fragments":["points","tests","tests","`else`","slice","strings","equality"]},{"Key":"the points","Fragments":["function","being"]},{"Key":"points function","Fragments":["is"]},{"Key":"function is","Fragments":["used","the","its","the","trivially","clumsy,","useful","only","a","clearly","its"]},{"Key":"is used","Fragments":["when","to","to"]},{"Key":"used when","Fragments":["sorting","you"]},{"Key":"when sorting","Fragments":["the"]},{"Key":"sorting the","Fragments":["teams.","iter().collect()","input"]},{"Key":"the teams.","Fragments":["This"]},{"Key":"teams. This","Fragments":["could"]},{"Key":"This could","Fragments":["result","be"]},{"Key":"could result","Fragments":["in"]},{"Key":"result in","Fragments":["the","C1,"]},{"Key":"in the","Fragments":["points","above","list.","end?\"","end?","fuction","branches","next","form","language","API","is","early","lib.rs","input,","language","documentation","end","anagram_for","docs.","next","next","result","general","leap","match","comment,","year","exercise","first","future.","same","future.","previous","right","process","input","test","enum","next","hash","first","map","map.","tests","order","code,","order","binary","same","above","following","1.2","docs.","ranges","function.","threads.","map","input","in","size","test","value","`|module:","same","sense","public","solution),","first","standard","```candidates```","future.","vector.","`eval()`","other","repo","pipeline","rust","error,","next","manner","middle.","string,","map.","if-branches","cargo.toml"]},{"Key":"points being","Fragments":["calculated"]},{"Key":"being calculated","Fragments":["many"]},{"Key":"calculated many","Fragments":["times"]},{"Key":"many times","Fragments":["while","we","we","but"]},{"Key":"times while","Fragments":["the"]},{"Key":"while the","Fragments":["teams","corresponding"]},{"Key":"the teams","Fragments":["are"]},{"Key":"teams are","Fragments":["being"]},{"Key":"are being","Fragments":["sorted.","converted"]},{"Key":"being sorted.","Fragments":["I"]},{"Key":"sorted. I","Fragments":["would"]},{"Key":"I would","Fragments":["generate","use","rather","strongly","like","do","like","probably","never","have","like","like","do","still","like","like","have","pull","expect","probably","not","have","personally","write","have","leave","like","like","like","like","like","sure","rather","like","like","like","like","write:","like","have","probably"]},{"Key":"would generate","Fragments":["some"]},{"Key":"generate some","Fragments":["kind"]},{"Key":"some kind","Fragments":["of","of","of"]},{"Key":"kind of","Fragments":["summary","thing","thing--besides","slippery","failure","idioms","made","unnecessary.","solution","a","like","pointer."]},{"Key":"of summary","Fragments":["of"]},{"Key":"summary of","Fragments":["the"]},{"Key":"of the","Fragments":["information.","function.","solution.","language","Earth","[galaxy","Allergen","nested","expressions","possible","inputs","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","repeated","wrong","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","n","type","need","code.","busy","other","criteria","evalution?","things","hashmap","the","`filter`","giant","file","```static```","allergen","`allergies`","Allergies(u8)","implementation.","string","last","chain","other","list","word","characters","closure","strings","need","unstable","Rust","type","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","more","`repeat`","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","Allergens","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","mutable","structs","mutex,","match","difference","string","ascii","boolean","line,","other","other","definition.","most","boolean?","```||```","standard","rough","mess","functions.","map","exercises","conditional,","above","`String`.","one","different","core","regex","same","fold.","data","language","maths","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","language.","magic","conditions...","box.","function.","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","other","tests](https://github.com/exercism/xrust/blob/e2360c8031e9181db4b77fb85395451fa6d6b49b/phone-number/tests/phone-number.rs)","big","last","loop.","words.","input.","and","runtime","application","fold,","API,","`rand::`","format.","for","possible","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","time","map,","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","`+1`","iterators.","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","code?","function,","string,","function","code,","automatic","[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","right","function","stable","```Stack```","code?","opposite"]},{"Key":" Too","Fragments":["many"]},{"Key":"Too many","Fragments":["nested"]},{"Key":"many nested","Fragments":["loops"]},{"Key":"nested loops","Fragments":["to"]},{"Key":"loops to","Fragments":["my"]},{"Key":"to my","Fragments":["taste.","recursive"]},{"Key":" Pretty","Fragments":["readable","simple","simple","nice","simple","understandable","simple,","simple","clean","readable"]},{"Key":"Pretty readable","Fragments":["solution,","solution."]},{"Key":"readable solution,","Fragments":["but"]},{"Key":"solution, but","Fragments":["it","it","then"]},{"Key":"but it","Fragments":["would","is","might","does","looks","*is*","sure","seems","is","is","can","is","is","makes","Rust","is","is","compiles","seems","requires","sure","looks","failed"]},{"Key":"it would","Fragments":["be","probably","be","at","make","print","be","be","be","be","allow","quickly","let","be","seem","make","be","be","be"]},{"Key":"would be","Fragments":["nice","nice","a","a","the","neat,","interesting","any","better","ok.","using","to","less","shorter,","much","simpler","a","able","nice","faster","a","more","better","to","nice","faster.","any","a","the","more","better.","that","better","faster","possible.","cleaner","a","possible","a","a","more","better?","better?","easier","nice","too","that","just","nice","cleaner","\"half","a"]},{"Key":"be nice","Fragments":["to","to","to","to","to","to","to"]},{"Key":"nice to","Fragments":["move","place","be","see","separate","separate","know","separate","adapt"]},{"Key":"to move","Fragments":["common"]},{"Key":"move common","Fragments":["code"]},{"Key":"common code","Fragments":["to","(taking"]},{"Key":"code to","Fragments":["function/closure.","yours).","be","take","use"]},{"Key":"Pretty simple","Fragments":["and","and","code.","otherwise...","and"]},{"Key":"simple and","Fragments":["clear,","clear.","well","took","readable.","nicely"]},{"Key":"and clear,","Fragments":["but"]},{"Key":"clear, but","Fragments":["`suare_of_sum`"]},{"Key":"but `suare_of_sum`","Fragments":["and"]},{"Key":"`suare_of_sum` and","Fragments":["`sum_of_squares`"]},{"Key":"and `sum_of_squares`","Fragments":["is"]},{"Key":"`sum_of_squares` is","Fragments":["almost"]},{"Key":"is almost","Fragments":["indistinguishable.","a"]},{"Key":"almost indistinguishable.","Fragments":["I"]},{"Key":"indistinguishable. I","Fragments":["don't"]},{"Key":"I don't","Fragments":["know","have","think","know","like","think","like","see","need","think","really","think","see","think","understand","know","really","how","understand","understand","know.","like","see","think","have","like","remember","understand","like","have","think","like","see","like","like","like","like","know","use","like","*think*","usually","know","need","suppose","think","like","always","have","see","know","have","think","actually","know","think","see","think","really","think","in","know","know","believe","like","have","like","now","really","really","know"]},{"Key":"don't know","Fragments":["how","how","of","the","why","if","how","that","which","the","how","how","enough","how","of"]},{"Key":"know how","Fragments":["to","work","much","do","would","efficient","to"]},{"Key":"how to","Fragments":["fix","fix","do","use","made","build","write","make","solve....","initialize","fix","declare","create","pass","fix","do","do","write"]},{"Key":"to fix","Fragments":["it","the","the","this.","this\".","it.","this"]},{"Key":"fix it","Fragments":["=)"]},{"Key":" Well,","Fragments":["this","in","I","you"]},{"Key":"Well, this","Fragments":["is"]},{"Key":"this is","Fragments":["because","definitely","a","better.","a","rust,","overkill","probably","parallel.","way","much","much","probably","a","going","my","pretty","the","the","valid","correct,","discouraged.","the","unnecessary.","a","much","hideous","also"]},{"Key":"is because","Fragments":["they","each","you're"]},{"Key":"because they","Fragments":["share","are","are"]},{"Key":"they share","Fragments":["a"]},{"Key":"share a","Fragments":["lot"]},{"Key":"a lot","Fragments":["of","of","of","of","of","more,","more","more","of","more.","simpler","better","of","of","neater.","of","better.","cleaner."]},{"Key":"lot of","Fragments":["structure.","repetition","variables","other","help","these,","trouble","cognitive","experience","the","things"]},{"Key":"of structure.","Fragments":["It's"]},{"Key":"structure. It's","Fragments":["easily"]},{"Key":"It's easily","Fragments":["factored"]},{"Key":"easily factored","Fragments":["out."]},{"Key":"and clear.","Fragments":["One",":)"]},{"Key":"clear. One","Fragments":["suggestion:"]},{"Key":"One suggestion:","Fragments":["It"]},{"Key":"suggestion: It","Fragments":["would"]},{"Key":"It would","Fragments":["be","be","be","be","be","be","be"]},{"Key":"to place","Fragments":["repeated"]},{"Key":"place repeated","Fragments":["calculation"]},{"Key":"repeated calculation","Fragments":["in"]},{"Key":"calculation in","Fragments":["closure/function."]},{"Key":" @dianna","Fragments":["ah,"]},{"Key":"@dianna ah,","Fragments":["good"]},{"Key":"ah, good","Fragments":["idea,"]},{"Key":"good idea,","Fragments":["thanks.","thanks!","the"]},{"Key":"idea, thanks.","Fragments":["Please"]},{"Key":"thanks. Please","Fragments":["take"]},{"Key":"Please take","Fragments":["a"]},{"Key":"take a","Fragments":["look","look","`\u0026str`","dive","sequence"]},{"Key":"a look","Fragments":["at","at","at","at","at","at","at","at","at","at"]},{"Key":"look at","Fragments":["the","stevejb71","haskell","the","your","boolean","what","it.","using","the","the","some","https://doc.rust-lang.org/book/closures.html","more","```zip```","the","the","`to_uppercase()`:","some","the"]},{"Key":"at the","Fragments":["next","end.","beginning,","problem","beginning,","[example","moment.","cost","top,","top","stage","very","appropriate","function","beginning.","other","same","end.","source","source","factors","end","end","time,","end","bottom","top,","closures","check","appropriate","end).","pattern","byte","character","end","end","pattern"]},{"Key":"the next","Fragments":["iteration:","worker","domino","iteration,","version.","iteration.","iteration.","release:"]},{"Key":"next iteration:","Fragments":["http://exercism.io/submissions/68aab46003e4471f9c0d494a32580a02"]},{"Key":" You're","Fragments":["calling","calling","right,","right,","right,"]},{"Key":"You're calling","Fragments":["`to_lowercase`","methods"]},{"Key":"calling `to_lowercase`","Fragments":["twice"]},{"Key":"`to_lowercase` twice","Fragments":["for"]},{"Key":"twice for","Fragments":["each"]},{"Key":"for each","Fragments":["word","word","item","candidate","bit","place","element","candidate.","difference.","item","item","of","item"]},{"Key":"each word","Fragments":["-","in"]},{"Key":"word -","Fragments":["once"]},{"Key":"- once","Fragments":["when"]},{"Key":"once when","Fragments":["testing"]},{"Key":"when testing","Fragments":["the"]},{"Key":"testing the","Fragments":["words","string"]},{"Key":"the words","Fragments":["for"]},{"Key":"words for","Fragments":["equality"]},{"Key":"for equality","Fragments":["and"]},{"Key":"equality and","Fragments":["another"]},{"Key":"and another","Fragments":["time"]},{"Key":"another time","Fragments":["when"]},{"Key":"time when","Fragments":["generating","I","I"]},{"Key":"when generating","Fragments":["the"]},{"Key":"generating the","Fragments":["sorted"]},{"Key":"the sorted","Fragments":["permutation.","value","vector,","list","character"]},{"Key":" Cool,","Fragments":["that","`filter`","seems","the"]},{"Key":"Cool, that","Fragments":["`filter`"]},{"Key":"that `filter`","Fragments":["is"]},{"Key":"`filter` is","Fragments":["looking","working"]},{"Key":"is looking","Fragments":["good"]},{"Key":"looking good","Fragments":["and"]},{"Key":"good and","Fragments":["IMO"]},{"Key":"and IMO","Fragments":["makes","no","more"]},{"Key":"IMO makes","Fragments":["the"]},{"Key":"makes the","Fragments":["code","implementation","code","resulting","code","code","code","code","code","code","code","code"]},{"Key":"the code","Fragments":["more","repeats","is","simple","would","concise.","says","just","is","much","is","harder","as","is","simpler","simpler","simpler","as","simpler","simpler","inside","a","is","to","is","simpler","simpler","simpler","could","compiles"]},{"Key":"code more","Fragments":["understandable."]},{"Key":"think in","Fragments":["some","the","other"]},{"Key":"in some","Fragments":["cases","rare","ways.","other","languages,","other","other"]},{"Key":"some cases","Fragments":["you"]},{"Key":"cases you","Fragments":["can"]},{"Key":"you can","Fragments":["let","return","also","implement","define","directly","use","accidentally","do","simplify","delete","just","use","pull","use","see","replace","likely","write","just","get","update","consider","see,","easily","assign","replace","use","get","add","use","just","omitt","read","`take`","avoid","just","still","use","compare","use","actually","return","replace","assign","pass","do","use","omit","use","get","call","see","see","remove","eliminate","leave","look","use","just"]},{"Key":"can let","Fragments":["the"]},{"Key":"let the","Fragments":["compiler","compiler","reader"]},{"Key":"the compiler","Fragments":["infer","should","can",";-)","is","do","cares","should","complained","will","messages","will","kept","complained","says","needs","spits","told","thinks"]},{"Key":"compiler infer","Fragments":["types"]},{"Key":"infer types","Fragments":["for"]},{"Key":"types for","Fragments":["you:","`IsDivisible`"]},{"Key":"for you:","Fragments":["your"]},{"Key":"you: your","Fragments":["`Vec\u003cchar\u003e`"]},{"Key":"your `Vec\u003cchar\u003e`","Fragments":["could"]},{"Key":"`Vec\u003cchar\u003e` could","Fragments":["probably"]},{"Key":"could probably","Fragments":["be","get","be","simply"]},{"Key":"probably be","Fragments":["replaced","better","improved","that","made"]},{"Key":"be replaced","Fragments":["with","with","by","by","with","with"]},{"Key":"replaced with","Fragments":["`Vec\u003c_\u003e`,","```.iter().position()```","a","`number","a"]},{"Key":"with `Vec\u003c_\u003e`,","Fragments":["and"]},{"Key":"`Vec\u003c_\u003e`, and","Fragments":["same"]},{"Key":"and same","Fragments":["with"]},{"Key":"same with","Fragments":["the"]},{"Key":"with the","Fragments":["`Vec\u003c\u0026'a","```Vec\u003cAllergen\u003e```","AsRef","same","content","same","daily","`.map()`","return","same","`check_is_anagram`","FilterMap","*","style","assigned","function.","catch-all","tests","`%`","two","help","choice","condition,","bytes","enum.","same","functional","`","Rust","final"]},{"Key":"the `Vec\u003c\u0026'a","Fragments":["str\u003e`."]},{"Key":"`Vec\u003c\u0026'a str\u003e`.","Fragments":["In"]},{"Key":"str\u003e`. In","Fragments":["fact,"]},{"Key":"In fact,","Fragments":["you"]},{"Key":"fact, you","Fragments":["may"]},{"Key":"you may","Fragments":["not","be"]},{"Key":"may not","Fragments":["even"]},{"Key":"not even","Fragments":["need"]},{"Key":"even need","Fragments":["the"]},{"Key":"need the","Fragments":["entire","return","`iter()`","match.","allergen","if","padding","return","lifetime","lifetime","comment,","```LowerCase```","life","`return`s","`if`","```new```","potential","`move`","first","`abs()`","\"if\"","type","explicit","temp","`map`","if/else"]},{"Key":"the entire","Fragments":["`::\u003cVec\u003c\u0026'a","type","`chars`..`collect`","set","input"]},{"Key":"entire `::\u003cVec\u003c\u0026'a","Fragments":["str\u003e\u003e`"]},{"Key":"`::\u003cVec\u003c\u0026'a str\u003e\u003e`","Fragments":["since"]},{"Key":"str\u003e\u003e` since","Fragments":["the"]},{"Key":"since the","Fragments":["compiler","compiler","compiler","filter","problem","old"]},{"Key":"compiler should","Fragments":["be","be"]},{"Key":"should be","Fragments":["able","flipped.","optimized","replaced","changed.","able","a","attached","faster","iterable.","faster","exceedingly","wrapped","help","faster,","more","outside","a","constant","more","`u\u003cwidth\u003e`","safer.","clear","consistent,","a","able","done","simplified,","replaced","simplified"]},{"Key":"be able","Fragments":["to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"able to","Fragments":["infer","figure","remove","find","skip","enumerate","remove","combine","quickly","decipher","optimise","enumerate","just","guess","use","deal","simplify","check"]},{"Key":"to infer","Fragments":["(from","it","item"]},{"Key":"infer (from","Fragments":["the"]},{"Key":"(from the","Fragments":["return"]},{"Key":"the return","Fragments":["type","statement","of","statement","type.","value'","keyword,","value.","value","type","value.","statements","value."]},{"Key":"return type","Fragments":["of","is"]},{"Key":"type of","Fragments":["`anagrams_for`)","collect","`usize`","`year`","collect"]},{"Key":"of `anagrams_for`)","Fragments":["what"]},{"Key":"`anagrams_for`) what","Fragments":["the"]},{"Key":"what the","Fragments":["`collect`","first","numbers","compiler","test","compiler","`swap`"]},{"Key":"the `collect`","Fragments":["type"]},{"Key":"`collect` type","Fragments":["should"]},{"Key":"type should","Fragments":["be."]},{"Key":"should be.","Fragments":["I'm"]},{"Key":"be. I'm","Fragments":["not"]},{"Key":"I'm not","Fragments":["100%","100%","loving","convinced","sure","sure","sure","sure","happy","the","a","totally","sure","sure","sure","really","certain","quite","particularly","creating","sure","clear","sure","sure","sure","completely","sure","convinced","sure","sure","a","convinced:","sure","100%","allocating","sure","sure","really","sure","sure"]},{"Key":"not 100%","Fragments":["sure","sure,","convinced"]},{"Key":"100% sure","Fragments":["on"]},{"Key":"sure on","Fragments":["it"]},{"Key":"on it","Fragments":["so","at","seemed","instead"]},{"Key":"it so","Fragments":["try","you"]},{"Key":"so try","Fragments":["that"]},{"Key":"try that","Fragments":["out","route","and"]},{"Key":"that out","Fragments":["and"]},{"Key":"out and","Fragments":["we","the","saved"]},{"Key":"and we","Fragments":["can","get"]},{"Key":"we can","Fragments":["talk","do","get"]},{"Key":"can talk","Fragments":["about"]},{"Key":"talk about","Fragments":["that."]},{"Key":"I notice","Fragments":["that","that","there"]},{"Key":"notice that","Fragments":["lines","`read`"]},{"Key":"that lines","Fragments":["2-4"]},{"Key":"lines 2-4","Fragments":["look"]},{"Key":"2-4 look","Fragments":["very"]},{"Key":"look very","Fragments":["much"]},{"Key":"very much","Fragments":["like","a","question","like"]},{"Key":"much like","Fragments":["lines","the","your"]},{"Key":"like lines","Fragments":["9-11,"]},{"Key":"lines 9-11,","Fragments":["and"]},{"Key":"9-11, and","Fragments":["I"]},{"Key":"and I","Fragments":["wonder","use","felt","think","made","liked","would","looked","will","like","agree","could,","suggest","wonder","realize","resorted"]},{"Key":"I wonder","Fragments":["if","u64","both","how","it's","is","if","if"]},{"Key":"wonder if","Fragments":["there","it","it's"]},{"Key":"if there","Fragments":["is","is","are","is","are,","is","are","is"]},{"Key":"there is","Fragments":["anyway","a","`Option::unwrap_or()`,","no","no","no","no","an","an","an","the","a","any","more","a","a","a","no","any","no","no","an","either","some","no","a"]},{"Key":"is anyway","Fragments":["to"]},{"Key":"anyway to","Fragments":["de-duplicate"]},{"Key":"to de-duplicate","Fragments":["that","that,"]},{"Key":"de-duplicate that","Fragments":["repeated"]},{"Key":"that repeated","Fragments":["code."]},{"Key":"Cool, `filter`","Fragments":["use"]},{"Key":"`filter` use","Fragments":["seems","is"]},{"Key":"use seems","Fragments":["good."]},{"Key":"seems good.","Fragments":["`map(|x|","Minor"]},{"Key":"good. `map(|x|","Fragments":["*x)`"]},{"Key":"`map(|x| *x)`","Fragments":["could"]},{"Key":"*x)` could","Fragments":["be"]},{"Key":"could be","Fragments":["written","de-duplicated.","more","reused","made","to","missing","a","sorted","done","improved,","written","written","put","something","expressed","written","an","written","placed","possible","replaced","passed","better","implemented","possible","split","done","implemented"]},{"Key":"be written","Fragments":["as","as","as","as","as","as","as","to","as"]},{"Key":"written as","Fragments":["`cloned()`","`.cloned()`","`chars.iter().collect()`","`cloned()`","`cloned()`","`cloned()`","`.cloned()`","`vec![None;","```a","`cond`."]},{"Key":"as `cloned()`","Fragments":["as",",","as","as"]},{"Key":"`cloned()` as","Fragments":["[iterator","[iterator","[iterator"]},{"Key":"as [iterator","Fragments":["docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)","docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)","docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)"]},{"Key":"[iterator docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)","Fragments":["say.","have","say.","say.","correctly"]},{"Key":" There's","Fragments":["a","also","a","a","a","a","also","a","a","a","a","no"]},{"Key":"There's a","Fragments":["lot","good","lot","closed","hash","constant","closed","tidier","possible"]},{"Key":"of repetition","Fragments":["in"]},{"Key":"repetition in","Fragments":["`is_anagram`"]},{"Key":"in `is_anagram`","Fragments":["(doing","and"]},{"Key":"`is_anagram` (doing","Fragments":["the"]},{"Key":"(doing the","Fragments":["same"]},{"Key":"the same","Fragments":["sequence","name.","thing","thing","as","pattern","as","code","problem,","thing","time,","effect.","time","number","thing","mistake","string","internal","code.","element","thing.","time","results","as","result","as","column,","as","syntax,","issue","name.","on","thing.","as","as","purpose","thing","character","pass.","name","variable","name.","one","result...","word.","letters.","as","graph.","thing","warts","approach"]},{"Key":"same sequence","Fragments":["of"]},{"Key":"sequence of","Fragments":["things","bits"]},{"Key":"of things","Fragments":["to","can"]},{"Key":"things to","Fragments":["both","optimize:","say"]},{"Key":"to both","Fragments":["`word1`","add","`word1`"]},{"Key":"both `word1`","Fragments":["and","and"]},{"Key":"`word1` and","Fragments":["`word2`","`word2`"]},{"Key":"and `word2`","Fragments":["which","in"]},{"Key":"`word2` which","Fragments":["I"]},{"Key":"which I","Fragments":["hope","have","saw","don't","like.","often","found"]},{"Key":"I hope","Fragments":["could","you","you"]},{"Key":"hope could","Fragments":["be"]},{"Key":" Using","Fragments":["filter","sorts.","string","`into_iter`","`match`","an","the","u8","a","```zip```"]},{"Key":"Using filter","Fragments":["and"]},{"Key":"filter and","Fragments":["count","a","count","then","map","count","count"]},{"Key":"and count","Fragments":["results","is","lower/upper.","instead","instead"]},{"Key":"count results","Fragments":["in"]},{"Key":"results in","Fragments":["a","a"]},{"Key":"in a","Fragments":["bit","function","hashmap","frequently","lazy","state","better,","more","function","real","tight","terrible","map,","function","submission","`Result`.","different","function.","tuple","row,","map.","different","module","function,","hash","function","struct,","vector.","functional","larger","muted","pipeline-processing","function,"]},{"Key":"a bit","Fragments":["cleaner","faster","faster","more?","cleaner","more","confusing,","nicer,","closer","more","too","less","verbose.)","distracting.","unwieldy,","weak.","with","nicer.","more","long.","vague","more","clearer.","off:","overly","more","less.","messy,","odd.","of","of","so","overcomplicated.","harder","cleaner.","more","cleaner.","more","cleaner.","of","cleaner","more","more","cleaner.","by","wasteful.","awkward,","more","off","as","of","cleaner!","much.","extreme.","better."]},{"Key":"bit cleaner","Fragments":["solution","then","than"]},{"Key":"cleaner solution","Fragments":["than"]},{"Key":"solution than","Fragments":["a"]},{"Key":"than a","Fragments":["fold","random","lot","call","fold","direct"]},{"Key":"a fold","Fragments":["for","inside","where"]},{"Key":"fold for","Fragments":["the"]},{"Key":"for the","Fragments":["count","reader,","comment,","`score`","review","higher","most","hint.","comment.","feedback!","explicit","hell","students","insight.","hash","map","feedback!","if-else-thingy,","return.","feedback!","feedback!","comments","hint,","feedback.","suggestion,","tip,","simple_parallel","first","enum","Nitpick","fact","process","feedback","sake","explanation.","key,","key","given","sum","right","libraries","order","call","comment.","hints,","comments,","more","sum","functor/fmap","default","slice_chars","slicing","```count```","square","last","given","other.","tip,","standard","input","input","input","comments","implementation,","task","reason","type","duration","`count`","suggestions!","tip,","info.","stack?","top-left/bottom-right"]},{"Key":"the count","Fragments":["function.","is","is","and","for","method"]},{"Key":" Nice","Fragments":["optimization","concise","catch","idea","solution!","solution.","optimization.","one!","concise","concise","one!","concise","solution.","concise","concise","exercise..","concise","concise","solution,","one!","concise"]},{"Key":"Nice optimization","Fragments":["to"]},{"Key":"optimization to","Fragments":["remove"]},{"Key":"to remove","Fragments":["the","the","some","it.","the","one","the","the","a"]},{"Key":"remove the","Fragments":["hash","if","lifetime","semicolon","whole","explicit","```if```."]},{"Key":"the hash","Fragments":["map","map","table,","map","using"]},{"Key":"hash map","Fragments":["usage","key","and"]},{"Key":"map usage","Fragments":["from"]},{"Key":"usage from","Fragments":["the"]},{"Key":"from the","Fragments":["main","return","number","input","anagrams_for()","`Z`","square","current","test","test","entire","name","first","`verse`","type","server","first"]},{"Key":"the main","Fragments":["loop."]},{"Key":"main loop.","Fragments":["I"]},{"Key":"loop. I","Fragments":["found"]},{"Key":"I found","Fragments":["it","a","difficult","a","[this","quite","this","in","the","that","`join()`"]},{"Key":"found it","Fragments":["a","really"]},{"Key":"it a","Fragments":["bit","quite","bit","lot"]},{"Key":"bit faster","Fragments":["to","than"]},{"Key":"faster to","Fragments":["use","count","do","calculate.","use","go"]},{"Key":"to use","Fragments":["an","that","a","`String`","some","logical","the","`filter_map`.","a","```Option```","it.","something","zip","only","`.enumerate()`","the","iter.sum","these","either","what.","Eulerian","a","a","the","clone()","the","explicit","generics,","it.)","the","u64","a","the","`.pow()`!","u64,","`fold()`.","the","`fold`","only","it","some","a"]},{"Key":"use an","Fragments":["array","anonymous","else"]},{"Key":"an array","Fragments":["to","index.","of","of","of","like","instead.","of","filled"]},{"Key":"array to","Fragments":["keep"]},{"Key":"to keep","Fragments":["counts","my","it","the","the","them","track","using","the"]},{"Key":"keep counts","Fragments":["rather"]},{"Key":"counts rather","Fragments":["than"]},{"Key":"rather than","Fragments":["separate","having","being","vertices)","searching","acting","each","the","`a","`400`","just","giving","letter_count.","in","an","just","using"]},{"Key":"than separate","Fragments":["variables,"]},{"Key":"separate variables,","Fragments":["the"]},{"Key":"variables, the","Fragments":["pattern"]},{"Key":"the pattern","Fragments":["matching","in","\"Create","match","matching","matching"]},{"Key":"pattern matching","Fragments":["is","for","in","is","is","capability","capability"]},{"Key":"matching is","Fragments":["slower","often","wonderful"]},{"Key":"is slower","Fragments":["than"]},{"Key":"slower than","Fragments":["an"]},{"Key":"than an","Fragments":["array","i"]},{"Key":" What","Fragments":["are","would","about","is","does","was"]},{"Key":"What are","Fragments":["the","the","your"]},{"Key":"are the","Fragments":["advantages","wrong","trade-offs?","way","following:","numbers","dominoes","two","same"]},{"Key":"the advantages","Fragments":["of"]},{"Key":"advantages of","Fragments":["mutable"]},{"Key":"of mutable","Fragments":["state"]},{"Key":"mutable state","Fragments":["`mut","for"]},{"Key":"state `mut","Fragments":["sum`?"]},{"Key":"`mut sum`?","Fragments":["Did"]},{"Key":"sum`? Did","Fragments":["you"]},{"Key":"Did you","Fragments":["consider","consider"]},{"Key":"you consider","Fragments":["`.fold`?","using"]},{"Key":" `.sum()`","Fragments":["will"]},{"Key":"`.sum()` will","Fragments":["be"]},{"Key":"will be","Fragments":["even","fine,","non-zero","something","`O(c)`.","no","more","passed","`div_by`","checked","triggered","returned:","same.","counted","counted"]},{"Key":"be even","Fragments":["better"]},{"Key":"even better","Fragments":["but"]},{"Key":"better but","Fragments":["it"]},{"Key":"it is","Fragments":["still","clear.","impossible","a","guaranteed","system","impossible","faster","as","you're","worth","my","then","on","doing","not","O(1).","a","not","not","still","unstable","admirably","(or","overkill","confusing","no","NOT","a","unusual","possible","because,","definitely","definitely","then","running","acting","possible","finally","slightly"]},{"Key":"is still","Fragments":["unstable.","relatively","a","duplicating"]},{"Key":" Graphically","Fragments":["pleasant"]},{"Key":"Graphically pleasant","Fragments":["and"]},{"Key":"pleasant and","Fragments":["beautiful"]},{"Key":"and beautiful","Fragments":["solution."]},{"Key":"beautiful solution.","Fragments":["Good"]},{"Key":"solution. Good","Fragments":["job!"]},{"Key":" Thanks","Fragments":["@kaley","@dewayne","@mikayla","for","for","@bertrand","for","for","@rachelle,","for","@brandyn,","for","for","@queenie","for","for","for","for","for","for","for","for","for","for","for","for","for","for","for","for","for","for","for"]},{"Key":"Thanks @kaley","Fragments":[","]},{"Key":"@kaley ,","Fragments":["it's"]},{"Key":", it's","Fragments":["basically"]},{"Key":"it's basically","Fragments":["a"]},{"Key":"basically a","Fragments":["reimplementation"]},{"Key":"a reimplementation","Fragments":["of"]},{"Key":"reimplementation of","Fragments":["a"]},{"Key":"of a","Fragments":["solution","filter","closure.","simple","fold,","compile","compile","function","Boolean","number","problem","map","letter.","style","few","hand-written","nested","number,","weak","buffer","better","string","`Vec`"]},{"Key":"a solution","Fragments":["I","that","is","that","that","that"]},{"Key":"solution I","Fragments":["worked","just","worked","was"]},{"Key":"I worked","Fragments":["on","around"]},{"Key":"worked on","Fragments":["in","strings"]},{"Key":"on in","Fragments":["Elixir","line"]},{"Key":"think I'm","Fragments":["slowly","duplicating","going"]},{"Key":"I'm slowly","Fragments":["getting","making"]},{"Key":"slowly getting","Fragments":["a"]},{"Key":"getting a","Fragments":["handle"]},{"Key":"a handle","Fragments":["on"]},{"Key":"handle on","Fragments":["Rust's"]},{"Key":"on Rust's","Fragments":["reference"]},{"Key":"Rust's reference","Fragments":["borrowing,"]},{"Key":"reference borrowing,","Fragments":["but"]},{"Key":"borrowing, but","Fragments":["this"]},{"Key":"but this","Fragments":["exercise","seems","one","code","requires","is","exercise","implementation","is"]},{"Key":"this exercise","Fragments":["still","I've","it","easier.","without","when","much","working","in","to","Robot","made","originates","more"]},{"Key":"exercise still","Fragments":["took"]},{"Key":"still took","Fragments":["quite"]},{"Key":"took quite","Fragments":["some"]},{"Key":"quite some","Fragments":["time"]},{"Key":"some time","Fragments":["to","looking","to"]},{"Key":"time to","Fragments":["complete.","run","return","perform","go","spare.","learn"]},{"Key":"to complete.","Fragments":["Adding"]},{"Key":"complete. Adding","Fragments":["the"]},{"Key":"Adding the","Fragments":["`map`"]},{"Key":"the `map`","Fragments":["to","for","as"]},{"Key":"`map` to","Fragments":["`words`"]},{"Key":"to `words`","Fragments":["changed","based"]},{"Key":"`words` changed","Fragments":["the"]},{"Key":"changed the","Fragments":["iterator","function","code","tests"]},{"Key":"the iterator","Fragments":["element","or","was"]},{"Key":"iterator element","Fragments":["from"]},{"Key":"element from","Fragments":["`\u0026str`","the"]},{"Key":"from `\u0026str`","Fragments":["to"]},{"Key":"`\u0026str` to","Fragments":["`String`","change"]},{"Key":"to `String`","Fragments":["and"]},{"Key":"`String` and","Fragments":["realizing","when"]},{"Key":"and realizing","Fragments":["how"]},{"Key":"realizing how","Fragments":["to"]},{"Key":"fix the","Fragments":["subsequent","iterators."]},{"Key":"the subsequent","Fragments":["compiler"]},{"Key":"subsequent compiler","Fragments":["errors"]},{"Key":"compiler errors","Fragments":["was","are"]},{"Key":"errors was","Fragments":["rather"]},{"Key":"was rather","Fragments":["difficult"]},{"Key":"rather difficult","Fragments":["compared"]},{"Key":"difficult compared","Fragments":["to"]},{"Key":"compared to","Fragments":["the","Ruby,","the","the"]},{"Key":"to the","Fragments":["simple","`HashMap::get`","allergens","test","given","docs:","bottom","nightly.","target,","implementation","Allergen?","correct","list","value","sum","size","hint","enum,","whole","old","functional","simple","int","two","first","value","place","documentation","requirement","rescue.","passed","inner","years","other.","standard","score.","intermediate","map","in","top.","'value'","references","items"]},{"Key":"the simple","Fragments":["solution:","Filter","math"]},{"Key":"simple solution:","Fragments":["Pass"]},{"Key":"solution: Pass","Fragments":["a"]},{"Key":"Pass a","Fragments":["reference"]},{"Key":"a reference","Fragments":["to","to","to"]},{"Key":"reference to","Fragments":["`word`","a","T!","the","an"]},{"Key":"to `word`","Fragments":["to"]},{"Key":"`word` to","Fragments":["the"]},{"Key":"the `HashMap::get`","Fragments":["method"]},{"Key":"`HashMap::get` method","Fragments":["and"]},{"Key":"method and","Fragments":["pass"]},{"Key":"and pass","Fragments":["the"]},{"Key":"pass the","Fragments":["now","tests","function","lifetime"]},{"Key":"the now","Fragments":["`String`"]},{"Key":"now `String`","Fragments":["`word`"]},{"Key":"`String` `word`","Fragments":["directly"]},{"Key":"`word` directly","Fragments":["into"]},{"Key":"directly into","Fragments":["`HashMap::insert`"]},{"Key":"into `HashMap::insert`","Fragments":["instead"]},{"Key":"`HashMap::insert` instead","Fragments":["of"]},{"Key":"instead of","Fragments":["using","assigning","calling","nested","pattern","pattern","if-guard","a","bytes","converting","i32,","`iter`","`filter`.","`sum.map_or(None,","fold()","twice.","the","the","```map(|\u0026x|","a","a","that","print","`map`","all","an","split_char.","x","nested","the","a","binding","i32,","the","```unreachable!```","```as_bytes()```","`String`","an","the","3.","compile","the","the","checking","the","the","in","with","clone()","`String`.","`Vec`","```1","writing","using","a"]},{"Key":"of using","Fragments":["`word.to_string()`.","`cloned()`","the","[`std::iter::Iterator#sum`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.sum).","a","split","an"]},{"Key":" This","Fragments":["uses","doesn't","was","submission","is","has","is","whole","code","one","submission","part","solution","version","does","could","iteration","one's","was","one-liner","actually","is","version","I","has","is","is","does","is","works","is","version","code","is","one","is","solution","version","is","is","leaves","has","is","is","is"]},{"Key":"This uses","Fragments":["handy"]},{"Key":"uses handy","Fragments":["`HashMap`"]},{"Key":"handy `HashMap`","Fragments":["methods"]},{"Key":"`HashMap` methods","Fragments":["that"]},{"Key":"methods that","Fragments":["I"]},{"Key":"that I","Fragments":["hadn't","could","was","don't","took","needed","used","didn't?","could","totally","have","don't","missed","need","didn't","could","wouldn't","just","don't","don't","haven't","did","kept","have","can","very"]},{"Key":"I hadn't","Fragments":["been","decided","thought","basically"]},{"Key":"hadn't been","Fragments":["aware"]},{"Key":"been aware","Fragments":["of","of"]},{"Key":"aware of","Fragments":["to","that","match"]},{"Key":"of to","Fragments":["simplify"]},{"Key":"to simplify","Fragments":["the","the","usage:","`if","lines","code."]},{"Key":"simplify the","Fragments":["code,","latter?","math"]},{"Key":"the code,","Fragments":["courtesy","not","I","so"]},{"Key":"code, courtesy","Fragments":["of"]},{"Key":"courtesy of","Fragments":["@aditya's"]},{"Key":"of @aditya's","Fragments":["[solution](http://exercism.io/submissions/2d945f91fd91479b9c524daa9a1014b4)."]},{"Key":" It's","Fragments":["not","hard","relatively","a","pretty","iterating","likely","not","better","probably"]},{"Key":"It's not","Fragments":["clear","a"]},{"Key":"not clear","Fragments":["what","on","from"]},{"Key":"clear what","Fragments":["a","it's"]},{"Key":"what a","Fragments":["variable","sane"]},{"Key":"a variable","Fragments":["named","that","name"]},{"Key":"variable named","Fragments":["`sosqs`"]},{"Key":"named `sosqs`","Fragments":["is"]},{"Key":"`sosqs` is","Fragments":["for."]},{"Key":"is for.","Fragments":["Also,"]},{"Key":"for. Also,","Fragments":["you"]},{"Key":"Also, you","Fragments":["can","don't","could","seem"]},{"Key":"can return","Fragments":["the","`Vec\u003cchar\u003e`"]},{"Key":"return the","Fragments":["result","boolean","sorted","result","inverse","`Vec`","number","boolean"]},{"Key":"the result","Fragments":["directly","to","cannot","of","of","set.","and","in","of","of","of","of","should","is","by","by"]},{"Key":"result directly","Fragments":["instead"]},{"Key":"directly instead","Fragments":["of"]},{"Key":"of assigning","Fragments":["the"]},{"Key":"assigning the","Fragments":["result"]},{"Key":"result to","Fragments":["variable"]},{"Key":"to variable","Fragments":["first","direct"]},{"Key":"variable first","Fragments":["and"]},{"Key":"first and","Fragments":["then","second."]},{"Key":"and then","Fragments":["returning","calling","`cloned`,","only","count","adding","calling","`reads`","manually","I","you","do","add","returns","combine","check","make","indexing"]},{"Key":"then returning","Fragments":["it."]},{"Key":" m'kay","Fragments":[":)"]},{"Key":" sosqs","Fragments":["~"]},{"Key":"sosqs ~","Fragments":["sum"]},{"Key":"~ sum","Fragments":["of"]},{"Key":"sum of","Fragments":["squares","`n`","squares","squares","squares,","natural","square","squares","squares"]},{"Key":" sqos","Fragments":["~"]},{"Key":"sqos ~","Fragments":["square"]},{"Key":"~ square","Fragments":["of"]},{"Key":"square of","Fragments":["sum","sum.","sum","sums","sums,","sums,","a"]},{"Key":" The","Fragments":["sorting","compiler","chain","solution","Into","example","lifetime","code","use","match","nightly","nested","update","match","`for","ranges","problem","else-if,else","`words`-mangling","only","explicit","results","definition","iterative","is","`HashMap::entry()`","`Entry`","formatting","major","only","C","nesting","dominoes","looping","compiler","final","following","comments","code","return","write_row!","most","divisor","last","test","iterator","exercise","big","same","closure","approach:"]},{"Key":"The sorting","Fragments":["of"]},{"Key":"sorting of","Fragments":["```to_check```","`word`?"]},{"Key":"of ```to_check```","Fragments":["is"]},{"Key":"```to_check``` is","Fragments":["done"]},{"Key":"is done","Fragments":["once"]},{"Key":"done once","Fragments":["for"]},{"Key":"once for","Fragments":["each","each","the","each","each","each","each"]},{"Key":"word in","Fragments":["```against```.","candidates,","text.split(|c"]},{"Key":" Note","Fragments":["you","in","there","the"]},{"Key":"Note you","Fragments":["can"]},{"Key":"can also","Fragments":["get","use","replace","use","assign","be","use","be","write","use","join","use","get","pattern"]},{"Key":"also get","Fragments":["by","rid"]},{"Key":"get by","Fragments":["without","with"]},{"Key":"by without","Fragments":["sorting"]},{"Key":"without sorting","Fragments":["and"]},{"Key":"sorting and","Fragments":["compare","binary"]},{"Key":"and compare","Fragments":["letter"]},{"Key":"compare letter","Fragments":["frequencies"]},{"Key":"letter frequencies","Fragments":["instead,"]},{"Key":"frequencies instead,","Fragments":["that"]},{"Key":"instead, that","Fragments":["may"]},{"Key":"that may","Fragments":["well"]},{"Key":"may well","Fragments":["be"]},{"Key":"well be","Fragments":["faster."]},{"Key":"I just","Fragments":["did","pop","forgot","added","reinvented","thought","looked","pushed","restructured","have","did","took","added","find","looked","wanted","folded"]},{"Key":"just did","Fragments":["a","what"]},{"Key":"did a","Fragments":["quick"]},{"Key":"a quick","Fragments":["benchmark"]},{"Key":"quick benchmark","Fragments":["and"]},{"Key":"benchmark and","Fragments":["it"]},{"Key":"and it","Fragments":["seems","silently","seems","is","makes","makes","makes","makes","makes","is","could","makes","makes","makes"]},{"Key":"it seems","Fragments":["that","very","like","hard","to","that","to","worth"]},{"Key":"seems that","Fragments":["sorting","overflowing"]},{"Key":"that sorting","Fragments":["is"]},{"Key":"sorting is","Fragments":["a"]},{"Key":"is a","Fragments":["bit","```to_lowercase()```","bit","small","combination","good","bit","bit","small","small","bit","more","bit","view","`Some`","bit","bit","clear","little","result","little","bit","bit","subset","bit","bit","formula","concept","good","relatively","closed","mutation","pretty","whole","bit","more","problem","bit","typo,","str.is_empty()","bit","little","leap","crate","```Num```","constant","```.pow()```","bit","bad","good","somewhat","verb","bit","really","formula","crate","bit","bit","solution","subjective","little","temporary","solution"]},{"Key":"faster than","Fragments":["character","the","a","a","using","`input","yours,","the"]},{"Key":"than character","Fragments":["counting."]},{"Key":"character counting.","Fragments":["It"]},{"Key":"counting. It","Fragments":["was"]},{"Key":"It was","Fragments":["really","just","experimental","just"]},{"Key":"was really","Fragments":["fun","hoping"]},{"Key":"really fun","Fragments":["to"]},{"Key":"fun to","Fragments":["learn","write:"]},{"Key":"to learn","Fragments":["how","to","Rust","the","the","how","a","some","some","how"]},{"Key":"learn how","Fragments":["to","to","to"]},{"Key":"to do","Fragments":["that","self.0","with","the","this","this","it","this","this","a","it","directly,","some","this","more","in","the","it,","the","the","the","this","`testfor.to_lowercase().chars().get(j).unwrap()`,","the","this","that:","it.","the","that","it","the","this"]},{"Key":"do that","Fragments":["though,","at","since","because","exercise"]},{"Key":"that though,","Fragments":["so"]},{"Key":"though, so","Fragments":["I'll"]},{"Key":"so I'll","Fragments":["post","let"]},{"Key":"I'll post","Fragments":["my"]},{"Key":"post my","Fragments":["code."]},{"Key":" In","Fragments":["is_allergic_to()","collect()","the","`anagrams_for`","a","my","this","general,","this","```allergies```,","line","any","line","```count```,","haskell,","Rust","the","general,","order","Rust"]},{"Key":"In is_allergic_to()","Fragments":["you"]},{"Key":"is_allergic_to() you","Fragments":["loop"]},{"Key":"you loop","Fragments":["thought","and"]},{"Key":"loop thought","Fragments":["all"]},{"Key":"thought all","Fragments":["allergens"]},{"Key":"all allergens","Fragments":["to","instead","was"]},{"Key":"allergens to","Fragments":["find","be"]},{"Key":"to find","Fragments":["wheither","a","a","out.","a","documentation","a"]},{"Key":"find wheither","Fragments":["or"]},{"Key":"wheither or","Fragments":["not"]},{"Key":"or not","Fragments":["the","it","it's"]},{"Key":"not the","Fragments":["instance","compiler","world's","best","Vec","most"]},{"Key":"the instance","Fragments":["is"]},{"Key":"instance is","Fragments":["allergic"]},{"Key":"is allergic","Fragments":["to","to"]},{"Key":"allergic to","Fragments":["a","allergen"]},{"Key":"to a","Fragments":["specific","Vec","sequential","power","rust","year","one-liner.","```\u0026```.","comment","value","different","private","string","value,","```u32```","```Result```,","single","single","better","better"]},{"Key":"a specific","Fragments":["substance","shorthand."]},{"Key":"specific substance","Fragments":["or"]},{"Key":"substance or","Fragments":["not."]},{"Key":" Then","Fragments":["in","I","perhaps","gain,"]},{"Key":"Then in","Fragments":["allergies()"]},{"Key":"in allergies()","Fragments":["you"]},{"Key":"allergies() you","Fragments":["loop"]},{"Key":"loop and","Fragments":["call","accumulator."]},{"Key":"and call","Fragments":["is_allergic_to()","the","anything"]},{"Key":"call is_allergic_to()","Fragments":["which"]},{"Key":"is_allergic_to() which","Fragments":["will"]},{"Key":"which will","Fragments":["mean","always","replace","be"]},{"Key":"will mean","Fragments":["a"]},{"Key":"mean a","Fragments":["loop"]},{"Key":"a loop","Fragments":["inside"]},{"Key":"loop inside","Fragments":["a"]},{"Key":"inside a","Fragments":["loop.","loop,"]},{"Key":" Assuming","Fragments":["we"]},{"Key":"Assuming we","Fragments":["have"]},{"Key":"we have","Fragments":["a","each","`matches`","each","an","a","a","a","a","a","a","a","a","a","an","an","a","a","an"]},{"Key":"have a","Fragments":["few","domino","conditional","constant","domino","*borrowed","similar","funny","`if","`anagrams_in_list`","`result`","sneaking","`result`","`outputs`","good","look","half.","much","boolean","positive","guarantee","`anagrams`","`words`","`results`","`anagrams`","`answers`","strong","```.pow()```","next","small","lot","`result`","theoretical","`anagrams`","'static"]},{"Key":"a few","Fragments":["elements","things","`clone()`."]},{"Key":"few elements","Fragments":["it"]},{"Key":"elements it","Fragments":["will"]},{"Key":"it will","Fragments":["be","still","work","lowercase","help,","always","blow","compile"]},{"Key":"be fine,","Fragments":["but"]},{"Key":"fine, but","Fragments":["it","I"]},{"Key":"it might","Fragments":["impact","not","not","improve","make"]},{"Key":"might impact","Fragments":["performance"]},{"Key":"impact performance","Fragments":["once"]},{"Key":"performance once","Fragments":["the"]},{"Key":"once the","Fragments":["enum"]},{"Key":"the enum","Fragments":["gets","definition.","to","definition:","and","definition","items","to"]},{"Key":"enum gets","Fragments":["large"]},{"Key":"gets large","Fragments":["enough."]},{"Key":" Do","Fragments":["you","you","you","you"]},{"Key":"Do you","Fragments":["think","need","need","need","really"]},{"Key":"you think","Fragments":["you","line","is","of","this","for","is"]},{"Key":"think you","Fragments":["can","need","should","need","can","need","need","can","could","are","should","don't","can","need","could"]},{"Key":"can implement","Fragments":["is_allergic_to()"]},{"Key":"implement is_allergic_to()","Fragments":["without"]},{"Key":"is_allergic_to() without","Fragments":["looping?"]},{"Key":" String","Fragments":["now","now"]},{"Key":"String now","Fragments":["has","has"]},{"Key":"now has","Fragments":["a","`to_lowercase()`","```to_lowercase```"]},{"Key":"has a","Fragments":["```to_lowercase```","binary","steep","```to_lowercase()```","map","greater","hint"]},{"Key":"a ```to_lowercase```","Fragments":["on"]},{"Key":"```to_lowercase``` on","Fragments":["it","it.","```word```"]},{"Key":"it at","Fragments":["least","each"]},{"Key":"at least","Fragments":["in","insofar","16","1","be","as","I'm","mine"]},{"Key":"least in","Fragments":["nightly","nightly"]},{"Key":"in nightly","Fragments":["1.3.","1.3"]},{"Key":" As","Fragments":["a","dominoes","for","a","for","for","for","for","soon","for","you","for","a","I","to","far","a","one","a","`counts`"]},{"Key":"As a","Fragments":["matter","first","general","comparison","matter"]},{"Key":"a matter","Fragments":["of","of","of","of","of","of","of"]},{"Key":"matter of","Fragments":["style","personal","parentheses","taste.","carefully","taste.","style,","being"]},{"Key":"of style","Fragments":["I"]},{"Key":"style I","Fragments":["would"]},{"Key":"would use","Fragments":["inline"]},{"Key":"use inline","Fragments":["closures"]},{"Key":"inline closures","Fragments":["for"]},{"Key":"closures for","Fragments":["```not_alphanumeric```"]},{"Key":"for ```not_alphanumeric```","Fragments":["and"]},{"Key":"```not_alphanumeric``` and","Fragments":["```not_empty```,"]},{"Key":"and ```not_empty```,","Fragments":["it's"]},{"Key":"```not_empty```, it's","Fragments":["more"]},{"Key":"it's more","Fragments":["succinct","similar","readable/more","succinct"]},{"Key":"more succinct","Fragments":["and","and","and"]},{"Key":"succinct and","Fragments":["IMO","easier","just"]},{"Key":"IMO no","Fragments":["less"]},{"Key":"no less","Fragments":["readable.","clear."]},{"Key":" You","Fragments":["don't","know","can","can","can","can","are","don't","can","could","don't","don't","can","could","could","can","could","can","are","can","can","might","can","can","could","are","can","don't","could","are","could","are","are","are","could","can","can","walk","mean","can","can","could","could","can","can","could","are","can","might","can","can","can","don't","could","may","can","left","can","only","can","can","can","are","can","can","call","could","can","could","can","can","could","lowercase","can","can","could","can","could","could","only","can","should","can","can","don't","are","have","can","asked","can","can","need","can","could","don't"]},{"Key":"You don't","Fragments":["need","really","need","need","have","need","need","need","actually"]},{"Key":"don't need","Fragments":["the","it,","the","the","backtracking.","the","the","type","the","explicit","the","to","the","the","to","the","to","the","the","to","the","to","to","mutable","explicit","temporary","to","to","to","`into_iter`,"]},{"Key":"return statement","Fragments":["in","on"]},{"Key":"statement in","Fragments":["line"]},{"Key":"in line","Fragments":["14,","11","30.","25,","12.","7.","16.","8","28","2","2"]},{"Key":"line 14,","Fragments":["the"]},{"Key":"14, the","Fragments":["last"]},{"Key":"the last","Fragments":["expression","modulo","one.","line.","domino","element","expression","line","test","test","(skipped)","statement.","iteration,","expression","change,","5"]},{"Key":"last expression","Fragments":["in","in","evaluated","evaluated.","=\u003e","when","as","evaluated"]},{"Key":"expression in","Fragments":["a","a"]},{"Key":"a function","Fragments":["is","each","is","is","instead","instead","call","raises","is","called","that","is","you","instead","that"]},{"Key":"is the","Fragments":["returned","same","expected","first","difference","purpose","fastest","recommended","fastest","function's","reformatting","return","same","method","solution","wrong","smallest","amount","same","improvement","same","only","most","closest","best","case","same","correct","best","same","enum","simplest","`in`","function","first","best"]},{"Key":"the returned","Fragments":["value.","values"]},{"Key":"In collect()","Fragments":["it's"]},{"Key":"collect() it's","Fragments":["optional"]},{"Key":"it's optional","Fragments":["to"]},{"Key":"optional to","Fragments":["specify"]},{"Key":"to specify","Fragments":["the","they"]},{"Key":"specify the","Fragments":["\"collection"]},{"Key":"the \"collection","Fragments":["type\""]},{"Key":"\"collection type\"","Fragments":["since"]},{"Key":"type\" since","Fragments":["the"]},{"Key":"compiler can","Fragments":["infer","infer","optimize"]},{"Key":"can infer","Fragments":["from","the"]},{"Key":"infer from","Fragments":["the"]},{"Key":"return of","Fragments":["the"]},{"Key":"You know","Fragments":["you"]},{"Key":"know you","Fragments":["could","don't"]},{"Key":"you could","Fragments":["put","use","replace:","use","use","use","use","get","use","calculate","squash","achieve","use","assign","use","define","reduce","use","have","derive","also","use","just","get","express","probably","use","use","just","wait","just","not"]},{"Key":"could put","Fragments":["the"]},{"Key":"put the","Fragments":["\"bitmask\"","actual","result"]},{"Key":"the \"bitmask\"","Fragments":["in"]},{"Key":"\"bitmask\" in","Fragments":["each"]},{"Key":"in each","Fragments":["element"]},{"Key":"each element","Fragments":["of","by","E"]},{"Key":"element of","Fragments":["enum","the"]},{"Key":"of enum","Fragments":["right?","other","could"]},{"Key":" Looks","Fragments":["great","to","like","good!","good!","like","great,","good!"]},{"Key":"Looks great","Fragments":["to"]},{"Key":"great to","Fragments":["me."]},{"Key":"I didn't","Fragments":["know","find","realize","want","want","really","see","think","want","do","read","understand","have","think","know","think","find","make","need","want","know"]},{"Key":"didn't know","Fragments":["it","that,","it","about"]},{"Key":"know it","Fragments":["was","can","worked"]},{"Key":"it was","Fragments":["possible","doing","responsible","impossible","cool,","so","necessary","done"]},{"Key":"was possible","Fragments":["to"]},{"Key":"possible to","Fragments":["do","do","have","avoid","enumerate","change","just","treat","`|`","match","do","split","de-duplicate.","do","be"]},{"Key":" -","Fragments":["if","using","factor","Maybe","Why","`u32`","you"]},{"Key":"- if","Fragments":["all"]},{"Key":"if all","Fragments":["you","of","the"]},{"Key":"all you","Fragments":["need"]},{"Key":"you need","Fragments":["your","the","to","the","the","two","the","from","the","all","to","to.","the","to"]},{"Key":"need your","Fragments":["`ASCII_LOWER`"]},{"Key":"your `ASCII_LOWER`","Fragments":["is"]},{"Key":"`ASCII_LOWER` is","Fragments":["to"]},{"Key":"is to","Fragments":["create","make","not","return","cache","not"]},{"Key":"to create","Fragments":["the","a","a","a","the","the","an","the","a","a","a"]},{"Key":"create the","Fragments":["`cv`","output","return","hash"]},{"Key":"the `cv`","Fragments":["vector,"]},{"Key":"`cv` vector,","Fragments":["why"]},{"Key":"vector, why","Fragments":["not"]},{"Key":"why not","Fragments":["create","just","code?"]},{"Key":"not create","Fragments":["is","a"]},{"Key":"create is","Fragments":["directly"]},{"Key":"is directly","Fragments":["with"]},{"Key":" let","Fragments":["cv","mut","names","chars","mut","\u0026Allergies(score)","value","index","Allergies(code)","y","y","mut","c","mut","v:","mut","s:","w:","mut","s:","w:","mut","s:","w:","is_factor","me","mut","div_by_4","div_by_100","div_by_400","numbers_range","letters_range","letter:","number:","mut","inputs","outputs:","lowered_source","lowered_test","lowered_source","lowered_test","mut"]},{"Key":"let cv","Fragments":["="]},{"Key":"cv =","Fragments":["vec![.....];"]},{"Key":" but","Fragments":["more","I","the"]},{"Key":"but more","Fragments":["importantly,"]},{"Key":"more importantly,","Fragments":["you"]},{"Key":"importantly, you","Fragments":["don't"]},{"Key":"you don't","Fragments":["need","need","need","need","want","mind","need","need","need","need","need","need","need","need","need","really","need","need","need","need","need","need","need","need","terminate"]},{"Key":"need it,","Fragments":["as"]},{"Key":"it, as","Fragments":["`char`","you","I"]},{"Key":"as `char`","Fragments":["has"]},{"Key":"`char` has","Fragments":["`.is_alphanumeric()`"]},{"Key":" you","Fragments":["can","could","don't"]},{"Key":"can define","Fragments":["a","ordinal","`#[derive(Copy)]`"]},{"Key":"define a","Fragments":["`const`"]},{"Key":"a `const`","Fragments":["to"]},{"Key":"`const` to","Fragments":["hold"]},{"Key":"to hold","Fragments":["all"]},{"Key":"hold all","Fragments":["allergens","of"]},{"Key":"allergens instead","Fragments":["of"]},{"Key":"of calling","Fragments":["a"]},{"Key":"calling a","Fragments":["function","new"]},{"Key":"function each","Fragments":["time."]},{"Key":"This doesn't","Fragments":["generate"]},{"Key":"doesn't generate","Fragments":["a"]},{"Key":"generate a","Fragments":["random"]},{"Key":"a random","Fragments":["name,","value"]},{"Key":"random name,","Fragments":["but"]},{"Key":"name, but","Fragments":["uses"]},{"Key":"but uses","Fragments":["a"]},{"Key":"uses a","Fragments":["global","half-open","similar"]},{"Key":"a global","Fragments":["atomic","name"]},{"Key":"global atomic","Fragments":["counter"]},{"Key":"atomic counter","Fragments":["instead"]},{"Key":"counter instead","Fragments":["to"]},{"Key":"instead to","Fragments":["ensure"]},{"Key":"to ensure","Fragments":["that"]},{"Key":"ensure that","Fragments":["no"]},{"Key":"that no","Fragments":["two","characters"]},{"Key":"no two","Fragments":["robots"]},{"Key":"two robots","Fragments":["are"]},{"Key":"robots are","Fragments":["ever"]},{"Key":"are ever","Fragments":["given"]},{"Key":"ever given","Fragments":["the"]},{"Key":"given the","Fragments":["same","test"]},{"Key":"This was","Fragments":["more","an"]},{"Key":"was more","Fragments":["interesting"]},{"Key":"more interesting","Fragments":["to"]},{"Key":"interesting to","Fragments":["write","see","benchmark!"]},{"Key":"to write","Fragments":["anyway","those","something","it","code","the","one."]},{"Key":"write anyway","Fragments":["than"]},{"Key":"anyway than","Fragments":["a"]},{"Key":"random value","Fragments":["generator"]},{"Key":"value generator","Fragments":["that"]},{"Key":"generator that","Fragments":["stuck"]},{"Key":"that stuck","Fragments":["results"]},{"Key":"stuck results","Fragments":["in"]},{"Key":"a hashmap","Fragments":["and","(?)"]},{"Key":"hashmap and","Fragments":["tried"]},{"Key":"and tried","Fragments":["again."]},{"Key":"In the","Fragments":["1.3.0","`format!`-call,","documentation","`Cargo.toml`:","map,"]},{"Key":"the 1.3.0","Fragments":["Rust,"]},{"Key":"1.3.0 Rust,","Fragments":["there"]},{"Key":"Rust, there","Fragments":["is","should"]},{"Key":"a ```to_lowercase()```","Fragments":["on","method"]},{"Key":"```to_lowercase()``` on","Fragments":["```String```."]},{"Key":"I was","Fragments":["initially","not","trying","really","still","using","not","just","missin","lost","thinking","trying","trying","having.","actually","interested","wrong.","thinking.","looking","required","thrown","also","just","trying"]},{"Key":"was initially","Fragments":["pretty"]},{"Key":"initially pretty","Fragments":["unhappy"]},{"Key":"pretty unhappy","Fragments":["with"]},{"Key":"unhappy with","Fragments":["this","the"]},{"Key":"with this","Fragments":["API","code.","as","in","solution.","solution."]},{"Key":"this API","Fragments":["since"]},{"Key":"API since","Fragments":["I"]},{"Key":"since I","Fragments":["felt","had","didn't","keep"]},{"Key":"I felt","Fragments":["like","that","I","it"]},{"Key":"felt like","Fragments":["being","a","the","cheating"]},{"Key":"like being","Fragments":["forced"]},{"Key":"being forced","Fragments":["to"]},{"Key":"forced to","Fragments":["return"]},{"Key":"to return","Fragments":["a","a","a","an","a","a","`\"0000000000\"`","`Cow\u003c'_,","`true`"]},{"Key":"return a","Fragments":["reference","`u32`,","value","bool","full-fledged","`Vec\u003c\u0026str\u003e`.","`String`","```\u0026str```","string","boolean"]},{"Key":"a Vec","Fragments":["seemed"]},{"Key":"Vec seemed","Fragments":["unsafe."]},{"Key":" Since","Fragments":["I","`[u8]`","you","`==`"]},{"Key":"Since I","Fragments":["thought"]},{"Key":"I thought","Fragments":["that","about","I'd","`fold()`","that","the","about","about","I","it","about","it","you"]},{"Key":"thought that","Fragments":["I","seemed"]},{"Key":"I could","Fragments":["get","use","be","have","multiply","have","write","just","use","comment","have","have","get","have","do","write:","\"or\"","have","pass","not","use","panic,","go","just"]},{"Key":"could get","Fragments":["a","better","value","in","into"]},{"Key":"get a","Fragments":["data","bit","performance","nice","nice","bit","constant","static"]},{"Key":"a data","Fragments":["race","structure"]},{"Key":"data race","Fragments":["like"]},{"Key":"race like","Fragments":["so:"]},{"Key":"let mut","Fragments":["s","map","res","string","i","i","i","s","a:","sum","s"]},{"Key":"mut s","Fragments":["=","=","="]},{"Key":"s =","Fragments":["school::School::new();","String::with_capacity(self.len());","String::with_capacity(source.len());"]},{"Key":" s.add(3,","Fragments":["\"Chelsea\");","\"Logan\");"]},{"Key":"let names","Fragments":["=","="]},{"Key":"names =","Fragments":["s.grade(3);","s.grade(3);"]},{"Key":" println!(\"names1:","Fragments":["{:?}\","]},{"Key":"println!(\"names1: {:?}\",","Fragments":["names);"]},{"Key":" println!(\"names2:","Fragments":["{:?}\","]},{"Key":"println!(\"names2: {:?}\",","Fragments":["names);"]},{"Key":" But","Fragments":["interestingly","I","I","there","if","then","I","now","I","I","you"]},{"Key":"But interestingly","Fragments":["Rust"]},{"Key":"interestingly Rust","Fragments":["won't"]},{"Key":"Rust won't","Fragments":["actually"]},{"Key":"won't actually","Fragments":["let"]},{"Key":"actually let","Fragments":["you"]},{"Key":"let you","Fragments":["write","get","easily","do"]},{"Key":"you write","Fragments":["that:"]},{"Key":" tests\\grade-school.rs:52:5:","Fragments":["52:6"]},{"Key":"tests\\grade-school.rs:52:5: 52:6","Fragments":["error:"]},{"Key":"52:6 error:","Fragments":["cannot"]},{"Key":"error: cannot","Fragments":["borrow"]},{"Key":"cannot borrow","Fragments":["`s`"]},{"Key":"borrow `s`","Fragments":["as"]},{"Key":"`s` as","Fragments":["mutable"]},{"Key":"as mutable","Fragments":["because"]},{"Key":"mutable because","Fragments":["it"]},{"Key":" is","Fragments":["also"]},{"Key":"is also","Fragments":["borrowed","repeated","evenly","a","a","exercism"]},{"Key":"also borrowed","Fragments":["as"]},{"Key":"borrowed as","Fragments":["immutable"]},{"Key":" tests\\grade-school.rs:52","Fragments":["s.add(3,"]},{"Key":"tests\\grade-school.rs:52 s.add(3,","Fragments":["\"Logan\");"]},{"Key":" tests\\grade-school.rs:50:17:","Fragments":["50:18"]},{"Key":"tests\\grade-school.rs:50:17: 50:18","Fragments":["note:"]},{"Key":"50:18 note:","Fragments":["previous"]},{"Key":"note: previous","Fragments":["borrow","borrow"]},{"Key":"previous borrow","Fragments":["of","ends"]},{"Key":"borrow of","Fragments":["`s`"]},{"Key":"of `s`","Fragments":["occurs","until"]},{"Key":"`s` occurs","Fragments":["here;"]},{"Key":"occurs here;","Fragments":["the"]},{"Key":" immutable","Fragments":["borrow"]},{"Key":"immutable borrow","Fragments":["prevents"]},{"Key":"borrow prevents","Fragments":["subsequent"]},{"Key":"prevents subsequent","Fragments":["moves"]},{"Key":"subsequent moves","Fragments":["or"]},{"Key":"moves or","Fragments":["mutable"]},{"Key":"or mutable","Fragments":["borrows"]},{"Key":"mutable borrows","Fragments":["of"]},{"Key":"borrows of","Fragments":["`s`"]},{"Key":"`s` until","Fragments":["the"]},{"Key":" borrow","Fragments":["ends"]},{"Key":" tests\\grade-school.rs:50","Fragments":["let"]},{"Key":"tests\\grade-school.rs:50 let","Fragments":["names"]},{"Key":" tests\\grade-school.rs:54:2:","Fragments":["54:2"]},{"Key":"tests\\grade-school.rs:54:2: 54:2","Fragments":["note:"]},{"Key":"54:2 note:","Fragments":["previous"]},{"Key":"borrow ends","Fragments":["here"]},{"Key":" tests\\grade-school.rs:47","Fragments":["fn"]},{"Key":"tests\\grade-school.rs:47 fn","Fragments":["test_mutability()"]},{"Key":"fn test_mutability()","Fragments":["{"]},{"Key":" tests\\grade-school.rs:54","Fragments":["}"]},{"Key":" Making","Fragments":["the","use","that"]},{"Key":"Making the","Fragments":["flag"]},{"Key":"the flag","Fragments":["in"]},{"Key":"flag in","Fragments":["`lookup_bit`"]},{"Key":"in `lookup_bit`","Fragments":["is"]},{"Key":"`lookup_bit` is","Fragments":["cool,"]},{"Key":"is cool,","Fragments":["but"]},{"Key":"cool, but","Fragments":["might"]},{"Key":"but might","Fragments":["be"]},{"Key":"might be","Fragments":["inefficient","a","a","better","able","nice","faster.","better","much","a","a","the","more","simpler","easier","possible"]},{"Key":"be inefficient","Fragments":["since"]},{"Key":"inefficient since","Fragments":["all"]},{"Key":"since all","Fragments":["the"]},{"Key":"all the","Fragments":["allergens","text.","Allergen","permutations","lines,","letters","`'a`s","lifetime","Allergen","way","if","lifetime","crazy","allergens,","[censored]","is_allergic_to","tests","functions","strings"]},{"Key":"the allergens","Fragments":["would","to"]},{"Key":"allergens would","Fragments":["have"]},{"Key":"would have","Fragments":["to","been","lead","been","to","preferred","returned.","liked","been","been","figured","given","used"]},{"Key":"have to","Fragments":["be","map","confess","be","count","read","pass","ask","ask","put","look","fight","be","convert","use","remember","optimize","pass"]},{"Key":"be iterated","Fragments":["over","with"]},{"Key":"iterated over","Fragments":["each"]},{"Key":"over each","Fragments":["time."]},{"Key":" Might","Fragments":["be","as"]},{"Key":"Might be","Fragments":["easier"]},{"Key":"be easier","Fragments":["to","to","to","written"]},{"Key":"easier to","Fragments":["explicitly","read.","read","read.","read","read.","read","understand).","understand).","understand).","understand).","understand).","follow","understand.","understand.","read","read","keep","understand).","understand).","understand)."]},{"Key":"to explicitly","Fragments":["match","create","create","create","create","create","convert","create","enumerate","create","create","create","create","create","create","create","create","create"]},{"Key":"explicitly match","Fragments":["flag"]},{"Key":"match flag","Fragments":["bits"]},{"Key":"flag bits","Fragments":["to"]},{"Key":"bits to","Fragments":["the"]},{"Key":"be more","Fragments":["efficient.","simply","readable","appropriate.","clear","descriptive,","confident","explicit","adaptable","readable","readable","efficient","simply","or"]},{"Key":" `s.ends_with(c)`","Fragments":["is"]},{"Key":"`s.ends_with(c)` is","Fragments":["nicer"]},{"Key":"is nicer","Fragments":["than"]},{"Key":"nicer than","Fragments":["`s.chars().last().unwrap()"]},{"Key":"than `s.chars().last().unwrap()","Fragments":["=="]},{"Key":"`s.chars().last().unwrap() ==","Fragments":["c`."]},{"Key":" Two","Fragments":["small"]},{"Key":"Two small","Fragments":["things,"]},{"Key":" 1.)","Fragments":["`return"]},{"Key":"1.) `return","Fragments":["true;`"]},{"Key":"`return true;`","Fragments":["can"]},{"Key":"true;` can","Fragments":["be"]},{"Key":"can be","Fragments":["changed","done","shortened","optimized","simpler.","used",":)","no","initialized","done","ways","replaced","simpler.","hard","extracted.","either","executed","done,","done","done","done","either","evenly","significant,","done","chained","avoided","storing","split","optimized","more","represented","simplified","easier"]},{"Key":"be changed","Fragments":["to"]},{"Key":"changed to","Fragments":["just","necessitate"]},{"Key":"to just","Fragments":["`true`.","remove","one","roll","stick","parse","look","the","directly","use","use"]},{"Key":"just `true`.","Fragments":["No"]},{"Key":"`true`. No","Fragments":["need"]},{"Key":"No need","Fragments":["for","for","for","return","to"]},{"Key":"need for","Fragments":["an","the","the","the","return","lines","the","synchronization","floats","an","defining"]},{"Key":"for an","Fragments":["explicit","Ord","invalid","[Iterator","empty","explicit"]},{"Key":"an explicit","Fragments":["return","return","loop?"]},{"Key":"explicit return","Fragments":["when","is","in"]},{"Key":"return when","Fragments":["you"]},{"Key":"when you","Fragments":["cut","only","go","dereference","omit"]},{"Key":"you cut","Fragments":["off"]},{"Key":"cut off","Fragments":["the"]},{"Key":"off the","Fragments":["semicolon","stack","lowercase"]},{"Key":"the semicolon","Fragments":["at","at"]},{"Key":"semicolon at","Fragments":["the","the","end"]},{"Key":" 2.)","Fragments":["`year"]},{"Key":"2.) `year","Fragments":["%"]},{"Key":"`year %","Fragments":["400","400`","4`","\u003csomething\u003e","4","100"]},{"Key":"% 400","Fragments":["==","and","==","==","{","==","==","==","==","==","==","=="]},{"Key":"400 ==","Fragments":["0`","0","0","0","0","0","0","0","0,","0"]},{"Key":"== 0`","Fragments":["evaluates","concept","for"]},{"Key":"0` evaluates","Fragments":["to"]},{"Key":"evaluates to","Fragments":["true,"]},{"Key":"to true,","Fragments":["so"]},{"Key":"true, so","Fragments":["is"]},{"Key":"so is","Fragments":["there"]},{"Key":"is there","Fragments":["a","not","a","a","a","a","something","an"]},{"Key":"there a","Fragments":["way","way","(slightly)","clearer","way","more","way","way","line"]},{"Key":"a way","Fragments":["to","to","to","to","I","to","to","to","not","to","to","to","to","to","to"]},{"Key":"way to","Fragments":["use","enumerate","set","avoid","guarantee","turn","access","improve","sort","be","do","do","iterate","build","express","get","using","keep","do","do","be","compare.","enumerate","go.","iterate","use","game","update","build","check","go","translate","do","achieve","get","solve","make","approach","exit"]},{"Key":"use that","Fragments":["to","to","in","in"]},{"Key":"that to","Fragments":["remove","work","create","work","fail.","be"]},{"Key":"the if","Fragments":["statement","condtion","statement","chain","statements","statement","were"]},{"Key":"if statement","Fragments":["entirely?","and","as"]},{"Key":" Otherwise","Fragments":["cool","looks"]},{"Key":"Otherwise cool","Fragments":["stuff."]},{"Key":" No","Fragments":["idea","need","reason","need","idea","need","need","worries."]},{"Key":"No idea","Fragments":["why","what"]},{"Key":"idea why","Fragments":["(1..n+1)"]},{"Key":"why (1..n+1)","Fragments":["works"]},{"Key":"(1..n+1) works","Fragments":["but"]},{"Key":"works but","Fragments":["[1..n+1]","there"]},{"Key":"but [1..n+1]","Fragments":["doesn't."]},{"Key":"Thanks @dewayne","Fragments":[","]},{"Key":"@dewayne ,","Fragments":["this"]},{"Key":", this","Fragments":["is"]},{"Key":"is definitely","Fragments":["a","simpler","better","possible","not"]},{"Key":"definitely a","Fragments":["cleaner","better"]},{"Key":"a cleaner","Fragments":["solution!"]},{"Key":"I like","Fragments":["the","it","this.","this","having","the","best","the","how","code","the","this","how","that","that","this","the","how","anagramaninity.","it.","more…","your","that","`grades.keys().cloned()`","your","the","the","the","the","that","that","the","it."]},{"Key":"like the","Fragments":["idea,","following.","first","latter","right","clarity","use","hash","way","filter","closure.","new","use","use","one","redefine_state.","strings-in-a-vector","ones","hardcoded","functional","iterator","mixture","`entry(key).or_insert(default)`","way","double","sorting"]},{"Key":"the idea,","Fragments":["but","but"]},{"Key":"idea, but","Fragments":["since","unless"]},{"Key":"but since","Fragments":["Rust"]},{"Key":"since Rust","Fragments":["is","enums"]},{"Key":"Rust is","Fragments":["strict,","still"]},{"Key":"is strict,","Fragments":["this"]},{"Key":"strict, this","Fragments":["will"]},{"Key":"this will","Fragments":["require","work","produce","have","use","not"]},{"Key":"will require","Fragments":["three"]},{"Key":"require three","Fragments":["modulo"]},{"Key":"three modulo","Fragments":["operations"]},{"Key":"modulo operations","Fragments":["for"]},{"Key":"operations for","Fragments":["every"]},{"Key":"for every","Fragments":["time","candidate.","word","different","character","cell."]},{"Key":"every time","Fragments":["the","a","I"]},{"Key":"time the","Fragments":["function"]},{"Key":"the function","Fragments":["is_leap_year","to","signature","twice","is","to","behaves","is","name.","actually","body","(https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1892).","\"does"]},{"Key":"function is_leap_year","Fragments":["is"]},{"Key":"is_leap_year is","Fragments":["called."]},{"Key":"is called.","Fragments":["Thus,"]},{"Key":"called. Thus,","Fragments":["using"]},{"Key":"Thus, using","Fragments":["this"]},{"Key":"using this","Fragments":["approach","method"]},{"Key":"this approach","Fragments":["in","at"]},{"Key":"approach in","Fragments":["a","this"]},{"Key":"a frequently","Fragments":["called"]},{"Key":"frequently called","Fragments":["function"]},{"Key":"called function","Fragments":["will"]},{"Key":"function will","Fragments":["have"]},{"Key":"will have","Fragments":["an","the","different","significant","a"]},{"Key":"have an","Fragments":["impact","`anagram_list`","exact","anagram","if","`result`","`if","`ans`","`outputs`"]},{"Key":"an impact","Fragments":["on"]},{"Key":"impact on","Fragments":["performance."]},{"Key":" @emilio","Fragments":["Could"]},{"Key":"@emilio Could","Fragments":["you"]},{"Key":"Could you","Fragments":["explain","just","explain","explain"]},{"Key":"you explain","Fragments":["what","why","that"]},{"Key":"explain what","Fragments":["you're","happens"]},{"Key":"what you're","Fragments":["thinking","doing","doing,"]},{"Key":"you're thinking","Fragments":["a"]},{"Key":"thinking a","Fragments":["bit"]},{"Key":"bit more?","Fragments":["Are"]},{"Key":"more? Are","Fragments":["you"]},{"Key":"Are you","Fragments":["suggesting"]},{"Key":"you suggesting","Fragments":["that"]},{"Key":"suggesting that","Fragments":["it's"]},{"Key":"that it's","Fragments":["better","not","in","meant","not","going"]},{"Key":"it's better","Fragments":["to","to","to"]},{"Key":"better to","Fragments":["have","let","iterate","use","set"]},{"Key":"to have","Fragments":["early","a","a","a","`1..num","it","`allergens()`","learned","a","the","`Allergies(n)`","most","an","the","to","a","a","that","it","this","only"]},{"Key":"have early","Fragments":["short"]},{"Key":"early short","Fragments":["circuit?"]},{"Key":"Well, in","Fragments":["a"]},{"Key":"a lazy","Fragments":["language,"]},{"Key":"lazy language,","Fragments":["one"]},{"Key":"language, one","Fragments":["modulo"]},{"Key":"one modulo","Fragments":["operation"]},{"Key":"modulo operation","Fragments":["would","was"]},{"Key":"operation would","Fragments":["not","be"]},{"Key":"would not","Fragments":["be","need","have","be","create"]},{"Key":"not be","Fragments":["conducted,","strictly","submitting","necessary","simpler","any"]},{"Key":"be conducted,","Fragments":["if"]},{"Key":"conducted, if","Fragments":["a"]},{"Key":"if a","Fragments":["match","number","condition","!="]},{"Key":"a match","Fragments":["was","was","guard"]},{"Key":"match was","Fragments":["found,","found."]},{"Key":"was found,","Fragments":["say"]},{"Key":"found, say","Fragments":["for"]},{"Key":"say for","Fragments":["(0,"]},{"Key":"for (0,","Fragments":["0,"]},{"Key":"(0, 0,","Fragments":["_)."]},{"Key":"0, _).","Fragments":["Also,"]},{"Key":"_). Also,","Fragments":["if"]},{"Key":"Also, if","Fragments":["the"]},{"Key":"if the","Fragments":["last","piece","value","Allergies","size","tests","HashMap","body","result","input","resulting"]},{"Key":"last modulo","Fragments":["operation"]},{"Key":"operation was","Fragments":["different"]},{"Key":"was different","Fragments":["from"]},{"Key":"different from","Fragments":["0,"]},{"Key":"from 0,","Fragments":["we"]},{"Key":"0, we","Fragments":["already"]},{"Key":"we already","Fragments":["know"]},{"Key":"already know","Fragments":["the","this,"]},{"Key":"know the","Fragments":["result","answer","formula"]},{"Key":"result cannot","Fragments":["possibly"]},{"Key":"cannot possibly","Fragments":["be"]},{"Key":"possibly be","Fragments":["true,"]},{"Key":"be true,","Fragments":["but"]},{"Key":"true, but","Fragments":["in"]},{"Key":"but in","Fragments":["the","my","this","usual"]},{"Key":"the above","Fragments":["code,","`if-else`","discussion,"]},{"Key":"above code,","Fragments":["it"]},{"Key":"code, it","Fragments":["will"]},{"Key":"will still","Fragments":["compute"]},{"Key":"still compute","Fragments":["year"]},{"Key":"compute year","Fragments":["%"]},{"Key":"year %","Fragments":["400","100.","400","400","400","400","400","factor","100","400","400","400","4","4","100","4","4","100","400"]},{"Key":"400 and","Fragments":["year"]},{"Key":"and year","Fragments":["%"]},{"Key":"% 100.","Fragments":["But"]},{"Key":"100. But","Fragments":["other"]},{"Key":"But other","Fragments":["than"]},{"Key":"other than","Fragments":["that,","defining"]},{"Key":"than that,","Fragments":["I","then"]},{"Key":"that, I","Fragments":["really"]},{"Key":"I really","Fragments":["dig","want","felt","don't","agree","struggled"]},{"Key":"really dig","Fragments":["the"]},{"Key":"dig the","Fragments":["clarity"]},{"Key":"the clarity","Fragments":["of","but"]},{"Key":"clarity of","Fragments":["the"]},{"Key":" minor","Fragments":["iteration,"]},{"Key":"minor iteration,","Fragments":["removed"]},{"Key":"iteration, removed","Fragments":["a"]},{"Key":"removed a","Fragments":["static"]},{"Key":"a static","Fragments":["lifetime","string","reference"]},{"Key":"static lifetime","Fragments":["for"]},{"Key":"lifetime for","Fragments":["`name`"]},{"Key":"for `name`","Fragments":["in"]},{"Key":"`name` in","Fragments":["`add()`."]},{"Key":"It's hard","Fragments":["to"]},{"Key":"hard to","Fragments":["tell","understand","follow.","understand"]},{"Key":"to tell","Fragments":["what's"]},{"Key":"tell what's","Fragments":["happening"]},{"Key":"what's happening","Fragments":["here."]},{"Key":"happening here.","Fragments":["Perhaps"]},{"Key":"here. Perhaps","Fragments":["an"]},{"Key":"Perhaps an","Fragments":["`is_divisible_by`"]},{"Key":"an `is_divisible_by`","Fragments":["function"]},{"Key":"`is_divisible_by` function","Fragments":["would"]},{"Key":"function would","Fragments":["help?"]},{"Key":" Brackets","Fragments":["around"]},{"Key":"Brackets around","Fragments":["the"]},{"Key":"around the","Fragments":["```||```","curly","definition"]},{"Key":"the ```||```","Fragments":["would","then"]},{"Key":"```||``` would","Fragments":["help"]},{"Key":"would help","Fragments":["-","reusability"]},{"Key":"help -","Fragments":["not"]},{"Key":"- not","Fragments":["everyone"]},{"Key":"not everyone","Fragments":["knows"]},{"Key":"everyone knows","Fragments":["the","kinda"]},{"Key":"knows the","Fragments":["precedence"]},{"Key":"the precedence","Fragments":["levels."]},{"Key":"precedence levels.","Fragments":["Otherwise,"]},{"Key":"levels. Otherwise,","Fragments":["I"]},{"Key":"Otherwise, I","Fragments":["think","like"]},{"Key":"think it","Fragments":["is","is","looks","is","would","makes","came","would","would","implemented","is","is"]},{"Key":"think `!c.is_alphanumeric()`","Fragments":["is"]},{"Key":"`!c.is_alphanumeric()` is","Fragments":["a"]},{"Key":"cleaner then","Fragments":["regexp"]},{"Key":"then regexp","Fragments":[";)"]},{"Key":"This submission","Fragments":["works,","actually"]},{"Key":"submission works,","Fragments":["but"]},{"Key":"works, but","Fragments":["the","it","how","you","how"]},{"Key":"but the","Fragments":["loop","problem","compiler","code","set","compiler","type","code","alternative","result","compiler"]},{"Key":"the loop","Fragments":["over","if","early,"]},{"Key":"loop over","Fragments":["all","the"]},{"Key":"over all","Fragments":["choices"]},{"Key":"all choices","Fragments":["for"]},{"Key":"choices for","Fragments":["a"]},{"Key":"for a","Fragments":["starting","solution","constant","while","name","friend","returned","constant","variable","newbie;","direct","to_lower","C++","new","single","more","convenient-ish","decent","constant","function","simpler","bit.","cycle.","first"]},{"Key":"a starting","Fragments":["domino"]},{"Key":"starting domino","Fragments":["is"]},{"Key":"domino is","Fragments":["unnecessary.","found,"]},{"Key":"is unnecessary.","Fragments":["Because"]},{"Key":"unnecessary. Because","Fragments":["we"]},{"Key":"Because we","Fragments":["are"]},{"Key":"we are","Fragments":["traversing"]},{"Key":"are traversing","Fragments":["an"]},{"Key":"traversing an","Fragments":["undirected"]},{"Key":"an undirected","Fragments":["graph,","graph."]},{"Key":"undirected graph,","Fragments":["the"]},{"Key":"graph, the","Fragments":["choice"]},{"Key":"the choice","Fragments":["of","to"]},{"Key":"choice of","Fragments":["starting","integer"]},{"Key":"of starting","Fragments":["vertex"]},{"Key":"starting vertex","Fragments":["is"]},{"Key":"vertex is","Fragments":["irrelevant"]},{"Key":"is irrelevant","Fragments":["as"]},{"Key":"irrelevant as","Fragments":["long"]},{"Key":"as long","Fragments":["as","as","as"]},{"Key":"long as","Fragments":["you","it","you","there"]},{"Key":"as you","Fragments":["check","need","can","would","would","subtract","can","only"]},{"Key":"you check","Fragments":["both"]},{"Key":"check both","Fragments":["(domino.0,"]},{"Key":"both (domino.0,","Fragments":["domino.1)"]},{"Key":"(domino.0, domino.1)","Fragments":["and"]},{"Key":"domino.1) and","Fragments":["(domino.1,"]},{"Key":"and (domino.1,","Fragments":["domino.0)."]},{"Key":"(domino.1, domino.0).","Fragments":["See"]},{"Key":"domino.0). See","Fragments":["next"]},{"Key":"See next","Fragments":["submission"]},{"Key":"next submission","Fragments":["for"]},{"Key":"submission for","Fragments":["a"]},{"Key":"solution that","Fragments":["does","walked","does","likely","likely"]},{"Key":"that does","Fragments":["that.","some","this","this"]},{"Key":" I'd","Fragments":["find","use","replace","also","include","suggest","like"]},{"Key":"I'd find","Fragments":["```all```"]},{"Key":"find ```all```","Fragments":["a"]},{"Key":"```all``` a","Fragments":["bit"]},{"Key":"bit more","Fragments":["readable","range","context.","readable","readable.","about","complex,","compact.","efficient","performant,","difficult."]},{"Key":"more readable","Fragments":["than","way.","bits.","write","here.","than","with","will","than","and","if","that","(in"]},{"Key":"readable than","Fragments":["```any```","the","`self.0`.","the","using"]},{"Key":"than ```any```","Fragments":["on"]},{"Key":"```any``` on","Fragments":["the"]},{"Key":"on the","Fragments":["final","whole.","signature","included","last","results","stack","hope","idea","value","right","topic!","subject","contents","first","number","Result,","beginning","original","dot)","borrow","first","context.","collections","stack.","top","top","`split()`","naming;","gen_range","input","input","upper","iterators","submission","exercise","crate.","same"]},{"Key":"the final","Fragments":["line.","`false`","value"]},{"Key":"Looks to","Fragments":["be"]},{"Key":"be the","Fragments":["most","best","better","single","way","same"]},{"Key":"the most","Fragments":["efficient","part","ergonomic","elegant,","efficient","sense"]},{"Key":"most efficient","Fragments":["solution","way"]},{"Key":"efficient solution","Fragments":["I've"]},{"Key":"solution I've","Fragments":["seen.","read"]},{"Key":" `all`","Fragments":["is"]},{"Key":"`all` is","Fragments":["much"]},{"Key":"is much","Fragments":["clearer,","more","more","simpler","faster","faster","more","nicer."]},{"Key":"much clearer,","Fragments":["thanks!"]},{"Key":"You can","Fragments":["make","simplify","also","omit","also","use","probably","read","use","get","do","lazily","define","make","also","also","use","add","easily","also","replace","use","use","use","omit","omitt","also","call","write","assign","ommit","use:","call","use","also","set","do","do","also","use","make","meet","use","just","use","also","use","find","define","associate","then","also"]},{"Key":"can make","Fragments":["this","it","a","the","it","a","a"]},{"Key":"make this","Fragments":["much","less","clear.","more","program","exercise"]},{"Key":"this much","Fragments":["simpler"]},{"Key":"much simpler","Fragments":["by","than","to"]},{"Key":"simpler by","Fragments":["using"]},{"Key":"by using","Fragments":["the","a","a","the","`or_insert()`."]},{"Key":"using the","Fragments":["bitwise","mathematical","formulae","vector...","built-in","splice_pattern","value","triangle","stable","fold","formulae","formulae","formulae","```entry```","Enum","map","```zip```","old","anonymous"]},{"Key":"the bitwise","Fragments":["and"]},{"Key":"bitwise and","Fragments":["operator.","of","against","to"]},{"Key":"and operator.","Fragments":["Note"]},{"Key":"operator. Note","Fragments":["also"]},{"Key":"Note also","Fragments":["you"]},{"Key":"also you","Fragments":["can"]},{"Key":"can directly","Fragments":["associate"]},{"Key":"directly associate","Fragments":["an"]},{"Key":"associate an","Fragments":["enum"]},{"Key":"an enum","Fragments":["value","seems","and","-","to","out"]},{"Key":"enum value","Fragments":["with","of"]},{"Key":"value with","Fragments":["an"]},{"Key":"with an","Fragments":["integer,","iterator?","adaptation","inner"]},{"Key":"an integer,","Fragments":["e.g."]},{"Key":"integer, e.g.","Fragments":["Eggs=1."]},{"Key":" Ah","Fragments":["didn't","yes,"]},{"Key":"Ah didn't","Fragments":["know"]},{"Key":"know that,","Fragments":["thanks"]},{"Key":"that, thanks","Fragments":["!"]},{"Key":" Whilst","Fragments":["this"]},{"Key":"Whilst this","Fragments":["will"]},{"Key":"will work","Fragments":["from","for"]},{"Key":"work from","Fragments":["a"]},{"Key":"from a","Fragments":["code","documentation","dynamicly","value.","Ruby","more","range"]},{"Key":"a code","Fragments":["perspective,"]},{"Key":"code perspective,","Fragments":["are"]},{"Key":"perspective, are","Fragments":["there"]},{"Key":"are there","Fragments":["any","correctly."]},{"Key":"there any","Fragments":["features","better","particular","language","language"]},{"Key":"any features","Fragments":["of"]},{"Key":"features of","Fragments":["the"]},{"Key":"the language","Fragments":["you","that","helps).","are"]},{"Key":"language you","Fragments":["could"]},{"Key":"could use","Fragments":["to","`self.0`","the","u64.","`'0'...'9'`","`.flat_map(|c|","`map`","instead.","is_empty","`expect()`","self.0","some","the","to","(and","instead","filter","```u32```","zip","`BTreeSet`,"]},{"Key":"use to","Fragments":["help","check","make","solve","remove","square","string"]},{"Key":"to help","Fragments":["the"]},{"Key":"help the","Fragments":["reader"]},{"Key":"the reader","Fragments":["and","learn"]},{"Key":"reader and","Fragments":["make"]},{"Key":"and make","Fragments":["intentions"]},{"Key":"make intentions","Fragments":["clearer?"]},{"Key":" I've","Fragments":["tried","not","seen","extracted","changed","replaced","struggled","now","got","been","just"]},{"Key":"I've tried","Fragments":["iterator","to"]},{"Key":"tried iterator","Fragments":["with"]},{"Key":"iterator with","Fragments":["filter"]},{"Key":"with filter","Fragments":["first,"]},{"Key":"filter first,","Fragments":["but"]},{"Key":"first, but","Fragments":["couldn't"]},{"Key":"but couldn't","Fragments":["get","get"]},{"Key":"couldn't get","Fragments":["past","that","the","it","it","it"]},{"Key":"get past","Fragments":["the"]},{"Key":"past the","Fragments":["type"]},{"Key":"the type","Fragments":["checker","of","annotation","annotations.","annotations","inference","annotation","annotation","annotation","of","in","of","signature","`collections::vec::Vec\u003c\u0026str\u003e`"]},{"Key":"type checker","Fragments":[":-("]},{"Key":"But I","Fragments":["don't","feel","note","like","did","should","thought","had","felt","understand","could"]},{"Key":"don't have","Fragments":["rust","to","to","that","much","a","to,"]},{"Key":"have rust","Fragments":["1.2"]},{"Key":" Rust","Fragments":["1.2","1.2+","seems","has"]},{"Key":"Rust 1.2","Fragments":["now","added","as"]},{"Key":"1.2 now","Fragments":["has"]},{"Key":"has `to_lowercase()`","Fragments":["for"]},{"Key":"`to_lowercase()` for","Fragments":["strings."]},{"Key":"for strings.","Fragments":["Also"]},{"Key":"strings. Also","Fragments":["I"]},{"Key":"Also I","Fragments":["don't","took","don't","use"]},{"Key":"don't think","Fragments":["you","it","you","the","you","they","you","the","they","that","you","those"]},{"Key":"the `iter()`","Fragments":["in"]},{"Key":"`iter()` in","Fragments":["`for"]},{"Key":"in `for","Fragments":["stone"]},{"Key":"`for stone","Fragments":["in"]},{"Key":"stone in","Fragments":["stones`."]},{"Key":" Ah,","Fragments":["yes.","yes.","there's","I","I","I"]},{"Key":"Ah, yes.","Fragments":["Good","That"]},{"Key":"yes. Good","Fragments":["point,"]},{"Key":"Good point,","Fragments":["at","I","thank"]},{"Key":"point, at","Fragments":["least"]},{"Key":"least insofar","Fragments":["as"]},{"Key":"insofar as","Fragments":["the"]},{"Key":"as the","Fragments":["lifespan","first","multiplier,","previous","hashmap","code","previous","else","library","integer","assignment","last","inputs","source","previous","first"]},{"Key":"the lifespan","Fragments":["of","of"]},{"Key":"lifespan of","Fragments":["the","the"]},{"Key":"the Earth","Fragments":["and"]},{"Key":"Earth and","Fragments":["the"]},{"Key":"and the","Fragments":["Sun","universe](https://en.wikipedia.org/wiki/Galaxy#Future_trends)","condition","easy","issues","spec","fact","tip.","`;`s.","counting","fact","short","edges","input","true","if","bool"]},{"Key":"the Sun","Fragments":["are"]},{"Key":"Sun are","Fragments":["concerned."]},{"Key":"are concerned.","Fragments":["I'm"]},{"Key":"concerned. I'm","Fragments":["guessing"]},{"Key":"I'm guessing","Fragments":["that"]},{"Key":"guessing that","Fragments":["the"]},{"Key":"that the","Fragments":["lifespan","traits","leading","robots","compiler","grades","data","correct","filter","unallocated","struct","unicode","`return`","function","compiler","dna","sort","code","program","`for`","`cloned()`"]},{"Key":"the [galaxy","Fragments":["and"]},{"Key":"[galaxy and","Fragments":["the"]},{"Key":"the universe](https://en.wikipedia.org/wiki/Galaxy#Future_trends)","Fragments":["are"]},{"Key":"universe](https://en.wikipedia.org/wiki/Galaxy#Future_trends) are","Fragments":["going"]},{"Key":"are going","Fragments":["to"]},{"Key":"be need","Fragments":["`u64`,"]},{"Key":"need `u64`,","Fragments":["though."]},{"Key":"`u64`, though.","Fragments":[";)"]},{"Key":" @sister","Fragments":["Yes,"]},{"Key":"@sister Yes,","Fragments":["I"]},{"Key":"Yes, I","Fragments":["wasn't","could.","could,","know,"]},{"Key":"I wasn't","Fragments":["sure","sure","sure","sure","aware"]},{"Key":"wasn't sure","Fragments":["whether","I","what","what"]},{"Key":"sure whether","Fragments":["to","I'll"]},{"Key":"whether to","Fragments":["go"]},{"Key":"to go","Fragments":["with","on","home,","because","through"]},{"Key":"go with","Fragments":["32-bit"]},{"Key":"with 32-bit","Fragments":["or"]},{"Key":"32-bit or","Fragments":["with"]},{"Key":"or with","Fragments":["64-bit"]},{"Key":"with 64-bit","Fragments":["due"]},{"Key":"64-bit due","Fragments":["to"]},{"Key":"due to","Fragments":["x86-64","suggestions"]},{"Key":"to x86-64","Fragments":["word"]},{"Key":"x86-64 word","Fragments":["size."]},{"Key":"word size.","Fragments":["Since"]},{"Key":"size. Since","Fragments":["doing"]},{"Key":"Since doing","Fragments":["this"]},{"Key":"doing this","Fragments":["exercise","for"]},{"Key":"exercise I've","Fragments":["discovered"]},{"Key":"I've discovered","Fragments":["Rust's"]},{"Key":"discovered Rust's","Fragments":["`isize`"]},{"Key":"Rust's `isize`","Fragments":["and"]},{"Key":"`isize` and","Fragments":["`usize`"]},{"Key":"and `usize`","Fragments":["types."]},{"Key":"`usize` types.","Fragments":["Perhaps"]},{"Key":"types. Perhaps","Fragments":["`isize`"]},{"Key":"Perhaps `isize`","Fragments":["would"]},{"Key":"`isize` would","Fragments":["be"]},{"Key":"be a","Fragments":["good","matter","problem.","bit","way","simpler","DNA","very","better","thing","problem","way","systems","good","bit","little","very","limitation","better","bitflags","bit","little","lot","case","`Vec\u003cOption\u003cT\u003e\u003e`","way","bit","better","possible"]},{"Key":"a good","Fragments":["choice","type","place","related","idea,","idea,","Iterator,","idea","idea","solution.","idea","second","balance","idea.","anonymous"]},{"Key":"good choice","Fragments":["here?"]},{"Key":"Nice concise","Fragments":["one!","one.","one..","one=)","one...","one","one","one=)","one..."]},{"Key":" Maybe","Fragments":["one","you","more","you","instead","instead","that","one"]},{"Key":"Maybe one","Fragments":["small","feedback"]},{"Key":"one small","Fragments":["note."]},{"Key":"small note.","Fragments":["Year"]},{"Key":"note. Year","Fragments":["in"]},{"Key":"Year in","Fragments":["`i64`?"]},{"Key":"in `i64`?","Fragments":["I"]},{"Key":"`i64`? I","Fragments":["think"]},{"Key":"think galaxy","Fragments":["die"]},{"Key":"galaxy die","Fragments":["sooner,"]},{"Key":"die sooner,","Fragments":["then"]},{"Key":"sooner, then","Fragments":["`i64`;)"]},{"Key":"think for","Fragments":["this","a"]},{"Key":"for this","Fragments":["exam","kind","variable.","small","is","is","purpose.","case","that","-","snippet","(9676)","do","exercise","problem,","method","exercise.","instead"]},{"Key":"this exam","Fragments":["is"]},{"Key":"exam is","Fragments":["sufficient"]},{"Key":"is sufficient","Fragments":["u32.."]},{"Key":"sufficient u32..","Fragments":["unsigned"]},{"Key":"u32.. unsigned","Fragments":["because"]},{"Key":"unsigned because","Fragments":["I"]},{"Key":"because I","Fragments":["don't","didn't","also","actually","couldn't","found"]},{"Key":"how work","Fragments":["this"]},{"Key":"work this","Fragments":["function"]},{"Key":"this function","Fragments":["before","should"]},{"Key":"function before","Fragments":["AD."]},{"Key":"before AD.","Fragments":["And"]},{"Key":"AD. And","Fragments":["32"]},{"Key":"And 32","Fragments":["is"]},{"Key":"32 is","Fragments":["too"]},{"Key":"is too","Fragments":["long"]},{"Key":"too long","Fragments":["for"]},{"Key":"long for","Fragments":["life"]},{"Key":"for life","Fragments":["of"]},{"Key":"life of","Fragments":["our"]},{"Key":"of our","Fragments":["galaxy...","galaxy;)"]},{"Key":" Good","Fragments":["to","question.","idea","use","spot!","point.","point.","catch","solution,","point,","catch!"]},{"Key":"Good to","Fragments":["see","know."]},{"Key":"to see","Fragments":["a","but","if","if","if","how","what","someone","if","more","a","more","whether","if"]},{"Key":"see a","Fragments":["benchmark.","`return`","comment"]},{"Key":"Note in","Fragments":["both"]},{"Key":"in both","Fragments":["methods","cases.","cases","`word`","```sum_of_squares```"]},{"Key":"both methods","Fragments":["you","are"]},{"Key":"methods you","Fragments":["are"]},{"Key":"you are","Fragments":["sorting","calling","using","sorting","used","using","right.","right.","also","doing","doing","correct.","creating"]},{"Key":"are sorting","Fragments":["or","word","`word`","`word`","```word```"]},{"Key":"sorting or","Fragments":["counting","sorting"]},{"Key":"or counting","Fragments":["the"]},{"Key":"counting the","Fragments":["input","number"]},{"Key":"the input","Fragments":["word","vector.","word","string.","dictionary","word.","vector.","word","where","will","variables","as","value","and","board"]},{"Key":"input word","Fragments":["once","more","once"]},{"Key":"word once","Fragments":["for","for"]},{"Key":"each item","Fragments":["in","in","in","in"]},{"Key":"item in","Fragments":["the","this","the","list,","the"]},{"Key":"yes. That","Fragments":["would"]},{"Key":"That would","Fragments":["help.","be"]},{"Key":"would help.","Fragments":["Thanks."]},{"Key":"This is","Fragments":["not","just","the","the","the","a","because","the","the","much","almost","kind","pretty","not","a","a","because","a","_extremely_","the","the","a"]},{"Key":"is not","Fragments":["as","a","1:1","arrived","trivial,","the","easy","possible","0!","idiomatic","needed.","really","necessary","the","needed","idiomatic.","really","needed","implemented","really","`char`."]},{"Key":"not as","Fragments":["readable","succinct","big"]},{"Key":"as readable","Fragments":["as","IMO."]},{"Key":"readable as","Fragments":["the"]},{"Key":"the first","Fragments":["iteration,","lines","worker","parameter.","attempt","map","element","character","test","iteration.","solution","`if`","item","rule","submission","submission","lowercase","test.","`n`","`clone`","iteration.","look.","two","Rust","iteration:","iteration:"]},{"Key":"first iteration,","Fragments":["but"]},{"Key":"iteration, but","Fragments":["will","used"]},{"Key":"but will","Fragments":["run"]},{"Key":"will run","Fragments":["in"]},{"Key":"run in","Fragments":["constant","constant"]},{"Key":"in constant","Fragments":["time.","time.","time."]},{"Key":"constant time.","Fragments":["Combining","If"]},{"Key":"time. Combining","Fragments":["the"]},{"Key":"Combining the","Fragments":["equations"]},{"Key":"the equations","Fragments":["in"]},{"Key":"equations in","Fragments":["`difference`"]},{"Key":"in `difference`","Fragments":["was"]},{"Key":"`difference` was","Fragments":["probably"]},{"Key":"was probably","Fragments":["unnecessary."]},{"Key":"I used","Fragments":["a","a","`.map(AsRef::as_ref)`","and","a","a","a","the","two"]},{"Key":"used a","Fragments":["recursive","recursive","sorted","similar","`channel`","u","`fold`"]},{"Key":"a recursive","Fragments":["approach","approach"]},{"Key":"recursive approach","Fragments":["to","to"]},{"Key":"approach to","Fragments":["construct","construct","solving"]},{"Key":"to construct","Fragments":["the","the"]},{"Key":"construct the","Fragments":["chain.","chain."]},{"Key":"the chain.","Fragments":["There","There"]},{"Key":"chain. There","Fragments":["is","is"]},{"Key":"There is","Fragments":["a","a","some","a","also","duplication","a","no","a","a","also","a","a"]},{"Key":"a small","Fragments":["optimization","optimization","amount","suggestion,","nitpick,"]},{"Key":"small optimization","Fragments":["at","at"]},{"Key":"optimization at","Fragments":["the","the"]},{"Key":"the beginning,","Fragments":["I","I"]},{"Key":"beginning, I","Fragments":["count","count"]},{"Key":"I count","Fragments":["how","how"]},{"Key":"count how","Fragments":["many","many"]},{"Key":"how many","Fragments":["times","times"]},{"Key":"times we","Fragments":["have","have"]},{"Key":"have each","Fragments":["number,","number,"]},{"Key":"each number,","Fragments":["if","if"]},{"Key":"number, if","Fragments":["for","for"]},{"Key":"if for","Fragments":["any","any"]},{"Key":"for any","Fragments":["number","number","changes","number?","integer","numeric"]},{"Key":"any number","Fragments":["the","the"]},{"Key":"number the","Fragments":["count","count"]},{"Key":"count is","Fragments":["odd","odd","fast"]},{"Key":"is odd","Fragments":["(eg.","(eg."]},{"Key":"odd (eg.","Fragments":["3","3"]},{"Key":"(eg. 3","Fragments":["times","times"]},{"Key":"3 times","Fragments":["the","the","as"]},{"Key":"times the","Fragments":["number","number"]},{"Key":"the number","Fragments":["1)","already","of","1)","of","instead","raised","of","of","of"]},{"Key":"number 1)","Fragments":["then","then"]},{"Key":"1) then","Fragments":["it","it"]},{"Key":"then it","Fragments":["is","is"]},{"Key":"is impossible","Fragments":["to","to"]},{"Key":"impossible to","Fragments":["have","share","have","use"]},{"Key":"a domino","Fragments":["chain.","by","chain."]},{"Key":" Iteration","Fragments":["#2"]},{"Key":"Iteration #2","Fragments":[":"]},{"Key":"#2 :","Fragments":["I"]},{"Key":": I","Fragments":["removed","don't"]},{"Key":"I removed","Fragments":["the","`orthogonal_to`"]},{"Key":"removed the","Fragments":["duplicated"]},{"Key":"the duplicated","Fragments":["code"]},{"Key":"duplicated code","Fragments":["by","in"]},{"Key":"code by","Fragments":["duplicating"]},{"Key":"by duplicating","Fragments":["the"]},{"Key":"duplicating the","Fragments":["if","Allergen"]},{"Key":"if condtion","Fragments":["`chain.len()"]},{"Key":"condtion `chain.len()","Fragments":["!="]},{"Key":"`chain.len() !=","Fragments":["0"]},{"Key":"!= 0","Fragments":["\u0026\u0026","instead.","||"]},{"Key":"0 \u0026\u0026","Fragments":["chain.last().unwrap().1`","year","year"]},{"Key":"\u0026\u0026 chain.last().unwrap().1`","Fragments":["to"]},{"Key":"chain.last().unwrap().1` to","Fragments":["determine"]},{"Key":"to determine","Fragments":["if","whether","whether"]},{"Key":"determine if","Fragments":["the"]},{"Key":"the piece","Fragments":["should"]},{"Key":"piece should","Fragments":["be"]},{"Key":" Code","Fragments":["looks"]},{"Key":"Code looks","Fragments":["pretty"]},{"Key":"looks pretty","Fragments":["understandable","good","ugly."]},{"Key":"pretty understandable","Fragments":["on"]},{"Key":"understandable on","Fragments":["the"]},{"Key":" Not","Fragments":["sure","as","being","a","a"]},{"Key":"Not sure","Fragments":["if","the","if","if","what","whether"]},{"Key":"sure if","Fragments":["you","there","it's","this","this","it","I","it's","you","it's","there","it's"]},{"Key":"if you","Fragments":["really","submit","like:","use","have","derive","like,","like,","can","find","are","used","use","really","so","switch","eliminated","used","did","should","can","have","add","were","think"]},{"Key":"you really","Fragments":["feel","feel","need","need"]},{"Key":"really feel","Fragments":["like","like"]},{"Key":"feel like","Fragments":["revisiting","there","using","it","revisiting","it's","I'm","I"]},{"Key":"like revisiting","Fragments":["code","code"]},{"Key":"revisiting code","Fragments":["from","from"]},{"Key":"code from","Fragments":["5","six","another"]},{"Key":"from 5","Fragments":["weeks"]},{"Key":"5 weeks","Fragments":["ago"]},{"Key":"weeks ago","Fragments":["but"]},{"Key":"ago but","Fragments":["I"]},{"Key":"but I","Fragments":["think","think","like","couldn't","wasn't","think","wonder","haven't","couldn't","like","did","didn't","did","have","am","wanted","wanted","can't","took","took","think","think","was","for","think","didn't","haven't","think","think","also","don't","didn't.","decided","didn't","much","wanted","thought","don't","don't","generally","couldn't","do","don't","haven't"]},{"Key":"think this","Fragments":["code","problem","shows","clearly","is","strikes","is","might","would","is","makes"]},{"Key":"this code","Fragments":["loops","as","returns","are","doesn't","would","harder","snippet"]},{"Key":"code loops","Fragments":["forever"]},{"Key":"loops forever","Fragments":["on"]},{"Key":"forever on","Fragments":["`chain(\u0026vec![(1,"]},{"Key":"on `chain(\u0026vec![(1,","Fragments":["2),"]},{"Key":"`chain(\u0026vec![(1, 2),","Fragments":["(2,","(2,"]},{"Key":"2), (2,","Fragments":["1),","3),"]},{"Key":"(2, 1),","Fragments":["(3,"]},{"Key":"1), (3,","Fragments":["4),"]},{"Key":"(3, 4),","Fragments":["(4,"]},{"Key":"4), (4,","Fragments":["3)])`"]},{"Key":"(4, 3)])`","Fragments":["when"]},{"Key":"3)])` when","Fragments":["instead"]},{"Key":"when instead","Fragments":["it"]},{"Key":"instead it","Fragments":["should"]},{"Key":"it should","Fragments":["return","really","have","be,","really","be,","count","be","be","be"]},{"Key":"should return","Fragments":["`None`","`None`,","`Some`"]},{"Key":"Nice catch","Fragments":["@gaetano,"]},{"Key":"catch @gaetano,","Fragments":["thanks!"]},{"Key":"@gaetano, thanks!","Fragments":["The"]},{"Key":"thanks! The","Fragments":["bug"]},{"Key":"The bug","Fragments":["was"]},{"Key":"bug was","Fragments":["that"]},{"Key":"was that","Fragments":["I","the"]},{"Key":"was not","Fragments":["copying","currently","sure","with"]},{"Key":"not copying","Fragments":["new_pieces"]},{"Key":"copying new_pieces","Fragments":["before"]},{"Key":"new_pieces before","Fragments":["extending"]},{"Key":"before extending","Fragments":["it"]},{"Key":"extending it","Fragments":["which"]},{"Key":"it which","Fragments":["caused"]},{"Key":"which caused","Fragments":["the"]},{"Key":"caused the","Fragments":["while"]},{"Key":"the while","Fragments":["loop"]},{"Key":"while loop","Fragments":["to",":-("]},{"Key":"loop to","Fragments":["go"]},{"Key":"go on","Fragments":["forever."]},{"Key":"on forever.","Fragments":["I"]},{"Key":"forever. I","Fragments":["sent","have"]},{"Key":"I sent","Fragments":["a","a","a"]},{"Key":"sent a","Fragments":["pull-request","pull","pull"]},{"Key":"a pull-request","Fragments":["to"]},{"Key":"pull-request to","Fragments":["add"]},{"Key":"to add","Fragments":["the","a","or","parenthesis","it"]},{"Key":"add the","Fragments":["test"]},{"Key":"the test","Fragments":["case","suite,","for","data","cases","file.","code.","code","has","suite","suite","string,"]},{"Key":"test case","Fragments":["you","and","to"]},{"Key":"case you","Fragments":["suggested","find"]},{"Key":"you suggested","Fragments":["to"]},{"Key":"suggested to","Fragments":["the","simply"]},{"Key":"test suite,","Fragments":["this"]},{"Key":"suite, this","Fragments":["situation"]},{"Key":"this situation","Fragments":["was"]},{"Key":"situation was","Fragments":["not"]},{"Key":"not currently","Fragments":["covered."]},{"Key":" Lines","Fragments":["36","37,38:"]},{"Key":"Lines 36","Fragments":["to"]},{"Key":"36 to","Fragments":["39:"]},{"Key":"to 39:","Fragments":["you"]},{"Key":"39: you","Fragments":["don't"]},{"Key":"the match.","Fragments":["Just"]},{"Key":"match. Just","Fragments":["return"]},{"Key":"Just return","Fragments":["the"]},{"Key":"the boolean","Fragments":["value","expression","expression?"]},{"Key":"boolean value","Fragments":["directly.","after"]},{"Key":" 46","Fragments":["to"]},{"Key":"46 to","Fragments":["50:"]},{"Key":"to 50:","Fragments":["iterate"]},{"Key":"50: iterate","Fragments":["over"]},{"Key":"iterate over","Fragments":["an","in","`in_word_list`","`words`","the","a","`a`","`inputs`","references","copied","moved","`words`","`inputs`","them.","graphemes,","the","`inputs`","`pool`","`inputs`","`candidates`","`candidates`","`inputs`","the","`inputs`","`dict`","`inputs`","the","original","it","`inputs`","the","`inputs`"]},{"Key":"over an","Fragments":["array","an"]},{"Key":"array of","Fragments":["the","`\u0026str`,","all","function"]},{"Key":"the Allergen","Fragments":["values,","enum","values","items","types","enum,"]},{"Key":"Allergen values,","Fragments":["then"]},{"Key":"values, then","Fragments":["you"]},{"Key":"then you","Fragments":["won't","iterate","iterate","get","iterate","iterate","iterate","iterate","iterate","compare","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate","iterate"]},{"Key":"you won't","Fragments":["need","get"]},{"Key":"won't need","Fragments":["the"]},{"Key":"the allergen","Fragments":["function.","should","as"]},{"Key":"allergen function.","Fragments":["Also"]},{"Key":"function. Also","Fragments":["this"]},{"Key":"Also this","Fragments":["loop"]},{"Key":"this loop","Fragments":["is"]},{"Key":"loop is","Fragments":["a"]},{"Key":"a combination","Fragments":["of"]},{"Key":"combination of","Fragments":["a"]},{"Key":"a filter","Fragments":["and","instead","+"]},{"Key":"and a","Fragments":["map","`HashMap`","whole","new","little","for","second","bunch"]},{"Key":"a map","Fragments":["so","for","function"]},{"Key":"map so","Fragments":["you"]},{"Key":"so you","Fragments":["can","can","don't","can","can","can","don't","don't","can","can","end"]},{"Key":"can use","Fragments":["those","`Option::map`","the","the","`self.grades.keys().cloned().collect()`.","the","`entry(word).insert_or(0)`","`*v","to","it","a","something","the","to","```chars().nth(0)```","```ok_or```","is_numeric","to","to","the","filter","`.pow(2)`"]},{"Key":"use those","Fragments":["functions"]},{"Key":"those functions","Fragments":["instead."]},{"Key":" Can","Fragments":["you","you","I","you"]},{"Key":"Can you","Fragments":["rewrite","drop","imagine"]},{"Key":"you rewrite","Fragments":["this"]},{"Key":"rewrite this","Fragments":["into"]},{"Key":"this into","Fragments":["a"]},{"Key":"into a","Fragments":["boolean","helper","helper","fun","sub","Graph","vector"]},{"Key":"a boolean","Fragments":["expression","expression,","value.","expression","and","value"]},{"Key":"boolean expression","Fragments":["instead","here,","itself.","instead?","instead","that","might"]},{"Key":"expression instead","Fragments":["of","of"]},{"Key":"of nested","Fragments":["`if`s?","`if`s.","`if`s"]},{"Key":" When","Fragments":["trying","I","submitting,","I"]},{"Key":"When trying","Fragments":["to"]},{"Key":"trying to","Fragments":["solve","raise","just","find","get","get","figure","figure"]},{"Key":"to solve","Fragments":["this","this,","the","this","at","this"]},{"Key":"solve this","Fragments":["exercise","problem.","problem."]},{"Key":"exercise it","Fragments":["really"]},{"Key":"it really","Fragments":["showed","confusing"]},{"Key":"really showed","Fragments":["that"]},{"Key":"showed that","Fragments":["Rust","your"]},{"Key":"that Rust","Fragments":["is","has","does"]},{"Key":"still relatively","Fragments":["young."]},{"Key":"relatively young.","Fragments":["Many"]},{"Key":"young. Many","Fragments":["features"]},{"Key":"Many features","Fragments":["are"]},{"Key":"features are","Fragments":["not"]},{"Key":"are not","Fragments":["available","necessary.","visible","needed.","always"]},{"Key":"not available","Fragments":["because"]},{"Key":"available because","Fragments":["they"]},{"Key":"they are","Fragments":["in","heap","inlined.","anagrams.","documenting.","always","input","unicode.","equivalent,","anyway.","connected"]},{"Key":"are in","Fragments":["a"]},{"Key":"a state","Fragments":["of"]},{"Key":"state of","Fragments":["change"]},{"Key":"of change","Fragments":["and"]},{"Key":"change and","Fragments":["deemed"]},{"Key":"and deemed","Fragments":["\"unstable\"."]},{"Key":"deemed \"unstable\".","Fragments":["What"]},{"Key":"\"unstable\". What","Fragments":["annoyed"]},{"Key":"What annoyed","Fragments":["me"]},{"Key":"annoyed me","Fragments":["here"]},{"Key":"me here","Fragments":["in","was"]},{"Key":"here in","Fragments":["particular:"]},{"Key":" 1.","Fragments":["No","`Option::map()`","This","clever","Sounds","Use","You","The","The","Add","You've","You","I'm"]},{"Key":"1. No","Fragments":["thread"]},{"Key":"No thread","Fragments":["local"]},{"Key":"thread local","Fragments":["storage"]},{"Key":"local storage","Fragments":["=\u003e"]},{"Key":"storage =\u003e","Fragments":["impossible"]},{"Key":"=\u003e impossible","Fragments":["to"]},{"Key":"to share","Fragments":["borrowed"]},{"Key":"share borrowed","Fragments":["references"]},{"Key":"borrowed references","Fragments":["to"]},{"Key":"references to","Fragments":["threads","things","the"]},{"Key":"to threads","Fragments":["=\u003e"]},{"Key":"threads =\u003e","Fragments":["need"]},{"Key":"=\u003e need","Fragments":["to"]},{"Key":"need to","Fragments":["copy","access","unravel","eagerly","call","sort.","have","learn","look","be","do","both","read","create","take","do","test","do","call","allocate","be","iterate.","convert","explicitly","iterate","lowercase","check","do","write","test","write","be","be","clone","`allergen.clone()`","list","for","shift","do","`collect::\u003cVec\u003c_\u003e\u003e`,","list","add","rewrite"]},{"Key":"to copy","Fragments":["all","Allergen"]},{"Key":"copy all","Fragments":["the"]},{"Key":" 2.","Fragments":["No","In","Good","What","I","Find","It","`str`","Prefix","`into_ascii_upper`"]},{"Key":"2. No","Fragments":["step_by()"]},{"Key":"No step_by()","Fragments":["for"]},{"Key":"step_by() for","Fragments":["ranges"]},{"Key":"for ranges","Fragments":["=\u003e"]},{"Key":"ranges =\u003e","Fragments":["manual"]},{"Key":"=\u003e manual","Fragments":["while"]},{"Key":"manual while","Fragments":["loop"]},{"Key":"can simplify","Fragments":["a","that","the"]},{"Key":"simplify a","Fragments":["little"]},{"Key":"a little","Fragments":["by","slower","weird,","something:","wasteful","wasteful.","faster,","bit","less","about","off","easier","bit","more","easier","bit","weird.","bit"]},{"Key":"little by","Fragments":["```collect```ing"]},{"Key":"by ```collect```ing","Fragments":["what"]},{"Key":"```collect```ing what","Fragments":["you"]},{"Key":"what you","Fragments":["iterate","need","think","think.","mean","meant","mean","want","are","do"]},{"Key":"you iterate","Fragments":["over","over","over","over","over","through","over","over","over","over","over","over","over","over","over","over","over","over"]},{"Key":"over in","Fragments":["line"]},{"Key":"line 11","Fragments":["and","which"]},{"Key":"11 and","Fragments":["just"]},{"Key":"and just","Fragments":["returning","hard-coded","misremembered","wrapping","have","leave","as"]},{"Key":"just returning","Fragments":["that."]},{"Key":" \"doesn't","Fragments":["that"]},{"Key":"\"doesn't that","Fragments":["compile"]},{"Key":"that compile","Fragments":["to","to"]},{"Key":"compile to","Fragments":["exactly","exactly"]},{"Key":"to exactly","Fragments":["the","the"]},{"Key":"exactly the","Fragments":["same","same"]},{"Key":"same thing","Fragments":["in","in","just","in","with","for"]},{"Key":"thing in","Fragments":["the","the","code","the","an"]},{"Key":"the end?\"","Fragments":["yes"]},{"Key":"end?\" yes","Fragments":["but"]},{"Key":"yes but","Fragments":["code"]},{"Key":"but code","Fragments":["should"]},{"Key":"code should","Fragments":["be"]},{"Key":"be optimized","Fragments":["for","by","here,"]},{"Key":"optimized for","Fragments":["the"]},{"Key":"the reader,","Fragments":["not"]},{"Key":"reader, not","Fragments":["the"]},{"Key":" Version","Fragments":["without"]},{"Key":"Version without","Fragments":["simple_parallel."]},{"Key":"without simple_parallel.","Fragments":["Not"]},{"Key":"simple_parallel. Not","Fragments":["sure"]},{"Key":"sure the","Fragments":["extra"]},{"Key":"the extra","Fragments":["effort"]},{"Key":"extra effort","Fragments":["is"]},{"Key":"effort is","Fragments":["worthwhile,"]},{"Key":"is worthwhile,","Fragments":["personally;"]},{"Key":"worthwhile, personally;","Fragments":["the"]},{"Key":"personally; the","Fragments":["end"]},{"Key":"the end","Fragments":["result","I","of","of","of","of","of","```sum"]},{"Key":"end result","Fragments":["is"]},{"Key":"result is","Fragments":["pretty","always"]},{"Key":"is pretty","Fragments":["much","smart","clear.","much","neat"]},{"Key":"pretty much","Fragments":["the","every","designed","copied","the"]},{"Key":"much the","Fragments":["same.","\"obvious\""]},{"Key":" Here","Fragments":["I","however,","I'm"]},{"Key":"Here I","Fragments":["try"]},{"Key":"I try","Fragments":["to","simple","to"]},{"Key":"try to","Fragments":["set","iterate","add","work","use","see","do","get","shy","simplify","collect"]},{"Key":"to set","Fragments":["the","up","up","the"]},{"Key":"set the","Fragments":["worker","lifetime"]},{"Key":"the worker","Fragments":["threads"]},{"Key":"worker threads","Fragments":["in"]},{"Key":"threads in","Fragments":["motion"]},{"Key":"in motion","Fragments":["before"]},{"Key":"motion before","Fragments":["attempting"]},{"Key":"before attempting","Fragments":["to","to"]},{"Key":"attempting to","Fragments":["receive","see"]},{"Key":"to receive","Fragments":["anything."]},{"Key":"receive anything.","Fragments":["I'm"]},{"Key":"anything. I'm","Fragments":["not"]},{"Key":"100% sure,","Fragments":["but"]},{"Key":"sure, but","Fragments":["I"]},{"Key":"think creating","Fragments":["a"]},{"Key":"creating a","Fragments":["worker","separate","`\u0026str`"]},{"Key":"a worker","Fragments":["and"]},{"Key":"worker and","Fragments":["then"]},{"Key":"then calling","Fragments":["receive","a"]},{"Key":"calling receive","Fragments":["before"]},{"Key":"receive before","Fragments":["creating"]},{"Key":"before creating","Fragments":["the"]},{"Key":"creating the","Fragments":["next"]},{"Key":"next worker","Fragments":["will"]},{"Key":"worker will","Fragments":["end"]},{"Key":"will end","Fragments":["up"]},{"Key":"end up","Fragments":["just","with"]},{"Key":"up just","Fragments":["adding"]},{"Key":"just adding","Fragments":["significant"]},{"Key":"adding significant","Fragments":["overhead"]},{"Key":"significant overhead","Fragments":["to","during"]},{"Key":"overhead to","Fragments":["a","call"]},{"Key":"a sequential","Fragments":["operation."]},{"Key":" Hat","Fragments":["tip"]},{"Key":"Hat tip","Fragments":["to"]},{"Key":"tip to","Fragments":["ekse"]},{"Key":"to ekse","Fragments":["for"]},{"Key":"ekse for","Fragments":["demonstrating"]},{"Key":"for demonstrating","Fragments":["the"]},{"Key":"demonstrating the","Fragments":["use"]},{"Key":"the use","Fragments":["of","of","of","of","of","of","of","of","of"]},{"Key":"use of","Fragments":["`threadpool`","[num::integer::Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html)","`entry`","unstable","the","the","vectors","moved","`fold`.","it.","a","`if","if-let","```threadpool```","a","anonymous","\"return\"","named","sorting.","the","`fold`","functional","the"]},{"Key":"of `threadpool`","Fragments":["and"]},{"Key":"`threadpool` and","Fragments":["channels."]},{"Key":" ```map_text```","Fragments":["could"]},{"Key":"```map_text``` could","Fragments":["be"]},{"Key":"more simply","Fragments":["written","written"]},{"Key":"simply written","Fragments":["using","as"]},{"Key":"written using","Fragments":["a"]},{"Key":"using a","Fragments":["```for```","`u16`","regular","hashmap?","fold","hash","hashmap","helper","HashMap","`for`","tuple","tuple","tuple","`divisible_by`","mutable","for","struct","`for`","`fold`","clone","data","range","`LinkedList`"]},{"Key":"a ```for```","Fragments":["loop."]},{"Key":"Well, I","Fragments":["recognize","know"]},{"Key":"I recognize","Fragments":["that"]},{"Key":"recognize that","Fragments":["you"]},{"Key":"that you","Fragments":["could...","don't","can","don't","only","are","can","named","can","do","already"]},{"Key":" fn","Fragments":["for_map_text(text:","count_multipass_large(b:","count_onepass_large(b:","collect\u003cB\u003e(self)","main()","bench_hamming_fold(b:","bench_hamming_filter(b:","foo(bar:","sort_key(\u0026self)","square_of_sum\u003cN:","is_shouting(string:","is_whitespace(message:","test_unicode_byte_anagrams()","lower(str:","lower(str:","lower(s:","lower(source:"]},{"Key":"fn for_map_text(text:","Fragments":["\u0026str)"]},{"Key":"for_map_text(text: \u0026str)","Fragments":["-\u003e"]},{"Key":"\u0026str) -\u003e","Fragments":["HashMap\u003cchar,","usize","usize","bool","String"]},{"Key":"-\u003e HashMap\u003cchar,","Fragments":["u32\u003e"]},{"Key":"HashMap\u003cchar, u32\u003e","Fragments":["{"]},{"Key":"let chars","Fragments":["="]},{"Key":"chars =","Fragments":["text.chars().filter_map(|c|"]},{"Key":"= text.chars().filter_map(|c|","Fragments":["match"]},{"Key":"text.chars().filter_map(|c| match","Fragments":["c.is_alphabetic()"]},{"Key":"match c.is_alphabetic()","Fragments":["{"]},{"Key":" true","Fragments":["=\u003e"]},{"Key":"true =\u003e","Fragments":["c.to_lowercase().nth(0),"]},{"Key":" false","Fragments":["=\u003e"]},{"Key":"false =\u003e","Fragments":["None"]},{"Key":"mut map","Fragments":["="]},{"Key":"map =","Fragments":["HashMap::new();"]},{"Key":" for","Fragments":["c","n","c","me","c","word","x"]},{"Key":"for c","Fragments":["in","in","in"]},{"Key":"c in","Fragments":["chars","candidates","chars","chars"]},{"Key":"in chars","Fragments":["{","{","{"]},{"Key":" *map.entry(c).or_insert(0)","Fragments":["+="]},{"Key":"*map.entry(c).or_insert(0) +=","Fragments":["1;"]},{"Key":" ...But","Fragments":["doesn't"]},{"Key":"...But doesn't","Fragments":["that"]},{"Key":"doesn't that","Fragments":["compile"]},{"Key":" lol.","Fragments":["Yeah,"]},{"Key":"lol. Yeah,","Fragments":["I"]},{"Key":"Yeah, I","Fragments":["hate"]},{"Key":"I hate","Fragments":["for","regular"]},{"Key":"hate for","Fragments":["loops."]},{"Key":"for loops.","Fragments":[":p"]},{"Key":"I tend","Fragments":["to","to"]},{"Key":"tend to","Fragments":["avoid","just"]},{"Key":"to avoid","Fragments":["the","duplicating","allocation","this","listing","manually","overhead","allocation","the","splitting","an"]},{"Key":"avoid the","Fragments":["whole","copy","ascii","early","nesting","pop"]},{"Key":"the whole","Fragments":["iterator","function","`.map(|\u0026x|","thing","pointer","let","if-else","thing"]},{"Key":"whole iterator","Fragments":["transform"]},{"Key":"iterator transform","Fragments":["thing"]},{"Key":"transform thing","Fragments":["in"]},{"Key":"in code","Fragments":["at"]},{"Key":"code at","Fragments":["work,"]},{"Key":"at work,","Fragments":["but"]},{"Key":"work, but","Fragments":["I"]},{"Key":"like it","Fragments":["better","only","is"]},{"Key":"it better","Fragments":["this"]},{"Key":"better this","Fragments":["way,"]},{"Key":"this way,","Fragments":["personally.","so"]},{"Key":" Have","Fragments":["you"]},{"Key":"Have you","Fragments":["considered"]},{"Key":"you considered","Fragments":["using"]},{"Key":"considered using","Fragments":["`count`"]},{"Key":"using `count`","Fragments":["in"]},{"Key":"`count` in","Fragments":["`nucleotide_counts`","`char_count`,"]},{"Key":"in `nucleotide_counts`","Fragments":["to"]},{"Key":"`nucleotide_counts` to","Fragments":["simplify"]},{"Key":" I'm","Fragments":["sure","not","having","really","also","not","not","on","not","not","in","not","not","pretty","not","accounting","not","checking","not","running","not","going","not","mostly","undecided","using","not","not","not","curiously","curious,","glad","curious","not","still"]},{"Key":"I'm sure","Fragments":["I've","that","Rust"]},{"Key":"sure I've","Fragments":["done"]},{"Key":"I've done","Fragments":["some","so"]},{"Key":"done some","Fragments":["pretty"]},{"Key":"some pretty","Fragments":["horrible"]},{"Key":"pretty horrible","Fragments":["things"]},{"Key":"horrible things","Fragments":["in"]},{"Key":"things in","Fragments":["here."]},{"Key":"in here.","Fragments":["There"]},{"Key":"here. There","Fragments":["are"]},{"Key":"There are","Fragments":["a","better","a","various","several","a","still","also","two"]},{"Key":"are a","Fragments":["couple","lot","little","few","maximum","couple","bit"]},{"Key":"a couple","Fragments":["of","hints"]},{"Key":"couple of","Fragments":["recasts"]},{"Key":"of recasts","Fragments":["that"]},{"Key":"recasts that","Fragments":["I"]},{"Key":"don't like","Fragments":["(line","`ALL`","the","naming","the","one-line","that","that,","the","the","taking","doing","to","excessive"]},{"Key":"like (line","Fragments":["17"]},{"Key":"(line 17","Fragments":["and"]},{"Key":"17 and","Fragments":["26)."]},{"Key":"and 26).","Fragments":["Running"]},{"Key":"26). Running","Fragments":["this"]},{"Key":"Running this","Fragments":["will"]},{"Key":"will produce","Fragments":["a"]},{"Key":"produce a","Fragments":["warning"]},{"Key":"a warning","Fragments":["that"]},{"Key":"warning that","Fragments":["the```.position_elem()```"]},{"Key":"that the```.position_elem()```","Fragments":["method"]},{"Key":"the```.position_elem()``` method","Fragments":["should"]},{"Key":"method should","Fragments":["be"]},{"Key":"with ```.iter().position()```","Fragments":["but"]},{"Key":"```.iter().position()``` but","Fragments":["I"]},{"Key":"I couldn't","Fragments":["get","figure","find","get","guarantee","get","get"]},{"Key":"get that","Fragments":["to","to"]},{"Key":"to work","Fragments":["with","out","without","with","for"]},{"Key":"work with","Fragments":["the","the","a","non-ascii"]},{"Key":"the ```Vec\u003cAllergen\u003e```","Fragments":["type."]},{"Key":" Also,","Fragments":["a","the","the","perhaps","see","you","not","from","is","you","you","```match"]},{"Key":"Also, a","Fragments":["tuple"]},{"Key":"a tuple","Fragments":["struct","struct.","is","instead","struct,","for","in"]},{"Key":"tuple struct","Fragments":["seems"]},{"Key":"struct seems","Fragments":["a"]},{"Key":"seems a","Fragments":["poor","reasonable","little","little"]},{"Key":"a poor","Fragments":["type"]},{"Key":"poor type","Fragments":["choice"]},{"Key":"type choice","Fragments":["for"]},{"Key":"choice for","Fragments":["```Allergies```,","`ALLERGENS`"]},{"Key":"for ```Allergies```,","Fragments":["given"]},{"Key":"```Allergies```, given","Fragments":["that"]},{"Key":"given that","Fragments":["the","any","you"]},{"Key":"the traits","Fragments":["need"]},{"Key":"traits need","Fragments":["to"]},{"Key":"to access","Fragments":["fields.","the"]},{"Key":"access fields.","Fragments":["Why"]},{"Key":"fields. Why","Fragments":["not"]},{"Key":"Why not","Fragments":["just","move","call","return","just"]},{"Key":"not just","Fragments":["use","return","return"]},{"Key":"just use","Fragments":["a","an","the","implicit","integer","`fold`","the","self.0","its"]},{"Key":"use a","Fragments":["struct?","full","struct","BTree","BTree","smaller","closure","bitwise","local","return","larger","single","graph","different","\"big\""]},{"Key":"I tried","Fragments":["to","rust","this","just","to"]},{"Key":"tried to","Fragments":["make","do","use","create"]},{"Key":"to make","Fragments":["it","the","the","(vs","it","that","a","sure","the","things","this","it","it","the","this","a","it","this","the"]},{"Key":"make it","Fragments":["as","obvious","faster","too","even","into","a","easier","easier","be","more","a"]},{"Key":"it as","Fragments":["simple","is","a","a","a"]},{"Key":"as simple","Fragments":["as","in"]},{"Key":"simple as","Fragments":["possible."]},{"Key":" is_divisible_by","Fragments":["is"]},{"Key":"is_divisible_by is","Fragments":["ambiguous:"]},{"Key":"is ambiguous:","Fragments":["you"]},{"Key":"ambiguous: you","Fragments":["can"]},{"Key":"can accidentally","Fragments":["swap"]},{"Key":"accidentally swap","Fragments":["its"]},{"Key":"swap its","Fragments":["arguments"]},{"Key":"its arguments","Fragments":["and"]},{"Key":"arguments and","Fragments":["it","return"]},{"Key":"it silently","Fragments":["calculates"]},{"Key":"silently calculates","Fragments":["wrong"]},{"Key":"calculates wrong","Fragments":["result."]},{"Key":" Better","Fragments":["to","not","to"]},{"Key":"Better to","Fragments":["make","use"]},{"Key":"make the","Fragments":["values","code","filtering","intention","code","code","code","insertion","most","leap"]},{"Key":"the values","Fragments":["unsigned.","from","of","of","of","that","of","of","of","are","and"]},{"Key":"also use","Fragments":["the","```gen_range```","a","a","the","```filter```","`fold`","Python","zip","the"]},{"Key":"use the","Fragments":["formulae","custom_derive","fact","language.","`match`","join","formulae","string","result","unstable","*","same","formulae","char::is_alphanumeric()","conditional","count","[Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html)","numerical","integers","crate","same","Rust","mathematical","`new`"]},{"Key":"the formulae","Fragments":["for","for","for","for","for","for","for"]},{"Key":"formulae for","Fragments":["sums","sums","sums","sums","sums","sums","both","sums","sums","sums"]},{"Key":"for sums","Fragments":["of","of","and","of","of","of","of","of","of"]},{"Key":"sums of","Fragments":["consecutive","squares","consecutive","squares.","squares/sums","consecutive","squares","consecutive","squares,","square","integers.","squares","consecutive","squares","consecutive"]},{"Key":"of consecutive","Fragments":["integers","integers.","integers,","integers","integers.","integers.","integers"]},{"Key":"consecutive integers","Fragments":["and","and","for"]},{"Key":"integers and","Fragments":["squares","squares,"]},{"Key":"and squares","Fragments":["for"]},{"Key":"squares for","Fragments":["a"]},{"Key":"a constant","Fragments":["time","time","time","time","time","time","time","time"]},{"Key":"constant time","Fragments":["solution.","solution","solution","solution.","run,","solution","solution","solution","solution."]},{"Key":" `if","Fragments":["condition","(condition)","cond","some_boolean","cond"]},{"Key":"`if condition","Fragments":["{"]},{"Key":"condition {","Fragments":["true"]},{"Key":"{ true","Fragments":["}","}","}","}`","}","}"]},{"Key":"true }","Fragments":["else","else","else","else","else"]},{"Key":"} else","Fragments":["{","{","{","{","{","{","if","if","{","{","{","{false}`","{"]},{"Key":"else {","Fragments":["false","false","Z","c","false","B","false"]},{"Key":"{ false","Fragments":["}`","}","}`","}","}`"]},{"Key":"false }`","Fragments":["is","is","is"]},{"Key":"}` is","Fragments":["the","the","the"]},{"Key":"same as","Fragments":["`condition`.","my","`condition`!","`cond`.","`.map(|x|","`cond`.","`cond`","lines"]},{"Key":"I know","Fragments":["it","-","how","you"]},{"Key":"it can","Fragments":["be","be","be","be","be","compact","provide,"]},{"Key":"be done","Fragments":["in","with","only","with","better","much","without","efficiently","using","fewer","with"]},{"Key":"done in","Fragments":["a","is_anagram-of","a","the"]},{"Key":"a better,","Fragments":["more"]},{"Key":"better, more","Fragments":["functional"]},{"Key":"more functional","Fragments":["way,","version","style","approach"]},{"Key":"functional way,","Fragments":["but"]},{"Key":"way, but","Fragments":["I'm"]},{"Key":"but I'm","Fragments":["lazy","too","not","not","sure","not","not","still","not","a"]},{"Key":"I'm lazy","Fragments":["now."]},{"Key":" how","Fragments":["about"]},{"Key":"how about","Fragments":["using"]},{"Key":"about using","Fragments":["`fold`","`sum`,","closures","closure."]},{"Key":"using `fold`","Fragments":["?","on","felt"]},{"Key":" *","Fragments":["Since","You","It","I","I","thread","you","there","Had","Had","Had","Had","I","The","The","You","Personally","there","dots","Instead","explicit","`if","In","`if","Instead","Converting","I","I","*","*","*","*"]},{"Key":"* Since","Fragments":["`isize`"]},{"Key":"Since `isize`","Fragments":["is"]},{"Key":"`isize` is","Fragments":["system"]},{"Key":"is system","Fragments":["dependent","dependent","dependant"]},{"Key":"system dependent","Fragments":["I","and"]},{"Key":"dependent I","Fragments":["don't"]},{"Key":"good type","Fragments":["for"]},{"Key":"type for","Fragments":["`year`.","`year`."]},{"Key":"* You","Fragments":["can","can"]},{"Key":"can omit","Fragments":["`return`","`return`","the"]},{"Key":"omit `return`","Fragments":["and","and"]},{"Key":"`return` and","Fragments":["`;`","`;`"]},{"Key":"and `;`","Fragments":["(either","(keep"]},{"Key":"`;` (either","Fragments":["keep"]},{"Key":"(either keep","Fragments":["both"]},{"Key":"keep both","Fragments":["or"]},{"Key":"both or","Fragments":["drop","drop"]},{"Key":"or drop","Fragments":["both)","both)."]},{"Key":" Thanks!","Fragments":[":)","I've"]},{"Key":"the comment,","Fragments":["the","the","I"]},{"Key":"comment, the","Fragments":["code","code"]},{"Key":"code repeats","Fragments":["it"]},{"Key":"repeats it","Fragments":["in"]},{"Key":"it in","Fragments":["a","a","place.","the","its","pieces","Project","this"]},{"Key":"a more","Fragments":["readable","focused","efficient","reasonable","elegant","idiomatic","functional","efficient","functional","imperative","functional"]},{"Key":" working!","Fragments":["I"]},{"Key":"working! I","Fragments":["had","had"]},{"Key":"I had","Fragments":["a","not","no","to","seen","my","a","an","read","to","thought","a","restricted","to","fewer","here","to","to","to","a","on"]},{"Key":"had a","Fragments":["fun","solution","C","really"]},{"Key":"a fun","Fragments":["problem","bug"]},{"Key":"fun problem","Fragments":["for"]},{"Key":"problem for","Fragments":["a"]},{"Key":"a while","Fragments":["where","of"]},{"Key":"while where","Fragments":["I"]},{"Key":"where I","Fragments":["was","don't","had","was","use"]},{"Key":"was trying","Fragments":["to","to","to","to"]},{"Key":"to raise","Fragments":["to"]},{"Key":"raise to","Fragments":["a"]},{"Key":"a power","Fragments":["with","of"]},{"Key":"power with","Fragments":["`^`"]},{"Key":"with `^`","Fragments":["which"]},{"Key":"`^` which","Fragments":["is"]},{"Key":"which is","Fragments":["actually","the","equivalent","a","a","now","much","a","better.","better","quite","faster.","a","redundant.","wasteful.","what","now","a","clearer.","why","already"]},{"Key":"is actually","Fragments":["the","\"just","a"]},{"Key":"actually the","Fragments":["`bitwise"]},{"Key":"the `bitwise","Fragments":["or`"]},{"Key":"`bitwise or`","Fragments":["operator."]},{"Key":"or` operator.","Fragments":["Made"]},{"Key":"operator. Made","Fragments":["moot"]},{"Key":"Made moot","Fragments":["by"]},{"Key":"moot by","Fragments":["pushing"]},{"Key":"by pushing","Fragments":["the"]},{"Key":"pushing the","Fragments":["2^n"]},{"Key":"the 2^n","Fragments":["into"]},{"Key":"2^n into","Fragments":["the"]},{"Key":"into the","Fragments":["enum","map","language,","output.","IR","`cycle_starting_at`"]},{"Key":"didn't find","Fragments":["a","count..."]},{"Key":"find a","Fragments":["way","domino","way","way","sort()","way","second","better"]},{"Key":"to enumerate","Fragments":["all","over","over","an","the"]},{"Key":"enumerate all","Fragments":["the"]},{"Key":"Allergen enum","Fragments":["values","needs"]},{"Key":"enum values","Fragments":["without","is","in","by","for"]},{"Key":"values without","Fragments":["making"]},{"Key":"without making","Fragments":["a"]},{"Key":"making a","Fragments":["manual","method.","copy!!!\".","vector"]},{"Key":"a manual","Fragments":["list","or"]},{"Key":"manual list","Fragments":["via"]},{"Key":"list via","Fragments":["`static"]},{"Key":"via `static","Fragments":["ALL:"]},{"Key":"`static ALL:","Fragments":["[Allergen;"]},{"Key":"ALL: [Allergen;","Fragments":["8]...`"]},{"Key":" We","Fragments":["could"]},{"Key":"We could","Fragments":["use"]},{"Key":"use `self.0`","Fragments":["instead","as"]},{"Key":"`self.0` instead","Fragments":["of"]},{"Key":"of pattern","Fragments":["matching","matching"]},{"Key":"matching for","Fragments":["the"]},{"Key":"the `score`","Fragments":["in"]},{"Key":"`score` in","Fragments":["line"]},{"Key":" Could","Fragments":["we","you","you","accomplish","you"]},{"Key":"Could we","Fragments":["replace"]},{"Key":"we replace","Fragments":["the"]},{"Key":"replace the","Fragments":["whole","whole"]},{"Key":"whole function","Fragments":["like"]},{"Key":"function like","Fragments":["this?"]},{"Key":"like this?","Fragments":["This"]},{"Key":"this? This","Fragments":["seems","would","would"]},{"Key":"This seems","Fragments":["less","relatively"]},{"Key":"seems less","Fragments":["readable"]},{"Key":"less readable","Fragments":["to","than","(a"]},{"Key":"readable to","Fragments":["a"]},{"Key":"a rust","Fragments":["n00b"]},{"Key":"rust n00b","Fragments":["like"]},{"Key":"n00b like","Fragments":["myself:"]},{"Key":" pub","Fragments":["fn","fn","fn","fn","enum","fn","fn","enum","fn","enum","fn","fn"]},{"Key":"pub fn","Fragments":["is_allergic_to(\u0026self,","is_allergic_to(\u0026self,","anagrams_for\u003c'a\u003e(word:","is_allergic_to(\u0026self,","hamming_distance_fold(a:","hamming_distance_filter(a:","to_uppercase(\u0026self)","is_allergic_to(\u0026self,","is_leap_year(year:"]},{"Key":"fn is_allergic_to(\u0026self,","Fragments":["allergen","allergen","allergen:","a:"]},{"Key":"is_allergic_to(\u0026self, allergen","Fragments":[":",":"]},{"Key":"allergen :","Fragments":["\u0026Allergen)","\u0026Allergen)"]},{"Key":": \u0026Allergen)","Fragments":["-\u003e","-\u003e"]},{"Key":"\u0026Allergen) -\u003e","Fragments":["bool","bool","bool","bool"]},{"Key":"-\u003e bool","Fragments":["{","{","{","{","{","{","{","{"]},{"Key":" self.0","Fragments":["\u0026","\u0026","\u0026"]},{"Key":"self.0 \u0026","Fragments":["*allergen","*allergen","1","(*a"]},{"Key":"\u0026 *allergen","Fragments":["as","as"]},{"Key":"*allergen as","Fragments":["i32","u16","u16;"]},{"Key":"as i32","Fragments":["!="]},{"Key":"i32 !=","Fragments":["0"]},{"Key":"No reason","Fragments":["to"]},{"Key":"reason to","Fragments":["use","prefer","use"]},{"Key":"a full","Fragments":["`i32`,","closed"]},{"Key":"full `i32`,","Fragments":["when"]},{"Key":"`i32`, when","Fragments":["an"]},{"Key":"when an","Fragments":["`u16`"]},{"Key":"an `u16`","Fragments":["will"]},{"Key":"`u16` will","Fragments":["hold"]},{"Key":"will hold","Fragments":["all"]},{"Key":"all of","Fragments":["Allergen.","the","the","the","this"]},{"Key":" nit","Fragments":[":",":"]},{"Key":"nit :","Fragments":["I","`set_order()`"]},{"Key":"like `ALL`","Fragments":["as"]},{"Key":"`ALL` as","Fragments":["a"]},{"Key":"as a","Fragments":["global","separate","whole","second","function","function","working","function","fixed","value,","dependency","single","whole,","u32","bitmask","variable"]},{"Key":"global name","Fragments":["as"]},{"Key":"name as","Fragments":["it"]},{"Key":"as it","Fragments":["a","is","could","shows","compare","just","should","should","is...","has","iterates","turns"]},{"Key":"a quite","Fragments":["common"]},{"Key":"quite common","Fragments":["word"]},{"Key":"common word","Fragments":["and"]},{"Key":"word and","Fragments":["is","its"]},{"Key":"and is","Fragments":["a","fairly","used"]},{"Key":"bit confusing,","Fragments":["I"]},{"Key":"confusing, I","Fragments":["would"]},{"Key":"would rather","Fragments":["use","not","not"]},{"Key":"rather use","Fragments":["`ALLERGENS`","filter()"]},{"Key":"use `ALLERGENS`","Fragments":["or"]},{"Key":"`ALLERGENS` or","Fragments":["something"]},{"Key":"or something","Fragments":["similar.","(please","like","similar.","like","with"]},{"Key":"Thanks @mikayla","Fragments":[","]},{"Key":"@mikayla ,","Fragments":["I've"]},{"Key":", I've","Fragments":["replaced"]},{"Key":"I've replaced","Fragments":["ALL","`hex_to_digit`"]},{"Key":"replaced ALL","Fragments":["with"]},{"Key":"ALL with","Fragments":["ALLERGENS."]},{"Key":"you should","Fragments":["replace","be","submit","happen","normally","be","be"]},{"Key":"should replace","Fragments":["map(|\u0026item|"]},{"Key":"replace map(|\u0026item|","Fragments":["item)"]},{"Key":"map(|\u0026item| item)","Fragments":["with"]},{"Key":"item) with","Fragments":["cloned()."]},{"Key":"think it's","Fragments":["clearer","more","an","a","better","simpler"]},{"Key":"it's clearer","Fragments":["this"]},{"Key":"clearer this","Fragments":["way."]},{"Key":"also replace","Fragments":[".collect\u003cVec\u003c_\u003e\u003e()"]},{"Key":"replace .collect\u003cVec\u003c_\u003e\u003e()","Fragments":["with"]},{"Key":".collect\u003cVec\u003c_\u003e\u003e() with","Fragments":[".collect()"]},{"Key":"with .collect()","Fragments":["in"]},{"Key":".collect() in","Fragments":["the"]},{"Key":"the fuction","Fragments":["return,"]},{"Key":"fuction return,","Fragments":["since"]},{"Key":"return, since","Fragments":["the"]},{"Key":"compiler is","Fragments":["able"]},{"Key":"is able","Fragments":["infer"]},{"Key":"able infer","Fragments":["correctly"]},{"Key":"infer correctly","Fragments":["the"]},{"Key":"correctly the","Fragments":["type."]},{"Key":"You are","Fragments":["right","sorting","calling","calling","sorting","lowercasing","still","right","uppercasing","right!","calling","supposed","calling","sorting"]},{"Key":"are right","Fragments":["in","@aracely,"]},{"Key":"right in","Fragments":["both"]},{"Key":"both cases.","Fragments":["Makes"]},{"Key":"cases. Makes","Fragments":["it"]},{"Key":"Makes it","Fragments":["much"]},{"Key":"it much","Fragments":["more"]},{"Key":"much more","Fragments":["succinct","ugly!","readable","readable","readable","readable","easily","sophisticated.","readable!","readable"]},{"Key":"and easier","Fragments":["to"]},{"Key":"to read.","Fragments":["I","I'd","I'm"]},{"Key":"read. I","Fragments":["totally"]},{"Key":"I totally","Fragments":["forgot","agree.","missed","failed","misread"]},{"Key":"totally forgot","Fragments":["about"]},{"Key":"forgot about","Fragments":["the","having"]},{"Key":"about the","Fragments":["clone","same","case","to","lifetime","Entry","struct","incomprehensibility","data","inner","```to_string()```","question,","[solution](http://exercism.io/submissions/2f8df63d99dd49048ec2e16ef1b2809f)","first.","variable","repeatedly","\"Ogham"]},{"Key":"the clone","Fragments":["function.","function,"]},{"Key":"The compiler","Fragments":["can","doesn't","error","will"]},{"Key":"infer the","Fragments":["type","last","type"]},{"Key":"of collect","Fragments":["based","from"]},{"Key":"collect based","Fragments":["on"]},{"Key":"based on","Fragments":["the","a","a","a","a","the","a","a","a","a","a","a","a","a","vector","a","a","a","a","a"]},{"Key":"the signature","Fragments":["of"]},{"Key":"signature of","Fragments":["anagrams_for.","the"]},{"Key":" Thank","Fragments":["you.","you,","you!"]},{"Key":" Imperative","Fragments":["approach."]},{"Key":" Functional","Fragments":["approach"]},{"Key":"Functional approach","Fragments":["=)"]},{"Key":" A","Fragments":["little","fold","classic","```filter```","small","chain","third","constant","lot"]},{"Key":"A little","Fragments":["simpler"]},{"Key":"little simpler","Fragments":["functional"]},{"Key":"simpler functional","Fragments":["approach."]},{"Key":"Making use","Fragments":["of"]},{"Key":"of [num::integer::Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html)","Fragments":["would"]},{"Key":"[num::integer::Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html) would","Fragments":["have"]},{"Key":"have been","Fragments":["a","dependent","avoiding","all","much","able","so","The","made","`ph.chars().first()"]},{"Key":"been a","Fragments":["bit","challenge."]},{"Key":"bit nicer,","Fragments":["but"]},{"Key":"nicer, but","Fragments":["I"]},{"Key":"sure I","Fragments":["should","understand","like","understand","like"]},{"Key":"I should","Fragments":["use","add","have","probably","have","use","probably"]},{"Key":"should use","Fragments":["external","`fold`","```chars```"]},{"Key":"use external","Fragments":["libraries.","libs,"]},{"Key":" Also","Fragments":["I","I","not","accumulating","you're","since","of","nice","using","is","because","`eval`","I","consider","really,"]},{"Key":"I took","Fragments":["the","a","a","the","the","the","the"]},{"Key":"took the","Fragments":["decision","fast","approach","gen_range()","same"]},{"Key":"the decision","Fragments":["to"]},{"Key":"decision to","Fragments":["only"]},{"Key":"to only","Fragments":["work"]},{"Key":"only work","Fragments":["on"]},{"Key":"work on","Fragments":["positive","these","line"]},{"Key":"on positive","Fragments":["years."]},{"Key":"The chain","Fragments":["of"]},{"Key":"chain of","Fragments":["ifs","combinators."]},{"Key":"of ifs","Fragments":["isn't"]},{"Key":"ifs isn't","Fragments":["great"]},{"Key":"isn't great","Fragments":["but"]},{"Key":"great but","Fragments":["is"]},{"Key":"but is","Fragments":["simple","it","this"]},{"Key":"is simple","Fragments":["at"]},{"Key":"simple at","Fragments":["least."]},{"Key":"wonder u64","Fragments":["will"]},{"Key":"u64 will","Fragments":["use"]},{"Key":"will use","Fragments":["more","bitwise"]},{"Key":"use more","Fragments":["memory"]},{"Key":"more memory","Fragments":["than","and"]},{"Key":"memory than","Fragments":["u32"]},{"Key":"than u32","Fragments":["but","to"]},{"Key":"u32 but","Fragments":["then"]},{"Key":"but then","Fragments":["I","the","decided","return","decided","I"]},{"Key":"then I","Fragments":["wonder","always","can't","feel","found","have","didn't","won't","thought"]},{"Key":"wonder both","Fragments":["of"]},{"Key":"both of","Fragments":["us","which","those"]},{"Key":"of us","Fragments":["could"]},{"Key":"us could","Fragments":["have"]},{"Key":"could have","Fragments":["opted","benefitted","written","responded","saved","been","taken","extracted","used","just","converted"]},{"Key":"have opted","Fragments":["for"]},{"Key":"opted for","Fragments":["just","brevity","sorted"]},{"Key":"for just","Fragments":["u16"]},{"Key":"just u16","Fragments":["if"]},{"Key":"u16 if","Fragments":["it's"]},{"Key":"if it's","Fragments":["just","also","just","odd.","a","an","any","`Copy`","possible","possible"]},{"Key":"it's just","Fragments":["a","because"]},{"Key":"just a","Fragments":["four","matter","result","bool,","matter","method","matter","bad"]},{"Key":"a four","Fragments":["digit"]},{"Key":"four digit","Fragments":["year."]},{"Key":" Yeah","Fragments":["I","it","seems","good","I","I","since","seems"]},{"Key":"Yeah I","Fragments":["wasn't","quite","honestly"]},{"Key":"sure what","Fragments":["a","would","you","you","you"]},{"Key":"a sane","Fragments":["limit"]},{"Key":"sane limit","Fragments":["is,"]},{"Key":"limit is,","Fragments":["using"]},{"Key":"is, using","Fragments":["a"]},{"Key":"a `u16`","Fragments":["would"]},{"Key":"`u16` would","Fragments":["have"]},{"Key":"have lead","Fragments":["to"]},{"Key":"lead to","Fragments":["a","a","a"]},{"Key":"a year","Fragments":["10,000"]},{"Key":"year 10,000","Fragments":["problem"]},{"Key":"10,000 problem","Fragments":["though?!"]},{"Key":" Instead","Fragments":["of","of","of","of","of","of","of","of"]},{"Key":"Instead of","Fragments":["the","`.map(|c|","printing","doing","```if(cond)","defining","using","a","nested","converting"]},{"Key":"the nested","Fragments":["`if`s","`if`s"]},{"Key":"nested `if`s","Fragments":["I'd","a","are"]},{"Key":"`if`s I'd","Fragments":["prefer"]},{"Key":"I'd prefer","Fragments":["a"]},{"Key":"prefer a","Fragments":["boolean"]},{"Key":"boolean expression,","Fragments":["but"]},{"Key":"expression, but","Fragments":["that"]},{"Key":"but that","Fragments":["might","would","is","did","seems","would","comes","would"]},{"Key":"that might","Fragments":["be","involve","not","be"]},{"Key":"of personal","Fragments":["preferences."]},{"Key":" That","Fragments":["one","compact","surprised","would","doesn't","resulted","in"]},{"Key":"That one","Fragments":["aside,"]},{"Key":"one aside,","Fragments":["I"]},{"Key":"aside, I","Fragments":["think"]},{"Key":"think your","Fragments":["solution","parameter","last"]},{"Key":"your solution","Fragments":["looks","to","without","to","is","work","a","checks","uses"]},{"Key":"solution looks","Fragments":["great,"]},{"Key":"looks great,","Fragments":["and"]},{"Key":"great, and","Fragments":["also"]},{"Key":"and also","Fragments":["I","for","extended"]},{"Key":"also I","Fragments":["think"]},{"Key":"think the","Fragments":["actual","code","compiler","concept","parentheses","comments","calls","use","compiler","type","`match`","nested","code"]},{"Key":"the actual","Fragments":["type","work","work.\"","test","board,"]},{"Key":"actual type","Fragments":["does"]},{"Key":"type does","Fragments":["not"]},{"Key":"does not","Fragments":["matter,","make","congregate","happen","execute","provide","have","provide","need","live"]},{"Key":"not matter,","Fragments":["as"]},{"Key":"matter, as","Fragments":["long"]},{"Key":"is guaranteed","Fragments":["to","to"]},{"Key":"guaranteed to","Fragments":["be","be"]},{"Key":"be at","Fragments":["least","least"]},{"Key":"least 16","Fragments":["bit"]},{"Key":"16 bit","Fragments":["wide."]},{"Key":"bit wide.","Fragments":["Only"]},{"Key":"wide. Only","Fragments":["one"]},{"Key":"Only one","Fragments":["I"]},{"Key":"one I","Fragments":["would","stumbled","submitted"]},{"Key":"would strongly","Fragments":["discourage"]},{"Key":"strongly discourage","Fragments":["here"]},{"Key":"discourage here","Fragments":["is"]},{"Key":"here is","Fragments":["`xsize`","pretty","ranges","a","how","my"]},{"Key":"is `xsize`","Fragments":["because"]},{"Key":"`xsize` because","Fragments":["it"]},{"Key":"because it","Fragments":["is","won't","\"chooses\"","is"]},{"Key":"dependent and","Fragments":["might"]},{"Key":"and might","Fragments":["shrink"]},{"Key":"might shrink","Fragments":["down"]},{"Key":"shrink down","Fragments":["to"]},{"Key":"down to","Fragments":["8","performance,","O(1)","solve","personal"]},{"Key":"to 8","Fragments":["bit."]},{"Key":"you just","Fragments":["have","join"]},{"Key":"just have","Fragments":["the","an","a"]},{"Key":"have the","Fragments":["result","next","right","code","slice","workers","if…else","same","internal"]},{"Key":"result of","Fragments":["the","line","the","the","the","TDD","the","the","the","`.count()`"]},{"Key":"the expressions","Fragments":["`year","with","or"]},{"Key":"expressions `year","Fragments":["%"]},{"Key":"% 400`","Fragments":["and"]},{"Key":"400` and","Fragments":["`year"]},{"Key":"and `year","Fragments":["%","%"]},{"Key":"% 4`","Fragments":["be"]},{"Key":"4` be","Fragments":["returned"]},{"Key":"be returned","Fragments":["rather"]},{"Key":"returned rather","Fragments":["than"]},{"Key":"than having","Fragments":["those"]},{"Key":"having those","Fragments":["inner"]},{"Key":"those inner","Fragments":["if"]},{"Key":"inner if","Fragments":["statements?"]},{"Key":" @issac","Fragments":["I"]},{"Key":"@issac I","Fragments":["don't"]},{"Key":"don't see","Fragments":["how..","any","`Option`","any","monkey","why"]},{"Key":"see how..","Fragments":["the"]},{"Key":"how.. the","Fragments":["test"]},{"Key":"test for","Fragments":["being","divisibility","this."]},{"Key":"for being","Fragments":["divisible"]},{"Key":"being divisible","Fragments":["by","by"]},{"Key":"divisible by","Fragments":["100","400.","100,","something","4;","400."]},{"Key":"by 100","Fragments":["needs"]},{"Key":"100 needs","Fragments":["to"]},{"Key":"needs to","Fragments":["be","be","be","be","be","be"]},{"Key":"be acknowledged;","Fragments":["that"]},{"Key":"acknowledged; that","Fragments":["defaults"]},{"Key":"that defaults","Fragments":["to"]},{"Key":"defaults to","Fragments":["false"]},{"Key":"to false","Fragments":["and"]},{"Key":"false and","Fragments":["becomes"]},{"Key":"and becomes","Fragments":["true"]},{"Key":"becomes true","Fragments":["if"]},{"Key":"true if","Fragments":["it's"]},{"Key":"it's also","Fragments":["divisible"]},{"Key":"also divisible","Fragments":["by"]},{"Key":"by 400.","Fragments":["If","Then"]},{"Key":"400. If","Fragments":["it's"]},{"Key":"If it's","Fragments":["not"]},{"Key":"it's not","Fragments":["divisible","a","so","`pub`","exactly","clear","fully"]},{"Key":"not divisible","Fragments":["by"]},{"Key":"by 100,","Fragments":["then","it"]},{"Key":"100, then","Fragments":["a"]},{"Key":"then a","Fragments":["more"]},{"Key":"more focused","Fragments":["test"]},{"Key":"focused test","Fragments":["of"]},{"Key":"test of","Fragments":["divisibility"]},{"Key":"of divisibility","Fragments":["by","tests","tests"]},{"Key":"divisibility by","Fragments":["4","400?","4","400."]},{"Key":"by 4","Fragments":["is","three"]},{"Key":"4 is","Fragments":["needed."]},{"Key":"I meant,","Fragments":["you"]},{"Key":"meant, you","Fragments":["could"]},{"Key":" if","Fragments":["year","year","chain.len()","chain.last().unwrap().1","*y","is_factor(year,","bar","word","true","it's","lowered_source","lowered_source"]},{"Key":"if year","Fragments":["%","%","%","%","%"]},{"Key":"== 0","Fragments":["{","{","||","{99}","in","}`","\u0026\u0026","{","{","{","\u0026\u0026"]},{"Key":"0 {","Fragments":["true","return"]},{"Key":" with","Fragments":["just"]},{"Key":" year","Fragments":["%","%","%"]},{"Key":" More","Fragments":["generally,","accurately,","important,"]},{"Key":"More generally,","Fragments":["having"]},{"Key":"generally, having","Fragments":["an"]},{"Key":"having an","Fragments":["if"]},{"Key":"an if","Fragments":["condition","chain?","else"]},{"Key":"if condition","Fragments":["that"]},{"Key":"condition that","Fragments":["has"]},{"Key":"that has","Fragments":["the"]},{"Key":"has the","Fragments":["literal","style","style","same","same"]},{"Key":"the literal","Fragments":["`true`"]},{"Key":"literal `true`","Fragments":["or"]},{"Key":"`true` or","Fragments":["`false`","`false`"]},{"Key":"or `false`","Fragments":["in","you"]},{"Key":"`false` in","Fragments":["the","the"]},{"Key":"the branches","Fragments":["is"]},{"Key":"branches is","Fragments":["usually"]},{"Key":"is usually","Fragments":["a","not"]},{"Key":"usually a","Fragments":["sign"]},{"Key":"a sign","Fragments":["that"]},{"Key":"sign that","Fragments":["you"]},{"Key":"statement and","Fragments":["the"]},{"Key":"the condition","Fragments":["itself"]},{"Key":"condition itself","Fragments":["would"]},{"Key":"itself would","Fragments":["suffice."]},{"Key":" @vada","Fragments":["TIL"]},{"Key":"@vada TIL","Fragments":["thanks"]},{"Key":"TIL thanks","Fragments":[":)"]},{"Key":"it looks","Fragments":["good","like","like","pretty","a"]},{"Key":"looks good","Fragments":["overall.","to"]},{"Key":"good overall.","Fragments":["For"]},{"Key":"overall. For","Fragments":["production"]},{"Key":"For production","Fragments":["code"]},{"Key":"production code","Fragments":["I'd","I"]},{"Key":"code I'd","Fragments":["say"]},{"Key":"I'd say","Fragments":["there"]},{"Key":"say there","Fragments":["are"]},{"Key":"there are","Fragments":["too","any","formulas","equivalent","only","no","math","a","some","likely","only","many","reasonable","any","mathematical","legitimate","invalid"]},{"Key":"are too","Fragments":["many","complicated."]},{"Key":"too many","Fragments":["comments","times.","calls"]},{"Key":"many comments","Fragments":["in"]},{"Key":"comments in","Fragments":["`is_allergic_to()`"]},{"Key":"in `is_allergic_to()`","Fragments":["but"]},{"Key":"`is_allergic_to()` but","Fragments":["as"]},{"Key":"but as","Fragments":["an"]},{"Key":"as an","Fragments":["exercise","anagram?","`if/else`:","empty","empty","added","empty","empty","empty","empty","empty","inline","accumulator","accumulator","expression,","empty","empty","empty","empty","empty","if","argument","empty","empty","empty","appropriate","empty","empty","explicit"]},{"Key":"an exercise","Fragments":["it's"]},{"Key":"exercise it's","Fragments":["much"]},{"Key":"it's much","Fragments":["better","simpler"]},{"Key":"much better","Fragments":["than"]},{"Key":"better than","Fragments":["no","mine","what","my"]},{"Key":"than no","Fragments":["comments"]},{"Key":"no comments","Fragments":["at"]},{"Key":"comments at","Fragments":["all."]},{"Key":"at all.","Fragments":["How","I"]},{"Key":"all. How","Fragments":["about"]},{"Key":"How about","Fragments":["reformatting"]},{"Key":"about reformatting","Fragments":["so"]},{"Key":"reformatting so","Fragments":["the"]},{"Key":"so the","Fragments":["code","String::to_lowercase","IRC","map","following"]},{"Key":"code is","Fragments":["a","interesting","longer.","horrible,","a","repeated","factored","DRY","fine,","being","suboptimal"]},{"Key":"bit closer","Fragments":["together?"]},{"Key":" eg.","Fragments":[":"]},{"Key":" ///","Fragments":["Tests","Checks","Leap","The","If","The"]},{"Key":"/// Tests","Fragments":["if"]},{"Key":"Tests if","Fragments":["self"]},{"Key":"if self","Fragments":["is"]},{"Key":"self is","Fragments":["allergic"]},{"Key":"/// Checks","Fragments":["if"]},{"Key":"Checks if","Fragments":["bit"]},{"Key":"if bit","Fragments":["for","is"]},{"Key":"bit for","Fragments":["allergen"]},{"Key":"for allergen","Fragments":["is"]},{"Key":"allergen is","Fragments":["set"]},{"Key":"is set","Fragments":["in","if"]},{"Key":"set in","Fragments":["our","allergen?"]},{"Key":"in our","Fragments":["score"]},{"Key":" //","Fragments":["can","return","is","bitwise","try","benches/nucleotide.rs","shortened","impl\u003cT\u003e","so","iterate","iterate","iterate","Many","no","All","So","use","import","use","not","good","other","other"]},{"Key":"// can","Fragments":["be"]},{"Key":"be shortened","Fragments":["to:"]},{"Key":"// return","Fragments":["self.0"]},{"Key":"return self.0","Fragments":["\u0026"]},{"Key":"as u16","Fragments":["!="]},{"Key":"u16 !=","Fragments":["0;"]},{"Key":"let \u0026Allergies(score)","Fragments":["="]},{"Key":"\u0026Allergies(score) =","Fragments":["self;"]},{"Key":"= self;","Fragments":["//","n"]},{"Key":"self; //","Fragments":["pattern"]},{"Key":"// pattern","Fragments":["match"]},{"Key":"pattern match","Fragments":["self","on","on"]},{"Key":"match self","Fragments":["to"]},{"Key":"self to","Fragments":["extract"]},{"Key":"to extract","Fragments":["allergen"]},{"Key":"extract allergen","Fragments":["bitfield"]},{"Key":"allergen bitfield","Fragments":["score"]},{"Key":"let value","Fragments":["="]},{"Key":"value =","Fragments":["*allergen"]},{"Key":"= *allergen","Fragments":["as"]},{"Key":"as u16;","Fragments":["//"]},{"Key":"u16; //","Fragments":["extract"]},{"Key":"// extract","Fragments":["enum"]},{"Key":"extract enum","Fragments":["value"]},{"Key":"value of","Fragments":["allergen","```square","`allergen`","the","each","the","*allergen)"]},{"Key":"// is","Fragments":["score"]},{"Key":"is score","Fragments":["bit"]},{"Key":"score bit","Fragments":["set"]},{"Key":"bit set","Fragments":["in","using"]},{"Key":"// bitwise","Fragments":["and"]},{"Key":"and of","Fragments":["value"]},{"Key":"of value","Fragments":["and"]},{"Key":"value and","Fragments":["score","updates","I"]},{"Key":"and score","Fragments":["will"]},{"Key":"score will","Fragments":["be"]},{"Key":"be non-zero","Fragments":["if"]},{"Key":"non-zero if","Fragments":["value-th"]},{"Key":"if value-th","Fragments":["bit"]},{"Key":"value-th bit","Fragments":["is"]},{"Key":"bit is","Fragments":["set","set","set."]},{"Key":" value","Fragments":["\u0026"]},{"Key":"value \u0026","Fragments":["score"]},{"Key":"\u0026 score","Fragments":["!="]},{"Key":"score !=","Fragments":["0"]},{"Key":" If","Fragments":["you","dominoes","testfor","vs.","the","you","someone","you","you","you","the","you","you","you're","the","this","you","there","you","the","you"]},{"Key":"If you","Fragments":["want","run","switch","stick","derive","use","swap","look","want","associate","want","use","try","change","detect","replace"]},{"Key":"you want","Fragments":["to","to","I","to"]},{"Key":"want to","Fragments":["avoid","assume","panic","find","allocate","try","try","see","just","have","avoid","do:","keep","check","learn","keep","spend","check"]},{"Key":"avoid duplicating","Fragments":["the"]},{"Key":"Allergen values","Fragments":["in"]},{"Key":"values in","Fragments":["ALLERGENS,","enums.","positional","this","your","Rust,","the"]},{"Key":"in ALLERGENS,","Fragments":["you"]},{"Key":"ALLERGENS, you","Fragments":["could"]},{"Key":"the custom_derive","Fragments":["and"]},{"Key":"custom_derive and","Fragments":["enum_derive","enum_derive","enum_derive."]},{"Key":"and enum_derive","Fragments":["creates.","for"]},{"Key":"Thanks for","Fragments":["the","mentioning","the","the","the","the","the","the","your","the","the","the","spotting.","spotting","the","your","the","letting","the","the","the","the","the","review!","your","your","the","the","the"]},{"Key":"the review","Fragments":["comments"]},{"Key":"review comments","Fragments":["@louie"]},{"Key":"comments @louie","Fragments":["!"]},{"Key":" added","Fragments":["checks"]},{"Key":"added checks","Fragments":["to"]},{"Key":"checks to","Fragments":["`new()`"]},{"Key":"to `new()`","Fragments":["to"]},{"Key":"`new()` to","Fragments":["verify"]},{"Key":"to verify","Fragments":["valid"]},{"Key":"verify valid","Fragments":["nucleotides"]},{"Key":"valid nucleotides","Fragments":["for"]},{"Key":"nucleotides for","Fragments":["RNA"]},{"Key":"for RNA","Fragments":["and"]},{"Key":"RNA and","Fragments":["DNA."]},{"Key":" First","Fragments":["of"]},{"Key":"First of","Fragments":["all,","all,"]},{"Key":"of all,","Fragments":["I","you"]},{"Key":"all, I","Fragments":["am"]},{"Key":"I am","Fragments":["still","not","checking","unsure","only","80%","trying","aware","a","not","used","surprised","looking","surprised","annoyed","going"]},{"Key":"am still","Fragments":["unsure"]},{"Key":"still unsure","Fragments":["when"]},{"Key":"unsure when","Fragments":["to"]},{"Key":"when to","Fragments":["use","use","use"]},{"Key":"use `String`","Fragments":["and"]},{"Key":"and when","Fragments":["to"]},{"Key":"use some","Fragments":["incarnation","`\u0026\u0026`s","Rust"]},{"Key":"some incarnation","Fragments":["of"]},{"Key":"incarnation of","Fragments":["`str`."]},{"Key":"am not","Fragments":["completely","going","sure"]},{"Key":"not completely","Fragments":["satisfied","happy"]},{"Key":"completely satisfied","Fragments":["with"]},{"Key":"satisfied with","Fragments":["my"]},{"Key":"with my","Fragments":["code,"]},{"Key":"my code,","Fragments":["however"]},{"Key":"code, however","Fragments":["I'm"]},{"Key":"however I'm","Fragments":["unsure"]},{"Key":"I'm unsure","Fragments":["as"]},{"Key":"unsure as","Fragments":["to"]},{"Key":"as to","Fragments":["what"]},{"Key":"to what","Fragments":["can","I","you"]},{"Key":"what can","Fragments":["and"]},{"Key":"can and","Fragments":["should"]},{"Key":"and should","Fragments":["be"]},{"Key":" Rationale","Fragments":["behind"]},{"Key":"Rationale behind","Fragments":["my"]},{"Key":"behind my","Fragments":["algorithm:"]},{"Key":" At","Fragments":["first","the","this","first"]},{"Key":"At first","Fragments":["I","I"]},{"Key":"first I","Fragments":["wanted","thought","thought"]},{"Key":"I wanted","Fragments":["to","to","to","to","to","to","to","to","to"]},{"Key":"wanted to","Fragments":["spell","practice","about","get","submit","be","play","use","find","get"]},{"Key":"to spell","Fragments":["out"]},{"Key":"spell out","Fragments":["all"]},{"Key":"out all","Fragments":["the"]},{"Key":"the permutations","Fragments":["that"]},{"Key":"permutations that","Fragments":["could"]},{"Key":"that could","Fragments":["occur,","be","be","have","lead","lead"]},{"Key":"could occur,","Fragments":["given"]},{"Key":"occur, given","Fragments":["a"]},{"Key":"given a","Fragments":["specific"]},{"Key":"specific shorthand.","Fragments":["When"]},{"Key":"shorthand. When","Fragments":["I"]},{"Key":"When I","Fragments":["hit","didn't","first"]},{"Key":"I hit","Fragments":["a"]},{"Key":"hit a","Fragments":["wall"]},{"Key":"a wall","Fragments":["implementing"]},{"Key":"wall implementing","Fragments":["that"]},{"Key":"implementing that","Fragments":["I"]},{"Key":"took a","Fragments":["step","different","little"]},{"Key":"a step","Fragments":["back"]},{"Key":"step back","Fragments":["and"]},{"Key":"back and","Fragments":["looked"]},{"Key":"and looked","Fragments":["at"]},{"Key":"looked at","Fragments":["the","did","others","your"]},{"Key":"the problem","Fragments":["again:","is","requires","slightly"]},{"Key":"problem again:","Fragments":["Obviously,"]},{"Key":"again: Obviously,","Fragments":["if"]},{"Key":"Obviously, if","Fragments":["all"]},{"Key":"the possible","Fragments":["names","nucleotides."]},{"Key":"possible names","Fragments":["have"]},{"Key":"names have","Fragments":["to"]},{"Key":"to map","Fragments":["to"]},{"Key":"map to","Fragments":["the","understand"]},{"Key":"the given","Fragments":["nucleotide,","key.","string"]},{"Key":"given nucleotide,","Fragments":["it"]},{"Key":"nucleotide, it","Fragments":["suffices"]},{"Key":"it suffices","Fragments":["if"]},{"Key":"suffices if","Fragments":["one"]},{"Key":"if one","Fragments":["does."]},{"Key":" Followed","Fragments":["stevejb71's","@lauriane's"]},{"Key":"Followed stevejb71's","Fragments":["suggestion."]},{"Key":"I trade","Fragments":["space"]},{"Key":"trade space","Fragments":["for"]},{"Key":"space for","Fragments":["time"]},{"Key":"for time","Fragments":["here,"]},{"Key":"time here,","Fragments":["making"]},{"Key":"here, making","Fragments":["sorted"]},{"Key":"making sorted","Fragments":["copy"]},{"Key":"sorted copy","Fragments":["of"]},{"Key":"copy of","Fragments":["input","the","your","the"]},{"Key":"of input","Fragments":["array."]},{"Key":"As dominoes","Fragments":["form"]},{"Key":"dominoes form","Fragments":["a"]},{"Key":"form a","Fragments":["full"]},{"Key":"full closed","Fragments":["loop,"]},{"Key":"closed loop,","Fragments":["it"]},{"Key":"loop, it","Fragments":["doesn't"]},{"Key":"it doesn't","Fragments":["matter","quite","make","acknowledge"]},{"Key":"doesn't matter","Fragments":["which","of"]},{"Key":"matter which","Fragments":["element"]},{"Key":"which element","Fragments":["I"]},{"Key":"element I","Fragments":["start"]},{"Key":"I start","Fragments":["build","to"]},{"Key":"start build","Fragments":["chain"]},{"Key":"build chain","Fragments":["with,"]},{"Key":"chain with,","Fragments":["so"]},{"Key":"with, so","Fragments":["I"]},{"Key":"so I","Fragments":["just","fail).","use","could","stayed","don't","justified","did","could","am","think","have","used","removed","ended","think","don't","decided","opted","had","just"]},{"Key":"just pop","Fragments":["the"]},{"Key":"pop the","Fragments":["last"]},{"Key":"If dominoes","Fragments":["can"]},{"Key":"dominoes can","Fragments":["form"]},{"Key":"can form","Fragments":["full"]},{"Key":"form full","Fragments":["loop,"]},{"Key":"full loop,","Fragments":["then"]},{"Key":"loop, then","Fragments":["I"]},{"Key":"I always","Fragments":["will","get","turn"]},{"Key":"always will","Fragments":["have"]},{"Key":"next domino","Fragments":["which"]},{"Key":"domino which","Fragments":["head"]},{"Key":"which head","Fragments":["matches"]},{"Key":"head matches","Fragments":["last"]},{"Key":"matches last","Fragments":["added"]},{"Key":"last added","Fragments":["dominoes"]},{"Key":"added dominoes","Fragments":["tail"]},{"Key":"dominoes tail","Fragments":["(if"]},{"Key":"tail (if","Fragments":["I"]},{"Key":"(if I","Fragments":["can't"]},{"Key":"I can't","Fragments":["find","build","help","figure","figure","see","because","remember"]},{"Key":"can't find","Fragments":["a","crate"]},{"Key":"domino by","Fragments":["this"]},{"Key":"by this","Fragments":["criteria,"]},{"Key":"this criteria,","Fragments":["then"]},{"Key":"criteria, then","Fragments":["I"]},{"Key":"can't build","Fragments":["full"]},{"Key":"build full","Fragments":["loop"]},{"Key":"full loop","Fragments":["by"]},{"Key":"loop by","Fragments":["definition,","some"]},{"Key":"by definition,","Fragments":["so"]},{"Key":"definition, so","Fragments":["I"]},{"Key":"I fail).","Fragments":["So"]},{"Key":"fail). So","Fragments":["I"]},{"Key":"So I","Fragments":["don't","usually","moved","took","guess"]},{"Key":"Then I","Fragments":["assume","can","found"]},{"Key":"I assume","Fragments":["dominoes","you","is"]},{"Key":"assume dominoes","Fragments":["are"]},{"Key":"dominoes are","Fragments":["matched","put"]},{"Key":"are matched","Fragments":["from"]},{"Key":"matched from","Fragments":["tail"]},{"Key":"from tail","Fragments":["to"]},{"Key":"tail to","Fragments":["head"]},{"Key":"to head","Fragments":["without"]},{"Key":"head without","Fragments":["reversing"]},{"Key":"without reversing","Fragments":["most"]},{"Key":"reversing most","Fragments":["times,"]},{"Key":"most times,","Fragments":["so"]},{"Key":"times, so","Fragments":["I"]},{"Key":"I use","Fragments":["the","a","to","a","`zip`.","generic"]},{"Key":"the fact","Fragments":["input","that","that","that","that","that","that"]},{"Key":"fact input","Fragments":["list"]},{"Key":"input list","Fragments":["is"]},{"Key":"list is","Fragments":["sorted"]},{"Key":"is sorted","Fragments":["to"]},{"Key":"sorted to","Fragments":["speed"]},{"Key":"to speed","Fragments":["up"]},{"Key":"speed up","Fragments":["dominoes"]},{"Key":"up dominoes","Fragments":["lookup"]},{"Key":"dominoes lookup","Fragments":["with"]},{"Key":"lookup with","Fragments":["binary"]},{"Key":"with binary","Fragments":["search."]},{"Key":"binary search.","Fragments":["If"]},{"Key":"search. If","Fragments":["in"]},{"Key":"If in","Fragments":["some"]},{"Key":"some rare","Fragments":["cases"]},{"Key":"rare cases","Fragments":["no"]},{"Key":"cases no","Fragments":["direct"]},{"Key":"no direct","Fragments":["domino"]},{"Key":"direct domino","Fragments":["is"]},{"Key":"is found,","Fragments":["I"]},{"Key":"found, I","Fragments":["try"]},{"Key":"try simple","Fragments":["linear"]},{"Key":"simple linear","Fragments":["lookup"]},{"Key":"linear lookup","Fragments":["for"]},{"Key":"lookup for","Fragments":["reversed","every"]},{"Key":"for reversed","Fragments":["domino."]},{"Key":"reversed domino.","Fragments":["This"]},{"Key":"domino. This","Fragments":["can"]},{"Key":"This can","Fragments":["be"]},{"Key":"optimized by","Fragments":["supporting"]},{"Key":"by supporting","Fragments":["two"]},{"Key":"supporting two","Fragments":["lists"]},{"Key":"two lists","Fragments":["of"]},{"Key":"lists of","Fragments":["dominoes","things."]},{"Key":"of dominoes","Fragments":["sorted","match)"]},{"Key":"dominoes sorted","Fragments":["by"]},{"Key":"sorted by","Fragments":["heads"]},{"Key":"by heads","Fragments":["and"]},{"Key":"heads and","Fragments":["tails,"]},{"Key":"and tails,","Fragments":["but"]},{"Key":"tails, but","Fragments":["I'm"]},{"Key":"I'm too","Fragments":["lazy","tired"]},{"Key":"too lazy","Fragments":["now."]},{"Key":" So","Fragments":["in","I","yes,","you","it","this","Rust","that","basically","leaving","it"]},{"Key":"So in","Fragments":["best"]},{"Key":"in best","Fragments":["case"]},{"Key":"best case","Fragments":["my","being"]},{"Key":"case my","Fragments":["program"]},{"Key":"my program","Fragments":["complexity"]},{"Key":"program complexity","Fragments":["will"]},{"Key":"complexity will","Fragments":["be"]},{"Key":"be something","Fragments":["like","using"]},{"Key":"something like","Fragments":["O(n*logn)","the","Chinese","that?","`fn","that.","this","```*m.entry(key).insert_or(default_value)","this:","an"]},{"Key":"like O(n*logn)","Fragments":["(due"]},{"Key":"O(n*logn) (due","Fragments":["to"]},{"Key":"(due to","Fragments":["sorting"]},{"Key":"to sorting","Fragments":["and"]},{"Key":"and binary","Fragments":["search),"]},{"Key":"binary search),","Fragments":["and"]},{"Key":"search), and","Fragments":["in"]},{"Key":"and in","Fragments":["worst","this","both","cases","it"]},{"Key":"in worst","Fragments":["case"]},{"Key":"worst case","Fragments":["(if","being"]},{"Key":"case (if","Fragments":["only"]},{"Key":"(if only","Fragments":["reversed"]},{"Key":"only reversed","Fragments":["forms"]},{"Key":"reversed forms","Fragments":["of"]},{"Key":"forms of","Fragments":["dominoes","shouting"]},{"Key":"dominoes match)","Fragments":["it's"]},{"Key":"match) it's","Fragments":["like"]},{"Key":"it's like","Fragments":["O(n(1+logn))"]},{"Key":"like O(n(1+logn))","Fragments":["or"]},{"Key":"O(n(1+logn)) or","Fragments":["something"]},{"Key":"something (please","Fragments":["correct"]},{"Key":"(please correct","Fragments":["me"]},{"Key":"correct me","Fragments":["if","if"]},{"Key":"me if","Fragments":["I'm","I'm"]},{"Key":"if I'm","Fragments":["wrong","wrong!","in"]},{"Key":"I'm wrong","Fragments":["here,"]},{"Key":"wrong here,","Fragments":["as"]},{"Key":"here, as","Fragments":["I'm","it"]},{"Key":"as I'm","Fragments":["too","still"]},{"Key":"too tired","Fragments":["to"]},{"Key":"tired to","Fragments":["think"]},{"Key":"to think","Fragments":["clearly).","about","about"]},{"Key":"explain why","Fragments":["did"]},{"Key":"why did","Fragments":["you","you"]},{"Key":"did you","Fragments":["use","use","choose","choose"]},{"Key":"you use","Fragments":["\"as","the","the","an","here","a","the"]},{"Key":"use \"as","Fragments":["u8\"?"]},{"Key":"don't really","Fragments":["need","know","know","like","like","need","like","understand","like","support","understand"]},{"Key":"really need","Fragments":["`list`","it?","?","to"]},{"Key":"need `list`","Fragments":["variable"]},{"Key":"`list` variable","Fragments":["on"]},{"Key":"variable on","Fragments":["line","line","line"]},{"Key":"on line","Fragments":["19.","2?","31?","12.","64","12,","8","7","7.","47,","40.","27?","31","18","45.","14","2.","18.","4.","7.","20","6,","7,","27","12?","20.","6.","21.","3.","3","4?","24,","102"]},{"Key":" To","Fragments":["get","get","be","fix","use"]},{"Key":"To get","Fragments":["a","an"]},{"Key":"more range","Fragments":["you"]},{"Key":"range you","Fragments":["could"]},{"Key":"There's also","Fragments":["a","a"]},{"Key":"also a","Fragments":["constant","`.to_lowercase()`","simple","method","type"]},{"Key":"time solution","Fragments":["using","using","using","by","exists"]},{"Key":"solution using","Fragments":["the","the","the"]},{"Key":"the mathematical","Fragments":["formulae","formulae"]},{"Key":"mathematical formulae","Fragments":["for","for"]},{"Key":"of squares","Fragments":["and","of","from","and","and","and","and","too."]},{"Key":"squares and","Fragments":["sums","sums","square","sums","sums"]},{"Key":"and sums","Fragments":["of","of","of","of","of","of","of"]},{"Key":"use `Option::map`","Fragments":["combinator"]},{"Key":"`Option::map` combinator","Fragments":["instead"]},{"Key":"combinator instead","Fragments":["of"]},{"Key":"matching in","Fragments":["function"]},{"Key":"in function","Fragments":["`area_code()`."]},{"Key":"What would","Fragments":["`pretty_print`"]},{"Key":"would `pretty_print`","Fragments":["return"]},{"Key":"`pretty_print` return","Fragments":["if"]},{"Key":"return if","Fragments":["a"]},{"Key":"a number","Fragments":["like","being","to"]},{"Key":"number like","Fragments":["\"1230100001\""]},{"Key":"like \"1230100001\"","Fragments":["is"]},{"Key":"\"1230100001\" is","Fragments":["given?"]},{"Key":"is given?","Fragments":["\"000000001\"?"]},{"Key":"given? \"000000001\"?","Fragments":["\"0100000010\"?"]},{"Key":"for mentioning","Fragments":["`Option::map()`."]},{"Key":"mentioning `Option::map()`.","Fragments":["I"]},{"Key":"`Option::map()`. I","Fragments":["had"]},{"Key":"had not","Fragments":["been"]},{"Key":"not been","Fragments":["aware"]},{"Key":"of that","Fragments":["function.","big","stuff"]},{"Key":"that function.","Fragments":["Looks"]},{"Key":"function. Looks","Fragments":["like"]},{"Key":"Looks like","Fragments":["`Result::map()`","the","you","it"]},{"Key":"like `Result::map()`","Fragments":["etc."]},{"Key":"`Result::map()` etc.","Fragments":["also"]},{"Key":"etc. also","Fragments":["exist."]},{"Key":"also exist.","Fragments":["This"]},{"Key":"exist. This","Fragments":["definitely"]},{"Key":"This definitely","Fragments":["makes"]},{"Key":"definitely makes","Fragments":["such"]},{"Key":"makes such","Fragments":["transformations"]},{"Key":"such transformations","Fragments":["more"]},{"Key":"transformations more","Fragments":["concise."]},{"Key":"As for","Fragments":["your","the","returning","one-liners,","the","using","`\u0026str`,"]},{"Key":"for your","Fragments":["second","help.","input!","feedback!","nitpick,","help"]},{"Key":"your second","Fragments":["question,","solution,"]},{"Key":"second question,","Fragments":["it"]},{"Key":"question, it","Fragments":["gives"]},{"Key":"it gives","Fragments":["`(123)"]},{"Key":"gives `(123)","Fragments":["010-0001`,"]},{"Key":"`(123) 010-0001`,","Fragments":["`(000)"]},{"Key":"010-0001`, `(000)","Fragments":["000-0001`"]},{"Key":"`(000) 000-0001`","Fragments":["and"]},{"Key":"000-0001` and","Fragments":["`(010)"]},{"Key":"and `(010)","Fragments":["000-0010`,"]},{"Key":"`(010) 000-0010`,","Fragments":["which"]},{"Key":"000-0010`, which","Fragments":["is"]},{"Key":"the expected","Fragments":["behavior.","interface,"]},{"Key":"expected behavior.","Fragments":["I"]},{"Key":"behavior. I","Fragments":["hope"]},{"Key":"hope you","Fragments":["weren't","don't"]},{"Key":"you weren't","Fragments":["thinking"]},{"Key":"weren't thinking","Fragments":["that"]},{"Key":"thinking that","Fragments":["the","probably"]},{"Key":"the leading","Fragments":["zeroes"]},{"Key":"leading zeroes","Fragments":["would"]},{"Key":"zeroes would","Fragments":["be"]},{"Key":" Why","Fragments":["didn't","not","not","do","not","have"]},{"Key":"Why didn't","Fragments":["you"]},{"Key":"didn't you","Fragments":["continue"]},{"Key":"you continue","Fragments":["the"]},{"Key":"continue the","Fragments":["pattern"]},{"Key":"pattern in","Fragments":["lines"]},{"Key":"in lines","Fragments":["18","4","7","46"]},{"Key":"lines 18","Fragments":["and"]},{"Key":"18 and","Fragments":["19"]},{"Key":"and 19","Fragments":["for"]},{"Key":"19 for","Fragments":["the"]},{"Key":"the higher","Fragments":["digits?"]},{"Key":"I wrote","Fragments":["lines","this","it"]},{"Key":"wrote lines","Fragments":["20-25"]},{"Key":"lines 20-25","Fragments":["before"]},{"Key":"20-25 before","Fragments":["lines"]},{"Key":"before lines","Fragments":["18\u002619."]},{"Key":"lines 18\u002619.","Fragments":["I"]},{"Key":"18\u002619. I","Fragments":["might"]},{"Key":"I might","Fragments":["have","update","suggest"]},{"Key":"might have","Fragments":["used"]},{"Key":"have used","Fragments":["the","a","the"]},{"Key":"used the","Fragments":["same","letter_counts","ascii","characters","same","example"]},{"Key":"same pattern","Fragments":["if"]},{"Key":"pattern if","Fragments":["I"]},{"Key":"if I","Fragments":["hadn't","borrow","just","might","have","need","was","hadn't","read","could","were","were"]},{"Key":"hadn't decided","Fragments":["to"]},{"Key":"decided to","Fragments":["support","deduplicate","make","just","not","implement"]},{"Key":"to support","Fragments":["both","BCE"]},{"Key":"support both","Fragments":["upper"]},{"Key":"both upper","Fragments":["and"]},{"Key":"upper and","Fragments":["lower"]},{"Key":"and lower","Fragments":["case"]},{"Key":"lower case","Fragments":["`a`","representation","characters.","operation","-"]},{"Key":"case `a`","Fragments":["-"]},{"Key":"`a` -","Fragments":["`f`."]},{"Key":" It'd","Fragments":["look"]},{"Key":"It'd look","Fragments":["something"]},{"Key":"look something","Fragments":["like"]},{"Key":"the following.","Fragments":["Which"]},{"Key":"following. Which","Fragments":["isn't"]},{"Key":"Which isn't","Fragments":["terrible,"]},{"Key":"isn't terrible,","Fragments":["but"]},{"Key":"terrible, but","Fragments":["I'm"]},{"Key":"not loving","Fragments":["either."]},{"Key":"loving either.","Fragments":["I"]},{"Key":"either. I","Fragments":["wonder"]},{"Key":"wonder how","Fragments":["it"]},{"Key":"how it","Fragments":["compares","might","was"]},{"Key":"it compares","Fragments":["to"]},{"Key":"compares to","Fragments":["doing"]},{"Key":"to doing","Fragments":["them"]},{"Key":"doing them","Fragments":["all"]},{"Key":"them all","Fragments":["explicitly."]},{"Key":" _","Fragments":["if","if","if","=\u003e","=\u003e","=\u003e","=\u003e","=\u003e"]},{"Key":"_ if","Fragments":["c","c","c"]},{"Key":"if c","Fragments":["\u003e=","\u003e=","\u003e="]},{"Key":"c \u003e=","Fragments":["'0'","'a'","'A'"]},{"Key":"\u003e= '0'","Fragments":["\u0026\u0026"]},{"Key":"'0' \u0026\u0026","Fragments":["c"]},{"Key":"\u0026\u0026 c","Fragments":["\u003c=","\u003c=","\u003c="]},{"Key":"c \u003c=","Fragments":["'9'","'f'","'F'"]},{"Key":" =\u003e","Fragments":["Some(c","Some(c","Some(c"]},{"Key":"=\u003e Some(c","Fragments":["as","as","as"]},{"Key":"Some(c as","Fragments":["u32","u32","u32"]},{"Key":"as u32","Fragments":["-","-","+","-","+"]},{"Key":"u32 -","Fragments":["'0'","'a'","'A'"]},{"Key":"- '0'","Fragments":["as"]},{"Key":"'0' as","Fragments":["u32),"]},{"Key":"\u003e= 'a'","Fragments":["\u0026\u0026"]},{"Key":"'a' \u0026\u0026","Fragments":["c"]},{"Key":"- 'a'","Fragments":["as"]},{"Key":"'a' as","Fragments":["u32"]},{"Key":"u32 +","Fragments":["10),","10),"]},{"Key":"\u003e= 'A'","Fragments":["\u0026\u0026"]},{"Key":"'A' \u0026\u0026","Fragments":["c"]},{"Key":"- 'A'","Fragments":["as"]},{"Key":"'A' as","Fragments":["u32"]},{"Key":" '0'","Fragments":["=\u003e","=\u003e"]},{"Key":"'0' =\u003e","Fragments":["Some(0),","string.push('"]},{"Key":" '1'","Fragments":["=\u003e"]},{"Key":"'1' =\u003e","Fragments":["Some(1),"]},{"Key":" '2'","Fragments":["=\u003e"]},{"Key":"'2' =\u003e","Fragments":["Some(2),"]},{"Key":" '3'","Fragments":["=\u003e"]},{"Key":"'3' =\u003e","Fragments":["Some(3),"]},{"Key":" '4'","Fragments":["=\u003e"]},{"Key":"'4' =\u003e","Fragments":["Some(4),"]},{"Key":" '5'","Fragments":["=\u003e"]},{"Key":"'5' =\u003e","Fragments":["Some(5),"]},{"Key":" '6'","Fragments":["=\u003e"]},{"Key":"'6' =\u003e","Fragments":["Some(6),"]},{"Key":" '7'","Fragments":["=\u003e"]},{"Key":"'7' =\u003e","Fragments":["Some(7),"]},{"Key":" '8'","Fragments":["=\u003e"]},{"Key":"'8' =\u003e","Fragments":["Some(8),"]},{"Key":" '9'","Fragments":["=\u003e"]},{"Key":"'9' =\u003e","Fragments":["Some(9),"]},{"Key":" 'a'","Fragments":["|"]},{"Key":"'a' |","Fragments":["'A'"]},{"Key":"| 'A'","Fragments":["=\u003e"]},{"Key":"'A' =\u003e","Fragments":["Some(10),"]},{"Key":" 'b'","Fragments":["|"]},{"Key":"'b' |","Fragments":["'B'"]},{"Key":"| 'B'","Fragments":["=\u003e"]},{"Key":"'B' =\u003e","Fragments":["Some(11),"]},{"Key":" 'c'","Fragments":["|"]},{"Key":"'c' |","Fragments":["'C'"]},{"Key":"| 'C'","Fragments":["=\u003e"]},{"Key":"'C' =\u003e","Fragments":["Some(12),"]},{"Key":" 'd'","Fragments":["|"]},{"Key":"'d' |","Fragments":["'D'"]},{"Key":"| 'D'","Fragments":["=\u003e"]},{"Key":"'D' =\u003e","Fragments":["Some(13),"]},{"Key":" 'e'","Fragments":["|"]},{"Key":"'e' |","Fragments":["'E'"]},{"Key":"| 'E'","Fragments":["=\u003e"]},{"Key":"'E' =\u003e","Fragments":["Some(14),"]},{"Key":" 'f'","Fragments":["|"]},{"Key":"'f' |","Fragments":["'F'"]},{"Key":"| 'F'","Fragments":["=\u003e"]},{"Key":"'F' =\u003e","Fragments":["Some(15),"]},{"Key":" All","Fragments":["three","rectangles","rectangles"]},{"Key":"All three","Fragments":["choices"]},{"Key":"three choices","Fragments":["are"]},{"Key":"choices are","Fragments":["pretty"]},{"Key":"are pretty","Fragments":["readable.","much"]},{"Key":"pretty readable.","Fragments":["It","Chained"]},{"Key":"readable. It","Fragments":["might"]},{"Key":"It might","Fragments":["come","be","be"]},{"Key":"might come","Fragments":["down"]},{"Key":"come down","Fragments":["to"]},{"Key":"to performance,","Fragments":["maybe"]},{"Key":"performance, maybe","Fragments":["worth"]},{"Key":"maybe worth","Fragments":["a"]},{"Key":"worth a","Fragments":["benchmark"]},{"Key":"a benchmark","Fragments":["test"]},{"Key":"benchmark test","Fragments":["on"]},{"Key":"test on","Fragments":["hex_digit?"]},{"Key":"You could","Fragments":["use","look","also","probably","look","get","implement","break","use","also","also","use","also","also","remove","avoid","have","convert","also","simplify","use","use","maybe","use","look","try","look","also"]},{"Key":"use `'0'...'9'`","Fragments":["instead"]},{"Key":"`'0'...'9'` instead","Fragments":["of"]},{"Key":"of if-guard","Fragments":["in"]},{"Key":"if-guard in","Fragments":["`match`."]},{"Key":" Hi","Fragments":["there,","there!","Josh,"]},{"Key":" don't","Fragments":["you"]},{"Key":"don't you","Fragments":["think"]},{"Key":"think line","Fragments":["15","15"]},{"Key":"line 15","Fragments":["might","is"]},{"Key":"15 might","Fragments":["be"]},{"Key":"bit too","Fragments":["long?"]},{"Key":"too long?","Fragments":["Some"]},{"Key":"long? Some","Fragments":["more"]},{"Key":"Some more","Fragments":["things"]},{"Key":"more things","Fragments":["that"]},{"Key":"things that","Fragments":["are","could","I'm","are"]},{"Key":"that are","Fragments":["wrong","generated.","already","the","actually"]},{"Key":"are wrong","Fragments":["with"]},{"Key":"wrong with","Fragments":["it:"]},{"Key":"1. `Option::map()`","Fragments":["is"]},{"Key":"`Option::map()` is","Fragments":["nice,"]},{"Key":"is nice,","Fragments":["but"]},{"Key":"nice, but","Fragments":["I"]},{"Key":"15 is","Fragments":["not"]},{"Key":"not a","Fragments":["good","fan","better","magic","common","returning","reference.","big","big"]},{"Key":"good place","Fragments":["for"]},{"Key":"place for","Fragments":["it,"]},{"Key":"for it,","Fragments":["as"]},{"Key":"to unravel","Fragments":["the"]},{"Key":"unravel the","Fragments":["Option"]},{"Key":"the Option","Fragments":["anyway."]},{"Key":"2. In","Fragments":["the"]},{"Key":"the `format!`-call,","Fragments":["you"]},{"Key":"`format!`-call, you","Fragments":["don't"]},{"Key":"the padding","Fragments":["arguments."]},{"Key":"padding arguments.","Fragments":["The"]},{"Key":"arguments. The","Fragments":["slices"]},{"Key":"The slices","Fragments":["you"]},{"Key":"slices you","Fragments":["get"]},{"Key":"you get","Fragments":["from","away","a","the"]},{"Key":"get from","Fragments":["the"]},{"Key":"number already","Fragments":["have"]},{"Key":"already have","Fragments":["the","a"]},{"Key":"the right","Fragments":["format.","thing","hand","track","language?","function","type"]},{"Key":" 3.","Fragments":["Besides","In","Speed"]},{"Key":"3. Besides","Fragments":["`Option::unwrap_or_else()`,"]},{"Key":"Besides `Option::unwrap_or_else()`,","Fragments":["there"]},{"Key":"`Option::unwrap_or_else()`, there","Fragments":["is"]},{"Key":"is `Option::unwrap_or()`,","Fragments":["which"]},{"Key":"`Option::unwrap_or()`, which","Fragments":["takes"]},{"Key":"which takes","Fragments":["a"]},{"Key":"takes a","Fragments":["value"]},{"Key":"a value","Fragments":["instead","for","if","0-16","to","in"]},{"Key":"value instead","Fragments":["of"]},{"Key":"1. This","Fragments":["point"]},{"Key":"This point","Fragments":["is"]},{"Key":"point is","Fragments":["debatable."]},{"Key":"is debatable.","Fragments":["And"]},{"Key":"debatable. And","Fragments":["excessive"]},{"Key":"And excessive","Fragments":["pattern"]},{"Key":"excessive pattern","Fragments":["matching"]},{"Key":"is often","Fragments":["avoided"]},{"Key":"often avoided","Fragments":["in"]},{"Key":"avoided in","Fragments":["FP"]},{"Key":"in FP","Fragments":["world."]},{"Key":"2. Good","Fragments":["point,"]},{"Key":"point, I","Fragments":["thought"]},{"Key":"thought about","Fragments":["string","adding","solving","doing","reusing","using"]},{"Key":"about string","Fragments":["in"]},{"Key":"string in","Fragments":["context","ASCII","line","one"]},{"Key":"in context","Fragments":["of"]},{"Key":"context of","Fragments":["integer"]},{"Key":"of integer","Fragments":["types,","than"]},{"Key":"integer types,","Fragments":["my"]},{"Key":"types, my","Fragments":["bad."]},{"Key":"3. In","Fragments":["this"]},{"Key":"In this","Fragments":["case","define","version","case","case","case","case","exercise","case","case"]},{"Key":"this case","Fragments":["`unwrap_or_else()`","I'm","would","in","the","though,","the","it","it","I","all"]},{"Key":"case `unwrap_or_else()`","Fragments":["is"]},{"Key":"`unwrap_or_else()` is","Fragments":["used"]},{"Key":"used to","Fragments":["avoid","the","the","languages","generate","that.","python","program","from","functional"]},{"Key":"avoid allocation","Fragments":["when","when"]},{"Key":"allocation when","Fragments":["not","a"]},{"Key":"when not","Fragments":["needed"]},{"Key":"not needed","Fragments":["(`\"invalid\".into()`","in","you"]},{"Key":"needed (`\"invalid\".into()`","Fragments":["allocates"]},{"Key":"(`\"invalid\".into()` allocates","Fragments":["a"]},{"Key":"allocates a","Fragments":["`String`,"]},{"Key":"a `String`,","Fragments":["which"]},{"Key":"`String`, which","Fragments":["will"]},{"Key":"will always","Fragments":["happen","return","have","be"]},{"Key":"always happen","Fragments":["in"]},{"Key":"happen in","Fragments":["case","the"]},{"Key":"in case","Fragments":["of","you","I'm","it"]},{"Key":"case of","Fragments":["`unwrap_or()`","trading"]},{"Key":"of `unwrap_or()`","Fragments":["is"]},{"Key":"`unwrap_or()` is","Fragments":["used)."]},{"Key":"That compact","Fragments":["code"]},{"Key":"compact code","Fragments":["is"]},{"Key":"is interesting","Fragments":["to"]},{"Key":"see but","Fragments":["I"]},{"Key":"wonder it's","Fragments":["better"]},{"Key":"to let","Fragments":["the"]},{"Key":"compiler do","Fragments":["the"]},{"Key":"do the","Fragments":["optimisation","random","actual","`1..n+1`","lower","same","`.map(|c|","filter","`push`","manipulations","same"]},{"Key":"the optimisation","Fragments":["and"]},{"Key":"optimisation and","Fragments":["have"]},{"Key":"and have","Fragments":["the"]},{"Key":"code simple","Fragments":["and"]},{"Key":"and well","Fragments":["documented."]},{"Key":" Just","Fragments":["popping","three","writing","a","to","being"]},{"Key":"Just popping","Fragments":["in"]},{"Key":"popping in","Fragments":["to"]},{"Key":"in to","Fragments":["say"]},{"Key":"to say","Fragments":["that","it","on","about"]},{"Key":"say that","Fragments":["I'd"]},{"Key":"that I'd","Fragments":["rather"]},{"Key":"I'd rather","Fragments":["see","just","catch"]},{"Key":"rather see","Fragments":["this"]},{"Key":"see this","Fragments":["expression"]},{"Key":"this expression","Fragments":["than","does.","is"]},{"Key":"expression than","Fragments":["a"]},{"Key":"of variables","Fragments":["and"]},{"Key":"variables and","Fragments":["comments;","an"]},{"Key":"and comments;","Fragments":["this"]},{"Key":"comments; this","Fragments":["kind"]},{"Key":"this kind","Fragments":["of","of"]},{"Key":"of thing","Fragments":["is","you"]},{"Key":"thing is","Fragments":["easier","something","calling"]},{"Key":"is easier","Fragments":["for"]},{"Key":"easier for","Fragments":["me"]},{"Key":"for me","Fragments":["to","in","will","to","is","to","-","here","and"]},{"Key":"me to","Fragments":["read.","use","return","avoid","finish","have","learn","get","be","do!","be","create","put"]},{"Key":"read. I'd","Fragments":["call"]},{"Key":"I'd call","Fragments":["that"]},{"Key":"call that","Fragments":["a"]},{"Key":"that a","Fragments":["preference","solution","multiplication","safe","time","function"]},{"Key":"a preference","Fragments":["thing."]},{"Key":"Using sorts.","Fragments":["Performance"]},{"Key":"sorts. Performance","Fragments":["seems"]},{"Key":"Performance seems","Fragments":["to"]},{"Key":"seems to","Fragments":["be","be","be","me","fail.","be","me","be","be","be"]},{"Key":"be about","Fragments":["the"]},{"Key":"as my","Fragments":["previous","comparison"]},{"Key":"my previous","Fragments":["algorithm","one,"]},{"Key":"previous algorithm","Fragments":["on"]},{"Key":"algorithm on","Fragments":["the"]},{"Key":"the included","Fragments":["tests."]},{"Key":"included tests.","Fragments":["Probably"]},{"Key":"tests. Probably","Fragments":["need"]},{"Key":"Probably need","Fragments":["a"]},{"Key":"need a","Fragments":["larger","mutex"]},{"Key":"a larger","Fragments":["benchmark","type","program"]},{"Key":"larger benchmark","Fragments":["suite"]},{"Key":"benchmark suite","Fragments":["to"]},{"Key":"suite to","Fragments":["get"]},{"Key":"to get","Fragments":["an","a","a","the","the","that","all","rid","to","the","it","to--and","away","the","the","by","this","a","the","rid","this","it","this"]},{"Key":"get an","Fragments":["accurate","efficient"]},{"Key":"an accurate","Fragments":["benchmark.","name"]},{"Key":"If testfor","Fragments":["is"]},{"Key":"testfor is","Fragments":["ABC"]},{"Key":"is ABC","Fragments":["and"]},{"Key":"ABC and","Fragments":["one"]},{"Key":"and one","Fragments":["of","to","template","wants","test"]},{"Key":"one of","Fragments":["the","the","the","the","the","the","the","the","them,","the","my","the","the","the","the","my","the","the","the","the","the","the"]},{"Key":"the inputs","Fragments":["is","and"]},{"Key":"inputs is","Fragments":["abc,"]},{"Key":"is abc,","Fragments":["won't"]},{"Key":"abc, won't","Fragments":["that"]},{"Key":"won't that","Fragments":["pass"]},{"Key":"that pass","Fragments":["as"]},{"Key":"pass as","Fragments":["an"]},{"Key":"statement on","Fragments":["the"]},{"Key":"last line.","Fragments":["The"]},{"Key":"line. The","Fragments":["last"]},{"Key":"The last","Fragments":["expression","expression"]},{"Key":"is its","Fragments":["return","return","name."]},{"Key":"its return","Fragments":["value,","value,"]},{"Key":"return value,","Fragments":["and","you"]},{"Key":"value, and","Fragments":["that's","use"]},{"Key":"and that's","Fragments":["commonly"]},{"Key":"that's commonly","Fragments":["taken"]},{"Key":"commonly taken","Fragments":["advantage"]},{"Key":"taken advantage","Fragments":["of","of"]},{"Key":"advantage of","Fragments":["in","using"]},{"Key":"of in","Fragments":["rust.","front."]},{"Key":"the lifetime","Fragments":["and","annotation","from","annotations,","annotations","annotations,","of","indicator"]},{"Key":"lifetime and","Fragments":["type"]},{"Key":"and type","Fragments":["annotations","inference"]},{"Key":"type annotations","Fragments":["on","on","in"]},{"Key":"annotations on","Fragments":["line","lines"]},{"Key":"not convinced","Fragments":["the","that","there"]},{"Key":"convinced the","Fragments":["`equal_strings`"]},{"Key":"the `equal_strings`","Fragments":["helps"]},{"Key":"`equal_strings` helps","Fragments":["readability"]},{"Key":"helps readability","Fragments":["much"]},{"Key":"readability much","Fragments":["-"]},{"Key":"much -","Fragments":["I"]},{"Key":"- I","Fragments":["think","think","suspect","think","wonder"]},{"Key":"think I'd","Fragments":["rather"]},{"Key":"rather just","Fragments":["use"]},{"Key":"an anonymous","Fragments":["function.","function."]},{"Key":"anonymous function.","Fragments":["What"]},{"Key":"function. What","Fragments":["say"]},{"Key":"What say","Fragments":["you?"]},{"Key":"What about","Fragments":["the"]},{"Key":"the case","Fragments":["where","and","where","depends","was","with"]},{"Key":"case where","Fragments":["we","the","`word"]},{"Key":"where we","Fragments":["do"]},{"Key":"we do","Fragments":["`anagrams_for(\"foo\","]},{"Key":"do `anagrams_for(\"foo\",","Fragments":["vec![\"foo\"])`"]},{"Key":"`anagrams_for(\"foo\", vec![\"foo\"])`","Fragments":["?"]},{"Key":"vec![\"foo\"])` ?","Fragments":["I"]},{"Key":"? I","Fragments":["think"]},{"Key":"code would","Fragments":["say","probably","be","blow"]},{"Key":"would say","Fragments":["foo"]},{"Key":"say foo","Fragments":["is"]},{"Key":"foo is","Fragments":["an"]},{"Key":"is an","Fragments":["anagram","error,","error,","Iterator","acronym","easier"]},{"Key":"an anagram","Fragments":["of","is","than","the","of"]},{"Key":"anagram of","Fragments":["itself","\"banana\"."]},{"Key":"of itself","Fragments":["but"]},{"Key":"itself but","Fragments":["the"]},{"Key":"problem is","Fragments":["defined","equivalent"]},{"Key":"is defined","Fragments":["to","by"]},{"Key":"defined to","Fragments":["say"]},{"Key":"say it","Fragments":["shouldn't","serves"]},{"Key":"it shouldn't","Fragments":["be"]},{"Key":"like this","Fragments":["concise","I","I","I","I","I","concise","I","method","(not","is","I","I","I","I","I",":)","any","I","I","I","I","I"]},{"Key":"this concise","Fragments":["write.","write."]},{"Key":" Btw.","Fragments":["doesn't"]},{"Key":"Btw. doesn't","Fragments":["matter"]},{"Key":"of parentheses","Fragments":["(could"]},{"Key":"parentheses (could","Fragments":["be"]},{"Key":"(could be","Fragments":["removed)"]},{"Key":" Man,","Fragments":["I"]},{"Key":"Man, I","Fragments":["was"]},{"Key":"really hoping","Fragments":["someone"]},{"Key":"hoping someone","Fragments":["knew"]},{"Key":"someone knew","Fragments":["another"]},{"Key":"knew another","Fragments":["way"]},{"Key":"another way","Fragments":["to"]},{"Key":"set up","Fragments":["the","and","to"]},{"Key":"up the","Fragments":["send","closure.","efficiency","is","values"]},{"Key":"the send","Fragments":["and"]},{"Key":"send and","Fragments":["receive"]},{"Key":"and receive","Fragments":["ends"]},{"Key":"receive ends","Fragments":["for"]},{"Key":"ends for","Fragments":["this"]},{"Key":"of thing--besides","Fragments":["counting"]},{"Key":"thing--besides counting","Fragments":["the"]},{"Key":"number of","Fragments":["lines,","iterations","letters,","options?","edges","divisibility","divisibility","String","neighboring"]},{"Key":"of lines,","Fragments":["I"]},{"Key":"lines, I","Fragments":["mean."]},{"Key":"Yeah it","Fragments":["doesn't"]},{"Key":"doesn't quite","Fragments":["feel"]},{"Key":"quite feel","Fragments":["satisfactory"]},{"Key":"feel satisfactory","Fragments":["but"]},{"Key":"satisfactory but","Fragments":["there"]},{"Key":"but there","Fragments":["you","is","is","are"]},{"Key":"there you","Fragments":["go...","can"]},{"Key":" Interesting","Fragments":["that","solution","choice"]},{"Key":"Interesting that","Fragments":["using"]},{"Key":"that using","Fragments":["filter_map"]},{"Key":"using filter_map","Fragments":["was","which"]},{"Key":"filter_map was","Fragments":["relatively"]},{"Key":"was relatively","Fragments":["slow"]},{"Key":"relatively slow","Fragments":["though..."]},{"Key":"That surprised","Fragments":["me,"]},{"Key":"surprised me,","Fragments":["too."]},{"Key":"me, too.","Fragments":["I"]},{"Key":"too. I","Fragments":["imagine"]},{"Key":"I imagine","Fragments":["it","Vectors"]},{"Key":"imagine it","Fragments":["has"]},{"Key":"it has","Fragments":["something","to","to"]},{"Key":"has something","Fragments":["to"]},{"Key":"something to","Fragments":["do","play"]},{"Key":"do with","Fragments":["branch","`for"]},{"Key":"with branch","Fragments":["misprediction."]},{"Key":"branch misprediction.","Fragments":["Don't"]},{"Key":"misprediction. Don't","Fragments":["know"]},{"Key":"Don't know","Fragments":["why"]},{"Key":"know why","Fragments":["the","I"]},{"Key":"why the","Fragments":["chip","open","type"]},{"Key":"the chip","Fragments":["would"]},{"Key":"chip would","Fragments":["ever"]},{"Key":"would ever","Fragments":["want"]},{"Key":"ever want","Fragments":["to"]},{"Key":"to assume","Fragments":["it's"]},{"Key":"assume it's","Fragments":["going"]},{"Key":"it's going","Fragments":["to","to"]},{"Key":"to fail","Fragments":["and"]},{"Key":"fail and","Fragments":["try"]},{"Key":"and try","Fragments":["that"]},{"Key":"that route","Fragments":["first,"]},{"Key":"route first,","Fragments":["though."]},{"Key":"first, though.","Fragments":[":p"]},{"Key":"of `.map(|c|","Fragments":["c.to_lowercase().next().unwrap())`","*c)`."]},{"Key":"`.map(|c| c.to_lowercase().next().unwrap())`","Fragments":["you"]},{"Key":"c.to_lowercase().next().unwrap())` you","Fragments":["could"]},{"Key":"use `.flat_map(|c|","Fragments":["c.to_lowercase().next())`,"]},{"Key":"`.flat_map(|c| c.to_lowercase().next())`,","Fragments":["as"]},{"Key":"c.to_lowercase().next())`, as","Fragments":["I"]},{"Key":"as I","Fragments":["assume","wrote","work","have","see","am","know","work","wouldn't","made","don't","understand"]},{"Key":"assume you","Fragments":["don't"]},{"Key":"don't want","Fragments":["to"]},{"Key":"to panic","Fragments":["on"]},{"Key":"panic on","Fragments":["strange"]},{"Key":"on strange","Fragments":["symbols"]},{"Key":"strange symbols","Fragments":["without"]},{"Key":"symbols without","Fragments":["lowercase"]},{"Key":"without lowercase","Fragments":["variants?"]},{"Key":" Or,","Fragments":["to"]},{"Key":"Or, to","Fragments":["think"]},{"Key":"think about","Fragments":["it,","it.","what","avoid","shortening","it,"]},{"Key":"about it,","Fragments":["it","`verify`"]},{"Key":"it, it","Fragments":["should"]},{"Key":"should really","Fragments":["be","be"]},{"Key":"really be","Fragments":["`.map(|c|","used","necessary"]},{"Key":"be `.map(|c|","Fragments":["c.to_lowercase().next().unwrap_or(c))`,"]},{"Key":"`.map(|c| c.to_lowercase().next().unwrap_or(c))`,","Fragments":["so"]},{"Key":"c.to_lowercase().next().unwrap_or(c))`, so","Fragments":["it"]},{"Key":"so it","Fragments":["will","could","is","seems"]},{"Key":"work for","Fragments":["something","any","any","any"]},{"Key":"for something","Fragments":["like","that","like"]},{"Key":"like Chinese","Fragments":["hieroglyphs."]},{"Key":" ```to_lowercase```","Fragments":["will"]},{"Key":"```to_lowercase``` will","Fragments":["always"]},{"Key":"always return","Fragments":["at"]},{"Key":"return at","Fragments":["least"]},{"Key":"least 1","Fragments":["character"]},{"Key":"1 character","Fragments":["according"]},{"Key":"character according","Fragments":["to"]},{"Key":"according to","Fragments":["the","readily","your"]},{"Key":"the docs:","Fragments":["if"]},{"Key":"docs: if","Fragments":["there"]},{"Key":"is no","Fragments":["lower","space","reason","longer","loop","longer","less","need","exception","reason","code","other","need"]},{"Key":"no lower","Fragments":["case"]},{"Key":"case representation","Fragments":["then"]},{"Key":"representation then","Fragments":["the"]},{"Key":"then the","Fragments":["character","compiler","more","return"]},{"Key":"the character","Fragments":["is","level."]},{"Key":"character is","Fragments":["returned"]},{"Key":"is returned","Fragments":["unchanged."]},{"Key":"The solution","Fragments":["might","is"]},{"Key":"solution might","Fragments":["be"]},{"Key":"be better","Fragments":["if","if","for","named","instead","here,","with"]},{"Key":"better if","Fragments":["could","I"]},{"Key":"if could","Fragments":["handle"]},{"Key":"could handle","Fragments":["characters"]},{"Key":"handle characters","Fragments":["mapping"]},{"Key":"characters mapping","Fragments":["to"]},{"Key":"mapping to","Fragments":["multiple"]},{"Key":"to multiple","Fragments":["lower"]},{"Key":"multiple lower","Fragments":["case"]},{"Key":"case characters.","Fragments":["Not"]},{"Key":"characters. Not","Fragments":["sure"]},{"Key":"are any","Fragments":["alphabetic","characters"]},{"Key":"any alphabetic","Fragments":["characters"]},{"Key":"alphabetic characters","Fragments":["which"]},{"Key":"characters which","Fragments":["do"]},{"Key":"which do","Fragments":["so."]},{"Key":" There","Fragments":["are","is","is","has","interesting","are","is","are","is","is","are","is","are","is","is","is"]},{"Key":"are better","Fragments":["ways"]},{"Key":"better ways","Fragments":["of"]},{"Key":"ways of","Fragments":["generating"]},{"Key":"of generating","Fragments":["random"]},{"Key":"generating random","Fragments":["letters"]},{"Key":"random letters","Fragments":["-"]},{"Key":"letters -","Fragments":["e.g."]},{"Key":"- e.g.","Fragments":["```gen_range```."]},{"Key":"lifetime annotation","Fragments":["on","on"]},{"Key":"annotation on","Fragments":["```name```","line","line","line","line","line","30"]},{"Key":"on ```name```","Fragments":["(at"]},{"Key":"```name``` (at","Fragments":["least"]},{"Key":"(at least","Fragments":["I","under","in"]},{"Key":"least I","Fragments":["didn't,"]},{"Key":"I didn't,","Fragments":["with"]},{"Key":"didn't, with","Fragments":["similar"]},{"Key":"with similar","Fragments":["code"]},{"Key":"similar code","Fragments":["to"]},{"Key":"Thanks @bertrand","Fragments":[","]},{"Key":"@bertrand ,","Fragments":["I"]},{"Key":", I","Fragments":["pushed"]},{"Key":"I pushed","Fragments":["a"]},{"Key":"pushed a","Fragments":["cleaned-up","new"]},{"Key":"a cleaned-up","Fragments":["version"]},{"Key":"cleaned-up version","Fragments":["for"]},{"Key":"version for","Fragments":["rev4."]},{"Key":" Wow,","Fragments":["heavy"]},{"Key":"Wow, heavy","Fragments":["`match`"]},{"Key":"heavy `match`","Fragments":["usage."]},{"Key":"`match` usage.","Fragments":["It"]},{"Key":"usage. It","Fragments":["definitely"]},{"Key":"It definitely","Fragments":["can"]},{"Key":"definitely can","Fragments":["be"]},{"Key":"really know","Fragments":["about","which"]},{"Key":"know about","Fragments":["performance,","the","`join()`","the","`iter.position()`"]},{"Key":"about performance,","Fragments":["but"]},{"Key":"performance, but","Fragments":["in"]},{"Key":"in my","Fragments":["opinion","first","mind,","solution!","opinion!","editor","'leap'"]},{"Key":"my opinion","Fragments":["nested"]},{"Key":"opinion nested","Fragments":["matches"]},{"Key":"nested matches","Fragments":["looks"]},{"Key":"matches looks","Fragments":["too"]},{"Key":"looks too","Fragments":["complicated,","clever,"]},{"Key":"too complicated,","Fragments":["kludgy."]},{"Key":"complicated, kludgy.","Fragments":["It"]},{"Key":"kludgy. It","Fragments":["is"]},{"Key":"It is","Fragments":["hard","possible,","the","possible","more","very","set","not"]},{"Key":"is hard","Fragments":["to"]},{"Key":"to understand","Fragments":["what","the","and","it","what's","since","the"]},{"Key":"understand what","Fragments":["this","contribution","contribution","the","is"]},{"Key":"what this","Fragments":["expression","program"]},{"Key":" Anyway,","Fragments":["this","I"]},{"Key":"Anyway, this","Fragments":["solution"]},{"Key":"this solution","Fragments":["is","requires","is","to","was"]},{"Key":"solution is","Fragments":["correct,","possible","that:","clear","at","really","that","the","much"]},{"Key":"is correct,","Fragments":["we","so"]},{"Key":"correct, we","Fragments":["just"]},{"Key":"we just","Fragments":["probably"]},{"Key":"just probably","Fragments":["have"]},{"Key":"probably have","Fragments":["different","spent"]},{"Key":"have different","Fragments":["tastes.","names.","variables"]},{"Key":" Is","Fragments":["match","there","there","a","it","there","the","there","this","there"]},{"Key":"Is match","Fragments":["not"]},{"Key":"match not","Fragments":["performing"]},{"Key":"not performing","Fragments":["well?"]},{"Key":"performing well?","Fragments":["I"]},{"Key":"well? I","Fragments":["prefer"]},{"Key":"I prefer","Fragments":["match","to","your"]},{"Key":"prefer match","Fragments":["over"]},{"Key":"match over","Fragments":["a"]},{"Key":"over a","Fragments":["nest","2-dimensional","`\u0026str`,","function","range"]},{"Key":"a nest","Fragments":["of"]},{"Key":"nest of","Fragments":["if/then/else,"]},{"Key":"of if/then/else,","Fragments":["but"]},{"Key":"if/then/else, but","Fragments":["ymmv."]},{"Key":"If vs.","Fragments":["match"]},{"Key":"vs. match","Fragments":["is"]},{"Key":"match is","Fragments":["for"]},{"Key":"is for","Fragments":["the","now"]},{"Key":"most part","Fragments":["really"]},{"Key":"part really","Fragments":["just"]},{"Key":"really just","Fragments":["a"]},{"Key":"of taste.","Fragments":["I","You"]},{"Key":"taste. I","Fragments":["don't"]},{"Key":"compiler cares","Fragments":["too"]},{"Key":"cares too","Fragments":["much."]},{"Key":"Here however,","Fragments":["both"]},{"Key":"however, both","Fragments":["`match`"]},{"Key":"both `match`","Fragments":["and"]},{"Key":"`match` and","Fragments":["`if/else`"]},{"Key":"and `if/else`","Fragments":["are"]},{"Key":"`if/else` are","Fragments":["too"]},{"Key":"too complicated.","Fragments":["Whenever"]},{"Key":"complicated. Whenever","Fragments":["you"]},{"Key":"Whenever you","Fragments":["have"]},{"Key":"you have","Fragments":["a","time.","to","`str.to_string().to_lowercase()`","questions.","ideas"]},{"Key":"a conditional","Fragments":["structure","logic"]},{"Key":"conditional structure","Fragments":["that"]},{"Key":"structure that","Fragments":["returns","better"]},{"Key":"that returns","Fragments":["a","a"]},{"Key":"returns a","Fragments":["bool,","sorted","string,","sorted","`bool`,"]},{"Key":"a bool,","Fragments":["you","that's"]},{"Key":"bool, you","Fragments":["can"]},{"Key":"can do","Fragments":["without","better","`vec![element;","what","it","this","this","that","the"]},{"Key":"do without","Fragments":["it."]},{"Key":" For","Fragments":["example,","some","grades","the","this","the","checking","every","each","some","a"]},{"Key":"For example,","Fragments":["the","using","try"]},{"Key":"example, the","Fragments":["inner"]},{"Key":"the inner","Fragments":["match:","function","function,"]},{"Key":" 0","Fragments":["=\u003e","=\u003e","=\u003e"]},{"Key":"0 =\u003e","Fragments":["match","true,","return"]},{"Key":"=\u003e match","Fragments":["year"]},{"Key":"match year","Fragments":["%"]},{"Key":"_ =\u003e","Fragments":["false","false,","false,","string.push(c),","return"]},{"Key":" as","Fragments":["an"]},{"Key":" }","Fragments":["else","else","else","else","else"]},{"Key":" which","Fragments":["is"]},{"Key":"is equivalent","Fragments":["to","to","to:","to"]},{"Key":"equivalent to","Fragments":["just:","solving","0,","`sort_by(|a,b|"]},{"Key":" Like","Fragments":["this,"]},{"Key":"Like this,","Fragments":["you"]},{"Key":"this, you","Fragments":["can"]},{"Key":"simplify that","Fragments":["whole"]},{"Key":"that whole","Fragments":["conditional"]},{"Key":"whole conditional","Fragments":["tree"]},{"Key":"conditional tree","Fragments":["to"]},{"Key":"tree to","Fragments":["a"]},{"Key":" Right.","Fragments":["Thx"]},{"Key":"Right. Thx","Fragments":["for"]},{"Key":"Thx for","Fragments":["the"]},{"Key":"Better not","Fragments":["to"]},{"Key":"not to","Fragments":["take","someone","use","have","double-count"]},{"Key":"to take","Fragments":["the","the","a","a","`\u0026str`s"]},{"Key":"take the","Fragments":["abs","same","absolute","old"]},{"Key":"the abs","Fragments":["value"]},{"Key":"abs value","Fragments":["of"]},{"Key":"of ```square","Fragments":["-"]},{"Key":"```square -","Fragments":["sum```"]},{"Key":"- sum```","Fragments":["in"]},{"Key":"sum``` in","Fragments":["line"]},{"Key":"line 25,","Fragments":["it's"]},{"Key":"25, it's","Fragments":["never"]},{"Key":"it's never","Fragments":["negative"]},{"Key":"never negative","Fragments":["anyway."]},{"Key":"need type","Fragments":["annotations"]},{"Key":"on lines","Fragments":["2","9","27","5","13","32"]},{"Key":"lines 2","Fragments":["and"]},{"Key":"2 and","Fragments":["12.","6?"]},{"Key":" These","Fragments":["functions","problems","calls"]},{"Key":"These functions","Fragments":["also"]},{"Key":"functions also","Fragments":["have"]},{"Key":"also have","Fragments":["a","some"]},{"Key":"sums and","Fragments":["sums"]},{"Key":" Straightforward","Fragments":["and"]},{"Key":"Straightforward and","Fragments":["simple,"]},{"Key":"and simple,","Fragments":["but"]},{"Key":"simple, but","Fragments":["kinda","not"]},{"Key":"but kinda","Fragments":["verbose"]},{"Key":"kinda verbose","Fragments":["solution."]},{"Key":"verbose solution.","Fragments":["Try"]},{"Key":"solution. Try","Fragments":["to"]},{"Key":"Try to","Fragments":["use"]},{"Key":"use logical","Fragments":["operators"]},{"Key":"logical operators","Fragments":["and/or"]},{"Key":"operators and/or","Fragments":["closure."]},{"Key":" P.S.","Fragments":["I"]},{"Key":"P.S. I","Fragments":["have"]},{"Key":"I have","Fragments":["almost","to","not","also","checked","nucleotide_counts_multipass","a","done","here","on","no","a","also","a","this","to","been","submitted","more","an","to","a","is","some","revised","a","done","to","only","the","`None`","no","ever"]},{"Key":"have almost","Fragments":["the"]},{"Key":"almost the","Fragments":["same"]},{"Key":"same code","Fragments":["on"]},{"Key":"code on","Fragments":["3rd"]},{"Key":"on 3rd","Fragments":["iteration."]},{"Key":" Notice","Fragments":["how","how","how","how","how","how","how","how","how","how","how","how","how","how","how","how"]},{"Key":"Notice how","Fragments":["we","we","we","with","we","we","we","we","we","we","we","we","we","we","we","we"]},{"Key":"how we","Fragments":["have","have","have","have","have","have","have","have","have","have","have","have","have","have","have","have"]},{"Key":"have `matches`","Fragments":["which"]},{"Key":"`matches` which","Fragments":["starts"]},{"Key":"which starts","Fragments":["out","out","out","out","out","out","out","out","out","out","out","out","out","out","out","out"]},{"Key":"starts out","Fragments":["as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as","as"]},{"Key":"out as","Fragments":["an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an","an"]},{"Key":"an empty","Fragments":["vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","vector,","spot","vector,","vector,"]},{"Key":"empty vector,","Fragments":["then","then","then","then","then","then","then","though","then","then","then","then","then","then","then","then","then","then"]},{"Key":"vector, then","Fragments":["you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you","you"]},{"Key":"over `in_word_list`","Fragments":["and"]},{"Key":"`in_word_list` and","Fragments":["possibly"]},{"Key":"and possibly","Fragments":["add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add"]},{"Key":"possibly add","Fragments":["elements","elements","elements","elements","elements","elements","elements","elements","elements","elements","elements","elements","elements","elements","elements","elements"]},{"Key":"add elements","Fragments":["to","to","to","to","into","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"elements to","Fragments":["`matches`","`anagram_list`","`anagrams_in_list`","`result`","`result`","`outputs`","`anagrams`","`words`","`results`","`anagrams`","`answers`","`result`","`ans`","`result`","`anagrams`","`outputs`"]},{"Key":"to `matches`","Fragments":["based"]},{"Key":"`matches` based","Fragments":["on"]},{"Key":"on a","Fragments":["check,","check,","mutable","static","check,","check,","hot","check,","check,","`mut`.","holiday.","`\u0026str`.","check,","check,","check,","check,","check,","pair","hashset.","check,","check,","check,","check,","check,","tuple"]},{"Key":"a check,","Fragments":["then","then","then","then","then","then","then","then","then","then","then","then","then","then","then","then"]},{"Key":"check, then","Fragments":["immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately","immediately"]},{"Key":"then immediately","Fragments":["return","return","return","return","return","return","return","return","return","return","return","return","return","return","return","return","return"]},{"Key":"immediately return","Fragments":["`matches`","`anagram_list`","`anagrams_in_list`","`result`","`output`.","`result`","`outputs`","`anagrams`","`words`","`results`","`anagrams`","`answers`","`result`","`ans`","`result`","`anagrams`","`outputs`"]},{"Key":"return `matches`","Fragments":["right"]},{"Key":"`matches` right","Fragments":["after"]},{"Key":"right after","Fragments":["doing","doing","doing","doing","doing","doing","doing","doing","doing","doing","doing","doing","doing","doing","doing","doing"]},{"Key":"after doing","Fragments":["that.","that.","that.","that.","that.","that.","that.","that.","that.","that.","that.","that.","that.","that.","that.","that."]},{"Key":"doing that.","Fragments":["In","In","In","In","In","In","In","In","In","In","In","In","In","In","In","In"]},{"Key":"that. In","Fragments":["many","many","many","many","many","many","many","many","many","many","many","many","many","many","many","many"]},{"Key":"In many","Fragments":["cases","cases","cases","cases","cases","cases","cases","cases","cases","cases","cases","cases","cases","cases","cases","cases"]},{"Key":"many cases","Fragments":["like","like","like","like","like","like","like","like","like","like","like","like","like","like","like","like"]},{"Key":"cases like","Fragments":["this","this","this","this","this","this","this","this","this","this","this","this","this","this","this","this"]},{"Key":"this I","Fragments":["would","would","would","would","would","would","would","would","would","would","would","just","just","would","would","would","would","would"]},{"Key":"would like","Fragments":["using","using","using","using","using","using","to","using","using","using","using","using","using","using","using","using","using"]},{"Key":"like using","Fragments":["one","one","one","one","one","one","`match`","one","one","one","one","one","one","one","one","one","one"]},{"Key":"using one","Fragments":["of","of","of","of","of","of","of","of","of","of","of","of","of","of","of","of"]},{"Key":"the [Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","Fragments":["methods.","methods.","methods,","methods,","methods,","methods,","methods.","methods.","methods.","methods.","methods.","methods.","methods.","methods.","methods.","methods."]},{"Key":"[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods.","Fragments":["This","This","This","This","This","This","This","This","This","This","This","This"]},{"Key":"methods. This","Fragments":["would","would","would","would","would","would","would","would","would","would","would","would"]},{"Key":"This would","Fragments":["avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid","avoid"]},{"Key":"would avoid","Fragments":["having","having","having","having","having","having","having","having","having","recasting","having","having","having","having","having"]},{"Key":"avoid having","Fragments":["to","to","to","to","to","to","to","to","to","to","to","to","to","to"]},{"Key":"having to","Fragments":["explicitly","explicitly","scan","explicitly","explicitly","annotate","explicitly","re=sort","explicitly","explicitly","explicitly","explicitly","explicitly","explicitly","do","explicitly","explicitly","explicitly","explicitly","explicitly"]},{"Key":"explicitly create","Fragments":["a","a","`outputs`.","a","a","a","a","a","a","a","a","a","a","a","a"]},{"Key":"create a","Fragments":["`matches`","String","`anagram_list`","simple","src","file","`result`","`outputs`","common","new","`anagrams`","`words`","`results`","`anagrams`","`answers`","`result`","`ans`","`result`","new","`anagrams`","leap","module","string","`outputs`"]},{"Key":"a `matches`","Fragments":["vector."]},{"Key":"`matches` vector.","Fragments":["You"]},{"Key":"vector. You","Fragments":["could","could","could","could"]},{"Key":"could look","Fragments":["into","into","into","into","into","into","into"]},{"Key":"look into","Fragments":["doing","doing","this?","this?","this?","doing","doing"]},{"Key":"into doing","Fragments":["that.","that","that","that"]},{"Key":"the comment.","Fragments":["New","Not"]},{"Key":"comment. New","Fragments":["to"]},{"Key":"New to","Fragments":["learning"]},{"Key":"to learning","Fragments":["Rust"]},{"Key":"learning Rust","Fragments":["and","recently","and"]},{"Key":"Rust and","Fragments":["how","haven't","I'm","how","how"]},{"Key":"and how","Fragments":["to","unicode","this","this"]},{"Key":"If the","Fragments":["first","capacity","sort_str","business","year","only"]},{"Key":"first lines","Fragments":["are"]},{"Key":"lines are","Fragments":["short"]},{"Key":"are short","Fragments":["for"]},{"Key":"short for","Fragments":["instance,"]},{"Key":"for instance,","Fragments":["it","can"]},{"Key":"instance, it","Fragments":["looks"]},{"Key":"looks like","Fragments":["the","you","a","[there","you"]},{"Key":"first worker","Fragments":["would"]},{"Key":"worker would","Fragments":["finish"]},{"Key":"would finish","Fragments":["early."]},{"Key":"is some","Fragments":["repeated","duplication"]},{"Key":"some repeated","Fragments":["code","code."]},{"Key":"repeated code","Fragments":["in","in"]},{"Key":"code in","Fragments":["`add_to_chain()`,","`try_piece()`.","this","this","a"]},{"Key":"in `add_to_chain()`,","Fragments":["I"]},{"Key":"`add_to_chain()`, I","Fragments":["already"]},{"Key":"I already","Fragments":["extracted"]},{"Key":"already extracted","Fragments":["some"]},{"Key":"extracted some","Fragments":["of"]},{"Key":"some of","Fragments":["the","the","this.","the","them","that","this","the","this","the","my","the"]},{"Key":"the repeated","Fragments":["code"]},{"Key":"in `try_piece()`.","Fragments":["I'm"]},{"Key":"`try_piece()`. I'm","Fragments":["not"]},{"Key":"not sure","Fragments":["what","if","how","how","which","why","why","what","if","I","if","I","if","I","they","if","it's","if","it","if","which","`vec![None;","if"]},{"Key":"what would","Fragments":["be","you"]},{"Key":"the best","Fragments":["way","name","solution?","version.","way"]},{"Key":"best way","Fragments":["to","I"]},{"Key":"avoid this","Fragments":["duplication."]},{"Key":"if chain.len()","Fragments":["=="]},{"Key":"chain.len() ==","Fragments":["0"]},{"Key":"0 ||","Fragments":["chain.last().unwrap().1","year"]},{"Key":"|| chain.last().unwrap().1","Fragments":["=="]},{"Key":"chain.last().unwrap().1 ==","Fragments":["piece.0","piece.0"]},{"Key":"== piece.0","Fragments":["{","{"]},{"Key":" match","Fragments":["try_piece(piece,","try_piece(piece,","c","it.next()","map.entry(key)","number","guards","(year"]},{"Key":"match try_piece(piece,","Fragments":["tried_pieces.clone(),","tried_pieces.clone(),"]},{"Key":"try_piece(piece, tried_pieces.clone(),","Fragments":["_pieces.clone(),","_pieces.clone()"]},{"Key":"tried_pieces.clone(), _pieces.clone(),","Fragments":["chain.clone())"]},{"Key":"_pieces.clone(), chain.clone())","Fragments":["{"]},{"Key":" Some(o)","Fragments":["=\u003e","=\u003e"]},{"Key":"Some(o) =\u003e","Fragments":["return","return"]},{"Key":"=\u003e return","Fragments":["Some(o),","Some(o),","r```","true,","false"]},{"Key":"// try","Fragments":["flipping"]},{"Key":"try flipping","Fragments":["the"]},{"Key":"flipping the","Fragments":["piece"]},{"Key":" piece","Fragments":["="]},{"Key":"piece =","Fragments":["(piece.1,"]},{"Key":"= (piece.1,","Fragments":["piece.0);"]},{"Key":"if chain.last().unwrap().1","Fragments":["=="]},{"Key":"tried_pieces.clone(), _pieces.clone()","Fragments":[","]},{"Key":"_pieces.clone() ,","Fragments":["chain.clone())"]},{"Key":", chain.clone())","Fragments":["{"]},{"Key":"be neat,","Fragments":["but"]},{"Key":"neat, but","Fragments":["it"]},{"Key":"it does","Fragments":["not.","not","indeed","say","so","now"]},{"Key":"The Into","Fragments":["trait"]},{"Key":"Into trait","Fragments":["looks"]},{"Key":"trait looks","Fragments":["quite"]},{"Key":"looks quite","Fragments":["handy.","heavy","handy."]},{"Key":"quite handy.","Fragments":["Does"]},{"Key":"handy. Does","Fragments":["it"]},{"Key":"Does it","Fragments":["let"]},{"Key":"it let","Fragments":["you"]},{"Key":"get away","Fragments":["without","without","with","with"]},{"Key":"away without","Fragments":["the","declaring"]},{"Key":"without the","Fragments":["collect","need","double","`mut`","brackets...","sorting,","use"]},{"Key":"the collect","Fragments":["on"]},{"Key":"collect on","Fragments":["line"]},{"Key":"Good idea","Fragments":["with"]},{"Key":"idea with","Fragments":["wrapping"]},{"Key":"with wrapping","Fragments":["around"]},{"Key":"wrapping around","Fragments":["100"]},{"Key":"around 100","Fragments":["on"]},{"Key":"100 on","Fragments":["line"]},{"Key":"line 12.","Fragments":["Although","Doesn't"]},{"Key":"12. Although","Fragments":["`bottles()`"]},{"Key":"Although `bottles()`","Fragments":["call"]},{"Key":"`bottles()` call","Fragments":["duplication"]},{"Key":"call duplication","Fragments":["on"]},{"Key":"duplication on","Fragments":["lines"]},{"Key":"lines 9","Fragments":["and"]},{"Key":"9 and","Fragments":["10"]},{"Key":"and 10","Fragments":["bothers"]},{"Key":"10 bothers","Fragments":["me"]},{"Key":"bothers me","Fragments":["a"]},{"Key":"me a","Fragments":["little.","while","chance"]},{"Key":" Yes,","Fragments":["it","the","I","there's","`to_lowercase()`","that","I","you","I"]},{"Key":"Yes, it","Fragments":["creates"]},{"Key":"it creates","Fragments":["overhead","a"]},{"Key":"creates overhead","Fragments":["to"]},{"Key":"to call","Fragments":["`bottles(n)`","them","to_string","to_string","on"]},{"Key":"call `bottles(n)`","Fragments":["twice."]},{"Key":"`bottles(n)` twice.","Fragments":["There"]},{"Key":"twice. There","Fragments":["are"]},{"Key":"of other","Fragments":["things","cleanup."]},{"Key":"other things","Fragments":["to"]},{"Key":"to optimize:","Fragments":["`bottles(n).to_lowercase()`"]},{"Key":"optimize: `bottles(n).to_lowercase()`","Fragments":["does"]},{"Key":"`bottles(n).to_lowercase()` does","Fragments":["not"]},{"Key":"not make","Fragments":["sense."]},{"Key":"make sense.","Fragments":["Why"]},{"Key":"sense. Why","Fragments":["create"]},{"Key":"Why create","Fragments":["a"]},{"Key":"a String","Fragments":["of"]},{"Key":"String of","Fragments":["the"]},{"Key":"the wrong","Fragments":["case","way","name,"]},{"Key":"wrong case","Fragments":["just"]},{"Key":"case just","Fragments":["to"]},{"Key":"just to","Fragments":["convert","use","keep","change","make","figure","see","iterate","list"]},{"Key":"to convert","Fragments":["it","the","a","back","from","it"]},{"Key":"convert it","Fragments":["to","to","to"]},{"Key":"it to","Fragments":["lowercase?","be","compile.","another","achieve","take.","me.","String.","a","become","a","work.","compile","compile","use","make","`allergies()`","take","compile","fix"]},{"Key":"to lowercase?","Fragments":["The"]},{"Key":"lowercase? The","Fragments":["result"]},{"Key":"The result","Fragments":["of"]},{"Key":"of line","Fragments":["12"]},{"Key":"line 12","Fragments":["could"]},{"Key":"12 could","Fragments":["be"]},{"Key":"be reused","Fragments":["in"]},{"Key":"reused in","Fragments":["the"]},{"Key":"next iteration,","Fragments":["if"]},{"Key":"iteration, if","Fragments":["we"]},{"Key":"if we","Fragments":["sing","pass","didn't"]},{"Key":"we sing","Fragments":["more"]},{"Key":"sing more","Fragments":["than"]},{"Key":"more than","Fragments":["one","any","I","I","once.","3","half","1","one","one"]},{"Key":"than one","Fragments":["verse.","branch:","byte."]},{"Key":"one verse.","Fragments":["Better"]},{"Key":"verse. Better","Fragments":["yet,"]},{"Key":"Better yet,","Fragments":["we"]},{"Key":"yet, we","Fragments":["could"]},{"Key":"we could","Fragments":["just"]},{"Key":"could just","Fragments":["hard-code","use","be","use","return","remove","be","directly","use","return","let"]},{"Key":"just hard-code","Fragments":["all"]},{"Key":"hard-code all","Fragments":["the"]},{"Key":"the lines,","Fragments":["removing"]},{"Key":"lines, removing","Fragments":["any"]},{"Key":"removing any","Fragments":["necessity"]},{"Key":"any necessity","Fragments":["for"]},{"Key":"necessity for","Fragments":["String-creation..."]},{"Key":" That's","Fragments":["the","quite","helpful","my","wonderful","not"]},{"Key":"That's the","Fragments":["kind"]},{"Key":"the kind","Fragments":["of","I"]},{"Key":"of slippery","Fragments":["slope"]},{"Key":"slippery slope","Fragments":["I"]},{"Key":"slope I","Fragments":["slide"]},{"Key":"I slide","Fragments":["down"]},{"Key":"slide down","Fragments":["when"]},{"Key":"down when","Fragments":["I"]},{"Key":"when I","Fragments":["start","moved","was","code","switched","had","have","think","don't","could"]},{"Key":"start to","Fragments":["optimize."]},{"Key":"to optimize.","Fragments":["So"]},{"Key":"optimize. So","Fragments":["I"]},{"Key":"I usually","Fragments":["focus","try","try"]},{"Key":"usually focus","Fragments":["on"]},{"Key":"focus on","Fragments":["correctness,"]},{"Key":"on correctness,","Fragments":["readability,"]},{"Key":"correctness, readability,","Fragments":["etc."]},{"Key":"readability, etc.","Fragments":["instead."]},{"Key":" can","Fragments":["the"]},{"Key":"can the","Fragments":["`loop`"]},{"Key":"the `loop`","Fragments":["be"]},{"Key":"`loop` be","Fragments":["done"]},{"Key":"done with","Fragments":["an","the","iterators,"]},{"Key":"It's relatively","Fragments":["simple"]},{"Key":"relatively simple","Fragments":["to"]},{"Key":"simple to","Fragments":["get","use,"]},{"Key":"a performance","Fragments":["boost"]},{"Key":"performance boost","Fragments":["by"]},{"Key":"boost by","Fragments":["maintaining"]},{"Key":"by maintaining","Fragments":["the"]},{"Key":"maintaining the","Fragments":["vector"]},{"Key":"the vector","Fragments":["as","does"]},{"Key":"vector as","Fragments":["sorted"]},{"Key":"as sorted","Fragments":["(the","`Vec`,"]},{"Key":"sorted (the","Fragments":["tests"]},{"Key":"(the tests","Fragments":["allow"]},{"Key":"tests allow","Fragments":["for"]},{"Key":"allow for","Fragments":["an","a"]},{"Key":"an Ord","Fragments":["constraint)."]},{"Key":"Ord constraint).","Fragments":["Vec"]},{"Key":"constraint). Vec","Fragments":["has"]},{"Key":"Vec has","Fragments":["a"]},{"Key":"a binary","Fragments":["search"]},{"Key":"binary search","Fragments":["method"]},{"Key":"search method","Fragments":["on"]},{"Key":"method on","Fragments":["it."]},{"Key":"can probably","Fragments":["leave"]},{"Key":"probably leave","Fragments":["out"]},{"Key":"leave out","Fragments":["the","the","that"]},{"Key":"out the","Fragments":["type","test","shorthand","concept","actual","[or_insert](https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.or_insert)","\"if\""]},{"Key":"type annotation","Fragments":["on","to","on","on","on"]},{"Key":"Nice idea","Fragments":["about"]},{"Key":"idea about","Fragments":["implementing"]},{"Key":"about implementing","Fragments":["`From`"]},{"Key":"implementing `From`","Fragments":["on"]},{"Key":"`From` on","Fragments":["structs."]},{"Key":"Pretty nice","Fragments":["and"]},{"Key":"nice and","Fragments":["clean","concise."]},{"Key":"and clean","Fragments":["functional"]},{"Key":"clean functional","Fragments":["solution."]},{"Key":" PS.","Fragments":["If","There","I"]},{"Key":"PS. If","Fragments":["you"]},{"Key":"you run","Fragments":["your","into"]},{"Key":"run your","Fragments":["program","code"]},{"Key":"your program","Fragments":["on"]},{"Key":"program on","Fragments":["Project"]},{"Key":"on Project","Fragments":["Euler","Euler"]},{"Key":"Project Euler","Fragments":["exercise","if","where"]},{"Key":"Euler exercise","Fragments":["6,"]},{"Key":"exercise 6,","Fragments":["you"]},{"Key":"6, you","Fragments":["will"]},{"Key":"you will","Fragments":["get"]},{"Key":"will get","Fragments":["a","there"]},{"Key":"a nice","Fragments":["overview","solution","understanding"]},{"Key":"nice overview","Fragments":["explaining"]},{"Key":"overview explaining","Fragments":["how"]},{"Key":"explaining how","Fragments":["to"]},{"Key":"to made","Fragments":["this"]},{"Key":"made this","Fragments":["calculations","hell","version"]},{"Key":"this calculations","Fragments":["much"]},{"Key":"calculations much","Fragments":["faster."]},{"Key":"I'm having","Fragments":["the","a","a"]},{"Key":"having the","Fragments":["same"]},{"Key":"same problem,","Fragments":["but"]},{"Key":"problem, but","Fragments":["it"]},{"Key":"like you","Fragments":["managed","could","send,","did","can"]},{"Key":"you managed","Fragments":["to"]},{"Key":"managed to","Fragments":["get"]},{"Key":"nice solution","Fragments":["as"]},{"Key":"solution as","Fragments":["well."]},{"Key":"as well.","Fragments":["Why","The","Since","Try","Is"]},{"Key":"well. Why","Fragments":["did"]},{"Key":"Why did","Fragments":["you","you"]},{"Key":"the `match`","Fragments":["on","statement"]},{"Key":"`match` on","Fragments":["line"]},{"Key":"line 12,","Fragments":["though?"]},{"Key":"12, though?","Fragments":["I'd"]},{"Key":"though? I'd","Fragments":["suggest"]},{"Key":"I'd suggest","Fragments":["using","using"]},{"Key":"let index","Fragments":["="]},{"Key":"index =","Fragments":["...;"]},{"Key":"\u0026 1","Fragments":["\u003c\u003c"]},{"Key":"1 \u003c\u003c","Fragments":["index"]},{"Key":"\u003c\u003c index","Fragments":["!="]},{"Key":"index !=","Fragments":["0"]},{"Key":"to confess","Fragments":["that"]},{"Key":"confess that","Fragments":["I"]},{"Key":"I needed","Fragments":["a"]},{"Key":"needed a","Fragments":["lot"]},{"Key":"of help","Fragments":["in"]},{"Key":"help in","Fragments":["the"]},{"Key":"the form","Fragments":["of"]},{"Key":"form of","Fragments":["looking","`vec`"]},{"Key":"of looking","Fragments":["at"]},{"Key":"looking at","Fragments":["Rust's","other","the","the","how"]},{"Key":"at Rust's","Fragments":["API"]},{"Key":"Rust's API","Fragments":["docs"]},{"Key":"API docs","Fragments":["and"]},{"Key":"docs and","Fragments":["Stack"]},{"Key":"and Stack","Fragments":["Overflow"]},{"Key":"Stack Overflow","Fragments":["along",":"]},{"Key":"Overflow along","Fragments":["with"]},{"Key":"along with","Fragments":["quick"]},{"Key":"with quick","Fragments":["glances"]},{"Key":"quick glances","Fragments":["at"]},{"Key":"glances at","Fragments":["the"]},{"Key":"the [example","Fragments":["solution"]},{"Key":"[example solution","Fragments":["to"]},{"Key":"solution to","Fragments":["this","[this](https://projecteuler.net/problem=6)","this","work","be","common"]},{"Key":"to this","Fragments":["problem](https://github.com/exercism/xrust/blob/master/allergies/example.rs)","problem,","question,","solution"]},{"Key":"this problem](https://github.com/exercism/xrust/blob/master/allergies/example.rs)","Fragments":["to"]},{"Key":"problem](https://github.com/exercism/xrust/blob/master/allergies/example.rs) to","Fragments":["complete"]},{"Key":"to complete","Fragments":["this"]},{"Key":"complete this","Fragments":["exercise."]},{"Key":"For some","Fragments":["reason","reason"]},{"Key":"some reason","Fragments":["I'm","I"]},{"Key":"reason I'm","Fragments":["having"]},{"Key":"having a","Fragments":["really","more","hard","look","look"]},{"Key":"a really","Fragments":["difficult","clear","hard"]},{"Key":"really difficult","Fragments":["time"]},{"Key":"difficult time","Fragments":["grokking"]},{"Key":"time grokking","Fragments":["Rust."]},{"Key":"grokking Rust.","Fragments":["I'm"]},{"Key":"Rust. I'm","Fragments":["not"]},{"Key":"just because","Fragments":["I've","just"]},{"Key":"because I've","Fragments":["only"]},{"Key":"I've only","Fragments":["started"]},{"Key":"only started","Fragments":["learning"]},{"Key":"started learning","Fragments":["Rust","Rust"]},{"Key":"Rust recently","Fragments":["or"]},{"Key":"recently or","Fragments":["if"]},{"Key":"or if","Fragments":["there's","they"]},{"Key":"if there's","Fragments":["a","only","an"]},{"Key":"there's a","Fragments":["significant","work-around","bug","way"]},{"Key":"a significant","Fragments":["cognitive"]},{"Key":"significant cognitive","Fragments":["complexity"]},{"Key":"cognitive complexity","Fragments":["inherent"]},{"Key":"complexity inherent","Fragments":["in"]},{"Key":"inherent in","Fragments":["the"]},{"Key":"language that","Fragments":["just"]},{"Key":"just isn't","Fragments":["there"]},{"Key":"isn't there","Fragments":["in"]},{"Key":"there in","Fragments":["other"]},{"Key":"in other","Fragments":["languages,","contexts","languages."]},{"Key":"other languages,","Fragments":["although","probably"]},{"Key":"languages, although","Fragments":["it"]},{"Key":"although it","Fragments":["feels"]},{"Key":"it feels","Fragments":["like","like","to"]},{"Key":"feels like","Fragments":["the","there","overkill"]},{"Key":"the latter","Fragments":["in","should"]},{"Key":"latter in","Fragments":["some"]},{"Key":"The example","Fragments":["solutions"]},{"Key":"example solutions","Fragments":["are"]},{"Key":"solutions are","Fragments":["meant"]},{"Key":"are meant","Fragments":["to"]},{"Key":"meant to","Fragments":["prove","be","be","be"]},{"Key":"to prove","Fragments":["that"]},{"Key":"prove that","Fragments":["a"]},{"Key":"is possible","Fragments":["and","to","to","to"]},{"Key":"possible and","Fragments":["not"]},{"Key":"and not","Fragments":["too"]},{"Key":"not too","Fragments":["hard,"]},{"Key":"too hard,","Fragments":["rather"]},{"Key":"hard, rather","Fragments":["than"]},{"Key":"than being","Fragments":["performant."]},{"Key":" How","Fragments":["would","about","do","does","does"]},{"Key":"How would","Fragments":["you"]},{"Key":"would you","Fragments":["optimize","think"]},{"Key":"you optimize","Fragments":["it?"]},{"Key":"This has","Fragments":["no","the","the"]},{"Key":"has no","Fragments":["way"]},{"Key":"no way","Fragments":["to","of","to","of"]},{"Key":"to guarantee","Fragments":["that"]},{"Key":"guarantee that","Fragments":["the","the"]},{"Key":"the robots","Fragments":["will"]},{"Key":"robots will","Fragments":["have"]},{"Key":"different names.","Fragments":["I'm"]},{"Key":"names. I'm","Fragments":["not"]},{"Key":"sure how","Fragments":["I","the"]},{"Key":"how I","Fragments":["would","mixed","started","implemented"]},{"Key":"would do","Fragments":["that","both","1,"]},{"Key":"that at","Fragments":["the","the"]},{"Key":"I've not","Fragments":["seen","yet"]},{"Key":"not seen","Fragments":["any"]},{"Key":"seen any","Fragments":["other"]},{"Key":"any other","Fragments":["solution"]},{"Key":"other solution","Fragments":["which","will"]},{"Key":"solution which","Fragments":["guarantees"]},{"Key":"which guarantees","Fragments":["distinct"]},{"Key":"guarantees distinct","Fragments":["random"]},{"Key":"distinct random","Fragments":["names."]},{"Key":"random names.","Fragments":["It"]},{"Key":"names. It","Fragments":["may"]},{"Key":"It may","Fragments":["be"]},{"Key":"may be","Fragments":["hard","able","allowed","superfluous,","clearer","what"]},{"Key":"be hard","Fragments":["as","to"]},{"Key":"hard as","Fragments":["Rust","the"]},{"Key":"as Rust","Fragments":["doesn't"]},{"Key":"Rust doesn't","Fragments":["let","require"]},{"Key":"doesn't let","Fragments":["you"]},{"Key":"you easily","Fragments":["have"]},{"Key":"easily have","Fragments":["mutable"]},{"Key":"have mutable","Fragments":["global"]},{"Key":"mutable global","Fragments":["state,"]},{"Key":"global state,","Fragments":["and"]},{"Key":"state, and","Fragments":["there"]},{"Key":"and there","Fragments":["is","are","you"]},{"Key":"no space","Fragments":["in"]},{"Key":"space in","Fragments":["the"]},{"Key":"the API","Fragments":["for"]},{"Key":"API for","Fragments":["a"]},{"Key":"a name","Fragments":["dictionary.","but","generator."]},{"Key":"could also","Fragments":["use","close","use","be","close","move","use","use","```filter```"]},{"Key":"use ```gen_range```","Fragments":["to"]},{"Key":"```gen_range``` to","Fragments":["do"]},{"Key":"the random","Fragments":["char","character."]},{"Key":"random char","Fragments":["generation,"]},{"Key":"char generation,","Fragments":["it's"]},{"Key":"generation, it's","Fragments":["a"]},{"Key":"it's a","Fragments":["touch","good","matter","bit","huge","neat","trade"]},{"Key":"a touch","Fragments":["nicer."]},{"Key":"touch nicer.","Fragments":["You"]},{"Key":"nicer. You","Fragments":["also"]},{"Key":"You also","Fragments":["have"]},{"Key":"have some","Fragments":["repeated","time"]},{"Key":" Hex","Fragments":["value"]},{"Key":"Hex value","Fragments":["could"]},{"Key":"value could","Fragments":["be"]},{"Key":"be made","Fragments":["shorter","to"]},{"Key":"made shorter","Fragments":["and"]},{"Key":"shorter and","Fragments":["probably","IMO"]},{"Key":"and probably","Fragments":["faster"]},{"Key":"probably faster","Fragments":["if"]},{"Key":"faster if","Fragments":["it"]},{"Key":"if it","Fragments":["used","is","will","said","wasn't","would","exists","does","can","wasn't,","works.","were"]},{"Key":"it used","Fragments":["arithmetic"]},{"Key":"used arithmetic","Fragments":["to"]},{"Key":"arithmetic to","Fragments":["calculate"]},{"Key":"to calculate","Fragments":["the"]},{"Key":"calculate the","Fragments":["digit","4","concept,"]},{"Key":"the digit","Fragments":["value.","generation"]},{"Key":"I saw","Fragments":["your","your","because"]},{"Key":"saw your","Fragments":["submission","solution"]},{"Key":"your submission","Fragments":["and"]},{"Key":"submission and","Fragments":["find","cleaned"]},{"Key":"and find","Fragments":["the"]},{"Key":"find the","Fragments":["arithmetic","documentation,","code.","named"]},{"Key":"the arithmetic","Fragments":["much","would"]},{"Key":"arithmetic much","Fragments":["less"]},{"Key":"much less","Fragments":["readable"]},{"Key":"than the","Fragments":["explicit","first","2","clone","previous","one-liner","`sum_of_squares`,","kind","pattern","compile","array","actual"]},{"Key":"the explicit","Fragments":["match","call","match","return."]},{"Key":"explicit match","Fragments":["statement","in"]},{"Key":"match statement","Fragments":["over","can"]},{"Key":"statement over","Fragments":["the"]},{"Key":"over the","Fragments":["alphabet","values","string","letters","strings.","iterator","natural","pairs","string","characters.","cells","existing"]},{"Key":"the alphabet","Fragments":["of"]},{"Key":"alphabet of","Fragments":["hex"]},{"Key":"of hex","Fragments":["characters."]},{"Key":"hex characters.","Fragments":["I'm"]},{"Key":"characters. I'm","Fragments":["also"]},{"Key":"I'm also","Fragments":["not","sorting"]},{"Key":"also not","Fragments":["convinced"]},{"Key":"convinced that","Fragments":["it"]},{"Key":"that it","Fragments":["is","does","does","might","can","could","is","will","could","would","still"]},{"Key":"is faster","Fragments":["without"]},{"Key":"faster without","Fragments":["seeing"]},{"Key":"without seeing","Fragments":["some"]},{"Key":"seeing some","Fragments":["numbers."]},{"Key":"some numbers.","Fragments":["It"]},{"Key":"numbers. It","Fragments":["would"]},{"Key":"be interesting","Fragments":["to","in"]},{"Key":"good related","Fragments":["discussion"]},{"Key":"related discussion","Fragments":["going"]},{"Key":"discussion going","Fragments":["on"]},{"Key":"going on","Fragments":["here","in","inside","to"]},{"Key":"on here","Fragments":["https://www.reddit.com/r/rust/comments/3l3bnn/eliminating_branches_in_rust_for_fun_but_not_much/","use"]},{"Key":"here https://www.reddit.com/r/rust/comments/3l3bnn/eliminating_branches_in_rust_for_fun_but_not_much/","Fragments":["about"]},{"Key":"https://www.reddit.com/r/rust/comments/3l3bnn/eliminating_branches_in_rust_for_fun_but_not_much/ about","Fragments":["attempts"]},{"Key":"about attempts","Fragments":["to"]},{"Key":"attempts to","Fragments":["optimize","congregate,"]},{"Key":"to optimize","Fragments":["an","that"]},{"Key":"optimize an","Fragments":["http"]},{"Key":"an http","Fragments":["request"]},{"Key":"http request","Fragments":["parser."]},{"Key":"your parameter","Fragments":["names"]},{"Key":"parameter names","Fragments":["to"]},{"Key":"names to","Fragments":["sing","the","specify"]},{"Key":"to sing","Fragments":["are"]},{"Key":"sing are","Fragments":["the"]},{"Key":"wrong way","Fragments":["around,"]},{"Key":"way around,","Fragments":["end"]},{"Key":"around, end","Fragments":["is"]},{"Key":"end is","Fragments":["the"]},{"Key":"The lifetime","Fragments":["annotation"]},{"Key":"line 8","Fragments":["isn't","-"]},{"Key":"8 isn't","Fragments":["used,"]},{"Key":"isn't used,","Fragments":["so"]},{"Key":"used, so","Fragments":["you"]},{"Key":"can delete","Fragments":["it."]},{"Key":"probably get","Fragments":["a"]},{"Key":"bit less","Fragments":["duplication"]},{"Key":"less duplication","Fragments":["at"]},{"Key":"duplication at","Fragments":["the"]},{"Key":"the cost","Fragments":["of","of"]},{"Key":"cost of","Fragments":["slightly","hashing"]},{"Key":"of slightly","Fragments":["more"]},{"Key":"slightly more","Fragments":["complicated","complex"]},{"Key":"more complicated","Fragments":["string","than"]},{"Key":"complicated string","Fragments":["generation"]},{"Key":"string generation","Fragments":["code,"]},{"Key":"generation code,","Fragments":["but"]},{"Key":"code, but","Fragments":["this"]},{"Key":"this seems","Fragments":["a","to"]},{"Key":"a reasonable","Fragments":["balance."]},{"Key":"an `anagram_list`","Fragments":["which"]},{"Key":"`anagram_list` which","Fragments":["starts"]},{"Key":"over `words`","Fragments":["and","and"]},{"Key":"`words` and","Fragments":["possibly","possibly"]},{"Key":"to `anagram_list`","Fragments":["based"]},{"Key":"`anagram_list` based","Fragments":["on"]},{"Key":"return `anagram_list`","Fragments":["right"]},{"Key":"`anagram_list` right","Fragments":["after"]},{"Key":"a `anagram_list`","Fragments":["vector."]},{"Key":"`anagram_list` vector.","Fragments":["You"]},{"Key":" Clear","Fragments":["and"]},{"Key":"Clear and","Fragments":["readable."]},{"Key":"and readable.","Fragments":["Nice"]},{"Key":"readable. Nice","Fragments":["solution."]},{"Key":" One","Fragments":["point:","question,","of","thing","tiny"]},{"Key":"One point:","Fragments":["there"]},{"Key":"point: there","Fragments":["are"]},{"Key":"are formulas","Fragments":["for"]},{"Key":"formulas for","Fragments":["calculating"]},{"Key":"for calculating","Fragments":["sum","sum"]},{"Key":"calculating sum","Fragments":["of","of","of"]},{"Key":"of `n`","Fragments":["natural","natural"]},{"Key":"`n` natural","Fragments":["numbers","numbers."]},{"Key":"natural numbers","Fragments":["and"]},{"Key":"numbers and","Fragments":["also"]},{"Key":"also for","Fragments":["calculating"]},{"Key":"squares of","Fragments":["`n`"]},{"Key":"natural numbers.","Fragments":["With","You"]},{"Key":"numbers. With","Fragments":["this"]},{"Key":"With this","Fragments":["formulas,"]},{"Key":"this formulas,","Fragments":["time"]},{"Key":"formulas, time","Fragments":["to"]},{"Key":"to run","Fragments":["functions","the"]},{"Key":"run functions","Fragments":["`sum_of_squares`"]},{"Key":"functions `sum_of_squares`","Fragments":["and"]},{"Key":"`sum_of_squares` and","Fragments":["`square_of_sum`","`square_of_sum`."]},{"Key":"and `square_of_sum`","Fragments":["will"]},{"Key":"`square_of_sum` will","Fragments":["be"]},{"Key":"can read","Fragments":["about","this"]},{"Key":"read about","Fragments":["it"]},{"Key":"about it","Fragments":["on"]},{"Key":"it on","Fragments":["Project","the","the","my"]},{"Key":"Euler if","Fragments":["you"]},{"Key":"you submit","Fragments":["your"]},{"Key":"submit your","Fragments":["solution"]},{"Key":"to [this](https://projecteuler.net/problem=6)","Fragments":["problem."]},{"Key":"see any","Fragments":["point","benefit,"]},{"Key":"any point","Fragments":["in"]},{"Key":"point in","Fragments":["the","having"]},{"Key":"the is","Fragments":["anagram","anagram"]},{"Key":"is anagram","Fragments":["function.","code"]},{"Key":" to","Fragments":["string","just"]},{"Key":"to string","Fragments":["is","on"]},{"Key":"string is","Fragments":["called"]},{"Key":"is called","Fragments":["on"]},{"Key":"called on","Fragments":["lowercase_word"]},{"Key":"on lowercase_word","Fragments":["repeatedly"]},{"Key":"lowercase_word repeatedly","Fragments":["at"]},{"Key":"repeatedly at","Fragments":["line"]},{"Key":"at line","Fragments":["11"]},{"Key":"11 which","Fragments":["is"]},{"Key":"small amount","Fragments":["of"]},{"Key":"amount of","Fragments":["unnecessary","trouble"]},{"Key":"of unnecessary","Fragments":["work."]},{"Key":"I'm really","Fragments":["glad","liking"]},{"Key":"really glad","Fragments":["you"]},{"Key":"glad you","Fragments":["pointed"]},{"Key":"you pointed","Fragments":["that"]},{"Key":"pointed that","Fragments":["out."]},{"Key":"that out.","Fragments":["Definitely"]},{"Key":"out. Definitely","Fragments":["unnecessary"]},{"Key":"Definitely unnecessary","Fragments":["at"]},{"Key":"unnecessary at","Fragments":["this"]},{"Key":"at this","Fragments":["point."]},{"Key":"this point.","Fragments":["I"]},{"Key":"point. I","Fragments":["think"]},{"Key":"the early","Fragments":["stages","return"]},{"Key":"early stages","Fragments":["it"]},{"Key":"stages it","Fragments":["was"]},{"Key":"was doing","Fragments":["a"]},{"Key":"doing a","Fragments":["lot","complicated"]},{"Key":"lot more,","Fragments":["but"]},{"Key":"more, but","Fragments":["when"]},{"Key":"but when","Fragments":["I"]},{"Key":"I moved","Fragments":["the","to"]},{"Key":"moved the","Fragments":["case"]},{"Key":"case and","Fragments":["duplicate","move","then"]},{"Key":"and duplicate","Fragments":["word"]},{"Key":"duplicate word","Fragments":["tests"]},{"Key":"word tests","Fragments":["up"]},{"Key":"tests up","Fragments":["it"]},{"Key":"up it","Fragments":["was"]},{"Key":"was responsible","Fragments":["for"]},{"Key":"responsible for","Fragments":["less"]},{"Key":"for less","Fragments":["and"]},{"Key":"less and","Fragments":["less."]},{"Key":" I'll","Fragments":["try","still"]},{"Key":"I'll try","Fragments":["and","to"]},{"Key":"try and","Fragments":["get"]},{"Key":"and get","Fragments":["rid","rid"]},{"Key":"get rid","Fragments":["of","of","of","of","of","of"]},{"Key":"rid of","Fragments":["the","'b","the","the","the","a","the","it."]},{"Key":"the n","Fragments":["to_strings","\u003e"]},{"Key":"n to_strings","Fragments":["by"]},{"Key":"to_strings by","Fragments":["creating"]},{"Key":"by creating","Fragments":["a"]},{"Key":"a separate","Fragments":["variable.","function","array?"]},{"Key":" Incorrect","Fragments":["submission."]},{"Key":"Incorrect submission.","Fragments":["Doesn't"]},{"Key":"submission. Doesn't","Fragments":["take"]},{"Key":"Doesn't take","Fragments":["into"]},{"Key":"take into","Fragments":["account"]},{"Key":"into account","Fragments":["rotations."]},{"Key":"this problem","Fragments":["is","was","better"]},{"Key":"to solving","Fragments":["the","that"]},{"Key":"solving the","Fragments":["Hamiltonian","Koenigsberg"]},{"Key":"the Hamiltonian","Fragments":["cycle"]},{"Key":"Hamiltonian cycle","Fragments":["problem"]},{"Key":"cycle problem","Fragments":["on"]},{"Key":"problem on","Fragments":["an"]},{"Key":"on an","Fragments":["undirected"]},{"Key":" Yup,","Fragments":["though","makes","makes"]},{"Key":"Yup, though","Fragments":["I"]},{"Key":"though I","Fragments":["think","don't","don't","think","don't"]},{"Key":"more similar","Fragments":["to"]},{"Key":"similar to","Fragments":["Eulerian","rust-lang","avoid","many"]},{"Key":"to Eulerian","Fragments":["cycle"]},{"Key":"Eulerian cycle","Fragments":["than"]},{"Key":"cycle than","Fragments":["Hamiltonian"]},{"Key":"than Hamiltonian","Fragments":["(we"]},{"Key":"Hamiltonian (we","Fragments":["care"]},{"Key":"(we care","Fragments":["about"]},{"Key":"care about","Fragments":["edges"]},{"Key":"about edges","Fragments":["rather"]},{"Key":"edges rather","Fragments":["than"]},{"Key":"you drop","Fragments":["the"]},{"Key":"drop the","Fragments":["_","entire"]},{"Key":"the _","Fragments":["case","prefix"]},{"Key":"_ case","Fragments":["and"]},{"Key":"and move","Fragments":["the"]},{"Key":"move the","Fragments":["n","digit"]},{"Key":"n \u003e","Fragments":["2"]},{"Key":"\u003e 2","Fragments":["case"]},{"Key":"2 case","Fragments":["to"]},{"Key":"case to","Fragments":["the","cover"]},{"Key":"the bottom","Fragments":["-","where"]},{"Key":"bottom -","Fragments":["the"]},{"Key":"- the","Fragments":["compiler","[iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)"]},{"Key":"to figure","Fragments":["out","out","out","out","out"]},{"Key":"figure out","Fragments":["it's","how","how","how","where","what","how","what"]},{"Key":"out it's","Fragments":["exhaustive?"]},{"Key":"Lines 37,38:","Fragments":["I"]},{"Key":"37,38: I","Fragments":["think"]},{"Key":"can just","Fragments":["pass","use","use","leave","leave","test","omit"]},{"Key":"just pass","Fragments":["```\u0026self.strand```","the"]},{"Key":"pass ```\u0026self.strand```","Fragments":["along,"]},{"Key":"```\u0026self.strand``` along,","Fragments":["no"]},{"Key":"along, no","Fragments":["need"]},{"Key":"no need","Fragments":["for","for","to","to","for","for","for"]},{"Key":"explicit call","Fragments":["to"]},{"Key":"call to","Fragments":["borrow.","pow","`pow()`.","`take`?","lowercase"]},{"Key":"need two","Fragments":["calls"]},{"Key":"two calls","Fragments":["to"]},{"Key":"calls to","Fragments":["collect","`cloned()`","`to_string()`","uppercase"]},{"Key":"to collect","Fragments":["in","those"]},{"Key":"collect in","Fragments":["dna2rna?"]},{"Key":" Some","Fragments":["solutions"]},{"Key":"Some solutions","Fragments":["implement"]},{"Key":"solutions implement","Fragments":["as_ref"]},{"Key":"implement as_ref","Fragments":["with"]},{"Key":"as_ref with","Fragments":["the"]},{"Key":"the AsRef","Fragments":["trait,"]},{"Key":"AsRef trait,","Fragments":["which"]},{"Key":"trait, which","Fragments":["would","the"]},{"Key":"which would","Fragments":["help","take","be","be","be","be","be"]},{"Key":"help reusability","Fragments":["in"]},{"Key":"reusability in","Fragments":["a"]},{"Key":"a real","Fragments":["application."]},{"Key":" Small","Fragments":["nit,","change"]},{"Key":"Small nit,","Fragments":["but"]},{"Key":"nit, but","Fragments":["you","I"]},{"Key":"but you","Fragments":["may","spelt","are","can","still","remove"]},{"Key":"remove some","Fragments":["of","duplication"]},{"Key":"Nice solution!","Fragments":["I"]},{"Key":"solution! I","Fragments":["think"]},{"Key":"is as","Fragments":["Rust-y"]},{"Key":"as Rust-y","Fragments":["as"]},{"Key":"Rust-y as","Fragments":["possible."]},{"Key":" Nice!","Fragments":["The","Thanks"]},{"Key":"Nice! The","Fragments":["use"]},{"Key":"The use","Fragments":["of","of"]},{"Key":"of `entry`","Fragments":["and"]},{"Key":"`entry` and","Fragments":["`or_insert`"]},{"Key":"and `or_insert`","Fragments":["help"]},{"Key":"`or_insert` help","Fragments":["to"]},{"Key":"help to","Fragments":["make"]},{"Key":"code concise.","Fragments":["(My"]},{"Key":"concise. (My","Fragments":["solution"]},{"Key":"(My solution","Fragments":["matched"]},{"Key":"solution matched","Fragments":["on"]},{"Key":"matched on","Fragments":["the"]},{"Key":"the results","Fragments":["of","of","of"]},{"Key":"results of","Fragments":["`Map::get`","the","asking"]},{"Key":"of `Map::get`","Fragments":["which"]},{"Key":"`Map::get` which","Fragments":["is"]},{"Key":"don't mind","Fragments":["if"]},{"Key":"mind if","Fragments":["I"]},{"Key":"I borrow","Fragments":["some"]},{"Key":"borrow some","Fragments":["of"]},{"Key":"of this.","Fragments":[":-)"]},{"Key":" fewer","Fragments":["lifetimes,"]},{"Key":"fewer lifetimes,","Fragments":["and"]},{"Key":"lifetimes, and","Fragments":["actually","various"]},{"Key":"and actually","Fragments":["using","tries"]},{"Key":"actually using","Fragments":["`to_lowercase`"]},{"Key":"using `to_lowercase`","Fragments":["(which"]},{"Key":"`to_lowercase` (which","Fragments":["caused"]},{"Key":"(which caused","Fragments":["some"]},{"Key":"caused some","Fragments":["`\u0026str`"]},{"Key":"some `\u0026str`","Fragments":["to"]},{"Key":"to change","Fragments":["to","that,","the","it."]},{"Key":"change to","Fragments":["`String`)","make"]},{"Key":"get better","Fragments":["performance"]},{"Key":"better performance","Fragments":["by","wise"]},{"Key":"performance by","Fragments":["shifting","skipping"]},{"Key":"by shifting","Fragments":["an"]},{"Key":"shifting an","Fragments":["accumulator"]},{"Key":"an accumulator","Fragments":["and","/","in"]},{"Key":"accumulator and","Fragments":["multiplying"]},{"Key":"and multiplying","Fragments":["by"]},{"Key":"multiplying by","Fragments":["16"]},{"Key":"by 16","Fragments":["each","*","for"]},{"Key":"16 each","Fragments":["time."]},{"Key":"each time.","Fragments":["The"]},{"Key":"time. The","Fragments":["call"]},{"Key":"The call","Fragments":["to"]},{"Key":"to pow","Fragments":["is"]},{"Key":"pow is","Fragments":["likely"]},{"Key":"is likely","Fragments":["to"]},{"Key":"likely to","Fragments":["be","be","have","be","be"]},{"Key":" Didn't","Fragments":["know"]},{"Key":"Didn't know","Fragments":["about"]},{"Key":"the to","Fragments":["digit"]},{"Key":"to digit","Fragments":["on"]},{"Key":"digit on","Fragments":["char,"]},{"Key":"on char,","Fragments":["that"]},{"Key":"char, that","Fragments":["is"]},{"Key":"that is","Fragments":["quite","indeed","very","otherwise","the","a","allocate","a","being"]},{"Key":"is quite","Fragments":["handy.","slow.","nice."]},{"Key":" Functional,","Fragments":["letting"]},{"Key":"Functional, letting","Fragments":["`collect()`"]},{"Key":"letting `collect()`","Fragments":["figure"]},{"Key":"`collect()` figure","Fragments":["out"]},{"Key":"out how","Fragments":["to","to","much","to","to","to"]},{"Key":"to build","Fragments":["the","all","an"]},{"Key":"build the","Fragments":["output.","map","map","string"]},{"Key":"the output.","Fragments":["This"]},{"Key":"output. This","Fragments":["ended"]},{"Key":"This ended","Fragments":["up"]},{"Key":"ended up","Fragments":["more","doing","iterating"]},{"Key":"up more","Fragments":["complicated"]},{"Key":"complicated than","Fragments":["the"]},{"Key":"first attempt","Fragments":["because"]},{"Key":"attempt because","Fragments":["of"]},{"Key":"because of","Fragments":["the","the","the","the","experiences"]},{"Key":"the need","Fragments":["to","to","to","for","for","for"]},{"Key":"to eagerly","Fragments":["evaluate"]},{"Key":"eagerly evaluate","Fragments":["the"]},{"Key":"evaluate the","Fragments":["map."]},{"Key":"the join","Fragments":["function"]},{"Key":"join function","Fragments":["in"]},{"Key":"function in","Fragments":["sing","this","terms","the"]},{"Key":"in sing","Fragments":["which"]},{"Key":"sing which","Fragments":["will"]},{"Key":"will replace","Fragments":["much"]},{"Key":"replace much","Fragments":["of"]},{"Key":"much of","Fragments":["the"]},{"Key":"code says","Fragments":["the"]},{"Key":"says the","Fragments":["same"]},{"Key":"thing just","Fragments":["as"]},{"Key":"just as","Fragments":["clearly.","well","an","much","readable"]},{"Key":"Thanks @rachelle,","Fragments":["updated"]},{"Key":"@rachelle, updated","Fragments":["!"]},{"Key":"calling methods","Fragments":["like"]},{"Key":"methods like","Fragments":["```sort```"]},{"Key":"like ```sort```","Fragments":["on"]},{"Key":"```sort``` on","Fragments":["```search```"]},{"Key":"on ```search```","Fragments":["multiple"]},{"Key":"```search``` multiple","Fragments":["times"]},{"Key":"multiple times","Fragments":["(once"]},{"Key":"times (once","Fragments":["for"]},{"Key":"(once for","Fragments":["each"]},{"Key":"each candidate","Fragments":["word),"]},{"Key":"candidate word),","Fragments":["when"]},{"Key":"word), when","Fragments":["you"]},{"Key":"you only","Fragments":["need","need","determine","have"]},{"Key":"only need","Fragments":["to","unsigned","to","to","3"]},{"Key":"call them","Fragments":["once."]},{"Key":"Rust 1.2+","Fragments":["has"]},{"Key":"1.2+ has","Fragments":["```to_lowercase```"]},{"Key":"has ```to_lowercase```","Fragments":["directly","on"]},{"Key":"```to_lowercase``` directly","Fragments":["on"]},{"Key":"directly on","Fragments":["strings,","the","first","a","the"]},{"Key":"on strings,","Fragments":["so"]},{"Key":"strings, so","Fragments":["you"]},{"Key":"the ```LowerCase```","Fragments":["trait"]},{"Key":"```LowerCase``` trait","Fragments":["any"]},{"Key":"trait any","Fragments":["more."]},{"Key":" @kathleen","Fragments":["wow"]},{"Key":"@kathleen wow","Fragments":["I"]},{"Key":"wow I","Fragments":["didn't"]},{"Key":"didn't realize","Fragments":["I"]},{"Key":"realize I","Fragments":["was"]},{"Key":"was still","Fragments":["running"]},{"Key":"still running","Fragments":["1.1.0","1.1"]},{"Key":"running 1.1.0","Fragments":["locally."]},{"Key":"1.1.0 locally.","Fragments":["Thanks"]},{"Key":"locally. Thanks","Fragments":["!"]},{"Key":"is just","Fragments":["my","natural.","stubs,"]},{"Key":"just my","Fragments":["first"]},{"Key":"my first","Fragments":["passing","iteration)","HashMap","ever","thought"]},{"Key":"first passing","Fragments":["version."]},{"Key":"passing version.","Fragments":["I"]},{"Key":"version. I","Fragments":["really","think","just"]},{"Key":"really want","Fragments":["to"]},{"Key":"to turn","Fragments":["a"]},{"Key":"turn a","Fragments":["`range`"]},{"Key":"a `range`","Fragments":["into"]},{"Key":"`range` into","Fragments":["an"]},{"Key":"into an","Fragments":["iterator"]},{"Key":"an iterator","Fragments":["so","method","so","that"]},{"Key":"iterator so","Fragments":["I","it"]},{"Key":"use `map`","Fragments":["and"]},{"Key":"`map` and","Fragments":["`sum`"]},{"Key":" Googling","Fragments":["hasn't"]},{"Key":"Googling hasn't","Fragments":["given"]},{"Key":"hasn't given","Fragments":["me"]},{"Key":"given me","Fragments":["any"]},{"Key":"me any","Fragments":["love"]},{"Key":"any love","Fragments":["yet."]},{"Key":"A fold","Fragments":["is"]},{"Key":"fold is","Fragments":["can"]},{"Key":"is can","Fragments":["be"]},{"Key":"be used","Fragments":["for","to","by","here.","as"]},{"Key":"used for","Fragments":["summing"]},{"Key":"for summing","Fragments":["lists"]},{"Key":"summing lists","Fragments":["of"]},{"Key":" Alternatively,","Fragments":["you"]},{"Key":"Alternatively, you","Fragments":["can"]},{"Key":"of squares/sums","Fragments":["of"]},{"Key":"squares/sums of","Fragments":["consecutive"]},{"Key":"consecutive integers,","Fragments":["then"]},{"Key":"integers, then","Fragments":["you"]},{"Key":"sorting word","Fragments":["too","multiple"]},{"Key":"word too","Fragments":["many"]},{"Key":"Nice solution.","Fragments":["I","`fold`"]},{"Key":"solution. I","Fragments":["like","didn't","am"]},{"Key":"like having","Fragments":["sort_chars"]},{"Key":"having sort_chars","Fragments":["as"]},{"Key":"sort_chars as","Fragments":["a"]},{"Key":"separate function","Fragments":["and"]},{"Key":"function and","Fragments":["will","then"]},{"Key":"and will","Fragments":["improve"]},{"Key":"will improve","Fragments":["my"]},{"Key":"improve my","Fragments":["solution"]},{"Key":"my solution","Fragments":["accordingly.","just","or","is."]},{"Key":"can get","Fragments":["rid","your","the","away","away"]},{"Key":"of 'b","Fragments":["if"]},{"Key":"'b if","Fragments":["you"]},{"Key":"fn anagrams_for\u003c'a\u003e(word:","Fragments":["\u0026'a"]},{"Key":"anagrams_for\u003c'a\u003e(word: \u0026'a","Fragments":["str,"]},{"Key":"\u0026'a str,","Fragments":["candidates:"]},{"Key":"str, candidates:","Fragments":["\u0026[\u0026'a"]},{"Key":"candidates: \u0026[\u0026'a","Fragments":["str])"]},{"Key":"\u0026[\u0026'a str])","Fragments":["-\u003e"]},{"Key":"str]) -\u003e","Fragments":["Vec\u003c\u0026'a"]},{"Key":"-\u003e Vec\u003c\u0026'a","Fragments":["str\u003e"]},{"Key":"Vec\u003c\u0026'a str\u003e","Fragments":["..."]},{"Key":" Note:","Fragments":["you"]},{"Key":"Note: you","Fragments":["don't"]},{"Key":"need explicit","Fragments":["`return`","`return`."]},{"Key":"explicit `return`","Fragments":["in"]},{"Key":"`return` in","Fragments":["Rust."]},{"Key":"Is there","Fragments":["any","any","a","an","a","another","a"]},{"Key":"any better","Fragments":["way","than"]},{"Key":"better way","Fragments":["to","to","to","to","to"]},{"Key":"access the","Fragments":["value"]},{"Key":"the value","Fragments":["of","of","of","and","as","in","of","is"]},{"Key":"of `allergen`","Fragments":["here?"]},{"Key":"`allergen` here?","Fragments":["So"]},{"Key":"here? So","Fragments":["far"]},{"Key":"So far","Fragments":["my"]},{"Key":"far my","Fragments":["experience"]},{"Key":"my experience","Fragments":["with"]},{"Key":"experience with","Fragments":["Rust","this,"]},{"Key":"with Rust","Fragments":["has"]},{"Key":"Rust has","Fragments":["been","a","closures.","some","closures!"]},{"Key":"has been","Fragments":["that","a","replaced","made","added"]},{"Key":"been that","Fragments":["if"]},{"Key":"that if","Fragments":["something","`usize`"]},{"Key":"if something","Fragments":["feels"]},{"Key":"something feels","Fragments":["clunky,"]},{"Key":"feels clunky,","Fragments":["then"]},{"Key":"clunky, then","Fragments":["I'm"]},{"Key":"then I'm","Fragments":["doing"]},{"Key":"I'm doing","Fragments":["it","with"]},{"Key":"doing it","Fragments":["wrong,","once","this"]},{"Key":"it wrong,","Fragments":["but"]},{"Key":"wrong, but","Fragments":["I"]},{"Key":"I haven't","Fragments":["been","found","done","thought","seen","tried","found","made","thought"]},{"Key":"haven't been","Fragments":["able","written"]},{"Key":"been able","Fragments":["to","to","to"]},{"Key":"to improve","Fragments":["this.","this."]},{"Key":"is_allergic_to(\u0026self, allergen:","Fragments":["\u0026Allergen)"]},{"Key":"allergen: \u0026Allergen)","Fragments":["-\u003e"]},{"Key":"let Allergies(code)","Fragments":["="]},{"Key":"Allergies(code) =","Fragments":["*self;"]},{"Key":" `(*allergen","Fragments":["as"]},{"Key":"`(*allergen as","Fragments":["u8)`"]},{"Key":"as u8)`","Fragments":["should","(or"]},{"Key":"u8)` should","Fragments":["also"]},{"Key":"should also","Fragments":["work","work."]},{"Key":"also work","Fragments":["(instead"]},{"Key":"work (instead","Fragments":["of"]},{"Key":"(instead of","Fragments":["`(allergen.clone()"]},{"Key":"of `(allergen.clone()","Fragments":["as"]},{"Key":"`(allergen.clone() as","Fragments":["u8)`)."]},{"Key":"That doesn't","Fragments":["work"]},{"Key":"doesn't work","Fragments":["(\"cannot","yet."]},{"Key":"work (\"cannot","Fragments":["move"]},{"Key":"(\"cannot move","Fragments":["out"]},{"Key":"move out","Fragments":["of"]},{"Key":"out of","Fragments":["borrowed","the","stuff."]},{"Key":"of borrowed","Fragments":["content\")."]},{"Key":"borrowed content\").","Fragments":["I'll"]},{"Key":"content\"). I'll","Fragments":["be"]},{"Key":"I'll be","Fragments":["honest"]},{"Key":"be honest","Fragments":["though,"]},{"Key":"honest though,","Fragments":["I"]},{"Key":"though, I","Fragments":["don't","don't"]},{"Key":"don't understand","Fragments":["why","what","what","how","why"]},{"Key":"understand why","Fragments":["this","when","it"]},{"Key":"why this","Fragments":["constitutes"]},{"Key":"this constitutes","Fragments":["a"]},{"Key":"constitutes a","Fragments":["move."]},{"Key":"a move.","Fragments":["I"]},{"Key":"move. I","Fragments":["associate"]},{"Key":"I associate","Fragments":["moves"]},{"Key":"associate moves","Fragments":["with"]},{"Key":"moves with","Fragments":["binding"]},{"Key":"with binding","Fragments":["and"]},{"Key":"binding and","Fragments":["in","a"]},{"Key":"in this","Fragments":["case,","solution.","one.","case","case),","case","code","iteration","struct,","input:","module","situation.","version,","code","context.","case...),","solution.","iteration.","case.","iteration."]},{"Key":"this case,","Fragments":["we're"]},{"Key":"case, we're","Fragments":["just"]},{"Key":"we're just","Fragments":["accessing"]},{"Key":"just accessing","Fragments":["the"]},{"Key":"accessing the","Fragments":["value."]},{"Key":"Ah, there's","Fragments":["a"]},{"Key":"a work-around","Fragments":["though."]},{"Key":"work-around though.","Fragments":["Implementing"]},{"Key":"though. Implementing","Fragments":["`Copy`"]},{"Key":"Implementing `Copy`","Fragments":["for"]},{"Key":"`Copy` for","Fragments":["`Allergen`","`Allergen`,"]},{"Key":"for `Allergen`","Fragments":["makes","so"]},{"Key":"`Allergen` makes","Fragments":["dereferencing"]},{"Key":"makes dereferencing","Fragments":["a"]},{"Key":"dereferencing a","Fragments":["borrowed"]},{"Key":"a borrowed","Fragments":["reference"]},{"Key":"borrowed reference","Fragments":["possible."]},{"Key":"to practice","Fragments":["with"]},{"Key":"practice with","Fragments":["traits"]},{"Key":"with traits","Fragments":["and"]},{"Key":"traits and","Fragments":["iterators,"]},{"Key":"and iterators,","Fragments":["so"]},{"Key":"iterators, so","Fragments":["I"]},{"Key":"I stayed","Fragments":["away"]},{"Key":"stayed away","Fragments":["from"]},{"Key":"away from","Fragments":["`split()`","each","this"]},{"Key":"from `split()`","Fragments":["in"]},{"Key":"`split()` in","Fragments":["this"]},{"Key":"do better","Fragments":["performance"]},{"Key":"performance wise","Fragments":["in"]},{"Key":"wise in","Fragments":["```hex_digit```"]},{"Key":"in ```hex_digit```","Fragments":["rather"]},{"Key":"```hex_digit``` rather","Fragments":["than"]},{"Key":"than searching","Fragments":["through"]},{"Key":"searching through","Fragments":["the"]},{"Key":"through the","Fragments":["(admittedly","string","values","strings,","entire","string"]},{"Key":"the (admittedly","Fragments":["small)"]},{"Key":"(admittedly small)","Fragments":["array."]},{"Key":"In `anagrams_for`","Fragments":["I"]},{"Key":"`anagrams_for` I","Fragments":["used"]},{"Key":"used `.map(AsRef::as_ref)`","Fragments":["because"]},{"Key":"`.map(AsRef::as_ref)` because","Fragments":["I"]},{"Key":"didn't want","Fragments":["to","to","to","to"]},{"Key":"to allocate","Fragments":["more","`Vec\u003cchar\u003e`.","when"]},{"Key":"allocate more","Fragments":["memory"]},{"Key":"memory and","Fragments":["I'm"]},{"Key":"and I'm","Fragments":["not","having"]},{"Key":"how the","Fragments":["suggestion"]},{"Key":"the suggestion","Fragments":["of"]},{"Key":"suggestion of","Fragments":["using"]},{"Key":"using `cloned()`","Fragments":["would've","on"]},{"Key":"`cloned()` would've","Fragments":["played"]},{"Key":"would've played","Fragments":["out"]},{"Key":"played out","Fragments":["with"]},{"Key":"out with","Fragments":["`\u0026str`s.","self.0","the"]},{"Key":" Switched","Fragments":["to"]},{"Key":"Switched to","Fragments":["uppercasing"]},{"Key":"to uppercasing","Fragments":["to"]},{"Key":"uppercasing to","Fragments":["effectively"]},{"Key":"to effectively","Fragments":["backport"]},{"Key":"effectively backport","Fragments":["Rust"]},{"Key":"backport Rust","Fragments":["1.2's"]},{"Key":"Rust 1.2's","Fragments":["implementation."]},{"Key":"also sorting","Fragments":["by"]},{"Key":"sorting by","Fragments":["chars","bytes"]},{"Key":"by chars","Fragments":["instead"]},{"Key":"chars instead","Fragments":["of"]},{"Key":"of bytes","Fragments":["thanks"]},{"Key":"bytes thanks","Fragments":["to"]},{"Key":"thanks to","Fragments":["@clint's","the","HashMap"]},{"Key":"to @clint's","Fragments":["reminder"]},{"Key":"@clint's reminder","Fragments":["that"]},{"Key":"reminder that","Fragments":["UTF8"]},{"Key":"that UTF8","Fragments":["bytes"]},{"Key":"UTF8 bytes","Fragments":["aren't"]},{"Key":"bytes aren't","Fragments":["necessarily"]},{"Key":"aren't necessarily","Fragments":["in"]},{"Key":"necessarily in","Fragments":["order."]},{"Key":"in order.","Fragments":["Great"]},{"Key":"order. Great","Fragments":["catch!"]},{"Key":"not happy","Fragments":["with"]},{"Key":"happy with","Fragments":["using","the","and","this","the","this","this"]},{"Key":"with using","Fragments":["`Vec\u003cchar\u003e`s"]},{"Key":"using `Vec\u003cchar\u003e`s","Fragments":["for"]},{"Key":"`Vec\u003cchar\u003e`s for","Fragments":["`sb`"]},{"Key":"for `sb`","Fragments":["and"]},{"Key":"`sb` and","Fragments":["`tb`,"]},{"Key":"and `tb`,","Fragments":["I"]},{"Key":"`tb`, I","Fragments":["feel"]},{"Key":"I feel","Fragments":["like","it","it","a","like","the","like","the","as","like"]},{"Key":"like there","Fragments":["must","should","could"]},{"Key":"there must","Fragments":["be"]},{"Key":"must be","Fragments":["a"]},{"Key":"way I","Fragments":["could've","can"]},{"Key":"I could've","Fragments":["used"]},{"Key":"could've used","Fragments":["slices"]},{"Key":"used slices","Fragments":["or"]},{"Key":"slices or","Fragments":["basic"]},{"Key":"or basic","Fragments":["arrays"]},{"Key":"basic arrays","Fragments":["but"]},{"Key":"arrays but","Fragments":["I"]},{"Key":"couldn't figure","Fragments":["it"]},{"Key":"figure it","Fragments":["out."]},{"Key":"it out.","Fragments":["I","At"]},{"Key":"out. I","Fragments":["imagine"]},{"Key":"imagine Vectors","Fragments":["are"]},{"Key":"Vectors are","Fragments":["a"]},{"Key":"little slower","Fragments":["because"]},{"Key":"slower because","Fragments":["they"]},{"Key":"are heap","Fragments":["allocated?"]},{"Key":"You might","Fragments":["be","want"]},{"Key":"to skip","Fragments":["some","defining"]},{"Key":"skip some","Fragments":["of","unnecessary"]},{"Key":"the busy","Fragments":["work"]},{"Key":"busy work","Fragments":["relating"]},{"Key":"work relating","Fragments":["to"]},{"Key":"relating to","Fragments":["ascii"]},{"Key":"to ascii","Fragments":["and"]},{"Key":"ascii and","Fragments":["lowercase"]},{"Key":"and lowercase","Fragments":["if"]},{"Key":"lowercase if","Fragments":["you"]},{"Key":"the string","Fragments":["`.to_lowercase()`","1","would","in","against","4","4","once.","in"]},{"Key":"string `.to_lowercase()`","Fragments":["method"]},{"Key":"`.to_lowercase()` method","Fragments":["instead","you"]},{"Key":"method instead","Fragments":["of","of"]},{"Key":"of converting","Fragments":["each","the","non-alphanumeric","numbers"]},{"Key":"converting each","Fragments":["character","numeral"]},{"Key":"each character","Fragments":["individually.","element","on"]},{"Key":"That resulted","Fragments":["in"]},{"Key":"resulted in","Fragments":["an"]},{"Key":"in an","Fragments":["error:","`else`","`else`","`overwrite`"]},{"Key":"an error:","Fragments":["```error:"]},{"Key":"error: ```error:","Fragments":["use"]},{"Key":"```error: use","Fragments":["of"]},{"Key":"of unstable","Fragments":["library"]},{"Key":"unstable library","Fragments":["feature"]},{"Key":"library feature","Fragments":["'collections'```"]},{"Key":"moved to","Fragments":["the"]},{"Key":"had no","Fragments":["idea."]},{"Key":"no idea.","Fragments":["I"]},{"Key":"idea. I","Fragments":["have"]},{"Key":"have not","Fragments":["yet"]},{"Key":"not yet","Fragments":["tried","sussed"]},{"Key":"yet tried","Fragments":["out"]},{"Key":"tried out","Fragments":["any"]},{"Key":"out any","Fragments":["of"]},{"Key":"any of","Fragments":["the","the","this","the"]},{"Key":"the other","Fragments":["branches.","guys","day","gets","you","solutions:","exercises","solutions","hand,","one","though","solutions","operations,"]},{"Key":"other branches.","Fragments":["I"]},{"Key":"branches. I","Fragments":["probably"]},{"Key":"I probably","Fragments":["should,","would"]},{"Key":"probably should,","Fragments":["huh."]},{"Key":" Use","Fragments":["u64","u64","u64","u64","closure"]},{"Key":"Use u64","Fragments":["instead","instead","is","instead,"]},{"Key":"u64 instead","Fragments":["of","of"]},{"Key":"of i32,","Fragments":["you","no"]},{"Key":"i32, you","Fragments":["only"]},{"Key":"need unsigned","Fragments":["ints."]},{"Key":"lot more","Fragments":["code","code.","compiler"]},{"Key":"more code","Fragments":["in"]},{"Key":"this one.","Fragments":["I"]},{"Key":"one. I","Fragments":["export"]},{"Key":"I export","Fragments":["a"]},{"Key":"export a","Fragments":["trait"]},{"Key":"a trait","Fragments":["for"]},{"Key":"trait for","Fragments":["the","`RibonucleicAcid`"]},{"Key":"the hell","Fragments":["of"]},{"Key":"hell of","Fragments":["it,"]},{"Key":"of it,","Fragments":["and"]},{"Key":"it, and","Fragments":["I"]},{"Key":"a struct","Fragments":["called","like","with"]},{"Key":"struct called","Fragments":["AnagramDetector"]},{"Key":"called AnagramDetector","Fragments":["to"]},{"Key":"AnagramDetector to","Fragments":["store"]},{"Key":"to store","Fragments":["the"]},{"Key":"store the","Fragments":["ordered"]},{"Key":"the ordered","Fragments":["vec"]},{"Key":"ordered vec","Fragments":["I"]},{"Key":"vec I","Fragments":["use"]},{"Key":"to check","Fragments":["to","you","out","if","for","`unsorted_word","out","whether","corner"]},{"Key":"check to","Fragments":["see"]},{"Key":"see if","Fragments":["all","there","I'm","you","they","the","they"]},{"Key":"the letters","Fragments":["are","to"]},{"Key":"letters are","Fragments":["there","unchanged."]},{"Key":"there correctly.","Fragments":["`fn"]},{"Key":"correctly. `fn","Fragments":["anagram(target,"]},{"Key":"`fn anagram(target,","Fragments":["candidate)"]},{"Key":"anagram(target, candidate)","Fragments":["-\u003e"]},{"Key":"candidate) -\u003e","Fragments":["bool`"]},{"Key":"-\u003e bool`","Fragments":["now","function"]},{"Key":"bool` now","Fragments":["defers"]},{"Key":"now defers","Fragments":["all"]},{"Key":"defers all","Fragments":["its"]},{"Key":"all its","Fragments":["work"]},{"Key":"its work","Fragments":["to"]},{"Key":"work to","Fragments":["the"]},{"Key":"the target,","Fragments":["which"]},{"Key":"target, which","Fragments":["is"]},{"Key":"is now","Fragments":["anything","in","`into_ascii_uppercase`"]},{"Key":"now anything","Fragments":["implementing"]},{"Key":"anything implementing","Fragments":["the"]},{"Key":"implementing the","Fragments":["trait"]},{"Key":"the trait","Fragments":["`AnagramDetect`.","rather","`core::iter::FromIterator\u003c\u0026\u0026str\u003e`"]},{"Key":"A classic","Fragments":["case"]},{"Key":"classic case","Fragments":["of"]},{"Key":"of trading","Fragments":["memory"]},{"Key":"trading memory","Fragments":["for"]},{"Key":"memory for","Fragments":["operations,"]},{"Key":"for operations,","Fragments":["I"]},{"Key":"operations, I","Fragments":["suppose."]},{"Key":"I suppose.","Fragments":["I"]},{"Key":"suppose. I","Fragments":["think"]},{"Key":"it's an","Fragments":["improvement,","anagram.","anagram"]},{"Key":"an improvement,","Fragments":["but","at"]},{"Key":"improvement, but","Fragments":["it"]},{"Key":"it *is*","Fragments":["a"]},{"Key":"*is* a","Fragments":["lot","crate"]},{"Key":"more efficient","Fragments":["implementation","way","to","way","than","for"]},{"Key":"efficient implementation","Fragments":["without"]},{"Key":"implementation without","Fragments":["the","using"]},{"Key":"Also, the","Fragments":["`filter_map`","`map(|\u0026x|"]},{"Key":"the `filter_map`","Fragments":["thing"]},{"Key":"`filter_map` thing","Fragments":["is"]},{"Key":"is something","Fragments":["that"]},{"Key":"something that","Fragments":["I","allowed"]},{"Key":"used and","Fragments":["found"]},{"Key":"and found","Fragments":["weird,","`.cloned()`,"]},{"Key":"found weird,","Fragments":["filter"]},{"Key":"weird, filter","Fragments":["seemed"]},{"Key":"filter seemed","Fragments":["like"]},{"Key":"seemed like","Fragments":["the","a","just"]},{"Key":"right thing","Fragments":["but"]},{"Key":"thing but","Fragments":["then"]},{"Key":"compiler complained","Fragments":["and","about"]},{"Key":"complained and","Fragments":["the"]},{"Key":"the easy","Fragments":["thing"]},{"Key":"easy thing","Fragments":["was"]},{"Key":"thing was","Fragments":["just"]},{"Key":"was just","Fragments":["to","a","starting","a","strong","going","a"]},{"Key":"not move","Fragments":["`to_lowercase`"]},{"Key":"move `to_lowercase`","Fragments":["inside"]},{"Key":"`to_lowercase` inside","Fragments":["`split_n_sort`?"]},{"Key":" Allocating","Fragments":["2"]},{"Key":"Allocating 2","Fragments":["x"]},{"Key":"2 x","Fragments":["bools"]},{"Key":"x bools","Fragments":["on"]},{"Key":"bools on","Fragments":["the"]},{"Key":"the stack","Fragments":["is","and"]},{"Key":"stack is","Fragments":["arguably"]},{"Key":"is arguably","Fragments":["overkill"]},{"Key":"arguably overkill","Fragments":["for"]},{"Key":"overkill for","Fragments":["such"]},{"Key":"for such","Fragments":["a","a","crates."]},{"Key":"such a","Fragments":["simple","trivial","constructor"]},{"Key":"a simple","Fragments":["method.","one-line","enum","benchmark","lookup","formulae","static"]},{"Key":"simple method.","Fragments":["I"]},{"Key":"method. I","Fragments":["like","thought"]},{"Key":"clarity but","Fragments":["if"]},{"Key":"but if","Fragments":["this","rust"]},{"Key":"if this","Fragments":["method","would","is"]},{"Key":"this method","Fragments":["was","better.","line","even"]},{"Key":"method was","Fragments":["in"]},{"Key":"was in","Fragments":["library"]},{"Key":"in library","Fragments":["code"]},{"Key":"library code","Fragments":["or"]},{"Key":"code or","Fragments":["being"]},{"Key":"or being","Fragments":["called"]},{"Key":"being called","Fragments":["in"]},{"Key":"called in","Fragments":["a"]},{"Key":"a tight","Fragments":["loop"]},{"Key":"tight loop","Fragments":["I"]},{"Key":"loop I","Fragments":["would"]},{"Key":"would probably","Fragments":["revisit","be","be","be","check","write"]},{"Key":"probably revisit","Fragments":["that"]},{"Key":"revisit that","Fragments":["decision."]},{"Key":" Another","Fragments":["approach","edit:","optimisation","optimization","possibility"]},{"Key":"Another approach","Fragments":["to","would"]},{"Key":"solving that","Fragments":["problem"]},{"Key":"that problem","Fragments":["could"]},{"Key":"problem could","Fragments":["be"]},{"Key":"be to","Fragments":["implement","refuse","use"]},{"Key":"to implement","Fragments":["each","`is_shouting`","the","it"]},{"Key":"implement each","Fragments":["of"]},{"Key":"each of","Fragments":["the","the"]},{"Key":"the criteria","Fragments":["as"]},{"Key":"criteria as","Fragments":["functions"]},{"Key":"as functions","Fragments":["themselves,"]},{"Key":"functions themselves,","Fragments":["and"]},{"Key":"themselves, and","Fragments":["use","so"]},{"Key":"and use","Fragments":["that","Primal","```cloned()```","them","bitwise","that"]},{"Key":"simple one-line","Fragments":["evalutation."]},{"Key":"a first","Fragments":["step,","iteration."]},{"Key":"first step,","Fragments":["perhaps"]},{"Key":"step, perhaps","Fragments":["the"]},{"Key":"perhaps the","Fragments":["if-clauses","values"]},{"Key":"the if-clauses","Fragments":["aren't","-"]},{"Key":"if-clauses aren't","Fragments":["necessary"]},{"Key":"aren't necessary","Fragments":["when"]},{"Key":"necessary when","Fragments":["defining"]},{"Key":"when defining","Fragments":["the"]},{"Key":"defining the","Fragments":["variables,","binary","range"]},{"Key":"the variables,","Fragments":["as"]},{"Key":"variables, as","Fragments":["it"]},{"Key":"it could","Fragments":["just","be","be","just","then","return","be","be","be","be","be","just"]},{"Key":" @brennan","Fragments":["Great"]},{"Key":"@brennan Great","Fragments":["suggestion"]},{"Key":"Great suggestion","Fragments":["on"]},{"Key":"suggestion on","Fragments":["removing"]},{"Key":"on removing","Fragments":["the"]},{"Key":"removing the","Fragments":["if-clauses","lambda."]},{"Key":"if-clauses -","Fragments":["should"]},{"Key":"- should","Fragments":["have"]},{"Key":"should have","Fragments":["seen","been,","kept","been","been","2","a"]},{"Key":"have seen","Fragments":["that"]},{"Key":"seen that","Fragments":["right","notation"]},{"Key":"that right","Fragments":["away"]},{"Key":"right away","Fragments":["I"]},{"Key":"away I","Fragments":["have"]},{"Key":"have also","Fragments":["moved","simplified"]},{"Key":"also moved","Fragments":["them"]},{"Key":"moved them","Fragments":["out"]},{"Key":"them out","Fragments":["into"]},{"Key":"out into","Fragments":["separate","a","its"]},{"Key":"into separate","Fragments":["functions"]},{"Key":"separate functions","Fragments":["on"]},{"Key":"functions on","Fragments":["the"]},{"Key":"the hope","Fragments":["that"]},{"Key":"hope that","Fragments":["the"]},{"Key":"compiler will","Fragments":["inline","actually","infer"]},{"Key":"will inline","Fragments":["them."]},{"Key":"thought I'd","Fragments":["cheat"]},{"Key":"I'd cheat","Fragments":["and"]},{"Key":"cheat and","Fragments":["use"]},{"Key":"use Primal","Fragments":["to"]},{"Key":"Primal to","Fragments":["get"]},{"Key":"get the","Fragments":["prime","count","value","square","lowercase","inclusive","tests","ownership","\"does","does"]},{"Key":"the prime","Fragments":["factors."]},{"Key":"prime factors.","Fragments":["One"]},{"Key":"factors. One","Fragments":["of"]},{"Key":"One of","Fragments":["the","the"]},{"Key":"the things","Fragments":["I"]},{"Key":"things I","Fragments":["like"]},{"Key":"like best","Fragments":["about"]},{"Key":"best about","Fragments":["exercism"]},{"Key":"about exercism","Fragments":["as"]},{"Key":"exercism as","Fragments":["a"]},{"Key":"a whole","Fragments":["is","lot","lot"]},{"Key":"whole is","Fragments":["that"]},{"Key":"is that","Fragments":["you","`overwrite`","sort()","the","in","little","at","truly","your","the"]},{"Key":"can pull","Fragments":["in"]},{"Key":"pull in","Fragments":["whatever"]},{"Key":"in whatever","Fragments":["crates"]},{"Key":"whatever crates","Fragments":["you"]},{"Key":"crates you","Fragments":["want."]},{"Key":"you want.","Fragments":[":)"]},{"Key":" ...I","Fragments":["have","thought","just"]},{"Key":"...I have","Fragments":["the"]},{"Key":"the slice","Fragments":["patterns","expected"]},{"Key":"slice patterns","Fragments":["feature"]},{"Key":"patterns feature","Fragments":["at"]},{"Key":"feature at","Fragments":["the"]},{"Key":"the top,","Fragments":["but","which"]},{"Key":"top, but","Fragments":["there"]},{"Key":"no reason","Fragments":["for","for"]},{"Key":"reason for","Fragments":["it","this"]},{"Key":"for it","Fragments":["to"]},{"Key":"be there.","Fragments":["I"]},{"Key":"there. I","Fragments":["just"]},{"Key":"just forgot","Fragments":["to"]},{"Key":"forgot to","Fragments":["remove","make","check","remove"]},{"Key":"In a","Fragments":["lot"]},{"Key":"of these,","Fragments":["the"]},{"Key":"these, the","Fragments":["tests"]},{"Key":"the tests","Fragments":["seem","require","expect","pass.","and","defined","as","were","fails","passed","to","wrong.","to","call"]},{"Key":"tests seem","Fragments":["pretty","to"]},{"Key":"seem pretty","Fragments":["tightly"]},{"Key":"pretty tightly","Fragments":["coupled"]},{"Key":"tightly coupled","Fragments":["to"]},{"Key":"coupled to","Fragments":["the"]},{"Key":"the implementation","Fragments":["of","of"]},{"Key":"implementation of","Fragments":["whatever","the","to_lowercase!"]},{"Key":"of whatever","Fragments":["it"]},{"Key":"whatever it","Fragments":["is"]},{"Key":"is you're","Fragments":["doing,"]},{"Key":"you're doing,","Fragments":["but","rather"]},{"Key":"doing, but","Fragments":["this"]},{"Key":"this one","Fragments":["seemed","cost","I","was","is"]},{"Key":"one seemed","Fragments":["particularly"]},{"Key":"seemed particularly","Fragments":["egregious."]},{"Key":"particularly egregious.","Fragments":["I"]},{"Key":"egregious. I","Fragments":["would"]},{"Key":"would never","Fragments":["use"]},{"Key":"never use","Fragments":["a"]},{"Key":"a BTree","Fragments":["for","for"]},{"Key":"BTree for","Fragments":["anything,","the"]},{"Key":"for anything,","Fragments":["under"]},{"Key":"anything, under","Fragments":["normal"]},{"Key":"under normal","Fragments":["circumstances,"]},{"Key":"normal circumstances,","Fragments":["but"]},{"Key":"circumstances, but","Fragments":["in"]},{"Key":"case I'm","Fragments":["using","totally"]},{"Key":"I'm using","Fragments":["it","to","the","Lazy","i64"]},{"Key":"using it","Fragments":["for","as"]},{"Key":"it for","Fragments":["storing"]},{"Key":"for storing","Fragments":["rosters"]},{"Key":"storing rosters","Fragments":["per"]},{"Key":"rosters per","Fragments":["grade"]},{"Key":"per grade","Fragments":["because"]},{"Key":"grade because","Fragments":["the"]},{"Key":"tests require","Fragments":["that"]},{"Key":"require that","Fragments":["the"]},{"Key":"the grades","Fragments":["be"]},{"Key":"grades be","Fragments":["printed"]},{"Key":"be printed","Fragments":["in"]},{"Key":"printed in","Fragments":["order"]},{"Key":"in order","Fragments":["when","to"]},{"Key":"order when","Fragments":["you"]},{"Key":"you go","Fragments":["to"]},{"Key":"go to","Fragments":["print","town,"]},{"Key":"to print","Fragments":["them"]},{"Key":"print them","Fragments":["and"]},{"Key":"them and","Fragments":["this"]},{"Key":"and this","Fragments":["was","crate","one"]},{"Key":"this was","Fragments":["a","comparatively","extremely","the","was"]},{"Key":"was a","Fragments":["find/replace","simpler","big","time","massive","`return`"]},{"Key":"a find/replace","Fragments":["change"]},{"Key":"find/replace change","Fragments":["to"]},{"Key":"make (vs","Fragments":["sorting"]},{"Key":"(vs sorting","Fragments":["the"]},{"Key":"the iter().collect()","Fragments":["result"]},{"Key":"iter().collect() result","Fragments":["of"]},{"Key":"the hashmap","Fragments":["instead).","version."]},{"Key":"At the","Fragments":["same"]},{"Key":"same time,","Fragments":["it"]},{"Key":"time, it","Fragments":["was"]},{"Key":"was impossible","Fragments":["to"]},{"Key":"the students","Fragments":["themselves","names."]},{"Key":"students themselves","Fragments":["because"]},{"Key":"themselves because","Fragments":["the"]},{"Key":"tests expect","Fragments":["to"]},{"Key":"expect to","Fragments":["have"]},{"Key":"a *borrowed","Fragments":["vector*"]},{"Key":"*borrowed vector*","Fragments":["containing"]},{"Key":"vector* containing","Fragments":["the"]},{"Key":"containing the","Fragments":["students"]},{"Key":"students names.","Fragments":["Not"]},{"Key":"names. Not","Fragments":["a"]},{"Key":"Not a","Fragments":["new","fan","big"]},{"Key":"a new","Fragments":["one.","version.","sort","version","iteration","Allergies","value","language.","vector","Vector,","value,","closure."]},{"Key":"new one.","Fragments":["Meaning"]},{"Key":"one. Meaning","Fragments":["it"]},{"Key":"Meaning it","Fragments":["has"]},{"Key":"has to","Fragments":["already","be","be"]},{"Key":"to already","Fragments":["be"]},{"Key":"already be","Fragments":["stored"]},{"Key":"be stored","Fragments":["somewhere"]},{"Key":"stored somewhere","Fragments":["*in"]},{"Key":"somewhere *in","Fragments":["a"]},{"Key":"*in a","Fragments":["vector.*"]},{"Key":"I suppose","Fragments":["I","it","having"]},{"Key":"suppose I","Fragments":["could"]},{"Key":"be missing","Fragments":["something;"]},{"Key":"missing something;","Fragments":["I'm"]},{"Key":"something; I'm","Fragments":["not"]},{"Key":"the world's","Fragments":["greatest"]},{"Key":"world's greatest","Fragments":["with"]},{"Key":"greatest with","Fragments":["rust's"]},{"Key":"with rust's","Fragments":["types"]},{"Key":"rust's types","Fragments":["myself."]},{"Key":"types myself.","Fragments":["Did"]},{"Key":"myself. Did","Fragments":["anyone"]},{"Key":"Did anyone","Fragments":["have"]},{"Key":"anyone have","Fragments":["a"]},{"Key":"a similar","Fragments":["experience","solution","method"]},{"Key":"similar experience","Fragments":["with"]},{"Key":"with this,","Fragments":["or"]},{"Key":"this, or","Fragments":["possibly"]},{"Key":"or possibly","Fragments":["find"]},{"Key":"possibly find","Fragments":["some"]},{"Key":"find some","Fragments":["other"]},{"Key":"some other","Fragments":["workaround","languages,","submissions","peoples","Rust","solutions"]},{"Key":"other workaround","Fragments":["that"]},{"Key":"workaround that","Fragments":["I"]},{"Key":"Good use","Fragments":["of"]},{"Key":"the the","Fragments":["BTreeMap."]},{"Key":"the BTreeMap.","Fragments":["I"]},{"Key":"BTreeMap. I","Fragments":["was"]},{"Key":"was using","Fragments":["a"]},{"Key":"a regular","Fragments":["map"]},{"Key":"regular map","Fragments":["and"]},{"Key":"map and","Fragments":["sorting.","then"]},{"Key":"For grades","Fragments":["function,"]},{"Key":"grades function,","Fragments":["you"]},{"Key":"function, you","Fragments":["can","described","get"]},{"Key":"use `self.grades.keys().cloned().collect()`.","Fragments":["Looks"]},{"Key":"`self.grades.keys().cloned().collect()`. Looks","Fragments":["cleaner."]},{"Key":"really felt","Fragments":["that"]},{"Key":"felt that","Fragments":["this","the"]},{"Key":"that this","Fragments":["exercise,","is","would","is","code","code"]},{"Key":"this exercise,","Fragments":["more","I"]},{"Key":"exercise, more","Fragments":["than"]},{"Key":"than any","Fragments":["previous","of"]},{"Key":"any previous","Fragments":["exercise,"]},{"Key":"previous exercise,","Fragments":["could"]},{"Key":"exercise, could","Fragments":["have"]},{"Key":"have benefitted","Fragments":["from"]},{"Key":"benefitted from","Fragments":["some"]},{"Key":"from some","Fragments":["adjustment"]},{"Key":"some adjustment","Fragments":["for"]},{"Key":"adjustment for","Fragments":["Rust's"]},{"Key":"for Rust's","Fragments":["type"]},{"Key":"Rust's type","Fragments":["system."]},{"Key":"type system.","Fragments":["Instead"]},{"Key":"system. Instead","Fragments":["of"]},{"Key":"of printing","Fragments":["out"]},{"Key":"printing out","Fragments":["0000000000"]},{"Key":"out 0000000000","Fragments":["for"]},{"Key":"0000000000 for","Fragments":["an"]},{"Key":"an invalid","Fragments":["number,"]},{"Key":"invalid number,","Fragments":["why"]},{"Key":"number, why","Fragments":["don't"]},{"Key":"why don't","Fragments":["we"]},{"Key":"don't we","Fragments":["return"]},{"Key":"we return","Fragments":["Err(InvalidNumber)"]},{"Key":"return Err(InvalidNumber)","Fragments":["or"]},{"Key":"Err(InvalidNumber) or","Fragments":["something"]},{"Key":"totally agree.","Fragments":["I've"]},{"Key":"agree. I've","Fragments":["added"]},{"Key":"I've added","Fragments":["a"]},{"Key":"added a","Fragments":["pull","conditional"]},{"Key":"a pull","Fragments":["request","request","request"]},{"Key":"pull request","Fragments":["to","for","for"]},{"Key":"request to","Fragments":["xrust,"]},{"Key":"to xrust,","Fragments":["to","but"]},{"Key":"xrust, to","Fragments":["use"]},{"Key":"use ```Option```","Fragments":["instead."]},{"Key":"Using string","Fragments":["slices"]},{"Key":"string slices","Fragments":["(like"]},{"Key":"slices (like","Fragments":["```s[..3]```)"]},{"Key":"(like ```s[..3]```)","Fragments":["makes"]},{"Key":"```s[..3]```) makes","Fragments":["this"]},{"Key":"makes this","Fragments":["exercise"]},{"Key":"the `filter`","Fragments":["and","made"]},{"Key":"`filter` and","Fragments":["then"]},{"Key":"then `cloned`,","Fragments":["I've"]},{"Key":"`cloned`, I've","Fragments":["been"]},{"Key":"I've been","Fragments":["using","complaining"]},{"Key":"been using","Fragments":["filter_map"]},{"Key":"filter_map which","Fragments":["is"]},{"Key":"This whole","Fragments":["solution"]},{"Key":"whole solution","Fragments":["makes"]},{"Key":"solution makes","Fragments":["pretty"]},{"Key":"makes pretty","Fragments":["good"]},{"Key":"pretty good","Fragments":["sense","I"]},{"Key":"good sense","Fragments":["to"]},{"Key":"sense to","Fragments":["me,","me.","use","use","have","update"]},{"Key":"to me,","Fragments":["but","I","though."]},{"Key":"me, but","Fragments":["I'm"]},{"Key":"a fan","Fragments":["of","of"]},{"Key":"fan of","Fragments":["the","math.","having"]},{"Key":"the giant","Fragments":["match"]},{"Key":"giant match","Fragments":["expression"]},{"Key":"match expression","Fragments":["I'm"]},{"Key":"expression I'm","Fragments":["using"]},{"Key":"using to","Fragments":["convert"]},{"Key":"convert the","Fragments":["values","```char```"]},{"Key":"values from","Fragments":["hex"]},{"Key":"from hex","Fragments":["to"]},{"Key":"hex to","Fragments":["decimal."]},{"Key":"Also not","Fragments":["totally"]},{"Key":"not totally","Fragments":["sold","sold"]},{"Key":"totally sold","Fragments":["on","on"]},{"Key":"sold on","Fragments":["the","my"]},{"Key":"the idea","Fragments":["of"]},{"Key":"idea of","Fragments":["using"]},{"Key":"the vector...","Fragments":["I"]},{"Key":"vector... I","Fragments":["think"]},{"Key":"just added","Fragments":["the","an"]},{"Key":"added the","Fragments":["darn","`struct"]},{"Key":"the darn","Fragments":["thing"]},{"Key":"darn thing","Fragments":["up"]},{"Key":"thing up","Fragments":["to"]},{"Key":"up to","Fragments":["begin","but","expect","elements","date."]},{"Key":"to begin","Fragments":["with.","with."]},{"Key":"begin with.","Fragments":["Don't","I"]},{"Key":"with. Don't","Fragments":["really"]},{"Key":"Don't really","Fragments":["remember"]},{"Key":"really remember","Fragments":["why"]},{"Key":"remember why","Fragments":["I"]},{"Key":"why I","Fragments":["went","added","went","did","need"]},{"Key":"I went","Fragments":["that","with","all","with","with","overboard"]},{"Key":"went that","Fragments":["route."]},{"Key":"on my","Fragments":["range","laptop).","nerves,","part,","laptop"]},{"Key":"my range","Fragments":["here,"]},{"Key":"range here,","Fragments":["but..."]},{"Key":"here, but...","Fragments":["Oh"]},{"Key":"but... Oh","Fragments":["well."]},{"Key":"Oh well.","Fragments":[":)"]},{"Key":"a closed","Fragments":["form","form","form"]},{"Key":"closed form","Fragments":["solution","solution","solution"]},{"Key":"form solution","Fragments":["for","for","for"]},{"Key":"solution for","Fragments":["```square_of_sum```","the","this","the","the","`sum_of_squares`,"]},{"Key":"for ```square_of_sum```","Fragments":["and"]},{"Key":"```square_of_sum``` and","Fragments":["```sum_of_squares```"]},{"Key":"and ```sum_of_squares```","Fragments":["which"]},{"Key":"```sum_of_squares``` which","Fragments":["you"]},{"Key":"which you","Fragments":["could","can","could","could"]},{"Key":"can lazily","Fragments":["generate"]},{"Key":"lazily generate","Fragments":["the"]},{"Key":"generate the","Fragments":["natural","random"]},{"Key":"the natural","Fragments":["numbers,","numbers,"]},{"Key":"natural numbers,","Fragments":["and","it","if"]},{"Key":"numbers, and","Fragments":["then"]},{"Key":"then only","Fragments":["take"]},{"Key":"only take","Fragments":["what"]},{"Key":"take what","Fragments":["you"]},{"Key":"need from","Fragments":["that"]},{"Key":"from that","Fragments":["set."]},{"Key":"that set.","Fragments":["It"]},{"Key":"set. It","Fragments":["also","is"]},{"Key":"It also","Fragments":["removes","uses"]},{"Key":"also removes","Fragments":["the"]},{"Key":"removes the","Fragments":["need","need"]},{"Key":"have `1..num","Fragments":["+"]},{"Key":"`1..num +","Fragments":["1`"]},{"Key":"+ 1`","Fragments":["which"]},{"Key":"1` which","Fragments":["is"]},{"Key":"couldn't find","Fragments":["a","the"]},{"Key":"a sort()","Fragments":["on"]},{"Key":"sort() on","Fragments":["vector"]},{"Key":"on vector","Fragments":["which","instead"]},{"Key":"vector which","Fragments":["returned"]},{"Key":"which returned","Fragments":["something"]},{"Key":"returned something","Fragments":["rather"]},{"Key":"something rather","Fragments":["than"]},{"Key":"than acting","Fragments":["on"]},{"Key":"acting on","Fragments":["a"]},{"Key":"a mutable","Fragments":["object.","pointer","binding"]},{"Key":"I can","Fragments":["use","find","see","imagine)","see","simply","do","also","code","find"]},{"Key":"the unstable","Fragments":["collections","API."]},{"Key":"unstable collections","Fragments":["feature"]},{"Key":"collections feature","Fragments":["without"]},{"Key":"feature without","Fragments":["an"]},{"Key":"without an","Fragments":["annotation"]},{"Key":"an annotation","Fragments":["at"]},{"Key":"annotation at","Fragments":["the"]},{"Key":"the top","Fragments":["of","two","level)","level."]},{"Key":"top of","Fragments":["the","the"]},{"Key":"the file","Fragments":["(at"]},{"Key":"file (at","Fragments":["least"]},{"Key":"least under","Fragments":["the"]},{"Key":"under the","Fragments":["nightly"]},{"Key":"the nightly","Fragments":["from","build"]},{"Key":"nightly from","Fragments":["about"]},{"Key":"from about","Fragments":["16th"]},{"Key":"about 16th","Fragments":["July)."]},{"Key":"16th July).","Fragments":["Maybe"]},{"Key":"July). Maybe","Fragments":["a"]},{"Key":"Maybe a","Fragments":["bug?","macro"]},{"Key":" Sounds","Fragments":["like"]},{"Key":"Sounds like","Fragments":["it's","you've"]},{"Key":"like it's","Fragments":["finally","5:15"]},{"Key":"it's finally","Fragments":["been"]},{"Key":"finally been","Fragments":["stabilized?"]},{"Key":"been stabilized?","Fragments":["That's"]},{"Key":"stabilized? That's","Fragments":["good!"]},{"Key":"That's good!","Fragments":[":)"]},{"Key":"know of","Fragments":["any","any"]},{"Key":"of any","Fragments":["way","way"]},{"Key":"any way","Fragments":["to","to","of"]},{"Key":"to sort","Fragments":["and"]},{"Key":"sort and","Fragments":["return"]},{"Key":"and return","Fragments":["the","values.","conditionals."]},{"Key":"sorted value","Fragments":["either,"]},{"Key":"value either,","Fragments":["although"]},{"Key":"either, although","Fragments":["there"]},{"Key":"although there","Fragments":["*is*"]},{"Key":"there *is*","Fragments":["a"]},{"Key":"a crate","Fragments":["that","which","that"]},{"Key":"crate that","Fragments":["provides","allows"]},{"Key":"that provides","Fragments":["an"]},{"Key":"provides an","Fragments":["iterator"]},{"Key":"iterator method","Fragments":["that"]},{"Key":"method that","Fragments":["returns"]},{"Key":"a sorted","Fragments":["iterator.","lowercase","list","char"]},{"Key":"sorted iterator.","Fragments":["Not"]},{"Key":"iterator. Not","Fragments":["that"]},{"Key":"Not that","Fragments":["I've"]},{"Key":"that I've","Fragments":["ever"]},{"Key":"I've ever","Fragments":["found","since"]},{"Key":"ever found","Fragments":["an"]},{"Key":"found an","Fragments":["excuse"]},{"Key":"an excuse","Fragments":["to"]},{"Key":"excuse to","Fragments":["use"]},{"Key":"use it.","Fragments":[":(","I'm"]},{"Key":"solution without","Fragments":["sorting,"]},{"Key":"without sorting,","Fragments":["yes"]},{"Key":"sorting, yes","Fragments":["that"]},{"Key":"yes that","Fragments":["looks"]},{"Key":"that looks","Fragments":["likely"]},{"Key":"looks likely","Fragments":["to"]},{"Key":" ```\u0026str```","Fragments":["is"]},{"Key":"```\u0026str``` is","Fragments":["a"]},{"Key":"a view","Fragments":["on"]},{"Key":"view on","Fragments":["a"]},{"Key":"static string","Fragments":["and","and","would"]},{"Key":"string and","Fragments":["doesn't","one","the"]},{"Key":"and doesn't","Fragments":["require"]},{"Key":"doesn't require","Fragments":["a","explicit"]},{"Key":"require a","Fragments":["heap","lot"]},{"Key":"a heap","Fragments":["allocation.","allocation?"]},{"Key":"heap allocation.","Fragments":["```\u0026String```"]},{"Key":"allocation. ```\u0026String```","Fragments":["always"]},{"Key":"```\u0026String``` always","Fragments":["will."]},{"Key":"always will.","Fragments":["Please"]},{"Key":"will. Please","Fragments":["correct"]},{"Key":"Please correct","Fragments":["me"]},{"Key":"I've seen","Fragments":["the","some","in"]},{"Key":"seen the","Fragments":["```map(|\u0026x|","cloned"]},{"Key":"the ```map(|\u0026x|","Fragments":["x)```"]},{"Key":"```map(|\u0026x| x)```","Fragments":["before,"]},{"Key":"x)``` before,","Fragments":["I'm"]},{"Key":"before, I'm","Fragments":["converting"]},{"Key":"I'm converting","Fragments":["a"]},{"Key":"converting a","Fragments":["```\u0026\u0026```","float","number"]},{"Key":"a ```\u0026\u0026```","Fragments":["to"]},{"Key":"```\u0026\u0026``` to","Fragments":["a"]},{"Key":"a ```\u0026```.","Fragments":["```map(|\u0026x|"]},{"Key":"```\u0026```. ```map(|\u0026x|","Fragments":["x.clone())```"]},{"Key":"```map(|\u0026x| x.clone())```","Fragments":["also"]},{"Key":"x.clone())``` also","Fragments":["works..."]},{"Key":"also works...","Fragments":["not"]},{"Key":"works... not","Fragments":["sure"]},{"Key":"sure which","Fragments":["is","is"]},{"Key":"I actually","Fragments":["meant","added","already","have"]},{"Key":"actually meant","Fragments":["replace"]},{"Key":"meant replace","Fragments":["the"]},{"Key":"whole `.map(|\u0026x|","Fragments":["x)`"]},{"Key":"`.map(|\u0026x| x)`","Fragments":["with","can","is"]},{"Key":"x)` with","Fragments":["`.cloned`."]},{"Key":"I also","Fragments":["saw","had","stole","learned","don't","had","recommend","had","feel","don't","used"]},{"Key":"also saw","Fragments":["someone"]},{"Key":"saw someone","Fragments":["on"]},{"Key":"someone on","Fragments":["here"]},{"Key":"here use","Fragments":["`into_iter`"]},{"Key":"use `into_iter`","Fragments":["instead"]},{"Key":"`into_iter` instead","Fragments":["of"]},{"Key":"of `iter`","Fragments":["with"]},{"Key":"`iter` with","Fragments":["the"]},{"Key":"same effect.","Fragments":["I've"]},{"Key":"effect. I've","Fragments":["worked"]},{"Key":"I've worked","Fragments":["around"]},{"Key":"worked around","Fragments":["this","that"]},{"Key":"around this","Fragments":["before"]},{"Key":"this before","Fragments":["using","passing"]},{"Key":"before using","Fragments":["`filter_map`"]},{"Key":"using `filter_map`","Fragments":["instead"]},{"Key":"`filter_map` instead","Fragments":["of"]},{"Key":"of `filter`.","Fragments":["Though"]},{"Key":"`filter`. Though","Fragments":["I'm"]},{"Key":"Though I'm","Fragments":["still","thinking"]},{"Key":"I'm still","Fragments":["at","not","getting","looking.","quite","new","getting","compelled","running"]},{"Key":"still at","Fragments":["the"]},{"Key":"the stage","Fragments":["with"]},{"Key":"stage with","Fragments":["rust"]},{"Key":"with rust","Fragments":["where"]},{"Key":"rust where","Fragments":["I"]},{"Key":"know which","Fragments":["is","version"]},{"Key":"is better","Fragments":["(or","(in","described"]},{"Key":"better (or","Fragments":["what"]},{"Key":"(or what","Fragments":["I'm"]},{"Key":"what I'm","Fragments":["doing!),","doing;","doing","saying"]},{"Key":"I'm doing!),","Fragments":["the"]},{"Key":"doing!), the","Fragments":["code"]},{"Key":"code just","Fragments":["\"seems\""]},{"Key":"just \"seems\"","Fragments":["more"]},{"Key":"\"seems\" more","Fragments":["correct."]},{"Key":" It","Fragments":["is","might","is","would","looks","can","works","feels","avoids","is","appears","reflects","was"]},{"Key":"is possible,","Fragments":["and"]},{"Key":"possible, and","Fragments":["more"]},{"Key":"and more","Fragments":["efficient,"]},{"Key":"more efficient,","Fragments":["to"]},{"Key":"efficient, to","Fragments":["do"]},{"Key":"do this","Fragments":["without","that","exercise","with","than","in","exercise","bit","nonsense:","without","(and"]},{"Key":"this without","Fragments":["sorting.","pulling","the"]},{"Key":"One question,","Fragments":["what"]},{"Key":"question, what","Fragments":["is"]},{"Key":"what is","Fragments":["the","happening."]},{"Key":"the difference","Fragments":["between","between","as"]},{"Key":"difference between","Fragments":["`\u0026str`","to_lowercase(s,","`\u0026str`","the"]},{"Key":"between `\u0026str`","Fragments":["and","and"]},{"Key":"`\u0026str` and","Fragments":["`\u0026String`?","`String`","an","`String`"]},{"Key":"the `map(|\u0026x|","Fragments":["x)`"]},{"Key":"`map(|\u0026x| x)`","Fragments":["on","could"]},{"Key":"x)` on","Fragments":["line"]},{"Key":"line 7","Fragments":["seems"]},{"Key":"7 seems","Fragments":["a"]},{"Key":"little weird,","Fragments":["is"]},{"Key":"weird, is","Fragments":["there"]},{"Key":"there not","Fragments":["a"]},{"Key":"a better","Fragments":["way,","way","way","choice","approach","way","way","design?","one.","design?"]},{"Key":"better way,","Fragments":["perhaps"]},{"Key":"way, perhaps","Fragments":["using"]},{"Key":"perhaps using","Fragments":["[`cloned`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)?"]},{"Key":"What is","Fragments":["the"]},{"Key":"the purpose","Fragments":["of"]},{"Key":"purpose of","Fragments":["the","`.map(|c|"]},{"Key":"the ```static```","Fragments":["annotation"]},{"Key":"```static``` annotation","Fragments":["in"]},{"Key":"annotation in","Fragments":["line"]},{"Key":"12. Doesn't","Fragments":["that"]},{"Key":"Doesn't that","Fragments":["restrict"]},{"Key":"that restrict","Fragments":["the"]},{"Key":"restrict the","Fragments":["caller"]},{"Key":"the caller","Fragments":["unnecessarily?"]},{"Key":" Getting","Fragments":["a"]},{"Key":"Getting a","Fragments":["list"]},{"Key":"a list","Fragments":["of","of"]},{"Key":"of all","Fragments":["allergens","the","the"]},{"Key":"allergens was","Fragments":["harder"]},{"Key":"was harder","Fragments":["then"]},{"Key":"harder then","Fragments":["I"]},{"Key":"feel it","Fragments":["should","would"]},{"Key":"have been,","Fragments":["I"]},{"Key":"been, I","Fragments":["favoured"]},{"Key":"I favoured","Fragments":["the"]},{"Key":"favoured the","Fragments":["more"]},{"Key":"the more","Fragments":["explicit","cumbersome","frequent","general","common"]},{"Key":"more explicit","Fragments":["option,","on"]},{"Key":"explicit option,","Fragments":["but"]},{"Key":"option, but","Fragments":["either"]},{"Key":"but either","Fragments":["way"]},{"Key":"either way","Fragments":["it"]},{"Key":"way it","Fragments":["feels"]},{"Key":"there should","Fragments":["be","first","not"]},{"Key":"a simpler","Fragments":["way.","way","way.","version,"]},{"Key":"have written","Fragments":["`sum.and_then(...)`","in"]},{"Key":"written `sum.and_then(...)`","Fragments":["instead"]},{"Key":"`sum.and_then(...)` instead","Fragments":["of"]},{"Key":"of `sum.map_or(None,","Fragments":["...)`"]},{"Key":"`sum.map_or(None, ...)`","Fragments":["on"]},{"Key":"...)` on","Fragments":["line"]},{"Key":"This code","Fragments":["would","is"]},{"Key":"be improved","Fragments":["by"]},{"Key":"improved by","Fragments":["extracting"]},{"Key":"by extracting","Fragments":["some"]},{"Key":"extracting some","Fragments":["names,"]},{"Key":"some names,","Fragments":["but"]},{"Key":"names, but","Fragments":["I","that's"]},{"Key":"like how","Fragments":["compact","I","this","you're","`eulerian_cycle`"]},{"Key":"how compact","Fragments":["Rust"]},{"Key":"compact Rust","Fragments":["can"]},{"Key":"Rust can","Fragments":["be","offer"]},{"Key":"I wish","Fragments":["there","exercism","I"]},{"Key":"wish there","Fragments":["was"]},{"Key":"there was","Fragments":["a","some","a","no","a","no"]},{"Key":"simpler way","Fragments":["to"]},{"Key":"enumerate over","Fragments":["the","an"]},{"Key":"values of","Fragments":["a","the","an","`Allergen`","an","the","an","enum"]},{"Key":"simple enum","Fragments":["like"]},{"Key":"enum like","Fragments":["Allergen","the"]},{"Key":"like Allergen","Fragments":["here."]},{"Key":"Also, perhaps","Fragments":["the"]},{"Key":"allergen should","Fragments":["be"]},{"Key":"be attached","Fragments":["to"]},{"Key":"attached to","Fragments":["the"]},{"Key":"the Allergen?","Fragments":["Not"]},{"Key":"Allergen? Not","Fragments":["sure"]},{"Key":"this would","Fragments":["be","be","read"]},{"Key":"be any","Fragments":["better.","more","way","issue"]},{"Key":"Using `into_iter`","Fragments":["makes"]},{"Key":"`into_iter` makes","Fragments":["the"]},{"Key":"the `allergies`","Fragments":["fn"]},{"Key":"`allergies` fn","Fragments":["much"]},{"Key":"fn much","Fragments":["simpler."]},{"Key":"define ordinal","Fragments":["values"]},{"Key":"ordinal values","Fragments":["for"]},{"Key":"values for","Fragments":["```enum```s,","some","`allergies()`."]},{"Key":"for ```enum```s,","Fragments":["making"]},{"Key":"```enum```s, making","Fragments":["the"]},{"Key":"making the","Fragments":["```match```","`if`","first"]},{"Key":"the ```match```","Fragments":["clause"]},{"Key":"```match``` clause","Fragments":["unnecessary."]},{"Key":" Let","Fragments":["me","me","me"]},{"Key":"Let me","Fragments":["make","know","know"]},{"Key":"me make","Fragments":["sure"]},{"Key":"make sure","Fragments":["I","new","they"]},{"Key":"I understand","Fragments":["what's","what's","that","things."]},{"Key":"understand what's","Fragments":["going","going","going"]},{"Key":"what's going","Fragments":["on:","on.","on","to"]},{"Key":"going on:","Fragments":["on"]},{"Key":"on: on","Fragments":["line"]},{"Key":"line 47,","Fragments":["you're","```n.to_string()```"]},{"Key":"47, you're","Fragments":["breaking"]},{"Key":"you're breaking","Fragments":["*early*"]},{"Key":"breaking *early*","Fragments":["if"]},{"Key":"*early* if","Fragments":["the"]},{"Key":"the Allergies(u8)","Fragments":["you're"]},{"Key":"Allergies(u8) you're","Fragments":["testing"]},{"Key":"you're testing","Fragments":["is"]},{"Key":"testing is","Fragments":["such"]},{"Key":"is such","Fragments":["that"]},{"Key":"such that","Fragments":["there","you"]},{"Key":"that there","Fragments":["can","was","is","was","was"]},{"Key":"there can","Fragments":["be"]},{"Key":"be no","Fragments":["remaining","other"]},{"Key":"no remaining","Fragments":["flags"]},{"Key":"remaining flags","Fragments":["set?"]},{"Key":" Yes.","Fragments":["I"]},{"Key":"Yes. I","Fragments":["am"]},{"Key":"am checking","Fragments":["for"]},{"Key":"checking for","Fragments":["each","a","equality.","emptiness"]},{"Key":"each bit","Fragments":["set"]},{"Key":"set using","Fragments":["i"]},{"Key":"using i","Fragments":["(value"]},{"Key":"i (value","Fragments":["1,2,4,8"]},{"Key":"(value 1,2,4,8","Fragments":["etc)."]},{"Key":"1,2,4,8 etc).","Fragments":["So"]},{"Key":"etc). So","Fragments":["if"]},{"Key":"So if","Fragments":["the","there's"]},{"Key":"the Allergies","Fragments":["values"]},{"Key":"Allergies values","Fragments":["is"]},{"Key":"values is","Fragments":["less","not"]},{"Key":"is less","Fragments":["than","cool.","ugly,","than"]},{"Key":"less than","Fragments":["that,","half"]},{"Key":"that, then","Fragments":["there"]},{"Key":"then there","Fragments":["will"]},{"Key":"there will","Fragments":["be"]},{"Key":"no other","Fragments":["flags","way"]},{"Key":"other flags","Fragments":["set."]},{"Key":"I've extracted","Fragments":["`hex_to_digit`"]},{"Key":"extracted `hex_to_digit`","Fragments":["to"]},{"Key":"`hex_to_digit` to","Fragments":["make"]},{"Key":"it obvious","Fragments":["what"]},{"Key":"obvious what","Fragments":["the"]},{"Key":"first map","Fragments":["is"]},{"Key":"map is","Fragments":["doing,"]},{"Key":"is doing,","Fragments":["and"]},{"Key":"doing, and","Fragments":["just"]},{"Key":"just hard-coded","Fragments":["`16`"]},{"Key":"hard-coded `16`","Fragments":["as"]},{"Key":"`16` as","Fragments":["the"]},{"Key":"the multiplier,","Fragments":["the"]},{"Key":"multiplier, the","Fragments":["intent"]},{"Key":"the intent","Fragments":["is"]},{"Key":"intent is","Fragments":["hopefully"]},{"Key":"is hopefully","Fragments":["clear"]},{"Key":"hopefully clear","Fragments":["enough"]},{"Key":"clear enough","Fragments":["that"]},{"Key":"enough that","Fragments":["it's"]},{"Key":"a magic","Fragments":["number."]},{"Key":"of doing","Fragments":["a","things.","this?","stuff!","early"]},{"Key":"a complicated","Fragments":["reverse"]},{"Key":"complicated reverse","Fragments":["and"]},{"Key":"reverse and","Fragments":["zip,"]},{"Key":"and zip,","Fragments":["I"]},{"Key":"zip, I","Fragments":["realized"]},{"Key":"I realized","Fragments":["that","I"]},{"Key":"realized that","Fragments":["I","the","there"]},{"Key":"could multiply","Fragments":["`sum`"]},{"Key":"multiply `sum`","Fragments":["each"]},{"Key":"`sum` each","Fragments":["time,"]},{"Key":"each time,","Fragments":["rather"]},{"Key":"time, rather","Fragments":["than"]},{"Key":"than each","Fragments":["element"]},{"Key":"element by","Fragments":["an"]},{"Key":"by an","Fragments":["increasing"]},{"Key":"an increasing","Fragments":["multiplier."]},{"Key":"increasing multiplier.","Fragments":["`sum`"]},{"Key":"multiplier. `sum`","Fragments":["is"]},{"Key":"`sum` is","Fragments":["no"]},{"Key":"no longer","Fragments":["an","one","need","be"]},{"Key":"longer an","Fragments":["accurate"]},{"Key":"accurate name","Fragments":["for"]},{"Key":"name for","Fragments":["this","a","the"]},{"Key":"I've changed","Fragments":["the"]},{"Key":"function to","Fragments":["return","be","be"]},{"Key":"a `u32`,","Fragments":["as"]},{"Key":"`u32`, as","Fragments":["the"]},{"Key":"the previous","Fragments":["type","implementation","iteration.","vanilla","part,","version."]},{"Key":"previous type","Fragments":["of"]},{"Key":"of `usize`","Fragments":["was"]},{"Key":"`usize` was","Fragments":["just","good"]},{"Key":"a result","Fragments":["of","of"]},{"Key":" ```nucleotide_count```","Fragments":["is"]},{"Key":"```nucleotide_count``` is","Fragments":["iterating"]},{"Key":"is iterating","Fragments":["through","over"]},{"Key":"iterating through","Fragments":["its"]},{"Key":"through its","Fragments":["input"]},{"Key":"its input","Fragments":["4"]},{"Key":"input 4","Fragments":["times."]},{"Key":"4 times.","Fragments":["Given"]},{"Key":"times. Given","Fragments":["it's"]},{"Key":"Given it's","Fragments":["meant"]},{"Key":"it's meant","Fragments":["to","to"]},{"Key":"a DNA","Fragments":["strand,"]},{"Key":"DNA strand,","Fragments":["that"]},{"Key":"strand, that","Fragments":["could"]},{"Key":"a very","Fragments":["long","odd,"]},{"Key":"very long","Fragments":["string."]},{"Key":"have checked","Fragments":["with"]},{"Key":"checked with","Fragments":["small"]},{"Key":"with small","Fragments":["and"]},{"Key":"small and","Fragments":["large"]},{"Key":"and large","Fragments":["strings"]},{"Key":"large strings","Fragments":["(~20,000"]},{"Key":"strings (~20,000","Fragments":["chars)"]},{"Key":"(~20,000 chars)","Fragments":["and"]},{"Key":"chars) and","Fragments":["in"]},{"Key":"both cases","Fragments":["the"]},{"Key":"cases the","Fragments":["multi"]},{"Key":"the multi","Fragments":["iteration"]},{"Key":"multi iteration","Fragments":["version"]},{"Key":"iteration version","Fragments":["is"]},{"Key":"version is","Fragments":["3","simpler","more","just"]},{"Key":"is 3","Fragments":["times"]},{"Key":"times as","Fragments":["fast"]},{"Key":"as fast","Fragments":["as"]},{"Key":"fast as","Fragments":["the"]},{"Key":" test","Fragments":["count_multipass_large","count_multipass_small","count_onepass_hash_large","count_onepass_hash_small","bench_hamming_filter","bench_hamming_fold","result:"]},{"Key":"test count_multipass_large","Fragments":["..."]},{"Key":"count_multipass_large ...","Fragments":["bench:"]},{"Key":"... bench:","Fragments":["148,535","789","605,850","2,138","2,615","2,923"]},{"Key":"bench: 148,535","Fragments":["ns/iter"]},{"Key":"148,535 ns/iter","Fragments":["(+/-"]},{"Key":"ns/iter (+/-","Fragments":["6,206)","27)","22,748)","123)","49)","68)"]},{"Key":"test count_multipass_small","Fragments":["..."]},{"Key":"count_multipass_small ...","Fragments":["bench:"]},{"Key":"bench: 789","Fragments":["ns/iter"]},{"Key":"789 ns/iter","Fragments":["(+/-"]},{"Key":"test count_onepass_hash_large","Fragments":["..."]},{"Key":"count_onepass_hash_large ...","Fragments":["bench:"]},{"Key":"bench: 605,850","Fragments":["ns/iter"]},{"Key":"605,850 ns/iter","Fragments":["(+/-"]},{"Key":"test count_onepass_hash_small","Fragments":["..."]},{"Key":"count_onepass_hash_small ...","Fragments":["bench:"]},{"Key":"bench: 2,138","Fragments":["ns/iter"]},{"Key":"2,138 ns/iter","Fragments":["(+/-"]},{"Key":"map key","Fragments":["access"]},{"Key":"key access","Fragments":["on"]},{"Key":"access on","Fragments":["every"]},{"Key":"on every","Fragments":["entry","system.","iteration.."]},{"Key":"every entry","Fragments":["is"]},{"Key":"entry is","Fragments":["slow."]},{"Key":"is slow.","Fragments":["Array"]},{"Key":"slow. Array","Fragments":["filter"]},{"Key":"Array filter","Fragments":["and"]},{"Key":"is fast","Fragments":["and"]},{"Key":"fast and","Fragments":["in"]},{"Key":"in cases","Fragments":["where"]},{"Key":"cases where","Fragments":["the"]},{"Key":"where the","Fragments":["number","buffer","something"]},{"Key":"of iterations","Fragments":["is"]},{"Key":"iterations is","Fragments":["known"]},{"Key":"is known","Fragments":["to"]},{"Key":"known to","Fragments":["be"]},{"Key":"be low","Fragments":["(4"]},{"Key":"low (4","Fragments":["in"]},{"Key":"(4 in","Fragments":["this"]},{"Key":"this case),","Fragments":["this"]},{"Key":"case), this","Fragments":["seems"]},{"Key":"the better","Fragments":["approach"]},{"Key":"better approach","Fragments":[".","if"]},{"Key":" @hollie","Fragments":["That's"]},{"Key":"@hollie That's","Fragments":["interesting,"]},{"Key":"That's interesting,","Fragments":["could"]},{"Key":"interesting, could","Fragments":["you"]},{"Key":"could you","Fragments":["share","improve","improve"]},{"Key":"you share","Fragments":["your"]},{"Key":"share your","Fragments":["test"]},{"Key":"your test","Fragments":["bench?"]},{"Key":"test bench?","Fragments":["(I'm"]},{"Key":"bench? (I'm","Fragments":["new"]},{"Key":"(I'm new","Fragments":["to"]},{"Key":"new to","Fragments":["Rust,","rust,"]},{"Key":"to Rust,","Fragments":["I"]},{"Key":"Rust, I","Fragments":["don't","feel"]},{"Key":"don't how","Fragments":["to"]},{"Key":"write those","Fragments":["yet)."]},{"Key":"In my","Fragments":["next","case","next","former","opinion,"]},{"Key":"my next","Fragments":["iteration","rev,"]},{"Key":"next iteration","Fragments":["I","ready"]},{"Key":"iteration I","Fragments":["want"]},{"Key":"I want","Fragments":["to","to"]},{"Key":"to try","Fragments":["to","to"]},{"Key":"to iterate","Fragments":["over","over","over","through","over","over","through","through","over","over","through"]},{"Key":"string 1","Fragments":["time"]},{"Key":"1 time","Fragments":["and"]},{"Key":"time and","Fragments":["calculate","space"]},{"Key":"and calculate","Fragments":["the"]},{"Key":"the 4","Fragments":["values,"]},{"Key":"4 values,","Fragments":["and"]},{"Key":"values, and","Fragments":["finally"]},{"Key":"and finally","Fragments":["do"]},{"Key":"finally do","Fragments":["one"]},{"Key":"do one","Fragments":["insertion","pass"]},{"Key":"one insertion","Fragments":["per"]},{"Key":"insertion per","Fragments":["nucleotide."]},{"Key":"per nucleotide.","Fragments":["This"]},{"Key":"nucleotide. This","Fragments":["should"]},{"Key":"This should","Fragments":["be","lower"]},{"Key":"be faster","Fragments":["than","then","to","than","to","to","than","to"]},{"Key":"the 2","Fragments":["other"]},{"Key":"2 other","Fragments":["methods."]},{"Key":" look","Fragments":["at"]},{"Key":"at stevejb71","Fragments":["latest"]},{"Key":"stevejb71 latest","Fragments":["answer."]},{"Key":"latest answer.","Fragments":["It"]},{"Key":"answer. It","Fragments":["is"]},{"Key":"the fastest","Fragments":["solution","solution."]},{"Key":"fastest solution","Fragments":["so"]},{"Key":"solution so","Fragments":["far."]},{"Key":"For the","Fragments":["benchmark,","test","purposes","version","version"]},{"Key":"the benchmark,","Fragments":["in"]},{"Key":"benchmark, in","Fragments":["nucleotide_count"]},{"Key":"in nucleotide_count","Fragments":["folder"]},{"Key":"nucleotide_count folder","Fragments":["create"]},{"Key":"folder create","Fragments":["benches/nucleotide.rs"]},{"Key":"create benches/nucleotide.rs","Fragments":["with"]},{"Key":"benches/nucleotide.rs with","Fragments":["the"]},{"Key":"the content","Fragments":["below","type"]},{"Key":"content below","Fragments":["and"]},{"Key":"below and","Fragments":["run"]},{"Key":"and run","Fragments":["`cargo"]},{"Key":"run `cargo","Fragments":["bench`"]},{"Key":"`cargo bench`","Fragments":["to"]},{"Key":"bench` to","Fragments":["run"]},{"Key":"run the","Fragments":["benchmark."]},{"Key":"the benchmark.","Fragments":["Make"]},{"Key":"benchmark. Make","Fragments":["sure"]},{"Key":"Make sure","Fragments":["you"]},{"Key":"sure you","Fragments":["refer","don't"]},{"Key":"you refer","Fragments":["to"]},{"Key":"refer to","Fragments":["the","the"]},{"Key":"the correct","Fragments":["function","behavior","answer?","numbers","result","behaviour","character"]},{"Key":"correct function","Fragments":["calls."]},{"Key":"function calls.","Fragments":["In"]},{"Key":"calls. In","Fragments":["my"]},{"Key":"my case","Fragments":["I"]},{"Key":"case I","Fragments":["have","think","modified"]},{"Key":"have nucleotide_counts_multipass","Fragments":["and"]},{"Key":"nucleotide_counts_multipass and","Fragments":["nucleotide_counts_singlepass"]},{"Key":"and nucleotide_counts_singlepass","Fragments":["functions"]},{"Key":"nucleotide_counts_singlepass functions","Fragments":["in"]},{"Key":"functions in","Fragments":["the","a","a"]},{"Key":"the lib.rs","Fragments":["file."]},{"Key":" extern","Fragments":["crate","crate","crate","crate"]},{"Key":"extern crate","Fragments":["test;","nucleotide_count","test;","unicode;"]},{"Key":"crate nucleotide_count","Fragments":["as"]},{"Key":"nucleotide_count as","Fragments":["dna;"]},{"Key":" use","Fragments":["test::Bencher;","test::Bencher;","unicode::str::UnicodeStr;"]},{"Key":" static","Fragments":["SMALL:","LARGE:","VAR1:","VAR2:"]},{"Key":"static SMALL:","Fragments":["\u0026'static"]},{"Key":"SMALL: \u0026'static","Fragments":["str"]},{"Key":"\u0026'static str","Fragments":["=","=","=","="]},{"Key":"str =","Fragments":["\"AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC\";","\"AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAA\"","\"ACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGGACCAGGG\";","\"ACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGGACTATGG\";"]},{"Key":"// shortened","Fragments":["for"]},{"Key":"shortened for","Fragments":["display"]},{"Key":"static LARGE:","Fragments":["\u0026'static"]},{"Key":"LARGE: \u0026'static","Fragments":["str"]},{"Key":"fn count_multipass_large(b:","Fragments":["\u0026mut"]},{"Key":"count_multipass_large(b: \u0026mut","Fragments":["Bencher)"]},{"Key":"\u0026mut Bencher)","Fragments":["{","{","{","{"]},{"Key":" b.iter(||","Fragments":["{","{","{","{"]},{"Key":"let y","Fragments":["=","="]},{"Key":"y =","Fragments":["dna::nucleotide_counts_multipass(test::black_box(LARGE));","dna::nucleotide_counts_singlepass(test::black_box(LARGE));"]},{"Key":"fn count_onepass_large(b:","Fragments":["\u0026mut"]},{"Key":"count_onepass_large(b: \u0026mut","Fragments":["Bencher)"]},{"Key":"can find","Fragments":["no","it","of"]},{"Key":"find no","Fragments":["way"]},{"Key":"way of","Fragments":["enumerating","doing","doing","doing","doing","enumerating"]},{"Key":"of enumerating","Fragments":["the","them."]},{"Key":"enumerating the","Fragments":["values"]},{"Key":"of an","Fragments":["```enum```.","anagram","int","enum","enumeration.","enum","enum","`Option\u003cString\u003e`"]},{"Key":"replaced `hex_to_digit`","Fragments":["with"]},{"Key":"`hex_to_digit` with","Fragments":["an"]},{"Key":"an adaptation","Fragments":["of"]},{"Key":"adaptation of","Fragments":["[`std::char::to_digit`](https://github.com/rust-lang/rust/blob/e02ada6d383459f372ab6f277f25e5e986a60ed8/src/libcore/char.rs#L161-L174)."]},{"Key":"of [`std::char::to_digit`](https://github.com/rust-lang/rust/blob/e02ada6d383459f372ab6f277f25e5e986a60ed8/src/libcore/char.rs#L161-L174).","Fragments":["This"]},{"Key":"[`std::char::to_digit`](https://github.com/rust-lang/rust/blob/e02ada6d383459f372ab6f277f25e5e986a60ed8/src/libcore/char.rs#L161-L174). This","Fragments":["implementation"]},{"Key":"This implementation","Fragments":["will"]},{"Key":"implementation will","Fragments":["take"]},{"Key":"will take","Fragments":["the","to","a","`0100`"]},{"Key":"same time","Fragments":["to","rather"]},{"Key":"value for","Fragments":["all","the","the","the"]},{"Key":"for all","Fragments":["input","years."]},{"Key":"all input","Fragments":["characters."]},{"Key":" With","Fragments":["the"]},{"Key":"With the","Fragments":["previous","right","advent"]},{"Key":"previous implementation","Fragments":["*(I"]},{"Key":"implementation *(I","Fragments":["think)*"]},{"Key":"*(I think)*","Fragments":["the"]},{"Key":"think)* the","Fragments":["time"]},{"Key":"the time","Fragments":["would","when"]},{"Key":"time would","Fragments":["have"]},{"Key":"been dependent","Fragments":["on"]},{"Key":"dependent on","Fragments":["the"]},{"Key":"each digit,","Fragments":["so"]},{"Key":"digit, so","Fragments":["`hex_to_digit('?')`"]},{"Key":"so `hex_to_digit('?')`","Fragments":["would"]},{"Key":"`hex_to_digit('?')` would","Fragments":["take"]},{"Key":"would take","Fragments":["more","longer"]},{"Key":"take more","Fragments":["time"]},{"Key":"more time","Fragments":["than","and","thinking"]},{"Key":"time than","Fragments":["`hex_to_digit('a')`,"]},{"Key":"than `hex_to_digit('a')`,","Fragments":["which"]},{"Key":"`hex_to_digit('a')`, which","Fragments":["would"]},{"Key":"take longer","Fragments":["than"]},{"Key":"longer than","Fragments":["`hex_to_digit('0')`,"]},{"Key":"than `hex_to_digit('0')`,","Fragments":["as"]},{"Key":"`hex_to_digit('0')`, as","Fragments":["more"]},{"Key":"as more","Fragments":["characters"]},{"Key":"more characters","Fragments":["of"]},{"Key":"characters of","Fragments":["the"]},{"Key":"string would","Fragments":["have","do."]},{"Key":"be tested","Fragments":["before"]},{"Key":"tested before","Fragments":["a"]},{"Key":"before a","Fragments":["match"]},{"Key":" error:","Fragments":["binary","binary","the"]},{"Key":"error: binary","Fragments":["operation","operation"]},{"Key":"binary operation","Fragments":["\\`==\\`","\\`==\\`"]},{"Key":"operation \\`==\\`","Fragments":["cannot","cannot"]},{"Key":"\\`==\\` cannot","Fragments":["be","be"]},{"Key":"cannot be","Fragments":["applied","applied"]},{"Key":"be applied","Fragments":["to","to"]},{"Key":"applied to","Fragments":["type","type","both","stack"]},{"Key":"to type","Fragments":["`collections::vec::Vec","`collections::vec::Vec"]},{"Key":"type `collections::vec::Vec","Fragments":["\\\u003callergies::Allergen\\\u003e","\\\u003callergies::Allergen\\\u003e"]},{"Key":" solved","Fragments":["with","with"]},{"Key":" #[derive(Clone,","Fragments":["Copy,","Copy,"]},{"Key":"#[derive(Clone, Copy,","Fragments":["Debug,","Debug,"]},{"Key":"Copy, Debug,","Fragments":["PartialEq)]","PartialEq)]"]},{"Key":" though","Fragments":["I","I"]},{"Key":"what contribution","Fragments":["that","that"]},{"Key":"contribution that","Fragments":["makes","makes"]},{"Key":"that makes","Fragments":["just","just","for","it","any"]},{"Key":"makes just","Fragments":["yet.","yet."]},{"Key":"like code","Fragments":["that"]},{"Key":"code that","Fragments":["clear"]},{"Key":"that clear","Fragments":["and"]},{"Key":"clear and","Fragments":["simple","straightforward","simple."]},{"Key":"and simple","Fragments":["but"]},{"Key":"simple but","Fragments":["wonder"]},{"Key":"but wonder","Fragments":["that"]},{"Key":"wonder that","Fragments":["functional"]},{"Key":"that functional","Fragments":["based"]},{"Key":"functional based","Fragments":["iterative"]},{"Key":"based iterative","Fragments":["code"]},{"Key":"iterative code","Fragments":["would"]},{"Key":"better for","Fragments":["any"]},{"Key":"any changes","Fragments":["to"]},{"Key":"changes to","Fragments":["the","\"think"]},{"Key":"This one","Fragments":["took","only"]},{"Key":"one took","Fragments":["me"]},{"Key":"took me","Fragments":["forever.","a"]},{"Key":"me forever.","Fragments":["I"]},{"Key":"a funny","Fragments":["feeling"]},{"Key":"funny feeling","Fragments":["I"]},{"Key":"feeling I","Fragments":["just"]},{"Key":"just reinvented","Fragments":["the"]},{"Key":"reinvented the","Fragments":["wheel"]},{"Key":"the wheel","Fragments":["somehow"]},{"Key":"wheel somehow","Fragments":["and"]},{"Key":"somehow and","Fragments":["that"]},{"Key":"and that","Fragments":["there","I","seven","attempt","solves"]},{"Key":"was some","Fragments":["easy"]},{"Key":"some easy","Fragments":["or"]},{"Key":"easy or","Fragments":["sensible"]},{"Key":"or sensible","Fragments":["way"]},{"Key":"sensible way","Fragments":["to"]},{"Key":"this that","Fragments":["I","doesn't"]},{"Key":"totally missed","Fragments":["and"]},{"Key":"missed and","Fragments":["that"]},{"Key":"have done","Fragments":["it","it"]},{"Key":"done it","Fragments":["in","here"]},{"Key":"a terrible","Fragments":["fashion."]},{"Key":"terrible fashion.","Fragments":["I"]},{"Key":"fashion. I","Fragments":["don't"]},{"Key":" Hell,","Fragments":["on"]},{"Key":"Hell, on","Fragments":["lines"]},{"Key":"lines 27","Fragments":["and"]},{"Key":"27 and","Fragments":["28"]},{"Key":"and 28","Fragments":["you"]},{"Key":"28 you","Fragments":["can","don't"]},{"Key":"can see","Fragments":["where","exactly","how","on","logic"]},{"Key":"see where","Fragments":["I"]},{"Key":"had to","Fragments":["resort","lowercase","do","break","look","figure","solve","use","do","update","make","create"]},{"Key":"to resort","Fragments":["to"]},{"Key":"resort to","Fragments":["a"]},{"Key":"a comment","Fragments":["just","in","with","with","here","it"]},{"Key":"comment just","Fragments":["to"]},{"Key":"keep my","Fragments":["own"]},{"Key":"my own","Fragments":["head","parallel","trait"]},{"Key":"own head","Fragments":["on"]},{"Key":"head on","Fragments":["straight."]},{"Key":"on straight.","Fragments":["\u003e.\u003c"]},{"Key":"The code","Fragments":["I","structure"]},{"Key":"code I","Fragments":["have","would","have"]},{"Key":"have here","Fragments":["is"]},{"Key":"pretty smart","Fragments":["about"]},{"Key":"smart about","Fragments":["picking"]},{"Key":"about picking","Fragments":["the"]},{"Key":"picking the","Fragments":["\"next\""]},{"Key":"the \"next\"","Fragments":["match,"]},{"Key":"\"next\" match,","Fragments":["because"]},{"Key":"match, because","Fragments":["it"]},{"Key":"it won't","Fragments":["allow","show"]},{"Key":"won't allow","Fragments":["anything"]},{"Key":"allow anything","Fragments":["unmatchable"]},{"Key":"anything unmatchable","Fragments":["to"]},{"Key":"unmatchable to","Fragments":["be"]},{"Key":"be added","Fragments":["until","to"]},{"Key":"added until","Fragments":["the"]},{"Key":"until the","Fragments":["end...","end"]},{"Key":"the end...","Fragments":["Except"]},{"Key":"end... Except","Fragments":["at"]},{"Key":"Except at","Fragments":["the"]},{"Key":"the very","Fragments":["beginning."]},{"Key":"very beginning.","Fragments":["So"]},{"Key":"beginning. So","Fragments":["if"]},{"Key":"there's only","Fragments":["*one*","one"]},{"Key":"only *one*","Fragments":["seven,"]},{"Key":"*one* seven,","Fragments":["and"]},{"Key":"seven, and","Fragments":["that"]},{"Key":"that seven","Fragments":["appears"]},{"Key":"seven appears","Fragments":["on"]},{"Key":"appears on","Fragments":["the"]},{"Key":"right hand","Fragments":["side"]},{"Key":"hand side","Fragments":["of"]},{"Key":"side of","Fragments":["the"]},{"Key":"last domino","Fragments":["in"]},{"Key":"domino in","Fragments":["the"]},{"Key":"the input,","Fragments":["my"]},{"Key":"input, my","Fragments":["code"]},{"Key":"my code","Fragments":["will","like","directly"]},{"Key":"code will","Fragments":["fail","return"]},{"Key":"will fail","Fragments":["every"]},{"Key":"fail every","Fragments":["single"]},{"Key":"every single","Fragments":["time,"]},{"Key":"single time,","Fragments":["guaranteed,"]},{"Key":"time, guaranteed,","Fragments":["because"]},{"Key":"guaranteed, because","Fragments":["it"]},{"Key":"it \"chooses\"","Fragments":["the"]},{"Key":"\"chooses\" the","Fragments":["first"]},{"Key":"first element","Fragments":["of"]},{"Key":"the chain","Fragments":["by"]},{"Key":"chain by","Fragments":["popping"]},{"Key":"by popping","Fragments":["the"]},{"Key":"popping the","Fragments":["last"]},{"Key":"last element","Fragments":["from"]},{"Key":"input vector.","Fragments":["Brilliant,"]},{"Key":"vector. Brilliant,","Fragments":["right?"]},{"Key":"Brilliant, right?","Fragments":[":)"]},{"Key":"...I thought","Fragments":["about"]},{"Key":"about adding","Fragments":["some"]},{"Key":"adding some","Fragments":["kind"]},{"Key":"of failure","Fragments":["handling"]},{"Key":"failure handling","Fragments":["that"]},{"Key":"handling that","Fragments":["shuffles"]},{"Key":"that shuffles","Fragments":["the"]},{"Key":"shuffles the","Fragments":["source"]},{"Key":"the source","Fragments":["vector","code","code,","shows:"]},{"Key":"source vector","Fragments":["and"]},{"Key":"vector and","Fragments":["tries","it","it","it","it","it","it","it","iterate","it"]},{"Key":"and tries","Fragments":["again,"]},{"Key":"tries again,","Fragments":["but..."]},{"Key":"again, but...","Fragments":["C'mon."]},{"Key":"but... C'mon.","Fragments":["I'm"]},{"Key":"C'mon. I'm","Fragments":["just"]},{"Key":"I'm just","Fragments":["happy","starting"]},{"Key":"just happy","Fragments":["the"]},{"Key":"happy the","Fragments":["tests"]},{"Key":"tests pass.","Fragments":[":P"]},{"Key":"the way","Fragments":["I've","they","to","to","to","you"]},{"Key":"way I've","Fragments":["written"]},{"Key":"I've written","Fragments":["this"]},{"Key":"written this","Fragments":["code.."]},{"Key":"this code..","Fragments":["I"]},{"Key":"code.. I","Fragments":["would"]},{"Key":"have preferred","Fragments":["to"]},{"Key":"preferred to","Fragments":["use"]},{"Key":"use something","Fragments":["like","like"]},{"Key":" \u003e","Fragments":["for","s1.chars().zip(s2.chars()).filter(|\u0026(n1,n2)|","error:","fn","Makes","ASCII"]},{"Key":"\u003e for","Fragments":["(i,c)"]},{"Key":"for (i,c)","Fragments":["in"]},{"Key":"(i,c) in","Fragments":["mystr.chars().enumerate()"]},{"Key":"of vectors","Fragments":["here"]},{"Key":"vectors here","Fragments":["I"]},{"Key":"here I","Fragments":["wonder"]},{"Key":"wonder is","Fragments":["more"]},{"Key":"is more","Fragments":["time","readable.","idiomatic","than","set","succinct,"]},{"Key":"and space","Fragments":["intensive."]},{"Key":" Seeing","Fragments":["now"]},{"Key":"Seeing now","Fragments":["other"]},{"Key":"now other","Fragments":["examples"]},{"Key":"other examples","Fragments":["suggesting"]},{"Key":"\u003e s1.chars().zip(s2.chars()).filter(|\u0026(n1,n2)|","Fragments":["n1"]},{"Key":"s1.chars().zip(s2.chars()).filter(|\u0026(n1,n2)| n1","Fragments":["!="]},{"Key":"n1 !=","Fragments":["n2).count()"]},{"Key":"I need","Fragments":["to","to","to","a","all","this","to"]},{"Key":"learn to","Fragments":["use"]},{"Key":"use zip","Fragments":["and","for","to"]},{"Key":"zip and","Fragments":["filter"]},{"Key":"and filter","Fragments":["etc."]},{"Key":" Take","Fragments":["a","a","a","a"]},{"Key":"Take a","Fragments":["look","look","look","look","look"]},{"Key":"at haskell","Fragments":["if"]},{"Key":"haskell if","Fragments":["you"]},{"Key":"have time.","Fragments":["These"]},{"Key":"time. These","Fragments":["kind"]},{"Key":"These kind","Fragments":["of"]},{"Key":"of idioms","Fragments":["are"]},{"Key":"idioms are","Fragments":["very"]},{"Key":"are very","Fragments":["common","huge"]},{"Key":"very common","Fragments":["there"]},{"Key":"common there","Fragments":["(the"]},{"Key":"there (the","Fragments":["fact"]},{"Key":"(the fact","Fragments":["there"]},{"Key":"fact there","Fragments":["is"]},{"Key":"no loop","Fragments":["construct"]},{"Key":"loop construct","Fragments":["in"]},{"Key":"construct in","Fragments":["the","is_allergic_to"]},{"Key":"1. clever","Fragments":["implementation"]},{"Key":"clever implementation","Fragments":["of"]},{"Key":"* It","Fragments":["took"]},{"Key":"It took","Fragments":["me"]},{"Key":"while of","Fragments":["staring"]},{"Key":"of staring","Fragments":["into"]},{"Key":"staring into","Fragments":["the"]},{"Key":"the map","Fragments":["to","on","at","values","yet,","types.","access","in","could","afterwards.","function","function"]},{"Key":"understand the","Fragments":["nuance.","reply"]},{"Key":"the nuance.","Fragments":["I"]},{"Key":"nuance. I","Fragments":["don't"]},{"Key":"see `Option`","Fragments":["in"]},{"Key":"`Option` in","Fragments":["the"]},{"Key":"the documentation","Fragments":["for","I","for"]},{"Key":"documentation for","Fragments":["`char.to_lowercase()`,","Vec","it's"]},{"Key":"for `char.to_lowercase()`,","Fragments":["but"]},{"Key":"`char.to_lowercase()`, but","Fragments":["the"]},{"Key":"compiler messages","Fragments":["clearly"]},{"Key":"messages clearly","Fragments":["show"]},{"Key":"clearly show","Fragments":["that"]},{"Key":"show that","Fragments":["this","this"]},{"Key":"a `Some`","Fragments":["that"]},{"Key":"`Some` that","Fragments":["needs"]},{"Key":"that needs","Fragments":["to","to"]},{"Key":"be collapsed","Fragments":["with"]},{"Key":"collapsed with","Fragments":["`expect`."]},{"Key":"* I","Fragments":["followed","used","also","tried","still"]},{"Key":"I followed","Fragments":["up","your"]},{"Key":"followed up","Fragments":["and"]},{"Key":"up and","Fragments":["read","break"]},{"Key":"and read","Fragments":["various"]},{"Key":"read various","Fragments":["tickets"]},{"Key":"various tickets","Fragments":["and"]},{"Key":"tickets and","Fragments":["documentation"]},{"Key":"and documentation","Fragments":["on"]},{"Key":"documentation on","Fragments":["why"]},{"Key":"on why","Fragments":["to_lowercase"]},{"Key":"why to_lowercase","Fragments":["is"]},{"Key":"to_lowercase is","Fragments":["unstable"]},{"Key":"is unstable","Fragments":["and","and","currently","and"]},{"Key":"unstable and","Fragments":["how","restricted","compilation"]},{"Key":"how unicode","Fragments":["up/down"]},{"Key":"unicode up/down","Fragments":["case"]},{"Key":"up/down case","Fragments":["is"]},{"Key":"case is","Fragments":["not"]},{"Key":"not 1:1","Fragments":["and"]},{"Key":"1:1 and","Fragments":["the"]},{"Key":"the issues","Fragments":["that"]},{"Key":"issues that","Fragments":["causes."]},{"Key":"that causes.","Fragments":["I"]},{"Key":"causes. I","Fragments":["now"]},{"Key":"I now","Fragments":["know","have"]},{"Key":"now know","Fragments":["far"]},{"Key":"know far","Fragments":["more"]},{"Key":"far more","Fragments":["than","likely"]},{"Key":"than I","Fragments":["wanted","have","found.","used.","gave"]},{"Key":"to about","Fragments":["up/down"]},{"Key":"about up/down","Fragments":["casing"]},{"Key":"up/down casing","Fragments":["unicode"]},{"Key":"casing unicode","Fragments":["strings"]},{"Key":"unicode strings","Fragments":["--","without"]},{"Key":"strings --","Fragments":["and"]},{"Key":"-- and","Fragments":["still"]},{"Key":"and still","Fragments":["not","have","follows"]},{"Key":"still not","Fragments":["really","used"]},{"Key":"not really","Fragments":["enough.","happy","needed","sure","good.","sure","that","a"]},{"Key":"2. What","Fragments":["led"]},{"Key":"What led","Fragments":["you"]},{"Key":"led you","Fragments":["to"]},{"Key":"you to","Fragments":["using","think","use","signed","just"]},{"Key":"to using","Fragments":["a","a"]},{"Key":"a hashmap?","Fragments":["That's"]},{"Key":"hashmap? That's","Fragments":["fascinating."]},{"Key":"sorted lowercase","Fragments":["string"]},{"Key":"lowercase string","Fragments":["as"]},{"Key":"string as","Fragments":["my"]},{"Key":"my comparison","Fragments":["key"]},{"Key":"comparison key","Fragments":["where"]},{"Key":"key where","Fragments":["you"]},{"Key":"where you","Fragments":["used","increase"]},{"Key":"you used","Fragments":["the","more","the"]},{"Key":"the letter_counts","Fragments":["hash."]},{"Key":"letter_counts hash.","Fragments":["What"]},{"Key":"hash. What","Fragments":["are"]},{"Key":"1. Sounds","Fragments":["like"]},{"Key":"like you've","Fragments":["read"]},{"Key":"you've read","Fragments":["more"]},{"Key":"read more","Fragments":["than"]},{"Key":"have on","Fragments":["the"]},{"Key":"the topic!","Fragments":["In"]},{"Key":"topic! In","Fragments":["the"]},{"Key":"documentation I","Fragments":["read,"]},{"Key":"I read,","Fragments":["`to_lowercase()`"]},{"Key":"read, `to_lowercase()`","Fragments":["yields"]},{"Key":"`to_lowercase()` yields","Fragments":["a"]},{"Key":"yields a","Fragments":["special"]},{"Key":"a special","Fragments":["value"]},{"Key":"special value","Fragments":["-"]},{"Key":"value -","Fragments":["a"]},{"Key":"- a","Fragments":["`ToLowercase`"]},{"Key":"a `ToLowercase`","Fragments":["struct"]},{"Key":"`ToLowercase` struct","Fragments":["which"]},{"Key":"struct which","Fragments":["needs"]},{"Key":"which needs","Fragments":["to","the"]},{"Key":"iterated with","Fragments":["`next()`"]},{"Key":"with `next()`","Fragments":["to"]},{"Key":"`next()` to","Fragments":["yield"]},{"Key":"to yield","Fragments":["a"]},{"Key":"yield a","Fragments":["value."]},{"Key":"a value.","Fragments":["That"]},{"Key":"value. That","Fragments":["part"]},{"Key":"That part","Fragments":["did"]},{"Key":"part did","Fragments":["seem","compile,"]},{"Key":"did seem","Fragments":["odd"]},{"Key":"seem odd","Fragments":["to"]},{"Key":"odd to","Fragments":["me,"]},{"Key":"me, I","Fragments":["was"]},{"Key":"sure why","Fragments":["`ToLowercase`","I","I"]},{"Key":"why `ToLowercase`","Fragments":["should"]},{"Key":"`ToLowercase` should","Fragments":["be"]},{"Key":"be iterable.","Fragments":["Are"]},{"Key":"iterable. Are","Fragments":["there"]},{"Key":"Are there","Fragments":["multiple","any","any"]},{"Key":"there multiple","Fragments":["lowercase"]},{"Key":"multiple lowercase","Fragments":["values"]},{"Key":"lowercase values","Fragments":["for"]},{"Key":"for some","Fragments":["unicode","reason."]},{"Key":"some unicode","Fragments":["points?"]},{"Key":"2. I","Fragments":["just"]},{"Key":"just thought","Fragments":["of","it"]},{"Key":"thought of","Fragments":["defining","that."]},{"Key":"of defining","Fragments":["anagrams","the"]},{"Key":"defining anagrams","Fragments":["as"]},{"Key":"anagrams as","Fragments":["two"]},{"Key":"as two","Fragments":["words"]},{"Key":"two words","Fragments":["with","in"]},{"Key":"words with","Fragments":["the"]},{"Key":"same number","Fragments":["of"]},{"Key":"of letters,","Fragments":["and"]},{"Key":"letters, and","Fragments":["a"]},{"Key":"a `HashMap`","Fragments":["just"]},{"Key":"`HashMap` just","Fragments":["kind"]},{"Key":"just kind","Fragments":["of"]},{"Key":"of made","Fragments":["sense"]},{"Key":"made sense","Fragments":["for","to"]},{"Key":"sense for","Fragments":["that."]},{"Key":"for that.","Fragments":["I"]},{"Key":"that. I","Fragments":["think","think","think","like"]},{"Key":"think I","Fragments":["used","have","could","went","get"]},{"Key":"similar solution","Fragments":["to"]},{"Key":"this problem,","Fragments":["with","your"]},{"Key":"problem, with","Fragments":["a"]},{"Key":"with a","Fragments":["map,","Filter","filter","functional","for-in","link","function","message","large","closure","name","`None`.","swap.","bit"]},{"Key":"a map,","Fragments":["in","there"]},{"Key":"map, in","Fragments":["some"]},{"Key":"languages, probably","Fragments":["Java."]},{"Key":"The match","Fragments":["construct","statement"]},{"Key":"match construct","Fragments":["in"]},{"Key":"in is_allergic_to","Fragments":["looks","(I"]},{"Key":"is_allergic_to looks","Fragments":["quite"]},{"Key":"quite heavy","Fragments":["to"]},{"Key":"heavy to","Fragments":["me."]},{"Key":"to me.","Fragments":["I","So"]},{"Key":"me. I","Fragments":["went"]},{"Key":"went with","Fragments":["!=","the","an","the"]},{"Key":"with !=","Fragments":["0"]},{"Key":"0 instead.","Fragments":["I"]},{"Key":"instead. I","Fragments":["mean","will"]},{"Key":"I mean","Fragments":["it's"]},{"Key":"mean it's","Fragments":["the"]},{"Key":"it's the","Fragments":["same","fact"]},{"Key":"end I","Fragments":["suppose"]},{"Key":"suppose it","Fragments":["just"]},{"Key":"it just","Fragments":["depends","makes","constantly"]},{"Key":"just depends","Fragments":["on"]},{"Key":"depends on","Fragments":["what","the"]},{"Key":"on what","Fragments":["you"]},{"Key":"think is","Fragments":["more","`#[allow(dead_code)]`"]},{"Key":"more readable.","Fragments":["Similarly","But"]},{"Key":"readable. Similarly","Fragments":["in"]},{"Key":"Similarly in","Fragments":["value"]},{"Key":"in value","Fragments":["you"]},{"Key":"value you","Fragments":["could"]},{"Key":"get value","Fragments":["out"]},{"Key":"value out","Fragments":["with"]},{"Key":"with self.0","Fragments":["or"]},{"Key":"self.0 or","Fragments":["let"]},{"Key":"or let","Fragments":["\u0026Allergies(n)"]},{"Key":"let \u0026Allergies(n)","Fragments":["="]},{"Key":"\u0026Allergies(n) =","Fragments":["self;"]},{"Key":"self; n","Fragments":["both"]},{"Key":"n both","Fragments":["of"]},{"Key":"of which","Fragments":["are","are"]},{"Key":"which are","Fragments":["shorter","the"]},{"Key":"are shorter","Fragments":["but"]},{"Key":"shorter but","Fragments":["not","I'm"]},{"Key":"but not","Fragments":["necessarily","including","banana","correct","all","at"]},{"Key":"not necessarily","Fragments":["better."]},{"Key":" got","Fragments":["this"]},{"Key":"got this","Fragments":["mostly"]},{"Key":"this mostly","Fragments":["working"]},{"Key":"mostly working","Fragments":["with"]},{"Key":"working with","Fragments":["ascii"]},{"Key":"with ascii","Fragments":["case"]},{"Key":"ascii case","Fragments":["folding."]},{"Key":" Unicode","Fragments":["case"]},{"Key":"Unicode case","Fragments":["folding"]},{"Key":"case folding","Fragments":["is"]},{"Key":"folding is","Fragments":["unstable"]},{"Key":"and restricted","Fragments":["to"]},{"Key":"restricted to","Fragments":["nightly"]},{"Key":"to nightly","Fragments":["builds."]},{"Key":"should add","Fragments":["an"]},{"Key":"add an","Fragments":["(ascii)"]},{"Key":"an (ascii)","Fragments":["case"]},{"Key":"(ascii) case","Fragments":["fold"]},{"Key":"case fold","Fragments":["in"]},{"Key":"fold in","Fragments":["the"]},{"Key":"the anagram_for","Fragments":["test."]},{"Key":"any particular","Fragments":["reason"]},{"Key":"particular reason","Fragments":["why"]},{"Key":"reason why","Fragments":["you","the"]},{"Key":"why you","Fragments":["made","chose"]},{"Key":"you made","Fragments":["`lc_sorted_str`","```sum```"]},{"Key":"made `lc_sorted_str`","Fragments":["public?"]},{"Key":" No,","Fragments":["there","there"]},{"Key":"No, there","Fragments":["isn't!","is"]},{"Key":"there isn't!","Fragments":["thanks"]},{"Key":"isn't! thanks","Fragments":["for"]},{"Key":"thanks for","Fragments":["the","the","the"]},{"Key":"the life","Fragments":["times?"]},{"Key":"life times?","Fragments":["I"]},{"Key":"times? I","Fragments":["don't"]},{"Key":"think they","Fragments":["add","add"]},{"Key":"they add","Fragments":["anything.","any"]},{"Key":"You're right,","Fragments":["I'm","I","I"]},{"Key":"right, I'm","Fragments":["not"]},{"Key":"I added","Fragments":["those","functions","the"]},{"Key":" ```","Fragments":["let","*counts.entry(n).or_insert(0)","if","year"]},{"Key":"``` let","Fragments":["count"]},{"Key":"let count","Fragments":["="]},{"Key":"count =","Fragments":["counts.get(\u0026n).unwrap()"]},{"Key":"= counts.get(\u0026n).unwrap()","Fragments":["+"]},{"Key":"counts.get(\u0026n).unwrap() +","Fragments":["1;"]},{"Key":" counts.insert(n,","Fragments":["count);"]},{"Key":"``` *counts.entry(n).or_insert(0)","Fragments":["+="]},{"Key":"*counts.entry(n).or_insert(0) +=","Fragments":["1````"]},{"Key":" Your","Fragments":["solution","code","proposed","solution"]},{"Key":"Your solution","Fragments":["needs","is"]},{"Key":"solution needs","Fragments":["2"]},{"Key":"needs 2","Fragments":["lookups"]},{"Key":"2 lookups","Fragments":["for"]},{"Key":"lookups for","Fragments":["the"]},{"Key":"hash table,","Fragments":["one"]},{"Key":"table, one","Fragments":["to"]},{"Key":"one to","Fragments":["get","insert.","infer","the"]},{"Key":"count and","Fragments":["one"]},{"Key":"to insert.","Fragments":["Using"]},{"Key":"insert. Using","Fragments":["entry()"]},{"Key":"Using entry()","Fragments":["gets"]},{"Key":"entry() gets","Fragments":["a"]},{"Key":"gets a","Fragments":["mutable"]},{"Key":"mutable pointer","Fragments":["to"]},{"Key":"pointer to","Fragments":["the"]},{"Key":"and updates","Fragments":["it"]},{"Key":"updates it","Fragments":["in"]},{"Key":"in place.","Fragments":["This"]},{"Key":"place. This","Fragments":["is"]},{"Key":"the recommended","Fragments":["in"]},{"Key":"recommended in","Fragments":["the"]},{"Key":" Thanks,","Fragments":["I've","@linnie,","good","I'd","I","I'll"]},{"Key":"Thanks, I've","Fragments":["optimized"]},{"Key":"I've optimized","Fragments":["it"]},{"Key":"optimized it","Fragments":["in"]},{"Key":"I'm on","Fragments":["1.1.0."]},{"Key":"on 1.1.0.","Fragments":["Even"]},{"Key":"1.1.0. Even","Fragments":["if"]},{"Key":"Even if","Fragments":["I","we","that"]},{"Key":"might update","Fragments":["soon,"]},{"Key":"update soon,","Fragments":["I'll"]},{"Key":"soon, I'll","Fragments":["definitely"]},{"Key":"I'll definitely","Fragments":["stick"]},{"Key":"definitely stick","Fragments":["to"]},{"Key":"stick to","Fragments":["stable","one"]},{"Key":"to stable","Fragments":["releases."]},{"Key":"stable releases.","Fragments":["I"]},{"Key":"releases. I","Fragments":["tried"]},{"Key":"tried rust","Fragments":["during"]},{"Key":"rust during","Fragments":["March"]},{"Key":"during March","Fragments":["and"]},{"Key":"March and","Fragments":["April"]},{"Key":"and April","Fragments":["and"]},{"Key":"April and","Fragments":["was"]},{"Key":"and was","Fragments":["quiet"]},{"Key":"was quiet","Fragments":["unhappy"]},{"Key":"quiet unhappy","Fragments":["with"]},{"Key":"the daily","Fragments":["recode"]},{"Key":"daily recode","Fragments":["of"]},{"Key":"recode of","Fragments":["formerly"]},{"Key":"of formerly","Fragments":["working"]},{"Key":"formerly working","Fragments":["stuff,"]},{"Key":"working stuff,","Fragments":["just"]},{"Key":"stuff, just","Fragments":["because"]},{"Key":"because just","Fragments":["another"]},{"Key":"just another","Fragments":["function"]},{"Key":"another function","Fragments":["or"]},{"Key":"function or","Fragments":["trait"]},{"Key":"or trait","Fragments":["has"]},{"Key":"trait has","Fragments":["moved"]},{"Key":"has moved","Fragments":["around"]},{"Key":"moved around","Fragments":["or"]},{"Key":"around or","Fragments":["such…"]},{"Key":"The nightly","Fragments":["build"]},{"Key":"nightly build","Fragments":["had","rust"]},{"Key":"build had","Fragments":["to"]},{"Key":"to lowercase","Fragments":["on","on","and","more","on","seems"]},{"Key":"lowercase on","Fragments":["strings.","s","the"]},{"Key":"could implement","Fragments":["to_int"]},{"Key":"implement to_int","Fragments":["as"]},{"Key":"to_int as","Fragments":["\"*self"]},{"Key":"as \"*self","Fragments":["as"]},{"Key":"\"*self as","Fragments":["u32\""]},{"Key":"as u32\"","Fragments":["if"]},{"Key":"u32\" if","Fragments":["you"]},{"Key":"you derive","Fragments":["from","Copy"]},{"Key":"derive from","Fragments":["Clone"]},{"Key":"from Clone","Fragments":["and"]},{"Key":"Clone and","Fragments":["Copy"]},{"Key":"and Copy","Fragments":["as"]},{"Key":"Copy as","Fragments":["well.","well"]},{"Key":" Beautiful","Fragments":["solution"]},{"Key":"Beautiful solution","Fragments":[":-)"]},{"Key":"solution :-)","Fragments":["I"]},{"Key":":-) I","Fragments":["did"]},{"Key":"I did","Fragments":["not","not","it.","with","this","not","not","not","find","not","not","not","not","not"]},{"Key":"did not","Fragments":["know","use","work,","think","know","work","specify","formally","think","know","know","think","take","use"]},{"Key":"not know","Fragments":["about","about","that","until"]},{"Key":"about `join()`","Fragments":["before,"]},{"Key":"`join()` before,","Fragments":["but"]},{"Key":"before, but","Fragments":["it"]},{"Key":"it sure","Fragments":["beats","looks"]},{"Key":"sure beats","Fragments":["folding"]},{"Key":"beats folding","Fragments":["manually."]},{"Key":"I'll still","Fragments":["try"]},{"Key":"still try","Fragments":["to"]},{"Key":"add a","Fragments":["little","new"]},{"Key":"little something:","Fragments":["`if"]},{"Key":"something: `if","Fragments":["n"]},{"Key":"`if n","Fragments":["=="]},{"Key":"n ==","Fragments":["0","2"]},{"Key":"0 {99}","Fragments":["else"]},{"Key":"{99} else","Fragments":["{n"]},{"Key":"else {n","Fragments":["-"]},{"Key":"{n -","Fragments":["1}`"]},{"Key":"- 1}`","Fragments":["is"]},{"Key":"1}` is","Fragments":["a"]},{"Key":"bit unwieldy,","Fragments":["and"]},{"Key":"unwieldy, and","Fragments":["there"]},{"Key":"are equivalent","Fragments":["mathematical","to"]},{"Key":"equivalent mathematical","Fragments":["expressions."]},{"Key":"are calling","Fragments":["map","```to_lowercase```","`lowercase_chars(a)`","to","to"]},{"Key":"calling map","Fragments":["entry"]},{"Key":"map entry","Fragments":["on"]},{"Key":"entry on","Fragments":["each"]},{"Key":"on each","Fragments":["character"]},{"Key":"character element","Fragments":["which"]},{"Key":"element which","Fragments":["is"]},{"Key":"quite slow.","Fragments":["You"]},{"Key":"slow. You","Fragments":["can"]},{"Key":"it faster","Fragments":["by"]},{"Key":"faster by","Fragments":["not"]},{"Key":"by not","Fragments":["doing"]},{"Key":"not doing","Fragments":["the"]},{"Key":"doing the","Fragments":["updates"]},{"Key":"the updates","Fragments":["in"]},{"Key":"updates in","Fragments":["a"]},{"Key":"map, there","Fragments":["are"]},{"Key":"are only","Fragments":["4","four"]},{"Key":"only 4","Fragments":["possible"]},{"Key":"4 possible","Fragments":["keys."]},{"Key":"I find","Fragments":["filter","that","this","it","a","it"]},{"Key":"find filter","Fragments":["and"]},{"Key":"then count","Fragments":["easier"]},{"Key":"count easier","Fragments":["to"]},{"Key":"to read","Fragments":["in","the","than","a","and","if","if","/"]},{"Key":"read in","Fragments":["count."]},{"Key":" `gen_range(low,","Fragments":["high)`"]},{"Key":"`gen_range(low, high)`","Fragments":["uses"]},{"Key":"high)` uses","Fragments":["a"]},{"Key":"a half-open","Fragments":["range"]},{"Key":"half-open range","Fragments":["of"]},{"Key":"range of","Fragments":["`[low,","ascii","the"]},{"Key":"of `[low,","Fragments":["high)`,"]},{"Key":"`[low, high)`,","Fragments":["so"]},{"Key":"high)`, so","Fragments":["your"]},{"Key":"so your","Fragments":["robot","original","robot"]},{"Key":"your robot","Fragments":["names","name","naming","name"]},{"Key":"robot names","Fragments":["will"]},{"Key":"names will","Fragments":["never"]},{"Key":"will never","Fragments":["have","contain","contain"]},{"Key":"never have","Fragments":["names"]},{"Key":"have names","Fragments":["containing"]},{"Key":"names containing","Fragments":["9"]},{"Key":"containing 9","Fragments":["or"]},{"Key":"9 or","Fragments":["Z."]},{"Key":"or Z.","Fragments":["(Unless"]},{"Key":"Z. (Unless","Fragments":["I'm"]},{"Key":"(Unless I'm","Fragments":["misreading"]},{"Key":"I'm misreading","Fragments":["the"]},{"Key":"misreading the","Fragments":["`gen_range()`"]},{"Key":"the `gen_range()`","Fragments":["documentation)."]},{"Key":"Good spot!","Fragments":["Updated"]},{"Key":"spot! Updated","Fragments":["in"]},{"Key":"Updated in","Fragments":["the"]},{"Key":"other guys","Fragments":["mentioned"]},{"Key":"guys mentioned","Fragments":["to"]},{"Key":"mentioned to","Fragments":["me"]},{"Key":"to me","Fragments":["the","like","like","than","to","like","to"]},{"Key":"me the","Fragments":["other"]},{"Key":"other day","Fragments":["that"]},{"Key":"day that","Fragments":["what"]},{"Key":"that what","Fragments":["you're"]},{"Key":"you're doing","Fragments":["with"]},{"Key":"doing with","Fragments":["the","Lifetimes","that"]},{"Key":"the `.map()`","Fragments":["call"]},{"Key":"`.map()` call","Fragments":["on"]},{"Key":"call on","Fragments":["your","a"]},{"Key":"on your","Fragments":["keys"]},{"Key":"your keys","Fragments":["duplicates"]},{"Key":"keys duplicates","Fragments":["special"]},{"Key":"duplicates special","Fragments":["functionality"]},{"Key":"special functionality","Fragments":["provided"]},{"Key":"functionality provided","Fragments":["by"]},{"Key":"provided by","Fragments":["the"]},{"Key":"by the","Fragments":["`.cloned()`","`upper_left_of`","fact","fold","`Allergies(n)`","tests,"]},{"Key":"the `.cloned()`","Fragments":["iterator"]},{"Key":"`.cloned()` iterator","Fragments":["adapter."]},{"Key":" Yeah,","Fragments":["that's","the"]},{"Key":"Yeah, that's","Fragments":["better,"]},{"Key":"that's better,","Fragments":["submitted"]},{"Key":"better, submitted","Fragments":["a"]},{"Key":"submitted a","Fragments":["new","new"]},{"Key":"Nice optimization.","Fragments":["This"]},{"Key":"optimization. This","Fragments":["is"]},{"Key":"a smaller","Fragments":["array."]},{"Key":"smaller array.","Fragments":["Use"]},{"Key":"array. Use","Fragments":["the"]},{"Key":"Use the","Fragments":["bitwise-and","nightly."]},{"Key":"the bitwise-and","Fragments":["operator"]},{"Key":"bitwise-and operator","Fragments":["to"]},{"Key":"operator to","Fragments":["use"]},{"Key":"use only","Fragments":["last","multi-threading"]},{"Key":"only last","Fragments":["3"]},{"Key":"last 3","Fragments":["bits."]},{"Key":"3 bits.","Fragments":["This"]},{"Key":"bits. This","Fragments":["assumes"]},{"Key":"This assumes","Fragments":["that"]},{"Key":"assumes that","Fragments":["the"]},{"Key":"the data","Fragments":["is","type","in","and"]},{"Key":"data is","Fragments":["clean"]},{"Key":"is clean","Fragments":["i.e."]},{"Key":"clean i.e.","Fragments":["only"]},{"Key":"i.e. only","Fragments":["a,t,c,g"]},{"Key":"only a,t,c,g","Fragments":["characters."]},{"Key":"mut res","Fragments":["="]},{"Key":"res =","Fragments":["[0;"]},{"Key":"= [0;","Fragments":["8];"]},{"Key":"for n","Fragments":["in"]},{"Key":"n in","Fragments":["strand.chars()"]},{"Key":"in strand.chars()","Fragments":["{"]},{"Key":" res[n","Fragments":["as"]},{"Key":"res[n as","Fragments":["usize"]},{"Key":"as usize","Fragments":["\u0026"]},{"Key":"usize \u0026","Fragments":["0x07"]},{"Key":"\u0026 0x07","Fragments":["]"]},{"Key":"0x07 ]","Fragments":["+="]},{"Key":"] +=","Fragments":["1;"]},{"Key":" alternate","Fragments":["form"]},{"Key":"alternate form","Fragments":["of"]},{"Key":"of `vec`","Fragments":["macro:"]},{"Key":"`vec` macro:","Fragments":["`vec[element;"]},{"Key":"macro: `vec[element;","Fragments":["length];`"]},{"Key":"`vec[element; length];`","Fragments":["allows"]},{"Key":"length];` allows","Fragments":["line"]},{"Key":"allows line","Fragments":["28"]},{"Key":"line 28","Fragments":["to","you"]},{"Key":"28 to","Fragments":["be"]},{"Key":"be rewrriten","Fragments":["with"]},{"Key":"rewrriten with","Fragments":["`vec![0;"]},{"Key":"with `vec![0;","Fragments":["8]`"]},{"Key":"`vec![0; 8]`","Fragments":["so"]},{"Key":"8]` so","Fragments":["I"]},{"Key":"to count","Fragments":["zeros","up"]},{"Key":"count zeros","Fragments":["to"]},{"Key":"zeros to","Fragments":["confirm"]},{"Key":"to confirm","Fragments":["the"]},{"Key":"confirm the","Fragments":["length"]},{"Key":"the length","Fragments":["of"]},{"Key":"length of","Fragments":["the"]},{"Key":" Would","Fragments":["rather","it"]},{"Key":"Would rather","Fragments":["use"]},{"Key":"use filter()","Fragments":["instead"]},{"Key":"filter() instead","Fragments":["of"]},{"Key":"of fold()","Fragments":["in"]},{"Key":"fold() in","Fragments":["anagrams_for()."]},{"Key":"in anagrams_for().","Fragments":["Though,"]},{"Key":"anagrams_for(). Though,","Fragments":["I've"]},{"Key":"Though, I've","Fragments":["not"]},{"Key":"yet sussed","Fragments":["out"]},{"Key":"sussed out","Fragments":["how"]},{"Key":"make that","Fragments":["work"]},{"Key":"that work","Fragments":["with"]},{"Key":"return type.","Fragments":["And,"]},{"Key":"type. And,","Fragments":["would"]},{"Key":"And, would","Fragments":["rather"]},{"Key":"rather not","Fragments":["reprocess","have"]},{"Key":"not reprocess","Fragments":["letter_counts()"]},{"Key":"reprocess letter_counts()","Fragments":["of"]},{"Key":"letter_counts() of","Fragments":["the"]},{"Key":"the word","Fragments":["for"]},{"Key":"word for","Fragments":["every"]},{"Key":"every candidate.","Fragments":["Left"]},{"Key":"candidate. Left","Fragments":["it"]},{"Key":"Left it","Fragments":["as"]},{"Key":"as is","Fragments":["for"]},{"Key":"for now","Fragments":["in"]},{"Key":"now in","Fragments":["favor","Rust"]},{"Key":"in favor","Fragments":["of"]},{"Key":"favor of","Fragments":["having"]},{"Key":"of having","Fragments":["a","to"]},{"Key":"more reasonable","Fragments":["is_anagram()"]},{"Key":"reasonable is_anagram()","Fragments":["function"]},{"Key":"is_anagram() function","Fragments":["signature."]},{"Key":"lifetime from","Fragments":["the"]},{"Key":"the anagrams_for()","Fragments":["signature."]},{"Key":"anagrams_for() signature.","Fragments":["I"]},{"Key":"signature. I","Fragments":["think"]},{"Key":"might involve","Fragments":["copying"]},{"Key":"involve copying","Fragments":["the"]},{"Key":"copying the","Fragments":["strings"]},{"Key":"the strings","Fragments":["in","doesn't","for","to","are","are"]},{"Key":"strings in","Fragments":["the"]},{"Key":"result set.","Fragments":["For"]},{"Key":"set. For","Fragments":["the"]},{"Key":"test data","Fragments":["that"]},{"Key":"data that","Fragments":["would"]},{"Key":"that would","Fragments":["be","be","make","wrap","be","cost","be"]},{"Key":"be ok.","Fragments":["But,"]},{"Key":"ok. But,","Fragments":["I'd"]},{"Key":"But, I'd","Fragments":["guess"]},{"Key":"I'd guess","Fragments":["not"]},{"Key":"guess not","Fragments":["in"]},{"Key":"not in","Fragments":["the","the"]},{"Key":"the general","Fragments":["case."]},{"Key":" On","Fragments":["the","one","the","line"]},{"Key":"On the","Fragments":["upside","other","plus","other"]},{"Key":"the upside","Fragments":["it"]},{"Key":"upside it","Fragments":["passes"]},{"Key":"it passes","Fragments":["the","more","the"]},{"Key":"passes the","Fragments":["tests","first","test,","testsuite)"]},{"Key":"tests and","Fragments":["is"]},{"Key":"is fairly","Fragments":["readable."]},{"Key":"The nested","Fragments":["```if```s"]},{"Key":"nested ```if```s","Fragments":["make"]},{"Key":"```if```s make","Fragments":["this"]},{"Key":"this less","Fragments":["readable"]},{"Key":" Totally","Fragments":["agree,"]},{"Key":"Totally agree,","Fragments":["it"]},{"Key":"agree, it","Fragments":["evens"]},{"Key":"it evens","Fragments":["hurts"]},{"Key":"evens hurts","Fragments":["the"]},{"Key":"hurts the","Fragments":["eyes."]},{"Key":"the eyes.","Fragments":["Working"]},{"Key":"eyes. Working","Fragments":["on"]},{"Key":"Working on","Fragments":["it."]},{"Key":"on it.","Fragments":["Thinking"]},{"Key":"it. Thinking","Fragments":["maybe"]},{"Key":"Thinking maybe","Fragments":["a"]},{"Key":"maybe a","Fragments":["better","macro"]},{"Key":"do it","Fragments":["would","this","so","all","without","more"]},{"Key":"be using","Fragments":["logic"]},{"Key":"using logic","Fragments":["gates"]},{"Key":"logic gates","Fragments":["but"]},{"Key":"gates but","Fragments":["so"]},{"Key":"but so","Fragments":["far","far"]},{"Key":"so far","Fragments":["haven't","I"]},{"Key":"far haven't","Fragments":["got"]},{"Key":"haven't got","Fragments":["it."]},{"Key":" Don't","Fragments":["make"]},{"Key":"Don't make","Fragments":["it"]},{"Key":"it too","Fragments":["complicated"]},{"Key":"too complicated","Fragments":["-"]},{"Key":"complicated -","Fragments":["it's"]},{"Key":"- it's","Fragments":["actually","hard"]},{"Key":"it's actually","Fragments":["a"]},{"Key":"actually a","Fragments":["1-liner.","leap","trait."]},{"Key":"I scrapped","Fragments":["the"]},{"Key":"scrapped the","Fragments":["whole"]},{"Key":"whole thing","Fragments":["because","as"]},{"Key":"thing because","Fragments":["asserteq!"]},{"Key":"because asserteq!","Fragments":["didn't"]},{"Key":"asserteq! didn't","Fragments":["make"]},{"Key":"didn't make","Fragments":["sense","the"]},{"Key":"make sense","Fragments":["to","to"]},{"Key":"me. So","Fragments":["I"]},{"Key":"a different","Fragments":["strategy,","problem","data","boolean","order...","structure"]},{"Key":"different strategy,","Fragments":["similar"]},{"Key":"strategy, similar","Fragments":["to"]},{"Key":"to rust-lang","Fragments":["documentation,"]},{"Key":"rust-lang documentation,","Fragments":["guessing"]},{"Key":"documentation, guessing","Fragments":["game."]},{"Key":"me know","Fragments":["what","if","that","if"]},{"Key":"know what","Fragments":["you"]},{"Key":" Plus,","Fragments":["I"]},{"Key":"Plus, I","Fragments":["always"]},{"Key":"always get","Fragments":["this"]},{"Key":"get this","Fragments":["error","exercise","align","to","working!"]},{"Key":"this error","Fragments":["which"]},{"Key":"error which","Fragments":["I"]},{"Key":"have no","Fragments":["clue","idea","idea"]},{"Key":"no clue","Fragments":["how"]},{"Key":"clue how","Fragments":["to"]},{"Key":"\u003e error:","Fragments":["can't"]},{"Key":"error: can't","Fragments":["find"]},{"Key":"find crate","Fragments":["for"]},{"Key":"crate for","Fragments":["'leap';"]},{"Key":"read the","Fragments":["stdin.","rules,","[iterator"]},{"Key":"the stdin.","Fragments":["You"]},{"Key":"stdin. You","Fragments":["have"]},{"Key":"You have","Fragments":["to","an"]},{"Key":"to pass","Fragments":["the","the","so"]},{"Key":"tests defined","Fragments":["in"]},{"Key":"defined in","Fragments":["tests/leap.rs"]},{"Key":"in tests/leap.rs","Fragments":["file"]},{"Key":"tests/leap.rs file","Fragments":["which"]},{"Key":"file which","Fragments":["refers"]},{"Key":"which refers","Fragments":["to"]},{"Key":"refers to","Fragments":["leap::is_leap_year()"]},{"Key":"to leap::is_leap_year()","Fragments":["and"]},{"Key":"leap::is_leap_year() and","Fragments":["gives"]},{"Key":"and gives","Fragments":["an"]},{"Key":"gives an","Fragments":["integer"]},{"Key":"an integer","Fragments":["input","input"]},{"Key":"integer input","Fragments":["and","and"]},{"Key":"input and","Fragments":["compares","outputs","seeing","output."]},{"Key":"and compares","Fragments":["the"]},{"Key":"compares the","Fragments":["output"]},{"Key":"the output","Fragments":["to","vector"]},{"Key":"output to","Fragments":["bool."]},{"Key":" So,","Fragments":["in","in"]},{"Key":"So, in","Fragments":["the","Rust,"]},{"Key":"the leap","Fragments":["directory,","year","year","year"]},{"Key":"leap directory,","Fragments":["create"]},{"Key":"directory, create","Fragments":["a"]},{"Key":"a src","Fragments":["folder"]},{"Key":"src folder","Fragments":["and"]},{"Key":"folder and","Fragments":["in"]},{"Key":"in it","Fragments":["create","were"]},{"Key":"it create","Fragments":["a"]},{"Key":"a file","Fragments":["called"]},{"Key":"file called","Fragments":["lib.rs."]},{"Key":"called lib.rs.","Fragments":["In"]},{"Key":"lib.rs. In","Fragments":["this"]},{"Key":"this define","Fragments":["is_leap_year"]},{"Key":"define is_leap_year","Fragments":["function"]},{"Key":"is_leap_year function","Fragments":["which"]},{"Key":"function which","Fragments":["accepts"]},{"Key":"which accepts","Fragments":["an"]},{"Key":"accepts an","Fragments":["integer"]},{"Key":"and outputs","Fragments":["a","are"]},{"Key":"outputs a","Fragments":["boolean"]},{"Key":"boolean value.","Fragments":["Then"]},{"Key":"value. Then","Fragments":["run"]},{"Key":"Then run","Fragments":["cargo"]},{"Key":"run cargo","Fragments":["test"]},{"Key":"cargo test","Fragments":["to","--release`"]},{"Key":"test to","Fragments":["check","call"]},{"Key":"check you","Fragments":["results."]},{"Key":"I reworked","Fragments":["the"]},{"Key":"reworked the","Fragments":["`hex_to_int()`"]},{"Key":"the `hex_to_int()`","Fragments":["function,"]},{"Key":"`hex_to_int()` function,","Fragments":["but"]},{"Key":"function, but","Fragments":["I","I","I"]},{"Key":"not use","Fragments":["flat_map","external","it.","whitespace"]},{"Key":"use flat_map","Fragments":["as"]},{"Key":"flat_map as","Fragments":["suggested"]},{"Key":"as suggested","Fragments":["because","above."]},{"Key":"suggested because","Fragments":["flat_map"]},{"Key":"because flat_map","Fragments":["discards"]},{"Key":"flat_map discards","Fragments":["failed"]},{"Key":"discards failed","Fragments":["conversions"]},{"Key":"failed conversions","Fragments":["and"]},{"Key":"conversions and","Fragments":["I"]},{"Key":"correct behavior","Fragments":["in"]},{"Key":"behavior in","Fragments":["this"]},{"Key":"case would","Fragments":["be"]},{"Key":"to refuse","Fragments":["to"]},{"Key":"refuse to","Fragments":["convert"]},{"Key":"convert a","Fragments":["value"]},{"Key":"value if","Fragments":["any"]},{"Key":"if any","Fragments":["of"]},{"Key":"the characters","Fragments":["in","instead"]},{"Key":"characters in","Fragments":["it","Rust","some"]},{"Key":"it were","Fragments":["invalid.","public","to"]},{"Key":"The update","Fragments":["gave"]},{"Key":"update gave","Fragments":["me"]},{"Key":"gave me","Fragments":["a","0.271"]},{"Key":"a chance","Fragments":["to"]},{"Key":"chance to","Fragments":["use"]},{"Key":"use `.enumerate()`","Fragments":["to"]},{"Key":"`.enumerate()` to","Fragments":["pair"]},{"Key":"to pair","Fragments":["values"]},{"Key":"pair values","Fragments":["with"]},{"Key":"values with","Fragments":["their","your"]},{"Key":"with their","Fragments":["places,"]},{"Key":"their places,","Fragments":["and"]},{"Key":"places, and","Fragments":["I"]},{"Key":"think that's","Fragments":["an","the"]},{"Key":"that's an","Fragments":["improvement,"]},{"Key":"improvement, at","Fragments":["least."]},{"Key":"statement can","Fragments":["still"]},{"Key":"can still","Fragments":["be","make"]},{"Key":"still be","Fragments":["replaced"]},{"Key":"replaced by","Fragments":["some","`keys.cloned()`."]},{"Key":"by some","Fragments":["int","more"]},{"Key":"some int","Fragments":["arithmetic"]},{"Key":"int arithmetic","Fragments":["which"]},{"Key":"arithmetic which","Fragments":["would"]},{"Key":"be less","Fragments":["repetitious."]},{"Key":"Also accumulating","Fragments":["the"]},{"Key":"accumulating the","Fragments":["answer"]},{"Key":"the answer","Fragments":["by","to","is","I","is"]},{"Key":"answer by","Fragments":["folding"]},{"Key":"by folding","Fragments":["over"]},{"Key":"folding over","Fragments":["```16*sum+n```"]},{"Key":"over ```16*sum+n```","Fragments":["should"]},{"Key":"```16*sum+n``` should","Fragments":["be"]},{"Key":"faster then","Fragments":["using"]},{"Key":"then using","Fragments":["```pow```"]},{"Key":"using ```pow```","Fragments":["(I've"]},{"Key":"```pow``` (I've","Fragments":["not"]},{"Key":"(I've not","Fragments":["bench","tried"]},{"Key":"not bench","Fragments":["tested"]},{"Key":"bench tested","Fragments":["that"]},{"Key":"tested that","Fragments":["but"]},{"Key":"that but","Fragments":["it"]},{"Key":"seems very","Fragments":["likely)."]},{"Key":"Yes, the","Fragments":["arithmetic"]},{"Key":"arithmetic would","Fragments":["be"]},{"Key":"be shorter,","Fragments":["but"]},{"Key":"shorter, but","Fragments":["I","is"]},{"Key":"work out","Fragments":["how"]},{"Key":"how much","Fragments":["to","I"]},{"Key":"much to","Fragments":["add","say"]},{"Key":"add or","Fragments":["take"]},{"Key":"or take","Fragments":["away"]},{"Key":"take away","Fragments":["from"]},{"Key":"from each","Fragments":["letter","vertex","`\u0026\u0026str`"]},{"Key":"each letter","Fragments":["to"]},{"Key":"letter to","Fragments":["arrive"]},{"Key":"to arrive","Fragments":["at"]},{"Key":"arrive at","Fragments":["the"]},{"Key":"the appropriate","Fragments":["value","index,"]},{"Key":"appropriate value","Fragments":["(laziness,"]},{"Key":"value (laziness,","Fragments":["you"]},{"Key":"(laziness, you","Fragments":["see."]},{"Key":"you see.","Fragments":[":P),"]},{"Key":"see. :P),","Fragments":["so"]},{"Key":":P), so","Fragments":["I"]},{"Key":"I justified","Fragments":["this"]},{"Key":"justified this","Fragments":["design"]},{"Key":"this design","Fragments":["choice"]},{"Key":"design choice","Fragments":["by"]},{"Key":"choice by","Fragments":["making"]},{"Key":"by making","Fragments":["'A'"]},{"Key":"making 'A'","Fragments":["and"]},{"Key":"'A' and","Fragments":["'a'"]},{"Key":"and 'a'","Fragments":["equivalent"]},{"Key":"'a' equivalent","Fragments":["in"]},{"Key":"equivalent in","Fragments":["the"]},{"Key":"the match","Fragments":["statement.","in"]},{"Key":"match statement.","Fragments":[":P"]},{"Key":"you mean","Fragments":["by","by"]},{"Key":"mean by","Fragments":["16","that,"]},{"Key":"16 *","Fragments":["sum"]},{"Key":"* sum","Fragments":["+"]},{"Key":"sum +","Fragments":["n,","i).pow(2)"]},{"Key":"+ n,","Fragments":["but"]},{"Key":"n, but","Fragments":["I'm"]},{"Key":"sure that","Fragments":["a"]},{"Key":"a multiplication","Fragments":["operation"]},{"Key":"multiplication operation","Fragments":["would"]},{"Key":"be much","Fragments":["faster","more"]},{"Key":"much faster","Fragments":["than","than","with"]},{"Key":"a call","Fragments":["to"]},{"Key":"to `pow()`.","Fragments":["You're"]},{"Key":"`pow()`. You're","Fragments":["suggesting"]},{"Key":"You're suggesting","Fragments":["converting"]},{"Key":"suggesting converting","Fragments":["each"]},{"Key":"each numeral","Fragments":["0-f"]},{"Key":"numeral 0-f","Fragments":["to"]},{"Key":"0-f to","Fragments":["a"]},{"Key":"value 0-16","Fragments":["and"]},{"Key":"0-16 and","Fragments":["then"]},{"Key":"then adding","Fragments":["that"]},{"Key":"adding that","Fragments":["straight"]},{"Key":"that straight","Fragments":["to"]},{"Key":"straight to","Fragments":["the"]},{"Key":"the sum","Fragments":["after","by","of","of","of"]},{"Key":"sum after","Fragments":["multiplying"]},{"Key":"after multiplying","Fragments":["the"]},{"Key":"multiplying the","Fragments":["sum","tally"]},{"Key":"sum by","Fragments":["16?"]},{"Key":" Ok.","Fragments":["Like"]},{"Key":"Ok. Like","Fragments":["I"]},{"Key":"Like I","Fragments":["say"]},{"Key":"I say","Fragments":["in"]},{"Key":"say in","Fragments":["the"]},{"Key":"comment, I","Fragments":["don't"]},{"Key":"like naming","Fragments":["these"]},{"Key":"naming these","Fragments":["constants"]},{"Key":"these constants","Fragments":["all"]},{"Key":"constants all","Fragments":["that"]},{"Key":"all that","Fragments":["much.","difficult--for"]},{"Key":"that much.","Fragments":["Especially"]},{"Key":"much. Especially","Fragments":["now,"]},{"Key":"Especially now,","Fragments":["in"]},{"Key":"now, in","Fragments":["retrospect,"]},{"Key":"in retrospect,","Fragments":["because"]},{"Key":"retrospect, because","Fragments":["now"]},{"Key":"because now","Fragments":["I"]},{"Key":"now I","Fragments":["realize","have","wish"]},{"Key":"I realize","Fragments":["that","it's"]},{"Key":"realize that","Fragments":["I"]},{"Key":"don't remember","Fragments":["exactly"]},{"Key":"remember exactly","Fragments":["what"]},{"Key":"exactly what","Fragments":["the","it","this"]},{"Key":"the numbers","Fragments":["were,","0"]},{"Key":"numbers were,","Fragments":["and"]},{"Key":"were, and","Fragments":["it"]},{"Key":"seems like","Fragments":["I","there","a","that"]},{"Key":"like I","Fragments":["should","could","didn't","did."]},{"Key":"have kept","Fragments":["that"]},{"Key":"kept that","Fragments":["information"]},{"Key":"that information","Fragments":["around."]},{"Key":"information around.","Fragments":[":)"]},{"Key":"understand how","Fragments":["this"]},{"Key":"how this","Fragments":["magic","can","leverages","is","could","could"]},{"Key":"this magic","Fragments":["math"]},{"Key":"magic math","Fragments":["works."]},{"Key":"math works.","Fragments":["Why"]},{"Key":"works. Why","Fragments":["does"]},{"Key":"Why does","Fragments":["multiplying"]},{"Key":"does multiplying","Fragments":["the"]},{"Key":"the tally","Fragments":["by"]},{"Key":"tally by","Fragments":["16"]},{"Key":"16 for","Fragments":["each"]},{"Key":"each place","Fragments":["give"]},{"Key":"place give","Fragments":["the"]},{"Key":"give the","Fragments":["correct","simple","correct","correct"]},{"Key":"correct answer?","Fragments":["Why"]},{"Key":"answer? Why","Fragments":["do"]},{"Key":"Why do","Fragments":["marshmallows","you","you"]},{"Key":"do marshmallows","Fragments":["taste"]},{"Key":"marshmallows taste","Fragments":["better"]},{"Key":"taste better","Fragments":["in"]},{"Key":"better in","Fragments":["hot","the"]},{"Key":"in hot","Fragments":["chocolate?"]},{"Key":"hot chocolate?","Fragments":["Nature"]},{"Key":"chocolate? Nature","Fragments":["keeps"]},{"Key":"Nature keeps","Fragments":["many"]},{"Key":"keeps many","Fragments":["secrets,"]},{"Key":"many secrets,","Fragments":["and"]},{"Key":"secrets, and","Fragments":["some"]},{"Key":"and some","Fragments":["of","of","matching."]},{"Key":"of them","Fragments":["she"]},{"Key":"them she","Fragments":["will"]},{"Key":"she will","Fragments":["take"]},{"Key":"take to","Fragments":["her"]},{"Key":"to her","Fragments":["grave."]},{"Key":" Range","Fragments":["matching"]},{"Key":"Range matching","Fragments":["looks"]},{"Key":"matching looks","Fragments":["quite"]},{"Key":"I never","Fragments":["remember","succeeded"]},{"Key":"never remember","Fragments":["'a'"]},{"Key":"remember 'a'","Fragments":["or"]},{"Key":"'a' or","Fragments":["'f'"]},{"Key":"or 'f'","Fragments":["in"]},{"Key":"'f' in","Fragments":["Ascii,"]},{"Key":"in Ascii,","Fragments":["so"]},{"Key":"Ascii, so","Fragments":["those"]},{"Key":"so those","Fragments":["constants"]},{"Key":"those constants","Fragments":["are"]},{"Key":"constants are","Fragments":["quite"]},{"Key":"are quite","Fragments":["handy"]},{"Key":"quite handy","Fragments":["for"]},{"Key":"handy for","Fragments":["me."]},{"Key":" gen_range","Fragments":["generates","is"]},{"Key":"gen_range generates","Fragments":["values"]},{"Key":"generates values","Fragments":["up"]},{"Key":"values up","Fragments":["to"]},{"Key":"to but","Fragments":["not"]},{"Key":"not including","Fragments":["the"]},{"Key":"including the","Fragments":["second"]},{"Key":"the second","Fragments":["parameter.","parameter"]},{"Key":"second parameter.","Fragments":["So"]},{"Key":"parameter. So","Fragments":["your"]},{"Key":"So your","Fragments":["robot"]},{"Key":"robot name","Fragments":["will","will"]},{"Key":"name will","Fragments":["never","never"]},{"Key":"never contain","Fragments":["z","Z"]},{"Key":"contain z","Fragments":["or"]},{"Key":"z or","Fragments":["9."]},{"Key":" (I","Fragments":["made"]},{"Key":"(I made","Fragments":["the"]},{"Key":"made the","Fragments":["same","function,"]},{"Key":"same mistake","Fragments":["in"]},{"Key":"mistake in","Fragments":["my"]},{"Key":"Small change","Fragments":["inspired"]},{"Key":"change inspired","Fragments":["by"]},{"Key":"inspired by","Fragments":["another"]},{"Key":"by another","Fragments":["solution"]},{"Key":"another solution","Fragments":["I","that"]},{"Key":"just looked","Fragments":["at.","at"]},{"Key":" What's","Fragments":["the","the"]},{"Key":"What's the","Fragments":["semantic","difference","reasoning"]},{"Key":"the semantic","Fragments":["meaning"]},{"Key":"semantic meaning","Fragments":["behind"]},{"Key":"meaning behind","Fragments":["`prefix`"]},{"Key":"behind `prefix`","Fragments":["in"]},{"Key":"`prefix` in","Fragments":["your"]},{"Key":"in your","Fragments":["robot","code","match","is_uppercase","face"]},{"Key":"robot naming","Fragments":["system?"]},{"Key":"naming system?","Fragments":["After"]},{"Key":"system? After","Fragments":["each"]},{"Key":"After each","Fragments":["rename"]},{"Key":"each rename","Fragments":["the"]},{"Key":"rename the","Fragments":["first"]},{"Key":"first character","Fragments":["would"]},{"Key":"character would","Fragments":["stay"]},{"Key":"would stay","Fragments":["the"]},{"Key":"stay the","Fragments":["same?"]},{"Key":"Well, you","Fragments":["see,"]},{"Key":"you see,","Fragments":["in"]},{"Key":"see, in","Fragments":["the"]},{"Key":"the year","Fragments":["2427,","can","to"]},{"Key":"year 2427,","Fragments":["following"]},{"Key":"2427, following","Fragments":["the"]},{"Key":"following the","Fragments":["Summer","lifetimes"]},{"Key":"the Summer","Fragments":["Riots"]},{"Key":"Summer Riots","Fragments":["in"]},{"Key":"Riots in","Fragments":["Boston,"]},{"Key":"in Boston,","Fragments":["New"]},{"Key":"Boston, New","Fragments":["York,"]},{"Key":"New York,","Fragments":["New"]},{"Key":"York, New","Fragments":["Jersey,"]},{"Key":"New Jersey,","Fragments":["and"]},{"Key":"Jersey, and","Fragments":["Portland,"]},{"Key":"and Portland,","Fragments":["the"]},{"Key":"Portland, the","Fragments":["Senate"]},{"Key":"the Senate","Fragments":["passed"]},{"Key":"Senate passed","Fragments":["a"]},{"Key":"passed a","Fragments":["law"]},{"Key":"a law","Fragments":["requiring"]},{"Key":"law requiring","Fragments":["that"]},{"Key":"requiring that","Fragments":["all"]},{"Key":"that all","Fragments":["robots"]},{"Key":"all robots","Fragments":["be"]},{"Key":"robots be","Fragments":["named"]},{"Key":"be named","Fragments":["according"]},{"Key":"named according","Fragments":["to"]},{"Key":"to readily","Fragments":["identifiable"]},{"Key":"readily identifiable","Fragments":["categories."]},{"Key":"identifiable categories.","Fragments":["For"]},{"Key":"categories. For","Fragments":["instance,"]},{"Key":"For instance,","Fragments":["a"]},{"Key":"instance, a","Fragments":["Type"]},{"Key":"a Type","Fragments":["U","error"]},{"Key":"Type U","Fragments":["robot"]},{"Key":"U robot","Fragments":["may"]},{"Key":"robot may","Fragments":["be"]},{"Key":"be allowed","Fragments":["in"]},{"Key":"allowed in","Fragments":["densely","rural"]},{"Key":"in densely","Fragments":["populated"]},{"Key":"densely populated","Fragments":["urban"]},{"Key":"populated urban","Fragments":["areas"]},{"Key":"urban areas","Fragments":["provided"]},{"Key":"areas provided","Fragments":["that"]},{"Key":"provided that","Fragments":["it"]},{"Key":"not congregate","Fragments":["with"]},{"Key":"congregate with","Fragments":["other"]},{"Key":"with other","Fragments":["robots,","languages"]},{"Key":"other robots,","Fragments":["whereas"]},{"Key":"robots, whereas","Fragments":["a"]},{"Key":"whereas a","Fragments":["type"]},{"Key":"a type","Fragments":["R","in"]},{"Key":"type R","Fragments":["robot"]},{"Key":"R robot","Fragments":["is"]},{"Key":"robot is","Fragments":["only"]},{"Key":"is only","Fragments":["allowed","ever","used","there"]},{"Key":"only allowed","Fragments":["in"]},{"Key":"in rural","Fragments":["areas,"]},{"Key":"rural areas,","Fragments":["regardless"]},{"Key":"areas, regardless","Fragments":["of"]},{"Key":"regardless of","Fragments":["whether"]},{"Key":"of whether","Fragments":["or"]},{"Key":"whether or","Fragments":["not","not"]},{"Key":"not it","Fragments":["attempts"]},{"Key":"it attempts","Fragments":["to"]},{"Key":"to congregate,","Fragments":["and..."]},{"Key":"...I just","Fragments":["thought"]},{"Key":"thought it","Fragments":["was","made","would"]},{"Key":"was cool,","Fragments":["and"]},{"Key":"cool, and","Fragments":["the"]},{"Key":"the spec","Fragments":["didn't"]},{"Key":"spec didn't","Fragments":["do"]},{"Key":"didn't do","Fragments":["anything","it"]},{"Key":"do anything","Fragments":["to"]},{"Key":"anything to","Fragments":["disallow"]},{"Key":"to disallow","Fragments":["it,"]},{"Key":"disallow it,","Fragments":["so"]},{"Key":"it, so","Fragments":["I"]},{"Key":"this version","Fragments":["I","is","much"]},{"Key":"version I","Fragments":["derived","like"]},{"Key":"I derived","Fragments":["copy,"]},{"Key":"derived copy,","Fragments":["which"]},{"Key":"copy, which","Fragments":["allowed"]},{"Key":"which allowed","Fragments":["me"]},{"Key":"allowed me","Fragments":["to","to"]},{"Key":"the *","Fragments":["deference","dereferences."]},{"Key":"* deference","Fragments":["operator"]},{"Key":"deference operator","Fragments":["rather"]},{"Key":"operator rather","Fragments":["than"]},{"Key":"clone function,","Fragments":["I'm"]},{"Key":"function, I'm","Fragments":["not"]},{"Key":"is better.","Fragments":["It's"]},{"Key":"better. It's","Fragments":["shorter,"]},{"Key":"It's shorter,","Fragments":["but"]},{"Key":"is it","Fragments":["less","makes"]},{"Key":"it less","Fragments":["clear","clear."]},{"Key":"less clear","Fragments":["what's"]},{"Key":"clear what's","Fragments":["going"]},{"Key":"going on.","Fragments":["Maybe"]},{"Key":"on. Maybe","Fragments":["not","randomName"]},{"Key":"Maybe not","Fragments":["to"]},{"Key":"to someone","Fragments":["who's"]},{"Key":"someone who's","Fragments":["written"]},{"Key":"who's written","Fragments":["more"]},{"Key":"written more","Fragments":["rust"]},{"Key":"more rust","Fragments":["than"]},{"Key":"rust than","Fragments":["me."]},{"Key":"probably would","Fragments":["split"]},{"Key":"would split","Fragments":["the"]},{"Key":"split the","Fragments":["lowercasing"]},{"Key":"the lowercasing","Fragments":["and"]},{"Key":"lowercasing and","Fragments":["sorting"]},{"Key":"and sorting","Fragments":["into","the","before","original"]},{"Key":"sorting into","Fragments":["two"]},{"Key":"into two","Fragments":["functions."]},{"Key":"two functions.","Fragments":["Passing"]},{"Key":"functions. Passing","Fragments":["boolean"]},{"Key":"Passing boolean","Fragments":["parameters"]},{"Key":"boolean parameters","Fragments":["like"]},{"Key":"parameters like","Fragments":["that"]},{"Key":"like that","Fragments":["makes","I","I","syntax.","you","there's","the","there","I"]},{"Key":"makes for","Fragments":["unreadable","a"]},{"Key":"for unreadable","Fragments":["code."]},{"Key":"unreadable code.","Fragments":["What's"]},{"Key":"code. What's","Fragments":["the"]},{"Key":"between to_lowercase(s,","Fragments":["true)"]},{"Key":"to_lowercase(s, true)","Fragments":["and"]},{"Key":"true) and","Fragments":["to_lowercase(s,"]},{"Key":"and to_lowercase(s,","Fragments":["false)?"]},{"Key":"to_lowercase(s, false)?","Fragments":["You"]},{"Key":"false)? You","Fragments":["need"]},{"Key":"You need","Fragments":["to","the"]},{"Key":"to look","Fragments":["at","it","at","at","at","at","up,"]},{"Key":"function signature","Fragments":["to"]},{"Key":"signature to","Fragments":["find"]},{"Key":"Also you're","Fragments":["using"]},{"Key":"you're using","Fragments":["them","a"]},{"Key":"using them","Fragments":["independently"]},{"Key":"them independently","Fragments":["anyway,"]},{"Key":"independently anyway,","Fragments":["calling"]},{"Key":"anyway, calling","Fragments":["the"]},{"Key":"calling the","Fragments":["function"]},{"Key":"function twice","Fragments":["with"]},{"Key":"twice with","Fragments":["the"]},{"Key":"same string","Fragments":["argument,"]},{"Key":"string argument,","Fragments":["first"]},{"Key":"argument, first","Fragments":["with"]},{"Key":"first with","Fragments":["sorting,"]},{"Key":"with sorting,","Fragments":["then"]},{"Key":"sorting, then","Fragments":["without."]},{"Key":"then without.","Fragments":["If"]},{"Key":"without. If","Fragments":["you"]},{"Key":"you switch","Fragments":["that","them"]},{"Key":"switch that","Fragments":["around"]},{"Key":"that around","Fragments":["and"]},{"Key":"around and","Fragments":["call"]},{"Key":"call the","Fragments":["lowercase","same"]},{"Key":"the lowercase","Fragments":["function","equivalent","version"]},{"Key":"lowercase function","Fragments":["first,"]},{"Key":"function first,","Fragments":["binding"]},{"Key":"first, binding","Fragments":["the"]},{"Key":"binding the","Fragments":["result","lowercased"]},{"Key":"result and","Fragments":["then"]},{"Key":"new sort","Fragments":["function"]},{"Key":"sort function","Fragments":["with"]},{"Key":"function with","Fragments":["that","a","mutable"]},{"Key":"with that","Fragments":["result","value","`i`"]},{"Key":"that result","Fragments":["you"]},{"Key":"result you","Fragments":["even"]},{"Key":"you even","Fragments":["optimize","having"]},{"Key":"even optimize","Fragments":["the"]},{"Key":"optimize the","Fragments":["code:"]},{"Key":"the code:","Fragments":["it"]},{"Key":"code: it","Fragments":["will"]},{"Key":"will lowercase","Fragments":["only"]},{"Key":"lowercase only","Fragments":["once"]},{"Key":"only once","Fragments":["instead","at","(although"]},{"Key":"once instead","Fragments":["of"]},{"Key":" Agreed,","Fragments":["I"]},{"Key":"Agreed, I","Fragments":["didn't"]},{"Key":"didn't really","Fragments":["like"]},{"Key":"really like","Fragments":["how","the","implicit","the","how"]},{"Key":"I mixed","Fragments":["the"]},{"Key":"mixed the","Fragments":["two"]},{"Key":"the two","Fragments":["uses","words","```len```","separate"]},{"Key":"two uses","Fragments":["of"]},{"Key":"uses of","Fragments":["to_lowercase."]},{"Key":"of to_lowercase.","Fragments":["In"]},{"Key":"to_lowercase. In","Fragments":["my"]},{"Key":"next rev,","Fragments":["I"]},{"Key":"rev, I","Fragments":["changed"]},{"Key":"I changed","Fragments":["them","the","that,"]},{"Key":"changed them","Fragments":["to"]},{"Key":"them to","Fragments":["two","ints","create"]},{"Key":"to two","Fragments":["public"]},{"Key":"two public","Fragments":["functions"]},{"Key":"public functions","Fragments":["that","where"]},{"Key":"functions that","Fragments":["call"]},{"Key":"that call","Fragments":["the"]},{"Key":"same internal","Fragments":["function."]},{"Key":"this shows","Fragments":["that"]},{"Key":"shows that","Fragments":["my"]},{"Key":"that my","Fragments":["understanding","only"]},{"Key":"my understanding","Fragments":["of","too."]},{"Key":"understanding of","Fragments":["memory","iterators","matching"]},{"Key":"of memory","Fragments":["dynamics","consumption."]},{"Key":"memory dynamics","Fragments":["for"]},{"Key":"dynamics for","Fragments":["strings"]},{"Key":"for strings","Fragments":["is","to_lowercase()","to"]},{"Key":"strings is","Fragments":["still"]},{"Key":"still a","Fragments":["bit"]},{"Key":"bit weak.","Fragments":["But"]},{"Key":"weak. But","Fragments":["getting"]},{"Key":"But getting","Fragments":["stronger!"]},{"Key":" oops,","Fragments":["Allergen"]},{"Key":"oops, Allergen","Fragments":["enum"]},{"Key":"enum needs","Fragments":["to"]},{"Key":"the filter","Fragments":["closure.","returns","is","on"]},{"Key":"filter closure.","Fragments":["It"]},{"Key":"closure. It","Fragments":["seems"]},{"Key":"It seems","Fragments":["bloated.","like"]},{"Key":"could break","Fragments":["out"]},{"Key":"break out","Fragments":["some"]},{"Key":"out some","Fragments":["helper"]},{"Key":"some helper","Fragments":["functions"]},{"Key":"helper functions","Fragments":["to"]},{"Key":"functions to","Fragments":["tidy","longer"]},{"Key":"to tidy","Fragments":["up"]},{"Key":"tidy up","Fragments":["the"]},{"Key":"the closure.","Fragments":["E.g."]},{"Key":"closure. E.g.","Fragments":["a"]},{"Key":"E.g. a","Fragments":["to_uppercase"]},{"Key":"a to_uppercase","Fragments":["helper"]},{"Key":"to_uppercase helper","Fragments":["or"]},{"Key":"helper or","Fragments":["even"]},{"Key":"or even","Fragments":["a","`u16`"]},{"Key":"even a","Fragments":["to_uppercase_sorted.","bit"]},{"Key":"a to_uppercase_sorted.","Fragments":["Also"]},{"Key":"to_uppercase_sorted. Also","Fragments":["you"]},{"Key":"Also you","Fragments":["could"]},{"Key":"could calculate","Fragments":["word_chars"]},{"Key":"calculate word_chars","Fragments":["outside"]},{"Key":"word_chars outside","Fragments":["of"]},{"Key":"outside of","Fragments":["the","the"]},{"Key":"the closure","Fragments":["first.","parameter"]},{"Key":"That's quite","Fragments":["a"]},{"Key":"quite a","Fragments":["good","lot.","bit","bit."]},{"Key":" Now","Fragments":["it's","this","we've","the","we're","a","the"]},{"Key":"Now it's","Fragments":["more"]},{"Key":"more readable/more","Fragments":["like"]},{"Key":"readable/more like","Fragments":["english,"]},{"Key":"like english,","Fragments":["but"]},{"Key":"english, but","Fragments":["the"]},{"Key":"am unsure","Fragments":["and"]},{"Key":"unsure and","Fragments":["open"]},{"Key":"and open","Fragments":["for"]},{"Key":"open for","Fragments":["suggestions."]},{"Key":" small","Fragments":["nit,","modification,`"]},{"Key":"small nit,","Fragments":["you","you"]},{"Key":"nit, you","Fragments":["can","are"]},{"Key":"can replace","Fragments":["`.map(","`let","it","```n"]},{"Key":"replace `.map(","Fragments":["|k|"]},{"Key":"`.map( |k|","Fragments":["k.clone()"]},{"Key":"|k| k.clone()","Fragments":[")`"]},{"Key":"k.clone() )`","Fragments":["with"]},{"Key":")` with","Fragments":["`.cloned()`"]},{"Key":"exercise without","Fragments":["sorting."]},{"Key":"submission actually","Fragments":["fails"]},{"Key":"actually fails","Fragments":["the"]},{"Key":"fails the","Fragments":["first"]},{"Key":"first test","Fragments":["in"]},{"Key":"test in","Fragments":["the"]},{"Key":"the exercise","Fragments":["on","somewhat.","page,"]},{"Key":"exercise on","Fragments":["current"]},{"Key":"on current","Fragments":["Rust","nightly","implementations."]},{"Key":"current Rust","Fragments":["stable"]},{"Key":"Rust stable","Fragments":["(1.3)"]},{"Key":"stable (1.3)","Fragments":["and"]},{"Key":"(1.3) and","Fragments":["beta"]},{"Key":"and beta","Fragments":["(1.4)"]},{"Key":"beta (1.4)","Fragments":["because"]},{"Key":" causes","Fragments":["a"]},{"Key":"causes a","Fragments":["crash."]},{"Key":"a crash.","Fragments":["Debugging"]},{"Key":"crash. Debugging","Fragments":["in"]},{"Key":"Debugging in","Fragments":["lldb"]},{"Key":"in lldb","Fragments":["shows"]},{"Key":"lldb shows","Fragments":["the"]},{"Key":"shows the","Fragments":["following","leap","idea,"]},{"Key":"the following","Fragments":["error:","code","code","input"]},{"Key":"* thread","Fragments":["#2:"]},{"Key":"thread #2:","Fragments":["tid"]},{"Key":"#2: tid","Fragments":["="]},{"Key":"tid =","Fragments":["0x1f023e,"]},{"Key":"= 0x1f023e,","Fragments":["0x0000000100090563"]},{"Key":"0x1f023e, 0x0000000100090563","Fragments":["custom_set-7dff782d71f21e17`je_mallocx"]},{"Key":"0x0000000100090563 custom_set-7dff782d71f21e17`je_mallocx","Fragments":["[inlined]","[inlined]"]},{"Key":"custom_set-7dff782d71f21e17`je_mallocx [inlined]","Fragments":["je_small_size2bin_lookup(size=0)","je_small_size2bin_lookup(size=0)"]},{"Key":"[inlined] je_small_size2bin_lookup(size=0)","Fragments":["+","+"]},{"Key":"je_small_size2bin_lookup(size=0) +","Fragments":["15","15"]},{"Key":"+ 15","Fragments":["at","at"]},{"Key":"15 at","Fragments":["arena.h:502,","arena.h:502"]},{"Key":"at arena.h:502,","Fragments":["name"]},{"Key":"arena.h:502, name","Fragments":["="]},{"Key":"name =","Fragments":["'test_empty_set',"]},{"Key":"= 'test_empty_set',","Fragments":["stop"]},{"Key":"'test_empty_set', stop","Fragments":["reason"]},{"Key":"stop reason","Fragments":["="]},{"Key":"reason =","Fragments":["EXC_BAD_ACCESS"]},{"Key":"= EXC_BAD_ACCESS","Fragments":["(code=EXC_I386_GPFLT)"]},{"Key":" frame","Fragments":["#0:"]},{"Key":"frame #0:","Fragments":["0x0000000100090563"]},{"Key":"#0: 0x0000000100090563","Fragments":["custom_set-7dff782d71f21e17`je_mallocx"]},{"Key":" Several","Fragments":["other"]},{"Key":"Several other","Fragments":["collections"]},{"Key":"other collections","Fragments":["exhibit"]},{"Key":"collections exhibit","Fragments":["this"]},{"Key":"exhibit this","Fragments":["behavior"]},{"Key":"this behavior","Fragments":["too."]},{"Key":"behavior too.","Fragments":["This"]},{"Key":"too. This","Fragments":["crash"]},{"Key":"This crash","Fragments":["does"]},{"Key":"crash does","Fragments":["not"]},{"Key":"not happen","Fragments":["on"]},{"Key":"happen on","Fragments":["current"]},{"Key":"current nightly","Fragments":["(1.5)"]},{"Key":" Improve","Fragments":["performance"]},{"Key":"Improve performance","Fragments":["by"]},{"Key":"by skipping","Fragments":["the"]},{"Key":"skipping the","Fragments":["loop"]},{"Key":"loop if","Fragments":["the"]},{"Key":"the size","Fragments":["of","of","of","reads"]},{"Key":"size of","Fragments":["the","`x`","the"]},{"Key":"strings doesn't","Fragments":["match."]},{"Key":"There has","Fragments":["*got*","to"]},{"Key":"has *got*","Fragments":["to"]},{"Key":"*got* to","Fragments":["be"]},{"Key":"a 2-dimensional","Fragments":["vector."]},{"Key":"I got","Fragments":["your","stuck","to","it,"]},{"Key":"got your","Fragments":["solution"]},{"Key":"work without","Fragments":["the","explicitly"]},{"Key":"the double","Fragments":["for","check"]},{"Key":"double for","Fragments":["loop"]},{"Key":"for loop","Fragments":["using","in","over","by","and"]},{"Key":"loop using","Fragments":["a"]},{"Key":"fold inside","Fragments":["of"]},{"Key":"inside of","Fragments":["a","`grade()`"]},{"Key":"a fold,","Fragments":["as"]},{"Key":"fold, as","Fragments":["an"]},{"Key":"an added","Fragments":["bonus"]},{"Key":"added bonus","Fragments":["this"]},{"Key":"bonus this","Fragments":["got"]},{"Key":"this got","Fragments":["rid"]},{"Key":"got rid","Fragments":["of"]},{"Key":"map on","Fragments":["line"]},{"Key":" marked.iter().enumerate().fold(vec![],","Fragments":["|mut"]},{"Key":"marked.iter().enumerate().fold(vec![], |mut","Fragments":["acc,"]},{"Key":"|mut acc,","Fragments":["(row,"]},{"Key":"acc, (row,","Fragments":["x)|"]},{"Key":"(row, x)|","Fragments":["{"]},{"Key":" acc.push(x.iter().enumerate().fold(String::new(),","Fragments":["|mut"]},{"Key":"acc.push(x.iter().enumerate().fold(String::new(), |mut","Fragments":["string,"]},{"Key":"|mut string,","Fragments":["(col,"]},{"Key":"string, (col,","Fragments":["y)|"]},{"Key":"(col, y)|","Fragments":["{"]},{"Key":"if *y","Fragments":["!="]},{"Key":"*y !=","Fragments":["'*'"]},{"Key":"!= '*'","Fragments":["{"]},{"Key":"let c","Fragments":["="]},{"Key":"c =","Fragments":["std::char::from_digit(adj(\u0026marked,"]},{"Key":"= std::char::from_digit(adj(\u0026marked,","Fragments":["row,"]},{"Key":"std::char::from_digit(adj(\u0026marked, row,","Fragments":["col),"]},{"Key":"row, col),","Fragments":["10)"]},{"Key":" .expect(\"adj","Fragments":["returned"]},{"Key":".expect(\"adj returned","Fragments":["None\");"]},{"Key":"match c","Fragments":["{"]},{"Key":"=\u003e string.push('","Fragments":["'),"]},{"Key":" else","Fragments":["{","{"]},{"Key":" Apply","Fragments":["optimizations"]},{"Key":"Apply optimizations","Fragments":["suggested"]},{"Key":"optimizations suggested","Fragments":["by"]},{"Key":"suggested by","Fragments":["stevejb71"]},{"Key":"by stevejb71","Fragments":["and"]},{"Key":"stevejb71 and","Fragments":["petertseng,"]},{"Key":"and petertseng,","Fragments":["but"]},{"Key":"petertseng, but","Fragments":["keeping"]},{"Key":"but keeping","Fragments":["comparison"]},{"Key":"keeping comparison","Fragments":["algorithm."]},{"Key":"comparison algorithm.","Fragments":["I"]},{"Key":"algorithm. I","Fragments":["may"]},{"Key":"I may","Fragments":["attempt","refactor"]},{"Key":"may attempt","Fragments":["a"]},{"Key":"attempt a","Fragments":["sort-based"]},{"Key":"a sort-based","Fragments":["algorithm"]},{"Key":"sort-based algorithm","Fragments":["to"]},{"Key":"algorithm to","Fragments":["compare"]},{"Key":"to compare","Fragments":["which"]},{"Key":"compare which","Fragments":["is"]},{"Key":" Did","Fragments":["you"]},{"Key":"consider using","Fragments":["`std::ops::Range`","a"]},{"Key":"using `std::ops::Range`","Fragments":["\u0026"]},{"Key":"`std::ops::Range` \u0026","Fragments":["`fold`?"]},{"Key":"\u0026 `fold`?","Fragments":["It"]},{"Key":"`fold`? It","Fragments":["shortens"]},{"Key":"It shortens","Fragments":["the"]},{"Key":"shortens the","Fragments":["solution"]},{"Key":"the solution","Fragments":["considerably.","space.","I"]},{"Key":" Opted","Fragments":["not"]},{"Key":"Opted not","Fragments":["to"]},{"Key":"use iter.sum","Fragments":["because"]},{"Key":"iter.sum because","Fragments":["of"]},{"Key":"The `for","Fragments":["c"]},{"Key":"`for c","Fragments":["in"]},{"Key":"in candidates","Fragments":["{"]},{"Key":"candidates {","Fragments":["if"]},{"Key":"{ if","Fragments":["X"]},{"Key":"if X","Fragments":["..."]},{"Key":"X ...","Fragments":["{"]},{"Key":"... {","Fragments":["anagrams.push(...)"]},{"Key":"{ anagrams.push(...)","Fragments":["}}`"]},{"Key":"anagrams.push(...) }}`","Fragments":["pattern"]},{"Key":"}}` pattern","Fragments":["looks"]},{"Key":"pattern looks","Fragments":["like"]},{"Key":"like a","Fragments":["job","good","disaster.","natural","cross","LOT"]},{"Key":"a job","Fragments":["for"]},{"Key":"job for","Fragments":["[Iterator's"]},{"Key":"for [Iterator's","Fragments":["filter](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter)"]},{"Key":"[Iterator's filter](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter)","Fragments":["-"]},{"Key":"filter](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter) -","Fragments":["the"]},{"Key":"the [iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","Fragments":["has"]},{"Key":"[iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) has","Fragments":["many"]},{"Key":"has many","Fragments":["useful","convenient"]},{"Key":"many useful","Fragments":["things."]},{"Key":"In general,","Fragments":["if","whenever","I"]},{"Key":"general, if","Fragments":["I"]},{"Key":"a `if","Fragments":["X"]},{"Key":"`if X","Fragments":["{","{"]},{"Key":"X {","Fragments":["return","return"]},{"Key":"{ return","Fragments":["Y;","Y;","None;","false;","false;"]},{"Key":"return Y;","Fragments":["}","}"]},{"Key":"Y; }","Fragments":["else","Z`"]},{"Key":"{ Z","Fragments":["}`"]},{"Key":"Z }`","Fragments":["I"]},{"Key":"}` I","Fragments":["prefer"]},{"Key":"prefer to","Fragments":["have","name","align"]},{"Key":"have it","Fragments":["`if","handle"]},{"Key":"it `if","Fragments":["X"]},{"Key":"} Z`","Fragments":["to"]},{"Key":"Z` to","Fragments":["remove"]},{"Key":"remove one","Fragments":["level"]},{"Key":"one level","Fragments":["of"]},{"Key":"level of","Fragments":["indentation"]},{"Key":"of indentation","Fragments":["from"]},{"Key":"indentation from","Fragments":["the"]},{"Key":"the `Z`","Fragments":["(it's"]},{"Key":"`Z` (it's","Fragments":["implicit"]},{"Key":"(it's implicit","Fragments":["that"]},{"Key":"implicit that","Fragments":["it's"]},{"Key":"it's in","Fragments":["an"]},{"Key":"an `else`","Fragments":["because","because"]},{"Key":"`else` because","Fragments":["otherwise","the"]},{"Key":"because otherwise","Fragments":["we"]},{"Key":"otherwise we","Fragments":["would"]},{"Key":"we would","Fragments":["have"]},{"Key":"the feedback!","Fragments":["I","Let"]},{"Key":"feedback! I","Fragments":["wish","wasn't"]},{"Key":"wish exercism","Fragments":["had"]},{"Key":"exercism had","Fragments":["sent"]},{"Key":"had sent","Fragments":["me"]},{"Key":"sent me","Fragments":["an"]},{"Key":"me an","Fragments":["email"]},{"Key":"an email","Fragments":["so"]},{"Key":"email so","Fragments":["I"]},{"Key":"have responded","Fragments":["earlier."]},{"Key":" Actually,","Fragments":["I've"]},{"Key":"Actually, I've","Fragments":["tried"]},{"Key":"this with","Fragments":["iterators,"]},{"Key":"with iterators,","Fragments":["a","keeping"]},{"Key":"iterators, a","Fragments":["Filter"]},{"Key":"a Filter","Fragments":["specifically,","but"]},{"Key":"Filter specifically,","Fragments":["but"]},{"Key":"specifically, but","Fragments":["didn't"]},{"Key":"but didn't","Fragments":["get"]},{"Key":"didn't get","Fragments":["it"]},{"Key":"get it","Fragments":["to","done.","to","to","to","now.","done"]},{"Key":"to compile.","Fragments":["Sadly,"]},{"Key":"compile. Sadly,","Fragments":["I"]},{"Key":"Sadly, I","Fragments":["don't"]},{"Key":"have that","Fragments":["attempt",";)","one"]},{"Key":"that attempt","Fragments":["anymore.","worked,"]},{"Key":"attempt anymore.","Fragments":["Later"]},{"Key":"anymore. Later","Fragments":["I"]},{"Key":"Later I","Fragments":["came"]},{"Key":"I came","Fragments":["across","to"]},{"Key":"came across","Fragments":["the","[this"]},{"Key":"across the","Fragments":["FilterMap"]},{"Key":"the FilterMap","Fragments":["and","(which"]},{"Key":"FilterMap and","Fragments":["that"]},{"Key":"attempt worked,","Fragments":["I'll"]},{"Key":"worked, I'll","Fragments":["upload"]},{"Key":"I'll upload","Fragments":["that"]},{"Key":"upload that","Fragments":["as"]},{"Key":"that as","Fragments":["a","well."]},{"Key":"a second","Fragments":["iteration","iteration.","use","filter."]},{"Key":"second iteration","Fragments":["shortly."]},{"Key":"the if-else-thingy,","Fragments":["the"]},{"Key":"if-else-thingy, the","Fragments":["wonderful"]},{"Key":"the wonderful","Fragments":["[Leonie"]},{"Key":"wonderful [Leonie","Fragments":["Dreschler-Fischer](http://kogs-www.informatik.uni-hamburg.de/~dreschle/Home/home.html)"]},{"Key":"[Leonie Dreschler-Fischer](http://kogs-www.informatik.uni-hamburg.de/~dreschle/Home/home.html)","Fragments":["taught"]},{"Key":"Dreschler-Fischer](http://kogs-www.informatik.uni-hamburg.de/~dreschle/Home/home.html) taught","Fragments":["me"]},{"Key":"taught me","Fragments":["just"]},{"Key":"me just","Fragments":["the"]},{"Key":"just the","Fragments":["opposite:","ticket.","expression"]},{"Key":"the opposite:","Fragments":["The"]},{"Key":"opposite: The","Fragments":["indentation"]},{"Key":"The indentation","Fragments":["of"]},{"Key":"indentation of","Fragments":["both"]},{"Key":"of both","Fragments":["bodies"]},{"Key":"both bodies","Fragments":["makes"]},{"Key":"bodies makes","Fragments":["it"]},{"Key":"makes it","Fragments":["abundantly","longer","less","abundantly","easy","harder"]},{"Key":"it abundantly","Fragments":["clear","clear"]},{"Key":"abundantly clear","Fragments":["that","that"]},{"Key":"clear that","Fragments":["one","`canonical`"]},{"Key":"that one","Fragments":["or","after"]},{"Key":"one or","Fragments":["the","the","more"]},{"Key":"or the","Fragments":["other","other","other","examples"]},{"Key":"other gets","Fragments":["executed,"]},{"Key":"gets executed,","Fragments":["not"]},{"Key":"executed, not","Fragments":["both,"]},{"Key":"not both,","Fragments":["without"]},{"Key":"both, without","Fragments":["you"]},{"Key":"without you","Fragments":["even"]},{"Key":"even having","Fragments":["to"]},{"Key":"to scan","Fragments":["for"]},{"Key":"scan for","Fragments":["the"]},{"Key":"the return.","Fragments":["I've"]},{"Key":"return. I've","Fragments":["ever"]},{"Key":"ever since","Fragments":["adopted"]},{"Key":"since adopted","Fragments":["the"]},{"Key":"adopted the","Fragments":["style"]},{"Key":"the style","Fragments":["and","\"`if`","\"`if`","of"]},{"Key":"style and","Fragments":["am"]},{"Key":"and am","Fragments":["not"]},{"Key":"not going","Fragments":["back!"]},{"Key":"going back!","Fragments":[":)"]},{"Key":"calling ```to_lowercase```","Fragments":["on"]},{"Key":"on ```word```","Fragments":["more"]},{"Key":"```word``` more","Fragments":["times"]},{"Key":"more times","Fragments":["than","than","than","than"]},{"Key":"times than","Fragments":["is","is","you","is"]},{"Key":"than is","Fragments":["necessary.","necessary.","necessary.","necessary."]},{"Key":"Pretty understandable","Fragments":["I"]},{"Key":"understandable I","Fragments":["think."]},{"Key":"use is_empty","Fragments":["rather"]},{"Key":"is_empty rather","Fragments":["then"]},{"Key":"rather then","Fragments":["len()"]},{"Key":"then len()","Fragments":["=="]},{"Key":"len() ==","Fragments":["0"]},{"Key":"0 in","Fragments":["places."]},{"Key":"in places.","Fragments":["And"]},{"Key":"places. And","Fragments":["very"]},{"Key":"And very","Fragments":["much"]},{"Key":"much a","Fragments":["nitpick,"]},{"Key":"a nitpick,","Fragments":["but"]},{"Key":"nitpick, but","Fragments":["you"]},{"Key":"you spelt","Fragments":["occurrences"]},{"Key":"spelt occurrences","Fragments":["wrongly."]},{"Key":"Thanks @brandyn,","Fragments":["I"]},{"Key":"@brandyn, I","Fragments":["just"]},{"Key":"just pushed","Fragments":["a"]},{"Key":"new version","Fragments":["with","a"]},{"Key":"version with","Fragments":["your"]},{"Key":"with your","Fragments":["suggested","local"]},{"Key":"your suggested","Fragments":["changes."]},{"Key":"for return","Fragments":["statements"]},{"Key":"return statements","Fragments":["here,","throughout"]},{"Key":"statements here,","Fragments":["the"]},{"Key":"here, the","Fragments":["last"]},{"Key":"expression evaluated","Fragments":["in","in"]},{"Key":"evaluated in","Fragments":["a","a"]},{"Key":"the function's","Fragments":["return"]},{"Key":"function's return","Fragments":["value."]},{"Key":"I've struggled","Fragments":["a"]},{"Key":"struggled a","Fragments":["bit"]},{"Key":"bit with","Fragments":["lifetimes"]},{"Key":"with lifetimes","Fragments":["as"]},{"Key":"lifetimes as","Fragments":["I"]},{"Key":"wrote this","Fragments":["and"]},{"Key":"this and","Fragments":["now"]},{"Key":"and now","Fragments":["trying"]},{"Key":"now trying","Fragments":["to"]},{"Key":"just remove","Fragments":["all","the"]},{"Key":"remove all","Fragments":["the"]},{"Key":"the `'a`s","Fragments":["I"]},{"Key":"`'a`s I","Fragments":["find"]},{"Key":"find that","Fragments":["it"]},{"Key":"does indeed","Fragments":["not"]},{"Key":"indeed not","Fragments":["work,"]},{"Key":"not work,","Fragments":["I","however"]},{"Key":"work, I","Fragments":["get"]},{"Key":"I get","Fragments":["`src/lib.rs:1:61:","it"]},{"Key":"get `src/lib.rs:1:61:","Fragments":["1:65"]},{"Key":"`src/lib.rs:1:61: 1:65","Fragments":["error:"]},{"Key":"1:65 error:","Fragments":["missing"]},{"Key":"error: missing","Fragments":["lifetime"]},{"Key":"missing lifetime","Fragments":["specifier`"]},{"Key":"lifetime specifier`","Fragments":["and"]},{"Key":"specifier` and","Fragments":["a"]},{"Key":"whole lot","Fragments":["more","harder"]},{"Key":"more compiler","Fragments":["anger."]},{"Key":"for returning","Fragments":["just"]},{"Key":"returning just","Fragments":["a"]},{"Key":"bool, that's","Fragments":["how"]},{"Key":"that's how","Fragments":["I"]},{"Key":"I started","Fragments":["out","googling","off"]},{"Key":"started out","Fragments":["with"]},{"Key":"the `check_is_anagram`","Fragments":["function"]},{"Key":"`check_is_anagram` function","Fragments":["you"]},{"Key":"function you","Fragments":["see","defined."]},{"Key":"you see","Fragments":["in"]},{"Key":"see in","Fragments":["the"]},{"Key":"first iteration.","Fragments":["I","In"]},{"Key":"iteration. I","Fragments":["totally"]},{"Key":"totally failed","Fragments":["to"]},{"Key":"failed to","Fragments":["get","understand"]},{"Key":"Filter but","Fragments":["I"]},{"Key":"did with","Fragments":["the"]},{"Key":"FilterMap (which","Fragments":["requires"]},{"Key":"(which requires","Fragments":["me"]},{"Key":"requires me","Fragments":["to"]},{"Key":"return an","Fragments":["Option).","`Err()`,"]},{"Key":"an Option).","Fragments":["I'll"]},{"Key":"Option). I'll","Fragments":["give"]},{"Key":"I'll give","Fragments":["the"]},{"Key":"simple Filter","Fragments":["another"]},{"Key":"Filter another","Fragments":["go"]},{"Key":"another go","Fragments":["shortly,"]},{"Key":"go shortly,","Fragments":["I"]},{"Key":"shortly, I","Fragments":["agree"]},{"Key":"I agree","Fragments":["that'd","the","with","it's","with"]},{"Key":"agree that'd","Fragments":["be"]},{"Key":"that'd be","Fragments":["somewhat","great.","a"]},{"Key":"be somewhat","Fragments":["more"]},{"Key":"somewhat more","Fragments":["straightforward."]},{"Key":"need all","Fragments":["the","the"]},{"Key":"lifetime annotations,","Fragments":["they'll","but"]},{"Key":"annotations, they'll","Fragments":["be"]},{"Key":"they'll be","Fragments":["inferred."]},{"Key":"be inferred.","Fragments":["Same"]},{"Key":"inferred. Same","Fragments":["with"]},{"Key":"Same with","Fragments":["the"]},{"Key":"be simpler","Fragments":["to","too,","just","to"]},{"Key":"simpler to","Fragments":["return","simply","just","read."]},{"Key":"a bool","Fragments":["in"]},{"Key":"bool in","Fragments":["anagram_option."]},{"Key":" My","Fragments":["bad","current","first","thoughts","only"]},{"Key":"My bad","Fragments":["about"]},{"Key":"bad about","Fragments":["the"]},{"Key":"lifetime annotations","Fragments":["-"]},{"Key":"annotations -","Fragments":["I"]},{"Key":"think it'll","Fragments":["only"]},{"Key":"it'll only","Fragments":["infer"]},{"Key":"only infer","Fragments":["the"]},{"Key":"last line","Fragments":["(22)"]},{"Key":"line (22)","Fragments":["-"]},{"Key":"(22) -","Fragments":["and"]},{"Key":"- and","Fragments":["there"]},{"Key":"can likely","Fragments":["drop"]},{"Key":"likely drop","Fragments":["the"]},{"Key":"entire type","Fragments":["annotation"]},{"Key":"annotation to","Fragments":["collect()."]},{"Key":"This part","Fragments":["of"]},{"Key":"part of","Fragments":["the","the","the","the","the"]},{"Key":"the Rust","Fragments":["book","nightly","alpha"]},{"Key":"Rust book","Fragments":["explains"]},{"Key":"book explains","Fragments":["lifetime"]},{"Key":"explains lifetime","Fragments":["elision:"]},{"Key":"lifetime elision:","Fragments":["https://doc.rust-lang.org/nightly/book/lifetimes.html"]},{"Key":" It'll","Fragments":["also","be"]},{"Key":"It'll also","Fragments":["infer"]},{"Key":"also infer","Fragments":["part"]},{"Key":"infer part","Fragments":["of"]},{"Key":"annotations in","Fragments":["lines"]},{"Key":"lines 4","Fragments":["\u0026"]},{"Key":"4 \u0026","Fragments":["15"]},{"Key":"\u0026 15","Fragments":["-"]},{"Key":"15 -","Fragments":["you"]},{"Key":"- you","Fragments":["can","can","can"]},{"Key":"can write","Fragments":["```Vec\u003c_\u003e```","this"]},{"Key":"write ```Vec\u003c_\u003e```","Fragments":["which"]},{"Key":"```Vec\u003c_\u003e``` which","Fragments":["is"]},{"Key":"A ```filter```","Fragments":["is"]},{"Key":"```filter``` is","Fragments":["definitely"]},{"Key":"definitely simpler","Fragments":["-"]},{"Key":"simpler -","Fragments":["good"]},{"Key":"- good","Fragments":["luck"]},{"Key":"good luck","Fragments":["when"]},{"Key":"luck when","Fragments":["giving"]},{"Key":"when giving","Fragments":["it"]},{"Key":"giving it","Fragments":["another"]},{"Key":"it another","Fragments":["go!"]},{"Key":" improved","Fragments":["it"]},{"Key":"improved it","Fragments":["due"]},{"Key":"it due","Fragments":["to"]},{"Key":"to suggestions","Fragments":["and"]},{"Key":"suggestions and","Fragments":["what"]},{"Key":"and what","Fragments":["i","it"]},{"Key":"what i","Fragments":["learned"]},{"Key":"i learned","Fragments":["from"]},{"Key":"learned from","Fragments":["reviewing"]},{"Key":"from reviewing","Fragments":["your"]},{"Key":"reviewing your","Fragments":["solutions."]},{"Key":"a `anagrams_in_list`","Fragments":["which"]},{"Key":"`anagrams_in_list` which","Fragments":["starts"]},{"Key":"over `a`","Fragments":["and"]},{"Key":"`a` and","Fragments":["possibly"]},{"Key":"to `anagrams_in_list`","Fragments":["based"]},{"Key":"`anagrams_in_list` based","Fragments":["on"]},{"Key":"return `anagrams_in_list`","Fragments":["right"]},{"Key":"`anagrams_in_list` right","Fragments":["after"]},{"Key":"[Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html) methods,","Fragments":["maybe","what","maybe","maybe"]},{"Key":"methods, maybe","Fragments":["could","could","could"]},{"Key":"maybe could","Fragments":["look","look","look","do"]},{"Key":"sorting `word`","Fragments":["multiple","repeatedly","many"]},{"Key":"`word` multiple","Fragments":["times,"]},{"Key":"multiple times,","Fragments":["it","it"]},{"Key":"times, it","Fragments":["could","could","can"]},{"Key":"be sorted","Fragments":["only"]},{"Key":"sorted only","Fragments":["once"]},{"Key":"once at","Fragments":["the"]},{"Key":"feedback! Let","Fragments":["binding"]},{"Key":"Let binding","Fragments":["the"]},{"Key":"the lowercased","Fragments":["word"]},{"Key":"lowercased word","Fragments":["and"]},{"Key":"and its","Fragments":["characters","values"]},{"Key":"its characters","Fragments":["also"]},{"Key":"characters also","Fragments":["make"]},{"Key":"also make","Fragments":["the","me"]},{"Key":"the filtering","Fragments":["simpler."]},{"Key":" Hmm,","Fragments":["notice"]},{"Key":"Hmm, notice","Fragments":["how"]},{"Key":"notice how","Fragments":["we"]},{"Key":"a `result`","Fragments":["which","which","vector.","vector.","which","vector"]},{"Key":"`result` which","Fragments":["starts","starts","starts","starts"]},{"Key":"over `inputs`","Fragments":["and","and","and","and","-","?","and","and","and","and"]},{"Key":"`inputs` and","Fragments":["possibly","possibly","possibly","possibly","possibly","possibly","possibly","possibly"]},{"Key":"to `result`","Fragments":["based","based","based","based"]},{"Key":"`result` based","Fragments":["on","on","on","on"]},{"Key":"return `result`","Fragments":["right","right","right","right"]},{"Key":"`result` right","Fragments":["after","after","after","after"]},{"Key":"methods, what","Fragments":["would"]},{"Key":"think of","Fragments":["this","that.","using","a"]},{"Key":"of this","Fragments":["idea?","solution",":grin:","exercise,","the","mess","nonsense"]},{"Key":" Replaced","Fragments":["lowercase()"]},{"Key":"Replaced lowercase()","Fragments":["with"]},{"Key":"lowercase() with","Fragments":["to_lowercase"]},{"Key":"with to_lowercase","Fragments":["from"]},{"Key":"to_lowercase from","Fragments":["std."]},{"Key":" Yes","Fragments":["it's","panic","I"]},{"Key":"Yes it's","Fragments":["a"]},{"Key":"idea, the","Fragments":["implemention"]},{"Key":"the implemention","Fragments":["by"]},{"Key":"implemention by","Fragments":["@trey"]},{"Key":"by @trey","Fragments":["is"]},{"Key":"@trey is","Fragments":["very"]},{"Key":"is very","Fragments":["nice","nitpicky.","simple","readable","close"]},{"Key":"very nice","Fragments":["and"]},{"Key":"and concise.","Fragments":["I"]},{"Key":"concise. I","Fragments":["did"]},{"Key":"did this","Fragments":["exercise"]},{"Key":"exercise when","Fragments":["I"]},{"Key":"just starting","Fragments":["Rust,","to"]},{"Key":"starting Rust,","Fragments":["I'll"]},{"Key":"Rust, I'll","Fragments":["try"]},{"Key":"use these","Fragments":["functions"]},{"Key":"these functions","Fragments":["more","are"]},{"Key":"functions more","Fragments":["often"]},{"Key":"more often","Fragments":["in","than"]},{"Key":"often in","Fragments":["the"]},{"Key":"The ranges","Fragments":["could"]},{"Key":"ranges could","Fragments":["start"]},{"Key":"could start","Fragments":["at"]},{"Key":"start at","Fragments":["1."]},{"Key":"Your code","Fragments":["looks"]},{"Key":"code looks","Fragments":["very","pretty","reasonable."]},{"Key":"looks very","Fragments":["good."]},{"Key":"very good.","Fragments":["You"]},{"Key":"good. You","Fragments":["are"]},{"Key":"are lowercasing","Fragments":["\u0026"]},{"Key":"lowercasing \u0026","Fragments":["sorting"]},{"Key":"\u0026 sorting","Fragments":["word"]},{"Key":"word multiple","Fragments":["times,"]},{"Key":"done only","Fragments":["once."]},{"Key":"I've now","Fragments":["been"]},{"Key":"now been","Fragments":["able"]},{"Key":"to combine","Fragments":["the"]},{"Key":"combine the","Fragments":["`check_is_anagram","functions","values"]},{"Key":"the `check_is_anagram","Fragments":["-\u003e"]},{"Key":"`check_is_anagram -\u003e","Fragments":["bool`"]},{"Key":"bool` function","Fragments":["with"]},{"Key":"filter instead","Fragments":["of"]},{"Key":"more cumbersome","Fragments":["`anagram_option"]},{"Key":"cumbersome `anagram_option","Fragments":["-\u003e"]},{"Key":"`anagram_option -\u003e","Fragments":["Option`."]},{"Key":"-\u003e Option`.","Fragments":["The"]},{"Key":"Option`. The","Fragments":["crucial"]},{"Key":"The crucial","Fragments":["bit"]},{"Key":"crucial bit","Fragments":["I"]},{"Key":"bit I","Fragments":["was"]},{"Key":"was missin","Fragments":["earlier"]},{"Key":"missin earlier","Fragments":["was"]},{"Key":"earlier was","Fragments":["the"]},{"Key":"was the","Fragments":["`map(|c|","simplest","answer","way","rationale"]},{"Key":"the `map(|c|","Fragments":["*c)`"]},{"Key":"`map(|c| *c)`","Fragments":["bit"]},{"Key":"*c)` bit","Fragments":["since"]},{"Key":"bit since","Fragments":["the"]},{"Key":"filter returns","Fragments":["\u0026\u0026str"]},{"Key":"returns \u0026\u0026str","Fragments":["elements"]},{"Key":"\u0026\u0026str elements","Fragments":["which"]},{"Key":"elements which","Fragments":["need"]},{"Key":"which need","Fragments":["to"]},{"Key":"be \u0026str.","Fragments":["It"]},{"Key":"\u0026str. It","Fragments":["was"]},{"Key":"of carefully","Fragments":["reading"]},{"Key":"carefully reading","Fragments":["the"]},{"Key":"reading the","Fragments":["compiler's","tests"]},{"Key":"the compiler's","Fragments":["complaint."]},{"Key":"also simplified","Fragments":["the"]},{"Key":"simplified the","Fragments":["last-line's"]},{"Key":"the last-line's","Fragments":["Vec"]},{"Key":"last-line's Vec","Fragments":["spec."]},{"Key":"Thanks @queenie","Fragments":["and"]},{"Key":"@queenie and","Fragments":["@queenie"]},{"Key":"and @queenie","Fragments":["for"]},{"Key":"@queenie for","Fragments":["your"]},{"Key":"Thanks, @linnie,","Fragments":["that's"]},{"Key":"@linnie, that's","Fragments":["very"]},{"Key":"that's very","Fragments":["interesting"]},{"Key":"very interesting","Fragments":["indeed."]},{"Key":"interesting indeed.","Fragments":["I"]},{"Key":"indeed. I","Fragments":["still","decided"]},{"Key":"I still","Fragments":["haven't","don't","don't","have","don't"]},{"Key":"still haven't","Fragments":["quite"]},{"Key":"haven't quite","Fragments":["wrapped"]},{"Key":"quite wrapped","Fragments":["my"]},{"Key":"wrapped my","Fragments":["head"]},{"Key":"my head","Fragments":["around","around"]},{"Key":"head around","Fragments":["why","when"]},{"Key":"around why","Fragments":["things"]},{"Key":"why things","Fragments":["are"]},{"Key":"things are","Fragments":["the"]},{"Key":"way they","Fragments":["are,"]},{"Key":"they are,","Fragments":["but"]},{"Key":"are, but","Fragments":["also"]},{"Key":"but also","Fragments":["came"]},{"Key":"also came","Fragments":["across"]},{"Key":"across [this","Fragments":["discussion"]},{"Key":"[this discussion","Fragments":["on"]},{"Key":"discussion on","Fragments":["reddit](https://www.reddit.com/r/rust/comments/3bmua6/can_someone_help_me_understand_stditerfilter/)"]},{"Key":"on reddit](https://www.reddit.com/r/rust/comments/3bmua6/can_someone_help_me_understand_stditerfilter/)","Fragments":["on"]},{"Key":"reddit](https://www.reddit.com/r/rust/comments/3bmua6/can_someone_help_me_understand_stditerfilter/) on","Fragments":["the"]},{"Key":"the subject","Fragments":["which"]},{"Key":"subject which","Fragments":["provides"]},{"Key":"which provides","Fragments":["a","a"]},{"Key":"provides a","Fragments":["bit","macro"]},{"Key":" Awesome","Fragments":["that"]},{"Key":"Awesome that","Fragments":["the"]},{"Key":"filter is","Fragments":["working."]},{"Key":"is working.","Fragments":["I"]},{"Key":"working. I","Fragments":["think"]},{"Key":"think my","Fragments":["last","last"]},{"Key":"my last","Fragments":["note","expression","thought"]},{"Key":"last note","Fragments":["is"]},{"Key":"note is","Fragments":["`.map(|c|"]},{"Key":"is `.map(|c|","Fragments":["*c)`"]},{"Key":"`.map(|c| *c)`","Fragments":["can"]},{"Key":"*c)` can","Fragments":["alternately"]},{"Key":"can alternately","Fragments":["be","be"]},{"Key":"alternately be","Fragments":["written","written"]},{"Key":"as `.cloned()`","Fragments":["([iterator","if"]},{"Key":"`.cloned()` ([iterator","Fragments":["docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)"]},{"Key":"([iterator docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)","Fragments":["agree"]},{"Key":"docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned) agree","Fragments":["on"]},{"Key":"agree on","Fragments":["that)"]},{"Key":"on that)","Fragments":["which"]},{"Key":"that) which","Fragments":["I"]},{"Key":"saw because","Fragments":["I"]},{"Key":"also had","Fragments":["to","to","to"]},{"Key":"do a","Fragments":["`.map(|x|","comparison"]},{"Key":"a `.map(|x|","Fragments":["*x)`"]},{"Key":"`.map(|x| *x)`","Fragments":["in"]},{"Key":"*x)` in","Fragments":["a"]},{"Key":"a submission","Fragments":["to"]},{"Key":"submission to","Fragments":["a"]},{"Key":"I see","Fragments":["that","the","a","it,","you're"]},{"Key":"see that","Fragments":["the"]},{"Key":"the unallocated","Fragments":["slot"]},{"Key":"unallocated slot","Fragments":["is"]},{"Key":"slot is","Fragments":["generally"]},{"Key":"is generally","Fragments":["for"]},{"Key":"generally for","Fragments":["differentiating"]},{"Key":"for differentiating","Fragments":["the"]},{"Key":"differentiating the","Fragments":["case"]},{"Key":"the buffer","Fragments":["is"]},{"Key":"buffer is","Fragments":["full"]},{"Key":"is full","Fragments":["versus"]},{"Key":"full versus","Fragments":["when"]},{"Key":"versus when","Fragments":["it's"]},{"Key":"when it's","Fragments":["empty."]},{"Key":"it's empty.","Fragments":["Of"]},{"Key":"empty. Of","Fragments":["the"]},{"Key":"Of the","Fragments":["various"]},{"Key":"the various","Fragments":["ways"]},{"Key":"various ways","Fragments":["to","to"]},{"Key":"ways to","Fragments":["do","distinguish"]},{"Key":"it this","Fragments":["way","is","way,"]},{"Key":"this way","Fragments":["only"]},{"Key":"way only","Fragments":["uses"]},{"Key":"only uses","Fragments":["an"]},{"Key":"uses an","Fragments":["extra"]},{"Key":"an extra","Fragments":["char,"]},{"Key":"extra char,","Fragments":["so"]},{"Key":"char, so","Fragments":["that"]},{"Key":"so that","Fragments":["seems","I","people","we","I","after"]},{"Key":"that seems","Fragments":["reasonable.","to"]},{"Key":"There interesting","Fragments":["thing"]},{"Key":"interesting thing","Fragments":["you"]},{"Key":"thing you","Fragments":["might","had","do"]},{"Key":"you might","Fragments":["notice","want","just"]},{"Key":"might notice","Fragments":["is"]},{"Key":"notice is","Fragments":["that"]},{"Key":"that `overwrite`","Fragments":["has","contains"]},{"Key":"`overwrite` has","Fragments":["two"]},{"Key":"has two","Fragments":["lines"]},{"Key":"two lines","Fragments":["in","in","simpler:"]},{"Key":"lines in","Fragments":["common","common","the"]},{"Key":"in common","Fragments":["with","with"]},{"Key":"common with","Fragments":["`write`","`read`."]},{"Key":"with `write`","Fragments":["and"]},{"Key":"`write` and","Fragments":["two","`overwrite`."]},{"Key":"and two","Fragments":["lines"]},{"Key":"with `read`.","Fragments":["Those"]},{"Key":"`read`. Those","Fragments":["are"]},{"Key":"Those are","Fragments":["small"]},{"Key":"are small","Fragments":["enough"]},{"Key":"small enough","Fragments":["numbers"]},{"Key":"enough numbers","Fragments":["that"]},{"Key":"numbers that","Fragments":["it","will"]},{"Key":"might not","Fragments":["be","have","ever"]},{"Key":"be strictly","Fragments":["necessary"]},{"Key":"strictly necessary","Fragments":["to"]},{"Key":"necessary to","Fragments":["de-duplicate","test","copy","implement"]},{"Key":"de-duplicate that,","Fragments":["but"]},{"Key":"that, but","Fragments":["that","the"]},{"Key":"a thing","Fragments":["to"]},{"Key":"thing to","Fragments":["consider.","do"]},{"Key":"that `read`","Fragments":["and"]},{"Key":"`read` and","Fragments":["`write`","`write`"]},{"Key":"and `write`","Fragments":["are","for"]},{"Key":"`write` are","Fragments":["written"]},{"Key":"are written","Fragments":["in"]},{"Key":"written in","Fragments":["two","C#"]},{"Key":"in two","Fragments":["different","rectangles."]},{"Key":"two different","Fragments":["styles:"]},{"Key":" `read`","Fragments":["has"]},{"Key":"`read` has","Fragments":["the"]},{"Key":"style \"`if`","Fragments":["there","there"]},{"Key":"\"`if` there","Fragments":["is","is"]},{"Key":"an error,","Fragments":["return","return"]},{"Key":"error, return","Fragments":["early.","it,"]},{"Key":"return early.","Fragments":["Do"]},{"Key":"early. Do","Fragments":["not"]},{"Key":"Do not","Fragments":["put"]},{"Key":"not put","Fragments":["the"]},{"Key":"actual work","Fragments":["in"]},{"Key":"work in","Fragments":["an"]},{"Key":"the `else`","Fragments":["is"]},{"Key":"`else` is","Fragments":["implicit"]},{"Key":"is implicit","Fragments":["in"]},{"Key":"implicit in","Fragments":["not"]},{"Key":"in not","Fragments":["having"]},{"Key":"not having","Fragments":["returned","to"]},{"Key":"having returned","Fragments":["early\"."]},{"Key":" `write`","Fragments":["has"]},{"Key":"`write` has","Fragments":["the"]},{"Key":"return it,","Fragments":["`else`"]},{"Key":"it, `else`","Fragments":["do"]},{"Key":"`else` do","Fragments":["the"]},{"Key":"It looks","Fragments":["like","to","like"]},{"Key":"like [there","Fragments":["are"]},{"Key":"[there are","Fragments":["good"]},{"Key":"are good","Fragments":["reasons"]},{"Key":"good reasons","Fragments":["to"]},{"Key":"reasons to","Fragments":["use","do"]},{"Key":"use either","Fragments":["style](http://exercism.io/submissions/92dc14c6b6054c85ad095f0e56b366cd)."]},{"Key":"either style](http://exercism.io/submissions/92dc14c6b6054c85ad095f0e56b366cd).","Fragments":["But"]},{"Key":"style](http://exercism.io/submissions/92dc14c6b6054c85ad095f0e56b366cd). But","Fragments":["I"]},{"Key":"would at","Fragments":["least"]},{"Key":"least be","Fragments":["appropriate"]},{"Key":"be appropriate","Fragments":["to"]},{"Key":"appropriate to","Fragments":["stick"]},{"Key":"to stick","Fragments":["to"]},{"Key":"to one","Fragments":["style"]},{"Key":"one style","Fragments":["or"]},{"Key":"style or","Fragments":["another"]},{"Key":"or another","Fragments":["in"]},{"Key":"another in","Fragments":["the"]},{"Key":"you stick","Fragments":["with"]},{"Key":"stick with","Fragments":["the","imperative"]},{"Key":"style of","Fragments":["`write`,"]},{"Key":"of `write`,","Fragments":["then"]},{"Key":"`write`, then","Fragments":["note"]},{"Key":"then note","Fragments":["that"]},{"Key":"note that","Fragments":["you","pretty","you're"]},{"Key":"the `return`s","Fragments":["as","and"]},{"Key":"`return`s as","Fragments":["you"]},{"Key":"use implicit","Fragments":["returns"]},{"Key":"implicit returns","Fragments":["of","though,"]},{"Key":"returns of","Fragments":["last"]},{"Key":"of last","Fragments":["expression"]},{"Key":"the comments","Fragments":["@morton,","like",":-)"]},{"Key":"comments @morton,","Fragments":["I"]},{"Key":"@morton, I","Fragments":["applied"]},{"Key":"I applied","Fragments":["most","what"]},{"Key":"applied most","Fragments":["of"]},{"Key":"most of","Fragments":["your","them.","the"]},{"Key":"of your","Fragments":["suggestions.","implementation","code,","code!"]},{"Key":"your suggestions.","Fragments":["I"]},{"Key":"suggestions. I","Fragments":["also"]},{"Key":"also stole","Fragments":["your"]},{"Key":"stole your","Fragments":["method"]},{"Key":"your method","Fragments":["to","which"]},{"Key":"method to","Fragments":["initialize","express","express","derive"]},{"Key":"to initialize","Fragments":["the","a"]},{"Key":"initialize the","Fragments":["`Vec\u003cchar\u003e`."]},{"Key":"the `Vec\u003cchar\u003e`.","Fragments":["I"]},{"Key":"`Vec\u003cchar\u003e`. I","Fragments":["added"]},{"Key":"added functions","Fragments":["`is_empty()`"]},{"Key":"functions `is_empty()`","Fragments":["`is_full()`"]},{"Key":"`is_empty()` `is_full()`","Fragments":["`advance_start()`"]},{"Key":"`is_full()` `advance_start()`","Fragments":["`advance_end()`"]},{"Key":"`advance_start()` `advance_end()`","Fragments":["I"]},{"Key":"`advance_end()` I","Fragments":["think"]},{"Key":"it makes","Fragments":["the","me","it","me","the","the","the","the","the","the","things","the","the","the"]},{"Key":"code much","Fragments":["easier"]},{"Key":"much easier","Fragments":["to","using"]},{"Key":" Notes","Fragments":["on"]},{"Key":"Notes on","Fragments":["this"]},{"Key":"on this","Fragments":["solution:","second","one:","are"]},{"Key":"this solution:","Fragments":["There"]},{"Key":"solution: There","Fragments":["are"]},{"Key":"are various","Fragments":["ways"]},{"Key":"to distinguish","Fragments":["between"]},{"Key":"distinguish between","Fragments":["full"]},{"Key":"between full","Fragments":["buffer"]},{"Key":"full buffer","Fragments":["and"]},{"Key":"buffer and","Fragments":["empty"]},{"Key":"and empty","Fragments":["buffer"]},{"Key":"empty buffer","Fragments":["-"]},{"Key":"buffer -","Fragments":["this"]},{"Key":"- this","Fragments":["solution","simplifies","is"]},{"Key":"solution requires","Fragments":["no"]},{"Key":"requires no","Fragments":["extra"]},{"Key":"no extra","Fragments":["space,"]},{"Key":"extra space,","Fragments":["but"]},{"Key":"space, but","Fragments":["requires"]},{"Key":"but requires","Fragments":["extra"]},{"Key":"requires extra","Fragments":["compute"]},{"Key":"extra compute","Fragments":["time"]},{"Key":"compute time","Fragments":["to"]},{"Key":"to perform","Fragments":["mods"]},{"Key":"perform mods","Fragments":["every"]},{"Key":"mods every","Fragments":["time"]},{"Key":"time a","Fragments":["read"]},{"Key":"a read","Fragments":["or"]},{"Key":"read or","Fragments":["write"]},{"Key":"or write","Fragments":["is"]},{"Key":"write is","Fragments":["performed..."]},{"Key":"I note","Fragments":["that"]},{"Key":"that pretty","Fragments":["much"]},{"Key":"much every","Fragments":["other"]},{"Key":"every other","Fragments":["solution"]},{"Key":"solution will","Fragments":["also"]},{"Key":"will also","Fragments":["perform"]},{"Key":"also perform","Fragments":["mod"]},{"Key":"perform mod","Fragments":["operations"]},{"Key":"mod operations","Fragments":["when"]},{"Key":"operations when","Fragments":["doing"]},{"Key":"when doing","Fragments":["reading"]},{"Key":"doing reading","Fragments":["or"]},{"Key":"reading or","Fragments":["writing"]},{"Key":"or writing","Fragments":["(when"]},{"Key":"writing (when","Fragments":["advancing"]},{"Key":"(when advancing","Fragments":["the"]},{"Key":"advancing the","Fragments":["read"]},{"Key":"the read","Fragments":["and"]},{"Key":"read and","Fragments":["write","I"]},{"Key":"and write","Fragments":["indices),"]},{"Key":"write indices),","Fragments":["so"]},{"Key":"indices), so","Fragments":["I"]},{"Key":"am only","Fragments":["at"]},{"Key":"only at","Fragments":["a"]},{"Key":"at a","Fragments":["disadvantage"]},{"Key":"a disadvantage","Fragments":["against"]},{"Key":"disadvantage against","Fragments":["such"]},{"Key":"against such","Fragments":["solutions"]},{"Key":"such solutions","Fragments":["if"]},{"Key":"solutions if","Fragments":["`x"]},{"Key":"if `x","Fragments":["%"]},{"Key":"`x %","Fragments":["y`"]},{"Key":"% y`","Fragments":["takes"]},{"Key":"y` takes","Fragments":["time"]},{"Key":"takes time","Fragments":["proportional"]},{"Key":"time proportional","Fragments":["to"]},{"Key":"proportional to","Fragments":["the"]},{"Key":"of `x`","Fragments":["(I"]},{"Key":"`x` (I","Fragments":["don't"]},{"Key":"(I don't","Fragments":["know","understand"]},{"Key":"answer to","Fragments":["this"]},{"Key":"this question,","Fragments":["but"]},{"Key":"question, but","Fragments":["I"]},{"Key":"a sneaking","Fragments":["suspicion"]},{"Key":"sneaking suspicion","Fragments":["the"]},{"Key":"suspicion the","Fragments":["answer"]},{"Key":"answer is","Fragments":["\"no","\"It's","\"oh,"]},{"Key":"is \"no","Fragments":["it"]},{"Key":"\"no it","Fragments":["doesn't\")."]},{"Key":" However,","Fragments":["one","I","I"]},{"Key":"However, one","Fragments":["weakness"]},{"Key":"one weakness","Fragments":["of"]},{"Key":"weakness of","Fragments":["this"]},{"Key":"is that:","Fragments":["If"]},{"Key":"that: If","Fragments":["the"]},{"Key":"the capacity","Fragments":["is"]},{"Key":"capacity is","Fragments":["NOT"]},{"Key":"is NOT","Fragments":["a","a"]},{"Key":"NOT a","Fragments":["power","leap"]},{"Key":"power of","Fragments":["two,"]},{"Key":"of two,","Fragments":["and"]},{"Key":"two, and","Fragments":["then"]},{"Key":"then `reads`","Fragments":["and/or"]},{"Key":"`reads` and/or","Fragments":["`writes`"]},{"Key":"and/or `writes`","Fragments":["overflows"]},{"Key":"`writes` overflows","Fragments":["`usize`,"]},{"Key":"overflows `usize`,","Fragments":["the"]},{"Key":"`usize`, the","Fragments":["corresponding"]},{"Key":"the corresponding","Fragments":["functions","symbols"]},{"Key":"corresponding functions","Fragments":["operate"]},{"Key":"functions operate","Fragments":["at"]},{"Key":"operate at","Fragments":["incorrect"]},{"Key":"at incorrect","Fragments":["indices"]},{"Key":"incorrect indices","Fragments":["momentarily."]},{"Key":"indices momentarily.","Fragments":["I"]},{"Key":"momentarily. I","Fragments":["do"]},{"Key":"I do","Fragments":["not","know","feel","not","prefer"]},{"Key":"do not","Fragments":["handle","state","need","agree"]},{"Key":"not handle","Fragments":["this"]},{"Key":"handle this","Fragments":["case"]},{"Key":"case in","Fragments":["this","`complement_strand()`."]},{"Key":"code as","Fragments":["this","written","pretty"]},{"Key":"as this","Fragments":["should","is","always","often"]},{"Key":"this should","Fragments":["be"]},{"Key":"be exceedingly","Fragments":["rare,"]},{"Key":"exceedingly rare,","Fragments":["but"]},{"Key":"rare, but","Fragments":["it"]},{"Key":"is worth","Fragments":["noticing."]},{"Key":" `contents`","Fragments":["can"]},{"Key":"`contents` can","Fragments":["be"]},{"Key":"be initialized","Fragments":["via"]},{"Key":"initialized via","Fragments":["`vec!['\\0';"]},{"Key":"via `vec!['\\0';","Fragments":["capacity]`"]},{"Key":"`vec!['\\0'; capacity]`","Fragments":["instead."]},{"Key":"capacity]` instead.","Fragments":["I"]},{"Key":"I will","Fragments":["not","try","take","modify","made","iterate","make"]},{"Key":"will not","Fragments":["be","give","work"]},{"Key":"be submitting","Fragments":["another"]},{"Key":"submitting another","Fragments":["iteration","iteration"]},{"Key":"another iteration","Fragments":["just","of","for"]},{"Key":"iteration just","Fragments":["for","for"]},{"Key":"just for","Fragments":["this","the"]},{"Key":"this small","Fragments":["change"]},{"Key":"small change","Fragments":["though."]},{"Key":"mut string","Fragments":["="]},{"Key":"string =","Fragments":["String::new();"]},{"Key":" could","Fragments":["simply"]},{"Key":"could simply","Fragments":["be"]},{"Key":"simply be","Fragments":["written"]},{"Key":"as `chars.iter().collect()`","Fragments":["or"]},{"Key":"`chars.iter().collect()` or","Fragments":["something"]},{"Key":"something similar.","Fragments":["Code"]},{"Key":"similar. Code","Fragments":["not"]},{"Key":"Code not","Fragments":["tested"]},{"Key":"not tested","Fragments":["but"]},{"Key":"tested but","Fragments":["it"]},{"Key":"is my","Fragments":["instinct.","preferred","understanding,"]},{"Key":"my instinct.","Fragments":["In"]},{"Key":"instinct. In","Fragments":["general,"]},{"Key":"general, whenever","Fragments":["I"]},{"Key":"whenever I","Fragments":["see"]},{"Key":"see the","Fragments":["pattern"]},{"Key":"pattern \"Create","Fragments":["empty"]},{"Key":"\"Create empty","Fragments":["collection"]},{"Key":"empty collection","Fragments":["C1."]},{"Key":"collection C1.","Fragments":["Iterate"]},{"Key":"C1. Iterate","Fragments":["over"]},{"Key":"Iterate over","Fragments":["collection"]},{"Key":"over collection","Fragments":["C2,"]},{"Key":"collection C2,","Fragments":["for"]},{"Key":"C2, for","Fragments":["each"]},{"Key":"element E","Fragments":["in"]},{"Key":"E in","Fragments":["C2"]},{"Key":"in C2","Fragments":["do"]},{"Key":"C2 do","Fragments":["something"]},{"Key":"do something","Fragments":["and"]},{"Key":"something and","Fragments":["put"]},{"Key":"and put","Fragments":["the"]},{"Key":"in C1,","Fragments":["return"]},{"Key":"C1, return","Fragments":["C1\""]},{"Key":"return C1\"","Fragments":["I"]},{"Key":"C1\" I","Fragments":["try"]},{"Key":"an Iterator","Fragments":["method"]},{"Key":"Iterator method","Fragments":["equivalent."]},{"Key":"method equivalent.","Fragments":["In"]},{"Key":"equivalent. In","Fragments":["this"]},{"Key":"case the","Fragments":["\"do","latter"]},{"Key":"the \"do","Fragments":["something\""]},{"Key":"\"do something\"","Fragments":["is"]},{"Key":"something\" is","Fragments":["actually"]},{"Key":"actually \"just","Fragments":["use"]},{"Key":"\"just use","Fragments":["the"]},{"Key":"same element","Fragments":["unchanged\""]},{"Key":"element unchanged\"","Fragments":["so"]},{"Key":"unchanged\" so","Fragments":["I"]},{"Key":"think `collect`","Fragments":["will"]},{"Key":"`collect` will","Fragments":["do"]},{"Key":"will do","Fragments":["it."]},{"Key":" line","Fragments":["34"]},{"Key":"line 34","Fragments":["could"]},{"Key":"34 could","Fragments":["maybe"]},{"Key":"could maybe","Fragments":["save","abstract"]},{"Key":"maybe save","Fragments":["a"]},{"Key":"save a","Fragments":["some"]},{"Key":"a some","Fragments":["typing"]},{"Key":"some typing","Fragments":["by"]},{"Key":"typing by","Fragments":["having"]},{"Key":"by having","Fragments":["it"]},{"Key":"having it","Fragments":["be"]},{"Key":"it be","Fragments":["`\u003cVec\u003c_\u003e\u003e`","done","the","evaluated"]},{"Key":"be `\u003cVec\u003c_\u003e\u003e`","Fragments":["instead,"]},{"Key":"`\u003cVec\u003c_\u003e\u003e` instead,","Fragments":["also"]},{"Key":"instead, also","Fragments":["untested"]},{"Key":"also untested","Fragments":["but"]},{"Key":"untested but","Fragments":["I"]},{"Key":"am 80%","Fragments":["sure."]},{"Key":"didn't see","Fragments":["an"]},{"Key":"see an","Fragments":["immediate"]},{"Key":"an immediate","Fragments":["solution,"]},{"Key":"immediate solution,","Fragments":["I"]},{"Key":"solution, I","Fragments":["started","find"]},{"Key":"started googling","Fragments":["around,"]},{"Key":"googling around,","Fragments":["and"]},{"Key":"around, and","Fragments":["my"]},{"Key":"and my","Fragments":["google-fu","first","first"]},{"Key":"my google-fu","Fragments":["was"]},{"Key":"google-fu was","Fragments":["just"]},{"Key":"just strong","Fragments":["enough"]},{"Key":"strong enough","Fragments":["for"]},{"Key":"enough for","Fragments":["that","the","me."]},{"Key":"for that","Fragments":["rather"]},{"Key":"that rather","Fragments":["clunky"]},{"Key":"rather clunky","Fragments":["solution."]},{"Key":"Your proposed","Fragments":["solution"]},{"Key":"proposed solution","Fragments":["sadly"]},{"Key":"solution sadly","Fragments":["did"]},{"Key":"sadly did","Fragments":["not"]},{"Key":"work, however","Fragments":["thanks","I"]},{"Key":"however thanks","Fragments":["to"]},{"Key":"the hint","Fragments":["I"]},{"Key":"hint I","Fragments":["found"]},{"Key":"found a","Fragments":["more","library","neat","way"]},{"Key":"more elegant","Fragments":["version."]},{"Key":"elegant version.","Fragments":["Even"]},{"Key":"version. Even","Fragments":["though"]},{"Key":"Even though","Fragments":["it"]},{"Key":"though it","Fragments":["still","shows","is"]},{"Key":"it still","Fragments":["feels","gives"]},{"Key":"still feels","Fragments":["very"]},{"Key":"feels very","Fragments":["indirect"]},{"Key":"very indirect","Fragments":["compared"]},{"Key":"indirect compared","Fragments":["to"]},{"Key":"to Ruby,","Fragments":["for"]},{"Key":"Ruby, for","Fragments":["example."]},{"Key":"the hint,","Fragments":["I"]},{"Key":"hint, I","Fragments":["didn't"]},{"Key":"didn't think","Fragments":["about","of","I"]},{"Key":" Realized","Fragments":["from"]},{"Key":"Realized from","Fragments":["reading"]},{"Key":"from reading","Fragments":["[vec"]},{"Key":"reading [vec","Fragments":["docs](https://doc.rust-lang.org/std/vec/struct.Vec.html)"]},{"Key":"[vec docs](https://doc.rust-lang.org/std/vec/struct.Vec.html)","Fragments":["we"]},{"Key":"docs](https://doc.rust-lang.org/std/vec/struct.Vec.html) we","Fragments":["can"]},{"Key":"do `vec![element;","Fragments":["times_to_repeat]`"]},{"Key":"`vec![element; times_to_repeat]`","Fragments":["instead"]},{"Key":"times_to_repeat]` instead","Fragments":["of"]},{"Key":"the `repeat`","Fragments":["and"]},{"Key":"`repeat` and","Fragments":["`take`."]},{"Key":"and `take`.","Fragments":["I'm"]},{"Key":"`take`. I'm","Fragments":["personally"]},{"Key":"I'm personally","Fragments":["not"]},{"Key":"personally not","Fragments":["submitting"]},{"Key":"not submitting","Fragments":["another"]},{"Key":"iteration of","Fragments":["my"]},{"Key":"of my","Fragments":["solution","last","very","code","solutions"]},{"Key":"solution just","Fragments":["to","felt"]},{"Key":"change that,","Fragments":["just"]},{"Key":"that, just","Fragments":["FYI"]},{"Key":"just FYI","Fragments":["in"]},{"Key":"FYI in","Fragments":["case"]},{"Key":"you find","Fragments":["this","one."]},{"Key":"find this","Fragments":["information","solution"]},{"Key":"this information","Fragments":["useful"]},{"Key":"information useful","Fragments":["in"]},{"Key":"useful in","Fragments":["the"]},{"Key":"Followed @lauriane's","Fragments":["comment"]},{"Key":"@lauriane's comment","Fragments":["and"]},{"Key":"comment and","Fragments":["use"]},{"Key":"use ```cloned()```","Fragments":["instead"]},{"Key":"```cloned()``` instead","Fragments":["of"]},{"Key":"of ```map(|\u0026x|","Fragments":["x)```"]},{"Key":" Hi,","Fragments":["One","its","nice"]},{"Key":"Hi, One","Fragments":["thing."]},{"Key":"One thing.","Fragments":["You"]},{"Key":"thing. You","Fragments":["are"]},{"Key":"are still","Fragments":["calling","experimental/unstable.","some","often"]},{"Key":"still calling","Fragments":["`candidate_chars.sort();`"]},{"Key":"calling `candidate_chars.sort();`","Fragments":["for"]},{"Key":"`candidate_chars.sort();` for","Fragments":["each"]},{"Key":"how with","Fragments":["`outputs`:"]},{"Key":"with `outputs`:","Fragments":["It"]},{"Key":"`outputs`: It","Fragments":["starts"]},{"Key":"It starts","Fragments":["out"]},{"Key":"iterate through","Fragments":["a","an","the","the","generated"]},{"Key":"through a","Fragments":["collection,","char","function;"]},{"Key":"a collection,","Fragments":["check"]},{"Key":"collection, check","Fragments":["if"]},{"Key":"check if","Fragments":["a","they","there","they","they"]},{"Key":"a condition","Fragments":["is"]},{"Key":"condition is","Fragments":["true,"]},{"Key":"is true,","Fragments":["and"]},{"Key":"true, and","Fragments":["if"]},{"Key":"and if","Fragments":["it","you"]},{"Key":"is then","Fragments":["add","possible"]},{"Key":"then add","Fragments":["elements","one"]},{"Key":"elements into","Fragments":["`output`,"]},{"Key":"into `output`,","Fragments":["then"]},{"Key":"`output`, then","Fragments":["immediately"]},{"Key":" Whenever","Fragments":["I"]},{"Key":"Whenever I","Fragments":["have"]},{"Key":"have this","Fragments":["pattern","be"]},{"Key":"this pattern","Fragments":["(return"]},{"Key":"pattern (return","Fragments":["a"]},{"Key":"(return a","Fragments":["collection"]},{"Key":"a collection","Fragments":["based"]},{"Key":"collection based","Fragments":["on"]},{"Key":"the contents","Fragments":["of"]},{"Key":"contents of","Fragments":["another"]},{"Key":"of another","Fragments":["collection)"]},{"Key":"another collection)","Fragments":["I"]},{"Key":"collection) I","Fragments":["look"]},{"Key":"I look","Fragments":["for"]},{"Key":"look for","Fragments":["an"]},{"Key":"an [Iterator","Fragments":["method](https://doc.rust-lang.org/std/iter/trait.Iterator.html)"]},{"Key":"[Iterator method](https://doc.rust-lang.org/std/iter/trait.Iterator.html)","Fragments":["that"]},{"Key":"method](https://doc.rust-lang.org/std/iter/trait.Iterator.html) that","Fragments":["can"]},{"Key":"that can","Fragments":["do","be"]},{"Key":"do what","Fragments":["I"]},{"Key":"what I","Fragments":["need","was","assume","did!"]},{"Key":"do directly,","Fragments":["without"]},{"Key":"directly, without","Fragments":["having"]},{"Key":"without having","Fragments":["to"]},{"Key":"I \"cheated\"","Fragments":["by"]},{"Key":"\"cheated\" by","Fragments":["using"]},{"Key":"a hash","Fragments":["map.","lookup","map."]},{"Key":"hash map.","Fragments":["I","I"]},{"Key":"map. I","Fragments":["will","think"]},{"Key":"will try","Fragments":["a"]},{"Key":"try a","Fragments":["simpler"]},{"Key":" While","Fragments":["this","it's","`i*i`","this","this"]},{"Key":"While this","Fragments":["version","might","works,"]},{"Key":"is simpler","Fragments":["I"]},{"Key":"simpler I","Fragments":["liked"]},{"Key":"I liked","Fragments":["`is_anagram`","that"]},{"Key":"liked `is_anagram`","Fragments":["better"]},{"Key":"`is_anagram` better","Fragments":["in"]},{"Key":"previous iteration.","Fragments":["If"]},{"Key":"iteration. If","Fragments":["`sort()`"]},{"Key":"If `sort()`","Fragments":["returned"]},{"Key":"`sort()` returned","Fragments":["the"]},{"Key":"returned the","Fragments":["sorted"]},{"Key":"sorted vector,","Fragments":["I"]},{"Key":"vector, I","Fragments":["would"]},{"Key":"do both","Fragments":["comparisons"]},{"Key":"both comparisons","Fragments":["in"]},{"Key":"comparisons in","Fragments":["one"]},{"Key":"in one","Fragments":["statement","pass/place,","line","line,","loop.","of","line","pass,"]},{"Key":"right @aracely,","Fragments":["I"]},{"Key":"@aracely, I","Fragments":["hand't"]},{"Key":"I hand't","Fragments":["though"]},{"Key":"hand't though","Fragments":["of"]},{"Key":"though of","Fragments":["that."]},{"Key":"of that.","Fragments":["I","That"]},{"Key":"other contexts","Fragments":["I"]},{"Key":"contexts I","Fragments":["would"]},{"Key":"would still","Fragments":["prefer","work"]},{"Key":"still prefer","Fragments":["the"]},{"Key":"prefer the","Fragments":["straightforward"]},{"Key":"the straightforward","Fragments":["implementation"]},{"Key":"straightforward implementation","Fragments":["unless"]},{"Key":"implementation unless","Fragments":["it"]},{"Key":"unless it","Fragments":["is"]},{"Key":"is on","Fragments":["a"]},{"Key":"a hot","Fragments":["path."]},{"Key":"On one","Fragments":["hand"]},{"Key":"one hand","Fragments":["this"]},{"Key":"hand this","Fragments":["is"]},{"Key":"a clear","Fragments":["and"]},{"Key":"and straightforward","Fragments":["implementation."]},{"Key":"straightforward implementation.","Fragments":["I"]},{"Key":"implementation. I","Fragments":["can"]},{"Key":"see exactly","Fragments":["what"]},{"Key":"what it","Fragments":["is","orders,","contains.","did,","is"]},{"Key":"is doing","Fragments":["and"]},{"Key":"doing and","Fragments":["way."]},{"Key":"and way.","Fragments":["On"]},{"Key":"way. On","Fragments":["the"]},{"Key":"other you","Fragments":["are"]},{"Key":"calling `lowercase_chars(a)`","Fragments":["for"]},{"Key":"`lowercase_chars(a)` for","Fragments":["every"]},{"Key":"every word","Fragments":["in","is"]},{"Key":"in candidates,","Fragments":["even"]},{"Key":"candidates, even","Fragments":["thow"]},{"Key":"even thow","Fragments":["it"]},{"Key":"thow it","Fragments":["always"]},{"Key":"it always","Fragments":["returns"]},{"Key":"always returns","Fragments":["the"]},{"Key":"returns the","Fragments":["same"]},{"Key":"same thing.","Fragments":["Same","I"]},{"Key":"thing. Same","Fragments":["for"]},{"Key":"Same for","Fragments":["`first.sort()`."]},{"Key":"am trying","Fragments":["to"]},{"Key":"build all","Fragments":["enum"]},{"Key":"all enum","Fragments":["variants"]},{"Key":"enum variants","Fragments":["automatically.","together"]},{"Key":"variants automatically.","Fragments":["If"]},{"Key":"automatically. If","Fragments":["that"]},{"Key":"If that","Fragments":["is"]},{"Key":"is indeed","Fragments":["possible,"]},{"Key":"indeed possible,","Fragments":["it"]},{"Key":"possible, it","Fragments":["would"]},{"Key":"would make","Fragments":["maintenance","things","it","it","a","it"]},{"Key":"make maintenance","Fragments":["easier"]},{"Key":"maintenance easier","Fragments":["as"]},{"Key":"easier as","Fragments":["you"]},{"Key":"you would","Fragments":["not","explain","avoid"]},{"Key":"not need","Fragments":["to","the","to"]},{"Key":"both add","Fragments":["variants"]},{"Key":"add variants","Fragments":["to"]},{"Key":"variants to","Fragments":["`Allergen`"]},{"Key":"to `Allergen`","Fragments":["and"]},{"Key":"`Allergen` and","Fragments":["construct"]},{"Key":"and construct","Fragments":["them"]},{"Key":"construct them","Fragments":["in"]},{"Key":"them in","Fragments":["`Allergies::allergies`.","the","terms","a"]},{"Key":"idea what","Fragments":["I'm","I'm"]},{"Key":"I'm doing;","Fragments":["can't"]},{"Key":"doing; can't","Fragments":["even"]},{"Key":"can't even","Fragments":["compile"]},{"Key":"even compile","Fragments":["without"]},{"Key":"compile without","Fragments":["commenting","it."]},{"Key":"without commenting","Fragments":["out"]},{"Key":"commenting out","Fragments":["the"]},{"Key":"test cases","Fragments":["for"]},{"Key":"cases for","Fragments":["`#allergies()`."]},{"Key":"for `#allergies()`.","Fragments":["Just"]},{"Key":"`#allergies()`. Just","Fragments":["want"]},{"Key":"Just want","Fragments":["to"]},{"Key":"I'm in","Fragments":["the","the","doubt,"]},{"Key":"right track","Fragments":["at"]},{"Key":"track at","Fragments":["least."]},{"Key":"I real","Fragments":["love"]},{"Key":"real love","Fragments":["the"]},{"Key":"love the","Fragments":["closure!"]},{"Key":"the closure!","Fragments":["I"]},{"Key":"closure! I","Fragments":["did"]},{"Key":"not think","Fragments":["of","it","about"]},{"Key":"that. That","Fragments":["is"]},{"Key":"That is","Fragments":["so"]},{"Key":"is so","Fragments":["good!"]},{"Key":"are uppercasing","Fragments":["and"]},{"Key":"uppercasing and","Fragments":["sorting"]},{"Key":"word more","Fragments":["times"]},{"Key":"I agree,","Fragments":["I"]},{"Key":"agree, I","Fragments":["started"]},{"Key":"started off","Fragments":["using"]},{"Key":"off using","Fragments":["`filter`"]},{"Key":"using `filter`","Fragments":["before"]},{"Key":"`filter` before","Fragments":["hitting"]},{"Key":"before hitting","Fragments":["type"]},{"Key":"hitting type","Fragments":["errors"]},{"Key":"type errors","Fragments":["I"]},{"Key":"errors I","Fragments":["found"]},{"Key":"found difficult","Fragments":["to"]},{"Key":"difficult to","Fragments":["understand."]},{"Key":"The problem","Fragments":["seems"]},{"Key":"problem seems","Fragments":["to"]},{"Key":" impl\u003c'a,","Fragments":["T\u003e"]},{"Key":"impl\u003c'a, T\u003e","Fragments":["Iterator"]},{"Key":"T\u003e Iterator","Fragments":["for"]},{"Key":"Iterator for","Fragments":["Iter\u003c'a,"]},{"Key":"for Iter\u003c'a,","Fragments":["T\u003e"]},{"Key":" type","Fragments":["Item"]},{"Key":"type Item","Fragments":["="]},{"Key":"Item =","Fragments":["\u0026'a","\u0026T"]},{"Key":"= \u0026'a","Fragments":["T"]},{"Key":"\u0026'a T","Fragments":["//"]},{"Key":"T //","Fragments":["a"]},{"Key":"// a","Fragments":["reference"]},{"Key":"fn collect\u003cB\u003e(self)","Fragments":["-\u003e"]},{"Key":"collect\u003cB\u003e(self) -\u003e","Fragments":["B"]},{"Key":" where","Fragments":["B:"]},{"Key":"where B:","Fragments":["FromIterator\u003cSelf::Item\u003e"]},{"Key":"B: FromIterator\u003cSelf::Item\u003e","Fragments":["//"]},{"Key":"FromIterator\u003cSelf::Item\u003e //","Fragments":["Item"]},{"Key":"// Item","Fragments":["="]},{"Key":"// impl\u003cT\u003e","Fragments":["FromIterator\u003cT\u003e"]},{"Key":"impl\u003cT\u003e FromIterator\u003cT\u003e","Fragments":["for"]},{"Key":"FromIterator\u003cT\u003e for","Fragments":["Vec\u003cT\u003e,"]},{"Key":"// so","Fragments":["we"]},{"Key":"so we","Fragments":["actually","should","can"]},{"Key":"we actually","Fragments":["build"]},{"Key":"actually build","Fragments":["a"]},{"Key":"build a","Fragments":["Vec\u003c\u0026T\u003e"]},{"Key":"a Vec\u003c\u0026T\u003e","Fragments":["from"]},{"Key":"Vec\u003c\u0026T\u003e from","Fragments":["an"]},{"Key":"from an","Fragments":["Iter\u003cT\u003e","efficiency"]},{"Key":"My current","Fragments":["understanding"]},{"Key":"current understanding","Fragments":["of"]},{"Key":"of iterators","Fragments":["from"]},{"Key":"iterators from","Fragments":["searching/looking"]},{"Key":"from searching/looking","Fragments":["at"]},{"Key":"searching/looking at","Fragments":["the"]},{"Key":"fn main()","Fragments":["{"]},{"Key":"let v:","Fragments":["Vec\u003cString\u003e"]},{"Key":"v: Vec\u003cString\u003e","Fragments":["="]},{"Key":"Vec\u003cString\u003e =","Fragments":["vec![\"hi\".to_string()];","i.collect();","i.collect();"]},{"Key":"// iterate","Fragments":["over","over","over"]},{"Key":"mut i","Fragments":["=","=","="]},{"Key":"i =","Fragments":["v.iter();","v.iter().cloned();","v.into_iter();"]},{"Key":"= v.iter();","Fragments":["//"]},{"Key":"v.iter(); //","Fragments":["slice::Iter\u003cString\u003e"]},{"Key":"let s:","Fragments":["\u0026String","String","String"]},{"Key":"s: \u0026String","Fragments":["="]},{"Key":"\u0026String =","Fragments":["i.next().unwrap();"]},{"Key":"let w:","Fragments":["Vec\u003c\u0026String\u003e","Vec\u003cString\u003e","Vec\u003cString\u003e"]},{"Key":"w: Vec\u003c\u0026String\u003e","Fragments":["="]},{"Key":"Vec\u003c\u0026String\u003e =","Fragments":["i.collect();"]},{"Key":" println!(\"{}\",","Fragments":["v[0]);","v[0]);"]},{"Key":"over copied","Fragments":["objects"]},{"Key":"= v.iter().cloned();","Fragments":["//"]},{"Key":"v.iter().cloned(); //","Fragments":["iter::Cloned\u003cslice::Iter\u003cString\u003e\u003e"]},{"Key":"s: String","Fragments":["=","="]},{"Key":"String =","Fragments":["i.next().unwrap();","i.next().unwrap();"]},{"Key":"w: Vec\u003cString\u003e","Fragments":["=","="]},{"Key":"over moved","Fragments":["objects"]},{"Key":"= v.into_iter();","Fragments":["//"]},{"Key":"v.into_iter(); //","Fragments":["vec::IntoIter\u003cString\u003e"]},{"Key":" //println!(\"{}\",","Fragments":["v[0]);"]},{"Key":"//println!(\"{}\", v[0]);","Fragments":["//"]},{"Key":"v[0]); //","Fragments":["error:"]},{"Key":"// error:","Fragments":["use"]},{"Key":"error: use","Fragments":["of"]},{"Key":"of moved","Fragments":["value"]},{"Key":" Thought","Fragments":["I'd"]},{"Key":"Thought I'd","Fragments":["explain"]},{"Key":"I'd explain","Fragments":["my"]},{"Key":"explain my","Fragments":["reasoning"]},{"Key":"my reasoning","Fragments":["in"]},{"Key":"reasoning in","Fragments":["case"]},{"Key":"I'm totally","Fragments":["off"]},{"Key":"totally off","Fragments":["about"]},{"Key":"off about","Fragments":["any"]},{"Key":"about any","Fragments":["of"]},{"Key":"into this?","Fragments":["This","This"]},{"Key":" rustdoc","Fragments":["is"]},{"Key":"rustdoc is","Fragments":["fun"]},{"Key":"is fun","Fragments":["to"]},{"Key":"to write:","Fragments":["https://doc.rust-lang.org/book/documentation.html#about-rustdoc"]},{"Key":" Seem","Fragments":["like"]},{"Key":"Seem like","Fragments":["you"]},{"Key":"could squash","Fragments":["the"]},{"Key":"squash the","Fragments":["if"]},{"Key":"if chain","Fragments":["with"]},{"Key":"chain with","Fragments":["either"]},{"Key":"with either","Fragments":["a","a","an"]},{"Key":"either a","Fragments":["pattern","`fold()`","bug"]},{"Key":"a pattern","Fragments":["or"]},{"Key":"pattern or","Fragments":["chained"]},{"Key":"or chained","Fragments":["logic,"]},{"Key":"chained logic,","Fragments":["though"]},{"Key":"logic, though","Fragments":["your"]},{"Key":"though your","Fragments":["solution"]},{"Key":"is clear","Fragments":["as"]},{"Key":"clear as","Fragments":["well."]},{"Key":"The else-if,else","Fragments":["chain"]},{"Key":"else-if,else chain","Fragments":["can"]},{"Key":"chain can","Fragments":["definitely","only"]},{"Key":"can definitely","Fragments":["get"]},{"Key":"definitely get","Fragments":["dropped:"]},{"Key":"if is_factor(year,","Fragments":["100)"]},{"Key":"is_factor(year, 100)","Fragments":["{"]},{"Key":" is_factor(year,","Fragments":["400)","4)"]},{"Key":" Or","Fragments":["squash"]},{"Key":"Or squash","Fragments":["fully:"]},{"Key":" (is_factor(year,100)","Fragments":["\u0026\u0026"]},{"Key":"(is_factor(year,100) \u0026\u0026","Fragments":["is_factor(year,400)"]},{"Key":"\u0026\u0026 is_factor(year,400)","Fragments":[")"]},{"Key":"is_factor(year,400) )","Fragments":["||"]},{"Key":") ||","Fragments":["is_factor(year,","is_factor(4)"]},{"Key":"|| is_factor(year,","Fragments":["4)"]},{"Key":"also close","Fragments":["over","over"]},{"Key":"close over","Fragments":["`year`","```year```"]},{"Key":"over `year`","Fragments":["to"]},{"Key":"`year` to","Fragments":["simplify"]},{"Key":"let is_factor","Fragments":["="]},{"Key":"is_factor =","Fragments":["|factor|"]},{"Key":"= |factor|","Fragments":["year"]},{"Key":"|factor| year","Fragments":["%"]},{"Key":"% factor","Fragments":["==","=="]},{"Key":"factor ==","Fragments":["0;","0"]},{"Key":" (is_factor(100)","Fragments":["\u0026\u0026"]},{"Key":"(is_factor(100) \u0026\u0026","Fragments":["is_factor(400)"]},{"Key":"\u0026\u0026 is_factor(400)","Fragments":[")"]},{"Key":"is_factor(400) )","Fragments":["||"]},{"Key":"Now this","Fragments":["is"]},{"Key":"is rust,","Fragments":["so"]},{"Key":"rust, so","Fragments":["I","I'm"]},{"Key":"to ask","Fragments":["if","something...","the","about"]},{"Key":"ask if","Fragments":["you've"]},{"Key":"if you've","Fragments":["considered"]},{"Key":"you've considered","Fragments":["the"]},{"Key":"considered the","Fragments":["order"]},{"Key":"the order","Fragments":["of","of","they","I","comparison,"]},{"Key":"order of","Fragments":["short","the"]},{"Key":"of short","Fragments":["circuiting"]},{"Key":"short circuiting","Fragments":["your"]},{"Key":"circuiting your","Fragments":["`is_factor`"]},{"Key":"your `is_factor`","Fragments":["calls"]},{"Key":"`is_factor` calls","Fragments":["in"]},{"Key":"calls in","Fragments":["terms"]},{"Key":"in terms","Fragments":["of","of","of","of","of","of","of"]},{"Key":"terms of","Fragments":["shrinking","readability)","a","closures","iterators,","elegant,","the","memory"]},{"Key":"of shrinking","Fragments":["the"]},{"Key":"shrinking the","Fragments":["solution"]},{"Key":" seems","Fragments":["a"]},{"Key":"little wasteful","Fragments":["to"]},{"Key":"wasteful to","Fragments":["have","iterate"]},{"Key":"have `allergens()`","Fragments":["as"]},{"Key":"`allergens()` as","Fragments":["a"]},{"Key":"function instead","Fragments":["of","of","of","of"]},{"Key":"a compile","Fragments":["time","time"]},{"Key":"compile time","Fragments":["variable.","variable","because,","ones."]},{"Key":"time variable.","Fragments":["I"]},{"Key":"variable. I","Fragments":["guess"]},{"Key":"I guess","Fragments":["you","I'm","`u32`","it","you","what","this"]},{"Key":"guess you","Fragments":["do","can"]},{"Key":"you do","Fragments":["it","not","two","with","this","want","in"]},{"Key":"get your","Fragments":["own"]},{"Key":"your own","Fragments":["mut","macro"]},{"Key":"own mut","Fragments":["copy"]},{"Key":"mut copy","Fragments":["in"]},{"Key":"copy in","Fragments":["`allergies()`"]},{"Key":"in `allergies()`","Fragments":["?","as"]},{"Key":"`allergies()` ?","Fragments":["interesting."]},{"Key":"also assign","Fragments":["values"]},{"Key":"assign values","Fragments":["to","to"]},{"Key":"values to","Fragments":["the","0,","enum","enums"]},{"Key":"the enum,","Fragments":["which"]},{"Key":"enum, which","Fragments":["can"]},{"Key":"which can","Fragments":["simplify","be"]},{"Key":"the math","Fragments":["later"]},{"Key":"math later","Fragments":["on."]},{"Key":"later on.","Fragments":["e.g.:"]},{"Key":"pub enum","Fragments":["Allergen","Allergen","Allergen"]},{"Key":"enum Allergen","Fragments":["{","{","{"]},{"Key":" Eggs","Fragments":["=","=","="]},{"Key":"Eggs =","Fragments":["1,","1,","1,"]},{"Key":" Peanuts","Fragments":["=","=","="]},{"Key":"Peanuts =","Fragments":["2,","2,","2,"]},{"Key":" Shellfish","Fragments":["=","="]},{"Key":"Shellfish =","Fragments":["4,","4,"]},{"Key":" Strawberries","Fragments":["="]},{"Key":"Strawberries =","Fragments":["8,"]},{"Key":" Tomatoes","Fragments":["="]},{"Key":"Tomatoes =","Fragments":["16,"]},{"Key":" Chocolate","Fragments":["="]},{"Key":"Chocolate =","Fragments":["32,"]},{"Key":" Pollen","Fragments":["="]},{"Key":"Pollen =","Fragments":["64,"]},{"Key":" Cats","Fragments":["="]},{"Key":"Cats =","Fragments":["128,"]},{"Key":"suppose having","Fragments":["allergens"]},{"Key":"having allergens","Fragments":["as"]},{"Key":"allergens as","Fragments":["a"]},{"Key":"time variable","Fragments":["is"]},{"Key":"variable is","Fragments":["a","returned."]},{"Key":"little wasteful.","Fragments":["I"]},{"Key":"wasteful. I","Fragments":["will"]},{"Key":"at your","Fragments":["version","solution."]},{"Key":"your version","Fragments":["to"]},{"Key":"version to","Fragments":["see"]},{"Key":"see how","Fragments":["this","it"]},{"Key":"this can","Fragments":["be"]},{"Key":"the assigned","Fragments":["values"]},{"Key":"assigned values","Fragments":["in"]},{"Key":"in enums.","Fragments":["I"]},{"Key":"enums. I","Fragments":["tried"]},{"Key":"tried this","Fragments":["approach"]},{"Key":"approach at","Fragments":["first"]},{"Key":"at first","Fragments":["but","I"]},{"Key":"first but","Fragments":["found"]},{"Key":"but found","Fragments":["it"]},{"Key":"really confusing","Fragments":["and"]},{"Key":"confusing and","Fragments":["went"]},{"Key":"and went","Fragments":["with"]},{"Key":"the Entry","Fragments":["Pattern"]},{"Key":"Entry Pattern","Fragments":["and"]},{"Key":"Pattern and","Fragments":["got"]},{"Key":"and got","Fragments":["that"]},{"Key":"got that","Fragments":["via"]},{"Key":"that via","Fragments":["googling."]},{"Key":"The `words`-mangling","Fragments":["is"]},{"Key":"`words`-mangling is","Fragments":["a"]},{"Key":"of TDD","Fragments":["+"]},{"Key":"TDD +","Fragments":["searching"]},{"Key":"+ searching","Fragments":["the"]},{"Key":"searching the","Fragments":["Reference"]},{"Key":"the Reference","Fragments":["for"]},{"Key":"Reference for","Fragments":["fitting"]},{"Key":"for fitting","Fragments":["methods."]},{"Key":"use `entry(word).insert_or(0)`","Fragments":["which"]},{"Key":"`entry(word).insert_or(0)` which","Fragments":["returns"]},{"Key":"which returns","Fragments":["`\u0026mut"]},{"Key":"returns `\u0026mut","Fragments":["T`,"]},{"Key":"`\u0026mut T`,","Fragments":["so"]},{"Key":"T`, so","Fragments":["you"]},{"Key":"can update","Fragments":["value"]},{"Key":"update value","Fragments":["inline."]},{"Key":"The only","Fragments":["difference","thing"]},{"Key":"only difference","Fragments":["in"]},{"Key":"difference in","Fragments":["this"]},{"Key":"this iteration","Fragments":["is"]},{"Key":"iteration is","Fragments":["the"]},{"Key":"the reformatting","Fragments":["of"]},{"Key":"reformatting of","Fragments":["the"]},{"Key":"the Allergens","Fragments":["vector."]},{"Key":"It's a","Fragments":["cosmetic","lot"]},{"Key":"a cosmetic","Fragments":["\"error\""]},{"Key":"cosmetic \"error\"","Fragments":["that"]},{"Key":"\"error\" that","Fragments":["I"]},{"Key":"I missed","Fragments":["before","something."]},{"Key":"missed before","Fragments":["submission."]},{"Key":" Basically,","Fragments":["this","I"]},{"Key":"Basically, this","Fragments":["problem"]},{"Key":"problem was","Fragments":["a"]},{"Key":"a big","Fragments":["jump","fan","issue.","deal","issue"]},{"Key":"big jump","Fragments":["for"]},{"Key":"jump for","Fragments":["me"]},{"Key":"me in","Fragments":["\"Rusteese\","]},{"Key":"in \"Rusteese\",","Fragments":["as"]},{"Key":"\"Rusteese\", as","Fragments":["I'm"]},{"Key":"not used","Fragments":["to"]},{"Key":"whole pointer","Fragments":["\u0026"]},{"Key":"pointer \u0026","Fragments":["borrowing"]},{"Key":"\u0026 borrowing","Fragments":["concept."]},{"Key":"borrowing concept.","Fragments":["And"]},{"Key":"concept. And","Fragments":["Traits."]},{"Key":"really happy","Fragments":["with"]},{"Key":"the catch-all","Fragments":["case"]},{"Key":"catch-all case","Fragments":["in"]},{"Key":"in `complement_strand()`.","Fragments":["It"]},{"Key":"`complement_strand()`. It","Fragments":["looks"]},{"Key":"looks to","Fragments":["me","be","be"]},{"Key":"me like","Fragments":["everything","`chain(\u0026vec![(1,","a"]},{"Key":"like everything","Fragments":["should"]},{"Key":"everything should","Fragments":["be"]},{"Key":"be wrapped","Fragments":["in"]},{"Key":"wrapped in","Fragments":["a"]},{"Key":" Nucleotide","Fragments":["pairing"]},{"Key":"Nucleotide pairing","Fragments":["being"]},{"Key":"pairing being","Fragments":["the"]},{"Key":"being the","Fragments":["core"]},{"Key":"the core","Fragments":["logic","/"]},{"Key":"core logic","Fragments":["here,"]},{"Key":"logic here,","Fragments":["I"]},{"Key":"here, I","Fragments":["put","was"]},{"Key":"I put","Fragments":["it","everything"]},{"Key":"put it","Fragments":["in"]},{"Key":"in its","Fragments":["own","use","idomatic"]},{"Key":"its own","Fragments":["function","function","function","function,","letters"]},{"Key":"own function","Fragments":["for","as","and"]},{"Key":"function for","Fragments":["easier"]},{"Key":"for easier","Fragments":["reference"]},{"Key":"easier reference","Fragments":["and"]},{"Key":"reference and","Fragments":["maintenance."]},{"Key":"I generally","Fragments":["find","prefer"]},{"Key":"generally find","Fragments":["`const"]},{"Key":"find `const","Fragments":["=="]},{"Key":"`const ==","Fragments":["calculation`"]},{"Key":"== calculation`","Fragments":["harder"]},{"Key":"calculation` harder","Fragments":["to"]},{"Key":"harder to","Fragments":["read","read,","follow","understand.","understand"]},{"Key":"read than","Fragments":["`calculation"]},{"Key":"than `calculation","Fragments":["=="]},{"Key":"`calculation ==","Fragments":["const`"]},{"Key":"== const`","Fragments":["but"]},{"Key":"const` but","Fragments":["that"]},{"Key":"are several","Fragments":["things"]},{"Key":"several things","Fragments":["that"]},{"Key":"be improved,","Fragments":["but"]},{"Key":"improved, but","Fragments":["I"]},{"Key":"get all","Fragments":["tests"]},{"Key":"all tests","Fragments":["passing"]},{"Key":"tests passing","Fragments":["first:"]},{"Key":"1. Use","Fragments":["custom"]},{"Key":"Use custom","Fragments":["error"]},{"Key":"custom error","Fragments":["types"]},{"Key":"2. Find","Fragments":["out"]},{"Key":"Find out","Fragments":["the"]},{"Key":"the shorthand","Fragments":["rules"]},{"Key":"shorthand rules","Fragments":["and"]},{"Key":"rules and","Fragments":["use"]},{"Key":"use them","Fragments":["instead"]},{"Key":"them instead","Fragments":["of"]},{"Key":"that big","Fragments":["ugly","a"]},{"Key":"big ugly","Fragments":["match"]},{"Key":"ugly match","Fragments":["expression"]},{"Key":"3. Speed","Fragments":["up"]},{"Key":"Speed up","Fragments":["lookup"]},{"Key":"up lookup","Fragments":["by"]},{"Key":"lookup by","Fragments":["using"]},{"Key":" Doing","Fragments":["this"]},{"Key":"Doing this","Fragments":["one"]},{"Key":"one cost","Fragments":["me"]},{"Key":"cost me","Fragments":["some"]},{"Key":"me some","Fragments":["nerves.","explanation","of"]},{"Key":"been avoiding","Fragments":["languages"]},{"Key":"avoiding languages","Fragments":["with"]},{"Key":"languages with","Fragments":["static","functional"]},{"Key":"with static","Fragments":["typing"]},{"Key":"static typing","Fragments":["and"]},{"Key":"typing and","Fragments":["pointers"]},{"Key":"and pointers","Fragments":["for"]},{"Key":"pointers for","Fragments":["so"]},{"Key":"for so","Fragments":["long,"]},{"Key":"so long,","Fragments":["I"]},{"Key":"long, I","Fragments":["now"]},{"Key":"now have","Fragments":["problems"]},{"Key":"have problems","Fragments":["wrapping"]},{"Key":"problems wrapping","Fragments":["my"]},{"Key":"wrapping my","Fragments":["head"]},{"Key":"around when","Fragments":["to"]},{"Key":"The explicit","Fragments":["declaration"]},{"Key":"explicit declaration","Fragments":["of"]},{"Key":"declaration of","Fragments":["lifetime"]},{"Key":"of lifetime","Fragments":["made"]},{"Key":"lifetime made","Fragments":["this"]},{"Key":"this hell","Fragments":["for"]},{"Key":"hell for","Fragments":["me,"]},{"Key":"for me,","Fragments":["until","and"]},{"Key":"me, until","Fragments":["I"]},{"Key":"until I","Fragments":["tried","checked","came"]},{"Key":"tried just","Fragments":["using"]},{"Key":"just using","Fragments":["`String`","the"]},{"Key":"using `String`","Fragments":["internally."]},{"Key":"For this","Fragments":["one"]},{"Key":"I stumbled","Fragments":["upon"]},{"Key":"stumbled upon","Fragments":["`entry(x).or_insert(y)`."]},{"Key":" Initially","Fragments":["I'd"]},{"Key":"Initially I'd","Fragments":["implemented"]},{"Key":"I'd implemented","Fragments":["a"]},{"Key":"implemented a","Fragments":["basic"]},{"Key":"a basic","Fragments":["version"]},{"Key":"basic version","Fragments":["of"]},{"Key":"version of","Fragments":["`count`,","each","the"]},{"Key":"of `count`,","Fragments":["but"]},{"Key":"`count`, but","Fragments":["then"]},{"Key":"then decided","Fragments":["to","to"]},{"Key":"to deduplicate","Fragments":["code"]},{"Key":"deduplicate code","Fragments":["and"]},{"Key":"code and","Fragments":["re-use"]},{"Key":"and re-use","Fragments":["the"]},{"Key":"re-use the","Fragments":["broader"]},{"Key":"the broader","Fragments":["`nucleotide_counts`"]},{"Key":"Yeah seems","Fragments":["good.","reasonable."]},{"Key":"good. Minor","Fragments":["thing"]},{"Key":"Minor thing","Fragments":["that"]},{"Key":"thing that","Fragments":["someone","*really*","really"]},{"Key":"that someone","Fragments":["looking","explained"]},{"Key":"someone looking","Fragments":["to"]},{"Key":"looking to","Fragments":["squeeze"]},{"Key":"to squeeze","Fragments":["out"]},{"Key":"squeeze out","Fragments":["every"]},{"Key":"out every","Fragments":["bit"]},{"Key":"every bit","Fragments":["of"]},{"Key":"bit of","Fragments":["performance","a","work.","duplication","other"]},{"Key":"of performance","Fragments":["possible"]},{"Key":"performance possible","Fragments":["would"]},{"Key":"possible would","Fragments":["probably"]},{"Key":"be that","Fragments":["every","it","`overwrite`"]},{"Key":"that every","Fragments":["word"]},{"Key":"word is","Fragments":["being"]},{"Key":"is being","Fragments":["lowercased","able","applied","used"]},{"Key":"being lowercased","Fragments":["twice"]},{"Key":"lowercased twice","Fragments":["when"]},{"Key":"twice when","Fragments":["it"]},{"Key":"when it","Fragments":["could","happens"]},{"Key":"just be","Fragments":["lowercased","written"]},{"Key":"be lowercased","Fragments":["once?"]},{"Key":"Good point.","Fragments":["That","thank"]},{"Key":"point. That","Fragments":["actually"]},{"Key":"That actually","Fragments":["simplifies"]},{"Key":"actually simplifies","Fragments":["`alphagram`"]},{"Key":"simplifies `alphagram`","Fragments":["too."]},{"Key":" Although","Fragments":["not","it"]},{"Key":"Although not","Fragments":["as","necessary,"]},{"Key":"as succinct","Fragments":["as"]},{"Key":"succinct as","Fragments":["your"]},{"Key":"as your","Fragments":["second"]},{"Key":"second solution,","Fragments":["I"]},{"Key":"interesting in","Fragments":["its"]},{"Key":"its use","Fragments":["of"]},{"Key":"of `fold`.","Fragments":["Specifically,"]},{"Key":"`fold`. Specifically,","Fragments":["the"]},{"Key":"Specifically, the","Fragments":["`distance`"]},{"Key":"the `distance`","Fragments":["accumulator"]},{"Key":"`distance` accumulator","Fragments":["parameter"]},{"Key":"accumulator parameter","Fragments":["with"]},{"Key":"parameter with","Fragments":["it's"]},{"Key":"with it's","Fragments":["`mut`"]},{"Key":"it's `mut`","Fragments":["specifier."]},{"Key":"`mut` specifier.","Fragments":["I've"]},{"Key":"specifier. I've","Fragments":["run"]},{"Key":"I've run","Fragments":["your"]},{"Key":"your code","Fragments":["without","looks","about","has","still","will"]},{"Key":"code without","Fragments":["the"]},{"Key":"the `mut`","Fragments":["specifier"]},{"Key":"`mut` specifier","Fragments":["to"]},{"Key":"specifier to","Fragments":["see"]},{"Key":"see what","Fragments":["compiler","advantage"]},{"Key":"what compiler","Fragments":["errors"]},{"Key":"errors are","Fragments":["generated."]},{"Key":"are generated.","Fragments":["It's","It"]},{"Key":"generated. It's","Fragments":["really"]},{"Key":"It's really","Fragments":["helpful"]},{"Key":"really helpful","Fragments":["to"]},{"Key":"helpful to","Fragments":["have"]},{"Key":"have learned","Fragments":["about"]},{"Key":"learned about","Fragments":["that.","the","`cloned()`","bit"]},{"Key":"the process","Fragments":["of","of"]},{"Key":"process of","Fragments":["learning","arriving"]},{"Key":"of learning","Fragments":["Rust,"]},{"Key":"learning Rust,","Fragments":["and"]},{"Key":"Rust, and","Fragments":["figuring","so"]},{"Key":"and figuring","Fragments":["out"]},{"Key":"figuring out","Fragments":["when","\"what,"]},{"Key":"out when","Fragments":["and"]},{"Key":"when and","Fragments":["where"]},{"Key":"and where","Fragments":["to"]},{"Key":"where to","Fragments":["put"]},{"Key":"to put","Fragments":["`\u0026`,","up","my"]},{"Key":"put `\u0026`,","Fragments":["`*`"]},{"Key":"`\u0026`, `*`","Fragments":["and"]},{"Key":"`*` and","Fragments":["`mut`"]},{"Key":"and `mut`","Fragments":["has"]},{"Key":"`mut` has","Fragments":["been"]},{"Key":"a challenge.","Fragments":["Insofar"]},{"Key":"challenge. Insofar","Fragments":["as"]},{"Key":"Insofar as","Fragments":["languages"]},{"Key":"as languages","Fragments":["with"]},{"Key":"with functional","Fragments":["programming","code"]},{"Key":"functional programming","Fragments":["sensibilities","approach.","paradigms."]},{"Key":"programming sensibilities","Fragments":["go,"]},{"Key":"sensibilities go,","Fragments":["I'm"]},{"Key":"go, I'm","Fragments":["accustomed"]},{"Key":"I'm accustomed","Fragments":["to"]},{"Key":"accustomed to","Fragments":["not"]},{"Key":"to not","Fragments":["having","use","use","attempt"]},{"Key":"to annotate","Fragments":["parameter"]},{"Key":"annotate parameter","Fragments":["(im)mutability,"]},{"Key":"parameter (im)mutability,","Fragments":["leaving"]},{"Key":"(im)mutability, leaving","Fragments":["that"]},{"Key":"leaving that","Fragments":["task"]},{"Key":"that task","Fragments":["to"]},{"Key":"task to","Fragments":["local"]},{"Key":"to local","Fragments":["or"]},{"Key":"local or","Fragments":["class"]},{"Key":"or class","Fragments":["variable"]},{"Key":"class variable","Fragments":["declarations"]},{"Key":"variable declarations","Fragments":["(e.g.,"]},{"Key":"declarations (e.g.,","Fragments":["Scala"]},{"Key":"(e.g., Scala","Fragments":["with"]},{"Key":"Scala with","Fragments":["its"]},{"Key":"with its","Fragments":["`val`","purpose."]},{"Key":"its `val`","Fragments":["and"]},{"Key":"`val` and","Fragments":["`var`"]},{"Key":"and `var`","Fragments":["variable"]},{"Key":"`var` variable","Fragments":["declaration"]},{"Key":"variable declaration","Fragments":["keywords.)"]},{"Key":"read a","Fragments":["manual","value,"]},{"Key":"manual or","Fragments":["something."]},{"Key":"realized I","Fragments":["could"]},{"Key":"could write","Fragments":["something"]},{"Key":"write something","Fragments":["similar","like"]},{"Key":"something similar","Fragments":["but","to"]},{"Key":"similar but","Fragments":["consolidated"]},{"Key":"but consolidated","Fragments":["to"]},{"Key":"consolidated to","Fragments":["just"]},{"Key":"just one","Fragments":["readable"]},{"Key":"one readable","Fragments":["line."]},{"Key":"I'd use","Fragments":["parentheses"]},{"Key":"use parentheses","Fragments":["to"]},{"Key":"parentheses to","Fragments":["split"]},{"Key":"to split","Fragments":["that","`verify`"]},{"Key":"split that","Fragments":["expression"]},{"Key":"that expression","Fragments":["into"]},{"Key":"expression into","Fragments":["more"]},{"Key":"into more","Fragments":["readable"]},{"Key":"readable bits.","Fragments":["You"]},{"Key":"bits. You","Fragments":["could"]},{"Key":"a closure","Fragments":["to","to",":)","capturing"]},{"Key":"closure to","Fragments":["eliminate","fix","`split()`","simplify"]},{"Key":"to eliminate","Fragments":["the"]},{"Key":"eliminate the","Fragments":["repetition"]},{"Key":"the repetition","Fragments":["of"]},{"Key":"repetition of","Fragments":["`year"]},{"Key":"of `year","Fragments":["%"]},{"Key":"% \u003csomething\u003e","Fragments":["=="]},{"Key":"\u003csomething\u003e ==","Fragments":["0`."]},{"Key":"This solution","Fragments":["is","uses","iterates"]},{"Key":"is at","Fragments":["the"]},{"Key":"time rather","Fragments":["crude"]},{"Key":"rather crude","Fragments":["and"]},{"Key":"crude and","Fragments":["very"]},{"Key":"and very","Fragments":["obvious."]},{"Key":"It can","Fragments":["also"]},{"Key":"also be","Fragments":["computationally","more","used"]},{"Key":"be computationally","Fragments":["expensive"]},{"Key":"computationally expensive","Fragments":["and"]},{"Key":"expensive and","Fragments":["deplete"]},{"Key":"and deplete","Fragments":["entropy."]},{"Key":"the purposes","Fragments":["of"]},{"Key":"purposes of","Fragments":["this"]},{"Key":"exercise, I","Fragments":["considered"]},{"Key":"I considered","Fragments":["this","something","writing"]},{"Key":"considered this","Fragments":["good"]},{"Key":"this good","Fragments":["enough."]},{"Key":"me will","Fragments":["be"]},{"Key":"readable write","Fragments":["expression"]},{"Key":"write expression","Fragments":["which"]},{"Key":"expression which","Fragments":["save"]},{"Key":"which save","Fragments":["to"]},{"Key":"save to","Fragments":["variable"]},{"Key":"variable direct","Fragments":["to"]},{"Key":"direct to","Fragments":["boolean"]},{"Key":"to boolean","Fragments":["expression..."]},{"Key":"a `outputs`","Fragments":["which","vector.","vector."]},{"Key":"`outputs` which","Fragments":["starts","starts"]},{"Key":"to `outputs`","Fragments":["based","based"]},{"Key":"`outputs` based","Fragments":["on","on"]},{"Key":"return `outputs`","Fragments":["right","right"]},{"Key":"`outputs` right","Fragments":["after","after"]},{"Key":" Sitting","Fragments":["on"]},{"Key":"Sitting on","Fragments":["the"]},{"Key":"first solution","Fragments":["just"]},{"Key":"just felt","Fragments":["..."]},{"Key":"felt ...","Fragments":["wrong."]},{"Key":" Here's","Fragments":["the","some"]},{"Key":"Here's the","Fragments":["updated"]},{"Key":"the updated","Fragments":["one."]},{"Key":"think `if`","Fragments":["expression"]},{"Key":"`if` expression","Fragments":["is"]},{"Key":"expression is","Fragments":["better","compiled"]},{"Key":"better (in","Fragments":["terms"]},{"Key":"(in terms","Fragments":["of"]},{"Key":"of readability)","Fragments":["than"]},{"Key":"readability) than","Fragments":["slightly"]},{"Key":"than slightly","Fragments":["more"]},{"Key":"more complex","Fragments":["simple"]},{"Key":"complex simple","Fragments":["boolean"]},{"Key":"simple boolean","Fragments":["expression","logic"]},{"Key":"expression here,","Fragments":["as"]},{"Key":"it shows","Fragments":["the","rather"]},{"Key":"leap year","Fragments":["definition","detection","test"]},{"Key":"year definition","Fragments":["as"]},{"Key":"definition as","Fragments":["you"]},{"Key":"would explain","Fragments":["it"]},{"Key":"explain it","Fragments":["to"]},{"Key":"to another","Fragments":["human."]},{"Key":"for one-liners,","Fragments":["well,"]},{"Key":"one-liners, well,","Fragments":["it's"]},{"Key":"well, it's","Fragments":["a"]},{"Key":"taste. You","Fragments":["can"]},{"Key":"can add","Fragments":["line","`#inline(always)`"]},{"Key":"add line","Fragments":["wrapping"]},{"Key":"line wrapping","Fragments":["if"]},{"Key":"wrapping if","Fragments":["you"]},{"Key":"you like,","Fragments":["I","you"]},{"Key":"like, I","Fragments":["won't"]},{"Key":"I won't","Fragments":["submit","submit","be"]},{"Key":"won't submit","Fragments":["another","new"]},{"Key":"submit another","Fragments":["iteration"]},{"Key":"iteration for","Fragments":["such"]},{"Key":"a trivial","Fragments":["change."]},{"Key":"like one-line","Fragments":["if"]},{"Key":"one-line if","Fragments":["-"]},{"Key":"if -","Fragments":["it's"]},{"Key":"it's hard","Fragments":["readable"]},{"Key":"hard readable","Fragments":["I"]},{"Key":"readable I","Fragments":["think.."]},{"Key":"I think..","Fragments":["And"]},{"Key":"think.. And","Fragments":["look"]},{"Key":"And look","Fragments":["at"]},{"Key":"at boolean","Fragments":["operators","operators."]},{"Key":"boolean operators","Fragments":["should","are"]},{"Key":"operators should","Fragments":["be"]},{"Key":"be help","Fragments":["with"]},{"Key":"help with","Fragments":["this."]},{"Key":"Maybe you","Fragments":["can","should"]},{"Key":"can consider","Fragments":["refactoring"]},{"Key":"consider refactoring","Fragments":["such"]},{"Key":"refactoring such","Fragments":["that"]},{"Key":"only determine","Fragments":["the"]},{"Key":"determine the","Fragments":["sorted"]},{"Key":"sorted list","Fragments":["of","inside"]},{"Key":"of letters","Fragments":["for"]},{"Key":"letters for","Fragments":["```word```"]},{"Key":"for ```word```","Fragments":["once?"]},{"Key":"Is a","Fragments":["filter"]},{"Key":"filter +","Fragments":["count"]},{"Key":"+ count","Fragments":["faster"]},{"Key":"count faster","Fragments":["than"]},{"Key":"fold where","Fragments":["you"]},{"Key":"you increase","Fragments":["the"]},{"Key":"increase the","Fragments":["count"]},{"Key":"count for","Fragments":["every"]},{"Key":"every different","Fragments":["couple?"]},{"Key":"different couple?","Fragments":["Asking"]},{"Key":"couple? Asking","Fragments":["for"]},{"Key":"Asking for","Fragments":["a"]},{"Key":"a friend","Fragments":[":p"]},{"Key":" BTW,","Fragments":["at"]},{"Key":"BTW, at","Fragments":["first"]},{"Key":"thought `fold()`","Fragments":["should"]},{"Key":"`fold()` should","Fragments":["be"]},{"Key":"be faster,","Fragments":["as"]},{"Key":"faster, as","Fragments":["it"]},{"Key":"it compare","Fragments":["values"]},{"Key":"compare values","Fragments":["and"]},{"Key":"values and","Fragments":["operates","borrowing","everyone"]},{"Key":"and operates","Fragments":["on"]},{"Key":"operates on","Fragments":["counter"]},{"Key":"on counter","Fragments":["in"]},{"Key":"counter in","Fragments":["one","a"]},{"Key":"one pass/place,","Fragments":["but"]},{"Key":"pass/place, but","Fragments":["benchmarks"]},{"Key":"but benchmarks","Fragments":["showed"]},{"Key":"benchmarks showed","Fragments":["otherwise."]},{"Key":" Very","Fragments":["interesting","clean","smooth","readable","happy"]},{"Key":"Very interesting","Fragments":["question"]},{"Key":"interesting question","Fragments":["indeed."]},{"Key":"question indeed.","Fragments":["I"]},{"Key":"I decided","Fragments":["to","to","to"]},{"Key":"make a","Fragments":["simple","good","rectangle.","good","comment","rectangle.","test","rectangle."]},{"Key":"simple benchmark","Fragments":["(using"]},{"Key":"benchmark (using","Fragments":["nightly"]},{"Key":"(using nightly","Fragments":["rust's"]},{"Key":"nightly rust's","Fragments":["`#![feature(test)]`:"]},{"Key":"fn hamming_distance_fold(a:","Fragments":["\u0026str,"]},{"Key":"hamming_distance_fold(a: \u0026str,","Fragments":["b:"]},{"Key":"\u0026str, b:","Fragments":["\u0026str)","\u0026str)"]},{"Key":"b: \u0026str)","Fragments":["-\u003e","-\u003e"]},{"Key":"-\u003e usize","Fragments":["{","{"]},{"Key":" a.chars().zip(b.chars()).fold(0,","Fragments":["|c,"]},{"Key":"a.chars().zip(b.chars()).fold(0, |c,","Fragments":["(a,"]},{"Key":"|c, (a,","Fragments":["b)|"]},{"Key":"(a, b)|","Fragments":["if"]},{"Key":"b)| if","Fragments":["a"]},{"Key":"a !=","Fragments":["b","b).count()","b)`,"]},{"Key":"!= b","Fragments":["{"]},{"Key":"b {","Fragments":["c"]},{"Key":"{ c","Fragments":["+","})"]},{"Key":"c +","Fragments":["1"]},{"Key":"+ 1","Fragments":["}"]},{"Key":"1 }","Fragments":["else"]},{"Key":"fn hamming_distance_filter(a:","Fragments":["\u0026str,"]},{"Key":"hamming_distance_filter(a: \u0026str,","Fragments":["b:"]},{"Key":" a.chars().zip(b.chars()).filter(|\u0026(a,","Fragments":["b)|"]},{"Key":"a.chars().zip(b.chars()).filter(|\u0026(a, b)|","Fragments":["a"]},{"Key":"b)| a","Fragments":["!=","!="]},{"Key":"static VAR1:","Fragments":["\u0026'static"]},{"Key":"VAR1: \u0026'static","Fragments":["str"]},{"Key":"static VAR2:","Fragments":["\u0026'static"]},{"Key":"VAR2: \u0026'static","Fragments":["str"]},{"Key":"fn bench_hamming_fold(b:","Fragments":["\u0026mut"]},{"Key":"bench_hamming_fold(b: \u0026mut","Fragments":["Bencher)"]},{"Key":" b.bytes","Fragments":["=","="]},{"Key":"b.bytes =","Fragments":["VAR1.len()","VAR1.len()"]},{"Key":"= VAR1.len()","Fragments":["as","as"]},{"Key":"VAR1.len() as","Fragments":["u64;","u64;"]},{"Key":" hamming_distance_fold(VAR1,","Fragments":["VAR2)"]},{"Key":"fn bench_hamming_filter(b:","Fragments":["\u0026mut"]},{"Key":"bench_hamming_filter(b: \u0026mut","Fragments":["Bencher)"]},{"Key":" hamming_distance_filter(VAR1,","Fragments":["VAR2)"]},{"Key":"The results","Fragments":["are"]},{"Key":"results are","Fragments":["the"]},{"Key":" Running","Fragments":["target/release/test-f75a33f79a0f4a31"]},{"Key":" running","Fragments":["2"]},{"Key":"running 2","Fragments":["tests"]},{"Key":"test bench_hamming_filter","Fragments":["..."]},{"Key":"bench_hamming_filter ...","Fragments":["bench:"]},{"Key":"bench: 2,615","Fragments":["ns/iter"]},{"Key":"2,615 ns/iter","Fragments":["(+/-"]},{"Key":"(+/- 49)","Fragments":["="]},{"Key":"49) =","Fragments":["136"]},{"Key":"= 136","Fragments":["MB/s"]},{"Key":"test bench_hamming_fold","Fragments":["..."]},{"Key":"bench_hamming_fold ...","Fragments":["bench:"]},{"Key":"bench: 2,923","Fragments":["ns/iter"]},{"Key":"2,923 ns/iter","Fragments":["(+/-"]},{"Key":"(+/- 68)","Fragments":["="]},{"Key":"68) =","Fragments":["122"]},{"Key":"= 122","Fragments":["MB/s"]},{"Key":"test result:","Fragments":["ok."]},{"Key":"result: ok.","Fragments":["0"]},{"Key":"ok. 0","Fragments":["passed;"]},{"Key":"0 passed;","Fragments":["0"]},{"Key":"passed; 0","Fragments":["failed;"]},{"Key":"0 failed;","Fragments":["0"]},{"Key":"failed; 0","Fragments":["ignored;"]},{"Key":"0 ignored;","Fragments":["2"]},{"Key":"ignored; 2","Fragments":["measured"]},{"Key":"So yes,","Fragments":["filter"]},{"Key":"yes, filter","Fragments":["approach"]},{"Key":"filter approach","Fragments":["is"]},{"Key":"approach is","Fragments":["a","pretty"]},{"Key":"little faster,","Fragments":["than"]},{"Key":"faster, than","Fragments":["fold"]},{"Key":"than fold","Fragments":["(around"]},{"Key":"fold (around","Fragments":["1.4"]},{"Key":"(around 1.4","Fragments":["times"]},{"Key":"1.4 times","Fragments":["faster)."]},{"Key":"hash lookup","Fragments":["for"]},{"Key":"every character","Fragments":["in"]},{"Key":"character in","Fragments":["the","place."]},{"Key":"input string.","Fragments":["It'd"]},{"Key":"string. It'd","Fragments":["be"]},{"Key":"It'd be","Fragments":["faster"]},{"Key":"count up","Fragments":["in"]},{"Key":"up in","Fragments":["a","your","the"]},{"Key":"different data","Fragments":["structure"]},{"Key":"data structure","Fragments":["and","be","that"]},{"Key":"structure and","Fragments":["build","replace"]},{"Key":"and build","Fragments":["the","the"]},{"Key":"map at","Fragments":["the"]},{"Key":"this leverages","Fragments":["the"]},{"Key":"leverages the","Fragments":["'last"]},{"Key":"the 'last","Fragments":["line"]},{"Key":"'last line","Fragments":["is"]},{"Key":"line is","Fragments":["the"]},{"Key":"return value'","Fragments":["of"]},{"Key":"value' of","Fragments":["rust"]},{"Key":"of rust","Fragments":["and","otherwise","-"]},{"Key":"rust and","Fragments":["the"]},{"Key":"fact that","Fragments":["%100","an","it's","they","it's","it"]},{"Key":"that %100","Fragments":["doesn't"]},{"Key":"%100 doesn't","Fragments":["determine"]},{"Key":"doesn't determine","Fragments":["anything"]},{"Key":"determine anything","Fragments":["on"]},{"Key":"anything on","Fragments":["it's"]},{"Key":"on it's","Fragments":["own."]},{"Key":"the reasoning","Fragments":["for"]},{"Key":"reasoning for","Fragments":["`year:"]},{"Key":"for `year:","Fragments":["u32`?"]},{"Key":"`year: u32`?","Fragments":["Am"]},{"Key":"u32`? Am","Fragments":["just"]},{"Key":"Am just","Fragments":["peeping"]},{"Key":"just peeping","Fragments":["into"]},{"Key":"peeping into","Fragments":["the"]},{"Key":"the language,","Fragments":["so"]},{"Key":"language, so","Fragments":["I'm"]},{"Key":"so I'm","Fragments":["not","trying","going"]},{"Key":"not certain","Fragments":["of"]},{"Key":"certain of","Fragments":["conventions"]},{"Key":"of conventions","Fragments":["around"]},{"Key":"conventions around","Fragments":["signed/unsigned/sizes"]},{"Key":"around signed/unsigned/sizes","Fragments":["of"]},{"Key":"signed/unsigned/sizes of","Fragments":["ints."]},{"Key":"Yeah good","Fragments":["stuff"]},{"Key":"good stuff","Fragments":["in"]},{"Key":"stuff in","Fragments":["Matcher,"]},{"Key":"in Matcher,","Fragments":["avoids"]},{"Key":"Matcher, avoids","Fragments":["having"]},{"Key":"avoids having","Fragments":["to"]},{"Key":"to re=sort","Fragments":["the"]},{"Key":"re=sort the","Fragments":["`word`"]},{"Key":"the `word`","Fragments":["more"]},{"Key":"`word` more","Fragments":["than"]},{"Key":"than once.","Fragments":["The"]},{"Key":"once. The","Fragments":["`filter`"]},{"Key":"The `filter`","Fragments":["is"]},{"Key":"is working","Fragments":["well"]},{"Key":"working well","Fragments":["here."]},{"Key":"well here.","Fragments":["`map(|\u0026x|"]},{"Key":"here. `map(|\u0026x|","Fragments":["x)`"]},{"Key":"x)` could","Fragments":["be"]},{"Key":"`cloned()` ,","Fragments":["[iterator"]},{"Key":", [iterator","Fragments":["docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)"]},{"Key":"docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned) have","Fragments":["things"]},{"Key":"have things","Fragments":["to"]},{"Key":"say on","Fragments":["that."]},{"Key":"on that.","Fragments":["I"]},{"Key":"that's the","Fragments":["only"]},{"Key":"the only","Fragments":["thing","place","attribute","one","thing"]},{"Key":"only thing","Fragments":["I'd","new","you"]},{"Key":"thing I'd","Fragments":["look"]},{"Key":"I'd look","Fragments":["to"]},{"Key":"look to","Fragments":["change,","be"]},{"Key":"to change,","Fragments":["good"]},{"Key":"change, good","Fragments":["stuff."]},{"Key":"This version","Fragments":["uses","is","passes","uses","works"]},{"Key":"version uses","Fragments":["unboxed","`to_lowercase()`"]},{"Key":"uses unboxed","Fragments":["closures"]},{"Key":"unboxed closures","Fragments":["from","(which"]},{"Key":"closures from","Fragments":["unstable"]},{"Key":"from unstable","Fragments":["Rust."]},{"Key":"unstable Rust.","Fragments":["For"]},{"Key":"Rust. For","Fragments":["the","the"]},{"Key":"the version","Fragments":["which","utilizing"]},{"Key":"version which","Fragments":["works"]},{"Key":"which works","Fragments":["with"]},{"Key":"works with","Fragments":["stable","stable"]},{"Key":"with stable","Fragments":["Rust,","Rust."]},{"Key":"stable Rust,","Fragments":["see"]},{"Key":"Rust, see","Fragments":["iteration"]},{"Key":"see iteration","Fragments":["2.","2.","1."]},{"Key":" Seems","Fragments":["good,","like","to","like"]},{"Key":"Seems good,","Fragments":["good"]},{"Key":"good, good","Fragments":["`filter`"]},{"Key":"good `filter`","Fragments":["use."]},{"Key":"`filter` use.","Fragments":["Line"]},{"Key":"use. Line","Fragments":["10"]},{"Key":"Line 10","Fragments":["is"]},{"Key":"10 is","Fragments":["a"]},{"Key":" `map(|\u0026w|","Fragments":["w)`"]},{"Key":"`map(|\u0026w| w)`","Fragments":["could"]},{"Key":"w)` could","Fragments":["be"]},{"Key":"feel a","Fragments":["little"]},{"Key":"little bit","Fragments":["weird","unbalanced.","more","better"]},{"Key":"bit weird","Fragments":["about"]},{"Key":"weird about","Fragments":["`!(a"]},{"Key":"about `!(a","Fragments":["=="]},{"Key":"`!(a ==","Fragments":["b)`"]},{"Key":"== b)`","Fragments":["rather"]},{"Key":"b)` rather","Fragments":["than"]},{"Key":"than `a","Fragments":["!="]},{"Key":"`a !=","Fragments":["b`"]},{"Key":"Hi, its","Fragments":["nice"]},{"Key":"its nice","Fragments":["concise"]},{"Key":"nice concise","Fragments":["one,","one...","one"]},{"Key":"concise one,","Fragments":["but..."]},{"Key":"one, but...","Fragments":["u64"]},{"Key":"but... u64","Fragments":["for"]},{"Key":"u64 for","Fragments":["year?"]},{"Key":" Easier","Fragments":["to"]},{"Key":"Easier to","Fragments":["call"]},{"Key":"call to_string","Fragments":["on","here."]},{"Key":"to_string on","Fragments":["the"]},{"Key":"number instead","Fragments":["of"]},{"Key":"of print","Fragments":["format."]},{"Key":"also repeated","Fragments":["code,"]},{"Key":"repeated code,","Fragments":["the"]},{"Key":"code, the","Fragments":["blocks"]},{"Key":"the blocks","Fragments":["with"]},{"Key":"blocks with","Fragments":["if"]},{"Key":"with if","Fragments":["has"]},{"Key":"if has","Fragments":["factor"]},{"Key":"has factor","Fragments":["then"]},{"Key":"factor then","Fragments":["push"]},{"Key":"then push","Fragments":["str"]},{"Key":"push str","Fragments":["could"]},{"Key":"str could","Fragments":["be"]},{"Key":"be put","Fragments":["in"]},{"Key":"put in","Fragments":["a"]},{"Key":"the feedback.","Fragments":["I"]},{"Key":"feedback. I","Fragments":["followed"]},{"Key":"followed your","Fragments":["advice"]},{"Key":"your advice","Fragments":["on"]},{"Key":"advice on","Fragments":["both"]},{"Key":"on both","Fragments":["and"]},{"Key":"both and","Fragments":["like"]},{"Key":"and like","Fragments":["the"]},{"Key":"the new","Fragments":["version"]},{"Key":"version a","Fragments":["lot"]},{"Key":" README","Fragments":["says:"]},{"Key":"README says:","Fragments":["\"you"]},{"Key":"says: \"you","Fragments":["may"]},{"Key":"\"you may","Fragments":["assume"]},{"Key":"may assume","Fragments":["that"]},{"Key":"assume that","Fragments":["only"]},{"Key":"that only","Fragments":["sequences"]},{"Key":"only sequences","Fragments":["of"]},{"Key":"sequences of","Fragments":["equal"]},{"Key":"of equal","Fragments":["length"]},{"Key":"equal length","Fragments":["will"]},{"Key":"length will","Fragments":["be"]},{"Key":"be passed","Fragments":["to","as"]},{"Key":"passed to","Fragments":["your"]},{"Key":"to your","Fragments":["hamming","`Crate.toml`","advice."]},{"Key":"your hamming","Fragments":["distance"]},{"Key":"hamming distance","Fragments":["function.\""]},{"Key":" checking","Fragments":["len"]},{"Key":"checking len","Fragments":["is"]},{"Key":"len is","Fragments":["unnecessery."]},{"Key":" Interesting.","Fragments":["The"]},{"Key":"Interesting. The","Fragments":["README"]},{"Key":"The README","Fragments":["does"]},{"Key":"README does","Fragments":["say"]},{"Key":"does say","Fragments":["that,","nitpick)"]},{"Key":"say that,","Fragments":["but"]},{"Key":"the set","Fragments":["of"]},{"Key":"set of","Fragments":["tests","natural"]},{"Key":"of tests","Fragments":["includes"]},{"Key":"tests includes","Fragments":["different"]},{"Key":"includes different","Fragments":["length"]},{"Key":"different length","Fragments":["strings"]},{"Key":"length strings","Fragments":["and"]},{"Key":"strings and","Fragments":["check"]},{"Key":"and check","Fragments":["for"]},{"Key":"check for","Fragments":["a","non-existent","anagrams,"]},{"Key":"a returned","Fragments":["error."]},{"Key":" Hmm.","Fragments":["interesting."]},{"Key":"Hmm. interesting.","Fragments":["My"]},{"Key":"interesting. My","Fragments":["test"]},{"Key":"My test","Fragments":["suite"]},{"Key":"test suite","Fragments":["didn't","it","is"]},{"Key":"suite didn't","Fragments":["have"]},{"Key":"didn't have","Fragments":["that","to"]},{"Key":"Nice one!","Fragments":["Pretty","I","I"]},{"Key":"one! Pretty","Fragments":["clear"]},{"Key":"Pretty clear","Fragments":["and"]},{"Key":" Hint:","Fragments":["These"]},{"Key":"Hint: These","Fragments":["calculations"]},{"Key":"These calculations","Fragments":["can"]},{"Key":"calculations can","Fragments":["be"]},{"Key":"be ways","Fragments":["faster,"]},{"Key":"ways faster,","Fragments":["try"]},{"Key":"faster, try","Fragments":["to"]},{"Key":"do some","Fragments":["research.","arithmetic","deduplication."]},{"Key":"think braces","Fragments":["are"]},{"Key":"braces are","Fragments":["not"]},{"Key":"Hi, nice","Fragments":["concise"]},{"Key":"It works","Fragments":["just"]},{"Key":"works just","Fragments":["as"]},{"Key":"as well","Fragments":["without","as","fold","as","and","as","as","by","as"]},{"Key":"well without","Fragments":["the"]},{"Key":" here's","Fragments":["a"]},{"Key":"here's a","Fragments":["small"]},{"Key":"small suggestion,","Fragments":["`keys.map(|g|"]},{"Key":"suggestion, `keys.map(|g|","Fragments":["g.clone())`"]},{"Key":"`keys.map(|g| g.clone())`","Fragments":["can"]},{"Key":"g.clone())` can","Fragments":["be"]},{"Key":"That's helpful","Fragments":["advice,"]},{"Key":"helpful advice,","Fragments":["I"]},{"Key":"advice, I","Fragments":["have"]},{"Key":"have submitted","Fragments":["a"]},{"Key":"new iteration","Fragments":["using","just"]},{"Key":"iteration using","Fragments":["keys.cloned()."]},{"Key":"using keys.cloned().","Fragments":["I"]},{"Key":"keys.cloned(). I","Fragments":["had"]},{"Key":"had seen","Fragments":["the"]},{"Key":"the cloned","Fragments":["method"]},{"Key":"cloned method","Fragments":["for"]},{"Key":"method for","Fragments":["iterators","numbers"]},{"Key":"for iterators","Fragments":["but","by"]},{"Key":"iterators but","Fragments":["hadn't"]},{"Key":"but hadn't","Fragments":["really"]},{"Key":"hadn't really","Fragments":["grasped"]},{"Key":"really grasped","Fragments":["what"]},{"Key":"grasped what","Fragments":["that"]},{"Key":"what that","Fragments":["was"]},{"Key":"that was","Fragments":["useful","what","anagrams."]},{"Key":"was useful","Fragments":["for."]},{"Key":" Wow.","Fragments":["Well,"]},{"Key":"Wow. Well,","Fragments":["I"]},{"Key":"know -","Fragments":["pattern"]},{"Key":"- pattern","Fragments":["matching"]},{"Key":"is wonderful","Fragments":["think,"]},{"Key":"wonderful think,","Fragments":["but"]},{"Key":"think, but","Fragments":["for"]},{"Key":"but for","Fragments":["this"]},{"Key":"is overkill","Fragments":["I","in"]},{"Key":"overkill I","Fragments":["think..."]},{"Key":"I think...","Fragments":["Look"]},{"Key":"think... Look","Fragments":["at"]},{"Key":"Look at","Fragments":["boolean"]},{"Key":" Paranoidal","Fragments":["version:"]},{"Key":"Paranoidal version:","Fragments":["make"]},{"Key":"version: make","Fragments":["sure"]},{"Key":"sure new","Fragments":["name"]},{"Key":"new name","Fragments":["never"]},{"Key":"name never","Fragments":["equal"]},{"Key":"never equal","Fragments":["to"]},{"Key":"equal to","Fragments":["the","`Occupied`,"]},{"Key":"the old","Fragments":["name","name","value","one"]},{"Key":"old name","Fragments":["by","into"]},{"Key":"name by","Fragments":["chance."]},{"Key":" @candace","Fragments":["I"]},{"Key":"@candace I","Fragments":["wasn't"]},{"Key":"you meant","Fragments":["until"]},{"Key":"meant until","Fragments":["I"]},{"Key":"I checked","Fragments":["out"]},{"Key":"checked out","Fragments":["your"]},{"Key":"out your","Fragments":["solution."]},{"Key":"your solution.","Fragments":["Thank","I"]},{"Key":"solution. Thank","Fragments":["you"]},{"Key":"Thank you","Fragments":["for"]},{"Key":"you for","Fragments":["the"]},{"Key":"the suggestion,","Fragments":["it's"]},{"Key":"suggestion, it's","Fragments":["indeed"]},{"Key":"it's indeed","Fragments":["more"]},{"Key":"indeed more","Fragments":["elegant."]},{"Key":"more elegant.","Fragments":["As"]},{"Key":"elegant. As","Fragments":["you"]},{"Key":"As you","Fragments":["can","already","did","put","are"]},{"Key":"can see,","Fragments":["I'm"]},{"Key":"see, I'm","Fragments":["still"]},{"Key":"still getting","Fragments":["used","used"]},{"Key":"getting used","Fragments":["to","to"]},{"Key":"the functional","Fragments":["way","approach","vs","approach","way"]},{"Key":"functional way","Fragments":["of","of"]},{"Key":"doing things.","Fragments":[":)"]},{"Key":"Looks good!","Fragments":["It's","Do"]},{"Key":"good! It's","Fragments":["always"]},{"Key":"It's always","Fragments":["nice"]},{"Key":"always nice","Fragments":["to"]},{"Key":"see someone","Fragments":["use"]},{"Key":"someone use","Fragments":["`Iterator#zip()`"]},{"Key":"use `Iterator#zip()`","Fragments":["well."]},{"Key":"`Iterator#zip()` well.","Fragments":["May"]},{"Key":"well. May","Fragments":["I"]},{"Key":"May I","Fragments":["suggest"]},{"Key":"I suggest","Fragments":["getting","using","that"]},{"Key":"suggest getting","Fragments":["rid"]},{"Key":"getting rid","Fragments":["of"]},{"Key":"the mutable","Fragments":["variable"]},{"Key":"mutable variable","Fragments":["`hamming`?","that"]},{"Key":"variable `hamming`?","Fragments":["As"]},{"Key":"`hamming`? As","Fragments":["you"]},{"Key":"you already","Fragments":["have","initialized","knew"]},{"Key":"good Iterator,","Fragments":["you"]},{"Key":"Iterator, you","Fragments":["could"]},{"Key":"could achieve","Fragments":["the"]},{"Key":"achieve the","Fragments":["same"]},{"Key":"same results","Fragments":["with"]},{"Key":"results with","Fragments":["either"]},{"Key":"a `fold()`","Fragments":["or"]},{"Key":"`fold()` or","Fragments":["`filter()`"]},{"Key":"or `filter()`","Fragments":["+"]},{"Key":"`filter()` +","Fragments":["`count()`."]},{"Key":"The definition","Fragments":["of"]},{"Key":"definition of","Fragments":["an","enum"]},{"Key":"anagram is","Fragments":["a"]},{"Key":"bit vague","Fragments":["here."]},{"Key":"vague here.","Fragments":["Like,"]},{"Key":"here. Like,","Fragments":["Carthorse"]},{"Key":"Like, Carthorse","Fragments":["and"]},{"Key":"Carthorse and","Fragments":["Orchestra"]},{"Key":"and Orchestra","Fragments":["are"]},{"Key":"Orchestra are","Fragments":["anagrams,"]},{"Key":"are anagrams,","Fragments":["but"]},{"Key":"anagrams, but","Fragments":["not"]},{"Key":"not banana","Fragments":["and"]},{"Key":"banana and","Fragments":["bAnana?"]},{"Key":"have liked","Fragments":["to"]},{"Key":"liked to","Fragments":["create"]},{"Key":"a common","Fragments":["trait","concern."]},{"Key":"common trait","Fragments":["for"]},{"Key":"for `RibonucleicAcid`","Fragments":["and"]},{"Key":"`RibonucleicAcid` and","Fragments":["`DeoxyribonucleicAcid`,"]},{"Key":"and `DeoxyribonucleicAcid`,","Fragments":["but"]},{"Key":"`DeoxyribonucleicAcid`, but","Fragments":["that"]},{"Key":"that did","Fragments":["not"]},{"Key":"not work","Fragments":["without","and"]},{"Key":"without explicitly","Fragments":["`use`ing"]},{"Key":"explicitly `use`ing","Fragments":["that"]},{"Key":"`use`ing that","Fragments":["trait"]},{"Key":"that trait","Fragments":["in"]},{"Key":"trait in","Fragments":["the"]},{"Key":"test file.","Fragments":["Is"]},{"Key":"file. Is","Fragments":["there"]},{"Key":"to express","Fragments":["the","the","that","checking"]},{"Key":"express the","Fragments":["shared","concept","whole"]},{"Key":"the shared","Fragments":["parts"]},{"Key":"shared parts","Fragments":["of"]},{"Key":"parts of","Fragments":["the","Rust"]},{"Key":"the structs","Fragments":["with"]},{"Key":"structs with","Fragments":["the"]},{"Key":"tests as","Fragments":["they"]},{"Key":"as they","Fragments":["are?"]},{"Key":"at what","Fragments":["Rust"]},{"Key":"what Rust","Fragments":["can"]},{"Key":"can offer","Fragments":["you"]},{"Key":"offer you","Fragments":["with"]},{"Key":"you with","Fragments":["closures"]},{"Key":"with closures","Fragments":[":)"]},{"Key":"the tip,","Fragments":["I'm","changed","done!"]},{"Key":"tip, I'm","Fragments":["just"]},{"Key":"starting to","Fragments":["learn"]},{"Key":"learn Rust","Fragments":["and"]},{"Key":"and haven't","Fragments":["used"]},{"Key":"haven't used","Fragments":["closures"]},{"Key":"used closures","Fragments":["yet."]},{"Key":"case though,","Fragments":["I"]},{"Key":"any benefit,","Fragments":["I"]},{"Key":"benefit, I","Fragments":["find"]},{"Key":"find it","Fragments":["just","easier","in"]},{"Key":"just makes","Fragments":["it"]},{"Key":"it longer","Fragments":["to"]},{"Key":"longer to","Fragments":["read/understand"]},{"Key":"to read/understand","Fragments":["compared"]},{"Key":"read/understand compared","Fragments":["to"]},{"Key":"simple math","Fragments":["expressions."]},{"Key":"just roll","Fragments":["my"]},{"Key":"roll my","Fragments":["own"]},{"Key":"own parallel","Fragments":["solution."]},{"Key":"parallel solution.","Fragments":["It"]},{"Key":"solution. It","Fragments":["wouldn't"]},{"Key":"It wouldn't","Fragments":["have"]},{"Key":"wouldn't have","Fragments":["been","known","to","to"]},{"Key":"been all","Fragments":["that"]},{"Key":"that difficult--for","Fragments":["whatever"]},{"Key":"difficult--for whatever","Fragments":["number"]},{"Key":"whatever number","Fragments":["you"]},{"Key":"number you","Fragments":["pass"]},{"Key":"you pass","Fragments":["in,"]},{"Key":"pass in,","Fragments":["I"]},{"Key":"in, I","Fragments":["spawn"]},{"Key":"I spawn","Fragments":["that"]},{"Key":"spawn that","Fragments":["many"]},{"Key":"that many","Fragments":["threads"]},{"Key":"many threads","Fragments":["and"]},{"Key":"threads and","Fragments":["go"]},{"Key":"and go","Fragments":["to"]},{"Key":"to town,","Fragments":["right?"]},{"Key":"town, right?","Fragments":["But..."]},{"Key":"right? But...","Fragments":["C'mon."]},{"Key":"But... C'mon.","Fragments":["That"]},{"Key":"C'mon. That","Fragments":["was"]},{"Key":"That was","Fragments":["never"]},{"Key":"was never","Fragments":["gonna"]},{"Key":"never gonna","Fragments":["happen."]},{"Key":"Anyway, I","Fragments":["found"]},{"Key":"a library","Fragments":["that"]},{"Key":"library that","Fragments":["does"]},{"Key":"does some","Fragments":["of"]},{"Key":"that stuff","Fragments":["for"]},{"Key":"stuff for","Fragments":["me,"]},{"Key":"me, and","Fragments":["I"]},{"Key":"I made","Fragments":["use","up","it"]},{"Key":"made use","Fragments":["of"]},{"Key":"of it.","Fragments":["I","At"]},{"Key":"it. I","Fragments":["don't","used","will"]},{"Key":"a mutex","Fragments":["for"]},{"Key":"mutex for","Fragments":["this."]},{"Key":"for this.","Fragments":["I"]},{"Key":"this. I","Fragments":["don't"]},{"Key":"like that,","Fragments":["because"]},{"Key":"that, because","Fragments":["of"]},{"Key":"the mutex,","Fragments":["I"]},{"Key":"mutex, I","Fragments":["ended"]},{"Key":"I ended","Fragments":["up","up"]},{"Key":"up doing","Fragments":["some"]},{"Key":"doing some","Fragments":["of"]},{"Key":"this the","Fragments":["hard"]},{"Key":"the hard","Fragments":["way."]},{"Key":"hard way.","Fragments":["But"]},{"Key":"way. But","Fragments":["I"]},{"Key":"it all","Fragments":["by"]},{"Key":"all by","Fragments":["hand,"]},{"Key":"by hand,","Fragments":["at"]},{"Key":"hand, at","Fragments":["least."]},{"Key":" ...This","Fragments":["is"]},{"Key":"...This is","Fragments":["absolutely"]},{"Key":"is absolutely","Fragments":["trivial"]},{"Key":"absolutely trivial","Fragments":["in"]},{"Key":"trivial in","Fragments":["soooo"]},{"Key":"in soooo","Fragments":["many"]},{"Key":"soooo many","Fragments":["other"]},{"Key":"many other","Fragments":["languages.","languages."]},{"Key":"other languages.","Fragments":["I'm","Maybe"]},{"Key":"languages. I'm","Fragments":["sure"]},{"Key":"sure Rust","Fragments":["will"]},{"Key":"Rust will","Fragments":["get","include"]},{"Key":"get there","Fragments":["eventually."]},{"Key":" Props","Fragments":["to"]},{"Key":"Props to","Fragments":["huonw"]},{"Key":"to huonw","Fragments":["for"]},{"Key":"huonw for","Fragments":["the"]},{"Key":"the simple_parallel","Fragments":["crate."]},{"Key":" `threadpool`","Fragments":["is"]},{"Key":"`threadpool` is","Fragments":["very"]},{"Key":"very simple","Fragments":["to"]},{"Key":"to use,","Fragments":["you"]},{"Key":"use, you","Fragments":["might"]},{"Key":"might want","Fragments":["to","to"]},{"Key":"at it.","Fragments":["I"]},{"Key":"a `channel`","Fragments":["to"]},{"Key":"`channel` to","Fragments":["have"]},{"Key":"the workers","Fragments":["send"]},{"Key":"workers send","Fragments":["back"]},{"Key":"send back","Fragments":["a"]},{"Key":"back a","Fragments":["HashMap."]},{"Key":"point. thank","Fragments":["you."]},{"Key":"A small","Fragments":["nit,"]},{"Key":"are using","Fragments":["`.ok().expect()`","lazy"]},{"Key":"using `.ok().expect()`","Fragments":["on"]},{"Key":"`.ok().expect()` on","Fragments":["open,"]},{"Key":"on open,","Fragments":["you"]},{"Key":"open, you","Fragments":["could"]},{"Key":"use `expect()`","Fragments":["directly"]},{"Key":"`expect()` directly","Fragments":["on"]},{"Key":"the Result,","Fragments":["it"]},{"Key":"Result, it","Fragments":["would"]},{"Key":"would print","Fragments":["the"]},{"Key":"print the","Fragments":["reason"]},{"Key":"the reason","Fragments":["why","specified"]},{"Key":"the open","Fragments":["failed."]},{"Key":"using `match`","Fragments":["for","or"]},{"Key":"`match` for","Fragments":["this"]},{"Key":"is probably","Fragments":["overkill.","a","a"]},{"Key":"probably overkill.","Fragments":["I"]},{"Key":"overkill. I","Fragments":["suspect"]},{"Key":"I suspect","Fragments":["most","some"]},{"Key":"suspect most","Fragments":["people"]},{"Key":"most people","Fragments":["would"]},{"Key":"people would","Fragments":["be"]},{"Key":"to quickly","Fragments":["parse"]},{"Key":"quickly parse","Fragments":["this"]},{"Key":"parse this","Fragments":["problem"]},{"Key":"problem better","Fragments":["as"]},{"Key":"better as","Fragments":["an"]},{"Key":"an inline","Fragments":["boolean"]},{"Key":"inline boolean","Fragments":["statement."]},{"Key":" ok,","Fragments":["thanks!"]},{"Key":"Using `match`","Fragments":["here"]},{"Key":"`match` here","Fragments":["feels"]},{"Key":"here feels","Fragments":["like"]},{"Key":"like overkill","Fragments":["-"]},{"Key":"overkill -","Fragments":["I"]},{"Key":"suspect some","Fragments":["simple"]},{"Key":"some simple","Fragments":["boolean"]},{"Key":"boolean logic","Fragments":["would"]},{"Key":"logic would","Fragments":["have"]},{"Key":"been much","Fragments":["more"]},{"Key":" Correct","Fragments":["and"]},{"Key":"Correct and","Fragments":["clear"]},{"Key":"and clear","Fragments":["solution,"]},{"Key":"clear solution,","Fragments":["but"]},{"Key":"be simpler.","Fragments":["Rust"]},{"Key":"simpler. Rust","Fragments":["doesn't"]},{"Key":"require explicit","Fragments":["return,"]},{"Key":"explicit return,","Fragments":["so"]},{"Key":"return, so","Fragments":["you"]},{"Key":"can easily","Fragments":["omit","transform"]},{"Key":"easily omit","Fragments":["it."]},{"Key":"omit it.","Fragments":["Also,"]},{"Key":"it. Also,","Fragments":["it"]},{"Key":"Also, it","Fragments":["would"]},{"Key":"to separate","Fragments":["repeating","common","common"]},{"Key":"separate repeating","Fragments":["calculations"]},{"Key":"repeating calculations","Fragments":["into"]},{"Key":"calculations into","Fragments":["one","function/closure."]},{"Key":"into one","Fragments":["function/closure.","or"]},{"Key":"need return","Fragments":[":D"]},{"Key":"`if (condition)","Fragments":["{"]},{"Key":"(condition) {","Fragments":["true"]},{"Key":"Yup, makes","Fragments":["sense","sense"]},{"Key":"makes sense","Fragments":["to","when","to"]},{"Key":"use Eulerian","Fragments":["circuits"]},{"Key":"Eulerian circuits","Fragments":["here."]},{"Key":"circuits here.","Fragments":["Watch"]},{"Key":"here. Watch","Fragments":["out"]},{"Key":"Watch out","Fragments":["about"]},{"Key":"out about","Fragments":["`","`into_iter`."]},{"Key":"about `","Fragments":["chain(\u0026vec![(1,"]},{"Key":"` chain(\u0026vec![(1,","Fragments":["1),"]},{"Key":"chain(\u0026vec![(1, 1),","Fragments":["(2,"]},{"Key":"1), (2,","Fragments":["2)])`","4),"]},{"Key":"(2, 2)])`","Fragments":["though,"]},{"Key":"2)])` though,","Fragments":["should"]},{"Key":"though, should","Fragments":["return"]},{"Key":"return `None`,","Fragments":["but"]},{"Key":"`None`, but","Fragments":["this"]},{"Key":"code returns","Fragments":["`Some([(2,"]},{"Key":"returns `Some([(2,","Fragments":["2)])`"]},{"Key":"few things","Fragments":["that"]},{"Key":"that I'm","Fragments":["not"]},{"Key":"not quite","Fragments":["happy"]},{"Key":"quite happy","Fragments":["with"]},{"Key":"with and","Fragments":["would"]},{"Key":"and would","Fragments":["already","like"]},{"Key":"would already","Fragments":["like"]},{"Key":"already like","Fragments":["to"]},{"Key":"like to","Fragments":["refactor,","hear","keep","allocate","`return"]},{"Key":"to refactor,","Fragments":["but"]},{"Key":"refactor, but","Fragments":["I"]},{"Key":"to submit","Fragments":["this","`src/lib.rs`"]},{"Key":"submit this","Fragments":["as"]},{"Key":"this as","Fragments":["a","well."]},{"Key":"a working","Fragments":["solution."]},{"Key":" First,","Fragments":["I","I","classic"]},{"Key":"First, I","Fragments":["don't","sweep"]},{"Key":"function call","Fragments":["for"]},{"Key":"call for","Fragments":["the"]},{"Key":"first `if`","Fragments":["test"]},{"Key":"`if` test","Fragments":["case"]},{"Key":"then manually","Fragments":["returning"]},{"Key":"manually returning","Fragments":["true."]},{"Key":"returning true.","Fragments":["I"]},{"Key":"true. I","Fragments":["can't"]},{"Key":"can't help","Fragments":["but"]},{"Key":"help but","Fragments":["reduce"]},{"Key":"but reduce","Fragments":["this"]},{"Key":"reduce this","Fragments":["to"]},{"Key":"this to","Fragments":["`if","compile"]},{"Key":"to `if","Fragments":["true"]},{"Key":"`if true","Fragments":["{"]},{"Key":"true {","Fragments":["true"]},{"Key":"true }`","Fragments":["in"]},{"Key":"}` in","Fragments":["my"]},{"Key":"my mind,","Fragments":["which"]},{"Key":"mind, which","Fragments":["is"]},{"Key":" Second,","Fragments":["I"]},{"Key":"Second, I","Fragments":["don't"]},{"Key":"of `if","Fragments":["/","word"]},{"Key":"`if /","Fragments":["else`"]},{"Key":"/ else`","Fragments":["just"]},{"Key":"else` just","Fragments":["in"]},{"Key":"just in","Fragments":["general"]},{"Key":"in general","Fragments":["for"]},{"Key":"general for","Fragments":["`is_leap_year`."]},{"Key":"for `is_leap_year`.","Fragments":["It"]},{"Key":"`is_leap_year`. It","Fragments":["seems"]},{"Key":"there could","Fragments":["be"]},{"Key":"something using","Fragments":["`match`"]},{"Key":"`match` or","Fragments":["that"]},{"Key":"or that","Fragments":["is"]},{"Key":"is otherwise","Fragments":["more"]},{"Key":"otherwise more","Fragments":["sequential"]},{"Key":"more sequential","Fragments":["and"]},{"Key":"sequential and","Fragments":["exits"]},{"Key":"and exits","Fragments":["when"]},{"Key":"exits when","Fragments":["it"]},{"Key":"it happens","Fragments":["upon"]},{"Key":"happens upon","Fragments":["a"]},{"Key":"upon a","Fragments":["true"]},{"Key":"a true","Fragments":["value"]},{"Key":"true value","Fragments":["or"]},{"Key":"value or","Fragments":["returns"]},{"Key":"or returns","Fragments":["false."]},{"Key":"It feels","Fragments":["super-clunky;"]},{"Key":"feels super-clunky;","Fragments":["can"]},{"Key":"super-clunky; can","Fragments":["it"]},{"Key":"can it","Fragments":["be"]},{"Key":"done better","Fragments":["with"]},{"Key":"better with","Fragments":["`match`?","a"]},{"Key":"not particularly","Fragments":["happy"]},{"Key":"particularly happy","Fragments":["with"]},{"Key":"this code.","Fragments":["The","But"]},{"Key":"code. The","Fragments":["Rust"]},{"Key":"The Rust","Fragments":["guide"]},{"Key":"Rust guide","Fragments":["suggests"]},{"Key":"guide suggests","Fragments":["you"]},{"Key":"suggests you","Fragments":["can"]},{"Key":"can assign","Fragments":["ints","a","values"]},{"Key":"assign ints","Fragments":["to"]},{"Key":"ints to","Fragments":["enum"]},{"Key":"to enum","Fragments":["values,","elements."]},{"Key":"enum values,","Fragments":["but"]},{"Key":"values, but","Fragments":["matching"]},{"Key":"but matching","Fragments":["on"]},{"Key":"matching on","Fragments":["them"]},{"Key":"on them","Fragments":["raises"]},{"Key":"them raises","Fragments":["type"]},{"Key":"raises type","Fragments":["errors."]},{"Key":"can't figure","Fragments":["out","out"]},{"Key":"initialize a","Fragments":["struct"]},{"Key":"struct like","Fragments":["Allergies(n),"]},{"Key":"like Allergies(n),","Fragments":["and"]},{"Key":"Allergies(n), and","Fragments":["definining"]},{"Key":"and definining","Fragments":["it"]},{"Key":"definining it","Fragments":["as"]},{"Key":"function raises","Fragments":["warnings."]},{"Key":" Let's","Fragments":["try"]},{"Key":"Let's try","Fragments":["to"]},{"Key":"match in","Fragments":["`is_allergic_to()`.","area"]},{"Key":"in `is_allergic_to()`.","Fragments":["As"]},{"Key":"`is_allergic_to()`. As","Fragments":["you"]},{"Key":"you did","Fragments":["not","is","them"]},{"Key":"not specify","Fragments":["otherwise,"]},{"Key":"specify otherwise,","Fragments":["the"]},{"Key":"otherwise, the","Fragments":["`enum`"]},{"Key":"the `enum`","Fragments":["values"]},{"Key":"`enum` values","Fragments":["of"]},{"Key":"of `Allergen`","Fragments":["are"]},{"Key":"`Allergen` are","Fragments":["equivalent"]},{"Key":"to 0,","Fragments":["1,","the"]},{"Key":"0, 1,","Fragments":["...,"]},{"Key":"1, ...,","Fragments":["7."]},{"Key":"..., 7.","Fragments":["You"]},{"Key":"7. You","Fragments":["can"]},{"Key":"easily transform","Fragments":["the"]},{"Key":"transform the","Fragments":["enum"]},{"Key":"enum to","Fragments":["the","a","it's"]},{"Key":"the int","Fragments":["value,"]},{"Key":"int value,","Fragments":["e.g."]},{"Key":"value, e.g.","Fragments":["by"]},{"Key":"e.g. by","Fragments":["casting"]},{"Key":"by casting","Fragments":["it"]},{"Key":"casting it","Fragments":["via"]},{"Key":"it via","Fragments":["`(a.clone()"]},{"Key":"via `(a.clone()","Fragments":["as"]},{"Key":"`(a.clone() as","Fragments":["u8)`"]},{"Key":"u8)` (or","Fragments":["another"]},{"Key":"(or another","Fragments":["int"]},{"Key":"another int","Fragments":["type)."]},{"Key":"int type).","Fragments":["Exponentiating"]},{"Key":"type). Exponentiating","Fragments":["2"]},{"Key":"Exponentiating 2","Fragments":["with"]},{"Key":"2 with","Fragments":["that"]},{"Key":"that value","Fragments":["should"]},{"Key":"value should","Fragments":["give"]},{"Key":"should give","Fragments":["the"]},{"Key":"correct numbers","Fragments":["of"]},{"Key":"numbers of","Fragments":["1"]},{"Key":"of 1","Fragments":["(eggs),"]},{"Key":"1 (eggs),","Fragments":["2"]},{"Key":"(eggs), 2","Fragments":["(peanuts),"]},{"Key":"2 (peanuts),","Fragments":["etc."]},{"Key":"(peanuts), etc.","Fragments":["Or"]},{"Key":"etc. Or","Fragments":["if"]},{"Key":"Or if","Fragments":["you"]},{"Key":"like, you","Fragments":["could"]},{"Key":"could assign","Fragments":["them"]},{"Key":"assign them","Fragments":["the"]},{"Key":"them the","Fragments":["powers"]},{"Key":"the powers","Fragments":["of"]},{"Key":"powers of","Fragments":["2","2","two."]},{"Key":"of 2","Fragments":["directly","or"]},{"Key":"2 directly","Fragments":["in"]},{"Key":"directly in","Fragments":["the","my"]},{"Key":"While it's","Fragments":["technically"]},{"Key":"it's technically","Fragments":["possible"]},{"Key":"technically possible","Fragments":["to"]},{"Key":"have `Allergies(n)`","Fragments":["return"]},{"Key":"`Allergies(n)` return","Fragments":["a"]},{"Key":"a full-fledged","Fragments":["`struct`,"]},{"Key":"full-fledged `struct`,","Fragments":["such"]},{"Key":"`struct`, such","Fragments":["a"]},{"Key":"a constructor","Fragments":["expression"]},{"Key":"constructor expression","Fragments":["usually"]},{"Key":"expression usually","Fragments":["creates"]},{"Key":"usually creates","Fragments":["an"]},{"Key":"creates an","Fragments":["`enum`"]},{"Key":"an `enum`","Fragments":["or","and"]},{"Key":"`enum` or","Fragments":["a"]},{"Key":"or a","Fragments":["so-called","match"]},{"Key":"a so-called","Fragments":["`tuple"]},{"Key":"so-called `tuple","Fragments":["struct`."]},{"Key":"`tuple struct`.","Fragments":["In"]},{"Key":"struct`. In","Fragments":["this"]},{"Key":"latter should","Fragments":["be"]},{"Key":"more appropriate.","Fragments":["Some"]},{"Key":"appropriate. Some","Fragments":["information:"]},{"Key":"Some information:","Fragments":["https://doc.rust-lang.org/book/structs.html#tuple-structs"]},{"Key":" Incorporated","Fragments":["@carmine"]},{"Key":"Incorporated @carmine","Fragments":["'s"]},{"Key":"@carmine 's","Fragments":["feedback:"]},{"Key":"- using","Fragments":["Iterator's"]},{"Key":"using Iterator's","Fragments":["filter"]},{"Key":"Iterator's filter","Fragments":["and"]},{"Key":"and map","Fragments":["for"]},{"Key":"map for","Fragments":["transforming","this"]},{"Key":"for transforming","Fragments":["the"]},{"Key":"transforming the","Fragments":["input"]},{"Key":"- factor","Fragments":["out"]},{"Key":"factor out","Fragments":["common"]},{"Key":"out common","Fragments":["operations"]},{"Key":"common operations","Fragments":["to"]},{"Key":"operations to","Fragments":["the"]},{"Key":"words in","Fragments":["is_anagram","`Env`"]},{"Key":"in is_anagram","Fragments":["into"]},{"Key":"is_anagram into","Fragments":["sorted_chars"]},{"Key":"If someone","Fragments":["could"]},{"Key":"someone could","Fragments":["give"]},{"Key":"could give","Fragments":["me"]},{"Key":"give me","Fragments":["some"]},{"Key":"some explanation","Fragments":["about","of"]},{"Key":"explanation about","Fragments":["using"]},{"Key":"using `sum`,","Fragments":["that'd"]},{"Key":"`sum`, that'd","Fragments":["be"]},{"Key":"be great.","Fragments":["I"]},{"Key":"great. I","Fragments":["never"]},{"Key":"never succeeded","Fragments":["in"]},{"Key":"succeeded in","Fragments":["compiling"]},{"Key":"in compiling","Fragments":["it"]},{"Key":"compiling it","Fragments":["using"]},{"Key":"it using","Fragments":["`sum`"]},{"Key":"using `sum`","Fragments":["in"]},{"Key":"`sum` in","Fragments":["stead"]},{"Key":"in stead","Fragments":["of","of"]},{"Key":"stead of","Fragments":["`fold(0,","`v.clone()"]},{"Key":"of `fold(0,","Fragments":["std::ops::Add::add)`,"]},{"Key":"`fold(0, std::ops::Add::add)`,","Fragments":["and"]},{"Key":"std::ops::Add::add)`, and","Fragments":["then"]},{"Key":"found [this","Fragments":["issue](https://github.com/rust-lang/rust/issues/27739)."]},{"Key":" (1..n+1).fold(0,","Fragments":["|sum,"]},{"Key":"(1..n+1).fold(0, |sum,","Fragments":["i|"]},{"Key":"|sum, i|","Fragments":["sum"]},{"Key":"i| sum","Fragments":["+"]},{"Key":"think using","Fragments":["the","a","```filter```"]},{"Key":"the built-in","Fragments":["add"]},{"Key":"built-in add","Fragments":["operator"]},{"Key":"add operator","Fragments":["would"]},{"Key":"operator would","Fragments":["be"]},{"Key":"than using","Fragments":["an","struct","the"]},{"Key":"using an","Fragments":["anonymous","inner","external","external","array"]},{"Key":"am aware","Fragments":["the"]},{"Key":"aware the","Fragments":["current"]},{"Key":"the current","Fragments":["code","rust"]},{"Key":"current code","Fragments":["is"]},{"Key":"is horrible,","Fragments":["but"]},{"Key":"horrible, but","Fragments":["I"]},{"Key":"- Maybe","Fragments":["use"]},{"Key":"Maybe use","Fragments":["a"]},{"Key":"a bitwise","Fragments":["operator?"]},{"Key":"- Why","Fragments":["do"]},{"Key":"do you","Fragments":["need","think","put","your","have","think"]},{"Key":"new Allergies","Fragments":["in"]},{"Key":"Allergies in","Fragments":["is_allergic_to?"]},{"Key":"in is_allergic_to?","Fragments":["You"]},{"Key":"is_allergic_to? You","Fragments":["could"]},{"Key":"use self.0","Fragments":["to","to"]},{"Key":"self.0 to","Fragments":["get","refer"]},{"Key":"get to","Fragments":["the","play"]},{"Key":"first item","Fragments":["in"]},{"Key":"this struct,","Fragments":["I"]},{"Key":"struct, I","Fragments":["learned."]},{"Key":"not creating","Fragments":["an"]},{"Key":"creating an","Fragments":["new"]},{"Key":"an new","Fragments":["Allergies,"]},{"Key":"new Allergies,","Fragments":["I'm"]},{"Key":"Allergies, I'm","Fragments":["deconstructing"]},{"Key":"I'm deconstructing","Fragments":["the"]},{"Key":"deconstructing the","Fragments":["existing"]},{"Key":"the existing","Fragments":["one","array."]},{"Key":"existing one","Fragments":["using"]},{"Key":"one using","Fragments":["patterns."]},{"Key":"using patterns.","Fragments":["I"]},{"Key":"patterns. I","Fragments":["think"]},{"Key":"replace `let","Fragments":["Allergies(value)"]},{"Key":"`let Allergies(value)","Fragments":["=","="]},{"Key":"Allergies(value) =","Fragments":["*","*self`,"]},{"Key":"= *","Fragments":["(self.clone());`"]},{"Key":"* (self.clone());`","Fragments":["with"]},{"Key":"(self.clone());` with","Fragments":["`let"]},{"Key":"with `let","Fragments":["Allergies(value)"]},{"Key":"= *self`,","Fragments":["because"]},{"Key":"*self`, because","Fragments":["`value`"]},{"Key":"because `value`","Fragments":["isn't"]},{"Key":"`value` isn't","Fragments":["mutable"]},{"Key":"isn't mutable","Fragments":["anyway."]},{"Key":"mutable anyway.","Fragments":["I've"]},{"Key":"anyway. I've","Fragments":["seen"]},{"Key":"seen some","Fragments":["people"]},{"Key":"some people","Fragments":["use"]},{"Key":"people use","Fragments":["`self.0`"]},{"Key":"`self.0` as","Fragments":["in"]},{"Key":"as in","Fragments":["`self.0","most","iteration"]},{"Key":"in `self.0","Fragments":["\u0026"]},{"Key":"`self.0 \u0026","Fragments":["allergen.clone()"]},{"Key":"\u0026 allergen.clone()","Fragments":["as"]},{"Key":"allergen.clone() as","Fragments":["u8`"]},{"Key":"as u8`","Fragments":["to"]},{"Key":"u8` to","Fragments":["get"]},{"Key":"value as","Fragments":["well,","a","immutable,"]},{"Key":"as well,","Fragments":["but","but"]},{"Key":"well, but","Fragments":["I'm","that's"]},{"Key":"derive Copy","Fragments":["as"]},{"Key":"well as","Fragments":["Clone","how","`entry()`","I","making"]},{"Key":"as Clone","Fragments":["for"]},{"Key":"Clone for","Fragments":["Allergen,"]},{"Key":"for Allergen,","Fragments":["you"]},{"Key":"Allergen, you","Fragments":["can"]},{"Key":"use `*v","Fragments":["as"]},{"Key":"`*v as","Fragments":["u32`"]},{"Key":"as u32`","Fragments":["in"]},{"Key":"u32` in","Fragments":["stead"]},{"Key":"of `v.clone()","Fragments":["as"]},{"Key":"`v.clone() as","Fragments":["u32`."]},{"Key":"as u32`.","Fragments":["Though"]},{"Key":"u32`. Though","Fragments":["you"]},{"Key":"Though you","Fragments":["might"]},{"Key":"might just","Fragments":["prefer"]},{"Key":"just prefer","Fragments":["writing"]},{"Key":"prefer writing","Fragments":["it"]},{"Key":"writing it","Fragments":["explicitly."]},{"Key":"Pretty simple,","Fragments":["but"]},{"Key":"not correct","Fragments":["code."]},{"Key":"correct code.","Fragments":["What"]},{"Key":"code. What","Fragments":["if"]},{"Key":"What if","Fragments":["we"]},{"Key":"we pass","Fragments":["2400"]},{"Key":"pass 2400","Fragments":["as"]},{"Key":"2400 as","Fragments":["year?"]},{"Key":"as year?","Fragments":["Is"]},{"Key":"year? Is","Fragments":["it"]},{"Key":"Is it","Fragments":["actually","possible","necessary"]},{"Key":"it actually","Fragments":["a"]},{"Key":"a leap","Fragments":["year?","year,","year.","crate."]},{"Key":" @waldo","Fragments":["true,"]},{"Key":"@waldo true,","Fragments":["sorry,"]},{"Key":"true, sorry,","Fragments":["I"]},{"Key":"sorry, I","Fragments":["didn't"]},{"Key":"didn't read","Fragments":["the"]},{"Key":" and","Fragments":["just"]},{"Key":"just misremembered","Fragments":["the"]},{"Key":"misremembered the","Fragments":["first"]},{"Key":"first rule","Fragments":["as"]},{"Key":"rule as","Fragments":["`divides"]},{"Key":"as `divides","Fragments":["1000`"]},{"Key":"`divides 1000`","Fragments":["rather"]},{"Key":"1000` rather","Fragments":["than"]},{"Key":" surprised","Fragments":["there"]},{"Key":"surprised there","Fragments":["isn't"]},{"Key":"there isn't","Fragments":["a"]},{"Key":"isn't a","Fragments":["test"]},{"Key":"a test","Fragments":["case","for"]},{"Key":"to cover","Fragments":["this."]},{"Key":"actually added","Fragments":["[a"]},{"Key":"added [a","Fragments":["test](https://github.com/exercism/xrust/pull/55)"]},{"Key":"[a test](https://github.com/exercism/xrust/pull/55)","Fragments":["to"]},{"Key":"test](https://github.com/exercism/xrust/pull/55) to","Fragments":["xrust,"]},{"Key":"xrust, but","Fragments":["it"]},{"Key":"not arrived","Fragments":["yet."]},{"Key":" Ok,","Fragments":["I","now","I'm"]},{"Key":"Ok, I","Fragments":["guess"]},{"Key":"guess I'm","Fragments":["not"]},{"Key":"clear on","Fragments":["how"]},{"Key":"on how","Fragments":["this"]},{"Key":"is parallel.","Fragments":["It"]},{"Key":"parallel. It","Fragments":["looks"]},{"Key":"you send,","Fragments":["then"]},{"Key":"send, then","Fragments":["block"]},{"Key":"then block","Fragments":["on"]},{"Key":"block on","Fragments":["receiving,"]},{"Key":"on receiving,","Fragments":["then"]},{"Key":"receiving, then","Fragments":["merge"]},{"Key":"then merge","Fragments":["the"]},{"Key":"merge the","Fragments":["returned"]},{"Key":"returned values","Fragments":["with"]},{"Key":"your local","Fragments":["values?"]},{"Key":"local values?","Fragments":["...Like,"]},{"Key":"values? ...Like,","Fragments":["sequentially?"]},{"Key":"This does","Fragments":["not","work,"]},{"Key":"not execute","Fragments":["in"]},{"Key":"execute in","Fragments":["parallel."]},{"Key":"in parallel.","Fragments":["rx.recv"]},{"Key":"parallel. rx.recv","Fragments":["and"]},{"Key":"rx.recv and","Fragments":["merge_histograms"]},{"Key":"and merge_histograms","Fragments":["calls"]},{"Key":"merge_histograms calls","Fragments":["should"]},{"Key":"calls should","Fragments":["be"]},{"Key":"be outside","Fragments":["the"]},{"Key":"outside the","Fragments":["for","range"]},{"Key":"the for","Fragments":["loop.","loop,","loop"]},{"Key":" ahah","Fragments":["oops,"]},{"Key":"ahah oops,","Fragments":["that's"]},{"Key":"oops, that's","Fragments":["what"]},{"Key":"that's what","Fragments":["happens","everyone's"]},{"Key":"what happens","Fragments":["when","there,"]},{"Key":"happens when","Fragments":["I"]},{"Key":"I code","Fragments":["too"]},{"Key":"code too","Fragments":["late"]},{"Key":"too late","Fragments":["at"]},{"Key":"late at","Fragments":["night."]},{"Key":"at night.","Fragments":["Thanks"]},{"Key":"night. Thanks","Fragments":["for"]},{"Key":"for spotting","Fragments":["it,"]},{"Key":"spotting it,","Fragments":["it's"]},{"Key":"it, it's","Fragments":["fixed"]},{"Key":"it's fixed","Fragments":["in"]},{"Key":"fixed in","Fragments":["the"]},{"Key":"I'm pretty","Fragments":["sure"]},{"Key":"pretty sure","Fragments":["you"]},{"Key":"the absolute","Fragments":["value"]},{"Key":"absolute value","Fragments":["of"]},{"Key":"difference as","Fragments":["long"]},{"Key":"you subtract","Fragments":["the"]},{"Key":"subtract the","Fragments":["sum"]},{"Key":"squares from","Fragments":["the"]},{"Key":"the square","Fragments":["of","of","of","of"]},{"Key":"Also, see","Fragments":["if"]},{"Key":"of sum","Fragments":["down","is"]},{"Key":"sum down","Fragments":["to"]},{"Key":"to O(1)","Fragments":["from"]},{"Key":"O(1) from","Fragments":["O(n)"]},{"Key":"Not as","Fragments":["clean"]},{"Key":"as clean","Fragments":["as"]},{"Key":"clean as","Fragments":["Haskell"]},{"Key":"as Haskell","Fragments":["guards"]},{"Key":"Haskell guards","Fragments":["but"]},{"Key":"guards but","Fragments":["still"]},{"Key":"but still","Fragments":["nice.","no"]},{"Key":" Will","Fragments":["your","switch"]},{"Key":"Will your","Fragments":["solution"]},{"Key":"solution work","Fragments":["with"]},{"Key":"with non-ascii","Fragments":["inputs?"]},{"Key":" Ascii","Fragments":["is"]},{"Key":"Ascii is","Fragments":["a"]},{"Key":"a subset","Fragments":["of"]},{"Key":"subset of","Fragments":["UTF-8,"]},{"Key":"of UTF-8,","Fragments":["so"]},{"Key":"UTF-8, so","Fragments":["there's"]},{"Key":"so there's","Fragments":["compatibility","no"]},{"Key":"there's compatibility","Fragments":["within"]},{"Key":"compatibility within","Fragments":["that"]},{"Key":"within that","Fragments":["range"]},{"Key":"that range","Fragments":["for"]},{"Key":"range for","Fragments":["sure;","which","this"]},{"Key":"for sure;","Fragments":["if"]},{"Key":"sure; if","Fragments":["characters"]},{"Key":"if characters","Fragments":["outside"]},{"Key":"characters outside","Fragments":["the"]},{"Key":"the range","Fragments":["of","of","to","for"]},{"Key":"of ascii","Fragments":["are"]},{"Key":"ascii are","Fragments":["used,"]},{"Key":"are used,","Fragments":["they"]},{"Key":"used, they","Fragments":["simply"]},{"Key":"they simply","Fragments":["won't"]},{"Key":"simply won't","Fragments":["be"]},{"Key":"won't be","Fragments":["changed.","able"]},{"Key":"be changed.","Fragments":["A"]},{"Key":"changed. A","Fragments":["quote"]},{"Key":"A quote","Fragments":["from"]},{"Key":"quote from","Fragments":["the"]},{"Key":"current rust","Fragments":["docs:"]},{"Key":"\u003e fn","Fragments":["to_ascii_uppercase(\u0026self)"]},{"Key":"fn to_ascii_uppercase(\u0026self)","Fragments":["-\u003e"]},{"Key":"to_ascii_uppercase(\u0026self) -\u003e","Fragments":["Self::Owned"]},{"Key":"\u003e Makes","Fragments":["a"]},{"Key":"Makes a","Fragments":["copy"]},{"Key":"a copy","Fragments":["of","of"]},{"Key":"in ASCII","Fragments":["upper"]},{"Key":"ASCII upper","Fragments":["case."]},{"Key":"\u003e ASCII","Fragments":["letters"]},{"Key":"ASCII letters","Fragments":["'a'"]},{"Key":"letters 'a'","Fragments":["to"]},{"Key":"'a' to","Fragments":["'z'"]},{"Key":"to 'z'","Fragments":["are"]},{"Key":"'z' are","Fragments":["mapped"]},{"Key":"are mapped","Fragments":["to"]},{"Key":"mapped to","Fragments":["'A'"]},{"Key":"to 'A'","Fragments":["to"]},{"Key":"'A' to","Fragments":["'Z',"]},{"Key":"to 'Z',","Fragments":["but"]},{"Key":"'Z', but","Fragments":["non-ASCII"]},{"Key":"but non-ASCII","Fragments":["letters"]},{"Key":"non-ASCII letters","Fragments":["are"]},{"Key":"Since `[u8]`","Fragments":["and"]},{"Key":"`[u8]` and","Fragments":["`str`"]},{"Key":"and `str`","Fragments":["both"]},{"Key":"`str` both","Fragments":["implement"]},{"Key":"both implement","Fragments":["the"]},{"Key":"implement the","Fragments":["`AsciiExt`","`Copy`"]},{"Key":"the `AsciiExt`","Fragments":["trait,"]},{"Key":"`AsciiExt` trait,","Fragments":["this"]},{"Key":"trait, this","Fragments":["function"]},{"Key":"function should","Fragments":["never"]},{"Key":"should never","Fragments":["panic","hit"]},{"Key":"never panic","Fragments":["for"]},{"Key":"panic for","Fragments":["either"]},{"Key":"for either","Fragments":["of"]},{"Key":"either of","Fragments":["those"]},{"Key":"of those","Fragments":["types.","lines","formulas,","methods!"]},{"Key":"those types.","Fragments":["So"]},{"Key":"types. So","Fragments":["long"]},{"Key":"So long","Fragments":["as"]},{"Key":"as there","Fragments":["are"]},{"Key":"are no","Fragments":["applications"]},{"Key":"no applications","Fragments":["requiring"]},{"Key":"applications requiring","Fragments":["a"]},{"Key":"requiring a","Fragments":["change"]},{"Key":"a change","Fragments":["of"]},{"Key":"change of","Fragments":["case"]},{"Key":"of case","Fragments":["for"]},{"Key":"case for","Fragments":["symbols"]},{"Key":"for symbols","Fragments":["outside"]},{"Key":"symbols outside","Fragments":["of"]},{"Key":"the ascii","Fragments":["range,","function","caveats).","codes"]},{"Key":"ascii range,","Fragments":["this"]},{"Key":"range, this","Fragments":["works"]},{"Key":"this works","Fragments":["(and"]},{"Key":"works (and","Fragments":["if"]},{"Key":"(and if","Fragments":["there"]},{"Key":"there are,","Fragments":["I'm"]},{"Key":"are, I'm","Fragments":["up"]},{"Key":"I'm up","Fragments":["a"]},{"Key":"up a","Fragments":["creek)."]},{"Key":"ascii function","Fragments":["mainly"]},{"Key":"function mainly","Fragments":["because"]},{"Key":"mainly because","Fragments":["`core::char`","at"]},{"Key":"because `core::char`","Fragments":["and"]},{"Key":"`core::char` and","Fragments":["`unicode::char`"]},{"Key":"and `unicode::char`","Fragments":["are"]},{"Key":"`unicode::char` are","Fragments":["still"]},{"Key":"still experimental/unstable.","Fragments":["When"]},{"Key":"experimental/unstable. When","Fragments":["things"]},{"Key":"When things","Fragments":["get"]},{"Key":"things get","Fragments":["mostly"]},{"Key":"get mostly","Fragments":["stable"]},{"Key":"mostly stable","Fragments":["very"]},{"Key":"stable very","Fragments":["soon,"]},{"Key":"very soon,","Fragments":["I"]},{"Key":"soon, I","Fragments":["may"]},{"Key":"may refactor","Fragments":["this"]},{"Key":"refactor this","Fragments":["some."]},{"Key":"I've got","Fragments":["a"]},{"Key":"got a","Fragments":["feeling"]},{"Key":"a feeling","Fragments":["this"]},{"Key":"feeling this","Fragments":["is"]},{"Key":"is way","Fragments":["too"]},{"Key":"way too","Fragments":["complex."]},{"Key":"You walk","Fragments":["over"]},{"Key":"walk over","Fragments":["the"]},{"Key":"letters to","Fragments":["insert"]},{"Key":"to insert","Fragments":["them","an","or"]},{"Key":"insert them","Fragments":["in"]},{"Key":"you compare","Fragments":["the"]},{"Key":"compare the","Fragments":["maps."]},{"Key":"the maps.","Fragments":["I"]},{"Key":"maps. I","Fragments":["think"]},{"Key":"think sorting","Fragments":["both"]},{"Key":"sorting both","Fragments":["words"]},{"Key":"both words","Fragments":["and"]},{"Key":"words and","Fragments":["then"]},{"Key":"then do","Fragments":["a"]},{"Key":"a comparison","Fragments":["might","here"]},{"Key":"comparison might","Fragments":["be"]},{"Key":"be faster.","Fragments":["But"]},{"Key":"faster. But","Fragments":["I"]},{"Key":"not formally","Fragments":["verify"]},{"Key":"formally verify","Fragments":["that."]},{"Key":"be expressed","Fragments":["more"]},{"Key":"expressed more","Fragments":["naturally"]},{"Key":"more naturally","Fragments":["in"]},{"Key":"naturally in","Fragments":["terms"]},{"Key":"a Boolean","Fragments":["expression."]},{"Key":"Boolean expression.","Fragments":["A"]},{"Key":"expression. A","Fragments":["conditional"]},{"Key":"A conditional","Fragments":["is"]},{"Key":"conditional is","Fragments":["kind"]},{"Key":"is kind","Fragments":["of","of"]},{"Key":"this clearly","Fragments":["shows"]},{"Key":"clearly shows","Fragments":["the"]},{"Key":"but unless","Fragments":["these"]},{"Key":"unless these","Fragments":["functions"]},{"Key":"functions are","Fragments":["inlined,"]},{"Key":"are inlined,","Fragments":["this"]},{"Key":"inlined, this","Fragments":["will"]},{"Key":"have significant","Fragments":["overhead"]},{"Key":"overhead during","Fragments":["runtime"]},{"Key":"during runtime","Fragments":["to"]},{"Key":"runtime to","Fragments":["set"]},{"Key":"and break","Fragments":["down"]},{"Key":"break down","Fragments":["the"]},{"Key":"down the","Fragments":["stack."]},{"Key":"the stack.","Fragments":["I","Use"]},{"Key":"stack. I","Fragments":["am"]},{"Key":"am a","Fragments":["Rust"]},{"Key":"a Rust","Fragments":["n00b,","enum"]},{"Key":"Rust n00b,","Fragments":["so"]},{"Key":"n00b, so","Fragments":["it's"]},{"Key":"so it's","Fragments":["very","a"]},{"Key":"it's very","Fragments":["possible"]},{"Key":"very possible","Fragments":["the"]},{"Key":"possible the","Fragments":["compiler"]},{"Key":"will actually","Fragments":["inline"]},{"Key":"actually inline","Fragments":["this"]},{"Key":"inline this","Fragments":["since"]},{"Key":"this since","Fragments":["is_century"]},{"Key":"since is_century","Fragments":["and"]},{"Key":"is_century and","Fragments":["is_leap_century"]},{"Key":"and is_leap_century","Fragments":["are"]},{"Key":"is_leap_century are","Fragments":["not"]},{"Key":"not visible","Fragments":["outside"]},{"Key":"visible outside","Fragments":["this"]},{"Key":"outside this","Fragments":["file."]},{"Key":" And","Fragments":["you","the","to","`sumOfSquares`","about","negative","anyway","no,","yes,"]},{"Key":"And you","Fragments":["can"]},{"Key":"add `#inline(always)`","Fragments":["attribute"]},{"Key":"`#inline(always)` attribute","Fragments":["to"]},{"Key":"attribute to","Fragments":["`is_century`"]},{"Key":"to `is_century`","Fragments":["and"]},{"Key":"`is_century` and","Fragments":["`is_leap_century`"]},{"Key":"and `is_leap_century`","Fragments":["functions"]},{"Key":"`is_leap_century` functions","Fragments":["just"]},{"Key":"functions just","Fragments":["to"]},{"Key":"sure they","Fragments":["are","can"]},{"Key":" Try","Fragments":["using","using"]},{"Key":"Try using","Fragments":["a","closures"]},{"Key":"a helper","Fragments":["method","method.","method."]},{"Key":"helper method","Fragments":["to"]},{"Key":"the concept","Fragments":["of","itself","of"]},{"Key":"concept of","Fragments":["`_","a"]},{"Key":"of `_","Fragments":["%"]},{"Key":"`_ %","Fragments":["_","_"]},{"Key":"% _","Fragments":["==","==","=="]},{"Key":"_ ==","Fragments":["0`.","0`","0)"]},{"Key":"You mean","Fragments":["something"]},{"Key":"mean something","Fragments":["like"]},{"Key":"like `fn","Fragments":["is_divisable(n:"]},{"Key":"`fn is_divisable(n:","Fragments":["u32,"]},{"Key":"is_divisable(n: u32,","Fragments":["x"]},{"Key":"u32, x","Fragments":["u32)"]},{"Key":"x u32)","Fragments":["-\u003e"]},{"Key":"u32) -\u003e","Fragments":["bool","bool"]},{"Key":"bool {","Fragments":["n"]},{"Key":"{ n","Fragments":["%"]},{"Key":"n %","Fragments":["x"]},{"Key":"% x","Fragments":["=="]},{"Key":"x ==","Fragments":["0"]},{"Key":"0 }`","Fragments":["?"]},{"Key":"and squares,","Fragments":["will"]},{"Key":"squares, will","Fragments":["then"]},{"Key":"will then","Fragments":["run"]},{"Key":"then run","Fragments":["in"]},{"Key":"I remember","Fragments":["thinking","asking"]},{"Key":"remember thinking","Fragments":["that"]},{"Key":"that probably","Fragments":["there"]},{"Key":"probably there","Fragments":["are"]},{"Key":"are math","Fragments":["expressions"]},{"Key":"math expressions","Fragments":["to"]},{"Key":"expressions to","Fragments":["solve"]},{"Key":"solve this,","Fragments":["but"]},{"Key":"this, but","Fragments":["I","`AsRef`","I"]},{"Key":"the fast","Fragments":["way"]},{"Key":"fast way","Fragments":["to"]},{"Key":"it done.","Fragments":[":P"]},{"Key":" Math","Fragments":["expressions"]},{"Key":"Math expressions","Fragments":["would"]},{"Key":"expressions would","Fragments":["allow"]},{"Key":"would allow","Fragments":["for","you"]},{"Key":"time run,","Fragments":["but"]},{"Key":"run, but","Fragments":["some"]},{"Key":"but some","Fragments":["times"]},{"Key":"some times","Fragments":["it"]},{"Key":"times it","Fragments":["can"]},{"Key":"to follow.","Fragments":["If"]},{"Key":"follow. If","Fragments":["performance"]},{"Key":"If performance","Fragments":["benchmarks"]},{"Key":"performance benchmarks","Fragments":["show"]},{"Key":"benchmarks show","Fragments":["that"]},{"Key":"a problem","Fragments":["it","if","I","as"]},{"Key":"problem it","Fragments":["could"]},{"Key":"could then","Fragments":["be"]},{"Key":"then be","Fragments":["refactored"]},{"Key":"be refactored","Fragments":["if"]},{"Key":"refactored if","Fragments":["the"]},{"Key":"tests were","Fragments":["in"]},{"Key":"were in","Fragments":["place."]},{"Key":"I bet","Fragments":["you"]},{"Key":"bet you","Fragments":["could"]},{"Key":"some `\u0026\u0026`s","Fragments":["or"]},{"Key":"`\u0026\u0026`s or","Fragments":["`||`s"]},{"Key":"or `||`s","Fragments":["here"]},{"Key":"`||`s here","Fragments":["and"]},{"Key":"here and","Fragments":["simplify"]},{"Key":"and simplify","Fragments":["this","code"]},{"Key":"simplify this","Fragments":["a","bit"]},{"Key":"this a","Fragments":["lot!"]},{"Key":"I spend","Fragments":["some"]},{"Key":"spend some","Fragments":["time"]},{"Key":"time looking","Fragments":["for"]},{"Key":"looking for","Fragments":["something","a","the","a"]},{"Key":"that allowed","Fragments":["me"]},{"Key":"avoid listing","Fragments":["the"]},{"Key":"listing the","Fragments":["Allergen"]},{"Key":"Allergen items","Fragments":["twice:"]},{"Key":"items twice:","Fragments":["once"]},{"Key":"twice: once","Fragments":["for"]},{"Key":"enum and","Fragments":["once","Allergies"]},{"Key":"and once","Fragments":["to"]},{"Key":"once to","Fragments":["iterate"]},{"Key":"over them.","Fragments":["Apparently,"]},{"Key":"them. Apparently,","Fragments":["iteration"]},{"Key":"Apparently, iteration","Fragments":["over"]},{"Key":"iteration over","Fragments":["enum"]},{"Key":"over enum","Fragments":["values"]},{"Key":"not trivial,","Fragments":["so"]},{"Key":"trivial, so","Fragments":["I","I"]},{"Key":"used two","Fragments":["crates"]},{"Key":"two crates","Fragments":["to"]},{"Key":"crates to","Fragments":["fix"]},{"Key":"also learned","Fragments":["about"]},{"Key":"the struct","Fragments":["that","itself"]},{"Key":"struct that","Fragments":["places"]},{"Key":"that places","Fragments":["its"]},{"Key":"places its","Fragments":["values"]},{"Key":"its values","Fragments":["in","easy"]},{"Key":"in positional","Fragments":["spots"]},{"Key":"positional spots","Fragments":["reachable"]},{"Key":"spots reachable","Fragments":["from"]},{"Key":"reachable from","Fragments":["self."]},{"Key":"from self.","Fragments":["In"]},{"Key":"self. In","Fragments":["my"]},{"Key":"my former","Fragments":["solution"]},{"Key":"former solution","Fragments":["I"]},{"Key":"around that","Fragments":["by"]},{"Key":"that by","Fragments":["wrapping"]},{"Key":"by wrapping","Fragments":["a"]},{"Key":"wrapping a","Fragments":["new()"]},{"Key":"a new()","Fragments":["in"]},{"Key":"new() in","Fragments":["another"]},{"Key":"in another","Fragments":["data","submission,"]},{"Key":"another data","Fragments":["type"]},{"Key":"data type","Fragments":["and","I","for"]},{"Key":"type and","Fragments":["returning","its"]},{"Key":"and returning","Fragments":["that.","a"]},{"Key":"returning that.","Fragments":["Which"]},{"Key":"that. Which","Fragments":["is"]},{"Key":"Which is","Fragments":["less"]},{"Key":"would pull","Fragments":["the"]},{"Key":"pull the","Fragments":["`_"]},{"Key":"the `_","Fragments":["%"]},{"Key":"0` concept","Fragments":["out"]},{"Key":"concept out","Fragments":["into"]},{"Key":"the `if`","Fragments":["-","unnecessary.","completely:"]},{"Key":"`if` -","Fragments":["just"]},{"Key":"- just","Fragments":["return","being"]},{"Key":"just return","Fragments":["the","the","the","`some_boolean`","the"]},{"Key":" True.","Fragments":["I"]},{"Key":"True. I","Fragments":["will"]},{"Key":"will modify","Fragments":["it"]},{"Key":"it possible","Fragments":["to"]},{"Key":"avoid manually","Fragments":["enumerating"]},{"Key":"manually enumerating","Fragments":["all"]},{"Key":"enumerating all","Fragments":["the"]},{"Key":"Allergen types","Fragments":["on"]},{"Key":"types on","Fragments":["line"]},{"Key":"let me","Fragments":["know"]},{"Key":"know if","Fragments":["you","that","it","you"]},{"Key":"find one.","Fragments":["I'm"]},{"Key":"one. I'm","Fragments":["still"]},{"Key":" `.into_iter()`","Fragments":["or"]},{"Key":"`.into_iter()` or","Fragments":["`.clone()`"]},{"Key":"Can I","Fragments":["avoid"]},{"Key":"I avoid","Fragments":["the"]},{"Key":"the copy","Fragments":["on"]},{"Key":"copy on","Fragments":["line"]},{"Key":"line 31","Fragments":["somehow?"]},{"Key":"got stuck","Fragments":["here,"]},{"Key":"stuck here,","Fragments":["mainly"]},{"Key":"here, mainly","Fragments":["because"]},{"Key":"because at","Fragments":["one"]},{"Key":"at one","Fragments":["point"]},{"Key":"one point","Fragments":["I"]},{"Key":"point I","Fragments":["was"]},{"Key":"was lost","Fragments":["between"]},{"Key":"lost between","Fragments":["the"]},{"Key":"between the","Fragments":["`\u0026str`","expressions"]},{"Key":"the `\u0026str`","Fragments":["and"]},{"Key":"and `String`","Fragments":["type.","is"]},{"Key":"I struggled","Fragments":["with"]},{"Key":"struggled with","Fragments":["this","this"]},{"Key":"well. The","Fragments":["tests"]},{"Key":"The tests","Fragments":["seem","don't"]},{"Key":"seem to","Fragments":["be","link","be","spot","love"]},{"Key":"be set","Fragments":["up"]},{"Key":"to expect","Fragments":["`anagrams_for`"]},{"Key":"expect `anagrams_for`","Fragments":["to"]},{"Key":"`anagrams_for` to","Fragments":["take"]},{"Key":"a `\u0026str`","Fragments":["and","from"]},{"Key":"and an","Fragments":["array","different"]},{"Key":"of `\u0026str`,","Fragments":["but"]},{"Key":"`\u0026str`, but","Fragments":["then"]},{"Key":"then return","Fragments":["a"]},{"Key":"Also, not","Fragments":["sure"]},{"Key":"will help,","Fragments":["but"]},{"Key":"help, but","Fragments":["I"]},{"Key":"the approach","Fragments":["of"]},{"Key":"approach of","Fragments":["converting"]},{"Key":"converting the","Fragments":["`\u0026str`s"]},{"Key":"the `\u0026str`s","Fragments":["to"]},{"Key":"`\u0026str`s to","Fragments":["`Vec\u003cchar\u003e`s"]},{"Key":"to `Vec\u003cchar\u003e`s","Fragments":["and"]},{"Key":"`Vec\u003cchar\u003e`s and","Fragments":["sorting"]},{"Key":"sorting before","Fragments":["comparing"]},{"Key":"before comparing","Fragments":["to"]},{"Key":"comparing to","Fragments":["see"]},{"Key":"if they","Fragments":["are","can","don't","all","are","can","can","are"]},{"Key":"I quite","Fragments":["don't"]},{"Key":"quite don't","Fragments":["know"]},{"Key":"went all","Fragments":["the"]},{"Key":"a HashMap","Fragments":["and"]},{"Key":"HashMap and","Fragments":["removing"]},{"Key":"and removing","Fragments":["keys"]},{"Key":"removing keys","Fragments":["before"]},{"Key":"keys before","Fragments":["checking"]},{"Key":"before checking","Fragments":["if"]},{"Key":"checking if","Fragments":["the"]},{"Key":"the HashMap","Fragments":["is","code","in"]},{"Key":"HashMap is","Fragments":["empty"]},{"Key":"is empty","Fragments":["to"]},{"Key":"empty to","Fragments":["determine"]},{"Key":"determine whether","Fragments":["or","a"]},{"Key":"not it's","Fragments":["an"]},{"Key":"an anagram.","Fragments":["It's"]},{"Key":"anagram. It's","Fragments":["a"]},{"Key":"lot simpler","Fragments":["to"]},{"Key":"to simply","Fragments":["lower","the"]},{"Key":"simply lower","Fragments":["and"]},{"Key":"lower and","Fragments":["sort"]},{"Key":"and sort","Fragments":["everything.","the","```word```"]},{"Key":"the Nitpick","Fragments":[":)"]},{"Key":"I replaced","Fragments":["a","the"]},{"Key":"replaced a","Fragments":["for"]},{"Key":"a for","Fragments":["loop","loop,","loop"]},{"Key":"loop in","Fragments":["`grades()`","the"]},{"Key":"in `grades()`","Fragments":["to"]},{"Key":"`grades()` to","Fragments":["create"]},{"Key":"output vector","Fragments":["with"]},{"Key":"vector with","Fragments":["calls"]},{"Key":"with calls","Fragments":["to"]},{"Key":"to `cloned()`","Fragments":["and"]},{"Key":"`cloned()` and","Fragments":["`collect()`."]},{"Key":"Since you","Fragments":["already"]},{"Key":"already initialized","Fragments":["the"]},{"Key":"initialized the","Fragments":["map"]},{"Key":"map values","Fragments":["to"]},{"Key":"0, the","Fragments":["or_insert"]},{"Key":"the or_insert","Fragments":["on"]},{"Key":"or_insert on","Fragments":["line"]},{"Key":"line 18","Fragments":["is"]},{"Key":"18 is","Fragments":["redundant."]},{"Key":"is redundant.","Fragments":["Take"]},{"Key":"redundant. Take","Fragments":["a"]},{"Key":"at using","Fragments":["[get_mut](https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get_mut)"]},{"Key":"using [get_mut](https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get_mut)","Fragments":["instead."]},{"Key":"I'd replace","Fragments":["all"]},{"Key":"replace all","Fragments":["the"]},{"Key":"if statements","Fragments":["with","and"]},{"Key":"statements with","Fragments":["either"]},{"Key":"either an","Fragments":["expression","`u32`"]},{"Key":"an expression","Fragments":["or","created"]},{"Key":"expression or","Fragments":["a"]},{"Key":"your feedback!","Fragments":["I"]},{"Key":"wasn't aware","Fragments":["of"]},{"Key":"of match","Fragments":["guards."]},{"Key":"match guards.","Fragments":["I"]},{"Key":"guards. I","Fragments":["redid"]},{"Key":"I redid","Fragments":["it"]},{"Key":"redid it","Fragments":["and"]},{"Key":"it and","Fragments":["i"]},{"Key":"and i","Fragments":["think"]},{"Key":"i think","Fragments":["it"]},{"Key":"it came","Fragments":["out"]},{"Key":"came out","Fragments":["better."]},{"Key":" Square","Fragments":["of"]},{"Key":"Square of","Fragments":["sum"]},{"Key":"sum is","Fragments":["no","mutable"]},{"Key":"longer one","Fragments":["line,"]},{"Key":"one line,","Fragments":["but","but","it"]},{"Key":"line, but","Fragments":["it","I","otherwise"]},{"Key":"is O(1).","Fragments":["It"]},{"Key":"O(1). It","Fragments":["could"]},{"Key":"It could","Fragments":["probably","be"]},{"Key":"made to","Fragments":["be"]},{"Key":"be one","Fragments":["line,"]},{"Key":"less clear.","Fragments":["The"]},{"Key":"clear. The","Fragments":["round"]},{"Key":"The round","Fragments":["may"]},{"Key":"round may","Fragments":["be"]},{"Key":"be superfluous,","Fragments":["but"]},{"Key":"superfluous, but","Fragments":["it"]},{"Key":"makes me","Fragments":["feel","want","feel"]},{"Key":"me feel","Fragments":["more","as"]},{"Key":"feel more","Fragments":["comfortable"]},{"Key":"more comfortable","Fragments":["converting"]},{"Key":"comfortable converting","Fragments":["a"]},{"Key":"a float","Fragments":["back"]},{"Key":"float back","Fragments":["to"]},{"Key":"back to","Fragments":["an","a"]},{"Key":"to an","Fragments":["int.","expression"]},{"Key":"line 7.","Fragments":["There"]},{"Key":"7. There","Fragments":["should"]},{"Key":"There should","Fragments":["be"]},{"Key":"keep it","Fragments":["O(1)"]},{"Key":"it O(1)","Fragments":["and"]},{"Key":"O(1) and","Fragments":["keep"]},{"Key":"and keep","Fragments":["using"]},{"Key":"keep using","Fragments":["integers.","the"]},{"Key":"I'm accounting","Fragments":["for"]},{"Key":"accounting for","Fragments":["the"]},{"Key":"that an","Fragments":["odd"]},{"Key":"an odd","Fragments":["number"]},{"Key":"odd number","Fragments":["/2"]},{"Key":"number /2","Fragments":["will"]},{"Key":"/2 will","Fragments":["have"]},{"Key":"a half.","Fragments":["Though"]},{"Key":"half. Though","Fragments":["I'm"]},{"Key":"I'm thinking","Fragments":["I"]},{"Key":"thinking I","Fragments":["could"]},{"Key":"use integer","Fragments":["division"]},{"Key":"integer division","Fragments":["and"]},{"Key":"division and","Fragments":["then"]},{"Key":"add one","Fragments":["if"]},{"Key":"one if","Fragments":["it's","possible."]},{"Key":"it's odd.","Fragments":["I"]},{"Key":"odd. I","Fragments":["don't"]},{"Key":"if that","Fragments":["would","doesn't","makes","is","part"]},{"Key":"make things","Fragments":["more","publicly"]},{"Key":"things more","Fragments":["clear"]},{"Key":"more clear","Fragments":["or","to"]},{"Key":"clear or","Fragments":["not."]},{"Key":" Procedural,","Fragments":["with"]},{"Key":"Procedural, with","Fragments":["mutation,"]},{"Key":"with mutation,","Fragments":["explicitly"]},{"Key":"mutation, explicitly","Fragments":["inserting"]},{"Key":"explicitly inserting","Fragments":["each"]},{"Key":"inserting each","Fragments":["pair"]},{"Key":"each pair","Fragments":["into","of"]},{"Key":"pair into","Fragments":["the"]},{"Key":"Cool, seems","Fragments":["good,"]},{"Key":"seems good,","Fragments":["`filter`"]},{"Key":"good, `filter`","Fragments":["use"]},{"Key":"use is","Fragments":["great."]},{"Key":"is great.","Fragments":["`map(|s|"]},{"Key":"great. `map(|s|","Fragments":["s)`"]},{"Key":"`map(|s| s)`","Fragments":["could"]},{"Key":"s)` could","Fragments":["be"]},{"Key":" someone","Fragments":["who"]},{"Key":"someone who","Fragments":["is"]},{"Key":"who is","Fragments":["really"]},{"Key":"is really","Fragments":["concerned","simple,","a"]},{"Key":"really concerned","Fragments":["with","with"]},{"Key":"concerned with","Fragments":["performance","performance"]},{"Key":"with performance","Fragments":["would","would"]},{"Key":"performance would","Fragments":["tell","note"]},{"Key":"would tell","Fragments":["you"]},{"Key":"tell you","Fragments":["that"]},{"Key":"you that","Fragments":["you","passing"]},{"Key":"`word` repeatedly","Fragments":["but"]},{"Key":"repeatedly but","Fragments":["`sort_chars(word)`"]},{"Key":"but `sort_chars(word)`","Fragments":["always"]},{"Key":"`sort_chars(word)` always","Fragments":["gets"]},{"Key":"always gets","Fragments":["the"]},{"Key":"gets the","Fragments":["same"]},{"Key":" `tmp`","Fragments":["is"]},{"Key":"`tmp` is","Fragments":["not"]},{"Key":"best name","Fragments":["for"]},{"Key":"variable that","Fragments":["acts","is"]},{"Key":"that acts","Fragments":["as"]},{"Key":"acts as","Fragments":["an"]},{"Key":"accumulator /","Fragments":["sum."]},{"Key":"/ sum.","Fragments":["Why"]},{"Key":"sum. Why","Fragments":["not"]},{"Key":"not call","Fragments":["it"]},{"Key":"call it","Fragments":["`sum`?"]},{"Key":"While `i*i`","Fragments":["is"]},{"Key":"`i*i` is","Fragments":["mathematically"]},{"Key":"is mathematically","Fragments":["correct,"]},{"Key":"mathematically correct,","Fragments":["there"]},{"Key":"correct, there","Fragments":["is"]},{"Key":"the method","Fragments":["`pow`"]},{"Key":"method `pow`","Fragments":["which"]},{"Key":"`pow` which","Fragments":["you"]},{"Key":"the intention","Fragments":["a"]},{"Key":"intention a","Fragments":["bit"]},{"Key":" `mod_is_zero`","Fragments":["describes"]},{"Key":"`mod_is_zero` describes","Fragments":["how"]},{"Key":"describes how","Fragments":["you"]},{"Key":"how you","Fragments":["calculate","just"]},{"Key":"you calculate","Fragments":["the"]},{"Key":"the concept,","Fragments":["but"]},{"Key":"concept, but","Fragments":["I"]},{"Key":"concept itself","Fragments":["is"]},{"Key":"itself is","Fragments":["better"]},{"Key":"better described","Fragments":["as"]},{"Key":"described as","Fragments":["`is_divisible`"]},{"Key":"as `is_divisible`","Fragments":["or"]},{"Key":"`is_divisible` or","Fragments":["something"]},{"Key":"one! I","Fragments":["was","haven't"]},{"Key":"was thinking","Fragments":["about"]},{"Key":"thinking about","Fragments":["FP-style","their"]},{"Key":"about FP-style","Fragments":["solution,"]},{"Key":"FP-style solution,","Fragments":["but"]},{"Key":"just stick","Fragments":["with"]},{"Key":"with imperative","Fragments":["one."]},{"Key":" Formatting","Fragments":["is"]},{"Key":"Formatting is","Fragments":["a","a"]},{"Key":"bit off:","Fragments":["dots"]},{"Key":"off: dots","Fragments":["are"]},{"Key":"dots are","Fragments":["usually","usually"]},{"Key":"are usually","Fragments":["placed","aligned","placed","kept"]},{"Key":"usually placed","Fragments":["on","before"]},{"Key":"placed on","Fragments":["the","top"]},{"Key":"the beginning","Fragments":["of"]},{"Key":"beginning of","Fragments":["the"]},{"Key":"the line,","Fragments":["but"]},{"Key":"but otherwise","Fragments":["cool","pretty","great"]},{"Key":"otherwise cool","Fragments":["solution."]},{"Key":"The iterative","Fragments":["approach"]},{"Key":"iterative approach","Fragments":["using"]},{"Key":"approach using","Fragments":["a"]},{"Key":"a `for`","Fragments":["loop","loop"]},{"Key":"`for` loop","Fragments":["in","approach"]},{"Key":"first submission","Fragments":["has","took"]},{"Key":"submission has","Fragments":["been"]},{"Key":"been replaced","Fragments":["with"]},{"Key":"a functional","Fragments":["programming","fashion,","approach"]},{"Key":"programming approach.","Fragments":["This"]},{"Key":"approach. This","Fragments":["is"]},{"Key":"get to--and","Fragments":["gave"]},{"Key":"to--and gave","Fragments":["up"]},{"Key":"gave up","Fragments":["on--while"]},{"Key":"up on--while","Fragments":["working"]},{"Key":"on--while working","Fragments":["on"]},{"Key":"working on","Fragments":["the","this"]},{"Key":"the original","Fragments":["submission."]},{"Key":"original submission.","Fragments":["Which"]},{"Key":"submission. Which","Fragments":["version"]},{"Key":"Which version","Fragments":["is"]},{"Key":"more idiomatic","Fragments":["for","version.","approaches","to","without"]},{"Key":"idiomatic for","Fragments":["Rust?"]},{"Key":"of arriving","Fragments":["here,"]},{"Key":"arriving here,","Fragments":["I"]},{"Key":"without declaring","Fragments":["a"]},{"Key":"declaring a","Fragments":["local"]},{"Key":"a local","Fragments":["variable","loop"]},{"Key":"local variable","Fragments":["and"]},{"Key":"variable and","Fragments":["just"]},{"Key":"just wrapping","Fragments":["the"]},{"Key":"wrapping the","Fragments":["entire"]},{"Key":"entire `chars`..`collect`","Fragments":["pipeline"]},{"Key":"`chars`..`collect` pipeline","Fragments":["in"]},{"Key":"pipeline in","Fragments":["`Ok`,"]},{"Key":"in `Ok`,","Fragments":["but"]},{"Key":"`Ok`, but","Fragments":["had"]},{"Key":"but had","Fragments":["to"]},{"Key":"to break","Fragments":["it"]},{"Key":"break it","Fragments":["down"]},{"Key":"it down","Fragments":["to"]},{"Key":"solve the","Fragments":["typing"]},{"Key":"the typing","Fragments":["issues"]},{"Key":"typing issues","Fragments":["I"]},{"Key":"issues I","Fragments":["was"]},{"Key":"was having.","Fragments":["Afterward,"]},{"Key":"having. Afterward,","Fragments":["it"]},{"Key":"Afterward, it","Fragments":["seemed"]},{"Key":"it seemed","Fragments":["like","to"]},{"Key":"good idea","Fragments":["to","to","to"]},{"Key":"idea to","Fragments":["keep","omit","add"]},{"Key":"keep the","Fragments":["`let`","same","code","`open_vertices`"]},{"Key":"the `let`","Fragments":["binding"]},{"Key":"`let` binding","Fragments":["to"]},{"Key":"binding to","Fragments":["aid"]},{"Key":"to aid","Fragments":["readability."]},{"Key":"the plus","Fragments":["side,"]},{"Key":"plus side,","Fragments":["even"]},{"Key":"side, even","Fragments":["the"]},{"Key":"even the","Fragments":["first"]},{"Key":"submission took","Fragments":["a"]},{"Key":"little less","Fragments":["time"]},{"Key":"less time","Fragments":["for"]},{"Key":"time for","Fragments":["me","the"]},{"Key":"to finish","Fragments":["that"]},{"Key":"finish that","Fragments":["most"]},{"Key":"that most","Fragments":["or"]},{"Key":"most or","Fragments":["all"]},{"Key":"or all","Fragments":["of"]},{"Key":"other exercises","Fragments":["I've"]},{"Key":"exercises I've","Fragments":["done"]},{"Key":"done so","Fragments":["far."]},{"Key":"so far.","Fragments":["Refactoring","Managed","Kudos"]},{"Key":"far. Refactoring","Fragments":["to"]},{"Key":"Refactoring to","Fragments":["this"]},{"Key":"solution was","Fragments":["surprisingly"]},{"Key":"was surprisingly","Fragments":["simple"]},{"Key":"surprisingly simple","Fragments":["and"]},{"Key":"and took","Fragments":["only"]},{"Key":"took only","Fragments":["10"]},{"Key":"only 10","Fragments":["minutes"]},{"Key":"10 minutes","Fragments":["or"]},{"Key":"minutes or","Fragments":["so."]},{"Key":"or so.","Fragments":["Sleeping"]},{"Key":"so. Sleeping","Fragments":["on"]},{"Key":"Sleeping on","Fragments":["it"]},{"Key":"seemed to","Fragments":["help.","want","be"]},{"Key":"to help.","Fragments":[";-)"]},{"Key":"been complaining","Fragments":["bitterly"]},{"Key":"complaining bitterly","Fragments":["up"]},{"Key":"bitterly up","Fragments":["until"]},{"Key":"up until","Fragments":["now"]},{"Key":"until now","Fragments":["about"]},{"Key":"now about","Fragments":["the"]},{"Key":"the incomprehensibility","Fragments":["of"]},{"Key":"incomprehensibility of","Fragments":["`rustc`'s"]},{"Key":"of `rustc`'s","Fragments":["error"]},{"Key":"`rustc`'s error","Fragments":["messages"]},{"Key":"error messages","Fragments":["throughout","that","are","are"]},{"Key":"messages throughout","Fragments":["my"]},{"Key":"throughout my","Fragments":["Rust"]},{"Key":"my Rust","Fragments":["exercise"]},{"Key":"Rust exercise","Fragments":["submissions,"]},{"Key":"exercise submissions,","Fragments":["but"]},{"Key":"submissions, but","Fragments":["I"]},{"Key":"was actually","Fragments":["able"]},{"Key":"actually able","Fragments":["to"]},{"Key":"to decipher","Fragments":["them"]},{"Key":"decipher them","Fragments":["when"]},{"Key":"them when","Fragments":["working"]},{"Key":"when working","Fragments":["on"]},{"Key":"this second","Fragments":["submission."]},{"Key":"second submission.","Fragments":["I'm"]},{"Key":"submission. I'm","Fragments":["looking"]},{"Key":"I'm looking","Fragments":["forward"]},{"Key":"looking forward","Fragments":["toward"]},{"Key":"forward toward","Fragments":["becoming"]},{"Key":"toward becoming","Fragments":["more"]},{"Key":"becoming more","Fragments":["proficient"]},{"Key":"more proficient","Fragments":["in"]},{"Key":"proficient in","Fragments":["that"]},{"Key":"in that","Fragments":["regard"]},{"Key":"that regard","Fragments":["as"]},{"Key":"regard as","Fragments":["I"]},{"Key":"I work","Fragments":["these","on"]},{"Key":"work these","Fragments":["exercises."]},{"Key":"clear to","Fragments":["pull"]},{"Key":"to pull","Fragments":["out"]},{"Key":"pull out","Fragments":["the"]},{"Key":"number being","Fragments":["divisible"]},{"Key":"by something","Fragments":["into"]},{"Key":"something into","Fragments":["a"]},{"Key":"annotations, but","Fragments":["it"]},{"Key":"it Rust","Fragments":["seemed"]},{"Key":"Rust seemed","Fragments":["to"]},{"Key":"to want","Fragments":["me"]},{"Key":"want me","Fragments":["to"]},{"Key":"have most","Fragments":["of"]},{"Key":": `set_order()`","Fragments":["would"]},{"Key":"`set_order()` would","Fragments":["be"]},{"Key":"better named","Fragments":["if"]},{"Key":"named if","Fragments":["it"]},{"Key":"it said","Fragments":["what"]},{"Key":"said what","Fragments":["it"]},{"Key":"it orders,","Fragments":["eg."]},{"Key":"orders, eg.","Fragments":["`order_str()`."]},{"Key":"eg. `order_str()`.","Fragments":["The"]},{"Key":"`order_str()`. The","Fragments":["parameter"]},{"Key":"The parameter","Fragments":["`array`"]},{"Key":"parameter `array`","Fragments":["in"]},{"Key":"`array` in","Fragments":["anagrams_for"]},{"Key":"in anagrams_for","Fragments":["could"]},{"Key":"anagrams_for could","Fragments":["also"]},{"Key":"more descriptive,","Fragments":["say"]},{"Key":"descriptive, say","Fragments":["what"]},{"Key":"say what","Fragments":["it"]},{"Key":"feel the","Fragments":["following","rust-track"]},{"Key":"following code","Fragments":["is","are"]},{"Key":"bit overly","Fragments":["complicated"]},{"Key":"overly complicated","Fragments":[":"]},{"Key":" loop","Fragments":["{"]},{"Key":"match it.next()","Fragments":["{"]},{"Key":" Some(x)","Fragments":["=\u003e"]},{"Key":"Some(x) =\u003e","Fragments":["tmp.push(*x),"]},{"Key":" None","Fragments":["=\u003e"]},{"Key":"None =\u003e","Fragments":["break,"]},{"Key":"replace it","Fragments":["with","with"]},{"Key":"it with","Fragments":["a","`0`)","`-\u003e","the","a"]},{"Key":"a for-in","Fragments":["loop."]},{"Key":" Redid","Fragments":["this"]},{"Key":"Redid this","Fragments":["using"]},{"Key":"this using","Fragments":["a","uints","[take](https://doc.rust-lang.org/std/option/enum.Option.html#method.take)"]},{"Key":"tuple struct.","Fragments":["I'm"]},{"Key":"struct. I'm","Fragments":["not"]},{"Key":" Clean,","Fragments":["simple,"]},{"Key":"Clean, simple,","Fragments":["and"]},{"Key":"simple, and","Fragments":["pretty"]},{"Key":"and pretty","Fragments":["idiomatic"]},{"Key":"pretty idiomatic","Fragments":["code."]},{"Key":" Few","Fragments":["notes:","readability","minor","notes:"]},{"Key":"* you","Fragments":["can"]},{"Key":"use `fold`","Fragments":["instead","here","in","over"]},{"Key":"`fold` instead","Fragments":["of"]},{"Key":"of `map`","Fragments":["+"]},{"Key":"`map` +","Fragments":["`fold`;"]},{"Key":"* there","Fragments":["is","is"]},{"Key":"a formula","Fragments":["calculating","for"]},{"Key":"formula calculating","Fragments":["sum"]},{"Key":"of squares,","Fragments":["much","which"]},{"Key":"squares, much","Fragments":["like"]},{"Key":"the one","Fragments":["for","thing","I"]},{"Key":"one for","Fragments":["sum","the"]},{"Key":"for sum","Fragments":["of","of"]},{"Key":"of natural","Fragments":["numbers.","numbers,"]},{"Key":"numbers. You","Fragments":["can"]},{"Key":"use it","Fragments":["to","here."]},{"Key":"to achieve","Fragments":["constant","this"]},{"Key":"achieve constant","Fragments":["running"]},{"Key":"constant running","Fragments":["time"]},{"Key":"running time","Fragments":["of"]},{"Key":"time of","Fragments":["`sum_of_squares`."]},{"Key":" @belle","Fragments":["thanks"]},{"Key":"@belle thanks","Fragments":["for"]},{"Key":"the feedback","Fragments":["and"]},{"Key":"feedback and","Fragments":["the"]},{"Key":"the parentheses","Fragments":["are"]},{"Key":"parentheses are","Fragments":["an"]},{"Key":"are an","Fragments":["indication"]},{"Key":"an indication","Fragments":["that"]},{"Key":"indication that","Fragments":["(_"]},{"Key":"that (_","Fragments":["%"]},{"Key":"(_ %","Fragments":["_"]},{"Key":"== 0)","Fragments":["is","{"]},{"Key":"0) is","Fragments":["a"]},{"Key":"a concept","Fragments":["that"]},{"Key":"concept that","Fragments":["can"]},{"Key":"Thanks! I've","Fragments":["implemented"]},{"Key":"I've implemented","Fragments":["that"]},{"Key":"implemented that","Fragments":["in"]},{"Key":"that in","Fragments":["v.2.","is_anagram,","my","some","```is_allergic_to```"]},{"Key":"I honestly","Fragments":["think","think"]},{"Key":"honestly think","Fragments":["this","this"]},{"Key":"readable with","Fragments":["`open_vertex_on_path`"]},{"Key":"with `open_vertex_on_path`","Fragments":["instead"]},{"Key":"`open_vertex_on_path` instead","Fragments":["of"]},{"Key":"the crazy","Fragments":["sauce"]},{"Key":"crazy sauce","Fragments":["in"]},{"Key":"sauce in","Fragments":["iteration"]},{"Key":"in iteration","Fragments":["2.","2,","4."]},{"Key":" Ran","Fragments":["into"]},{"Key":"Ran into","Fragments":["a"]},{"Key":"fun bug","Fragments":["on"]},{"Key":"bug on","Fragments":["this"]},{"Key":"this one:","Fragments":["the"]},{"Key":"one: the","Fragments":["compiler"]},{"Key":"compiler kept","Fragments":["telling"]},{"Key":"kept telling","Fragments":["me"]},{"Key":"telling me","Fragments":["that"]},{"Key":"me that","Fragments":["`new`"]},{"Key":"that `new`","Fragments":["was"]},{"Key":"`new` was","Fragments":["private."]},{"Key":"was private.","Fragments":["It"]},{"Key":"private. It","Fragments":["wasn't."]},{"Key":"It wasn't.","Fragments":["Eventually"]},{"Key":"wasn't. Eventually","Fragments":["realized"]},{"Key":"Eventually realized","Fragments":["that"]},{"Key":"struct itself","Fragments":["needed"]},{"Key":"itself needed","Fragments":["to"]},{"Key":"needed to","Fragments":["be"]},{"Key":"be public.","Fragments":["Apparently"]},{"Key":"public. Apparently","Fragments":["the"]},{"Key":"Apparently the","Fragments":["`assert!`"]},{"Key":"the `assert!`","Fragments":["macro"]},{"Key":"`assert!` macro","Fragments":["got"]},{"Key":"macro got","Fragments":["confused?"]},{"Key":" Oh.","Fragments":["Also,"]},{"Key":"Oh. Also,","Fragments":["I"]},{"Key":"Also, I","Fragments":["implemented"]},{"Key":"I implemented","Fragments":["`as_ref`","it"]},{"Key":"implemented `as_ref`","Fragments":["via"]},{"Key":"`as_ref` via","Fragments":["the"]},{"Key":"via the","Fragments":["trait","return"]},{"Key":"trait rather","Fragments":["than"]},{"Key":"than just","Fragments":["making","a"]},{"Key":"just making","Fragments":["a"]},{"Key":"a method.","Fragments":["I"]},{"Key":"that seemed","Fragments":["rustier."]},{"Key":"seemed rustier.","Fragments":["None"]},{"Key":"rustier. None","Fragments":["of"]},{"Key":"None of","Fragments":["the"]},{"Key":"other solutions","Fragments":["I've","for","now."]},{"Key":"solutions I've","Fragments":["looked"]},{"Key":"I've looked","Fragments":["at","at."]},{"Key":"at did","Fragments":["that,"]},{"Key":"did that,","Fragments":["so"]},{"Key":"that, so","Fragments":["maybe"]},{"Key":"so maybe","Fragments":["that's","could"]},{"Key":"maybe that's","Fragments":["not"]},{"Key":"that's not","Fragments":["a","why","as"]},{"Key":" An","Fragments":["enum","alternative","unsigned"]},{"Key":"An enum","Fragments":["might"]},{"Key":"enum might","Fragments":["be"]},{"Key":"better instead","Fragments":["of"]},{"Key":"an int","Fragments":["for"]},{"Key":"int for","Fragments":["redefine_state."]},{"Key":"is duplication","Fragments":["in"]},{"Key":"duplication in","Fragments":["defining","the","`verse`."]},{"Key":"in defining","Fragments":["the"]},{"Key":"the binary","Fragments":["operators,","operators"]},{"Key":"binary operators,","Fragments":["you"]},{"Key":"operators, you","Fragments":["could"]},{"Key":"could define","Fragments":["them"]},{"Key":"define them","Fragments":["in"]},{"Key":"of closures","Fragments":["if"]},{"Key":"closures if","Fragments":["that"]},{"Key":"that doesn't","Fragments":["impact","parse","involve"]},{"Key":"doesn't impact","Fragments":["performance."]},{"Key":" redefines","Fragments":["is"]},{"Key":"redefines is","Fragments":["the"]},{"Key":"wrong name,","Fragments":["they're"]},{"Key":"name, they're","Fragments":["just"]},{"Key":"they're just","Fragments":["defines."]},{"Key":"also don't","Fragments":["really","particularly"]},{"Key":"the redefine_state.","Fragments":["Another"]},{"Key":"redefine_state. Another","Fragments":["approach"]},{"Key":"approach would","Fragments":["be"]},{"Key":"local loop","Fragments":["until"]},{"Key":"loop until","Fragments":["the"]},{"Key":"end of","Fragments":["the","those","my","the","the","our"]},{"Key":"the definition.","Fragments":["Overall"]},{"Key":"definition. Overall","Fragments":["your"]},{"Key":"Overall your","Fragments":["code"]},{"Key":"good I","Fragments":["think,"]},{"Key":"I think,","Fragments":["I"]},{"Key":"think, I","Fragments":["borrowed"]},{"Key":"I borrowed","Fragments":["your"]},{"Key":"borrowed your","Fragments":["use"]},{"Key":"your use","Fragments":["of","of","of"]},{"Key":"of if-let","Fragments":["statements"]},{"Key":"if-let statements","Fragments":["for"]},{"Key":"statements for","Fragments":["mine"]},{"Key":"for mine","Fragments":[":)"]},{"Key":"Yeah, the","Fragments":["```if"]},{"Key":"the ```if","Fragments":["let```"]},{"Key":"```if let```","Fragments":["in"]},{"Key":"let``` in","Fragments":["a"]},{"Key":"tuple is","Fragments":["quite"]},{"Key":" Simple","Fragments":["and"]},{"Key":"Simple and","Fragments":["readable"]},{"Key":"and readable","Fragments":["code.","code."]},{"Key":"readable code.","Fragments":["It"]},{"Key":"code. It","Fragments":["would"]},{"Key":"separate common","Fragments":["code","calculations"]},{"Key":"code (taking","Fragments":["modulo"]},{"Key":"(taking modulo","Fragments":["and"]},{"Key":"modulo and","Fragments":["comapring"]},{"Key":"and comapring","Fragments":["it"]},{"Key":"comapring it","Fragments":["with"]},{"Key":"with `0`)","Fragments":["into"]},{"Key":"`0`) into","Fragments":["function/closure."]},{"Key":"The is","Fragments":["`is_divisible`"]},{"Key":"is `is_divisible`","Fragments":["may"]},{"Key":"`is_divisible` may","Fragments":["be"]},{"Key":"be clearer","Fragments":["with"]},{"Key":"clearer with","Fragments":["the"]},{"Key":"the `%`","Fragments":["modulo"]},{"Key":"`%` modulo","Fragments":["operator."]},{"Key":"modulo operator.","Fragments":["Your"]},{"Key":"operator. Your","Fragments":["implementation"]},{"Key":"Your implementation","Fragments":["relays"]},{"Key":"implementation relays","Fragments":["on"]},{"Key":"relays on","Fragments":["`i32"]},{"Key":"on `i32","Fragments":["/"]},{"Key":"`i32 /","Fragments":["i32`"]},{"Key":"/ i32`","Fragments":["returning"]},{"Key":"i32` returning","Fragments":["a"]},{"Key":"returning a","Fragments":["rounded","boolean,"]},{"Key":"a rounded","Fragments":["int."]},{"Key":"rounded int.","Fragments":["Which"]},{"Key":"int. Which","Fragments":["it"]},{"Key":"Which it","Fragments":["does,"]},{"Key":"it does,","Fragments":["but"]},{"Key":"does, but","Fragments":["I"]},{"Key":"I for","Fragments":["one"]},{"Key":"for one","Fragments":["had"]},{"Key":"one had","Fragments":["to"]},{"Key":"look it","Fragments":["up."]},{"Key":" Think","Fragments":["about"]},{"Key":"Think about","Fragments":["using"]},{"Key":"using closures","Fragments":[";)",":)"]},{"Key":"an else","Fragments":["block"]},{"Key":"else block","Fragments":["you"]},{"Key":"block you","Fragments":["can"]},{"Key":"can omitt","Fragments":["the","the"]},{"Key":"omitt the","Fragments":["`return`s","return"]},{"Key":"`return`s and","Fragments":["the"]},{"Key":"I confess","Fragments":["that."]},{"Key":"confess that.","Fragments":["coming"]},{"Key":"that. coming","Fragments":["from"]},{"Key":"coming from","Fragments":["languages","a"]},{"Key":"from languages","Fragments":["that"]},{"Key":"languages that","Fragments":["don't"]},{"Key":"that don't","Fragments":["omit"]},{"Key":"don't omit","Fragments":["the"]},{"Key":"omit the","Fragments":["`return`","return","return","`if`","```+=```"]},{"Key":"the `return`","Fragments":["keyword,","on","is"]},{"Key":"`return` keyword,","Fragments":["I'm"]},{"Key":"keyword, I'm","Fragments":["still"]},{"Key":"still quite","Fragments":["in"]},{"Key":"quite in","Fragments":["love"]},{"Key":"in love","Fragments":["with"]},{"Key":"love with","Fragments":["it."]},{"Key":"with it.","Fragments":["I'm","The",":)"]},{"Key":"it. I'm","Fragments":["still","not"]},{"Key":"still new","Fragments":["to"]},{"Key":"to rust,","Fragments":["so"]},{"Key":"I'm trying","Fragments":["to"]},{"Key":"out where","Fragments":["it"]},{"Key":"where it","Fragments":["is"]},{"Key":"to omit","Fragments":["the"]},{"Key":"return keyword,","Fragments":["but"]},{"Key":"keyword, but","Fragments":["so"]},{"Key":"far I","Fragments":["feel"]},{"Key":"it only","Fragments":["makes"]},{"Key":"only makes","Fragments":["sense"]},{"Key":"sense when","Fragments":["the"]},{"Key":"when the","Fragments":["function"]},{"Key":"is trivially","Fragments":["short"]},{"Key":"trivially short","Fragments":["(like"]},{"Key":"short (like","Fragments":["1"]},{"Key":"(like 1","Fragments":["statement)."]},{"Key":"1 statement).","Fragments":["What"]},{"Key":"statement). What","Fragments":["are"]},{"Key":"are your","Fragments":["criteria"]},{"Key":"your criteria","Fragments":["for"]},{"Key":"criteria for","Fragments":["omitting"]},{"Key":"for omitting","Fragments":["the"]},{"Key":"omitting the","Fragments":["keyword?"]},{"Key":" Usually","Fragments":["I"]},{"Key":"Usually I","Fragments":["omit"]},{"Key":"I omit","Fragments":["it,"]},{"Key":"omit it,","Fragments":["when"]},{"Key":"it, when","Fragments":["there"]},{"Key":"when there","Fragments":["are","are"]},{"Key":"a maximum","Fragments":["of"]},{"Key":"maximum of","Fragments":["2","i64"]},{"Key":"2 or","Fragments":["3","3"]},{"Key":"or 3","Fragments":["return","divisibility"]},{"Key":"3 return","Fragments":["pathes."]},{"Key":"As soon","Fragments":["as"]},{"Key":"soon as","Fragments":["I","I"]},{"Key":"have more","Fragments":["than"]},{"Key":"than 3","Fragments":["pathes"]},{"Key":"3 pathes","Fragments":["I"]},{"Key":"pathes I","Fragments":["use"]},{"Key":"a return","Fragments":["variable."]},{"Key":"So you","Fragments":["can","save"]},{"Key":"read this","Fragments":["as,"]},{"Key":"this as,","Fragments":["I"]},{"Key":"as, I","Fragments":["don't"]},{"Key":"don't use","Fragments":["return"]},{"Key":"use return","Fragments":[";)"]},{"Key":"But there","Fragments":["are","are"]},{"Key":"are some","Fragments":["precondition"]},{"Key":"some precondition","Fragments":["checks"]},{"Key":"precondition checks","Fragments":["that"]},{"Key":"checks that","Fragments":["also"]},{"Key":"that also","Fragments":["make"]},{"Key":"make me","Fragments":["use"]},{"Key":"me use","Fragments":["return:"]},{"Key":"fn foo(bar:","Fragments":["i32)"]},{"Key":"foo(bar: i32)","Fragments":["-\u003e"]},{"Key":"i32) -\u003e","Fragments":["Option\u003ci32\u003e"]},{"Key":"-\u003e Option\u003ci32\u003e","Fragments":["{"]},{"Key":"if bar","Fragments":["\u003c"]},{"Key":"bar \u003c","Fragments":["0"]},{"Key":"\u003c 0","Fragments":["{"]},{"Key":"return None;","Fragments":["}"]},{"Key":"// Many","Fragments":["many"]},{"Key":"Many many","Fragments":["stuff"]},{"Key":"Also since","Fragments":["I"]},{"Key":"had my","Fragments":["Haskell"]},{"Key":"my Haskell","Fragments":["lectures,"]},{"Key":"Haskell lectures,","Fragments":["my"]},{"Key":"lectures, my","Fragments":["mind"]},{"Key":"my mind","Fragments":["switches","changes"]},{"Key":"mind switches","Fragments":["into"]},{"Key":"switches into","Fragments":["haskell-monad-mode"]},{"Key":"into haskell-monad-mode","Fragments":["as"]},{"Key":"haskell-monad-mode as","Fragments":["soon"]},{"Key":"as soon","Fragments":["as"]},{"Key":"a `return`","Fragments":[";)","at"]},{"Key":"But if","Fragments":["you"]},{"Key":"are used","Fragments":["to"]},{"Key":"to languages","Fragments":["which"]},{"Key":"languages which","Fragments":["needs"]},{"Key":"needs the","Fragments":["return,","type","content"]},{"Key":"the return,","Fragments":["it"]},{"Key":"return, it","Fragments":["is"]},{"Key":"not easy","Fragments":["to"]},{"Key":"easy to","Fragments":["drop","find","understand","guess,","look","achieve."]},{"Key":"to drop","Fragments":["it,"]},{"Key":"drop it,","Fragments":["I"]},{"Key":"it, I","Fragments":["know,"]},{"Key":"I know,","Fragments":["there","I"]},{"Key":"know, there","Fragments":["was"]},{"Key":"a time","Fragments":["when","bomb"]},{"Key":"I switched","Fragments":["from"]},{"Key":"switched from","Fragments":["Java"]},{"Key":"from Java","Fragments":["to"]},{"Key":"Java to","Fragments":["Ruby"]},{"Key":"to Ruby","Fragments":[";)"]},{"Key":"This iteration","Fragments":["handle"]},{"Key":"iteration handle","Fragments":["the"]},{"Key":"handle the","Fragments":["error","error"]},{"Key":"the error","Fragments":["case","case"]},{"Key":"error case","Fragments":["when","(https://github.com/exercism/xrust/pull/46),"]},{"Key":"case when","Fragments":["strings"]},{"Key":"when strings","Fragments":["of"]},{"Key":"strings of","Fragments":["different"]},{"Key":"of different","Fragments":["lengths"]},{"Key":"different lengths","Fragments":["are"]},{"Key":"lengths are","Fragments":["passed."]},{"Key":"are passed.","Fragments":["It"]},{"Key":"passed. It","Fragments":["also"]},{"Key":"also uses","Fragments":["`zip`"]},{"Key":"uses `zip`","Fragments":["to"]},{"Key":"`zip` to","Fragments":["iterator"]},{"Key":"to iterator","Fragments":["over"]},{"Key":"iterator over","Fragments":["the"]},{"Key":" Preferably,","Fragments":["you"]},{"Key":"Preferably, you","Fragments":["could"]},{"Key":"could reduce","Fragments":["the"]},{"Key":"reduce the","Fragments":["long","number"]},{"Key":"the long","Fragments":["line"]},{"Key":"long line","Fragments":["and","after"]},{"Key":"line and","Fragments":["list","it","making"]},{"Key":"and list","Fragments":["the"]},{"Key":"list the","Fragments":["functions","enum"]},{"Key":"the functions","Fragments":["(aligned","together.","need"]},{"Key":"functions (aligned","Fragments":["on"]},{"Key":"(aligned on","Fragments":["the"]},{"Key":"the dot)","Fragments":["underneath"]},{"Key":"dot) underneath","Fragments":["each"]},{"Key":"underneath each","Fragments":["other?"]},{"Key":"Just three","Fragments":["functions"]},{"Key":"three functions","Fragments":["in"]},{"Key":"a row,","Fragments":["not"]},{"Key":"row, not","Fragments":["such"]},{"Key":"not such","Fragments":["long","value"]},{"Key":"such long","Fragments":["line"]},{"Key":"line after","Fragments":["all."]},{"Key":"after all.","Fragments":["I"]},{"Key":"all. I","Fragments":["won't","don't"]},{"Key":"submit new","Fragments":["iteration"]},{"Key":"the sake","Fragments":["of"]},{"Key":"sake of","Fragments":["so"]},{"Key":"of so","Fragments":["minor"]},{"Key":"so minor","Fragments":["change."]},{"Key":" Forgot","Fragments":["about"]},{"Key":"Forgot about","Fragments":["`char::is_alphanumeric()`."]},{"Key":"about `char::is_alphanumeric()`.","Fragments":["Shame"]},{"Key":"`char::is_alphanumeric()`. Shame","Fragments":["on"]},{"Key":"Shame on","Fragments":["me."]},{"Key":"I'm checking","Fragments":["out"]},{"Key":"checking out","Fragments":["http://doc.rust-lang.org/regex/regex/index.html"]},{"Key":"out http://doc.rust-lang.org/regex/regex/index.html","Fragments":["to"]},{"Key":"http://doc.rust-lang.org/regex/regex/index.html to","Fragments":["improve"]},{"Key":"the char::is_alphanumeric()","Fragments":["function"]},{"Key":"char::is_alphanumeric() function","Fragments":["instead"]},{"Key":"of split_char.","Fragments":["And"]},{"Key":"split_char. And","Fragments":["maybe"]},{"Key":"And maybe","Fragments":["filter"]},{"Key":"maybe filter","Fragments":["on"]},{"Key":"filter on","Fragments":["not","line"]},{"Key":"on not","Fragments":["str::is_empty()"]},{"Key":"for using","Fragments":["hashmap","a"]},{"Key":"using hashmap","Fragments":["as"]},{"Key":"hashmap as","Fragments":["an"]},{"Key":"accumulator in","Fragments":["`fold`,"]},{"Key":"in `fold`,","Fragments":["I"]},{"Key":"`fold`, I","Fragments":["usually"]},{"Key":"usually try","Fragments":["to","to"]},{"Key":"to shy","Fragments":["away"]},{"Key":"shy away","Fragments":["from"]},{"Key":"from this","Fragments":["practice,"]},{"Key":"this practice,","Fragments":["as"]},{"Key":"practice, as","Fragments":["it"]},{"Key":"just constantly","Fragments":["pass"]},{"Key":"constantly pass","Fragments":["(read"]},{"Key":"pass (read","Fragments":["\"copy\")"]},{"Key":"(read \"copy\")","Fragments":["hashmap"]},{"Key":"\"copy\") hashmap","Fragments":["to/from"]},{"Key":"hashmap to/from","Fragments":["closure"]},{"Key":"to/from closure","Fragments":["call"]},{"Key":"closure call","Fragments":["stack"]},{"Key":"call stack","Fragments":["during"]},{"Key":"stack during","Fragments":["iteration"]},{"Key":"during iteration","Fragments":["with"]},{"Key":"iteration with","Fragments":["fold."]},{"Key":"with fold.","Fragments":["And"]},{"Key":"fold. And","Fragments":["as"]},{"Key":"And as","Fragments":["hashmap"]},{"Key":"as hashmap","Fragments":["is"]},{"Key":"hashmap is","Fragments":["a"]},{"Key":"a relatively","Fragments":["large"]},{"Key":"relatively large","Fragments":["struct,"]},{"Key":"large struct,","Fragments":["it's"]},{"Key":"struct, it's","Fragments":["not"]},{"Key":"not so","Fragments":["good","good,"]},{"Key":"so good","Fragments":["for"]},{"Key":"good for","Fragments":["performance."]},{"Key":"for performance.","Fragments":["Maybe"]},{"Key":"performance. Maybe","Fragments":["compiler"]},{"Key":"Maybe compiler","Fragments":["can"]},{"Key":"can optimize","Fragments":["all"]},{"Key":"optimize all","Fragments":["this"]},{"Key":"all this","Fragments":["moving,"]},{"Key":"this moving,","Fragments":["but"]},{"Key":"moving, but","Fragments":["maybe"]},{"Key":"but maybe","Fragments":["not,"]},{"Key":"maybe not,","Fragments":["I"]},{"Key":"not, I","Fragments":["don't","had"]},{"Key":"like taking","Fragments":["chances."]},{"Key":"the explanation.","Fragments":["I"]},{"Key":"explanation. I","Fragments":["would"]},{"Key":"would expect","Fragments":["LLVM"]},{"Key":"expect LLVM","Fragments":["to"]},{"Key":"LLVM to","Fragments":["be"]},{"Key":"to optimise","Fragments":["the"]},{"Key":"optimise the","Fragments":["HashMap"]},{"Key":"HashMap code","Fragments":["quite"]},{"Key":"code quite","Fragments":["a"]},{"Key":"a lot.","Fragments":["But"]},{"Key":"lot. But","Fragments":["I"]},{"Key":"should probably","Fragments":["take","made"]},{"Key":"probably take","Fragments":["a"]},{"Key":"a dive","Fragments":["into"]},{"Key":"dive into","Fragments":["the"]},{"Key":"the IR","Fragments":["and"]},{"Key":"IR and","Fragments":["ASM"]},{"Key":"and ASM","Fragments":["code"]},{"Key":"ASM code","Fragments":["to"]},{"Key":"more confident","Fragments":["about"]},{"Key":"confident about","Fragments":["this"]},{"Key":"about this","Fragments":["claim.","code."]},{"Key":"you put","Fragments":["a","that"]},{"Key":"put a","Fragments":["comment"]},{"Key":"comment in","Fragments":["your"]},{"Key":"code about","Fragments":["your"]},{"Key":"about your","Fragments":["confusion,"]},{"Key":"your confusion,","Fragments":["I'll"]},{"Key":"confusion, I'll","Fragments":["explain"]},{"Key":"I'll explain","Fragments":["what"]},{"Key":"happens there,","Fragments":["so"]},{"Key":"there, so","Fragments":["everybody"]},{"Key":"so everybody","Fragments":["can"]},{"Key":"everybody can","Fragments":["benefit"]},{"Key":"can benefit","Fragments":["from"]},{"Key":"benefit from","Fragments":["it."]},{"Key":" Line","Fragments":["11"]},{"Key":"Line 11","Fragments":["demonstrates"]},{"Key":"11 demonstrates","Fragments":["one"]},{"Key":"demonstrates one","Fragments":["of"]},{"Key":"most ergonomic","Fragments":["Rust"]},{"Key":"ergonomic Rust","Fragments":["APIs:"]},{"Key":"Rust APIs:","Fragments":["an"]},{"Key":"APIs: an","Fragments":["entry"]},{"Key":"an entry","Fragments":["API."]},{"Key":"The `HashMap::entry()`","Fragments":["method"]},{"Key":"`HashMap::entry()` method","Fragments":["returns"]},{"Key":"method returns","Fragments":["an"]},{"Key":"returns an","Fragments":["`Entry`","iterator","option"]},{"Key":"an `Entry`","Fragments":["type"]},{"Key":"`Entry` type","Fragments":["value,","has"]},{"Key":"type value,","Fragments":["which"]},{"Key":"value, which","Fragments":["can"]},{"Key":"be either","Fragments":["`Vacant`","an"]},{"Key":"either `Vacant`","Fragments":["or"]},{"Key":"`Vacant` or","Fragments":["`Occupied`"]},{"Key":"or `Occupied`","Fragments":["(an"]},{"Key":"`Occupied` (an","Fragments":["enum"]},{"Key":"(an enum","Fragments":["type)."]},{"Key":"enum type).","Fragments":["If"]},{"Key":"type). If","Fragments":["map"]},{"Key":"If map","Fragments":["contains"]},{"Key":"map contains","Fragments":["value"]},{"Key":"contains value","Fragments":["for"]},{"Key":"the key,","Fragments":["it's"]},{"Key":"key, it's","Fragments":["equal"]},{"Key":"it's equal","Fragments":["to"]},{"Key":"to `Occupied`,","Fragments":["and"]},{"Key":"`Occupied`, and","Fragments":["it's"]},{"Key":"and it's","Fragments":["`Vacant`"]},{"Key":"it's `Vacant`","Fragments":["if"]},{"Key":"`Vacant` if","Fragments":["not"]},{"Key":"if not","Fragments":["such"]},{"Key":"such value","Fragments":["found."]},{"Key":"The `Entry`","Fragments":["type"]},{"Key":"type has","Fragments":["many"]},{"Key":"many convenient","Fragments":["methods,"]},{"Key":"convenient methods,","Fragments":["and"]},{"Key":"methods, and","Fragments":["`or_insert()`","let"]},{"Key":"and `or_insert()`","Fragments":["is","to"]},{"Key":"`or_insert()` is","Fragments":["one"]},{"Key":"is one","Fragments":["of"]},{"Key":"of them,","Fragments":["which"]},{"Key":"them, which","Fragments":["stand"]},{"Key":"which stand","Fragments":["for"]},{"Key":"stand for","Fragments":["something"]},{"Key":"this (not","Fragments":["an"]},{"Key":"(not an","Fragments":["actual"]},{"Key":"an actual","Fragments":["working"]},{"Key":"actual working","Fragments":["code!):"]},{"Key":"match map.entry(key)","Fragments":["{"]},{"Key":" Vacant(placeholder)","Fragments":["=\u003e"]},{"Key":"Vacant(placeholder) =\u003e","Fragments":["{"]},{"Key":"=\u003e {","Fragments":["*placeholder","\u0026mut"]},{"Key":"{ *placeholder","Fragments":["="]},{"Key":"*placeholder =","Fragments":["value;"]},{"Key":"= value;","Fragments":["\u0026mut"]},{"Key":"value; \u0026mut","Fragments":["placeholder"]},{"Key":"\u0026mut placeholder","Fragments":["},"]},{"Key":" Occupied(value)","Fragments":["=\u003e"]},{"Key":"Occupied(value) =\u003e","Fragments":["{"]},{"Key":"{ \u0026mut","Fragments":["value"]},{"Key":"\u0026mut value","Fragments":["}"]},{"Key":"So it","Fragments":["inserts","should","turns"]},{"Key":"it inserts","Fragments":["a"]},{"Key":"inserts a","Fragments":["given"]},{"Key":"a given","Fragments":["value","bit","length"]},{"Key":"given value","Fragments":["for"]},{"Key":"the key","Fragments":["if"]},{"Key":"key if","Fragments":["it"]},{"Key":"it wasn't","Fragments":["in"]},{"Key":"wasn't in","Fragments":["the"]},{"Key":"map yet,","Fragments":["and"]},{"Key":"yet, and","Fragments":["then"]},{"Key":"then returns","Fragments":["mutable"]},{"Key":"returns mutable","Fragments":["reference"]},{"Key":"mutable reference","Fragments":["to"]},{"Key":"value in","Fragments":["the","case","`HashMap`."]},{"Key":"the map.","Fragments":["Then","So"]},{"Key":"map. Then","Fragments":["this"]},{"Key":"Then this","Fragments":["reference"]},{"Key":"this reference","Fragments":["is"]},{"Key":"reference is","Fragments":["dereferenced"]},{"Key":"is dereferenced","Fragments":["with"]},{"Key":"dereferenced with","Fragments":["`*`"]},{"Key":"with `*`","Fragments":["operator"]},{"Key":"`*` operator","Fragments":["and"]},{"Key":"operator and","Fragments":["a"]},{"Key":"new value","Fragments":["is"]},{"Key":"value is","Fragments":["assigned","set.","not"]},{"Key":"is assigned","Fragments":["directly"]},{"Key":"assigned directly","Fragments":["to"]},{"Key":"directly to","Fragments":["the"]},{"Key":"the place","Fragments":["in"]},{"Key":"place in","Fragments":["memory,"]},{"Key":"in memory,","Fragments":["occupied"]},{"Key":"memory, occupied","Fragments":["by"]},{"Key":"occupied by","Fragments":["map's"]},{"Key":"by map's","Fragments":["value"]},{"Key":"map's value","Fragments":["for"]},{"Key":" Saw","Fragments":["the"]},{"Key":"Saw the","Fragments":["use"]},{"Key":"of ```threadpool```","Fragments":["in"]},{"Key":"```threadpool``` in","Fragments":["@jackeline"]},{"Key":"in @jackeline","Fragments":["'s"]},{"Key":"@jackeline 's","Fragments":["implementation,"]},{"Key":"'s implementation,","Fragments":["this"]},{"Key":"implementation, this","Fragments":["is"]},{"Key":"simpler than","Fragments":["the"]},{"Key":"previous vanilla","Fragments":["version."]},{"Key":"Maybe more","Fragments":["readable"]},{"Key":"readable will","Fragments":["be"]},{"Key":"be `div_by`","Fragments":["instead"]},{"Key":"`div_by` instead","Fragments":["`f`"]},{"Key":" .map(|c|","Fragments":["c.to_lowercase())","c.to_lowercase().next().unwrap())"]},{"Key":" part","Fragments":["doesn't"]},{"Key":"part doesn't","Fragments":["compile,"]},{"Key":"doesn't compile,","Fragments":["but"]},{"Key":"compile, but","Fragments":["I"]},{"Key":"think I'll","Fragments":["learn","use"]},{"Key":"I'll learn","Fragments":["more"]},{"Key":"learn more","Fragments":["effectively"]},{"Key":"more effectively","Fragments":["by"]},{"Key":"effectively by","Fragments":["just"]},{"Key":"by just","Fragments":["looking","looping"]},{"Key":"just looking","Fragments":["at"]},{"Key":"at other","Fragments":["peoples'"]},{"Key":"other peoples'","Fragments":["solutions."]},{"Key":"I originally","Fragments":["planned"]},{"Key":"originally planned","Fragments":["to"]},{"Key":"planned to","Fragments":["write"]},{"Key":"if word","Fragments":["=="]},{"Key":"word ==","Fragments":["e.chars().collect::Vec\u003cchar\u003e().sort()","input"]},{"Key":"== e.chars().collect::Vec\u003cchar\u003e().sort()","Fragments":["{e}).collect::Vec\u003c\u0026'a"]},{"Key":"e.chars().collect::Vec\u003cchar\u003e().sort() {e}).collect::Vec\u003c\u0026'a","Fragments":["\u0026'a"]},{"Key":"{e}).collect::Vec\u003c\u0026'a \u0026'a","Fragments":["str\u003e()"]},{"Key":"didn't understand","Fragments":["what"]},{"Key":"complained about","Fragments":["there."]},{"Key":"over ```year```","Fragments":["to"]},{"Key":"```year``` to","Fragments":["save"]},{"Key":"to save","Fragments":["passing"]},{"Key":"save passing","Fragments":["it"]},{"Key":"passing it","Fragments":["around"]},{"Key":"it around","Fragments":["3","between"]},{"Key":"around 3","Fragments":["times."]},{"Key":" why","Fragments":["not","did","the"]},{"Key":"the inverse","Fragments":["of"]},{"Key":"inverse of","Fragments":["the"]},{"Key":"the boolean?","Fragments":["Or,"]},{"Key":"boolean? Or,","Fragments":["a"]},{"Key":"Or, a","Fragments":["different"]},{"Key":"different boolean","Fragments":["expression."]},{"Key":"Also, from","Fragments":["an"]},{"Key":"an efficiency","Fragments":["standpoint,"]},{"Key":"efficiency standpoint,","Fragments":["this"]},{"Key":"standpoint, this","Fragments":["evaluates"]},{"Key":"this evaluates","Fragments":["`year"]},{"Key":"evaluates `year","Fragments":["%"]},{"Key":"% 4","Fragments":["!=","==","==","==","==","=="]},{"Key":"4 !=","Fragments":["0`"]},{"Key":"!= 0`","Fragments":["and"]},{"Key":"0` and","Fragments":["`year"]},{"Key":"% 100","Fragments":["==","!=","==","!="]},{"Key":"100 ==","Fragments":["0`","0)"]},{"Key":"0` for","Fragments":["all"]},{"Key":"all years.","Fragments":["As"]},{"Key":"years. As","Fragments":["you"]},{"Key":"using lazy","Fragments":["operators,"]},{"Key":"lazy operators,","Fragments":["is"]},{"Key":"operators, is","Fragments":["there"]},{"Key":"a (slightly)","Fragments":["more"]},{"Key":"(slightly) more","Fragments":["efficient"]},{"Key":"efficient way","Fragments":["of","than```or_insert(0)```,","to"]},{"Key":"Might as","Fragments":["well"]},{"Key":"well fold","Fragments":["it"]},{"Key":"fold it","Fragments":["if"]},{"Key":"it if","Fragments":["the","it"]},{"Key":"the body","Fragments":["is"]},{"Key":"body is","Fragments":["this"]},{"Key":"is this","Fragments":["small...","idiomatic"]},{"Key":" ```gen_range```","Fragments":["can"]},{"Key":"```gen_range``` can","Fragments":["also"]},{"Key":"to generate","Fragments":["the"]},{"Key":"also move","Fragments":["the"]},{"Key":"digit generation","Fragments":["to"]},{"Key":"generation to","Fragments":["its"]},{"Key":"to its","Fragments":["own"]},{"Key":"function as","Fragments":["the","some","this","sorted"]},{"Key":"is repeated","Fragments":["twice."]},{"Key":"you swap","Fragments":["the"]},{"Key":"swap the","Fragments":["order"]},{"Key":"```||``` then","Fragments":["the"]},{"Key":"more frequent","Fragments":["case"]},{"Key":"frequent case","Fragments":["will"]},{"Key":"case will","Fragments":["be"]},{"Key":"be checked","Fragments":["first."]},{"Key":"checked first.","Fragments":["(well,"]},{"Key":"first. (well,","Fragments":["it"]},{"Key":"(well, it","Fragments":["does"]},{"Key":" :)","Fragments":["You"]},{"Key":":) You","Fragments":["are"]},{"Key":"guess `u32`","Fragments":["is"]},{"Key":"`u32` is","Fragments":["the"]},{"Key":"the smallest","Fragments":["data"]},{"Key":"smallest data","Fragments":["type"]},{"Key":"type I","Fragments":["could"]},{"Key":"this problem.","Fragments":["Pretty","It"]},{"Key":"problem. Pretty","Fragments":["simple"]},{"Key":"simple otherwise...","Fragments":["this"]},{"Key":"otherwise... this","Fragments":["idiomatic?"]},{"Key":"of square","Fragments":["and","and"]},{"Key":"square and","Fragments":["square","sums"]},{"Key":"and square","Fragments":["of","of"]},{"Key":"of sums","Fragments":["which"]},{"Key":"sums which","Fragments":["would"]},{"Key":"tuple instead","Fragments":["of"]},{"Key":"of x","Fragments":["would"]},{"Key":"x would","Fragments":["make"]},{"Key":"it even","Fragments":["a"]},{"Key":" @willa","Fragments":["yeah,"]},{"Key":"@willa yeah,","Fragments":["I"]},{"Key":"yeah, I","Fragments":["think","totally"]},{"Key":"are right.","Fragments":["I","The"]},{"Key":"right. I","Fragments":["will","still"]},{"Key":"will made","Fragments":["a"]},{"Key":"made a","Fragments":["second"]},{"Key":"completely happy","Fragments":["with"]},{"Key":"two ```len```","Fragments":["statements,"]},{"Key":"```len``` statements,","Fragments":["as"]},{"Key":"statements, as","Fragments":["I"]},{"Key":"they can","Fragments":["be","be,","make","make","make","make"]},{"Key":"be executed","Fragments":["in","by"]},{"Key":"executed in","Fragments":["constant"]},{"Key":"time. If","Fragments":["they"]},{"Key":"If they","Fragments":["can"]},{"Key":"can be,","Fragments":["then"]},{"Key":"be, then","Fragments":["this"]},{"Key":"then this","Fragments":["is","makes"]},{"Key":"probably a","Fragments":["good","better."]},{"Key":"good solution.","Fragments":["If"]},{"Key":"solution. If","Fragments":["not,"]},{"Key":"If not,","Fragments":["I"]},{"Key":"that walked","Fragments":["both"]},{"Key":"walked both","Fragments":["lists,"]},{"Key":"both lists,","Fragments":["but"]},{"Key":"lists, but","Fragments":["this"]},{"Key":"this requires","Fragments":["the"]},{"Key":"requires the","Fragments":["nightly"]},{"Key":"build rust","Fragments":["version"]},{"Key":"rust version","Fragments":["that"]},{"Key":"version that","Fragments":["allows"]},{"Key":"that allows","Fragments":["using","deriving"]},{"Key":"allows using","Fragments":["the"]},{"Key":"the splice_pattern","Fragments":["feature."]},{"Key":"solution. `fold`","Fragments":["looks"]},{"Key":"`fold` looks","Fragments":["too"]},{"Key":"too clever,","Fragments":["but"]},{"Key":"clever, but","Fragments":["otherwise"]},{"Key":"otherwise pretty","Fragments":["clean"]},{"Key":"pretty clean","Fragments":["and"]},{"Key":"clean and","Fragments":["readable","simple."]},{"Key":"for `\u0026str`,","Fragments":["[looks"]},{"Key":"`\u0026str`, [looks","Fragments":["like](https://doc.rust-lang.org/nightly/std/primitive.str.html?search=#representation)"]},{"Key":"[looks like](https://doc.rust-lang.org/nightly/std/primitive.str.html?search=#representation)","Fragments":["it"]},{"Key":"like](https://doc.rust-lang.org/nightly/std/primitive.str.html?search=#representation) it","Fragments":["already"]},{"Key":"it already","Fragments":["has"]},{"Key":"already has","Fragments":["information"]},{"Key":"has information","Fragments":["about"]},{"Key":"information about","Fragments":["its"]},{"Key":"about its","Fragments":["size,","semantics."]},{"Key":"its size,","Fragments":["so"]},{"Key":"size, so","Fragments":["`len()`"]},{"Key":"so `len()`","Fragments":["should"]},{"Key":"`len()` should","Fragments":["be"]},{"Key":"be constant","Fragments":["time."]},{"Key":" Remember","Fragments":["that"]},{"Key":"Remember that","Fragments":["`\u0026\u0026`"]},{"Key":"that `\u0026\u0026`","Fragments":["and"]},{"Key":"`\u0026\u0026` and","Fragments":["`||`"]},{"Key":"and `||`","Fragments":["are"]},{"Key":"`||` are","Fragments":["lazy,"]},{"Key":"are lazy,","Fragments":["so"]},{"Key":"lazy, so","Fragments":["they","I"]},{"Key":"so they","Fragments":["also"]},{"Key":"they also","Fragments":["act"]},{"Key":"also act","Fragments":["as"]},{"Key":"act as","Fragments":["flow"]},{"Key":"as flow","Fragments":["control;"]},{"Key":"flow control;","Fragments":["considering"]},{"Key":"control; considering","Fragments":["that,"]},{"Key":"considering that,","Fragments":["is"]},{"Key":"that, is","Fragments":["there"]},{"Key":"a clearer","Fragments":["way"]},{"Key":"clearer way","Fragments":["to"]},{"Key":"this than","Fragments":["`match`?"]},{"Key":"Few readability","Fragments":["fixes:"]},{"Key":"readability fixes:","Fragments":["use"]},{"Key":"fixes: use","Fragments":["tuple,"]},{"Key":"use tuple,","Fragments":["few"]},{"Key":"tuple, few","Fragments":["renames."]},{"Key":"In ```allergies```,","Fragments":["I"]},{"Key":"```allergies```, I","Fragments":["think"]},{"Key":"through an","Fragments":["array"]},{"Key":"the allergens,","Fragments":["casting"]},{"Key":"allergens, casting","Fragments":["them"]},{"Key":"casting them","Fragments":["to"]},{"Key":"to ints","Fragments":["if"]},{"Key":"ints if","Fragments":["needed."]},{"Key":"if needed.","Fragments":["Then"]},{"Key":"needed. Then","Fragments":["you"]},{"Key":"Then you","Fragments":["don't"]},{"Key":"the ```new```","Fragments":["function."]},{"Key":"But then","Fragments":["I"]},{"Key":"an exact","Fragments":["copy"]},{"Key":"exact copy","Fragments":["of"]},{"Key":"your implementation","Fragments":[":)"]},{"Key":"guess it","Fragments":["is"]},{"Key":"not possible","Fragments":["to","to"]},{"Key":"an an","Fragments":["enum."]},{"Key":"agree the","Fragments":["new()"]},{"Key":"the new()","Fragments":["function"]},{"Key":"new() function","Fragments":["is"]},{"Key":"is clumsy,","Fragments":["but"]},{"Key":"clumsy, but","Fragments":["I"]},{"Key":"haven't found","Fragments":["a","a"]},{"Key":"a neat","Fragments":["way","trick."]},{"Key":"neat way","Fragments":["around"]},{"Key":"way around","Fragments":["this."]},{"Key":"Using an","Fragments":["array"]},{"Key":"array like","Fragments":["you"]},{"Key":"did is","Fragments":["less"]},{"Key":"less ugly,","Fragments":["but"]},{"Key":"ugly, but","Fragments":["it"]},{"Key":"still duplicating","Fragments":["code"]},{"Key":"Not being","Fragments":["able"]},{"Key":"being able","Fragments":["to","to","to"]},{"Key":"enumerate an","Fragments":["enum"]},{"Key":"enum seems","Fragments":["an"]},{"Key":"seems an","Fragments":["unfortunate"]},{"Key":"an unfortunate","Fragments":["limitation"]},{"Key":"unfortunate limitation","Fragments":["in"]},{"Key":"limitation in","Fragments":["rust!"]},{"Key":"I'm duplicating","Fragments":["code"]},{"Key":"duplicating code","Fragments":["a"]},{"Key":"code a","Fragments":["bit","bit.","bit","bit"]},{"Key":"bit less.","Fragments":["But"]},{"Key":"less. But","Fragments":["there"]},{"Key":"are likely","Fragments":["better","to"]},{"Key":"likely better","Fragments":["solutions"]},{"Key":"better solutions","Fragments":["than"]},{"Key":"solutions than","Fragments":["I"]},{"Key":"This one's","Fragments":["a"]},{"Key":"one's a","Fragments":["bit"]},{"Key":"bit messy,","Fragments":["owing"]},{"Key":"messy, owing","Fragments":["to"]},{"Key":"owing to","Fragments":["some"]},{"Key":"to some","Fragments":["unusual"]},{"Key":"some unusual","Fragments":["quirks"]},{"Key":"unusual quirks","Fragments":["of"]},{"Key":"quirks of","Fragments":["the"]},{"Key":"the standard","Fragments":["library.","library.","library,","unicode"]},{"Key":"I'm running","Fragments":["on"]},{"Key":"running on","Fragments":["stable"]},{"Key":"on stable","Fragments":["1.0,"]},{"Key":"stable 1.0,","Fragments":["so"]},{"Key":"1.0, so","Fragments":["the"]},{"Key":"the String::to_lowercase","Fragments":["method"]},{"Key":"String::to_lowercase method","Fragments":["isn't"]},{"Key":"method isn't","Fragments":["available,"]},{"Key":"isn't available,","Fragments":["forcing"]},{"Key":"available, forcing","Fragments":["a"]},{"Key":"forcing a","Fragments":["round"]},{"Key":"a round","Fragments":["about"]},{"Key":"round about","Fragments":["route"]},{"Key":"about route","Fragments":["through"]},{"Key":"route through","Fragments":["a"]},{"Key":"a char","Fragments":["iterator"]},{"Key":"char iterator","Fragments":["instead."]},{"Key":"Also of","Fragments":["some"]},{"Key":"of some","Fragments":["disappointment"]},{"Key":"some disappointment","Fragments":["is"]},{"Key":"disappointment is","Fragments":["that"]},{"Key":"that sort()","Fragments":["is"]},{"Key":"sort() is","Fragments":["a"]},{"Key":"a mutation","Fragments":["in"]},{"Key":"mutation in","Fragments":["place,"]},{"Key":"in place,","Fragments":["not"]},{"Key":"place, not","Fragments":["a"]},{"Key":"a returning","Fragments":["value"]},{"Key":"returning value","Fragments":["(it"]},{"Key":"value (it","Fragments":["actually"]},{"Key":"(it actually","Fragments":["returns"]},{"Key":"actually returns","Fragments":["unit),","a"]},{"Key":"returns unit),","Fragments":["necessitating"]},{"Key":"unit), necessitating","Fragments":["the"]},{"Key":"necessitating the","Fragments":["lone"]},{"Key":"the lone","Fragments":["statement"]},{"Key":"lone statement","Fragments":["lines."]},{"Key":"was an","Fragments":["interesting","epic","anagram"]},{"Key":"an interesting","Fragments":["exercise,"]},{"Key":"interesting exercise,","Fragments":["and"]},{"Key":"exercise, and","Fragments":["definitely"]},{"Key":"and definitely","Fragments":["shows"]},{"Key":"definitely shows","Fragments":["some"]},{"Key":"shows some","Fragments":["of"]},{"Key":"the rough","Fragments":["parts"]},{"Key":"rough parts","Fragments":["of"]},{"Key":"of Rust","Fragments":["for","and","and"]},{"Key":"Rust for","Fragments":["a"]},{"Key":"a newbie;","Fragments":["I"]},{"Key":"newbie; I","Fragments":["had"]},{"Key":"had an","Fragments":["awful"]},{"Key":"an awful","Fragments":["lot"]},{"Key":"awful lot","Fragments":["of"]},{"Key":"of trouble","Fragments":["following","it"]},{"Key":"trouble following","Fragments":["the"]},{"Key":"the lifetimes","Fragments":["and"]},{"Key":"lifetimes and","Fragments":["references,"]},{"Key":"and references,","Fragments":["need"]},{"Key":"references, need","Fragments":["to"]},{"Key":"do more","Fragments":["reading"]},{"Key":"more reading","Fragments":["on"]},{"Key":"reading on","Fragments":["the"]},{"Key":"the borrow","Fragments":["system!","checker."]},{"Key":" Nice,","Fragments":["clear.","but","clean"]},{"Key":"Nice, clear.","Fragments":["Probably"]},{"Key":"clear. Probably","Fragments":["better"]},{"Key":"Probably better","Fragments":["choice"]},{"Key":"better choice","Fragments":["of","for"]},{"Key":"integer than","Fragments":["I"]},{"Key":"I used.","Fragments":["Is"]},{"Key":"used. Is","Fragments":["it"]},{"Key":"it necessary","Fragments":["to"]},{"Key":"to test","Fragments":["every","the","the","if"]},{"Key":"test every","Fragments":["number"]},{"Key":"every number","Fragments":["for"]},{"Key":"number for","Fragments":["divisibility"]},{"Key":"for divisibility","Fragments":["by","by"]},{"Key":"don't *think*","Fragments":["it"]},{"Key":"*think* it","Fragments":["would"]},{"Key":"any more","Fragments":["efficient","(since"]},{"Key":"efficient to","Fragments":["evaluate"]},{"Key":"to evaluate","Fragments":["`sorted_w`"]},{"Key":"evaluate `sorted_w`","Fragments":["after"]},{"Key":"`sorted_w` after","Fragments":["checking"]},{"Key":"after checking","Fragments":["for"]},{"Key":"a direct","Fragments":["match","match;"]},{"Key":"direct match","Fragments":["given"]},{"Key":"match given","Fragments":["that"]},{"Key":"that any","Fragments":["large"]},{"Key":"any large","Fragments":["dataset"]},{"Key":"large dataset","Fragments":["is"]},{"Key":"dataset is","Fragments":["far"]},{"Key":"is far","Fragments":["more"]},{"Key":"more likely","Fragments":["to"]},{"Key":"anagram than","Fragments":["a"]},{"Key":"direct match;","Fragments":["that"]},{"Key":"match; that","Fragments":["said,"]},{"Key":"that said,","Fragments":["if"]},{"Key":"said, if","Fragments":["I"]},{"Key":"was interested","Fragments":["in"]},{"Key":"interested in","Fragments":["efficiency"]},{"Key":"in efficiency","Fragments":["on"]},{"Key":"efficiency on","Fragments":["large"]},{"Key":"on large","Fragments":["datasets"]},{"Key":"large datasets","Fragments":["I"]},{"Key":"datasets I","Fragments":["would"]},{"Key":"probably check","Fragments":["length"]},{"Key":"check length","Fragments":["first,"]},{"Key":"length first,","Fragments":["so..."]},{"Key":"So this","Fragments":["is","is","was"]},{"Key":"a pretty","Fragments":["huge"]},{"Key":"pretty huge","Fragments":["mess."]},{"Key":"a huge","Fragments":["mess"]},{"Key":"huge mess","Fragments":["because"]},{"Key":"mess because","Fragments":["most"]},{"Key":"because most","Fragments":["high"]},{"Key":"most high","Fragments":["level"]},{"Key":"high level","Fragments":["languages"]},{"Key":"level languages","Fragments":["hide"]},{"Key":"languages hide","Fragments":["all"]},{"Key":"hide all","Fragments":["of"]},{"Key":"the mess","Fragments":["from"]},{"Key":"mess from","Fragments":["you"]},{"Key":"from you","Fragments":["and"]},{"Key":"you and","Fragments":["some"]},{"Key":"this mess","Fragments":["is"]},{"Key":"mess is","Fragments":["just"]},{"Key":"do know","Fragments":["that"]},{"Key":"know that","Fragments":["the","Rust","maths","I","single"]},{"Key":"the unicode","Fragments":["handling"]},{"Key":"unicode handling","Fragments":["in"]},{"Key":"handling in","Fragments":["rust"]},{"Key":"in rust","Fragments":["seems","have"]},{"Key":"rust seems","Fragments":["like"]},{"Key":"a disaster.","Fragments":["I"]},{"Key":"disaster. I","Fragments":["spent"]},{"Key":"I spent","Fragments":["about"]},{"Key":"spent about","Fragments":["30"]},{"Key":"about 30","Fragments":["minutes"]},{"Key":"30 minutes","Fragments":["looking"]},{"Key":"minutes looking","Fragments":["for"]},{"Key":"a to_lower","Fragments":["function"]},{"Key":"to_lower function","Fragments":["on"]},{"Key":"function on","Fragments":["unicode","option","a"]},{"Key":"on unicode","Fragments":["strings"]},{"Key":"strings without","Fragments":["finding"]},{"Key":"without finding","Fragments":["one."]},{"Key":"finding one.","Fragments":["And"]},{"Key":"one. And","Fragments":["unicode"]},{"Key":"And unicode","Fragments":["is"]},{"Key":"unicode is","Fragments":["a"]},{"Key":"lot harder","Fragments":["than"]},{"Key":"harder than","Fragments":["I","any"]},{"Key":"I gave","Fragments":["it"]},{"Key":"gave it","Fragments":["credit"]},{"Key":"it credit","Fragments":["for."]},{"Key":"the sort_str","Fragments":["and"]},{"Key":"sort_str and","Fragments":["to_unicode_lower"]},{"Key":"and to_unicode_lower","Fragments":["functions"]},{"Key":"to_unicode_lower functions","Fragments":["were"]},{"Key":"functions were","Fragments":["going"]},{"Key":"were going","Fragments":["to","to"]},{"Key":"be public","Fragments":["I'd"]},{"Key":"public I'd","Fragments":["probably"]},{"Key":"I'd probably","Fragments":["have"]},{"Key":"have spent","Fragments":["some"]},{"Key":"spent some","Fragments":["more"]},{"Key":"some more","Fragments":["time","iterator"]},{"Key":"time thinking","Fragments":["about"]},{"Key":"about their","Fragments":["arguments"]},{"Key":"their arguments","Fragments":["and"]},{"Key":"return values.","Fragments":["These"]},{"Key":"values. These","Fragments":["ones"]},{"Key":"These ones","Fragments":["are"]},{"Key":"ones are","Fragments":["pretty"]},{"Key":"much designed","Fragments":["for"]},{"Key":"designed for","Fragments":["exactly"]},{"Key":"for exactly","Fragments":["what","this"]},{"Key":"this program","Fragments":["wants","work."]},{"Key":"program wants","Fragments":["for"]},{"Key":"wants for","Fragments":["performance."]},{"Key":" Something","Fragments":["about"]},{"Key":"Something about","Fragments":["rust"]},{"Key":"about rust","Fragments":["makes","doing"]},{"Key":"rust makes","Fragments":["me"]},{"Key":"me want","Fragments":["to"]},{"Key":"avoid overhead","Fragments":["which"]},{"Key":"overhead which","Fragments":["I"]},{"Key":"don't usually","Fragments":["get"]},{"Key":"usually get","Fragments":["in"]},{"Key":"get in","Fragments":["other","terms"]},{"Key":"languages. Maybe","Fragments":["it's"]},{"Key":"Maybe it's","Fragments":["the"]},{"Key":"a systems","Fragments":["language"]},{"Key":"systems language","Fragments":["and"]},{"Key":"language and","Fragments":["actually"]},{"Key":"actually tries","Fragments":["to"]},{"Key":"tries to","Fragments":["force"]},{"Key":"to force","Fragments":["you"]},{"Key":"force you","Fragments":["to"]},{"Key":"about what","Fragments":["you're"]},{"Key":"doing, rather","Fragments":["than"]},{"Key":"than giving","Fragments":["you"]},{"Key":"giving you","Fragments":["simple"]},{"Key":"you simple","Fragments":["easy"]},{"Key":"simple easy","Fragments":["outs."]},{"Key":"the strings-in-a-vector","Fragments":["concept"]},{"Key":"strings-in-a-vector concept","Fragments":["you"]},{"Key":"concept you","Fragments":["use"]},{"Key":"use here","Fragments":["as"]},{"Key":"here as","Fragments":["well"]},{"Key":"as how","Fragments":["you"]},{"Key":"just join","Fragments":["them"]},{"Key":"join them","Fragments":["to"]},{"Key":"The formatting","Fragments":["is"]},{"Key":"formatting is","Fragments":["a"]},{"Key":"of ```if(cond)","Fragments":["return"]},{"Key":"```if(cond) return","Fragments":["false```"]},{"Key":"return false```","Fragments":["consider"]},{"Key":"false``` consider","Fragments":["just"]},{"Key":"consider just","Fragments":["```!"]},{"Key":"just ```!","Fragments":["cond"]},{"Key":"```! cond","Fragments":["````"]},{"Key":" Made","Fragments":["with"]},{"Key":"Made with","Fragments":["the"]},{"Key":"the help","Fragments":["of"]},{"Key":"help of","Fragments":["@scarlett"]},{"Key":"of @scarlett","Fragments":["at"]},{"Key":"@scarlett at","Fragments":["https://gitter.im/ruRust/general."]},{"Key":"at https://gitter.im/ruRust/general.","Fragments":["Thanks!"]},{"Key":"you imagine","Fragments":["a"]},{"Key":"imagine a","Fragments":["way"]},{"Key":"way not","Fragments":["to"]},{"Key":"the if…else","Fragments":["if…else"]},{"Key":"if…else if…else","Fragments":["but"]},{"Key":"if…else but","Fragments":["a"]},{"Key":"but a","Fragments":["single","user"]},{"Key":"a single","Fragments":["boolean","boolean","other","expression](http://rustbyexample.com/fn/closures.html).","boolean","boolean","expression.","function","error"]},{"Key":"single boolean","Fragments":["expression","expression","expression,","expression"]},{"Key":"considered something","Fragments":["like,"]},{"Key":" (year","Fragments":["%"]},{"Key":"(year %","Fragments":["4","400"]},{"Key":"4 ==","Fragments":["0","0","0```","0,","0"]},{"Key":"\u0026\u0026 year","Fragments":["%","%"]},{"Key":"100 !=","Fragments":["0)","0"]},{"Key":"!= 0)","Fragments":["||"]},{"Key":"0) ||","Fragments":["year"]},{"Key":"|| year","Fragments":["%","%"]},{"Key":"thought the","Fragments":["`if"]},{"Key":"the `if","Fragments":["else`"]},{"Key":"`if else`","Fragments":["way"]},{"Key":"else` way","Fragments":["was"]},{"Key":"way was","Fragments":["easier"]},{"Key":"was easier","Fragments":["to"]},{"Key":"liked that","Fragments":["I"]},{"Key":"could comment","Fragments":["each"]},{"Key":"comment each","Fragments":["branch"]},{"Key":"each branch","Fragments":["with"]},{"Key":"branch with","Fragments":["its"]},{"Key":" \"Expression","Fragments":["oriented.\""]},{"Key":"\"Expression oriented.\"","Fragments":["\u003e.\u003e"]},{"Key":"For checking","Fragments":["uppercase,"]},{"Key":"checking uppercase,","Fragments":["using"]},{"Key":"uppercase, using","Fragments":["`!input.chars().any(|c|"]},{"Key":"using `!input.chars().any(|c|","Fragments":["c.is_lowercase())`"]},{"Key":"`!input.chars().any(|c| c.is_lowercase())`","Fragments":["is"]},{"Key":"c.is_lowercase())` is","Fragments":["much"]},{"Key":"than `input","Fragments":["=="]},{"Key":"`input ==","Fragments":["input.to_uppercase()`."]},{"Key":"It avoids","Fragments":["an"]},{"Key":"avoids an","Fragments":["unnecessary"]},{"Key":"an unnecessary","Fragments":["string"]},{"Key":"unnecessary string","Fragments":["allocation"]},{"Key":"string allocation","Fragments":["and"]},{"Key":"allocation and","Fragments":["returns"]},{"Key":"and returns","Fragments":["on"]},{"Key":"returns on","Fragments":["the"]},{"Key":"first lowercase","Fragments":["alphabet."]},{"Key":" @winifred","Fragments":["Neat!"]},{"Key":"@winifred Neat!","Fragments":["I"]},{"Key":"Neat! I","Fragments":["hadn't"]},{"Key":"hadn't thought","Fragments":["of"]},{"Key":"But now","Fragments":["I"]},{"Key":"ask something...","Fragments":["Is"]},{"Key":"something... Is","Fragments":["that"]},{"Key":"Is that","Fragments":["a","a","the","common?"]},{"Key":"a safe","Fragments":["thing"]},{"Key":"safe thing","Fragments":["to"]},{"Key":"do in","Fragments":["Rust?","Rust!).","the"]},{"Key":"in Rust?","Fragments":["I"]},{"Key":"Rust? I","Fragments":["had"]},{"Key":"had read","Fragments":["some"]},{"Key":"read some","Fragments":["stuff,"]},{"Key":"some stuff,","Fragments":["awhile"]},{"Key":"stuff, awhile","Fragments":["back,"]},{"Key":"awhile back,","Fragments":["that"]},{"Key":"back, that","Fragments":["recommended"]},{"Key":"that recommended","Fragments":["against"]},{"Key":"recommended against","Fragments":["doing"]},{"Key":"against doing","Fragments":["cases"]},{"Key":"doing cases","Fragments":["with"]},{"Key":"cases with","Fragments":["characters"]},{"Key":"with characters","Fragments":["because","and"]},{"Key":"characters because","Fragments":["characters"]},{"Key":"because characters","Fragments":["in"]},{"Key":"in Rust","Fragments":["are","as","in","seems","in","1.2","so"]},{"Key":"Rust are","Fragments":["unicode"]},{"Key":"are unicode","Fragments":["and"]},{"Key":"unicode and","Fragments":["sometimes"]},{"Key":"and sometimes","Fragments":["the"]},{"Key":"sometimes the","Fragments":["case"]},{"Key":"case depends","Fragments":["on"]},{"Key":"the context.","Fragments":["Is"]},{"Key":"context. Is","Fragments":["that"]},{"Key":"time bomb","Fragments":["waiting"]},{"Key":"bomb waiting","Fragments":["for"]},{"Key":"waiting for","Fragments":["the"]},{"Key":" Oh,","Fragments":["wow.","yeah,"]},{"Key":"much I","Fragments":["agree"]},{"Key":"agree with","Fragments":["the","@odie","you","you"]},{"Key":"choice to","Fragments":["even","me.","use"]},{"Key":"to even","Fragments":["have"]},{"Key":"even have","Fragments":["\"graphemes\""]},{"Key":"have \"graphemes\"","Fragments":["as"]},{"Key":"\"graphemes\" as","Fragments":["separate"]},{"Key":"as separate","Fragments":["from"]},{"Key":"separate from","Fragments":["\"characters,\""]},{"Key":"from \"characters,\"","Fragments":["because"]},{"Key":"\"characters,\" because","Fragments":["that's"]},{"Key":"because that's","Fragments":["what"]},{"Key":"what everyone's","Fragments":["thinking"]},{"Key":"everyone's thinking","Fragments":["when"]},{"Key":"thinking when","Fragments":["they"]},{"Key":"when they","Fragments":["say"]},{"Key":"they say","Fragments":["\"character\""]},{"Key":"say \"character\"","Fragments":["anyway..."]},{"Key":" Honestly,","Fragments":["when","this"]},{"Key":"Honestly, when","Fragments":["I'm"]},{"Key":"when I'm","Fragments":["in"]},{"Key":"in doubt,","Fragments":["I"]},{"Key":"doubt, I","Fragments":["tend"]},{"Key":"just parse","Fragments":["things"]},{"Key":"parse things","Fragments":["as"]},{"Key":"things as","Fragments":["ASCII"]},{"Key":"as ASCII","Fragments":["anyway"]},{"Key":"ASCII anyway","Fragments":["and"]},{"Key":"anyway and","Fragments":["call"]},{"Key":"call anything","Fragments":["that"]},{"Key":"anything that","Fragments":["doesn't"]},{"Key":"doesn't parse","Fragments":["\"user"]},{"Key":"parse \"user","Fragments":["error.\""]},{"Key":"\"user error.\"","Fragments":["Seems"]},{"Key":"error.\" Seems","Fragments":["way"]},{"Key":"Seems way","Fragments":["more"]},{"Key":"way more","Fragments":["reliable,"]},{"Key":"more reliable,","Fragments":["given"]},{"Key":"reliable, given","Fragments":["all"]},{"Key":"given all","Fragments":["the"]},{"Key":"the [censored]","Fragments":["you"]},{"Key":"[censored] you","Fragments":["have"]},{"Key":"put up","Fragments":["with"]},{"Key":"up with","Fragments":["from","double"]},{"Key":"with from","Fragments":["Unicode..."]},{"Key":"It's pretty","Fragments":["nice"]},{"Key":"pretty nice","Fragments":["being"]},{"Key":"nice being","Fragments":["able"]},{"Key":"just look","Fragments":["at"]},{"Key":"source code","Fragments":["for"]},{"Key":"code for","Fragments":["the"]},{"Key":"the libraries","Fragments":["themselves."]},{"Key":"libraries themselves.","Fragments":["I'm"]},{"Key":"themselves. I'm","Fragments":["still"]},{"Key":"you look","Fragments":["at"]},{"Key":"source code,","Fragments":["to_uppercase"]},{"Key":"code, to_uppercase","Fragments":["iterates"]},{"Key":"to_uppercase iterates","Fragments":["on"]},{"Key":"iterates on","Fragments":["chars"]},{"Key":"on chars","Fragments":["and"]},{"Key":"chars and","Fragments":["converts"]},{"Key":"and converts","Fragments":["each"]},{"Key":"converts each","Fragments":["to"]},{"Key":"each to","Fragments":["uppercase."]},{"Key":"to uppercase.","Fragments":["So"]},{"Key":"uppercase. So","Fragments":["this"]},{"Key":" #[stable(feature","Fragments":["="]},{"Key":"#[stable(feature =","Fragments":["\"unicode_case_mapping\","]},{"Key":"= \"unicode_case_mapping\",","Fragments":["since"]},{"Key":"\"unicode_case_mapping\", since","Fragments":["="]},{"Key":"since =","Fragments":["\"1.2.0\")]"]},{"Key":"fn to_uppercase(\u0026self)","Fragments":["-\u003e"]},{"Key":"to_uppercase(\u0026self) -\u003e","Fragments":["String"]},{"Key":"-\u003e String","Fragments":["{","{","{"]},{"Key":" s.extend(self.chars().flat_map(|c|","Fragments":["c.to_uppercase()));"]},{"Key":" return","Fragments":["s;","true;","false;```","false"]},{"Key":" Regarding","Fragments":["unicode,"]},{"Key":"Regarding unicode,","Fragments":["you"]},{"Key":"unicode, you","Fragments":["are"]},{"Key":"right. The","Fragments":["recommendation"]},{"Key":"The recommendation","Fragments":["was"]},{"Key":"recommendation was","Fragments":["to"]},{"Key":"was to","Fragments":["iterate","give","have","make"]},{"Key":"over graphemes,","Fragments":["but"]},{"Key":"graphemes, but","Fragments":["it"]},{"Key":"unstable currently","Fragments":["and"]},{"Key":"currently and","Fragments":["does"]},{"Key":"and does","Fragments":["not"]},{"Key":"not provide","Fragments":["many","the"]},{"Key":"provide many","Fragments":["helper"]},{"Key":"many helper","Fragments":["methods."]},{"Key":"I'm going","Fragments":["to","to","with","to","to"]},{"Key":"at some","Fragments":["other","other"]},{"Key":"other submissions","Fragments":["just"]},{"Key":"submissions just","Fragments":["to"]},{"Key":"out what","Fragments":["will","the"]},{"Key":"what will","Fragments":["compile."]},{"Key":"will compile.","Fragments":[":-("]},{"Key":"These problems","Fragments":["do"]},{"Key":"problems do","Fragments":["not"]},{"Key":"not state","Fragments":["the"]},{"Key":"state the","Fragments":["expected"]},{"Key":"expected interface,","Fragments":["leaving"]},{"Key":"interface, leaving","Fragments":["one"]},{"Key":"leaving one","Fragments":["to"]},{"Key":"infer it","Fragments":["from"]},{"Key":"it from","Fragments":["the","the"]},{"Key":"test code.","Fragments":["That's"]},{"Key":"code. That's","Fragments":["a"]},{"Key":"That's a","Fragments":["bit","great"]},{"Key":"problem if","Fragments":["you're"]},{"Key":"if you're","Fragments":["learning"]},{"Key":"you're learning","Fragments":["the"]},{"Key":"learning the","Fragments":["language."]},{"Key":"the language.","Fragments":["Case"]},{"Key":"language. Case","Fragments":["in"]},{"Key":"Case in","Fragments":["point,"]},{"Key":"in point,","Fragments":["from"]},{"Key":"point, from","Fragments":["the"]},{"Key":"test code","Fragments":["Allergen"]},{"Key":"code Allergen","Fragments":["seemed"]},{"Key":"Allergen seemed","Fragments":["to"]},{"Key":"be an","Fragments":["enum","array"]},{"Key":"and Allergies","Fragments":["a"]},{"Key":"Allergies a","Fragments":["tuple"]},{"Key":"tuple struct,","Fragments":["but"]},{"Key":"struct, but","Fragments":["the","I've"]},{"Key":"compiler says","Fragments":["my"]},{"Key":"says my","Fragments":["definitions"]},{"Key":"my definitions","Fragments":["are"]},{"Key":"definitions are","Fragments":["unused"]},{"Key":"are unused","Fragments":["while"]},{"Key":"unused while","Fragments":["the"]},{"Key":"corresponding symbols","Fragments":["in"]},{"Key":"symbols in","Fragments":["the"]},{"Key":"tests fails","Fragments":["to"]},{"Key":"fails to","Fragments":["resolve."]},{"Key":"I very","Fragments":["much","much"]},{"Key":"much question","Fragments":["the"]},{"Key":"question the","Fragments":["use"]},{"Key":"this purpose.","Fragments":["If"]},{"Key":"purpose. If","Fragments":["there"]},{"Key":"If there","Fragments":["are","are"]},{"Key":"only four","Fragments":["options,"]},{"Key":"four options,","Fragments":["why"]},{"Key":"options, why","Fragments":["do"]},{"Key":"why do","Fragments":["we","you"]},{"Key":"do we","Fragments":["need"]},{"Key":"we need","Fragments":["the"]},{"Key":"the potential","Fragments":["to"]},{"Key":"potential to","Fragments":["insert"]},{"Key":"insert an","Fragments":["arbitrary"]},{"Key":"an arbitrary","Fragments":["number"]},{"Key":"arbitrary number","Fragments":["of"]},{"Key":"This one-liner","Fragments":["is"]},{"Key":"one-liner is","Fragments":["a"]},{"Key":"idiomatic version.","Fragments":["I"]},{"Key":"think factoring","Fragments":["out"]},{"Key":"factoring out","Fragments":["an","the"]},{"Key":"out an","Fragments":["\"is"]},{"Key":"an \"is","Fragments":["divisible\""]},{"Key":"\"is divisible\"","Fragments":["function"]},{"Key":"divisible\" function","Fragments":["as"]},{"Key":"as some","Fragments":["solutions","kind"]},{"Key":"some solutions","Fragments":["do"]},{"Key":"solutions do","Fragments":["actually"]},{"Key":"do actually","Fragments":["make"]},{"Key":"actually make","Fragments":["the"]},{"Key":"code harder","Fragments":["to","to"]},{"Key":"to read,","Fragments":["not"]},{"Key":"read, not","Fragments":["easier,"]},{"Key":"not easier,","Fragments":["so"]},{"Key":"easier, so","Fragments":["this"]},{"Key":"so this","Fragments":["is"]},{"Key":"my preferred","Fragments":["style."]},{"Key":"My first","Fragments":["rust"]},{"Key":"first rust","Fragments":["program,"]},{"Key":"rust program,","Fragments":["all"]},{"Key":"program, all","Fragments":["kinds"]},{"Key":"all kinds","Fragments":["of"]},{"Key":"kinds of","Fragments":["feedback","problems."]},{"Key":"of feedback","Fragments":["are"]},{"Key":"feedback are","Fragments":["welcome."]},{"Key":" `u16`","Fragments":["might"]},{"Key":"`u16` might","Fragments":["make"]},{"Key":"might make","Fragments":["trouble","this","sense"]},{"Key":"make trouble","Fragments":["in"]},{"Key":"trouble in","Fragments":["about"]},{"Key":"in about","Fragments":["30k"]},{"Key":"about 30k","Fragments":["years"]},{"Key":"30k years","Fragments":[";)"]},{"Key":"add parenthesis","Fragments":["around"]},{"Key":"parenthesis around","Fragments":["`mult4"]},{"Key":"around `mult4","Fragments":["\u0026\u0026"]},{"Key":"`mult4 \u0026\u0026","Fragments":["!mult100`."]},{"Key":"\u0026\u0026 !mult100`.","Fragments":["Although"]},{"Key":"!mult100`. Although","Fragments":["not"]},{"Key":"not necessary,","Fragments":["since"]},{"Key":"necessary, since","Fragments":["`\u0026\u0026`"]},{"Key":"since `\u0026\u0026`","Fragments":["binds"]},{"Key":"`\u0026\u0026` binds","Fragments":["tighter"]},{"Key":"binds tighter","Fragments":["than"]},{"Key":"tighter than","Fragments":["`||`,"]},{"Key":"than `||`,","Fragments":["it's"]},{"Key":"`||`, it's","Fragments":["easier"]},{"Key":"it's easier","Fragments":["to"]},{"Key":"Just writing","Fragments":["a"]},{"Key":"writing a","Fragments":["dummy","new"]},{"Key":"a dummy","Fragments":["function"]},{"Key":"dummy function","Fragments":["that"]},{"Key":"function that","Fragments":["passed","takes","you","does"]},{"Key":"that passed","Fragments":["typechecking"]},{"Key":"passed typechecking","Fragments":["was"]},{"Key":"typechecking was","Fragments":["an"]},{"Key":"an epic","Fragments":["achievement"]},{"Key":"epic achievement","Fragments":["in"]},{"Key":"achievement in","Fragments":["Rust."]},{"Key":"in Rust.","Fragments":["Given","By",":-)","I"]},{"Key":"Rust. Given","Fragments":["that,"]},{"Key":"Given that,","Fragments":["I'm"]},{"Key":"that, I'm","Fragments":["going"]},{"Key":"write it","Fragments":["in"]},{"Key":"in pieces","Fragments":["and"]},{"Key":"pieces and","Fragments":["submit"]},{"Key":"and submit","Fragments":["it"]},{"Key":"submit it","Fragments":["at"]},{"Key":"at each","Fragments":["stage."]},{"Key":" Obstacles","Fragments":["in"]},{"Key":"Obstacles in","Fragments":["the"]},{"Key":"order they","Fragments":["appear"]},{"Key":"they appear","Fragments":["in"]},{"Key":"appear in","Fragments":["the"]},{"Key":"code, not","Fragments":["in"]},{"Key":"order I","Fragments":["solved"]},{"Key":"I solved","Fragments":["them:"]},{"Key":"* Had","Fragments":["to","to","to","to"]},{"Key":"Had to","Fragments":["learn","learn","learn","declare"]},{"Key":"learn the","Fragments":["\u003c'a\u003e","_"]},{"Key":"the \u003c'a\u003e","Fragments":["lifetime"]},{"Key":"\u003c'a\u003e lifetime","Fragments":["notation"]},{"Key":"lifetime notation","Fragments":["and"]},{"Key":"notation and","Fragments":["a"]},{"Key":"little about","Fragments":["its"]},{"Key":"_ prefix","Fragments":["for"]},{"Key":"prefix for","Fragments":["suppressing"]},{"Key":"for suppressing","Fragments":["\"unused\""]},{"Key":"suppressing \"unused\"","Fragments":["errors."]},{"Key":"to declare","Fragments":["the","the"]},{"Key":"declare the","Fragments":["second","return"]},{"Key":"second parameter","Fragments":["as"]},{"Key":"parameter as","Fragments":["a"]},{"Key":"a fixed","Fragments":["array,"]},{"Key":"fixed array,","Fragments":["not"]},{"Key":"array, not","Fragments":["the"]},{"Key":"the Vec","Fragments":["I"]},{"Key":"Vec I","Fragments":["expected"]},{"Key":"I expected","Fragments":["it"]},{"Key":"expected it","Fragments":["to"]},{"Key":"return value","Fragments":["as"]},{"Key":"a value,","Fragments":["not","so","it"]},{"Key":"value, not","Fragments":["a"]},{"Key":"a reference.","Fragments":["I"]},{"Key":"reference. I","Fragments":["should"]},{"Key":"to guess","Fragments":["this"]},{"Key":"guess this","Fragments":["from","isn't","saves"]},{"Key":"this from","Fragments":["C++,","is"]},{"Key":"from C++,","Fragments":["though."]},{"Key":"create an","Fragments":["empty"]},{"Key":"vector, though","Fragments":["this"]},{"Key":"though this","Fragments":["was"]},{"Key":"was comparatively","Fragments":["easy."]},{"Key":"a general","Fragments":["observation,"]},{"Key":"general observation,","Fragments":["containers"]},{"Key":"observation, containers","Fragments":["of"]},{"Key":"containers of","Fragments":["strings","simple"]},{"Key":"of strings","Fragments":["aren't"]},{"Key":"strings aren't","Fragments":["as"]},{"Key":"aren't as","Fragments":["simple"]},{"Key":"simple in","Fragments":["Rust"]},{"Key":"Rust as","Fragments":["in"]},{"Key":"in most","Fragments":["languages,"]},{"Key":"most languages,","Fragments":["so"]},{"Key":"languages, so","Fragments":["for"]},{"Key":"so for","Fragments":["this"]},{"Key":"case it","Fragments":["doesn't","needs","could"]},{"Key":"doesn't make","Fragments":["a"]},{"Key":"good second","Fragments":["assignment."]},{"Key":"second assignment.","Fragments":["For"]},{"Key":"assignment. For","Fragments":["Rust,"]},{"Key":"For Rust,","Fragments":["there"]},{"Key":"should first","Fragments":["be"]},{"Key":"first be","Fragments":["exercises"]},{"Key":"be exercises","Fragments":["with"]},{"Key":"exercises with","Fragments":["containers"]},{"Key":"with containers","Fragments":["of"]},{"Key":"of simple","Fragments":["numbers,"]},{"Key":"simple numbers,","Fragments":["strings"]},{"Key":"numbers, strings","Fragments":["by"]},{"Key":"strings by","Fragments":["themselves,"]},{"Key":"by themselves,","Fragments":["and"]},{"Key":"and so","Fragments":["on.","we","using"]},{"Key":"larger type","Fragments":["than"]},{"Key":"type than","Fragments":["u32"]},{"Key":"u32 to","Fragments":["expand"]},{"Key":"to expand","Fragments":["the"]},{"Key":"expand the","Fragments":["range","range"]},{"Key":"This actually","Fragments":["finishes"]},{"Key":"actually finishes","Fragments":["anagrams_for,"]},{"Key":"finishes anagrams_for,","Fragments":["factoring"]},{"Key":"anagrams_for, factoring","Fragments":["out"]},{"Key":"actual test","Fragments":["into"]},{"Key":"test into","Fragments":["a"]},{"Key":"a sub","Fragments":["function."]},{"Key":"sub function.","Fragments":["Not"]},{"Key":"function. Not","Fragments":["nearly"]},{"Key":"Not nearly","Fragments":["as"]},{"Key":"nearly as","Fragments":["hard"]},{"Key":"as hard","Fragments":["as"]},{"Key":"previous part,","Fragments":["since"]},{"Key":"part, since","Fragments":["I"]},{"Key":"to fight","Fragments":["the"]},{"Key":"fight the","Fragments":["borrow"]},{"Key":"borrow checker.","Fragments":["It"]},{"Key":"checker. It","Fragments":["wasn't"]},{"Key":"It wasn't","Fragments":["as"]},{"Key":"wasn't as","Fragments":["easy"]},{"Key":"as easy","Fragments":["to"]},{"Key":"find documentation","Fragments":["for"]},{"Key":"for Vec","Fragments":["as"]},{"Key":"Vec as","Fragments":["it"]},{"Key":"should be,","Fragments":["though--the","but"]},{"Key":"be, though--the","Fragments":["page"]},{"Key":"though--the page","Fragments":["on"]},{"Key":"page on","Fragments":["the"]},{"Key":"the collections","Fragments":["module"]},{"Key":"collections module","Fragments":["doesn't"]},{"Key":"module doesn't","Fragments":["seem"]},{"Key":"doesn't seem","Fragments":["to"]},{"Key":"to link","Fragments":["to"]},{"Key":"link to","Fragments":["the","wikipedia"]},{"Key":"for it's","Fragments":["component"]},{"Key":"it's component","Fragments":["modules."]},{"Key":"component modules.","Fragments":["Maybe"]},{"Key":"modules. Maybe","Fragments":["I"]},{"Key":"Maybe I","Fragments":["missed"]},{"Key":"Now we've","Fragments":["substantially"]},{"Key":"we've substantially","Fragments":["roughed"]},{"Key":"substantially roughed","Fragments":["in"]},{"Key":"roughed in","Fragments":["is_anagram_of,"]},{"Key":"in is_anagram_of,","Fragments":["and"]},{"Key":"is_anagram_of, and","Fragments":["I've"]},{"Key":"and I've","Fragments":["used"]},{"Key":"I've used","Fragments":["my"]},{"Key":"used my","Fragments":["first"]},{"Key":"first HashMap","Fragments":["in"]},{"Key":"HashMap in","Fragments":["Rust.","`parse()`"]},{"Key":"Rust. By","Fragments":["contrast"]},{"Key":"By contrast","Fragments":["with"]},{"Key":"contrast with","Fragments":["just"]},{"Key":"with just","Fragments":["getting"]},{"Key":"just getting","Fragments":["the"]},{"Key":"getting the","Fragments":["initial","square"]},{"Key":"the initial","Fragments":["stub"]},{"Key":"initial stub","Fragments":["to"]},{"Key":"stub to","Fragments":["compile,"]},{"Key":"to compile,","Fragments":["this"]},{"Key":"compile, this","Fragments":["was"]},{"Key":"was extremely","Fragments":["pleasant"]},{"Key":"extremely pleasant","Fragments":["thanks"]},{"Key":"pleasant thanks","Fragments":["to"]},{"Key":"to HashMap","Fragments":["implementing"]},{"Key":"HashMap implementing","Fragments":["operator=="]},{"Key":"implementing operator==","Fragments":["and"]},{"Key":"operator== and","Fragments":["type"]},{"Key":"type inference","Fragments":["taking","seems"]},{"Key":"inference taking","Fragments":["care"]},{"Key":"taking care","Fragments":["of"]},{"Key":"care of","Fragments":["the"]},{"Key":"map types.","Fragments":["However,"]},{"Key":"types. However,","Fragments":["it"]},{"Key":"However, it","Fragments":["might"]},{"Key":"not have","Fragments":["been","gotten","`pub`","different"]},{"Key":"been so","Fragments":["pleasant"]},{"Key":"so pleasant","Fragments":["if"]},{"Key":"pleasant if","Fragments":["I"]},{"Key":"hadn't basically","Fragments":["cribbed"]},{"Key":"basically cribbed","Fragments":["the"]},{"Key":"cribbed the","Fragments":["map"]},{"Key":"map access","Fragments":["expression"]},{"Key":"access expression","Fragments":["\"*map1.entry(c).or_insert(0)"]},{"Key":"expression \"*map1.entry(c).or_insert(0)","Fragments":["+="]},{"Key":"\"*map1.entry(c).or_insert(0) +=","Fragments":["1\""]},{"Key":"+= 1\"","Fragments":["from"]},{"Key":"1\" from","Fragments":["a"]},{"Key":"a documentation","Fragments":["example."]},{"Key":"documentation example.","Fragments":["I"]},{"Key":"example. I","Fragments":["did"]},{"Key":"did find","Fragments":["the"]},{"Key":"the documentation,","Fragments":["but"]},{"Key":"documentation, but","Fragments":["while"]},{"Key":"but while","Fragments":["it"]},{"Key":"while it","Fragments":["is"]},{"Key":"is admirably","Fragments":["rich"]},{"Key":"admirably rich","Fragments":["with"]},{"Key":"rich with","Fragments":["examples"]},{"Key":"with examples","Fragments":["it"]},{"Key":"examples it","Fragments":["seems"]},{"Key":"seems hard","Fragments":["to"]},{"Key":"understand and","Fragments":["I"]},{"Key":"have gotten","Fragments":["that"]},{"Key":"gotten that","Fragments":["simple"]},{"Key":"that simple","Fragments":["expression"]},{"Key":"simple expression","Fragments":["from"]},{"Key":"expression from","Fragments":["it."]},{"Key":"At this","Fragments":["point"]},{"Key":"this point","Fragments":["it"]},{"Key":"point it","Fragments":["passes"]},{"Key":"passes more","Fragments":["than"]},{"Key":"than half","Fragments":["the","of"]},{"Key":"half the","Fragments":["tests;"]},{"Key":"the tests;","Fragments":["I"]},{"Key":"tests; I","Fragments":["un-ignored"]},{"Key":"I un-ignored","Fragments":["them"]},{"Key":"un-ignored them","Fragments":["until"]},{"Key":"them until","Fragments":["I"]},{"Key":"came to","Fragments":["the"]},{"Key":"the requirement","Fragments":["for"]},{"Key":"requirement for","Fragments":["case"]},{"Key":"for case","Fragments":["insensitivity."]},{"Key":"Now the","Fragments":["letter","logic"]},{"Key":"the letter","Fragments":["counting"]},{"Key":"letter counting","Fragments":["code"]},{"Key":"counting code","Fragments":["is"]},{"Key":"is factored","Fragments":["out"]},{"Key":"factored out","Fragments":["and"]},{"Key":"the counting","Fragments":["has"]},{"Key":"counting has","Fragments":["gotten"]},{"Key":"has gotten","Fragments":["smarter,"]},{"Key":"gotten smarter,","Fragments":["i.e."]},{"Key":"smarter, i.e.","Fragments":["case-insensitive."]},{"Key":"The major","Fragments":["surprise"]},{"Key":"major surprise","Fragments":["is"]},{"Key":"surprise is","Fragments":["the"]},{"Key":"the amount","Fragments":["of"]},{"Key":"trouble it","Fragments":["takes"]},{"Key":"it takes","Fragments":["to"]},{"Key":"takes to","Fragments":["get"]},{"Key":"lowercase equivalent","Fragments":["of"]},{"Key":"equivalent of","Fragments":["a"]},{"Key":"a letter.","Fragments":["Thanks"]},{"Key":"letter. Thanks","Fragments":["to"]},{"Key":"Thanks to","Fragments":["unicode"]},{"Key":"to unicode","Fragments":["to_lowercase()"]},{"Key":"unicode to_lowercase()","Fragments":["returns"]},{"Key":"to_lowercase() returns","Fragments":["an"]},{"Key":"could return","Fragments":["multiple"]},{"Key":"return multiple","Fragments":["characters"]},{"Key":"multiple characters","Fragments":["in"]},{"Key":"some languages,","Fragments":["and"]},{"Key":"languages, and","Fragments":["next()"]},{"Key":"and next()","Fragments":["returns"]},{"Key":"next() returns","Fragments":["an"]},{"Key":"an option","Fragments":["value"]},{"Key":"option value","Fragments":["in"]},{"Key":"it needs","Fragments":["to"]},{"Key":"be None.","Fragments":["Afer"]},{"Key":"None. Afer","Fragments":["some"]},{"Key":"Afer some","Fragments":["fruitless"]},{"Key":"some fruitless","Fragments":["mucking"]},{"Key":"fruitless mucking","Fragments":["about,"]},{"Key":"mucking about,","Fragments":["unwrap_or()"]},{"Key":"about, unwrap_or()","Fragments":["comes"]},{"Key":"unwrap_or() comes","Fragments":["to"]},{"Key":"comes to","Fragments":["the"]},{"Key":"Now we're","Fragments":["detecting"]},{"Key":"we're detecting","Fragments":["whether"]},{"Key":"detecting whether","Fragments":["we're"]},{"Key":"whether we're","Fragments":["testing"]},{"Key":"we're testing","Fragments":["the"]},{"Key":"string against","Fragments":["itself,"]},{"Key":"against itself,","Fragments":["since"]},{"Key":"itself, since","Fragments":["the"]},{"Key":"problem requires","Fragments":["that"]},{"Key":"requires that","Fragments":["to"]},{"Key":"to fail.","Fragments":["Fortunately"]},{"Key":"fail. Fortunately","Fragments":["that's"]},{"Key":"Fortunately that's","Fragments":["easy."]},{"Key":" Final","Fragments":["version."]},{"Key":"Final version.","Fragments":["Since"]},{"Key":"version. Since","Fragments":["the"]},{"Key":"Since the","Fragments":["last"]},{"Key":"last test","Fragments":["was","to"]},{"Key":"test was","Fragments":["for"]},{"Key":"was for","Fragments":["self"]},{"Key":"for self","Fragments":["with"]},{"Key":"self with","Fragments":["arbitrary"]},{"Key":"with arbitrary","Fragments":["cases,"]},{"Key":"arbitrary cases,","Fragments":["canonicalizing"]},{"Key":"cases, canonicalizing","Fragments":["the"]},{"Key":"canonicalizing the","Fragments":["case"]},{"Key":"case was","Fragments":["correctly"]},{"Key":"was correctly","Fragments":["done"]},{"Key":"correctly done","Fragments":["in"]},{"Key":"in is_anagram-of","Fragments":["rather"]},{"Key":"is_anagram-of rather","Fragments":["than"]},{"Key":"than letter_count.","Fragments":["That"]},{"Key":"letter_count. That","Fragments":["turned"]},{"Key":"That turned","Fragments":["out"]},{"Key":"turned out","Fragments":["to"]},{"Key":"out to","Fragments":["be","be."]},{"Key":"simpler too,","Fragments":["since"]},{"Key":"too, since","Fragments":["for"]},{"Key":"since for","Fragments":["strings"]},{"Key":"strings to_lowercase()","Fragments":["simply"]},{"Key":"to_lowercase() simply","Fragments":["returns"]},{"Key":"simply returns","Fragments":["a"]},{"Key":"a string,","Fragments":["no"]},{"Key":"string, no","Fragments":["iterators"]},{"Key":"no iterators","Fragments":["or"]},{"Key":"iterators or","Fragments":["algebraic"]},{"Key":"or algebraic","Fragments":["types"]},{"Key":"algebraic types","Fragments":["needed."]},{"Key":"types needed.","Fragments":["Even"]},{"Key":"needed. Even","Fragments":["if"]},{"Key":"we didn't","Fragments":["need"]},{"Key":"didn't need","Fragments":["to","to","to"]},{"Key":"test the","Fragments":["strings","respective"]},{"Key":"strings for","Fragments":["equality,"]},{"Key":"for equality,","Fragments":["calling"]},{"Key":"equality, calling","Fragments":["this"]},{"Key":"calling this","Fragments":["before"]},{"Key":"before passing","Fragments":["the"]},{"Key":"passing the","Fragments":["strings","function"]},{"Key":"strings to","Fragments":["letter_count()","the"]},{"Key":"to letter_count()","Fragments":["would"]},{"Key":"letter_count() would","Fragments":["have"]},{"Key":"been The","Fragments":["Right"]},{"Key":"The Right","Fragments":["Thing."]},{"Key":"Right Thing.","Fragments":["Now"]},{"Key":"Thing. Now","Fragments":["I"]},{"Key":"Now I","Fragments":["know.","can't"]},{"Key":" Every","Fragments":["scientific"]},{"Key":"Every scientific","Fragments":["paper"]},{"Key":"scientific paper","Fragments":["has"]},{"Key":"paper has","Fragments":["an"]},{"Key":"has an","Fragments":["acknowledgements","idea","is_uppercase"]},{"Key":"an acknowledgements","Fragments":["section,"]},{"Key":"acknowledgements section,","Fragments":["why"]},{"Key":"section, why","Fragments":["not"]},{"Key":"not code?","Fragments":["Rust"]},{"Key":"code? Rust","Fragments":["has"]},{"Key":"a steep","Fragments":["learning"]},{"Key":"steep learning","Fragments":["curve"]},{"Key":"learning curve","Fragments":["and"]},{"Key":"curve and","Fragments":["many"]},{"Key":"and many","Fragments":["new"]},{"Key":"many new","Fragments":["concepts"]},{"Key":"new concepts","Fragments":["for"]},{"Key":"concepts for","Fragments":["a"]},{"Key":"a C++","Fragments":["programmer,"]},{"Key":"C++ programmer,","Fragments":["so"]},{"Key":"programmer, so","Fragments":["the"]},{"Key":"the IRC","Fragments":["channel"]},{"Key":"IRC channel","Fragments":["is"]},{"Key":"channel is","Fragments":["even"]},{"Key":"is even","Fragments":["more"]},{"Key":"even more","Fragments":["useful","and"]},{"Key":"more useful","Fragments":["than"]},{"Key":"useful than","Fragments":["usual"]},{"Key":"than usual","Fragments":["for"]},{"Key":"usual for","Fragments":["a"]},{"Key":"this strikes","Fragments":["a"]},{"Key":"strikes a","Fragments":["good"]},{"Key":"good balance","Fragments":["between"]},{"Key":"balance between","Fragments":["readability"]},{"Key":"between readability","Fragments":["and"]},{"Key":"readability and","Fragments":["composability,"]},{"Key":"and composability,","Fragments":["if"]},{"Key":"composability, if","Fragments":["that"]},{"Key":"makes any","Fragments":["sense."]},{"Key":"any sense.","Fragments":["One"]},{"Key":"sense. One","Fragments":["static"]},{"Key":"One static","Fragments":["string"]},{"Key":"one template","Fragments":["with"]},{"Key":"template with","Fragments":["self-documenting"]},{"Key":"with self-documenting","Fragments":["variable"]},{"Key":"self-documenting variable","Fragments":["names..."]},{"Key":"problem I","Fragments":["had"]},{"Key":"solve at","Fragments":["work"]},{"Key":"at work","Fragments":["a"]},{"Key":"work a","Fragments":["month"]},{"Key":"a month","Fragments":["or"]},{"Key":"month or","Fragments":["two"]},{"Key":"or two","Fragments":["ago"]},{"Key":"two ago","Fragments":["and,"]},{"Key":"ago and,","Fragments":["frankly,"]},{"Key":"and, frankly,","Fragments":["I'm"]},{"Key":"frankly, I'm","Fragments":["not"]},{"Key":"convinced there","Fragments":["is"]},{"Key":"is any","Fragments":["maintainable,","difference"]},{"Key":"any maintainable,","Fragments":["general"]},{"Key":"maintainable, general","Fragments":["solution"]},{"Key":"general solution","Fragments":["for"]},{"Key":"doesn't involve","Fragments":["inordinate"]},{"Key":"involve inordinate","Fragments":["levels"]},{"Key":"inordinate levels","Fragments":["of"]},{"Key":"levels of","Fragments":["overhead."]},{"Key":"of overhead.","Fragments":["\u003e.\u003c"]},{"Key":"Now a","Fragments":["more"]},{"Key":"functional version","Fragments":["from"]},{"Key":"version from","Fragments":["akhiros"]},{"Key":"from akhiros","Fragments":["that"]},{"Key":"akhiros that","Fragments":["I"]},{"Key":"I wouldn't","Fragments":["have","accept"]},{"Key":"have known","Fragments":["enough"]},{"Key":"known enough","Fragments":["to"]},{"Key":"enough to","Fragments":["write."]},{"Key":"to write.","Fragments":["It's"]},{"Key":"write. It's","Fragments":["prettier"]},{"Key":"It's prettier","Fragments":["than"]},{"Key":"prettier than","Fragments":["mine,"]},{"Key":"than mine,","Fragments":["though"]},{"Key":"mine, though","Fragments":["I"]},{"Key":"think less","Fragments":["readable"]},{"Key":"readable (a","Fragments":["standard"]},{"Key":"(a standard","Fragments":["problem"]},{"Key":"standard problem","Fragments":["with"]},{"Key":"problem with","Fragments":["functional"]},{"Key":"functional code","Fragments":["IMO)."]},{"Key":"code IMO).","Fragments":["Very"]},{"Key":"IMO). Very","Fragments":["nice"]},{"Key":"Very nice","Fragments":["that"]},{"Key":"nice that","Fragments":["it"]},{"Key":"be done,","Fragments":["though."]},{"Key":"like ```*m.entry(key).insert_or(default_value)","Fragments":["+="]},{"Key":"```*m.entry(key).insert_or(default_value) +=","Fragments":["1```"]},{"Key":"+= 1```","Fragments":["to"]},{"Key":"1``` to","Fragments":["efficiently"]},{"Key":"to efficiently","Fragments":["increment"]},{"Key":"efficiently increment","Fragments":["a"]},{"Key":"increment a","Fragments":["counter"]},{"Key":"a counter","Fragments":["in","for"]},{"Key":"I'd also","Fragments":["use"]},{"Key":"use ```filter```","Fragments":["and"]},{"Key":"```filter``` and","Fragments":["```map```","```count```"]},{"Key":"and ```map```","Fragments":["in"]},{"Key":"```map``` in","Fragments":["lines"]},{"Key":"lines 7","Fragments":["-","-"]},{"Key":"7 -","Fragments":["11.","11."]},{"Key":"if true","Fragments":["{"]},{"Key":" @bennie,","Fragments":["I"]},{"Key":"@bennie, I","Fragments":["think"]},{"Key":"explicit on","Fragments":["this:"]},{"Key":"`if cond","Fragments":["{true}","{true}","{","{true}"]},{"Key":"cond {true}","Fragments":["else","else","else"]},{"Key":"{true} else","Fragments":["{false}`","{false}`","{false}`"]},{"Key":"else {false}`","Fragments":["is","is","inside","can"]},{"Key":"{false}` is","Fragments":["the","the"]},{"Key":" Fair","Fragments":["enough,"]},{"Key":"Fair enough,","Fragments":["guess"]},{"Key":"enough, guess","Fragments":["this"]},{"Key":"this isn't","Fragments":["really"]},{"Key":"isn't really","Fragments":["much"]},{"Key":"really much","Fragments":["more"]},{"Key":"the one-liner","Fragments":["version"]},{"Key":"one-liner version","Fragments":[";)"]},{"Key":"thing new","Fragments":["here"]},{"Key":"new here","Fragments":["is"]},{"Key":"is ranges","Fragments":["and"]},{"Key":"ranges and","Fragments":["the","sticking"]},{"Key":"that they","Fragments":["exclude","are"]},{"Key":"they exclude","Fragments":["their"]},{"Key":"exclude their","Fragments":["right"]},{"Key":"their right","Fragments":["endpoint"]},{"Key":"right endpoint","Fragments":["in"]},{"Key":"endpoint in","Fragments":["typical"]},{"Key":"in typical","Fragments":["C/C++"]},{"Key":"typical C/C++","Fragments":["tradition."]},{"Key":" Heh.","Fragments":["I"]},{"Key":"Heh. I","Fragments":["forgot"]},{"Key":"I forgot","Fragments":["to","about","to"]},{"Key":"things publicly","Fragments":["accessible."]},{"Key":"just stubs,","Fragments":["but"]},{"Key":"stubs, but","Fragments":["it"]},{"Key":"it compiles","Fragments":["and"]},{"Key":"compiles and","Fragments":["passes","runs"]},{"Key":"and passes","Fragments":["the"]},{"Key":" New","Fragments":["things:","things:"]},{"Key":"New things:","Fragments":["the"]},{"Key":"things: the","Fragments":["derive"]},{"Key":"the derive","Fragments":["attribute."]},{"Key":"The C","Fragments":["programmer"]},{"Key":"C programmer","Fragments":["in"]},{"Key":"programmer in","Fragments":["me"]},{"Key":"in me","Fragments":["is"]},{"Key":"me is","Fragments":["happy","that"]},{"Key":"is happy","Fragments":["to"]},{"Key":"happy to","Fragments":["exercise"]},{"Key":"to exercise","Fragments":["basic"]},{"Key":"exercise basic","Fragments":["bitwise"]},{"Key":"basic bitwise","Fragments":["operations"]},{"Key":"bitwise operations","Fragments":["in"]},{"Key":"operations in","Fragments":["Rust."]},{"Key":"Rust. :-)","Fragments":["This"]},{"Key":":-) This","Fragments":["version"]},{"Key":"version passes","Fragments":["all"]},{"Key":"passes all","Fragments":["the"]},{"Key":"the is_allergic_to","Fragments":["tests."]},{"Key":"* The","Fragments":["cast","necessity"]},{"Key":"The cast","Fragments":["(\"as\")"]},{"Key":"cast (\"as\")","Fragments":["syntax."]},{"Key":"The necessity","Fragments":["of"]},{"Key":"necessity of","Fragments":["clone()"]},{"Key":"of clone()","Fragments":["in","first."]},{"Key":"clone() in","Fragments":["is_allergic_to"]},{"Key":"is_allergic_to (I","Fragments":["don't"]},{"Key":"why when","Fragments":["we're"]},{"Key":"when we're","Fragments":["only"]},{"Key":"we're only","Fragments":["using"]},{"Key":"only using","Fragments":["the"]},{"Key":"comments like","Fragments":["```//"]},{"Key":"like ```//","Fragments":["handle"]},{"Key":"```// handle","Fragments":["DROP"]},{"Key":"handle DROP","Fragments":["word```"]},{"Key":"DROP word```","Fragments":["are"]},{"Key":"word``` are","Fragments":["superfluous."]},{"Key":"could remove","Fragments":["some"]},{"Key":"some duplication","Fragments":["in",",","that"]},{"Key":"binary operators","Fragments":["by"]},{"Key":"operators by","Fragments":["defining"]},{"Key":"by defining","Fragments":["a"]},{"Key":"defining a","Fragments":["binary_op","separate"]},{"Key":"a binary_op","Fragments":["function,"]},{"Key":"binary_op function,","Fragments":["which"]},{"Key":"function, which","Fragments":["pops"]},{"Key":"which pops","Fragments":["the"]},{"Key":"pops the","Fragments":["top"]},{"Key":"top two","Fragments":["off"]},{"Key":"two off","Fragments":["the"]},{"Key":"stack and","Fragments":["executes"]},{"Key":"and executes","Fragments":["an"]},{"Key":"executes an","Fragments":["input"]},{"Key":"an input","Fragments":["function"]},{"Key":"input function","Fragments":["argument."]},{"Key":" ```definition.len()","Fragments":["=="]},{"Key":"```definition.len() ==","Fragments":["0```"]},{"Key":"== 0```","Fragments":["is"]},{"Key":"0``` is","Fragments":["```definition.is_empty()```."]},{"Key":"range to","Fragments":["be"]},{"Key":"be 1","Fragments":["to"]},{"Key":"1 to","Fragments":["the"]},{"Key":"the passed","Fragments":["number,"]},{"Key":"passed number,","Fragments":["you"]},{"Key":"number, you","Fragments":["can"]},{"Key":"can `take`","Fragments":["the"]},{"Key":"`take` the","Fragments":["first"]},{"Key":"first `n`","Fragments":["from"]},{"Key":"`n` from","Fragments":["the"]},{"Key":"entire set","Fragments":["of"]},{"Key":"numbers, it","Fragments":["also"]},{"Key":"it also","Fragments":["means"]},{"Key":"also means","Fragments":["you"]},{"Key":"means you","Fragments":["don't","don't","can't"]},{"Key":"the `1..n+1`","Fragments":["to"]},{"Key":"`1..n+1` to","Fragments":["get"]},{"Key":"the inclusive","Fragments":["range."]},{"Key":"calling to","Fragments":["lowercase","lowercase"]},{"Key":"on s","Fragments":["more"]},{"Key":"s more","Fragments":["often"]},{"Key":"often than","Fragments":["is"]},{"Key":"pretty clear.","Fragments":["As"]},{"Key":"clear. As","Fragments":["@donny"]},{"Key":"As @donny","Fragments":["said"]},{"Key":"@donny said","Fragments":["you"]},{"Key":"said you","Fragments":["could"]},{"Key":"have saved","Fragments":["off"]},{"Key":"saved off","Fragments":["the"]},{"Key":"lowercase version","Fragments":["of"]},{"Key":"each and","Fragments":["saved"]},{"Key":"and saved","Fragments":["a","myself"]},{"Key":"saved a","Fragments":["bit"]},{"Key":" Other","Fragments":["than","solutions","considered"]},{"Key":"Other than","Fragments":["that"]},{"Key":"than that","Fragments":["my"]},{"Key":"my only","Fragments":["nit"]},{"Key":"only nit","Fragments":["would"]},{"Key":"nit would","Fragments":["be"]},{"Key":"the single","Fragments":["letter/two"]},{"Key":"single letter/two","Fragments":["letter"]},{"Key":"letter/two letter","Fragments":["variable"]},{"Key":"letter variable","Fragments":["names"]},{"Key":"variable names","Fragments":["are","to"]},{"Key":"names are","Fragments":["bit"]},{"Key":"are bit","Fragments":["harder"]},{"Key":"bit harder","Fragments":["to","than"]},{"Key":"to follow","Fragments":["than","I"]},{"Key":"follow than","Fragments":["if"]},{"Key":"than if","Fragments":["you"]},{"Key":"used more","Fragments":["verbose"]},{"Key":"more verbose","Fragments":["names,"]},{"Key":"verbose names,","Fragments":["but"]},{"Key":"but that's","Fragments":["more","not","a"]},{"Key":"that's more","Fragments":["of"]},{"Key":"more of","Fragments":["a","your","your"]},{"Key":"a style","Fragments":["preference."]},{"Key":"this might","Fragments":["be","pass"]},{"Key":"readable and","Fragments":["cleanlooking","clean."]},{"Key":"and cleanlooking","Fragments":["if"]},{"Key":"cleanlooking if","Fragments":["you"]},{"Key":"it's simpler","Fragments":["done"]},{"Key":"simpler done","Fragments":["without"]},{"Key":"done without","Fragments":["regexs.","it."]},{"Key":"got to","Fragments":["ask"]},{"Key":"ask the","Fragments":["people"]},{"Key":"the people","Fragments":["in"]},{"Key":"people in","Fragments":["`#rust`"]},{"Key":"in `#rust`","Fragments":["about"]},{"Key":"`#rust` about","Fragments":["why"]},{"Key":"about why","Fragments":["my"]},{"Key":"why my","Fragments":["`filter`"]},{"Key":"my `filter`","Fragments":["inside"]},{"Key":"`filter` inside","Fragments":["`flat_map`"]},{"Key":"inside `flat_map`","Fragments":["wasn't"]},{"Key":"`flat_map` wasn't","Fragments":["working"]},{"Key":"wasn't working","Fragments":["and"]},{"Key":"working and","Fragments":["the"]},{"Key":"the short","Fragments":["answer"]},{"Key":"short answer","Fragments":["is"]},{"Key":"is \"It's","Fragments":["because"]},{"Key":"\"It's because","Fragments":["your"]},{"Key":"because your","Fragments":["closure"]},{"Key":"your closure","Fragments":["doesn't"]},{"Key":"closure doesn't","Fragments":["take"]},{"Key":"doesn't take","Fragments":["ownership"]},{"Key":"take ownership","Fragments":["of"]},{"Key":"ownership of","Fragments":["its"]},{"Key":"of its","Fragments":["vars."]},{"Key":"its vars.","Fragments":["It"]},{"Key":"vars. It","Fragments":["just"]},{"Key":"It just","Fragments":["takes"]},{"Key":"just takes","Fragments":["references"]},{"Key":"takes references","Fragments":["to"]},{"Key":"to things","Fragments":["on","that"]},{"Key":"things on","Fragments":["the"]},{"Key":"stack. Use","Fragments":["a"]},{"Key":"Use a","Fragments":["`move`"]},{"Key":"a `move`","Fragments":["closure"]},{"Key":"`move` closure","Fragments":["to","either,"]},{"Key":"fix this\".","Fragments":["If"]},{"Key":"this\". If","Fragments":["only"]},{"Key":"If only","Fragments":["I"]},{"Key":"only I","Fragments":["had"]},{"Key":"had thought","Fragments":["to"]},{"Key":"thought to","Fragments":["look"]},{"Key":"at https://doc.rust-lang.org/book/closures.html","Fragments":["I"]},{"Key":"https://doc.rust-lang.org/book/closures.html I","Fragments":["would"]},{"Key":"have figured","Fragments":["this"]},{"Key":"figured this","Fragments":["out"]},{"Key":"this out","Fragments":["and"]},{"Key":"saved myself","Fragments":["the"]},{"Key":"myself the","Fragments":["headache"]},{"Key":"the headache","Fragments":["of"]},{"Key":"headache of","Fragments":["figuring"]},{"Key":"of figuring","Fragments":["out"]},{"Key":"out \"what,","Fragments":["why"]},{"Key":"\"what, why","Fragments":["doesn't"]},{"Key":"why doesn't","Fragments":["it"]},{"Key":"doesn't it","Fragments":["live"]},{"Key":"it live","Fragments":["long"]},{"Key":"live long","Fragments":["enough?!?!","enough"]},{"Key":"long enough?!?!","Fragments":["I'm"]},{"Key":"enough?!?! I'm","Fragments":["making"]},{"Key":"I'm making","Fragments":["a"]},{"Key":" Turns","Fragments":["out"]},{"Key":"Turns out","Fragments":["though"]},{"Key":"out though","Fragments":["that"]},{"Key":"though that","Fragments":["I","needs"]},{"Key":"just restructured","Fragments":["things"]},{"Key":"restructured things","Fragments":["a"]},{"Key":"things a","Fragments":["bit","bit"]},{"Key":"bit so","Fragments":["that"]},{"Key":"the `move`","Fragments":["closure"]},{"Key":"closure either,","Fragments":["but"]},{"Key":"either, but","Fragments":["I"]},{"Key":"a much","Fragments":["higher"]},{"Key":"much higher","Fragments":["chance"]},{"Key":"higher chance","Fragments":["of"]},{"Key":"chance of","Fragments":["remembering","a"]},{"Key":"of remembering","Fragments":["this"]},{"Key":"remembering this","Fragments":["fact"]},{"Key":"this fact","Fragments":["about"]},{"Key":"fact about","Fragments":["closures"]},{"Key":"about closures","Fragments":["when"]},{"Key":"closures when","Fragments":["writing"]},{"Key":"when writing","Fragments":["future"]},{"Key":"writing future","Fragments":["Rust"]},{"Key":"future Rust","Fragments":["code,"]},{"Key":"Rust code,","Fragments":["now"]},{"Key":"code, now","Fragments":["that"]},{"Key":"now that","Fragments":["someone","I"]},{"Key":"someone explained","Fragments":["it"]},{"Key":"explained it","Fragments":["to"]},{"Key":" By","Fragments":["the"]},{"Key":"By the","Fragments":["way,"]},{"Key":"the way,","Fragments":["`orthogonal_to`"]},{"Key":"way, `orthogonal_to`","Fragments":["has"]},{"Key":"`orthogonal_to` has","Fragments":["been"]},{"Key":"been made","Fragments":["obsolete","clear"]},{"Key":"made obsolete","Fragments":["by"]},{"Key":"obsolete by","Fragments":["the"]},{"Key":"the `upper_left_of`","Fragments":["check,"]},{"Key":"`upper_left_of` check,","Fragments":["so"]},{"Key":"check, so","Fragments":["I"]},{"Key":"removed `orthogonal_to`","Fragments":["now."]},{"Key":" How's","Fragments":["this?"]},{"Key":"How's this?","Fragments":["Definitely"]},{"Key":"this? Definitely","Fragments":["shorter"]},{"Key":"Definitely shorter","Fragments":["but"]},{"Key":"sure it's","Fragments":["worth"]},{"Key":"it's worth","Fragments":["the"]},{"Key":"worth the","Fragments":["reduction"]},{"Key":"the reduction","Fragments":["in"]},{"Key":"reduction in","Fragments":["readability."]},{"Key":"An alternative","Fragments":["way"]},{"Key":"alternative way","Fragments":["to"]},{"Key":"do it,","Fragments":["which"]},{"Key":"it, which","Fragments":["I've"]},{"Key":"which I've","Fragments":["seen"]},{"Key":"seen in","Fragments":["another"]},{"Key":"another submission,","Fragments":["was"]},{"Key":"submission, was","Fragments":["to"]},{"Key":"to give","Fragments":["each"]},{"Key":"give each","Fragments":["expression"]},{"Key":"each expression","Fragments":["its"]},{"Key":"expression its","Fragments":["own"]},{"Key":"then combine","Fragments":["the"]},{"Key":"functions together.","Fragments":["With"]},{"Key":"together. With","Fragments":["the"]},{"Key":"right function","Fragments":["names"]},{"Key":"function names","Fragments":["it"]},{"Key":"names it","Fragments":["made"]},{"Key":"it made","Fragments":["the","sense"]},{"Key":"the function,","Fragments":["and","so"]},{"Key":"function, and","Fragments":["what","then"]},{"Key":"it did,","Fragments":["very"]},{"Key":"did, very","Fragments":["obvious"]},{"Key":"very obvious","Fragments":["and"]},{"Key":"obvious and","Fragments":["clear."]},{"Key":"For every","Fragments":["pair","pair","pair"]},{"Key":"every pair","Fragments":["of","of","of"]},{"Key":"pair of","Fragments":["top-left/bottom-right","corners","applicative","corners,","corners,"]},{"Key":"of top-left/bottom-right","Fragments":["corners,"]},{"Key":"top-left/bottom-right corners,","Fragments":["check"]},{"Key":"corners, check","Fragments":["if","if","if"]},{"Key":" (We","Fragments":["exclude"]},{"Key":"(We exclude","Fragments":["top-right/bottom-left"]},{"Key":"exclude top-right/bottom-left","Fragments":["corners"]},{"Key":"top-right/bottom-left corners","Fragments":["so"]},{"Key":"corners so","Fragments":["as"]},{"Key":"so as","Fragments":["not"]},{"Key":"as not","Fragments":["to"]},{"Key":"to double-count","Fragments":["rectangles,"]},{"Key":"double-count rectangles,","Fragments":["this"]},{"Key":"rectangles, this","Fragments":["is"]},{"Key":"the improvement","Fragments":["from"]},{"Key":"improvement from","Fragments":["version"]},{"Key":"from version","Fragments":["2)"]},{"Key":"still some","Fragments":["possible"]},{"Key":"some possible","Fragments":["optimizations"]},{"Key":"possible optimizations","Fragments":["to"]},{"Key":"optimizations to","Fragments":["be"]},{"Key":"be had","Fragments":["by"]},{"Key":"had by","Fragments":["caching"]},{"Key":"by caching","Fragments":["the","the"]},{"Key":"caching the","Fragments":["connectivity","results"]},{"Key":"the connectivity","Fragments":["results:"]},{"Key":"connectivity results:","Fragments":["for"]},{"Key":"results: for","Fragments":["example"]},{"Key":"for example","Fragments":["in","(you"]},{"Key":"example in","Fragments":["this"]},{"Key":" |","Fragments":["|","|"]},{"Key":"| |","Fragments":["|"]},{"Key":"For each","Fragments":["pair"]},{"Key":"of corners","Fragments":["in"]},{"Key":"corners in","Fragments":["the"]},{"Key":"same column,","Fragments":["the"]},{"Key":"column, the","Fragments":["code"]},{"Key":"as written","Fragments":["calculates"]},{"Key":"written calculates","Fragments":["whether"]},{"Key":"calculates whether","Fragments":["those"]},{"Key":"whether those","Fragments":["two"]},{"Key":"those two","Fragments":["corners","subtractions,"]},{"Key":"two corners","Fragments":["are"]},{"Key":"corners are","Fragments":["connected","actually"]},{"Key":"are connected","Fragments":["twice.","(lines"]},{"Key":"connected twice.","Fragments":["This"]},{"Key":"twice. This","Fragments":["is","is"]},{"Key":"because each","Fragments":["vertical"]},{"Key":"each vertical","Fragments":["line"]},{"Key":"vertical line","Fragments":["segment"]},{"Key":"line segment","Fragments":["participates"]},{"Key":"segment participates","Fragments":["in"]},{"Key":"participates in","Fragments":["two"]},{"Key":"The nesting","Fragments":["of"]},{"Key":"nesting of","Fragments":["conditionals"]},{"Key":"of conditionals","Fragments":["here"]},{"Key":"conditionals here","Fragments":["is"]},{"Key":"bit overcomplicated.","Fragments":["You"]},{"Key":"overcomplicated. You","Fragments":["could"]},{"Key":"could avoid","Fragments":["it"]},{"Key":"avoid it","Fragments":["by"]},{"Key":"it by","Fragments":["looking"]},{"Key":"by looking","Fragments":["at"]},{"Key":"the factors","Fragments":["in"]},{"Key":"factors in","Fragments":["a"]},{"Key":" realised","Fragments":["something"]},{"Key":"realised something","Fragments":["about"]},{"Key":"something about","Fragments":["operator"]},{"Key":"about operator","Fragments":["precedence..."]},{"Key":"a graph","Fragments":["here."]},{"Key":"from six","Fragments":["weeks"]},{"Key":"six weeks","Fragments":["ago,"]},{"Key":"weeks ago,","Fragments":["but"]},{"Key":"ago, but","Fragments":["it"]},{"Key":"like `chain(\u0026vec![(1,","Fragments":["2),"]},{"Key":"(2, 3),","Fragments":["(3,"]},{"Key":"3), (3,","Fragments":["1),"]},{"Key":"(3, 1),","Fragments":["(2,"]},{"Key":"(2, 4),","Fragments":["(2,"]},{"Key":"4), (2,","Fragments":["4)])`"]},{"Key":"(2, 4)])`","Fragments":["should"]},{"Key":"4)])` should","Fragments":["return"]},{"Key":"return `Some`","Fragments":["but"]},{"Key":"`Some` but","Fragments":["your"]},{"Key":"but your","Fragments":["code","code"]},{"Key":"code has","Fragments":["it"]},{"Key":"has it","Fragments":["return"]},{"Key":"it return","Fragments":["`None`!"]},{"Key":"Yes, there's","Fragments":["a"]},{"Key":"a bug","Fragments":["in","or"]},{"Key":"bug in","Fragments":["there,"]},{"Key":"in there,","Fragments":["which"]},{"Key":"there, which","Fragments":["will"]},{"Key":"be triggered","Fragments":["if"]},{"Key":"triggered if","Fragments":["there"]},{"Key":"than 1","Fragments":["pair"]},{"Key":"1 pair","Fragments":["or"]},{"Key":"pair or","Fragments":["numbers"]},{"Key":"or numbers","Fragments":["-"]},{"Key":"numbers -","Fragments":["your"]},{"Key":"- your","Fragments":["example","first"]},{"Key":"your example","Fragments":["has"]},{"Key":"example has","Fragments":["four"]},{"Key":"has four","Fragments":["2's."]},{"Key":"four 2's.","Fragments":["Well"]},{"Key":"2's. Well","Fragments":["spotted."]},{"Key":"should submit","Fragments":["a"]},{"Key":"submit a","Fragments":["PR"]},{"Key":"a PR","Fragments":["-"]},{"Key":"PR -","Fragments":["all"]},{"Key":"- all","Fragments":["the"]},{"Key":"tests passed","Fragments":["for"]},{"Key":"passed for","Fragments":["this"]},{"Key":"this -","Fragments":["they're"]},{"Key":"- they're","Fragments":["not"]},{"Key":"they're not","Fragments":["very"]},{"Key":"not very","Fragments":["comprehensive."]},{"Key":"The dominoes","Fragments":["are"]},{"Key":"are put","Fragments":["into"]},{"Key":"put into","Fragments":["a"]},{"Key":"a Graph","Fragments":["structure,"]},{"Key":"Graph structure,","Fragments":["the"]},{"Key":"structure, the","Fragments":["vertices"]},{"Key":"the vertices","Fragments":["of"]},{"Key":"vertices of","Fragments":["which"]},{"Key":"numbers 0","Fragments":["(blank)"]},{"Key":"0 (blank)","Fragments":["to"]},{"Key":"(blank) to","Fragments":["6,"]},{"Key":"to 6,","Fragments":["and"]},{"Key":"6, and","Fragments":["the"]},{"Key":"the edges","Fragments":["are"]},{"Key":"edges are","Fragments":["the"]},{"Key":"the dominoes","Fragments":["themselves."]},{"Key":"A chain","Fragments":["can"]},{"Key":"can only","Fragments":["exist"]},{"Key":"only exist","Fragments":["if"]},{"Key":"exist if","Fragments":["there's"]},{"Key":"there's an","Fragments":["even"]},{"Key":"an even","Fragments":["number"]},{"Key":"even number","Fragments":["of"]},{"Key":"of edges","Fragments":["from"]},{"Key":"edges from","Fragments":["each"]},{"Key":"each vertex","Fragments":["(proved"]},{"Key":"vertex (proved","Fragments":["by"]},{"Key":"(proved by","Fragments":["Euler"]},{"Key":"by Euler","Fragments":["when"]},{"Key":"Euler when","Fragments":["solving"]},{"Key":"when solving","Fragments":["the"]},{"Key":"the Koenigsberg","Fragments":["bridges"]},{"Key":"Koenigsberg bridges","Fragments":["problem)."]},{"Key":"bridges problem).","Fragments":["It's"]},{"Key":"problem). It's","Fragments":["kinda"]},{"Key":"It's kinda","Fragments":["common"]},{"Key":"kinda common","Fragments":["sense"]},{"Key":"common sense","Fragments":["though."]},{"Key":"sense though.","Fragments":["has_circuit"]},{"Key":"though. has_circuit","Fragments":["checks"]},{"Key":"has_circuit checks","Fragments":["this"]},{"Key":"checks this","Fragments":["providing"]},{"Key":"this providing","Fragments":["a"]},{"Key":"providing a","Fragments":["short"]},{"Key":"a short","Fragments":["cut"]},{"Key":"short cut","Fragments":["check"]},{"Key":"cut check","Fragments":["for"]},{"Key":"for non-existent","Fragments":["chains."]},{"Key":"This I","Fragments":["found"]},{"Key":"found quite","Fragments":["a"]},{"Key":"the exercises","Fragments":["so"]},{"Key":"exercises so","Fragments":["far."]},{"Key":"far. Managed","Fragments":["to"]},{"Key":"Managed to","Fragments":["get"]},{"Key":"by with","Fragments":["only"]},{"Key":"with only","Fragments":["println!"]},{"Key":"only println!","Fragments":["debugging"]},{"Key":"println! debugging","Fragments":["(coz"]},{"Key":"debugging (coz","Fragments":["that's"]},{"Key":"(coz that's","Fragments":["all"]},{"Key":"that's all","Fragments":["I"]},{"Key":"all I","Fragments":["know"]},{"Key":"how do","Fragments":["in"]},{"Key":"Nice! Thanks","Fragments":["for"]},{"Key":"for letting","Fragments":["me"]},{"Key":"letting me","Fragments":["know"]},{"Key":"has closures.","Fragments":[":)"]},{"Key":"Very clean","Fragments":["use"]},{"Key":"clean use","Fragments":["of","of"]},{"Key":"of anonymous","Fragments":["functions"]},{"Key":"anonymous functions","Fragments":["there"]},{"Key":"`;` (keep","Fragments":["both"]},{"Key":"(keep both","Fragments":["or"]},{"Key":" Style","Fragments":["suggestion:"]},{"Key":"Style suggestion:","Fragments":["leave"]},{"Key":"suggestion: leave","Fragments":["a"]},{"Key":"leave a","Fragments":["space","comment","comment"]},{"Key":"a space","Fragments":["around"]},{"Key":"space around","Fragments":["the"]},{"Key":"the curly","Fragments":["braces."]},{"Key":"curly braces.","Fragments":["E.g."]},{"Key":"else if","Fragments":["year","year"]},{"Key":"I'd include","Fragments":["the"]},{"Key":"include the","Fragments":["final"]},{"Key":"final `false`","Fragments":["in"]},{"Key":"above `if-else`","Fragments":["for"]},{"Key":"`if-else` for","Fragments":["two"]},{"Key":"for two","Fragments":["reasons."]},{"Key":"two reasons.","Fragments":["First,"]},{"Key":"reasons. First,","Fragments":["it's"]},{"Key":"First, it's","Fragments":["already"]},{"Key":"it's already","Fragments":["functioning"]},{"Key":"already functioning","Fragments":["as"]},{"Key":"functioning as","Fragments":["the"]},{"Key":"the else","Fragments":["branch"]},{"Key":"else branch","Fragments":["of"]},{"Key":"branch of","Fragments":["the"]},{"Key":"the conditional,","Fragments":["so"]},{"Key":"conditional, so","Fragments":["making"]},{"Key":"so making","Fragments":["it"]},{"Key":"making it","Fragments":["explicit"]},{"Key":"it explicit","Fragments":["would"]},{"Key":"explicit would","Fragments":["improve"]},{"Key":"would improve","Fragments":["readability."]},{"Key":"improve readability.","Fragments":["Second,"]},{"Key":"readability. Second,","Fragments":["it"]},{"Key":"Second, it","Fragments":["would"]},{"Key":"allow you","Fragments":["to"]},{"Key":"the conditional","Fragments":["as"]},{"Key":"conditional as","Fragments":["an"]},{"Key":"an expression,","Fragments":["making"]},{"Key":"expression, making","Fragments":["things"]},{"Key":"making things","Fragments":["a"]},{"Key":"bit cleaner.","Fragments":["E.g."]},{"Key":" Great","Fragments":["@deion!"]},{"Key":"Great @deion!","Fragments":["I'll"]},{"Key":"@deion! I'll","Fragments":["take"]},{"Key":"I'll take","Fragments":["that"]},{"Key":"take that","Fragments":["into"]},{"Key":"that into","Fragments":["account"]},{"Key":"I'm mostly","Fragments":["unsure"]},{"Key":"mostly unsure","Fragments":["about"]},{"Key":"unsure about","Fragments":["the"]},{"Key":"for `year`.","Fragments":["Am"]},{"Key":"`year`. Am","Fragments":["I"]},{"Key":"Am I","Fragments":["overdoing"]},{"Key":"I overdoing","Fragments":["it"]},{"Key":"overdoing it","Fragments":["with"]},{"Key":"with `-\u003e","Fragments":["bool`?"]},{"Key":"I believe","Fragments":["that","that","the"]},{"Key":"believe that","Fragments":["`.map(|\u0026x|","`canonical`"]},{"Key":"that `.map(|\u0026x|","Fragments":["x)`"]},{"Key":"x)` can","Fragments":["alternately"]},{"Key":"`.cloned()` if","Fragments":["I"]},{"Key":"I read","Fragments":["the","has"]},{"Key":"the [iterator","Fragments":["docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)"]},{"Key":"docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned) correctly","Fragments":["(if"]},{"Key":"correctly (if","Fragments":["`.map(|\u0026x|"]},{"Key":"(if `.map(|\u0026x|","Fragments":["x)`"]},{"Key":"x)` is","Fragments":["the"]},{"Key":"as `.map(|x|","Fragments":["*x)`)."]},{"Key":"I'm undecided","Fragments":["about"]},{"Key":"undecided about","Fragments":["the"]},{"Key":"inner function","Fragments":["(as","is","as"]},{"Key":"function (as","Fragments":["opposed"]},{"Key":"(as opposed","Fragments":["to"]},{"Key":"opposed to","Fragments":["placing"]},{"Key":"to placing","Fragments":["it"]},{"Key":"placing it","Fragments":["on"]},{"Key":"top level)","Fragments":["and"]},{"Key":"level) and","Fragments":["would"]},{"Key":"to hear","Fragments":["your"]},{"Key":"hear your","Fragments":["thoughts"]},{"Key":"your thoughts","Fragments":["on"]},{"Key":"thoughts on","Fragments":["it.","this"]},{"Key":"As I","Fragments":["see"]},{"Key":"see it,","Fragments":["the"]},{"Key":"it, the","Fragments":["advantage"]},{"Key":"the advantage","Fragments":["is"]},{"Key":"advantage is","Fragments":["it"]},{"Key":"that `canonical`","Fragments":["is","could"]},{"Key":"`canonical` is","Fragments":["only"]},{"Key":"only ever","Fragments":["meant"]},{"Key":"ever meant","Fragments":["to"]},{"Key":"used by","Fragments":["`anagrams_for`.","a"]},{"Key":"by `anagrams_for`.","Fragments":["On"]},{"Key":"`anagrams_for`. On","Fragments":["the"]},{"Key":"other hand,","Fragments":["that"]},{"Key":"hand, that","Fragments":["could"]},{"Key":"made clear","Fragments":["by"]},{"Key":"clear by","Fragments":["the"]},{"Key":"not `pub`","Fragments":["as"]},{"Key":"`pub` as","Fragments":["well."]},{"Key":"well. Since","Fragments":["there's"]},{"Key":"Since there's","Fragments":["only"]},{"Key":"only one","Fragments":["function","function","case"]},{"Key":"one function","Fragments":["in","with"]},{"Key":"this module","Fragments":["there"]},{"Key":"module there","Fragments":["was"]},{"Key":"was no","Fragments":["risk","point"]},{"Key":"no risk","Fragments":["for"]},{"Key":"risk for","Fragments":["confusion"]},{"Key":"for confusion","Fragments":["by"]},{"Key":"confusion by","Fragments":["putting"]},{"Key":"by putting","Fragments":["it"]},{"Key":"putting it","Fragments":["on"]},{"Key":"That in","Fragments":["turn"]},{"Key":"in turn","Fragments":["implies"]},{"Key":"turn implies","Fragments":["using"]},{"Key":"implies using","Fragments":["an"]},{"Key":"an inner","Fragments":["function","function","module."]},{"Key":"is useful","Fragments":["when"]},{"Key":"useful when","Fragments":["there"]},{"Key":"are many","Fragments":["functions"]},{"Key":"many functions","Fragments":["in"]},{"Key":"a module","Fragments":["and","'leap'"]},{"Key":"module and","Fragments":["one"]},{"Key":"one wants","Fragments":["to"]},{"Key":"wants to","Fragments":["express"]},{"Key":"express that","Fragments":["a"]},{"Key":"only used","Fragments":["by","twice."]},{"Key":"by a","Fragments":["single","sort,"]},{"Key":"single other","Fragments":["function."]},{"Key":" Whatever","Fragments":["the"]},{"Key":"Whatever the","Fragments":["result"]},{"Key":"above discussion,","Fragments":["I"]},{"Key":"discussion, I","Fragments":["believe"]},{"Key":"`canonical` could","Fragments":["just"]},{"Key":"the `Vec`","Fragments":["instead"]},{"Key":"`Vec` instead","Fragments":["of"]},{"Key":"the `String`.","Fragments":["I"]},{"Key":"`String`. I","Fragments":["don't"]},{"Key":"don't suppose","Fragments":["that"]},{"Key":"suppose that","Fragments":["matters","you"]},{"Key":"that matters","Fragments":["too"]},{"Key":"matters too","Fragments":["much"]},{"Key":"too much","Fragments":["though.","duplicated","and","time","bookkeeping"]},{"Key":" `.cloned()`","Fragments":["absolutely!"]},{"Key":" Returning","Fragments":["`Vec`"]},{"Key":"Returning `Vec`","Fragments":["you"]},{"Key":"`Vec` you","Fragments":["are"]},{"Key":"are also","Fragments":["correct!","a"]},{"Key":"also correct!","Fragments":["I"]},{"Key":"correct! I","Fragments":["did"]},{"Key":"it implemented","Fragments":["checking"]},{"Key":"implemented checking","Fragments":["for"]},{"Key":"for equality.","Fragments":["I"]},{"Key":"equality. I","Fragments":["was"]},{"Key":"As to","Fragments":["the"]},{"Key":"inner function,","Fragments":["you"]},{"Key":"you described","Fragments":["it"]},{"Key":"described it","Fragments":["perfectly."]},{"Key":"it perfectly.","Fragments":["I"]},{"Key":"perfectly. I","Fragments":["am"]},{"Key":"am used","Fragments":["to"]},{"Key":"to python","Fragments":["which"]},{"Key":"python which","Fragments":["does"]},{"Key":"which does","Fragments":["not"]},{"Key":"have `pub`","Fragments":["to"]},{"Key":"`pub` to","Fragments":["make"]},{"Key":"this clear.","Fragments":["I"]},{"Key":"clear. I","Fragments":["went"]},{"Key":"only place","Fragments":["it"]},{"Key":"place it","Fragments":["is","into"]},{"Key":"is (or","Fragments":["I"]},{"Key":"(or I","Fragments":["can"]},{"Key":"can imagine)","Fragments":["it"]},{"Key":"imagine) it","Fragments":["being"]},{"Key":"it being","Fragments":["used."]},{"Key":"being used.","Fragments":["If"]},{"Key":"used. If","Fragments":["as"]},{"Key":"If as","Fragments":["the"]},{"Key":"the library","Fragments":["grose"]},{"Key":"library grose","Fragments":["I"]},{"Key":"grose I","Fragments":["find"]},{"Key":"second use","Fragments":["case"]},{"Key":"use case","Fragments":["then"]},{"Key":"case then","Fragments":["I'd"]},{"Key":"then I'd","Fragments":["move"]},{"Key":"I'd move","Fragments":["it"]},{"Key":"move it","Fragments":["out."]},{"Key":"out. At","Fragments":["least"]},{"Key":"At least","Fragments":["that","without"]},{"Key":"least that","Fragments":["was"]},{"Key":"was what","Fragments":["I"]},{"Key":"A third","Fragments":["option"]},{"Key":"third option","Fragments":["is"]},{"Key":"option is","Fragments":["to"]},{"Key":"it into","Fragments":["to","one","`self.buffer`"]},{"Key":"into to","Fragments":["a"]},{"Key":"a private","Fragments":["trate"]},{"Key":"private trate","Fragments":["on"]},{"Key":"trate on","Fragments":["String."]},{"Key":"on String.","Fragments":["It"]},{"Key":"String. It","Fragments":["is"]},{"Key":"more set","Fragments":["up,"]},{"Key":"set up,","Fragments":["but"]},{"Key":"up, but","Fragments":["better","understanding"]},{"Key":"but better","Fragments":["ergonomics."]},{"Key":"better ergonomics.","Fragments":["I.E."]},{"Key":"ergonomics. I.E.","Fragments":["`x.canonical()`"]},{"Key":" OK,","Fragments":["so"]},{"Key":"OK, so","Fragments":["closure"]},{"Key":"so closure","Fragments":["body"]},{"Key":"closure body","Fragments":["delimination"]},{"Key":"body delimination","Fragments":["(`{}`)"]},{"Key":"delimination (`{}`)","Fragments":["is"]},{"Key":"(`{}`) is","Fragments":["[optional"]},{"Key":"is [optional","Fragments":["for"]},{"Key":"[optional for","Fragments":["a"]},{"Key":"single expression](http://rustbyexample.com/fn/closures.html).","Fragments":["Good"]},{"Key":"expression](http://rustbyexample.com/fn/closures.html). Good","Fragments":["to"]},{"Key":"Thanks, good","Fragments":["point"]},{"Key":"good point","Fragments":["about"]},{"Key":"point about","Fragments":["the"]},{"Key":"the ```to_string()```","Fragments":["which"]},{"Key":"```to_string()``` which","Fragments":["is"]},{"Key":"In line","Fragments":["87,","47,"]},{"Key":"line 87,","Fragments":["I"]},{"Key":"87, I","Fragments":["want"]},{"Key":" ```e@zachary(_)","Fragments":["=\u003e"]},{"Key":"```e@zachary(_) =\u003e","Fragments":["return"]},{"Key":"inference seems","Fragments":["to"]},{"Key":"the calls","Fragments":["to"]},{"Key":"to `to_string()`","Fragments":["in"]},{"Key":"`to_string()` in","Fragments":["the"]},{"Key":"code are","Fragments":["not","negative."]},{"Key":" try![writer.write_all(format!(\"{:\u003c30}","Fragments":["|"]},{"Key":"try![writer.write_all(format!(\"{:\u003c30} |","Fragments":["{}"]},{"Key":"| {}","Fragments":["|","|","|","|"]},{"Key":"{} |","Fragments":["{}","{}","{}","{}\\r\\n\","]},{"Key":"how you're","Fragments":["using"]},{"Key":"tuple for","Fragments":["the"]},{"Key":"order comparison,","Fragments":["it's"]},{"Key":"comparison, it's","Fragments":["a"]},{"Key":"fn sort_key(\u0026self)","Fragments":["-\u003e"]},{"Key":"sort_key(\u0026self) -\u003e","Fragments":["(usize,"]},{"Key":"-\u003e (usize,","Fragments":["usize)"]},{"Key":"(usize, usize)","Fragments":["{"]},{"Key":" (self.score(),","Fragments":["self.played())"]},{"Key":" Due","Fragments":["to"]},{"Key":"Due to","Fragments":["what"]},{"Key":"assume is","Fragments":["a"]},{"Key":"a typo,","Fragments":["this"]},{"Key":"typo, this","Fragments":["submission"]},{"Key":"this submission","Fragments":["will"]},{"Key":"submission will","Fragments":["not"]},{"Key":"not give","Fragments":["the"]},{"Key":"correct result","Fragments":["for"]},{"Key":"result for","Fragments":["most"]},{"Key":"for most","Fragments":["years"]},{"Key":"most years","Fragments":["ending"]},{"Key":"years ending","Fragments":["in"]},{"Key":"ending in","Fragments":["'0,'"]},{"Key":"in '0,'","Fragments":["e.g."]},{"Key":"'0,' e.g.","Fragments":["2020."]},{"Key":"also recommend","Fragments":["removing"]},{"Key":"recommend removing","Fragments":["the"]},{"Key":"the lambda.","Fragments":["I"]},{"Key":"lambda. I","Fragments":["can"]},{"Key":"might improve","Fragments":["readability,"]},{"Key":"improve readability,","Fragments":["but"]},{"Key":"readability, but","Fragments":["I"]},{"Key":"overkill in","Fragments":["this"]},{"Key":"this situation.","Fragments":["If"]},{"Key":"situation. If","Fragments":["you"]},{"Key":"same syntax,","Fragments":["maybe"]},{"Key":"syntax, maybe","Fragments":["a"]},{"Key":"a macro","Fragments":["is","allowing","that"]},{"Key":"macro is","Fragments":["good","a"]},{"Key":"is good","Fragments":["alternative?"]},{"Key":"good alternative?","Fragments":["I"]},{"Key":"alternative? I","Fragments":["would"]},{"Key":"would personally","Fragments":["go"]},{"Key":"personally go","Fragments":["without"]},{"Key":"go without","Fragments":["using"]},{"Key":"without using","Fragments":["a","an"]},{"Key":"a `divisible_by`","Fragments":["helper."]},{"Key":"* Personally","Fragments":["I"]},{"Key":"Personally I","Fragments":["think"]},{"Key":"is confusing","Fragments":["to"]},{"Key":"confusing to","Fragments":["have"]},{"Key":"expression that","Fragments":["contains"]},{"Key":"that contains","Fragments":["bollean"]},{"Key":"contains bollean","Fragments":["variables"]},{"Key":"bollean variables","Fragments":["*and*"]},{"Key":"variables *and*","Fragments":["subexpressions."]},{"Key":"*and* subexpressions.","Fragments":["Name"]},{"Key":"subexpressions. Name","Fragments":["everything"]},{"Key":"Name everything","Fragments":["or"]},{"Key":"everything or","Fragments":["nothing."]},{"Key":"Good catch","Fragments":["ensuring"]},{"Key":"catch ensuring","Fragments":["that"]},{"Key":"ensuring that","Fragments":["n"]},{"Key":"that n","Fragments":["is"]},{"Key":"n is","Fragments":["not"]},{"Key":"Also nice","Fragments":["using"]},{"Key":"nice using","Fragments":["the"]},{"Key":"the triangle","Fragments":["numbers"]},{"Key":"triangle numbers","Fragments":["for"]},{"Key":"numbers for","Fragments":["getting"]},{"Key":"for getting","Fragments":["the"]},{"Key":"of sums,","Fragments":["perhaps","there's"]},{"Key":"sums, perhaps","Fragments":["leave"]},{"Key":"perhaps leave","Fragments":["a"]},{"Key":"comment with","Fragments":["a","some"]},{"Key":"a link","Fragments":["to"]},{"Key":"to wikipedia","Fragments":["(or"]},{"Key":"wikipedia (or","Fragments":["similar)"]},{"Key":"(or similar)","Fragments":["so"]},{"Key":"similar) so","Fragments":["that"]},{"Key":"that people","Fragments":["who"]},{"Key":"people who","Fragments":["don't"]},{"Key":"who don't","Fragments":["know"]},{"Key":"that maths","Fragments":["trick"]},{"Key":"maths trick","Fragments":["(me)"]},{"Key":"trick (me)","Fragments":["can"]},{"Key":"(me) can","Fragments":["understand"]},{"Key":"can understand","Fragments":["what"]},{"Key":"the stable","Fragments":["build","library,"]},{"Key":"stable build","Fragments":["of"]},{"Key":"build of","Fragments":["rust"]},{"Key":"rust otherwise","Fragments":["I"]},{"Key":"otherwise I","Fragments":["could"]},{"Key":"have taken","Fragments":["advantage"]},{"Key":"Also, is","Fragments":["there"]},{"Key":"be generic","Fragments":["over"]},{"Key":"generic over","Fragments":["any"]},{"Key":"over any","Fragments":["integer"]},{"Key":"any integer","Fragments":["type?","data"]},{"Key":"there an","Fragments":["issue","efficiency-related"]},{"Key":"an issue","Fragments":["with"]},{"Key":"issue with","Fragments":["converting"]},{"Key":"with converting","Fragments":["from"]},{"Key":"converting from","Fragments":["`u64`"]},{"Key":"from `u64`","Fragments":["to"]},{"Key":"`u64` to","Fragments":["`usize`"]},{"Key":"to `usize`","Fragments":["for"]},{"Key":"`usize` for","Fragments":["the"]},{"Key":"the call","Fragments":["to"]},{"Key":"an efficient","Fragments":["bit-set"]},{"Key":"efficient bit-set","Fragments":["style"]},{"Key":"bit-set style","Fragments":["implementation"]},{"Key":"style implementation","Fragments":["without"]},{"Key":"an external","Fragments":["crate","thread","crate"]},{"Key":"external crate","Fragments":["I","though"]},{"Key":"crate I","Fragments":["created"]},{"Key":"I created","Fragments":["a"]},{"Key":"created a","Fragments":["simple"]},{"Key":"simple lookup","Fragments":["table,"]},{"Key":"lookup table,","Fragments":["which"]},{"Key":"table, which","Fragments":["required"]},{"Key":"which required","Fragments":["me"]},{"Key":"required me","Fragments":["to"]},{"Key":"learn a","Fragments":["bit"]},{"Key":"more about","Fragments":["arrays."]},{"Key":"about arrays.","Fragments":["I"]},{"Key":"arrays. I","Fragments":["also"]},{"Key":"use clone()","Fragments":["myself"]},{"Key":"clone() myself","Fragments":["rather"]},{"Key":"myself rather","Fragments":["than"]},{"Key":"than in","Fragments":["copied"]},{"Key":"in copied","Fragments":["code."]},{"Key":"you associate","Fragments":["each"]},{"Key":"associate each","Fragments":["allergen"]},{"Key":"each allergen","Fragments":["to"]},{"Key":"allergen to","Fragments":["it's"]},{"Key":"to it's","Fragments":["allergy","corresponding"]},{"Key":"it's allergy","Fragments":["score"]},{"Key":"allergy score","Fragments":["(1"]},{"Key":"score (1","Fragments":["for"]},{"Key":"(1 for","Fragments":["Eggs,"]},{"Key":"for Eggs,","Fragments":["2"]},{"Key":"Eggs, 2","Fragments":["for"]},{"Key":"2 for","Fragments":["Peanuts,"]},{"Key":"for Peanuts,","Fragments":["4"]},{"Key":"Peanuts, 4","Fragments":["for"]},{"Key":"4 for","Fragments":["Shellfish,"]},{"Key":"for Shellfish,","Fragments":["...),"]},{"Key":"Shellfish, ...),","Fragments":["you"]},{"Key":"...), you","Fragments":["can"]},{"Key":"can avoid","Fragments":["shifts"]},{"Key":"avoid shifts","Fragments":["and"]},{"Key":"shifts and","Fragments":["simplify"]},{"Key":"simplify code","Fragments":["a"]},{"Key":"could derive","Fragments":["`Copy`"]},{"Key":"derive `Copy`","Fragments":["for"]},{"Key":"for `Allergen`,","Fragments":["and"]},{"Key":"`Allergen`, and","Fragments":["get"]},{"Key":"In any","Fragments":["case,"]},{"Key":"any case,","Fragments":["you"]},{"Key":"case, you","Fragments":["do"]},{"Key":"first `clone`","Fragments":["on"]},{"Key":"`clone` on","Fragments":["line"]},{"Key":"same issue","Fragments":["as"]},{"Key":"issue as","Fragments":["in"]},{"Key":"iteration 2,","Fragments":["with"]},{"Key":"2, with","Fragments":["too"]},{"Key":"with too","Fragments":["many"]},{"Key":"many calls","Fragments":["to"]},{"Key":"to uppercase","Fragments":["and"]},{"Key":"uppercase and","Fragments":["sort"]},{"Key":"sort the","Fragments":["input"]},{"Key":" Well","Fragments":["looks"]},{"Key":"Well looks","Fragments":["good"]},{"Key":"good to","Fragments":["me!"]},{"Key":"to me!","Fragments":["Last"]},{"Key":"me! Last","Fragments":["small"]},{"Key":"Last small","Fragments":["thing"]},{"Key":"small thing","Fragments":["I"]},{"Key":"thing I","Fragments":["have"]},{"Key":"have is","Fragments":["that"]},{"Key":"`return` on","Fragments":["line"]},{"Key":"line 14","Fragments":["would"]},{"Key":"14 would","Fragments":["not"]},{"Key":" on","Fragments":["'nightly'"]},{"Key":"on 'nightly'","Fragments":["you"]},{"Key":"'nightly' you","Fragments":["have"]},{"Key":"mutable binding","Fragments":["and"]},{"Key":"for loop,","Fragments":["you","it's"]},{"Key":"loop, you","Fragments":["could"]},{"Key":"`fold` here","Fragments":["if"]},{"Key":"here if","Fragments":["you"]},{"Key":"you so","Fragments":["desired."]},{"Key":"check out","Fragments":["the","[guards","`std::iter::FromIterator`"]},{"Key":"the [or_insert](https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.or_insert)","Fragments":["method"]},{"Key":"[or_insert](https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.or_insert) method","Fragments":["of"]},{"Key":"method of","Fragments":["Entry.","the"]},{"Key":"also write","Fragments":["your"]},{"Key":"write your","Fragments":["convert_to_lowercase_word"]},{"Key":"your convert_to_lowercase_word","Fragments":["function"]},{"Key":"convert_to_lowercase_word function","Fragments":["in"]},{"Key":"of iterators,","Fragments":["which"]},{"Key":"iterators, which","Fragments":["might"]},{"Key":"which might","Fragments":["be"]},{"Key":"As far","Fragments":["as"]},{"Key":"far as","Fragments":["I"]},{"Key":"to_string here.","Fragments":["You"]},{"Key":"here. You","Fragments":["can"]},{"Key":"can call","Fragments":["chars","`.to_string()`","`.to_lowercase()`"]},{"Key":"call chars","Fragments":["directly"]},{"Key":"chars directly","Fragments":["on"]},{"Key":"on first","Fragments":["and"]},{"Key":"write this","Fragments":["in"]},{"Key":"this in","Fragments":["one","one","some","the","the"]},{"Key":"one line","Fragments":["and","of"]},{"Key":"actually already","Fragments":["dislike"]},{"Key":"already dislike","Fragments":["the"]},{"Key":"dislike the","Fragments":["long,"]},{"Key":"the long,","Fragments":["destructuring"]},{"Key":"long, destructuring","Fragments":["assignment"]},{"Key":"destructuring assignment","Fragments":["on"]},{"Key":"assignment on","Fragments":["line"]},{"Key":"line 2.","Fragments":["If"]},{"Key":"2. If","Fragments":["I"]},{"Key":"If I","Fragments":["put","had"]},{"Key":"put everything","Fragments":["in"]},{"Key":"everything in","Fragments":["one"]},{"Key":"line, it","Fragments":["would"]},{"Key":"would quickly","Fragments":["become"]},{"Key":"quickly become","Fragments":["a"]},{"Key":"become a","Fragments":["mess"]},{"Key":"a mess","Fragments":["(plus,"]},{"Key":"mess (plus,","Fragments":["it"]},{"Key":"(plus, it","Fragments":["wouldn't"]},{"Key":"it wouldn't","Fragments":["be"]},{"Key":"wouldn't be","Fragments":["very"]},{"Key":"be very","Fragments":["extensible"]},{"Key":"very extensible","Fragments":["either)."]},{"Key":"Making that","Fragments":["other"]},{"Key":"that other","Fragments":["function"]},{"Key":"other function","Fragments":["might"]},{"Key":"function might","Fragments":["make"]},{"Key":"this more","Fragments":["readable."]},{"Key":"readable. But","Fragments":["it"]},{"Key":"But it","Fragments":["isn't","was"]},{"Key":"it isn't","Fragments":["that"]},{"Key":"isn't that","Fragments":["big"]},{"Key":"big a","Fragments":["deal.","problem"]},{"Key":" Changed","Fragments":["all","from"]},{"Key":"Changed all","Fragments":["of"]},{"Key":"this nonsense","Fragments":["around"]},{"Key":"nonsense around","Fragments":["because"]},{"Key":"around because","Fragments":["of"]},{"Key":"one thing","Fragments":["that"]},{"Key":"that *really*","Fragments":["bothered"]},{"Key":"*really* bothered","Fragments":["me:"]},{"Key":"bothered me:","Fragments":["in"]},{"Key":"me: in","Fragments":["this"]},{"Key":"this version,","Fragments":["I"]},{"Key":"version, I","Fragments":["re-sort"]},{"Key":"I re-sort","Fragments":["the"]},{"Key":"re-sort the","Fragments":["target"]},{"Key":"the target","Fragments":["word"]},{"Key":"target word","Fragments":["every"]},{"Key":"word every","Fragments":["time"]},{"Key":"time I","Fragments":["test","checked,"]},{"Key":"I test","Fragments":["for..."]},{"Key":"test for...","Fragments":["anagramininity."]},{"Key":"for... anagramininity.","Fragments":["Or"]},{"Key":"anagramininity. Or","Fragments":["whatever"]},{"Key":"Or whatever","Fragments":["you"]},{"Key":"whatever you","Fragments":["call"]},{"Key":"call it.","Fragments":["Anagramness."]},{"Key":"like anagramaninity.","Fragments":[":)"]},{"Key":" Feels","Fragments":["like"]},{"Key":"Feels like","Fragments":["I"]},{"Key":"have extracted","Fragments":["the"]},{"Key":"extracted the","Fragments":["whole"]},{"Key":"whole let","Fragments":["mut"]},{"Key":"mut a:","Fragments":["thing"]},{"Key":"a: thing","Fragments":["out"]},{"Key":"thing out","Fragments":["into"]},{"Key":"into its","Fragments":["own"]},{"Key":"own function,","Fragments":["but"]},{"Key":"also feel","Fragments":["like"]},{"Key":"it's 5:15","Fragments":["and"]},{"Key":"5:15 and","Fragments":["time"]},{"Key":"and time","Fragments":["to"]},{"Key":"go home,","Fragments":["you"]},{"Key":"home, you","Fragments":["know?"]},{"Key":"assign a","Fragments":["value"]},{"Key":"value to","Fragments":["each"]},{"Key":"to each","Fragments":["member"]},{"Key":"each member","Fragments":["of","of"]},{"Key":"member of","Fragments":["an","an"]},{"Key":"enum -","Fragments":["this"]},{"Key":"this simplifies","Fragments":["the"]},{"Key":"simplifies the","Fragments":["exercise"]},{"Key":"suggest using","Fragments":["```filter```","a"]},{"Key":"using ```filter```","Fragments":["in","and"]},{"Key":"```filter``` in","Fragments":["lines"]},{"Key":"lines 46","Fragments":["-"]},{"Key":"46 -","Fragments":["52"]},{"Key":"- 52","Fragments":["instead"]},{"Key":"52 instead","Fragments":["of"]},{"Key":"a hand-written","Fragments":["loop."]},{"Key":"Maybe instead","Fragments":["of","of"]},{"Key":"of binding","Fragments":["`intermediate`"]},{"Key":"binding `intermediate`","Fragments":["in"]},{"Key":"`intermediate` in","Fragments":["`square_of_sum`,"]},{"Key":"in `square_of_sum`,","Fragments":["try"]},{"Key":"`square_of_sum`, try","Fragments":["`(1..initial+1).fold(/*"]},{"Key":"try `(1..initial+1).fold(/*","Fragments":["blah"]},{"Key":"`(1..initial+1).fold(/* blah","Fragments":["*/).pow(2)`."]},{"Key":"The looping","Fragments":["construct"]},{"Key":"looping construct","Fragments":["here"]},{"Key":"construct here","Fragments":["can"]},{"Key":"here can","Fragments":["be"]},{"Key":"done much","Fragments":["more"]},{"Key":"more easily","Fragments":["using"]},{"Key":"easily using","Fragments":["a"]},{"Key":"iterator or","Fragments":["using"]},{"Key":"or using","Fragments":["the"]},{"Key":"the fold","Fragments":["function.","method."]},{"Key":" Check","Fragments":["out","custom_derive"]},{"Key":"Check out","Fragments":["[https://doc.rust-lang.org/std/iter/index.html]()"]},{"Key":"Good solution,","Fragments":["nice"]},{"Key":"solution, nice","Fragments":["FP"]},{"Key":"nice FP","Fragments":["style."]},{"Key":"Few minor","Fragments":["notes:"]},{"Key":"a str.is_empty()","Fragments":["method"]},{"Key":"str.is_empty() method","Fragments":["to"]},{"Key":"express checking","Fragments":["for"]},{"Key":"for emptiness","Fragments":["better;"]},{"Key":"* dots","Fragments":["are"]},{"Key":"usually aligned","Fragments":["vertically"]},{"Key":"aligned vertically","Fragments":["in"]},{"Key":"vertically in","Fragments":["Rust"]},{"Key":"Rust in","Fragments":["chain","its"]},{"Key":"in chain","Fragments":["of"]},{"Key":"the `abs()`","Fragments":["on"]},{"Key":"`abs()` on","Fragments":["line"]},{"Key":"line 18.","Fragments":["Just"]},{"Key":"18. Just","Fragments":["switch"]},{"Key":"Just switch","Fragments":["`sum_of_squares`"]},{"Key":"switch `sum_of_squares`","Fragments":["and"]},{"Key":"and `square_of_sum`.","Fragments":["`square_of_sum`"]},{"Key":"`square_of_sum`. `square_of_sum`","Fragments":["is"]},{"Key":"`square_of_sum` is","Fragments":["always"]},{"Key":"is always","Fragments":["greater","the"]},{"Key":"always greater","Fragments":["than"]},{"Key":"greater than","Fragments":["the","zero."]},{"Key":"the `sum_of_squares`,","Fragments":["so"]},{"Key":"`sum_of_squares`, so","Fragments":["if"]},{"Key":"so if","Fragments":["you"]},{"Key":"switch them","Fragments":["it"]},{"Key":"them it","Fragments":["will"]},{"Key":"always have","Fragments":["a","to"]},{"Key":"a positive","Fragments":["result."]},{"Key":"point, thank","Fragments":["you."]},{"Key":"a u","Fragments":["rather"]},{"Key":"u rather","Fragments":["than"]},{"Key":"an i","Fragments":["integer"]},{"Key":"i integer","Fragments":["input,"]},{"Key":"integer input,","Fragments":["as"]},{"Key":"input, as","Fragments":["years"]},{"Key":"as years","Fragments":["have"]},{"Key":"years have","Fragments":["to"]},{"Key":"be positive.","Fragments":["The"]},{"Key":"positive. The","Fragments":["solution"]},{"Key":"really simple,","Fragments":["which"]},{"Key":"simple, which","Fragments":["I"]},{"Key":"I like.","Fragments":[":)"]},{"Key":"a `.to_lowercase()`","Fragments":["method"]},{"Key":"method you","Fragments":["could","can"]},{"Key":"use (and","Fragments":["thereby"]},{"Key":"(and thereby","Fragments":["avoid"]},{"Key":"thereby avoid","Fragments":["the"]},{"Key":" try","Fragments":["using"]},{"Key":"try using","Fragments":["`fold`"]},{"Key":"`fold` on","Fragments":["the"]},{"Key":"the `split()`","Fragments":["result."]},{"Key":"most elegant,","Fragments":["idiomatic"]},{"Key":"elegant, idiomatic","Fragments":["solution"]},{"Key":"idiomatic solution","Fragments":["I've"]},{"Key":"I've read","Fragments":["so"]},{"Key":"read so","Fragments":["far."]},{"Key":"far. Kudos","Fragments":["and"]},{"Key":"Kudos and","Fragments":["thanks."]},{"Key":" Taking","Fragments":["the","a"]},{"Key":"Taking the","Fragments":["functional"]},{"Key":"functional approach","Fragments":["even","better.","is","in"]},{"Key":"approach even","Fragments":["further,"]},{"Key":"even further,","Fragments":["by"]},{"Key":"further, by","Fragments":["passing"]},{"Key":"by passing","Fragments":["the"]},{"Key":"executed by","Fragments":["the"]},{"Key":"fold method.","Fragments":["The"]},{"Key":"method. The","Fragments":["`sum`"]},{"Key":"The `sum`","Fragments":["function"]},{"Key":"`sum` function","Fragments":["is"]},{"Key":"more complex,","Fragments":["but","so"]},{"Key":"complex, but","Fragments":["the"]},{"Key":"is DRY","Fragments":["and"]},{"Key":"DRY and","Fragments":["easily"]},{"Key":"and easily","Fragments":["extensible."]},{"Key":" Simplified","Fragments":["the"]},{"Key":"Simplified the","Fragments":["leap"]},{"Key":"year detection","Fragments":["logic."]},{"Key":"the closest","Fragments":["I"]},{"Key":"closest I","Fragments":["could"]},{"Key":"of elegant,","Fragments":["comprensible"]},{"Key":"elegant, comprensible","Fragments":["\u0026"]},{"Key":"comprensible \u0026","Fragments":["concise"]},{"Key":"\u0026 concise","Fragments":["code."]},{"Key":" Anyone","Fragments":["has"]},{"Key":"Anyone has","Fragments":["an"]},{"Key":"an idea","Fragments":["if"]},{"Key":"idea if","Fragments":["using"]},{"Key":"if using","Fragments":["`u32`"]},{"Key":"using `u32`","Fragments":["as"]},{"Key":"`u32` as","Fragments":["the"]},{"Key":"the integer","Fragments":["type"]},{"Key":"integer type","Fragments":["is"]},{"Key":"type is","Fragments":["the","Result\u003c\u0026\u0026str,"]},{"Key":"best solution?","Fragments":["Coming"]},{"Key":"solution? Coming","Fragments":["from"]},{"Key":"Coming from","Fragments":["a","a"]},{"Key":"a dynamicly","Fragments":["typed"]},{"Key":"dynamicly typed","Fragments":["language"]},{"Key":"typed language","Fragments":["background,"]},{"Key":"language background,","Fragments":["I"]},{"Key":"background, I","Fragments":["still"]},{"Key":"still don't","Fragments":["grasp","really","really"]},{"Key":"don't grasp","Fragments":["the"]},{"Key":"grasp the","Fragments":["nuances"]},{"Key":"the nuances","Fragments":["of"]},{"Key":"nuances of","Fragments":["the"]},{"Key":"the different","Fragments":["integer"]},{"Key":"different integer","Fragments":["types"]},{"Key":"integer types","Fragments":["in"]},{"Key":"types in","Fragments":["Rust."]},{"Key":"very readable","Fragments":["indeed,"]},{"Key":"readable indeed,","Fragments":["certainly"]},{"Key":"indeed, certainly","Fragments":["more"]},{"Key":"certainly more","Fragments":["so","concise."]},{"Key":"more so","Fragments":["than"]},{"Key":"so than","Fragments":["my"]},{"Key":"than my","Fragments":["solution","version.","previous"]},{"Key":"solution or","Fragments":["the"]},{"Key":"other one","Fragments":["I've"]},{"Key":"one I've","Fragments":["looked"]},{"Key":"of \"return\"","Fragments":["is"]},{"Key":"\"return\" is","Fragments":["not"]},{"Key":"not idiomatic","Fragments":["Rust,"]},{"Key":"idiomatic Rust,","Fragments":["you"]},{"Key":"Rust, you","Fragments":["can"]},{"Key":"just leave","Fragments":["it","out","it"]},{"Key":"leave it","Fragments":["out"]},{"Key":"it out","Fragments":["(provided","to"]},{"Key":"out (provided","Fragments":["you"]},{"Key":"(provided you","Fragments":["remove"]},{"Key":"you remove","Fragments":["the","a"]},{"Key":"those lines","Fragments":["as"]},{"Key":"lines as","Fragments":["well)"]},{"Key":"as well)","Fragments":["and"]},{"Key":"well) and","Fragments":["really"]},{"Key":"and really","Fragments":["I"]},{"Key":"really I","Fragments":["think"]},{"Key":"the \"if\"","Fragments":["at","and"]},{"Key":"\"if\" at","Fragments":["all,"]},{"Key":"at all,","Fragments":["you","no"]},{"Key":"all, you","Fragments":["could","don't"]},{"Key":"whole if-else","Fragments":["structure"]},{"Key":"if-else structure","Fragments":["and"]},{"Key":"and replace","Fragments":["it","whatever"]},{"Key":"the condition,","Fragments":["so"]},{"Key":"condition, so","Fragments":["basically:"]},{"Key":"let div_by_4","Fragments":["="]},{"Key":"div_by_4 =","Fragments":["divisible(year,"]},{"Key":"= divisible(year,","Fragments":["4);","100);","400);"]},{"Key":"let div_by_100","Fragments":["="]},{"Key":"div_by_100 =","Fragments":["divisible(year,"]},{"Key":"let div_by_400","Fragments":["="]},{"Key":"div_by_400 =","Fragments":["divisible(year,"]},{"Key":"// no","Fragments":["semicolon"]},{"Key":"no semicolon","Fragments":["at"]},{"Key":"at end","Fragments":["\u0026"]},{"Key":"end \u0026","Fragments":["last"]},{"Key":"\u0026 last","Fragments":["expression"]},{"Key":"expression =\u003e","Fragments":["this"]},{"Key":"=\u003e this","Fragments":["value"]},{"Key":"this value","Fragments":["will"]},{"Key":"value will","Fragments":["be"]},{"Key":" div_by_4","Fragments":["\u0026\u0026"]},{"Key":"div_by_4 \u0026\u0026","Fragments":["(!div_by_100"]},{"Key":"\u0026\u0026 (!div_by_100","Fragments":["||"]},{"Key":"(!div_by_100 ||","Fragments":["div_by_400)"]},{"Key":"How do","Fragments":["you"]},{"Key":"would read","Fragments":["if","```sum"]},{"Key":"read if","Fragments":["you","you","they"]},{"Key":"you eliminated","Fragments":["the"]},{"Key":"eliminated the","Fragments":["`div_by_*`"]},{"Key":"the `div_by_*`","Fragments":["variables?"]},{"Key":"And the","Fragments":["if","'size'"]},{"Key":"statement as","Fragments":["suggested"]},{"Key":" divisible(year,","Fragments":["4)"]},{"Key":"divisible(year, 4)","Fragments":["\u0026\u0026"]},{"Key":"4) \u0026\u0026","Fragments":["(!divisible(year,"]},{"Key":"\u0026\u0026 (!divisible(year,","Fragments":["4=100)"]},{"Key":"(!divisible(year, 4=100)","Fragments":["||"]},{"Key":"4=100) ||","Fragments":["divisible(year,"]},{"Key":"|| divisible(year,","Fragments":["400))"]},{"Key":"If you're","Fragments":["not"]},{"Key":"you're not","Fragments":["planning"]},{"Key":"not planning","Fragments":["to"]},{"Key":"planning to","Fragments":["support"]},{"Key":"support BCE","Fragments":["years"]},{"Key":"BCE years","Fragments":["(which"]},{"Key":"years (which","Fragments":["may"]},{"Key":"(which may","Fragments":["lead"]},{"Key":"may lead","Fragments":["you"]},{"Key":"lead you","Fragments":["to"]},{"Key":"to signed","Fragments":["i32"]},{"Key":"signed i32","Fragments":["type)"]},{"Key":"i32 type)","Fragments":["it's"]},{"Key":"type) it's","Fragments":["perfectly"]},{"Key":"it's perfectly","Fragments":["fine"]},{"Key":"perfectly fine","Fragments":["IMO."]},{"Key":"am surprised","Fragments":["that","it"]},{"Key":"surprised that","Fragments":["Rust"]},{"Key":"Rust does","Fragments":["not"]},{"Key":"provide the","Fragments":["Regex"]},{"Key":"the Regex","Fragments":["crate"]},{"Key":"Regex crate","Fragments":["as"]},{"Key":"crate as","Fragments":["part"]},{"Key":"as part","Fragments":["of"]},{"Key":"core /","Fragments":["standard"]},{"Key":"/ standard","Fragments":["library."]},{"Key":" Removed","Fragments":["the"]},{"Key":"Removed the","Fragments":["usage"]},{"Key":"the usage","Fragments":["of"]},{"Key":"usage of","Fragments":["the"]},{"Key":"the regex","Fragments":["crate,"]},{"Key":"regex crate,","Fragments":["as"]},{"Key":"crate, as","Fragments":["the"]},{"Key":"the assignment","Fragments":["can"]},{"Key":"assignment can","Fragments":["be"]},{"Key":"compiler doesn't","Fragments":["need"]},{"Key":"doesn't need","Fragments":["the"]},{"Key":" Sorting","Fragments":["the"]},{"Key":"Sorting the","Fragments":["saved"]},{"Key":"the saved","Fragments":["list"]},{"Key":"saved list","Fragments":["inside"]},{"Key":"list inside","Fragments":["of","`add()`"]},{"Key":"of `grade()`","Fragments":["works,"]},{"Key":"`grade()` works,","Fragments":["but"]},{"Key":"it requires","Fragments":["modifying"]},{"Key":"requires modifying","Fragments":["the"]},{"Key":"modifying the","Fragments":["last"]},{"Key":"Will switch","Fragments":["to"]},{"Key":"switch to","Fragments":["maintaining"]},{"Key":"to maintaining","Fragments":["a"]},{"Key":"maintaining a","Fragments":["sorted"]},{"Key":"using split","Fragments":["like"]},{"Key":"split like","Fragments":["that."]},{"Key":"like that.","Fragments":["I"]},{"Key":"like it.","Fragments":["Split"]},{"Key":"it. Split","Fragments":["in"]},{"Key":"Split in","Fragments":["Rust"]},{"Key":"Rust seems","Fragments":["to","to"]},{"Key":"more adaptable","Fragments":["than"]},{"Key":"adaptable than","Fragments":["the"]},{"Key":"kind I","Fragments":["normally"]},{"Key":"I normally","Fragments":["get"]},{"Key":"normally get","Fragments":["to"]},{"Key":"to play","Fragments":["with.","with","with"]},{"Key":" ```String```","Fragments":["has"]},{"Key":"```String``` has","Fragments":["a"]},{"Key":"```to_lowercase()``` method","Fragments":["(at"]},{"Key":"method (at","Fragments":["least"]},{"Key":"nightly 1.3","Fragments":["and"]},{"Key":"1.3 and","Fragments":["maybe"]},{"Key":"and maybe","Fragments":["in"]},{"Key":"maybe in","Fragments":["the"]},{"Key":"the 1.2","Fragments":["release)."]},{"Key":"Yes, `to_lowercase()`","Fragments":["has"]},{"Key":"`to_lowercase()` has","Fragments":["been"]},{"Key":"been added","Fragments":["to"]},{"Key":"added to","Fragments":["1.2.","your"]},{"Key":"to 1.2.","Fragments":["It"]},{"Key":"1.2. It","Fragments":["was"]},{"Key":"was experimental","Fragments":["in"]},{"Key":"experimental in","Fragments":["1.1"]},{"Key":"You may","Fragments":["already","want"]},{"Key":"may already","Fragments":["know"]},{"Key":"know this,","Fragments":["but"]},{"Key":"but `AsRef`","Fragments":["is"]},{"Key":"`AsRef` is","Fragments":["actually"]},{"Key":"a trait.","Fragments":["That"]},{"Key":"trait. That","Fragments":["may"]},{"Key":"That may","Fragments":["be"]},{"Key":"be what","Fragments":["the"]},{"Key":"test has","Fragments":["in"]},{"Key":"has in","Fragments":["mind"]},{"Key":"in mind","Fragments":["rather"]},{"Key":"mind rather","Fragments":["than"]},{"Key":"a method","Fragments":["of","in"]},{"Key":"does work,","Fragments":["however"]},{"Key":"however I","Fragments":["might"]},{"Key":"might suggest","Fragments":["looking"]},{"Key":"suggest looking","Fragments":["into"]},{"Key":"looking into","Fragments":["using"]},{"Key":"into using","Fragments":["rust's"]},{"Key":"using rust's","Fragments":["functional"]},{"Key":"rust's functional","Fragments":["roots"]},{"Key":"functional roots","Fragments":["to"]},{"Key":"roots to","Fragments":["make"]},{"Key":"comment. Not","Fragments":["sure"]},{"Key":"by that,","Fragments":["though."]},{"Key":"that, though.","Fragments":["Replacing"]},{"Key":"though. Replacing","Fragments":["the"]},{"Key":"Replacing the","Fragments":["expressions"]},{"Key":"expressions with","Fragments":["function"]},{"Key":"with function","Fragments":["calls?"]},{"Key":"function calls?","Fragments":["like"]},{"Key":"calls? like","Fragments":["`leap_year(year)"]},{"Key":"like `leap_year(year)","Fragments":["\u0026\u0026"]},{"Key":"`leap_year(year) \u0026\u0026","Fragments":["!"]},{"Key":"\u0026\u0026 !","Fragments":["leap_year_exception(year)`?"]},{"Key":"still make","Fragments":["letter/digit"]},{"Key":"make letter/digit","Fragments":["generation"]},{"Key":"letter/digit generation","Fragments":["cleaner,"]},{"Key":"generation cleaner,","Fragments":["using"]},{"Key":"cleaner, using","Fragments":["```gen_range```"]},{"Key":"i32, no","Fragments":["integers"]},{"Key":"no integers","Fragments":["need"]},{"Key":"integers need","Fragments":["to"]},{"Key":"the hints,","Fragments":["I've"]},{"Key":"hints, I've","Fragments":["re-written"]},{"Key":"I've re-written","Fragments":["this"]},{"Key":"re-written this","Fragments":["using"]},{"Key":"using uints","Fragments":["and"]},{"Key":"uints and","Fragments":["arithmetic."]},{"Key":"47, ```n.to_string()```","Fragments":["should"]},{"Key":"```n.to_string()``` should","Fragments":["also"]},{"Key":"Thanks, I'd","Fragments":["missed"]},{"Key":"I'd missed","Fragments":["seeing"]},{"Key":"missed seeing","Fragments":["`to_string()`"]},{"Key":"seeing `to_string()`","Fragments":["for"]},{"Key":"`to_string()` for","Fragments":["u32"]},{"Key":"for u32","Fragments":["in"]},{"Key":"u32 in","Fragments":["the"]},{"Key":" nucleotide_counts","Fragments":["loops"]},{"Key":"nucleotide_counts loops","Fragments":["through"]},{"Key":"loops through","Fragments":["the"]},{"Key":"string 4","Fragments":["times,","times,"]},{"Key":"4 times,","Fragments":["it","ideally"]},{"Key":"done efficiently","Fragments":["in"]},{"Key":"efficiently in","Fragments":["one"]},{"Key":"In ```count```,","Fragments":["you"]},{"Key":"```count```, you","Fragments":["can"]},{"Key":"count method","Fragments":["instead"]},{"Key":"compiler needs","Fragments":["the"]},{"Key":"the comments,","Fragments":["@gustave"]},{"Key":"Is the","Fragments":["type"]},{"Key":"line 20","Fragments":["needed?"]},{"Key":"Good catch!","Fragments":["That"]},{"Key":"catch! That","Fragments":["annotation"]},{"Key":"That annotation","Fragments":["on"]},{"Key":"on 30","Fragments":["is"]},{"Key":"30 is","Fragments":["not"]},{"Key":"Using the","Fragments":["ascii"]},{"Key":"ascii codes","Fragments":["in"]},{"Key":"codes in","Fragments":["the"]},{"Key":"the ranges","Fragments":["hide","as"]},{"Key":"ranges hide","Fragments":["the"]},{"Key":"hide the","Fragments":["values","duplication"]},{"Key":"values that","Fragments":["are"]},{"Key":"generated. It","Fragments":["would"]},{"Key":"readable if","Fragments":["you"]},{"Key":"characters instead","Fragments":["(not"]},{"Key":"instead (not","Fragments":["sure"]},{"Key":"(not sure","Fragments":["it"]},{"Key":"sure it","Fragments":["this","should"]},{"Key":"is valid","Fragments":["for"]},{"Key":"valid for","Fragments":["`Range`)."]},{"Key":"let numbers_range","Fragments":["="]},{"Key":"numbers_range =","Fragments":["Range::new(b'0',"]},{"Key":"= Range::new(b'0',","Fragments":[",b'9');"]},{"Key":"let letters_range","Fragments":["="]},{"Key":"letters_range =","Fragments":["Range::new(b'A',"]},{"Key":"= Range::new(b'A',","Fragments":["b'Z');"]},{"Key":"comparison here","Fragments":["is"]},{"Key":"is how","Fragments":["I"]},{"Key":"implemented it","Fragments":[":"]},{"Key":"let letter:","Fragments":["char"]},{"Key":"letter: char","Fragments":["="]},{"Key":"char =","Fragments":["rng.gen_range(b'A',","rng.gen_range(b'0',"]},{"Key":"= rng.gen_range(b'A',","Fragments":["b'Z')"]},{"Key":"rng.gen_range(b'A', b'Z')","Fragments":["as"]},{"Key":"b'Z') as","Fragments":["char;"]},{"Key":"let number:","Fragments":["char"]},{"Key":"number: char","Fragments":["="]},{"Key":"= rng.gen_range(b'0',","Fragments":["b'9')"]},{"Key":"rng.gen_range(b'0', b'9')","Fragments":["as"]},{"Key":"b'9') as","Fragments":["char;"]},{"Key":"Just a","Fragments":["minor"]},{"Key":"a minor","Fragments":["point,"]},{"Key":"minor point,","Fragments":["`not_the_same`"]},{"Key":"point, `not_the_same`","Fragments":["and"]},{"Key":"`not_the_same` and","Fragments":["`chars`"]},{"Key":"and `chars`","Fragments":["seem"]},{"Key":"`chars` seem","Fragments":["a"]},{"Key":"seem a","Fragments":["little"]},{"Key":"little off","Fragments":["in"]},{"Key":"off in","Fragments":["their"]},{"Key":"in their","Fragments":["name."]},{"Key":"their name.","Fragments":["`chars`"]},{"Key":"name. `chars`","Fragments":["actually"]},{"Key":"`chars` actually","Fragments":["returns"]},{"Key":"sorted char","Fragments":["list,"]},{"Key":"char list,","Fragments":["and"]},{"Key":"list, and","Fragments":["`not_the_same`"]},{"Key":"and `not_the_same`","Fragments":["is"]},{"Key":"`not_the_same` is","Fragments":["really"]},{"Key":"really a","Fragments":["case","valuable"]},{"Key":"a case","Fragments":["insensitive","where"]},{"Key":"case insensitive","Fragments":["equals"]},{"Key":"insensitive equals","Fragments":["check."]},{"Key":"equals check.","Fragments":["(Like"]},{"Key":"check. (Like","Fragments":["I"]},{"Key":"(Like I","Fragments":["said,"]},{"Key":"I said,","Fragments":["super"]},{"Key":"said, super","Fragments":["small"]},{"Key":"super small","Fragments":["nitpick)","style"]},{"Key":"think another","Fragments":["super"]},{"Key":"another super","Fragments":["small"]},{"Key":"small style","Fragments":["nitpick"]},{"Key":"style nitpick","Fragments":["is"]},{"Key":"nitpick is","Fragments":["that"]},{"Key":"in is_anagram,","Fragments":["you"]},{"Key":"is_anagram, you","Fragments":["do"]},{"Key":"do two","Fragments":["equality"]},{"Key":"two equality","Fragments":["checks"]},{"Key":"equality checks","Fragments":["differently.","return"]},{"Key":"checks differently.","Fragments":["In,"]},{"Key":"differently. In,","Fragments":["`chars(word)"]},{"Key":"In, `chars(word)","Fragments":["=="]},{"Key":"`chars(word) ==","Fragments":["chars(other)`,"]},{"Key":"== chars(other)`,","Fragments":["you"]},{"Key":"chars(other)`, you","Fragments":["modify"]},{"Key":"you modify","Fragments":["the"]},{"Key":"modify the","Fragments":["data"]},{"Key":"data in","Fragments":["a"]},{"Key":"a function,","Fragments":["and","you"]},{"Key":"then check","Fragments":["equality"]},{"Key":"check equality","Fragments":["in"]},{"Key":"equality in","Fragments":["line."]},{"Key":"in line.","Fragments":["In"]},{"Key":"line. In","Fragments":["`not_the_same(word,"]},{"Key":"In `not_the_same(word,","Fragments":["other)`,"]},{"Key":"`not_the_same(word, other)`,","Fragments":["the"]},{"Key":"other)`, the","Fragments":["modification"]},{"Key":"the modification","Fragments":["of"]},{"Key":"modification of","Fragments":["the"]},{"Key":"data and","Fragments":["equality"]},{"Key":"and equality","Fragments":["check"]},{"Key":"equality check","Fragments":["happen"]},{"Key":"check happen","Fragments":["in"]},{"Key":"the function.","Fragments":["It"]},{"Key":"function. It","Fragments":["might"]},{"Key":"little easier","Fragments":["to","to"]},{"Key":"did them","Fragments":["both"]},{"Key":"them both","Fragments":["the"]},{"Key":"both the","Fragments":["same."]},{"Key":"Otherwise looks","Fragments":["good!"]},{"Key":"It'll be","Fragments":["faster"]},{"Key":"the lower","Fragments":["case"]},{"Key":"case operation","Fragments":["in"]},{"Key":"operation in","Fragments":["the"]},{"Key":"found this","Fragments":["exercise"]},{"Key":"exercise much","Fragments":["easier"]},{"Key":"easier using","Fragments":["an"]},{"Key":"external thread","Fragments":["pool"]},{"Key":"thread pool","Fragments":["library."]},{"Key":"Ah yes,","Fragments":["you're"]},{"Key":"yes, you're","Fragments":["right."]},{"Key":"you're right.","Fragments":["I"]},{"Key":"like implicit","Fragments":["returns"]},{"Key":"returns though,","Fragments":["it"]},{"Key":"though, it","Fragments":["makes"]},{"Key":"feel as","Fragments":["if","though"]},{"Key":"as if","Fragments":["something's"]},{"Key":"if something's","Fragments":["missing."]},{"Key":"something's missing.","Fragments":[":)"]},{"Key":" Explicit","Fragments":["returns"]},{"Key":"Explicit returns","Fragments":["are"]},{"Key":"returns are","Fragments":["often"]},{"Key":"are often","Fragments":["confusing"]},{"Key":"often confusing","Fragments":["me,"]},{"Key":"confusing me,","Fragments":["my"]},{"Key":"me, my","Fragments":["mind"]},{"Key":"mind changes","Fragments":["to"]},{"Key":"to \"think","Fragments":["haskell"]},{"Key":"\"think haskell","Fragments":["monad\""]},{"Key":"haskell monad\"","Fragments":["then"]},{"Key":"monad\" then","Fragments":[":)"]},{"Key":"And to","Fragments":["be"]},{"Key":"be honest:","Fragments":["Worst"]},{"Key":"honest: Worst","Fragments":["thing"]},{"Key":"Worst thing","Fragments":["for"]},{"Key":"thing for","Fragments":["me","the"]},{"Key":"that little","Fragments":["semi"]},{"Key":"little semi","Fragments":["which"]},{"Key":"semi which","Fragments":["I"]},{"Key":"I often","Fragments":["write"]},{"Key":"often write","Fragments":["at"]},{"Key":"write at","Fragments":["the"]},{"Key":"expression when","Fragments":["I"]},{"Key":"a C","Fragments":["or"]},{"Key":"C or","Fragments":["Java"]},{"Key":"or Java","Fragments":["lesson"]},{"Key":"Java lesson","Fragments":["right"]},{"Key":"lesson right","Fragments":["before"]},{"Key":"right before","Fragments":["that"]},{"Key":"before that","Fragments":[";)"]},{"Key":"can ommit","Fragments":["that"]},{"Key":"ommit that","Fragments":["return."]},{"Key":" Remarkably","Fragments":["good"]},{"Key":"Remarkably good","Fragments":["point,"]},{"Key":"good point,","Fragments":["thanks"]},{"Key":"point, thanks","Fragments":["@chaya"]},{"Key":"Then perhaps","Fragments":["a"]},{"Key":"perhaps a","Fragments":["docstring"]},{"Key":"a docstring","Fragments":["to"]},{"Key":"docstring to","Fragments":["that"]},{"Key":"to that","Fragments":["effect?"]},{"Key":" Even","Fragments":["if"]},{"Key":"case with","Fragments":["\"going"]},{"Key":"with \"going","Fragments":["all"]},{"Key":"\"going all","Fragments":["business\","]},{"Key":"all business\",","Fragments":["why"]},{"Key":"business\", why","Fragments":["do"]},{"Key":"put that","Fragments":["'return'"]},{"Key":"that 'return'","Fragments":["there"]},{"Key":"'return' there","Fragments":["?"]},{"Key":"there ?","Fragments":["Do"]},{"Key":"? Do","Fragments":["you"]},{"Key":"need it?","Fragments":["Writing"]},{"Key":"it? Writing","Fragments":["stuff"]},{"Key":"Writing stuff","Fragments":["you"]},{"Key":"stuff you","Fragments":["don't"]},{"Key":"about solving","Fragments":["this"]},{"Key":"solving this","Fragments":["for"]},{"Key":"this for","Fragments":["the","real."]},{"Key":"more general","Fragments":["case,"]},{"Key":"general case,","Fragments":["but"]},{"Key":"case, but","Fragments":["I"]},{"Key":"like doing","Fragments":["work"]},{"Key":"doing work","Fragments":["that"]},{"Key":"work that","Fragments":["might"]},{"Key":"not ever","Fragments":["be"]},{"Key":"ever be","Fragments":["needed","a"]},{"Key":"be needed","Fragments":[":P"]},{"Key":"the business","Fragments":["requirements"]},{"Key":"business requirements","Fragments":["ever"]},{"Key":"requirements ever","Fragments":["changed"]},{"Key":"ever changed","Fragments":["to"]},{"Key":"to necessitate","Fragments":["wider"]},{"Key":"necessitate wider","Fragments":["date"]},{"Key":"wider date","Fragments":["ranges"]},{"Key":"date ranges","Fragments":["then"]},{"Key":"ranges then","Fragments":["obviously"]},{"Key":"then obviously","Fragments":["I"]},{"Key":"obviously I","Fragments":["would"]},{"Key":"would write","Fragments":["some"]},{"Key":"write some","Fragments":["extra"]},{"Key":"some extra","Fragments":["tests"]},{"Key":"extra tests","Fragments":["to"]},{"Key":"tests to","Fragments":["facilitate","2","compile.","use"]},{"Key":"to facilitate","Fragments":["the"]},{"Key":"facilitate the","Fragments":["changes."]},{"Key":"the changes.","Fragments":[":P"]},{"Key":"of `year`","Fragments":["should"]},{"Key":"`year` should","Fragments":["be"]},{"Key":"be `u\u003cwidth\u003e`","Fragments":["to"]},{"Key":"`u\u003cwidth\u003e` to","Fragments":["have"]},{"Key":"a guarantee","Fragments":["that"]},{"Key":"function behaves","Fragments":["the"]},{"Key":"behaves the","Fragments":["same"]},{"Key":"same on","Fragments":["every"]},{"Key":"every system.","Fragments":["`usize`"]},{"Key":"system. `usize`","Fragments":["is"]},{"Key":"`usize` is","Fragments":["system"]},{"Key":"system dependant","Fragments":["and"]},{"Key":"dependant and","Fragments":["can"]},{"Key":"and can","Fragments":["be"]},{"Key":"an `u32`","Fragments":["or"]},{"Key":"`u32` or","Fragments":["an","`u64`","even"]},{"Key":"or an","Fragments":["`u64`"]},{"Key":"an `u64`","Fragments":["on"]},{"Key":"`u64` on","Fragments":["current"]},{"Key":" Both","Fragments":["types"]},{"Key":"Both types","Fragments":["are"]},{"Key":"types are","Fragments":["very"]},{"Key":"very huge","Fragments":["compared"]},{"Key":"huge compared","Fragments":["to"]},{"Key":"the years","Fragments":["we"]},{"Key":"years we","Fragments":["might"]},{"Key":"we might","Fragments":["try,"]},{"Key":"might try,","Fragments":["but"]},{"Key":"try, but","Fragments":["if"]},{"Key":"if rust","Fragments":["matures"]},{"Key":"rust matures","Fragments":["even"]},{"Key":"matures even","Fragments":["more"]},{"Key":"more and","Fragments":["is"]},{"Key":"to program","Fragments":["16-bit"]},{"Key":"program 16-bit","Fragments":["or"]},{"Key":"16-bit or","Fragments":["8-bit"]},{"Key":"or 8-bit","Fragments":["microcontrollers"]},{"Key":"8-bit microcontrollers","Fragments":["you"]},{"Key":"microcontrollers you","Fragments":["could"]},{"Key":"get into","Fragments":["trouble."]},{"Key":"So Rust","Fragments":["has"]},{"Key":"has some","Fragments":["sort","duplication"]},{"Key":"some sort","Fragments":["of"]},{"Key":"sort of","Fragments":["trait","thing"]},{"Key":"of trait","Fragments":["thingy"]},{"Key":"trait thingy","Fragments":["called"]},{"Key":"thingy called","Fragments":["num::Integer"]},{"Key":"called num::Integer","Fragments":["or"]},{"Key":"num::Integer or","Fragments":["something"]},{"Key":"something with","Fragments":["a"]},{"Key":"function called","Fragments":["`is_multiple_of`"]},{"Key":"called `is_multiple_of`","Fragments":["which"]},{"Key":"`is_multiple_of` which","Fragments":["seemed"]},{"Key":"which seemed","Fragments":["like"]},{"Key":"like just","Fragments":["the"]},{"Key":"the ticket.","Fragments":["It's"]},{"Key":"ticket. It's","Fragments":["an"]},{"Key":"It's an","Fragments":["external"]},{"Key":"crate though","Fragments":["that"]},{"Key":"your `Crate.toml`","Fragments":["as"]},{"Key":"`Crate.toml` as","Fragments":["a"]},{"Key":"a dependency","Fragments":["so"]},{"Key":"dependency so","Fragments":["can't"]},{"Key":"so can't","Fragments":["really"]},{"Key":"can't really","Fragments":["be"]},{"Key":"made up","Fragments":["my"]},{"Key":"up my","Fragments":["own"]},{"Key":"own trait","Fragments":["`IsDivisibleBy`"]},{"Key":"trait `IsDivisibleBy`","Fragments":["to"]},{"Key":"`IsDivisibleBy` to","Fragments":["do"]},{"Key":"thing. I","Fragments":["could"]},{"Key":"have just","Fragments":["defined"]},{"Key":"just defined","Fragments":["a"]},{"Key":"defined a","Fragments":["function"]},{"Key":"that takes","Fragments":["2"]},{"Key":"takes 2","Fragments":["numbers,"]},{"Key":"2 numbers,","Fragments":["but"]},{"Key":"numbers, but","Fragments":["I"]},{"Key":" b","Fragments":["will"]},{"Key":"b will","Fragments":["always"]},{"Key":"always be","Fragments":["at"]},{"Key":"least as","Fragments":["large"]},{"Key":"as large","Fragments":["as"]},{"Key":"large as","Fragments":["a,"]},{"Key":"as a,","Fragments":["so"]},{"Key":"a, so","Fragments":["there's"]},{"Key":"there's no","Fragments":["need","need","way"]},{"Key":"for lines","Fragments":["7"]},{"Key":"sums, there's","Fragments":["no"]},{"Key":"big fan","Fragments":["of"]},{"Key":"of math.","Fragments":[":P"]},{"Key":"really don't","Fragments":["know"]},{"Key":"which version","Fragments":["I"]},{"Key":"like more…","Fragments":["anyway,"]},{"Key":"more… anyway,","Fragments":["after"]},{"Key":"anyway, after","Fragments":["the"]},{"Key":"after the","Fragments":["last","battle","zip.","`filter()`"]},{"Key":"last (skipped)","Fragments":["exercises,"]},{"Key":"(skipped) exercises,","Fragments":["this"]},{"Key":"exercises, this","Fragments":["one"]},{"Key":"one was","Fragments":["like"]},{"Key":"was like","Fragments":["beeing"]},{"Key":"like beeing","Fragments":["on"]},{"Key":"beeing on","Fragments":["a"]},{"Key":"the rust-track","Fragments":["is"]},{"Key":"rust-track is","Fragments":["a"]},{"Key":"It appears","Fragments":["they"]},{"Key":"appears they","Fragments":["don't"]},{"Key":"they don't","Fragments":["run","know"]},{"Key":"don't run","Fragments":["them."]},{"Key":"run them.","Fragments":[":/"]},{"Key":"them. :/","Fragments":["Use"]},{"Key":":/ Use","Fragments":["the"]},{"Key":"the nightly.","Fragments":["You"]},{"Key":"nightly. You","Fragments":["can"]},{"Key":" Otherwise,","Fragments":["I"]},{"Key":"like your","Fragments":["solution","use","using"]},{"Key":"solution a","Fragments":["lot"]},{"Key":"lot better","Fragments":["than"]},{"Key":"than mine","Fragments":["(found"]},{"Key":"mine (found","Fragments":["it"]},{"Key":"(found it","Fragments":["on"]},{"Key":"can compare","Fragments":["`Vec\u003cchar\u003e`"]},{"Key":"compare `Vec\u003cchar\u003e`","Fragments":["with"]},{"Key":"`Vec\u003cchar\u003e` with","Fragments":["`Vec\u003cchar\u003e`"]},{"Key":"with `Vec\u003cchar\u003e`","Fragments":["and"]},{"Key":"`Vec\u003cchar\u003e` and","Fragments":["don't"]},{"Key":"and don't","Fragments":["need"]},{"Key":"convert back","Fragments":["to"]},{"Key":"a string","Fragments":["in","to","slice","that","i.e"]},{"Key":"I pretty","Fragments":["much"]},{"Key":"much copied","Fragments":["yours"]},{"Key":"copied yours","Fragments":["from"]},{"Key":"yours from","Fragments":["memory:"]},{"Key":"* Instead","Fragments":["of","of"]},{"Key":"a nested","Fragments":["`if`"]},{"Key":"nested `if`","Fragments":["you"]},{"Key":"`if` you","Fragments":["could"]},{"Key":"could express","Fragments":["the"]},{"Key":"thing as","Fragments":["a"]},{"Key":"* explicit","Fragments":["return"]},{"Key":"return is","Fragments":["discouraged,","not","nice"]},{"Key":"* `if","Fragments":["cond","cond"]},{"Key":" Option","Fragments":["has"]},{"Key":"Option has","Fragments":["a"]},{"Key":"map function","Fragments":["that","on","on"]},{"Key":"in area","Fragments":["code."]},{"Key":"You left","Fragments":["some"]},{"Key":"left some","Fragments":["debug"]},{"Key":"some debug","Fragments":["statements"]},{"Key":"debug statements","Fragments":["behind"]},{"Key":"statements behind","Fragments":["on"]},{"Key":"behind on","Fragments":["lines"]},{"Key":"lines 5","Fragments":["and"]},{"Key":"5 and","Fragments":["7."]},{"Key":"Thanks, I","Fragments":["was"]},{"Key":"was looking","Fragments":["for"]},{"Key":"the functor/fmap","Fragments":["equivalent."]},{"Key":"really agree","Fragments":["with"]},{"Key":"with @odie","Fragments":["on"]},{"Key":"@odie on","Fragments":["the"]},{"Key":"the naming;","Fragments":["it"]},{"Key":"naming; it","Fragments":["makes"]},{"Key":"the resulting","Fragments":["function","code"]},{"Key":"resulting function","Fragments":["really,"]},{"Key":"function really,","Fragments":["*really*"]},{"Key":"really, *really*","Fragments":["readable."]},{"Key":"you named","Fragments":["the"]},{"Key":"named the","Fragments":["conditions!"]},{"Key":"I've just","Fragments":["started"]},{"Key":"just started","Fragments":["learning"]},{"Key":"a hard","Fragments":["time"]},{"Key":"hard time","Fragments":["with","getting"]},{"Key":"time with","Fragments":["it."]},{"Key":"it. The","Fragments":["time--in"]},{"Key":"The time--in","Fragments":["hours--it"]},{"Key":"time--in hours--it","Fragments":["took"]},{"Key":"hours--it took","Fragments":["for"]},{"Key":"took for","Fragments":["me"]},{"Key":"exercise working","Fragments":["proves"]},{"Key":"working proves","Fragments":["it."]},{"Key":"proves it.","Fragments":["Oddly-behaved"]},{"Key":"it. Oddly-behaved","Fragments":["references,"]},{"Key":"Oddly-behaved references,","Fragments":["borrowing,"]},{"Key":"references, borrowing,","Fragments":["lifetimes,"]},{"Key":"borrowing, lifetimes,","Fragments":["and"]},{"Key":"and various","Fragments":["other"]},{"Key":"various other","Fragments":["aspects"]},{"Key":"other aspects","Fragments":["of"]},{"Key":"aspects of","Fragments":["the"]},{"Key":"language are","Fragments":["just"]},{"Key":"are just","Fragments":["different"]},{"Key":"just different","Fragments":["enough"]},{"Key":"different enough","Fragments":["from"]},{"Key":"enough from","Fragments":["other"]},{"Key":"from other","Fragments":["languages"]},{"Key":"other languages","Fragments":["to","I"]},{"Key":"languages to","Fragments":["require"]},{"Key":"to require","Fragments":["a"]},{"Key":"of cognitive","Fragments":["gymnastics."]},{"Key":"cognitive gymnastics.","Fragments":["The"]},{"Key":"gymnastics. The","Fragments":["error"]},{"Key":"The error","Fragments":["messages"]},{"Key":"messages that","Fragments":["the"]},{"Key":"compiler spits","Fragments":["out"]},{"Key":"spits out","Fragments":["don't"]},{"Key":"out don't","Fragments":["help."]},{"Key":"don't help.","Fragments":["(Gnarly"]},{"Key":"help. (Gnarly","Fragments":["C++"]},{"Key":"(Gnarly C++","Fragments":["error"]},{"Key":"C++ error","Fragments":["messages"]},{"Key":"messages are","Fragments":["generally","still"]},{"Key":"are generally","Fragments":["more"]},{"Key":"generally more","Fragments":["comprehensible"]},{"Key":"more comprehensible","Fragments":["to"]},{"Key":"comprehensible to","Fragments":["me"]},{"Key":"me than","Fragments":["rustc's"]},{"Key":"than rustc's","Fragments":["messages.)"]},{"Key":"call `.to_string()`","Fragments":["directly"]},{"Key":"`.to_string()` directly","Fragments":["on"]},{"Key":"a `\u0026str`.","Fragments":["There"]},{"Key":"`\u0026str`. There","Fragments":["is"]},{"Key":"explicitly convert","Fragments":["it"]},{"Key":" @braden","Fragments":["Thanks!"]},{"Key":"@braden Thanks!","Fragments":["The"]},{"Key":"Thanks! The","Fragments":["difference"]},{"Key":"The difference","Fragments":["between"]},{"Key":"`String` is","Fragments":["tripping"]},{"Key":"is tripping","Fragments":["me"]},{"Key":"tripping me","Fragments":["up"]},{"Key":"me up","Fragments":["quite"]},{"Key":"up quite","Fragments":["a"]},{"Key":"a bit.","Fragments":["It's"]},{"Key":"bit. It's","Fragments":["nice"]},{"Key":"It's nice","Fragments":["to"]},{"Key":"to know","Fragments":["that","if","whether"]},{"Key":"don't always","Fragments":["have"]},{"Key":"convert from","Fragments":["one"]},{"Key":"from one","Fragments":["to"]},{"Key":"very odd,","Fragments":["quirky,"]},{"Key":"odd, quirky,","Fragments":["and"]},{"Key":"quirky, and","Fragments":["unique--not"]},{"Key":"and unique--not","Fragments":["to"]},{"Key":"unique--not to","Fragments":["mention"]},{"Key":"to mention","Fragments":["frustrating--language,"]},{"Key":"mention frustrating--language,","Fragments":["but"]},{"Key":"frustrating--language, but","Fragments":["I'm"]},{"Key":"still compelled","Fragments":["to"]},{"Key":"compelled to","Fragments":["understand"]},{"Key":"understand it","Fragments":["whereas"]},{"Key":"it whereas","Fragments":["with"]},{"Key":"whereas with","Fragments":["other"]},{"Key":"languages I","Fragments":["would"]},{"Key":"have given","Fragments":["up"]},{"Key":"given up","Fragments":["by"]},{"Key":"up by","Fragments":["now."]},{"Key":"by now.","Fragments":["I"]},{"Key":"now. I","Fragments":["do"]},{"Key":"do feel","Fragments":["like"]},{"Key":"like I'm","Fragments":["slowly"]},{"Key":"slowly making","Fragments":["some"]},{"Key":"making some","Fragments":["headway"]},{"Key":"some headway","Fragments":["with"]},{"Key":"headway with","Fragments":["reference"]},{"Key":"with reference","Fragments":["values"]},{"Key":"reference values","Fragments":["and"]},{"Key":"and borrowing","Fragments":["as"]},{"Key":"borrowing as","Fragments":["I"]},{"Key":"on these","Fragments":["exercises."]},{"Key":"these exercises.","Fragments":["The"]},{"Key":"exercises. The","Fragments":["compiler"]},{"Key":"compiler error","Fragments":["messages"]},{"Key":"still often","Fragments":["a"]},{"Key":"often a","Fragments":["mystery"]},{"Key":"a mystery","Fragments":["to"]},{"Key":"mystery to","Fragments":["me,"]},{"Key":" Others","Fragments":["seem"]},{"Key":"Others seem","Fragments":["to"]},{"Key":"be confident","Fragments":["that"]},{"Key":"confident that","Fragments":["this"]},{"Key":"correct, so","Fragments":["I'm"]},{"Key":"going with","Fragments":["it."]},{"Key":"explicit return.","Fragments":["Still"]},{"Key":"return. Still","Fragments":["generally"]},{"Key":"Still generally","Fragments":["way"]},{"Key":"generally way","Fragments":["better"]},{"Key":"way better","Fragments":["than"]},{"Key":"than what","Fragments":["I"]},{"Key":"If this","Fragments":["were"]},{"Key":"this were","Fragments":["production"]},{"Key":"were production","Fragments":["code"]},{"Key":"would leave","Fragments":["a"]},{"Key":"with some","Fragments":["explanation","matching."]},{"Key":"explanation of","Fragments":["the"]},{"Key":"the maths","Fragments":["that"]},{"Key":"maths that","Fragments":["means"]},{"Key":"that means","Fragments":["you","I"]},{"Key":"numbers, if","Fragments":["nothing"]},{"Key":"if nothing","Fragments":["else"]},{"Key":"nothing else","Fragments":["it"]},{"Key":"else it","Fragments":["would"]},{"Key":"would let","Fragments":["the"]},{"Key":"reader learn","Fragments":["some"]},{"Key":"learn some","Fragments":["maths!","maths!","rust"]},{"Key":"not convinced:","Fragments":["the"]},{"Key":"convinced: the","Fragments":["function"]},{"Key":"is clearly","Fragments":["named,"]},{"Key":"clearly named,","Fragments":["there"]},{"Key":"named, there","Fragments":["are"]},{"Key":"are reasonable","Fragments":["tests,"]},{"Key":"reasonable tests,","Fragments":["and"]},{"Key":"tests, and","Fragments":["anyone"]},{"Key":"and anyone","Fragments":["can"]},{"Key":"anyone can","Fragments":["google"]},{"Key":"can google","Fragments":["if"]},{"Key":"google if","Fragments":["they"]},{"Key":"the formula","Fragments":["and"]},{"Key":"formula and","Fragments":["want"]},{"Key":"and want","Fragments":["to"]},{"Key":"way than```or_insert(0)```,","Fragments":["which"]},{"Key":"than```or_insert(0)```, which","Fragments":["looks"]},{"Key":"which looks","Fragments":["unnecessary","to","exactly"]},{"Key":"looks unnecessary","Fragments":["given"]},{"Key":"unnecessary given","Fragments":["you've"]},{"Key":"given you've","Fragments":["already"]},{"Key":"you've already","Fragments":["put"]},{"Key":"already put","Fragments":["0's"]},{"Key":"put 0's","Fragments":["in"]},{"Key":"0's in","Fragments":["the"]},{"Key":"map in","Fragments":["```init```?","the"]},{"Key":"have much","Fragments":["to"]},{"Key":"say about","Fragments":["this..."]},{"Key":"It's iterating","Fragments":["over"]},{"Key":"iterating over","Fragments":["two","`inputs`","a"]},{"Key":"over two","Fragments":["strings,"]},{"Key":"two strings,","Fragments":["incrementing"]},{"Key":"strings, incrementing","Fragments":["a"]},{"Key":"incrementing a","Fragments":["counter"]},{"Key":"counter for","Fragments":["each"]},{"Key":"I opted","Fragments":["for","for"]},{"Key":"for brevity","Fragments":["over"]},{"Key":"brevity over","Fragments":["readability"]},{"Key":"over readability","Fragments":["for"]},{"Key":"readability for","Fragments":["the"]},{"Key":"the default","Fragments":["returns."]},{"Key":"I *think*","Fragments":["that"]},{"Key":"*think* that","Fragments":["'monkey"]},{"Key":"that 'monkey","Fragments":["patching'"]},{"Key":"'monkey patching'","Fragments":["built-ins"]},{"Key":"patching' built-ins","Fragments":["like"]},{"Key":"built-ins like","Fragments":["this"]},{"Key":"the [Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html)","Fragments":["trait,"]},{"Key":"[Integer](http://doc.rust-lang.org/num/num/integer/trait.Integer.html) trait,","Fragments":["but"]},{"Key":"trait, but","Fragments":["I"]},{"Key":"external libs,","Fragments":["it"]},{"Key":"libs, it","Fragments":["implements"]},{"Key":"it implements","Fragments":["a"]},{"Key":"implements a","Fragments":["`multiple_of`"]},{"Key":"a `multiple_of`","Fragments":["method"]},{"Key":"`multiple_of` method","Fragments":["which"]},{"Key":"method which","Fragments":["is","requires","you"]},{"Key":"is what","Fragments":["you"]},{"Key":"want I","Fragments":["think."]},{"Key":"see monkey","Fragments":["patching"]},{"Key":"monkey patching","Fragments":["here."]},{"Key":"had restricted","Fragments":["the"]},{"Key":"restricted the","Fragments":["types"]},{"Key":"the types","Fragments":["for"]},{"Key":"for `IsDivisible`","Fragments":["to"]},{"Key":"`IsDivisible` to","Fragments":["things"]},{"Key":"are already","Fragments":["`Rem`"]},{"Key":"already `Rem`","Fragments":["and"]},{"Key":"`Rem` and","Fragments":["`Div`."]},{"Key":"might pass","Fragments":["tests,"]},{"Key":"pass tests,","Fragments":["it"]},{"Key":"tests, it","Fragments":["doesn't"]},{"Key":"doesn't acknowledge","Fragments":["the"]},{"Key":"acknowledge the","Fragments":["common"]},{"Key":"the common","Fragments":["notion"]},{"Key":"common notion","Fragments":["of"]},{"Key":"notion of","Fragments":["leap"]},{"Key":"of leap","Fragments":["year."]},{"Key":"/// Leap","Fragments":["year"]},{"Key":"Leap year","Fragments":["is"]},{"Key":"year is","Fragments":["defined","evenly","also"]},{"Key":"defined by","Fragments":["three"]},{"Key":"by three","Fragments":["criteria:"]},{"Key":"/// The","Fragments":["year","year"]},{"Key":"The year","Fragments":["is","is"]},{"Key":"is evenly","Fragments":["divisible"]},{"Key":"evenly divisible","Fragments":["by","by"]},{"Key":"/// If","Fragments":["the"]},{"Key":"year can","Fragments":["be"]},{"Key":"be evenly","Fragments":["divided"]},{"Key":"evenly divided","Fragments":["by"]},{"Key":"divided by","Fragments":["100,"]},{"Key":"100, it","Fragments":["is"]},{"Key":"leap year,","Fragments":["unless;"]},{"Key":"also evenly","Fragments":["divisible"]},{"Key":"400. Then","Fragments":["it"]},{"Key":"Then it","Fragments":["is"]},{"Key":"Oh, yeah,","Fragments":["I"]},{"Key":"totally misread","Fragments":["the"]},{"Key":"misread the","Fragments":["readme."]},{"Key":"the readme.","Fragments":["Updated."]},{"Key":"a `anagrams`","Fragments":["which","vector","which","vector","which","vector"]},{"Key":"`anagrams` which","Fragments":["starts","starts","starts"]},{"Key":"to `anagrams`","Fragments":["based","based","based"]},{"Key":"`anagrams` based","Fragments":["on","on","on"]},{"Key":"return `anagrams`","Fragments":["right","right","right"]},{"Key":"`anagrams` right","Fragments":["after","after","after"]},{"Key":"`anagrams` vector","Fragments":["and","and","and"]},{"Key":"code simpler","Fragments":["(easier","(easier","(easier","(easier","(easier","(easier","(easier","(easier"]},{"Key":"simpler (easier","Fragments":["to","to","to","to","to","to","to","to"]},{"Key":"(easier to","Fragments":["write,","write,","write,","write,","write,","write,","write,","write,"]},{"Key":"to write,","Fragments":["easier","easier","easier","easier","easier","easier","easier","easier"]},{"Key":"write, easier","Fragments":["to","to","to","to","to","to","to","to"]},{"Key":"Using u8","Fragments":["throws"]},{"Key":"u8 throws","Fragments":["overflow"]},{"Key":"throws overflow","Fragments":["errors,"]},{"Key":"overflow errors,","Fragments":["but"]},{"Key":"errors, but","Fragments":["given"]},{"Key":"but given","Fragments":["the"]},{"Key":"suite it","Fragments":["seems"]},{"Key":"that overflowing","Fragments":["for"]},{"Key":"overflowing for","Fragments":["too-large"]},{"Key":"for too-large","Fragments":["numbers"]},{"Key":"too-large numbers","Fragments":["is"]},{"Key":"numbers is","Fragments":["the"]},{"Key":"correct behaviour","Fragments":["here."]},{"Key":"be necessary","Fragments":["to"]},{"Key":"copy Allergen","Fragments":["on"]},{"Key":"Allergen on","Fragments":["line"]},{"Key":"line 6,","Fragments":["but"]},{"Key":"6, but","Fragments":["the"]},{"Key":"the alternative","Fragments":["seems"]},{"Key":"alternative seems","Fragments":["to"]},{"Key":"be unsafe","Fragments":["casting"]},{"Key":"unsafe casting","Fragments":[":(."]},{"Key":"explicitly enumerate","Fragments":["the"]},{"Key":"enumerate the","Fragments":["Allergen","values"]},{"Key":"Allergen enum,","Fragments":["but"]},{"Key":"enum, but","Fragments":["that"]},{"Key":"a limitation","Fragments":["of"]},{"Key":"limitation of","Fragments":["the"]},{"Key":"crate which","Fragments":["provides"]},{"Key":"macro allowing","Fragments":["listing"]},{"Key":"allowing listing","Fragments":["values"]},{"Key":"listing values","Fragments":["of"]},{"Key":"Check custom_derive","Fragments":["and","and"]},{"Key":"enum_derive for","Fragments":["such"]},{"Key":"As one","Fragments":["of"]},{"Key":"my very","Fragments":["first"]},{"Key":"very first","Fragments":["snippets"]},{"Key":"first snippets","Fragments":["of"]},{"Key":"snippets of","Fragments":["Rust,"]},{"Key":"of Rust,","Fragments":["I"]},{"Key":"as though","Fragments":["it"]},{"Key":"shows rather","Fragments":["clearly"]},{"Key":"rather clearly","Fragments":["that"]},{"Key":"clearly that","Fragments":["I"]},{"Key":"haven't done","Fragments":["much/anything"]},{"Key":"done much/anything","Fragments":["in"]},{"Key":"much/anything in","Fragments":["Rust"]},{"Key":"its idomatic","Fragments":["way."]},{"Key":"I'm curiously","Fragments":["going"]},{"Key":"curiously going","Fragments":["to"]},{"Key":"at more","Fragments":["idiomatic"]},{"Key":"idiomatic approaches","Fragments":["that"]},{"Key":"approaches that","Fragments":["shows"]},{"Key":"that shows","Fragments":["me"]},{"Key":"shows me","Fragments":["some"]},{"Key":"the magic","Fragments":["that"]},{"Key":"magic that","Fragments":["comes"]},{"Key":"that comes","Fragments":["with","down"]},{"Key":"comes with","Fragments":["Rust,"]},{"Key":"with Rust,","Fragments":["even"]},{"Key":"Rust, even","Fragments":["though"]},{"Key":"even though","Fragments":["for"]},{"Key":"though for","Fragments":["this"]},{"Key":"this snippet","Fragments":["it's"]},{"Key":"snippet it's","Fragments":["not"]},{"Key":"not exactly","Fragments":["a"]},{"Key":"exactly a","Fragments":["big"]},{"Key":"big issue.","Fragments":[":)"]},{"Key":"You only","Fragments":["need","need"]},{"Key":"lowercase and","Fragments":["sort"]},{"Key":"sort ```word```","Fragments":["once,"]},{"Key":"```word``` once,","Fragments":["but"]},{"Key":"once, but","Fragments":["you"]},{"Key":"are doing","Fragments":["it","with"]},{"Key":"it once","Fragments":["for"]},{"Key":"Since `==`","Fragments":["returns"]},{"Key":"`==` returns","Fragments":["a"]},{"Key":"a `bool`,","Fragments":["you"]},{"Key":"`bool`, you","Fragments":["can"]},{"Key":"can actually","Fragments":["just"]},{"Key":"actually just","Fragments":["combine"]},{"Key":"just combine","Fragments":["the"]},{"Key":" now","Fragments":["more"]},{"Key":"now more","Fragments":["functional!"]},{"Key":"of ```unreachable!```","Fragments":["on"]},{"Key":"```unreachable!``` on","Fragments":["line"]},{"Key":"line 7,","Fragments":["panic"]},{"Key":"7, panic","Fragments":["with"]},{"Key":"panic with","Fragments":["a"]},{"Key":"a message","Fragments":["saying"]},{"Key":"message saying","Fragments":["which"]},{"Key":"saying which","Fragments":["invalid"]},{"Key":"which invalid","Fragments":["character"]},{"Key":"invalid character","Fragments":["was"]},{"Key":"character was","Fragments":["received."]},{"Key":"Yes panic","Fragments":["would"]},{"Key":"panic would","Fragments":["be"]},{"Key":"be better.","Fragments":["My"]},{"Key":"better. My","Fragments":["assumption"]},{"Key":"My assumption","Fragments":["was"]},{"Key":"assumption was","Fragments":["that"]},{"Key":"the dna","Fragments":["strand"]},{"Key":"dna strand","Fragments":["is"]},{"Key":"strand is","Fragments":["validated"]},{"Key":"is validated","Fragments":["and"]},{"Key":"validated and","Fragments":["so"]},{"Key":"we should","Fragments":["never"]},{"Key":"never hit","Fragments":["the"]},{"Key":"hit the","Fragments":["unreachable"]},{"Key":"the unreachable","Fragments":["case."]},{"Key":"applied what","Fragments":["@brannon"]},{"Key":"what @brannon","Fragments":["suggested"]},{"Key":"@brannon suggested","Fragments":["to"]},{"Key":"simply the","Fragments":["last"]},{"Key":"use ```chars().nth(0)```","Fragments":["instead"]},{"Key":"```chars().nth(0)``` instead","Fragments":["of"]},{"Key":"of ```as_bytes()```","Fragments":["in"]},{"Key":"```as_bytes()``` in","Fragments":["line"]},{"Key":"8 -","Fragments":["I"]},{"Key":"that should","Fragments":["be"]},{"Key":"use Python","Fragments":["style"]},{"Key":"Python style","Fragments":["notation"]},{"Key":"style notation","Fragments":["for"]},{"Key":"notation for","Fragments":["slicing","one."]},{"Key":"for slicing","Fragments":["strings,"]},{"Key":"slicing strings,","Fragments":["e.g."]},{"Key":"strings, e.g.","Fragments":["ph[..3]"]},{"Key":"e.g. ph[..3]","Fragments":["which"]},{"Key":"ph[..3] which","Fragments":["obviates"]},{"Key":"which obviates","Fragments":["the"]},{"Key":"obviates the","Fragments":["need"]},{"Key":"the slice_chars","Fragments":["feature."]},{"Key":" Absolutely","Fragments":["right."]},{"Key":"Absolutely right.","Fragments":["It"]},{"Key":"right. It","Fragments":["should"]},{"Key":"It should","Fragments":["have"]},{"Key":"been `ph.chars().first()","Fragments":["=="]},{"Key":"`ph.chars().first() ==","Fragments":["'1'`."]},{"Key":"== '1'`.","Fragments":["The"]},{"Key":"'1'`. The","Fragments":["reason"]},{"Key":"The reason","Fragments":["I","I"]},{"Key":"reason I","Fragments":["went","added","felt"]},{"Key":"the bytes","Fragments":["solution"]},{"Key":"bytes solution","Fragments":["is"]},{"Key":"the time,","Fragments":["I"]},{"Key":"time, I","Fragments":["did"]},{"Key":"that single","Fragments":["quote"]},{"Key":"single quote","Fragments":["represents"]},{"Key":"quote represents","Fragments":["a"]},{"Key":"represents a","Fragments":["char."]},{"Key":"a char.","Fragments":["So"]},{"Key":"char. So","Fragments":["this"]},{"Key":"the simplest","Fragments":["way","to"]},{"Key":"simplest way","Fragments":["to"]},{"Key":"the slicing","Fragments":["tip."]},{"Key":"slicing tip.","Fragments":["I"]},{"Key":"tip. I","Fragments":["didn't"]},{"Key":"it worked","Fragments":["on"]},{"Key":"on strings","Fragments":["as"]},{"Key":"strings as","Fragments":["well."]},{"Key":"can set","Fragments":["each"]},{"Key":"set each","Fragments":["member"]},{"Key":"value, so","Fragments":["the"]},{"Key":"map could","Fragments":["be"]},{"Key":" From","Fragments":["stackoverflow,"]},{"Key":"From stackoverflow,","Fragments":["there"]},{"Key":"stackoverflow, there","Fragments":["doesn't"]},{"Key":"there doesn't","Fragments":["look"]},{"Key":"doesn't look","Fragments":["to"]},{"Key":"enum out","Fragments":["of"]},{"Key":"the box.","Fragments":["Writing"]},{"Key":"box. Writing","Fragments":["your"]},{"Key":"Writing your","Fragments":["own"]},{"Key":"own macro","Fragments":["might"]},{"Key":"macro might","Fragments":["be"]},{"Key":" Thanks.","Fragments":["It"]},{"Key":"Thanks. It","Fragments":["felt"]},{"Key":"It felt","Fragments":["wrong"]},{"Key":"felt wrong","Fragments":["like"]},{"Key":"wrong like","Fragments":["this,"]},{"Key":"like this,","Fragments":["but"]},{"Key":"could do","Fragments":["that","some"]},{"Key":"that since","Fragments":["Rust"]},{"Key":"Rust enums","Fragments":["are"]},{"Key":"enums are","Fragments":["much"]},{"Key":"are much","Fragments":["more"]},{"Key":"more sophisticated.","Fragments":["Also,"]},{"Key":"sophisticated. Also,","Fragments":["seems"]},{"Key":"Also, seems","Fragments":["like"]},{"Key":"that there's","Fragments":["no"]},{"Key":"enum other","Fragments":["than"]},{"Key":"than defining","Fragments":["a"]},{"Key":"separate array?","Fragments":["Maybe"]},{"Key":"array? Maybe","Fragments":["a"]},{"Key":"macro that","Fragments":["would"]},{"Key":"would wrap","Fragments":["around"]},{"Key":"wrap around","Fragments":["the"]},{"Key":"the definition","Fragments":["of"]},{"Key":"enum could","Fragments":["be"]},{"Key":"written to","Fragments":["hide"]},{"Key":"to hide","Fragments":["the"]},{"Key":"the duplication","Fragments":["though"]},{"Key":"duplication though","Fragments":["I"]},{"Key":"how would","Fragments":["that"]},{"Key":"would that","Fragments":["look."]},{"Key":" Comments","Fragments":["are"]},{"Key":"Comments are","Fragments":["usually"]},{"Key":"placed before","Fragments":["what"]},{"Key":"before what","Fragments":["they"]},{"Key":"what they","Fragments":["are","are"]},{"Key":"are documenting.","Fragments":["In"]},{"Key":"documenting. In","Fragments":["this"]},{"Key":"be placed","Fragments":["on"]},{"Key":"on top","Fragments":["of"]},{"Key":"a `words`","Fragments":["which","vector"]},{"Key":"`words` which","Fragments":["starts"]},{"Key":"over `pool`","Fragments":["and"]},{"Key":"`pool` and","Fragments":["possibly"]},{"Key":"`words` based","Fragments":["on"]},{"Key":"return `words`","Fragments":["right"]},{"Key":"`words` right","Fragments":["after"]},{"Key":"`words` vector","Fragments":["and"]},{"Key":"a `results`","Fragments":["which","vector"]},{"Key":"`results` which","Fragments":["starts"]},{"Key":"to `results`","Fragments":["based"]},{"Key":"`results` based","Fragments":["on"]},{"Key":"return `results`","Fragments":["right"]},{"Key":"`results` right","Fragments":["after"]},{"Key":"`results` vector","Fragments":["and"]},{"Key":"Ah, I","Fragments":["didn't","forgot","was"]},{"Key":"find count...","Fragments":["I"]},{"Key":"count... I","Fragments":["think"]},{"Key":"I'll use","Fragments":["that"]},{"Key":"The final","Fragments":["version"]},{"Key":"final version","Fragments":["and"]},{"Key":"version and","Fragments":["my"]},{"Key":"first ever","Fragments":["struct"]},{"Key":"ever struct","Fragments":["in"]},{"Key":"struct in","Fragments":["Rust."]},{"Key":"Rust. I","Fragments":["feel"]},{"Key":"as pretty","Fragments":["as"]},{"Key":"pretty as","Fragments":["it"]},{"Key":"be, but","Fragments":["this"]},{"Key":"best version.","Fragments":["The"]},{"Key":"version. The","Fragments":["re-computed"]},{"Key":"The re-computed","Fragments":["letter"]},{"Key":"re-computed letter","Fragments":["counts"]},{"Key":"letter counts","Fragments":["was","in"]},{"Key":"counts was","Fragments":["getting"]},{"Key":"was getting","Fragments":["on"]},{"Key":"getting on","Fragments":["my"]},{"Key":"my nerves,","Fragments":["as"]},{"Key":"nerves, as","Fragments":["I"]},{"Key":"wouldn't accept","Fragments":["that"]},{"Key":"accept that","Fragments":["kind"]},{"Key":"that kind","Fragments":["of"]},{"Key":"of solution","Fragments":["in"]},{"Key":"solution in","Fragments":["industrial"]},{"Key":"in industrial","Fragments":["code."]},{"Key":"over `candidates`","Fragments":["and","and"]},{"Key":"`candidates` and","Fragments":["possibly","possibly","these"]},{"Key":"simplify `if","Fragments":["A"]},{"Key":"`if A","Fragments":["{"]},{"Key":"A {","Fragments":["false"]},{"Key":"false }","Fragments":["else"]},{"Key":"{ B","Fragments":["}`"]},{"Key":"B }`","Fragments":["to"]},{"Key":"}` to","Fragments":["`!A"]},{"Key":"to `!A","Fragments":["\u0026\u0026"]},{"Key":"`!A \u0026\u0026","Fragments":["B`"]},{"Key":"a `answers`","Fragments":["which","vector"]},{"Key":"`answers` which","Fragments":["starts"]},{"Key":"to `answers`","Fragments":["based"]},{"Key":"`answers` based","Fragments":["on"]},{"Key":"return `answers`","Fragments":["right"]},{"Key":"`answers` right","Fragments":["after"]},{"Key":"`answers` vector","Fragments":["and"]},{"Key":"Thanks, I'll","Fragments":["check"]},{"Key":"I'll check","Fragments":["that"]},{"Key":"check that","Fragments":["out!"]},{"Key":" Wrong","Fragments":["file?"]},{"Key":"Wrong file?","Fragments":["You"]},{"Key":"file? You","Fragments":["are"]},{"Key":"are supposed","Fragments":["to"]},{"Key":"supposed to","Fragments":["submit"]},{"Key":"submit `src/lib.rs`","Fragments":["IIRC."]},{"Key":"Just to","Fragments":["note"]},{"Key":"to note","Fragments":["the"]},{"Key":"note the","Fragments":["compiled"]},{"Key":"the compiled","Fragments":["release"]},{"Key":"compiled release","Fragments":["build"]},{"Key":"release build","Fragments":["file"]},{"Key":"build file","Fragments":["size"]},{"Key":"file size","Fragments":["for","doesn't"]},{"Key":"size for","Fragments":["this"]},{"Key":"this (9676)","Fragments":["is"]},{"Key":"(9676) is","Fragments":["less"]},{"Key":"half of","Fragments":["what"]},{"Key":"of what","Fragments":["\u003ca","does"]},{"Key":"what \u003ca","Fragments":["href=\"http://exercism.io/submissions/e7d4da2f4c224e769488fc1ab22627cc\"\u003emy"]},{"Key":"\u003ca href=\"http://exercism.io/submissions/e7d4da2f4c224e769488fc1ab22627cc\"\u003emy","Fragments":["code\u003c/a\u003e"]},{"Key":"href=\"http://exercism.io/submissions/e7d4da2f4c224e769488fc1ab22627cc\"\u003emy code\u003c/a\u003e","Fragments":["produced"]},{"Key":"code\u003c/a\u003e produced","Fragments":["(20898)!.."]},{"Key":"produced (20898)!..","Fragments":["file"]},{"Key":"(20898)!.. file","Fragments":["size"]},{"Key":"size doesn't","Fragments":["say"]},{"Key":"doesn't say","Fragments":["everything"]},{"Key":"say everything","Fragments":["but"]},{"Key":"everything but","Fragments":["I"]},{"Key":"I much","Fragments":["prefer"]},{"Key":"much prefer","Fragments":["your"]},{"Key":"prefer your","Fragments":["method.","use"]},{"Key":" Same","Fragments":["as","goes","approach"]},{"Key":"Same as","Fragments":["the"]},{"Key":"last iteration,","Fragments":["but"]},{"Key":"but used","Fragments":["```count```"]},{"Key":"used ```count```","Fragments":["which"]},{"Key":"```count``` which","Fragments":["I"]},{"Key":"found in","Fragments":["@yasmeen's"]},{"Key":"in @yasmeen's","Fragments":["solution."]},{"Key":"Very smooth","Fragments":["and"]},{"Key":"smooth and","Fragments":["idiomatic."]},{"Key":"and idiomatic.","Fragments":["Much"]},{"Key":"idiomatic. Much","Fragments":["cleaner"]},{"Key":"Much cleaner","Fragments":["than"]},{"Key":"cleaner than","Fragments":["my","```fold```","the"]},{"Key":"my version.","Fragments":["I'll"]},{"Key":"version. I'll","Fragments":["rewrite"]},{"Key":"I'll rewrite","Fragments":["some"]},{"Key":"rewrite some","Fragments":["of"]},{"Key":"code like","Fragments":["this"]},{"Key":"* In","Fragments":["rust"]},{"Key":"In rust","Fragments":["it"]},{"Key":"rust it","Fragments":["is","might"]},{"Key":"is unusual","Fragments":["to"]},{"Key":"unusual to","Fragments":["use"]},{"Key":"use explicit","Fragments":["`return`s"]},{"Key":"cond {","Fragments":["true"]},{"Key":"`if`s a","Fragments":["single"]},{"Key":"expression might","Fragments":["be"]},{"Key":" One-liners","Fragments":["FTW."]},{"Key":"Yeah since","Fragments":["I"]},{"Key":"I keep","Fragments":["talking"]},{"Key":"keep talking","Fragments":["about"]},{"Key":"talking about","Fragments":["Enumerable"]},{"Key":"about Enumerable","Fragments":["methods"]},{"Key":"Enumerable methods","Fragments":["to"]},{"Key":"methods to","Fragments":["people"]},{"Key":"to people","Fragments":["I"]},{"Key":"people I","Fragments":["figured"]},{"Key":"I figured","Fragments":["maybe"]},{"Key":"figured maybe","Fragments":["that"]},{"Key":"maybe that","Fragments":["means"]},{"Key":"means I","Fragments":["should"]},{"Key":"`fold` in","Fragments":["`letter_frequencies`,"]},{"Key":"in `letter_frequencies`,","Fragments":["but"]},{"Key":"`letter_frequencies`, but","Fragments":["I'm"]},{"Key":"100% convinced","Fragments":["it"]},{"Key":"convinced it","Fragments":["makes"]},{"Key":"makes things","Fragments":["better."]},{"Key":"things better.","Fragments":["But"]},{"Key":"better. But","Fragments":["it's","I"]},{"Key":"But it's","Fragments":["there"]},{"Key":"it's there","Fragments":["to"]},{"Key":"there to","Fragments":["consider.","learn"]},{"Key":"about having","Fragments":["to"]},{"Key":"the `.map(|c|","Fragments":["*c)`."]},{"Key":"`.map(|c| *c)`.","Fragments":["I"]},{"Key":"*c)`. I","Fragments":["had"]},{"Key":"my solutions","Fragments":["for"]},{"Key":"solutions for","Fragments":["another","this"]},{"Key":"for another","Fragments":["problem"]},{"Key":"another problem","Fragments":["too,"]},{"Key":"problem too,","Fragments":["and"]},{"Key":"too, and","Fragments":["I"]},{"Key":"I looked","Fragments":["at"]},{"Key":"at others","Fragments":["solutions"]},{"Key":"others solutions","Fragments":["and"]},{"Key":"solutions and","Fragments":["found"]},{"Key":"found `.cloned()`,","Fragments":["and"]},{"Key":"`.cloned()`, and","Fragments":["[Iterator"]},{"Key":"and [Iterator","Fragments":["docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)"]},{"Key":"[Iterator docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned)","Fragments":["say"]},{"Key":"docs](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned) say","Fragments":["it"]},{"Key":"it serves","Fragments":["the"]},{"Key":"serves the","Fragments":["same"]},{"Key":"same purpose","Fragments":["of"]},{"Key":" (Oh,","Fragments":["I"]},{"Key":"(Oh, I","Fragments":["see"]},{"Key":"see you're","Fragments":["already"]},{"Key":"you're already","Fragments":["using"]},{"Key":"already using","Fragments":["`cloned()`"]},{"Key":"`cloned()` on","Fragments":["line"]},{"Key":"line 27","Fragments":["as"]},{"Key":"27 as","Fragments":["well)"]},{"Key":"last thought","Fragments":["would"]},{"Key":"thought would","Fragments":["be"]},{"Key":"be possible","Fragments":["that","to","with","to","to"]},{"Key":"possible that","Fragments":["you"]},{"Key":"return `Vec\u003cchar\u003e`","Fragments":["instead"]},{"Key":"`Vec\u003cchar\u003e` instead","Fragments":["of"]},{"Key":"of `String`","Fragments":["from"]},{"Key":"`String` from","Fragments":["`alphasort`"]},{"Key":"from `alphasort`","Fragments":["(and"]},{"Key":"`alphasort` (and","Fragments":["modify"]},{"Key":"(and modify","Fragments":["`alphagram`"]},{"Key":"modify `alphagram`","Fragments":["accordingly"]},{"Key":"`alphagram` accordingly","Fragments":["of"]},{"Key":"accordingly of","Fragments":["course)."]},{"Key":"of course).","Fragments":["I"]},{"Key":"course). I","Fragments":["don't"]},{"Key":"a strong","Fragments":["reason"]},{"Key":"strong reason","Fragments":["to"]},{"Key":"to prefer","Fragments":["one"]},{"Key":"prefer one","Fragments":["or"]},{"Key":" nice","Fragments":["fix","way","concise"]},{"Key":"nice fix","Fragments":["on"]},{"Key":"fix on","Fragments":["the"]},{"Key":"the gen_range","Fragments":["upper"]},{"Key":"gen_range upper","Fragments":["bound."]},{"Key":"upper bound.","Fragments":["++"]},{"Key":"Very readable","Fragments":["and"]},{"Key":"Could accomplish","Fragments":["the"]},{"Key":"accomplish the","Fragments":["same"]},{"Key":"thing with","Fragments":["some"]},{"Key":" @royal","Fragments":["I"]},{"Key":"@royal I","Fragments":["think"]},{"Key":"think some","Fragments":["of"]},{"Key":"this do","Fragments":["use"]},{"Key":"do use","Fragments":["matching."]},{"Key":"use matching.","Fragments":["They"]},{"Key":"matching. They","Fragments":["look"]},{"Key":"They look","Fragments":["pretty"]},{"Key":"look pretty","Fragments":["crazy,"]},{"Key":"pretty crazy,","Fragments":["though!"]},{"Key":"crazy, though!","Fragments":["Is"]},{"Key":"though! Is","Fragments":["that"]},{"Key":"the sort","Fragments":["of"]},{"Key":"you had","Fragments":["in"]},{"Key":"had in","Fragments":["mind?"]},{"Key":"Nice exercise..","Fragments":["encouraging"]},{"Key":"exercise.. encouraging","Fragments":["to"]},{"Key":"encouraging to","Fragments":["have"]},{"Key":"one after","Fragments":["the"]},{"Key":"the battle","Fragments":["that"]},{"Key":"battle that","Fragments":["was"]},{"Key":"The following","Fragments":["could"]},{"Key":"following could","Fragments":["be"]},{"Key":"with `number","Fragments":["%"]},{"Key":"`number %","Fragments":["divider"]},{"Key":"% divider","Fragments":["==","{"]},{"Key":"divider ==","Fragments":["0`,"]},{"Key":"== 0`,","Fragments":["I"]},{"Key":"0`, I","Fragments":["think"]},{"Key":"`match` statement","Fragments":["is"]},{"Key":"statement is","Fragments":["not"]},{"Key":"really needed","Fragments":["here."]},{"Key":"match number","Fragments":["%"]},{"Key":"number %","Fragments":["divider"]},{"Key":"An unsigned","Fragments":["type"]},{"Key":"unsigned type","Fragments":["would"]},{"Key":"type would","Fragments":["be"]},{"Key":"better here,","Fragments":["everything"]},{"Key":"here, everything","Fragments":["is"]},{"Key":"everything is","Fragments":["positive."]},{"Key":"simple formulae","Fragments":["for"]},{"Key":"for both","Fragments":["arithmetic"]},{"Key":"both arithmetic","Fragments":["progressions"]},{"Key":"arithmetic progressions","Fragments":["and"]},{"Key":"progressions and","Fragments":["sums"]},{"Key":"squares, which","Fragments":["would"]},{"Key":"I'm curious,","Fragments":["is"]},{"Key":"curious, is","Fragments":["there"]},{"Key":"use generics,","Fragments":["or"]},{"Key":"generics, or","Fragments":["templates,"]},{"Key":"or templates,","Fragments":["or"]},{"Key":"templates, or","Fragments":["whatever"]},{"Key":"or whatever","Fragments":["they're"]},{"Key":"whatever they're","Fragments":["called,"]},{"Key":"they're called,","Fragments":["to"]},{"Key":"called, to","Fragments":["work"]},{"Key":"In haskell,","Fragments":["I"]},{"Key":"haskell, I","Fragments":["could"]},{"Key":" sumOfSquares","Fragments":["::","n"]},{"Key":"sumOfSquares ::","Fragments":["Integral"]},{"Key":":: Integral","Fragments":["a"]},{"Key":"Integral a","Fragments":["=\u003e"]},{"Key":"a =\u003e","Fragments":["a"]},{"Key":"=\u003e a","Fragments":["-\u003e"]},{"Key":"a -\u003e","Fragments":["a"]},{"Key":"sumOfSquares n","Fragments":["="]},{"Key":"n =","Fragments":["--"]},{"Key":"= --","Fragments":["Whatever"]},{"Key":"And `sumOfSquares`","Fragments":["would"]},{"Key":"`sumOfSquares` would","Fragments":["work"]},{"Key":"would work","Fragments":["for"]},{"Key":"integer data","Fragments":["type."]},{"Key":"in Rust,","Fragments":["is","but","and"]},{"Key":"Rust, is","Fragments":["there"]},{"Key":"there something","Fragments":["like:"]},{"Key":"fn square_of_sum\u003cN:","Fragments":["Number\u003e(n:"]},{"Key":"square_of_sum\u003cN: Number\u003e(n:","Fragments":["N)"]},{"Key":"Number\u003e(n: N)","Fragments":["-\u003e"]},{"Key":"N) -\u003e","Fragments":["N"]},{"Key":"-\u003e N","Fragments":["{"]},{"Key":" /*","Fragments":["Blah"]},{"Key":"/* Blah","Fragments":["blah"]},{"Key":"Blah blah","Fragments":["blah"]},{"Key":"blah blah","Fragments":["*/"]},{"Key":"So that","Fragments":["`square_of_sum`"]},{"Key":"that `square_of_sum`","Fragments":["could"]},{"Key":"`square_of_sum` could","Fragments":["work"]},{"Key":"could work","Fragments":["for"]},{"Key":"any numeric","Fragments":["type"]},{"Key":"numeric type","Fragments":["(`i32`,"]},{"Key":"type (`i32`,","Fragments":["`u32`,"]},{"Key":"(`i32`, `u32`,","Fragments":["`u64`,"]},{"Key":"`u32`, `u64`,","Fragments":["etc.)?"]},{"Key":"a ```Num```","Fragments":["trait:"]},{"Key":"```Num``` trait:","Fragments":["http://doc.rust-lang.org/num/num/traits/trait.Num.html"]},{"Key":" (I've","Fragments":["not"]},{"Key":"not tried","Fragments":["to"]},{"Key":"The comments","Fragments":["just"]},{"Key":"comments just","Fragments":["repeat"]},{"Key":"just repeat","Fragments":["the"]},{"Key":"repeat the","Fragments":["code,"]},{"Key":"code, I","Fragments":["don't"]},{"Key":"add any","Fragments":["value."]},{"Key":"replace ```n","Fragments":["if"]},{"Key":"```n if","Fragments":["n"]},{"Key":"if n","Fragments":["=="]},{"Key":"== 2","Fragments":["=\u003e"]},{"Key":"2 =\u003e","Fragments":["```"]},{"Key":"=\u003e ```","Fragments":["with"]},{"Key":"``` with","Fragments":["```2```."]},{"Key":"had fewer","Fragments":["cases"]},{"Key":"fewer cases","Fragments":["in"]},{"Key":"cases in","Fragments":["```verse```,"]},{"Key":"in ```verse```,","Fragments":["but"]},{"Key":"```verse```, but","Fragments":["my"]},{"Key":"but my","Fragments":["solution's","main"]},{"Key":"my solution's","Fragments":["a"]},{"Key":"solution's a","Fragments":["little"]},{"Key":"little more","Fragments":["complex,"]},{"Key":"complex, so","Fragments":["it's"]},{"Key":"a trade","Fragments":["off."]},{"Key":" right,","Fragments":["duh!"]},{"Key":"right, duh!","Fragments":["That's"]},{"Key":"duh! That's","Fragments":["a"]},{"Key":"a great","Fragments":["clean"]},{"Key":"great clean","Fragments":["up."]},{"Key":"clean up.","Fragments":["Thanks."]},{"Key":" Quite","Fragments":["a","simple"]},{"Key":"Quite a","Fragments":["bit"]},{"Key":"of duplication","Fragments":["in"]},{"Key":"match guards","Fragments":["might"]},{"Key":"guards might","Fragments":["be"]},{"Key":"simpler just","Fragments":["as"]},{"Key":"lowercase more","Fragments":["times"]},{"Key":"than you","Fragments":["need"]},{"Key":" Besides","Fragments":["not"]},{"Key":"Besides not","Fragments":["knowing"]},{"Key":"not knowing","Fragments":["of"]},{"Key":"knowing of","Fragments":["those"]},{"Key":"those formulas,","Fragments":["the"]},{"Key":"formulas, the","Fragments":["`.fold()`"]},{"Key":"the `.fold()`","Fragments":["approach"]},{"Key":"`.fold()` approach","Fragments":["seems"]},{"Key":"approach seems","Fragments":["more"]},{"Key":"seems more","Fragments":["idiomatic"]},{"Key":"idiomatic to","Fragments":["me."]},{"Key":"u64 is","Fragments":["definitely"]},{"Key":"definitely better","Fragments":["though,"]},{"Key":"better though,","Fragments":["you"]},{"Key":"though, you","Fragments":["expand"]},{"Key":"you expand","Fragments":["the"]},{"Key":"for which","Fragments":["your"]},{"Key":"which your","Fragments":["functions"]},{"Key":"your functions","Fragments":["work,"]},{"Key":"functions work,","Fragments":["and"]},{"Key":"work, and","Fragments":["you"]},{"Key":"and you","Fragments":["state"]},{"Key":"you state","Fragments":["that"]},{"Key":"state that","Fragments":["they"]},{"Key":"are always","Fragments":["positive.","positive."]},{"Key":"u64 instead,","Fragments":["no"]},{"Key":"instead, no","Fragments":["values"]},{"Key":"no values","Fragments":["in"]},{"Key":"Note there","Fragments":["is"]},{"Key":"solution by","Fragments":["using"]},{"Key":"it without","Fragments":["the"]},{"Key":"the sorting,","Fragments":["counting"]},{"Key":"sorting, counting","Fragments":["letter"]},{"Key":"counting letter","Fragments":["frequency"]},{"Key":"letter frequency","Fragments":["instead."]},{"Key":"Yes, that","Fragments":["would"]},{"Key":"be possible.","Fragments":["The"]},{"Key":"possible. The","Fragments":["reason"]},{"Key":"the `struct","Fragments":["Word`"]},{"Key":"`struct Word`","Fragments":["was"]},{"Key":"Word` was","Fragments":["so"]},{"Key":"was so","Fragments":["it","much"]},{"Key":"change the","Fragments":["internal"]},{"Key":"the internal","Fragments":["representation","data"]},{"Key":"internal representation","Fragments":["and"]},{"Key":"representation and","Fragments":["logic"]},{"Key":"and logic","Fragments":["but"]},{"Key":"logic but","Fragments":["keep"]},{"Key":"but keep","Fragments":["the"]},{"Key":"code inside","Fragments":["`anagrams_for`"]},{"Key":"inside `anagrams_for`","Fragments":["the"]},{"Key":"`anagrams_for` the","Fragments":["same."]},{"Key":"exercise in","Fragments":["one"]},{"Key":"line of","Fragments":["code."]},{"Key":"I could,","Fragments":["but","you"]},{"Key":"could, but","Fragments":["I"]},{"Key":"play with","Fragments":["crates","for"]},{"Key":"with crates","Fragments":["and"]},{"Key":"crates and","Fragments":["pattern"]},{"Key":"and pattern","Fragments":["matching."]},{"Key":"still have","Fragments":["no","the"]},{"Key":"no idea","Fragments":["what","how"]},{"Key":"with Lifetimes","Fragments":["and"]},{"Key":"Lifetimes and","Fragments":["Borrowing,"]},{"Key":"and Borrowing,","Fragments":["this"]},{"Key":"Borrowing, this","Fragments":["doesn't"]},{"Key":"this doesn't","Fragments":["work"]},{"Key":"and ```count```","Fragments":["would"]},{"Key":"```count``` would","Fragments":["be"]},{"Key":"be cleaner","Fragments":["than","to"]},{"Key":"than ```fold```","Fragments":["for"]},{"Key":"```fold``` for","Fragments":["the"]},{"Key":"the ```count```","Fragments":["function."]},{"Key":"think `const`","Fragments":["would"]},{"Key":"`const` would","Fragments":["be"]},{"Key":"for `ALLERGENS`","Fragments":["than"]},{"Key":"`ALLERGENS` than","Fragments":["`static`."]},{"Key":"you choose","Fragments":["to","isize?"]},{"Key":"choose to","Fragments":["return"]},{"Key":"a `String`","Fragments":["instead"]},{"Key":"`String` instead","Fragments":["of"]},{"Key":"an `Option\u003cString\u003e`","Fragments":["and"]},{"Key":"`Option\u003cString\u003e` and","Fragments":["thus"]},{"Key":"and thus","Fragments":["unwrap"]},{"Key":"thus unwrap","Fragments":["on"]},{"Key":"unwrap on","Fragments":["line"]},{"Key":" Because","Fragments":["I","of"]},{"Key":"Because I","Fragments":["tested"]},{"Key":"I tested","Fragments":["against"]},{"Key":"tested against","Fragments":["[an"]},{"Key":"against [an","Fragments":["older"]},{"Key":"[an older","Fragments":["version"]},{"Key":"older version","Fragments":["of"]},{"Key":"the tests](https://github.com/exercism/xrust/blob/e2360c8031e9181db4b77fb85395451fa6d6b49b/phone-number/tests/phone-number.rs)","Fragments":["where"]},{"Key":"tests](https://github.com/exercism/xrust/blob/e2360c8031e9181db4b77fb85395451fa6d6b49b/phone-number/tests/phone-number.rs) where","Fragments":["I"]},{"Key":"was required","Fragments":["to"]},{"Key":"required to","Fragments":["return"]},{"Key":"return `\"0000000000\"`","Fragments":["for"]},{"Key":"`\"0000000000\"` for","Fragments":["invalid"]},{"Key":"for invalid","Fragments":["numbers."]},{"Key":"I'm glad","Fragments":["tests"]},{"Key":"glad tests","Fragments":["have"]},{"Key":"tests have","Fragments":["evolved"]},{"Key":"have evolved","Fragments":["and"]},{"Key":"evolved and","Fragments":["I"]},{"Key":"will iterate","Fragments":["when"]},{"Key":"iterate when","Fragments":["I"]},{"Key":"`if`s are","Fragments":["unreadable"]},{"Key":"nice way","Fragments":["to"]},{"Key":"to game","Fragments":["the"]},{"Key":"game the","Fragments":["test"]},{"Key":"In Rust","Fragments":["you","1.2.0,"]},{"Key":"Rust you","Fragments":["can"]},{"Key":"enum elements.","Fragments":["This"]},{"Key":"elements. This","Fragments":["way"]},{"Key":"This way","Fragments":["you"]},{"Key":"way you","Fragments":["wouldn't","would","incorporated"]},{"Key":"you wouldn't","Fragments":["have"]},{"Key":"the numerical","Fragments":["values"]},{"Key":"numerical values","Fragments":["in"]},{"Key":"your match","Fragments":["block,"]},{"Key":"match block,","Fragments":["which"]},{"Key":"block, which","Fragments":["you"]},{"Key":"probably simply","Fragments":["further."]},{"Key":"big deal","Fragments":["for"]},{"Key":"deal for","Fragments":["the"]},{"Key":"a number,","Fragments":["but"]},{"Key":"number, but","Fragments":["there"]},{"Key":"a ```.pow()```","Fragments":["method","method"]},{"Key":"```.pow()``` method","Fragments":["for","you"]},{"Key":"for numbers","Fragments":["that"]},{"Key":"that will","Fragments":["return","automatically"]},{"Key":"will return","Fragments":["the","`false`"]},{"Key":"number raised","Fragments":["to"]},{"Key":"raised to","Fragments":["whatever"]},{"Key":"to whatever","Fragments":["power"]},{"Key":"whatever power","Fragments":["you"]},{"Key":"power you","Fragments":["specify."]},{"Key":"you specify.","Fragments":["For"]},{"Key":"specify. For","Fragments":["example,"]},{"Key":"example, using","Fragments":["this"]},{"Key":"method line","Fragments":["4"]},{"Key":"line 4","Fragments":["would"]},{"Key":"4 would","Fragments":["read"]},{"Key":"read ```sum","Fragments":["+="]},{"Key":"```sum +=","Fragments":["x.pow(2);```"]},{"Key":"can't see","Fragments":["what"]},{"Key":"what advantage","Fragments":["```is_divisible_by_four()"]},{"Key":"advantage ```is_divisible_by_four()","Fragments":["```"]},{"Key":"```is_divisible_by_four() ```","Fragments":["has"]},{"Key":"``` has","Fragments":["over"]},{"Key":"has over","Fragments":["```is_divisible_by(4)```"]},{"Key":"My thoughts","Fragments":["on"]},{"Key":"this are","Fragments":["documented"]},{"Key":"are documented","Fragments":["over"]},{"Key":"documented over","Fragments":["here:"]},{"Key":"over here:","Fragments":["http://designisrefactoring.com/2015/10/02/rust-by-trial-and-error/"]},{"Key":"You call","Fragments":["to"]},{"Key":"in list,","Fragments":["this"]},{"Key":"list, this","Fragments":["is"]},{"Key":"don't actually","Fragments":["like","work","need"]},{"Key":"actually like","Fragments":["this"]},{"Key":"this any","Fragments":["better"]},{"Key":"previous one,","Fragments":["but"]},{"Key":"one, but","Fragments":["at"]},{"Key":"but at","Fragments":["least"]},{"Key":"least I'm","Fragments":["not"]},{"Key":"not allocating","Fragments":["a"]},{"Key":"allocating a","Fragments":["vector."]},{"Key":"could convert","Fragments":["the"]},{"Key":"the ```char```","Fragments":["to"]},{"Key":"```char``` to","Fragments":["a"]},{"Key":"a ```u32```","Fragments":["and"]},{"Key":"```u32``` and","Fragments":["do"]},{"Key":"and do","Fragments":["some"]},{"Key":"some arithmetic","Fragments":["on"]},{"Key":"arithmetic on","Fragments":["it"]},{"Key":"it instead","Fragments":["of"]},{"Key":"the big","Fragments":["```match```."]},{"Key":"also join","Fragments":["the"]},{"Key":"join the","Fragments":["```Option```s"]},{"Key":"the ```Option```s","Fragments":["together"]},{"Key":"```Option```s together","Fragments":["more"]},{"Key":"together more","Fragments":["compactly"]},{"Key":"more compactly","Fragments":["using"]},{"Key":"compactly using","Fragments":["```flat_map```."]},{"Key":"use u64","Fragments":["as"]},{"Key":"u64 as","Fragments":["all"]},{"Key":"as all","Fragments":["values","numbers"]},{"Key":"all values","Fragments":["are","in"]},{"Key":"values are","Fragments":["positive.","all"]},{"Key":"A constant","Fragments":["time"]},{"Key":"solution exists","Fragments":["using"]},{"Key":"exists using","Fragments":["the"]},{"Key":"zip for","Fragments":["a"]},{"Key":"functional style","Fragments":["solution."]},{"Key":"at ```zip```","Fragments":["which"]},{"Key":"```zip``` which","Fragments":["produces"]},{"Key":"which produces","Fragments":["a","owned"]},{"Key":"produces a","Fragments":["tidier","shorter"]},{"Key":"a tidier","Fragments":["solution.","way"]},{"Key":"tidier way","Fragments":["to"]},{"Key":"to update","Fragments":["the","the","it"]},{"Key":"update the","Fragments":["map,","code."]},{"Key":"the map,","Fragments":["using","no?","when"]},{"Key":"map, using","Fragments":["the"]},{"Key":"the ```entry```","Fragments":["method."]},{"Key":"It's likely","Fragments":["faster","to"]},{"Key":"likely faster","Fragments":["to"]},{"Key":"different structure","Fragments":["to"]},{"Key":"structure to","Fragments":["accumulate","get"]},{"Key":"to accumulate","Fragments":["the"]},{"Key":"accumulate the","Fragments":["counts"]},{"Key":"the counts","Fragments":["inside"]},{"Key":"counts inside","Fragments":["the"]},{"Key":"inside the","Fragments":["loop,","struct.","crate"]},{"Key":"the loop,","Fragments":["and"]},{"Key":"loop, and","Fragments":["build"]},{"Key":"can't because","Fragments":["then"]},{"Key":"because then","Fragments":["the","I"]},{"Key":"is Result\u003c\u0026\u0026str,","Fragments":["\u0026str\u003e."]},{"Key":"Result\u003c\u0026\u0026str, \u0026str\u003e.","Fragments":["`name`"]},{"Key":"\u0026str\u003e. `name`","Fragments":["is"]},{"Key":"`name` is","Fragments":["automatically"]},{"Key":"is automatically","Fragments":["derefenced"]},{"Key":"automatically derefenced","Fragments":["here."]},{"Key":"use ```ok_or```","Fragments":["on"]},{"Key":"```ok_or``` on","Fragments":["```Option```"]},{"Key":"on ```Option```","Fragments":["to"]},{"Key":"```Option``` to","Fragments":["convert"]},{"Key":"a ```Result```,","Fragments":["that's"]},{"Key":"```Result```, that's","Fragments":["a"]},{"Key":"that's a","Fragments":["bit","bit","Type","bit"]},{"Key":"match on","Fragments":["line","a"]},{"Key":"code structure","Fragments":["is"]},{"Key":"structure is","Fragments":["good,"]},{"Key":"is good,","Fragments":["here"]},{"Key":"good, here","Fragments":["are"]},{"Key":"here are","Fragments":["a"]},{"Key":"couple hints","Fragments":["to"]},{"Key":"hints to","Fragments":["make"]},{"Key":"converting non-alphanumeric","Fragments":["characters"]},{"Key":"non-alphanumeric characters","Fragments":["to"]},{"Key":"characters to","Fragments":["spaces"]},{"Key":"to spaces","Fragments":["and"]},{"Key":"spaces and","Fragments":["splitting"]},{"Key":"and splitting","Fragments":["on"]},{"Key":"splitting on","Fragments":["spaces"]},{"Key":"on spaces","Fragments":["you"]},{"Key":"spaces you","Fragments":["can"]},{"Key":"can pass","Fragments":["a"]},{"Key":"pass a","Fragments":["closure"]},{"Key":"to `split()`","Fragments":["and"]},{"Key":"`split()` and","Fragments":["split"]},{"Key":"and split","Fragments":["on"]},{"Key":"split on","Fragments":["non-alphanumeric,"]},{"Key":"on non-alphanumeric,","Fragments":["eg."]},{"Key":"non-alphanumeric, eg.","Fragments":[":"]},{"Key":"for word","Fragments":["in"]},{"Key":"in text.split(|c","Fragments":[":"]},{"Key":"text.split(|c :","Fragments":["char|"]},{"Key":": char|","Fragments":["!c.is_alphanumeric())"]},{"Key":"char| !c.is_alphanumeric())","Fragments":["{"]},{"Key":"the insertion","Fragments":["in"]},{"Key":"insertion in","Fragments":["the"]},{"Key":"the in","Fragments":["hashmap","is","variables"]},{"Key":"in hashmap","Fragments":["shorter"]},{"Key":"hashmap shorter","Fragments":["by"]},{"Key":"shorter by","Fragments":["using"]},{"Key":" *words.entry(lowercase_word).or_insert(0)","Fragments":["+="]},{"Key":"*words.entry(lowercase_word).or_insert(0) +=","Fragments":["1"]},{"Key":" Finally","Fragments":["Rust"]},{"Key":"Finally Rust","Fragments":["1.2"]},{"Key":"1.2 added","Fragments":["to_lowercase"]},{"Key":"added to_lowercase","Fragments":["for"]},{"Key":"to_lowercase for","Fragments":["strings"]},{"Key":"could simplify","Fragments":["this"]},{"Key":"``` if","Fragments":["year"]},{"Key":"``` year","Fragments":["%"]},{"Key":"The return","Fragments":["is"]},{"Key":"not necessary","Fragments":["for"]},{"Key":"necessary for","Fragments":["the"]},{"Key":"expression as","Fragments":["that"]},{"Key":"as that","Fragments":["will"]},{"Key":"will automatically","Fragments":["become"]},{"Key":"automatically become","Fragments":["the"]},{"Key":"become the","Fragments":["return"]},{"Key":"Because of","Fragments":["the"]},{"Key":"last change,","Fragments":["we"]},{"Key":"change, we","Fragments":["no"]},{"Key":"we no","Fragments":["longer"]},{"Key":"longer need","Fragments":["to"]},{"Key":"any characters","Fragments":["remaining"]},{"Key":"characters remaining","Fragments":["at"]},{"Key":"remaining at","Fragments":["the"]},{"Key":"You lowercase","Fragments":["```testfor```"]},{"Key":"lowercase ```testfor```","Fragments":["more"]},{"Key":"```testfor``` more","Fragments":["times"]},{"Key":"Other solutions","Fragments":["compare"]},{"Key":"solutions compare","Fragments":["words"]},{"Key":"compare words","Fragments":["by"]},{"Key":"words by","Fragments":["a"]},{"Key":"a sort,","Fragments":["or"]},{"Key":"sort, or","Fragments":["letter"]},{"Key":"or letter","Fragments":["counts"]},{"Key":"counts in","Fragments":["a"]},{"Key":"think both","Fragments":["methods","approaches"]},{"Key":"methods are","Fragments":["likely"]},{"Key":"than yours,","Fragments":["which"]},{"Key":"yours, which","Fragments":["looks"]},{"Key":"be n","Fragments":["squared"]},{"Key":"n squared","Fragments":["in"]},{"Key":"squared in","Fragments":["the"]},{"Key":"notice there","Fragments":["`inputs.get(i).unwrap()`"]},{"Key":"there `inputs.get(i).unwrap()`","Fragments":["going"]},{"Key":"`inputs.get(i).unwrap()` going","Fragments":["on"]},{"Key":"on inside","Fragments":["`for"]},{"Key":"inside `for","Fragments":["i"]},{"Key":"`for i","Fragments":["in"]},{"Key":"i in","Fragments":["0..size`,"]},{"Key":"in 0..size`,","Fragments":["when"]},{"Key":"0..size`, when","Fragments":["really"]},{"Key":"when really","Fragments":["what"]},{"Key":"really what","Fragments":["you"]},{"Key":"that `i`","Fragments":["is"]},{"Key":"`i` is","Fragments":["iterating"]},{"Key":"`inputs` -","Fragments":["I"]},{"Key":"just directly","Fragments":["iterate","place"]},{"Key":"directly iterate","Fragments":["over"]},{"Key":"`inputs` ?","Fragments":["Similar"]},{"Key":"? Similar","Fragments":["to"]},{"Key":"Similar to","Fragments":["what"]},{"Key":"with `for","Fragments":["j"]},{"Key":"`for j","Fragments":["in"]},{"Key":"j in","Fragments":["testfor.to_lowercase().chars()`"]},{"Key":"in testfor.to_lowercase().chars()`","Fragments":["for"]},{"Key":"testfor.to_lowercase().chars()` for","Fragments":["example"]},{"Key":"example (you","Fragments":["didn't"]},{"Key":"(you didn't","Fragments":["need"]},{"Key":"do `testfor.to_lowercase().chars().get(j).unwrap()`,","Fragments":["etc)"]},{"Key":"about doing","Fragments":["brute"]},{"Key":"doing brute","Fragments":["force"]},{"Key":"brute force","Fragments":["rearrangements"]},{"Key":"force rearrangements","Fragments":["but"]},{"Key":"rearrangements but","Fragments":["that"]},{"Key":"would cost","Fragments":["O(n\u003csup\u003e2\u003c/sup\u003e)"]},{"Key":"cost O(n\u003csup\u003e2\u003c/sup\u003e)","Fragments":["time,"]},{"Key":"O(n\u003csup\u003e2\u003c/sup\u003e) time,","Fragments":["so"]},{"Key":"time, so","Fragments":["I"]},{"Key":"up iterating","Fragments":["each"]},{"Key":"iterating each","Fragments":["character"]},{"Key":"character on","Fragments":["input"]},{"Key":"on input","Fragments":["and"]},{"Key":"and seeing","Fragments":["if"]},{"Key":"seeing if","Fragments":["it"]},{"Key":"it exists","Fragments":["in"]},{"Key":"exists in","Fragments":["the"]},{"Key":"test string,","Fragments":["then"]},{"Key":"string, then","Fragments":["deleting"]},{"Key":"then deleting","Fragments":["it"]},{"Key":"deleting it","Fragments":["if"]},{"Key":"does so","Fragments":["that"]},{"Key":"that we","Fragments":["don't"]},{"Key":"we don't","Fragments":["match"]},{"Key":"don't match","Fragments":["the"]},{"Key":"match the","Fragments":["same"]},{"Key":"same character","Fragments":["twice."]},{"Key":"character twice.","Fragments":["This"]},{"Key":"faster with","Fragments":["worst"]},{"Key":"with worst","Fragments":["case"]},{"Key":"case being","Fragments":["O(1+2+...n)","O(n)."]},{"Key":"being O(1+2+...n)","Fragments":["and"]},{"Key":"O(1+2+...n) and","Fragments":["best"]},{"Key":"and best","Fragments":["case"]},{"Key":"can meet","Fragments":["the"]},{"Key":"meet the","Fragments":["shouting"]},{"Key":"the shouting","Fragments":["case"]},{"Key":"shouting case","Fragments":["by"]},{"Key":"case by","Fragments":["checking"]},{"Key":"by checking","Fragments":["that"]},{"Key":"checking that","Fragments":["no"]},{"Key":"no characters","Fragments":["are"]},{"Key":"characters are","Fragments":["lower"]},{"Key":"are lower","Fragments":["case"]},{"Key":"case -","Fragments":["this"]},{"Key":"efficient than","Fragments":["your"]},{"Key":"than your","Fragments":["method","version!"]},{"Key":"which requires","Fragments":["two"]},{"Key":"requires two","Fragments":["passes"]},{"Key":"two passes","Fragments":["of"]},{"Key":"passes of","Fragments":["the"]},{"Key":" Sure","Fragments":["it"]},{"Key":"Sure it","Fragments":["passes"]},{"Key":"the test,","Fragments":["but"]},{"Key":"test, but","Fragments":["not"]},{"Key":"not all","Fragments":["forms"]},{"Key":"all forms","Fragments":["of"]},{"Key":"of shouting","Fragments":["input."]},{"Key":"More accurately,","Fragments":["i'd"]},{"Key":"accurately, i'd","Fragments":["do"]},{"Key":"i'd do","Fragments":["one"]},{"Key":"one pass","Fragments":["and"]},{"Key":"pass and","Fragments":["count"]},{"Key":"has closures!","Fragments":["Cool."]},{"Key":" Reduced","Fragments":["number"]},{"Key":"Reduced number","Fragments":["of"]},{"Key":"divisibility tests","Fragments":["to","per","depending"]},{"Key":"to 2","Fragments":["instead"]},{"Key":"2 instead","Fragments":["of"]},{"Key":"is fine,","Fragments":["but"]},{"Key":"thought I","Fragments":["ought"]},{"Key":"I ought","Fragments":["to"]},{"Key":"ought to","Fragments":["point"]},{"Key":"to point","Fragments":["out"]},{"Key":"point out","Fragments":["that"]},{"Key":"out that","Fragments":["this","annotation."]},{"Key":"code doesn't","Fragments":["reduce"]},{"Key":"doesn't reduce","Fragments":["the"]},{"Key":"tests per","Fragments":["se."]},{"Key":"per se.","Fragments":["Rust"]},{"Key":"se. Rust","Fragments":["boolean"]},{"Key":"Rust boolean","Fragments":["operators"]},{"Key":"operators are","Fragments":["lazy"]},{"Key":"are lazy","Fragments":["so"]},{"Key":"lazy so","Fragments":["your"]},{"Key":"your original","Fragments":["version"]},{"Key":"original version","Fragments":["would"]},{"Key":"version would","Fragments":["do"]},{"Key":"do 1,","Fragments":["2"]},{"Key":"1, 2","Fragments":["or"]},{"Key":"3 divisibility","Fragments":["tests","checks"]},{"Key":"tests depending","Fragments":["on"]},{"Key":"depending on","Fragments":["the"]},{"Key":"input where","Fragments":["as"]},{"Key":"where as","Fragments":["this"]},{"Key":"this always","Fragments":["does"]},{"Key":"always does","Fragments":["2."]},{"Key":"of style,","Fragments":["I'd"]},{"Key":"style, I'd","Fragments":["avoid"]},{"Key":"I'd avoid","Fragments":["the"]},{"Key":"early return","Fragments":["and"]},{"Key":"return and","Fragments":["just"]},{"Key":"if else","Fragments":["on"]},{"Key":"else on","Fragments":["line"]},{"Key":"How does","Fragments":["it","the"]},{"Key":"does it","Fragments":["work?"]},{"Key":"it work?","Fragments":["Should"]},{"Key":"work? Should","Fragments":["I"]},{"Key":"Should I","Fragments":["mark"]},{"Key":"I mark","Fragments":["irt"]},{"Key":"mark irt","Fragments":["as"]},{"Key":"irt as","Fragments":["Done"]},{"Key":"as Done","Fragments":["to"]},{"Key":"Done to","Fragments":["it"]},{"Key":"to it","Fragments":["to"]},{"Key":"to become","Fragments":["\"coment-able\"?"]},{"Key":" Char","Fragments":["has"]},{"Key":"Char has","Fragments":["an"]},{"Key":"an is_uppercase","Fragments":["method"]},{"Key":"is_uppercase method","Fragments":["which"]},{"Key":"use instead","Fragments":["in"]},{"Key":"instead in","Fragments":["your"]},{"Key":"your is_uppercase","Fragments":["function"]},{"Key":"almost a","Fragments":["programming"]},{"Key":"a programming","Fragments":["riddle:"]},{"Key":"programming riddle:","Fragments":["either"]},{"Key":"riddle: either","Fragments":["you"]},{"Key":"either you","Fragments":["know"]},{"Key":"you know","Fragments":["programming"]},{"Key":"know programming","Fragments":["languages"]},{"Key":"programming languages","Fragments":["can"]},{"Key":"languages can","Fragments":["do"]},{"Key":"this bit","Fragments":["flags"]},{"Key":"bit flags","Fragments":["stuff","themselves."]},{"Key":"flags stuff","Fragments":["or"]},{"Key":"stuff or","Fragments":["you"]},{"Key":"or you","Fragments":["don't.","could"]},{"Key":"how efficient","Fragments":["this"]},{"Key":"efficient this","Fragments":["implementation"]},{"Key":"this implementation","Fragments":["is,","is"]},{"Key":"implementation is,","Fragments":["especially"]},{"Key":"is, especially","Fragments":["at"]},{"Key":"especially at","Fragments":["the"]},{"Key":"bottom where","Fragments":["I'm"]},{"Key":"where I'm","Fragments":["calling"]},{"Key":"I'm calling","Fragments":["\"as_flags\""]},{"Key":"calling \"as_flags\"","Fragments":["every"]},{"Key":"\"as_flags\" every","Fragments":["line"]},{"Key":"every line","Fragments":["and"]},{"Key":"and making","Fragments":["a"]},{"Key":"a vector","Fragments":["out","of"]},{"Key":"vector out","Fragments":["of"]},{"Key":"of stuff.","Fragments":["This"]},{"Key":"stuff. This","Fragments":["is"]},{"Key":"a weak","Fragments":["spot"]},{"Key":"weak spot","Fragments":["in"]},{"Key":"spot in","Fragments":["Rust:","the"]},{"Key":"in Rust:","Fragments":["that"]},{"Key":"Rust: that","Fragments":["is,"]},{"Key":"that is,","Fragments":["enums"]},{"Key":"is, enums","Fragments":["don't"]},{"Key":"enums don't","Fragments":["actually"]},{"Key":"actually work","Fragments":["as"]},{"Key":"work as","Fragments":["bit","Unicode"]},{"Key":"as bit","Fragments":["flags"]},{"Key":"What does","Fragments":["the","checking"]},{"Key":"does the","Fragments":["bitflags","`word.to_lowercase()`"]},{"Key":"the bitflags","Fragments":["crate"]},{"Key":"bitflags crate","Fragments":["bring","to"]},{"Key":"crate bring","Fragments":["that"]},{"Key":"bring that","Fragments":["just"]},{"Key":"the Enum","Fragments":["doesn't?"]},{"Key":"Would it","Fragments":["not"]},{"Key":"it not","Fragments":["be"]},{"Key":"the integers","Fragments":["1,2,4,8"]},{"Key":"integers 1,2,4,8","Fragments":["etc"]},{"Key":"1,2,4,8 etc","Fragments":["and"]},{"Key":"etc and","Fragments":["use"]},{"Key":"use bitwise","Fragments":["and","and"]},{"Key":"and against","Fragments":["the"]},{"Key":"against the","Fragments":["`Allergies`"]},{"Key":"the `Allergies`","Fragments":["value?"]},{"Key":" Agree","Fragments":["about"]},{"Key":"Agree about","Fragments":["the"]},{"Key":"the question,","Fragments":["these"]},{"Key":"question, these","Fragments":["are"]},{"Key":"these are","Fragments":["typical"]},{"Key":"are typical","Fragments":["tech"]},{"Key":"typical tech","Fragments":["interview"]},{"Key":"tech interview","Fragments":["fodder!"]},{"Key":"Maybe that","Fragments":["is"]},{"Key":"a bad","Fragments":["assumption","choice,"]},{"Key":"bad assumption","Fragments":["on"]},{"Key":"assumption on","Fragments":["my"]},{"Key":"my part,","Fragments":["but"]},{"Key":"part, but","Fragments":["here"]},{"Key":"but here","Fragments":["is"]},{"Key":"my understanding,","Fragments":["such"]},{"Key":"understanding, such","Fragments":["as"]},{"Key":"such as","Fragments":["it"]},{"Key":" Bit","Fragments":["flags"]},{"Key":"Bit flags","Fragments":["let"]},{"Key":"flags let","Fragments":["you"]},{"Key":" 0001,","Fragments":["//"]},{"Key":"0001, //","Fragments":["dog"]},{"Key":" 0010,","Fragments":["//"]},{"Key":"0010, //","Fragments":["cat"]},{"Key":" 0100,","Fragments":["//"]},{"Key":"0100, //","Fragments":["fish"]},{"Key":" 1000,","Fragments":["//"]},{"Key":"1000, //","Fragments":["banana"]},{"Key":" 1111,","Fragments":["//"]},{"Key":"1111, //","Fragments":["yellow"]},{"Key":"// yellow","Fragments":["barking"]},{"Key":"yellow barking","Fragments":["catfish"]},{"Key":" ...and","Fragments":["you"]},{"Key":"...and you","Fragments":["can"]},{"Key":"that because","Fragments":["using"]},{"Key":"because using","Fragments":["bitwise"]},{"Key":"using bitwise","Fragments":["or"]},{"Key":"bitwise or","Fragments":["(`|`)"]},{"Key":"or (`|`)","Fragments":["will"]},{"Key":"(`|`) will","Fragments":["take"]},{"Key":"take `0100`","Fragments":["and"]},{"Key":"`0100` and","Fragments":["`0010`"]},{"Key":"and `0010`","Fragments":["and"]},{"Key":"`0010` and","Fragments":["turn"]},{"Key":"and turn","Fragments":["them"]},{"Key":"turn them","Fragments":["into"]},{"Key":"them into","Fragments":["`0110`."]},{"Key":"into `0110`.","Fragments":["This"]},{"Key":"`0110`. This","Fragments":["may"]},{"Key":"This may","Fragments":["in"]},{"Key":"may in","Fragments":["fact"]},{"Key":"in fact","Fragments":["be"]},{"Key":"fact be","Fragments":["possible"]},{"Key":"possible with","Fragments":["enum"]},{"Key":"with enum","Fragments":["values"]},{"Key":"Rust, but","Fragments":["I"]},{"Key":"is because,","Fragments":["otherwise,"]},{"Key":"because, otherwise,","Fragments":["I"]},{"Key":"otherwise, I","Fragments":["don't"]},{"Key":"see why","Fragments":["there"]},{"Key":"why there","Fragments":["would"]},{"Key":"there would","Fragments":["be"]},{"Key":"a bitflags","Fragments":["crate"]},{"Key":"crate to","Fragments":["begin"]},{"Key":"with. I","Fragments":["remember"]},{"Key":"remember asking","Fragments":["a"]},{"Key":"asking a","Fragments":["long"]},{"Key":"a long","Fragments":["time"]},{"Key":"long time","Fragments":["ago"]},{"Key":"time ago","Fragments":["if"]},{"Key":"ago if","Fragments":["I"]},{"Key":"could \"or\"","Fragments":["enum"]},{"Key":"\"or\" enum","Fragments":["conditions"]},{"Key":"enum conditions","Fragments":["together"]},{"Key":"conditions together","Fragments":["and"]},{"Key":"together and","Fragments":["this"]},{"Key":"this crate","Fragments":["was"]},{"Key":"crate was","Fragments":["the"]},{"Key":"answer I","Fragments":["got."]},{"Key":"I got.","Fragments":["(Of"]},{"Key":"got. (Of","Fragments":["course,"]},{"Key":"(Of course,","Fragments":["that"]},{"Key":"course, that","Fragments":["answer"]},{"Key":"that answer","Fragments":["may"]},{"Key":"answer may","Fragments":["no"]},{"Key":"may no","Fragments":["longer"]},{"Key":"longer be","Fragments":["valid!)"]},{"Key":"Basically, I","Fragments":["wanted"]},{"Key":"the crate","Fragments":["because","'leap',"]},{"Key":"crate because","Fragments":["then"]},{"Key":"write code","Fragments":["to"]},{"Key":"a sequence","Fragments":["of"]},{"Key":"of bits","Fragments":["and"]},{"Key":"bits and","Fragments":["parse"]},{"Key":"and parse","Fragments":["it"]},{"Key":"parse it","Fragments":["into"]},{"Key":"or more","Fragments":["enum"]},{"Key":"more enum","Fragments":["values"]},{"Key":"values by","Fragments":["hand."]},{"Key":"Here's some","Fragments":["code"]},{"Key":"some code","Fragments":["from"]},{"Key":"from another","Fragments":["solution"]},{"Key":"does this","Fragments":["without","in"]},{"Key":"without pulling","Fragments":["in"]},{"Key":"pulling in","Fragments":["any"]},{"Key":"in any","Fragments":["crates:"]},{"Key":"is_allergic_to(\u0026self, a:","Fragments":["\u0026Allergen)"]},{"Key":"a: \u0026Allergen)","Fragments":["-\u003e"]},{"Key":"// All","Fragments":["Allergens"]},{"Key":"All Allergens","Fragments":["are"]},{"Key":"Allergens are","Fragments":["powers"]},{"Key":"are powers","Fragments":["of"]},{"Key":"// So","Fragments":["we"]},{"Key":"So we","Fragments":["only"]},{"Key":"we only","Fragments":["need"]},{"Key":"the respective","Fragments":["bit"]},{"Key":"respective bit","Fragments":["is"]},{"Key":"// use","Fragments":["bitand"]},{"Key":"use bitand","Fragments":["to"]},{"Key":"bitand to","Fragments":["test"]},{"Key":"test if","Fragments":["bit"]},{"Key":"\u0026 (*a","Fragments":["as"]},{"Key":"(*a as","Fragments":["u8)"]},{"Key":"as u8)","Fragments":["\u003e"]},{"Key":"u8) \u003e","Fragments":["0"]},{"Key":"So basically","Fragments":["this"]},{"Key":"basically this","Fragments":["will"]},{"Key":"and to","Fragments":["determine"]},{"Key":"whether a","Fragments":["given"]},{"Key":"given bit","Fragments":["in"]},{"Key":"bit in","Fragments":["the"]},{"Key":"is set.","Fragments":["It"]},{"Key":"set if","Fragments":["the"]},{"Key":"the and","Fragments":["operation"]},{"Key":"and operation","Fragments":["is"]},{"Key":"operation is","Fragments":["greater"]},{"Key":"is greater","Fragments":["than"]},{"Key":"than zero.","Fragments":["This,"]},{"Key":"zero. This,","Fragments":["of"]},{"Key":"This, of","Fragments":["course,"]},{"Key":"of course,","Fragments":["is","because","given"]},{"Key":"course, is","Fragments":["all"]},{"Key":"is all","Fragments":["stuff"]},{"Key":"all stuff","Fragments":["that"]},{"Key":"stuff that","Fragments":["I"]},{"Key":"know until","Fragments":["five"]},{"Key":"until five","Fragments":["minutes"]},{"Key":"five minutes","Fragments":["ago."]},{"Key":"minutes ago.","Fragments":[":P"]},{"Key":"ago. :P","Fragments":["This"]},{"Key":":P This","Fragments":["solution"]},{"Key":"solution uses","Fragments":["a","sum"]},{"Key":"similar method","Fragments":["to"]},{"Key":"to derive","Fragments":["a"]},{"Key":"derive a","Fragments":["list"]},{"Key":"of allergies","Fragments":["from"]},{"Key":"allergies from","Fragments":["a"]},{"Key":"One thing","Fragments":["that","is"]},{"Key":"that really","Fragments":["throws"]},{"Key":"really throws","Fragments":["me"]},{"Key":"throws me","Fragments":["about"]},{"Key":"me about","Fragments":["the"]},{"Key":"the [solution](http://exercism.io/submissions/2f8df63d99dd49048ec2e16ef1b2809f)","Fragments":["I"]},{"Key":"[solution](http://exercism.io/submissions/2f8df63d99dd49048ec2e16ef1b2809f) I","Fragments":["grabbed"]},{"Key":"I grabbed","Fragments":["this"]},{"Key":"grabbed this","Fragments":["from"]},{"Key":"from is","Fragments":["the"]},{"Key":"enum definition","Fragments":["at"]},{"Key":"definition at","Fragments":["the"]},{"Key":"top, which","Fragments":["looks"]},{"Key":"looks exactly","Fragments":["like"]},{"Key":"exactly like","Fragments":["one"]},{"Key":"like one","Fragments":["I'd"]},{"Key":"one I'd","Fragments":["have"]},{"Key":"I'd have","Fragments":["written"]},{"Key":"in C#","Fragments":["for"]},{"Key":"C# for","Fragments":["doing"]},{"Key":"for doing","Fragments":["something"]},{"Key":"doing something","Fragments":["like"]},{"Key":"like this:","Fragments":["the"]},{"Key":"this: the","Fragments":["values"]},{"Key":"are all","Fragments":["powers"]},{"Key":"all powers","Fragments":["of"]},{"Key":"of two.","Fragments":["Looks"]},{"Key":"two. Looks","Fragments":["like"]},{"Key":"definitely possible","Fragments":["to"]},{"Key":"to treat","Fragments":["a"]},{"Key":"treat a","Fragments":["Rust"]},{"Key":"Rust enum","Fragments":["like"]},{"Key":"the ones","Fragments":["I'm"]},{"Key":"ones I'm","Fragments":["used"]},{"Key":"I'm used","Fragments":["to"]},{"Key":"to from","Fragments":["work."]},{"Key":"from work.","Fragments":["Gives"]},{"Key":"work. Gives","Fragments":["me"]},{"Key":"Gives me","Fragments":["something"]},{"Key":"me something","Fragments":["to"]},{"Key":"with for","Fragments":["sure.","loop"]},{"Key":"Another edit:","Fragments":["it"]},{"Key":"edit: it","Fragments":["is"]},{"Key":"definitely not","Fragments":["possible"]},{"Key":"to `|`","Fragments":["enum"]},{"Key":"`|` enum","Fragments":["variants"]},{"Key":"variants together","Fragments":["on"]},{"Key":"together on","Fragments":[","]},{"Key":"on ,","Fragments":["so"]},{"Key":", so","Fragments":["that's"]},{"Key":"so that's","Fragments":["still"]},{"Key":"that's still","Fragments":["the"]},{"Key":"still the","Fragments":["case."]},{"Key":"the case.","Fragments":["And"]},{"Key":"case. And","Fragments":["of"]},{"Key":"And of","Fragments":["course"]},{"Key":"of course","Fragments":["even"]},{"Key":"course even","Fragments":["if"]},{"Key":"even if","Fragments":["that","it"]},{"Key":"that part","Fragments":["did","about"]},{"Key":"did compile,","Fragments":["it"]},{"Key":"compile, it","Fragments":["would"]},{"Key":"would seem","Fragments":["that"]},{"Key":"seem that","Fragments":["this"]},{"Key":"would blow","Fragments":["up"]},{"Key":"blow up","Fragments":["miserably","in"]},{"Key":"up miserably","Fragments":["because"]},{"Key":"miserably because","Fragments":["it"]},{"Key":"then possible","Fragments":["to"]},{"Key":"to match","Fragments":["more"]},{"Key":"match more","Fragments":["than"]},{"Key":"one branch:","Fragments":["`match"]},{"Key":"branch: `match","Fragments":["kind"]},{"Key":"`match kind","Fragments":["{"]},{"Key":"kind {","Fragments":["Kind::One"]},{"Key":"{ Kind::One","Fragments":["=\u003e"]},{"Key":"Kind::One =\u003e","Fragments":["(),"]},{"Key":"=\u003e (),","Fragments":["Kind::Two"]},{"Key":"(), Kind::Two","Fragments":["=\u003e"]},{"Key":"Kind::Two =\u003e","Fragments":["()"]},{"Key":"=\u003e ()","Fragments":["}`"]},{"Key":"So leaving","Fragments":["my"]},{"Key":"leaving my","Fragments":["lame"]},{"Key":"my lame","Fragments":["ignorance"]},{"Key":"lame ignorance","Fragments":["aside,"]},{"Key":"ignorance aside,","Fragments":["at"]},{"Key":"aside, at","Fragments":["least"]},{"Key":"least mine","Fragments":["provides"]},{"Key":"mine provides","Fragments":["for"]},{"Key":"provides for","Fragments":["a"]},{"Key":"a convenient-ish","Fragments":["way"]},{"Key":"convenient-ish way","Fragments":["to"]},{"Key":"build an","Fragments":["allergy"]},{"Key":"an allergy","Fragments":["value?"]},{"Key":"allergy value?","Fragments":[":P"]},{"Key":"hate regular","Fragments":["expressions."]},{"Key":"Here I'm","Fragments":["using"]},{"Key":"using Lazy","Fragments":["Static"]},{"Key":"Lazy Static","Fragments":["to"]},{"Key":"Static to","Fragments":["get"]},{"Key":"static reference","Fragments":["to"]},{"Key":"expression created","Fragments":["at"]},{"Key":"created at","Fragments":["runtime"]},{"Key":"at runtime","Fragments":["instead"]},{"Key":"runtime instead","Fragments":["of"]},{"Key":"of compile","Fragments":["time"]},{"Key":"time because,","Fragments":["last"]},{"Key":"because, last","Fragments":["time"]},{"Key":"last time","Fragments":["I"]},{"Key":"I checked,","Fragments":["the"]},{"Key":"checked, the","Fragments":["runtime"]},{"Key":"the runtime","Fragments":["expressions","of"]},{"Key":"runtime expressions","Fragments":["are"]},{"Key":"expressions are","Fragments":["more"]},{"Key":"are more","Fragments":["performant"]},{"Key":"more performant","Fragments":["than"]},{"Key":"performant than","Fragments":["the"]},{"Key":"the compile","Fragments":["time"]},{"Key":"time ones.","Fragments":["I"]},{"Key":"ones. I","Fragments":["doubt"]},{"Key":"I doubt","Fragments":["that"]},{"Key":"doubt that","Fragments":["helps"]},{"Key":"that helps","Fragments":["in"]},{"Key":"helps in","Fragments":["terms"]},{"Key":"runtime of","Fragments":["the"]},{"Key":"the application","Fragments":["as"]},{"Key":"application as","Fragments":["a"]},{"Key":"a whole,","Fragments":["mind"]},{"Key":"whole, mind","Fragments":["you;"]},{"Key":"mind you;","Fragments":["we're"]},{"Key":"you; we're","Fragments":["checking"]},{"Key":"we're checking","Fragments":["like"]},{"Key":"checking like","Fragments":["two"]},{"Key":"like two","Fragments":["things"]},{"Key":"two things","Fragments":["here."]},{"Key":" And,","Fragments":["of"]},{"Key":"And, of","Fragments":["course,"]},{"Key":"course, because","Fragments":["this"]},{"Key":"because this","Fragments":["expression"]},{"Key":"is compiled","Fragments":["at"]},{"Key":"compiled at","Fragments":["runtime,"]},{"Key":"at runtime,","Fragments":["there's"]},{"Key":"runtime, there's","Fragments":["always"]},{"Key":"there's always","Fragments":["the"]},{"Key":"always the","Fragments":["chance","same,"]},{"Key":"the chance","Fragments":["that"]},{"Key":"chance that","Fragments":["it"]},{"Key":"will blow","Fragments":["up"]},{"Key":"your face","Fragments":["if"]},{"Key":"face if","Fragments":["you"]},{"Key":"should happen","Fragments":["to"]},{"Key":"happen to","Fragments":["change"]},{"Key":" Minor","Fragments":["nit,","-"]},{"Key":"Minor nit,","Fragments":["but"]},{"Key":"the temp","Fragments":["variable"]},{"Key":"temp variable","Fragments":["on"]},{"Key":"small modification,`","Fragments":["is_allergic_to()`"]},{"Key":"modification,` is_allergic_to()`","Fragments":["now"]},{"Key":"is_allergic_to()` now","Fragments":["casts"]},{"Key":"now casts","Fragments":["the"]},{"Key":"casts the","Fragments":["allergen"]},{"Key":"allergen as","Fragments":["a"]},{"Key":"a u32","Fragments":["and"]},{"Key":"u32 and","Fragments":["applies"]},{"Key":"and applies","Fragments":["it"]},{"Key":"applies it","Fragments":["as"]},{"Key":"a bitmask","Fragments":["to"]},{"Key":"bitmask to","Fragments":["the"]},{"Key":"the hardcoded","Fragments":["vector"]},{"Key":"hardcoded vector","Fragments":["of"]},{"Key":"vector of","Fragments":["allergens","type"]},{"Key":"of allergens","Fragments":["in"]},{"Key":"allergens in","Fragments":["`allergies()`"]},{"Key":"`allergies()` as","Fragments":["it"]},{"Key":"be kept","Fragments":["in"]},{"Key":"kept in","Fragments":["sync"]},{"Key":"in sync","Fragments":["in"]},{"Key":"sync in","Fragments":["with"]},{"Key":"in with","Fragments":["the"]},{"Key":" copied","Fragments":["the"]},{"Key":"copied the","Fragments":["to_lowercase"]},{"Key":"the to_lowercase","Fragments":["method"]},{"Key":"to_lowercase method","Fragments":["from"]},{"Key":"method from","Fragments":["github","Stack"]},{"Key":"from github","Fragments":["as"]},{"Key":"github as","Fragments":["string"]},{"Key":"as string","Fragments":["lowercase"]},{"Key":"string lowercase","Fragments":["conversion"]},{"Key":"lowercase conversion","Fragments":["is"]},{"Key":"conversion is","Fragments":["unstable"]},{"Key":"and compilation","Fragments":["is"]},{"Key":"compilation is","Fragments":["failing."]},{"Key":" i'm","Fragments":["basically"]},{"Key":"i'm basically","Fragments":["converting"]},{"Key":"basically converting","Fragments":["all"]},{"Key":"converting all","Fragments":["strings"]},{"Key":"all strings","Fragments":["into"]},{"Key":"strings into","Fragments":["sorted"]},{"Key":"into sorted","Fragments":["character"]},{"Key":"sorted character","Fragments":["array","array"]},{"Key":"character array","Fragments":["and","for"]},{"Key":"array and","Fragments":["comparing"]},{"Key":"and comparing","Fragments":["them."]},{"Key":"anagram the","Fragments":["sorted"]},{"Key":"array for","Fragments":["the"]},{"Key":"given string","Fragments":["and"]},{"Key":"input will","Fragments":["be"]},{"Key":"be same.","Fragments":["added"]},{"Key":"same. added","Fragments":["a"]},{"Key":"conditional logic","Fragments":["to"]},{"Key":"logic to","Fragments":["exclude"]},{"Key":"to exclude","Fragments":["self-anagram"]},{"Key":"use is_numeric","Fragments":["on"]},{"Key":"is_numeric on","Fragments":["char"]},{"Key":"on char","Fragments":["to"]},{"Key":"char to","Fragments":["do"]},{"Key":"Also using","Fragments":["the"]},{"Key":"on option","Fragments":["in"]},{"Key":"option in","Fragments":["area_code"]},{"Key":"in area_code","Fragments":["would"]},{"Key":"area_code would","Fragments":["be"]},{"Key":"use filter","Fragments":["and","and"]},{"Key":"count instead","Fragments":["of","of"]},{"Key":"the fold,","Fragments":["that'd"]},{"Key":"fold, that'd","Fragments":["be"]},{"Key":"follow I","Fragments":["think."]},{"Key":"The write_row!","Fragments":["macro"]},{"Key":"write_row! macro","Fragments":["is"]},{"Key":"type in","Fragments":["the","Rust,"]},{"Key":"the `|module:","Fragments":["i64|`"]},{"Key":"`|module: i64|`","Fragments":["it"]},{"Key":"i64|` it","Fragments":["will"]},{"Key":"will compile","Fragments":["without"]},{"Key":" also","Fragments":["way"]},{"Key":"also way","Fragments":["`i64`"]},{"Key":"way `i64`","Fragments":["dose"]},{"Key":"`i64` dose","Fragments":["the"]},{"Key":"dose the","Fragments":["roll"]},{"Key":"the roll","Fragments":["apply"]},{"Key":"roll apply","Fragments":["to"]},{"Key":"apply to","Fragments":["negative"]},{"Key":"to negative","Fragments":["years?"]},{"Key":"negative years?","Fragments":["are"]},{"Key":"years? are","Fragments":["we"]},{"Key":"are we","Fragments":["going"]},{"Key":"we going","Fragments":["to"]},{"Key":"to overflow","Fragments":["`u32`"]},{"Key":"Just being","Fragments":["picky."]},{"Key":" @alessandro","Fragments":["thx"]},{"Key":"@alessandro thx","Fragments":["about"]},{"Key":"thx about","Fragments":["the"]},{"Key":"And about","Fragments":["overflowing"]},{"Key":"about overflowing","Fragments":["-"]},{"Key":"overflowing -","Fragments":["just"]},{"Key":"just being","Fragments":["more"]},{"Key":"being more","Fragments":["future"]},{"Key":"more future","Fragments":["proof"]},{"Key":"future proof","Fragments":[":D"]},{"Key":"And negative","Fragments":["years,"]},{"Key":"negative years,","Fragments":["hmmm"]},{"Key":"years, hmmm","Fragments":["what"]},{"Key":"hmmm what","Fragments":["about"]},{"Key":"what about","Fragments":["BC"]},{"Key":"about BC","Fragments":["?"]},{"Key":"\"if\" and","Fragments":["the"]},{"Key":"the true","Fragments":["and"]},{"Key":"true and","Fragments":["false"]},{"Key":"and false","Fragments":["as"]},{"Key":"false as","Fragments":["well"]},{"Key":"well and","Fragments":["just"]},{"Key":" ....","Fragments":["{"]},{"Key":" num","Fragments":["%","="]},{"Key":"num %","Fragments":["factor"]},{"Key":"Same goes","Fragments":["for"]},{"Key":"goes for","Fragments":["the"]},{"Key":"the other.","Fragments":["And"]},{"Key":"other. And","Fragments":["think"]},{"Key":"And think","Fragments":["about"]},{"Key":"about avoid","Fragments":["the"]},{"Key":"went overboard","Fragments":["with"]},{"Key":"overboard with","Fragments":["one-liners,"]},{"Key":"with one-liners,","Fragments":["but"]},{"Key":"one-liners, but","Fragments":["I"]},{"Key":"generally prefer","Fragments":["short,"]},{"Key":"prefer short,","Fragments":["well-named"]},{"Key":"short, well-named","Fragments":["functions"]},{"Key":"well-named functions","Fragments":["to"]},{"Key":"to longer","Fragments":["functions."]},{"Key":"like `grades.keys().cloned()`","Fragments":["--"]},{"Key":"`grades.keys().cloned()` --","Fragments":["I'm"]},{"Key":"-- I'm","Fragments":["gonna"]},{"Key":"I'm gonna","Fragments":["have"]},{"Key":"gonna have","Fragments":["to"]},{"Key":"to remember","Fragments":["both"]},{"Key":"remember both","Fragments":["of"]},{"Key":" Used","Fragments":["stevejb71"]},{"Key":"Used stevejb71","Fragments":["method."]},{"Key":"stevejb71 method.","Fragments":["Much"]},{"Key":"method. Much","Fragments":["faster"]},{"Key":"Much faster","Fragments":["than"]},{"Key":"the array","Fragments":["lookup."]},{"Key":"The most","Fragments":["naive"]},{"Key":"most naive","Fragments":["solution"]},{"Key":"naive solution","Fragments":["is"]},{"Key":"simplest to","Fragments":["understand."]},{"Key":"think giving","Fragments":["names"]},{"Key":"giving names","Fragments":["to"]},{"Key":"the intermediate","Fragments":["conditions"]},{"Key":"intermediate conditions","Fragments":["would"]},{"Key":"conditions would","Fragments":["make"]},{"Key":"it easier","Fragments":["to","to","to"]},{"Key":"have revised","Fragments":["the"]},{"Key":"revised the","Fragments":["program,"]},{"Key":"the program,","Fragments":["please"]},{"Key":"program, please","Fragments":["see"]},{"Key":"please see","Fragments":["iteration"]},{"Key":" Enough","Fragments":["structure"]},{"Key":"Enough structure","Fragments":["to"]},{"Key":"Seems like","Fragments":["sort_string()","a"]},{"Key":"like sort_string()","Fragments":["would"]},{"Key":"sort_string() would","Fragments":["make"]},{"Key":"good anonymous","Fragments":["function,"]},{"Key":"anonymous function,","Fragments":["but"]},{"Key":"the ownership","Fragments":["issues"]},{"Key":"ownership issues","Fragments":["sorted"]},{"Key":"issues sorted","Fragments":["out."]},{"Key":"the logic","Fragments":["is"]},{"Key":"logic is","Fragments":["more"]},{"Key":"more succinct,","Fragments":["code"]},{"Key":"succinct, code","Fragments":["gets"]},{"Key":"code gets","Fragments":["reused,"]},{"Key":"gets reused,","Fragments":["and"]},{"Key":"reused, and","Fragments":["it"]},{"Key":"is running","Fragments":["a"]},{"Key":"running a","Fragments":["little"]},{"Key":"more performant,","Fragments":["though"]},{"Key":"performant, though","Fragments":["the"]},{"Key":"though the","Fragments":["many"]},{"Key":"the many","Fragments":["refs"]},{"Key":"many refs","Fragments":["don't"]},{"Key":"refs don't","Fragments":["please"]},{"Key":"don't please","Fragments":["me."]},{"Key":"tip, changed","Fragments":["the"]},{"Key":"use `.pow()`!","Fragments":["I"]},{"Key":"`.pow()`! I","Fragments":["kind"]},{"Key":"I kind","Fragments":["of"]},{"Key":"of like","Fragments":["that"]},{"Key":"to deal","Fragments":["with"]},{"Key":"deal with","Fragments":["negative"]},{"Key":"with negative","Fragments":["numbers"]},{"Key":"negative numbers","Fragments":["as"]},{"Key":"numbers as","Fragments":["well,"]},{"Key":"not why","Fragments":["I'm"]},{"Key":"why I'm","Fragments":["using"]},{"Key":"using i64","Fragments":["as"]},{"Key":"i64 as","Fragments":["result."]},{"Key":"as result.","Fragments":["It's"]},{"Key":"result. It's","Fragments":["to"]},{"Key":"It's to","Fragments":["prevent"]},{"Key":"to prevent","Fragments":["the"]},{"Key":"prevent the","Fragments":["theoretical"]},{"Key":"the theoretical","Fragments":["chance"]},{"Key":"theoretical chance","Fragments":["of"]},{"Key":"a buffer","Fragments":["overflow."]},{"Key":"use ```u32```","Fragments":["as"]},{"Key":"```u32``` as","Fragments":["the"]},{"Key":"inputs and","Fragments":["outputs"]},{"Key":"outputs are","Fragments":["always"]},{"Key":"always positive.","Fragments":["That"]},{"Key":"positive. That","Fragments":["way"]},{"Key":"That way","Fragments":["you"]},{"Key":"avoid recasting","Fragments":["```elem```"]},{"Key":"recasting ```elem```","Fragments":["as"]},{"Key":"```elem``` as","Fragments":["```i64```."]},{"Key":"as ```i64```.","Fragments":["Also,"]},{"Key":"```i64```. Also,","Fragments":["numbers"]},{"Key":"Also, numbers","Fragments":["in"]},{"Key":"numbers in","Fragments":["rust"]},{"Key":"rust have","Fragments":["a"]},{"Key":"to square","Fragments":["```sum```"]},{"Key":"square ```sum```","Fragments":["and"]},{"Key":"```sum``` and","Fragments":["```elem```"]},{"Key":"and ```elem```","Fragments":["on"]},{"Key":"```elem``` on","Fragments":["line"]},{"Key":"line 3","Fragments":["and"]},{"Key":"3 and","Fragments":["7"]},{"Key":"and 7","Fragments":["respectively."]},{"Key":"Minor -","Fragments":["in"]},{"Key":"- in","Fragments":["line"]},{"Key":"write the","Fragments":["closure","ranges"]},{"Key":"closure parameter","Fragments":["```c```,"]},{"Key":"parameter ```c```,","Fragments":["just"]},{"Key":"```c```, just","Fragments":["pass"]},{"Key":" ```accumulate```","Fragments":["is"]},{"Key":"```accumulate``` is","Fragments":["very"]},{"Key":"very close","Fragments":["to"]},{"Key":"close to","Fragments":["the"]},{"Key":"a pair","Fragments":["of"]},{"Key":"of applicative","Fragments":["functors."]},{"Key":"applicative functors.","Fragments":["You"]},{"Key":"functors. You","Fragments":["could"]},{"Key":"maybe abstract","Fragments":["that"]},{"Key":"abstract that","Fragments":["out..."]},{"Key":"This works","Fragments":["but"]},{"Key":"are mathematical","Fragments":["equations"]},{"Key":"mathematical equations","Fragments":["to"]},{"Key":"equations to","Fragments":["compute"]},{"Key":"to compute","Fragments":["square_of_sum"]},{"Key":"compute square_of_sum","Fragments":["and"]},{"Key":"square_of_sum and","Fragments":["sum_of_squares"]},{"Key":"and sum_of_squares","Fragments":["which"]},{"Key":"sum_of_squares which","Fragments":["would"]},{"Key":"efficient for","Fragments":["large"]},{"Key":"for large","Fragments":["numbers."]},{"Key":"Yes I","Fragments":["noticed"]},{"Key":"I noticed","Fragments":["that","in"]},{"Key":"noticed that","Fragments":["in"]},{"Key":"other peoples","Fragments":["submissions."]},{"Key":"peoples submissions.","Fragments":["That's"]},{"Key":"submissions. That's","Fragments":["definitely"]},{"Key":"That's definitely","Fragments":["a"]},{"Key":"approach if","Fragments":["I"]},{"Key":"I were","Fragments":["doing","going"]},{"Key":"were doing","Fragments":["this"]},{"Key":"for real.","Fragments":["But"]},{"Key":"real. But","Fragments":["I"]},{"Key":"felt I","Fragments":["learnt"]},{"Key":"I learnt","Fragments":["just"]},{"Key":"learnt just","Fragments":["as"]},{"Key":"as much","Fragments":["about"]},{"Key":"much about","Fragments":["rust"]},{"Key":"rust doing","Fragments":["it"]},{"Key":"way, so","Fragments":["I'll"]},{"Key":"I'll let","Fragments":["it"]},{"Key":"let it","Fragments":["stand.","be"]},{"Key":"zip to","Fragments":["more"]},{"Key":"to more","Fragments":["cleanly"]},{"Key":"more cleanly","Fragments":["iterate"]},{"Key":"cleanly iterate","Fragments":["over"]},{"Key":"the pairs","Fragments":["of"]},{"Key":"pairs of","Fragments":["letters."]},{"Key":" e.g.","Fragments":["for"]},{"Key":"e.g. for","Fragments":["(char_a,"]},{"Key":"for (char_a,","Fragments":["char_b)"]},{"Key":"(char_a, char_b)","Fragments":["in"]},{"Key":"char_b) in","Fragments":["it_a.zip(it_b)"]},{"Key":"in it_a.zip(it_b)","Fragments":["{"]},{"Key":"it_a.zip(it_b) {","Fragments":["..."]},{"Key":"{ ...","Fragments":["}"]},{"Key":"right, I","Fragments":["sent","can"]},{"Key":"request for","Fragments":["this","it."]},{"Key":"exercise to","Fragments":["have"]},{"Key":"it handle","Fragments":["the"]},{"Key":"case (https://github.com/exercism/xrust/pull/46),","Fragments":["I"]},{"Key":"(https://github.com/exercism/xrust/pull/46), I","Fragments":["have"]},{"Key":"a next","Fragments":["iteration"]},{"Key":"iteration ready","Fragments":["where"]},{"Key":"ready where","Fragments":["I"]},{"Key":" ```map_word```","Fragments":["is"]},{"Key":"```map_word``` is","Fragments":["a"]},{"Key":"a somewhat","Fragments":["generic"]},{"Key":"somewhat generic","Fragments":["name,"]},{"Key":"generic name,","Fragments":["maybe"]},{"Key":"name, maybe","Fragments":["```lowercase_and_sort```"]},{"Key":"maybe ```lowercase_and_sort```","Fragments":["would"]},{"Key":"```lowercase_and_sort``` would","Fragments":["be"]},{"Key":"struct with","Fragments":["named"]},{"Key":"with named","Fragments":["elements."]},{"Key":"named elements.","Fragments":["In"]},{"Key":"elements. In","Fragments":["this"]},{"Key":"exercise Robot","Fragments":["has"]},{"Key":"Robot has","Fragments":["only"]},{"Key":"has only","Fragments":["a"]},{"Key":"only a","Fragments":["name"]},{"Key":"name but","Fragments":["in"]},{"Key":"in usual","Fragments":["program"]},{"Key":"usual program","Fragments":["Robot"]},{"Key":"program Robot","Fragments":["would"]},{"Key":"Robot would","Fragments":["likely"]},{"Key":"would likely","Fragments":["have"]},{"Key":"likely have","Fragments":["other"]},{"Key":"have other","Fragments":["attributes."]},{"Key":"gen_range is","Fragments":["exclusive"]},{"Key":"is exclusive","Fragments":["on"]},{"Key":"exclusive on","Fragments":["the"]},{"Key":"the upper","Fragments":["bound,"]},{"Key":"upper bound,","Fragments":["so"]},{"Key":"bound, so","Fragments":["your"]},{"Key":"contain Z","Fragments":["or"]},{"Key":"Z or","Fragments":["9."]},{"Key":"the \"obvious\"","Fragments":["and"]},{"Key":"\"obvious\" and","Fragments":["verbose"]},{"Key":"and verbose","Fragments":["solution."]},{"Key":"When submitting,","Fragments":["I"]},{"Key":"submitting, I","Fragments":["did"]},{"Key":"about shortening","Fragments":["it"]},{"Key":"shortening it","Fragments":["to"]},{"Key":"Then gain,","Fragments":["is"]},{"Key":"gain, is","Fragments":["that"]},{"Key":"that truly","Fragments":["necessary?"]},{"Key":" Inspired","Fragments":["from"]},{"Key":"Inspired from","Fragments":["http://exercism.io/submissions/b5e4866ee0674f33ba31d0a4c4f234b0."]},{"Key":"uses `to_lowercase()`","Fragments":["which"]},{"Key":"`to_lowercase()` which","Fragments":["is"]},{"Key":"1.2 as","Fragments":["well"]},{"Key":"as `entry()`","Fragments":["and"]},{"Key":"`entry()` and","Fragments":["`or_insert()`"]},{"Key":"`or_insert()` to","Fragments":["insert"]},{"Key":"insert or","Fragments":["update"]},{"Key":"or update","Fragments":["a"]},{"Key":"update a","Fragments":["value"]},{"Key":"The divisor","Fragments":["in"]},{"Key":"divisor in","Fragments":["`is_divisible_by_four`,"]},{"Key":"in `is_divisible_by_four`,","Fragments":["`is_divisible_by_onehundred`"]},{"Key":"`is_divisible_by_four`, `is_divisible_by_onehundred`","Fragments":["and"]},{"Key":"`is_divisible_by_onehundred` and","Fragments":["`is_divisible_by_fourhundred`"]},{"Key":"and `is_divisible_by_fourhundred`","Fragments":["could"]},{"Key":"`is_divisible_by_fourhundred` could","Fragments":["be"]},{"Key":"passed as","Fragments":["an"]},{"Key":"an argument","Fragments":["to"]},{"Key":"argument to","Fragments":["a"]},{"Key":"single function","Fragments":["`is_divisible_by`."]},{"Key":"need 3","Fragments":["divisibility"]},{"Key":"divisibility checks","Fragments":["for"]},{"Key":"checks for","Fragments":["this"]},{"Key":"problem, your","Fragments":["solution"]},{"Key":"solution checks","Fragments":["divisibility"]},{"Key":"checks divisibility","Fragments":["by"]},{"Key":"4 three","Fragments":["times."]},{"Key":"value, you","Fragments":["can","need"]},{"Key":"statements throughout","Fragments":["your"]},{"Key":"throughout your","Fragments":["solution."]},{"Key":"was thrown","Fragments":["by"]},{"Key":"thrown by","Fragments":["Allergies(n)."]},{"Key":"by Allergies(n).","Fragments":["I"]},{"Key":"Allergies(n). I","Fragments":["thought"]},{"Key":"this be","Fragments":["in"]},{"Key":"be in","Fragments":["a"]},{"Key":"a struct,","Fragments":["but"]},{"Key":"but I've","Fragments":["never"]},{"Key":"I've never","Fragments":["seen"]},{"Key":"never seen","Fragments":["that"]},{"Key":"that notation","Fragments":["for"]},{"Key":"was also","Fragments":["surprised"]},{"Key":"also surprised","Fragments":["by"]},{"Key":"surprised by","Fragments":["the"]},{"Key":"the `Allergies(n)`","Fragments":["notation,"]},{"Key":"`Allergies(n)` notation,","Fragments":["it'sfor"]},{"Key":"notation, it'sfor","Fragments":["tuple"]},{"Key":"it'sfor tuple","Fragments":["stucts:"]},{"Key":"tuple stucts:","Fragments":["http://rustbyexample.com/custom_types/structs.html"]},{"Key":"is suboptimal","Fragments":["as"]},{"Key":"suboptimal as","Fragments":["it"]},{"Key":"it iterates","Fragments":["over"]},{"Key":"iterates over","Fragments":["the"]},{"Key":"times, ideally","Fragments":["it"]},{"Key":"ideally it","Fragments":["should"]},{"Key":"should count","Fragments":["all"]},{"Key":"count all","Fragments":["values"]},{"Key":" randomize","Fragments":["is"]},{"Key":"randomize is","Fragments":["a"]},{"Key":"a verb","Fragments":["but"]},{"Key":"verb but","Fragments":["it's"]},{"Key":"but it's","Fragments":["not"]},{"Key":"clear from","Fragments":["the"]},{"Key":"the name","Fragments":["what","should"]},{"Key":"name what","Fragments":["it"]},{"Key":"is acting","Fragments":["on."]},{"Key":"acting on.","Fragments":["Maybe"]},{"Key":"Maybe randomName","Fragments":["would"]},{"Key":"randomName would","Fragments":["be"]},{"Key":" `randomize`","Fragments":["is"]},{"Key":"`randomize` is","Fragments":["private"]},{"Key":"is private","Fragments":["and"]},{"Key":"private and","Fragments":["only"]},{"Key":"and only","Fragments":["used"]},{"Key":"used twice.","Fragments":["Also"]},{"Key":"twice. Also","Fragments":["the"]},{"Key":"Also the","Fragments":["only"]},{"Key":"only attribute","Fragments":["a"]},{"Key":"attribute a","Fragments":["robot"]},{"Key":"a robot","Fragments":["has,"]},{"Key":"robot has,","Fragments":["is"]},{"Key":"has, is","Fragments":["its"]},{"Key":"its name.","Fragments":["So"]},{"Key":"name. So","Fragments":["it"]},{"Key":"be clear","Fragments":["what"]},{"Key":"what it's","Fragments":["meaning"]},{"Key":"it's meaning","Fragments":["is"]},{"Key":"meaning is","Fragments":["in"]},{"Key":"is in","Fragments":["this","a"]},{"Key":"this context.","Fragments":["If"]},{"Key":"context. If","Fragments":["it"]},{"Key":"If it","Fragments":["were"]},{"Key":"were public","Fragments":["and"]},{"Key":"public and","Fragments":["part"]},{"Key":"and part","Fragments":["of"]},{"Key":"the API,","Fragments":["I"]},{"Key":"API, I","Fragments":["would"]},{"Key":"would sure","Fragments":["use"]},{"Key":"sure use","Fragments":["another"]},{"Key":"use another","Fragments":["name"]},{"Key":"another name","Fragments":[":)"]},{"Key":"of named","Fragments":["ranges"]},{"Key":"named ranges","Fragments":["and"]},{"Key":"and sticking","Fragments":["them"]},{"Key":"sticking them","Fragments":["in"]},{"Key":"a vector.","Fragments":["I"]},{"Key":"vector. I","Fragments":["found"]},{"Key":"found the","Fragments":["interface"]},{"Key":"the interface","Fragments":["to"]},{"Key":"interface to","Fragments":["most"]},{"Key":"to most","Fragments":["of"]},{"Key":"the `rand::`","Fragments":["functions"]},{"Key":"`rand::` functions","Fragments":["confusing."]},{"Key":"The test","Fragments":["suite","module"]},{"Key":"suite is","Fragments":["wrong,"]},{"Key":"is wrong,","Fragments":["the"]},{"Key":"wrong, the","Fragments":["name"]},{"Key":"name should","Fragments":["have"]},{"Key":"have 2","Fragments":["letters"]},{"Key":"2 letters","Fragments":["not"]},{"Key":"letters not","Fragments":["3."]},{"Key":"not 3.","Fragments":["I"]},{"Key":"3. I","Fragments":["sent"]},{"Key":"the gen_range()","Fragments":["method"]},{"Key":"gen_range() method","Fragments":["from"]},{"Key":"from Stack","Fragments":["Overflow"]},{"Key":"Overflow :","Fragments":["http://stackoverflow.com/questions/30487833/generate-random-letter-and-fixed-number-combination"]},{"Key":"string on","Fragments":["n"]},{"Key":"on n","Fragments":["instead"]},{"Key":"n instead","Fragments":["of"]},{"Key":"the format.","Fragments":["is_empty"]},{"Key":"format. is_empty","Fragments":["on"]},{"Key":"is_empty on","Fragments":["string"]},{"Key":"on string","Fragments":["instead"]},{"Key":"string instead","Fragments":["of"]},{"Key":"of checking","Fragments":["the"]},{"Key":"checking the","Fragments":["size"]},{"Key":"size reads","Fragments":["better,"]},{"Key":"reads better,","Fragments":["IMO."]},{"Key":"for anagrams,","Fragments":["it"]},{"Key":"anagrams, it","Fragments":["is"]},{"Key":"the `word.to_lowercase()`","Fragments":["work"]},{"Key":"`word.to_lowercase()` work","Fragments":["on"]},{"Key":"have converted","Fragments":["the"]},{"Key":"converted the","Fragments":["result"]},{"Key":"of `.count()`","Fragments":["to"]},{"Key":"`.count()` to","Fragments":["`u32`"]},{"Key":"to `u32`","Fragments":["or"]},{"Key":"or `u64`","Fragments":["or"]},{"Key":"`u64` or","Fragments":["something,"]},{"Key":"or something,","Fragments":["but"]},{"Key":"something, but","Fragments":["decided"]},{"Key":"but decided","Fragments":["that"]},{"Key":"decided that","Fragments":["if"]},{"Key":"if `usize`","Fragments":["was"]},{"Key":"was good","Fragments":["enough"]},{"Key":"good enough","Fragments":["for","for"]},{"Key":"standard library,","Fragments":["then","so"]},{"Key":"library, then","Fragments":["it's"]},{"Key":"then it's","Fragments":["good"]},{"Key":"it's good","Fragments":["enough"]},{"Key":"think `sum_loop()`","Fragments":["is"]},{"Key":"`sum_loop()` is","Fragments":["making"]},{"Key":"is making","Fragments":["this"]},{"Key":"making this","Fragments":["code"]},{"Key":"to understand.","Fragments":["A"]},{"Key":"understand. A","Fragments":["simple"]},{"Key":"A simple","Fragments":["for-loop"]},{"Key":"simple for-loop","Fragments":["in"]},{"Key":"for-loop in","Fragments":["`square_of_sum()`"]},{"Key":"in `square_of_sum()`","Fragments":["and"]},{"Key":"`square_of_sum()` and","Fragments":["`sum_of_squares()`"]},{"Key":"and `sum_of_squares()`","Fragments":["would"]},{"Key":"`sum_of_squares()` would","Fragments":["be"]},{"Key":"Also is","Fragments":["the"]},{"Key":"the `in`","Fragments":["in"]},{"Key":"`in` in","Fragments":["variable"]},{"Key":"in variable","Fragments":["names"]},{"Key":"specify they","Fragments":["are"]},{"Key":"are input","Fragments":["values?"]},{"Key":"input values?","Fragments":["I"]},{"Key":"values? I","Fragments":["don't"]},{"Key":"think those","Fragments":["are","dangling"]},{"Key":"those are","Fragments":["needed,"]},{"Key":"are needed,","Fragments":["you"]},{"Key":"needed, you","Fragments":["should"]},{"Key":"should normally","Fragments":["pass"]},{"Key":"normally pass","Fragments":["output"]},{"Key":"pass output","Fragments":["via"]},{"Key":"output via","Fragments":["the"]},{"Key":"return value.","Fragments":["If"]},{"Key":"value. If","Fragments":["you"]},{"Key":"keep them","Fragments":["you"]},{"Key":"them you","Fragments":["should"]},{"Key":"be consistent,","Fragments":["eg."]},{"Key":"consistent, eg.","Fragments":["`in_one`"]},{"Key":"eg. `in_one`","Fragments":["vs."]},{"Key":"`in_one` vs.","Fragments":["`i_in`."]},{"Key":"to agree","Fragments":["with"]},{"Key":"with you","Fragments":["on","that"]},{"Key":"you on","Fragments":["all"]},{"Key":"on all","Fragments":["points."]},{"Key":"all points.","Fragments":["The"]},{"Key":"points. The","Fragments":["idea"]},{"Key":"The idea","Fragments":["was"]},{"Key":"idea was","Fragments":["to"]},{"Key":"have only","Fragments":["one","learned"]},{"Key":"with mutable","Fragments":["variables,"]},{"Key":"mutable variables,","Fragments":["although"]},{"Key":"variables, although","Fragments":["square_of_sum"]},{"Key":"although square_of_sum","Fragments":["cheats"]},{"Key":"square_of_sum cheats","Fragments":["a"]},{"Key":"cheats a","Fragments":["bit"]},{"Key":"bit by","Fragments":["returning"]},{"Key":"by returning","Fragments":["an"]},{"Key":"returning an","Fragments":["immutable"]},{"Key":"an immutable","Fragments":["number","number."]},{"Key":"immutable number","Fragments":["times"]},{"Key":"number times","Fragments":["an"]},{"Key":"times an","Fragments":["immutable"]},{"Key":"To be","Fragments":["completely","honest,"]},{"Key":"be completely","Fragments":["honest,"]},{"Key":"completely honest,","Fragments":["I"]},{"Key":"honest, I","Fragments":["haven't","could"]},{"Key":"haven't thought","Fragments":["too","about"]},{"Key":"thought too","Fragments":["carefully"]},{"Key":"too carefully","Fragments":["about"]},{"Key":"carefully about","Fragments":["the"]},{"Key":"the variable","Fragments":["names."]},{"Key":"variable names.","Fragments":["the"]},{"Key":"names. the","Fragments":["in"]},{"Key":"in is","Fragments":["certainly"]},{"Key":"is certainly","Fragments":["not","more"]},{"Key":"certainly not","Fragments":["needed"]},{"Key":"needed in","Fragments":["the"]},{"Key":"the sense","Fragments":["that"]},{"Key":"sense that","Fragments":["the"]},{"Key":"the program","Fragments":["would"]},{"Key":"program would","Fragments":["still"]},{"Key":"still work","Fragments":["if"]},{"Key":"work if","Fragments":["the"]},{"Key":"input variables","Fragments":["were"]},{"Key":"variables were","Fragments":["just"]},{"Key":"were just","Fragments":["called"]},{"Key":"just called","Fragments":["```i```"]},{"Key":"called ```i```","Fragments":["etc."]},{"Key":"```i``` etc.","Fragments":["They"]},{"Key":"etc. They","Fragments":["make"]},{"Key":"They make","Fragments":["the"]},{"Key":"most sense","Fragments":["in"]},{"Key":"sense in","Fragments":["the"]},{"Key":"the public","Fragments":["functions"]},{"Key":"functions where","Fragments":["the"]},{"Key":"the something","Fragments":["happens"]},{"Key":"something happens","Fragments":["to"]},{"Key":"happens to","Fragments":["the"]},{"Key":"in variables","Fragments":["and"]},{"Key":"an different","Fragments":["variable"]},{"Key":"different variable","Fragments":["is"]},{"Key":"is returned.","Fragments":["I"]},{"Key":"returned. I","Fragments":["would"]},{"Key":"different variables","Fragments":["with"]},{"Key":"variables with","Fragments":["the"]},{"Key":"same name","Fragments":["in"]},{"Key":"name in","Fragments":["different"]},{"Key":"in different","Fragments":["functions,"]},{"Key":"different functions,","Fragments":["as","it"]},{"Key":"functions, as","Fragments":["this"]},{"Key":"this often","Fragments":["leads"]},{"Key":"often leads","Fragments":["to"]},{"Key":"leads to","Fragments":["confusion"]},{"Key":"to confusion","Fragments":["(although"]},{"Key":"confusion (although","Fragments":["I"]},{"Key":"(although I","Fragments":["have","don't"]},{"Key":"it here","Fragments":["-"]},{"Key":"here -","Fragments":["natch)."]},{"Key":" the","Fragments":["```fold```","generate"]},{"Key":"the ```fold```","Fragments":["method","on"]},{"Key":"```fold``` method","Fragments":["in"]},{"Key":"method in","Fragments":["line","the"]},{"Key":"line 2","Fragments":["is","and"]},{"Key":"2 is","Fragments":["equivalent"]},{"Key":"mut sum","Fragments":["="]},{"Key":"sum =","Fragments":["0;"]},{"Key":"for x","Fragments":["in"]},{"Key":"x in","Fragments":["1..(i"]},{"Key":"in 1..(i","Fragments":["+"]},{"Key":"1..(i +","Fragments":["1){"]},{"Key":" sum","Fragments":["+="]},{"Key":"sum +=","Fragments":["x;"]},{"Key":" (more","Fragments":["or"]},{"Key":"(more or","Fragments":["less"]},{"Key":"or less","Fragments":["-","happy","clear,","performant."]},{"Key":"less -","Fragments":["sum"]},{"Key":"- sum","Fragments":["is"]},{"Key":"is mutable","Fragments":["here,"]},{"Key":"mutable here,","Fragments":["but"]},{"Key":"here, but","Fragments":["immutable","I"]},{"Key":"but immutable","Fragments":["in"]},{"Key":"immutable in","Fragments":["the"]},{"Key":"the solution),","Fragments":["I'm"]},{"Key":"solution), I'm","Fragments":["not"]},{"Key":"it's any","Fragments":["quicker,"]},{"Key":"any quicker,","Fragments":["but"]},{"Key":"quicker, but","Fragments":["it"]},{"Key":"sure looks","Fragments":["cleaner."]},{"Key":"more readable!","Fragments":["I"]},{"Key":"readable! I","Fragments":["just"]},{"Key":"small nitpick,","Fragments":["you"]},{"Key":"nitpick, you","Fragments":["can"]},{"Key":"same variable","Fragments":["name"]},{"Key":"variable name","Fragments":["for","is"]},{"Key":"input as","Fragments":["it's"]},{"Key":"as it's","Fragments":["different"]},{"Key":"it's different","Fragments":["functions,"]},{"Key":"functions, it","Fragments":["would"]},{"Key":"they all","Fragments":["used"]},{"Key":"all used","Fragments":["the"]},{"Key":"same name.","Fragments":["Also"]},{"Key":"name. Also","Fragments":["i,j,k"]},{"Key":"Also i,j,k","Fragments":["are"]},{"Key":"i,j,k are","Fragments":["usually"]},{"Key":"usually kept","Fragments":["for"]},{"Key":"kept for","Fragments":["iterators"]},{"Key":"iterators by","Fragments":["convention."]},{"Key":"not agree","Fragments":["that"]},{"Key":"agree that","Fragments":["the","it"]},{"Key":"the `for`","Fragments":["approach"]},{"Key":"`for` approach","Fragments":["looks"]},{"Key":"approach looks","Fragments":["cleaner."]},{"Key":"looks cleaner.","Fragments":["It's"]},{"Key":"cleaner. It's","Fragments":["just"]},{"Key":"It's just","Fragments":["a"]},{"Key":"of being","Fragments":["used"]},{"Key":"being used","Fragments":["to","when"]},{"Key":"to functional","Fragments":["programming"]},{"Key":"programming paradigms.","Fragments":["Coming"]},{"Key":"paradigms. Coming","Fragments":["from"]},{"Key":"a Ruby","Fragments":["background,"]},{"Key":"Ruby background,","Fragments":["where"]},{"Key":"background, where","Fragments":["operations"]},{"Key":"where operations","Fragments":["on"]},{"Key":"operations on","Fragments":["collections"]},{"Key":"on collections","Fragments":["are"]},{"Key":"collections are","Fragments":["done"]},{"Key":"are done","Fragments":["in"]},{"Key":"functional fashion,","Fragments":["using"]},{"Key":"fashion, using","Fragments":["`fold`"]},{"Key":"`fold` felt","Fragments":["like"]},{"Key":"a natural","Fragments":["choice"]},{"Key":"natural choice","Fragments":["to"]},{"Key":"understand that","Fragments":["for"]},{"Key":"that for","Fragments":["someone"]},{"Key":"for someone","Fragments":["coming"]},{"Key":"someone coming","Fragments":["from"]},{"Key":"more imperative","Fragments":["language,"]},{"Key":"imperative language,","Fragments":["using"]},{"Key":"language, using","Fragments":["a"]},{"Key":"loop approach","Fragments":["might"]},{"Key":"approach might","Fragments":["be"]},{"Key":"read /","Fragments":["understand."]},{"Key":" @efren","Fragments":["my"]},{"Key":"@efren my","Fragments":["issue"]},{"Key":"my issue","Fragments":["was"]},{"Key":"issue was","Fragments":["not"]},{"Key":"not with","Fragments":["the"]},{"Key":"functional vs","Fragments":["for-loop"]},{"Key":"vs for-loop","Fragments":["approach"]},{"Key":"for-loop approach","Fragments":["but"]},{"Key":"approach but","Fragments":["with"]},{"Key":"but with","Fragments":["the"]},{"Key":"the `","Fragments":["sum_loop()`"]},{"Key":"` sum_loop()`","Fragments":["function"]},{"Key":"sum_loop()` function","Fragments":["in"]},{"Key":"iteration. In","Fragments":["this"]},{"Key":"both approaches","Fragments":["are"]},{"Key":"approaches are","Fragments":["fine"]},{"Key":"are fine","Fragments":["and"]},{"Key":"fine and","Fragments":["I"]},{"Key":"Thank you,","Fragments":["and"]},{"Key":"you, and","Fragments":["I"]},{"Key":"agree it's","Fragments":["much"]},{"Key":"read. I'm","Fragments":["really"]},{"Key":"really liking","Fragments":["the"]},{"Key":"liking the","Fragments":["built"]},{"Key":"the built","Fragments":["in"]},{"Key":"built in","Fragments":["methods","stack"]},{"Key":"in methods","Fragments":["of"]},{"Key":"methods of","Fragments":["rust"]},{"Key":"rust -","Fragments":["it"]},{"Key":"- it","Fragments":["feels"]},{"Key":"feels to","Fragments":["me"]},{"Key":"a cross","Fragments":["between"]},{"Key":"cross between","Fragments":["C"]},{"Key":"between C","Fragments":["and"]},{"Key":"C and","Fragments":["python"]},{"Key":"and python","Fragments":[":)"]},{"Key":"big issue","Fragments":["here,"]},{"Key":"issue here,","Fragments":["but"]},{"Key":"do prefer","Fragments":["to"]},{"Key":"to name","Fragments":["variables"]},{"Key":"name variables","Fragments":["differently"]},{"Key":"variables differently","Fragments":["if"]},{"Key":"differently if","Fragments":["possible."]},{"Key":"if possible.","Fragments":["I","Second,"]},{"Key":"possible. I","Fragments":["find"]},{"Key":"keep track","Fragments":["of"]},{"Key":"track of","Fragments":["what"]},{"Key":"what does","Fragments":["what"]},{"Key":"does what","Fragments":["in"]},{"Key":"what in","Fragments":["a"]},{"Key":"larger program","Fragments":["than"]},{"Key":"program than","Fragments":["this."]},{"Key":"than this.","Fragments":["Agreed"]},{"Key":"this. Agreed","Fragments":["on"]},{"Key":"Agreed on","Fragments":["the"]},{"Key":"the iterators","Fragments":["convention"]},{"Key":"iterators convention","Fragments":["too,"]},{"Key":"convention too,","Fragments":["but"]},{"Key":"too, but","Fragments":["conventions"]},{"Key":"but conventions","Fragments":["usually"]},{"Key":"conventions usually","Fragments":["exist"]},{"Key":"usually exist","Fragments":["for"]},{"Key":"exist for","Fragments":["no","the"]},{"Key":"for no","Fragments":["good"]},{"Key":"no good","Fragments":["reason,"]},{"Key":"good reason,","Fragments":["and"]},{"Key":"reason, and","Fragments":["this"]},{"Key":"one is","Fragments":["no"]},{"Key":"no exception","Fragments":["in"]},{"Key":"exception in","Fragments":["my"]},{"Key":"The iterator","Fragments":["is"]},{"Key":"iterator is","Fragments":["lazy,"]},{"Key":"is lazy,","Fragments":["so"]},{"Key":"your last","Fragments":["iteration"]},{"Key":"last iteration","Fragments":["should"]},{"Key":"iteration should","Fragments":["only"]},{"Key":"should only","Fragments":["traverse"]},{"Key":"only traverse","Fragments":["once"]},{"Key":"traverse once","Fragments":["as"]},{"Key":"once as","Fragments":["well."]},{"Key":"well. Try","Fragments":["benchmarking"]},{"Key":"Try benchmarking","Fragments":["with"]},{"Key":"benchmarking with","Fragments":["a"]},{"Key":"a large","Fragments":["input."]},{"Key":"one only","Fragments":["iterates"]},{"Key":"only iterates","Fragments":["once"]},{"Key":"iterates once","Fragments":["after"]},{"Key":"once after","Fragments":["the"]},{"Key":"considered writing","Fragments":["this"]},{"Key":"writing this","Fragments":["based"]},{"Key":"this based","Fragments":["on"]},{"Key":"a hashset.","Fragments":[":)"]},{"Key":"wrote it","Fragments":["based"]},{"Key":"it based","Fragments":["on"]},{"Key":"vector instead","Fragments":["because"]},{"Key":"instead because","Fragments":["I"]},{"Key":"actually have","Fragments":["a"]},{"Key":"of experience","Fragments":["using"]},{"Key":"experience using","Fragments":["vectors"]},{"Key":"using vectors","Fragments":["for"]},{"Key":"vectors for","Fragments":["exactly"]},{"Key":"exactly this","Fragments":["purpose"]},{"Key":"this purpose","Fragments":["(or,"]},{"Key":"purpose (or,","Fragments":["you"]},{"Key":"(or, you","Fragments":["know,"]},{"Key":"you know,","Fragments":["`List\u003cT\u003e`","blow"]},{"Key":"know, `List\u003cT\u003e`","Fragments":["in"]},{"Key":"`List\u003cT\u003e` in","Fragments":["C#)"]},{"Key":"in C#)","Fragments":["and"]},{"Key":"C#) and","Fragments":["because"]},{"Key":"and because","Fragments":["there"]},{"Key":"because there","Fragments":["are"]},{"Key":"are legitimate","Fragments":["reasons"]},{"Key":"legitimate reasons","Fragments":["to"]},{"Key":"do that:","Fragments":["the"]},{"Key":"that: the","Fragments":["cost"]},{"Key":"of hashing","Fragments":["an"]},{"Key":"hashing an","Fragments":["item"]},{"Key":"an item","Fragments":["on"]},{"Key":"item on","Fragments":["insertion"]},{"Key":"on insertion","Fragments":["can"]},{"Key":"insertion can","Fragments":["be"]},{"Key":"be significant,","Fragments":["and"]},{"Key":"significant, and","Fragments":["if"]},{"Key":"away with","Fragments":["not","it."]},{"Key":"with not","Fragments":["sorting"]},{"Key":"not sorting","Fragments":["or"]},{"Key":"or sorting","Fragments":["only"]},{"Key":"sorting only","Fragments":["once"]},{"Key":"once (although","Fragments":["I"]},{"Key":"don't in","Fragments":["this"]},{"Key":"this case...),","Fragments":["then"]},{"Key":"case...), then","Fragments":["this"]},{"Key":"this makes","Fragments":["for","it"]},{"Key":"a decent","Fragments":["alternative."]},{"Key":"* Converting","Fragments":["a"]},{"Key":"Converting a","Fragments":["string"]},{"Key":"string to","Fragments":["lowercase"]},{"Key":"lowercase seems","Fragments":["needlessly"]},{"Key":"seems needlessly","Fragments":["frustrating"]},{"Key":"needlessly frustrating","Fragments":["in"]},{"Key":"frustrating in","Fragments":["rust!"]},{"Key":"hash using","Fragments":["a"]},{"Key":"a `fold`","Fragments":["but","(though"]},{"Key":"`fold` but","Fragments":["couldn't"]},{"Key":"really understand","Fragments":["lifetimes,","why"]},{"Key":"understand lifetimes,","Fragments":["I"]},{"Key":"lifetimes, I","Fragments":["just"]},{"Key":"did what","Fragments":["the"]},{"Key":"compiler told","Fragments":["me"]},{"Key":"told me","Fragments":["to"]},{"Key":"Rust nightly","Fragments":["you"]},{"Key":"nightly you","Fragments":["can"]},{"Key":"call `.to_lowercase()`","Fragments":["on"]},{"Key":"`.to_lowercase()` on","Fragments":["String."]},{"Key":" Does","Fragments":["```allergens```"]},{"Key":"Does ```allergens```","Fragments":["need"]},{"Key":"```allergens``` need","Fragments":["to"]},{"Key":"be public?","Fragments":["Note"]},{"Key":"public? Note","Fragments":["it"]},{"Key":"Note it","Fragments":["creates"]},{"Key":"creates a","Fragments":["new"]},{"Key":"new vector","Fragments":["each"]},{"Key":"vector each","Fragments":["time"]},{"Key":"time which","Fragments":["is"]},{"Key":"method even","Fragments":["exist."]},{"Key":"even exist.","Fragments":[":-)"]},{"Key":"exist. :-)","Fragments":["That's"]},{"Key":":-) That's","Fragments":["just"]},{"Key":"That's just","Fragments":["me"]},{"Key":"just me","Fragments":["reading"]},{"Key":"me reading","Fragments":["the"]},{"Key":"tests wrong.","Fragments":["Thanks."]},{"Key":"You should","Fragments":["use","check"]},{"Key":"use ```chars```","Fragments":["to"]},{"Key":"```chars``` to","Fragments":["iterate"]},{"Key":"the strings,","Fragments":["they"]},{"Key":"strings, they","Fragments":["are"]},{"Key":"The exercise","Fragments":["can"]},{"Key":"exercise can","Fragments":["be"]},{"Key":"done using","Fragments":["the"]},{"Key":"the ```zip```","Fragments":["function,"]},{"Key":"```zip``` function,","Fragments":["the"]},{"Key":"function, the","Fragments":["result"]},{"Key":"result should","Fragments":["be"]},{"Key":"Looks great,","Fragments":["but"]},{"Key":"great, but","Fragments":["could"]},{"Key":"but could","Fragments":["be"]},{"Key":"Interesting solution","Fragments":["-"]},{"Key":"solution -","Fragments":["very"]},{"Key":"- very","Fragments":["informative"]},{"Key":"very informative","Fragments":["for"]},{"Key":"informative for","Fragments":["me"]},{"Key":"me -","Fragments":["thanks."]},{"Key":"think there's","Fragments":["too"]},{"Key":"there's too","Fragments":["much","much"]},{"Key":"much duplicated","Fragments":["code"]},{"Key":" Agreed.","Fragments":["I'm"]},{"Key":"Agreed. I'm","Fragments":["tidying"]},{"Key":"I'm tidying","Fragments":["it"]},{"Key":"tidying it","Fragments":["up"]},{"Key":"it up","Fragments":["now."]},{"Key":"It's better","Fragments":["to"]},{"Key":"use u64,","Fragments":["as"]},{"Key":"u64, as","Fragments":["all"]},{"Key":"all numbers","Fragments":["are"]},{"Key":"numbers are","Fragments":["positive,"]},{"Key":"are positive,","Fragments":["and"]},{"Key":"positive, and","Fragments":["u64"]},{"Key":"and u64","Fragments":["has"]},{"Key":"u64 has","Fragments":["a"]},{"Key":"a greater","Fragments":["range."]},{"Key":"integers for","Fragments":["a"]},{"Key":"I first","Fragments":["did"]},{"Key":"first did","Fragments":["this,"]},{"Key":"did this,","Fragments":["I"]},{"Key":"this, I","Fragments":["kinda"]},{"Key":"I kinda","Fragments":["felt"]},{"Key":"kinda felt","Fragments":["like"]},{"Key":"iterator was","Fragments":["the"]},{"Key":"go because","Fragments":["I"]},{"Key":"couldn't guarantee","Fragments":["a"]},{"Key":"guarantee a","Fragments":["given"]},{"Key":"given length","Fragments":["for"]},{"Key":"length for","Fragments":["the"]},{"Key":"input value","Fragments":["and"]},{"Key":"could, you","Fragments":["know,"]},{"Key":"know, blow","Fragments":["things"]},{"Key":"blow things","Fragments":["up"]},{"Key":"things up","Fragments":["because"]},{"Key":"up because","Fragments":["the"]},{"Key":"slice expected","Fragments":["more"]},{"Key":"expected more","Fragments":["indices"]},{"Key":"more indices","Fragments":["than"]},{"Key":"indices than","Fragments":["were"]},{"Key":"than were","Fragments":["present..."]},{"Key":" ...Obviously,","Fragments":["as"]},{"Key":"...Obviously, as","Fragments":["you"]},{"Key":"see on","Fragments":["lines"]},{"Key":"lines 13","Fragments":["through","and"]},{"Key":"13 through","Fragments":["17,"]},{"Key":"through 17,","Fragments":["that's"]},{"Key":"17, that's","Fragments":["not"]},{"Key":"as big","Fragments":["a"]},{"Key":"problem as","Fragments":["I"]},{"Key":"made it","Fragments":["out","click","shorter"]},{"Key":"really clear","Fragments":["approach."]},{"Key":"clear approach.","Fragments":["I"]},{"Key":"approach. I","Fragments":["like"]},{"Key":"the mixture","Fragments":["of"]},{"Key":"mixture of","Fragments":["if"]},{"Key":"of if","Fragments":["statements"]},{"Key":"statements and","Fragments":["return"]},{"Key":"One tiny","Fragments":["little"]},{"Key":"tiny little","Fragments":["thing."]},{"Key":"little thing.","Fragments":["Why"]},{"Key":"thing. Why","Fragments":["did"]},{"Key":"choose isize?","Fragments":["Does"]},{"Key":"isize? Does","Fragments":["this"]},{"Key":"Does this","Fragments":["rule"]},{"Key":"this rule","Fragments":["applies"]},{"Key":"rule applies","Fragments":["negative"]},{"Key":"applies negative","Fragments":["date?"]},{"Key":"negative date?","Fragments":["And"]},{"Key":"date? And","Fragments":["the"]},{"Key":"the 'size'","Fragments":["part"]},{"Key":"'size' part","Fragments":["I"]},{"Key":"part I","Fragments":["read"]},{"Key":"read has","Fragments":["a"]},{"Key":"a hint","Fragments":["that"]},{"Key":"hint that","Fragments":["it's"]},{"Key":"used as","Fragments":["some"]},{"Key":"loop, it's","Fragments":["more"]},{"Key":"to translate","Fragments":["the"]},{"Key":"translate the","Fragments":["compressed"]},{"Key":"the compressed","Fragments":["codons,"]},{"Key":"compressed codons,","Fragments":["but"]},{"Key":"codons, but","Fragments":["i"]},{"Key":"but i","Fragments":["could","can't"]},{"Key":"i could","Fragments":["not"]},{"Key":"could not","Fragments":["seem","care","return"]},{"Key":"not seem","Fragments":["to"]},{"Key":"to spot","Fragments":["any"]},{"Key":"spot any","Fragments":["good"]},{"Key":"any good","Fragments":["patterns."]},{"Key":"need mutable","Fragments":["state"]},{"Key":"state for","Fragments":["this"]},{"Key":" my","Fragments":["fist"]},{"Key":"my fist","Fragments":["implementation"]},{"Key":"fist implementation","Fragments":["did"]},{"Key":"implementation did","Fragments":["not"]},{"Key":"not take","Fragments":["the"]},{"Key":"name into","Fragments":["account,"]},{"Key":"into account,","Fragments":["so"]},{"Key":"account, so","Fragments":["i"]},{"Key":"so i","Fragments":["rewrote","don't"]},{"Key":"i rewrote","Fragments":["it"]},{"Key":"rewrote it","Fragments":["with"]},{"Key":"the generate","Fragments":["name"]},{"Key":"generate name","Fragments":["function"]},{"Key":"name function","Fragments":["has"]},{"Key":"function has","Fragments":["some"]},{"Key":"duplication ,","Fragments":["but"]},{"Key":", but","Fragments":["i"]},{"Key":"i can't","Fragments":["think"]},{"Key":"can't think","Fragments":["of"]},{"Key":" unicode-segmentation","Fragments":["="]},{"Key":"unicode-segmentation =","Fragments":["\"0.1.2\""]},{"Key":"a possible","Fragments":["small","hangover"]},{"Key":"possible small","Fragments":["inefficiency"]},{"Key":"small inefficiency","Fragments":["in"]},{"Key":"inefficiency in","Fragments":["using"]},{"Key":"in using","Fragments":["two"]},{"Key":"using two","Fragments":["`filter`"]},{"Key":"two `filter`","Fragments":["calls"]},{"Key":"`filter` calls","Fragments":["on"]},{"Key":"calls on","Fragments":["lines"]},{"Key":"lines 32","Fragments":["and"]},{"Key":"32 and","Fragments":["33;"]},{"Key":"and 33;","Fragments":["I"]},{"Key":"33; I","Fragments":["don't"]},{"Key":"know enough","Fragments":["about"]},{"Key":"enough about","Fragments":["Rust's"]},{"Key":"about Rust's","Fragments":["internals"]},{"Key":"Rust's internals","Fragments":["to"]},{"Key":"internals to","Fragments":["know"]},{"Key":"can compact","Fragments":["them."]},{"Key":"compact them.","Fragments":["But"]},{"Key":"them. But","Fragments":["it"]},{"Key":"so much","Fragments":["more","during"]},{"Key":"readable that","Fragments":["I"]},{"Key":"I kept","Fragments":["it."]},{"Key":"the `entry(key).or_insert(default)`","Fragments":["pattern"]},{"Key":"`entry(key).or_insert(default)` pattern","Fragments":["for"]},{"Key":"pattern for","Fragments":["counters/accumulators"]},{"Key":"for counters/accumulators","Fragments":["in"]},{"Key":"counters/accumulators in","Fragments":["Rust."]},{"Key":"The big","Fragments":["insight"]},{"Key":"big insight","Fragments":["for"]},{"Key":"insight for","Fragments":["me"]},{"Key":"here was","Fragments":["how","running","to"]},{"Key":"was how","Fragments":["to"]},{"Key":"lifetime of","Fragments":["a"]},{"Key":"string slice","Fragments":["through"]},{"Key":"slice through","Fragments":["a"]},{"Key":"a function;","Fragments":["I'd"]},{"Key":"function; I'd","Fragments":["struggled"]},{"Key":"I'd struggled","Fragments":["with"]},{"Key":"other Rust","Fragments":["I'd"]},{"Key":"Rust I'd","Fragments":["written,"]},{"Key":"I'd written,","Fragments":["but"]},{"Key":"written, but","Fragments":["this"]},{"Key":"exercise made","Fragments":["it"]},{"Key":"it click","Fragments":["for"]},{"Key":"click for","Fragments":["me."]},{"Key":"for me.","Fragments":["Define"]},{"Key":"me. Define","Fragments":["a"]},{"Key":"Define a","Fragments":["lifetime,"]},{"Key":"a lifetime,","Fragments":["and"]},{"Key":"lifetime, and","Fragments":["then"]},{"Key":"then make","Fragments":["it"]},{"Key":"same one","Fragments":["for"]},{"Key":"and output.","Fragments":["Voilà."]},{"Key":" @richard","Fragments":["thanks!"]},{"Key":"Quite simple","Fragments":["and"]},{"Key":"1. You","Fragments":["don't","may"]},{"Key":"2. It","Fragments":["would"]},{"Key":"common calculations","Fragments":["into"]},{"Key":"Interesting choice","Fragments":["to"]},{"Key":"use `fold()`.","Fragments":["I"]},{"Key":"`fold()`. I","Fragments":["think"]},{"Key":"those dangling","Fragments":["`hm`'s"]},{"Key":"dangling `hm`'s","Fragments":["are"]},{"Key":"`hm`'s are","Fragments":["a"]},{"Key":"bit awkward,","Fragments":["but"]},{"Key":"awkward, but","Fragments":["that"]},{"Key":"comes down","Fragments":["to"]},{"Key":"to personal","Fragments":["style."]},{"Key":"But you","Fragments":["should"]},{"Key":"simplify lines","Fragments":["16-20"]},{"Key":"lines 16-20","Fragments":["to"]},{"Key":"16-20 to","Fragments":["just"]},{"Key":" *hm.entry(nucleotide).or_insert(0)","Fragments":["+="]},{"Key":"*hm.entry(nucleotide).or_insert(0) +=","Fragments":["1;"]},{"Key":"and nicely","Fragments":["aligned"]},{"Key":"nicely aligned","Fragments":["-"]},{"Key":"aligned -","Fragments":["you"]},{"Key":"see logic","Fragments":["behind"]},{"Key":"logic behind","Fragments":["it"]},{"Key":"behind it","Fragments":["from"]},{"Key":"first look.","Fragments":["Implicit"]},{"Key":"look. Implicit","Fragments":["return"]},{"Key":"Implicit return","Fragments":["is"]},{"Key":"is nice","Fragments":["here,"]},{"Key":"nice here,","Fragments":["you"]},{"Key":"here, you","Fragments":["won't"]},{"Key":"won't get","Fragments":["this"]},{"Key":"this align","Fragments":["with"]},{"Key":"align with","Fragments":["explicit"]},{"Key":"with explicit","Fragments":["one"]},{"Key":"explicit one","Fragments":["(like"]},{"Key":"one (like","Fragments":["in"]},{"Key":"(like in","Fragments":["first"]},{"Key":"in first","Fragments":["iteration)."]},{"Key":"solution iterates","Fragments":["through"]},{"Key":"iterates through","Fragments":["the"]},{"Key":"entire input","Fragments":["string"]},{"Key":"input string","Fragments":["once"]},{"Key":"string once","Fragments":["for"]},{"Key":"possible nucleotides.","Fragments":["It's"]},{"Key":"nucleotides. It's","Fragments":["likely"]},{"Key":"go through","Fragments":["the"]},{"Key":"haven't seen","Fragments":["`matches()`"]},{"Key":"seen `matches()`","Fragments":["before"]},{"Key":"`matches()` before","Fragments":["-"]},{"Key":"before -","Fragments":["useful"]},{"Key":"- useful","Fragments":["method."]},{"Key":" **Super","Fragments":["clean"]},{"Key":"**Super clean","Fragments":["code!**"]},{"Key":"felt it","Fragments":["was"]},{"Key":"was necessary","Fragments":["to"]},{"Key":"implement `is_shouting`","Fragments":["as:"]},{"Key":"fn is_shouting(string:","Fragments":["String)"]},{"Key":"is_shouting(string: String)","Fragments":["-\u003e"]},{"Key":"String) -\u003e","Fragments":["bool","String"]},{"Key":" string.chars().all(|c|","Fragments":["(!c.is_alphabetic())"]},{"Key":"string.chars().all(|c| (!c.is_alphabetic())","Fragments":["||"]},{"Key":"(!c.is_alphabetic()) ||","Fragments":["c.is_uppercase()"]},{"Key":"|| c.is_uppercase()","Fragments":[")"]},{"Key":"However, I","Fragments":["couldn't","couldn't"]},{"Key":"to compile","Fragments":["with","on","in","at"]},{"Key":"compile with","Fragments":["the"]},{"Key":"Rust alpha","Fragments":["2.","2."]},{"Key":"alpha 2.","Fragments":["**There","There"]},{"Key":"2. **There","Fragments":["were"]},{"Key":"**There were","Fragments":["two"]},{"Key":"were two","Fragments":["issues**:","issues:"]},{"Key":"1. The","Fragments":["test","`enum`"]},{"Key":"test module","Fragments":["couldn't"]},{"Key":"module couldn't","Fragments":["find"]},{"Key":"the code.","Fragments":["To"]},{"Key":"code. To","Fragments":["fix"]},{"Key":"To fix","Fragments":["this","this"]},{"Key":"fix this","Fragments":["I","I","in","bug."]},{"Key":"just took","Fragments":["`mod"]},{"Key":"took `mod","Fragments":["bob"]},{"Key":"`mod bob","Fragments":["{`"]},{"Key":"bob {`","Fragments":["out"]},{"Key":"2. `str`","Fragments":["slices"]},{"Key":"`str` slices","Fragments":["don't"]},{"Key":"slices don't","Fragments":["implement"]},{"Key":"don't implement","Fragments":["`is_whitespace`"]},{"Key":"implement `is_whitespace`","Fragments":["any"]},{"Key":"`is_whitespace` any","Fragments":["more"]},{"Key":"more (since","Fragments":["I"]},{"Key":"(since I","Fragments":["think"]},{"Key":"think 0.10","Fragments":["or"]},{"Key":"0.10 or","Fragments":["0.)"]},{"Key":"added an","Fragments":["`is_whitespace`"]},{"Key":"an `is_whitespace`","Fragments":["method:"]},{"Key":"fn is_whitespace(message:","Fragments":["\u0026str)"]},{"Key":"is_whitespace(message: \u0026str)","Fragments":["-\u003e"]},{"Key":" message.chars().all(|c|","Fragments":["c.is_whitespace())"]},{"Key":"standard unicode","Fragments":["crate:"]},{"Key":" Hope","Fragments":["to","to"]},{"Key":"Hope to","Fragments":["see","see"]},{"Key":"see more","Fragments":["of","of"]},{"Key":" rust","Fragments":["changed"]},{"Key":"rust changed","Fragments":["so"]},{"Key":"changed so","Fragments":["much"]},{"Key":"much during","Fragments":["the"]},{"Key":"during the","Fragments":["last"]},{"Key":"last 5","Fragments":["months"]},{"Key":"5 months","Fragments":["so"]},{"Key":"months so","Fragments":["i"]},{"Key":"i don't","Fragments":["expect"]},{"Key":"don't expect","Fragments":["this"]},{"Key":"expect this","Fragments":["code"]},{"Key":"code snippet","Fragments":["to"]},{"Key":"snippet to","Fragments":["run."]},{"Key":"to run.","Fragments":["With"]},{"Key":"run. With","Fragments":["the"]},{"Key":"the advent","Fragments":["of"]},{"Key":"advent of","Fragments":["beta"]},{"Key":"of beta","Fragments":["release"]},{"Key":"beta release","Fragments":["rust"]},{"Key":"release rust","Fragments":["it"]},{"Key":"Also because","Fragments":["rust"]},{"Key":"because rust","Fragments":["is"]},{"Key":"rust is","Fragments":["in"]},{"Key":"a muted","Fragments":["state"]},{"Key":"muted state","Fragments":["here"]},{"Key":"state here","Fragments":["on"]},{"Key":"here on","Fragments":["exercism.io"]},{"Key":"on exercism.io","Fragments":["i"]},{"Key":"exercism.io i","Fragments":["was"]},{"Key":"i was","Fragments":["pleasantly"]},{"Key":"was pleasantly","Fragments":["surprised"]},{"Key":"pleasantly surprised","Fragments":["to"]},{"Key":"surprised to","Fragments":["see"]},{"Key":"comment here","Fragments":[";)"]},{"Key":" Guess","Fragments":["it"]},{"Key":"Guess it","Fragments":["is"]},{"Key":"is finally","Fragments":["time"]},{"Key":"finally time","Fragments":["to"]},{"Key":"you incorporated","Fragments":["an"]},{"Key":"incorporated an","Fragments":["`enum`"]},{"Key":"`enum` and","Fragments":["some"]},{"Key":"compile on","Fragments":["Rust"]},{"Key":"on Rust","Fragments":["alpha"]},{"Key":"2. There","Fragments":["were"]},{"Key":"There were","Fragments":["two"]},{"Key":"The `enum`","Fragments":["fields"]},{"Key":"`enum` fields","Fragments":["couldn't"]},{"Key":"fields couldn't","Fragments":["be"]},{"Key":"couldn't be","Fragments":["resolved."]},{"Key":"be resolved.","Fragments":["There"]},{"Key":"resolved. There","Fragments":["are"]},{"Key":"are two","Fragments":["fixes"]},{"Key":"two fixes","Fragments":["for"]},{"Key":"fixes for","Fragments":["this."]},{"Key":"1. Add","Fragments":["a"]},{"Key":"Add a","Fragments":["`use"]},{"Key":"a `use","Fragments":["Saying::*;`"]},{"Key":"`use Saying::*;`","Fragments":["line"]},{"Key":"Saying::*;` line","Fragments":["to"]},{"Key":"line to","Fragments":["the"]},{"Key":"2. Prefix","Fragments":["all"]},{"Key":"Prefix all","Fragments":["uses"]},{"Key":"all uses","Fragments":["with"]},{"Key":"uses with","Fragments":["`Saying::`"]},{"Key":"with `Saying::`","Fragments":["(ex."]},{"Key":"`Saying::` (ex.","Fragments":["`Saying::Shout`)"]},{"Key":"2. `into_ascii_upper`","Fragments":["is"]},{"Key":"`into_ascii_upper` is","Fragments":["now"]},{"Key":"now `into_ascii_uppercase`","Fragments":["(yay"]},{"Key":"`into_ascii_uppercase` (yay","Fragments":["breaking"]},{"Key":"(yay breaking","Fragments":["changes!)"]},{"Key":"My only","Fragments":["other"]},{"Key":"only other","Fragments":["nit"]},{"Key":"other nit","Fragments":["is"]},{"Key":"nit is","Fragments":["that"]},{"Key":"that your","Fragments":["`is_all_uppercase`","application","create"]},{"Key":"your `is_all_uppercase`","Fragments":["could"]},{"Key":"`is_all_uppercase` could","Fragments":["be"]},{"Key":"be implemented","Fragments":["more","more"]},{"Key":"implemented more","Fragments":["efficiently","succinctly"]},{"Key":"more efficiently","Fragments":["by"]},{"Key":"efficiently by","Fragments":["just"]},{"Key":"just looping","Fragments":["over"]},{"Key":"looping over","Fragments":["the"]},{"Key":" See","Fragments":["[chars()](http://doc.rust-lang.org/std/str/struct.Chars.html),"]},{"Key":"See [chars()](http://doc.rust-lang.org/std/str/struct.Chars.html),","Fragments":["[all()](http://doc.rust-lang.org/std/iter/trait.IteratorExt.html#tymethod.all),"]},{"Key":"[chars()](http://doc.rust-lang.org/std/str/struct.Chars.html), [all()](http://doc.rust-lang.org/std/iter/trait.IteratorExt.html#tymethod.all),","Fragments":["and"]},{"Key":"[all()](http://doc.rust-lang.org/std/iter/trait.IteratorExt.html#tymethod.all), and","Fragments":["[is_lowercase()](http://doc.rust-lang.org/std/char/trait.CharExt.html#tymethod.is_lowercase)"]},{"Key":"and [is_lowercase()](http://doc.rust-lang.org/std/char/trait.CharExt.html#tymethod.is_lowercase)","Fragments":["as"]},{"Key":"[is_lowercase()](http://doc.rust-lang.org/std/char/trait.CharExt.html#tymethod.is_lowercase) as","Fragments":["references."]},{"Key":"good! Do","Fragments":["all"]},{"Key":"Do all","Fragments":["the"]},{"Key":"functions need","Fragments":["to"]},{"Key":"sorting ```word```","Fragments":["once"]},{"Key":"```word``` once","Fragments":["for"]},{"Key":"the ```candidates```","Fragments":["slice."]},{"Key":"Pretty clean","Fragments":["and"]},{"Key":"PS. There","Fragments":["is"]},{"Key":"formula for","Fragments":["sum"]},{"Key":"squares too.","Fragments":["You"]},{"Key":"too. You","Fragments":["can"]},{"Key":"in Project","Fragments":["Euler"]},{"Key":"Euler where","Fragments":["this"]},{"Key":"where this","Fragments":["exercise"]},{"Key":"exercise originates","Fragments":["from."]},{"Key":"Nice, but","Fragments":["you"]},{"Key":"can remove","Fragments":["'return'"]},{"Key":"remove 'return'","Fragments":["and"]},{"Key":"'return' and","Fragments":["';'"]},{"Key":"and ';'","Fragments":["and"]},{"Key":"';' and","Fragments":["still"]},{"Key":"same result...","Fragments":["although"]},{"Key":"result... although","Fragments":["I'm"]},{"Key":"although I'm","Fragments":["not"]},{"Key":"an `result`","Fragments":["which"]},{"Key":"`result` vector.","Fragments":["You"]},{"Key":" Someone","Fragments":["really"]},{"Key":"Someone really","Fragments":["concerned"]},{"Key":"would note","Fragments":["that"]},{"Key":"that you're","Fragments":["sorting"]},{"Key":"you're sorting","Fragments":["`word`"]},{"Key":"`word` many","Fragments":["times"]},{"Key":"times but","Fragments":["the"]},{"Key":"the same,","Fragments":["maybe"]},{"Key":"same, maybe","Fragments":["it"]},{"Key":"maybe it","Fragments":["should"]},{"Key":"done fewer","Fragments":["times."]},{"Key":"am looking","Fragments":["at"]},{"Key":"the check","Fragments":["of"]},{"Key":"check of","Fragments":["`if"]},{"Key":"`if word","Fragments":["=="]},{"Key":"== input","Fragments":["\u0026\u0026"]},{"Key":"input \u0026\u0026","Fragments":["word.len()"]},{"Key":"\u0026\u0026 word.len()","Fragments":["=="]},{"Key":"word.len() ==","Fragments":["input.len()`"]},{"Key":"== input.len()`","Fragments":["-","provide?"]},{"Key":"input.len()` -","Fragments":["will"]},{"Key":"- will","Fragments":["there"]},{"Key":"will there","Fragments":["ever"]},{"Key":"there ever","Fragments":["be"]},{"Key":"where `word","Fragments":["=="]},{"Key":"`word ==","Fragments":["input`"]},{"Key":"== input`","Fragments":["BUT"]},{"Key":"input` BUT","Fragments":["`word.len()"]},{"Key":"BUT `word.len()","Fragments":["!="]},{"Key":"`word.len() !=","Fragments":["input.len()`?"]},{"Key":"!= input.len()`?","Fragments":["What"]},{"Key":"input.len()`? What","Fragments":["does"]},{"Key":"does checking","Fragments":["`word.len()"]},{"Key":"checking `word.len()","Fragments":["=="]},{"Key":"`word.len() ==","Fragments":["input.len()`"]},{"Key":"an `if","Fragments":["some_boolean"]},{"Key":"`if some_boolean","Fragments":["{","{"]},{"Key":"some_boolean {","Fragments":["true","return"]},{"Key":"{false}` inside","Fragments":["`verify`"]},{"Key":"inside `verify`","Fragments":["which"]},{"Key":"`verify` which","Fragments":["should"]},{"Key":"which should","Fragments":["be"]},{"Key":"be simplified,","Fragments":["since"]},{"Key":"simplified, since","Fragments":["`some_boolean`"]},{"Key":"since `some_boolean`","Fragments":["is"]},{"Key":"`some_boolean` is","Fragments":["already"]},{"Key":"is already","Fragments":["a","a"]},{"Key":"already a","Fragments":["boolean,","reference,"]},{"Key":"a boolean,","Fragments":["making","whereas"]},{"Key":"boolean, making","Fragments":["the"]},{"Key":"for review!","Fragments":["It's"]},{"Key":"review! It's","Fragments":["realy"]},{"Key":"It's realy","Fragments":["helpful."]},{"Key":"realy helpful.","Fragments":["You're"]},{"Key":"helpful. You're","Fragments":["absolutely"]},{"Key":"You're absolutely","Fragments":["right"]},{"Key":"absolutely right","Fragments":["about"]},{"Key":"right about","Fragments":["useless"]},{"Key":"about useless","Fragments":["check."]},{"Key":"useless check.","Fragments":["I've"]},{"Key":"check. I've","Fragments":["made"]},{"Key":"I've made","Fragments":["some"]},{"Key":"made some","Fragments":["changes"]},{"Key":"some changes","Fragments":["according"]},{"Key":"changes according","Fragments":["to"]},{"Key":"explain that","Fragments":["part"]},{"Key":"part about","Fragments":["unnecessery"]},{"Key":"about unnecessery","Fragments":["sorting"]},{"Key":"unnecessery sorting","Fragments":["of"]},{"Key":"of `word`?","Fragments":["I"]},{"Key":"`word`? I","Fragments":["got"]},{"Key":"got it,","Fragments":["but"]},{"Key":"it, but","Fragments":["I","perhaps"]},{"Key":"fix it.","Fragments":["If"]},{"Key":"it. If","Fragments":["I'll"]},{"Key":"If I'll","Fragments":["pass"]},{"Key":"I'll pass","Fragments":["`word`"]},{"Key":"pass `word`","Fragments":["into"]},{"Key":"`word` into","Fragments":["function"]},{"Key":"into function","Fragments":["as"]},{"Key":"sorted `Vec`,","Fragments":["then"]},{"Key":"`Vec`, then","Fragments":["I"]},{"Key":"check `unsorted_word","Fragments":["!="]},{"Key":"`unsorted_word !=","Fragments":["unsorted_input`."]},{"Key":"!= unsorted_input`.","Fragments":["I"]},{"Key":"unsorted_input`. I","Fragments":["could"]},{"Key":"could pass","Fragments":["sorted"]},{"Key":"pass sorted","Fragments":["`word`"]},{"Key":"sorted `word`","Fragments":["as"]},{"Key":"`word` as","Fragments":["3rd"]},{"Key":"as 3rd","Fragments":["argument,"]},{"Key":"3rd argument,","Fragments":["but"]},{"Key":"argument, but","Fragments":["it"]},{"Key":"the `new`","Fragments":["constructor"]},{"Key":"`new` constructor","Fragments":["rather"]},{"Key":"constructor rather","Fragments":["than"]},{"Key":"using struct","Fragments":["tuples"]},{"Key":"struct tuples","Fragments":["because"]},{"Key":"tuples because","Fragments":["I"]},{"Key":"found that","Fragments":["to"]},{"Key":"just going","Fragments":["to"]},{"Key":"ask about","Fragments":["that."]},{"Key":"about that.","Fragments":["But"]},{"Key":"that. But","Fragments":["the"]},{"Key":"But the","Fragments":["tuple"]},{"Key":"the tuple","Fragments":["approach"]},{"Key":"tuple approach","Fragments":["allows"]},{"Key":"approach allows","Fragments":["you"]},{"Key":"allows you","Fragments":["to"]},{"Key":"to refer","Fragments":["to"]},{"Key":"the 'value'","Fragments":["inside"]},{"Key":"'value' inside","Fragments":["the"]},{"Key":"And anyway","Fragments":["you"]},{"Key":"anyway you","Fragments":["don't"]},{"Key":"need temporary","Fragments":["variable"]},{"Key":"temporary variable","Fragments":["on"]},{"Key":"line 24,","Fragments":["neither"]},{"Key":"24, neither","Fragments":["you"]},{"Key":"neither you","Fragments":["don't"]},{"Key":"to clone","Fragments":["`allergen`"]},{"Key":"clone `allergen`","Fragments":["at"]},{"Key":"`allergen` at","Fragments":["all,"]},{"Key":"all, no","Fragments":["matter"]},{"Key":"no matter","Fragments":["if"]},{"Key":"matter if","Fragments":["it's"]},{"Key":"it's `Copy`","Fragments":["or"]},{"Key":"`Copy` or","Fragments":["not."]},{"Key":"define `#[derive(Copy)]`","Fragments":["for"]},{"Key":"`#[derive(Copy)]` for","Fragments":["`Allergen`"]},{"Key":"`Allergen` so","Fragments":["you"]},{"Key":"to `allergen.clone()`","Fragments":["it."]},{"Key":"allows deriving","Fragments":["the"]},{"Key":"deriving the","Fragments":["list,"]},{"Key":"the list,","Fragments":["so"]},{"Key":"list, so","Fragments":["you"]},{"Key":"to list","Fragments":["the","existing","enum"]},{"Key":"enum items","Fragments":["twice"]},{"Key":"items twice","Fragments":["(which"]},{"Key":"twice (which","Fragments":["is"]},{"Key":"(which is","Fragments":["error"]},{"Key":"is error","Fragments":["prone"]},{"Key":"error prone","Fragments":["in"]},{"Key":"prone in","Fragments":["real"]},{"Key":"in real","Fragments":["world"]},{"Key":"real world","Fragments":["code,"]},{"Key":"world code,","Fragments":["imho)."]},{"Key":"code, imho).","Fragments":["Check"]},{"Key":"imho). Check","Fragments":["custom_derive"]},{"Key":"Cool, the","Fragments":["`filter`"]},{"Key":"`filter` made","Fragments":["it"]},{"Key":"it shorter","Fragments":["and"]},{"Key":"IMO more","Fragments":["readable."]},{"Key":"You asked","Fragments":["about"]},{"Key":"asked about","Fragments":["the"]},{"Key":"the repeatedly","Fragments":["sorting"]},{"Key":"repeatedly sorting","Fragments":["`word`,"]},{"Key":"sorting `word`,","Fragments":["and"]},{"Key":"`word`, and","Fragments":["my"]},{"Key":"first thought","Fragments":["is"]},{"Key":"thought is","Fragments":["\"well"]},{"Key":"is \"well","Fragments":["you"]},{"Key":"\"well you","Fragments":["probably"]},{"Key":"you probably","Fragments":["wouldn't"]},{"Key":"probably wouldn't","Fragments":["have"]},{"Key":"optimize that","Fragments":["unless"]},{"Key":"that unless","Fragments":["your"]},{"Key":"unless your","Fragments":["profiling"]},{"Key":"your profiling","Fragments":["showed"]},{"Key":"profiling showed","Fragments":["that"]},{"Key":"your application","Fragments":["was"]},{"Key":"application was","Fragments":["bottlenecking"]},{"Key":"was bottlenecking","Fragments":["on"]},{"Key":"bottlenecking on","Fragments":["it.\""]},{"Key":"on it.\"","Fragments":["And"]},{"Key":"it.\" And","Fragments":["if"]},{"Key":"And if","Fragments":["it","you"]},{"Key":"it wasn't,","Fragments":["I'd"]},{"Key":"wasn't, I'd","Fragments":["feel"]},{"Key":"I'd feel","Fragments":["just"]},{"Key":"feel just","Fragments":["fine"]},{"Key":"just fine","Fragments":["about"]},{"Key":"fine about","Fragments":["this"]},{"Key":"code. But","Fragments":["let's"]},{"Key":"But let's","Fragments":["suppose"]},{"Key":"let's suppose","Fragments":["that"]},{"Key":"do want","Fragments":["and/or"]},{"Key":"want and/or","Fragments":["need"]},{"Key":"and/or need","Fragments":["to"]},{"Key":"to for","Fragments":["some"]},{"Key":"that passing","Fragments":["in"]},{"Key":"passing in","Fragments":["both"]},{"Key":"both `word`","Fragments":["and"]},{"Key":"`word` and","Fragments":["`sorted_word`"]},{"Key":"and `sorted_word`","Fragments":["into"]},{"Key":"`sorted_word` into","Fragments":["`verify`"]},{"Key":"into `verify`","Fragments":["would"]},{"Key":"`verify` would","Fragments":["look"]},{"Key":"would look","Fragments":["a"]},{"Key":"look a","Fragments":["little"]},{"Key":"little weird.","Fragments":["If"]},{"Key":"weird. If","Fragments":["we"]},{"Key":"If we","Fragments":["think"]},{"Key":"we think","Fragments":["about"]},{"Key":"it, `verify`","Fragments":["wants"]},{"Key":"`verify` wants","Fragments":["`word`"]},{"Key":"wants `word`","Fragments":["just"]},{"Key":"`word` just","Fragments":["to"]},{"Key":"see whether","Fragments":["the"]},{"Key":"whether the","Fragments":["`input`","opposite"]},{"Key":"the `input`","Fragments":["isn't"]},{"Key":"`input` isn't","Fragments":["the"]},{"Key":"isn't the","Fragments":["same"]},{"Key":"same word.","Fragments":["And"]},{"Key":"word. And","Fragments":["it"]},{"Key":"And it","Fragments":["wants"]},{"Key":"it wants","Fragments":["`sorted_word`"]},{"Key":"wants `sorted_word`","Fragments":["to"]},{"Key":"`sorted_word` to","Fragments":["know"]},{"Key":"know whether","Fragments":["`input`"]},{"Key":"whether `input`","Fragments":["contains"]},{"Key":"`input` contains","Fragments":["the"]},{"Key":"contains the","Fragments":["same"]},{"Key":"same letters.","Fragments":["These"]},{"Key":"letters. These","Fragments":["are"]},{"Key":"These are","Fragments":["the"]},{"Key":"two separate","Fragments":["conditions,"]},{"Key":"separate conditions,","Fragments":["and"]},{"Key":"conditions, and","Fragments":["I"]},{"Key":"suggest that","Fragments":["it"]},{"Key":"split `verify`","Fragments":["into"]},{"Key":"`verify` into","Fragments":["two."]},{"Key":"into two.","Fragments":["So"]},{"Key":"two. So","Fragments":["I"]},{"Key":"guess what","Fragments":["I'm"]},{"Key":"I'm saying","Fragments":["is,"]},{"Key":"saying is,","Fragments":["a"]},{"Key":"is, a","Fragments":["lot"]},{"Key":"think \"why","Fragments":["do"]},{"Key":"\"why do","Fragments":["I"]},{"Key":"do I","Fragments":["have"]},{"Key":"pass so","Fragments":["many"]},{"Key":"so many","Fragments":["arguments"]},{"Key":"many arguments","Fragments":["into"]},{"Key":"arguments into","Fragments":["this"]},{"Key":"into this","Fragments":["function?\"","one:"]},{"Key":"this function?\"","Fragments":["the"]},{"Key":"function?\" the","Fragments":["answer"]},{"Key":"is \"oh,","Fragments":["the"]},{"Key":"\"oh, the","Fragments":["function"]},{"Key":"function actually","Fragments":["does"]},{"Key":"actually does","Fragments":["too"]},{"Key":"does too","Fragments":["much"]},{"Key":"much and","Fragments":["it"]},{"Key":"be split","Fragments":["up\".","up"]},{"Key":"split up\".","Fragments":["You"]},{"Key":"up\". You","Fragments":["could"]},{"Key":"could try","Fragments":["that"]},{"Key":"that and","Fragments":["see"]},{"Key":"and see","Fragments":["if"]},{"Key":"resulting code","Fragments":["looks"]},{"Key":" instead","Fragments":["of"]},{"Key":"Yes, you","Fragments":["are"]},{"Key":"are correct.","Fragments":["I"]},{"Key":"correct. I","Fragments":["have"]},{"Key":"only learned","Fragments":["about"]},{"Key":"about `cloned()`","Fragments":["recently,"]},{"Key":"`cloned()` recently,","Fragments":["which"]},{"Key":"recently, which","Fragments":["is"]},{"Key":"is why","Fragments":["I"]},{"Key":"really sure","Fragments":["if","why"]},{"Key":"any difference","Fragments":["between"]},{"Key":"expressions or","Fragments":["if"]},{"Key":"are equivalent,","Fragments":["but"]},{"Key":"equivalent, but","Fragments":["`cloned()`"]},{"Key":"but `cloned()`","Fragments":["is"]},{"Key":"`cloned()` is","Fragments":["certainly"]},{"Key":"More important,","Fragments":["though,"]},{"Key":"important, though,","Fragments":["is"]},{"Key":"though, is","Fragments":["that"]},{"Key":"the `cloned()`","Fragments":["(or"]},{"Key":"`cloned()` (or","Fragments":["`map()`)"]},{"Key":"(or `map()`)","Fragments":["can"]},{"Key":"`map()`) can","Fragments":["be"]},{"Key":"be chained","Fragments":["after"]},{"Key":"chained after","Fragments":["the"]},{"Key":"the `filter()`","Fragments":["instead"]},{"Key":"`filter()` instead","Fragments":["of"]},{"Key":"in front.","Fragments":["This"]},{"Key":"front. This","Fragments":["should"]},{"Key":"should lower","Fragments":["the"]},{"Key":"lower the","Fragments":["number"]},{"Key":"of String","Fragments":["allocations."]},{"Key":"an `ans`","Fragments":["which"]},{"Key":"`ans` which","Fragments":["starts"]},{"Key":"over `dict`","Fragments":["and"]},{"Key":"`dict` and","Fragments":["possibly"]},{"Key":"to `ans`","Fragments":["based"]},{"Key":"`ans` based","Fragments":["on"]},{"Key":"return `ans`","Fragments":["right"]},{"Key":"`ans` right","Fragments":["after"]},{"Key":"a `ans`","Fragments":["vector"]},{"Key":"`ans` vector","Fragments":["and"]},{"Key":"The same","Fragments":["series"]},{"Key":"same series","Fragments":["of"]},{"Key":"series of","Fragments":["operations"]},{"Key":"of operations","Fragments":["is"]},{"Key":"operations is","Fragments":["being"]},{"Key":"being applied","Fragments":["to"]},{"Key":"`word2` in","Fragments":["`is_anagram`"]},{"Key":"`is_anagram` and","Fragments":["I"]},{"Key":"it's possible","Fragments":["to","to"]},{"Key":"`result` vector","Fragments":["and"]},{"Key":"Very happy","Fragments":["with"]},{"Key":"this solution.","Fragments":["Most"]},{"Key":"solution. Most","Fragments":["of"]},{"Key":"Most of","Fragments":["it"]},{"Key":"of it","Fragments":["could"]},{"Key":"iterators, keeping","Fragments":["random-access"]},{"Key":"keeping random-access","Fragments":["confined"]},{"Key":"random-access confined","Fragments":["to"]},{"Key":"confined to","Fragments":["lines"]},{"Key":"to lines","Fragments":["13"]},{"Key":"13 and","Fragments":["22."]},{"Key":"I sweep","Fragments":["the"]},{"Key":"sweep the","Fragments":["input"]},{"Key":"input board","Fragments":["once,"]},{"Key":"board once,","Fragments":["incrementing"]},{"Key":"once, incrementing","Fragments":["`counts`,"]},{"Key":"incrementing `counts`,","Fragments":["which"]},{"Key":"`counts`, which","Fragments":["afterwards"]},{"Key":"which afterwards","Fragments":["holds"]},{"Key":"afterwards holds","Fragments":["the"]},{"Key":"holds the","Fragments":["number"]},{"Key":"of neighboring","Fragments":["mines"]},{"Key":"neighboring mines","Fragments":["for"]},{"Key":"mines for","Fragments":["every"]},{"Key":"every cell.","Fragments":["Then"]},{"Key":"cell. Then","Fragments":["I"]},{"Key":"can simply","Fragments":["iterate"]},{"Key":"simply iterate","Fragments":["over"]},{"Key":"the cells","Fragments":["again,"]},{"Key":"cells again,","Fragments":["either"]},{"Key":"again, either","Fragments":["keeping"]},{"Key":"either keeping","Fragments":["the"]},{"Key":"keeping the","Fragments":["mine"]},{"Key":"the mine","Fragments":["symbol"]},{"Key":"mine symbol","Fragments":["or"]},{"Key":"symbol or","Fragments":["putting"]},{"Key":"or putting","Fragments":["the"]},{"Key":"putting the","Fragments":["correct","more"]},{"Key":"correct character","Fragments":["in"]},{"Key":"As `counts`","Fragments":["is"]},{"Key":"`counts` is","Fragments":["larger"]},{"Key":"is larger","Fragments":["than"]},{"Key":"larger than","Fragments":["the"]},{"Key":"actual board,","Fragments":["no"]},{"Key":"board, no","Fragments":["messy"]},{"Key":"no messy","Fragments":["bounds"]},{"Key":"messy bounds","Fragments":["checks"]},{"Key":"bounds checks","Fragments":["are"]},{"Key":"checks are","Fragments":["necessary."]},{"Key":" Passes","Fragments":["the"]},{"Key":"Passes the","Fragments":["tests."]},{"Key":"the tests.","Fragments":["However,"]},{"Key":"tests. However,","Fragments":["it's"]},{"Key":"However, it's","Fragments":["not"]},{"Key":"not fully","Fragments":["robust"]},{"Key":"fully robust","Fragments":["against"]},{"Key":"robust against","Fragments":["strange"]},{"Key":"against strange","Fragments":["Unicode"]},{"Key":"strange Unicode","Fragments":["characters"]},{"Key":"Unicode characters","Fragments":["yet.","can"]},{"Key":"characters yet.","Fragments":["Not"]},{"Key":"yet. Not","Fragments":["sure"]},{"Key":"whether I'll","Fragments":["fix"]},{"Key":"I'll fix","Fragments":["this"]},{"Key":"the future.","Fragments":["To"]},{"Key":"future. To","Fragments":["be"]},{"Key":"be honest,","Fragments":["I"]},{"Key":"not care","Fragments":["less"]},{"Key":"care less","Fragments":["about"]},{"Key":"less about","Fragments":["the"]},{"Key":"the \"Ogham","Fragments":["Space"]},{"Key":"\"Ogham Space","Fragments":["Mark\"."]},{"Key":"internal data","Fragments":["structure"]},{"Key":"structure be","Fragments":["a"]},{"Key":"a `Vec\u003cOption\u003cT\u003e\u003e`","Fragments":["so"]},{"Key":"`Vec\u003cOption\u003cT\u003e\u003e` so","Fragments":["that"]},{"Key":"have `None`","Fragments":["as"]},{"Key":"`None` as","Fragments":["an"]},{"Key":"an appropriate","Fragments":["placeholder"]},{"Key":"appropriate placeholder","Fragments":["for"]},{"Key":"placeholder for","Fragments":["an"]},{"Key":"empty spot","Fragments":["in"]},{"Key":"the vector.","Fragments":["Therefore"]},{"Key":"vector. Therefore","Fragments":["the"]},{"Key":"Therefore the","Fragments":["vector"]},{"Key":"vector does","Fragments":["not"]},{"Key":"to shift","Fragments":["its"]},{"Key":"shift its","Fragments":["elements,"]},{"Key":"its elements,","Fragments":["and"]},{"Key":"elements, and","Fragments":["reading"]},{"Key":"and reading","Fragments":["and"]},{"Key":"reading and","Fragments":["writing"]},{"Key":"and writing","Fragments":["should"]},{"Key":"writing should","Fragments":["have"]},{"Key":"a theoretical","Fragments":["complexity"]},{"Key":"theoretical complexity","Fragments":["of"]},{"Key":"complexity of","Fragments":["`O(1)`."]},{"Key":"the `swap`","Fragments":["was"]},{"Key":"`swap` was","Fragments":["about"]},{"Key":"was about","Fragments":["in"]},{"Key":"about in","Fragments":["`read`,"]},{"Key":"in `read`,","Fragments":["and"]},{"Key":"`read`, and","Fragments":["I"]},{"Key":"realize it's","Fragments":["so"]},{"Key":"it's so","Fragments":["that"]},{"Key":"that after","Fragments":["you"]},{"Key":"after you","Fragments":["read"]},{"Key":"you read","Fragments":["a"]},{"Key":"value, it","Fragments":["should"]},{"Key":"a `None`.","Fragments":["Seems"]},{"Key":"`None`. Seems","Fragments":["OK."]},{"Key":"Seems OK.","Fragments":["I"]},{"Key":"OK. I","Fragments":["haven't"]},{"Key":"haven't tried","Fragments":["it,"]},{"Key":"tried it,","Fragments":["but"]},{"Key":"but perhaps","Fragments":["there's"]},{"Key":"perhaps there's","Fragments":["a"]},{"Key":"achieve this","Fragments":["using"]},{"Key":"using [take](https://doc.rust-lang.org/std/option/enum.Option.html#method.take)","Fragments":["?"]},{"Key":"no code","Fragments":["duplication"]},{"Key":"code duplication","Fragments":["between"]},{"Key":"duplication between","Fragments":["`write`"]},{"Key":"between `write`","Fragments":["and"]},{"Key":"and `overwrite`.","Fragments":["One"]},{"Key":"`overwrite`. One","Fragments":["thing"]},{"Key":"is calling","Fragments":["`write`"]},{"Key":"calling `write`","Fragments":["will"]},{"Key":"`write` will","Fragments":["check"]},{"Key":"will check","Fragments":["`is_full`"]},{"Key":"check `is_full`","Fragments":["twice,"]},{"Key":"`is_full` twice,","Fragments":["but"]},{"Key":"twice, but","Fragments":["hopefully"]},{"Key":"but hopefully","Fragments":["that"]},{"Key":"hopefully that","Fragments":["isn't"]},{"Key":"that isn't","Fragments":["too"]},{"Key":"isn't too","Fragments":["bad..."]},{"Key":"believe the","Fragments":["line"]},{"Key":"the line","Fragments":["45"]},{"Key":"line 45","Fragments":["in"]},{"Key":"45 in","Fragments":["`clear`"]},{"Key":"in `clear`","Fragments":["could"]},{"Key":"`clear` could","Fragments":["just"]},{"Key":"as `vec![None;","Fragments":["self.capacity]`"]},{"Key":"don't believe","Fragments":["you"]},{"Key":"believe you","Fragments":["really"]},{"Key":"the `push`","Fragments":["`swap`"]},{"Key":"`push` `swap`","Fragments":["`pop`"]},{"Key":"`swap` `pop`","Fragments":["thing"]},{"Key":"`pop` thing","Fragments":["in"]},{"Key":"an `overwrite`","Fragments":["-"]},{"Key":"`overwrite` -","Fragments":["since"]},{"Key":"- since","Fragments":["the"]},{"Key":"old value","Fragments":["is"]},{"Key":"needed you","Fragments":["could"]},{"Key":"directly place","Fragments":["it"]},{"Key":"into `self.buffer`","Fragments":["at"]},{"Key":"`self.buffer` at","Fragments":["the"]},{"Key":"appropriate index,","Fragments":["and"]},{"Key":"index, and","Fragments":["replace"]},{"Key":"replace whatever","Fragments":["was"]},{"Key":"whatever was","Fragments":["there"]},{"Key":"was there","Fragments":["before,"]},{"Key":"there before,","Fragments":["right?"]},{"Key":" thanks","Fragments":["for"]},{"Key":"the manipulations","Fragments":["directly"]},{"Key":"manipulations directly","Fragments":["in-place"]},{"Key":"directly in-place","Fragments":["instead"]},{"Key":"in-place instead","Fragments":["of"]},{"Key":"of with","Fragments":["a"]},{"Key":"a swap.","Fragments":["Should"]},{"Key":"swap. Should","Fragments":["up"]},{"Key":"Should up","Fragments":["the"]},{"Key":"the efficiency","Fragments":["a"]},{"Key":"efficiency a","Fragments":["bit,"]},{"Key":"a bit,","Fragments":["plus"]},{"Key":"bit, plus","Fragments":["I"]},{"Key":"plus I","Fragments":["can"]},{"Key":"the `+1`","Fragments":["capacity."]},{"Key":"don't particularly","Fragments":["like"]},{"Key":"particularly like","Fragments":["the"]},{"Key":"double check","Fragments":["on"]},{"Key":"check on","Fragments":["`is_full`,"]},{"Key":"on `is_full`,","Fragments":["but"]},{"Key":"`is_full`, but","Fragments":["I"]},{"Key":"it. At","Fragments":["least"]},{"Key":"least without","Fragments":["adding"]},{"Key":"without adding","Fragments":["more"]},{"Key":"adding more","Fragments":["logic"]},{"Key":"more logic","Fragments":["/"]},{"Key":"logic /","Fragments":["code"]},{"Key":"/ code","Fragments":["duplication."]},{"Key":" Initializing","Fragments":["/"]},{"Key":"Initializing /","Fragments":["resetting"]},{"Key":"/ resetting","Fragments":["the"]},{"Key":"resetting the","Fragments":["Vector"]},{"Key":"the Vector","Fragments":["is"]},{"Key":"Vector is","Fragments":["a"]},{"Key":"more difficult.","Fragments":["First,"]},{"Key":"difficult. First,","Fragments":["I'm"]},{"Key":"First, I'm","Fragments":["not"]},{"Key":"sure `vec![None;","Fragments":["self.capacity]`"]},{"Key":"`vec![None; self.capacity]`","Fragments":["would"]},{"Key":"self.capacity]` would","Fragments":["not"]},{"Key":"new Vector,","Fragments":["and"]},{"Key":"Vector, and","Fragments":["I'd"]},{"Key":"and I'd","Fragments":["like"]},{"Key":"I'd like","Fragments":["to","to"]},{"Key":"old one","Fragments":["if"]},{"Key":"possible. Second,","Fragments":["the"]},{"Key":"Second, the","Fragments":["`vec!`-macro"]},{"Key":"the `vec!`-macro","Fragments":["needs"]},{"Key":"`vec!`-macro needs","Fragments":["the"]},{"Key":"content type","Fragments":["to"]},{"Key":"type to","Fragments":["implement"]},{"Key":"the `Copy`","Fragments":["trait,"]},{"Key":"`Copy` trait,","Fragments":["which"]},{"Key":"which the","Fragments":["generic"]},{"Key":"the generic","Fragments":["`T`"]},{"Key":"generic `T`","Fragments":["here"]},{"Key":"`T` here","Fragments":["notably"]},{"Key":"here notably","Fragments":["does"]},{"Key":"notably does","Fragments":["not."]},{"Key":"Another optimisation","Fragments":["maybe"]},{"Key":"optimisation maybe","Fragments":["to"]},{"Key":"maybe to","Fragments":["return"]},{"Key":"return `Cow\u003c'_,","Fragments":["str\u003e`"]},{"Key":"`Cow\u003c'_, str\u003e`","Fragments":["from"]},{"Key":"str\u003e` from","Fragments":["the"]},{"Key":"the `verse`","Fragments":["to"]},{"Key":"`verse` to","Fragments":["avoid"]},{"Key":"when a","Fragments":["simple"]},{"Key":"simple static","Fragments":["string"]},{"Key":"I'm curious","Fragments":["about","why"]},{"Key":"curious about","Fragments":["line"]},{"Key":"about line","Fragments":["15."]},{"Key":"line 15.","Fragments":["Originally,"]},{"Key":"15. Originally,","Fragments":["I"]},{"Key":"Originally, I","Fragments":["also"]},{"Key":"also used","Fragments":["a"]},{"Key":"`fold` (though","Fragments":["initializing"]},{"Key":"(though initializing","Fragments":["the"]},{"Key":"initializing the","Fragments":["accumulator"]},{"Key":"the accumulator","Fragments":["with"]},{"Key":"accumulator with","Fragments":["`verse(from)`"]},{"Key":"with `verse(from)`","Fragments":["instead,"]},{"Key":"`verse(from)` instead,","Fragments":["to"]},{"Key":"instead, to","Fragments":["avoid"]},{"Key":"the pop","Fragments":["at"]},{"Key":"pop at","Fragments":["the"]},{"Key":"the end).","Fragments":["Then"]},{"Key":"end). Then","Fragments":["I"]},{"Key":"found `join()`","Fragments":["and"]},{"Key":"`join()` and","Fragments":["thought"]},{"Key":"and thought","Fragments":["it's"]},{"Key":"thought it's","Fragments":["useful"]},{"Key":"it's useful","Fragments":["here."]},{"Key":"useful here.","Fragments":["As"]},{"Key":"here. As","Fragments":["it"]},{"Key":"As it","Fragments":["seems"]},{"Key":"be your","Fragments":["focus,"]},{"Key":"your focus,","Fragments":["is"]},{"Key":"focus, is","Fragments":["there"]},{"Key":"an efficiency-related","Fragments":["reason"]},{"Key":"efficiency-related reason","Fragments":["to"]},{"Key":"`fold` over","Fragments":["`join`"]},{"Key":"over `join`","Fragments":["here?"]},{"Key":"you seem","Fragments":["to"]},{"Key":"to love","Fragments":["your"]},{"Key":"love your","Fragments":["long"]},{"Key":"your long","Fragments":["lines."]},{"Key":"long lines.","Fragments":["What"]},{"Key":"lines. What","Fragments":["do"]},{"Key":"What do","Fragments":["you"]},{"Key":"you your","Fragments":["coding"]},{"Key":"your coding","Fragments":["in?"]},{"Key":"coding in?","Fragments":["Lines"]},{"Key":"in? Lines","Fragments":["7-9"]},{"Key":"Lines 7-9","Fragments":["don't"]},{"Key":"7-9 don't","Fragments":["even"]},{"Key":"don't even","Fragments":["fit"]},{"Key":"even fit","Fragments":["in"]},{"Key":"fit in","Fragments":["my"]},{"Key":"my editor","Fragments":["without"]},{"Key":"editor without","Fragments":["line"]},{"Key":"without line","Fragments":["wraps"]},{"Key":"line wraps","Fragments":[":-D"]},{"Key":"To use","Fragments":["`join`"]},{"Key":"use `join`","Fragments":["you"]},{"Key":"`join` you","Fragments":["first"]},{"Key":"you first","Fragments":["need"]},{"Key":"first need","Fragments":["to"]},{"Key":"to `collect::\u003cVec\u003c_\u003e\u003e`,","Fragments":["that"]},{"Key":"`collect::\u003cVec\u003c_\u003e\u003e`, that","Fragments":["is"]},{"Key":"is allocate","Fragments":["another"]},{"Key":"allocate another","Fragments":["vector"]},{"Key":"another vector","Fragments":["and"]},{"Key":"and iterate","Fragments":["over"]},{"Key":"over original","Fragments":["iterator"]},{"Key":"original iterator","Fragments":["just","produces"]},{"Key":"iterator just","Fragments":["to"]},{"Key":"over it","Fragments":["again"]},{"Key":"it again","Fragments":["in"]},{"Key":"again in","Fragments":["`join`"]},{"Key":"in `join`","Fragments":["to"]},{"Key":"`join` to","Fragments":["gather"]},{"Key":"to gather","Fragments":["items"]},{"Key":"gather items","Fragments":["into"]},{"Key":"items into","Fragments":["another"]},{"Key":"into another","Fragments":["allocated"]},{"Key":"another allocated","Fragments":["`String`"]},{"Key":"allocated `String`","Fragments":["buffer."]},{"Key":"`String` buffer.","Fragments":["I"]},{"Key":"buffer. I","Fragments":["don't"]},{"Key":"allocate when","Fragments":["I"]},{"Key":"have to,","Fragments":["as"]},{"Key":"to, as","Fragments":["well"]},{"Key":"like excessive","Fragments":["iterations."]},{"Key":"excessive iterations.","Fragments":["With"]},{"Key":"iterations. With","Fragments":["`fold`"]},{"Key":"With `fold`","Fragments":["I"]},{"Key":"`fold` I","Fragments":["build"]},{"Key":"I build","Fragments":["the"]},{"Key":"one pass,","Fragments":["and"]},{"Key":"pass, and","Fragments":["relocate"]},{"Key":"and relocate","Fragments":["original"]},{"Key":"relocate original","Fragments":["string"]},{"Key":"original string","Fragments":["buffer"]},{"Key":"string buffer","Fragments":["on"]},{"Key":"buffer on","Fragments":["overflow"]},{"Key":"on overflow","Fragments":["only"]},{"Key":"overflow only","Fragments":["(which"]},{"Key":"only (which","Fragments":["can"]},{"Key":"(which can","Fragments":["be"]},{"Key":"be avoided","Fragments":["as"]},{"Key":"avoided as","Fragments":["well"]},{"Key":"well by","Fragments":["calculating"]},{"Key":"by calculating","Fragments":["result"]},{"Key":"calculating result","Fragments":["string"]},{"Key":"result string","Fragments":["length"]},{"Key":"string length","Fragments":["and"]},{"Key":"length and","Fragments":["preallocating"]},{"Key":"and preallocating","Fragments":["buffer"]},{"Key":"preallocating buffer","Fragments":["with"]},{"Key":"buffer with","Fragments":["`String::with_capacity`).","`CircularBuffer::\u003cchar\u003e::new()`)."]},{"Key":"I challenged","Fragments":["myself"]},{"Key":"challenged myself","Fragments":["to"]},{"Key":"myself to","Fragments":["use"]},{"Key":"only multi-threading","Fragments":["primitives"]},{"Key":"multi-threading primitives","Fragments":["from"]},{"Key":"primitives from","Fragments":["Rust"]},{"Key":"from Rust","Fragments":["standard"]},{"Key":"Rust standard","Fragments":["library,"]},{"Key":"library, so","Fragments":["no","there"]},{"Key":"so no","Fragments":["`extern"]},{"Key":"no `extern","Fragments":["crate"]},{"Key":"`extern crate","Fragments":["threadpool`,","mio`"]},{"Key":"crate threadpool`,","Fragments":["`extern"]},{"Key":"threadpool`, `extern","Fragments":["crate"]},{"Key":"crate mio`","Fragments":["or"]},{"Key":"mio` or","Fragments":["something."]},{"Key":"I avoided","Fragments":["common"]},{"Key":"avoided common","Fragments":["state,"]},{"Key":"common state,","Fragments":["so"]},{"Key":"state, so","Fragments":["each"]},{"Key":"so each","Fragments":["thread"]},{"Key":"each thread","Fragments":["supports"]},{"Key":"thread supports","Fragments":["its"]},{"Key":"supports its","Fragments":["own"]},{"Key":"own letters","Fragments":["stats,"]},{"Key":"letters stats,","Fragments":["no"]},{"Key":"stats, no","Fragments":["need"]},{"Key":"for synchronization","Fragments":["via"]},{"Key":"synchronization via","Fragments":["mutexes"]},{"Key":"via mutexes","Fragments":["and"]},{"Key":"mutexes and","Fragments":["arcs,"]},{"Key":"and arcs,","Fragments":["although"]},{"Key":"arcs, although","Fragments":["it's"]},{"Key":"although it's","Fragments":["arguably"]},{"Key":"it's arguably","Fragments":["inferior"]},{"Key":"arguably inferior","Fragments":["solution"]},{"Key":"inferior solution","Fragments":["to"]},{"Key":"to common","Fragments":["`HashMap`"]},{"Key":"common `HashMap`","Fragments":["with"]},{"Key":"`HashMap` with","Fragments":["stats"]},{"Key":"with stats","Fragments":["shared"]},{"Key":"stats shared","Fragments":["between"]},{"Key":"shared between","Fragments":["workers"]},{"Key":"between workers","Fragments":["in"]},{"Key":"workers in","Fragments":["terms"]},{"Key":"And no,","Fragments":["I"]},{"Key":"no, I","Fragments":["haven't"]},{"Key":"haven't made","Fragments":["any"]},{"Key":"made any","Fragments":["real"]},{"Key":"any real","Fragments":["benchmarks,"]},{"Key":"real benchmarks,","Fragments":["so"]},{"Key":"benchmarks, so","Fragments":["I"]},{"Key":"don't now","Fragments":["how"]},{"Key":"now how","Fragments":["fast"]},{"Key":"how fast","Fragments":["my"]},{"Key":"fast my","Fragments":["solution"]},{"Key":"solution is.","Fragments":["However"]},{"Key":"is. However","Fragments":["`time"]},{"Key":"However `time","Fragments":["cargo"]},{"Key":"`time cargo","Fragments":["test"]},{"Key":"test --release`","Fragments":["gave"]},{"Key":"--release` gave","Fragments":["me"]},{"Key":"me 0.271","Fragments":["seconds"]},{"Key":"0.271 seconds","Fragments":["total"]},{"Key":"seconds total","Fragments":["on"]},{"Key":"total on","Fragments":["my"]},{"Key":"my laptop","Fragments":["(Archlinux,"]},{"Key":"laptop (Archlinux,","Fragments":["kernel"]},{"Key":"(Archlinux, kernel","Fragments":["4.2.5"]},{"Key":"kernel 4.2.5","Fragments":["on"]},{"Key":"4.2.5 on","Fragments":["Intel®"]},{"Key":"on Intel®","Fragments":["Core™"]},{"Key":"Intel® Core™","Fragments":["i7"]},{"Key":"Core™ i7","Fragments":["2.6GHz)."]},{"Key":"replaced the","Fragments":["for"]},{"Key":"more iterator","Fragments":["code,"]},{"Key":"iterator code,","Fragments":["using"]},{"Key":"code, using","Fragments":["a"]},{"Key":"a clone","Fragments":["and"]},{"Key":"clone and","Fragments":["a"]},{"Key":"second filter.","Fragments":["The"]},{"Key":"filter. The","Fragments":["main"]},{"Key":"The main","Fragments":["issue"]},{"Key":"main issue","Fragments":["I"]},{"Key":"issue I","Fragments":["had"]},{"Key":"had here","Fragments":["was"]},{"Key":"was running","Fragments":["iter()"]},{"Key":"running iter()","Fragments":["before"]},{"Key":"iter() before","Fragments":["cloned()"]},{"Key":"before cloned()","Fragments":["instead"]},{"Key":"cloned() instead","Fragments":["of"]},{"Key":"Nice solution,","Fragments":["pretty"]},{"Key":"solution, pretty","Fragments":["readable."]},{"Key":"readable. Chained","Fragments":["filters"]},{"Key":"Chained filters","Fragments":["makes"]},{"Key":"filters makes","Fragments":["it"]},{"Key":"it easy","Fragments":["to"]},{"Key":"to output.","Fragments":["Formatting"]},{"Key":"output. Formatting","Fragments":["is"]},{"Key":"bit off","Fragments":["(Rustaceans"]},{"Key":"off (Rustaceans","Fragments":["prefer"]},{"Key":"(Rustaceans prefer","Fragments":["to"]},{"Key":"to align","Fragments":["dots),","things"]},{"Key":"align dots),","Fragments":["but"]},{"Key":"dots), but","Fragments":["otherwise"]},{"Key":"otherwise great","Fragments":["code."]},{"Key":"PS. I","Fragments":["should"]},{"Key":"probably made","Fragments":["something"]},{"Key":"made something","Fragments":["similar"]},{"Key":"avoid splitting","Fragments":["and"]},{"Key":"splitting and","Fragments":["sorting"]},{"Key":"sorting original","Fragments":["word"]},{"Key":"original word","Fragments":["on"]},{"Key":"word on","Fragments":["every"]},{"Key":" Tests","Fragments":["are"]},{"Key":"Tests are","Fragments":["implemented"]},{"Key":"are implemented","Fragments":["for"]},{"Key":"implemented for","Fragments":["`T:","the"]},{"Key":"for `T:","Fragments":["Ord"]},{"Key":"`T: Ord","Fragments":["+"]},{"Key":"Ord +","Fragments":["Eq`,"]},{"Key":"+ Eq`,","Fragments":["so"]},{"Key":"Eq`, so","Fragments":["`HashSet`"]},{"Key":"so `HashSet`","Fragments":["was"]},{"Key":"`HashSet` was","Fragments":["out."]},{"Key":"use `BTreeSet`,","Fragments":["but"]},{"Key":"`BTreeSet`, but","Fragments":["that"]},{"Key":"be too","Fragments":["trivial,"]},{"Key":"too trivial,","Fragments":["so"]},{"Key":"implement it","Fragments":["myself."]},{"Key":"to spend","Fragments":["too"]},{"Key":"spend too","Fragments":["much"]},{"Key":"much time","Fragments":["for"]},{"Key":"the implementation,","Fragments":["so"]},{"Key":"implementation, so","Fragments":["I"]},{"Key":"for sorted","Fragments":["array"]},{"Key":"sorted array","Fragments":["backend"]},{"Key":"array backend","Fragments":["and"]},{"Key":"backend and","Fragments":["no"]},{"Key":"and no","Fragments":["unsafe"]},{"Key":"no unsafe","Fragments":["optimizations."]},{"Key":" Almost","Fragments":["all"]},{"Key":"Almost all","Fragments":["operations"]},{"Key":"all operations","Fragments":["are"]},{"Key":"operations are","Fragments":["`O(log","not"]},{"Key":"are `O(log","Fragments":["n)`"]},{"Key":"`O(log n)`","Fragments":["or"]},{"Key":"n)` or","Fragments":["`O(n"]},{"Key":"or `O(n","Fragments":["log"]},{"Key":"`O(n log","Fragments":["n)`"]},{"Key":"log n)`","Fragments":["because"]},{"Key":"n)` because","Fragments":["storage"]},{"Key":"because storage","Fragments":["area"]},{"Key":"storage area","Fragments":["is"]},{"Key":"area is","Fragments":["kept"]},{"Key":"is kept","Fragments":["sorted."]},{"Key":" Fixed:","Fragments":["`FromIterator`"]},{"Key":"Fixed: `FromIterator`","Fragments":["implementation"]},{"Key":"`FromIterator` implementation","Fragments":["could"]},{"Key":"implementation could","Fragments":["potentially"]},{"Key":"could potentially","Fragments":["leave"]},{"Key":"potentially leave","Fragments":["my"]},{"Key":"leave my","Fragments":["set"]},{"Key":"my set","Fragments":["with"]},{"Key":"set with","Fragments":["duplicated"]},{"Key":"with duplicated","Fragments":["items"]},{"Key":"duplicated items","Fragments":["if"]},{"Key":"items if","Fragments":["original"]},{"Key":"if original","Fragments":["iterator"]},{"Key":"iterator produces","Fragments":["duplicate"]},{"Key":"produces duplicate","Fragments":["items."]},{"Key":"Ok, now","Fragments":["I'm"]},{"Key":"now I'm","Fragments":["more"]},{"Key":"I'm more","Fragments":["or"]},{"Key":"more or","Fragments":["less","less","less"]},{"Key":"less happy","Fragments":["with"]},{"Key":"It reflects","Fragments":["main"]},{"Key":"reflects main","Fragments":["algorithm"]},{"Key":"main algorithm","Fragments":["outline"]},{"Key":"algorithm outline","Fragments":["more"]},{"Key":"outline more","Fragments":["or"]},{"Key":"less clear,","Fragments":["and"]},{"Key":"clear, and","Fragments":["still"]},{"Key":"still follows","Fragments":["nice"]},{"Key":"follows nice","Fragments":["functional"]},{"Key":"nice functional","Fragments":["flow."]},{"Key":"And yes,","Fragments":["I'm"]},{"Key":"yes, I'm","Fragments":["know"]},{"Key":"I'm know","Fragments":["built"]},{"Key":"know built","Fragments":["in"]},{"Key":"in stack","Fragments":["operations"]},{"Key":"stack operations","Fragments":["are"]},{"Key":"not always","Fragments":["optimal"]},{"Key":"always optimal","Fragments":["(like"]},{"Key":"optimal (like","Fragments":["`dup`,"]},{"Key":"(like `dup`,","Fragments":["`swap`"]},{"Key":"`dup`, `swap`","Fragments":["and"]},{"Key":"`swap` and","Fragments":["`over`),"]},{"Key":"and `over`),","Fragments":["but"]},{"Key":"`over`), but","Fragments":["my"]},{"Key":"my main","Fragments":["goal"]},{"Key":"main goal","Fragments":["here"]},{"Key":"goal here","Fragments":["was"]},{"Key":"version works","Fragments":["with"]},{"Key":"stable Rust.","Fragments":["For"]},{"Key":"version utilizing","Fragments":["unboxed"]},{"Key":"utilizing unboxed","Fragments":["closures"]},{"Key":"closures (which","Fragments":["works"]},{"Key":"(which works","Fragments":["for"]},{"Key":"works for","Fragments":["unstable"]},{"Key":"for unstable","Fragments":["Rust"]},{"Key":"unstable Rust","Fragments":["channel"]},{"Key":"Rust channel","Fragments":["only)"]},{"Key":"channel only)","Fragments":["see"]},{"Key":"only) see","Fragments":["iteration"]},{"Key":"Another optimization","Fragments":["point"]},{"Key":"optimization point","Fragments":["can"]},{"Key":"point can","Fragments":["be"]},{"Key":"be storing","Fragments":["words"]},{"Key":"storing words","Fragments":["in"]},{"Key":"in `Env`","Fragments":["labeled"]},{"Key":"`Env` labeled","Fragments":["with"]},{"Key":"labeled with","Fragments":["`\u0026str`"]},{"Key":"with `\u0026str`","Fragments":["instead"]},{"Key":"`\u0026str` instead","Fragments":["of"]},{"Key":"of `String`.","Fragments":["It's"]},{"Key":"`String`. It's","Fragments":["possible"]},{"Key":"It's possible","Fragments":["because"]},{"Key":"possible because","Fragments":["the"]},{"Key":"strings are","Fragments":["either","literals"]},{"Key":"are either","Fragments":["hardcoded"]},{"Key":"either hardcoded","Fragments":["(`\u0026'static"]},{"Key":"hardcoded (`\u0026'static","Fragments":["str`"]},{"Key":"(`\u0026'static str`","Fragments":["for"]},{"Key":"str` for","Fragments":["predefined"]},{"Key":"for predefined","Fragments":["words),"]},{"Key":"predefined words),","Fragments":["or"]},{"Key":"words), or","Fragments":["local"]},{"Key":"or local","Fragments":["enough"]},{"Key":"local enough","Fragments":["(there"]},{"Key":"enough (there","Fragments":["lifetime"]},{"Key":"(there lifetime","Fragments":["is"]},{"Key":"lifetime is","Fragments":["shorter"]},{"Key":"is shorter","Fragments":["than"]},{"Key":"shorter than","Fragments":["`input`"]},{"Key":"than `input`","Fragments":["argument"]},{"Key":"`input` argument","Fragments":["lifetime"]},{"Key":"argument lifetime","Fragments":["in"]},{"Key":"lifetime in","Fragments":["the"]},{"Key":"the `eval()`","Fragments":["method)."]},{"Key":"Also `eval`","Fragments":["can"]},{"Key":"`eval` can","Fragments":["be"]},{"Key":"split up","Fragments":["into"]},{"Key":"up into","Fragments":["compilation"]},{"Key":"into compilation","Fragments":["and"]},{"Key":"compilation and","Fragments":["evaluation"]},{"Key":"and evaluation","Fragments":["methods,"]},{"Key":"evaluation methods,","Fragments":["and"]},{"Key":"and let","Fragments":["`compile`"]},{"Key":"let `compile`","Fragments":["method"]},{"Key":"`compile` method","Fragments":["build"]},{"Key":"method build","Fragments":["something"]},{"Key":"build something","Fragments":["like"]},{"Key":"like an","Fragments":["array"]},{"Key":"of function","Fragments":["pointers,"]},{"Key":"function pointers,","Fragments":["applied"]},{"Key":"pointers, applied","Fragments":["to"]},{"Key":"to stack","Fragments":["in"]},{"Key":"stack in","Fragments":["`eval`"]},{"Key":"in `eval`","Fragments":["method"]},{"Key":"`eval` method","Fragments":["one"]},{"Key":"method one","Fragments":["by"]},{"Key":"one by","Fragments":["one"]},{"Key":"by one","Fragments":["(something"]},{"Key":"one (something","Fragments":["akin"]},{"Key":"(something akin","Fragments":["of"]},{"Key":"akin of","Fragments":["threaded"]},{"Key":"of threaded","Fragments":["code)."]},{"Key":"A lot","Fragments":["of"]},{"Key":"things can","Fragments":["be"]},{"Key":"optimized here,","Fragments":["starting"]},{"Key":"here, starting","Fragments":["from"]},{"Key":"starting from","Fragments":["internal"]},{"Key":"from internal","Fragments":["buffer"]},{"Key":"internal buffer","Fragments":["representation"]},{"Key":"buffer representation","Fragments":["(the"]},{"Key":"representation (the","Fragments":["way"]},{"Key":"(the way","Fragments":["slots"]},{"Key":"way slots","Fragments":["are"]},{"Key":"slots are","Fragments":["marked"]},{"Key":"are marked","Fragments":["as"]},{"Key":"marked as","Fragments":["free/busy,"]},{"Key":"as free/busy,","Fragments":["using"]},{"Key":"free/busy, using","Fragments":["unsafe"]},{"Key":"using unsafe","Fragments":["data"]},{"Key":"unsafe data","Fragments":["structures"]},{"Key":"data structures","Fragments":["instead"]},{"Key":"structures instead","Fragments":["of"]},{"Key":"of `Vec`","Fragments":["etc),"]},{"Key":"`Vec` etc),","Fragments":["and"]},{"Key":"etc), and","Fragments":["up"]},{"Key":"and up","Fragments":["to"]},{"Key":"to elements","Fragments":["access"]},{"Key":"elements access","Fragments":["(avoid"]},{"Key":"access (avoid","Fragments":["unnecessary"]},{"Key":"(avoid unnecessary","Fragments":["bounds"]},{"Key":"unnecessary bounds","Fragments":["checks),"]},{"Key":"bounds checks),","Fragments":["but"]},{"Key":"checks), but","Fragments":["this"]},{"Key":"implementation is","Fragments":["minimal"]},{"Key":"is minimal","Fragments":["working"]},{"Key":"minimal working","Fragments":["solution"]},{"Key":"working solution","Fragments":["for"]},{"Key":"the task","Fragments":["at"]},{"Key":"task at","Fragments":["hand."]},{"Key":"use generic","Fragments":["solution,"]},{"Key":"generic solution,","Fragments":["and"]},{"Key":"solution, and","Fragments":["one"]},{"Key":"one test","Fragments":["doesn't"]},{"Key":"test doesn't","Fragments":["contain"]},{"Key":"doesn't contain","Fragments":["enough"]},{"Key":"contain enough","Fragments":["type"]},{"Key":"enough type","Fragments":["info"]},{"Key":"type info","Fragments":["to"]},{"Key":"info to","Fragments":["infer"]},{"Key":"infer item","Fragments":["type,"]},{"Key":"item type,","Fragments":["so"]},{"Key":"type, so","Fragments":["I"]},{"Key":"update it","Fragments":["(`error_on_read_empty_buffer`"]},{"Key":"it (`error_on_read_empty_buffer`","Fragments":["test,"]},{"Key":"(`error_on_read_empty_buffer` test,","Fragments":["initialize"]},{"Key":"test, initialize","Fragments":["buffer"]},{"Key":"initialize buffer","Fragments":["with"]},{"Key":"with `CircularBuffer::\u003cchar\u003e::new()`).","Fragments":["It's"]},{"Key":"`CircularBuffer::\u003cchar\u003e::new()`). It's","Fragments":["the"]},{"Key":"It's the","Fragments":["only"]},{"Key":"one case","Fragments":["I"]},{"Key":"I modified","Fragments":["original"]},{"Key":"modified original","Fragments":["test"]},{"Key":"original test","Fragments":["suite."]},{"Key":"seems reasonable.","Fragments":["If"]},{"Key":"reasonable. If","Fragments":["I"]},{"Key":"comment it","Fragments":["would"]},{"Key":"`overwrite` contains","Fragments":["lines"]},{"Key":"contains lines","Fragments":["that"]},{"Key":"lines that","Fragments":["are"]},{"Key":"as lines","Fragments":["in"]},{"Key":"other operations,","Fragments":["so"]},{"Key":"operations, so","Fragments":["maybe"]},{"Key":"know, I","Fragments":["thought"]},{"Key":"about reusing","Fragments":["`read`"]},{"Key":"reusing `read`","Fragments":["and"]},{"Key":"`write` for","Fragments":["`overwrite`,"]},{"Key":"for `overwrite`,","Fragments":["but"]},{"Key":"`overwrite`, but","Fragments":["then"]},{"Key":"be just","Fragments":["no"]},{"Key":"just no","Fragments":["efficient"]},{"Key":"no efficient","Fragments":["enough."]},{"Key":" Found","Fragments":["out"]},{"Key":"Found out","Fragments":["about"]},{"Key":"readable solution.","Fragments":["I"]},{"Key":"about `iter.position()`","Fragments":["-"]},{"Key":"`iter.position()` -","Fragments":["nice"]},{"Key":"- nice","Fragments":["trick"]},{"Key":"nice trick","Fragments":["to"]},{"Key":"trick to","Fragments":["use"]},{"Key":" Btw,","Fragments":["do"]},{"Key":"Btw, do","Fragments":["you"]},{"Key":"have ideas","Fragments":["how"]},{"Key":"ideas how","Fragments":["to"]},{"Key":"that exercise","Fragments":["more"]},{"Key":"exercise more","Fragments":["Rust-y?","idiomatic"]},{"Key":"more Rust-y?","Fragments":["In"]},{"Key":"Rust-y? In","Fragments":["my"]},{"Key":"my opinion,","Fragments":["using"]},{"Key":"opinion, using","Fragments":["vector"]},{"Key":"using vector","Fragments":["just"]},{"Key":"vector just","Fragments":["to"]},{"Key":"list existing","Fragments":["enums"]},{"Key":"existing enums","Fragments":["is"]},{"Key":"enums is","Fragments":["not"]},{"Key":"not idiomatic.","Fragments":["And"]},{"Key":"idiomatic. And","Fragments":["there"]},{"Key":"And there","Fragments":["is"]},{"Key":"other way","Fragments":["to"]},{"Key":"problem. It","Fragments":["would"]},{"Key":"to adapt","Fragments":["it"]},{"Key":"adapt it","Fragments":["to"]},{"Key":"some Rust","Fragments":["features."]},{"Key":"Honestly, this","Fragments":["was"]},{"Key":"was was","Fragments":["a"]},{"Key":"a massive","Fragments":["brain"]},{"Key":"massive brain","Fragments":["bend"]},{"Key":"brain bend","Fragments":["for"]},{"Key":"bend for","Fragments":["me"]},{"Key":"me and","Fragments":["I"]},{"Key":"I resorted","Fragments":["to"]},{"Key":"resorted to","Fragments":["looking"]},{"Key":"to looking","Fragments":["at"]},{"Key":"at how","Fragments":["it"]},{"Key":"was done","Fragments":["in"]},{"Key":"the repo","Fragments":["for"]},{"Key":"repo for","Fragments":["exercism."]},{"Key":"for exercism.","Fragments":["I"]},{"Key":"exercism. I","Fragments":["adjusted"]},{"Key":"I adjusted","Fragments":["it"]},{"Key":"adjusted it","Fragments":["to"]},{"Key":"it more","Fragments":["readable","Rusty!"]},{"Key":"readable (in","Fragments":["my"]},{"Key":"(in my","Fragments":["mind)."]},{"Key":"Although it","Fragments":["felt"]},{"Key":"it felt","Fragments":["like"]},{"Key":"like cheating","Fragments":["I"]},{"Key":"cheating I","Fragments":["learned"]},{"Key":"I learned","Fragments":["about"]},{"Key":"about bit","Fragments":["shifting,"]},{"Key":"bit shifting,","Fragments":["`self.0`"]},{"Key":"shifting, `self.0`","Fragments":["and"]},{"Key":"`self.0` and","Fragments":["a"]},{"Key":"a bunch","Fragments":["of"]},{"Key":"bunch of","Fragments":["the"]},{"Key":"idea how","Fragments":["to"]},{"Key":"can associate","Fragments":["values"]},{"Key":"associate values","Fragments":["to"]},{"Key":"to enums","Fragments":["(e.g."]},{"Key":"enums (e.g.","Fragments":["```Eggs"]},{"Key":"(e.g. ```Eggs","Fragments":["="]},{"Key":"```Eggs =","Fragments":["1,"]},{"Key":"= 1,","Fragments":["...```)."]},{"Key":"can then","Fragments":["cast"]},{"Key":"then cast","Fragments":["the"]},{"Key":"cast the","Fragments":["enum"]},{"Key":"it's corresponding","Fragments":["value,"]},{"Key":"corresponding value,","Fragments":["and"]},{"Key":"in ```is_allergic_to```","Fragments":["instead"]},{"Key":"```is_allergic_to``` instead","Fragments":["of"]},{"Key":"of ```1","Fragments":["\u003c\u003c"]},{"Key":"```1 \u003c\u003c","Fragments":["index```."]},{"Key":"\u003c\u003c index```.","Fragments":["So"]},{"Key":"index```. So","Fragments":["you"]},{"Key":"you save","Fragments":["the"]},{"Key":"save the","Fragments":["lookup."]},{"Key":"Also, ```match","Fragments":["a"]},{"Key":"```match a","Fragments":["{0=\u003efalse,"]},{"Key":"a {0=\u003efalse,","Fragments":["_=\u003etrue)}```"]},{"Key":"{0=\u003efalse, _=\u003etrue)}```","Fragments":["can"]},{"Key":"_=\u003etrue)}``` can","Fragments":["be"]},{"Key":"as ```a","Fragments":["!="]},{"Key":"```a !=","Fragments":["0```."]},{"Key":" @lurline","Fragments":["good"]},{"Key":"@lurline good","Fragments":["points,"]},{"Key":"good points,","Fragments":["but"]},{"Key":"points, but","Fragments":["you"]},{"Key":"you still","Fragments":["need"]},{"Key":"still need","Fragments":["to"]},{"Key":"list enum","Fragments":["values"]},{"Key":"for `allergies()`.","Fragments":["And"]},{"Key":"`allergies()`. And","Fragments":["if"]},{"Key":"you add","Fragments":["a"]},{"Key":"new value,","Fragments":["you"]},{"Key":"add it","Fragments":["to"]},{"Key":"to `allergies()`","Fragments":["too."]},{"Key":"`allergies()` too.","Fragments":["It"]},{"Key":"too. It","Fragments":["is"]},{"Key":"really good.","Fragments":["There"]},{"Key":"good. There","Fragments":["has"]},{"Key":"idiomatic without","Fragments":["losing"]},{"Key":"without losing","Fragments":["its"]},{"Key":"losing its","Fragments":["meaning."]},{"Key":"your nitpick,","Fragments":["i"]},{"Key":"nitpick, i","Fragments":["agree"]},{"Key":"i agree","Fragments":["that"]},{"Key":"cleaner to","Fragments":["iterate"]},{"Key":"I iterated","Fragments":["on"]},{"Key":"iterated on","Fragments":["the"]},{"Key":"the submission","Fragments":["and"]},{"Key":"and cleaned","Fragments":["up"]},{"Key":"cleaned up","Fragments":["the"]},{"Key":"anagram code","Fragments":["a"]},{"Key":"bit as","Fragments":["well."]},{"Key":"It's probably","Fragments":["better"]},{"Key":"probably better","Fragments":["to"]},{"Key":"lifetime indicator","Fragments":["to"]},{"Key":"indicator to","Fragments":["the"]},{"Key":"the references","Fragments":["that"]},{"Key":"references that","Fragments":["are"]},{"Key":"are actually","Fragments":["cloned.","corners"]},{"Key":" Got","Fragments":["the"]},{"Key":"Got the","Fragments":["problem"]},{"Key":"problem slightly","Fragments":["wrong;"]},{"Key":"slightly wrong;","Fragments":["thought"]},{"Key":"wrong; thought","Fragments":["\"banana\""]},{"Key":"thought \"banana\"","Fragments":["was"]},{"Key":"\"banana\" was","Fragments":["an"]},{"Key":"of \"banana\".","Fragments":["Fixed"]},{"Key":"\"banana\". Fixed","Fragments":["it"]},{"Key":"Fixed it","Fragments":["in"]},{"Key":"Seems to","Fragments":["me"]},{"Key":"be over-complicated","Fragments":["-"]},{"Key":"over-complicated -","Fragments":["your"]},{"Key":"your first","Fragments":["test,"]},{"Key":"first test,","Fragments":["for"]},{"Key":"test, for","Fragments":["instance,"]},{"Key":"instance, can","Fragments":["just"]},{"Key":"just test","Fragments":["for"]},{"Key":"Also consider","Fragments":["putting"]},{"Key":"consider putting","Fragments":["the"]},{"Key":"more common","Fragments":["case"]},{"Key":"common case","Fragments":["first"]},{"Key":"case first","Fragments":["so"]},{"Key":"first so","Fragments":["evaluation"]},{"Key":"so evaluation","Fragments":["is"]},{"Key":"evaluation is","Fragments":["short-circuited."]},{"Key":"that likely","Fragments":["works,","works,"]},{"Key":"likely works,","Fragments":["but","but"]},{"Key":"but how","Fragments":["could","could"]},{"Key":"how could","Fragments":["you","you"]},{"Key":"you improve","Fragments":["the","the"]},{"Key":"improve the","Fragments":["readability","readability"]},{"Key":"the readability","Fragments":["of","of"]},{"Key":"readability of","Fragments":["the","the"]},{"Key":"the code?","Fragments":["Are","Are"]},{"Key":"code? Are","Fragments":["there","there"]},{"Key":"any language","Fragments":["features","features"]},{"Key":"language features","Fragments":["that","that"]},{"Key":"features that","Fragments":["could","could"]},{"Key":"could lead","Fragments":["to","to"]},{"Key":"better design?","Fragments":["Hint,","Hint,"]},{"Key":"design? Hint,","Fragments":["consider","consider"]},{"Key":"Hint, consider","Fragments":["having","having"]},{"Key":"consider having","Fragments":["a","a"]},{"Key":"matching capability","Fragments":["of","of"]},{"Key":"capability of","Fragments":["Rust","Rust"]},{"Key":"this could","Fragments":["influence","influence"]},{"Key":"could influence","Fragments":["your","your"]},{"Key":"influence your","Fragments":["solution.","solution."]},{"Key":"can code","Fragments":["in"]},{"Key":"a pipeline-processing","Fragments":["(functional)"]},{"Key":"pipeline-processing (functional)","Fragments":["style,"]},{"Key":"(functional) style,","Fragments":["but"]},{"Key":"style, but","Fragments":["is"]},{"Key":"this idiomatic","Fragments":["rust?"]},{"Key":"a LOT","Fragments":["of"]},{"Key":"LOT of","Fragments":["gyration,"]},{"Key":"of gyration,","Fragments":["did"]},{"Key":"gyration, did","Fragments":["I"]},{"Key":"did I","Fragments":["miss"]},{"Key":"I miss","Fragments":["something"]},{"Key":"miss something","Fragments":["that's"]},{"Key":"something that's","Fragments":["simpler?"]},{"Key":"Is this","Fragments":["safe?"]},{"Key":"the sorting","Fragments":["approach,"]},{"Key":"sorting approach,","Fragments":["but"]},{"Key":"approach, but","Fragments":["sorting"]},{"Key":"but sorting","Fragments":["by"]},{"Key":"by bytes","Fragments":["won't"]},{"Key":"bytes won't","Fragments":["always"]},{"Key":"won't always","Fragments":["work"]},{"Key":"always work","Fragments":["as"]},{"Key":"as Unicode","Fragments":["characters"]},{"Key":"characters can","Fragments":["be"]},{"Key":"be represented","Fragments":["by"]},{"Key":"represented by","Fragments":["more"]},{"Key":"by more","Fragments":["than"]},{"Key":"one byte.","Fragments":["For"]},{"Key":"byte. For","Fragments":["example,"]},{"Key":"example, try","Fragments":["this"]},{"Key":"try this","Fragments":["test"]},{"Key":"this test","Fragments":["case:"]},{"Key":"fn test_unicode_byte_anagrams()","Fragments":["{"]},{"Key":"let inputs","Fragments":["="]},{"Key":"inputs =","Fragments":["[\"Āἑ\"];"]},{"Key":"let outputs:","Fragments":["Vec\u003c\u0026str\u003e"]},{"Key":"outputs: Vec\u003c\u0026str\u003e","Fragments":["="]},{"Key":"Vec\u003c\u0026str\u003e =","Fragments":["vec![];"]},{"Key":" assert_eq!(anagram::anagrams_for(\"đἁ\",","Fragments":["\u0026inputs),"]},{"Key":"assert_eq!(anagram::anagrams_for(\"đἁ\", \u0026inputs),","Fragments":["outputs);"]},{"Key":" Āἑ","Fragments":["is"]},{"Key":"Āἑ is","Fragments":["an"]},{"Key":"an acronym","Fragments":["of"]},{"Key":"acronym of","Fragments":["đἁ"]},{"Key":"of đἁ","Fragments":["at"]},{"Key":"đἁ at","Fragments":["the"]},{"Key":"the byte","Fragments":["level,"]},{"Key":"byte level,","Fragments":["but"]},{"Key":"level, but","Fragments":["not"]},{"Key":"not at","Fragments":["the"]},{"Key":"* *","Fragments":["*","*","*","*"]},{"Key":"// not","Fragments":["really"]},{"Key":"need this","Fragments":["map"]},{"Key":"this map","Fragments":["in"]},{"Key":" `candidates.into_iter()`","Fragments":["produces"]},{"Key":"`candidates.into_iter()` produces","Fragments":["an"]},{"Key":"produces an","Fragments":["iterator","iterator,"]},{"Key":"iterator that","Fragments":["yields"]},{"Key":"that yields","Fragments":["references"]},{"Key":"yields references","Fragments":["to"]},{"Key":"the items","Fragments":["in"]},{"Key":"items in","Fragments":["`candidates`"]},{"Key":"in `candidates`","Fragments":["and"]},{"Key":"and these","Fragments":["references"]},{"Key":"these references","Fragments":["have"]},{"Key":"references have","Fragments":["type"]},{"Key":"have type","Fragments":["`\u0026\u0026str`."]},{"Key":"type `\u0026\u0026str`.","Fragments":["If"]},{"Key":"`\u0026\u0026str`. If","Fragments":["you"]},{"Key":"you try","Fragments":["to"]},{"Key":"collect those","Fragments":["into"]},{"Key":"those into","Fragments":["a"]},{"Key":"of type","Fragments":["`Vec\u003c\u0026str\u003e`,"]},{"Key":"type `Vec\u003c\u0026str\u003e`,","Fragments":["you"]},{"Key":"`Vec\u003c\u0026str\u003e`, you","Fragments":["run"]},{"Key":"run into","Fragments":["trouble."]},{"Key":"into trouble.","Fragments":["In"]},{"Key":"trouble. In","Fragments":["the"]},{"Key":"map, when","Fragments":["you"]},{"Key":"you dereference","Fragments":["`e`,"]},{"Key":"dereference `e`,","Fragments":["you"]},{"Key":"`e`, you","Fragments":["are"]},{"Key":"are creating","Fragments":["a"]},{"Key":"`\u0026str` from","Fragments":["each"]},{"Key":"each `\u0026\u0026str`","Fragments":["and"]},{"Key":"`\u0026\u0026str` and","Fragments":["that"]},{"Key":"that solves","Fragments":["the"]},{"Key":"solves the","Fragments":["problem."]},{"Key":"the problem.","Fragments":["Fortunately,"]},{"Key":"problem. Fortunately,","Fragments":["there"]},{"Key":"Fortunately, there","Fragments":["is"]},{"Key":"an easier","Fragments":["way:"]},{"Key":"easier way:","Fragments":["`cloned`."]},{"Key":"way: `cloned`.","Fragments":["Here"]},{"Key":"`cloned`. Here","Fragments":["is"]},{"Key":"Here is","Fragments":["the"]},{"Key":"function body","Fragments":["using"]},{"Key":"body using","Fragments":["`cloned`"]},{"Key":"using `cloned`","Fragments":["with"]},{"Key":"`cloned` with","Fragments":["a"]},{"Key":" .filter(|e|","Fragments":["is_anagram_of(source,"]},{"Key":".filter(|e| is_anagram_of(source,","Fragments":["e))"]},{"Key":" sb.sort_by(|a,b|","Fragments":["a.cmp(b));"]},{"Key":" tb.sort_by(|a,b|","Fragments":["a.cmp(b));"]},{"Key":" `sort`","Fragments":["is"]},{"Key":"`sort` is","Fragments":["equivalent"]},{"Key":"to `sort_by(|a,b|","Fragments":["a.cmp(b)`,"]},{"Key":"`sort_by(|a,b| a.cmp(b)`,","Fragments":["so"]},{"Key":"a.cmp(b)`, so","Fragments":["these"]},{"Key":"so these","Fragments":["lines"]},{"Key":"these lines","Fragments":["can"]},{"Key":"lines can","Fragments":["be"]},{"Key":"be simplified","Fragments":["to","since"]},{"Key":"simplified to","Fragments":["just"]},{"Key":"On line","Fragments":["15,"]},{"Key":"line 15,","Fragments":["the"]},{"Key":"15, the","Fragments":["`return`"]},{"Key":"`return` is","Fragments":["not"]},{"Key":"// good","Fragments":["god"]},{"Key":"good god","Fragments":["this"]},{"Key":"god this","Fragments":["is"]},{"Key":" str.chars().into_iter().map(|c|","Fragments":["c.to_lowercase().next().unwrap()"]},{"Key":"str.chars().into_iter().map(|c| c.to_lowercase().next().unwrap()","Fragments":[").collect::\u003cString\u003e()"]},{"Key":"No worries.","Fragments":["`chars`"]},{"Key":"worries. `chars`","Fragments":["produces"]},{"Key":"`chars` produces","Fragments":["an"]},{"Key":"an iterator,","Fragments":["so"]},{"Key":"iterator, so","Fragments":["you"]},{"Key":"can eliminate","Fragments":["`into_iter`."]},{"Key":"eliminate `into_iter`.","Fragments":["The"]},{"Key":"`into_iter`. The","Fragments":["compiler"]},{"Key":"will infer","Fragments":["the"]},{"Key":"collect from","Fragments":["the"]},{"Key":"type signature","Fragments":["of"]},{"Key":"function, so","Fragments":["you"]},{"Key":"can leave","Fragments":["out"]},{"Key":"that annotation.","Fragments":["With"]},{"Key":"annotation. With","Fragments":["just"]},{"Key":"With just","Fragments":["those"]},{"Key":"just those","Fragments":["two"]},{"Key":"two subtractions,","Fragments":["it"]},{"Key":"subtractions, it","Fragments":["looks"]},{"Key":"looks a","Fragments":["lot"]},{"Key":"These calls","Fragments":["are"]},{"Key":"calls are","Fragments":["being"]},{"Key":"being converted","Fragments":["soely"]},{"Key":"converted soely","Fragments":["for"]},{"Key":"soely for","Fragments":["a"]},{"Key":"you defined.","Fragments":["If"]},{"Key":"defined. If","Fragments":["you"]},{"Key":"you change","Fragments":["it"]},{"Key":"change it","Fragments":["to"]},{"Key":"take `\u0026str`s","Fragments":["instead:"]},{"Key":"fn lower(str:","Fragments":["\u0026str)","String)"]},{"Key":"lower(str: \u0026str)","Fragments":["-\u003e"]},{"Key":" your","Fragments":["code"]},{"Key":"code still","Fragments":["works,"]},{"Key":"still works,","Fragments":["but"]},{"Key":"remove a","Fragments":["copy","silly"]},{"Key":"the string,","Fragments":["as","it"]},{"Key":"string, as","Fragments":["well"]},{"Key":"as making","Fragments":["the"]},{"Key":"first two","Fragments":["lines"]},{"Key":"your help","Fragments":["folks!"]},{"Key":" @tavares","Fragments":["I"]},{"Key":"@tavares I","Fragments":["noticed"]},{"Key":"noticed in","Fragments":["the"]},{"Key":"the rust","Fragments":["source"]},{"Key":"rust source","Fragments":["for"]},{"Key":"source for","Fragments":["`to_uppercase`"]},{"Key":"for `to_uppercase`","Fragments":["that"]},{"Key":"`to_uppercase` that","Fragments":["there"]},{"Key":"`return` at","Fragments":["the"]},{"Key":"function (https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1892).","Fragments":["Is"]},{"Key":"(https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1892). Is","Fragments":["that"]},{"Key":"Also really,","Fragments":["rust"]},{"Key":"really, rust","Fragments":["doesn't"]},{"Key":"rust doesn't","Fragments":["align"]},{"Key":"doesn't align","Fragments":["assignments?"]},{"Key":"align assignments?","Fragments":[":O"]},{"Key":" candidates.into_iter().map(|e|","Fragments":["*e"]},{"Key":"candidates.into_iter().map(|e| *e","Fragments":[")"]},{"Key":"`map` for","Fragments":["the"]},{"Key":"reason specified","Fragments":["in"]},{"Key":"specified in","Fragments":["the"]},{"Key":"the error,","Fragments":["though"]},{"Key":"error, though","Fragments":["it"]},{"Key":"is slightly","Fragments":["opaque:"]},{"Key":"error: the","Fragments":["trait"]},{"Key":"trait `core::iter::FromIterator\u003c\u0026\u0026str\u003e`","Fragments":["is"]},{"Key":"`core::iter::FromIterator\u003c\u0026\u0026str\u003e` is","Fragments":["not"]},{"Key":"not implemented","Fragments":["for"]},{"Key":"Note the","Fragments":["`\u0026\u0026str`."]},{"Key":"the `\u0026\u0026str`.","Fragments":["This"]},{"Key":"`\u0026\u0026str`. This","Fragments":["is"]},{"Key":"because you're","Fragments":["iterating"]},{"Key":"you're iterating","Fragments":["over"]},{"Key":"a `\u0026str`,","Fragments":["which"]},{"Key":"`\u0026str`, which","Fragments":["is"]},{"Key":"a reference,","Fragments":["so"]},{"Key":"reference, so","Fragments":["you"]},{"Key":"you end","Fragments":["up"]},{"Key":"with double","Fragments":["indirection."]},{"Key":"double indirection.","Fragments":["I"]},{"Key":"indirection. I","Fragments":["would"]},{"Key":" Instead.","Fragments":["First"]},{"Key":"Instead. First","Fragments":["of"]},{"Key":"need `into_iter`,","Fragments":["which"]},{"Key":"`into_iter`, which","Fragments":["produces"]},{"Key":"produces owned","Fragments":["values,"]},{"Key":"owned values,","Fragments":["as"]},{"Key":"values, as","Fragments":["you"]},{"Key":"only have","Fragments":["references"]},{"Key":"have references","Fragments":["anyway."]},{"Key":"references anyway.","Fragments":["So"]},{"Key":"anyway. So","Fragments":["just"]},{"Key":"So just","Fragments":["`iter()`"]},{"Key":"just `iter()`","Fragments":["is"]},{"Key":"`iter()` is","Fragments":["fine."]},{"Key":"is fine.","Fragments":["Second,"]},{"Key":"fine. Second,","Fragments":["mapping"]},{"Key":"Second, mapping","Fragments":["over"]},{"Key":"mapping over","Fragments":["a","a"]},{"Key":"of writing","Fragments":["a"]},{"Key":"new closure.","Fragments":["This"]},{"Key":"closure. This","Fragments":["is"]},{"Key":"a subjective","Fragments":["style"]},{"Key":"subjective style","Fragments":["thing,"]},{"Key":"style thing,","Fragments":["and"]},{"Key":"thing, and","Fragments":["they're"]},{"Key":"and they're","Fragments":["basically"]},{"Key":"they're basically","Fragments":["equivlanet,"]},{"Key":"basically equivlanet,","Fragments":["I"]},{"Key":"equivlanet, I","Fragments":["just"]},{"Key":"just find","Fragments":["the"]},{"Key":"the named","Fragments":["function"]},{"Key":"named function","Fragments":["to"]},{"Key":" `str`","Fragments":["is"]},{"Key":"`str` is","Fragments":["also"]},{"Key":"so using","Fragments":["it"]},{"Key":"name is","Fragments":["bad"]},{"Key":"is bad","Fragments":["form,"]},{"Key":"bad form,","Fragments":["even"]},{"Key":"form, even","Fragments":["if"]},{"Key":"fn lower(s:","Fragments":["String)"]},{"Key":"let lowered_source","Fragments":["=","="]},{"Key":"lowered_source =","Fragments":["lower(source.to_string());","lower(source.to_string());"]},{"Key":"let lowered_test","Fragments":["=","="]},{"Key":"lowered_test =","Fragments":["lower(test.to_string());","lower(test.to_string());"]},{"Key":"is _extremely_","Fragments":["nitpicky,"]},{"Key":"_extremely_ nitpicky,","Fragments":["but"]},{"Key":"nitpicky, but","Fragments":["this"]},{"Key":"also exercism","Fragments":[":)"]},{"Key":"exercism :)","Fragments":["Rust"]},{"Key":":) Rust","Fragments":["style"]},{"Key":"Rust style","Fragments":["is"]},{"Key":"style is","Fragments":["to"]},{"Key":"use whitespace","Fragments":["to"]},{"Key":"whitespace to","Fragments":["align"]},{"Key":"align things","Fragments":["here."]},{"Key":" Lookg","Fragments":["at"]},{"Key":"Lookg at","Fragments":["`lower`,"]},{"Key":"at `lower`,","Fragments":["you're"]},{"Key":"`lower`, you're","Fragments":["right"]},{"Key":"you're right","Fragments":["that"]},{"Key":"right that","Fragments":["that's"]},{"Key":"that that's","Fragments":["a"]},{"Key":"bit much.","Fragments":["Rust"]},{"Key":"much. Rust","Fragments":["will"]},{"Key":"will include","Fragments":["a"]},{"Key":"include a","Fragments":["function"]},{"Key":"next release:","Fragments":["http://doc.rust-lang.org/beta/std/primitive.str.html#method.to_lowercase"]},{"Key":"release: http://doc.rust-lang.org/beta/std/primitive.str.html#method.to_lowercase","Fragments":["So,"]},{"Key":"http://doc.rust-lang.org/beta/std/primitive.str.html#method.to_lowercase So,","Fragments":["you"]},{"Key":"So, you","Fragments":["could"]},{"Key":"could wait","Fragments":["till"]},{"Key":"wait till","Fragments":["1.2,"]},{"Key":"till 1.2,","Fragments":["or"]},{"Key":"1.2, or","Fragments":["you"]},{"Key":"use its","Fragments":["source"]},{"Key":"its source","Fragments":["code."]},{"Key":"source code.","Fragments":["However,"]},{"Key":"code. However,","Fragments":["as"]},{"Key":"However, as","Fragments":["it"]},{"Key":"it turns","Fragments":["out,","out"]},{"Key":"turns out,","Fragments":["unicode-enabled"]},{"Key":"out, unicode-enabled","Fragments":["lowercase"]},{"Key":"unicode-enabled lowercase","Fragments":["is"]},{"Key":"lowercase is","Fragments":["HARD,"]},{"Key":"is HARD,","Fragments":["as"]},{"Key":"HARD, as","Fragments":["the"]},{"Key":"source shows:","Fragments":["https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1863-L1897"]},{"Key":"shows: https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1863-L1897","Fragments":["even"]},{"Key":"https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1863-L1897 even","Fragments":["grosser"]},{"Key":"even grosser","Fragments":["than"]},{"Key":"grosser than","Fragments":["your"]},{"Key":"your version!","Fragments":["However,"]},{"Key":"version! However,","Fragments":["for"]},{"Key":"However, for","Fragments":["a"]},{"Key":"simpler version,","Fragments":["you"]},{"Key":"version, you","Fragments":["can"]},{"Key":"can look","Fragments":["at"]},{"Key":"at `to_uppercase()`:","Fragments":["https://github.com/rust-lang/rust/blob/master/src/libcollections/str.rs#L1907-L1912"]},{"Key":"This leaves","Fragments":["you"]},{"Key":"leaves you","Fragments":["with"]},{"Key":"fn lower(source:","Fragments":["String)"]},{"Key":"lower(source: String)","Fragments":["-\u003e"]},{"Key":" s.extend(source.chars().flat_map(|c|","Fragments":["c.to_lowercase()));"]},{"Key":"general, I","Fragments":["always"]},{"Key":"always turn","Fragments":["this"]},{"Key":"turn this","Fragments":["shape:"]},{"Key":"if lowered_source","Fragments":["==","=="]},{"Key":"lowered_source ==","Fragments":["lowered_test","lowered_test"]},{"Key":"== lowered_test","Fragments":["{","{"]},{"Key":"// other","Fragments":["code","code"]},{"Key":" into","Fragments":["this"]},{"Key":"lowered_test {","Fragments":["return"]},{"Key":"return false;","Fragments":["}","}"]},{"Key":" Helps","Fragments":["prevent"]},{"Key":"Helps prevent","Fragments":["horizontal"]},{"Key":"prevent horizontal","Fragments":["drift."]},{"Key":"- `u32`","Fragments":["or"]},{"Key":"even `u16`","Fragments":["is"]},{"Key":"`u16` is","Fragments":["probably"]},{"Key":"use `.pow(2)`","Fragments":["to"]},{"Key":"`.pow(2)` to","Fragments":["skip"]},{"Key":"skip defining","Fragments":["`sum`"]},{"Key":"defining `sum`","Fragments":["variable."]},{"Key":"using closure.","Fragments":["Looks"]},{"Key":"closure. Looks","Fragments":["really"]},{"Key":"Looks really","Fragments":["clean."]},{"Key":"Using a","Fragments":["closure","functional"]},{"Key":"closure capturing","Fragments":["the"]},{"Key":"capturing the","Fragments":["year"]},{"Key":"year to","Fragments":["make"]},{"Key":"year test","Fragments":["more"]},{"Key":"test more","Fragments":["readable."]},{"Key":"In order","Fragments":["to"]},{"Key":"order to","Fragments":["get","avoid"]},{"Key":"compile in","Fragments":["the"]},{"Key":"the manner","Fragments":["expected"]},{"Key":"manner expected","Fragments":["by"]},{"Key":"expected by","Fragments":["the"]},{"Key":"the tests,","Fragments":["I"]},{"Key":"tests, I","Fragments":["had"]},{"Key":"leap crate.","Fragments":["Following"]},{"Key":"crate. Following","Fragments":["the"]},{"Key":"Following the","Fragments":["instructions"]},{"Key":"the instructions","Fragments":["linked"]},{"Key":"instructions linked","Fragments":["on"]},{"Key":"linked on","Fragments":["the"]},{"Key":"exercise page,","Fragments":["would"]},{"Key":"page, would","Fragments":["lead"]},{"Key":"would lead","Fragments":["me"]},{"Key":"lead me","Fragments":["to"]},{"Key":"module 'leap'","Fragments":["inside"]},{"Key":"'leap' inside","Fragments":["the"]},{"Key":"crate 'leap',","Fragments":["however"]},{"Key":"'leap', however","Fragments":["the"]},{"Key":"however the","Fragments":["tests"]},{"Key":"tests call","Fragments":["leap::is_leap_year"]},{"Key":"call leap::is_leap_year","Fragments":["directly"]},{"Key":"leap::is_leap_year directly","Fragments":["on"]},{"Key":"the crate.","Fragments":["This"]},{"Key":"crate. This","Fragments":["forced"]},{"Key":"This forced","Fragments":["me"]},{"Key":"forced me","Fragments":["to"]},{"Key":"put my","Fragments":["code"]},{"Key":"code directly","Fragments":["in"]},{"Key":"my 'leap'","Fragments":["crate's"]},{"Key":"'leap' crate's","Fragments":["lib.rs"]},{"Key":"crate's lib.rs","Fragments":["in"]},{"Key":"lib.rs in","Fragments":["order"]},{"Key":"avoid an","Fragments":["inner"]},{"Key":"there another","Fragments":["suggested"]},{"Key":"another suggested","Fragments":["way"]},{"Key":"suggested way","Fragments":["to"]},{"Key":"to approach","Fragments":["this?"]},{"Key":"not return","Fragments":["a","a"]},{"Key":"a ```\u0026str```","Fragments":["-"]},{"Key":"```\u0026str``` -","Fragments":["that"]},{"Key":"- that","Fragments":["saves"]},{"Key":"that saves","Fragments":["a"]},{"Key":"saves a","Fragments":["heap"]},{"Key":"surprised it","Fragments":["compiles."]},{"Key":"it compiles.","Fragments":["I"]},{"Key":"compiles. I","Fragments":["thought"]},{"Key":"thought you","Fragments":["could"]},{"Key":"string that","Fragments":["your"]},{"Key":"your create","Fragments":["in"]},{"Key":"create in","Fragments":["a"]},{"Key":"the \"does","Fragments":["not"]},{"Key":"\"does not","Fragments":["live"]},{"Key":"not live","Fragments":["ling","long"]},{"Key":"live ling","Fragments":["enough"]},{"Key":"ling enough","Fragments":["error\"."]},{"Key":"it now.","Fragments":["string"]},{"Key":"now. string","Fragments":["literals"]},{"Key":"string literals","Fragments":["have"]},{"Key":"literals have","Fragments":["a"]},{"Key":"a 'static","Fragments":["lifetime,"]},{"Key":"'static lifetime,","Fragments":["they"]},{"Key":"lifetime, they","Fragments":["exist"]},{"Key":"they exist","Fragments":["for"]},{"Key":"the duration","Fragments":["of"]},{"Key":"duration of","Fragments":["the"]},{"Key":"code, so","Fragments":["there"]},{"Key":"so there","Fragments":["should","is","is"]},{"Key":"should not","Fragments":["be"]},{"Key":"any issue","Fragments":["in"]},{"Key":"issue in","Fragments":["this"]},{"Key":"this case.","Fragments":["However"]},{"Key":"case. However","Fragments":["if"]},{"Key":"However if","Fragments":["you"]},{"Key":"you were","Fragments":["to"]},{"Key":"were to","Fragments":["create","check"]},{"Key":"string i.e","Fragments":["from"]},{"Key":"i.e from","Fragments":["stdin"]},{"Key":"from stdin","Fragments":["or"]},{"Key":"stdin or","Fragments":["converting"]},{"Key":"or converting","Fragments":["a"]},{"Key":"number to","Fragments":["string,"]},{"Key":"to string,","Fragments":["this"]},{"Key":"string, this","Fragments":["will"]},{"Key":"work and","Fragments":["we"]},{"Key":"we get","Fragments":["the"]},{"Key":"the does","Fragments":["not"]},{"Key":"long enough","Fragments":["error."]},{"Key":"That's my","Fragments":["understanding"]},{"Key":"understanding too.","Fragments":["In"]},{"Key":"too. In","Fragments":["this"]},{"Key":"case all","Fragments":["the"]},{"Key":"are literals","Fragments":["so"]},{"Key":"literals so","Fragments":["we"]},{"Key":"turns out","Fragments":["x"]},{"Key":"out x","Fragments":["*"]},{"Key":"x *","Fragments":["(x/2)"]},{"Key":"* (x/2)","Fragments":["+"]},{"Key":"(x/2) +","Fragments":["(x/2)"]},{"Key":"+ (x/2)","Fragments":["=="]},{"Key":"(x/2) ==","Fragments":["(x^2"]},{"Key":"== (x^2","Fragments":["+"]},{"Key":"(x^2 +","Fragments":["x)/2,","x)"]},{"Key":"+ x)/2,","Fragments":["which"]},{"Key":"x)/2, which","Fragments":["removes"]},{"Key":"which removes","Fragments":["the"]},{"Key":"for floats","Fragments":["because"]},{"Key":"floats because","Fragments":["(x^2"]},{"Key":"because (x^2","Fragments":["+"]},{"Key":"+ x)","Fragments":["is"]},{"Key":"x) is","Fragments":["guaranteed"]},{"Key":"be even.","Fragments":["Funny"]},{"Key":"even. Funny","Fragments":["how"]},{"Key":"Funny how","Fragments":["things"]},{"Key":"how things","Fragments":["simplify"]},{"Key":"things simplify","Fragments":["if"]},{"Key":"simplify if","Fragments":["you"]},{"Key":"Nice, clean","Fragments":["use"]},{"Key":"the automatic","Fragments":["return"]},{"Key":"Use closure","Fragments":["to"]},{"Key":"The closure","Fragments":["made"]},{"Key":"closure made","Fragments":["this"]},{"Key":"version much","Fragments":["nicer!"]},{"Key":"how `eulerian_cycle`","Fragments":["takes"]},{"Key":"`eulerian_cycle` takes","Fragments":["`\u0026mut"]},{"Key":"takes `\u0026mut","Fragments":["self`"]},{"Key":"`\u0026mut self`","Fragments":["and"]},{"Key":"self` and","Fragments":["destroys"]},{"Key":"and destroys","Fragments":["the"]},{"Key":"destroys the","Fragments":["graph"]},{"Key":"the graph","Fragments":["when"]},{"Key":"graph when","Fragments":["looking"]},{"Key":"when looking","Fragments":["for"]},{"Key":"a cycle.","Fragments":["It"]},{"Key":"cycle. It","Fragments":["means"]},{"Key":"It means","Fragments":["you"]},{"Key":"you can't","Fragments":["call"]},{"Key":"can't call","Fragments":["`eulerian_cycle`"]},{"Key":"call `eulerian_cycle`","Fragments":["twice"]},{"Key":"`eulerian_cycle` twice","Fragments":["on"]},{"Key":"twice on","Fragments":["the"]},{"Key":" `join_paths`","Fragments":["is"]},{"Key":"`join_paths` is","Fragments":["not"]},{"Key":"really that","Fragments":["good"]},{"Key":"that good","Fragments":["since"]},{"Key":"good since","Fragments":["vectors"]},{"Key":"since vectors","Fragments":["don't"]},{"Key":"vectors don't","Fragments":["really"]},{"Key":"really support","Fragments":["splice"]},{"Key":"support splice","Fragments":["in"]},{"Key":"splice in","Fragments":["the"]},{"Key":"the middle.","Fragments":["Could"]},{"Key":"middle. Could","Fragments":["consider"]},{"Key":"Could consider","Fragments":["using"]},{"Key":"that better","Fragments":["supports"]},{"Key":"better supports","Fragments":["it"]},{"Key":"supports it","Fragments":["but"]},{"Key":"it but","Fragments":["doubly-linked"]},{"Key":"but doubly-linked","Fragments":["lists"]},{"Key":"doubly-linked lists","Fragments":["are"]},{"Key":"lists are","Fragments":["tricky"]},{"Key":"are tricky","Fragments":["in"]},{"Key":"tricky in","Fragments":["Rust"]},{"Key":"Rust so","Fragments":["I"]},{"Key":"just wanted","Fragments":["to"]},{"Key":"it done","Fragments":["for"]},{"Key":"done for","Fragments":["a"]},{"Key":" Love","Fragments":["seeing"]},{"Key":"Love seeing","Fragments":["the"]},{"Key":"seeing the","Fragments":["functional"]},{"Key":"doing stuff!","Fragments":["Good"]},{"Key":"stuff! Good","Fragments":["Stuff!"]},{"Key":"an `outputs`","Fragments":["which"]},{"Key":"`outputs` vector.","Fragments":["You"]},{"Key":"the `count`","Fragments":["in"]},{"Key":"in `char_count`,","Fragments":["maybe."]},{"Key":"false; }","Fragments":["true`"]},{"Key":"} true`","Fragments":["should"]},{"Key":"true` should","Fragments":["be"]},{"Key":"simplified since","Fragments":["it's"]},{"Key":"since it's","Fragments":["checking"]},{"Key":"it's checking","Fragments":["a"]},{"Key":"checking a","Fragments":["boolean"]},{"Key":"boolean and","Fragments":["returning"]},{"Key":"boolean, whereas","Fragments":["it"]},{"Key":"whereas it","Fragments":["could"]},{"Key":"return `some_boolean`","Fragments":["directly."]},{"Key":"really struggled","Fragments":["to"]},{"Key":"struggled to","Fragments":["get"]},{"Key":"this working!","Fragments":["I"]},{"Key":"really hard","Fragments":["time"]},{"Key":"time getting","Fragments":["it"]},{"Key":"getting it","Fragments":["to"]},{"Key":"compile at","Fragments":["all."]},{"Key":"why it","Fragments":["does"]},{"Key":"does now","Fragments":["and"]},{"Key":"now and","Fragments":["didn't"]},{"Key":"and didn't","Fragments":["before."]},{"Key":"didn't before.","Fragments":["I"]},{"Key":"before. I","Fragments":["dunno."]},{"Key":"I dunno.","Fragments":["I'm"]},{"Key":"dunno. I'm","Fragments":["happy"]},{"Key":"I'm happy","Fragments":["it"]},{"Key":"happy it","Fragments":["works"]},{"Key":"it works","Fragments":["and"]},{"Key":"works and","Fragments":["going"]},{"Key":"and going","Fragments":["to"]},{"Key":"For a","Fragments":["program"]},{"Key":"a program","Fragments":["this"]},{"Key":"program this","Fragments":["short,"]},{"Key":"this short,","Fragments":["it's"]},{"Key":"short, it's","Fragments":["fine"]},{"Key":"it's fine","Fragments":["to"]},{"Key":"fine to","Fragments":["use"]},{"Key":"a \"big\"","Fragments":["logical"]},{"Key":"\"big\" logical","Fragments":["expression."]},{"Key":"logical expression.","Fragments":["You"]},{"Key":"expression. You","Fragments":["should"]},{"Key":"should check","Fragments":["out"]},{"Key":"out [guards","Fragments":["on"]},{"Key":"[guards on","Fragments":["matches](https://doc.rust-lang.org/stable/book/patterns.html#guards)"]},{"Key":"on matches](https://doc.rust-lang.org/stable/book/patterns.html#guards)","Fragments":["though,"]},{"Key":"matches](https://doc.rust-lang.org/stable/book/patterns.html#guards) though,","Fragments":["they"]},{"Key":"though, they","Fragments":["can"]},{"Key":"lot cleaner.","Fragments":["Or"]},{"Key":"cleaner. Or","Fragments":["just"]},{"Key":"Or just","Fragments":["split"]},{"Key":"just split","Fragments":["your"]},{"Key":"split your","Fragments":["expression"]},{"Key":"your expression","Fragments":["using"]},{"Key":"expression using","Fragments":["if-else"]},{"Key":"using if-else","Fragments":["statements."]},{"Key":" @berniece","Fragments":["Thanks"]},{"Key":"@berniece Thanks","Fragments":["for"]},{"Key":"the suggestions!","Fragments":["I"]},{"Key":"suggestions! I","Fragments":["finally"]},{"Key":"I finally","Fragments":["figured"]},{"Key":"finally figured","Fragments":["out"]},{"Key":"figured out","Fragments":["guards"]},{"Key":"out guards","Fragments":["in"]},{"Key":"guards in","Fragments":["iteration"]},{"Key":"same warts","Fragments":["as"]},{"Key":"warts as","Fragments":["the"]},{"Key":"previous version.","Fragments":["I"]},{"Key":"just folded","Fragments":["the"]},{"Key":"folded the","Fragments":["`open_vertex_on_path`"]},{"Key":"the `open_vertex_on_path`","Fragments":["calculation"]},{"Key":"`open_vertex_on_path` calculation","Fragments":["into"]},{"Key":"calculation into","Fragments":["the"]},{"Key":"the `cycle_starting_at`","Fragments":["calculation."]},{"Key":"`cycle_starting_at` calculation.","Fragments":["I"]},{"Key":"calculation. I","Fragments":["honestly"]},{"Key":"it harder","Fragments":["to"]},{"Key":"understand since","Fragments":["there's"]},{"Key":"since there's","Fragments":["too"]},{"Key":"much bookkeeping","Fragments":["going"]},{"Key":"bookkeeping going","Fragments":["on"]},{"Key":"on to","Fragments":["keep"]},{"Key":"the `open_vertices`","Fragments":["up"]},{"Key":"`open_vertices` up","Fragments":["to"]},{"Key":"to date.","Fragments":["I'll"]},{"Key":"date. I'll","Fragments":["probably"]},{"Key":"I'll probably","Fragments":["revert."]},{"Key":" Ooh,","Fragments":["neat."]},{"Key":"Ooh, neat.","Fragments":["I"]},{"Key":"neat. I","Fragments":["like"]},{"Key":"is `#[allow(dead_code)]`","Fragments":["necessary?"]},{"Key":"There's no","Fragments":["need"]},{"Key":"return in","Fragments":["rust."]},{"Key":"to `return","Fragments":["Err(Error::NotShorthand)`"]},{"Key":"`return Err(Error::NotShorthand)`","Fragments":["directly"]},{"Key":"Err(Error::NotShorthand)` directly","Fragments":["from"]},{"Key":"directly from","Fragments":["inside"]},{"Key":"from inside","Fragments":["my","a"]},{"Key":"inside my","Fragments":["`map`,"]},{"Key":"my `map`,","Fragments":["but"]},{"Key":"`map`, but","Fragments":["the"]},{"Key":"compiler thinks","Fragments":["that's"]},{"Key":"thinks that's","Fragments":["a"]},{"Key":"Type error","Fragments":["since"]},{"Key":"error since","Fragments":["`Error`"]},{"Key":"since `Error`","Fragments":["is"]},{"Key":"`Error` is","Fragments":["not"]},{"Key":"not `char`.","Fragments":["Suggestions?"]},{"Key":"`char`. Suggestions?","Fragments":["I"]},{"Key":"Suggestions? I","Fragments":["could"]},{"Key":"could panic,","Fragments":["but"]},{"Key":"panic, but","Fragments":["that's"]},{"Key":"are invalid","Fragments":["chars"]},{"Key":"invalid chars","Fragments":["in"]},{"Key":"chars in","Fragments":["the"]},{"Key":"string, it","Fragments":["won't"]},{"Key":"won't show","Fragments":["up"]},{"Key":"show up","Fragments":["in"]},{"Key":"map. So","Fragments":["we'll"]},{"Key":"So we'll","Fragments":["eventually"]},{"Key":"we'll eventually","Fragments":["return"]},{"Key":"eventually return","Fragments":["an"]},{"Key":"an `Err()`,","Fragments":["but"]},{"Key":"`Err()`, but","Fragments":["I'd"]},{"Key":"but I'd","Fragments":["rather"]},{"Key":"rather catch","Fragments":["that"]},{"Key":"catch that","Fragments":["earlier."]},{"Key":" @triston","Fragments":["I"]},{"Key":"@triston I","Fragments":["am"]},{"Key":"am annoyed","Fragments":["by"]},{"Key":"annoyed by","Fragments":["that"]},{"Key":"by that","Fragments":["as"]},{"Key":"well. Is","Fragments":["there"]},{"Key":"to exit","Fragments":["a"]},{"Key":"exit a","Fragments":["`map()`"]},{"Key":"a `map()`","Fragments":["early,"]},{"Key":"`map()` early,","Fragments":["or"]},{"Key":"early, or","Fragments":["would"]},{"Key":"or would","Fragments":["I"]},{"Key":"would I","Fragments":["need"]},{"Key":"to rewrite","Fragments":["the"]},{"Key":"rewrite the","Fragments":["`map`"]},{"Key":"`map` as","Fragments":["an"]},{"Key":"doing early","Fragments":["exit"]},{"Key":"early exit","Fragments":["aside"]},{"Key":"exit aside","Fragments":["from"]},{"Key":"aside from","Fragments":["inside"]},{"Key":"a loop,","Fragments":["but"]},{"Key":"loop, but","Fragments":["I'm"]},{"Key":"I'm a","Fragments":["beginner"]},{"Key":"a beginner","Fragments":["with"]},{"Key":"beginner with","Fragments":["Rust."]},{"Key":"you detect","Fragments":["invalidity"]},{"Key":"detect invalidity","Fragments":["on"]},{"Key":"invalidity on","Fragments":["line"]},{"Key":"line 102","Fragments":["you"]},{"Key":"102 you","Fragments":["don't"]},{"Key":"don't terminate","Fragments":["the"]},{"Key":"terminate the","Fragments":["loop"]},{"Key":"loop early,","Fragments":["wasting"]},{"Key":"early, wasting","Fragments":["cycles."]},{"Key":"1. You've","Fragments":["shown"]},{"Key":"You've shown","Fragments":["a"]},{"Key":"shown a","Fragments":["nice"]},{"Key":"nice understanding","Fragments":["of"]},{"Key":"of matching","Fragments":["and"]},{"Key":"matching and","Fragments":["Option/Result"]},{"Key":"and Option/Result","Fragments":["handling."]},{"Key":"may want","Fragments":["to"]},{"Key":"out `std::iter::FromIterator`","Fragments":["for"]},{"Key":"`std::iter::FromIterator` for","Fragments":["building"]},{"Key":"for building","Fragments":["the"]},{"Key":"building the","Fragments":["HashMap"]},{"Key":"1. I'm","Fragments":["curious"]},{"Key":"curious why","Fragments":["you"]},{"Key":"you chose","Fragments":["a"]},{"Key":"chose a","Fragments":["single"]},{"Key":"single error","Fragments":["condition"]},{"Key":"error condition","Fragments":["vs"]},{"Key":"condition vs","Fragments":["differentiating"]},{"Key":"vs differentiating","Fragments":["between"]},{"Key":"differentiating between","Fragments":["too"]},{"Key":"between too","Fragments":["long,"]},{"Key":"too long,","Fragments":["too"]},{"Key":"long, too","Fragments":["short,"]},{"Key":"too short,","Fragments":["not"]},{"Key":"short, not","Fragments":["shorthand,"]},{"Key":"not shorthand,","Fragments":["and"]},{"Key":"shorthand, and","Fragments":["unknown"]},{"Key":"and unknown","Fragments":["name?"]},{"Key":"unknown name?","Fragments":["The"]},{"Key":"name? The","Fragments":["tests"]},{"Key":"tests don't","Fragments":["require"]},{"Key":"don't require","Fragments":["differentiation,"]},{"Key":"require differentiation,","Fragments":["but"]},{"Key":"differentiation, but","Fragments":["a"]},{"Key":"a user","Fragments":["might?"]},{"Key":"this works,","Fragments":["it's"]},{"Key":"works, it's","Fragments":["somewhat"]},{"Key":"it's somewhat","Fragments":["wasteful"]},{"Key":"somewhat wasteful","Fragments":["to"]},{"Key":"through generated","Fragments":["values"]},{"Key":"generated values","Fragments":["until"]},{"Key":"values until","Fragments":["finding"]},{"Key":"until finding","Fragments":["one"]},{"Key":"finding one","Fragments":["of"]},{"Key":"right type","Fragments":["(lines"]},{"Key":"type (lines","Fragments":["24"]},{"Key":"(lines 24","Fragments":["and"]},{"Key":"24 and","Fragments":["25)."]},{"Key":"and 25).","Fragments":["I"]},{"Key":"25). I","Fragments":["am"]},{"Key":"am going","Fragments":["to"]},{"Key":"to experiment","Fragments":["with"]},{"Key":"experiment with","Fragments":["sampling"]},{"Key":"with sampling","Fragments":["from"]},{"Key":"sampling from","Fragments":["a"]},{"Key":"a range","Fragments":["next.","for","and"]},{"Key":"one feedback","Fragments":["-"]},{"Key":"feedback -","Fragments":["why"]},{"Key":"- why","Fragments":["is"]},{"Key":"why is","Fragments":["year"]},{"Key":"is year","Fragments":["i64?"]},{"Key":"year i64?","Fragments":["I"]},{"Key":"i64? I","Fragments":["think"]},{"Key":"think maximum","Fragments":["of"]},{"Key":"of i64","Fragments":["is"]},{"Key":"i64 is","Fragments":["long"]},{"Key":"is long","Fragments":["long"]},{"Key":"long long","Fragments":["away"]},{"Key":"long away","Fragments":["after"]},{"Key":"away after","Fragments":["end"]},{"Key":"after end","Fragments":["of"]},{"Key":" @brisa","Fragments":["Tks"]},{"Key":"@brisa Tks","Fragments":["for"]},{"Key":"Tks for","Fragments":["feedback"]},{"Key":"first Rust","Fragments":["code"]},{"Key":"Rust code","Fragments":["I"]},{"Key":"have ever","Fragments":["written."]},{"Key":"ever written.","Fragments":["The"]},{"Key":"written. The","Fragments":["modular"]},{"Key":"The modular","Fragments":["arithmetic"]},{"Key":"modular arithmetic","Fragments":["and"]},{"Key":"arithmetic and","Fragments":["the"]},{"Key":"if were","Fragments":["easy"]},{"Key":"were easy","Fragments":["to"]},{"Key":"to guess,","Fragments":["and"]},{"Key":"guess, and","Fragments":["the"]},{"Key":"the bool","Fragments":["type"]},{"Key":"bool type","Fragments":["and"]},{"Key":"values easy","Fragments":["to"]},{"Key":"look up,","Fragments":["but"]},{"Key":"but understanding","Fragments":["how"]},{"Key":"understanding how","Fragments":["crate"]},{"Key":"how crate","Fragments":["works"]},{"Key":"crate works","Fragments":["was"]},{"Key":"works was","Fragments":["not."]},{"Key":"was not.","Fragments":["I"]},{"Key":"not. I","Fragments":["would"]},{"Key":"the example","Fragments":["that"]},{"Key":"example that","Fragments":["exercism"]},{"Key":"that exercism","Fragments":["says"]},{"Key":"exercism says","Fragments":["it"]},{"Key":"says it","Fragments":["can"]},{"Key":"can provide,","Fragments":["but"]},{"Key":"provide, but","Fragments":["it"]},{"Key":"it failed","Fragments":["to"]},{"Key":"the reply","Fragments":["from"]},{"Key":"reply from","Fragments":["the"]},{"Key":"the server","Fragments":["so"]},{"Key":"server so","Fragments":["there"]},{"Key":"is either","Fragments":["a"]},{"Key":"bug or","Fragments":["the"]},{"Key":"the examples","Fragments":["haven't"]},{"Key":"examples haven't","Fragments":["been"]},{"Key":"been written","Fragments":["yet."]},{"Key":"written yet.","Fragments":["The"]},{"Key":"yet. The","Fragments":["unit"]},{"Key":"The unit","Fragments":["test"]},{"Key":"unit test","Fragments":["is"]},{"Key":"test is","Fragments":["only"]},{"Key":"only there","Fragments":["to"]},{"Key":"Other considered","Fragments":["solution:"]},{"Key":"match (year","Fragments":["%"]},{"Key":"== 0,","Fragments":["year"]},{"Key":"0, year","Fragments":["%"]},{"Key":" (true,","Fragments":["_)"]},{"Key":"(true, _)","Fragments":["=\u003e"]},{"Key":"_) =\u003e","Fragments":["true,"]},{"Key":" (false,","Fragments":["true)","false)"]},{"Key":"(false, true)","Fragments":["=\u003e"]},{"Key":"true) =\u003e","Fragments":["false,"]},{"Key":"(false, false)","Fragments":["=\u003e"]},{"Key":"false) =\u003e","Fragments":["year"]},{"Key":"=\u003e year","Fragments":["%"]},{"Key":" Decided","Fragments":["the"]},{"Key":"Decided the","Fragments":["one"]},{"Key":"I submitted","Fragments":["looked"]},{"Key":"submitted looked","Fragments":["a"]},{"Key":"looked a","Fragments":["bit"]},{"Key":"bit better.","Fragments":["But"]},{"Key":"could go","Fragments":["either"]},{"Key":"go either","Fragments":["way."]},{"Key":"The approach:","Fragments":["For"]},{"Key":"approach: For","Fragments":["every"]},{"Key":"of corners,","Fragments":["check","check"]},{"Key":"All rectangles","Fragments":["will","will"]},{"Key":"rectangles will","Fragments":["be","be"]},{"Key":"be counted","Fragments":["twice,","twice,"]},{"Key":"counted twice,","Fragments":["so","so"]},{"Key":"twice, so","Fragments":["divide","divide"]},{"Key":"so divide","Fragments":["the","the"]},{"Key":"divide the","Fragments":["result","result"]},{"Key":"result by","Fragments":["two.","two."]},{"Key":" Strange","Fragments":["quirk:"]},{"Key":"Strange quirk:","Fragments":["I"]},{"Key":"quirk: I","Fragments":["completely"]},{"Key":"I completely","Fragments":["forgot"]},{"Key":"completely forgot","Fragments":["to"]},{"Key":"check whether","Fragments":["the"]},{"Key":"the opposite","Fragments":["corners","corners"]},{"Key":"opposite corners","Fragments":["are","before"]},{"Key":"actually corners","Fragments":["(see"]},{"Key":"corners (see","Fragments":["line"]},{"Key":"(see line","Fragments":["93)"]},{"Key":"line 93)","Fragments":["so"]},{"Key":"93) so","Fragments":["the"]},{"Key":"following input","Fragments":["would"]},{"Key":"input would","Fragments":["be"]},{"Key":"be \"half","Fragments":["a"]},{"Key":"\"half a","Fragments":["rectangle\""]},{"Key":"a rectangle\"","Fragments":["(which"]},{"Key":"rectangle\" (which","Fragments":["would"]},{"Key":"(which would","Fragments":["then"]},{"Key":"would then","Fragments":["correctly"]},{"Key":"then correctly","Fragments":["be"]},{"Key":"correctly be","Fragments":["truncated"]},{"Key":"be truncated","Fragments":["to"]},{"Key":"truncated to","Fragments":["zero"]},{"Key":"to zero","Fragments":["rectangles"]},{"Key":"zero rectangles","Fragments":["when"]},{"Key":"rectangles when","Fragments":["returning"]},{"Key":"when returning","Fragments":["the"]},{"Key":"returning the","Fragments":["answer)"]},{"Key":" Despite","Fragments":["the"]},{"Key":"Despite the","Fragments":["fact"]},{"Key":"still gives","Fragments":["a"]},{"Key":"gives a","Fragments":["correct"]},{"Key":"a correct","Fragments":["answer,"]},{"Key":"correct answer,","Fragments":["the"]},{"Key":"answer, the","Fragments":["code"]},{"Key":"code could","Fragments":["skip"]},{"Key":"could skip","Fragments":["some"]},{"Key":"some unnecessary","Fragments":["calculations"]},{"Key":"unnecessary calculations","Fragments":["if"]},{"Key":"calculations if","Fragments":["it"]},{"Key":"check corner","Fragments":["existence,"]},{"Key":"corner existence,","Fragments":["so"]},{"Key":"existence, so","Fragments":["it"]},{"Key":"seems worth","Fragments":["it"]},{"Key":"worth it","Fragments":["to"]},{"Key":" Consider","Fragments":["deduplicating"]},{"Key":"Consider deduplicating","Fragments":["work"]},{"Key":"deduplicating work","Fragments":["by"]},{"Key":"work by","Fragments":["caching"]},{"Key":"function \"does","Fragments":["a"]},{"Key":"\"does a","Fragments":["line"]},{"Key":"a line","Fragments":["exist","between"]},{"Key":"line exist","Fragments":["between"]},{"Key":"exist between","Fragments":["these"]},{"Key":"between these","Fragments":["two","two"]},{"Key":"these two","Fragments":["corners?\",","corners?\""]},{"Key":"two corners?\",","Fragments":["I"]},{"Key":"corners?\", I","Fragments":["think."]},{"Key":" Slightly","Fragments":["incorrect"]},{"Key":"Slightly incorrect","Fragments":["solution."]},{"Key":"incorrect solution.","Fragments":["Year"]},{"Key":"solution. Year","Fragments":["2400"]},{"Key":"Year 2400","Fragments":["is"]},{"Key":"2400 is","Fragments":["leap,"]},{"Key":"is leap,","Fragments":["but"]},{"Key":"leap, but","Fragments":["your"]},{"Key":"return `false`","Fragments":["for"]},{"Key":"`false` for","Fragments":["it."]},{"Key":"for it.","Fragments":["I"]},{"Key":"will make","Fragments":["a"]},{"Key":"also pattern","Fragments":["match"]},{"Key":"tuple in","Fragments":["`filter`:"]},{"Key":"in `filter`:","Fragments":["`zipped.filter(|\u0026(a,"]},{"Key":"`filter`: `zipped.filter(|\u0026(a,","Fragments":["b)|"]},{"Key":"`zipped.filter(|\u0026(a, b)|","Fragments":["a"]},{"Key":"!= b)`,","Fragments":["I"]},{"Key":"b)`, I","Fragments":["think"]},{"Key":"bit better","Fragments":["readable"]},{"Key":"better readable","Fragments":["than"]},{"Key":"the anonymous","Fragments":["fields."]},{"Key":"the if-branches","Fragments":["is"]},{"Key":"if-branches is","Fragments":["to"]},{"Key":"return `true`","Fragments":["or"]},{"Key":"`false` you","Fragments":["can"]},{"Key":"just omit","Fragments":["the"]},{"Key":"fn is_leap_year(year:","Fragments":["u32)"]},{"Key":"is_leap_year(year: u32)","Fragments":["-\u003e"]},{"Key":"the info.","Fragments":["In"]},{"Key":"info. In","Fragments":["retrospect"]},{"Key":"In retrospect","Fragments":["that's"]},{"Key":"retrospect that's","Fragments":["similar"]},{"Key":"that's similar","Fragments":["to"]},{"Key":"to many","Fragments":["other"]},{"Key":"of `fold`","Fragments":["to"]},{"Key":"`fold` to","Fragments":["my"]},{"Key":"my recursive","Fragments":["solution"]},{"Key":"recursive solution","Fragments":["for"]},{"Key":"for `sum_of_squares`,","Fragments":["nice"]},{"Key":"`sum_of_squares`, nice","Fragments":["use"]},{"Key":"nice use","Fragments":["of"]},{"Key":"of functional","Fragments":["primitives."]},{"Key":"same approach","Fragments":["as"]},{"Key":"approach as","Fragments":["you.","the"]},{"Key":"as you.","Fragments":["Using"]},{"Key":"you. Using","Fragments":["a"]},{"Key":"pretty neat","Fragments":["for"]},{"Key":"neat for","Fragments":["these"]},{"Key":"for these","Fragments":["kinds"]},{"Key":"these kinds","Fragments":["of"]},{"Key":"First, classic","Fragments":["implementation"]},{"Key":"classic implementation","Fragments":["with"]},{"Key":"implementation with","Fragments":["for"]},{"Key":"Taking a","Fragments":["more"]},{"Key":"this iteration.","Fragments":["Still,"]},{"Key":"iteration. Still,","Fragments":["there"]},{"Key":"Still, there","Fragments":["is"]},{"Key":"duplication that","Fragments":["might"]},{"Key":"Rust 1.2.0,","Fragments":["`to_lowercase`"]},{"Key":"1.2.0, `to_lowercase`","Fragments":["is"]},{"Key":"`to_lowercase` is","Fragments":["part"]},{"Key":"is part","Fragments":["of"]},{"Key":"stable library,","Fragments":["so"]},{"Key":"for defining","Fragments":["it"]},{"Key":"defining it","Fragments":["manually"]},{"Key":"it manually","Fragments":["anymore."]},{"Key":"That's wonderful","Fragments":["news,"]},{"Key":"wonderful news,","Fragments":["@dalton"]},{"Key":"news, @dalton","Fragments":[","]},{"Key":"@dalton ,","Fragments":["I'm"]},{"Key":", I'm","Fragments":["tired"]},{"Key":"I'm tired","Fragments":["of"]},{"Key":"tired of","Fragments":["cargo-culting"]},{"Key":"of cargo-culting","Fragments":["it"]},{"Key":"cargo-culting it","Fragments":["around"]},{"Key":"around between","Fragments":["my"]},{"Key":"between my","Fragments":["exercism"]},{"Key":"my exercism","Fragments":["examples"]},{"Key":"exercism examples","Fragments":["(pun"]},{"Key":"examples (pun","Fragments":["intended)."]},{"Key":"(pun intended).","Fragments":[":)"]},{"Key":"running 1.1","Fragments":["from"]},{"Key":"1.1 from","Fragments":["2015-06-19."]},{"Key":"from 2015-06-19.","Fragments":["downloading"]},{"Key":"2015-06-19. downloading","Fragments":["the"]},{"Key":"downloading the","Fragments":["upgrade"]},{"Key":"the upgrade","Fragments":["now."]},{"Key":"Using ```zip```","Fragments":["produces"]},{"Key":"```zip``` produces","Fragments":["a"]},{"Key":"a shorter","Fragments":["solution."]},{"Key":"shorter solution.","Fragments":["Dunno"]},{"Key":"solution. Dunno","Fragments":["if"]},{"Key":"Dunno if","Fragments":["it'd"]},{"Key":"if it'd","Fragments":["be"]},{"Key":"it'd be","Fragments":["more"]},{"Key":"also ```filter```","Fragments":["before"]},{"Key":"```filter``` before","Fragments":["the"]},{"Key":"before the","Fragments":["```fold```"]},{"Key":"```fold``` on","Fragments":["```!w.is_empty()```"]},{"Key":"on ```!w.is_empty()```","Fragments":["to"]},{"Key":"```!w.is_empty()``` to","Fragments":["remove"]},{"Key":"a silly","Fragments":["print"]},{"Key":"silly print","Fragments":["line,"]},{"Key":"print line,","Fragments":["and"]},{"Key":"line, and","Fragments":["realized"]},{"Key":"and realized","Fragments":["that"]},{"Key":"no point","Fragments":["in"]},{"Key":"in having","Fragments":["any"]},{"Key":"having any","Fragments":["if/else"]},{"Key":"any if/else","Fragments":["clause"]},{"Key":"if/else clause","Fragments":["when"]},{"Key":"clause when","Fragments":["I"]},{"Key":"just let","Fragments":["it"]},{"Key":"be evaluated","Fragments":["and"]},{"Key":"evaluated and","Fragments":["it'll"]},{"Key":"and it'll","Fragments":["return"]},{"Key":"it'll return","Fragments":["it..."]},{"Key":"return it...","Fragments":["itself."]},{"Key":"find of","Fragments":["converting"]},{"Key":"converting numbers","Fragments":["to"]},{"Key":"numbers to","Fragments":["enums,"]},{"Key":"to enums,","Fragments":["but"]},{"Key":"enums, but","Fragments":["still"]},{"Key":"still no","Fragments":["way"]},{"Key":"enumerating them.","Fragments":["I"]},{"Key":"them. I","Fragments":["guess"]},{"Key":"this saves","Fragments":["repeating"]},{"Key":"saves repeating","Fragments":["them"]},{"Key":"repeating them","Fragments":["at"]},{"Key":"them at","Fragments":["any"]},{"Key":"at any","Fragments":["rate."]},{"Key":" Requires","Fragments":["external"]},{"Key":"Requires external","Fragments":["crates:"]},{"Key":"external crates:","Fragments":["in"]},{"Key":"crates: in","Fragments":["the"]},{"Key":"the cargo.toml","Fragments":["file:"]},{"Key":" enum_primitive","Fragments":["="]},{"Key":"enum_primitive =","Fragments":["\"0.0.2\""]},{"Key":"num =","Fragments":["\"*\""]},{"Key":"Ok, I'm","Fragments":["going"]},{"Key":"to admit","Fragments":["now"]},{"Key":"admit now","Fragments":["that"]},{"Key":"your using","Fragments":["a"]},{"Key":"this instead","Fragments":["of"]},{"Key":"array filled","Fragments":["with"]},{"Key":"filled with","Fragments":["characters"]},{"Key":"characters and","Fragments":["then"]},{"Key":"then indexing","Fragments":["into"]},{"Key":"indexing into","Fragments":["it"]},{"Key":"into it","Fragments":["like"]},{"Key":"it like","Fragments":["I"]},{"Key":" Having","Fragments":["said"]},{"Key":"Having said","Fragments":["that,"]},{"Key":"said that,","Fragments":["if"]},{"Key":"that, if","Fragments":["I"]},{"Key":"this (and","Fragments":["now"]},{"Key":"(and now","Fragments":["I"]},{"Key":"wish I","Fragments":["had),"]},{"Key":"I had),","Fragments":["I"]},{"Key":"had), I","Fragments":["would"]},{"Key":"probably write","Fragments":["the"]},{"Key":"ranges as","Fragments":["like..."]},{"Key":"as like...","Fragments":["`('a'"]},{"Key":"like... `('a'","Fragments":["as"]},{"Key":"`('a' as","Fragments":["u8)..('z'"]},{"Key":"as u8)..('z'","Fragments":["as"]},{"Key":"u8)..('z' as","Fragments":["u8"]},{"Key":"as u8","Fragments":["+"]},{"Key":"u8 +","Fragments":["1)`"]},{"Key":"+ 1)`","Fragments":["purely"]},{"Key":"1)` purely","Fragments":["because"]},{"Key":"purely because","Fragments":["of"]},{"Key":"of experiences","Fragments":["I"]},{"Key":"experiences I","Fragments":["had"]},{"Key":"had on","Fragments":["another"]},{"Key":"on another","Fragments":["puzzle"]},{"Key":"another puzzle","Fragments":["yesterday."]},{"Key":"puzzle yesterday.","Fragments":["Now"]},{"Key":"yesterday. Now","Fragments":["I"]},{"Key":"can't remember","Fragments":["which,"]},{"Key":"remember which,","Fragments":["of"]},{"Key":"which, of","Fragments":["course."]},{"Key":"That's not","Fragments":["really"]},{"Key":"a valuable","Fragments":["change,"]},{"Key":"valuable change,","Fragments":["of"]},{"Key":"change, of","Fragments":["course,"]},{"Key":"course, given","Fragments":["that"]},{"Key":"already knew","Fragments":["and/or"]},{"Key":"knew and/or","Fragments":["looked"]},{"Key":"and/or looked","Fragments":["up"]},{"Key":"looked up","Fragments":["the"]},{"Key":"and everyone","Fragments":["knows"]},{"Key":"knows kinda","Fragments":["what"]},{"Key":"kinda what","Fragments":["they"]},{"Key":"are anyway.","Fragments":[":p"]},{"Key":"What was","Fragments":["the"]},{"Key":"the rationale","Fragments":["for"]},{"Key":"rationale for","Fragments":["using"]},{"Key":"a `LinkedList`","Fragments":["instead"]},{"Key":"`LinkedList` instead","Fragments":["of"]},{"Key":"a `Vec`","Fragments":["for"]},{"Key":"`Vec` for","Fragments":["the","stacks."]},{"Key":"the stack?","Fragments":["The"]},{"Key":"stack? The","Fragments":["performance"]},{"Key":"The performance","Fragments":["of"]},{"Key":"performance of","Fragments":["LinkedList"]},{"Key":"of LinkedList","Fragments":["is"]},{"Key":"LinkedList is","Fragments":["usually"]},{"Key":"usually not","Fragments":["so"]},{"Key":"so good,","Fragments":["the"]},{"Key":"good, the","Fragments":["std::collections"]},{"Key":"the std::collections","Fragments":["documentation"]},{"Key":"std::collections documentation","Fragments":["recommends"]},{"Key":"documentation recommends","Fragments":["using"]},{"Key":"recommends using","Fragments":["`Vec`"]},{"Key":"using `Vec`","Fragments":["for"]},{"Key":"bad choice,","Fragments":["```Vec```"]},{"Key":"choice, ```Vec```","Fragments":["looks"]},{"Key":"```Vec``` looks","Fragments":["to"]},{"Key":"better one.","Fragments":["Well"]},{"Key":"one. Well","Fragments":["spotted."]},{"Key":"changed that,","Fragments":["and"]},{"Key":"that, and","Fragments":["also"]},{"Key":"also extended","Fragments":["the"]},{"Key":"extended the","Fragments":["use"]},{"Key":"the ```Stack```","Fragments":["type"]},{"Key":"```Stack``` type","Fragments":["alias."]},{"Key":" Good,","Fragments":["completely"]},{"Key":"Good, completely","Fragments":["DRY"]},{"Key":"completely DRY","Fragments":["solution."]},{"Key":"{false}` can","Fragments":["be"]},{"Key":"easier written","Fragments":["as"]},{"Key":"actually need","Fragments":["the"]},{"Key":"the if/else","Fragments":["because"]},{"Key":"if/else because","Fragments":["the"]},{"Key":"the equality","Fragments":["checks"]},{"Key":"checks return","Fragments":["a"]},{"Key":"value after","Fragments":["evaluating."]},{"Key":"Why have","Fragments":["you"]},{"Key":"have you","Fragments":["made"]},{"Key":"made ```sum```","Fragments":["mutable"]},{"Key":"```sum``` mutable","Fragments":["in"]},{"Key":"mutable in","Fragments":["line"]},{"Key":" Reassignment","Fragments":["(+=)"]},{"Key":"Reassignment (+=)","Fragments":["requires"]},{"Key":"(+=) requires","Fragments":["it,"]},{"Key":"requires it,","Fragments":["as"]},{"Key":"you replace","Fragments":["you"]},{"Key":"replace you","Fragments":["```{sum"]},{"Key":"you ```{sum","Fragments":["+="]},{"Key":"```{sum +=","Fragments":["i;"]},{"Key":"+= i;","Fragments":["sum}```"]},{"Key":"i; sum}```","Fragments":["with"]},{"Key":"sum}``` with","Fragments":["```sum"]},{"Key":"with ```sum","Fragments":["+"]},{"Key":"```sum +","Fragments":["i```"]},{"Key":"+ i```","Fragments":["in"]},{"Key":"i``` in","Fragments":["both"]},{"Key":"both ```sum_of_squares```","Fragments":["and"]},{"Key":"```sum_of_squares``` and","Fragments":["```square_of_sum```"]},{"Key":"and ```square_of_sum```","Fragments":["the"]},{"Key":"```square_of_sum``` the","Fragments":["code"]},{"Key":"code compiles","Fragments":["and"]},{"Key":"and runs","Fragments":["(and"]},{"Key":"runs (and","Fragments":["passes"]},{"Key":"(and passes","Fragments":["the"]},{"Key":"the testsuite)","Fragments":["without"]},{"Key":"testsuite) without","Fragments":["defining"]},{"Key":"without defining","Fragments":["```sum```"]},{"Key":"defining ```sum```","Fragments":["as"]},{"Key":"```sum``` as","Fragments":["mutable."]},{"Key":"I presume","Fragments":["there"]},{"Key":"presume there","Fragments":["is"]},{"Key":"a temporary","Fragments":["mutable"]},{"Key":"temporary mutable","Fragments":["variable"]},{"Key":"you omit","Fragments":["the"]},{"Key":"the ```+=```","Fragments":["operator"]},{"Key":"```+=``` operator","Fragments":["then"]},{"Key":"operator then","Fragments":["at"]},{"Key":"then at","Fragments":["the"]},{"Key":"end ```sum","Fragments":["```"]},{"Key":"```sum ```","Fragments":["is"]},{"Key":"``` is","Fragments":["created"]},{"Key":"is created","Fragments":["with"]},{"Key":"created with","Fragments":["the"]},{"Key":"final value","Fragments":["as"]},{"Key":"as immutable,","Fragments":["whereas"]},{"Key":"immutable, whereas","Fragments":["your"]},{"Key":"whereas your","Fragments":["solution"]},{"Key":"uses sum","Fragments":["directly."]},{"Key":"sum directly.","Fragments":["Nice."]},{"Key":"directly. Nice.","Fragments":[":)"]},{"Key":"I applaud","Fragments":["your"]},{"Key":"applaud your","Fragments":["TDD"]},{"Key":"your TDD","Fragments":["skills"]},{"Key":"TDD skills","Fragments":[":p"]},{"Key":" Sing","Fragments":["allows"]},{"Key":"Sing allows","Fragments":["for"]},{"Key":"allows for","Fragments":["negative"]},{"Key":"for negative","Fragments":["beer,"]},{"Key":"negative beer,","Fragments":["which"]},{"Key":"beer, which","Fragments":["would"]},{"Key":"possible hangover","Fragments":["cure."]},{"Key":"hangover cure.","Fragments":["It"]},{"Key":"cure. It","Fragments":["could"]},{"Key":"more succinctly","Fragments":["by"]},{"Key":"succinctly by","Fragments":["mapping"]},{"Key":"by mapping","Fragments":["over"]},{"Key":"range and","Fragments":["joining."]},{"Key":"Same approach","Fragments":["as"]},{"Key":"first iteration:","Fragments":["For","ensures"]},{"Key":"iteration: For","Fragments":["every"]},{"Key":"Changed from","Fragments":["the"]},{"Key":"iteration: ensures","Fragments":["the"]},{"Key":"ensures the","Fragments":["existence"]},{"Key":"the existence","Fragments":["of"]},{"Key":"existence of","Fragments":["the"]},{"Key":"corners before","Fragments":["attempting"]},{"Key":"connected (lines","Fragments":["95-98)."]},{"Key":" Still","Fragments":["a"]},{"Key":"Still a","Fragments":["possibility"]},{"Key":"a possibility","Fragments":["to"]},{"Key":"possibility to","Fragments":["consider:"]},{"Key":"to consider:","Fragments":["deduplicate"]},{"Key":"consider: deduplicate","Fragments":["the"]},{"Key":"deduplicate the","Fragments":["work"]},{"Key":"the work","Fragments":["when"]},{"Key":"work when","Fragments":["counting"]},{"Key":"when counting","Fragments":["rectangles"]},{"Key":"counting rectangles","Fragments":["twice."]},{"Key":"rectangles twice.","Fragments":["One"]},{"Key":"twice. One","Fragments":["possibility"]},{"Key":"One possibility","Fragments":["is"]},{"Key":"possibility is","Fragments":["to","to"]},{"Key":"to cache","Fragments":["the"]},{"Key":"cache the","Fragments":["results"]},{"Key":"of asking","Fragments":["the"]},{"Key":"asking the","Fragments":["question"]},{"Key":"the question","Fragments":["\"Is"]},{"Key":"question \"Is","Fragments":["there"]},{"Key":"\"Is there","Fragments":["a"]},{"Key":"line between","Fragments":["these"]},{"Key":"Another possibility","Fragments":["is"]},{"Key":"not attempt","Fragments":["calculation"]},{"Key":"attempt calculation","Fragments":["on"]},{"Key":"calculation on","Fragments":["top-right/bottom-left"]},{"Key":"on top-right/bottom-left","Fragments":["pairs;"]},{"Key":"top-right/bottom-left pairs;","Fragments":["only"]},{"Key":"pairs; only","Fragments":["calculate"]},{"Key":"only calculate","Fragments":["for"]},{"Key":"calculate for","Fragments":["the"]},{"Key":"the top-left/bottom-right","Fragments":["pairs."]},{"Key":"top-left/bottom-right pairs.","Fragments":["This"]},{"Key":"pairs. This","Fragments":["seems"]},{"Key":"seems relatively","Fragments":["easy"]},{"Key":"relatively easy","Fragments":["to"]}],"prefix_len":2}